|| __DATA.__common _g_nbuffer_count
|| __DATA.__data _IDSActivityMonitorPresenceSubActivity
|| __DATA.__data _IDSTransactionLogErrorDomain
|| __DATA.__objc_data _OBJC_CLASS_$_IDSActivityInfo
|| __DATA.__objc_data _OBJC_CLASS_$_IDSActivityMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_IDSActivityUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_IDSAuthenticationSigningResult
|| __DATA.__objc_data _OBJC_CLASS_$_IDSBatchIDQueryController
|| __DATA.__objc_data _OBJC_CLASS_$_IDSCarrierToken
|| __DATA.__objc_data _OBJC_CLASS_$_IDSCarrierTokenRequestParameters
|| __DATA.__objc_data _OBJC_CLASS_$_IDSContinuity
|| __DATA.__objc_data _OBJC_CLASS_$_IDSDataChannelLinkContext
|| __DATA.__objc_data _OBJC_CLASS_$_IDSDatagramChannel
|| __DATA.__objc_data _OBJC_CLASS_$_IDSDeviceConnection
|| __DATA.__objc_data _OBJC_CLASS_$_IDSDictionaryInvitationContext
|| __DATA.__objc_data _OBJC_CLASS_$_IDSFamilyService
|| __DATA.__objc_data _OBJC_CLASS_$_IDSFirewall
|| __DATA.__objc_data _OBJC_CLASS_$_IDSFirewallEntry
|| __DATA.__objc_data _OBJC_CLASS_$_IDSGroupSession
|| __DATA.__objc_data _OBJC_CLASS_$_IDSGroupSessionBroadcastParameter
|| __DATA.__objc_data _OBJC_CLASS_$_IDSGroupSessionDataCryptor
|| __DATA.__objc_data _OBJC_CLASS_$_IDSGroupSessionKeyValueDelivery
|| __DATA.__objc_data _OBJC_CLASS_$_IDSGroupSessionUnicastConnector
|| __DATA.__objc_data _OBJC_CLASS_$_IDSGroupSessionUnicastParameter
|| __DATA.__objc_data _OBJC_CLASS_$_IDSInvitation
|| __DATA.__objc_data _OBJC_CLASS_$_IDSInvitationManager
|| __DATA.__objc_data _OBJC_CLASS_$_IDSKeyTransparencyManager
|| __DATA.__objc_data _OBJC_CLASS_$_IDSLocalPairingAddPairedDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_IDSLocalPairingIdentityDataErrorPair
|| __DATA.__objc_data _OBJC_CLASS_$_IDSLocalPairingLocalDeviceRecord
|| __DATA.__objc_data _OBJC_CLASS_$_IDSLocalPairingPairedDeviceRecord
|| __DATA.__objc_data _OBJC_CLASS_$_IDSLocalPairingRecord
|| __DATA.__objc_data _OBJC_CLASS_$_IDSPairedDeviceManager
|| __DATA.__objc_data _OBJC_CLASS_$_IDSPhoneCertificateVendor
|| __DATA.__objc_data _OBJC_CLASS_$_IDSPhoneSubscription
|| __DATA.__objc_data _OBJC_CLASS_$_IDSPhoneTemporaryAliasDescription
|| __DATA.__objc_data _OBJC_CLASS_$_IDSQuickRelayFixedTokenAllocator
|| __DATA.__objc_data _OBJC_CLASS_$_IDSRealTimeEncryptionProxy
|| __DATA.__objc_data _OBJC_CLASS_$_IDSReceivedInvitation
|| __DATA.__objc_data _OBJC_CLASS_$_IDSSentInvitation
|| __DATA.__objc_data _OBJC_CLASS_$_IDSServerMessagingController
|| __DATA.__objc_data _OBJC_CLASS_$_IDSServerMessagingIncomingContext
|| __DATA.__objc_data _OBJC_CLASS_$_IDSServerMessagingMessage
|| __DATA.__objc_data _OBJC_CLASS_$_IDSServerMessagingOptions
|| __DATA.__objc_data _OBJC_CLASS_$_IDSServerMessagingOutgoingContext
|| __DATA.__objc_data _OBJC_CLASS_$_IDSServiceAvailabilityController
|| __DATA.__objc_data _OBJC_CLASS_$_IDSServicePseudonymChange
|| __DATA.__objc_data _OBJC_CLASS_$_IDSSession
|| __DATA.__objc_data _OBJC_CLASS_$_IDSSignInController
|| __DATA.__objc_data _OBJC_CLASS_$_IDSSignInServiceUserInfo
|| __DATA.__objc_data _OBJC_CLASS_$_IDSSignInServiceUserStatus
|| __DATA.__objc_data _OBJC_CLASS_$_IDSTransactionLogDataMessage
|| __DATA.__objc_data _OBJC_CLASS_$_IDSTransactionLogDictionaryMessage
|| __DATA.__objc_data _OBJC_CLASS_$_IDSTransactionLogMessage
|| __DATA.__objc_data _OBJC_CLASS_$_IDSTransactionLogSyncTask
|| __DATA.__objc_data _OBJC_CLASS_$_IDSTransactionLogTask
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCActivityMonitorInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCConnection
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCConnectionRemoteObjectPromise
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCDaemonClientInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCDaemonController
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCDaemonInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCFirewallInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCGroupSessionKeyValueDeliveryInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCGroupSessionKeyValueDeliveryProviderInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCInternalTestingInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCKeyTransparencyInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCOpportunisticInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCPairedDeviceManagerInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCPairingInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCRegistrationInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCReunionSyncInterface
|| __DATA.__objc_data _OBJC_CLASS_$_IDSXPCServerMessagingInterface
|| __DATA.__objc_data _OBJC_CLASS_$__IDSActivityMonitorXPCConnector
|| __DATA.__objc_data _OBJC_CLASS_$__IDSPasswordManager
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSActivityInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSActivityMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSActivityUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSAuthenticationSigningResult
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSBatchIDQueryController
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSCarrierToken
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSCarrierTokenRequestParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSContinuity
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSDataChannelLinkContext
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSDatagramChannel
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSDeviceConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSDictionaryInvitationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSFamilyService
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSFirewall
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSFirewallEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSGroupSession
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSGroupSessionBroadcastParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSGroupSessionDataCryptor
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSGroupSessionKeyValueDelivery
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSGroupSessionUnicastConnector
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSGroupSessionUnicastParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSInvitation
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSInvitationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSKeyTransparencyManager
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSLocalPairingAddPairedDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSLocalPairingIdentityDataErrorPair
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSLocalPairingLocalDeviceRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSLocalPairingPairedDeviceRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSLocalPairingRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSPairedDeviceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSPhoneCertificateVendor
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSPhoneSubscription
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSPhoneTemporaryAliasDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSQuickRelayFixedTokenAllocator
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSRealTimeEncryptionProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSReceivedInvitation
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSSentInvitation
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSServerMessagingController
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSServerMessagingIncomingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSServerMessagingMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSServerMessagingOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSServerMessagingOutgoingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSServiceAvailabilityController
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSServicePseudonymChange
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSSession
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSSignInController
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSSignInServiceUserInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSSignInServiceUserStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSTransactionLogDataMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSTransactionLogDictionaryMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSTransactionLogMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSTransactionLogSyncTask
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSTransactionLogTask
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCActivityMonitorInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCConnectionRemoteObjectPromise
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCDaemonClientInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCDaemonController
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCDaemonInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCFirewallInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCGroupSessionKeyValueDeliveryInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCGroupSessionKeyValueDeliveryProviderInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCInternalTestingInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCKeyTransparencyInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCOpportunisticInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCPairedDeviceManagerInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCPairingInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCRegistrationInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCReunionSyncInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_IDSXPCServerMessagingInterface
|| __DATA.__objc_data _OBJC_METACLASS_$__IDSActivityMonitorXPCConnector
|| __DATA.__objc_data _OBJC_METACLASS_$__IDSPasswordManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._accountToActiveDeviceUniqueID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._accountToDevices
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._connectionComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._deviceIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._directMessagingMetadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._handlers
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._hidingDisconnect
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._internalQueueController
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._ivarQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._postedSetupComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._protocol
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._serviceToActiveDeviceUniqueID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._serviceToFamilyDevices
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._serviceToFamilyInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._serviceToLinkedDevices
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._serviceToMaxMessageSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._serviceToPendingInvitations
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._serviceToReceivedInvitations
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._setupComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._setupInfoComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._topicToAccountDictionaries
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDaemonListener._topicToEnabledAccounts
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDataChannelLinkContext._internal
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDatagramChannel._internal
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSDatagramChannel._statsTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSInvitation._context
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSInvitation._senderMergeID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSInvitation._state
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSPairedDeviceManager._allowedTrafficClassifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSPairedDeviceManager._deleteCompletion
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSPairedDeviceManager._deliveryStatsCompletion
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSPairedDeviceManager._localCompletion
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSPairedDeviceManager._pairedCompletion
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSPairedDeviceManager._xpcDaemonController
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSQuickRelayFixedTokenAllocator._appleID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSQuickRelayFixedTokenAllocator._relayCombinedSoftwareID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSQuickRelayFixedTokenAllocator._relayIP
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSQuickRelayFixedTokenAllocator._relayPort
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSQuickRelayFixedTokenAllocator._relaySessionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSQuickRelayFixedTokenAllocator._relaySessionKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSQuickRelayFixedTokenAllocator._relaySessionToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSTransactionLogDataMessage._dataValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSTransactionLogDictionaryMessage._dictionaryValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSTransactionLogMessage._accountUniqueID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSTransactionLogMessage._fromID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSTransactionLogMessage._loginID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSTransactionLogMessage._serviceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSTransactionLogSyncTask._batchProcessingBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSTransactionLogSyncTask._knownRecordIDsFromList
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSTransactionLogTask._completionBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSXPCConnectionRemoteObjectPromise._interface
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSXPCConnectionRemoteObjectPromise._pendingInvocations
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSXPCConnectionRemoteObjectPromise._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSXPCConnectionRemoteObjectPromise._target
|| __DATA_CONST.__const _IDSActivityMonitorErrorDomain
|| __DATA_CONST.__const _IDSBatchIDQueryControllerErrorDestinationSet
|| __DATA_CONST.__const _IDSBatchIDQueryControllerErrorDomain
|| __DATA_CONST.__const _IDSDaemonConnectionLostNotification
|| __DATA_CONST.__const _IDSDaemonDidConnectNotification
|| __DATA_CONST.__const _IDSDaemonDidDisconnectNotification
|| __DATA_CONST.__const _IDSDaemonWillConnectNotification
|| __DATA_CONST.__const _IDSDataChannelBasebandNotificationOperationKey
|| __DATA_CONST.__const _IDSDataChannelBasebandRegistrationKey
|| __DATA_CONST.__const _IDSDataChannelCellularMTUChangedKey
|| __DATA_CONST.__const _IDSDataChannelCellularSoMaskChangedKey
|| __DATA_CONST.__const _IDSDataChannelConnectedLinkKey
|| __DATA_CONST.__const _IDSDataChannelDebugDataKey
|| __DATA_CONST.__const _IDSDataChannelDebugDataTypeKey
|| __DATA_CONST.__const _IDSDataChannelDefaultLinkIDKey
|| __DATA_CONST.__const _IDSDataChannelDefaultLinkKey
|| __DATA_CONST.__const _IDSDataChannelDisconnectedLinkIDsKey
|| __DATA_CONST.__const _IDSDataChannelDisconnectedLinkKey
|| __DATA_CONST.__const _IDSDataChannelDisconnectedLinkUUIDsKey
|| __DATA_CONST.__const _IDSDataChannelDisconnectedReasonKey
|| __DATA_CONST.__const _IDSDataChannelEncryptionInfoKey
|| __DATA_CONST.__const _IDSDataChannelErrorKey
|| __DATA_CONST.__const _IDSDataChannelEventCellularLocalAttributesChangedKey
|| __DATA_CONST.__const _IDSDataChannelEventMembershipChangedReasonKey
|| __DATA_CONST.__const _IDSDataChannelEventProbingResponseKey
|| __DATA_CONST.__const _IDSDataChannelEventReportingBlobKey
|| __DATA_CONST.__const _IDSDataChannelEventSessionInfoResponseKey
|| __DATA_CONST.__const _IDSDataChannelEventStatResponseKey
|| __DATA_CONST.__const _IDSDataChannelEventTypeKey
|| __DATA_CONST.__const _IDSDataChannelEventWiFiLocalAttributesChangedKey
|| __DATA_CONST.__const _IDSDataChannelInfoReportEventsKey
|| __DATA_CONST.__const _IDSDataChannelMaxBitrateKey
|| __DATA_CONST.__const _IDSDataChannelPreConnectionDataKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceBasebandQueueFlushKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceBasebandQueueFlushPayloadKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceBasebandRegistrationKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceDefaultLinkSelectionKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceDiscardLinkIDsKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceNeedsEncryptionInfoKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceNeedsForceUpdateEncryptionInfoKey
|| __DATA_CONST.__const _IDSDataChannelPreferencePreConnectionDataKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceQueryInformationKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceRemoteDeviceVersionKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceSetDebugDataKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceSetDebugDataTypeKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceSetMaxBitrateKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceUpdateQualityOfServiceIsGoodKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceUpdateQualityOfServiceKey
|| __DATA_CONST.__const _IDSDataChannelPreferenceWaitForPreConnectionDataKey
|| __DATA_CONST.__const _IDSDataChannelRATChangedKey
|| __DATA_CONST.__const _IDSDataChannelRSSIKey
|| __DATA_CONST.__const _IDSErrorDomain
|| __DATA_CONST.__const _IDSIDQueryControllerErrorDestinationSet
|| __DATA_CONST.__const _IDSIDQueryControllerErrorDomain
|| __DATA_CONST.__const _IDSKeyRollingCompleteNotification
|| __DATA_CONST.__const _IDSKeyTransparencyManagerErrorDomain
|| __DATA_CONST.__const _IDSLinkPreferenceOptionInputBytesPerSecondKey
|| __DATA_CONST.__const _IDSLinkPreferenceOptionIntent
|| __DATA_CONST.__const _IDSLinkPreferenceOptionLinkTypeKey
|| __DATA_CONST.__const _IDSLinkPreferenceOptionOutputBytesPerSecondKey
|| __DATA_CONST.__const _IDSLinkPreferenceOptionPacketsPerSecondKey
|| __DATA_CONST.__const _IDSLinkPreferenceOptionTimestamp
|| __DATA_CONST.__const _IDSPhoneCertificateVendorErrorDomain
|| __DATA_CONST.__const _IDSPhoneSubscriptionSelectorErrorDomain
|| __DATA_CONST.__const _IDSSendMessageOptionAccessTokenKey
|| __DATA_CONST.__const _IDSSendMessageOptionActivityContinuationKey
|| __DATA_CONST.__const _IDSSendMessageOptionAllowCloudDeliveryKey
|| __DATA_CONST.__const _IDSSendMessageOptionAlternateCallbackIdentifierKey
|| __DATA_CONST.__const _IDSSendMessageOptionAlwaysSkipSelfKey
|| __DATA_CONST.__const _IDSSendMessageOptionBypassDuetKey
|| __DATA_CONST.__const _IDSSendMessageOptionCommandKey
|| __DATA_CONST.__const _IDSSendMessageOptionCompressPayloadKey
|| __DATA_CONST.__const _IDSSendMessageOptionDataToEncryptKey
|| __DATA_CONST.__const _IDSSendMessageOptionDeliveryMinimumTimeKey
|| __DATA_CONST.__const _IDSSendMessageOptionDeliveryStatusContextKey
|| __DATA_CONST.__const _IDSSendMessageOptionDeliveryTimeKey
|| __DATA_CONST.__const _IDSSendMessageOptionDirectMessaging
|| __DATA_CONST.__const _IDSSendMessageOptionDisableAliasValidationKey
|| __DATA_CONST.__const _IDSSendMessageOptionDropMessageIndicatorKey
|| __DATA_CONST.__const _IDSSendMessageOptionDuetIdentifiersOverrideKey
|| __DATA_CONST.__const _IDSSendMessageOptionDuetKey
|| __DATA_CONST.__const _IDSSendMessageOptionEncryptPayloadKey
|| __DATA_CONST.__const _IDSSendMessageOptionEnforceRemoteTimeoutsKey
|| __DATA_CONST.__const _IDSSendMessageOptionExpectsPeerResponseKey
|| __DATA_CONST.__const _IDSSendMessageOptionFakeMessage
|| __DATA_CONST.__const _IDSSendMessageOptionFireAndForgetKey
|| __DATA_CONST.__const _IDSSendMessageOptionForceEncryptionOffKey
|| __DATA_CONST.__const _IDSSendMessageOptionForceLocalDeliveryKey
|| __DATA_CONST.__const _IDSSendMessageOptionFromIDKey
|| __DATA_CONST.__const _IDSSendMessageOptionHomeKitMessageKey
|| __DATA_CONST.__const _IDSSendMessageOptionInterestingRegistrationPropertiesKey
|| __DATA_CONST.__const _IDSSendMessageOptionLiveMessageDeliveryKey
|| __DATA_CONST.__const _IDSSendMessageOptionLocalDeliveryKey
|| __DATA_CONST.__const _IDSSendMessageOptionMapTileKey
|| __DATA_CONST.__const _IDSSendMessageOptionMetricReportIdentifierKey
|| __DATA_CONST.__const _IDSSendMessageOptionNSURLSessionKey
|| __DATA_CONST.__const _IDSSendMessageOptionNonCloudWakingKey
|| __DATA_CONST.__const _IDSSendMessageOptionNonWakingKey
|| __DATA_CONST.__const _IDSSendMessageOptionOpportunisticDuetKey
|| __DATA_CONST.__const _IDSSendMessageOptionOriginalTimestampKey
|| __DATA_CONST.__const _IDSSendMessageOptionPeerResponseIdentifierKey
|| __DATA_CONST.__const _IDSSendMessageOptionPublicMessageIntentKey
|| __DATA_CONST.__const _IDSSendMessageOptionPushPriorityKey
|| __DATA_CONST.__const _IDSSendMessageOptionQueueOneIdentifierKey
|| __DATA_CONST.__const _IDSSendMessageOptionRequireAllRegistrationPropertiesKey
|| __DATA_CONST.__const _IDSSendMessageOptionRequireBluetoothKey
|| __DATA_CONST.__const _IDSSendMessageOptionRequireLackOfRegistrationPropertiesKey
|| __DATA_CONST.__const _IDSSendMessageOptionRequireLocalWiFiKey
|| __DATA_CONST.__const _IDSSendMessageOptionSendModeKey
|| __DATA_CONST.__const _IDSSendMessageOptionSkipPayloadCheckKey
|| __DATA_CONST.__const _IDSSendMessageOptionSockPuppetKey
|| __DATA_CONST.__const _IDSSendMessageOptionSubServiceKey
|| __DATA_CONST.__const _IDSSendMessageOptionTetheringKey
|| __DATA_CONST.__const _IDSSendMessageOptionTimeoutKey
|| __DATA_CONST.__const _IDSSendMessageOptionTopLevelDictionaryKey
|| __DATA_CONST.__const _IDSSendMessageOptionUUIDKey
|| __DATA_CONST.__const _IDSSendMessageOptionWantsCertifiedDeliveryKey
|| __DATA_CONST.__const _IDSSendMessageOptionWantsClientAcknowledgementKey
|| __DATA_CONST.__const _IDSSendMessageOptionWantsDeliveryStatusKey
|| __DATA_CONST.__const _IDSSendMessageOptionWantsFirewallDonation
|| __DATA_CONST.__const _IDSSendMessageOptionWantsProgress
|| __DATA_CONST.__const _IDSSendMessageOptionWantsResponseKey
|| __DATA_CONST.__const _IDSServerMessagingErrorDomain
|| __DATA_CONST.__const _IDSServiceAvailabilityAvailabilityKey
|| __DATA_CONST.__const _IDSServiceAvailabilityDidChangeNotification
|| __DATA_CONST.__const _IDSServiceAvailabilityServiceTypeKey
|| __DATA_CONST.__const _IDSServiceNameCalling
|| __DATA_CONST.__const _IDSServiceNameFaceTime
|| __DATA_CONST.__const _IDSServiceNameFaceTimeMulti
|| __DATA_CONST.__const _IDSServiceNameFaceTimeMultiway
|| __DATA_CONST.__const _IDSServiceNameMaps
|| __DATA_CONST.__const _IDSServiceNameMultiplex1
|| __DATA_CONST.__const _IDSServiceNamePhotoStream
|| __DATA_CONST.__const _IDSServiceNameQuickRelayFaceTime
|| __DATA_CONST.__const _IDSServiceNameSMSRelay
|| __DATA_CONST.__const _IDSServiceNameScreenSharing
|| __DATA_CONST.__const _IDSServiceNameSpringBoardNotificationSync
|| __DATA_CONST.__const _IDSServiceNameiMessage
|| __DATA_CONST.__const _IDSServiceNameiMessageForBusiness
|| __DATA_CONST.__const _IDSSessionDirection
|| __DATA_CONST.__const _IDSSignInControllerErrorAccountKey
|| __DATA_CONST.__const _IDSSignInControllerErrorDomain
|| __DATA_CONST.__const _IDSSignInControllerInternalErrorDomain
|| __DATA_CONST.__const _IDSXPCConnectionErrorDomain
|| __DATA_CONST.__const _IDSXPCDaemonMachServiceName
|| __DATA_CONST.__const __IDSDaemonDidConnectNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSAccountController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSDaemonController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSDaemonListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSIDQueryController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSLogging
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSPhoneSubscriptionSelector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSTransportLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__IDSXPCCheckinManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSAccountController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSDaemonController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSDaemonListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSIDQueryController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSLogging
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSPhoneSubscriptionSelector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSTransportLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__IDSXPCCheckinManager
|| __TEXT.__const _IDSXPCDaemonControllerDefaultTimeout
|| __TEXT.__text _ACAccountForIDSAccount
|| __TEXT.__text _IDSActivityMonitorMaxTokenCount
|| __TEXT.__text _IDSAddPairedDevice
|| __TEXT.__text _IDSAppleCareSetDaemonDisconnectedBlock
|| __TEXT.__text _IDSAppleCareSignIDSIn
|| __TEXT.__text _IDSAppleCareSignIDSOut
|| __TEXT.__text _IDSCTSIMSlotFromSubscriptionSlot
|| __TEXT.__text _IDSCheckiMessageUnknownSender
|| __TEXT.__text _IDSClearState
|| __TEXT.__text _IDSConfigureDemoMode
|| __TEXT.__text _IDSConnectPairedDevice
|| __TEXT.__text _IDSCopyAddressDestinationForDestination
|| __TEXT.__text _IDSCopyBestGuessIDForID
|| __TEXT.__text _IDSCopyForDevice
|| __TEXT.__text _IDSCopyIDForAccessory
|| __TEXT.__text _IDSCopyIDForAccount
|| __TEXT.__text _IDSCopyIDForAnonymousCloudIdentifier
|| __TEXT.__text _IDSCopyIDForBusinessID
|| __TEXT.__text _IDSCopyIDForDevice
|| __TEXT.__text _IDSCopyIDForEmailAddress
|| __TEXT.__text _IDSCopyIDForPhoneNumber
|| __TEXT.__text _IDSCopyIDForPhoneNumberWithOptions
|| __TEXT.__text _IDSCopyIDForPseudonymID
|| __TEXT.__text _IDSCopyIDForRapportPublicDeviceIdentifier
|| __TEXT.__text _IDSCopyIDForSession
|| __TEXT.__text _IDSCopyIDForTemporaryID
|| __TEXT.__text _IDSCopyIDForTokenWithID
|| __TEXT.__text _IDSCopyLocalDeviceUniqueID
|| __TEXT.__text _IDSCopyRawAddressForDestination
|| __TEXT.__text _IDSCopyTokenAndIDForTokenWithID
|| __TEXT.__text _IDSDeletePairedDevice
|| __TEXT.__text _IDSDeletePairedDeviceWithCompletion
|| __TEXT.__text _IDSDeletePairedDeviceWithCompletionBlock
|| __TEXT.__text _IDSDropAllMessagesWithoutAnyAllowedTrafficClassifier
|| __TEXT.__text _IDSFZIDTypeFromIDSIDType
|| __TEXT.__text _IDSGameCenterModify
|| __TEXT.__text _IDSGameCenterSignIn
|| __TEXT.__text _IDSGameCenterSignOut
|| __TEXT.__text _IDSGetAdminAccessTokensWithCompletionBlock
|| __TEXT.__text _IDSGetAllowedTrafficClassifiersForDevice
|| __TEXT.__text _IDSGetConsentTokensWithCompletionBlock
|| __TEXT.__text _IDSGetDeliveryStatsWithCompletionBlock
|| __TEXT.__text _IDSGetPairedDevices
|| __TEXT.__text _IDSGetPairedDevicesWithCompletionBlock
|| __TEXT.__text _IDSGetServiceUserIDsWithCompletionBlock
|| __TEXT.__text _IDSGetUserAccessTokensWithCompletionBlock
|| __TEXT.__text _IDSHardDeregister
|| __TEXT.__text _IDSIDHasToken
|| __TEXT.__text _IDSIDSIDTypeFromFZIDType
|| __TEXT.__text _IDSIncomingAccountSyncMessage
|| __TEXT.__text _IDSInitialLocalSyncCompleted
|| __TEXT.__text _IDSInitialLocalSyncCompletedForServices
|| __TEXT.__text _IDSInitialLocalSyncStarted
|| __TEXT.__text _IDSInitialLocalSyncStartedForServices
|| __TEXT.__text _IDSKickGetDependent
|| __TEXT.__text _IDSLocalPairingAddPairedDevice
|| __TEXT.__text _IDSLocalPairingAddPairedDeviceWithInfo
|| __TEXT.__text _IDSLocalPairingConnectPairedDevice
|| __TEXT.__text _IDSLocalPairingDeletePairedDevice
|| __TEXT.__text _IDSLocalPairingDisconnectActivePairedDevice
|| __TEXT.__text _IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier
|| __TEXT.__text _IDSLocalPairingForgetPairedDevice
|| __TEXT.__text _IDSLocalPairingGetAllowedTrafficClassifiersForDevice
|| __TEXT.__text _IDSLocalPairingGetPairedDevicesWithCompletionBlock
|| __TEXT.__text _IDSLocalPairingGetPairingDevicesWithCompletionBlock
|| __TEXT.__text _IDSLocalPairingGetPairingRecordsWithCompletionBlock
|| __TEXT.__text _IDSLocalPairingGetParingRecordsWithCompletionBlock
|| __TEXT.__text _IDSLocalPairingRedeliverMessages
|| __TEXT.__text _IDSLocalPairingReunionSyncCompletedForServices
|| __TEXT.__text _IDSLocalPairingReunionSyncStartedForServices
|| __TEXT.__text _IDSLocalPairingSetAllowedTrafficClassifiersForDevice
|| __TEXT.__text _IDSLocalPairingSetupCompletedForPairedDevice
|| __TEXT.__text _IDSLocalPairingStopForDevice
|| __TEXT.__text _IDSLocalPairingSwitchActivePairedDevice
|| __TEXT.__text _IDSLocalPairingUnpairForDevice
|| __TEXT.__text _IDSLocalPairingUnpairStartForDevice
|| __TEXT.__text _IDSLocalPairingUpdatePairedDevicePairingType
|| __TEXT.__text _IDSLocalSetupCompleted
|| __TEXT.__text _IDSLocalSetupStart
|| __TEXT.__text _IDSLocalSetupStop
|| __TEXT.__text _IDSLocalSetupUnpair
|| __TEXT.__text _IDSLocalSetupUnpairStart
|| __TEXT.__text _IDSLog
|| __TEXT.__text _IDSOSVersionCompare
|| __TEXT.__text _IDSOSVersionFromString
|| __TEXT.__text _IDSReRegister
|| __TEXT.__text _IDSRefreshUserAccessTokensWithCompletionBlock
|| __TEXT.__text _IDSRegistrationControlDisableRegistrationType
|| __TEXT.__text _IDSRegistrationControlEnableRegistrationType
|| __TEXT.__text _IDSRegistrationControlGetStateForRegistrationType
|| __TEXT.__text _IDSRegistrationControlSyncGetStateForRegistrationType
|| __TEXT.__text _IDSRepairAccounts
|| __TEXT.__text _IDSReportiMessageSpam
|| __TEXT.__text _IDSReportiMessageUnknownSender
|| __TEXT.__text _IDSReportiMessageUnknownSenderWithBlackholeStatus
|| __TEXT.__text _IDSSecurityKeyRollingRegenerateRegisteredIdentity
|| __TEXT.__text _IDSSecurityKeyRollingRollKeys
|| __TEXT.__text _IDSServiceCalculatedPseudonymChanges
|| __TEXT.__text _IDSSetAllowedTrafficClassifiersForDevice
|| __TEXT.__text _IDSSubscriptionSlotFromCTSIMSlot
|| __TEXT.__text _IDSTriggerFinalDeregister
|| __TEXT.__text _IDSTypeForID
|| __TEXT.__text _IDSUpdateUser
|| __TEXT.__text _IDSWarn
|| __TEXT.__text _IDSiCloudModify
|| __TEXT.__text _IDSiCloudSignIn
|| __TEXT.__text _IDSiCloudSignInHack
|| __TEXT.__text _IDSiCloudSignOut
|| __TEXT.__text _IDSiCloudSignOutHack
|| __TEXT.__text _IDSiCloudUpdate
|| __TEXT.__text _IDSiTunesSignIn
|| __TEXT.__text _IDSiTunesSignOut
|| __TEXT.__text _cfs_client_blob_destroy
|| __TEXT.__text _cfs_client_blob_get_clientid
|| __TEXT.__text _cfs_client_blob_get_data
|| __TEXT.__text _cfs_client_blob_set_destroy
|| __TEXT.__text _cfs_client_blob_set_get_blob
|| __TEXT.__text _cfs_client_blob_set_get_count
|| __TEXT.__text _cfs_client_create
|| __TEXT.__text _cfs_client_destroy
|| __TEXT.__text _cfs_client_send_broadcast_request
|| __TEXT.__text _cfs_client_send_join_request
|| __TEXT.__text _cfs_client_send_leave_request
|| __TEXT.__text _cfs_client_send_query_request
|| __TEXT.__text _deserialize_bytes
|| __TEXT.__text _deserialize_reply_header
|| __TEXT.__text _deserialize_request_broadcast
|| __TEXT.__text _deserialize_request_header
|| __TEXT.__text _deserialize_request_join
|| __TEXT.__text _deserialize_request_leave
|| __TEXT.__text _deserialize_request_query
|| __TEXT.__text _deserialize_uint16
|| __TEXT.__text _deserialize_uint32
|| __TEXT.__text _deserialize_uint32_peek
|| __TEXT.__text _deserialize_uint64
|| __TEXT.__text _deserialize_uint8
|| __TEXT.__text _nbuffer_append
|| __TEXT.__text _nbuffer_compact
|| __TEXT.__text _nbuffer_create
|| __TEXT.__text _nbuffer_destroy
|| __TEXT.__text _nbuffer_ensure_capacity
|| __TEXT.__text _nbuffer_ensure_freespace
|| __TEXT.__text _request_broadcast_cleanup
|| __TEXT.__text _request_broadcast_init
|| __TEXT.__text _request_join_cleanup
|| __TEXT.__text _request_join_init
|| __TEXT.__text _serialize_reply_header
|| __TEXT.__text _serialize_request_broadcast
|| __TEXT.__text _serialize_request_join
|| __TEXT.__text _serialize_request_leave
|| __TEXT.__text _serialize_request_query
|| __TEXT.__text _set_request_size_max
__ CommonUtilities: _CUTIsInternalInstall
__ CommonUtilities: _CUTProcessNameForPid
__ CommonUtilities: _OBJC_CLASS_$_CUTAsyncReducer
__ CommonUtilities: _OBJC_CLASS_$_CUTDeferredTaskQueue
__ CommonUtilities: _OBJC_CLASS_$_CUTPromiseSeal
__ CommonUtilities: _OBJC_CLASS_$_CUTResult
__ CommonUtilities: _OBJC_CLASS_$_CUTWeakReference
__ CommonUtilities: _cut_arc_os_release
__ CommonUtilities: _cut_dispatch_log_queue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFReadStreamSetProperty
__ CoreFoundation: _CFStreamCreatePairWithSocket
__ CoreFoundation: _CFStringGetMaximumSizeOfFileSystemRepresentation
__ CoreFoundation: _CFWriteStreamSetProperty
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFStreamPropertyShouldCloseNativeSocket
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ Engram: _OBJC_CLASS_$_ENAccountIdentity
__ Engram: _OBJC_CLASS_$_ENGroup
__ Engram: _OBJC_CLASS_$_ENGroupContext
__ Engram: _OBJC_CLASS_$_ENGroupContextNotifyingObserver
__ Engram: _OBJC_CLASS_$_ENGroupID
__ Engram: _OBJC_CLASS_$_ENLog
__ Engram: _OBJC_CLASS_$_ENParticipant
__ Foundation: _NSAllMapTableValues
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSMapMember
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSProtocolChecker
__ Foundation: _OBJC_CLASS_$_NSProxy
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSProxy
__ Foundation: __NSXPCConnectionInvocationReplyToSelectorKey
__ Foundation: __NSXPCConnectionInvocationReplyUserInfoKey
__ IDSFoundation: _IDSAccountRegistrationErrorDomain
__ IDSFoundation: _IDSAuthenticationDictionaryKeyAppleID
__ IDSFoundation: _IDSAuthenticationDictionaryKeyAuthToken
__ IDSFoundation: _IDSAuthenticationDictionaryKeyHandles
__ IDSFoundation: _IDSAuthenticationDictionaryKeyPassword
__ IDSFoundation: _IDSAuthenticationDictionaryKeyProfileID
__ IDSFoundation: _IDSAuthenticationDictionaryKeySelfHandle
__ IDSFoundation: _IDSByteBufferInitForRead
__ IDSFoundation: _IDSByteBufferInitForWrite
__ IDSFoundation: _IDSByteBufferInitForWriteWithAllocatedSpace
__ IDSFoundation: _IDSByteBufferReadField
__ IDSFoundation: _IDSByteBufferRelease
__ IDSFoundation: _IDSByteBufferWriteField
__ IDSFoundation: _IDSClientInvitationContextDataKey
__ IDSFoundation: _IDSClientInvitationContextPayloadKey
__ IDSFoundation: _IDSClientInvitationContextSchemaKey
__ IDSFoundation: _IDSClientInvitationContextTypeKey
__ IDSFoundation: _IDSClientInvitationExpirationDateKey
__ IDSFoundation: _IDSClientInvitationSenderMergeIDKey
__ IDSFoundation: _IDSClientInvitationStateKey
__ IDSFoundation: _IDSClientInvitationUniqueIDKey
__ IDSFoundation: _IDSContinuityErrorDomain
__ IDSFoundation: _IDSDSessionMessageContext
__ IDSFoundation: _IDSDSessionMessageInviteOptions
__ IDSFoundation: _IDSDataChannelErrorDomain
__ IDSFoundation: _IDSDataChannelIsLocallyGeneratedKey
__ IDSFoundation: _IDSDataChannelLinkIDKey
__ IDSFoundation: _IDSDataChannelMKIArrivalTimeKey
__ IDSFoundation: _IDSDataChannelMKIUUIDKey
__ IDSFoundation: _IDSDataChannelNumberReorderedPacketsKey
__ IDSFoundation: _IDSDataChannelNumberRequestsKey
__ IDSFoundation: _IDSDataChannelNumberResponseKey
__ IDSFoundation: _IDSDataChannelPacketArrivalTimeKey
__ IDSFoundation: _IDSDataChannelProbingRequestOffsetAndRTTKey
__ IDSFoundation: _IDSDataChannelQualityOfServiceDropOperationKey
__ IDSFoundation: _IDSDataChannelQualityOfServiceOffsetBytesKey
__ IDSFoundation: _IDSDataChannelQualityOfServicePayloadTypeKey
__ IDSFoundation: _IDSDataChannelQualityOfServiceTimestampValueKey
__ IDSFoundation: _IDSDataChannelQualityOfServiceTransactionIDKey
__ IDSFoundation: _IDSDataChannelTimeStampKey
__ IDSFoundation: _IDSDataProtectionClassStringFromDataProtectionClass
__ IDSFoundation: _IDSDatagramChannelNWContextKey
__ IDSFoundation: _IDSDatagramChannelOperationModeKey
__ IDSFoundation: _IDSDatagramChannelPreferredDataPathKey
__ IDSFoundation: _IDSDefaultPairedDevice
__ IDSFoundation: _IDSDeviceConnectionAWDMetricsClientInitKey
__ IDSFoundation: _IDSDeviceConnectionAWDMetricsClientOpenSocketCompletionKey
__ IDSFoundation: _IDSDeviceConnectionAWDMetricsDaemonCompletionHandlerKey
__ IDSFoundation: _IDSDeviceConnectionAWDMetricsDaemonOpenSocketKey
__ IDSFoundation: _IDSDeviceConnectionAWDMetricsServiceNameKey
__ IDSFoundation: _IDSDeviceConnectionAWDMetricsSuccessKey
__ IDSFoundation: _IDSDeviceConnectionMetricClientInitToClientCompletionHandlerKey
__ IDSFoundation: _IDSDeviceConnectionMetricClientInitToDaemonOpenSocketKey
__ IDSFoundation: _IDSDeviceConnectionMetricDaemonCompletionHandlerToClientCompletionHandlerKey
__ IDSFoundation: _IDSDeviceConnectionMetricDaemonOpenSocketToDaemonCompletionHandlerKey
__ IDSFoundation: _IDSDeviceConnectionMetricServiceNameKey
__ IDSFoundation: _IDSDeviceConnectionMetricSuccessKey
__ IDSFoundation: _IDSDeviceConnectionOptionLocalPriorityKey
__ IDSFoundation: _IDSDevicePropertyClientData
__ IDSFoundation: _IDSDevicePropertyDefaultLocalDevice
__ IDSFoundation: _IDSDevicePropertyDefaultPairedDevice
__ IDSFoundation: _IDSDevicePropertyHardwareVersion
__ IDSFoundation: _IDSDevicePropertyIdentifierOverride
__ IDSFoundation: _IDSDevicePropertyIdentities
__ IDSFoundation: _IDSDevicePropertyIdentitiesURI
__ IDSFoundation: _IDSDevicePropertyIsActivePairedDevice
__ IDSFoundation: _IDSDevicePropertyIsHSATrustedDevice
__ IDSFoundation: _IDSDevicePropertyLinkedUserURIs
__ IDSFoundation: _IDSDevicePropertyMaxCompatibilityVersion
__ IDSFoundation: _IDSDevicePropertyMinCompatibilityVersion
__ IDSFoundation: _IDSDevicePropertyNSUUID
__ IDSFoundation: _IDSDevicePropertyName
__ IDSFoundation: _IDSDevicePropertyPairingProtocolVersion
__ IDSFoundation: _IDSDevicePropertyPairingType
__ IDSFoundation: _IDSDevicePropertyPrivateDeviceData
__ IDSFoundation: _IDSDevicePropertyPushToken
__ IDSFoundation: _IDSDevicePropertyService
__ IDSFoundation: _IDSDevicePropertyStableBluetoothIdentifier
__ IDSFoundation: _IDSDeviceServicePropertyMinCompatibilityVersion
__ IDSFoundation: _IDSDeviceStateTokenPrefix
__ IDSFoundation: _IDSDeviceTypeFromProductName
__ IDSFoundation: _IDSExpirationDateKey
__ IDSFoundation: _IDSFamilyDeviceOwnerHandleKey
__ IDSFoundation: _IDSFamilyHandlesKey
__ IDSFoundation: _IDSFamilyMemberAppleIDKey
__ IDSFoundation: _IDSFamilyMemberDSIDKey
__ IDSFoundation: _IDSFamilyMemberDevicesKey
__ IDSFoundation: _IDSFamilyMembersKey
__ IDSFoundation: _IDSGenericErrorDomain
__ IDSFoundation: _IDSGetMainBundleIdentifier
__ IDSFoundation: _IDSGetUUIDData
__ IDSFoundation: _IDSGroupSessionConversationIDKey
__ IDSFoundation: _IDSGroupSessionIsLightweightParticipantKey
__ IDSFoundation: _IDSGroupSessionMessagesCallerIDKey
__ IDSFoundation: _IDSGroupSessionMessagesGroupIDKey
__ IDSFoundation: _IDSGroupSessionMessagesGroupMembersKey
__ IDSFoundation: _IDSGroupSessionMessagesStableGroupIDKey
__ IDSFoundation: _IDSGroupSessionParticipantDataKey
__ IDSFoundation: _IDSGroupSessionParticipantIDKey
__ IDSFoundation: _IDSGroupSessionParticipantInfoKey
__ IDSFoundation: _IDSGroupSessionPluginNameKey
__ IDSFoundation: _IDSGroupSessionRelaySessionIDKey
__ IDSFoundation: _IDSGroupSessionStartedAsUPlusOneKey
__ IDSFoundation: _IDSGroupSessionTimeBaseKey
__ IDSFoundation: _IDSHBHDecryptDataWithKey
__ IDSFoundation: _IDSHBHEncryptDataWithKey
__ IDSFoundation: _IDSIDAliasFixedSalt
__ IDSFoundation: _IDSIDAliasHashUInt64
__ IDSFoundation: _IDSIDAliasHashUUIDString
__ IDSFoundation: _IDSIncomingMessageDecryptedDataKey
__ IDSFoundation: _IDSIncomingMessageEngramEncryptedDataKey
__ IDSFoundation: _IDSIncomingMessageEngramGroupKey
__ IDSFoundation: _IDSIncomingMessageOriginalEncryptionTypeKey
__ IDSFoundation: _IDSIncomingMessagePushPayloadKey
__ IDSFoundation: _IDSIsValidAccountType
__ IDSFoundation: _IDSIsValidSigningAlgorithm
__ IDSFoundation: _IDSLinkPacketBufferAddBufferStart
__ IDSFoundation: _IDSLinkPacketBufferCleanup
__ IDSFoundation: _IDSLocalDeviceIdentity
__ IDSFoundation: _IDSMessageContextBroadcastIDKey
__ IDSFoundation: _IDSMessageContextBroadcastTimeKey
__ IDSFoundation: _IDSMessageContextEndpointStateKey
__ IDSFoundation: _IDSMessageContextExpectsPeerResponseKey
__ IDSFoundation: _IDSMessageContextIncomingResponseIdentifierKey
__ IDSFoundation: _IDSMessageContextIsDirectMessage
__ IDSFoundation: _IDSMessageContextOriginalDestinationDeviceKey
__ IDSFoundation: _IDSMessageContextOutgoingResponseIdentifierKey
__ IDSFoundation: _IDSMessageContextSequenceNumberKey
__ IDSFoundation: _IDSMessageContextServiceIdentifierKey
__ IDSFoundation: _IDSMessageContextWPConnectionErrorCodeKey
__ IDSFoundation: _IDSMessageContextWPConnectionErrorDomainKey
__ IDSFoundation: _IDSMessageContextWPConnectionErrorUserInfoKey
__ IDSFoundation: _IDSMessageContextWantsAppAckKey
__ IDSFoundation: _IDSMessageResourceTransferMetadataKey
__ IDSFoundation: _IDSMessageResourceTransferOriginalFileSandboxExtensionKey
__ IDSFoundation: _IDSMessageResourceTransferOriginalURLKey
__ IDSFoundation: _IDSMessageResourceTransferSandboxExtensionKey
__ IDSFoundation: _IDSMessageResourceTransferURLKey
__ IDSFoundation: _IDSNetworkAgentClientChannelType
__ IDSFoundation: _IDSNetworkAgentDomain
__ IDSFoundation: _IDSNetworkAgentTransportType
__ IDSFoundation: _IDSOpenSocketOptionAWDMetricsClientInitKey
__ IDSFoundation: _IDSOpenSocketOptionAWDMetricsClientOpenSocketCompletionKey
__ IDSFoundation: _IDSOpenSocketOptionAWDMetricsSuccessKey
__ IDSFoundation: _IDSOpenSocketOptionAccountDefault
__ IDSFoundation: _IDSOpenSocketOptionAccountKey
__ IDSFoundation: _IDSOpenSocketOptionClientIDKey
__ IDSFoundation: _IDSOpenSocketOptionClientTimeoutKey
__ IDSFoundation: _IDSOpenSocketOptionConnectionUUIDKey
__ IDSFoundation: _IDSOpenSocketOptionDataProtectionClass
__ IDSFoundation: _IDSOpenSocketOptionDeviceUniqueIDKey
__ IDSFoundation: _IDSOpenSocketOptionDirectMsgType
__ IDSFoundation: _IDSOpenSocketOptionEncryptionMethodKey
__ IDSFoundation: _IDSOpenSocketOptionIsDirectMsgSocket
__ IDSFoundation: _IDSOpenSocketOptionPriorityKey
__ IDSFoundation: _IDSOpenSocketOptionServiceKey
__ IDSFoundation: _IDSOpenSocketOptionStreamNameDefault
__ IDSFoundation: _IDSOpenSocketOptionStreamNameKey
__ IDSFoundation: _IDSOpenSocketOptionTransportKey
__ IDSFoundation: _IDSPowerLogDictionary
__ IDSFoundation: _IDSPrivateDeviceDataColor
__ IDSFoundation: _IDSPrivateDeviceDataDeviceType
__ IDSFoundation: _IDSPrivateDeviceDataEnclosureColor
__ IDSFoundation: _IDSPrivateDeviceDataProductBuildVersion
__ IDSFoundation: _IDSPrivateDeviceDataProductName
__ IDSFoundation: _IDSPrivateDeviceDataProductVersion
__ IDSFoundation: _IDSPrivateDeviceDataSupportsApplePay
__ IDSFoundation: _IDSPrivateDeviceDataSupportsHandoff
__ IDSFoundation: _IDSPrivateDeviceDataSupportsMMSRelay
__ IDSFoundation: _IDSPrivateDeviceDataSupportsPhoneCalls
__ IDSFoundation: _IDSPrivateDeviceDataSupportsSMSRelay
__ IDSFoundation: _IDSPrivateDeviceDataSupportsTethering
__ IDSFoundation: _IDSPrivateDeviceDataUniqueID
__ IDSFoundation: _IDSPseudonymErrorDomain
__ IDSFoundation: _IDSRealTimeContext
__ IDSFoundation: _IDSRealTimeEncryptionLocallyGenerated
__ IDSFoundation: _IDSRealTimeEncryptionMKI
__ IDSFoundation: _IDSRealTimeEncryptionMKM
__ IDSFoundation: _IDSRealTimeEncryptionMKS
__ IDSFoundation: _IDSRealTimeEncryptionMaxSequenceNumber
__ IDSFoundation: _IDSSendErrorDomain
__ IDSFoundation: _IDSServiceReportingErrorDomain
__ IDSFoundation: _IDSSessionAccountIDKey
__ IDSFoundation: _IDSSessionAlwaysSkipSelfKey
__ IDSFoundation: _IDSSessionClientID
__ IDSFoundation: _IDSSessionClientUUIDKey
__ IDSFoundation: _IDSSessionConnectionCountHintKey
__ IDSFoundation: _IDSSessionDestinationLightWeightStatusesKey
__ IDSFoundation: _IDSSessionDestinationsKey
__ IDSFoundation: _IDSSessionDisableEncryptionKey
__ IDSFoundation: _IDSSessionDisallowCellularInterfaceKey
__ IDSFoundation: _IDSSessionDisallowWifiInterfaceKey
__ IDSFoundation: _IDSSessionErrorDomain
__ IDSFoundation: _IDSSessionInstanceIDKey
__ IDSFoundation: _IDSSessionIsMultiwayKey
__ IDSFoundation: _IDSSessionNeedsToWaitForSKEKey
__ IDSFoundation: _IDSSessionParticipantDataKey
__ IDSFoundation: _IDSSessionParticipantIDKey
__ IDSFoundation: _IDSSessionPreferCellularForCallSetupKey
__ IDSFoundation: _IDSSessionPreferredAddressFamilyKey
__ IDSFoundation: _IDSSessionSingleChannelDirectModeKey
__ IDSFoundation: _IDSSessionTransportTypeKey
__ IDSFoundation: _IDSSessionUniqueIDKey
__ IDSFoundation: _IDSSessionWaitForPreConnectionDataKey
__ IDSFoundation: _IDSSigningErrorDomain
__ IDSFoundation: _IDSTransportThreadAddBlock
__ IDSFoundation: _IDSTransportThreadAddSocket
__ IDSFoundation: _IDSTransportThreadInit
__ IDSFoundation: _IDSTransportThreadRemoveSocket
__ IDSFoundation: _IDSTransportThreadSuspendSocket
__ IDSFoundation: _IDSWildCardTopic
__ IDSFoundation: _OBJC_CLASS_$_IDSAuthenticationCertificate
__ IDSFoundation: _OBJC_CLASS_$_IDSAuthenticationCertificateSignature
__ IDSFoundation: _OBJC_CLASS_$_IDSBaseSocketPairConnection
__ IDSFoundation: _OBJC_CLASS_$_IDSCTAdapter
__ IDSFoundation: _OBJC_CLASS_$_IDSCertifiedDeliveryContext
__ IDSFoundation: _OBJC_CLASS_$_IDSDelegateInfo
__ IDSFoundation: _OBJC_CLASS_$_IDSDependencyProvider
__ IDSFoundation: _OBJC_CLASS_$_IDSDestination
__ IDSFoundation: _OBJC_CLASS_$_IDSDeviceIdentity
__ IDSFoundation: _OBJC_CLASS_$_IDSEndpoint
__ IDSFoundation: _OBJC_CLASS_$_IDSEndpointCapabilities
__ IDSFoundation: _OBJC_CLASS_$_IDSEndpointTransparencyState
__ IDSFoundation: _OBJC_CLASS_$_IDSFamilyMember
__ IDSFoundation: _OBJC_CLASS_$_IDSFoundationLog
__ IDSFoundation: _OBJC_CLASS_$_IDSGameCenterData
__ IDSFoundation: _OBJC_CLASS_$_IDSGroupEncryptionKeyManager
__ IDSFoundation: _OBJC_CLASS_$_IDSGroupEncryptionKeyMaterial
__ IDSFoundation: _OBJC_CLASS_$_IDSGroupSessionActiveParticipant
__ IDSFoundation: _OBJC_CLASS_$_IDSGroupSessionConnectionParameters
__ IDSFoundation: _OBJC_CLASS_$_IDSGroupSessionParticipantUpdate
__ IDSFoundation: _OBJC_CLASS_$_IDSHandle
__ IDSFoundation: _OBJC_CLASS_$_IDSIDInfoResult
__ IDSFoundation: _OBJC_CLASS_$_IDSIDKTData
__ IDSFoundation: _OBJC_CLASS_$_IDSKTVerificationResult
__ IDSFoundation: _OBJC_CLASS_$_IDSMPFullLegacyIdentity
__ IDSFoundation: _OBJC_CLASS_$_IDSMPPublicLegacyIdentity
__ IDSFoundation: _OBJC_CLASS_$_IDSMessage
__ IDSFoundation: _OBJC_CLASS_$_IDSMessageContext
__ IDSFoundation: _OBJC_CLASS_$_IDSMissingMessageMetric
__ IDSFoundation: _OBJC_CLASS_$_IDSOpportunisticData
__ IDSFoundation: _OBJC_CLASS_$_IDSPayloadInspector
__ IDSFoundation: _OBJC_CLASS_$_IDSProtobuf
__ IDSFoundation: _OBJC_CLASS_$_IDSPseudonym
__ IDSFoundation: _OBJC_CLASS_$_IDSPseudonymProperties
__ IDSFoundation: _OBJC_CLASS_$_IDSPseudonymRequestProperties
__ IDSFoundation: _OBJC_CLASS_$_IDSRateLimiter
__ IDSFoundation: _OBJC_CLASS_$_IDSRegistrationKeychainReader
__ IDSFoundation: _OBJC_CLASS_$_IDSSendParameters
__ IDSFoundation: _OBJC_CLASS_$_IDSServerBag
__ IDSFoundation: _OBJC_CLASS_$_IDSServiceProperties
__ IDSFoundation: _OBJC_CLASS_$_IDSSessionInfoMetadataSerializer
__ IDSFoundation: _OBJC_CLASS_$_IDSURI
__ IDSFoundation: _OBJC_METACLASS_$_IDSDelegateInfo
__ IDSFoundation: _OBJC_METACLASS_$_IDSMessage
__ IDSFoundation: _StunUtilPrepareOutgoingChannelData
__ IDSFoundation: _StunUtilProcessIncomingChannelData
__ IDSFoundation: _TrafficClassForIDSOpenSocketPriorityLevel
__ IDSFoundation: __IDSBinaryStringForValue
__ IDSFoundation: __IDSCopyCallerID
__ IDSFoundation: __IDSCopyIDForAccessory
__ IDSFoundation: __IDSCopyIDForBusinessID
__ IDSFoundation: __IDSCopyIDForEmailAddress
__ IDSFoundation: __IDSCopyIDForPhoneNumberWithOptions
__ IDSFoundation: __IDSCopyIDForPushTokenAndIdentitiesWithService
__ IDSFoundation: __IDSCopyIDForTokenWithURI
__ IDSFoundation: __IDSDestinationHasValidPrefix
__ IDSFoundation: __IDSFZIDTypeFromIDSIDType
__ IDSFoundation: __IDSIDSIDTypeFromFZIDType
__ IDSFoundation: __IDSIDTypeHasToken
__ IDSFoundation: __IDSIsValidPushPriority
__ IDSFoundation: __IDSIsValidSendMode
__ IDSFoundation: __IDSIsValidWakingPushPriority
__ IDSFoundation: __IDSLinkPacketBufferCreate
__ IDSFoundation: __IDSLinkPacketBufferRelease
__ IDSFoundation: __IDSLog
__ IDSFoundation: __IDSLogV
__ IDSFoundation: __IDSPrefersPhoneNumbersForServiceIdentifier
__ IDSFoundation: __IDSQuickRelayProtocolVersionNumber
__ IDSFoundation: __IDSRegistrationServiceTypeForString
__ IDSFoundation: __IDSRunningInDaemon
__ IDSFoundation: __IDSServiceFromRegistrationServiceType
__ IDSFoundation: __IDSShouldLog
__ IDSFoundation: __IDSStringFromIDSRegistrationStatus
__ IDSFoundation: __IDSSupportsDirectMessaging
__ IDSFoundation: __IDSTypeForID
__ IDSFoundation: __IDSWarn
__ IDSFoundation: __StringForIDSAccountType
__ IDSFoundation: _basic_system_time
__ IDSFoundation: _isRunningTests
__ IDSFoundation: _kIDSDaemonAuthGrantPortName
__ IDSFoundation: _kIDSDaemonLaunchedDistNotification
__ IDSFoundation: _kIDSDaemonQueryAuthGrantPortName
__ IDSFoundation: _kIDSDeviceStatePropertiesIsCloudConnected
__ IDSFoundation: _kIDSDeviceStatePropertiesIsConnected
__ IDSFoundation: _kIDSDeviceStatePropertiesIsNearby
__ IDSFoundation: _kIDSGeneralSpamReportSpamMessageTypeKey
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandAccessoryReportMessages
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandEngram
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandGroupSessionParticipantUpdates
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandIncomingData
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandIncomingMessages
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandIncomingProtobuf
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandIncomingResource
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandInvitationUpdates
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandNetworkAvailableHint
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandOutgoingMessageUpdates
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandPendingMessageUpdates
__ IDSFoundation: _kIDSListenerCapConsumesLaunchOnDemandSessionMessages
__ IDSFoundation: _kIDSListenerCapabilitiesCount
__ IDSFoundation: _kIDSQRAllocateKey_AppID
__ IDSFoundation: _kIDSQRAllocateKey_QRError
__ IDSFoundation: _kIDSQRAllocateKey_Reason
__ IDSFoundation: _kIDSQRAllocateKey_RelayAddress
__ IDSFoundation: _kIDSQRAllocateKey_RelayCombinedSoftwareID
__ IDSFoundation: _kIDSQRAllocateKey_RelayPort
__ IDSFoundation: _kIDSQRAllocateKey_RelaySessionID
__ IDSFoundation: _kIDSQRAllocateKey_RelaySessionKey
__ IDSFoundation: _kIDSQRAllocateKey_RelaySessionToken
__ IDSFoundation: _kIDSQuickRelayPushTopic
__ IDSFoundation: _kIDSServiceDefaultsAccountTypeKey
__ IDSFoundation: _kIDSServiceDefaultsAliasIsUserVisibleKey
__ IDSFoundation: _kIDSServiceDefaultsAliasKey
__ IDSFoundation: _kIDSServiceDefaultsAliasStatusKey
__ IDSFoundation: _kIDSServiceDefaultsAliasesKey
__ IDSFoundation: _kIDSServiceDefaultsAppleIDKey
__ IDSFoundation: _kIDSServiceDefaultsAuthorizationIDKey
__ IDSFoundation: _kIDSServiceDefaultsDisplayNameKey
__ IDSFoundation: _kIDSServiceDefaultsInvisibleAliasesKey
__ IDSFoundation: _kIDSServiceDefaultsIsTemporary
__ IDSFoundation: _kIDSServiceDefaultsLastGDRDateKey
__ IDSFoundation: _kIDSServiceDefaultsLoginAsKey
__ IDSFoundation: _kIDSServiceDefaultsPrimaryServiceNameKey
__ IDSFoundation: _kIDSServiceDefaultsProfileBaseNumberKey
__ IDSFoundation: _kIDSServiceDefaultsProfileKey
__ IDSFoundation: _kIDSServiceDefaultsProfileRegionIDKey
__ IDSFoundation: _kIDSServiceDefaultsProfileServerContextKey
__ IDSFoundation: _kIDSServiceDefaultsProfileValdationErrorCodeKey
__ IDSFoundation: _kIDSServiceDefaultsProfileValdationStatusKey
__ IDSFoundation: _kIDSServiceDefaultsPropertiesKey
__ IDSFoundation: _kIDSServiceDefaultsPseudonymsKey
__ IDSFoundation: _kIDSServiceDefaultsPushTopicKey
__ IDSFoundation: _kIDSServiceDefaultsRegisteredURIs
__ IDSFoundation: _kIDSServiceDefaultsRegistrationInfoKey
__ IDSFoundation: _kIDSServiceDefaultsRegistrationInfoStatusKey
__ IDSFoundation: _kIDSServiceDefaultsSelfHandleKey
__ IDSFoundation: _kIDSServiceDefaultsSentinelAlias
__ IDSFoundation: _kIDSServiceDefaultsSentinelSelfAlias
__ IDSFoundation: _kIDSServiceDefaultsServiceNameKey
__ IDSFoundation: _kIDSServiceDefaultsURIKey
__ IDSFoundation: _kIDSServiceDefaultsUniqueIDKey
__ IDSFoundation: _kIDSServiceDefaultsUserDisabled
__ IDSFoundation: _kIDSServiceDefaultsUserUniqueIdentifier
__ IDSFoundation: _kIDSServiceDefaultsVettedAliasesKey
__ IDSFoundation: _throwsIDSAbortException
__ IMFoundation: _IMAreEmailsLogicallyTheSame
__ IMFoundation: _IMAreObjectsLogicallySame
__ IMFoundation: _IMCanonicalizeFormattedString
__ IMFoundation: _IMCreateDictionaryFromXPCObjectWithStandardAllowlist
__ IMFoundation: _IMDispatchForNotify
__ IMFoundation: _IMGetAppValueForKey
__ IMFoundation: _IMGetDomainBoolForKey
__ IMFoundation: _IMGetDomainBoolForKeyWithDefaultValue
__ IMFoundation: _IMGetDomainIntForKey
__ IMFoundation: _IMGetDomainValueForKey
__ IMFoundation: _IMGetMainBundleIdentifier
__ IMFoundation: _IMGetXPCDataFromDictionary
__ IMFoundation: _IMGetXPCDictionaryFromDictionary
__ IMFoundation: _IMGetXPCKeyedCodableFromDictionaryWithSecureCoding
__ IMFoundation: _IMGetXPCStringFromDictionary
__ IMFoundation: _IMInsertArraysToXPCDictionary
__ IMFoundation: _IMInsertBoolsToXPCDictionary
__ IMFoundation: _IMInsertDictionariesToXPCDictionary
__ IMFoundation: _IMInsertIntsToXPCDictionary
__ IMFoundation: _IMInsertKeyedCodableObjectsToXPCDictionary
__ IMFoundation: _IMInsertNSStringsToXPCDictionary
__ IMFoundation: _IMLocalObjectDidDisconnectNotification
__ IMFoundation: _IMLogBacktrace
__ IMFoundation: _IMLogSimulateCrashForException
__ IMFoundation: _IMPowerAssertionPropertyFrameworkIDKey
__ IMFoundation: _IMPowerAssertionPropertyOnBehalfOfPIDKey
__ IMFoundation: _IMPowerAssertionPropertyOnBehalfOfPIDReasonKey
__ IMFoundation: _IMPowerAssertionPropertyPIDKey
__ IMFoundation: _IMRemoteObjectDidDisconnectNotification
__ IMFoundation: _IMShouldLog
__ IMFoundation: _IMSingleObjectArray
__ IMFoundation: _IMStringIsPhoneNumber
__ IMFoundation: _IMUserScopedNotification
__ IMFoundation: _IMWeakLinkClass
__ IMFoundation: _IMXPCConfigureConnection
__ IMFoundation: _IMXPCCreateConnectionForServiceWithQueue
__ IMFoundation: _JWCopyInvocationArguments
__ IMFoundation: _JWDecodeDictionary
__ IMFoundation: _JWEncodeDictionary
__ IMFoundation: _JWUUIDPushObjectToString
__ IMFoundation: _OBJC_CLASS_$_IMLocalObject
__ IMFoundation: _OBJC_CLASS_$_IMLockdownManager
__ IMFoundation: _OBJC_CLASS_$_IMMessageContext
__ IMFoundation: _OBJC_CLASS_$_IMOrderedMutableDictionary
__ IMFoundation: _OBJC_CLASS_$_IMPair
__ IMFoundation: _OBJC_CLASS_$_IMPowerAssertion
__ IMFoundation: _OBJC_CLASS_$_IMRGLog
__ IMFoundation: _OBJC_CLASS_$_IMRemoteObject
__ IMFoundation: _OBJC_CLASS_$_IMRemoteObjectBroadcaster
__ IMFoundation: _OBJC_CLASS_$_IMSystemMonitor
__ IMFoundation: _OBJC_CLASS_$_IMTimer
__ IMFoundation: _OBJC_CLASS_$_IMUserDefaults
__ IMFoundation: _OSLogHandleForIDSCategory
__ IMFoundation: _OSLogHandleForTransportCategory
__ IMFoundation: __IMWarn
__ IMFoundation: _im_dispatch_after_primary_queue
__ IMFoundation: _im_local_object_peer_event_handler
__ IMFoundation: _im_notify_register_dispatch
__ IMFoundation: _im_primary_queue
__ IMFoundation: _jw_uuid_to_data
__ IMFoundation: _kFZServiceDefaultsLoginAsKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoAlertInfoKey
__ IMFoundation: _kFZServiceDefaultsRegistrationInfoErrorCodeKey
__ Network: _OBJC_CLASS_$_NWDatagramConnection
__ Network: _OBJC_CLASS_$_NWHostEndpoint
__ Network: _OBJC_CLASS_$_NWParameters
__ Network: _OBJC_CLASS_$_NWStreamConnection
__ Network: __nw_content_context_default_message
__ Network: __nw_parameters_configure_protocol_default_configuration
__ Network: __nw_parameters_configure_protocol_disable
__ Network: _nw_connection_batch
__ Network: _nw_connection_cancel
__ Network: _nw_connection_copy_current_path
__ Network: _nw_connection_copy_parameters
__ Network: _nw_connection_create
__ Network: _nw_connection_create_with_client_id
__ Network: _nw_connection_create_with_connected_socket
__ Network: _nw_connection_create_with_connected_socket_and_parameters
__ Network: _nw_connection_read_multiple
__ Network: _nw_connection_receive
__ Network: _nw_connection_reset_traffic_class
__ Network: _nw_connection_send
__ Network: _nw_connection_set_event_handler
__ Network: _nw_connection_set_queue
__ Network: _nw_connection_set_state_changed_handler
__ Network: _nw_connection_start
__ Network: _nw_connection_state_to_string
__ Network: _nw_content_context_create
__ Network: _nw_content_context_set_expiration_milliseconds
__ Network: _nw_content_context_set_metadata_for_protocol
__ Network: _nw_content_context_set_packet_id
__ Network: _nw_endpoint_create_apple_service
__ Network: _nw_endpoint_create_host
__ Network: _nw_error_get_error_code
__ Network: _nw_framer_create_definition
__ Network: _nw_framer_create_options
__ Network: _nw_framer_deliver_input_no_copy
__ Network: _nw_framer_message_create
__ Network: _nw_framer_parse_input
__ Network: _nw_framer_set_input_handler
__ Network: _nw_framer_set_output_handler
__ Network: _nw_framer_write_output
__ Network: _nw_framer_write_output_no_copy
__ Network: _nw_group_descriptor_create_apple_id
__ Network: _nw_ip_create_metadata
__ Network: _nw_ip_metadata_set_service_class
__ Network: _nw_ip_options_set_disable_fragmentation
__ Network: _nw_listener_create_with_port
__ Network: _nw_listener_get_port
__ Network: _nw_listener_set_new_connection_handler
__ Network: _nw_listener_set_queue
__ Network: _nw_listener_set_state_changed_handler
__ Network: _nw_listener_start
__ Network: _nw_parameters_copy_default_protocol_stack
__ Network: _nw_parameters_create
__ Network: _nw_parameters_create_quic_stream
__ Network: _nw_parameters_create_secure_tcp
__ Network: _nw_parameters_set_account_id
__ Network: _nw_parameters_set_context
__ Network: _nw_parameters_set_data_mode
__ Network: _nw_parameters_set_indefinite
__ Network: _nw_parameters_set_local_address
__ Network: _nw_parameters_set_required_netagent_classes
__ Network: _nw_path_assert_agent
__ Network: _nw_path_create_evaluator_for_endpoint
__ Network: _nw_path_evaluator_cancel
__ Network: _nw_path_evaluator_copy_path
__ Network: _nw_path_evaluator_set_update_handler
__ Network: _nw_path_get_nexus_agent_uuid
__ Network: _nw_path_get_nexus_instance
__ Network: _nw_path_get_nexus_key
__ Network: _nw_path_request_nexus
__ Network: _nw_path_uses_nexus
__ Network: _nw_protocol_stack_append_application_protocol
__ Network: _nw_protocol_stack_copy_internet_protocol
__ Network: _nw_protocol_stack_prepend_application_protocol
__ Network: _nw_queue_context_target_dispatch_queue
__ Network: _nw_quic_connection_copy_sec_protocol_options
__ Network: _nw_tls_copy_sec_protocol_options
__ Network: _nw_tls_create_options
__ Security: _SecRandomCopyBytes
__ Security: _kSecRandomDefault
__ Security: _sec_protocol_options_add_pre_shared_key
__ Security: _sec_protocol_options_set_verify_block
__ libSystem.B.dylib: _CCCryptorCreateWithMode
__ libSystem.B.dylib: _CCCryptorGCMAddAAD
__ libSystem.B.dylib: _CCCryptorGCMDecrypt
__ libSystem.B.dylib: _CCCryptorGCMEncrypt
__ libSystem.B.dylib: _CCCryptorGCMFinalize
__ libSystem.B.dylib: _CCCryptorGCMReset
__ libSystem.B.dylib: _CCCryptorGCMSetIV
__ libSystem.B.dylib: _CCCryptorRelease
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_error_connection_interrupted
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_error_key_description
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: __xpc_type_int64
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _bind
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _clonefile
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _connect
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_data_create_f
__ libSystem.B.dylib: _dispatch_data_create_map
__ libSystem.B.dylib: _dispatch_data_get_size
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dup
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _gethostbyname
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _inet_addr
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _listen
__ libSystem.B.dylib: _localtime_r
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mktemp
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_channel_advance_slot
__ libSystem.B.dylib: _os_channel_attr_create
__ libSystem.B.dylib: _os_channel_attr_destroy
__ libSystem.B.dylib: _os_channel_attr_set
__ libSystem.B.dylib: _os_channel_attr_set_key
__ libSystem.B.dylib: _os_channel_available_slot_count
__ libSystem.B.dylib: _os_channel_create_extended
__ libSystem.B.dylib: _os_channel_destroy
__ libSystem.B.dylib: _os_channel_get_fd
__ libSystem.B.dylib: _os_channel_get_next_slot
__ libSystem.B.dylib: _os_channel_ring_id
__ libSystem.B.dylib: _os_channel_rx_ring
__ libSystem.B.dylib: _os_channel_set_slot_properties
__ libSystem.B.dylib: _os_channel_sync
__ libSystem.B.dylib: _os_channel_tx_ring
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_shim_legacy_logging_enabled
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _perror
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _proc_pidinfo
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_join
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _shutdown
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _socketpair
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strftime
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _uuid_clear
__ libSystem.B.dylib: _uuid_compare
__ libSystem.B.dylib: _uuid_copy
__ libSystem.B.dylib: _uuid_is_null
__ libSystem.B.dylib: _uuid_parse
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_set_string
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply_sync
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_copy_description
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_fd_create
__ libSystem.B.dylib: _xpc_fd_dup
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_int64_get_value
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x11
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
IDSContinuity : NSObject
 @property  long long state

  // instance methods
  -[IDSContinuity disconnectFromPeer:]
  -[IDSContinuity initWithDelegate:queue:]
  -[IDSContinuity stopScanningForType:]
  -[IDSContinuity startAdvertisingOfType:withData:withOptions:]
  -[IDSContinuity connectToPeer:]
  -[IDSContinuity startTrackingPeer:forType:]
  -[IDSContinuity state]
  -[IDSContinuity dealloc]
  -[IDSContinuity startScanningForType:withData:mask:withOptions:]
  -[IDSContinuity .cxx_destruct]
  -[IDSContinuity stopAdvertisingOfType:]
  -[IDSContinuity stopTrackingPeer:forType:]
  -[IDSContinuity startScanningForType:withData:mask:withOptions:boostedScan:duplicates:]
  -[IDSContinuity startScanningForType:withData:mask:peers:withOptions:]
  -[IDSContinuity startScanningForType:withData:mask:withOptions:boostedScan:]
  -[IDSContinuity startScanningForType:withData:mask:peers:withOptions:boostedScan:]
  -[IDSContinuity startScanningForType:withData:withOptions:]
  -[IDSContinuity startScanningForType:withData:peers:withOptions:]
  -[IDSContinuity startTrackingPeer:]
  -[IDSContinuity stopTrackingPeer:]
  -[IDSContinuity startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:]


IDSDaemonController : NSObject <IDSDaemonProtocol>
 @property  BOOL _autoReconnect
 @property  NSObject<OS_dispatch_queue> *_remoteMessageQueue
 @property  NSObject<OS_dispatch_queue> *connectingQueue
 @property  id delegate
 @property  BOOL isConnecting
 @property  IMRemoteObject<IDSDaemonProtocol> *remoteObject
 @property  NSString *listenerID
 @property  IDSDaemonListener *listener
 @property  int curXPCMessagePriority
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IDSDaemonController sharedInstance]
  +[IDSDaemonController _blockUntilSendQueueIsEmpty]
  +[IDSDaemonController _applicationWillTerminate]
  +[IDSDaemonController _setApplicationWillTerminate]

  // instance methods
  -[IDSDaemonController _performBlock:]
  -[IDSDaemonController removeListenerID:]
  -[IDSDaemonController connectToDaemonWithLaunch:]
  -[IDSDaemonController addedDelegateForService:withCompletion:]
  -[IDSDaemonController listenerID]
  -[IDSDaemonController _noteSetupComplete]
  -[IDSDaemonController systemApplicationDidResume]
  -[IDSDaemonController hasListenerForID:]
  -[IDSDaemonController setCapabilities:forListenerID:shouldLog:]
  -[IDSDaemonController capabilitiesForListenerID:]
  -[IDSDaemonController disconnectFromDaemon]
  -[IDSDaemonController blockUntilConnected]
  -[IDSDaemonController _blockUntilSendQueueIsEmpty]
  -[IDSDaemonController connectToDaemon]
  -[IDSDaemonController isConnecting]
  -[IDSDaemonController remoteObject]
  -[IDSDaemonController isConnected]
  -[IDSDaemonController localObject]
  -[IDSDaemonController setDelegate:]
  -[IDSDaemonController _noteDisconnected]
  -[IDSDaemonController localObjectExists]
  -[IDSDaemonController _connectToDaemonWithLaunch:services:commands:capabilities:]
  -[IDSDaemonController unsetQueryContext:]
  -[IDSDaemonController delegate]
  -[IDSDaemonController services]
  -[IDSDaemonController setRemoteObject:]
  -[IDSDaemonController dealloc]
  -[IDSDaemonController forwardMethodWithReplyIsSync:block:]
  -[IDSDaemonController setCurXPCMessagePriority:]
  -[IDSDaemonController _performBlock:wait:]
  -[IDSDaemonController localObjectDiedNotification:]
  -[IDSDaemonController _listenerSetUpdated]
  -[IDSDaemonController .cxx_destruct]
  -[IDSDaemonController _autoReconnect]
  -[IDSDaemonController setCommands:forListenerID:]
  -[IDSDaemonController capabilities]
  -[IDSDaemonController servicesForListenerID:]
  -[IDSDaemonController _agentDidLaunchNotification:]
  -[IDSDaemonController forwardingTargetForSelector:]
  -[IDSDaemonController _handleDaemonException:]
  -[IDSDaemonController _remoteObjectCleanup]
  -[IDSDaemonController setQueryContext:]
  -[IDSDaemonController setConnectingQueue:]
  -[IDSDaemonController _setServices:]
  -[IDSDaemonController remoteObjectExists]
  -[IDSDaemonController _localObjectCleanup]
  -[IDSDaemonController addListenerID:services:commands:]
  -[IDSDaemonController setServices:forListenerID:]
  -[IDSDaemonController addListenerID:services:]
  -[IDSDaemonController remoteObjectDiedNotification:]
  -[IDSDaemonController connectToDaemonWithLaunch:services:commands:capabilities:]
  -[IDSDaemonController commands]
  -[IDSDaemonController curXPCMessagePriority]
  -[IDSDaemonController forwarderWithCompletion:]
  -[IDSDaemonController listener]
  -[IDSDaemonController commandsForListenerID:]
  -[IDSDaemonController sendXPCObject:objectContext:]
  -[IDSDaemonController _remoteMessageQueue]
  -[IDSDaemonController systemApplicationDidEnterBackground]
  -[IDSDaemonController _setAutoReconnect:]
  -[IDSDaemonController systemApplicationWillEnterForeground]
  -[IDSDaemonController _makeConnectionWithLaunch:completionBlock:]
  -[IDSDaemonController _setCommands:]
  -[IDSDaemonController systemApplicationDidSuspend]
  -[IDSDaemonController connectingQueue]
  -[IDSDaemonController consumeQueryContext:]
  -[IDSDaemonController init]
  -[IDSDaemonController _setServices:commands:capabilities:]
  -[IDSDaemonController _setCapabilities:]
  -[IDSDaemonController _disconnectFromDaemonWithForce:]


IDSDaemonControllerForwarder : NSProxy
 @property  int priority
 @property  @? completion
 @property  NSProtocolChecker *protocol
 @property  NSObject<OS_dispatch_queue> *ivarQueue
 @property  NSObject<OS_dispatch_queue> *remoteMessageQueue

  // instance methods
  -[IDSDaemonControllerForwarder setPriority:]
  -[IDSDaemonControllerForwarder completion]
  -[IDSDaemonControllerForwarder methodSignatureForSelector:]
  -[IDSDaemonControllerForwarder remoteMessageQueue]
  -[IDSDaemonControllerForwarder initWithProtocol:ivarQueue:remoteMessageQueue:completion:]
  -[IDSDaemonControllerForwarder .cxx_destruct]
  -[IDSDaemonControllerForwarder forwardInvocation:]
  -[IDSDaemonControllerForwarder initWithProtocol:ivarQueue:remoteMessageQueue:]
  -[IDSDaemonControllerForwarder priority]
  -[IDSDaemonControllerForwarder protocol]
  -[IDSDaemonControllerForwarder ivarQueue]


IDSXPCInternalTestingInterface : NSObject
  // class methods
  +[IDSXPCInternalTestingInterface interface]


IDSXPCKeyTransparencyInterface : NSObject
  // class methods
  +[IDSXPCKeyTransparencyInterface interface]


IDSFirewallEntry : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *mergeID
 @property  BOOL isDonated
 @property  IDSURI *uri
 @property  NSDate *lastSeen

  // class methods
  +[IDSFirewallEntry supportsSecureCoding]

  // instance methods
  -[IDSFirewallEntry lastSeen]
  -[IDSFirewallEntry encodeWithCoder:]
  -[IDSFirewallEntry .cxx_destruct]
  -[IDSFirewallEntry uri]
  -[IDSFirewallEntry copyWithZone:]
  -[IDSFirewallEntry initWithURI:]
  -[IDSFirewallEntry isEqual:]
  -[IDSFirewallEntry initWithCoder:]
  -[IDSFirewallEntry initWithURI:andLastSeenDate:]
  -[IDSFirewallEntry mergeID]
  -[IDSFirewallEntry setMergeID:]
  -[IDSFirewallEntry isDonated]
  -[IDSFirewallEntry setIsDonated:]


IDSXPCReunionSyncInterface : NSObject
  // class methods
  +[IDSXPCReunionSyncInterface interface]


IDSDirectMessageConnection : NSObject
 @property  unsigned long identifier
 @property  char * shortServiceNameCString
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  NSObject<OS_nw_connection> *connection
 @property  int connectionState
 @property  BOOL connectionSetupInProgress
 @property  NSMutableArray *connectionMessageSendQueue
 @property  <IDSDirectMessageConnectionDelegate> *delegate
 @property  BOOL upgradedTrafficClass
 @property  NSString *peerID
 @property  BOOL connectionIsIncoming
 @property  BOOL pendingAckTimerSuspended
 @property  BOOL directMessagingAllowed
 @property  NSObject<OS_dispatch_source> *pendingAckTimer
 @property  NSObject<OS_dispatch_source> *reporterTimer
 @property  NSMutableDictionary *queueOneToMessageIDDictionary
 @property  NSMutableDictionary *messageIDToMessageDictionary
 @property  int notifyToken
 @property  BOOL directMessagingSupported
 @property  unsigned int trafficClassToUse
 @property  long long idsPriorityToUse
 @property  BOOL trafficClassInitialized
 @property  long long trafficClassApplied
 @property  BOOL trafficClassTLVProcessed
 @property  BOOL peerIsConnected
 @property  BOOL peerIsNearby
 @property  IDSDevice *device
 @property  IDSDeviceConnection *deviceConnection
 @property  NSString *currentStreamName
 @property  BOOL peerSupportsDeviceConnection
 @property  BOOL conciseACKSupported
 @property  unsigned long directMessagingState
 @property  int directMessagingTimeOutMSEC
 @property  int directMessagingRetryMSEC
 @property  int directMessagingReportStatsMSEC
 @property  unsigned int dataProtectionClass
 @property  IDSServiceProperties *serviceProperties
 @property  IMPowerAssertion *assertion
 @property  NSDictionary *powerAssertionOptions
 @property  unsigned long outgoingMessageBytes
 @property  unsigned long outgoingMessageCount
 @property  unsigned long incomingMessageBytes
 @property  unsigned long incomingMessageCount
 @property  NSString *serviceName

  // class methods
  +[IDSDirectMessageConnection isDirectMessagingRequested:]

  // instance methods
  -[IDSDirectMessageConnection setServiceName:]
  -[IDSDirectMessageConnection updateMetadata:]
  -[IDSDirectMessageConnection setPeerID:]
  -[IDSDirectMessageConnection connectionQueue]
  -[IDSDirectMessageConnection initWithServiceName:queue:delegate:]
  -[IDSDirectMessageConnection setServiceProperties:]
  -[IDSDirectMessageConnection peerID]
  -[IDSDirectMessageConnection connectionState]
  -[IDSDirectMessageConnection setNotifyToken:]
  -[IDSDirectMessageConnection resetConnection]
  -[IDSDirectMessageConnection serviceProperties]
  -[IDSDirectMessageConnection setConnectionQueue:]
  -[IDSDirectMessageConnection notifyToken]
  -[IDSDirectMessageConnection identifier]
  -[IDSDirectMessageConnection setDeviceConnection:]
  -[IDSDirectMessageConnection setAssertion:]
  -[IDSDirectMessageConnection setDelegate:]
  -[IDSDirectMessageConnection delegate]
  -[IDSDirectMessageConnection setConnectionState:]
  -[IDSDirectMessageConnection dealloc]
  -[IDSDirectMessageConnection serviceName]
  -[IDSDirectMessageConnection .cxx_destruct]
  -[IDSDirectMessageConnection deviceConnection]
  -[IDSDirectMessageConnection connection]
  -[IDSDirectMessageConnection setDevice:]
  -[IDSDirectMessageConnection device]
  -[IDSDirectMessageConnection assertion]
  -[IDSDirectMessageConnection setIdentifier:]
  -[IDSDirectMessageConnection invalidate]
  -[IDSDirectMessageConnection setDataProtectionClass:]
  -[IDSDirectMessageConnection dataProtectionClass]
  -[IDSDirectMessageConnection incomingMessageCount]
  -[IDSDirectMessageConnection cancel]
  -[IDSDirectMessageConnection setConnection:]
  -[IDSDirectMessageConnection updateConnection:]
  -[IDSDirectMessageConnection setDestinationDevice:]
  -[IDSDirectMessageConnection parseDirectMessagingState]
  -[IDSDirectMessageConnection canUseDirectMessaging]
  -[IDSDirectMessageConnection isMessageEligible:options:destinationDevice:]
  -[IDSDirectMessageConnection updateConnectedDevices:]
  -[IDSDirectMessageConnection updateTrafficClass:]
  -[IDSDirectMessageConnection setupIDSDeviceConnection]
  -[IDSDirectMessageConnection receivedDirectMessagingSocketWithContext:]
  -[IDSDirectMessageConnection setupConnectionIfApplicable]
  -[IDSDirectMessageConnection receiveMessages]
  -[IDSDirectMessageConnection processIncomingMessage:messageType:messageIdentifier:]
  -[IDSDirectMessageConnection sendAckForMessageID:guidToAck:]
  -[IDSDirectMessageConnection sendAppAckWithGUID:]
  -[IDSDirectMessageConnection getMessageTypeForFirstMessage]
  -[IDSDirectMessageConnection createDispatchDataForMessageSend:isAck:ackMessageId:]
  -[IDSDirectMessageConnection cancelPendingAckTimer]
  -[IDSDirectMessageConnection resumePendingAckTimer]
  -[IDSDirectMessageConnection suspendPendingAckTimer]
  -[IDSDirectMessageConnection failedToSendMessage:responseCode:]
  -[IDSDirectMessageConnection sendMessageWithParameters:options:]
  -[IDSDirectMessageConnection dequeueMessages]
  -[IDSDirectMessageConnection getPowerAssertion]
  -[IDSDirectMessageConnection clearPowerAssertion]
  -[IDSDirectMessageConnection startPowerLogReportTimer]
  -[IDSDirectMessageConnection logConnectionStatisticsInPowerDictionary]
  -[IDSDirectMessageConnection shortServiceNameCString]
  -[IDSDirectMessageConnection setShortServiceNameCString:]
  -[IDSDirectMessageConnection connectionSetupInProgress]
  -[IDSDirectMessageConnection setConnectionSetupInProgress:]
  -[IDSDirectMessageConnection connectionMessageSendQueue]
  -[IDSDirectMessageConnection setConnectionMessageSendQueue:]
  -[IDSDirectMessageConnection upgradedTrafficClass]
  -[IDSDirectMessageConnection setUpgradedTrafficClass:]
  -[IDSDirectMessageConnection connectionIsIncoming]
  -[IDSDirectMessageConnection setConnectionIsIncoming:]
  -[IDSDirectMessageConnection pendingAckTimerSuspended]
  -[IDSDirectMessageConnection setPendingAckTimerSuspended:]
  -[IDSDirectMessageConnection directMessagingAllowed]
  -[IDSDirectMessageConnection setDirectMessagingAllowed:]
  -[IDSDirectMessageConnection pendingAckTimer]
  -[IDSDirectMessageConnection setPendingAckTimer:]
  -[IDSDirectMessageConnection reporterTimer]
  -[IDSDirectMessageConnection setReporterTimer:]
  -[IDSDirectMessageConnection queueOneToMessageIDDictionary]
  -[IDSDirectMessageConnection setQueueOneToMessageIDDictionary:]
  -[IDSDirectMessageConnection messageIDToMessageDictionary]
  -[IDSDirectMessageConnection setMessageIDToMessageDictionary:]
  -[IDSDirectMessageConnection directMessagingSupported]
  -[IDSDirectMessageConnection setDirectMessagingSupported:]
  -[IDSDirectMessageConnection trafficClassToUse]
  -[IDSDirectMessageConnection setTrafficClassToUse:]
  -[IDSDirectMessageConnection idsPriorityToUse]
  -[IDSDirectMessageConnection setIdsPriorityToUse:]
  -[IDSDirectMessageConnection trafficClassInitialized]
  -[IDSDirectMessageConnection setTrafficClassInitialized:]
  -[IDSDirectMessageConnection trafficClassApplied]
  -[IDSDirectMessageConnection setTrafficClassApplied:]
  -[IDSDirectMessageConnection trafficClassTLVProcessed]
  -[IDSDirectMessageConnection setTrafficClassTLVProcessed:]
  -[IDSDirectMessageConnection peerIsConnected]
  -[IDSDirectMessageConnection setPeerIsConnected:]
  -[IDSDirectMessageConnection peerIsNearby]
  -[IDSDirectMessageConnection setPeerIsNearby:]
  -[IDSDirectMessageConnection currentStreamName]
  -[IDSDirectMessageConnection setCurrentStreamName:]
  -[IDSDirectMessageConnection peerSupportsDeviceConnection]
  -[IDSDirectMessageConnection setPeerSupportsDeviceConnection:]
  -[IDSDirectMessageConnection conciseACKSupported]
  -[IDSDirectMessageConnection setConciseACKSupported:]
  -[IDSDirectMessageConnection directMessagingState]
  -[IDSDirectMessageConnection setDirectMessagingState:]
  -[IDSDirectMessageConnection directMessagingTimeOutMSEC]
  -[IDSDirectMessageConnection setDirectMessagingTimeOutMSEC:]
  -[IDSDirectMessageConnection directMessagingRetryMSEC]
  -[IDSDirectMessageConnection setDirectMessagingRetryMSEC:]
  -[IDSDirectMessageConnection directMessagingReportStatsMSEC]
  -[IDSDirectMessageConnection setDirectMessagingReportStatsMSEC:]
  -[IDSDirectMessageConnection powerAssertionOptions]
  -[IDSDirectMessageConnection setPowerAssertionOptions:]
  -[IDSDirectMessageConnection outgoingMessageBytes]
  -[IDSDirectMessageConnection setOutgoingMessageBytes:]
  -[IDSDirectMessageConnection outgoingMessageCount]
  -[IDSDirectMessageConnection setOutgoingMessageCount:]
  -[IDSDirectMessageConnection incomingMessageBytes]
  -[IDSDirectMessageConnection setIncomingMessageBytes:]
  -[IDSDirectMessageConnection setIncomingMessageCount:]


IDSGroupSessionDataCryptor : NSObject <NSSecureCoding, NSCopying>
  // class methods
  +[IDSGroupSessionDataCryptor supportsSecureCoding]

  // instance methods
  -[IDSGroupSessionDataCryptor encodeWithCoder:]
  -[IDSGroupSessionDataCryptor dealloc]
  -[IDSGroupSessionDataCryptor .cxx_destruct]
  -[IDSGroupSessionDataCryptor copyWithZone:]
  -[IDSGroupSessionDataCryptor isEqual:]
  -[IDSGroupSessionDataCryptor initWithCoder:]
  -[IDSGroupSessionDataCryptor initWithTopic:]
  -[IDSGroupSessionDataCryptor initWithTopic:keyManager:]
  -[IDSGroupSessionDataCryptor encryptData:sequenceNumber:error:]
  -[IDSGroupSessionDataCryptor getEncryptionKeyID]
  -[IDSGroupSessionDataCryptor decryptData:keyID:sequenceNumber:error:]
  -[IDSGroupSessionDataCryptor getDecryptionKeyIDSet]
  -[IDSGroupSessionDataCryptor isEqualToCryptor:]


IDSGroupSession : NSObject
 @property  NSString *sessionID
 @property  NSString *destination
 @property  unsigned int sessionEndedReason
 @property  NSSet *requiredCapabilities
 @property  NSSet *requiredLackOfCapabilities

  // class methods
  +[IDSGroupSession requestNWConnectionforIDSGroupSessionUnicastParameter:withCompletionHandler:]
  +[IDSGroupSession requestNWConnectionWithDataBlob:completionHandler:]
  +[IDSGroupSession augmentNetworkParametersForSession:participantID:parameters:]
  +[IDSGroupSession augmentNetworkParametersForSessionAlias:participantIDAlias:salt:parameters:]
  +[IDSGroupSession createEndpointForSessionIDAlias:topic:participantIDAlias:salt:]
  +[IDSGroupSession createGroupDescriptorForSessionIDAlias:topic:salt:]
  +[IDSGroupSession augmentConnectionGroupNetworkParameters:]
  +[IDSGroupSession keyValueDeliveryForSessionID:]
  +[IDSGroupSession requestNWConnectionforIDSGroupSessionBroadcastParameter:withCompletionHandler:]

  // instance methods
  -[IDSGroupSession destination]
  -[IDSGroupSession sessionID]
  -[IDSGroupSession state]
  -[IDSGroupSession setPreferences:]
  -[IDSGroupSession dealloc]
  -[IDSGroupSession _internal]
  -[IDSGroupSession .cxx_destruct]
  -[IDSGroupSession requiredCapabilities]
  -[IDSGroupSession setDelegate:queue:]
  -[IDSGroupSession invalidate]
  -[IDSGroupSession initWithAccount:options:]
  -[IDSGroupSession initWithAccount:destinations:options:]
  -[IDSGroupSession _internal_sessionWithValidityCheck]
  -[IDSGroupSession sessionIDAliasWithSalt:]
  -[IDSGroupSession createAliasForParticipantID:salt:]
  -[IDSGroupSession createAliasForLocalParticipantIDWithSalt:]
  -[IDSGroupSession participantIDForAlias:salt:]
  -[IDSGroupSession createSessionIDAliasWithSalt:completionHandler:]
  -[IDSGroupSession createAliasForParticipantID:salt:completionHandler:]
  -[IDSGroupSession createAliasForLocalParticipantIDWithSalt:completionHandler:]
  -[IDSGroupSession getParticipantIDForAlias:salt:completionHandler:]
  -[IDSGroupSession sessionEndedReason]
  -[IDSGroupSession requiredLackOfCapabilities]
  -[IDSGroupSession updateMembers:withContext:triggeredLocally:]
  -[IDSGroupSession updateMembers:withContext:messagingCapabilities:triggeredLocally:]
  -[IDSGroupSession manageDesignatedMembers:withType:]
  -[IDSGroupSession removeParticipants:]
  -[IDSGroupSession updateParticipantData:withContext:]
  -[IDSGroupSession setParticipantInfo:]
  -[IDSGroupSession updateParticipantType:members:withContext:triggeredLocally:]
  -[IDSGroupSession joinWithOptions:]
  -[IDSGroupSession leaveGroupSession]
  -[IDSGroupSession reconnectUPlusOneSession]
  -[IDSGroupSession setRequiredCapabilities:requiredLackOfCapabilities:]
  -[IDSGroupSession requestActiveParticipants]
  -[IDSGroupSession requestDataBlobForParticipantIDs:]
  -[IDSGroupSession registerPluginWithOptions:]
  -[IDSGroupSession unregisterPluginWithOptions:]
  -[IDSGroupSession unicastParameterForParticipantID:dataMode:connectionIndex:]
  -[IDSGroupSession unicastParameterForParticipantIDAlias:salt:dataMode:connectionIndex:]
  -[IDSGroupSession unicastConnectorWithDataMode:]
  -[IDSGroupSession requestDataCryptorForTopic:completionHandler:]
  -[IDSGroupSession requestEncryptionKeyForParticipants:]
  -[IDSGroupSession keyValueDelivery]
  -[IDSGroupSession broadcastParameterForService:]


IDSXPCRegistrationInterface : NSObject
  // class methods
  +[IDSXPCRegistrationInterface interface]


IDSServiceAvailabilityController : NSObject
  // class methods
  +[IDSServiceAvailabilityController sharedInstance]

  // instance methods
  -[IDSServiceAvailabilityController _isValidServiceType:]
  -[IDSServiceAvailabilityController _handleServiceMonitorNotification:]
  -[IDSServiceAvailabilityController dealloc]
  -[IDSServiceAvailabilityController _startListeningToMonitor:]
  -[IDSServiceAvailabilityController .cxx_destruct]
  -[IDSServiceAvailabilityController removeListenerID:forService:]
  -[IDSServiceAvailabilityController containerForService:create:]
  -[IDSServiceAvailabilityController _postNotificationForService:availability:]
  -[IDSServiceAvailabilityController hasListenerID:forService:]
  -[IDSServiceAvailabilityController availabilityForListenerID:forService:]
  -[IDSServiceAvailabilityController addListenerID:forService:]
  -[IDSServiceAvailabilityController _stopListeningToMonitor:]
  -[IDSServiceAvailabilityController init]


IDSServiceContainer : NSObject
 @property  IDSServiceMonitor *monitor
 @property  NSMutableSet *listeners

  // instance methods
  -[IDSServiceContainer removeListenerID:]
  -[IDSServiceContainer setMonitor:]
  -[IDSServiceContainer monitor]
  -[IDSServiceContainer initWithService:]
  -[IDSServiceContainer hasListenerID:]
  -[IDSServiceContainer listeners]
  -[IDSServiceContainer .cxx_destruct]
  -[IDSServiceContainer addListenerID:]


IDSDaemonListener : NSObject <IDSDaemonListenerProtocol>
 @property  BOOL isSetupComplete
 @property  BOOL hasPostedSetupComplete
 @property  NSString *deviceIdentifier
 @property  BOOL _hidingDisconnect
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSDaemonListener accountRemoved:]
  -[IDSDaemonListener accountAdded:]
  -[IDSDaemonListener _callHandlersAsyncWithBlock:]
  -[IDSDaemonListener continuityDidStopAdvertisingOfType:]
  -[IDSDaemonListener _uniqueIDForDevice:]
  -[IDSDaemonListener deviceIdentifier]
  -[IDSDaemonListener continuityDidFailToStartScanningForType:withError:]
  -[IDSDaemonListener account:localDeviceAdded:]
  -[IDSDaemonListener methodSignatureForSelector:]
  -[IDSDaemonListener continuityDidUpdateStateToState:]
  -[IDSDaemonListener _noteDisconnected]
  -[IDSDaemonListener updateAccount:withAccountInfo:]
  -[IDSDaemonListener switchActivePairedDevice:forService:]
  -[IDSDaemonListener account:registrationStatusInfoChanged:]
  -[IDSDaemonListener continuityDidFailToStartAdvertisingOfType:withError:]
  -[IDSDaemonListener linkedDevicesForService:]
  -[IDSDaemonListener removeHandler:]
  -[IDSDaemonListener _internalSwitchActivePairedDevice:forService:]
  -[IDSDaemonListener continuityDidDisconnectFromPeer:withError:]
  -[IDSDaemonListener receivedInvitationsForService:]
  -[IDSDaemonListener registrationFailedForAccount:needsDeletion:]
  -[IDSDaemonListener continuityDidLosePeer:]
  -[IDSDaemonListener account:accountInfoChanged:]
  -[IDSDaemonListener __postSetupComplete]
  -[IDSDaemonListener continuityDidStopAdvertisingOfType:withError:]
  -[IDSDaemonListener continuityDidStartAdvertisingOfType:]
  -[IDSDaemonListener .cxx_destruct]
  -[IDSDaemonListener getDirectMessagingMetadataDictionary]
  -[IDSDaemonListener service:tinkerDeviceUpdated:]
  -[IDSDaemonListener pendingInvitationsForService:]
  -[IDSDaemonListener isSetupComplete]
  -[IDSDaemonListener _setHidingDisconnect:]
  -[IDSDaemonListener accountDisabled:onService:]
  -[IDSDaemonListener familyInfoForService:]
  -[IDSDaemonListener continuityDidDiscoverType:withData:fromPeer:]
  -[IDSDaemonListener account:vettedAliasesChanged:]
  -[IDSDaemonListener continuityDidConnectToPeer:withError:]
  -[IDSDaemonListener continuityDidDiscoverPeerWithData:fromPeer:]
  -[IDSDaemonListener continuityDidStopScanningForType:]
  -[IDSDaemonListener maxEffectivePayloadSizeForService:]
  -[IDSDaemonListener account:aliasesChanged:]
  -[IDSDaemonListener service:tinkerDeviceAdded:]
  -[IDSDaemonListener account:loginChanged:]
  -[IDSDaemonListener hasPostedSetupComplete]
  -[IDSDaemonListener accountEnabled:onService:]
  -[IDSDaemonListener _updateService:withTinkerDevice:shouldAdd:shouldSwitch:]
  -[IDSDaemonListener _internalSwitchActivePairedDevice:forAccount:]
  -[IDSDaemonListener _performSyncBlock:]
  -[IDSDaemonListener didSwitchActivePairedDevice:]
  -[IDSDaemonListener device:nsuuidChanged:]
  -[IDSDaemonListener _internalDidSwitchActivePairedDevice:forService:]
  -[IDSDaemonListener forwardInvocation:]
  -[IDSDaemonListener account:profileChanged:]
  -[IDSDaemonListener _removeAccountOnIvarQueue:]
  -[IDSDaemonListener connectionComplete:withResponse:]
  -[IDSDaemonListener addHandler:]
  -[IDSDaemonListener initWithQueueController:ivarQueue:]
  -[IDSDaemonListener xpcObject:objectContext:]
  -[IDSDaemonListener didGetIdentities:error:]
  -[IDSDaemonListener _callHandlersWithBlock:]
  -[IDSDaemonListener _hidingDisconnect]
  -[IDSDaemonListener dependentDevicesForAccount:]
  -[IDSDaemonListener _callHandlersWithBlockOnIvarQueue:cleanup:]
  -[IDSDaemonListener continuityDidStartScanningForType:]
  -[IDSDaemonListener account:dependentDevicesUpdated:]
  -[IDSDaemonListener service:tinkerDeviceRemoved:]
  -[IDSDaemonListener deactivatePairedDevices]
  -[IDSDaemonListener account:localDeviceRemoved:]
  -[IDSDaemonListener switchActivePairedDevice:forAccount:]
  -[IDSDaemonListener accountDictionariesForService:]
  -[IDSDaemonListener _callHandlersWithBlockOnIvarQueue:]
  -[IDSDaemonListener refreshRegistrationForAccount:]
  -[IDSDaemonListener deviceIdentifierDidChange:]
  -[IDSDaemonListener enabledAccountsForService:]
  -[IDSDaemonListener account:displayNameChanged:]
  -[IDSDaemonListener init]
  -[IDSDaemonListener setupCompleteWithInfo:]
  -[IDSDaemonListener familyDevicesForService:listenerID:withCompletion:]
  -[IDSDaemonListener service:familyInfoUpdated:]


_IDSRealTimeEncryptionProxy : NSObject <IDSDaemonListenerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_IDSRealTimeEncryptionProxy initWithAccount:]
  -[_IDSRealTimeEncryptionProxy dealloc]
  -[_IDSRealTimeEncryptionProxy .cxx_destruct]
  -[_IDSRealTimeEncryptionProxy setDelegate:queue:]
  -[_IDSRealTimeEncryptionProxy xpcObject:objectContext:]
  -[_IDSRealTimeEncryptionProxy sendPrekeyToGroup:]
  -[_IDSRealTimeEncryptionProxy requestPublicKeys]
  -[_IDSRealTimeEncryptionProxy sendMasterKeyMaterialToGroup:]
  -[_IDSRealTimeEncryptionProxy requestMasterKeyMaterialForGroup:]
  -[_IDSRealTimeEncryptionProxy sendMKMRecoveryRequestToGroup:]
  -[_IDSRealTimeEncryptionProxy resetKeysForGroup:]


IDSActivityInfo : NSObject <NSSecureCoding>
 @property  NSArray *deviceUniqueIDs
 @property  NSArray *tokens
 @property  NSArray *URIs
 @property  NSString *subActivity
 @property  NSDate *expirationDate
 @property  NSData *appContext

  // class methods
  +[IDSActivityInfo supportsSecureCoding]
  +[IDSActivityInfo activityInfoWithSubActivity:URIs:]
  +[IDSActivityInfo activityInfoWithSubActivity:devices:]
  +[IDSActivityInfo activityInfoWithSubActivity:tokens:]

  // instance methods
  -[IDSActivityInfo expirationDate]
  -[IDSActivityInfo tokens]
  -[IDSActivityInfo URIs]
  -[IDSActivityInfo encodeWithCoder:]
  -[IDSActivityInfo .cxx_destruct]
  -[IDSActivityInfo isIdentical:]
  -[IDSActivityInfo initWithCoder:]
  -[IDSActivityInfo _initWithSubActivity:]
  -[IDSActivityInfo subActivity]
  -[IDSActivityInfo appContext]
  -[IDSActivityInfo setAppContext:]
  -[IDSActivityInfo deviceUniqueIDs]


IDSActivityUpdate : NSObject <NSSecureCoding>
 @property  BOOL isDeviceOnline
 @property  IDSDevice *matchingDevice
 @property  NSArray *URIs
 @property  NSString *subActivity
 @property  NSData *pushToken
 @property  unsigned long serverTimestamp
 @property  NSData *clientContext

  // class methods
  +[IDSActivityUpdate supportsSecureCoding]

  // instance methods
  -[IDSActivityUpdate pushToken]
  -[IDSActivityUpdate URIs]
  -[IDSActivityUpdate encodeWithCoder:]
  -[IDSActivityUpdate clientContext]
  -[IDSActivityUpdate .cxx_destruct]
  -[IDSActivityUpdate initWithCoder:]
  -[IDSActivityUpdate subActivity]
  -[IDSActivityUpdate initWithSubActivity:pushToken:serverTimestamp:clientContext:isDeviceOnline:]
  -[IDSActivityUpdate serverTimestamp]
  -[IDSActivityUpdate isDeviceOnline]
  -[IDSActivityUpdate setIsDeviceOnline:]
  -[IDSActivityUpdate matchingDevice]
  -[IDSActivityUpdate setMatchingDevice:]
  -[IDSActivityUpdate setURIs:]


IDSActivityMonitor : NSObject <_IDSActivityMonitorXPCConnectorXPCListener>
 @property  _IDSActivityMonitorXPCConnector *XPCConnector
 @property  NSString *activityIdentifier
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <IDSActivityMonitorListenerDelegate> *delegate
 @property  NSArray *subscriptions
 @property  NSString *activity
 @property  BOOL listeningForUpdates
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSActivityMonitor subscriptions]
  -[IDSActivityMonitor activityIdentifier]
  -[IDSActivityMonitor beginBroadcastingWithInfo:withCompletion:]
  -[IDSActivityMonitor setDelegate:]
  -[IDSActivityMonitor delegate]
  -[IDSActivityMonitor handleIncomingUpdate:onActivity:completion:]
  -[IDSActivityMonitor stopBroadcastingForSubActivity:withCompletion:]
  -[IDSActivityMonitor dealloc]
  -[IDSActivityMonitor .cxx_destruct]
  -[IDSActivityMonitor initWithActivity:serviceIdentifier:]
  -[IDSActivityMonitor setListeningForUpdates:]
  -[IDSActivityMonitor setXPCConnector:]
  -[IDSActivityMonitor setQueue:]
  -[IDSActivityMonitor activity]
  -[IDSActivityMonitor queue]
  -[IDSActivityMonitor setActivityIdentifier:]
  -[IDSActivityMonitor initWithActivity:serviceIdentifier:queue:xpcConnector:]
  -[IDSActivityMonitor XPCConnector]
  -[IDSActivityMonitor listeningForUpdates]
  -[IDSActivityMonitor initWithActivity:serviceIdentifier:queue:]


IDSInvitationManager : NSObject <IDSServiceDelegateInvitation, IDSDaemonListenerProtocol>
 @property  IDSService *internal
 @property  <IDSInvitationManagerDelegate> *delegate
 @property  NSSet *pendingInvitations
 @property  NSSet *receivedInvitations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSInvitationManager service:account:incomingInvitation:withContext:]
  -[IDSInvitationManager declineInvitation:serverAcknowledgedBlock:]
  -[IDSInvitationManager setDelegate:]
  -[IDSInvitationManager delegate]
  -[IDSInvitationManager setupInvitationsForService:]
  -[IDSInvitationManager service:account:identifier:didSendWithSuccess:error:context:]
  -[IDSInvitationManager .cxx_destruct]
  -[IDSInvitationManager validateStrictDecodingForSentInvitation:]
  -[IDSInvitationManager initWithServiceIdentifier:]
  -[IDSInvitationManager validateReceivedInvitation:]
  -[IDSInvitationManager removeReceivedInvitation:]
  -[IDSInvitationManager receivedInvitations]
  -[IDSInvitationManager cancelInvitation:serverAcknowledgedBlock:]
  -[IDSInvitationManager setDelegate:queue:]
  -[IDSInvitationManager removePendingInvitation:]
  -[IDSInvitationManager sendInvitationToDestination:expirationDate:context:serverAcknowledgedBlock:]
  -[IDSInvitationManager pendingInvitations]
  -[IDSInvitationManager internal]
  -[IDSInvitationManager service:account:incomingInvitationUpdate:withContext:]
  -[IDSInvitationManager acceptInvitation:withContext:serverAcknowledgedBlock:]


IDSServerMessagingOptions : NSObject <NSSecureCoding>
 @property  NSNumber *timeout

  // class methods
  +[IDSServerMessagingOptions supportsSecureCoding]

  // instance methods
  -[IDSServerMessagingOptions encodeWithCoder:]
  -[IDSServerMessagingOptions setTimeout:]
  -[IDSServerMessagingOptions .cxx_destruct]
  -[IDSServerMessagingOptions timeout]
  -[IDSServerMessagingOptions initWithCoder:]


IDSServerMessagingOutgoingContext : NSObject
 @property  NSString *identifier

  // instance methods
  -[IDSServerMessagingOutgoingContext identifier]
  -[IDSServerMessagingOutgoingContext .cxx_destruct]
  -[IDSServerMessagingOutgoingContext initWithIdentifier:]
  -[IDSServerMessagingOutgoingContext setIdentifier:]


IDSServerMessagingIncomingContext : NSObject <NSSecureCoding>
 @property  BOOL fromServerStorage
 @property  IDSCertifiedDeliveryContext *certifiedDeliveryContext
 @property  NSString *identifier

  // class methods
  +[IDSServerMessagingIncomingContext supportsSecureCoding]

  // instance methods
  -[IDSServerMessagingIncomingContext identifier]
  -[IDSServerMessagingIncomingContext encodeWithCoder:]
  -[IDSServerMessagingIncomingContext .cxx_destruct]
  -[IDSServerMessagingIncomingContext setIdentifier:]
  -[IDSServerMessagingIncomingContext initWithCoder:]
  -[IDSServerMessagingIncomingContext initWithFromServerStorage:certifiedDeliveryContext:identifier:]
  -[IDSServerMessagingIncomingContext fromServerStorage]
  -[IDSServerMessagingIncomingContext setFromServerStorage:]
  -[IDSServerMessagingIncomingContext certifiedDeliveryContext]
  -[IDSServerMessagingIncomingContext setCertifiedDeliveryContext:]


IDSServerMessagingController : NSObject <IDSXPCServerMessagingClient>
 @property  NSString *topic
 @property  NSHashTable *delegateMap
 @property  IDSXPCDaemonController *daemonController
 @property  NSString *uuid
 @property  NSMutableDictionary *inFlightRequests
 @property  {os_unfair_lock_s=I} inFlightLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSServerMessagingController addDelegate:]
  -[IDSServerMessagingController sendCertifiedDeliveryReceipt:]
  -[IDSServerMessagingController setDaemonController:]
  -[IDSServerMessagingController delegateMap]
  -[IDSServerMessagingController topic]
  -[IDSServerMessagingController uuid]
  -[IDSServerMessagingController .cxx_destruct]
  -[IDSServerMessagingController setUuid:]
  -[IDSServerMessagingController daemonController]
  -[IDSServerMessagingController setDelegateMap:]
  -[IDSServerMessagingController initWithTopic:]
  -[IDSServerMessagingController handleReceivedIncomingMessageData:identifier:context:]
  -[IDSServerMessagingController initWithTopic:daemonController:]
  -[IDSServerMessagingController _setupInterruptionHandler]
  -[IDSServerMessagingController _setupXPC]
  -[IDSServerMessagingController _failMessages]
  -[IDSServerMessagingController _sendData:withOptions:identifier:completion:]
  -[IDSServerMessagingController sendMessageData:withOptions:identifier:completion:]
  -[IDSServerMessagingController inFlightRequests]
  -[IDSServerMessagingController setInFlightRequests:]
  -[IDSServerMessagingController inFlightLock]
  -[IDSServerMessagingController setInFlightLock:]


IDSGroupContextNotifyingObserver : NSObject <IDSGroupContextObserverDaemonProtocol>
 @property  NSMutableSet *delegates

  // instance methods
  -[IDSGroupContextNotifyingObserver delegates]
  -[IDSGroupContextNotifyingObserver addDelegate:]
  -[IDSGroupContextNotifyingObserver setDelegates:]
  -[IDSGroupContextNotifyingObserver didUpdateGroup:withNewGroup:completion:]
  -[IDSGroupContextNotifyingObserver dealloc]
  -[IDSGroupContextNotifyingObserver .cxx_destruct]
  -[IDSGroupContextNotifyingObserver didCacheGroup:completion:]
  -[IDSGroupContextNotifyingObserver removeDelegate:]
  -[IDSGroupContextNotifyingObserver didCreateGroup:completion:]
  -[IDSGroupContextNotifyingObserver didReceiveRegistrationIdentityUpdateWithCompletion:]
  -[IDSGroupContextNotifyingObserver init]
  -[IDSGroupContextNotifyingObserver didReceiveDecryptionFailureForGroup:completion:]


IDSSignInServiceUserInfo : NSObject
 @property  unsigned long type
 @property  unsigned long status

  // instance methods
  -[IDSSignInServiceUserInfo type]
  -[IDSSignInServiceUserInfo status]
  -[IDSSignInServiceUserInfo initWithUserType:status:]


IDSSignInServiceUserStatus : NSObject
 @property  unsigned long serviceType
 @property  NSArray *serviceUserInfos
 @property  unsigned long phoneUserStatus
 @property  unsigned long appleIDUserStatus

  // instance methods
  -[IDSSignInServiceUserStatus .cxx_destruct]
  -[IDSSignInServiceUserStatus serviceType]
  -[IDSSignInServiceUserStatus initWithServiceType:userInfos:]
  -[IDSSignInServiceUserStatus phoneUserStatus]
  -[IDSSignInServiceUserStatus appleIDUserStatus]
  -[IDSSignInServiceUserStatus serviceUserInfos]


IDSSignInControllerAccountDescription : NSObject
 @property  NSString *serviceName
 @property  NSNumber *state
 @property  @? completion

  // instance methods
  -[IDSSignInControllerAccountDescription setServiceName:]
  -[IDSSignInControllerAccountDescription completion]
  -[IDSSignInControllerAccountDescription state]
  -[IDSSignInControllerAccountDescription serviceName]
  -[IDSSignInControllerAccountDescription setCompletion:]
  -[IDSSignInControllerAccountDescription .cxx_destruct]
  -[IDSSignInControllerAccountDescription setState:]


IDSSignInController : NSObject <IDSAccountRegistrationDelegate, IDSAccountControllerDelegate>
 @property  NSMutableDictionary *serviceNameAccountControllerMap
 @property  NSMutableDictionary *accountIDDescriptionMap
 @property  NSMapTable *delegateByServiceType
 @property  NSMutableDictionary *initialStateByService
 @property  NSObject<OS_dispatch_queue> *signInQueue
 @property  <_IDSPasswordManager> *passwordManager
 @property  IDSCTAdapter *CTAdapter
 @property  double signInTimeout
 @property  double signInFuzz
 @property  NSString *listenerGUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSSignInController _initializeStateMachineForAccountID:service:state:completion:]
  -[IDSSignInController initWithPasswordManager:CTAdapter:signInTimeout:signInFuzz:queue:]
  -[IDSSignInController setCTAdapter:]
  -[IDSSignInController signInTimeout]
  -[IDSSignInController setSignInTimeout:]
  -[IDSSignInController passwordManager]
  -[IDSSignInController listenerGUID]
  -[IDSSignInController removeDelegateForService:]
  -[IDSSignInController setDelegateByServiceType:]
  -[IDSSignInController provideCredential:forUser:onService:withCompletion:]
  -[IDSSignInController accountController:accountUpdated:]
  -[IDSSignInController setSignInFuzz:]
  -[IDSSignInController signInQueue]
  -[IDSSignInController enableUserType:onService:completion:]
  -[IDSSignInController _scheduleValidationAfter:forAccountID:allowFuzz:signOut:]
  -[IDSSignInController _actionOnAccountOfType:onService:actionBlock:]
  -[IDSSignInController dealloc]
  -[IDSSignInController .cxx_destruct]
  -[IDSSignInController _createAccountControllerForService:]
  -[IDSSignInController setSignInQueue:]
  -[IDSSignInController accountController:accountDisabled:]
  -[IDSSignInController _serviceNameForType:]
  -[IDSSignInController _validateStateForAccountID:timeoutMode:]
  -[IDSSignInController statusOfUsersOnService:withCompletion:]
  -[IDSSignInController CTAdapter]
  -[IDSSignInController setInitialStateByService:]
  -[IDSSignInController delegateByServiceType]
  -[IDSSignInController setDelegate:forService:]
  -[IDSSignInController isFaceTimeEnabled]
  -[IDSSignInController disableUserType:onService:completion:]
  -[IDSSignInController _statusOfUsersOnService:]
  -[IDSSignInController _accountControllerForName:]
  -[IDSSignInController _statusOfAccount:]
  -[IDSSignInController setListenerGUID:]
  -[IDSSignInController initWithQueue:]
  -[IDSSignInController initialStateByService]
  -[IDSSignInController accountController:accountAdded:]
  -[IDSSignInController _validateDelegateState]
  -[IDSSignInController _serviceTypeForName:]
  -[IDSSignInController accountController:accountRemoved:]
  -[IDSSignInController serviceNameAccountControllerMap]
  -[IDSSignInController _createAccountWithDictionary:accountID:serviceName:]
  -[IDSSignInController _isServiceCurrentlyEnabled:]
  -[IDSSignInController signInUsername:withProvidedCredential:onService:waitUntilRegistered:completion:]
  -[IDSSignInController isiMessageEnabled]
  -[IDSSignInController setServiceNameAccountControllerMap:]
  -[IDSSignInController accountIDDescriptionMap]
  -[IDSSignInController setAccountIDDescriptionMap:]
  -[IDSSignInController _accountWithUniqueID:]
  -[IDSSignInController signInUsername:onService:waitUntilRegistered:withCompletion:]
  -[IDSSignInController signInFuzz]
  -[IDSSignInController signOutService:completion:]
  -[IDSSignInController setPasswordManager:]
  -[IDSSignInController refreshRegistrationForAccount:]
  -[IDSSignInController init]
  -[IDSSignInController _cleanupStateForAccountID:]


IDSSession : NSObject
 @property  NSString *uniqueID
 @property  int socket
 @property  NSString *sessionID
 @property  NSString *destination
 @property  BOOL isAudioEnabled
 @property  BOOL isMuted
 @property  long long invitationTimeOut
 @property  unsigned int sessionEndedReason

  // instance methods
  -[IDSSession endSession]
  -[IDSSession destination]
  -[IDSSession setIsMuted:]
  -[IDSSession uniqueID]
  -[IDSSession sessionID]
  -[IDSSession state]
  -[IDSSession setPreferences:]
  -[IDSSession dealloc]
  -[IDSSession socket]
  -[IDSSession _internal]
  -[IDSSession isMuted]
  -[IDSSession .cxx_destruct]
  -[IDSSession setDelegate:queue:]
  -[IDSSession setUniqueID:]
  -[IDSSession sendData:error:]
  -[IDSSession sendInvitation]
  -[IDSSession initWithAccount:destinations:options:]
  -[IDSSession sessionEndedReason]
  -[IDSSession initWithAccount:destinations:transportType:]
  -[IDSSession _initWithAccount:destinations:transportType:uniqueID:]
  -[IDSSession initialLinkType]
  -[IDSSession sendInvitationWithOptions:]
  -[IDSSession sendInvitationWithData:]
  -[IDSSession sendInvitationWithData:declineOnError:]
  -[IDSSession setStreamPreferences:]
  -[IDSSession _streamPreferences]
  -[IDSSession cancelInvitationWithRemoteEndedReasonOverride:]
  -[IDSSession cancelInvitationWithData:]
  -[IDSSession acceptInvitationWithData:]
  -[IDSSession declineInvitationWithData:]
  -[IDSSession cancelInvitation]
  -[IDSSession acceptInvitation]
  -[IDSSession declineInvitation]
  -[IDSSession endSessionWithData:]
  -[IDSSession sendSessionMessage:]
  -[IDSSession sendSessionMessage:toDestinations:]
  -[IDSSession sendAllocationRequest:]
  -[IDSSession setIsAudioEnabled:]
  -[IDSSession isAudioEnabled]
  -[IDSSession setInvitationTimeOut:]
  -[IDSSession invitationTimeOut]
  -[IDSSession reconnectSession]
  -[IDSSession shouldUseSocketForTransport]
  -[IDSSession MTUForAddressFamily:]


IDSAppleCareDaemonResponseListener : NSObject <IDSDaemonListenerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSAppleCareDaemonResponseListener .cxx_destruct]
  -[IDSAppleCareDaemonResponseListener daemonDisconnected]
  -[IDSAppleCareDaemonResponseListener applecareResponseForRequestID:withError:]
  -[IDSAppleCareDaemonResponseListener initWithRequestTimer:]
  -[IDSAppleCareDaemonResponseListener initWithDisconnectedBlockAndNoTimeout:]


IDSFirewall : NSObject
 @property  NSString *service
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSSet *impactedServiceIdentifiers

  // instance methods
  -[IDSFirewall populateImpactedServices:]
  -[IDSFirewall removeAllDonatedEntries:]
  -[IDSFirewall currentEntries:]
  -[IDSFirewall initWithService:queue:]
  -[IDSFirewall addEntries:withCompletion:]
  -[IDSFirewall setService:]
  -[IDSFirewall .cxx_destruct]
  -[IDSFirewall service]
  -[IDSFirewall removeEntries:withCompletion:]
  -[IDSFirewall removeAllEntries:]
  -[IDSFirewall recentlyBlockedEntries:]
  -[IDSFirewall currentDonatedEntries:]
  -[IDSFirewall setQueue:]
  -[IDSFirewall removeDonatedEntries:withCompletion:]
  -[IDSFirewall donateEntries:withCompletion:]
  -[IDSFirewall impactedServiceIdentifiers]
  -[IDSFirewall queue]
  -[IDSFirewall replaceEntries:withCompletion:]
  -[IDSFirewall replaceAllEntriesWithEntries:withCompletion:]
  -[IDSFirewall replaceDonatedEntriesWithEntries:withCompletion:]


IDSBatchIDQueryController : NSObject
  // instance methods
  -[IDSBatchIDQueryController dealloc]
  -[IDSBatchIDQueryController setDestinations:]
  -[IDSBatchIDQueryController .cxx_destruct]
  -[IDSBatchIDQueryController initWithService:delegate:queue:]
  -[IDSBatchIDQueryController invalidate]


IDSGroupEncryptionKeyMaterialCache : NSObject
  // instance methods
  -[IDSGroupEncryptionKeyMaterialCache .cxx_destruct]
  -[IDSGroupEncryptionKeyMaterialCache init]
  -[IDSGroupEncryptionKeyMaterialCache recvKeyMaterial:]
  -[IDSGroupEncryptionKeyMaterialCache invalidateKeyMaterialByKeyIndexes:]
  -[IDSGroupEncryptionKeyMaterialCache enumerateCachedKeyMaterialUsingBlock:]


IDSConnection : NSObject
 @property  _IDSConnection *_internal
 @property  IDSAccount *account
 @property  BOOL isActive

  // class methods
  +[IDSConnection _connectionWithAccount:commands:indirectDelegateCallouts:]

  // instance methods
  -[IDSConnection sendMessage:toDestinations:priority:options:identifier:error:]
  -[IDSConnection account]
  -[IDSConnection initWithAccount:]
  -[IDSConnection addDelegate:queue:]
  -[IDSConnection sendMessage:toDestinations:options:identifier:error:]
  -[IDSConnection sendData:toDestinations:priority:options:identifier:error:]
  -[IDSConnection dealloc]
  -[IDSConnection isActive]
  -[IDSConnection _internal]
  -[IDSConnection .cxx_destruct]
  -[IDSConnection sendProtobuf:toDestinations:priority:options:identifier:error:]
  -[IDSConnection removeDelegate:]
  -[IDSConnection _initWithAccount:commands:indirectDelegateCallouts:]
  -[IDSConnection initWithAccount:commands:]


IDSGroupSessionBroadcastParameter : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *groupSessionID
 @property  NSData *salt
 @property  NSString *serviceName
 @property  NSObject<OS_nw_parameters> *parameters
 @property  NSObject<OS_nw_endpoint> *endpoint

  // class methods
  +[IDSGroupSessionBroadcastParameter supportsSecureCoding]

  // instance methods
  -[IDSGroupSessionBroadcastParameter parameters]
  -[IDSGroupSessionBroadcastParameter encodeWithCoder:]
  -[IDSGroupSessionBroadcastParameter endpoint]
  -[IDSGroupSessionBroadcastParameter serviceName]
  -[IDSGroupSessionBroadcastParameter .cxx_destruct]
  -[IDSGroupSessionBroadcastParameter salt]
  -[IDSGroupSessionBroadcastParameter copyWithZone:]
  -[IDSGroupSessionBroadcastParameter isEqual:]
  -[IDSGroupSessionBroadcastParameter initWithCoder:]
  -[IDSGroupSessionBroadcastParameter initWithGroupSessionID:serviceName:]
  -[IDSGroupSessionBroadcastParameter initWithGroupSessionID:salt:serviceName:]
  -[IDSGroupSessionBroadcastParameter _requestNWConnectionforIDSGroupSessionBroadcastParameter:]
  -[IDSGroupSessionBroadcastParameter groupSessionID]


IDSXPCPairingInterface : NSObject
  // class methods
  +[IDSXPCPairingInterface interface]


IDSDaemonResponseHandler : NSObject
 @property  id block
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL isSync

  // instance methods
  -[IDSDaemonResponseHandler .cxx_destruct]
  -[IDSDaemonResponseHandler block]
  -[IDSDaemonResponseHandler queue]
  -[IDSDaemonResponseHandler isSync]
  -[IDSDaemonResponseHandler initWithBlock:queue:isSync:]
  -[IDSDaemonResponseHandler initWithBlock:queue:]


IDSTransactionLogTask : NSObject
 @property  @? completionBlock

  // instance methods
  -[IDSTransactionLogTask setCompletionBlock:]
  -[IDSTransactionLogTask completionBlock]
  -[IDSTransactionLogTask .cxx_destruct]
  -[IDSTransactionLogTask _completeWithError:]


IDSTransactionLogSyncTask : IDSTransactionLogTask
 @property  @? batchProcessingBlock
 @property  @? knownRecordIDsFromList
 @property  BOOL shouldContinueFromLastSyncPoint

  // instance methods
  -[IDSTransactionLogSyncTask .cxx_destruct]
  -[IDSTransactionLogSyncTask batchProcessingBlock]
  -[IDSTransactionLogSyncTask setBatchProcessingBlock:]
  -[IDSTransactionLogSyncTask knownRecordIDsFromList]
  -[IDSTransactionLogSyncTask setKnownRecordIDsFromList:]
  -[IDSTransactionLogSyncTask shouldContinueFromLastSyncPoint]
  -[IDSTransactionLogSyncTask setShouldContinueFromLastSyncPoint:]


IDSFamilyService : IDSService <IDSDaemonListenerProtocol>
 @property  NSSet *familyMembers
 @property  NSDictionary *dsidToFamilyMember
 @property  NSDictionary *dsidToDeviceList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSFamilyService sendMessage:toDestinations:priority:options:identifier:error:]
  -[IDSFamilyService sendData:toDestinations:priority:options:identifier:error:]
  -[IDSFamilyService .cxx_destruct]
  -[IDSFamilyService sendProtobuf:toDestinations:priority:options:identifier:error:]
  -[IDSFamilyService familyMembers]
  -[IDSFamilyService service:familyInfoUpdated:]
  -[IDSFamilyService setFamilyMembers:]
  -[IDSFamilyService sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:]
  -[IDSFamilyService isValidDestination:error:]
  -[IDSFamilyService familyHandles]
  -[IDSFamilyService fetchFamilyMembersWithDevices:]
  -[IDSFamilyService dsidToFamilyMember]
  -[IDSFamilyService setDsidToFamilyMember:]
  -[IDSFamilyService dsidToDeviceList]
  -[IDSFamilyService setDsidToDeviceList:]


_IDSPasswordManager : NSObject <_IDSPasswordManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_IDSPasswordManager setPassword:forUsername:onService:completionBlock:]


IDSGroupSessionUnicastParameter : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *groupSessionID
 @property  unsigned long localParticipantID
 @property  unsigned long remoteParticipantID
 @property  NSData *salt
 @property  unsigned long connectionIndex
 @property  long long dataMode
 @property  NSObject<OS_nw_parameters> *parameters
 @property  NSObject<OS_nw_endpoint> *endpoint
 @property  int socket

  // class methods
  +[IDSGroupSessionUnicastParameter supportsSecureCoding]

  // instance methods
  -[IDSGroupSessionUnicastParameter parameters]
  -[IDSGroupSessionUnicastParameter encodeWithCoder:]
  -[IDSGroupSessionUnicastParameter endpoint]
  -[IDSGroupSessionUnicastParameter socket]
  -[IDSGroupSessionUnicastParameter .cxx_destruct]
  -[IDSGroupSessionUnicastParameter setSocket:]
  -[IDSGroupSessionUnicastParameter salt]
  -[IDSGroupSessionUnicastParameter copyWithZone:]
  -[IDSGroupSessionUnicastParameter isEqual:]
  -[IDSGroupSessionUnicastParameter dataMode]
  -[IDSGroupSessionUnicastParameter initWithCoder:]
  -[IDSGroupSessionUnicastParameter groupSessionID]
  -[IDSGroupSessionUnicastParameter initWithGroupSessionID:localParticipantID:remoteParticipantID:dataMode:connectionIndex:]
  -[IDSGroupSessionUnicastParameter initWithGroupSessionID:localParticipantID:remoteParticipantID:salt:dataMode:connectionIndex:]
  -[IDSGroupSessionUnicastParameter initWithConnectedSocket:dataMode:connectionIndex:]
  -[IDSGroupSessionUnicastParameter requestNWConnectionforIDSGroupSessionUnicastParameter:]
  -[IDSGroupSessionUnicastParameter _requestNWConnectionforIDSGroupSessionUnicastParameter:]
  -[IDSGroupSessionUnicastParameter _setUpNWConnectionforTesting:]
  -[IDSGroupSessionUnicastParameter localParticipantID]
  -[IDSGroupSessionUnicastParameter remoteParticipantID]
  -[IDSGroupSessionUnicastParameter connectionIndex]


IDSXPCDaemonInterface : NSObject
  // class methods
  +[IDSXPCDaemonInterface interface]


IDSXPCDaemonClientInterface : NSObject
  // class methods
  +[IDSXPCDaemonClientInterface interface]


_IDSCompletionHandler : IDSDelegateInfo
 @property  @? handler

  // instance methods
  -[_IDSCompletionHandler setHandler:]
  -[_IDSCompletionHandler dealloc]
  -[_IDSCompletionHandler .cxx_destruct]
  -[_IDSCompletionHandler initWithHandler:queue:]
  -[_IDSCompletionHandler handler]


IDSPairedDeviceManager : NSObject <IDSDaemonListenerProtocol>
 @property  IDSXPCDaemonController *xpcDaemonController
 @property  NSSet *allowedTrafficClassifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IDSPairedDeviceManager sharedInstance]

  // instance methods
  -[IDSPairedDeviceManager dealloc]
  -[IDSPairedDeviceManager .cxx_destruct]
  -[IDSPairedDeviceManager init]
  -[IDSPairedDeviceManager dropAllMessagesWithoutAnyAllowedClassifier]
  -[IDSPairedDeviceManager setPairedDeviceInfo:]
  -[IDSPairedDeviceManager deliveryStats:]
  -[IDSPairedDeviceManager allowedTrafficClassifiers]
  -[IDSPairedDeviceManager setAllowedTrafficClassifiers:]
  -[IDSPairedDeviceManager deletePairedDevice:withCompletionBlock:queue:]
  -[IDSPairedDeviceManager getLocalDeviceInfoWithCompletionBlock:queue:]
  -[IDSPairedDeviceManager getPairedDeviceInfoWithCompletionBlock:queue:]
  -[IDSPairedDeviceManager getDeliveryStatsWithCompletionBlock:queue:]
  -[IDSPairedDeviceManager device:pairingDeleted:]
  -[IDSPairedDeviceManager constructRAResponseDictionary:completionHandler:]
  -[IDSPairedDeviceManager xpcDaemonController]
  -[IDSPairedDeviceManager setXpcDaemonController:]


IDSCarrierTokenRequestParameters : NSObject
 @property  long long subscriptionSource
 @property  NSString *IMEI
 @property  NSString *carrierNonce

  // instance methods
  -[IDSCarrierTokenRequestParameters .cxx_destruct]
  -[IDSCarrierTokenRequestParameters IMEI]
  -[IDSCarrierTokenRequestParameters initWithSubscriptionSource:IMEI:carrierNonce:]
  -[IDSCarrierTokenRequestParameters subscriptionSource]
  -[IDSCarrierTokenRequestParameters carrierNonce]


IDSCarrierToken : NSObject
 @property  NSString *tokenString

  // instance methods
  -[IDSCarrierToken tokenString]
  -[IDSCarrierToken .cxx_destruct]
  -[IDSCarrierToken initWithTokenString:]


IDSAuthenticationSigningResult : NSObject
 @property  NSString *serverVerifiableEncoding
 @property  NSArray *authenticationCertificateSignatures
 @property  NSData *inputData
 @property  NSData *nonce

  // instance methods
  -[IDSAuthenticationSigningResult .cxx_destruct]
  -[IDSAuthenticationSigningResult nonce]
  -[IDSAuthenticationSigningResult serverVerifiableEncoding]
  -[IDSAuthenticationSigningResult authenticationCertificateSignatures]
  -[IDSAuthenticationSigningResult initWithSubscriptionIdentifiers:authenticationCertificates:inputData:nonce:signature:]
  -[IDSAuthenticationSigningResult inputData]


IDSPhoneCertificateVendor : NSObject <IDSDaemonListenerProtocol>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  IDSPhoneCertificateVendor *strongSelfReference
 @property  IDSDaemonRequestTimer *daemonRequestTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSPhoneCertificateVendor _subscriptionSourceForContext:]
  -[IDSPhoneCertificateVendor _isPhoneCertificateVendorSupported]
  -[IDSPhoneCertificateVendor dealloc]
  -[IDSPhoneCertificateVendor authenticatePhoneWithCompletion:]
  -[IDSPhoneCertificateVendor didGeneratePhoneAuthenticationSignature:nonce:certificates:labelIDs:inputData:requestUUID:error:]
  -[IDSPhoneCertificateVendor _subscriptionSourceFromIntegerValue:]
  -[IDSPhoneCertificateVendor .cxx_destruct]
  -[IDSPhoneCertificateVendor _scheduleTimeoutForPhoneSubscriptionSourceCompletionBlock:]
  -[IDSPhoneCertificateVendor strongSelfReference]
  -[IDSPhoneCertificateVendor currentPhoneUserSubscriptionSourceWithError:]
  -[IDSPhoneCertificateVendor setCurrentPhoneUserSubscriptionSource:completion:]
  -[IDSPhoneCertificateVendor _clientErrorForCode:underlyingError:]
  -[IDSPhoneCertificateVendor didRequestCarrierTokenString:requestUUID:error:]
  -[IDSPhoneCertificateVendor requestCarrierTokenWithMessageBody:completion:]
  -[IDSPhoneCertificateVendor _scheduleTimeoutForPhoneAuthenticationSignatureRequestCompletionBlock:]
  -[IDSPhoneCertificateVendor didAuthenticatePhoneWithAuthenticationCertificateData:requestUUID:error:]
  -[IDSPhoneCertificateVendor initWithQueue:]
  -[IDSPhoneCertificateVendor didFetchPhoneUserSubscriptionSource:requestUUID:error:]
  -[IDSPhoneCertificateVendor requestCarrierTokenWithParameters:completion:]
  -[IDSPhoneCertificateVendor _debugDescriptionForErrorCode:]
  -[IDSPhoneCertificateVendor queue]
  -[IDSPhoneCertificateVendor _scheduleTimeoutForCarrierTokenCompletionBlock:]
  -[IDSPhoneCertificateVendor generatePhoneAuthenticationSignatureOverData:withCompletion:]
  -[IDSPhoneCertificateVendor setStrongSelfReference:]
  -[IDSPhoneCertificateVendor _updateSelfRetentionBasedOnInFlightRequestCount]
  -[IDSPhoneCertificateVendor requestCurrentPhoneUserSubscriptionSourceWithCompletion:]
  -[IDSPhoneCertificateVendor _scheduleTimeoutForPhoneAuthenticationCertificateRequestCompletionBlock:]
  -[IDSPhoneCertificateVendor daemonRequestTimer]
  -[IDSPhoneCertificateVendor didSetPhoneUserSubscriptionSource:requestUUID:error:]


IDSRegistrationControlDaemonResponseListener : NSObject <IDSDaemonListenerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSRegistrationControlDaemonResponseListener .cxx_destruct]
  -[IDSRegistrationControlDaemonResponseListener registrationControlResponseForRequestID:withError:]
  -[IDSRegistrationControlDaemonResponseListener registrationControlStatusResponseForRequestID:requestID:withError:]
  -[IDSRegistrationControlDaemonResponseListener initWithRequestTimer:]


IDSXPCConnectionRemoteObjectPromise : NSObject
 @property  NSXPCInterface *interface
 @property  NSMutableArray *pendingInvocations
 @property  id target
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[IDSXPCConnectionRemoteObjectPromise interface]
  -[IDSXPCConnectionRemoteObjectPromise methodSignatureForSelector:]
  -[IDSXPCConnectionRemoteObjectPromise _assertVoidReturnValueInInvocation:]
  -[IDSXPCConnectionRemoteObjectPromise setTarget:]
  -[IDSXPCConnectionRemoteObjectPromise failWithError:]
  -[IDSXPCConnectionRemoteObjectPromise target]
  -[IDSXPCConnectionRemoteObjectPromise dealloc]
  -[IDSXPCConnectionRemoteObjectPromise respondsToSelector:]
  -[IDSXPCConnectionRemoteObjectPromise .cxx_destruct]
  -[IDSXPCConnectionRemoteObjectPromise initWithInterface:queue:]
  -[IDSXPCConnectionRemoteObjectPromise setInterface:]
  -[IDSXPCConnectionRemoteObjectPromise fulfillWithRemoteObject:]
  -[IDSXPCConnectionRemoteObjectPromise setQueue:]
  -[IDSXPCConnectionRemoteObjectPromise forwardInvocation:]
  -[IDSXPCConnectionRemoteObjectPromise setPendingInvocations:]
  -[IDSXPCConnectionRemoteObjectPromise queue]
  -[IDSXPCConnectionRemoteObjectPromise pendingInvocations]
  -[IDSXPCConnectionRemoteObjectPromise remoteObjectProxy]


IDSAccountController : NSObject
 @property  NSSet *accounts

  // instance methods
  -[IDSAccountController enabledAccounts]
  -[IDSAccountController disableAccount:]
  -[IDSAccountController addAccount:]
  -[IDSAccountController enableAccount:]
  -[IDSAccountController accounts]
  -[IDSAccountController removeAccount:]
  -[IDSAccountController addDelegate:queue:]
  -[IDSAccountController initWithService:]
  -[IDSAccountController setupAccountWithLoginID:password:completionHandler:]
  -[IDSAccountController dealloc]
  -[IDSAccountController serviceName]
  -[IDSAccountController _internal]
  -[IDSAccountController .cxx_destruct]
  -[IDSAccountController _disableAccount:]
  -[IDSAccountController _removeAccount:]
  -[IDSAccountController _enableAccount:]
  -[IDSAccountController removeDelegate:]
  -[IDSAccountController setupAccountWithLoginID:aliases:password:completionHandler:]
  -[IDSAccountController accountWithLoginID:service:]
  -[IDSAccountController _initWithService:onIDSQueue:]
  -[IDSAccountController accountWithUniqueID:]
  -[IDSAccountController _initWithService:]
  -[IDSAccountController setupAccountWithSetupParameters:aliases:completionHandler:]


_IDSGroupSession : NSObject <IDSDaemonListenerProtocol, IDSBaseSocketPairConnectionDelegate>
 @property  NSString *uniqueID
 @property  unsigned int state
 @property  unsigned int sessionEndedReason
 @property  unsigned long localParticipantID
 @property  NSSet *requiredCapabilities
 @property  NSSet *requiredLackOfCapabilities
 @property  BOOL isLightweightParticipant
 @property  id boostContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_IDSGroupSession keyValueDeliveryForSessionID:]

  // instance methods
  -[_IDSGroupSession uniqueID]
  -[_IDSGroupSession state]
  -[_IDSGroupSession setPreferences:]
  -[_IDSGroupSession dealloc]
  -[_IDSGroupSession .cxx_destruct]
  -[_IDSGroupSession requiredCapabilities]
  -[_IDSGroupSession setDelegate:queue:]
  -[_IDSGroupSession setUniqueID:]
  -[_IDSGroupSession invalidate]
  -[_IDSGroupSession daemonDisconnected]
  -[_IDSGroupSession xpcObject:objectContext:]
  -[_IDSGroupSession _callDelegateWithBlock:]
  -[_IDSGroupSession groupSessionDidTerminate:]
  -[_IDSGroupSession groupSessionEnded:withReason:error:]
  -[_IDSGroupSession session:didReceiveReport:]
  -[_IDSGroupSession sessionDidJoinGroup:participantsInfo:error:]
  -[_IDSGroupSession sessionDidJoinGroup:participantInfo:error:]
  -[_IDSGroupSession sessionDidJoinGroup:participantUpdateDictionary:error:]
  -[_IDSGroupSession sessionDidLeaveGroup:error:]
  -[_IDSGroupSession session:participantDidJoinGroupWithInfo:]
  -[_IDSGroupSession session:participantDidLeaveGroupWithInfo:]
  -[_IDSGroupSession session:didReceiveActiveParticipants:success:]
  -[_IDSGroupSession session:didReceiveActiveLightweightParticipants:success:]
  -[_IDSGroupSession session:didReceiveBlockedParticipantIDs:withCode:withType:isTruncated:]
  -[_IDSGroupSession session:didReceiveQueryBlockedParticipantIDs:withCode:isTruncated:]
  -[_IDSGroupSession session:didRemoveParticipantIDs:withCode:isTruncated:]
  -[_IDSGroupSession sessionDidReceiveParticipantUpgrade:participantType:error:]
  -[_IDSGroupSession session:didReceiveParticipantIDs:withCode:managementType:]
  -[_IDSGroupSession participantUpdatedForSession:]
  -[_IDSGroupSession session:didRegisterPluginAllocationInfo:]
  -[_IDSGroupSession session:didUnregisterPluginAllocationInfo:]
  -[_IDSGroupSession session:didReceiveKeyMaterial:]
  -[_IDSGroupSession session:shouldInvalidateKeyMaterialByKeyIndexes:]
  -[_IDSGroupSession session:hasOutdatedSKI:]
  -[_IDSGroupSession session:didCreateParticipantIDAlias:forParticipantID:salt:]
  -[_IDSGroupSession session:didReceiveParticipantID:forParticipantIDAlias:salt:]
  -[_IDSGroupSession session:didReceiveDataBlob:forParticipant:]
  -[_IDSGroupSession session:didReceiveData:dataType:forParticipant:]
  -[_IDSGroupSession session:didReceiveServerErrorCode:]
  -[_IDSGroupSession sessionIDAliasWithSalt:]
  -[_IDSGroupSession createAliasForParticipantID:salt:completionHandler:]
  -[_IDSGroupSession getParticipantIDForAlias:salt:completionHandler:]
  -[_IDSGroupSession sessionEndedReason]
  -[_IDSGroupSession requiredLackOfCapabilities]
  -[_IDSGroupSession updateMembers:withContext:triggeredLocally:]
  -[_IDSGroupSession updateMembers:withContext:messagingCapabilities:triggeredLocally:]
  -[_IDSGroupSession manageDesignatedMembers:withType:]
  -[_IDSGroupSession updateParticipantData:withContext:]
  -[_IDSGroupSession setParticipantInfo:]
  -[_IDSGroupSession updateParticipantType:members:withContext:triggeredLocally:]
  -[_IDSGroupSession joinWithOptions:]
  -[_IDSGroupSession leaveGroupSession]
  -[_IDSGroupSession reconnectUPlusOneSession]
  -[_IDSGroupSession setRequiredCapabilities:requiredLackOfCapabilities:]
  -[_IDSGroupSession requestActiveParticipants]
  -[_IDSGroupSession registerPluginWithOptions:]
  -[_IDSGroupSession unregisterPluginWithOptions:]
  -[_IDSGroupSession requestDataCryptorForTopic:completionHandler:]
  -[_IDSGroupSession requestEncryptionKeyForParticipants:]
  -[_IDSGroupSession keyValueDelivery]
  -[_IDSGroupSession localParticipantID]
  -[_IDSGroupSession initWithAccount:destinations:options:delegateContext:]
  -[_IDSGroupSession _broadcastNewSessionToDaemon]
  -[_IDSGroupSession _cleanupSocketPairConnections]
  -[_IDSGroupSession removeParticipantIDs:]
  -[_IDSGroupSession _checkAndSendDataCryptor]
  -[_IDSGroupSession createSessionIDAliasWithSalt:delegateQueueCompletionHandler:]
  -[_IDSGroupSession createAliasForParticipantID:salt:delegateQueueCompletionHandler:]
  -[_IDSGroupSession createAliasForLocalParticipantIDWithSalt:delegateQueueCompletionHandler:]
  -[_IDSGroupSession getParticipantIDForAlias:salt:delegateQueueCompletionHandler:]
  -[_IDSGroupSession setKeyMaterialCache:]
  -[_IDSGroupSession getDestinations]
  -[_IDSGroupSession getDestinationsLightweightStatusDict]
  -[_IDSGroupSession boostContext]
  -[_IDSGroupSession setBoostContext:]
  -[_IDSGroupSession isLightweightParticipant]


IDSGroupContextController : NSObject <IDSTransactionLogTaskHandlerDelegate, IDSGroupContextNotifyingObserverDelegate>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <IDSGroupContextControllerDelegate> *delegate
 @property  CUTPromiseSeal *seal
 @property  NSString *serviceName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSGroupContextController setServiceName:]
  -[IDSGroupContextController initWithServiceName:queue:delegate:]
  -[IDSGroupContextController taskHandler:persistToken:completion:]
  -[IDSGroupContextController qGroupContextWithDeviceIdentity:completion:]
  -[IDSGroupContextController scheduleTransactionLogTask:]
  -[IDSGroupContextController setDelegate:]
  -[IDSGroupContextController setSeal:]
  -[IDSGroupContextController qSetupSeal]
  -[IDSGroupContextController didUpdateGroup:withNewGroup:completion:]
  -[IDSGroupContextController delegate]
  -[IDSGroupContextController dealloc]
  -[IDSGroupContextController taskHandler:accountInfoForAliases:completion:]
  -[IDSGroupContextController serviceName]
  -[IDSGroupContextController .cxx_destruct]
  -[IDSGroupContextController didCacheGroup:completion:]
  -[IDSGroupContextController _contentWithCompletion:]
  -[IDSGroupContextController taskHandler:messagesFromToken:completion:]
  -[IDSGroupContextController taskHandler:participantsWithDestinations:completion:]
  -[IDSGroupContextController groupContextWithCompletion:]
  -[IDSGroupContextController setQueue:]
  -[IDSGroupContextController taskHandler:groupsWithGroupIDs:completion:]
  -[IDSGroupContextController seal]
  -[IDSGroupContextController persistedTokenForTaskHandler:completion:]
  -[IDSGroupContextController queue]
  -[IDSGroupContextController didCreateGroup:completion:]
  -[IDSGroupContextController didReceiveRegistrationIdentityUpdateWithCompletion:]
  -[IDSGroupContextController didReceiveDecryptionFailureForGroup:completion:]


IDSGroupContextControllerContent : NSObject
 @property  IDSCloudKitContainer *cloudKitContainer
 @property  ENGroupContext *groupContext
 @property  ENAccountIdentity *accountIdentity

  // instance methods
  -[IDSGroupContextControllerContent setCloudKitContainer:]
  -[IDSGroupContextControllerContent .cxx_destruct]
  -[IDSGroupContextControllerContent cloudKitContainer]
  -[IDSGroupContextControllerContent accountIdentity]
  -[IDSGroupContextControllerContent groupContext]
  -[IDSGroupContextControllerContent setGroupContext:]
  -[IDSGroupContextControllerContent setAccountIdentity:]


IDSQuickRelayFixedTokenAllocator : NSObject
 @property  NSData *relayIP
 @property  NSData *relayIPv6
 @property  NSNumber *relayPort
 @property  NSData *relaySessionToken
 @property  NSData *relaySessionKey
 @property  NSData *relaySessionID
 @property  NSNumber *relayCombinedSoftwareID
 @property  NSData *appleID

  // instance methods
  -[IDSQuickRelayFixedTokenAllocator initWithDictionary:]
  -[IDSQuickRelayFixedTokenAllocator .cxx_destruct]
  -[IDSQuickRelayFixedTokenAllocator appleID]
  -[IDSQuickRelayFixedTokenAllocator setAppleID:]
  -[IDSQuickRelayFixedTokenAllocator initWithDefaults]
  -[IDSQuickRelayFixedTokenAllocator _setAllValuesFromDictionary:]
  -[IDSQuickRelayFixedTokenAllocator _isSessionInfoValid:]
  -[IDSQuickRelayFixedTokenAllocator _parseQuickRelayDefaults]
  -[IDSQuickRelayFixedTokenAllocator relayIP]
  -[IDSQuickRelayFixedTokenAllocator setRelayIP:]
  -[IDSQuickRelayFixedTokenAllocator relayPort]
  -[IDSQuickRelayFixedTokenAllocator setRelayPort:]
  -[IDSQuickRelayFixedTokenAllocator relaySessionKey]
  -[IDSQuickRelayFixedTokenAllocator setRelaySessionKey:]
  -[IDSQuickRelayFixedTokenAllocator relaySessionToken]
  -[IDSQuickRelayFixedTokenAllocator setRelaySessionToken:]
  -[IDSQuickRelayFixedTokenAllocator relaySessionID]
  -[IDSQuickRelayFixedTokenAllocator setRelaySessionID:]
  -[IDSQuickRelayFixedTokenAllocator relayCombinedSoftwareID]
  -[IDSQuickRelayFixedTokenAllocator setRelayCombinedSoftwareID:]
  -[IDSQuickRelayFixedTokenAllocator relayIPv6]
  -[IDSQuickRelayFixedTokenAllocator setRelayIPv6:]


_IDSConnection : NSObject <IDSDaemonListenerProtocol, IDSAccountDelegate, IDSDirectMessageConnectionDelegate, IDSSendXPCProtocol>
 @property  unsigned int wakingDowngradeCount
 @property  IDSDirectMessageConnection *directMessageConnection
 @property  NSDictionary *directMessagingMetadata
 @property  BOOL isActive
 @property  IDSAccount *account
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_IDSConnection sendMessage:toDestinations:priority:options:identifier:error:]
  -[_IDSConnection account]
  -[_IDSConnection createDirectMessageConnectionIfNeeded]
  -[_IDSConnection account:devicesChanged:]
  -[_IDSConnection sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:]
  -[_IDSConnection _shouldAcceptIncomingType:forTopic:localURI:remoteURI:validateAliases:guid:]
  -[_IDSConnection addDelegate:queue:]
  -[_IDSConnection _callDelegatesWithBlock:]
  -[_IDSConnection _connect]
  -[_IDSConnection wakingDowngradeCount]
  -[_IDSConnection receivedGroupSessionParticipantUpdate:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection account:connectedDevicesChanged:]
  -[_IDSConnection sendData:toDestinations:priority:options:identifier:error:]
  -[_IDSConnection _replaceSentinelInSendParameters:withCurrentActiveDevice:]
  -[_IDSConnection updateDeviceIdentity:error:]
  -[_IDSConnection sendServerMessage:command:]
  -[_IDSConnection setWakingDowngradeCount:]
  -[_IDSConnection accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection _callDelegatesWithBlock:group:]
  -[_IDSConnection _activeDevice]
  -[_IDSConnection _defaultPairedDevice]
  -[_IDSConnection dealloc]
  -[_IDSConnection directMessageConnection]
  -[_IDSConnection isActive]
  -[_IDSConnection _setTemporaryMessageContext:]
  -[_IDSConnection .cxx_destruct]
  -[_IDSConnection messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:]
  -[_IDSConnection sendXPCObject:]
  -[_IDSConnection sendProtobuf:toDestinations:priority:options:identifier:error:]
  -[_IDSConnection opportunisticDataReceived:withIdentifier:fromID:context:]
  -[_IDSConnection connection:incomingAckWithIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:isAppAck:]
  -[_IDSConnection _sendMissingMessageMetric:]
  -[_IDSConnection addDelegate:queue:completion:]
  -[_IDSConnection _canServiceNameAcceptMessagesInTransientRegistrationState:]
  -[_IDSConnection incomingInvitationUpdate:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection removeDelegate:]
  -[_IDSConnection incomingInvitation:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection didFlushCacheForService:remoteURI:fromURI:guid:]
  -[_IDSConnection _resendPendingSends]
  -[_IDSConnection pendingIncomingMessageWithGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection _isAccountInValidRegistrationStateToAcceptMessages]
  -[_IDSConnection dataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection account:isActiveChanged:]
  -[_IDSConnection _isDestinationSingleLocalAddress:]
  -[_IDSConnection messageIdentifier:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:]
  -[_IDSConnection groupShareReceived:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection daemonController]
  -[_IDSConnection connection:incomingProtobufFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection receivedMetadataForDirectMessaging:]
  -[_IDSConnection directMessagingMetadata]
  -[_IDSConnection sendInvitation:toDestination:priority:options:identifier:error:]
  -[_IDSConnection daemonConnected]
  -[_IDSConnection messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection setDirectMessagingMetadata:]
  -[_IDSConnection _handleLastCallForPendingIdentifier:callbackID:]
  -[_IDSConnection daemonListener]
  -[_IDSConnection setDelegateCapabilities:]
  -[_IDSConnection initWithAccount:commands:indirectDelegateCallouts:delegateContext:]
  -[_IDSConnection setDirectMessageConnection:]
  -[_IDSConnection account:nearbyDevicesChanged:]
  -[_IDSConnection connection:incomingGUIDAckFromDirectConnection:]
  -[_IDSConnection messageIdentifierInner:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:isDirectMessage:]
  -[_IDSConnection xpcObject:objectContext:]
  -[_IDSConnection accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection receivedGroupSessionParticipantDataUpdate:forTopic:toIdentifier:fromID:]
  -[_IDSConnection sendInvitationUpdate:toDestination:priority:options:identifier:error:]
  -[_IDSConnection _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
  -[_IDSConnection didSendOpportunisticDataWithIdentifier:onAccount:toIDs:]
  -[_IDSConnection messageIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:]
  -[_IDSConnection connection:messageSendFailed:responseCode:]
  -[_IDSConnection _sendWithParameters:options:loggingType:loggingDataSize:]
  -[_IDSConnection connection:incomingMessageFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection _init]
  -[_IDSConnection _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:]
  -[_IDSConnection connection:incomingDataFromDirectConnection:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection sendAppAckForDirectMessage:]
  -[_IDSConnection engramDataReceived:withGUID:forTopic:toIdentifier:fromID:context:]
  -[_IDSConnection checkTransportLogWithReason:]


_IDSSessionStore : NSObject
 @property  NSMapTable *sessionBySessionID

  // class methods
  +[_IDSSessionStore sharedInstance]

  // instance methods
  -[_IDSSessionStore .cxx_destruct]
  -[_IDSSessionStore init]
  -[_IDSSessionStore sessionForAccount:fromID:identifier:transportType:]
  -[_IDSSessionStore sessionBySessionID]
  -[_IDSSessionStore setSessionBySessionID:]


IDSDaemonProtocolController : NSObject
 @property  NSXPCConnection *connection
 @property  <IDSGroupContextDataSourceDaemonProtocol> *groupContextDataSource
 @property  <IDSGroupContextCacheMiddlewareDaemonProtocol> *groupContextCacheMiddleware
 @property  IDSGroupContextNotifyingObserver *observer

  // class methods
  +[IDSDaemonProtocolController sharedInstance]

  // instance methods
  -[IDSDaemonProtocolController .cxx_destruct]
  -[IDSDaemonProtocolController connection]
  -[IDSDaemonProtocolController observer]
  -[IDSDaemonProtocolController setObserver:]
  -[IDSDaemonProtocolController init]
  -[IDSDaemonProtocolController setConnection:]
  -[IDSDaemonProtocolController groupContextDataSource]
  -[IDSDaemonProtocolController groupContextCacheMiddleware]


IDSQuickSwitchAcknowledgementTracker : NSObject
 @property  BOOL isAwaitingAcknowledgement

  // instance methods
  -[IDSQuickSwitchAcknowledgementTracker isAwaitingAcknowledgement]
  -[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:]
  -[IDSQuickSwitchAcknowledgementTracker dealloc]
  -[IDSQuickSwitchAcknowledgementTracker .cxx_destruct]
  -[IDSQuickSwitchAcknowledgementTracker _accessDelegateIdentifiersInCriticalSectionWithBlock:]
  -[IDSQuickSwitchAcknowledgementTracker awaitAcknowledgementFromServiceDelegate:]
  -[IDSQuickSwitchAcknowledgementTracker identifierForServiceDelegate:]
  -[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromAllServiceDelegates]
  -[IDSQuickSwitchAcknowledgementTracker init]


IDSLocalPairingAddPairedDeviceInfo : NSObject <NSSecureCoding>
 @property  NSUUID *cbuuid
 @property  long long pairingProtocolVersion
 @property  NSData *BTOutOfBandKey
 @property  BOOL supportsIPsecWithSPPLink
 @property  long long pairingType
 @property  NSData *bluetoothMACAddress
 @property  BOOL shouldPairDirectlyOverIPsec

  // class methods
  +[IDSLocalPairingAddPairedDeviceInfo supportsSecureCoding]

  // instance methods
  -[IDSLocalPairingAddPairedDeviceInfo encodeWithCoder:]
  -[IDSLocalPairingAddPairedDeviceInfo .cxx_destruct]
  -[IDSLocalPairingAddPairedDeviceInfo initWithCoder:]
  -[IDSLocalPairingAddPairedDeviceInfo initWithCBUUID:pairingProtocolVersion:BTOutOfBandKey:]
  -[IDSLocalPairingAddPairedDeviceInfo cbuuid]
  -[IDSLocalPairingAddPairedDeviceInfo pairingProtocolVersion]
  -[IDSLocalPairingAddPairedDeviceInfo BTOutOfBandKey]
  -[IDSLocalPairingAddPairedDeviceInfo supportsIPsecWithSPPLink]
  -[IDSLocalPairingAddPairedDeviceInfo setSupportsIPsecWithSPPLink:]
  -[IDSLocalPairingAddPairedDeviceInfo bluetoothMACAddress]
  -[IDSLocalPairingAddPairedDeviceInfo setBluetoothMACAddress:]
  -[IDSLocalPairingAddPairedDeviceInfo shouldPairDirectlyOverIPsec]
  -[IDSLocalPairingAddPairedDeviceInfo setShouldPairDirectlyOverIPsec:]
  -[IDSLocalPairingAddPairedDeviceInfo pairingType]
  -[IDSLocalPairingAddPairedDeviceInfo setPairingType:]


_IDSDeviceConnectionActiveMap : NSObject
  // class methods
  +[_IDSDeviceConnectionActiveMap sharedInstance]

  // instance methods
  -[_IDSDeviceConnectionActiveMap .cxx_destruct]
  -[_IDSDeviceConnectionActiveMap init]
  -[_IDSDeviceConnectionActiveMap setActiveConnection:forKey:]
  -[_IDSDeviceConnectionActiveMap hasActiveConnection:forKey:]
  -[_IDSDeviceConnectionActiveMap removeActiveConnection:forKey:]


_IDSDeviceConnection : NSObject <IDSDaemonListenerProtocol>
 @property  int socket
 @property  unsigned long mtu
 @property  NSDictionary *metrics
 @property  NSInputStream *inputStream
 @property  NSOutputStream *outputStream
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_IDSDeviceConnection _close]
  -[_IDSDeviceConnection _connect]
  -[_IDSDeviceConnection mtu]
  -[_IDSDeviceConnection dealloc]
  -[_IDSDeviceConnection close]
  -[_IDSDeviceConnection socket]
  -[_IDSDeviceConnection .cxx_destruct]
  -[_IDSDeviceConnection inputStream]
  -[_IDSDeviceConnection outputStream]
  -[_IDSDeviceConnection xpcObject:objectContext:]
  -[_IDSDeviceConnection metrics]
  -[_IDSDeviceConnection _daemonDied:]
  -[_IDSDeviceConnection initWithDevice:options:completionHandler:queue:]
  -[_IDSDeviceConnection setStreamPairWithInputStream:outputStream:]
  -[_IDSDeviceConnection updateConnectionWithOptions:error:]
  -[_IDSDeviceConnection _cleanupCompletionBlock]
  -[_IDSDeviceConnection deviceConnectionKey]


_IDSAccountController : NSObject <IDSDaemonListenerProtocol>
 @property  NSSet *accounts
 @property  NSSet *internalAccounts
 @property  NSSet *enabledAccounts
 @property  NSString *serviceName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_IDSAccountController enabledAccounts]
  -[_IDSAccountController accountRemoved:]
  -[_IDSAccountController disableAccount:]
  -[_IDSAccountController addAccount:]
  -[_IDSAccountController enableAccount:]
  -[_IDSAccountController accounts]
  -[_IDSAccountController accountAdded:]
  -[_IDSAccountController addDelegate:queue:]
  -[_IDSAccountController _callDelegatesWithBlock:]
  -[_IDSAccountController _connect]
  -[_IDSAccountController _callDelegatesWithBlock:group:]
  -[_IDSAccountController setupAccountWithLoginID:password:completionHandler:]
  -[_IDSAccountController dealloc]
  -[_IDSAccountController serviceName]
  -[_IDSAccountController .cxx_destruct]
  -[_IDSAccountController _removeAndDeregisterAccount:]
  -[_IDSAccountController accountDisabled:onService:]
  -[_IDSAccountController _removeAccount:]
  -[_IDSAccountController _updateLocalAccountVisibility]
  -[_IDSAccountController removeDelegate:]
  -[_IDSAccountController _updateDelegatesWithOldAccounts:newAccounts:]
  -[_IDSAccountController accountEnabled:onService:]
  -[_IDSAccountController setupAccountWithLoginID:aliases:password:completionHandler:]
  -[_IDSAccountController _loadCachedAccounts]
  -[_IDSAccountController accountWithLoginID:service:]
  -[_IDSAccountController daemonDisconnected]
  -[_IDSAccountController _setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:]
  -[_IDSAccountController accountUpdated:]
  -[_IDSAccountController _loadCachedAccountsWithDictionaries:]
  -[_IDSAccountController _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
  -[_IDSAccountController accountWithUniqueID:]
  -[_IDSAccountController internalAccounts]
  -[_IDSAccountController accountsChanged:forTopic:]
  -[_IDSAccountController _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:]
  -[_IDSAccountController initWithService:delegateContext:]
  -[_IDSAccountController setupCompleteForAccount:transactionID:setupError:]
  -[_IDSAccountController setupAccountWithSetupParameters:aliases:completionHandler:]


IDSDictionaryInvitationContext : NSObject <IDSInvitationContext>
 @property  NSString *schemaIdentifier
 @property  long long contextType
 @property  NSDictionary *dictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IDSDictionaryInvitationContext supportsSecureCoding]

  // instance methods
  -[IDSDictionaryInvitationContext encodeWithCoder:]
  -[IDSDictionaryInvitationContext payload]
  -[IDSDictionaryInvitationContext initWithPayload:]
  -[IDSDictionaryInvitationContext .cxx_destruct]
  -[IDSDictionaryInvitationContext contextType]
  -[IDSDictionaryInvitationContext isEqual:]
  -[IDSDictionaryInvitationContext initWithCoder:]
  -[IDSDictionaryInvitationContext dictionary]
  -[IDSDictionaryInvitationContext schemaIdentifier]
  -[IDSDictionaryInvitationContext initWithDictionary:schema:]


IDSXPCDaemonController : NSObject
 @property  IDSXPCConnection *connection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *collaboratorPromiseDictionary
 @property  NSMutableDictionary *syncCollaboratorDictionary
 @property  NSMapTable *interruptionHandlerByTarget

  // class methods
  +[IDSXPCDaemonController weakSharedInstance]
  +[IDSXPCDaemonController performDaemonControllerTask:]

  // instance methods
  -[IDSXPCDaemonController setCollaboratorPromiseDictionary:]
  -[IDSXPCDaemonController _sync_collaboratorWithIdentifier:errorHandler:resolverBlock:]
  -[IDSXPCDaemonController opportunisticCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController activateWithCompletion:]
  -[IDSXPCDaemonController pairingCollaboratorWithTimeout:errorHandler:]
  -[IDSXPCDaemonController setInterruptionHandlerByTarget:]
  -[IDSXPCDaemonController dealloc]
  -[IDSXPCDaemonController .cxx_destruct]
  -[IDSXPCDaemonController setSyncCollaboratorDictionary:]
  -[IDSXPCDaemonController syncCollaboratorDictionary]
  -[IDSXPCDaemonController pairingCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController connection]
  -[IDSXPCDaemonController collaboratorPromiseDictionary]
  -[IDSXPCDaemonController initWithQueue:connectionCreationBlock:]
  -[IDSXPCDaemonController _collaboratorWithIdentifier:interface:timeout:errorHandler:resolverBlock:]
  -[IDSXPCDaemonController serverMessagingCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController setQueue:]
  -[IDSXPCDaemonController keyTransparencyCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController initWithQueue:]
  -[IDSXPCDaemonController pairedDeviceManagerCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController _initWithQueue:isSync:connectionCreationBlock:]
  -[IDSXPCDaemonController groupSessionKeyValueDeliveryProviderCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController queue]
  -[IDSXPCDaemonController interruptionHandlerByTarget]
  -[IDSXPCDaemonController initSyncControllerWithQueue:]
  -[IDSXPCDaemonController _timingOutDaemonProxyWithTimeout:errorHandler:]
  -[IDSXPCDaemonController _initWithQueue:isSync:]
  -[IDSXPCDaemonController interalTestingCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController firewallCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController performTask:]
  -[IDSXPCDaemonController registrationCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController removeInterruptionHandlerForTarget:]
  -[IDSXPCDaemonController _daemonProxyWithErrorHandler:]
  -[IDSXPCDaemonController activityMonitorCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController reunionSyncCollaboratorWithErrorHandler:]
  -[IDSXPCDaemonController setConnection:]
  -[IDSXPCDaemonController addInterruptionHandler:forTarget:]


IDSLocalPairingIdentityDataErrorPair : NSObject <NSSecureCoding>
 @property  NSData *identityData
 @property  NSError *error

  // class methods
  +[IDSLocalPairingIdentityDataErrorPair supportsSecureCoding]

  // instance methods
  -[IDSLocalPairingIdentityDataErrorPair encodeWithCoder:]
  -[IDSLocalPairingIdentityDataErrorPair error]
  -[IDSLocalPairingIdentityDataErrorPair identityData]
  -[IDSLocalPairingIdentityDataErrorPair .cxx_destruct]
  -[IDSLocalPairingIdentityDataErrorPair setError:]
  -[IDSLocalPairingIdentityDataErrorPair initWithError:]
  -[IDSLocalPairingIdentityDataErrorPair initWithCoder:]
  -[IDSLocalPairingIdentityDataErrorPair initWithIdentityData:error:]
  -[IDSLocalPairingIdentityDataErrorPair initWithIdentityData:]
  -[IDSLocalPairingIdentityDataErrorPair setIdentityData:]


IDSLocalPairingRecord : NSObject <NSSecureCoding>
 @property  NSDictionary *protectionClassIdentityDataMap

  // class methods
  +[IDSLocalPairingRecord supportsSecureCoding]

  // instance methods
  -[IDSLocalPairingRecord encodeWithCoder:]
  -[IDSLocalPairingRecord .cxx_destruct]
  -[IDSLocalPairingRecord initWithCoder:]
  -[IDSLocalPairingRecord identityDataForDataProtectionClass:error:]
  -[IDSLocalPairingRecord initWithIdentityDataClassA:classC:classD:]
  -[IDSLocalPairingRecord protectionClassIdentityDataMap]
  -[IDSLocalPairingRecord setProtectionClassIdentityDataMap:]


IDSLocalPairingPairedDeviceRecord : IDSLocalPairingRecord <NSSecureCoding>
 @property  NSUUID *cbuuid

  // class methods
  +[IDSLocalPairingPairedDeviceRecord supportsSecureCoding]

  // instance methods
  -[IDSLocalPairingPairedDeviceRecord encodeWithCoder:]
  -[IDSLocalPairingPairedDeviceRecord .cxx_destruct]
  -[IDSLocalPairingPairedDeviceRecord initWithCoder:]
  -[IDSLocalPairingPairedDeviceRecord cbuuid]
  -[IDSLocalPairingPairedDeviceRecord initWithCBUUID:publicIdentityDataClassA:classC:classD:]
  -[IDSLocalPairingPairedDeviceRecord _publicIdenityForDataProtectionClass:error:]
  -[IDSLocalPairingPairedDeviceRecord publicIdentityClassA:]
  -[IDSLocalPairingPairedDeviceRecord publicIdentityClassC:]
  -[IDSLocalPairingPairedDeviceRecord publicIdentityClassD:]


IDSLocalPairingLocalDeviceRecord : IDSLocalPairingRecord <NSSecureCoding>
  // class methods
  +[IDSLocalPairingLocalDeviceRecord supportsSecureCoding]

  // instance methods
  -[IDSLocalPairingLocalDeviceRecord initWithWithFullIdentityDataClassA:classC:classD:]
  -[IDSLocalPairingLocalDeviceRecord _fullIdenityForDataProtectionClass:error:]
  -[IDSLocalPairingLocalDeviceRecord fullIdentityClassA:]
  -[IDSLocalPairingLocalDeviceRecord fullIdentityClassC:]
  -[IDSLocalPairingLocalDeviceRecord fullIdentityClassD:]


IDSXPCGroupSessionKeyValueDeliveryProviderInterface : NSObject
  // class methods
  +[IDSXPCGroupSessionKeyValueDeliveryProviderInterface interface]


IDSKeyTransparencyManager : NSObject
  // instance methods
  -[IDSKeyTransparencyManager getKeyTransparencyOptInEligiblityForApplication:withCompletion:]
  -[IDSKeyTransparencyManager sendOptInUpdateForApplications:withCompletion:]


IDSAccount : NSObject
 @property  NSString *userUniqueIdentifier
 @property  NSArray *connectedDevices
 @property  _IDSAccount *_internal
 @property  BOOL isEnabled
 @property  BOOL _isEnabled
 @property  BOOL isUsableForOuterMessaging
 @property  NSArray *aliasesToRegister
 @property  NSArray *aliases
 @property  NSArray *aliasStrings
 @property  NSArray *vettedAliases
 @property  NSArray *handles
 @property  NSDictionary *pseudonymURIMap
 @property  NSArray *pseudonyms
 @property  NSDictionary *profileInfo
 @property  NSDictionary *accountInfo
 @property  int accountType
 @property  NSString *uniqueID
 @property  int registrationStatus
 @property  int registrationError
 @property  NSDictionary *registrationAlertInfo
 @property  long long profileValidationStatus
 @property  int profileValidationErrorReason
 @property  NSArray *registeredURIs
 @property  NSArray *accountRegisteredURIs
 @property  NSData *registrationCertificate
 @property  NSDate *dateRegistered
 @property  NSDate *nextRegistrationDate
 @property  NSData *pushToken
 @property  NSDictionary *regionServerContext
 @property  NSString *profileID
 @property  NSString *primaryServiceName
 @property  BOOL isUserDisabled
 @property  NSString *regionID
 @property  NSString *regionBasePhoneNumber
 @property  NSString *displayName
 @property  NSString *loginID
 @property  NSString *serviceName
 @property  BOOL isActive
 @property  BOOL canSend
 @property  NSArray *devices
 @property  NSArray *nearbyDevices

  // instance methods
  -[IDSAccount loginID]
  -[IDSAccount pushToken]
  -[IDSAccount _isEnabled]
  -[IDSAccount accountInfo]
  -[IDSAccount setLoginID:]
  -[IDSAccount registrationError]
  -[IDSAccount vettedAliases]
  -[IDSAccount nearbyDevices]
  -[IDSAccount registeredURIs]
  -[IDSAccount addDelegate:queue:]
  -[IDSAccount addAliases:]
  -[IDSAccount aliases]
  -[IDSAccount validateAliases:]
  -[IDSAccount uniqueID]
  -[IDSAccount userUniqueIdentifier]
  -[IDSAccount validateProfile]
  -[IDSAccount setAuthToken:]
  -[IDSAccount _reloadCachedDevices]
  -[IDSAccount setRegionID:]
  -[IDSAccount addRegistrationDelegate:queue:]
  -[IDSAccount updateAccountWithAccountInfo:]
  -[IDSAccount devices]
  -[IDSAccount profileValidationStatus]
  -[IDSAccount isUsableForOuterMessaging]
  -[IDSAccount passwordUpdated]
  -[IDSAccount unvalidateAliases:]
  -[IDSAccount dealloc]
  -[IDSAccount aliasStrings]
  -[IDSAccount _setIsEnabled:]
  -[IDSAccount primaryServiceName]
  -[IDSAccount setAccountInfo:]
  -[IDSAccount isActive]
  -[IDSAccount serviceName]
  -[IDSAccount _internal]
  -[IDSAccount .cxx_destruct]
  -[IDSAccount profileValidationErrorReason]
  -[IDSAccount accountRegisteredURIs]
  -[IDSAccount removeRegistrationDelegate:]
  -[IDSAccount setDisplayName:]
  -[IDSAccount regionServerContext]
  -[IDSAccount handles]
  -[IDSAccount registerAccount]
  -[IDSAccount setRegionBasePhoneNumber:]
  -[IDSAccount removeDelegate:]
  -[IDSAccount authenticateAccount]
  -[IDSAccount _reregisterAndReidentify:]
  -[IDSAccount isUserDisabled]
  -[IDSAccount pseudonymURIMap]
  -[IDSAccount dateRegistered]
  -[IDSAccount profileID]
  -[IDSAccount unregisterAccount]
  -[IDSAccount setPassword:]
  -[IDSAccount registrationCertificate]
  -[IDSAccount regionID]
  -[IDSAccount regionBasePhoneNumber]
  -[IDSAccount registrationStatus]
  -[IDSAccount displayName]
  -[IDSAccount updateAuthorizationCredentials:token:]
  -[IDSAccount connectedDevices]
  -[IDSAccount accountType]
  -[IDSAccount forceRemoveAccount]
  -[IDSAccount profileInfo]
  -[IDSAccount _callNearbyDevicesChanged]
  -[IDSAccount deactivateAndPurgeIdentify]
  -[IDSAccount canSend]
  -[IDSAccount nextRegistrationDate]
  -[IDSAccount pseudonyms]
  -[IDSAccount registrationAlertInfo]
  -[IDSAccount isEnabled]
  -[IDSAccount removeAliases:]
  -[IDSAccount aliasesToRegister]
  -[IDSAccount matchingSim]
  -[IDSAccount _initWithDictionary:uniqueID:serviceName:]
  -[IDSAccount initWithDictionary:uniqueID:serviceName:]
  -[IDSAccount initWithLoginID:uniqueID:serviceName:]


_IDSGenericCompletionHandler : IDSDelegateInfo
 @property  @? handler

  // instance methods
  -[_IDSGenericCompletionHandler setHandler:]
  -[_IDSGenericCompletionHandler dealloc]
  -[_IDSGenericCompletionHandler .cxx_destruct]
  -[_IDSGenericCompletionHandler initWithHandler:queue:]
  -[_IDSGenericCompletionHandler handler]


IDSHomeKitManager : NSObject <IDSDaemonListenerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IDSHomeKitManager sharedInstance]

  // instance methods
  -[IDSHomeKitManager dealloc]
  -[IDSHomeKitManager .cxx_destruct]
  -[IDSHomeKitManager init]
  -[IDSHomeKitManager serviceUserIDs:error:]
  -[IDSHomeKitManager adminAccessTokens:error:]
  -[IDSHomeKitManager consentTokens:error:]
  -[IDSHomeKitManager userAccessTokens:error:]
  -[IDSHomeKitManager refreshUserAccessTokens:error:]
  -[IDSHomeKitManager getServiceUserIDsWithCompletionBlock:queue:]
  -[IDSHomeKitManager getAdminAccessTokensWithWithServiceUserID:accessoryID:pairingToken:completionBlock:queue:]
  -[IDSHomeKitManager getConsentTokensWithServiceUserID:accessoryIDs:adminID:completionBlock:queue:]
  -[IDSHomeKitManager getUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:completionBlock:queue:]
  -[IDSHomeKitManager refreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:completionBlock:queue:]


IDSReportiMessageSpamDaemonResponseListener : NSObject <IDSDaemonListenerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSReportiMessageSpamDaemonResponseListener .cxx_destruct]
  -[IDSReportiMessageSpamDaemonResponseListener iMessageReportSpamCheckUnknownResponseForRequestID:status:abusive:delay:withError:]
  -[IDSReportiMessageSpamDaemonResponseListener initWithRequestTimer:]


IDSGroupSessionUnicastConnector : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *groupSessionIDAlias
 @property  unsigned long participantIDAlias
 @property  NSData *salt
 @property  long long dataMode
 @property  @? connectionReadyCallback
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_nw_connection> *cachedConnection

  // class methods
  +[IDSGroupSessionUnicastConnector supportsSecureCoding]
  +[IDSGroupSessionUnicastConnector requestNWConnectionWithDataBlob:completionHandler:]
  +[IDSGroupSessionUnicastConnector extractDictionaryFromDataBlobFrom:error:]
  +[IDSGroupSessionUnicastConnector requestNWConnectionToVirtualParticipant:forSession:completionHandler:]

  // instance methods
  -[IDSGroupSessionUnicastConnector setSalt:]
  -[IDSGroupSessionUnicastConnector encodeWithCoder:]
  -[IDSGroupSessionUnicastConnector .cxx_destruct]
  -[IDSGroupSessionUnicastConnector setQueue:]
  -[IDSGroupSessionUnicastConnector salt]
  -[IDSGroupSessionUnicastConnector copyWithZone:]
  -[IDSGroupSessionUnicastConnector queue]
  -[IDSGroupSessionUnicastConnector isEqual:]
  -[IDSGroupSessionUnicastConnector dataMode]
  -[IDSGroupSessionUnicastConnector initWithCoder:]
  -[IDSGroupSessionUnicastConnector initWithGroupSessionID:participantID:dataMode:]
  -[IDSGroupSessionUnicastConnector initWithGroupSessionIDAlias:participantIDAlias:salt:dataMode:]
  -[IDSGroupSessionUnicastConnector createDataBlobFrom:port:]
  -[IDSGroupSessionUnicastConnector requestDataBlob:]
  -[IDSGroupSessionUnicastConnector listenForIncomingConnection:]
  -[IDSGroupSessionUnicastConnector groupSessionIDAlias]
  -[IDSGroupSessionUnicastConnector participantIDAlias]
  -[IDSGroupSessionUnicastConnector connectionReadyCallback]
  -[IDSGroupSessionUnicastConnector setConnectionReadyCallback:]
  -[IDSGroupSessionUnicastConnector cachedConnection]
  -[IDSGroupSessionUnicastConnector setCachedConnection:]


_IDSAccount : NSObject <IDSDaemonListenerProtocol>
 @property  NSString *uniqueID
 @property  NSString *loginID
 @property  NSString *serviceName
 @property  NSString *primaryServiceName
 @property  NSString *pushTopic
 @property  int accountType
 @property  BOOL isInTransientRegistrationState
 @property  BOOL isTransientAllowlistedAccount
 @property  BOOL isFirstGDRAllowlistedAccount
 @property  BOOL isActive
 @property  BOOL isUserDisabled
 @property  BOOL canSend
 @property  BOOL isUsableForOuterMessaging
 @property  NSArray *devices
 @property  NSArray *nearbyDevices
 @property  NSArray *connectedDevices
 @property  NSArray *suppressedDevices
 @property  NSDictionary *profileInfo
 @property  NSArray *aliases
 @property  NSArray *aliasStrings
 @property  NSArray *vettedAliases
 @property  NSArray *aliasesToRegister
 @property  NSArray *handles
 @property  NSDictionary *pseudonymURIMap
 @property  NSArray *pseudonyms
 @property  NSDictionary *accountInfo
 @property  int registrationStatus
 @property  BOOL _isEnabled
 @property  NSString *userUniqueIdentifier
 @property  NSArray *registeredURIs
 @property  NSArray *accountRegisteredURIs
 @property  NSData *registrationCertificate
 @property  NSDate *dateRegistered
 @property  NSDate *nextRegistrationDate
 @property  NSData *pushToken
 @property  NSDictionary *regionServerContext
 @property  NSString *profileID
 @property  int registrationError
 @property  NSDictionary *registrationAlertInfo
 @property  long long profileValidationStatus
 @property  int profileValidationErrorReason
 @property  NSString *regionID
 @property  NSString *regionBasePhoneNumber
 @property  NSString *displayName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_IDSAccount loginID]
  -[_IDSAccount pushToken]
  -[_IDSAccount _isEnabled]
  -[_IDSAccount accountInfo]
  -[_IDSAccount setLoginID:]
  -[_IDSAccount registrationError]
  -[_IDSAccount _objectForKey:]
  -[_IDSAccount vettedAliases]
  -[_IDSAccount nearbyDevices]
  -[_IDSAccount registeredURIs]
  -[_IDSAccount addDelegate:queue:]
  -[_IDSAccount _callDelegatesWithBlock:]
  -[_IDSAccount _connect]
  -[_IDSAccount _isiCloudPairingService]
  -[_IDSAccount addAliases:]
  -[_IDSAccount aliases]
  -[_IDSAccount account:localDeviceAdded:]
  -[_IDSAccount validateAliases:]
  -[_IDSAccount _loadCachedDevices]
  -[_IDSAccount uniqueID]
  -[_IDSAccount userUniqueIdentifier]
  -[_IDSAccount validateProfile]
  -[_IDSAccount initWithDictionary:uniqueID:serviceName:delegateContext:]
  -[_IDSAccount _setObject:forKey:]
  -[_IDSAccount _isMagnoliaService]
  -[_IDSAccount setAuthToken:]
  -[_IDSAccount account:registrationStatusInfoChanged:]
  -[_IDSAccount _isThumperService]
  -[_IDSAccount _reloadCachedDevices]
  -[_IDSAccount setRegionID:]
  -[_IDSAccount addRegistrationDelegate:queue:]
  -[_IDSAccount _callDelegatesWithBlock:group:]
  -[_IDSAccount updateAccountWithAccountInfo:]
  -[_IDSAccount devices]
  -[_IDSAccount profileValidationStatus]
  -[_IDSAccount isUsableForOuterMessaging]
  -[_IDSAccount passwordUpdated]
  -[_IDSAccount unvalidateAliases:]
  -[_IDSAccount dealloc]
  -[_IDSAccount aliasStrings]
  -[_IDSAccount _setIsEnabled:]
  -[_IDSAccount primaryServiceName]
  -[_IDSAccount setAccountInfo:]
  -[_IDSAccount isActive]
  -[_IDSAccount _callConnectedDevicesChanged]
  -[_IDSAccount serviceName]
  -[_IDSAccount .cxx_destruct]
  -[_IDSAccount profileValidationErrorReason]
  -[_IDSAccount accountRegisteredURIs]
  -[_IDSAccount removeRegistrationDelegate:]
  -[_IDSAccount _updateDependentDevicesWithDevicesInfo:]
  -[_IDSAccount setDisplayName:]
  -[_IDSAccount regionServerContext]
  -[_IDSAccount handles]
  -[_IDSAccount registerAccount]
  -[_IDSAccount _callDevicesChanged]
  -[_IDSAccount isInTransientRegistrationState]
  -[_IDSAccount setRegionBasePhoneNumber:]
  -[_IDSAccount pushTopic]
  -[_IDSAccount removeDelegate:]
  -[_IDSAccount account:vettedAliasesChanged:]
  -[_IDSAccount registrationInfo]
  -[_IDSAccount authenticateAccount]
  -[_IDSAccount _reregisterAndReidentify:]
  -[_IDSAccount _callRegistrationDelegatesWithBlock:]
  -[_IDSAccount isUserDisabled]
  -[_IDSAccount account:aliasesChanged:]
  -[_IDSAccount pseudonymURIMap]
  -[_IDSAccount account:loginChanged:]
  -[_IDSAccount dateRegistered]
  -[_IDSAccount profileID]
  -[_IDSAccount unregisterAccount]
  -[_IDSAccount account:profileChanged:]
  -[_IDSAccount isTemporary]
  -[_IDSAccount _keychainRegistration]
  -[_IDSAccount setPassword:]
  -[_IDSAccount registrationCertificate]
  -[_IDSAccount regionID]
  -[_IDSAccount isFirstGDRAllowlistedAccount]
  -[_IDSAccount _isInvisibleAlias:]
  -[_IDSAccount regionBasePhoneNumber]
  -[_IDSAccount registrationStatus]
  -[_IDSAccount displayName]
  -[_IDSAccount _registeredURIs]
  -[_IDSAccount updateAuthorizationCredentials:token:]
  -[_IDSAccount connectedDevices]
  -[_IDSAccount accountType]
  -[_IDSAccount account:dependentDevicesUpdatedUponReconnect:]
  -[_IDSAccount _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
  -[_IDSAccount forceRemoveAccount]
  -[_IDSAccount profileInfo]
  -[_IDSAccount account:dependentDevicesUpdated:]
  -[_IDSAccount _callNearbyDevicesChanged]
  -[_IDSAccount deactivateAndPurgeIdentify]
  -[_IDSAccount canSend]
  -[_IDSAccount account:pseudonymsChanged:]
  -[_IDSAccount account:localDeviceRemoved:]
  -[_IDSAccount _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:]
  -[_IDSAccount isTransientAllowlistedAccount]
  -[_IDSAccount nextRegistrationDate]
  -[_IDSAccount pseudonyms]
  -[_IDSAccount registrationAlertInfo]
  -[_IDSAccount refreshRegistrationForAccount:]
  -[_IDSAccount account:displayNameChanged:]
  -[_IDSAccount initWithLoginID:uniqueID:serviceName:delegateContext:]
  -[_IDSAccount _callCloudConnectedDevicesChanged]
  -[_IDSAccount removeAliases:]
  -[_IDSAccount aliasesToRegister]
  -[_IDSAccount suppressedDevices]


IDSXPCPairedDeviceManagerInterface : NSObject
  // class methods
  +[IDSXPCPairedDeviceManagerInterface interface]


IDSService : NSObject
 @property  _IDSService *_internal
 @property  NSSet *internalAccounts
 @property  NSArray *URIs
 @property  NSDictionary *pseudonymURIMap
 @property  NSSet *accounts
 @property  NSArray *devices
 @property  NSString *serviceIdentifier
 @property  BOOL canSend

  // class methods
  +[IDSService checkMessageSize:priority:]
  +[IDSService serviceWithIdentifier:commands:manuallyAckMessages:completion:]
  +[IDSService serviceWithIdentifier:completion:]
  +[IDSService removeSentinelFromAliases:]

  // instance methods
  -[IDSService serviceDomain]
  -[IDSService sendMessage:toDestinations:priority:options:identifier:error:]
  -[IDSService accounts]
  -[IDSService linkedDevicesWithRelationship:]
  -[IDSService setPreferInfraWiFi:]
  -[IDSService pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:]
  -[IDSService serviceIdentifier]
  -[IDSService addDelegate:queue:]
  -[IDSService reportAction:ofTempURI:fromURI:withCompletion:]
  -[IDSService getProgressUpdateForIdentifier:error:]
  -[IDSService isPretendingToBeFull]
  -[IDSService aliases]
  -[IDSService scheduleTransactionLogTask:]
  -[IDSService setWakingPushPriority:error:]
  -[IDSService reportSpamMessage:]
  -[IDSService sendData:toDestinations:priority:options:identifier:error:]
  -[IDSService signData:withAlgorithm:options:completion:]
  -[IDSService linkedDeviceForFromID:withRelationship:]
  -[IDSService pseudonymForPseudonymURI:]
  -[IDSService sendCertifiedDeliveryReceipt:]
  -[IDSService activeAliases]
  -[IDSService initWithService:]
  -[IDSService URIs]
  -[IDSService sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:]
  -[IDSService devices]
  -[IDSService verifySignedData:matchesExpectedData:withTokenURI:forAlgorithm:options:completion:]
  -[IDSService firstRoutableInternetDestinationForSelf]
  -[IDSService dealloc]
  -[IDSService sendData:fromAccount:toDestinations:priority:options:identifier:error:]
  -[IDSService sendServerMessage:command:fromAccount:]
  -[IDSService deviceForUniqueID:]
  -[IDSService setLinkPreferences:]
  -[IDSService datagramConnectionForSessionDestination:uid:error:]
  -[IDSService _internal]
  -[IDSService sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:]
  -[IDSService .cxx_destruct]
  -[IDSService sendProtobuf:toDestinations:priority:options:identifier:error:]
  -[IDSService pseudonymsForMaskedURI:]
  -[IDSService streamConnectionForSocketDescriptor:error:]
  -[IDSService iCloudAccount]
  -[IDSService uriForFromID:]
  -[IDSService removeDelegate:]
  -[IDSService datagramConnectionForSessionDestination:error:]
  -[IDSService datagramConnectionForSocketDescriptor:error:]
  -[IDSService sendAckForMessageWithContext:]
  -[IDSService streamConnectionForSessionDestination:error:]
  -[IDSService cancelIdentifier:error:]
  -[IDSService pseudonymURIMap]
  -[IDSService cancelOpportunisticDataWithIdentifier:error:]
  -[IDSService deviceForFromID:]
  -[IDSService maxEffectivePayloadSize]
  -[IDSService devicesForBTUUID:]
  -[IDSService datagramChannelForSessionDestination:options:error:]
  -[IDSService provisionPseudonymWithProperties:requestProperties:completion:]
  -[IDSService startOTRTest:]
  -[IDSService internalAccounts]
  -[IDSService setPretendingToBeFull:]
  -[IDSService performGroupTask:]
  -[IDSService sendData:priority:options:identifier:error:]
  -[IDSService canSend]
  -[IDSService sendOpportunisticData:options:identifier:error:]
  -[IDSService testCloudQRConnection]
  -[IDSService internal]
  -[IDSService pseudonymsForMaskedURI:matchingProperties:]
  -[IDSService provisionPseudonymForURI:withProperties:requestProperties:completion:]
  -[IDSService datagramChannelForSocketDescriptor:error:]
  -[IDSService updateSubServices:forDevice:]
  -[IDSService sendMessage:fromAccount:toDestinations:priority:options:identifier:error:]
  -[IDSService setProtobufAction:forIncomingResponsesOfType:]
  -[IDSService setProtobufAction:forIncomingRequestsOfType:]
  -[IDSService accountMatchingSim:]
  -[IDSService accountMatchingSimIdentifier:]
  -[IDSService sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:]
  -[IDSService initWithService:commands:manuallyAckMessages:]
  -[IDSService initWithService:serviceDomain:]
  -[IDSService initWithService:commands:]
  -[IDSService initWithService:manuallyAckMessages:]
  -[IDSService addDelegate:withDelegateProperties:queue:]
  -[IDSService protobufActionForIncomingRequestsOfType:]
  -[IDSService protobufActionForIncomingResponsesOfType:]
  -[IDSService sendMessage:fromAccount:toDestinations:options:identifier:error:]
  -[IDSService sendInvitation:toDestination:options:identifier:error:]
  -[IDSService sendInvitationUpdate:toDestination:options:identifier:error:]
  -[IDSService sendAheadGroup:priority:options:identifier:error:]
  -[IDSService maxHomeKitPayloadSize]
  -[IDSService updateSubServices:]
  -[IDSService datagramChannelForSessionDestination:error:]
  -[IDSService activateAlias:]
  -[IDSService activateAliases:]
  -[IDSService deactivateAlias:]
  -[IDSService deactivateAliases:]
  -[IDSService _accountWithAlias:]
  -[IDSService provisionPseudonymWithProperties:completion:]
  -[IDSService provisionPseudonymForURI:withProperties:completion:]
  -[IDSService renewPseudonym:forUpdatedDuration:completion:]
  -[IDSService renewPseudonym:forUpdatedExpiryEpoch:completion:]
  -[IDSService revokePseudonym:completion:]
  -[IDSService pseudonymPropertiesWithFeatureID:expiryDurationInSeconds:]
  -[IDSService retrieveFirewallWithQueue:completion:]
  -[IDSService signData:withAlgorithm:completion:]
  -[IDSService verifySignedData:matchesExpectedData:withTokenURI:forAlgorithm:completion:]


IDSDaemonRequestContext : NSObject
  // instance methods
  -[IDSDaemonRequestContext responseHandler]
  -[IDSDaemonRequestContext dealloc]
  -[IDSDaemonRequestContext .cxx_destruct]
  -[IDSDaemonRequestContext timeoutBlock]
  -[IDSDaemonRequestContext systemTimer]
  -[IDSDaemonRequestContext initWithResponseHandler:timeoutBlock:systemTimer:]
  -[IDSDaemonRequestContext killSystemTimer]


IDSDaemonRequestTimer : NSObject
  // instance methods
  -[IDSDaemonRequestTimer _criticalInvokeTimeoutBlockForRequestID:]
  -[IDSDaemonRequestTimer dealloc]
  -[IDSDaemonRequestTimer _handleSystemTimerFired:]
  -[IDSDaemonRequestTimer .cxx_destruct]
  -[IDSDaemonRequestTimer _criticalFindRequestContextWithResponseHandler:]
  -[IDSDaemonRequestTimer _accessRequestContextMapInCriticalSectionWithBlock:]
  -[IDSDaemonRequestTimer _criticalInvalidateTimeoutAndReturnHandlerForRequestID:]
  -[IDSDaemonRequestTimer inFlightRequestCount]
  -[IDSDaemonRequestTimer invalidateTimeoutAndReturnHandlerForRequestID:]
  -[IDSDaemonRequestTimer invalidateTimeoutsAndReturnHandlersForAllRequests]
  -[IDSDaemonRequestTimer scheduleTimeoutWithResponseHandler:timeoutInterval:timeoutBlock:]
  -[IDSDaemonRequestTimer init]


IDSAutoCleanup : NSObject
  // instance methods
  -[IDSAutoCleanup dealloc]
  -[IDSAutoCleanup .cxx_destruct]
  -[IDSAutoCleanup initWithBlock:]
  -[IDSAutoCleanup incrementAccessCount]


_IDSService : NSObject <IDSGroupContextControllerDelegate, IDSAccountControllerDelegate, IDSConnectionDelegatePrivate, IDSDaemonListenerProtocol>
 @property  BOOL wantsPseudonymUpdates
 @property  NSDictionary *cachedPseudonymURIMap
 @property  CUTDeferredTaskQueue *pseudonymUpdateTaskQueue
 @property  IDSGroupContextController *groupContextController
 @property  NSMutableDictionary *completionBlocksByRequestID
 @property  NSSet *accounts
 @property  NSSet *internalAccounts
 @property  IDSAccount *iCloudAccount
 @property  NSArray *devices
 @property  IDSServiceProperties *serviceProperties
 @property  BOOL canSend
 @property  NSString *serviceDomain
 @property  BOOL pretendingToBeFull
 @property  BOOL manuallyAckMessages
 @property  long long maxEffectivePayloadSize
 @property  NSArray *URIs
 @property  NSDictionary *pseudonymURIMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_IDSService deviceForFromID:fromDevices:]
  +[_IDSService serviceWithIdentifier:commands:manuallyAckMessages:delegateContext:completion:]

  // instance methods
  -[_IDSService serviceDomain]
  -[_IDSService accounts]
  -[_IDSService connection:connectedDevicesChanged:]
  -[_IDSService _setupNewConnectionForAccount:]
  -[_IDSService linkedDevicesWithRelationship:]
  -[_IDSService setPreferInfraWiFi:]
  -[_IDSService pseudonymPropertiesWithFeatureID:scopeID:expiryDurationInSeconds:]
  -[_IDSService serviceProperties]
  -[_IDSService _updateLinkedDevicesWithDevicesInfo:]
  -[_IDSService addDelegate:queue:]
  -[_IDSService _initWithDelegateContext:]
  -[_IDSService _handlePretendingToBeFullWithIdentifier:]
  -[_IDSService manuallyAckMessages]
  -[_IDSService _callDelegatesWithBlock:]
  -[_IDSService setWantsPseudonymUpdates:]
  -[_IDSService wantsPseudonymUpdates]
  -[_IDSService reportAction:ofTempURI:fromURI:withCompletion:]
  -[_IDSService getProgressUpdateForIdentifier:error:]
  -[_IDSService connection:didSendOpportunisticDataWithIdentifier:toIDs:]
  -[_IDSService isPretendingToBeFull]
  -[_IDSService scheduleTransactionLogTask:]
  -[_IDSService _activeDeviceForUniqueID:]
  -[_IDSService setWakingPushPriority:error:]
  -[_IDSService reportSpamMessage:]
  -[_IDSService resendSubServicesToDaemonForCurrentDevice]
  -[_IDSService _calloutPseudonymsDidUpdate]
  -[_IDSService _processAccountSet:]
  -[_IDSService signData:withAlgorithm:options:completion:]
  -[_IDSService linkedDeviceForFromID:withRelationship:]
  -[_IDSService pseudonymForPseudonymURI:]
  -[_IDSService sendCertifiedDeliveryReceipt:]
  -[_IDSService connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:]
  -[_IDSService groupContextController:accountsForAlises:]
  -[_IDSService connection:incomingInvitation:fromID:context:]
  -[_IDSService URIs]
  -[_IDSService setManuallyAckMessages:]
  -[_IDSService _isDroppingMessages]
  -[_IDSService _callDelegatesWithBlock:group:]
  -[_IDSService connection:incomingData:fromID:context:]
  -[_IDSService service:linkedDevicesUpdated:]
  -[_IDSService sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:]
  -[_IDSService _stopAwaitingQuickSwitchAcknowledgementFromDelegateWithIdentifier:]
  -[_IDSService devices]
  -[_IDSService connection:isActiveChanged:]
  -[_IDSService verifySignedData:matchesExpectedData:withTokenURI:forAlgorithm:options:completion:]
  -[_IDSService firstRoutableInternetDestinationForSelf]
  -[_IDSService connection:nearbyDevicesChanged:]
  -[_IDSService dealloc]
  -[_IDSService sendData:fromAccount:toDestinations:priority:options:identifier:error:]
  -[_IDSService connection:account:receivedGroupSessionParticipantDataUpdate:]
  -[_IDSService _accountWithURI:orPseudonym:]
  -[_IDSService finishedReportingRequestUUID:withError:]
  -[_IDSService sendServerMessage:command:fromAccount:]
  -[_IDSService deviceForUniqueID:]
  -[_IDSService finishedRevokingPseudonymWithSuccess:error:requestUUID:]
  -[_IDSService connection:incomingTopLevelMessage:fromID:messageContext:]
  -[_IDSService setLinkPreferences:]
  -[_IDSService groupContextController:didCreateGroup:]
  -[_IDSService datagramConnectionForSessionDestination:uid:error:]
  -[_IDSService _loadCachedLinkedDevices]
  -[_IDSService _payloadFromDecryptedData:]
  -[_IDSService _preferredURIForAccount:]
  -[_IDSService sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:]
  -[_IDSService .cxx_destruct]
  -[_IDSService connection:incomingMessage:fromID:context:]
  -[_IDSService _callIsActiveChanged]
  -[_IDSService _tearDownConnectionForUniqueID:]
  -[_IDSService finishedProvisioningPseudonym:success:error:forRequestUUID:]
  -[_IDSService service:tinkerDeviceUpdated:]
  -[_IDSService _callDelegatesForDevicesChanged]
  -[_IDSService accountController:accountDisabled:]
  -[_IDSService _sendMissingMessageMetric:]
  -[_IDSService canSendMessageWithAccount:toDestination:]
  -[_IDSService _logConnectionMap]
  -[_IDSService _disableAccount:]
  -[_IDSService pseudonymUpdateTaskQueue]
  -[_IDSService pseudonymsForMaskedURI:]
  -[_IDSService streamConnectionForSocketDescriptor:error:]
  -[_IDSService _enableAccount:]
  -[_IDSService iCloudAccount]
  -[_IDSService _filteredAccountsFrom:]
  -[_IDSService uriForFromID:]
  -[_IDSService removeDelegate:]
  -[_IDSService connection:account:receivedGroupSessionParticipantUpdate:context:]
  -[_IDSService datagramConnectionForSessionDestination:error:]
  -[_IDSService datagramConnectionForSocketDescriptor:error:]
  -[_IDSService sendAckForMessageWithContext:]
  -[_IDSService connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:]
  -[_IDSService connection:didHintCheckingTransportLogWithReason:]
  -[_IDSService streamConnectionForSessionDestination:error:]
  -[_IDSService completionBlocksByRequestID]
  -[_IDSService cancelIdentifier:error:]
  -[_IDSService pseudonymURIMap]
  -[_IDSService connection:incomingOpportunisticData:withIdentifier:fromID:context:]
  -[_IDSService service:tinkerDeviceAdded:]
  -[_IDSService cancelOpportunisticDataWithIdentifier:error:]
  -[_IDSService connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:]
  -[_IDSService deviceForFromID:]
  -[_IDSService maxEffectivePayloadSize]
  -[_IDSService daemonController]
  -[_IDSService connection:identifier:didSendWithSuccess:error:context:]
  -[_IDSService finishedRenewingPseudonym:success:error:requestUUID:]
  -[_IDSService setProtobufAction:forProtobufType:isResponse:]
  -[_IDSService daemonConnected]
  -[_IDSService finishedVerifyingSignedDataForRequest:success:error:]
  -[_IDSService sendAheadGroup:priority:options:identifier:completion:]
  -[_IDSService _canAccount:sendWithFromID:]
  -[_IDSService OTRTestCallback:time:error:]
  -[_IDSService daemonListener]
  -[_IDSService sendInvitationUpdate:fromAccount:toDestination:options:identifier:error:]
  -[_IDSService devicesForBTUUID:]
  -[_IDSService protobufActionForType:isResponse:]
  -[_IDSService datagramChannelForSessionDestination:options:error:]
  -[_IDSService _messageTypeForCommand:]
  -[_IDSService daemonDisconnected]
  -[_IDSService setCompletionBlocksByRequestID:]
  -[_IDSService provisionPseudonymWithProperties:requestProperties:completion:]
  -[_IDSService accountController:accountAdded:]
  -[_IDSService connection:incomingProtobuf:fromID:context:]
  -[_IDSService connection:devicesChanged:]
  -[_IDSService initWithService:commands:manuallyAckMessages:delegateContext:]
  -[_IDSService connection:incomingAccessoryData:fromID:context:]
  -[_IDSService connection:incomingEngramMessage:fromID:context:]
  -[_IDSService connection:didFlushCacheForRemoteURI:fromURI:guid:]
  -[_IDSService accountController:accountRemoved:]
  -[_IDSService _sendingAccountForAccount:destination:fromID:]
  -[_IDSService _acknowledgementBlockWithDelegateIdentifier:]
  -[_IDSService groupContextController]
  -[_IDSService startOTRTest:]
  -[_IDSService connection:incomingPendingMessageFromID:context:]
  -[_IDSService cachedPseudonymURIMap]
  -[_IDSService _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:]
  -[_IDSService connection:didUpdateDeviceIdentity:error:context:]
  -[_IDSService internalAccounts]
  -[_IDSService setPretendingToBeFull:]
  -[_IDSService connection:identifier:fromID:hasBeenDeliveredWithContext:]
  -[_IDSService revokePseudonym:requestProperties:completion:]
  -[_IDSService performGroupTask:]
  -[_IDSService sendData:priority:options:identifier:error:]
  -[_IDSService sendResourceAtURL:metadata:fromAccount:toDestinations:priority:options:identifier:error:]
  -[_IDSService renewPseudonym:forUpdatedExpiryEpoch:requestProperties:completion:]
  -[_IDSService service:tinkerDeviceRemoved:]
  -[_IDSService setPseudonymUpdateTaskQueue:]
  -[_IDSService canSend]
  -[_IDSService sendOpportunisticData:options:identifier:error:]
  -[_IDSService sendInvitation:fromAccount:toDestination:options:identifier:error:]
  -[_IDSService account:pseudonymsChanged:]
  -[_IDSService setCachedPseudonymURIMap:]
  -[_IDSService _init]
  -[_IDSService _callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:]
  -[_IDSService testCloudQRConnection]
  -[_IDSService connection:incomingInvitationUpdate:fromID:context:]
  -[_IDSService _reloadCachedLinkedDevices]
  -[_IDSService connection:incomingGroupData:fromID:context:]
  -[_IDSService finishedSigningForRequest:signedData:error:]
  -[_IDSService pseudonymsForMaskedURI:matchingProperties:]
  -[_IDSService _callLinkedDevicesChanged]
  -[_IDSService provisionPseudonymForURI:withProperties:requestProperties:completion:]
  -[_IDSService datagramChannelForSocketDescriptor:error:]
  -[_IDSService connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:]
  -[_IDSService updateSubServices:forDevice:]
  -[_IDSService _sendingAccountForAccount:]
  -[_IDSService sendMessage:fromAccount:toDestinations:priority:options:identifier:error:]
  -[_IDSService didSwitchActivePairedDevice:forService:wasHandled:]
  -[_IDSService _enforceSandboxPolicy]
  -[_IDSService accountController:accountEnabled:]


IDSServicePseudonymChange : NSObject
 @property  IDSPseudonym *pseudonym
 @property  unsigned long changeType
 @property  long long updateFlags

  // instance methods
  -[IDSServicePseudonymChange changeType]
  -[IDSServicePseudonymChange .cxx_destruct]
  -[IDSServicePseudonymChange updateFlags]
  -[IDSServicePseudonymChange pseudonym]
  -[IDSServicePseudonymChange isEqual:]
  -[IDSServicePseudonymChange initWithPseudonym:changeType:updateFlags:]
  -[IDSServicePseudonymChange isEqualToPseudonymChange:]


IDSTransactionLogMessage : NSObject
 @property  NSString *fromID
 @property  NSString *loginID
 @property  NSString *accountUniqueID
 @property  NSString *serviceName

  // class methods
  +[IDSTransactionLogMessage transactionLogMessageFromDictionaryRepresentation:]

  // instance methods
  -[IDSTransactionLogMessage loginID]
  -[IDSTransactionLogMessage serviceName]
  -[IDSTransactionLogMessage .cxx_destruct]
  -[IDSTransactionLogMessage initWithDictionaryRepresentation:]
  -[IDSTransactionLogMessage _dictionaryRepresentation]
  -[IDSTransactionLogMessage dictionaryRepresentation]
  -[IDSTransactionLogMessage _initWithAccountUniqueID:fromID:loginID:serviceName:]
  -[IDSTransactionLogMessage accountUniqueID]
  -[IDSTransactionLogMessage fromID]


IDSTransactionLogDataMessage : IDSTransactionLogMessage
 @property  NSData *dataValue

  // instance methods
  -[IDSTransactionLogDataMessage dataValue]
  -[IDSTransactionLogDataMessage .cxx_destruct]
  -[IDSTransactionLogDataMessage initWithDictionaryRepresentation:]
  -[IDSTransactionLogDataMessage dictionaryRepresentation]
  -[IDSTransactionLogDataMessage initWithData:accountUniqueID:fromID:loginID:serviceName:]


IDSTransactionLogDictionaryMessage : IDSTransactionLogMessage
 @property  NSDictionary *dictionaryValue

  // instance methods
  -[IDSTransactionLogDictionaryMessage dictionaryValue]
  -[IDSTransactionLogDictionaryMessage .cxx_destruct]
  -[IDSTransactionLogDictionaryMessage initWithDictionaryRepresentation:]
  -[IDSTransactionLogDictionaryMessage dictionaryRepresentation]
  -[IDSTransactionLogDictionaryMessage initWithDictionary:accountUniqueID:fromID:loginID:serviceName:]


IDSPhoneSubscription : NSObject <NSSecureCoding, NSCopying>
 @property  long long subscriptionSlot
 @property  NSString *labelID

  // class methods
  +[IDSPhoneSubscription supportsSecureCoding]
  +[IDSPhoneSubscription phoneSubscriptionWithSubscriptionSlot:]
  +[IDSPhoneSubscription phoneSubscriptionsFromCTSIMs:]
  +[IDSPhoneSubscription phoneSubscriptionWithSIM:]
  +[IDSPhoneSubscription CTSIMSFromPhoneSubscriptions:]
  +[IDSPhoneSubscription phoneSubscriptionWithLabelID:]
  +[IDSPhoneSubscription phoneSubscriptionWithSubscriptionSlot:andLabelID:]

  // instance methods
  -[IDSPhoneSubscription labelID]
  -[IDSPhoneSubscription encodeWithCoder:]
  -[IDSPhoneSubscription .cxx_destruct]
  -[IDSPhoneSubscription copyWithZone:]
  -[IDSPhoneSubscription setLabelID:]
  -[IDSPhoneSubscription isEqual:]
  -[IDSPhoneSubscription initWithCoder:]
  -[IDSPhoneSubscription matchingSim]
  -[IDSPhoneSubscription initWithSubscriptionSlot:labelID:]
  -[IDSPhoneSubscription isEqualToPhoneSubscription:]
  -[IDSPhoneSubscription subscriptionSlot]
  -[IDSPhoneSubscription setSubscriptionSlot:]


IDSPhoneTemporaryAliasDescription : NSObject <NSSecureCoding, NSCopying>
 @property  IDSURI *URI
 @property  NSDate *expirationDate
 @property  BOOL selected

  // class methods
  +[IDSPhoneTemporaryAliasDescription supportsSecureCoding]

  // instance methods
  -[IDSPhoneTemporaryAliasDescription expirationDate]
  -[IDSPhoneTemporaryAliasDescription encodeWithCoder:]
  -[IDSPhoneTemporaryAliasDescription .cxx_destruct]
  -[IDSPhoneTemporaryAliasDescription copyWithZone:]
  -[IDSPhoneTemporaryAliasDescription URI]
  -[IDSPhoneTemporaryAliasDescription selected]
  -[IDSPhoneTemporaryAliasDescription initWithCoder:]
  -[IDSPhoneTemporaryAliasDescription initWithURI:expirationDate:selected:]


IDSPhoneSubscriptionSelector : NSObject
 @property  IDSXPCDaemonController *syncDaemonController
 @property  @? syncDaemonControllerBuilder

  // instance methods
  -[IDSPhoneSubscriptionSelector requestSelectedSubscriptionsWithCompletion:]
  -[IDSPhoneSubscriptionSelector removeTemporaryPhoneAlias:withError:]
  -[IDSPhoneSubscriptionSelector unselectSubscription:withCompletion:]
  -[IDSPhoneSubscriptionSelector disableTemporaryPhoneAlias:withError:]
  -[IDSPhoneSubscriptionSelector setSyncDaemonController:]
  -[IDSPhoneSubscriptionSelector setSyncDaemonControllerBuilder:]
  -[IDSPhoneSubscriptionSelector .cxx_destruct]
  -[IDSPhoneSubscriptionSelector removeTemporaryPhoneAlias:withCompletion:]
  -[IDSPhoneSubscriptionSelector selectSubscription:withCompletion:]
  -[IDSPhoneSubscriptionSelector selectedSubscriptionsWithError:]
  -[IDSPhoneSubscriptionSelector initWithSyncDaemonControllerBuilder:]
  -[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withCompletion:]
  -[IDSPhoneSubscriptionSelector syncDaemonController]
  -[IDSPhoneSubscriptionSelector _performSyncAction:]
  -[IDSPhoneSubscriptionSelector selectSubscription:withError:]
  -[IDSPhoneSubscriptionSelector unselectedTemporaryPhoneAliasesWithError:]
  -[IDSPhoneSubscriptionSelector setSelectedSubscriptions:withError:]
  -[IDSPhoneSubscriptionSelector enableTemporaryPhoneAlias:withCompletion:]
  -[IDSPhoneSubscriptionSelector init]
  -[IDSPhoneSubscriptionSelector enableTemporaryPhoneAlias:withError:]
  -[IDSPhoneSubscriptionSelector requestUnselectedTemporaryPhoneAliasesWithError:]
  -[IDSPhoneSubscriptionSelector unselectSubscription:withError:]
  -[IDSPhoneSubscriptionSelector syncDaemonControllerBuilder]
  -[IDSPhoneSubscriptionSelector disableTemporaryPhoneAlias:withCompletion:]


IDSGroupSessionKeyValueDeliveryHandlerProxy : NSObject <IDSXPCGroupSessionKeyValueDeliveryDelegate>
 @property  NSUUID *handlerUUID
 @property  <IDSGroupSessionKeyValueDeliveryHandler> *handler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSGroupSessionKeyValueDeliveryHandlerProxy handlerUUID]
  -[IDSGroupSessionKeyValueDeliveryHandlerProxy setHandler:]
  -[IDSGroupSessionKeyValueDeliveryHandlerProxy .cxx_destruct]
  -[IDSGroupSessionKeyValueDeliveryHandlerProxy handler]
  -[IDSGroupSessionKeyValueDeliveryHandlerProxy initWithHandler:]
  -[IDSGroupSessionKeyValueDeliveryHandlerProxy handleGroupSessionKeyValues:]
  -[IDSGroupSessionKeyValueDeliveryHandlerProxy setHandlerUUID:]


IDSGroupSessionKeyValueDelivery : NSObject <NSSecureCoding>
  // class methods
  +[IDSGroupSessionKeyValueDelivery supportsSecureCoding]

  // instance methods
  -[IDSGroupSessionKeyValueDelivery encodeWithCoder:]
  -[IDSGroupSessionKeyValueDelivery dealloc]
  -[IDSGroupSessionKeyValueDelivery .cxx_destruct]
  -[IDSGroupSessionKeyValueDelivery initWithSessionID:]
  -[IDSGroupSessionKeyValueDelivery initWithCoder:]
  -[IDSGroupSessionKeyValueDelivery _setUpXPC]
  -[IDSGroupSessionKeyValueDelivery addDeliveryHandler:]
  -[IDSGroupSessionKeyValueDelivery removeDeliveryHandler:]
  -[IDSGroupSessionKeyValueDelivery sendData:forKey:encryption:capability:]
  -[IDSGroupSessionKeyValueDelivery sendData:forKey:encryption:capability:completionHandler:]
  -[IDSGroupSessionKeyValueDelivery test_receiveData:forKey:fromParticipant:]


IDSTransportLog : NSObject
  // class methods
  +[IDSTransportLog IDSConnection]
  +[IDSTransportLog IDSDeviceConnection]
  +[IDSTransportLog IDSReportSpam]
  +[IDSTransportLog IDSService]
  +[IDSTransportLog NRPairing]
  +[IDSTransportLog IDSLocalSetup]
  +[IDSTransportLog IDSDataChannels]
  +[IDSTransportLog QRAllocator]


IDSLogging : NSObject
  // class methods
  +[IDSLogging _IDSSession]
  +[IDSLogging DaemonProxy]
  +[IDSLogging continuity]
  +[IDSLogging IDSiCloudSignInHack]
  +[IDSLogging _IDSGroupSession_oversize]
  +[IDSLogging GUIDTRACE]
  +[IDSLogging IDSSession]
  +[IDSLogging IDSAccountController]
  +[IDSLogging IDSConnection]
  +[IDSLogging IDSDeviceConnection]
  +[IDSLogging DaemonListener]
  +[IDSLogging ServiceAvailability]
  +[IDSLogging IDSService]
  +[IDSLogging IDSDevice]
  +[IDSLogging transactionLog]
  +[IDSLogging general]
  +[IDSLogging IDSDirectMessagingConnection]
  +[IDSLogging Connection]
  +[IDSLogging IDSConnection_oversize]
  +[IDSLogging DaemonController]
  +[IDSLogging IDSDataChannels]
  +[IDSLogging IDSRealTimeEncryptionProxy]
  +[IDSLogging Accounts]
  +[IDSLogging CFS]
  +[IDSLogging _IDSGroupSession]
  +[IDSLogging IDQuery]
  +[IDSLogging _IDSService]


IDSInvitation : NSObject
 @property  NSUUID *uniqueID
 @property  NSString *senderMergeID
 @property  long long state
 @property  <IDSInvitationContext> *context
 @property  NSDate *expirationDate

  // instance methods
  -[IDSInvitation expirationDate]
  -[IDSInvitation uniqueID]
  -[IDSInvitation state]
  -[IDSInvitation .cxx_destruct]
  -[IDSInvitation context]
  -[IDSInvitation initWithState:expirationDate:uniqueID:context:]
  -[IDSInvitation senderMergeID]


IDSSentInvitation : IDSInvitation <NSSecureCoding>
 @property  <IDSDestinationProtocol> *destination

  // class methods
  +[IDSSentInvitation supportsSecureCoding]

  // instance methods
  -[IDSSentInvitation destination]
  -[IDSSentInvitation encodeWithCoder:]
  -[IDSSentInvitation .cxx_destruct]
  -[IDSSentInvitation setContext:]
  -[IDSSentInvitation isEqual:]
  -[IDSSentInvitation setState:]
  -[IDSSentInvitation initWithCoder:]
  -[IDSSentInvitation initWithDestination:state:expirationDate:uniqueID:context:]
  -[IDSSentInvitation setSenderMergeID:]


IDSReceivedInvitation : IDSInvitation <NSSecureCoding>
 @property  NSString *fromID

  // class methods
  +[IDSReceivedInvitation supportsSecureCoding]

  // instance methods
  -[IDSReceivedInvitation encodeWithCoder:]
  -[IDSReceivedInvitation .cxx_destruct]
  -[IDSReceivedInvitation setContext:]
  -[IDSReceivedInvitation isEqual:]
  -[IDSReceivedInvitation setState:]
  -[IDSReceivedInvitation initWithCoder:]
  -[IDSReceivedInvitation fromID]
  -[IDSReceivedInvitation setSenderMergeID:]
  -[IDSReceivedInvitation initWithfromID:state:expirationDate:uniqueID:context:]


IDSXPCConnection : NSObject <NSXPCConnectionDelegate>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  BOOL syncOntoMain
 @property  NSXPCConnection *connection
 @property  NSMutableDictionary *pendingTransactions
 @property  IDSXPCConnection *rootConnection
 @property  <NSXPCProxyCreating> *remoteObject
 @property  @? invalidationHandler
 @property  BOOL forSyncMessaging
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IDSXPCConnection errorForMissingEntitlement:]

  // instance methods
  -[IDSXPCConnection setInvalidationHandler:]
  -[IDSXPCConnection remoteObject]
  -[IDSXPCConnection initWithQueue:syncOntoMain:takingOverAndResumingConnection:]
  -[IDSXPCConnection rootConnection]
  -[IDSXPCConnection setSyncOntoMain:]
  -[IDSXPCConnection setPendingTransactions:]
  -[IDSXPCConnection setRemoteObject:]
  -[IDSXPCConnection dealloc]
  -[IDSXPCConnection valueForEntitlement:]
  -[IDSXPCConnection pendingTransactions]
  -[IDSXPCConnection .cxx_destruct]
  -[IDSXPCConnection _cleanupAllPendingTransactions]
  -[IDSXPCConnection connection]
  -[IDSXPCConnection connection:handleInvocation:isReply:]
  -[IDSXPCConnection setForSyncMessaging:]
  -[IDSXPCConnection initWithQueue:remoteObject:]
  -[IDSXPCConnection synchronousRemoteObjectProxyWithErrorHandler:]
  -[IDSXPCConnection forSyncMessaging]
  -[IDSXPCConnection initForSyncMessagingWithQueue:takingOverAndResumingConnection:]
  -[IDSXPCConnection remoteObjectProxyWithErrorHandler:]
  -[IDSXPCConnection setQueue:]
  -[IDSXPCConnection _initWithQueue:syncOntoMain:takingOverAndResumingConnection:forSyncMessaging:]
  -[IDSXPCConnection syncOntoMain]
  -[IDSXPCConnection initWithQueue:takingOverAndResumingConnection:]
  -[IDSXPCConnection queue]
  -[IDSXPCConnection invalidationHandler]
  -[IDSXPCConnection initWithRemoteObject:rootConnection:]
  -[IDSXPCConnection remoteObjectProxyWithTimeoutInSeconds:errorHandler:]
  -[IDSXPCConnection setRootConnection:]
  -[IDSXPCConnection hasEntitlement:]
  -[IDSXPCConnection setConnection:]


IDSXPCConnectionTimeoutProxy : NSObject
 @property  id target
 @property  IDSXPCConnection *connection
 @property  double timeout
 @property  @? errorHandler

  // instance methods
  -[IDSXPCConnectionTimeoutProxy methodSignatureForSelector:]
  -[IDSXPCConnectionTimeoutProxy setTarget:]
  -[IDSXPCConnectionTimeoutProxy target]
  -[IDSXPCConnectionTimeoutProxy setTimeout:]
  -[IDSXPCConnectionTimeoutProxy dealloc]
  -[IDSXPCConnectionTimeoutProxy errorHandler]
  -[IDSXPCConnectionTimeoutProxy respondsToSelector:]
  -[IDSXPCConnectionTimeoutProxy .cxx_destruct]
  -[IDSXPCConnectionTimeoutProxy _invocationHasBlock:]
  -[IDSXPCConnectionTimeoutProxy connection]
  -[IDSXPCConnectionTimeoutProxy timeout]
  -[IDSXPCConnectionTimeoutProxy setErrorHandler:]
  -[IDSXPCConnectionTimeoutProxy forwardInvocation:]
  -[IDSXPCConnectionTimeoutProxy initWithTarget:connection:timeoutInSeconds:errorHandler:]
  -[IDSXPCConnectionTimeoutProxy setConnection:]


_IDSDevice : NSObject
 @property  NSString *uniqueID
 @property  NSString *modelIdentifier
 @property  NSString *productName
 @property  NSString *productVersion
 @property  NSString *productBuildVersion
 @property  NSString *name
 @property  NSString *service
 @property  BOOL nearby
 @property  BOOL connected
 @property  BOOL cloudConnected
 @property  BOOL locallyPresent
 @property  BOOL isDefaultPairedDevice
 @property  BOOL isLocallyPaired
 @property  unsigned long pairingProtocolVersion
 @property  unsigned long minCompatibilityVersion
 @property  unsigned long maxCompatibilityVersion
 @property  unsigned long serviceMinCompatibilityVersion
 @property  BOOL supportsiCloudPairing
 @property  BOOL supportsTethering
 @property  BOOL supportsHandoff
 @property  BOOL supportsApplePay
 @property  NSData *pushToken
 @property  NSArray *identities
 @property  NSUUID *nsuuid
 @property  NSUUID *stableBluetoothIdentifier
 @property  BOOL supportsSMSRelay
 @property  BOOL supportsMMSRelay
 @property  BOOL supportsPhoneCalls
 @property  long long deviceType
 @property  NSString *deviceColor
 @property  NSString *enclosureColor
 @property  NSArray *linkedUserURIs
 @property  BOOL isHSATrusted
 @property  BOOL isActive
 @property  long long relationship
 @property  IDSEndpointCapabilities *capabilities
 @property  NSDate *lastActivityDate
 @property  NSString *uniqueIDOverride

  // instance methods
  -[_IDSDevice pushToken]
  -[_IDSDevice identities]
  -[_IDSDevice productBuildVersion]
  -[_IDSDevice enclosureColor]
  -[_IDSDevice isConnected]
  -[_IDSDevice _setAccount:]
  -[_IDSDevice uniqueID]
  -[_IDSDevice relationship]
  -[_IDSDevice fullDescription]
  -[_IDSDevice supportsApplePay]
  -[_IDSDevice modelIdentifier]
  -[_IDSDevice initWithDictionary:]
  -[_IDSDevice dealloc]
  -[_IDSDevice isActive]
  -[_IDSDevice productName]
  -[_IDSDevice .cxx_destruct]
  -[_IDSDevice capabilities]
  -[_IDSDevice supportsHandoff]
  -[_IDSDevice deviceType]
  -[_IDSDevice supportsTethering]
  -[_IDSDevice service]
  -[_IDSDevice compactDescription]
  -[_IDSDevice productVersion]
  -[_IDSDevice isNearby]
  -[_IDSDevice deviceColor]
  -[_IDSDevice name]
  -[_IDSDevice minCompatibilityVersion]
  -[_IDSDevice lastActivityDate]
  -[_IDSDevice isDefaultPairedDevice]
  -[_IDSDevice nsuuid]
  -[_IDSDevice pairingProtocolVersion]
  -[_IDSDevice uniqueIDOverride]
  -[_IDSDevice isCloudConnected]
  -[_IDSDevice locallyPresent]
  -[_IDSDevice isLocallyPaired]
  -[_IDSDevice maxCompatibilityVersion]
  -[_IDSDevice serviceMinCompatibilityVersion]
  -[_IDSDevice linkedUserURIs]
  -[_IDSDevice setNSUUID:]
  -[_IDSDevice stableBluetoothIdentifier]
  -[_IDSDevice supportsiCloudPairing]
  -[_IDSDevice supportsSMSRelay]
  -[_IDSDevice supportsMMSRelay]
  -[_IDSDevice supportsPhoneCalls]
  -[_IDSDevice isHSATrusted]
  -[_IDSDevice _addIdentity:]
  -[_IDSDevice isTinker]
  -[_IDSDevice _nearbyStateChanged]
  -[_IDSDevice _connectedStateChanged]
  -[_IDSDevice _cloudConnectedStateChanged]
  -[_IDSDevice _stateChanged]
  -[_IDSDevice _setService:]


_IDSIDQueryController : NSObject <IDSDaemonListenerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_IDSIDQueryController initialize]
  +[_IDSIDQueryController _createXPCConnectionOnQueue:]

  // instance methods
  -[_IDSIDQueryController _currentCachedIDStatusForDestination:service:listenerID:]
  -[_IDSIDQueryController removeDelegate:forService:listenerID:]
  -[_IDSIDQueryController _currentRemoteDevicesForDestinations:service:listenerID:queue:waitForReply:completionBlock:]
  -[_IDSIDQueryController addDelegate:queue:]
  -[_IDSIDQueryController _callDelegatesWithBlock:]
  -[_IDSIDQueryController _connect]
  -[_IDSIDQueryController __sendMessage:queue:reply:failBlock:waitForReply:]
  -[_IDSIDQueryController _setCurrentIDStatus:forDestination:service:]
  -[_IDSIDQueryController ___oldDealloc]
  -[_IDSIDQueryController addDelegate:forService:listenerID:queue:]
  -[_IDSIDQueryController _idStatusForDestinations:service:listenerID:allowRenew:respectExpiry:waitForReply:forceRefresh:bypassLimit:completionBlock:]
  -[_IDSIDQueryController IDQueryCompletedWithFromURI:idStatusUpdates:service:success:error:]
  -[_IDSIDQueryController _cacheForService:]
  -[_IDSIDQueryController _sync_refreshIDStatusForDestinations:service:listenerID:completionBlock:]
  -[_IDSIDQueryController dealloc]
  -[_IDSIDQueryController _requestIDInfoForDestinations:service:infoTypes:options:listenerID:queue:completionBlock:]
  -[_IDSIDQueryController _sync_currentIDStatusForDestinations:service:respectExpiry:listenerID:completionBlock:]
  -[_IDSIDQueryController .cxx_destruct]
  -[_IDSIDQueryController refreshIDStatusForDestinations:service:listenerID:forceRefresh:queue:completionBlock:]
  -[_IDSIDQueryController _requestStatusForDestinations:service:waitForReply:forceRefresh:bypassLimit:listenerID:completionBlock:]
  -[_IDSIDQueryController _requestRemoteDevicesForDestination:service:listenerID:waitForReply:completionBlock:]
  -[_IDSIDQueryController initWithDelegateContext:queueController:]
  -[_IDSIDQueryController removeListenerID:forService:]
  -[_IDSIDQueryController _purgeIDStatusCacheAfter:]
  -[_IDSIDQueryController removeDelegate:]
  -[_IDSIDQueryController currentIDStatusForDestinations:service:respectExpiry:listenerID:queue:completionBlock:]
  -[_IDSIDQueryController currentIDStatusForDestination:service:respectExpiry:listenerID:queue:completionBlock:]
  -[_IDSIDQueryController _delegateMapForListenerID:service:]
  -[_IDSIDQueryController requiredIDStatusForDestinations:service:listenerID:queue:completionBlock:]
  -[_IDSIDQueryController _requestCacheForService:completionBlock:]
  -[_IDSIDQueryController currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:]
  -[_IDSIDQueryController idInfoForDestinations:service:infoTypes:options:listenerID:queue:completionBlock:]
  -[_IDSIDQueryController _hasCacheForService:]
  -[_IDSIDQueryController _refreshIDStatusForDestinations:service:listenerID:allowRefresh:respectExpiry:waitForReply:forceRefresh:bypassLimit:queue:completionBlock:]
  -[_IDSIDQueryController requiredIDStatusForDestination:service:listenerID:queue:completionBlock:]
  -[_IDSIDQueryController daemonDisconnected]
  -[_IDSIDQueryController addListenerID:forService:]
  -[_IDSIDQueryController _flushQueryCacheForService:]
  -[_IDSIDQueryController _isListenerWithID:listeningToService:]
  -[_IDSIDQueryController _purgeIDStatusCache]
  -[_IDSIDQueryController _cachedStatusForDestination:service:]
  -[_IDSIDQueryController _callDelegatesWithBlock:delegateMap:]
  -[_IDSIDQueryController refreshIDStatusForDestination:service:listenerID:queue:completionBlock:]
  -[_IDSIDQueryController _warmupQueryCacheForService:]
  -[_IDSIDQueryController _updateCacheWithDictionary:service:]
  -[_IDSIDQueryController init]
  -[_IDSIDQueryController _sync_currentRemoteDevicesForDestinations:service:listenerID:completionBlock:]
  -[_IDSIDQueryController _disconnectFromQueryService]
  -[_IDSIDQueryController _requestCachedStatusForDestinations:service:waitForReply:respectExpiry:listenerID:completionBlock:]


IDSXPCOpportunisticInterface : NSObject
  // class methods
  +[IDSXPCOpportunisticInterface interface]


IDSDevice : NSObject
 @property  NSArray *linkedUserURIs
 @property  NSUUID *nsuuid
 @property  NSUUID *stableBluetoothIdentifier
 @property  BOOL supportsApplePay
 @property  BOOL supportsTethering
 @property  BOOL supportsHandoff
 @property  BOOL supportsiCloudPairing
 @property  BOOL supportsSMSRelay
 @property  BOOL supportsMMSRelay
 @property  BOOL supportsPhoneCalls
 @property  NSArray *identities
 @property  NSData *pushToken
 @property  NSDate *lastActivityDate
 @property  BOOL isCloudConnected
 @property  IDSEndpointCapabilities *capabilities
 @property  NSString *uniqueID
 @property  NSString *uniqueIDOverride
 @property  NSString *modelIdentifier
 @property  NSString *productName
 @property  NSString *productVersion
 @property  {?=qqq} operatingSystemVersion
 @property  NSString *productBuildVersion
 @property  NSString *name
 @property  NSString *service
 @property  long long deviceType
 @property  NSString *deviceColor
 @property  NSString *enclosureColor
 @property  BOOL isHSATrusted
 @property  BOOL isDefaultPairedDevice
 @property  BOOL isLocallyPaired
 @property  BOOL isActive
 @property  long long relationship
 @property  unsigned long pairingProtocolVersion
 @property  unsigned long minCompatibilityVersion
 @property  unsigned long maxCompatibilityVersion
 @property  unsigned long serviceMinCompatibilityVersion
 @property  BOOL nearby
 @property  BOOL connected
 @property  IDSDestination *destination
 @property  BOOL locallyPresent

  // instance methods
  -[IDSDevice pushToken]
  -[IDSDevice identities]
  -[IDSDevice productBuildVersion]
  -[IDSDevice enclosureColor]
  -[IDSDevice isConnected]
  -[IDSDevice destination]
  -[IDSDevice _setAccount:]
  -[IDSDevice uniqueID]
  -[IDSDevice relationship]
  -[IDSDevice fullDescription]
  -[IDSDevice supportsApplePay]
  -[IDSDevice modelIdentifier]
  -[IDSDevice initWithDictionary:]
  -[IDSDevice dealloc]
  -[IDSDevice isActive]
  -[IDSDevice productName]
  -[IDSDevice _initWithDictionary:]
  -[IDSDevice _internal]
  -[IDSDevice .cxx_destruct]
  -[IDSDevice operatingSystemVersion]
  -[IDSDevice capabilities]
  -[IDSDevice supportsHandoff]
  -[IDSDevice deviceType]
  -[IDSDevice supportsTethering]
  -[IDSDevice service]
  -[IDSDevice compactDescription]
  -[IDSDevice productVersion]
  -[IDSDevice isNearby]
  -[IDSDevice deviceColor]
  -[IDSDevice name]
  -[IDSDevice minCompatibilityVersion]
  -[IDSDevice lastActivityDate]
  -[IDSDevice isDefaultPairedDevice]
  -[IDSDevice nsuuid]
  -[IDSDevice pairingProtocolVersion]
  -[IDSDevice uniqueIDOverride]
  -[IDSDevice isCloudConnected]
  -[IDSDevice locallyPresent]
  -[IDSDevice isLocallyPaired]
  -[IDSDevice maxCompatibilityVersion]
  -[IDSDevice serviceMinCompatibilityVersion]
  -[IDSDevice linkedUserURIs]
  -[IDSDevice setNSUUID:]
  -[IDSDevice stableBluetoothIdentifier]
  -[IDSDevice supportsiCloudPairing]
  -[IDSDevice supportsSMSRelay]
  -[IDSDevice supportsMMSRelay]
  -[IDSDevice supportsPhoneCalls]
  -[IDSDevice isHSATrusted]
  -[IDSDevice _addIdentity:]
  -[IDSDevice _setService:]


_IDSDataChannelLinkContext : NSObject
  // instance methods
  -[_IDSDataChannelLinkContext .cxx_destruct]


IDSDataChannelLinkContext : NSObject
 @property  unsigned short channelNumber
 @property  NSData *hbhEncryptionkey
 @property  NSData *hbhDecryptionkey
 @property  NSUUID *childConnectionID
 @property  BOOL delegatedLinkID
 @property  unsigned short localRelayLinkID
 @property  unsigned short remoteRelayLinkID
 @property  BOOL directConnectionReady
 @property  BOOL linkID
 @property  NSUUID *linkUUID
 @property  NSUUID *QRSessionID
 @property  unsigned char networkType
 @property  long long connectionType
 @property  unsigned int RATType
 @property  unsigned short maxMTU
 @property  long long relayServerProvider
 @property  NSData *relaySessionToken
 @property  NSData *relaySessionKey
 @property  unsigned char remoteNetworkType
 @property  long long remoteConnectionType
 @property  unsigned int remoteRATType
 @property  unsigned int maxBitrate
 @property  BOOL serverIsDegraded
 @property  unsigned short localLinkFlags
 @property  unsigned short remoteLinkFlags
 @property  unsigned int localDataSoMask
 @property  unsigned int remoteDataSoMask
 @property  BOOL isVirtualRelayLink
 @property  NSString *localInterfaceName
 @property  long long dataPathType
 @property  unsigned int totalPacketsSentOnLink
 @property  unsigned int totalPacketsReceivedOnLink

  // instance methods
  -[IDSDataChannelLinkContext channelNumber]
  -[IDSDataChannelLinkContext networkType]
  -[IDSDataChannelLinkContext .cxx_destruct]
  -[IDSDataChannelLinkContext connectionType]
  -[IDSDataChannelLinkContext relaySessionKey]
  -[IDSDataChannelLinkContext relaySessionToken]
  -[IDSDataChannelLinkContext initWithDummyInformation]
  -[IDSDataChannelLinkContext initWithAttributes:maxBitrate:relayServerProvider:relaySessionToken:relaySessionKey:hbhEncryptionkey:hbhDecryptionkey:]
  -[IDSDataChannelLinkContext linkID]
  -[IDSDataChannelLinkContext linkUUID]
  -[IDSDataChannelLinkContext QRSessionID]
  -[IDSDataChannelLinkContext RATType]
  -[IDSDataChannelLinkContext maxMTU]
  -[IDSDataChannelLinkContext maxBitrate]
  -[IDSDataChannelLinkContext remoteNetworkType]
  -[IDSDataChannelLinkContext remoteConnectionType]
  -[IDSDataChannelLinkContext remoteRATType]
  -[IDSDataChannelLinkContext relayServerProvider]
  -[IDSDataChannelLinkContext serverIsDegraded]
  -[IDSDataChannelLinkContext setRATType:]
  -[IDSDataChannelLinkContext setMTU:]
  -[IDSDataChannelLinkContext setMaxBitrate:]
  -[IDSDataChannelLinkContext remoteLinkFlags]
  -[IDSDataChannelLinkContext localLinkFlags]
  -[IDSDataChannelLinkContext localDataSoMask]
  -[IDSDataChannelLinkContext remoteDataSoMask]
  -[IDSDataChannelLinkContext isVirtualRelayLink]
  -[IDSDataChannelLinkContext localInterfaceName]
  -[IDSDataChannelLinkContext hbhEncryptionkey]
  -[IDSDataChannelLinkContext hbhDecryptionkey]
  -[IDSDataChannelLinkContext childConnectionID]
  -[IDSDataChannelLinkContext setChildConnectionID:]
  -[IDSDataChannelLinkContext delegatedLinkID]
  -[IDSDataChannelLinkContext localRelayLinkID]
  -[IDSDataChannelLinkContext remoteRelayLinkID]
  -[IDSDataChannelLinkContext directConnectionReady]
  -[IDSDataChannelLinkContext setDirectConnectionReady:]
  -[IDSDataChannelLinkContext setIsVirtualRelayLink:]
  -[IDSDataChannelLinkContext setDelegateLinkID:]
  -[IDSDataChannelLinkContext dataPathType]
  -[IDSDataChannelLinkContext totalPacketsSentOnLink]
  -[IDSDataChannelLinkContext setTotalPacketsSentOnLink:]
  -[IDSDataChannelLinkContext totalPacketsReceivedOnLink]
  -[IDSDataChannelLinkContext setTotalPacketsReceivedOnLink:]


_IDSDatagramChannel : NSObject
  // instance methods
  -[_IDSDatagramChannel .cxx_destruct]
  -[_IDSDatagramChannel init]


IDSDatagramChannel : NSObject
 @property  NSArray *connectedLinks
 @property  IDSDataChannelLinkContext *defaultLink

  // instance methods
  -[IDSDatagramChannel dealloc]
  -[IDSDatagramChannel close]
  -[IDSDatagramChannel getQueue]
  -[IDSDatagramChannel .cxx_destruct]
  -[IDSDatagramChannel setEventHandler:]
  -[IDSDatagramChannel cachedMetadata]
  -[IDSDatagramChannel invalidate]
  -[IDSDatagramChannel start]
  -[IDSDatagramChannel startInternal]
  -[IDSDatagramChannel setReadHandler:]
  -[IDSDatagramChannel _startStatsTimer]
  -[IDSDatagramChannel _stopStatsTimer]
  -[IDSDatagramChannel _directConnectionForLinkID:]
  -[IDSDatagramChannel _directOrDaemonConnectionForLinkID:]
  -[IDSDatagramChannel _setDirectConnection:forLinkID:]
  -[IDSDatagramChannel _removeDirectConnection:]
  -[IDSDatagramChannel _linkContextForLinkID:]
  -[IDSDatagramChannel _setLinkContext:forLinkID:]
  -[IDSDatagramChannel _dumpLinkContextConnectionsInfo]
  -[IDSDatagramChannel invalidateDirectConnections]
  -[IDSDatagramChannel _translateParticipantIDForOutgoingPacket:forLinkID:]
  -[IDSDatagramChannel _translateParticipantIDForIncomingPacket:forLinkID:]
  -[IDSDatagramChannel _processIncomingDatagram:datagramSize:linkID:linkContext:]
  -[IDSDatagramChannel createIfNecessaryDirectConnectionForLinkID:linkContext:]
  -[IDSDatagramChannel addDirectConnectionForLinkID:linkContext:]
  -[IDSDatagramChannel removeDirectConnectionForLinkID:]
  -[IDSDatagramChannel isDaemonConnection:]
  -[IDSDatagramChannel connectionForLinkID:]
  -[IDSDatagramChannel _readFromDirectConnection:linkID:linkContext:]
  -[IDSDatagramChannel _makeDirectPacketBufferFromDatagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:linkContext:]
  -[IDSDatagramChannel _sendStatsRequestViaDaemon]
  -[IDSDatagramChannel _sendSequenceNumberMetadataToDaemon:]
  -[IDSDatagramChannel _writeToDirectConnection:datagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:completionHandler:]
  -[IDSDatagramChannel setLinkIDToParticipantMap:]
  -[IDSDatagramChannel getNwProtocolMetaDataForTrafficClass:]
  -[IDSDatagramChannel getContext]
  -[IDSDatagramChannel getIDSDataChannelsQueue]
  -[IDSDatagramChannel getDispatchDataForPacketBuffer:]
  -[IDSDatagramChannel connectedLinks]
  -[IDSDatagramChannel defaultLink]
  -[IDSDatagramChannel initWithSocketDescriptor:]
  -[IDSDatagramChannel initWithDestination:options:]
  -[IDSDatagramChannel _logSendingStats:]
  -[IDSDatagramChannel _logReceivingStats:]
  -[IDSDatagramChannel underlyingFileDescriptor]
  -[IDSDatagramChannel sendEventConnectedWithDummyLinkInfo]
  -[IDSDatagramChannel removeIDSDataChannelLinkContext:linkUUID:reason:]
  -[IDSDatagramChannel addNewIDSDataChannelLinkWithAttributes:linkAttributesLength:]
  -[IDSDatagramChannel selectDefaultLink:]
  -[IDSDatagramChannel sendMediaEncryptionInfoWithMKM:MKS:MKI:isLocallyGenerated:encryptionSequenceNumber:]
  -[IDSDatagramChannel sendMediaMembershipChangedInfo:]
  -[IDSDatagramChannel processMetadataForDatagram:size:datagramInfo:options:]
  -[IDSDatagramChannel _extractparticipantIDToHashedIDMappingFromData:]
  -[IDSDatagramChannel processDatagram:datagramSize:readHandler:readHandlerWithOptions:]
  -[IDSDatagramChannel handleIncomingDatagram:datagramSize:datagramInfo:datagramOptions:]
  -[IDSDatagramChannel readFromNWConnection:maximumDatagrams:readHandler:readHandlerWithOptions:completionHandler:]
  -[IDSDatagramChannel readFromOSChannel:ring:maximumDatagrams:readHandler:readHandlerWithOptions:]
  -[IDSDatagramChannel readDatagramWithCompletionHandler:]
  -[IDSDatagramChannel readDatagramsWithCompletionHandler:]
  -[IDSDatagramChannel setHasMetadata:]
  -[IDSDatagramChannel _writeToOSChannelDatagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:]
  -[IDSDatagramChannel _makePacketBufferFromDatagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:]
  -[IDSDatagramChannel _writeToNWConnection:datagram:datagramSize:currentDatagramCount:totalDatagramCount:datagramInfo:datagramOptions:completionHandler:]
  -[IDSDatagramChannel _writeToNWConnectionArrayOfDatagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:]
  -[IDSDatagramChannel _writeToSocket:datagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:]
  -[IDSDatagramChannel writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:]
  -[IDSDatagramChannel writeArrayOfDatagrams:datagramSizes:datagramInfo:datagramOptions:datagramCount:completionHandler:]
  -[IDSDatagramChannel _writeDatagram:datagramSize:datagramInfo:options:completionHandler:]
  -[IDSDatagramChannel writeDatagram:datagramSize:flags:completionHandler:]
  -[IDSDatagramChannel writeDatagram:datagramSize:datagramInfo:options:completionHandler:]
  -[IDSDatagramChannel setReadHandlerWithOptions:]
  -[IDSDatagramChannel setWriteCompletionHandler:]
  -[IDSDatagramChannel readyToRead]
  -[IDSDatagramChannel sendMetadata]
  -[IDSDatagramChannel _buildPacketBufferMetaData:]
  -[IDSDatagramChannel setChannelPreferences:]
  -[IDSDatagramChannel _setWiFiAssist:]
  -[IDSDatagramChannel setWiFiAssist:]
  -[IDSDatagramChannel startActiveProbingWithOptions:]
  -[IDSDatagramChannel stopActiveProbingWithOptions:]
  -[IDSDatagramChannel flushLinkProbingStatusWithOptions:]
  -[IDSDatagramChannel queryStatusWithOptions:]
  -[IDSDatagramChannel setUPlusOneMode:isInitiator:]
  -[IDSDatagramChannel startMKMRecoveryForParticipantIDs:]
  -[IDSDatagramChannel requestSessionInfoWithOptions:]
  -[IDSDatagramChannel _reportDictionary:forKey:]
  -[IDSDatagramChannel reportMKIArrival:isLocallyGenerated:]
  -[IDSDatagramChannel _reportMKIArrival:time:isLocallyGenerated:]
  -[IDSDatagramChannel reportFirstIncomingPacketTimeForMKI:]
  -[IDSDatagramChannel _reportFirstIncomingPacketTimeForMKI:time:]
  -[IDSDatagramChannel reportFirstOutgoingPacketTimeForMKI:]
  -[IDSDatagramChannel _reportFirstOutgoingPacketTimeForMKI:time:]
  -[IDSDatagramChannel generateMetadataWithDatagramInfo:options:currentDatagramCount:totalDatagramCount:byteBuffer:]
  -[IDSDatagramChannel osChannelInfoLog]
  -[IDSDatagramChannel setPreferredDataPathType:]


_IDSXPCCheckInInfo : NSObject
 @property  <IDSXPCConnectionProtocol> *connection
 @property  NSObject<OS_xpc_object> *tempObject
 @property  BOOL finishedTransaction

  // instance methods
  -[_IDSXPCCheckInInfo tempObject]
  -[_IDSXPCCheckInInfo setTempObject:]
  -[_IDSXPCCheckInInfo .cxx_destruct]
  -[_IDSXPCCheckInInfo connection]
  -[_IDSXPCCheckInInfo finishedTransaction]
  -[_IDSXPCCheckInInfo setFinishedTransaction:]
  -[_IDSXPCCheckInInfo setConnection:]


_IDSXPCCheckinManager : NSObject
 @property  NSMutableDictionary *connectionInfoByServiceIdentifier
 @property  {os_unfair_lock_s=I} checkinLock
 @property  <IDSXPCAdapter> *XPCAdapter

  // class methods
  +[_IDSXPCCheckinManager sharedInstance]

  // instance methods
  -[_IDSXPCCheckinManager teardownService:]
  -[_IDSXPCCheckinManager initWithXPCAdapter:]
  -[_IDSXPCCheckinManager .cxx_destruct]
  -[_IDSXPCCheckinManager setConnectionInfoByServiceIdentifier:]
  -[_IDSXPCCheckinManager teardownAll]
  -[_IDSXPCCheckinManager _performLockedAccess:]
  -[_IDSXPCCheckinManager checkinLock]
  -[_IDSXPCCheckinManager noteFinishedTransactionForService:]
  -[_IDSXPCCheckinManager XPCAdapter]
  -[_IDSXPCCheckinManager setXPCAdapter:]
  -[_IDSXPCCheckinManager setCheckinLock:]
  -[_IDSXPCCheckinManager noteCreatedService:]
  -[_IDSXPCCheckinManager _temporarilyStoreMessage:forServiceIdentifier:]
  -[_IDSXPCCheckinManager init]
  -[_IDSXPCCheckinManager connectionInfoByServiceIdentifier]


IDSDeviceConnection : NSObject
 @property  _IDSDeviceConnection *_internal
 @property  int socket
 @property  unsigned long mtu
 @property  NSInputStream *inputStream
 @property  NSOutputStream *outputStream
 @property  NSDictionary *metrics

  // instance methods
  -[IDSDeviceConnection mtu]
  -[IDSDeviceConnection dealloc]
  -[IDSDeviceConnection close]
  -[IDSDeviceConnection socket]
  -[IDSDeviceConnection _internal]
  -[IDSDeviceConnection .cxx_destruct]
  -[IDSDeviceConnection inputStream]
  -[IDSDeviceConnection outputStream]
  -[IDSDeviceConnection metrics]
  -[IDSDeviceConnection initSocketWithDevice:options:completionHandler:queue:]
  -[IDSDeviceConnection setStreamPairWithInputStream:outputStream:]
  -[IDSDeviceConnection updateConnectionWithOptions:error:]
  -[IDSDeviceConnection initStreamWithDevice:options:completionHandler:queue:]


IDSXPCActivityMonitorInterface : NSObject
  // class methods
  +[IDSXPCActivityMonitorInterface interface]


IDSIDQueryController : NSObject
  // class methods
  +[IDSIDQueryController sharedInstance]

  // instance methods
  -[IDSIDQueryController _currentCachedIDStatusForDestination:service:listenerID:]
  -[IDSIDQueryController removeDelegate:forService:listenerID:]
  -[IDSIDQueryController addDelegate:queue:]
  -[IDSIDQueryController _refreshIDStatusForDestination:service:listenerID:]
  -[IDSIDQueryController _setCurrentIDStatus:forDestination:service:]
  -[IDSIDQueryController forceRefreshIDStatusForDestinations:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController addDelegate:forService:listenerID:queue:]
  -[IDSIDQueryController currentIDStatusForDestinations:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController _currentCachedRemoteDevicesForDestinations:service:listenerID:]
  -[IDSIDQueryController refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController dealloc]
  -[IDSIDQueryController .cxx_destruct]
  -[IDSIDQueryController _currentIDStatusForDestination:service:listenerID:]
  -[IDSIDQueryController currentIDStatusForDestination:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController _refreshIDStatusForDestinations:service:listenerID:]
  -[IDSIDQueryController removeListenerID:forService:]
  -[IDSIDQueryController removeDelegate:]
  -[IDSIDQueryController currentIDStatusForDestinations:service:respectExpiry:listenerID:queue:completionBlock:]
  -[IDSIDQueryController currentIDStatusForDestination:service:respectExpiry:listenerID:queue:completionBlock:]
  -[IDSIDQueryController refreshIDStatusForDestinations:service:listenerID:queue:errorCompletionBlock:]
  -[IDSIDQueryController _currentIDStatusForDestination:service:respectExpiry:listenerID:]
  -[IDSIDQueryController requiredIDStatusForDestinations:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController idInfoForDestinations:service:infoTypes:options:listenerID:queue:completionBlock:]
  -[IDSIDQueryController _currentIDStatusForDestinations:service:listenerID:]
  -[IDSIDQueryController participantsForDestinations:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController _hasCacheForService:]
  -[IDSIDQueryController requiredIDStatusForDestination:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController addListenerID:forService:]
  -[IDSIDQueryController _flushQueryCacheForService:]
  -[IDSIDQueryController requestIDStatusForDestinations:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController refreshIDStatusForDestination:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController _warmupQueryCacheForService:]
  -[IDSIDQueryController _currentIDStatusForDestinations:service:respectExpiry:listenerID:]
  -[IDSIDQueryController requestIDStatusForDestination:service:listenerID:queue:completionBlock:]
  -[IDSIDQueryController init]


_IDSContinuity : NSObject <IDSDaemonListenerProtocol>
 @property  long long state
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_IDSContinuity continuityDidStopAdvertisingOfType:]
  -[_IDSContinuity stopScanningForType:]
  -[_IDSContinuity startAdvertisingOfType:withData:withOptions:]
  -[_IDSContinuity continuityDidFailToStartScanningForType:withError:]
  -[_IDSContinuity continuityDidUpdateStateToState:]
  -[_IDSContinuity startScanningForType:withData:mask:peers:boostedScan:duplicates:]
  -[_IDSContinuity startTrackingPeer:forType:]
  -[_IDSContinuity _handleReconnect]
  -[_IDSContinuity initWithDelegate:queue:delegateContext:]
  -[_IDSContinuity continuityDidFailToStartAdvertisingOfType:withError:]
  -[_IDSContinuity state]
  -[_IDSContinuity continuityDidLosePeer:]
  -[_IDSContinuity dealloc]
  -[_IDSContinuity startScanningForType:withData:mask:peers:]
  -[_IDSContinuity continuityDidStopAdvertisingOfType:withError:]
  -[_IDSContinuity continuityDidStartAdvertisingOfType:]
  -[_IDSContinuity .cxx_destruct]
  -[_IDSContinuity continuityDidStopTrackingPeer:]
  -[_IDSContinuity continuityDidStartTrackingPeer:forType:error:]
  -[_IDSContinuity continuityDidStartTrackingPeer:error:]
  -[_IDSContinuity continuityDidDiscoverType:withData:fromPeer:]
  -[_IDSContinuity stopAdvertisingOfType:]
  -[_IDSContinuity stopTrackingPeer:forType:]
  -[_IDSContinuity continuityDidStopScanningForType:]
  -[_IDSContinuity continuityDidStopTrackingPeer:forType:]
  -[_IDSContinuity continuityDidStartScanningForType:]
  -[_IDSContinuity _daemonDied:]
  -[_IDSContinuity _callDelegateWithBlock:]
  -[_IDSContinuity continuityDidLosePeer:forType:]
  -[_IDSContinuity startScanningForType:withData:mask:]
  -[_IDSContinuity startScanningForType:withData:mask:boostedScan:duplicates:]


IDSXPCFirewallInterface : NSObject
  // class methods
  +[IDSXPCFirewallInterface interface]


_IDSSession : NSObject <IDSDaemonListenerProtocol, IDSBaseSocketPairConnectionDelegate>
 @property  int socket
 @property  NSString *uniqueID
 @property  unsigned int state
 @property  unsigned long initialLinkType
 @property  long long inviteTimeout
 @property  unsigned int sessionEndedReason
 @property  id boostContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_IDSSession endSession]
  -[_IDSSession uniqueID]
  -[_IDSSession state]
  -[_IDSSession setPreferences:]
  -[_IDSSession dealloc]
  -[_IDSSession socket]
  -[_IDSSession .cxx_destruct]
  -[_IDSSession connection:didReceiveData:]
  -[_IDSSession setMuted:]
  -[_IDSSession daemonController]
  -[_IDSSession setDelegate:queue:]
  -[_IDSSession daemonListener]
  -[_IDSSession daemonDisconnected]
  -[_IDSSession xpcObject:objectContext:]
  -[_IDSSession _callDelegateWithBlock:]
  -[_IDSSession setAudioEnabled:]
  -[_IDSSession sendData:error:]
  -[_IDSSession sessionAcceptReceived:fromID:withData:]
  -[_IDSSession sessionDeclineReceived:fromID:withData:]
  -[_IDSSession sessionCancelReceived:fromID:withData:]
  -[_IDSSession sessionMessageReceived:fromID:withData:]
  -[_IDSSession sessionEndReceived:fromID:withData:]
  -[_IDSSession sessionStarted:]
  -[_IDSSession sessionEnded:withReason:error:]
  -[_IDSSession session:invitationSentToTokens:shouldBreakBeforeMake:]
  -[_IDSSession session:audioEnabled:]
  -[_IDSSession session:muted:]
  -[_IDSSession session:didReceiveReport:]
  -[_IDSSession allocationDone:sessionInfo:]
  -[_IDSSession sessionEndedReason]
  -[_IDSSession initialLinkType]
  -[_IDSSession sendInvitationWithOptions:]
  -[_IDSSession sendInvitationWithData:declineOnError:]
  -[_IDSSession cancelInvitationWithRemoteEndedReasonOverride:]
  -[_IDSSession cancelInvitationWithData:]
  -[_IDSSession acceptInvitationWithData:]
  -[_IDSSession declineInvitationWithData:]
  -[_IDSSession cancelInvitation]
  -[_IDSSession acceptInvitation]
  -[_IDSSession declineInvitation]
  -[_IDSSession endSessionWithData:]
  -[_IDSSession sendSessionMessage:]
  -[_IDSSession sendSessionMessage:toDestinations:]
  -[_IDSSession sendAllocationRequest:]
  -[_IDSSession reconnectSession]
  -[_IDSSession shouldUseSocketForTransport]
  -[_IDSSession MTUForAddressFamily:]
  -[_IDSSession initWithAccount:destinations:options:delegateContext:]
  -[_IDSSession _broadcastNewSessionToDaemon]
  -[_IDSSession _cleanupSocketPairConnections]
  -[_IDSSession boostContext]
  -[_IDSSession setBoostContext:]
  -[_IDSSession _initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:]
  -[_IDSSession _initWithAccount:destinations:options:delegateContext:]
  -[_IDSSession initWithAccount:destinations:transportType:uniqueID:delegateContext:]
  -[_IDSSession initWithAccount:destinations:transportType:delegateContext:]
  -[_IDSSession _setupUnreliableSocketPairConnection]
  -[_IDSSession _setupSocketPairToDaemon]
  -[_IDSSession getAudioEnabled]
  -[_IDSSession getMuted]
  -[_IDSSession getPreferences]
  -[_IDSSession setInviteTimeout:]
  -[_IDSSession inviteTimeout]


IDSGroupContextDataSource : NSObject <ENGroupContextDataSource, ENGroupContextCacheMiddleware>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[IDSGroupContextDataSource .cxx_destruct]
  -[IDSGroupContextDataSource setQueue:]
  -[IDSGroupContextDataSource initWithQueue:]
  -[IDSGroupContextDataSource queue]
  -[IDSGroupContextDataSource participantsForCypher:completion:]
  -[IDSGroupContextDataSource validateCachedGroup:isParentOfGroup:completion:]
  -[IDSGroupContextDataSource groupContext:upsertGroupWithInfo:previousGroup:completion:]
  -[IDSGroupContextDataSource groupContext:fetchGroupWithID:completion:]
  -[IDSGroupContextDataSource publicDataRepresentationForGroup:inContext:completion:]
  -[IDSGroupContextDataSource groupFromPublicDataRepresentation:inContext:completion:]
  -[IDSGroupContextDataSource middlewareCacheCostForContext:]
  -[IDSGroupContextDataSource groupContext:cacheGroup:completion:]
  -[IDSGroupContextDataSource groupContext:cachedGroupWithID:completion:]
  -[IDSGroupContextDataSource groupContext:latestCachedGroupWithStableID:completion:]
  -[IDSGroupContextDataSource groupContext:fetchAllKnownGroups:]
  -[IDSGroupContextDataSource deleteAllKnownGroupsForGroupContext:completion:]
  -[IDSGroupContextDataSource deleteCachedValueForForGroupContext:withGroupID:completion:]
  -[IDSGroupContextDataSource _groupContextDataSource]
  -[IDSGroupContextDataSource _groupContextCacheMiddleware]


IDSInternalQueueController : NSObject
  // class methods
  +[IDSInternalQueueController sharedInstance]

  // instance methods
  -[IDSInternalQueueController performBlock:]
  -[IDSInternalQueueController .cxx_destruct]
  -[IDSInternalQueueController assertQueueIsNotCurrent]
  -[IDSInternalQueueController assertQueueIsCurrent]
  -[IDSInternalQueueController initWithQueue:]
  -[IDSInternalQueueController queue]
  -[IDSInternalQueueController performBlock:waitUntilDone:]
  -[IDSInternalQueueController isQueueCurrent]
  -[IDSInternalQueueController init]
  -[IDSInternalQueueController initWithName:contextKey:]


IDSServerMessagingMessage : IDSMessage
 @property  NSData *messageData
 @property  NSDate *expirationDate
 @property  NSString *messageID

  // instance methods
  -[IDSServerMessagingMessage command]
  -[IDSServerMessagingMessage setMessageID:]
  -[IDSServerMessagingMessage expirationDate]
  -[IDSServerMessagingMessage setExpirationDate:]
  -[IDSServerMessagingMessage .cxx_destruct]
  -[IDSServerMessagingMessage messageID]
  -[IDSServerMessagingMessage copyWithZone:]
  -[IDSServerMessagingMessage messageBody]
  -[IDSServerMessagingMessage messageData]
  -[IDSServerMessagingMessage setMessageData:]
  -[IDSServerMessagingMessage wantsResponse]


IDSXPCServerMessagingInterface : NSObject
  // class methods
  +[IDSXPCServerMessagingInterface interface]


_IDSActivityMonitorXPCConnector : NSObject <IDSXPCActivityMonitorClient>
 @property  NSMutableDictionary *listenersByActivity
 @property  IDSXPCDaemonController *daemonController
 @property  IDSXPCDaemonController *syncDaemonController
 @property  @? syncDaemonControllerBuilder
 @property  @? daemonControllerBuilder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_IDSActivityMonitorXPCConnector weakSharedInstance]

  // instance methods
  -[_IDSActivityMonitorXPCConnector performSyncAction:]
  -[_IDSActivityMonitorXPCConnector daemonControllerBuilder]
  -[_IDSActivityMonitorXPCConnector setDaemonController:]
  -[_IDSActivityMonitorXPCConnector setSyncDaemonController:]
  -[_IDSActivityMonitorXPCConnector setSyncDaemonControllerBuilder:]
  -[_IDSActivityMonitorXPCConnector handleIncomingUpdate:onActivity:completion:]
  -[_IDSActivityMonitorXPCConnector dealloc]
  -[_IDSActivityMonitorXPCConnector performAction:errorHandler:]
  -[_IDSActivityMonitorXPCConnector removeListener:forTopic:]
  -[_IDSActivityMonitorXPCConnector .cxx_destruct]
  -[_IDSActivityMonitorXPCConnector syncDaemonController]
  -[_IDSActivityMonitorXPCConnector listenersByActivity]
  -[_IDSActivityMonitorXPCConnector daemonController]
  -[_IDSActivityMonitorXPCConnector _updateActivity:isSupported:]
  -[_IDSActivityMonitorXPCConnector addListener:forTopic:]
  -[_IDSActivityMonitorXPCConnector initWithSyncDaemonControllerBuilder:daemonControllerBuilder:]
  -[_IDSActivityMonitorXPCConnector _handleInterruption]
  -[_IDSActivityMonitorXPCConnector setListenersByActivity:]
  -[_IDSActivityMonitorXPCConnector setDaemonControllerBuilder:]
  -[_IDSActivityMonitorXPCConnector syncDaemonControllerBuilder]


IDSXPCGroupSessionKeyValueDeliveryInterface : NSObject
  // class methods
  +[IDSXPCGroupSessionKeyValueDeliveryInterface interface]


_IDSBatchIDQueryController : NSObject <IDSIDQueryControllerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_IDSBatchIDQueryController _calloutToDelegateWithResult:error:]
  -[_IDSBatchIDQueryController dealloc]
  -[_IDSBatchIDQueryController setDestinations:]
  -[_IDSBatchIDQueryController .cxx_destruct]
  -[_IDSBatchIDQueryController _invalidateNextQueryTimer]
  -[_IDSBatchIDQueryController _scheduleNextQuery:]
  -[_IDSBatchIDQueryController invalidate]
  -[_IDSBatchIDQueryController initWithService:delegate:queue:parent:]
  -[_IDSBatchIDQueryController _nextQuery:]
  -[_IDSBatchIDQueryController underLimit]


IDSRealTimeEncryptionProxy : NSObject
  // instance methods
  -[IDSRealTimeEncryptionProxy initWithAccount:]
  -[IDSRealTimeEncryptionProxy dealloc]
  -[IDSRealTimeEncryptionProxy .cxx_destruct]
  -[IDSRealTimeEncryptionProxy setDelegate:queue:]
  -[IDSRealTimeEncryptionProxy sendPrekeyToGroup:]
  -[IDSRealTimeEncryptionProxy requestPublicKeys]
  -[IDSRealTimeEncryptionProxy sendMasterKeyMaterialToGroup:]
  -[IDSRealTimeEncryptionProxy requestMasterKeyMaterialForGroup:]
  -[IDSRealTimeEncryptionProxy sendMKMRecoveryRequestToGroup:]
  -[IDSRealTimeEncryptionProxy resetKeysForGroup:]


IDSServiceMonitor : NSObject
 @property  NSString *service

  // instance methods
  -[IDSServiceMonitor updateAvailability]
  -[IDSServiceMonitor _postAvailability:]
  -[IDSServiceMonitor initWithService:]
  -[IDSServiceMonitor _updateAvailability]
  -[IDSServiceMonitor serviceAvailability]
  -[IDSServiceMonitor dealloc]
  -[IDSServiceMonitor .cxx_destruct]
  -[IDSServiceMonitor service]


IDSTransactionLogTaskHandlerAccountInfo : NSObject
 @property  ENAccountIdentity *accountIdentity
 @property  NSDictionary *aliasToAccountsMap
 @property  NSString *serviceName

  // instance methods
  -[IDSTransactionLogTaskHandlerAccountInfo serviceName]
  -[IDSTransactionLogTaskHandlerAccountInfo .cxx_destruct]
  -[IDSTransactionLogTaskHandlerAccountInfo accountIdentity]
  -[IDSTransactionLogTaskHandlerAccountInfo initWithAccountIdentity:aliasToAccountsMap:serviceName:]
  -[IDSTransactionLogTaskHandlerAccountInfo accountForAlias:]
  -[IDSTransactionLogTaskHandlerAccountInfo aliasToAccountsMap]


IDSTransactionLogTaskHandler : NSObject
  // class methods
  +[IDSTransactionLogTaskHandler handlerWithTask:delegate:queue:]

  // instance methods
  -[IDSTransactionLogTaskHandler perform]
  -[IDSTransactionLogTaskHandler _init]


IDSTransactionLogBaseTaskHandler : IDSTransactionLogTaskHandler
 @property  IDSTransactionLogTask *task
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[IDSTransactionLogBaseTaskHandler setTask:]
  -[IDSTransactionLogBaseTaskHandler perform]
  -[IDSTransactionLogBaseTaskHandler .cxx_destruct]
  -[IDSTransactionLogBaseTaskHandler setQueue:]
  -[IDSTransactionLogBaseTaskHandler queue]
  -[IDSTransactionLogBaseTaskHandler task]
  -[IDSTransactionLogBaseTaskHandler initWithTask:delegate:queue:]


IDSTransactionLogSyncTaskHandler : IDSTransactionLogTaskHandler
 @property  IDSTransactionLogSyncTask *syncTask
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <IDSTransactionLogTaskHandlerDelegate> *delegate

  // instance methods
  -[IDSTransactionLogSyncTaskHandler setDelegate:]
  -[IDSTransactionLogSyncTaskHandler delegate]
  -[IDSTransactionLogSyncTaskHandler perform]
  -[IDSTransactionLogSyncTaskHandler .cxx_destruct]
  -[IDSTransactionLogSyncTaskHandler _completeWithError:]
  -[IDSTransactionLogSyncTaskHandler setQueue:]
  -[IDSTransactionLogSyncTaskHandler queue]
  -[IDSTransactionLogSyncTaskHandler initWithTask:delegate:queue:]
  -[IDSTransactionLogSyncTaskHandler qPerformWithToken:]
  -[IDSTransactionLogSyncTaskHandler qIngestMessages:completion:]
  -[IDSTransactionLogSyncTaskHandler qFetchParticipantsFromDeviceMessges:andGroupsFromGroupMessages:completion:]
  -[IDSTransactionLogSyncTaskHandler _transactionMessagesFromTransportMessages:withParticipants:groups:accountInfo:completion:]
  -[IDSTransactionLogSyncTaskHandler _destinationsInMessages:]
  -[IDSTransactionLogSyncTaskHandler _groupIDsFromMessages:]
  -[IDSTransactionLogSyncTaskHandler _groupsByGroupIDFromGroups:]
  -[IDSTransactionLogSyncTaskHandler _participantsByAliasFromParticipants:]
  -[IDSTransactionLogSyncTaskHandler _transactionMessageFromTransportMessage:groups:participants:accountInfo:]
  -[IDSTransactionLogSyncTaskHandler _transactionMessageFromTransportMessage:withGroupID:groups:accountInfo:]
  -[IDSTransactionLogSyncTaskHandler _transactionMessageFromTransportMessage:withParticipants:accountInfo:]
  -[IDSTransactionLogSyncTaskHandler _transactionMessageFromTransportMessage:withDecryptedPayload:accountInfo:]
  -[IDSTransactionLogSyncTaskHandler syncTask]
  -[IDSTransactionLogSyncTaskHandler setSyncTask:]


IDSDestination(Additions)
	// class methods
	+[IDSDestination(Additions) destinationWithDevice:]
	+[IDSDestination(Additions) destinationWithRapportPublicIdentifier:]

01 00 0300 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTAsyncReducer 
01 00 0300 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTDeferredTaskQueue 
01 00 0300 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTPromiseSeal 
01 00 0300 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTResult 
01 00 0300 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTWeakReference 
01 00 0700 /System/Library/PrivateFrameworks/Engram.framework/Engram: ENAccountIdentity 
01 00 0700 /System/Library/PrivateFrameworks/Engram.framework/Engram: ENGroup 
01 00 0700 /System/Library/PrivateFrameworks/Engram.framework/Engram: ENGroupContext 
01 00 0700 /System/Library/PrivateFrameworks/Engram.framework/Engram: ENGroupContextNotifyingObserver 
01 00 0700 /System/Library/PrivateFrameworks/Engram.framework/Engram: ENGroupID 
01 00 0700 /System/Library/PrivateFrameworks/Engram.framework/Engram: ENLog 
01 00 0700 /System/Library/PrivateFrameworks/Engram.framework/Engram: ENParticipant 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSAuthenticationCertificate 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSAuthenticationCertificateSignature 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSBaseSocketPairConnection 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSCTAdapter 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSCertifiedDeliveryContext 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSDelegateInfo 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSDependencyProvider 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSDestination 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSDeviceIdentity 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSEndpoint 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSEndpointCapabilities 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSEndpointTransparencyState 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSFamilyMember 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSFoundationLog 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSGameCenterData 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSGroupEncryptionKeyManager 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSGroupEncryptionKeyMaterial 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSGroupSessionActiveParticipant 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSGroupSessionConnectionParameters 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSGroupSessionParticipantUpdate 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSHandle 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSIDInfoResult 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSIDKTData 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSKTVerificationResult 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSMPFullLegacyIdentity 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSMPPublicLegacyIdentity 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSMessage 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSMessageContext 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSMissingMessageMetric 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSOpportunisticData 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSPayloadInspector 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSProtobuf 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSPseudonym 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSPseudonymProperties 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSPseudonymRequestProperties 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSRateLimiter 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSRegistrationKeychainReader 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSSendParameters 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSServerBag 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSServiceProperties 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSSessionInfoMetadataSerializer 
01 00 0400 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSURI 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMLocalObject 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMLockdownManager 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMMessageContext 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMOrderedMutableDictionary 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMPair 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMPowerAssertion 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMRGLog 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMRemoteObject 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMRemoteObjectBroadcaster 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMSystemMonitor 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMTimer 
01 00 0200 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserDefaults 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProtocolChecker 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSProxy 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0500 /System/Library/Frameworks/Network.framework/Network: NWDatagramConnection 
01 00 0500 /System/Library/Frameworks/Network.framework/Network: NWHostEndpoint 
01 00 0500 /System/Library/Frameworks/Network.framework/Network: NWParameters 
01 00 0500 /System/Library/Frameworks/Network.framework/Network: NWStreamConnection 
