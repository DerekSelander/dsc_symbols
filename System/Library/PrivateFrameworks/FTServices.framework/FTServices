|| __DATA.__data _FTErrorDomain
|| __DATA.__data _FTServiceStatusNotifyRegister
|| __DATA.__data _FTServicesSuppressServiceErrorDialogsPropertyKey
|| __DATA.__objc_data _OBJC_CLASS_$_FTProtobufMessage
|| __DATA.__objc_data _OBJC_CLASS_$_FTRegion
|| __DATA.__objc_data _OBJC_CLASS_$_FTRegionSupport
|| __DATA.__objc_data _OBJC_CLASS_$_FTShareChannelMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_FTProtobufMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_FTRegion
|| __DATA.__objc_data _OBJC_METACLASS_$_FTRegionSupport
|| __DATA.__objc_data _OBJC_METACLASS_$_FTShareChannelMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_FTMessageDelivery._retries
|| __DATA.__objc_ivar _OBJC_IVAR_$_FTMessageDelivery_DualMode._apsDelivery
|| __DATA.__objc_ivar _OBJC_IVAR_$_FTMessageDelivery_DualMode._dualModeQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_FTMessageDelivery_DualMode._httpDelivery
|| __DATA.__objc_ivar _OBJC_IVAR_$_FTMessageDelivery_DualMode._userAgentString
|| __DATA.__objc_ivar _OBJC_IVAR_$_FTPasswordManager._accountStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_FTPasswordManager._runningQueries
|| __DATA.__objc_ivar _OBJC_IVAR_$_FTPasswordManager._userNotificationCenter
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._disableIDSTranslation
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._maximumResponseSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._messageHeaders
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._messageRequestBodyData
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._messageRequestBodyDictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._messageRequestUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._messageURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._responseBodyData
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._responseBodyDictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._responseCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._responseHeaders
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._responseStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_IDSWebTunnelRequestMessage._userAgentOverride
|| __DATA_CONST.__const _FTCTRegistrationStatusCanRegisterKey
|| __DATA_CONST.__const _FTCTRegistrationStatusChangedNotification
|| __DATA_CONST.__const _FTCTRegistrationStatusIMSIKey
|| __DATA_CONST.__const _FTCTRegistrationStatusPLMNKey
|| __DATA_CONST.__const _FTCTRegistrationStatusPhoneNumberKey
|| __DATA_CONST.__const _FTEntitlementStatusChangedNotification
|| __DATA_CONST.__const _FTRegionListFinishedLoadingNotification
|| __DATA_CONST.__const _FTServerBagFinishedLoadingNotification
|| __DATA_CONST.__const _FTServiceStatusDidChangeNotification
|| __DATA_CONST.__const _FTUserConfigurationSelectedSubscriptionLabelDidChange
|| __DATA_CONST.__const _FaceTimeDeviceCapabilityChangedNotification
|| __DATA_CONST.__const _FaceTimeDeviceRegistrationCapabilityChangedNotification
|| __DATA_CONST.__const _FaceTimeDeviceRegistrationStateChangedNotification
|| __DATA_CONST.__const _FaceTimeDeviceRestictionsChangedNotification
|| __DATA_CONST.__const _FaceTimeDeviceSIMInsertedNotification
|| __DATA_CONST.__const _FaceTimeDeviceSIMRemovedNotification
|| __DATA_CONST.__const _kDualModeDeliveryTypeHeader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTDeviceSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTEntitlementSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTIDSMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTMessageDelivery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTMessageDelivery_APS
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTMessageDelivery_DualMode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTMessageDelivery_HTTP
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTMessageQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTNetworkSupport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTPasswordManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTSelectedPNRSubscription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTServerBag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTServiceStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTURLRequestMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTUserConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FTiMessageStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IDSWebTunnelRequestMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTDeviceSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTEntitlementSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTIDSMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTMessageDelivery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTMessageDelivery_APS
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTMessageDelivery_DualMode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTMessageDelivery_HTTP
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTMessageQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTNetworkSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTPasswordManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTSelectedPNRSubscription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTServerBag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTServiceStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTURLRequestMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTUserConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FTiMessageStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IDSWebTunnelRequestMessage
|| __TEXT.__text _MessageLogEvent
|| __TEXT.__text _MessageLogStatistic
|| __TEXT.__text __AuthenticationDictionaryFromParameters
|| __TEXT.__text __BindingsArrayFromURIs
|| __TEXT.__text __DeviceCapabilitiesFromParameters
|| __TEXT.__text __FTAreIDsEquivalent
|| __TEXT.__text __FTGenerateDigestForSigningFromComponents
|| __TEXT.__text __FTGenerateDigestForSigningFromPayload
|| __TEXT.__text __FTGenerateNonceAndSignatureFromComponents
|| __TEXT.__text __FTGenerateNonceAndSignatureFromPayload
|| __TEXT.__text __FTIDSFlagsNumber
|| __TEXT.__text __FTProfileVersionNumber
|| __TEXT.__text __FZErrorTypeFromNSError
|| __TEXT.__text __FZErrorTypeFromResponseCodeAndError
__ CFNetwork: _OBJC_CLASS_$_NSHTTPURLResponse
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: __CFURLRequestSetProtocolProperty
__ CFNetwork: _kCFURLRequestDoNotDecodeData
__ CommonUtilities: _OBJC_CLASS_$_CUTDeferredTaskQueue
__ CommonUtilities: _cut_arc_os_release
__ CommonUtilities: _cut_dispatch_log_queue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotificationWithOptions
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringHasSuffix
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreTelephony: _CTSettingCopyMyPhoneNumber
__ CoreTelephony: _OBJC_CLASS_$_CTMessageCenter
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionCopyCellularUsagePolicy
__ CoreTelephony: __CTServerConnectionCopySystemCapabilities
__ CoreTelephony: __CTServerConnectionCreate
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionCreateWithIdentifier
__ CoreTelephony: __CTServerConnectionGetCarrierEntitlements
__ CoreTelephony: __CTServerConnectionGetCommCenterInitializationState
__ CoreTelephony: __CTServerConnectionIsEmergencyNumber
__ CoreTelephony: __CTServerConnectionRegisterForNotification
__ CoreTelephony: __CTServerConnectionSetCellularUsagePolicy
__ CoreTelephony: __CTServerConnectionSetTargetQueue
__ CoreTelephony: __CTServerConnectionVerifyCarrierEntitlements
__ CoreTelephony: _kCTCarrierEntitlementKeyFaceTime
__ CoreTelephony: _kCTCarrierEntitlementResultAllowed
__ CoreTelephony: _kCTCarrierEntitlementResultForbidden
__ CoreTelephony: _kCTCarrierEntitlementsInfoAvailableNotification
__ CoreTelephony: _kCTCellularDataUsagePolicy
__ CoreTelephony: _kCTCellularDataUsagePolicyAlwaysAllow
__ CoreTelephony: _kCTCellularDataUsagePolicyDeny
__ CoreTelephony: _kCTConnectionInvalidatedNotification
__ CoreTelephony: _kCTDaemonReadyNotification
__ CoreTelephony: _kCTPerAppNetworkDataAccessPolicyChangedNotification
__ CoreTelephony: _kCTSIMSupportSIMStatusNotInserted
__ CoreTelephony: _kCTSIMSupportSIMStatusReady
__ CoreTelephony: _kCTWiFiDataUsagePolicy
__ CoreTelephony: _kSimultaneousCallAndDataSupported
__ FTAWD: _FTAWDLogRegistrationRenewCredentialsCompleted
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorFailingURLStringErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ IDSFoundation: _IDSACAccountGameCenterContactsAssociationID
__ IDSFoundation: _IDSACAccountGameCenterContactsSharingState
__ IDSFoundation: _IDSAccountAlertKey
__ IDSFoundation: _IDSAccountStatusKey
__ IDSFoundation: _IDSAuthenticationDelegateUpdateTimeOfLastRequestPost
__ IDSFoundation: _IDSAuthenticationDictionaryKeyAddTimestamp
__ IDSFoundation: _IDSAuthenticationDictionaryKeyAuthTokenClientReceiptDate
__ IDSFoundation: _IDSAuthenticationDictionaryKeyPassword
__ IDSFoundation: _IDSCommandKey
__ IDSFoundation: _IDSRemoteURLConnectionErrorDomain
__ IDSFoundation: _IDSServerBagFinishedLoadingNotification
__ IDSFoundation: _IDSServiceKey
__ IDSFoundation: _OBJC_CLASS_$_IDSBaseMessage
__ IDSFoundation: _OBJC_CLASS_$_IDSCTAdapter
__ IDSFoundation: _OBJC_CLASS_$_IDSCommandNiceGroupSessionRTCMetric
__ IDSFoundation: _OBJC_CLASS_$_IDSCoreAnalyticsLogger
__ IDSFoundation: _OBJC_CLASS_$_IDSDeliveryContext
__ IDSFoundation: _OBJC_CLASS_$_IDSGameCenterData
__ IDSFoundation: _OBJC_CLASS_$_IDSRTCLogger
__ IDSFoundation: _OBJC_CLASS_$_IDSRegistrationRenewCredentialsCompletedMetric
__ IDSFoundation: _OBJC_CLASS_$_IDSRemoteURLConnection
__ IDSFoundation: _OBJC_CLASS_$_IDSSOSLogger
__ IDSFoundation: _OBJC_CLASS_$_IDSSOSMetric
__ IDSFoundation: _OBJC_CLASS_$_IDSServerBag
__ IDSFoundation: _OBJC_METACLASS_$_IDSBaseMessage
__ IDSFoundation: __IDSAreIDsEquivalent
__ IDSFoundation: __IDSIDProtocolVersionNumber
__ IDSFoundation: __IDSLogTransport
__ IDSFoundation: __IDSLogV
__ IDSFoundation: __IDSShouldLog
__ IDSFoundation: __IDSWarnV
__ IDSFoundation: __IDSWebTunnelServiceVersionNumber
__ IDSFoundation: __UIStringForIDSRegistrationServiceType
__ IMFoundation: _IMCanonicalFormForEmail
__ IMFoundation: _IMCopyURLEscapedString
__ IMFoundation: _IMCurrentPreferredLanguage
__ IMFoundation: _IMDispatchForNotify
__ IMFoundation: _IMGenerateLoginID
__ IMFoundation: _IMGetAppBoolForKey
__ IMFoundation: _IMGetAppIntForKey
__ IMFoundation: _IMGetCachedDomainBoolForKey
__ IMFoundation: _IMGetConferenceSettings
__ IMFoundation: _IMGetDomainBoolForKey
__ IMFoundation: _IMGetDomainValueForKey
__ IMFoundation: _IMGetKeychainAuthToken
__ IMFoundation: _IMGetKeychainPassword
__ IMFoundation: _IMGetMainBundleIdentifier
__ IMFoundation: _IMInternationalForPhoneNumberWithOptions
__ IMFoundation: _IMLocalizedStringFromTableInBundle
__ IMFoundation: _IMLockdownDeviceActivatedChangedNotification
__ IMFoundation: _IMLogSimulateCrashForProcess
__ IMFoundation: _IMLogString
__ IMFoundation: _IMNetworkChangedNotification
__ IMFoundation: _IMRemoteURLConnectionErrorDomain
__ IMFoundation: _IMRemoveAppValueForKey
__ IMFoundation: _IMSetAppValueForKey
__ IMFoundation: _IMSetDomainBoolForKey
__ IMFoundation: _IMSetDomainValueForKey
__ IMFoundation: _IMSetKeychainAuthToken
__ IMFoundation: _IMSetKeychainPassword
__ IMFoundation: _IMShouldLog
__ IMFoundation: _IMSingleObjectArray
__ IMFoundation: _IMStringIsEmail
__ IMFoundation: _IMStringIsInHardcodedEmergencyNumberSet
__ IMFoundation: _IMUserNotificationAlternateButtonTitleKey
__ IMFoundation: _IMUserNotificationCheckBoxTitlesKey
__ IMFoundation: _IMUserNotificationDefaultButtonTitleKey
__ IMFoundation: _IMUserNotificationIconURLKey
__ IMFoundation: _IMUserNotificationMessageKey
__ IMFoundation: _IMUserNotificationOtherButtonTitleKey
__ IMFoundation: _IMUserNotificationTextFieldTitlesKey
__ IMFoundation: _IMUserNotificationTextFieldValuesKey
__ IMFoundation: _IMUserNotificationTitleKey
__ IMFoundation: _IMUserScopedNotification
__ IMFoundation: _IMWeakLinkClass
__ IMFoundation: _IMWeakLinkSymbol
__ IMFoundation: _JWUUIDPushObjectToString
__ IMFoundation: _OBJC_CLASS_$_IMDeviceSupport
__ IMFoundation: _OBJC_CLASS_$_IMIDSLog
__ IMFoundation: _OBJC_CLASS_$_IMLockdownManager
__ IMFoundation: _OBJC_CLASS_$_IMMobileNetworkManager
__ IMFoundation: _OBJC_CLASS_$_IMRGLog
__ IMFoundation: _OBJC_CLASS_$_IMTimer
__ IMFoundation: _OBJC_CLASS_$_IMUserNotification
__ IMFoundation: _OBJC_CLASS_$_IMUserNotificationCenter
__ IMFoundation: _OBJC_CLASS_$_IMWeakReference
__ IMFoundation: _OSLogHandleForIDSCategory
__ IMFoundation: _SecureRandomBytes
__ IMFoundation: __IMAlwaysLog
__ IMFoundation: __IMWarn
__ IMFoundation: __IMWillLog
__ IMFoundation: _im_dispatch_after_primary_queue
__ IMFoundation: _im_dispatch_async_with_timeout
__ IMFoundation: _im_primary_queue
__ IMFoundation: _jw_uuid_to_data
__ IMFoundation: _kFZAppBundleIdentifier
__ IMFoundation: _kFZTextAppBundleIdentifier
__ IMFoundation: _kIMDeviceTypeNameAppleTV
__ IMFoundation: _kIMDeviceTypeNameAudioAccessory
__ IMFoundation: _kIMDeviceTypeNameBrowser
__ IMFoundation: _kIMDeviceTypeNameMac
__ IMFoundation: _kIMDeviceTypeNameUnknown
__ IMFoundation: _kIMDeviceTypeNameWatch
__ IMFoundation: _kIMDeviceTypeNameiPad
__ IMFoundation: _kIMDeviceTypeNameiPhone
__ IMFoundation: _kIMDeviceTypeNameiPod
__ Marco: _MarcoLog
__ Marco: _MarcoNoteCheckpoint
__ Marco: _MarcoShouldLog
__ Marco: _MarcoShouldLogCheckpoints
__ Security: _SecKeyCreateSignature
__ Security: _SecKeyVerifySignature
__ Security: _kSecKeyAlgorithmRSASignatureDigestPKCS1v15SHA1
__ SystemConfiguration: _SCDynamicStoreCopyComputerName
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libMobileGestalt.dylib: _MGRegisterForUpdates
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_null
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_shim_legacy_logging_enabled
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_allows_internal_security_policies
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _uuid_parse
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_dictionary
__ libSystem.B.dylib: _xpc_get_type
__ libcupolicy.dylib: _network_usage_policy_create_client
__ libcupolicy.dylib: _network_usage_policy_get_WiFi_data_allowed_from_policy
__ libcupolicy.dylib: _network_usage_policy_get_cell_data_allowed_from_policy
__ libcupolicy.dylib: _network_usage_policy_get_first_use_flow_performed_from_policy
__ libcupolicy.dylib: _network_usage_policy_get_for_bundle
__ libcupolicy.dylib: _network_usage_policy_set_changed_handler
__ libcupolicy.dylib: _perform_first_network_use_flow
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
FTServerBag : NSObject
 @property  NSURL *bagURL
 @property  NSString *apsEnvironmentName
 @property  BOOL allowSelfSignedCertificates
 @property  BOOL allowUnsignedBags
 @property  BOOL isLoaded
 @property  BOOL isLoading
 @property  BOOL isInDebilitatedMode
 @property  BOOL isServerAvailable

  // class methods
  +[FTServerBag sharedInstance]
  +[FTServerBag _sharedInstanceForType:]
  +[FTServerBag _sharedInstance]
  +[FTServerBag sharedInstanceForBagType:]

  // instance methods
  -[FTServerBag isLoaded]
  -[FTServerBag isLoading]
  -[FTServerBag dealloc]
  -[FTServerBag objectForKey:]
  -[FTServerBag isInDebilitatedMode]
  -[FTServerBag _bag]
  -[FTServerBag bagURL]
  -[FTServerBag startBagLoad]
  -[FTServerBag forceBagLoad]
  -[FTServerBag urlWithKey:]
  -[FTServerBag isServerAvailable]
  -[FTServerBag apsEnvironmentName]
  -[FTServerBag _cachedBag]
  -[FTServerBag allowSelfSignedCertificates]
  -[FTServerBag allowUnsignedBags]
  -[FTServerBag initWithBagType:]


FTMessageDelivery : NSObject <FTMessageQueueDelegate>
 @property  NSString *userAgent
 @property  NSNumber *protocolVersion
 @property  BOOL hasQueuedItems
 @property  BOOL busy
 @property  BOOL retryInAirplaneMode
 @property  BOOL logToRegistration
 @property  IDSBaseMessage *currentMessage
 @property  NSArray *queuedMessages
 @property  NSArray *allMessages
 @property  long long maxMessageSize
 @property  long long maxLargeMessageSize
 @property  unsigned long maxConcurrentMessages
 @property  BOOL disallowRetry

  // class methods
  +[FTMessageDelivery alloc]
  +[FTMessageDelivery APNSMessageDeliveryClass]
  +[FTMessageDelivery HTTPMessageDeliveryClass]
  +[FTMessageDelivery _errorForTDMessageDeliveryStatus:userInfo:]

  // instance methods
  -[FTMessageDelivery hasQueuedItems]
  -[FTMessageDelivery sendMessage:]
  -[FTMessageDelivery retryInAirplaneMode]
  -[FTMessageDelivery queue:hitTimeoutForMessage:]
  -[FTMessageDelivery cancelMessage:]
  -[FTMessageDelivery setRetryInAirplaneMode:]
  -[FTMessageDelivery disallowRetry]
  -[FTMessageDelivery networkStateChanged]
  -[FTMessageDelivery setProtocolVersion:]
  -[FTMessageDelivery setUserAgent:]
  -[FTMessageDelivery _retryTimerHit:]
  -[FTMessageDelivery _clearRetryTimer]
  -[FTMessageDelivery busy]
  -[FTMessageDelivery setLogToRegistration:]
  -[FTMessageDelivery queuedMessages]
  -[FTMessageDelivery protocolVersion]
  -[FTMessageDelivery userAgent]
  -[FTMessageDelivery _signMessage:useDataSignatures:body:queryString:intoDictionary:]
  -[FTMessageDelivery setMaxConcurrentMessages:]
  -[FTMessageDelivery maxMessageSize]
  -[FTMessageDelivery allMessages]
  -[FTMessageDelivery _queue]
  -[FTMessageDelivery dealloc]
  -[FTMessageDelivery currentMessage]
  -[FTMessageDelivery .cxx_destruct]
  -[FTMessageDelivery setDisallowRetry:]
  -[FTMessageDelivery _informDelegateAboutMessage:error:result:resultCode:]
  -[FTMessageDelivery maxLargeMessageSize]
  -[FTMessageDelivery logToRegistration]
  -[FTMessageDelivery invalidate]
  -[FTMessageDelivery maxConcurrentMessages]
  -[FTMessageDelivery _sendMessageAsynchronously:error:]
  -[FTMessageDelivery _correctServerTimestampForDriftOnMessage:currentDate:]
  -[FTMessageDelivery init]
  -[FTMessageDelivery _setRetryTimer:]


FTMessageQueue : NSObject
 @property  NSMutableArray *_queue
 @property  NSMutableArray *_addDates
 @property  IDSBaseMessage *topMessage
 @property  long long count
 @property  NSArray *messages
 @property  <FTMessageQueueDelegate> *delegate

  // instance methods
  -[FTMessageQueue set_queue:]
  -[FTMessageQueue _queue]
  -[FTMessageQueue addMessage:]
  -[FTMessageQueue addMessageAtHeadOfQueue:]
  -[FTMessageQueue setDelegate:]
  -[FTMessageQueue dequeueTopMessage]
  -[FTMessageQueue topMessage]
  -[FTMessageQueue removeAllMessages]
  -[FTMessageQueue delegate]
  -[FTMessageQueue set_addDates:]
  -[FTMessageQueue messages]
  -[FTMessageQueue .cxx_destruct]
  -[FTMessageQueue count]
  -[FTMessageQueue _setTimeout]
  -[FTMessageQueue removeMessage:]
  -[FTMessageQueue _addDates]
  -[FTMessageQueue _clearTimeout]
  -[FTMessageQueue _timeoutHit]
  -[FTMessageQueue messageForUniqueID:]
  -[FTMessageQueue init]


FTMessageDelivery_DualMode : NSObject <FTMessageDeliveryProtocol, FTMessageQueueDelegate>
 @property  NSString *userAgent
 @property  BOOL hasQueuedItems
 @property  BOOL busy
 @property  BOOL retryInAirplaneMode
 @property  BOOL logToRegistration
 @property  IDSBaseMessage *currentMessage
 @property  NSArray *queuedMessages
 @property  NSArray *allMessages
 @property  long long maxMessageSize
 @property  long long maxLargeMessageSize
 @property  unsigned long maxConcurrentMessages
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FTMessageDelivery_DualMode sendMessage:]
  -[FTMessageDelivery_DualMode queue:hitTimeoutForMessage:]
  -[FTMessageDelivery_DualMode cancelMessage:]
  -[FTMessageDelivery_DualMode setUserAgent:]
  -[FTMessageDelivery_DualMode queuedMessages]
  -[FTMessageDelivery_DualMode dequeueMessageIfNeeded]
  -[FTMessageDelivery_DualMode initWithPreferedType:]
  -[FTMessageDelivery_DualMode .cxx_destruct]
  -[FTMessageDelivery_DualMode _shouldUseDualDeliveryForMessage:]
  -[FTMessageDelivery_DualMode _enterBackOffMode]
  -[FTMessageDelivery_DualMode _isInBackoffMode]
  -[FTMessageDelivery_DualMode invalidate]
  -[FTMessageDelivery_DualMode handleTranslationAndDeliveryOnAPS:]
  -[FTMessageDelivery_DualMode _randomPercentageChanceForDualDelivery]


FTDeviceSupport : NSObject <CoreTelephonyClientCarrierBundleDelegate, CoreTelephonyClientSubscriberDelegate, CoreTelephonyClientPNRDelegate, CoreTelephonyClientSuppServicesDelegate>
 @property  BOOL isTelephonyDevice
 @property  BOOL faceTimeAvailable
 @property  BOOL faceTimeBlocked
 @property  BOOL faceTimeSupported
 @property  BOOL callingAvailable
 @property  BOOL callingBlocked
 @property  BOOL callingSupported
 @property  BOOL multiwayAvailable
 @property  BOOL multiwayBlocked
 @property  BOOL multiwaySupported
 @property  BOOL nonWifiFaceTimeAvailable
 @property  BOOL nonWifiCallingAvailable
 @property  BOOL iMessageAvailable
 @property  BOOL iMessageBlocked
 @property  BOOL iMessageSupported
 @property  BOOL identityServicesSupported
 @property  BOOL madridAvailable
 @property  BOOL madridBlocked
 @property  BOOL madridSupported
 @property  BOOL conferencingEnabled
 @property  BOOL conferencingBlocked
 @property  BOOL conferencingAllowed
 @property  BOOL commCenterDead
 @property  BOOL accountModificationRestricted
 @property  BOOL isInMultiUserMode
 @property  BOOL wantsBreakBeforeMake
 @property  BOOL isC2KEquipment
 @property  BOOL supportsHDRdecoding
 @property  BOOL supportsSimultaneousVoiceAndDataRightNow
 @property  BOOL supportsAppleIDIdentification
 @property  BOOL supportsApplePay
 @property  BOOL supportsManateeForAppleCash
 @property  BOOL supportsRegionForAppleCash
 @property  BOOL supportsFMDV2
 @property  BOOL supportsVenice
 @property  BOOL supportsHandoff
 @property  BOOL supportsTethering
 @property  BOOL supportsSMS
 @property  BOOL supportsMMS
 @property  BOOL supportsWiFi
 @property  BOOL supportsCellularData
 @property  BOOL supportsWLAN
 @property  BOOL supportsNonWiFiFaceTime
 @property  BOOL supportsNonWiFiCalling
 @property  BOOL supportsKeySharing
 @property  BOOL supportsHarmony
 @property  BOOL supportsUWB
 @property  BOOL mmsConfigured
 @property  BOOL supportsFrontFacingCamera
 @property  BOOL supportsBackFacingCamera
 @property  BOOL supportsFunCam
 @property  BOOL supportsAnimojiV2
 @property  BOOL supportsHomeKitResident
 @property  BOOL supportsCinematicFraming
 @property  BOOL supportsHEIFEncoding
 @property  BOOL isGreenTea
 @property  NSDictionary *telephonyCapabilities
 @property  NSString *deviceName
 @property  NSString *deviceColor
 @property  NSString *enclosureColor
 @property  NSString *deviceIDPrefix
 @property  NSString *deviceTypeIDPrefix
 @property  NSString *deviceRegionInfo
 @property  NSString *model
 @property  NSString *userAgentString
 @property  NSString *productName
 @property  NSString *productVersion
 @property  NSString *productBuildVersion
 @property  NSString *productOSVersion
 @property  NSString *deviceInformationString
 @property  long long performanceClass
 @property  long long deviceType
 @property  BOOL registrationSupported
 @property  BOOL supportsSMSIdentification
 @property  BOOL SIMInserted
 @property  NSDictionary *CTNetworkInformation
 @property  NSString *telephoneNumber
 @property  BOOL lowRAMDevice
 @property  BOOL slowCPUDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FTDeviceSupport sharedInstance]
  +[FTDeviceSupport marketingNameForDeviceType:]

  // instance methods
  -[FTDeviceSupport carrierBundleChange:]
  -[FTDeviceSupport supportsSMS]
  -[FTDeviceSupport simStatusDidChange:status:]
  -[FTDeviceSupport profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[FTDeviceSupport supportsFunCam]
  -[FTDeviceSupport operatorBundleChange:]
  -[FTDeviceSupport multiwayAvailable]
  -[FTDeviceSupport productBuildVersion]
  -[FTDeviceSupport faceTimeAvailable]
  -[FTDeviceSupport identityServicesSupported]
  -[FTDeviceSupport enclosureColor]
  -[FTDeviceSupport deviceRegionInfo]
  -[FTDeviceSupport callingSupported]
  -[FTDeviceSupport conferencingBlocked]
  -[FTDeviceSupport profileConnectionDidReceiveRestrictionChangedNotification:userInfo:]
  -[FTDeviceSupport supportsBackFacingCamera]
  -[FTDeviceSupport _registerForCommCenterReadyNotifications]
  -[FTDeviceSupport nonWifiFaceTimeAvailable]
  -[FTDeviceSupport model]
  -[FTDeviceSupport supportsSimultaneousVoiceAndDataRightNow]
  -[FTDeviceSupport nonWifiCallingAvailable]
  -[FTDeviceSupport _registerForCapabilityNotifications]
  -[FTDeviceSupport supportsRegionForAppleCash]
  -[FTDeviceSupport callingAvailable]
  -[FTDeviceSupport supportsNonWiFiFaceTime]
  -[FTDeviceSupport supportsApplePay]
  -[FTDeviceSupport _registerForCarrierNotifications]
  -[FTDeviceSupport userAgentString]
  -[FTDeviceSupport lowRAMDevice]
  -[FTDeviceSupport phoneNumberChanged:]
  -[FTDeviceSupport _unregisterForServiceStatusNotifications]
  -[FTDeviceSupport callingBlocked]
  -[FTDeviceSupport _registerForInternalCoreTelephonyNotifications]
  -[FTDeviceSupport _commCenterAlive]
  -[FTDeviceSupport supportsFMDV2]
  -[FTDeviceSupport dealloc]
  -[FTDeviceSupport isTelephonyDevice]
  -[FTDeviceSupport supportsNonWiFiCalling]
  -[FTDeviceSupport madridBlocked]
  -[FTDeviceSupport productName]
  -[FTDeviceSupport accountModificationRestricted]
  -[FTDeviceSupport iMessageBlocked]
  -[FTDeviceSupport .cxx_destruct]
  -[FTDeviceSupport wantsBreakBeforeMake]
  -[FTDeviceSupport supportsMMS]
  -[FTDeviceSupport _unregisterForManagedConfigurationNotifications]
  -[FTDeviceSupport _handlePotentialPhoneNumberRegistrationStateChanged]
  -[FTDeviceSupport supportsWiFi]
  -[FTDeviceSupport noteSelectedPhoneNumberRegistrationSubscriptionDidChange]
  -[FTDeviceSupport commCenterDead]
  -[FTDeviceSupport isC2KEquipment]
  -[FTDeviceSupport slowCPUDevice]
  -[FTDeviceSupport supportsHandoff]
  -[FTDeviceSupport deviceType]
  -[FTDeviceSupport multiwayBlocked]
  -[FTDeviceSupport supportsHEIFEncoding]
  -[FTDeviceSupport supportsTethering]
  -[FTDeviceSupport faceTimeBlocked]
  -[FTDeviceSupport conferencingEnabled]
  -[FTDeviceSupport _updateManagedConfigurationSettings]
  -[FTDeviceSupport mmsConfigured]
  -[FTDeviceSupport supportsVenice]
  -[FTDeviceSupport supportsAnimojiV2]
  -[FTDeviceSupport isGreenTea]
  -[FTDeviceSupport supportsManateeForAppleCash]
  -[FTDeviceSupport deviceInformationString]
  -[FTDeviceSupport _registerForServiceStatusNotifications]
  -[FTDeviceSupport productVersion]
  -[FTDeviceSupport iMessageAvailable]
  -[FTDeviceSupport _handleSIMStatusChangedToStatus:]
  -[FTDeviceSupport isInDualPhoneIdentityMode]
  -[FTDeviceSupport _updateCTNetworkDictionary:key:withTelephonyNetworkValue:telephonyError:]
  -[FTDeviceSupport nonBluetoothAvailableForBundleId:]
  -[FTDeviceSupport supportsSMSIdentification]
  -[FTDeviceSupport _registerForLockdownNotifications]
  -[FTDeviceSupport pnrReadyStateNotification:regState:]
  -[FTDeviceSupport _handleCarrierSettingsChanged]
  -[FTDeviceSupport _registerForManagedConfigurationNotifications]
  -[FTDeviceSupport telephoneNumber]
  -[FTDeviceSupport multiwaySupported]
  -[FTDeviceSupport SIMInserted]
  -[FTDeviceSupport CTNetworkInformation]
  -[FTDeviceSupport cpuFamily]
  -[FTDeviceSupport _invalidateValuesCachedForSelectedPhoneNumberRegistration]
  -[FTDeviceSupport supportsHomeKitResident]
  -[FTDeviceSupport deviceColor]
  -[FTDeviceSupport deviceIDPrefix]
  -[FTDeviceSupport supportsCinematicFraming]
  -[FTDeviceSupport faceTimeSupported]
  -[FTDeviceSupport registrationState]
  -[FTDeviceSupport supportsKeySharing]
  -[FTDeviceSupport performanceClass]
  -[FTDeviceSupport nonWifiAvailableForBundleId:]
  -[FTDeviceSupport _legacy_supportsSMSIdentification]
  -[FTDeviceSupport iMessageSupported]
  -[FTDeviceSupport _serviceStatus]
  -[FTDeviceSupport deviceName]
  -[FTDeviceSupport supportsFrontFacingCamera]
  -[FTDeviceSupport supportsWLAN]
  -[FTDeviceSupport supportsAppleIDIdentification]
  -[FTDeviceSupport wifiAllowedForBundleId:]
  -[FTDeviceSupport inProcess_isCallingSupported]
  -[FTDeviceSupport memorySize]
  -[FTDeviceSupport conferencingAllowed]
  -[FTDeviceSupport productOSVersion]
  -[FTDeviceSupport madridSupported]
  -[FTDeviceSupport supportsCellularData]
  -[FTDeviceSupport isInMultiUserMode]
  -[FTDeviceSupport supportsUWB]
  -[FTDeviceSupport _initializeSIMInsertedCachedValue]
  -[FTDeviceSupport _lockdownStateChanged:]
  -[FTDeviceSupport telephonyCapabilities]
  -[FTDeviceSupport deviceTypeIDPrefix]
  -[FTDeviceSupport init]
  -[FTDeviceSupport registrationSupported]
  -[FTDeviceSupport supportsHarmony]
  -[FTDeviceSupport _unregisterForCommCenterReadyNotifications]
  -[FTDeviceSupport _enoughPowerToSupportEffects]
  -[FTDeviceSupport _updateCapabilities]
  -[FTDeviceSupport madridAvailable]
  -[FTDeviceSupport supportsHDRdecoding]


FTProtobufMessage : FTIDSMessage
 @property  NSString *pushTopic
 @property  int version
 @property  NSString *messageID
 @property  NSData *protoData
 @property  NSData *protoResponse
 @property  int responseValue

  // instance methods
  -[FTProtobufMessage command]
  -[FTProtobufMessage setMessageID:]
  -[FTProtobufMessage setPushTopic:]
  -[FTProtobufMessage handleResponseHeaders:]
  -[FTProtobufMessage isIDSMessage]
  -[FTProtobufMessage handleResponseDictionary:]
  -[FTProtobufMessage topic]
  -[FTProtobufMessage .cxx_destruct]
  -[FTProtobufMessage pushTopic]
  -[FTProtobufMessage wantsBinaryPush]
  -[FTProtobufMessage version]
  -[FTProtobufMessage additionalMessageHeadersForOutgoingPush]
  -[FTProtobufMessage highPriority]
  -[FTProtobufMessage wantsIDSProtocolVersion]
  -[FTProtobufMessage messageID]
  -[FTProtobufMessage copyWithZone:]
  -[FTProtobufMessage messageBody]
  -[FTProtobufMessage setVersion:]
  -[FTProtobufMessage wantsCompressedBody]
  -[FTProtobufMessage isWebTunnelMessage]
  -[FTProtobufMessage responseCommand]
  -[FTProtobufMessage wantsResponse]
  -[FTProtobufMessage protoData]
  -[FTProtobufMessage wantsAPSRetries]
  -[FTProtobufMessage userAgentHeaderString]
  -[FTProtobufMessage wantsUserAgentInHeaders]
  -[FTProtobufMessage wantsIntegerUniqueIDs]
  -[FTProtobufMessage initWithPushTopic:protoData:]
  -[FTProtobufMessage setProtoData:]
  -[FTProtobufMessage protoResponse]
  -[FTProtobufMessage setProtoResponse:]
  -[FTProtobufMessage responseValue]
  -[FTProtobufMessage setResponseValue:]


FTSelectedPNRSubscriptionCache : NSObject
 @property  CTXPCServiceSubscriptionInfo *subscriptionInfo
 @property  CTXPCContexts *activeSubscriptionInfo
 @property  CTXPCServiceSubscriptionContext *selectedContext
 @property  NSString *phoneNumber
 @property  long long dualSIMCapability

  // instance methods
  -[FTSelectedPNRSubscriptionCache phoneNumber]
  -[FTSelectedPNRSubscriptionCache setPhoneNumber:]
  -[FTSelectedPNRSubscriptionCache .cxx_destruct]
  -[FTSelectedPNRSubscriptionCache selectedContext]
  -[FTSelectedPNRSubscriptionCache setSelectedContext:]
  -[FTSelectedPNRSubscriptionCache setSubscriptionInfo:]
  -[FTSelectedPNRSubscriptionCache setDualSIMCapability:]
  -[FTSelectedPNRSubscriptionCache dualSIMCapability]
  -[FTSelectedPNRSubscriptionCache setActiveSubscriptionInfo:]
  -[FTSelectedPNRSubscriptionCache activeSubscriptionInfo]
  -[FTSelectedPNRSubscriptionCache subscriptionInfo]


FTSelectedPNRSubscription : NSObject <CoreTelephonyClientDelegate, CoreTelephonyClientSuppServicesDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FTSelectedPNRSubscription sharedInstance]
  +[FTSelectedPNRSubscription isPhoneNumber:equivalentToExistingPhoneNumber:]

  // instance methods
  -[FTSelectedPNRSubscription subscriptionInfoDidChange]
  -[FTSelectedPNRSubscription dualSimCapabilityDidChange]
  -[FTSelectedPNRSubscription _reevaluateCachedActiveSubscriptionWithError:]
  -[FTSelectedPNRSubscription _protected_invalidateCache]
  -[FTSelectedPNRSubscription _subscriptionFromAvailableSubscriptions:matchingSelectedLabel:]
  -[FTSelectedPNRSubscription persistSelectedPhoneNumberRegistrationSubscriptionIfNeeded]
  -[FTSelectedPNRSubscription phoneNumberChanged:]
  -[FTSelectedPNRSubscription _firstPresentSubscriptionFromAvailableSubscriptions:]
  -[FTSelectedPNRSubscription invalidateCache]
  -[FTSelectedPNRSubscription dealloc]
  -[FTSelectedPNRSubscription _reevaluateCachedSelectedPhoneNumberRegistrationWithSubscription:activeContexts:fallbackProhibited:persistUpdate:error:]
  -[FTSelectedPNRSubscription .cxx_destruct]
  -[FTSelectedPNRSubscription _isIdentityFallbackProhibitedForDeviceBasedOnCapability:subscriptionInfo:]
  -[FTSelectedPNRSubscription _doesSubscriptionInfoContainMultipleLabels:]
  -[FTSelectedPNRSubscription phoneNumberAvailable:]
  -[FTSelectedPNRSubscription selectedPhoneNumberRegistrationSubscriptionWithError:]
  -[FTSelectedPNRSubscription _reevaluateCachedSelectedPhoneNumberWithContext:error:]
  -[FTSelectedPNRSubscription isDeviceInDualPhoneIdentityMode]
  -[FTSelectedPNRSubscription _doesSubscriptionInfoContainMultipleUniqueLabels:]
  -[FTSelectedPNRSubscription isSelectedPhoneNumberRegistrationSubscriptionContext:]
  -[FTSelectedPNRSubscription _protected_reevaluateCacheIfNeededAndPersistUpdate:]
  -[FTSelectedPNRSubscription selectedRegistrationPhoneNumberWithError:]
  -[FTSelectedPNRSubscription _distributed_invalidateCache]
  -[FTSelectedPNRSubscription activeSubscriptionsDidChange]
  -[FTSelectedPNRSubscription setSelectedPhoneNumberRegistrationSubscriptionNumber:]
  -[FTSelectedPNRSubscription _reevaluateCachedSubscriptionWithError:]
  -[FTSelectedPNRSubscription isPhoneNumberEmergencyNumber:]
  -[FTSelectedPNRSubscription _reevaluateDualIdentityModeWithSubscriptionInfo:]
  -[FTSelectedPNRSubscription _isInDualPhoneIdentityModeBasedOnCapability:]
  -[FTSelectedPNRSubscription init]
  -[FTSelectedPNRSubscription _legacy_isPhoneNumberEmergencyNumber:]


FTNetworkSupport : NSObject
 @property  BOOL allowAnyNetwork
 @property  BOOL validNetworkEnabled
 @property  BOOL validNetworkActive
 @property  BOOL validNetworkReachable
 @property  BOOL wiFiActiveAndReachable
 @property  BOOL willSearchForNetwork
 @property  BOOL dataActiveAndReachable
 @property  BOOL networkEnabled
 @property  BOOL networkActive
 @property  BOOL networkReachable
 @property  BOOL enableCriticalReliability

  // class methods
  +[FTNetworkSupport sharedInstance]

  // instance methods
  -[FTNetworkSupport validNetworkEnabled]
  -[FTNetworkSupport _reallySetCriticalReliability:]
  -[FTNetworkSupport networkActive]
  -[FTNetworkSupport validNetworkActive]
  -[FTNetworkSupport enableCriticalReliability]
  -[FTNetworkSupport validNetworkReachableForBundleId:]
  -[FTNetworkSupport .cxx_destruct]
  -[FTNetworkSupport willSearchForNetwork]
  -[FTNetworkSupport _tryToEnableReliability]
  -[FTNetworkSupport networkReachable]
  -[FTNetworkSupport dataActiveAndReachable]
  -[FTNetworkSupport validNetworkActiveForBundleId:]
  -[FTNetworkSupport setEnableCriticalReliability:]
  -[FTNetworkSupport wiFiActiveAndReachable]
  -[FTNetworkSupport allowAnyNetwork]
  -[FTNetworkSupport _clearReliabilityTimeoutInterval]
  -[FTNetworkSupport networkEnabled]
  -[FTNetworkSupport _setReliabilityTimeoutInterval]
  -[FTNetworkSupport willSearchForNetworkForBundleId:]
  -[FTNetworkSupport _createAPSConnectionIfNeeded]
  -[FTNetworkSupport validNetworkReachable]
  -[FTNetworkSupport validNetworkEnabledForBundleId:]


FTServiceStatus : NSObject
 @property  int supportedServicesToken
 @property  unsigned long supportedServicesFlags
 @property  BOOL blockPost
 @property  BOOL iMessageSupported
 @property  BOOL faceTimeAudioSupported
 @property  BOOL faceTimeMultiwaySupported

  // class methods
  +[FTServiceStatus sharedInstance]

  // instance methods
  -[FTServiceStatus _reload]
  -[FTServiceStatus _removeObservers]
  -[FTServiceStatus _noCache_supportedServicesFlags]
  -[FTServiceStatus _addObservers]
  -[FTServiceStatus faceTimeAudioSupported]
  -[FTServiceStatus dealloc]
  -[FTServiceStatus initPrivate]
  -[FTServiceStatus supportedServicesFlags]
  -[FTServiceStatus setBlockPost:]
  -[FTServiceStatus faceTimeMultiwaySupported]
  -[FTServiceStatus iMessageSupported]
  -[FTServiceStatus setSupportedServicesToken:]
  -[FTServiceStatus setSupportedServicesFlags:]
  -[FTServiceStatus blockPost]
  -[FTServiceStatus supportedServicesToken]


FTiMessageStatus : NSObject
 @property  FTServiceStatus *serviceStatus
 @property  BOOL iMessageSupported

  // class methods
  +[FTiMessageStatus sharedInstance]

  // instance methods
  -[FTiMessageStatus serviceStatus]
  -[FTiMessageStatus .cxx_destruct]
  -[FTiMessageStatus initPrivate]
  -[FTiMessageStatus iMessageSupported]


FTEmbeddedReachability : NSObject
  // class methods
  +[FTEmbeddedReachability reachabilityWithAddress:]
  +[FTEmbeddedReachability reachabilityForInternetConnection]
  +[FTEmbeddedReachability reachabilityWithHostName:]
  +[FTEmbeddedReachability reachabilityForLocalWiFi]

  // instance methods
  -[FTEmbeddedReachability localWiFiStatusForFlags:]
  -[FTEmbeddedReachability dealloc]
  -[FTEmbeddedReachability connectionRequired]
  -[FTEmbeddedReachability networkStatusForFlags:]
  -[FTEmbeddedReachability currentReachabilityStatus]


IDSWebTunnelRequestMessage : FTIDSMessage
 @property  NSString *messageRequestUUID
 @property  NSString *messageURL
 @property  NSData *messageRequestBodyData
 @property  NSDictionary *messageRequestBodyDictionary
 @property  NSMutableDictionary *messageHeaders
 @property  NSNumber *maximumResponseSize
 @property  NSString *userAgentOverride
 @property  NSData *responseBodyData
 @property  NSDictionary *responseBodyDictionary
 @property  NSDictionary *responseHeaders
 @property  NSNumber *responseCode
 @property  NSNumber *responseStatus
 @property  BOOL disableIDSTranslation

  // instance methods
  -[IDSWebTunnelRequestMessage setResponseCode:]
  -[IDSWebTunnelRequestMessage responseCode]
  -[IDSWebTunnelRequestMessage setResponseHeaders:]
  -[IDSWebTunnelRequestMessage handleResponseHeaders:]
  -[IDSWebTunnelRequestMessage responseHeaders]
  -[IDSWebTunnelRequestMessage isIDSMessage]
  -[IDSWebTunnelRequestMessage handleResponseDictionary:]
  -[IDSWebTunnelRequestMessage setMaximumResponseSize:]
  -[IDSWebTunnelRequestMessage setDisableIDSTranslation:]
  -[IDSWebTunnelRequestMessage .cxx_destruct]
  -[IDSWebTunnelRequestMessage messageRequestUUID]
  -[IDSWebTunnelRequestMessage setResponseBodyDictionary:]
  -[IDSWebTunnelRequestMessage disableIDSTranslation]
  -[IDSWebTunnelRequestMessage setUserAgentOverride:]
  -[IDSWebTunnelRequestMessage wantsBinaryPush]
  -[IDSWebTunnelRequestMessage initWithMessage:]
  -[IDSWebTunnelRequestMessage setMessageURL:]
  -[IDSWebTunnelRequestMessage additionalMessageHeadersForOutgoingPush]
  -[IDSWebTunnelRequestMessage wantsIDSProtocolVersion]
  -[IDSWebTunnelRequestMessage setResponseBodyData:]
  -[IDSWebTunnelRequestMessage setMessageRequestBodyDictionary:]
  -[IDSWebTunnelRequestMessage maximumResponseSize]
  -[IDSWebTunnelRequestMessage messageHeaders]
  -[IDSWebTunnelRequestMessage copyWithZone:]
  -[IDSWebTunnelRequestMessage messageBody]
  -[IDSWebTunnelRequestMessage messageRequestBodyDictionary]
  -[IDSWebTunnelRequestMessage responseBodyDictionary]
  -[IDSWebTunnelRequestMessage setMessageHeaders:]
  -[IDSWebTunnelRequestMessage responseBodyData]
  -[IDSWebTunnelRequestMessage setResponseStatus:]
  -[IDSWebTunnelRequestMessage wantsCompressedBody]
  -[IDSWebTunnelRequestMessage messageRequestBodyData]
  -[IDSWebTunnelRequestMessage messageURL]
  -[IDSWebTunnelRequestMessage setMessageRequestBodyData:]
  -[IDSWebTunnelRequestMessage isWebTunnelMessage]
  -[IDSWebTunnelRequestMessage setMessageRequestUUID:]
  -[IDSWebTunnelRequestMessage responseStatus]
  -[IDSWebTunnelRequestMessage userAgentOverride]


FTAuthKitManager : NSObject
  // class methods
  +[FTAuthKitManager sharedInstance]

  // instance methods
  -[FTAuthKitManager .cxx_destruct]
  -[FTAuthKitManager handleResponse:forRequest:completionBlock:]
  -[FTAuthKitManager anisetteHeadersForRequest:completionBlockQueue:completionBlock:]
  -[FTAuthKitManager init]


FTMessageDeliveryRemoteURLConnectionFactory : NSObject <FTMessageDeliveryRemoteURLConnectionFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FTMessageDeliveryRemoteURLConnectionFactory remoteURLConnection]


FTMessageDelivery_HTTP : FTMessageDelivery <FTMessageQueueDelegate>
  // instance methods
  -[FTMessageDelivery_HTTP sendMessage:]
  -[FTMessageDelivery_HTTP queue:hitTimeoutForMessage:]
  -[FTMessageDelivery_HTTP _serverBagLoaded:]
  -[FTMessageDelivery_HTTP cancelMessage:]
  -[FTMessageDelivery_HTTP networkStateChanged]
  -[FTMessageDelivery_HTTP _clearRetryTimer]
  -[FTMessageDelivery_HTTP busy]
  -[FTMessageDelivery_HTTP sendMessageAtTopOfTheQueue:]
  -[FTMessageDelivery_HTTP _dequeueIfNeeded]
  -[FTMessageDelivery_HTTP _informDelegatesOfMessage:result:resultCode:error:]
  -[FTMessageDelivery_HTTP _updateWiFiAssertions]
  -[FTMessageDelivery_HTTP dealloc]
  -[FTMessageDelivery_HTTP .cxx_destruct]
  -[FTMessageDelivery_HTTP _urlRequestWithURL:andData:message:completionBlock:]
  -[FTMessageDelivery_HTTP initWithIDSServerBag:iMessageServerBag:remoteConnectionFactory:mobileNetworkManager:retryBackoffProvider:]
  -[FTMessageDelivery_HTTP _tryRetryMessageWithTimeInterval:]
  -[FTMessageDelivery_HTTP _notifyDelegateAboutError:]
  -[FTMessageDelivery_HTTP _processResultData:forMessage:error:]
  -[FTMessageDelivery_HTTP invalidate]
  -[FTMessageDelivery_HTTP _sendMessageAsynchronously:error:]
  -[FTMessageDelivery_HTTP _cleanupURLConnection]
  -[FTMessageDelivery_HTTP init]
  -[FTMessageDelivery_HTTP initWithIDSServerBag:]


FTMessageDelivery_APS : FTMessageDelivery <FTMessageQueueDelegate, APSConnectionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FTMessageDelivery_APS sharedInstance]

  // instance methods
  -[FTMessageDelivery_APS connection:didSendOutgoingMessage:]
  -[FTMessageDelivery_APS sendMessage:]
  -[FTMessageDelivery_APS queue:hitTimeoutForMessage:]
  -[FTMessageDelivery_APS _serverBagLoaded:]
  -[FTMessageDelivery_APS cancelMessage:]
  -[FTMessageDelivery_APS connection:didChangeConnectedStatus:]
  -[FTMessageDelivery_APS busy]
  -[FTMessageDelivery_APS connection:didReceivePublicToken:]
  -[FTMessageDelivery_APS _dequeueIfNeeded]
  -[FTMessageDelivery_APS maxMessageSize]
  -[FTMessageDelivery_APS allMessages]
  -[FTMessageDelivery_APS _apsMessageForMessage:body:]
  -[FTMessageDelivery_APS _noteMessageSucceeded:ftMessage:error:result:resultCode:]
  -[FTMessageDelivery_APS _apsOutgoingMessageForFTMessage:]
  -[FTMessageDelivery_APS _powerLogEvent:dictionary:]
  -[FTMessageDelivery_APS connection:didReceiveMessageForTopic:userInfo:]
  -[FTMessageDelivery_APS _messageACKTimedOut:]
  -[FTMessageDelivery_APS _setEnabledTopics:]
  -[FTMessageDelivery_APS _fillMessageParameters:ftMessage:]
  -[FTMessageDelivery_APS _apsMessageBodyForMessage:]
  -[FTMessageDelivery_APS _sendMessage:ftMessage:]
  -[FTMessageDelivery_APS dealloc]
  -[FTMessageDelivery_APS _updateTopics]
  -[FTMessageDelivery_APS _invalidateTimerForMessageID:]
  -[FTMessageDelivery_APS _noteMessageSent:ftMessage:body:]
  -[FTMessageDelivery_APS _clearMapForMessageID:]
  -[FTMessageDelivery_APS .cxx_destruct]
  -[FTMessageDelivery_APS connection]
  -[FTMessageDelivery_APS _requiredTopics]
  -[FTMessageDelivery_APS _messageNeedsRetry:]
  -[FTMessageDelivery_APS _invalidateDeathTimerForMessageID:]
  -[FTMessageDelivery_APS _currentMessages]
  -[FTMessageDelivery_APS _setMapForMessage:apsMessage:messageBody:timeoutTime:timeoutSelector:retries:]
  -[FTMessageDelivery_APS _shouldSendSOSForFailure:]
  -[FTMessageDelivery_APS maxLargeMessageSize]
  -[FTMessageDelivery_APS _currentTimers]
  -[FTMessageDelivery_APS invalidate]
  -[FTMessageDelivery_APS _messageAckGracePeriodTimedOut:]
  -[FTMessageDelivery_APS connection:didFailToSendOutgoingMessage:error:]
  -[FTMessageDelivery_APS _noteMessageACKd:ftMessage:]
  -[FTMessageDelivery_APS _isBusyWithMessage:]
  -[FTMessageDelivery_APS _sendMessageAsynchronously:error:]
  -[FTMessageDelivery_APS _messageForAPSOutgoingMessage:]
  -[FTMessageDelivery_APS _noteMessageFailed:ftMessage:retryBehavior:error:]
  -[FTMessageDelivery_APS _retryCountForMessage:]
  -[FTMessageDelivery_APS _notifyDelegateAboutError:resultCode:forMessage:]
  -[FTMessageDelivery_APS _bodyForMessage:]
  -[FTMessageDelivery_APS _messageSendTimedOut:]
  -[FTMessageDelivery_APS _messageCompletelyTimedOut:]
  -[FTMessageDelivery_APS initWithAPSConnection:mobileNetworkManager:]
  -[FTMessageDelivery_APS init]
  -[FTMessageDelivery_APS _currentAPSMessages]


FTShareChannelMessage : FTIDSMessage
 @property  int messageType
 @property  int version
 @property  NSString *messageID
 @property  NSData *protoData
 @property  NSData *protoResponse
 @property  int responseValue

  // instance methods
  -[FTShareChannelMessage command]
  -[FTShareChannelMessage setMessageID:]
  -[FTShareChannelMessage handleResponseHeaders:]
  -[FTShareChannelMessage setMessageType:]
  -[FTShareChannelMessage isIDSMessage]
  -[FTShareChannelMessage handleResponseDictionary:]
  -[FTShareChannelMessage topic]
  -[FTShareChannelMessage .cxx_destruct]
  -[FTShareChannelMessage wantsBinaryPush]
  -[FTShareChannelMessage version]
  -[FTShareChannelMessage additionalMessageHeadersForOutgoingPush]
  -[FTShareChannelMessage highPriority]
  -[FTShareChannelMessage wantsIDSProtocolVersion]
  -[FTShareChannelMessage messageID]
  -[FTShareChannelMessage copyWithZone:]
  -[FTShareChannelMessage messageBody]
  -[FTShareChannelMessage messageType]
  -[FTShareChannelMessage setVersion:]
  -[FTShareChannelMessage wantsCompressedBody]
  -[FTShareChannelMessage isWebTunnelMessage]
  -[FTShareChannelMessage responseCommand]
  -[FTShareChannelMessage wantsResponse]
  -[FTShareChannelMessage protoData]
  -[FTShareChannelMessage wantsAPSRetries]
  -[FTShareChannelMessage userAgentHeaderString]
  -[FTShareChannelMessage wantsUserAgentInHeaders]
  -[FTShareChannelMessage wantsIntegerUniqueIDs]
  -[FTShareChannelMessage setProtoData:]
  -[FTShareChannelMessage protoResponse]
  -[FTShareChannelMessage setProtoResponse:]
  -[FTShareChannelMessage responseValue]
  -[FTShareChannelMessage setResponseValue:]
  -[FTShareChannelMessage initWithProtoData:messageType:]


FTIDSMessage : IDSBaseMessage <NSCopying>
 @property  ^{__SecKey=} pushPrivateKey
 @property  ^{__SecKey=} pushPublicKey
 @property  NSData *pushCertificate
 @property  NSData *pushToken
 @property  NSString *selfURI
 @property  NSMutableArray *certDataArray
 @property  NSMutableArray *publicKeyArray
 @property  NSMutableArray *privateKeyArray
 @property  NSMutableArray *userIDArray
 @property  ^{__SecKey=} identityPrivateKey
 @property  ^{__SecKey=} identityPublicKey
 @property  NSData *IDCertificate
 @property  BOOL wantsIDSProtocolVersion

  // instance methods
  -[FTIDSMessage pushToken]
  -[FTIDSMessage setPushToken:]
  -[FTIDSMessage command]
  -[FTIDSMessage dealloc]
  -[FTIDSMessage .cxx_destruct]
  -[FTIDSMessage wantsBinaryPush]
  -[FTIDSMessage additionalMessageHeadersForOutgoingPush]
  -[FTIDSMessage wantsIDSProtocolVersion]
  -[FTIDSMessage retryCountKey]
  -[FTIDSMessage copyWithZone:]
  -[FTIDSMessage wantsCompressedBody]
  -[FTIDSMessage responseCommand]
  -[FTIDSMessage init]
  -[FTIDSMessage serverTimestamp]
  -[FTIDSMessage wantsHTTPHeaders]
  -[FTIDSMessage setServerTimestamp:]
  -[FTIDSMessage wantsIDSServer]
  -[FTIDSMessage wantsBagKey]
  -[FTIDSMessage wantsSignature]
  -[FTIDSMessage wantsBodySignature]
  -[FTIDSMessage pushPrivateKey]
  -[FTIDSMessage setPushPrivateKey:]
  -[FTIDSMessage pushPublicKey]
  -[FTIDSMessage setPushPublicKey:]
  -[FTIDSMessage pushCertificate]
  -[FTIDSMessage setPushCertificate:]
  -[FTIDSMessage certDataArray]
  -[FTIDSMessage setCertDataArray:]
  -[FTIDSMessage publicKeyArray]
  -[FTIDSMessage setPublicKeyArray:]
  -[FTIDSMessage privateKeyArray]
  -[FTIDSMessage setPrivateKeyArray:]
  -[FTIDSMessage userIDArray]
  -[FTIDSMessage setUserIDArray:]
  -[FTIDSMessage identityPrivateKey]
  -[FTIDSMessage identityPublicKey]
  -[FTIDSMessage IDCertificate]
  -[FTIDSMessage serverTimestampReceivedDate]
  -[FTIDSMessage setServerTimestampReceivedDate:]
  -[FTIDSMessage additionalMessageHeaders]
  -[FTIDSMessage setIdentityPrivateKey:]
  -[FTIDSMessage setIdentityPublicKey:]
  -[FTIDSMessage addAuthUserID:certificate:privateKey:publicKey:]
  -[FTIDSMessage setIDCertificate:]
  -[FTIDSMessage selfURI]
  -[FTIDSMessage setSelfURI:]


FTEntitlementSupport : NSObject
 @property  BOOL faceTimeNonWiFiEntitled
 @property  NSDictionary *registrationState

  // class methods
  +[FTEntitlementSupport sharedInstance]

  // instance methods
  -[FTEntitlementSupport _entitlementStatusChanged]
  -[FTEntitlementSupport _registerForCTEntitlementNotifications]
  -[FTEntitlementSupport _handleCTServiceRequestName:userInfo:contextInfo:]
  -[FTEntitlementSupport _updateEntitlementStatusUsingCTEntitlementsInfo:]
  -[FTEntitlementSupport _reconnectCTServerConnectionIfNecessary]
  -[FTEntitlementSupport _cleanupMachInfo]
  -[FTEntitlementSupport registrationState]
  -[FTEntitlementSupport _rawEntitlementValue]
  -[FTEntitlementSupport _setupCTServerConnection]
  -[FTEntitlementSupport _unregisterForCTEntitlementNotifications]
  -[FTEntitlementSupport init]
  -[FTEntitlementSupport faceTimeNonWiFiEntitled]
  -[FTEntitlementSupport _disconnectCTServerConnection]


FTUserConfiguration : NSObject
 @property  ^{__CTServerConnection=} ctServerConnection
 @property  NSMutableDictionary *nonBTAllowedCache
 @property  BOOL shouldCacheCTConnection
 @property  BOOL _nonWifiFaceTimeEntitled
 @property  BOOL cellularFaceTimeEnabled
 @property  BOOL allowAnyNetwork
 @property  NSArray *selectedPhoneNumberRegistrationSubscriptionLabels
 @property  NSNumber *selectedPhoneNumberRegistrationSubscriptionNumber
 @property  BOOL isDeviceInDualPhoneIdentityMode
 @property  BOOL isDeviceInManualPhoneSelectionMode

  // class methods
  +[FTUserConfiguration sharedInstance]

  // instance methods
  -[FTUserConfiguration _clearCaches]
  -[FTUserConfiguration ctServerConnection]
  -[FTUserConfiguration cellularDataEnabledForBundleId:]
  -[FTUserConfiguration setCtServerConnection:]
  -[FTUserConfiguration _getWifiDataAllowedForBundleID:]
  -[FTUserConfiguration nonBluetoothAllowedForBundleId:]
  -[FTUserConfiguration _getCellularDataEnabledForBundleID:]
  -[FTUserConfiguration _setupUsageHandlerIfNeeded]
  -[FTUserConfiguration selectedPhoneNumberRegistrationSubscriptionNumber]
  -[FTUserConfiguration setIsDeviceInDualPhoneIdentityMode:]
  -[FTUserConfiguration dealloc]
  -[FTUserConfiguration .cxx_destruct]
  -[FTUserConfiguration setAllowAnyNetwork:]
  -[FTUserConfiguration cellularFaceTimeEnabled]
  -[FTUserConfiguration nonBTAllowedCache]
  -[FTUserConfiguration setNonBTAllowedCache:]
  -[FTUserConfiguration isDeviceInManualPhoneSelectionMode]
  -[FTUserConfiguration isDeviceInDualPhoneIdentityMode]
  -[FTUserConfiguration setShouldCacheCTConnection:]
  -[FTUserConfiguration allowAnyNetwork]
  -[FTUserConfiguration setIsDeviceInManualPhoneSelectionMode:]
  -[FTUserConfiguration setCellularFaceTimeEnabled:]
  -[FTUserConfiguration shouldCacheCTConnection]
  -[FTUserConfiguration wifiAllowedForBundleId:]
  -[FTUserConfiguration setSelectedPhoneNumberRegistrationSubscriptionLabels:]
  -[FTUserConfiguration silentlySetSelectedPhoneNumberRegistrationSubscriptionLabels:]
  -[FTUserConfiguration _getNonBluetoothDataAllowedForBundleID:]
  -[FTUserConfiguration _adequateInternalOrCarrierInstall]
  -[FTUserConfiguration _setAppCellularDataEnabled:]
  -[FTUserConfiguration _nonWifiFaceTimeEntitled]
  -[FTUserConfiguration selectedPhoneNumberRegistrationSubscriptionLabels]
  -[FTUserConfiguration init]


FTRegion : NSObject
 @property  NSDictionary *_dictionary
 @property  FTRegion *_parentRegion
 @property  NSString *isoCode
 @property  NSString *label
 @property  NSString *regionID
 @property  NSString *basePhoneNumber
 @property  FTRegion *parentRegion
 @property  NSArray *subRegions

  // instance methods
  -[FTRegion _dictionary]
  -[FTRegion dealloc]
  -[FTRegion _initWithDictionary:]
  -[FTRegion .cxx_destruct]
  -[FTRegion label]
  -[FTRegion regionID]
  -[FTRegion _parentRegion]
  -[FTRegion subRegions]
  -[FTRegion parentRegion]
  -[FTRegion _setParentRegion:]
  -[FTRegion regionWithID:]
  -[FTRegion isoCode]
  -[FTRegion basePhoneNumber]
  -[FTRegion set_dictionary:]
  -[FTRegion set_parentRegion:]


FTRegionSupport : NSObject
 @property  FTMessageDelivery *delivery
 @property  NSArray *regions
 @property  BOOL isLoaded
 @property  BOOL isLoading

  // class methods
  +[FTRegionSupport sharedInstance]

  // instance methods
  -[FTRegionSupport delivery]
  -[FTRegionSupport isLoaded]
  -[FTRegionSupport isLoading]
  -[FTRegionSupport dealloc]
  -[FTRegionSupport .cxx_destruct]
  -[FTRegionSupport regions]
  -[FTRegionSupport startLoading]
  -[FTRegionSupport setRegions:]
  -[FTRegionSupport regionForID:]
  -[FTRegionSupport _buildMessageDeliveryIfNeeded]
  -[FTRegionSupport flushRegions]
  -[FTRegionSupport setDelivery:]


FTGetRegionMetadataMessage : IDSBaseMessage <NSCopying>
 @property  NSString *language
 @property  NSDictionary *responseRegionInformation

  // instance methods
  -[FTGetRegionMetadataMessage command]
  -[FTGetRegionMetadataMessage setLanguage:]
  -[FTGetRegionMetadataMessage handleResponseDictionary:]
  -[FTGetRegionMetadataMessage bagKey]
  -[FTGetRegionMetadataMessage .cxx_destruct]
  -[FTGetRegionMetadataMessage wantsBinaryPush]
  -[FTGetRegionMetadataMessage copyWithZone:]
  -[FTGetRegionMetadataMessage language]
  -[FTGetRegionMetadataMessage messageBody]
  -[FTGetRegionMetadataMessage wantsCompressedBody]
  -[FTGetRegionMetadataMessage responseCommand]
  -[FTGetRegionMetadataMessage init]
  -[FTGetRegionMetadataMessage requiredKeys]
  -[FTGetRegionMetadataMessage wantsHTTPHeaders]
  -[FTGetRegionMetadataMessage wantsHTTPGet]
  -[FTGetRegionMetadataMessage wantsBagKey]
  -[FTGetRegionMetadataMessage responseRegionInformation]
  -[FTGetRegionMetadataMessage setResponseRegionInformation:]


_FTPasswordManagerCachedAuthTokenInfo : NSObject
 @property  NSString *profileID
 @property  NSString *selfID
 @property  NSString *token
 @property  NSDictionary *alertInfo
 @property  NSNumber *status

  // instance methods
  -[_FTPasswordManagerCachedAuthTokenInfo token]
  -[_FTPasswordManagerCachedAuthTokenInfo status]
  -[_FTPasswordManagerCachedAuthTokenInfo setStatus:]
  -[_FTPasswordManagerCachedAuthTokenInfo .cxx_destruct]
  -[_FTPasswordManagerCachedAuthTokenInfo profileID]
  -[_FTPasswordManagerCachedAuthTokenInfo setToken:]
  -[_FTPasswordManagerCachedAuthTokenInfo setProfileID:]
  -[_FTPasswordManagerCachedAuthTokenInfo selfID]
  -[_FTPasswordManagerCachedAuthTokenInfo setSelfID:]
  -[_FTPasswordManagerCachedAuthTokenInfo alertInfo]
  -[_FTPasswordManagerCachedAuthTokenInfo setAlertInfo:]


FTPasswordManager : NSObject <ACMonitoredAccountStoreDelegateProtocol, FTPasswordManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FTPasswordManager sharedInstance]
  +[FTPasswordManager _loginUserNotificationForService:user:isForBadPassword:showForgetPassword:shouldRememberPassword:]

  // instance methods
  -[FTPasswordManager isAuthTokenReceiptTime:withinGracePeriod:]
  -[FTPasswordManager requestAuthTokenForProfileID:username:service:badPassword:showForgotPassword:failIfNotSilent:outRequestID:completionBlock:]
  -[FTPasswordManager _accountWithUsername:inStore:]
  -[FTPasswordManager _findIDSAccountInStore:withCriteria:]
  -[FTPasswordManager requestAuthTokenForProfileID:username:service:badPassword:showForgotPassword:forceRenewal:failIfNotSilent:outRequestID:completionBlock:]
  -[FTPasswordManager profileIDForACAccount:]
  -[FTPasswordManager cancelRequestID:serviceIdentifier:]
  -[FTPasswordManager _accountWithProfileID:username:inStore:]
  -[FTPasswordManager _profileIDForUsername:inStore:]
  -[FTPasswordManager setPasswordForProfileID:username:service:password:outRequestID:completionBlock:]
  -[FTPasswordManager setHandlesForProfileID:username:service:handles:]
  -[FTPasswordManager supportsAuthTokenRequests]
  -[FTPasswordManager _accountBasedOnProfileID:orUsername:inStore:]
  -[FTPasswordManager setAuthTokenForProfileID:username:service:authToken:selfHandle:accountStatus:outRequestID:completionBlock:]
  -[FTPasswordManager _setKeychainAuthToken:forUsername:service:]
  -[FTPasswordManager performCleanUpWithCompletion:]
  -[FTPasswordManager cleanUpAccountsBasedOnInUseUsernamesBlock:profileIDBlock:completionBlock:]
  -[FTPasswordManager .cxx_destruct]
  -[FTPasswordManager _gameCenterAccountWithUsername:]
  -[FTPasswordManager fetchPasswordForProfileID:username:service:outRequestID:completionBlock:]
  -[FTPasswordManager _findIDSAccountsInStore:withCriteria:]
  -[FTPasswordManager authTokenGracePeriod]
  -[FTPasswordManager _keychainAuthTokenForUsername:service:]
  -[FTPasswordManager requestAuthTokenForProfileID:username:service:badPassword:showForgotPassword:outRequestID:completionBlock:]
  -[FTPasswordManager accountWasRemoved:]
  -[FTPasswordManager _findAccountOfType:InStore:withCriteria:]
  -[FTPasswordManager initWithUserNotificationCenter:]
  -[FTPasswordManager fetchAuthTokenForProfileID:username:service:outRequestID:completionBlock:]
  -[FTPasswordManager removeAuthTokenAllowingGracePeriodForProfileID:username:]
  -[FTPasswordManager updatePreviousUsername:toNewUsername:]
  -[FTPasswordManager gameCenterPropertiesFromAccountWithUsername:]
  -[FTPasswordManager _keychainPasswordForUsername:service:]
  -[FTPasswordManager setAuthTokenForProfileID:username:service:authToken:selfHandle:outRequestID:completionBlock:]
  -[FTPasswordManager _accountWithProfileIDMatchingUser:inStore:]
  -[FTPasswordManager accountCredentialChanged:]
  -[FTPasswordManager _accountWithUsernameAlias:inStore:]
  -[FTPasswordManager _accountOptionsDictForRenewCredentialsForService:username:shouldFailIfNotSilent:]
  -[FTPasswordManager requestPasswordForUsername:service:badPassword:showForgotPassword:shouldRememberPassword:outRequestID:completionBlock:]
  -[FTPasswordManager _shouldForceSilentOnlyAuthForUsername:serviceIdentifier:]
  -[FTPasswordManager _updateStatus:onAccount:]
  -[FTPasswordManager _usernameHasCorrespondingIdMSAccount:]
  -[FTPasswordManager _setKeychainPassword:forUsername:service:]
  -[FTPasswordManager _renewCredentialsIfPossibleForAccount:username:inServiceIdentifier:originalInServiceIdentifier:serviceName:failIfNotSilent:renewHandler:shortCircuitCompletionBlock:]
  -[FTPasswordManager setAccountStatus:forProfileID:username:service:]
  -[FTPasswordManager cleanUpAccountsWithUsername:orProfileID:basedOnInUseUsernames:profileIDs:completionBlock:]
  -[FTPasswordManager _findGameCenterAccountInStore:withCriteria:]
  -[FTPasswordManager acAccountWithProfileID:username:accountStore:]
  -[FTPasswordManager init]


FTURLRequestMessage : FTIDSMessage <NSCopying>
 @property  unsigned long requestType
 @property  NSURL *requestURL
 @property  NSDictionary *requestHeaders
 @property  NSDictionary *requestStringParams
 @property  NSData *requestBody
 @property  NSDictionary *responseHeaders
 @property  NSData *responseBody
 @property  NSNumber *responseStatusCode
 @property  NSDictionary *timingData

  // instance methods
  -[FTURLRequestMessage responseStatusCode]
  -[FTURLRequestMessage setResponseHeaders:]
  -[FTURLRequestMessage setResponseBody:]
  -[FTURLRequestMessage handleResponseHeaders:]
  -[FTURLRequestMessage responseHeaders]
  -[FTURLRequestMessage isIDSMessage]
  -[FTURLRequestMessage requestType]
  -[FTURLRequestMessage .cxx_destruct]
  -[FTURLRequestMessage requestURL]
  -[FTURLRequestMessage setRequestType:]
  -[FTURLRequestMessage setTimingData:]
  -[FTURLRequestMessage timingData]
  -[FTURLRequestMessage setRequestURL:]
  -[FTURLRequestMessage copyWithZone:]
  -[FTURLRequestMessage responseBody]
  -[FTURLRequestMessage requestBody]
  -[FTURLRequestMessage initWithURL:type:headers:stringParams:body:]
  -[FTURLRequestMessage wantsIDSServer]
  -[FTURLRequestMessage wantsHTTPGet]
  -[FTURLRequestMessage allowDualDelivery]
  -[FTURLRequestMessage wantsManagedRetries]
  -[FTURLRequestMessage wantsBodySignature]
  -[FTURLRequestMessage wantsIDSSignatures]
  -[FTURLRequestMessage messageBodyDataOverride]
  -[FTURLRequestMessage additionalMessageHeaders]
  -[FTURLRequestMessage additionalQueryStringParameters]
  -[FTURLRequestMessage handleResponseBody:]
  -[FTURLRequestMessage handleResponseStatus:]
  -[FTURLRequestMessage requestHeaders]
  -[FTURLRequestMessage setRequestHeaders:]
  -[FTURLRequestMessage requestStringParams]
  -[FTURLRequestMessage setRequestStringParams:]
  -[FTURLRequestMessage setRequestBody:]
  -[FTURLRequestMessage setResponseStatusCode:]


(FTAPSOutgoingMessage_Additions)
	// instance methods
	-[(FTAPSOutgoingMessage_Additions) _URIsFromIDs]
	-[(FTAPSOutgoingMessage_Additions) _IDsFromURIs]
	-[(FTAPSOutgoingMessage_Additions) _FTFilteredArrayForAPS]

(FTAPSOutgoingMessage_Additions)
	// instance methods
	-[(FTAPSOutgoingMessage_Additions) _FTFilteredDictionaryForAPS]

(FaceTimeStringAdditions)
	// instance methods
	-[(FaceTimeStringAdditions) _FTDataFromHexString]
	-[(FaceTimeStringAdditions) _FTDataFromBase64String]

(CompressionAdditions)
	// instance methods
	-[(CompressionAdditions) _FTStringFromBaseData]
	-[(CompressionAdditions) _FTCopyOptionallyGzippedData]
	-[(CompressionAdditions) _FTCopyGzippedData]

IDSRemoteURLConnection(FTMessageDelivery_HTTP)
IMMobileNetworkManager(FTMessageDelivery_HTTP)
01 00 0700 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTMessageCenter 
01 00 0400 /System/Library/PrivateFrameworks/CommonUtilities.framework/CommonUtilities: CUTDeferredTaskQueue 
01 00 0700 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSBaseMessage 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSCTAdapter 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSCommandNiceGroupSessionRTCMetric 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSCoreAnalyticsLogger 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSDeliveryContext 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSGameCenterData 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSRTCLogger 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSRegistrationRenewCredentialsCompletedMetric 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSRemoteURLConnection 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSSOSLogger 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSSOSMetric 
01 00 0300 /System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation: IDSServerBag 
01 00 0100 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMDeviceSupport 
01 00 0100 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMIDSLog 
01 00 0100 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMLockdownManager 
01 00 0100 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMMobileNetworkManager 
01 00 0100 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMRGLog 
01 00 0100 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMTimer 
01 00 0100 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserNotification 
01 00 0100 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMUserNotificationCenter 
01 00 0100 /System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation: IMWeakReference 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSHTTPURLResponse 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0e00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
