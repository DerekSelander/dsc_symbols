|| __DATA.__data _SOSD_CONNECTION_REQUEST_NOTIFICATION_NAME
|| __DATA.__objc_data _OBJC_CLASS_$_SOSCoreAnalyticsReporter
|| __DATA.__objc_data _OBJC_CLASS_$_SOSEmergencyCallVoiceLoopManager
|| __DATA.__objc_data _OBJC_CLASS_$_SOSFlow
|| __DATA.__objc_data _OBJC_CLASS_$_SOSFlowManager
|| __DATA.__objc_data _OBJC_CLASS_$_SOSInCallUILauncher
|| __DATA.__objc_data _OBJC_CLASS_$_SOSKappaStatus
|| __DATA.__objc_data _OBJC_CLASS_$_SOSLegacyContactsManager
|| __DATA.__objc_data _OBJC_CLASS_$_SOSStatusReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSCoreAnalyticsReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSEmergencyCallVoiceLoopManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSFlow
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSFlowManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSInCallUILauncher
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSKappaStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSLegacyContactsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_SOSStatusReporter
|| __DATA_CONST.__const _SOSAutomaticCallCountdownEnabledKey
|| __DATA_CONST.__const _SOSCallWithSideButtonPressesKey
|| __DATA_CONST.__const _SOSCallWithVolumeLockHoldKey
|| __DATA_CONST.__const _SOSContactsChangedNotification
|| __DATA_CONST.__const _SOSDismissSOSNotification
|| __DATA_CONST.__const _SOSFlowWillStartNotification
|| __DATA_CONST.__const _SOSFriendsChangedNotification
|| __DATA_CONST.__const _SOSHasActiveTriggerChangedNotification
|| __DATA_CONST.__const _SOSHasActiveTriggerValueKey
|| __DATA_CONST.__const _SOSInCallURLLaunchReasonKey
|| __DATA_CONST.__const _SOSInCallURLLaunchScheme
|| __DATA_CONST.__const _SOSInteractiveStateChangedNotification
|| __DATA_CONST.__const _SOSKappaStateChangedNotification
|| __DATA_CONST.__const _SOSLegacyContactsChangedNotification
|| __DATA_CONST.__const _SOSMachService
|| __DATA_CONST.__const _SOSManagerErrorDomain
|| __DATA_CONST.__const _SOSMandrakeStateChangedNotification
|| __DATA_CONST.__const _SOSMostRecentLocationSentChangedNotification
|| __DATA_CONST.__const _SOSNewtonStateChangedNotification
|| __DATA_CONST.__const _SOSPlayAudioDuringCountdownKey
|| __DATA_CONST.__const _SOSRemoteAlertActivationContextUserInfoRequestURLStringKey
|| __DATA_CONST.__const _SOSRemoteAlertActivationReasonActivatingForSOSWithClicks
|| __DATA_CONST.__const _SOSRemoteAlertActivationReasonActivatingForSOSWithKappa
|| __DATA_CONST.__const _SOSRemoteAlertActivationReasonActivatingForSOSWithVolumeLockHold
|| __DATA_CONST.__const _SOSRemoteAlertActivationReasonActivatingForScreenTime
|| __DATA_CONST.__const _SOSSendingLocationUpdateChangedNotification
|| __DATA_CONST.__const _SOSSendingLocationUpdateValueKey
|| __DATA_CONST.__const _SOSSettingsResetFollowUpStateChangedNotification
|| __DATA_CONST.__const _SOSSettingsURLBaseString
|| __DATA_CONST.__const _SOSSettingsURLSourceAccCallNotification
|| __DATA_CONST.__const _SOSSettingsURLSourceKey
|| __DATA_CONST.__const _SOSSettingsURLSourceSettingsResetFollowUp
|| __DATA_CONST.__const _SOSStatusMachService
|| __DATA_CONST.__const _SOSTriggerMechanismChangedNotification
|| __DATA_CONST.__const _SOSTriggerMechanismKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOSContact
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOSContactsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOSEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOSKappaManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOSManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOSNewtonManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOSPersistentTimerLocationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOSStatus
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SOSUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOSContact
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOSContactsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOSEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOSKappaManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOSManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOSNewtonManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOSPersistentTimerLocationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOSStatus
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SOSUtilities
|| __TEXT.__text _SOSClientInterface
|| __TEXT.__text _SOSServerInterface
|| __TEXT.__text _SOSStatusManagerClientInterface
|| __TEXT.__text _SOSStatusManagerServerInterface
|| __TEXT.__text _SOSStringForSOSFlowState
|| __TEXT.__text _SOSStringForSOSProgression
|| __TEXT.__text _SOSStringForSOSResolution
|| __TEXT.__text _SOSStringForSOSTriggerMechanism
|| __TEXT.__text _sosFlowEventDescription
|| __TEXT.__text _sosFlowStateDescription
|| __TEXT.__text _sosFlowTypeDescription
__ AVFAudio: _AVAudioSessionCategoryPlayback
__ AVFAudio: _OBJC_CLASS_$_AVAudioSession
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesisVoice
__ AVFAudio: _OBJC_CLASS_$_AVSpeechSynthesizer
__ AVFAudio: _OBJC_CLASS_$_AVSpeechUtterance
__ AccessibilityUtilities: _OBJC_CLASS_$_AXSettings
__ AppSupport: _CPPhoneNumberCopyNetworkCountryCode
__ AssertionServices: _BKSApplicationStateAll
__ AssertionServices: _BKSApplicationStateDisplayIDKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ ChatKit: _OBJC_CLASS_$_CKSOSMessage
__ ChatKit: _OBJC_CLASS_$_CKSOSUtilities
__ CommonUtilities: _CUTWeakLinkClass
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPhoneticFamilyNameKey
__ Contacts: _CNContactPhoneticGivenNameKey
__ Contacts: _CNContactPhoneticMiddleNameKey
__ Contacts: _CNContactPhoneticOrganizationNameKey
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleCopyLocalizedStringForLocalization
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreLocation: _OBJC_CLASS_$_CLEmergencyEnablementAssertion
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _kCLLocationAccuracyBest
__ CoreLocation: _kCLLocationIntegrityHigh
__ CoreLocation: _kCLLocationIntegrityMedium
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreTelephony: __CTServerConnectionAddIdentifierException
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionIsEmergencyNumber
__ CoreTelephony: _kCTSIMSupportSIMStatusNotInserted
__ Foundation: _NSLog
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ FriendKit: _OBJC_CLASS_$_FKFriendsManager
__ FriendKit: _OBJC_CLASS_$_FKPerson
__ HealthKit: _OBJC_CLASS_$_HKHealthStore
__ HealthKit: _OBJC_CLASS_$_HKMedicalIDStore
__ HealthKit: _kHKHealthSettingsShowMedicalIDOnWatchKey
__ HealthKit: _kHKHealthdBundleIdentifier
__ HealthKit: _kHKMedicalIDEmergencyContactsDidChangeNotification
__ IDS: _IDSSendMessageOptionExpectsPeerResponseKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSService
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MapKit: _OBJC_CLASS_$__MKLocationShifter
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRDevicePropertyIsAltAccount
__ NanoRegistry: _NRDevicePropertyIsArchived
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ OnBoardingKit: _OBJC_CLASS_$_OBPrivacyPresenter
__ OnBoardingKit: _OBPrivacyEmergencySOSIdentifier
__ PersistentConnection: _OBJC_CLASS_$_PCPersistentTimer
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ QuartzCore: _OBJC_CLASS_$_CAKeyframeAnimation
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAAnimationDiscrete
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ SoftLinking: __sl_dlopen
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertActivationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertHandle
__ TCC: _TCCAccessCopyBundleIdentifiersForService
__ TCC: _TCCAccessCopyInformation
__ TCC: _TCCAccessSetForBundle
__ TCC: _kTCCInfoBundle
__ TCC: _kTCCInfoGranted
__ TCC: _kTCCServiceCrashDetection
__ TelephonyUtilities: _OBJC_CLASS_$_TUCallCenter
__ TelephonyUtilities: _TUCallCenterCallStatusChangedNotification
__ TelephonyUtilities: _TUInCallRemoteAlertViewControllerClassName
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$__UICAPackageView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIRectGetCenter
__ VoiceTrigger: _OBJC_CLASS_$_VTStateManager
__ WirelessDiagnostics: _AWDPostMetric
__ libAWDSupportFramework.dylib: _OBJC_CLASS_$_AWDSOSAutomaticCallCountdownEnabled
__ libAWDSupportFramework.dylib: _OBJC_CLASS_$_AWDSOSShouldPlayAudioDuringCountdown
__ libAccessibility.dylib: __AXSSetTripleClickOptions
__ libAccessibility.dylib: __AXSTripleClickCopyOptions
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGIsDeviceOneOfType
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_ui
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SOSContactsManager : NSObject
 @property  HKHealthStore *healthStore
 @property  NSObject<OS_dispatch_semaphore> *medicalIDContactsInitialStateSemaphore
 @property  NSArray *medicalIDEmergencyContacts
 @property  {_opaque_pthread_mutex_t=q[56c]} medicalIDEmergencyContactsMutex
 @property  BOOL SOSContactsExist
 @property  SOSLegacyContactsManager *legacyContactsManager

  // class methods
  +[SOSContactsManager preloadContactStoreIfNecessary]
  +[SOSContactsManager authorizedToUseContactStore]
  +[SOSContactsManager contactStore]

  // instance methods
  -[SOSContactsManager healthStore]
  -[SOSContactsManager SOSContactDestinations]
  -[SOSContactsManager fetchMedicalIDEmergencyContacts]
  -[SOSContactsManager setHealthStore:]
  -[SOSContactsManager _userDefaults]
  -[SOSContactsManager _medicalIDEmergencyContactsWithCompletion:]
  -[SOSContactsManager setMedicalIDEmergencyContactsMutex:]
  -[SOSContactsManager dealloc]
  -[SOSContactsManager .cxx_destruct]
  -[SOSContactsManager _waitForMedicalIDInitialState]
  -[SOSContactsManager _medicalContactsDidChange]
  -[SOSContactsManager setMedicalIDContactsInitialStateSemaphore:]
  -[SOSContactsManager medicalIDContactsInitialStateSemaphore]
  -[SOSContactsManager _isEmergencyNumber:]
  -[SOSContactsManager initWithHealthStore:]
  -[SOSContactsManager medicalIDEmergencyContactsMutex]
  -[SOSContactsManager phoneNumbersToMessage]
  -[SOSContactsManager SOSContactsExist]
  -[SOSContactsManager medicalIDEmergencyContacts]
  -[SOSContactsManager legacyContactsManager]
  -[SOSContactsManager SOSContactsWithTimeout:andCompletion:]
  -[SOSContactsManager setMedicalIDEmergencyContacts:]
  -[SOSContactsManager init]
  -[SOSContactsManager hasValidContactsToMessage]


SOSLegacyContactsManager : NSObject
 @property  FKFriendsManager *friendsManager
 @property  BOOL SOSLegacyContactsExist

  // class methods
  +[SOSLegacyContactsManager preloadContactStoreIfNecessary]
  +[SOSLegacyContactsManager authorizedToUseContactStore]
  +[SOSLegacyContactsManager contactStore]

  // instance methods
  -[SOSLegacyContactsManager friendsManager]
  -[SOSLegacyContactsManager setFriendsManager:]
  -[SOSLegacyContactsManager dealloc]
  -[SOSLegacyContactsManager .cxx_destruct]
  -[SOSLegacyContactsManager contactStoreDidChange]
  -[SOSLegacyContactsManager init]
  -[SOSLegacyContactsManager SOSLegacyContacts]
  -[SOSLegacyContactsManager SOSLegacyContactsExist]
  -[SOSLegacyContactsManager _SOSFriends]
  -[SOSLegacyContactsManager SOSLegacyContactsDestinations]
  -[SOSLegacyContactsManager _SOSDestinationsForFriend:]
  -[SOSLegacyContactsManager _SOSFormattedDestinationForFriend:withDestinationNumber:]
  -[SOSLegacyContactsManager _contactFromFriend:]


SOSUtilities : NSObject
  // class methods
  +[SOSUtilities _isInternalDevice]
  +[SOSUtilities crashDetectionWristDetectionWarningDescription]
  +[SOSUtilities fetchSOSStatusWithKey:]
  +[SOSUtilities isDeviceD2xOrNewer]
  +[SOSUtilities _setSOSPrefsValue:forKey:]
  +[SOSUtilities hasMultiPressResetLogicRun]
  +[SOSUtilities setCanTriggerSOSWithSideButton:presentErrorAlertOnViewController:completion:]
  +[SOSUtilities currentDeviceSOSStatus]
  +[SOSUtilities setAllowedToMessageSOSContacts:]
  +[SOSUtilities crashDetectionFooterLinkDescription]
  +[SOSUtilities isSmallScreen]
  +[SOSUtilities activeDeviceSupportsNewtonWorkoutsOnly]
  +[SOSUtilities setNewtonTriggersEmergencySOS:isWristDetectionEnabled:newtonEligibility:confirmationDelegate:completion:]
  +[SOSUtilities fivePressesSelectionTitleDescription]
  +[SOSUtilities isKappaDetectionSupportedOnActiveWatch]
  +[SOSUtilities _copySOSPrefsValueForKey:]
  +[SOSUtilities activeDevice]
  +[SOSUtilities shouldSkipNewtonCall]
  +[SOSUtilities mostRecentlyUsedSOSTriggerMechanism]
  +[SOSUtilities countdownSoundFooterDescription]
  +[SOSUtilities emergencyContactsEditDescription]
  +[SOSUtilities newtonTriggersEmergencySOS]
  +[SOSUtilities longPressTriggersMandrake]
  +[SOSUtilities crashDetectionThirdPartyFooterDescription]
  +[SOSUtilities _SOSDomainAccessor]
  +[SOSUtilities callWithPressesFooterDescription]
  +[SOSUtilities openEmergencyContactsFooterLinkOnViewController:]
  +[SOSUtilities phoneTriggerAnimationFooterDescription]
  +[SOSUtilities setKappaTriggersEmergencySOS:]
  +[SOSUtilities setKappaTriggersEmergencySOS:isWristDetectionEnabled:confirmationDelegate:completion:]
  +[SOSUtilities SOSProgressionForString:]
  +[SOSUtilities setHasMultiPressResetLogicRun:]
  +[SOSUtilities pressSelectionGroupTitleDescription]
  +[SOSUtilities settingsResetFollowUpTitle]
  +[SOSUtilities shouldAllowSOSStatusReset]
  +[SOSUtilities defaultSOSTriggerMechanism]
  +[SOSUtilities hasActiveSIMForClient:]
  +[SOSUtilities isIndiaSKU]
  +[SOSUtilities longPressTriggersEmergencySOS]
  +[SOSUtilities settingsResetFollowUpRedirectActionTitle]
  +[SOSUtilities getShortSOSNotificationDisplayTimestamp]
  +[SOSUtilities callWithHoldTitleDescription]
  +[SOSUtilities pairedDeviceSOSStatus]
  +[SOSUtilities setPlayAudioDuringCountdown:]
  +[SOSUtilities SOSResolutionForString:]
  +[SOSUtilities setNumberOfSideButtonPresses:]
  +[SOSUtilities setLongPressTriggersEmergencySOS:]
  +[SOSUtilities newtonTriggersEmergencySOSNumber]
  +[SOSUtilities crashDetectionTitleDescription]
  +[SOSUtilities canTriggerSOSWithSideButton]
  +[SOSUtilities fallDetectionFooterDescription]
  +[SOSUtilities setPairedDeviceSOSStatus:]
  +[SOSUtilities isKappaVisible]
  +[SOSUtilities crashDetectionPhoneFooterDesription]
  +[SOSUtilities crashDetectionFooterLinkURL]
  +[SOSUtilities isActivePairedDeviceTinker]
  +[SOSUtilities accidentalCallNotificationBody]
  +[SOSUtilities _setKappaTriggersEmergencySOSTinker:]
  +[SOSUtilities countdownSoundTitleDescription]
  +[SOSUtilities setCallWithVolumeLockHoldEnabled:]
  +[SOSUtilities SOSTriggerClickCount]
  +[SOSUtilities autoCallFooterDescription]
  +[SOSUtilities autoCallRequiresSIM]
  +[SOSUtilities setNewtonTriggersEmergencySOS:newtonTriggersEmergencySOSWorkoutsOnly:]
  +[SOSUtilities _hasAccessibilityConflict]
  +[SOSUtilities setKappaThirdPartyActiveApp:presentConfirmationOnViewController:completion:]
  +[SOSUtilities callWithSideButtonTitleDescription]
  +[SOSUtilities fallDetectionOnlyDuringWorkoutsTitleDescription]
  +[SOSUtilities setNewtonTriggersEmergencySOSNumber:]
  +[SOSUtilities crashDetectionWatchFooterDescription]
  +[SOSUtilities shouldBlockNonEmergencyCalls]
  +[SOSUtilities settingsResetFollowUpClearActionTitle]
  +[SOSUtilities _setKappaTriggersEmergencySOS:]
  +[SOSUtilities accidentalCallNotificationTitle]
  +[SOSUtilities callWithSideButtonFooterDescription]
  +[SOSUtilities defaultToWorkoutsOnlyForEligibility:]
  +[SOSUtilities deviceHasHomeButton]
  +[SOSUtilities watchTriggerAnimationFooterDescription]
  +[SOSUtilities isAllowedToMessageSOSContacts]
  +[SOSUtilities deviceHasSlot]
  +[SOSUtilities setSOSStatus:withKey:]
  +[SOSUtilities phoneAssetName]
  +[SOSUtilities getAssetViewForPhoneWithCompletion:]
  +[SOSUtilities setLongPressTriggersMandrake:]
  +[SOSUtilities settingsResetFollowUpBody]
  +[SOSUtilities SOSTriggerMechanismForString:]
  +[SOSUtilities getSettingsResetFollowUpState]
  +[SOSUtilities setNewtonTriggersEmergencySOSWorkouts:]
  +[SOSUtilities _potentialForAccessibilityConflict]
  +[SOSUtilities crashDetectionThirdPartyStopSharingDescription]
  +[SOSUtilities callWithPressesTitleDescription]
  +[SOSUtilities emergencyContactsSectionDescription]
  +[SOSUtilities currentSOSTriggerMechanism]
  +[SOSUtilities _isCarryDevice]
  +[SOSUtilities holdSideButtonTitleDescription]
  +[SOSUtilities fallDetectionTitleDescription]
  +[SOSUtilities presentConfirmationOnViewController:title:message:cancelTitle:cancelHandler:confirmTitle:confirmHandler:]
  +[SOSUtilities _userSOSDefaults]
  +[SOSUtilities SOSSelectableTriggerMechanismCapability]
  +[SOSUtilities hasEmergencyContacts]
  +[SOSUtilities autoCallTitleDescription]
  +[SOSUtilities setShouldPlayAudioDuringCountdown:]
  +[SOSUtilities automaticDialingSectionDescription]
  +[SOSUtilities getAssetViewForWatchWithCrownOrientationOnRightSide:layoutLeftToRight:tintColor:]
  +[SOSUtilities shouldForceDisableAutoCallForClient:]
  +[SOSUtilities shouldSilenceSOSFlow]
  +[SOSUtilities SOSFlowStateForString:]
  +[SOSUtilities setShortSOSNotificationDisplayTimestamp]
  +[SOSUtilities isKappaDetectionSupportedOnPhone]
  +[SOSUtilities setCallWithSideButtonPressesEnabled:]
  +[SOSUtilities crashDetectionThirdPartyDescription]
  +[SOSUtilities isKappaUnmasked]
  +[SOSUtilities callWithHoldFooterDescription]
  +[SOSUtilities newtonAlwaysOnRequiresConfirmationForEligibility:]
  +[SOSUtilities setNewtonTriggersEmergencySOS:]
  +[SOSUtilities sosLocationBundle]
  +[SOSUtilities setKappaTriggersEmergencySOS:confirmationDelegate:completion:]
  +[SOSUtilities setNewtonTriggersEmergencySOS:isWristDetectionEnabled:doesNewtonRequireConfirmation:presentConfirmationOnViewController:completion:]
  +[SOSUtilities activeDeviceSupportsNewton]
  +[SOSUtilities setCurrentSOSTriggerMechanism:]
  +[SOSUtilities fallDetectionAlwaysOnTitleDescription]
  +[SOSUtilities _synchronizeSOSPrefs]
  +[SOSUtilities mustAllowThreeClickTrigger]
  +[SOSUtilities isCallWithVolumeLockHoldEnabled]
  +[SOSUtilities holdSideButtonFooterDescription]
  +[SOSUtilities crashDetectionPhoneWatchFooterDescription]
  +[SOSUtilities _userFriendsDomainAccessor]
  +[SOSUtilities watchAssetNameWithCrownOrientationOnRightSide:layoutLeftToRight:]
  +[SOSUtilities getKappaThirdPartyActiveAppBundle]
  +[SOSUtilities canTriggerSOSWithVolumeLockHold]
  +[SOSUtilities emergencyContactsFooterDescription]
  +[SOSUtilities isCallWithSideButtonPressesEnabled]
  +[SOSUtilities kappaTriggersEmergencySOSTinker]
  +[SOSUtilities crashDetectionSwitchDescription]
  +[SOSUtilities emergencyContactsFooterLinkTitle]
  +[SOSUtilities crashDetectionThirdPartyAppWithAccessDescription]
  +[SOSUtilities isKappaDetectionSupportedOnCurrentDevice]
  +[SOSUtilities setAutomaticCallCountdownEnabled:]
  +[SOSUtilities setCallWithSideButtonPresses:presentErrorAlertOnViewController:completion:]
  +[SOSUtilities isAutomaticCallCountdownEnabled]
  +[SOSUtilities hasNewtonTriggersEmergencySOSWorkoutsSetting]
  +[SOSUtilities newtonTriggersEmergencySOSWorkouts]
  +[SOSUtilities crashDetectionThirdPartyShareDisableDescription]
  +[SOSUtilities activeDeviceSupportsMandrake]
  +[SOSUtilities threePressesSelectionTitleDescription]
  +[SOSUtilities setCurrentDeviceSOSStatus:]
  +[SOSUtilities setNewtonTriggersEmergencySOSWorkoutsOnly:isWristDetectionEnabled:newtonEligibility:confirmationDelegate:completion:]
  +[SOSUtilities shouldPlayAudioDuringCountdown]
  +[SOSUtilities supportsSOSWithSideButtonSelectableNumberOfClicks]
  +[SOSUtilities mostRecentSOSStatus]
  +[SOSUtilities kappaTriggersEmergencySOS]
  +[SOSUtilities getKappaThirdPartyDisplayNameForApp]
  +[SOSUtilities SOSTriggerMechanismForClickCount:]
  +[SOSUtilities setSettingsResetFollowUpState:]


SOSFlowManager : NSObject <SOSFlowObserver, SOSFlowManagerCoexProtocol>
 @property  SOSFlow *activeSOSFlow
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSFlowManager sharedInstance]

  // instance methods
  -[SOSFlowManager .cxx_destruct]
  -[SOSFlowManager _init]
  -[SOSFlowManager init]
  -[SOSFlowManager sosFlow:didChangeToState:]
  -[SOSFlowManager sosFlow:willHandleEvent:withMetaData:]
  -[SOSFlowManager kappaWasRequested]
  -[SOSFlowManager emergencyCallInitiated]
  -[SOSFlowManager startSOSFlowWithTriggerMechanism:]
  -[SOSFlowManager startFreshSOSFlowWithTriggerMechanism:]
  -[SOSFlowManager activeSOSFlow]
  -[SOSFlowManager setActiveSOSFlow:]


SOSMessagingStatus : PBCodable <NSCopying>
 @property  SOSStatus *sosStatus
 @property  BOOL hasUuid
 @property  NSString *uuid
 @property  BOOL hasTrigger
 @property  int trigger
 @property  BOOL hasTimeOfDetection
 @property  double timeOfDetection
 @property  BOOL hasTimeOfResolution
 @property  double timeOfResolution
 @property  BOOL hasResolution
 @property  int resolution
 @property  BOOL hasFlowState
 @property  int flowState
 @property  BOOL hasIsPairedDeviceStatus
 @property  BOOL isPairedDeviceStatus

  // instance methods
  -[SOSMessagingStatus copyTo:]
  -[SOSMessagingStatus setResolution:]
  -[SOSMessagingStatus uuid]
  -[SOSMessagingStatus trigger]
  -[SOSMessagingStatus hasUuid]
  -[SOSMessagingStatus .cxx_destruct]
  -[SOSMessagingStatus setUuid:]
  -[SOSMessagingStatus setTrigger:]
  -[SOSMessagingStatus resolution]
  -[SOSMessagingStatus mergeFrom:]
  -[SOSMessagingStatus dictionaryRepresentation]
  -[SOSMessagingStatus copyWithZone:]
  -[SOSMessagingStatus readFrom:]
  -[SOSMessagingStatus writeTo:]
  -[SOSMessagingStatus isEqual:]
  -[SOSMessagingStatus setHasTrigger:]
  -[SOSMessagingStatus hasTrigger]
  -[SOSMessagingStatus hasFlowState]
  -[SOSMessagingStatus flowState]
  -[SOSMessagingStatus setFlowState:]
  -[SOSMessagingStatus setHasFlowState:]
  -[SOSMessagingStatus hasResolution]
  -[SOSMessagingStatus setHasResolution:]
  -[SOSMessagingStatus setTimeOfDetection:]
  -[SOSMessagingStatus setHasTimeOfDetection:]
  -[SOSMessagingStatus hasTimeOfDetection]
  -[SOSMessagingStatus setTimeOfResolution:]
  -[SOSMessagingStatus setHasTimeOfResolution:]
  -[SOSMessagingStatus hasTimeOfResolution]
  -[SOSMessagingStatus setIsPairedDeviceStatus:]
  -[SOSMessagingStatus setHasIsPairedDeviceStatus:]
  -[SOSMessagingStatus hasIsPairedDeviceStatus]
  -[SOSMessagingStatus timeOfDetection]
  -[SOSMessagingStatus timeOfResolution]
  -[SOSMessagingStatus isPairedDeviceStatus]
  -[SOSMessagingStatus initWithSOSStatus:]
  -[SOSMessagingStatus sosStatus]


SOSFlow : NSObject
 @property  NSUserDefaults *healthUserDefaults
 @property  HKHealthStore *healthStore
 @property  _HKMedicalIDData *medicalIDData
 @property  long long sosFlowTrigger
 @property  unsigned long sosFlowType
 @property  long long currentState
 @property  NSHashTable *observers
 @property  BOOL isUserResponsive
 @property  BOOL shouldIgnoreMotionCancel
 @property  BOOL didSeeUnresponsiveResting
 @property  NSTimer *flowStateHeartbeatTimer
 @property  <SOSCoreAnalyticsReporting> *coreAnalyticsReporter

  // class methods
  +[SOSFlow isTerminalState:]
  +[SOSFlow isInterruptibleState:]
  +[SOSFlow isPreCallState:]
  +[SOSFlow sosFlowTypeForTriggerMechanism:]
  +[SOSFlow needsHeartbeatForState:]
  +[SOSFlow validEventsforState:]
  +[SOSFlow isTriggerMechanismUserInitiated:]
  +[SOSFlow sosFlowStateForString:]

  // instance methods
  -[SOSFlow updateState:]
  -[SOSFlow setCurrentState:]
  -[SOSFlow healthStore]
  -[SOSFlow _invalidateTimer]
  -[SOSFlow setHealthStore:]
  -[SOSFlow setCoreAnalyticsReporter:]
  -[SOSFlow addObserver:]
  -[SOSFlow setMedicalIDData:]
  -[SOSFlow .cxx_destruct]
  -[SOSFlow setObservers:]
  -[SOSFlow medicalIDData]
  -[SOSFlow currentState]
  -[SOSFlow removeObserver:]
  -[SOSFlow timerFired:]
  -[SOSFlow coreAnalyticsReporter]
  -[SOSFlow observers]
  -[SOSFlow restingState]
  -[SOSFlow initWithTriggerMechanism:healthStore:]
  -[SOSFlow handleSOSFlowEvent:withMetaData:]
  -[SOSFlow eventTriggered]
  -[SOSFlow startAnomalyFlow]
  -[SOSFlow userRespondedToConfirmationWith:]
  -[SOSFlow callFinished]
  -[SOSFlow userDismissedCallCountdown]
  -[SOSFlow countdownRequestedDial]
  -[SOSFlow contactsCountdownDismissed]
  -[SOSFlow timerRequestsCountdownToAutoCall]
  -[SOSFlow motionDidCancel]
  -[SOSFlow userRespondedToRestingStateWith:]
  -[SOSFlow handleEmergencyCallInititated]
  -[SOSFlow _prefetchMedicalID]
  -[SOSFlow shouldShowMedicalID]
  -[SOSFlow willHandleEvent:withMetaData:]
  -[SOSFlow checkInTimeoutForSOSFlowType:]
  -[SOSFlow startTimerToAutoDial]
  -[SOSFlow canDeviceTriggerAutoDialForSOSFlowType:]
  -[SOSFlow startFlowStateHeartbeatTimer]
  -[SOSFlow clearFlowStateHeartbeatTimer]
  -[SOSFlow sosFlowType]
  -[SOSFlow setSosFlowType:]
  -[SOSFlow healthUserDefaults]
  -[SOSFlow setHealthUserDefaults:]
  -[SOSFlow sosFlowTrigger]
  -[SOSFlow isUserResponsive]
  -[SOSFlow setIsUserResponsive:]
  -[SOSFlow shouldIgnoreMotionCancel]
  -[SOSFlow setShouldIgnoreMotionCancel:]
  -[SOSFlow didSeeUnresponsiveResting]
  -[SOSFlow setDidSeeUnresponsiveResting:]
  -[SOSFlow flowStateHeartbeatTimer]
  -[SOSFlow setFlowStateHeartbeatTimer:]


SOSContact : NSObject
 @property  NSString *name
 @property  NSString *phoneNumber
 @property  NSString *nameContactIdentifier
 @property  NSString *phoneNumberContactIdentifier

  // instance methods
  -[SOSContact phoneNumber]
  -[SOSContact setPhoneNumber:]
  -[SOSContact .cxx_destruct]
  -[SOSContact setName:]
  -[SOSContact name]
  -[SOSContact phoneNumberContactIdentifier]
  -[SOSContact nameContactIdentifier]
  -[SOSContact setNameContactIdentifier:]
  -[SOSContact setPhoneNumberContactIdentifier:]


SOSEntitlement : NSObject
  // class methods
  +[SOSEntitlement currentProcessHasEntitlement:]


SOSEngine : NSObject <SOSInternalServerProtocol, SOSPersistentTimerLocationManagerDelegate, SOSServerProtocol, NSXPCListenerDelegate>
 @property  FKFriendsManager *friendsManager
 @property  _MKLocationShifter *locationShifter
 @property  NSMutableArray *clientConnections
 @property  <SOSCoreAnalyticsReporting> *coreAnalyticsReporter
 @property  CLLocation *lastLocationSent
 @property  SOSPersistentTimerLocationManager *sosPersistentTimerLocationManager
 @property  long long currentSOSFlowState
 @property  <NSXPCListenerDelegate> *sosStatusManager
 @property  <SOSFlowManagerCoexProtocol> *sosFlowManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSEngine meContact]
  +[SOSEngine sharedInstance]
  +[SOSEngine locationShifter]
  +[SOSEngine _isBasebandDevice]
  +[SOSEngine mapTriggerToActivationReason:]
  +[SOSEngine preloadContactStoreIfNecessary]
  +[SOSEngine fullNameForContact:]
  +[SOSEngine GPSCoordinatesURLForLocation:]
  +[SOSEngine _sendMessageToRecipients:withLocation:isFirstMessage:medicalIDName:Reason:]
  +[SOSEngine authorizedToUseContactStore]
  +[SOSEngine additionalTextForCallbackNumber:]
  +[SOSEngine _sosMessageForLocation:isFirstMessage:withMMS:callbackNumber:medicalIDName:Reason:]
  +[SOSEngine _sendCKMessage:failureBlock:]
  +[SOSEngine _sendSMSMessage:MMSMessage:location:recipients:failureBlock:]
  +[SOSEngine additionalTextForCallbackNumber:fullName:firstName:]
  +[SOSEngine contactStore]
  +[SOSEngine shiftedLocationWithLocation:completion:]
  +[SOSEngine _sendMessage:location:recipients:useStandalone:failureBlock:]
  +[SOSEngine getUrlForTrigger:]
  +[SOSEngine _sosMessageForLocation:isFirstMessage:withMMS:myFullName:myFirstName:callbackNumber:Reason:]
  +[SOSEngine firstNameForContact:]

  // instance methods
  -[SOSEngine contactsManager]
  -[SOSEngine didDismissSOSBeforeSOSCall:]
  -[SOSEngine clientConnections]
  -[SOSEngine dismissSOSWithCompletion:]
  -[SOSEngine locationShifter]
  -[SOSEngine handleNotifyThirdPartyClientsWithSOSStatus:]
  -[SOSEngine updateCurrentSOSInteractiveState:]
  -[SOSEngine friendsManager]
  -[SOSEngine setFriendsManager:]
  -[SOSEngine sosPersistentTimerLocationManager]
  -[SOSEngine setCoreAnalyticsReporter:]
  -[SOSEngine mostRecentLocationSentWithCompletion:]
  -[SOSEngine currentSOSInitiationState]
  -[SOSEngine stopSendingLocationUpdate]
  -[SOSEngine isSendingLocationUpdate:]
  -[SOSEngine locationIsValidToSend:]
  -[SOSEngine notifySafetyKitWithSOSStatus:]
  -[SOSEngine dealloc]
  -[SOSEngine retriggerSOSWithUUID:trigger:]
  -[SOSEngine handoffFallbackWithUUID:trigger:]
  -[SOSEngine broadcastUpdatedSOSStatus:]
  -[SOSEngine triggerSOSWithUUID:triggerMechanism:source:completion:]
  -[SOSEngine .cxx_destruct]
  -[SOSEngine notificationEnabledAndContactsExist]
  -[SOSEngine willStartSendingLocationUpdate]
  -[SOSEngine currentSOSFlowState]
  -[SOSEngine initWithoutEntitlement]
  -[SOSEngine triggerSOSWithUUID:triggerMechanism:completion:]
  -[SOSEngine setClientConnections:]
  -[SOSEngine contactStoreDidChange]
  -[SOSEngine fetchMedicalIDName]
  -[SOSEngine _onEmergencyCallStatusChanged:]
  -[SOSEngine lastLocationSent]
  -[SOSEngine isSendingLocationUpdate]
  -[SOSEngine isTriggerEnabled:]
  -[SOSEngine startSendingLocationUpdateWithCompletion:]
  -[SOSEngine setSosStatusManager:]
  -[SOSEngine SOSSendingLocationUpdateChanged:]
  -[SOSEngine sosFlowManager]
  -[SOSEngine start]
  -[SOSEngine _tuCallCenterStatusChanged:]
  -[SOSEngine coreAnalyticsReporter]
  -[SOSEngine updateCurrentSOSInitiationState:]
  -[SOSEngine setSosFlowManager:]
  -[SOSEngine listener:shouldAcceptNewConnection:]
  -[SOSEngine sosPersistentTimerLocationMangerTimerFired:location:]
  -[SOSEngine _checkEmergencyCallStatus]
  -[SOSEngine init]
  -[SOSEngine sosStatusManager]
  -[SOSEngine startSendingLocationUpdateForReason:WithCompletion:]
  -[SOSEngine setLocationShifter:]
  -[SOSEngine _checkSOSCallStatus]


SOSCoordinator : NSObject <IDSServiceDelegate>
 @property  NSHashTable *observers
 @property  <SOSCoreAnalyticsReporting> *coreAnalyticsReporter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSCoordinator sharedInstance]

  // instance methods
  -[SOSCoordinator isIncomingMessageValidHandoffAck:]
  -[SOSCoordinator handleSOSMessageTypeHandoffSOSAck:]
  -[SOSCoordinator processEventWithUUID:triggerMechanism:]
  -[SOSCoordinator service:nearbyDevicesChanged:]
  -[SOSCoordinator service:account:identifier:didSendWithSuccess:error:]
  -[SOSCoordinator handleSOSMessageTypeProgressionSync:]
  -[SOSCoordinator tryPushToPairedDeviceWithUUID:triggerMechanism:]
  -[SOSCoordinator setCoreAnalyticsReporter:]
  -[SOSCoordinator addObserver:]
  -[SOSCoordinator shouldHandoffToPairedDevice:]
  -[SOSCoordinator isIncomingMessageValidSOSHandoff:]
  -[SOSCoordinator dealloc]
  -[SOSCoordinator .cxx_destruct]
  -[SOSCoordinator service:account:incomingMessage:fromID:]
  -[SOSCoordinator reportHandoff:result:]
  -[SOSCoordinator _updateStateForPairedDevice:]
  -[SOSCoordinator sendAckToHandoffMessage:success:]
  -[SOSCoordinator syncProgressionWithPairedDevice:sosStatus:]
  -[SOSCoordinator setObservers:]
  -[SOSCoordinator handleSOSMessageTypeHandoffSOS:]
  -[SOSCoordinator _handleServiceUpdate:]
  -[SOSCoordinator sendUpdateToObserversWithStatus:progression:shouldHandleThirdParty:]
  -[SOSCoordinator isPairedDeviceNearby]
  -[SOSCoordinator effectivePairedDevice]
  -[SOSCoordinator sendUrgentMessageToPairedDevice:]
  -[SOSCoordinator removeObserver:]
  -[SOSCoordinator shouldRetryMessage:]
  -[SOSCoordinator coreAnalyticsReporter]
  -[SOSCoordinator SOSCoordinationMessageTypeForString:]
  -[SOSCoordinator sourceDevice]
  -[SOSCoordinator init]
  -[SOSCoordinator observers]
  -[SOSCoordinator _sendUrgentMessageToPairedDevice:retries:]


SOSProcessObserver : NSObject
 @property  BKSApplicationStateMonitor *applicationMonitor
 @property  BOOL cachedApplicationRunning
 @property  <SOSProcessObserverDelegate> *delegate

  // class methods
  +[SOSProcessObserver isApplicationStateRunning:]

  // instance methods
  -[SOSProcessObserver setDelegate:]
  -[SOSProcessObserver applicationMonitor]
  -[SOSProcessObserver delegate]
  -[SOSProcessObserver dealloc]
  -[SOSProcessObserver .cxx_destruct]
  -[SOSProcessObserver initWithBundleIdentifier:]
  -[SOSProcessObserver applicationMonitorStateDidChangeForBundleIdentifier:]
  -[SOSProcessObserver cachedApplicationRunning]
  -[SOSProcessObserver setCachedApplicationRunning:]


SOSEmergencyCallVoiceLoopManager : NSObject <AVSpeechSynthesizerDelegate, CLLocationManagerDelegate>
 @property  long long reason
 @property  long long playbackMode
 @property  AVSpeechSynthesizer *voiceLoopSpeechSynthesizer
 @property  NSArray *voiceLoopUtterances
 @property  NSString *voiceLanguage
 @property  CLLocationManager *locationManager
 @property  NSTimer *messageRepeatTimer
 @property  float playbackVolume
 @property  _MKLocationShifter *locationShifter
 @property  CLLocation *locationToSynthesize
 @property  unsigned long numberOfLoopsPlayed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSEmergencyCallVoiceLoopManager _newUtteranceWithText:voice:volume:]

  // instance methods
  -[SOSEmergencyCallVoiceLoopManager locationManager:didFailWithError:]
  -[SOSEmergencyCallVoiceLoopManager locationShifter]
  -[SOSEmergencyCallVoiceLoopManager voiceLanguage]
  -[SOSEmergencyCallVoiceLoopManager dealloc]
  -[SOSEmergencyCallVoiceLoopManager .cxx_destruct]
  -[SOSEmergencyCallVoiceLoopManager reason]
  -[SOSEmergencyCallVoiceLoopManager locationManager]
  -[SOSEmergencyCallVoiceLoopManager setLocationManager:]
  -[SOSEmergencyCallVoiceLoopManager setReason:]
  -[SOSEmergencyCallVoiceLoopManager locationManager:didUpdateLocations:]
  -[SOSEmergencyCallVoiceLoopManager setLocationShifter:]
  -[SOSEmergencyCallVoiceLoopManager setVoiceLanguage:]
  -[SOSEmergencyCallVoiceLoopManager speechSynthesizer:didFinishSpeechUtterance:]
  -[SOSEmergencyCallVoiceLoopManager playbackMode]
  -[SOSEmergencyCallVoiceLoopManager _playMessage]
  -[SOSEmergencyCallVoiceLoopManager initWithReason:playbackMode:]
  -[SOSEmergencyCallVoiceLoopManager startMessagePlayback]
  -[SOSEmergencyCallVoiceLoopManager _introMessageString]
  -[SOSEmergencyCallVoiceLoopManager _playMessageWithLocation]
  -[SOSEmergencyCallVoiceLoopManager _playMessageWithoutLocation]
  -[SOSEmergencyCallVoiceLoopManager stopMessagePlayback]
  -[SOSEmergencyCallVoiceLoopManager shiftedLocationIfApplicable:withcompletion:]
  -[SOSEmergencyCallVoiceLoopManager _updateLocation:]
  -[SOSEmergencyCallVoiceLoopManager _coordinatesStringFromLocation:]
  -[SOSEmergencyCallVoiceLoopManager _localizedStringForKey:forLocalization:]
  -[SOSEmergencyCallVoiceLoopManager _localizedStringForKey:forLocalization:tableName:]
  -[SOSEmergencyCallVoiceLoopManager _localizedAttributedStringForKey:forLocalization:]
  -[SOSEmergencyCallVoiceLoopManager _baseVoiceOverAttributes]
  -[SOSEmergencyCallVoiceLoopManager _languageToUseInVoiceLoopForCountryCode:]
  -[SOSEmergencyCallVoiceLoopManager _preferredVoiceLanguageForCountryCode:]
  -[SOSEmergencyCallVoiceLoopManager setPlaybackMode:]
  -[SOSEmergencyCallVoiceLoopManager voiceLoopSpeechSynthesizer]
  -[SOSEmergencyCallVoiceLoopManager setVoiceLoopSpeechSynthesizer:]
  -[SOSEmergencyCallVoiceLoopManager voiceLoopUtterances]
  -[SOSEmergencyCallVoiceLoopManager setVoiceLoopUtterances:]
  -[SOSEmergencyCallVoiceLoopManager messageRepeatTimer]
  -[SOSEmergencyCallVoiceLoopManager setMessageRepeatTimer:]
  -[SOSEmergencyCallVoiceLoopManager playbackVolume]
  -[SOSEmergencyCallVoiceLoopManager setPlaybackVolume:]
  -[SOSEmergencyCallVoiceLoopManager locationToSynthesize]
  -[SOSEmergencyCallVoiceLoopManager setLocationToSynthesize:]
  -[SOSEmergencyCallVoiceLoopManager numberOfLoopsPlayed]
  -[SOSEmergencyCallVoiceLoopManager setNumberOfLoopsPlayed:]


SOSCoreAnalyticsReporter : NSObject <SOSCoreAnalyticsReporting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSCoreAnalyticsReporter sharedInstance]
  +[SOSCoreAnalyticsReporter isSensitiveTrigger:]
  +[SOSCoreAnalyticsReporter _AnalyticsSendEventLazy:data:]
  +[SOSCoreAnalyticsReporter _firstPartyEnablementForTrigger:]
  +[SOSCoreAnalyticsReporter _thirdPartyEnablementForTrigger:]
  +[SOSCoreAnalyticsReporter SOSCoordinationDeviceString:]

  // instance methods
  -[SOSCoreAnalyticsReporter reportSOSTriggered:]
  -[SOSCoreAnalyticsReporter reportSOSUserCancelled:lastFlowState:countdownValue:]
  -[SOSCoreAnalyticsReporter reportSOSTriggerHandoff:source:destination:result:]
  -[SOSCoreAnalyticsReporter reportSOSRejectedWithTrigger:currentTriggerMechanism:]
  -[SOSCoreAnalyticsReporter reportSOSRestingResponse:restingResponse:hasMedicalID:]
  -[SOSCoreAnalyticsReporter reportSOSCancelationTimeout:]
  -[SOSCoreAnalyticsReporter reportSOSEvent:callDuration:isHandoffTrigger:onWristState:]


SOSStatus : NSObject <NSSecureCoding>
 @property  NSUUID *uuid
 @property  long long trigger
 @property  NSDate *timeOfDetection
 @property  NSDate *timeOfResolution
 @property  long long resolution
 @property  long long flowState
 @property  BOOL isPairedDeviceStatus
 @property  BOOL isFlowActive
 @property  BOOL isFlowActiveAndNotResting
 @property  BOOL isPreCall
 @property  BOOL shouldBlockNonEmergencyCalls
 @property  BOOL shouldRejectNewSOSTriggers
 @property  BOOL shouldRetriggerSOS

  // class methods
  +[SOSStatus supportsSecureCoding]

  // instance methods
  -[SOSStatus encodeWithCoder:]
  -[SOSStatus setResolution:]
  -[SOSStatus uuid]
  -[SOSStatus trigger]
  -[SOSStatus isValid]
  -[SOSStatus .cxx_destruct]
  -[SOSStatus setUuid:]
  -[SOSStatus setTrigger:]
  -[SOSStatus resolution]
  -[SOSStatus shouldBlockNonEmergencyCalls]
  -[SOSStatus copyWithZone:]
  -[SOSStatus initWithCoder:]
  -[SOSStatus flowState]
  -[SOSStatus setFlowState:]
  -[SOSStatus setTimeOfDetection:]
  -[SOSStatus setTimeOfResolution:]
  -[SOSStatus setIsPairedDeviceStatus:]
  -[SOSStatus timeOfDetection]
  -[SOSStatus timeOfResolution]
  -[SOSStatus isPairedDeviceStatus]
  -[SOSStatus initWithUUID:trigger:timeOfDetection:timeOfResolution:resolution:]
  -[SOSStatus initWithUUID:trigger:timeOfDetection:]
  -[SOSStatus initWithUUID:trigger:timeOfDetection:timeOfResolution:resolution:flowState:isPairedDeviceStatus:]
  -[SOSStatus isFlowActive]
  -[SOSStatus isFlowActiveAndNotResting]
  -[SOSStatus isPreCall]
  -[SOSStatus shouldRejectNewSOSTriggers]
  -[SOSStatus shouldRetriggerSOS]


SOSKappaStatus : NSObject
 @property  BOOL isKappaFlow
 @property  BOOL isKappaFlowActive
 @property  SOSStatus *sosStatus
 @property  long long sosKappaState

  // instance methods
  -[SOSKappaStatus .cxx_destruct]
  -[SOSKappaStatus init]
  -[SOSKappaStatus initWithSOSStatus:]
  -[SOSKappaStatus isKappaFlow]
  -[SOSKappaStatus isKappaFlowActive]
  -[SOSKappaStatus sosStatus]
  -[SOSKappaStatus sosKappaState]
  -[SOSKappaStatus setSosKappaState:]


SOSKappaManager : NSObject <SOSInternalClientProtocol, SOSClientProtocol>
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  NSXPCConnection *connection
 @property  int connectionRequestNotificationToken
 @property  NSHashTable *observers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSKappaManager sharedInstance]
  +[SOSKappaManager isKappaEnabled]
  +[SOSKappaManager currentSOSStatus]
  +[SOSKappaManager mapServerResponseToKappaResponse:]
  +[SOSKappaManager mapSOSFlowStateToKappaState:]

  // instance methods
  -[SOSKappaManager setConnectionRequestNotificationToken:]
  -[SOSKappaManager serialQueue]
  -[SOSKappaManager addObserver:]
  -[SOSKappaManager dealloc]
  -[SOSKappaManager .cxx_destruct]
  -[SOSKappaManager connection]
  -[SOSKappaManager didDismissClientSOSBeforeSOSCall:]
  -[SOSKappaManager updateClientCurrentSOSInitiationState:]
  -[SOSKappaManager connectionRequestNotificationToken]
  -[SOSKappaManager updateClientCurrentSOSInteractiveState:]
  -[SOSKappaManager setObservers:]
  -[SOSKappaManager initWithQueue:]
  -[SOSKappaManager dismissClientSOSWithCompletion:]
  -[SOSKappaManager removeObserver:]
  -[SOSKappaManager setSendingLocationUpdate:]
  -[SOSKappaManager init]
  -[SOSKappaManager observers]
  -[SOSKappaManager setConnection:]
  -[SOSKappaManager didUpdateSOSStatus:]
  -[SOSKappaManager triggerKappaWithCompletion:]
  -[SOSKappaManager detectedAnomalyWithElectedDevice:completion:]
  -[SOSKappaManager updateObserversWithKappaStatus:]
  -[SOSKappaManager forceStartConnection]


SOSPersistentTimerLocationManager : NSObject <CLLocationManagerDelegate>
 @property  BOOL requestingLocation
 @property  CLAssertion *forceEnableLocationAssertion
 @property  CLLocation *lastLocation
 @property  <SOSPersistentTimerLocationManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSPersistentTimerLocationManager sharedInstance]

  // instance methods
  -[SOSPersistentTimerLocationManager locationManager:didFailWithError:]
  -[SOSPersistentTimerLocationManager lastLocation]
  -[SOSPersistentTimerLocationManager setLastLocation:]
  -[SOSPersistentTimerLocationManager requestLocation]
  -[SOSPersistentTimerLocationManager invalidateRequestLocationsTimer]
  -[SOSPersistentTimerLocationManager setDelegate:]
  -[SOSPersistentTimerLocationManager isRequestingLocation]
  -[SOSPersistentTimerLocationManager forceEnableLocationAssertion]
  -[SOSPersistentTimerLocationManager delegate]
  -[SOSPersistentTimerLocationManager dealloc]
  -[SOSPersistentTimerLocationManager isValid]
  -[SOSPersistentTimerLocationManager .cxx_destruct]
  -[SOSPersistentTimerLocationManager _startTimer]
  -[SOSPersistentTimerLocationManager _emergencyLocationAssertionTimeOut:]
  -[SOSPersistentTimerLocationManager shouldStopRequestingLocationAfterCallback]
  -[SOSPersistentTimerLocationManager setRequestingLocation:]
  -[SOSPersistentTimerLocationManager setForceEnableLocationAssertion:]
  -[SOSPersistentTimerLocationManager invalidateTimer]
  -[SOSPersistentTimerLocationManager fireAndStartTimertWithTimeInterval:]
  -[SOSPersistentTimerLocationManager warmUpLocationRequest]
  -[SOSPersistentTimerLocationManager invalidateInitialTimer]
  -[SOSPersistentTimerLocationManager _requestLocationsTimeout:]
  -[SOSPersistentTimerLocationManager locationManager:didUpdateLocations:]
  -[SOSPersistentTimerLocationManager _sosPersistentTimerLocationManagerTic:]
  -[SOSPersistentTimerLocationManager _sosPersistentTimerInitialRequest:]
  -[SOSPersistentTimerLocationManager init]
  -[SOSPersistentTimerLocationManager stopRequestingLocationUpdates]


SOSNewtonManager : NSObject
  // class methods
  +[SOSNewtonManager newtonEligibilityWithCompletion:]
  +[SOSNewtonManager newtonEligibilityWithHealthStore:completion:]
  +[SOSNewtonManager newtonEligibilityWithHealthStore:deviceSupportsWorkoutsOnly:completion:]
  +[SOSNewtonManager checkEligibilityForAutoEnableWithCompletion:]
  +[SOSNewtonManager checkEligibilityForAutoEnableWithHealthStore:completion:]


SOSAnimatingSpriteImageView : UIView
 @property  UIImage *spriteImage
 @property  long long spriteFrameCount
 @property  long long spriteColumnCount
 @property  unsigned long framesPerSecond

  // class methods
  +[SOSAnimatingSpriteImageView _createNewSpriteArray:currentFrame:arraySize:interrupted:]

  // instance methods
  -[SOSAnimatingSpriteImageView isAnimating]
  -[SOSAnimatingSpriteImageView .cxx_destruct]
  -[SOSAnimatingSpriteImageView layoutSubviews]
  -[SOSAnimatingSpriteImageView sizeThatFits:]
  -[SOSAnimatingSpriteImageView setTintColor:]
  -[SOSAnimatingSpriteImageView intrinsicContentSize]
  -[SOSAnimatingSpriteImageView initWithFrame:]
  -[SOSAnimatingSpriteImageView startAnimating]
  -[SOSAnimatingSpriteImageView framesPerSecond]
  -[SOSAnimatingSpriteImageView _spriteFrameSize]
  -[SOSAnimatingSpriteImageView setSpriteImage:]
  -[SOSAnimatingSpriteImageView updateLayerWithTintColor]
  -[SOSAnimatingSpriteImageView _centerPointValues]
  -[SOSAnimatingSpriteImageView _findSpriteIndex:centerPoints:]
  -[SOSAnimatingSpriteImageView stopAnimatingFinishingCycle:]
  -[SOSAnimatingSpriteImageView animateOnce]
  -[SOSAnimatingSpriteImageView spriteImage]
  -[SOSAnimatingSpriteImageView spriteFrameCount]
  -[SOSAnimatingSpriteImageView setSpriteFrameCount:]
  -[SOSAnimatingSpriteImageView spriteColumnCount]
  -[SOSAnimatingSpriteImageView setSpriteColumnCount:]
  -[SOSAnimatingSpriteImageView setFramesPerSecond:]


SOSInCallUILauncher : NSObject <SBSRemoteAlertHandleObserver, SOSProcessObserverDelegate>
 @property  SOSProcessObserver *processObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSInCallUILauncher sharedInCallUILauncher]
  +[SOSInCallUILauncher SOSRemoteAlertActivationReasonForSOSInCallUILaunchReason:]

  // instance methods
  -[SOSInCallUILauncher .cxx_destruct]
  -[SOSInCallUILauncher processObserver:bundleIdentifier:didUpdateApplicationRunning:]
  -[SOSInCallUILauncher launchInCallUIForReason:withRequestURL:completion:]
  -[SOSInCallUILauncher processObserver]
  -[SOSInCallUILauncher setProcessObserver:]


SOSStatusReporter : NSObject <SOSStatusManagerClientProtocol>
 @property  NSXPCConnection *connection
 @property  int connectionRequestNotificationToken
 @property  long long flowState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSStatusReporter sharedInstance]

  // instance methods
  -[SOSStatusReporter setConnectionRequestNotificationToken:]
  -[SOSStatusReporter .cxx_destruct]
  -[SOSStatusReporter connection]
  -[SOSStatusReporter connectionRequestNotificationToken]
  -[SOSStatusReporter updateSOSFlowState:]
  -[SOSStatusReporter init]
  -[SOSStatusReporter setConnection:]
  -[SOSStatusReporter flowState]
  -[SOSStatusReporter setFlowState:]
  -[SOSStatusReporter handleSosdLaunch]
  -[SOSStatusReporter _updateSOSFlowState]


SOSManager : NSObject <SOSInternalClientProtocol, SOSClientProtocol>
 @property  NSXPCConnection *connection
 @property  int connectionRequestNotificationToken
 @property  NSMapTable *observerToQueue
 @property  BOOL automaticCallCountdownEnabled
 @property  BOOL allowedToMessageSOSContacts
 @property  long long currentSOSInitiationState
 @property  long long currentSOSInteractiveState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSManager sharedInstance]
  +[SOSManager triggerSOSWithCompletion:]
  +[SOSManager shouldTriggerSOS]
  +[SOSManager notifySOSTriggerMechanismChanged]
  +[SOSManager triggerSOSWithUUID:triggerMechanism:completion:]
  +[SOSManager deviceSupportsSOS]
  +[SOSManager triggerSOS]
  +[SOSManager triggerSOSWithUUID:completion:]

  // instance methods
  -[SOSManager didDismissSOSBeforeSOSCall:]
  -[SOSManager setConnectionRequestNotificationToken:]
  -[SOSManager dismissSOSWithCompletion:]
  -[SOSManager setAllowedToMessageSOSContacts:]
  -[SOSManager observerToQueue]
  -[SOSManager mostRecentLocationSentWithCompletion:]
  -[SOSManager currentSOSInitiationState]
  -[SOSManager stopSendingLocationUpdate]
  -[SOSManager longPressTriggersEmergencySOS]
  -[SOSManager dealloc]
  -[SOSManager setLongPressTriggersEmergencySOS:]
  -[SOSManager .cxx_destruct]
  -[SOSManager willStartSendingLocationUpdate]
  -[SOSManager addObserver:queue:]
  -[SOSManager connection]
  -[SOSManager didDismissClientSOSBeforeSOSCall:]
  -[SOSManager updateClientCurrentSOSInitiationState:]
  -[SOSManager setCurrentSOSInteractiveState:]
  -[SOSManager connectionRequestNotificationToken]
  -[SOSManager updateClientCurrentSOSInteractiveState:]
  -[SOSManager startSendingLocationUpdateForReason:withCompletion:]
  -[SOSManager isAllowedToMessageSOSContacts]
  -[SOSManager isSendingLocationUpdate]
  -[SOSManager startSendingLocationUpdateWithCompletion:]
  -[SOSManager _waitForInitialState]
  -[SOSManager currentSOSInteractiveState]
  -[SOSManager setCurrentSOSInitiationState:]
  -[SOSManager dismissClientSOSWithCompletion:]
  -[SOSManager removeObserver:]
  -[SOSManager _resetStateWithCompletion:]
  -[SOSManager setAutomaticCallCountdownEnabled:]
  -[SOSManager isAutomaticCallCountdownEnabled]
  -[SOSManager setSendingLocationUpdate:]
  -[SOSManager init]
  -[SOSManager setConnection:]
  -[SOSManager didUpdateSOSStatus:]


SOSStatusManager : NSObject <SOSStatusManagerServerProtocol, NSXPCListenerDelegate, SOSPairedDeviceStatusObserver>
 @property  NSXPCConnection *clientConnection
 @property  BOOL inSOSFlow
 @property  BOOL inSOSFlowOnCurrentDevice
 @property  TUCall *activeSOSCall
 @property  BOOL hasActiveSOSCall
 @property  NSTimer *currentDeviceStatusClearTimer
 @property  NSTimer *pairedDeviceStatusClearTimer
 @property  long long mostRecentTriggerSource
 @property  <SOSCoreAnalyticsReporting> *coreAnalyticsReporter
 @property  NSUUID *handoffTriggerUUID
 @property  long long handoffTrigger
 @property  NSTimer *handoffFallbackTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SOSStatusManager sharedInstance]

  // instance methods
  -[SOSStatusManager handoffTrigger]
  -[SOSStatusManager clientConnection]
  -[SOSStatusManager setInSOSFlowOnCurrentDevice:]
  -[SOSStatusManager setActiveSOSCall:]
  -[SOSStatusManager startHandoffFallbackTimer]
  -[SOSStatusManager setClientConnection:]
  -[SOSStatusManager setCoreAnalyticsReporter:]
  -[SOSStatusManager cancelPairedDeviceClearStatusTimer]
  -[SOSStatusManager flowStarted]
  -[SOSStatusManager cancelCurrentDeviceClearStatusTimer]
  -[SOSStatusManager pairedDeviceStatusClearTimer]
  -[SOSStatusManager flowEndedOnBothDevices]
  -[SOSStatusManager handoffFallbackTimer]
  -[SOSStatusManager updatePairedDeviceSOSStatus:]
  -[SOSStatusManager sosTriggerPushedToPairedDeviceWithUUID:trigger:]
  -[SOSStatusManager startCurrentDeviceClearStatusTimer]
  -[SOSStatusManager currentDeviceStatusClearTimer]
  -[SOSStatusManager _reportSOSEvent:callDuration:]
  -[SOSStatusManager .cxx_destruct]
  -[SOSStatusManager inSOSFlow]
  -[SOSStatusManager flowEnded]
  -[SOSStatusManager flowEndedOnCurrentDevice]
  -[SOSStatusManager sosTriggerDisabledWithUUID:trigger:]
  -[SOSStatusManager sosTriggeredOnPairedDevice:]
  -[SOSStatusManager flowStartedOnCurrentDevice]
  -[SOSStatusManager checkSOSStatusOnLaunch]
  -[SOSStatusManager sosTriggeredWithUUID:trigger:source:]
  -[SOSStatusManager startAudioSession]
  -[SOSStatusManager activeSOSCall]
  -[SOSStatusManager handoffTriggerUUID]
  -[SOSStatusManager mostRecentTriggerSource]
  -[SOSStatusManager setHasActiveSOSCall:]
  -[SOSStatusManager setMostRecentTriggerSource:]
  -[SOSStatusManager setPairedDeviceStatusClearTimer:]
  -[SOSStatusManager handleSOSCallStatusChange:]
  -[SOSStatusManager pairedDeviceSOSStatusDidUpdate:progression:shouldHandleThirdParty:]
  -[SOSStatusManager handleLostStatusReporterConnection]
  -[SOSStatusManager flowStartedOnEitherDevice]
  -[SOSStatusManager setCurrentDeviceStatusClearTimer:]
  -[SOSStatusManager setHandoffTrigger:]
  -[SOSStatusManager startPairedDeviceClearStatusTimer]
  -[SOSStatusManager updateSOSFlowState:]
  -[SOSStatusManager clearHandoffFallbackState]
  -[SOSStatusManager setInSOSFlow:]
  -[SOSStatusManager coreAnalyticsReporter]
  -[SOSStatusManager triggerHandoffFallback]
  -[SOSStatusManager listener:shouldAcceptNewConnection:]
  -[SOSStatusManager setHandoffFallbackTimer:]
  -[SOSStatusManager init]
  -[SOSStatusManager endAudioSession]
  -[SOSStatusManager cancelHandoffFallbackTimer]
  -[SOSStatusManager hasActiveSOSCall]
  -[SOSStatusManager inSOSFlowOnCurrentDevice]
  -[SOSStatusManager setHandoffTriggerUUID:]
  -[SOSStatusManager checkHandoffFallback]


(SOS)
	// instance methods
	-[(SOS) isSOS]
	-[(SOS) sos_urlActivationReason]

(NSString_StringWithPositionalSpecifiersFormat)
	// class methods
	+[(NSString_StringWithPositionalSpecifiersFormat) stringWithPositionalSpecifiersFormat:arguments:]

01 00 1e00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVAudioSession 
01 00 1e00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesisVoice 
01 00 1e00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechSynthesizer 
01 00 1e00 /System/Library/Frameworks/AVFAudio.framework/AVFAudio: AVSpeechUtterance 
01 00 2700 /usr/lib/libAWDSupportFramework.dylib: AWDSOSAutomaticCallCountdownEnabled 
01 00 2700 /usr/lib/libAWDSupportFramework.dylib: AWDSOSShouldPlayAudioDuringCountdown 
01 00 0600 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXSettings 
01 00 2100 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAKeyframeAnimation 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0700 /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit: CKSOSMessage 
01 00 0700 /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit: CKSOSUtilities 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLEmergencyEnablementAssertion 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0a00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 1400 /System/Library/PrivateFrameworks/FriendKit.framework/FriendKit: FKFriendsManager 
01 00 1400 /System/Library/PrivateFrameworks/FriendKit.framework/FriendKit: FKPerson 
01 00 0f00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKHealthStore 
01 00 0f00 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKMedicalIDStore 
01 00 0400 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0500 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 2300 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1300 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 1300 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1200 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBPrivacyPresenter 
01 00 2400 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1100 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCPersistentTimer 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertActivationContext 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertDefinition 
01 00 1b00 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertHandle 
01 00 0b00 /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities: TUCallCenter 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0300 /System/Library/PrivateFrameworks/VoiceTrigger.framework/VoiceTrigger: VTStateManager 
01 00 1000 /System/Library/Frameworks/MapKit.framework/MapKit: _MKLocationShifter 
01 00 1a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UICAPackageView 
