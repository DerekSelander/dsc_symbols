|| __DATA.__objc_data _OBJC_CLASS_$_VSDurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_VSNeuralTTSUtils
|| __DATA.__objc_data _OBJC_CLASS_$_VSWordTimingService
|| __DATA.__objc_data _OBJC_METACLASS_$_VSDurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_VSNeuralTTSUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_VSWordTimingService
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSCacheUpdateListener._dataProviders
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSCacheUpdateListener._flushTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSCacheUpdateListener._isListening
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSCacheUpdateListener._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSCacheUpdateListener._updateRequestQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionConfirmAction._confirmFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionConfirmAction._confirmedAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionConfirmAction._deniedAction
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionDisambiguateAction._ambiguousPhoneticValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionDisambiguateAction._ambiguousValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionDisambiguateAction._context
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionDisambiguateAction._knownPhoneticValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionDisambiguateAction._knownValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionDisambiguateAction._repeatedSpokenFeedbackString
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionDisambiguateAction._sequenceTag
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionRecognizeAction._audioInputPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionRecognizeAction._debugDumpPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionRecognizeAction._keywords
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionRecognizeAction._levelInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionRecognizeAction._modelIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionRecognizeAction._recognition
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionRecognizeAction._recognizeFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionRecognizeAction._results
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionSpeakAction._shouldTerminate
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSRecognitionURLAction._url
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSTextPreProcessor._languageID
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSTextPreProcessor._rules
|| __DATA.__objc_ivar _OBJC_IVAR_$_VSTextPreProcessor._tokenizer
|| __DATA_CONST.__const _VSKeepAliveEntitlement
|| __DATA_CONST.__const _VSKeepAliveMachServiceName
|| __DATA_CONST.__const _VSLocalizedStringKeyNetworkStallRetryInterstitial
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBHeySiriCapabilities
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBHeySiriClock
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBHeySiriClockPlankTimer
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBHeySiriHome
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBHeySiriMusic
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBHeySiriNews
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBHeySiriWeather
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBHeySiriWeather2
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBSiriCapabilities
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBSiriCapabilityClock
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBSiriCapabilityHome
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBSiriCapabilityMusic
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBSiriCapabilityNews
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBSiriCapabilityWeather
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBSiriIntro
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBTrySay0
|| __DATA_CONST.__const _VSLocalizedStringKeyOOBTrySay1
|| __DATA_CONST.__const _VSTTSEntitlement
|| __DATA_CONST.__const _VSTTSMachServiceName
|| __DATA_CONST.__const _VSVoiceResourceAssetConfigPlist
|| __DATA_CONST.__const _kVSErrorDomain
|| __DATA_CONST.__const _kVSFrameworkBundleIdentifier
|| __DATA_CONST.__const _kVSKeywordIndexDidChangeNotification
|| __DATA_CONST.__const _kVSLogBundlePlistExtension
|| __DATA_CONST.__const _kVSPreferencesLoggingDomain
|| __DATA_CONST.__const _kVSPreferencesLoggingLogLevelKey
|| __DATA_CONST.__const _kVSPreferencesLoggingOutputLevelKey
|| __DATA_CONST.__const _kVSPreferencesSpokenLanguageChangedNotification
|| __DATA_CONST.__const _kVSRecognitionAllDefaultModelIdentifier
|| __DATA_CONST.__const _kVSRecognitionSessionKeywordsDidChangeNotification
|| __DATA_CONST.__const _kVSServerDiedNotification
|| __DATA_CONST.__const _kVSServerRecognitionCancelledNotification
|| __DATA_CONST.__const _kVSServerRecognitionErrorCodeKey
|| __DATA_CONST.__const _kVSServerRecognitionErrorDescriptionKey
|| __DATA_CONST.__const _kVSServerRecognitionErrorNotification
|| __DATA_CONST.__const _kVSServerRecognitionPreparedNotification
|| __DATA_CONST.__const _kVSServerRecognitionResultsKey
|| __DATA_CONST.__const _kVSServerRecognitionResultsNotification
|| __DATA_CONST.__const _kVSServerRecognitionStartedNotification
|| __DATA_CONST.__const _kVSSpeechTextClassAttribute
|| __DATA_CONST.__const _kVSSpeechTextClassName
|| __DATA_CONST.__const _kVSSpeechTextClassTitle
|| __DATA_CONST.__const _kVSVocalizerResourceAssetInstalledNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSAssetBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSCacheUpdateListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSInstrumentMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSLocalizedString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSMobileAssetsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSOpusDecoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSPreferencesInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSPresynthesizedAudioRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSRecognitionAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSRecognitionConfirmAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSRecognitionDisambiguateAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSRecognitionRecognizeAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSRecognitionResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSRecognitionSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSRecognitionSpeakAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSRecognitionURLAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSpeechCharacterSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSpeechInternalSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSpeechRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSpeechSynthesizer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSpeechSynthesizerPreference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSSpeechWordTimingInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSTextPreProcessor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSVoiceAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSVoiceAssetSelection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VSVoiceResourceAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSAssetBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSCacheUpdateListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSInstrumentMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSLocalizedString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSMobileAssetsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSOpusDecoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSPreferencesInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSPresynthesizedAudioRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSRecognitionAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSRecognitionConfirmAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSRecognitionDisambiguateAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSRecognitionRecognizeAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSRecognitionResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSRecognitionSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSRecognitionSpeakAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSRecognitionURLAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSpeechCharacterSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSpeechInternalSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSpeechRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSpeechSynthesizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSpeechSynthesizerPreference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSSpeechWordTimingInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSTextPreProcessor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSVoiceAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSVoiceAssetSelection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VSVoiceResourceAsset
|| __TEXT.__const _VSDefaultPitch
|| __TEXT.__const _VSDefaultRate
|| __TEXT.__const _VSDefaultVolume
|| __TEXT.__const _VSRecognitionModelMaximumClassValueWeight
|| __TEXT.__const _VSRecognitionModelMinimumClassValueWeight
|| __TEXT.__const _VSRecognitionModelNeutralClassValueWeight
|| __TEXT.__text _VSAbsoluteTimeToSecond
|| __TEXT.__text _VSAttributedStringCreateFromSerializedAttributes
|| __TEXT.__text _VSAttributedStringCreateSerializedAttributes
|| __TEXT.__text _VSCFArrayGetValueAtIndexIfType
|| __TEXT.__text _VSCFAttributedStringCreateStringByBracketingAttributeWithString
|| __TEXT.__text _VSCFAttributedStringGetAttributeAndLongestEffectiveRange
|| __TEXT.__text _VSCFDictionaryGetValueIfType
|| __TEXT.__text _VSCFPropertyListCreateBinaryXMLData
|| __TEXT.__text _VSCFPropertyListCreateFromBinaryXMLData
|| __TEXT.__text _VSCFSetCreateMutableArray
|| __TEXT.__text _VSCFSetSendDifferences
|| __TEXT.__text _VSCFURLDeleteDirectoryContents
|| __TEXT.__text _VSCopyContentsOfDirectoryAtURL
|| __TEXT.__text _VSCopyModificationDateForFileAtURL
|| __TEXT.__text _VSCopyUpdatableRecognitionModelDataProviderInfos
|| __TEXT.__text _VSCreateDataFromContentsOfURL
|| __TEXT.__text _VSCreateDirectory
|| __TEXT.__text _VSCreateTemporaryDirectory
|| __TEXT.__text _VSCreateURLAndDirectory
|| __TEXT.__text _VSDeleteItemAtURL
|| __TEXT.__text _VSDirectoryExistsAtURL
|| __TEXT.__text _VSFileExistsAtURL
|| __TEXT.__text _VSGetLogObject
|| __TEXT.__text _VSKeywordIndexCopyDefaultURL
|| __TEXT.__text _VSKeywordIndexCopyKeywordsForModelIdentifier
|| __TEXT.__text _VSKeywordIndexCopyKeywordsForTopLevelModels
|| __TEXT.__text _VSKeywordIndexCreate
|| __TEXT.__text _VSKeywordIndexCreateWithURL
|| __TEXT.__text _VSKeywordIndexSaveToURL
|| __TEXT.__text _VSKeywordIndexSetKeywordsForClassIdentifier
|| __TEXT.__text _VSKeywordIndexSetKeywordsForModelIdentifier
|| __TEXT.__text _VSLogBundleCopyPath
|| __TEXT.__text _VSLogBundleCopyPathForFile
|| __TEXT.__text _VSLogBundleCopyURL
|| __TEXT.__text _VSLogBundleCopyURLForFile
|| __TEXT.__text _VSLogBundleCreate
|| __TEXT.__text _VSLogBundleCreateFromPath
|| __TEXT.__text _VSPluginRegsitryRebuild
|| __TEXT.__text _VSPreferencesCopyAutoDownloadedAssetsInfo
|| __TEXT.__text _VSPreferencesCopyAvailableLanguageIdentifiers
|| __TEXT.__text _VSPreferencesCopyAvailableOutputLanguageIdentifiers
|| __TEXT.__text _VSPreferencesCopyDefaultOutputLanguageIdentifierForUserPreferences
|| __TEXT.__text _VSPreferencesCopyDefaultSpokenLanguageIdentifierForUserPreferences
|| __TEXT.__text _VSPreferencesCopySpokenLanguageIdentifier
|| __TEXT.__text _VSPreferencesCopySpokenLanguageIdentifierArray
|| __TEXT.__text _VSPreferencesCopyValueForKey
|| __TEXT.__text _VSPreferencesGetLogging
|| __TEXT.__text _VSPreferencesGetLoggingLevel
|| __TEXT.__text _VSPreferencesInitialize
|| __TEXT.__text _VSPreferencesSetAutoDownloadedAssetsInfo
|| __TEXT.__text _VSPreferencesSetLogging
|| __TEXT.__text _VSPreferencesSetLoggingLevel
|| __TEXT.__text _VSPreferencesSetSpokenLanguageIdentifier
|| __TEXT.__text _VSPreferencesSetValueForKey
|| __TEXT.__text _VSRecognitionBegin
|| __TEXT.__text _VSRecognitionCancel
|| __TEXT.__text _VSRecognitionConfigurationCacheUpdate
|| __TEXT.__text _VSRecognitionCopyDebugDumpPath
|| __TEXT.__text _VSRecognitionCopyResults
|| __TEXT.__text _VSRecognitionCreate
|| __TEXT.__text _VSRecognitionCreateForDisambiguation
|| __TEXT.__text _VSRecognitionDisambiguationContextCreate
|| __TEXT.__text _VSRecognitionDisambiguationContextCreateDictionaryRepresentation
|| __TEXT.__text _VSRecognitionDisambiguationContextCreateFromDictionaryRepresentation
|| __TEXT.__text _VSRecognitionDisambiguationContextGetAmbiguousClassValueAtIndex
|| __TEXT.__text _VSRecognitionDisambiguationContextGetAmbiguousClassValues
|| __TEXT.__text _VSRecognitionDisambiguationContextGetKnownClassValue
|| __TEXT.__text _VSRecognitionDisambiguationContextGetKnownClassValues
|| __TEXT.__text _VSRecognitionDisambiguationContextGetModelIdentifier
|| __TEXT.__text _VSRecognitionDisambiguationContextGetSequenceTag
|| __TEXT.__text _VSRecognitionDisambiguationContextGetTypeID
|| __TEXT.__text _VSRecognitionGetInputLevel
|| __TEXT.__text _VSRecognitionGetInputLevelDB
|| __TEXT.__text _VSRecognitionGetModelIdentifier
|| __TEXT.__text _VSRecognitionGetPreferredEngine
|| __TEXT.__text _VSRecognitionGetTypeID
|| __TEXT.__text _VSRecognitionIsActive
|| __TEXT.__text _VSRecognitionIsPrepared
|| __TEXT.__text _VSRecognitionModelCopyActiveLanguageIdentifier
|| __TEXT.__text _VSRecognitionModelCopyActiveLanguageIdentifierArray
|| __TEXT.__text _VSRecognitionModelCopyLanguageResourceURL
|| __TEXT.__text _VSRecognitionModelCopyResourceURL
|| __TEXT.__text _VSRecognitionModelCopyResourceURLForLanguage
|| __TEXT.__text _VSRecognitionModelDataProviderChanged
|| __TEXT.__text _VSRecognitionPluginInfoCreateString
|| __TEXT.__text _VSRecognitionPluginStringCopyInfo
|| __TEXT.__text _VSRecognitionPrepare
|| __TEXT.__text _VSRecognitionResultCopyClassIDsAndPhrases
|| __TEXT.__text _VSRecognitionResultCopyDescriptionWithIndent
|| __TEXT.__text _VSRecognitionResultCreate
|| __TEXT.__text _VSRecognitionResultCreateDictionaryRepresentation
|| __TEXT.__text _VSRecognitionResultCreateDictionaryRepresentationWithResultHandlerInfo
|| __TEXT.__text _VSRecognitionResultCreateFromDictionaryRepresentation
|| __TEXT.__text _VSRecognitionResultGetContext
|| __TEXT.__text _VSRecognitionResultGetHandlerInfoString
|| __TEXT.__text _VSRecognitionResultGetModelIdentifier
|| __TEXT.__text _VSRecognitionResultGetPhraseAtIndex
|| __TEXT.__text _VSRecognitionResultGetPhraseCount
|| __TEXT.__text _VSRecognitionResultGetTypeID
|| __TEXT.__text _VSRecognitionResultSetContext
|| __TEXT.__text _VSRecognitionSetAudioInputPath
|| __TEXT.__text _VSRecognitionSetBluetoothInputAllowed
|| __TEXT.__text _VSRecognitionSetDebugDumpPath
|| __TEXT.__text _VSRecognitionSetEngineResetRequired
|| __TEXT.__text _VSRecognitionSetInputLevelUpdateInterval
|| __TEXT.__text _VSRecognitionSetPreferredEngine
|| __TEXT.__text _VSVocalizerAssetExistsForLanguage
|| __TEXT.__text _VSVocalizerCopyDefaultAssetLanguage
|| __TEXT.__text _VSVocalizerCopyFileNameForToneName
|| __TEXT.__text _VSVocalizerCopyPathForBuiltInVoice
|| __TEXT.__text _VSVocalizerCopyPathForCommonResources
|| __TEXT.__text _VSVocalizerCopyPathForLocalizedResources
|| __TEXT.__text _VSVocalizerCopyPathForResources
|| __TEXT.__text _VSVocalizerCopyPathForTones
|| __TEXT.__text _VSVocalizerCopyURLForAssets
|| __TEXT.__text _VSVocalizerCopyVoiceEngineFormatVersionForLanguage
|| __TEXT.__text _VSVocalizerDeleteAssetForLanguage
|| __TEXT.__text _VSVocalizerShouldUseAssetForLanguage
|| __TEXT.__text __VSBundleCopyResourceURL
|| __TEXT.__text __VSCopyAvailableLanguageIdentifiers
|| __TEXT.__text __VSCopyAvailableOutputLanguageIdentifiers
|| __TEXT.__text __VSCopyDefaultLanguageIdentifierFallbackMapURL
|| __TEXT.__text __VSCopyDefaultOutputLanguageIdentifierFallbackMapURL
|| __TEXT.__text __VSCopyFallbackLanguageIdentifierForLanguageIdentifier
|| __TEXT.__text __VSCopyFallbackLanguageIdentifierForLocale
|| __TEXT.__text __VSCopyLanguageArrayForLanguageIdentifier
|| __TEXT.__text __VSCopyLanguageCodeFromLanguageIdentifier
|| __TEXT.__text __VSCopyLanguageIdentifierForLocale
|| __TEXT.__text __VSCopyLocalizedString
|| __TEXT.__text __VSCopyQualifiedLanguageIdentifierForLanguageCode
|| __TEXT.__text __VSLanguageIdentifierIsLanguageOnly
__ AVFoundation: _AVAudioSessionCategoryRingtonePreview
__ AVFoundation: _OBJC_CLASS_$_AVAudioPlayer
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AppSupport: _CPCreateMIGServerSourceWithContext
__ AppSupport: _CPGetContextForCalloutCurrentMIGServerSource
__ AppSupport: _CPIsInternalDevice
__ AudioToolbox: _AudioConverterDispose
__ AudioToolbox: _AudioConverterFillComplexBuffer
__ AudioToolbox: _AudioConverterNew
__ AudioToolbox: _AudioConverterReset
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendArray
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayApplyFunction
__ CoreFoundation: _CFArrayContainsValue
__ CoreFoundation: _CFArrayCreate
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArraySortValues
__ CoreFoundation: _CFAttributedStringCreateMutable
__ CoreFoundation: _CFAttributedStringGetAttribute
__ CoreFoundation: _CFAttributedStringGetAttributeAndLongestEffectiveRange
__ CoreFoundation: _CFAttributedStringGetAttributesAndLongestEffectiveRange
__ CoreFoundation: _CFAttributedStringGetLength
__ CoreFoundation: _CFAttributedStringGetString
__ CoreFoundation: _CFAttributedStringReplaceString
__ CoreFoundation: _CFAttributedStringSetAttributes
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyBundleLocalizations
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleCopyLocalizationsForPreferences
__ CoreFoundation: _CFBundleCopyLocalizedString
__ CoreFoundation: _CFBundleCopyResourceURL
__ CoreFoundation: _CFBundleCopyResourceURLForLocalization
__ CoreFoundation: _CFBundleCopyResourceURLsOfType
__ CoreFoundation: _CFBundleGetBundleWithIdentifier
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFCopyHomeDirectoryURLForUser
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateMutableCopy
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetBytes
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetMutableBytePtr
__ CoreFoundation: _CFDateCompare
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithAbsoluteTime
__ CoreFoundation: _CFDateFormatterSetFormat
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCreateWithUserInfoKeysAndValues
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFGetAllocator
__ CoreFoundation: _CFGetRetainCount
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFLocaleCopyPreferredLanguages
__ CoreFoundation: _CFLocaleCreate
__ CoreFoundation: _CFLocaleGetValue
__ CoreFoundation: _CFMachPortCreateWithPort
__ CoreFoundation: _CFMachPortGetPort
__ CoreFoundation: _CFMachPortInvalidate
__ CoreFoundation: _CFMachPortSetInvalidationCallBack
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFPropertyListCreateFromStream
__ CoreFoundation: _CFPropertyListWriteToStream
__ CoreFoundation: _CFReadStreamClose
__ CoreFoundation: _CFReadStreamCreateWithBytesNoCopy
__ CoreFoundation: _CFReadStreamCreateWithFile
__ CoreFoundation: _CFReadStreamOpen
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetApplyFunction
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringCompareWithOptions
__ CoreFoundation: _CFStringCreateArrayBySeparatingStrings
__ CoreFoundation: _CFStringCreateCopy
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateMutableCopy
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithFileSystemRepresentation
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringFind
__ CoreFoundation: _CFStringFindCharacterFromSet
__ CoreFoundation: _CFStringGetBytes
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetFileSystemRepresentation
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetMaximumSizeForEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringTokenizerAdvanceToNextToken
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _CFStringTokenizerGetCurrentTokenRange
__ CoreFoundation: _CFStringTokenizerSetString
__ CoreFoundation: _CFURLCopyAbsoluteURL
__ CoreFoundation: _CFURLCopyFileSystemPath
__ CoreFoundation: _CFURLCopyLastPathComponent
__ CoreFoundation: _CFURLCopyPathExtension
__ CoreFoundation: _CFURLCreateCopyAppendingPathComponent
__ CoreFoundation: _CFURLCreateCopyDeletingPathExtension
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFURLGetFileSystemRepresentation
__ CoreFoundation: _CFURLGetString
__ CoreFoundation: _CFURLHasDirectoryPath
__ CoreFoundation: _CFWriteStreamClose
__ CoreFoundation: _CFWriteStreamCopyProperty
__ CoreFoundation: _CFWriteStreamCreateWithAllocatedBuffers
__ CoreFoundation: _CFWriteStreamCreateWithFile
__ CoreFoundation: _CFWriteStreamOpen
__ CoreFoundation: _CFWriteStreamWrite
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _NSURLContentAccessDateKey
__ CoreFoundation: _NSURLFileAllocatedSizeKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFPreferencesWriteManagedDomainForUser
__ CoreFoundation: __CFRuntimeBridgeClasses
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFErrorDescriptionKey
__ CoreFoundation: _kCFLocaleCountryCode
__ CoreFoundation: _kCFLocaleCurrentLocaleDidChangeNotification
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFStreamPropertyDataWritten
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFTypeSetCallBacks
__ Foundation: _NSClassFromString
__ Foundation: _NSFileModificationDate
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_CLASS_$_NSXPCListenerEndpoint
__ MobileAsset: _ASAttributeCompatibilityVersion
__ MobileAsset: _ASAttributeContentVersion
__ MobileAsset: _ASAttributeMasteredVersion
__ MobileAsset: _ASAttributeUnarchivedSize
__ MobileAsset: _MAMigrateAssets
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ SiriTTS: __ZN14NeuralTTSUtils17compile_ane_modelEPKc
__ SiriTTS: __ZN14NeuralTTSUtils21is_ane_model_compiledEPKc
__ SiriTTS: _gryphon_GetCurrentCompatibilityVersion
__ SiriTTS: _gryphon_GetMinCompatibilityVersion
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGGetSInt64Answer
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __get_cpu_capabilities
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_allocate
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_port_insert_right
__ libSystem.B.dylib: _mach_port_mod_refs
__ libSystem.B.dylib: _mach_port_set_attributes
__ libSystem.B.dylib: _mach_port_type
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_deallocate
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _mig_strncpy
__ libSystem.B.dylib: _mig_strncpy_zerofill
__ libSystem.B.dylib: _mkdir
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _srandom
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _symlink
__ libSystem.B.dylib: _task_get_special_port
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
VSAssetBase : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *bundleIdentifier
 @property  NSNumber *compatibilityVersion
 @property  NSNumber *contentVersion
 @property  NSString *masteredVersion

  // class methods
  +[VSAssetBase supportsSecureCoding]

  // instance methods
  -[VSAssetBase encodeWithCoder:]
  -[VSAssetBase initWithCoder:]
  -[VSAssetBase .cxx_destruct]
  -[VSAssetBase bundleIdentifier]
  -[VSAssetBase setBundleIdentifier:]
  -[VSAssetBase compatibilityVersion]
  -[VSAssetBase setCompatibilityVersion:]
  -[VSAssetBase contentVersion]
  -[VSAssetBase masteredVersion]
  -[VSAssetBase setMasteredVersion:]
  -[VSAssetBase setContentVersion:]


VSInstrumentMetrics : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *utterance
 @property  NSString *voiceAssetKey
 @property  NSString *voiceResourceAssetKey
 @property  NSString *audioOutputRoute
 @property  long long requestCreatedTimestamp
 @property  long long eagerRequestCreatedTimeStampDiffs
 @property  long long synthesisBeginTimestamp
 @property  long long synthesisEndTimestamp
 @property  long long speechBeginTimestamp
 @property  long long speechEndTimestamp
 @property  long long audioStartTimestampDiffs
 @property  double audioDuration
 @property  BOOL isWarmStart
 @property  BOOL isServerTTS
 @property  BOOL isServerStreamTTS
 @property  BOOL isServerTimeout
 @property  BOOL isServerTTSRacing
 @property  BOOL canUseServerTTS
 @property  long long promptCount
 @property  long long errorCode
 @property  long long sourceOfTTS
 @property  BOOL isSpeechRequest
 @property  long long synthesisToSpeechTimeGap
 @property  long long waitForSynthesisToFinishTimeDelay
 @property  BOOL isCacheHitFromDisk
 @property  BOOL isCacheHitFromMemory

  // class methods
  +[VSInstrumentMetrics supportsSecureCoding]

  // instance methods
  -[VSInstrumentMetrics encodeWithCoder:]
  -[VSInstrumentMetrics initWithCoder:]
  -[VSInstrumentMetrics .cxx_destruct]
  -[VSInstrumentMetrics errorCode]
  -[VSInstrumentMetrics setErrorCode:]
  -[VSInstrumentMetrics timeToSpeakLatency]
  -[VSInstrumentMetrics utterance]
  -[VSInstrumentMetrics setUtterance:]
  -[VSInstrumentMetrics isSpeechRequest]
  -[VSInstrumentMetrics setCanUseServerTTS:]
  -[VSInstrumentMetrics canUseServerTTS]
  -[VSInstrumentMetrics dictionaryMetrics]
  -[VSInstrumentMetrics _clockFactor]
  -[VSInstrumentMetrics ttsSynthesisLatency]
  -[VSInstrumentMetrics audioQueueLatency]
  -[VSInstrumentMetrics eagerRequestTimeGap]
  -[VSInstrumentMetrics isSynthesisCached]
  -[VSInstrumentMetrics synthesisToSpeechTime]
  -[VSInstrumentMetrics waitForSynthesisToFinishTime]
  -[VSInstrumentMetrics synthesisLatency]
  -[VSInstrumentMetrics ttsTotalLatency]
  -[VSInstrumentMetrics voiceAssetKey]
  -[VSInstrumentMetrics setVoiceAssetKey:]
  -[VSInstrumentMetrics voiceResourceAssetKey]
  -[VSInstrumentMetrics setVoiceResourceAssetKey:]
  -[VSInstrumentMetrics audioOutputRoute]
  -[VSInstrumentMetrics setAudioOutputRoute:]
  -[VSInstrumentMetrics requestCreatedTimestamp]
  -[VSInstrumentMetrics setRequestCreatedTimestamp:]
  -[VSInstrumentMetrics eagerRequestCreatedTimeStampDiffs]
  -[VSInstrumentMetrics setEagerRequestCreatedTimeStampDiffs:]
  -[VSInstrumentMetrics synthesisBeginTimestamp]
  -[VSInstrumentMetrics setSynthesisBeginTimestamp:]
  -[VSInstrumentMetrics synthesisEndTimestamp]
  -[VSInstrumentMetrics setSynthesisEndTimestamp:]
  -[VSInstrumentMetrics speechBeginTimestamp]
  -[VSInstrumentMetrics setSpeechBeginTimestamp:]
  -[VSInstrumentMetrics speechEndTimestamp]
  -[VSInstrumentMetrics setSpeechEndTimestamp:]
  -[VSInstrumentMetrics audioStartTimestampDiffs]
  -[VSInstrumentMetrics setAudioStartTimestampDiffs:]
  -[VSInstrumentMetrics audioDuration]
  -[VSInstrumentMetrics setAudioDuration:]
  -[VSInstrumentMetrics isWarmStart]
  -[VSInstrumentMetrics setIsWarmStart:]
  -[VSInstrumentMetrics isServerTTS]
  -[VSInstrumentMetrics setIsServerTTS:]
  -[VSInstrumentMetrics isServerStreamTTS]
  -[VSInstrumentMetrics setIsServerStreamTTS:]
  -[VSInstrumentMetrics isServerTimeout]
  -[VSInstrumentMetrics setIsServerTimeout:]
  -[VSInstrumentMetrics isServerTTSRacing]
  -[VSInstrumentMetrics setIsServerTTSRacing:]
  -[VSInstrumentMetrics promptCount]
  -[VSInstrumentMetrics setPromptCount:]
  -[VSInstrumentMetrics sourceOfTTS]
  -[VSInstrumentMetrics setSourceOfTTS:]
  -[VSInstrumentMetrics setIsSpeechRequest:]
  -[VSInstrumentMetrics synthesisToSpeechTimeGap]
  -[VSInstrumentMetrics setSynthesisToSpeechTimeGap:]
  -[VSInstrumentMetrics waitForSynthesisToFinishTimeDelay]
  -[VSInstrumentMetrics setWaitForSynthesisToFinishTimeDelay:]
  -[VSInstrumentMetrics isCacheHitFromDisk]
  -[VSInstrumentMetrics setIsCacheHitFromDisk:]
  -[VSInstrumentMetrics isCacheHitFromMemory]
  -[VSInstrumentMetrics setIsCacheHitFromMemory:]


VSVoiceAssetSelection : NSObject /usr/lib/libSystem.B.dylib
 @property  VSVoiceAsset *voiceData
 @property  MAAsset *asset
 @property  NSString *builtInVoicePath
 @property  NSString *voicePath

  // instance methods
  -[VSVoiceAssetSelection key]
  -[VSVoiceAssetSelection .cxx_destruct]
  -[VSVoiceAssetSelection size]
  -[VSVoiceAssetSelection isInstalled]
  -[VSVoiceAssetSelection asset]
  -[VSVoiceAssetSelection setAsset:]
  -[VSVoiceAssetSelection isDownloading]
  -[VSVoiceAssetSelection voiceData]
  -[VSVoiceAssetSelection descriptiveKey]
  -[VSVoiceAssetSelection voicePath]
  -[VSVoiceAssetSelection setVoiceData:]
  -[VSVoiceAssetSelection builtInVoicePath]
  -[VSVoiceAssetSelection setBuiltInVoicePath:]
  -[VSVoiceAssetSelection setVoicePath:]


VSMobileAssetsManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *assetQueryQueue

  // class methods
  +[VSMobileAssetsManager sharedManager]
  +[VSMobileAssetsManager selectVoiceResourceAssetForLanguage:]
  +[VSMobileAssetsManager pickCorrectAssetFromLocalAssets:]
  +[VSMobileAssetsManager preinstallAssetsDirectory]
  +[VSMobileAssetsManager _languagesFromAttributes:]
  +[VSMobileAssetsManager queryForVoiceResourceAsset:returnTypes:]
  +[VSMobileAssetsManager voiceResourceFromAsset:]
  +[VSMobileAssetsManager bundleIdentifierForVoiceType:]
  +[VSMobileAssetsManager amendVoiceWithDefaultSettings:]
  +[VSMobileAssetsManager selectVoiceForLang:type:gender:footprint:]
  +[VSMobileAssetsManager installedAssetsForType:voicename:language:gender:footprint:]
  +[VSMobileAssetsManager installedVoiceResources]
  +[VSMobileAssetsManager isVoiceAssetWellDefined:]
  +[VSMobileAssetsManager getLatestAssetFromArray:]
  +[VSMobileAssetsManager queryForLanguage:forType:voicename:gender:footprint:returnTypes:]

  // instance methods
  -[VSMobileAssetsManager init]
  -[VSMobileAssetsManager .cxx_destruct]
  -[VSMobileAssetsManager resetCache]
  -[VSMobileAssetsManager selectVoiceResourceAssetForLanguage:]
  -[VSMobileAssetsManager migrateAssetIfNeededWithAssetType:]
  -[VSMobileAssetsManager downloadCatalog:options:completion:]
  -[VSMobileAssetsManager _getVoiceAssetsForType:voicename:language:gender:footprint:returnTypes:]
  -[VSMobileAssetsManager voiceDataFromAsset:]
  -[VSMobileAssetsManager legacyLocalVocalizerVoiceAssetForLanguage:]
  -[VSMobileAssetsManager preinstallAssetsMetadata]
  -[VSMobileAssetsManager voiceAssetFromPreinstallMetadata:]
  -[VSMobileAssetsManager preinstalledVoicesForLanguage:gender:]
  -[VSMobileAssetsManager _getResults:]
  -[VSMobileAssetsManager _installedVoiceResourceAssetForLanguage:]
  -[VSMobileAssetsManager _purgeAsset:]
  -[VSMobileAssetsManager amendVoiceWithDefaultSettings:]
  -[VSMobileAssetsManager selectVoiceForLang:type:gender:footprint:]
  -[VSMobileAssetsManager activeVoiceAssets]
  -[VSMobileAssetsManager installedAssetsForType:voicename:language:gender:footprint:]
  -[VSMobileAssetsManager inactiveVoiceAssets]
  -[VSMobileAssetsManager installedVoiceResources]
  -[VSMobileAssetsManager _localVoiceForLanguage:gender:]
  -[VSMobileAssetsManager _builtInVoiceForLanguage:]
  -[VSMobileAssetsManager _nonCacheVoiceSelectionForLanguage:type:gender:footprint:]
  -[VSMobileAssetsManager selectPreinstalledVoiceForLanguage:gender:]
  -[VSMobileAssetsManager downloadVoiceAsset:discretionary:useBattery:progressUpdateHandler:]
  -[VSMobileAssetsManager assetQueryQueue]
  -[VSMobileAssetsManager downloadCatalog:options:]
  -[VSMobileAssetsManager _downloadAsset:options:progress:completion:]
  -[VSMobileAssetsManager populateVoiceData:fromAsset:]
  -[VSMobileAssetsManager migrateAssets]
  -[VSMobileAssetsManager cleanUnusedVoiceAssets]
  -[VSMobileAssetsManager cleanOldVoiceResources]
  -[VSMobileAssetsManager downloadVoiceAsset:useBattery:progressUpdateHandler:]
  -[VSMobileAssetsManager downloadVoiceAsset:discretionary:progressUpdateHandler:]
  -[VSMobileAssetsManager cancelDownload:completion:]
  -[VSMobileAssetsManager removeVoiceAsset:completion:]
  -[VSMobileAssetsManager downloadVoiceResource:discretionary:completion:]
  -[VSMobileAssetsManager removeVoiceResource:completion:]
  -[VSMobileAssetsManager voiceAssetWithName:localOnly:outError:]
  -[VSMobileAssetsManager purgeAsset:]
  -[VSMobileAssetsManager setAssetQueryQueue:]


VSSpeechInternalSettings : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isInternalBuild
 @property  NSUserDefaults *internalDefaults
 @property  BOOL internalBuild
 @property  BOOL enableAudioDump
 @property  BOOL disableCache
 @property  BOOL disableAssetCleaning
 @property  BOOL enableLocalVoices
 @property  float defaultVolume
 @property  BOOL whisper
 @property  float serverTTSTimeout
 @property  BOOL disableDeviceRacing
 @property  BOOL forceServerTTS
 @property  BOOL disableServerTTS
 @property  BOOL disableOsprey
 @property  BOOL forceOsprey
 @property  BOOL disableOspreyStreaming
 @property  float streamBufferDuration
 @property  BOOL useBetaVoice
 @property  NSString *ospreyEndpointURL

  // class methods
  +[VSSpeechInternalSettings standardInstance]

  // instance methods
  -[VSSpeechInternalSettings init]
  -[VSSpeechInternalSettings .cxx_destruct]
  -[VSSpeechInternalSettings isInternalBuild]
  -[VSSpeechInternalSettings internalBuild]
  -[VSSpeechInternalSettings disableCache]
  -[VSSpeechInternalSettings internalDefaults]
  -[VSSpeechInternalSettings setIsInternalBuild:]
  -[VSSpeechInternalSettings disableAssetCleaning]
  -[VSSpeechInternalSettings enableLocalVoices]
  -[VSSpeechInternalSettings useBetaVoice]
  -[VSSpeechInternalSettings enableAudioDump]
  -[VSSpeechInternalSettings setEnableAudioDump:]
  -[VSSpeechInternalSettings setDisableCache:]
  -[VSSpeechInternalSettings setDisableAssetCleaning:]
  -[VSSpeechInternalSettings setEnableLocalVoices:]
  -[VSSpeechInternalSettings whisper]
  -[VSSpeechInternalSettings setWhisper:]
  -[VSSpeechInternalSettings serverTTSTimeout]
  -[VSSpeechInternalSettings setServerTTSTimeout:]
  -[VSSpeechInternalSettings defaultVolume]
  -[VSSpeechInternalSettings setDefaultVolume:]
  -[VSSpeechInternalSettings forceServerTTS]
  -[VSSpeechInternalSettings setForceServerTTS:]
  -[VSSpeechInternalSettings disableServerTTS]
  -[VSSpeechInternalSettings setDisableServerTTS:]
  -[VSSpeechInternalSettings disableDeviceRacing]
  -[VSSpeechInternalSettings setDisableDeviceRacing:]
  -[VSSpeechInternalSettings disableOsprey]
  -[VSSpeechInternalSettings setDisableOsprey:]
  -[VSSpeechInternalSettings forceOsprey]
  -[VSSpeechInternalSettings setForceOsprey:]
  -[VSSpeechInternalSettings disableOspreyStreaming]
  -[VSSpeechInternalSettings setDisableOspreyStreaming:]
  -[VSSpeechInternalSettings streamBufferDuration]
  -[VSSpeechInternalSettings setStreamBufferDuration:]
  -[VSSpeechInternalSettings setUseBetaVoice:]
  -[VSSpeechInternalSettings ospreyEndpointURL]
  -[VSSpeechInternalSettings setOspreyEndpointURL:]
  -[VSSpeechInternalSettings setInternalDefaults:]


VSSpeechSynthesizerPreference : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSSpeechSynthesizerPreference availableLanguages]
  +[VSSpeechSynthesizerPreference fallbackLanguageForLanguage:]


VSUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSUtilities isInternalBuild]
  +[VSUtilities isWatch]
  +[VSUtilities isAudioAccessory]
  +[VSUtilities hardwarePlatform]
  +[VSUtilities isSeedBuild]
  +[VSUtilities hasANE]
  +[VSUtilities isNeuralTTSPlatform]
  +[VSUtilities hasAMX]
  +[VSUtilities legacyPlatforms]


VSWordTimingService : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDictionary *wordTimings

  // instance methods
  -[VSWordTimingService .cxx_destruct]
  -[VSWordTimingService setWordTimings:]
  -[VSWordTimingService wordTimings]
  -[VSWordTimingService timingPlistForLanguage:]
  -[VSWordTimingService timingInfosFrom:withText:]
  -[VSWordTimingService estimatedTTSWordTimingForText:withLanguage:withGender:]


VSRecognitionResult : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSRecognitionResult initialize]
  +[VSRecognitionResult recognitionResultWithModelIdentifier:classIdentifiers:values:]

  // instance methods
  -[VSRecognitionResult init]
  -[VSRecognitionResult retainCount]
  -[VSRecognitionResult isEqual:]
  -[VSRecognitionResult retain]
  -[VSRecognitionResult release]
  -[VSRecognitionResult modelIdentifier]
  -[VSRecognitionResult elementCount]
  -[VSRecognitionResult getElementClassIdentifier:value:atIndex:]
  -[VSRecognitionResult recognitionResultByReplacingValueForClassIdentifier:withValue:]
  -[VSRecognitionResult valueOfFirstElementWithClassIdentifier:]
  -[VSRecognitionResult createHandler]
  -[VSRecognitionResult setRecognitionAction:]
  -[VSRecognitionResult recognitionAction]


VSRecognitionSession : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VSRecognitionSession init]
  -[VSRecognitionSession dealloc]
  -[VSRecognitionSession isValid]
  -[VSRecognitionSession setDelegate:]
  -[VSRecognitionSession _init]
  -[VSRecognitionSession cancel]
  -[VSRecognitionSession isFinished]
  -[VSRecognitionSession reset]
  -[VSRecognitionSession isBusy]
  -[VSRecognitionSession _setAction:]
  -[VSRecognitionSession speechSynthesizer:didFinishSpeaking:withError:]
  -[VSRecognitionSession _notifyDelegateActionStarted]
  -[VSRecognitionSession _currentRecognizeAction]
  -[VSRecognitionSession initWithModelIdentifier:]
  -[VSRecognitionSession cancelMaintainingKeepAlive:]
  -[VSRecognitionSession spokenFeedbackString]
  -[VSRecognitionSession spokenFeedbackAttributedString]
  -[VSRecognitionSession _createKeywordIndex]
  -[VSRecognitionSession _createPhaseSortedKeywordsFromArray:]
  -[VSRecognitionSession _topLevelKeywords]
  -[VSRecognitionSession _keywordIndexChanged]
  -[VSRecognitionSession _beginSpeakingAttributedString:]
  -[VSRecognitionSession beginSpeakingString:]
  -[VSRecognitionSession _beginSpeakingString:attributedString:]
  -[VSRecognitionSession _notifyDelegateFinishedSpeakingWithError:]
  -[VSRecognitionSession beginNextAction]
  -[VSRecognitionSession isRecognizing]
  -[VSRecognitionSession isActivelyRecognizing]
  -[VSRecognitionSession hasDeferredAction]
  -[VSRecognitionSession nextActionWillTerminateSession]
  -[VSRecognitionSession nextActionWillRecognize]
  -[VSRecognitionSession setSensitiveActionsEnabled:]
  -[VSRecognitionSession sensitiveActionsEnabled]
  -[VSRecognitionSession setBluetoothInputAllowed:]
  -[VSRecognitionSession _actionCompleted:nextAction:error:]
  -[VSRecognitionSession _actionStarted:]
  -[VSRecognitionSession _notifyDelegateOpenURL:]
  -[VSRecognitionSession _recognitionResultHandlingThread]
  -[VSRecognitionSession recognitionResultHandlingThread:didHandleResults:nextAction:]
  -[VSRecognitionSession displayResultString]
  -[VSRecognitionSession displayStatusString]
  -[VSRecognitionSession setInputLevelUpdateInterval:]
  -[VSRecognitionSession inputLevel]
  -[VSRecognitionSession inputLevelDB]
  -[VSRecognitionSession setKeywordPhase:]
  -[VSRecognitionSession keywordAtIndex:]
  -[VSRecognitionSession keywordCount]
  -[VSRecognitionSession _keywordsForModelIdentifier:]
  -[VSRecognitionSession beginSpeakingFeedbackString]
  -[VSRecognitionSession setDebugDumpEnabled:]
  -[VSRecognitionSession debugDumpPath]
  -[VSRecognitionSession setNextRecognitionAudioInputPath:]
  -[VSRecognitionSession setNextRecognitionRequiresReset:]
  -[VSRecognitionSession setPreferredEngine:]
  -[VSRecognitionSession setPerformRecognitionHandlerActions:]


VSOpusDecoder : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSOpusDecoder sharedInstance]

  // instance methods
  -[VSOpusDecoder dealloc]
  -[VSOpusDecoder beginChunkDecoderForStreamDescription:]
  -[VSOpusDecoder decodeChunk:outError:]
  -[VSOpusDecoder endChunkDecoding]
  -[VSOpusDecoder _opusDecoder:]
  -[VSOpusDecoder decodeChunks:streamDescription:outError:]


VSRecognitionAction : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VSRecognitionAction dealloc]
  -[VSRecognitionAction cancel]
  -[VSRecognitionAction _session]
  -[VSRecognitionAction perform]
  -[VSRecognitionAction completionType]
  -[VSRecognitionAction _continueAfterDeferredStart]
  -[VSRecognitionAction _hasDeferredStartCallback]
  -[VSRecognitionAction _setSession:]
  -[VSRecognitionAction spokenFeedbackString]
  -[VSRecognitionAction spokenFeedbackAttributedString]
  -[VSRecognitionAction resultDisplayString]
  -[VSRecognitionAction statusDisplayString]
  -[VSRecognitionAction sensitiveActionsEnabled]
  -[VSRecognitionAction setResultDisplayString:]
  -[VSRecognitionAction setStatusDisplayString:]
  -[VSRecognitionAction setSpokenFeedbackString:]
  -[VSRecognitionAction setSpokenFeedbackAttributedString:]
  -[VSRecognitionAction completeWithNextAction:error:]


VSLocalizedString : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSLocalizedString localizedStringForKey:language:gender:table:]
  +[VSLocalizedString localizedInterstitialStringForKey:language:gender:]
  +[VSLocalizedString localizedOOBStringForKey:language:gender:]


VSRecognitionDisambiguateAction : VSRecognitionRecognizeAction
  // instance methods
  -[VSRecognitionDisambiguateAction dealloc]
  -[VSRecognitionDisambiguateAction setKeywords:]
  -[VSRecognitionDisambiguateAction _keywords]
  -[VSRecognitionDisambiguateAction completionType]
  -[VSRecognitionDisambiguateAction _keywordIndexChanged]
  -[VSRecognitionDisambiguateAction _disambiguationContext]
  -[VSRecognitionDisambiguateAction setRepeatedSpokenFeedbackString:]
  -[VSRecognitionDisambiguateAction repeatedSpokenFeedbackString]
  -[VSRecognitionDisambiguateAction sequenceTag]
  -[VSRecognitionDisambiguateAction setSequenceTag:]
  -[VSRecognitionDisambiguateAction knownValueForClassIdentifier:]
  -[VSRecognitionDisambiguateAction setKnownValue:phoneticValue:forClassIdentifier:]
  -[VSRecognitionDisambiguateAction knownValuesForClassIdentifier:]
  -[VSRecognitionDisambiguateAction setKnownValues:phoneticValues:forClassIdentifier:]
  -[VSRecognitionDisambiguateAction ambiguousValuesForClassIdentifier:]
  -[VSRecognitionDisambiguateAction setAmbiguousValues:phoneticValues:forClassIdentifier:]
  -[VSRecognitionDisambiguateAction _createRecognitionInstanceWithCallbacks:info:]
  -[VSRecognitionDisambiguateAction _actionForEmptyResults]


VSSpeechCharacterSet : NSObject /usr/lib/libSystem.B.dylib
 @property  NSCharacterSet *characterSet

  // class methods
  +[VSSpeechCharacterSet languageMapping]

  // instance methods
  -[VSSpeechCharacterSet .cxx_destruct]
  -[VSSpeechCharacterSet characterSet]
  -[VSSpeechCharacterSet setCharacterSet:]
  -[VSSpeechCharacterSet initWithLanguage:]
  -[VSSpeechCharacterSet unspeakableRangeOfText:]


VSRecognitionRecognizeAction : VSRecognitionAction
  // instance methods
  -[VSRecognitionRecognizeAction dealloc]
  -[VSRecognitionRecognizeAction cancel]
  -[VSRecognitionRecognizeAction _reset]
  -[VSRecognitionRecognizeAction _keywords]
  -[VSRecognitionRecognizeAction modelIdentifier]
  -[VSRecognitionRecognizeAction perform]
  -[VSRecognitionRecognizeAction _setResults:]
  -[VSRecognitionRecognizeAction completionType]
  -[VSRecognitionRecognizeAction _continueAfterDeferredStart]
  -[VSRecognitionRecognizeAction _hasDeferredStartCallback]
  -[VSRecognitionRecognizeAction _debugDumpPath]
  -[VSRecognitionRecognizeAction initWithModelIdentifier:]
  -[VSRecognitionRecognizeAction _isRecognizing]
  -[VSRecognitionRecognizeAction _isActivelyRecognizing]
  -[VSRecognitionRecognizeAction _setBluetoothInputAllowed:]
  -[VSRecognitionRecognizeAction _setDebugDumpPath:]
  -[VSRecognitionRecognizeAction _setDebugDumpEnabled:]
  -[VSRecognitionRecognizeAction _setPreferredEngine:]
  -[VSRecognitionRecognizeAction _setAudioInputPath:]
  -[VSRecognitionRecognizeAction _setInputLevelUpdateInterval:]
  -[VSRecognitionRecognizeAction _setEngineResetRequired:]
  -[VSRecognitionRecognizeAction _handledThreadedResults:nextAction:]
  -[VSRecognitionRecognizeAction _inputLevel]
  -[VSRecognitionRecognizeAction _inputLevelDB]
  -[VSRecognitionRecognizeAction _keywordAtIndex:]
  -[VSRecognitionRecognizeAction _keywordCount]
  -[VSRecognitionRecognizeAction _keywordIndexChanged]
  -[VSRecognitionRecognizeAction _createRecognitionInstanceWithCallbacks:info:]
  -[VSRecognitionRecognizeAction _actionForEmptyResults]
  -[VSRecognitionRecognizeAction _setDebugDumpEnabled:dumpPath:]
  -[VSRecognitionRecognizeAction _configureNewRecognitionInstance]
  -[VSRecognitionRecognizeAction _releaseFromPrepare]
  -[VSRecognitionRecognizeAction _handleRecognitionPrepared:]
  -[VSRecognitionRecognizeAction _handleRecognitionStarted:]
  -[VSRecognitionRecognizeAction _handleRecognitionCompleted:withResults:error:]


VSVoiceResourceAsset : VSAssetBase <NSSecureCoding>
 @property  NSDictionary *voiceConfig
 @property  float rate
 @property  float pitch
 @property  float volume
 @property  NSDictionary *vocalizerConfig
 @property  NSArray *languages
 @property  NSArray *resourceList
 @property  NSDictionary *resourceMimeTypes
 @property  NSURL *searchPathURL

  // class methods
  +[VSVoiceResourceAsset supportsSecureCoding]

  // instance methods
  -[VSVoiceResourceAsset key]
  -[VSVoiceResourceAsset encodeWithCoder:]
  -[VSVoiceResourceAsset initWithCoder:]
  -[VSVoiceResourceAsset .cxx_destruct]
  -[VSVoiceResourceAsset pitch]
  -[VSVoiceResourceAsset setPitch:]
  -[VSVoiceResourceAsset languages]
  -[VSVoiceResourceAsset setLanguages:]
  -[VSVoiceResourceAsset volume]
  -[VSVoiceResourceAsset setVolume:]
  -[VSVoiceResourceAsset setRate:]
  -[VSVoiceResourceAsset rate]
  -[VSVoiceResourceAsset defaultVoiceType]
  -[VSVoiceResourceAsset defaultVoiceGender]
  -[VSVoiceResourceAsset defaultVoice]
  -[VSVoiceResourceAsset defaultVoiceFootprint]
  -[VSVoiceResourceAsset setSearchPathURL:]
  -[VSVoiceResourceAsset vocalizerConfig]
  -[VSVoiceResourceAsset searchPathURL]
  -[VSVoiceResourceAsset voiceConfig]
  -[VSVoiceResourceAsset resourceMimeTypes]
  -[VSVoiceResourceAsset resourceList]
  -[VSVoiceResourceAsset serverVoiceNameForGender:]
  -[VSVoiceResourceAsset defaultTypeString]
  -[VSVoiceResourceAsset defaultFootprintString]
  -[VSVoiceResourceAsset setVoiceConfig:]
  -[VSVoiceResourceAsset setVocalizerConfig:]
  -[VSVoiceResourceAsset setResourceList:]
  -[VSVoiceResourceAsset setResourceMimeTypes:]


VSSpeechWordTimingInfo : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  double startTime
 @property  {_NSRange=QQ} textRange

  // class methods
  +[VSSpeechWordTimingInfo supportsSecureCoding]
  +[VSSpeechWordTimingInfo extraBytesFromUTF8ToUTF16With:totalLength:begin:end:]
  +[VSSpeechWordTimingInfo wordTimingInfoFrom:timestamps:]
  +[VSSpeechWordTimingInfo utf16TimingInfoWithUTF8Range:withText:]

  // instance methods
  -[VSSpeechWordTimingInfo encodeWithCoder:]
  -[VSSpeechWordTimingInfo initWithCoder:]
  -[VSSpeechWordTimingInfo startTime]
  -[VSSpeechWordTimingInfo setStartTime:]
  -[VSSpeechWordTimingInfo textRange]
  -[VSSpeechWordTimingInfo setTextRange:]


VSNeuralTTSUtils : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSNeuralTTSUtils isANEModelCompiled:]
  +[VSNeuralTTSUtils compileANEModel:]


VSCacheUpdateListener : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[VSCacheUpdateListener sharedListener]
  +[VSCacheUpdateListener sharedListenerIfExists]

  // instance methods
  -[VSCacheUpdateListener init]
  -[VSCacheUpdateListener dealloc]
  -[VSCacheUpdateListener _initShared]
  -[VSCacheUpdateListener _flush]
  -[VSCacheUpdateListener startListening]
  -[VSCacheUpdateListener stopListening]
  -[VSCacheUpdateListener _enqueueRequest:]
  -[VSCacheUpdateListener _spokenLanguageChanged:]
  -[VSCacheUpdateListener performUpdateForModelIdentifier:classIdentifier:]


VSCacheUpdateRequest : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VSCacheUpdateRequest dealloc]
  -[VSCacheUpdateRequest modelIdentifier]
  -[VSCacheUpdateRequest classIdentifier]
  -[VSCacheUpdateRequest initWithModelIdentifier:classIdentifier:]
  -[VSCacheUpdateRequest coalescedRequest:]


VSRecognitionConfirmAction : VSRecognitionRecognizeAction
  // instance methods
  -[VSRecognitionConfirmAction init]
  -[VSRecognitionConfirmAction dealloc]
  -[VSRecognitionConfirmAction completionType]
  -[VSRecognitionConfirmAction initWithModelIdentifier:]
  -[VSRecognitionConfirmAction _setConfirmed:]
  -[VSRecognitionConfirmAction setConfirmedAction:]
  -[VSRecognitionConfirmAction confirmedAction]
  -[VSRecognitionConfirmAction setDeniedAction:]
  -[VSRecognitionConfirmAction deniedAction]


VSRecognitionURLAction : VSRecognitionAction
  // instance methods
  -[VSRecognitionURLAction dealloc]
  -[VSRecognitionURLAction setURL:]
  -[VSRecognitionURLAction URL]
  -[VSRecognitionURLAction perform]
  -[VSRecognitionURLAction completionType]


VSRecognitionSpeakAction : VSRecognitionAction
  // instance methods
  -[VSRecognitionSpeakAction perform]
  -[VSRecognitionSpeakAction completionType]
  -[VSRecognitionSpeakAction initWithSpokenFeedbackString:willTerminate:]


VSPresynthesizedAudioRequest : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *clientBundleIdentifier
 @property  unsigned long pcmDataSize
 @property  @? stopHandler
 @property  unsigned int audioSessionID
 @property  NSData *audioData
 @property  {AudioStreamBasicDescription=dIIIIIIII} decoderStreamDescription
 @property  {AudioStreamBasicDescription=dIIIIIIII} playerStreamDescription
 @property  BOOL enqueue
 @property  NSString *text
 @property  NSString *identifier
 @property  unsigned long requestCreatedTimestamp

  // class methods
  +[VSPresynthesizedAudioRequest supportsSecureCoding]

  // instance methods
  -[VSPresynthesizedAudioRequest init]
  -[VSPresynthesizedAudioRequest copyWithZone:]
  -[VSPresynthesizedAudioRequest isValid]
  -[VSPresynthesizedAudioRequest encodeWithCoder:]
  -[VSPresynthesizedAudioRequest initWithCoder:]
  -[VSPresynthesizedAudioRequest .cxx_destruct]
  -[VSPresynthesizedAudioRequest identifier]
  -[VSPresynthesizedAudioRequest setIdentifier:]
  -[VSPresynthesizedAudioRequest initWithIdentifier:]
  -[VSPresynthesizedAudioRequest text]
  -[VSPresynthesizedAudioRequest setText:]
  -[VSPresynthesizedAudioRequest enqueue]
  -[VSPresynthesizedAudioRequest clientBundleIdentifier]
  -[VSPresynthesizedAudioRequest setEnqueue:]
  -[VSPresynthesizedAudioRequest audioSessionID]
  -[VSPresynthesizedAudioRequest setAudioSessionID:]
  -[VSPresynthesizedAudioRequest audioData]
  -[VSPresynthesizedAudioRequest decoderStreamDescription]
  -[VSPresynthesizedAudioRequest playerStreamDescription]
  -[VSPresynthesizedAudioRequest setClientBundleIdentifier:]
  -[VSPresynthesizedAudioRequest requestCreatedTimestamp]
  -[VSPresynthesizedAudioRequest setRequestCreatedTimestamp:]
  -[VSPresynthesizedAudioRequest initWithAudioData:decoderStreamDescription:playerStreamDescription:]
  -[VSPresynthesizedAudioRequest initWithAudioData:playerStreamDescription:]
  -[VSPresynthesizedAudioRequest pcmDataSize]
  -[VSPresynthesizedAudioRequest setPcmDataSize:]
  -[VSPresynthesizedAudioRequest stopHandler]
  -[VSPresynthesizedAudioRequest setStopHandler:]


VSRecognitionResultHandlingThread : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VSRecognitionResultHandlingThread init]
  -[VSRecognitionResultHandlingThread dealloc]
  -[VSRecognitionResultHandlingThread invalidate]
  -[VSRecognitionResultHandlingThread setDelegate:]
  -[VSRecognitionResultHandlingThread handleResults:withHandler:]
  -[VSRecognitionResultHandlingThread _handleRequests]
  -[VSRecognitionResultHandlingThread _notifyRequestHandled:]


VSRecognitionResultHandlingRequest : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VSRecognitionResultHandlingRequest dealloc]
  -[VSRecognitionResultHandlingRequest handler]
  -[VSRecognitionResultHandlingRequest results]
  -[VSRecognitionResultHandlingRequest initWithHandler:results:]
  -[VSRecognitionResultHandlingRequest nextAction]
  -[VSRecognitionResultHandlingRequest setNextAction:]


VSTextPreProcessor : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VSTextPreProcessor dealloc]
  -[VSTextPreProcessor initWithContentsOfPath:languageIdentifier:]
  -[VSTextPreProcessor processedTextFromString:]


VSTextPreProcessorRule : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VSTextPreProcessorRule dealloc]
  -[VSTextPreProcessorRule initWithDictionaryRepresentation:]
  -[VSTextPreProcessorRule matchedString:forTokenInRange:]


VSFormatArgument : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VSFormatArgument dealloc]


VSSpeechRequest : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSAttributedString *attributedText
 @property  BOOL useCustomVoice
 @property  BOOL audioSessionIDIsValid
 @property  BOOL maintainsInput
 @property  unsigned int audioQueueFlags
 @property  NSString *utterance
 @property  NSString *clientBundleIdentifier
 @property  unsigned long requestCreatedTimestamp
 @property  @? stopHandler
 @property  @? pauseHandler
 @property  long long pointer
 @property  NSString *voiceName
 @property  NSString *text
 @property  NSString *languageCode
 @property  long long footprint
 @property  long long voiceType
 @property  long long gender
 @property  NSURL *outputPath
 @property  BOOL shouldCache
 @property  double rate
 @property  double pitch
 @property  double volume
 @property  NSDictionary *contextInfo
 @property  BOOL disableCompactVoiceFallback
 @property  unsigned int audioSessionID
 @property  BOOL forceServerTTS
 @property  BOOL canUseServerTTS
 @property  BOOL retryDeviceOnNetworkStall
 @property  NSURL *resourceListURL
 @property  NSURL *resourceSearchPathURL

  // class methods
  +[VSSpeechRequest supportsSecureCoding]

  // instance methods
  -[VSSpeechRequest init]
  -[VSSpeechRequest copyWithZone:]
  -[VSSpeechRequest encodeWithCoder:]
  -[VSSpeechRequest initWithCoder:]
  -[VSSpeechRequest .cxx_destruct]
  -[VSSpeechRequest languageCode]
  -[VSSpeechRequest pitch]
  -[VSSpeechRequest text]
  -[VSSpeechRequest setPitch:]
  -[VSSpeechRequest setText:]
  -[VSSpeechRequest setAttributedText:]
  -[VSSpeechRequest attributedText]
  -[VSSpeechRequest volume]
  -[VSSpeechRequest setVolume:]
  -[VSSpeechRequest setRate:]
  -[VSSpeechRequest rate]
  -[VSSpeechRequest shouldCache]
  -[VSSpeechRequest setLanguageCode:]
  -[VSSpeechRequest setContextInfo:]
  -[VSSpeechRequest setShouldCache:]
  -[VSSpeechRequest pauseHandler]
  -[VSSpeechRequest setPauseHandler:]
  -[VSSpeechRequest gender]
  -[VSSpeechRequest setGender:]
  -[VSSpeechRequest clientBundleIdentifier]
  -[VSSpeechRequest setVoiceName:]
  -[VSSpeechRequest voiceName]
  -[VSSpeechRequest utterance]
  -[VSSpeechRequest setUtterance:]
  -[VSSpeechRequest contextInfo]
  -[VSSpeechRequest isSimilarTo:]
  -[VSSpeechRequest audioSessionID]
  -[VSSpeechRequest setAudioSessionID:]
  -[VSSpeechRequest footprint]
  -[VSSpeechRequest setCanUseServerTTS:]
  -[VSSpeechRequest setVoiceType:]
  -[VSSpeechRequest setFootprint:]
  -[VSSpeechRequest pointer]
  -[VSSpeechRequest voiceType]
  -[VSSpeechRequest canUseServerTTS]
  -[VSSpeechRequest setClientBundleIdentifier:]
  -[VSSpeechRequest requestCreatedTimestamp]
  -[VSSpeechRequest setRequestCreatedTimestamp:]
  -[VSSpeechRequest forceServerTTS]
  -[VSSpeechRequest setForceServerTTS:]
  -[VSSpeechRequest stopHandler]
  -[VSSpeechRequest setStopHandler:]
  -[VSSpeechRequest contextInfoString]
  -[VSSpeechRequest outputPath]
  -[VSSpeechRequest setOutputPath:]
  -[VSSpeechRequest disableCompactVoiceFallback]
  -[VSSpeechRequest setDisableCompactVoiceFallback:]
  -[VSSpeechRequest resourceListURL]
  -[VSSpeechRequest setResourceListURL:]
  -[VSSpeechRequest resourceSearchPathURL]
  -[VSSpeechRequest setResourceSearchPathURL:]
  -[VSSpeechRequest retryDeviceOnNetworkStall]
  -[VSSpeechRequest setRetryDeviceOnNetworkStall:]
  -[VSSpeechRequest useCustomVoice]
  -[VSSpeechRequest setUseCustomVoice:]
  -[VSSpeechRequest audioSessionIDIsValid]
  -[VSSpeechRequest setAudioSessionIDIsValid:]
  -[VSSpeechRequest maintainsInput]
  -[VSSpeechRequest setMaintainsInput:]
  -[VSSpeechRequest audioQueueFlags]
  -[VSSpeechRequest setAudioQueueFlags:]
  -[VSSpeechRequest setPointer:]


VSAudioPreviewDelegate : NSObject /usr/lib/libSystem.B.dylib <AVAudioPlayerDelegate>
 @property  @? completion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSAudioPreviewDelegate .cxx_destruct]
  -[VSAudioPreviewDelegate setCompletion:]
  -[VSAudioPreviewDelegate completion]
  -[VSAudioPreviewDelegate audioPlayerDidFinishPlaying:successfully:]


VSDurationRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  @? completion

  // instance methods
  -[VSDurationRequest .cxx_destruct]
  -[VSDurationRequest setCompletion:]
  -[VSDurationRequest completion]


VSSpeechSynthesizer : NSObject /usr/lib/libSystem.B.dylib <VSSpeechConnectionDelegate>
 @property  NSString *language
 @property  long long footprint
 @property  BOOL useCustomVoice
 @property  long long voiceType
 @property  long long gender
 @property  NSMutableDictionary *durationRequests
 @property  <VSSpeechSynthesizerDelegate> *delegate
 @property  float rate
 @property  float pitch
 @property  float volume
 @property  NSString *voice

  // class methods
  +[VSSpeechSynthesizer sharedInstance]
  +[VSSpeechSynthesizer availableVoices]
  +[VSSpeechSynthesizer availableLanguageCodes]
  +[VSSpeechSynthesizer errorWithReason:]
  +[VSSpeechSynthesizer getVoiceResourceForLanguage:reply:]
  +[VSSpeechSynthesizer isSystemSpeaking]
  +[VSSpeechSynthesizer validateRequest:]
  +[VSSpeechSynthesizer validatePresynthesizedAudioRequest:]
  +[VSSpeechSynthesizer characterClassCountForUtterance:language:]
  +[VSSpeechSynthesizer setLogToFile:]
  +[VSSpeechSynthesizer getLogToFile:]
  +[VSSpeechSynthesizer availableVoicesForLanguageCode:]
  +[VSSpeechSynthesizer availableFootprintsForVoice:languageCode:]
  +[VSSpeechSynthesizer getLocalVoiceAssets:]
  +[VSSpeechSynthesizer getLocalVoiceResources:]
  +[VSSpeechSynthesizer getVoiceInfoForLanguageCode:footprint:gender:type:reply:]
  +[VSSpeechSynthesizer setAutoDownloadedVoiceAssets:]
  +[VSSpeechSynthesizer getAutoDownloadedVoiceAssets:]
  +[VSSpeechSynthesizer playVoicePreviewForLanguageCode:gender:]
  +[VSSpeechSynthesizer getAllVoiceAssets:]
  +[VSSpeechSynthesizer getVoiceInfoForLanguageCode:footprint:gender:custom:reply:]

  // instance methods
  -[VSSpeechSynthesizer init]
  -[VSSpeechSynthesizer delegate]
  -[VSSpeechSynthesizer setDelegate:]
  -[VSSpeechSynthesizer .cxx_destruct]
  -[VSSpeechSynthesizer pitch]
  -[VSSpeechSynthesizer setPitch:]
  -[VSSpeechSynthesizer language]
  -[VSSpeechSynthesizer setLanguage:]
  -[VSSpeechSynthesizer _setDelegate:]
  -[VSSpeechSynthesizer volume]
  -[VSSpeechSynthesizer setVolume:]
  -[VSSpeechSynthesizer setRate:]
  -[VSSpeechSynthesizer rate]
  -[VSSpeechSynthesizer voice]
  -[VSSpeechSynthesizer setVoice:]
  -[VSSpeechSynthesizer startSpeakingRequest:]
  -[VSSpeechSynthesizer stopSpeakingAtNextBoundary:synchronously:error:]
  -[VSSpeechSynthesizer gender]
  -[VSSpeechSynthesizer setGender:]
  -[VSSpeechSynthesizer startSynthesizingRequest:]
  -[VSSpeechSynthesizer isSpeaking]
  -[VSSpeechSynthesizer speechString]
  -[VSSpeechSynthesizer footprint]
  -[VSSpeechSynthesizer killDaemon]
  -[VSSpeechSynthesizer setVoiceType:]
  -[VSSpeechSynthesizer setFootprint:]
  -[VSSpeechSynthesizer voiceType]
  -[VSSpeechSynthesizer availableLanguageCodes]
  -[VSSpeechSynthesizer stopSpeakingAtNextBoundary:error:]
  -[VSSpeechSynthesizer initForInputFeedback]
  -[VSSpeechSynthesizer startSpeakingAttributedString:toURL:withLanguageCode:error:]
  -[VSSpeechSynthesizer startSpeakingString:withLanguageCode:error:]
  -[VSSpeechSynthesizer useCustomVoice]
  -[VSSpeechSynthesizer setUseCustomVoice:]
  -[VSSpeechSynthesizer getVoiceResourceForLanguage:reply:]
  -[VSSpeechSynthesizer prewarmIfNeededWithRequest:]
  -[VSSpeechSynthesizer isSystemSpeaking]
  -[VSSpeechSynthesizer _stopSpeakingRequest:atNextBoundary:synchronously:error:]
  -[VSSpeechSynthesizer _stopSpeakingPresynthesizedAudioRequest:synchronously:error:]
  -[VSSpeechSynthesizer connection:presynthesizedAudioRequest:didStopAtEnd:error:]
  -[VSSpeechSynthesizer cachePresynthesizedAudioRequest:]
  -[VSSpeechSynthesizer _pauseSpeakingRequest:atNextBoundary:synchronously:error:]
  -[VSSpeechSynthesizer durationRequests]
  -[VSSpeechSynthesizer setLogToFile:]
  -[VSSpeechSynthesizer getLogToFile:]
  -[VSSpeechSynthesizer _startSpeakingString:orAttributedString:toURL:withLanguageCode:request:error:]
  -[VSSpeechSynthesizer pauseSpeakingAtNextBoundary:synchronously:error:]
  -[VSSpeechSynthesizer _continueSpeakingRequest:withError:]
  -[VSSpeechSynthesizer startSpeakingString:toURL:withLanguageCode:error:]
  -[VSSpeechSynthesizer availableVoicesForLanguageCode:]
  -[VSSpeechSynthesizer availableFootprintsForVoice:languageCode:]
  -[VSSpeechSynthesizer getTTSServerVoicesWithFilter:reply:]
  -[VSSpeechSynthesizer forwardStreamObject:]
  -[VSSpeechSynthesizer beginAudioPowerUpdateWithReply:]
  -[VSSpeechSynthesizer endAudioPowerUpdate]
  -[VSSpeechSynthesizer cleanUnusedAssets:]
  -[VSSpeechSynthesizer getLocalVoiceAssets:]
  -[VSSpeechSynthesizer getLocalVoiceResources:]
  -[VSSpeechSynthesizer getVoiceInfoForLanguageCode:footprint:gender:type:reply:]
  -[VSSpeechSynthesizer setAutoDownloadedVoiceAssets:]
  -[VSSpeechSynthesizer getAutoDownloadedVoiceAssets:]
  -[VSSpeechSynthesizer connection:speechRequestDidStart:]
  -[VSSpeechSynthesizer connection:speechRequestDidPause:]
  -[VSSpeechSynthesizer connection:speechRequestDidContinue:]
  -[VSSpeechSynthesizer connection:speechRequest:didStopAtEnd:phonemesSpoken:error:]
  -[VSSpeechSynthesizer connection:speechRequest:willSpeakMark:inRange:]
  -[VSSpeechSynthesizer connection:speechRequest:successWithInstrumentMetrics:]
  -[VSSpeechSynthesizer connection:speechRequest:didReceiveTimingInfo:]
  -[VSSpeechSynthesizer connection:synthesisRequest:didFinishWithInstrumentMetrics:error:]
  -[VSSpeechSynthesizer connection:presynthesizedAudioRequestDidStart:]
  -[VSSpeechSynthesizer connection:presynthesizedAudioRequest:successWithInstrumentMetrics:error:]
  -[VSSpeechSynthesizer queryPhaticCapability:]
  -[VSSpeechSynthesizer startSpeakingPresynthesizedAudioRequest:]
  -[VSSpeechSynthesizer stopSpeakingPresynthesizedAudioSynchronously:error:]
  -[VSSpeechSynthesizer minimumRate]
  -[VSSpeechSynthesizer maximumRate]
  -[VSSpeechSynthesizer stopSpeakingRequest:atNextBoundary:synchronously:error:]
  -[VSSpeechSynthesizer estimateDurationOfRequest:]
  -[VSSpeechSynthesizer estimateDurationOfRequest:completion:]
  -[VSSpeechSynthesizer setMaintainPersistentConnection:]
  -[VSSpeechSynthesizer setMaintainInactivePersistentConnection:]
  -[VSSpeechSynthesizer prewarmIfNeeded]
  -[VSSpeechSynthesizer startSpeakingString:request:error:]
  -[VSSpeechSynthesizer startSpeakingString:toURL:request:error:]
  -[VSSpeechSynthesizer startSpeakingString:withLanguageCode:request:error:]
  -[VSSpeechSynthesizer stopSpeakingRequest:atNextBoundary:error:]
  -[VSSpeechSynthesizer pauseSpeakingRequest:atNextBoundary:error:]
  -[VSSpeechSynthesizer pauseSpeakingRequest:atNextBoundary:synchronously:error:]
  -[VSSpeechSynthesizer pauseSpeakingAtNextBoundary:error:]
  -[VSSpeechSynthesizer continueSpeakingRequest:withError:]
  -[VSSpeechSynthesizer useSharedAudioSession:]
  -[VSSpeechSynthesizer useSpecificAudioSession:]
  -[VSSpeechSynthesizer useAudioQueueFlags:]
  -[VSSpeechSynthesizer startSynthesizingString:toFileURL:shouldCache:request:]
  -[VSSpeechSynthesizer startSpeakingString:error:]
  -[VSSpeechSynthesizer startSpeakingString:toURL:error:]
  -[VSSpeechSynthesizer continueSpeakingWithError:]
  -[VSSpeechSynthesizer setDurationRequests:]


VSPreferencesInterface : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUserDefaults *defaults
 @property  NSDate *lastTTSRequestDate
 @property  NSString *deviceUUID

  // class methods
  +[VSPreferencesInterface defaultInstance]

  // instance methods
  -[VSPreferencesInterface .cxx_destruct]
  -[VSPreferencesInterface initWithSuiteName:]
  -[VSPreferencesInterface defaults]
  -[VSPreferencesInterface setDefaults:]
  -[VSPreferencesInterface deviceUUID]
  -[VSPreferencesInterface autoDownloadedVoicesForClientID:]
  -[VSPreferencesInterface migrateDefaults]
  -[VSPreferencesInterface setAutoDownloadedVoices:withClientID:]
  -[VSPreferencesInterface setLastTTSRequestDate:]
  -[VSPreferencesInterface lastTTSRequestDate]


VSKeepAlive : NSObject /usr/lib/libSystem.B.dylib
 @property  long long audioType
 @property  BOOL active
 @property  BOOL keepAudioSessionActive

  // instance methods
  -[VSKeepAlive dealloc]
  -[VSKeepAlive .cxx_destruct]
  -[VSKeepAlive setActive:]
  -[VSKeepAlive _serverConnection]
  -[VSKeepAlive active]
  -[VSKeepAlive audioType]
  -[VSKeepAlive setAudioType:]
  -[VSKeepAlive setKeepAudioSessionActive:]
  -[VSKeepAlive _ensureKeepAliveMaintenance]
  -[VSKeepAlive _remoteKeepAlive]
  -[VSKeepAlive keepAudioSessionActive]


VSSpeechConnection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSXPCConnection *xpcConnection
 @property  VSSpeechConnectionDelegateWrapper *delegateWrapper
 @property  NSObject<OS_dispatch_queue> *threadSafeQueue
 @property  NSString *identifier
 @property  <VSSpeechConnectionDelegate> *delegate
 @property  VSSpeechRequest *request
 @property  VSPresynthesizedAudioRequest *presynthesizedAudioRequest

  // instance methods
  -[VSSpeechConnection init]
  -[VSSpeechConnection dealloc]
  -[VSSpeechConnection delegate]
  -[VSSpeechConnection setDelegate:]
  -[VSSpeechConnection .cxx_destruct]
  -[VSSpeechConnection identifier]
  -[VSSpeechConnection setIdentifier:]
  -[VSSpeechConnection xpcConnection]
  -[VSSpeechConnection setXpcConnection:]
  -[VSSpeechConnection setRequest:]
  -[VSSpeechConnection request]
  -[VSSpeechConnection _connectionInvalidated]
  -[VSSpeechConnection _remoteObject]
  -[VSSpeechConnection killDaemon]
  -[VSSpeechConnection getVoiceResourceForLanguage:reply:]
  -[VSSpeechConnection prewarmIfNeededWithRequest:]
  -[VSSpeechConnection queryPhaticCapabilityWithRequest:]
  -[VSSpeechConnection presynthesizedAudioRequest]
  -[VSSpeechConnection isSystemSpeaking]
  -[VSSpeechConnection stopPresynthesizedAudioRequest]
  -[VSSpeechConnection stopCurrentSpeechRequestAtMark:]
  -[VSSpeechConnection pauseCurrentSpeechRequestAtMark:]
  -[VSSpeechConnection startSynthesisRequest:]
  -[VSSpeechConnection startSpeechRequest:]
  -[VSSpeechConnection startPresynthesizedAudioRequest:]
  -[VSSpeechConnection cachePresynthesizedAudioRequest:]
  -[VSSpeechConnection isSystemSpeakingOnBehalfOfCurrentConnection]
  -[VSSpeechConnection continueCurrentSpeechRequest]
  -[VSSpeechConnection estimateDurationWithRequest:reply:]
  -[VSSpeechConnection setLogToFile:]
  -[VSSpeechConnection getLogToFile:]
  -[VSSpeechConnection availableVoicesForLanguageCode:]
  -[VSSpeechConnection availableFootprintsForVoice:languageCode:]
  -[VSSpeechConnection getTTSServerVoicesWithFilter:reply:]
  -[VSSpeechConnection forwardStreamObject:]
  -[VSSpeechConnection beginAudioPowerUpdateWithReply:]
  -[VSSpeechConnection endAudioPowerUpdate]
  -[VSSpeechConnection cleanUnusedAssets:]
  -[VSSpeechConnection getLocalVoiceAssets:]
  -[VSSpeechConnection getLocalVoiceResources:]
  -[VSSpeechConnection setAutoDownloadedVoiceAssets:withClientID:]
  -[VSSpeechConnection getAutoDownloadedVoiceAssetsWithClientID:reply:]
  -[VSSpeechConnection getVoiceInfoForLanguageCode:footprint:gender:type:reply:]
  -[VSSpeechConnection updateWithConnectionIdentifier:]
  -[VSSpeechConnection delegateWrapper]
  -[VSSpeechConnection concurrentSynthesisRequests]
  -[VSSpeechConnection setPresynthesizedAudioRequest:]
  -[VSSpeechConnection _remoteObjectWithErrorHandler:]
  -[VSSpeechConnection setDelegateWrapper:]
  -[VSSpeechConnection threadSafeQueue]
  -[VSSpeechConnection setThreadSafeQueue:]


VSSpeechConnectionDelegateWrapper : NSObject /usr/lib/libSystem.B.dylib <VSSpeechServiceDelegate>
 @property  <VSSpeechConnectionDelegate> *delegate
 @property  VSSpeechRequest *request
 @property  NSMutableDictionary *concurrentSynthesisRequests
 @property  VSPresynthesizedAudioRequest *presynthesizedAudioRequest
 @property  VSSpeechConnection *connection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSSpeechConnectionDelegateWrapper delegate]
  -[VSSpeechConnectionDelegateWrapper setDelegate:]
  -[VSSpeechConnectionDelegateWrapper .cxx_destruct]
  -[VSSpeechConnectionDelegateWrapper connection]
  -[VSSpeechConnectionDelegateWrapper setConnection:]
  -[VSSpeechConnectionDelegateWrapper setRequest:]
  -[VSSpeechConnectionDelegateWrapper request]
  -[VSSpeechConnectionDelegateWrapper presynthesizedAudioRequest]
  -[VSSpeechConnectionDelegateWrapper speechRequestDidStart]
  -[VSSpeechConnectionDelegateWrapper speechRequestDidPause]
  -[VSSpeechConnectionDelegateWrapper speechRequestDidContinue]
  -[VSSpeechConnectionDelegateWrapper speechRequestMark:didStartForRange:]
  -[VSSpeechConnectionDelegateWrapper speechRequestDidStopWithSuccess:phonemesSpoken:error:]
  -[VSSpeechConnectionDelegateWrapper speechRequestSuccessWithInstrumentMetrics:]
  -[VSSpeechConnectionDelegateWrapper speechRequestDidReceiveTimingInfo:]
  -[VSSpeechConnectionDelegateWrapper synthesisRequest:didReceiveTimingInfo:]
  -[VSSpeechConnectionDelegateWrapper synthesisRequest:didFinishWithInstrumentMetrics:error:]
  -[VSSpeechConnectionDelegateWrapper presynthesizedAudioRequestDidStart]
  -[VSSpeechConnectionDelegateWrapper presynthesizedAudioRequestDidStopAtEnd:error:]
  -[VSSpeechConnectionDelegateWrapper presynthesizedAudioRequestSuccessWithInstrumentMetrics:error:]
  -[VSSpeechConnectionDelegateWrapper concurrentSynthesisRequests]
  -[VSSpeechConnectionDelegateWrapper setPresynthesizedAudioRequest:]
  -[VSSpeechConnectionDelegateWrapper setConcurrentSynthesisRequests:]


VSVoiceAsset : VSAssetBase <NSSecureCoding>
 @property  NSString *name
 @property  long long gender
 @property  long long footprint
 @property  long long type
 @property  NSArray *languages
 @property  BOOL isInstalled
 @property  BOOL isBuiltInVoice

  // class methods
  +[VSVoiceAsset supportsSecureCoding]
  +[VSVoiceAsset typeFromString:]
  +[VSVoiceAsset genderFromString:]
  +[VSVoiceAsset typeStringFromType:]
  +[VSVoiceAsset genderStringFromGender:]
  +[VSVoiceAsset footprintStringFromFootprint:]
  +[VSVoiceAsset footprintFromString:]

  // instance methods
  -[VSVoiceAsset name]
  -[VSVoiceAsset type]
  -[VSVoiceAsset setType:]
  -[VSVoiceAsset encodeWithCoder:]
  -[VSVoiceAsset initWithCoder:]
  -[VSVoiceAsset .cxx_destruct]
  -[VSVoiceAsset setName:]
  -[VSVoiceAsset dictionaryRepresentation]
  -[VSVoiceAsset isInstalled]
  -[VSVoiceAsset languages]
  -[VSVoiceAsset setLanguages:]
  -[VSVoiceAsset initWithDictionaryRepresentation:]
  -[VSVoiceAsset gender]
  -[VSVoiceAsset setGender:]
  -[VSVoiceAsset footprint]
  -[VSVoiceAsset setFootprint:]
  -[VSVoiceAsset setIsBuiltInVoice:]
  -[VSVoiceAsset isBuiltInVoice]
  -[VSVoiceAsset voiceKey]
  -[VSVoiceAsset descriptiveKey]
  -[VSVoiceAsset setIsInstalled:]


VSGenericUpdateEndpoint : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, NSSecureCoding>
 @property  NSXPCListenerEndpoint *endpoint
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSXPCListener *listener
 @property  @? handler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VSGenericUpdateEndpoint supportsSecureCoding]
  +[VSGenericUpdateEndpoint configuredEndpointWithUpdateHandler:withConnection:]
  +[VSGenericUpdateEndpoint remoteUpdateHanderForEndpoint:]

  // instance methods
  -[VSGenericUpdateEndpoint dealloc]
  -[VSGenericUpdateEndpoint setQueue:]
  -[VSGenericUpdateEndpoint invalidate]
  -[VSGenericUpdateEndpoint queue]
  -[VSGenericUpdateEndpoint handler]
  -[VSGenericUpdateEndpoint encodeWithCoder:]
  -[VSGenericUpdateEndpoint initWithCoder:]
  -[VSGenericUpdateEndpoint listener]
  -[VSGenericUpdateEndpoint .cxx_destruct]
  -[VSGenericUpdateEndpoint listener:shouldAcceptNewConnection:]
  -[VSGenericUpdateEndpoint setHandler:]
  -[VSGenericUpdateEndpoint endpoint]
  -[VSGenericUpdateEndpoint setEndpoint:]
  -[VSGenericUpdateEndpoint setListener:]


VSGenericBlockHolder : NSObject /usr/lib/libSystem.B.dylib <VSGenericUpdate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VSGenericBlockHolder .cxx_destruct]
  -[VSGenericBlockHolder initWithBlock:]
  -[VSGenericBlockHolder invokeUpdateWithObject:]


MAAsset(VSExtras)
	// instance methods
	-[MAAsset(VSExtras) vs_isInstalled]

NSFileManager(VoiceServices)
	// instance methods
	-[NSFileManager(VoiceServices) directorySize:]
	-[NSFileManager(VoiceServices) removeDirectory:]
	-[NSFileManager(VoiceServices) cleanDirectory:withLRULimit:]
	-[NSFileManager(VoiceServices) cleanDirectory:withDateOlderThan:]

NSString(VSSpeechService)
	// class methods
	+[NSString(VSSpeechService) vs_markerStringForContext:]
	+[NSString(VSSpeechService) _vs_countPhoneticSyllables_lhp:]
	+[NSString(VSSpeechService) _vs_countPhoneticSyllables_xsampa:]
	+[NSString(VSSpeechService) vs_isCJKCharacter:]

	// instance methods
	-[NSString(VSSpeechService) vs_textifyEmojiWithLanguage:]
	-[NSString(VSSpeechService) vs_substituteAudioWithLocalPath]
	-[NSString(VSSpeechService) vs_insertContextInfo:]
	-[NSString(VSSpeechService) vs_measurePauses]
	-[NSString(VSSpeechService) vs_countPhoneticSyllables]
	-[NSString(VSSpeechService) vs_removePhonetics]
	-[NSString(VSSpeechService) vs_removeSpeechTags]
	-[NSString(VSSpeechService) vs_hasCJKCharacter]
	-[NSString(VSSpeechService) md5hash]
	-[NSString(VSSpeechService) preinstalledAudioHashForLanguage:gender:]

NSArray(VSRecognitionSessionKeywords)
	// instance methods
	-[NSArray(VSRecognitionSessionKeywords) _scrambledKeywordsAndAddToSet:]
	-[NSArray(VSRecognitionSessionKeywords) _nextKeywordUsingCursors:]

NSAttributedString(VSSpeechAdditions)
	// class methods
	+[NSAttributedString(VSSpeechAdditions) attributedStringWithFormatAndAttributes:]

NSMutableAttributedString(VSSpeechAdditions)
	// instance methods
	-[NSMutableAttributedString(VSSpeechAdditions) appendString:withAttributes:]

01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioPlayer 
01 00 0a00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 0700 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 0700 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 0700 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListenerEndpoint 
