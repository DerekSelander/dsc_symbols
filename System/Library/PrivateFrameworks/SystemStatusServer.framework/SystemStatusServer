|| __DATA.__objc_data _OBJC_CLASS_$_STStatusDomainXPCClientHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_STStatusDomainXPCClientHandle
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyCarrierBundleInfo._LTEConnectionShows4G
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyCarrierBundleInfo._carrierName
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyCarrierBundleInfo._customerServicePhoneNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyCarrierBundleInfo._disabledApplicationIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyCarrierBundleInfo._homeCountryCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyCarrierBundleInfo._reinitiatingActivationDisabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyMobileEquipmentInfo._CSN
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyMobileEquipmentInfo._ICCID
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyMobileEquipmentInfo._IMEI
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyMobileEquipmentInfo._MEID
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonyMobileEquipmentInfo._bootstrapICCID
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._SIMLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._SIMStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._callForwardingIndicator
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._cellularRegistrationStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._dataConnectionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._lastKnownNetworkCountryCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._maxSignalStrengthBars
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._networkReselectionNeeded
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._operatorName
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._preferredForDataConnections
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._providingDataConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._registeredWithoutCellular
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._registrationRejectionCauseCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._registrationStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._shortSIMLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_STTelephonySubscriptionInfo._signalStrengthBars
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STMutableTelephonyCarrierBundleInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STMutableTelephonyMobileEquipmentInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STMutableTelephonySubscriptionInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STStatusDomainDataChangeLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STStatusDomainDataChangeRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STStatusDomainDataChangeRecordDataEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STStatusDomainDataChangeRecordDiffEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STStatusDomainPublisherXPCClientHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STStatusDomainPublisherXPCClientListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STStatusDomainXPCClientListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STStatusServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STTelephonyCarrierBundleInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STTelephonyMobileEquipmentInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STTelephonyStateProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STTelephonyStatusDomainDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STTelephonySubscriptionContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_STTelephonySubscriptionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STMutableTelephonyCarrierBundleInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STMutableTelephonyMobileEquipmentInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STMutableTelephonySubscriptionInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STStatusDomainDataChangeLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STStatusDomainDataChangeRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STStatusDomainDataChangeRecordDataEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STStatusDomainDataChangeRecordDiffEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STStatusDomainPublisherXPCClientHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STStatusDomainPublisherXPCClientListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STStatusDomainXPCClientListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STStatusServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STTelephonyCarrierBundleInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STTelephonyMobileEquipmentInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STTelephonyStateProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STTelephonyStatusDomainDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STTelephonySubscriptionContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_STTelephonySubscriptionInfo
|| __TEXT.__const _SystemStatusServerVersionNumber
|| __TEXT.__const _SystemStatusServerVersionString
|| __TEXT.__text _STEntitledDomainsForEntitlementValue
|| __TEXT.__text _STStatusDomainNameForEntitlementValue
|| __TEXT.__text _STSystemStatusLogServer
|| __TEXT.__text _STSystemStatusLogTelephonyState
|| __TEXT.__text _STTelephonyCallForwardingIndicatorDebugName
|| __TEXT.__text _STTelephonyDataConnectionTypeDebugName
|| __TEXT.__text _STTelephonyRegistrationStatusDebugName
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ BaseBoard: _BSDispatchQueueCreateSerial
__ BaseBoard: _BSLogAddStateCaptureBlockWithTitle
__ BaseBoard: _BSPIDForAuditToken
__ BaseBoard: _OBJC_CLASS_$_BSDescriptionBuilder
__ BaseBoard: _OBJC_CLASS_$_BSMutableIntegerMap
__ BaseBoard: _OBJC_CLASS_$_BSMutableIntegerSet
__ CoreFoundation: _CFRelease
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionCreateOnTargetQueue
__ CoreTelephony: __CTServerConnectionGetRadioModuleIsDead
__ CoreTelephony: __CTServerConnectionHideDataIndicator
__ CoreTelephony: __CTServerConnectionHideRatIndicator
__ CoreTelephony: __CTServerConnectionIsUserIdentityModuleRequired
__ CoreTelephony: __CTServerConnectionRegisterBlockForNotification
__ CoreTelephony: __CTServerConnectionUnregisterForAllNotifications
__ CoreTelephony: _kCTDaemonReadyNotification
__ CoreTelephony: _kCTPostponementStatusChangeNotification
__ CoreTelephony: _kCTPowerRadioModuleDeadNotification
__ CoreTelephony: _kCTRegistrationCellularDataPlanHideIndicatorNotification
__ CoreTelephony: _kCTRegistrationDataHideIndicator
__ CoreTelephony: _kCTRegistrationStatusDenied
__ CoreTelephony: _kCTRegistrationStatusEmergencyOnly
__ CoreTelephony: _kCTRegistrationStatusNotRegistered
__ CoreTelephony: _kCTRegistrationStatusSearching
__ CoreTelephony: _kCTRegistrationStatusUnknown
__ CoreTelephony: _kCTRegistrationSuppressRatIndicator
__ CoreTelephony: _kCTSIMSupportSIMStatusMemoryFailure
__ CoreTelephony: _kCTSIMSupportSIMStatusNotInserted
__ CoreTelephony: _kCTSIMSupportSIMStatusPINLocked
__ CoreTelephony: _kCTSIMSupportSIMStatusPUKLocked
__ CoreTelephony: _kCTSIMSupportSIMStatusPermanentlyLocked
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ SystemStatus: _OBJC_CLASS_$_STMutableTelephonyStatusDomainSIMInfo
__ SystemStatus: _OBJC_CLASS_$_STTelephonyStatusDomainPublisher
__ SystemStatus: _STIsValidDataForStatusDomain
__ SystemStatus: _STIsValidDiffForStatusDomain
__ SystemStatus: _STIsValidUserInteractionForStatusDomain
__ SystemStatus: _STStatusDomainEntitlement
__ SystemStatus: _STStatusDomainEntitlementValueBattery
__ SystemStatus: _STStatusDomainEntitlementValueCalling
__ SystemStatus: _STStatusDomainEntitlementValueFocus
__ SystemStatus: _STStatusDomainEntitlementValueLocation
__ SystemStatus: _STStatusDomainEntitlementValueMedia
__ SystemStatus: _STStatusDomainEntitlementValuePlaygrounds
__ SystemStatus: _STStatusDomainEntitlementValueTelephony
__ SystemStatus: _STStatusDomainEntitlementValueVoiceControl
__ SystemStatus: _STStatusDomainEntitlementValueWifi
__ SystemStatus: _STStatusDomainPublisherEntitlement
__ SystemStatus: _STStatusDomainPublisherServiceName
__ SystemStatus: _STStatusDomainPublisherXPCClientInterface
__ SystemStatus: _STStatusDomainPublisherXPCServerInterface
__ SystemStatus: _STStatusDomainServiceName
__ SystemStatus: _STStatusDomainXPCClientInterface
__ SystemStatus: _STStatusDomainXPCServerInterface
__ SystemStatus: _STSystemStatusDescriptionForDomain
__ SystemStatus: _STSystemStatusLoggingSubsystem
__ TelephonyUtilities: _TUISOCountryCodeForMCC
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
STTelephonySubscriptionInfo : NSObject <NSCopying, NSMutableCopying, BSDebugDescriptionProviding>
 @property  NSString *identifier
 @property  NSString *SIMLabel
 @property  NSString *shortSIMLabel
 @property  NSString *SIMStatus
 @property  unsigned long registrationStatus
 @property  unsigned long cellularRegistrationStatus
 @property  unsigned long dataConnectionType
 @property  BOOL preferredForDataConnections
 @property  BOOL providingDataConnection
 @property  BOOL registeredWithoutCellular
 @property  unsigned long signalStrengthBars
 @property  unsigned long maxSignalStrengthBars
 @property  NSString *operatorName
 @property  NSString *lastKnownNetworkCountryCode
 @property  unsigned long callForwardingIndicator
 @property  BOOL networkReselectionNeeded
 @property  long long registrationRejectionCauseCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STTelephonySubscriptionInfo registrationStatus]
  -[STTelephonySubscriptionInfo debugDescriptionBuilderWithMultilinePrefix:]
  -[STTelephonySubscriptionInfo operatorName]
  -[STTelephonySubscriptionInfo initWithSubscriptionInfo:]
  -[STTelephonySubscriptionInfo SIMStatus]
  -[STTelephonySubscriptionInfo shortSIMLabel]
  -[STTelephonySubscriptionInfo signalStrengthBars]
  -[STTelephonySubscriptionInfo callForwardingIndicator]
  -[STTelephonySubscriptionInfo .cxx_destruct]
  -[STTelephonySubscriptionInfo isRegisteredWithoutCellular]
  -[STTelephonySubscriptionInfo SIMLabel]
  -[STTelephonySubscriptionInfo dataConnectionType]
  -[STTelephonySubscriptionInfo succinctDescriptionBuilder]
  -[STTelephonySubscriptionInfo isProvidingDataConnection]
  -[STTelephonySubscriptionInfo descriptionBuilderWithMultilinePrefix:]
  -[STTelephonySubscriptionInfo init]
  -[STTelephonySubscriptionInfo descriptionWithMultilinePrefix:]
  -[STTelephonySubscriptionInfo identifier]
  -[STTelephonySubscriptionInfo succinctDescription]
  -[STTelephonySubscriptionInfo isNetworkReselectionNeeded]
  -[STTelephonySubscriptionInfo lastKnownNetworkCountryCode]
  -[STTelephonySubscriptionInfo debugDescriptionWithMultilinePrefix:]
  -[STTelephonySubscriptionInfo mutableCopyWithZone:]
  -[STTelephonySubscriptionInfo isPreferredForDataConnections]
  -[STTelephonySubscriptionInfo copyWithZone:]
  -[STTelephonySubscriptionInfo cellularRegistrationStatus]
  -[STTelephonySubscriptionInfo registrationRejectionCauseCode]
  -[STTelephonySubscriptionInfo maxSignalStrengthBars]


STMutableTelephonySubscriptionInfo : STTelephonySubscriptionInfo
 @property  NSString *identifier
 @property  NSString *SIMLabel
 @property  NSString *shortSIMLabel
 @property  NSString *SIMStatus
 @property  unsigned long registrationStatus
 @property  unsigned long cellularRegistrationStatus
 @property  unsigned long dataConnectionType
 @property  BOOL preferredForDataConnections
 @property  BOOL providingDataConnection
 @property  BOOL registeredWithoutCellular
 @property  unsigned long signalStrengthBars
 @property  unsigned long maxSignalStrengthBars
 @property  NSString *operatorName
 @property  NSString *lastKnownNetworkCountryCode
 @property  unsigned long callForwardingIndicator
 @property  BOOL networkReselectionNeeded
 @property  long long registrationRejectionCauseCode

  // instance methods
  -[STMutableTelephonySubscriptionInfo setOperatorName:]
  -[STMutableTelephonySubscriptionInfo setSignalStrengthBars:]
  -[STMutableTelephonySubscriptionInfo setShortSIMLabel:]
  -[STMutableTelephonySubscriptionInfo setRegistrationStatus:]
  -[STMutableTelephonySubscriptionInfo setCallForwardingIndicator:]
  -[STMutableTelephonySubscriptionInfo setRegistrationRejectionCauseCode:]
  -[STMutableTelephonySubscriptionInfo setCellularRegistrationStatus:]
  -[STMutableTelephonySubscriptionInfo setSIMStatus:]
  -[STMutableTelephonySubscriptionInfo setLastKnownNetworkCountryCode:]
  -[STMutableTelephonySubscriptionInfo setProvidingDataConnection:]
  -[STMutableTelephonySubscriptionInfo setDataConnectionType:]
  -[STMutableTelephonySubscriptionInfo setRegisteredWithoutCellular:]
  -[STMutableTelephonySubscriptionInfo setIdentifier:]
  -[STMutableTelephonySubscriptionInfo setSIMLabel:]
  -[STMutableTelephonySubscriptionInfo copyWithZone:]
  -[STMutableTelephonySubscriptionInfo setNetworkReselectionNeeded:]
  -[STMutableTelephonySubscriptionInfo setMaxSignalStrengthBars:]
  -[STMutableTelephonySubscriptionInfo setPreferredForDataConnections:]


STStatusDomainDataChangeLog : NSObject
 @property  NSOrderedSet *sortedRecordKeys
 @property  NSDictionary *recordsByKey
 @property  BSIntegerSet *domainsWithData

  // instance methods
  -[STStatusDomainDataChangeLog domainsWithData]
  -[STStatusDomainDataChangeLog recordForKey:]
  -[STStatusDomainDataChangeLog initWithRecordKeys:]
  -[STStatusDomainDataChangeLog .cxx_destruct]
  -[STStatusDomainDataChangeLog sortedRecordKeys]
  -[STStatusDomainDataChangeLog currentDataForDomain:]
  -[STStatusDomainDataChangeLog recordsByKey]


STTelephonyStatusDomainDataProvider : NSObject <STTelephonyStateObserver, BSInvalidatable>
 @property  STTelephonyStateProvider *telephonyStateProvider
 @property  STTelephonyStatusDomainPublisher *telephonyDomainPublisher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STTelephonyStatusDomainDataProvider telephonyStateProvider]
  -[STTelephonyStatusDomainDataProvider carrierBundleInfoDidChangeForStateProvider:slot:]
  -[STTelephonyStatusDomainDataProvider .cxx_destruct]
  -[STTelephonyStatusDomainDataProvider _dataNetworkTypeForDataConnectionType:]
  -[STTelephonyStatusDomainDataProvider _SIMInfoForStateProvider:subscriptionInfo:slot:]
  -[STTelephonyStatusDomainDataProvider mobileEquipmentInfoDidChangeForStateProvider:slot:]
  -[STTelephonyStatusDomainDataProvider _serviceStateForStateProvider:registrationStatus:countryCode:]
  -[STTelephonyStatusDomainDataProvider _shouldShowEmergencyOnlyStatusForStateProvider:registrationStatus:countryCode:]
  -[STTelephonyStatusDomainDataProvider _updateDataForSlot:]
  -[STTelephonyStatusDomainDataProvider _serviceDescriptionForStateProvider:subscriptionInfo:outSecondaryServiceDescription:]
  -[STTelephonyStatusDomainDataProvider telephonyDomainPublisher]
  -[STTelephonyStatusDomainDataProvider initWithServerHandle:stateProvider:]
  -[STTelephonyStatusDomainDataProvider dealloc]
  -[STTelephonyStatusDomainDataProvider invalidate]
  -[STTelephonyStatusDomainDataProvider _displayStringForRegistrationStatus:]
  -[STTelephonyStatusDomainDataProvider _simStatusMeansLocked:]
  -[STTelephonyStatusDomainDataProvider subscriptionInfoDidChangeForStateProvider:slot:]
  -[STTelephonyStatusDomainDataProvider _displayStringForSIMStatus:]
  -[STTelephonyStatusDomainDataProvider initWithServerHandle:]


STTelephonyMobileEquipmentInfo : NSObject <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  NSString *MEID
 @property  NSString *IMEI
 @property  NSString *ICCID
 @property  NSString *CSN
 @property  NSString *bootstrapICCID
 @property  BOOL onBootstrap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STTelephonyMobileEquipmentInfo CSN]
  -[STTelephonyMobileEquipmentInfo .cxx_destruct]
  -[STTelephonyMobileEquipmentInfo succinctDescriptionBuilder]
  -[STTelephonyMobileEquipmentInfo descriptionBuilderWithMultilinePrefix:]
  -[STTelephonyMobileEquipmentInfo init]
  -[STTelephonyMobileEquipmentInfo descriptionWithMultilinePrefix:]
  -[STTelephonyMobileEquipmentInfo succinctDescription]
  -[STTelephonyMobileEquipmentInfo MEID]
  -[STTelephonyMobileEquipmentInfo mutableCopyWithZone:]
  -[STTelephonyMobileEquipmentInfo IMEI]
  -[STTelephonyMobileEquipmentInfo copyWithZone:]
  -[STTelephonyMobileEquipmentInfo ICCID]
  -[STTelephonyMobileEquipmentInfo isOnBootstrap]
  -[STTelephonyMobileEquipmentInfo initWithMobileEquipmentInfo:]
  -[STTelephonyMobileEquipmentInfo bootstrapICCID]


STMutableTelephonyMobileEquipmentInfo : STTelephonyMobileEquipmentInfo
 @property  NSString *MEID
 @property  NSString *IMEI
 @property  NSString *ICCID
 @property  NSString *CSN
 @property  NSString *bootstrapICCID

  // instance methods
  -[STMutableTelephonyMobileEquipmentInfo setMEID:]
  -[STMutableTelephonyMobileEquipmentInfo setICCID:]
  -[STMutableTelephonyMobileEquipmentInfo setIMEI:]
  -[STMutableTelephonyMobileEquipmentInfo setBootstrapICCID:]
  -[STMutableTelephonyMobileEquipmentInfo copyWithZone:]
  -[STMutableTelephonyMobileEquipmentInfo setCSN:]


STStatusServer : NSObject <BSDescriptionProviding, STStatusDomainServerHandle, STStatusDomainPublisherServerHandle>
 @property  BSMutableIntegerMap *clientsByDomain
 @property  BSMutableIntegerMap *publisherClientsByDomain
 @property  NSMapTable *changeLogKeysByPublisherClient
 @property  STStatusDomainDataChangeLog *dataChangeLog
 @property  STStatusDomainXPCClientListener *xpcClientListener
 @property  STStatusDomainPublisherXPCClientListener *publisherXPCClientListener
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  <STStatusServerDelegate> *delegate
 @property  BSIntegerSet *publishedDomains
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STStatusServer clientQueue]
  -[STStatusServer publishVolatileData:forPublisherClient:domain:completion:]
  -[STStatusServer _internalQueue_fallbackDataForPublisherClient:domain:]
  -[STStatusServer updateDataForPublisherClient:domain:usingDiffProvider:completion:]
  -[STStatusServer _internalQueue_mutateDataForDomain:withBlock:]
  -[STStatusServer .cxx_destruct]
  -[STStatusServer publishedDataForDomain:]
  -[STStatusServer clientsByDomain]
  -[STStatusServer succinctDescriptionBuilder]
  -[STStatusServer publishData:forPublisherClient:domain:completion:]
  -[STStatusServer publishedDomains]
  -[STStatusServer setDelegate:]
  -[STStatusServer dataChangeLog]
  -[STStatusServer _internalQueue_notifyClient:ofData:forDomain:]
  -[STStatusServer changeLogKeysByPublisherClient]
  -[STStatusServer descriptionBuilderWithMultilinePrefix:]
  -[STStatusServer init]
  -[STStatusServer _internalQueue_dataForDomain:]
  -[STStatusServer registerPublisherClient:forDomain:fallbackData:]
  -[STStatusServer descriptionWithMultilinePrefix:]
  -[STStatusServer reportUserInteraction:forClient:domain:]
  -[STStatusServer succinctDescription]
  -[STStatusServer _internalQueue_enumerateClientsForDomain:withClientQueueBlock:]
  -[STStatusServer _internalQueue_publishData:forPublisherClient:domain:inDataChangeRecord:completion:]
  -[STStatusServer internalQueue]
  -[STStatusServer registerClient:forDomain:]
  -[STStatusServer xpcClientListener]
  -[STStatusServer removePublisherClient:forDomain:]
  -[STStatusServer delegate]
  -[STStatusServer _internalQueue_volatileDataForDomain:]
  -[STStatusServer removeClient:forDomain:]
  -[STStatusServer _internalQueue_enumeratePublisherClientsForDomain:withClientQueueBlock:]
  -[STStatusServer _internalQueue_publishDiff:forPublisherClient:domain:inDataChangeRecord:completion:]
  -[STStatusServer publisherClientsByDomain]
  -[STStatusServer publisherXPCClientListener]
  -[STStatusServer _internalQueue_presentationDataForDomain:]
  -[STStatusServer publishedVolatileDataForDomain:]
  -[STStatusServer dataForDomain:]
  -[STStatusServer _internalQueue_publishedDomains]
  -[STStatusServer updateVolatileDataForPublisherClient:domain:usingDiffProvider:completion:]


STTelephonyStateProvider : NSObject <BSDebugDescriptionProviding, CoreTelephonyClientDelegate, CoreTelephonyClientRegistrationDelegate, CoreTelephonyClientSubscriberDelegate, CoreTelephonyClientDataDelegate, CoreTelephonyClientCarrierBundleDelegate, RadiosPreferencesDelegate, BSInvalidatable>
 @property  NSHashTable *observers
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSObject<OS_dispatch_queue> *observerQueue
 @property  NSObject<OS_dispatch_queue> *backgroundQueryQueue
 @property  CoreTelephonyClient *coreTelephonyClient
 @property  STTelephonySubscriptionContext *slot1SubscriptionContext
 @property  STTelephonySubscriptionContext *slot2SubscriptionContext
 @property  BOOL cachedDualSIMEnabled
 @property  NSArray *cachedCTContexts
 @property  BOOL cachedRadioModuleDead
 @property  BOOL containsCellularRadio
 @property  long long cachedSuppressesCellDataIndicator
 @property  BOOL suppressesCellDataIndicator
 @property  long long cachedSuppressesCellIndicators
 @property  long long cachedNeedsUserIdentificationModule
 @property  RadiosPreferences *radiosPreferences
 @property  BOOL airplaneModeEnabled
 @property  ^B telephonyDaemonRestartHandlerCanceled
 @property  BOOL dualSIMEnabled
 @property  BOOL radioModuleDead
 @property  BOOL cellularRadioCapabilityActive
 @property  BOOL hasCellularTelephony
 @property  BOOL needsUserIdentificationModule
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STTelephonyStateProvider preferredDataSimChanged:]
  -[STTelephonyStateProvider coreTelephonyClient]
  -[STTelephonyStateProvider debugDescriptionBuilderWithMultilinePrefix:]
  -[STTelephonyStateProvider displayStatusChanged:status:]
  -[STTelephonyStateProvider radiosPreferences]
  -[STTelephonyStateProvider subscriptionInfoDidChange]
  -[STTelephonyStateProvider simStatusDidChange:status:]
  -[STTelephonyStateProvider slot1SubscriptionContext]
  -[STTelephonyStateProvider setBackgroundQueryQueue:]
  -[STTelephonyStateProvider isAirplaneModeEnabled]
  -[STTelephonyStateProvider _startFakeRegistrationIfNecessaryForContext:]
  -[STTelephonyStateProvider _purgeSlot1SubscriptionState]
  -[STTelephonyStateProvider isDualSIMEnabled]
  -[STTelephonyStateProvider setCachedNeedsUserIdentificationModule:]
  -[STTelephonyStateProvider setInternalQueue:]
  -[STTelephonyStateProvider _internalQueue_subscriptionContextForSlot:]
  -[STTelephonyStateProvider _newSubscriptionContext]
  -[STTelephonyStateProvider _internalQueue_notifyObserversOfSubscriptionInfoChangeForSlot:]
  -[STTelephonyStateProvider _setRegistrationRejectionCauseCode:inContext:]
  -[STTelephonyStateProvider _setCallForwardingIndicator:inSubscriptionContext:]
  -[STTelephonyStateProvider rejectCauseCodeChanged:causeCode:]
  -[STTelephonyStateProvider _updateDualSIMCapabilitySendingNotification:]
  -[STTelephonyStateProvider _backgroundQueryQueue_mobileEquipmentInfoForCTContext:]
  -[STTelephonyStateProvider suppressesCellDataIndicator]
  -[STTelephonyStateProvider _updateState]
  -[STTelephonyStateProvider _backgroundQueryQueue_SIMStatusForCTContext:]
  -[STTelephonyStateProvider carrierBundleInfoForSlot:]
  -[STTelephonyStateProvider _setSIMStatus:inSubscriptionContext:]
  -[STTelephonyStateProvider slot2SubscriptionContext]
  -[STTelephonyStateProvider networkReselectionNeeded:]
  -[STTelephonyStateProvider isRadioModuleDead]
  -[STTelephonyStateProvider cachedNeedsUserIdentificationModule]
  -[STTelephonyStateProvider _purgeSlot2SubscriptionState]
  -[STTelephonyStateProvider .cxx_destruct]
  -[STTelephonyStateProvider _updateLastKnownNetworkCountryCodeInContext:withCTContext:]
  -[STTelephonyStateProvider _cancelFakeRegistrationForContext:]
  -[STTelephonyStateProvider _startFakeCellularRegistrationIfNecessaryForContext:]
  -[STTelephonyStateProvider setCachedSuppressesCellDataIndicator:]
  -[STTelephonyStateProvider _serverConnection]
  -[STTelephonyStateProvider _registerForServerConnectionNotifications]
  -[STTelephonyStateProvider _serverConnectionDidError:]
  -[STTelephonyStateProvider cellChanged:cell:]
  -[STTelephonyStateProvider succinctDescriptionBuilder]
  -[STTelephonyStateProvider _logSubscriptionEvent:]
  -[STTelephonyStateProvider setSlot2SubscriptionContext:]
  -[STTelephonyStateProvider subscriptionInfoForSlot:]
  -[STTelephonyStateProvider _stopFakeServiceForContext:]
  -[STTelephonyStateProvider _setRegistrationStatus:inSubscriptionContext:]
  -[STTelephonyStateProvider _setCellRegistrationStatus:inSubscriptionContext:]
  -[STTelephonyStateProvider setSlot1SubscriptionContext:]
  -[STTelephonyStateProvider _internalQueue_isCellularRadioCapabilityActive]
  -[STTelephonyStateProvider suppServicesEvent:event:settingsType:data:]
  -[STTelephonyStateProvider needsUserIdentificationModule]
  -[STTelephonyStateProvider descriptionBuilderWithMultilinePrefix:]
  -[STTelephonyStateProvider isSIMPresentForSlot:]
  -[STTelephonyStateProvider _queryRegistrationStatusForCTContext:]
  -[STTelephonyStateProvider _updateDataConnectedSubscriptionContextForCTContext:]
  -[STTelephonyStateProvider setAirplaneModeEnabled:]
  -[STTelephonyStateProvider dualSimCapabilityDidChange]
  -[STTelephonyStateProvider init]
  -[STTelephonyStateProvider _updateDataStatus:inSubscriptionContext:]
  -[STTelephonyStateProvider servingNetworkChanged:]
  -[STTelephonyStateProvider descriptionWithMultilinePrefix:]
  -[STTelephonyStateProvider setCachedRadioModuleDead:]
  -[STTelephonyStateProvider setObserverQueue:]
  -[STTelephonyStateProvider _updateDataConnectionType]
  -[STTelephonyStateProvider _startFakeServiceIfNecessaryForContext:]
  -[STTelephonyStateProvider _setCarrierBundleInfo:inSubscriptionContext:]
  -[STTelephonyStateProvider _hasCTContextForSlot:]
  -[STTelephonyStateProvider _cancelFakeCellularRegistrationForContext:]
  -[STTelephonyStateProvider succinctDescription]
  -[STTelephonyStateProvider _setSignalStrengthBars:maxBars:inSubscriptionContext:]
  -[STTelephonyStateProvider _reallySetOperatorName:inSubscriptionContext:]
  -[STTelephonyStateProvider _updateCallForwardingIndicatorForContext:]
  -[STTelephonyStateProvider _setSuppressesCellDataIndicator:]
  -[STTelephonyStateProvider _handleNetworkReselectionNeeded:forCTContext:]
  -[STTelephonyStateProvider _backgroundQueryQueue_shortSIMLabelForCTContext:]
  -[STTelephonyStateProvider _internalQueue_notifyObserversOfCarrierBundleInfoChangeForSlot:]
  -[STTelephonyStateProvider addObserver:]
  -[STTelephonyStateProvider _isSIMPresentForSlot:]
  -[STTelephonyStateProvider _setSuppressesCellIndicators:]
  -[STTelephonyStateProvider dataStatus:dataStatusInfo:]
  -[STTelephonyStateProvider _querySubscriptionStateForCTContext:]
  -[STTelephonyStateProvider _setOperatorName:inSubscriptionContext:]
  -[STTelephonyStateProvider _queryCallForwardingStateForCTContext:]
  -[STTelephonyStateProvider _updateDataConnectionTypeForContext:]
  -[STTelephonyStateProvider mobileEquipmentInfoForSlot:]
  -[STTelephonyStateProvider carrierBundleChange:]
  -[STTelephonyStateProvider _backgroundQueryQueue_subscriptionContextWithInfoNotRequiringSIMForCTContext:]
  -[STTelephonyStateProvider setCachedSuppressesCellIndicators:]
  -[STTelephonyStateProvider _hideDataIndicatorChanged:]
  -[STTelephonyStateProvider internalQueue]
  -[STTelephonyStateProvider setTelephonyDaemonRestartHandlerCanceled:]
  -[STTelephonyStateProvider networkSelected:success:mode:]
  -[STTelephonyStateProvider _setNetworkReselectionNeeded:inContext:withCTContext:]
  -[STTelephonyStateProvider _updateRegistrationNowInSubscriptionContext:]
  -[STTelephonyStateProvider _logSubscriptionEvent:forContext:]
  -[STTelephonyStateProvider setCachedDualSIMEnabled:]
  -[STTelephonyStateProvider operatorNameChanged:name:]
  -[STTelephonyStateProvider observerQueue]
  -[STTelephonyStateProvider _carrierNameForOperatorName:withContext:]
  -[STTelephonyStateProvider telephonyDaemonRestartHandlerCanceled]
  -[STTelephonyStateProvider _subscriptionSlotForContext:]
  -[STTelephonyStateProvider _backgroundQueryQueue_carrierBundleInfoForCTContext:]
  -[STTelephonyStateProvider _purgeSubscriptionState]
  -[STTelephonyStateProvider debugDescriptionWithMultilinePrefix:]
  -[STTelephonyStateProvider _postponementStateChanged]
  -[STTelephonyStateProvider observers]
  -[STTelephonyStateProvider signalStrengthChanged:info:]
  -[STTelephonyStateProvider setCachedCTContexts:]
  -[STTelephonyStateProvider airplaneModeChanged]
  -[STTelephonyStateProvider cachedDualSIMEnabled]
  -[STTelephonyStateProvider _subscriptionContextForCTContext:]
  -[STTelephonyStateProvider cachedSuppressesCellIndicators]
  -[STTelephonyStateProvider _handleCellChangedForContext:withCTContext:]
  -[STTelephonyStateProvider dealloc]
  -[STTelephonyStateProvider invalidate]
  -[STTelephonyStateProvider _updateNetworkCountryCode:inContext:withCTContext:]
  -[STTelephonyStateProvider _setCellStatus:displayStatus:forcedHome:changeCausedBySIMRemoval:inSubscriptionContext:withCTContext:]
  -[STTelephonyStateProvider currentDataSimChanged:]
  -[STTelephonyStateProvider removeObserver:]
  -[STTelephonyStateProvider _internalQueue_needsUserIdentificationModule]
  -[STTelephonyStateProvider _applyInfoNotRequiringSIMFromContext:toContext:]
  -[STTelephonyStateProvider _setCachedCTRegistrationCellStatus:displayStatus:forcedHome:inSubscriptionContext:]
  -[STTelephonyStateProvider _cancelFakeServiceForContext:]
  -[STTelephonyStateProvider cachedRadioModuleDead]
  -[STTelephonyStateProvider hasCellularTelephony]
  -[STTelephonyStateProvider _airplaneModeDidChange:]
  -[STTelephonyStateProvider cachedSuppressesCellDataIndicator]
  -[STTelephonyStateProvider containsCellularRadio]
  -[STTelephonyStateProvider _handleTelephonyDaemonRestart]
  -[STTelephonyStateProvider isCellularRadioCapabilityActive]
  -[STTelephonyStateProvider cachedCTContexts]
  -[STTelephonyStateProvider backgroundQueryQueue]
  -[STTelephonyStateProvider operatorBundleChange:]
  -[STTelephonyStateProvider _logSubscriptionEvent:forCTContext:]
  -[STTelephonyStateProvider _internalQueue_notifyObserversOfMobileEquipmentInfoChangeForSlot:]


STStatusDomainXPCClientListener : NSObject <NSXPCListenerDelegate>
 @property  <STStatusDomainServerHandle> *serverHandle
 @property  NSXPCListener *xpcListener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STStatusDomainXPCClientListener xpcListener]
  -[STStatusDomainXPCClientListener .cxx_destruct]
  -[STStatusDomainXPCClientListener dealloc]
  -[STStatusDomainXPCClientListener listener:shouldAcceptNewConnection:]
  -[STStatusDomainXPCClientListener serverHandle]
  -[STStatusDomainXPCClientListener initWithServerHandle:]


STStatusDomainDataChangeRecord : NSObject
 @property  BSMutableIntegerMap *fallbackDataByClientKeyByDomain
 @property  BSMutableIntegerMap *entriesByDomain
 @property  BSMutableIntegerMap *cachedCurrentDataByDomain
 @property  BSIntegerSet *domainsWithData

  // instance methods
  -[STStatusDomainDataChangeRecord domainsWithData]
  -[STStatusDomainDataChangeRecord setFallbackData:forClientKey:domain:]
  -[STStatusDomainDataChangeRecord .cxx_destruct]
  -[STStatusDomainDataChangeRecord removeAllEntriesForClientKey:domain:]
  -[STStatusDomainDataChangeRecord cachedCurrentDataByDomain]
  -[STStatusDomainDataChangeRecord currentDataForDomain:]
  -[STStatusDomainDataChangeRecord init]
  -[STStatusDomainDataChangeRecord addDiff:forClientKey:domain:]
  -[STStatusDomainDataChangeRecord setData:forClientKey:domain:]
  -[STStatusDomainDataChangeRecord entriesByDomain]
  -[STStatusDomainDataChangeRecord fallbackDataByClientKeyByDomain]
  -[STStatusDomainDataChangeRecord _combineTrailingDiffEntriesIfPossible:]
  -[STStatusDomainDataChangeRecord fallbackDataForClientKey:domain:]


STStatusDomainDataChangeRecordDataEntry : NSObject <STStatusDomainDataChangeRecordEntry>
 @property  <STStatusDomainData><STStatusDomainDataDifferencing> *data
 @property  id clientKey
 @property  unsigned long entryType
 @property  <STStatusDomainDataDiff> *diff
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STStatusDomainDataChangeRecordDataEntry entryType]
  -[STStatusDomainDataChangeRecordDataEntry diff]
  -[STStatusDomainDataChangeRecordDataEntry .cxx_destruct]
  -[STStatusDomainDataChangeRecordDataEntry data]
  -[STStatusDomainDataChangeRecordDataEntry clientKey]
  -[STStatusDomainDataChangeRecordDataEntry initWithData:clientKey:]


STStatusDomainDataChangeRecordDiffEntry : NSObject <STStatusDomainDataChangeRecordEntry>
 @property  <STStatusDomainDataDiff> *diff
 @property  id clientKey
 @property  unsigned long entryType
 @property  <STStatusDomainData><STStatusDomainDataDifferencing> *data
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STStatusDomainDataChangeRecordDiffEntry entryType]
  -[STStatusDomainDataChangeRecordDiffEntry diff]
  -[STStatusDomainDataChangeRecordDiffEntry .cxx_destruct]
  -[STStatusDomainDataChangeRecordDiffEntry data]
  -[STStatusDomainDataChangeRecordDiffEntry initWithDiff:clientKey:]
  -[STStatusDomainDataChangeRecordDiffEntry clientKey]


STStatusDomainPublisherXPCClientListener : NSObject <NSXPCListenerDelegate>
 @property  <STStatusDomainPublisherServerHandle> *serverHandle
 @property  NSXPCListener *xpcListener
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STStatusDomainPublisherXPCClientListener xpcListener]
  -[STStatusDomainPublisherXPCClientListener .cxx_destruct]
  -[STStatusDomainPublisherXPCClientListener dealloc]
  -[STStatusDomainPublisherXPCClientListener listener:shouldAcceptNewConnection:]
  -[STStatusDomainPublisherXPCClientListener serverHandle]
  -[STStatusDomainPublisherXPCClientListener initWithServerHandle:]


STStatusDomainXPCClientHandle : NSObject <STStatusDomainXPCServer, STStatusDomainClientHandle>
 @property  <STStatusDomainServerHandle> *serverHandle
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSXPCConnection *clientXPCConnection
 @property  BSMutableIntegerMap *dataByDomain
 @property  NSSet *entitledDomains
 @property  NSMutableSet *observingDomains
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STStatusDomainXPCClientHandle entitledDomains]
  -[STStatusDomainXPCClientHandle initWithXPCConnection:serverHandle:]
  -[STStatusDomainXPCClientHandle .cxx_destruct]
  -[STStatusDomainXPCClientHandle clientXPCConnection]
  -[STStatusDomainXPCClientHandle internalQueue]
  -[STStatusDomainXPCClientHandle serverHandle]
  -[STStatusDomainXPCClientHandle dataByDomain]
  -[STStatusDomainXPCClientHandle observeDomains:]
  -[STStatusDomainXPCClientHandle stopObservingDomains:]
  -[STStatusDomainXPCClientHandle reportUserInteraction:forDomain:]
  -[STStatusDomainXPCClientHandle observeData:forDomain:]
  -[STStatusDomainXPCClientHandle observingDomains]
  -[STStatusDomainXPCClientHandle _internalQueue_observeData:forDomain:dataSendBlock:diffSendBlock:]


STStatusDomainPublisherXPCClientHandle : NSObject <STStatusDomainPublisherXPCServer, STStatusDomainPublisherClientHandle>
 @property  <STStatusDomainPublisherServerHandle> *serverHandle
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  NSXPCConnection *clientXPCConnection
 @property  BSMutableIntegerMap *dataByDomain
 @property  BSMutableIntegerMap *volatileDataByDomain
 @property  BSMutableIntegerMap *fallbackDataByDomain
 @property  NSSet *entitledDomains
 @property  NSMutableSet *publishingDomains
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STStatusDomainPublisherXPCClientHandle unregisterFromPublishingDomain:]
  -[STStatusDomainPublisherXPCClientHandle publishData:forDomain:discardingOnExit:reply:]
  -[STStatusDomainPublisherXPCClientHandle entitledDomains]
  -[STStatusDomainPublisherXPCClientHandle initWithXPCConnection:serverHandle:]
  -[STStatusDomainPublisherXPCClientHandle .cxx_destruct]
  -[STStatusDomainPublisherXPCClientHandle volatileDataByDomain]
  -[STStatusDomainPublisherXPCClientHandle registerToPublishDomain:fallbackData:]
  -[STStatusDomainPublisherXPCClientHandle _internalQueue_unregisterFromPublishingDomain:]
  -[STStatusDomainPublisherXPCClientHandle publishDiff:forDomain:replacingData:discardingOnExit:reply:]
  -[STStatusDomainPublisherXPCClientHandle _internalQueue_dataForDomain:]
  -[STStatusDomainPublisherXPCClientHandle clientXPCConnection]
  -[STStatusDomainPublisherXPCClientHandle _internalQueue_fallbackDataForDomain:]
  -[STStatusDomainPublisherXPCClientHandle handleUserInteraction:forDomain:]
  -[STStatusDomainPublisherXPCClientHandle internalQueue]
  -[STStatusDomainPublisherXPCClientHandle _internalQueue_volatileDataForDomain:]
  -[STStatusDomainPublisherXPCClientHandle publishingDomains]
  -[STStatusDomainPublisherXPCClientHandle fallbackDataByDomain]
  -[STStatusDomainPublisherXPCClientHandle serverHandle]
  -[STStatusDomainPublisherXPCClientHandle dataByDomain]


STTelephonySubscriptionContext : NSObject <BSDebugDescriptionProviding>
 @property  STMutableTelephonySubscriptionInfo *subscriptionInfo
 @property  ^B fakeServiceCanceled
 @property  ^B fakeRegistrationCanceled
 @property  ^B fakeCellularRegistrationCanceled
 @property  BOOL pretendingToSearch
 @property  NSString *cachedCTRegistrationDisplayStatus
 @property  NSString *cachedCTRegistrationCellularStatus
 @property  unsigned long modemDataConnectionType
 @property  NSString *cachedCTOperatorName
 @property  NSArray *statusBarImages
 @property  STMutableTelephonyCarrierBundleInfo *carrierBundleInfo
 @property  STMutableTelephonyMobileEquipmentInfo *mobileEquipmentInfo
 @property  BOOL fakingService
 @property  BOOL fakingRegistration
 @property  BOOL fakingCellularRegistration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STTelephonySubscriptionContext debugDescriptionBuilderWithMultilinePrefix:]
  -[STTelephonySubscriptionContext fakeServiceCanceled]
  -[STTelephonySubscriptionContext subscriptionInfo]
  -[STTelephonySubscriptionContext setCarrierBundleInfo:]
  -[STTelephonySubscriptionContext carrierBundleInfo]
  -[STTelephonySubscriptionContext .cxx_destruct]
  -[STTelephonySubscriptionContext isFakingService]
  -[STTelephonySubscriptionContext setFakeRegistrationCanceled:]
  -[STTelephonySubscriptionContext setStatusBarImages:]
  -[STTelephonySubscriptionContext succinctDescriptionBuilder]
  -[STTelephonySubscriptionContext modemDataConnectionType]
  -[STTelephonySubscriptionContext cachedCTOperatorName]
  -[STTelephonySubscriptionContext descriptionBuilderWithMultilinePrefix:]
  -[STTelephonySubscriptionContext setCachedCTOperatorName:]
  -[STTelephonySubscriptionContext descriptionWithMultilinePrefix:]
  -[STTelephonySubscriptionContext setMobileEquipmentInfo:]
  -[STTelephonySubscriptionContext succinctDescription]
  -[STTelephonySubscriptionContext setFakeServiceCanceled:]
  -[STTelephonySubscriptionContext setModemDataConnectionType:]
  -[STTelephonySubscriptionContext setPretendingToSearch:]
  -[STTelephonySubscriptionContext cachedCTRegistrationDisplayStatus]
  -[STTelephonySubscriptionContext fakeRegistrationCanceled]
  -[STTelephonySubscriptionContext setCachedCTRegistrationDisplayStatus:]
  -[STTelephonySubscriptionContext mobileEquipmentInfo]
  -[STTelephonySubscriptionContext setCachedCTRegistrationCellularStatus:]
  -[STTelephonySubscriptionContext debugDescriptionWithMultilinePrefix:]
  -[STTelephonySubscriptionContext isPretendingToSearch]
  -[STTelephonySubscriptionContext cachedCTRegistrationCellularStatus]
  -[STTelephonySubscriptionContext setFakeCellularRegistrationCanceled:]
  -[STTelephonySubscriptionContext setSubscriptionInfo:]
  -[STTelephonySubscriptionContext fakeCellularRegistrationCanceled]
  -[STTelephonySubscriptionContext statusBarImages]
  -[STTelephonySubscriptionContext isFakingRegistration]
  -[STTelephonySubscriptionContext isFakingCellularRegistration]


STTelephonyCarrierBundleInfo : NSObject <NSCopying, NSMutableCopying, BSDescriptionProviding>
 @property  BOOL LTEConnectionShows4G
 @property  BOOL reinitiatingActivationDisabled
 @property  NSString *customerServicePhoneNumber
 @property  NSArray *disabledApplicationIDs
 @property  NSString *carrierName
 @property  NSString *homeCountryCode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[STTelephonyCarrierBundleInfo homeCountryCode]
  -[STTelephonyCarrierBundleInfo disabledApplicationIDs]
  -[STTelephonyCarrierBundleInfo customerServicePhoneNumber]
  -[STTelephonyCarrierBundleInfo carrierName]
  -[STTelephonyCarrierBundleInfo .cxx_destruct]
  -[STTelephonyCarrierBundleInfo LTEConnectionShows4G]
  -[STTelephonyCarrierBundleInfo initWithCarrierBundleInfo:]
  -[STTelephonyCarrierBundleInfo isReinitiatingActivationDisabled]
  -[STTelephonyCarrierBundleInfo succinctDescriptionBuilder]
  -[STTelephonyCarrierBundleInfo descriptionBuilderWithMultilinePrefix:]
  -[STTelephonyCarrierBundleInfo init]
  -[STTelephonyCarrierBundleInfo descriptionWithMultilinePrefix:]
  -[STTelephonyCarrierBundleInfo succinctDescription]
  -[STTelephonyCarrierBundleInfo mutableCopyWithZone:]
  -[STTelephonyCarrierBundleInfo copyWithZone:]


STMutableTelephonyCarrierBundleInfo : STTelephonyCarrierBundleInfo
 @property  BOOL LTEConnectionShows4G
 @property  BOOL reinitiatingActivationDisabled
 @property  NSString *customerServicePhoneNumber
 @property  NSArray *disabledApplicationIDs
 @property  NSString *carrierName
 @property  NSString *homeCountryCode

  // instance methods
  -[STMutableTelephonyCarrierBundleInfo setLTEConnectionShows4G:]
  -[STMutableTelephonyCarrierBundleInfo setReinitiatingActivationDisabled:]
  -[STMutableTelephonyCarrierBundleInfo setHomeCountryCode:]
  -[STMutableTelephonyCarrierBundleInfo setDisabledApplicationIDs:]
  -[STMutableTelephonyCarrierBundleInfo setCarrierName:]
  -[STMutableTelephonyCarrierBundleInfo copyWithZone:]
  -[STMutableTelephonyCarrierBundleInfo setCustomerServicePhoneNumber:]


01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSDescriptionBuilder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSMutableIntegerMap 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSMutableIntegerSet 
01 00 0400 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0400 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0300 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
01 00 0600 /System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus: STMutableTelephonyStatusDomainSIMInfo 
01 00 0600 /System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus: STTelephonyStatusDomainPublisher 
