|| __DATA.__data _MFAttachmentPlaceholderMagic
|| __DATA.__data _MFMessageInfoSentDateComparator
|| __DATA.__objc_data _OBJC_CLASS_$_DADeliveryAccount
|| __DATA.__objc_data _OBJC_CLASS_$_MFAccountFactory_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFAccountValidator
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentBundle
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentCapabilities
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentCompositionContext
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentLibraryDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentLibraryManager
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentPlaceholder
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentRaw
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentSecurityScope
|| __DATA.__objc_data _OBJC_CLASS_$_MFAttachmentUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_MFAuthScheme
|| __DATA.__objc_data _OBJC_CLASS_$_MFBasicMessageDataSection
|| __DATA.__objc_data _OBJC_CLASS_$_MFBufferedQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MFCRAM_MD5Authenticator
|| __DATA.__objc_data _OBJC_CLASS_$_MFCertificateTrustInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MFCertificateTrustInfoEMCertificateTrustInformationTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_MFCertificateTrustInformationKeychainManager
|| __DATA.__objc_data _OBJC_CLASS_$_MFComposeAttachmentDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFConnectionSettings
|| __DATA.__objc_data _OBJC_CLASS_$_MFContentErrorDocument
|| __DATA.__objc_data _OBJC_CLASS_$_MFDADeferredMessageMoveOperation
|| __DATA.__objc_data _OBJC_CLASS_$_MFDADeferredStoreDraftOperation
|| __DATA.__objc_data _OBJC_CLASS_$_MFDADelivery
|| __DATA.__objc_data _OBJC_CLASS_$_MFDADeliveryConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_MFDADraftMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAFolderChangeConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAFolderChangeResult
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAMailAccountConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAMailAccountSyncConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAMailbox
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAMessageContentConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAMessagePayloadFetchResponseImpl
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAMessageStore
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAMessageStoreSaveDraftRequest
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAMoveResponseConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_MFDARequestQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MFDAStoreDraftConsumer
|| __DATA.__objc_data _OBJC_CLASS_$_MFDATransferActionReplayer
|| __DATA.__objc_data _OBJC_CLASS_$_MFDbJournal
|| __DATA.__objc_data _OBJC_CLASS_$_MFDecryptedAttachmentDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFDeliveryResult
|| __DATA.__objc_data _OBJC_CLASS_$_MFFakeAccountsProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFFakeLibraryMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MFFakeMailAccount
|| __DATA.__objc_data _OBJC_CLASS_$_MFFakeMailMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MFFakeMailboxUid
|| __DATA.__objc_data _OBJC_CLASS_$_MFFetchLimits
|| __DATA.__objc_data _OBJC_CLASS_$_MFFile
|| __DATA.__objc_data _OBJC_CLASS_$_MFFileArchive
|| __DATA.__objc_data _OBJC_CLASS_$_MFFileArchiveDirectory
|| __DATA.__objc_data _OBJC_CLASS_$_MFFileArchiveEntry
|| __DATA.__objc_data _OBJC_CLASS_$_MFFileCompressionQueueActivityManager
|| __DATA.__objc_data _OBJC_CLASS_$_MFLibraryMessage
|| __DATA.__objc_data _OBJC_CLASS_$_MFLibraryStore
|| __DATA.__objc_data _OBJC_CLASS_$_MFLocalActionPersistence_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFLockStateMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailDataMessageStore
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailDropAttachmentDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailDropAttachmentPreviewDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailDropMailParser
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryAddJournaledConversationIDDateReceivedUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryAddSearchableIndexTablesUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryAdoptSharedSchemaMigrationStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryFixPopUidsUniquenessConstraintUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryLocalActionsTablesMigrationStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryMailboxURLMigrationStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryModifyColumnDefinitionsMigrationStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryQueryTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryRebuildThreadsTableUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryResetSequenceNumberMigrationStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageLibraryThreadFlagColorsUpgradeStep
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageRelationshipAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageStore
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMessageStoreSearchResult
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMimePart
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailMimeTextAttachment
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailboxMessageIterationFilter
|| __DATA.__objc_data _OBJC_CLASS_$_MFMailboxPersistence_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageChangeManager_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageCollectionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageContentRequest
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageCriterionConverter
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageDetails
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageInfo
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageInfoOrderedSet
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageKeychainManager
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageLoadingContext
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageLoadingContextEvent
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageLoadingContextToEMSecurityInformationTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessagePersistence_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageReferenceContext
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageSigner
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageSignerEMMessageSignerTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageTransferResult
|| __DATA.__objc_data _OBJC_CLASS_$_MFMessageTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_MFMimeEnrichedReader
|| __DATA.__objc_data _OBJC_CLASS_$_MFOutgoingLibraryMessageContent
|| __DATA.__objc_data _OBJC_CLASS_$_MFOutgoingMessageContent
|| __DATA.__objc_data _OBJC_CLASS_$_MFOutgoingMultipartRelatedContent
|| __DATA.__objc_data _OBJC_CLASS_$_MFOutgoingRichtextMessageContent
|| __DATA.__objc_data _OBJC_CLASS_$_MFPersistenceDatabaseConnection_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFPersistenceDatabaseSchema_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFPersistenceDatabase_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFPersistence_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFPlainTextDocument
|| __DATA.__objc_data _OBJC_CLASS_$_MFPlainTextFragment
|| __DATA.__objc_data _OBJC_CLASS_$_MFProgressiveMimeParser
|| __DATA.__objc_data _OBJC_CLASS_$_MFProtectedDatabasePersistence_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFRFC822AttachmentDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_MFRequestQueue
|| __DATA.__objc_data _OBJC_CLASS_$_MFSMTPConnection
|| __DATA.__objc_data _OBJC_CLASS_$_MFSMTPResponse
|| __DATA.__objc_data _OBJC_CLASS_$_MFSearchableIndexItem_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFSearchableIndexManager_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFSearchableIndex_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFSecureMIMECompositionManager
|| __DATA.__objc_data _OBJC_CLASS_$_MFServerMessagePersistenceFactory_iOS
|| __DATA.__objc_data _OBJC_CLASS_$_MFSignatures
|| __DATA.__objc_data _OBJC_CLASS_$_MFSqliteMessageIDStore
|| __DATA.__objc_data _OBJC_CLASS_$_MFThreadFuzzyMatcher
|| __DATA.__objc_data _OBJC_CLASS_$_MFUserDefaultMigrator
|| __DATA.__objc_data _OBJC_CLASS_$_MFWebAttachmentSource
|| __DATA.__objc_data _OBJC_CLASS_$_MFWebMessageDocument
|| __DATA.__objc_data _OBJC_CLASS_$__MFAccountInformation
|| __DATA.__objc_data _OBJC_CLASS_$__MFActivityMonitorMultiTarget
|| __DATA.__objc_data _OBJC_CLASS_$__MFAddableMessage
|| __DATA.__objc_data _OBJC_CLASS_$__MFAttachmentActiveRequest
|| __DATA.__objc_data _OBJC_CLASS_$__MFBlockIterationHandler
|| __DATA.__objc_data _OBJC_CLASS_$__MFDADeferredDeleteMailboxOperation
|| __DATA.__objc_data _OBJC_CLASS_$__MFDADeferredDeleteMessageOperation
|| __DATA.__objc_data _OBJC_CLASS_$__MFDADeferredModifyMailboxOperation
|| __DATA.__objc_data _OBJC_CLASS_$__MFDADeferredNewMailboxOperation
|| __DATA.__objc_data _OBJC_CLASS_$__MFDADeferredSelectMailboxOperation
|| __DATA.__objc_data _OBJC_CLASS_$__MFDADeferredSetFlagsOperation
|| __DATA.__objc_data _OBJC_CLASS_$__MFDALibraryConsumerFactory
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMSBasicConsumer
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMSSearchResponseConsumer
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMSUpdateConsumer
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageBodyFetchConsumer
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageFetchAttachmentConsumer
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageHeaderFetchConsumer
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageStoreDeleteRequest
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageStoreFetchHeadersRequest
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageStoreFetchRequest
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageStoreFetchUsingRemoteIDRequest
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageStoreGetUpdatesRequest
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageStoreSearchResultBodyConsumer
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAMessageStoreSetFlagsRequest
|| __DATA.__objc_data _OBJC_CLASS_$__MFDAResolveRecipientsConsumer
|| __DATA.__objc_data _OBJC_CLASS_$__MFDASearchCriterionConverterDelegate
|| __DATA.__objc_data _OBJC_CLASS_$__MFDataCollector
|| __DATA.__objc_data _OBJC_CLASS_$__MFDigestMD5Authenticator
|| __DATA.__objc_data _OBJC_CLASS_$__MFEmailAddress
|| __DATA.__objc_data _OBJC_CLASS_$__MFFormatFlowedWriter
|| __DATA.__objc_data _OBJC_CLASS_$__MFLoadingContextEventResult
|| __DATA.__objc_data _OBJC_CLASS_$__MFLoginAuthenticator
|| __DATA.__objc_data _OBJC_CLASS_$__MFMailMessageDuplicateInfo
|| __DATA.__objc_data _OBJC_CLASS_$__MFMailMessageLibraryStatistics
|| __DATA.__objc_data _OBJC_CLASS_$__MFMailboxUidChildrenEnumerator
|| __DATA.__objc_data _OBJC_CLASS_$__MFMessageCollector
|| __DATA.__objc_data _OBJC_CLASS_$__MFMessageContentRequestScheduler
|| __DATA.__objc_data _OBJC_CLASS_$__MFMessageFlags
|| __DATA.__objc_data _OBJC_CLASS_$__MFNTLMAuthenticator
|| __DATA.__objc_data _OBJC_CLASS_$__MFObjectProperty
|| __DATA.__objc_data _OBJC_CLASS_$__MFOfflineCacheOperation
|| __DATA.__objc_data _OBJC_CLASS_$__MFOutgoingMessageBody
|| __DATA.__objc_data _OBJC_CLASS_$__MFPlainAuthenticator
|| __DATA.__objc_data _OBJC_CLASS_$__MFRecipientCollection
|| __DATA.__objc_data _OBJC_CLASS_$__MFRootlessMailboxUid
|| __DATA.__objc_data _OBJC_CLASS_$__MFSatisfiedActivityCondition
|| __DATA.__objc_data _OBJC_CLASS_$__MFSearchMatcherContext
|| __DATA.__objc_data _OBJC_CLASS_$__MFSecCMSDecoder
|| __DATA.__objc_data _OBJC_CLASS_$__MFSecCMSEncoder
|| __DATA.__objc_data _OBJC_CLASS_$__MFSecDataMessageStore
|| __DATA.__objc_data _OBJC_METACLASS_$_DADeliveryAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAccountFactory_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAccountValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_MFActivityCondition
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentBundle
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentCompositionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentLibraryDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentLibraryManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentPlaceholder
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentRaw
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentSecurityScope
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAttachmentUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_MFAuthScheme
|| __DATA.__objc_data _OBJC_METACLASS_$_MFBasicMessageDataSection
|| __DATA.__objc_data _OBJC_METACLASS_$_MFBufferedQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MFCRAM_MD5Authenticator
|| __DATA.__objc_data _OBJC_METACLASS_$_MFCertificateTrustInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MFCertificateTrustInfoEMCertificateTrustInformationTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFCertificateTrustInformationKeychainManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MFComposeAttachmentDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFConnectionSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDADeferredMessageMoveOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDADeferredStoreDraftOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDADelivery
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDADeliveryConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDADraftMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAFolderChangeConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAFolderChangeResult
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAMailAccountConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAMailAccountSyncConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAMailbox
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAMessageContentConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAMessagePayloadFetchResponseImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAMessageStore
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAMessageStoreSaveDraftRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAMoveResponseConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDARequestQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDAStoreDraftConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDATransferActionReplayer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDbJournal
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDecryptedAttachmentDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFDeliveryResult
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFakeAccountsProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFakeLibraryMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFakeMailAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFakeMailMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFakeMailboxUid
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFetchLimits
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFile
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFileArchive
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFileArchiveDirectory
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFileArchiveEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_MFFileCompressionQueueActivityManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MFLibraryMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_MFLibraryStore
|| __DATA.__objc_data _OBJC_METACLASS_$_MFLockStateMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailDataMessageStore
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailDropAttachmentDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailDropMailParser
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryAddJournaledConversationIDDateReceivedUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryAddSearchableIndexTablesUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryAdoptSharedSchemaMigrationStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryFixPopUidsUniquenessConstraintUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryLocalActionsTablesMigrationStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryMailboxURLMigrationStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryModifyColumnDefinitionsMigrationStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryQueryTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryRebuildThreadsTableUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryResetSequenceNumberMigrationStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageLibraryThreadFlagColorsUpgradeStep
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageRelationshipAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageStore
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMessageStoreSearchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMimePart
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailMimeTextAttachment
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailboxMessageIterationFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMailboxPersistence_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageChangeManager_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageCollectionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageContentRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageCriterionConverter
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageDetails
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageInfoOrderedSet
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageKeychainManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageLoadingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageLoadingContextEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageLoadingContextToEMSecurityInformationTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessagePersistence_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageReferenceContext
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageSigner
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageSignerEMMessageSignerTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMessageTransferResult
|| __DATA.__objc_data _OBJC_METACLASS_$_MFMimeEnrichedReader
|| __DATA.__objc_data _OBJC_METACLASS_$_MFOutgoingLibraryMessageContent
|| __DATA.__objc_data _OBJC_METACLASS_$_MFOutgoingMessageContent
|| __DATA.__objc_data _OBJC_METACLASS_$_MFOutgoingMultipartRelatedContent
|| __DATA.__objc_data _OBJC_METACLASS_$_MFOutgoingRichtextMessageContent
|| __DATA.__objc_data _OBJC_METACLASS_$_MFPersistenceDatabaseConnection_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFPersistenceDatabaseSchema_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFPersistenceDatabase_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFPersistence_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFPlainTextDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_MFPlainTextFragment
|| __DATA.__objc_data _OBJC_METACLASS_$_MFProgressiveMimeParser
|| __DATA.__objc_data _OBJC_METACLASS_$_MFProtectedDatabasePersistence_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFRFC822AttachmentDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_MFRequestQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSMTPConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSMTPResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSearchableIndexItem_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSearchableIndexManager_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSearchableIndexPersistence_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSearchableIndex_iOS
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSecureMIMECompositionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_MFSqliteMessageIDStore
|| __DATA.__objc_data _OBJC_METACLASS_$_MFThreadFuzzyMatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_MFUserDefaultMigrator
|| __DATA.__objc_data _OBJC_METACLASS_$_MFWebAttachmentSource
|| __DATA.__objc_data _OBJC_METACLASS_$_MFWebMessageDocument
|| __DATA.__objc_data _OBJC_METACLASS_$__MFAccountInformation
|| __DATA.__objc_data _OBJC_METACLASS_$__MFActivityMonitorMultiTarget
|| __DATA.__objc_data _OBJC_METACLASS_$__MFAddableMessage
|| __DATA.__objc_data _OBJC_METACLASS_$__MFAttachmentActiveRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__MFBlockIterationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDADeferredDeleteMailboxOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDADeferredDeleteMessageOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDADeferredModifyMailboxOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDADeferredNewMailboxOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDADeferredSelectMailboxOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDADeferredSetFlagsOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDALibraryConsumerFactory
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMSBasicConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMSSearchResponseConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMSUpdateConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageBodyFetchConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageFetchAttachmentConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageHeaderFetchConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageStoreDeleteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageStoreFetchHeadersRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageStoreFetchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageStoreFetchUsingRemoteIDRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageStoreGetUpdatesRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageStoreSearchResultBodyConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAMessageStoreSetFlagsRequest
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDAResolveRecipientsConsumer
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDASearchCriterionConverterDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDataCollector
|| __DATA.__objc_data _OBJC_METACLASS_$__MFDigestMD5Authenticator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFEmailAddress
|| __DATA.__objc_data _OBJC_METACLASS_$__MFFormatFlowedWriter
|| __DATA.__objc_data _OBJC_METACLASS_$__MFLoadingContextEventResult
|| __DATA.__objc_data _OBJC_METACLASS_$__MFLoginAuthenticator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFMailMessageDuplicateInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__MFMailMessageLibraryStatistics
|| __DATA.__objc_data _OBJC_METACLASS_$__MFMailboxUidChildrenEnumerator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFMessageCollector
|| __DATA.__objc_data _OBJC_METACLASS_$__MFMessageContentRequestScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$__MFMessageFlags
|| __DATA.__objc_data _OBJC_METACLASS_$__MFNTLMAuthenticator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFObjectProperty
|| __DATA.__objc_data _OBJC_METACLASS_$__MFOfflineCacheOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__MFOutgoingMessageBody
|| __DATA.__objc_data _OBJC_METACLASS_$__MFPlainAuthenticator
|| __DATA.__objc_data _OBJC_METACLASS_$__MFRecipientCollection
|| __DATA.__objc_data _OBJC_METACLASS_$__MFRootlessMailboxUid
|| __DATA.__objc_data _OBJC_METACLASS_$__MFSQLGenerationContext
|| __DATA.__objc_data _OBJC_METACLASS_$__MFSatisfiedActivityCondition
|| __DATA.__objc_data _OBJC_METACLASS_$__MFSearchMatcherContext
|| __DATA.__objc_data _OBJC_METACLASS_$__MFSecCMSDecoder
|| __DATA.__objc_data _OBJC_METACLASS_$__MFSecCMSEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$__MFSecDataMessageStore
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._accountConduit
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedAccountID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedAccountPersistentUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedArchiveByDefault
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedCalendarEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedDisplayName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedDraftsFolderID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedEmailAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedEmailAddresses
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedIconString
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedInboxFolderID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedIsActive
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedIsHotmailAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedIsManaged
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedJunkFolderID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedPerMessageEncryptionEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedRestrictMessageTransfersToOtherAccounts
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedRestrictSendingFromExternalProcesses
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedRestrictSyncingRecents
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedSecureMIMEShouldEncrypt
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedSecureMIMEShouldSign
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedSentMessagesFolderID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedSourceIsManaged
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedStoreDraftsOnServer
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedSupportsMailDrop
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._cachedTrashFolderID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._daAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._daysToSync
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._doneInitialInboxCheck
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._folderTag
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._isNetworkReachable
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._loadedInitialMailboxList
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._observingPushedFoldersPrefsChanged
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._receivedInitialMailboxUpdate
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._requestQueuesByFolderID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._supportsConversations
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._supportsMessageFlagging
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._supportsServerDrafts
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._supportsServerSearch
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._supportsUniqueServerId
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._temporaryInbox
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._userFocusMailboxIds
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._watchedFolderIds
|| __DATA.__objc_ivar _OBJC_IVAR_$_DAMailAccount._watchedFolderIdsLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachment._attachmentManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentDataProvider._url
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._arrayAccessQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._attachments
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._metaDataLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._metadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFAttachmentManager._providers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBasicMessageDataSection._complete
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBasicMessageDataSection._dataHolder
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBasicMessageDataSection._partName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBasicMessageDataSection._partial
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._currentSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._maximumLatency
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._maximumSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFBufferedQueue._timeOfLastFlush
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._allowFallbacks
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._buffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._bufferLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._bufferRemainingBytes
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._bufferStart
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._compressionEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._connectionSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._deflater
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._desiredBufferLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._inflater
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._isFetching
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._lastUsedTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._readBytesNotLogged
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._securityLayer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._socket
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnection._zbuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._allowsTrustPrompt
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._certUIService
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._clientCertificates
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._connectionServiceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._hostname
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._portNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._serviceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._tryDirectSSLConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._usesOpportunisticSockets
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFConnectionSettings._usesSSL
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDADelivery._DAMailAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDADelivery._accountID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDADelivery._folderID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDADelivery._library
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDADelivery._originalLongID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDADelivery._originalMessageID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDADeliveryConsumer._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDAMailbox._folderID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDAMessagePayloadFetchResponseImpl.data
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDAMessagePayloadFetchResponseImpl.streaming
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDAMessagePayloadFetchResponseImpl.streamingDone
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDARequestQueue._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFDARequestQueue._folderID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFError._moreUserInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._conversationFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._libraryID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._mailboxID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._messageID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._originalMailboxID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._remoteID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._size
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._uid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryMessage._uniqueRemoteId
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryStore._criterion
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryStore._earliestReceivedDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryStore._library
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFLibraryStore._serverMessageCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._archiveAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._compositionSpecification
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._headers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._htmlString
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._message
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._mixedContent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._otherStringsAndAttachments
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._plainTextAlternative
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._result
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._textPartsAreHTML
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._threaded
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailDelivery._useCellDataOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessage._info
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessage._messageFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessage._modSequenceNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._deletedMessageCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._deletedMessagesSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._generationNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._mailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._state
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMailMessageStore._unreadMessageCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.conversationHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.dateReceived
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.dateSent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.externalID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.library
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.libraryID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.mailboxID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.messageFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.messageIDHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageDetails.uid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageLibrary._attachmentDataProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageLibrary._path
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMessageSigner._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._commandStack
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._currentIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._eatOneNewline
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._indentWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._inputBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._inputLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._insideComment
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._lastQuoteLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._noFillLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._outputBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._outputString
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._postpendHTML
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._prependHTML
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMimeEnrichedReader._wantsPlainText
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMonitoredInvocation._monitor
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFMonitoredInvocation._shouldLogInvocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._activeCalls
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._alternateAdviceState
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._backgroundWifiClients
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._cellularDataAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._ctc
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._dataStatusQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._dns
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._hasCellDataCapability
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._hasWiFiCapability
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._isRoamingAllowed
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._isWiFiEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._observers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._prefsQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._radiosPreferences
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._rl
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._symptomsToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFNetworkController._wiFiPreferences
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._archiveAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._compositionSpecification
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._currentDeliveryObject
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._deliveryAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._headers
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._htmlBody
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._message
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._mixedContent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._otherHTMLAndAttachments
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._plainTextAlternative
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFOutgoingMessageDelivery._textPartsAreHTML
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFPlainTextDocument._fragments
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFPlainTextDocument._text
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFPlainTextFragment._quoteLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFPlainTextFragment._range
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._context
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._currentBoundary
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._currentPart
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._cursor
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._data
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._lastLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._parserFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._preserveHeaders
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFProgressiveMimeParser._topLevelPart
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._dislikesSaveSentMbox
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._domainName
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._hideLoggedData
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._lastCommandTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._lastResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._mdata
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._originalSocketTimeout
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._saveSentMbox
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._serviceExtensions
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPConnection._useSaveSent
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPDelivery._connection
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._lastResponseLine
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._statusClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._statusDetail
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSMTPResponse._statusSubject
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._certificatesByRecipient
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionIdentity
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionIdentityError
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionPolicy
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._encryptionStatusSemaphore
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._errorsByRecipient
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._invalidated
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._recipients
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._sendingAccount
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._sendingAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingIdentity
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingIdentityError
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingPolicy
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSecureMIMECompositionManager._signingStatusSemaphore
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSqliteMessageIDStore._library
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSqliteMessageIDStore._mailboxRowid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MFSqliteMessageIDStore._url
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._archiveMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._cachedLibraryID
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._cachedLibraryIDLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._cachedMailboxenLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._currentChokedActions
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._deletionLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._draftsMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._inboxMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._junkMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._lastConnectionError
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._library
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._mailboxCachePath
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._messageStoresCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._nonPersistentPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._path
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._rootMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._sentMessagesMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_MailAccount._trashMailboxUid
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._connection
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._deliveryClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._lastTimerSetTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._supportsOutboxCopy
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._supportsPipelining
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._timer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SMTPAccount._useCellDataOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFActivityMonitorMultiTarget._allTargets
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFActivityMonitorMultiTarget._primaryTarget
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDALibraryConsumerFactory._library
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDALibraryConsumerFactory._message
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSBasicConsumer.error
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSBasicConsumer.library
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSBasicConsumer.mailbox
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSBasicConsumer.monitor
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSBasicConsumer.numNewMessages
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSBasicConsumer.store
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSSearchResponseConsumer.doneCondition
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSSearchResponseConsumer.earliestDateAdded
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSSearchResponseConsumer.latestDateToAdd
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSSearchResponseConsumer.searchResult
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSSearchResponseConsumer.timeReceivedLastResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMSSearchResponseConsumer.totalCount
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageFetchAttachmentConsumer._accumulatedLength
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageFetchAttachmentConsumer._dataWasBase64
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageFetchAttachmentConsumer._expectedLength
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageFetchAttachmentConsumer._fetchSucceeded
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageFetchAttachmentConsumer._monitor
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageFetchAttachmentConsumer._progressFilter
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreFetchHeadersRequest.consumer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreFetchHeadersRequest.message
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreFetchHeadersRequest.store
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreFetchRequest.consumer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreFetchRequest.format
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreFetchRequest.message
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreFetchRequest.part
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreFetchRequest.partial
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreFetchRequest.store
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreGetUpdatesRequest._isUserRequested
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreSearchResultBodyConsumer._doneCondition
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreSearchResultBodyConsumer._error
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAMessageStoreSearchResultBodyConsumer._streamConsumer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAResolveRecipientsConsumer._conditionLock
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAResolveRecipientsConsumer._error
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDAResolveRecipientsConsumer._resolvedRecipientsByEmailAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDataCollector._compressionQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDataCollector._consumer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDataCollector._incomplete
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDataCollector._library
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDataCollector._message
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDataCollector._part
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDataCollector._partial
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDataCollector._relaxDataProtection
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDigestMD5Authenticator._cryptInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDigestMD5Authenticator._expectedResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDigestMD5Authenticator._maxbuf
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFDigestMD5Authenticator._securityLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._addedTrailingSpaces
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._encoding
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._inputDocument
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._lineString
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._outputString
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFFormatFlowedWriter._quotedString
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFLoginAuthenticator._justSentPassword
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidChildrenEnumerator._includeHidden
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidChildrenEnumerator._index
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidChildrenEnumerator._mailboxes
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidEnumerator._index
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMailboxUidEnumerator._mailboxes
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFMessageFlags.realFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFNTLMAuthenticator._ntlmError
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFNTLMAuthenticator._ntlmGeneratorRef
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFOutgoingMessageBody._consumer
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFOutgoingMessageBody._count
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFOutgoingMessageBody._lastNewLine
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFOutgoingMessageBody._rawData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSQLGenerationContext.baseTable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSQLGenerationContext.haveLibraryIDCriterion
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSQLGenerationContext.mailboxIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSQLGenerationContext.propertyMapper
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSQLGenerationContext.protectedDataAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSQLGenerationContext.searchableIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSQLGenerationContext.tables
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSQLGenerationContext.usedBaseTable
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._SecCMSError
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._digest
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._envelopedData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._isEncrypted
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._message
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._signedData
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSDecoder._signers
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSEncoder._SecCMSError
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSEncoder._encoder
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSEncoder._message
|| __DATA.__objc_ivar _OBJC_IVAR_$__MFSecCMSEncoder._singleShot
|| __DATA_CONST.__const _ATTNetworkCapability
|| __DATA_CONST.__const _AccountInfoDidChange
|| __DATA_CONST.__const _AccountMailboxListingDidChange
|| __DATA_CONST.__const _AccountMailboxListingDidFetch
|| __DATA_CONST.__const _AccountMailboxListingDidLoad
|| __DATA_CONST.__const _AccountMailboxListingWillFetch
|| __DATA_CONST.__const _AccountMailboxListingWillLoad
|| __DATA_CONST.__const _CcMeCriterionName
|| __DATA_CONST.__const _DeliveryAccountShouldUseAuthentication
|| __DATA_CONST.__const _DeliveryAccountsKey
|| __DATA_CONST.__const _EASGeneratedICSAttachmentCID
|| __DATA_CONST.__const _EASGeneratedICSDisplayName
|| __DATA_CONST.__const _FlaggedCriterionName
|| __DATA_CONST.__const _HasAttachmentsCriterionName
|| __DATA_CONST.__const _IncludesMeCriterionName
|| __DATA_CONST.__const _LastWeekCriterionName
|| __DATA_CONST.__const _MFAccountOfflineStatusDidChange
|| __DATA_CONST.__const _MFAccountsWithErrorsKey
|| __DATA_CONST.__const _MFAliasDefaultKey
|| __DATA_CONST.__const _MFAliasPreferenceNameKey
|| __DATA_CONST.__const _MFAttachmentAttachmentKey
|| __DATA_CONST.__const _MFAttachmentCollectionFilterKey
|| __DATA_CONST.__const _MFAttachmentContentIDKey
|| __DATA_CONST.__const _MFAttachmentInvocationFilterKey
|| __DATA_CONST.__const _MFAttachmentInvocationURLKey
|| __DATA_CONST.__const _MFAttachmentIsSinglePagePDFKey
|| __DATA_CONST.__const _MFAttachmentMonitorKey
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONContentID
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONFileName
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONFileSize
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONFileURL
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONMailDrop
|| __DATA_CONST.__const _MFAttachmentPlaceholderJSONMimeType
|| __DATA_CONST.__const _MFAttachmentPlaceholderMagicQuoted
|| __DATA_CONST.__const _MFAttachmentPlaceholderMimeType
|| __DATA_CONST.__const _MFAttachmentPrimaryConsumerKey
|| __DATA_CONST.__const _MFAttachmentSyncLockKey
|| __DATA_CONST.__const _MFAuthSchemeAPop
|| __DATA_CONST.__const _MFAuthSchemeCramMd5
|| __DATA_CONST.__const _MFAuthSchemeDigestMD5
|| __DATA_CONST.__const _MFAuthSchemeGSSAPI
|| __DATA_CONST.__const _MFAuthSchemeKerberos4
|| __DATA_CONST.__const _MFAuthSchemeNTLM
|| __DATA_CONST.__const _MFBatterySaverModeDidChange
|| __DATA_CONST.__const _MFCarrierBundleChangedNotification
|| __DATA_CONST.__const _MFCertificateTrustDidChangeNotification
|| __DATA_CONST.__const _MFContentIDScheme
|| __DATA_CONST.__const _MFDAMailAccountStoreDraftsOnServer
|| __DATA_CONST.__const _MFDeliveryAccountWillBeRemoved
|| __DATA_CONST.__const _MFDeliveryAccountsDidChange
|| __DATA_CONST.__const _MFGroupByNothingKey
|| __DATA_CONST.__const _MFHealAccountDateLastFetched
|| __DATA_CONST.__const _MFHealAccountShouldShowAlert
|| __DATA_CONST.__const _MFImageGlpyhsAppShortcutAddAccount
|| __DATA_CONST.__const _MFImageGlpyhsAppShortcutCompose
|| __DATA_CONST.__const _MFImageGlpyhsAppShortcutSearch
|| __DATA_CONST.__const _MFImageGlyphArchiveMailbox
|| __DATA_CONST.__const _MFImageGlyphDraftMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteAttachmentsMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteCollapseMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteExpandMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteFlaggedMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteInboxUnifiedMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteMuteThreadMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteNotifydMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteReadLaterMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteTodayMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteUnreadMailbox
|| __DATA_CONST.__const _MFImageGlyphFavoriteVIPMailbox
|| __DATA_CONST.__const _MFImageGlyphGenericMailbox
|| __DATA_CONST.__const _MFImageGlyphInboxMailbox
|| __DATA_CONST.__const _MFImageGlyphJunkMailbox
|| __DATA_CONST.__const _MFImageGlyphOutboxMailbox
|| __DATA_CONST.__const _MFImageGlyphSentMailbox
|| __DATA_CONST.__const _MFImageGlyphTrashMailbox
|| __DATA_CONST.__const _MFMailAccountArchive
|| __DATA_CONST.__const _MFMailAccountAuthenticationScheme
|| __DATA_CONST.__const _MFMailAccountClass
|| __DATA_CONST.__const _MFMailAccountDeliveryHostname
|| __DATA_CONST.__const _MFMailAccountDeliveryPortNumber
|| __DATA_CONST.__const _MFMailAccountDeliverySSLEnabled
|| __DATA_CONST.__const _MFMailAccountDescription
|| __DATA_CONST.__const _MFMailAccountEncryptByDefaultUserOverrideable
|| __DATA_CONST.__const _MFMailAccountEncryptionEnabled
|| __DATA_CONST.__const _MFMailAccountEncryptionIdentity
|| __DATA_CONST.__const _MFMailAccountEncryptionIdentityUserOverrideable
|| __DATA_CONST.__const _MFMailAccountLastEmailAliasesSyncDate
|| __DATA_CONST.__const _MFMailAccountMCProfileUUID
|| __DATA_CONST.__const _MFMailAccountNumberOfDaysToKeepTrash
|| __DATA_CONST.__const _MFMailAccountNumberOfDaysToKeepTrashDefaultValue
|| __DATA_CONST.__const _MFMailAccountPerMessageEncryptionEnabled
|| __DATA_CONST.__const _MFMailAccountPushedMailboxUidsDidChange
|| __DATA_CONST.__const _MFMailAccountReceiveEmailAliasAddresses
|| __DATA_CONST.__const _MFMailAccountRestrictMessageTransfersToOtherAccounts
|| __DATA_CONST.__const _MFMailAccountRestrictRecentsSyncing
|| __DATA_CONST.__const _MFMailAccountRestrictSendingFromExternalProcesses
|| __DATA_CONST.__const _MFMailAccountSMIMEEnabled
|| __DATA_CONST.__const _MFMailAccountSSLClientIdentity
|| __DATA_CONST.__const _MFMailAccountSSLIsDirect
|| __DATA_CONST.__const _MFMailAccountSigningEnabled
|| __DATA_CONST.__const _MFMailAccountSigningIdentity
|| __DATA_CONST.__const _MFMailAccountSigningIdentityUserOverrideable
|| __DATA_CONST.__const _MFMailAccountSigningUserOverrideable
|| __DATA_CONST.__const _MFMailAccountSupportsMailDrop
|| __DATA_CONST.__const _MFMailAccountType
|| __DATA_CONST.__const _MFMailAccountUsername
|| __DATA_CONST.__const _MFMailAttachmentCachedSizesChangedNotification
|| __DATA_CONST.__const _MFMailAttachmentMailDropAvailableKey
|| __DATA_CONST.__const _MFMailAttachmentMailDropConfiguredKey
|| __DATA_CONST.__const _MFMailAttachmentMailDropThresholdKey
|| __DATA_CONST.__const _MFMailAttachmentMessageLimitKey
|| __DATA_CONST.__const _MFMailAttachmentPlaceholderThresholdKey
|| __DATA_CONST.__const _MFMailAttachmentPlaceholdersAvailableKey
|| __DATA_CONST.__const _MFMailAttachmentUploadLimitKey
|| __DATA_CONST.__const _MFMailDefaultSendingAccountDidChange
|| __DATA_CONST.__const _MFMailDropDeliveryStateKey
|| __DATA_CONST.__const _MFMailDropiCloudURL
|| __DATA_CONST.__const _MFMailMessageStoreDidClose
|| __DATA_CONST.__const _MFMailMessageStoreDidOpen
|| __DATA_CONST.__const _MFMailMessageStoreStructureChanged
|| __DATA_CONST.__const _MFMailboxUidDidBecomeInvalidNotification
|| __DATA_CONST.__const _MFMailboxUidWasRenamedNotification
|| __DATA_CONST.__const _MFMeetingMetadataShouldUseICSRepresentationKey
|| __DATA_CONST.__const _MFMessageCcContainsAccountAddress
|| __DATA_CONST.__const _MFMessageChangeReason
|| __DATA_CONST.__const _MFMessageConversationIsMuted
|| __DATA_CONST.__const _MFMessageConversationIsVIP
|| __DATA_CONST.__const _MFMessageCriterionCompareRelativeToOtherPrefix
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyAnyRecipient
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyBccRecipient
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyBody
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyCcRecipient
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyCompound
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyDateReceived
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyDateSent
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyFlagged
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyFrom
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyHasAttachments
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyIsRead
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyMailbox
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeySpotlight
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeySubject
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyToRecipient
|| __DATA_CONST.__const _MFMessageCriterionConverterCriterionKeyVIP
|| __DATA_CONST.__const _MFMessageErrorDomain
|| __DATA_CONST.__const _MFMessageFlagColor
|| __DATA_CONST.__const _MFMessageFontSizeDelta
|| __DATA_CONST.__const _MFMessageHasAttachments
|| __DATA_CONST.__const _MFMessageHasBeenViewed
|| __DATA_CONST.__const _MFMessageHighlightTextInTOC
|| __DATA_CONST.__const _MFMessageIsEncrypted
|| __DATA_CONST.__const _MFMessageIsFlagged
|| __DATA_CONST.__const _MFMessageIsJunk
|| __DATA_CONST.__const _MFMessageIsNotJunk
|| __DATA_CONST.__const _MFMessageIsServerSearchResult
|| __DATA_CONST.__const _MFMessageIsSigned
|| __DATA_CONST.__const _MFMessageIsThreadSearchResult
|| __DATA_CONST.__const _MFMessageKeychainManagerCertificateDeniedDomain
|| __DATA_CONST.__const _MFMessageLoadScheme
|| __DATA_CONST.__const _MFMessageNumberOfAttachmentsChanged
|| __DATA_CONST.__const _MFMessagePartNameMeetingData
|| __DATA_CONST.__const _MFMessagePartNameMeetingID
|| __DATA_CONST.__const _MFMessagePartNameMeetingMetadata
|| __DATA_CONST.__const _MFMessagePartNameSummary
|| __DATA_CONST.__const _MFMessagePriorityLevel
|| __DATA_CONST.__const _MFMessageSenderIsVIP
|| __DATA_CONST.__const _MFMessageToContainsAccountAddress
|| __DATA_CONST.__const _MFMessageToOrCcContainsAccountAddress
|| __DATA_CONST.__const _MFMessageViewedDate
|| __DATA_CONST.__const _MFMessageWasRedirected
|| __DATA_CONST.__const _MFMonitoredActivityDidRemoveActivityTarget
|| __DATA_CONST.__const _MFOAuth2RefreshToken
|| __DATA_CONST.__const _MFOAuth2Token
|| __DATA_CONST.__const _MFPowerAssertionDidExpire
|| __DATA_CONST.__const _MFProgressiveMimeParseErrorDomain
|| __DATA_CONST.__const _MFPropertyMapperLookupKeyCriterionType
|| __DATA_CONST.__const _MFRecoveryAttemptorClassNameKey
|| __DATA_CONST.__const _MFReloadNetworkLoggingNotification
|| __DATA_CONST.__const _MFRequestedWebLoginURLKey
|| __DATA_CONST.__const _MFSSLErrorCertificateDigestKey
|| __DATA_CONST.__const _MFSSLErrorCertificateKey
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationEncryptionIdentity
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationRecipientCertificates
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationShouldEncrypt
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationShouldSign
|| __DATA_CONST.__const _MFSecureMIMECompositionSpecificationSigningIdentity
|| __DATA_CONST.__const _MFSecureMIMECompositionStatusContextCertificatesByRecipient
|| __DATA_CONST.__const _MFSecureMIMECompositionStatusContextErrorsByRecipient
|| __DATA_CONST.__const _MFSecureMIMECompositionStatusContextIdentityError
|| __DATA_CONST.__const _MFSecureMIMECompositionStatusContextIdentityRef
|| __DATA_CONST.__const _MFServerSSLCertificateIsTrusted
|| __DATA_CONST.__const _MFSignerInfoErrorKey
|| __DATA_CONST.__const _MFUIFocusedMessageDidChange
|| __DATA_CONST.__const _MFUserFriendlyErrorDescriptionKey
|| __DATA_CONST.__const _MailAccountArchiveMailboxName
|| __DATA_CONST.__const _MailAccountContentsDidChange
|| __DATA_CONST.__const _MailAccountContentsDidChangeNotificationPayload
|| __DATA_CONST.__const _MailAccountContentsDidChangeUids
|| __DATA_CONST.__const _MailAccountCustomSignature
|| __DATA_CONST.__const _MailAccountDraftsMailboxName
|| __DATA_CONST.__const _MailAccountEmailAddresses
|| __DATA_CONST.__const _MailAccountFullUserName
|| __DATA_CONST.__const _MailAccountHostname
|| __DATA_CONST.__const _MailAccountInvalidateMeetingCache
|| __DATA_CONST.__const _MailAccountJunkMailboxName
|| __DATA_CONST.__const _MailAccountManagedTag
|| __DATA_CONST.__const _MailAccountPassword
|| __DATA_CONST.__const _MailAccountPortNumber
|| __DATA_CONST.__const _MailAccountPrimaryDeliveryAccountDisabled
|| __DATA_CONST.__const _MailAccountSMTPAlternateIdentifiers
|| __DATA_CONST.__const _MailAccountSSLEnabled
|| __DATA_CONST.__const _MailAccountSSLEnabledIsEditable
|| __DATA_CONST.__const _MailAccountSentMessagesMailboxName
|| __DATA_CONST.__const _MailAccountTrashMailboxName
|| __DATA_CONST.__const _MailAccountsKey
|| __DATA_CONST.__const _MailDefaultSendingAccountKey
|| __DATA_CONST.__const _MailMessageLibraryConversationHasMerged
|| __DATA_CONST.__const _MailMessageLibraryDidBecomeAvailable
|| __DATA_CONST.__const _MailMessageLibraryDidFinishReconciliation
|| __DATA_CONST.__const _MailMessageLibraryDidFinishReconciliationOfMailbox
|| __DATA_CONST.__const _MailMessageLibraryMessagesHaveNewData
|| __DATA_CONST.__const _MailMessageLibraryNotificationsConversationIDKey
|| __DATA_CONST.__const _MailMessageLibraryNotificationsMessagesKey
|| __DATA_CONST.__const _MailMessageLibraryNotificationsOldConversationIDKey
|| __DATA_CONST.__const _MailMessageLibraryPreviousProtectedDataAvailibilityKey
|| __DATA_CONST.__const _MailMessageLibraryProtectedDataAvailibilityKey
|| __DATA_CONST.__const _MailMessageLibraryReconciledMailboxKey
|| __DATA_CONST.__const _MailMessageLibraryWillBecomeUnavailable
|| __DATA_CONST.__const _MailMessageStoreChangedConversationFlagsKey
|| __DATA_CONST.__const _MailMessageStoreChangedFlagsKey
|| __DATA_CONST.__const _MailMessageStoreChangedMailboxesKey
|| __DATA_CONST.__const _MailMessageStoreEarliestPreviousReceivedDate
|| __DATA_CONST.__const _MailMessageStoreMessageFlagsChanged
|| __DATA_CONST.__const _MailMessageStoreMessageKey
|| __DATA_CONST.__const _MailMessageStoreMessagesAdded
|| __DATA_CONST.__const _MailMessageStoreMessagesAttachmentStorageLocationChanged
|| __DATA_CONST.__const _MailMessageStoreMessagesCompacted
|| __DATA_CONST.__const _MailMessageStoreMessagesWillBeCompacted
|| __DATA_CONST.__const _MailboxAttributesKey
|| __DATA_CONST.__const _MailboxChildrenKey
|| __DATA_CONST.__const _MailboxExtraAttributesKey
|| __DATA_CONST.__const _MailboxListingKey
|| __DATA_CONST.__const _MailboxNameKey
|| __DATA_CONST.__const _MailboxUpdatedWithNoChanges
|| __DATA_CONST.__const _MailboxUserInfoDidChange
|| __DATA_CONST.__const _MessageIsBeingDelivered
|| __DATA_CONST.__const _MessageIsDeleted
|| __DATA_CONST.__const _MessageIsJournaled
|| __DATA_CONST.__const _MessageIsRead
|| __DATA_CONST.__const _MessageQueuedForDelivery
|| __DATA_CONST.__const _MessageWasForwarded
|| __DATA_CONST.__const _MessageWasRepliedTo
|| __DATA_CONST.__const _MobileMailMigratorNeedsSpotlightReIndexKey
|| __DATA_CONST.__const _MonitoredActivityCurrentCount
|| __DATA_CONST.__const _MonitoredActivityCurrentItemProgress
|| __DATA_CONST.__const _MonitoredActivityDictMessage
|| __DATA_CONST.__const _MonitoredActivityDidAddActivityTarget
|| __DATA_CONST.__const _MonitoredActivityEnded
|| __DATA_CONST.__const _MonitoredActivityInvocation
|| __DATA_CONST.__const _MonitoredActivityMaxCount
|| __DATA_CONST.__const _MonitoredActivityMessage
|| __DATA_CONST.__const _MonitoredActivityNewPrimaryTarget
|| __DATA_CONST.__const _MonitoredActivityOldPrimaryTarget
|| __DATA_CONST.__const _MonitoredActivityPrimaryTargetChanged
|| __DATA_CONST.__const _MonitoredActivityReasonArchiving
|| __DATA_CONST.__const _MonitoredActivityReasonCompacting
|| __DATA_CONST.__const _MonitoredActivityReasonDeleting
|| __DATA_CONST.__const _MonitoredActivityReasonFetching
|| __DATA_CONST.__const _MonitoredActivityReasonJunking
|| __DATA_CONST.__const _MonitoredActivityReasonMoving
|| __DATA_CONST.__const _MonitoredActivityReset
|| __DATA_CONST.__const _MonitoredActivityStarted
|| __DATA_CONST.__const _NetworkConfigurationDidChangeNotification
|| __DATA_CONST.__const _NetworkConnectionEstablished
|| __DATA_CONST.__const _NetworkSimulationBitfieldKey
|| __DATA_CONST.__const _NetworkSymptonsHasAlternativeAdvice
|| __DATA_CONST.__const _ReadCriterionName
|| __DATA_CONST.__const _StoreServerCountChanged
|| __DATA_CONST.__const _ThreadMuteCriterionName
|| __DATA_CONST.__const _ThreadNotifyCriterionName
|| __DATA_CONST.__const _ToMeCriterionName
|| __DATA_CONST.__const _TodayCriterionName
|| __DATA_CONST.__const _UnreadCriterionName
|| __DATA_CONST.__const _VIPCriterionName
|| __DATA_CONST.__const _YesterdayCriterionName
|| __DATA_CONST.__const __MailAccountCachePolicy
|| __DATA_CONST.__const _gCommandSpecTable
|| __DATA_CONST.__const _kMFMailDropAccountName
|| __DATA_CONST.__const _kMFMailDropServiceKey
|| __DATA_CONST.__const _kMFMailMessageLibraryDatabaseResetOnLaunchFile
|| __DATA_CONST.__const _kMFUTTypeIWork
|| __DATA_CONST.__const _kMFUTTypeIcalIcs
|| __DATA_CONST.__const _kMFUTTypeIcalVcs
|| __DATA_CONST.__const _kMFUTTypeMobileConfig
|| __DATA_CONST.__const _kMFUTTypeMobileProvision
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DAMailAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DeliveryAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_LocalAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAccountLoader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFActivityCondition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFActivityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAppStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAttachment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAttachmentComposeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFAttachmentManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFCRAM_MD5AuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFDigestMD5AuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFFileCompressionQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFInvocationQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFLocalActionReplayHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFLocalizedMessageHeaders
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailDelivery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailDropMailDelivery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailMessageLibrary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailboxProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailboxUid
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMailboxUidTransformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMessageCriterion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMessageLibrary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMessageURLConnectionDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMessageWriter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFMonitoredInvocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFNTLMAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFNetworkController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFOutgoingMessage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFOutgoingMessageDelivery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFPlainAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFPowerController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFSMTPDelivery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFSearchableIndexPersistence_iOS
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFTaskAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MFWeakObjectCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_MailAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SMTPAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MFMailboxUidEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MFNetworkObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__MFSQLGenerationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DAMailAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DeliveryAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_LocalAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAccountLoader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAccountStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFActivityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAppStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAttachment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAttachmentCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAttachmentComposeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFAttachmentManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFCRAM_MD5AuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFContentErrorDocument
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFDigestMD5AuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFFileCompressionQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFInvocationQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFLocalActionPersistence_iOS
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFLocalActionReplayHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFLocalizedMessageHeaders
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailDelivery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailDropAttachmentPreviewDataProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailDropMailDelivery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailMessageLibrary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailboxProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailboxUid
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMailboxUidTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMessageCriterion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMessageLibrary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMessageTransformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMessageURLConnectionDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMessageWriter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFMonitoredInvocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFNTLMAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFNetworkController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFOutgoingMessage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFOutgoingMessageDelivery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFPlainAuthScheme
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFPowerController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFSMTPDelivery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFServerMessagePersistenceFactory_iOS
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFSignatures
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFTaskAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MFWeakObjectCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_MailAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SMTPAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MFMailboxUidEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__MFNetworkObserver
|| __TEXT.__const _MFAttachmentPlaceholderMagicLowerLimit
|| __TEXT.__const _MFAttachmentPlaceholderMagicUpperLimit
|| __TEXT.__const _MFBatteryLevelUnknown
|| __TEXT.__const _kMailDropDownloadSessionRequestTimeoutInterval
|| __TEXT.__const _kMailDropDownloadSessionResourceTimeoutInterval
|| __TEXT.__text _AccountConfigurationServiceCopyAccountsForEmailAddress
|| __TEXT.__text _AccountConfigurationServiceCopyAccountsForEmailAddressUsingAccountInfo
|| __TEXT.__text _ECMailboxTypeFromMailboxUidType
|| __TEXT.__text _EFPromiseAttachmentDataHandler
|| __TEXT.__text _MFComparatorFunctionForSortOrder
|| __TEXT.__text _MFCopyResponseDataForURLRequest
|| __TEXT.__text _MFCreateExternalConversationID
|| __TEXT.__text _MFCreateStringByCondensingWhitespace
|| __TEXT.__text _MFCreateURLForContentID
|| __TEXT.__text _MFCriterionExpressionForDate
|| __TEXT.__text _MFCriterionTypeIsDate
|| __TEXT.__text _MFDAShouldRetryOperationWithStatusCode
|| __TEXT.__text _MFDBJournalMergeResultString
|| __TEXT.__text _MFDescriptionForMessageFlags
|| __TEXT.__text _MFErrorCodeWithDataStatus
|| __TEXT.__text _MFFlagChangeDictionaryForFlagChange
|| __TEXT.__text _MFFlagChangeDictionaryStrippingServerFlags
|| __TEXT.__text _MFFlagChangeObjectForFlagChangeDictionary
|| __TEXT.__text _MFFlagsObjectForFlags
|| __TEXT.__text _MFGetFlagsAndMaskForFlagChange
|| __TEXT.__text _MFHasAccountsEntitlement
|| __TEXT.__text _MFLogSQLiteError
|| __TEXT.__text _MFLookupLocalizedString
|| __TEXT.__text _MFMailCopyEventWithExternalIdentifierAndPersistentStoreID
|| __TEXT.__text _MFMailCopySharedEventStore
|| __TEXT.__text _MFMailDirectory
|| __TEXT.__text _MFMailDirectoryURL
|| __TEXT.__text _MFMailGetEventUIDForUniqueIdentifierAndPersistentStoreID
|| __TEXT.__text _MFMailMessageLibraryAttachmentsDirectoryPathForMailbox
|| __TEXT.__text _MFMailMessageLibraryAttachmentsDirectoryURLForMailboxFileURL
|| __TEXT.__text _MFMailMessageLibraryDataDirectoryURLForMailboxFileURL
|| __TEXT.__text _MFMailMessageLibraryMessageDataDirectoryPathForMailbox
|| __TEXT.__text _MFMailMessageLibraryMessageFilePrefixFromMessage
|| __TEXT.__text _MFMailMessageLibraryMessageIdentifiedFromFileURL
|| __TEXT.__text _MFMessageDeliveryStatusString
|| __TEXT.__text _MFMessageFlagsByApplyingDictionary
|| __TEXT.__text _MFMessageFlagsForECMessageFlags
|| __TEXT.__text _MFMessageFrameworkBundle
|| __TEXT.__text _MFMimeDataCreateStringFromHeaderBytes
|| __TEXT.__text _MFMimeDataGetRangeOfHeader
|| __TEXT.__text _MFNSStringFromColumnInStatement
|| __TEXT.__text _MFReadLoggingDefaults
|| __TEXT.__text _MFRegisterPowerObserver
|| __TEXT.__text _MFSMTPFailureReasonString
|| __TEXT.__text _MFSetUserAgent
|| __TEXT.__text _MFUnregisterPowerObserver
|| __TEXT.__text _MFUserAgent
|| __TEXT.__text _MFWalkUpDAErrorChain
|| __TEXT.__text _MailAccountCachePolicyStringForEnumValue
|| __TEXT.__text _MessageInfoComparator
|| __TEXT.__text _MessageInfoSentDateComparator
|| __TEXT.__text _NSStringFromMailboxUidType
|| __TEXT.__text __CreateICUSQLiteContext
|| __TEXT.__text __DisposeICUSQLiteContext
|| __TEXT.__text __ICUSQLiteMatch
|| __TEXT.__text __MFCompareMailboxDictionariesByName
|| __TEXT.__text __MFCopyAccountsForAddressAndConfigurations
|| __TEXT.__text __MFCopyAccountsFromDomainData
|| __TEXT.__text __MFCopyAccountsFromDomainNode
|| __TEXT.__text __MFCopyAccountsFromDomainsData
|| __TEXT.__text __MFCopyAccountsFromDomainsNode
|| __TEXT.__text __MFCurrentCapabilities
|| __TEXT.__text __MFMoveDatabase
|| __TEXT.__text __archive_close_callback
|| __TEXT.__text __archive_open_callback
|| __TEXT.__text __archive_write_callback
|| __TEXT.__text __junkLevelForFlags
|| __TEXT.__text __powerChanged
|| __TEXT.__text _copyAccountsForEmailAddress
|| __TEXT.__text _copyRFC822DataForPlainTextMessage
|| __TEXT.__text _domainChildWithName
|| __TEXT.__text _mailboxUIDTypeFromECMailboxType
|| __TEXT.__text _setUnreadCountForMailbox
|| __TEXT.__text _unlockedMailboxUidForMessage
|| __TEXT.__text _usernameForConfiguration
__ Accounts: _ACAccountIdentifierKey
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierAol
__ Accounts: _ACAccountTypeIdentifierExchange
__ Accounts: _ACAccountTypeIdentifierGmail
__ Accounts: _ACAccountTypeIdentifierHotmail
__ Accounts: _ACAccountTypeIdentifierIMAP
__ Accounts: _ACAccountTypeIdentifierIMAPMail
__ Accounts: _ACAccountTypeIdentifierPOP
__ Accounts: _ACAccountTypeIdentifierSMTP
__ Accounts: _ACAccountTypeIdentifierYahoo
__ Accounts: _ACErrorDomain
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountCredential
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kACRenewCredentialsReasonStringKey
__ Accounts: _kACRenewCredentialsShouldAvoidUIKey
__ Accounts: _kACRenewCredentialsShouldForceKey
__ Accounts: _kAccountDataclassMail
__ Accounts: _kAccountDataclassNotes
__ Accounts: _kAccountDataclassUbiquity
__ AppSupport: _CPFSSizeStrings
__ AppSupport: _CPICUCreateSearchCollator
__ AppSupport: _CPICUReleaseSearchCollator
__ AppSupport: _CPNetworkObserverNetworkReachableNotification
__ AppSupport: _CPNetworkObserverReachable
__ AppSupport: _CPPowerAssertionCreate
__ AppSupport: _CPSharedResourcesDirectory
__ AppSupport: _OBJC_CLASS_$_CPAggregateDictionary
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ AppSupport: _OBJC_CLASS_$_CPSearchMatcher
__ AppSupport: _OBJC_CLASS_$_RadiosPreferences
__ AppSupport: _kCPSearchMatcherCaseInsensitive
__ AppSupport: _kCPSearchMatcherDiacriticInsensitive
__ AppSupport: _kCPSearchMatcherPunctuationInsensitive
__ AppleAccount: _AAAccountClassPrimary
__ AssertionServices: _BKSApplicationStateAll
__ AssertionServices: _BKSApplicationStateDisplayIDKey
__ AssertionServices: _BKSApplicationStateKey
__ AssertionServices: _OBJC_CLASS_$_BKSApplicationStateMonitor
__ AssertionServices: _OBJC_CLASS_$_BKSProcessAssertion
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: _kCFErrorDomainCFNetwork
__ CallKit: _OBJC_CLASS_$_CXCallObserver
__ CertUI: _OBJC_CLASS_$_CertUIPrompt
__ CertUI: _OBJC_CLASS_$_CertUITrustManager
__ CertUI: _kCertUIServiceTypeSMTP
__ CertUI: _kCertUITrustPromptOptionsAllowCertificateTrustKey
__ CertUI: _kCertUITrustPromptOptionsShowContinueKey
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _OBJC_CLASS_$_CKAsset
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKPublishAssetsOperation
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAllocatorGetDefault
__ CoreFoundation: _CFAllocatorSetDefault
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayApplyFunction
__ CoreFoundation: _CFArrayBSearchValues
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetFirstIndexOfValue
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayGetValues
__ CoreFoundation: _CFArrayInsertValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFCharacterSetCreateWithCharactersInString
__ CoreFoundation: _CFCharacterSetIsCharacterMember
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFDataAppendBytes
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDateFormatterCreate
__ CoreFoundation: _CFDateFormatterCreateStringWithDate
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFLocaleCopyCurrent
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopGetNextTimerFireDate
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFStringAppend
__ CoreFoundation: _CFStringAppendCString
__ CoreFoundation: _CFStringAppendCharacters
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringConvertEncodingToIANACharSetName
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithBytesNoCopy
__ CoreFoundation: _CFStringCreateWithCharacters
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringCreateWithSubstring
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetSystemEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringHasSuffix
__ CoreFoundation: _CFStringInsert
__ CoreFoundation: _CFStringReplaceAll
__ CoreFoundation: _NSURLContentModificationDateKey
__ CoreFoundation: _NSURLCreationDateKey
__ CoreFoundation: _NSURLFileProtectionComplete
__ CoreFoundation: _NSURLFileProtectionCompleteUnlessOpen
__ CoreFoundation: _NSURLFileProtectionCompleteUntilFirstUserAuthentication
__ CoreFoundation: _NSURLFileProtectionKey
__ CoreFoundation: _NSURLFileProtectionNone
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_METACLASS_$_NSInvocation
__ CoreFoundation: __CFPreferencesCopyKeyListWithContainer
__ CoreFoundation: __CFPreferencesCopyValueWithContainer
__ CoreFoundation: __CFPreferencesSetValueWithContainer
__ CoreFoundation: __CFPreferencesSynchronizeWithContainer
__ CoreFoundation: __CFURLAttachSecurityScopeToFileURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFNull
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentApplication
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFStreamSocketSecurityLevelNegotiatedSSL
__ CoreFoundation: _kCFStreamSocketSecurityLevelNone
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGPDFDocumentCreateWithProvider
__ CoreGraphics: _CGPDFDocumentGetNumberOfPages
__ CoreGraphics: _CGPDFDocumentGetPage
__ CoreGraphics: _CGPDFDocumentIsUnlocked
__ CoreGraphics: _CGPDFDocumentRelease
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _UTTypeIsDynamic
__ CoreServices: __kUTTypePassBundle
__ CoreServices: __kUTTypePassData
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTTypeCalendarEvent
__ CoreServices: _kUTTypeContent
__ CoreServices: _kUTTypeDirectory
__ CoreServices: _kUTTypeEmailMessage
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeItem
__ CoreServices: _kUTTypeMovie
__ CoreServices: _kUTTypePDF
__ CoreServices: _kUTTypePKCS12
__ CoreServices: _kUTTypeVCard
__ CoreServices: _kUTTypeX509Certificate
__ CoreSpotlight: _CSAccountTypeExchangeActiveSync
__ CoreSpotlight: _CSAccountTypeLocal
__ CoreSpotlight: _CSAccountTypeUnknown
__ CoreSpotlight: _MDItemAuthorEmailAddresses
__ CoreSpotlight: _MDItemAuthors
__ CoreSpotlight: _MDItemContentType
__ CoreSpotlight: _MDItemMailboxes
__ CoreSpotlight: _MDItemRecipientEmailAddresses
__ CoreSpotlight: _MDItemRecipients
__ CoreSpotlight: _MDItemSubject
__ CoreSpotlight: _MDItemTextContent
__ CoreSpotlight: _MDMailDateReceived
__ CoreTelephony: _CTCellularDataPlanGetIsEnabled
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionAddToRunLoop
__ CoreTelephony: __CTServerConnectionCreateWithIdentifier
__ CoreTelephony: __CTServerConnectionPacketContextAssertionCreate
__ CoreTelephony: _kCTDataConnectionServiceTypeInternet
__ CoreTelephony: _kCTSIMSupportSIMStatusReady
__ DataAccess: _DAAccountFolderContentsChangedNotification
__ DataAccess: _DAAccountFolderHierarchyChangedNotification
__ DataAccess: _DAAccountFolderUpdatedWithNoChangesNotification
__ DataAccess: _DAAccountPushedFolderPreferencesChangedNotification
__ DataAccess: _OBJC_CLASS_$_ASAccountActor
__ DataAccess: _OBJC_CLASS_$_DAAction
__ DataAccess: _OBJC_CLASS_$_DADraftMessageRequest
__ DataAccess: _OBJC_CLASS_$_DAMailMessage
__ DataAccess: _OBJC_CLASS_$_DAMailboxDeleteMessageRequest
__ DataAccess: _OBJC_CLASS_$_DAMailboxFetchMessageRequest
__ DataAccess: _OBJC_CLASS_$_DAMailboxFetchSearchResultRequest
__ DataAccess: _OBJC_CLASS_$_DAMailboxGetUpdatesRequest
__ DataAccess: _OBJC_CLASS_$_DAMailboxRequest
__ DataAccess: _OBJC_CLASS_$_DAMailboxSetFlagsRequest
__ DataAccess: _OBJC_CLASS_$_DAMessageFetchAttachmentRequest
__ DataAccess: _OBJC_CLASS_$_DAMessageMoveRequest
__ DataAccess: _OBJC_CLASS_$_DAResolveRecipientsRequest
__ DataAccess: _OBJC_METACLASS_$_DADraftMessageRequest
__ DataAccess: _OBJC_METACLASS_$_DAMailMessage
__ DataAccess: _OBJC_METACLASS_$_DAMailboxDeleteMessageRequest
__ DataAccess: _OBJC_METACLASS_$_DAMailboxFetchMessageRequest
__ DataAccess: _OBJC_METACLASS_$_DAMailboxGetUpdatesRequest
__ DataAccess: _OBJC_METACLASS_$_DAMailboxSetFlagsRequest
__ DataAccess: _sharedDAAccountStore
__ DataAccessExpress: _DAErrorDomain
__ DataAccessExpress: _DALoggingwithCategory
__ DataAccessExpress: _DAUnderlyingStatusCodeKey
__ DataAccessExpress: _OBJC_CLASS_$_DABehaviorOptions
__ DataAccessExpress: _OBJC_CLASS_$_DADConnection
__ DataAccessExpress: _OBJC_CLASS_$_DAFolderChange
__ DataAccessExpress: _OBJC_CLASS_$_DAMailboxSearchQuery
__ DataAccessExpress: _kMessageSearchPredicateKeyBCC
__ DataAccessExpress: _kMessageSearchPredicateKeyCC
__ DataAccessExpress: _kMessageSearchPredicateKeyDateReceived
__ DataAccessExpress: _kMessageSearchPredicateKeyDateSent
__ DataAccessExpress: _kMessageSearchPredicateKeyFreeText
__ DataAccessExpress: _kMessageSearchPredicateKeyFrom
__ DataAccessExpress: _kMessageSearchPredicateKeyIsRead
__ DataAccessExpress: _kMessageSearchPredicateKeyParticipants
__ DataAccessExpress: _kMessageSearchPredicateKeyRecipients
__ DataAccessExpress: _kMessageSearchPredicateKeySubject
__ DataAccessExpress: _kMessageSearchPredicateKeyTo
__ Email: _EMContentRepresentationNetworkTransportKey
__ Email: _EMContentRepresentationTypeEmailMessage
__ Email: _EMContentRepresentationTypeHTML
__ Email: _EMContentRepresentationTypePlainText
__ Email: _EMContentRepresentationTypeRaw
__ Email: _EMDatabaseIDUndefined
__ Email: _EMErrorDomain
__ Email: _EMInvalidCount
__ Email: _EMMailDropBannerClass
__ Email: _EMMailDropDataExpiration
__ Email: _EMMailDropDataFilename
__ Email: _EMMailDropDataSize
__ Email: _EMMailDropDataURL
__ Email: _EMMailDropImageArchiveName
__ Email: _EMMailDropItemClass
__ Email: _EMMailDropMetadataClass
__ Email: _EMMessageIDURLScheme
__ Email: _EMMessageListItemKeyPathConversationID
__ Email: _EMMessageListItemKeyPathConversationNotificationLevel
__ Email: _EMMessageListItemKeyPathDate
__ Email: _EMMessageListItemKeyPathHasAttachments
__ Email: _EMMessageListItemKeyPathIsCCMe
__ Email: _EMMessageListItemKeyPathIsToMe
__ Email: _EMMessageListItemKeyPathIsVIP
__ Email: _EMMessageListItemKeyPathMailboxAccountID
__ Email: _EMMessageListItemKeyPathMailboxObjectIDsURLAbsoluteString
__ Email: _EMMessageListItemKeyPathMessageFlagFlagged
__ Email: _EMMessageListItemKeyPathMessageFlagRead
__ Email: _EMMessageListItemKeyPathSpotlightBccAddress
__ Email: _EMMessageListItemKeyPathSpotlightBccDisplayName
__ Email: _EMMessageListItemKeyPathSpotlightCcDisplayName
__ Email: _EMMessageListItemKeyPathSpotlightToDisplayName
__ Email: _EMPredicateMessageKeyPathMessageIDHeaderHash
__ Email: _EMPredicateMessageKeyPathObjectID
__ Email: _EMPredicateMessageKeyPathSubject
__ Email: _EMUserDefaultAlwaysBCCSelf
__ Email: _OBJC_CLASS_$_EMCertificateTrustInformation
__ Email: _OBJC_CLASS_$_EMContentRepresentation
__ Email: _OBJC_CLASS_$_EMDaemonInterfaceRequest
__ Email: _OBJC_CLASS_$_EMFeaturePreferences
__ Email: _OBJC_CLASS_$_EMListUnsubscribeDetector
__ Email: _OBJC_CLASS_$_EMMailDropMetadata
__ Email: _OBJC_CLASS_$_EMMailbox
__ Email: _OBJC_CLASS_$_EMMailboxObjectID
__ Email: _OBJC_CLASS_$_EMMailboxScope
__ Email: _OBJC_CLASS_$_EMMessage
__ Email: _OBJC_CLASS_$_EMMessageObjectID
__ Email: _OBJC_CLASS_$_EMMessageSigner
__ Email: _OBJC_CLASS_$_EMObjectID
__ Email: _OBJC_CLASS_$_EMPersistenceLayoutManager
__ Email: _OBJC_CLASS_$_EMSearchableIndexQuery
__ Email: _OBJC_CLASS_$_EMSecurityInformation
__ Email: _OBJC_CLASS_$__EMAttachmentContentItem
__ EmailAddressing: _OBJC_CLASS_$_EAEmailAddressGenerator
__ EmailAddressing: _OBJC_CLASS_$_EAEmailAddressParser
__ EmailCore: _ECAccountSchemeDataAccess
__ EmailCore: _ECAccountSchemeIMAP
__ EmailCore: _ECAccountSchemeLocal
__ EmailCore: _ECAccountSchemePOP
__ EmailCore: _ECAssertNetworkActivityAllowed
__ EmailCore: _ECAuthenticationSchemeCramMD5
__ EmailCore: _ECAuthenticationSchemeDigestMD5
__ EmailCore: _ECAuthenticationSchemeNTLM
__ EmailCore: _ECBeginDisallowingNetworkActivity
__ EmailCore: _ECEndDisallowingNetworkActivity
__ EmailCore: _ECGetNextHeaderFromDataInRange
__ EmailCore: _ECLocalActionReplayErrorDomain
__ EmailCore: _ECMessageHeaderKeyBCC
__ EmailCore: _ECMessageHeaderKeyCC
__ EmailCore: _ECMessageHeaderKeyContentDescription
__ EmailCore: _ECMessageHeaderKeyContentDisposition
__ EmailCore: _ECMessageHeaderKeyContentID
__ EmailCore: _ECMessageHeaderKeyContentLanguage
__ EmailCore: _ECMessageHeaderKeyContentLocation
__ EmailCore: _ECMessageHeaderKeyContentTransferEncoding
__ EmailCore: _ECMessageHeaderKeyContentType
__ EmailCore: _ECMessageHeaderKeyDate
__ EmailCore: _ECMessageHeaderKeyImageArchiveURL
__ EmailCore: _ECMessageHeaderKeyInReplyTo
__ EmailCore: _ECMessageHeaderKeyListID
__ EmailCore: _ECMessageHeaderKeyMIMEVersion
__ EmailCore: _ECMessageHeaderKeyMessageID
__ EmailCore: _ECMessageHeaderKeyRemoteAttachmentURL
__ EmailCore: _ECMessageHeaderKeyResentCC
__ EmailCore: _ECMessageHeaderKeyResentMessageID
__ EmailCore: _ECMessageHeaderKeyResentTo
__ EmailCore: _ECMessageHeaderKeySubject
__ EmailCore: _ECMessageHeaderKeyTo
__ EmailCore: _ECMessageHeaderKeyXMailer
__ EmailCore: _ECMessageHeaderKeyXPriority
__ EmailCore: _ECMessageHeaderKeyXUniversallyUniqueIdentifier
__ EmailCore: _ECMessagePropertyNumberOfAttachments
__ EmailCore: _ECMessagePropertySummary
__ EmailCore: _OBJC_CLASS_$_ECAccountFactory
__ EmailCore: _OBJC_CLASS_$_ECAngleBracketIDHash
__ EmailCore: _OBJC_CLASS_$_ECAuthenticationScheme
__ EmailCore: _OBJC_CLASS_$_ECEmailAddress
__ EmailCore: _OBJC_CLASS_$_ECEmailAddressComponents
__ EmailCore: _OBJC_CLASS_$_ECFlagChangeMessageAction
__ EmailCore: _OBJC_CLASS_$_ECHTMLStringAndMIMECharset
__ EmailCore: _OBJC_CLASS_$_ECIDNAEncoder
__ EmailCore: _OBJC_CLASS_$_ECLocalMessageActionResults
__ EmailCore: _OBJC_CLASS_$_ECMessageFlagChange
__ EmailCore: _OBJC_CLASS_$_ECMessageFlags
__ EmailCore: _OBJC_CLASS_$_ECNWConnectionWrapper
__ EmailCore: _OBJC_CLASS_$_ECSASLAuthenticator
__ EmailCore: _OBJC_CLASS_$_ECSecureMIMETrustEvaluation
__ EmailCore: _OBJC_CLASS_$_ECServerMessage
__ EmailCore: _OBJC_CLASS_$_ECSubject
__ EmailCore: _OBJC_CLASS_$_ECSubjectFormatter
__ EmailCore: _OBJC_CLASS_$_ECSubjectParser
__ EmailCore: _OBJC_CLASS_$_ECTransferActionReplayer
__ EmailCore: _OBJC_CLASS_$_ECTransferMessageAction
__ EmailCore: _OBJC_CLASS_$_ECTransferMessageActionResults
__ EmailCore: _OBJC_METACLASS_$_ECAuthenticationScheme
__ EmailCore: _OBJC_METACLASS_$_ECSASLAuthenticator
__ EmailCore: _OBJC_METACLASS_$_ECTransferActionReplayer
__ EmailDaemon: _EDMessageBatchSize
__ EmailDaemon: _OBJC_CLASS_$_EDAddMessagesDeletedDateReceivedIndexUpgradeStep
__ EmailDaemon: _OBJC_CLASS_$_EDAddThreadTablesUpgradeStep
__ EmailDaemon: _OBJC_CLASS_$_EDConversationPersistence
__ EmailDaemon: _OBJC_CLASS_$_EDLocalActionPersistence
__ EmailDaemon: _OBJC_CLASS_$_EDMailboxPersistence
__ EmailDaemon: _OBJC_CLASS_$_EDMessageChangeManager
__ EmailDaemon: _OBJC_CLASS_$_EDMessagePersistence
__ EmailDaemon: _OBJC_CLASS_$_EDMessageQueryParser
__ EmailDaemon: _OBJC_CLASS_$_EDMigrateBlockedSenderEnabledToBlockedSenderActionEnumUpgradeStep
__ EmailDaemon: _OBJC_CLASS_$_EDMigrateUserDefaultsUpgradeStep
__ EmailDaemon: _OBJC_CLASS_$_EDPersistedMessageQueryIterator
__ EmailDaemon: _OBJC_CLASS_$_EDPersistence
__ EmailDaemon: _OBJC_CLASS_$_EDPersistenceDatabase
__ EmailDaemon: _OBJC_CLASS_$_EDPersistenceDatabaseConnection
__ EmailDaemon: _OBJC_CLASS_$_EDPersistenceDatabaseGenerationWindow
__ EmailDaemon: _OBJC_CLASS_$_EDPersistenceDatabaseSchema
__ EmailDaemon: _OBJC_CLASS_$_EDPersonaPersistenceLayoutManager
__ EmailDaemon: _OBJC_CLASS_$_EDProtectedDatabasePersistence
__ EmailDaemon: _OBJC_CLASS_$_EDRemoveUnusedSchemaTableUpgradeStep
__ EmailDaemon: _OBJC_CLASS_$_EDRenameThreadsTableUpgradeStep
__ EmailDaemon: _OBJC_CLASS_$_EDSearchableIndex
__ EmailDaemon: _OBJC_CLASS_$_EDSearchableIndexBudgetConfiguration
__ EmailDaemon: _OBJC_CLASS_$_EDSearchableIndexItem
__ EmailDaemon: _OBJC_CLASS_$_EDSearchableIndexManager
__ EmailDaemon: _OBJC_CLASS_$_EDSearchableIndexPersistence
__ EmailDaemon: _OBJC_CLASS_$_EDSearchableIndexScheduler
__ EmailDaemon: _OBJC_CLASS_$_EDSearchableIndexVerificationData
__ EmailDaemon: _OBJC_CLASS_$_EDServerMessagePersistenceFactory
__ EmailDaemon: _OBJC_CLASS_$_EDTableMetadataPersistence
__ EmailDaemon: _OBJC_CLASS_$_EDThreadPersistence
__ EmailDaemon: _OBJC_METACLASS_$_EDLocalActionPersistence
__ EmailDaemon: _OBJC_METACLASS_$_EDMailboxPersistence
__ EmailDaemon: _OBJC_METACLASS_$_EDMessageChangeManager
__ EmailDaemon: _OBJC_METACLASS_$_EDMessagePersistence
__ EmailDaemon: _OBJC_METACLASS_$_EDPersistedMessageQueryIterator
__ EmailDaemon: _OBJC_METACLASS_$_EDPersistence
__ EmailDaemon: _OBJC_METACLASS_$_EDPersistenceDatabase
__ EmailDaemon: _OBJC_METACLASS_$_EDPersistenceDatabaseConnection
__ EmailDaemon: _OBJC_METACLASS_$_EDPersistenceDatabaseSchema
__ EmailDaemon: _OBJC_METACLASS_$_EDProtectedDatabasePersistence
__ EmailDaemon: _OBJC_METACLASS_$_EDSearchableIndex
__ EmailDaemon: _OBJC_METACLASS_$_EDSearchableIndexItem
__ EmailDaemon: _OBJC_METACLASS_$_EDSearchableIndexManager
__ EmailDaemon: _OBJC_METACLASS_$_EDSearchableIndexPersistence
__ EmailDaemon: _OBJC_METACLASS_$_EDServerMessagePersistenceFactory
__ EmailFoundation: _EFBundleIdentifierForXPCConnection
__ EmailFoundation: _EFContentProtectionDumpDiagnosticState
__ EmailFoundation: _EFContentProtectionGetDeviceLockState
__ EmailFoundation: _EFFrameworkVersion
__ EmailFoundation: _EFIsNotNull
__ EmailFoundation: _EFIsNull
__ EmailFoundation: _EFIsSeedBuild
__ EmailFoundation: _EFPriorityDesignatorKey
__ EmailFoundation: _EFProductName
__ EmailFoundation: _EFProtectedDataAvailable
__ EmailFoundation: _EFPublicErrorInfoKey
__ EmailFoundation: _EFRegisterContentProtectionObserver
__ EmailFoundation: _EFSQLSchemaColumnNameRowID
__ EmailFoundation: _EFSQLiteErrorDomain
__ EmailFoundation: _EFStackshotWriteWithReason
__ EmailFoundation: _EFStackshotWriteWithReasonIncludingStack
__ EmailFoundation: _EFStringWithInt
__ EmailFoundation: _EFStringWithInt64
__ EmailFoundation: _EFStringWithUnsignedInteger
__ EmailFoundation: _EFSystemVersion
__ EmailFoundation: _EFUnregisterContentProtectionObserver
__ EmailFoundation: _EFVerifyFileProtectionType
__ EmailFoundation: _OBJC_CLASS_$_EFAutoBugCaptureReporter
__ EmailFoundation: _OBJC_CLASS_$_EFCancelationToken
__ EmailFoundation: _OBJC_CLASS_$_EFDevice
__ EmailFoundation: _OBJC_CLASS_$_EFFuture
__ EmailFoundation: _OBJC_CLASS_$_EFLazyCache
__ EmailFoundation: _OBJC_CLASS_$_EFMutableInt64Set
__ EmailFoundation: _OBJC_CLASS_$_EFObservable
__ EmailFoundation: _OBJC_CLASS_$_EFObserver
__ EmailFoundation: _OBJC_CLASS_$_EFPair
__ EmailFoundation: _OBJC_CLASS_$_EFPriorityDesignator
__ EmailFoundation: _OBJC_CLASS_$_EFPrivacy
__ EmailFoundation: _OBJC_CLASS_$_EFProcessTransaction
__ EmailFoundation: _OBJC_CLASS_$_EFPromise
__ EmailFoundation: _OBJC_CLASS_$_EFSQLAndExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLColumnExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLColumnSchema
__ EmailFoundation: _OBJC_CLASS_$_EFSQLConnection
__ EmailFoundation: _OBJC_CLASS_$_EFSQLDeleteStatement
__ EmailFoundation: _OBJC_CLASS_$_EFSQLIndexSchema
__ EmailFoundation: _OBJC_CLASS_$_EFSQLIndexedColumnSchema
__ EmailFoundation: _OBJC_CLASS_$_EFSQLInsertStatement
__ EmailFoundation: _OBJC_CLASS_$_EFSQLOrExpression
__ EmailFoundation: _OBJC_CLASS_$_EFSQLPropertyMapper
__ EmailFoundation: _OBJC_CLASS_$_EFSQLSchema
__ EmailFoundation: _OBJC_CLASS_$_EFSQLSelectStatement
__ EmailFoundation: _OBJC_CLASS_$_EFSQLTableSchema
__ EmailFoundation: _OBJC_CLASS_$_EFSQLUpdateStatement
__ EmailFoundation: _OBJC_CLASS_$_EFScheduler
__ EmailFoundation: _OBJC_CLASS_$_EFStringHash
__ EmailFoundation: _OBJC_METACLASS_$_EFPriorityDesignator
__ EmailFoundation: _ef_xpc_activity_register
__ EventKit: _OBJC_CLASS_$_EKEvent
__ EventKit: _OBJC_CLASS_$_EKEventStore
__ Foundation: _NSBOOLFromString
__ Foundation: _NSClassFromString
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSFileProtectionCompleteUnlessOpen
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileSize
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSFileSystemSize
__ Foundation: _NSFileType
__ Foundation: _NSFileTypeDirectory
__ Foundation: _NSGetUncaughtExceptionHandler
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSPageSize
__ Foundation: _NSProcessInfoPowerStateDidChangeNotification
__ Foundation: _NSRecoveryAttempterErrorKey
__ Foundation: _NSStreamSocketSSLErrorDomain
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSZoneCalloc
__ Foundation: _NSZoneFree
__ Foundation: _NSZoneMalloc
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFileWrapper
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLFileTypeMappings
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_METACLASS_$_NSError
__ GraphicsServices: _GSSystemRootDirectory
__ IOKit: _IOAllowPowerChange
__ IOKit: _IODeregisterForSystemPower
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOPSCopyPowerSourcesByType
__ IOKit: _IOPSCopyPowerSourcesList
__ IOKit: _IOPSGetPowerSourceDescription
__ IOKit: _IORegisterForSystemPower
__ IOKit: _IOServiceClose
__ ImageIO: _CGImageDestinationCopyImageSource
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageMetadataCreateMutableCopy
__ ImageIO: _CGImageMetadataEnumerateTagsUsingBlock
__ ImageIO: _CGImageMetadataRemoveTagWithPath
__ ImageIO: _CGImageMetadataTagCopyName
__ ImageIO: _CGImageMetadataTagCopyPrefix
__ ImageIO: _CGImageSourceCopyMetadataAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _kCGImageDestinationMetadata
__ MIME: _H_FORWARDED_MESSAGE_ENCODED_OBJECT_ID
__ MIME: _H_FROM_SPACE
__ MIME: _H_REPLIED_MESSAGE_ENCODED_OBJECT_ID
__ MIME: _H_X_APPLE_PART_URL
__ MIME: _MFCharsetForEncoding
__ MIME: _MFCreateDataWithString
__ MIME: _MFCreateStringWithData
__ MIME: _MFDataConsumerConsumeCompleteData
__ MIME: _MFDecodingAsHTMLKey
__ MIME: _MFDecodingCollectRFC822DecodedMessageBodyKey
__ MIME: _MFDecodingDownloadIfNecessaryKey
__ MIME: _MFDecodingIsCompleteKey
__ MIME: _MFDecodingRFC822DecodedMessageBodyKey
__ MIME: _MFDecodingResultOffsetKey
__ MIME: _MFEncodingForCharset
__ MIME: _MFGetMappedAllocator
__ MIME: _MFGetRandomBytes
__ MIME: _MFGetTypeInfo
__ MIME: _MFGuessEncodingForBytes
__ MIME: _MFMessageIDHashFromHeaders
__ MIME: _MFMimePartParseContentDispositionHeader
__ MIME: _MFMimePartParseContentTypeHeader
__ MIME: _MFMimePartSetValueForPreservedHeader
__ MIME: _MFProtectFileDescriptor
__ MIME: _MFRemoveItemAtPath
__ MIME: _MFRemoveItemAtURL
__ MIME: _MFStringCanBeConvertedLosslessly
__ MIME: _MFStringGetBytes
__ MIME: _MFStringHashForMessageID
__ MIME: _MFStringHashForMessageIDHeader
__ MIME: _MFUniqueMessageIDHash
__ MIME: _MF_MD5HMAC_Init
__ MIME: _MF_MD5HMAC_InputBytes
__ MIME: _MF_MD5HMAC_Output
__ MIME: _OBJC_CLASS_$_MFBase64Decoder
__ MIME: _OBJC_CLASS_$_MFBase64Encoder
__ MIME: _OBJC_CLASS_$_MFBaseFilterDataConsumer
__ MIME: _OBJC_CLASS_$_MFBufferedDataConsumer
__ MIME: _OBJC_CLASS_$_MFConditionLock
__ MIME: _OBJC_CLASS_$_MFData
__ MIME: _OBJC_CLASS_$_MFDataHolder
__ MIME: _OBJC_CLASS_$_MFDataMessageStore
__ MIME: _OBJC_CLASS_$_MFDiagnostics
__ MIME: _OBJC_CLASS_$_MFEmailSet
__ MIME: _OBJC_CLASS_$_MFHTMLParser
__ MIME: _OBJC_CLASS_$_MFLineEndingConverterFilter
__ MIME: _OBJC_CLASS_$_MFLock
__ MIME: _OBJC_CLASS_$_MFMessage
__ MIME: _OBJC_CLASS_$_MFMessageBody
__ MIME: _OBJC_CLASS_$_MFMessageDataContainer
__ MIME: _OBJC_CLASS_$_MFMessageFileWrapper
__ MIME: _OBJC_CLASS_$_MFMessageHeaders
__ MIME: _OBJC_CLASS_$_MFMessageStore
__ MIME: _OBJC_CLASS_$_MFMessageStoreObjectCache
__ MIME: _OBJC_CLASS_$_MFMessageTextAttachment
__ MIME: _OBJC_CLASS_$_MFMimeBody
__ MIME: _OBJC_CLASS_$_MFMimeCharset
__ MIME: _OBJC_CLASS_$_MFMimePart
__ MIME: _OBJC_CLASS_$_MFMimeTextAttachment
__ MIME: _OBJC_CLASS_$_MFMutableData
__ MIME: _OBJC_CLASS_$_MFMutableFilterDataConsumer
__ MIME: _OBJC_CLASS_$_MFMutableMessageHeaders
__ MIME: _OBJC_CLASS_$_MFProgressFilterDataConsumer
__ MIME: _OBJC_CLASS_$_MFQuotedPrintableDecoder
__ MIME: _OBJC_CLASS_$_MFQuotedPrintableEncoder
__ MIME: _OBJC_CLASS_$_MFRangedDataFilter
__ MIME: _OBJC_CLASS_$_MFRecursiveLock
__ MIME: _OBJC_CLASS_$_MFTypeInfo
__ MIME: _OBJC_CLASS_$_MFUUDecoder
__ MIME: _OBJC_CLASS_$_MFWeakReferenceHolder
__ MIME: _OBJC_CLASS_$_MFWeakSet
__ MIME: _OBJC_CLASS_$_MFZeroCopyDataConsumer
__ MIME: _OBJC_IVAR_$_MFMessage._messageIDHeaderHash
__ MIME: _OBJC_IVAR_$_MFMessage._summary
__ MIME: _OBJC_IVAR_$_MFMessageDataContainer._data
__ MIME: _OBJC_IVAR_$_MFMessageDataContainer._incomplete
__ MIME: _OBJC_IVAR_$_MFMessageDataContainer._partial
__ MIME: _OBJC_IVAR_$_MFMessageStore._uniqueStrings
__ MIME: _OBJC_IVAR_$_MFMimePart._otherIvars
__ MIME: _OBJC_METACLASS_$_MFBufferedDataConsumer
__ MIME: _OBJC_METACLASS_$_MFDataMessageStore
__ MIME: _OBJC_METACLASS_$_MFMessage
__ MIME: _OBJC_METACLASS_$_MFMessageBody
__ MIME: _OBJC_METACLASS_$_MFMessageHeaders
__ MIME: _OBJC_METACLASS_$_MFMessageStore
__ MIME: _OBJC_METACLASS_$_MFMimePart
__ MIME: _OBJC_METACLASS_$_MFMimeTextAttachment
__ MIME: __MFCopyDecodeText
__ MIME: __MFCreateStringFromHeaderBytes
__ MIME: __MFDecodeText
__ MIME: __MFLockGlobalLock
__ MIME: __MFOffsetFromThreadDictionary
__ MIME: __MFUnlockGlobalLock
__ MailServices: _OBJC_CLASS_$_MSAccounts
__ MailServices: _OBJC_CLASS_$_MSSaveEmail
__ MailSupport: _MSContentIDURLScheme
__ MailSupport: _MSMailAccountStatisticsKindExchange
__ MailSupport: _MSMailAccountStatisticsKindHotmail
__ MailSupport: _OBJC_CLASS_$_AWDMailNetworkDiagnosticsReport
__ MailSupport: _OBJC_CLASS_$_MSFileCompression
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MessageSupport: _MFAutoFetchLog
__ MessageSupport: _MFBlockRemoteContentUserDefaultsKey
__ MessageSupport: _MFIsMobileMail
__ MessageSupport: _MFLogGeneral
__ MessageSupport: _MFLogNetwork
__ MessageSupport: _MFMailActivityHandoffTypeDisplayMessage
__ MessageSupport: _MFMessagePreferencesDomain
__ MessageSupport: _MFMobileMailContainerPath
__ MessageSupport: _MFMobileMailPreferenceDomain
__ MessageSupport: _kMFLoggingDefaultsChangedDomain
__ MessageSupport: _kMFMailAccountsChangedNotification
__ MessageSupport: _kMFMobileMailBundleIdentifier
__ MessageSupport: _kMFProfileListChangedDomain
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientGetType
__ MobileWiFi: _WiFiManagerClientSetType
__ Security: _NtlmCreateClientRequest
__ Security: _NtlmCreateClientResponse
__ Security: _NtlmGeneratorCreate
__ Security: _NtlmGeneratorRelease
__ Security: _SecCertificateCopyProperties
__ Security: _SecCertificateCreateWithData
__ Security: _SecCertificateGetKeyUsage
__ Security: _SecCertificateGetSHA1Digest
__ Security: _SecCertificateNotValidAfter
__ Security: _SecCertificateNotValidBefore
__ Security: _SecCmsContentInfoGetContent
__ Security: _SecCmsContentInfoGetContentTypeTag
__ Security: _SecCmsContentInfoGetInnerContent
__ Security: _SecCmsContentInfoSetContentData
__ Security: _SecCmsContentInfoSetContentEnvelopedData
__ Security: _SecCmsContentInfoSetContentSignedData
__ Security: _SecCmsDecoderCreate
__ Security: _SecCmsDecoderDestroy
__ Security: _SecCmsDecoderFinish
__ Security: _SecCmsDecoderUpdate
__ Security: _SecCmsDigestContextDestroy
__ Security: _SecCmsDigestContextStartMultiple
__ Security: _SecCmsDigestContextUpdate
__ Security: _SecCmsEncoderDestroy
__ Security: _SecCmsEncoderFinish
__ Security: _SecCmsEnvelopedDataCreate
__ Security: _SecCmsEnvelopedDataGetContentInfo
__ Security: _SecCmsMessageContentLevel
__ Security: _SecCmsMessageContentLevelCount
__ Security: _SecCmsMessageCreate
__ Security: _SecCmsMessageDestroy
__ Security: _SecCmsMessageEncode
__ Security: _SecCmsMessageGetContent
__ Security: _SecCmsMessageGetContentInfo
__ Security: _SecCmsMessageIsEncrypted
__ Security: _SecCmsRecipientInfoCreate
__ Security: _SecCmsSignedDataAddCertChain
__ Security: _SecCmsSignedDataCreate
__ Security: _SecCmsSignedDataGetContentInfo
__ Security: _SecCmsSignedDataGetDigestAlgs
__ Security: _SecCmsSignedDataGetSignerInfo
__ Security: _SecCmsSignedDataHasDigests
__ Security: _SecCmsSignedDataSetDigestContext
__ Security: _SecCmsSignedDataSignerInfoCount
__ Security: _SecCmsSignedDataVerifySignerInfo
__ Security: _SecCmsSignerInfoAddMSSMIMEEncKeyPrefs
__ Security: _SecCmsSignerInfoAddSMIMEEncKeyPrefs
__ Security: _SecCmsSignerInfoAddSigningTime
__ Security: _SecCmsSignerInfoCopyCertFromEncryptionKeyPreference
__ Security: _SecCmsSignerInfoCreate
__ Security: _SecCmsSignerInfoGetSignerEmailAddress
__ Security: _SecCmsSignerInfoGetVerificationStatus
__ Security: _SecCmsSignerInfoIncludeCerts
__ Security: _SecIdentityCopyCertificate
__ Security: _SecIdentityGetTypeID
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemDelete
__ Security: _SecItemUpdate
__ Security: _SecPolicyCreateRevocation
__ Security: _SecPolicyCreateSMIME
__ Security: _SecTaskCopyValuesForEntitlements
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTrustCopyPolicies
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustSetPolicies
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAfterFirstUnlockThisDeviceOnly
__ Security: _kSecAttrAccount
__ Security: _kSecAttrPort
__ Security: _kSecAttrProtocol
__ Security: _kSecAttrProtocolSMTP
__ Security: _kSecAttrProtocolTelnetS
__ Security: _kSecAttrServer
__ Security: _kSecAttrService
__ Security: _kSecAttrSynchronizable
__ Security: _kSecClass
__ Security: _kSecClassCertificate
__ Security: _kSecClassGenericPassword
__ Security: _kSecClassIdentity
__ Security: _kSecClassInternetPassword
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecPropertyKeyLabel
__ Security: _kSecPropertyKeyType
__ Security: _kSecPropertyKeyValue
__ Security: _kSecPropertyTypeSection
__ Security: _kSecPropertyTypeString
__ Security: _kSecReturnData
__ Security: _kSecReturnPersistentRef
__ Security: _kSecReturnRef
__ Security: _kSecValueData
__ Security: _kSecValuePersistentRef
__ Security: _kSecValueRef
__ SystemConfiguration: _SCDynamicStoreCopyValue
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreCreateRunLoopSource
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkGlobalEntity
__ SystemConfiguration: _SCDynamicStoreSetNotificationKeys
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ SystemConfiguration: _SCPreferencesCreate
__ SystemConfiguration: _SCPreferencesGetValue
__ SystemConfiguration: _SCPreferencesScheduleWithRunLoop
__ SystemConfiguration: _SCPreferencesSetCallback
__ SystemConfiguration: _SCPreferencesSynchronize
__ SystemConfiguration: _SCPreferencesUnscheduleFromRunLoop
__ SystemConfiguration: _kSCDynamicStoreDomainState
__ SystemConfiguration: _kSCEntNetDNS
__ SystemConfiguration: _kSCPropNetDNSServerAddresses
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _SANDBOX_EXTENSION_CANONICAL
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_15_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_5_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_CLASS_A
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___memccpy_chk
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_none
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _access
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _asprintf
__ libSystem.B.dylib: _atoll
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _ffsctl
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _getservbyname
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _kill
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmem
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _mkdtemp
__ libSystem.B.dylib: _mkstemps
__ libSystem.B.dylib: _modf
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_unfair_recursive_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_recursive_lock_unlock
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _read
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _realpath$DARWIN_EXTSN
__ libSystem.B.dylib: _rename
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncasecmp
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strtoul
__ libSystem.B.dylib: _strtoull
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _write
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: dyld_stub_binder
__ libarchive.2.dylib: _archive_entry_free
__ libarchive.2.dylib: _archive_entry_new
__ libarchive.2.dylib: _archive_entry_pathname
__ libarchive.2.dylib: _archive_entry_set_filetype
__ libarchive.2.dylib: _archive_entry_set_mtime
__ libarchive.2.dylib: _archive_entry_set_pathname
__ libarchive.2.dylib: _archive_entry_set_perm
__ libarchive.2.dylib: _archive_entry_set_size
__ libarchive.2.dylib: _archive_entry_size
__ libarchive.2.dylib: _archive_entry_size_is_set
__ libarchive.2.dylib: _archive_read_data_block
__ libarchive.2.dylib: _archive_read_free
__ libarchive.2.dylib: _archive_read_new
__ libarchive.2.dylib: _archive_read_next_header
__ libarchive.2.dylib: _archive_read_open_memory
__ libarchive.2.dylib: _archive_read_support_filter_all
__ libarchive.2.dylib: _archive_read_support_format_all
__ libarchive.2.dylib: _archive_set_error
__ libarchive.2.dylib: _archive_write_data
__ libarchive.2.dylib: _archive_write_free
__ libarchive.2.dylib: _archive_write_header
__ libarchive.2.dylib: _archive_write_new
__ libarchive.2.dylib: _archive_write_open
__ libarchive.2.dylib: _archive_write_set_format_zip
__ libarchive.2.dylib: _archive_write_set_options
__ libicucore.A.dylib: _u_getIntPropertyValue
__ libicucore.A.dylib: _u_strFromUTF8
__ libicucore.A.dylib: _ubrk_close
__ libicucore.A.dylib: _ubrk_following
__ libicucore.A.dylib: _ubrk_open
__ libicucore.A.dylib: _ubrk_preceding
__ libicucore.A.dylib: _ucol_setAttribute
__ libicucore.A.dylib: _usearch_close
__ libicucore.A.dylib: _usearch_first
__ libicucore.A.dylib: _usearch_getMatchedLength
__ libicucore.A.dylib: _usearch_last
__ libicucore.A.dylib: _usearch_openFromCollator
__ libicucore.A.dylib: _usearch_setPattern
__ libicucore.A.dylib: _usearch_setText
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getClassMethod
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _sel_getName
__ libsqlite3.dylib: _sqlite3_bind_blob_b
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_parameter_index
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_context_db_handle
__ libsqlite3.dylib: _sqlite3_create_function
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_result_codes
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_free
__ libsqlite3.dylib: _sqlite3_free_table
__ libsqlite3.dylib: _sqlite3_get_table
__ libsqlite3.dylib: _sqlite3_interrupt
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_mprintf
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_progress_handler
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_result_int
__ libsqlite3.dylib: _sqlite3_result_int64
__ libsqlite3.dylib: _sqlite3_result_null
__ libsqlite3.dylib: _sqlite3_result_text
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_user_data
__ libsqlite3.dylib: _sqlite3_value_bytes
__ libsqlite3.dylib: _sqlite3_value_int
__ libsqlite3.dylib: _sqlite3_value_int64
__ libsqlite3.dylib: _sqlite3_value_text
__ libsqlite3.dylib: _sqlite3_vmprintf
__ libxml2.2.dylib: _xmlDocGetRootElement
__ libxml2.2.dylib: _xmlFreeDoc
__ libxml2.2.dylib: _xmlReadFile
__ libxml2.2.dylib: _xmlReadMemory
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
MFAccount : NSObject /usr/lib/libsqlite3.dylib <EDAccount, ECAuthenticatableAccount, EFPubliclyDescribable>
 @property  ACAccount *accountForRenewingCredentials
 @property  ACAccount *persistentAccount
 @property  ACAccount *parentAccount
 @property  NSString *parentAccountIdentifier
 @property  ECAccount *baseAccount
 @property  BOOL managed
 @property  NSDictionary *properties
 @property  NSString *uniqueID
 @property  NSString *identifier
 @property  NSString *syncStoreIdentifier
 @property  NSString *managedTag
 @property  NSString *type
 @property  NSString *username
 @property  NSString *hostname
 @property  NSString *displayName
 @property  NSString *oauth2Token
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *domain
 @property  ECAuthenticationScheme *preferredAuthScheme
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *emailAddressStrings
 @property  NSString *password
 @property  ACAccount *systemAccount
 @property  NSString *statisticsKind
 @property  BOOL primaryiCloudAccount
 @property  NSString *ef_publicDescription

  // class methods
  +[MFAccount hostname]
  +[MFAccount supportedDataclasses]
  +[MFAccount accountTypeString]
  +[MFAccount accountTypeIdentifier]
  +[MFAccount shouldHealAccounts]
  +[MFAccount accountWithProperties:]
  +[MFAccount _accountClass]
  +[MFAccount _newPersistentAccount]
  +[MFAccount releaseAllConnectionsScheduler]
  +[MFAccount _basicPropertyForKey:persistentAccount:]
  +[MFAccount _setBasicProperty:forKey:persistentAccount:]
  +[MFAccount displayedAccountTypeString]
  +[MFAccount excludedAccountPropertyKeys]
  +[MFAccount usesSSL]
  +[MFAccount defaultSecurePortNumber]
  +[MFAccount defaultPortNumber]
  +[MFAccount predefinedValueForKey:]
  +[MFAccount setShouldHealAccounts:]
  +[MFAccount newAccountWithDictionary:]
  +[MFAccount authSchemesForAccountClass]
  +[MFAccount accountWithPersistentAccount:]
  +[MFAccount existingAccountForUniqueID:]
  +[MFAccount isPredefinedAccountType]
  +[MFAccount propertiesWhichRequireValidation]
  +[MFAccount displayedShortAccountTypeString]
  +[MFAccount legacyKeychainProtocol]
  +[MFAccount accountPropertiesValueForKey:value:]
  +[MFAccount isCommonPortNumber:]
  +[MFAccount isSSLEditable]
  +[MFAccount saslProfileName]

  // instance methods
  -[MFAccount init]
  -[MFAccount isEqual:]
  -[MFAccount copyWithZone:]
  -[MFAccount domain]
  -[MFAccount type]
  -[MFAccount password]
  -[MFAccount .cxx_destruct]
  -[MFAccount identifier]
  -[MFAccount isActive]
  -[MFAccount setPassword:]
  -[MFAccount setActive:]
  -[MFAccount uniqueID]
  -[MFAccount displayName]
  -[MFAccount serviceName]
  -[MFAccount properties]
  -[MFAccount setDisplayName:]
  -[MFAccount initWithProperties:]
  -[MFAccount setDomain:]
  -[MFAccount hostname]
  -[MFAccount username]
  -[MFAccount setUsername:]
  -[MFAccount _password]
  -[MFAccount parentAccount]
  -[MFAccount accountPropertyForKey:]
  -[MFAccount setAccountProperty:forKey:]
  -[MFAccount enabledDataclasses]
  -[MFAccount clientCertificates]
  -[MFAccount setClientCertificates:]
  -[MFAccount isEnabledForDataclass:]
  -[MFAccount parentAccountIdentifier]
  -[MFAccount _credential]
  -[MFAccount setHostname:]
  -[MFAccount sourceApplicationBundleIdentifier]
  -[MFAccount setSourceApplicationBundleIdentifier:]
  -[MFAccount syncStoreIdentifier]
  -[MFAccount primaryiCloudAccount]
  -[MFAccount requiresAuthentication]
  -[MFAccount emailAddressStrings]
  -[MFAccount isManaged]
  -[MFAccount initWithPersistentAccount:]
  -[MFAccount _setAccountProperties:]
  -[MFAccount setPersistentAccount:]
  -[MFAccount releaseAllConnections]
  -[MFAccount baseAccount]
  -[MFAccount persistentAccountDidChange:previousAccount:]
  -[MFAccount systemAccount]
  -[MFAccount _objectForAccountInfoKey:]
  -[MFAccount _privacySafeDescription]
  -[MFAccount persistentAccount]
  -[MFAccount accountInfoDidChange]
  -[MFAccount setOAuth2Token:refreshToken:]
  -[MFAccount _queueAccountInfoDidChange]
  -[MFAccount removeAccountPropertyForKey:]
  -[MFAccount usesSSL]
  -[MFAccount _boolForAccountInfoKey:defaultValue:]
  -[MFAccount _credentialCreateIfNecessary:error:]
  -[MFAccount ef_publicDescription]
  -[MFAccount preferredAuthScheme]
  -[MFAccount _passwordWithError:]
  -[MFAccount accountForRenewingCredentials]
  -[MFAccount _renewCredentialsWithOptions:completion:]
  -[MFAccount authenticatedConnection]
  -[MFAccount defaultSecurePortNumber]
  -[MFAccount defaultPortNumber]
  -[MFAccount portNumber]
  -[MFAccount _shouldTryDirectSSLConnectionOnPort:]
  -[MFAccount connectionClass]
  -[MFAccount _newConnection]
  -[MFAccount _connectAndAuthenticate:]
  -[MFAccount setUsesSSL:]
  -[MFAccount setPortNumber:]
  -[MFAccount certUIService]
  -[MFAccount setTryDirectSSL:]
  -[MFAccount secureServiceName]
  -[MFAccount connectionServiceType]
  -[MFAccount allowsTrustPrompt]
  -[MFAccount networkAccountIdentifier]
  -[MFAccount defaultConnectionSettings]
  -[MFAccount credentialAccessibility]
  -[MFAccount customDescriptionForError:authScheme:defaultDescription:]
  -[MFAccount reportAuthenticationError:authScheme:]
  -[MFAccount missingPasswordErrorWithTitle:]
  -[MFAccount canAuthenticateWithCurrentCredentials]
  -[MFAccount hasPasswordCredential]
  -[MFAccount savePersistentAccount]
  -[MFAccount statisticsKind]
  -[MFAccount setMissingPasswordError]
  -[MFAccount oauth2Token]
  -[MFAccount shouldFetchACEDBInfoForError:]
  -[MFAccount removePersistentAccount]
  -[MFAccount accountClass]
  -[MFAccount setValueInAccountProperties:forKey:]
  -[MFAccount removeValueInAccountPropertiesForKey:]
  -[MFAccount valueInAccountPropertiesForKey:]
  -[MFAccount canGoOffline]
  -[MFAccount supportsMailDrop]
  -[MFAccount _credentialCreateIfNecessary:]
  -[MFAccount renewCredentialsWithOptions:completion:]
  -[MFAccount promptUserForPasswordWithTitle:message:completionHandler:]
  -[MFAccount promptUserForWebLoginWithURL:shouldConfirm:completionHandler:]
  -[MFAccount managedTag]
  -[MFAccount fetchTokensIfNecessary:]
  -[MFAccount releaseAllForcedConnections]
  -[MFAccount setPreferredAuthScheme:]
  -[MFAccount applySettingsAsDefault:]
  -[MFAccount alternateConnectionSettings]
  -[MFAccount insecureConnectionSettings]
  -[MFAccount secureConnectionSettings]
  -[MFAccount nameForMailboxUid:]
  -[MFAccount shouldEnableAfterError:]
  -[MFAccount enableAccount]
  -[MFAccount shouldDisplayHostnameInErrorMessages]
  -[MFAccount inaccessiblePasswordErrorWithTitle:]
  -[MFAccount loginDisabledErrorWithTitle:]
  -[MFAccount isSyncingNotes]
  -[MFAccount copyDiagnosticInformation]


_MFAccountInformation : NSObject /usr/lib/libsqlite3.dylib
 @property  MailAccount *account
 @property  DeliveryAccount *deliveryAccount
 @property  NSDictionary *localizedNotes

  // instance methods
  -[_MFAccountInformation .cxx_destruct]
  -[_MFAccountInformation account]
  -[_MFAccountInformation setAccount:]
  -[_MFAccountInformation deliveryAccount]
  -[_MFAccountInformation setDeliveryAccount:]
  -[_MFAccountInformation localizedNotes]
  -[_MFAccountInformation setLocalizedNotes:]


MFAccountValidator : NSObject /usr/lib/libsqlite3.dylib
 @property  BOOL performsValidationInBackground
 @property  MFMonitoredInvocation *validationInvocation
 @property  <MFAccountValidatorDelegate> *delegate
 @property  BOOL accountIsValid
 @property  BOOL accountSupportsSSL
 @property  MFError *error
 @property  MFAccount *account

  // instance methods
  -[MFAccountValidator init]
  -[MFAccountValidator dealloc]
  -[MFAccountValidator delegate]
  -[MFAccountValidator setDelegate:]
  -[MFAccountValidator .cxx_destruct]
  -[MFAccountValidator error]
  -[MFAccountValidator stop]
  -[MFAccountValidator account]
  -[MFAccountValidator initWithPerformsValidationInBackground:]
  -[MFAccountValidator validateAccount:useSSL:withCompletion:]
  -[MFAccountValidator _validateAccount:withFallbacks:]
  -[MFAccountValidator validateAccountWithoutFallbacks:withCompletion:]
  -[MFAccountValidator _backgroundValidateAccountFinished:authSchemes:]
  -[MFAccountValidator _validateAccount:]
  -[MFAccountValidator _validateAccountWithoutFallbacks:]
  -[MFAccountValidator performsValidationInBackground]
  -[MFAccountValidator _outgoingServerValid]
  -[MFAccountValidator _incomingServerValid]
  -[MFAccountValidator validateAccount:useSSL:]
  -[MFAccountValidator validateAccountWithoutFallbacks:]
  -[MFAccountValidator cancelValidation]
  -[MFAccountValidator _ispAccountInfo]
  -[MFAccountValidator accountValidationCanceled]
  -[MFAccountValidator validationInvocation]
  -[MFAccountValidator accountIsValid]
  -[MFAccountValidator accountSupportsSSL]


MFActivityMonitor : EFPriorityDesignator /System/Library/Frameworks/EventKit.framework/EventKit <EFCancelable>
 @property  MFMailboxUid *mailbox
 @property  @? startedFetch
 @property  NSString *displayName
 @property  unsigned long gotNewMessagesState
 @property  id activityTarget
 @property  id primaryTarget
 @property  int changeCount
 @property  double startTime
 @property  double percentDone
 @property  unsigned long expectedLength
 @property  NSString *statusMessage
 @property  BOOL canBeCancelled
 @property  BOOL shouldCancel
 @property  BOOL isRemoteSearch
 @property  unsigned long bytesRead
 @property  unsigned long bytesWritten
 @property  long long transportType
 @property  MFError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFActivityMonitor currentMonitor]
  +[MFActivityMonitor pushNewMonitor]
  +[MFActivityMonitor destroyMonitor]

  // instance methods
  -[MFActivityMonitor init]
  -[MFActivityMonitor setDelegate:]
  -[MFActivityMonitor .cxx_destruct]
  -[MFActivityMonitor error]
  -[MFActivityMonitor isActive]
  -[MFActivityMonitor cancel]
  -[MFActivityMonitor setError:]
  -[MFActivityMonitor changeCount]
  -[MFActivityMonitor reset]
  -[MFActivityMonitor displayName]
  -[MFActivityMonitor transportType]
  -[MFActivityMonitor reasons]
  -[MFActivityMonitor addReason:]
  -[MFActivityMonitor setDisplayName:]
  -[MFActivityMonitor startTime]
  -[MFActivityMonitor _didChange]
  -[MFActivityMonitor setMaxCount:]
  -[MFActivityMonitor statusMessage]
  -[MFActivityMonitor addCancelable:]
  -[MFActivityMonitor setStatusMessage:]
  -[MFActivityMonitor bytesRead]
  -[MFActivityMonitor shouldCancel]
  -[MFActivityMonitor setCanBeCancelled:]
  -[MFActivityMonitor resetConnectionStats]
  -[MFActivityMonitor postActivityStarting]
  -[MFActivityMonitor postActivityFinished:]
  -[MFActivityMonitor userInfoForNotification]
  -[MFActivityMonitor postDidChangeWithUserInfo:]
  -[MFActivityMonitor _ntsThrottledUserInfoDict]
  -[MFActivityMonitor setSupportsPerItemProgress:]
  -[MFActivityMonitor percentDone]
  -[MFActivityMonitor setStatusMessage:percentDone:]
  -[MFActivityMonitor setStatusMessage:percentDone:withKey:]
  -[MFActivityMonitor setPercentDone:withKey:]
  -[MFActivityMonitor setDisplayName:maxCount:]
  -[MFActivityMonitor addActivityTarget:]
  -[MFActivityMonitor _lockedAddActivityTarget:]
  -[MFActivityMonitor removeActivityTarget:]
  -[MFActivityMonitor primaryTarget]
  -[MFActivityMonitor setPrimaryTarget:]
  -[MFActivityMonitor _cancelAssociatedCancelables]
  -[MFActivityMonitor cancelMessage]
  -[MFActivityMonitor setShouldCancel:]
  -[MFActivityMonitor setStatusMessage:withKey:]
  -[MFActivityMonitor startActivity]
  -[MFActivityMonitor finishedActivity:]
  -[MFActivityMonitor notifyConnectionEstablished]
  -[MFActivityMonitor setCurrentCount:]
  -[MFActivityMonitor setPercentDoneOfCurrentItem:]
  -[MFActivityMonitor setGotNewMessagesState:]
  -[MFActivityMonitor gotNewMessagesState]
  -[MFActivityMonitor hasReason:]
  -[MFActivityMonitor setPercentDone:]
  -[MFActivityMonitor setExpectedLength:]
  -[MFActivityMonitor expectedLength]
  -[MFActivityMonitor setActivityTarget:]
  -[MFActivityMonitor activityTarget]
  -[MFActivityMonitor addActivityTargets:]
  -[MFActivityMonitor activityTargets]
  -[MFActivityMonitor canBeCancelled]
  -[MFActivityMonitor removeCancelable:]
  -[MFActivityMonitor setInvocationQueue:]
  -[MFActivityMonitor acquireExclusiveAccessKey]
  -[MFActivityMonitor relinquishExclusiveAccessKey:]
  -[MFActivityMonitor recordBytesRead:]
  -[MFActivityMonitor recordBytesWritten:]
  -[MFActivityMonitor bytesWritten]
  -[MFActivityMonitor recordTransportType:]
  -[MFActivityMonitor mailbox]
  -[MFActivityMonitor setMailbox:]
  -[MFActivityMonitor startedFetch]
  -[MFActivityMonitor setStartedFetch:]
  -[MFActivityMonitor isRemoteSearch]
  -[MFActivityMonitor setIsRemoteSearch:]


_MFActivityMonitorMultiTarget : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[_MFActivityMonitorMultiTarget .cxx_destruct]
  -[_MFActivityMonitorMultiTarget displayName]
  -[_MFActivityMonitorMultiTarget allTargets]
  -[_MFActivityMonitorMultiTarget addActivityTarget:]
  -[_MFActivityMonitorMultiTarget removeActivityTarget:]
  -[_MFActivityMonitorMultiTarget primaryTarget]
  -[_MFActivityMonitorMultiTarget setPrimaryTarget:]


MFAuthScheme : ECAuthenticationScheme /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // class methods
  +[MFAuthScheme schemeWithName:]


MFBufferedQueue : NSObject /usr/lib/libsqlite3.dylib
 @property  unsigned int size
 @property  unsigned int maximumSize
 @property  double maximumLatency

  // instance methods
  -[MFBufferedQueue init]
  -[MFBufferedQueue isEmpty]
  -[MFBufferedQueue removeAllObjects]
  -[MFBufferedQueue .cxx_destruct]
  -[MFBufferedQueue size]
  -[MFBufferedQueue maximumSize]
  -[MFBufferedQueue flush]
  -[MFBufferedQueue addItem:]
  -[MFBufferedQueue setMaximumSize:]
  -[MFBufferedQueue _flush]
  -[MFBufferedQueue initWithMaximumSize:latency:]
  -[MFBufferedQueue sizeForItem:]
  -[MFBufferedQueue flushIfNecessary]
  -[MFBufferedQueue handleItems:]
  -[MFBufferedQueue maximumLatency]
  -[MFBufferedQueue setMaximumLatency:]


MFConnection : NSObject /usr/lib/libsqlite3.dylib <ECAuthenticatableConnection, MFDiagnosticsGenerator>
 @property  BOOL isFetching
 @property  double lastUsedTime
 @property  NSArray *capabilities
 @property  NSArray *authenticationMechanisms
 @property  NSString *securityProtocol
 @property  NSString *accountLogString
 @property  BOOL isValid
 @property  BOOL hasBytesAvailable
 @property  BOOL isCellularConnection
 @property  BOOL loginDisabled
 @property  BOOL usesOpportunisticSockets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFConnection initialize]
  +[MFConnection shouldTryFallbacksAfterError:]
  +[MFConnection readLoggingDefaults]
  +[MFConnection logConnection:type:data:]
  +[MFConnection flushLog]
  +[MFConnection logClasses]
  +[MFConnection setLogClasses:]
  +[MFConnection logAllSocketActivity]
  +[MFConnection setLogAllSocketActivity:]
  +[MFConnection logActivityOnPorts]
  +[MFConnection setLogActivityOnPorts:]
  +[MFConnection logActivityOnHosts]
  +[MFConnection setLogActivityOnHosts:]

  // instance methods
  -[MFConnection init]
  -[MFConnection dealloc]
  -[MFConnection isValid]
  -[MFConnection hasBytesAvailable]
  -[MFConnection .cxx_destruct]
  -[MFConnection writeData:]
  -[MFConnection disconnect]
  -[MFConnection lastUsedTime]
  -[MFConnection capabilities]
  -[MFConnection isCellularConnection]
  -[MFConnection connectUsingFallbacksForAccount:]
  -[MFConnection authenticateUsingAccount:]
  -[MFConnection copyDiagnosticInformation]
  -[MFConnection connectUsingAccount:]
  -[MFConnection setAllowsFallbacks:]
  -[MFConnection securityProtocol]
  -[MFConnection enableThroughputMonitoring:]
  -[MFConnection usesOpportunisticSockets]
  -[MFConnection _evaluateTrust:errorPtr:]
  -[MFConnection _setupSocketWithSettings:]
  -[MFConnection connectUsingSettings:]
  -[MFConnection authenticationMechanisms]
  -[MFConnection authenticateUsingAccount:authenticator:]
  -[MFConnection writeBytes:length:dontLogBytesInRange:]
  -[MFConnection writeData:dontLogBytesInRange:]
  -[MFConnection endCompression]
  -[MFConnection _certificateIsTrustedForAccount:]
  -[MFConnection _setCertificateIsTrusted:forAccount:]
  -[MFConnection loginDisabled]
  -[MFConnection isFetching]
  -[MFConnection setIsFetching:]
  -[MFConnection setDesiredReadBufferLength:]
  -[MFConnection logReadChars:length:]
  -[MFConnection readLineIntoData:]
  -[MFConnection readBytesIntoData:desiredLength:]
  -[MFConnection startTLSForAccount:]
  -[MFConnection startCompression]
  -[MFConnection connectionSettings]
  -[MFConnection setConnectionSettings:]
  -[MFConnection accountLogString]


MFConnectionSettings : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
 @property  NSString *certUIService
 @property  NSString *hostname
 @property  NSString *serviceName
 @property  NSArray *clientCertificates
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *accountIdentifier
 @property  NSString *networkAccountIdentifier
 @property  unsigned int portNumber
 @property  BOOL usesSSL
 @property  BOOL usesOpportunisticSockets
 @property  BOOL tryDirectSSL
 @property  BOOL allowsTrustPrompt

  // instance methods
  -[MFConnectionSettings dealloc]
  -[MFConnectionSettings copyWithZone:]
  -[MFConnectionSettings .cxx_destruct]
  -[MFConnectionSettings serviceName]
  -[MFConnectionSettings accountIdentifier]
  -[MFConnectionSettings hostname]
  -[MFConnectionSettings setServiceName:]
  -[MFConnectionSettings clientCertificates]
  -[MFConnectionSettings setClientCertificates:]
  -[MFConnectionSettings setAccountIdentifier:]
  -[MFConnectionSettings setHostname:]
  -[MFConnectionSettings sourceApplicationBundleIdentifier]
  -[MFConnectionSettings setSourceApplicationBundleIdentifier:]
  -[MFConnectionSettings usesSSL]
  -[MFConnectionSettings portNumber]
  -[MFConnectionSettings setUsesSSL:]
  -[MFConnectionSettings setPortNumber:]
  -[MFConnectionSettings certUIService]
  -[MFConnectionSettings setCertUIService:]
  -[MFConnectionSettings setTryDirectSSL:]
  -[MFConnectionSettings tryDirectSSL]
  -[MFConnectionSettings connectionServiceType]
  -[MFConnectionSettings setConnectionServiceType:]
  -[MFConnectionSettings allowsTrustPrompt]
  -[MFConnectionSettings setAllowsTrustPrompt:]
  -[MFConnectionSettings networkAccountIdentifier]
  -[MFConnectionSettings setNetworkAccountIdentifier:]
  -[MFConnectionSettings usesOpportunisticSockets]
  -[MFConnectionSettings setUsesOpportunisticSockets:]


MFCRAM_MD5AuthScheme : ECAuthenticationScheme /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // instance methods
  -[MFCRAM_MD5AuthScheme name]
  -[MFCRAM_MD5AuthScheme humanReadableName]
  -[MFCRAM_MD5AuthScheme canAuthenticateAccountClass:connection:]
  -[MFCRAM_MD5AuthScheme hasEncryption]
  -[MFCRAM_MD5AuthScheme authenticatorClass]
  -[MFCRAM_MD5AuthScheme sendsPlainTextPasswords]


MFCRAM_MD5Authenticator : ECSASLAuthenticator /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // instance methods
  -[MFCRAM_MD5Authenticator responseForServerData:]


_MFSQLGenerationContext : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[_MFSQLGenerationContext .cxx_destruct]


DADeliveryAccount : DeliveryAccount
  // instance methods
  -[DADeliveryAccount .cxx_destruct]
  -[DADeliveryAccount newDeliveryWithMessage:]
  -[DADeliveryAccount newDeliveryWithHeaders:mixedContent:textPartsAreHTML:]
  -[DADeliveryAccount newDeliveryWithHeaders:HTML:plainTextAlternative:other:]
  -[DADeliveryAccount initWithDAMailAccount:]
  -[DADeliveryAccount deliveryClass]
  -[DADeliveryAccount mailAccountIfAvailable]


MFDADeliveryConsumer : MFDAMailAccountConsumer <DAMessageSendConsumer>
 @property  MFError *error
 @property  long long status
 @property  unsigned long bytesRead
 @property  unsigned long bytesWritten

  // instance methods
  -[MFDADeliveryConsumer .cxx_destruct]
  -[MFDADeliveryConsumer error]
  -[MFDADeliveryConsumer setError:]
  -[MFDADeliveryConsumer status]
  -[MFDADeliveryConsumer bytesRead]
  -[MFDADeliveryConsumer bytesWritten]
  -[MFDADeliveryConsumer actionFailed:forTask:error:]
  -[MFDADeliveryConsumer messageDidSendWithContext:sentBytesCount:receivedBytesCount:]


MFDADelivery : MFMailDelivery
  // instance methods
  -[MFDADelivery .cxx_destruct]
  -[MFDADelivery setDAMailAccount:]
  -[MFDADelivery newMessageWriter]
  -[MFDADelivery _updateBasedOnOriginalMessage:]
  -[MFDADelivery deliverSynchronously]


DAMailAccount : MailAccount <ECLocalActionReplayerDelegate>
 @property  MFMailboxUid *virtualAllSearchMailbox
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DAMailAccount accountTypeString]
  +[DAMailAccount displayedAccountTypeString]
  +[DAMailAccount displayedShortAccountTypeString]
  +[DAMailAccount _accountConduitClass]
  +[DAMailAccount _URLScheme]
  +[DAMailAccount legacyPathForAccountIdentifier:withHostname:username:]
  +[DAMailAccount csAccountTypeString]
  +[DAMailAccount accountIDForDirectoryName:isAccountDirectory:]

  // instance methods
  -[DAMailAccount dealloc]
  -[DAMailAccount invalidate]
  -[DAMailAccount .cxx_destruct]
  -[DAMailAccount identifier]
  -[DAMailAccount isActive]
  -[DAMailAccount uniqueID]
  -[DAMailAccount displayName]
  -[DAMailAccount sourceIsManaged]
  -[DAMailAccount hostname]
  -[DAMailAccount username]
  -[DAMailAccount accountPropertyForKey:]
  -[DAMailAccount isEnabledForDataclass:]
  -[DAMailAccount _reachabilityChanged:]
  -[DAMailAccount isManaged]
  -[DAMailAccount accountForRenewingCredentials]
  -[DAMailAccount statisticsKind]
  -[DAMailAccount canGoOffline]
  -[DAMailAccount supportsMailDrop]
  -[DAMailAccount shouldDisplayHostnameInErrorMessages]
  -[DAMailAccount deliveryAccount]
  -[DAMailAccount accountConduit]
  -[DAMailAccount supportsThreadOperations]
  -[DAMailAccount initWithLibrary:persistentAccount:]
  -[DAMailAccount setDAAccount:]
  -[DAMailAccount mailboxForFolderID:]
  -[DAMailAccount allMailboxUids]
  -[DAMailAccount resetSpecialMailboxes]
  -[DAMailAccount virtualAllSearchMailbox]
  -[DAMailAccount emptyFrequencyForMailboxType:]
  -[DAMailAccount _loadChildrenForParent:fromMap:intoArray:replacingInbox:withID:]
  -[DAMailAccount isRunningInDisallowedBundle]
  -[DAMailAccount _isUnitTesting]
  -[DAMailAccount supportsServerDrafts]
  -[DAMailAccount startListeningForNotifications]
  -[DAMailAccount foldersContentsChanged:]
  -[DAMailAccount initWithDAAccount:]
  -[DAMailAccount accountHierarchyChanged:]
  -[DAMailAccount stopListeningForNotifications]
  -[DAMailAccount _ensureWeHaveLoadedInitialMailboxList]
  -[DAMailAccount _copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:]
  -[DAMailAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
  -[DAMailAccount folderIDForMailbox:]
  -[DAMailAccount _performFolderChange:completion:]
  -[DAMailAccount newMailboxNameIsAcceptable:reasonForFailure:]
  -[DAMailAccount _URLScheme]
  -[DAMailAccount addRequests:mailbox:]
  -[DAMailAccount performRequests:mailbox:]
  -[DAMailAccount syncAnchorForFolderID:mailbox:]
  -[DAMailAccount setSyncAnchor:forFolderID:mailbox:]
  -[DAMailAccount _relativePathForType:]
  -[DAMailAccount isMailboxLocalForType:]
  -[DAMailAccount _relativePathSpecialMailboxUidWithType:create:]
  -[DAMailAccount primaryMailboxUid]
  -[DAMailAccount supportsUniqueServerId]
  -[DAMailAccount uniqueServerIdForMessage:]
  -[DAMailAccount _inboxFolderID]
  -[DAMailAccount pushedFoldersPrefsChanged:]
  -[DAMailAccount _updateWatchedFolderIdsAndNotify:]
  -[DAMailAccount canReceiveNewMailNotifications]
  -[DAMailAccount performSearchQuery:]
  -[DAMailAccount cancelSearchQuery:]
  -[DAMailAccount _watchedFolderIds]
  -[DAMailAccount _folderIdsForMailboxUids:]
  -[DAMailAccount _remoteIDsForFlagChangeAction:]
  -[DAMailAccount messageDataForMessage:]
  -[DAMailAccount moveSupportedFromMailboxURL:toURL:]
  -[DAMailAccount URLStringFromLegacyURLString:]
  -[DAMailAccount uniqueIdForPersistentConnection]
  -[DAMailAccount allMailMailboxUid]
  -[DAMailAccount finishedInitialMailboxListLoad]
  -[DAMailAccount fetchMailboxList]
  -[DAMailAccount storeClass]
  -[DAMailAccount _copyMailboxWithParent:name:attributes:dictionary:]
  -[DAMailAccount _synchronouslyLoadListingForParent:]
  -[DAMailAccount renameMailbox:newName:parent:]
  -[DAMailAccount _deleteMailbox:]
  -[DAMailAccount shouldAppearInMailSettings]
  -[DAMailAccount mailboxPathExtension]
  -[DAMailAccount syncAnchorForMailbox:]
  -[DAMailAccount supportsRemoteAppend]
  -[DAMailAccount supportsMailboxEditing]
  -[DAMailAccount _infoForMatchingURL:]
  -[DAMailAccount mailboxUidForInfo:]
  -[DAMailAccount addRequest:consumer:mailbox:]
  -[DAMailAccount processRequests:mailbox:]
  -[DAMailAccount _specialMailboxUidWithType:create:]
  -[DAMailAccount supportsMessageFlagging]
  -[DAMailAccount shouldArchiveByDefault]
  -[DAMailAccount shouldFetchAgainWithError:foregroundRequest:]
  -[DAMailAccount needsRemoteSearchResultsVerification]
  -[DAMailAccount iconString]
  -[DAMailAccount derivesDeliveryAccountInfoFromMailAccount]
  -[DAMailAccount reconstituteOrphanedMeetingInMessage:]
  -[DAMailAccount unactionableInvitationICSRepresentationInMessage:summary:]
  -[DAMailAccount meetingStorePersistentID]
  -[DAMailAccount shouldRestoreMessagesAfterFailedDelete]
  -[DAMailAccount supportsServerSearch]
  -[DAMailAccount daysToSync]
  -[DAMailAccount supportsUserPushedMailboxes]
  -[DAMailAccount pushedMailboxUids]
  -[DAMailAccount changePushedMailboxUidsAdded:deleted:]
  -[DAMailAccount addUserFocusMailbox:]
  -[DAMailAccount removeUserFocusMailbox:]
  -[DAMailAccount signingIdentityPersistentReferenceForAddress:]
  -[DAMailAccount setSigningIdentityPersistentReference:forAddress:]
  -[DAMailAccount encryptionIdentityPersistentReferenceForAddress:]
  -[DAMailAccount setEncryptionIdentityPersistentReference:forAddress:]
  -[DAMailAccount perMessageEncryptionEnabledForAddress:]
  -[DAMailAccount secureCompositionSigningPolicyForAddress:]
  -[DAMailAccount secureCompositionEncryptionPolicyForAddress:]
  -[DAMailAccount copyDataForRemoteEncryptionCertificatesForAddresses:errors:]
  -[DAMailAccount copyDataForRemoteEncryptionCertificatesForAddress:error:]
  -[DAMailAccount restrictedFromTransferingMessagesToOtherAccounts]
  -[DAMailAccount restrictedFromSendingExternally]
  -[DAMailAccount restrictedFromSyncingRecents]
  -[DAMailAccount fetchLimits]
  -[DAMailAccount unsupportedHandoffTypes]
  -[DAMailAccount moveSupported]
  -[DAMailAccount replayAction:]
  -[DAMailAccount setVirtualAllSearchMailbox:]


MFDAMailbox : MFMailboxUid
 @property  NSString *folderID

  // instance methods
  -[MFDAMailbox .cxx_destruct]
  -[MFDAMailbox dictionaryRepresentation]
  -[MFDAMailbox displayName]
  -[MFDAMailbox folderID]
  -[MFDAMailbox setFolderID:]
  -[MFDAMailbox _folderID]
  -[MFDAMailbox _privacySafeDescription]
  -[MFDAMailbox initWithName:attributes:account:folderID:]
  -[MFDAMailbox mergeWithUserInfo:]
  -[MFDAMailbox URLWithAccount:]


MFDAMailAccountConsumer : NSObject /usr/lib/libsqlite3.dylib <DAActionConsumer>
  // instance methods
  -[MFDAMailAccountConsumer init]
  -[MFDAMailAccountConsumer .cxx_destruct]
  -[MFDAMailAccountConsumer setDone:]
  -[MFDAMailAccountConsumer actionFailed:forTask:error:]
  -[MFDAMailAccountConsumer waitUntilDone]
  -[MFDAMailAccountConsumer shouldRetryRequest]
  -[MFDAMailAccountConsumer initWithAlwaysReportFailures:]
  -[MFDAMailAccountConsumer taskFailed:statusCode:error:]
  -[MFDAMailAccountConsumer waitUntilDoneBeforeDate:]


MFDARequestQueue : MFRequestQueue
  // instance methods
  -[MFDARequestQueue .cxx_destruct]
  -[MFDARequestQueue initWithAccount:folderID:]
  -[MFDARequestQueue filterRequests:]
  -[MFDARequestQueue processRequests:]


MFDAMessagePayloadFetchResponseImpl : NSObject /usr/lib/libsqlite3.dylib <MFDAMessagePayloadFetchResponse>
  // instance methods
  -[MFDAMessagePayloadFetchResponseImpl .cxx_destruct]
  -[MFDAMessagePayloadFetchResponseImpl data]
  -[MFDAMessagePayloadFetchResponseImpl streaming]
  -[MFDAMessagePayloadFetchResponseImpl streamingDone]
  -[MFDAMessagePayloadFetchResponseImpl initWithData:streaming:streamingDone:]


_MFDAResolveRecipientsConsumer : NSObject /usr/lib/libsqlite3.dylib <DAResolveRecipientsConsumer>
 @property  NSError *error

  // instance methods
  -[_MFDAResolveRecipientsConsumer init]
  -[_MFDAResolveRecipientsConsumer .cxx_destruct]
  -[_MFDAResolveRecipientsConsumer error]
  -[_MFDAResolveRecipientsConsumer actionFailed:forTask:error:]
  -[_MFDAResolveRecipientsConsumer waitForResolvedRecipients]
  -[_MFDAResolveRecipientsConsumer resolvedRecipientsByEmailAddress:]


DeliveryAccount : MFAccount <EDDeliveryAccount>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *emailAddressStrings
 @property  NSString *hostname
 @property  NSString *password
 @property  NSString *identifier
 @property  ACAccount *systemAccount
 @property  NSString *statisticsKind
 @property  BOOL primaryiCloudAccount
 @property  unsigned long maximumMessageBytes

  // class methods
  +[DeliveryAccount accountWithIdentifier:]
  +[DeliveryAccount accountTypeIdentifier]
  +[DeliveryAccount newDefaultInstance]
  +[DeliveryAccount existingAccountForUniqueID:]
  +[DeliveryAccount _postDeliveryAccountsHaveChanged]
  +[DeliveryAccount deliveryAccounts]
  +[DeliveryAccount accountWithHostname:username:lookForExistingAccounts:]
  +[DeliveryAccount existingAccountWithHostname:username:]
  +[DeliveryAccount addDeliveryAccount:]
  +[DeliveryAccount reloadDeliveryAccounts]
  +[DeliveryAccount removeDeliveryAccount:]
  +[DeliveryAccount accountWithUniqueId:]
  +[DeliveryAccount existingAccountWithIdentifier:]
  +[DeliveryAccount accountWithHostname:username:]
  +[DeliveryAccount carrierDeliveryAccount]

  // instance methods
  -[DeliveryAccount identifier]
  -[DeliveryAccount setUsername:]
  -[DeliveryAccount _setAccountProperties:]
  -[DeliveryAccount shouldUseAuthentication]
  -[DeliveryAccount newDeliveryWithMessage:]
  -[DeliveryAccount newDeliveryWithHeaders:mixedContent:textPartsAreHTML:]
  -[DeliveryAccount newDeliveryWithHeaders:HTML:plainTextAlternative:other:]
  -[DeliveryAccount deliveryClass]
  -[DeliveryAccount mailAccountIfAvailable]
  -[DeliveryAccount _updateAccountDescriptionWithUsername:hostname:]
  -[DeliveryAccount setShouldUseAuthentication:]
  -[DeliveryAccount maximumMessageBytes]
  -[DeliveryAccount setMaximumMessageBytes:]
  -[DeliveryAccount hasNoReferences]
  -[DeliveryAccount displayHostname]
  -[DeliveryAccount canBeFallbackAccount]
  -[DeliveryAccount hasEnoughInformationForEasySetup]
  -[DeliveryAccount supportsOutboxCopy]
  -[DeliveryAccount shouldUseSaveSentForAccount:]


MFDigestMD5AuthScheme : ECAuthenticationScheme /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // instance methods
  -[MFDigestMD5AuthScheme name]
  -[MFDigestMD5AuthScheme humanReadableName]
  -[MFDigestMD5AuthScheme canAuthenticateAccountClass:connection:]
  -[MFDigestMD5AuthScheme hasEncryption]
  -[MFDigestMD5AuthScheme authenticatorClass]


_MFDigestMD5Authenticator : ECSASLAuthenticator /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // instance methods
  -[_MFDigestMD5Authenticator dealloc]
  -[_MFDigestMD5Authenticator securityLevel]
  -[_MFDigestMD5Authenticator responseForServerData:]
  -[_MFDigestMD5Authenticator setAuthenticationState:]
  -[_MFDigestMD5Authenticator setSecurityLevel:]
  -[_MFDigestMD5Authenticator setMaxBuffer:]
  -[_MFDigestMD5Authenticator setCryptInfo:]
  -[_MFDigestMD5Authenticator setExpectedResponse:]


_MFFormatFlowedWriter : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[_MFFormatFlowedWriter newWithPlainTextDocument:encoding:]

  // instance methods
  -[_MFFormatFlowedWriter .cxx_destruct]
  -[_MFFormatFlowedWriter outputString]
  -[_MFFormatFlowedWriter addedTrailingSpaces]
  -[_MFFormatFlowedWriter quotedString]
  -[_MFFormatFlowedWriter _findLineBreakInRange:maxCharWidthCount:endIsURL:]
  -[_MFFormatFlowedWriter _outputQuotedParagraph:range:withQuoteLevel:]


MFInvocationQueue : NSObject /usr/lib/libsqlite3.dylib <MFDiagnosticsGenerator>
 @property  unsigned long maxThreadCount
 @property  int threadPriorityTrigger
 @property  double threadRecycleTimeout
 @property  unsigned long invocationCount
 @property  unsigned long threadCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFInvocationQueue sharedInvocationQueue]
  +[MFInvocationQueue totalInvocationCount]
  +[MFInvocationQueue flushAllInvocationQueues]

  // instance methods
  -[MFInvocationQueue init]
  -[MFInvocationQueue dealloc]
  -[MFInvocationQueue .cxx_destruct]
  -[MFInvocationQueue removeAllItems]
  -[MFInvocationQueue copyDiagnosticInformation]
  -[MFInvocationQueue addInvocation:]
  -[MFInvocationQueue didCancel:]
  -[MFInvocationQueue initWithMaxThreadCount:]
  -[MFInvocationQueue setThreadRecycleTimeout:]
  -[MFInvocationQueue _drainQueue:]
  -[MFInvocationQueue setMaxThreadCount:]
  -[MFInvocationQueue maxThreadCount]
  -[MFInvocationQueue invocationCount]
  -[MFInvocationQueue threadCount]
  -[MFInvocationQueue threadPriorityTrigger]
  -[MFInvocationQueue setThreadPriorityTrigger:]
  -[MFInvocationQueue threadRecycleTimeout]


MFLibraryMessage : MFMailMessage <EDLibraryMessage>
 @property  MFMailboxUid *mailbox
 @property  MailAccount *account
 @property  MFMessageHeaders *headers
 @property  NSArray *references
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *persistentID
 @property  ECSubject *subject
 @property  NSArray *from
 @property  NSArray *to
 @property  NSArray *cc
 @property  NSArray *bcc
 @property  NSArray *senders
 @property  NSDate *dateReceived
 @property  NSDate *dateSent
 @property  NSArray *listUnsubscribe
 @property  NSString *remoteID
 @property  long long conversationID
 @property  BOOL isServerSearchResult
 @property  ECMessageFlags *flags
 @property  BOOL partOfExistingThread
 @property  <ECMimePart> *bodyPart
 @property  NSDictionary *headersDictionary
 @property  NSString *messageIDHeader
 @property  ECAngleBracketIDHash *messageIDHeaderHash
 @property  NSSet *labels
 @property  NSUUID *documentID
 @property  unsigned long numberOfAttachments
 @property  ECAngleBracketIDHash *listIDHash
 @property  long long libraryID

  // class methods
  +[MFLibraryMessage log]
  +[MFLibraryMessage messageWithLibraryID:]

  // instance methods
  -[MFLibraryMessage isEqual:]
  -[MFLibraryMessage .cxx_destruct]
  -[MFLibraryMessage path]
  -[MFLibraryMessage fileSize]
  -[MFLibraryMessage uid]
  -[MFLibraryMessage commit]
  -[MFLibraryMessage account]
  -[MFLibraryMessage persistentID]
  -[MFLibraryMessage setUid:]
  -[MFLibraryMessage setFlags:]
  -[MFLibraryMessage library]
  -[MFLibraryMessage messageID]
  -[MFLibraryMessage messageSize]
  -[MFLibraryMessage setMessageSize:]
  -[MFLibraryMessage libraryID]
  -[MFLibraryMessage setSummary:]
  -[MFLibraryMessage _privacySafeDescription]
  -[MFLibraryMessage mailbox]
  -[MFLibraryMessage conversationFlags]
  -[MFLibraryMessage messageStore]
  -[MFLibraryMessage remoteID]
  -[MFLibraryMessage initWithLibraryID:]
  -[MFLibraryMessage _updateUID]
  -[MFLibraryMessage setRemoteID:]
  -[MFLibraryMessage setPreferredEncoding:]
  -[MFLibraryMessage hasTemporaryUid]
  -[MFLibraryMessage setMessageFlagsWithoutCommitting:]
  -[MFLibraryMessage originalMailboxURL]
  -[MFLibraryMessage copyMessageInfo]
  -[MFLibraryMessage setMailboxID:]
  -[MFLibraryMessage mailboxID]
  -[MFLibraryMessage _attachmentStorageLocation]
  -[MFLibraryMessage _forceLoadOfMessageSummaryFromProtectedStore]
  -[MFLibraryMessage loadCachedHeaderValuesFromHeaders:]
  -[MFLibraryMessage references]
  -[MFLibraryMessage originalMailboxID]
  -[MFLibraryMessage setOriginalMailboxID:]
  -[MFLibraryMessage uniqueRemoteId]
  -[MFLibraryMessage setUniqueRemoteId:]
  -[MFLibraryMessage isPartial]
  -[MFLibraryMessage setIsPartial:]
  -[MFLibraryMessage isMessageContentsLocallyAvailable]
  -[MFLibraryMessage setHasTemporaryUid:]
  -[MFLibraryMessage mailboxName]
  -[MFLibraryMessage compareByUidWithMessage:]
  -[MFLibraryMessage setMessageFlags:]
  -[MFLibraryMessage setMutableInfoFromMessage:]
  -[MFLibraryMessage dataPathForMimePart:]
  -[MFLibraryMessage markAsViewed]
  -[MFLibraryMessage markAsNotViewed]
  -[MFLibraryMessage markAsFlagged]
  -[MFLibraryMessage markAsNotFlagged]
  -[MFLibraryMessage markAsReplied]
  -[MFLibraryMessage markAsForwarded]
  -[MFLibraryMessage preferredAccountToUseForReplying]
  -[MFLibraryMessage setConversationFlags:]
  -[MFLibraryMessage setRemoteID:flags:size:mailboxID:originalMailboxID:]
  -[MFLibraryMessage setMessageData:isPartial:]
  -[MFLibraryMessage dataConsumerForMimePart:]
  -[MFLibraryMessage isLibraryMessage]
  -[MFLibraryMessage attachmentStorageLocation]
  -[MFLibraryMessage setReferences:]


MFLibraryStore : MFMailMessageStore
 @property  NSDate *earliestReceivedDate

  // class methods
  +[MFLibraryStore sharedInstance]
  +[MFLibraryStore sharedInstanceIfExists]
  +[MFLibraryStore defaultLoadOptions]
  +[MFLibraryStore storeWithCriterion:]
  +[MFLibraryStore storeWithMailbox:]
  +[MFLibraryStore createEmptyStoreForPath:]
  +[MFLibraryStore storeAtPathIsWritable:]

  // instance methods
  -[MFLibraryStore dealloc]
  -[MFLibraryStore .cxx_destruct]
  -[MFLibraryStore totalCount]
  -[MFLibraryStore URLString]
  -[MFLibraryStore library]
  -[MFLibraryStore setLibrary:]
  -[MFLibraryStore shouldCancel]
  -[MFLibraryStore mailbox]
  -[MFLibraryStore dataPathForMessage:part:]
  -[MFLibraryStore setFlagsFromDictionary:forMessages:]
  -[MFLibraryStore initWithCriterion:mailbox:readOnly:]
  -[MFLibraryStore criterion]
  -[MFLibraryStore initWithMailboxUid:readOnly:]
  -[MFLibraryStore initWithCriterion:]
  -[MFLibraryStore initWithMailbox:]
  -[MFLibraryStore _queueMessagesAdded:]
  -[MFLibraryStore _queueMessageFlagsChanged:]
  -[MFLibraryStore _queueMessagesWillBeCompacted:]
  -[MFLibraryStore _queueMessagesWereCompacted:]
  -[MFLibraryStore invalidateFetchWindow]
  -[MFLibraryStore copyOfMessageInfos]
  -[MFLibraryStore copyOfMessagesInRange:options:generation:]
  -[MFLibraryStore copyOfMessagesInRange:options:]
  -[MFLibraryStore addCountsForMessages:shouldUpdateUnreadCount:]
  -[MFLibraryStore copyOfAllMessagesWithOptions:]
  -[MFLibraryStore copyOfAllMessages]
  -[MFLibraryStore copyMessagesWithRemoteIDs:options:inMailbox:]
  -[MFLibraryStore setEarliestReceivedDate:]
  -[MFLibraryStore _fetchWindowMultiple]
  -[MFLibraryStore _fetchWindowMinimum]
  -[MFLibraryStore allNonDeletedCountIncludingServerSearch:andThreadSearch:]
  -[MFLibraryStore fetchWindowCap]
  -[MFLibraryStore fetchWindow]
  -[MFLibraryStore shouldGrowFetchWindow]
  -[MFLibraryStore _calculateFetchWindowWithAdditionalMultiple:]
  -[MFLibraryStore messagesWereAdded:earliestReceivedDate:]
  -[MFLibraryStore filterMessagesByMembership:]
  -[MFLibraryStore _handleFlagsChangedForMessages:flags:oldFlagsByMessage:]
  -[MFLibraryStore _memberMessagesWithCompactionNotification:]
  -[MFLibraryStore dataForMimePart:inRange:isComplete:withConsumer:downloadIfNecessary:didDownload:]
  -[MFLibraryStore fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:]
  -[MFLibraryStore _cachedBodyDataContainerForMessage:valueIfNotPresent:]
  -[MFLibraryStore _fetchDataForMimePart:range:isComplete:consumer:]
  -[MFLibraryStore dataForMimePart:inRange:isComplete:downloadIfNecessary:didDownload:]
  -[MFLibraryStore _copyDataFromMimePart:threshold:downloadIfNecessary:]
  -[MFLibraryStore _fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:]
  -[MFLibraryStore _cachedHeaderDataForMessage:valueIfNotPresent:]
  -[MFLibraryStore _fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:]
  -[MFLibraryStore deleteBodyDataForMessage:]
  -[MFLibraryStore compactMessages:]
  -[MFLibraryStore setFlagsLocallyFromDictionary:forMessages:]
  -[MFLibraryStore setNumberOfAttachments:isSigned:isEncrypted:forMessage:]
  -[MFLibraryStore canCompact]
  -[MFLibraryStore serverUnreadOnlyOnServerCount]
  -[MFLibraryStore unreadCount]
  -[MFLibraryStore unreadCountMatchingCriterion:]
  -[MFLibraryStore _cachedHeadersForMessage:valueIfNotPresent:]
  -[MFLibraryStore purgeMessages:]
  -[MFLibraryStore hasMessageForAccount:]
  -[MFLibraryStore handleMessagesAdded:earliestReceivedDate:]
  -[MFLibraryStore _addInvocationToQueue:]
  -[MFLibraryStore handleMessageFlagsChanged:]
  -[MFLibraryStore handleMessagesWillBeCompacted:]
  -[MFLibraryStore handleMessagesCompacted:]
  -[MFLibraryStore hasCompleteDataForMimePart:]
  -[MFLibraryStore openSynchronously]
  -[MFLibraryStore nonDeletedCountIncludingServerSearch:andThreadSearch:]
  -[MFLibraryStore messageWithLibraryID:options:]
  -[MFLibraryStore copyOfMessageInfosMatchingCriterion:]
  -[MFLibraryStore copyOfMessageInfosForConversationsContainingMessagesMatchingCriterion:]
  -[MFLibraryStore copyOfAllMessagesForBodyLoadingFromRowID:limit:]
  -[MFLibraryStore mutableCopyOfAllMessages]
  -[MFLibraryStore copyMessagesMatchingText:options:]
  -[MFLibraryStore copyMessagesMatchingCriterion:options:]
  -[MFLibraryStore copyMessagesWithRemoteIDs:options:]
  -[MFLibraryStore sendersByLibraryIDForConversation:limit:]
  -[MFLibraryStore oldestKnownConversation]
  -[MFLibraryStore oldestKnownMessage]
  -[MFLibraryStore serverSearchResults]
  -[MFLibraryStore dateOfOldestNonIndexedNonSearchResultMessage]
  -[MFLibraryStore willFetchMessages]
  -[MFLibraryStore growFetchWindow]
  -[MFLibraryStore messageForMessageID:options:]
  -[MFLibraryStore bodyFetchRequiresNetworkActivity]
  -[MFLibraryStore _fetchHeaderDataForMessage:downloadIfNecessary:]
  -[MFLibraryStore storeData:forMimePart:isComplete:]
  -[MFLibraryStore fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:]
  -[MFLibraryStore bodyDataForMessage:isComplete:isPartial:downloadIfNecessary:]
  -[MFLibraryStore indexOfMessage:]
  -[MFLibraryStore deleteMessages:moveToTrash:]
  -[MFLibraryStore deleteMessagesOlderThanNumberOfDays:compact:]
  -[MFLibraryStore setFlagsForAllMessagesFromDictionary:]
  -[MFLibraryStore allowsAppend]
  -[MFLibraryStore doCompact]
  -[MFLibraryStore writeUpdatedMessageDataToDisk]
  -[MFLibraryStore updateMetadata]
  -[MFLibraryStore updateUserInfoToLatestValues]
  -[MFLibraryStore _setNeedsAutosave]
  -[MFLibraryStore newObjectCache]
  -[MFLibraryStore _cachedBodyForMessage:valueIfNotPresent:]
  -[MFLibraryStore purgeMessagesBeyondLimit:keepingMessage:]
  -[MFLibraryStore earliestReceivedDate]


LocalAccount : MailAccount
  // class methods
  +[LocalAccount accountTypeString]
  +[LocalAccount localAccount]
  +[LocalAccount accountTypeIdentifier]
  +[LocalAccount csAccountTypeString]
  +[LocalAccount legacyPathNameForAccountWithHostname:username:]

  // instance methods
  -[LocalAccount isActive]
  -[LocalAccount setPassword:]
  -[LocalAccount uniqueID]
  -[LocalAccount displayName]
  -[LocalAccount setUsername:]
  -[LocalAccount setHostname:]
  -[LocalAccount isLocalAccount]
  -[LocalAccount canGoOffline]
  -[LocalAccount initWithLibrary:persistentAccount:]
  -[LocalAccount resetSpecialMailboxes]
  -[LocalAccount _copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:]
  -[LocalAccount _URLScheme]
  -[LocalAccount mailboxUidForRelativePath:create:withOption:]
  -[LocalAccount primaryMailboxUid]
  -[LocalAccount storeClass]
  -[LocalAccount _synchronouslyLoadListingForParent:]
  -[LocalAccount renameMailbox:newName:parent:]
  -[LocalAccount mailboxPathExtension]
  -[LocalAccount _infoForMatchingURL:]
  -[LocalAccount pushedMailboxUids]
  -[LocalAccount _setChildren:forMailboxUid:]
  -[LocalAccount transientDraftsFolderShouldCreate:]
  -[LocalAccount legacySQLExpressionToMatchAllMailboxes]
  -[LocalAccount canFetch]
  -[LocalAccount _shouldConfigureMailboxCache]
  -[LocalAccount supportsPurge]
  -[LocalAccount mailboxUidForFileSystemPath:]
  -[LocalAccount transientDraftsFolder]
  -[LocalAccount deleteInPlaceForMailbox:]
  -[LocalAccount supportsAppend]
  -[LocalAccount supportsArchiving]


_MFRootlessMailboxUid : MFMailboxUid
  // instance methods
  -[_MFRootlessMailboxUid displayName]
  -[_MFRootlessMailboxUid fullPath]
  -[_MFRootlessMailboxUid storeForMailboxUid:]


MailAccount : MFAccount <EFLoggable, EDReceivingAccount, EDIndexableAccount>
 @property  <EFScheduler> *mailboxCacheWriteScheduler
 @property  MFLocalActionReplayHandler *replayHandler
 @property  BOOL shouldArchiveByDefault
 @property  BOOL sourceIsManaged
 @property  NSString *defaultPath
 @property  BOOL moveSupported
 @property  MFMailboxUid *rootMailboxUid
 @property  NSString *mailboxPathExtension
 @property  BOOL supportsRemoteAppend
 @property  BOOL supportsFastRemoteBodySearch
 @property  BOOL needsRemoteSearchResultsVerification
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *emailAddressStrings
 @property  NSString *hostname
 @property  NSString *password
 @property  NSString *identifier
 @property  ACAccount *systemAccount
 @property  NSString *statisticsKind
 @property  BOOL primaryiCloudAccount
 @property  BOOL isManaged
 @property  NSArray *emailAddresses
 @property  NSString *smtpIdentifier
 @property  BOOL isLocalAccount
 @property  BOOL managed

  // class methods
  +[MailAccount initialize]
  +[MailAccount lock]
  +[MailAccount log]
  +[MailAccount reloadAccounts]
  +[MailAccount defaultMailAccountForDelivery]
  +[MailAccount activeAccounts]
  +[MailAccount predefinedValueForKey:]
  +[MailAccount newAccountWithDictionary:]
  +[MailAccount existingAccountForUniqueID:]
  +[MailAccount isPredefinedAccountType]
  +[MailAccount defaultAccountDirectory]
  +[MailAccount allMailboxUids]
  +[MailAccount accountWithURL:]
  +[MailAccount legacyPathForAccountIdentifier:withHostname:username:]
  +[MailAccount csAccountTypeString]
  +[MailAccount URLForInfo:]
  +[MailAccount mailAccounts]
  +[MailAccount accountWithUniqueId:]
  +[MailAccount mailboxUidFromActiveAccountsForURL:]
  +[MailAccount legacyPathNameForAccountWithHostname:username:]
  +[MailAccount _addAccountToSortedPaths:]
  +[MailAccount _loadDataAccessAccountsWithError:]
  +[MailAccount existingDAMailAccountForDAAccount:]
  +[MailAccount _removeLookAsideValuesNotInAccountList:]
  +[MailAccount disableMailboxListingNotifications]
  +[MailAccount _loadAllAccountsWithOptions:error:]
  +[MailAccount _setMailAccounts:saveIfChanged:alreadyLocked:]
  +[MailAccount enableMailboxListingNotifications:]
  +[MailAccount mailAccountsWithError:]
  +[MailAccount setMailAccounts:saveIfChanged:]
  +[MailAccount _setupSortedPathsForAccounts:]
  +[MailAccount notifyOfAccountsAdded:accountsRemoved:changedAccounts:]
  +[MailAccount activeAccountsWithError:]
  +[MailAccount _accountContainingEmailAddress:matchingAddress:fullUserName:includingInactive:]
  +[MailAccount accountContainingEmailAddress:includingInactive:]
  +[MailAccount accountForHeaders:message:includingInactive:]
  +[MailAccount _setOutboxMailboxUid:]
  +[MailAccount outboxMailboxUid]
  +[MailAccount allMailboxUidsForAccounts:]
  +[MailAccount purgeableAccounts]
  +[MailAccount newAccountWithPath:]
  +[MailAccount _defaultMailAccountForDeliveryIncludingRestricted:]
  +[MailAccount primaryDeliveryAccountIsDynamic]
  +[MailAccount outboxMessageStore:]
  +[MailAccount accountThatMessageIsFrom:]
  +[MailAccount mailboxListingNotificationAreEnabled]
  +[MailAccount infoForURL:]
  +[MailAccount standardAccountClass:valueForKey:]
  +[MailAccount mailboxUidForFileSystemPath:create:]
  +[MailAccount _removeAccountFromSortedPaths:]
  +[MailAccount canMoveMessagesFromAccount:toAccount:profileConnection:]
  +[MailAccount setMailAccountLoadOptions:]
  +[MailAccount lastMailAccountsReloadDate]
  +[MailAccount lastMailAccountsReloadError]
  +[MailAccount setMailAccounts:]
  +[MailAccount existingAccountWithType:hostname:username:]
  +[MailAccount resetMailboxTimers]
  +[MailAccount updateAutoFetchSettings]
  +[MailAccount allEmailAddressesIncludingFullUserName:includeReceiveAliases:]
  +[MailAccount accountContainingEmailAddress:]
  +[MailAccount accountUsingHeadersFromMessage:]
  +[MailAccount accountThatMessageIsFrom:includingInactive:]
  +[MailAccount addressesThatReceivedMessage:]
  +[MailAccount allPurgeableMailboxUids]
  +[MailAccount allActivePrimaryMailboxUids]
  +[MailAccount accountWithPath:]
  +[MailAccount setGlobalPathForAccounts:]
  +[MailAccount defaultMailAccountForDeliveryExcludingRestricted]
  +[MailAccount defaultDeliveryAccount]
  +[MailAccount saveStateForAllAccounts]
  +[MailAccount synchronouslyEmptyMailboxUidType:inAccounts:]
  +[MailAccount accountWithURLString:]
  +[MailAccount updateEmailAliasesForActiveAccounts]
  +[MailAccount usernameIsEmailAddress]
  +[MailAccount getConfigurationFromServerForEmail:]
  +[MailAccount _accountWithPath:]
  +[MailAccount setDataclassesConsideredActive:]
  +[MailAccount canMoveMessagesFromAccount:toAccount:]

  // instance methods
  -[MailAccount invalidate]
  -[MailAccount .cxx_destruct]
  -[MailAccount isActive]
  -[MailAccount path]
  -[MailAccount initWithPath:]
  -[MailAccount setPath:]
  -[MailAccount setActive:]
  -[MailAccount displayName]
  -[MailAccount sourceIsManaged]
  -[MailAccount URLString]
  -[MailAccount setUsername:]
  -[MailAccount setCachePolicy:]
  -[MailAccount defaultPath]
  -[MailAccount setHostname:]
  -[MailAccount cachePolicy]
  -[MailAccount library]
  -[MailAccount emailAddresses]
  -[MailAccount setEmailAddresses:]
  -[MailAccount systemWillSleep]
  -[MailAccount systemDidWake]
  -[MailAccount loggingIdentifier]
  -[MailAccount libraryID]
  -[MailAccount setLibrary:]
  -[MailAccount emailAddressStrings]
  -[MailAccount _didBecomeActive:]
  -[MailAccount isLocalAccount]
  -[MailAccount initWithPersistentAccount:]
  -[MailAccount _setAccountProperties:]
  -[MailAccount releaseAllConnections]
  -[MailAccount persistentAccountDidChange:previousAccount:]
  -[MailAccount setPortNumber:]
  -[MailAccount canAuthenticateWithCurrentCredentials]
  -[MailAccount statisticsKind]
  -[MailAccount setValueInAccountProperties:forKey:]
  -[MailAccount supportsMailDrop]
  -[MailAccount releaseAllForcedConnections]
  -[MailAccount deliveryAccount]
  -[MailAccount setDeliveryAccount:]
  -[MailAccount supportsThreadOperations]
  -[MailAccount mailboxUidOfType:createIfNeeded:]
  -[MailAccount initWithLibrary:persistentAccount:]
  -[MailAccount allMailboxUids]
  -[MailAccount resetSpecialMailboxes]
  -[MailAccount rootMailboxUid]
  -[MailAccount emptyFrequencyForMailboxType:]
  -[MailAccount _loadMailboxListingIntoCache:attributes:children:parent:]
  -[MailAccount _writeMailboxCacheWithPrejudice:]
  -[MailAccount startListeningForNotifications]
  -[MailAccount stopListeningForNotifications]
  -[MailAccount _copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:]
  -[MailAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
  -[MailAccount _renameMailbox:newName:parent:]
  -[MailAccount newMailboxNameIsAcceptable:reasonForFailure:]
  -[MailAccount _URLScheme]
  -[MailAccount mailboxUidForRelativePath:create:]
  -[MailAccount isMailboxLocalForType:]
  -[MailAccount _localMailboxNameForType:usingDisplayName:]
  -[MailAccount mailboxUidForRelativePath:create:withOption:]
  -[MailAccount primaryMailboxUid]
  -[MailAccount uniqueServerIdForMessage:]
  -[MailAccount canReceiveNewMailNotifications]
  -[MailAccount replayHandler]
  -[MailAccount mailboxUidForURL:]
  -[MailAccount storeForMailboxUid:]
  -[MailAccount URLStringFromLegacyURLString:]
  -[MailAccount uniqueIdForPersistentConnection]
  -[MailAccount allMailMailboxUid]
  -[MailAccount fetchMailboxList]
  -[MailAccount storeClass]
  -[MailAccount _copyMailboxWithParent:name:attributes:dictionary:]
  -[MailAccount _synchronouslyLoadListingForParent:]
  -[MailAccount renameMailbox:newName:parent:]
  -[MailAccount _deleteMailbox:]
  -[MailAccount shouldAppearInMailSettings]
  -[MailAccount mailboxPathExtension]
  -[MailAccount supportsRemoteAppend]
  -[MailAccount supportsMailboxEditing]
  -[MailAccount _infoForMatchingURL:]
  -[MailAccount mailboxUidForInfo:]
  -[MailAccount _specialMailboxUidWithType:create:]
  -[MailAccount supportsMessageFlagging]
  -[MailAccount shouldArchiveByDefault]
  -[MailAccount shouldFetchAgainWithError:foregroundRequest:]
  -[MailAccount needsRemoteSearchResultsVerification]
  -[MailAccount iconString]
  -[MailAccount derivesDeliveryAccountInfoFromMailAccount]
  -[MailAccount reconstituteOrphanedMeetingInMessage:]
  -[MailAccount unactionableInvitationICSRepresentationInMessage:summary:]
  -[MailAccount meetingStorePersistentID]
  -[MailAccount shouldRestoreMessagesAfterFailedDelete]
  -[MailAccount supportsUserPushedMailboxes]
  -[MailAccount pushedMailboxUids]
  -[MailAccount changePushedMailboxUidsAdded:deleted:]
  -[MailAccount addUserFocusMailbox:]
  -[MailAccount removeUserFocusMailbox:]
  -[MailAccount signingIdentityPersistentReferenceForAddress:]
  -[MailAccount setSigningIdentityPersistentReference:forAddress:]
  -[MailAccount encryptionIdentityPersistentReferenceForAddress:]
  -[MailAccount setEncryptionIdentityPersistentReference:forAddress:]
  -[MailAccount perMessageEncryptionEnabledForAddress:]
  -[MailAccount secureCompositionSigningPolicyForAddress:]
  -[MailAccount secureCompositionEncryptionPolicyForAddress:]
  -[MailAccount copyDataForRemoteEncryptionCertificatesForAddresses:errors:]
  -[MailAccount copyDataForRemoteEncryptionCertificatesForAddress:error:]
  -[MailAccount restrictedFromTransferingMessagesToOtherAccounts]
  -[MailAccount restrictedFromSendingExternally]
  -[MailAccount restrictedFromSyncingRecents]
  -[MailAccount fetchLimits]
  -[MailAccount unsupportedHandoffTypes]
  -[MailAccount moveSupported]
  -[MailAccount replayAction:]
  -[MailAccount hasEnoughInformationForEasySetup]
  -[MailAccount _loadEntriesFromFileSystemPath:parent:]
  -[MailAccount _setChildren:forMailboxUid:]
  -[MailAccount saveState]
  -[MailAccount legacySQLExpressionToMatchAllMailboxes]
  -[MailAccount canFetch]
  -[MailAccount _shouldConfigureMailboxCache]
  -[MailAccount supportsPurge]
  -[MailAccount deleteInPlaceForMailbox:]
  -[MailAccount supportsAppend]
  -[MailAccount supportsArchiving]
  -[MailAccount accountDidLoad]
  -[MailAccount isEquivalentTo:hostname:username:]
  -[MailAccount isAccountClassEquivalentTo:]
  -[MailAccount isHostnameEquivalentTo:]
  -[MailAccount isUsernameEquivalentTo:]
  -[MailAccount resetMailboxTimer]
  -[MailAccount emailAddressesAndAliasesList]
  -[MailAccount fullUserName]
  -[MailAccount isActiveWithPersistentAccount:]
  -[MailAccount _invalidateCachedMailboxen]
  -[MailAccount deliveryAccountWillBeRemoved:]
  -[MailAccount setupLibrary]
  -[MailAccount storeClassForMailbox:]
  -[MailAccount _setPath:]
  -[MailAccount initWithLibrary:path:]
  -[MailAccount _deliveryAccountCreateIfNeeded:]
  -[MailAccount defaultEmailAddress]
  -[MailAccount emailAddressesDictionary]
  -[MailAccount receiveEmailAliasAddresses]
  -[MailAccount fromEmailAddressesIncludingDisabled]
  -[MailAccount lastEmailAliasesSyncDate]
  -[MailAccount updateEmailAliases]
  -[MailAccount _assignSpecialMailboxToAppropriateIvar:forType:]
  -[MailAccount allLocalMailboxUids]
  -[MailAccount deleteMailbox:]
  -[MailAccount _deleteHook]
  -[MailAccount deleteDeliveryAccountIfNeeded]
  -[MailAccount _invalidateAndDeleteAccountData:]
  -[MailAccount _asynchronouslyInvalidateAndDeleteAccountData:]
  -[MailAccount _mailboxPathPrefix]
  -[MailAccount emptyTrash]
  -[MailAccount _synchronizeMailboxListWithFileSystem]
  -[MailAccount deliveryAccountInUseByOtherAccounts:]
  -[MailAccount deliveryAccountAlternates]
  -[MailAccount _cachedSpecialMailboxOfType:]
  -[MailAccount ownsMailboxUidWithURL:]
  -[MailAccount _setSpecialMailbox:forType:]
  -[MailAccount _canEmptyMessagesFromMailboxUid:]
  -[MailAccount _emptyFrequencyForKey:defaultValue:]
  -[MailAccount _setEmptyFrequency:forKey:]
  -[MailAccount firstEmailAddress]
  -[MailAccount deleteMessagesFromMailboxUid:olderThanNumberOfDays:]
  -[MailAccount _pathComponentForUidName:]
  -[MailAccount _resetSpecialMailboxes]
  -[MailAccount _uidNameForPathComponent:]
  -[MailAccount _resetAllMailboxURLs:]
  -[MailAccount _childOfMailbox:withComponentName:]
  -[MailAccount _URLForInfo:]
  -[MailAccount setLastEmailAliasesSyncDate:]
  -[MailAccount newActionsAdded]
  -[MailAccount addNewAction:]
  -[MailAccount _cleanInboxDuplication:]
  -[MailAccount _writeMailboxCacheWithPrejudice:completionHandler:]
  -[MailAccount mailboxCachePath]
  -[MailAccount _writeCustomInfoToMailboxCache:]
  -[MailAccount mailboxCacheWriteScheduler]
  -[MailAccount specialMailboxNameForType:]
  -[MailAccount _setSpecialMailboxName:forType:]
  -[MailAccount _defaultSpecialMailboxNameForType:]
  -[MailAccount valueInAccountLookAsidePropertiesForKey:]
  -[MailAccount setValueInAccountLookAsideProperties:forKey:]
  -[MailAccount _setValueInAccountLookAsideProperties:forKey:subKey:]
  -[MailAccount preventArchiveForMailbox:]
  -[MailAccount canArchiveForMailbox:]
  -[MailAccount mailboxForType:]
  -[MailAccount containsMailboxWithURL:]
  -[MailAccount smtpIdentifier]
  -[MailAccount setFullUserName:]
  -[MailAccount isPrimaryDeliveryAccountDisabled]
  -[MailAccount setPrimaryDeliveryAccountDisabled:]
  -[MailAccount setDeliveryAccountAlternates:]
  -[MailAccount canUseDeliveryAccount:]
  -[MailAccount setCanUseCarrierDeliveryFallback:]
  -[MailAccount canUseCarrierDeliveryFallback]
  -[MailAccount setDefaultEmailAddress:]
  -[MailAccount setEnabled:forEmailAddress:]
  -[MailAccount pushUpdateForAliasData]
  -[MailAccount receiveEmailAliasAddressesList]
  -[MailAccount setReceiveEmailAliasAddresses:]
  -[MailAccount fromEmailAddresses]
  -[MailAccount emailAddressesAndAliases]
  -[MailAccount invalidateAndDelete]
  -[MailAccount nowWouldBeAGoodTimeToStartBackgroundSynchronization]
  -[MailAccount forceFetchMailboxList]
  -[MailAccount canAppendMessages]
  -[MailAccount shouldExpungeMessagesOnDelete]
  -[MailAccount isSpecialMailbox:]
  -[MailAccount mailboxesForSuggestionsLostMessageSearchPriorToTime:]
  -[MailAccount transferDisabledMailboxUids]
  -[MailAccount setMailboxUid:forMailboxType:]
  -[MailAccount setEmptyFrequency:forMailboxType:]
  -[MailAccount displayNameForMailboxUid:]
  -[MailAccount canCreateNewMailboxes]
  -[MailAccount canMailboxBeRenamed:]
  -[MailAccount canMailboxBeDeleted:]
  -[MailAccount moveMailbox:intoParent:]
  -[MailAccount renameMailbox:newName:]
  -[MailAccount resetMailboxURLs]
  -[MailAccount setConnectionError:]
  -[MailAccount connectionError]
  -[MailAccount transferNotificationSessionToAccount:]
  -[MailAccount canForwardWithoutDownload]
  -[MailAccount supportsSyncingReadState]
  -[MailAccount displayUsername]
  -[MailAccount archiveSentMessages]
  -[MailAccount deleteInPlaceForAllMailboxes]
  -[MailAccount displayNameUsingSpecialNamesForMailboxUid:]
  -[MailAccount persistentNameForMailbox:]
  -[MailAccount _registerPushNotificationPrefix:forMailboxNames:]
  -[MailAccount willPerformActionForChokePoint:coalescePoint:result:]
  -[MailAccount didFinishActionForChokePoint:coalescePoint:withResult:]
  -[MailAccount _mailboxesWereRemovedFromTree:withFileSystemPaths:]
  -[MailAccount setMailboxCachePath:]
  -[MailAccount powerAssertionIdentifierWithPrefix:]
  -[MailAccount _shouldLogDeleteActivity]
  -[MailAccount _readCustomInfoFromMailboxCache:]
  -[MailAccount URLForMessage:]
  -[MailAccount newMailboxWithParent:name:]
  -[MailAccount moveMessages:fromMailbox:toMailbox:markAsRead:]
  -[MailAccount shouldFetchBodiesWhenMovingToTrash]
  -[MailAccount saveSentFolder]
  -[MailAccount customSignature]
  -[MailAccount setCustomSignature:]
  -[MailAccount archiveDestinationForMailbox:]
  -[MailAccount supportsHandoffType:]
  -[MailAccount supportsFastRemoteBodySearch]
  -[MailAccount setMailboxCacheWriteScheduler:]


MFMailboxUid : NSObject /usr/lib/libsqlite3.dylib <NSCopying, EFPubliclyDescribable, EDIndexableMailbox>
 @property  MFInvocationQueue *attachmentDownloadQueue
 @property  EMObjectID *objectID
 @property  NSArray *extraAttributes
 @property  unsigned long suggestionsLostMessageSearchResultCount
 @property  double suggestionsLostMessageSearchTimestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *ef_publicDescription
 @property  NSString *persistentID
 @property  NSString *name
 @property  long long type
 @property  NSURL *URL
 @property  NSString *URLString

  // class methods
  +[MFMailboxUid defaultScheduler]
  +[MFMailboxUid specialNameForType:]
  +[MFMailboxUid isStandardizedMailboxUidType:]
  +[MFMailboxUid isSentMailboxType:]
  +[MFMailboxUid isOutgoingMailboxType:]
  +[MFMailboxUid fileURLForMailboxURL:]
  +[MFMailboxUid isDraftsMailboxType:]
  +[MFMailboxUid typeIsValidTransferDestination:]

  // instance methods
  -[MFMailboxUid init]
  -[MFMailboxUid name]
  -[MFMailboxUid copyWithZone:]
  -[MFMailboxUid invalidate]
  -[MFMailboxUid parent]
  -[MFMailboxUid type]
  -[MFMailboxUid setParent:]
  -[MFMailboxUid isValid]
  -[MFMailboxUid .cxx_destruct]
  -[MFMailboxUid setName:]
  -[MFMailboxUid attributes]
  -[MFMailboxUid dictionaryRepresentation]
  -[MFMailboxUid setAttributes:]
  -[MFMailboxUid URL]
  -[MFMailboxUid setUserInfoObject:forKey:]
  -[MFMailboxUid displayName]
  -[MFMailboxUid store]
  -[MFMailboxUid objectID]
  -[MFMailboxUid account]
  -[MFMailboxUid fullPath]
  -[MFMailboxUid persistentID]
  -[MFMailboxUid URLString]
  -[MFMailboxUid _dictionaryRepresentation]
  -[MFMailboxUid isVisible]
  -[MFMailboxUid initWithAccount:]
  -[MFMailboxUid children]
  -[MFMailboxUid setChildren:]
  -[MFMailboxUid removeChild:]
  -[MFMailboxUid _loadUserInfo]
  -[MFMailboxUid uniqueId]
  -[MFMailboxUid isShared]
  -[MFMailboxUid hasChildren]
  -[MFMailboxUid extraAttributes]
  -[MFMailboxUid setExtraAttributes:]
  -[MFMailboxUid numberOfChildren]
  -[MFMailboxUid childAtIndex:]
  -[MFMailboxUid isContainer]
  -[MFMailboxUid _privacySafeDescription]
  -[MFMailboxUid ef_publicDescription]
  -[MFMailboxUid setRepresentedAccount:]
  -[MFMailboxUid shouldRestoreMessagesAfterFailedDelete]
  -[MFMailboxUid initWithName:attributes:forAccount:extraAttributes:]
  -[MFMailboxUid mergeWithUserInfo:]
  -[MFMailboxUid saveUserInfo]
  -[MFMailboxUid flushCriteria]
  -[MFMailboxUid userInfoObjectForKey:]
  -[MFMailboxUid mutableDictionaryRepresentation]
  -[MFMailboxUid URLWithAccount:]
  -[MFMailboxUid mailboxID]
  -[MFMailboxUid criterion]
  -[MFMailboxUid mailboxType]
  -[MFMailboxUid serverUnreadOnlyOnServerCount]
  -[MFMailboxUid unreadCount]
  -[MFMailboxUid unreadCountMatchingCriterion:]
  -[MFMailboxUid childWithName:]
  -[MFMailboxUid isStore]
  -[MFMailboxUid setMailboxType:]
  -[MFMailboxUid mutableCopyOfChildren]
  -[MFMailboxUid isStandardizedMailboxUid]
  -[MFMailboxUid suggestionsLostMessageSearchTimestamp]
  -[MFMailboxUid suggestionsLostMessageSearchResultCount]
  -[MFMailboxUid depthFirstEnumerator]
  -[MFMailboxUid accountRelativePath]
  -[MFMailboxUid childWithExtraAttribute:]
  -[MFMailboxUid pathRelativeToMailbox:]
  -[MFMailboxUid _initWithName:attributes:forAccount:]
  -[MFMailboxUid representedAccount]
  -[MFMailboxUid _mutableChildren]
  -[MFMailboxUid childEnumeratorIncludingHiddenChildren:]
  -[MFMailboxUid numberOfDescendants]
  -[MFMailboxUid URLStringNonNil]
  -[MFMailboxUid fullPathNonNil]
  -[MFMailboxUid topMailbox]
  -[MFMailboxUid rootMailbox]
  -[MFMailboxUid ancestralAccount]
  -[MFMailboxUid addToPostOrderTraversal:]
  -[MFMailboxUid displayNameUsingSpecialNames]
  -[MFMailboxUid accountDisplayName]
  -[MFMailboxUid nonDeletedCount]
  -[MFMailboxUid statusCountDelta]
  -[MFMailboxUid updateMostRecentStatusCount:]
  -[MFMailboxUid shouldUseNonDeletedForUnreadCount]
  -[MFMailboxUid childEnumerator]
  -[MFMailboxUid indexOfChild:]
  -[MFMailboxUid descendantWithExtraAttribute:]
  -[MFMailboxUid sortChildren]
  -[MFMailboxUid isSpecialMailboxUid]
  -[MFMailboxUid isSentMailboxUid]
  -[MFMailboxUid isOutgoingMailboxUid]
  -[MFMailboxUid isNotesMailboxUid]
  -[MFMailboxUid realFullPath]
  -[MFMailboxUid pathRelativeToMailboxForDisplay:]
  -[MFMailboxUid oldURLString]
  -[MFMailboxUid compareWithMailboxUid:]
  -[MFMailboxUid indexToInsertChildMailboxUid:]
  -[MFMailboxUid isDescendantOfMailbox:]
  -[MFMailboxUid userInfoBoolForKey:]
  -[MFMailboxUid setUserInfoBool:forKey:]
  -[MFMailboxUid userInfoDictionary]
  -[MFMailboxUid setUserInfoWithDictionary:]
  -[MFMailboxUid userInfoForSerialization]
  -[MFMailboxUid setCriterion:]
  -[MFMailboxUid alwaysWriteFullMessageFile]
  -[MFMailboxUid updateSuggestionsLostMessageSearchResultCount:]
  -[MFMailboxUid attachmentDownloadQueue]


_MFMailboxUidEnumerator : NSEnumerator /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[_MFMailboxUidEnumerator nextObject]
  -[_MFMailboxUidEnumerator .cxx_destruct]
  -[_MFMailboxUidEnumerator initWithMailbox:]


_MFMailboxUidChildrenEnumerator : NSEnumerator /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
  // instance methods
  -[_MFMailboxUidChildrenEnumerator nextObject]
  -[_MFMailboxUidChildrenEnumerator .cxx_destruct]
  -[_MFMailboxUidChildrenEnumerator _initWithMailbox:includeHiddenChildren:]


MFMailDelivery : NSObject /usr/lib/libsqlite3.dylib
 @property  NSDictionary *compositionSpecification
 @property  unsigned long conversationFlags
 @property  BOOL isUserRequested
 @property  EMMessageObjectID *originalMessageObjectID
 @property  MFMailMessage *originalMessage
 @property  long long action
 @property  id delegate

  // class methods
  +[MFMailDelivery newWithMessage:]
  +[MFMailDelivery newWithHeaders:mixedContent:textPartsAreHTML:]
  +[MFMailDelivery newWithHeaders:HTML:plainTextAlternative:other:]
  +[MFMailDelivery deliverMessage:]

  // instance methods
  -[MFMailDelivery init]
  -[MFMailDelivery dealloc]
  -[MFMailDelivery delegate]
  -[MFMailDelivery setDelegate:]
  -[MFMailDelivery .cxx_destruct]
  -[MFMailDelivery action]
  -[MFMailDelivery message]
  -[MFMailDelivery account]
  -[MFMailDelivery setAccount:]
  -[MFMailDelivery initWithMessage:]
  -[MFMailDelivery setAction:]
  -[MFMailDelivery archive]
  -[MFMailDelivery newMessageWriter]
  -[MFMailDelivery originalMessage]
  -[MFMailDelivery shouldSignMessage]
  -[MFMailDelivery shouldEncryptMessage]
  -[MFMailDelivery isUserRequested]
  -[MFMailDelivery conversationFlags]
  -[MFMailDelivery deliverSynchronously]
  -[MFMailDelivery initWithHeaders:mixedContent:textPartsAreHTML:]
  -[MFMailDelivery initWithHeaders:HTML:plainTextAlternative:other:]
  -[MFMailDelivery setConversationFlags:]
  -[MFMailDelivery updateOriginalMessageFromHeaders:]
  -[MFMailDelivery compositionSpecification]
  -[MFMailDelivery originalHeaders]
  -[MFMailDelivery headersForDelivery]
  -[MFMailDelivery deliverMessageData:toRecipients:]
  -[MFMailDelivery archiveAccount]
  -[MFMailDelivery setArchiveAccount:]
  -[MFMailDelivery deliveryStatus]
  -[MFMailDelivery deliveryResult]
  -[MFMailDelivery deliverAsynchronously]
  -[MFMailDelivery setCellDataOnly:]
  -[MFMailDelivery setCompositionSpecification:]
  -[MFMailDelivery setIsUserRequested:]
  -[MFMailDelivery originalMessageObjectID]
  -[MFMailDelivery setOriginalMessageObjectID:]
  -[MFMailDelivery setOriginalMessage:]


MFMailDataMessageStore : MFDataMessageStore /System/Library/Frameworks/Security.framework/Security
  // class methods
  +[MFMailDataMessageStore classForMimePart]


MFMailMessage : MFMessage /System/Library/Frameworks/Security.framework/Security <EDIndexableMessage, MFBaseMessage>
 @property  EMMessageObjectID *objectID
 @property  MFMailboxUid *mailbox
 @property  unsigned long modSequenceNumber
 @property  BOOL shouldUseMailDrop
 @property  unsigned long messageFlags
 @property  MFMessageHeaders *headers
 @property  MailAccount *account
 @property  BOOL sourceIsManaged
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *persistentID
 @property  ECSubject *subject
 @property  NSArray *from
 @property  NSArray *to
 @property  NSArray *cc
 @property  NSArray *bcc
 @property  NSArray *senders
 @property  NSDate *dateReceived
 @property  NSDate *dateSent
 @property  NSArray *listUnsubscribe
 @property  NSString *remoteID
 @property  long long conversationID
 @property  BOOL isServerSearchResult
 @property  ECMessageFlags *flags
 @property  BOOL partOfExistingThread
 @property  <ECMimePart> *bodyPart
 @property  NSDictionary *headersDictionary
 @property  NSString *messageIDHeader
 @property  ECAngleBracketIDHash *messageIDHeaderHash
 @property  NSSet *labels
 @property  NSArray *references
 @property  NSUUID *documentID
 @property  unsigned long numberOfAttachments
 @property  ECAngleBracketIDHash *listIDHash
 @property  unsigned long fileSize
 @property  unsigned int uid
 @property  unsigned int dateReceivedInterval
 @property  unsigned int dateSentInterval
 @property  long long conversationHash
 @property  long long mailboxID
 @property  long long messageIDHash
 @property  BOOL flagged
 @property  BOOL read
 @property  BOOL deleted
 @property  BOOL senderVIP
 @property  BOOL knownToHaveAttachments
 @property  BOOL libraryMessage
 @property  long long libraryID

  // class methods
  +[MFMailMessage validatePriority:]
  +[MFMailMessage forwardedMessagePrefixWithSpacer:]
  +[MFMailMessage dataMessageStoreToUse]
  +[MFMailMessage displayablePriorityForPriority:]

  // instance methods
  -[MFMailMessage .cxx_destruct]
  -[MFMailMessage flags]
  -[MFMailMessage URL]
  -[MFMailMessage priority]
  -[MFMailMessage sourceIsManaged]
  -[MFMailMessage objectID]
  -[MFMailMessage from]
  -[MFMailMessage account]
  -[MFMailMessage deleted]
  -[MFMailMessage labels]
  -[MFMailMessage setSourceIsManaged:]
  -[MFMailMessage libraryID]
  -[MFMailMessage setSummary:]
  -[MFMailMessage numberOfAttachments]
  -[MFMailMessage read]
  -[MFMailMessage mailbox]
  -[MFMailMessage conversationFlags]
  -[MFMailMessage messageStore]
  -[MFMailMessage isSearchResultWithBogusRemoteId]
  -[MFMailMessage loadMeetingData]
  -[MFMailMessage messageFlags]
  -[MFMailMessage setMessageFlagsWithoutCommitting:]
  -[MFMailMessage originalMailboxURL]
  -[MFMailMessage copyMessageInfo]
  -[MFMailMessage loadCachedHeaderValuesFromHeaders:]
  -[MFMailMessage references]
  -[MFMailMessage bestAlternativePart:]
  -[MFMailMessage listUnsubscribe]
  -[MFMailMessage isServerSearchResult]
  -[MFMailMessage isPartOfExistingThread]
  -[MFMailMessage bodyPart]
  -[MFMailMessage headersDictionary]
  -[MFMailMessage setMessageFlags:]
  -[MFMailMessage setMutableInfoFromMessage:]
  -[MFMailMessage markAsViewed]
  -[MFMailMessage markAsNotViewed]
  -[MFMailMessage markAsFlagged]
  -[MFMailMessage markAsNotFlagged]
  -[MFMailMessage markAsReplied]
  -[MFMailMessage markAsForwarded]
  -[MFMailMessage preferredAccountToUseForReplying]
  -[MFMailMessage setConversationFlags:]
  -[MFMailMessage globalMessageURL]
  -[MFMailMessage setPriorityFromHeaders:]
  -[MFMailMessage mailMessageStore]
  -[MFMailMessage setSubject:to:cc:bcc:sender:dateReceived:dateSent:summary:withOptions:]
  -[MFMailMessage conversationHash]
  -[MFMailMessage flagged]
  -[MFMailMessage senderVIP]
  -[MFMailMessage isKnownToHaveAttachments]
  -[MFMailMessage modSequenceNumber]
  -[MFMailMessage setModSequenceNumber:]
  -[MFMailMessage preferredEmailAddressToReplyWith]
  -[MFMailMessage loadMeetingExternalID]
  -[MFMailMessage loadMeetingMetadata]
  -[MFMailMessage remoteMailboxURL]
  -[MFMailMessage shouldSetSummary]
  -[MFMailMessage externalConversationID]
  -[MFMailMessage bestAlternativePart]
  -[MFMailMessage answered]
  -[MFMailMessage junk]
  -[MFMailMessage conversationVIP]
  -[MFMailMessage conversationMuted]
  -[MFMailMessage shouldUseMailDrop]
  -[MFMailMessage setShouldUseMailDrop:]


MFMailMessageLibrary : MFMessageLibrary <EDMessageChangeHookResponder, EDProtectedDataReconciliationHookResponder, EFContentProtectionObserver>
 @property  EDSearchableIndexScheduler *searchableIndexScheduler
 @property  EDMessageQueryParser *queryParser
 @property  <EFScheduler> *reconciliationCleanupScheduler
 @property  <EFScheduler> *fileRemovalAfterCompactionScheduler
 @property  NSMutableDictionary *currentAddedMessagesMap
 @property  EDPersistenceHookRegistry *hookRegistry
 @property  EDPersistence *persistence
 @property  MFPersistenceDatabase_iOS *database
 @property  MFMessageChangeManager_iOS *messageChangeManager
 @property  unsigned long protectedDataAvailability
 @property  BOOL allowedToAccessProtectedData
 @property  unsigned long pendingIndexItemsCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibrary defaultInstance]
  +[MFMailMessageLibrary log]
  +[MFMailMessageLibrary defaultPath]
  +[MFMailMessageLibrary propertyMapper]
  +[MFMailMessageLibrary canUsePersistence]
  +[MFMailMessageLibrary removeLibraryOnNextLaunch]
  +[MFMailMessageLibrary _renameLibraryAtPath:]
  +[MFMailMessageLibrary setDefaultInstance:]

  // instance methods
  -[MFMailMessageLibrary dealloc]
  -[MFMailMessageLibrary .cxx_destruct]
  -[MFMailMessageLibrary initWithPath:]
  -[MFMailMessageLibrary start]
  -[MFMailMessageLibrary database]
  -[MFMailMessageLibrary persistence]
  -[MFMailMessageLibrary searchableIndex]
  -[MFMailMessageLibrary migrate]
  -[MFMailMessageLibrary shouldCancel]
  -[MFMailMessageLibrary sequenceIdentifierForMailbox:]
  -[MFMailMessageLibrary setSequenceIdentifier:forMailbox:]
  -[MFMailMessageLibrary urlForMailboxID:]
  -[MFMailMessageLibrary mailboxUidForMessage:]
  -[MFMailMessageLibrary setMessage:isPartial:]
  -[MFMailMessageLibrary areMessageContentsLocallyAvailable:fullContentsAvailble:]
  -[MFMailMessageLibrary setFlags:forMessage:]
  -[MFMailMessageLibrary setSummary:forMessage:]
  -[MFMailMessageLibrary dataPathForMessage:]
  -[MFMailMessageLibrary dataPathForMessage:part:]
  -[MFMailMessageLibrary accountForMessage:]
  -[MFMailMessageLibrary setFlagsFromDictionary:forMessages:]
  -[MFMailMessageLibrary setData:forMessage:isPartial:]
  -[MFMailMessageLibrary dataConsumerForMessage:part:]
  -[MFMailMessageLibrary fileAttributesForMessage:]
  -[MFMailMessageLibrary groupedMessagesCountForCriterion:groupBy:]
  -[MFMailMessageLibrary nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:]
  -[MFMailMessageLibrary allNonDeleteCountForMailbox:includeServerSearchResults:includeThreadSearchResults:]
  -[MFMailMessageLibrary messagesWithSummariesForMailbox:range:]
  -[MFMailMessageLibrary messagesMatchingCriterion:options:range:]
  -[MFMailMessageLibrary copyMessageInfosForMailbox:]
  -[MFMailMessageLibrary copyMessageInfosMatchingCriterion:]
  -[MFMailMessageLibrary copyMessageInfosForConversationsContainingMessagesMatchingCriterion:forMailbox:]
  -[MFMailMessageLibrary messagesWithoutSummariesForMailbox:fromRowID:limit:]
  -[MFMailMessageLibrary messagesMatchingCriterion:options:]
  -[MFMailMessageLibrary copyMessagesWithRemoteIDs:options:inRemoteMailbox:]
  -[MFMailMessageLibrary sendersByLibraryIDForConversation:mailbox:limit:]
  -[MFMailMessageLibrary oldestKnownConversationInMailbox:]
  -[MFMailMessageLibrary oldestKnownMessageInMailbox:]
  -[MFMailMessageLibrary serverSearchResultMessagesForMailbox:]
  -[MFMailMessageLibrary dateOfOldestNonIndexedNonSearchResultMessageInMailbox:]
  -[MFMailMessageLibrary dateOfOldestNonSearchResultMessageInMailbox:]
  -[MFMailMessageLibrary filterContiguousMessages:forCriterion:options:]
  -[MFMailMessageLibrary messageWithMessageID:options:inMailbox:]
  -[MFMailMessageLibrary headerDataForMessage:]
  -[MFMailMessageLibrary dataForMimePart:isComplete:]
  -[MFMailMessageLibrary dataConsumerForMessage:part:incomplete:]
  -[MFMailMessageLibrary fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:]
  -[MFMailMessageLibrary bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:]
  -[MFMailMessageLibrary deleteDataForMessage:]
  -[MFMailMessageLibrary messageChangeManager]
  -[MFMailMessageLibrary messagesForMailbox:olderThanNumberOfDays:]
  -[MFMailMessageLibrary setFlagsFromDictionary:forMessagesInMailboxURLString:]
  -[MFMailMessageLibrary setNumberOfAttachments:isSigned:isEncrypted:forMessage:]
  -[MFMailMessageLibrary compactMailbox:]
  -[MFMailMessageLibrary nonDeletedCountForMailbox:]
  -[MFMailMessageLibrary hasCompleteDataForMimePart:]
  -[MFMailMessageLibrary hookRegistry]
  -[MFMailMessageLibrary invalidateAccount:]
  -[MFMailMessageLibrary deleteMailboxes:account:]
  -[MFMailMessageLibrary deleteAccount:]
  -[MFMailMessageLibrary renameMailboxes:to:]
  -[MFMailMessageLibrary libraryIDForAccount:]
  -[MFMailMessageLibrary createLibraryIDForAccount:]
  -[MFMailMessageLibrary serverUnreadOnlyOnServerCountForMailbox:]
  -[MFMailMessageLibrary unreadCountForMailbox:]
  -[MFMailMessageLibrary unreadCountForMailbox:matchingCriterion:]
  -[MFMailMessageLibrary statusCountDeltaForMailbox:]
  -[MFMailMessageLibrary mostRecentStatusCountForMailbox:]
  -[MFMailMessageLibrary setMostRecentStatusCount:forMailbox:]
  -[MFMailMessageLibrary mailboxIDForURLString:]
  -[MFMailMessageLibrary loadMeetingExternalIDForMessage:]
  -[MFMailMessageLibrary loadMeetingDataForMessage:]
  -[MFMailMessageLibrary loadMeetingMetadataForMessage:]
  -[MFMailMessageLibrary renameOrRemoveDatabaseIfNeeded]
  -[MFMailMessageLibrary allowedToAccessProtectedData]
  -[MFMailMessageLibrary _setProtectedDataAvailabilityState:]
  -[MFMailMessageLibrary initWithPath:inMemoryIdentifier:userAgent:]
  -[MFMailMessageLibrary _cancelPendingJournalReconciliation]
  -[MFMailMessageLibrary closeDatabaseConnections]
  -[MFMailMessageLibrary fileRemovalAfterCompactionScheduler]
  -[MFMailMessageLibrary reconciliationCleanupScheduler]
  -[MFMailMessageLibrary pendingIndexItemsCount]
  -[MFMailMessageLibrary removeSearchableItemsForMessages:]
  -[MFMailMessageLibrary updateFlagsForMessages:changes:transformer:]
  -[MFMailMessageLibrary _recipientsForMessagesWithDatabaseIDs:includeTo:includeCC:includeBCC:]
  -[MFMailMessageLibrary _insertThreadReferences:toMessageWithLibraryID:usingDatabaseConnection:]
  -[MFMailMessageLibrary isProtectedDataAvailable:]
  -[MFMailMessageLibrary _addMessageToThreadAtUnlock:]
  -[MFMailMessageLibrary _addThreadingInfoWithContext:usingDatabaseConnection:]
  -[MFMailMessageLibrary conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:messageIDHash:]
  -[MFMailMessageLibrary conversationIdForMessageIds:]
  -[MFMailMessageLibrary flagsForConversationId:]
  -[MFMailMessageLibrary setFlags:forConversationId:]
  -[MFMailMessageLibrary _recipientsForMessageWithDatabaseID:connection:]
  -[MFMailMessageLibrary referencesFromHeaders:]
  -[MFMailMessageLibrary _findOrCreateDatabaseIDForAddress:comment:cache:connection:]
  -[MFMailMessageLibrary _findOrCreateDatabaseIDForSubject:cache:connection:]
  -[MFMailMessageLibrary _findOrCreateDatabaseIDForSummary:cache:connection:]
  -[MFMailMessageLibrary _addRecipients:toMessageWithDatabaseID:cache:connection:]
  -[MFMailMessageLibrary notifyConversation:hasMergedIntoConversation:]
  -[MFMailMessageLibrary addReferenceForContext:usingDatabaseConnection:generationWindow:mergeHandler:]
  -[MFMailMessageLibrary _writeEmlxFile:withBodyData:protectionClass:]
  -[MFMailMessageLibrary _libraryMessageWithLibraryID:wasCached:]
  -[MFMailMessageLibrary _findOrCreateDatabaseIDForValue:inTable:column:cache:connection:]
  -[MFMailMessageLibrary _selectExpressionForMessageWithAvailableTables:]
  -[MFMailMessageLibrary _iterateStatement:connection:withProgressMonitor:andRowHandler:context:]
  -[MFMailMessageLibrary _messagesForMailbox:olderThanNumberOfDays:limit:]
  -[MFMailMessageLibrary sendMessagesMatchingCriterion:to:options:baseTable:range:]
  -[MFMailMessageLibrary sendMessagesMatchingCriterion:to:options:baseTable:]
  -[MFMailMessageLibrary _firstDateForQuery:inMailbox:]
  -[MFMailMessageLibrary queryForCriterion:connection:options:]
  -[MFMailMessageLibrary queryForCriterion:connection:options:baseTable:]
  -[MFMailMessageLibrary _int64ForQuery:connection:textArgument:]
  -[MFMailMessageLibrary queryForCriterion:connection:options:baseTable:isSubquery:]
  -[MFMailMessageLibrary _libraryIDForOldestKnownMessageInMailbox:]
  -[MFMailMessageLibrary _sendMessagesForStatement:connection:to:options:timestamp:]
  -[MFMailMessageLibrary _computeUnreadCountForMailboxes:]
  -[MFMailMessageLibrary unreadCountForAggregatedMailboxes:matchingCriterion:]
  -[MFMailMessageLibrary unreadCountForAggregatedMailboxes:]
  -[MFMailMessageLibrary _flaggedCountForAggregatedMailboxes:]
  -[MFMailMessageLibrary _attachmentCountForAggregatedMailboxes:]
  -[MFMailMessageLibrary _includesMeCountForAggregatedMailboxes:]
  -[MFMailMessageLibrary countOfRelatedMessagesMatchingCriterion:forConversationsContainingMessagesMatchingCriterion:forMailboxCriterion:]
  -[MFMailMessageLibrary _queryForMailboxesIDsFromMailboxes:]
  -[MFMailMessageLibrary _integerForQuery:withTextArgument:]
  -[MFMailMessageLibrary flaggedCountForMailbox:]
  -[MFMailMessageLibrary attachmentCountForMailbox:]
  -[MFMailMessageLibrary includesMeCountForMailbox:]
  -[MFMailMessageLibrary countMessagesMatchingCriterion:]
  -[MFMailMessageLibrary nonDeletedCountForAggregatedMailboxes:includeServerSearchResults:includeThreadSearchResults:]
  -[MFMailMessageLibrary dataPathForMessage:type:]
  -[MFMailMessageLibrary _selectClauseForOptions:protectedDataAvailable:]
  -[MFMailMessageLibrary _messageForRow:options:timestamp:connection:isProtectedDataAvailable:]
  -[MFMailMessageLibrary _canSelectMessagesWithOptions:connection:]
  -[MFMailMessageLibrary getDetailsForMessagesWithRemoteIDInRange:fromMailbox:]
  -[MFMailMessageLibrary _keyForOptions:protectedDataAvailable:mailboxAvailable:mailboxCached:]
  -[MFMailMessageLibrary _copyReferenceHashesWithoutMessagesForMessageWithConversation:]
  -[MFMailMessageLibrary _getReferencesForHashesWithOwners:]
  -[MFMailMessageLibrary remoteStoreForMessage:]
  -[MFMailMessageLibrary stringForQuery:monitor:]
  -[MFMailMessageLibrary mailboxURLForMessage:]
  -[MFMailMessageLibrary _schedulePeriodicStatisticsLogging]
  -[MFMailMessageLibrary _scheduleIncrementalVacuum]
  -[MFMailMessageLibrary _notifyDidCompact:messages:mailboxes:]
  -[MFMailMessageLibrary _addAddressesFromRecipientsForMessages:toSet:connection:]
  -[MFMailMessageLibrary _deleteMessages:andCleanUpAddresses:subjects:summaries:connection:]
  -[MFMailMessageLibrary _removeSearchableItemsWithLibraryIDs:]
  -[MFMailMessageLibrary cleanupProtectedTables]
  -[MFMailMessageLibrary _existingValuesForColumn:table:fromValues:connection:]
  -[MFMailMessageLibrary _deleteRows:fromTable:connection:]
  -[MFMailMessageLibrary _maxRowIDInSet:]
  -[MFMailMessageLibrary _deleteMessagesWithWhereClause:deletedMessages:connection:]
  -[MFMailMessageLibrary removeSearchableItemsForAccount:mailboxID:]
  -[MFMailMessageLibrary getDetailsForAllMessagesFromMailbox:]
  -[MFMailMessageLibrary removeSearchableItemsForMailbox:]
  -[MFMailMessageLibrary attachmentsDirectoryURLForMessage:inMailboxFileURL:]
  -[MFMailMessageLibrary dataConsumerForMessage:isPartial:]
  -[MFMailMessageLibrary _setSummary:forMessageWithRowID:connection:]
  -[MFMailMessageLibrary loadData:forMessage:usingBlock:]
  -[MFMailMessageLibrary bodyDataAtPath:headerData:]
  -[MFMailMessageLibrary headerDataAtPath:]
  -[MFMailMessageLibrary _equalToMailboxIDsFromCriterion:]
  -[MFMailMessageLibrary _activeAccountsClause]
  -[MFMailMessageLibrary queryForCriterion:connection:options:baseTable:isSubquery:range:]
  -[MFMailMessageLibrary sendMessagesMatchingCriterion:to:options:baseTable:range:success:]
  -[MFMailMessageLibrary queryParser]
  -[MFMailMessageLibrary sqlQueryWithConversionLogForQuery:]
  -[MFMailMessageLibrary iterateMessagesMatchingCriterion:withResultHandler:options:withMonitor:]
  -[MFMailMessageLibrary sendMessagesMatchingCriterion:to:options:range:]
  -[MFMailMessageLibrary sendMessagesMatchingCriterion:to:options:]
  -[MFMailMessageLibrary removeSearchableItemsForAccount:]
  -[MFMailMessageLibrary rebuildActiveAccountMailboxesExpression:]
  -[MFMailMessageLibrary rebuildActiveAccountsClauseWithActiveAccounts:inactiveAccounts:]
  -[MFMailMessageLibrary _mailboxesClauseForAccounts:]
  -[MFMailMessageLibrary _collectStatistics_nts]
  -[MFMailMessageLibrary _shouldLogDatabaseStats]
  -[MFMailMessageLibrary _logStatistics]
  -[MFMailMessageLibrary _scheduleJournalReconciliation]
  -[MFMailMessageLibrary updateThreadingInfoForMessage:fromHeaders:]
  -[MFMailMessageLibrary performIncrementalVacuumForSchema:]
  -[MFMailMessageLibrary _nonLocalAccountsClause]
  -[MFMailMessageLibrary _stringsForIndexSet:]
  -[MFMailMessageLibrary reindexSearchableItemsWithIdentifiers:acknowledgementHandler:]
  -[MFMailMessageLibrary reindexAllSearchableItemsWithAcknowledgementHandler:]
  -[MFMailMessageLibrary persistenceDidAddMessages:generationWindow:]
  -[MFMailMessageLibrary persistenceDidReconcileProtectedData]
  -[MFMailMessageLibrary contentProtectionStateChanged:previousState:]
  -[MFMailMessageLibrary invalidateAndWait]
  -[MFMailMessageLibrary _setSuspendedUnderLock:]
  -[MFMailMessageLibrary updateFlagsForMessagesInPlace:success:]
  -[MFMailMessageLibrary notifyNewDataAvailableForMessages:]
  -[MFMailMessageLibrary addMessages:withMailbox:newMessagesByOldMessage:remoteIDs:setFlags:addPOPUIDs:dataSectionsByMessage:generationWindow:]
  -[MFMailMessageLibrary willStartPersistenceDidAddMessages:]
  -[MFMailMessageLibrary didFinishPersistenceDidAddMessages:]
  -[MFMailMessageLibrary updateAdditionalThreadingInfoForSentMessageWithHeaders:externalConversationID:]
  -[MFMailMessageLibrary iterateStatement:connection:withProgressMonitor:andRowHandler:context:]
  -[MFMailMessageLibrary messagesForMailbox:limit:]
  -[MFMailMessageLibrary groupedMessagesCountByMailboxMatchingQuery:variable:]
  -[MFMailMessageLibrary messagesWithoutSummariesForMailbox:]
  -[MFMailMessageLibrary messagesWithSummariesForMailbox:fromRowID:limit:]
  -[MFMailMessageLibrary orderedBatchOfMessagesEndingAtRowId:limit:success:]
  -[MFMailMessageLibrary recomputeUnreadCountForMailboxWithURL:]
  -[MFMailMessageLibrary countDistinctMessagesMatchingCriterion:]
  -[MFMailMessageLibrary deletedCountForMailbox:]
  -[MFMailMessageLibrary attachmentCountForMailboxes:]
  -[MFMailMessageLibrary nonDeletedCountForAggregatedMailboxes:]
  -[MFMailMessageLibrary totalCountForMailbox:]
  -[MFMailMessageLibrary unseenCountForMailbox:]
  -[MFMailMessageLibrary indexedCountForMailbox:limit:]
  -[MFMailMessageLibrary setServerUnreadOnlyOnServerCount:forMailbox:]
  -[MFMailMessageLibrary setLastSyncAndMostRecentStatusCount:forMailbox:]
  -[MFMailMessageLibrary increaseProtectionOnFileForMessage:]
  -[MFMailMessageLibrary oldestMessageInMailbox:]
  -[MFMailMessageLibrary messageWithRemoteID:inRemoteMailbox:]
  -[MFMailMessageLibrary maximumRemoteIDForMailbox:]
  -[MFMailMessageLibrary canProvideMinimumRemoteID]
  -[MFMailMessageLibrary minimumRemoteIDForMailbox:]
  -[MFMailMessageLibrary sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:]
  -[MFMailMessageLibrary setSequenceIdentifier:forMessageWithLibraryID:]
  -[MFMailMessageLibrary setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:]
  -[MFMailMessageLibrary getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:]
  -[MFMailMessageLibrary messagesWithMessageIDHeader:]
  -[MFMailMessageLibrary messageWithLibraryID:options:inMailbox:temporarilyUnavailable:]
  -[MFMailMessageLibrary missingReferencesForConversationContainingMessage:]
  -[MFMailMessageLibrary countOfMessagesMissingFromThreadContainingMessage:]
  -[MFMailMessageLibrary loadMoreMessagesForThreadContainingMessage:hasNoMoreMessages:]
  -[MFMailMessageLibrary stringForQuery:]
  -[MFMailMessageLibrary reloadMailboxCacheIfNecessaryWithConnection:]
  -[MFMailMessageLibrary mailboxURLsForIDs:]
  -[MFMailMessageLibrary mailboxIDForURLString:createIfNecesary:]
  -[MFMailMessageLibrary clearServerSearchFlagsForMessagesWithLibraryIDs:]
  -[MFMailMessageLibrary scheduleRecurringActivity]
  -[MFMailMessageLibrary syncedConversations]
  -[MFMailMessageLibrary setConversationInfo:syncKey:flags:]
  -[MFMailMessageLibrary messageIdsForConversationId:limit:]
  -[MFMailMessageLibrary storedIntegerPropertyWithName:]
  -[MFMailMessageLibrary setStoredIntegerPropertyWithName:value:]
  -[MFMailMessageLibrary compactMessages:permanently:]
  -[MFMailMessageLibrary removeAllMessagesFromMailbox:removeMailbox:andNotify:]
  -[MFMailMessageLibrary messageWithMessageID:inMailbox:]
  -[MFMailMessageLibrary attachmentsDirectoryURLForMessage:]
  -[MFMailMessageLibrary deleteAttachmentsForMessage:inMailboxFileURL:]
  -[MFMailMessageLibrary dataConsumerForMessage:]
  -[MFMailMessageLibrary setData:forMessageToAppend:]
  -[MFMailMessageLibrary _setMessageData:libraryID:part:partial:complete:connection:]
  -[MFMailMessageLibrary bodyDataForMessage:]
  -[MFMailMessageLibrary queryForCriterion:connection:options:range:]
  -[MFMailMessageLibrary iterateMessagesMatchingQuery:withResultHandler:options:withMonitor:]
  -[MFMailMessageLibrary iterateMessagesMatchingCriterion:options:handler:]
  -[MFMailMessageLibrary messagesMatchingCriterion:options:range:success:]
  -[MFMailMessageLibrary messagesMatchingCriterion:options:success:]
  -[MFMailMessageLibrary rebuildActiveAccountsClausesAndExpressionsWithAccounts:]
  -[MFMailMessageLibrary enabledAccountMailboxesExpression]
  -[MFMailMessageLibrary deletePOPUID:inMailbox:]
  -[MFMailMessageLibrary UIDsToDeleteInMailbox:]
  -[MFMailMessageLibrary allUIDsInMailbox:]
  -[MFMailMessageLibrary hiddenPOPUIDsInMailbox:]
  -[MFMailMessageLibrary protectedDataAvailability]
  -[MFMailMessageLibrary _indexSetOfMessagesDeleted]
  -[MFMailMessageLibrary checkDatabaseConsistency]
  -[MFMailMessageLibrary _canAccessProtectedData]
  -[MFMailMessageLibrary journalWasReconciled]
  -[MFMailMessageLibrary journalReconciliationFailed]
  -[MFMailMessageLibrary handleFailedMigration]
  -[MFMailMessageLibrary pruneConversationTables:]
  -[MFMailMessageLibrary _prepareBatchStatement:pattern:objects:count:]
  -[MFMailMessageLibrary _prepareBatchStatement:pattern:libraryIDs:batchSize:]
  -[MFMailMessageLibrary indexableMessagesWhere:sortedBy:limit:options:]
  -[MFMailMessageLibrary allMailboxURLStrings]
  -[MFMailMessageLibrary _libraryMessageCache]
  -[MFMailMessageLibrary firstMessageMatchingCriterion:]
  -[MFMailMessageLibrary stringFromAllMailboxUnreadCount]
  -[MFMailMessageLibrary messageDataExistsInDatabaseForMessageLibraryID:part:length:]
  -[MFMailMessageLibrary searchableIndexScheduler]
  -[MFMailMessageLibrary setSearchableIndexScheduler:]
  -[MFMailMessageLibrary setQueryParser:]
  -[MFMailMessageLibrary setReconciliationCleanupScheduler:]
  -[MFMailMessageLibrary setFileRemovalAfterCompactionScheduler:]
  -[MFMailMessageLibrary currentAddedMessagesMap]
  -[MFMailMessageLibrary setCurrentAddedMessagesMap:]


_MFMailMessageLibraryStatistics : NSObject /usr/lib/libsqlite3.dylib
 @property  double start
 @property  double duration
 @property  BOOL protectedDataAvailable
 @property  unsigned long messages
 @property  unsigned long protectedMessages
 @property  unsigned long messageData
 @property  unsigned long protectedMessageData
 @property  unsigned long messagesDeleted
 @property  unsigned long messageDataDeleted
 @property  unsigned long messagesMarkedAsJournaled
 @property  unsigned long mailboxesNeedingReconcilication

  // instance methods
  -[_MFMailMessageLibraryStatistics start]
  -[_MFMailMessageLibraryStatistics duration]
  -[_MFMailMessageLibraryStatistics setDuration:]
  -[_MFMailMessageLibraryStatistics setStart:]
  -[_MFMailMessageLibraryStatistics messages]
  -[_MFMailMessageLibraryStatistics setMessages:]
  -[_MFMailMessageLibraryStatistics messageData]
  -[_MFMailMessageLibraryStatistics setMessageData:]
  -[_MFMailMessageLibraryStatistics protectedDataAvailable]
  -[_MFMailMessageLibraryStatistics setProtectedDataAvailable:]
  -[_MFMailMessageLibraryStatistics setMessageDataDeleted:]
  -[_MFMailMessageLibraryStatistics setMessagesMarkedAsJournaled:]
  -[_MFMailMessageLibraryStatistics setMailboxesNeedingReconcilication:]
  -[_MFMailMessageLibraryStatistics setProtectedMessages:]
  -[_MFMailMessageLibraryStatistics setProtectedMessageData:]
  -[_MFMailMessageLibraryStatistics messagesMarkedAsJournaled]
  -[_MFMailMessageLibraryStatistics protectedMessages]
  -[_MFMailMessageLibraryStatistics protectedMessageData]
  -[_MFMailMessageLibraryStatistics messagesDeleted]
  -[_MFMailMessageLibraryStatistics messageDataDeleted]
  -[_MFMailMessageLibraryStatistics mailboxesNeedingReconcilication]
  -[_MFMailMessageLibraryStatistics setMessagesDeleted:]


_MFMessageCollector : NSObject /usr/lib/libsqlite3.dylib <MessageConsumer, QueryProgressMonitor>
 @property  @? transmogrifier

  // instance methods
  -[_MFMessageCollector init]
  -[_MFMessageCollector .cxx_destruct]
  -[_MFMessageCollector messages]
  -[_MFMessageCollector shouldCancel]
  -[_MFMessageCollector newMessagesAvailable:]
  -[_MFMessageCollector copyMessages]
  -[_MFMessageCollector transmogrifier]
  -[_MFMessageCollector setTransmogrifier:]


_MFBlockIterationHandler : NSObject /usr/lib/libsqlite3.dylib <MFSearchResultHandler, QueryProgressMonitor>
  // instance methods
  -[_MFBlockIterationHandler .cxx_destruct]
  -[_MFBlockIterationHandler initWithBlock:]
  -[_MFBlockIterationHandler handleMessage:]
  -[_MFBlockIterationHandler shouldCancel]


_MFDataCollector : NSObject /usr/lib/libsqlite3.dylib <MFGuaranteedCollectingDataConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFDataCollector .cxx_destruct]
  -[_MFDataCollector data]
  -[_MFDataCollector appendData:]
  -[_MFDataCollector done]
  -[_MFDataCollector initWithLibrary:message:part:partial:incomplete:relaxDataProtection:compressionQueue:]
  -[_MFDataCollector pathForStorage]


_MFEmailAddress : NSObject /usr/lib/libsqlite3.dylib
 @property  NSString *fullAddress
 @property  NSString *address
 @property  NSString *comment

  // instance methods
  -[_MFEmailAddress .cxx_destruct]
  -[_MFEmailAddress address]
  -[_MFEmailAddress comment]
  -[_MFEmailAddress initWithAddress:comment:]
  -[_MFEmailAddress fullAddress]


_MFRecipientCollection : NSObject /usr/lib/libsqlite3.dylib
 @property  NSArray *toRecipients
 @property  NSArray *toRecipientStrings
 @property  NSArray *ccRecipients
 @property  NSArray *ccRecipientStrings
 @property  NSArray *bccRecipients
 @property  NSArray *bccRecipientStrings

  // instance methods
  -[_MFRecipientCollection init]
  -[_MFRecipientCollection .cxx_destruct]
  -[_MFRecipientCollection toRecipientStrings]
  -[_MFRecipientCollection ccRecipientStrings]
  -[_MFRecipientCollection bccRecipientStrings]
  -[_MFRecipientCollection addToRecipientWithAddress:comment:]
  -[_MFRecipientCollection addCCRecipientWithAddress:comment:]
  -[_MFRecipientCollection addBCCRecipientWithAddress:comment:]
  -[_MFRecipientCollection toRecipients]
  -[_MFRecipientCollection ccRecipients]
  -[_MFRecipientCollection bccRecipients]
  -[_MFRecipientCollection addToRecipient:]
  -[_MFRecipientCollection addCCRecipient:]
  -[_MFRecipientCollection addBCCRecipient:]


_MFObjectProperty : NSObject /usr/lib/libsqlite3.dylib
 @property  Class class
 @property  SEL property

  // class methods
  +[_MFObjectProperty objectPropertyWithClass:property:]

  // instance methods
  -[_MFObjectProperty class]
  -[_MFObjectProperty property]
  -[_MFObjectProperty setProperty:]
  -[_MFObjectProperty setClass:]


_MFAddableMessage : NSObject /usr/lib/libsqlite3.dylib <ECMessage>
 @property  MFLibraryMessage *libraryMessage
 @property  NSString *urlString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *persistentID
 @property  ECSubject *subject
 @property  NSArray *from
 @property  NSArray *to
 @property  NSArray *cc
 @property  NSArray *bcc
 @property  NSArray *senders
 @property  NSDate *dateReceived
 @property  NSDate *dateSent
 @property  NSArray *listUnsubscribe
 @property  NSString *remoteID
 @property  <ECMailbox> *mailbox
 @property  long long conversationID
 @property  BOOL isServerSearchResult
 @property  ECMessageFlags *flags
 @property  BOOL partOfExistingThread
 @property  <ECMimePart> *bodyPart
 @property  NSDictionary *headersDictionary
 @property  NSString *messageIDHeader
 @property  ECAngleBracketIDHash *messageIDHeaderHash
 @property  NSSet *labels
 @property  <ECMailAccount> *account
 @property  <ECMessageHeaders> *headers
 @property  NSArray *references
 @property  NSUUID *documentID
 @property  unsigned long numberOfAttachments
 @property  ECAngleBracketIDHash *listIDHash

  // instance methods
  -[_MFAddableMessage isKindOfClass:]
  -[_MFAddableMessage respondsToSelector:]
  -[_MFAddableMessage copyWithZone:]
  -[_MFAddableMessage forwardingTargetForSelector:]
  -[_MFAddableMessage .cxx_destruct]
  -[_MFAddableMessage urlString]
  -[_MFAddableMessage mailbox]
  -[_MFAddableMessage bestAlternativePart:]
  -[_MFAddableMessage isServerSearchResult]
  -[_MFAddableMessage messageIDHeaderHash]
  -[_MFAddableMessage messageIDHash]
  -[_MFAddableMessage initWithLibraryMessage:messageIDHash:mailboxURL:]
  -[_MFAddableMessage libraryMessage]


MFMailboxMessageIterationFilter : NSObject /usr/lib/libsqlite3.dylib <MFMessageIterationFilter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFMailboxMessageIterationFilter .cxx_destruct]
  -[MFMailboxMessageIterationFilter filterMessageWithStatement:]
  -[MFMailboxMessageIterationFilter filterMessageWithRow:]
  -[MFMailboxMessageIterationFilter initWithMailboxes:]


MFMessageTransferResult : NSObject /usr/lib/libsqlite3.dylib
 @property  unsigned long resultCode
 @property  NSArray *failedMessages
 @property  NSArray *transferedMessages

  // instance methods
  -[MFMessageTransferResult .cxx_destruct]
  -[MFMessageTransferResult initWithResultCode:failedMessages:transferedMessage:]
  -[MFMessageTransferResult resultCode]
  -[MFMessageTransferResult transferedMessages]
  -[MFMessageTransferResult failedMessages]


MFMailMessageStore : MFMessageStore /System/Library/Frameworks/Security.framework/Security
  // class methods
  +[MFMailMessageStore createEmptyStoreForPath:]
  +[MFMailMessageStore storeAtPathIsWritable:]
  +[MFMailMessageStore classForMimePart]
  +[MFMailMessageStore createEmptyStoreIfNeededForPath:]
  +[MFMailMessageStore headersClass]

  // instance methods
  -[MFMailMessageStore close]
  -[MFMailMessageStore .cxx_destruct]
  -[MFMailMessageStore status]
  -[MFMailMessageStore displayName]
  -[MFMailMessageStore account]
  -[MFMailMessageStore totalCount]
  -[MFMailMessageStore isReadOnly]
  -[MFMailMessageStore setLibrary:]
  -[MFMailMessageStore mailboxUid]
  -[MFMailMessageStore setFlagsFromDictionary:forMessages:]
  -[MFMailMessageStore initWithMailboxUid:readOnly:]
  -[MFMailMessageStore invalidateFetchWindow]
  -[MFMailMessageStore didOpen]
  -[MFMailMessageStore messagesWereAdded:]
  -[MFMailMessageStore copyOfAllMessagesWithOptions:]
  -[MFMailMessageStore copyOfAllMessages]
  -[MFMailMessageStore copyMessagesWithRemoteIDs:options:inMailbox:]
  -[MFMailMessageStore allNonDeletedCountIncludingServerSearch:andThreadSearch:]
  -[MFMailMessageStore fetchWindowCap]
  -[MFMailMessageStore fetchWindow]
  -[MFMailMessageStore shouldGrowFetchWindow]
  -[MFMailMessageStore messagesWereAdded:earliestReceivedDate:]
  -[MFMailMessageStore messageFlagsDidChange:flags:]
  -[MFMailMessageStore allMessageFlagsDidChange:]
  -[MFMailMessageStore messagesWereCompacted:]
  -[MFMailMessageStore messagesWillBeCompacted:]
  -[MFMailMessageStore setFlagsLocallyFromDictionary:forMessages:]
  -[MFMailMessageStore setNumberOfAttachments:isSigned:isEncrypted:forMessage:]
  -[MFMailMessageStore canCompact]
  -[MFMailMessageStore isOpened]
  -[MFMailMessageStore serverUnreadOnlyOnServerCount]
  -[MFMailMessageStore unreadCount]
  -[MFMailMessageStore unreadCountMatchingCriterion:]
  -[MFMailMessageStore hasMessageForAccount:]
  -[MFMailMessageStore openSynchronously]
  -[MFMailMessageStore nonDeletedCountIncludingServerSearch:andThreadSearch:]
  -[MFMailMessageStore copyOfAllMessagesForBodyLoadingFromRowID:limit:]
  -[MFMailMessageStore mutableCopyOfAllMessages]
  -[MFMailMessageStore copyMessagesMatchingText:options:]
  -[MFMailMessageStore copyMessagesMatchingCriterion:options:]
  -[MFMailMessageStore copyMessagesWithRemoteIDs:options:]
  -[MFMailMessageStore growFetchWindow]
  -[MFMailMessageStore messageForMessageID:options:]
  -[MFMailMessageStore _fetchHeaderDataForMessage:downloadIfNecessary:]
  -[MFMailMessageStore storeData:forMimePart:isComplete:]
  -[MFMailMessageStore indexOfMessage:]
  -[MFMailMessageStore deleteMessages:moveToTrash:]
  -[MFMailMessageStore deleteMessagesOlderThanNumberOfDays:compact:]
  -[MFMailMessageStore setFlagsForAllMessagesFromDictionary:]
  -[MFMailMessageStore allowsAppend]
  -[MFMailMessageStore doCompact]
  -[MFMailMessageStore writeUpdatedMessageDataToDisk]
  -[MFMailMessageStore purgeMessagesBeyondLimit:keepingMessage:]
  -[MFMailMessageStore supportsArchiving]
  -[MFMailMessageStore loadMeetingExternalIDForMessage:]
  -[MFMailMessageStore loadMeetingDataForMessage:]
  -[MFMailMessageStore loadMeetingMetadataForMessage:]
  -[MFMailMessageStore canFetchMessageIDs]
  -[MFMailMessageStore fetchMessagesWithMessageIDs:andSetFlags:]
  -[MFMailMessageStore serverMessageCount]
  -[MFMailMessageStore hasMoreFetchableMessages]
  -[MFMailMessageStore storeSearchResultMatchingCriterion:limit:offset:error:]
  -[MFMailMessageStore _updateFlagForMessage:key:value:]
  -[MFMailMessageStore fetchNumMessages:preservingUID:options:]
  -[MFMailMessageStore fetchMobileSynchronously:preservingUID:options:]
  -[MFMailMessageStore _flushAllMessageData]
  -[MFMailMessageStore _setOrGetBody:forMessage:updateFlags:]
  -[MFMailMessageStore _shouldChangeComponentMessageFlagsForMessage:]
  -[MFMailMessageStore _shouldChangeComponentMessageFlags]
  -[MFMailMessageStore openAsynchronously]
  -[MFMailMessageStore cancelOpen]
  -[MFMailMessageStore storePathRelativeToAccount]
  -[MFMailMessageStore isDrafts]
  -[MFMailMessageStore structureDidChange]
  -[MFMailMessageStore deletedCount:andSize:]
  -[MFMailMessageStore serverUnreadCount]
  -[MFMailMessageStore serverNonDeletedCount]
  -[MFMailMessageStore copyOfMessagesInRange:]
  -[MFMailMessageStore copyMessagesMatchingText:]
  -[MFMailMessageStore canFetchSearchResults]
  -[MFMailMessageStore fetchMessagesMatchingCriterion:limit:]
  -[MFMailMessageStore storeSearchResultMatchingSearchText:criterion:limit:offset:error:]
  -[MFMailMessageStore remoteIDsFromUniqueRemoteIDs:]
  -[MFMailMessageStore fetchMessagesWithRemoteIDs:andSetFlags:]
  -[MFMailMessageStore undeleteMessages:]
  -[MFMailMessageStore messagesWereDeleted:]
  -[MFMailMessageStore messageForRemoteID:]
  -[MFMailMessageStore messageForRemoteID:inMailbox:]
  -[MFMailMessageStore uniqueRemoteIDsForMessages:]
  -[MFMailMessageStore headerDataForMessage:downloadIfNecessary:]
  -[MFMailMessageStore hasCachedDataForMimePart:]
  -[MFMailMessageStore setFlag:state:forMessages:]
  -[MFMailMessageStore setFlagsCancelled:forMessages:]
  -[MFMailMessageStore updateServerUnreadCountClosingConnection:]
  -[MFMailMessageStore fetchMobileSynchronously:]
  -[MFMailMessageStore setPreferredEncoding:forMessage:]
  -[MFMailMessageStore shouldDownloadBodyDataForMessage:]
  -[MFMailMessageStore shouldDeleteInPlace]
  -[MFMailMessageStore shouldArchive]
  -[MFMailMessageStore archiveDestination]
  -[MFMailMessageStore _rebuildTableOfContentsSynchronously]
  -[MFMailMessageStore messageIdRollCall:]
  -[MFMailMessageStore appendMessages:unsuccessfulOnes:]


MFMailMimePart : MFMimePart /System/Library/Frameworks/Security.framework/Security
  // class methods
  +[MFMailMimePart isRecognizedClassForContent:]
  +[MFMailMimePart attachmentClass]

  // instance methods
  -[MFMailMimePart contentToOffset:resultOffset:downloadIfNecessary:asHTML:isComplete:]
  -[MFMailMimePart htmlContentToOffset:resultOffset:downloadIfNecessary:]
  -[MFMailMimePart fileWrapperForcingDownload:]
  -[MFMailMimePart configureFileWrapper:]
  -[MFMailMimePart fileWrapperForDecodedObject:withFileData:]
  -[MFMailMimePart _shouldContinueDecodingProcess]
  -[MFMailMimePart decodeTextRichtext]
  -[MFMailMimePart decodeTextEnriched]
  -[MFMailMimePart decodeTextHtml]
  -[MFMailMimePart htmlContentToOffset:resultOffset:]
  -[MFMailMimePart htmlContent]
  -[MFMailMimePart decodeTextPlain]
  -[MFMailMimePart decodeTextCalendar]
  -[MFMailMimePart decodeMultipartAppledouble]
  -[MFMailMimePart storeData:inMessage:isComplete:]
  -[MFMailMimePart decodeMessageDelivery_status]
  -[MFMailMimePart decodeMessageRfc822]
  -[MFMailMimePart decodeMessagePartial]
  -[MFMailMimePart decodeMessageExternal_body]


MFMailMimeTextAttachment : MFMimeTextAttachment /System/Library/Frameworks/Security.framework/Security
  // instance methods
  -[MFMailMimeTextAttachment shouldDownloadAttachmentOnDisplay]


MFMessageCriterion : NSObject /usr/lib/libsqlite3.dylib <EDSearchableCriterion, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL fullTextSearchableCriterion
 @property  NSString *spotlightQueryString
 @property  long long criterionType
 @property  NSString *criterionIdentifier
 @property  int qualifier
 @property  NSString *expression
 @property  NSArray *expressionLanguages
 @property  EFMutableInt64Set *libraryIdentifiers
 @property  BOOL preferFullTextSearch
 @property  BOOL useFlaggedForUnreadCount
 @property  BOOL includeRelatedMessages
 @property  BOOL expressionIsSanitized
 @property  BOOL includeRemoteBodyContent
 @property  NSString *name
 @property  NSArray *criteria

  // class methods
  +[MFMessageCriterion _todayDateComponents]
  +[MFMessageCriterion orCompoundCriterionWithCriteria:]
  +[MFMessageCriterion unreadMessageCriterion]
  +[MFMessageCriterion criterionTypeForString:]
  +[MFMessageCriterion andCompoundCriterionWithCriteria:]
  +[MFMessageCriterion messageIsDeletedCriterion:]
  +[MFMessageCriterion messageIsServerSearchResultCriterion:]
  +[MFMessageCriterion criterionForMailboxURL:]
  +[MFMessageCriterion criterionForNotDeletedConversationID:]
  +[MFMessageCriterion criterionForMailboxPredictionMessageQuery:variable:]
  +[MFMessageCriterion messageIsJournaledCriterion:]
  +[MFMessageCriterion criterionExcludingMailboxes:]
  +[MFMessageCriterion criteriaFromDefaultsArray:removingRecognizedKeys:]
  +[MFMessageCriterion stringForCriterionType:]
  +[MFMessageCriterion criterionForMailbox:]
  +[MFMessageCriterion notCriterionWithCriterion:]
  +[MFMessageCriterion criterionForConversationID:]
  +[MFMessageCriterion _criterionForDateReceivedBetweenDateComponents:endDateComponents:]
  +[MFMessageCriterion _criterionForDateReceivedBetween:endDate:]
  +[MFMessageCriterion criterionForDateReceivedNewerThanDate:]
  +[MFMessageCriterion criterionForDateReceivedOlderThanDate:]
  +[MFMessageCriterion expressionForDate:]
  +[MFMessageCriterion criteriaFromDefaultsArray:]
  +[MFMessageCriterion defaultsArrayFromCriteria:]
  +[MFMessageCriterion criterionFromDefaultsDictionary:]
  +[MFMessageCriterion defaultsDictionaryFromCriterion:]
  +[MFMessageCriterion _updateAddressComments:]
  +[MFMessageCriterion criterionForAccount:]
  +[MFMessageCriterion criterionForLibraryID:]
  +[MFMessageCriterion criterionForDocumentID:]
  +[MFMessageCriterion VIPSenderMessageCriterion]
  +[MFMessageCriterion threadNotifyMessageCriterion]
  +[MFMessageCriterion threadMuteMessageCriterion]
  +[MFMessageCriterion flaggedMessageCriterion]
  +[MFMessageCriterion readMessageCriterion]
  +[MFMessageCriterion includesMeCriterion]
  +[MFMessageCriterion toMeCriterion]
  +[MFMessageCriterion ccMeCriterion]
  +[MFMessageCriterion hasAttachmentsCriterion]
  +[MFMessageCriterion todayMessageCriterion]
  +[MFMessageCriterion yesterdayMessageCriterion]
  +[MFMessageCriterion lastWeekMessageCriterion]
  +[MFMessageCriterion matchEverythingCriterion]
  +[MFMessageCriterion matchNothingCriterion]

  // instance methods
  -[MFMessageCriterion init]
  -[MFMessageCriterion isEqual:]
  -[MFMessageCriterion name]
  -[MFMessageCriterion copyWithZone:]
  -[MFMessageCriterion .cxx_destruct]
  -[MFMessageCriterion initWithDictionary:]
  -[MFMessageCriterion setName:]
  -[MFMessageCriterion dictionaryRepresentation]
  -[MFMessageCriterion setExpression:]
  -[MFMessageCriterion expression]
  -[MFMessageCriterion initWithType:qualifier:expression:]
  -[MFMessageCriterion qualifier]
  -[MFMessageCriterion setQualifier:]
  -[MFMessageCriterion libraryIdentifiers]
  -[MFMessageCriterion criteria]
  -[MFMessageCriterion setCriteria:]
  -[MFMessageCriterion simplifiedCriterion]
  -[MFMessageCriterion fixOnce]
  -[MFMessageCriterion _criterionForSQL]
  -[MFMessageCriterion setLibraryIdentifiers:]
  -[MFMessageCriterion criterionType]
  -[MFMessageCriterion isFullTextSearchableCriterion]
  -[MFMessageCriterion _evaluateFTSCriterionWithIndex:mailboxIDs:]
  -[MFMessageCriterion allCriteriaMustBeSatisfied]
  -[MFMessageCriterion _resolveWithIndex:mailboxIDs:]
  -[MFMessageCriterion setCriterionType:]
  -[MFMessageCriterion setAllCriteriaMustBeSatisfied:]
  -[MFMessageCriterion _collapsedMessageNumberCriterion:allMustBeSatisfied:collapsedIndexes:]
  -[MFMessageCriterion hasLibraryIDCriterion]
  -[MFMessageCriterion SQLExpressionWithContext:depth:]
  -[MFMessageCriterion bestBaseTable]
  -[MFMessageCriterion _addCriteriaSatisfyingPredicate:toCollector:]
  -[MFMessageCriterion includesCriterionSatisfyingPredicate:restrictive:]
  -[MFMessageCriterion criterionByApplyingTransform:]
  -[MFMessageCriterion criteriaSatisfyingPredicate:]
  -[MFMessageCriterion criterionForSQL]
  -[MFMessageCriterion SQLExpressionWithTables:baseTable:protectedDataAvailable:searchableIndex:mailboxIDs:propertyMapper:]
  -[MFMessageCriterion extractedDateCriterion]
  -[MFMessageCriterion extractedUnreadCriterion]
  -[MFMessageCriterion dateIsRelative]
  -[MFMessageCriterion dateUnits]
  -[MFMessageCriterion setDateUnits:]
  -[MFMessageCriterion setDateIsRelative:]
  -[MFMessageCriterion criterionIdentifier]
  -[MFMessageCriterion _SQLExpressionForMailboxCriterion]
  -[MFMessageCriterion expressionIsSanitized]
  -[MFMessageCriterion hasNonFullTextSearchableCriterion]
  -[MFMessageCriterion _spotlightQueryString]
  -[MFMessageCriterion _queryWithAttributes:matchingValue:qualifier:]
  -[MFMessageCriterion _queryWithAttributes:matchingValue:]
  -[MFMessageCriterion _comparisonOperationMatchingValue:qualifier:]
  -[MFMessageCriterion criteriaForSpotlightCriteria:]
  -[MFMessageCriterion _attributesForHeaderCriterion]
  -[MFMessageCriterion expressionLanguages]
  -[MFMessageCriterion _wordQueryWithAttributes:languages:expression:]
  -[MFMessageCriterion spotlightQueryString]
  -[MFMessageCriterion preferFullTextSearch]
  -[MFMessageCriterion setCriterionIdentifier:]
  -[MFMessageCriterion useFlaggedForUnreadCount]
  -[MFMessageCriterion unreadCountCriterion]
  -[MFMessageCriterion setExpressionIsSanitized:]
  -[MFMessageCriterion includeRelatedMessages]
  -[MFMessageCriterion initWithDictionary:andRemoveRecognizedKeysIfMutable:]
  -[MFMessageCriterion initWithCriterion:expression:]
  -[MFMessageCriterion messageRuleQualifierForString:]
  -[MFMessageCriterion includeRemoteBodyContent]
  -[MFMessageCriterion descriptionWithDepth:]
  -[MFMessageCriterion _qualifierString]
  -[MFMessageCriterion stringForMessageRuleQualifier:]
  -[MFMessageCriterion doesMessageSatisfyCriterion:]
  -[MFMessageCriterion _headersRequiredForEvaluation]
  -[MFMessageCriterion _evaluatePartOfStructure:]
  -[MFMessageCriterion _evaluateCompoundCriterion:]
  -[MFMessageCriterion _evaluateFlagCriterion:]
  -[MFMessageCriterion _evaluateAddressBookCriterion:]
  -[MFMessageCriterion _evaluateHeaderCriterion:]
  -[MFMessageCriterion _evaluateSenderHeaderCriterion:]
  -[MFMessageCriterion _evaluateAccountCriterion:]
  -[MFMessageCriterion _evaluateDateCriterion:]
  -[MFMessageCriterion _evaluateAddressHistoryCriterion:]
  -[MFMessageCriterion _evaluateFullNameCriterion:]
  -[MFMessageCriterion _evaluateIsDigitallySignedCriterion:]
  -[MFMessageCriterion _evaluateIsEncryptedCriterion:]
  -[MFMessageCriterion _evaluatePriorityIsNormalCriterion:]
  -[MFMessageCriterion _evaluatePriorityIsHighCriterion:]
  -[MFMessageCriterion _evaluatePriorityIsLowCriterion:]
  -[MFMessageCriterion _evaluateAttachmentCriterion:]
  -[MFMessageCriterion _evaluateConversationIDCriterion:]
  -[MFMessageCriterion _evaluateMailboxCriterion:]
  -[MFMessageCriterion simplifyOnce]
  -[MFMessageCriterion setUseFlaggedForUnreadCount:]
  -[MFMessageCriterion dateFromExpression]
  -[MFMessageCriterion isVIPCriterion]
  -[MFMessageCriterion setExpressionLanguages:]
  -[MFMessageCriterion setPreferFullTextSearch:]
  -[MFMessageCriterion setIncludeRelatedMessages:]
  -[MFMessageCriterion setIncludeRemoteBodyContent:]
  -[MFMessageCriterion daBasicSearchString]
  -[MFMessageCriterion daSearchPredicate]


_MFMessageFlags : NSObject /usr/lib/libsqlite3.dylib <NSCoding>
  // instance methods
  -[_MFMessageFlags encodeWithCoder:]
  -[_MFMessageFlags initWithCoder:]


MFMessageLibrary : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[MFMessageLibrary .cxx_destruct]
  -[MFMessageLibrary initWithPath:]
  -[MFMessageLibrary commit]
  -[MFMessageLibrary isBusy]
  -[MFMessageLibrary dataProvider]
  -[MFMessageLibrary shouldCancel]
  -[MFMessageLibrary sequenceIdentifierForMailbox:]
  -[MFMessageLibrary setSequenceIdentifier:forMailbox:]
  -[MFMessageLibrary urlForMailboxID:]
  -[MFMessageLibrary mailboxUidForMessage:]
  -[MFMessageLibrary setMessage:isPartial:]
  -[MFMessageLibrary areMessageContentsLocallyAvailable:fullContentsAvailble:]
  -[MFMessageLibrary setFlags:forMessage:]
  -[MFMessageLibrary setSummary:forMessage:]
  -[MFMessageLibrary dataPathForMessage:]
  -[MFMessageLibrary dataPathForMessage:part:]
  -[MFMessageLibrary accountForMessage:]
  -[MFMessageLibrary setFlagsFromDictionary:forMessages:]
  -[MFMessageLibrary setData:forMessage:isPartial:]
  -[MFMessageLibrary dataConsumerForMessage:part:]
  -[MFMessageLibrary messageWithLibraryID:options:inMailbox:]
  -[MFMessageLibrary fileAttributesForMessage:]
  -[MFMessageLibrary nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:]
  -[MFMessageLibrary allNonDeleteCountForMailbox:includeServerSearchResults:includeThreadSearchResults:]
  -[MFMessageLibrary messagesWithSummariesForMailbox:range:]
  -[MFMessageLibrary messagesMatchingCriterion:options:range:]
  -[MFMessageLibrary messagesWithoutSummariesForMailbox:fromRowID:limit:]
  -[MFMessageLibrary messagesMatchingCriterion:options:]
  -[MFMessageLibrary copyMessagesWithRemoteIDs:options:inRemoteMailbox:]
  -[MFMessageLibrary serverSearchResultMessagesForMailbox:]
  -[MFMessageLibrary dateOfOldestNonIndexedNonSearchResultMessageInMailbox:]
  -[MFMessageLibrary dateOfOldestNonSearchResultMessageInMailbox:]
  -[MFMessageLibrary filterContiguousMessages:forCriterion:options:]
  -[MFMessageLibrary messageWithMessageID:options:inMailbox:]
  -[MFMessageLibrary headerDataForMessage:]
  -[MFMessageLibrary bodyDataForMessage:andHeaderDataIfReadilyAvailable:]
  -[MFMessageLibrary dataForMimePart:isComplete:]
  -[MFMessageLibrary dataConsumerForMessage:part:incomplete:]
  -[MFMessageLibrary fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:]
  -[MFMessageLibrary bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:]
  -[MFMessageLibrary deleteDataForMessage:]
  -[MFMessageLibrary messagesForMailbox:olderThanNumberOfDays:]
  -[MFMessageLibrary compactMessages:]
  -[MFMessageLibrary setFlagsFromDictionary:forMessagesInMailboxURLString:]
  -[MFMessageLibrary setNumberOfAttachments:isSigned:isEncrypted:forMessage:]
  -[MFMessageLibrary compactMailbox:]
  -[MFMessageLibrary nonDeletedCountForMailbox:]
  -[MFMessageLibrary hasCompleteDataForMimePart:]
  -[MFMessageLibrary invalidateAccount:]
  -[MFMessageLibrary deleteMailboxes:account:]
  -[MFMessageLibrary deleteAccount:]
  -[MFMessageLibrary renameMailboxes:to:]
  -[MFMessageLibrary libraryIDForAccount:]
  -[MFMessageLibrary createLibraryIDForAccount:]
  -[MFMessageLibrary serverUnreadOnlyOnServerCountForMailbox:]
  -[MFMessageLibrary unreadCountForMailbox:]
  -[MFMessageLibrary unreadCountForMailbox:matchingCriterion:]
  -[MFMessageLibrary statusCountDeltaForMailbox:]
  -[MFMessageLibrary mostRecentStatusCountForMailbox:]
  -[MFMessageLibrary setMostRecentStatusCount:forMailbox:]
  -[MFMessageLibrary mailboxIDForURLString:]
  -[MFMessageLibrary loadMeetingExternalIDForMessage:]
  -[MFMessageLibrary loadMeetingDataForMessage:]
  -[MFMessageLibrary loadMeetingMetadataForMessage:]
  -[MFMessageLibrary closeDatabaseConnections]
  -[MFMessageLibrary postOldFlags:newFlags:forMessage:]
  -[MFMessageLibrary postFlagsChangedForMessages:flags:oldFlagsByMessage:]
  -[MFMessageLibrary unreadCountForAggregatedMailboxes:matchingCriterion:]
  -[MFMessageLibrary unreadCountForAggregatedMailboxes:]
  -[MFMessageLibrary nonDeletedCountForAggregatedMailboxes:includeServerSearchResults:includeThreadSearchResults:]
  -[MFMessageLibrary getDetailsForMessagesWithRemoteIDInRange:fromMailbox:]
  -[MFMessageLibrary remoteStoreForMessage:]
  -[MFMessageLibrary getDetailsForAllMessagesFromMailbox:]
  -[MFMessageLibrary dataConsumerForMessage:isPartial:]
  -[MFMessageLibrary sendMessagesMatchingCriterion:to:options:range:]
  -[MFMessageLibrary sendMessagesMatchingCriterion:to:options:]
  -[MFMessageLibrary updateThreadingInfoForMessage:fromHeaders:]
  -[MFMessageLibrary updateFlagsForMessagesInPlace:success:]
  -[MFMessageLibrary addMessages:withMailbox:newMessagesByOldMessage:remoteIDs:setFlags:addPOPUIDs:dataSectionsByMessage:generationWindow:]
  -[MFMessageLibrary updateAdditionalThreadingInfoForSentMessageWithHeaders:externalConversationID:]
  -[MFMessageLibrary messagesForMailbox:limit:]
  -[MFMessageLibrary messagesWithoutSummariesForMailbox:]
  -[MFMessageLibrary messagesWithSummariesForMailbox:fromRowID:limit:]
  -[MFMessageLibrary orderedBatchOfMessagesEndingAtRowId:limit:success:]
  -[MFMessageLibrary deletedCountForMailbox:]
  -[MFMessageLibrary attachmentCountForMailboxes:]
  -[MFMessageLibrary nonDeletedCountForAggregatedMailboxes:]
  -[MFMessageLibrary totalCountForMailbox:]
  -[MFMessageLibrary unseenCountForMailbox:]
  -[MFMessageLibrary setServerUnreadOnlyOnServerCount:forMailbox:]
  -[MFMessageLibrary setLastSyncAndMostRecentStatusCount:forMailbox:]
  -[MFMessageLibrary oldestMessageInMailbox:]
  -[MFMessageLibrary messageWithRemoteID:inRemoteMailbox:]
  -[MFMessageLibrary maximumRemoteIDForMailbox:]
  -[MFMessageLibrary canProvideMinimumRemoteID]
  -[MFMessageLibrary minimumRemoteIDForMailbox:]
  -[MFMessageLibrary sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:]
  -[MFMessageLibrary setSequenceIdentifier:forMessageWithLibraryID:]
  -[MFMessageLibrary setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:]
  -[MFMessageLibrary getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:]
  -[MFMessageLibrary messagesWithMessageIDHeader:]
  -[MFMessageLibrary messageWithLibraryID:options:inMailbox:temporarilyUnavailable:]
  -[MFMessageLibrary storedIntegerPropertyWithName:]
  -[MFMessageLibrary setStoredIntegerPropertyWithName:value:]
  -[MFMessageLibrary compactMessages:permanently:]
  -[MFMessageLibrary removeAllMessagesFromMailbox:removeMailbox:andNotify:]
  -[MFMessageLibrary messageWithMessageID:inMailbox:]
  -[MFMessageLibrary dataConsumerForMessage:]
  -[MFMessageLibrary bodyDataForMessage:]
  -[MFMessageLibrary messagesMatchingCriterion:options:range:success:]
  -[MFMessageLibrary messagesMatchingCriterion:options:success:]
  -[MFMessageLibrary deletePOPUID:inMailbox:]
  -[MFMessageLibrary UIDsToDeleteInMailbox:]
  -[MFMessageLibrary allUIDsInMailbox:]
  -[MFMessageLibrary hiddenPOPUIDsInMailbox:]
  -[MFMessageLibrary duplicateMessages:newRemoteIDs:forMailbox:setFlags:createNewCacheFiles:]
  -[MFMessageLibrary flagsChangedForMessages:flags:oldFlagsByMessage:]
  -[MFMessageLibrary duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:]
  -[MFMessageLibrary libraryExists]
  -[MFMessageLibrary lockDBForWriting]


MFBasicMessageDataSection : NSObject /usr/lib/libsqlite3.dylib <MFMessageDataSection>
 @property  BOOL partial
 @property  BOOL complete
 @property  MFDataHolder *dataHolder
 @property  NSString *partName

  // instance methods
  -[MFBasicMessageDataSection .cxx_destruct]
  -[MFBasicMessageDataSection setData:]
  -[MFBasicMessageDataSection isComplete]
  -[MFBasicMessageDataSection setComplete:]
  -[MFBasicMessageDataSection partName]
  -[MFBasicMessageDataSection setPartName:]
  -[MFBasicMessageDataSection isPartial]
  -[MFBasicMessageDataSection dataHolder]
  -[MFBasicMessageDataSection setDataHolder:]
  -[MFBasicMessageDataSection setPartial:]


MFMessageSigner : NSObject /usr/lib/libsqlite3.dylib
 @property  MFCertificateTrustInfo *signingCertificateTrustInfo
 @property  MFCertificateTrustInfo *encryptionCertificateTrustInfo
 @property  NSString *sender
 @property  MFError *error

  // instance methods
  -[MFMessageSigner .cxx_destruct]
  -[MFMessageSigner error]
  -[MFMessageSigner sender]
  -[MFMessageSigner initWithSender:signingTrust:encryptionTrust:verification:]
  -[MFMessageSigner signingCertificateTrustInfo]
  -[MFMessageSigner encryptionCertificateTrustInfo]


MFMessageWriter : NSObject /usr/lib/libsqlite3.dylib
 @property  id delegate
 @property  NSDictionary *compositionSpecification
 @property  BOOL shouldWriteAttachmentPlaceholders

  // instance methods
  -[MFMessageWriter init]
  -[MFMessageWriter delegate]
  -[MFMessageWriter setDelegate:]
  -[MFMessageWriter .cxx_destruct]
  -[MFMessageWriter setAllowsQuotedPrintable:]
  -[MFMessageWriter appendDataForMimePart:toData:withPartData:]
  -[MFMessageWriter compositionSpecification]
  -[MFMessageWriter initWithCompositionSpecification:]
  -[MFMessageWriter createMessageWithHTMLStringAndMIMECharset:plainTextAlternative:otherHtmlStringsAndAttachments:headers:]
  -[MFMessageWriter createMessageWithPlainTextDocumentsAndAttachments:headers:]
  -[MFMessageWriter createMessageWithString:headers:]
  -[MFMessageWriter createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:headers:]
  -[MFMessageWriter createMessageWithHtmlString:attachments:headers:]
  -[MFMessageWriter newDataForMimePart:withPartData:]
  -[MFMessageWriter allows8BitMimeParts]
  -[MFMessageWriter setAllows8BitMimeParts:]
  -[MFMessageWriter allowsBinaryMimeParts]
  -[MFMessageWriter setAllowsBinaryMimeParts:]
  -[MFMessageWriter allowsQuotedPrintable]
  -[MFMessageWriter setWriteSizeDispositionParameter:]
  -[MFMessageWriter setMessageClassToInstantiate:]
  -[MFMessageWriter shouldWriteAttachmentPlaceholders]
  -[MFMessageWriter setShouldWriteAttachmentPlaceholders:]


_MFOutgoingMessageBody : MFMessageBody /System/Library/Frameworks/Security.framework/Security <MFCollectingDataConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFOutgoingMessageBody init]
  -[_MFOutgoingMessageBody count]
  -[_MFOutgoingMessageBody .cxx_destruct]
  -[_MFOutgoingMessageBody data]
  -[_MFOutgoingMessageBody appendData:]
  -[_MFOutgoingMessageBody done]
  -[_MFOutgoingMessageBody rawData]
  -[_MFOutgoingMessageBody isLastCharacterNewLine]


MFOutgoingMessage : MFMailMessage
  // instance methods
  -[MFOutgoingMessage .cxx_destruct]
  -[MFOutgoingMessage messageBody]
  -[MFOutgoingMessage setMessageBody:]
  -[MFOutgoingMessage messageData]
  -[MFOutgoingMessage messageSize]
  -[MFOutgoingMessage headers]
  -[MFOutgoingMessage messageDataHolder]
  -[MFOutgoingMessage messageStore]
  -[MFOutgoingMessage headersIfAvailable]
  -[MFOutgoingMessage setMutableHeaders:]
  -[MFOutgoingMessage mutableHeaders]
  -[MFOutgoingMessage messageBodyIfAvailable]
  -[MFOutgoingMessage messageData:messageSize:isComplete:downloadIfNecessary:]
  -[MFOutgoingMessage messageDataHolder:messageSize:isComplete:downloadIfNecessary:]


MFAccountFactory_iOS : NSObject /usr/lib/libsqlite3.dylib <EDAccountFactory>
  // instance methods
  -[MFAccountFactory_iOS accountWithIdentifier:]
  -[MFAccountFactory_iOS accountWithSystemAccount:]


MFAccountLoader : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFAccountLoader accountClassForPersistentAccount:error:]
  +[MFAccountLoader _accountClassStringWithPersistentAccount:error:]
  +[MFAccountLoader _accountClassForString:error:]
  +[MFAccountLoader loadBundleForAccountClassString:error:]
  +[MFAccountLoader _bundlePathForAccountClassString:]
  +[MFAccountLoader accountWithPersistentAccount:error:]
  +[MFAccountLoader accountWithAccountTypeIdentifier:error:]


MFAccountStore : NSObject /usr/lib/libsqlite3.dylib
 @property  ACAccountStore *persistentStore

  // class methods
  +[MFAccountStore sharedAccountStore]
  +[MFAccountStore _shouldUpdateAccountsInPlace]
  +[MFAccountStore _accountWithAccountClass:persistentAccount:useExisting:]

  // instance methods
  -[MFAccountStore init]
  -[MFAccountStore dealloc]
  -[MFAccountStore .cxx_destruct]
  -[MFAccountStore persistentStore]
  -[MFAccountStore existingAccountWithPersistentAccount:]
  -[MFAccountStore newPersistentAccountWithAccountTypeIdentifier:]
  -[MFAccountStore supportedDataclassesWithAccountTypeIdentifier:]
  -[MFAccountStore savePersistentAccountWithAccount:]
  -[MFAccountStore removePersistentAccountWithAccount:]
  -[MFAccountStore accountsWithTypeIdentifiers:error:]
  -[MFAccountStore setPersistentStore:]
  -[MFAccountStore _accountsStoreChanged:]
  -[MFAccountStore _accountWithPersistentAccount:useExisting:]


_MFSatisfiedActivityCondition : NSObject /usr/lib/libsqlite3.dylib <MFActivityCondition>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL satisfied
 @property  EFObservable *conditionsObservable

  // instance methods
  -[_MFSatisfiedActivityCondition isSatisfied]
  -[_MFSatisfiedActivityCondition conditionsObservable]


MFActivityCondition : NSObject /usr/lib/libsqlite3.dylib <MFActivityConditionBuilder, MFActivityCondition>
 @property  BOOL requireExternalPower
 @property  BOOL requireWiFi
 @property  BOOL requireScreenLocked
 @property  BOOL requireLowPowerModeDisabled
 @property  float minBatteryLevel
 @property  long long maxThermalPressureLevel
 @property  BOOL satisfied
 @property  EFCancelationToken *cancellationToken
 @property  <EFScheduler> *scheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  EFObservable *conditionsObservable

  // class methods
  +[MFActivityCondition alwaysSatisfiedCondition]

  // instance methods
  -[MFActivityCondition init]
  -[MFActivityCondition dealloc]
  -[MFActivityCondition .cxx_destruct]
  -[MFActivityCondition scheduler]
  -[MFActivityCondition setScheduler:]
  -[MFActivityCondition initWithBuilder:]
  -[MFActivityCondition isSatisfied]
  -[MFActivityCondition conditionsObservable]
  -[MFActivityCondition _isValidConfiguration]
  -[MFActivityCondition setSatisfied:]
  -[MFActivityCondition requireExternalPower]
  -[MFActivityCondition minBatteryLevel]
  -[MFActivityCondition requireLowPowerModeDisabled]
  -[MFActivityCondition requireWiFi]
  -[MFActivityCondition requireScreenLocked]
  -[MFActivityCondition maxThermalPressureLevel]
  -[MFActivityCondition setRequireExternalPower:]
  -[MFActivityCondition setRequireWiFi:]
  -[MFActivityCondition setRequireScreenLocked:]
  -[MFActivityCondition setRequireLowPowerModeDisabled:]
  -[MFActivityCondition setMinBatteryLevel:]
  -[MFActivityCondition setMaxThermalPressureLevel:]
  -[MFActivityCondition cancellationToken]
  -[MFActivityCondition setCancellationToken:]


MFAppStateMonitor : NSObject /usr/lib/libsqlite3.dylib
 @property  EFObservable *appStateObservable
 @property  BOOL foreground

  // class methods
  +[MFAppStateMonitor sharedInstance]

  // instance methods
  -[MFAppStateMonitor dealloc]
  -[MFAppStateMonitor .cxx_destruct]
  -[MFAppStateMonitor isForeground]
  -[MFAppStateMonitor initWithBundleId:]
  -[MFAppStateMonitor _updateApplicationState:observer:]
  -[MFAppStateMonitor appStateObservable]


MFAttachment : NSObject /usr/lib/libsqlite3.dylib
 @property  BOOL isContainedInRFC822
 @property  BOOL isContainedInCompose
 @property  NSString *contentID
 @property  NSURL *url
 @property  MFMimePart *part
 @property  NSString *fileName
 @property  NSString *path
 @property  NSString *mimeType
 @property  NSString *disposition
 @property  NSString *remoteImageFileName
 @property  unsigned long decodedFileSize
 @property  unsigned long encodedFileSize
 @property  BOOL isDataAvailableLocally
 @property  BOOL shouldAutoDownload
 @property  NSString *inferredMimeType
 @property  NSString *fileUTType
 @property  BOOL isAutoArchive
 @property  BOOL isPlaceholder
 @property  MFAttachmentPlaceholder *placeholder
 @property  EMMailDropMetadata *mailDropMetadata
 @property  @? fetchCompletionBlock
 @property  <MFDataConsumer> *customConsumer
 @property  BOOL wantsCompletionBlockOffMainThread
 @property  BOOL isImageFile
 @property  BOOL isVideoFile
 @property  BOOL isMediaFile
 @property  BOOL isRFC822
 @property  BOOL isCalendarFile
 @property  NSString *eventID
 @property  NSString *meetingStorePersistentID
 @property  NSString *icsRepresentation
 @property  {CGSize=dd} imageDimensions

  // class methods
  +[MFAttachment isSinglePagePDF:]

  // instance methods
  -[MFAttachment isEqual:]
  -[MFAttachment .cxx_destruct]
  -[MFAttachment path]
  -[MFAttachment fileAttributes]
  -[MFAttachment url]
  -[MFAttachment fileURL]
  -[MFAttachment isPlaceholder]
  -[MFAttachment conformsToType:]
  -[MFAttachment isAvailable]
  -[MFAttachment setUrl:]
  -[MFAttachment mimeType]
  -[MFAttachment setMimeType:]
  -[MFAttachment disposition]
  -[MFAttachment setDisposition:]
  -[MFAttachment setPlaceholder:]
  -[MFAttachment placeholder]
  -[MFAttachment fetchData]
  -[MFAttachment fileName]
  -[MFAttachment setFileName:]
  -[MFAttachment isCached]
  -[MFAttachment imageDimensions]
  -[MFAttachment setImageDimensions:]
  -[MFAttachment setMetadataValue:forKey:]
  -[MFAttachment setIsPlaceholder:]
  -[MFAttachment _dataProvider]
  -[MFAttachment contentID]
  -[MFAttachment setContentID:]
  -[MFAttachment meetingStorePersistentID]
  -[MFAttachment isImageFile]
  -[MFAttachment metadataValueForKey:]
  -[MFAttachment mailDropMetadata]
  -[MFAttachment fetchPlaceholderData]
  -[MFAttachment fetchDataSynchronously:stripPrivateMetadata:]
  -[MFAttachment part]
  -[MFAttachment isMailDrop]
  -[MFAttachment isDataAvailableLocally]
  -[MFAttachment isContainedInRFC822]
  -[MFAttachment fetchLocalData:stripPrivateMetadata:]
  -[MFAttachment isContainedInCompose]
  -[MFAttachment readFromDisk]
  -[MFAttachment filterData:]
  -[MFAttachment fetchCompletionBlock]
  -[MFAttachment setFetchCompletionBlock:]
  -[MFAttachment fetchDataSynchronously:]
  -[MFAttachment fetchLocalData]
  -[MFAttachment encodedFileSize]
  -[MFAttachment contentTypeConformsToEventVCS]
  -[MFAttachment filterVCSData:]
  -[MFAttachment icsRepresentation]
  -[MFAttachment eventID]
  -[MFAttachment isVideoFile]
  -[MFAttachment fileNameByStrippingZipIfNeeded:]
  -[MFAttachment _fileUTTypeForFileName:]
  -[MFAttachment isPDFFile]
  -[MFAttachment _isSinglePagePDFFileFetchLocalData:]
  -[MFAttachment sizeOnDisk]
  -[MFAttachment decodedFileSize]
  -[MFAttachment textEncodingGuessWithData:]
  -[MFAttachment fileUTType]
  -[MFAttachment contentTypeConformsToEventICS]
  -[MFAttachment initWithURL:attachmentManager:]
  -[MFAttachment decodeFilterWithDataConsumer:]
  -[MFAttachment fetchDataToURL:]
  -[MFAttachment fileWrapperUsingFetchedLocalData]
  -[MFAttachment isMailDropPhotoArchive]
  -[MFAttachment setMailDropMetadata:]
  -[MFAttachment newDownloadProgress]
  -[MFAttachment filterICSData:]
  -[MFAttachment isCalendarFile]
  -[MFAttachment setEventID:]
  -[MFAttachment setMeetingStorePersistentID:]
  -[MFAttachment setIcsRepresentation:]
  -[MFAttachment hasCalendarMetadata]
  -[MFAttachment shouldAutoDownload]
  -[MFAttachment inferredMimeType]
  -[MFAttachment isRFC822]
  -[MFAttachment isMediaFile]
  -[MFAttachment remoteImageFileName]
  -[MFAttachment setRemoteImageFileName:]
  -[MFAttachment attachmentContentTypeForFileName:]
  -[MFAttachment isSinglePagePDFFile]
  -[MFAttachment setDecodedFileSize:]
  -[MFAttachment setEncodedFileSize:]
  -[MFAttachment writeToDiskWithData:]
  -[MFAttachment textEncodingNameForData:mimeType:]
  -[MFAttachment contentTypeConformsToVCard]
  -[MFAttachment contentTypeConformsToEvent]
  -[MFAttachment contentTypeConformsToProvisionment]
  -[MFAttachment contentTypeConformsToMarkup]
  -[MFAttachment contentTypeConformsToPassbook]
  -[MFAttachment contentTypeConformsToIWork]
  -[MFAttachment setPart:]
  -[MFAttachment isAutoArchive]
  -[MFAttachment customConsumer]
  -[MFAttachment setCustomConsumer:]
  -[MFAttachment wantsCompletionBlockOffMainThread]
  -[MFAttachment setWantsCompletionBlockOffMainThread:]


_MFAttachmentActiveRequest : NSObject /usr/lib/libsqlite3.dylib
 @property  MFAttachment *attachment
 @property  NSProgress *downloadProgress
 @property  @? fetchCompletionBlock
 @property  BOOL wantsCompletionBlockOffMainThread
 @property  long long lastProgressBytes
 @property  double lastProgressTime

  // instance methods
  -[_MFAttachmentActiveRequest .cxx_destruct]
  -[_MFAttachmentActiveRequest attachment]
  -[_MFAttachmentActiveRequest initWithAttachment:]
  -[_MFAttachmentActiveRequest lastProgressTime]
  -[_MFAttachmentActiveRequest setLastProgressTime:]
  -[_MFAttachmentActiveRequest downloadProgress]
  -[_MFAttachmentActiveRequest fetchCompletionBlock]
  -[_MFAttachmentActiveRequest wantsCompletionBlockOffMainThread]
  -[_MFAttachmentActiveRequest completeWithData:error:]
  -[_MFAttachmentActiveRequest lastProgressBytes]
  -[_MFAttachmentActiveRequest setLastProgressBytes:]


MFAttachmentCapabilities : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFAttachmentCapabilities placeholdersAvailable]
  +[MFAttachmentCapabilities currentDownloadLimit]
  +[MFAttachmentCapabilities capabilitiesDictionary]
  +[MFAttachmentCapabilities mailDropAvailableForAccount:]
  +[MFAttachmentCapabilities _mailDropLimit]
  +[MFAttachmentCapabilities mailDropAvailable]
  +[MFAttachmentCapabilities _isMailDropDevice]
  +[MFAttachmentCapabilities mailDropConfigured]
  +[MFAttachmentCapabilities mailDropPreferences]
  +[MFAttachmentCapabilities currentUploadLimit]
  +[MFAttachmentCapabilities currentMessageLimit]
  +[MFAttachmentCapabilities mailDropThreshold]
  +[MFAttachmentCapabilities currentPlaceholderThreshold]
  +[MFAttachmentCapabilities currentUploadLimitForAccount:]
  +[MFAttachmentCapabilities mailDropExpiration]
  +[MFAttachmentCapabilities mailDropWhitelistedDownloadDomains]


MFAttachmentComposeManager : MFAttachmentManager
  // instance methods
  -[MFAttachmentComposeManager init]
  -[MFAttachmentComposeManager .cxx_destruct]
  -[MFAttachmentComposeManager _callProgressBlockForAttachmentURL:withBytes:expectedSize:]
  -[MFAttachmentComposeManager _fetchInvocationCallUsingBlock:]
  -[MFAttachmentComposeManager _queueForAttachment:]
  -[MFAttachmentComposeManager attachmentForCID:]
  -[MFAttachmentComposeManager attachmentForData:mimeType:fileName:contentID:context:]
  -[MFAttachmentComposeManager _composeAttachmentDataProviderForContext:]
  -[MFAttachmentComposeManager _fetchDataForAttachment:withProvider:request:syncLock:]
  -[MFAttachmentComposeManager attachmentsForContext:]
  -[MFAttachmentComposeManager loadAttachmentURL:forContextID:]
  -[MFAttachmentComposeManager updateAttachment:withNewData:]
  -[MFAttachmentComposeManager removeAttachmentForURL:]
  -[MFAttachmentComposeManager recordPasteboardAttachmentsForURLs:forContextID:]
  -[MFAttachmentComposeManager recordUndoAttachmentsForURLs:forContextID:]


MFAttachmentCompositionContext : NSObject /usr/lib/libsqlite3.dylib
 @property  NSString *contextID
 @property  NSURL *attachmentsBaseURL
 @property  MFAttachmentManager *attachmentsManager
 @property  NSArray *attachments

  // instance methods
  -[MFAttachmentCompositionContext init]
  -[MFAttachmentCompositionContext dealloc]
  -[MFAttachmentCompositionContext .cxx_destruct]
  -[MFAttachmentCompositionContext attachments]
  -[MFAttachmentCompositionContext contextID]
  -[MFAttachmentCompositionContext initWithContextID:]
  -[MFAttachmentCompositionContext attachmentsManager]
  -[MFAttachmentCompositionContext attachmentsBaseURL]
  -[MFAttachmentCompositionContext setHostIdentifier:forAttachment:]
  -[MFAttachmentCompositionContext attachmentForHostIdentifier:]
  -[MFAttachmentCompositionContext setAttachmentsBaseURL:]
  -[MFAttachmentCompositionContext setAttachmentsManager:]


MFAttachmentDataProvider : NSObject /usr/lib/libsqlite3.dylib
 @property  NSURL *url

  // class methods
  +[MFAttachmentDataProvider dataProviderWithURL:]
  +[MFAttachmentDataProvider dataProviderWithPath:]

  // instance methods
  -[MFAttachmentDataProvider initWithURL:]
  -[MFAttachmentDataProvider .cxx_destruct]
  -[MFAttachmentDataProvider data]
  -[MFAttachmentDataProvider url]
  -[MFAttachmentDataProvider _path]
  -[MFAttachmentDataProvider save:]
  -[MFAttachmentDataProvider setUrl:]
  -[MFAttachmentDataProvider exists]
  -[MFAttachmentDataProvider _isFileURL]
  -[MFAttachmentDataProvider _fileAttributes:]
  -[MFAttachmentDataProvider errorWithMessage:code:]


MFAttachmentLibraryDataProvider : NSObject /usr/lib/libsqlite3.dylib <MFAttachmentDataProviderProtocol>
 @property  MFMessageLibrary *messageLibrary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFAttachmentLibraryDataProvider .cxx_destruct]
  -[MFAttachmentLibraryDataProvider initWithLibrary:]
  -[MFAttachmentLibraryDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFAttachmentLibraryDataProvider messageForAttachment:]
  -[MFAttachmentLibraryDataProvider setMessageLibrary:]
  -[MFAttachmentLibraryDataProvider messageLibrary]
  -[MFAttachmentLibraryDataProvider fetchLocalDataForAttachment:]
  -[MFAttachmentLibraryDataProvider storageLocationForAttachment:withMessage:]


MFAttachmentLibraryManager : MFAttachmentComposeManager
  // instance methods
  -[MFAttachmentLibraryManager _dataProviderForAttachmentURL:error:]
  -[MFAttachmentLibraryManager removeProviderForBaseURL:]
  -[MFAttachmentLibraryManager _messageAttachmentStorageLocationsDidChangeNotification:]
  -[MFAttachmentLibraryManager initWithPrimaryLibrary:]
  -[MFAttachmentLibraryManager attachmentsForMessage:withSchemes:]


MFAttachmentManager : NSObject /usr/lib/libsqlite3.dylib <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFAttachmentManager defaultManager]
  +[MFAttachmentManager log]
  +[MFAttachmentManager allManagers]
  +[MFAttachmentManager supportedDocumentUTIs]

  // instance methods
  -[MFAttachmentManager init]
  -[MFAttachmentManager .cxx_destruct]
  -[MFAttachmentManager removeProvider:]
  -[MFAttachmentManager addProvider:forBaseURL:]
  -[MFAttachmentManager metadataForAttachment:forKey:]
  -[MFAttachmentManager setMetadataForAttachment:toValue:forKey:]
  -[MFAttachmentManager fetchDataForAttachment:]
  -[MFAttachmentManager fetchDataSynchronouslyForAttachment:]
  -[MFAttachmentManager _dataProviderForAttachmentURL:error:]
  -[MFAttachmentManager _filePathForAttachment:]
  -[MFAttachmentManager _contentIDForAttachment:]
  -[MFAttachmentManager setContentID:forAttachment:]
  -[MFAttachmentManager compressionQueue]
  -[MFAttachmentManager _fetchCompletedForAttachment:error:]
  -[MFAttachmentManager attachmentForURL:error:]
  -[MFAttachmentManager attachmentForContentID:preferredSchemes:]
  -[MFAttachmentManager attachmentForCID:]
  -[MFAttachmentManager attachmentForData:mimeType:fileName:contentID:context:]
  -[MFAttachmentManager _fetchDataForAttachment:withProvider:request:syncLock:]
  -[MFAttachmentManager attachmentsForContext:]
  -[MFAttachmentManager loadAttachmentURL:forContextID:]
  -[MFAttachmentManager updateAttachment:withNewData:]
  -[MFAttachmentManager removeAttachmentForURL:]
  -[MFAttachmentManager recordPasteboardAttachmentsForURLs:forContextID:]
  -[MFAttachmentManager recordUndoAttachmentsForURLs:forContextID:]
  -[MFAttachmentManager clearMetadataForAttachment:]
  -[MFAttachmentManager removeProviderForBaseURL:]
  -[MFAttachmentManager attachmentForContentID:]
  -[MFAttachmentManager attachmentForURL:withMimeBody:error:]
  -[MFAttachmentManager _setupAttachment:withMimeBody:error:]
  -[MFAttachmentManager _cancelFetchForAttachment:]
  -[MFAttachmentManager imageScalingQueue]
  -[MFAttachmentManager attachmentsForURLs:error:]
  -[MFAttachmentManager attachmentForTextAttachment:error:]


MFAttachmentPlaceholder : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFAttachmentPlaceholder placeholder]
  +[MFAttachmentPlaceholder isPlaceholderSerializedRepresentation:]
  +[MFAttachmentPlaceholder placeholderFromSerializedRepresentation:]
  +[MFAttachmentPlaceholder dataForPlaceholder:]
  +[MFAttachmentPlaceholder placeholderDirectory]
  +[MFAttachmentPlaceholder writeData:forURL:]
  +[MFAttachmentPlaceholder _placeholderMagic]
  +[MFAttachmentPlaceholder removePlaceholderForFileURL:]
  +[MFAttachmentPlaceholder _localStoreURLForFileData:contentID:]
  +[MFAttachmentPlaceholder hasPlaceholderRepresentation:]
  +[MFAttachmentPlaceholder placeholderRepresentations:]
  +[MFAttachmentPlaceholder cloneFileAtURL:toPlaceholderURL:]
  +[MFAttachmentPlaceholder setFileProtectionForFileAt:error:]
  +[MFAttachmentPlaceholder removePlaceholder:]
  +[MFAttachmentPlaceholder serializedPlaceholderForFileName:fileSize:mimeType:contentID:]

  // instance methods
  -[MFAttachmentPlaceholder init]
  -[MFAttachmentPlaceholder .cxx_destruct]
  -[MFAttachmentPlaceholder fileSize]
  -[MFAttachmentPlaceholder serializedRepresentation]
  -[MFAttachmentPlaceholder fileURL]
  -[MFAttachmentPlaceholder mimeType]
  -[MFAttachmentPlaceholder setMimeType:]
  -[MFAttachmentPlaceholder setFileSize:]
  -[MFAttachmentPlaceholder fileName]
  -[MFAttachmentPlaceholder setFileName:]
  -[MFAttachmentPlaceholder contentID]
  -[MFAttachmentPlaceholder setContentID:]
  -[MFAttachmentPlaceholder fileURLString]
  -[MFAttachmentPlaceholder useMailDrop]
  -[MFAttachmentPlaceholder _setJSONDictionary:]
  -[MFAttachmentPlaceholder setFileURLString:]
  -[MFAttachmentPlaceholder setUseMailDrop:]


MFAttachmentRaw : NSObject /usr/lib/libsqlite3.dylib
 @property  NSData *data
 @property  NSString *fileName
 @property  NSString *mimeType
 @property  NSString *contentID

  // class methods
  +[MFAttachmentRaw attachmentData:fileName:mimeType:contentID:]
  +[MFAttachmentRaw attachmentData:fileName:mimeType:]

  // instance methods
  -[MFAttachmentRaw .cxx_destruct]
  -[MFAttachmentRaw data]
  -[MFAttachmentRaw setData:]
  -[MFAttachmentRaw mimeType]
  -[MFAttachmentRaw setMimeType:]
  -[MFAttachmentRaw fileName]
  -[MFAttachmentRaw setFileName:]
  -[MFAttachmentRaw contentID]
  -[MFAttachmentRaw setContentID:]


MFAttachmentUtilities : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFAttachmentUtilities temporaryDirectory]
  +[MFAttachmentUtilities writeData:toTemporaryFileURLWithFileName:]
  +[MFAttachmentUtilities _temporaryDirectoryUniqueURL]
  +[MFAttachmentUtilities temporaryFileURLWithExtension:]
  +[MFAttachmentUtilities mimeTypeForFileName:]


MFAttachmentBundle : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFAttachmentBundle isFileBundleURL:]
  +[MFAttachmentBundle _stripBundlePath:entryPath:]
  +[MFAttachmentBundle dataForFileBundleURL:]


MFAttachmentSecurityScope : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFAttachmentSecurityScope securityScopedURL:withToken:]
  +[MFAttachmentSecurityScope securityScopedURL:]

  // instance methods
  -[MFAttachmentSecurityScope dealloc]
  -[MFAttachmentSecurityScope .cxx_destruct]
  -[MFAttachmentSecurityScope data]
  -[MFAttachmentSecurityScope isReadable]
  -[MFAttachmentSecurityScope isBundle]
  -[MFAttachmentSecurityScope initWithSecurityScopedURL:withToken:]
  -[MFAttachmentSecurityScope stopAccess]
  -[MFAttachmentSecurityScope _attachSecurityScope]
  -[MFAttachmentSecurityScope _temporaryReadURL:error:]
  -[MFAttachmentSecurityScope _removeTemporaryReadURL]
  -[MFAttachmentSecurityScope securityScopeToken]
  -[MFAttachmentSecurityScope startReadAccess]
  -[MFAttachmentSecurityScope startWriteAccess]


MFCertificateTrustInfo : NSObject /usr/lib/libsqlite3.dylib
 @property  unsigned long certificateType
 @property  NSString *sender
 @property  ECSecureMIMETrustEvaluation *trustEvaluation
 @property  ^{__SecTrust=} trust

  // instance methods
  -[MFCertificateTrustInfo dealloc]
  -[MFCertificateTrustInfo .cxx_destruct]
  -[MFCertificateTrustInfo trust]
  -[MFCertificateTrustInfo sender]
  -[MFCertificateTrustInfo initWithCertificateType:trust:sender:]
  -[MFCertificateTrustInfo trustEvaluation]
  -[MFCertificateTrustInfo certificateType]


MFCertificateTrustInfoEMCertificateTrustInformationTransformer : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFCertificateTrustInfoEMCertificateTrustInformationTransformer certificateTrustInformationFromMFCertificateTrustInfo:]


MFCertificateTrustInformationKeychainManager : NSObject /usr/lib/libsqlite3.dylib <EFLoggable>
 @property  EMCertificateTrustInformation *trustInformation
 @property  CertUITrustManager *keychainManager
 @property  int action
 @property  BOOL hasTrustException
 @property  unsigned long keychainStatus
 @property  BOOL canSaveCertificateToKeychain
 @property  NSString *addressForSaving
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFCertificateTrustInformationKeychainManager log]

  // instance methods
  -[MFCertificateTrustInformationKeychainManager .cxx_destruct]
  -[MFCertificateTrustInformationKeychainManager action]
  -[MFCertificateTrustInformationKeychainManager keychainManager]
  -[MFCertificateTrustInformationKeychainManager trustInformation]
  -[MFCertificateTrustInformationKeychainManager addressForSaving]
  -[MFCertificateTrustInformationKeychainManager canSaveCertificateToKeychain]
  -[MFCertificateTrustInformationKeychainManager initWithTrustInformation:]
  -[MFCertificateTrustInformationKeychainManager hasTrustException]
  -[MFCertificateTrustInformationKeychainManager addTrustException]
  -[MFCertificateTrustInformationKeychainManager removeTrustException]
  -[MFCertificateTrustInformationKeychainManager saveCertificateToKeychain]
  -[MFCertificateTrustInformationKeychainManager removeCertificateFromKeychain]
  -[MFCertificateTrustInformationKeychainManager keychainStatus]


MFComposeAttachmentDataProvider : NSObject /usr/lib/libsqlite3.dylib <MFAttachmentDataProviderProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFComposeAttachmentDataProvider .cxx_destruct]
  -[MFComposeAttachmentDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFComposeAttachmentDataProvider rawDataForContentID:]
  -[MFComposeAttachmentDataProvider messageForAttachment:]
  -[MFComposeAttachmentDataProvider addData:forContentID:]
  -[MFComposeAttachmentDataProvider initWithData:forContentID:]
  -[MFComposeAttachmentDataProvider removeDataForAttachment:]
  -[MFComposeAttachmentDataProvider recordPasteboardDataForAttachments:]
  -[MFComposeAttachmentDataProvider recordUndoDataForAttachments:]
  -[MFComposeAttachmentDataProvider fetchLocalDataForAttachment:]
  -[MFComposeAttachmentDataProvider storageLocationForAttachment:withMessage:]
  -[MFComposeAttachmentDataProvider dataForContentID:]
  -[MFComposeAttachmentDataProvider _dataForAttachment:]


MFContentErrorDocument : NSObject /usr/lib/libsqlite3.dylib
 @property  NSError *error
 @property  NSString *content

  // instance methods
  -[MFContentErrorDocument .cxx_destruct]
  -[MFContentErrorDocument error]
  -[MFContentErrorDocument content]
  -[MFContentErrorDocument initWithMimePart:]


MFDAFolderChangeConsumer : NSObject /usr/lib/libsqlite3.dylib <DAFolderChangeConsumer>
  // instance methods
  -[MFDAFolderChangeConsumer init]
  -[MFDAFolderChangeConsumer .cxx_destruct]
  -[MFDAFolderChangeConsumer waitForResult]
  -[MFDAFolderChangeConsumer folderChange:finishedWithStatus:error:]


MFDAFolderChangeResult : NSObject /usr/lib/libsqlite3.dylib
 @property  long long statusCode
 @property  NSError *error
 @property  NSString *folderID
 @property  NSString *folderName

  // instance methods
  -[MFDAFolderChangeResult .cxx_destruct]
  -[MFDAFolderChangeResult error]
  -[MFDAFolderChangeResult statusCode]
  -[MFDAFolderChangeResult folderID]
  -[MFDAFolderChangeResult wasSuccessful]
  -[MFDAFolderChangeResult folderName]
  -[MFDAFolderChangeResult initWithStatusCode:error:folderID:folderName:]


MFDAMailAccountSyncConsumer : MFDAMailAccountConsumer <DAMailboxRequestConsumer, DAMailboxStreamingContentConsumer>
 @property  NSString *tag
 @property  <DAMailboxStreamingContentConsumer> *streamConsumer
 @property  BOOL moreAvailable

  // instance methods
  -[MFDAMailAccountSyncConsumer .cxx_destruct]
  -[MFDAMailAccountSyncConsumer reset]
  -[MFDAMailAccountSyncConsumer tag]
  -[MFDAMailAccountSyncConsumer setTag:]
  -[MFDAMailAccountSyncConsumer accountHierarchyChanged:]
  -[MFDAMailAccountSyncConsumer initWithCurrentTag:accountID:requests:]
  -[MFDAMailAccountSyncConsumer moreAvailable]
  -[MFDAMailAccountSyncConsumer taskFailed:statusCode:error:]
  -[MFDAMailAccountSyncConsumer actionsConsumer]
  -[MFDAMailAccountSyncConsumer originalThreadMonitor]
  -[MFDAMailAccountSyncConsumer handleSyncResponses:]
  -[MFDAMailAccountSyncConsumer setStreamConsumer:]
  -[MFDAMailAccountSyncConsumer streamConsumer]
  -[MFDAMailAccountSyncConsumer shouldBeginStreamingForMailMessage:format:]
  -[MFDAMailAccountSyncConsumer consumeData:length:format:mailMessage:]
  -[MFDAMailAccountSyncConsumer didEndStreamingForMailMessage:]
  -[MFDAMailAccountSyncConsumer refreshFolderHierarchyAndWait:]
  -[MFDAMailAccountSyncConsumer resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:sentBytesCount:receivedBytesCount:]
  -[MFDAMailAccountSyncConsumer partialResultsForMailbox:actions:responses:percentComplete:moreAvailable:]


MFDAMessage : MFMailMessage
 @property  DAMailMessage *DAMailMessage

  // instance methods
  -[MFDAMessage .cxx_destruct]
  -[MFDAMessage messageBody]
  -[MFDAMessage messageSize]
  -[MFDAMessage headers]
  -[MFDAMessage mailbox]
  -[MFDAMessage DAMailMessage]
  -[MFDAMessage remoteID]
  -[MFDAMessage messageFlags]
  -[MFDAMessage headersIfAvailable]
  -[MFDAMessage remoteMailboxURL]
  -[MFDAMessage externalConversationID]
  -[MFDAMessage messageData:messageSize:isComplete:downloadIfNecessary:]
  -[MFDAMessage messageDataHolder:messageSize:isComplete:downloadIfNecessary:]
  -[MFDAMessage initWithDAMailMessage:mailbox:]


MFDAMessageContentConsumer : NSObject /usr/lib/libsqlite3.dylib <MFDAStreamingContentConsumer>
 @property  int requestedFormat
 @property  <MFCollectingDataConsumer> *dataConsumer
 @property  <MFCollectingDataConsumer> *alternatePartConsumer
 @property  <MFMessageDataConsumerFactory> *consumerFactory
 @property  DAMailMessage *message
 @property  NSMutableData *bodyData
 @property  double timeOfLastActivity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFDAMessageContentConsumer .cxx_destruct]
  -[MFDAMessageContentConsumer data]
  -[MFDAMessageContentConsumer dataConsumer]
  -[MFDAMessageContentConsumer message]
  -[MFDAMessageContentConsumer bodyData]
  -[MFDAMessageContentConsumer succeeded]
  -[MFDAMessageContentConsumer setDataConsumer:]
  -[MFDAMessageContentConsumer shouldBeginStreamingForMailMessage:format:]
  -[MFDAMessageContentConsumer consumeData:length:format:mailMessage:]
  -[MFDAMessageContentConsumer didEndStreamingForMailMessage:]
  -[MFDAMessageContentConsumer consumerFactory]
  -[MFDAMessageContentConsumer dataConsumerForPart:]
  -[MFDAMessageContentConsumer setAlternatePartConsumer:]
  -[MFDAMessageContentConsumer alternatePartConsumer]
  -[MFDAMessageContentConsumer didBeginStreaming]
  -[MFDAMessageContentConsumer timeOfLastActivity]
  -[MFDAMessageContentConsumer setConsumerFactory:]
  -[MFDAMessageContentConsumer requestedFormat]
  -[MFDAMessageContentConsumer setRequestedFormat:]


MFDAMessageStore : MFLibraryStore
 @property  BOOL backedByVirtualAllSearchMailbox

  // instance methods
  -[MFDAMessageStore .cxx_destruct]
  -[MFDAMessageStore folderIDForFetching]
  -[MFDAMessageStore replayFlagChange:forRemoteIDs:error:completed:]
  -[MFDAMessageStore initWithMailboxUid:readOnly:]
  -[MFDAMessageStore fetchWindow]
  -[MFDAMessageStore shouldGrowFetchWindow]
  -[MFDAMessageStore _fetchDataForMimePart:range:isComplete:consumer:]
  -[MFDAMessageStore _fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:]
  -[MFDAMessageStore copyOfAllMessagesForBodyLoadingFromRowID:limit:]
  -[MFDAMessageStore growFetchWindow]
  -[MFDAMessageStore bodyFetchRequiresNetworkActivity]
  -[MFDAMessageStore deleteMessagesOlderThanNumberOfDays:compact:]
  -[MFDAMessageStore setFlagsForAllMessagesFromDictionary:]
  -[MFDAMessageStore allowsAppend]
  -[MFDAMessageStore purgeMessagesBeyondLimit:keepingMessage:]
  -[MFDAMessageStore loadMeetingExternalIDForMessage:]
  -[MFDAMessageStore loadMeetingDataForMessage:]
  -[MFDAMessageStore loadMeetingMetadataForMessage:]
  -[MFDAMessageStore hasMoreFetchableMessages]
  -[MFDAMessageStore fetchNumMessages:preservingUID:options:]
  -[MFDAMessageStore canFetchSearchResults]
  -[MFDAMessageStore fetchMessagesMatchingCriterion:limit:]
  -[MFDAMessageStore storeSearchResultMatchingSearchText:criterion:limit:offset:error:]
  -[MFDAMessageStore messageForRemoteID:]
  -[MFDAMessageStore messageForRemoteID:inMailbox:]
  -[MFDAMessageStore shouldDownloadBodyDataForMessage:]
  -[MFDAMessageStore backedByVirtualAllSearchMailbox]
  -[MFDAMessageStore _remoteIDsMatchingSearchText:predicate:limit:offset:filterByDate:handler:]
  -[MFDAMessageStore _fetchBodyDataForSearchResult:folderID:format:streamConsumer:]
  -[MFDAMessageStore _fetchBodyDataForNormalMessage:format:part:streamConsumer:]
  -[MFDAMessageStore defaultAlternativeForPart:]
  -[MFDAMessageStore bestAlternativeForPart:]
  -[MFDAMessageStore wantsLineEndingConversionForMIMEPart:]
  -[MFDAMessageStore fetchBodyDataForRemoteID:]
  -[MFDAMessageStore _downloadHeadersForMessages:]
  -[MFDAMessageStore messageCanBeTriaged:]
  -[MFDAMessageStore setBackedByVirtualAllSearchMailbox:]


_MFDAMessageStoreGetUpdatesRequest : DAMailboxGetUpdatesRequest /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress <MFDAMailAccountRequest>
 @property  BOOL shouldSend
 @property  BOOL isUserRequested

  // instance methods
  -[_MFDAMessageStoreGetUpdatesRequest isUserRequested]
  -[_MFDAMessageStoreGetUpdatesRequest shouldSend]
  -[_MFDAMessageStoreGetUpdatesRequest generationNumber]
  -[_MFDAMessageStoreGetUpdatesRequest mf_alwaysReportFailures]
  -[_MFDAMessageStoreGetUpdatesRequest initRequestForBodyFormat:withBodySizeLimit:isUserRequested:]
  -[_MFDAMessageStoreGetUpdatesRequest deferredOperation]


_MFDAMessageStoreSetFlagsRequest : DAMailboxSetFlagsRequest /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress <MFDAMailAccountRequest>
 @property  BOOL shouldSend
 @property  BOOL isUserRequested

  // instance methods
  -[_MFDAMessageStoreSetFlagsRequest isUserRequested]
  -[_MFDAMessageStoreSetFlagsRequest shouldSend]
  -[_MFDAMessageStoreSetFlagsRequest generationNumber]


_MFDAMessageStoreDeleteRequest : DAMailboxDeleteMessageRequest /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress <MFDAMailAccountRequest>
 @property  BOOL shouldSend
 @property  BOOL isUserRequested

  // instance methods
  -[_MFDAMessageStoreDeleteRequest isUserRequested]
  -[_MFDAMessageStoreDeleteRequest shouldSend]
  -[_MFDAMessageStoreDeleteRequest generationNumber]


_MFDAMessageStoreFetchHeadersRequest : DAMailboxFetchMessageRequest /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress <MFDAMailAccountRequest>
 @property  BOOL shouldSend
 @property  BOOL isUserRequested

  // instance methods
  -[_MFDAMessageStoreFetchHeadersRequest isEqual:]
  -[_MFDAMessageStoreFetchHeadersRequest .cxx_destruct]
  -[_MFDAMessageStoreFetchHeadersRequest isUserRequested]
  -[_MFDAMessageStoreFetchHeadersRequest shouldSend]
  -[_MFDAMessageStoreFetchHeadersRequest generationNumber]
  -[_MFDAMessageStoreFetchHeadersRequest deferredOperation]


_MFDAMessageStoreFetchRequest : DAMailboxFetchMessageRequest /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress <MFDAMailAccountRequest>
 @property  BOOL shouldSend
 @property  BOOL isUserRequested

  // instance methods
  -[_MFDAMessageStoreFetchRequest isEqual:]
  -[_MFDAMessageStoreFetchRequest .cxx_destruct]
  -[_MFDAMessageStoreFetchRequest isUserRequested]
  -[_MFDAMessageStoreFetchRequest shouldSend]
  -[_MFDAMessageStoreFetchRequest generationNumber]
  -[_MFDAMessageStoreFetchRequest deferredOperation]


_MFDAMessageStoreFetchUsingRemoteIDRequest : DAMailboxFetchMessageRequest /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress <MFDAMailAccountRequest>
 @property  BOOL shouldSend
 @property  BOOL isUserRequested

  // instance methods
  -[_MFDAMessageStoreFetchUsingRemoteIDRequest isUserRequested]
  -[_MFDAMessageStoreFetchUsingRemoteIDRequest shouldSend]
  -[_MFDAMessageStoreFetchUsingRemoteIDRequest generationNumber]


_MFDAMSBasicConsumer : MFBufferedQueue
 @property  MFActivityMonitor *monitor
 @property  MFError *error

  // instance methods
  -[_MFDAMSBasicConsumer dealloc]
  -[_MFDAMSBasicConsumer .cxx_destruct]
  -[_MFDAMSBasicConsumer error]
  -[_MFDAMSBasicConsumer setError:]
  -[_MFDAMSBasicConsumer monitor]
  -[_MFDAMSBasicConsumer setMonitor:]
  -[_MFDAMSBasicConsumer initWithMaximumSize:latency:]


_MFDAMSUpdateConsumer : _MFDAMSBasicConsumer <MFDASyncActionsConsumer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFDAMSUpdateConsumer handleItems:]
  -[_MFDAMSUpdateConsumer handleResponse:error:]
  -[_MFDAMSUpdateConsumer drainMailbox]
  -[_MFDAMSUpdateConsumer receiveSyncActions:]
  -[_MFDAMSUpdateConsumer commitSyncActions]


_MFDAMSSearchResponseConsumer : _MFDAMSBasicConsumer <DASearchQueryConsumer>
 @property  NSDate *latestDateToAdd
 @property  NSDate *earliestDateAdded
 @property  MFMailMessageStoreSearchResult *searchResult

  // instance methods
  -[_MFDAMSSearchResponseConsumer .cxx_destruct]
  -[_MFDAMSSearchResponseConsumer searchResult]
  -[_MFDAMSSearchResponseConsumer searchQuery:returnedResults:]
  -[_MFDAMSSearchResponseConsumer searchQuery:finishedWithError:]
  -[_MFDAMSSearchResponseConsumer searchQuery:returnedTotalCount:]
  -[_MFDAMSSearchResponseConsumer initWithMaximumSize:latency:]
  -[_MFDAMSSearchResponseConsumer handleItems:]
  -[_MFDAMSSearchResponseConsumer waitUntilDone]
  -[_MFDAMSSearchResponseConsumer waitUntilDoneBeforeDate:]
  -[_MFDAMSSearchResponseConsumer setLatestDateToAdd:]
  -[_MFDAMSSearchResponseConsumer resetDoneCondition]
  -[_MFDAMSSearchResponseConsumer latestDateToAdd]
  -[_MFDAMSSearchResponseConsumer earliestDateAdded]


_MFDAMessageHeaderFetchConsumer : NSObject /usr/lib/libsqlite3.dylib <MFDASyncResponseConsumer>
 @property  BOOL succeeded
 @property  MFError *error
 @property  NSData *data
 @property  MFDAMessageStore *store
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFDAMessageHeaderFetchConsumer .cxx_destruct]
  -[_MFDAMessageHeaderFetchConsumer data]
  -[_MFDAMessageHeaderFetchConsumer error]
  -[_MFDAMessageHeaderFetchConsumer setData:]
  -[_MFDAMessageHeaderFetchConsumer setError:]
  -[_MFDAMessageHeaderFetchConsumer store]
  -[_MFDAMessageHeaderFetchConsumer setStore:]
  -[_MFDAMessageHeaderFetchConsumer succeeded]
  -[_MFDAMessageHeaderFetchConsumer handleResponse:error:]
  -[_MFDAMessageHeaderFetchConsumer wantsData]


_MFDAMessageBodyFetchConsumer : NSObject /usr/lib/libsqlite3.dylib <MFRequestQueueResponseConsumer, DAMailAccountStreamConsumerFactory>
 @property  <MFDAStreamingContentConsumer> *streamConsumer
 @property  BOOL succeeded
 @property  MFError *error
 @property  NSData *data
 @property  BOOL hasLocalCopyOfData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFDAMessageBodyFetchConsumer .cxx_destruct]
  -[_MFDAMessageBodyFetchConsumer data]
  -[_MFDAMessageBodyFetchConsumer error]
  -[_MFDAMessageBodyFetchConsumer setData:]
  -[_MFDAMessageBodyFetchConsumer setError:]
  -[_MFDAMessageBodyFetchConsumer succeeded]
  -[_MFDAMessageBodyFetchConsumer handleResponse:error:]
  -[_MFDAMessageBodyFetchConsumer setStreamConsumer:]
  -[_MFDAMessageBodyFetchConsumer streamingContentConsumer]
  -[_MFDAMessageBodyFetchConsumer streamConsumer]
  -[_MFDAMessageBodyFetchConsumer hasLocalCopyOfData]
  -[_MFDAMessageBodyFetchConsumer wantsData]
  -[_MFDAMessageBodyFetchConsumer setHasLocalCopyOfData:]


_MFDALibraryConsumerFactory : NSObject /usr/lib/libsqlite3.dylib <MFMessageDataConsumerFactory>
 @property  MFMessageLibrary *library
 @property  MFMessage *message
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFDALibraryConsumerFactory .cxx_destruct]
  -[_MFDALibraryConsumerFactory message]
  -[_MFDALibraryConsumerFactory setMessage:]
  -[_MFDALibraryConsumerFactory library]
  -[_MFDALibraryConsumerFactory setLibrary:]
  -[_MFDALibraryConsumerFactory dataConsumerForPart:]


_MFDAMessageFetchAttachmentConsumer : MFDAMailAccountConsumer <DAMessageFetchAttachmentConsumer>
 @property  MFProgressFilterDataConsumer *progressFilter
 @property  unsigned long expectedLength
 @property  BOOL dataWasBase64
 @property  BOOL fetchSucceeded

  // instance methods
  -[_MFDAMessageFetchAttachmentConsumer .cxx_destruct]
  -[_MFDAMessageFetchAttachmentConsumer setExpectedLength:]
  -[_MFDAMessageFetchAttachmentConsumer expectedLength]
  -[_MFDAMessageFetchAttachmentConsumer initWithActivityMonitor:]
  -[_MFDAMessageFetchAttachmentConsumer setProgressFilter:]
  -[_MFDAMessageFetchAttachmentConsumer fetchSucceeded]
  -[_MFDAMessageFetchAttachmentConsumer dataWasBase64]
  -[_MFDAMessageFetchAttachmentConsumer progressFilter]
  -[_MFDAMessageFetchAttachmentConsumer consumeData:ofContentType:forAttachmentNamed:ofMessageWithServerID:]
  -[_MFDAMessageFetchAttachmentConsumer attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:sentBytesCount:receivedBytesCount:]


_MFDAMessageStoreSearchResultBodyConsumer : NSObject /usr/lib/libsqlite3.dylib <DAMailboxFetchSearchResultConsumer, DAMailboxStreamingContentConsumer>
 @property  MFError *error
 @property  <MFDAStreamingContentConsumer> *streamConsumer

  // instance methods
  -[_MFDAMessageStoreSearchResultBodyConsumer init]
  -[_MFDAMessageStoreSearchResultBodyConsumer .cxx_destruct]
  -[_MFDAMessageStoreSearchResultBodyConsumer error]
  -[_MFDAMessageStoreSearchResultBodyConsumer setError:]
  -[_MFDAMessageStoreSearchResultBodyConsumer actionFailed:forTask:error:]
  -[_MFDAMessageStoreSearchResultBodyConsumer waitUntilDone]
  -[_MFDAMessageStoreSearchResultBodyConsumer waitUntilDoneBeforeDate:]
  -[_MFDAMessageStoreSearchResultBodyConsumer setStreamConsumer:]
  -[_MFDAMessageStoreSearchResultBodyConsumer streamConsumer]
  -[_MFDAMessageStoreSearchResultBodyConsumer shouldBeginStreamingForMailMessage:format:]
  -[_MFDAMessageStoreSearchResultBodyConsumer consumeData:length:format:mailMessage:]
  -[_MFDAMessageStoreSearchResultBodyConsumer didEndStreamingForMailMessage:]
  -[_MFDAMessageStoreSearchResultBodyConsumer searchResultFetchedWithResponses:]


MFDADraftMessage : DAMailMessage /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress
  // instance methods
  -[MFDADraftMessage .cxx_destruct]
  -[MFDADraftMessage date]
  -[MFDADraftMessage to]
  -[MFDADraftMessage from]
  -[MFDADraftMessage subject]
  -[MFDADraftMessage body]
  -[MFDADraftMessage setClientID:]
  -[MFDADraftMessage clientID]
  -[MFDADraftMessage serverID]
  -[MFDADraftMessage cc]
  -[MFDADraftMessage bcc]
  -[MFDADraftMessage messageIDHeader]
  -[MFDADraftMessage initWithMailMessage:clientID:]
  -[MFDADraftMessage replyTo]
  -[MFDADraftMessage bodyType]


MFDAMessageStoreSaveDraftRequest : DADraftMessageRequest /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress <MFDAMailAccountRequest>
 @property  BOOL shouldSend
 @property  BOOL isUserRequested

  // instance methods
  -[MFDAMessageStoreSaveDraftRequest .cxx_destruct]
  -[MFDAMessageStoreSaveDraftRequest isUserRequested]
  -[MFDAMessageStoreSaveDraftRequest shouldSend]
  -[MFDAMessageStoreSaveDraftRequest generationNumber]
  -[MFDAMessageStoreSaveDraftRequest initWithMessage:mailbox:]


MFDAMoveResponseConsumer : MFDAMailAccountConsumer <DAMessageMoveRequestConsumer>
 @property  MFError *error

  // instance methods
  -[MFDAMoveResponseConsumer .cxx_destruct]
  -[MFDAMoveResponseConsumer error]
  -[MFDAMoveResponseConsumer setError:]
  -[MFDAMoveResponseConsumer taskFailed:statusCode:error:]
  -[MFDAMoveResponseConsumer resultsForMessageMove:]
  -[MFDAMoveResponseConsumer initWithSourceRemoteIDs:destinationRemoteIDsBySourceRemoteIDs:failures:]


MFDAStoreDraftConsumer : NSObject /usr/lib/libsqlite3.dylib <MFDASyncResponseConsumer>
 @property  NSString *serverId
 @property  MFError *error
 @property  BOOL success
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFDAStoreDraftConsumer .cxx_destruct]
  -[MFDAStoreDraftConsumer error]
  -[MFDAStoreDraftConsumer success]
  -[MFDAStoreDraftConsumer handleResponse:error:]
  -[MFDAStoreDraftConsumer serverId]


MFDATransferActionReplayer : ECTransferActionReplayer /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon <ECTransferActionReplayerSubclassMethods>
 @property  MFDAMessageStore *store
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFDATransferActionReplayer .cxx_destruct]
  -[MFDATransferActionReplayer store]
  -[MFDATransferActionReplayer setStore:]
  -[MFDATransferActionReplayer replayActionUsingStore:]
  -[MFDATransferActionReplayer isRecoverableError:]
  -[MFDATransferActionReplayer fetchBodyDataForRemoteID:mailboxURL:]
  -[MFDATransferActionReplayer downloadFailed]
  -[MFDATransferActionReplayer copyItems:destinationMailboxURL:]
  -[MFDATransferActionReplayer moveItems:destinationMailboxURL:]
  -[MFDATransferActionReplayer appendItem:mailboxURL:]
  -[MFDATransferActionReplayer deleteSourceMessagesFromTransferItems:]


MFDbJournal : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFDbJournal initialize]
  +[MFDbJournal legacyJournal]
  +[MFDbJournal _journalForMailbox:]
  +[MFDbJournal mergeAllJournalsUsingConnection:]

  // instance methods
  -[MFDbJournal dealloc]
  -[MFDbJournal .cxx_destruct]
  -[MFDbJournal initWithMailbox:]
  -[MFDbJournal mergeUsingConnection:]
  -[MFDbJournal _processJournalFile:connection:]
  -[MFDbJournal _markMailboxForReconciliation:connection:]


MFDecryptedAttachmentDataProvider : NSObject /usr/lib/libsqlite3.dylib <MFAttachmentDataProviderProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFDecryptedAttachmentDataProvider .cxx_destruct]
  -[MFDecryptedAttachmentDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFDecryptedAttachmentDataProvider messageForAttachment:]
  -[MFDecryptedAttachmentDataProvider fetchLocalDataForAttachment:]
  -[MFDecryptedAttachmentDataProvider storageLocationForAttachment:withMessage:]
  -[MFDecryptedAttachmentDataProvider initWithDecryptedMessage:]


MFDeliveryResult : NSObject /usr/lib/libsqlite3.dylib
 @property  long long status
 @property  double duration
 @property  unsigned long bytesSent
 @property  BOOL isWifi
 @property  long long attributes

  // instance methods
  -[MFDeliveryResult attributes]
  -[MFDeliveryResult setAttributes:]
  -[MFDeliveryResult status]
  -[MFDeliveryResult duration]
  -[MFDeliveryResult setStatus:]
  -[MFDeliveryResult setDuration:]
  -[MFDeliveryResult initWithStatus:]
  -[MFDeliveryResult setBytesSent:]
  -[MFDeliveryResult bytesSent]
  -[MFDeliveryResult isWifi]
  -[MFDeliveryResult setIsWifi:]


MFError : NSError /System/Library/PrivateFrameworks/GraphicsServices.framework/GraphicsServices
  // class methods
  +[MFError errorWithDomain:code:localizedDescription:title:userInfo:]
  +[MFError errorWithDomain:code:localizedDescription:]
  +[MFError errorWithException:]

  // instance methods
  -[MFError localizedDescription]
  -[MFError userInfo]
  -[MFError initWithDomain:code:userInfo:]
  -[MFError .cxx_destruct]
  -[MFError recoveryAttempter]
  -[MFError setUserInfoObject:forKey:]
  -[MFError setLocalizedDescription:]
  -[MFError setShortDescription:]
  -[MFError mf_moreInfo]
  -[MFError mf_shortDescription]
  -[MFError setMoreInfo:]
  -[MFError useGenericDescription:]


MFFakeAccountsProvider : NSObject /usr/lib/libsqlite3.dylib <MFAccountsProvider, EDAccountsProvider>
 @property  NSArray *mailAccounts
 @property  NSArray *orderedAccounts
 @property  NSSet *displayedAccounts
 @property  NSSet *autofetchAccounts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL displayingMultipleAccounts
 @property  NSArray *receivingAddresses

  // instance methods
  -[MFFakeAccountsProvider .cxx_destruct]
  -[MFFakeAccountsProvider mailAccounts]
  -[MFFakeAccountsProvider setMailAccounts:]
  -[MFFakeAccountsProvider displayedAccounts]
  -[MFFakeAccountsProvider orderedAccounts]
  -[MFFakeAccountsProvider autofetchAccounts]
  -[MFFakeAccountsProvider isDisplayingMultipleAccounts]
  -[MFFakeAccountsProvider receivingAddresses]
  -[MFFakeAccountsProvider setOrderedAccounts:]
  -[MFFakeAccountsProvider setDisplayedAccounts:]
  -[MFFakeAccountsProvider setAutofetchAccounts:]


MFFakeLibraryMessage : MFLibraryMessage
  // class methods
  +[MFFakeLibraryMessage messageWithRFC822Data:mailboxUid:library:account:]
  +[MFFakeLibraryMessage messageWithRFC822Data:mailboxUid:library:]

  // instance methods
  -[MFFakeLibraryMessage .cxx_destruct]
  -[MFFakeLibraryMessage account]
  -[MFFakeLibraryMessage library]
  -[MFFakeLibraryMessage mailbox]
  -[MFFakeLibraryMessage initWithMailboxUid:library:account:]


MFFakeMailAccount : MailAccount
 @property  DeliveryAccount *deliveryAccount
 @property  BOOL managed

  // instance methods
  -[MFFakeMailAccount init]
  -[MFFakeMailAccount invalidate]
  -[MFFakeMailAccount initWithURL:]
  -[MFFakeMailAccount .cxx_destruct]
  -[MFFakeMailAccount isActive]
  -[MFFakeMailAccount uniqueID]
  -[MFFakeMailAccount displayName]
  -[MFFakeMailAccount hostname]
  -[MFFakeMailAccount username]
  -[MFFakeMailAccount cachePolicy]
  -[MFFakeMailAccount isManaged]
  -[MFFakeMailAccount setManaged:]
  -[MFFakeMailAccount deliveryAccount]
  -[MFFakeMailAccount setDeliveryAccount:]
  -[MFFakeMailAccount _URLScheme]
  -[MFFakeMailAccount storeClass]
  -[MFFakeMailAccount supportsRemoteAppend]
  -[MFFakeMailAccount shouldFetchAgainWithError:foregroundRequest:]
  -[MFFakeMailAccount _shouldConfigureMailboxCache]
  -[MFFakeMailAccount _mailboxPathPrefix]
  -[MFFakeMailAccount willPerformActionForChokePoint:coalescePoint:result:]
  -[MFFakeMailAccount didFinishActionForChokePoint:coalescePoint:withResult:]
  -[MFFakeMailAccount powerAssertionIdentifierWithPrefix:]
  -[MFFakeMailAccount supportsFastRemoteBodySearch]
  -[MFFakeMailAccount initWithURL:rootMailboxUid:]
  -[MFFakeMailAccount setUnreadCount:forMailbox:]
  -[MFFakeMailAccount _nameForMailboxUid:]
  -[MFFakeMailAccount minID]
  -[MFFakeMailAccount setCachedConnection:]
  -[MFFakeMailAccount connectionForStore:delegate:options:]
  -[MFFakeMailAccount flagChangesForMailboxPath:UID:connectTime:]


MFFakeMailboxUid : MFMailboxUid
 @property  NSString *fakeFullPath
 @property  NSString *fakeURLString
 @property  BOOL fakeIsSpecialMailboxUid
 @property  long long fakeMailboxID
 @property  NSString *displayName

  // instance methods
  -[MFFakeMailboxUid .cxx_destruct]
  -[MFFakeMailboxUid URL]
  -[MFFakeMailboxUid displayName]
  -[MFFakeMailboxUid store]
  -[MFFakeMailboxUid setDisplayName:]
  -[MFFakeMailboxUid fullPath]
  -[MFFakeMailboxUid URLString]
  -[MFFakeMailboxUid mailboxID]
  -[MFFakeMailboxUid isStore]
  -[MFFakeMailboxUid isSpecialMailboxUid]
  -[MFFakeMailboxUid initWithAccount:URLString:fullPath:isSpecial:]
  -[MFFakeMailboxUid initWithAccount:URLString:fullPath:isSpecial:mailboxID:]
  -[MFFakeMailboxUid setFakeURLString:]
  -[MFFakeMailboxUid setFakeFullPath:]
  -[MFFakeMailboxUid setFakeIsSpecialMailboxUid:]
  -[MFFakeMailboxUid setFakeMailboxID:]
  -[MFFakeMailboxUid fakeMailboxID]
  -[MFFakeMailboxUid fakeURLString]
  -[MFFakeMailboxUid fakeFullPath]
  -[MFFakeMailboxUid fakeIsSpecialMailboxUid]
  -[MFFakeMailboxUid initWithAccount:URLString:fullPath:]


MFFakeMailMessage : MFMailMessage
 @property  MFMessageHeaders *fakeHeaders
 @property  MFMessageHeaders *headers
 @property  MailAccount *account
 @property  MFMailboxUid *mailbox

  // instance methods
  -[MFFakeMailMessage init]
  -[MFFakeMailMessage .cxx_destruct]
  -[MFFakeMailMessage account]
  -[MFFakeMailMessage setAccount:]
  -[MFFakeMailMessage persistentID]
  -[MFFakeMailMessage setHeaders:]
  -[MFFakeMailMessage headers]
  -[MFFakeMailMessage mailbox]
  -[MFFakeMailMessage setMailbox:]
  -[MFFakeMailMessage mailboxID]
  -[MFFakeMailMessage fakeHeaders]
  -[MFFakeMailMessage setFakeHeaders:]


MFFetchLimits : NSObject /usr/lib/libsqlite3.dylib
 @property  unsigned long fetchMinBytes
 @property  unsigned long fetchMaxBytes
 @property  unsigned long minBytesLeft

  // instance methods
  -[MFFetchLimits init]
  -[MFFetchLimits setFetchMaxBytes:]
  -[MFFetchLimits fetchMaxBytes]
  -[MFFetchLimits fetchMinBytes]
  -[MFFetchLimits setFetchMinBytes:]
  -[MFFetchLimits minBytesLeft]
  -[MFFetchLimits setMinBytesLeft:]


MFFile : NSObject /usr/lib/libsqlite3.dylib <EFLoggable>
 @property  NSURL *url
 @property  BOOL isPurgeable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFFile log]

  // instance methods
  -[MFFile .cxx_destruct]
  -[MFFile url]
  -[MFFile setUrl:]
  -[MFFile initWithFile:account:]
  -[MFFile _isPurgeableAccount:]
  -[MFFile markPurgeableWithError:]
  -[MFFile isPurgeable]
  -[MFFile setIsPurgeable:]


MFFileArchive : NSObject /usr/lib/libsqlite3.dylib
 @property  NSData *inputData
 @property  {_NSRange=QQ} inputRange
 @property  NSMutableData *outputData
 @property  @? readerBlock
 @property  @? writerBlock

  // class methods
  +[MFFileArchive archive]

  // instance methods
  -[MFFileArchive init]
  -[MFFileArchive dealloc]
  -[MFFileArchive .cxx_destruct]
  -[MFFileArchive outputData]
  -[MFFileArchive inputRange]
  -[MFFileArchive setInputRange:]
  -[MFFileArchive inputData]
  -[MFFileArchive compressContents:completion:]
  -[MFFileArchive unregisterBlocks]
  -[MFFileArchive readerBlock]
  -[MFFileArchive writerBlock]
  -[MFFileArchive _compressionArchive]
  -[MFFileArchive _compressContents:withArchive:error:]
  -[MFFileArchive _errorForArchiveStatus:]
  -[MFFileArchive _compressContents:error:]
  -[MFFileArchive _archiveDirectoryName:withArchive:error:]
  -[MFFileArchive _compressContents:fileName:withArchive:error:]
  -[MFFileArchive _compressionCompleteForArchive:error:]
  -[MFFileArchive _compressionArchiveEntryWithName:length:isDirectory:]
  -[MFFileArchive _decompressionArchive]
  -[MFFileArchive _decompressArchive:intoArchiveDirectory:error:]
  -[MFFileArchive _decompressionCompleteForArchive:error:]
  -[MFFileArchive _decompressContents:inMemoryWithError:mainEntry:]
  -[MFFileArchive registerBlocks:writer:]
  -[MFFileArchive compressFolder:error:]
  -[MFFileArchive _compressWithArchive:error:]
  -[MFFileArchive decompressContents:completion:]
  -[MFFileArchive setInputData:]
  -[MFFileArchive setOutputData:]
  -[MFFileArchive setReaderBlock:]
  -[MFFileArchive setWriterBlock:]


MFFileArchiveDirectory : NSObject /usr/lib/libsqlite3.dylib
 @property  NSURL *url
 @property  NSData *contents
 @property  NSError *error

  // class methods
  +[MFFileArchiveDirectory archiveDirectory]
  +[MFFileArchiveDirectory rangeOfCentralDirectoryInData:]
  +[MFFileArchiveDirectory _rangeOfCentralDirectory:]
  +[MFFileArchiveDirectory _centralDirectory:]
  +[MFFileArchiveDirectory _entriesFromCentralDictionary:inData:archiveData:]
  +[MFFileArchiveDirectory _centralHeader:]
  +[MFFileArchiveDirectory _hasZipSignature:]

  // instance methods
  -[MFFileArchiveDirectory .cxx_destruct]
  -[MFFileArchiveDirectory error]
  -[MFFileArchiveDirectory contents]
  -[MFFileArchiveDirectory url]
  -[MFFileArchiveDirectory setUrl:]
  -[MFFileArchiveDirectory setContents:]
  -[MFFileArchiveDirectory inputWithURL:]
  -[MFFileArchiveDirectory setArchiveEntry:]
  -[MFFileArchiveDirectory archiveEntries]
  -[MFFileArchiveDirectory inputWithData:]
  -[MFFileArchiveDirectory _scrubContentDirectory]
  -[MFFileArchiveDirectory mainEntry]
  -[MFFileArchiveDirectory setMainEntry:]
  -[MFFileArchiveDirectory scrubbedArchiveEntries]


MFFileArchiveEntry : NSObject /usr/lib/libsqlite3.dylib
 @property  NSString *path
 @property  long long uncompressedSize
 @property  {_NSRange=QQ} compressedRange
 @property  BOOL isDeflated
 @property  BOOL isDirectory
 @property  NSData *contents

  // class methods
  +[MFFileArchiveEntry archiveEntryWithCentralHeader:archiveData:]
  +[MFFileArchiveEntry archiveEntry]

  // instance methods
  -[MFFileArchiveEntry .cxx_destruct]
  -[MFFileArchiveEntry contents]
  -[MFFileArchiveEntry path]
  -[MFFileArchiveEntry isDirectory]
  -[MFFileArchiveEntry setPath:]
  -[MFFileArchiveEntry merge:]
  -[MFFileArchiveEntry setContents:]
  -[MFFileArchiveEntry uncompressedSize]
  -[MFFileArchiveEntry compressedSize]
  -[MFFileArchiveEntry setUncompressedSize:]
  -[MFFileArchiveEntry fileName]
  -[MFFileArchiveEntry setIsDirectory:]
  -[MFFileArchiveEntry initWithContents:path:]
  -[MFFileArchiveEntry initWithDirectoryPath:]
  -[MFFileArchiveEntry setIsDeflated:]
  -[MFFileArchiveEntry setCompressedRange:]
  -[MFFileArchiveEntry compressedRange]
  -[MFFileArchiveEntry isDeflated]


MFFileCompressionQueue : NSObject /usr/lib/libsqlite3.dylib <EFLoggable>
 @property  NSMutableArray *fileCompressionQueue
 @property  {os_unfair_lock_s=I} fileCompressionQueueLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFFileCompressionQueue sharedInstance]
  +[MFFileCompressionQueue log]

  // instance methods
  -[MFFileCompressionQueue init]
  -[MFFileCompressionQueue .cxx_destruct]
  -[MFFileCompressionQueue size]
  -[MFFileCompressionQueue addFile:]
  -[MFFileCompressionQueue hasNext]
  -[MFFileCompressionQueue nextFile]
  -[MFFileCompressionQueue fileCompressionQueue]
  -[MFFileCompressionQueue setFileCompressionQueue:]
  -[MFFileCompressionQueue fileCompressionQueueLock]
  -[MFFileCompressionQueue setFileCompressionQueueLock:]


MFFileCompressionQueueActivityManager : NSObject /usr/lib/libsqlite3.dylib <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFFileCompressionQueueActivityManager log]
  +[MFFileCompressionQueueActivityManager _registerXPCActivity]
  +[MFFileCompressionQueueActivityManager scheduleActivityIfNeeded]
  +[MFFileCompressionQueueActivityManager _unregisterXPCActivity]
  +[MFFileCompressionQueueActivityManager compressFilesInQueue:shouldDefer:]
  +[MFFileCompressionQueueActivityManager unregisterXPCActivity]


MFLocalActionPersistence_iOS : EDLocalActionPersistence /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation
 @property  MFMailMessageLibrary *library

  // instance methods
  -[MFLocalActionPersistence_iOS .cxx_destruct]
  -[MFLocalActionPersistence_iOS library]
  -[MFLocalActionPersistence_iOS initWithDatabase:]
  -[MFLocalActionPersistence_iOS setLibrary:]
  -[MFLocalActionPersistence_iOS moveSupportedFromMailboxURL:toURL:]
  -[MFLocalActionPersistence_iOS initWithDatabase:gmailLabelPersistence:]
  -[MFLocalActionPersistence_iOS initWithLibrary:database:]
  -[MFLocalActionPersistence_iOS messageForDatabaseID:]
  -[MFLocalActionPersistence_iOS mailboxURLForDatabaseID:]
  -[MFLocalActionPersistence_iOS mailboxDatabaseIDForURL:]
  -[MFLocalActionPersistence_iOS labelNameForLabelID:]
  -[MFLocalActionPersistence_iOS handledFailedCopyForMessages:]


MFLocalActionReplayHandler : NSObject /usr/lib/libsqlite3.dylib <EFLoggable>
 @property  MFMailMessageLibrary *library
 @property  EDMessageChangeManager *messageChangeManager
 @property  EDLocalActionPersistence *localActionPersistence
 @property  MailAccount *account
 @property  NSMutableArray *actionsToReplay
 @property  <EFScheduler> *replayScheduler
 @property  BOOL needToCheckForNewActions
 @property  BOOL replayingActions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFLocalActionReplayHandler log]

  // instance methods
  -[MFLocalActionReplayHandler .cxx_destruct]
  -[MFLocalActionReplayHandler account]
  -[MFLocalActionReplayHandler setAccount:]
  -[MFLocalActionReplayHandler library]
  -[MFLocalActionReplayHandler connectionEstablished]
  -[MFLocalActionReplayHandler setLibrary:]
  -[MFLocalActionReplayHandler messageChangeManager]
  -[MFLocalActionReplayHandler initWithLibrary:account:]
  -[MFLocalActionReplayHandler newActionsAdded]
  -[MFLocalActionReplayHandler addNewAction:]
  -[MFLocalActionReplayHandler localActionPersistence]
  -[MFLocalActionReplayHandler actionsToReplay]
  -[MFLocalActionReplayHandler replayingActions]
  -[MFLocalActionReplayHandler setNeedToCheckForNewActions:]
  -[MFLocalActionReplayHandler _replayAllActions]
  -[MFLocalActionReplayHandler setReplayingActions:]
  -[MFLocalActionReplayHandler replayScheduler]
  -[MFLocalActionReplayHandler _checkForNewActions]
  -[MFLocalActionReplayHandler needToCheckForNewActions]
  -[MFLocalActionReplayHandler setMessageChangeManager:]
  -[MFLocalActionReplayHandler setLocalActionPersistence:]
  -[MFLocalActionReplayHandler setActionsToReplay:]


MFLocalizedMessageHeaders : MFMessageHeaders /System/Library/Frameworks/Security.framework/Security
  // class methods
  +[MFLocalizedMessageHeaders localizedHeaders]
  +[MFLocalizedMessageHeaders localizedHeadersFromEnglishHeaders:]
  +[MFLocalizedMessageHeaders englishHeadersFromLocalizedHeaders:]

  // instance methods
  -[MFLocalizedMessageHeaders markupString]
  -[MFLocalizedMessageHeaders copyFormattedHeaderValueFromAddressList:]
  -[MFLocalizedMessageHeaders appendHeaderMarkupForKey:value:toString:]


MFLockStateMonitor : NSObject /usr/lib/libsqlite3.dylib
 @property  EFObservable *lockStateObservable
 @property  BOOL locked

  // class methods
  +[MFLockStateMonitor sharedInstance]

  // instance methods
  -[MFLockStateMonitor init]
  -[MFLockStateMonitor dealloc]
  -[MFLockStateMonitor .cxx_destruct]
  -[MFLockStateMonitor isLocked]
  -[MFLockStateMonitor lockStateObservable]
  -[MFLockStateMonitor _receiveLockState:]


MFMailboxPersistence_iOS : EDMailboxPersistence /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation
 @property  EDPersistenceDatabase *database
 @property  MFMailMessageLibrary *library
 @property  MFMailboxProvider *mailboxProvider

  // instance methods
  -[MFMailboxPersistence_iOS .cxx_destruct]
  -[MFMailboxPersistence_iOS database]
  -[MFMailboxPersistence_iOS library]
  -[MFMailboxPersistence_iOS deleteMailbox:]
  -[MFMailboxPersistence_iOS renameMailbox:newName:]
  -[MFMailboxPersistence_iOS mailboxDatabaseIDsForMailboxObjectIDs:]
  -[MFMailboxPersistence_iOS initWithMailboxProvider:database:library:]
  -[MFMailboxPersistence_iOS createMailbox:parentMailboxID:]
  -[MFMailboxPersistence_iOS moveMailbox:newParentMailboxID:]
  -[MFMailboxPersistence_iOS serverCountsForMailboxScope:block:]


MFMailboxProvider : NSObject /usr/lib/libsqlite3.dylib <EFLoggable, EDMailboxProvider>
 @property  <EDAccountsProvider> *accountsProvider
 @property  MFMailboxUidTransformer *mailboxUidTransformer
 @property  NSMapTable *uidToMailboxMap
 @property  NSMapTable *objectIDToUidMap
 @property  NSArray *allMailboxCache
 @property  NSObject<OS_dispatch_queue> *mailboxCacheQueue
 @property  <EFScheduler> *observerScheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <EDMailboxProviderDelegate> *delegate

  // class methods
  +[MFMailboxProvider log]

  // instance methods
  -[MFMailboxProvider delegate]
  -[MFMailboxProvider setDelegate:]
  -[MFMailboxProvider .cxx_destruct]
  -[MFMailboxProvider _invalidateCache]
  -[MFMailboxProvider observerScheduler]
  -[MFMailboxProvider accountsProvider]
  -[MFMailboxProvider legacyMailboxForObjectID:]
  -[MFMailboxProvider _mailboxInvalidated:]
  -[MFMailboxProvider _willReloadMailboxList:]
  -[MFMailboxProvider _didReloadMailboxList:]
  -[MFMailboxProvider _didChangeMailboxList:]
  -[MFMailboxProvider _willFetchMailboxList:]
  -[MFMailboxProvider _didFetchMailboxList:]
  -[MFMailboxProvider _beginDeferringInvalidation]
  -[MFMailboxProvider enumerateAccountsWithBlock:]
  -[MFMailboxProvider setUidToMailboxMap:]
  -[MFMailboxProvider setObjectIDToUidMap:]
  -[MFMailboxProvider setAllMailboxCache:]
  -[MFMailboxProvider _endDeferringInvalidation]
  -[MFMailboxProvider allMailboxCache]
  -[MFMailboxProvider _populateCache]
  -[MFMailboxProvider mailboxesFromLegacyMailboxes:]
  -[MFMailboxProvider uidToMailboxMap]
  -[MFMailboxProvider mailboxFromLegacyMailbox:]
  -[MFMailboxProvider legacyMailboxesForObjectIDs:]
  -[MFMailboxProvider objectIDToUidMap]
  -[MFMailboxProvider _isDeferringInvalidation]
  -[MFMailboxProvider allMailboxes]
  -[MFMailboxProvider mailboxForObjectID:]
  -[MFMailboxProvider mailboxObjectIDsForMailboxType:]
  -[MFMailboxProvider mailboxTypeForMailboxObjectID:]
  -[MFMailboxProvider fetchMailboxes]
  -[MFMailboxProvider initWithAccountsProvider:]
  -[MFMailboxProvider invalidateMailboxes]
  -[MFMailboxProvider setAccountsProvider:]
  -[MFMailboxProvider mailboxUidTransformer]
  -[MFMailboxProvider setMailboxUidTransformer:]
  -[MFMailboxProvider mailboxCacheQueue]
  -[MFMailboxProvider setObserverScheduler:]


MFMailboxUidTransformer : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFMailboxUidTransformer isMailbox:equalTo:uidToMailboxMap:]

  // instance methods
  -[MFMailboxUidTransformer init]
  -[MFMailboxUidTransformer transformMailboxUid:uidToMailboxMap:objectIDToUidMap:]


MFMailDropAttachmentDataProvider : MFAttachmentLibraryDataProvider <EFLoggable, NSURLSessionDownloadDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailDropAttachmentDataProvider log]

  // instance methods
  -[MFMailDropAttachmentDataProvider .cxx_destruct]
  -[MFMailDropAttachmentDataProvider URLSession:task:didCompleteWithError:]
  -[MFMailDropAttachmentDataProvider URLSession:downloadTask:didFinishDownloadingToURL:]
  -[MFMailDropAttachmentDataProvider URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[MFMailDropAttachmentDataProvider URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:]
  -[MFMailDropAttachmentDataProvider initWithLibrary:]
  -[MFMailDropAttachmentDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFMailDropAttachmentDataProvider _defaultDownloadSessionForAttachment:]


MFMailDropAttachmentPreviewDataProvider : MFAttachmentLibraryDataProvider
  // class methods
  +[MFMailDropAttachmentPreviewDataProvider fullResolutionStorageLocationForAttachmentWithMimePart:withMessage:]
  +[MFMailDropAttachmentPreviewDataProvider fullResolutionAttachmentURLForAttachmentURL:]
  +[MFMailDropAttachmentPreviewDataProvider fullResolutionAttachmentForAttachment:]

  // instance methods
  -[MFMailDropAttachmentPreviewDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFMailDropAttachmentPreviewDataProvider storageLocationForAttachment:withMessage:]


MFMailDropMailDelivery : MFOutgoingMessageDelivery
 @property  NSArray *attachments
 @property  EMMailDropMetadata *imageArchiveMetadata
 @property  long long mailDropState

  // class methods
  +[MFMailDropMailDelivery _mailDropZone]

  // instance methods
  -[MFMailDropMailDelivery .cxx_destruct]
  -[MFMailDropMailDelivery attachments]
  -[MFMailDropMailDelivery setAttachments:]
  -[MFMailDropMailDelivery _attachmentManager]
  -[MFMailDropMailDelivery _processAttachments]
  -[MFMailDropMailDelivery deliverSynchronouslyWithCompletion:]
  -[MFMailDropMailDelivery ckDatabase]
  -[MFMailDropMailDelivery _uploadAttachmentsViaCloudKit:zone:records:zippedPhotos:attachmentRecords:images:]
  -[MFMailDropMailDelivery scaledImages:]
  -[MFMailDropMailDelivery _recordZoneIDInDatabase:completionHandler:]
  -[MFMailDropMailDelivery updateMessageWithAttachmentsSynchronously]
  -[MFMailDropMailDelivery imageArchiveMetadata]
  -[MFMailDropMailDelivery setImageArchiveMetadata:]
  -[MFMailDropMailDelivery publishRecord:database:attachmentRecords:images:allowsCellularAccess:]
  -[MFMailDropMailDelivery mailDropState]
  -[MFMailDropMailDelivery setMailDropState:]


MFMailDropMailParser : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFMailDropMailParser parseURL:intoMetadata:]
  +[MFMailDropMailParser parseExpiration:]
  +[MFMailDropMailParser _domainIsWhitelisted:]
  +[MFMailDropMailParser _parseWrappedURL:intoMetadata:]
  +[MFMailDropMailParser _parseDirectURL:intoMetadata:]
  +[MFMailDropMailParser _parseURLQuery:]
  +[MFMailDropMailParser parseHeaderValue:forField:]


MFMailMessageLibraryAddJournaledConversationIDDateReceivedUpgradeStep : NSObject /usr/lib/libsqlite3.dylib <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibraryAddJournaledConversationIDDateReceivedUpgradeStep runWithConnection:]


MFMailMessageLibraryAddSearchableIndexTablesUpgradeStep : NSObject /usr/lib/libsqlite3.dylib <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibraryAddSearchableIndexTablesUpgradeStep runWithConnection:]


MFMailMessageLibraryAdoptSharedSchemaMigrationStep : NSObject /usr/lib/libsqlite3.dylib
 @property  EDPersistenceDatabaseConnection *connection
 @property  NSString *protectedDatabaseName
 @property  EFSQLSchema *schema
 @property  EFSQLSchema *protectedSchema

  // class methods
  +[MFMailMessageLibraryAdoptSharedSchemaMigrationStep cleanUpAfterMigrationWithConnection:]

  // instance methods
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep .cxx_destruct]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep connection]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep setConnection:]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep schema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep protectedSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _messagesTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _recipientsTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _messageReferencesTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _conversationsTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _conversationIDMessageIDTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _spotlightMessageReindexTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _mailboxesTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _propertiesTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _messageDataTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _messageDataDeletedTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _popUIDsTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _accountsTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _spotlightTombstonesTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _addressesTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _subjectsTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _summariesTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _protectedMessageDataTableSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _initializeOldProtectedSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _transformSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _transformProtectedSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _createTemporaryTables]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _migrateData]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _dropTemporaryTables]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _createIndexes]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _cleanupOldSchema]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep protectedDatabaseName]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _migrateNonMessages]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _migrateSubjects]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _migrateSummaries]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _migrateSendersAndRecipients]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep _migrateMessages]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep initWithSQLiteConnection:protectedDatabaseName:]
  -[MFMailMessageLibraryAdoptSharedSchemaMigrationStep performMigrationStep]


MFMailMessageLibraryFixPopUidsUniquenessConstraintUpgradeStep : NSObject /usr/lib/libsqlite3.dylib <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibraryFixPopUidsUniquenessConstraintUpgradeStep runWithConnection:]
  +[MFMailMessageLibraryFixPopUidsUniquenessConstraintUpgradeStep _popUIDsTableSchema]


MFMailMessageLibraryLocalActionsTablesMigrationStep : NSObject /usr/lib/libsqlite3.dylib
 @property  EDPersistenceDatabaseConnection *connection

  // class methods
  +[MFMailMessageLibraryLocalActionsTablesMigrationStep log]

  // instance methods
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep .cxx_destruct]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep connection]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep setConnection:]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep performMigrationStep]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _serverMessagesTableDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _serverMessagesMessageIndexDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _serverLabelsTableDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _localMessageActionsTableDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _localMessageActionsMailboxRowIDIndexDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _actionMessagesTableDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _actionMessagesActionIndexDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _actionMessagesMessageIndexDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _actionMessagesDestinationMessageIndexDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _actionLabelsTableDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _actionLabelsActionIndexDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _actionLabelsLabelIndexDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _actionFlagsTableDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _actionFlagsActionIndexDefinition]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _populateServerMessages]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep _offlineCacheOperations]
  -[MFMailMessageLibraryLocalActionsTablesMigrationStep initWithSQLiteConnection:]


_MFOfflineCacheOperation : NSObject /usr/lib/libsqlite3.dylib <NSSecureCoding>
  // class methods
  +[_MFOfflineCacheOperation supportsSecureCoding]

  // instance methods
  -[_MFOfflineCacheOperation encodeWithCoder:]
  -[_MFOfflineCacheOperation initWithCoder:]
  -[_MFOfflineCacheOperation translateToLocalActionWithConnection:]
  -[_MFOfflineCacheOperation databaseID:andMailbox:forMessageWithRemoteID:connection:]


_MFDADeferredSetFlagsOperation : _MFOfflineCacheOperation
  // class methods
  +[_MFDADeferredSetFlagsOperation supportsSecureCoding]
  +[_MFDADeferredSetFlagsOperation log]

  // instance methods
  -[_MFDADeferredSetFlagsOperation encodeWithCoder:]
  -[_MFDADeferredSetFlagsOperation initWithCoder:]
  -[_MFDADeferredSetFlagsOperation .cxx_destruct]
  -[_MFDADeferredSetFlagsOperation translateToLocalActionWithConnection:]


_MFDADeferredDeleteMessageOperation : _MFOfflineCacheOperation
  // class methods
  +[_MFDADeferredDeleteMessageOperation supportsSecureCoding]
  +[_MFDADeferredDeleteMessageOperation log]

  // instance methods
  -[_MFDADeferredDeleteMessageOperation encodeWithCoder:]
  -[_MFDADeferredDeleteMessageOperation initWithCoder:]
  -[_MFDADeferredDeleteMessageOperation .cxx_destruct]
  -[_MFDADeferredDeleteMessageOperation translateToLocalActionWithConnection:]


MFDADeferredMessageMoveOperation : _MFOfflineCacheOperation
  // class methods
  +[MFDADeferredMessageMoveOperation supportsSecureCoding]
  +[MFDADeferredMessageMoveOperation log]

  // instance methods
  -[MFDADeferredMessageMoveOperation encodeWithCoder:]
  -[MFDADeferredMessageMoveOperation initWithCoder:]
  -[MFDADeferredMessageMoveOperation .cxx_destruct]
  -[MFDADeferredMessageMoveOperation translateToLocalActionWithConnection:]


MFDADeferredStoreDraftOperation : _MFOfflineCacheOperation
  // class methods
  +[MFDADeferredStoreDraftOperation supportsSecureCoding]
  +[MFDADeferredStoreDraftOperation log]

  // instance methods
  -[MFDADeferredStoreDraftOperation encodeWithCoder:]
  -[MFDADeferredStoreDraftOperation initWithCoder:]
  -[MFDADeferredStoreDraftOperation .cxx_destruct]
  -[MFDADeferredStoreDraftOperation translateToLocalActionWithConnection:]
  -[MFDADeferredStoreDraftOperation initWithMessageIDHeader:mailbox:]


_MFDADeferredNewMailboxOperation : _MFOfflineCacheOperation
  // class methods
  +[_MFDADeferredNewMailboxOperation supportsSecureCoding]

  // instance methods
  -[_MFDADeferredNewMailboxOperation encodeWithCoder:]
  -[_MFDADeferredNewMailboxOperation initWithCoder:]
  -[_MFDADeferredNewMailboxOperation .cxx_destruct]
  -[_MFDADeferredNewMailboxOperation translateToLocalActionWithConnection:]


_MFDADeferredDeleteMailboxOperation : _MFOfflineCacheOperation
  // class methods
  +[_MFDADeferredDeleteMailboxOperation supportsSecureCoding]

  // instance methods
  -[_MFDADeferredDeleteMailboxOperation encodeWithCoder:]
  -[_MFDADeferredDeleteMailboxOperation initWithCoder:]
  -[_MFDADeferredDeleteMailboxOperation .cxx_destruct]
  -[_MFDADeferredDeleteMailboxOperation translateToLocalActionWithConnection:]


_MFDADeferredModifyMailboxOperation : _MFOfflineCacheOperation
  // class methods
  +[_MFDADeferredModifyMailboxOperation supportsSecureCoding]

  // instance methods
  -[_MFDADeferredModifyMailboxOperation encodeWithCoder:]
  -[_MFDADeferredModifyMailboxOperation initWithCoder:]
  -[_MFDADeferredModifyMailboxOperation .cxx_destruct]
  -[_MFDADeferredModifyMailboxOperation translateToLocalActionWithConnection:]
  -[_MFDADeferredModifyMailboxOperation initWithFolderID:newParentFolderID:newDisplayName:]


_MFDADeferredSelectMailboxOperation : _MFOfflineCacheOperation
  // class methods
  +[_MFDADeferredSelectMailboxOperation supportsSecureCoding]

  // instance methods
  -[_MFDADeferredSelectMailboxOperation encodeWithCoder:]
  -[_MFDADeferredSelectMailboxOperation initWithCoder:]
  -[_MFDADeferredSelectMailboxOperation .cxx_destruct]
  -[_MFDADeferredSelectMailboxOperation translateToLocalActionWithConnection:]


MFMailMessageLibraryMailboxURLMigrationStep : NSObject /usr/lib/libsqlite3.dylib
 @property  EDPersistenceDatabaseConnection *sqliteConnection

  // instance methods
  -[MFMailMessageLibraryMailboxURLMigrationStep .cxx_destruct]
  -[MFMailMessageLibraryMailboxURLMigrationStep performMigrationStep]
  -[MFMailMessageLibraryMailboxURLMigrationStep initWithSQLiteConnection:]
  -[MFMailMessageLibraryMailboxURLMigrationStep _renameMailboxDataFolders:]
  -[MFMailMessageLibraryMailboxURLMigrationStep _renameMailboxURLsForMailAccount:inSQLiteDB:]
  -[MFMailMessageLibraryMailboxURLMigrationStep _purgeFoldersMatchingPatterns:]
  -[MFMailMessageLibraryMailboxURLMigrationStep _updateMailboxURLsInSQLitedb:withOldURLToNewURLMap:]
  -[MFMailMessageLibraryMailboxURLMigrationStep sqliteConnection]
  -[MFMailMessageLibraryMailboxURLMigrationStep setSqliteConnection:]


MFMailMessageLibraryMigrator : NSObject /usr/lib/libsqlite3.dylib <EFContentProtectionObserver, EFLoggable>
 @property  <MFMailMessageLibraryMigratorDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *contentProtectionQueue
 @property  NSConditionLock *migrationState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibraryMigrator log]
  +[MFMailMessageLibraryMigrator currentVersion]

  // instance methods
  -[MFMailMessageLibraryMigrator delegate]
  -[MFMailMessageLibraryMigrator .cxx_destruct]
  -[MFMailMessageLibraryMigrator initWithDelegate:]
  -[MFMailMessageLibraryMigrator contentProtectionStateChanged:previousState:]
  -[MFMailMessageLibraryMigrator migrationState]
  -[MFMailMessageLibraryMigrator _runMigrationStepsFromVersion:connection:schema:]
  -[MFMailMessageLibraryMigrator attachProtectedDatabaseWithConnection:]
  -[MFMailMessageLibraryMigrator detachProtectedDatabaseWithConnection:]
  -[MFMailMessageLibraryMigrator addPostMigrationBlock:]
  -[MFMailMessageLibraryMigrator noteNeedsSpotlightReindex]
  -[MFMailMessageLibraryMigrator noteRebuildMessageInfoIndex]
  -[MFMailMessageLibraryMigrator noteNeedsRebuildTriggers]
  -[MFMailMessageLibraryMigrator resetTTRPromptAndForceReindex]
  -[MFMailMessageLibraryMigrator _checkForeignKeysWithConnection:]
  -[MFMailMessageLibraryMigrator needsRebuildTriggers]
  -[MFMailMessageLibraryMigrator needsRebuildMessageInfoIndex]
  -[MFMailMessageLibraryMigrator runPostMigrationBlocksWithConnection:]
  -[MFMailMessageLibraryMigrator needsSpotlightReindex]
  -[MFMailMessageLibraryMigrator _checkContentProtectionState]
  -[MFMailMessageLibraryMigrator contentProtectionQueue]
  -[MFMailMessageLibraryMigrator migrateWithDatabaseConnection:schema:]


MFMailMessageLibraryModifyColumnDefinitionsMigrationStep : NSObject /usr/lib/libsqlite3.dylib
 @property  EDPersistenceDatabaseConnection *connection
 @property  EFSQLSchema *schema

  // instance methods
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep .cxx_destruct]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep connection]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep setConnection:]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep schema]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep performMigrationStep]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep initWithSQLiteConnection:]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep messagesTableStubSchema]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep mailboxesTableStubSchema]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep serverMessagesTableSchema]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep serverLabelsTableSchema]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep localMessageActionsTableSchema]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep actionMessagesTableSchema]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep actionLabelsTableSchema]
  -[MFMailMessageLibraryModifyColumnDefinitionsMigrationStep actionFlagsTableSchema]


MFMailMessageLibraryQueryTransformer : NSObject /usr/lib/libsqlite3.dylib <EFLoggable, MFMessageCriterionConverterDelegate>
 @property  MFMessageCriterionConverter *criterionConverter
 @property  EDMessagePersistence *messagePersistence
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibraryQueryTransformer log]

  // instance methods
  -[MFMailMessageLibraryQueryTransformer .cxx_destruct]
  -[MFMailMessageLibraryQueryTransformer messagePersistence]
  -[MFMailMessageLibraryQueryTransformer criterionConverter]
  -[MFMailMessageLibraryQueryTransformer messageCriterionConverter:criterionTypeForKey:]
  -[MFMailMessageLibraryQueryTransformer messageCriterionConverter:expressionForConstantValue:withCriterionType:]
  -[MFMailMessageLibraryQueryTransformer mailAccountForIdentifier:]
  -[MFMailMessageLibraryQueryTransformer initWithMessagePersistence:]
  -[MFMailMessageLibraryQueryTransformer criterionForQuery:]
  -[MFMailMessageLibraryQueryTransformer optionsForQuery:]
  -[MFMailMessageLibraryQueryTransformer setCriterionConverter:]


MFMailMessageLibraryRebuildThreadsTableUpgradeStep : NSObject /usr/lib/libsqlite3.dylib <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibraryRebuildThreadsTableUpgradeStep runWithConnection:]
  +[MFMailMessageLibraryRebuildThreadsTableUpgradeStep _threadsTableSchemaWithMessagesTable:conversationsTable:threadScopesTable:]


MFMailMessageLibraryResetSequenceNumberMigrationStep : NSObject /usr/lib/libsqlite3.dylib <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibraryResetSequenceNumberMigrationStep runWithConnection:]


MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep : NSObject /usr/lib/libsqlite3.dylib <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep runWithConnection:]
  +[MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep threadSendersTableSchema]
  +[MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep threadRecipientsTableSchema]
  +[MFMailMessageLibrarySetThreadSendersRecipientsConflictResolutionUpgradeStep _schemaWithThreadsTable:]


MFMailMessageLibraryThreadFlagColorsUpgradeStep : NSObject /usr/lib/libsqlite3.dylib <EDTableUpgradeStep>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMailMessageLibraryThreadFlagColorsUpgradeStep runWithConnection:]
  +[MFMailMessageLibraryThreadFlagColorsUpgradeStep _threadsTableSchemaWithMessagesTable:conversationsTable:threadScopesTable:]


MFMailMessageRelationshipAnalyzer : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFMailMessageRelationshipAnalyzer myEmailAddresses]
  +[MFMailMessageRelationshipAnalyzer analyzeMessages:myEmailAddresses:]
  +[MFMailMessageRelationshipAnalyzer sendersOfMessage:]
  +[MFMailMessageRelationshipAnalyzer relationOfMessage:toMessage:previousSenders:myEmailAddresses:]
  +[MFMailMessageRelationshipAnalyzer isMessage:responseToMessage:previousSenders:myEmailAddresses:]
  +[MFMailMessageRelationshipAnalyzer isMessageDraft:]
  +[MFMailMessageRelationshipAnalyzer isMessage:forwardOfMessage:myEmailAddresses:]
  +[MFMailMessageRelationshipAnalyzer isMessage:sentByAddress:]
  +[MFMailMessageRelationshipAnalyzer isMessage:addressedToPreviousSender:]
  +[MFMailMessageRelationshipAnalyzer isMessage:addressedToMailingListForMessage:]
  +[MFMailMessageRelationshipAnalyzer recipientsOfMessage:]
  +[MFMailMessageRelationshipAnalyzer analysisOfConversation:]
  +[MFMailMessageRelationshipAnalyzer relationOfMessage:toMessage:]

  // instance methods
  -[MFMailMessageRelationshipAnalyzer .cxx_destruct]
  -[MFMailMessageRelationshipAnalyzer initWithMessages:relationships:]
  -[MFMailMessageRelationshipAnalyzer relationOfMessage:]


MFMailMessageStoreSearchResult : NSObject /usr/lib/libsqlite3.dylib
 @property  NSMutableDictionary *mailboxToRemoteIdDictionary
 @property  unsigned long count
 @property  NSDate *continueOffset

  // instance methods
  -[MFMailMessageStoreSearchResult init]
  -[MFMailMessageStoreSearchResult count]
  -[MFMailMessageStoreSearchResult .cxx_destruct]
  -[MFMailMessageStoreSearchResult setContinueOffset:]
  -[MFMailMessageStoreSearchResult addRemoteID:mailbox:]
  -[MFMailMessageStoreSearchResult mailboxToRemoteIdDictionary]
  -[MFMailMessageStoreSearchResult enumerateMailboxesAndRemoteIDsUsingBlock:]
  -[MFMailMessageStoreSearchResult continueOffset]
  -[MFMailMessageStoreSearchResult setMailboxToRemoteIdDictionary:]


MFMessageChangeManager_iOS : EDMessageChangeManager /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <EDMessageChangeManagerSubClassMethods>
 @property  MFMailMessageLibrary *library
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFMessageChangeManager_iOS .cxx_destruct]
  -[MFMessageChangeManager_iOS library]
  -[MFMessageChangeManager_iOS setLibrary:]
  -[MFMessageChangeManager_iOS moveMessages:destinationMailboxURL:userInitiated:]
  -[MFMessageChangeManager_iOS addNewMessages:mailboxURL:userInitiated:]
  -[MFMessageChangeManager_iOS willStartPersistenceDidAddMessages:]
  -[MFMessageChangeManager_iOS didFinishPersistenceDidAddMessages:]
  -[MFMessageChangeManager_iOS messageForDatabaseID:]
  -[MFMessageChangeManager_iOS mailboxDatabaseIDForURL:]
  -[MFMessageChangeManager_iOS copyMessages:destinationMailboxURL:userInitiated:]
  -[MFMessageChangeManager_iOS accountForMailboxURL:]
  -[MFMessageChangeManager_iOS messagesForRemoteIDs:mailboxURL:]
  -[MFMessageChangeManager_iOS iterateMessagesInMailboxURLs:excludingMessages:batchSize:returnMessagesForFlagChange:handler:]
  -[MFMessageChangeManager_iOS persistNewMessages:mailboxURL:oldMessagesByNewMessage:fromSyncing:]
  -[MFMessageChangeManager_iOS deletePersistedMessages:]
  -[MFMessageChangeManager_iOS haveCompleteMIMEForMessage:]
  -[MFMessageChangeManager_iOS applyFlagChange:toMessagesInDatabase:]
  -[MFMessageChangeManager_iOS resetStatusCountsForMailboxWithURL:]
  -[MFMessageChangeManager_iOS addLabels:removeLabels:toMessagesInDatabase:]
  -[MFMessageChangeManager_iOS setRemoteID:onMessageWithDatabaseID:]
  -[MFMessageChangeManager_iOS setData:onMessage:]
  -[MFMessageChangeManager_iOS checkForNewActionsInMailboxID:]
  -[MFMessageChangeManager_iOS actionHasChangedAccount:]
  -[MFMessageChangeManager_iOS displayErrorForTransferAction:withResults:]
  -[MFMessageChangeManager_iOS messageWasAppended:]
  -[MFMessageChangeManager_iOS mailboxIsAllMail:]
  -[MFMessageChangeManager_iOS mailboxPartOfAllMail:]
  -[MFMessageChangeManager_iOS initWithLibrary:database:localActionPersistence:serverMessagePersistenceFactory:hookResponder:]
  -[MFMessageChangeManager_iOS messagesToJournalForMessages:inMailbox:]


MFMessageCollectionInfo : NSObject /usr/lib/libsqlite3.dylib
 @property  MFMessageInfo *firstMessage
 @property  MFMessageInfo *lastMessage
 @property  MFMessageInfo *visibleMessageInfo
 @property  NSArray *uniqueMessageInfos
 @property  NSArray *allMessageInfos
 @property  BOOL isEmpty
 @property  unsigned long messagesCount
 @property  unsigned long messageCountWithDuplicates
 @property  unsigned long state
 @property  long long messageCollectionHash
 @property  @? duplicatePreferenceComparator

  // class methods
  +[MFMessageCollectionInfo stateForMessages:]

  // instance methods
  -[MFMessageCollectionInfo isEmpty]
  -[MFMessageCollectionInfo .cxx_destruct]
  -[MFMessageCollectionInfo state]
  -[MFMessageCollectionInfo messagesCount]
  -[MFMessageCollectionInfo firstMessage]
  -[MFMessageCollectionInfo lastMessage]
  -[MFMessageCollectionInfo uniqueMessageInfos]
  -[MFMessageCollectionInfo allMessageInfos]
  -[MFMessageCollectionInfo messageCollectionHash]
  -[MFMessageCollectionInfo addMessageInfo:]
  -[MFMessageCollectionInfo indexOfMessageInfo:]
  -[MFMessageCollectionInfo removeMessageInfo:]
  -[MFMessageCollectionInfo indexWhereMessageInfoWouldBeInserted:]
  -[MFMessageCollectionInfo messageInfoAtIndex:]
  -[MFMessageCollectionInfo messageInfoEquivalentToMessageInfo:]
  -[MFMessageCollectionInfo duplicatesOfMessageInfo:]
  -[MFMessageCollectionInfo duplicatePreferenceComparator]
  -[MFMessageCollectionInfo setDuplicatePreferenceComparator:]
  -[MFMessageCollectionInfo initWithHash:comparator:]
  -[MFMessageCollectionInfo messageCountWithDuplicates]
  -[MFMessageCollectionInfo visibleMessageInfo]
  -[MFMessageCollectionInfo mergeWithCollection:]


_MFLoadingContextEventResult : NSObject /usr/lib/libsqlite3.dylib
 @property  NSURL *contentURL
 @property  NSArray *relatedContentItems
 @property  <EFInvocable> *cleanupInvocable
 @property  NSURL *publicMessageURL

  // instance methods
  -[_MFLoadingContextEventResult .cxx_destruct]
  -[_MFLoadingContextEventResult contentURL]
  -[_MFLoadingContextEventResult setContentURL:]
  -[_MFLoadingContextEventResult relatedContentItems]
  -[_MFLoadingContextEventResult setRelatedContentItems:]
  -[_MFLoadingContextEventResult cleanupInvocable]
  -[_MFLoadingContextEventResult setCleanupInvocable:]
  -[_MFLoadingContextEventResult publicMessageURL]
  -[_MFLoadingContextEventResult setPublicMessageURL:]


MFMessageContentRequest : NSObject /usr/lib/libsqlite3.dylib <EFLoggable>
 @property  <EFScheduler> *scheduler
 @property  EMMessageObjectID *objectID
 @property  EDMessagePersistence *messagePersistence
 @property  MFMailMessage *legacyMessage
 @property  MFMessageTransformer *messageTransformer
 @property  NSString *clientIdentifier
 @property  EMContentRequestOptions *options
 @property  EDMailDropMetadataGenerator *mailDropAttachmentGenerator
 @property  <EMContentItemRequestDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMessageContentRequest log]
  +[MFMessageContentRequest onScheduler:requestID:requestContentForObjectID:messagePersistence:legacyMessage:messageTransformer:mailDropAttachmentGenerator:clientIdentifier:options:delegate:completionHandler:]
  +[MFMessageContentRequest onScheduler:requestContentForObjectID:messagePersistence:legacyMessage:messageTransformer:mailDropAttachmentGenerator:clientIdentifier:options:delegate:completionHandler:]
  +[MFMessageContentRequest metadataWithDictionary:]

  // instance methods
  -[MFMessageContentRequest options]
  -[MFMessageContentRequest delegate]
  -[MFMessageContentRequest .cxx_destruct]
  -[MFMessageContentRequest _init]
  -[MFMessageContentRequest objectID]
  -[MFMessageContentRequest scheduler]
  -[MFMessageContentRequest clientIdentifier]
  -[MFMessageContentRequest messagePersistence]
  -[MFMessageContentRequest beginRequestWithCompletionHandler:]
  -[MFMessageContentRequest requestRawRepresentationWithCompletionHandler:]
  -[MFMessageContentRequest requestHTMLRepresentationWithCompletionHandler:]
  -[MFMessageContentRequest legacyMessage]
  -[MFMessageContentRequest _contentRepresentationForLoadingEvent:existingRepresentation:]
  -[MFMessageContentRequest _generateRepresentationForLoadingContext:existingRepresentation:completion:]
  -[MFMessageContentRequest _contentItemForAttachment:manager:managed:]
  -[MFMessageContentRequest delegateWithErrorHandler:]
  -[MFMessageContentRequest _processContentLoadingContextEvent:]
  -[MFMessageContentRequest mailDropAttachmentGenerator]
  -[MFMessageContentRequest _attachmentContentItemsForMailDropNodes:withContext:]
  -[MFMessageContentRequest _contentRepresentationForEvent:contentURL:relatedItems:existingRepresentation:invocable:]
  -[MFMessageContentRequest _includeSuggestionItemsIfNeededForRepresentation:message:]
  -[MFMessageContentRequest messageTransformer]
  -[MFMessageContentRequest _messageForLegacyMessage:]
  -[MFMessageContentRequest _requestContentForAttachment:manager:options:managed:completion:]
  -[MFMessageContentRequest _maildropMetadataFromContext:]
  -[MFMessageContentRequest _attachmentForMailDropMetaData:context:]


_MFMessageContentRequestScheduler : NSObject /usr/lib/libsqlite3.dylib <EFScheduler>
 @property  <EFScheduler> *scheduler
 @property  EDMessagePersistence *messagePersistence
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFMessageContentRequestScheduler .cxx_destruct]
  -[_MFMessageContentRequestScheduler performBlock:]
  -[_MFMessageContentRequestScheduler performSyncBlock:]
  -[_MFMessageContentRequestScheduler scheduler]
  -[_MFMessageContentRequestScheduler setScheduler:]
  -[_MFMessageContentRequestScheduler performCancelableBlock:]
  -[_MFMessageContentRequestScheduler afterDelay:performBlock:]
  -[_MFMessageContentRequestScheduler messagePersistence]
  -[_MFMessageContentRequestScheduler initWithScheduler:requestID:messagePersistence:]
  -[_MFMessageContentRequestScheduler performBlockWithActivity:requestID:]
  -[_MFMessageContentRequestScheduler performVoucherPreservingBlock:]
  -[_MFMessageContentRequestScheduler performWithObject:]
  -[_MFMessageContentRequestScheduler initWithScheduler:messagePersistence:]
  -[_MFMessageContentRequestScheduler setMessagePersistence:]


_MFDASearchCriterionConverterDelegate : NSObject /usr/lib/libsqlite3.dylib <MFMessageCriterionConverterDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFDASearchCriterionConverterDelegate messageCriterionConverter:predicateKeysForCriterionType:]
  -[_MFDASearchCriterionConverterDelegate messageCriterionConverter:willUsePredicateOperatorType:forKey:]
  -[_MFDASearchCriterionConverterDelegate _shouldConvertEqualsToContainsForKey:]


MFMessageCriterionConverter : NSObject /usr/lib/libsqlite3.dylib
 @property  <MFMessageCriterionConverterDelegate> *delegate

  // class methods
  +[MFMessageCriterionConverter spotlightRecipientSearchPredicateForValue:operator:]
  +[MFMessageCriterionConverter spotlightSenderSearchPredicateForValue:operator:]
  +[MFMessageCriterionConverter spotlightSubjectSearchPredicateForValue:operator:]
  +[MFMessageCriterionConverter spotlightBodySearchPredicateForValue:]
  +[MFMessageCriterionConverter spotlightSearchPredicateForValue:]

  // instance methods
  -[MFMessageCriterionConverter delegate]
  -[MFMessageCriterionConverter setDelegate:]
  -[MFMessageCriterionConverter .cxx_destruct]
  -[MFMessageCriterionConverter messageCriterionFromPredicate:]
  -[MFMessageCriterionConverter predicateFromMessageCriterion:]
  -[MFMessageCriterionConverter _proposedPredicateOperatorType:forKey:]
  -[MFMessageCriterionConverter _predicateForKey:value:qualifier:]
  -[MFMessageCriterionConverter _simplifiedCompoundPredicateOfType:forSubqueries:]
  -[MFMessageCriterionConverter _defaultKeysForCriterionType:]
  -[MFMessageCriterionConverter _predicateKeysForCriterion:]
  -[MFMessageCriterionConverter _searchPredicateForCriterion:]
  -[MFMessageCriterionConverter _orPredicateForAttributes:matchingValue:qualifier:]
  -[MFMessageCriterionConverter _defaultCriterionTypeForKey:]
  -[MFMessageCriterionConverter _criterionTypeForKey:]
  -[MFMessageCriterionConverter _criterionTypeFromExpression:]
  -[MFMessageCriterionConverter _messageCriterionForCompoundPredicate:]
  -[MFMessageCriterionConverter _messageCriterionForComparisonPredicate:]
  -[MFMessageCriterionConverter messageCriterionFromPredicateFormatString:]


MFMessageDetails : NSObject /usr/lib/libsqlite3.dylib <MFBaseMessage>
 @property  unsigned int uid
 @property  unsigned long messageFlags
 @property  MFMailboxUid *mailbox
 @property  unsigned int dateReceivedInterval
 @property  unsigned int dateSentInterval
 @property  NSString *externalID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long conversationHash
 @property  long long mailboxID
 @property  long long messageIDHash
 @property  BOOL flagged
 @property  BOOL read
 @property  BOOL deleted
 @property  BOOL senderVIP
 @property  BOOL knownToHaveAttachments
 @property  BOOL libraryMessage
 @property  long long libraryID

  // instance methods
  -[MFMessageDetails isEqual:]
  -[MFMessageDetails .cxx_destruct]
  -[MFMessageDetails uid]
  -[MFMessageDetails deleted]
  -[MFMessageDetails messageID]
  -[MFMessageDetails externalID]
  -[MFMessageDetails libraryID]
  -[MFMessageDetails read]
  -[MFMessageDetails mailbox]
  -[MFMessageDetails remoteID]
  -[MFMessageDetails messageFlags]
  -[MFMessageDetails copyMessageInfo]
  -[MFMessageDetails mailboxID]
  -[MFMessageDetails isLibraryMessage]
  -[MFMessageDetails messageIDHash]
  -[MFMessageDetails dateReceivedInterval]
  -[MFMessageDetails dateSentInterval]
  -[MFMessageDetails conversationHash]
  -[MFMessageDetails flagged]
  -[MFMessageDetails senderVIP]
  -[MFMessageDetails isKnownToHaveAttachments]


MFMessageInfo : NSObject /usr/lib/libsqlite3.dylib <MFBaseMessage, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned int uid
 @property  unsigned int dateReceivedInterval
 @property  unsigned int dateSentInterval
 @property  long long conversationHash
 @property  long long mailboxID
 @property  long long messageIDHash
 @property  BOOL flagged
 @property  BOOL read
 @property  BOOL deleted
 @property  BOOL senderVIP
 @property  BOOL knownToHaveAttachments
 @property  BOOL libraryMessage
 @property  long long libraryID
 @property  long long generationNumber
 @property  long long uid
 @property  unsigned int dateReceivedInterval
 @property  unsigned int dateSentInterval
 @property  long long conversationHash
 @property  long long mailboxID
 @property  long long messageIDHash
 @property  BOOL flagged
 @property  BOOL read
 @property  BOOL deleted
 @property  BOOL uidIsLibraryID
 @property  BOOL isVIP
 @property  BOOL knownToHaveAttachments
 @property  long long sortUid
 @property  unsigned int sortDateReceivedInterval

  // class methods
  +[MFMessageInfo newGenerationNumber]

  // instance methods
  -[MFMessageInfo init]
  -[MFMessageInfo isEqual:]
  -[MFMessageInfo copyWithZone:]
  -[MFMessageInfo uid]
  -[MFMessageInfo deleted]
  -[MFMessageInfo setUid:]
  -[MFMessageInfo setDeleted:]
  -[MFMessageInfo libraryID]
  -[MFMessageInfo isVIP]
  -[MFMessageInfo setRead:]
  -[MFMessageInfo read]
  -[MFMessageInfo copyMessageInfo]
  -[MFMessageInfo setMailboxID:]
  -[MFMessageInfo setUidIsLibraryID:]
  -[MFMessageInfo mailboxID]
  -[MFMessageInfo isLibraryMessage]
  -[MFMessageInfo generationNumber]
  -[MFMessageInfo setMessageIDHash:]
  -[MFMessageInfo setDateReceivedInterval:]
  -[MFMessageInfo setDateSentInterval:]
  -[MFMessageInfo setConversationHash:]
  -[MFMessageInfo messageIDHash]
  -[MFMessageInfo setIsVIP:]
  -[MFMessageInfo setFlagged:]
  -[MFMessageInfo setKnownToHaveAttachments:]
  -[MFMessageInfo dateReceivedInterval]
  -[MFMessageInfo dateSentInterval]
  -[MFMessageInfo conversationHash]
  -[MFMessageInfo flagged]
  -[MFMessageInfo senderVIP]
  -[MFMessageInfo isKnownToHaveAttachments]
  -[MFMessageInfo initWithUid:mailboxID:messageID:dateReceivedInterval:dateSentInterval:conversationHash:read:knownToHaveAttachments:flagged:isVIP:]
  -[MFMessageInfo uidIsLibraryID]
  -[MFMessageInfo _flagDescription]
  -[MFMessageInfo generationCompare:]
  -[MFMessageInfo sortUid]
  -[MFMessageInfo setSortUid:]
  -[MFMessageInfo sortDateReceivedInterval]
  -[MFMessageInfo setSortDateReceivedInterval:]


MFMessageInfoOrderedSet : NSObject /usr/lib/libsqlite3.dylib
 @property  @? comparator
 @property  @? duplicatePreferenceComparator
 @property  NSArray *uniqueMessageInfos
 @property  NSArray *allMessageInfos
 @property  unsigned long count
 @property  unsigned long countWithDuplicates
 @property  MFMessageInfo *firstMessage
 @property  MFMessageInfo *lastMessage

  // instance methods
  -[MFMessageInfoOrderedSet count]
  -[MFMessageInfoOrderedSet _invalidate]
  -[MFMessageInfoOrderedSet .cxx_destruct]
  -[MFMessageInfoOrderedSet comparator]
  -[MFMessageInfoOrderedSet initWithComparator:]
  -[MFMessageInfoOrderedSet setComparator:]
  -[MFMessageInfoOrderedSet firstMessage]
  -[MFMessageInfoOrderedSet lastMessage]
  -[MFMessageInfoOrderedSet countWithDuplicates]
  -[MFMessageInfoOrderedSet uniqueMessageInfos]
  -[MFMessageInfoOrderedSet allMessageInfos]
  -[MFMessageInfoOrderedSet addMessageInfo:]
  -[MFMessageInfoOrderedSet indexOfMessageInfo:]
  -[MFMessageInfoOrderedSet removeMessageInfo:]
  -[MFMessageInfoOrderedSet indexWhereMessageInfoWouldBeInserted:]
  -[MFMessageInfoOrderedSet messageInfoAtIndex:]
  -[MFMessageInfoOrderedSet messageInfoEquivalentToMessageInfo:]
  -[MFMessageInfoOrderedSet duplicatesOfMessageInfo:]
  -[MFMessageInfoOrderedSet duplicatePreferenceComparator]
  -[MFMessageInfoOrderedSet setDuplicatePreferenceComparator:]
  -[MFMessageInfoOrderedSet _addMessageInfoToDuplicates:]
  -[MFMessageInfoOrderedSet _removeDuplicatesForMessageInfo:]
  -[MFMessageInfoOrderedSet _scanForMessageInfoSimilarTo:]
  -[MFMessageInfoOrderedSet removeMessageInfoAtIndex:]
  -[MFMessageInfoOrderedSet _duplicateMessageInfosForMessageInfo:]
  -[MFMessageInfoOrderedSet removeMessageInfosAtIndexes:]
  -[MFMessageInfoOrderedSet removeAllMessageInfos]
  -[MFMessageInfoOrderedSet replaceMessageInfo:withReplacement:inPlace:]
  -[MFMessageInfoOrderedSet allDuplicatesOfMessageInfo:]
  -[MFMessageInfoOrderedSet enumerateUniqueMessageInfosWithOptions:usingBlock:]


MFMessageLoadingContextEvent : NSObject /usr/lib/libsqlite3.dylib
 @property  MFMessageLoadingContext *context
 @property  NSArray *content
 @property  BOOL hasLoadedCompleteBody
 @property  BOOL hasLoadedBestAlternativePart
 @property  unsigned long remainingBytes
 @property  long long transportType
 @property  NSError *error
 @property  NSError *smimeError
 @property  MFMimePart *loadedPart
 @property  MFMimeBody *loadedBody
 @property  MFMailMessage *message

  // instance methods
  -[MFMessageLoadingContextEvent .cxx_destruct]
  -[MFMessageLoadingContextEvent error]
  -[MFMessageLoadingContextEvent setError:]
  -[MFMessageLoadingContextEvent context]
  -[MFMessageLoadingContextEvent setContext:]
  -[MFMessageLoadingContextEvent message]
  -[MFMessageLoadingContextEvent transportType]
  -[MFMessageLoadingContextEvent content]
  -[MFMessageLoadingContextEvent setContent:]
  -[MFMessageLoadingContextEvent setTransportType:]
  -[MFMessageLoadingContextEvent loadedBody]
  -[MFMessageLoadingContextEvent hasLoadedBestAlternativePart]
  -[MFMessageLoadingContextEvent hasLoadedCompleteBody]
  -[MFMessageLoadingContextEvent remainingBytes]
  -[MFMessageLoadingContextEvent smimeError]
  -[MFMessageLoadingContextEvent _descriptionForDebugging:]
  -[MFMessageLoadingContextEvent setHasLoadedCompleteBody:]
  -[MFMessageLoadingContextEvent setHasLoadedBestAlternativePart:]
  -[MFMessageLoadingContextEvent setRemainingBytes:]
  -[MFMessageLoadingContextEvent loadedPart]
  -[MFMessageLoadingContextEvent setLoadedPart:]
  -[MFMessageLoadingContextEvent setLoadedBody:]


MFMessageLoadingContext : NSObject /usr/lib/libsqlite3.dylib <EFCancelable>
 @property  MFMailMessage *message
 @property  MFMimeBody *messageBody
 @property  MFAttachmentManager *attachmentManager
 @property  MFMimePart *loadedPart
 @property  unsigned long contentOffset
 @property  BOOL hasLoadedSomeContent
 @property  BOOL hasLoadedCompleteMessage
 @property  BOOL hasLoadedBestAlternativePart
 @property  BOOL outgoingMessage
 @property  BOOL draftMessage
 @property  BOOL editableMessage
 @property  EFObservable *contentObservable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMessageLoadingContext _nextOffsetForOffset:totalLength:requestedAmount:]

  // instance methods
  -[MFMessageLoadingContext dealloc]
  -[MFMessageLoadingContext .cxx_destruct]
  -[MFMessageLoadingContext cancel]
  -[MFMessageLoadingContext message]
  -[MFMessageLoadingContext load:]
  -[MFMessageLoadingContext contentOffset]
  -[MFMessageLoadingContext _setMessage:]
  -[MFMessageLoadingContext setContentOffset:]
  -[MFMessageLoadingContext messageBody]
  -[MFMessageLoadingContext contentObservable]
  -[MFMessageLoadingContext initWithMessage:attachmentManager:]
  -[MFMessageLoadingContext load:scheduler:shouldDownload:]
  -[MFMessageLoadingContext attachmentManager]
  -[MFMessageLoadingContext hasLoadedBestAlternativePart]
  -[MFMessageLoadingContext setHasLoadedBestAlternativePart:]
  -[MFMessageLoadingContext loadedPart]
  -[MFMessageLoadingContext setLoadedPart:]
  -[MFMessageLoadingContext _setupMeetingData]
  -[MFMessageLoadingContext _setupObservableStreams]
  -[MFMessageLoadingContext assignAttachmentManagerToContent:]
  -[MFMessageLoadingContext processMeetingInvitations:]
  -[MFMessageLoadingContext onScheduler:addLoadObserver:]
  -[MFMessageLoadingContext load:scheduler:]
  -[MFMessageLoadingContext setHasLoadedSomeContent:]
  -[MFMessageLoadingContext _load:shouldDownload:]
  -[MFMessageLoadingContext _reallyLoad:shouldDownload:]
  -[MFMessageLoadingContext _setMessageBody:]
  -[MFMessageLoadingContext setHasLoadedCompleteMessage:]
  -[MFMessageLoadingContext addLoadObserver:]
  -[MFMessageLoadingContext _setAttachmentManager:]
  -[MFMessageLoadingContext hasLoadedSomeContent]
  -[MFMessageLoadingContext hasLoadedCompleteMessage]
  -[MFMessageLoadingContext isOutgoingMessage]
  -[MFMessageLoadingContext isDraftMessage]
  -[MFMessageLoadingContext isEditableMessage]


MFMessageLoadingContextToEMSecurityInformationTransformer : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFMessageLoadingContextToEMSecurityInformationTransformer securityInformationFromMFMessageLoadingContextEvent:]


MFMessagePersistence_iOS : EDMessagePersistence /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <EFLoggable>
 @property  MFMailMessageLibrary *library
 @property  MFMailMessageLibraryQueryTransformer *queryTransformer
 @property  MFMessageTransformer *libraryMessageTransformer
 @property  <EFScheduler> *networkContentLoadScheduler
 @property  <EFScheduler> *offlineContentLoadScheduler
 @property  NSObject<OS_dispatch_queue> *requestSummaryQueue
 @property  EDMailDropMetadataGeneratorFactory *maildropContentItemGeneratorFactory
 @property  <MFMessageSummaryLoaderProvider> *summaryLoaderProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMessagePersistence_iOS log]

  // instance methods
  -[MFMessagePersistence_iOS .cxx_destruct]
  -[MFMessagePersistence_iOS library]
  -[MFMessagePersistence_iOS setLibrary:]
  -[MFMessagePersistence_iOS groupedMessagesCountByMailboxMatchingQuery:variable:]
  -[MFMessagePersistence_iOS enabledAccountMailboxesExpression]
  -[MFMessagePersistence_iOS queryTransformer]
  -[MFMessagePersistence_iOS _countOfMessagesMatchingCriteria:includingDuplicates:]
  -[MFMessagePersistence_iOS _iterateMessagesMatchingQuery:cancelationToken:resultHandler:monitor:]
  -[MFMessagePersistence_iOS libraryMessageTransformer]
  -[MFMessagePersistence_iOS libraryMessageForMessageObjectID:]
  -[MFMessagePersistence_iOS offlineContentLoadScheduler]
  -[MFMessagePersistence_iOS networkContentLoadScheduler]
  -[MFMessagePersistence_iOS maildropContentItemGeneratorFactory]
  -[MFMessagePersistence_iOS requestSummaryQueue]
  -[MFMessagePersistence_iOS summaryLoaderProvider]
  -[MFMessagePersistence_iOS _requestSummaryForLibraryMessage:]
  -[MFMessagePersistence_iOS initWithMailboxPersistence:database:library:]
  -[MFMessagePersistence_iOS countOfMessagesWithMessageIDHeaderHash:matchingQuery:]
  -[MFMessagePersistence_iOS countOfMessagesMatchingQuery:]
  -[MFMessagePersistence_iOS iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:]
  -[MFMessagePersistence_iOS iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:]
  -[MFMessagePersistence_iOS messagesForPersistedMessages:mailboxScope:]
  -[MFMessagePersistence_iOS persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:]
  -[MFMessagePersistence_iOS persistedMessageForOutgoingMessage:isDraft:]
  -[MFMessagePersistence_iOS requestContentForMessageObjectID:requestID:options:delegate:completionHandler:]
  -[MFMessagePersistence_iOS requestSummaryForMessageObjectID:]
  -[MFMessagePersistence_iOS setMaildropContentItemGeneratorFactory:]
  -[MFMessagePersistence_iOS setSummaryLoaderProvider:]
  -[MFMessagePersistence_iOS setQueryTransformer:]
  -[MFMessagePersistence_iOS setLibraryMessageTransformer:]
  -[MFMessagePersistence_iOS setNetworkContentLoadScheduler:]
  -[MFMessagePersistence_iOS setOfflineContentLoadScheduler:]
  -[MFMessagePersistence_iOS setRequestSummaryQueue:]


_MFMessagePersistenceQueryIterator : EDPersistedMessageQueryIterator /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <MFSearchResultHandler, QueryProgressMonitor, _MFFlushableMessageSetIterator, EFCancelable>
 @property  NSMutableIndexSet *messageSet
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFMessagePersistenceQueryIterator .cxx_destruct]
  -[_MFMessagePersistenceQueryIterator handleMessage:]
  -[_MFMessagePersistenceQueryIterator messageSet]
  -[_MFMessagePersistenceQueryIterator setMessageSet:]


_MFMessageQueryConversionIterator : _MFMessagePersistenceQueryIterator
  // instance methods
  -[_MFMessageQueryConversionIterator handleMessage:]
  -[_MFMessageQueryConversionIterator initWithMessagePersistence:query:]


_MFPersistedMessageForwardingIterator : NSObject /usr/lib/libsqlite3.dylib <MFSearchResultHandler, _MFFlushableMessageSetIterator, EFCancelable>
 @property  @? handler
 @property  NSMutableIndexSet *messageSet
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFPersistedMessageForwardingIterator handler]
  -[_MFPersistedMessageForwardingIterator .cxx_destruct]
  -[_MFPersistedMessageForwardingIterator cancel]
  -[_MFPersistedMessageForwardingIterator flush]
  -[_MFPersistedMessageForwardingIterator initWithHandler:]
  -[_MFPersistedMessageForwardingIterator handleMessage:]
  -[_MFPersistedMessageForwardingIterator messageSet]


MFMessageReferenceContext : NSObject /usr/lib/libsqlite3.dylib
 @property  MFMailMessage *message
 @property  long long libraryID
 @property  long long messageIDHash
 @property  ECSubject *subject
 @property  EFMutableInt64Set *references
 @property  NSMutableDictionary *messageIDsBySubject
 @property  long long mailboxID
 @property  long long conversationIDHash
 @property  ^Q conversationFlagsRef
 @property  double dateSentInterval
 @property  NSArray *senderList
 @property  NSArray *toList
 @property  NSArray *ccList
 @property  NSArray *bccList
 @property  NSString *sender
 @property  NSString *to
 @property  NSString *cc
 @property  NSString *bcc
 @property  MFEmailSet *participants

  // instance methods
  -[MFMessageReferenceContext .cxx_destruct]
  -[MFMessageReferenceContext to]
  -[MFMessageReferenceContext message]
  -[MFMessageReferenceContext setMessage:]
  -[MFMessageReferenceContext sender]
  -[MFMessageReferenceContext setSender:]
  -[MFMessageReferenceContext subject]
  -[MFMessageReferenceContext setSubject:]
  -[MFMessageReferenceContext participants]
  -[MFMessageReferenceContext setTo:]
  -[MFMessageReferenceContext libraryID]
  -[MFMessageReferenceContext setLibraryID:]
  -[MFMessageReferenceContext setMailboxID:]
  -[MFMessageReferenceContext mailboxID]
  -[MFMessageReferenceContext references]
  -[MFMessageReferenceContext cc]
  -[MFMessageReferenceContext bcc]
  -[MFMessageReferenceContext setReferences:]
  -[MFMessageReferenceContext setMessageIDHash:]
  -[MFMessageReferenceContext setDateSentInterval:]
  -[MFMessageReferenceContext messageIDHash]
  -[MFMessageReferenceContext dateSentInterval]
  -[MFMessageReferenceContext messageIDsBySubject]
  -[MFMessageReferenceContext setConversationIDHash:]
  -[MFMessageReferenceContext setCc:]
  -[MFMessageReferenceContext setBcc:]
  -[MFMessageReferenceContext conversationIDHash]
  -[MFMessageReferenceContext conversationFlagsRef]
  -[MFMessageReferenceContext setMessageIDsBySubject:]
  -[MFMessageReferenceContext setConversationFlagsRef:]
  -[MFMessageReferenceContext setSenderList:]
  -[MFMessageReferenceContext setToList:]
  -[MFMessageReferenceContext setCcList:]
  -[MFMessageReferenceContext setBccList:]
  -[MFMessageReferenceContext senderList]
  -[MFMessageReferenceContext toList]
  -[MFMessageReferenceContext ccList]
  -[MFMessageReferenceContext bccList]


MFMessageSignerEMMessageSignerTransformer : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFMessageSignerEMMessageSignerTransformer messageSignerFromMFMessageSigner:]


_MFMailMessageDuplicateInfo : NSObject /usr/lib/libsqlite3.dylib
 @property  MFMailboxProvider *mailboxProvider
 @property  NSMutableSet *mailboxes
 @property  NSMutableArray *flags
 @property  NSMutableArray *dates

  // instance methods
  -[_MFMailMessageDuplicateInfo .cxx_destruct]
  -[_MFMailMessageDuplicateInfo flags]
  -[_MFMailMessageDuplicateInfo setFlags:]
  -[_MFMailMessageDuplicateInfo addMessage:]
  -[_MFMailMessageDuplicateInfo dates]
  -[_MFMailMessageDuplicateInfo setDates:]
  -[_MFMailMessageDuplicateInfo mailboxes]
  -[_MFMailMessageDuplicateInfo initWithMailboxProvider:]
  -[_MFMailMessageDuplicateInfo mailboxProvider]
  -[_MFMailMessageDuplicateInfo combinedMailboxes]
  -[_MFMailMessageDuplicateInfo combinedMessageFlags]
  -[_MFMailMessageDuplicateInfo combinedDate]
  -[_MFMailMessageDuplicateInfo setMailboxProvider:]
  -[_MFMailMessageDuplicateInfo setMailboxes:]


MFMessageTransformer : NSObject /usr/lib/libsqlite3.dylib <EFLoggable>
 @property  MFMailMessageLibrary *library
 @property  MFMailboxProvider *mailboxProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFMessageTransformer log]

  // instance methods
  -[MFMessageTransformer .cxx_destruct]
  -[MFMessageTransformer library]
  -[MFMessageTransformer setLibrary:]
  -[MFMessageTransformer mailboxProvider]
  -[MFMessageTransformer transformLegacyMailMessage:mailboxScope:loaderBlock:]
  -[MFMessageTransformer initWithLibrary:mailboxProvider:]
  -[MFMessageTransformer transformLegacyMailMessages:mailboxScope:]
  -[MFMessageTransformer setMailboxProvider:]
  -[MFMessageTransformer _transformLegacyMailMessage:mailboxScope:duplicateInfo:loaderBlock:]


MFNetworkController : NSObject /usr/lib/libsqlite3.dylib <MFDiagnosticsGenerator, RadiosPreferencesDelegate, CXCallObserverDelegate>
 @property  ^v wifiManager
 @property  BOOL isDataAvailable
 @property  BOOL isNetworkUp
 @property  BOOL isFatPipe
 @property  BOOL isOnWWAN
 @property  BOOL inAirplaneMode
 @property  BOOL is3GConnection
 @property  BOOL is4GConnection
 @property  int dataIndicator
 @property  long long transportType
 @property  BOOL hasAlternateAdvice
 @property  EFObservable *networkObservable
 @property  EFObservable *wifiObservable
 @property  AWDMailNetworkDiagnosticsReport *awdNetworkDiagnosticReport
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFNetworkController sharedInstance]
  +[MFNetworkController networkAssertionWithIdentifier:]

  // instance methods
  -[MFNetworkController init]
  -[MFNetworkController dealloc]
  -[MFNetworkController invalidate]
  -[MFNetworkController .cxx_destruct]
  -[MFNetworkController transportType]
  -[MFNetworkController airplaneModeChanged]
  -[MFNetworkController wifiManager]
  -[MFNetworkController setWifiManager:]
  -[MFNetworkController callObserver:callChanged:]
  -[MFNetworkController connectionActivationError:connection:error:]
  -[MFNetworkController preferredDataSimChanged:]
  -[MFNetworkController dataStatus:dataStatusInfo:]
  -[MFNetworkController simStatusDidChange:status:]
  -[MFNetworkController isNetworkUp]
  -[MFNetworkController copyDiagnosticInformation]
  -[MFNetworkController inAirplaneMode]
  -[MFNetworkController isFatPipe]
  -[MFNetworkController is4GConnection]
  -[MFNetworkController is3GConnection]
  -[MFNetworkController copyCarrierBundleValue:]
  -[MFNetworkController isOnWWAN]
  -[MFNetworkController wifiObservable]
  -[MFNetworkController addNetworkObserverBlock:queue:]
  -[MFNetworkController _checkKeys:forStore:]
  -[MFNetworkController _inititializeWifiManager]
  -[MFNetworkController _setupSymptons]
  -[MFNetworkController _setDataStatus_nts:]
  -[MFNetworkController _updateActiveCalls]
  -[MFNetworkController _initializeDataStatus]
  -[MFNetworkController _isNetworkUp_nts]
  -[MFNetworkController dataStatus]
  -[MFNetworkController _simulationOverrideForType:actualValue:]
  -[MFNetworkController dataIndicator]
  -[MFNetworkController _networkAssertionWithIdentifier:]
  -[MFNetworkController removeNetworkObserver:]
  -[MFNetworkController networkObservable]
  -[MFNetworkController _updateWifiClientType]
  -[MFNetworkController _carrierBundleDidChange]
  -[MFNetworkController isDataAvailable]
  -[MFNetworkController hasAlternateAdvice]
  -[MFNetworkController _setFlags:forReachability:]
  -[MFNetworkController _handleWiFiNotification:]
  -[MFNetworkController addBackgroundWifiClient:]
  -[MFNetworkController removeBackgroundWifiClient:]
  -[MFNetworkController awdNetworkDiagnosticReport]


_MFNetworkObserver : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[_MFNetworkObserver .cxx_destruct]
  -[_MFNetworkObserver execute]
  -[_MFNetworkObserver initWithBlock:queue:]


MFOutgoingMessageContent : NSObject /usr/lib/libsqlite3.dylib
 @property  MFMutableMessageHeaders *headers
 @property  NSArray *placeholders
 @property  MFOutgoingLibraryMessageContent *libraryContent
 @property  MFOutgoingRichtextMessageContent *richtextContent
 @property  MFOutgoingMultipartRelatedContent *multipartContent

  // instance methods
  -[MFOutgoingMessageContent copy]
  -[MFOutgoingMessageContent .cxx_destruct]
  -[MFOutgoingMessageContent setHeaders:]
  -[MFOutgoingMessageContent headers]
  -[MFOutgoingMessageContent setPlaceholders:]
  -[MFOutgoingMessageContent libraryContent]
  -[MFOutgoingMessageContent richtextContent]
  -[MFOutgoingMessageContent multipartContent]
  -[MFOutgoingMessageContent placeholders]


MFOutgoingLibraryMessageContent : MFOutgoingMessageContent
 @property  MFLibraryMessage *libraryMessage

  // instance methods
  -[MFOutgoingLibraryMessageContent copy]
  -[MFOutgoingLibraryMessageContent .cxx_destruct]
  -[MFOutgoingLibraryMessageContent headers]
  -[MFOutgoingLibraryMessageContent libraryMessage]
  -[MFOutgoingLibraryMessageContent libraryContent]
  -[MFOutgoingLibraryMessageContent setLibraryMessage:]


MFOutgoingRichtextMessageContent : MFOutgoingMessageContent
 @property  BOOL textPartsAreHTML
 @property  MFPlainTextDocument *plaintextAlternative
 @property  NSArray *mixedContent

  // instance methods
  -[MFOutgoingRichtextMessageContent copy]
  -[MFOutgoingRichtextMessageContent .cxx_destruct]
  -[MFOutgoingRichtextMessageContent richtextContent]
  -[MFOutgoingRichtextMessageContent setPlaintextAlternative:]
  -[MFOutgoingRichtextMessageContent setMixedContent:]
  -[MFOutgoingRichtextMessageContent textPartsAreHTML]
  -[MFOutgoingRichtextMessageContent setTextPartsAreHTML:]
  -[MFOutgoingRichtextMessageContent plaintextAlternative]
  -[MFOutgoingRichtextMessageContent mixedContent]


MFOutgoingMultipartRelatedContent : MFOutgoingRichtextMessageContent
 @property  NSString *htmlBody

  // instance methods
  -[MFOutgoingMultipartRelatedContent copy]
  -[MFOutgoingMultipartRelatedContent .cxx_destruct]
  -[MFOutgoingMultipartRelatedContent multipartContent]
  -[MFOutgoingMultipartRelatedContent setHtmlBody:]
  -[MFOutgoingMultipartRelatedContent htmlBody]


MFOutgoingMessageDelivery : NSObject /usr/lib/libsqlite3.dylib
 @property  <MFDeliveryDelegate> *delegate
 @property  MFAttachmentCompositionContext *attachmentContext
 @property  NSDictionary *compositionSpecification
 @property  unsigned long conversationFlags
 @property  MFMailMessage *originalMessage
 @property  long long originalConversationId
 @property  BOOL isUserRequested
 @property  long long action

  // class methods
  +[MFOutgoingMessageDelivery newWithMessage:]
  +[MFOutgoingMessageDelivery newWithHeaders:mixedContent:textPartsAreHTML:]
  +[MFOutgoingMessageDelivery newWithHeaders:HTML:plainTextAlternative:other:]

  // instance methods
  -[MFOutgoingMessageDelivery init]
  -[MFOutgoingMessageDelivery delegate]
  -[MFOutgoingMessageDelivery setDelegate:]
  -[MFOutgoingMessageDelivery .cxx_destruct]
  -[MFOutgoingMessageDelivery action]
  -[MFOutgoingMessageDelivery message]
  -[MFOutgoingMessageDelivery account]
  -[MFOutgoingMessageDelivery setAccount:]
  -[MFOutgoingMessageDelivery initWithMessage:]
  -[MFOutgoingMessageDelivery setAction:]
  -[MFOutgoingMessageDelivery originalMessage]
  -[MFOutgoingMessageDelivery isUserRequested]
  -[MFOutgoingMessageDelivery conversationFlags]
  -[MFOutgoingMessageDelivery initWithHeaders:mixedContent:textPartsAreHTML:]
  -[MFOutgoingMessageDelivery initWithHeaders:HTML:plainTextAlternative:other:]
  -[MFOutgoingMessageDelivery setConversationFlags:]
  -[MFOutgoingMessageDelivery compositionSpecification]
  -[MFOutgoingMessageDelivery originalHeaders]
  -[MFOutgoingMessageDelivery setArchiveAccount:]
  -[MFOutgoingMessageDelivery deliveryStatus]
  -[MFOutgoingMessageDelivery setCompositionSpecification:]
  -[MFOutgoingMessageDelivery setIsUserRequested:]
  -[MFOutgoingMessageDelivery originalMessageObjectID]
  -[MFOutgoingMessageDelivery setOriginalMessage:]
  -[MFOutgoingMessageDelivery deliverSynchronouslyWithCompletion:]
  -[MFOutgoingMessageDelivery _currentDeliveryObject]
  -[MFOutgoingMessageDelivery _deliverSynchronouslyWithCurrentSettings:]
  -[MFOutgoingMessageDelivery _deliveryAccountForInitializers]
  -[MFOutgoingMessageDelivery attachmentContext]
  -[MFOutgoingMessageDelivery setAttachmentContext:]
  -[MFOutgoingMessageDelivery originalConversationId]
  -[MFOutgoingMessageDelivery setOriginalConversationId:]


MFPersistence_iOS : EDPersistence /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <EFLoggable>
 @property  MFMailMessageLibrary *library
 @property  EDMailboxPersistence *mailboxPersistence
 @property  <EDAccountsProvider> *accountsProvider
 @property  <EMUserProfileProvider> *userProfileProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFPersistence_iOS log]

  // instance methods
  -[MFPersistence_iOS .cxx_destruct]
  -[MFPersistence_iOS database]
  -[MFPersistence_iOS library]
  -[MFPersistence_iOS setLibrary:]
  -[MFPersistence_iOS messageChangeManager]
  -[MFPersistence_iOS initWithPath:inMemoryIdentifier:library:propertyMapper:]
  -[MFPersistence_iOS searchableIndexManager]
  -[MFPersistence_iOS accountsProvider]
  -[MFPersistence_iOS messagePersistence]
  -[MFPersistence_iOS mailboxPersistence]
  -[MFPersistence_iOS scheduleRecurringActivity]
  -[MFPersistence_iOS localActionPersistence]
  -[MFPersistence_iOS setAccountsProvider:]
  -[MFPersistence_iOS userProfileProvider]
  -[MFPersistence_iOS _configureSearchableIndexManagerIfNecessary]
  -[MFPersistence_iOS setUpWithMailboxProvider:remoteSearchProvider:]
  -[MFPersistence_iOS conversationPersistence]
  -[MFPersistence_iOS setMailboxPersistence:]
  -[MFPersistence_iOS remoteSearchProvider]
  -[MFPersistence_iOS serverMessagePersistenceFactory]
  -[MFPersistence_iOS threadPersistence]
  -[MFPersistence_iOS setUserProfileProvider:]


MFPersistenceDatabase_iOS : EDPersistenceDatabase /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <EFLoggable, MFMailMessageLibraryMigratorDelegate>
 @property  id migrationLock
 @property  BOOL migrationHasRun
 @property  BOOL createdTempTable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFPersistenceDatabase_iOS log]

  // instance methods
  -[MFPersistenceDatabase_iOS .cxx_destruct]
  -[MFPersistenceDatabase_iOS openConnectionIsWriter:]
  -[MFPersistenceDatabase_iOS mailMessageLibraryMigrator:isInitializingDatabaseWithConnection:]
  -[MFPersistenceDatabase_iOS mailMessageLibraryMigratorScheduleSpotlightReindex:]
  -[MFPersistenceDatabase_iOS mailMessageLibraryMigrator:attachProtectedDatabaseWithName:connection:error:]
  -[MFPersistenceDatabase_iOS mailMessageLibraryMigrator:detachProtectedDatabaseWithConnection:]
  -[MFPersistenceDatabase_iOS initWithBasePath:databaseName:maxConcurrentReaders:schema:protectedSchema:propertyMapper:protectedDatabasePersistence:]
  -[MFPersistenceDatabase_iOS checkOutConnectionIsWriter:]
  -[MFPersistenceDatabase_iOS checkInConnection:]
  -[MFPersistenceDatabase_iOS migrationLock]
  -[MFPersistenceDatabase_iOS migrationHasRun]
  -[MFPersistenceDatabase_iOS setMigrationHasRun:]
  -[MFPersistenceDatabase_iOS createdTempTable]
  -[MFPersistenceDatabase_iOS setCreatedTempTable:]
  -[MFPersistenceDatabase_iOS enforceDataProtection]


MFPersistenceDatabaseConnection_iOS : EDPersistenceDatabaseConnection /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation
  // instance methods
  -[MFPersistenceDatabaseConnection_iOS dealloc]
  -[MFPersistenceDatabaseConnection_iOS .cxx_destruct]
  -[MFPersistenceDatabaseConnection_iOS handleSQLResult:message:]
  -[MFPersistenceDatabaseConnection_iOS configureSQLConnection]
  -[MFPersistenceDatabaseConnection_iOS _handleCorruptDatabase]
  -[MFPersistenceDatabaseConnection_iOS _handleFullDatabase]
  -[MFPersistenceDatabaseConnection_iOS _handleProtectedDataIOError]
  -[MFPersistenceDatabaseConnection_iOS _handleInvalidDatabaseIOError]
  -[MFPersistenceDatabaseConnection_iOS _handleDetachedDatabaseIOError]
  -[MFPersistenceDatabaseConnection_iOS _handleIOError]
  -[MFPersistenceDatabaseConnection_iOS _handleBusyError]
  -[MFPersistenceDatabaseConnection_iOS _logFileSystemStats]
  -[MFPersistenceDatabaseConnection_iOS transactionTypeForWriting]


MFPersistenceDatabaseSchema_iOS : EDPersistenceDatabaseSchema /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <EDPersistenceDatabaseSchemaProvider>
  // class methods
  +[MFPersistenceDatabaseSchema_iOS _messagesTableSchemaAndAssociationsToResolve:]
  +[MFPersistenceDatabaseSchema_iOS mailboxesTableSchema]
  +[MFPersistenceDatabaseSchema_iOS messageDataTableSchema]
  +[MFPersistenceDatabaseSchema_iOS messageDataDeletedTableSchema]
  +[MFPersistenceDatabaseSchema_iOS popUIDsTableSchema]
  +[MFPersistenceDatabaseSchema_iOS accountsTableSchema]
  +[MFPersistenceDatabaseSchema_iOS additionalSchemaProviders]
  +[MFPersistenceDatabaseSchema_iOS tablesAndForeignKeysToResolve:associationsToResolve:]


MFPowerController : NSObject /usr/lib/libsqlite3.dylib <MFDiagnosticsGenerator>
 @property  EFObservable *pluggedInObservable
 @property  EFObservable *lowPowerModeObservable
 @property  EFObservable *batteryLevelObservable
 @property  float batteryLevel
 @property  BOOL pluggedIn
 @property  BOOL batterySaverModeEnabled
 @property  BOOL holdingAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFPowerController sharedInstance]
  +[MFPowerController powerlog:eventData:]

  // instance methods
  -[MFPowerController init]
  -[MFPowerController dealloc]
  -[MFPowerController .cxx_destruct]
  -[MFPowerController batteryLevel]
  -[MFPowerController isPluggedIn]
  -[MFPowerController copyDiagnosticInformation]
  -[MFPowerController isBatterySaverModeEnabled]
  -[MFPowerController retainAssertionWithIdentifier:withAccount:]
  -[MFPowerController releaseAssertionWithIdentifier:]
  -[MFPowerController lowPowerModeObservable]
  -[MFPowerController pluggedInObservable]
  -[MFPowerController batteryLevelObservable]
  -[MFPowerController _setPluggedIn:]
  -[MFPowerController _registerForBatteryLevelChanges]
  -[MFPowerController _applicationForegroundStateChanged:]
  -[MFPowerController _unregisterForBatteryLevelChanges]
  -[MFPowerController _releasePowerAssertion_nts]
  -[MFPowerController _retainPowerAssertion_nts]
  -[MFPowerController _lowPowerModeChangedNotification:]
  -[MFPowerController _assertionTimeout]
  -[MFPowerController _setupAssertionTimer:]
  -[MFPowerController _retainTaskAssertion_nts]
  -[MFPowerController retainAssertionWithIdentifier:]
  -[MFPowerController _releaseTaskAssertion_nts]
  -[MFPowerController _applicationForegroundStateChanged_nts:]
  -[MFPowerController powerObservable]
  -[MFPowerController batteryLevelStateChangeNotificationObservable]
  -[MFPowerController _batteryInformationChanged]
  -[MFPowerController isHoldingAssertion]
  -[MFPowerController _isHoldingTaskAssertion]
  -[MFPowerController startListeningForBatterySaverNotifications]


MFProtectedDatabasePersistence_iOS : EDProtectedDatabasePersistence /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation
  // class methods
  +[MFProtectedDatabasePersistence_iOS protectedDatabaseName]
  +[MFProtectedDatabasePersistence_iOS journalDatabaseName]

  // instance methods
  -[MFProtectedDatabasePersistence_iOS protectedDataAvailable]
  -[MFProtectedDatabasePersistence_iOS finishJournalReconciliation:]
  -[MFProtectedDatabasePersistence_iOS addAdditionalCriteriaToCleanupActivity:]
  -[MFProtectedDatabasePersistence_iOS supportsJournaling]


MFRequestQueue : NSObject /usr/lib/libsqlite3.dylib <EFLoggable>
 @property  NSMutableArray *requestPairs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFRequestQueue log]
  +[MFRequestQueue signpostLog]

  // instance methods
  -[MFRequestQueue init]
  -[MFRequestQueue .cxx_destruct]
  -[MFRequestQueue addRequest:]
  -[MFRequestQueue signpostID]
  -[MFRequestQueue addRequests:]
  -[MFRequestQueue processRequests:]
  -[MFRequestQueue _processRequests:]
  -[MFRequestQueue processRequest:]
  -[MFRequestQueue requestPairs]
  -[MFRequestQueue setRequestPairs:]


MFRFC822AttachmentDataProvider : NSObject /usr/lib/libsqlite3.dylib <MFAttachmentDataProviderProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFRFC822AttachmentDataProvider .cxx_destruct]
  -[MFRFC822AttachmentDataProvider initWithMessageData:parentPart:]
  -[MFRFC822AttachmentDataProvider fetchDataForAttachment:consumer:progress:completion:]
  -[MFRFC822AttachmentDataProvider messageForAttachment:]
  -[MFRFC822AttachmentDataProvider fetchLocalDataForAttachment:]
  -[MFRFC822AttachmentDataProvider storageLocationForAttachment:withMessage:]
  -[MFRFC822AttachmentDataProvider initWithMessageData:parentPart:managed:]
  -[MFRFC822AttachmentDataProvider initWithMessage:parentPart:]
  -[MFRFC822AttachmentDataProvider initWithMessage:parentPart:managed:]


MFSearchableIndex_iOS : EDSearchableIndex /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <EFLoggable, MFDiagnosticsGenerator>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFSearchableIndex_iOS log]

  // instance methods
  -[MFSearchableIndex_iOS isPluggedIn]
  -[MFSearchableIndex_iOS powerObservable]
  -[MFSearchableIndex_iOS initWithName:dataSource:reasonProvider:]
  -[MFSearchableIndex_iOS _indexMessage:includeBody:indexingType:]
  -[MFSearchableIndex_iOS indexMessages:includeBody:indexingType:]
  -[MFSearchableIndex_iOS canIndexAttachments]
  -[MFSearchableIndex_iOS logPowerEventWithIdentifier:eventData:]
  -[MFSearchableIndex_iOS shouldCancelSearchQuery]
  -[MFSearchableIndex_iOS addSearchQueryCancelable:]
  -[MFSearchableIndex_iOS removeSearchQueryCancelable:]


MFSearchableIndexItem_iOS : EDSearchableIndexItem /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFSearchableIndexItem_iOS log]

  // instance methods
  -[MFSearchableIndexItem_iOS shouldExcludeFromIndex]
  -[MFSearchableIndexItem_iOS setNeedsAllAttributesIndexingType]
  -[MFSearchableIndexItem_iOS _shouldAutoDownloadAttachment:]
  -[MFSearchableIndexItem_iOS addAttachmentAttributesToAttributeSet:]
  -[MFSearchableIndexItem_iOS fetchIndexableAttachments]


MFSearchableIndexManager_iOS : EDSearchableIndexManager /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <EDSearchableIndexReasonProvider>
 @property  EDSearchableIndex *index
 @property  EDSearchableIndexPersistence *persistence
 @property  EDSearchableIndexScheduler *scheduler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *dataSourceRefreshReasons
 @property  NSSet *purgeReasons
 @property  NSSet *exclusionReasons
 @property  NSSet *currentReasons

  // instance methods
  -[MFSearchableIndexManager_iOS .cxx_destruct]
  -[MFSearchableIndexManager_iOS index]
  -[MFSearchableIndexManager_iOS setIndex:]
  -[MFSearchableIndexManager_iOS persistence]
  -[MFSearchableIndexManager_iOS scheduler]
  -[MFSearchableIndexManager_iOS setScheduler:]
  -[MFSearchableIndexManager_iOS setPersistence:]
  -[MFSearchableIndexManager_iOS enableIndexingAndBeginScheduling:]
  -[MFSearchableIndexManager_iOS initWithDatabase:hookResponder:]
  -[MFSearchableIndexManager_iOS dataSourceRefreshReasons]
  -[MFSearchableIndexManager_iOS purgeReasons]
  -[MFSearchableIndexManager_iOS exclusionReasons]
  -[MFSearchableIndexManager_iOS currentReasons]


MFSearchableIndexPersistence_iOS : EDSearchableIndexPersistence /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation <EFLoggable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[MFSearchableIndexPersistence_iOS log]
  +[MFSearchableIndexPersistence_iOS searchableIndexItemsFromMessages:type:]

  // instance methods
  -[MFSearchableIndexPersistence_iOS searchableIndexItemsFromMessages:type:]
  -[MFSearchableIndexPersistence_iOS _verificationDataFromMessage:messageIDTransactionIDDictionary:]
  -[MFSearchableIndexPersistence_iOS messagesRowIDWhereSubClause]
  -[MFSearchableIndexPersistence_iOS messagesWhere:sortedBy:limit:]
  -[MFSearchableIndexPersistence_iOS attachmentItemMetadataForAttachmentID:messagePersistentID:name:result:]
  -[MFSearchableIndexPersistence_iOS verificationDataSamplesFromMessageIDTransactionIDDictionary:]


MFSecureMIMECompositionManager : NSObject /usr/lib/libsqlite3.dylib
 @property  <MFSecureMIMECompositionManagerDelegate> *delegate
 @property  NSString *sendingAddress
 @property  MailAccount *sendingAccount
 @property  int signingPolicy
 @property  int encryptionPolicy
 @property  int signingStatus
 @property  int encryptionStatus
 @property  NSSet *recipients

  // class methods
  +[MFSecureMIMECompositionManager copySigningIdentityForAccount:sendingAddress:error:]
  +[MFSecureMIMECompositionManager copyEncryptionIdentityForAccount:sendingAddress:error:]
  +[MFSecureMIMECompositionManager evaluateTrustForSigningCertificate:sendingAddress:]
  +[MFSecureMIMECompositionManager copyEncryptionCertificatesForAccount:recipientAddresses:errorsByAddress:]

  // instance methods
  -[MFSecureMIMECompositionManager init]
  -[MFSecureMIMECompositionManager dealloc]
  -[MFSecureMIMECompositionManager invalidate]
  -[MFSecureMIMECompositionManager delegate]
  -[MFSecureMIMECompositionManager setDelegate:]
  -[MFSecureMIMECompositionManager .cxx_destruct]
  -[MFSecureMIMECompositionManager recipients]
  -[MFSecureMIMECompositionManager addRecipients:]
  -[MFSecureMIMECompositionManager setSendingAddress:]
  -[MFSecureMIMECompositionManager compositionSpecification]
  -[MFSecureMIMECompositionManager initWithSendingAccount:signingPolicy:encryptionPolicy:]
  -[MFSecureMIMECompositionManager _updateSigningStatus_nts]
  -[MFSecureMIMECompositionManager _updateEncryptionStatus_nts]
  -[MFSecureMIMECompositionManager _notifyDelegateEncryptionStatusDidChange:certsByRecipient:errorsByRecipient:identity:error:]
  -[MFSecureMIMECompositionManager _determineEncryptionStatusWithNewRecipients:]
  -[MFSecureMIMECompositionManager _notifyDelegateSigningStatusDidChange:identity:error:]
  -[MFSecureMIMECompositionManager _determineIdentitiesWithSendingAddress:forSigning:encryption:]
  -[MFSecureMIMECompositionManager _determineSigningStatusWithSendingAddress:]
  -[MFSecureMIMECompositionManager _determineEncryptionStatusWithSendingAddress:]
  -[MFSecureMIMECompositionManager _nts_setSigningIdentity:error:]
  -[MFSecureMIMECompositionManager _nts_setEncryptionIdentity:error:]
  -[MFSecureMIMECompositionManager _nts_copySigningIdentity:error:]
  -[MFSecureMIMECompositionManager _determineTrustStatusForSigningIdentity:sendingAddress:]
  -[MFSecureMIMECompositionManager _nts_copyEncryptionIdentity:error:certificatesByRecipient:errorsByRecipient:]
  -[MFSecureMIMECompositionManager _shouldAllowSend_nts]
  -[MFSecureMIMECompositionManager _shouldSign_nts]
  -[MFSecureMIMECompositionManager _shouldEncrypt_nts]
  -[MFSecureMIMECompositionManager initWithSigningPolicy:encryptionPolicy:]
  -[MFSecureMIMECompositionManager removeRecipients:]
  -[MFSecureMIMECompositionManager sendingAddress]
  -[MFSecureMIMECompositionManager sendingAccount]
  -[MFSecureMIMECompositionManager signingPolicy]
  -[MFSecureMIMECompositionManager encryptionPolicy]
  -[MFSecureMIMECompositionManager signingStatus]
  -[MFSecureMIMECompositionManager encryptionStatus]
  -[MFSecureMIMECompositionManager shouldAllowSend]


MFServerMessagePersistenceFactory_iOS : EDServerMessagePersistenceFactory /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation
 @property  MFMailMessageLibrary *library

  // instance methods
  -[MFServerMessagePersistenceFactory_iOS .cxx_destruct]
  -[MFServerMessagePersistenceFactory_iOS library]
  -[MFServerMessagePersistenceFactory_iOS setLibrary:]
  -[MFServerMessagePersistenceFactory_iOS initWithLibrary:database:]
  -[MFServerMessagePersistenceFactory_iOS mailboxIDForMailboxURL:useNumericSearch:supportsLabels:]


MFSignatures : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFSignatures sharedInstance]
  +[MFSignatures signatureMarkupFormat:]
  +[MFSignatures signaturePlainTextFormat:]

  // instance methods
  -[MFSignatures init]
  -[MFSignatures signature]
  -[MFSignatures setSignature:]
  -[MFSignatures _modelSpecificLocalizedStringKeyForKey:]
  -[MFSignatures _getValue:]
  -[MFSignatures defaultSignature]
  -[MFSignatures signatureForAccount:]
  -[MFSignatures useAccountSignatures]
  -[MFSignatures setSignature:forAccount:]
  -[MFSignatures signatureForSendingEmailAddress:]
  -[MFSignatures clearSignature]
  -[MFSignatures setUseAccountSignatures:]
  -[MFSignatures setSignature:forEmailAddress:]
  -[MFSignatures signatureMarkupForSendingEmailAddress:]
  -[MFSignatures signaturePlainTextForSendingEmailAddress:]


MFSMTPConnection : MFConnection
  // instance methods
  -[MFSMTPConnection init]
  -[MFSMTPConnection setDelegate:]
  -[MFSMTPConnection .cxx_destruct]
  -[MFSMTPConnection state]
  -[MFSMTPConnection domainName]
  -[MFSMTPConnection abort]
  -[MFSMTPConnection setDomainName:]
  -[MFSMTPConnection lastResponse]
  -[MFSMTPConnection sendData:]
  -[MFSMTPConnection authenticateUsingAccount:]
  -[MFSMTPConnection connectUsingAccount:]
  -[MFSMTPConnection quit]
  -[MFSMTPConnection authenticationMechanisms]
  -[MFSMTPConnection authenticateUsingAccount:authenticator:]
  -[MFSMTPConnection maximumMessageBytes]
  -[MFSMTPConnection supportsOutboxCopy]
  -[MFSMTPConnection _hasParameter:forKeyword:]
  -[MFSMTPConnection _supportsSaveSentExtension]
  -[MFSMTPConnection _supportsExtension:]
  -[MFSMTPConnection _sendCommand:length:argument:trailer:]
  -[MFSMTPConnection _getReply]
  -[MFSMTPConnection lastResponseLine]
  -[MFSMTPConnection _connectUsingAccount:]
  -[MFSMTPConnection _doHandshakeUsingAccount:]
  -[MFSMTPConnection supportsBinaryMime]
  -[MFSMTPConnection supports8BitMime]
  -[MFSMTPConnection _sendData:progressHandler:]
  -[MFSMTPConnection _dataForCommand:length:argument:trailer:]
  -[MFSMTPConnection supportsChunking]
  -[MFSMTPConnection supportsPipelining]
  -[MFSMTPConnection dataForMailFrom:]
  -[MFSMTPConnection dataForRcptTo:]
  -[MFSMTPConnection dataForDataCmd]
  -[MFSMTPConnection _sendData:]
  -[MFSMTPConnection sendBData:]
  -[MFSMTPConnection mailFrom:]
  -[MFSMTPConnection rcptTo:]
  -[MFSMTPConnection _setLastResponse:]
  -[MFSMTPConnection _sendBytes:length:progressHandler:]
  -[MFSMTPConnection _readResponseRange:isContinuation:]
  -[MFSMTPConnection supportsEnhancedStatusCodes]
  -[MFSMTPConnection noop]
  -[MFSMTPConnection mailFrom:recipients:withData:host:errorTitle:errorMessage:serverResponse:displayError:errorCode:errorUserInfo:]
  -[MFSMTPConnection timeLastCommandWasSent]
  -[MFSMTPConnection setUseSaveSent:toFolder:]


MFTaskAssertion : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFTaskAssertion log]

  // instance methods
  -[MFTaskAssertion dealloc]
  -[MFTaskAssertion invalidate]
  -[MFTaskAssertion isValid]
  -[MFTaskAssertion .cxx_destruct]
  -[MFTaskAssertion initWithName:]
  -[MFTaskAssertion cancelTimer]
  -[MFTaskAssertion initWithName:expiration:preventIdleSleep:]
  -[MFTaskAssertion initWithName:preventIdleSleep:]


MFThreadFuzzyMatcher : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[MFThreadFuzzyMatcher matchMessageReferenceContext:withCandidateMessageReferenceContexts:]


MFUnreadCountProbe : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFUnreadCountProbe addProbeWithConnection:]


MFUserDefaultMigrator : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFUserDefaultMigrator log]
  +[MFUserDefaultMigrator migrateDefaults:]
  +[MFUserDefaultMigrator oldKeysToNewKeysMap]
  +[MFUserDefaultMigrator migrateDefaultsFromOldKeysToNewKeys:]
  +[MFUserDefaultMigrator _keysToMigrateToSharedAppGroup]
  +[MFUserDefaultMigrator _migrateExtPropertiesPlist]
  +[MFUserDefaultMigrator currentDeviceIdentifer]
  +[MFUserDefaultMigrator migratePropertyForOldKey:newKey:]
  +[MFUserDefaultMigrator mobileMailDefaultForKey:]
  +[MFUserDefaultMigrator removeMobileMailDefaultForKey:]
  +[MFUserDefaultMigrator migratePreferencesToSharedAppGroup]


_MFWeakObjectCacheRef : NSObject /usr/lib/libsqlite3.dylib
 @property  <NSCopying> *key
 @property  MFWeakObjectCache *cache

  // instance methods
  -[_MFWeakObjectCacheRef dealloc]
  -[_MFWeakObjectCacheRef key]
  -[_MFWeakObjectCacheRef .cxx_destruct]
  -[_MFWeakObjectCacheRef setKey:]
  -[_MFWeakObjectCacheRef setCache:]
  -[_MFWeakObjectCacheRef cache]


MFWeakObjectCache : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[MFWeakObjectCache dealloc]
  -[MFWeakObjectCache objectForKey:]
  -[MFWeakObjectCache removeObjectForKey:]
  -[MFWeakObjectCache initWithBlock:]
  -[MFWeakObjectCache objectForKey:wasCached:]
  -[MFWeakObjectCache objectForKey:shouldGenerate:wasCached:]
  -[MFWeakObjectCache weakObjectCacheRefForKey:]


MFMimeEnrichedReader : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFMimeEnrichedReader parenSet]
  +[MFMimeEnrichedReader punctuationSet]

  // instance methods
  -[MFMimeEnrichedReader dealloc]
  -[MFMimeEnrichedReader currentFont]
  -[MFMimeEnrichedReader parseParameterString:]
  -[MFMimeEnrichedReader nowWouldBeAGoodTimeToAppendToTheAttributedString]
  -[MFMimeEnrichedReader handleNoParameterCommand:]
  -[MFMimeEnrichedReader setupFontStackEntry:]
  -[MFMimeEnrichedReader mismatchError:]
  -[MFMimeEnrichedReader appendNewLine:]
  -[MFMimeEnrichedReader resetStateWithString:outputString:]
  -[MFMimeEnrichedReader readTokenInto:]
  -[MFMimeEnrichedReader beginCommand:]
  -[MFMimeEnrichedReader endCommand:]
  -[MFMimeEnrichedReader appendStringToBuffer:]
  -[MFMimeEnrichedReader closeUpQuoting]
  -[MFMimeEnrichedReader setWantsHTML:]
  -[MFMimeEnrichedReader convertRichTextString:intoOutputString:]
  -[MFMimeEnrichedReader convertEnrichedString:intoOutputString:]


MFMonitoredInvocation : NSInvocation /System/Library/Frameworks/CoreGraphics.framework/CoreGraphics
 @property  MFActivityMonitor *monitor
 @property  NSString *powerAssertionId

  // class methods
  +[MFMonitoredInvocation invocationWithMethodSignature:]
  +[MFMonitoredInvocation invocationWithSelector:target:object:taskName:priority:canBeCancelled:]
  +[MFMonitoredInvocation invocationWithSelector:target:taskName:priority:canBeCancelled:]
  +[MFMonitoredInvocation invocationWithSelector:target:object1:object2:taskName:priority:canBeCancelled:]

  // instance methods
  -[MFMonitoredInvocation dealloc]
  -[MFMonitoredInvocation .cxx_destruct]
  -[MFMonitoredInvocation invoke]
  -[MFMonitoredInvocation monitor]
  -[MFMonitoredInvocation mf_shouldLogInvocation]
  -[MFMonitoredInvocation setPowerAssertionId:]
  -[MFMonitoredInvocation setShouldLogInvocation:]
  -[MFMonitoredInvocation powerAssertionId]


MFMessageKeychainManager : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFMessageKeychainManager initialize]
  +[MFMessageKeychainManager copyIdentityForPersistentReference:error:]
  +[MFMessageKeychainManager copyClientSSLIdentityForHostName:error:]
  +[MFMessageKeychainManager persistentReferenceForIdentity:error:]
  +[MFMessageKeychainManager newTrustManager]
  +[MFMessageKeychainManager saveEncryptionCertificate:forAddress:]
  +[MFMessageKeychainManager copyEncryptionCertificateForAddress:error:]
  +[MFMessageKeychainManager addPassword:forServiceName:accountName:keychainAccessibility:synchronizable:error:]
  +[MFMessageKeychainManager passwordForServiceName:accountName:synchronizable:error:]
  +[MFMessageKeychainManager copySMIMESigningPolicyForAddress:]
  +[MFMessageKeychainManager _passwordForHost:username:port:keychainProtocol:]
  +[MFMessageKeychainManager _passwordForGenericAccount:service:error:]
  +[MFMessageKeychainManager passwordForServiceName:accountName:error:]
  +[MFMessageKeychainManager _matchSSLClientIdentity:withHostname:]
  +[MFMessageKeychainManager validateSigningIdentity:forAddress:error:]
  +[MFMessageKeychainManager _copyAllIdentitiesWithError:usingBlock:]
  +[MFMessageKeychainManager validateEncryptionIdentity:forAddress:error:]
  +[MFMessageKeychainManager _validateIdentity:forAddress:policy:usage:error:]
  +[MFMessageKeychainManager copySMIMEEncryptionPolicyForAddress:]
  +[MFMessageKeychainManager _copyCertificateForPersistent:error:]
  +[MFMessageKeychainManager _removeCertificateForPersistent:]
  +[MFMessageKeychainManager _addCertificate:persistent:]
  +[MFMessageKeychainManager _addPersistentMapping:forAddress:]
  +[MFMessageKeychainManager passwordForHost:username:port:keychainProtocol:]
  +[MFMessageKeychainManager setPassword:forHost:username:port:keychainProtocol:keychainAccessibility:]
  +[MFMessageKeychainManager removePasswordForHost:username:port:keychainProtocol:]
  +[MFMessageKeychainManager passwordForServiceName:accountName:]
  +[MFMessageKeychainManager setPassword:forServiceName:accountName:keychainAccessibility:]
  +[MFMessageKeychainManager removePasswordForServiceName:accountName:]
  +[MFMessageKeychainManager copyAllSigningIdentitiesForAddress:error:]
  +[MFMessageKeychainManager copyAllEncryptionIdentitiesForAddress:error:]


MFMessageURLConnectionDelegate : NSObject /usr/lib/libsqlite3.dylib <NSURLSessionDelegate>
 @property  EFFuture *future
 @property  NSURLResponse *response
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[MFMessageURLConnectionDelegate init]
  -[MFMessageURLConnectionDelegate .cxx_destruct]
  -[MFMessageURLConnectionDelegate response]
  -[MFMessageURLConnectionDelegate URLSession:task:didCompleteWithError:]
  -[MFMessageURLConnectionDelegate URLSession:dataTask:didReceiveData:]
  -[MFMessageURLConnectionDelegate URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[MFMessageURLConnectionDelegate future]


MFNTLMAuthScheme : ECAuthenticationScheme /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // instance methods
  -[MFNTLMAuthScheme name]
  -[MFNTLMAuthScheme humanReadableName]
  -[MFNTLMAuthScheme hasEncryption]
  -[MFNTLMAuthScheme authenticatorClass]
  -[MFNTLMAuthScheme sendsPlainTextPasswords]


_MFNTLMAuthenticator : ECSASLAuthenticator /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // instance methods
  -[_MFNTLMAuthenticator dealloc]
  -[_MFNTLMAuthenticator responseForServerData:]
  -[_MFNTLMAuthenticator setAuthenticationState:]


MFPlainAuthScheme : ECAuthenticationScheme /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // instance methods
  -[MFPlainAuthScheme name]
  -[MFPlainAuthScheme humanReadableName]
  -[MFPlainAuthScheme canAuthenticateAccountClass:connection:]
  -[MFPlainAuthScheme authenticatorForAccount:connection:]
  -[MFPlainAuthScheme authenticatorClass]


_MFPlainAuthenticator : ECSASLAuthenticator /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // instance methods
  -[_MFPlainAuthenticator saslName]
  -[_MFPlainAuthenticator responseForServerData:]
  -[_MFPlainAuthenticator justSentPlainTextPassword]


_MFLoginAuthenticator : ECSASLAuthenticator /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon
  // instance methods
  -[_MFLoginAuthenticator saslName]
  -[_MFLoginAuthenticator responseForServerData:]
  -[_MFLoginAuthenticator justSentPlainTextPassword]


MFPlainTextFragment : NSObject /usr/lib/libsqlite3.dylib

MFPlainTextDocument : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[MFPlainTextDocument string]
  -[MFPlainTextDocument .cxx_destruct]
  -[MFPlainTextDocument fragmentCount]
  -[MFPlainTextDocument getFormatFlowedString:insertedTrailingSpaces:encoding:]
  -[MFPlainTextDocument quotedString:]
  -[MFPlainTextDocument getString:quoteLevel:ofFragmentAtIndex:]
  -[MFPlainTextDocument appendString:withQuoteLevel:]
  -[MFPlainTextDocument archivedRepresentation]
  -[MFPlainTextDocument appendArchivedRepresentation:]


MFProgressiveMimeParser : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[MFProgressiveMimeParser setDelegate:]
  -[MFProgressiveMimeParser .cxx_destruct]
  -[MFProgressiveMimeParser data]
  -[MFProgressiveMimeParser start]
  -[MFProgressiveMimeParser context]
  -[MFProgressiveMimeParser setContext:]
  -[MFProgressiveMimeParser _reportError:]
  -[MFProgressiveMimeParser topLevelPart]
  -[MFProgressiveMimeParser _initializeTopLevelPartWithHeaders:]
  -[MFProgressiveMimeParser _continueParsing]
  -[MFProgressiveMimeParser _currentBoundary]
  -[MFProgressiveMimeParser _continueParsingStartOfPart]
  -[MFProgressiveMimeParser _continueParsingHeaders]
  -[MFProgressiveMimeParser _continueParsingBody]
  -[MFProgressiveMimeParser initWithBodyData:topLevelHeaders:headersToPreserve:]
  -[MFProgressiveMimeParser noteDataLengthChanged:]
  -[MFProgressiveMimeParser currentPart]


_MFSecCMSDecoder : NSObject /usr/lib/libsqlite3.dylib <MFCollectingDataConsumer>
 @property  int lastSecCMSError
 @property  NSArray *signers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_MFSecCMSDecoder dealloc]
  -[_MFSecCMSDecoder .cxx_destruct]
  -[_MFSecCMSDecoder data]
  -[_MFSecCMSDecoder appendData:]
  -[_MFSecCMSDecoder done]
  -[_MFSecCMSDecoder signedData]
  -[_MFSecCMSDecoder initWithPartData:error:]
  -[_MFSecCMSDecoder containsSignedContent]
  -[_MFSecCMSDecoder lastSecCMSError]
  -[_MFSecCMSDecoder verifyAgainstSenders:signingError:]
  -[_MFSecCMSDecoder signers]
  -[_MFSecCMSDecoder isContentEncrypted]
  -[_MFSecCMSDecoder isContentSigned]


_MFSecCMSEncoder : MFBufferedDataConsumer /System/Library/Frameworks/Security.framework/Security
 @property  int lastSecCMSError

  // instance methods
  -[_MFSecCMSEncoder dealloc]
  -[_MFSecCMSEncoder .cxx_destruct]
  -[_MFSecCMSEncoder data]
  -[_MFSecCMSEncoder appendData:]
  -[_MFSecCMSEncoder done]
  -[_MFSecCMSEncoder lastSecCMSError]
  -[_MFSecCMSEncoder initForSigningWithSender:compositionSpecification:error:]
  -[_MFSecCMSEncoder initForEncryptionWithCompositionSpecification:error:]
  -[_MFSecCMSEncoder _appendBytes:length:]


_MFSecDataMessageStore : MFDataMessageStore /System/Library/Frameworks/Security.framework/Security
 @property  NSString *storagePath

  // class methods
  +[_MFSecDataMessageStore classForMimePart]


SMTPAccount : DeliveryAccount
  // class methods
  +[SMTPAccount accountTypeString]
  +[SMTPAccount newDefaultInstance]
  +[SMTPAccount displayedAccountTypeString]
  +[SMTPAccount defaultPortNumber]
  +[SMTPAccount displayedShortAccountTypeString]
  +[SMTPAccount legacyKeychainProtocol]
  +[SMTPAccount isCommonPortNumber:]
  +[SMTPAccount saslProfileName]
  +[SMTPAccount registerAppleServiceDeliveryHostname:]

  // instance methods
  -[SMTPAccount dealloc]
  -[SMTPAccount .cxx_destruct]
  -[SMTPAccount serviceName]
  -[SMTPAccount releaseAllConnections]
  -[SMTPAccount preferredAuthScheme]
  -[SMTPAccount _shouldTryDirectSSLConnectionOnPort:]
  -[SMTPAccount connectionClass]
  -[SMTPAccount certUIService]
  -[SMTPAccount connectionServiceType]
  -[SMTPAccount releaseAllForcedConnections]
  -[SMTPAccount setPreferredAuthScheme:]
  -[SMTPAccount alternateConnectionSettings]
  -[SMTPAccount insecureConnectionSettings]
  -[SMTPAccount secureConnectionSettings]
  -[SMTPAccount deliveryClass]
  -[SMTPAccount canBeFallbackAccount]
  -[SMTPAccount supportsOutboxCopy]
  -[SMTPAccount checkInConnection:]
  -[SMTPAccount errorForResponse:]
  -[SMTPAccount supportsPipelining]
  -[SMTPAccount _defaultSettingsWithPort:useSSL:directSSL:]
  -[SMTPAccount connectionSettingsForAuthentication:secure:insecure:]
  -[SMTPAccount setSupportsPipelining:]
  -[SMTPAccount setSupportsOutboxCopy:]
  -[SMTPAccount disconnect:]
  -[SMTPAccount connectionExpired:]
  -[SMTPAccount setTimer]
  -[SMTPAccount _isAppleServiceDeliveryHostname:]
  -[SMTPAccount setDeliveryClass:]
  -[SMTPAccount customAuthenticationErrorStringForError:authScheme:]
  -[SMTPAccount authenticatedConnection:]


MFSMTPDelivery : MFMailDelivery
  // instance methods
  -[MFSMTPDelivery .cxx_destruct]
  -[MFSMTPDelivery setAccount:]
  -[MFSMTPDelivery deliveryClass]
  -[MFSMTPDelivery deliverMessageData:toRecipients:]
  -[MFSMTPDelivery _openConnection]


MFSMTPResponse : NSObject /usr/lib/libsqlite3.dylib <NSCopying>
 @property  int status
 @property  unsigned int statusClass
 @property  unsigned int statusSubject
 @property  unsigned int statusDetail
 @property  NSString *statusString
 @property  NSArray *continuationResponses

  // instance methods
  -[MFSMTPResponse copyWithZone:]
  -[MFSMTPResponse .cxx_destruct]
  -[MFSMTPResponse status]
  -[MFSMTPResponse setStatus:]
  -[MFSMTPResponse initWithStatus:]
  -[MFSMTPResponse statusString]
  -[MFSMTPResponse failureReason]
  -[MFSMTPResponse lastResponseLine]
  -[MFSMTPResponse errorMessageWithAddress:defaultMessage:]
  -[MFSMTPResponse setLastResponseLine:]
  -[MFSMTPResponse setContinuationResponses:]
  -[MFSMTPResponse _updateEnhancedStatusCodesFromLastResponse]
  -[MFSMTPResponse statusClass]
  -[MFSMTPResponse statusSubject]
  -[MFSMTPResponse statusDetail]
  -[MFSMTPResponse continuationResponses]


MFSqliteMessageIDStore : NSObject /usr/lib/libsqlite3.dylib
  // instance methods
  -[MFSqliteMessageIDStore .cxx_destruct]
  -[MFSqliteMessageIDStore _loadMailboxRowidIfNecessary:]
  -[MFSqliteMessageIDStore initWithLibrary:URLString:]
  -[MFSqliteMessageIDStore knownMessageIDsFromSet:]
  -[MFSqliteMessageIDStore messageIDsAddedBeforeDate:]
  -[MFSqliteMessageIDStore deleteUIDsNotInArray:]
  -[MFSqliteMessageIDStore numberOfMessageIDs]
  -[MFSqliteMessageIDStore deleteAllUIDs]
  -[MFSqliteMessageIDStore flagsForUID:]


_MFSearchMatcherContext : NSObject /usr/lib/libsqlite3.dylib
 @property  CPSearchMatcher *lastMatcher
 @property  char * lastSearchString
 @property  unsigned long lastSearchStringLength
 @property  NSMutableDictionary *matchers

  // instance methods
  -[_MFSearchMatcherContext dealloc]
  -[_MFSearchMatcherContext .cxx_destruct]
  -[_MFSearchMatcherContext flush]
  -[_MFSearchMatcherContext lastSearchString]
  -[_MFSearchMatcherContext setLastSearchString:]
  -[_MFSearchMatcherContext setMatchers:]
  -[_MFSearchMatcherContext matchers]
  -[_MFSearchMatcherContext lastMatcher]
  -[_MFSearchMatcherContext setLastMatcher:]
  -[_MFSearchMatcherContext lastSearchStringLength]
  -[_MFSearchMatcherContext setLastSearchStringLength:]


MFWebAttachmentSource : NSObject /usr/lib/libsqlite3.dylib
  // class methods
  +[MFWebAttachmentSource _setOfAllSources]
  +[MFWebAttachmentSource allSources]

  // instance methods
  -[MFWebAttachmentSource init]
  -[MFWebAttachmentSource dealloc]
  -[MFWebAttachmentSource .cxx_destruct]
  -[MFWebAttachmentSource removeAttachmentForURL:]
  -[MFWebAttachmentSource attachmentForURL:]
  -[MFWebAttachmentSource setAttachment:forURL:]


MFWebMessageDocument : MFWebAttachmentSource
 @property  BOOL visuallyEmpty
 @property  NSURL *baseURL
 @property  MFMimeBody *mimeBody
 @property  MFMimePart *mimePart
 @property  NSData *htmlData
 @property  unsigned int preferredEncoding
 @property  MFAttachmentManager *attachmentManager

  // instance methods
  -[MFWebMessageDocument init]
  -[MFWebMessageDocument baseURL]
  -[MFWebMessageDocument .cxx_destruct]
  -[MFWebMessageDocument fileWrapper]
  -[MFWebMessageDocument setPreferredEncoding:]
  -[MFWebMessageDocument mimeBody]
  -[MFWebMessageDocument isVisuallyEmpty]
  -[MFWebMessageDocument htmlData]
  -[MFWebMessageDocument preferredEncoding]
  -[MFWebMessageDocument initWithMimePart:htmlData:encoding:]
  -[MFWebMessageDocument setVisuallyEmpty:]
  -[MFWebMessageDocument initWithMimePart:]
  -[MFWebMessageDocument mimePart]
  -[MFWebMessageDocument attachmentManager]
  -[MFWebMessageDocument preferredCharacterSet]
  -[MFWebMessageDocument setAttachmentManager:]
  -[MFWebMessageDocument attachmentForURL:]
  -[MFWebMessageDocument _initWithMimePart:htmlData:]
  -[MFWebMessageDocument mimePartForURL:]
  -[MFWebMessageDocument initWithMimeBody:]
  -[MFWebMessageDocument attachmentsInDocument]


NSError(MFAccount)
	// instance methods
	-[NSError(MFAccount) mf_isInaccessibleAccountCredentialError]
	-[NSError(MFAccount) mf_isMissingAccountCredentialError]
	-[NSError(MFAccount) mf_isUserCancelledError]
	-[NSError(MFAccount) mf_moreInfo]
	-[NSError(MFAccount) mf_shortDescription]
	-[NSError(MFAccount) mf_isSMIMEError]
	-[NSError(MFAccount) mf_shouldBeReportedToUser]
	-[NSError(MFAccount) mf_shouldFailDownload]

NSString(FormatFlowedSupportInternal)
	// class methods
	+[NSString(FormatFlowedSupportInternal) mf_stringFromMimeRichTextString:asHTML:]
	+[NSString(FormatFlowedSupportInternal) mf_stringFromMimeEnrichedString:asHTML:]
	+[NSString(FormatFlowedSupportInternal) mf_messageIDStringWithDomainHint:]
	+[NSString(FormatFlowedSupportInternal) mf_stringForMimeTypeFromFileName:]
	+[NSString(FormatFlowedSupportInternal) mf_stringRepresentationForBytes:]
	+[NSString(FormatFlowedSupportInternal) mf_stringWithAttachmentCharacter]

	// instance methods
	-[NSString(FormatFlowedSupportInternal) mf_stringWithNoExtraSpaces]
	-[NSString(FormatFlowedSupportInternal) mf_betterStringByResolvingSymlinksInPath]
	-[NSString(FormatFlowedSupportInternal) mf_lineBreakBeforeIndex:withinRange:]
	-[NSString(FormatFlowedSupportInternal) mf_nextWordFromIndex:forward:]
	-[NSString(FormatFlowedSupportInternal) mf_convertFromFlowedText:visuallyEmpty:]
	-[NSString(FormatFlowedSupportInternal) mf_isSubdirectoryOfPath:]
	-[NSString(FormatFlowedSupportInternal) mf_stringByExpandingTildeWithSharedResourcesDirectoryInPath]
	-[NSString(FormatFlowedSupportInternal) mf_stringByReallyAbbreviatingSharedResourcesDirectoryWithTildeInPath]
	-[NSString(FormatFlowedSupportInternal) mf_makeDirectoryWithMode:]
	-[NSString(FormatFlowedSupportInternal) mf_prefixToString:]
	-[NSString(FormatFlowedSupportInternal) mf_uniqueFilenameWithRespectToFilenames:]
	-[NSString(FormatFlowedSupportInternal) mf_canonicalizedAbsolutePath]
	-[NSString(FormatFlowedSupportInternal) mf_containsSubstring:options:]
	-[NSString(FormatFlowedSupportInternal) mf_fileSystemString]
	-[NSString(FormatFlowedSupportInternal) mf_stringByEscapingHTMLCodes]
	-[NSString(FormatFlowedSupportInternal) mf_containsSubstring:]
	-[NSString(FormatFlowedSupportInternal) mf_stringByTrimmingWhitespaceAndNewlineCharacters]
	-[NSString(FormatFlowedSupportInternal) mf_stringByAbbreviatingSharedResourcesDirectoryWithTildeInPath]

NSDate(Goodies)
	// instance methods
	-[NSDate(Goodies) mf_descriptionForMimeHeaders]
	-[NSDate(Goodies) mf_replyPrefixForSender:]

NSDictionary(Goodies)
	// instance methods
	-[NSDictionary(Goodies) mf_boolForKey:]
	-[NSDictionary(Goodies) mf_integerForKey:]

NSMutableDictionary(Goodies)
	// instance methods
	-[NSMutableDictionary(Goodies) mf_setBool:forKey:]
	-[NSMutableDictionary(Goodies) mf_setInteger:forKey:]
	-[NSMutableDictionary(Goodies) mf_addObject:forKey:]
	-[NSMutableDictionary(Goodies) mf_objectForKey:ofClass:]

NSArray(SortedMailboxes)
	// instance methods
	-[NSArray(SortedMailboxes) mf_indexOfMailboxDictionaryWithName:]
	-[NSArray(SortedMailboxes) mf_enumerateByStoreUsingBlock:]

DAMailboxRequest(MFAdditions)
	// instance methods
	-[DAMailboxRequest(MFAdditions) mf_alwaysReportFailures]

ECHTMLStringAndMIMECharset(MFAdditions)
	// class methods
	+[ECHTMLStringAndMIMECharset(MFAdditions) mf_utf8HTMLStringWithString:]

EDMessagePersistence(MFMessageContentRequest)
	// instance methods
	-[EDMessagePersistence(MFMessageContentRequest) isMessageKnownToHaveNoMailDropAttachment:]
	-[EDMessagePersistence(MFMessageContentRequest) setIsMailDropAttachmentPresent:forMessage:]

NSInvocation(MailExtensions)
	// class methods
	+[NSInvocation(MailExtensions) log]
	+[NSInvocation(MailExtensions) mf_invocationWithSelector:target:object:]
	+[NSInvocation(MailExtensions) mf_invocationWithSelector:target:]
	+[NSInvocation(MailExtensions) mf_invocationWithSelector:target:object1:object2:]

	// instance methods
	-[NSInvocation(MailExtensions) mf_shouldLogInvocation]

NSNotificationCenter(MessageAdditions)
	// instance methods
	-[NSNotificationCenter(MessageAdditions) mf_addImmediateObserver:selector:name:object:]
	-[NSNotificationCenter(MessageAdditions) mf_removeObservers:]

NSURL(AttachmentURLUtilities)
	// instance methods
	-[NSURL(AttachmentURLUtilities) mf_lastPartNumber]
	-[NSURL(AttachmentURLUtilities) mf_rowID]
	-[NSURL(AttachmentURLUtilities) mf_isValidAttachmentURL]
	-[NSURL(AttachmentURLUtilities) mf_partNumbers]
	-[NSURL(AttachmentURLUtilities) mf_isResourceURL]
	-[NSURL(AttachmentURLUtilities) mf_firstPartNumber]

MFMimePart(SMIMESupport)
	// instance methods
	-[MFMimePart(SMIMESupport) newSignedPartWithData:sender:compositionSpecification:signatureData:]
	-[MFMimePart(SMIMESupport) newEncryptedPartWithData:compositionSpecification:encryptedData:]
	-[MFMimePart(SMIMESupport) SMIMEError]
	-[MFMimePart(SMIMESupport) copySigners]
	-[MFMimePart(SMIMESupport) _needsSignatureVerification:]
	-[MFMimePart(SMIMESupport) _setSigners:]
	-[MFMimePart(SMIMESupport) _setSMIMEError:]
	-[MFMimePart(SMIMESupport) decodeMultipartSigned]
	-[MFMimePart(SMIMESupport) decodeApplicationPkcs7_mime]

01 00 0500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountCredential 
01 00 0500 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: ASAccountActor 
01 00 0100 /System/Library/PrivateFrameworks/MailSupport.framework/MailSupport: AWDMailNetworkDiagnosticsReport 
01 00 0900 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSApplicationStateMonitor 
01 00 0900 /System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices: BKSProcessAssertion 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAsset 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKPublishAssetsOperation 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 0c00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 0800 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPAggregateDictionary 
01 00 0800 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 0800 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPSearchMatcher 
01 00 1200 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0200 /System/Library/Frameworks/CallKit.framework/CallKit: CXCallObserver 
01 00 0a00 /System/Library/PrivateFrameworks/CertUI.framework/CertUI: CertUIPrompt 
01 00 0a00 /System/Library/PrivateFrameworks/CertUI.framework/CertUI: CertUITrustManager 
01 00 1200 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAAction 
01 00 1400 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DABehaviorOptions 
01 00 1400 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DADConnection 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DADraftMessageRequest 
01 00 1400 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAFolderChange 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAMailMessage 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAMailboxDeleteMessageRequest 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAMailboxFetchMessageRequest 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAMailboxFetchSearchResultRequest 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAMailboxGetUpdatesRequest 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAMailboxRequest 
01 00 1400 /System/Library/PrivateFrameworks/DataAccessExpress.framework/DataAccessExpress: DAMailboxSearchQuery 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAMailboxSetFlagsRequest 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAMessageFetchAttachmentRequest 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAMessageMoveRequest 
01 00 1300 /System/Library/PrivateFrameworks/DataAccess.framework/DataAccess: DAResolveRecipientsRequest 
01 00 1600 /System/Library/PrivateFrameworks/EmailAddressing.framework/EmailAddressing: EAEmailAddressGenerator 
01 00 1600 /System/Library/PrivateFrameworks/EmailAddressing.framework/EmailAddressing: EAEmailAddressParser 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECAccountFactory 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECAngleBracketIDHash 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECAuthenticationScheme 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECEmailAddress 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECEmailAddressComponents 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECFlagChangeMessageAction 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECHTMLStringAndMIMECharset 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECIDNAEncoder 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECLocalMessageActionResults 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECMessageFlagChange 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECMessageFlags 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECNWConnectionWrapper 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECSASLAuthenticator 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECSecureMIMETrustEvaluation 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECServerMessage 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECSubject 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECSubjectFormatter 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECSubjectParser 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECTransferActionReplayer 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECTransferMessageAction 
01 00 1700 /System/Library/PrivateFrameworks/EmailCore.framework/EmailCore: ECTransferMessageActionResults 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDAddMessagesDeletedDateReceivedIndexUpgradeStep 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDAddThreadTablesUpgradeStep 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDConversationPersistence 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDLocalActionPersistence 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDMailboxPersistence 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDMessageChangeManager 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDMessagePersistence 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDMessageQueryParser 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDMigrateBlockedSenderEnabledToBlockedSenderActionEnumUpgradeStep 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDMigrateUserDefaultsUpgradeStep 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDPersistedMessageQueryIterator 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDPersistence 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDPersistenceDatabase 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDPersistenceDatabaseConnection 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDPersistenceDatabaseGenerationWindow 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDPersistenceDatabaseSchema 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDPersonaPersistenceLayoutManager 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDProtectedDatabasePersistence 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDRemoveUnusedSchemaTableUpgradeStep 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDRenameThreadsTableUpgradeStep 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDSearchableIndex 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDSearchableIndexBudgetConfiguration 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDSearchableIndexItem 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDSearchableIndexManager 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDSearchableIndexPersistence 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDSearchableIndexScheduler 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDSearchableIndexVerificationData 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDServerMessagePersistenceFactory 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDTableMetadataPersistence 
01 00 1800 /System/Library/PrivateFrameworks/EmailDaemon.framework/EmailDaemon: EDThreadPersistence 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFAutoBugCaptureReporter 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFCancelationToken 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFDevice 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFFuture 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFLazyCache 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFMutableInt64Set 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFObservable 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFObserver 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFPair 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFPriorityDesignator 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFPrivacy 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFProcessTransaction 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFPromise 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLAndExpression 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLColumnExpression 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLColumnSchema 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLConnection 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLDeleteStatement 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLIndexSchema 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLIndexedColumnSchema 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLInsertStatement 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLOrExpression 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLPropertyMapper 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLSchema 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLSelectStatement 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLTableSchema 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFSQLUpdateStatement 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFScheduler 
01 00 1900 /System/Library/PrivateFrameworks/EmailFoundation.framework/EmailFoundation: EFStringHash 
01 00 1a00 /System/Library/Frameworks/EventKit.framework/EventKit: EKEvent 
01 00 1a00 /System/Library/Frameworks/EventKit.framework/EventKit: EKEventStore 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMCertificateTrustInformation 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMContentRepresentation 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMDaemonInterfaceRequest 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMFeaturePreferences 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMListUnsubscribeDetector 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMailDropMetadata 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMailbox 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMailboxObjectID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMailboxScope 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessage 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageObjectID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMMessageSigner 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMObjectID 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMPersistenceLayoutManager 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSearchableIndexQuery 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: EMSecurityInformation 
01 00 1000 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 2700 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFBase64Decoder 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFBase64Encoder 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFBaseFilterDataConsumer 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFBufferedDataConsumer 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFConditionLock 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFData 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFDataHolder 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFDataMessageStore 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFDiagnostics 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFEmailSet 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFHTMLParser 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFLineEndingConverterFilter 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFLock 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessage 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageBody 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageDataContainer 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageFileWrapper 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageHeaders 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageStore 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageStoreObjectCache 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMessageTextAttachment 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMimeBody 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMimeCharset 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMimePart 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMimeTextAttachment 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMutableData 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMutableFilterDataConsumer 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFMutableMessageHeaders 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFProgressFilterDataConsumer 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFQuotedPrintableDecoder 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFQuotedPrintableEncoder 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFRangedDataFilter 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFRecursiveLock 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFTypeInfo 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFUUDecoder 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFWeakReferenceHolder 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFWeakSet 
01 00 2900 /System/Library/PrivateFrameworks/MIME.framework/MIME: MFZeroCopyDataConsumer 
01 00 2600 /System/Library/PrivateFrameworks/MailServices.framework/MailServices: MSAccounts 
01 00 0100 /System/Library/PrivateFrameworks/MailSupport.framework/MailSupport: MSFileCompression 
01 00 2600 /System/Library/PrivateFrameworks/MailServices.framework/MailServices: MSSaveEmail 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileWrapper 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLFileTypeMappings 
01 00 0b00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0b00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0800 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: RadiosPreferences 
01 00 1500 /System/Library/PrivateFrameworks/Email.framework/Email: _EMAttachmentContentItem 
