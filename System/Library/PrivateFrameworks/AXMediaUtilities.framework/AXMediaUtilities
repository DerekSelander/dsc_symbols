|| __DATA.__common _AXMRectNotApplicable
|| __DATA.__data _AXMBundleID
|| __DATA.__data _AXMConfidenceNotApplicable
|| __DATA.__data _AXMNodeCodingKeyEnabled
|| __DATA.__data _AXMNodeCodingKeyIdentifier
|| __DATA.__data _AXMServiceAccessEntitlement
|| __DATA.__data _AXMServiceIdentifier
|| __DATA.__data _AXMVisionFeatureAssetMetadataCodingKeyAssetURL
|| __DATA.__data _AXMVisionFeatureAssetMetadataCodingKeyCreationDate
|| __DATA.__data _AXMVisionFeatureAssetMetadataCodingKeyEXIFUserComment
|| __DATA.__data _AXMVisionFeatureAssetMetadataCodingKeyIPTCCaptionAbstract
|| __DATA.__data _AXMVisionFeatureAssetMetadataCodingKeyLocalizedTypeDescription
|| __DATA.__data _AXMVisionFeatureAssetMetadataCodingKeyName
|| __DATA.__data _AXMVisionFeatureAssetMetadataCodingKeyPNGImageDescription
|| __DATA.__data _AXMVisionFeatureAssetMetadataCodingKeyTIFFImageDescription
|| __DATA.__data _AXMVisionFeatureAssetMetadataCodingKeyUTI
|| __DATA.__data _AXMVisionFeatureCodingKeyAesthetics
|| __DATA.__data _AXMVisionFeatureCodingKeyAssetMetadata
|| __DATA.__data _AXMVisionFeatureCodingKeyBarcodeType
|| __DATA.__data _AXMVisionFeatureCodingKeyBlur
|| __DATA.__data _AXMVisionFeatureCodingKeyBrightness
|| __DATA.__data _AXMVisionFeatureCodingKeyCameraType
|| __DATA.__data _AXMVisionFeatureCodingKeyCanvasSize
|| __DATA.__data _AXMVisionFeatureCodingKeyCaptionMayContainSensitiveContent
|| __DATA.__data _AXMVisionFeatureCodingKeyColorInfo
|| __DATA.__data _AXMVisionFeatureCodingKeyConfidence
|| __DATA.__data _AXMVisionFeatureCodingKeyDeviceMotion
|| __DATA.__data _AXMVisionFeatureCodingKeyDeviceOrientation
|| __DATA.__data _AXMVisionFeatureCodingKeyFaceDetectionResult
|| __DATA.__data _AXMVisionFeatureCodingKeyFaceID
|| __DATA.__data _AXMVisionFeatureCodingKeyFeatureGates
|| __DATA.__data _AXMVisionFeatureCodingKeyFeatureType
|| __DATA.__data _AXMVisionFeatureCodingKeyFrame
|| __DATA.__data _AXMVisionFeatureCodingKeyHorizonAngle
|| __DATA.__data _AXMVisionFeatureCodingKeyHorizonTransform
|| __DATA.__data _AXMVisionFeatureCodingKeyIsLowConfidence
|| __DATA.__data _AXMVisionFeatureCodingKeyModelID
|| __DATA.__data _AXMVisionFeatureCodingKeyNormalizedFrame
|| __DATA.__data _AXMVisionFeatureCodingKeyOCRFeatureType
|| __DATA.__data _AXMVisionFeatureCodingKeyUIClass
|| __DATA.__data _AXMVisionFeatureCodingKeyUserContext
|| __DATA.__data _AXMVisionFeatureCodingKeyValue
|| __DATA.__data _AXMVisionNativeVideoPixelBufferFormat
|| __DATA.__data _AXMVisionResultCodingKeyFeatures
|| __DATA.__data _AXMVisionResultCodingKeyImage
|| __DATA.__objc_data _OBJC_CLASS_$_AXANFDDetectedObject
|| __DATA.__objc_data _OBJC_CLASS_$_AXMADSREnvelope
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAVCaptureSessionNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAVPlayerItemNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAVUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAXElementDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAXElementVisionEngine
|| __DATA.__objc_data _OBJC_CLASS_$_AXMActiveSound
|| __DATA.__objc_data _OBJC_CLASS_$_AXMActiveSoundOutputAction
|| __DATA.__objc_data _OBJC_CLASS_$_AXMActiveSoundOutputActionHandle
|| __DATA.__objc_data _OBJC_CLASS_$_AXMActiveSoundOutputActionHandleImpl
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAddressFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAssetManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAssetMetadataNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAudioDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAudioDataSourceMixer
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAudioEffect
|| __DATA.__objc_data _OBJC_CLASS_$_AXMAudioSession
|| __DATA.__objc_data _OBJC_CLASS_$_AXMBarcodeNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMCameraFrameContext
|| __DATA.__objc_data _OBJC_CLASS_$_AXMCameraMetadataNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMCaptionDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMCaptureManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXMCaptureSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AXMCaptureVideoDataOutput
|| __DATA.__objc_data _OBJC_CLASS_$_AXMCompressor
|| __DATA.__objc_data _OBJC_CLASS_$_AXMCoreMotionNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDataPoint
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDataRegressionModel
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDataRegressionModelExponential
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDataRegressionModelLinear
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDataRegressionModelLogarithmic
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDataRegressionModelPower
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDataRegressionModelSine
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDataSonifier
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDataSummary
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDescriptionBuilder
|| __DATA.__objc_data _OBJC_CLASS_$_AXMDeviceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AXMFaceDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMFunctionTone
|| __DATA.__objc_data _OBJC_CLASS_$_AXMGeometryUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_AXMHapticComponent
|| __DATA.__objc_data _OBJC_CLASS_$_AXMHapticOutputAction
|| __DATA.__objc_data _OBJC_CLASS_$_AXMHorizonDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMIconClassDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMIconVisionEngine
|| __DATA.__objc_data _OBJC_CLASS_$_AXMImageAestheticsNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMImageCaptionModelAssetManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXMImageNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMLiveContinuousTone
|| __DATA.__objc_data _OBJC_CLASS_$_AXMMobileAssetEvaluationNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMModelDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMNSFWDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMOneShotSoundOutputAction
|| __DATA.__objc_data _OBJC_CLASS_$_AXMOutputAction
|| __DATA.__objc_data _OBJC_CLASS_$_AXMOutputActionHandle
|| __DATA.__objc_data _OBJC_CLASS_$_AXMOutputComponent
|| __DATA.__objc_data _OBJC_CLASS_$_AXMOutputManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXMOutputRequest
|| __DATA.__objc_data _OBJC_CLASS_$_AXMOutputRequestHandle
|| __DATA.__objc_data _OBJC_CLASS_$_AXMPhotoVisionSupport
|| __DATA.__objc_data _OBJC_CLASS_$_AXMPipelineContextInput
|| __DATA.__objc_data _OBJC_CLASS_$_AXMPixelBufferWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_AXMProminentObjectsDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMRectangleDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSceneDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSceneprintBasedNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMScreenCaptureNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMScreenGrabber
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSemanticText
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSemanticTextFactory
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSignificantEventDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSinglePitchTone
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSoundComponent
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSoundOutputAction
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSourceNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSpeechComponent
|| __DATA.__objc_data _OBJC_CLASS_$_AXMSpeechOutputAction
|| __DATA.__objc_data _OBJC_CLASS_$_AXMTask
|| __DATA.__objc_data _OBJC_CLASS_$_AXMTaxonomyNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMText
|| __DATA.__objc_data _OBJC_CLASS_$_AXMTextDetectionOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AXMTextDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMTextLayoutManager
|| __DATA.__objc_data _OBJC_CLASS_$_AXMTone
|| __DATA.__objc_data _OBJC_CLASS_$_AXMTraitDetectorNode
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVariablePitchTone
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionAnalysisOptions
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionColor
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionColorMarker
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionEngineCache
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionFaceNameHelper
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionFeature
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionFeatureAestheticsResult
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionFeatureAssetMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionFeatureColorInfo
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionFeatureComparator
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionFeatureFaceAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionFeatureFaceDetectionResult
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionFeatureFaceLandmarks
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionPipelineContext
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVisionResult
|| __DATA.__objc_data _OBJC_CLASS_$_AXMVoiceOverVisionEngine
|| __DATA.__objc_data _OBJC_CLASS_$_AXShotflowConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AXShotflowDetector
|| __DATA.__objc_data _OBJC_CLASS_$_AXShotflowFaceDetection
|| __DATA.__objc_data _OBJC_CLASS_$_AXShotflowHelpers
|| __DATA.__objc_data _OBJC_CLASS_$_AXShotflowNetwork
|| __DATA.__objc_data _OBJC_CLASS_$_AXVNEspressoDetectedObject
|| __DATA.__objc_data _OBJC_CLASS_$_KeyPitch
|| __DATA.__objc_data _OBJC_CLASS_$_Prediction
|| __DATA.__objc_data _OBJC_CLASS_$__AXMCaptureManagerDetectionEngine
|| __DATA.__objc_data _OBJC_CLASS_$__AXMOutputRequestTask
|| __DATA.__objc_data _OBJC_CLASS_$__AXMPlayerItemLegibleOutput
|| __DATA.__objc_data _OBJC_CLASS_$__AXMSemanticTextCursor
|| __DATA.__objc_data _OBJC_CLASS_$__AXMSettingObserver
|| __DATA.__objc_data _OBJC_CLASS_$__AXMVisionEngineAnalysisTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AXANFDDetectedObject
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMADSREnvelope
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAVCaptureSessionNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAVPlayerItemNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAVUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAXElementDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAXElementVisionEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMActiveSound
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMActiveSoundOutputAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMActiveSoundOutputActionHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMActiveSoundOutputActionHandleImpl
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAddressFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAssetManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAssetMetadataNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAudioDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAudioDataSourceMixer
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAudioEffect
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMAudioSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMBarcodeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMCameraFrameContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMCameraMetadataNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMCaptionDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMCaptureManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMCaptureSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMCaptureVideoDataOutput
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMCompressor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMCoreMotionNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDataPoint
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDataRegressionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDataRegressionModelExponential
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDataRegressionModelLinear
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDataRegressionModelLogarithmic
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDataRegressionModelPower
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDataRegressionModelSine
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDataSonifier
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDataSummary
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDescriptionBuilder
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMDeviceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMFaceDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMFunctionTone
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMGeometryUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMHapticComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMHapticOutputAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMHorizonDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMIconClassDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMIconVisionEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMImageAestheticsNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMImageCaptionModelAssetManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMImageNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMLiveContinuousTone
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMMobileAssetEvaluationNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMModelDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMNSFWDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMOneShotSoundOutputAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMOutputAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMOutputActionHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMOutputComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMOutputManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMOutputRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMOutputRequestHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMPhotoVisionSupport
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMPipelineContextInput
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMPixelBufferWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMProminentObjectsDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMRectangleDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSceneDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSceneprintBasedNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMScreenCaptureNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMScreenGrabber
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSemanticText
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSemanticTextFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSignificantEventDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSinglePitchTone
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSoundComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSoundOutputAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSourceNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSpeechComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMSpeechOutputAction
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMTask
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMTaxonomyNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMText
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMTextDetectionOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMTextDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMTextLayoutManager
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMTone
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMTraitDetectorNode
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVariablePitchTone
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionAnalysisOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionColor
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionColorMarker
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionEngineCache
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionFaceNameHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionFeature
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionFeatureAestheticsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionFeatureAssetMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionFeatureColorInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionFeatureComparator
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionFeatureFaceAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionFeatureFaceDetectionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionFeatureFaceLandmarks
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionPipelineContext
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVisionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_AXMVoiceOverVisionEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_AXShotflowConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AXShotflowDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_AXShotflowFaceDetection
|| __DATA.__objc_data _OBJC_METACLASS_$_AXShotflowHelpers
|| __DATA.__objc_data _OBJC_METACLASS_$_AXShotflowNetwork
|| __DATA.__objc_data _OBJC_METACLASS_$_AXVNEspressoDetectedObject
|| __DATA.__objc_data _OBJC_METACLASS_$_KeyPitch
|| __DATA.__objc_data _OBJC_METACLASS_$_Prediction
|| __DATA.__objc_data _OBJC_METACLASS_$__AXMCaptureManagerDetectionEngine
|| __DATA.__objc_data _OBJC_METACLASS_$__AXMOutputRequestTask
|| __DATA.__objc_data _OBJC_METACLASS_$__AXMPlayerItemLegibleOutput
|| __DATA.__objc_data _OBJC_METACLASS_$__AXMSemanticTextCursor
|| __DATA.__objc_data _OBJC_METACLASS_$__AXMSettingObserver
|| __DATA.__objc_data _OBJC_METACLASS_$__AXMVisionEngineAnalysisTask
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._activeScenario
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._captureDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._captureDeviceInput
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._captureSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._detectionEngine
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._featureDetectionObservers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._observerLock
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._videoDataOutput
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._videoFrameObservers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMCaptureManager._videoFrameReceiveQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMDataRegressionModel._bestFitParameters
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMDataRegressionModel._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMDataRegressionModel._n
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMDataRegressionModel._score
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMDataRegressionModel._x
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMDataRegressionModel._y
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMVisionColor._blue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMVisionColor._brightness
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMVisionColor._green
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMVisionColor._hue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMVisionColor._red
|| __DATA.__objc_ivar _OBJC_IVAR_$_AXMVisionColor._saturation
|| __DATA.__objc_ivar _OBJC_IVAR_$__AXMSettingObserver.callback
|| __DATA.__objc_ivar _OBJC_IVAR_$__AXMSettingObserver.observer
|| __DATA_CONST.__const _AXMColorCodingKeyBlue
|| __DATA_CONST.__const _AXMColorCodingKeyBrightness
|| __DATA_CONST.__const _AXMColorCodingKeyGreen
|| __DATA_CONST.__const _AXMColorCodingKeyHue
|| __DATA_CONST.__const _AXMColorCodingKeyRed
|| __DATA_CONST.__const _AXMColorCodingKeySaturation
|| __DATA_CONST.__const _AXMDisplayManagerMainDisplayWasUpdatedNotification
|| __DATA_CONST.__const _AXMFeatureDescriptionOptionLocale
|| __DATA_CONST.__const _AXMFeatureDescriptionOptionModifyForSensitiveContent
|| __DATA_CONST.__const _AXMNSFWCategoryExplicit
|| __DATA_CONST.__const _AXMScreenGrabOptionIgnoredLayerContextIDs
|| __DATA_CONST.__const _AXMScreenGrabOptionIncludedLayerContextIDs
|| __DATA_CONST.__const _AXMScreenGrabOptionUsePreferredModelInputSizeForDetectors
|| __DATA_CONST.__const _AXMSemanticTextCustomPatternUSCurrency
|| __DATA_CONST.__const _AXMSemanticTextDataDetectorAddress
|| __DATA_CONST.__const _AXMSemanticTextDataDetectorDate
|| __DATA_CONST.__const _AXMSemanticTextDataDetectorLink
|| __DATA_CONST.__const _AXMSemanticTextDataDetectorPhoneNumber
|| __DATA_CONST.__const _AXMSemanticTextDataDetectorTransitInfo
|| __DATA_CONST.__const _AXMSemanticTextNLPTokenDash
|| __DATA_CONST.__const _AXMSemanticTextNLPTokenOrganizationName
|| __DATA_CONST.__const _AXMSemanticTextNLPTokenOtherWord
|| __DATA_CONST.__const _AXMSemanticTextNLPTokenPersonalName
|| __DATA_CONST.__const _AXMSemanticTextNLPTokenPlaceName
|| __DATA_CONST.__const _AXMSemanticTextNLPTokenPunctuation
|| __DATA_CONST.__const _AXMSemanticTextNLPTokenSentenceTerminator
|| __DATA_CONST.__const _AXMSemanticTextNLPTokenUnknown
|| __DATA_CONST.__const _AXMSemanticTextNLPTokenWhitespace
|| __DATA_CONST.__const _AXMSemanticTextTagCustomPattern
|| __DATA_CONST.__const _AXMSemanticTextTagDataDetector
|| __DATA_CONST.__const _AXMSemanticTextTagIsInLexicon
|| __DATA_CONST.__const _AXMSemanticTextTagNLPToken
|| __DATA_CONST.__const _AXMSemanticTextTagNumericToken
|| __DATA_CONST.__const _AXMSemanticTextTagSemanticError
|| __DATA_CONST.__const _AXMSignificantEventCategoryBlood
|| __DATA_CONST.__const _AXMSignificantEventCategoryDemonstration
|| __DATA_CONST.__const _AXMSignificantEventCategoryDestruction
|| __DATA_CONST.__const _AXMSignificantEventCategoryFireDevastation
|| __DATA_CONST.__const _AXMSignificantEventCategoryFloodDevastation
|| __DATA_CONST.__const _AXMSignificantEventCategoryFuneral
|| __DATA_CONST.__const _AXMSignificantEventCategoryHospital
|| __DATA_CONST.__const _AXMSignificantEventCategoryReligiousSetting
|| __DATA_CONST.__const _AXMSignificantEventCategoryVehicleCrash
|| __DATA_CONST.__const _AXMSignificantEventCategoryWar
|| __DATA_CONST.__const _AXMSoundIDBubbleDown
|| __DATA_CONST.__const _AXMSoundIDBubbleUp
|| __DATA_CONST.__const _AXMSoundIDPluck1
|| __DATA_CONST.__const _AXMSoundIDPluck2
|| __DATA_CONST.__const _AXMSoundIDScratch1
|| __DATA_CONST.__const _AXMSoundIDScratch2
|| __DATA_CONST.__const _AXMSoundIDSuccess1
|| __DATA_CONST.__const _AXMVisionEngineConfigurationDidChangeNotification
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceAttributes
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceAttributesConfidence
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceExpressions
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceLandmarks
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceLandmarks3d
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceLandmarksConfidence
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceName
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceNameConfidence
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFacePose
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFacePoseConfidence
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceRectangles
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceRectanglesConfidence
|| __DATA_CONST.__const _AXMVisionFeatureCodingKeyFaceUUID
|| __DATA_CONST.__const _AXMVisionFeatureColorInfoCodingKeyMainColorWeights
|| __DATA_CONST.__const _AXMVisionFeatureColorInfoCodingKeyMainColors
|| __DATA_CONST.__const _AXMVisionFeatureFaceExpressionStringDisgust
|| __DATA_CONST.__const _AXMVisionFeatureFaceExpressionStringNeutral
|| __DATA_CONST.__const _AXMVisionFeatureFaceExpressionStringScream
|| __DATA_CONST.__const _AXMVisionFeatureFaceExpressionStringSmile
|| __DATA_CONST.__const _AXMVisionFeatureFaceExpressionStringSurprise
|| __DATA_CONST.__const _AXMVisionFeatureFaceExpressionStringSuspicious
|| __DATA_CONST.__const _AXMVisionFeatureFaceLandmarksCodingKeyIs3DLandmarks
|| __DATA_CONST.__const _AXMVisionFeatureFaceLandmarksCodingKeyResults
|| __DATA_CONST.__const _AXMVisionFeatureGateFlaggedByBlacklistRule
|| __DATA_CONST.__const _AXMVisionFeatureGateFlaggedByNSFWFilter
|| __DATA_CONST.__const _AXMVisionFeatureGateFlaggedByTabooFilter
|| __DATA_CONST.__const _AXMVisionFeatureGateMinimumConfidenceUnmet
|| __DATA_CONST.__const _AXMVisionFeatureGateUserInfoKeyBlacklistRule
|| __DATA_CONST.__const _AXMVisionFeatureGateUserInfoKeyClassifierLabel
|| __DATA_CONST.__const _AXMVisionFeatureGateUserInfoKeyMinimumConfidence
|| __DATA_CONST.__const _AXMVisionPipelineContextInputKeyCIImage
|| __DATA_CONST.__const _AXMVisionPipelineContextInputKeyInputType
|| __DATA_CONST.__const _AXMVisionPipelineContextInputKeyPixelBufferOrientation
|| __DATA_CONST.__const _AXMVisionPipelineContextKeyDiagnosticsEnabled
|| __DATA_CONST.__const _AXMVisionPipelineContextKeyInput
|| __DATA_CONST.__const _AXMVisionPipelineContextKeyInterfaceOrientation
|| __DATA_CONST.__const _AXMVisionPipelineContextKeyRegionInScreenCoordinates
|| __DATA_CONST.__const _AXMVisionPipelineContextKeySourceProvidesResults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXMDisplay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXMDisplayManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXMEvaluationNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXMImageRegistrationNode
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXMSequenceRequestManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXMService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXMTaskDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXMVisionEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AXMVisionEngineNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXMDisplay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXMDisplayManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXMEvaluationNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXMImageRegistrationNode
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXMSequenceRequestManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXMService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXMTaskDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXMVisionEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AXMVisionEngineNode
|| __TEXT.__const _AXColorMarkerMaximumDistanceHS
|| __TEXT.__const _AXColorMarkerMaximumDistanceHSB
|| __TEXT.__const _AXMActiveSoundPitchDefault
|| __TEXT.__const _AXMActiveSoundPitchMaximum
|| __TEXT.__const _AXMActiveSoundPitchMinimum
|| __TEXT.__const _AXMActiveSoundRateDefault
|| __TEXT.__const _AXMActiveSoundRateMaximum
|| __TEXT.__const _AXMActiveSoundRateMinimum
|| __TEXT.__const _AXMAspectRatioDefault
|| __TEXT.__const _AXMAspectRatioMaximum
|| __TEXT.__const _AXMAspectRatioMinimum
|| __TEXT.__const _AXMCameraFocalLengthDefault
|| __TEXT.__const _AXMCameraFocalLengthMax
|| __TEXT.__const _AXMCameraFocalLengthMin
|| __TEXT.__const _AXMCameraOpticalOriginDefault
|| __TEXT.__const _AXMMaximumResultsDefault
|| __TEXT.__const _AXMMaximumResultsMaximum
|| __TEXT.__const _AXMMaximumResultsMinimum
|| __TEXT.__const _AXMMinimumConfidenceToleranceDefault
|| __TEXT.__const _AXMMinimumConfidenceToleranceMaximum
|| __TEXT.__const _AXMMinimumConfidenceToleranceMinimum
|| __TEXT.__const _AXMMinimumSizeToleranceDefault
|| __TEXT.__const _AXMMinimumSizeToleranceMaximum
|| __TEXT.__const _AXMMinimumSizeToleranceMinimum
|| __TEXT.__const _AXMOCRMinimumCharacterHeightMax
|| __TEXT.__const _AXMOCRMinimumCharacterHeightMin
|| __TEXT.__const _AXMQuadratureToleranceDefault
|| __TEXT.__const _AXMQuadratureToleranceMaximum
|| __TEXT.__const _AXMQuadratureToleranceMinimum
|| __TEXT.__const _AXMediaUtilitiesVersionNumber
|| __TEXT.__const _AXMediaUtilitiesVersionString
|| __TEXT.__const _kAXMBlurMeasureHigh
|| __TEXT.__const _kAXMBlurMeasureLow
|| __TEXT.__const _kAXMBlurMeasureMediumHigh
|| __TEXT.__const _kAXMBlurMeasureMediumLow
|| __TEXT.__const _kAXMBlurMeasureVeryHigh
|| __TEXT.__const _kAXMBlurMeasureVeryLow
|| __TEXT.__const _kAXMBrightnessMeasureHigh
|| __TEXT.__const _kAXMBrightnessMeasureLow
|| __TEXT.__const _kAXMBrightnessMeasureNeutral
|| __TEXT.__const _kAXMBrightnessMeasureVeryHigh
|| __TEXT.__const _kAXMBrightnessMeasureVeryLow
|| __TEXT.__text _AXMAllEvaluationNodeClasses
|| __TEXT.__text _AXMAllSourceNodeClasses
|| __TEXT.__text _AXMAuditTokenTaskHasEntitlement
|| __TEXT.__text _AXMCGRectFromCGPoints
|| __TEXT.__text _AXMCopyValueForEntitlementFromAuditTokenTask
|| __TEXT.__text _AXMCopyValueForEntitlementFromSelf
|| __TEXT.__text _AXMCoreImageContext
|| __TEXT.__text _AXMCreatePixelBufferByRotatingBuffer
|| __TEXT.__text _AXMDateStringForFormat
|| __TEXT.__text _AXMDeleteCoreImageContext
|| __TEXT.__text _AXMDescription
|| __TEXT.__text _AXMEXIFOrientationForDeviceOrientationAndCameraPosition
|| __TEXT.__text _AXMEXIFOrientationFromInterfaceOrientation
|| __TEXT.__text _AXMFloatApproxEqual
|| __TEXT.__text _AXMFloatWithin
|| __TEXT.__text _AXMFormatInteger
|| __TEXT.__text _AXMFormatNumber
|| __TEXT.__text _AXMHasInternalSecurityPrivilages
|| __TEXT.__text _AXMImageByRotatingImage
|| __TEXT.__text _AXMIsRunningInServiceProcess
|| __TEXT.__text _AXMLogPixelBufferInfo
|| __TEXT.__text _AXMMakeError_
|| __TEXT.__text _AXMNormalizedFrameTransform
|| __TEXT.__text _AXMPointDistance
|| __TEXT.__text _AXMRectApproxEqual
|| __TEXT.__text _AXMRectCenter
|| __TEXT.__text _AXMRectDistance
|| __TEXT.__text _AXMSecureCodingClasses
|| __TEXT.__text _AXMSelfTaskHasEntitlement
|| __TEXT.__text _AXMServiceInterface
|| __TEXT.__text _AXMSharedDisplayManager
|| __TEXT.__text _AXMSizeWithin
|| __TEXT.__text _AXMStringFromCGPoint
|| __TEXT.__text _AXMStringFromCGRect
|| __TEXT.__text _AXMStringFromCGSize
|| __TEXT.__text _AXMStringFromNormalizedCGRect
|| __TEXT.__text _AXMTransformedNormalizedFrame
|| __TEXT.__text _AXMWorkingDirectory
|| __TEXT.__text _AXMWriteImageToURL
|| __TEXT.__text _AXMWritePixelBufferToURL
|| __TEXT.__text _UIAXFileTypeDescriptionForFile
|| __TEXT.__text _UIAXFileTypeDescriptionForFileExtension
|| __TEXT.__text _UIAXFileTypeDescriptionForUTI
|| __TEXT.__text _UIAXPhotoDescriptionString
|| __TEXT.__text _UIAccessibilityAddMetadataDescriptionToImage
|| __TEXT.__text _UIAccessibilityAddMetadataDescriptionToVideo
|| __TEXT.__text _UIAccessibilityEmojiDescription
|| __TEXT.__text _UIAccessibilityIsImageScreenshot
|| __TEXT.__text _UIAccessibilityMetadataDescriptionForImage
|| __TEXT.__text _UIAccessibilityMetadataDescriptionForVideo
|| __TEXT.__text _UIAccessibilityPhotoCreationDate
|| __TEXT.__text __AXMCachedDateFormatterForFormat
|| __TEXT.__text __AXMContextQueue
|| __TEXT.__text __AXMCopyValueForEntitlementUsingTaskCreationBlock
|| __TEXT.__text __AXMHSBToRGB
|| __TEXT.__text __AXMMakeError
|| __TEXT.__text __AXMRGBToHSB
|| __TEXT.__text __AXMTaskHasEntitlement
|| __TEXT.__text __AXMTextFrameForNormalizedBoundingBox
|| __TEXT.__text __Z25AXMDataSonifierDBToLineard
|| __TEXT.__text __Z25AXMDataSonifierLinearToDBd
|| __TEXT.__text ___AXMStringForVariables
|| __TEXT.__text ___AXMStringForVariablesWithVariadics
|| __TEXT.__text __eyesLocSuffixForSuffix
|| __TEXT.__text __handLocSuffixForSuffix
|| __TEXT.__text __heartLocSuffixForSuffix
|| __TEXT.__text __mouthLocSuffixForSuffix
|| __TEXT.__text __removeMetadataDescriptionItems
|| __TEXT.__text _covariance
|| __TEXT.__text _max
|| __TEXT.__text _mean
|| __TEXT.__text _min
|| __TEXT.__text _rsquared
|| __TEXT.__text _variance
__ AVFoundation: _AVAssetExportPresetPassthrough
__ AVFoundation: _AVAudioEngineConfigurationChangeNotification
__ AVFoundation: _AVAudioSessionCategoryPlayback
__ AVFoundation: _AVAudioSessionInterruptionNotification
__ AVFoundation: _AVAudioSessionInterruptionOptionKey
__ AVFoundation: _AVAudioSessionInterruptionTypeKey
__ AVFoundation: _AVAudioSessionMediaServicesWereLostNotification
__ AVFoundation: _AVAudioSessionMediaServicesWereResetNotification
__ AVFoundation: _AVAudioSessionRouteChangeNotification
__ AVFoundation: _AVAudioSessionRouteChangePreviousRouteKey
__ AVFoundation: _AVAudioSessionRouteChangeReasonKey
__ AVFoundation: _AVAudioSessionSilenceSecondaryAudioHintNotification
__ AVFoundation: _AVAudioSessionSilenceSecondaryAudioHintTypeKey
__ AVFoundation: _AVCaptureDeviceTypeBuiltInDualCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInWideAngleCamera
__ AVFoundation: _AVCaptureSessionPresetInputPriority
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataCommonKeyDescription
__ AVFoundation: _AVMetadataKeySpaceCommon
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetExportSession
__ AVFoundation: _OBJC_CLASS_$_AVAudioEngine
__ AVFoundation: _OBJC_CLASS_$_AVAudioFile
__ AVFoundation: _OBJC_CLASS_$_AVAudioFormat
__ AVFoundation: _OBJC_CLASS_$_AVAudioPCMBuffer
__ AVFoundation: _OBJC_CLASS_$_AVAudioPlayerNode
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVAudioUnitTimePitch
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceDiscoverySession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceFormat
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVMetadataFaceObject
__ AVFoundation: _OBJC_CLASS_$_AVMetadataHumanBodyObject
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMetadataMachineReadableCodeObject
__ AVFoundation: _OBJC_CLASS_$_AVMutableMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItemLegibleOutput
__ AVFoundation: _OBJC_CLASS_$_AVSpeechSynthesizer
__ AVFoundation: _OBJC_CLASS_$_AVSpeechUtterance
__ AVFoundation: _OBJC_METACLASS_$_AVCaptureVideoDataOutput
__ AVFoundation: _OBJC_METACLASS_$_AVPlayerItemLegibleOutput
__ AXAssetLoader: _OBJC_CLASS_$_AXAsset
__ AXAssetLoader: _OBJC_CLASS_$_AXAssetController
__ AXAssetLoader: _OBJC_CLASS_$_AXImageCaptionModel
__ AXAssetLoader: _OBJC_CLASS_$_AXImageCaptionModelAssetPolicy
__ AXCoreUtilities: _AXLogAssetLoader
__ AXCoreUtilities: _AXLogCommon
__ AXCoreUtilities: _AXLogDisplay
__ AXCoreUtilities: _AXMediaLogCaptionDescriptions
__ AXCoreUtilities: _AXMediaLogCommon
__ AXCoreUtilities: _AXMediaLogDiagnostics
__ AXCoreUtilities: _AXMediaLogElementVision
__ AXCoreUtilities: _AXMediaLogEngineCache
__ AXCoreUtilities: _AXMediaLogEnginePriority
__ AXCoreUtilities: _AXMediaLogHaptics
__ AXCoreUtilities: _AXMediaLogMLElement
__ AXCoreUtilities: _AXMediaLogOCR
__ AXCoreUtilities: _AXMediaLogOutput
__ AXCoreUtilities: _AXMediaLogResults
__ AXCoreUtilities: _AXMediaLogScreenGrab
__ AXCoreUtilities: _AXMediaLogService
__ AXCoreUtilities: _AXMediaLogSettings
__ AXCoreUtilities: _AXMediaLogSounds
__ AXCoreUtilities: _AXMediaLogSpeech
__ AXCoreUtilities: _AXMediaLogTextLayout
__ AXCoreUtilities: _AXMediaLogTextProcessing
__ AXCoreUtilities: _AXRuntimeCheck_HasANE
__ AXCoreUtilities: _OBJC_CLASS_$_AXBlockMetric
__ AXCoreUtilities: _OBJC_CLASS_$_AXBookendMetric
__ AXCoreUtilities: _OBJC_CLASS_$_AXMetric
__ AXCoreUtilities: _OBJC_CLASS_$_AXMetricSession
__ Accelerate: _dgetrf_
__ Accelerate: _dgetri_
__ Accelerate: _vDSP_mmulD
__ Accelerate: _vDSP_mtransD
__ Accelerate: _vDSP_vaddD
__ Accelerate: _vDSP_vsmulD
__ Accelerate: _vImageBufferFill_ARGB8888
__ Accelerate: _vImageBuffer_Init
__ Accelerate: _vImageBuffer_InitWithCVPixelBuffer
__ Accelerate: _vImageCVImageFormat_Create
__ Accelerate: _vImageRotate90_ARGB8888
__ Accelerate: _vImageScale_ARGB8888
__ AudioToolbox: _AudioComponentFindNext
__ AudioToolbox: _AudioComponentInstanceNew
__ AudioToolbox: _AudioOutputUnitStart
__ AudioToolbox: _AudioOutputUnitStop
__ AudioToolbox: _AudioUnitInitialize
__ AudioToolbox: _AudioUnitSetProperty
__ AudioToolbox: _AudioUnitUninitialize
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLCreationDateKey
__ CoreFoundation: _NSURLFileResourceTypeKey
__ CoreFoundation: _NSURLLocalizedTypeDescriptionKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _NSURLTypeIdentifierKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapGetAlignedBytesPerRow
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGDataProviderCreateWithURL
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectCreateDictionaryRepresentation
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceExtendedSRGB
__ CoreHaptics: _CHHapticDynamicParameterIDHapticIntensityControl
__ CoreHaptics: _OBJC_CLASS_$_CHHapticDynamicParameter
__ CoreHaptics: _OBJC_CLASS_$_CHHapticEngine
__ CoreHaptics: _OBJC_CLASS_$_CHHapticPattern
__ CoreImage: _OBJC_CLASS_$_CIColor
__ CoreImage: _OBJC_CLASS_$_CIContext
__ CoreImage: _OBJC_CLASS_$_CIFilter
__ CoreImage: _OBJC_CLASS_$_CIImage
__ CoreImage: _OBJC_CLASS_$_CIVector
__ CoreImage: _kCIContextCacheIntermediates
__ CoreImage: _kCIFormatRGBA8
__ CoreImage: _kCIImageApplyOrientationProperty
__ CoreImage: _kCIImageProperties
__ CoreImage: _kCIInputColorKey
__ CoreImage: _kCIInputImageKey
__ CoreImage: _kCIInputSaturationKey
__ CoreImage: _kCIInputTransformKey
__ CoreML: _OBJC_CLASS_$_MLArrayBatchProvider
__ CoreML: _OBJC_CLASS_$_MLFeatureValue
__ CoreML: _OBJC_CLASS_$_MLModel
__ CoreML: _OBJC_CLASS_$_MLModelConfiguration
__ CoreML: _OBJC_CLASS_$_MLMultiArray
__ CoreML: _OBJC_CLASS_$_MLPredictionOptions
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMSampleBufferGetImageBuffer
__ CoreMedia: _CMVideoFormatDescriptionGetDimensions
__ CoreMotion: _OBJC_CLASS_$_CMAttitude
__ CoreMotion: _OBJC_CLASS_$_CMDeviceMotion
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreVideo: _CVPixelBufferCreate
__ CoreVideo: _CVPixelBufferGetAttributes
__ CoreVideo: _CVPixelBufferGetBaseAddress
__ CoreVideo: _CVPixelBufferGetHeight
__ CoreVideo: _CVPixelBufferGetPixelFormatType
__ CoreVideo: _CVPixelBufferGetWidth
__ CoreVideo: _CVPixelBufferLockBaseAddress
__ CoreVideo: _CVPixelBufferRelease
__ CoreVideo: _CVPixelBufferRetain
__ CoreVideo: _kCVPixelBufferIOSurfacePropertiesKey
__ CoreVideo: _kCVPixelBufferPixelFormatDescriptionKey
__ Espresso: _espresso_context_destroy
__ Espresso: _espresso_create_context
__ Espresso: _espresso_create_plan
__ Espresso: _espresso_network_bind_buffer
__ Espresso: _espresso_network_bind_input_vimagebuffer_bgra8
__ Espresso: _espresso_network_change_input_blob_shapes
__ Espresso: _espresso_network_query_blob_dimensions
__ Espresso: _espresso_plan_add_network
__ Espresso: _espresso_plan_build
__ Espresso: _espresso_plan_build_clean
__ Espresso: _espresso_plan_destroy
__ Espresso: _espresso_plan_execute_sync
__ Espresso: _espresso_plan_get_error_info
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSHomeDirectory
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureErrorKey
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDataDetector
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSListFormatter
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayMonitor
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceUnlock
__ IOSurface: _kIOSurfaceAllocSize
__ IOSurface: _kIOSurfaceBytesPerElement
__ IOSurface: _kIOSurfaceBytesPerRow
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfacePixelFormat
__ IOSurface: _kIOSurfaceWidth
__ ImageIO: _CGImageDestinationCopyImageSource
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageMetadataCreateMutable
__ ImageIO: _CGImageMetadataSetValueMatchingImageProperty
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithDataProvider
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetType
__ ImageIO: _kCGImageDestinationMergeMetadata
__ ImageIO: _kCGImageDestinationMetadata
__ ImageIO: _kCGImagePropertyExifDictionary
__ ImageIO: _kCGImagePropertyExifUserComment
__ ImageIO: _kCGImagePropertyGIFDictionary
__ ImageIO: _kCGImagePropertyIPTCCaptionAbstract
__ ImageIO: _kCGImagePropertyIPTCDictionary
__ ImageIO: _kCGImagePropertyOrientation
__ ImageIO: _kCGImagePropertyPNGDescription
__ ImageIO: _kCGImagePropertyPNGDictionary
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ ImageIO: _kCGImagePropertyTIFFDateTime
__ ImageIO: _kCGImagePropertyTIFFDictionary
__ ImageIO: _kCGImagePropertyTIFFImageDescription
__ Lexicon: _LXEntryCopyString
__ Lexicon: _LXEntryGetMetaFlags
__ Lexicon: _LXEntryGetPartialProbability
__ Lexicon: _LXEntryGetProbability
__ Lexicon: _LXEntryGetUsageCount
__ Lexicon: _LXLexiconCreate
__ Lexicon: _LXLexiconEnumerateEntriesForString
__ Lexicon: _kLXLexiconLocaleKey
__ MediaAccessibility: _MAImageCaptioningCopyCaption
__ MediaAccessibility: _MAImageCaptioningSetCaption
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ NaturalLanguage: _NLTagDash
__ NaturalLanguage: _NLTagOrganizationName
__ NaturalLanguage: _NLTagOther
__ NaturalLanguage: _NLTagOtherWord
__ NaturalLanguage: _NLTagPersonalName
__ NaturalLanguage: _NLTagPlaceName
__ NaturalLanguage: _NLTagPunctuation
__ NaturalLanguage: _NLTagSchemeLexicalClass
__ NaturalLanguage: _NLTagSchemeNameType
__ NaturalLanguage: _NLTagSchemeNameTypeOrLexicalClass
__ NaturalLanguage: _NLTagSchemeTokenType
__ NaturalLanguage: _NLTagSentenceTerminator
__ NaturalLanguage: _NLTagWhitespace
__ NaturalLanguage: _OBJC_CLASS_$_NLTagger
__ NaturalLanguage: _OBJC_CLASS_$_NLTokenizer
__ QuartzCore: _CARenderServerSnapshot
__ QuartzCore: _OBJC_CLASS_$_CADisplay
__ QuartzCore: _kCASnapshotContextId
__ QuartzCore: _kCASnapshotContextList
__ QuartzCore: _kCASnapshotDestination
__ QuartzCore: _kCASnapshotDisplayName
__ QuartzCore: _kCASnapshotMode
__ QuartzCore: _kCASnapshotModeDisplay
__ QuartzCore: _kCASnapshotModeExcludeContextList
__ QuartzCore: _kCASnapshotModeStopAfterContextList
__ QuartzCore: _kCASnapshotOriginX
__ QuartzCore: _kCASnapshotOriginY
__ Security: _SecTaskCopyValueForEntitlement
__ Security: _SecTaskCreateFromSelf
__ Security: _SecTaskCreateWithAuditToken
__ SoftLinking: __sl_dlopen_audited
__ VideoToolbox: _VTImageRotationSessionCreate
__ VideoToolbox: _VTImageRotationSessionInvalidate
__ VideoToolbox: _VTImageRotationSessionTransferImage
__ VideoToolbox: _VTSessionSetProperty
__ VideoToolbox: _kVTImageRotationPropertyKey_FlipHorizontalOrientation
__ VideoToolbox: _kVTImageRotationPropertyKey_FlipVerticalOrientation
__ VideoToolbox: _kVTPixelTransferPropertyKey_SourceCropRectangle
__ libAccessibility.dylib: _AXCPSharedResourcesDirectory
__ libAccessibility.dylib: __AXSystemRootDirectory
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetFloat32Answer
__ libMobileGestalt.dylib: _MGGetSInt32Answer
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _clonefile
__ libSystem.B.dylib: _cos
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _expf
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_allows_internal_security_policies
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _rand
__ libSystem.B.dylib: _sin
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _tan
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorC1EPKc
__ libc++.1.dylib: __ZNSt13runtime_errorD1Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt9exceptionD1Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTINSt3__119__shared_weak_countE
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt13runtime_error
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTVN10__cxxabiv119__pointer_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__function_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt9exception
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_get_exception_ptr
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
AXMScreenGrabber : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[AXMScreenGrabber _adjustedScaleFactorForInputSize:constrainingToPreferredInputSizeFromDetectors:]
  -[AXMScreenGrabber _ioSurfaceConfigurationWithSize:]
  -[AXMScreenGrabber _renderOptionsForSurface:captureRect:displayName:scaleFactor:ignoredLayerContextIDs:includedLayerContextIDs:]
  -[AXMScreenGrabber grabScreenWithRect:orientation:options:metrics:error:]


AXMAssetManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AXMAssetManager defaultManager]

  // instance methods
  -[AXMAssetManager _modelsDirectoryForType:compiled:]
  -[AXMAssetManager _photoCaptionAssetsDirectory]
  -[AXMAssetManager _modelAssetURLsOfType:sources:compiled:]
  -[AXMAssetManager _modelAssetNamesOfType:sources:compiled:]
  -[AXMAssetManager _modelAssetURLForModelNamed:ofType:sources:compiled:]
  -[AXMAssetManager compiledModelAssetURLForModelNamed:ofType:sources:]
  -[AXMAssetManager _compiledModelsDirectoryForType:]
  -[AXMAssetManager uncompiledModelAssetURLForModelNamed:ofType:sources:]
  -[AXMAssetManager _uncompiledModelsDirectoryForType:]
  -[AXMAssetManager compiledModelAssetURLsOfType:sources:]
  -[AXMAssetManager uncompiledModelAssetURLsOfType:sources:]
  -[AXMAssetManager compiledModelAssetNamesOfType:sources:]
  -[AXMAssetManager uncompiledModelAssetNamesOfType:sources:]
  -[AXMAssetManager modelWithName:ofType:sources:compileIfNeeded:persistCompiledModel:error:]


AXMHorizonDetectorNode : AXMEvaluationNode
 @property  VNDetectHorizonRequest *_detectHorizonRequest

  // class methods
  +[AXMHorizonDetectorNode isSupported]
  +[AXMHorizonDetectorNode supportsSecureCoding]
  +[AXMHorizonDetectorNode title]

  // instance methods
  -[AXMHorizonDetectorNode .cxx_destruct]
  -[AXMHorizonDetectorNode encodeWithCoder:]
  -[AXMHorizonDetectorNode nodeInitialize]
  -[AXMHorizonDetectorNode evaluate:metrics:]
  -[AXMHorizonDetectorNode validateVisionKitSoftLinkSymbols]
  -[AXMHorizonDetectorNode initWithCoder:]
  -[AXMHorizonDetectorNode _detectHorizonRequest]
  -[AXMHorizonDetectorNode _setDetectHorizonRequest:]
  -[AXMHorizonDetectorNode requiresVisionFramework]


AXMVisionFeatureColorInfo : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSArray *mainColors
 @property  NSArray *mainColorWeights
 @property  double remainingColorWeight

  // class methods
  +[AXMVisionFeatureColorInfo supportsSecureCoding]

  // instance methods
  -[AXMVisionFeatureColorInfo .cxx_destruct]
  -[AXMVisionFeatureColorInfo encodeWithCoder:]
  -[AXMVisionFeatureColorInfo mainColors]
  -[AXMVisionFeatureColorInfo initWithCoder:]
  -[AXMVisionFeatureColorInfo setMainColors:]
  -[AXMVisionFeatureColorInfo setMainColors:weights:]
  -[AXMVisionFeatureColorInfo mainColorWeights]
  -[AXMVisionFeatureColorInfo setMainColorWeights:]
  -[AXMVisionFeatureColorInfo enumerateMainColors:]
  -[AXMVisionFeatureColorInfo remainingColorWeight]
  -[AXMVisionFeatureColorInfo setRemainingColorWeight:]


AXMVisionFeatureFaceAttributes : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSDictionary *results
 @property  long long ageCategory
 @property  long long genderCategory
 @property  long long eyesCategory
 @property  long long smilingCategory
 @property  long long faceHairCategory
 @property  long long hairColorCategory
 @property  long long baldCategory
 @property  long long glassesCategory

  // class methods
  +[AXMVisionFeatureFaceAttributes supportsSecureCoding]
  +[AXMVisionFeatureFaceAttributes unitTestingFaceAttributes]

  // instance methods
  -[AXMVisionFeatureFaceAttributes setResults:]
  -[AXMVisionFeatureFaceAttributes results]
  -[AXMVisionFeatureFaceAttributes _AXMEyesCategoryForVisionCategoryIdentifier:]
  -[AXMVisionFeatureFaceAttributes _AXMSmilingCategoryForVisionCategoryIdentifier:]
  -[AXMVisionFeatureFaceAttributes _AXMFaceHairCategoryForVisionCategoryIdentifier:]
  -[AXMVisionFeatureFaceAttributes _AXMHairColorCategoryForVisionCategoryIdentifier:]
  -[AXMVisionFeatureFaceAttributes _AXMBaldCategoryForVisionCategoryIdentifier:]
  -[AXMVisionFeatureFaceAttributes _AXMGlassesCategoryForVisionCategoryIdentifier:]
  -[AXMVisionFeatureFaceAttributes smilingCategory]
  -[AXMVisionFeatureFaceAttributes eyesCategory]
  -[AXMVisionFeatureFaceAttributes genderCategory]
  -[AXMVisionFeatureFaceAttributes _accessibilityLabelForAgeCategory]
  -[AXMVisionFeatureFaceAttributes _accessibilityLabelForSmilingCategory]
  -[AXMVisionFeatureFaceAttributes _accessibilityLabelForFaceHairCategory]
  -[AXMVisionFeatureFaceAttributes _accessibilityLabelForHairColorCategory]
  -[AXMVisionFeatureFaceAttributes _accessibilityLabelForBaldCategory]
  -[AXMVisionFeatureFaceAttributes _accessibilityLabelForGlassesCategory]
  -[AXMVisionFeatureFaceAttributes .cxx_destruct]
  -[AXMVisionFeatureFaceAttributes initWithVisionFaceAttributes:]
  -[AXMVisionFeatureFaceAttributes initWithAVMetadataFaceObject:]
  -[AXMVisionFeatureFaceAttributes _accessibilityLabelForEyesCategory]
  -[AXMVisionFeatureFaceAttributes accessibilityLabelForAttributes]
  -[AXMVisionFeatureFaceAttributes encodeWithCoder:]
  -[AXMVisionFeatureFaceAttributes ageCategory]
  -[AXMVisionFeatureFaceAttributes baldCategory]
  -[AXMVisionFeatureFaceAttributes initWithCoder:]
  -[AXMVisionFeatureFaceAttributes faceHairCategory]
  -[AXMVisionFeatureFaceAttributes hairColorCategory]
  -[AXMVisionFeatureFaceAttributes glassesCategory]
  -[AXMVisionFeatureFaceAttributes _AXMAgeCategoryForVisionCategoryIdentifier:]
  -[AXMVisionFeatureFaceAttributes _AXMGenderCategoryForVisionCategoryIdentifier:]


AXVNEspressoDetectedObject : NSObject /usr/lib/libc++.1.dylib
 @property  long long objectType
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGPoint=dd} center
 @property  float confidence

  // instance methods
  -[AXVNEspressoDetectedObject setConfidence:]
  -[AXVNEspressoDetectedObject initWithObjectType:boundingBox:confidence:]
  -[AXVNEspressoDetectedObject setObjectType:]
  -[AXVNEspressoDetectedObject confidence]
  -[AXVNEspressoDetectedObject setBounds:]
  -[AXVNEspressoDetectedObject bounds]
  -[AXVNEspressoDetectedObject center]
  -[AXVNEspressoDetectedObject objectType]


AXMSinglePitchTone : AXMTone
  // instance methods
  -[AXMSinglePitchTone initWithFrequency:sampleRate:envelope:]
  -[AXMSinglePitchTone initWithSampleRate:envelope:]
  -[AXMSinglePitchTone renderInBuffer:atFrame:]


AXMFaceDetectorNode : AXMEvaluationNode
 @property  AXMVisionFaceNameHelper *_faceNameHelper
 @property  VNDetectFaceRectanglesRequest *_faceRectanglesRequest
 @property  VNCreateFaceprintRequest *_faceprintRequest
 @property  VNClassifyFaceAttributesRequest *_faceAttributesRequest
 @property  VNDetectFaceExpressionsRequest *_faceExpressionsRequest
 @property  VNDetectFaceLandmarksRequest *_faceLandmarksRequest
 @property  VNDetectFacePoseRequest *_facePoseRequest

  // class methods
  +[AXMFaceDetectorNode isSupported]
  +[AXMFaceDetectorNode supportsSecureCoding]
  +[AXMFaceDetectorNode title]

  // instance methods
  -[AXMFaceDetectorNode .cxx_destruct]
  -[AXMFaceDetectorNode _faceNameHelper]
  -[AXMFaceDetectorNode set_faceNameHelper:]
  -[AXMFaceDetectorNode _faceprintRequest]
  -[AXMFaceDetectorNode set_faceprintRequest:]
  -[AXMFaceDetectorNode encodeWithCoder:]
  -[AXMFaceDetectorNode _faceAttributesRequest]
  -[AXMFaceDetectorNode set_faceAttributesRequest:]
  -[AXMFaceDetectorNode _faceExpressionsRequest]
  -[AXMFaceDetectorNode set_faceExpressionsRequest:]
  -[AXMFaceDetectorNode _faceLandmarksRequest]
  -[AXMFaceDetectorNode set_faceLandmarksRequest:]
  -[AXMFaceDetectorNode _facePoseRequest]
  -[AXMFaceDetectorNode set_facePoseRequest:]
  -[AXMFaceDetectorNode _faceRectanglesRequest]
  -[AXMFaceDetectorNode set_faceRectanglesRequest:]
  -[AXMFaceDetectorNode _faceResultForUUID:inFaceDictionary:]
  -[AXMFaceDetectorNode _createRequestsForContext:]
  -[AXMFaceDetectorNode _faceDetectionResultsForVisionRequests:canvasSize:]
  -[AXMFaceDetectorNode nodeInitialize]
  -[AXMFaceDetectorNode evaluate:metrics:]
  -[AXMFaceDetectorNode validateVisionKitSoftLinkSymbols]
  -[AXMFaceDetectorNode initWithCoder:]
  -[AXMFaceDetectorNode requiresVisionFramework]


AXMImageAestheticsNode : AXMEvaluationNode
 @property  VNClassifyImageAestheticsRequest *_imageAestheticsRequest

  // class methods
  +[AXMImageAestheticsNode isSupported]
  +[AXMImageAestheticsNode supportsSecureCoding]
  +[AXMImageAestheticsNode title]

  // instance methods
  -[AXMImageAestheticsNode .cxx_destruct]
  -[AXMImageAestheticsNode encodeWithCoder:]
  -[AXMImageAestheticsNode _imageAestheticsRequest]
  -[AXMImageAestheticsNode set_imageAestheticsRequest:]
  -[AXMImageAestheticsNode evaluate:metrics:]
  -[AXMImageAestheticsNode validateVisionKitSoftLinkSymbols]
  -[AXMImageAestheticsNode initWithCoder:]


AXMService : NSObject /usr/lib/libc++.1.dylib <AXMServiceClientInterface, AXMServiceInterface>
 @property  NSXPCConnection *xpcConnection
 @property  <AXMServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXMService setXpcConnection:]
  -[AXMService init]
  -[AXMService xpcConnection]
  -[AXMService dealloc]
  -[AXMService .cxx_destruct]
  -[AXMService prewarmVisionEngineService]
  -[AXMService visionEngine:evaluateSource:context:options:result:]
  -[AXMService _destroyXPCConnection]
  -[AXMService setDelegate:]
  -[AXMService _serviceProxy]
  -[AXMService delegate]


AXMOutputRequest : NSObject /usr/lib/libc++.1.dylib
 @property  AXMOutputRequestHandle *handle
 @property  NSArray *actions
 @property  NSArray *speechActions
 @property  NSArray *oneShotSoundActions
 @property  NSArray *activeSoundActions
 @property  NSArray *hapticActions
 @property  @? completionBlock
 @property  BOOL interruptsAndClearsQueue

  // class methods
  +[AXMOutputRequest speechItemSeparator]

  // instance methods
  -[AXMOutputRequest actions]
  -[AXMOutputRequest init]
  -[AXMOutputRequest .cxx_destruct]
  -[AXMOutputRequest handle]
  -[AXMOutputRequest setCompletionBlock:]
  -[AXMOutputRequest completionBlock]
  -[AXMOutputRequest addHapticItemWithURL:intensity:]
  -[AXMOutputRequest speechActions]
  -[AXMOutputRequest oneShotSoundActions]
  -[AXMOutputRequest activeSoundActions]
  -[AXMOutputRequest hapticActions]
  -[AXMOutputRequest addSpeechItem:]
  -[AXMOutputRequest addSoundItemWithID:]
  -[AXMOutputRequest addSoundItemWithURL:]
  -[AXMOutputRequest addActiveSoundItemWithID:]
  -[AXMOutputRequest addActiveSoundItemWithURL:]
  -[AXMOutputRequest addHapticItemWithURL:]
  -[AXMOutputRequest interruptsAndClearsQueue]
  -[AXMOutputRequest setInterruptsAndClearsQueue:]
  -[AXMOutputRequest _addAction:]


AXMOutputRequestHandle : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *actionHandles

  // instance methods
  -[AXMOutputRequestHandle init]
  -[AXMOutputRequestHandle .cxx_destruct]
  -[AXMOutputRequestHandle addActionHandle:]
  -[AXMOutputRequestHandle actionHandles]


AXMDataRegressionModelExponential : AXMDataRegressionModel
  // instance methods
  -[AXMDataRegressionModelExponential modelDescription]
  -[AXMDataRegressionModelExponential modelFunction]
  -[AXMDataRegressionModelExponential modelParameterCount]
  -[AXMDataRegressionModelExponential getInitialParams:]
  -[AXMDataRegressionModelExponential partialDerivatives]
  -[AXMDataRegressionModelExponential modelFunctionStringForParameters:significantFigures:]
  -[AXMDataRegressionModelExponential dataSatisfiesInitialConditions]


AXShotflowFaceDetection : NSObject /usr/lib/libc++.1.dylib
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} box
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} defaultBox
 @property  float confidence
 @property  int scale
 @property  int mergesCount
 @property  float rotationAngle
 @property  float yawAngle
 @property  BOOL hasPose
 @property  BOOL hasLabel
 @property  int label
 @property  NSString *labelName
 @property  {CGPoint=dd} boxCenter
 @property  float distanceToDefaultBox
 @property  float smartDistance

  // instance methods
  -[AXShotflowFaceDetection rotationAngle]
  -[AXShotflowFaceDetection yawAngle]
  -[AXShotflowFaceDetection hasLabel]
  -[AXShotflowFaceDetection smartDistance]
  -[AXShotflowFaceDetection iOa:]
  -[AXShotflowFaceDetection boxCenter]
  -[AXShotflowFaceDetection setRotationAngle:]
  -[AXShotflowFaceDetection setScale:]
  -[AXShotflowFaceDetection setConfidence:]
  -[AXShotflowFaceDetection .cxx_destruct]
  -[AXShotflowFaceDetection distanceToDefaultBox]
  -[AXShotflowFaceDetection confidence]
  -[AXShotflowFaceDetection label]
  -[AXShotflowFaceDetection hasPose]
  -[AXShotflowFaceDetection isOverlappingLowMergeDet:withOverlapThreshold:withMergeCountDelta:]
  -[AXShotflowFaceDetection setBox:]
  -[AXShotflowFaceDetection isOverlappingSmallFace:withOverlapThreshold:withSizeRatio:]
  -[AXShotflowFaceDetection setLabel:]
  -[AXShotflowFaceDetection setHasPose:]
  -[AXShotflowFaceDetection setLabelName:]
  -[AXShotflowFaceDetection overlap:]
  -[AXShotflowFaceDetection defaultBox]
  -[AXShotflowFaceDetection initWithBox:defaultBox:confidence:scale:rotationAngle:yawAngle:mergesCount:hasPose:]
  -[AXShotflowFaceDetection initWithBox:defaultBox:confidence:scale:rotationAngle:yawAngle:mergesCount:hasPose:hasLabel:label:]
  -[AXShotflowFaceDetection initWithBox:defaultBox:confidence:scale:rotationAngle:yawAngle:mergesCount:hasPose:hasLabel:label:labelName:]
  -[AXShotflowFaceDetection setYawAngle:]
  -[AXShotflowFaceDetection initWithBox:defaultBox:confidence:scale:rotationAngle:yawAngle:hasPose:]
  -[AXShotflowFaceDetection initWithBox:defaultBox:confidence:scale:rotationAngle:yawAngle:hasPose:hasLabel:label:]
  -[AXShotflowFaceDetection initWithBox:defaultBox:confidence:scale:rotationAngle:yawAngle:hasPose:hasLabel:label:labelName:]
  -[AXShotflowFaceDetection setDefaultBox:]
  -[AXShotflowFaceDetection labelName]
  -[AXShotflowFaceDetection setHasLabel:]
  -[AXShotflowFaceDetection setMergesCount:]
  -[AXShotflowFaceDetection scale]
  -[AXShotflowFaceDetection box]
  -[AXShotflowFaceDetection mergesCount]


AXMModelDetectorNode : AXMEvaluationNode
 @property  NSURL *modelURL
 @property  NSString *modelIdentifier

  // class methods
  +[AXMModelDetectorNode isSupported]
  +[AXMModelDetectorNode supportsSecureCoding]
  +[AXMModelDetectorNode title]

  // instance methods
  -[AXMModelDetectorNode modelIdentifier]
  -[AXMModelDetectorNode .cxx_destruct]
  -[AXMModelDetectorNode encodeWithCoder:]
  -[AXMModelDetectorNode setModelURL:]
  -[AXMModelDetectorNode modelURL]
  -[AXMModelDetectorNode nodeInitialize]
  -[AXMModelDetectorNode _loadModel:]
  -[AXMModelDetectorNode evaluate:metrics:]
  -[AXMModelDetectorNode preloadModelIfNeeded:]
  -[AXMModelDetectorNode initWithCoder:]
  -[AXMModelDetectorNode requiresVisionFramework]


AXMScreenCaptureNode : AXMSourceNode
 @property  AXMScreenGrabber *screenGrabber

  // class methods
  +[AXMScreenCaptureNode isSupported]
  +[AXMScreenCaptureNode supportsSecureCoding]
  +[AXMScreenCaptureNode title]

  // instance methods
  -[AXMScreenCaptureNode .cxx_destruct]
  -[AXMScreenCaptureNode nodeInitialize]
  -[AXMScreenCaptureNode screenGrabber]
  -[AXMScreenCaptureNode produceImage:]
  -[AXMScreenCaptureNode triggerWithScreenCaptureRegion:interfaceOrientation:options:cacheKey:resultHandler:]
  -[AXMScreenCaptureNode setScreenGrabber:]


AXMTraitDetectorNode : AXMEvaluationNode <NSSecureCoding>
 @property  long long sampleFrequency
 @property  BOOL shouldEvaluateColorInformation
 @property  double colorDistanceTheshold

  // class methods
  +[AXMTraitDetectorNode isSupported]
  +[AXMTraitDetectorNode supportsSecureCoding]
  +[AXMTraitDetectorNode title]

  // instance methods
  -[AXMTraitDetectorNode shouldEvaluateColorInformation]
  -[AXMTraitDetectorNode _evaluateColorInformation:]
  -[AXMTraitDetectorNode _blurValueForVisionObservation:]
  -[AXMTraitDetectorNode _brightnessValueForVisionObservation:]
  -[AXMTraitDetectorNode sampleFrequency]
  -[AXMTraitDetectorNode setSampleFrequency:]
  -[AXMTraitDetectorNode setShouldEvaluateColorInformation:]
  -[AXMTraitDetectorNode colorDistanceTheshold]
  -[AXMTraitDetectorNode setColorDistanceTheshold:]
  -[AXMTraitDetectorNode nodeInitialize]
  -[AXMTraitDetectorNode evaluate:metrics:]
  -[AXMTraitDetectorNode validateVisionKitSoftLinkSymbols]
  -[AXMTraitDetectorNode requiresVisionFramework]


AXMMobileAssetEvaluationNode : AXMEvaluationNode
 @property  NSArray *mlModels
 @property  NSURL *mobileAssetBaseURL

  // instance methods
  -[AXMMobileAssetEvaluationNode _downloadAssetsIfNecessary]
  -[AXMMobileAssetEvaluationNode modelResourceNames]
  -[AXMMobileAssetEvaluationNode mlModelClasses]
  -[AXMMobileAssetEvaluationNode mobileAssetType]
  -[AXMMobileAssetEvaluationNode minSupportedFormatVersion]
  -[AXMMobileAssetEvaluationNode maxSupportedFormatVersion]
  -[AXMMobileAssetEvaluationNode setModelURLs:]
  -[AXMMobileAssetEvaluationNode mobileAssetBaseURL]
  -[AXMMobileAssetEvaluationNode .cxx_destruct]
  -[AXMMobileAssetEvaluationNode initWithIdentifier:]
  -[AXMMobileAssetEvaluationNode mlModels]
  -[AXMMobileAssetEvaluationNode evaluate:metrics:]
  -[AXMMobileAssetEvaluationNode modelURLs]


AXMDescriptionBuilder : NSObject /usr/lib/libc++.1.dylib
 @property  AXMVisionFeature *blurFeature
 @property  AXMVisionFeature *brightnessFeature
 @property  BOOL isNSFW
 @property  BOOL shouldModifyCaptionForSensitiveContent
 @property  AXMVisionFeature *primarySensitiveContentFeature

  // class methods
  +[AXMDescriptionBuilder builderWithOptions:]

  // instance methods
  -[AXMDescriptionBuilder _initWithOptions:]
  -[AXMDescriptionBuilder addDetectedClassificationLocalizedValue:forLabel:]
  -[AXMDescriptionBuilder _usesTemplateForLowConfidenceAndExplicitFeatures]
  -[AXMDescriptionBuilder _shouldReplaceCaptionWithGenericTemplate]
  -[AXMDescriptionBuilder _addGenericTemplateForCaptionInformationToDescription:]
  -[AXMDescriptionBuilder _addCaptionInformationToDescription:]
  -[AXMDescriptionBuilder blurFeature]
  -[AXMDescriptionBuilder _addBrightnessInformationToDescription:]
  -[AXMDescriptionBuilder _addBlurInformationToDescription:]
  -[AXMDescriptionBuilder _addFaceInformationToDescription:]
  -[AXMDescriptionBuilder _addClassificationInformationToDescription:]
  -[AXMDescriptionBuilder _addIconClassInformationToDescription:]
  -[AXMDescriptionBuilder buildSpeakableDescription]
  -[AXMDescriptionBuilder _stringForPauseType:]
  -[AXMDescriptionBuilder _appendPauseType:toDescriptionIfNeeded:]
  -[AXMDescriptionBuilder isNSFW]
  -[AXMDescriptionBuilder .cxx_destruct]
  -[AXMDescriptionBuilder _appendToDescription:afterPauseType:withContents:]
  -[AXMDescriptionBuilder _shouldSummarizeDetectedPeople]
  -[AXMDescriptionBuilder _addPersonSummaryToDescription:]
  -[AXMDescriptionBuilder _addDetailedFaceInformationToDescription:]
  -[AXMDescriptionBuilder shouldModifyCaptionForSensitiveContent]
  -[AXMDescriptionBuilder primarySensitiveContentFeature]
  -[AXMDescriptionBuilder setIsNSFW:]
  -[AXMDescriptionBuilder _templateRulesForTag:]
  -[AXMDescriptionBuilder _subsumedTagsForTags:]
  -[AXMDescriptionBuilder _ignoredTagsForTags:]
  -[AXMDescriptionBuilder addDetectedFaces:]
  -[AXMDescriptionBuilder addDetectedClassificationFeatures:]
  -[AXMDescriptionBuilder setDetectedCaption:]
  -[AXMDescriptionBuilder addDetectedIconClasses:]
  -[AXMDescriptionBuilder buildVisualDescription]
  -[AXMDescriptionBuilder setBlurFeature:]
  -[AXMDescriptionBuilder brightnessFeature]
  -[AXMDescriptionBuilder setBrightnessFeature:]
  -[AXMDescriptionBuilder setShouldModifyCaptionForSensitiveContent:]
  -[AXMDescriptionBuilder setPrimarySensitiveContentFeature:]


AXMVisionEngine : NSObject /usr/lib/libc++.1.dylib <AXMVisionEngineNodeConnectionDelegate, AXMTaskDispatcherDelegate, AXMServiceDelegate, NSCopying, NSSecureCoding, AXMDescribing>
 @property  NSString *identifier
 @property  AXMService *axMediaUtilsService
 @property  AXMVisionEngineCache *cache
 @property  AXMTaskDispatcher *taskDispatcher
 @property  AXMSequenceRequestManager *sequenceRequestManager
 @property  NSArray *sourceNodes
 @property  NSArray *evaluationNodes
 @property  long long maximumQueueSize
 @property  BOOL prioritySchedulingEnabled
 @property  BOOL prioritySchedulingAllowMultipleNodeExecution
 @property  unsigned long thresholdPriority
 @property  BOOL imageRegistrationFilteringEnabled
 @property  long long minimumImageRegistrationSignalLevel
 @property  BOOL isCachingEnabled
 @property  long long cacheSize
 @property  BOOL diagnosticsEnabled
 @property  BOOL disableResultLogging
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXMVisionEngine supportsSecureCoding]

  // instance methods
  -[AXMVisionEngine copyWithZone:]
  -[AXMVisionEngine cacheSize]
  -[AXMVisionEngine setCache:]
  -[AXMVisionEngine _commonInit]
  -[AXMVisionEngine .cxx_destruct]
  -[AXMVisionEngine cache]
  -[AXMVisionEngine initWithIdentifier:]
  -[AXMVisionEngine axMediaUtilsService]
  -[AXMVisionEngine setAxMediaUtilsService:]
  -[AXMVisionEngine setTaskDispatcher:]
  -[AXMVisionEngine setSequenceRequestManager:]
  -[AXMVisionEngine isEqualToEngine:]
  -[AXMVisionEngine sourceNodes]
  -[AXMVisionEngine evaluationNodes]
  -[AXMVisionEngine setMaximumQueueSize:]
  -[AXMVisionEngine setPrioritySchedulingEnabled:]
  -[AXMVisionEngine setPrioritySchedulingAllowMultipleNodeExecution:]
  -[AXMVisionEngine setThresholdPriority:]
  -[AXMVisionEngine addSourceNode:]
  -[AXMVisionEngine addEvaluationNode:]
  -[AXMVisionEngine maximumQueueSize]
  -[AXMVisionEngine prioritySchedulingEnabled]
  -[AXMVisionEngine prioritySchedulingAllowMultipleNodeExecution]
  -[AXMVisionEngine thresholdPriority]
  -[AXMVisionEngine isCachingEnabled]
  -[AXMVisionEngine _queue_handleEvaluatedContext:result:error:]
  -[AXMVisionEngine _queue_shouldEvaluateNode:withOptions:]
  -[AXMVisionEngine setIdentifier:]
  -[AXMVisionEngine encodeWithCoder:]
  -[AXMVisionEngine identifier]
  -[AXMVisionEngine _queue_activeEvaluationNodesForOptions:applyPriorityScheduling:prioritySchedulingAllowMultipleNodeExecution:]
  -[AXMVisionEngine _queue_activeEvaluationNodesExclusivelyUseVisionFramework:]
  -[AXMVisionEngine imageRegistrationFilteringEnabled]
  -[AXMVisionEngine minimumImageRegistrationSignalLevel]
  -[AXMVisionEngine disableResultLogging]
  -[AXMVisionEngine _queue_logEvaluatedResult:]
  -[AXMVisionEngine resultHandlers]
  -[AXMVisionEngine _invokeResultHandlers:withError:]
  -[AXMVisionEngine _invokeResultHandlers:withResult:]
  -[AXMVisionEngine canAddSourceNode:]
  -[AXMVisionEngine canAddEvaluationNode:]
  -[AXMVisionEngine _queue_sourceNodeWithIdentifier:]
  -[AXMVisionEngine _queue_evaluationNodeWithIdentifier:]
  -[AXMVisionEngine _queue_makeUniqueIdentifierForNode:]
  -[AXMVisionEngine _queue_nodeIdentifierExists:]
  -[AXMVisionEngine _queue_addResultHandler:]
  -[AXMVisionEngine _queue_removeResultHandler:]
  -[AXMVisionEngine _queue_removeAllResultHandlers]
  -[AXMVisionEngine axmDescription]
  -[AXMVisionEngine axmAppendRecursiveDescription:withIndentation:]
  -[AXMVisionEngine sequenceRequestManager]
  -[AXMVisionEngine _queue_shouldContinueWithoutResultHandlers:]
  -[AXMVisionEngine taskDispatcher]
  -[AXMVisionEngine purgeResources:]
  -[AXMVisionEngine axMediaUtilitiesService:eventOccurred:]
  -[AXMVisionEngine _queue_remotelyEvaluateWithSource:context:]
  -[AXMVisionEngine _queue_evaluateWithSource:context:]
  -[AXMVisionEngine _invokeFullQueueResultHandlersForContext:]
  -[AXMVisionEngine triggerWithSource:context:]
  -[AXMVisionEngine engineWillAcceptTiggerWithSource:]
  -[AXMVisionEngine diagnosticsEnabled:]
  -[AXMVisionEngine captureSessionNodeDidBeginProcessingFrames:]
  -[AXMVisionEngine captureSessionNodeDidEndProcessingFrames:]
  -[AXMVisionEngine captureSessionNodeWillProcessFrame:]
  -[AXMVisionEngine captureSessionNodeDidDropFrame:]
  -[AXMVisionEngine dispatcher:handleTask:]
  -[AXMVisionEngine canAddSourceNodeClass:]
  -[AXMVisionEngine insertSourceNode:atIndex:]
  -[AXMVisionEngine removeSourceNode:]
  -[AXMVisionEngine removeAllSourceNodes]
  -[AXMVisionEngine canAddEvaluationNodeClass:]
  -[AXMVisionEngine isEqual:]
  -[AXMVisionEngine insertEvaluationNode:atIndex:]
  -[AXMVisionEngine removeEvaluationNode:]
  -[AXMVisionEngine removeAllEvaluationNodes]
  -[AXMVisionEngine addSourceNodes:evaluationNodes:]
  -[AXMVisionEngine sourceNodeWithIdentifier:]
  -[AXMVisionEngine evaluationNodeWithIdentifier:]
  -[AXMVisionEngine makeUniqueIdentifierForNode:]
  -[AXMVisionEngine nodeIdentifierExists:]
  -[AXMVisionEngine addResultHandler:]
  -[AXMVisionEngine removeResultHandler:]
  -[AXMVisionEngine removeAllResultHandlers]
  -[AXMVisionEngine prewarmEngine]
  -[AXMVisionEngine enableResultCachingWithCacheSize:]
  -[AXMVisionEngine disableResultCaching]
  -[AXMVisionEngine updateEngineConfiguration:]
  -[AXMVisionEngine setImageRegistrationFilteringEnabled:]
  -[AXMVisionEngine setMinimumImageRegistrationSignalLevel:]
  -[AXMVisionEngine setDisableResultLogging:]
  -[AXMVisionEngine setDiagnosticsEnabled:]
  -[AXMVisionEngine areDiagnosticsEnabled]
  -[AXMVisionEngine initWithCoder:]


_AXMVisionEngineAnalysisTask : AXMTask
 @property  NSUUID *identifier
 @property  AXMVisionPipelineContext *context
 @property  AXMSourceNode *source

  // class methods
  +[_AXMVisionEngineAnalysisTask itemWithSource:context:]

  // instance methods
  -[_AXMVisionEngineAnalysisTask context]
  -[_AXMVisionEngineAnalysisTask setSource:]
  -[_AXMVisionEngineAnalysisTask source]
  -[_AXMVisionEngineAnalysisTask .cxx_destruct]
  -[_AXMVisionEngineAnalysisTask setIdentifier:]
  -[_AXMVisionEngineAnalysisTask identifier]
  -[_AXMVisionEngineAnalysisTask setContext:]
  -[_AXMVisionEngineAnalysisTask initWithSource:context:]


AXMVisionFeatureComparator : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[AXMVisionFeatureComparator compareInitialResult:withFinalResult:indexOfUnequalItem:sortInitialResult:sortFinalResult:]


AXMCameraFrameContext : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  float videoFieldOfView
 @property  float videoZoomFactor
 @property  long long videoSourceWidth
 @property  long long videoSourceHeight
 @property  double presentationTimestamp
 @property  CMAttitude *deviceAttitude

  // class methods
  +[AXMCameraFrameContext supportsSecureCoding]

  // instance methods
  -[AXMCameraFrameContext videoZoomFactor]
  -[AXMCameraFrameContext .cxx_destruct]
  -[AXMCameraFrameContext encodeWithCoder:]
  -[AXMCameraFrameContext videoFieldOfView]
  -[AXMCameraFrameContext videoSourceWidth]
  -[AXMCameraFrameContext videoSourceHeight]
  -[AXMCameraFrameContext presentationTimestamp]
  -[AXMCameraFrameContext deviceAttitude]
  -[AXMCameraFrameContext initWithVideoFieldOfView:zoomFactor:sourceWidth:sourceHeight:presentationTimestamp:attitude:]
  -[AXMCameraFrameContext motionCorrectedNormalizedFrame:targetAttitude:targetZoomFactor:interfaceOrientation:mirrored:]
  -[AXMCameraFrameContext initWithCoder:]


AXMFunctionTone : AXMTone
 @property  @? function
 @property  {?=^dddddd} xAxisDescriptor
 @property  {?=^dddddd} yAxisDescriptor

  // instance methods
  -[AXMFunctionTone function]
  -[AXMFunctionTone .cxx_destruct]
  -[AXMFunctionTone renderInBuffer:atFrame:]
  -[AXMFunctionTone xAxisDescriptor]
  -[AXMFunctionTone _xAxisValueForNormalizedPosition:]
  -[AXMFunctionTone initWithUnivariateFunction:sampleRate:envelope:xAxisDescriptor:yAxisDescriptor:]
  -[AXMFunctionTone yAxisDescriptor]


AXMVisionPipelineContext : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSMutableArray *features
 @property  NSMutableSet *evaluatedFeatureTypes
 @property  NSError *error
 @property  AXMVisionAnalysisOptions *analysisOptions
 @property  AXMVisionResult *result
 @property  NSNumber *appliedImageOrientation
 @property  AXMetricSession *metricSession
 @property  VNImageRequestHandler *visionImageRequestHandler
 @property  long long imageRegistrationState
 @property  AXMSequenceRequestManager *sequenceRequestManager
 @property  NSObject<NSSecureCoding> *userContext
 @property  NSArray *effectiveTextDetectionLocales
 @property  BOOL shouldProcessRemotely
 @property  NSArray *resultHandlers
 @property  {CGSize=dd} size
 @property  BOOL sourceProvidesResults
 @property  BOOL visionImageRequestHandlerIsLoaded
 @property  <NSCopying> *cacheKey
 @property  BOOL shouldCallCompletionHandlersForEngineBusyError
 @property  BOOL shouldCallCompletionHandlersForEmptyResultSet
 @property  BOOL evaluationExclusivelyUsesVisionFramework
 @property  unsigned long sequenceID
 @property  AXMPipelineContextInput *sourceInput
 @property  <AXMetricContainer> *pipelineMetric

  // class methods
  +[AXMVisionPipelineContext supportsSecureCoding]
  +[AXMVisionPipelineContext contextWithSourceParameters:options:]

  // instance methods
  -[AXMVisionPipelineContext setCacheKey:]
  -[AXMVisionPipelineContext setUserContext:]
  -[AXMVisionPipelineContext userContext]
  -[AXMVisionPipelineContext cacheKey]
  -[AXMVisionPipelineContext visionImageRequestHandler]
  -[AXMVisionPipelineContext result]
  -[AXMVisionPipelineContext _addSignificantEventFeatureGateIfNeededToFeature:category:minimumConfidence:]
  -[AXMVisionPipelineContext sourceInput]
  -[AXMVisionPipelineContext addAuxiliaryDetector:]
  -[AXMVisionPipelineContext setShouldCallCompletionHandlersForEngineBusyError:]
  -[AXMVisionPipelineContext setShouldCallCompletionHandlersForEmptyResultSet:]
  -[AXMVisionPipelineContext evaluationExclusivelyUsesVisionFramework]
  -[AXMVisionPipelineContext setSequenceID:]
  -[AXMVisionPipelineContext setVisionImageRequestHandler:]
  -[AXMVisionPipelineContext setError:]
  -[AXMVisionPipelineContext features]
  -[AXMVisionPipelineContext size]
  -[AXMVisionPipelineContext setFeatures:]
  -[AXMVisionPipelineContext .cxx_destruct]
  -[AXMVisionPipelineContext analysisOptions]
  -[AXMVisionPipelineContext setSequenceRequestManager:]
  -[AXMVisionPipelineContext encodeWithCoder:]
  -[AXMVisionPipelineContext sourceProvidesResults]
  -[AXMVisionPipelineContext setEvaluationExclusivelyUsesVisionFramework:]
  -[AXMVisionPipelineContext imageRegistrationState]
  -[AXMVisionPipelineContext error]
  -[AXMVisionPipelineContext auxiliaryDetectors]
  -[AXMVisionPipelineContext removeAllAuxiliaryDetectors]
  -[AXMVisionPipelineContext didFinishProcessingContext]
  -[AXMVisionPipelineContext resultHandlers]
  -[AXMVisionPipelineContext shouldCallCompletionHandlersForEmptyResultSet]
  -[AXMVisionPipelineContext errorOccurred:]
  -[AXMVisionPipelineContext addEvaluatedFeatureType:]
  -[AXMVisionPipelineContext sequenceRequestManager]
  -[AXMVisionPipelineContext addResultHandlers:]
  -[AXMVisionPipelineContext willBeginProcessingContext]
  -[AXMVisionPipelineContext shouldProcessRemotely]
  -[AXMVisionPipelineContext sequenceID]
  -[AXMVisionPipelineContext shouldCallCompletionHandlersForEngineBusyError]
  -[AXMVisionPipelineContext setResult:]
  -[AXMVisionPipelineContext addResultHandler:]
  -[AXMVisionPipelineContext setShouldProcessRemotely:]
  -[AXMVisionPipelineContext pipelineMetric]
  -[AXMVisionPipelineContext initWithSourceParameters:options:]
  -[AXMVisionPipelineContext produceImage:]
  -[AXMVisionPipelineContext setAnalysisOptions:]
  -[AXMVisionPipelineContext _commonInitWithDiagnosticsEnabled:]
  -[AXMVisionPipelineContext setAppliedImageOrientation:]
  -[AXMVisionPipelineContext metricSession]
  -[AXMVisionPipelineContext evaluatedFeatureTypes]
  -[AXMVisionPipelineContext appliedImageOrientation]
  -[AXMVisionPipelineContext effectiveTextDetectionLocales]
  -[AXMVisionPipelineContext _makeRequestHandlerForInput:options:]
  -[AXMVisionPipelineContext setEquivalenceToken:]
  -[AXMVisionPipelineContext setEffectiveTextDetectionLocales:]
  -[AXMVisionPipelineContext setEvaluatedFeatureTypes:]
  -[AXMVisionPipelineContext setMetricSession:]
  -[AXMVisionPipelineContext setImageRegistrationState:]
  -[AXMVisionPipelineContext generateImageRepresentation]
  -[AXMVisionPipelineContext visionImageRequestHandlerWithOptions:]
  -[AXMVisionPipelineContext visionImageRequestHandlerIsLoaded]
  -[AXMVisionPipelineContext createSceneObservationIfNilWithBlock:]
  -[AXMVisionPipelineContext sceneObservation]
  -[AXMVisionPipelineContext generateFileNameForImageWithPrefix:extension:]
  -[AXMVisionPipelineContext initWithCoder:]
  -[AXMVisionPipelineContext appendFeature:]


AXMTextDetectorNode : AXMEvaluationNode <NSSecureCoding>
 @property  AXMSemanticTextFactory *semanticTextFactory
 @property  AXMTextLayoutManager *textLayoutManager

  // class methods
  +[AXMTextDetectorNode isSupported]
  +[AXMTextDetectorNode supportsSecureCoding]
  +[AXMTextDetectorNode recognitionLevelFromOptions:]
  +[AXMTextDetectorNode textDetectionLanguagesFromOptions:]
  +[AXMTextDetectorNode supportedDetectionLanguagesForLevel:]
  +[AXMTextDetectorNode filterPreferredDetectionLanguages:withSupportedDetectionLanguages:]
  +[AXMTextDetectorNode effectiveLanguagesFromOptions:]
  +[AXMTextDetectorNode title]

  // instance methods
  -[AXMTextDetectorNode .cxx_destruct]
  -[AXMTextDetectorNode _textDetectionOptions:]
  -[AXMTextDetectorNode _textsForObservations:]
  -[AXMTextDetectorNode semanticTextFactory]
  -[AXMTextDetectorNode setSemanticTextFactory:]
  -[AXMTextDetectorNode shouldEvaluate:]
  -[AXMTextDetectorNode setTextLayoutManager:]
  -[AXMTextDetectorNode textLayoutManager]
  -[AXMTextDetectorNode nodeInitialize]
  -[AXMTextDetectorNode evaluate:metrics:]
  -[AXMTextDetectorNode validateVisionKitSoftLinkSymbols]
  -[AXMTextDetectorNode requiresVisionFramework]


AXMIconVisionEngine : AXMVisionEngine
 @property  AXMImageNode *imageNode
 @property  AXMIconClassDetectorNode *iconClassDetector

  // class methods
  +[AXMIconVisionEngine sharedInstance]

  // instance methods
  -[AXMIconVisionEngine imageNode]
  -[AXMIconVisionEngine .cxx_destruct]
  -[AXMIconVisionEngine initWithIdentifier:]
  -[AXMIconVisionEngine setImageNode:]
  -[AXMIconVisionEngine setIconClassDetector:]
  -[AXMIconVisionEngine classifyImages:withTimeout:]
  -[AXMIconVisionEngine iconClassDetector]


AXMTaskDispatcher : NSObject /usr/lib/libc++.1.dylib
 @property  long long count
 @property  BOOL isEmpty
 @property  <AXMTaskDispatcherDelegate> *delegate

  // instance methods
  -[AXMTaskDispatcher initWithIdentifier:delegate:]
  -[AXMTaskDispatcher .cxx_destruct]
  -[AXMTaskDispatcher _queue_processNextTask]
  -[AXMTaskDispatcher _queue_count]
  -[AXMTaskDispatcher _queue_dequeueTask]
  -[AXMTaskDispatcher _queue_scheduleTask:]
  -[AXMTaskDispatcher _queue_unscheduleAllTasks]
  -[AXMTaskDispatcher scheduleTask:]
  -[AXMTaskDispatcher unscheduleAllTasks]
  -[AXMTaskDispatcher count]
  -[AXMTaskDispatcher setDelegate:]
  -[AXMTaskDispatcher isEmpty]
  -[AXMTaskDispatcher delegate]


AXMTask : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL complete
 @property  @? taskCompleteBlock

  // instance methods
  -[AXMTask isComplete]
  -[AXMTask .cxx_destruct]
  -[AXMTask setComplete:]
  -[AXMTask setTaskCompleteBlock:]
  -[AXMTask taskCompleteBlock]
  -[AXMTask markAsComplete:]


AXElementVision__generated__Input : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  ^{__CVBuffer=} image
 @property  double iouThreshold
 @property  double confidenceThreshold
 @property  NSSet *featureNames

  // instance methods
  -[AXElementVision__generated__Input featureNames]
  -[AXElementVision__generated__Input featureValueForName:]
  -[AXElementVision__generated__Input setImage:]
  -[AXElementVision__generated__Input image]
  -[AXElementVision__generated__Input initWithImage:iouThreshold:confidenceThreshold:]
  -[AXElementVision__generated__Input iouThreshold]
  -[AXElementVision__generated__Input setIouThreshold:]
  -[AXElementVision__generated__Input confidenceThreshold]
  -[AXElementVision__generated__Input setConfidenceThreshold:]


AXElementVision__generated__Output : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  MLMultiArray *confidence
 @property  MLMultiArray *coordinates
 @property  NSSet *featureNames

  // instance methods
  -[AXElementVision__generated__Output featureNames]
  -[AXElementVision__generated__Output featureValueForName:]
  -[AXElementVision__generated__Output setConfidence:]
  -[AXElementVision__generated__Output .cxx_destruct]
  -[AXElementVision__generated__Output confidence]
  -[AXElementVision__generated__Output initWithConfidence:coordinates:]
  -[AXElementVision__generated__Output setCoordinates:]
  -[AXElementVision__generated__Output coordinates]


AXElementVision__generated__ : NSObject /usr/lib/libc++.1.dylib
 @property  MLModel *model

  // class methods
  +[AXElementVision__generated__ urlOfModelInThisBundle]

  // instance methods
  -[AXElementVision__generated__ predictionFromFeatures:options:error:]
  -[AXElementVision__generated__ init]
  -[AXElementVision__generated__ predictionsFromInputs:options:error:]
  -[AXElementVision__generated__ .cxx_destruct]
  -[AXElementVision__generated__ initWithContentsOfURL:error:]
  -[AXElementVision__generated__ predictionFromFeatures:error:]
  -[AXElementVision__generated__ predictionFromImage:iouThreshold:confidenceThreshold:error:]
  -[AXElementVision__generated__ initWithContentsOfURL:configuration:error:]
  -[AXElementVision__generated__ model]
  -[AXElementVision__generated__ initWithConfiguration:error:]


AXMADSREnvelope : NSObject /usr/lib/libc++.1.dylib
 @property  double attackMS
 @property  double attackLevel
 @property  double decayMS
 @property  double sustainMS
 @property  double sustainLevel
 @property  double releaseMS
 @property  double lengthMS

  // class methods
  +[AXMADSREnvelope defaultEnvelope]

  // instance methods
  -[AXMADSREnvelope init]
  -[AXMADSREnvelope levelForTime:]
  -[AXMADSREnvelope sustainMS]
  -[AXMADSREnvelope releaseMS]
  -[AXMADSREnvelope attackLevel]
  -[AXMADSREnvelope decayMS]
  -[AXMADSREnvelope initWithAttackDuration:attackLevel:decayDuration:sustainDuration:sustainLevel:releaseDuration:]
  -[AXMADSREnvelope sustainLevel]
  -[AXMADSREnvelope setAttackMS:]
  -[AXMADSREnvelope setAttackLevel:]
  -[AXMADSREnvelope setDecayMS:]
  -[AXMADSREnvelope setSustainMS:]
  -[AXMADSREnvelope setSustainLevel:]
  -[AXMADSREnvelope setReleaseMS:]
  -[AXMADSREnvelope copy]
  -[AXMADSREnvelope attackMS]
  -[AXMADSREnvelope lengthMS]


AXMRectangleDetectorNode : AXMEvaluationNode
 @property  double cameraPixelFocalLength
 @property  {CGPoint=dd} cameraOpticalOrigin
 @property  double minimumAspectRatio
 @property  double maximumAspectRatio
 @property  double quadratureTolerance
 @property  double minimumSize
 @property  long long maximumNumberOfRects

  // class methods
  +[AXMRectangleDetectorNode isSupported]
  +[AXMRectangleDetectorNode supportsSecureCoding]
  +[AXMRectangleDetectorNode title]

  // instance methods
  -[AXMRectangleDetectorNode minimumSize]
  -[AXMRectangleDetectorNode encodeWithCoder:]
  -[AXMRectangleDetectorNode setCameraPixelFocalLength:]
  -[AXMRectangleDetectorNode setMinimumSize:]
  -[AXMRectangleDetectorNode setCameraOpticalOrigin:]
  -[AXMRectangleDetectorNode setMinimumAspectRatio:]
  -[AXMRectangleDetectorNode setMaximumAspectRatio:]
  -[AXMRectangleDetectorNode setQuadratureTolerance:]
  -[AXMRectangleDetectorNode setMaximumNumberOfRects:]
  -[AXMRectangleDetectorNode cameraPixelFocalLength]
  -[AXMRectangleDetectorNode cameraOpticalOrigin]
  -[AXMRectangleDetectorNode minimumAspectRatio]
  -[AXMRectangleDetectorNode maximumAspectRatio]
  -[AXMRectangleDetectorNode quadratureTolerance]
  -[AXMRectangleDetectorNode maximumNumberOfRects]
  -[AXMRectangleDetectorNode nodeInitialize]
  -[AXMRectangleDetectorNode evaluate:metrics:]
  -[AXMRectangleDetectorNode validateVisionKitSoftLinkSymbols]
  -[AXMRectangleDetectorNode initWithCoder:]
  -[AXMRectangleDetectorNode requiresVisionFramework]


AXMVisionColor : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  double redFloat
 @property  double greenFloat
 @property  double blueFloat
 @property  double hueFloat
 @property  double saturationFloat
 @property  double brightnessFloat

  // class methods
  +[AXMVisionColor supportsSecureCoding]
  +[AXMVisionColor colorWithHue:saturation:brightness:]
  +[AXMVisionColor colorWithHueDegrees:saturation:brightness:]
  +[AXMVisionColor colorWithRed:green:blue:]

  // instance methods
  -[AXMVisionColor init]
  -[AXMVisionColor encodeWithCoder:]
  -[AXMVisionColor blueFloat]
  -[AXMVisionColor _getHue:saturation:brightness:]
  -[AXMVisionColor _getRed:green:blue:]
  -[AXMVisionColor isEqualToAXMVisionColor:]
  -[AXMVisionColor saturationFloat]
  -[AXMVisionColor hueRadians]
  -[AXMVisionColor brightnessFloat]
  -[AXMVisionColor euclidianDistanceHSV:]
  -[AXMVisionColor euclidianDistanceHS:]
  -[AXMVisionColor greenFloat]
  -[AXMVisionColor isEqual:]
  -[AXMVisionColor hueFloat]
  -[AXMVisionColor redFloat]
  -[AXMVisionColor initWithCoder:]


AXMVisionColorMarker : AXMVisionColor
 @property  NSString *localizedName

  // class methods
  +[AXMVisionColorMarker colorWithHueDegrees:saturation:brightness:localizedName:]
  +[AXMVisionColorMarker allColorMarkers]
  +[AXMVisionColorMarker closestMarkerToColor:withMaximumThreshold:]

  // instance methods
  -[AXMVisionColorMarker setLocalizedName:]
  -[AXMVisionColorMarker .cxx_destruct]
  -[AXMVisionColorMarker localizedName]


AXMSpeechComponent : AXMOutputComponent <AVSpeechSynthesizerDelegate>
 @property  AVSpeechSynthesizer *synthesizer
 @property  @? currentRequestCompletionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXMSpeechComponent isSupported]

  // instance methods
  -[AXMSpeechComponent init]
  -[AXMSpeechComponent .cxx_destruct]
  -[AXMSpeechComponent speechSynthesizer:didFinishSpeechUtterance:]
  -[AXMSpeechComponent speechSynthesizer:didStartSpeechUtterance:]
  -[AXMSpeechComponent speechSynthesizer:didPauseSpeechUtterance:]
  -[AXMSpeechComponent speechSynthesizer:didContinueSpeechUtterance:]
  -[AXMSpeechComponent speechSynthesizer:didCancelSpeechUtterance:]
  -[AXMSpeechComponent synthesizer]
  -[AXMSpeechComponent setSynthesizer:]
  -[AXMSpeechComponent currentRequestCompletionBlock]
  -[AXMSpeechComponent setCurrentRequestCompletionBlock:]
  -[AXMSpeechComponent stopSpeakingImmediately]
  -[AXMSpeechComponent stopSpeakingAtNextWord]
  -[AXMSpeechComponent canHandleRequest:]
  -[AXMSpeechComponent handleRequest:completion:]


AXMAudioDataSourceMixer : AXMAudioDataSource
 @property  NSString *name
 @property  double panning
 @property  NSSet *dataSources
 @property  BOOL isMonoOutput

  // instance methods
  -[AXMAudioDataSourceMixer setDataSources:]
  -[AXMAudioDataSourceMixer .cxx_destruct]
  -[AXMAudioDataSourceMixer name]
  -[AXMAudioDataSourceMixer dataSources]
  -[AXMAudioDataSourceMixer removeDataSource:]
  -[AXMAudioDataSourceMixer panning]
  -[AXMAudioDataSourceMixer addDataSource:]
  -[AXMAudioDataSourceMixer initWithName:sampleRate:circular:]
  -[AXMAudioDataSourceMixer setCurrentSampleIndex:]
  -[AXMAudioDataSourceMixer isMonoOutput]
  -[AXMAudioDataSourceMixer prepareNextSamples:]
  -[AXMAudioDataSourceMixer removeAllDataSources]
  -[AXMAudioDataSourceMixer setPanning:]
  -[AXMAudioDataSourceMixer setName:]


AXMAVCaptureSessionNode : AXMSourceNode <AVCaptureVideoDataOutputSampleBufferDelegate, AXMAVCaptureSessionNodeFrameDelegate>
 @property  AVCaptureSession *captureSession
 @property  AXMVisionAnalysisOptions *analysisOptions
 @property  <AXMAVCaptureSessionNodeDelegate> *captureSessionNodeDelegate
 @property  <AXMAVCaptureSessionNodeFrameDelegate> *frameDelegate
 @property  AXMCaptureVideoDataOutput *axVideoDataOutput
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXMAVCaptureSessionNode isSupported]
  +[AXMAVCaptureSessionNode supportsSecureCoding]
  +[AXMAVCaptureSessionNode title]

  // instance methods
  -[AXMAVCaptureSessionNode .cxx_destruct]
  -[AXMAVCaptureSessionNode analysisOptions]
  -[AXMAVCaptureSessionNode captureOutput:didDropSampleBuffer:fromConnection:]
  -[AXMAVCaptureSessionNode captureOutput:didOutputSampleBuffer:fromConnection:]
  -[AXMAVCaptureSessionNode setCaptureSessionNodeDelegate:]
  -[AXMAVCaptureSessionNode beginFrameEventsWithAVCaptureSession:delegate:queue:]
  -[AXMAVCaptureSessionNode axVideoDataOutput]
  -[AXMAVCaptureSessionNode setCaptureSession:]
  -[AXMAVCaptureSessionNode captureSession]
  -[AXMAVCaptureSessionNode setFrameDelegate:]
  -[AXMAVCaptureSessionNode endVideoFrameEvents]
  -[AXMAVCaptureSessionNode addVideoDataOutputWithAVCaptureSession:queue:]
  -[AXMAVCaptureSessionNode frameDelegate]
  -[AXMAVCaptureSessionNode captureSessionNode:didOutputSampleBuffer:fromConnection:]
  -[AXMAVCaptureSessionNode captureSessionNodeDelegate]
  -[AXMAVCaptureSessionNode triggerWithSampleBuffer:interfaceOrientation:mirrored:options:userContext:]
  -[AXMAVCaptureSessionNode autoTriggerVideoFrameEventsWithAVCaptureSession:options:delegate:]
  -[AXMAVCaptureSessionNode endAutoTriggerOfVideoFrameEvents]
  -[AXMAVCaptureSessionNode setAxVideoDataOutput:]
  -[AXMAVCaptureSessionNode nodeInitialize]
  -[AXMAVCaptureSessionNode setShouldProcessRemotely:]
  -[AXMAVCaptureSessionNode produceImage:]
  -[AXMAVCaptureSessionNode setAnalysisOptions:]


AXMAudioSession : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableArray *notificationObserverTokens
 @property  AVAudioSession *session

  // instance methods
  -[AXMAudioSession setSession:]
  -[AXMAudioSession init]
  -[AXMAudioSession session]
  -[AXMAudioSession dealloc]
  -[AXMAudioSession .cxx_destruct]
  -[AXMAudioSession setNotificationObserverTokens:]
  -[AXMAudioSession notificationObserverTokens]
  -[AXMAudioSession _handleSessionInterrupted:options:]
  -[AXMAudioSession _handleRouteChanged:previousRoute:]
  -[AXMAudioSession _handleMediaServicesLost]
  -[AXMAudioSession _handleMediaServicesReset]
  -[AXMAudioSession _handleSilenceSecondaryAudio:]
  -[AXMAudioSession _stringForRouteChangeReason:]
  -[AXMAudioSession deactivateSessionWithError:]
  -[AXMAudioSession activateSessionWithError:]


AXMOutputComponent : NSObject /usr/lib/libc++.1.dylib
 @property  long long componentState

  // class methods
  +[AXMOutputComponent isSupported]

  // instance methods
  -[AXMOutputComponent init]
  -[AXMOutputComponent canHandleRequest:]
  -[AXMOutputComponent setComponentState:]
  -[AXMOutputComponent transitionToState:completion:]
  -[AXMOutputComponent componentState]
  -[AXMOutputComponent handleRequest:completion:]


AXMVisionResult : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSArray *faceFeatures
 @property  NSArray *sceneClassificationFeatures
 @property  NSArray *objectClassificationFeatures
 @property  NSArray *modelClassificationFeatures
 @property  NSArray *captionFeatures
 @property  NSArray *ocrFeatures
 @property  NSArray *blurFeatures
 @property  NSArray *brightnessFeatures
 @property  NSArray *iconClassFeatures
 @property  BOOL includesNSFWFeatures
 @property  NSArray *sensitiveContentForCaptionFeatures
 @property  BOOL captionMayContainSensitiveContent
 @property  NSString *detectedTextDescription
 @property  CIImage *image
 @property  NSArray *features
 @property  NSSet *evaluatedFeatureTypes
 @property  NSNumber *appliedImageOrientation
 @property  AXMetricSession *metricSession
 @property  long long imageRegistrationState
 @property  NSObject<NSSecureCoding> *userContext
 @property  NSArray *effectiveTextDetectionLocales
 @property  AXMVisionFeature *colorInfoFeature
 @property  AXMVisionFeature *assetMetadataFeature
 @property  NSString *localizedDetectedTextHint
 @property  NSString *localizedDetectedIconHint
 @property  NSDictionary *featureGates
 @property  NSData *equivalenceToken

  // class methods
  +[AXMVisionResult supportsSecureCoding]
  +[AXMVisionResult resultWithImage:features:orientation:metricSession:userContext:]
  +[AXMVisionResult resultWithImage:features:orientation:metricSession:]

  // instance methods
  -[AXMVisionResult setUserContext:]
  -[AXMVisionResult userContext]
  -[AXMVisionResult features]
  -[AXMVisionResult setFeatures:]
  -[AXMVisionResult .cxx_destruct]
  -[AXMVisionResult setImage:]
  -[AXMVisionResult detectedFeatureDescriptionWithOptions:]
  -[AXMVisionResult detectedTextDescription]
  -[AXMVisionResult image]
  -[AXMVisionResult encodeWithCoder:]
  -[AXMVisionResult imageRegistrationState]
  -[AXMVisionResult _init]
  -[AXMVisionResult isEqual:]
  -[AXMVisionResult isEqualToAXMVisionResult:]
  -[AXMVisionResult ocrFeatures]
  -[AXMVisionResult faceFeatures]
  -[AXMVisionResult sceneClassificationFeatures]
  -[AXMVisionResult captionFeatures]
  -[AXMVisionResult objectClassificationFeatures]
  -[AXMVisionResult includesNSFWFeatures]
  -[AXMVisionResult sensitiveContentForCaptionFeatures]
  -[AXMVisionResult blurFeatures]
  -[AXMVisionResult brightnessFeatures]
  -[AXMVisionResult iconClassFeatures]
  -[AXMVisionResult setDetectedTextDescription:]
  -[AXMVisionResult equivalenceToken]
  -[AXMVisionResult featureGates]
  -[AXMVisionResult colorInfoFeature]
  -[AXMVisionResult assetMetadataFeature]
  -[AXMVisionResult sortedFeatures]
  -[AXMVisionResult localizedDetectedTextHint]
  -[AXMVisionResult localizedDetectedIconHint]
  -[AXMVisionResult captionMayContainSensitiveContent]
  -[AXMVisionResult modelClassificationFeatures]
  -[AXMVisionResult sensitiveContentFeatures]
  -[AXMVisionResult setAppliedImageOrientation:]
  -[AXMVisionResult metricSession]
  -[AXMVisionResult evaluatedFeatureTypes]
  -[AXMVisionResult appliedImageOrientation]
  -[AXMVisionResult effectiveTextDetectionLocales]
  -[AXMVisionResult setEquivalenceToken:]
  -[AXMVisionResult setEffectiveTextDetectionLocales:]
  -[AXMVisionResult setEvaluatedFeatureTypes:]
  -[AXMVisionResult setMetricSession:]
  -[AXMVisionResult setImageRegistrationState:]
  -[AXMVisionResult initWithCoder:]


AXMVisionEngineCache : NSObject /usr/lib/libc++.1.dylib
 @property  long long cacheSize

  // instance methods
  -[AXMVisionEngineCache cacheSize]
  -[AXMVisionEngineCache .cxx_destruct]
  -[AXMVisionEngineCache purgeCache]
  -[AXMVisionEngineCache initWithCacheSize:]
  -[AXMVisionEngineCache setResult:forKey:]
  -[AXMVisionEngineCache resultForKey:]
  -[AXMVisionEngineCache _cacheQueue_cacheSize]
  -[AXMVisionEngineCache _cacheQueue_resultForKey:]
  -[AXMVisionEngineCache _cacheQueue_setResult:forKey:]


_AXMPlayerItemLegibleOutput : AVPlayerItemLegibleOutput /System/Library/Frameworks/CoreImage.framework/CoreImage

AXMAVPlayerItemNode : AXMSourceNode <AVPlayerItemLegibleOutputPushDelegate>
 @property  AVPlayerItem *targetPlayerItem
 @property  AXMVisionAnalysisOptions *analysisOptions
 @property  BOOL triggeringLegibilityEvents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXMAVPlayerItemNode isSupported]
  +[AXMAVPlayerItemNode supportsSecureCoding]
  +[AXMAVPlayerItemNode title]

  // instance methods
  -[AXMAVPlayerItemNode .cxx_destruct]
  -[AXMAVPlayerItemNode analysisOptions]
  -[AXMAVPlayerItemNode outputSequenceWasFlushed:]
  -[AXMAVPlayerItemNode legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:]
  -[AXMAVPlayerItemNode axmDescription]
  -[AXMAVPlayerItemNode nodeInitialize]
  -[AXMAVPlayerItemNode setShouldProcessRemotely:]
  -[AXMAVPlayerItemNode setAnalysisOptions:]
  -[AXMAVPlayerItemNode targetPlayerItem]
  -[AXMAVPlayerItemNode _mainQueue_endAutoTriggerOfLegibilityEvents]
  -[AXMAVPlayerItemNode setTargetPlayerItem:]
  -[AXMAVPlayerItemNode autoTriggerLegibilityEventsWithAVPlayerItem:]
  -[AXMAVPlayerItemNode endAutoTriggerOfLegibilityEvents]
  -[AXMAVPlayerItemNode isTriggeringLegibilityEvents]


AXMImageCaptionModelAssetManager : NSObject /usr/lib/libc++.1.dylib <AXAssetControllerObserver>
 @property  NSURL *modelURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXMImageCaptionModelAssetManager sharedInstance]

  // instance methods
  -[AXMImageCaptionModelAssetManager init]
  -[AXMImageCaptionModelAssetManager .cxx_destruct]
  -[AXMImageCaptionModelAssetManager setModelURL:]
  -[AXMImageCaptionModelAssetManager modelURL]
  -[AXMImageCaptionModelAssetManager _performWithLock:]
  -[AXMImageCaptionModelAssetManager modelURLWithTimeout:]
  -[AXMImageCaptionModelAssetManager assetController:didFinishRefreshingAssets:wasSuccessful:error:]
  -[AXMImageCaptionModelAssetManager infoForModelAtURL:]


AXMVisionFeatureFaceDetectionResult : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSUUID *uuid
 @property  unsigned long faceId
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double rectanglesConfidence
 @property  NSString *name
 @property  double nameConfidence
 @property  AXMVisionFeatureFaceAttributes *attributes
 @property  double attributesConfidence
 @property  NSDictionary *expressionsAndConfidence
 @property  long long likelyExpression
 @property  AXMVisionFeatureFaceLandmarks *landmarks
 @property  AXMVisionFeatureFaceLandmarks *landmarks3d
 @property  double landmarksConfidence
 @property  {?=[4]} pose
 @property  double poseConfidence

  // class methods
  +[AXMVisionFeatureFaceDetectionResult supportsSecureCoding]
  +[AXMVisionFeatureFaceDetectionResult nameForFaceExpression:]
  +[AXMVisionFeatureFaceDetectionResult localizedStringFormatterForExpression:]

  // instance methods
  -[AXMVisionFeatureFaceDetectionResult pose]
  -[AXMVisionFeatureFaceDetectionResult likelyExpression]
  -[AXMVisionFeatureFaceDetectionResult frame]
  -[AXMVisionFeatureFaceDetectionResult rectanglesConfidence]
  -[AXMVisionFeatureFaceDetectionResult nameConfidence]
  -[AXMVisionFeatureFaceDetectionResult attributesConfidence]
  -[AXMVisionFeatureFaceDetectionResult landmarksConfidence]
  -[AXMVisionFeatureFaceDetectionResult descriptionForExpression:]
  -[AXMVisionFeatureFaceDetectionResult _expressionForString:]
  -[AXMVisionFeatureFaceDetectionResult faceId]
  -[AXMVisionFeatureFaceDetectionResult confidenceForExpression:]
  -[AXMVisionFeatureFaceDetectionResult uuid]
  -[AXMVisionFeatureFaceDetectionResult setPose:]
  -[AXMVisionFeatureFaceDetectionResult .cxx_destruct]
  -[AXMVisionFeatureFaceDetectionResult name]
  -[AXMVisionFeatureFaceDetectionResult setAttributes:]
  -[AXMVisionFeatureFaceDetectionResult setUuid:]
  -[AXMVisionFeatureFaceDetectionResult attributes]
  -[AXMVisionFeatureFaceDetectionResult encodeWithCoder:]
  -[AXMVisionFeatureFaceDetectionResult _init]
  -[AXMVisionFeatureFaceDetectionResult setPoseConfidence:]
  -[AXMVisionFeatureFaceDetectionResult poseConfidence]
  -[AXMVisionFeatureFaceDetectionResult setRectanglesConfidence:]
  -[AXMVisionFeatureFaceDetectionResult setNameConfidence:]
  -[AXMVisionFeatureFaceDetectionResult setAttributesConfidence:]
  -[AXMVisionFeatureFaceDetectionResult setExpressionsAndConfidence:]
  -[AXMVisionFeatureFaceDetectionResult landmarks3d]
  -[AXMVisionFeatureFaceDetectionResult setLandmarks3d:]
  -[AXMVisionFeatureFaceDetectionResult setLandmarksConfidence:]
  -[AXMVisionFeatureFaceDetectionResult setFaceId:]
  -[AXMVisionFeatureFaceDetectionResult setFrame:]
  -[AXMVisionFeatureFaceDetectionResult landmarks]
  -[AXMVisionFeatureFaceDetectionResult setLandmarks:]
  -[AXMVisionFeatureFaceDetectionResult setName:]
  -[AXMVisionFeatureFaceDetectionResult expressionsAndConfidence]
  -[AXMVisionFeatureFaceDetectionResult initWithCoder:]


AXShotflowDetector : NSObject /usr/lib/libc++.1.dylib
 @property  float overlap_threshold
 @property  float threshold
 @property  NSArray *filterThreshold
 @property  float nmsThreshold
 @property  float mergeHeadsThreshold
 @property  float osfsThreshold
 @property  float osfsSizeRatio
 @property  float olmcsThreshold
 @property  int olmcsMergeCountDelta
 @property  float smartThreshold
 @property  float smartDistanceFactor

  // class methods
  +[AXShotflowDetector cpuDetectorWithModelPath:configuration:version:]
  +[AXShotflowDetector gpuDetectorWithModelPath:configuration:preferredMetalDeviceID:version:]

  // instance methods
  -[AXShotflowDetector threshold]
  -[AXShotflowDetector nmsThreshold]
  -[AXShotflowDetector initWithNetwork:nmsThreshold:filterThreshold:]
  -[AXShotflowDetector osfsThreshold]
  -[AXShotflowDetector osfsSizeRatio]
  -[AXShotflowDetector filterBoxes:]
  -[AXShotflowDetector mergeHeadsThreshold]
  -[AXShotflowDetector olmcsThreshold]
  -[AXShotflowDetector olmcsMergeCountDelta]
  -[AXShotflowDetector smartThreshold]
  -[AXShotflowDetector smartDistanceFactor]
  -[AXShotflowDetector enforceSquareFaces:withHeight:andWidth:]
  -[AXShotflowDetector mergeHeadsBoxes:]
  -[AXShotflowDetector .cxx_destruct]
  -[AXShotflowDetector overlappingSmallFacesSuppression:]
  -[AXShotflowDetector overlappingLowMergeCountSuppression:]
  -[AXShotflowDetector smartMergeBoxes:]
  -[AXShotflowDetector overlap_threshold]
  -[AXShotflowDetector setOverlap_threshold:]
  -[AXShotflowDetector filterThreshold]
  -[AXShotflowDetector setFilterThreshold:]
  -[AXShotflowDetector setNmsThreshold:]
  -[AXShotflowDetector setMergeHeadsThreshold:]
  -[AXShotflowDetector setOsfsThreshold:]
  -[AXShotflowDetector setOsfsSizeRatio:]
  -[AXShotflowDetector setOlmcsThreshold:]
  -[AXShotflowDetector setOlmcsMergeCountDelta:]
  -[AXShotflowDetector setSmartThreshold:]
  -[AXShotflowDetector setSmartDistanceFactor:]
  -[AXShotflowDetector detect:]
  -[AXShotflowDetector setThreshold:]
  -[AXShotflowDetector nmsBoxes:]
  -[AXShotflowDetector processBoxes:withHeight:andWidth:]
  -[AXShotflowDetector mergeBoxes:]


AXMTaxonomyNode : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *label
 @property  NSString *localizedName
 @property  double confidence

  // instance methods
  -[AXMTaxonomyNode setLocalizedName:]
  -[AXMTaxonomyNode setConfidence:]
  -[AXMTaxonomyNode .cxx_destruct]
  -[AXMTaxonomyNode localizedName]
  -[AXMTaxonomyNode confidence]
  -[AXMTaxonomyNode label]
  -[AXMTaxonomyNode setLabel:]


AXMPhotoVisionSupport : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AXMPhotoVisionSupport leafNodeLabels]
  +[AXMPhotoVisionSupport _addNode:toDescription:atLevel:]
  +[AXMPhotoVisionSupport nonLeafNodeLabels]
  +[AXMPhotoVisionSupport _collectLabelsIncludingLeafNodes:nonLeafNodes:]
  +[AXMPhotoVisionSupport _blacklistedVoiceOverClassificationLabels]
  +[AXMPhotoVisionSupport _validatePhotoVisionSoftLinkSymbols]
  +[AXMPhotoVisionSupport buildTaxonomyDescription]
  +[AXMPhotoVisionSupport buildParentChainDescriptionForAllNodes]
  +[AXMPhotoVisionSupport buildGraphStatisticsDescription]
  +[AXMPhotoVisionSupport processSceneClassifications:withOptions:]
  +[AXMPhotoVisionSupport localizedLabelForClassificationObservation:]


AXMNSFWDetectorNode : AXMEvaluationNode
  // class methods
  +[AXMNSFWDetectorNode isSupported]
  +[AXMNSFWDetectorNode supportsSecureCoding]
  +[AXMNSFWDetectorNode addNSFWResultToContext:forIdentifier:confidence:markAsSensitiveCaptionContent:]
  +[AXMNSFWDetectorNode title]

  // instance methods
  -[AXMNSFWDetectorNode .cxx_destruct]
  -[AXMNSFWDetectorNode evaluate:metrics:]
  -[AXMNSFWDetectorNode validateVisionKitSoftLinkSymbols]


AXMGeometryUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AXMGeometryUtilities motionCorrectedNormalizedFrame:fromAttitude:fromFieldOfViewX:fromFieldOfViewY:toAttitude:toFieldOfViewX:toFieldOfViewY:interfaceOrientation:mirrored:]


AXMAVUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AXMAVUtilities videoDimensionsForDeviceFormat:]
  +[AXMAVUtilities videoDeviceFromConnection:]
  +[AXMAVUtilities isMirroredVideoDevice:]


AXMCaptureManager : NSObject /usr/lib/libc++.1.dylib <AVCaptureVideoDataOutputSampleBufferDelegate>
 @property  AVCaptureSession *session
 @property  long long activeScenario
 @property  long long deviceOrientation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXMCaptureManager captureSessionReport:]

  // instance methods
  -[AXMCaptureManager deviceOrientation]
  -[AXMCaptureManager setDeviceOrientation:]
  -[AXMCaptureManager init]
  -[AXMCaptureManager session]
  -[AXMCaptureManager .cxx_destruct]
  -[AXMCaptureManager initWithCaptureSession:]
  -[AXMCaptureManager idealCaptureSettingsForScenario:]
  -[AXMCaptureManager _configureSessionWithBlock:error:]
  -[AXMCaptureManager startSessionIfNeeded]
  -[AXMCaptureManager configureForScenario:error:]
  -[AXMCaptureManager addVideoFrameObserver:]
  -[AXMCaptureManager removeVideoFrameObserver:]
  -[AXMCaptureManager addFeatureDetectionObserver:]
  -[AXMCaptureManager removeFeatureDetectionObserver:]
  -[AXMCaptureManager activeScenario]
  -[AXMCaptureManager _minimumAcceptableFramerateForScenario:]
  -[AXMCaptureManager _maximumAcceptableFramerateForScenario:]
  -[AXMCaptureManager _minimumAcceptableResolutionForScenario:]
  -[AXMCaptureManager _maximumAcceptableResolutionForScenario:]
  -[AXMCaptureManager _pixelFormatForScenario:]
  -[AXMCaptureManager _filteredDevicesAndFormatsForScenario:]
  -[AXMCaptureManager _preferredFormatForFormats:]
  -[AXMCaptureManager printAllVideoDevices]
  -[AXMCaptureManager beginLiveDetectionWithOptions:]
  -[AXMCaptureManager endLiveDetection]
  -[AXMCaptureManager captureOutput:didOutputSampleBuffer:fromConnection:]
  -[AXMCaptureManager stopSession]


AXMCaptureSettings : NSObject /usr/lib/libc++.1.dylib
 @property  AVCaptureDevice *captureDevice
 @property  AVCaptureDeviceFormat *captureFormat

  // instance methods
  -[AXMCaptureSettings captureDevice]
  -[AXMCaptureSettings .cxx_destruct]
  -[AXMCaptureSettings captureFormat]
  -[AXMCaptureSettings setCaptureFormat:]
  -[AXMCaptureSettings setCaptureDevice:]


_AXMCaptureManagerDetectionEngine : NSObject /usr/lib/libc++.1.dylib <AXMCaptureManagerVideoFrameObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_AXMCaptureManagerDetectionEngine .cxx_destruct]
  -[_AXMCaptureManagerDetectionEngine captureManager:didOutputPixelBuffer:]
  -[_AXMCaptureManagerDetectionEngine initWithCaptureManager:options:]


AXMSequenceRequestManager : NSObject /usr/lib/libc++.1.dylib
 @property  VNSequenceRequestHandler *sequenceRequestHandler

  // instance methods
  -[AXMSequenceRequestManager .cxx_destruct]
  -[AXMSequenceRequestManager sequenceRequestHandler]
  -[AXMSequenceRequestManager setSequenceRequestHandler:]


Prediction : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long uiClass
 @property  double confidence
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  NSString *label

  // instance methods
  -[Prediction setConfidence:]
  -[Prediction .cxx_destruct]
  -[Prediction setUiClass:]
  -[Prediction confidence]
  -[Prediction label]
  -[Prediction setBoundingBox:]
  -[Prediction boundingBox]
  -[Prediction uiClass]
  -[Prediction setLabel:]


AXMAXElementDetectorNode : AXMMobileAssetEvaluationNode
 @property  AXShotflowDetector *shotflowDetector
 @property  int ANODModelVersion

  // class methods
  +[AXMAXElementDetectorNode isSupported]
  +[AXMAXElementDetectorNode supportsSecureCoding]
  +[AXMAXElementDetectorNode title]

  // instance methods
  -[AXMAXElementDetectorNode modelResourceNames]
  -[AXMAXElementDetectorNode mlModelClasses]
  -[AXMAXElementDetectorNode mobileAssetType]
  -[AXMAXElementDetectorNode minSupportedFormatVersion]
  -[AXMAXElementDetectorNode .cxx_destruct]
  -[AXMAXElementDetectorNode _evaluateANOD:]
  -[AXMAXElementDetectorNode IoUForbb1:bb2:]
  -[AXMAXElementDetectorNode _screenEquivalenceToken:]
  -[AXMAXElementDetectorNode _initializeShotflowDetector]
  -[AXMAXElementDetectorNode _performCrossClassNMSForDetections:iouThreshold:]
  -[AXMAXElementDetectorNode iconPictureModel]
  -[AXMAXElementDetectorNode _imageByWipingTextFromRects:image:colorSpace:ciContext:]
  -[AXMAXElementDetectorNode _nonMaxSupression:iouThreshold:]
  -[AXMAXElementDetectorNode shotflowDetector]
  -[AXMAXElementDetectorNode ANODModelVersion]
  -[AXMAXElementDetectorNode setANODModelVersion:]
  -[AXMAXElementDetectorNode evaluate:metrics:]


AXMLayoutItem : NSObject /usr/lib/libc++.1.dylib
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  double height
 @property  double top
 @property  double bottom
 @property  double width
 @property  double left
 @property  double right
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} normalizedFrame

  // class methods
  +[AXMLayoutItem boundingFrameForItems:]
  +[AXMLayoutItem normalizedBoundingFrameForItems:]

  // instance methods
  -[AXMLayoutItem left]
  -[AXMLayoutItem top]
  -[AXMLayoutItem bottom]
  -[AXMLayoutItem width]
  -[AXMLayoutItem _metricTypeForMetric:]
  -[AXMLayoutItem _floatValueForMetric:]
  -[AXMLayoutItem _rectValueForMetric:]
  -[AXMLayoutItem metric:inProximityOfMetric:item:threshold:]
  -[AXMLayoutItem right]
  -[AXMLayoutItem height]


AXMLayoutSequence : AXMLayoutItem
  // class methods
  +[AXMLayoutSequence sequence:]

  // instance methods
  -[AXMLayoutSequence frame]
  -[AXMLayoutSequence .cxx_destruct]
  -[AXMLayoutSequence feature]
  -[AXMLayoutSequence normalizedFrame]


AXMLayoutLine : AXMLayoutItem
  // class methods
  +[AXMLayoutLine line:]

  // instance methods
  -[AXMLayoutLine frame]
  -[AXMLayoutLine .cxx_destruct]
  -[AXMLayoutLine addSequence:]
  -[AXMLayoutLine sequences]
  -[AXMLayoutLine normalizedFrame]


AXMLayoutRegion : AXMLayoutItem
  // class methods
  +[AXMLayoutRegion region:]

  // instance methods
  -[AXMLayoutRegion frame]
  -[AXMLayoutRegion addLine:]
  -[AXMLayoutRegion lines]
  -[AXMLayoutRegion .cxx_destruct]
  -[AXMLayoutRegion normalizedFrame]
  -[AXMLayoutRegion firstLine]


AXMTextLayoutManager : NSObject /usr/lib/libc++.1.dylib
 @property  AXMSemanticTextFactory *semanticTextFactory

  // instance methods
  -[AXMTextLayoutManager .cxx_destruct]
  -[AXMTextLayoutManager semanticTextFactory]
  -[AXMTextLayoutManager documentWithTextItems:canvasSize:preferredLocales:applySemanticAnalysis:error:]
  -[AXMTextLayoutManager initWithSemanticTextFactory:]
  -[AXMTextLayoutManager setSemanticTextFactory:]
  -[AXMTextLayoutManager _assembleLayoutSequences:canvasSize:]
  -[AXMTextLayoutManager _assembleLayoutLines:]
  -[AXMTextLayoutManager _assembleLayoutRegions:]


AXMImageRegistrationNode : AXMEvaluationNode <NSSecureCoding>
 @property  long long registrationState

  // class methods
  +[AXMImageRegistrationNode isSupported]
  +[AXMImageRegistrationNode supportsSecureCoding]
  +[AXMImageRegistrationNode title]

  // instance methods
  -[AXMImageRegistrationNode .cxx_destruct]
  -[AXMImageRegistrationNode registrationState]
  -[AXMImageRegistrationNode _resetTranspositionHistory]
  -[AXMImageRegistrationNode _translationalImageRegistrationRequestForInput:]
  -[AXMImageRegistrationNode _recordTransposition:]
  -[AXMImageRegistrationNode _resetImageRegistration]
  -[AXMImageRegistrationNode nodeInitialize]
  -[AXMImageRegistrationNode evaluate:metrics:]
  -[AXMImageRegistrationNode validateVisionKitSoftLinkSymbols]
  -[AXMImageRegistrationNode requiresVisionFramework]


AXMCameraMetadataNode : AXMSourceNode
  // class methods
  +[AXMCameraMetadataNode isSupported]
  +[AXMCameraMetadataNode supportsSecureCoding]
  +[AXMCameraMetadataNode title]

  // instance methods
  -[AXMCameraMetadataNode triggerWithCameraType:cacheKey:resultHandler:]


AXMCaptureVideoDataOutput : AVCaptureVideoDataOutput /System/Library/Frameworks/CoreImage.framework/CoreImage

AXMCompressor : AXMAudioEffect
 @property  double ratio
 @property  double gainReduction
 @property  double engagement
 @property  unsigned long emaSamples
 @property  double ema
 @property  double attackMS
 @property  double releaseMS
 @property  double compressionRatio
 @property  double gain
 @property  double threshold
 @property  double sampleRate

  // class methods
  +[AXMCompressor limiter]
  +[AXMCompressor compressor]

  // instance methods
  -[AXMCompressor gain]
  -[AXMCompressor threshold]
  -[AXMCompressor ema]
  -[AXMCompressor ratio]
  -[AXMCompressor releaseMS]
  -[AXMCompressor setEma:]
  -[AXMCompressor setAttackMS:]
  -[AXMCompressor setReleaseMS:]
  -[AXMCompressor attackMS]
  -[AXMCompressor initWithAttack:release:compressionRatio:threshold:sampleRate:]
  -[AXMCompressor emaSamples]
  -[AXMCompressor engagement]
  -[AXMCompressor setEngagement:]
  -[AXMCompressor processSamples:]
  -[AXMCompressor compressionRatio]
  -[AXMCompressor setCompressionRatio:]
  -[AXMCompressor gainReduction]
  -[AXMCompressor setGainReduction:]
  -[AXMCompressor setEmaSamples:]
  -[AXMCompressor setThreshold:]
  -[AXMCompressor setSampleRate:]
  -[AXMCompressor setRatio:]
  -[AXMCompressor sampleRate]
  -[AXMCompressor setGain:]


AXMOutputAction : NSObject /usr/lib/libc++.1.dylib
 @property  AXMOutputActionHandle *handle

  // instance methods
  -[AXMOutputAction _initWithHandle:]
  -[AXMOutputAction .cxx_destruct]
  -[AXMOutputAction handle]


AXMSpeechOutputAction : AXMOutputAction
 @property  NSString *text

  // instance methods
  -[AXMSpeechOutputAction text]
  -[AXMSpeechOutputAction .cxx_destruct]
  -[AXMSpeechOutputAction initWithText:]


AXMSoundOutputAction : AXMOutputAction
 @property  NSURL *soundFileURL
 @property  NSString *soundID

  // class methods
  +[AXMSoundOutputAction _soundFileURLForSoundID:]

  // instance methods
  -[AXMSoundOutputAction initWithURL:]
  -[AXMSoundOutputAction .cxx_destruct]
  -[AXMSoundOutputAction soundID]
  -[AXMSoundOutputAction initWithSoundID:]
  -[AXMSoundOutputAction soundFileURL]
  -[AXMSoundOutputAction _initWithURL:handle:]
  -[AXMSoundOutputAction _initWithSoundID:handle:]


AXMOneShotSoundOutputAction : AXMSoundOutputAction

AXMActiveSoundOutputAction : AXMSoundOutputAction
 @property  AXMActiveSoundOutputActionHandle *handle

  // instance methods
  -[AXMActiveSoundOutputAction initWithURL:]
  -[AXMActiveSoundOutputAction initWithSoundID:]


AXMHapticOutputAction : AXMOutputAction
 @property  NSURL *hapticFileURL
 @property  double hapticIntensity

  // instance methods
  -[AXMHapticOutputAction initWithURL:]
  -[AXMHapticOutputAction .cxx_destruct]
  -[AXMHapticOutputAction _initWithURL:handle:]
  -[AXMHapticOutputAction hapticFileURL]
  -[AXMHapticOutputAction hapticIntensity]
  -[AXMHapticOutputAction setHapticIntensity:]


AXMOutputActionHandle : NSObject /usr/lib/libc++.1.dylib

AXMActiveSoundOutputActionHandle : AXMOutputActionHandle
 @property  <AXMActiveSoundOutputActionHandleProvider> *handleProvider
 @property  float pitch
 @property  float rate

  // instance methods
  -[AXMActiveSoundOutputActionHandle pitch]
  -[AXMActiveSoundOutputActionHandle rate]
  -[AXMActiveSoundOutputActionHandle .cxx_destruct]
  -[AXMActiveSoundOutputActionHandle setRate:]
  -[AXMActiveSoundOutputActionHandle stop]
  -[AXMActiveSoundOutputActionHandle handleProvider]
  -[AXMActiveSoundOutputActionHandle setQuantizedRate:]
  -[AXMActiveSoundOutputActionHandle setHandleProvider:]
  -[AXMActiveSoundOutputActionHandle setPitch:]


AXMPipelineContextInput : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long inputType
 @property  CIImage *ciImage
 @property  AXMPixelBufferWrapper *pixelBuffer
 @property  NSURL *URL
 @property  {CGSize=dd} size
 @property  ^{CGColorSpace=} imageColorSpace
 @property  ^{__CVBuffer=} wrappedPixelBuffer

  // class methods
  +[AXMPipelineContextInput new]
  +[AXMPipelineContextInput supportsSecureCoding]
  +[AXMPipelineContextInput inputWithPixelBuffer:]
  +[AXMPipelineContextInput inputWithCIImage:]
  +[AXMPipelineContextInput inputWithURL:]

  // instance methods
  -[AXMPipelineContextInput init]
  -[AXMPipelineContextInput inputType]
  -[AXMPipelineContextInput _initWithURL:]
  -[AXMPipelineContextInput dealloc]
  -[AXMPipelineContextInput size]
  -[AXMPipelineContextInput .cxx_destruct]
  -[AXMPipelineContextInput encodeWithCoder:]
  -[AXMPipelineContextInput ciImage]
  -[AXMPipelineContextInput _initWithCIImage:]
  -[AXMPipelineContextInput _initWithPixelBuffer:]
  -[AXMPipelineContextInput imageColorSpace]
  -[AXMPipelineContextInput createCGImageWithMetrics:]
  -[AXMPipelineContextInput wrappedPixelBuffer]
  -[AXMPipelineContextInput pixelBuffer]
  -[AXMPipelineContextInput URL]
  -[AXMPipelineContextInput initWithCoder:]


AXMIconClassDetectorNode : AXMMobileAssetEvaluationNode
 @property  iconclassification__generated__ *mlModel

  // class methods
  +[AXMIconClassDetectorNode isSupported]
  +[AXMIconClassDetectorNode supportsSecureCoding]
  +[AXMIconClassDetectorNode title]

  // instance methods
  -[AXMIconClassDetectorNode modelResourceNames]
  -[AXMIconClassDetectorNode mlModelClasses]
  -[AXMIconClassDetectorNode mobileAssetType]
  -[AXMIconClassDetectorNode minSupportedFormatVersion]
  -[AXMIconClassDetectorNode maxSupportedFormatVersion]
  -[AXMIconClassDetectorNode _localizedClassForClass:]
  -[AXMIconClassDetectorNode evaluate:metrics:]


AXMSemanticText : NSObject /usr/lib/libc++.1.dylib
 @property  NSLocale *locale
 @property  NSString *transformedSpeechText
 @property  long long tokenizedLength
 @property  NSString *preprocessedText
 @property  BOOL isSemanticallyComplete

  // instance methods
  -[AXMSemanticText setLocale:]
  -[AXMSemanticText locale]
  -[AXMSemanticText .cxx_destruct]
  -[AXMSemanticText isSemanticallyComplete]
  -[AXMSemanticText transformedSpeechText]
  -[AXMSemanticText textRange]
  -[AXMSemanticText initWithText:locale:]
  -[AXMSemanticText tokenizedLength]
  -[AXMSemanticText preprocessedText]
  -[AXMSemanticText enumerateNLPTokens:]
  -[AXMSemanticText setTokenizedLength:]
  -[AXMSemanticText enumerateLexiconMarkers:]
  -[AXMSemanticText enumerateNumericTokens:]
  -[AXMSemanticText enumerateDataDetectors:]
  -[AXMSemanticText enumerateCustomPatterns:]
  -[AXMSemanticText enumerateSemanticErrors:]
  -[AXMSemanticText addNLPToken:withRange:]
  -[AXMSemanticText addDataDetector:withRange:]
  -[AXMSemanticText addCustomPattern:withRange:]
  -[AXMSemanticText addIsInLexionMarker:withRange:]
  -[AXMSemanticText addSemanticErrorWithRange:]
  -[AXMSemanticText addNumericToken:withRange:]
  -[AXMSemanticText makeCursor]
  -[AXMSemanticText setTransformedSpeechText:]
  -[AXMSemanticText substringWithRange:]


AXMSemanticTextFactory : NSObject /usr/lib/libc++.1.dylib
 @property  NLTagger *tagger
 @property  NSMutableDictionary *cachedLexicons
 @property  NSNumberFormatter *numberFormatter
 @property  NSMutableDictionary *compiledPatterns
 @property  NSDataDetector *dataDetector

  // instance methods
  -[AXMSemanticTextFactory setNumberFormatter:]
  -[AXMSemanticTextFactory numberFormatter]
  -[AXMSemanticTextFactory .cxx_destruct]
  -[AXMSemanticTextFactory tagger]
  -[AXMSemanticTextFactory semanticTextForText:withLocale:]
  -[AXMSemanticTextFactory _preprocessedText:]
  -[AXMSemanticTextFactory _applyNaturalLanguageTokens:]
  -[AXMSemanticTextFactory _applyDataDetectors:]
  -[AXMSemanticTextFactory _applyCustomPatterns:]
  -[AXMSemanticTextFactory _performSemanticAnalysis:]
  -[AXMSemanticTextFactory _textExistsInLexicon:withLocale:]
  -[AXMSemanticTextFactory compiledPatterns]
  -[AXMSemanticTextFactory setTagger:]
  -[AXMSemanticTextFactory _lexiconForLocale:]
  -[AXMSemanticTextFactory cachedLexicons]
  -[AXMSemanticTextFactory _string:containsOnlyCharactersFrom:]
  -[AXMSemanticTextFactory _lexiconExistsForLocale:]
  -[AXMSemanticTextFactory setDataDetector:]
  -[AXMSemanticTextFactory setCachedLexicons:]
  -[AXMSemanticTextFactory setCompiledPatterns:]
  -[AXMSemanticTextFactory dataDetector]


_AXMSemanticTextCursor : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL isFinished
 @property  NSDictionary *currentAttributes
 @property  {_NSRange=QQ} remainingRange
 @property  BOOL isOtherWord
 @property  BOOL isWhitespace
 @property  BOOL isPunctuation
 @property  BOOL isProperNoun
 @property  BOOL isSentenceTerminator
 @property  BOOL isInLexicon
 @property  BOOL isCustomPattern
 @property  BOOL isDataDetector

  // instance methods
  -[_AXMSemanticTextCursor advance]
  -[_AXMSemanticTextCursor .cxx_destruct]
  -[_AXMSemanticTextCursor isPunctuation]
  -[_AXMSemanticTextCursor isFinished]
  -[_AXMSemanticTextCursor initWithText:semanticText:]
  -[_AXMSemanticTextCursor remainingRange]
  -[_AXMSemanticTextCursor isOtherWord]
  -[_AXMSemanticTextCursor isInLexicon]
  -[_AXMSemanticTextCursor isWhitespace]
  -[_AXMSemanticTextCursor isCustomPattern]
  -[_AXMSemanticTextCursor processAttribute:getSubstring:advanceCursor:markAsSemanticError:error:]
  -[_AXMSemanticTextCursor isDataDetector]
  -[_AXMSemanticTextCursor isSentenceTerminator]
  -[_AXMSemanticTextCursor isProperNoun]
  -[_AXMSemanticTextCursor markCurrentIndexAsSemanticErrorAndAdvanceCursor]
  -[_AXMSemanticTextCursor currentAttributes]


AXMPixelBufferWrapper : NSObject /usr/lib/libc++.1.dylib
 @property  ^{__CVBuffer=} pixelBuffer
 @property  unsigned int orientation
 @property  {CGSize=dd} unorientedSize
 @property  {CGSize=dd} orientedSize

  // class methods
  +[AXMPixelBufferWrapper new]
  +[AXMPixelBufferWrapper wrapperWithPixelBuffer:orientation:]

  // instance methods
  -[AXMPixelBufferWrapper init]
  -[AXMPixelBufferWrapper dealloc]
  -[AXMPixelBufferWrapper orientedSize]
  -[AXMPixelBufferWrapper pixelBuffer]
  -[AXMPixelBufferWrapper orientation]
  -[AXMPixelBufferWrapper _initWithPixelBuffer:orientation:]
  -[AXMPixelBufferWrapper unorientedSize]


AXMSceneprintBasedNode : AXMEvaluationNode
  // class methods
  +[AXMSceneprintBasedNode title]

  // instance methods
  -[AXMSceneprintBasedNode evaluate:metrics:]
  -[AXMSceneprintBasedNode requiresVisionFramework]


AXMAssetMetadataNode : AXMSourceNode
  // class methods
  +[AXMAssetMetadataNode isSupported]
  +[AXMAssetMetadataNode supportsSecureCoding]
  +[AXMAssetMetadataNode title]

  // instance methods
  -[AXMAssetMetadataNode triggerWithAssetURL:cacheKey:resultHandler:]


AXMDataSonifier : NSObject /usr/lib/libc++.1.dylib
 @property  NSTimer *playbackObserverUpdateTimer
 @property  AXMAudioDataSourceMixer *playbackMixerDataSource
 @property  AXMAudioDataSource *playbackChartDataAudioDataSource
 @property  AXMAudioDataSource *playbackTrendlineAudioDataSource
 @property  AXMAudioDataSourceMixer *scrubbingMixerDataSource
 @property  AXMAudioDataSource *scrubbingDiscreteAudioDataSource
 @property  AXMAudioDataSource *scrubbingContinuousAudioDataSource
 @property  AXMAudioDataSource *scrubbingTrendlineAudioDataSource
 @property  AXMAudioDataSourceMixer *liveContinuousMixerDataSource
 @property  AXMAudioDataSource *liveContinuousAudioDataSource
 @property  NSPointerArray *playbackObservers
 @property  int interpolationMode
 @property  AXMLiveContinuousTone *continuousScrubbingTone
 @property  AXMLiveContinuousTone *trendlineScrubbingTone
 @property  AXMLiveContinuousTone *liveContinuousDataTone
 @property  @? trendlineFunction
 @property  BOOL isEndingScrubbing
 @property  ^{vector<int scrubbingDiscreteDataRenderingContext
 @property  ^{vector<int scrubbingPlaybackCallbackRenderingContext
 @property  ^{vector<int liveTonePlaybackCallbackRenderingContext
 @property  unsigned long playbackSampleCount
 @property  BOOL isPlaying
 @property  BOOL isPaused
 @property  BOOL isScrubbing
 @property  BOOL isInLiveContinuousToneSession
 @property  double currentPlaybackPosition
 @property  double minimumPlaybackFrequency
 @property  double maximumPlaybackFrequency
 @property  double playbackDuration
 @property  AXMADSREnvelope *ampEnvelope
 @property  unsigned long toneWaveform
 @property  BOOL usesBinauralPanning
 @property  int dataMode
 @property  @? function

  // class methods
  +[AXMDataSonifier sharedInstance]

  // instance methods
  -[AXMDataSonifier playbackDuration]
  -[AXMDataSonifier function]
  -[AXMDataSonifier play]
  -[AXMDataSonifier isPlaying]
  -[AXMDataSonifier pause]
  -[AXMDataSonifier init]
  -[AXMDataSonifier frequencyForYAxisValue:]
  -[AXMDataSonifier ampEnvelope]
  -[AXMDataSonifier toneWaveform]
  -[AXMDataSonifier _peakNormalizeBuffer:length:level:]
  -[AXMDataSonifier hasContinuousDataForXPosition:]
  -[AXMDataSonifier interpolatedYAxisValueForNormalizedPosition:]
  -[AXMDataSonifier xAxisValueForPosition:]
  -[AXMDataSonifier setTrendlineFunction:]
  -[AXMDataSonifier _initializeAXMAudioDataSources]
  -[AXMDataSonifier _renderDiscreteAudio]
  -[AXMDataSonifier _renderContinuousAudio]
  -[AXMDataSonifier _renderUnivariateFunctionAudio]
  -[AXMDataSonifier sampleIndexForXAxisValue:]
  -[AXMDataSonifier timeOffsetForXAxisValue:]
  -[AXMDataSonifier _initializeAudioComponent]
  -[AXMDataSonifier _setAudioFormat]
  -[AXMDataSonifier setPlaybackPosition:]
  -[AXMDataSonifier _setOutputCallback]
  -[AXMDataSonifier normalizedXAxisValueForValue:]
  -[AXMDataSonifier minimumPlaybackFrequency]
  -[AXMDataSonifier maximumPlaybackFrequency]
  -[AXMDataSonifier normalizedYAxisValueForValue:]
  -[AXMDataSonifier _initializeLiveToneDataSource]
  -[AXMDataSonifier liveContinuousDataTone]
  -[AXMDataSonifier addPlaybackObserver:]
  -[AXMDataSonifier removePlaybackObserver:]
  -[AXMDataSonifier sampleIndexForTimeOffset:]
  -[AXMDataSonifier beginLiveContinuousToneSession]
  -[AXMDataSonifier dealloc]
  -[AXMDataSonifier loadDataAndRenderAudioForXAxis:yAxis:numValues:axisMinimumX:axisMaximumX:axisMinimumY:axisMaximumY:interpolationMode:trendline:]
  -[AXMDataSonifier endLiveContinuousToneSession]
  -[AXMDataSonifier setLiveContinuousToneNormalizedFrequency:]
  -[AXMDataSonifier setMinimumPlaybackFrequency:]
  -[AXMDataSonifier setMaximumPlaybackFrequency:]
  -[AXMDataSonifier setAmpEnvelope:]
  -[AXMDataSonifier setToneWaveform:]
  -[AXMDataSonifier usesBinauralPanning]
  -[AXMDataSonifier setUsesBinauralPanning:]
  -[AXMDataSonifier isInLiveContinuousToneSession]
  -[AXMDataSonifier setPlaybackMixerDataSource:]
  -[AXMDataSonifier setPlaybackChartDataAudioDataSource:]
  -[AXMDataSonifier setPlaybackTrendlineAudioDataSource:]
  -[AXMDataSonifier setScrubbingMixerDataSource:]
  -[AXMDataSonifier setScrubbingDiscreteAudioDataSource:]
  -[AXMDataSonifier setScrubbingContinuousAudioDataSource:]
  -[AXMDataSonifier setScrubbingTrendlineAudioDataSource:]
  -[AXMDataSonifier setLiveContinuousMixerDataSource:]
  -[AXMDataSonifier setLiveContinuousAudioDataSource:]
  -[AXMDataSonifier setPlaybackObservers:]
  -[AXMDataSonifier scrubbingPlaybackCallbackRenderingContext]
  -[AXMDataSonifier liveTonePlaybackCallbackRenderingContext]
  -[AXMDataSonifier .cxx_destruct]
  -[AXMDataSonifier setPlaybackDuration:]
  -[AXMDataSonifier dataMode]
  -[AXMDataSonifier isScrubbing]
  -[AXMDataSonifier beginScrubbing]
  -[AXMDataSonifier endScrubbing]
  -[AXMDataSonifier isPaused]
  -[AXMDataSonifier _initializeAudioUnit]
  -[AXMDataSonifier playbackMixerDataSource]
  -[AXMDataSonifier playbackSampleCount]
  -[AXMDataSonifier playbackChartDataAudioDataSource]
  -[AXMDataSonifier playbackTrendlineAudioDataSource]
  -[AXMDataSonifier scrubbingMixerDataSource]
  -[AXMDataSonifier scrubbingDiscreteAudioDataSource]
  -[AXMDataSonifier scrubbingContinuousAudioDataSource]
  -[AXMDataSonifier scrubbingTrendlineAudioDataSource]
  -[AXMDataSonifier scrubbingDiscreteDataRenderingContext]
  -[AXMDataSonifier liveContinuousMixerDataSource]
  -[AXMDataSonifier liveContinuousAudioDataSource]
  -[AXMDataSonifier playbackObservers]
  -[AXMDataSonifier currentPlaybackPosition]
  -[AXMDataSonifier setPlaybackObserverUpdateTimer:]
  -[AXMDataSonifier playbackObserverUpdateTimer]
  -[AXMDataSonifier stopScrubbing]
  -[AXMDataSonifier stopPlaying]
  -[AXMDataSonifier _uninitializeAudioUnit]
  -[AXMDataSonifier scrubToPlaybackFrame:]
  -[AXMDataSonifier trendlineFunction]
  -[AXMDataSonifier interpolationMode]
  -[AXMDataSonifier _newContinuousToneEnvelope]
  -[AXMDataSonifier isEndingScrubbing]
  -[AXMDataSonifier continuousScrubbingTone]
  -[AXMDataSonifier trendlineScrubbingTone]


iconclassification__generated__Input : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  MLMultiArray *input_1
 @property  NSSet *featureNames

  // instance methods
  -[iconclassification__generated__Input featureNames]
  -[iconclassification__generated__Input input_1]
  -[iconclassification__generated__Input featureValueForName:]
  -[iconclassification__generated__Input setInput_1:]
  -[iconclassification__generated__Input .cxx_destruct]
  -[iconclassification__generated__Input initWithInput_1:]


iconclassification__generated__Output : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  NSDictionary *output1
 @property  NSString *classLabel
 @property  NSSet *featureNames

  // instance methods
  -[iconclassification__generated__Output featureNames]
  -[iconclassification__generated__Output featureValueForName:]
  -[iconclassification__generated__Output setClassLabel:]
  -[iconclassification__generated__Output .cxx_destruct]
  -[iconclassification__generated__Output setOutput1:]
  -[iconclassification__generated__Output initWithOutput1:classLabel:]
  -[iconclassification__generated__Output output1]
  -[iconclassification__generated__Output classLabel]


iconclassification__generated__ : NSObject /usr/lib/libc++.1.dylib
 @property  MLModel *model

  // class methods
  +[iconclassification__generated__ urlOfModelInThisBundle]

  // instance methods
  -[iconclassification__generated__ predictionFromFeatures:options:error:]
  -[iconclassification__generated__ init]
  -[iconclassification__generated__ predictionsFromInputs:options:error:]
  -[iconclassification__generated__ .cxx_destruct]
  -[iconclassification__generated__ initWithContentsOfURL:error:]
  -[iconclassification__generated__ predictionFromFeatures:error:]
  -[iconclassification__generated__ predictionFromInput_1:error:]
  -[iconclassification__generated__ initWithContentsOfURL:configuration:error:]
  -[iconclassification__generated__ model]
  -[iconclassification__generated__ initWithConfiguration:error:]


_AXMSettingObserver : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[_AXMSettingObserver .cxx_destruct]


AXMSettings : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL writeOutInputImages
 @property  BOOL writeOutOCRInputImages
 @property  BOOL writeOutScreenCaptures
 @property  BOOL useANODModelForAXElementVision

  // class methods
  +[AXMSettings settings]

  // instance methods
  -[AXMSettings .cxx_destruct]
  -[AXMSettings _init]
  -[AXMSettings _queue_removeObserver:forSetting:]
  -[AXMSettings addObserver:forSeetting:withBlock:]
  -[AXMSettings removeObserver:forSetting:]
  -[AXMSettings removeObserverForAllSettings:]
  -[AXMSettings writeOutInputImages]
  -[AXMSettings setWriteOutInputImages:]
  -[AXMSettings writeOutOCRInputImages]
  -[AXMSettings setWriteOutOCRInputImages:]
  -[AXMSettings writeOutScreenCaptures]
  -[AXMSettings setWriteOutScreenCaptures:]
  -[AXMSettings useANODModelForAXElementVision]
  -[AXMSettings setUseANODModelForAXElementVision:]
  -[AXMSettings observeValueForKeyPath:ofObject:change:context:]


AXMVisionFeatureAssetMetadata : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSURL *assetURL
 @property  NSString *name
 @property  NSDate *creationDate
 @property  NSString *uti
 @property  NSString *localizedTypeDescription
 @property  NSString *TIFFImageDescription
 @property  NSString *IPTCCaptionAbstract
 @property  NSString *EXIFUserComment
 @property  NSString *PNGImageDescription
 @property  NSURL *url

  // class methods
  +[AXMVisionFeatureAssetMetadata supportsSecureCoding]
  +[AXMVisionFeatureAssetMetadata assetMetadataFromURL:]

  // instance methods
  -[AXMVisionFeatureAssetMetadata uti]
  -[AXMVisionFeatureAssetMetadata url]
  -[AXMVisionFeatureAssetMetadata creationDate]
  -[AXMVisionFeatureAssetMetadata setUti:]
  -[AXMVisionFeatureAssetMetadata .cxx_destruct]
  -[AXMVisionFeatureAssetMetadata name]
  -[AXMVisionFeatureAssetMetadata encodeWithCoder:]
  -[AXMVisionFeatureAssetMetadata setLocalizedTypeDescription:]
  -[AXMVisionFeatureAssetMetadata setTIFFImageDescription:]
  -[AXMVisionFeatureAssetMetadata setIPTCCaptionAbstract:]
  -[AXMVisionFeatureAssetMetadata setEXIFUserComment:]
  -[AXMVisionFeatureAssetMetadata setPNGImageDescription:]
  -[AXMVisionFeatureAssetMetadata localizedTypeDescription]
  -[AXMVisionFeatureAssetMetadata TIFFImageDescription]
  -[AXMVisionFeatureAssetMetadata IPTCCaptionAbstract]
  -[AXMVisionFeatureAssetMetadata EXIFUserComment]
  -[AXMVisionFeatureAssetMetadata PNGImageDescription]
  -[AXMVisionFeatureAssetMetadata isEqual:]
  -[AXMVisionFeatureAssetMetadata assetURL]
  -[AXMVisionFeatureAssetMetadata setCreationDate:]
  -[AXMVisionFeatureAssetMetadata setName:]
  -[AXMVisionFeatureAssetMetadata initWithCoder:]
  -[AXMVisionFeatureAssetMetadata setAssetURL:]


AXMVisionFeatureAestheticsResult : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  float aestheticScore
 @property  float wellFramedSubjectScore
 @property  float pleasantCompositionScore
 @property  float wellChosenBackgroundScore
 @property  float noiseScore
 @property  float failureScore

  // class methods
  +[AXMVisionFeatureAestheticsResult supportsSecureCoding]

  // instance methods
  -[AXMVisionFeatureAestheticsResult noiseScore]
  -[AXMVisionFeatureAestheticsResult wellFramedSubjectScore]
  -[AXMVisionFeatureAestheticsResult failureScore]
  -[AXMVisionFeatureAestheticsResult pleasantCompositionScore]
  -[AXMVisionFeatureAestheticsResult wellChosenBackgroundScore]
  -[AXMVisionFeatureAestheticsResult encodeWithCoder:]
  -[AXMVisionFeatureAestheticsResult initWithVisionAestheticsObservation:]
  -[AXMVisionFeatureAestheticsResult aestheticScore]
  -[AXMVisionFeatureAestheticsResult initWithCoder:]


AXMDisplayManager : NSObject /usr/lib/libc++.1.dylib <FBSDisplayObserving>
 @property  FBSDisplayMonitor *displayMonitor
 @property  double mobileGestaltOrientation
 @property  AXMDisplay *frontBoardMainDisplay
 @property  AXMDisplay *coreAnimationMainDisplay
 @property  BOOL isInitialized
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXMDisplayManager displayMonitor]
  -[AXMDisplayManager _updateDisplay:withCADisplay:]
  -[AXMDisplayManager setMobileGestaltOrientation:]
  -[AXMDisplayManager dealloc]
  -[AXMDisplayManager .cxx_destruct]
  -[AXMDisplayManager isInitialized]
  -[AXMDisplayManager _displayPropertiesFromMobileGestalt]
  -[AXMDisplayManager _discreteOrientationForOrientation:]
  -[AXMDisplayManager _updateDisplayPropertiesWithConfiguration:]
  -[AXMDisplayManager displayMonitor:didConnectIdentity:withConfiguration:]
  -[AXMDisplayManager initWithCompletion:]
  -[AXMDisplayManager setDisplayMonitor:]
  -[AXMDisplayManager frontBoardMainDisplay]
  -[AXMDisplayManager displayMonitor:didUpdateIdentity:withConfiguration:]
  -[AXMDisplayManager _updateDisplay:withConfiguration:]
  -[AXMDisplayManager mobileGestaltOrientation]
  -[AXMDisplayManager coreAnimationMainDisplay]
  -[AXMDisplayManager displayMonitor:willDisconnectIdentity:]
  -[AXMDisplayManager initAndWaitForMainDisplayConfiguration]


AXMDisplay : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  long long backingType
 @property  NSString *name
 @property  double scale
 @property  {CGSize=dd} size
 @property  double orientation
 @property  long long physicalOrientation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} referenceBounds
 @property  BOOL supportsDeepColor

  // instance methods
  -[AXMDisplay copyWithZone:]
  -[AXMDisplay referenceBounds]
  -[AXMDisplay convertRectToDisplay:]
  -[AXMDisplay physicalOrientation]
  -[AXMDisplay setScale:]
  -[AXMDisplay size]
  -[AXMDisplay backingType]
  -[AXMDisplay supportsDeepColor]
  -[AXMDisplay .cxx_destruct]
  -[AXMDisplay name]
  -[AXMDisplay _initWithBackingType:]
  -[AXMDisplay setBackingType:]
  -[AXMDisplay setPhysicalOrientation:]
  -[AXMDisplay setSize:]
  -[AXMDisplay setOrientation:]
  -[AXMDisplay setReferenceBounds:]
  -[AXMDisplay orientation]
  -[AXMDisplay setSupportsDeepColor:]
  -[AXMDisplay setName:]
  -[AXMDisplay scale]
  -[AXMDisplay convertPointToDisplay:]


AXMDataRegressionModelPower : AXMDataRegressionModel
  // instance methods
  -[AXMDataRegressionModelPower modelDescription]
  -[AXMDataRegressionModelPower modelFunction]
  -[AXMDataRegressionModelPower modelParameterCount]
  -[AXMDataRegressionModelPower getInitialParams:]
  -[AXMDataRegressionModelPower partialDerivatives]
  -[AXMDataRegressionModelPower modelFunctionStringForParameters:significantFigures:]
  -[AXMDataRegressionModelPower dataSatisfiesInitialConditions]


AXMDataSummary : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumberFormatter *numberFormatter
 @property  NSArray *axisTitles
 @property  NSArray *xValues
 @property  NSArray *yValues
 @property  AXMDataRegressionModel *regressionModel
 @property  unsigned long n
 @property  double r
 @property  double rSquared
 @property  double minX
 @property  double maxX
 @property  double meanX
 @property  double varianceX
 @property  double minY
 @property  double maxY
 @property  double meanY
 @property  double varianceY
 @property  double covariance
 @property  double slope
 @property  double intercept
 @property  NSArray *residuals
 @property  NSArray *outliers
 @property  NSObject<AXMDataSummaryCategoryNameProvider> *categoryNameDelegate
 @property  NSString *modelDescription
 @property  NSString *slopeDescription
 @property  NSString *confidenceDescription
 @property  NSString *minValueDescription
 @property  NSString *maxValueDescription
 @property  NSString *meanValueDescription
 @property  NSString *medianValueDescription
 @property  NSString *outliersDescription
 @property  NSString *bestFitCurveEquation
 @property  NSString *fullDescription
 @property  NSString *simpleDescription
 @property  NSString *numericalDescription

  // instance methods
  -[AXMDataSummary r]
  -[AXMDataSummary n]
  -[AXMDataSummary maxX]
  -[AXMDataSummary minX]
  -[AXMDataSummary minY]
  -[AXMDataSummary maxY]
  -[AXMDataSummary simpleDescription]
  -[AXMDataSummary setNumberFormatter:]
  -[AXMDataSummary numberFormatter]
  -[AXMDataSummary compute]
  -[AXMDataSummary slope]
  -[AXMDataSummary meanX]
  -[AXMDataSummary meanY]
  -[AXMDataSummary .cxx_destruct]
  -[AXMDataSummary intercept]
  -[AXMDataSummary xValues]
  -[AXMDataSummary yValues]
  -[AXMDataSummary varianceX]
  -[AXMDataSummary getValues:fromNSNumberArray:]
  -[AXMDataSummary setRegressionModel:]
  -[AXMDataSummary regressionModel]
  -[AXMDataSummary descriptionForXValue:]
  -[AXMDataSummary getMedian:]
  -[AXMDataSummary slopeDescription]
  -[AXMDataSummary confidenceDescription]
  -[AXMDataSummary outliersDescription]
  -[AXMDataSummary meanValueDescription]
  -[AXMDataSummary minValueDescription]
  -[AXMDataSummary maxValueDescription]
  -[AXMDataSummary stringForComponents:]
  -[AXMDataSummary computeRanges]
  -[AXMDataSummary computeMeans]
  -[AXMDataSummary computeCovariance]
  -[AXMDataSummary computeVariances]
  -[AXMDataSummary computeLinearRegression]
  -[AXMDataSummary computeResiduals]
  -[AXMDataSummary computeOutliers]
  -[AXMDataSummary getVariance:]
  -[AXMDataSummary positionForXAxisValue:]
  -[AXMDataSummary categoryNameDelegate]
  -[AXMDataSummary initWithAxisTitles:xValues:yValues:]
  -[AXMDataSummary computeRegressionModel:]
  -[AXMDataSummary medianValueDescription]
  -[AXMDataSummary bestFitCurveEquation]
  -[AXMDataSummary numericalDescription]
  -[AXMDataSummary positionForYAxisValue:]
  -[AXMDataSummary axisTitles]
  -[AXMDataSummary setCategoryNameDelegate:]
  -[AXMDataSummary fullDescription]
  -[AXMDataSummary varianceY]
  -[AXMDataSummary covariance]
  -[AXMDataSummary residuals]
  -[AXMDataSummary modelDescription]
  -[AXMDataSummary outliers]
  -[AXMDataSummary computeR]
  -[AXMDataSummary getMean:]
  -[AXMDataSummary rSquared]


AXMCoreMotionNode : AXMSourceNode
 @property  double lastSampleTime
 @property  unsigned long samplesPerSecond

  // class methods
  +[AXMCoreMotionNode isSupported]
  +[AXMCoreMotionNode supportsSecureCoding]
  +[AXMCoreMotionNode title]

  // instance methods
  -[AXMCoreMotionNode initWithIdentifier:]
  -[AXMCoreMotionNode encodeWithCoder:]
  -[AXMCoreMotionNode samplesPerSecond]
  -[AXMCoreMotionNode lastSampleTime]
  -[AXMCoreMotionNode setLastSampleTime:]
  -[AXMCoreMotionNode triggerWithCoreMotionManager:deviceOrientation:cacheKey:resultHandler:]
  -[AXMCoreMotionNode setSamplesPerSecond:]
  -[AXMCoreMotionNode nodeInitialize]
  -[AXMCoreMotionNode initWithCoder:]


AXMAddressFormatter : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AXMAddressFormatter replaceDirectionalAbbreviations:]


AXMLiveContinuousTone : AXMTone
 @property  double phase
 @property  unsigned long framesRendered
 @property  BOOL releasing
 @property  unsigned long releaseFrame
 @property  BOOL muted

  // instance methods
  -[AXMLiveContinuousTone muted]
  -[AXMLiveContinuousTone setFrequency:]
  -[AXMLiveContinuousTone setMuted:]
  -[AXMLiveContinuousTone phase]
  -[AXMLiveContinuousTone initWithSampleRate:envelope:]
  -[AXMLiveContinuousTone renderInBuffer:atFrame:numSamples:]
  -[AXMLiveContinuousTone releasing]
  -[AXMLiveContinuousTone setReleasing:]
  -[AXMLiveContinuousTone setReleaseFrame:]
  -[AXMLiveContinuousTone framesRendered]
  -[AXMLiveContinuousTone resetRelease]
  -[AXMLiveContinuousTone releaseFrame]
  -[AXMLiveContinuousTone setFramesRendered:]
  -[AXMLiveContinuousTone startRelease]


AXShotflowHelpers : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[AXShotflowHelpers setCIContext]
  +[AXShotflowHelpers resizeImage:byX:andY:]
  +[AXShotflowHelpers resizeImage:to:]
  +[AXShotflowHelpers createVImageBuffer:]
  +[AXShotflowHelpers setCIContext:]
  +[AXShotflowHelpers getCGImageFromCIImage:]
  +[AXShotflowHelpers resizeImage:toWidth:andHeight:]


AXMDataRegressionModelSine : AXMDataRegressionModel
  // instance methods
  -[AXMDataRegressionModelSine estimatedRadianFrequency]
  -[AXMDataRegressionModelSine disqualifyModelIfNecessary]
  -[AXMDataRegressionModelSine modelDescription]
  -[AXMDataRegressionModelSine modelFunction]
  -[AXMDataRegressionModelSine modelParameterCount]
  -[AXMDataRegressionModelSine getInitialParams:]
  -[AXMDataRegressionModelSine partialDerivatives]
  -[AXMDataRegressionModelSine modelFunctionStringForParameters:significantFigures:]


AXMProminentObjectsDetectorNode : AXMEvaluationNode
 @property  VNGenerateAttentionBasedSaliencyImageRequest *_imageSaliencyRequest

  // class methods
  +[AXMProminentObjectsDetectorNode isSupported]
  +[AXMProminentObjectsDetectorNode supportsSecureCoding]
  +[AXMProminentObjectsDetectorNode title]

  // instance methods
  -[AXMProminentObjectsDetectorNode .cxx_destruct]
  -[AXMProminentObjectsDetectorNode encodeWithCoder:]
  -[AXMProminentObjectsDetectorNode _imageSaliencyRequest]
  -[AXMProminentObjectsDetectorNode set_imageSaliencyRequest:]
  -[AXMProminentObjectsDetectorNode nodeInitialize]
  -[AXMProminentObjectsDetectorNode evaluate:metrics:]
  -[AXMProminentObjectsDetectorNode validateVisionKitSoftLinkSymbols]
  -[AXMProminentObjectsDetectorNode initWithCoder:]
  -[AXMProminentObjectsDetectorNode requiresVisionFramework]


AXMBarcodeNode : AXMEvaluationNode <NSSecureCoding>
 @property  AVCaptureMetadataOutput *captureOutput

  // class methods
  +[AXMBarcodeNode isSupported]
  +[AXMBarcodeNode supportsSecureCoding]
  +[AXMBarcodeNode title]

  // instance methods
  -[AXMBarcodeNode .cxx_destruct]
  -[AXMBarcodeNode captureOutput]
  -[AXMBarcodeNode setCaptureOutput:]


AXMEvaluationNode : AXMVisionEngineNode <NSSecureCoding>
 @property  unsigned long effectivePriority
 @property  double minimumConfidence
 @property  unsigned long priority

  // class methods
  +[AXMEvaluationNode supportsSecureCoding]
  +[AXMEvaluationNode defaultPriority]
  +[AXMEvaluationNode isANEDeviceAvailable]
  +[AXMEvaluationNode configureForRunningOnANEIfPossibleWithRequest:]
  +[AXMEvaluationNode preferredModelInputSize]

  // instance methods
  -[AXMEvaluationNode shouldEvaluate:]
  -[AXMEvaluationNode boostEffectivePriority]
  -[AXMEvaluationNode effectivePriority]
  -[AXMEvaluationNode resetEffectivePriority]
  -[AXMEvaluationNode encodeWithCoder:]
  -[AXMEvaluationNode minimumConfidence]
  -[AXMEvaluationNode _diagnosticNameForRequests:metrics:]
  -[AXMEvaluationNode setEffectivePriority:]
  -[AXMEvaluationNode setPriority:]
  -[AXMEvaluationNode priority]
  -[AXMEvaluationNode nodeInitialize]
  -[AXMEvaluationNode evaluate:metrics:]
  -[AXMEvaluationNode validateVisionKitSoftLinkSymbols]
  -[AXMEvaluationNode initWithCoder:]
  -[AXMEvaluationNode evaluateRequests:withContext:requestHandlerOptions:metrics:error:]
  -[AXMEvaluationNode setMinimumConfidence:]


AXShotflowConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *filterThresholds
 @property  NSNumber *networkThreshold
 @property  NSNumber *nmsThreshold
 @property  NSArray *defaultBoxesSidesNormalized
 @property  NSArray *ratios

  // instance methods
  -[AXShotflowConfiguration initWithURL:]
  -[AXShotflowConfiguration nmsThreshold]
  -[AXShotflowConfiguration .cxx_destruct]
  -[AXShotflowConfiguration ratios]
  -[AXShotflowConfiguration networkThreshold]
  -[AXShotflowConfiguration defaultBoxesSidesNormalized]
  -[AXShotflowConfiguration filterThresholds]


AXMAXElementVisionEngine : AXMVisionEngine
 @property  AXMScreenCaptureNode *captureNode
 @property  AXMImageNode *imageNode
 @property  AXMTextDetectorNode *textDetector
 @property  AXMIconClassDetectorNode *iconClassDetector
 @property  AXMAXElementDetectorNode *axElementDetector

  // instance methods
  -[AXMAXElementVisionEngine textDetector]
  -[AXMAXElementVisionEngine imageNode]
  -[AXMAXElementVisionEngine .cxx_destruct]
  -[AXMAXElementVisionEngine initWithIdentifier:]
  -[AXMAXElementVisionEngine setImageNode:]
  -[AXMAXElementVisionEngine setIconClassDetector:]
  -[AXMAXElementVisionEngine iconClassDetector]
  -[AXMAXElementVisionEngine setCaptureNode:]
  -[AXMAXElementVisionEngine setTextDetector:]
  -[AXMAXElementVisionEngine setAxElementDetector:]
  -[AXMAXElementVisionEngine captureNode]
  -[AXMAXElementVisionEngine axElementDetector]


AXMAudioEffect : NSObject /usr/lib/libc++.1.dylib
 @property  AXMAudioDataSource *inputSource

  // instance methods
  -[AXMAudioEffect .cxx_destruct]
  -[AXMAudioEffect inputSource]
  -[AXMAudioEffect setInputSource:]
  -[AXMAudioEffect processSamples:]


IconPictureInput : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  NSString *UIType
 @property  double x
 @property  double y
 @property  double w
 @property  double h
 @property  NSSet *featureNames

  // instance methods
  -[IconPictureInput setW:]
  -[IconPictureInput w]
  -[IconPictureInput x]
  -[IconPictureInput featureNames]
  -[IconPictureInput setY:]
  -[IconPictureInput featureValueForName:]
  -[IconPictureInput .cxx_destruct]
  -[IconPictureInput UIType]
  -[IconPictureInput setX:]
  -[IconPictureInput y]
  -[IconPictureInput setUIType:]
  -[IconPictureInput setH:]
  -[IconPictureInput initWithUIType:x:y:w:h:]
  -[IconPictureInput h]


IconPictureOutput : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  NSString *label
 @property  NSDictionary *labelProbability
 @property  NSSet *featureNames

  // instance methods
  -[IconPictureOutput featureNames]
  -[IconPictureOutput featureValueForName:]
  -[IconPictureOutput .cxx_destruct]
  -[IconPictureOutput label]
  -[IconPictureOutput setLabel:]
  -[IconPictureOutput initWithLabel:labelProbability:]
  -[IconPictureOutput labelProbability]
  -[IconPictureOutput setLabelProbability:]


IconPicture : NSObject /usr/lib/libc++.1.dylib
 @property  MLModel *model

  // class methods
  +[IconPicture loadContentsOfURL:configuration:completionHandler:]

  // instance methods
  -[IconPicture predictionFromFeatures:options:error:]
  -[IconPicture predictionsFromInputs:options:error:]
  -[IconPicture .cxx_destruct]
  -[IconPicture initWithContentsOfURL:error:]
  -[IconPicture predictionFromFeatures:error:]
  -[IconPicture predictionFromUIType:x:y:w:h:error:]
  -[IconPicture initWithMLModel:]
  -[IconPicture initWithContentsOfURL:configuration:error:]
  -[IconPicture model]


AXANFDDetectedObject : AXVNEspressoDetectedObject
 @property  float rotationAngle
 @property  float yawAngle
 @property  int labelKey

  // instance methods
  -[AXANFDDetectedObject rotationAngle]
  -[AXANFDDetectedObject yawAngle]
  -[AXANFDDetectedObject setRotationAngle:]
  -[AXANFDDetectedObject setLabelKey:]
  -[AXANFDDetectedObject initWithObjectType:boundingBox:confidence:rotationAngle:yawAngle:labelKey:]
  -[AXANFDDetectedObject setYawAngle:]
  -[AXANFDDetectedObject labelKey]


AXMVisionFaceNameHelper : NSObject /usr/lib/libc++.1.dylib
 @property  VNPersonsModel *_personsModel
 @property  NSDate *_personsModelFileModifiedDate
 @property  NSMutableDictionary *_personLocalIdentifierToName
 @property  double _lastFileModificationCheckTime

  // instance methods
  -[AXMVisionFaceNameHelper _resetState]
  -[AXMVisionFaceNameHelper .cxx_destruct]
  -[AXMVisionFaceNameHelper prepareForLookup]
  -[AXMVisionFaceNameHelper faceprintRequestRevisionForPersonsModel]
  -[AXMVisionFaceNameHelper nameForFaceObservation:]
  -[AXMVisionFaceNameHelper set_personsModel:]
  -[AXMVisionFaceNameHelper set_personsModelFileModifiedDate:]
  -[AXMVisionFaceNameHelper set_personLocalIdentifierToName:]
  -[AXMVisionFaceNameHelper set_lastFileModificationCheckTime:]
  -[AXMVisionFaceNameHelper _filePathForPersonsModel]
  -[AXMVisionFaceNameHelper _fileModificationDateForPath:]
  -[AXMVisionFaceNameHelper _lastFileModificationCheckTime]
  -[AXMVisionFaceNameHelper _personsModelFileModifiedDate]
  -[AXMVisionFaceNameHelper _personsModel]
  -[AXMVisionFaceNameHelper _shouldReloadPersonsModel]
  -[AXMVisionFaceNameHelper _personLocalIdentifierToName]
  -[AXMVisionFaceNameHelper _checkPhotoLibraryAuthorization]
  -[AXMVisionFaceNameHelper _photoAuthorizationMessage:]
  -[AXMVisionFaceNameHelper _fetchPersonsForLocalIdentifiers:]
  -[AXMVisionFaceNameHelper _isDeviceUnlocked]
  -[AXMVisionFaceNameHelper _loadPersonsModel]


AXMVisionFeatureFaceLandmarks : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  BOOL is3DLandmarks
 @property  NSDictionary *results

  // class methods
  +[AXMVisionFeatureFaceLandmarks supportsSecureCoding]
  +[AXMVisionFeatureFaceLandmarks unitTestingFaceLandmarksIs3D:]

  // instance methods
  -[AXMVisionFeatureFaceLandmarks setResults:]
  -[AXMVisionFeatureFaceLandmarks results]
  -[AXMVisionFeatureFaceLandmarks .cxx_destruct]
  -[AXMVisionFeatureFaceLandmarks encodeWithCoder:]
  -[AXMVisionFeatureFaceLandmarks initWithVisionFaceLandmarks:]
  -[AXMVisionFeatureFaceLandmarks setIs3DLandmarks:]
  -[AXMVisionFeatureFaceLandmarks is3DLandmarks]
  -[AXMVisionFeatureFaceLandmarks pointsArrayForRegion:]
  -[AXMVisionFeatureFaceLandmarks pointValuesForFaceLandmarkType:]
  -[AXMVisionFeatureFaceLandmarks localizedStringForLandmarkType:]
  -[AXMVisionFeatureFaceLandmarks initWithCoder:]


AXMTextDetectionOptions : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  unsigned long recognitionLevel
 @property  double normalizedMinimumTextHeightRatio
 @property  BOOL usesLanguageCorrection
 @property  NSArray *textDetectionLocales
 @property  BOOL correctSpelling

  // class methods
  +[AXMTextDetectionOptions supportsSecureCoding]
  +[AXMTextDetectionOptions defaultOptions]

  // instance methods
  -[AXMTextDetectionOptions .cxx_destruct]
  -[AXMTextDetectionOptions usesLanguageCorrection]
  -[AXMTextDetectionOptions setUsesLanguageCorrection:]
  -[AXMTextDetectionOptions normalizedMinimumTextHeightRatio]
  -[AXMTextDetectionOptions recognitionLevel]
  -[AXMTextDetectionOptions textDetectionLocales]
  -[AXMTextDetectionOptions encodeWithCoder:]
  -[AXMTextDetectionOptions setRecognitionLevel:]
  -[AXMTextDetectionOptions _init]
  -[AXMTextDetectionOptions setNormalizedMinimumTextHeightRatio:]
  -[AXMTextDetectionOptions setCorrectSpelling:]
  -[AXMTextDetectionOptions setTextDetectionLocales:]
  -[AXMTextDetectionOptions correctSpelling]
  -[AXMTextDetectionOptions initWithCoder:]


AXMVisionAnalysisOptions : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long clientID
 @property  BOOL hasDetectionsEnabled
 @property  BOOL detectFaces
 @property  BOOL detectFaceRectangles
 @property  BOOL detectFaceNames
 @property  BOOL detectFaceAttributes
 @property  BOOL detectFaceExpressions
 @property  BOOL detectFaceLandmarks
 @property  BOOL detectFacePose
 @property  BOOL detectScenes
 @property  BOOL detectNSFW
 @property  BOOL detectSignificantEvents
 @property  BOOL detectModelClassifications
 @property  BOOL detectCaptions
 @property  BOOL detectTraits
 @property  BOOL detectRectangles
 @property  BOOL detectHorizon
 @property  BOOL detectProminentObjects
 @property  BOOL detectAesthetics
 @property  BOOL detectIconClass
 @property  BOOL detectAXElements
 @property  NSData *equivalenceToken
 @property  BOOL detectText
 @property  AXMTextDetectionOptions *textDetectionOptions
 @property  BOOL includeImageInResult
 @property  NSArray *ignoredLayerContextIDs
 @property  NSArray *includedLayerContextIDs
 @property  BOOL preserveInputImageSize

  // class methods
  +[AXMVisionAnalysisOptions supportsSecureCoding]
  +[AXMVisionAnalysisOptions defaultOptions]
  +[AXMVisionAnalysisOptions voiceOverOptions]

  // instance methods
  -[AXMVisionAnalysisOptions clientID]
  -[AXMVisionAnalysisOptions setClientID:]
  -[AXMVisionAnalysisOptions .cxx_destruct]
  -[AXMVisionAnalysisOptions detectFaceNames]
  -[AXMVisionAnalysisOptions detectFaceAttributes]
  -[AXMVisionAnalysisOptions detectText]
  -[AXMVisionAnalysisOptions textDetectionOptions]
  -[AXMVisionAnalysisOptions detectScenes]
  -[AXMVisionAnalysisOptions detectNSFW]
  -[AXMVisionAnalysisOptions detectSignificantEvents]
  -[AXMVisionAnalysisOptions detectModelClassifications]
  -[AXMVisionAnalysisOptions detectCaptions]
  -[AXMVisionAnalysisOptions detectFaces]
  -[AXMVisionAnalysisOptions detectTraits]
  -[AXMVisionAnalysisOptions detectHorizon]
  -[AXMVisionAnalysisOptions detectRectangles]
  -[AXMVisionAnalysisOptions detectProminentObjects]
  -[AXMVisionAnalysisOptions detectIconClass]
  -[AXMVisionAnalysisOptions detectAXElements]
  -[AXMVisionAnalysisOptions detectAesthetics]
  -[AXMVisionAnalysisOptions setDetectIconClass:]
  -[AXMVisionAnalysisOptions encodeWithCoder:]
  -[AXMVisionAnalysisOptions detectFaceExpressions]
  -[AXMVisionAnalysisOptions detectFaceLandmarks]
  -[AXMVisionAnalysisOptions detectFacePose]
  -[AXMVisionAnalysisOptions detectFaceRectangles]
  -[AXMVisionAnalysisOptions setDetectText:]
  -[AXMVisionAnalysisOptions setIncludeImageInResult:]
  -[AXMVisionAnalysisOptions setTextDetectionOptions:]
  -[AXMVisionAnalysisOptions setDetectScenes:]
  -[AXMVisionAnalysisOptions setDetectNSFW:]
  -[AXMVisionAnalysisOptions setDetectSignificantEvents:]
  -[AXMVisionAnalysisOptions setDetectModelClassifications:]
  -[AXMVisionAnalysisOptions setDetectCaptions:]
  -[AXMVisionAnalysisOptions setDetectTraits:]
  -[AXMVisionAnalysisOptions equivalenceToken]
  -[AXMVisionAnalysisOptions setDetectFaceRectangles:]
  -[AXMVisionAnalysisOptions setDetectFaceNames:]
  -[AXMVisionAnalysisOptions setDetectFaceAttributes:]
  -[AXMVisionAnalysisOptions setDetectFaceExpressions:]
  -[AXMVisionAnalysisOptions setDetectFaceLandmarks:]
  -[AXMVisionAnalysisOptions setDetectFacePose:]
  -[AXMVisionAnalysisOptions setDetectProminentObjects:]
  -[AXMVisionAnalysisOptions setDetectHorizon:]
  -[AXMVisionAnalysisOptions setDetectRectangles:]
  -[AXMVisionAnalysisOptions setDetectAXElements:]
  -[AXMVisionAnalysisOptions setDetectAesthetics:]
  -[AXMVisionAnalysisOptions setPreserveInputImageSize:]
  -[AXMVisionAnalysisOptions ignoredLayerContextIDs]
  -[AXMVisionAnalysisOptions includedLayerContextIDs]
  -[AXMVisionAnalysisOptions preserveInputImageSize]
  -[AXMVisionAnalysisOptions setIgnoredLayerContextIDs:]
  -[AXMVisionAnalysisOptions setIncludedLayerContextIDs:]
  -[AXMVisionAnalysisOptions hasDetectionsEnabled]
  -[AXMVisionAnalysisOptions disableAllDetectors]
  -[AXMVisionAnalysisOptions setEquivalenceToken:]
  -[AXMVisionAnalysisOptions includeImageInResult]
  -[AXMVisionAnalysisOptions initWithCoder:]


AXMOutputManager : NSObject /usr/lib/libc++.1.dylib <AXMTaskDispatcherDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXMOutputManager disable]
  -[AXMOutputManager playSound:]
  -[AXMOutputManager .cxx_destruct]
  -[AXMOutputManager speak:]
  -[AXMOutputManager dispatcher:handleTask:]
  -[AXMOutputManager dispatchRequest:]
  -[AXMOutputManager interrupt:]
  -[AXMOutputManager initWithComponents:options:]
  -[AXMOutputManager enableWithCompletion:]
  -[AXMOutputManager interruptImmediately]
  -[AXMOutputManager interruptPolitely]
  -[AXMOutputManager playActiveSound:]


_AXMOutputRequestTask : AXMTask
 @property  AXMOutputRequest *request

  // instance methods
  -[_AXMOutputRequestTask setRequest:]
  -[_AXMOutputRequestTask .cxx_destruct]
  -[_AXMOutputRequestTask request]


AXMTone : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long sampleRate
 @property  double frequency
 @property  AXMADSREnvelope *envelope
 @property  unsigned long waveform
 @property  double gain
 @property  double aWeighting

  // instance methods
  -[AXMTone gain]
  -[AXMTone frequency]
  -[AXMTone init]
  -[AXMTone envelope]
  -[AXMTone waveform]
  -[AXMTone .cxx_destruct]
  -[AXMTone _rawValueForTonePhase:]
  -[AXMTone initWithSampleRate:envelope:]
  -[AXMTone renderInBuffer:atFrame:]
  -[AXMTone setSampleRate:]
  -[AXMTone sampleRate]
  -[AXMTone aWeighting]
  -[AXMTone setGain:]
  -[AXMTone setWaveform:]
  -[AXMTone _setFrequency:]


AXMDataRegressionModelLinear : AXMDataRegressionModel
 @property  double rSquared

  // instance methods
  -[AXMDataRegressionModelLinear modelDescription]
  -[AXMDataRegressionModelLinear modelFunction]
  -[AXMDataRegressionModelLinear modelParameterCount]
  -[AXMDataRegressionModelLinear getInitialParams:]
  -[AXMDataRegressionModelLinear partialDerivatives]
  -[AXMDataRegressionModelLinear modelFunctionStringForParameters:significantFigures:]
  -[AXMDataRegressionModelLinear rSquared]
  -[AXMDataRegressionModelLinear fitDataWithModelParams:finalParams:]


AXMSourceNode : AXMVisionEngineNode <NSSecureCoding>
 @property  BOOL shouldProcessRemotely

  // class methods
  +[AXMSourceNode supportsSecureCoding]

  // instance methods
  -[AXMSourceNode .cxx_destruct]
  -[AXMSourceNode resultHandlers]
  -[AXMSourceNode shouldProcessRemotely]
  -[AXMSourceNode addResultHandler:]
  -[AXMSourceNode removeResultHandler:]
  -[AXMSourceNode removeAllResultHandlers]
  -[AXMSourceNode nodeInitialize]
  -[AXMSourceNode setShouldProcessRemotely:]
  -[AXMSourceNode _nodeQueue_addResultHandler:]
  -[AXMSourceNode _nodeQueue_removeResultHandler:]
  -[AXMSourceNode _nodeQueue_removeAllResultHandlers]
  -[AXMSourceNode produceImage:]
  -[AXMSourceNode triggerWithContext:cacheKey:resultHandler:]


SelectedCheckboxFromIcon__generated__Input : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  ^{__CVBuffer=} image
 @property  NSSet *featureNames

  // instance methods
  -[SelectedCheckboxFromIcon__generated__Input initWithImage:]
  -[SelectedCheckboxFromIcon__generated__Input featureNames]
  -[SelectedCheckboxFromIcon__generated__Input featureValueForName:]
  -[SelectedCheckboxFromIcon__generated__Input setImage:]
  -[SelectedCheckboxFromIcon__generated__Input image]


SelectedCheckboxFromIcon__generated__Output : NSObject /usr/lib/libc++.1.dylib <MLFeatureProvider>
 @property  NSDictionary *labelProbability
 @property  NSString *label
 @property  NSSet *featureNames

  // instance methods
  -[SelectedCheckboxFromIcon__generated__Output featureNames]
  -[SelectedCheckboxFromIcon__generated__Output featureValueForName:]
  -[SelectedCheckboxFromIcon__generated__Output .cxx_destruct]
  -[SelectedCheckboxFromIcon__generated__Output label]
  -[SelectedCheckboxFromIcon__generated__Output setLabel:]
  -[SelectedCheckboxFromIcon__generated__Output labelProbability]
  -[SelectedCheckboxFromIcon__generated__Output setLabelProbability:]
  -[SelectedCheckboxFromIcon__generated__Output initWithLabelProbability:label:]


SelectedCheckboxFromIcon__generated__ : NSObject /usr/lib/libc++.1.dylib
 @property  MLModel *model

  // class methods
  +[SelectedCheckboxFromIcon__generated__ urlOfModelInThisBundle]

  // instance methods
  -[SelectedCheckboxFromIcon__generated__ predictionFromFeatures:options:error:]
  -[SelectedCheckboxFromIcon__generated__ init]
  -[SelectedCheckboxFromIcon__generated__ predictionsFromInputs:options:error:]
  -[SelectedCheckboxFromIcon__generated__ .cxx_destruct]
  -[SelectedCheckboxFromIcon__generated__ initWithContentsOfURL:error:]
  -[SelectedCheckboxFromIcon__generated__ predictionFromFeatures:error:]
  -[SelectedCheckboxFromIcon__generated__ initWithContentsOfURL:configuration:error:]
  -[SelectedCheckboxFromIcon__generated__ model]
  -[SelectedCheckboxFromIcon__generated__ predictionFromImage:error:]
  -[SelectedCheckboxFromIcon__generated__ initWithConfiguration:error:]


AXMVisionFeature : NSObject /usr/lib/libc++.1.dylib <AXMJSONSerializable, NSSecureCoding>
 @property  NSObject<NSSecureCoding> *userContext
 @property  NSDictionary *debugRectangles
 @property  NSString *overrideLabel
 @property  unsigned long featureType
 @property  BOOL isBarcode
 @property  BOOL isFace
 @property  BOOL isRealtimeFace
 @property  BOOL isPerson
 @property  BOOL isSceneClassification
 @property  BOOL isObjectClassification
 @property  BOOL isNSFWClassification
 @property  BOOL isSignificantEventClassification
 @property  BOOL isBrightness
 @property  BOOL isBlur
 @property  BOOL isHorizon
 @property  BOOL isColor
 @property  BOOL isMediaLegibility
 @property  BOOL isAssetMetadata
 @property  BOOL isRectangle
 @property  BOOL isModelClassification
 @property  BOOL isCaption
 @property  BOOL isMotion
 @property  BOOL isCameraMetadata
 @property  BOOL isProminentObject
 @property  BOOL isIconClass
 @property  BOOL isImageAesthetics
 @property  BOOL isOCR
 @property  BOOL isTextDocument
 @property  BOOL isTextRegion
 @property  BOOL isTextLine
 @property  BOOL isTextSequence
 @property  BOOL isTextCharacter
 @property  BOOL isTextDiacritic
 @property  NSArray *subfeatures
 @property  double creationDate
 @property  {CGSize=dd} canvasSize
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} frame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} normalizedFrame
 @property  double confidence
 @property  BOOL isLowConfidence
 @property  NSString *value
 @property  BOOL isValueSpeakable
 @property  NSString *classificationLabel
 @property  NSString *classificationLocalizedValue
 @property  long long uiClass
 @property  NSString *caption
 @property  NSString *barcodeType
 @property  long long ocrFeatureType
 @property  AXMVisionFeatureColorInfo *colorInfo
 @property  AXMVisionFeatureAssetMetadata *assetMetadata
 @property  double blur
 @property  double brightness
 @property  AXMVisionFeatureFaceDetectionResult *faceDetectionResult
 @property  unsigned long faceId
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unpaddedDetectedFaceRect
 @property  {CGAffineTransform=dddddd} horizonTransform
 @property  float horizonAngle
 @property  AXMVisionFeatureAestheticsResult *aestheticsResult
 @property  CMDeviceMotion *deviceMotion
 @property  long long deviceOrientation
 @property  long long cameraType
 @property  NSDictionary *featureGates
 @property  BOOL captionMayContainSensitiveContent
 @property  NSDictionary *dictionaryRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXMVisionFeature featureWithVisionRequest:blurValue:canvasSize:]
  +[AXMVisionFeature supportsSecureCoding]
  +[AXMVisionFeature unitTestingFeatureWithType:canvasSize:frame:value:valueIsSpeakable:barcodeType:ocrFeatureType:subFeatures:]
  +[AXMVisionFeature unitTestingFeature]
  +[AXMVisionFeature unitTestingFaceFeatureWithSize:faceFrame:]
  +[AXMVisionFeature unitTestingFeatureWithType:canvasSize:frame:value:barcodeType:ocrFeatureType:subFeatures:]
  +[AXMVisionFeature unitTestingTeatureWithType:axElementRect:confidence:uiClass:label:canvasSize:]
  +[AXMVisionFeature unitTestingFaceFeature]
  +[AXMVisionFeature unitTestingProminentObjectFeature]
  +[AXMVisionFeature unitTestingHorizonFeature]
  +[AXMVisionFeature nsfwClassificationWithCategory:confidence:canvasSize:]
  +[AXMVisionFeature nameForUIClass:]
  +[AXMVisionFeature featureWithVisionRequest:axElementRect:confidence:uiClass:label:canvasSize:]
  +[AXMVisionFeature textSequence:canvasSize:]
  +[AXMVisionFeature textLineWithText:boundingBox:sequences:canvasSize:]
  +[AXMVisionFeature textRegionWithText:isSpeakable:boundingBox:lines:canvasSize:]
  +[AXMVisionFeature featureWithDeviceMotion:orientation:]
  +[AXMVisionFeature featureWithVisionRequest:rectangleResult:canvasSize:]
  +[AXMVisionFeature textDocumentWithText:isSpeakable:boundingBox:regions:canvasSize:]
  +[AXMVisionFeature featureWithCameraType:]
  +[AXMVisionFeature prominentObjectWithBoundingBox:canvasSize:confidence:]
  +[AXMVisionFeature featureWithFaceDetectionResult:canvasSize:]
  +[AXMVisionFeature featureWithImageAestheticsObservation:]
  +[AXMVisionFeature featureWithIconClass:confidence:]
  +[AXMVisionFeature featureWithVisionRequest:modelClassificationResult:modelIdentifier:canvasSize:]
  +[AXMVisionFeature featureWithAssetMetadata:]
  +[AXMVisionFeature nameForFeatureType:]
  +[AXMVisionFeature _aspectFaceRectFromSquareFaceRect:sizeInPixels:]
  +[AXMVisionFeature locationForNormalizedFrame:previousLocation:usingThirds:]
  +[AXMVisionFeature _append:toList:]
  +[AXMVisionFeature nameForLocation:]
  +[AXMVisionFeature featureWithMediaLegibility:]
  +[AXMVisionFeature featureWithVisionRequest:horizonResult:canvasSize:]
  +[AXMVisionFeature featureWithMetadata:interfaceOrientation:isMirrored:canvasSize:]
  +[AXMVisionFeature personWithBoundingBox:confidence:canvasSize:]
  +[AXMVisionFeature featureWithVisionRequest:brightnessValue:canvasSize:]
  +[AXMVisionFeature objectClassificationWithLabel:localizedValue:boundingBox:confidence:canvasSize:]
  +[AXMVisionFeature featureWithTaxonomyNode:canvasSize:]
  +[AXMVisionFeature uiClassForName:]
  +[AXMVisionFeature sceneClassificationWithLabel:localizedValue:confidence:canvasSize:]
  +[AXMVisionFeature significantEventClassificationWithCategory:confidence:canvasSize:]
  +[AXMVisionFeature featureWithCaptionResult:confidence:modelIdentifier:canvasSize:isLowConfidence:]
  +[AXMVisionFeature groupedFeatureWithElementRect:uiClass:confidence:label:canvasSize:subElements:]
  +[AXMVisionFeature featureWithColorInfo:canvasSize:]
  +[AXMVisionFeature localizedStringForLocation:isSubjectImplicit:]
  +[AXMVisionFeature nameForOCRType:]
  +[AXMVisionFeature flattenedFeatureList:]

  // instance methods
  -[AXMVisionFeature deviceOrientation]
  -[AXMVisionFeature setUserContext:]
  -[AXMVisionFeature blur]
  -[AXMVisionFeature userContext]
  -[AXMVisionFeature cameraType]
  -[AXMVisionFeature brightness]
  -[AXMVisionFeature isCaption]
  -[AXMVisionFeature isOCR]
  -[AXMVisionFeature classificationLocalizedValue]
  -[AXMVisionFeature classificationLabel]
  -[AXMVisionFeature frame]
  -[AXMVisionFeature creationDate]
  -[AXMVisionFeature faceId]
  -[AXMVisionFeature isFace]
  -[AXMVisionFeature .cxx_destruct]
  -[AXMVisionFeature isBlur]
  -[AXMVisionFeature faceDetectionResult]
  -[AXMVisionFeature setCaptionMayContainSensitiveContent:]
  -[AXMVisionFeature confidence]
  -[AXMVisionFeature canvasSize]
  -[AXMVisionFeature featureType]
  -[AXMVisionFeature isLowConfidence]
  -[AXMVisionFeature encodeWithCoder:]
  -[AXMVisionFeature _init]
  -[AXMVisionFeature uiClass]
  -[AXMVisionFeature isColor]
  -[AXMVisionFeature isPerson]
  -[AXMVisionFeature subfeatures]
  -[AXMVisionFeature isEqual:]
  -[AXMVisionFeature assetMetadata]
  -[AXMVisionFeature value]
  -[AXMVisionFeature facePose]
  -[AXMVisionFeature isMotion]
  -[AXMVisionFeature normalizedFrame]
  -[AXMVisionFeature isTextDocument]
  -[AXMVisionFeature isValueSpeakable]
  -[AXMVisionFeature dictionaryRepresentation]
  -[AXMVisionFeature featureGates]
  -[AXMVisionFeature isBrightness]
  -[AXMVisionFeature isSceneClassification]
  -[AXMVisionFeature isObjectClassification]
  -[AXMVisionFeature isNSFWClassification]
  -[AXMVisionFeature isModelClassification]
  -[AXMVisionFeature isIconClass]
  -[AXMVisionFeature captionMayContainSensitiveContent]
  -[AXMVisionFeature deviceMotion]
  -[AXMVisionFeature isBarcode]
  -[AXMVisionFeature _serializeWithCoder:orDictionary:]
  -[AXMVisionFeature _nameForOCRFeatureType:]
  -[AXMVisionFeature locationUsingThirds:]
  -[AXMVisionFeature barcodeType]
  -[AXMVisionFeature ocrFeatureType]
  -[AXMVisionFeature horizonAngle]
  -[AXMVisionFeature isEqualToAXMVisionFeature:]
  -[AXMVisionFeature isHorizon]
  -[AXMVisionFeature effectiveTextDetectionLocales]
  -[AXMVisionFeature addFeatureGate:userInfo:]
  -[AXMVisionFeature initWithCoder:]
  -[AXMVisionFeature colorInfo]
  -[AXMVisionFeature caption]
  -[AXMVisionFeature horizonTransform]
  -[AXMVisionFeature isRealtimeFace]
  -[AXMVisionFeature isSignificantEventClassification]
  -[AXMVisionFeature isMediaLegibility]
  -[AXMVisionFeature isAssetMetadata]
  -[AXMVisionFeature isRectangle]
  -[AXMVisionFeature isTextRegion]
  -[AXMVisionFeature isTextLine]
  -[AXMVisionFeature isTextSequence]
  -[AXMVisionFeature isTextCharacter]
  -[AXMVisionFeature overrideLabel]
  -[AXMVisionFeature isTextDiacritic]
  -[AXMVisionFeature isCameraMetadata]
  -[AXMVisionFeature isProminentObject]
  -[AXMVisionFeature isImageAesthetics]
  -[AXMVisionFeature unpaddedDetectedFaceRect]
  -[AXMVisionFeature aestheticsResult]
  -[AXMVisionFeature debugRectangles]
  -[AXMVisionFeature setDebugRectangles:]
  -[AXMVisionFeature setOverrideLabel:]


AXMDataPoint : NSObject /usr/lib/libc++.1.dylib
 @property  double x
 @property  double y

  // instance methods
  -[AXMDataPoint x]
  -[AXMDataPoint setY:]
  -[AXMDataPoint setX:]
  -[AXMDataPoint y]


AXMDataRegressionModel : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL dataSatisfiesInitialConditions
 @property  NSString *modelDescription
 @property  double error
 @property  double score
 @property  BOOL isDisqualified
 @property  double confidence
 @property  ^d bestFitParameters
 @property  int modelParameterCount
 @property  @? modelFunction
 @property  NSArray *partialDerivatives
 @property  int iterations
 @property  ^d x
 @property  ^d y
 @property  int n

  // class methods
  +[AXMDataRegressionModel getModelForX:y:n:]

  // instance methods
  -[AXMDataRegressionModel n]
  -[AXMDataRegressionModel iterations]
  -[AXMDataRegressionModel x]
  -[AXMDataRegressionModel initWithXValues:yValues:count:]
  -[AXMDataRegressionModel isDisqualified]
  -[AXMDataRegressionModel getJacobianForParameters:gradient:result:]
  -[AXMDataRegressionModel getDiagonal:size:result:]
  -[AXMDataRegressionModel getMatrixInverse:size:pivot:tmp:result:]
  -[AXMDataRegressionModel magnitude:size:]
  -[AXMDataRegressionModel getGradientForX:parameterValues:result:]
  -[AXMDataRegressionModel printMatrix:rows:cols:]
  -[AXMDataRegressionModel getIdentityMatrixWithSize:scalar:result:]
  -[AXMDataRegressionModel dealloc]
  -[AXMDataRegressionModel roundNumber:withSignificantFigures:]
  -[AXMDataRegressionModel confidence]
  -[AXMDataRegressionModel y]
  -[AXMDataRegressionModel bestFitParameters]
  -[AXMDataRegressionModel score]
  -[AXMDataRegressionModel error]
  -[AXMDataRegressionModel sortDataPoints]
  -[AXMDataRegressionModel setIsDisqualified:]
  -[AXMDataRegressionModel getSMA:lookback:]
  -[AXMDataRegressionModel disqualifyModelIfNecessary]
  -[AXMDataRegressionModel modelDescription]
  -[AXMDataRegressionModel modelFunction]
  -[AXMDataRegressionModel modelParameterCount]
  -[AXMDataRegressionModel getInitialParams:]
  -[AXMDataRegressionModel partialDerivatives]
  -[AXMDataRegressionModel modelFunctionStringForParameters:significantFigures:]
  -[AXMDataRegressionModel dataSatisfiesInitialConditions]
  -[AXMDataRegressionModel getResidualsVector:result:]
  -[AXMDataRegressionModel computeScore]
  -[AXMDataRegressionModel fitDataWithModelParams:finalParams:]


AXMCaptionDetectorNode : AXMEvaluationNode
 @property  AXMSceneDetectorNode *sceneDetector
 @property  NSURL *overrideModelURL
 @property  unsigned long overrideScaleMethod
 @property  unsigned long genderStrategy
 @property  NSURL *effectiveModelURL
 @property  AXImageCaptionModel *effectiveCaptionModelInfo

  // class methods
  +[AXMCaptionDetectorNode isSupported]
  +[AXMCaptionDetectorNode supportsSecureCoding]
  +[AXMCaptionDetectorNode title]
  +[AXMCaptionDetectorNode preferredModelInputSize]

  // instance methods
  -[AXMCaptionDetectorNode dealloc]
  -[AXMCaptionDetectorNode .cxx_destruct]
  -[AXMCaptionDetectorNode setOverrideModelURL:]
  -[AXMCaptionDetectorNode setOverrideScaleMethod:]
  -[AXMCaptionDetectorNode setGenderStrategy:]
  -[AXMCaptionDetectorNode setSceneDetector:]
  -[AXMCaptionDetectorNode overrideModelURL]
  -[AXMCaptionDetectorNode overrideScaleMethod]
  -[AXMCaptionDetectorNode genderStrategy]
  -[AXMCaptionDetectorNode sceneDetector]
  -[AXMCaptionDetectorNode _withLock_captionHandlerCreateIfNeeded:]
  -[AXMCaptionDetectorNode _withLock_cloneCaptionModelIfNeeded:]
  -[AXMCaptionDetectorNode effectiveModelURL]
  -[AXMCaptionDetectorNode _computeCaptionForPixelBuffer:orImage:captionHandler:metrics:]
  -[AXMCaptionDetectorNode _captionModelCloningIsNeeded]
  -[AXMCaptionDetectorNode _withLock_captionModelURLCloningAssetIfNeeded]
  -[AXMCaptionDetectorNode _withLock_valueForOverrideScaleMethod]
  -[AXMCaptionDetectorNode effectiveCaptionModelInfo]
  -[AXMCaptionDetectorNode encodeWithCoder:]
  -[AXMCaptionDetectorNode nodeInitialize]
  -[AXMCaptionDetectorNode evaluate:metrics:]
  -[AXMCaptionDetectorNode _performWithLock:]
  -[AXMCaptionDetectorNode initWithCoder:]
  -[AXMCaptionDetectorNode requiresVisionFramework]


AXMSceneDetectorNode : AXMEvaluationNode
 @property  VNSceneClassificationRequest *_sceneClassificationRequest
 @property  unsigned int taxonomyOptions

  // class methods
  +[AXMSceneDetectorNode isSupported]
  +[AXMSceneDetectorNode supportsSecureCoding]
  +[AXMSceneDetectorNode possibleSceneClassifications]
  +[AXMSceneDetectorNode title]

  // instance methods
  -[AXMSceneDetectorNode .cxx_destruct]
  -[AXMSceneDetectorNode _sceneClassificationRequest]
  -[AXMSceneDetectorNode _setSceneClassificationRequest:]
  -[AXMSceneDetectorNode taxonomyOptions]
  -[AXMSceneDetectorNode setTaxonomyOptions:]
  -[AXMSceneDetectorNode encodeWithCoder:]
  -[AXMSceneDetectorNode evaluate:metrics:]
  -[AXMSceneDetectorNode validateVisionKitSoftLinkSymbols]
  -[AXMSceneDetectorNode initWithCoder:]


AXMActiveSound : NSObject /usr/lib/libc++.1.dylib
 @property  AVAudioPlayerNode *player
 @property  AVAudioUnitTimePitch *timePitch

  // instance methods
  -[AXMActiveSound init]
  -[AXMActiveSound setPlayer:]
  -[AXMActiveSound .cxx_destruct]
  -[AXMActiveSound player]
  -[AXMActiveSound setTimePitch:]
  -[AXMActiveSound timePitch]
  -[AXMActiveSound connectToEngine:]
  -[AXMActiveSound disconnectFromEngine:]
  -[AXMActiveSound beginPlayback:withError:]


AXMSoundComponent : AXMOutputComponent
 @property  id configChangedObserverToken

  // class methods
  +[AXMSoundComponent isSupported]

  // instance methods
  -[AXMSoundComponent init]
  -[AXMSoundComponent dealloc]
  -[AXMSoundComponent .cxx_destruct]
  -[AXMSoundComponent _startEngineIfNeeded:]
  -[AXMSoundComponent _scheduleOneShotSound:completion:]
  -[AXMSoundComponent _scheduleActiveSound:]
  -[AXMSoundComponent _stopActiveSound:]
  -[AXMSoundComponent _logAudioFileInfo:]
  -[AXMSoundComponent configChangedObserverToken]
  -[AXMSoundComponent setConfigChangedObserverToken:]
  -[AXMSoundComponent canHandleRequest:]
  -[AXMSoundComponent transitionToState:completion:]
  -[AXMSoundComponent handleRequest:completion:]


AXMActiveSoundOutputActionHandleImpl : NSObject /usr/lib/libc++.1.dylib <AXMActiveSoundOutputActionHandleProvider>
 @property  AXMActiveSound *activeSound
 @property  AXMSoundComponent *soundComponent
 @property  float rate
 @property  float pitch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AXMActiveSoundOutputActionHandleImpl pitch]
  -[AXMActiveSoundOutputActionHandleImpl rate]
  -[AXMActiveSoundOutputActionHandleImpl init]
  -[AXMActiveSoundOutputActionHandleImpl .cxx_destruct]
  -[AXMActiveSoundOutputActionHandleImpl setRate:]
  -[AXMActiveSoundOutputActionHandleImpl setActiveSound:]
  -[AXMActiveSoundOutputActionHandleImpl setSoundComponent:]
  -[AXMActiveSoundOutputActionHandleImpl activeSound]
  -[AXMActiveSoundOutputActionHandleImpl soundComponent]
  -[AXMActiveSoundOutputActionHandleImpl stop]
  -[AXMActiveSoundOutputActionHandleImpl setQuantizedRate:]
  -[AXMActiveSoundOutputActionHandleImpl setPitch:]


AXMHapticComponent : AXMOutputComponent
 @property  <CHHapticPatternPlayer> *_levelPlayer
 @property  BOOL autoShutdownEnabled

  // class methods
  +[AXMHapticComponent isSupported]

  // instance methods
  -[AXMHapticComponent init]
  -[AXMHapticComponent .cxx_destruct]
  -[AXMHapticComponent _levelPlayer]
  -[AXMHapticComponent set_levelPlayer:]
  -[AXMHapticComponent isAutoShutdownEnabled]
  -[AXMHapticComponent canHandleRequest:]
  -[AXMHapticComponent setAutoShutdownEnabled:]
  -[AXMHapticComponent transitionToState:completion:]
  -[AXMHapticComponent stopCurrentHaptics]
  -[AXMHapticComponent handleRequest:completion:]


AXMDataRegressionModelLogarithmic : AXMDataRegressionModel
  // instance methods
  -[AXMDataRegressionModelLogarithmic modelDescription]
  -[AXMDataRegressionModelLogarithmic modelFunction]
  -[AXMDataRegressionModelLogarithmic modelParameterCount]
  -[AXMDataRegressionModelLogarithmic getInitialParams:]
  -[AXMDataRegressionModelLogarithmic partialDerivatives]
  -[AXMDataRegressionModelLogarithmic modelFunctionStringForParameters:significantFigures:]


AXMVisionEngineNode : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, AXMDescribing>
 @property  BOOL connected
 @property  <AXMVisionEngineNodeConnectionDelegate> *delegate
 @property  NSString *identifier
 @property  NSObject<OS_dispatch_queue> *nodeQueue
 @property  BOOL areDiagnosticsEnabled
 @property  BOOL requiresVisionFramework
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[AXMVisionEngineNode isSupported]
  +[AXMVisionEngineNode supportsSecureCoding]
  +[AXMVisionEngineNode title]

  // instance methods
  -[AXMVisionEngineNode disconnect]
  -[AXMVisionEngineNode isConnected]
  -[AXMVisionEngineNode setConnected:]
  -[AXMVisionEngineNode .cxx_destruct]
  -[AXMVisionEngineNode initWithIdentifier:]
  -[AXMVisionEngineNode freeResources]
  -[AXMVisionEngineNode setNodeQueue:]
  -[AXMVisionEngineNode setIdentifier:]
  -[AXMVisionEngineNode encodeWithCoder:]
  -[AXMVisionEngineNode identifier]
  -[AXMVisionEngineNode isEnabled]
  -[AXMVisionEngineNode axmDescription]
  -[AXMVisionEngineNode axmAppendRecursiveDescription:withIndentation:]
  -[AXMVisionEngineNode setEnabled:]
  -[AXMVisionEngineNode connect:]
  -[AXMVisionEngineNode setDelegate:]
  -[AXMVisionEngineNode nodeInitialize]
  -[AXMVisionEngineNode validateVisionKitSoftLinkSymbols]
  -[AXMVisionEngineNode nodeQueue]
  -[AXMVisionEngineNode delegate]
  -[AXMVisionEngineNode areDiagnosticsEnabled]
  -[AXMVisionEngineNode initWithCoder:]
  -[AXMVisionEngineNode requiresVisionFramework]


AXMAudioDataSource : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *name
 @property  double sampleRate
 @property  ^{vector<int sampleBuffer
 @property  unsigned long length
 @property  unsigned long currentSampleIndex
 @property  BOOL circular
 @property  double level
 @property  NSArray *effectsChain

  // instance methods
  -[AXMAudioDataSource setLength:]
  -[AXMAudioDataSource length]
  -[AXMAudioDataSource level]
  -[AXMAudioDataSource init]
  -[AXMAudioDataSource normalizeAudio]
  -[AXMAudioDataSource setLevel:]
  -[AXMAudioDataSource dealloc]
  -[AXMAudioDataSource sampleBuffer]
  -[AXMAudioDataSource .cxx_destruct]
  -[AXMAudioDataSource name]
  -[AXMAudioDataSource setCircular:]
  -[AXMAudioDataSource effectsChain]
  -[AXMAudioDataSource addEffectToChain:]
  -[AXMAudioDataSource removeEffectFromChain:]
  -[AXMAudioDataSource initWithName:sampleRate:circular:]
  -[AXMAudioDataSource currentSampleIndex]
  -[AXMAudioDataSource setCurrentSampleIndex:]
  -[AXMAudioDataSource processEffects:]
  -[AXMAudioDataSource isCircular]
  -[AXMAudioDataSource sampleRate]
  -[AXMAudioDataSource setName:]


AXMSignificantEventDetectorNode : AXMEvaluationNode
  // class methods
  +[AXMSignificantEventDetectorNode isSupported]
  +[AXMSignificantEventDetectorNode supportsSecureCoding]
  +[AXMSignificantEventDetectorNode addSignificantEventResultToContext:forIdentifier:confidence:markAsSensitiveCaptionContent:]
  +[AXMSignificantEventDetectorNode title]

  // instance methods
  -[AXMSignificantEventDetectorNode .cxx_destruct]
  -[AXMSignificantEventDetectorNode evaluate:metrics:]
  -[AXMSignificantEventDetectorNode validateVisionKitSoftLinkSymbols]


AXMDeviceInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *supportsARM64
 @property  NSNumber *supportsARMv6
 @property  NSNumber *supportsARMv7
 @property  NSNumber *supportsARMv7s
 @property  NSNumber *supports720pPlayback
 @property  NSNumber *supports1080pPlayback
 @property  NSString *cpuArchitecture
 @property  NSNumber *processorCount
 @property  NSNumber *physicalMemory
 @property  NSNumber *hasAmbientLightSensor
 @property  NSNumber *hasDualLensCamera
 @property  NSDictionary *displayZoomSizes
 @property  NSString *buildVersion
 @property  NSString *computerName
 @property  NSString *deviceName
 @property  NSString *deviceNameClassic
 @property  NSString *deviceNameGS
 @property  NSString *deviceNameLocalized
 @property  NSString *deviceClass
 @property  NSString *deviceVariant
 @property  NSString *hardwareModel
 @property  NSString *deviceModelNumber
 @property  NSString *marketingName
 @property  NSString *marketingProductName
 @property  NSString *marketingVersion
 @property  NSString *productName
 @property  NSString *productType
 @property  NSString *productVersion
 @property  NSValue *mainScreenSizeWidth
 @property  NSValue *mainScreenSizeHeight
 @property  NSNumber *mainScreenOrientation
 @property  NSNumber *mainScreenScale

  // class methods
  +[AXMDeviceInfo sharedInstance]

  // instance methods
  -[AXMDeviceInfo setProductName:]
  -[AXMDeviceInfo productVersion]
  -[AXMDeviceInfo hardwareModel]
  -[AXMDeviceInfo productName]
  -[AXMDeviceInfo productType]
  -[AXMDeviceInfo setBuildVersion:]
  -[AXMDeviceInfo deviceName]
  -[AXMDeviceInfo deviceClass]
  -[AXMDeviceInfo setMarketingName:]
  -[AXMDeviceInfo setDeviceClass:]
  -[AXMDeviceInfo buildVersion]
  -[AXMDeviceInfo .cxx_destruct]
  -[AXMDeviceInfo setProductVersion:]
  -[AXMDeviceInfo mainScreenScale]
  -[AXMDeviceInfo deviceNameClassic]
  -[AXMDeviceInfo deviceNameGS]
  -[AXMDeviceInfo deviceNameLocalized]
  -[AXMDeviceInfo computerName]
  -[AXMDeviceInfo deviceVariant]
  -[AXMDeviceInfo cpuArchitecture]
  -[AXMDeviceInfo mainScreenSizeWidth]
  -[AXMDeviceInfo mainScreenSizeHeight]
  -[AXMDeviceInfo mainScreenOrientation]
  -[AXMDeviceInfo hasAmbientLightSensor]
  -[AXMDeviceInfo hasDualLensCamera]
  -[AXMDeviceInfo marketingProductName]
  -[AXMDeviceInfo marketingVersion]
  -[AXMDeviceInfo systemReport]
  -[AXMDeviceInfo _jetsamInfo]
  -[AXMDeviceInfo supportsARM64]
  -[AXMDeviceInfo supportsARMv6]
  -[AXMDeviceInfo supportsARMv7]
  -[AXMDeviceInfo supportsARMv7s]
  -[AXMDeviceInfo supports720pPlayback]
  -[AXMDeviceInfo supports1080pPlayback]
  -[AXMDeviceInfo displayZoomSizes]
  -[AXMDeviceInfo privilegedSystemReport]
  -[AXMDeviceInfo setSupportsARM64:]
  -[AXMDeviceInfo setSupportsARMv6:]
  -[AXMDeviceInfo setSupportsARMv7:]
  -[AXMDeviceInfo setSupportsARMv7s:]
  -[AXMDeviceInfo setSupports720pPlayback:]
  -[AXMDeviceInfo setProcessorCount:]
  -[AXMDeviceInfo _init]
  -[AXMDeviceInfo setSupports1080pPlayback:]
  -[AXMDeviceInfo setCpuArchitecture:]
  -[AXMDeviceInfo setPhysicalMemory:]
  -[AXMDeviceInfo setHasAmbientLightSensor:]
  -[AXMDeviceInfo setHasDualLensCamera:]
  -[AXMDeviceInfo setDisplayZoomSizes:]
  -[AXMDeviceInfo setComputerName:]
  -[AXMDeviceInfo setDeviceNameClassic:]
  -[AXMDeviceInfo setDeviceNameGS:]
  -[AXMDeviceInfo setDeviceNameLocalized:]
  -[AXMDeviceInfo setDeviceVariant:]
  -[AXMDeviceInfo setMarketingProductName:]
  -[AXMDeviceInfo setMarketingVersion:]
  -[AXMDeviceInfo setMainScreenScale:]
  -[AXMDeviceInfo deviceModelNumber]
  -[AXMDeviceInfo marketingName]
  -[AXMDeviceInfo processorCount]
  -[AXMDeviceInfo setMainScreenSizeWidth:]
  -[AXMDeviceInfo setMainScreenSizeHeight:]
  -[AXMDeviceInfo setMainScreenOrientation:]
  -[AXMDeviceInfo physicalMemory]
  -[AXMDeviceInfo setDeviceName:]
  -[AXMDeviceInfo setDeviceModelNumber:]
  -[AXMDeviceInfo setProductType:]
  -[AXMDeviceInfo setHardwareModel:]


AXMImageNode : AXMSourceNode
  // class methods
  +[AXMImageNode isSupported]
  +[AXMImageNode supportsSecureCoding]
  +[AXMImageNode title]

  // instance methods
  -[AXMImageNode triggerWithPixelBuffer:exifOrientation:options:cacheKey:resultHandler:]
  -[AXMImageNode triggerWithImage:options:cacheKey:resultHandler:]
  -[AXMImageNode triggerWithImageURL:options:cacheKey:resultHandler:]
  -[AXMImageNode produceImage:]


AXMVoiceOverVisionEngine : AXMAXElementVisionEngine
 @property  AXMSceneDetectorNode *sceneDetector
 @property  AXMFaceDetectorNode *faceDetector
 @property  AXMTraitDetectorNode *traitDetector
 @property  AXMProminentObjectsDetectorNode *prominentObjectsDetector
 @property  AXMCaptionDetectorNode *captionDetector
 @property  AXMNSFWDetectorNode *nsfwDetector
 @property  AXMSignificantEventDetectorNode *significantEventDetector
 @property  unsigned long genderStrategy

  // instance methods
  -[AXMVoiceOverVisionEngine init]
  -[AXMVoiceOverVisionEngine .cxx_destruct]
  -[AXMVoiceOverVisionEngine setGenderStrategy:]
  -[AXMVoiceOverVisionEngine setSceneDetector:]
  -[AXMVoiceOverVisionEngine genderStrategy]
  -[AXMVoiceOverVisionEngine sceneDetector]
  -[AXMVoiceOverVisionEngine initWithIdentifier:]
  -[AXMVoiceOverVisionEngine setTraitDetector:]
  -[AXMVoiceOverVisionEngine setNsfwDetector:]
  -[AXMVoiceOverVisionEngine setProminentObjectsDetector:]
  -[AXMVoiceOverVisionEngine setSignificantEventDetector:]
  -[AXMVoiceOverVisionEngine setCaptionDetector:]
  -[AXMVoiceOverVisionEngine captionDetector]
  -[AXMVoiceOverVisionEngine configuredOptionsDisableAllDetectors:elementOptions:textRecognitionLevel:textDetectionLocales:preferringFullCaptions:]
  -[AXMVoiceOverVisionEngine traitDetector]
  -[AXMVoiceOverVisionEngine prominentObjectsDetector]
  -[AXMVoiceOverVisionEngine nsfwDetector]
  -[AXMVoiceOverVisionEngine significantEventDetector]
  -[AXMVoiceOverVisionEngine setFaceDetector:]
  -[AXMVoiceOverVisionEngine faceDetector]


AXShotflowNetwork : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long preferredSmallSide
 @property  float threshold
 @property  int version

  // class methods
  +[AXShotflowNetwork cpuNetworkWithModelPath:configuration:version:]
  +[AXShotflowNetwork gpuNetworkWithModelPath:configuration:preferredMetalDeviceID:version:]

  // instance methods
  -[AXShotflowNetwork threshold]
  -[AXShotflowNetwork .cxx_construct]
  -[AXShotflowNetwork dealloc]
  -[AXShotflowNetwork processCIImage:]
  -[AXShotflowNetwork .cxx_destruct]
  -[AXShotflowNetwork setVersion:]
  -[AXShotflowNetwork initWithModelPath:espressoEngineID:espressoDeviceID:configuration:version:]
  -[AXShotflowNetwork runNetwork:inputIsBGR:]
  -[AXShotflowNetwork processVImage:inputIsBGR:]
  -[AXShotflowNetwork resizeAndProcessVImage:inputIsBGR:]
  -[AXShotflowNetwork preferredSmallSide]
  -[AXShotflowNetwork setThreshold:]
  -[AXShotflowNetwork version]
  -[AXShotflowNetwork setInputShape:height:]


AXMText : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *text
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} boundingBox
 @property  double confidence

  // instance methods
  -[AXMText text]
  -[AXMText setConfidence:]
  -[AXMText .cxx_destruct]
  -[AXMText confidence]
  -[AXMText setBoundingBox:]
  -[AXMText boundingBox]
  -[AXMText setText:]


KeyPitch : NSObject /usr/lib/libc++.1.dylib
 @property  double frequency
 @property  double timeOffsetMS

  // instance methods
  -[KeyPitch frequency]
  -[KeyPitch setFrequency:]
  -[KeyPitch timeOffsetMS]
  -[KeyPitch initWithFrequency:timeOffset:]
  -[KeyPitch setTimeOffsetMS:]


AXMVariablePitchTone : AXMTone
  // instance methods
  -[AXMVariablePitchTone initWithKeyPitches:sampleRate:envelope:]
  -[AXMVariablePitchTone .cxx_destruct]
  -[AXMVariablePitchTone initWithSampleRate:envelope:]
  -[AXMVariablePitchTone renderInBuffer:atFrame:]
  -[AXMVariablePitchTone _bufferFrameForKeyPitch:]


(AXMVisionEngineLookupConvenience)
	// instance methods
	-[(AXMVisionEngineLookupConvenience) axm_featureWithHighestConfidence]
	-[(AXMVisionEngineLookupConvenience) axm_featuresSortedByConfidence]

AVCaptureDeviceFormat(AXMExtras)
	// instance methods
	-[AVCaptureDeviceFormat(AXMExtras) axm_totalResolutionPixels]

NSCoder(AXMExtras)
	// instance methods
	-[NSCoder(AXMExtras) axmEncodeRect:forKey:]
	-[NSCoder(AXMExtras) axmDecodeRectForKey:]
	-[NSCoder(AXMExtras) axmDecodePointForKey:]
	-[NSCoder(AXMExtras) axmEncodePoint:forKey:]
	-[NSCoder(AXMExtras) axmEncodeSize:forKey:]
	-[NSCoder(AXMExtras) axmDecodeSizeForKey:]

NSKeyedUnarchiver(AXMExtras)
	// class methods
	+[NSKeyedUnarchiver(AXMExtras) axmSecurelyUnarchiveData:withExpectedClass:otherAllowedClasses:error:]

CIImage(AXMExtras)
	// instance methods
	-[CIImage(AXMExtras) _imageOrientationForInterfaceOrientation:displayOrientation:]
	-[CIImage(AXMExtras) _imageOrientationForInterfaceOrientation:isMirrored:]
	-[CIImage(AXMExtras) saveToURL:withOrientation:metrics:]
	-[CIImage(AXMExtras) rotatedImageWithInterfaceOrientation:isMirrored:appliedImageOrientation:]
	-[CIImage(AXMExtras) writeImageInAllOrientationsToDirectoryAtURL:metrics:]
	-[CIImage(AXMExtras) rotatedImageWithInterfaceOrientation:displayOrientation:appliedImageOrientation:]

NSMutableString(AXMExtras)
	// class methods
	+[NSMutableString(AXMExtras) axmIndentationString:]

	// instance methods
	-[NSMutableString(AXMExtras) axmAppendIndentation:]

(AXMGeomerty)
	// class methods
	+[(AXMGeomerty) axmValueWithCGAffineTransform:]
	+[(AXMGeomerty) axmValueWithCGVector:]
	+[(AXMGeomerty) axmValueWithCGSize:]
	+[(AXMGeomerty) axmValueWithCGPoint:]
	+[(AXMGeomerty) axmValueWithCGRect:]

	// instance methods
	-[(AXMGeomerty) AXMPointValue]
	-[(AXMGeomerty) AXMVectorValue]
	-[(AXMGeomerty) AXMSizeValue]
	-[(AXMGeomerty) AXMAffineTransformValue]
	-[(AXMGeomerty) AXMRectValue]

01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetExportSession 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioEngine 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioFile 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioFormat 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioPCMBuffer 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioPlayerNode 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioUnitTimePitch 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceDiscoverySession 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceFormat 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoDataOutput 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataFaceObject 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataHumanBodyObject 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataMachineReadableCodeObject 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMetadataItem 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItemLegibleOutput 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVSpeechSynthesizer 
01 00 1900 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVSpeechUtterance 
01 00 0500 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXAsset 
01 00 0500 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXAssetController 
01 00 1600 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXBlockMetric 
01 00 1600 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXBookendMetric 
01 00 0500 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXImageCaptionModel 
01 00 0500 /System/Library/PrivateFrameworks/AXAssetLoader.framework/AXAssetLoader: AXImageCaptionModelAssetPolicy 
01 00 1600 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXMetric 
01 00 1600 /System/Library/PrivateFrameworks/AXCoreUtilities.framework/AXCoreUtilities: AXMetricSession 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplay 
01 00 0f00 /System/Library/Frameworks/CoreHaptics.framework/CoreHaptics: CHHapticDynamicParameter 
01 00 0f00 /System/Library/Frameworks/CoreHaptics.framework/CoreHaptics: CHHapticEngine 
01 00 0f00 /System/Library/Frameworks/CoreHaptics.framework/CoreHaptics: CHHapticPattern 
01 00 1a00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIColor 
01 00 1a00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIContext 
01 00 1a00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIFilter 
01 00 1a00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIImage 
01 00 1a00 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIVector 
01 00 0900 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMAttitude 
01 00 0900 /System/Library/Frameworks/CoreMotion.framework/CoreMotion: CMDeviceMotion 
01 00 0800 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayMonitor 
01 00 1300 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 1300 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 1500 /System/Library/Frameworks/CoreML.framework/CoreML: MLArrayBatchProvider 
01 00 1500 /System/Library/Frameworks/CoreML.framework/CoreML: MLFeatureValue 
01 00 1500 /System/Library/Frameworks/CoreML.framework/CoreML: MLModel 
01 00 1500 /System/Library/Frameworks/CoreML.framework/CoreML: MLModelConfiguration 
01 00 1500 /System/Library/Frameworks/CoreML.framework/CoreML: MLMultiArray 
01 00 1500 /System/Library/Frameworks/CoreML.framework/CoreML: MLPredictionOptions 
01 00 0300 /System/Library/Frameworks/NaturalLanguage.framework/NaturalLanguage: NLTagger 
01 00 0300 /System/Library/Frameworks/NaturalLanguage.framework/NaturalLanguage: NLTokenizer 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDataDetector 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSListFormatter 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 2000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
