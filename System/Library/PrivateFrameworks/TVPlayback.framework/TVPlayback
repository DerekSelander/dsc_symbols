|| __DATA.__data _TVPPlaybackReportingActionTypeExtras
|| __DATA.__data _TVPPlaybackReportingActionTypeLibrary
|| __DATA.__data _TVPPlaybackReportingActionTypeLink
|| __DATA.__data _TVPPlaybackReportingActionTypePostPlay
|| __DATA.__data _TVPPlaybackReportingActionTypeProductPage
|| __DATA.__data _TVPPlaybackReportingActionTypeUpNext
|| __DATA.__data _TVPPlaybackReportingEventBookmarkSync
|| __DATA.__data _TVPPlaybackReportingEventBookmarkSyncPerformed
|| __DATA.__data _TVPPlaybackReportingEventBumperTextDisplay
|| __DATA.__data _TVPPlaybackReportingEventBumperVideoDisplay
|| __DATA.__data _TVPPlaybackReportingEventBuyProduct
|| __DATA.__data _TVPPlaybackReportingEventBuyProductBlockedPlaybackStartup
|| __DATA.__data _TVPPlaybackReportingEventBuyProductServerProcessingTimeMS
|| __DATA.__data _TVPPlaybackReportingEventCRABSLease
|| __DATA.__data _TVPPlaybackReportingEventCRABSLeaseServerProcessingTimeMS
|| __DATA.__data _TVPPlaybackReportingEventCreatePlayerItemToLikelyToKeepUp
|| __DATA.__data _TVPPlaybackReportingEventEnsureSufficientDiskSpace
|| __DATA.__data _TVPPlaybackReportingEventError
|| __DATA.__data _TVPPlaybackReportingEventErrorEvent
|| __DATA.__data _TVPPlaybackReportingEventFPSCertFetch
|| __DATA.__data _TVPPlaybackReportingEventFPSOverallFetch
|| __DATA.__data _TVPPlaybackReportingEventFPSRequestDataGeneration
|| __DATA.__data _TVPPlaybackReportingEventFPSServerKeyFetch
|| __DATA.__data _TVPPlaybackReportingEventFPSServerProcessingTimeMS
|| __DATA.__data _TVPPlaybackReportingEventFPSURLBagFetch
|| __DATA.__data _TVPPlaybackReportingEventFPSUsingCachedCertData
|| __DATA.__data _TVPPlaybackReportingEventFetchLocationAuthorizationStatus
|| __DATA.__data _TVPPlaybackReportingEventFetchRental
|| __DATA.__data _TVPPlaybackReportingEventLinearTokenFetch
|| __DATA.__data _TVPPlaybackReportingEventLoadAVAssetKeysPrimary
|| __DATA.__data _TVPPlaybackReportingEventLoadAVAssetKeysSecondary
|| __DATA.__data _TVPPlaybackReportingEventLoadAVAssetKeysTotal
|| __DATA.__data _TVPPlaybackReportingEventLoadBumperConfig
|| __DATA.__data _TVPPlaybackReportingEventMediaItemLoaderLoad
|| __DATA.__data _TVPPlaybackReportingEventOpenURLTime
|| __DATA.__data _TVPPlaybackReportingEventPlaybackInitiationAction
|| __DATA.__data _TVPPlaybackReportingEventPlaybackStartupResult
|| __DATA.__data _TVPPlaybackReportingEventPrepareForLoading
|| __DATA.__data _TVPPlaybackReportingEventPrepareForPlaybackInitiation
|| __DATA.__data _TVPPlaybackReportingEventPressPlayToStartDisplay
|| __DATA.__data _TVPPlaybackReportingEventRentalCheckout
|| __DATA.__data _TVPPlaybackReportingEventRentalCheckoutDoneInParallelWithFPSKeyFetch
|| __DATA.__data _TVPPlaybackReportingEventRentalCheckoutServerProcessingTimeMS
|| __DATA.__data _TVPPlaybackReportingEventRestrictionsPasscodeDisplay
|| __DATA.__data _TVPPlaybackReportingEventResumeMenuDisplay
|| __DATA.__data _TVPPlaybackReportingEventSyncedBookmarkMatchesPreviousBookmark
|| __DATA.__data _TVPPlaybackReportingEventTimeSinceLastBookmarkSync
|| __DATA.__data _TVPPlaybackReportingEventTotalStartupSequence
|| __DATA.__data _TVPPlaybackReportingEventUserPlayToLoadingInitiation
|| __DATA.__data _TVPPlaybackReportingEventValueCancelled
|| __DATA.__data _TVPPlaybackReportingEventValueError
|| __DATA.__data _TVPPlaybackReportingEventValueSuccess
|| __DATA.__objc_data _OBJC_CLASS_$_TVPAudioOption
|| __DATA.__objc_data _OBJC_CLASS_$_TVPAutoSubtitleOption
|| __DATA.__objc_data _OBJC_CLASS_$_TVPBaseMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_TVPBumperConfig
|| __DATA.__objc_data _OBJC_CLASS_$_TVPChapter
|| __DATA.__objc_data _OBJC_CLASS_$_TVPChapterCollection
|| __DATA.__objc_data _OBJC_CLASS_$_TVPClipMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_TVPContentKeyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TVPContentKeyRequestParams
|| __DATA.__objc_data _OBJC_CLASS_$_TVPContentKeySession
|| __DATA.__objc_data _OBJC_CLASS_$_TVPDateRange
|| __DATA.__objc_data _OBJC_CLASS_$_TVPDownload
|| __DATA.__objc_data _OBJC_CLASS_$_TVPExternalImageConfig
|| __DATA.__objc_data _OBJC_CLASS_$_TVPInterstitial
|| __DATA.__objc_data _OBJC_CLASS_$_TVPInterstitialCollection
|| __DATA.__objc_data _OBJC_CLASS_$_TVPMediaItemAdvisoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TVPMediaItemProductPlacementInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TVPMediaItemRollInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TVPMediaItemSkipInfo
|| __DATA.__objc_data _OBJC_CLASS_$_TVPMutableChapter
|| __DATA.__objc_data _OBJC_CLASS_$_TVPMutableChapterCollection
|| __DATA.__objc_data _OBJC_CLASS_$_TVPMutableInterstitial
|| __DATA.__objc_data _OBJC_CLASS_$_TVPOffSubtitleOption
|| __DATA.__objc_data _OBJC_CLASS_$_TVPPlaybackReportingEventCollection
|| __DATA.__objc_data _OBJC_CLASS_$_TVPPlaybackState
|| __DATA.__objc_data _OBJC_CLASS_$_TVPPlaybackUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_TVPPlayerItem
|| __DATA.__objc_data _OBJC_CLASS_$_TVPPlaylist
|| __DATA.__objc_data _OBJC_CLASS_$_TVPReportingSession
|| __DATA.__objc_data _OBJC_CLASS_$_TVPResourceLoadingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TVPSecureKeyDeliveryCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_TVPSecureKeyLoader
|| __DATA.__objc_data _OBJC_CLASS_$_TVPSecureKeyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_TVPSecureKeyStandardConnector
|| __DATA.__objc_data _OBJC_CLASS_$_TVPSecureKeyStandardLoader
|| __DATA.__objc_data _OBJC_CLASS_$_TVPStoreFPSKeyLoader
|| __DATA.__objc_data _OBJC_CLASS_$_TVPSubtitleOption
|| __DATA.__objc_data _OBJC_CLASS_$_TVPTimeRange
|| __DATA.__objc_data _OBJC_CLASS_$_TVPURLMediaItem
|| __DATA.__objc_data _OBJC_CLASS_$_TVPVideoStillImageLoader
|| __DATA.__objc_data _OBJC_CLASS_$_TVPVideoView
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPAudioOption
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPAutoSubtitleOption
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPBaseMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPBumperConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPChapter
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPChapterCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPClipMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPContentKeyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPContentKeyRequestParams
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPContentKeySession
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPDateRange
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPDownload
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPExternalImageConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPInterstitial
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPInterstitialCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPMediaItemAdvisoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPMediaItemProductPlacementInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPMediaItemRollInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPMediaItemSkipInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPMutableChapter
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPMutableChapterCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPMutableInterstitial
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPOffSubtitleOption
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPPlaybackReportingEventCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPPlaybackState
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPPlaybackUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPPlayerItem
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPPlaylist
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPReportingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPResourceLoadingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPSecureKeyDeliveryCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPSecureKeyLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPSecureKeyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPSecureKeyStandardConnector
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPSecureKeyStandardLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPStoreFPSKeyLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPSubtitleOption
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPTimeRange
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPURLMediaItem
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPVideoStillImageLoader
|| __DATA.__objc_data _OBJC_METACLASS_$_TVPVideoView
|| __DATA_CONST.__const _TVPAVMetadataItemUndeterminedLanguageTag
|| __DATA_CONST.__const _TVPDownloadSessionDidFinishEventsForBackgroundURLSessionNotification
|| __DATA_CONST.__const _TVPMediaItemCellularSettingsDidChange
|| __DATA_CONST.__const _TVPMediaItemMetadataAVURLAssetAlternativeConfigurationOptions
|| __DATA_CONST.__const _TVPMediaItemMetadataAcquisitionDictionary
|| __DATA_CONST.__const _TVPMediaItemMetadataAdvisoryInfo
|| __DATA_CONST.__const _TVPMediaItemMetadataAirPlayAuthorizationInfo
|| __DATA_CONST.__const _TVPMediaItemMetadataAlbum
|| __DATA_CONST.__const _TVPMediaItemMetadataAllowAppleWirelessDirectLink
|| __DATA_CONST.__const _TVPMediaItemMetadataArtist
|| __DATA_CONST.__const _TVPMediaItemMetadataArtworkEpisodePreviewImageProxy
|| __DATA_CONST.__const _TVPMediaItemMetadataArtworkIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataArtworkImageProxy
|| __DATA_CONST.__const _TVPMediaItemMetadataArtworkURLFormat
|| __DATA_CONST.__const _TVPMediaItemMetadataArtworkURLString
|| __DATA_CONST.__const _TVPMediaItemMetadataBookmarkNetTime
|| __DATA_CONST.__const _TVPMediaItemMetadataBookmarkSaveInterval
|| __DATA_CONST.__const _TVPMediaItemMetadataBrandID
|| __DATA_CONST.__const _TVPMediaItemMetadataBrandName
|| __DATA_CONST.__const _TVPMediaItemMetadataBumperConfig
|| __DATA_CONST.__const _TVPMediaItemMetadataBuyParams
|| __DATA_CONST.__const _TVPMediaItemMetadataCanonicalID
|| __DATA_CONST.__const _TVPMediaItemMetadataChangesKey
|| __DATA_CONST.__const _TVPMediaItemMetadataChapterCollections
|| __DATA_CONST.__const _TVPMediaItemMetadataCommonSenseRating
|| __DATA_CONST.__const _TVPMediaItemMetadataContainsClosedCaptions
|| __DATA_CONST.__const _TVPMediaItemMetadataContentKeyRequestParams
|| __DATA_CONST.__const _TVPMediaItemMetadataContentProposal
|| __DATA_CONST.__const _TVPMediaItemMetadataContentRating
|| __DATA_CONST.__const _TVPMediaItemMetadataContentRatingDisplayName
|| __DATA_CONST.__const _TVPMediaItemMetadataContentRatingDomain
|| __DATA_CONST.__const _TVPMediaItemMetadataContentRatingDomainMovie
|| __DATA_CONST.__const _TVPMediaItemMetadataContentRatingDomainMusic
|| __DATA_CONST.__const _TVPMediaItemMetadataContentRatingDomainTVShow
|| __DATA_CONST.__const _TVPMediaItemMetadataContentRatingIsExplicitMusic
|| __DATA_CONST.__const _TVPMediaItemMetadataContentRatingRanking
|| __DATA_CONST.__const _TVPMediaItemMetadataContentRatingSystem
|| __DATA_CONST.__const _TVPMediaItemMetadataDSID
|| __DATA_CONST.__const _TVPMediaItemMetadataDatabaseIDString
|| __DATA_CONST.__const _TVPMediaItemMetadataDateReleased
|| __DATA_CONST.__const _TVPMediaItemMetadataDidChangeNotification
|| __DATA_CONST.__const _TVPMediaItemMetadataDownloadDestinationURL
|| __DATA_CONST.__const _TVPMediaItemMetadataDownloadQOSMetrics
|| __DATA_CONST.__const _TVPMediaItemMetadataDownloadTaskIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataDownloadToken
|| __DATA_CONST.__const _TVPMediaItemMetadataDuration
|| __DATA_CONST.__const _TVPMediaItemMetadataEpisodeIndexInSeries
|| __DATA_CONST.__const _TVPMediaItemMetadataEpisodeNumber
|| __DATA_CONST.__const _TVPMediaItemMetadataEpisodeTitle
|| __DATA_CONST.__const _TVPMediaItemMetadataExternalIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataExternalImageConfig
|| __DATA_CONST.__const _TVPMediaItemMetadataExternalImageConfigURL
|| __DATA_CONST.__const _TVPMediaItemMetadataExternalProfileIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataExternalServiceIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataExtrasURL
|| __DATA_CONST.__const _TVPMediaItemMetadataFeatureStartTime
|| __DATA_CONST.__const _TVPMediaItemMetadataFileSize
|| __DATA_CONST.__const _TVPMediaItemMetadataForceStreaming
|| __DATA_CONST.__const _TVPMediaItemMetadataForwardPlaybackEndTime
|| __DATA_CONST.__const _TVPMediaItemMetadataFrequencyOfConfirmationAlert
|| __DATA_CONST.__const _TVPMediaItemMetadataGaplessDurationInFrames
|| __DATA_CONST.__const _TVPMediaItemMetadataGaplessEncodingDelayInFrames
|| __DATA_CONST.__const _TVPMediaItemMetadataGaplessEncodingDrainInFrames
|| __DATA_CONST.__const _TVPMediaItemMetadataGaplessHeuristicInfo
|| __DATA_CONST.__const _TVPMediaItemMetadataGaplessLastPacketsResync
|| __DATA_CONST.__const _TVPMediaItemMetadataGenre
|| __DATA_CONST.__const _TVPMediaItemMetadataHTTPHeaders
|| __DATA_CONST.__const _TVPMediaItemMetadataHasAttemptedPlaybackRetryDueToError
|| __DATA_CONST.__const _TVPMediaItemMetadataHasAudioDescriptions
|| __DATA_CONST.__const _TVPMediaItemMetadataHasDolbyAtmos
|| __DATA_CONST.__const _TVPMediaItemMetadataHasSDH
|| __DATA_CONST.__const _TVPMediaItemMetadataInterstitialCollection
|| __DATA_CONST.__const _TVPMediaItemMetadataIsAdultContent
|| __DATA_CONST.__const _TVPMediaItemMetadataIsAdvertisement
|| __DATA_CONST.__const _TVPMediaItemMetadataIsInLibrary
|| __DATA_CONST.__const _TVPMediaItemMetadataIsUnknownItem
|| __DATA_CONST.__const _TVPMediaItemMetadataKeyBagPathFileURL
|| __DATA_CONST.__const _TVPMediaItemMetadataLaunchPlaybackURL
|| __DATA_CONST.__const _TVPMediaItemMetadataLiveStreamServiceID
|| __DATA_CONST.__const _TVPMediaItemMetadataLongDescription
|| __DATA_CONST.__const _TVPMediaItemMetadataMPArtworkCatalog
|| __DATA_CONST.__const _TVPMediaItemMetadataMPNowPlayingContentItem
|| __DATA_CONST.__const _TVPMediaItemMetadataMPNowPlayingContentItemID
|| __DATA_CONST.__const _TVPMediaItemMetadataMaxHLSVideoResolution
|| __DATA_CONST.__const _TVPMediaItemMetadataMediaDownloadState
|| __DATA_CONST.__const _TVPMediaItemMetadataMediaMetrics
|| __DATA_CONST.__const _TVPMediaItemMetadataMediaType
|| __DATA_CONST.__const _TVPMediaItemMetadataOutOfBandAlternateTracks
|| __DATA_CONST.__const _TVPMediaItemMetadataOverrideStreamingQualityToForceHD
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFAdamID
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFContainerID
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFContainerType
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFFeatureName
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFFeatureNameActivity
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFFeatureNameForYou
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFFeatureNameMyMusic
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFFeatureNameNew
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFFeatureNamePlaylists
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFFeatureNameRadio
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFFeatureNameSearch
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFIsValidReportingItem
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFItemType
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFPersonalizedContainerID
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFPlaylistVersionHash
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFRecommendationData
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFShouldReportToStore
|| __DATA_CONST.__const _TVPMediaItemMetadataPAFStoreCloudAlbumID
|| __DATA_CONST.__const _TVPMediaItemMetadataPlaybackProgress
|| __DATA_CONST.__const _TVPMediaItemMetadataPlaybackSummarySent
|| __DATA_CONST.__const _TVPMediaItemMetadataPostPlayStartTime
|| __DATA_CONST.__const _TVPMediaItemMetadataProductPlacementInfo
|| __DATA_CONST.__const _TVPMediaItemMetadataRadioAdImageURLString
|| __DATA_CONST.__const _TVPMediaItemMetadataRadioStationAttribution
|| __DATA_CONST.__const _TVPMediaItemMetadataRadioStationHash
|| __DATA_CONST.__const _TVPMediaItemMetadataRadioStationIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataRadioStationName
|| __DATA_CONST.__const _TVPMediaItemMetadataRadioStationStringID
|| __DATA_CONST.__const _TVPMediaItemMetadataRatingImageURL
|| __DATA_CONST.__const _TVPMediaItemMetadataReferenceID
|| __DATA_CONST.__const _TVPMediaItemMetadataRentalExpirationDate
|| __DATA_CONST.__const _TVPMediaItemMetadataRentalHasBeenPlayed
|| __DATA_CONST.__const _TVPMediaItemMetadataRentalID
|| __DATA_CONST.__const _TVPMediaItemMetadataRentalPlaybackDuration
|| __DATA_CONST.__const _TVPMediaItemMetadataRentalPlaybackStartDate
|| __DATA_CONST.__const _TVPMediaItemMetadataReportingParentHierarchyToken
|| __DATA_CONST.__const _TVPMediaItemMetadataRequiredAgeForPlayback
|| __DATA_CONST.__const _TVPMediaItemMetadataReversePlaybackEndTime
|| __DATA_CONST.__const _TVPMediaItemMetadataRollInfo
|| __DATA_CONST.__const _TVPMediaItemMetadataSSLProperties
|| __DATA_CONST.__const _TVPMediaItemMetadataSavedAudioOption
|| __DATA_CONST.__const _TVPMediaItemMetadataScrubImageVideoMediaItem
|| __DATA_CONST.__const _TVPMediaItemMetadataScrubPlayerItem
|| __DATA_CONST.__const _TVPMediaItemMetadataSeasonCanonicalID
|| __DATA_CONST.__const _TVPMediaItemMetadataSeasonNumber
|| __DATA_CONST.__const _TVPMediaItemMetadataSeriesID
|| __DATA_CONST.__const _TVPMediaItemMetadataSeriesTitle
|| __DATA_CONST.__const _TVPMediaItemMetadataServiceIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataShouldDisplayRatingOverlay
|| __DATA_CONST.__const _TVPMediaItemMetadataShowCanonicalID
|| __DATA_CONST.__const _TVPMediaItemMetadataSkipInfo
|| __DATA_CONST.__const _TVPMediaItemMetadataSoundCheckDictionary
|| __DATA_CONST.__const _TVPMediaItemMetadataSoundCheckMediaKind
|| __DATA_CONST.__const _TVPMediaItemMetadataSoundCheckVolumeNormalization
|| __DATA_CONST.__const _TVPMediaItemMetadataStartDate
|| __DATA_CONST.__const _TVPMediaItemMetadataStartTime
|| __DATA_CONST.__const _TVPMediaItemMetadataStoreFrontIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataStoreItemIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataStoreLyricsAvailable
|| __DATA_CONST.__const _TVPMediaItemMetadataStreamContentProperties
|| __DATA_CONST.__const _TVPMediaItemMetadataSubscriptionStoreItemIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataSubtitle
|| __DATA_CONST.__const _TVPMediaItemMetadataTitle
|| __DATA_CONST.__const _TVPMediaItemMetadataTomatoFreshness
|| __DATA_CONST.__const _TVPMediaItemMetadataTomatoPercentage
|| __DATA_CONST.__const _TVPMediaItemMetadataTotalTrackCount
|| __DATA_CONST.__const _TVPMediaItemMetadataTrackNumber
|| __DATA_CONST.__const _TVPMediaItemMetadataTreatAsTimeBasedNotDateBased
|| __DATA_CONST.__const _TVPMediaItemMetadataUniqueIdentifier
|| __DATA_CONST.__const _TVPMediaItemMetadataUpNextAutomaticAcceptanceInterval
|| __DATA_CONST.__const _TVPMediaItemMetadataUpNextPostPlayMediaItem
|| __DATA_CONST.__const _TVPMediaItemMetadataUpNextPresentationDuration
|| __DATA_CONST.__const _TVPMediaItemMetadataUpNextPresentationTime
|| __DATA_CONST.__const _TVPMediaItemMetadataVPAFInfo
|| __DATA_CONST.__const _TVPMediaItemMetadataVideoRange
|| __DATA_CONST.__const _TVPMediaItemMetadataVideoResolutionClass
|| __DATA_CONST.__const _TVPMediaItemMetadataWatchedTime
|| __DATA_CONST.__const _TVPMediaItemMetadataWebVTTStyles
|| __DATA_CONST.__const _TVPMediaItemMetadataWillChangeNotification
|| __DATA_CONST.__const _TVPMediaItemMetadataiTunesStoreContentInfo
|| __DATA_CONST.__const _TVPMediaItemPlaybackErrorDidOccurNotification
|| __DATA_CONST.__const _TVPMediaItemPlaybackErrorKey
|| __DATA_CONST.__const _TVPMediaItemPlaybackErrorShouldStopKey
|| __DATA_CONST.__const _TVPMediaItemPlaybackReportingEventCollection
|| __DATA_CONST.__const _TVPMediaItemStopPlaybackNotification
|| __DATA_CONST.__const _TVPMediaItemTraitAirPlayedContent
|| __DATA_CONST.__const _TVPMediaItemTraitAllowsVideoPlaybackWithoutVisuals
|| __DATA_CONST.__const _TVPMediaItemTraitCellularPlaybackProhibited
|| __DATA_CONST.__const _TVPMediaItemTraitDisableMetadataMenu
|| __DATA_CONST.__const _TVPMediaItemTraitDisableResumeMenu
|| __DATA_CONST.__const _TVPMediaItemTraitDisableScrubbing
|| __DATA_CONST.__const _TVPMediaItemTraitForceSkipItemSkippingBehavior
|| __DATA_CONST.__const _TVPMediaItemTraitForceSoundCheck
|| __DATA_CONST.__const _TVPMediaItemTraitHasHLS
|| __DATA_CONST.__const _TVPMediaItemTraitIncludeStoreCookiesInContentRequests
|| __DATA_CONST.__const _TVPMediaItemTraitInheritURIQueryComponentFromReferencingURI
|| __DATA_CONST.__const _TVPMediaItemTraitIsHD
|| __DATA_CONST.__const _TVPMediaItemTraitIsHomeSharingContent
|| __DATA_CONST.__const _TVPMediaItemTraitIsLiveContent
|| __DATA_CONST.__const _TVPMediaItemTraitIsLocal
|| __DATA_CONST.__const _TVPMediaItemTraitIsRental
|| __DATA_CONST.__const _TVPMediaItemTraitIsScene
|| __DATA_CONST.__const _TVPMediaItemTraitIsStreaming
|| __DATA_CONST.__const _TVPMediaItemTraitKeepVideoLayersAttachedWhileSuspended
|| __DATA_CONST.__const _TVPMediaItemTraitMinimizeNetworkUsageWhilePaused
|| __DATA_CONST.__const _TVPMediaItemTraitOptimizeForHighLatency
|| __DATA_CONST.__const _TVPMediaItemTraitOptimizeForLinearPlayback
|| __DATA_CONST.__const _TVPMediaItemTraitPreventSpeculativeLoading
|| __DATA_CONST.__const _TVPMediaItemTraitRequiresAppToRunIfBackgroundedDuringPlayback
|| __DATA_CONST.__const _TVPMediaItemTraitStopWhenAppIsBackgrounded
|| __DATA_CONST.__const _TVPMediaItemTraitStopWhenDeviceSleeps
|| __DATA_CONST.__const _TVPMediaItemTraitSupportsAVKitContentProposal
|| __DATA_CONST.__const _TVPMediaItemTraitSupportsBookmarks
|| __DATA_CONST.__const _TVPMediaItemTraitSupportsPlayCounts
|| __DATA_CONST.__const _TVPMediaItemTraitSupportsReporting
|| __DATA_CONST.__const _TVPMediaItemTraitTreatAsVideo
|| __DATA_CONST.__const _TVPMediaItemTraitTreatUnratedAsRated
|| __DATA_CONST.__const _TVPMediaItemTraitUseTempDownload
|| __DATA_CONST.__const _TVPMediaTypeAudio
|| __DATA_CONST.__const _TVPMediaTypeAudioBook
|| __DATA_CONST.__const _TVPMediaTypeHomeVideo
|| __DATA_CONST.__const _TVPMediaTypeITunesRadio
|| __DATA_CONST.__const _TVPMediaTypeITunesU
|| __DATA_CONST.__const _TVPMediaTypeMovie
|| __DATA_CONST.__const _TVPMediaTypeMoviePreview
|| __DATA_CONST.__const _TVPMediaTypeMovieRental
|| __DATA_CONST.__const _TVPMediaTypeMusic
|| __DATA_CONST.__const _TVPMediaTypeMusicVideo
|| __DATA_CONST.__const _TVPMediaTypePodcast
|| __DATA_CONST.__const _TVPMediaTypeTVEpisode
|| __DATA_CONST.__const _TVPMediaTypeTVEpisodePreview
|| __DATA_CONST.__const _TVPMediaTypeVideo
|| __DATA_CONST.__const _TVPMediaTypeVideoITunesU
|| __DATA_CONST.__const _TVPMediaTypeVideoPodcast
|| __DATA_CONST.__const _TVPPlaybackChangeReasonErrorDidOccur
|| __DATA_CONST.__const _TVPPlaybackChangeReasonFastForwardedToEndOfMediaItem
|| __DATA_CONST.__const _TVPPlaybackChangeReasonHitBeginningOfPlaylist
|| __DATA_CONST.__const _TVPPlaybackChangeReasonHitEndOfPlaylist
|| __DATA_CONST.__const _TVPPlaybackChangeReasonManuallyChanged
|| __DATA_CONST.__const _TVPPlaybackChangeReasonNewPlaylist
|| __DATA_CONST.__const _TVPPlaybackChangeReasonPlaybackDidStall
|| __DATA_CONST.__const _TVPPlaybackChangeReasonPlayedToEndOfMediaItem
|| __DATA_CONST.__const _TVPPlaybackChangeReasonPlayerInvalidated
|| __DATA_CONST.__const _TVPPlaybackCurrentMediaItemChangeDidHitEndOfPlaylistKey
|| __DATA_CONST.__const _TVPPlaybackCurrentMediaItemChangeDirectionKey
|| __DATA_CONST.__const _TVPPlaybackCurrentMediaItemChangeDitHitBeginningOfPlaylistKey
|| __DATA_CONST.__const _TVPPlaybackCurrentMediaItemChangeReasonKey
|| __DATA_CONST.__const _TVPPlaybackCurrentMediaItemDidChangeNotification
|| __DATA_CONST.__const _TVPPlaybackCurrentMediaItemWillChangeNotification
|| __DATA_CONST.__const _TVPPlaybackDidPlayToEndOfMediaItemNotification
|| __DATA_CONST.__const _TVPPlaybackDidStallNotification
|| __DATA_CONST.__const _TVPPlaybackErrorKey
|| __DATA_CONST.__const _TVPPlaybackErrorNotification
|| __DATA_CONST.__const _TVPPlaybackMediaItemDidBecomePreparedNotification
|| __DATA_CONST.__const _TVPPlaybackPlaylistDidFinishNotification
|| __DATA_CONST.__const _TVPPlaybackReportingBufferingDidBecomeLikelyToKeepUpNotification
|| __DATA_CONST.__const _TVPPlaybackReportingBufferingWillStartNotification
|| __DATA_CONST.__const _TVPPlaybackStateChangeReasonKey
|| __DATA_CONST.__const _TVPPlaybackStateDidChangeNotification
|| __DATA_CONST.__const _TVPPlaybackStateNewRateKey
|| __DATA_CONST.__const _TVPPlaybackStateNewStateKey
|| __DATA_CONST.__const _TVPPlaybackStateOldStateKey
|| __DATA_CONST.__const _TVPPlaybackStateWillChangeNotification
|| __DATA_CONST.__const _TVPPlaybackWillStopDueToErrorKey
|| __DATA_CONST.__const _TVPPlayerExternalPlaybackTypeDidChangeNotification
|| __DATA_CONST.__const _TVPPlayerReporterMediaIDsExpirationDomain
|| __DATA_CONST.__const _TVPPlayerReporterMediaIDsExpirationKey
|| __DATA_CONST.__const _TVPPlayerStillImageDidChangeNotification
|| __DATA_CONST.__const _TVPPlayerStillImageKey
|| __DATA_CONST.__const _TVPPlayerUnqueueudPlayerItemReadyNotification
|| __DATA_CONST.__const _TVPPlaylistDidHitBeginningKey
|| __DATA_CONST.__const _TVPPlaylistDidHitEndKey
|| __DATA_CONST.__const _TVPPlaylistDirectionKey
|| __DATA_CONST.__const _TVPPlaylistMediaChangeRequestedNotification
|| __DATA_CONST.__const _TVPSKDDeviceLimitErrorUserInfoKey
|| __DATA_CONST.__const _TVPSKDErrorDomain
|| __DATA_CONST.__const _TVPStateMachineContextKey
|| __DATA_CONST.__const _TVPStateMachineNewStateKey
|| __DATA_CONST.__const _TVPStateMachineOldStateKey
|| __DATA_CONST.__const _TVPStateMachineStateChangedNotification
|| __DATA_DIRTY.__common _sLogObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVPAudioSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVPDownloadSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVPPlayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TVPStateMachine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVPAudioSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVPDownloadSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVPPlayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TVPStateMachine
|| __TEXT.__const _TVPDurationIndefinite
|| __TEXT.__const _TVPDurationUnknown
|| __TEXT.__const _TVPElapsedTimeLive
|| __TEXT.__const _TVPElapsedTimeStart
|| __TEXT.__const _TVPPlaybackBitRateLarge
|| __TEXT.__const _TVPPlaybackBitRateMedium
|| __TEXT.__const _TVPPlaybackBitRateSmall
|| __TEXT.__const _TVPPlaybackBitRateUnlimited
|| __TEXT.__const _TVPlaybackVersionNumber
|| __TEXT.__const _TVPlaybackVersionString
|| __TEXT.__text _TVPErrorIsFatalSKDError
|| __TEXT.__text _TVPErrorIsSKDError
|| __TEXT.__text _TVPPerformBlockOnMainThread
|| __TEXT.__text _TVPPerformBlockOnMainThreadIfNeeded
|| __TEXT.__text _TVPSKDErrorWithCode
__ AVFoundation: _AVAssetDownloadTaskAllowHighDynamicRangeKey
__ AVFoundation: _AVAssetDownloadTaskMediaSelectionPrefersMultichannelKey
__ AVFoundation: _AVAssetDownloadTaskMediaSelectionsForMultichannelKey
__ AVFoundation: _AVAssetDownloadTaskMinimumRequiredMediaBitrateForHEVCKey
__ AVFoundation: _AVAssetDownloadTaskMinimumRequiredMediaBitrateKey
__ AVFoundation: _AVAssetDownloadTaskMinimumRequiredPresentationSizeKey
__ AVFoundation: _AVAssetDownloadTaskPrefersMostCompatibleRenditionKey
__ AVFoundation: _AVAssetMediaServicesWereResetErrorKey
__ AVFoundation: _AVAssetMediaServicesWereResetNotification
__ AVFoundation: _AVAssetResourceLoadingRequestStreamingContentKeyRequestRequiresPersistentKey
__ AVFoundation: _AVAudioSessionMediaServicesWereResetNotification
__ AVFoundation: _AVAudioSessionRouteChangeNotification
__ AVFoundation: _AVAudioSessionRouteChangeReasonKey
__ AVFoundation: _AVContentKeyRequestProtocolVersionsKey
__ AVFoundation: _AVContentKeyRequestRequiresValidationDataInSecureTokenKey
__ AVFoundation: _AVContentKeySessionServerPlaybackContextOptionServerChallenge
__ AVFoundation: _AVContentKeySystemFairPlayStreaming
__ AVFoundation: _AVFoundationErrorDomain
__ AVFoundation: _AVLayerVideoGravityResize
__ AVFoundation: _AVLayerVideoGravityResizeAspect
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaCharacteristicAudible
__ AVFoundation: _AVMediaCharacteristicContainsOnlyForcedSubtitles
__ AVFoundation: _AVMediaCharacteristicDescribesMusicAndSoundForAccessibility
__ AVFoundation: _AVMediaCharacteristicDescribesVideoForAccessibility
__ AVFoundation: _AVMediaCharacteristicEasyToRead
__ AVFoundation: _AVMediaCharacteristicIsAuxiliaryContent
__ AVFoundation: _AVMediaCharacteristicIsMainProgramContent
__ AVFoundation: _AVMediaCharacteristicIsOriginalContent
__ AVFoundation: _AVMediaCharacteristicLegible
__ AVFoundation: _AVMediaCharacteristicTranscribesSpokenDialogForAccessibility
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeClosedCaption
__ AVFoundation: _AVMediaTypeSubtitle
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataCommonIdentifierAlbumName
__ AVFoundation: _AVMetadataCommonIdentifierArtwork
__ AVFoundation: _AVMetadataCommonIdentifierDescription
__ AVFoundation: _AVMetadataCommonIdentifierTitle
__ AVFoundation: _AVMetadataCommonKeyArtwork
__ AVFoundation: _AVMetadataCommonKeyTitle
__ AVFoundation: _AVMetadataIdentifierQuickTimeMetadataGenre
__ AVFoundation: _AVMetadataIdentifieriTunesMetadataContentRating
__ AVFoundation: _AVMetadataIdentifieriTunesMetadataReleaseDate
__ AVFoundation: _AVMetadataIdentifieriTunesMetadataTrackSubTitle
__ AVFoundation: _AVMetadataKeySpaceCommon
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeErrorKey
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemGaplessInfoDurationInFramesKey
__ AVFoundation: _AVPlayerItemGaplessInfoEncodingDelayInFramesKey
__ AVFoundation: _AVPlayerItemGaplessInfoEncodingDrainInFramesKey
__ AVFoundation: _AVPlayerItemGaplessInfoHeuristicInfoKey
__ AVFoundation: _AVPlayerItemGaplessInfoLastPacketsResyncKey
__ AVFoundation: _AVPlayerItemMediaSelectionDidChangeNotification
__ AVFoundation: _AVPlayerItemNewAccessLogEntryNotification
__ AVFoundation: _AVPlayerItemNewErrorLogEntryNotification
__ AVFoundation: _AVPlayerItemPlaybackStalledNotification
__ AVFoundation: _AVStreamingKeyDeliveryContentKeyType
__ AVFoundation: _AVStreamingKeyDeliveryPersistentContentKeyType
__ AVFoundation: _AVURLAssetAirPlayAuthorizationInfoKey
__ AVFoundation: _AVURLAssetAllowsCellularAccessKey
__ AVFoundation: _AVURLAssetAllowsConstrainedNetworkAccessKey
__ AVFoundation: _AVURLAssetAlternativeConfigurationHierarchyTokenKey
__ AVFoundation: _AVURLAssetAlternativeConfigurationOptionsKey
__ AVFoundation: _AVURLAssetAlternativeConfigurationServiceIdentifierKey
__ AVFoundation: _AVURLAssetCacheKey
__ AVFoundation: _AVURLAssetDownloadDestinationURLKey
__ AVFoundation: _AVURLAssetDownloadTokenKey
__ AVFoundation: _AVURLAssetHTTPCookiesKey
__ AVFoundation: _AVURLAssetHTTPHeaderFieldsKey
__ AVFoundation: _AVURLAssetInheritURIQueryComponentFromReferencingURIKey
__ AVFoundation: _AVURLAssetNetworkProbeRequestDisabledKey
__ AVFoundation: _AVURLAssetOptimizeAccessForLinearMoviePlaybackKey
__ AVFoundation: _AVURLAssetOutOfBandAlternateTracksKey
__ AVFoundation: _AVURLAssetProtectedContentSupportStorageURLKey
__ AVFoundation: _AVURLAssetPurchaseBundleKey
__ AVFoundation: _AVURLAssetReadAheadOnByteStreamCreationEnabledKey
__ AVFoundation: _AVURLAssetSSLPropertiesKey
__ AVFoundation: _AVURLAssetUseAppleWirelessDirectLinkKey
__ AVFoundation: _AVURLAssetiTunesStoreContentHLSAssetURLStringKey
__ AVFoundation: _AVURLAssetiTunesStoreContentInfoKey
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetDownloadURLSession
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVAssetResourceRenewalRequest
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVContentKeyResponse
__ AVFoundation: _OBJC_CLASS_$_AVContentKeySession
__ AVFoundation: _OBJC_CLASS_$_AVMediaSelection
__ AVFoundation: _OBJC_CLASS_$_AVMediaSelectionGroup
__ AVFoundation: _OBJC_CLASS_$_AVMediaSelectionOption
__ AVFoundation: _OBJC_CLASS_$_AVMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVMutableMetadataItem
__ AVFoundation: _OBJC_CLASS_$_AVPersistableContentKeyRequest
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerMediaSelectionCriteria
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ AVFoundation: _OBJC_CLASS_$_AVTextStyleRule
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVFoundation: _OBJC_METACLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_METACLASS_$_AVQueuePlayer
__ AVKit: _AVKitMetadataIdentifierBrandIdentifier
__ AVKit: _AVKitMetadataIdentifierExternalContentIdentifier
__ AVKit: _AVKitMetadataIdentifierExternalUserProfileIdentifier
__ AVKit: _AVKitMetadataIdentifierPlaybackProgress
__ AVKit: _AVKitMetadataIdentifierServiceIdentifier
__ AVKit: _AVKitMetadataIdentifieriTunesStoreIdentifier
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppleMediaServices: _OBJC_CLASS_$_AMSDevice
__ AudioToolbox: _kLoudnessInfoDictionary_MediaKindKey
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSLocaleScriptCode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGSizeZero
__ CoreMedia: _CMAudioFormatDescriptionGetChannelCount
__ CoreMedia: _CMAudioFormatDescriptionGetFormatList
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeClampToRange
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeCopyDescription
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeMaximum
__ CoreMedia: _CMTimeMinimum
__ CoreMedia: _CMTimeMultiplyByFloat64
__ CoreMedia: _CMTimeRangeContainsTime
__ CoreMedia: _CMTimeRangeFromTimeToTime
__ CoreMedia: _CMTimeRangeGetEnd
__ CoreMedia: _CMTimeRangeGetIntersection
__ CoreMedia: _CMTimeRangeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _CMVideoFormatDescriptionGetDimensions
__ CoreMedia: _CMVideoFormatDescriptionGetVideoDynamicRange
__ CoreMedia: _kCMMetadataBaseDataType_JPEG
__ CoreMedia: _kCMMetadataBaseDataType_PNG
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimeNegativeInfinity
__ CoreMedia: _kCMTimePositiveInfinity
__ CoreMedia: _kCMTimeRangeZero
__ CoreMedia: _kCMTimeZero
__ CoreServices: _kUTTypeJPEG
__ CoreServices: _kUTTypePNG
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeNotificationIsPriorKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorNetworkUnavailableReasonKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLProtocol
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ MediaAccessibility: _MAAudibleMediaCopyPreferredCharacteristics
__ MediaAccessibility: _MAAudibleMediaPrefCopyPreferDescriptiveVideo
__ MediaAccessibility: _MACaptionAppearanceAddSelectedLanguage
__ MediaAccessibility: _MACaptionAppearanceCopyPreferredCaptioningMediaCharacteristics
__ MediaAccessibility: _MACaptionAppearanceGetDisplayType
__ MediaAccessibility: _MACaptionAppearancePrefSetDisplayType
__ MediaAccessibility: _MACaptionAppearancePrefSetPreferredLanguages
__ MediaAccessibility: _MAMediaCharacteristicDescribesMusicAndSoundForAccessibility
__ MediaAccessibility: _MAMediaCharacteristicDescribesVideoForAccessibility
__ MediaAccessibility: _MAMediaCharacteristicTranscribesSpokenDialogForAccessibility
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ RTCReporting: _OBJC_CLASS_$_RTCReporting
__ RTCReporting: _kRTCReportingMessageParametersCategory
__ RTCReporting: _kRTCReportingMessageParametersFlag
__ RTCReporting: _kRTCReportingMessageParametersPayload
__ RTCReporting: _kRTCReportingMessageParametersType
__ RTCReporting: _kRTCReportingSessionInfoBatchEvent
__ RTCReporting: _kRTCReportingSessionInfoClientBundleID
__ RTCReporting: _kRTCReportingSessionInfoClientType
__ RTCReporting: _kRTCReportingSessionInfoClientVersion
__ RTCReporting: _kRTCReportingSessionInfoContainsRealtimeEvents
__ RTCReporting: _kRTCReportingSessionInfoHierarchyToken
__ RTCReporting: _kRTCReportingSessionInfoRequireUserInfo
__ RTCReporting: _kRTCReportingSessionInfoSessionID
__ RTCReporting: _kRTCReportingUserInfoClientName
__ RTCReporting: _kRTCReportingUserInfoServiceName
__ StoreServices: _OBJC_CLASS_$_SSVLoadURLOperation
__ StoreServices: _OBJC_CLASS_$_SSVURLBagInterpreter
__ StoreServices: _SSErrorDomain
__ StoreServices: _SSNetworkTypeIsCellularType
__ TVMLKit: _OBJC_CLASS_$_TVImageProxy
__ TVMLKit: _OBJC_CLASS_$_TVURLDescription
__ TVMLKit: _OBJC_CLASS_$_TVURLImageLoader
__ TVMLKit: _OBJC_CLASS_$_TVURLImageRequest
__ TVMLKit: _OBJC_CLASS_$_TVViewFactory
__ UIKit: _NSStringFromCGSize
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIBackgroundTaskInvalid
__ iTunesStore: _OBJC_CLASS_$_ISNetworkObserver
__ iTunesStore: _OBJC_CLASS_$_ISURLBagLoadingController
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _log10
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
TVPReportingSession : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<TVPMediaItem> *mediaItem
 @property  RTCReporting *reporter

  // class methods
  +[TVPReportingSession initialize]

  // instance methods
  -[TVPReportingSession reporter]
  -[TVPReportingSession initWithMediaItem:]
  -[TVPReportingSession setMediaItem:]
  -[TVPReportingSession .cxx_destruct]
  -[TVPReportingSession mediaItem]
  -[TVPReportingSession setReporter:]
  -[TVPReportingSession _sendEvent:withCategory:type:values:]
  -[TVPReportingSession reportDownloadFinishedWithResult:error:]


TVPInterstitialCollection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *interstitials
 @property  NSArray *interstitialsWithAdjacentsMerged
 @property  id backingData

  // instance methods
  -[TVPInterstitialCollection .cxx_destruct]
  -[TVPInterstitialCollection setInterstitials:]
  -[TVPInterstitialCollection interstitials]
  -[TVPInterstitialCollection interstitialsWithAdjacentsMerged]
  -[TVPInterstitialCollection initWithInterstitials:]
  -[TVPInterstitialCollection timeAdjustedByRemovingInterstitials:]
  -[TVPInterstitialCollection timeAdjustedByIncludingInterstitials:]
  -[TVPInterstitialCollection interstitialForTime:]
  -[TVPInterstitialCollection mergedInterstitialForTime:]
  -[TVPInterstitialCollection setInterstitialsWithAdjacentsMerged:]
  -[TVPInterstitialCollection backingData]
  -[TVPInterstitialCollection setBackingData:]


TVPPlaybackState : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name

  // class methods
  +[TVPPlaybackState loading]
  +[TVPPlaybackState stopped]
  +[TVPPlaybackState paused]
  +[TVPPlaybackState scanning]
  +[TVPPlaybackState playing]

  // instance methods
  -[TVPPlaybackState initWithName:]
  -[TVPPlaybackState init]
  -[TVPPlaybackState .cxx_destruct]
  -[TVPPlaybackState name]
  -[TVPPlaybackState isEqual:]
  -[TVPPlaybackState setName:]


TVPProgressiveJumpingScrubber : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long skipCount
 @property  double skipAdjustTime
 @property  double nextSkipAdjustTime
 @property  double skipAdjustPeriod
 @property  NSTimer *skipTimer
 @property  TVPPlayer *player
 @property  double rate

  // instance methods
  -[TVPProgressiveJumpingScrubber rate]
  -[TVPProgressiveJumpingScrubber setPlayer:]
  -[TVPProgressiveJumpingScrubber .cxx_destruct]
  -[TVPProgressiveJumpingScrubber setRate:]
  -[TVPProgressiveJumpingScrubber player]
  -[TVPProgressiveJumpingScrubber setSkipCount:]
  -[TVPProgressiveJumpingScrubber skipCount]
  -[TVPProgressiveJumpingScrubber _skipTimerFired:]
  -[TVPProgressiveJumpingScrubber cancelScrub]
  -[TVPProgressiveJumpingScrubber _nextTimeToAdvanceFromTime:]
  -[TVPProgressiveJumpingScrubber startScrubWithRate:]
  -[TVPProgressiveJumpingScrubber skipAdjustTime]
  -[TVPProgressiveJumpingScrubber setSkipAdjustTime:]
  -[TVPProgressiveJumpingScrubber nextSkipAdjustTime]
  -[TVPProgressiveJumpingScrubber setNextSkipAdjustTime:]
  -[TVPProgressiveJumpingScrubber skipAdjustPeriod]
  -[TVPProgressiveJumpingScrubber setSkipAdjustPeriod:]
  -[TVPProgressiveJumpingScrubber skipTimer]
  -[TVPProgressiveJumpingScrubber setSkipTimer:]


TVPPlaybackImageLoadInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  id identifier
 @property  double requestedTime
 @property  NSDate *requestedDate
 @property  {?=qiIq} requestedCMTime
 @property  {CGSize=dd} maxSize
 @property  @? timeBasedHandler
 @property  @? dateBasedHandler

  // instance methods
  -[TVPPlaybackImageLoadInfo maxSize]
  -[TVPPlaybackImageLoadInfo .cxx_destruct]
  -[TVPPlaybackImageLoadInfo setIdentifier:]
  -[TVPPlaybackImageLoadInfo identifier]
  -[TVPPlaybackImageLoadInfo setMaxSize:]
  -[TVPPlaybackImageLoadInfo setRequestedDate:]
  -[TVPPlaybackImageLoadInfo requestedTime]
  -[TVPPlaybackImageLoadInfo requestedDate]
  -[TVPPlaybackImageLoadInfo setRequestedTime:]
  -[TVPPlaybackImageLoadInfo dateBasedHandler]
  -[TVPPlaybackImageLoadInfo timeBasedHandler]
  -[TVPPlaybackImageLoadInfo callCompletionHandlerWithImage:actualCMTime:actualDate:]
  -[TVPPlaybackImageLoadInfo requestedCMTime]
  -[TVPPlaybackImageLoadInfo setRequestedCMTime:]
  -[TVPPlaybackImageLoadInfo setTimeBasedHandler:]
  -[TVPPlaybackImageLoadInfo setDateBasedHandler:]


TVPSecureKeyLoader : NSObject /usr/lib/libSystem.B.dylib
 @property  <TVPSecureKeyLoaderDelegate> *delegate
 @property  TVPPlaybackReportingEventCollection *eventCollection

  // instance methods
  -[TVPSecureKeyLoader .cxx_destruct]
  -[TVPSecureKeyLoader setDelegate:]
  -[TVPSecureKeyLoader delegate]
  -[TVPSecureKeyLoader eventCollection]
  -[TVPSecureKeyLoader setEventCollection:]
  -[TVPSecureKeyLoader startLoadingCertificateDataForRequest:]
  -[TVPSecureKeyLoader startLoadingContentIdentifierDataForRequest:]
  -[TVPSecureKeyLoader startLoadingKeyResponseDataForRequest:]
  -[TVPSecureKeyLoader sendStopRequest]


TVPPlaylist : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<TVPMediaItem> *currentMediaItem
 @property  NSObject<TVPMediaItem> *nextMediaItem
 @property  NSObject<TVPMediaItem> *previousMediaItem
 @property  NSDictionary *changeContext
 @property  unsigned long currentIndex
 @property  unsigned long count
 @property  unsigned long upNextIndex
 @property  NSArray *trackList
 @property  NSArray *activeList
 @property  unsigned long activeListIndex
 @property  long long endAction
 @property  BOOL windowed
 @property  unsigned long numConsecutivePlaybackFailures
 @property  NSString *name
 @property  BOOL shuffleEnabled
 @property  BOOL supportsShuffle
 @property  long long repeatMode
 @property  BOOL supportsRepeat
 @property  BOOL skipExplicit
 @property  NSArray *upcomingItems
 @property  unsigned long upcomingItemsLimit

  // class methods
  +[TVPPlaylist keyPathsForValuesAffectingValueForKey:]
  +[TVPPlaylist automaticallyNotifiesObserversForKey:]

  // instance methods
  -[TVPPlaylist setCurrentIndex:]
  -[TVPPlaylist currentIndex]
  -[TVPPlaylist setCount:]
  -[TVPPlaylist init]
  -[TVPPlaylist removeItemAtIndex:]
  -[TVPPlaylist setRepeatMode:]
  -[TVPPlaylist addItems:]
  -[TVPPlaylist shuffleEnabled]
  -[TVPPlaylist .cxx_destruct]
  -[TVPPlaylist name]
  -[TVPPlaylist removeItemsAtIndexes:]
  -[TVPPlaylist setCurrentMediaItem:]
  -[TVPPlaylist currentMediaItem]
  -[TVPPlaylist insertItem:atIndex:]
  -[TVPPlaylist addItem:]
  -[TVPPlaylist repeatMode]
  -[TVPPlaylist count]
  -[TVPPlaylist insertItems:atIndexes:]
  -[TVPPlaylist windowed]
  -[TVPPlaylist setName:]
  -[TVPPlaylist setWindowed:]
  -[TVPPlaylist initWithMediaItems:index:isCollection:]
  -[TVPPlaylist isEqualToPlaylist:]
  -[TVPPlaylist trackList]
  -[TVPPlaylist activeList]
  -[TVPPlaylist activeListIndex]
  -[TVPPlaylist nextMediaItem]
  -[TVPPlaylist previousMediaItem]
  -[TVPPlaylist changeContext]
  -[TVPPlaylist setChangeContext:]
  -[TVPPlaylist setEndAction:]
  -[TVPPlaylist endAction]
  -[TVPPlaylist _updateCurrent:andNextItems:withContext:]
  -[TVPPlaylist skipExplicit]
  -[TVPPlaylist changeMedia:withContext:]
  -[TVPPlaylist _nextActiveListIndex]
  -[TVPPlaylist moreItemsAvailable:]
  -[TVPPlaylist _previousActiveListIndex]
  -[TVPPlaylist _isMediaItemExplicit:]
  -[TVPPlaylist upcomingItems]
  -[TVPPlaylist supportsShuffle]
  -[TVPPlaylist _shuffle:]
  -[TVPPlaylist supportsRepeat]
  -[TVPPlaylist upNextIndex]
  -[TVPPlaylist changeMedia:]
  -[TVPPlaylist changeToActiveListIndex:withContext:]
  -[TVPPlaylist setSkipExplicit:]
  -[TVPPlaylist setShuffleEnabled:preserveCurrentItem:]
  -[TVPPlaylist setUpcomingItemsLimit:]
  -[TVPPlaylist addItemsToUpNext:]
  -[TVPPlaylist setNextMediaItem:]
  -[TVPPlaylist setPreviousMediaItem:]
  -[TVPPlaylist numConsecutivePlaybackFailures]
  -[TVPPlaylist setNumConsecutivePlaybackFailures:]
  -[TVPPlaylist upcomingItemsLimit]


TVPChapterCollection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  NSArray *chapters
 @property  long long type
 @property  id backingData
 @property  NSDate *startDate
 @property  BOOL shouldStartPlaybackFromStartDate
 @property  BOOL shouldDisplayChapterMarkers
 @property  BOOL shouldShowDescriptionOnChapterSkip
 @property  double refreshInterval
 @property  NSURL *refreshURL

  // instance methods
  -[TVPChapterCollection init]
  -[TVPChapterCollection startDate]
  -[TVPChapterCollection chapters]
  -[TVPChapterCollection setType:]
  -[TVPChapterCollection .cxx_destruct]
  -[TVPChapterCollection refreshURL]
  -[TVPChapterCollection name]
  -[TVPChapterCollection setRefreshURL:]
  -[TVPChapterCollection type]
  -[TVPChapterCollection setRefreshInterval:]
  -[TVPChapterCollection setChapters:]
  -[TVPChapterCollection refreshInterval]
  -[TVPChapterCollection setName:]
  -[TVPChapterCollection setStartDate:]
  -[TVPChapterCollection backingData]
  -[TVPChapterCollection setBackingData:]
  -[TVPChapterCollection chapterForTime:]
  -[TVPChapterCollection nearestChapterForTime:]
  -[TVPChapterCollection chapterForDate:]
  -[TVPChapterCollection nearestChapterForDate:]
  -[TVPChapterCollection shouldStartPlaybackFromStartDate]
  -[TVPChapterCollection setShouldStartPlaybackFromStartDate:]
  -[TVPChapterCollection shouldDisplayChapterMarkers]
  -[TVPChapterCollection setShouldDisplayChapterMarkers:]
  -[TVPChapterCollection shouldShowDescriptionOnChapterSkip]
  -[TVPChapterCollection setShouldShowDescriptionOnChapterSkip:]


TVPMutableChapterCollection : TVPChapterCollection
 @property  NSString *name
 @property  NSArray *chapters
 @property  long long type
 @property  id backingData
 @property  NSDate *startDate
 @property  BOOL shouldStartPlaybackFromStartDate
 @property  BOOL shouldDisplayChapterMarkers
 @property  BOOL shouldShowDescriptionOnChapterSkip
 @property  double refreshInterval
 @property  NSURL *refreshURL


TVPMediaItemTimingData : NSObject /usr/lib/libSystem.B.dylib
 @property  double totalInitialLoadingTime
 @property  double startTimeForPreparingForLoading
 @property  double endTimeForPreparingForLoading
 @property  double startTimeForLoadingAVAssetKeys
 @property  double endTimeForLoadingAVAssetKeys
 @property  double startTimeForPreparingForPlaybackInitiation
 @property  double endTimeForPreparingForPlaybackInitiation
 @property  double startTimeForAVPlayerItemLoading
 @property  double endTimeForAVPlayerItemLoading
 @property  double startTimeForBuffering
 @property  double endTimeForBuffering
 @property  BOOL initialLoadingComplete

  // instance methods
  -[TVPMediaItemTimingData endTimeForPreparingForLoading]
  -[TVPMediaItemTimingData startTimeForPreparingForLoading]
  -[TVPMediaItemTimingData endTimeForLoadingAVAssetKeys]
  -[TVPMediaItemTimingData startTimeForLoadingAVAssetKeys]
  -[TVPMediaItemTimingData endTimeForPreparingForPlaybackInitiation]
  -[TVPMediaItemTimingData startTimeForPreparingForPlaybackInitiation]
  -[TVPMediaItemTimingData endTimeForAVPlayerItemLoading]
  -[TVPMediaItemTimingData startTimeForAVPlayerItemLoading]
  -[TVPMediaItemTimingData endTimeForBuffering]
  -[TVPMediaItemTimingData startTimeForBuffering]
  -[TVPMediaItemTimingData setTotalInitialLoadingTime:]
  -[TVPMediaItemTimingData setInitialLoadingComplete:]
  -[TVPMediaItemTimingData setStartTimeForPreparingForLoading:]
  -[TVPMediaItemTimingData setEndTimeForPreparingForLoading:]
  -[TVPMediaItemTimingData setStartTimeForLoadingAVAssetKeys:]
  -[TVPMediaItemTimingData setEndTimeForLoadingAVAssetKeys:]
  -[TVPMediaItemTimingData setStartTimeForPreparingForPlaybackInitiation:]
  -[TVPMediaItemTimingData setEndTimeForPreparingForPlaybackInitiation:]
  -[TVPMediaItemTimingData setStartTimeForAVPlayerItemLoading:]
  -[TVPMediaItemTimingData setEndTimeForAVPlayerItemLoading:]
  -[TVPMediaItemTimingData setStartTimeForBuffering:]
  -[TVPMediaItemTimingData setEndTimeForBuffering:]
  -[TVPMediaItemTimingData totalInitialLoadingTime]
  -[TVPMediaItemTimingData initialLoadingComplete]


TVPInterstitial : NSObject /usr/lib/libSystem.B.dylib
 @property  TVPTimeRange *timeRange

  // instance methods
  -[TVPInterstitial setTimeRange:]
  -[TVPInterstitial .cxx_destruct]
  -[TVPInterstitial timeRange]


TVPMutableInterstitial : TVPInterstitial
 @property  TVPTimeRange *timeRange


TVPMediaItemSkipInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long type
 @property  double start
 @property  double duration
 @property  double target
 @property  NSString *localizedTitle

  // instance methods
  -[TVPMediaItemSkipInfo target]
  -[TVPMediaItemSkipInfo .cxx_destruct]
  -[TVPMediaItemSkipInfo localizedTitle]
  -[TVPMediaItemSkipInfo type]
  -[TVPMediaItemSkipInfo duration]
  -[TVPMediaItemSkipInfo start]
  -[TVPMediaItemSkipInfo _typeDescription]
  -[TVPMediaItemSkipInfo initWithType:start:duration:target:]
  -[TVPMediaItemSkipInfo initWithType:start:duration:target:localizedTitle:]


TVPPlaybackReportingEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *name
 @property  double timestamp
 @property  id value
 @property  long long type
 @property  double duration
 @property  long long durationMS
 @property  TVPPlaybackReportingEvent *startEvent
 @property  BOOL isUIInteraction

  // instance methods
  -[TVPPlaybackReportingEvent setType:]
  -[TVPPlaybackReportingEvent .cxx_destruct]
  -[TVPPlaybackReportingEvent name]
  -[TVPPlaybackReportingEvent timestamp]
  -[TVPPlaybackReportingEvent setTimestamp:]
  -[TVPPlaybackReportingEvent type]
  -[TVPPlaybackReportingEvent setValue:]
  -[TVPPlaybackReportingEvent setDuration:]
  -[TVPPlaybackReportingEvent value]
  -[TVPPlaybackReportingEvent startEvent]
  -[TVPPlaybackReportingEvent setName:]
  -[TVPPlaybackReportingEvent setStartEvent:]
  -[TVPPlaybackReportingEvent duration]
  -[TVPPlaybackReportingEvent durationMS]
  -[TVPPlaybackReportingEvent setDurationMS:]
  -[TVPPlaybackReportingEvent isUIInteraction]
  -[TVPPlaybackReportingEvent setIsUIInteraction:]


TVPPlaybackReportingEventCollection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableArray *eventArray
 @property  NSMutableDictionary *openEvents
 @property  long long videoType
 @property  BOOL isDownloaded
 @property  BOOL complete
 @property  BOOL initialFPSRequestsComplete
 @property  NSDictionary *rtcReportingEventDict

  // class methods
  +[TVPPlaybackReportingEventCollection initialize]
  +[TVPPlaybackReportingEventCollection _totalTimeSpentDoingFPSFetchesFromEndEvents:]

  // instance methods
  -[TVPPlaybackReportingEventCollection complete]
  -[TVPPlaybackReportingEventCollection init]
  -[TVPPlaybackReportingEventCollection videoType]
  -[TVPPlaybackReportingEventCollection setVideoType:]
  -[TVPPlaybackReportingEventCollection isDownloaded]
  -[TVPPlaybackReportingEventCollection .cxx_destruct]
  -[TVPPlaybackReportingEventCollection setComplete:]
  -[TVPPlaybackReportingEventCollection addStartEventWithName:identifier:]
  -[TVPPlaybackReportingEventCollection addEndEventWithName:identifier:]
  -[TVPPlaybackReportingEventCollection addSingleShotEventWithName:value:]
  -[TVPPlaybackReportingEventCollection addStartEventWithName:]
  -[TVPPlaybackReportingEventCollection addEndEventWithName:]
  -[TVPPlaybackReportingEventCollection addOrReplaceStartEventWithName:date:]
  -[TVPPlaybackReportingEventCollection addEndEventWithName:identifier:timestamp:]
  -[TVPPlaybackReportingEventCollection addStartEventWithName:isUIInteraction:]
  -[TVPPlaybackReportingEventCollection setIsDownloaded:]
  -[TVPPlaybackReportingEventCollection _addEventWithName:type:identifier:value:timestamp:forceAdd:isUIInteraction:]
  -[TVPPlaybackReportingEventCollection eventArray]
  -[TVPPlaybackReportingEventCollection openEvents]
  -[TVPPlaybackReportingEventCollection _closeOpenEvents]
  -[TVPPlaybackReportingEventCollection _setError:inEventDict:errorCodeKey:errorDomainKey:]
  -[TVPPlaybackReportingEventCollection initialFPSRequestsComplete]
  -[TVPPlaybackReportingEventCollection containsEventWithName:]
  -[TVPPlaybackReportingEventCollection rtcReportingEventDict]
  -[TVPPlaybackReportingEventCollection setInitialFPSRequestsComplete:]
  -[TVPPlaybackReportingEventCollection setEventArray:]
  -[TVPPlaybackReportingEventCollection setOpenEvents:]


TVPTimeRange : NSObject /usr/lib/libSystem.B.dylib
 @property  double startTime
 @property  double duration
 @property  double endTime

  // class methods
  +[TVPTimeRange forwardmostCMTimeRangeInCMTimeRanges:]

  // instance methods
  -[TVPTimeRange endTime]
  -[TVPTimeRange setStartTime:]
  -[TVPTimeRange setDuration:]
  -[TVPTimeRange initWithStartTime:endTime:]
  -[TVPTimeRange startTime]
  -[TVPTimeRange duration]
  -[TVPTimeRange initWithStartTime:duration:]
  -[TVPTimeRange containsTime:]
  -[TVPTimeRange initWithCMTimeRange:]
  -[TVPTimeRange intersectTimeRange:]


TVPStateMachine : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *currentState
 @property  NSString *name
 @property  long long mode
 @property  BOOL shouldAcceptEvents
 @property  NSString *loggingComponent
 @property  NSObject<OS_os_log> *logObject
 @property  NSArray *ignorableEvents
 @property  BOOL callsStateChangeHandlerSynchronously

  // class methods
  +[TVPStateMachine initialize]
  +[TVPStateMachine registerStateMachine:]
  +[TVPStateMachine stateMachineWithName:]
  +[TVPStateMachine deregisterStateMachine:]
  +[TVPStateMachine stateMachinesOfType:]

  // instance methods
  -[TVPStateMachine setCurrentState:]
  -[TVPStateMachine mode]
  -[TVPStateMachine currentState]
  -[TVPStateMachine postEvent:]
  -[TVPStateMachine .cxx_destruct]
  -[TVPStateMachine name]
  -[TVPStateMachine _processNextEvent]
  -[TVPStateMachine initWithName:initialState:mode:]
  -[TVPStateMachine setLogObject:]
  -[TVPStateMachine setShouldAcceptEvents:]
  -[TVPStateMachine postEvent:withContext:userInfo:]
  -[TVPStateMachine executeBlockAfterCurrentStateTransition:]
  -[TVPStateMachine registerHandlerForEvent:onState:withBlock:]
  -[TVPStateMachine registerHandlerForEvent:onStates:withBlock:]
  -[TVPStateMachine initWithName:initialState:mode:stateChangeHandler:]
  -[TVPStateMachine setCallsStateChangeHandlerSynchronously:]
  -[TVPStateMachine postEvent:withContext:]
  -[TVPStateMachine registerDefaultHandlerForEvent:withBlock:]
  -[TVPStateMachine registerHandlerForEvents:onStates:withBlock:]
  -[TVPStateMachine logObject]
  -[TVPStateMachine purgeEventQueue]
  -[TVPStateMachine deregisterHandlers]
  -[TVPStateMachine shouldAcceptEvents]
  -[TVPStateMachine ignorableEvents]
  -[TVPStateMachine setLoggingComponent:]
  -[TVPStateMachine loggingComponent]
  -[TVPStateMachine registerStateTransitionFromState:onEvent:toState:]
  -[TVPStateMachine logUnhandledEvents]
  -[TVPStateMachine setIgnorableEvents:]
  -[TVPStateMachine callsStateChangeHandlerSynchronously]
  -[TVPStateMachine _executePostTransitionBlocks]
  -[TVPStateMachine _processEvent:]
  -[TVPStateMachine _dispatchEvent:]
  -[TVPStateMachine _eventHandlerForEvent:]
  -[TVPStateMachine _transitionToState:withEvent:context:userInfo:]


TVPPlaybackUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[TVPPlaybackUtilities playedThresholdTimeForDuration:]
  +[TVPPlaybackUtilities suggestedBookmarkTimeForElapsedTime:duration:]
  +[TVPPlaybackUtilities blueDotStateForDuration:elapsedTime:hasBeenPlayed:playCount:respectPlayCount:]
  +[TVPPlaybackUtilities blueDotStateForDuration:elapsedTime:hasBeenPlayed:playCount:]


TVPSecureKeyResponse : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *keyData
 @property  NSDate *renewalDate
 @property  TVPSecureKeyRequest *request

  // instance methods
  -[TVPSecureKeyResponse keyData]
  -[TVPSecureKeyResponse setKeyData:]
  -[TVPSecureKeyResponse setRequest:]
  -[TVPSecureKeyResponse .cxx_destruct]
  -[TVPSecureKeyResponse renewalDate]
  -[TVPSecureKeyResponse setRenewalDate:]
  -[TVPSecureKeyResponse request]


TVPSecureKeyStandardLoader : TVPSecureKeyLoader
 @property  NSURL *certificateDataURL
 @property  NSURL *keyDataURL
 @property  TVPSecureKeyRequest *savedRequestToUseForStopping
 @property  NSMutableArray *pendingKeyResponses
 @property  NSDate *rentalExpirationDate
 @property  NSDate *rentalPlaybackStartDate
 @property  <TVPSecureKeyStandardLoaderRequestGenerating> *requestGenerator
 @property  <TVPSecureKeyStandardLoaderConnectionHandling> *connectionHandler
 @property  BOOL holdKeyResponses
 @property  BOOL didSkipRentalCheckout
 @property  BOOL includeGUID
 @property  BOOL requiresExternalEntitlementCheck
 @property  NSString *serviceProviderID
 @property  NSNumber *rentalID

  // class methods
  +[TVPSecureKeyStandardLoader initialize]

  // instance methods
  -[TVPSecureKeyStandardLoader init]
  -[TVPSecureKeyStandardLoader .cxx_destruct]
  -[TVPSecureKeyStandardLoader setRentalID:]
  -[TVPSecureKeyStandardLoader rentalID]
  -[TVPSecureKeyStandardLoader setConnectionHandler:]
  -[TVPSecureKeyStandardLoader connectionHandler]
  -[TVPSecureKeyStandardLoader rentalExpirationDate]
  -[TVPSecureKeyStandardLoader setRentalExpirationDate:]
  -[TVPSecureKeyStandardLoader rentalPlaybackStartDate]
  -[TVPSecureKeyStandardLoader setRentalPlaybackStartDate:]
  -[TVPSecureKeyStandardLoader didSkipRentalCheckout]
  -[TVPSecureKeyStandardLoader setDidSkipRentalCheckout:]
  -[TVPSecureKeyStandardLoader startLoadingCertificateDataForRequest:]
  -[TVPSecureKeyStandardLoader startLoadingContentIdentifierDataForRequest:]
  -[TVPSecureKeyStandardLoader startLoadingKeyResponseDataForRequest:]
  -[TVPSecureKeyStandardLoader sendStopRequest]
  -[TVPSecureKeyStandardLoader pendingKeyResponses]
  -[TVPSecureKeyStandardLoader includeGUID]
  -[TVPSecureKeyStandardLoader requiresExternalEntitlementCheck]
  -[TVPSecureKeyStandardLoader serviceProviderID]
  -[TVPSecureKeyStandardLoader certificateDataURL]
  -[TVPSecureKeyStandardLoader requestGenerator]
  -[TVPSecureKeyStandardLoader _assetIdentifierForKeyRequest:]
  -[TVPSecureKeyStandardLoader savedRequestToUseForStopping]
  -[TVPSecureKeyStandardLoader setSavedRequestToUseForStopping:]
  -[TVPSecureKeyStandardLoader keyDataURL]
  -[TVPSecureKeyStandardLoader _bodyJSONDataForRequest:forceStop:]
  -[TVPSecureKeyStandardLoader holdKeyResponses]
  -[TVPSecureKeyStandardLoader initWithCertificateDataURL:keyDataURL:]
  -[TVPSecureKeyStandardLoader setHoldKeyResponses:]
  -[TVPSecureKeyStandardLoader setRequestGenerator:]
  -[TVPSecureKeyStandardLoader setIncludeGUID:]
  -[TVPSecureKeyStandardLoader setRequiresExternalEntitlementCheck:]
  -[TVPSecureKeyStandardLoader setServiceProviderID:]
  -[TVPSecureKeyStandardLoader setCertificateDataURL:]
  -[TVPSecureKeyStandardLoader setKeyDataURL:]
  -[TVPSecureKeyStandardLoader setPendingKeyResponses:]


TVPStoreFPSKeyLoader : NSObject /usr/lib/libSystem.B.dylib <TVPSecureKeyDeliveryCoordinatorDelegate, TVPSecureKeyLoaderDelegate>
 @property  TVPSecureKeyDeliveryCoordinator *secureKeyDeliveryCoordinator
 @property  TVPSecureKeyStandardLoader *secureKeyStandardLoader
 @property  NSMutableArray *pendingKeyRequests
 @property  NSError *error
 @property  TVPSecureKeyStandardLoader *fpsCertLoader
 @property  NSURL *certificateDataURL
 @property  NSURL *keyDataURL
 @property  NSObject<TVPStoreFPSKeyLoaderDelegate> *delegate
 @property  TVPPlaybackReportingEventCollection *eventCollection
 @property  BOOL holdKeyResponses
 @property  BOOL didSkipRentalCheckout
 @property  BOOL includeGUID
 @property  BOOL requiresExternalEntitlementCheck
 @property  NSString *serviceProviderID
 @property  NSNumber *rentalID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVPStoreFPSKeyLoader initialize]
  +[TVPStoreFPSKeyLoader preFetchFPSCertificate]

  // instance methods
  -[TVPStoreFPSKeyLoader setError:]
  -[TVPStoreFPSKeyLoader .cxx_destruct]
  -[TVPStoreFPSKeyLoader setRentalID:]
  -[TVPStoreFPSKeyLoader error]
  -[TVPStoreFPSKeyLoader rentalID]
  -[TVPStoreFPSKeyLoader setDelegate:]
  -[TVPStoreFPSKeyLoader delegate]
  -[TVPStoreFPSKeyLoader eventCollection]
  -[TVPStoreFPSKeyLoader didSkipRentalCheckout]
  -[TVPStoreFPSKeyLoader setEventCollection:]
  -[TVPStoreFPSKeyLoader setDidSkipRentalCheckout:]
  -[TVPStoreFPSKeyLoader sendStopRequest]
  -[TVPStoreFPSKeyLoader secureKeyLoader:didLoadKeyResponseData:renewalDate:forRequest:]
  -[TVPStoreFPSKeyLoader includeGUID]
  -[TVPStoreFPSKeyLoader requiresExternalEntitlementCheck]
  -[TVPStoreFPSKeyLoader serviceProviderID]
  -[TVPStoreFPSKeyLoader certificateDataURL]
  -[TVPStoreFPSKeyLoader secureKeyLoader:didFailWithError:forRequest:]
  -[TVPStoreFPSKeyLoader secureKeyLoader:didLoadCertificateData:forRequest:]
  -[TVPStoreFPSKeyLoader secureKeyLoader:didLoadContentIdentifierData:forRequest:]
  -[TVPStoreFPSKeyLoader keyDataURL]
  -[TVPStoreFPSKeyLoader secureKeyLoader:didReceiveUpdatedRentalExpirationDate:]
  -[TVPStoreFPSKeyLoader holdKeyResponses]
  -[TVPStoreFPSKeyLoader initWithCertificateDataURL:keyDataURL:]
  -[TVPStoreFPSKeyLoader setHoldKeyResponses:]
  -[TVPStoreFPSKeyLoader setIncludeGUID:]
  -[TVPStoreFPSKeyLoader setRequiresExternalEntitlementCheck:]
  -[TVPStoreFPSKeyLoader setServiceProviderID:]
  -[TVPStoreFPSKeyLoader setCertificateDataURL:]
  -[TVPStoreFPSKeyLoader setKeyDataURL:]
  -[TVPStoreFPSKeyLoader _preFetchFPSCertificate]
  -[TVPStoreFPSKeyLoader secureKeyDeliveryCoordinator]
  -[TVPStoreFPSKeyLoader loadSecureKeyRequest:]
  -[TVPStoreFPSKeyLoader pendingKeyRequests]
  -[TVPStoreFPSKeyLoader setPendingKeyRequests:]
  -[TVPStoreFPSKeyLoader _failPendingKeyRequestsWithError:]
  -[TVPStoreFPSKeyLoader setSecureKeyStandardLoader:]
  -[TVPStoreFPSKeyLoader setSecureKeyDeliveryCoordinator:]
  -[TVPStoreFPSKeyLoader secureKeyStandardLoader]
  -[TVPStoreFPSKeyLoader setFpsCertLoader:]
  -[TVPStoreFPSKeyLoader secureKeyDeliveryCoordinatorWillSucceed:]
  -[TVPStoreFPSKeyLoader secureKeyDeliveryCoordinator:willFailWithError:]
  -[TVPStoreFPSKeyLoader secureKeyDeliveryCoordinator:didReceiveUpdatedRentalExpirationDate:]
  -[TVPStoreFPSKeyLoader secureKeyDeliveryCoordinatorWillSucceed:forKeyRequest:]
  -[TVPStoreFPSKeyLoader secureKeyDeliveryCoordinator:willFailWithError:forKeyRequest:]
  -[TVPStoreFPSKeyLoader secureKeyDeliveryCoordinator:didReceiveOfflineKeyData:forKeyRequest:]
  -[TVPStoreFPSKeyLoader secureKeyDeliveryCoordinator:didReceiveUpdatedRentalPlaybackStartDate:]
  -[TVPStoreFPSKeyLoader secureKeyDeliveryCoordinator:didReceiveUpdatedRentalExpirationDate:playbackStartDate:]
  -[TVPStoreFPSKeyLoader fpsCertLoader]


TVPExternalImagePlayer : NSObject /usr/lib/libSystem.B.dylib
 @property  CADisplayLink *displayLink
 @property  double previousTimestamp
 @property  {?=qiIq} referenceTime
 @property  NSDate *referenceDate
 @property  NSDate *playbackDate
 @property  UIImage *currentImage
 @property  TVPExternalImageLoader *imageLoader
 @property  NSObject<TVPMediaItem> *mediaItem
 @property  NSMutableArray *imageInfosBeingLoaded
 @property  double currentImageTime
 @property  double imageInterval
 @property  double rate
 @property  {?=qiIq} elapsedTime
 @property  @? elapsedTimeUpdateBlock
 @property  @? imageUpdateBlock

  // instance methods
  -[TVPExternalImagePlayer elapsedTime]
  -[TVPExternalImagePlayer rate]
  -[TVPExternalImagePlayer setMediaItem:]
  -[TVPExternalImagePlayer .cxx_destruct]
  -[TVPExternalImagePlayer referenceDate]
  -[TVPExternalImagePlayer setRate:]
  -[TVPExternalImagePlayer setCurrentImage:]
  -[TVPExternalImagePlayer displayLink]
  -[TVPExternalImagePlayer setReferenceDate:]
  -[TVPExternalImagePlayer imageLoader]
  -[TVPExternalImagePlayer setDisplayLink:]
  -[TVPExternalImagePlayer currentImage]
  -[TVPExternalImagePlayer setElapsedTime:]
  -[TVPExternalImagePlayer mediaItem]
  -[TVPExternalImagePlayer invalidate]
  -[TVPExternalImagePlayer _cancelAllImageLoads]
  -[TVPExternalImagePlayer playbackDate]
  -[TVPExternalImagePlayer setImageLoader:]
  -[TVPExternalImagePlayer setPreviousTimestamp:]
  -[TVPExternalImagePlayer imageInfosBeingLoaded]
  -[TVPExternalImagePlayer _updateImageIntervalWithRate:]
  -[TVPExternalImagePlayer _loadImagesIfNecessary]
  -[TVPExternalImagePlayer _displayLinkTimerFired:]
  -[TVPExternalImagePlayer previousTimestamp]
  -[TVPExternalImagePlayer referenceTime]
  -[TVPExternalImagePlayer setPlaybackDate:]
  -[TVPExternalImagePlayer _timeAfterRemovingInterstitials:]
  -[TVPExternalImagePlayer _cancelStaleImageLoadsForTime:]
  -[TVPExternalImagePlayer imageInterval]
  -[TVPExternalImagePlayer currentImageTime]
  -[TVPExternalImagePlayer imageUpdateBlock]
  -[TVPExternalImagePlayer setCurrentImageTime:]
  -[TVPExternalImagePlayer elapsedTimeUpdateBlock]
  -[TVPExternalImagePlayer setImageInterval:]
  -[TVPExternalImagePlayer initWithMediaItem:referenceTime:forDate:]
  -[TVPExternalImagePlayer setElapsedTimeUpdateBlock:]
  -[TVPExternalImagePlayer setImageUpdateBlock:]
  -[TVPExternalImagePlayer setReferenceTime:]
  -[TVPExternalImagePlayer setImageInfosBeingLoaded:]


TVPVideoStillImageLoader : NSObject /usr/lib/libSystem.B.dylib <TVPPlaybackImageLoader>
 @property  NSObject<TVPMediaItem> *mediaItem
 @property  TVPMediaItemLoader *mediaItemLoader
 @property  TVPStateMachine *stateMachine
 @property  NSMutableArray *pendingImageLoadInfos
 @property  NSMutableArray *imageLoadInfosBeingLoaded
 @property  AVAssetImageGenerator *imageGenerator
 @property  {?=qiIq} videoDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVPVideoStillImageLoader initialize]

  // instance methods
  -[TVPVideoStillImageLoader videoDuration]
  -[TVPVideoStillImageLoader setStateMachine:]
  -[TVPVideoStillImageLoader stateMachine]
  -[TVPVideoStillImageLoader initWithMediaItem:]
  -[TVPVideoStillImageLoader setMediaItem:]
  -[TVPVideoStillImageLoader .cxx_destruct]
  -[TVPVideoStillImageLoader setImageGenerator:]
  -[TVPVideoStillImageLoader observeValueForKeyPath:ofObject:change:context:]
  -[TVPVideoStillImageLoader imageGenerator]
  -[TVPVideoStillImageLoader mediaItem]
  -[TVPVideoStillImageLoader invalidate]
  -[TVPVideoStillImageLoader setVideoDuration:]
  -[TVPVideoStillImageLoader _registerStateMachineHandlers]
  -[TVPVideoStillImageLoader loadImagesForTimes:maxSize:withHandler:]
  -[TVPVideoStillImageLoader cancelImageLoadingForIdentifiers:]
  -[TVPVideoStillImageLoader _mediaItemLoader:stateDidChangeTo:]
  -[TVPVideoStillImageLoader pendingImageLoadInfos]
  -[TVPVideoStillImageLoader imageLoadInfosBeingLoaded]
  -[TVPVideoStillImageLoader mediaItemLoader]
  -[TVPVideoStillImageLoader setMediaItemLoader:]
  -[TVPVideoStillImageLoader closestImageTimeForTime:]
  -[TVPVideoStillImageLoader setPendingImageLoadInfos:]
  -[TVPVideoStillImageLoader setImageLoadInfosBeingLoaded:]


TVPURLMediaItem : TVPBaseMediaItem
 @property  NSURL *url
 @property  NSSet *traits

  // instance methods
  -[TVPURLMediaItem traits]
  -[TVPURLMediaItem init]
  -[TVPURLMediaItem url]
  -[TVPURLMediaItem setTraits:]
  -[TVPURLMediaItem .cxx_destruct]
  -[TVPURLMediaItem setUrl:]
  -[TVPURLMediaItem mediaItemURL]
  -[TVPURLMediaItem hasTrait:]
  -[TVPURLMediaItem isEqualToMediaItem:]
  -[TVPURLMediaItem initWithURL:traits:]


TVPDownload : NSObject /usr/lib/libSystem.B.dylib <AVAssetDownloadDelegate>
 @property  NSObject<TVPMediaItem> *mediaItem
 @property  long long state
 @property  NSError *error
 @property  TVPStateMachine *stateMachine
 @property  TVPMediaItemLoader *mediaItemLoader
 @property  TVPDownloadSession *downloadSession
 @property  AVAggregateAssetDownloadTask *downloadTask
 @property  BOOL downloadIsComplete
 @property  NSPointerArray *delegates
 @property  NSProgress *downloadProgress
 @property  NSMapTable *mediaSelectionToProgressMap
 @property  unsigned long downloadInitiationBackgroundTask
 @property  unsigned long downloadTerminationBackgroundTask
 @property  TVPReportingSession *reportingSession
 @property  unsigned long numAudioSelectionsToBeDownloaded
 @property  unsigned long numSubtitleSelectionsToBeDownloaded
 @property  unsigned long numMediaSelectionsCompleted
 @property  double progress
 @property  BOOL performKeyFetchOnly
 @property  BOOL allowCellularUsage
 @property  BOOL preferMostCompatibleRendition
 @property  {CGSize=dd} minimumRequiredPresentationSize
 @property  NSNumber *minimumRequiredMediaBitrateForMostCompatibleFormat
 @property  NSNumber *minimumRequiredMediaBitrateForHEVC
 @property  BOOL allowHDR
 @property  BOOL allowMultichannelAudio
 @property  BOOL limitMultichannelAudioToSingleLanguage
 @property  BOOL includeDefaultAudioOption
 @property  BOOL includeOriginalAudio
 @property  BOOL includeDeviceLanguageAudio
 @property  NSArray *preferredAudioLanguageCodes
 @property  BOOL includesAllSubtitles
 @property  NSArray *preferredSubtitleLanguageCodes
 @property  NSData *storageSettingsImageData
 @property  NSDictionary *userInfo
 @property  NSNumber *minimumRequiredMediaBitrate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVPDownload initialize]

  // instance methods
  -[TVPDownload delegates]
  -[TVPDownload removeDelegate:]
  -[TVPDownload addDelegate:]
  -[TVPDownload setDelegates:]
  -[TVPDownload URLSession:aggregateAssetDownloadTask:didCompleteForMediaSelection:]
  -[TVPDownload URLSession:aggregateAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:]
  -[TVPDownload setStateMachine:]
  -[TVPDownload URLSession:aggregateAssetDownloadTask:willDownloadToURL:]
  -[TVPDownload pause]
  -[TVPDownload stateMachine]
  -[TVPDownload setDownloadProgress:]
  -[TVPDownload setUserInfo:]
  -[TVPDownload setMediaItem:]
  -[TVPDownload setError:]
  -[TVPDownload setState:]
  -[TVPDownload .cxx_destruct]
  -[TVPDownload reportingSession]
  -[TVPDownload URLSession:task:didCompleteWithError:]
  -[TVPDownload failWithError:]
  -[TVPDownload cancel]
  -[TVPDownload error]
  -[TVPDownload userInfo]
  -[TVPDownload downloadProgress]
  -[TVPDownload observeValueForKeyPath:ofObject:change:context:]
  -[TVPDownload setDownloadTask:]
  -[TVPDownload downloadTask]
  -[TVPDownload descriptionForState:]
  -[TVPDownload progress]
  -[TVPDownload state]
  -[TVPDownload mediaItem]
  -[TVPDownload start]
  -[TVPDownload _registerStateMachineHandlers]
  -[TVPDownload performKeyFetchOnly]
  -[TVPDownload setPerformKeyFetchOnly:]
  -[TVPDownload setMinimumRequiredMediaBitrateForMostCompatibleFormat:]
  -[TVPDownload setMinimumRequiredPresentationSize:]
  -[TVPDownload setMinimumRequiredMediaBitrateForHEVC:]
  -[TVPDownload setStorageSettingsImageData:]
  -[TVPDownload setAllowCellularUsage:]
  -[TVPDownload setIncludeDefaultAudioOption:]
  -[TVPDownload setIncludeOriginalAudio:]
  -[TVPDownload setIncludeDeviceLanguageAudio:]
  -[TVPDownload setPreferredAudioLanguageCodes:]
  -[TVPDownload setAllowHDR:]
  -[TVPDownload setAllowMultichannelAudio:]
  -[TVPDownload setLimitMultichannelAudioToSingleLanguage:]
  -[TVPDownload setIncludesAllSubtitles:]
  -[TVPDownload setPreferredSubtitleLanguageCodes:]
  -[TVPDownload setPreferMostCompatibleRendition:]
  -[TVPDownload downloadSession]
  -[TVPDownload mediaItemLoader]
  -[TVPDownload setMediaItemLoader:]
  -[TVPDownload _mediaItemLoaderStateDidChangeTo:]
  -[TVPDownload mediaSelectionToProgressMap]
  -[TVPDownload numMediaSelectionsCompleted]
  -[TVPDownload _newProgressForMediaSelection:]
  -[TVPDownload setNumMediaSelectionsCompleted:]
  -[TVPDownload downloadTerminationBackgroundTask]
  -[TVPDownload setDownloadTerminationBackgroundTask:]
  -[TVPDownload numAudioSelectionsToBeDownloaded]
  -[TVPDownload numSubtitleSelectionsToBeDownloaded]
  -[TVPDownload setDownloadIsComplete:]
  -[TVPDownload setNumAudioSelectionsToBeDownloaded:]
  -[TVPDownload setNumSubtitleSelectionsToBeDownloaded:]
  -[TVPDownload downloadInitiationBackgroundTask]
  -[TVPDownload setDownloadInitiationBackgroundTask:]
  -[TVPDownload setReportingSession:]
  -[TVPDownload allowCellularUsage]
  -[TVPDownload includeDefaultAudioOption]
  -[TVPDownload includeOriginalAudio]
  -[TVPDownload _addMediaSelectionOptionsIfNotAlreadyAdded:toMediaSelections:forMediaSelectionGroup:baseMediaSelection:]
  -[TVPDownload preferredAudioLanguageCodes]
  -[TVPDownload includeDeviceLanguageAudio]
  -[TVPDownload includesAllSubtitles]
  -[TVPDownload preferredSubtitleLanguageCodes]
  -[TVPDownload allowMultichannelAudio]
  -[TVPDownload limitMultichannelAudioToSingleLanguage]
  -[TVPDownload minimumRequiredPresentationSize]
  -[TVPDownload minimumRequiredMediaBitrateForMostCompatibleFormat]
  -[TVPDownload minimumRequiredMediaBitrateForHEVC]
  -[TVPDownload preferMostCompatibleRendition]
  -[TVPDownload allowHDR]
  -[TVPDownload storageSettingsImageData]
  -[TVPDownload downloadIsComplete]
  -[TVPDownload initWithMediaItem:downloadSession:existingDownloadTask:]
  -[TVPDownload minimumRequiredMediaBitrate]
  -[TVPDownload setMinimumRequiredMediaBitrate:]
  -[TVPDownload setDownloadSession:]
  -[TVPDownload setMediaSelectionToProgressMap:]


TVPPlayerItem : AVPlayerItem /System/Library/Frameworks/Accounts.framework/Accounts
 @property  BOOL audioSelectionIsAutomatic
 @property  AVMediaSelectionOption *savedManualAudioSelection
 @property  TVPMediaItemLoader *mediaItemLoader
 @property  BOOL muted
 @property  long long previousStatus
 @property  TVImageProxy *posterProxy
 @property  id scrubImageLoader

  // instance methods
  -[TVPPlayerItem muted]
  -[TVPPlayerItem setMuted:]
  -[TVPPlayerItem dealloc]
  -[TVPPlayerItem .cxx_destruct]
  -[TVPPlayerItem initWithAsset:]
  -[TVPPlayerItem selectMediaOptionAutomaticallyInMediaSelectionGroup:]
  -[TVPPlayerItem selectMediaOption:inMediaSelectionGroup:]
  -[TVPPlayerItem previousStatus]
  -[TVPPlayerItem mediaItemLoader]
  -[TVPPlayerItem setMediaItemLoader:]
  -[TVPPlayerItem setAudioSelectionIsAutomatic:]
  -[TVPPlayerItem setSavedManualAudioSelection:]
  -[TVPPlayerItem audioSelectionIsAutomatic]
  -[TVPPlayerItem savedManualAudioSelection]
  -[TVPPlayerItem setPreviousStatus:]
  -[TVPPlayerItem posterProxy]
  -[TVPPlayerItem setPosterProxy:]
  -[TVPPlayerItem scrubImageLoader]
  -[TVPPlayerItem setScrubImageLoader:]


TVPAVTimedMetadataGroupChapter : TVPMutableChapter
 @property  AVMetadataItem *imageMetadataItem

  // instance methods
  -[TVPAVTimedMetadataGroupChapter .cxx_destruct]
  -[TVPAVTimedMetadataGroupChapter setImageMetadataItem:]
  -[TVPAVTimedMetadataGroupChapter _loadChapterNameFromMetadataItem:]
  -[TVPAVTimedMetadataGroupChapter initWithAVTimedMetadataGroup:filterByLanguages:]
  -[TVPAVTimedMetadataGroupChapter imageMetadataItem]


TVPPlayerLayerView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  AVPlayerLayer *avPlayerLayer

  // class methods
  +[TVPPlayerLayerView layerClass]

  // instance methods
  -[TVPPlayerLayerView avPlayerLayer]


TVPVideoView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  TVPPlayerLayerView *playerLayerView
 @property  BOOL readyForDisplay
 @property  UIImageView *stillImageView
 @property  NSObject<TVPAVFPlayback> *player
 @property  UILabel *debugLabel
 @property  BOOL isPrimarySubtitleDisplayer
 @property  long long videoGravity

  // class methods
  +[TVPVideoView initialize]
  +[TVPVideoView preservedVideoViewsForPlayer:identifier:]
  +[TVPVideoView _playerStateDidChange:]
  +[TVPVideoView _purgePreservedVideoViewsForPlayer:]
  +[TVPVideoView preserveVideoViewForReuse:identifier:]

  // instance methods
  -[TVPVideoView videoGravity]
  -[TVPVideoView playerLayerView]
  -[TVPVideoView debugLabel]
  -[TVPVideoView setPlayer:]
  -[TVPVideoView initWithFrame:]
  -[TVPVideoView setVideoGravity:]
  -[TVPVideoView setAVPlayer:]
  -[TVPVideoView dealloc]
  -[TVPVideoView .cxx_destruct]
  -[TVPVideoView player]
  -[TVPVideoView isReadyForDisplay]
  -[TVPVideoView observeValueForKeyPath:ofObject:change:context:]
  -[TVPVideoView setPlayerLayerView:]
  -[TVPVideoView setReadyForDisplay:]
  -[TVPVideoView AVPlayer]
  -[TVPVideoView stillImageView]
  -[TVPVideoView setStillImageView:]
  -[TVPVideoView _playerStillImageDidChange:]
  -[TVPVideoView setIsPrimarySubtitleDisplayer:]
  -[TVPVideoView isPrimarySubtitleDisplayer]


TVPBackgroundQueuePlayer : AVQueuePlayer /System/Library/Frameworks/Accounts.framework/Accounts

TVPBoundaryTimeObserverInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *times
 @property  @? handler
 @property  id tokenFromAVPlayer

  // instance methods
  -[TVPBoundaryTimeObserverInfo times]
  -[TVPBoundaryTimeObserverInfo .cxx_destruct]
  -[TVPBoundaryTimeObserverInfo handler]
  -[TVPBoundaryTimeObserverInfo setHandler:]
  -[TVPBoundaryTimeObserverInfo setTimes:]
  -[TVPBoundaryTimeObserverInfo tokenFromAVPlayer]
  -[TVPBoundaryTimeObserverInfo setTokenFromAVPlayer:]


TVPPlayer : NSObject /usr/lib/libSystem.B.dylib <TVPAVFPlayback>
 @property  BOOL invalidated
 @property  TVPStateMachine *stateMachine
 @property  TVPPlaylist *playlistInternal
 @property  TVPPlaybackState *postLoadingState
 @property  TVPPlaybackState *postAVKitScanningState
 @property  TVPMediaItemLoader *currentMediaItemLoader
 @property  NSMutableDictionary *elapsedTimeObserverBlocks
 @property  NSMutableDictionary *boundaryTimeObserverInfos
 @property  id periodicTimeObserverToken
 @property  id highFrequencyTimeObserverToken
 @property  {?=qiIq} startTime
 @property  {?=qiIq} startingSeekPrecision
 @property  NSDate *startDate
 @property  TVPPlayerBookmarkMonitor *bookmarkMonitor
 @property  TVPPlayerReporter *playerReporter
 @property  long long numOutstandingSeeks
 @property  NSHashTable *videoViewWeakReferences
 @property  NSMutableSet *mediaItemLoaders
 @property  BOOL handleRemoteCommandsWithoutUpdatingMediaRemote
 @property  BOOL pausesOnRouteChange
 @property  BOOL updatesBookmarks
 @property  BOOL sendsPlayerReports
 @property  {?=qiIq} lastTimeSentToAVKitImageHandler
 @property  BOOL pausesOnHDCPProtectionDown
 @property  double preferredForwardBufferDuration
 @property  {CGSize=dd} preferredMaximumResolution
 @property  BOOL prefersSDRVideo
 @property  BOOL limitsBandwidthForCellularAccess
 @property  BOOL allowsCellularUsage
 @property  BOOL allowsConstrainedNetworkUsage
 @property  long long currentMediaItemVideoRange
 @property  long long currentMediaItemAudioFormat
 @property  long long currentMediaItemAudioChannels
 @property  NSArray *pendingSelectedMediaArray
 @property  int screenRecordingNotifyToken
 @property  BOOL screenIsBeingRecorded
 @property  BOOL loadingInitialItemInPlaylist
 @property  TVPPlayerItem *currentPlayerItem
 @property  BOOL currentPlayerItemContainsDates
 @property  BOOL currentPlayerItemContainsRealDates
 @property  BOOL modifyingAVPlayerRate
 @property  BOOL modifyingAVPlayerQueue
 @property  BOOL playerItemChangeIsHappening
 @property  {?=qiIq} timeBeingSeekedTo
 @property  NSDate *dateBeingSeekedTo
 @property  NSDate *playbackDateAtStartOfSeek
 @property  {?=qiIq} timeAtStartOfSeek
 @property  long long currentDirectionOfPlaylistChange
 @property  id chapterBoundaryTimeObserverToken
 @property  TVPExternalImagePlayer *externalImagePlayer
 @property  TVPInterstitialCollection *currentInterstitialCollection
 @property  id interstitialBoundaryTimeObserverToken
 @property  {?=qiIq} cachedElapsedTime
 @property  TVPProgressiveJumpingScrubber *progressiveJumpingScrubber
 @property  NSTimer *HDCPUnprotectedTooLongTimer
 @property  NSTimer *HDCPStatusPollTimer
 @property  NSString *mediaItemChangeReason
 @property  BOOL sceneCompletelyBuffered
 @property  NSMutableArray *asyncDelegateOperations
 @property  NSNumber *temporarySubtitleOverrideType
 @property  NSArray *playbackEndTimeBoundaryObserverTokens
 @property  TVPAudioOption *cachedSelectedAudioOption
 @property  AVQueuePlayer *earlyAVQueuePlayer
 @property  float cachedAVPlayerRate
 @property  {?=qiIq} cachedDuration
 @property  NSArray *cachedLoadedTimeRanges
 @property  NSArray *cachedSeekableTimeRanges
 @property  BOOL currentMediaItemInitialLoadingComplete
 @property  BOOL currentMediaItemHasVideoContent
 @property  BOOL currentMediaItemIsStreaming
 @property  {CGSize=dd} currentMediaItemPresentationSize
 @property  BOOL currentMediaItemHasDates
 @property  AVQueuePlayer *AVQueuePlayer
 @property  TVPPlayerItem *playerItemFromCacheManager
 @property  BOOL outputObscuredDueToInsufficientExternalProtection
 @property  double startPosition
 @property  NSArray *chapterCollections
 @property  TVPChapter *currentChapter
 @property  TVPInterstitial *currentInterstitial
 @property  NSArray *audioOptions
 @property  NSArray *subtitleOptions
 @property  {CGSize=dd} iFramePrefetchMaxSize
 @property  BOOL asyncDelegateInProgress
 @property  BOOL usesLegacyDelegateBehavior
 @property  BOOL isLive
 @property  @? highFrequencyElapsedTimeObserverBlock
 @property  BOOL createsPlayerItemButDoesNotEnqueue
 @property  AVPlayerItem *unqueuedPlayerItem
 @property  @? AVKitExternalImageScanningUpdateBlock
 @property  BOOL mediaRemoteUpdatingEnabled
 @property  BOOL remainLoadingWhenSeekCompletes
 @property  BOOL initialMediaItemHasCompletedInitialLoading
 @property  AVPlayer *avPlayer
 @property  NSString *name
 @property  <TVPPlaybackDelegate> *delegate
 @property  <TVPASyncPlaybackDelegate> *asyncDelegate
 @property  TVPPlaylist *playlist
 @property  NSObject<TVPMediaItem> *currentMediaItem
 @property  BOOL currentMediaItemPreparedForLoading
 @property  TVPPlaybackState *state
 @property  long long errorBehavior
 @property  BOOL interactive
 @property  double rate
 @property  double rateUsedForPlayback
 @property  BOOL waitsAfterPreparingMediaItems
 @property  double elapsedTime
 @property  NSDate *playbackDate
 @property  double duration
 @property  BOOL muted
 @property  float volume
 @property  TVPChapterCollection *currentChapterCollection
 @property  TVPTimeRange *bufferedTimeRange
 @property  TVPTimeRange *seekableTimeRange
 @property  TVPDateRange *seekableDateRange
 @property  double forwardPlaybackEndTime
 @property  double reversePlaybackEndTime
 @property  long long mediaItemEndAction
 @property  TVPAudioOption *selectedAudioOption
 @property  TVPSubtitleOption *selectedSubtitleOption
 @property  double maximumBitRate
 @property  BOOL preventsSleepDuringVideoPlayback
 @property  BOOL updatesMediaRemoteInfoAutomatically
 @property  BOOL limitReadAhead
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVPPlayer initialize]
  +[TVPPlayer automaticallyNotifiesObserversForKey:]
  +[TVPPlayer savedPreferredAudioLanguageCode]
  +[TVPPlayer setSavedPreferredAudioLanguageCode:]
  +[TVPPlayer tvpVideoRangeForVideoDynamicRange:]
  +[TVPPlayer removeTemporaryDownloadDirectory]
  +[TVPPlayer _newAVQueuePlayer]
  +[TVPPlayer _audioSelectionCriteriaForMediaItemLoader:]
  +[TVPPlayer _audioFormatForAudioCodecType:]
  +[TVPPlayer _stringForAudioFormat:]
  +[TVPPlayer _playerDidBecomeInactive:]
  +[TVPPlayer _playerWillBecomeActive:]
  +[TVPPlayer shouldDeactivateAVAudioSession]
  +[TVPPlayer setShouldDeactivateAVAudioSession:]

  // instance methods
  -[TVPPlayer elapsedTime]
  -[TVPPlayer rate]
  -[TVPPlayer muted]
  -[TVPPlayer setStartTime:]
  -[TVPPlayer initWithName:]
  -[TVPPlayer setStateMachine:]
  -[TVPPlayer play]
  -[TVPPlayer setPlaylist:]
  -[TVPPlayer setMuted:]
  -[TVPPlayer setInteractive:]
  -[TVPPlayer pause]
  -[TVPPlayer setPreferredMaximumResolution:]
  -[TVPPlayer stateMachine]
  -[TVPPlayer volume]
  -[TVPPlayer init]
  -[TVPPlayer setVolume:]
  -[TVPPlayer setLimitReadAhead:]
  -[TVPPlayer preferredForwardBufferDuration]
  -[TVPPlayer setPreferredForwardBufferDuration:]
  -[TVPPlayer startDate]
  -[TVPPlayer maximumBitRate]
  -[TVPPlayer setMaximumBitRate:]
  -[TVPPlayer dealloc]
  -[TVPPlayer .cxx_destruct]
  -[TVPPlayer name]
  -[TVPPlayer setCurrentMediaItem:]
  -[TVPPlayer currentMediaItem]
  -[TVPPlayer invalidated]
  -[TVPPlayer setPreventsSleepDuringVideoPlayback:]
  -[TVPPlayer stop]
  -[TVPPlayer accessLog]
  -[TVPPlayer errorLog]
  -[TVPPlayer seeking]
  -[TVPPlayer timedMetadata]
  -[TVPPlayer _audioRouteChanged:]
  -[TVPPlayer setStartPosition:]
  -[TVPPlayer avPlayer]
  -[TVPPlayer playlist]
  -[TVPPlayer forwardPlaybackEndTime]
  -[TVPPlayer outputObscuredDueToInsufficientExternalProtection]
  -[TVPPlayer observeValueForKeyPath:ofObject:change:context:]
  -[TVPPlayer currentPlayerItem]
  -[TVPPlayer setCurrentPlayerItem:]
  -[TVPPlayer preventsSleepDuringVideoPlayback]
  -[TVPPlayer setElapsedTime:]
  -[TVPPlayer setInvalidated:]
  -[TVPPlayer externalPlaybackType]
  -[TVPPlayer limitsBandwidthForCellularAccess]
  -[TVPPlayer setDelegate:]
  -[TVPPlayer state]
  -[TVPPlayer invalidate]
  -[TVPPlayer audioOptions]
  -[TVPPlayer reversePlaybackEndTime]
  -[TVPPlayer delegate]
  -[TVPPlayer setStartDate:]
  -[TVPPlayer preferredMaximumResolution]
  -[TVPPlayer togglePlayPause]
  -[TVPPlayer _updateScreenRecordingState]
  -[TVPPlayer startTime]
  -[TVPPlayer duration]
  -[TVPPlayer isLive]
  -[TVPPlayer startPosition]
  -[TVPPlayer limitReadAhead]
  -[TVPPlayer interactive]
  -[TVPPlayer setAllowsCellularUsage:]
  -[TVPPlayer _registerStateMachineHandlers]
  -[TVPPlayer initialMediaItemHasCompletedInitialLoading]
  -[TVPPlayer setElapsedTime:precise:]
  -[TVPPlayer restartPlaybackWithState:]
  -[TVPPlayer allowsCellularUsage]
  -[TVPPlayer setMediaItemEndAction:]
  -[TVPPlayer setErrorBehavior:]
  -[TVPPlayer changeMediaInDirection:]
  -[TVPPlayer addElapsedTimeObserver:]
  -[TVPPlayer removeElapsedTimeObserverWithToken:]
  -[TVPPlayer boundaryTimeObserverInfos]
  -[TVPPlayer setBoundaryTimeObserverInfos:]
  -[TVPPlayer selectedAudioOption]
  -[TVPPlayer selectedSubtitleOption]
  -[TVPPlayer currentMediaItemVideoRange]
  -[TVPPlayer currentMediaItemAudioFormat]
  -[TVPPlayer playbackDate]
  -[TVPPlayer rateUsedForPlayback]
  -[TVPPlayer setIsLive:]
  -[TVPPlayer currentMediaItemPresentationSize]
  -[TVPPlayer setUpdatesMediaRemoteInfoAutomatically:]
  -[TVPPlayer setSendsPlayerReports:]
  -[TVPPlayer setUpdatesBookmarks:]
  -[TVPPlayer setCreatesPlayerItemButDoesNotEnqueue:]
  -[TVPPlayer setIFramePrefetchMaxSize:]
  -[TVPPlayer unqueuedPlayerItem]
  -[TVPPlayer setAllowsConstrainedNetworkUsage:]
  -[TVPPlayer currentChapter]
  -[TVPPlayer scanWithRate:]
  -[TVPPlayer setCachedDuration:]
  -[TVPPlayer cachedDuration]
  -[TVPPlayer playerDidHitBeginningOrEnd]
  -[TVPPlayer setPlaybackDate:]
  -[TVPPlayer _mediaItemLoader:stateDidChangeTo:]
  -[TVPPlayer removeWeakReferenceToVideoView:]
  -[TVPPlayer addWeakReferenceToVideoView:]
  -[TVPPlayer _preferVideoDescriptionsSettingDidChange]
  -[TVPPlayer _subtitleSettingsDidChange]
  -[TVPPlayer _playlistEndActionDidChange]
  -[TVPPlayer _playlistCurrentMediaItemWillChangeWithContext:]
  -[TVPPlayer _playlistCurrentMediaItemDidChangeWithContext:]
  -[TVPPlayer _playlistNextMediaItemDidChangeWithContext:]
  -[TVPPlayer _currentPlayerItemStatusDidChangeTo:from:]
  -[TVPPlayer _currentPlayerItemDurationDidChangeTo:]
  -[TVPPlayer _currentPlayerItemHasVideoDidChangeTo:]
  -[TVPPlayer _currentPlayerItemPresentationSizeDidChangeTo:]
  -[TVPPlayer _currentPlayerItemLikelyToKeepUpDidChangeTo:]
  -[TVPPlayer _currentPlayerItemBufferFullDidChangeTo:]
  -[TVPPlayer _currentPlayerItemBufferEmptyDidChangeTo:]
  -[TVPPlayer _currentPlayerItemWillChange]
  -[TVPPlayer _currentPlayerItemDidChangeTo:]
  -[TVPPlayer _avPlayerRateDidChangeTo:]
  -[TVPPlayer AVQueuePlayer]
  -[TVPPlayer _timeControlStatusDidChangeTo:]
  -[TVPPlayer _outputObscuredDidChangeTo:dueToKVONotification:]
  -[TVPPlayer _externalPlaybackActiveDidChange]
  -[TVPPlayer _currentPlayerItemLoadedTimeRangesDidChangeTo:]
  -[TVPPlayer _currentPlayerItemSeekableTimeRangesDidChangeTo:]
  -[TVPPlayer _currentPlayerItemTimedMetadataDidChange]
  -[TVPPlayer _currentPlayerItemTracksDidChangeTo:from:]
  -[TVPPlayer playlistInternal]
  -[TVPPlayer currentMediaItemLoader]
  -[TVPPlayer changeMediaInDirection:reason:ignoreDelegate:]
  -[TVPPlayer asyncDelegate]
  -[TVPPlayer asyncDelegateOperations]
  -[TVPPlayer _processNextAsyncDelegateOperation]
  -[TVPPlayer _enqueueAsyncDelegateOperation:]
  -[TVPPlayer changeToMediaAtIndex:reason:ignoreDelegate:]
  -[TVPPlayer externalImagePlayer]
  -[TVPPlayer progressiveJumpingScrubber]
  -[TVPPlayer scanWithRate:withAVKitCompletion:]
  -[TVPPlayer setPostAVKitScanningState:]
  -[TVPPlayer setElapsedTime:seekPrecision:ignoreDelegate:withAVKitCompletion:]
  -[TVPPlayer setPlaybackDate:withAVKitCompletion:]
  -[TVPPlayer cachedSeekableTimeRanges]
  -[TVPPlayer _currentMediaItemReversePlaybackEndTime]
  -[TVPPlayer elapsedCMTime]
  -[TVPPlayer _statesThatReturnStartTime]
  -[TVPPlayer _clampInfiniteTimeToSeekableRange:]
  -[TVPPlayer _statesThatReturnAVPlayerTime]
  -[TVPPlayer _clampedElapsedTimeForTime:duration:]
  -[TVPPlayer _statesThatReturnSeekTime]
  -[TVPPlayer timeBeingSeekedTo]
  -[TVPPlayer _clampedSceneTimeForPlayerTime:]
  -[TVPPlayer _currentDateFromPlayerItem:]
  -[TVPPlayer dateBeingSeekedTo]
  -[TVPPlayer postAVKitScanningState]
  -[TVPPlayer pauseWithAVKitCompletion:]
  -[TVPPlayer playWithAVKitCompletion:]
  -[TVPPlayer elapsedTimeObserverBlocks]
  -[TVPPlayer _addBoundaryTimeObserversToAVQueuePlayer:]
  -[TVPPlayer durationCMTime]
  -[TVPPlayer _currentMediaItemForwardPlaybackEndTime]
  -[TVPPlayer chapterCollections]
  -[TVPPlayer chapterBoundaryTimeObserverToken]
  -[TVPPlayer removeBoundaryTimeObserverWithToken:]
  -[TVPPlayer setChapterBoundaryTimeObserverToken:]
  -[TVPPlayer setCurrentChapter:]
  -[TVPPlayer addBoundaryTimeObserverForTimes:withHandler:]
  -[TVPPlayer currentChapterCollection]
  -[TVPPlayer interstitialBoundaryTimeObserverToken]
  -[TVPPlayer setInterstitialBoundaryTimeObserverToken:]
  -[TVPPlayer setCurrentInterstitial:]
  -[TVPPlayer _savePreferredAudioLanguageFromAudioOption:]
  -[TVPPlayer _updateSelectedSubtitleForFilteredOptions:]
  -[TVPPlayer _setSelectedSubtitleOption:userOverridesSystemSubtitleSettings:]
  -[TVPPlayer temporarySubtitleOverrideType]
  -[TVPPlayer subtitleOptions]
  -[TVPPlayer updateSubtitleOptions]
  -[TVPPlayer cachedLoadedTimeRanges]
  -[TVPPlayer currentPlayerItemContainsDates]
  -[TVPPlayer _estimatedPlaybackDateForCMTime:]
  -[TVPPlayer _updateAVPlayerActionAtItemEnd]
  -[TVPPlayer currentMediaItemIsStreaming]
  -[TVPPlayer numOutstandingSeeks]
  -[TVPPlayer _addHighFrequencyTimeObserverIfNecessary]
  -[TVPPlayer _removeHighFrequencyTimeObserverIfNecessary]
  -[TVPPlayer setBookmarkMonitor:]
  -[TVPPlayer setPlayerReporter:]
  -[TVPPlayer _selectMediaArray:withItem:]
  -[TVPPlayer earlyAVQueuePlayer]
  -[TVPPlayer setEarlyAVQueuePlayer:]
  -[TVPPlayer _removeObserversFromAVQueuePlayer:]
  -[TVPPlayer _removePeriodicTimeObserverFromAVQueuePlayer:]
  -[TVPPlayer _removeBoundaryTimeObserversFromAVQueuePlayer:]
  -[TVPPlayer _removePlaybackEndTimeBoundaryObservers]
  -[TVPPlayer _updateVideoViewsWithAVQueuePlayer:]
  -[TVPPlayer _addObserversToAVQueuePlayer:]
  -[TVPPlayer _addPeriodicTimeObserverToAVQueuePlayer:]
  -[TVPPlayer screenIsBeingRecorded]
  -[TVPPlayer _removeObserversForPlayerItem:]
  -[TVPPlayer _addObserversForPlayerItem:]
  -[TVPPlayer _removeObserversForPlaylist:]
  -[TVPPlayer _addObserversForPlaylist:]
  -[TVPPlayer setLoadingInitialItemInPlaylist:]
  -[TVPPlayer setInitialMediaItemHasCompletedInitialLoading:]
  -[TVPPlayer setCurrentDirectionOfPlaylistChange:]
  -[TVPPlayer mediaItemLoaders]
  -[TVPPlayer _updateMediaRemoteManager]
  -[TVPPlayer _resetAndReselectAudioOptions]
  -[TVPPlayer updateSubtitleOptionsAndSelection]
  -[TVPPlayer periodicTimeObserverToken]
  -[TVPPlayer _avPlayerTimeDidChangeTo:]
  -[TVPPlayer setPeriodicTimeObserverToken:]
  -[TVPPlayer highFrequencyElapsedTimeObserverBlock]
  -[TVPPlayer highFrequencyTimeObserverToken]
  -[TVPPlayer setHighFrequencyTimeObserverToken:]
  -[TVPPlayer _currentPlayerItemDidHitBeginningOrEnd:]
  -[TVPPlayer _currentPlayerItemAccessLogDidChange:]
  -[TVPPlayer _currentPlayerItemErrorLogDidChange:]
  -[TVPPlayer _currentPlayerItemDidStall:]
  -[TVPPlayer _currentPlayerItemDidFailToPlayToEnd:]
  -[TVPPlayer _currentPlayerItemMediaSelectionDidChange:]
  -[TVPPlayer setPlaybackEndTimeBoundaryObserverTokens:]
  -[TVPPlayer playbackEndTimeBoundaryObserverTokens]
  -[TVPPlayer _currentMediaItemMetadataDidChange:]
  -[TVPPlayer tvp_PlaybackErrorFromError:forMediaItem:]
  -[TVPPlayer _removeObserversForMediaItemLoader:]
  -[TVPPlayer _removeObserversForMediaItem:]
  -[TVPPlayer _postCurrentMediaItemWillChangeNotificationWithDirection:reason:didHitBeginningOfPlaylist:didHitEndOfPlaylist:]
  -[TVPPlayer setCurrentMediaItemIsStreaming:]
  -[TVPPlayer setCurrentMediaItemInitialLoadingComplete:]
  -[TVPPlayer _addObserversForMediaItem:]
  -[TVPPlayer _postCurrentMediaItemDidChangeNotificationWithDirection:reason:didHitBeginningOfPlaylist:didHitEndOfPlaylist:]
  -[TVPPlayer cachedAVPlayerRate]
  -[TVPPlayer modifyingAVPlayerRate]
  -[TVPPlayer setCachedAVPlayerRate:]
  -[TVPPlayer setOutputObscuredDueToInsufficientExternalProtection:]
  -[TVPPlayer _logExternalPlaybackType]
  -[TVPPlayer cachedElapsedTime]
  -[TVPPlayer currentInterstitialCollection]
  -[TVPPlayer _notifyListenersOfElapsedTimeChange:playbackDate:dueToTimeJump:]
  -[TVPPlayer setCachedElapsedTime:]
  -[TVPPlayer setPlayerItemChangeIsHappening:]
  -[TVPPlayer modifyingAVPlayerQueue]
  -[TVPPlayer mediaItemChangeReason]
  -[TVPPlayer setCurrentPlayerItemContainsDates:]
  -[TVPPlayer setCurrentPlayerItemContainsRealDates:]
  -[TVPPlayer setCurrentMediaItemHasDates:]
  -[TVPPlayer setChapterCollections:]
  -[TVPPlayer setCurrentChapterCollection:]
  -[TVPPlayer setCurrentInterstitialCollection:]
  -[TVPPlayer setAudioOptions:]
  -[TVPPlayer setSubtitleOptions:]
  -[TVPPlayer setTimeBeingSeekedTo:]
  -[TVPPlayer setDateBeingSeekedTo:]
  -[TVPPlayer setTimeAtStartOfSeek:]
  -[TVPPlayer setPlaybackDateAtStartOfSeek:]
  -[TVPPlayer setExternalImagePlayer:]
  -[TVPPlayer HDCPUnprotectedTooLongTimer]
  -[TVPPlayer setHDCPUnprotectedTooLongTimer:]
  -[TVPPlayer HDCPStatusPollTimer]
  -[TVPPlayer setHDCPStatusPollTimer:]
  -[TVPPlayer setCachedSelectedAudioOption:]
  -[TVPPlayer setMediaItemChangeReason:]
  -[TVPPlayer playerItemChangeIsHappening]
  -[TVPPlayer setCurrentMediaItemHasVideoContent:]
  -[TVPPlayer setCurrentMediaItemPresentationSize:]
  -[TVPPlayer _logAccessLogEvents]
  -[TVPPlayer setCachedLoadedTimeRanges:]
  -[TVPPlayer setSceneCompletelyBuffered:]
  -[TVPPlayer setCachedSeekableTimeRanges:]
  -[TVPPlayer _updateIsLiveForElapsedTime:]
  -[TVPPlayer _configureSoundCheckForPlayerItem:tracks:]
  -[TVPPlayer _updateMetadataWithVideoQualityColorRangeAndDolbyAtmosForPlayerItem:tracks:]
  -[TVPPlayer _updateCurrentMediaItemAudioInfoForPlayerItem:tracks:]
  -[TVPPlayer _videoTrackIDFromTracks:]
  -[TVPPlayer cachedSelectedAudioOption]
  -[TVPPlayer _setScrubPlayerItem:onPlayerItem:]
  -[TVPPlayer _populateCurrentPlayerItemWithUpNextMetadata]
  -[TVPPlayer _populatePlayerItem:withMetadataFromMediaItem:]
  -[TVPPlayer pausesOnRouteChange]
  -[TVPPlayer mediaItemEndAction]
  -[TVPPlayer _setState:updatedRate:reason:notifyListeners:]
  -[TVPPlayer setSelectedAudioOption:]
  -[TVPPlayer setTemporarySubtitleOverrideType:]
  -[TVPPlayer videoViewWeakReferences]
  -[TVPPlayer sceneCompletelyBuffered]
  -[TVPPlayer allowsConstrainedNetworkUsage]
  -[TVPPlayer setAsyncDelegateInProgress:]
  -[TVPPlayer currentPlayerItemContainsRealDates]
  -[TVPPlayer iFramePrefetchMaxSize]
  -[TVPPlayer _bitRateString:]
  -[TVPPlayer _videoAssetTracksFromTracks:]
  -[TVPPlayer setCurrentMediaItemVideoRange:]
  -[TVPPlayer _descriptionForVideoResolutionClass:]
  -[TVPPlayer _descriptionForVideoRange:]
  -[TVPPlayer _hasDolbyAtmosForTracks:]
  -[TVPPlayer _audioAssetTracksFromTracks:]
  -[TVPPlayer setCurrentMediaItemAudioFormat:]
  -[TVPPlayer currentMediaItemAudioChannels]
  -[TVPPlayer setCurrentMediaItemAudioChannels:]
  -[TVPPlayer screenRecordingNotifyToken]
  -[TVPPlayer setScreenIsBeingRecorded:]
  -[TVPPlayer _getStringForTitleLabel:subtitleLabel:forMediaItem:]
  -[TVPPlayer setModifyingAVPlayerRate:]
  -[TVPPlayer _HDCPUnprotectedTooLongTimerFired:]
  -[TVPPlayer setPostLoadingState:]
  -[TVPPlayer _setState:updatedRate:notifyListeners:]
  -[TVPPlayer AVKitExternalImageScanningUpdateBlock]
  -[TVPPlayer setLastTimeSentToAVKitImageHandler:]
  -[TVPPlayer _notifyOfBoundaryCrossingBetweenPreviousTime:updatedTime:]
  -[TVPPlayer currentMediaItemHasVideoContent]
  -[TVPPlayer _currentPlayerItemCanScanAtRate:]
  -[TVPPlayer setProgressiveJumpingScrubber:]
  -[TVPPlayer setStartingSeekPrecision:]
  -[TVPPlayer playerItemFromCacheManager]
  -[TVPPlayer setPlayerItemFromCacheManager:]
  -[TVPPlayer _beingUsedForIFrameOnlyPlayback]
  -[TVPPlayer startingSeekPrecision]
  -[TVPPlayer _soundCheckNormalizationForMediaItem:]
  -[TVPPlayer _updateAudioSelectionCriteriaForMediaItemLoader:]
  -[TVPPlayer pendingSelectedMediaArray]
  -[TVPPlayer setPendingSelectedMediaArray:]
  -[TVPPlayer setModifyingAVPlayerQueue:]
  -[TVPPlayer setNumOutstandingSeeks:]
  -[TVPPlayer _estimatedCMTimeForPlaybackDate:referenceTime:referenceDate:]
  -[TVPPlayer seekableDateRange]
  -[TVPPlayer usesLegacyDelegateBehavior]
  -[TVPPlayer setAVQueuePlayer:]
  -[TVPPlayer setUnqueuedPlayerItem:]
  -[TVPPlayer setWaitsAfterPreparingMediaItems:]
  -[TVPPlayer playerReporter]
  -[TVPPlayer _addObserversForMediaItemLoader:]
  -[TVPPlayer setPlaylistInternal:]
  -[TVPPlayer lastTimeSentToAVKitImageHandler]
  -[TVPPlayer _isPlaybackLikelyToKeepUp]
  -[TVPPlayer waitsAfterPreparingMediaItems]
  -[TVPPlayer createsPlayerItemButDoesNotEnqueue]
  -[TVPPlayer _addPlaybackEndTimeBoundaryObservers]
  -[TVPPlayer postLoadingState]
  -[TVPPlayer playbackDateAtStartOfSeek]
  -[TVPPlayer timeAtStartOfSeek]
  -[TVPPlayer remainLoadingWhenSeekCompletes]
  -[TVPPlayer errorBehavior]
  -[TVPPlayer loadingInitialItemInPlaylist]
  -[TVPPlayer currentDirectionOfPlaylistChange]
  -[TVPPlayer changeMediaInDirection:reason:]
  -[TVPPlayer continueLoadingCurrentItem]
  -[TVPPlayer playIgnoringDelegate:]
  -[TVPPlayer pauseIgnoringDelegate:]
  -[TVPPlayer pauseWithVolumeRampDuration:]
  -[TVPPlayer stopWithVolumeRampDuration:]
  -[TVPPlayer setElapsedTime:seekPrecision:]
  -[TVPPlayer setElapsedTime:seekPrecision:ignoreDelegate:]
  -[TVPPlayer addBoundaryTimeObserverForDates:withHandler:]
  -[TVPPlayer skipToNextChapterInDirection:]
  -[TVPPlayer setSelectedSubtitleOption:setGlobalPreference:]
  -[TVPPlayer currentMediaItemSupportsScrubbingUsingPlayer]
  -[TVPPlayer setAsyncDelegate:]
  -[TVPPlayer currentMediaItemPreparedForLoading]
  -[TVPPlayer currentMediaItemInitialLoadingComplete]
  -[TVPPlayer currentMediaItemHasDates]
  -[TVPPlayer setRateUsedForPlayback:]
  -[TVPPlayer currentInterstitial]
  -[TVPPlayer bufferedTimeRange]
  -[TVPPlayer seekableTimeRange]
  -[TVPPlayer setSelectedSubtitleOption:]
  -[TVPPlayer updatesMediaRemoteInfoAutomatically]
  -[TVPPlayer changeToMediaAtIndex:reason:]
  -[TVPPlayer setElapsedTime:orPlaybackDate:withAVKitCompletion:]
  -[TVPPlayer avKitSeekDidComplete]
  -[TVPPlayer avKitDidFinishScanning]
  -[TVPPlayer setHighFrequencyElapsedTimeObserverBlock:]
  -[TVPPlayer currentScanMode]
  -[TVPPlayer selectMediaArray:]
  -[TVPPlayer AVQueuePlayerCreateIfNecessary:]
  -[TVPPlayer setMediaRemoteUpdatingEnabled:]
  -[TVPPlayer setPlaybackHUDString:]
  -[TVPPlayer setPrefersSDRVideo:]
  -[TVPPlayer prefersSDRVideo]
  -[TVPPlayer setLimitsBandwidthForCellularAccess:]
  -[TVPPlayer _HDCPStatusPollTimerFired:]
  -[TVPPlayer setCurrentMediaItemLoader:]
  -[TVPPlayer setElapsedTimeObserverBlocks:]
  -[TVPPlayer bookmarkMonitor]
  -[TVPPlayer setVideoViewWeakReferences:]
  -[TVPPlayer setMediaItemLoaders:]
  -[TVPPlayer handleRemoteCommandsWithoutUpdatingMediaRemote]
  -[TVPPlayer setHandleRemoteCommandsWithoutUpdatingMediaRemote:]
  -[TVPPlayer setPausesOnRouteChange:]
  -[TVPPlayer updatesBookmarks]
  -[TVPPlayer sendsPlayerReports]
  -[TVPPlayer pausesOnHDCPProtectionDown]
  -[TVPPlayer setPausesOnHDCPProtectionDown:]
  -[TVPPlayer setScreenRecordingNotifyToken:]
  -[TVPPlayer setAsyncDelegateOperations:]
  -[TVPPlayer asyncDelegateInProgress]
  -[TVPPlayer setUsesLegacyDelegateBehavior:]
  -[TVPPlayer setAVKitExternalImageScanningUpdateBlock:]
  -[TVPPlayer mediaRemoteUpdatingEnabled]
  -[TVPPlayer setRemainLoadingWhenSeekCompletes:]


TVPMediaItemProductPlacementInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *localizedInfoString
 @property  NSNumber *duration
 @property  NSString *imageUrlStringFormat

  // instance methods
  -[TVPMediaItemProductPlacementInfo .cxx_destruct]
  -[TVPMediaItemProductPlacementInfo setDuration:]
  -[TVPMediaItemProductPlacementInfo duration]
  -[TVPMediaItemProductPlacementInfo imageUrlStringFormat]
  -[TVPMediaItemProductPlacementInfo localizedInfoString]
  -[TVPMediaItemProductPlacementInfo initWithLocalizedProductPlacementInfoString:duration:andImageURLStringFormat:]
  -[TVPMediaItemProductPlacementInfo setLocalizedInfoString:]
  -[TVPMediaItemProductPlacementInfo setImageUrlStringFormat:]


TVPDownloadSession : NSObject /usr/lib/libSystem.B.dylib <AVAssetDownloadDelegate>
 @property  AVAssetDownloadURLSession *downloadSession
 @property  NSMutableDictionary *taskIDsToDownloads
 @property  <TVPDownloadSessionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVPDownloadSession sharedInstance]

  // instance methods
  -[TVPDownloadSession aggregateAssetDownloadTaskWithURLAsset:mediaSelections:assetTitle:assetArtworkData:options:]
  -[TVPDownloadSession URLSession:aggregateAssetDownloadTask:didCompleteForMediaSelection:]
  -[TVPDownloadSession URLSession:aggregateAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:forMediaSelection:]
  -[TVPDownloadSession URLSession:aggregateAssetDownloadTask:willDownloadToURL:]
  -[TVPDownloadSession init]
  -[TVPDownloadSession .cxx_destruct]
  -[TVPDownloadSession URLSession:task:didCompleteWithError:]
  -[TVPDownloadSession downloadForMediaItem:]
  -[TVPDownloadSession URLSessionDidFinishEventsForBackgroundURLSession:]
  -[TVPDownloadSession setDelegate:]
  -[TVPDownloadSession delegate]
  -[TVPDownloadSession initializeWithDownloadingMediaItems:]
  -[TVPDownloadSession downloadSession]
  -[TVPDownloadSession registerDownloadTask:forDownload:]
  -[TVPDownloadSession unregisterDownloadTaskForDownload:]
  -[TVPDownloadSession setDownloadSession:]
  -[TVPDownloadSession taskIDsToDownloads]
  -[TVPDownloadSession setTaskIDsToDownloads:]


TVPAsyncPlayerDelegateOperation : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *identifier
 @property  @? block

  // instance methods
  -[TVPAsyncPlayerDelegateOperation init]
  -[TVPAsyncPlayerDelegateOperation .cxx_destruct]
  -[TVPAsyncPlayerDelegateOperation block]
  -[TVPAsyncPlayerDelegateOperation setBlock:]
  -[TVPAsyncPlayerDelegateOperation identifier]
  -[TVPAsyncPlayerDelegateOperation isEqual:]


TVPPlayerReporter : NSObject /usr/lib/libSystem.B.dylib
 @property  TVPPlayer *player
 @property  RTCReporting *rtcAgent
 @property  id reportingHierarchyToken

  // class methods
  +[TVPPlayerReporter initialize]

  // instance methods
  -[TVPPlayerReporter setPlayer:]
  -[TVPPlayerReporter reportingHierarchyToken]
  -[TVPPlayerReporter setReportingHierarchyToken:]
  -[TVPPlayerReporter dealloc]
  -[TVPPlayerReporter .cxx_destruct]
  -[TVPPlayerReporter player]
  -[TVPPlayerReporter initWithPlayer:]
  -[TVPPlayerReporter _playerStateWillChange:]
  -[TVPPlayerReporter _playerCurrentMediaItemWillChange:]
  -[TVPPlayerReporter _playerCurrentMediaItemDidChange:]
  -[TVPPlayerReporter rtcAgent]
  -[TVPPlayerReporter _setupRTCAgent]
  -[TVPPlayerReporter _sendPlaybackStartupEventsIfNecessary]
  -[TVPPlayerReporter _tearDownRTCAgent]
  -[TVPPlayerReporter _rtcAgentUserInfo]
  -[TVPPlayerReporter setRtcAgent:]
  -[TVPPlayerReporter _sendRTCEvent:withCategory:type:values:]
  -[TVPPlayerReporter sendPlaybackStartupMetricsManually]


TVPBumperConfig : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<TVPMediaItem> *mediaItem
 @property  UIImage *logoImage
 @property  NSAttributedString *attributedWarningText
 @property  NSAttributedString *attributedAppleIDText
 @property  double textDwellTime
 @property  double maxTextWidth

  // instance methods
  -[TVPBumperConfig init]
  -[TVPBumperConfig setMediaItem:]
  -[TVPBumperConfig .cxx_destruct]
  -[TVPBumperConfig setMaxTextWidth:]
  -[TVPBumperConfig maxTextWidth]
  -[TVPBumperConfig setLogoImage:]
  -[TVPBumperConfig mediaItem]
  -[TVPBumperConfig logoImage]
  -[TVPBumperConfig attributedWarningText]
  -[TVPBumperConfig setAttributedWarningText:]
  -[TVPBumperConfig attributedAppleIDText]
  -[TVPBumperConfig setAttributedAppleIDText:]
  -[TVPBumperConfig textDwellTime]
  -[TVPBumperConfig setTextDwellTime:]


TVPChapter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *localizedName
 @property  NSString *chapterDescription
 @property  TVPTimeRange *timeRange
 @property  TVPDateRange *dateRange

  // instance methods
  -[TVPChapter setTimeRange:]
  -[TVPChapter setLocalizedName:]
  -[TVPChapter dateRange]
  -[TVPChapter setDateRange:]
  -[TVPChapter .cxx_destruct]
  -[TVPChapter timeRange]
  -[TVPChapter localizedName]
  -[TVPChapter chapterDescription]
  -[TVPChapter setChapterDescription:]


TVPMutableChapter : TVPChapter
 @property  NSString *localizedName
 @property  NSString *chapterDescription
 @property  TVPTimeRange *timeRange
 @property  TVPDateRange *dateRange


TVPExternalImageConfig : NSObject /usr/lib/libSystem.B.dylib
 @property  double imageInterval
 @property  long long imageCount
 @property  NSURL *baseURL
 @property  BOOL usesOneBasedImageIndexes
 @property  NSString *imageNameFormatString
 @property  NSString *version

  // instance methods
  -[TVPExternalImageConfig setBaseURL:]
  -[TVPExternalImageConfig baseURL]
  -[TVPExternalImageConfig .cxx_destruct]
  -[TVPExternalImageConfig setVersion:]
  -[TVPExternalImageConfig imageCount]
  -[TVPExternalImageConfig version]
  -[TVPExternalImageConfig setImageCount:]
  -[TVPExternalImageConfig imageInterval]
  -[TVPExternalImageConfig setImageInterval:]
  -[TVPExternalImageConfig usesOneBasedImageIndexes]
  -[TVPExternalImageConfig setUsesOneBasedImageIndexes:]
  -[TVPExternalImageConfig imageNameFormatString]
  -[TVPExternalImageConfig setImageNameFormatString:]


TVPPlayerBookmarkMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NSTimer *bookmarkPeriodicSaveTimer
 @property  NSObject<TVPPlayback> *player
 @property  BOOL playerHasFinishedLoading

  // instance methods
  -[TVPPlayerBookmarkMonitor setPlayer:]
  -[TVPPlayerBookmarkMonitor dealloc]
  -[TVPPlayerBookmarkMonitor .cxx_destruct]
  -[TVPPlayerBookmarkMonitor player]
  -[TVPPlayerBookmarkMonitor initWithPlayer:]
  -[TVPPlayerBookmarkMonitor _playerStateWillChange:]
  -[TVPPlayerBookmarkMonitor _playerCurrentMediaItemWillChange:]
  -[TVPPlayerBookmarkMonitor _playerErrorDidOccur:]
  -[TVPPlayerBookmarkMonitor setPlayerHasFinishedLoading:]
  -[TVPPlayerBookmarkMonitor _updateBookmarkTimeForMediaItem:player:playbackOfMediaItemIsEnding:]
  -[TVPPlayerBookmarkMonitor _updatePlayCountForMediaItem:player:]
  -[TVPPlayerBookmarkMonitor bookmarkPeriodicSaveTimer]
  -[TVPPlayerBookmarkMonitor _bookmarkPeriodicSaveTimerFired:]
  -[TVPPlayerBookmarkMonitor setBookmarkPeriodicSaveTimer:]
  -[TVPPlayerBookmarkMonitor playerHasFinishedLoading]


TVPResourceLoadingRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  AVAssetResourceLoadingRequest *loadingRequest
 @property  NSNumber *avRequestID
 @property  NSDictionary *dictionaryRepresentation
 @property  NSURL *URL
 @property  BOOL isCancelled

  // instance methods
  -[TVPResourceLoadingRequest isCancelled]
  -[TVPResourceLoadingRequest init]
  -[TVPResourceLoadingRequest .cxx_destruct]
  -[TVPResourceLoadingRequest finishLoadingWithError:]
  -[TVPResourceLoadingRequest dictionaryRepresentation]
  -[TVPResourceLoadingRequest URL]
  -[TVPResourceLoadingRequest loadingRequest]
  -[TVPResourceLoadingRequest initWithAssetResourceLoadingRequest:]
  -[TVPResourceLoadingRequest finishLoadingWithResponse:data:renewalDate:redirect:]
  -[TVPResourceLoadingRequest finishLoadingWithResponseData:renewalDate:keyType:]
  -[TVPResourceLoadingRequest avRequestID]


TVPAudioOption : NSObject /usr/lib/libSystem.B.dylib
 @property  AVMediaSelectionOption *avMediaSelectionOption
 @property  NSString *localizedDisplayString
 @property  NSString *title
 @property  NSString *languageCodeFromLocale
 @property  NSString *languageCodeBCP47
 @property  id propertyListRepresentation
 @property  int trackID
 @property  NSString *savedLocaleLanguageCode

  // instance methods
  -[TVPAudioOption trackID]
  -[TVPAudioOption propertyListRepresentation]
  -[TVPAudioOption initWithPropertyListRepresentation:]
  -[TVPAudioOption dealloc]
  -[TVPAudioOption .cxx_destruct]
  -[TVPAudioOption _currentLocaleDidChange:]
  -[TVPAudioOption setTitle:]
  -[TVPAudioOption title]
  -[TVPAudioOption setTrackID:]
  -[TVPAudioOption initWithOption:]
  -[TVPAudioOption isEqual:]
  -[TVPAudioOption languageCodeBCP47]
  -[TVPAudioOption avMediaSelectionOption]
  -[TVPAudioOption languageCodeFromLocale]
  -[TVPAudioOption setLocalizedDisplayString:]
  -[TVPAudioOption initWithSavedTrackID:savedLocaleLanguageCode:]
  -[TVPAudioOption localizedDisplayString]
  -[TVPAudioOption setAvMediaSelectionOption:]
  -[TVPAudioOption setLanguageCodeFromLocale:]
  -[TVPAudioOption setLanguageCodeBCP47:]
  -[TVPAudioOption setPropertyListRepresentation:]
  -[TVPAudioOption savedLocaleLanguageCode]
  -[TVPAudioOption setSavedLocaleLanguageCode:]


TVPSecureKeyDeliveryCoordinator : NSObject /usr/lib/libSystem.B.dylib <TVPSecureKeyLoaderDelegate>
 @property  TVPSecureKeyLoader *secureKeyLoader
 @property  NSData *certificateData
 @property  BOOL certFetchInProgress
 @property  NSMutableSet *requestsAwaitingCertFetch
 @property  NSObject<TVPSecureKeyDeliveryCoordinatorDelegate> *delegate
 @property  TVPPlaybackReportingEventCollection *eventCollection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVPSecureKeyDeliveryCoordinator initialize]
  +[TVPSecureKeyDeliveryCoordinator isSecureKeyDeliveryRequest:]

  // instance methods
  -[TVPSecureKeyDeliveryCoordinator init]
  -[TVPSecureKeyDeliveryCoordinator setCertificateData:]
  -[TVPSecureKeyDeliveryCoordinator .cxx_destruct]
  -[TVPSecureKeyDeliveryCoordinator certificateData]
  -[TVPSecureKeyDeliveryCoordinator setDelegate:]
  -[TVPSecureKeyDeliveryCoordinator delegate]
  -[TVPSecureKeyDeliveryCoordinator eventCollection]
  -[TVPSecureKeyDeliveryCoordinator requestsAwaitingCertFetch]
  -[TVPSecureKeyDeliveryCoordinator setEventCollection:]
  -[TVPSecureKeyDeliveryCoordinator setRequestsAwaitingCertFetch:]
  -[TVPSecureKeyDeliveryCoordinator secureKeyLoader]
  -[TVPSecureKeyDeliveryCoordinator setSecureKeyLoader:]
  -[TVPSecureKeyDeliveryCoordinator sendStopRequest]
  -[TVPSecureKeyDeliveryCoordinator secureKeyLoader:didLoadKeyResponseData:renewalDate:forRequest:]
  -[TVPSecureKeyDeliveryCoordinator secureKeyLoader:didFailWithError:forRequest:]
  -[TVPSecureKeyDeliveryCoordinator secureKeyLoader:didLoadCertificateData:forRequest:]
  -[TVPSecureKeyDeliveryCoordinator secureKeyLoader:didLoadContentIdentifierData:forRequest:]
  -[TVPSecureKeyDeliveryCoordinator secureKeyLoader:didReceiveUpdatedRentalExpirationDate:]
  -[TVPSecureKeyDeliveryCoordinator secureKeyLoader:didReceiveUpdatedRentalPlaybackStartDate:]
  -[TVPSecureKeyDeliveryCoordinator secureKeyLoader:didReceiveUpdatedRentalExpirationDate:playbackStartDate:]
  -[TVPSecureKeyDeliveryCoordinator loadSecureKeyRequest:]
  -[TVPSecureKeyDeliveryCoordinator initWithSecureKeyLoader:]
  -[TVPSecureKeyDeliveryCoordinator _loadSecureKeyRequest:sendStartReportingEvent:]
  -[TVPSecureKeyDeliveryCoordinator setCertFetchInProgress:]
  -[TVPSecureKeyDeliveryCoordinator _finishLoadingWithError:forRequest:]
  -[TVPSecureKeyDeliveryCoordinator certFetchInProgress]


TVPDateRange : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  double durationInSeconds

  // instance methods
  -[TVPDateRange initWithStartDate:duration:]
  -[TVPDateRange startDate]
  -[TVPDateRange containsDate:]
  -[TVPDateRange .cxx_destruct]
  -[TVPDateRange endDate]
  -[TVPDateRange durationInSeconds]
  -[TVPDateRange isEqual:]
  -[TVPDateRange dateRangeByIntersectingDateRange:]


TVPSecureKeyStandardConnector : NSObject /usr/lib/libSystem.B.dylib <TVPSecureKeyStandardLoaderRequestGenerating, TVPSecureKeyStandardLoaderConnectionHandling>
 @property  NSOperationQueue *operationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVPSecureKeyStandardConnector operationQueue]
  -[TVPSecureKeyStandardConnector setOperationQueue:]
  -[TVPSecureKeyStandardConnector init]
  -[TVPSecureKeyStandardConnector .cxx_destruct]
  -[TVPSecureKeyStandardConnector secureKeyStandardLoader:requestForFetchingDataFromURL:]
  -[TVPSecureKeyStandardConnector secureKeyStandardLoader:sendAsynchronousRequest:completionHandler:]
  -[TVPSecureKeyStandardConnector secureKeyStandardLoader:requestForPostingData:toURL:]


TVPSecureKeyRequest : TVPResourceLoadingRequest
 @property  NSData *keyRequestData
 @property  NSData *certificateData
 @property  NSData *contentIdentifierData
 @property  NSDictionary *requestOptions
 @property  NSDate *startDate
 @property  unsigned long retryCount
 @property  NSNumber *rentalID
 @property  NSString *reportingID
 @property  TVPPlaybackReportingEventCollection *eventCollection
 @property  NSNumber *requestCompletionTime
 @property  NSDate *requestEndDate
 @property  NSDate *requestStartDate
 @property  unsigned long requestID
 @property  BOOL isRenewal
 @property  BOOL offlineKeyUsageAllowed
 @property  BOOL retrievesOfflineKeys

  // instance methods
  -[TVPSecureKeyRequest setRetryCount:]
  -[TVPSecureKeyRequest requestID]
  -[TVPSecureKeyRequest startDate]
  -[TVPSecureKeyRequest retryCount]
  -[TVPSecureKeyRequest setCertificateData:]
  -[TVPSecureKeyRequest requestEndDate]
  -[TVPSecureKeyRequest .cxx_destruct]
  -[TVPSecureKeyRequest requestStartDate]
  -[TVPSecureKeyRequest certificateData]
  -[TVPSecureKeyRequest setRequestOptions:]
  -[TVPSecureKeyRequest setRentalID:]
  -[TVPSecureKeyRequest rentalID]
  -[TVPSecureKeyRequest requestOptions]
  -[TVPSecureKeyRequest setStartDate:]
  -[TVPSecureKeyRequest eventCollection]
  -[TVPSecureKeyRequest setRequestStartDate:]
  -[TVPSecureKeyRequest keyRequestData]
  -[TVPSecureKeyRequest setKeyRequestData:]
  -[TVPSecureKeyRequest setRequestEndDate:]
  -[TVPSecureKeyRequest isRenewal]
  -[TVPSecureKeyRequest setEventCollection:]
  -[TVPSecureKeyRequest retrievesOfflineKeys]
  -[TVPSecureKeyRequest setRequestCompletionTime:]
  -[TVPSecureKeyRequest initWithAssetResourceLoadingRequest:]
  -[TVPSecureKeyRequest finishLoadingWithResponseData:renewalDate:keyType:]
  -[TVPSecureKeyRequest reportingID]
  -[TVPSecureKeyRequest setContentIdentifierData:]
  -[TVPSecureKeyRequest loadKeyRequestDataAsynchronouslyWithCompletion:]
  -[TVPSecureKeyRequest requestCompletionTime]
  -[TVPSecureKeyRequest offlineKeyDataForResponseData:error:]
  -[TVPSecureKeyRequest contentIdentifierData]
  -[TVPSecureKeyRequest loadKeyRequestDataWithError:]
  -[TVPSecureKeyRequest offlineKeyUsageAllowed]
  -[TVPSecureKeyRequest setRetrievesOfflineKeys:]


TVPContentKeyRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  NSURL *keyIdentifier
 @property  AVContentKeyRequest *avContentKeyRequest
 @property  TVPContentKeySession *contentKeySession
 @property  BOOL wantsOfflineKeysIfPossible
 @property  BOOL isRenewal
 @property  long long type
 @property  unsigned long requestID
 @property  NSString *eventReportingID
 @property  BOOL isCancelled
 @property  NSDate *requestStartDate
 @property  NSDate *requestEndDate
 @property  NSData *keyRequestData
 @property  NSDictionary *additionalRequestParams
 @property  NSDate *serverRequestStartDate
 @property  NSArray *keyFormatVersions
 @property  NSData *offlineKeyData
 @property  NSData *secureInvalidationNonceData
 @property  id context
 @property  NSData *keyResponseData
 @property  NSDate *renewalDate
 @property  NSNumber *renewalInterval
 @property  NSDate *expirationDate
 @property  NSDate *availabilityEndDate
 @property  NSString *contentID
 @property  BOOL isLowValueKey
 @property  NSNumber *playbackDuration
 @property  BOOL allowManualRenewal
 @property  NSDictionary *additionalRequestParamsFromResponse
 @property  NSMutableDictionary *userInfo
 @property  NSError *error

  // class methods
  +[TVPContentKeyRequest initialize]
  +[TVPContentKeyRequest secureInvalidationRequestForIdentifier:offlineKeyData:additionalRequestParams:contentID:]

  // instance methods
  -[TVPContentKeyRequest requestID]
  -[TVPContentKeyRequest isCancelled]
  -[TVPContentKeyRequest context]
  -[TVPContentKeyRequest playbackDuration]
  -[TVPContentKeyRequest keyIdentifier]
  -[TVPContentKeyRequest setError:]
  -[TVPContentKeyRequest setExpirationDate:]
  -[TVPContentKeyRequest requestEndDate]
  -[TVPContentKeyRequest setType:]
  -[TVPContentKeyRequest .cxx_destruct]
  -[TVPContentKeyRequest requestStartDate]
  -[TVPContentKeyRequest setPlaybackDuration:]
  -[TVPContentKeyRequest setContext:]
  -[TVPContentKeyRequest type]
  -[TVPContentKeyRequest renewalDate]
  -[TVPContentKeyRequest error]
  -[TVPContentKeyRequest userInfo]
  -[TVPContentKeyRequest setRenewalDate:]
  -[TVPContentKeyRequest keyFormatVersions]
  -[TVPContentKeyRequest setContentID:]
  -[TVPContentKeyRequest expirationDate]
  -[TVPContentKeyRequest finish]
  -[TVPContentKeyRequest contentKeySession]
  -[TVPContentKeyRequest setKeyIdentifier:]
  -[TVPContentKeyRequest contentID]
  -[TVPContentKeyRequest eventReportingID]
  -[TVPContentKeyRequest setRequestStartDate:]
  -[TVPContentKeyRequest offlineKeyData]
  -[TVPContentKeyRequest additionalRequestParams]
  -[TVPContentKeyRequest secureInvalidationNonceData]
  -[TVPContentKeyRequest keyRequestData]
  -[TVPContentKeyRequest setSecureInvalidationNonceData:]
  -[TVPContentKeyRequest setContentKeySession:]
  -[TVPContentKeyRequest setKeyRequestData:]
  -[TVPContentKeyRequest makeKeyRequestDataForCertificateData:assetIDData:completion:]
  -[TVPContentKeyRequest setServerRequestStartDate:]
  -[TVPContentKeyRequest setIsLowValueKey:]
  -[TVPContentKeyRequest setAllowManualRenewal:]
  -[TVPContentKeyRequest setAdditionalRequestParamsFromResponse:]
  -[TVPContentKeyRequest serverRequestStartDate]
  -[TVPContentKeyRequest setRenewalInterval:]
  -[TVPContentKeyRequest setAvailabilityEndDate:]
  -[TVPContentKeyRequest setRequestEndDate:]
  -[TVPContentKeyRequest offlineKeyDataFromServerKeyData:error:]
  -[TVPContentKeyRequest setKeyResponseData:]
  -[TVPContentKeyRequest isRenewal]
  -[TVPContentKeyRequest availabilityEndDate]
  -[TVPContentKeyRequest finishByRequestingOfflineKeysIfPossible]
  -[TVPContentKeyRequest setAdditionalRequestParams:]
  -[TVPContentKeyRequest keyResponseData]
  -[TVPContentKeyRequest renewalInterval]
  -[TVPContentKeyRequest isLowValueKey]
  -[TVPContentKeyRequest allowManualRenewal]
  -[TVPContentKeyRequest additionalRequestParamsFromResponse]
  -[TVPContentKeyRequest setOfflineKeyData:]
  -[TVPContentKeyRequest initWithAVContentKeyRequest:]
  -[TVPContentKeyRequest avContentKeyRequest]
  -[TVPContentKeyRequest setWantsOfflineKeysIfPossible:]
  -[TVPContentKeyRequest setIsRenewal:]
  -[TVPContentKeyRequest setKeyFormatVersions:]
  -[TVPContentKeyRequest wantsOfflineKeysIfPossible]


TVPAudioSession : NSObject /usr/lib/libSystem.B.dylib
 @property  @? configurationBlock

  // class methods
  +[TVPAudioSession sharedInstance]

  // instance methods
  -[TVPAudioSession configurationBlock]
  -[TVPAudioSession init]
  -[TVPAudioSession dealloc]
  -[TVPAudioSession .cxx_destruct]
  -[TVPAudioSession _updateIfNecessary]
  -[TVPAudioSession setConfigurationBlock:]
  -[TVPAudioSession _mediaServicesReset:]


TVPSubtitleOption : NSObject /usr/lib/libSystem.B.dylib
 @property  AVMediaSelectionOption *avMediaSelectionOption
 @property  NSString *languageCodeFromLocale
 @property  NSString *languageCodeBCP47
 @property  NSString *identifier
 @property  NSString *localizedDisplayString
 @property  NSNumber *cachedContainsOnlyForcedSubtitles
 @property  NSNumber *cachedSubtitleType
 @property  BOOL containsOnlyForcedSubtitles
 @property  long long subtitleType

  // class methods
  +[TVPSubtitleOption offSubtitleOption]
  +[TVPSubtitleOption autoSubtitleOption]
  +[TVPSubtitleOption offSubtitleOptionWithAVMediaSelectionOption:]

  // instance methods
  -[TVPSubtitleOption dealloc]
  -[TVPSubtitleOption .cxx_destruct]
  -[TVPSubtitleOption _currentLocaleDidChange:]
  -[TVPSubtitleOption setIdentifier:]
  -[TVPSubtitleOption identifier]
  -[TVPSubtitleOption isEqual:]
  -[TVPSubtitleOption subtitleType]
  -[TVPSubtitleOption languageCodeBCP47]
  -[TVPSubtitleOption containsOnlyForcedSubtitles]
  -[TVPSubtitleOption avMediaSelectionOption]
  -[TVPSubtitleOption initWithAVMediaSelectionOption:]
  -[TVPSubtitleOption languageCodeFromLocale]
  -[TVPSubtitleOption setLocalizedDisplayString:]
  -[TVPSubtitleOption localizedDisplayString]
  -[TVPSubtitleOption setAvMediaSelectionOption:]
  -[TVPSubtitleOption setLanguageCodeFromLocale:]
  -[TVPSubtitleOption setLanguageCodeBCP47:]
  -[TVPSubtitleOption cachedContainsOnlyForcedSubtitles]
  -[TVPSubtitleOption setCachedContainsOnlyForcedSubtitles:]
  -[TVPSubtitleOption cachedSubtitleType]
  -[TVPSubtitleOption setCachedSubtitleType:]


TVPOffSubtitleOption : TVPSubtitleOption
  // instance methods
  -[TVPOffSubtitleOption isEqual:]
  -[TVPOffSubtitleOption localizedDisplayString]


TVPAutoSubtitleOption : TVPSubtitleOption
  // instance methods
  -[TVPAutoSubtitleOption isEqual:]
  -[TVPAutoSubtitleOption localizedDisplayString]


TVPMediaItemRollInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long type
 @property  double start
 @property  double duration
 @property  NSNumber *adamID
 @property  BOOL skippable

  // instance methods
  -[TVPMediaItemRollInfo .cxx_destruct]
  -[TVPMediaItemRollInfo setAdamID:]
  -[TVPMediaItemRollInfo type]
  -[TVPMediaItemRollInfo isSkippable]
  -[TVPMediaItemRollInfo adamID]
  -[TVPMediaItemRollInfo duration]
  -[TVPMediaItemRollInfo start]
  -[TVPMediaItemRollInfo _typeDescription]
  -[TVPMediaItemRollInfo setSkippable:]
  -[TVPMediaItemRollInfo initWithType:start:duration:]


TVPExternalImageLoader : NSObject /usr/lib/libSystem.B.dylib <TVPPlaybackImageLoader>
 @property  TVPExternalImageConfig *config
 @property  NSMutableSet *imageProxies
 @property  NSMutableDictionary *imageProxyMappings
 @property  NSMutableSet *loadedImageActualTimes
 @property  double firstImageTime
 @property  double lastImageTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVPExternalImageLoader .cxx_destruct]
  -[TVPExternalImageLoader config]
  -[TVPExternalImageLoader lastImageTime]
  -[TVPExternalImageLoader initWithConfig:]
  -[TVPExternalImageLoader setConfig:]
  -[TVPExternalImageLoader invalidate]
  -[TVPExternalImageLoader setImageProxies:]
  -[TVPExternalImageLoader imageProxies]
  -[TVPExternalImageLoader closestImageTimeForTime:imageInterval:]
  -[TVPExternalImageLoader imageIsLoadedForTime:]
  -[TVPExternalImageLoader loadedImageForTime:]
  -[TVPExternalImageLoader firstImageTime]
  -[TVPExternalImageLoader loadImagesForTimes:maxSize:withHandler:]
  -[TVPExternalImageLoader cancelImageLoadingForIdentifiers:]
  -[TVPExternalImageLoader closestImageTimeForTime:]
  -[TVPExternalImageLoader imageProxyMappings]
  -[TVPExternalImageLoader _closestImageIndexForTime:actualTime:imageInterval:]
  -[TVPExternalImageLoader _closestURLForImageTime:actualTime:]
  -[TVPExternalImageLoader setImageProxyMappings:]
  -[TVPExternalImageLoader loadedImageActualTimes]
  -[TVPExternalImageLoader setLoadedImageActualTimes:]


TVPContentKeyRequestParams : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *keyIdentifier
 @property  NSArray *keyFormatVersions

  // instance methods
  -[TVPContentKeyRequestParams keyIdentifier]
  -[TVPContentKeyRequestParams .cxx_destruct]
  -[TVPContentKeyRequestParams keyFormatVersions]
  -[TVPContentKeyRequestParams setKeyIdentifier:]
  -[TVPContentKeyRequestParams setKeyFormatVersions:]


TVPMediaItemAdvisoryInfo : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *ratingName
 @property  NSString *ratingDescription

  // instance methods
  -[TVPMediaItemAdvisoryInfo .cxx_destruct]
  -[TVPMediaItemAdvisoryInfo ratingDescription]
  -[TVPMediaItemAdvisoryInfo ratingName]
  -[TVPMediaItemAdvisoryInfo initWithRatingDescription:]
  -[TVPMediaItemAdvisoryInfo setRatingName:]


TVPBaseMediaItem : NSObject /usr/lib/libSystem.B.dylib <TVPMediaItem>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TVPBaseMediaItem init]
  -[TVPBaseMediaItem .cxx_destruct]
  -[TVPBaseMediaItem mediaItemMetadataForProperty:]
  -[TVPBaseMediaItem setMediaItemMetadata:forProperty:]
  -[TVPBaseMediaItem performMediaItemMetadataTransactionWithBlock:]
  -[TVPBaseMediaItem mediaItemURL]
  -[TVPBaseMediaItem hasTrait:]
  -[TVPBaseMediaItem isEqualToMediaItem:]
  -[TVPBaseMediaItem updateBookmarkWithSuggestedTime:forElapsedTime:duration:playbackOfMediaItemIsEnding:]
  -[TVPBaseMediaItem updatePlayCountForElapsedTime:duration:]
  -[TVPBaseMediaItem reportingDelegate]
  -[TVPBaseMediaItem _setMetadata:forProperty:postNotification:]
  -[TVPBaseMediaItem _postMetadataWillChangeNotificationWithMetadataProperties:]
  -[TVPBaseMediaItem _postMetadataDidChangeNotificationWithMetadataProperties:]
  -[TVPBaseMediaItem removeMediaItemMetadataForProperty:]


TVPClipMediaItem : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<TVPMediaItem> *mediaItem
 @property  NSSet *localMetadataKeys
 @property  NSMutableDictionary *localMetadata

  // instance methods
  -[TVPClipMediaItem forwardInvocation:]
  -[TVPClipMediaItem methodSignatureForSelector:]
  -[TVPClipMediaItem conformsToProtocol:]
  -[TVPClipMediaItem forwardingTargetForSelector:]
  -[TVPClipMediaItem setMediaItem:]
  -[TVPClipMediaItem dealloc]
  -[TVPClipMediaItem respondsToSelector:]
  -[TVPClipMediaItem .cxx_destruct]
  -[TVPClipMediaItem isKindOfClass:]
  -[TVPClipMediaItem mediaItem]
  -[TVPClipMediaItem mediaItemMetadataForProperty:]
  -[TVPClipMediaItem setMediaItemMetadata:forProperty:]
  -[TVPClipMediaItem initWithMediaItem:clipTimeRange:]
  -[TVPClipMediaItem hasTrait:]
  -[TVPClipMediaItem _mediaItemMetadataWillOrDidChange:]
  -[TVPClipMediaItem localMetadataKeys]
  -[TVPClipMediaItem setLocalMetadataKeys:]
  -[TVPClipMediaItem localMetadata]
  -[TVPClipMediaItem setLocalMetadata:]


TVPMediaItemLoader : NSObject /usr/lib/libSystem.B.dylib <AVAssetResourceLoaderDelegate>
 @property  NSObject<TVPMediaItem> *mediaItem
 @property  NSString *state
 @property  NSError *error
 @property  AVURLAsset *AVAsset
 @property  TVPMediaItemTimingData *timingData
 @property  TVPStateMachine *stateMachine
 @property  AVURLAsset *AVAssetInternal
 @property  TVPContentKeySession *contentKeySession
 @property  NSObject<OS_dispatch_queue> *assetInternalAccessQueue
 @property  NSObject<OS_dispatch_queue> *assetLoadContextAccessQueue
 @property  unsigned long assetLoadContext
 @property  unsigned long refCount
 @property  NSString *mediaItemLoaderGUID
 @property  NSTimer *diskSpaceMonitorTimer
 @property  BOOL cleanedUp
 @property  BOOL AVAudioSessionConfiguredAfterMediaServicesReset
 @property  NSNotification *savedMediaServerResetUserNotification
 @property  AVURLAsset *existingAVAsset
 @property  BOOL containsStreamingAVAsset
 @property  id reportingHierarchyToken
 @property  BOOL allowsCellularUsage
 @property  BOOL allowsConstrainedNetworkUsage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVPMediaItemLoader initialize]
  +[TVPMediaItemLoader loaderForMediaItem:]
  +[TVPMediaItemLoader removeTemporaryDownloadDirectory]
  +[TVPMediaItemLoader tempDirURL]

  // instance methods
  -[TVPMediaItemLoader setTimingData:]
  -[TVPMediaItemLoader timingData]
  -[TVPMediaItemLoader refCount]
  -[TVPMediaItemLoader setStateMachine:]
  -[TVPMediaItemLoader stateMachine]
  -[TVPMediaItemLoader initWithMediaItem:]
  -[TVPMediaItemLoader setMediaItem:]
  -[TVPMediaItemLoader reportingHierarchyToken]
  -[TVPMediaItemLoader setReportingHierarchyToken:]
  -[TVPMediaItemLoader dealloc]
  -[TVPMediaItemLoader setError:]
  -[TVPMediaItemLoader setState:]
  -[TVPMediaItemLoader .cxx_destruct]
  -[TVPMediaItemLoader error]
  -[TVPMediaItemLoader resourceLoader:shouldWaitForLoadingOfRequestedResource:]
  -[TVPMediaItemLoader resourceLoader:shouldWaitForRenewalOfRequestedResource:]
  -[TVPMediaItemLoader contentKeySession]
  -[TVPMediaItemLoader _cleanUp]
  -[TVPMediaItemLoader loadIfNecessary]
  -[TVPMediaItemLoader state]
  -[TVPMediaItemLoader mediaItem]
  -[TVPMediaItemLoader AVAsset]
  -[TVPMediaItemLoader setRefCount:]
  -[TVPMediaItemLoader setContentKeySession:]
  -[TVPMediaItemLoader setAllowsCellularUsage:]
  -[TVPMediaItemLoader _registerStateMachineHandlers]
  -[TVPMediaItemLoader allowsCellularUsage]
  -[TVPMediaItemLoader setAllowsConstrainedNetworkUsage:]
  -[TVPMediaItemLoader cleanupIfNecessary]
  -[TVPMediaItemLoader setExistingAVAsset:]
  -[TVPMediaItemLoader containsStreamingAVAsset]
  -[TVPMediaItemLoader allowsConstrainedNetworkUsage]
  -[TVPMediaItemLoader newPlayerItem]
  -[TVPMediaItemLoader prepareForPlaybackInitiation]
  -[TVPMediaItemLoader _stopBackgroundCaching:]
  -[TVPMediaItemLoader _mediaItemPlaybackErrorDidOccur:]
  -[TVPMediaItemLoader _mediaItemStopPlayback:]
  -[TVPMediaItemLoader assetInternalAccessQueue]
  -[TVPMediaItemLoader AVAssetInternal]
  -[TVPMediaItemLoader _avAssetOptions]
  -[TVPMediaItemLoader assetLoadContextAccessQueue]
  -[TVPMediaItemLoader assetLoadContext]
  -[TVPMediaItemLoader existingAVAsset]
  -[TVPMediaItemLoader _avAssetMediaServicesReset:]
  -[TVPMediaItemLoader _avAudioSessionMediaServicesReset:]
  -[TVPMediaItemLoader setAVAssetInternal:]
  -[TVPMediaItemLoader setCleanedUp:]
  -[TVPMediaItemLoader _needToLoadBlockingMetadataKeys]
  -[TVPMediaItemLoader _loadMediaItemMetadataAsynchronously]
  -[TVPMediaItemLoader AVAudioSessionConfiguredAfterMediaServicesReset]
  -[TVPMediaItemLoader _postMediaServicesResetFailureWithNotification:]
  -[TVPMediaItemLoader setAVAudioSessionConfiguredAfterMediaServicesReset:]
  -[TVPMediaItemLoader setSavedMediaServerResetUserNotification:]
  -[TVPMediaItemLoader _avAudioSessionConfiguredAfterMediaServicesReset]
  -[TVPMediaItemLoader savedMediaServerResetUserNotification]
  -[TVPMediaItemLoader _metadataKeysToLoad]
  -[TVPMediaItemLoader _rollKeyNameFromType:]
  -[TVPMediaItemLoader _skipKeyNameFromType:]
  -[TVPMediaItemLoader _numberValueForKey:fromMetadata:andKeyIdentifierMap:]
  -[TVPMediaItemLoader _stringValueForKey:fromMetadata:andKeyIdentifierMap:]
  -[TVPMediaItemLoader _rollTypeFromMetadataItemKey:]
  -[TVPMediaItemLoader _skipTypeFromMetadataItemKey:]
  -[TVPMediaItemLoader _rollKeyNamesForType:withCount:]
  -[TVPMediaItemLoader _skipKeyNamesForType:withCount:]
  -[TVPMediaItemLoader _advisoryKeyNamesWithCount:]
  -[TVPMediaItemLoader _rollInfoFromMetadata:keyIdentifierMap:forType:withTotalCount:]
  -[TVPMediaItemLoader _skipInfoFromMetadata:keyIdentifierMap:forType:withTotalCount:]
  -[TVPMediaItemLoader _advisoryInfoFromMetadata:keyIdentifierMap:withTotalCount:]
  -[TVPMediaItemLoader _productPlacementInfoFromMetadata:keyIdentifierMap:]
  -[TVPMediaItemLoader _tomatoFreshnessFromString:]
  -[TVPMediaItemLoader _contentKeyRequestParamsFromBase64String:]
  -[TVPMediaItemLoader cleanedUp]
  -[TVPMediaItemLoader diskSpaceMonitorTimer]
  -[TVPMediaItemLoader setDiskSpaceMonitorTimer:]
  -[TVPMediaItemLoader setAssetLoadContext:]
  -[TVPMediaItemLoader loadSHA1DigestWithCompletion:]
  -[TVPMediaItemLoader setAVAsset:]
  -[TVPMediaItemLoader setAssetInternalAccessQueue:]
  -[TVPMediaItemLoader setAssetLoadContextAccessQueue:]
  -[TVPMediaItemLoader mediaItemLoaderGUID]
  -[TVPMediaItemLoader setMediaItemLoaderGUID:]


TVPContentKeySession : NSObject /usr/lib/libSystem.B.dylib <AVContentKeySessionDelegate>
 @property  AVContentKeySession *contentKeySession
 @property  NSObject<TVPContentKeyLoading> *contentKeyLoader
 @property  @? offlineKeyGenerationCompletionHandler
 @property  NSArray *offlineKeyIdentifiersInProgress
 @property  NSMutableArray *keyRequestsInProgress
 @property  BOOL offlineKeyGenerationIsForRenewal
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TVPContentKeySession initialize]

  // instance methods
  -[TVPContentKeySession init]
  -[TVPContentKeySession contentKeySession:didProvidePersistableContentKeyRequest:]
  -[TVPContentKeySession .cxx_destruct]
  -[TVPContentKeySession contentKeySession:didProvideContentKeyRequest:]
  -[TVPContentKeySession contentKeySession:didProvideRenewingContentKeyRequest:]
  -[TVPContentKeySession contentKeySession:didUpdatePersistableContentKey:forContentKeyIdentifier:]
  -[TVPContentKeySession contentKeySession]
  -[TVPContentKeySession initWithContentKeyLoader:avAsset:]
  -[TVPContentKeySession setContentKeySession:]
  -[TVPContentKeySession makeSecureInvalidationDataForOfflineKeyData:nonceData:completion:]
  -[TVPContentKeySession generateOfflineKeyRequestsForIdentifiers:completion:]
  -[TVPContentKeySession fetchOfflineKeysForParams:completion:]
  -[TVPContentKeySession finishKeyRequest:]
  -[TVPContentKeySession _generateOfflineKeyRequestsForIdentifiers:isRenewal:completion:]
  -[TVPContentKeySession contentKeyLoader]
  -[TVPContentKeySession offlineKeyIdentifiersInProgress]
  -[TVPContentKeySession _loadAVContentKeyRequests:type:isRenewal:]
  -[TVPContentKeySession offlineKeyGenerationIsForRenewal]
  -[TVPContentKeySession keyRequestsInProgress]
  -[TVPContentKeySession _timeoutOfflineKeyRequestGeneration]
  -[TVPContentKeySession _finishOfflineKeyGeneration]
  -[TVPContentKeySession offlineKeyGenerationCompletionHandler]
  -[TVPContentKeySession setOfflineKeyGenerationCompletionHandler:]
  -[TVPContentKeySession setOfflineKeyIdentifiersInProgress:]
  -[TVPContentKeySession setOfflineKeyGenerationIsForRenewal:]
  -[TVPContentKeySession setContentKeyLoader:]
  -[TVPContentKeySession setKeyRequestsInProgress:]


(TVPlaybackAdditions)
	// class methods
	+[(TVPlaybackAdditions) tvp_hexStringWithBytes:length:lowercase:]
	+[(TVPlaybackAdditions) tvp_lowercaseHexStringWithBytes:length:]
	+[(TVPlaybackAdditions) tvp_uppercaseHexStringWithBytes:length:]

	// instance methods
	-[(TVPlaybackAdditions) tvp_dataFromHexString]
	-[(TVPlaybackAdditions) tvp_languageCodeWithoutRegion]

(TVPlaybackAdditions)
	// instance methods
	-[(TVPlaybackAdditions) tvp_lowercaseHexString]
	-[(TVPlaybackAdditions) tvp_uppercaseHexString]
	-[(TVPlaybackAdditions) tvp_MD5Digest]
	-[(TVPlaybackAdditions) tvp_SHA1Digest]
	-[(TVPlaybackAdditions) tvp_SHA256Digest]

AVPlayerMediaSelectionCriteria(TVPAdditions)
	// instance methods
	-[AVPlayerMediaSelectionCriteria(TVPAdditions) tvp_isEqualToCriteria:]

AVAsset(TVPAdditions)
	// class methods
	+[AVAsset(TVPAdditions) tvp_groupedAudioAVMediaSelectionOptionsFromOptions:]
	+[AVAsset(TVPAdditions) tvp_filteredAndSubsortedMainProgramSubtitleOptionsFromOptions:]
	+[AVAsset(TVPAdditions) tvp_sortedAuxSubtitleOptionsFromOptions:]

	// instance methods
	-[AVAsset(TVPAdditions) tvp_maximumVideoResolution]
	-[AVAsset(TVPAdditions) tvp_maximumVideoRange]
	-[AVAsset(TVPAdditions) tvp_sortedAudioAVMediaSelectionOptions]
	-[AVAsset(TVPAdditions) tvp_sortedSubtitleAVMediaSelectionOptions]

(TVPlaybackAdditions)
	// instance methods
	-[(TVPlaybackAdditions) tvp_subtitleLanguageCode]

AVMetadataItem(TVPAdditions)
	// instance methods
	-[AVMetadataItem(TVPAdditions) tvp_numberValue]

(TVPlaybackAdditions)
	// instance methods
	-[(TVPlaybackAdditions) tvp_appleTimingAppHeaderValue]
	-[(TVPlaybackAdditions) _lookupValueForKey:expectedClass:]
	-[(TVPlaybackAdditions) tvp_numberForKey:]
	-[(TVPlaybackAdditions) tvp_stringForKey:]
	-[(TVPlaybackAdditions) tvp_URLForKey:]
	-[(TVPlaybackAdditions) tvp_boolForKey:defaultValue:]
	-[(TVPlaybackAdditions) tvp_dateForKey:]
	-[(TVPlaybackAdditions) tvp_dateFromMillisecondsSince1970ForKey:]
	-[(TVPlaybackAdditions) tvp_dictionaryForKey:]
	-[(TVPlaybackAdditions) tvp_arrayForKey:]
	-[(TVPlaybackAdditions) tvp_dataForKey:]

NSMutableDictionary(TVPlaybackAdditions)
	// instance methods
	-[NSMutableDictionary(TVPlaybackAdditions) tvp_setObjectIfNotNil:forKey:]

AVMediaSelection(TVPAdditions)
	// instance methods
	-[AVMediaSelection(TVPAdditions) tvp_description]

(TVPlaybackAdditions)
	// class methods
	+[(TVPlaybackAdditions) tvp_dateWithMillisecondsSince1970:]
	+[(TVPlaybackAdditions) tvp_networkTimeIsApproximatelyCorrect]

	// instance methods
	-[(TVPlaybackAdditions) tvp_dateByAddingDays:]
	-[(TVPlaybackAdditions) _isEqualToDateIgnoringTime:]
	-[(TVPlaybackAdditions) tvp_dateBySubtractingDays:]
	-[(TVPlaybackAdditions) tvp_dateFlooredToNearestMinute:]
	-[(TVPlaybackAdditions) tvp_dateCeiledToNearestMinute:]
	-[(TVPlaybackAdditions) tvp_isToday]
	-[(TVPlaybackAdditions) tvp_isTomorrow]
	-[(TVPlaybackAdditions) tvp_isYesterday]

(TVPlaybackAdditions)
	// class methods
	+[(TVPlaybackAdditions) tvp_ISO8601CombinedDateAndTimeFormatter]
	+[(TVPlaybackAdditions) tvp_RFC1123DateFormatter]
	+[(TVPlaybackAdditions) tvp_RFC850DateFormatter]
	+[(TVPlaybackAdditions) tvp_asctimeDateFormatter]

AVQueuePlayer(TVPAdditions)
	// instance methods
	-[AVQueuePlayer(TVPAdditions) tvp_cachedAudioSelectionCriteria]
	-[AVQueuePlayer(TVPAdditions) setTvp_cachedAudioSelectionCriteria:]

(TVPlaybackAdditions)
	// instance methods
	-[(TVPlaybackAdditions) tvp_randomizedArray]
	-[(TVPlaybackAdditions) tvp_arrayByMappingObjectsUsingBlock:]
	-[(TVPlaybackAdditions) tvp_objectsPassingTest:]
	-[(TVPlaybackAdditions) tvp_shallowIsEqualToArray:]

NSMutableArray(TVPlaybackAdditions)
	// instance methods
	-[NSMutableArray(TVPlaybackAdditions) tvp_shuffle]
	-[NSMutableArray(TVPlaybackAdditions) tvp_addObjectIfNotNil:]

AVMediaSelectionOption(TVPAudioSubtitleAdditions)
	// instance methods
	-[AVMediaSelectionOption(TVPAudioSubtitleAdditions) tvp_isSDHSubtitle]
	-[AVMediaSelectionOption(TVPAudioSubtitleAdditions) tvp_languageCodeFromLocale]
	-[AVMediaSelectionOption(TVPAudioSubtitleAdditions) tvp_localizedDisplayString]

01 00 1100 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0f00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDevice 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetDownloadURLSession 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetResourceRenewalRequest 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVContentKeyResponse 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVContentKeySession 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMediaSelection 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMediaSelectionGroup 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMediaSelectionOption 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMetadataItem 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVMutableMetadataItem 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPersistableContentKeyRequest 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerMediaSelectionCriteria 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVTextStyleRule 
01 00 1000 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 0e00 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISNetworkObserver 
01 00 0e00 /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore: ISURLBagLoadingController 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLProtocol 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0500 /System/Library/PrivateFrameworks/RTCReporting.framework/RTCReporting: RTCReporting 
01 00 0200 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVLoadURLOperation 
01 00 0200 /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices: SSVURLBagInterpreter 
01 00 0100 /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit: TVImageProxy 
01 00 0100 /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit: TVURLDescription 
01 00 0100 /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit: TVURLImageLoader 
01 00 0100 /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit: TVURLImageRequest 
01 00 0100 /System/Library/PrivateFrameworks/TVMLKit.framework/TVMLKit: TVViewFactory 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
