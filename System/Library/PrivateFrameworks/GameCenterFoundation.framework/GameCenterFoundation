|| __DATA.__common _GKExchangeTimeoutNone
|| __DATA.__common _GKTurnTimeoutNone
|| __DATA.__common __GKIsRemoteUI
|| __DATA.__data _GKBlacklistedContactIdKey
|| __DATA.__data _GKErrorDomain
|| __DATA.__data _GKExchangeTimeoutDefault
|| __DATA.__data _GKGameSessionErrorDomain
|| __DATA.__data _GKInviteMessageAbsoluteDataURLPrefix
|| __DATA.__data _GKPlayerAuthenticationDidChangeNotificationName
|| __DATA.__data _GKPlayerDidChangeNotificationName
|| __DATA.__data _GKRefreshSeedKey
|| __DATA.__data _GKTournamentErrorDomain
|| __DATA.__data _GKTurnTimeoutDefault
|| __DATA.__data _kGKArgumentIndexesCopied
|| __DATA.__objc_data _OBJC_CLASS_$_FriendPlayedEntry
|| __DATA.__objc_data _OBJC_CLASS_$_FriendPlayedGameEntry
|| __DATA.__objc_data _OBJC_CLASS_$_FriendsPlayedGameList
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievement
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementChallenge
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementDescription
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementDescriptionInternal
|| __DATA.__objc_data _OBJC_CLASS_$_GKAchievementLeaderboardScoreRangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKAnonymousGuestPlayerInternal
|| __DATA.__objc_data _OBJC_CLASS_$_GKAnonymousPlayerInternal
|| __DATA.__objc_data _OBJC_CLASS_$_GKApplicationProxy
|| __DATA.__objc_data _OBJC_CLASS_$_GKApplicationStateMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_GKApplicationWorkspace
|| __DATA.__objc_data _OBJC_CLASS_$_GKAuthenticationMachine
|| __DATA.__objc_data _OBJC_CLASS_$_GKAutomatchPlayerInternal
|| __DATA.__objc_data _OBJC_CLASS_$_GKCDFriendCodeDetail
|| __DATA.__objc_data _OBJC_CLASS_$_GKCDGameAccessList
|| __DATA.__objc_data _OBJC_CLASS_$_GKCDGameFriend
|| __DATA.__objc_data _OBJC_CLASS_$_GKCDGameFriendList
|| __DATA.__objc_data _OBJC_CLASS_$_GKCDGameSettings
|| __DATA.__objc_data _OBJC_CLASS_$_GKCache
|| __DATA.__objc_data _OBJC_CLASS_$_GKCachePair
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallenge
|| __DATA.__objc_data _OBJC_CLASS_$_GKChallengeEventHandler
|| __DATA.__objc_data _OBJC_CLASS_$_GKContentPropertyList
|| __DATA.__objc_data _OBJC_CLASS_$_GKCustomTournamentManager
|| __DATA.__objc_data _OBJC_CLASS_$_GKCustomTournamentRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKDelayOperation
|| __DATA.__objc_data _OBJC_CLASS_$_GKDevice
|| __DATA.__objc_data _OBJC_CLASS_$_GKDigestVerification
|| __DATA.__objc_data _OBJC_CLASS_$_GKFriendRequestURLModel
|| __DATA.__objc_data _OBJC_CLASS_$_GKGame
|| __DATA.__objc_data _OBJC_CLASS_$_GKGameMatch
|| __DATA.__objc_data _OBJC_CLASS_$_GKGameRecord
|| __DATA.__objc_data _OBJC_CLASS_$_GKHostReachability
|| __DATA.__objc_data _OBJC_CLASS_$_GKInvite
|| __DATA.__objc_data _OBJC_CLASS_$_GKJoinGroup
|| __DATA.__objc_data _OBJC_CLASS_$_GKJoinGroupNotifier
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardEntry
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardScore
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardScorePlayersRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardScoreRangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardSet
|| __DATA.__objc_data _OBJC_CLASS_$_GKLeaderboardSummary
|| __DATA.__objc_data _OBJC_CLASS_$_GKLinkedAccountsServiceInterface
|| __DATA.__objc_data _OBJC_CLASS_$_GKLinkedAccountsServicePrivateInterface
|| __DATA.__objc_data _OBJC_CLASS_$_GKLinkedList
|| __DATA.__objc_data _OBJC_CLASS_$_GKListNode
|| __DATA.__objc_data _OBJC_CLASS_$_GKLocalizedAchievementDescription
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatch
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchEvent
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchEventQueue
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchPacket
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKMatchmaker
|| __DATA.__objc_data _OBJC_CLASS_$_GKNearbyDevice
|| __DATA.__objc_data _OBJC_CLASS_$_GKObserverTrampoline
|| __DATA.__objc_data _OBJC_CLASS_$_GKOperationQueue
|| __DATA.__objc_data _OBJC_CLASS_$_GKPlayerCredential
|| __DATA.__objc_data _OBJC_CLASS_$_GKPlayerCredentialController
|| __DATA.__objc_data _OBJC_CLASS_$_GKReachability
|| __DATA.__objc_data _OBJC_CLASS_$_GKRecoveryAttempter
|| __DATA.__objc_data _OBJC_CLASS_$_GKRecurrenceRule
|| __DATA.__objc_data _OBJC_CLASS_$_GKReporter
|| __DATA.__objc_data _OBJC_CLASS_$_GKRoute
|| __DATA.__objc_data _OBJC_CLASS_$_GKSavedGame
|| __DATA.__objc_data _OBJC_CLASS_$_GKSavedGameDocument
|| __DATA.__objc_data _OBJC_CLASS_$_GKScore
|| __DATA.__objc_data _OBJC_CLASS_$_GKScoreChallenge
|| __DATA.__objc_data _OBJC_CLASS_$_GKScoreParser
|| __DATA.__objc_data _OBJC_CLASS_$_GKSession
|| __DATA.__objc_data _OBJC_CLASS_$_GKSpecialPlayerInternal
|| __DATA.__objc_data _OBJC_CLASS_$_GKThreadsafeCache
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournament
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentDefinition
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentParticipant
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentParticipantHistoricalData
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentParticipantRequest
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentPlayerStandings
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentPlayerStandingsInternal
|| __DATA.__objc_data _OBJC_CLASS_$_GKTournamentPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedEventHandler
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedExchange
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedExchangeReply
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedMatch
|| __DATA.__objc_data _OBJC_CLASS_$_GKTurnBasedParticipant
|| __DATA.__objc_data _OBJC_CLASS_$_GKUnauthenticatedPlayerInternal
|| __DATA.__objc_data _OBJC_CLASS_$_GKUnknownPlayerInternal
|| __DATA.__objc_data _OBJC_CLASS_$_GKUpdateGroup
|| __DATA.__objc_data _OBJC_CLASS_$_GKUpdateGroupNotifier
|| __DATA.__objc_data _OBJC_CLASS_$_GKVoiceChat
|| __DATA.__objc_data _OBJC_CLASS_$_GKVoiceChatService
|| __DATA.__objc_data _OBJC_CLASS_$_GamePlatform
|| __DATA.__objc_data _OBJC_CLASS_$_GameSummary
|| __DATA.__objc_data _OBJC_CLASS_$_GamesPlayed
|| __DATA.__objc_data _OBJC_CLASS_$_GamesPlayedSummaryList
|| __DATA.__objc_data _OBJC_CLASS_$_MessageInboxEntry
|| __DATA.__objc_data _OBJC_CLASS_$_MultiplayerGroup
|| __DATA.__objc_data _OBJC_CLASS_$_MultiplayerGroupList
|| __DATA.__objc_data _OBJC_CLASS_$_MultiplayerGroupParticipant
|| __DATA.__objc_data _OBJC_CLASS_$_ReengagementAchievementEntry
|| __DATA.__objc_data _OBJC_CLASS_$__GKIncompletePlayer
|| __DATA.__objc_data _OBJC_CLASS_$__GKStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$__GKURLRequestDictionaryKey
|| __DATA.__objc_data _OBJC_METACLASS_$_FriendPlayedEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_FriendPlayedGameEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_FriendsPlayedGameList
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievement
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementChallenge
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementDescriptionInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAchievementLeaderboardScoreRangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAnonymousGuestPlayerInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAnonymousPlayerInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_GKApplicationProxy
|| __DATA.__objc_data _OBJC_METACLASS_$_GKApplicationStateMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_GKApplicationWorkspace
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAuthenticationMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_GKAutomatchPlayerInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCDFriendCodeDetail
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCDGameAccessList
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCDGameFriend
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCDGameFriendList
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCDGameSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCache
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCachePair
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallenge
|| __DATA.__objc_data _OBJC_METACLASS_$_GKChallengeEventHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_GKContentPropertyList
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCustomTournamentManager
|| __DATA.__objc_data _OBJC_METACLASS_$_GKCustomTournamentRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDelayOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_GKDigestVerification
|| __DATA.__objc_data _OBJC_METACLASS_$_GKFriendRequestURLModel
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGame
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGameMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_GKGameRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_GKHostReachability
|| __DATA.__objc_data _OBJC_METACLASS_$_GKInvite
|| __DATA.__objc_data _OBJC_METACLASS_$_GKJoinGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_GKJoinGroupNotifier
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardScore
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardScorePlayersRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardScoreRangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardSet
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLeaderboardSummary
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLinkedAccountsServiceInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLinkedAccountsServicePrivateInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLinkedList
|| __DATA.__objc_data _OBJC_METACLASS_$_GKListNode
|| __DATA.__objc_data _OBJC_METACLASS_$_GKLocalizedAchievementDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchEventQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchPacket
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKMatchmaker
|| __DATA.__objc_data _OBJC_METACLASS_$_GKNearbyDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_GKObserverTrampoline
|| __DATA.__objc_data _OBJC_METACLASS_$_GKOperationQueue
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPlayerCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_GKPlayerCredentialController
|| __DATA.__objc_data _OBJC_METACLASS_$_GKReachability
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRecoveryAttempter
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRecurrenceRule
|| __DATA.__objc_data _OBJC_METACLASS_$_GKReporter
|| __DATA.__objc_data _OBJC_METACLASS_$_GKRoute
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSavedGame
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSavedGameDocument
|| __DATA.__objc_data _OBJC_METACLASS_$_GKScore
|| __DATA.__objc_data _OBJC_METACLASS_$_GKScoreChallenge
|| __DATA.__objc_data _OBJC_METACLASS_$_GKScoreParser
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSession
|| __DATA.__objc_data _OBJC_METACLASS_$_GKSpecialPlayerInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_GKThreadsafeCache
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournament
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentDefinition
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentParticipant
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentParticipantHistoricalData
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentParticipantRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentPlayerStandings
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentPlayerStandingsInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTournamentPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedEventHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedExchange
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedExchangeReply
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatch
|| __DATA.__objc_data _OBJC_METACLASS_$_GKTurnBasedParticipant
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUnauthenticatedPlayerInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUnknownPlayerInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUpdateGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_GKUpdateGroupNotifier
|| __DATA.__objc_data _OBJC_METACLASS_$_GKVoiceChat
|| __DATA.__objc_data _OBJC_METACLASS_$_GKVoiceChatService
|| __DATA.__objc_data _OBJC_METACLASS_$_GamePlatform
|| __DATA.__objc_data _OBJC_METACLASS_$_GameSummary
|| __DATA.__objc_data _OBJC_METACLASS_$_GamesPlayed
|| __DATA.__objc_data _OBJC_METACLASS_$_GamesPlayedSummaryList
|| __DATA.__objc_data _OBJC_METACLASS_$_MessageInboxEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_MultiplayerGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_MultiplayerGroupList
|| __DATA.__objc_data _OBJC_METACLASS_$_MultiplayerGroupParticipant
|| __DATA.__objc_data _OBJC_METACLASS_$_ReengagementAchievementEntry
|| __DATA.__objc_data _OBJC_METACLASS_$__GKIncompletePlayer
|| __DATA.__objc_data _OBJC_METACLASS_$__GKStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$__GKURLRequestDictionaryKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKAutomatchPlayerInternal._automatchPosition
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKContentPropertyList._achievementsByIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKContentPropertyList._bundleID
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKContentPropertyList._leaderboardSetsByIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKContentPropertyList._leaderboardsByIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKContentPropertyList._root
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKDispatchGroup._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKDispatchGroup._group
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKDispatchGroup._loggingEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKDispatchGroup._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKDispatchGroup._result
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKDispatchGroup._sequence
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKDispatchGroup._values
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKDispatchGroup.result
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKHostReachability._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKHostReachability._hostName
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLeaderboardScorePlayersRequest._playerInternals
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLeaderboardScoreRangeRequest._range
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLeaderboardScoreRequest._friendsOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLeaderboardScoreRequest._gameBundleID
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLeaderboardScoreRequest._groupIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLeaderboardScoreRequest._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLeaderboardScoreRequest._playerInternal
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLeaderboardScoreRequest._prefetch
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLeaderboardScoreRequest._timeScope
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalizedAchievementDescription._game
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKLocalizedAchievementDescription._iconImageName
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKMatchPacket._checksum
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKMatchPacket._data
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKMatchPacket._packetType
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKMatchPacket._sequenceNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKMatchPacket._totalLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKMatchPacket._valid
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKMatchPacket._version
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKObserverTrampoline._block
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKObserverTrampoline._cancellationPredicate
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKObserverTrampoline._keyPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKObserverTrampoline._observee
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKObserverTrampoline._options
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerCredential._DSID
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerCredential._accountName
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerCredential._altDSID
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerCredential._authenticationToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerCredential._environment
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerCredential._playerInternal
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerCredential._rawPassword
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerCredential._scope
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerCredential._scopeModificationDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerInternal._flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKPlayerInternal._globalFriendListAccess
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKReachability.localWiFiRef
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKReachability.reachabilityRef
|| __DATA.__objc_ivar _OBJC_IVAR_$_GKRecoveryAttempter._attemptRecovery
|| __DATA_CONST.__const _GCUITester
|| __DATA_CONST.__const _GKAMSGameLayerDashboardAchievements
|| __DATA_CONST.__const _GKAMSGameLayerDashboardArcade
|| __DATA_CONST.__const _GKAMSGameLayerDashboardChallenges
|| __DATA_CONST.__const _GKAMSGameLayerDashboardLeaderboardChicletTapped
|| __DATA_CONST.__const _GKAMSGameLayerDashboardLeaderboardScores
|| __DATA_CONST.__const _GKAMSGameLayerDashboardLocalPlayerProfile
|| __DATA_CONST.__const _GKAMSGameLayerDashboardLocalPlayerProfileContext
|| __DATA_CONST.__const _GKAMSGameLayerDashboardMainScreen
|| __DATA_CONST.__const _GKAMSGameLayerDashboardMainScreenContext
|| __DATA_CONST.__const _GKAcceptFriendRequestIDs
|| __DATA_CONST.__const _GKAcceptGameInviteNotification
|| __DATA_CONST.__const _GKAcceptedGameInviteFromThisFriend
|| __DATA_CONST.__const _GKAcceptedGameInviteFromThisFriendKey
|| __DATA_CONST.__const _GKAcceptedGameInviteNotification
|| __DATA_CONST.__const _GKAcceptedTurnBasedGameEventNotification
|| __DATA_CONST.__const _GKAccountNameKey
|| __DATA_CONST.__const _GKAccountsDaemonIdentifier
|| __DATA_CONST.__const _GKAccountsOfTypeGameCenter
|| __DATA_CONST.__const _GKAchievementsThrottleThreshold
|| __DATA_CONST.__const _GKAddFriendFromFriendList
|| __DATA_CONST.__const _GKAddFriendFromLeaderboard
|| __DATA_CONST.__const _GKAddFriendFromSettings
|| __DATA_CONST.__const _GKAliasKey
|| __DATA_CONST.__const _GKAnonymousGuestPlayerIDSeparator
|| __DATA_CONST.__const _GKAnonymousPlayerID
|| __DATA_CONST.__const _GKAppDataKey
|| __DATA_CONST.__const _GKAppLaunchTime
|| __DATA_CONST.__const _GKAppStoreBinaryIdentifier
|| __DATA_CONST.__const _GKAppStoreGameUISample
|| __DATA_CONST.__const _GKAppStoreIdentifier
|| __DATA_CONST.__const _GKAppStoreKitIdentifier
|| __DATA_CONST.__const _GKAppStoreProductPageExtensionIdentifier
|| __DATA_CONST.__const _GKAppStoreSuscribePageExtensionIdentifier
|| __DATA_CONST.__const _GKAppStoreWidgetIdentifier
|| __DATA_CONST.__const _GKAppleIDKey
|| __DATA_CONST.__const _GKApplicationStateDisplayIDKey
|| __DATA_CONST.__const _GKApplicationStateKey
|| __DATA_CONST.__const _GKApplicationStatePIDKey
|| __DATA_CONST.__const _GKApplicationsChangeNotificationName
|| __DATA_CONST.__const _GKArcadeIdentifier
|| __DATA_CONST.__const _GKArcadeTopShelfExtensionIdentifier
|| __DATA_CONST.__const _GKArcadeWidgetIdentifier
|| __DATA_CONST.__const _GKAuthenticateAlertKey
|| __DATA_CONST.__const _GKAuthenticateAlertMessageKey
|| __DATA_CONST.__const _GKAuthenticateAlertTitleKey
|| __DATA_CONST.__const _GKAuthenticateExtensionIdentifier
|| __DATA_CONST.__const _GKAuthenticateResponseTime
|| __DATA_CONST.__const _GKAuthorizeAccountURLKey
|| __DATA_CONST.__const _GKAutoMatchPlayerID
|| __DATA_CONST.__const _GKAutomatchedTogether
|| __DATA_CONST.__const _GKAutomatchedTogetherKey
|| __DATA_CONST.__const _GKAvatarCacheSubdirectoryPrefix
|| __DATA_CONST.__const _GKAvatarTypeKey
|| __DATA_CONST.__const _GKBagKey
|| __DATA_CONST.__const _GKBagKeyGamesFriendsPlayed
|| __DATA_CONST.__const _GKBagKeyGetAchievement
|| __DATA_CONST.__const _GKBagKeyGetAllowFriendListAccessForAllGames
|| __DATA_CONST.__const _GKBagKeyGetFindFriendsMetadata
|| __DATA_CONST.__const _GKBagKeyGetFriendIDs
|| __DATA_CONST.__const _GKBagKeyGetGamesPlayed
|| __DATA_CONST.__const _GKBagKeyGetLeaderboard
|| __DATA_CONST.__const _GKBagKeyGetPerGameFriendPlayerIDs
|| __DATA_CONST.__const _GKBagKeyGetPerGameSettings
|| __DATA_CONST.__const _GKBagKeySetPerGameSettings
|| __DATA_CONST.__const _GKBundleIDKey
|| __DATA_CONST.__const _GKBundleShortVersionKey
|| __DATA_CONST.__const _GKBundleVersionKey
|| __DATA_CONST.__const _GKCDXKey
|| __DATA_CONST.__const _GKCacheInvialidationKey
|| __DATA_CONST.__const _GKCacheInvialidationStoreBagKey
|| __DATA_CONST.__const _GKCancelledGameInviteNotification
|| __DATA_CONST.__const _GKChallengeIssueExtensionIdentifier
|| __DATA_CONST.__const _GKChangePasswordURLKey
|| __DATA_CONST.__const _GKClientDataKey
|| __DATA_CONST.__const _GKCommNatCohortKey
|| __DATA_CONST.__const _GKCommNatMain0Key
|| __DATA_CONST.__const _GKCommNatMain1Key
|| __DATA_CONST.__const _GKConnectingDevicesTime
|| __DATA_CONST.__const _GKConnectionBlobMaxBytesKey
|| __DATA_CONST.__const _GKContextChallenge
|| __DATA_CONST.__const _GKContextFriendsGames
|| __DATA_CONST.__const _GKContextGameRecommendations
|| __DATA_CONST.__const _GKContextInvite
|| __DATA_CONST.__const _GKContextLocalGames
|| __DATA_CONST.__const _GKContextTopGames
|| __DATA_CONST.__const _GKCurrentEnvironmentKey
|| __DATA_CONST.__const _GKCustomTournamentAccept
|| __DATA_CONST.__const _GKCustomTournamentAddCreator
|| __DATA_CONST.__const _GKCustomTournamentAddInvitees
|| __DATA_CONST.__const _GKCustomTournamentCreate
|| __DATA_CONST.__const _GKCustomTournamentDecline
|| __DATA_CONST.__const _GKCustomTournamentRemoveCreator
|| __DATA_CONST.__const _GKCustomTournamentRemoveInvitees
|| __DATA_CONST.__const _GKDaemonIdentifier
|| __DATA_CONST.__const _GKDashboardAchievementDetail
|| __DATA_CONST.__const _GKDashboardAchievementList
|| __DATA_CONST.__const _GKDashboardChallengeChicletNeedsUpdate
|| __DATA_CONST.__const _GKDashboardChallengeDetail
|| __DATA_CONST.__const _GKDashboardChallengeList
|| __DATA_CONST.__const _GKDashboardFriendScoreDetail
|| __DATA_CONST.__const _GKDashboardFriendsOnScoreList
|| __DATA_CONST.__const _GKDashboardLeaderboardList
|| __DATA_CONST.__const _GKDashboardMeScoreDetail
|| __DATA_CONST.__const _GKDashboardOthersScoreDetail
|| __DATA_CONST.__const _GKDashboardRankOnFriendScoreDetail
|| __DATA_CONST.__const _GKDashboardRankOnMeScoreDetail
|| __DATA_CONST.__const _GKDashboardRankOnOthersScoreDetail
|| __DATA_CONST.__const _GKDashboardRankOnShareFriendScore
|| __DATA_CONST.__const _GKDashboardRankOnShareMeScore
|| __DATA_CONST.__const _GKDashboardScoreList
|| __DATA_CONST.__const _GKDashboardShareAchievement
|| __DATA_CONST.__const _GKDashboardShareFriendScore
|| __DATA_CONST.__const _GKDashboardShareMeScore
|| __DATA_CONST.__const _GKDeclineGameInviteNotification
|| __DATA_CONST.__const _GKDeclineReasonKey
|| __DATA_CONST.__const _GKDeclinedCannotConnect
|| __DATA_CONST.__const _GKDeclinedDoNotDisturb
|| __DATA_CONST.__const _GKDeclinedIncompatible
|| __DATA_CONST.__const _GKDeclinedNoAnswer
|| __DATA_CONST.__const _GKDeclinedUnknown
|| __DATA_CONST.__const _GKDeclinedUser
|| __DATA_CONST.__const _GKDefaultAliasKey
|| __DATA_CONST.__const _GKDefaultContainer
|| __DATA_CONST.__const _GKDefaultIForgotURL
|| __DATA_CONST.__const _GKEditAccountURLKey
|| __DATA_CONST.__const _GKEmailAddressesKey
|| __DATA_CONST.__const _GKEmailKey
|| __DATA_CONST.__const _GKErrorInvalidRecipient
|| __DATA_CONST.__const _GKErrorMessageKey
|| __DATA_CONST.__const _GKErrorUnderlyingErrors
|| __DATA_CONST.__const _GKExchangeDataMaximumSize
|| __DATA_CONST.__const _GKExchangeMaxPerPlayer
|| __DATA_CONST.__const _GKFindGamesKey
|| __DATA_CONST.__const _GKFindableKey
|| __DATA_CONST.__const _GKFirstNameKey
|| __DATA_CONST.__const _GKFriendBiDirectionalKey
|| __DATA_CONST.__const _GKFriendInviteViewedByReceiver
|| __DATA_CONST.__const _GKFriendLevelKey
|| __DATA_CONST.__const _GKFriendPlayedNearby
|| __DATA_CONST.__const _GKFriendPlayedNearbyKey
|| __DATA_CONST.__const _GKFriendPlayedWith
|| __DATA_CONST.__const _GKFriendPlayedWithKey
|| __DATA_CONST.__const _GKFriendRequestAccepted
|| __DATA_CONST.__const _GKFriendRequestAliasResults
|| __DATA_CONST.__const _GKFriendRequestAliases
|| __DATA_CONST.__const _GKFriendRequestCancelSending
|| __DATA_CONST.__const _GKFriendRequestCancelled
|| __DATA_CONST.__const _GKFriendRequestCannotSendError
|| __DATA_CONST.__const _GKFriendRequestCreated
|| __DATA_CONST.__const _GKFriendRequestEmail
|| __DATA_CONST.__const _GKFriendRequestEmailAddressResults
|| __DATA_CONST.__const _GKFriendRequestEmailAddresses
|| __DATA_CONST.__const _GKFriendRequestExpiredError
|| __DATA_CONST.__const _GKFriendRequestExtensionIdentifier
|| __DATA_CONST.__const _GKFriendRequestFacebookIDs
|| __DATA_CONST.__const _GKFriendRequestFacebookResults
|| __DATA_CONST.__const _GKFriendRequestFailSending
|| __DATA_CONST.__const _GKFriendRequestGroupRecipientError
|| __DATA_CONST.__const _GKFriendRequestMessage
|| __DATA_CONST.__const _GKFriendRequestMessengerIDs
|| __DATA_CONST.__const _GKFriendRequestMessengerResults
|| __DATA_CONST.__const _GKFriendRequestOpenSettings
|| __DATA_CONST.__const _GKFriendRequestPhoneNumberResults
|| __DATA_CONST.__const _GKFriendRequestPhoneNumbers
|| __DATA_CONST.__const _GKFriendRequestPlayerIDResults
|| __DATA_CONST.__const _GKFriendRequestPlayerIDs
|| __DATA_CONST.__const _GKFriendRequestPurpleBuddyAccount
|| __DATA_CONST.__const _GKFriendRequestPushAcceptorID
|| __DATA_CONST.__const _GKFriendRequestPushCount
|| __DATA_CONST.__const _GKFriendRequestPushHandle
|| __DATA_CONST.__const _GKFriendRequestPushMessage
|| __DATA_CONST.__const _GKFriendRequestPushOriginatorEmail
|| __DATA_CONST.__const _GKFriendRequestPushOriginatorID
|| __DATA_CONST.__const _GKFriendRequestPushRecipient
|| __DATA_CONST.__const _GKFriendRequestPushRecipientID
|| __DATA_CONST.__const _GKFriendRequestPushRecipientKind
|| __DATA_CONST.__const _GKFriendRequestPushRequestID
|| __DATA_CONST.__const _GKFriendRequestRestrictedError
|| __DATA_CONST.__const _GKFriendRequestSent
|| __DATA_CONST.__const _GKFriendRequestTwitterResults
|| __DATA_CONST.__const _GKFriendRequestTwitterScreenNames
|| __DATA_CONST.__const _GKFriendRequestURL
|| __DATA_CONST.__const _GKFriendRequestURLContactID
|| __DATA_CONST.__const _GKFriendRequestURLFriendCode
|| __DATA_CONST.__const _GKFriendRequestURLSenderAlias
|| __DATA_CONST.__const _GKFriendRequestURLSenderHandle
|| __DATA_CONST.__const _GKFriendRequestURLZippedData
|| __DATA_CONST.__const _GKFriendSupportPageURL
|| __DATA_CONST.__const _GKFriendTypeAll
|| __DATA_CONST.__const _GKFriendTypeBiDirectional
|| __DATA_CONST.__const _GKGKTester2Identifier
|| __DATA_CONST.__const _GKGameCenterBagForAppStore
|| __DATA_CONST.__const _GKGameCenterBundleVersion
|| __DATA_CONST.__const _GKGameCenterDarwinTestIdentifier
|| __DATA_CONST.__const _GKGameCenterDashboardIdentifier
|| __DATA_CONST.__const _GKGameCenterIdentifier
|| __DATA_CONST.__const _GKGameCenterMessageExtensionIdentifier
|| __DATA_CONST.__const _GKGameCenterProfileVersion
|| __DATA_CONST.__const _GKGameCenterRemoteAlertIdentifier
|| __DATA_CONST.__const _GKGameCenterRemoteAlertViewControllerClassName
|| __DATA_CONST.__const _GKGameCenterTestToolIdentifier
|| __DATA_CONST.__const _GKGameCenterTodayWidgetIdentifier
|| __DATA_CONST.__const _GKGameCenterToolIdentifier
|| __DATA_CONST.__const _GKGameCenterUIServiceIdentifier
|| __DATA_CONST.__const _GKGameDescriptorKey
|| __DATA_CONST.__const _GKGameInstalledGamesDidChangeNotification
|| __DATA_CONST.__const _GKGameKitTesterIdentifier
|| __DATA_CONST.__const _GKGameLayerDashboardAchievements
|| __DATA_CONST.__const _GKGameLayerDashboardAchievementsDeepLink
|| __DATA_CONST.__const _GKGameLayerDashboardAggrigateChicletTap
|| __DATA_CONST.__const _GKGameLayerDashboardArcade
|| __DATA_CONST.__const _GKGameLayerDashboardChallenges
|| __DATA_CONST.__const _GKGameLayerDashboardChallengesDeepLink
|| __DATA_CONST.__const _GKGameLayerDashboardLeaderboardChicletTapped
|| __DATA_CONST.__const _GKGameLayerDashboardLeaderboardScores
|| __DATA_CONST.__const _GKGameLayerDashboardLeaderboardSets
|| __DATA_CONST.__const _GKGameLayerDashboardLeaderboards
|| __DATA_CONST.__const _GKGameLayerDashboardLeaderboardsDeepLink
|| __DATA_CONST.__const _GKGameLayerDashboardLocalPlayerProfile
|| __DATA_CONST.__const _GKGameLayerDashboardMainScreen
|| __DATA_CONST.__const _GKGameLayerDashboardOccurrenceChangedToCurrent
|| __DATA_CONST.__const _GKGameLayerDashboardOccurrenceChangedToPrevious
|| __DATA_CONST.__const _GKGameLayerDashboardPlayerScopeChangedToFriends
|| __DATA_CONST.__const _GKGameLayerDashboardPlayerScopeChangedToGlobal
|| __DATA_CONST.__const _GKGameLayerDashboardPlayerScopeChangedToRecents
|| __DATA_CONST.__const _GKGameLayerDashboardProfileDeepLink
|| __DATA_CONST.__const _GKGameLayerDashboardScoresDeepLink
|| __DATA_CONST.__const _GKGameLayerDashboardScoresViewPlayerChallenged
|| __DATA_CONST.__const _GKGameLayerDashboardScoresViewPlayerProfileViewed
|| __DATA_CONST.__const _GKGameLayerDashboardScoresViewScoreShared
|| __DATA_CONST.__const _GKGameLayerDashboardScoresViewScrolledToTop
|| __DATA_CONST.__const _GKGameLayerDashboardTimeScopeChangedToAllTime
|| __DATA_CONST.__const _GKGameLayerDashboardTimeScopeChangedToToday
|| __DATA_CONST.__const _GKGameLayerDashboardTimeScopeChangedToWeek
|| __DATA_CONST.__const _GKGameLayerDashboardTimeSpentOnAchievementsScreen
|| __DATA_CONST.__const _GKGameLayerDashboardTimeSpentOnArcadeScreen
|| __DATA_CONST.__const _GKGameLayerDashboardTimeSpentOnChallengesScreen
|| __DATA_CONST.__const _GKGameLayerDashboardTimeSpentOnLeaderboardsScreen
|| __DATA_CONST.__const _GKGameLayerDashboardTimeSpentOnMainScreen
|| __DATA_CONST.__const _GKGameLayerDashboardTimeSpentOnPlayerProfileScreen
|| __DATA_CONST.__const _GKGameMetadataKey
|| __DATA_CONST.__const _GKGamePlayerIDKey
|| __DATA_CONST.__const _GKGameScopedIDPrefix
|| __DATA_CONST.__const _GKGetGamesPlayedDescriptorsWithinSecondsKey
|| __DATA_CONST.__const _GKGetGamesPlayedMetadataWithinSecondsKey
|| __DATA_CONST.__const _GKGlobalFriendListAccessAllowed
|| __DATA_CONST.__const _GKGlobalFriendListAccessDenied
|| __DATA_CONST.__const _GKGlobalFriendListAccessKey
|| __DATA_CONST.__const _GKGlobalFriendListAccessUndetermined
|| __DATA_CONST.__const _GKHTTPShouldUsePipelining
|| __DATA_CONST.__const _GKHideFriendRecommendationSendContactsButtonKey
|| __DATA_CONST.__const _GKICETimeoutKey
|| __DATA_CONST.__const _GKIDSLookupPushResponsePlayerID
|| __DATA_CONST.__const _GKIDSLookupPushSenderCloudID
|| __DATA_CONST.__const _GKIForgotURLKey
|| __DATA_CONST.__const _GKIMDPersistenceIdentifier
|| __DATA_CONST.__const _GKImportFriendsKey
|| __DATA_CONST.__const _GKInfoPlistKeyFriendsAPIUsageDescription
|| __DATA_CONST.__const _GKInitiatedGameInviteToThisFriend
|| __DATA_CONST.__const _GKInitiatedGameInviteToThisFriendKey
|| __DATA_CONST.__const _GKInternalTurnBasedGameEventNotification
|| __DATA_CONST.__const _GKInternetAccountsIdentifier
|| __DATA_CONST.__const _GKInvitableKey
|| __DATA_CONST.__const _GKInviteAccepted
|| __DATA_CONST.__const _GKInviteAdamIDKey
|| __DATA_CONST.__const _GKInviteCompatibleShortVersionsKey
|| __DATA_CONST.__const _GKInviteCompatibleVersionsKey
|| __DATA_CONST.__const _GKInviteFlowCancelAutomatching
|| __DATA_CONST.__const _GKInviteFlowComposeCancel
|| __DATA_CONST.__const _GKInviteFlowConnectingCancel
|| __DATA_CONST.__const _GKInviteFlowContactsPlayer
|| __DATA_CONST.__const _GKInviteFlowDetailAdd
|| __DATA_CONST.__const _GKInviteFlowDetailCancel
|| __DATA_CONST.__const _GKInviteFlowDetailSelection
|| __DATA_CONST.__const _GKInviteFlowFastStartCouldNotBeUsed
|| __DATA_CONST.__const _GKInviteFlowFastStartUsed
|| __DATA_CONST.__const _GKInviteFlowFriendPlayer
|| __DATA_CONST.__const _GKInviteFlowGameSupportsFastStart
|| __DATA_CONST.__const _GKInviteFlowInitialCancel
|| __DATA_CONST.__const _GKInviteFlowInviteFriends
|| __DATA_CONST.__const _GKInviteFlowLaunchPickerToInviteAdditionalPlayers
|| __DATA_CONST.__const _GKInviteFlowMessageBasedInvites
|| __DATA_CONST.__const _GKInviteFlowNearByPlayer
|| __DATA_CONST.__const _GKInviteFlowPlayNow
|| __DATA_CONST.__const _GKInviteFlowPushedBasedInvites
|| __DATA_CONST.__const _GKInviteFlowRTGameFailed
|| __DATA_CONST.__const _GKInviteFlowRTInviteeConnectionTime
|| __DATA_CONST.__const _GKInviteFlowRTNoOfInvitees
|| __DATA_CONST.__const _GKInviteFlowRemoveInvitedPlayer
|| __DATA_CONST.__const _GKInviteFlowSendMessage
|| __DATA_CONST.__const _GKInviteFlowStart
|| __DATA_CONST.__const _GKInviteFlowTypedInContacts
|| __DATA_CONST.__const _GKInviteGameIDKey
|| __DATA_CONST.__const _GKInviteGameVersionKey
|| __DATA_CONST.__const _GKInviteIDKey
|| __DATA_CONST.__const _GKInviteIsReinvite
|| __DATA_CONST.__const _GKInviteMessageKey
|| __DATA_CONST.__const _GKInviteOriginatorPlayerKey
|| __DATA_CONST.__const _GKInvitePeerBlobKey
|| __DATA_CONST.__const _GKInvitePeerNATIPKey
|| __DATA_CONST.__const _GKInvitePeerNATTypeKey
|| __DATA_CONST.__const _GKInviteProtocolName
|| __DATA_CONST.__const _GKInviteeUILaunchTime
|| __DATA_CONST.__const _GKIsFriendKey
|| __DATA_CONST.__const _GKLastNameKey
|| __DATA_CONST.__const _GKLastPlayedBundleIDKey
|| __DATA_CONST.__const _GKLastPlayedBundleVersionKey
|| __DATA_CONST.__const _GKLastPlayedGameIDKey
|| __DATA_CONST.__const _GKLastPlayedTimeKey
|| __DATA_CONST.__const _GKLastProtocolVersionUsedKey
|| __DATA_CONST.__const _GKLastSeenTimestamp
|| __DATA_CONST.__const _GKLeaderboardTimeScopeKey
|| __DATA_CONST.__const _GKLoginAppInit
|| __DATA_CONST.__const _GKLoginSignIn
|| __DATA_CONST.__const _GKLoginSignOut
|| __DATA_CONST.__const _GKLookupKeyProfileGameCenterLink
|| __DATA_CONST.__const _GKMatchClientDataKey
|| __DATA_CONST.__const _GKMatchPushTokenKey
|| __DATA_CONST.__const _GKMatchmakerExtensionIdentifier
|| __DATA_CONST.__const _GKMatchmakerMatchRID
|| __DATA_CONST.__const _GKMatchmakerProtocolName
|| __DATA_CONST.__const _GKMaxGameStateSizeTurnBased
|| __DATA_CONST.__const _GKMaxPlayersHosted
|| __DATA_CONST.__const _GKMaxPlayersP2P
|| __DATA_CONST.__const _GKMaxPlayersTurnBased
|| __DATA_CONST.__const _GKMaxRecentPlayersCount
|| __DATA_CONST.__const _GKMaxRecentPlayersTime
|| __DATA_CONST.__const _GKMessageInviteInitiate
|| __DATA_CONST.__const _GKMessageInviteProcessingTime
|| __DATA_CONST.__const _GKMessagesIndentifier
|| __DATA_CONST.__const _GKMetricsEventAdamID
|| __DATA_CONST.__const _GKMetricsEventAnalyticsClientID
|| __DATA_CONST.__const _GKMetricsEventApp
|| __DATA_CONST.__const _GKMetricsEventAppVersion
|| __DATA_CONST.__const _GKMetricsEventBaseVersion
|| __DATA_CONST.__const _GKMetricsEventCanaryIdentifier
|| __DATA_CONST.__const _GKMetricsEventCategory
|| __DATA_CONST.__const _GKMetricsEventClick
|| __DATA_CONST.__const _GKMetricsEventClientBuildType
|| __DATA_CONST.__const _GKMetricsEventClientEventId
|| __DATA_CONST.__const _GKMetricsEventConnection
|| __DATA_CONST.__const _GKMetricsEventDSID
|| __DATA_CONST.__const _GKMetricsEventDialog
|| __DATA_CONST.__const _GKMetricsEventEnter
|| __DATA_CONST.__const _GKMetricsEventExit
|| __DATA_CONST.__const _GKMetricsEventHardwareFamily
|| __DATA_CONST.__const _GKMetricsEventHardwareModel
|| __DATA_CONST.__const _GKMetricsEventImpressions
|| __DATA_CONST.__const _GKMetricsEventIsSignedIn
|| __DATA_CONST.__const _GKMetricsEventOS
|| __DATA_CONST.__const _GKMetricsEventOsBuildNumber
|| __DATA_CONST.__const _GKMetricsEventOsVersion
|| __DATA_CONST.__const _GKMetricsEventPage
|| __DATA_CONST.__const _GKMetricsEventPageContext
|| __DATA_CONST.__const _GKMetricsEventPageDetails
|| __DATA_CONST.__const _GKMetricsEventPageId
|| __DATA_CONST.__const _GKMetricsEventPageType
|| __DATA_CONST.__const _GKMetricsEventRefApp
|| __DATA_CONST.__const _GKMetricsEventResourceRevNum
|| __DATA_CONST.__const _GKMetricsEventSchemaVersion
|| __DATA_CONST.__const _GKMetricsEventSchemaVersionNumber
|| __DATA_CONST.__const _GKMetricsEventSearch
|| __DATA_CONST.__const _GKMetricsEventStoreFrontHeader
|| __DATA_CONST.__const _GKMetricsEventTargetId
|| __DATA_CONST.__const _GKMetricsEventTargetType
|| __DATA_CONST.__const _GKMetricsEventTime
|| __DATA_CONST.__const _GKMetricsEventTimezoneOffset
|| __DATA_CONST.__const _GKMetricsEventType
|| __DATA_CONST.__const _GKMetricsEventVersion
|| __DATA_CONST.__const _GKMetricsEventXpPostFrequency
|| __DATA_CONST.__const _GKMetricsEventXpSendMethod
|| __DATA_CONST.__const _GKMetricsThrottlePercent
|| __DATA_CONST.__const _GKMultiplayerAllowedTypeReceivedNotification
|| __DATA_CONST.__const _GKMultiplayerContext
|| __DATA_CONST.__const _GKMultiplayerFriendSelectionImpression
|| __DATA_CONST.__const _GKMultiplayerLobbyImpression
|| __DATA_CONST.__const _GKMultiplayerMainLandingImpression
|| __DATA_CONST.__const _GKNATTimeoutKey
|| __DATA_CONST.__const _GKNATTypeKey
|| __DATA_CONST.__const _GKNearbyDataReceivedNotification
|| __DATA_CONST.__const _GKNearbyEnabledKey
|| __DATA_CONST.__const _GKNearbyInviteInitiate
|| __DATA_CONST.__const _GKNearbyPlayerFoundNotification
|| __DATA_CONST.__const _GKNearbyPlayerLostNotification
|| __DATA_CONST.__const _GKNetworkRequestCount
|| __DATA_CONST.__const _GKNetworkRequestFailure
|| __DATA_CONST.__const _GKNumberOfAchievementPointsKey
|| __DATA_CONST.__const _GKNumberOfAchievementsKey
|| __DATA_CONST.__const _GKNumberOfFriendsInCommonKey
|| __DATA_CONST.__const _GKNumberOfFriendsKey
|| __DATA_CONST.__const _GKNumberOfGamesInCommonKey
|| __DATA_CONST.__const _GKNumberOfGamesPlayedKey
|| __DATA_CONST.__const _GKParticipantIndexKey
|| __DATA_CONST.__const _GKParticipantStatusAllTrace
|| __DATA_CONST.__const _GKParticipantStatusFailureTrace
|| __DATA_CONST.__const _GKParticipantStatusKey
|| __DATA_CONST.__const _GKPhotoPendingKey
|| __DATA_CONST.__const _GKPhotoURLsKey
|| __DATA_CONST.__const _GKPhotosChangedKey
|| __DATA_CONST.__const _GKPickerAddCustomMessage
|| __DATA_CONST.__const _GKPickerExpandPlayerGroup
|| __DATA_CONST.__const _GKPickerGameCenterGroupSelected
|| __DATA_CONST.__const _GKPickerMessageGroupSelected
|| __DATA_CONST.__const _GKPickerNearbyPlayerSelected
|| __DATA_CONST.__const _GKPickerSearchBarClicked
|| __DATA_CONST.__const _GKPickerSearchForPlayers
|| __DATA_CONST.__const _GKPickerSelectPlayersFromSearchResults
|| __DATA_CONST.__const _GKPineboardIdentifier
|| __DATA_CONST.__const _GKPlayerDescriptorKey
|| __DATA_CONST.__const _GKPlayerDidAuthenticateNewPlayerIDKey
|| __DATA_CONST.__const _GKPlayerDidAuthenticateNotificationKeyPlayersSignedIn
|| __DATA_CONST.__const _GKPlayerDidAuthenticateNotificationKeyPlayersSignedOut
|| __DATA_CONST.__const _GKPlayerDidAuthenticateOldPlayerIDKey
|| __DATA_CONST.__const _GKPlayerIDHashAddKey
|| __DATA_CONST.__const _GKPlayerIDHashModKey
|| __DATA_CONST.__const _GKPlayerIDKey
|| __DATA_CONST.__const _GKPlayerIDNoLongerAvailable
|| __DATA_CONST.__const _GKPlayerProfileAchievementsByGameClicked
|| __DATA_CONST.__const _GKPlayerProfileAddFriendsClicked
|| __DATA_CONST.__const _GKPlayerProfileFriendListAccessClicked
|| __DATA_CONST.__const _GKPlayerProfileFriendRequstsClicked
|| __DATA_CONST.__const _GKPlayerProfileFriendsAPICheckAuthorizationStatusCalled
|| __DATA_CONST.__const _GKPlayerProfileFriendsAPIDeveloperAccessRestricted
|| __DATA_CONST.__const _GKPlayerProfileFriendsAPIGlobalAccessToggled
|| __DATA_CONST.__const _GKPlayerProfileFriendsAPIIndividualAccessToggled
|| __DATA_CONST.__const _GKPlayerProfileFriendsAPILoadFriendsListCalled
|| __DATA_CONST.__const _GKPlayerProfileFriendsAPILoadFriendsListCount
|| __DATA_CONST.__const _GKPlayerProfileFriendsListClicked
|| __DATA_CONST.__const _GKPlayerProfileNearbyPlayersButtonToggled
|| __DATA_CONST.__const _GKPlayerProfilePrivacyAndSettingsClicked
|| __DATA_CONST.__const _GKPlayerProfilePrivacyClicked
|| __DATA_CONST.__const _GKPlayerProfileRecentlyPlayedWithClicked
|| __DATA_CONST.__const _GKPlayerProfileSettingsClicked
|| __DATA_CONST.__const _GKPlayerProfileSignInButtonClicked
|| __DATA_CONST.__const _GKPlayerProfileSignOutButtonClicked
|| __DATA_CONST.__const _GKPlayerProfileVisitFromOrigin
|| __DATA_CONST.__const _GKPlayerStatusKey
|| __DATA_CONST.__const _GKPlayersToInviteNotification
|| __DATA_CONST.__const _GKPredicatePrefix
|| __DATA_CONST.__const _GKPreferencesIdentifier
|| __DATA_CONST.__const _GKPrimaryCredentialDidChangeNotification
|| __DATA_CONST.__const _GKPrivacySettingsAchievementsKey
|| __DATA_CONST.__const _GKPrivacySettingsFriendsKey
|| __DATA_CONST.__const _GKPrivacySettingsGamesPlayedKey
|| __DATA_CONST.__const _GKPrivacySettingsKey
|| __DATA_CONST.__const _GKProgramaticInviteTime
|| __DATA_CONST.__const _GKPropertyListAchievementsCanReplayKey
|| __DATA_CONST.__const _GKPropertyListAchievementsEarnedDescriptionKey
|| __DATA_CONST.__const _GKPropertyListAchievementsHiddenUntilSubmittedKey
|| __DATA_CONST.__const _GKPropertyListAchievementsIconImageNameKey
|| __DATA_CONST.__const _GKPropertyListAchievementsIdentifierAliasesKey
|| __DATA_CONST.__const _GKPropertyListAchievementsIdentifierKey
|| __DATA_CONST.__const _GKPropertyListAchievementsKey
|| __DATA_CONST.__const _GKPropertyListAchievementsMaximumPointsKey
|| __DATA_CONST.__const _GKPropertyListAchievementsNameKey
|| __DATA_CONST.__const _GKPropertyListAchievementsUnearnedDescriptionKey
|| __DATA_CONST.__const _GKPropertyListContainerIdentifierKey
|| __DATA_CONST.__const _GKPropertyListDashboardImagesKey
|| __DATA_CONST.__const _GKPropertyListDashboardImagesLogoImageNameKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardDefaultIdentifierKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardSetsIconImageNameKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardSetsIdentifierAliasesKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardSetsIdentifierKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardSetsKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardSetsLeaderboardsKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardSetsLeaderboardsLeaderboardIdentifierKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardSetsLeaderboardsNameKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardSetsNameKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardSetsPosterImageNameKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsCombinesLeaderboardsKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsCombinesLeaderboardsLeaderboardIdentifierKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsIconImageNameKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsIdentifierAliasesKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsIdentifierKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsNameKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsPosterImageNameKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreFormatStringKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreMaximumValueKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreMinimumValueKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreSortOrderHighToLowKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreSortOrderKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreSortOrderLowToHighKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreSubmissionTypeBestKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreSubmissionTypeKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreSubmissionTypeMostRecentKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreValueFormatIntegerKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreValueFormatKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreValueFormatMoneyKey
|| __DATA_CONST.__const _GKPropertyListLeaderboardsScoreValueFormatTimeKey
|| __DATA_CONST.__const _GKPropertyListMultiplayerCompatibleGamesBundleIdentifierKey
|| __DATA_CONST.__const _GKPropertyListMultiplayerCompatibleGamesBundleVersionsKey
|| __DATA_CONST.__const _GKPropertyListMultiplayerCompatibleGamesKey
|| __DATA_CONST.__const _GKPropertyListPropertyListVersionKey
|| __DATA_CONST.__const _GKPurpleBuddyIdentifier
|| __DATA_CONST.__const _GKPushCommandKey
|| __DATA_CONST.__const _GKPushDataKey
|| __DATA_CONST.__const _GKPushEnvironmentKey
|| __DATA_CONST.__const _GKPushFriendsAuthorizationStatus
|| __DATA_CONST.__const _GKPushInviteInitiate
|| __DATA_CONST.__const _GKPushProtocolKey
|| __DATA_CONST.__const _GKPushTokenKey
|| __DATA_CONST.__const _GKQueryParamsBagKey
|| __DATA_CONST.__const _GKRTAllConnectionAttempt
|| __DATA_CONST.__const _GKRTAllMatchSuccess
|| __DATA_CONST.__const _GKRTAllMatchTotal
|| __DATA_CONST.__const _GKRTAutoMatchSuccess
|| __DATA_CONST.__const _GKRTAutoMatchTotal
|| __DATA_CONST.__const _GKRTConnectionSuccessP2P
|| __DATA_CONST.__const _GKRTConnectionSuccessRelay
|| __DATA_CONST.__const _GKRTIndirectMatchSuccess
|| __DATA_CONST.__const _GKRTIndirectMatchTotal
|| __DATA_CONST.__const _GKRTMessageBasedMatchSuccess
|| __DATA_CONST.__const _GKRTMessageBasedMatchTotal
|| __DATA_CONST.__const _GKRTNearbyMatchSuccess
|| __DATA_CONST.__const _GKRTNearbyMatchTotal
|| __DATA_CONST.__const _GKRTPushBasedMatchSuccess
|| __DATA_CONST.__const _GKRTPushBasedMatchTotal
|| __DATA_CONST.__const _GKRealtimeMatchFromAPI
|| __DATA_CONST.__const _GKRealtimeMatchFromGameCenterUI
|| __DATA_CONST.__const _GKRealtimeMatchPersistenceTime
|| __DATA_CONST.__const _GKReceiverTappedViewPlayerProfileButton
|| __DATA_CONST.__const _GKRejectFriendRequestIDs
|| __DATA_CONST.__const _GKRelayNotification
|| __DATA_CONST.__const _GKRemoteAlertUserInfoHostPIDKey
|| __DATA_CONST.__const _GKRemoteAlertUserInfoSerializedGameKey
|| __DATA_CONST.__const _GKRemoteUIAuthorizeAccountURLKey
|| __DATA_CONST.__const _GKRemoteUIChangePasswordURLKey
|| __DATA_CONST.__const _GKRemoteUIEditAccountURLKey
|| __DATA_CONST.__const _GKRemoteUIGCTermsURLKey
|| __DATA_CONST.__const _GKRemoteUILinkAccountsURLKey
|| __DATA_CONST.__const _GKRemoteUIReportProblemURLKey
|| __DATA_CONST.__const _GKReportProblemURLKey
|| __DATA_CONST.__const _GKReporterAMSAccessPointButtonTapped
|| __DATA_CONST.__const _GKReporterAccessPointAchievementHighlightTapped
|| __DATA_CONST.__const _GKReporterAccessPointButtonTapped
|| __DATA_CONST.__const _GKReporterAccessPointDisabled
|| __DATA_CONST.__const _GKReporterAccessPointEnabled
|| __DATA_CONST.__const _GKReporterAccessPointForYouHighlightTapped
|| __DATA_CONST.__const _GKReporterAccessPointHighlightTapped
|| __DATA_CONST.__const _GKReporterAccessPointLeaderboardHighlightTapped
|| __DATA_CONST.__const _GKReporterAccessPointShowHighlightsDisabled
|| __DATA_CONST.__const _GKReporterAccessPointShowHighlightsEnabled
|| __DATA_CONST.__const _GKReporterCSTopic
|| __DATA_CONST.__const _GKReporterChallengeAbort
|| __DATA_CONST.__const _GKReporterChallengeIssue
|| __DATA_CONST.__const _GKReporterDomainArcadeDashboard
|| __DATA_CONST.__const _GKReporterDomainArcadeForYouTapped
|| __DATA_CONST.__const _GKReporterDomainArcadeNewArcadeGamesTapped
|| __DATA_CONST.__const _GKReporterDomainArcadeOpenInTheAppStoreTapped
|| __DATA_CONST.__const _GKReporterDomainArcadeSeeAllFriendsPlayingTapped
|| __DATA_CONST.__const _GKReporterDomainChallenge
|| __DATA_CONST.__const _GKReporterDomainCustomTournamentAction
|| __DATA_CONST.__const _GKReporterDomainCustomTournamentResponse
|| __DATA_CONST.__const _GKReporterDomainDashboard
|| __DATA_CONST.__const _GKReporterDomainDashboardAccessPoint
|| __DATA_CONST.__const _GKReporterDomainFriendRequestInbox
|| __DATA_CONST.__const _GKReporterDomainFriendRequestInboxAccept
|| __DATA_CONST.__const _GKReporterDomainFriendRequestInboxContactsSwitchOff
|| __DATA_CONST.__const _GKReporterDomainFriendRequestInboxContactsSwitchOn
|| __DATA_CONST.__const _GKReporterDomainFriendRequestInboxDecline
|| __DATA_CONST.__const _GKReporterDomainFriendRequestInboxFriendRequestCount
|| __DATA_CONST.__const _GKReporterDomainGameControllerSupport
|| __DATA_CONST.__const _GKReporterDomainGameDetail
|| __DATA_CONST.__const _GKReporterDomainGameLayerDashboard
|| __DATA_CONST.__const _GKReporterDomainImprovedFriendingUIInteractions
|| __DATA_CONST.__const _GKReporterDomainInvite
|| __DATA_CONST.__const _GKReporterDomainInviteFlow
|| __DATA_CONST.__const _GKReporterDomainInviteInitiateType
|| __DATA_CONST.__const _GKReporterDomainInviteNearbyResponse
|| __DATA_CONST.__const _GKReporterDomainInviteParticipantStatusUpdate
|| __DATA_CONST.__const _GKReporterDomainInviteReceivedTime
|| __DATA_CONST.__const _GKReporterDomainLogin
|| __DATA_CONST.__const _GKReporterDomainManualFriending
|| __DATA_CONST.__const _GKReporterDomainMatch
|| __DATA_CONST.__const _GKReporterDomainMultiplayerContactSelected
|| __DATA_CONST.__const _GKReporterDomainMultiplayerFriendSelected
|| __DATA_CONST.__const _GKReporterDomainMultiplayerNearbySelected
|| __DATA_CONST.__const _GKReporterDomainMultiplayerPlayerSelectionDashboard
|| __DATA_CONST.__const _GKReporterDomainMultiplayerRecentlyPlayedWithSelected
|| __DATA_CONST.__const _GKReporterDomainNetworkRequests
|| __DATA_CONST.__const _GKReporterDomainOnboardingEvent
|| __DATA_CONST.__const _GKReporterDomainPlayerAuthentication
|| __DATA_CONST.__const _GKReporterDomainPlayerProfileDashboard
|| __DATA_CONST.__const _GKReporterDomainPushCount
|| __DATA_CONST.__const _GKReporterDomainRTMultiplayerConnectionResult
|| __DATA_CONST.__const _GKReporterDomainRTMultiplayerConnectionType
|| __DATA_CONST.__const _GKReporterDomainRelay
|| __DATA_CONST.__const _GKReporterDomainSettings
|| __DATA_CONST.__const _GKReporterDomainTournamentAction
|| __DATA_CONST.__const _GKReporterDomainTournamentView
|| __DATA_CONST.__const _GKReporterDomainTurnBased
|| __DATA_CONST.__const _GKReporterGameControllerConnected
|| __DATA_CONST.__const _GKReporterGameControllerUsedInGameLayer
|| __DATA_CONST.__const _GKReporterGameControllerUsedToShowDashboard
|| __DATA_CONST.__const _GKReporterGameDetailShowStorePage
|| __DATA_CONST.__const _GKReporterGameMetadata
|| __DATA_CONST.__const _GKReporterHighlightedAccessPointDisplayed
|| __DATA_CONST.__const _GKReporterInviteAcceptApp
|| __DATA_CONST.__const _GKReporterInviteAcceptNearby
|| __DATA_CONST.__const _GKReporterInviteAcceptUser
|| __DATA_CONST.__const _GKReporterInviteCancel
|| __DATA_CONST.__const _GKReporterInviteCancelNearby
|| __DATA_CONST.__const _GKReporterInviteDeclineCantConnect
|| __DATA_CONST.__const _GKReporterInviteDeclineDoNotDisturb
|| __DATA_CONST.__const _GKReporterInviteDeclineIncompatible
|| __DATA_CONST.__const _GKReporterInviteDeclineNearby
|| __DATA_CONST.__const _GKReporterInviteDeclineNoAnswer
|| __DATA_CONST.__const _GKReporterInviteDeclineUser
|| __DATA_CONST.__const _GKReporterInviteFail
|| __DATA_CONST.__const _GKReporterInviteInitiate
|| __DATA_CONST.__const _GKReporterInviteInitiateNearby
|| __DATA_CONST.__const _GKReporterInviteUninvite
|| __DATA_CONST.__const _GKReporterKeyAdamID
|| __DATA_CONST.__const _GKReporterKeyBundleID
|| __DATA_CONST.__const _GKReporterKeyButton
|| __DATA_CONST.__const _GKReporterKeyChiclet
|| __DATA_CONST.__const _GKReporterKeyCount
|| __DATA_CONST.__const _GKReporterKeyEventType
|| __DATA_CONST.__const _GKReporterKeyFriendCount
|| __DATA_CONST.__const _GKReporterKeyFriendsPlayedThisGame
|| __DATA_CONST.__const _GKReporterKeyInboxFriendRequestCount
|| __DATA_CONST.__const _GKReporterKeyInviteeCount
|| __DATA_CONST.__const _GKReporterKeyReplayCount
|| __DATA_CONST.__const _GKReporterKeyScoreRank
|| __DATA_CONST.__const _GKReporterKeyTimeSpan
|| __DATA_CONST.__const _GKReporterKeyTournamentID
|| __DATA_CONST.__const _GKReporterKeyTournamentType
|| __DATA_CONST.__const _GKReporterMatchAdd
|| __DATA_CONST.__const _GKReporterMatchAddHosted
|| __DATA_CONST.__const _GKReporterMatchCancel
|| __DATA_CONST.__const _GKReporterMatchConnect
|| __DATA_CONST.__const _GKReporterMatchConnectionFail
|| __DATA_CONST.__const _GKReporterMatchDisconnect
|| __DATA_CONST.__const _GKReporterMatchFail
|| __DATA_CONST.__const _GKReporterMatchFind
|| __DATA_CONST.__const _GKReporterMatchFindHosted
|| __DATA_CONST.__const _GKReporterMatchQuery
|| __DATA_CONST.__const _GKReporterMatchQueryGroup
|| __DATA_CONST.__const _GKReporterMatchVoiceChatInitilized
|| __DATA_CONST.__const _GKReporterOnboardingAvatarDeleted
|| __DATA_CONST.__const _GKReporterOnboardingAvatarEditingCancelled
|| __DATA_CONST.__const _GKReporterOnboardingAvatarTapped
|| __DATA_CONST.__const _GKReporterOnboardingAvatarUpdated
|| __DATA_CONST.__const _GKReporterOnboardingCompleted
|| __DATA_CONST.__const _GKReporterOnboardingDefaultNicknameChanged
|| __DATA_CONST.__const _GKReporterOnboardingDuration
|| __DATA_CONST.__const _GKReporterOnboardingErrorUpdatingAvatar
|| __DATA_CONST.__const _GKReporterOnboardingNicknameEditingCancelled
|| __DATA_CONST.__const _GKReporterOnboardingNicknameTapped
|| __DATA_CONST.__const _GKReporterOnboardingNicknameUpdatedSuccessfully
|| __DATA_CONST.__const _GKReporterOnboardingPersonalizationAcknowledged
|| __DATA_CONST.__const _GKReporterOnboardingPersonalizationDismissed
|| __DATA_CONST.__const _GKReporterOnboardingPersonalizationScreenDisplayed
|| __DATA_CONST.__const _GKReporterOnboardingPrivacyAcknowledged
|| __DATA_CONST.__const _GKReporterOnboardingPrivacyLinkTapped
|| __DATA_CONST.__const _GKReporterOnboardingProfilePrivacyAcknowledged
|| __DATA_CONST.__const _GKReporterOnboardingProfilePrivacyBackPressed
|| __DATA_CONST.__const _GKReporterOnboardingProfilePrivacyClicked
|| __DATA_CONST.__const _GKReporterOnboardingProfilePrivacyDismissed
|| __DATA_CONST.__const _GKReporterOnboardingProfilePrivacyDisplayed
|| __DATA_CONST.__const _GKReporterOnboardingProfilePrivacyServerError
|| __DATA_CONST.__const _GKReporterOnboardingSignOutCancelled
|| __DATA_CONST.__const _GKReporterOnboardingSignOutTapped
|| __DATA_CONST.__const _GKReporterOnboardingSignedOut
|| __DATA_CONST.__const _GKReporterOnboardingTerminated
|| __DATA_CONST.__const _GKReporterOnboardingWelcomeScreenDisplayed
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationAuthKitInvocation
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationDRMResponseTime
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationDeviceOffline
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationElapsedTime
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationElapsedTimeWithUI
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationFailure
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationGreenBuddyInvocation
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationLoginCancel
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationPlayerAuthenticated
|| __DATA_CONST.__const _GKReporterPlayerAuthenticationStart
|| __DATA_CONST.__const _GKReporterPushCountAll
|| __DATA_CONST.__const _GKReporterPushCountChallengeCompleted
|| __DATA_CONST.__const _GKReporterPushCountChallengeReceived
|| __DATA_CONST.__const _GKReporterPushCountInviteAccept
|| __DATA_CONST.__const _GKReporterPushCountInviteCancel
|| __DATA_CONST.__const _GKReporterPushCountInviteDecline
|| __DATA_CONST.__const _GKReporterPushCountInviteInitiate
|| __DATA_CONST.__const _GKReporterPushCountMatchmaking
|| __DATA_CONST.__const _GKReporterPushCountProfileUpdate
|| __DATA_CONST.__const _GKReporterPushCountRelay
|| __DATA_CONST.__const _GKReporterPushCountSessions
|| __DATA_CONST.__const _GKReporterPushCountSessionsInvite
|| __DATA_CONST.__const _GKReporterPushCountSessionsMessage
|| __DATA_CONST.__const _GKReporterPushCountTurnBased
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedClear
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedCompleted
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedExchangeCanceled
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedExchangeCompleted
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedExchangeRequested
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedInitiate
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedMatchChanged
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedReminder
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedTurn
|| __DATA_CONST.__const _GKReporterPushCountTurnBasedTurnCount
|| __DATA_CONST.__const _GKReporterRelayCancel
|| __DATA_CONST.__const _GKReporterRelayInitiate
|| __DATA_CONST.__const _GKReporterRelayUpdate
|| __DATA_CONST.__const _GKReporterSettingsFriendList
|| __DATA_CONST.__const _GKReporterSettingsFriendListLoadTime
|| __DATA_CONST.__const _GKReporterSettingsGameCenterProfile
|| __DATA_CONST.__const _GKReporterSettingsProfilePrivacy
|| __DATA_CONST.__const _GKReporterSettingsProfilePrivacyFrom
|| __DATA_CONST.__const _GKReporterSettingsProfilePrivacyTo
|| __DATA_CONST.__const _GKReporterSettingsRemoveFriend
|| __DATA_CONST.__const _GKReporterTurnBasedAccept
|| __DATA_CONST.__const _GKReporterTurnBasedDecline
|| __DATA_CONST.__const _GKReporterTurnBasedMatchAccept
|| __DATA_CONST.__const _GKReporterTurnBasedMatchDecline
|| __DATA_CONST.__const _GKReporterTurnBasedMatchFind
|| __DATA_CONST.__const _GKReporterTurnBasedShowMatch
|| __DATA_CONST.__const _GKRequestStatusKey
|| __DATA_CONST.__const _GKSAPExcludedResponse
|| __DATA_CONST.__const _GKSAPIncludedResponse
|| __DATA_CONST.__const _GKSAPSetup
|| __DATA_CONST.__const _GKSAPSetupCertURL
|| __DATA_CONST.__const _GKSAPVersion
|| __DATA_CONST.__const _GKSandboxedKey
|| __DATA_CONST.__const _GKSavedGameDocumentConflictStateChangedNotification
|| __DATA_CONST.__const _GKSavedGameDocumentModifiedNotification
|| __DATA_CONST.__const _GKScoresThrottleThreshold
|| __DATA_CONST.__const _GKSenderTappedViewPlayerProfileButton
|| __DATA_CONST.__const _GKServerErrorDomain
|| __DATA_CONST.__const _GKServerHostedKey
|| __DATA_CONST.__const _GKServerPlatformStringMacOS
|| __DATA_CONST.__const _GKServerPlatformStringTVOS
|| __DATA_CONST.__const _GKServerPlatformStringWatchOS
|| __DATA_CONST.__const _GKServerPlatformStringiOS
|| __DATA_CONST.__const _GKServerStatusCode
|| __DATA_CONST.__const _GKSessionErrorDomain
|| __DATA_CONST.__const _GKSessionPushCloudContainer
|| __DATA_CONST.__const _GKSessionPushData
|| __DATA_CONST.__const _GKSessionPushLocalizableMessage
|| __DATA_CONST.__const _GKSessionPushOriginatingDeviceType
|| __DATA_CONST.__const _GKSessionPushSenderID
|| __DATA_CONST.__const _GKSessionPushSenderName
|| __DATA_CONST.__const _GKSessionPushSessionIdentifier
|| __DATA_CONST.__const _GKSessionPushShareURL
|| __DATA_CONST.__const _GKSessionPushUserMessage
|| __DATA_CONST.__const _GKSessionRateLimiting
|| __DATA_CONST.__const _GKSetupAccountURLKey
|| __DATA_CONST.__const _GKSpringboardIdentifier
|| __DATA_CONST.__const _GKTVAppStoreIdentifier
|| __DATA_CONST.__const _GKTVAppStoreTopShelfExtensionIdentifier
|| __DATA_CONST.__const _GKTVSettingsIdentifier
|| __DATA_CONST.__const _GKTeamPlayerIDKey
|| __DATA_CONST.__const _GKTeamScopedIDPrefix
|| __DATA_CONST.__const _GKTotalInviteReceivedTime
|| __DATA_CONST.__const _GKTournamentAuto
|| __DATA_CONST.__const _GKTournamentAutoDetail
|| __DATA_CONST.__const _GKTournamentAutoList
|| __DATA_CONST.__const _GKTournamentCreation
|| __DATA_CONST.__const _GKTournamentCustom
|| __DATA_CONST.__const _GKTournamentCustomDetail
|| __DATA_CONST.__const _GKTournamentCustomList
|| __DATA_CONST.__const _GKTournamentExtensionIdentifier
|| __DATA_CONST.__const _GKTournamentHistoryList
|| __DATA_CONST.__const _GKTournamentPlay
|| __DATA_CONST.__const _GKTournamentRegister
|| __DATA_CONST.__const _GKTournamentResign
|| __DATA_CONST.__const _GKTournamentStandings
|| __DATA_CONST.__const _GKTournamentSubmitScore
|| __DATA_CONST.__const _GKTurnBasedMatchmakerExtensionIdentifier
|| __DATA_CONST.__const _GKURLComponentFriendRequest
|| __DATA_CONST.__const _GKURLComponentFriends
|| __DATA_CONST.__const _GKURLComponentGame
|| __DATA_CONST.__const _GKURLComponentGameCenterScheme
|| __DATA_CONST.__const _GKURLComponentGames
|| __DATA_CONST.__const _GKURLComponentHTTPSScheme
|| __DATA_CONST.__const _GKURLComponentHTTPScheme
|| __DATA_CONST.__const _GKURLComponentHostProduction
|| __DATA_CONST.__const _GKURLComponentHostSandbox
|| __DATA_CONST.__const _GKURLComponentHostTD1External
|| __DATA_CONST.__const _GKURLComponentHostTD1Internal
|| __DATA_CONST.__const _GKURLComponentHostTD2External
|| __DATA_CONST.__const _GKURLComponentHostTD2Internal
|| __DATA_CONST.__const _GKURLComponentHostTD3External
|| __DATA_CONST.__const _GKURLComponentHostTD3Internal
|| __DATA_CONST.__const _GKURLComponentHostTD4External
|| __DATA_CONST.__const _GKURLComponentHostTD4Internal
|| __DATA_CONST.__const _GKURLComponentITMSGCSScheme
|| __DATA_CONST.__const _GKURLComponentITMSGCScheme
|| __DATA_CONST.__const _GKURLComponentMe
|| __DATA_CONST.__const _GKURLComponentPlayer
|| __DATA_CONST.__const _GKURLComponentRecommendations
|| __DATA_CONST.__const _GKURLComponentRequests
|| __DATA_CONST.__const _GKURLComponentStore
|| __DATA_CONST.__const _GKUnavailablePlayerID
|| __DATA_CONST.__const _GKUnderageKey
|| __DATA_CONST.__const _GKUnknownPlayerID
|| __DATA_CONST.__const _GKVerifiedKey
|| __DATA_CONST.__const _GKViewFriendListButtonTapped
|| __DATA_CONST.__const _GKViewFriendProfileButtonTapped
|| __DATA_CONST.__const _GKVoiceChatServiceErrorDomain
|| __DATA_CONST.__const _GKWidgetExtensionIdentifier
|| __DATA_CONST.__const _GKWidgetIdentifier
|| __DATA_DIRTY.__common _GKLogBitTitles
|| __DATA_DIRTY.__common _os_log_GKLogAccount
|| __DATA_DIRTY.__common _os_log_GKLogAccountError
|| __DATA_DIRTY.__common _os_log_GKLogCache
|| __DATA_DIRTY.__common _os_log_GKLogCollectionView
|| __DATA_DIRTY.__common _os_log_GKLogDaemon
|| __DATA_DIRTY.__common _os_log_GKLogDeveloper
|| __DATA_DIRTY.__common _os_log_GKLogDispatch
|| __DATA_DIRTY.__common _os_log_GKLogError
|| __DATA_DIRTY.__common _os_log_GKLogGeneral
|| __DATA_DIRTY.__common _os_log_GKLogHTTP
|| __DATA_DIRTY.__common _os_log_GKLogHosted
|| __DATA_DIRTY.__common _os_log_GKLogMatch
|| __DATA_DIRTY.__common _os_log_GKLogPerf
|| __DATA_DIRTY.__common _os_log_GKLogTrace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKAccountServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKAccountServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKAchievementChallengeInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKAchievementInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKAnalyticsServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKAnalyticsServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKAuthenticateCredential
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKAuthenticateResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKBasePlayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKBulletinServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKBulletinServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKChallengeInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKChallengeServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKChallengeServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKCloudPlayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKCompatibilityEntryInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKConcernInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKCustomTournamentRequestInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKDaemonProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKDispatchGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKEventEmitter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKFamiliarPlayerInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKFriendCodeDetailInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKFriendPlayerInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKFriendRecommendationInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKFriendRequestInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKFriendServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKFriendServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameHighlightInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameRecommendationInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameRecordInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameSessionServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameSessionServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameSettingsInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameStatServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameStatServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKGameSummaryInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKInternalRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKInviteInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLeaderboard
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLeaderboardEntryInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLeaderboardInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLeaderboardScoreRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLeaderboardSetInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLeaderboardSummaryInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLocalPlayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKLocalPlayerInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKMatchRequestInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKMatchResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKMessageInboxEntryInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKMultiplayerGroupInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKMultiplayerServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKMultiplayerServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKPlayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKPlayerEmailInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKPlayerInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKPreferences
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKProfileServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKProfileServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKRecentMatchInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKRequestIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKSavedGameManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKScoreChallengeInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKScoreInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKServiceProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKStoreItemInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKThreadsafeDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTournamentDefinitionInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTournamentInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTournamentParticipantHistoricalDataInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTournamentParticipantInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTournamentParticipantRequestInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTournamentServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTournamentServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTurnBasedExchangeInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTurnBasedExchangeReplyInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTurnBasedMatchInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTurnBasedParticipantInternal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTurnBasedServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKTurnBasedServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKUtilityServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_GKUtilityServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKAccountServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKAccountServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKAchievementChallengeInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKAchievementInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKAnalyticsServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKAnalyticsServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKAuthenticateCredential
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKAuthenticateResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKBasePlayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKBulletinServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKBulletinServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKChallengeInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKChallengeServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKChallengeServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKCloudPlayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKCompatibilityEntryInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKConcernInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKCustomTournamentRequestInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKDaemonProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKDispatchGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKEventEmitter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKFamiliarPlayerInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKFriendCodeDetailInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKFriendPlayerInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKFriendRecommendationInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKFriendRequestInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKFriendServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKFriendServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameHighlightInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameRecommendationInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameRecordInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameSessionServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameSessionServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameSettingsInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameStatServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameStatServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKGameSummaryInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKInternalRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKInviteInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLeaderboard
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLeaderboardEntryInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLeaderboardInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLeaderboardScoreRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLeaderboardSetInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLeaderboardSummaryInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLocalPlayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKLocalPlayerInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKMatchRequestInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKMatchResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKMessageInboxEntryInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKMultiplayerGroupInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKMultiplayerServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKMultiplayerServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKPlayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKPlayerEmailInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKPlayerInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKPreferences
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKProfileServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKProfileServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKRecentMatchInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKRequestIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKSavedGameManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKScoreChallengeInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKScoreInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKServiceProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKStoreItemInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKThreadsafeDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTournamentDefinitionInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTournamentInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTournamentParticipantHistoricalDataInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTournamentParticipantInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTournamentParticipantRequestInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTournamentServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTournamentServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTurnBasedExchangeInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTurnBasedExchangeReplyInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTurnBasedMatchInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTurnBasedParticipantInternal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTurnBasedServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKTurnBasedServicePrivateInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKUtilityServiceInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_GKUtilityServicePrivateInterface
|| __TEXT.__const _GKMultiplayerCancelTimeDelayInSeconds
|| __TEXT.__const _GKPushFriendsAuthorizationStatusAuthorized
|| __TEXT.__const _GKPushFriendsAuthorizationStatusDenied
|| __TEXT.__const _GKPushFriendsAuthorizationStatusNotDetermined
|| __TEXT.__const _GKPushFriendsAuthorizationStatusRemoved
|| __TEXT.__text _GKAbsoluteTimeAsWhenString
|| __TEXT.__text _GKAbsoluteTimeAsWhenStringWithOptions
|| __TEXT.__text _GKActiveLogBits
|| __TEXT.__text _GKApplicationLinkedOnOrAfter
|| __TEXT.__text _GKApplicationWithIdentifierIsInstalled
|| __TEXT.__text _GKAtomicCompareAndSwap32
|| __TEXT.__text _GKAtomicCompareAndSwap32Barrier
|| __TEXT.__text _GKAtomicCompareAndSwapPtrBarrier
|| __TEXT.__text _GKAtomicDecrement32
|| __TEXT.__text _GKAtomicDecrement32Barrier
|| __TEXT.__text _GKAtomicIncrement32
|| __TEXT.__text _GKAtomicIncrement32Barrier
|| __TEXT.__text _GKAvatarSubdirectoryNameForPlayerID
|| __TEXT.__text _GKCacheRoot
|| __TEXT.__text _GKCurrentTimestamp
|| __TEXT.__text _GKDateAsWhenString
|| __TEXT.__text _GKFormatNetworkStringWithArguments
|| __TEXT.__text _GKFormattedStringFromInteger
|| __TEXT.__text _GKFormattedStringFromPercentInteger
|| __TEXT.__text _GKFormattedStringWithGroupingFromInteger
|| __TEXT.__text _GKFrameworkVersionDescription
|| __TEXT.__text _GKGameCenterFoundationBundle
|| __TEXT.__text _GKGameCenterNotificationsBundle
|| __TEXT.__text _GKGameCenterUICoreFrameworkBundle
|| __TEXT.__text _GKGameCenterUIFrameworkBundle
|| __TEXT.__text _GKGameCenterUIServiceBundle
|| __TEXT.__text _GKGameKitBundle
|| __TEXT.__text _GKGetApplicationDidEnterBackgroundNotificationName
|| __TEXT.__text _GKGetApplicationStateForBundleID
|| __TEXT.__text _GKGetApplicationWillEnterForegroundNotificationName
|| __TEXT.__text _GKGetApplicationWillTerminateNotificationName
|| __TEXT.__text _GKGetLocalizedStringFromTableInBundle
|| __TEXT.__text _GKGetProtocolVersionString
|| __TEXT.__text _GKGetSystemLocalizedStringFromTableInBundle
|| __TEXT.__text _GKHexStringFromBytes
|| __TEXT.__text _GKImageCachePathForSubdirectoryAndFilename
|| __TEXT.__text _GKImageCachePathForURL
|| __TEXT.__text _GKImageCacheRoot
|| __TEXT.__text _GKImageURLKeyForSize
|| __TEXT.__text _GKImageURLKeyForSizeAndScale
|| __TEXT.__text _GKLaunchApplicationWithIdentifier
|| __TEXT.__text _GKLaunchApplicationWithIdentifierAndURL
|| __TEXT.__text _GKLoggerFor
|| __TEXT.__text _GKOSLogInit
|| __TEXT.__text _GKRefreshDataTypeAsString
|| __TEXT.__text _GKSetActiveLogBits
|| __TEXT.__text _GKStashStackTrace
|| __TEXT.__text _GKStashedStackTrace
|| __TEXT.__text _GKSupportDataRoot
|| __TEXT.__text _GKSupportLogRoot
|| __TEXT.__text _GKTurnBasedGameDataCacheRoot
|| __TEXT.__text _GKUISetRemote
|| __TEXT.__text _GKUniqueTestCachePath
|| __TEXT.__text _NSRangeInRange
|| __TEXT.__text __gkBeautifyVariableName
|| __TEXT.__text __gkMarkFileAsPurgeable
|| __TEXT.__text __gkTabStringForTabLevel
|| __TEXT.__text __gkUnicodifyDescription
|| __TEXT.__text __hash
|| __TEXT.__text _applicationStateForProcessState
|| __TEXT.__text _compatiblePlatforms
|| __TEXT.__text _constructCompatiblePlatforms
|| __TEXT.__text _dispatch_async_join
|| __TEXT.__text _ensureGameInGamesPlayed
|| __TEXT.__text _ensureGamesPlayedList
|| __TEXT.__text _existingGamePlatforms
|| __TEXT.__text _gkEnsureDirectory
|| __TEXT.__text _gkEscapedQueryString
|| __TEXT.__text _gk_dispatch_as_group
|| __TEXT.__text _gk_dispatch_async_do
|| __TEXT.__text _gk_dispatch_debounce
|| __TEXT.__text _gk_dispatch_debounce_do
|| __TEXT.__text _gk_dispatch_group_do
|| __TEXT.__text _headerChecksum
|| __TEXT.__text _packetTypeFromMode
|| __TEXT.__text _shouldNotCheckApplicationState
|| __TEXT.__text _userInfoForStateUpdate
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierGameCenter
__ Accounts: _ACAccountTypeIdentifierIDMS
__ Accounts: _ACAccountTypeIdentifierKey
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountCredential
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ AppStoreComponents: _OBJC_CLASS_$_ASCArtwork
__ AppSupport: _CPCopySharedResourcesPreferencesDomainForDomain
__ AppleMediaServices: _OBJC_CLASS_$_AMSBag
__ AppleMediaServices: _OBJC_CLASS_$_AMSBagKeySet
__ AppleMediaServices: _OBJC_CLASS_$_AMSDevice
__ AppleMediaServices: _OBJC_CLASS_$_AMSLookup
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetrics
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetricsEvent
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetricsLoadURLContext
__ AppleMediaServices: _OBJC_CLASS_$_AMSMetricsLoadURLEvent
__ AuthKit: _AKAppleIDEmailsDidChangeNotification
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ ChronoServices: _OBJC_CLASS_$_CHSTimelineController
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNMutableContact
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreData: _OBJC_CLASS_$_NSFetchRequest
__ CoreData: _OBJC_CLASS_$_NSManagedObject
__ CoreData: _OBJC_METACLASS_$_NSManagedObject
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFBundleCopyLocalizedStringForLocalization
__ CoreFoundation: _CFBundleCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringUppercase
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFMZEnabled
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesAnyUser
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSMetadataItemFSContentChangeDateKey
__ Foundation: _NSMetadataItemFSNameKey
__ Foundation: _NSMetadataItemURLKey
__ Foundation: _NSMetadataQueryDidFinishGatheringNotification
__ Foundation: _NSMetadataQueryDidUpdateNotification
__ Foundation: _NSMetadataQueryUbiquitousDataScope
__ Foundation: _NSMetadataQueryUbiquitousDocumentsScope
__ Foundation: _NSMetadataUbiquitousItemDownloadingStatusKey
__ Foundation: _NSMetadataUbiquitousItemDownloadingStatusNotDownloaded
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUbiquityIdentityDidChangeNotification
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileCoordinator
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFileVersion
__ Foundation: _OBJC_CLASS_$_NSFileWrapper
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMetadataQuery
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLCache
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSOperationQueue
__ Foundation: _OBJC_METACLASS_$_NSXPCInterface
__ Foundation: __NSXPCConnectionInvocationReplyToSelectorKey
__ Foundation: __NSXPCConnectionInvocationReplyUserInfoKey
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPayloadURL
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSSceneVisibilityEndowmentNamespace
__ FrontBoardServices: _OBJC_CLASS_$_FBSSystemService
__ GameKitServices: _GKSCDXServerAddress
__ GameKitServices: _GKSCommNATServerCohortAddress
__ GameKitServices: _GKSCommNATServerMain0Address
__ GameKitServices: _GKSCommNATServerMain1Address
__ GameKitServices: _GKSConnectionBlobMaxBytes
__ GameKitServices: _GKSICETimeout
__ GameKitServices: _GKSNATCheckTimeout
__ GameKitServices: _GKSRelayParameter_ClientData
__ GameKitServices: _GKSRelayParameter_ConnectionID
__ GameKitServices: _GKSRelayParameter_PeerBlob
__ GameKitServices: _GKSRelayParameter_PeerExternalAddr
__ GameKitServices: _GKSRelayParameter_PeerNatType
__ GameKitServices: _GKSRelayParameter_PeerRelayIP
__ GameKitServices: _GKSRelayParameter_PeerRelayNatIP
__ GameKitServices: _GKSRelayParameter_PeerRelayNatPort
__ GameKitServices: _GKSRelayParameter_PeerRelayPort
__ GameKitServices: _GKSRelayParameter_SelfBlob
__ GameKitServices: _GKSRelayParameter_SelfExternalAddr
__ GameKitServices: _GKSRelayParameter_SelfNatType
__ GameKitServices: _GKSRelayParameter_SelfRelayIP
__ GameKitServices: _GKSRelayParameter_SelfRelayNatIP
__ GameKitServices: _GKSRelayParameter_SelfRelayNatPort
__ GameKitServices: _GKSRelayParameter_SelfRelayPort
__ GameKitServices: _GKSRelayParameter_Token
__ GameKitServices: _GKSRelayParameter_TransactionID
__ GameKitServices: _GKSRelayType
__ GameKitServices: _GKSSessionTicketData
__ GameKitServices: _GKSSessionTokenData
__ GameKitServices: _OBJC_CLASS_$_GKConnection
__ GameKitServices: _OBJC_CLASS_$_GKSConnectivitySettings
__ GameKitServices: _OBJC_CLASS_$_GKSessionInternal
__ GameKitServices: _OBJC_CLASS_$_GKVoiceChatServiceFocus
__ GameKitServices: _OBJC_CLASS_$_GKVoiceChatSession
__ GraphicsServices: _GSSystemRootDirectory
__ ManagedConfiguration: _MCFeatureAccountModificationAllowed
__ ManagedConfiguration: _MCFeatureAddingGameCenterFriendsAllowed
__ ManagedConfiguration: _MCFeatureGameCenterAllowed
__ ManagedConfiguration: _MCFeatureGameCenterAllowedOtherPlayerTypes
__ ManagedConfiguration: _MCFeatureGameCenterFriendsSharingModificationAllowed
__ ManagedConfiguration: _MCFeatureGameCenterNearbyMultiplayerAllowed
__ ManagedConfiguration: _MCFeatureGameCenterPrivateMessagingAllowed
__ ManagedConfiguration: _MCFeatureGameCenterProfileModificationAllowed
__ ManagedConfiguration: _MCFeatureGameCenterProfilePrivacyModificationAllowed
__ ManagedConfiguration: _MCFeatureMultiplayerGamingAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ PeopleSuggester: _OBJC_CLASS_$__PSContactSuggestion
__ PeopleSuggester: _OBJC_CLASS_$__PSSuggestion
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessMonitor
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessPredicate
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessStateDescriptor
__ SoftLinking: __sl_dlopen
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilityScheduleWithRunLoop
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilityUnscheduleFromRunLoop
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGCopyMultipleAnswers
__ libMobileGestalt.dylib: _MGGetProductType
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __Block_signature
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dladdr
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _ffsctl
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getxattr
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_disable_wakemon
__ libSystem.B.dylib: _removexattr
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _usleep
__ libicucore.A.dylib: _ubidi_close
__ libicucore.A.dylib: _ubidi_getDirection
__ libicucore.A.dylib: _ubidi_getParaLevel
__ libicucore.A.dylib: _ubidi_open
__ libicucore.A.dylib: _ubidi_setPara
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _class_getName
__ libobjc.A.dylib: _class_respondsToSelector
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _property_getName
__ libobjc.A.dylib: _protocol_copyMethodDescriptionList
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libobjc.A.dylib: _sel_getName
__ libobjc.A.dylib: _sel_isEqual
GKTournamentDefinition : NSObject <NSSecureCoding>
 @property  GKTournamentDefinitionInternal *internal
 @property  NSString *tournamentDefinitionID
 @property  NSString *tournamentName
 @property  long long tournamentNameFormat
 @property  NSString *tournamentDescription
 @property  NSString *tournamentIcon
 @property  NSString *customTournamentName
 @property  long long customTournamentNameFormat
 @property  NSString *customTournamentIcon
 @property  BOOL customTournamentAllowIcon
 @property  long long tournamentType
 @property  long long creationMethod
 @property  long long seedingMethod
 @property  long long customSeedingMethods
 @property  long long participationType
 @property  long long scoringMethod
 @property  long long customScoringMethods
 @property  long long maxPlayers
 @property  long long minPlayers
 @property  long long customMaxPlayers
 @property  long long customMinPlayers
 @property  long long maxPlayerShards
 @property  double typicalGameplayDuration
 @property  double tournamentDuration
 @property  double customTournamentDuration
 @property  double PreRegistrationTime
 @property  GKRecurrenceRule *recurrenceRule
 @property  long long maxReplays
 @property  long long customMaxReplays

  // class methods
  +[GKTournamentDefinition supportsSecureCoding]
  +[GKTournamentDefinition loadTournamentDefinitionsWithCompletionHandler:]
  +[GKTournamentDefinition loadTournamentDefinitionWithID:completionHandler:]

  // instance methods
  -[GKTournamentDefinition internal]
  -[GKTournamentDefinition initWithCoder:]
  -[GKTournamentDefinition .cxx_destruct]
  -[GKTournamentDefinition forwardingTargetForSelector:]
  -[GKTournamentDefinition init]
  -[GKTournamentDefinition initWithInternalRepresentation:]
  -[GKTournamentDefinition setInternal:]
  -[GKTournamentDefinition encodeWithCoder:]
  -[GKTournamentDefinition loadTournamentsWithPredicate:completionHandler:]
  -[GKTournamentDefinition scoringMethodDescription]
  -[GKTournamentDefinition seedingMethodDescription]
  -[GKTournamentDefinition creationMethodDescription]
  -[GKTournamentDefinition tournamentTypeDescription]
  -[GKTournamentDefinition participationTypeDescription]
  -[GKTournamentDefinition proposedNextCustomTournamentStartDate]
  -[GKTournamentDefinition loadHistoricalDataForPlayer:completionHandler:]


GKCustomTournamentManager : NSObject <GKCustomTournamentDelegate>
 @property  GKTournament *tournament
 @property  GKPlayer *creator

  // instance methods
  -[GKCustomTournamentManager .cxx_destruct]
  -[GKCustomTournamentManager creator]
  -[GKCustomTournamentManager setCreator:]
  -[GKCustomTournamentManager setTournament:]
  -[GKCustomTournamentManager tournament]
  -[GKCustomTournamentManager addInvitees:completionHandler:]
  -[GKCustomTournamentManager removeInvitees:completionHandler:]
  -[GKCustomTournamentManager addCreator:completionHandler:]
  -[GKCustomTournamentManager removeCreator:completionHandler:]
  -[GKCustomTournamentManager acceptInvitationWithCompletionHandler:]
  -[GKCustomTournamentManager declineInvitationWithCompletionHandler:]


GKTournament : NSObject <NSSecureCoding>
 @property  GKTournamentInternal *internal
 @property  NSString *tournamentID
 @property  NSString *nextTournamentID
 @property  NSDate *nextTournamentBeginDate
 @property  GKTournamentDefinition *tournamentDefinition
 @property  GKScore *bestScore
 @property  GKPlayer *winningPlayer
 @property  GKTournamentParticipant *localParticipant
 @property  GKLeaderboard *leaderboard
 @property  NSObject<GKCustomTournamentDelegate> *customTournamentDelegate
 @property  NSURL *inviteURLForMessages
 @property  NSString *tournamentName
 @property  BOOL registrationOpen
 @property  long long maxReplays
 @property  long long minPlayers
 @property  long long maxPlayers
 @property  long long scoringMethod
 @property  double duration
 @property  long long randomSeed
 @property  NSDate *registrationBeginDate
 @property  NSDate *registrationEndDate
 @property  NSDate *tournamentBeginDate
 @property  NSDate *tournamentEndDate
 @property  long long tournamentState
 @property  long long playerCount
 @property  long long tournamentError

  // class methods
  +[GKTournament defaultCustomTournamentForTournamentDefinition:]
  +[GKTournament supportsSecureCoding]
  +[GKTournament loadTournamentWithID:completionHandler:]
  +[GKTournament resetTournamentDataForTournamentsWithTournamentDefinitionIdentifier:completionHandler:]
  +[GKTournament lookForAcceptedCustomTournament]
  +[GKTournament notifyPlayerForTournament:completionHandler:]

  // instance methods
  -[GKTournament internal]
  -[GKTournament initWithCoder:]
  -[GKTournament localParticipant]
  -[GKTournament .cxx_destruct]
  -[GKTournament setBestScore:]
  -[GKTournament forwardingTargetForSelector:]
  -[GKTournament bestScore]
  -[GKTournament init]
  -[GKTournament initWithInternalRepresentation:]
  -[GKTournament setInternal:]
  -[GKTournament encodeWithCoder:]
  -[GKTournament updateWithCompletionHandler:]
  -[GKTournament leaderboard]
  -[GKTournament setLeaderboard:]
  -[GKTournament setTournamentDefinition:]
  -[GKTournament tournamentDefinition]
  -[GKTournament addInvitees:completionHandler:]
  -[GKTournament removeInvitees:completionHandler:]
  -[GKTournament addCreator:completionHandler:]
  -[GKTournament removeCreator:completionHandler:]
  -[GKTournament acceptInvitationWithCompletionHandler:]
  -[GKTournament declineInvitationWithCompletionHandler:]
  -[GKTournament winningPlayer]
  -[GKTournament setWinningPlayer:]
  -[GKTournament setLocalParticipant:]
  -[GKTournament setCustomTournamentDelegate:]
  -[GKTournament customTournamentDelegate]
  -[GKTournament loadParticipantsWithRequest:completionHandler:]
  -[GKTournament reportScore:withTryToken:completionHandler:]
  -[GKTournament reportProgressScore:withTryToken:completionHandler:]
  -[GKTournament registerPlayerInGroup:completionHandler:]
  -[GKTournament resignFromTournamentWithCompletionHandler:]
  -[GKTournament beginPlayWithCompletionHandler:]
  -[GKTournament resumePlayWithTryToken:completionHandler:]
  -[GKTournament getTotalPlayerCountForGroup:completionHandler:]
  -[GKTournament getFriendCountForGroup:completionHandler:]
  -[GKTournament registrationOpen]
  -[GKTournament getLocalParticipantWithCompletionHandler:]
  -[GKTournament getTournamentStateWithCompletionHandler:]
  -[GKTournament loadScoresWithScope:range:completionHandler:]
  -[GKTournament verifyPlayerForMatchmaking:completionHandler:]
  -[GKTournament getShareURLWithCompletionHandler:]


GKTournamentPlayerStandings : NSObject
 @property  GKTournamentPlayerStandingsInternal *internal
 @property  long long score
 @property  long long topScore
 @property  long long friendRank
 @property  long long friendCount
 @property  long long globalRank
 @property  long long globalPlayerCount
 @property  long long replayCount

  // instance methods
  -[GKTournamentPlayerStandings internal]
  -[GKTournamentPlayerStandings .cxx_destruct]
  -[GKTournamentPlayerStandings forwardingTargetForSelector:]
  -[GKTournamentPlayerStandings init]
  -[GKTournamentPlayerStandings initWithInternalRepresentation:]
  -[GKTournamentPlayerStandings setInternal:]


GKActivity : NSObject
 @property  NSString *name
 @property  unsigned int mode
 @property  NSObject<OS_os_activity> *parent
 @property  NSObject<OS_os_activity> *activity

  // class methods
  +[GKActivity currentOrNew]
  +[GKActivity named:]
  +[GKActivity detached]
  +[GKActivity activity]
  +[GKActivity named:execute:]
  +[GKActivity execute:]

  // instance methods
  -[GKActivity setActivity:]
  -[GKActivity name]
  -[GKActivity named:]
  -[GKActivity child]
  -[GKActivity .cxx_destruct]
  -[GKActivity setName:]
  -[GKActivity activity]
  -[GKActivity setParent:]
  -[GKActivity named:execute:]
  -[GKActivity initWithName:parent:mode:]
  -[GKActivity parent]
  -[GKActivity setMode:]
  -[GKActivity createActivity]
  -[GKActivity execute:]
  -[GKActivity mode]


GKDevice : NSObject
 @property  GKEventEmitter<GKLockStatusObserver> *emitter
 @property  NSString *deviceName
 @property  NSString *udid
 @property  NSString *osVersion
 @property  NSString *buildVersion
 @property  NSString *gameKitVersion
 @property  BOOL gameKitAvailable

  // class methods
  +[GKDevice currentDevice]

  // instance methods
  -[GKDevice udid]
  -[GKDevice buildVersion]
  -[GKDevice osVersion]
  -[GKDevice isDevelopmentDevice]
  -[GKDevice beginObservingKeyBagStatusWithCallback:]
  -[GKDevice isProductType:]
  -[GKDevice deviceName]
  -[GKDevice userAgentWithProcessName:protocolVersion:]
  -[GKDevice stopObservingKeyBagStatus]
  -[GKDevice .cxx_destruct]
  -[GKDevice setDeviceName:]
  -[GKDevice userAgent]
  -[GKDevice isGameKitAvailable]
  -[GKDevice init]
  -[GKDevice addLockStatusObserver:]
  -[GKDevice emitter]
  -[GKDevice buildVersionHeader]
  -[GKDevice removeLockStatusObserver:]
  -[GKDevice gameKitVersion]
  -[GKDevice isFocusDevice]
  -[GKDevice setEmitter:]
  -[GKDevice _platformUDID]
  -[GKDevice processNameHeader]
  -[GKDevice storeUserAgent]
  -[GKDevice platformBuildVersion]
  -[GKDevice dealloc]
  -[GKDevice protocolVersionHeader]
  -[GKDevice _initPlatform]


GKSavedGameManager : NSObject
 @property  NSURL *ubiquityURL
 @property  BOOL ubiquityUnavailable
 @property  NSMetadataQuery *query
 @property  NSMutableDictionary *documents
 @property  long long queryDisableCount
 @property  NSMutableArray *fetchHandlers

  // class methods
  +[GKSavedGameManager sharedManager]

  // instance methods
  -[GKSavedGameManager removeDocument:]
  -[GKSavedGameManager setQuery:]
  -[GKSavedGameManager documentModified:]
  -[GKSavedGameManager setupUbiquity]
  -[GKSavedGameManager addDocument:]
  -[GKSavedGameManager query]
  -[GKSavedGameManager resolveConflictingSavedGames:withData:completionHandler:]
  -[GKSavedGameManager queryDidFinishGathering:]
  -[GKSavedGameManager setDocuments:]
  -[GKSavedGameManager disableQueryUpdates]
  -[GKSavedGameManager ubiquityAvailabilityChanged:]
  -[GKSavedGameManager saveGameData:withName:completionHandler:]
  -[GKSavedGameManager .cxx_destruct]
  -[GKSavedGameManager savedGamesWithName:]
  -[GKSavedGameManager fetchSavedGamesWithCompletionHandler:]
  -[GKSavedGameManager setUbiquityURL:]
  -[GKSavedGameManager setUbiquityUnavailable:]
  -[GKSavedGameManager ubiquityURL]
  -[GKSavedGameManager queryDisableCount]
  -[GKSavedGameManager errorForNoUbiquity]
  -[GKSavedGameManager documentForSavedGame:]
  -[GKSavedGameManager init]
  -[GKSavedGameManager updateSavedGameDocumentsForQueryWithHandler:]
  -[GKSavedGameManager callFetchHandlers]
  -[GKSavedGameManager loadDataForSavedGame:completionHandler:]
  -[GKSavedGameManager fileURLForName:]
  -[GKSavedGameManager enableQueryUpdates]
  -[GKSavedGameManager startSavedGameQuery]
  -[GKSavedGameManager queryDidUpdate:]
  -[GKSavedGameManager documents]
  -[GKSavedGameManager savedGameForDocuments:]
  -[GKSavedGameManager documentToSaveWithName:]
  -[GKSavedGameManager deleteSavedGamesWithName:completionHandler:]
  -[GKSavedGameManager setQueryDisableCount:]
  -[GKSavedGameManager dealloc]
  -[GKSavedGameManager savedGameForDocument:]
  -[GKSavedGameManager fetchHandlers]
  -[GKSavedGameManager setFetchHandlers:]
  -[GKSavedGameManager currentDocumentWithName:]
  -[GKSavedGameManager documentConflictStateChanged:]
  -[GKSavedGameManager ubiquityUnavailable]


GKBasePlayer : NSObject
 @property  NSString *playerID
 @property  NSString *displayName

  // class methods
  +[GKBasePlayer supportsSecureCoding]

  // instance methods
  -[GKBasePlayer displayName]
  -[GKBasePlayer initWithCoder:]
  -[GKBasePlayer playerID]
  -[GKBasePlayer encodeWithCoder:]


GKAnalyticsServiceInterface : GKServiceInterface
  // class methods
  +[GKAnalyticsServiceInterface interfaceProtocol]


GKAnalyticsServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKAnalyticsServicePrivateInterface interfaceProtocol]


GKGame : NSObject <NSCoding, NSSecureCoding>
 @property  GKGameInternal *internal
 @property  long long environment
 @property  BOOL prerendered
 @property  NSDictionary *gameDescriptorDictionary
 @property  GKGameDescriptor *gameDescriptor
 @property  NSNumber *adamID
 @property  NSNumber *externalVersion
 @property  NSString *bundleIdentifier
 @property  NSString *bundleVersion
 @property  NSString *shortBundleVersion
 @property  NSString *cacheKey
 @property  long long platform
 @property  NSString *name
 @property  NSString *defaultCategory
 @property  GKStoreItemInternal *storeItem
 @property  {GKGameInfo=BBBBBBBBQQQQ} gameInfo
 @property  BOOL supportsMultiplayer
 @property  BOOL supportsTurnBasedMultiplayer
 @property  BOOL installedGame

  // class methods
  +[GKGame instanceMethodSignatureForSelector:]
  +[GKGame supportsSecureCoding]
  +[GKGame isFirstParty]
  +[GKGame instancesRespondToSelector:]
  +[GKGame currentGame]
  +[GKGame loadGamesWithBundleIDs:withCompletionHandler:]
  +[GKGame isGameCenter]
  +[GKGame isPreferences]
  +[GKGame isRemoteAlert]
  +[GKGame isAppStore]
  +[GKGame currentGameIncludingGameCenter:]
  +[GKGame setCurrentGameFromInternal:serverEnvironment:]
  +[GKGame loadTopGamesWithCompletionHandler:]
  +[GKGame updateGames:withCompletionHandler:]

  // instance methods
  -[GKGame internal]
  -[GKGame isInstalled]
  -[GKGame setValue:forUndefinedKey:]
  -[GKGame valueForUndefinedKey:]
  -[GKGame initWithCoder:]
  -[GKGame methodSignatureForSelector:]
  -[GKGame cacheKey]
  -[GKGame .cxx_destruct]
  -[GKGame setEnvironment:]
  -[GKGame forwardingTargetForSelector:]
  -[GKGame init]
  -[GKGame respondsToSelector:]
  -[GKGame isEqual:]
  -[GKGame initWithInternalRepresentation:]
  -[GKGame setInternal:]
  -[GKGame gameInfo]
  -[GKGame copyWithZone:]
  -[GKGame loadTellAFriendMessageWithCompletionHandler:]
  -[GKGame environment]
  -[GKGame encodeWithCoder:]
  -[GKGame getFriendPlayersForAchievement:handler:]
  -[GKGame isGameCenter]
  -[GKGame gameDescriptor]
  -[GKGame isAppStore]
  -[GKGame isInternalTestApp]
  -[GKGame gameDescriptorDictionary]
  -[GKGame isStoreItemUnexpired]
  -[GKGame loadGameRatingWithCompletionHandler:]
  -[GKGame submitRating:withCompletionHandler:]
  -[GKGame getFriendPlayersIncludingCompatibleGames:handler:]
  -[GKGame getFriendPlayersForLeaderboard:handler:]


GKGameMatch : NSObject
 @property  GKRecentMatchInternal *internal
 @property  GKPlayer *player
 @property  GKGame *game
 @property  NSDate *date

  // class methods
  +[GKGameMatch instanceMethodSignatureForSelector:]
  +[GKGameMatch instancesRespondToSelector:]

  // instance methods
  -[GKGameMatch internal]
  -[GKGameMatch setValue:forUndefinedKey:]
  -[GKGameMatch valueForUndefinedKey:]
  -[GKGameMatch game]
  -[GKGameMatch methodSignatureForSelector:]
  -[GKGameMatch .cxx_destruct]
  -[GKGameMatch forwardingTargetForSelector:]
  -[GKGameMatch setPlayer:]
  -[GKGameMatch init]
  -[GKGameMatch respondsToSelector:]
  -[GKGameMatch isEqual:]
  -[GKGameMatch player]
  -[GKGameMatch setInternal:]
  -[GKGameMatch setGame:]
  -[GKGameMatch initWithInternalRepresentation:game:]


GKGameRecord : GKGame
 @property  GKGameRecordInternal *internal
 @property  GKPlayer *player
 @property  BOOL played
 @property  NSDate *lastPlayedDate
 @property  NSDate *purchaseDate
 @property  BOOL supportsAchievements
 @property  unsigned long achievements
 @property  unsigned long maxAchievements
 @property  unsigned long achievementPoints
 @property  unsigned long maxAchievementPoints
 @property  BOOL supportsLeaderboards
 @property  unsigned long numberOfLeaderboards
 @property  unsigned long numberOfCategories
 @property  unsigned long rank
 @property  unsigned long maxRank
 @property  unsigned long friendRank
 @property  unsigned long maxFriendRank
 @property  BOOL supportsLeaderboardSets
 @property  unsigned long numberOfLeaderboardSets
 @property  NSString *defaultLeaderboardIdentifier
 @property  BOOL isArcadeGame
 @property  BOOL supportsChallenges

  // class methods
  +[GKGameRecord supportsSecureCoding]
  +[GKGameRecord invalidateCaches]
  +[GKGameRecord gameRecordForPlayer:game:]
  +[GKGameRecord cacheKeyForPlayer:bundleIdentifier:]
  +[GKGameRecord internalRepresentationCache]
  +[GKGameRecord cacheKeyForPlayer:game:]
  +[GKGameRecord internalRepresentationForPlayer:game:]
  +[GKGameRecord loadGameRecordsForPlayer:games:withCompletionHandler:]
  +[GKGameRecord loadGameRecordsForPlayer:bundleIDs:withCompletionHandler:]
  +[GKGameRecord partitionGameRecords:returniOS:returnMac:]
  +[GKGameRecord cacheKeyForPlayer:internal:]
  +[GKGameRecord loadGameRecordForPlayer:game:withCompletionHandler:]

  // instance methods
  -[GKGameRecord initWithCoder:]
  -[GKGameRecord played]
  -[GKGameRecord .cxx_destruct]
  -[GKGameRecord setPlayer:]
  -[GKGameRecord init]
  -[GKGameRecord isEqual:]
  -[GKGameRecord player]
  -[GKGameRecord initWithInternalRepresentation:]
  -[GKGameRecord encodeWithCoder:]
  -[GKGameRecord initWithInternalRepresentation:player:]


_GKURLRequestDictionaryKey : NSObject <NSCopying>
 @property  NSURLRequest *request

  // class methods
  +[_GKURLRequestDictionaryKey keyWithRequest:]

  // instance methods
  -[_GKURLRequestDictionaryKey setRequest:]
  -[_GKURLRequestDictionaryKey initWithRequest:]
  -[_GKURLRequestDictionaryKey .cxx_destruct]
  -[_GKURLRequestDictionaryKey isEqual:]
  -[_GKURLRequestDictionaryKey request]
  -[_GKURLRequestDictionaryKey copyWithZone:]


GKApplicationStateMonitor : NSObject <LSApplicationWorkspaceObserverProtocol>
 @property  RBSProcessMonitor *processMonitor
 @property  NSMutableSet *interestedBundleIDs
 @property  @? handler
 @property  <LSApplicationWorkspaceObserverProtocol> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKApplicationStateMonitor applicationsDidUninstall:]
  -[GKApplicationStateMonitor processMonitor]
  -[GKApplicationStateMonitor .cxx_destruct]
  -[GKApplicationStateMonitor applicationsWillUninstall:]
  -[GKApplicationStateMonitor setDelegate:]
  -[GKApplicationStateMonitor init]
  -[GKApplicationStateMonitor interestedBundleIDs]
  -[GKApplicationStateMonitor setInterestedBundleIDs:]
  -[GKApplicationStateMonitor delegate]
  -[GKApplicationStateMonitor startObservingStateChangesForBundleID:]
  -[GKApplicationStateMonitor observingStateChangesForBundleID:]
  -[GKApplicationStateMonitor dealloc]
  -[GKApplicationStateMonitor setHandler:]
  -[GKApplicationStateMonitor setProcessMonitor:]
  -[GKApplicationStateMonitor startObservingApplicationWorkspaceChanges]
  -[GKApplicationStateMonitor handler]


GKInternalRepresentation : NSObject <NSCoding, NSCopying, NSSecureCoding>
  // class methods
  +[GKInternalRepresentation supportsSecureCoding]
  +[GKInternalRepresentation internalRepresentation]
  +[GKInternalRepresentation secureCodedPropertyKeys]
  +[GKInternalRepresentation codedPropertyKeys]

  // instance methods
  -[GKInternalRepresentation initWithCoder:]
  -[GKInternalRepresentation copyWithZone:]
  -[GKInternalRepresentation encodeWithCoder:]
  -[GKInternalRepresentation _gkDescriptionWithChildren:]
  -[GKInternalRepresentation serverRepresentation]
  -[GKInternalRepresentation descriptionSubstitutionMap]
  -[GKInternalRepresentation mergePropertiesFrom:]


GKPreferences : NSObject
 @property  <GKPreferencesDelegate> *preferencesDelegate
 @property  BOOL storeDemoModeEnabled
 @property  BOOL addingFriendsRestricted
 @property  BOOL multiplayerGamingRestricted
 @property  BOOL appInstallationRestricted
 @property  BOOL accountModificationRestricted
 @property  BOOL gameCenterRestricted
 @property  BOOL sharingRestricted
 @property  BOOL customizedCommunicationRestricted
 @property  BOOL nearbyMultiplayerRestricted
 @property  BOOL profileModificationRestricted
 @property  BOOL profilePrivacyModificationRestricted
 @property  unsigned long multiplayerAllowedPlayerType
 @property  BOOL friendsSharingRestricted
 @property  BOOL friendRequestsRestricted
 @property  BOOL _shouldSynchronizeOnNextRead
 @property  NSDictionary *recentNumberOfPlayersPerGame
 @property  NSDictionary *overrideValues
 @property  long long environment
 @property  NSString *storeBagURL
 @property  unsigned long mescalSetupRetries
 @property  long long networkManagerStateOverride
 @property  NSString *networkManagerUserOverride
 @property  unsigned long loginDisableThreshold
 @property  unsigned long coreRecentUpperLimit
 @property  unsigned long coreRecentMultiplier
 @property  BOOL allowUnsignedBag
 @property  BOOL useTestProtocols
 @property  BOOL enterSandbox
 @property  BOOL forceDefaultNickname
 @property  BOOL forceDefaultPrivacy
 @property  BOOL forceUnderage
 @property  double terminationInterval
 @property  double garbageCollectionInterval
 @property  double minimumCacheTTL
 @property  double cacheTTLOverride
 @property  double operationTimeout
 @property  double operationRetryDelay
 @property  unsigned long operationRetryCount
 @property  double debugRequestTimeout
 @property  BOOL notificationCenterEnabled
 @property  BOOL notificationBadgesEnabled
 @property  BOOL notificationSoundsEnabled
 @property  BOOL notificationAlertsEnabled
 @property  BOOL verboseLogging
 @property  unsigned int logFilter
 @property  BOOL comprehensiveLoggingEnabled
 @property  NSString *testRunID
 @property  BOOL clipGestureEnabled
 @property  BOOL forceRelay
 @property  BOOL preemptiveRelay
 @property  long long pushEnvironment
 @property  long long pipeliningSetting
 @property  BOOL restrictToAutomatch
 @property  unsigned long recentNumberOfPlayers
 @property  unsigned long maxPlayersP2P
 @property  unsigned long maxPlayersHosted
 @property  unsigned long maxPlayersTurnBased
 @property  unsigned long maxGameStateSizeTurnBased
 @property  unsigned long exchangeDataMaximumSize
 @property  unsigned long exchangeMaxInitiatedExchangesPerPlayer
 @property  BOOL HTTPShouldUsePipelining
 @property  unsigned long maxDefaultPlayersP2P
 @property  unsigned long maxDefaultPlayersHosted
 @property  unsigned long maxDefaultPlayersTurnBased
 @property  unsigned long maxDefaultGameStateSizeTurnBased
 @property  unsigned long exchangeDataDefaultMaximumSize
 @property  unsigned long exchangeDefaultMaxInitiatedExchangesPerPlayer
 @property  BOOL useInternalHeader
 @property  BOOL webKitInspectElementEnabled
 @property  BOOL shouldAnnotateImageUsage
 @property  BOOL shouldTrackAtlasImageUsage
 @property  BOOL shouldUseTestIcons
 @property  BOOL shouldLinkPlayerToICloud
 @property  BOOL shouldLinkPlayerToTwitter
 @property  BOOL shouldLinkPlayerToFacebook
 @property  BOOL shouldDisallowInvitesFromStrangers
 @property  BOOL shouldAllowNearbyMultiplayer
 @property  BOOL shouldAddPlayerInfoToAddressBook
 @property  BOOL shouldAllowSharing
 @property  BOOL shouldAllowCustomCommunication
 @property  BOOL multiplayerShouldAlwaysReloadCollectionView
 @property  unsigned long maxRecentPlayersCount
 @property  double maxRecentPlayersTime
 @property  BOOL accessPointIsOnAutomatically
 @property  BOOL accessPointShowHighlights
 @property  long long accessPointLocation
 @property  BOOL supportsChallenges
 @property  BOOL dashboardDeepLinkEnabled
 @property  BOOL improvedMultiplayerFlow
 @property  BOOL inboxContactsOnly
 @property  long long fakeFriendRequestCount
 @property  BOOL newDashboardUI
 @property  BOOL featureFlagsFriendsApi
 @property  BOOL arcadeDashboardSection
 @property  BOOL tournamentsDebuggingEnabled
 @property  long long tournamentState
 @property  long long tournamentParticipantState
 @property  long long tournamentPlayers
 @property  long long tournamentReplays
 @property  long long tournamentDuration
 @property  NSDate *tournamentStartDate
 @property  NSDate *tournamentEndDate
 @property  long long tournamentMinPlayers
 @property  long long tournamentMaxPlayers
 @property  long long tournamentMaxReplays
 @property  long long tournamentAutoDuration
 @property  long long tournamentCustomMinPlayers
 @property  long long tournamentCustomMaxPlayers
 @property  long long tournamentCustomMaxReplays
 @property  long long tournamentCustomDuration
 @property  long long tournamentUIAppearanceStyle
 @property  long long tournamentCreationMethod
 @property  BOOL restrictToTournamentPlayers
 @property  long long tournamentServer
 @property  BOOL tournamentDemoModeEnabled
 @property  long long tournamentMaxSimulatedPlayers
 @property  long long tournamentMaxSimulatedFriends

  // class methods
  +[GKPreferences shared]
  +[GKPreferences displayNameForEnvironment:]
  +[GKPreferences hostNameForEnvironment:]

  // instance methods
  -[GKPreferences operationTimeout]
  -[GKPreferences pushEnvironment]
  -[GKPreferences booleanValueForKey:defaultValue:]
  -[GKPreferences preferencesValueForKey:]
  -[GKPreferences setPushEnvironment:]
  -[GKPreferences .cxx_destruct]
  -[GKPreferences HTTPShouldUsePipelining]
  -[GKPreferences synchronize]
  -[GKPreferences setEnvironment:]
  -[GKPreferences booleanValueForKey:]
  -[GKPreferences setTimeInterval:forKey:]
  -[GKPreferences timeIntervalForKey:defaultValue:]
  -[GKPreferences setPreferencesDelegate:]
  -[GKPreferences init]
  -[GKPreferences profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:]
  -[GKPreferences integerValueForKey:defaultValue:]
  -[GKPreferences isInternalBuild]
  -[GKPreferences preferencesDelegate]
  -[GKPreferences overrideValues]
  -[GKPreferences setOverrideValues:]
  -[GKPreferences invalidate]
  -[GKPreferences environment]
  -[GKPreferences isAccountModificationRestricted]
  -[GKPreferences verboseLogging]
  -[GKPreferences setVerboseLogging:]
  -[GKPreferences recentNumberOfPlayers]
  -[GKPreferences shouldAllowCustomCommunication]
  -[GKPreferences setRecentNumberOfPlayers:]
  -[GKPreferences isFriendsSharingRestricted]
  -[GKPreferences multiplayerAllowedPlayerType]
  -[GKPreferences newDashboardUI]
  -[GKPreferences notificationBadgesEnabled]
  -[GKPreferences notificationSoundsEnabled]
  -[GKPreferences notificationAlertsEnabled]
  -[GKPreferences setNotificationBadgesEnabled:]
  -[GKPreferences setNotificationSoundsEnabled:]
  -[GKPreferences setNotificationAlertsEnabled:]
  -[GKPreferences isNotificationCenterEnabled]
  -[GKPreferences setNotificationCenterEnabled:]
  -[GKPreferences shouldAllowSharing]
  -[GKPreferences accessPointShowHighlights]
  -[GKPreferences accessPointLocation]
  -[GKPreferences accessPointIsOnAutomatically]
  -[GKPreferences isAppInstallationRestricted]
  -[GKPreferences isStoreDemoModeEnabled]
  -[GKPreferences isGameCenterRestricted]
  -[GKPreferences setRecentNumberOfPlayers:forBundleID:]
  -[GKPreferences shouldAllowNearbyMultiplayer]
  -[GKPreferences isProfileModificationRestricted]
  -[GKPreferences recentNumberOfPlayersForBundleID:]
  -[GKPreferences multiplayerShouldAlwaysReloadCollectionView]
  -[GKPreferences supportsChallenges]
  -[GKPreferences isAddingFriendsRestricted]
  -[GKPreferences restrictToAutomatch]
  -[GKPreferences improvedMultiplayerFlow]
  -[GKPreferences setShouldAllowNearbyMultiplayer:]
  -[GKPreferences isProfilePrivacyModificationRestricted]
  -[GKPreferences inboxContactsOnly]
  -[GKPreferences setInboxContactsOnly:]
  -[GKPreferences isCustomizedCommunicationRestricted]
  -[GKPreferences isNearbyMultiplayerRestricted]
  -[GKPreferences isFriendRequestsRestricted]
  -[GKPreferences featureFlagsFriendsApi]
  -[GKPreferences stringValueForKey:defaultValue:]
  -[GKPreferences minimumCacheTTL]
  -[GKPreferences tournamentDuration]
  -[GKPreferences tournamentEndDate]
  -[GKPreferences tournamentState]
  -[GKPreferences initWithoutUIKitNotifications]
  -[GKPreferences logFilter]
  -[GKPreferences useTestProtocols]
  -[GKPreferences useInternalHeader]
  -[GKPreferences testRunID]
  -[GKPreferences isMultiplayerGamingRestricted]
  -[GKPreferences applicationWillEnterBackground:]
  -[GKPreferences initWithUIKitNotifications]
  -[GKPreferences _shouldSynchronizeOnNextRead]
  -[GKPreferences set_shouldSynchronizeOnNextRead:]
  -[GKPreferences removeOverrideForKey:]
  -[GKPreferences _didWriteKey:]
  -[GKPreferences setIntegerValue:forKey:]
  -[GKPreferences setBooleanValue:forKey:]
  -[GKPreferences unsignedIntegerValueForKey:defaultValue:]
  -[GKPreferences setUnsignedIntegerValue:forKey:]
  -[GKPreferences setStringValue:forKey:]
  -[GKPreferences dictionaryValueForKey:]
  -[GKPreferences setDictionaryValue:forKey:]
  -[GKPreferences recentNumberOfPlayersPerGame]
  -[GKPreferences setRecentNumberOfPlayersPerGame:]
  -[GKPreferences maxDefaultPlayersP2P]
  -[GKPreferences maxDefaultPlayersHosted]
  -[GKPreferences maxDefaultPlayersTurnBased]
  -[GKPreferences maxDefaultGameStateSizeTurnBased]
  -[GKPreferences exchangeDataDefaultMaximumSize]
  -[GKPreferences exchangeDefaultMaxInitiatedExchangesPerPlayer]
  -[GKPreferences isSharingRestricted]
  -[GKPreferences setLogFilter:]
  -[GKPreferences storeBagURL]
  -[GKPreferences setStoreBagURL:]
  -[GKPreferences allowUnsignedBag]
  -[GKPreferences setAllowUnsignedBag:]
  -[GKPreferences setUseTestProtocols:]
  -[GKPreferences enterSandbox]
  -[GKPreferences setEnterSandbox:]
  -[GKPreferences forceDefaultNickname]
  -[GKPreferences setForceDefaultNickname:]
  -[GKPreferences forceDefaultPrivacy]
  -[GKPreferences setForceDefaultPrivacy:]
  -[GKPreferences forceUnderage]
  -[GKPreferences setForceUnderage:]
  -[GKPreferences mescalSetupRetries]
  -[GKPreferences setMescalSetupRetries:]
  -[GKPreferences coreRecentUpperLimit]
  -[GKPreferences setCoreRecentUpperLimit:]
  -[GKPreferences coreRecentMultiplier]
  -[GKPreferences setCoreRecentMultiplier:]
  -[GKPreferences loginDisableThreshold]
  -[GKPreferences setNetworkManagerUserOverride:]
  -[GKPreferences networkManagerUserOverride]
  -[GKPreferences setNetworkManagerStateOverride:]
  -[GKPreferences networkManagerStateOverride]
  -[GKPreferences setLoginDisableThreshold:]
  -[GKPreferences setOperationTimeout:]
  -[GKPreferences operationRetryDelay]
  -[GKPreferences setOperationRetryDelay:]
  -[GKPreferences operationRetryCount]
  -[GKPreferences setOperationRetryCount:]
  -[GKPreferences debugRequestTimeout]
  -[GKPreferences setDebugRequestTimeout:]
  -[GKPreferences setTestRunID:]
  -[GKPreferences forceRelay]
  -[GKPreferences setForceRelay:]
  -[GKPreferences preemptiveRelay]
  -[GKPreferences setPreemptiveRelay:]
  -[GKPreferences pipeliningSetting]
  -[GKPreferences setPipeliningSetting:]
  -[GKPreferences setRestrictToAutomatch:]
  -[GKPreferences maxPlayersP2P]
  -[GKPreferences setMaxPlayersP2P:]
  -[GKPreferences maxPlayersHosted]
  -[GKPreferences setMaxPlayersHosted:]
  -[GKPreferences maxPlayersTurnBased]
  -[GKPreferences setMaxPlayersTurnBased:]
  -[GKPreferences maxGameStateSizeTurnBased]
  -[GKPreferences setMaxGameStateSizeTurnBased:]
  -[GKPreferences exchangeDataMaximumSize]
  -[GKPreferences setExchangeDataMaximumSize:]
  -[GKPreferences exchangeMaxInitiatedExchangesPerPlayer]
  -[GKPreferences setExchangeMaxInitiatedExchangesPerPlayer:]
  -[GKPreferences setUseInternalHeader:]
  -[GKPreferences terminationInterval]
  -[GKPreferences setTerminationInterval:]
  -[GKPreferences garbageCollectionInterval]
  -[GKPreferences setGarbageCollectionInterval:]
  -[GKPreferences setMinimumCacheTTL:]
  -[GKPreferences cacheTTLOverride]
  -[GKPreferences setCacheTTLOverride:]
  -[GKPreferences shouldAnnotateImageUsage]
  -[GKPreferences setShouldAnnotateImageUsage:]
  -[GKPreferences shouldTrackAtlasImageUsage]
  -[GKPreferences setShouldTrackAtlasImageUsage:]
  -[GKPreferences shouldUseTestIcons]
  -[GKPreferences setShouldUseTestIcons:]
  -[GKPreferences shouldLinkPlayerToICloud]
  -[GKPreferences setShouldLinkPlayerToICloud:]
  -[GKPreferences shouldLinkPlayerToTwitter]
  -[GKPreferences setShouldLinkPlayerToTwitter:]
  -[GKPreferences shouldLinkPlayerToFacebook]
  -[GKPreferences setShouldLinkPlayerToFacebook:]
  -[GKPreferences shouldDisallowInvitesFromStrangers]
  -[GKPreferences shouldAddPlayerInfoToAddressBook]
  -[GKPreferences setShouldAddPlayerInfoToAddressBook:]
  -[GKPreferences setMultiplayerShouldAlwaysReloadCollectionView:]
  -[GKPreferences setMaxRecentPlayersCount:]
  -[GKPreferences maxRecentPlayersCount]
  -[GKPreferences setMaxRecentPlayersTime:]
  -[GKPreferences maxRecentPlayersTime]
  -[GKPreferences isClipGestureEnabled]
  -[GKPreferences setClipGestureEnabled:]
  -[GKPreferences isComprehensiveLoggingEnabled]
  -[GKPreferences setComprehensiveLoggingEnabled:]
  -[GKPreferences setNewDashboardUI:]
  -[GKPreferences arcadeDashboardSection]
  -[GKPreferences setArcadeDashboardSection:]
  -[GKPreferences dashboardDeepLinkEnabled]
  -[GKPreferences setDashboardDeepLinkEnabled:]
  -[GKPreferences fakeFriendRequestCount]
  -[GKPreferences setFakeFriendRequestCount:]
  -[GKPreferences setAccessPointIsOnAutomatically:]
  -[GKPreferences setAccessPointShowHighlights:]
  -[GKPreferences setAccessPointLocation:]
  -[GKPreferences setSupportsChallenges:]
  -[GKPreferences tournamentsDebuggingEnabled]
  -[GKPreferences setTournamentsDebuggingEnabled:]
  -[GKPreferences tournamentDemoModeEnabled]
  -[GKPreferences setTournamentDemoModeEnabled:]
  -[GKPreferences tournamentMaxSimulatedPlayers]
  -[GKPreferences setTournamentMaxSimulatedPlayers:]
  -[GKPreferences tournamentMaxSimulatedFriends]
  -[GKPreferences setTournamentMaxSimulatedFriends:]
  -[GKPreferences setTournamentState:]
  -[GKPreferences tournamentParticipantState]
  -[GKPreferences setTournamentParticipantState:]
  -[GKPreferences tournamentPlayers]
  -[GKPreferences setTournamentPlayers:]
  -[GKPreferences tournamentReplays]
  -[GKPreferences setTournamentReplays:]
  -[GKPreferences setTournamentDuration:]
  -[GKPreferences tournamentStartDate]
  -[GKPreferences setTournamentStartDate:]
  -[GKPreferences setTournamentEndDate:]
  -[GKPreferences tournamentMinPlayers]
  -[GKPreferences setTournamentMinPlayers:]
  -[GKPreferences tournamentMaxPlayers]
  -[GKPreferences setTournamentMaxPlayers:]
  -[GKPreferences tournamentMaxReplays]
  -[GKPreferences setTournamentMaxReplays:]
  -[GKPreferences tournamentAutoDuration]
  -[GKPreferences setTournamentAutoDuration:]
  -[GKPreferences tournamentCustomMinPlayers]
  -[GKPreferences setTournamentCustomMinPlayers:]
  -[GKPreferences tournamentCustomMaxPlayers]
  -[GKPreferences setTournamentCustomMaxPlayers:]
  -[GKPreferences tournamentCustomMaxReplays]
  -[GKPreferences setTournamentCustomMaxReplays:]
  -[GKPreferences tournamentCustomDuration]
  -[GKPreferences setTournamentCustomDuration:]
  -[GKPreferences tournamentUIAppearanceStyle]
  -[GKPreferences setTournamentUIAppearanceStyle:]
  -[GKPreferences tournamentCreationMethod]
  -[GKPreferences setTournamentCreationMethod:]
  -[GKPreferences restrictToTournamentPlayers]
  -[GKPreferences setRestrictToTournamentPlayers:]
  -[GKPreferences tournamentServer]
  -[GKPreferences setTournamentServer:]
  -[GKPreferences isWebKitInspectElementEnabled]
  -[GKPreferences setWebKitInspectElementEnabled:]
  -[GKPreferences getMultiplayerAllowedPlayerTypeWithHandler:]
  -[GKPreferences restrictionEnabledForKey:]
  -[GKPreferences valueRestrictionForKey:]


GKProfileServiceInterface : GKServiceInterface
  // class methods
  +[GKProfileServiceInterface interfaceProtocol]
  +[GKProfileServiceInterface configureInterface:]


GKProfileServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKProfileServicePrivateInterface interfaceProtocol]


GKGameDescriptor : GKInternalRepresentation
 @property  NSNumber *adamID
 @property  NSNumber *externalVersion
 @property  NSString *bundleIdentifier
 @property  NSString *bundleVersion
 @property  NSString *shortBundleVersion
 @property  long long platform

  // class methods
  +[GKGameDescriptor supportsSecureCoding]
  +[GKGameDescriptor currentPlatform]
  +[GKGameDescriptor secureCodedPropertyKeys]
  +[GKGameDescriptor currentPlatformServerString]
  +[GKGameDescriptor gamePlatformFromServerGameDescriptorString:]
  +[GKGameDescriptor gamePlatformFromServerPushString:]
  +[GKGameDescriptor platformStringForServerRequest:]
  +[GKGameDescriptor gameDescriptorWithBundleID:bundleVersion:shortBundleVersion:adamID:]

  // instance methods
  -[GKGameDescriptor bundleVersion]
  -[GKGameDescriptor adamID]
  -[GKGameDescriptor setBundleVersion:]
  -[GKGameDescriptor setPlatform:]
  -[GKGameDescriptor platform]
  -[GKGameDescriptor bundleIdentifier]
  -[GKGameDescriptor .cxx_destruct]
  -[GKGameDescriptor setBundleIdentifier:]
  -[GKGameDescriptor externalVersion]
  -[GKGameDescriptor initWithDictionary:]
  -[GKGameDescriptor setAdamID:]
  -[GKGameDescriptor shortBundleVersion]
  -[GKGameDescriptor setShortBundleVersion:]
  -[GKGameDescriptor initWithPushDictionary:]
  -[GKGameDescriptor dictionaryForRequest]
  -[GKGameDescriptor setExternalVersion:]


GKPlayerCredentialController : NSObject
 @property  ACAccountStore *store
 @property  GKThreadsafeDictionary *primaryCredentialCache
 @property  GKThreadsafeDictionary *allCredentialsCache
 @property  long long loginCancelledCount
 @property  BOOL loginDisabled

  // class methods
  +[GKPlayerCredentialController accessQueue]
  +[GKPlayerCredentialController migrateOldAccountInformation]
  +[GKPlayerCredentialController sharedController]

  // instance methods
  -[GKPlayerCredentialController _transact:complete:]
  -[GKPlayerCredentialController accessQueue]
  -[GKPlayerCredentialController loginStatusForCredential:]
  -[GKPlayerCredentialController .cxx_destruct]
  -[GKPlayerCredentialController accountStoreEmailDidChange:]
  -[GKPlayerCredentialController invalidateCredentialCaches]
  -[GKPlayerCredentialController setStore:]
  -[GKPlayerCredentialController removeAllCredentialsForEnvironment:completionHandler:]
  -[GKPlayerCredentialController credentialForUsername:environment:]
  -[GKPlayerCredentialController getAltDSIDFromIDMSForCredential:completionHandler:]
  -[GKPlayerCredentialController init]
  -[GKPlayerCredentialController primaryCredentialForEnvironment:]
  -[GKPlayerCredentialController allCredentialsForEnvironment:]
  -[GKPlayerCredentialController setPrimaryCredential:completionHandler:]
  -[GKPlayerCredentialController replaceCredential:withCredential:completionHandler:]
  -[GKPlayerCredentialController store]
  -[GKPlayerCredentialController suggestedUsername]
  -[GKPlayerCredentialController _transactAndWait:]
  -[GKPlayerCredentialController setCredential:completionHandler:]
  -[GKPlayerCredentialController dealloc]
  -[GKPlayerCredentialController setAllCredentialsCache:]
  -[GKPlayerCredentialController credentialForPlayer:environment:]
  -[GKPlayerCredentialController pushCredentialForEnvironment:]
  -[GKPlayerCredentialController loginCancelledCount]
  -[GKPlayerCredentialController setLoginCancelledCount:]
  -[GKPlayerCredentialController primaryCredentialCache]
  -[GKPlayerCredentialController setPrimaryCredentialCache:]
  -[GKPlayerCredentialController accountStoreDidChange:]
  -[GKPlayerCredentialController removeCredential:completionHandler:]
  -[GKPlayerCredentialController allCredentialsCache]
  -[GKPlayerCredentialController loginDisabled]


GKAuthenticationMachine : NSObject <NSCoding>
 @property  long long loginCancelledCount
 @property  NSString *accountName
 @property  long long serverEnvironment

  // class methods
  +[GKAuthenticationMachine authMachineForEnvironment:]
  +[GKAuthenticationMachine supportsSecureCoding]
  +[GKAuthenticationMachine migratePreBlacktailAccountInformation]
  +[GKAuthenticationMachine migratePreSundanceAccountInformation]

  // instance methods
  -[GKAuthenticationMachine setAccountName:]
  -[GKAuthenticationMachine initWithCoder:]
  -[GKAuthenticationMachine .cxx_destruct]
  -[GKAuthenticationMachine accountName]
  -[GKAuthenticationMachine serverEnvironment]
  -[GKAuthenticationMachine loginCancelledCount]
  -[GKAuthenticationMachine setLoginCancelledCount:]
  -[GKAuthenticationMachine encodeWithCoder:]
  -[GKAuthenticationMachine setServerEnvironment:]


GKReachability : NSObject
  // class methods
  +[GKReachability _gkReachabilityForInternetConnection]
  +[GKReachability _gkIsOnline]
  +[GKReachability _gkReachabilityWithAddress:]
  +[GKReachability _gkReachabilityWithHostName:]
  +[GKReachability _gkReachabilityForLocalWiFi]

  // instance methods
  -[GKReachability networkStatusForFlags:]
  -[GKReachability localWiFiStatusForFlags:]
  -[GKReachability dealloc]
  -[GKReachability _gkCurrentReachabilityStatus]
  -[GKReachability _gkStartNotifier]
  -[GKReachability _gkStopNotifier]
  -[GKReachability _gkConnectionRequired]


GKHostReachability : GKReachability
 @property  NSString *hostName
 @property  NSError *error

  // class methods
  +[GKHostReachability _gkReachabilityWithHostName:]

  // instance methods
  -[GKHostReachability hostName]
  -[GKHostReachability setHostName:]
  -[GKHostReachability dealloc]
  -[GKHostReachability setError:]
  -[GKHostReachability error]


GKTournamentParticipant : NSObject <NSSecureCoding>
 @property  GKTournamentParticipantInternal *internal
 @property  GKPlayer *player
 @property  long long score
 @property  long long playerGroup
 @property  long long replayCount
 @property  long long participantState
 @property  BOOL cheatingIndicator

  // class methods
  +[GKTournamentParticipant supportsSecureCoding]

  // instance methods
  -[GKTournamentParticipant internal]
  -[GKTournamentParticipant initWithCoder:]
  -[GKTournamentParticipant .cxx_destruct]
  -[GKTournamentParticipant forwardingTargetForSelector:]
  -[GKTournamentParticipant setPlayer:]
  -[GKTournamentParticipant init]
  -[GKTournamentParticipant player]
  -[GKTournamentParticipant initWithInternalRepresentation:]
  -[GKTournamentParticipant setInternal:]
  -[GKTournamentParticipant encodeWithCoder:]


GKTournamentParticipantRequest : NSObject <NSSecureCoding>
 @property  GKTournamentParticipantRequestInternal *internal
 @property  NSArray *participantStates
 @property  BOOL friendsOnly
 @property  {_NSRange=QQ} range

  // class methods
  +[GKTournamentParticipantRequest supportsSecureCoding]

  // instance methods
  -[GKTournamentParticipantRequest internal]
  -[GKTournamentParticipantRequest range]
  -[GKTournamentParticipantRequest initWithCoder:]
  -[GKTournamentParticipantRequest .cxx_destruct]
  -[GKTournamentParticipantRequest setRange:]
  -[GKTournamentParticipantRequest forwardingTargetForSelector:]
  -[GKTournamentParticipantRequest init]
  -[GKTournamentParticipantRequest initWithInternalRepresentation:]
  -[GKTournamentParticipantRequest setInternal:]
  -[GKTournamentParticipantRequest encodeWithCoder:]


GKTournamentParticipantHistoricalData : NSObject <NSSecureCoding>
 @property  GKTournamentParticipantHistoricalDataInternal *internal
 @property  GKPlayer *player
 @property  long long tournamentsPlayed
 @property  long long highestRank
 @property  long long latestRank
 @property  long long averageRank
 @property  long long bestScore
 @property  long long latestScore
 @property  long long averageScore
 @property  NSMutableArray *historicalRanks

  // class methods
  +[GKTournamentParticipantHistoricalData supportsSecureCoding]

  // instance methods
  -[GKTournamentParticipantHistoricalData internal]
  -[GKTournamentParticipantHistoricalData initWithCoder:]
  -[GKTournamentParticipantHistoricalData .cxx_destruct]
  -[GKTournamentParticipantHistoricalData forwardingTargetForSelector:]
  -[GKTournamentParticipantHistoricalData init]
  -[GKTournamentParticipantHistoricalData player]
  -[GKTournamentParticipantHistoricalData initWithInternalRepresentation:]
  -[GKTournamentParticipantHistoricalData setInternal:]
  -[GKTournamentParticipantHistoricalData encodeWithCoder:]


GKSession : NSObject
 @property  <GKSessionPrivateDelegate> *privateDelegate
 @property  BOOL busy
 @property  BOOL wifiEnabled
 @property  GKConnection *connection
 @property  <GKSessionDelegate> *delegate
 @property  NSString *sessionID
 @property  NSString *displayName
 @property  int sessionMode
 @property  NSString *peerID
 @property  BOOL available
 @property  double disconnectTimeout

  // class methods
  +[GKSession initialize]

  // instance methods
  -[GKSession sessionID]
  -[GKSession peerID]
  -[GKSession displayName]
  -[GKSession setAvailable:]
  -[GKSession .cxx_destruct]
  -[GKSession isAvailable]
  -[GKSession initWithConnection:delegate:]
  -[GKSession setDelegate:]
  -[GKSession connection]
  -[GKSession setPrivateDelegate:]
  -[GKSession setWifiEnabled:]
  -[GKSession delegate]
  -[GKSession wifiEnabled]
  -[GKSession setBusy:]
  -[GKSession dealloc]
  -[GKSession privateDelegate]
  -[GKSession isBusy]
  -[GKSession setDisconnectTimeout:]
  -[GKSession disconnectTimeout]
  -[GKSession displayNameForPeer:]
  -[GKSession sendData:toPeers:withDataMode:error:]
  -[GKSession sendDataToAllPeers:withDataMode:error:]
  -[GKSession setDataReceiveHandler:withContext:]
  -[GKSession connectToPeer:withTimeout:]
  -[GKSession cancelConnectToPeer:]
  -[GKSession acceptConnectionFromPeer:error:]
  -[GKSession denyConnectionFromPeer:]
  -[GKSession disconnectPeerFromAllPeers:]
  -[GKSession disconnectFromAllPeers]
  -[GKSession peersWithConnectionState:]
  -[GKSession sessionMode]
  -[GKSession isPeerBusy:]
  -[GKSession initWithSessionID:displayName:sessionMode:]
  -[GKSession privateImpl]


GKUpdateGroupNotifier : NSObject
 @property  GKUpdateGroup *group
 @property  NSLock *lock
 @property  NSMutableArray *updateQueue
 @property  NSError *error

  // instance methods
  -[GKUpdateGroupNotifier setGroup:]
  -[GKUpdateGroupNotifier .cxx_destruct]
  -[GKUpdateGroupNotifier retain]
  -[GKUpdateGroupNotifier updateQueue]
  -[GKUpdateGroupNotifier init]
  -[GKUpdateGroupNotifier setUpdateQueue:]
  -[GKUpdateGroupNotifier release]
  -[GKUpdateGroupNotifier group]
  -[GKUpdateGroupNotifier setLock:]
  -[GKUpdateGroupNotifier dealloc]
  -[GKUpdateGroupNotifier lock]
  -[GKUpdateGroupNotifier setError:]
  -[GKUpdateGroupNotifier error]
  -[GKUpdateGroupNotifier addUpdatesFromGroup:]
  -[GKUpdateGroupNotifier addUpdate:error:]
  -[GKUpdateGroupNotifier updateError:]


GKUpdateGroup : NSObject
 @property  NSLock *lock
 @property  NSMutableArray *notifiers
 @property  NSError *error
 @property  NSString *name
 @property  long long updateCount

  // class methods
  +[GKUpdateGroup updateGroup]
  +[GKUpdateGroup updateGroupWithName:]
  +[GKUpdateGroup updateGroupForTargetQueue:]
  +[GKUpdateGroup updateGroupWithName:taregetQueue:]

  // instance methods
  -[GKUpdateGroup updateCount]
  -[GKUpdateGroup wait]
  -[GKUpdateGroup name]
  -[GKUpdateGroup perform:]
  -[GKUpdateGroup join:]
  -[GKUpdateGroup setName:]
  -[GKUpdateGroup setLock:]
  -[GKUpdateGroup dealloc]
  -[GKUpdateGroup lock]
  -[GKUpdateGroup setError:]
  -[GKUpdateGroup error]
  -[GKUpdateGroup applyUpdates]
  -[GKUpdateGroup performOnQueue:block:]
  -[GKUpdateGroup initWithName:targetQueue:]
  -[GKUpdateGroup notifiers]
  -[GKUpdateGroup joinApplyUpdatesAndDo:]
  -[GKUpdateGroup joinAndApplyUpdates]
  -[GKUpdateGroup cancelUpdates]
  -[GKUpdateGroup setNotifiers:]


GKTournamentDefinitionInternal : GKInternalRepresentation
 @property  NSString *tournamentDefinitionID
 @property  NSString *tournamentName
 @property  long long tournamentNameFormat
 @property  NSString *tournamentDescription
 @property  NSString *tournamentIcon
 @property  long long tournamentType
 @property  long long creationMethod
 @property  long long seedingMethod
 @property  long long participationType
 @property  long long scoringMethod
 @property  long long maxPlayers
 @property  long long minPlayers
 @property  long long maxPlayerShards
 @property  double typicalGameplayDuration
 @property  double tournamentDuration
 @property  double PreRegistrationTime
 @property  GKRecurrenceRule *recurrenceRule
 @property  long long maxReplays
 @property  long long autoTournamentIndex
 @property  NSString *customTournamentName
 @property  long long customTournamentNameFormat
 @property  NSString *customTournamentIcon
 @property  BOOL customTournamentAllowIcon
 @property  long long customSeedingMethods
 @property  long long customScoringMethods
 @property  long long customMaxPlayers
 @property  long long customMinPlayers
 @property  double customTournamentDuration
 @property  long long customMaxReplays

  // class methods
  +[GKTournamentDefinitionInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTournamentDefinitionInternal setRecurrenceRule:]
  -[GKTournamentDefinitionInternal .cxx_destruct]
  -[GKTournamentDefinitionInternal recurrenceRule]
  -[GKTournamentDefinitionInternal minPlayers]
  -[GKTournamentDefinitionInternal maxPlayers]
  -[GKTournamentDefinitionInternal setMinPlayers:]
  -[GKTournamentDefinitionInternal setMaxPlayers:]
  -[GKTournamentDefinitionInternal setTournamentDefinitionID:]
  -[GKTournamentDefinitionInternal tournamentDefinitionID]
  -[GKTournamentDefinitionInternal scoringMethod]
  -[GKTournamentDefinitionInternal seedingMethod]
  -[GKTournamentDefinitionInternal creationMethod]
  -[GKTournamentDefinitionInternal tournamentType]
  -[GKTournamentDefinitionInternal participationType]
  -[GKTournamentDefinitionInternal tournamentName]
  -[GKTournamentDefinitionInternal tournamentNameFormat]
  -[GKTournamentDefinitionInternal tournamentDescription]
  -[GKTournamentDefinitionInternal tournamentIcon]
  -[GKTournamentDefinitionInternal customTournamentName]
  -[GKTournamentDefinitionInternal customTournamentNameFormat]
  -[GKTournamentDefinitionInternal customTournamentIcon]
  -[GKTournamentDefinitionInternal customTournamentAllowIcon]
  -[GKTournamentDefinitionInternal customSeedingMethods]
  -[GKTournamentDefinitionInternal customScoringMethods]
  -[GKTournamentDefinitionInternal customMaxPlayers]
  -[GKTournamentDefinitionInternal customMinPlayers]
  -[GKTournamentDefinitionInternal maxPlayerShards]
  -[GKTournamentDefinitionInternal typicalGameplayDuration]
  -[GKTournamentDefinitionInternal tournamentDuration]
  -[GKTournamentDefinitionInternal customTournamentDuration]
  -[GKTournamentDefinitionInternal PreRegistrationTime]
  -[GKTournamentDefinitionInternal maxReplays]
  -[GKTournamentDefinitionInternal customMaxReplays]
  -[GKTournamentDefinitionInternal setTournamentDuration:]
  -[GKTournamentDefinitionInternal setTournamentName:]
  -[GKTournamentDefinitionInternal setTournamentNameFormat:]
  -[GKTournamentDefinitionInternal setTournamentDescription:]
  -[GKTournamentDefinitionInternal setTournamentIcon:]
  -[GKTournamentDefinitionInternal setTournamentType:]
  -[GKTournamentDefinitionInternal setCreationMethod:]
  -[GKTournamentDefinitionInternal setSeedingMethod:]
  -[GKTournamentDefinitionInternal setParticipationType:]
  -[GKTournamentDefinitionInternal setScoringMethod:]
  -[GKTournamentDefinitionInternal setMaxPlayerShards:]
  -[GKTournamentDefinitionInternal setTypicalGameplayDuration:]
  -[GKTournamentDefinitionInternal setPreRegistrationTime:]
  -[GKTournamentDefinitionInternal setMaxReplays:]
  -[GKTournamentDefinitionInternal autoTournamentIndex]
  -[GKTournamentDefinitionInternal setAutoTournamentIndex:]
  -[GKTournamentDefinitionInternal setCustomTournamentName:]
  -[GKTournamentDefinitionInternal setCustomTournamentNameFormat:]
  -[GKTournamentDefinitionInternal setCustomTournamentIcon:]
  -[GKTournamentDefinitionInternal setCustomTournamentAllowIcon:]
  -[GKTournamentDefinitionInternal setCustomSeedingMethods:]
  -[GKTournamentDefinitionInternal setCustomScoringMethods:]
  -[GKTournamentDefinitionInternal setCustomMaxPlayers:]
  -[GKTournamentDefinitionInternal setCustomMinPlayers:]
  -[GKTournamentDefinitionInternal setCustomTournamentDuration:]
  -[GKTournamentDefinitionInternal setCustomMaxReplays:]


GKCustomTournamentRequestInternal : GKInternalRepresentation
 @property  GKTournamentDefinitionInternal *tournamentDefinition
 @property  GKPlayerInternal *tournamentCreator
 @property  NSString *tournamentName
 @property  NSString *icon
 @property  long long seedingMethod
 @property  long long scoringMethod
 @property  long long maxPlayers
 @property  long long minPlayers
 @property  double duration
 @property  NSDate *startTime
 @property  long long maxReplays
 @property  BOOL isCreatorInTournament

  // class methods
  +[GKCustomTournamentRequestInternal secureCodedPropertyKeys]
  +[GKCustomTournamentRequestInternal customTournamentRequestWithTournamentDefinition:player:]

  // instance methods
  -[GKCustomTournamentRequestInternal icon]
  -[GKCustomTournamentRequestInternal setStartTime:]
  -[GKCustomTournamentRequestInternal .cxx_destruct]
  -[GKCustomTournamentRequestInternal setDuration:]
  -[GKCustomTournamentRequestInternal setIcon:]
  -[GKCustomTournamentRequestInternal startTime]
  -[GKCustomTournamentRequestInternal duration]
  -[GKCustomTournamentRequestInternal minPlayers]
  -[GKCustomTournamentRequestInternal maxPlayers]
  -[GKCustomTournamentRequestInternal setMinPlayers:]
  -[GKCustomTournamentRequestInternal setMaxPlayers:]
  -[GKCustomTournamentRequestInternal setTournamentDefinition:]
  -[GKCustomTournamentRequestInternal tournamentDefinition]
  -[GKCustomTournamentRequestInternal scoringMethod]
  -[GKCustomTournamentRequestInternal seedingMethod]
  -[GKCustomTournamentRequestInternal tournamentName]
  -[GKCustomTournamentRequestInternal maxReplays]
  -[GKCustomTournamentRequestInternal setTournamentName:]
  -[GKCustomTournamentRequestInternal setSeedingMethod:]
  -[GKCustomTournamentRequestInternal setScoringMethod:]
  -[GKCustomTournamentRequestInternal setMaxReplays:]
  -[GKCustomTournamentRequestInternal setTournamentCreator:]
  -[GKCustomTournamentRequestInternal tournamentCreator]
  -[GKCustomTournamentRequestInternal isCreatorInTournament]
  -[GKCustomTournamentRequestInternal setIsCreatorInTournament:]


GKTournamentParticipantInternal : GKInternalRepresentation
 @property  NSString *tournamentID
 @property  GKPlayerInternal *player
 @property  long long score
 @property  long long playerGroup
 @property  long long replayCount
 @property  long long participantState
 @property  BOOL cheatingIndicator

  // class methods
  +[GKTournamentParticipantInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTournamentParticipantInternal setScore:]
  -[GKTournamentParticipantInternal .cxx_destruct]
  -[GKTournamentParticipantInternal setPlayer:]
  -[GKTournamentParticipantInternal participantState]
  -[GKTournamentParticipantInternal setParticipantState:]
  -[GKTournamentParticipantInternal player]
  -[GKTournamentParticipantInternal score]
  -[GKTournamentParticipantInternal setPlayerGroup:]
  -[GKTournamentParticipantInternal playerGroup]
  -[GKTournamentParticipantInternal tournamentID]
  -[GKTournamentParticipantInternal setTournamentID:]
  -[GKTournamentParticipantInternal replayCount]
  -[GKTournamentParticipantInternal cheatingIndicator]
  -[GKTournamentParticipantInternal setReplayCount:]
  -[GKTournamentParticipantInternal setCheatingIndicator:]


GKTournamentParticipantRequestInternal : GKInternalRepresentation
 @property  NSArray *participantStates
 @property  BOOL friendsOnly
 @property  long long startIndex
 @property  long long count

  // class methods
  +[GKTournamentParticipantRequestInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTournamentParticipantRequestInternal .cxx_destruct]
  -[GKTournamentParticipantRequestInternal count]
  -[GKTournamentParticipantRequestInternal participantStates]
  -[GKTournamentParticipantRequestInternal setStartIndex:]
  -[GKTournamentParticipantRequestInternal startIndex]
  -[GKTournamentParticipantRequestInternal setCount:]
  -[GKTournamentParticipantRequestInternal friendsOnly]
  -[GKTournamentParticipantRequestInternal setParticipantStates:]
  -[GKTournamentParticipantRequestInternal setFriendsOnly:]


GKTournamentParticipantHistoricalDataInternal : GKInternalRepresentation
 @property  NSString *tournamentDefinitionID
 @property  GKPlayerInternal *player
 @property  long long tournamentsPlayed
 @property  long long highestRank
 @property  long long latestRank
 @property  long long averageRank
 @property  long long bestScore
 @property  long long latestScore
 @property  long long averageScore
 @property  NSMutableArray *historicalRanks

  // class methods
  +[GKTournamentParticipantHistoricalDataInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTournamentParticipantHistoricalDataInternal .cxx_destruct]
  -[GKTournamentParticipantHistoricalDataInternal setBestScore:]
  -[GKTournamentParticipantHistoricalDataInternal setPlayer:]
  -[GKTournamentParticipantHistoricalDataInternal bestScore]
  -[GKTournamentParticipantHistoricalDataInternal player]
  -[GKTournamentParticipantHistoricalDataInternal setTournamentDefinitionID:]
  -[GKTournamentParticipantHistoricalDataInternal tournamentDefinitionID]
  -[GKTournamentParticipantHistoricalDataInternal tournamentsPlayed]
  -[GKTournamentParticipantHistoricalDataInternal highestRank]
  -[GKTournamentParticipantHistoricalDataInternal latestRank]
  -[GKTournamentParticipantHistoricalDataInternal averageRank]
  -[GKTournamentParticipantHistoricalDataInternal latestScore]
  -[GKTournamentParticipantHistoricalDataInternal averageScore]
  -[GKTournamentParticipantHistoricalDataInternal historicalRanks]
  -[GKTournamentParticipantHistoricalDataInternal setTournamentsPlayed:]
  -[GKTournamentParticipantHistoricalDataInternal setHighestRank:]
  -[GKTournamentParticipantHistoricalDataInternal setLatestRank:]
  -[GKTournamentParticipantHistoricalDataInternal setAverageRank:]
  -[GKTournamentParticipantHistoricalDataInternal setLatestScore:]
  -[GKTournamentParticipantHistoricalDataInternal setAverageScore:]
  -[GKTournamentParticipantHistoricalDataInternal setHistoricalRanks:]


GKTournamentPlayerStandingsInternal : GKInternalRepresentation
 @property  long long score
 @property  long long topScore
 @property  long long friendRank
 @property  long long friendCount
 @property  long long globalRank
 @property  long long globalPlayerCount
 @property  long long replayCount
 @property  long long participantState

  // class methods
  +[GKTournamentPlayerStandingsInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTournamentPlayerStandingsInternal setScore:]
  -[GKTournamentPlayerStandingsInternal participantState]
  -[GKTournamentPlayerStandingsInternal setParticipantState:]
  -[GKTournamentPlayerStandingsInternal score]
  -[GKTournamentPlayerStandingsInternal topScore]
  -[GKTournamentPlayerStandingsInternal friendRank]
  -[GKTournamentPlayerStandingsInternal friendCount]
  -[GKTournamentPlayerStandingsInternal setFriendCount:]
  -[GKTournamentPlayerStandingsInternal replayCount]
  -[GKTournamentPlayerStandingsInternal globalRank]
  -[GKTournamentPlayerStandingsInternal globalPlayerCount]
  -[GKTournamentPlayerStandingsInternal setReplayCount:]
  -[GKTournamentPlayerStandingsInternal setTopScore:]
  -[GKTournamentPlayerStandingsInternal setFriendRank:]
  -[GKTournamentPlayerStandingsInternal setGlobalRank:]
  -[GKTournamentPlayerStandingsInternal setGlobalPlayerCount:]


GKTournamentInternal : GKInternalRepresentation
 @property  NSString *tournamentID
 @property  GKTournamentDefinitionInternal *tournamentDefinition
 @property  NSString *tournamentName
 @property  long long maxReplays
 @property  long long minPlayers
 @property  long long maxPlayers
 @property  long long scoringMethod
 @property  double duration
 @property  long long randomSeed
 @property  NSDate *registrationBeginDate
 @property  NSDate *registrationEndDate
 @property  NSDate *tournamentBeginDate
 @property  NSDate *tournamentEndDate
 @property  long long tournamentState
 @property  GKScoreInternal *bestScore
 @property  GKPlayerInternal *winningPlayer
 @property  long long playerCount
 @property  GKTournamentParticipantInternal *localParticipant
 @property  GKLeaderboardInternal *leaderboard
 @property  long long tournamentError
 @property  NSURL *inviteURLForMessages
 @property  long long tournamentNumber
 @property  long long seedingMethod
 @property  GKPlayerInternal *customTournamentCreator
 @property  NSString *nextTournamentID
 @property  NSDate *nextTournamentBeginDate

  // class methods
  +[GKTournamentInternal defaultCustomTournamentForTournamentDefinition:]
  +[GKTournamentInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTournamentInternal localParticipant]
  -[GKTournamentInternal .cxx_destruct]
  -[GKTournamentInternal setDuration:]
  -[GKTournamentInternal setBestScore:]
  -[GKTournamentInternal bestScore]
  -[GKTournamentInternal duration]
  -[GKTournamentInternal minPlayers]
  -[GKTournamentInternal maxPlayers]
  -[GKTournamentInternal setMinPlayers:]
  -[GKTournamentInternal setMaxPlayers:]
  -[GKTournamentInternal leaderboard]
  -[GKTournamentInternal setLeaderboard:]
  -[GKTournamentInternal setTournamentDefinition:]
  -[GKTournamentInternal tournamentDefinition]
  -[GKTournamentInternal tournamentID]
  -[GKTournamentInternal setTournamentID:]
  -[GKTournamentInternal setRandomSeed:]
  -[GKTournamentInternal randomSeed]
  -[GKTournamentInternal scoringMethod]
  -[GKTournamentInternal seedingMethod]
  -[GKTournamentInternal tournamentName]
  -[GKTournamentInternal maxReplays]
  -[GKTournamentInternal setCustomTournamentCreator:]
  -[GKTournamentInternal winningPlayer]
  -[GKTournamentInternal setWinningPlayer:]
  -[GKTournamentInternal setLocalParticipant:]
  -[GKTournamentInternal customTournamentCreator]
  -[GKTournamentInternal registrationEndDate]
  -[GKTournamentInternal nextTournamentID]
  -[GKTournamentInternal nextTournamentBeginDate]
  -[GKTournamentInternal inviteURLForMessages]
  -[GKTournamentInternal registrationBeginDate]
  -[GKTournamentInternal tournamentBeginDate]
  -[GKTournamentInternal tournamentEndDate]
  -[GKTournamentInternal tournamentState]
  -[GKTournamentInternal playerCount]
  -[GKTournamentInternal tournamentError]
  -[GKTournamentInternal setTournamentState:]
  -[GKTournamentInternal setTournamentEndDate:]
  -[GKTournamentInternal setTournamentName:]
  -[GKTournamentInternal setSeedingMethod:]
  -[GKTournamentInternal setScoringMethod:]
  -[GKTournamentInternal setMaxReplays:]
  -[GKTournamentInternal setRegistrationBeginDate:]
  -[GKTournamentInternal setRegistrationEndDate:]
  -[GKTournamentInternal setTournamentBeginDate:]
  -[GKTournamentInternal setPlayerCount:]
  -[GKTournamentInternal setTournamentError:]
  -[GKTournamentInternal setInviteURLForMessages:]
  -[GKTournamentInternal tournamentNumber]
  -[GKTournamentInternal setTournamentNumber:]
  -[GKTournamentInternal setNextTournamentID:]
  -[GKTournamentInternal setNextTournamentBeginDate:]


GKVoiceChatService : NSObject
 @property  id voiceChatService
 @property  <GKVoiceChatClient> *client
 @property  BOOL microphoneMuted
 @property  float remoteParticipantVolume
 @property  BOOL outputMeteringEnabled
 @property  BOOL inputMeteringEnabled
 @property  float outputMeterLevel
 @property  float inputMeterLevel

  // class methods
  +[GKVoiceChatService initialize]
  +[GKVoiceChatService defaultVoiceChatService]
  +[GKVoiceChatService isVoIPAllowed]

  // instance methods
  -[GKVoiceChatService setMicrophoneMuted:]
  -[GKVoiceChatService .cxx_destruct]
  -[GKVoiceChatService setClient:]
  -[GKVoiceChatService client]
  -[GKVoiceChatService isMicrophoneMuted]
  -[GKVoiceChatService startVoiceChatWithParticipantID:error:]
  -[GKVoiceChatService stopVoiceChatWithParticipantID:]
  -[GKVoiceChatService acceptCallID:error:]
  -[GKVoiceChatService denyCallID:]
  -[GKVoiceChatService receivedData:fromParticipantID:]
  -[GKVoiceChatService remoteParticipantVolume]
  -[GKVoiceChatService setRemoteParticipantVolume:]
  -[GKVoiceChatService isOutputMeteringEnabled]
  -[GKVoiceChatService setOutputMeteringEnabled:]
  -[GKVoiceChatService isInputMeteringEnabled]
  -[GKVoiceChatService setInputMeteringEnabled:]
  -[GKVoiceChatService outputMeterLevel]
  -[GKVoiceChatService inputMeterLevel]
  -[GKVoiceChatService receivedRealTimeData:fromParticipantID:]
  -[GKVoiceChatService voiceChatService]
  -[GKVoiceChatService setVoiceChatService:]


GKLeaderboardScore : NSObject
 @property  GKPlayer *player
 @property  long long value
 @property  unsigned long context
 @property  NSString *leaderboardID

  // class methods
  +[GKLeaderboardScore convertToGKScore:]

  // instance methods
  -[GKLeaderboardScore .cxx_destruct]
  -[GKLeaderboardScore setPlayer:]
  -[GKLeaderboardScore player]
  -[GKLeaderboardScore setValue:]
  -[GKLeaderboardScore value]
  -[GKLeaderboardScore setContext:]
  -[GKLeaderboardScore context]
  -[GKLeaderboardScore leaderboardID]
  -[GKLeaderboardScore setLeaderboardID:]


GKAchievement : NSObject <NSCopying, NSCoding, NSSecureCoding>
 @property  NSString *playerID
 @property  GKAchievementInternal *internal
 @property  NSDate *lastReportedDate
 @property  BOOL hidden
 @property  NSString *groupIdentifier
 @property  GKGame *game
 @property  NSString *identifier
 @property  double percentComplete
 @property  BOOL completed
 @property  BOOL showsCompletionBanner
 @property  GKPlayer *player

  // class methods
  +[GKAchievement instanceMethodSignatureForSelector:]
  +[GKAchievement supportsSecureCoding]
  +[GKAchievement instancesRespondToSelector:]
  +[GKAchievement loadAchievementsForGameV2:players:includeUnreported:includeHidden:withCompletionHandler:]
  +[GKAchievement reportAchievements:whileScreeningChallenges:withEligibleChallenges:withCompletionHandler:]
  +[GKAchievement loadAchievementWithID:forGame:players:complete:]
  +[GKAchievement loadAchievementsForGameV2:player:includeUnreported:includeHidden:withCompletionHandler:]
  +[GKAchievement reportAchievements:withCompletionHandler:]
  +[GKAchievement loadAchievementsWithCompletionHandler:]
  +[GKAchievement resetAchievementsWithCompletionHandler:]

  // instance methods
  -[GKAchievement internal]
  -[GKAchievement setValue:forUndefinedKey:]
  -[GKAchievement valueForUndefinedKey:]
  -[GKAchievement game]
  -[GKAchievement initWithCoder:]
  -[GKAchievement methodSignatureForSelector:]
  -[GKAchievement initWithIdentifier:]
  -[GKAchievement .cxx_destruct]
  -[GKAchievement forwardingTargetForSelector:]
  -[GKAchievement init]
  -[GKAchievement respondsToSelector:]
  -[GKAchievement isEqual:]
  -[GKAchievement player]
  -[GKAchievement initWithInternalRepresentation:]
  -[GKAchievement setInternal:]
  -[GKAchievement setGame:]
  -[GKAchievement copyWithZone:]
  -[GKAchievement playerID]
  -[GKAchievement isCompleted]
  -[GKAchievement encodeWithCoder:]
  -[GKAchievement _achievementDescription]
  -[GKAchievement initWithInternalRepresentation:playerID:]
  -[GKAchievement setShowsCompletionBanner:]
  -[GKAchievement showsCompletionBanner]
  -[GKAchievement initWithIdentifier:player:]
  -[GKAchievement initWithIdentifier:forPlayer:]
  -[GKAchievement reportAchievementWithCompletionHandler:]


GKLocalizedAchievementDescription : GKAchievementDescription
 @property  GKGame *game
 @property  NSString *iconImageName

  // instance methods
  -[GKLocalizedAchievementDescription game]
  -[GKLocalizedAchievementDescription .cxx_destruct]
  -[GKLocalizedAchievementDescription title]
  -[GKLocalizedAchievementDescription setGame:]
  -[GKLocalizedAchievementDescription iconImageName]
  -[GKLocalizedAchievementDescription setIconImageName:]
  -[GKLocalizedAchievementDescription unachievedDescription]
  -[GKLocalizedAchievementDescription achievedDescription]
  -[GKLocalizedAchievementDescription imageNameForIcon]
  -[GKLocalizedAchievementDescription _localizedStringFromKey:]


GKAchievementDescription : NSObject <NSCoding, NSSecureCoding>
 @property  UIImage *image
 @property  GKAchievementInternal *internal
 @property  NSString *identifier
 @property  NSString *groupIdentifier
 @property  NSString *title
 @property  NSString *achievedDescription
 @property  NSString *unachievedDescription
 @property  long long maximumPoints
 @property  BOOL hidden
 @property  BOOL replayable

  // class methods
  +[GKAchievementDescription instanceMethodSignatureForSelector:]
  +[GKAchievementDescription supportsSecureCoding]
  +[GKAchievementDescription instancesRespondToSelector:]
  +[GKAchievementDescription loadAchievementDescriptionsForGame:withCompletionHandler:]
  +[GKAchievementDescription _achievementDescriptionFromGame:propertyListDictionary:]
  +[GKAchievementDescription _loadLocalAchievementDescriptionsForGame:]
  +[GKAchievementDescription loadAchievementDescriptionsWithCompletionHandler:]

  // instance methods
  -[GKAchievementDescription internal]
  -[GKAchievementDescription setValue:forUndefinedKey:]
  -[GKAchievementDescription valueForUndefinedKey:]
  -[GKAchievementDescription game]
  -[GKAchievementDescription initWithCoder:]
  -[GKAchievementDescription methodSignatureForSelector:]
  -[GKAchievementDescription image]
  -[GKAchievementDescription .cxx_destruct]
  -[GKAchievementDescription forwardingTargetForSelector:]
  -[GKAchievementDescription init]
  -[GKAchievementDescription respondsToSelector:]
  -[GKAchievementDescription isEqual:]
  -[GKAchievementDescription initWithInternalRepresentation:]
  -[GKAchievementDescription setInternal:]
  -[GKAchievementDescription setImage:]
  -[GKAchievementDescription encodeWithCoder:]
  -[GKAchievementDescription imageNameForIcon]


GKRecoveryAttempter : NSObject
  // class methods
  +[GKRecoveryAttempter recoveryAttempterUsingHandler:]

  // instance methods
  -[GKRecoveryAttempter .cxx_destruct]
  -[GKRecoveryAttempter attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:]
  -[GKRecoveryAttempter attemptRecoveryFromError:optionIndex:]


GKLinkedAccountsServiceInterface : GKServiceInterface
  // class methods
  +[GKLinkedAccountsServiceInterface interfaceProtocol]


GKLinkedAccountsServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKLinkedAccountsServicePrivateInterface interfaceProtocol]


GKTournamentServiceInterface : GKServiceInterface
  // class methods
  +[GKTournamentServiceInterface interfaceProtocol]
  +[GKTournamentServiceInterface configureInterface:]


GKTournamentServicePrivateInterface : GKTournamentServiceInterface
  // class methods
  +[GKTournamentServicePrivateInterface interfaceProtocol]
  +[GKTournamentServicePrivateInterface configureInterface:]


GKTournamentPredicate : NSObject <NSSecureCoding>
 @property  NSPredicate *predicate

  // class methods
  +[GKTournamentPredicate supportsSecureCoding]
  +[GKTournamentPredicate predicateForAvailableTournaments]
  +[GKTournamentPredicate predicateForAvailableCustomTournaments]
  +[GKTournamentPredicate predicateForAvailableAutoTournaments]
  +[GKTournamentPredicate predicateForAvailableTournamentsPlayerRegisteredIn]
  +[GKTournamentPredicate predicateForPastTournaments]
  +[GKTournamentPredicate predicateForPastAutoTournaments]
  +[GKTournamentPredicate predicateForPastCustomTournaments]

  // instance methods
  -[GKTournamentPredicate initWithPredicate:]
  -[GKTournamentPredicate setPredicate:]
  -[GKTournamentPredicate initWithCoder:]
  -[GKTournamentPredicate predicate]
  -[GKTournamentPredicate .cxx_destruct]
  -[GKTournamentPredicate encodeWithCoder:]


GKInvite : NSObject
 @property  GKInviteInternal *internal
 @property  NSString *inviteID
 @property  NSData *sessionToken
 @property  NSString *message
 @property  BOOL isNearby
 @property  BOOL cancelled
 @property  GKPlayer *sender
 @property  BOOL hosted
 @property  unsigned long playerGroup
 @property  unsigned int playerAttributes
 @property  NSString *inviter

  // class methods
  +[GKInvite instanceMethodSignatureForSelector:]
  +[GKInvite instancesRespondToSelector:]

  // instance methods
  -[GKInvite internal]
  -[GKInvite setValue:forUndefinedKey:]
  -[GKInvite valueForUndefinedKey:]
  -[GKInvite methodSignatureForSelector:]
  -[GKInvite .cxx_destruct]
  -[GKInvite setCancelled:]
  -[GKInvite sender]
  -[GKInvite isCancelled]
  -[GKInvite forwardingTargetForSelector:]
  -[GKInvite init]
  -[GKInvite respondsToSelector:]
  -[GKInvite isEqual:]
  -[GKInvite inviter]
  -[GKInvite initWithInternalRepresentation:]
  -[GKInvite setInternal:]
  -[GKInvite isHosted]


GKDigestVerification : NSObject
  // class methods
  +[GKDigestVerification computeVerificationHashForDigest:]
  +[GKDigestVerification digest:matchesHash:]
  +[GKDigestVerification digestForSubmitScore:forBundleID:shouldScreen:eligibleChallenges:]
  +[GKDigestVerification digestForSubmitAchievement:forBundleID:shouldScreen:eligibleChallenges:]


GKMultiplayerGroupInternal : GKInternalRepresentation
 @property  NSMutableArray *participants
 @property  long long numberOfAutomached
 @property  long long playedAt
 @property  NSString *groupID

  // class methods
  +[GKMultiplayerGroupInternal secureCodedPropertyKeys]

  // instance methods
  -[GKMultiplayerGroupInternal participants]
  -[GKMultiplayerGroupInternal setParticipants:]
  -[GKMultiplayerGroupInternal groupID]
  -[GKMultiplayerGroupInternal setGroupID:]
  -[GKMultiplayerGroupInternal .cxx_destruct]
  -[GKMultiplayerGroupInternal playedAt]
  -[GKMultiplayerGroupInternal setPlayedAt:]
  -[GKMultiplayerGroupInternal numberOfAutomached]
  -[GKMultiplayerGroupInternal setNumberOfAutomached:]


GKLeaderboard : NSObject
 @property  NSArray *players
 @property  {os_unfair_lock_s=I} lock
 @property  NSString *category
 @property  NSArray *scores
 @property  long long timeScope
 @property  long long playerScope
 @property  NSString *identifier
 @property  {_NSRange=QQ} range
 @property  unsigned long maxRange
 @property  BOOL loading
 @property  GKLeaderboardInternal *internal
 @property  <GKLeaderboardDelegate> *delegate
 @property  GKScore *localPlayerScore
 @property  int loadingCount
 @property  NSString *localizedTitle
 @property  long long overallRank
 @property  long long overallRankCount
 @property  long long friendRank
 @property  long long friendRankCount
 @property  NSString *title
 @property  NSString *groupIdentifier
 @property  NSString *baseLeaderboardID
 @property  long long type
 @property  NSDate *startDate
 @property  NSDate *nextStartDate
 @property  double duration

  // class methods
  +[GKLeaderboard instanceMethodSignatureForSelector:]
  +[GKLeaderboard instancesRespondToSelector:]
  +[GKLeaderboard loadHighlightsWithPlayerScope:timeScope:handler:]
  +[GKLeaderboard loadLeaderboardsForGame:forSet:withPlayer:withCompletionHandler:]
  +[GKLeaderboard loadLeaderboardsWithIDs:completionHandler:]
  +[GKLeaderboard loadLeaderboardsWithIDs:setIdentifier:completionHandler:]
  +[GKLeaderboard loadLeaderboardsForGame:withCompletionHandler:]
  +[GKLeaderboard loadLeaderboardsForGame:withPlayer:withCompletionHandler:]
  +[GKLeaderboard submitScore:context:player:leaderboardIDs:completionHandler:]
  +[GKLeaderboard loadCategoriesWithCompletionHandler:]
  +[GKLeaderboard loadLeaderboardsWithCompletionHandler:]
  +[GKLeaderboard loadLeaderboardWithIdentifier:forGame:withPlayer:withCompletionHandler:]
  +[GKLeaderboard setDefaultLeaderboard:withCompletionHandler:]

  // instance methods
  -[GKLeaderboard internal]
  -[GKLeaderboard range]
  -[GKLeaderboard setScores:]
  -[GKLeaderboard scores]
  -[GKLeaderboard setValue:forUndefinedKey:]
  -[GKLeaderboard timeScope]
  -[GKLeaderboard setTimeScope:]
  -[GKLeaderboard valueForUndefinedKey:]
  -[GKLeaderboard methodSignatureForSelector:]
  -[GKLeaderboard isLoading]
  -[GKLeaderboard .cxx_destruct]
  -[GKLeaderboard setRange:]
  -[GKLeaderboard creator]
  -[GKLeaderboard setDelegate:]
  -[GKLeaderboard forwardingTargetForSelector:]
  -[GKLeaderboard init]
  -[GKLeaderboard startWithHandler:]
  -[GKLeaderboard respondsToSelector:]
  -[GKLeaderboard isEqual:]
  -[GKLeaderboard players]
  -[GKLeaderboard initWithInternalRepresentation:]
  -[GKLeaderboard setInternal:]
  -[GKLeaderboard setLock:]
  -[GKLeaderboard delegate]
  -[GKLeaderboard lock]
  -[GKLeaderboard duration]
  -[GKLeaderboard setPlayers:]
  -[GKLeaderboard localPlayerScore]
  -[GKLeaderboard setPlayerScope:]
  -[GKLeaderboard playerScope]
  -[GKLeaderboard loadEntriesWithGameDescriptor:playerScope:timeScope:range:completionHandler:]
  -[GKLeaderboard loadScoresForGame:withCompletionHandler:]
  -[GKLeaderboard loadPreviousOccurrenceWithCompletionHandler:]
  -[GKLeaderboard loadEntriesForPlayers:timeScope:completionHandler:]
  -[GKLeaderboard loadScoresWithCompletionHandler:]
  -[GKLeaderboard initWithPlayers:]
  -[GKLeaderboard incrementLoadingCountAtomically]
  -[GKLeaderboard scoreRequestForGame:]
  -[GKLeaderboard setLocalPlayerScore:]
  -[GKLeaderboard loadScoresForRequest:handler:]
  -[GKLeaderboard decrementLoadingCountAtomically]
  -[GKLeaderboard initWithPlayerIDs:]
  -[GKLeaderboard submitScore:context:player:completionHandler:]
  -[GKLeaderboard loadEntriesForPlayerScope:timeScope:range:completionHandler:]
  -[GKLeaderboard loadSummaryWithTimeScope:completionHandler:]
  -[GKLeaderboard endWithHandler:]
  -[GKLeaderboard deleteWithHandler:]
  -[GKLeaderboard loadingCount]
  -[GKLeaderboard setLoadingCount:]


GKServiceInterface : NSObject
  // class methods
  +[GKServiceInterface interfaceProtocol]
  +[GKServiceInterface interface]
  +[GKServiceInterface configureInterface:]
  +[GKServiceInterface plistClasses]


GKSavedGameDocument : NSObject <NSFilePresenter>
 @property  NSString *deviceName
 @property  NSDate *modificationDate
 @property  NSURL *fileURL
 @property  NSString *name
 @property  NSFileVersion *fileVersion
 @property  BOOL hasConflict
 @property  BOOL isConflictVersion
 @property  NSURL *presentedItemURL
 @property  NSOperationQueue *presentedItemOperationQueue
 @property  NSURL *primaryPresentedItemURL
 @property  NSSet *observedPresentedItemUbiquityAttributes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKSavedGameDocument currentDeviceName]

  // instance methods
  -[GKSavedGameDocument presentedItemURL]
  -[GKSavedGameDocument setFileURL:]
  -[GKSavedGameDocument presentedItemOperationQueue]
  -[GKSavedGameDocument modificationDate]
  -[GKSavedGameDocument name]
  -[GKSavedGameDocument deviceName]
  -[GKSavedGameDocument fileURL]
  -[GKSavedGameDocument presentedItemDidResolveConflictVersion:]
  -[GKSavedGameDocument .cxx_destruct]
  -[GKSavedGameDocument initWithFileURL:]
  -[GKSavedGameDocument setDeviceName:]
  -[GKSavedGameDocument setName:]
  -[GKSavedGameDocument loadDataWithCompletionHandler:]
  -[GKSavedGameDocument presentedItemDidGainVersion:]
  -[GKSavedGameDocument presentedItemDidLoseVersion:]
  -[GKSavedGameDocument presentedItemDidChange]
  -[GKSavedGameDocument setModificationDate:]
  -[GKSavedGameDocument metadata]
  -[GKSavedGameDocument updateMetadata]
  -[GKSavedGameDocument setMetadata:]
  -[GKSavedGameDocument dealloc]
  -[GKSavedGameDocument fileVersion]
  -[GKSavedGameDocument setFileVersion:]
  -[GKSavedGameDocument isConflictVersion]
  -[GKSavedGameDocument saveData:completionHandler:]
  -[GKSavedGameDocument deleteAllVersionsIncludingCurrent:withCompletionHandler:]
  -[GKSavedGameDocument loadMetadataWithCompletionHandler:]
  -[GKSavedGameDocument hasConflict]
  -[GKSavedGameDocument setIsConflictVersion:]
  -[GKSavedGameDocument setHasConflict:]
  -[GKSavedGameDocument updateConflictStateWithCompletionHandler:]
  -[GKSavedGameDocument deleteConflictVersion:completionHandler:]
  -[GKSavedGameDocument loadWrapperDataWithFilename:completionHandler:]


GKLocalPlayer : GKPlayer <NSCoding, NSSecureCoding, GKSavedGameListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? validateAccountCompletionHandler
 @property  UIAlertView *loginAlertView
 @property  UIAlertView *currentAlert
 @property  NSInvocation *currentFriendRequestInvocation
 @property  BOOL didAuthenticate
 @property  BOOL validatingAccount
 @property  BOOL enteringForeground
 @property  BOOL appIsInBackground
 @property  @? authenticateHandler
 @property  BOOL authenticated
 @property  BOOL authenticating
 @property  BOOL isShowingAuthenticationUI
 @property  unsigned long authenticationState
 @property  NSError *authenticationError
 @property  BOOL insideAuthenticatorInvocation
 @property  BOOL isShowingFriendRequestUI
 @property  NSString *accountName
 @property  NSString *firstName
 @property  NSString *lastName
 @property  GKInvite *acceptedInvite
 @property  BOOL avatarEditingRestricted
 @property  BOOL purpleBuddyAccount
 @property  BOOL defaultNickname
 @property  BOOL defaultPrivacyVisibility
 @property  long long environment
 @property  BOOL allowNearbyMultiplayer
 @property  BOOL newToGameCenter
 @property  NSString *facebookUserID
 @property  NSString *iCloudUserID
 @property  BOOL findable
 @property  GKEventEmitter<GKLocalPlayerListenerPrivate> *eventEmitter
 @property  BOOL showingInGameUI
 @property  BOOL shouldPreserveOnboardingUI
 @property  double authStartTimeStamp
 @property  unsigned long authenticationType
 @property  BOOL underage
 @property  BOOL multiplayerGamingRestricted
 @property  BOOL personalizedCommunicationRestricted

  // class methods
  +[GKLocalPlayer supportsSecureCoding]
  +[GKLocalPlayer performAsync:]
  +[GKLocalPlayer authenticatedLocalPlayersWithStatus:]
  +[GKLocalPlayer local]
  +[GKLocalPlayer performSync:]
  +[GKLocalPlayer localPlayer]
  +[GKLocalPlayer authenticatedLocalPlayersFiltered:]
  +[GKLocalPlayer localPlayers]
  +[GKLocalPlayer loadHighlightsDataWithCompletionHandler:]
  +[GKLocalPlayer authenticatedLocalPlayers]
  +[GKLocalPlayer localPlayerAccessQueue]
  +[GKLocalPlayer _localPlayersFromInternals:authenticated:]
  +[GKLocalPlayer _sendPlayerAuthAPINotificationForLoggedInPlayerInternals:loggedOutPlayerInternals:oldPrimary:newPrimary:]
  +[GKLocalPlayer localPlayerForCredential:]
  +[GKLocalPlayer authenticatedLocalPlayersDidChange:complete:]
  +[GKLocalPlayer authenticateWithUsername:password:completionHandler:]

  // instance methods
  -[GKLocalPlayer friends]
  -[GKLocalPlayer registerListener:]
  -[GKLocalPlayer unregisterAllListeners]
  -[GKLocalPlayer setAuthenticationType:]
  -[GKLocalPlayer initWithCoder:]
  -[GKLocalPlayer resolveConflictingSavedGames:withData:completionHandler:]
  -[GKLocalPlayer setAuthenticated:]
  -[GKLocalPlayer cancelInviteWithNotification:]
  -[GKLocalPlayer saveGameData:withName:completionHandler:]
  -[GKLocalPlayer isAuthenticated]
  -[GKLocalPlayer .cxx_destruct]
  -[GKLocalPlayer fetchSavedGamesWithCompletionHandler:]
  -[GKLocalPlayer authenticationType]
  -[GKLocalPlayer setDidAuthenticate:]
  -[GKLocalPlayer didAuthenticate]
  -[GKLocalPlayer authenticateWithCompletionHandler:]
  -[GKLocalPlayer setStatus:]
  -[GKLocalPlayer deleteSavedGamesWithName:completionHandler:]
  -[GKLocalPlayer dealloc]
  -[GKLocalPlayer cancelGameInvite:]
  -[GKLocalPlayer environment]
  -[GKLocalPlayer encodeWithCoder:]
  -[GKLocalPlayer unregisterListener:]
  -[GKLocalPlayer appIsInBackground]
  -[GKLocalPlayer setAppIsInBackground:]
  -[GKLocalPlayer setAuthenticationState:]
  -[GKLocalPlayer authenticationState]
  -[GKLocalPlayer displayNameWithOptions:]
  -[GKLocalPlayer setInsideAuthenticatorInvocation:]
  -[GKLocalPlayer setNewToGameCenter:]
  -[GKLocalPlayer signOutWithCompletionHandler:]
  -[GKLocalPlayer loadRecentPlayersWithCompletionHandler:]
  -[GKLocalPlayer removeFriend:block:]
  -[GKLocalPlayer loadChallengableFriendsWithCompletionHandler:]
  -[GKLocalPlayer cancelFriendRequestWithIdentifier:handler:]
  -[GKLocalPlayer eventEmitter]
  -[GKLocalPlayer setAcceptedInvite:]
  -[GKLocalPlayer acceptedInvite]
  -[GKLocalPlayer reportAuthenticationLoginCanceled]
  -[GKLocalPlayer setIsShowingFriendRequestUI:]
  -[GKLocalPlayer createFriendRequestWithIdentifier:handler:]
  -[GKLocalPlayer updateFromLocalPlayer:]
  -[GKLocalPlayer setIsShowingAuthenticationUI:]
  -[GKLocalPlayer setShouldPreserveOnboardingUI:]
  -[GKLocalPlayer callAuthHandlerWithError:]
  -[GKLocalPlayer reportAuthenticatingWithGreenBuddyInvocation]
  -[GKLocalPlayer setShowingInGameUI:]
  -[GKLocalPlayer reportAuthenticatingWithAuthKitInvocation]
  -[GKLocalPlayer enteringForeground]
  -[GKLocalPlayer loginAlertView]
  -[GKLocalPlayer setLoginAlertView:]
  -[GKLocalPlayer setCurrentAlert:]
  -[GKLocalPlayer isShowingFriendRequestUI]
  -[GKLocalPlayer isAvatarEditingRestricted]
  -[GKLocalPlayer authenticationError]
  -[GKLocalPlayer setAuthenticationError:]
  -[GKLocalPlayer isMultiplayerGamingRestricted]
  -[GKLocalPlayer loadDefaultLeaderboardIdentifierWithCompletionHandler:]
  -[GKLocalPlayer setDefaultLeaderboardIdentifier:completionHandler:]
  -[GKLocalPlayer setEventEmitter:]
  -[GKLocalPlayer setupForCloudSavedGames]
  -[GKLocalPlayer isShowingInGameUI]
  -[GKLocalPlayer setStatus:withCompletionHandler:]
  -[GKLocalPlayer shouldPreserveOnboardingUI]
  -[GKLocalPlayer promotePlayerInternalToLocalPlayerInternal:]
  -[GKLocalPlayer _loadFriendPlayersWithFilter:withCompletionHandler:]
  -[GKLocalPlayer _loadFriendPlayersWithCompletionHandler:]
  -[GKLocalPlayer insideAuthenticatorInvocation]
  -[GKLocalPlayer authenticateHandler]
  -[GKLocalPlayer _startAuthenticationForExistingPrimaryPlayer]
  -[GKLocalPlayer generateIdentityVerificationSignatureWithCompletionHandler:]
  -[GKLocalPlayer fetchItemsForIdentityVerificationSignature:]
  -[GKLocalPlayer acceptFriendRequestWithIdentifier:sendPush:handler:]
  -[GKLocalPlayer rejectFriendRequestWithIdentifier:handler:]
  -[GKLocalPlayer authStartTimeStamp]
  -[GKLocalPlayer scopedIDsArePersistent]
  -[GKLocalPlayer isPersonalizedCommunicationRestricted]
  -[GKLocalPlayer loadFriendPlayersWithCompletionHandler:]
  -[GKLocalPlayer loadFriendPlayersWithFilter:withCompletionHandler:]
  -[GKLocalPlayer loadFriendsWithCompletionHandler:]
  -[GKLocalPlayer showSettings]
  -[GKLocalPlayer updateLoginStatus:completionHandler:]
  -[GKLocalPlayer setAuthenticateHandler:]
  -[GKLocalPlayer removeAllFriendsWithBlock:]
  -[GKLocalPlayer fetchMultiplayerGameInvite]
  -[GKLocalPlayer fetchTurnBasedEvent]
  -[GKLocalPlayer fetchCustomTournamentInvite]
  -[GKLocalPlayer inviteeAcceptedGameInviteWithNotification:]
  -[GKLocalPlayer inviteeDeclinedGameInviteWithNotification:]
  -[GKLocalPlayer hasEmailAddress:]
  -[GKLocalPlayer setDefaultLeaderboardCategoryID:completionHandler:]
  -[GKLocalPlayer loadDefaultLeaderboardCategoryIDWithCompletionHandler:]
  -[GKLocalPlayer getPlayerIDFromFriendCode:handler:]
  -[GKLocalPlayer shouldDisplayWelcomeBannerForPlayer:lastAuthDate:remoteUI:timeBetweenBanners:]
  -[GKLocalPlayer isWelcomeBannerTooLate]
  -[GKLocalPlayer reportAuthenticationStartForPlayer]
  -[GKLocalPlayer reportAuthenticationPlayerAuthenticated]
  -[GKLocalPlayer reportAuthenticationErrorNoInternetConnection]
  -[GKLocalPlayer isShowingAuthenticationUI]
  -[GKLocalPlayer validateAccountCompletionHandler]
  -[GKLocalPlayer setValidateAccountCompletionHandler:]
  -[GKLocalPlayer currentAlert]
  -[GKLocalPlayer currentFriendRequestInvocation]
  -[GKLocalPlayer setCurrentFriendRequestInvocation:]
  -[GKLocalPlayer validatingAccount]
  -[GKLocalPlayer setValidatingAccount:]
  -[GKLocalPlayer setEnteringForeground:]
  -[GKLocalPlayer isNewToGameCenter]
  -[GKLocalPlayer setAuthStartTimeStamp:]
  -[GKLocalPlayer setFriendListAuthorizationStatus:forBundleID:handler:]
  -[GKLocalPlayer resetTCCAuthorization]
  -[GKLocalPlayer _friendsAPICommunicationsError]
  -[GKLocalPlayer _friendsAPIRestrictedError]
  -[GKLocalPlayer _friendsAPIDeniedError]
  -[GKLocalPlayer _gkFriendListUsageDescription]
  -[GKLocalPlayer _friendsAPIDescriptionMissingError]
  -[GKLocalPlayer _loadFriendsListGlobalAccessOptInFlow:]
  -[GKLocalPlayer loadFriends:]
  -[GKLocalPlayer _loadFriendsListPerGameAuthorizedFlow:]
  -[GKLocalPlayer _loadFriendsListPerGameNotDeterminedFlow:]
  -[GKLocalPlayer _updatePerGameSettings:withCompletionHandler:]
  -[GKLocalPlayer loadFriendsAuthorizationStatus:]
  -[GKLocalPlayer loadFriendsWithIdentifiers:completionHandler:]
  -[GKLocalPlayer setLastPrivacyNoticeVersion:]
  -[GKLocalPlayer setLastPersonalizationVersion:]
  -[GKLocalPlayer setLastProfilePrivacyVersion:]


GKMatchEvent : NSObject
 @property  NSData *data
 @property  GKPlayer *recipientPlayer

  // instance methods
  -[GKMatchEvent .cxx_destruct]
  -[GKMatchEvent data]
  -[GKMatchEvent setData:]
  -[GKMatchEvent recipientPlayer]
  -[GKMatchEvent setRecipientPlayer:]


GKMatchEventQueue : NSObject
 @property  NSMutableArray *events
 @property  GKPlayer *player
 @property  GKPlayer *hostPlayer
 @property  NSMutableDictionary *connectionInfo
 @property  long long playerState
 @property  long long deferedPlayerState
 @property  unsigned int sequenceNumber
 @property  BOOL counted
 @property  BOOL okToSend
 @property  BOOL relayInitiated
 @property  BOOL hasInitRelayInfo
 @property  BOOL hasUpdateRelayInfo

  // instance methods
  -[GKMatchEventQueue events]
  -[GKMatchEventQueue setSequenceNumber:]
  -[GKMatchEventQueue .cxx_destruct]
  -[GKMatchEventQueue setPlayer:]
  -[GKMatchEventQueue connectionInfo]
  -[GKMatchEventQueue init]
  -[GKMatchEventQueue player]
  -[GKMatchEventQueue counted]
  -[GKMatchEventQueue playerState]
  -[GKMatchEventQueue sequenceNumber]
  -[GKMatchEventQueue setConnectionInfo:]
  -[GKMatchEventQueue setEvents:]
  -[GKMatchEventQueue setPlayerState:]
  -[GKMatchEventQueue okToSend]
  -[GKMatchEventQueue hostPlayer]
  -[GKMatchEventQueue setHostPlayer:]
  -[GKMatchEventQueue setCounted:]
  -[GKMatchEventQueue deferedPlayerState]
  -[GKMatchEventQueue setDeferedPlayerState:]
  -[GKMatchEventQueue setOkToSend:]
  -[GKMatchEventQueue relayInitiated]
  -[GKMatchEventQueue setRelayInitiated:]
  -[GKMatchEventQueue hasInitRelayInfo]
  -[GKMatchEventQueue setHasInitRelayInfo:]
  -[GKMatchEventQueue hasUpdateRelayInfo]
  -[GKMatchEventQueue setHasUpdateRelayInfo:]


GKMatchPacket : NSObject
 @property  unsigned char version
 @property  unsigned char packetType
 @property  unsigned int sequenceNumber
 @property  unsigned int totalLength
 @property  unsigned short checksum
 @property  BOOL valid
 @property  NSData *data

  // instance methods
  -[GKMatchPacket valid]
  -[GKMatchPacket setValid:]
  -[GKMatchPacket setSequenceNumber:]
  -[GKMatchPacket checksum]
  -[GKMatchPacket .cxx_destruct]
  -[GKMatchPacket initWithMessage:]
  -[GKMatchPacket data]
  -[GKMatchPacket setChecksum:]
  -[GKMatchPacket init]
  -[GKMatchPacket setVersion:]
  -[GKMatchPacket message]
  -[GKMatchPacket version]
  -[GKMatchPacket setData:]
  -[GKMatchPacket sequenceNumber]
  -[GKMatchPacket totalLength]
  -[GKMatchPacket setTotalLength:]
  -[GKMatchPacket packetType]
  -[GKMatchPacket setPacketType:]


GKMatch : NSObject <GKSessionDelegate, GKSessionPrivateDelegate>
 @property  GKSession *session
 @property  GKConnection *connection
 @property  NSMutableDictionary *guestConnections
 @property  NSMutableDictionary *guestSessions
 @property  NSMutableDictionary *playerEventQueues
 @property  NSMutableSet *connectedPlayerIDs
 @property  GKThreadsafeDictionary *playersByIdentifier
 @property  NSMutableArray *reinvitedPlayers
 @property  NSData *selfBlob
 @property  unsigned char version
 @property  <GKMatchDelegatePrivate> *inviteDelegate
 @property  unsigned int packetSequenceNumber
 @property  NSMutableDictionary *playerPushTokens
 @property  NSMutableArray *opponentIDs
 @property  NSString *rematchID
 @property  long long rematchCount
 @property  NSDictionary *networkStatistics
 @property  NSMutableDictionary *hostScores
 @property  BOOL needHostScore
 @property  BOOL hostScoreForQuery
 @property  NSObject<OS_dispatch_queue> *stateChangeQueue
 @property  @? chooseHostCompletion
 @property  BOOL fastStartStateActive
 @property  NSString *groupIdentifier
 @property  NSMutableDictionary *playersByJoinType
 @property  BOOL recentlyBecameActive
 @property  NSArray *players
 @property  <GKMatchDelegate> *delegate
 @property  unsigned long expectedPlayerCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKMatch disconnect]
  -[GKMatch connected:]
  -[GKMatch setGroupIdentifier:]
  -[GKMatch clearSession]
  -[GKMatch .cxx_destruct]
  -[GKMatch groupIdentifier]
  -[GKMatch setConnection:]
  -[GKMatch setDelegate:]
  -[GKMatch setSession:]
  -[GKMatch allIDs]
  -[GKMatch init]
  -[GKMatch setVersion:]
  -[GKMatch session:peer:didChangeState:]
  -[GKMatch connection]
  -[GKMatch applicationWillEnterForeground:]
  -[GKMatch players]
  -[GKMatch session:didFailWithError:]
  -[GKMatch delegate]
  -[GKMatch version]
  -[GKMatch relayPushNotification:]
  -[GKMatch dealloc]
  -[GKMatch session]
  -[GKMatch selfBlob]
  -[GKMatch dataFromBase64String:]
  -[GKMatch guestPlayers]
  -[GKMatch setInviteDelegate:]
  -[GKMatch sendInviteData:error:]
  -[GKMatch setFastStartStateActive:]
  -[GKMatch putMultiplayerGroup]
  -[GKMatch expectedPlayerCount]
  -[GKMatch packetSequenceNumber]
  -[GKMatch reinvitedPlayers]
  -[GKMatch withEventQueueForPlayer:perform:]
  -[GKMatch sendQueuedStatesAndPackets]
  -[GKMatch setGuestConnections:]
  -[GKMatch setGuestSessions:]
  -[GKMatch setPlayerPushTokens:]
  -[GKMatch setOpponentIDs:]
  -[GKMatch setPlayersByJoinType:]
  -[GKMatch localPlayerDidChange:]
  -[GKMatch applicationWillTerminateNotification:]
  -[GKMatch setRecentlyBecameActive:]
  -[GKMatch setSelfBlob:]
  -[GKMatch getLocalConnectionDataWithCompletionHandler:]
  -[GKMatch withEventQueueForPlayer:create:perform:]
  -[GKMatch addPlayers:]
  -[GKMatch setRematchID:]
  -[GKMatch setRematchCount:]
  -[GKMatch playersByJoinType]
  -[GKMatch addPlayerToGroup:]
  -[GKMatch sendVersionData:]
  -[GKMatch playerFromPeer:]
  -[GKMatch withEventQueueForPlayer:createIfNeeded:perform:]
  -[GKMatch inviteDelegate]
  -[GKMatch sendConnectingStateCallbackToDelegate:forPlayers:]
  -[GKMatch guestConnections]
  -[GKMatch guestSessions]
  -[GKMatch nearbyConnectionData]
  -[GKMatch setPacketSequenceNumber:]
  -[GKMatch packet:data:]
  -[GKMatch peerFromPlayer:]
  -[GKMatch sendData:toPlayers:dataMode:error:]
  -[GKMatch updateJoinedPlayer:joinType:]
  -[GKMatch rematchID]
  -[GKMatch disconnectGuestSessions]
  -[GKMatch connectedPlayers]
  -[GKMatch playersByIdentifier]
  -[GKMatch _delegate:didReceiveData:forRecipient:fromPlayer:]
  -[GKMatch sendStateCallbackForPlayer:state:]
  -[GKMatch sendQueuedPacketsForPlayer:]
  -[GKMatch stringForGKPlayerConnectionState:]
  -[GKMatch updateRematchID]
  -[GKMatch sendStateCallbackToDelegate:forPlayer:state:]
  -[GKMatch updateStateForPlayer:state:]
  -[GKMatch fastStartStateActive]
  -[GKMatch connectToPlayers:withPeerDictionaries:version:sessionToken:cdxTicket:]
  -[GKMatch relayPush:]
  -[GKMatch reinviteeAcceptedNotification:]
  -[GKMatch reinviteeDeclinedNotification:]
  -[GKMatch chooseBestHostingPlayerWithCompletionHandler:]
  -[GKMatch setHostScores:]
  -[GKMatch setChooseHostCompletion:]
  -[GKMatch calculateHostScore]
  -[GKMatch selectHostIfRequestedAndAllScored]
  -[GKMatch setHostScoreForQuery:]
  -[GKMatch sendHostScoreAsQuery:]
  -[GKMatch addHostScore:forPlayer:]
  -[GKMatch haveAllHostScores]
  -[GKMatch setNeedHostScore:]
  -[GKMatch playerForSession:]
  -[GKMatch stringForGKPeerConnectionState:]
  -[GKMatch sendVersionData:toPeer:]
  -[GKMatch syncPlayers:forJoinType:toInvitees:]
  -[GKMatch conditionallyRelaunchPlayer:]
  -[GKMatch recentlyBecameActive]
  -[GKMatch conditionallyReinvitePlayer:sessionToken:]
  -[GKMatch deferStateCallbackForPlayer:state:]
  -[GKMatch receivedChooseHostData:fromPlayer:]
  -[GKMatch receivedPlayerSyncData:]
  -[GKMatch sendData:forRecipient:fromPlayer:]
  -[GKMatch queueData:withEventQueueForPlayer:forRecipient:]
  -[GKMatch setNetworkStatistics:]
  -[GKMatch shouldStartRelay:]
  -[GKMatch initRelayInfoFromPush:forPlayer:]
  -[GKMatch initRelayConnectionForPlayer:]
  -[GKMatch updateRelayInfo:forPlayer:]
  -[GKMatch updateRelayConnectionForPlayer:]
  -[GKMatch initRelayResponse:player:]
  -[GKMatch initRelayInfoFromServerResponse:forPlayer:]
  -[GKMatch requestRelayInitForPlayer:]
  -[GKMatch initRelayInfoFromCallback:forPlayer:]
  -[GKMatch updateRelayInfoFromCallback:forPlayer:]
  -[GKMatch requestRelayUpdateForPlayer:]
  -[GKMatch session:connectionWithPeerFailed:withError:]
  -[GKMatch playerIDs]
  -[GKMatch preLoadInviter:sessionToken:]
  -[GKMatch connectToGuestPlayer:withHostPlayer:]
  -[GKMatch connectToNearbyPlayer:withConnectionData:]
  -[GKMatch inviteeComboMatched:]
  -[GKMatch sendData:toPlayers:withDataMode:error:]
  -[GKMatch sendDataToAllPlayers:withDataMode:error:]
  -[GKMatch voiceChatWithName:]
  -[GKMatch rematchWithCompletionHandler:]
  -[GKMatch chooseBestHostPlayerWithCompletionHandler:]
  -[GKMatch receiveData:fromPeer:inSession:context:]
  -[GKMatch session:networkStatisticsChanged:]
  -[GKMatch acceptRelayResponse:player:]
  -[GKMatch preemptRelay:]
  -[GKMatch session:initiateRelay:forPeer:]
  -[GKMatch session:updateRelay:forPeer:]
  -[GKMatch setPlayersByIdentifier:]
  -[GKMatch connectedPlayerIDs]
  -[GKMatch setConnectedPlayerIDs:]
  -[GKMatch stateChangeQueue]
  -[GKMatch setStateChangeQueue:]
  -[GKMatch playerEventQueues]
  -[GKMatch setPlayerEventQueues:]
  -[GKMatch setReinvitedPlayers:]
  -[GKMatch playerPushTokens]
  -[GKMatch opponentIDs]
  -[GKMatch rematchCount]
  -[GKMatch networkStatistics]
  -[GKMatch hostScores]
  -[GKMatch needHostScore]
  -[GKMatch hostScoreForQuery]
  -[GKMatch chooseHostCompletion]


GKLeaderboardScoreRequest : NSObject <NSSecureCoding>
 @property  GKPlayerInternal *playerInternal
 @property  NSString *gameBundleID
 @property  NSString *identifier
 @property  NSString *groupIdentifier
 @property  BOOL friendsOnly
 @property  long long timeScope
 @property  BOOL prefetch

  // class methods
  +[GKLeaderboardScoreRequest supportsSecureCoding]
  +[GKLeaderboardScoreRequest requestForPlayerInternals:]
  +[GKLeaderboardScoreRequest requestForRankRange:]

  // instance methods
  -[GKLeaderboardScoreRequest timeScope]
  -[GKLeaderboardScoreRequest setTimeScope:]
  -[GKLeaderboardScoreRequest setGroupIdentifier:]
  -[GKLeaderboardScoreRequest initWithCoder:]
  -[GKLeaderboardScoreRequest .cxx_destruct]
  -[GKLeaderboardScoreRequest groupIdentifier]
  -[GKLeaderboardScoreRequest setPlayerInternal:]
  -[GKLeaderboardScoreRequest playerInternal]
  -[GKLeaderboardScoreRequest isEqual:]
  -[GKLeaderboardScoreRequest identifier]
  -[GKLeaderboardScoreRequest setIdentifier:]
  -[GKLeaderboardScoreRequest encodeWithCoder:]
  -[GKLeaderboardScoreRequest friendsOnly]
  -[GKLeaderboardScoreRequest setFriendsOnly:]
  -[GKLeaderboardScoreRequest setGameBundleID:]
  -[GKLeaderboardScoreRequest gameBundleID]
  -[GKLeaderboardScoreRequest isPrefetch]
  -[GKLeaderboardScoreRequest setPrefetch:]


GKLeaderboardScoreRangeRequest : GKLeaderboardScoreRequest
 @property  {_NSRange=QQ} range

  // class methods
  +[GKLeaderboardScoreRangeRequest supportsSecureCoding]

  // instance methods
  -[GKLeaderboardScoreRangeRequest range]
  -[GKLeaderboardScoreRangeRequest initWithCoder:]
  -[GKLeaderboardScoreRangeRequest setRange:]
  -[GKLeaderboardScoreRangeRequest isEqual:]
  -[GKLeaderboardScoreRangeRequest encodeWithCoder:]


GKLeaderboardScorePlayersRequest : GKLeaderboardScoreRequest
 @property  NSArray *playerInternals

  // class methods
  +[GKLeaderboardScorePlayersRequest supportsSecureCoding]

  // instance methods
  -[GKLeaderboardScorePlayersRequest initWithCoder:]
  -[GKLeaderboardScorePlayersRequest .cxx_destruct]
  -[GKLeaderboardScorePlayersRequest isEqual:]
  -[GKLeaderboardScorePlayersRequest encodeWithCoder:]
  -[GKLeaderboardScorePlayersRequest setPlayerInternals:]
  -[GKLeaderboardScorePlayersRequest playerInternals]


GKAchievementLeaderboardScoreRangeRequest : GKLeaderboardScoreRangeRequest
  // class methods
  +[GKAchievementLeaderboardScoreRangeRequest requestForRankRange:]


GKMatchRequest : NSObject <GKReportable>
 @property  GKMatchRequestInternal *internal
 @property  GKTournament *tournamentForInvitePool
 @property  unsigned long minPlayers
 @property  unsigned long maxPlayers
 @property  unsigned long playerGroup
 @property  unsigned int playerAttributes
 @property  NSArray *recipients
 @property  NSString *inviteMessage
 @property  unsigned long defaultNumberOfPlayers
 @property  BOOL restrictToAutomatch
 @property  @? recipientResponseHandler
 @property  @? inviteeResponseHandler
 @property  NSArray *playersToInvite

  // class methods
  +[GKMatchRequest instanceMethodSignatureForSelector:]
  +[GKMatchRequest instancesRespondToSelector:]
  +[GKMatchRequest reportableKeyPaths]
  +[GKMatchRequest maxPlayersAllowedForMatchOfType:]

  // instance methods
  -[GKMatchRequest internal]
  -[GKMatchRequest setValue:forUndefinedKey:]
  -[GKMatchRequest valueForUndefinedKey:]
  -[GKMatchRequest methodSignatureForSelector:]
  -[GKMatchRequest setRecipients:]
  -[GKMatchRequest .cxx_destruct]
  -[GKMatchRequest forwardingTargetForSelector:]
  -[GKMatchRequest init]
  -[GKMatchRequest recipients]
  -[GKMatchRequest respondsToSelector:]
  -[GKMatchRequest isEqual:]
  -[GKMatchRequest initWithInternalRepresentation:]
  -[GKMatchRequest setInternal:]
  -[GKMatchRequest copyWithZone:]
  -[GKMatchRequest removeLocalPlayerFromPlayersToInvite]
  -[GKMatchRequest inviteMessage]
  -[GKMatchRequest setPlayersToInvite:]
  -[GKMatchRequest loadRecipientsWithCompletionHandler:]
  -[GKMatchRequest setInviteMessage:]
  -[GKMatchRequest guestPlayers]
  -[GKMatchRequest isIncorrectlyInvitingPlayers]
  -[GKMatchRequest isTurnBasedValid]
  -[GKMatchRequest isValidForHosted:]
  -[GKMatchRequest setRecipientResponseHandler:]
  -[GKMatchRequest inviteeResponseHandler]
  -[GKMatchRequest setInviteeResponseHandler:]
  -[GKMatchRequest recipientResponseHandler]
  -[GKMatchRequest defaultNumberOfPlayersIsValid]
  -[GKMatchRequest isValidWithMax:]
  -[GKMatchRequest tournamentForInvitePool]
  -[GKMatchRequest setTournamentForInvitePool:]
  -[GKMatchRequest isConfiguredForAutomatchOnly]
  -[GKMatchRequest ensureValidityHosted:]
  -[GKMatchRequest isRecipientCountValid]
  -[GKMatchRequest playersToInvite]


GKMatchmaker : NSObject
 @property  NSSet *invitees
 @property  @? inviteeResponseHandler
 @property  NSObject<OS_dispatch_queue> *lookForInviteQueue
 @property  @? inviteHandler
 @property  BOOL allInviteesDidRespond
 @property  int matching
 @property  NSDictionary *inviteesByUserID
 @property  BOOL serverHosted
 @property  BOOL nearbyBrowsing
 @property  BOOL nearbyAdvertising
 @property  BOOL wasNearbyBrowsing
 @property  BOOL hasInviteListener
 @property  NSMutableDictionary *nearbyPlayers
 @property  NSMutableDictionary *nearbyInvites
 @property  GKDiscovery *nearbyDiscovery
 @property  BOOL nearbyDiscoverySetup
 @property  NSDate *nearbyQueryLastCheckDate
 @property  NSSet *nearbyCompatibleVersionHashes
 @property  NSSet *nearbyCompatibleShortVersionHashes
 @property  BOOL generatingCompatiblityHashes
 @property  GKDispatchGroup *compatibilityHashGroup
 @property  double nearbyQueryAllowance
 @property  @? nearbyPlayerHandler
 @property  @? nearbyPlayerIDHandler
 @property  GKMatch *match
 @property  NSMutableArray *shareInvitees
 @property  NSMutableArray *acceptedInviteesTokens
 @property  @? recipientResponseHandler
 @property  NSMutableSet *autoMatchedPlayers
 @property  NSMutableSet *invitedInvitees
 @property  NSMutableSet *invitedShareInvitees
 @property  NSMutableSet *invitedNearbyPlayers
 @property  NSString *inviterPlayerID
 @property  unsigned long inviteApproach
 @property  NSMutableSet *siblingInvitees
 @property  GKMatchRequest *currentMatchRequest

  // class methods
  +[GKMatchmaker syncQueue]
  +[GKMatchmaker sharedMatchmaker]
  +[GKMatchmaker descriptionForNearbyDictionary:]

  // instance methods
  -[GKMatchmaker currentEnvironment]
  -[GKMatchmaker setMatching:]
  -[GKMatchmaker .cxx_destruct]
  -[GKMatchmaker init]
  -[GKMatchmaker match]
  -[GKMatchmaker setMatch:]
  -[GKMatchmaker invitees]
  -[GKMatchmaker cancel]
  -[GKMatchmaker setInvitees:]
  -[GKMatchmaker dealloc]
  -[GKMatchmaker matching]
  -[GKMatchmaker performSync:]
  -[GKMatchmaker setNearbyPlayers:]
  -[GKMatchmaker nearbyPlayers]
  -[GKMatchmaker startBrowsingForNearbyPlayersWithReachableHandler:]
  -[GKMatchmaker stopBrowsingForNearbyPlayers]
  -[GKMatchmaker userCancelledMatching]
  -[GKMatchmaker canPlayMultiplayerGameWithPlayers:]
  -[GKMatchmaker setRecipientResponseHandler:]
  -[GKMatchmaker matchForInvite:completionHandler:]
  -[GKMatchmaker loadURLForMatch:matchRequest:completionHandler:]
  -[GKMatchmaker setShareInvitees:propogateToDaemon:]
  -[GKMatchmaker addPlayersForHostedMatchRequest:existingPlayerCount:completionHandler:]
  -[GKMatchmaker addPlayersToMatch:matchRequest:completionHandler:]
  -[GKMatchmaker findMatchForRequest:withCompletionHandler:]
  -[GKMatchmaker cancelPendingInviteToPlayer:]
  -[GKMatchmaker startBrowsingForNearbyPlayersWithHandler:]
  -[GKMatchmaker setShareInvitees:]
  -[GKMatchmaker lookForInvite]
  -[GKMatchmaker registeredListentersChanged]
  -[GKMatchmaker applicationWillTerminateNotification:]
  -[GKMatchmaker autoMatchedPlayers]
  -[GKMatchmaker siblingInvitees]
  -[GKMatchmaker currentMatchRequest]
  -[GKMatchmaker findRematchForMatch:completionHandler:]
  -[GKMatchmaker reportPlayerConnectedWithPlayerID:forMatch:]
  -[GKMatchmaker allInvitedInvitees]
  -[GKMatchmaker inviteeResponseHandler]
  -[GKMatchmaker setInviteeResponseHandler:]
  -[GKMatchmaker recipientResponseHandler]
  -[GKMatchmaker loadConnectivitySettingsWithCompletionHandler:]
  -[GKMatchmaker inviteeAcceptedNotification:]
  -[GKMatchmaker inviteeDeclinedNotification:]
  -[GKMatchmaker localPlayerAcceptedGameInviteNotification:]
  -[GKMatchmaker applicationDidEnterBackgroundNotification:]
  -[GKMatchmaker applicationWillEnterForegroundNotification:]
  -[GKMatchmaker nearbyPlayerFound:]
  -[GKMatchmaker nearbyPlayerLost:]
  -[GKMatchmaker nearbyDataReceived:]
  -[GKMatchmaker setConnectivitySettings:]
  -[GKMatchmaker updateNearbyAdvertising]
  -[GKMatchmaker setInviteesByUserID:]
  -[GKMatchmaker invitedNearbyPlayers]
  -[GKMatchmaker invitedInvitees]
  -[GKMatchmaker invitedShareInvitees]
  -[GKMatchmaker inviteApproach]
  -[GKMatchmaker inviterPlayerID]
  -[GKMatchmaker hasInviteListener]
  -[GKMatchmaker inviteHandler]
  -[GKMatchmaker respondToHostedInvite:completionHandler:]
  -[GKMatchmaker setInviteApproach:]
  -[GKMatchmaker setInviterPlayerID:]
  -[GKMatchmaker acceptNearbyInvite:connectionData:]
  -[GKMatchmaker matchForNearbyInvite:handler:]
  -[GKMatchmaker matchForRemoteInvite:completionHandler:]
  -[GKMatchmaker inviteesByUserID]
  -[GKMatchmaker removeInvitee:]
  -[GKMatchmaker reportResponse:forInvitees:withCompletionHandler:]
  -[GKMatchmaker allInviteesDidRespond]
  -[GKMatchmaker doneMatchmaking]
  -[GKMatchmaker invitePlayersWithRequest:serverHosted:onlineConnectionData:completionHandler:]
  -[GKMatchmaker inviteAnyNearbyPlayersWithRequest:handler:]
  -[GKMatchmaker setCurrentMatchRequest:]
  -[GKMatchmaker setServerHosted:]
  -[GKMatchmaker invitePlayersWithRequest:serverHosted:completionHandler:]
  -[GKMatchmaker _request:match:rematchID:serverHosted:playerCount:connectionData:completionHandler:]
  -[GKMatchmaker matchWithRequest:currentMatch:hostedCurrentPlayerCount:serverHosted:rematchID:completionHandler:]
  -[GKMatchmaker findPlayersForHostedRequest:withCompletionHandler:]
  -[GKMatchmaker shareInvitees]
  -[GKMatchmaker cancelNearbyInvitesToPlayers:]
  -[GKMatchmaker cancelPendingInvitesAndMarkInviteComplete:]
  -[GKMatchmaker setNearbyPlayerHandler:]
  -[GKMatchmaker startNearbyBrowsing]
  -[GKMatchmaker setNearbyPlayerIDHandler:]
  -[GKMatchmaker stopNearbyBrowsing]
  -[GKMatchmaker localPlayerAcceptedGameInvite]
  -[GKMatchmaker serverHosted]
  -[GKMatchmaker responseForDeclineReason:]
  -[GKMatchmaker foundNearbyDeviceID:discoveryInfo:]
  -[GKMatchmaker lostNearbyDeviceID:]
  -[GKMatchmaker receivedData:fromNearbyDeviceID:]
  -[GKMatchmaker finishedAuthenticating]
  -[GKMatchmaker setInviteHandler:]
  -[GKMatchmaker createLeaderboardForRequest:withHandler:]
  -[GKMatchmaker findPlayersForHostedMatchRequest:withCompletionHandler:]
  -[GKMatchmaker cancelInviteToPlayer:]
  -[GKMatchmaker finishMatchmakingForMatch:]
  -[GKMatchmaker queryPlayerGroupActivity:withCompletionHandler:]
  -[GKMatchmaker queryActivityWithCompletionHandler:]
  -[GKMatchmaker setNearbyPlayerAccepted:connectionData:]
  -[GKMatchmaker setNearbyPlayerDeclined:reason:]
  -[GKMatchmaker setNearbyPlayerFailed:]
  -[GKMatchmaker nearbyPlayerHandler]
  -[GKMatchmaker nearbyPlayerIDHandler]
  -[GKMatchmaker lookForInviteQueue]
  -[GKMatchmaker setLookForInviteQueue:]
  -[GKMatchmaker nearbyAdvertising]
  -[GKMatchmaker setNearbyAdvertising:]
  -[GKMatchmaker wasNearbyBrowsing]
  -[GKMatchmaker setWasNearbyBrowsing:]
  -[GKMatchmaker nearbyBrowsing]
  -[GKMatchmaker setNearbyBrowsing:]
  -[GKMatchmaker nearbyQueryLastCheckDate]
  -[GKMatchmaker setNearbyQueryLastCheckDate:]
  -[GKMatchmaker nearbyDiscovery]
  -[GKMatchmaker setNearbyDiscovery:]
  -[GKMatchmaker nearbyQueryAllowance]
  -[GKMatchmaker setNearbyQueryAllowance:]
  -[GKMatchmaker nearbyCompatibleVersionHashes]
  -[GKMatchmaker setNearbyCompatibleVersionHashes:]
  -[GKMatchmaker nearbyCompatibleShortVersionHashes]
  -[GKMatchmaker setNearbyCompatibleShortVersionHashes:]
  -[GKMatchmaker generatingCompatiblityHashes]
  -[GKMatchmaker setGeneratingCompatiblityHashes:]
  -[GKMatchmaker compatibilityHashGroup]
  -[GKMatchmaker setCompatibilityHashGroup:]
  -[GKMatchmaker nearbyInvites]
  -[GKMatchmaker setNearbyInvites:]
  -[GKMatchmaker acceptedInviteesTokens]
  -[GKMatchmaker setAcceptedInviteesTokens:]
  -[GKMatchmaker nearbyDiscoverySetup]
  -[GKMatchmaker setNearbyDiscoverySetup:]
  -[GKMatchmaker setAutoMatchedPlayers:]
  -[GKMatchmaker setInvitedInvitees:]
  -[GKMatchmaker setInvitedShareInvitees:]
  -[GKMatchmaker setInvitedNearbyPlayers:]
  -[GKMatchmaker setSiblingInvitees:]
  -[GKMatchmaker localPlayerRespondedToNearbyInvite:]
  -[GKMatchmaker setupNearbyDiscovery]
  -[GKMatchmaker stopNearbyAdvertising]
  -[GKMatchmaker cancelSentNearbyInvites]
  -[GKMatchmaker declineReceivedNearbyInvites]
  -[GKMatchmaker nearbyDeviceWithDeviceID:]
  -[GKMatchmaker setNearbyDevice:reachable:]
  -[GKMatchmaker handleNearbyProfileQuery:fromDevice:]
  -[GKMatchmaker handleNearbyProfileResponse:fromDevice:withCompletionHandler:]
  -[GKMatchmaker handleNearbyInvite:fromDevice:]
  -[GKMatchmaker handleNearbyInviteResponse:fromDevice:]
  -[GKMatchmaker nearbyInviteWasCancelled:fromDevice:]
  -[GKMatchmaker establishNearbyFriendRelationships:fromDevice:]
  -[GKMatchmaker shouldRespondToNearbyQuery]
  -[GKMatchmaker hashForBundleID:version:platform:]
  -[GKMatchmaker compatibilityHashQueue]
  -[GKMatchmaker generateHashedCompatibiltySetWithHandler:]
  -[GKMatchmaker _nearbyDeviceWithDeviceID:]
  -[GKMatchmaker getHashedCompatibilitySetsWithHandler:]
  -[GKMatchmaker hashForCurrentGameUsingBundleVersion]
  -[GKMatchmaker hashForCurrentGameUsingShortBundleVersionAndPlatform]
  -[GKMatchmaker startNearbyAdvertising]
  -[GKMatchmaker unreleasedHash]
  -[GKMatchmaker numberOfNearbyDevicesForPlayer:withState:]
  -[GKMatchmaker nearbyDevicesForPlayer:withState:]
  -[GKMatchmaker profileDictionaryForLocalPlayer]
  -[GKMatchmaker reduceRecipientsForMatchRequest:toPlayersWithPlayerIDs:]
  -[GKMatchmaker setNearbyPlayerFailed:deviceID:]
  -[GKMatchmaker setNearbyPlayerAccepted:deviceID:connectionData:]
  -[GKMatchmaker setNearbyPlayerDeclined:deviceID:reason:]
  -[GKMatchmaker sendProfileResponseToDevice:]
  -[GKMatchmaker determineIfShouldRespondToNearbyPlayer:handler:]
  -[GKMatchmaker loadPhotoDataDictionaryWithHandler:]
  -[GKMatchmaker presentNearbyInvite:fromDevice:]
  -[GKMatchmaker saveNearbyInvite:fromPlayer:]
  -[GKMatchmaker declineNearbyInviteFromDevice:reason:]
  -[GKMatchmaker removeNearbyInviteFromPlayer:]
  -[GKMatchmaker localPlayerAcceptedNearbyInvite:]
  -[GKMatchmaker declineReasonString:]
  -[GKMatchmaker nearbyInviteFromPlayer:]


GKFriendRequestURLModel : NSObject
 @property  NSString *friendSupportPageURL
 @property  NSString *friendCode
 @property  NSString *friendRequestState
 @property  GKPlayer *initiator
 @property  NSString *friendRequestVersion

  // instance methods
  -[GKFriendRequestURLModel setInitiator:]
  -[GKFriendRequestURLModel .cxx_destruct]
  -[GKFriendRequestURLModel initiator]
  -[GKFriendRequestURLModel friendCode]
  -[GKFriendRequestURLModel friendSupportPageURL]
  -[GKFriendRequestURLModel setFriendCode:]
  -[GKFriendRequestURLModel setFriendSupportPageURL:]
  -[GKFriendRequestURLModel setFriendRequestState:]
  -[GKFriendRequestURLModel setFriendRequestVersion:]
  -[GKFriendRequestURLModel friendRequestState]
  -[GKFriendRequestURLModel friendRequestVersion]


GKPlayer : GKBasePlayer <NSCoding, NSSecureCoding>
 @property  NSString *reason
 @property  NSString *reason2
 @property  unsigned int rid
 @property  int source
 @property  NSString *referenceKey
 @property  NSArray *friends
 @property  BOOL isFriend
 @property  NSString *playerID
 @property  GKPlayerInternal *internal
 @property  NSString *status
 @property  NSString *alias
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSNumber *friendLevel
 @property  NSNumber *friendBiDirectional
 @property  NSNumber *friendPlayedWith
 @property  NSNumber *friendPlayedNearby
 @property  NSNumber *acceptedGameInviteFromThisFriend
 @property  NSNumber *initiatedGameInviteToThisFriend
 @property  NSNumber *automatchedTogether
 @property  long long avatarType
 @property  NSArray *monogramComponents
 @property  NSDate *lastPlayedDate
 @property  GKGame *lastPlayedGame
 @property  BOOL hasPhoto
 @property  BOOL loaded
 @property  BOOL isFamiliarFriend
 @property  unsigned long numberOfFriends
 @property  {?=qqqqqqqqq} stats
 @property  NSString *messagesID
 @property  BOOL isInContacts
 @property  NSString *cacheKey
 @property  NSAttributedString *whenString
 @property  BOOL isLocalPlayer
 @property  BOOL isAnonymousPlayer
 @property  BOOL isUnknownPlayer
 @property  BOOL isAutomatchPlayer
 @property  BOOL isGuestPlayer
 @property  NSString *gamePlayerID
 @property  NSString *teamPlayerID
 @property  NSString *displayName
 @property  NSString *guestIdentifier
 @property  BOOL isInvitable

  // class methods
  +[GKPlayer instanceMethodSignatureForSelector:]
  +[GKPlayer supportsSecureCoding]
  +[GKPlayer instancesRespondToSelector:]
  +[GKPlayer loadPlayersForIdentifiersPrivate:withCompletionHandler:]
  +[GKPlayer automatchPlayer]
  +[GKPlayer canonicalizedPlayerForInternal:]
  +[GKPlayer loadCompletePlayersForPlayers:completionHandler:]
  +[GKPlayer loadPlayersForLegacyIdentifiers:withCompletionHandler:]
  +[GKPlayer cacheKeyForPlayerID:]
  +[GKPlayer _loadPlayersForIdentifiers:withCompletionHandler:]
  +[GKPlayer anonymousPlayer]
  +[GKPlayer unknownPlayer]
  +[GKPlayer anonymousGuestPlayerWithIdentifier:]
  +[GKPlayer loadPlayersForIdentifiers:withCompletionHandler:]
  +[GKPlayer playerFromPlayerID:]

  // instance methods
  -[GKPlayer internal]
  -[GKPlayer setValue:forUndefinedKey:]
  -[GKPlayer stats]
  -[GKPlayer emails]
  -[GKPlayer friends]
  -[GKPlayer displayName]
  -[GKPlayer valueForUndefinedKey:]
  -[GKPlayer initWithCoder:]
  -[GKPlayer methodSignatureForSelector:]
  -[GKPlayer cacheKey]
  -[GKPlayer sortName]
  -[GKPlayer hasPhoto]
  -[GKPlayer .cxx_destruct]
  -[GKPlayer alias]
  -[GKPlayer gamePlayerID]
  -[GKPlayer forwardingTargetForSelector:]
  -[GKPlayer init]
  -[GKPlayer respondsToSelector:]
  -[GKPlayer email]
  -[GKPlayer referenceKey]
  -[GKPlayer isEqual:]
  -[GKPlayer initWithInternalRepresentation:]
  -[GKPlayer avatarType]
  -[GKPlayer _postChangeNotification]
  -[GKPlayer setInternal:]
  -[GKPlayer postChangeNotification]
  -[GKPlayer dealloc]
  -[GKPlayer playerID]
  -[GKPlayer teamPlayerID]
  -[GKPlayer encodeWithCoder:]
  -[GKPlayer isInvitable]
  -[GKPlayer displayNameWithOptions:]
  -[GKPlayer lastPlayedGame]
  -[GKPlayer loadProfileWithCompletionHandler:]
  -[GKPlayer isFamiliarFriend]
  -[GKPlayer messagesID]
  -[GKPlayer friendPlayedWith]
  -[GKPlayer friendPlayedNearby]
  -[GKPlayer friendBiDirectional]
  -[GKPlayer loadFriendsAsPlayersWithCompletionHandler:]
  -[GKPlayer isInContacts]
  -[GKPlayer setFriends:]
  -[GKPlayer scopedIDsArePersistent]
  -[GKPlayer friendLevel]
  -[GKPlayer acceptedGameInviteFromThisFriend]
  -[GKPlayer initiatedGameInviteToThisFriend]
  -[GKPlayer automatchedTogether]
  -[GKPlayer setFriendLevel:]
  -[GKPlayer setFriendBiDirectional:]
  -[GKPlayer setFriendPlayedWith:]
  -[GKPlayer setFriendPlayedNearby:]
  -[GKPlayer setAcceptedGameInviteFromThisFriend:]
  -[GKPlayer setInitiatedGameInviteToThisFriend:]
  -[GKPlayer setAutomatchedTogether:]
  -[GKPlayer loadCommonFriends:asPlayersWithCompletionHandler:]
  -[GKPlayer loadGamesPlayedIncludingInstalledGames:completionHandler:]
  -[GKPlayer loadFriendsWithFilter:withComplationHandler:]
  -[GKPlayer loadRecentMatchesForGame:block:]
  -[GKPlayer loadGamesPlayed:]
  -[GKPlayer loadGamesPlayedDetailsWithCompletionHandler:]
  -[GKPlayer identifierForIDS]
  -[GKPlayer searchName]
  -[GKPlayer isFriendablePlayer]
  -[GKPlayer whenString]
  -[GKPlayer setWhenString:]
  -[GKPlayer minimalPlayer]


_GKIncompletePlayer : GKPlayer

GKFriendServiceInterface : GKServiceInterface
  // class methods
  +[GKFriendServiceInterface interfaceProtocol]
  +[GKFriendServiceInterface configureInterface:]


GKFriendServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKFriendServicePrivateInterface interfaceProtocol]
  +[GKFriendServicePrivateInterface configureInterface:]


GKScore : NSObject <NSCopying, NSCoding, NSSecureCoding>
 @property  NSString *category
 @property  GKScoreInternal *internal
 @property  NSString *playerID
 @property  long long rank
 @property  NSString *formattedValue
 @property  NSString *groupLeaderboardIdentifier
 @property  BOOL valueSet
 @property  GKGame *game
 @property  long long value
 @property  NSString *leaderboardIdentifier
 @property  unsigned long context
 @property  NSDate *date
 @property  GKPlayer *player
 @property  BOOL shouldSetDefaultLeaderboard

  // class methods
  +[GKScore instanceMethodSignatureForSelector:]
  +[GKScore supportsSecureCoding]
  +[GKScore instancesRespondToSelector:]
  +[GKScore reportScores:whileScreeningChallenges:withEligibleChallenges:withCompletionHandler:]
  +[GKScore reportScores:withCompletionHandler:]

  // instance methods
  -[GKScore internal]
  -[GKScore setValue:forUndefinedKey:]
  -[GKScore valueForUndefinedKey:]
  -[GKScore game]
  -[GKScore initWithCoder:]
  -[GKScore methodSignatureForSelector:]
  -[GKScore initWithCategory:]
  -[GKScore .cxx_destruct]
  -[GKScore forwardingTargetForSelector:]
  -[GKScore init]
  -[GKScore respondsToSelector:]
  -[GKScore isEqual:]
  -[GKScore player]
  -[GKScore initWithInternalRepresentation:]
  -[GKScore setInternal:]
  -[GKScore setGame:]
  -[GKScore copyWithZone:]
  -[GKScore playerID]
  -[GKScore encodeWithCoder:]
  -[GKScore initWithLeaderboardIdentifier:player:]
  -[GKScore initWithInternalRepresentation:playerID:]
  -[GKScore initWithInternalRepresentation:playerInternal:]
  -[GKScore initWithLeaderboardIdentifier:]
  -[GKScore shouldSetDefaultLeaderboard]
  -[GKScore initWithLeaderboardIdentifier:forPlayer:]
  -[GKScore reportScoreWithCompletionHandler:]
  -[GKScore setShouldSetDefaultLeaderboard:]


GKGameSummaryInternal : GKInternalRepresentation
 @property  NSString *bundleID
 @property  NSNumber *adamID
 @property  NSDate *playedAt
 @property  NSSet *compatiblePlatforms
 @property  BOOL isArcade

  // class methods
  +[GKGameSummaryInternal secureCodedPropertyKeys]

  // instance methods
  -[GKGameSummaryInternal adamID]
  -[GKGameSummaryInternal bundleID]
  -[GKGameSummaryInternal .cxx_destruct]
  -[GKGameSummaryInternal setBundleID:]
  -[GKGameSummaryInternal isArcade]
  -[GKGameSummaryInternal playedAt]
  -[GKGameSummaryInternal setAdamID:]
  -[GKGameSummaryInternal setIsArcade:]
  -[GKGameSummaryInternal compatiblePlatforms]
  -[GKGameSummaryInternal setCompatiblePlatforms:]
  -[GKGameSummaryInternal setPlayedAt:]
  -[GKGameSummaryInternal initWithGameSummary:]


GKTurnBasedParticipant : NSObject
 @property  GKTurnBasedParticipantInternal *internal
 @property  NSDate *lastTurnDate
 @property  NSDate *timeoutDate
 @property  NSString *matchStatusString
 @property  BOOL isWinner
 @property  GKPlayer *invitedBy
 @property  NSString *inviteMessage
 @property  BOOL isLocalPlayer
 @property  GKPlayer *player
 @property  long long status
 @property  long long matchOutcome

  // class methods
  +[GKTurnBasedParticipant instanceMethodSignatureForSelector:]
  +[GKTurnBasedParticipant instancesRespondToSelector:]
  +[GKTurnBasedParticipant keyPathsForValuesAffectingStatus]
  +[GKTurnBasedParticipant stringForMatchOutcome:totalParticipant:]
  +[GKTurnBasedParticipant keyPathsForValuesAffectingBasicMatchOutcomeString]
  +[GKTurnBasedParticipant keyPathsForValuesAffectingMatchOutcomeString]
  +[GKTurnBasedParticipant matchOutcomeIsValidForDoneState:]

  // instance methods
  -[GKTurnBasedParticipant internal]
  -[GKTurnBasedParticipant setValue:forUndefinedKey:]
  -[GKTurnBasedParticipant valueForUndefinedKey:]
  -[GKTurnBasedParticipant methodSignatureForSelector:]
  -[GKTurnBasedParticipant .cxx_destruct]
  -[GKTurnBasedParticipant forwardingTargetForSelector:]
  -[GKTurnBasedParticipant init]
  -[GKTurnBasedParticipant respondsToSelector:]
  -[GKTurnBasedParticipant isEqual:]
  -[GKTurnBasedParticipant player]
  -[GKTurnBasedParticipant initWithInternalRepresentation:]
  -[GKTurnBasedParticipant status]
  -[GKTurnBasedParticipant invitedBy]
  -[GKTurnBasedParticipant setStatus:]
  -[GKTurnBasedParticipant isLocalPlayer]
  -[GKTurnBasedParticipant playerID]
  -[GKTurnBasedParticipant isWinner]
  -[GKTurnBasedParticipant lastTurnDate]
  -[GKTurnBasedParticipant matchOutcomeStringForLocalPlayer:]
  -[GKTurnBasedParticipant matchOutcomeString:]
  -[GKTurnBasedParticipant matchStatusString]
  -[GKTurnBasedParticipant basicMatchOutcomeString:]


GKTurnBasedEventHandler : NSObject
 @property  BOOL didBecomeActive
 @property  NSObject<OS_dispatch_queue> *lookForEventQueue
 @property  NSObject<GKTurnBasedEventHandlerDelegate> *delegate

  // class methods
  +[GKTurnBasedEventHandler sharedTurnBasedEventHandler]

  // instance methods
  -[GKTurnBasedEventHandler didBecomeActive]
  -[GKTurnBasedEventHandler .cxx_destruct]
  -[GKTurnBasedEventHandler setDelegate:]
  -[GKTurnBasedEventHandler init]
  -[GKTurnBasedEventHandler delegate]
  -[GKTurnBasedEventHandler lookForEvent]
  -[GKTurnBasedEventHandler callTurnEventForMatch:userTapped:]
  -[GKTurnBasedEventHandler setDidBecomeActive:]
  -[GKTurnBasedEventHandler lookForEventQueue]
  -[GKTurnBasedEventHandler setLookForEventQueue:]


GKTurnBasedMatch : NSObject <GKSessionDelegate>
 @property  NSDate *lastTurnDate
 @property  long long turnNumber
 @property  NSDate *dateSortKey
 @property  GKTurnBasedParticipant *currentParticipant
 @property  GKTurnBasedParticipant *previousParticipant
 @property  GKTurnBasedParticipant *previousParticipantOrFirstKnownPlayer
 @property  GKTurnBasedParticipant *playingWithParticipantOrFirstKnownPlayer
 @property  GKTurnBasedParticipant *localPlayerParticipant
 @property  GKPlayer *showcasePlayer
 @property  GKTurnBasedParticipant *firstWinnerOrTiedOrLastLoser
 @property  unsigned long matchDataMaximumSize
 @property  GKPlayer *currentPlayer
 @property  NSString *bundleID
 @property  NSString *bundleVersion
 @property  NSString *shortBundleVersion
 @property  long long platform
 @property  unsigned int state
 @property  BOOL isMyTurn
 @property  BOOL localPlayerHasRecentTurn
 @property  GKGame *game
 @property  GKTurnBasedMatchInternal *internal
 @property  NSString *matchID
 @property  NSDate *creationDate
 @property  NSArray *participants
 @property  long long status
 @property  NSData *matchData
 @property  NSString *message
 @property  NSArray *exchanges
 @property  NSArray *activeExchanges
 @property  NSArray *completedExchanges
 @property  unsigned long exchangeDataMaximumSize
 @property  unsigned long exchangeMaxInitiatedExchangesPerPlayer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKTurnBasedMatch instanceMethodSignatureForSelector:]
  +[GKTurnBasedMatch instancesRespondToSelector:]
  +[GKTurnBasedMatch keyPathsForValuesAffectingStatus]
  +[GKTurnBasedMatch loadTurnBasedMatchSummariesIncludingCompatibleBundleID:withCompletionHandler:]
  +[GKTurnBasedMatch loadTurnBasedMatchWithDetailsForMatchID:withCompletionHandler:]
  +[GKTurnBasedMatch findMatchForRequest:withCompletionHandler:]
  +[GKTurnBasedMatch loadMatchWithID:withCompletionHandler:]
  +[GKTurnBasedMatch getTurnBasedBadgeCountWithHandler:]
  +[GKTurnBasedMatch loadMatchesIncludingCompatibleBundleID:withCompletionHandler:]
  +[GKTurnBasedMatch matchesWithInternalRepresentations:]
  +[GKTurnBasedMatch loadTurnBasedMatchDetailsForMatchIDs:loadGameData:withCompletionHandler:]
  +[GKTurnBasedMatch _localizableMessageWithKey:arguments:defaultMessage:]
  +[GKTurnBasedMatch loadMatchesWithCompletionHandler:]
  +[GKTurnBasedMatch loadTurnBasedMatchSummaries:]

  // instance methods
  -[GKTurnBasedMatch internal]
  -[GKTurnBasedMatch participants]
  -[GKTurnBasedMatch setValue:forUndefinedKey:]
  -[GKTurnBasedMatch valueForUndefinedKey:]
  -[GKTurnBasedMatch game]
  -[GKTurnBasedMatch methodSignatureForSelector:]
  -[GKTurnBasedMatch .cxx_destruct]
  -[GKTurnBasedMatch setMessage:]
  -[GKTurnBasedMatch setState:]
  -[GKTurnBasedMatch forwardingTargetForSelector:]
  -[GKTurnBasedMatch init]
  -[GKTurnBasedMatch respondsToSelector:]
  -[GKTurnBasedMatch isEqual:]
  -[GKTurnBasedMatch initWithInternalRepresentation:]
  -[GKTurnBasedMatch message]
  -[GKTurnBasedMatch state]
  -[GKTurnBasedMatch compare:]
  -[GKTurnBasedMatch status]
  -[GKTurnBasedMatch setInternal:]
  -[GKTurnBasedMatch isMyTurn]
  -[GKTurnBasedMatch acceptInviteWithCompletionHandler:]
  -[GKTurnBasedMatch playingWithParticipantOrFirstKnownPlayer]
  -[GKTurnBasedMatch removeWithCompletionHandler:]
  -[GKTurnBasedMatch declineInviteWithCompletionHandler:]
  -[GKTurnBasedMatch firstWinnerOrTiedOrLastLoser]
  -[GKTurnBasedMatch currentParticipant]
  -[GKTurnBasedMatch activeExchanges]
  -[GKTurnBasedMatch localPlayerParticipant]
  -[GKTurnBasedMatch participantQuitOutOfTurnWithOutcome:withCompletionHandler:]
  -[GKTurnBasedMatch loadURLWithMatchRequest:completionHandler:]
  -[GKTurnBasedMatch reserveShareParticipantSlots:minPlayerCount:maxPlayerCount:andInvitePlayers:withMessage:handler:]
  -[GKTurnBasedMatch endMatchInTurnWithMatchData:completionHandler:]
  -[GKTurnBasedMatch loadMatchDataWithCompletionHandler:]
  -[GKTurnBasedMatch showcasePlayer]
  -[GKTurnBasedMatch exchangeDataMaximumSize]
  -[GKTurnBasedMatch exchangeMaxInitiatedExchangesPerPlayer]
  -[GKTurnBasedMatch rematchWithCompletionHandler:]
  -[GKTurnBasedMatch exchangeForID:]
  -[GKTurnBasedMatch _updateWithInternal:]
  -[GKTurnBasedMatch _participantsForInternalRepresentation:]
  -[GKTurnBasedMatch _exchangesForInternalRepresentation:participants:]
  -[GKTurnBasedMatch exchanges]
  -[GKTurnBasedMatch currentPlayer]
  -[GKTurnBasedMatch setLocalizableMessageWithKey:arguments:]
  -[GKTurnBasedMatch matchDataMaximumSize]
  -[GKTurnBasedMatch dateSortKey]
  -[GKTurnBasedMatch setCurrentParticipant:]
  -[GKTurnBasedMatch previousParticipant]
  -[GKTurnBasedMatch previousParticipantOrFirstKnownPlayer]
  -[GKTurnBasedMatch endTurnWithNextParticipants:turnTimeout:matchData:completionHandler:]
  -[GKTurnBasedMatch indexesForParticipants:]
  -[GKTurnBasedMatch participantQuitInTurnWithOutcome:nextParticipants:turnTimeout:matchData:completionHandler:]
  -[GKTurnBasedMatch endMatchInTurnWithMatchData:scores:achievements:completionHandler:]
  -[GKTurnBasedMatch localPlayerHasRecentTurn]
  -[GKTurnBasedMatch completedExchanges]
  -[GKTurnBasedMatch endTurnWithNextParticipant:matchData:completionHandler:]
  -[GKTurnBasedMatch participantQuitInTurnWithOutcome:nextParticipant:matchData:completionHandler:]
  -[GKTurnBasedMatch endMatchInTurnWithMatchData:leaderboardScores:achievements:completionHandler:]
  -[GKTurnBasedMatch saveCurrentTurnWithMatchData:completionHandler:]
  -[GKTurnBasedMatch saveMergedMatchData:withResolvedExchanges:completionHandler:]
  -[GKTurnBasedMatch sendExchangeToParticipants:data:localizableMessageKey:arguments:timeout:completionHandler:]
  -[GKTurnBasedMatch sendReminderToParticipants:localizableMessageKey:arguments:completionHandler:]


GKTurnBasedExchange : NSObject
 @property  NSArray *recipients
 @property  NSArray *replies
 @property  NSString *exchangeID
 @property  GKTurnBasedParticipant *sender
 @property  NSData *data
 @property  NSDate *timeoutDate
 @property  NSDate *completionDate
 @property  GKTurnBasedExchangeInternal *internal
 @property  GKTurnBasedMatch *match
 @property  BOOL status
 @property  NSString *message
 @property  NSDate *sendDate

  // class methods
  +[GKTurnBasedExchange instanceMethodSignatureForSelector:]
  +[GKTurnBasedExchange instancesRespondToSelector:]

  // instance methods
  -[GKTurnBasedExchange internal]
  -[GKTurnBasedExchange setSender:]
  -[GKTurnBasedExchange setValue:forUndefinedKey:]
  -[GKTurnBasedExchange valueForUndefinedKey:]
  -[GKTurnBasedExchange methodSignatureForSelector:]
  -[GKTurnBasedExchange setRecipients:]
  -[GKTurnBasedExchange .cxx_destruct]
  -[GKTurnBasedExchange sender]
  -[GKTurnBasedExchange forwardingTargetForSelector:]
  -[GKTurnBasedExchange init]
  -[GKTurnBasedExchange recipients]
  -[GKTurnBasedExchange respondsToSelector:]
  -[GKTurnBasedExchange match]
  -[GKTurnBasedExchange isEqual:]
  -[GKTurnBasedExchange setMatch:]
  -[GKTurnBasedExchange initWithInternalRepresentation:]
  -[GKTurnBasedExchange message]
  -[GKTurnBasedExchange replies]
  -[GKTurnBasedExchange status]
  -[GKTurnBasedExchange setInternal:]
  -[GKTurnBasedExchange setReplies:]
  -[GKTurnBasedExchange _updateInternalFromMatchInternal:]
  -[GKTurnBasedExchange cancelWithLocalizableMessageKey:arguments:completionHandler:]
  -[GKTurnBasedExchange replyWithLocalizableMessageKey:arguments:data:completionHandler:]


GKTurnBasedExchangeReply : NSObject
 @property  GKTurnBasedParticipant *recipient
 @property  NSData *data
 @property  GKTurnBasedExchangeReplyInternal *internal
 @property  GKTurnBasedMatch *match
 @property  NSString *message
 @property  NSDate *replyDate

  // class methods
  +[GKTurnBasedExchangeReply instanceMethodSignatureForSelector:]
  +[GKTurnBasedExchangeReply instancesRespondToSelector:]

  // instance methods
  -[GKTurnBasedExchangeReply internal]
  -[GKTurnBasedExchangeReply setValue:forUndefinedKey:]
  -[GKTurnBasedExchangeReply valueForUndefinedKey:]
  -[GKTurnBasedExchangeReply setRecipient:]
  -[GKTurnBasedExchangeReply methodSignatureForSelector:]
  -[GKTurnBasedExchangeReply recipient]
  -[GKTurnBasedExchangeReply .cxx_destruct]
  -[GKTurnBasedExchangeReply forwardingTargetForSelector:]
  -[GKTurnBasedExchangeReply init]
  -[GKTurnBasedExchangeReply respondsToSelector:]
  -[GKTurnBasedExchangeReply match]
  -[GKTurnBasedExchangeReply isEqual:]
  -[GKTurnBasedExchangeReply setMatch:]
  -[GKTurnBasedExchangeReply initWithInternalRepresentation:]
  -[GKTurnBasedExchangeReply message]
  -[GKTurnBasedExchangeReply setInternal:]


GKVoiceChat : NSObject <GKVoiceChatSessionDelegate>
 @property  GKSession *gkSession
 @property  GKVoiceChatSession *gkVoiceChatSession
 @property  @? playerStateUpdateHandler
 @property  NSArray *players
 @property  @? playerVoiceChatStateDidChangeHandler
 @property  NSString *name
 @property  BOOL active
 @property  float volume

  // class methods
  +[GKVoiceChat isVoIPAllowed]

  // instance methods
  -[GKVoiceChat name]
  -[GKVoiceChat volume]
  -[GKVoiceChat setVolume:]
  -[GKVoiceChat isActive]
  -[GKVoiceChat .cxx_destruct]
  -[GKVoiceChat stop]
  -[GKVoiceChat players]
  -[GKVoiceChat setActive:]
  -[GKVoiceChat start]
  -[GKVoiceChat dealloc]
  -[GKVoiceChat setPlayers:]
  -[GKVoiceChat initChat:withSession:players:]
  -[GKVoiceChat playerIDs]
  -[GKVoiceChat gkVoiceChatSession:stateUpdate:forPeer:]
  -[GKVoiceChat setPlayer:muted:]
  -[GKVoiceChat setMute:forPlayer:]
  -[GKVoiceChat playerStateUpdateHandler]
  -[GKVoiceChat setPlayerStateUpdateHandler:]
  -[GKVoiceChat playerVoiceChatStateDidChangeHandler]
  -[GKVoiceChat setPlayerVoiceChatStateDidChangeHandler:]
  -[GKVoiceChat gkSession]
  -[GKVoiceChat setGkSession:]
  -[GKVoiceChat gkVoiceChatSession]
  -[GKVoiceChat setGkVoiceChatSession:]


GKLeaderboardEntry : NSObject
 @property  GKLeaderboardEntryInternal *internal
 @property  GKPlayer *player
 @property  long long rank
 @property  long long score
 @property  NSString *formattedScore
 @property  unsigned long context
 @property  NSDate *date

  // class methods
  +[GKLeaderboardEntry formattedDifferenceBetweenFirstScore:secondScore:]

  // instance methods
  -[GKLeaderboardEntry internal]
  -[GKLeaderboardEntry .cxx_destruct]
  -[GKLeaderboardEntry forwardingTargetForSelector:]
  -[GKLeaderboardEntry player]
  -[GKLeaderboardEntry initWithInternalRepresentation:]
  -[GKLeaderboardEntry setInternal:]
  -[GKLeaderboardEntry _gkScore]


GKScoreParser : NSObject
 @property  NSMutableString *prefix
 @property  NSMutableString *suffix
 @property  NSMutableArray *numericSeparators
 @property  long long colonCount
 @property  long long precision
 @property  BOOL error

  // class methods
  +[GKScoreParser formattedDifferenceBetweenFirstScore:secondScore:]

  // instance methods
  -[GKScoreParser prefix]
  -[GKScoreParser suffix]
  -[GKScoreParser setPrefix:]
  -[GKScoreParser .cxx_destruct]
  -[GKScoreParser setSuffix:]
  -[GKScoreParser precision]
  -[GKScoreParser setError:]
  -[GKScoreParser error]
  -[GKScoreParser setPrecision:]
  -[GKScoreParser setNumericSeparators:]
  -[GKScoreParser colonCount]
  -[GKScoreParser setColonCount:]
  -[GKScoreParser numericSeparators]
  -[GKScoreParser parseScore:]


GKAchievementDescriptionInternal : GKAchievementInternal
  // class methods
  +[GKAchievementDescriptionInternal secureCodedPropertyKeys]


GKDaemonProxy : GKServiceProxy <NSXPCConnectionDelegate, GKClientProtocol>
 @property  NSObject<OS_dispatch_queue> *invocationQueue
 @property  NSObject<OS_dispatch_queue> *authenticationQueue
 @property  NSObject<OS_dispatch_semaphore> *concurrentRequestSemaphore
 @property  NSDictionary *interfaceLookup
 @property  NSXPCConnection *connection
 @property  int hostPID
 @property  NSHashTable *dataUpdateDelegates
 @property  <GKDaemonProxyDataUpdateDelegate> *dataUpdateDelegate
 @property  <GKDaemonProxyNetworkActivityIndicatorDelegate> *networkActivityIndicatorDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[GKDaemonProxy messagesDidReceiveGameCenterURL:]
  +[GKDaemonProxy proxyForPlayer:]
  +[GKDaemonProxy daemonProxy]
  +[GKDaemonProxy getActiveFriendRequestCount:]
  +[GKDaemonProxy proxiesForPlayer]
  +[GKDaemonProxy removeProxyForPlayer:]
  +[GKDaemonProxy messagesDidReceiveGameCenterURL:senderHandle:contactID:]

  // instance methods
  -[GKDaemonProxy setPreferencesValues:]
  -[GKDaemonProxy session:didReceiveMessage:withData:fromPlayer:]
  -[GKDaemonProxy session:didReceiveData:fromPlayer:]
  -[GKDaemonProxy fetchTurnBasedData]
  -[GKDaemonProxy nearbyDataReceivedForPlayerID:deviceID:data:]
  -[GKDaemonProxy requestSandboxExtension:]
  -[GKDaemonProxy didDisconnectFromParticipantWithID:]
  -[GKDaemonProxy setHostPID:]
  -[GKDaemonProxy friendRequestSelected:]
  -[GKDaemonProxy cancelInviteWithNotification:]
  -[GKDaemonProxy setConcurrentRequestSemaphore:]
  -[GKDaemonProxy achievementSelected:]
  -[GKDaemonProxy interfaceLookup]
  -[GKDaemonProxy .cxx_destruct]
  -[GKDaemonProxy setTestGame:]
  -[GKDaemonProxy acceptMultiplayerGameInvite]
  -[GKDaemonProxy localPlayerAcceptedCustomTournamentInvite]
  -[GKDaemonProxy resetServiceLookup]
  -[GKDaemonProxy accountName]
  -[GKDaemonProxy authenticatedPlayerID]
  -[GKDaemonProxy resetLoginCancelCount]
  -[GKDaemonProxy setConnection:]
  -[GKDaemonProxy declineInviteWithNotification:]
  -[GKDaemonProxy setDataUpdateDelegate:]
  -[GKDaemonProxy hostPID]
  -[GKDaemonProxy hasAuthenticatedAccount]
  -[GKDaemonProxy dispatchCompletedChallenge:]
  -[GKDaemonProxy getAuthenticatedPlayerIDWithHandler:]
  -[GKDaemonProxy init]
  -[GKDaemonProxy setCurrentGame:serverEnvironment:reply:]
  -[GKDaemonProxy completedOptimisticAuthenticationWithResponse:error:]
  -[GKDaemonProxy authenticationQueue]
  -[GKDaemonProxy invocationQueue]
  -[GKDaemonProxy removeDataUpdateDelegate:]
  -[GKDaemonProxy connection]
  -[GKDaemonProxy scoreSelected:]
  -[GKDaemonProxy getAccountNameWithHandler:]
  -[GKDaemonProxy session:removedPlayer:]
  -[GKDaemonProxy resetNetworkActivity]
  -[GKDaemonProxy setNetworkActivityIndicatorDelegate:]
  -[GKDaemonProxy localizedMessageFromDictionary:forBundleID:]
  -[GKDaemonProxy receivedChallengeSelected:]
  -[GKDaemonProxy dataUpdateDelegate]
  -[GKDaemonProxy respondedToNearbyInvite:]
  -[GKDaemonProxy getGamedFiredUp]
  -[GKDaemonProxy buildInterfaceLookup]
  -[GKDaemonProxy session:player:didChangeConnectionState:]
  -[GKDaemonProxy challengeReceived:]
  -[GKDaemonProxy authenticatedPlayersDidChange:reply:]
  -[GKDaemonProxy session:player:didSaveData:]
  -[GKDaemonProxy nearbyPlayerLostForPlayerID:deviceID:]
  -[GKDaemonProxy nearbyPlayerFoundForPlayerID:deviceID:discoveryInfo:]
  -[GKDaemonProxy addDataUpdateDelegate:]
  -[GKDaemonProxy authenticatedCredential]
  -[GKDaemonProxy loadRemoteImageDataForClientForURL:reply:]
  -[GKDaemonProxy setBadgeCount:forType:]
  -[GKDaemonProxy networkActivityIndicatorDelegate]
  -[GKDaemonProxy completedChallengeSelected:]
  -[GKDaemonProxy endNetworkActivity]
  -[GKDaemonProxy setInterfaceLookup:]
  -[GKDaemonProxy addInterface:toLookup:]
  -[GKDaemonProxy setAuthenticationQueue:]
  -[GKDaemonProxy relayPushNotification:]
  -[GKDaemonProxy beginNetworkActivity]
  -[GKDaemonProxy setDataUpdateDelegates:]
  -[GKDaemonProxy acceptInviteWithNotification:]
  -[GKDaemonProxy refreshContentsForDataType:userInfo:]
  -[GKDaemonProxy setLogBits:]
  -[GKDaemonProxy didReceiveData:reliably:forRecipients:fromSender:]
  -[GKDaemonProxy cancelGameInvite:]
  -[GKDaemonProxy replyQueueForRequestSelector:]
  -[GKDaemonProxy authenticatedPlayerInfo]
  -[GKDaemonProxy challengeCompleted:]
  -[GKDaemonProxy concurrentRequestSemaphore]
  -[GKDaemonProxy userInfoForPlayerID:deviceID:data:discoveryInfo:]
  -[GKDaemonProxy _resetServiceLookup]
  -[GKDaemonProxy connection:handleInvocation:isReply:]
  -[GKDaemonProxy authenticatedLocalPlayersWithStatus:]
  -[GKDaemonProxy setInvocationQueue:]
  -[GKDaemonProxy session:addedPlayer:]
  -[GKDaemonProxy dataUpdateDelegates]
  -[GKDaemonProxy didConnectToParticipantWithID:]


GKRequestIdentifier : NSObject <NSCopying>
 @property  unsigned long savedHash
 @property  SEL selector
 @property  NSArray *arguments

  // class methods
  +[GKRequestIdentifier requestIdentifierForInvocation:]

  // instance methods
  -[GKRequestIdentifier selector]
  -[GKRequestIdentifier .cxx_destruct]
  -[GKRequestIdentifier setArguments:]
  -[GKRequestIdentifier arguments]
  -[GKRequestIdentifier isEqual:]
  -[GKRequestIdentifier initWithInvocation:]
  -[GKRequestIdentifier setSelector:]
  -[GKRequestIdentifier copyWithZone:]
  -[GKRequestIdentifier _argumentsForInvocation:]
  -[GKRequestIdentifier savedHash]
  -[GKRequestIdentifier setSavedHash:]


GKServiceProxy : NSObject
 @property  NSDictionary *serviceLookup
 @property  GKThreadsafeDictionary *pendingRequests
 @property  unsigned int serviceGeneration
 @property  GKDaemonProxy *baseProxy
 @property  GKPlayerInternal *localPlayer
 @property  <GKAccountService> *accountService
 @property  <GKAccountServicePrivate> *accountServicePrivate
 @property  <GKProfileService> *profileService
 @property  <GKProfileServicePrivate> *profileServicePrivate
 @property  <GKFriendService> *friendService
 @property  <GKFriendServicePrivate> *friendServicePrivate
 @property  <GKGameService> *gameService
 @property  <GKGameServicePrivate> *gameServicePrivate
 @property  <GKGameStatService> *gameStatService
 @property  <GKGameStatServicePrivate> *gameStatServicePrivate
 @property  <GKChallengeService> *challengeService
 @property  <GKChallengeServicePrivate> *challengeServicePrivate
 @property  <GKMultiplayerService> *multiplayerService
 @property  <GKMultiplayerServicePrivate> *multiplayerServicePrivate
 @property  <GKTurnBasedService> *turnBasedService
 @property  <GKTurnBasedServicePrivate> *turnBasedServicePrivate
 @property  <GKUtilityService> *utilityService
 @property  <GKUtilityServicePrivate> *utilityServicePrivate
 @property  <GKBulletinService> *bulletinService
 @property  <GKBulletinServicePrivate> *bulletinServicePrivate
 @property  <GKAnalyticsService> *analyticsService
 @property  <GKAnalyticsServicePrivate> *analyticsServicePrivate
 @property  <GKGameSessionService> *gameSessionService
 @property  <GKGameSessionServicePrivate> *gameSessionServicePrivate
 @property  <GKTournamentService> *tournamentService
 @property  <GKTournamentServicePrivate> *tournamentServicePrivate

  // instance methods
  -[GKServiceProxy setPendingRequests:]
  -[GKServiceProxy pendingRequests]
  -[GKServiceProxy initWithPlayer:]
  -[GKServiceProxy methodSignatureForSelector:]
  -[GKServiceProxy .cxx_destruct]
  -[GKServiceProxy accountService]
  -[GKServiceProxy methodSignatureForProtocol:selector:]
  -[GKServiceProxy forwardInvocation:]
  -[GKServiceProxy localPlayer]
  -[GKServiceProxy accountServicePrivate]
  -[GKServiceProxy utilityServicePrivate]
  -[GKServiceProxy bulletinServicePrivate]
  -[GKServiceProxy gameStatServicePrivate]
  -[GKServiceProxy gameServicePrivate]
  -[GKServiceProxy setLocalPlayer:]
  -[GKServiceProxy profileServicePrivate]
  -[GKServiceProxy utilityService]
  -[GKServiceProxy profileService]
  -[GKServiceProxy turnBasedService]
  -[GKServiceProxy analyticsService]
  -[GKServiceProxy multiplayerService]
  -[GKServiceProxy turnBasedServicePrivate]
  -[GKServiceProxy friendServicePrivate]
  -[GKServiceProxy gameService]
  -[GKServiceProxy tournamentService]
  -[GKServiceProxy tournamentServicePrivate]
  -[GKServiceProxy gameStatService]
  -[GKServiceProxy friendService]
  -[GKServiceProxy baseProxy]
  -[GKServiceProxy setBaseProxy:]
  -[GKServiceProxy serviceGeneration]
  -[GKServiceProxy setServiceGeneration:]
  -[GKServiceProxy setServiceLookup:]
  -[GKServiceProxy replyToDuplicatesForRequest:withInvocation:queue:]
  -[GKServiceProxy requestIdentifierForInvocation:]
  -[GKServiceProxy buildServiceLookupIfNeccessary]
  -[GKServiceProxy serviceLookup]
  -[GKServiceProxy buildServiceLookup]
  -[GKServiceProxy addService:forProtocol:toLookup:]
  -[GKServiceProxy challengeService]
  -[GKServiceProxy challengeServicePrivate]
  -[GKServiceProxy multiplayerServicePrivate]
  -[GKServiceProxy bulletinService]
  -[GKServiceProxy analyticsServicePrivate]
  -[GKServiceProxy gameSessionService]
  -[GKServiceProxy gameSessionServicePrivate]


GKRecurrenceRule : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long interval
 @property  long long frequency

  // class methods
  +[GKRecurrenceRule supportsSecureCoding]

  // instance methods
  -[GKRecurrenceRule setInterval:]
  -[GKRecurrenceRule interval]
  -[GKRecurrenceRule initWithCoder:]
  -[GKRecurrenceRule initWithInterval:frequency:]
  -[GKRecurrenceRule setFrequency:]
  -[GKRecurrenceRule frequency]
  -[GKRecurrenceRule copyWithZone:]
  -[GKRecurrenceRule encodeWithCoder:]


GKCustomTournamentRequest : NSObject <NSSecureCoding>
 @property  GKCustomTournamentRequestInternal *internal
 @property  GKTournamentDefinition *tournamentDefinition
 @property  GKPlayer *tournamentCreator
 @property  NSString *tournamentName
 @property  NSString *icon
 @property  long long seedingMethod
 @property  long long scoringMethod
 @property  long long maxPlayers
 @property  long long minPlayers
 @property  double duration
 @property  NSDate *startTime
 @property  long long maxReplays
 @property  BOOL isCreatorInTournament

  // class methods
  +[GKCustomTournamentRequest supportsSecureCoding]

  // instance methods
  -[GKCustomTournamentRequest internal]
  -[GKCustomTournamentRequest initWithCoder:]
  -[GKCustomTournamentRequest .cxx_destruct]
  -[GKCustomTournamentRequest forwardingTargetForSelector:]
  -[GKCustomTournamentRequest initWithInternalRepresentation:]
  -[GKCustomTournamentRequest setInternal:]
  -[GKCustomTournamentRequest encodeWithCoder:]
  -[GKCustomTournamentRequest tournamentDefinition]
  -[GKCustomTournamentRequest tournamentCreator]
  -[GKCustomTournamentRequest initWithTournamentDefinition:andCreator:]
  -[GKCustomTournamentRequest createTournamentWithCompletionHandler:]


GKDaemonInterface : NSXPCInterface
  // class methods
  +[GKDaemonInterface interface]


GKAccountServiceInterface : GKServiceInterface
  // class methods
  +[GKAccountServiceInterface interfaceProtocol]


GKAccountServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKAccountServicePrivateInterface interfaceProtocol]


GKAuthenticateResponse : GKInternalRepresentation
 @property  NSString *playerID
 @property  BOOL loginDisabled
 @property  BOOL passwordChangeRequired
 @property  NSURL *passwordChangeURL
 @property  BOOL shouldShowLinkAccountsUI
 @property  NSString *alertTitle
 @property  NSString *alertMessage
 @property  NSString *lastPersonalizationVersionDisplayed
 @property  unsigned long lastPrivacyNoticeVersionDisplayed
 @property  NSString *lastProfilePrivacyVersionDisplayed
 @property  BOOL useNewDashboardUI
 @property  BOOL accessPointIsOnAutomatically
 @property  BOOL accessPointShowHighlights
 @property  long long accessPointLocation

  // class methods
  +[GKAuthenticateResponse secureCodedPropertyKeys]

  // instance methods
  -[GKAuthenticateResponse .cxx_destruct]
  -[GKAuthenticateResponse init]
  -[GKAuthenticateResponse setAlertMessage:]
  -[GKAuthenticateResponse alertMessage]
  -[GKAuthenticateResponse setAlertTitle:]
  -[GKAuthenticateResponse alertTitle]
  -[GKAuthenticateResponse setPlayerID:]
  -[GKAuthenticateResponse playerID]
  -[GKAuthenticateResponse loginDisabled]
  -[GKAuthenticateResponse lastPrivacyNoticeVersionDisplayed]
  -[GKAuthenticateResponse accessPointShowHighlights]
  -[GKAuthenticateResponse accessPointLocation]
  -[GKAuthenticateResponse accessPointIsOnAutomatically]
  -[GKAuthenticateResponse shouldShowLinkAccountsUI]
  -[GKAuthenticateResponse passwordChangeRequired]
  -[GKAuthenticateResponse passwordChangeURL]
  -[GKAuthenticateResponse setAccessPointIsOnAutomatically:]
  -[GKAuthenticateResponse setAccessPointShowHighlights:]
  -[GKAuthenticateResponse setAccessPointLocation:]
  -[GKAuthenticateResponse setUseNewDashboardUI:]
  -[GKAuthenticateResponse setLoginDisabled:]
  -[GKAuthenticateResponse setPasswordChangeRequired:]
  -[GKAuthenticateResponse setPasswordChangeURL:]
  -[GKAuthenticateResponse setShouldShowLinkAccountsUI:]
  -[GKAuthenticateResponse lastPersonalizationVersionDisplayed]
  -[GKAuthenticateResponse setLastPersonalizationVersionDisplayed:]
  -[GKAuthenticateResponse setLastPrivacyNoticeVersionDisplayed:]
  -[GKAuthenticateResponse lastProfilePrivacyVersionDisplayed]
  -[GKAuthenticateResponse setLastProfilePrivacyVersionDisplayed:]
  -[GKAuthenticateResponse useNewDashboardUI]


GKAuthenticateCredential : GKInternalRepresentation
 @property  NSString *authenticationToken
 @property  NSString *accountName
 @property  NSString *playerID

  // class methods
  +[GKAuthenticateCredential secureCodedPropertyKeys]

  // instance methods
  -[GKAuthenticateCredential setAccountName:]
  -[GKAuthenticateCredential authenticationToken]
  -[GKAuthenticateCredential setAuthenticationToken:]
  -[GKAuthenticateCredential .cxx_destruct]
  -[GKAuthenticateCredential accountName]
  -[GKAuthenticateCredential init]
  -[GKAuthenticateCredential setPlayerID:]
  -[GKAuthenticateCredential playerID]


GKClientInterface : NSXPCInterface
  // class methods
  +[GKClientInterface interface]


GKGameSettingsInternal : GKInternalRepresentation
 @property  NSString *bundleID
 @property  long long allowFriendListAccess

  // class methods
  +[GKGameSettingsInternal supportsSecureCoding]
  +[GKGameSettingsInternal secureCodedPropertyKeys]

  // instance methods
  -[GKGameSettingsInternal bundleID]
  -[GKGameSettingsInternal initWithCoder:]
  -[GKGameSettingsInternal .cxx_destruct]
  -[GKGameSettingsInternal setBundleID:]
  -[GKGameSettingsInternal copyWithZone:]
  -[GKGameSettingsInternal encodeWithCoder:]
  -[GKGameSettingsInternal allowFriendListAccess]
  -[GKGameSettingsInternal setAllowFriendListAccess:]
  -[GKGameSettingsInternal allowFriendListAccessString]
  -[GKGameSettingsInternal initWithGameSettings:]
  -[GKGameSettingsInternal serverAllowFriendListAccessValue]


GKChallenge : NSObject <NSCoding, NSSecureCoding>
 @property  GKChallengeInternal *internal
 @property  NSString *challengeID
 @property  NSString *bundleID
 @property  NSOrderedSet *compatibleBundleIDs
 @property  GKGame *game
 @property  BOOL detailsLoaded
 @property  GKPlayer *issuingPlayer
 @property  GKPlayer *receivingPlayer
 @property  long long state
 @property  NSDate *issueDate
 @property  NSDate *completionDate
 @property  NSString *message

  // class methods
  +[GKChallenge instanceMethodSignatureForSelector:]
  +[GKChallenge supportsSecureCoding]
  +[GKChallenge stringForState:]
  +[GKChallenge instancesRespondToSelector:]
  +[GKChallenge challengeForGame:andPlayer:withAchievement:]
  +[GKChallenge challengeForGame:andPlayer:withScore:]
  +[GKChallenge challengeForInternalRepresentation:]
  +[GKChallenge loadReceivedPendingChallengesWithCompletionHandler:]
  +[GKChallenge loadChallengesForGame:receivingPlayer:withCompletionHandler:]
  +[GKChallenge loadReceivedChallengesWithCompletionHandler:]
  +[GKChallenge getCountOfChallenges:]
  +[GKChallenge loadChallengesForReceivingPlayer:withCompletionHandler:]

  // instance methods
  -[GKChallenge internal]
  -[GKChallenge setValue:forUndefinedKey:]
  -[GKChallenge valueForUndefinedKey:]
  -[GKChallenge game]
  -[GKChallenge initWithCoder:]
  -[GKChallenge methodSignatureForSelector:]
  -[GKChallenge .cxx_destruct]
  -[GKChallenge forwardingTargetForSelector:]
  -[GKChallenge respondsToSelector:]
  -[GKChallenge decline]
  -[GKChallenge isEqual:]
  -[GKChallenge initWithInternalRepresentation:]
  -[GKChallenge setInternal:]
  -[GKChallenge encodeWithCoder:]
  -[GKChallenge issuingPlayer]
  -[GKChallenge detailsLoaded]
  -[GKChallenge loadDetailsWithCompletionHandler:]
  -[GKChallenge issueToPlayers:message:]
  -[GKChallenge receivingPlayer]
  -[GKChallenge declineWithCompletionHandler:]
  -[GKChallenge issuingPlayerID]
  -[GKChallenge receivingPlayerID]
  -[GKChallenge hasLoadedUIDetails]
  -[GKChallenge loadUIDetailsWithHandler:]
  -[GKChallenge infoTextForIssuingPlayer:]


GKScoreChallenge : GKChallenge
 @property  GKLeaderboard *leaderboard
 @property  GKScore *score

  // class methods
  +[GKScoreChallenge instancesRespondToSelector:]

  // instance methods
  -[GKScoreChallenge setScore:]
  -[GKScoreChallenge .cxx_destruct]
  -[GKScoreChallenge titleText]
  -[GKScoreChallenge initWithInternalRepresentation:]
  -[GKScoreChallenge score]
  -[GKScoreChallenge setInternal:]
  -[GKScoreChallenge leaderboard]
  -[GKScoreChallenge detailsLoaded]
  -[GKScoreChallenge loadDetailsWithCompletionHandler:]
  -[GKScoreChallenge detailGoalTextForPlayer:withLeaderboard:]


GKAchievementChallenge : GKChallenge
 @property  GKAchievement *achievement

  // class methods
  +[GKAchievementChallenge instancesRespondToSelector:]

  // instance methods
  -[GKAchievementChallenge .cxx_destruct]
  -[GKAchievementChallenge titleText]
  -[GKAchievementChallenge initWithInternalRepresentation:]
  -[GKAchievementChallenge setInternal:]
  -[GKAchievementChallenge achievement]
  -[GKAchievementChallenge detailsLoaded]
  -[GKAchievementChallenge loadDetailsWithCompletionHandler:]
  -[GKAchievementChallenge setAchievement:]
  -[GKAchievementChallenge detailGoalTextForPlayer:withAchievement:]


GKRoute : NSObject
  // instance methods
  -[GKRoute .cxx_destruct]
  -[GKRoute initWithString:]
  -[GKRoute matchesURL:]
  -[GKRoute initWithString:scheme:]
  -[GKRoute nonParameterCharacterSet]
  -[GKRoute matchesURL:parameters:]


GKChallengeEventHandler : NSObject
 @property  GKChallengeInternal *pendingReceivedChallenge
 @property  GKChallengeInternal *pendingCompletedChallenge
 @property  <GKChallengeEventHandlerUIDelegate> *uiDelegate
 @property  <GKChallengeEventHandlerDelegate> *delegate

  // class methods
  +[GKChallengeEventHandler challengeEventHandler]

  // instance methods
  -[GKChallengeEventHandler .cxx_destruct]
  -[GKChallengeEventHandler setDelegate:]
  -[GKChallengeEventHandler receivedChallengeSelected:]
  -[GKChallengeEventHandler challengeReceived:]
  -[GKChallengeEventHandler delegate]
  -[GKChallengeEventHandler completedChallengeSelected:]
  -[GKChallengeEventHandler uiDelegate]
  -[GKChallengeEventHandler setUiDelegate:]
  -[GKChallengeEventHandler challengeCompleted:]
  -[GKChallengeEventHandler setPendingReceivedChallenge:]
  -[GKChallengeEventHandler setPendingCompletedChallenge:]
  -[GKChallengeEventHandler showBannerForChallenge:complete:]
  -[GKChallengeEventHandler pendingReceivedChallenge]
  -[GKChallengeEventHandler pendingCompletedChallenge]


GKContentPropertyList : NSObject
 @property  NSString *bundleID
 @property  NSDictionary *root

  // class methods
  +[GKContentPropertyList localPropertyListForGameDescriptor:]

  // instance methods
  -[GKContentPropertyList bundleID]
  -[GKContentPropertyList localizedStringForKey:]
  -[GKContentPropertyList _mainBundle]
  -[GKContentPropertyList setRoot:]
  -[GKContentPropertyList .cxx_destruct]
  -[GKContentPropertyList setBundleID:]
  -[GKContentPropertyList root]
  -[GKContentPropertyList _rootDictionary]
  -[GKContentPropertyList achievementDescriptions]
  -[GKContentPropertyList achievementDescriptionForIdentifier:]
  -[GKContentPropertyList localizedStringForKey:forLocalization:]
  -[GKContentPropertyList imageNameForDashboardLogo]
  -[GKContentPropertyList leaderboardDescriptions]
  -[GKContentPropertyList leaderboardSetDescriptions]
  -[GKContentPropertyList leaderboardDescriptionForIdentifier:]
  -[GKContentPropertyList leaderboardSetDescriptionForIdentifier:]


GKMessageInboxEntryInternal : GKInternalRepresentation
 @property  NSURL *url
 @property  NSString *senderAlias
 @property  NSString *senderHandle
 @property  NSString *contactID
 @property  NSString *contactName
 @property  NSString *friendCode
 @property  NSString *senderDisplayName

  // class methods
  +[GKMessageInboxEntryInternal supportsSecureCoding]
  +[GKMessageInboxEntryInternal secureCodedPropertyKeys]

  // instance methods
  -[GKMessageInboxEntryInternal contactName]
  -[GKMessageInboxEntryInternal url]
  -[GKMessageInboxEntryInternal senderAlias]
  -[GKMessageInboxEntryInternal setSenderHandle:]
  -[GKMessageInboxEntryInternal .cxx_destruct]
  -[GKMessageInboxEntryInternal contactID]
  -[GKMessageInboxEntryInternal setUrl:]
  -[GKMessageInboxEntryInternal setContactID:]
  -[GKMessageInboxEntryInternal setContactName:]
  -[GKMessageInboxEntryInternal copyWithZone:]
  -[GKMessageInboxEntryInternal senderHandle]
  -[GKMessageInboxEntryInternal friendCode]
  -[GKMessageInboxEntryInternal setFriendCode:]
  -[GKMessageInboxEntryInternal senderDisplayName]
  -[GKMessageInboxEntryInternal setSenderAlias:]


GKThreadsafeDictionary : NSObject
 @property  NSMutableDictionary *dictionary

  // instance methods
  -[GKThreadsafeDictionary objectForKey:]
  -[GKThreadsafeDictionary removeAllObjects]
  -[GKThreadsafeDictionary setObject:forKey:]
  -[GKThreadsafeDictionary objectForKeyedSubscript:]
  -[GKThreadsafeDictionary .cxx_destruct]
  -[GKThreadsafeDictionary objectForKey:objectProducerBlock:]
  -[GKThreadsafeDictionary removeObjectForKey:]
  -[GKThreadsafeDictionary dictionary]
  -[GKThreadsafeDictionary removeObjectsForKeys:]
  -[GKThreadsafeDictionary initWithName:]
  -[GKThreadsafeDictionary allKeys]
  -[GKThreadsafeDictionary setObject:forKeyedSubscript:]
  -[GKThreadsafeDictionary dictionaryCopy]
  -[GKThreadsafeDictionary objectForKeyWillReplace:objectProducerBlock:]
  -[GKThreadsafeDictionary setDictionary:]
  -[GKThreadsafeDictionary writeToDictionary:]
  -[GKThreadsafeDictionary allObjects]
  -[GKThreadsafeDictionary readFromDictionary:]


GKCloudPlayer : GKBasePlayer <NSSecureCoding, NSCopying>
 @property  NSString *identifier
 @property  NSString *name

  // class methods
  +[GKCloudPlayer supportsSecureCoding]
  +[GKCloudPlayer getCurrentSignedInPlayerForContainer:completionHandler:]

  // instance methods
  -[GKCloudPlayer displayName]
  -[GKCloudPlayer name]
  -[GKCloudPlayer initWithCoder:]
  -[GKCloudPlayer .cxx_destruct]
  -[GKCloudPlayer setName:]
  -[GKCloudPlayer isEqual:]
  -[GKCloudPlayer identifier]
  -[GKCloudPlayer setIdentifier:]
  -[GKCloudPlayer copyWithZone:]
  -[GKCloudPlayer playerID]
  -[GKCloudPlayer encodeWithCoder:]


GKTurnBasedServiceInterface : GKServiceInterface
  // class methods
  +[GKTurnBasedServiceInterface interfaceProtocol]
  +[GKTurnBasedServiceInterface configureInterface:]


GKTurnBasedServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKTurnBasedServicePrivateInterface interfaceProtocol]


GKLeaderboardSummary : NSObject
 @property  GKLeaderboardSummaryInternal *internal
 @property  unsigned long scoreValue
 @property  unsigned long rank
 @property  unsigned long totalEntries
 @property  unsigned long friendRank
 @property  unsigned long totalFriendEntries

  // instance methods
  -[GKLeaderboardSummary internal]
  -[GKLeaderboardSummary .cxx_destruct]
  -[GKLeaderboardSummary forwardingTargetForSelector:]
  -[GKLeaderboardSummary initWithInternalRepresentation:]
  -[GKLeaderboardSummary setInternal:]


GKNearbyDevice : NSObject
 @property  NSString *deviceID
 @property  long long state
 @property  GKDiscovery *discovery
 @property  GKPlayer *player

  // class methods
  +[GKNearbyDevice nearbyDeviceWithID:discovery:]

  // instance methods
  -[GKNearbyDevice discovery]
  -[GKNearbyDevice setDiscovery:]
  -[GKNearbyDevice .cxx_destruct]
  -[GKNearbyDevice deviceID]
  -[GKNearbyDevice setState:]
  -[GKNearbyDevice setPlayer:]
  -[GKNearbyDevice player]
  -[GKNearbyDevice state]
  -[GKNearbyDevice setDeviceID:]
  -[GKNearbyDevice sendDictionary:withCompletionHandler:]


GKSavedGame : NSObject <NSCopying>
 @property  NSString *name
 @property  NSString *deviceName
 @property  NSDate *modificationDate
 @property  NSURL *fileURL

  // instance methods
  -[GKSavedGame setFileURL:]
  -[GKSavedGame modificationDate]
  -[GKSavedGame name]
  -[GKSavedGame deviceName]
  -[GKSavedGame fileURL]
  -[GKSavedGame .cxx_destruct]
  -[GKSavedGame setDeviceName:]
  -[GKSavedGame setName:]
  -[GKSavedGame loadDataWithCompletionHandler:]
  -[GKSavedGame setModificationDate:]
  -[GKSavedGame copyWithZone:]


GKApplicationWorkspace : NSObject
 @property  LSApplicationWorkspace *lsWorkspace

  // class methods
  +[GKApplicationWorkspace defaultWorkspace]

  // instance methods
  -[GKApplicationWorkspace applicationProxyForBundleID:]
  -[GKApplicationWorkspace openURL:]
  -[GKApplicationWorkspace .cxx_destruct]
  -[GKApplicationWorkspace setLsWorkspace:]
  -[GKApplicationWorkspace lsWorkspace]
  -[GKApplicationWorkspace applicationIsInstalled:]
  -[GKApplicationWorkspace gameDescriptorsWithInstalledBundleVersionsForBundleIDs:]
  -[GKApplicationWorkspace openICloudSettings]
  -[GKApplicationWorkspace openGameCenterSettings]
  -[GKApplicationWorkspace openSettings]
  -[GKApplicationWorkspace gameDescriptorsWithInstalledBundleVersionsForGameDescriptors:]
  -[GKApplicationWorkspace initWithWorkspace:]


GKApplicationProxy : NSObject
 @property  LSApplicationProxy *lsProxy
 @property  NSDictionary *metadata
 @property  NSBundle *bundle
 @property  NSString *bundleVersion
 @property  NSString *bundleShortVersion
 @property  NSString *bundleID
 @property  NSNumber *adamID
 @property  NSNumber *externalVersion
 @property  NSDate *purchaseDate
 @property  BOOL restricted
 @property  BOOL gameCenterEnabled
 @property  BOOL installed

  // class methods
  +[GKApplicationProxy metadataForBundleURL:]

  // instance methods
  -[GKApplicationProxy initWithBundleID:]
  -[GKApplicationProxy bundleVersion]
  -[GKApplicationProxy adamID]
  -[GKApplicationProxy isInstalled]
  -[GKApplicationProxy isRestricted]
  -[GKApplicationProxy bundleShortVersion]
  -[GKApplicationProxy bundle]
  -[GKApplicationProxy bundleID]
  -[GKApplicationProxy .cxx_destruct]
  -[GKApplicationProxy setLsProxy:]
  -[GKApplicationProxy isGameCenterEnabled]
  -[GKApplicationProxy purchaseDate]
  -[GKApplicationProxy externalVersion]
  -[GKApplicationProxy bundleURL]
  -[GKApplicationProxy metadata]
  -[GKApplicationProxy setMetadata:]
  -[GKApplicationProxy lsProxy]
  -[GKApplicationProxy initWithProxy:]


GKBulletinServiceInterface : GKServiceInterface
  // class methods
  +[GKBulletinServiceInterface interfaceProtocol]


GKBulletinServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKBulletinServicePrivateInterface interfaceProtocol]


GKUtilityServiceInterface : GKServiceInterface
  // class methods
  +[GKUtilityServiceInterface interfaceProtocol]
  +[GKUtilityServiceInterface configureInterface:]


GKUtilityServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKUtilityServicePrivateInterface interfaceProtocol]
  +[GKUtilityServicePrivateInterface configureInterface:]


GKPlayerCredential : GKInternalRepresentation
 @property  NSString *accountName
 @property  NSString *authenticationToken
 @property  NSString *altDSID
 @property  NSString *DSID
 @property  NSString *rawPassword
 @property  GKPlayerInternal *playerInternal
 @property  long long environment
 @property  unsigned int scope
 @property  NSString *scopeAsString
 @property  NSDate *scopeModificationDate

  // class methods
  +[GKPlayerCredential secureCodedPropertyKeys]

  // instance methods
  -[GKPlayerCredential setScope:]
  -[GKPlayerCredential setAltDSID:]
  -[GKPlayerCredential setAccountName:]
  -[GKPlayerCredential authenticationToken]
  -[GKPlayerCredential setRawPassword:]
  -[GKPlayerCredential setAuthenticationToken:]
  -[GKPlayerCredential setDSID:]
  -[GKPlayerCredential rawPassword]
  -[GKPlayerCredential DSID]
  -[GKPlayerCredential altDSID]
  -[GKPlayerCredential .cxx_destruct]
  -[GKPlayerCredential accountName]
  -[GKPlayerCredential setEnvironment:]
  -[GKPlayerCredential setPlayerInternal:]
  -[GKPlayerCredential scope]
  -[GKPlayerCredential playerInternal]
  -[GKPlayerCredential isEqual:]
  -[GKPlayerCredential scopeModificationDate]
  -[GKPlayerCredential scopeAsString]
  -[GKPlayerCredential setScopeModificationDate:]
  -[GKPlayerCredential environment]


GKGameServiceInterface : GKServiceInterface
  // class methods
  +[GKGameServiceInterface interfaceProtocol]
  +[GKGameServiceInterface configureInterface:]


GKGameServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKGameServicePrivateInterface interfaceProtocol]
  +[GKGameServicePrivateInterface configureInterface:]


GKReporter : NSObject
 @property  AMSMetrics *metrics
 @property  NSNumber *metricsThrottlePercentage
 @property  double randomMetricsCollection
 @property  NSDate *lastBagCheck
 @property  NSTimer *flushTimer
 @property  double authenticateResponseTimestamp
 @property  double inviteeUILaunchTimestamp
 @property  double connectingDevicesTimestamp
 @property  double programaticInviteTimestamp
 @property  double appLaunchTimestamp
 @property  double totalInviteReceivedTimestamp
 @property  double messageInviteProcessingTimestamp
 @property  double currentRealtimeMatchPersistenceTimestamp

  // class methods
  +[GKReporter gameCenterBag]
  +[GKReporter reporter]
  +[GKReporter appendAMSPropertiesForEventType:]
  +[GKReporter shouldCollectAMSMetricForDomain:event:]

  // instance methods
  -[GKReporter reportAuthenticateResponseDuration]
  -[GKReporter inviteeUILaunchTimestamp]
  -[GKReporter reportEvent:type:friendsPlayedThisGame:]
  -[GKReporter recordAppLaunchAndTotalTimestamp]
  -[GKReporter currentRealtimeMatchPersistenceTimestamp]
  -[GKReporter _getThrottlePercentage:]
  -[GKReporter recordMessageInviteProcessingTimestamp]
  -[GKReporter recordCurrentRealtimeMatchPersistenceTimestamp]
  -[GKReporter appLaunchTimestamp]
  -[GKReporter reportEvent:type:]
  -[GKReporter reportOnboardingEventForType:withStartTimestamp:]
  -[GKReporter recordProgramaticInviteTimestamp]
  -[GKReporter .cxx_destruct]
  -[GKReporter connectingDevicesTimestamp]
  -[GKReporter reportEvent:type:startTime:]
  -[GKReporter reportEvent:type:bundleID:]
  -[GKReporter programaticInviteTimestamp]
  -[GKReporter setProgramaticInviteTimestamp:]
  -[GKReporter reportEvent:type:payload:]
  -[GKReporter reportAMSMetricsForTask:session:error:]
  -[GKReporter reportTournamentAnalyticsWithDomain:type:tournamentType:replayCount:friendCount:tournamentID:bundleID:inviteeCount:]
  -[GKReporter reportEvent:reportable:]
  -[GKReporter reportEvent:type:inboxFriendRequestCount:]
  -[GKReporter setAuthenticateResponseTimestamp:]
  -[GKReporter setInviteeUILaunchTimestamp:]
  -[GKReporter reportCurrentRealtimeMatchPersistenceDuration]
  -[GKReporter reportProgramaticInviteDuration]
  -[GKReporter isTimeSpanValid:maxDuration:]
  -[GKReporter reportMessageInviteProcessingDuration]
  -[GKReporter setTotalInviteReceivedTimestamp:]
  -[GKReporter lastBagCheck]
  -[GKReporter reportInviteeUILaunchDuration]
  -[GKReporter setMetrics:]
  -[GKReporter flushTimer]
  -[GKReporter setAppLaunchTimestamp:]
  -[GKReporter recordConnectingDevicesTimestamp]
  -[GKReporter reportEvent:payload:]
  -[GKReporter setConnectingDevicesTimestamp:]
  -[GKReporter setCurrentRealtimeMatchPersistenceTimestamp:]
  -[GKReporter reportEvent:type:scoreRank:]
  -[GKReporter recordInviteeUILaunchTimestamp]
  -[GKReporter reportAMSMetricEvent:]
  -[GKReporter authenticateResponseTimestamp]
  -[GKReporter metrics]
  -[GKReporter metricsThrottlePercentage]
  -[GKReporter reportPlayerAuthenticationFailure:]
  -[GKReporter setMessageInviteProcessingTimestamp:]
  -[GKReporter reportScreenTimeEventForType:withStartTimestamp:]
  -[GKReporter setRandomMetricsCollection:]
  -[GKReporter reportConnectingDevicesDuration]
  -[GKReporter reportTotalInviteReceivedDuration]
  -[GKReporter reportDurationForEvent:eventType:withStartTimestamp:]
  -[GKReporter spinupAMSMetricsFlusher]
  -[GKReporter recordAuthenticateResponseTimestamp]
  -[GKReporter totalInviteReceivedTimestamp]
  -[GKReporter reportAMSMetricDomain:properties:]
  -[GKReporter randomMetricsCollection]
  -[GKReporter messageInviteProcessingTimestamp]
  -[GKReporter setLastBagCheck:]
  -[GKReporter setMetricsThrottlePercentage:]
  -[GKReporter reportEvent:type:adamID:]
  -[GKReporter reportEvent:type:count:]
  -[GKReporter reportEvent:target:keyPath:]
  -[GKReporter reportAppLaunchDuration]
  -[GKReporter setFlushTimer:]


GKCachePair : NSObject
 @property  id value
 @property  id key

  // instance methods
  -[GKCachePair setKey:]
  -[GKCachePair setValue:]
  -[GKCachePair value]
  -[GKCachePair key]
  -[GKCachePair dealloc]


GKThreadsafeCache : NSObject <GKCache>
 @property  NSMutableDictionary *dictionary
 @property  GKLinkedList *cacheList
 @property  NSMutableDictionary *missingEntryQueues
 @property  unsigned long maxCount
 @property  unsigned long count
 @property  NSObject<OS_dispatch_queue> *syncQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKThreadsafeCache maxCount]
  -[GKThreadsafeCache objectForKey:]
  -[GKThreadsafeCache removeAllObjects]
  -[GKThreadsafeCache setSyncQueue:]
  -[GKThreadsafeCache setObject:forKey:]
  -[GKThreadsafeCache objectForKeyedSubscript:]
  -[GKThreadsafeCache syncQueue]
  -[GKThreadsafeCache setMaxCount:]
  -[GKThreadsafeCache count]
  -[GKThreadsafeCache removeObjectForKey:]
  -[GKThreadsafeCache dictionary]
  -[GKThreadsafeCache setObject:forKeyedSubscript:]
  -[GKThreadsafeCache setDictionary:]
  -[GKThreadsafeCache dealloc]
  -[GKThreadsafeCache setCount:]
  -[GKThreadsafeCache initWithName:maxCount:]
  -[GKThreadsafeCache objectForKey:withMissingHandler:]
  -[GKThreadsafeCache internalObjectForKey:]
  -[GKThreadsafeCache internalSetObject:forKey:]
  -[GKThreadsafeCache missingEntryQueues]
  -[GKThreadsafeCache setMissingEntryQueues:]
  -[GKThreadsafeCache cacheList]
  -[GKThreadsafeCache setCacheList:]


GKCache : NSObject <GKCache>
 @property  NSMutableDictionary *dictionary
 @property  GKLinkedList *cacheList
 @property  unsigned long maxCount
 @property  unsigned long count
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[GKCache maxCount]
  -[GKCache objectForKey:]
  -[GKCache removeAllObjects]
  -[GKCache setObject:forKey:]
  -[GKCache objectForKeyedSubscript:]
  -[GKCache setMaxCount:]
  -[GKCache count]
  -[GKCache removeObjectForKey:]
  -[GKCache dictionary]
  -[GKCache setObject:forKeyedSubscript:]
  -[GKCache initWithMaxCount:]
  -[GKCache setDictionary:]
  -[GKCache dealloc]
  -[GKCache setCount:]
  -[GKCache cacheList]
  -[GKCache setCacheList:]


GKGameStatServiceInterface : GKServiceInterface
  // class methods
  +[GKGameStatServiceInterface interfaceProtocol]
  +[GKGameStatServiceInterface configureInterface:]


GKGameStatServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKGameStatServicePrivateInterface interfaceProtocol]
  +[GKGameStatServicePrivateInterface configureInterface:]


GKChallengeServiceInterface : GKServiceInterface
  // class methods
  +[GKChallengeServiceInterface interfaceProtocol]
  +[GKChallengeServiceInterface configureInterface:]


GKChallengeServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKChallengeServicePrivateInterface interfaceProtocol]


GKListNode : NSObject
 @property  GKListNode *nextNode
 @property  GKListNode *prevNode
 @property  id value

  // instance methods
  -[GKListNode .cxx_destruct]
  -[GKListNode initWithValue:]
  -[GKListNode setValue:]
  -[GKListNode setNextNode:]
  -[GKListNode value]
  -[GKListNode nextNode]
  -[GKListNode prevNode]
  -[GKListNode setPrevNode:]


GKLinkedList : NSObject
 @property  GKListNode *headNode
 @property  GKListNode *tailNode

  // instance methods
  -[GKLinkedList insertNode:before:]
  -[GKLinkedList .cxx_destruct]
  -[GKLinkedList removeAllNodes]
  -[GKLinkedList init]
  -[GKLinkedList removeNode:]
  -[GKLinkedList dealloc]
  -[GKLinkedList tailNode]
  -[GKLinkedList headNode]
  -[GKLinkedList hasCycle]
  -[GKLinkedList nodeForInsertionWithValue:]
  -[GKLinkedList insertNodeAtBeginning:]
  -[GKLinkedList insertNodeAtBeginningWithValue:forKey:]
  -[GKLinkedList setHeadNode:]
  -[GKLinkedList setTailNode:]
  -[GKLinkedList isConsistent]


GKFriendCodeDetailInternal : GKInternalRepresentation
 @property  NSString *creatorPlayerID
 @property  GKPlayerInternal *creatorPlayer
 @property  NSString *friendCode
 @property  long long friendCodeState
 @property  NSArray *alreadyUsedPlayerIDs
 @property  long long friendCodeUsageCount

  // class methods
  +[GKFriendCodeDetailInternal secureCodedPropertyKeys]

  // instance methods
  -[GKFriendCodeDetailInternal .cxx_destruct]
  -[GKFriendCodeDetailInternal copyWithZone:]
  -[GKFriendCodeDetailInternal friendCode]
  -[GKFriendCodeDetailInternal setFriendCode:]
  -[GKFriendCodeDetailInternal creatorPlayerID]
  -[GKFriendCodeDetailInternal friendCodeUsageCount]
  -[GKFriendCodeDetailInternal friendCodeState]
  -[GKFriendCodeDetailInternal alreadyUsedPlayerIDs]
  -[GKFriendCodeDetailInternal setCreatorPlayerID:]
  -[GKFriendCodeDetailInternal setFriendCodeState:]
  -[GKFriendCodeDetailInternal setFriendCodeUsageCount:]
  -[GKFriendCodeDetailInternal setAlreadyUsedPlayerIDs:]
  -[GKFriendCodeDetailInternal initWithFriendCodeDetail:]
  -[GKFriendCodeDetailInternal creatorPlayer]
  -[GKFriendCodeDetailInternal setCreatorPlayer:]


GKLeaderboardSet : NSObject <NSCoding, NSSecureCoding>
 @property  NSString *title
 @property  NSArray *leaderboardIdentifiers
 @property  GKLeaderboardSetInternal *internal
 @property  NSString *groupIdentifier
 @property  NSString *identifier

  // class methods
  +[GKLeaderboardSet instanceMethodSignatureForSelector:]
  +[GKLeaderboardSet supportsSecureCoding]
  +[GKLeaderboardSet instancesRespondToSelector:]
  +[GKLeaderboardSet loadLeaderboardSetsForGame:withCompletionHandler:]
  +[GKLeaderboardSet loadLeaderboardSetsWithCompletionHandler:]

  // instance methods
  -[GKLeaderboardSet internal]
  -[GKLeaderboardSet setValue:forUndefinedKey:]
  -[GKLeaderboardSet valueForUndefinedKey:]
  -[GKLeaderboardSet initWithCoder:]
  -[GKLeaderboardSet methodSignatureForSelector:]
  -[GKLeaderboardSet .cxx_destruct]
  -[GKLeaderboardSet forwardingTargetForSelector:]
  -[GKLeaderboardSet init]
  -[GKLeaderboardSet respondsToSelector:]
  -[GKLeaderboardSet isEqual:]
  -[GKLeaderboardSet initWithInternalRepresentation:]
  -[GKLeaderboardSet setInternal:]
  -[GKLeaderboardSet encodeWithCoder:]
  -[GKLeaderboardSet loadLeaderboardsForGame:withCompletionHandler:]
  -[GKLeaderboardSet loadLeaderboardsWithCompletionHandler:]
  -[GKLeaderboardSet loadLeaderboardsForGame:forPlayer:withCompletionHandler:]
  -[GKLeaderboardSet loadLeaderboardsWithHandler:]


GKJoinGroupNotifier : NSObject
 @property  GKJoinGroup *group
 @property  NSLock *lock
 @property  NSMutableArray *updateQueue
 @property  NSError *error

  // instance methods
  -[GKJoinGroupNotifier setGroup:]
  -[GKJoinGroupNotifier setResult:error:]
  -[GKJoinGroupNotifier .cxx_destruct]
  -[GKJoinGroupNotifier retain]
  -[GKJoinGroupNotifier updateQueue]
  -[GKJoinGroupNotifier init]
  -[GKJoinGroupNotifier setUpdateQueue:]
  -[GKJoinGroupNotifier release]
  -[GKJoinGroupNotifier group]
  -[GKJoinGroupNotifier setLock:]
  -[GKJoinGroupNotifier dealloc]
  -[GKJoinGroupNotifier lock]
  -[GKJoinGroupNotifier setError:]
  -[GKJoinGroupNotifier error]


GKJoinGroup : NSObject
 @property  NSLock *lock
 @property  NSMutableArray *leftNotifiers
 @property  NSMutableArray *rightNotifiers
 @property  NSMutableArray *leftResults
 @property  NSMutableArray *rightResults
 @property  NSError *error
 @property  NSString *name

  // class methods
  +[GKJoinGroup joinGroup]
  +[GKJoinGroup joinGroupWithName:]
  +[GKJoinGroup joinGroupForTargetQueue:]
  +[GKJoinGroup joinGroupWithName:taregetQueue:]

  // instance methods
  -[GKJoinGroup wait]
  -[GKJoinGroup name]
  -[GKJoinGroup join:]
  -[GKJoinGroup setName:]
  -[GKJoinGroup _join:]
  -[GKJoinGroup setLock:]
  -[GKJoinGroup dealloc]
  -[GKJoinGroup lock]
  -[GKJoinGroup setError:]
  -[GKJoinGroup error]
  -[GKJoinGroup applyUpdates]
  -[GKJoinGroup initWithName:targetQueue:]
  -[GKJoinGroup leftNotifiers]
  -[GKJoinGroup rightNotifiers]
  -[GKJoinGroup performLeftOnQueue:block:]
  -[GKJoinGroup performRightOnQueue:block:]
  -[GKJoinGroup aggregateJoin:]
  -[GKJoinGroup aggregateJoinLeft:]
  -[GKJoinGroup aggregateJoinRight:]
  -[GKJoinGroup setLeftResults:]
  -[GKJoinGroup setRightResults:]
  -[GKJoinGroup performLeft:]
  -[GKJoinGroup performRight:]
  -[GKJoinGroup joinLeft:]
  -[GKJoinGroup joinRight:]
  -[GKJoinGroup setLeftNotifiers:]
  -[GKJoinGroup setRightNotifiers:]
  -[GKJoinGroup leftResults]
  -[GKJoinGroup rightResults]


GKMultiplayerServiceInterface : GKServiceInterface
  // class methods
  +[GKMultiplayerServiceInterface interfaceProtocol]
  +[GKMultiplayerServiceInterface configureInterface:]


GKMultiplayerServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKMultiplayerServicePrivateInterface interfaceProtocol]
  +[GKMultiplayerServicePrivateInterface configureInterface:]


GKMatchResponse : GKInternalRepresentation
 @property  long long state
 @property  NSString *rid
 @property  NSArray *matches
 @property  NSData *sessionToken
 @property  NSArray *relayPushes
 @property  NSData *cdxTicket
 @property  GKDispatchGroup *matchingGroup
 @property  GKMatchRequestInternal *matchRequest
 @property  NSDictionary *serverRequest
 @property  int sequence

  // class methods
  +[GKMatchResponse secureCodedPropertyKeys]

  // instance methods
  -[GKMatchResponse sequence]
  -[GKMatchResponse rid]
  -[GKMatchResponse isFinished]
  -[GKMatchResponse .cxx_destruct]
  -[GKMatchResponse setMatches:]
  -[GKMatchResponse isCancelled]
  -[GKMatchResponse setState:]
  -[GKMatchResponse matches]
  -[GKMatchResponse sessionToken]
  -[GKMatchResponse setRid:]
  -[GKMatchResponse state]
  -[GKMatchResponse transitionToState:]
  -[GKMatchResponse setSessionToken:]
  -[GKMatchResponse matchRequest]
  -[GKMatchResponse setMatchRequest:]
  -[GKMatchResponse cdxTicket]
  -[GKMatchResponse relayPushes]
  -[GKMatchResponse _incrementSequence]
  -[GKMatchResponse isTimeout]
  -[GKMatchResponse isNetworkError]
  -[GKMatchResponse setRelayPushes:]
  -[GKMatchResponse setCdxTicket:]
  -[GKMatchResponse serverRequest]
  -[GKMatchResponse setServerRequest:]
  -[GKMatchResponse matchingGroup]
  -[GKMatchResponse setMatchingGroup:]


_GKStateMachine : NSObject
 @property  NSString *currentState
 @property  NSDictionary *validTransitions
 @property  <_GKStateMachineDelegate> *delegate
 @property  BOOL shouldLogStateTransitions

  // instance methods
  -[_GKStateMachine _setCurrentState:]
  -[_GKStateMachine .cxx_destruct]
  -[_GKStateMachine setDelegate:]
  -[_GKStateMachine init]
  -[_GKStateMachine applyState:]
  -[_GKStateMachine missingTransitionFromState:toState:]
  -[_GKStateMachine _validateTransitionFromState:toState:]
  -[_GKStateMachine currentState]
  -[_GKStateMachine delegate]
  -[_GKStateMachine validTransitions]
  -[_GKStateMachine shouldLogStateTransitions]
  -[_GKStateMachine setShouldLogStateTransitions:]
  -[_GKStateMachine setValidTransitions:]
  -[_GKStateMachine setCurrentState:]
  -[_GKStateMachine _performTransitionFromState:toState:]


GKGameSession : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *title
 @property  GKCloudPlayer *owner
 @property  NSArray *players
 @property  NSDate *lastModifiedDate
 @property  GKCloudPlayer *lastModifiedPlayer
 @property  NSString *serverChangeTag
 @property  long long maxNumberOfConnectedPlayers
 @property  NSMutableDictionary *playerStates
 @property  NSString *identifier
 @property  NSString *title
 @property  GKCloudPlayer *owner
 @property  NSArray *players
 @property  NSDate *lastModifiedDate
 @property  GKCloudPlayer *lastModifiedPlayer
 @property  NSString *serverChangeTag
 @property  long long maxNumberOfConnectedPlayers
 @property  NSMutableDictionary *playerStates
 @property  NSArray *badgedPlayers

  // class methods
  +[GKGameSession loadSessionsInContainer:completionHandler:]
  +[GKGameSession supportsSecureCoding]
  +[GKGameSession addEventListener:]
  +[GKGameSession getSessionsForZone:completionHandler:]
  +[GKGameSession getZonesWithCompletionHandler:]
  +[GKGameSession postSession:player:didSaveData:]
  +[GKGameSession gk_sessionEventListeners]
  +[GKGameSession postSession:player:didChangeConnectionState:]
  +[GKGameSession postSession:didReceiveData:fromPlayer:]
  +[GKGameSession createSessionInContainer:withTitle:maxConnectedPlayers:completionHandler:]
  +[GKGameSession postSession:didReceiveMessage:withData:fromPlayer:]
  +[GKGameSession loadSessionWithIdentifier:completionHandler:]
  +[GKGameSession removeSessionWithIdentifier:completionHandler:]
  +[GKGameSession postSession:didAddPlayer:]
  +[GKGameSession postSession:didRemovePlayer:]
  +[GKGameSession removeEventListener:]

  // instance methods
  -[GKGameSession initWithCoder:]
  -[GKGameSession setLastModifiedDate:]
  -[GKGameSession setTitle:]
  -[GKGameSession .cxx_destruct]
  -[GKGameSession setOwner:]
  -[GKGameSession owner]
  -[GKGameSession updateWithSession:]
  -[GKGameSession loadDataWithCompletionHandler:]
  -[GKGameSession players]
  -[GKGameSession identifier]
  -[GKGameSession title]
  -[GKGameSession setIdentifier:]
  -[GKGameSession encodeWithCoder:]
  -[GKGameSession lastModifiedDate]
  -[GKGameSession _gkDescriptionWithChildren:]
  -[GKGameSession playerStates]
  -[GKGameSession setPlayerStates:]
  -[GKGameSession setPlayers:]
  -[GKGameSession getShareURLWithCompletionHandler:]
  -[GKGameSession saveData:completionHandler:]
  -[GKGameSession descriptionSubstitutionMap]
  -[GKGameSession setLastModifiedPlayer:]
  -[GKGameSession setServerChangeTag:]
  -[GKGameSession setMaxNumberOfConnectedPlayers:]
  -[GKGameSession lastModifiedPlayer]
  -[GKGameSession serverChangeTag]
  -[GKGameSession maxNumberOfConnectedPlayers]
  -[GKGameSession setConnectionState:completionHandler:]
  -[GKGameSession playersWithConnectionState:]
  -[GKGameSession sendData:withTransportType:completionHandler:]
  -[GKGameSession sendMessageWithLocalizedFormatKey:arguments:data:toPlayers:badgePlayers:completionHandler:]
  -[GKGameSession clearBadgeForPlayers:completionHandler:]
  -[GKGameSession badgedPlayers]


GKObserverTrampoline : NSObject
 @property  id token

  // instance methods
  -[GKObserverTrampoline startObserving]
  -[GKObserverTrampoline .cxx_destruct]
  -[GKObserverTrampoline token]
  -[GKObserverTrampoline dealloc]
  -[GKObserverTrampoline observeValueForKeyPath:ofObject:change:context:]
  -[GKObserverTrampoline cancelObservation]
  -[GKObserverTrampoline initObservingObject:keyPath:options:block:]


GKEventEmitter : NSObject
 @property  NSHashTable *listeners
 @property  NSMutableArray *supportedProtocols
 @property  BOOL shouldQueue
 @property  NSMutableArray *queuedEvents

  // class methods
  +[GKEventEmitter eventEmitterForProtocols:shouldQueue:]
  +[GKEventEmitter eventEmitterForProtocols:]

  // instance methods
  -[GKEventEmitter registerListener:]
  -[GKEventEmitter unregisterAllListeners]
  -[GKEventEmitter methodSignatureForSelector:]
  -[GKEventEmitter setListeners:]
  -[GKEventEmitter .cxx_destruct]
  -[GKEventEmitter supportedProtocols]
  -[GKEventEmitter invocationForProtocol:selector:]
  -[GKEventEmitter listenerRegisteredForSelector:]
  -[GKEventEmitter setQueuedEvents:]
  -[GKEventEmitter listeners]
  -[GKEventEmitter initWithSupportedProtocols:shouldQueue:]
  -[GKEventEmitter shouldQueue]
  -[GKEventEmitter setShouldQueue:]
  -[GKEventEmitter dispatchQueuedEventsToListener:]
  -[GKEventEmitter methodSignatureForProtocol:selector:]
  -[GKEventEmitter forwardInvocation:]
  -[GKEventEmitter setSupportedProtocols:]
  -[GKEventEmitter queuedEvents]
  -[GKEventEmitter unregisterListener:]


GKGameInternal : GKGameDescriptor
 @property  unsigned int flags
 @property  NSString *name
 @property  NSDictionary *icons
 @property  BOOL prerendered
 @property  BOOL supportsLeaderboards
 @property  BOOL hasAggregateLeaderboard
 @property  unsigned short numberOfLeaderboards
 @property  NSString *defaultLeaderboardIdentifier
 @property  BOOL supportsLeaderboardSets
 @property  unsigned short numberOfLeaderboardSets
 @property  BOOL supportsAchievements
 @property  unsigned short numberOfAchievements
 @property  unsigned short maxAchievementPoints
 @property  BOOL supportsMultiplayer
 @property  BOOL supportsTurnBasedMultiplayer
 @property  NSSet *compatiblePlatforms
 @property  BOOL canBeIndexed
 @property  BOOL valid
 @property  GKStoreItemInternal *storeItem
 @property  GKGameDescriptor *gameDescriptor
 @property  BOOL isArcadeGame
 @property  BOOL supportsChallenges

  // class methods
  +[GKGameInternal secureCodedPropertyKeys]

  // instance methods
  -[GKGameInternal setValid:]
  -[GKGameInternal supportsMultiplayer]
  -[GKGameInternal setFlags:]
  -[GKGameInternal name]
  -[GKGameInternal isValid]
  -[GKGameInternal icons]
  -[GKGameInternal .cxx_destruct]
  -[GKGameInternal setName:]
  -[GKGameInternal isEqual:]
  -[GKGameInternal setIcons:]
  -[GKGameInternal flags]
  -[GKGameInternal storeItem]
  -[GKGameInternal numberOfCategories]
  -[GKGameInternal isPrerendered]
  -[GKGameInternal defaultCategory]
  -[GKGameInternal setSupportsMultiplayer:]
  -[GKGameInternal maxAchievementPoints]
  -[GKGameInternal supportsLeaderboards]
  -[GKGameInternal supportsAchievements]
  -[GKGameInternal setStoreItem:]
  -[GKGameInternal gameDescriptor]
  -[GKGameInternal supportsChallenges]
  -[GKGameInternal supportsLeaderboardSets]
  -[GKGameInternal compatiblePlatforms]
  -[GKGameInternal numberOfAchievements]
  -[GKGameInternal isArcadeGame]
  -[GKGameInternal setCompatiblePlatforms:]
  -[GKGameInternal serverRepresentation]
  -[GKGameInternal hasAggregateLeaderboard]
  -[GKGameInternal numberOfLeaderboardSets]
  -[GKGameInternal supportsTurnBasedMultiplayer]
  -[GKGameInternal numberOfLeaderboards]
  -[GKGameInternal defaultLeaderboardIdentifier]
  -[GKGameInternal setSupportsChallenges:]
  -[GKGameInternal setNumberOfAchievements:]
  -[GKGameInternal setPrerendered:]
  -[GKGameInternal setSupportsLeaderboards:]
  -[GKGameInternal setSupportsLeaderboardSets:]
  -[GKGameInternal setHasAggregateLeaderboard:]
  -[GKGameInternal setSupportsAchievements:]
  -[GKGameInternal canBeIndexed]
  -[GKGameInternal setSupportsTurnBasedMultiplayer:]
  -[GKGameInternal setIsArcadeGame:]
  -[GKGameInternal setDefaultLeaderboardIdentifier:]
  -[GKGameInternal setNumberOfLeaderboards:]
  -[GKGameInternal setNumberOfLeaderboardSets:]
  -[GKGameInternal setMaxAchievementPoints:]


GKStoreItemInternal : GKInternalRepresentation
 @property  NSNumber *adamID
 @property  NSString *artistName
 @property  NSString *priceDisplay
 @property  NSURL *viewItemURL
 @property  NSURL *shortViewItemURL
 @property  NSURL *tellAFriendMessageContentsUrl
 @property  NSDate *expirationDate
 @property  unsigned int numberOfUserRatings
 @property  float averageUserRating
 @property  BOOL owned

  // class methods
  +[GKStoreItemInternal secureCodedPropertyKeys]

  // instance methods
  -[GKStoreItemInternal adamID]
  -[GKStoreItemInternal artistName]
  -[GKStoreItemInternal owned]
  -[GKStoreItemInternal isValid]
  -[GKStoreItemInternal .cxx_destruct]
  -[GKStoreItemInternal setPriceDisplay:]
  -[GKStoreItemInternal setExpirationDate:]
  -[GKStoreItemInternal numberOfUserRatings]
  -[GKStoreItemInternal isEqual:]
  -[GKStoreItemInternal expirationDate]
  -[GKStoreItemInternal setAdamID:]
  -[GKStoreItemInternal priceDisplay]
  -[GKStoreItemInternal averageUserRating]
  -[GKStoreItemInternal viewItemURL]
  -[GKStoreItemInternal setArtistName:]
  -[GKStoreItemInternal setViewItemURL:]
  -[GKStoreItemInternal shortViewItemURL]
  -[GKStoreItemInternal setShortViewItemURL:]
  -[GKStoreItemInternal storeItemURLForURL:gamePlatform:extraQueryParams:]
  -[GKStoreItemInternal storeItemURLForGamePlatform:withContext:withHandler:]
  -[GKStoreItemInternal setAverageUserRating:]
  -[GKStoreItemInternal tellAFriendMessageContentsUrl]
  -[GKStoreItemInternal setTellAFriendMessageContentsUrl:]
  -[GKStoreItemInternal setNumberOfUserRatings:]
  -[GKStoreItemInternal setOwned:]


GKGameRecordInternal : GKGameInternal
 @property  GKScoreInternal *score
 @property  NSDate *lastPlayedDate
 @property  NSDate *purchaseDate
 @property  unsigned short achievements
 @property  short achievementPoints
 @property  unsigned short friendRank
 @property  unsigned short maxFriendRank
 @property  unsigned int rank
 @property  unsigned int maxRank

  // class methods
  +[GKGameRecordInternal gameRecordForGame:]
  +[GKGameRecordInternal secureCodedPropertyKeys]

  // instance methods
  -[GKGameRecordInternal setScore:]
  -[GKGameRecordInternal rank]
  -[GKGameRecordInternal .cxx_destruct]
  -[GKGameRecordInternal setRank:]
  -[GKGameRecordInternal lastPlayedDate]
  -[GKGameRecordInternal setLastPlayedDate:]
  -[GKGameRecordInternal purchaseDate]
  -[GKGameRecordInternal score]
  -[GKGameRecordInternal maxRank]
  -[GKGameRecordInternal setPurchaseDate:]
  -[GKGameRecordInternal friendRank]
  -[GKGameRecordInternal setAchievements:]
  -[GKGameRecordInternal achievements]
  -[GKGameRecordInternal achievementPoints]
  -[GKGameRecordInternal maxFriendRank]
  -[GKGameRecordInternal setFriendRank:]
  -[GKGameRecordInternal updateWithGame:]
  -[GKGameRecordInternal setAchievementPoints:]
  -[GKGameRecordInternal setMaxFriendRank:]
  -[GKGameRecordInternal setMaxRank:]


GKGameRecommendationInternal : GKGameInternal
 @property  NSString *reason
 @property  NSString *engineID

  // class methods
  +[GKGameRecommendationInternal secureCodedPropertyKeys]

  // instance methods
  -[GKGameRecommendationInternal .cxx_destruct]
  -[GKGameRecommendationInternal reason]
  -[GKGameRecommendationInternal setReason:]
  -[GKGameRecommendationInternal engineID]
  -[GKGameRecommendationInternal initWithGame:]
  -[GKGameRecommendationInternal serverRepresentation]
  -[GKGameRecommendationInternal setEngineID:]


GKRecentMatchInternal : GKInternalRepresentation
 @property  GKPlayerInternal *player
 @property  GKGameRecordInternal *game
 @property  NSDate *date

  // class methods
  +[GKRecentMatchInternal secureCodedPropertyKeys]

  // instance methods
  -[GKRecentMatchInternal game]
  -[GKRecentMatchInternal .cxx_destruct]
  -[GKRecentMatchInternal setPlayer:]
  -[GKRecentMatchInternal isEqual:]
  -[GKRecentMatchInternal player]
  -[GKRecentMatchInternal setDate:]
  -[GKRecentMatchInternal setGame:]
  -[GKRecentMatchInternal date]


GKGameHighlightInternal : GKInternalRepresentation
 @property  NSNumber *adamID
 @property  ASCArtwork *artwork
 @property  NSString *title
 @property  NSString *subtitle

  // class methods
  +[GKGameHighlightInternal secureCodedPropertyKeys]

  // instance methods
  -[GKGameHighlightInternal adamID]
  -[GKGameHighlightInternal artwork]
  -[GKGameHighlightInternal setArtwork:]
  -[GKGameHighlightInternal setTitle:]
  -[GKGameHighlightInternal .cxx_destruct]
  -[GKGameHighlightInternal setSubtitle:]
  -[GKGameHighlightInternal subtitle]
  -[GKGameHighlightInternal title]
  -[GKGameHighlightInternal setAdamID:]


GKPlayerInternal : GKInternalRepresentation
 @property  unsigned int flags
 @property  NSString *playerID
 @property  NSString *teamPlayerID
 @property  NSString *gamePlayerID
 @property  NSString *alias
 @property  NSNumber *avatarType
 @property  NSArray *monogramComponents
 @property  NSDictionary *photos
 @property  BOOL isFriend
 @property  BOOL isLocalPlayer
 @property  BOOL isAnonymousPlayer
 @property  BOOL isUnknownPlayer
 @property  BOOL isAutomatchPlayer
 @property  BOOL isLoaded
 @property  BOOL isGuestPlayer
 @property  BOOL isInContacts
 @property  unsigned short numberOfFriendsInCommon
 @property  unsigned short numberOfGamesInCommon
 @property  NSString *firstName
 @property  NSString *lastName
 @property  NSNumber *friendLevel
 @property  NSNumber *friendBiDirectional
 @property  NSNumber *friendPlayedWith
 @property  NSNumber *friendPlayedNearby
 @property  NSNumber *acceptedGameInviteFromThisFriend
 @property  NSNumber *initiatedGameInviteToThisFriend
 @property  NSNumber *automatchedTogether
 @property  NSString *compositeName
 @property  NSString *status
 @property  NSDate *lastPlayedDate
 @property  GKGameInternal *lastPlayedGame
 @property  NSString *guestIdentifier
 @property  NSString *messagesID
 @property  unsigned short numberOfFriends
 @property  unsigned short numberOfGames
 @property  unsigned int numberOfAchievements
 @property  unsigned int numberOfAchievementPoints
 @property  NSString *accountName
 @property  NSArray *emailAddresses
 @property  NSArray *friends
 @property  BOOL purpleBuddyAccount
 @property  BOOL underage
 @property  BOOL findable
 @property  BOOL defaultNickname
 @property  BOOL defaultPrivacyVisibility
 @property  BOOL photoPending
 @property  unsigned short numberOfRequests
 @property  unsigned short numberOfTurns
 @property  unsigned short numberOfChallenges
 @property  NSString *facebookUserID
 @property  NSNumber *iCloudUserID
 @property  NSString *lastPersonalizationVersionDisplayed
 @property  unsigned long lastPrivacyNoticeVersionDisplayed
 @property  NSString *lastProfilePrivacyVersionDisplayed
 @property  int achievementsVisibility
 @property  int friendsVisibility
 @property  int gamesPlayedVisibility
 @property  int globalFriendListAccess
 @property  GKMessageInboxEntryInternal *inboxEntry

  // class methods
  +[GKPlayerInternal supportsSecureCoding]
  +[GKPlayerInternal secureCodedPropertyKeys]
  +[GKPlayerInternal displayNameWithOptions:alias:composite:]
  +[GKPlayerInternal compositeNameForFirstName:lastName:]
  +[GKPlayerInternal classForFamiliarity:]

  // instance methods
  -[GKPlayerInternal setEmailAddresses:]
  -[GKPlayerInternal isFriend]
  -[GKPlayerInternal firstName]
  -[GKPlayerInternal friends]
  -[GKPlayerInternal facebookUserID]
  -[GKPlayerInternal setAccountName:]
  -[GKPlayerInternal setFlags:]
  -[GKPlayerInternal setUnderage:]
  -[GKPlayerInternal setDefaultPrivacyVisibility:]
  -[GKPlayerInternal setFacebookUserID:]
  -[GKPlayerInternal lastName]
  -[GKPlayerInternal setNumberOfRequests:]
  -[GKPlayerInternal numberOfTurns]
  -[GKPlayerInternal cacheKey]
  -[GKPlayerInternal setICloudUserID:]
  -[GKPlayerInternal iCloudUserID]
  -[GKPlayerInternal .cxx_destruct]
  -[GKPlayerInternal alias]
  -[GKPlayerInternal isPurpleBuddyAccount]
  -[GKPlayerInternal setPurpleBuddyAccount:]
  -[GKPlayerInternal setPhotos:]
  -[GKPlayerInternal gamePlayerID]
  -[GKPlayerInternal numberOfRequests]
  -[GKPlayerInternal setFirstName:]
  -[GKPlayerInternal accountName]
  -[GKPlayerInternal lastPlayedDate]
  -[GKPlayerInternal setLastPlayedDate:]
  -[GKPlayerInternal isLoaded]
  -[GKPlayerInternal setPhotoPending:]
  -[GKPlayerInternal setGlobalFriendListAccess:]
  -[GKPlayerInternal isEqual:]
  -[GKPlayerInternal compositeName]
  -[GKPlayerInternal setNumberOfTurns:]
  -[GKPlayerInternal setLastName:]
  -[GKPlayerInternal setAlias:]
  -[GKPlayerInternal avatarType]
  -[GKPlayerInternal emailAddresses]
  -[GKPlayerInternal flags]
  -[GKPlayerInternal status]
  -[GKPlayerInternal isDefaultNickname]
  -[GKPlayerInternal setStatus:]
  -[GKPlayerInternal setFindable:]
  -[GKPlayerInternal isLocalPlayer]
  -[GKPlayerInternal minimalInternal]
  -[GKPlayerInternal setAvatarType:]
  -[GKPlayerInternal defaultFamiliarity]
  -[GKPlayerInternal isDefaultPrivacyVisibility]
  -[GKPlayerInternal photos]
  -[GKPlayerInternal isUnderage]
  -[GKPlayerInternal setPlayerID:]
  -[GKPlayerInternal numberOfChallenges]
  -[GKPlayerInternal playerID]
  -[GKPlayerInternal isPhotoPending]
  -[GKPlayerInternal teamPlayerID]
  -[GKPlayerInternal isFindable]
  -[GKPlayerInternal conciseDescription]
  -[GKPlayerInternal globalFriendListAccess]
  -[GKPlayerInternal setNumberOfChallenges:]
  -[GKPlayerInternal setDefaultNickname:]
  -[GKPlayerInternal displayNameWithOptions:]
  -[GKPlayerInternal lastPlayedGame]
  -[GKPlayerInternal setMonogramComponents:]
  -[GKPlayerInternal isAutomatchPlayer]
  -[GKPlayerInternal numberOfFriends]
  -[GKPlayerInternal lastPrivacyNoticeVersionDisplayed]
  -[GKPlayerInternal messagesID]
  -[GKPlayerInternal isGuestPlayer]
  -[GKPlayerInternal friendPlayedWith]
  -[GKPlayerInternal friendPlayedNearby]
  -[GKPlayerInternal friendBiDirectional]
  -[GKPlayerInternal isInContacts]
  -[GKPlayerInternal monogramComponents]
  -[GKPlayerInternal setCompositeName:]
  -[GKPlayerInternal setMessagesID:]
  -[GKPlayerInternal achievementsVisibility]
  -[GKPlayerInternal numberOfAchievements]
  -[GKPlayerInternal numberOfGames]
  -[GKPlayerInternal inboxEntry]
  -[GKPlayerInternal setFriends:]
  -[GKPlayerInternal serverRepresentation]
  -[GKPlayerInternal setGamePlayerID:]
  -[GKPlayerInternal setTeamPlayerID:]
  -[GKPlayerInternal numberOfAchievementPoints]
  -[GKPlayerInternal setNumberOfAchievementPoints:]
  -[GKPlayerInternal setNumberOfAchievements:]
  -[GKPlayerInternal setNumberOfFriends:]
  -[GKPlayerInternal setNumberOfGames:]
  -[GKPlayerInternal allowNearbyMultiplayer]
  -[GKPlayerInternal numberOfFriendsInCommon]
  -[GKPlayerInternal numberOfGamesInCommon]
  -[GKPlayerInternal friendLevel]
  -[GKPlayerInternal acceptedGameInviteFromThisFriend]
  -[GKPlayerInternal initiatedGameInviteToThisFriend]
  -[GKPlayerInternal automatchedTogether]
  -[GKPlayerInternal setFriendLevel:]
  -[GKPlayerInternal setFriendBiDirectional:]
  -[GKPlayerInternal setFriendPlayedWith:]
  -[GKPlayerInternal setFriendPlayedNearby:]
  -[GKPlayerInternal setAcceptedGameInviteFromThisFriend:]
  -[GKPlayerInternal setInitiatedGameInviteToThisFriend:]
  -[GKPlayerInternal setAutomatchedTogether:]
  -[GKPlayerInternal isUnknownPlayer]
  -[GKPlayerInternal isAnonymousPlayer]
  -[GKPlayerInternal guestIdentifier]
  -[GKPlayerInternal lastPersonalizationVersionDisplayed]
  -[GKPlayerInternal setLastPersonalizationVersionDisplayed:]
  -[GKPlayerInternal setLastPrivacyNoticeVersionDisplayed:]
  -[GKPlayerInternal lastProfilePrivacyVersionDisplayed]
  -[GKPlayerInternal setLastProfilePrivacyVersionDisplayed:]
  -[GKPlayerInternal _gkIsSameAsPlayer:]
  -[GKPlayerInternal setAchievementsVisibility:]
  -[GKPlayerInternal friendsVisibility]
  -[GKPlayerInternal setFriendsVisibility:]
  -[GKPlayerInternal gamesPlayedVisibility]
  -[GKPlayerInternal setGamesPlayedVisibility:]
  -[GKPlayerInternal setLastPlayedGame:]
  -[GKPlayerInternal globalFriendListSharingStatus]
  -[GKPlayerInternal setAllowNearbyMultiplayer:]
  -[GKPlayerInternal stripPIIs]
  -[GKPlayerInternal setNumberOfFriendsInCommon:]
  -[GKPlayerInternal setNumberOfGamesInCommon:]
  -[GKPlayerInternal setIsInContacts:]
  -[GKPlayerInternal setInboxEntry:]


GKUnauthenticatedPlayerInternal : GKLocalPlayerInternal
  // class methods
  +[GKUnauthenticatedPlayerInternal supportsSecureCoding]

  // instance methods
  -[GKUnauthenticatedPlayerInternal alias]
  -[GKUnauthenticatedPlayerInternal gamePlayerID]
  -[GKUnauthenticatedPlayerInternal isEqual:]
  -[GKUnauthenticatedPlayerInternal playerID]
  -[GKUnauthenticatedPlayerInternal teamPlayerID]
  -[GKUnauthenticatedPlayerInternal encodeWithCoder:]


GKFamiliarPlayerInternal : GKPlayerInternal
  // class methods
  +[GKFamiliarPlayerInternal supportsSecureCoding]
  +[GKFamiliarPlayerInternal secureCodedPropertyKeys]

  // instance methods
  -[GKFamiliarPlayerInternal firstName]
  -[GKFamiliarPlayerInternal lastName]
  -[GKFamiliarPlayerInternal .cxx_destruct]
  -[GKFamiliarPlayerInternal setFirstName:]
  -[GKFamiliarPlayerInternal compositeName]
  -[GKFamiliarPlayerInternal setLastName:]
  -[GKFamiliarPlayerInternal setCompositeName:]


GKFriendPlayerInternal : GKFamiliarPlayerInternal
  // class methods
  +[GKFriendPlayerInternal supportsSecureCoding]
  +[GKFriendPlayerInternal secureCodedPropertyKeys]

  // instance methods
  -[GKFriendPlayerInternal isFriend]
  -[GKFriendPlayerInternal .cxx_destruct]
  -[GKFriendPlayerInternal lastPlayedDate]
  -[GKFriendPlayerInternal setLastPlayedDate:]
  -[GKFriendPlayerInternal status]
  -[GKFriendPlayerInternal setStatus:]
  -[GKFriendPlayerInternal defaultFamiliarity]
  -[GKFriendPlayerInternal lastPlayedGame]
  -[GKFriendPlayerInternal setLastPlayedGame:]


GKLocalPlayerInternal : GKFriendPlayerInternal
 @property  unsigned long loginStatus

  // class methods
  +[GKLocalPlayerInternal supportsSecureCoding]
  +[GKLocalPlayerInternal secureCodedPropertyKeys]

  // instance methods
  -[GKLocalPlayerInternal setEmailAddresses:]
  -[GKLocalPlayerInternal isFriend]
  -[GKLocalPlayerInternal facebookUserID]
  -[GKLocalPlayerInternal setAccountName:]
  -[GKLocalPlayerInternal setUnderage:]
  -[GKLocalPlayerInternal setDefaultPrivacyVisibility:]
  -[GKLocalPlayerInternal setFacebookUserID:]
  -[GKLocalPlayerInternal setNumberOfRequests:]
  -[GKLocalPlayerInternal numberOfTurns]
  -[GKLocalPlayerInternal setICloudUserID:]
  -[GKLocalPlayerInternal iCloudUserID]
  -[GKLocalPlayerInternal .cxx_destruct]
  -[GKLocalPlayerInternal isPurpleBuddyAccount]
  -[GKLocalPlayerInternal setPurpleBuddyAccount:]
  -[GKLocalPlayerInternal numberOfRequests]
  -[GKLocalPlayerInternal loginStatus]
  -[GKLocalPlayerInternal accountName]
  -[GKLocalPlayerInternal setPhotoPending:]
  -[GKLocalPlayerInternal setGlobalFriendListAccess:]
  -[GKLocalPlayerInternal setNumberOfTurns:]
  -[GKLocalPlayerInternal setLoginStatus:]
  -[GKLocalPlayerInternal emailAddresses]
  -[GKLocalPlayerInternal isDefaultNickname]
  -[GKLocalPlayerInternal setFindable:]
  -[GKLocalPlayerInternal isLocalPlayer]
  -[GKLocalPlayerInternal minimalInternal]
  -[GKLocalPlayerInternal defaultFamiliarity]
  -[GKLocalPlayerInternal isDefaultPrivacyVisibility]
  -[GKLocalPlayerInternal isUnderage]
  -[GKLocalPlayerInternal numberOfChallenges]
  -[GKLocalPlayerInternal isPhotoPending]
  -[GKLocalPlayerInternal isFindable]
  -[GKLocalPlayerInternal globalFriendListAccess]
  -[GKLocalPlayerInternal setNumberOfChallenges:]
  -[GKLocalPlayerInternal setDefaultNickname:]


GKPlayerEmailInternal : GKInternalRepresentation
 @property  NSString *address
 @property  NSString *addressSHA1
 @property  NSString *addressPrefix
 @property  BOOL verified

  // class methods
  +[GKPlayerEmailInternal supportsSecureCoding]
  +[GKPlayerEmailInternal secureCodedPropertyKeys]

  // instance methods
  -[GKPlayerEmailInternal setAddress:]
  -[GKPlayerEmailInternal .cxx_destruct]
  -[GKPlayerEmailInternal address]
  -[GKPlayerEmailInternal isEqual:]
  -[GKPlayerEmailInternal verified]
  -[GKPlayerEmailInternal setVerified:]
  -[GKPlayerEmailInternal addressPrefix]
  -[GKPlayerEmailInternal addressSHA1]
  -[GKPlayerEmailInternal setAddressSHA1:]
  -[GKPlayerEmailInternal setAddressPrefix:]


GKFriendRequestInternal : GKFamiliarPlayerInternal
 @property  NSString *message
 @property  NSDate *date

  // class methods
  +[GKFriendRequestInternal supportsSecureCoding]
  +[GKFriendRequestInternal secureCodedPropertyKeys]

  // instance methods
  -[GKFriendRequestInternal .cxx_destruct]
  -[GKFriendRequestInternal setMessage:]
  -[GKFriendRequestInternal message]
  -[GKFriendRequestInternal setDate:]
  -[GKFriendRequestInternal defaultFamiliarity]
  -[GKFriendRequestInternal date]


GKFriendRecommendationInternal : GKFamiliarPlayerInternal
 @property  NSString *reason
 @property  NSString *reason2
 @property  unsigned int rid
 @property  int source

  // class methods
  +[GKFriendRecommendationInternal supportsSecureCoding]
  +[GKFriendRecommendationInternal secureCodedPropertyKeys]

  // instance methods
  -[GKFriendRecommendationInternal rid]
  -[GKFriendRecommendationInternal .cxx_destruct]
  -[GKFriendRecommendationInternal setRid:]
  -[GKFriendRecommendationInternal reason]
  -[GKFriendRecommendationInternal reason2]
  -[GKFriendRecommendationInternal setSource:]
  -[GKFriendRecommendationInternal setReason:]
  -[GKFriendRecommendationInternal defaultFamiliarity]
  -[GKFriendRecommendationInternal source]
  -[GKFriendRecommendationInternal setReason2:]


GKSpecialPlayerInternal : GKPlayerInternal
  // class methods
  +[GKSpecialPlayerInternal supportsSecureCoding]

  // instance methods
  -[GKSpecialPlayerInternal alias]
  -[GKSpecialPlayerInternal setPhotos:]
  -[GKSpecialPlayerInternal gamePlayerID]
  -[GKSpecialPlayerInternal isLoaded]
  -[GKSpecialPlayerInternal compositeName]
  -[GKSpecialPlayerInternal setAlias:]
  -[GKSpecialPlayerInternal photos]
  -[GKSpecialPlayerInternal setPlayerID:]
  -[GKSpecialPlayerInternal playerID]
  -[GKSpecialPlayerInternal teamPlayerID]
  -[GKSpecialPlayerInternal setGamePlayerID:]
  -[GKSpecialPlayerInternal setTeamPlayerID:]


GKAnonymousPlayerInternal : GKSpecialPlayerInternal
  // class methods
  +[GKAnonymousPlayerInternal supportsSecureCoding]

  // instance methods
  -[GKAnonymousPlayerInternal alias]
  -[GKAnonymousPlayerInternal gamePlayerID]
  -[GKAnonymousPlayerInternal isEqual:]
  -[GKAnonymousPlayerInternal playerID]
  -[GKAnonymousPlayerInternal teamPlayerID]
  -[GKAnonymousPlayerInternal isAnonymousPlayer]


GKUnknownPlayerInternal : GKSpecialPlayerInternal
  // class methods
  +[GKUnknownPlayerInternal supportsSecureCoding]

  // instance methods
  -[GKUnknownPlayerInternal gamePlayerID]
  -[GKUnknownPlayerInternal playerID]
  -[GKUnknownPlayerInternal teamPlayerID]
  -[GKUnknownPlayerInternal isUnknownPlayer]


GKAutomatchPlayerInternal : GKSpecialPlayerInternal
 @property  long long automatchPosition
 @property  NSString *automatchPositionDisplayString

  // class methods
  +[GKAutomatchPlayerInternal supportsSecureCoding]

  // instance methods
  -[GKAutomatchPlayerInternal alias]
  -[GKAutomatchPlayerInternal gamePlayerID]
  -[GKAutomatchPlayerInternal playerID]
  -[GKAutomatchPlayerInternal teamPlayerID]
  -[GKAutomatchPlayerInternal isAutomatchPlayer]
  -[GKAutomatchPlayerInternal setAutomatchPosition:]
  -[GKAutomatchPlayerInternal automatchPosition]
  -[GKAutomatchPlayerInternal automatchPositionDisplayString]


GKAnonymousGuestPlayerInternal : GKPlayerInternal
 @property  GKPlayerInternal *hostPlayerInternal

  // class methods
  +[GKAnonymousGuestPlayerInternal supportsSecureCoding]
  +[GKAnonymousGuestPlayerInternal secureCodedPropertyKeys]

  // instance methods
  -[GKAnonymousGuestPlayerInternal .cxx_destruct]
  -[GKAnonymousGuestPlayerInternal playerID]
  -[GKAnonymousGuestPlayerInternal isGuestPlayer]
  -[GKAnonymousGuestPlayerInternal initWithHostPlayerInternal:guestIdentifier:]
  -[GKAnonymousGuestPlayerInternal guestIdentifier]
  -[GKAnonymousGuestPlayerInternal hostPlayerInternal]
  -[GKAnonymousGuestPlayerInternal setHostPlayerInternal:]
  -[GKAnonymousGuestPlayerInternal setGuestIdentifier:]


GKConcernInternal : GKInternalRepresentation
 @property  GKPlayerInternal *player
 @property  unsigned int concernID
 @property  NSString *message

  // class methods
  +[GKConcernInternal supportsSecureCoding]
  +[GKConcernInternal secureCodedPropertyKeys]

  // instance methods
  -[GKConcernInternal .cxx_destruct]
  -[GKConcernInternal setMessage:]
  -[GKConcernInternal setPlayer:]
  -[GKConcernInternal isEqual:]
  -[GKConcernInternal player]
  -[GKConcernInternal message]
  -[GKConcernInternal concernID]
  -[GKConcernInternal setConcernID:]


GKDelayOperation : NSOperation
 @property  double delayInSec
 @property  @? operation

  // instance methods
  -[GKDelayOperation operation]
  -[GKDelayOperation setOperation:]
  -[GKDelayOperation main]
  -[GKDelayOperation .cxx_destruct]
  -[GKDelayOperation setDelayInSec:]
  -[GKDelayOperation delayInSec]
  -[GKDelayOperation initWithDelay:andOperation:]


GKOperationQueue : NSOperationQueue
  // instance methods
  -[GKOperationQueue _gkAddOperationWithDelay:operation:]


GKAchievementInternal : GKInternalRepresentation
 @property  unsigned int attributes
 @property  NSString *identifier
 @property  NSString *groupIdentifier
 @property  NSString *title
 @property  NSString *achievedDescription
 @property  NSString *unachievedDescription
 @property  NSDictionary *icons
 @property  unsigned short maximumPoints
 @property  BOOL hidden
 @property  BOOL replayable
 @property  BOOL completed
 @property  NSDate *lastReportedDate
 @property  double percentComplete
 @property  GKPlayerInternal *player

  // class methods
  +[GKAchievementInternal supportsSecureCoding]
  +[GKAchievementInternal secureCodedPropertyKeys]

  // instance methods
  -[GKAchievementInternal setGroupIdentifier:]
  -[GKAchievementInternal initWithCoder:]
  -[GKAchievementInternal setTitle:]
  -[GKAchievementInternal icons]
  -[GKAchievementInternal .cxx_destruct]
  -[GKAchievementInternal percentComplete]
  -[GKAchievementInternal isHidden]
  -[GKAchievementInternal groupIdentifier]
  -[GKAchievementInternal setPlayer:]
  -[GKAchievementInternal isEqual:]
  -[GKAchievementInternal player]
  -[GKAchievementInternal identifier]
  -[GKAchievementInternal setAttributes:]
  -[GKAchievementInternal setIcons:]
  -[GKAchievementInternal title]
  -[GKAchievementInternal setPercentComplete:]
  -[GKAchievementInternal setIdentifier:]
  -[GKAchievementInternal attributes]
  -[GKAchievementInternal isCompleted]
  -[GKAchievementInternal encodeWithCoder:]
  -[GKAchievementInternal setHidden:]
  -[GKAchievementInternal unachievedDescription]
  -[GKAchievementInternal lastReportedDate]
  -[GKAchievementInternal isReplayable]
  -[GKAchievementInternal maximumPoints]
  -[GKAchievementInternal achievedDescription]
  -[GKAchievementInternal serverRepresentation]
  -[GKAchievementInternal descriptionSubstitutionMap]
  -[GKAchievementInternal setLastReportedDate:]
  -[GKAchievementInternal setAchievedDescription:]
  -[GKAchievementInternal setUnachievedDescription:]
  -[GKAchievementInternal setMaximumPoints:]
  -[GKAchievementInternal setReplayable:]
  -[GKAchievementInternal mergePropertiesFromDescription:]


GKLeaderboardInternal : GKInternalRepresentation
 @property  NSString *localizedTitle
 @property  NSString *category
 @property  unsigned long maxRange
 @property  NSString *recordID
 @property  NSString *identifier
 @property  NSString *baseLeaderboardID
 @property  NSString *groupIdentifier
 @property  NSString *leaderboardSetIdentifier
 @property  NSString *title
 @property  NSDate *lastSubmittedDate
 @property  NSDictionary *icons
 @property  unsigned int overallRank
 @property  unsigned int overallRankCount
 @property  unsigned short friendRank
 @property  unsigned short friendRankCount
 @property  unsigned int maxRank
 @property  NSArray *scores
 @property  GKScoreInternal *playerScore
 @property  long long type
 @property  NSDate *startDate
 @property  NSDate *nextStartDate
 @property  double duration
 @property  GKPlayerInternal *creator
 @property  NSString *context

  // class methods
  +[GKLeaderboardInternal secureCodedPropertyKeys]

  // instance methods
  -[GKLeaderboardInternal setScores:]
  -[GKLeaderboardInternal scores]
  -[GKLeaderboardInternal localizedTitle]
  -[GKLeaderboardInternal setRecordID:]
  -[GKLeaderboardInternal setGroupIdentifier:]
  -[GKLeaderboardInternal setTitle:]
  -[GKLeaderboardInternal setType:]
  -[GKLeaderboardInternal icons]
  -[GKLeaderboardInternal .cxx_destruct]
  -[GKLeaderboardInternal setDuration:]
  -[GKLeaderboardInternal creator]
  -[GKLeaderboardInternal groupIdentifier]
  -[GKLeaderboardInternal recordID]
  -[GKLeaderboardInternal setStartDate:]
  -[GKLeaderboardInternal maxRange]
  -[GKLeaderboardInternal setLocalizedTitle:]
  -[GKLeaderboardInternal isEqual:]
  -[GKLeaderboardInternal identifier]
  -[GKLeaderboardInternal setIcons:]
  -[GKLeaderboardInternal title]
  -[GKLeaderboardInternal maxRank]
  -[GKLeaderboardInternal type]
  -[GKLeaderboardInternal setIdentifier:]
  -[GKLeaderboardInternal startDate]
  -[GKLeaderboardInternal setContext:]
  -[GKLeaderboardInternal category]
  -[GKLeaderboardInternal setCategory:]
  -[GKLeaderboardInternal setCreator:]
  -[GKLeaderboardInternal duration]
  -[GKLeaderboardInternal context]
  -[GKLeaderboardInternal overallRankCount]
  -[GKLeaderboardInternal overallRank]
  -[GKLeaderboardInternal friendRank]
  -[GKLeaderboardInternal friendRankCount]
  -[GKLeaderboardInternal nextStartDate]
  -[GKLeaderboardInternal baseLeaderboardID]
  -[GKLeaderboardInternal playerScore]
  -[GKLeaderboardInternal setPlayerScore:]
  -[GKLeaderboardInternal setFriendRank:]
  -[GKLeaderboardInternal setMaxRank:]
  -[GKLeaderboardInternal setBaseLeaderboardID:]
  -[GKLeaderboardInternal leaderboardSetIdentifier]
  -[GKLeaderboardInternal setLeaderboardSetIdentifier:]
  -[GKLeaderboardInternal lastSubmittedDate]
  -[GKLeaderboardInternal setLastSubmittedDate:]
  -[GKLeaderboardInternal setOverallRank:]
  -[GKLeaderboardInternal setOverallRankCount:]
  -[GKLeaderboardInternal setFriendRankCount:]
  -[GKLeaderboardInternal setNextStartDate:]


GKLeaderboardSetInternal : GKInternalRepresentation
 @property  NSString *setIdentifier
 @property  NSString *identifier
 @property  NSString *groupIdentifier
 @property  NSString *title
 @property  NSDictionary *leaderboardIdentifiers
 @property  NSDictionary *icons

  // class methods
  +[GKLeaderboardSetInternal secureCodedPropertyKeys]

  // instance methods
  -[GKLeaderboardSetInternal setGroupIdentifier:]
  -[GKLeaderboardSetInternal setTitle:]
  -[GKLeaderboardSetInternal icons]
  -[GKLeaderboardSetInternal .cxx_destruct]
  -[GKLeaderboardSetInternal groupIdentifier]
  -[GKLeaderboardSetInternal isEqual:]
  -[GKLeaderboardSetInternal identifier]
  -[GKLeaderboardSetInternal setIcons:]
  -[GKLeaderboardSetInternal title]
  -[GKLeaderboardSetInternal setIdentifier:]
  -[GKLeaderboardSetInternal leaderboardIdentifiers]
  -[GKLeaderboardSetInternal setLeaderboardIdentifiers:]
  -[GKLeaderboardSetInternal setIdentifier]
  -[GKLeaderboardSetInternal setSetIdentifier:]


GKLeaderboardEntryInternal : GKInternalRepresentation
 @property  GKPlayerInternal *player
 @property  long long rank
 @property  long long score
 @property  NSString *formattedScore
 @property  unsigned long context
 @property  NSDate *date
 @property  long long state
 @property  NSString *baseLeaderboardID

  // class methods
  +[GKLeaderboardEntryInternal secureCodedPropertyKeys]

  // instance methods
  -[GKLeaderboardEntryInternal setScore:]
  -[GKLeaderboardEntryInternal rank]
  -[GKLeaderboardEntryInternal .cxx_destruct]
  -[GKLeaderboardEntryInternal setRank:]
  -[GKLeaderboardEntryInternal setState:]
  -[GKLeaderboardEntryInternal setPlayer:]
  -[GKLeaderboardEntryInternal player]
  -[GKLeaderboardEntryInternal state]
  -[GKLeaderboardEntryInternal score]
  -[GKLeaderboardEntryInternal setDate:]
  -[GKLeaderboardEntryInternal setContext:]
  -[GKLeaderboardEntryInternal date]
  -[GKLeaderboardEntryInternal context]
  -[GKLeaderboardEntryInternal formattedScore]
  -[GKLeaderboardEntryInternal baseLeaderboardID]
  -[GKLeaderboardEntryInternal setBaseLeaderboardID:]
  -[GKLeaderboardEntryInternal setFormattedScore:]


GKScoreInternal : GKInternalRepresentation
 @property  NSString *playerID
 @property  NSString *category
 @property  NSString *groupCategory
 @property  GKPlayerInternal *player
 @property  NSString *leaderboardIdentifier
 @property  NSString *groupLeaderboardIdentifier
 @property  NSString *formattedValue
 @property  NSDate *date
 @property  long long value
 @property  unsigned long context
 @property  unsigned int rank
 @property  BOOL valueSet

  // class methods
  +[GKScoreInternal supportsSecureCoding]
  +[GKScoreInternal secureCodedPropertyKeys]

  // instance methods
  -[GKScoreInternal initWithCoder:]
  -[GKScoreInternal rank]
  -[GKScoreInternal .cxx_destruct]
  -[GKScoreInternal setRank:]
  -[GKScoreInternal formattedValue]
  -[GKScoreInternal setPlayer:]
  -[GKScoreInternal isEqual:]
  -[GKScoreInternal player]
  -[GKScoreInternal setValue:]
  -[GKScoreInternal setDate:]
  -[GKScoreInternal value]
  -[GKScoreInternal setContext:]
  -[GKScoreInternal category]
  -[GKScoreInternal copyWithZone:]
  -[GKScoreInternal setCategory:]
  -[GKScoreInternal playerID]
  -[GKScoreInternal valueSet]
  -[GKScoreInternal date]
  -[GKScoreInternal context]
  -[GKScoreInternal setLeaderboardIdentifier:]
  -[GKScoreInternal leaderboardIdentifier]
  -[GKScoreInternal serverRepresentation]
  -[GKScoreInternal groupLeaderboardIdentifier]
  -[GKScoreInternal setGroupLeaderboardIdentifier:]
  -[GKScoreInternal setFormattedValue:]
  -[GKScoreInternal setGroupCategory:]
  -[GKScoreInternal setValueSet:]
  -[GKScoreInternal groupCategory]


GKChallengeInternal : GKInternalRepresentation
 @property  NSString *challengeID
 @property  NSString *bundleID
 @property  NSDate *issueDate
 @property  NSDate *completionDate
 @property  long long state
 @property  NSOrderedSet *compatibleBundleIDs
 @property  NSString *message
 @property  GKGameInternal *game
 @property  GKPlayerInternal *issuingPlayer
 @property  GKPlayerInternal *receivingPlayer
 @property  unsigned long type
 @property  NSString *titleText
 @property  NSString *subtitleText

  // class methods
  +[GKChallengeInternal internalRepresentation]
  +[GKChallengeInternal secureCodedPropertyKeys]

  // instance methods
  -[GKChallengeInternal bundleID]
  -[GKChallengeInternal game]
  -[GKChallengeInternal .cxx_destruct]
  -[GKChallengeInternal subtitleText]
  -[GKChallengeInternal setMessage:]
  -[GKChallengeInternal setCompletionDate:]
  -[GKChallengeInternal setState:]
  -[GKChallengeInternal titleText]
  -[GKChallengeInternal isEqual:]
  -[GKChallengeInternal message]
  -[GKChallengeInternal state]
  -[GKChallengeInternal setBundleID:]
  -[GKChallengeInternal issueDate]
  -[GKChallengeInternal setGame:]
  -[GKChallengeInternal type]
  -[GKChallengeInternal encodeWithCoder:]
  -[GKChallengeInternal completionDate]
  -[GKChallengeInternal issuingPlayer]
  -[GKChallengeInternal serverRepresentation]
  -[GKChallengeInternal descriptionSubstitutionMap]
  -[GKChallengeInternal receivingPlayer]
  -[GKChallengeInternal setIssuingPlayer:]
  -[GKChallengeInternal challengeID]
  -[GKChallengeInternal compatibleBundleIDs]
  -[GKChallengeInternal serverRepresentationForReceivingPlayer:]
  -[GKChallengeInternal findLocalGameBundleID]
  -[GKChallengeInternal setChallengeID:]
  -[GKChallengeInternal setReceivingPlayer:]
  -[GKChallengeInternal setCompatibleBundleIDs:]
  -[GKChallengeInternal setIssueDate:]


GKScoreChallengeInternal : GKChallengeInternal
 @property  GKScoreInternal *score
 @property  GKLeaderboardInternal *leaderboard

  // class methods
  +[GKScoreChallengeInternal internalRepresentation]
  +[GKScoreChallengeInternal secureCodedPropertyKeys]

  // instance methods
  -[GKScoreChallengeInternal setScore:]
  -[GKScoreChallengeInternal .cxx_destruct]
  -[GKScoreChallengeInternal titleText]
  -[GKScoreChallengeInternal score]
  -[GKScoreChallengeInternal type]
  -[GKScoreChallengeInternal leaderboard]
  -[GKScoreChallengeInternal setLeaderboard:]
  -[GKScoreChallengeInternal serverRepresentationForReceivingPlayer:]


GKAchievementChallengeInternal : GKChallengeInternal
 @property  GKAchievementInternal *achievement

  // class methods
  +[GKAchievementChallengeInternal internalRepresentation]
  +[GKAchievementChallengeInternal secureCodedPropertyKeys]

  // instance methods
  -[GKAchievementChallengeInternal .cxx_destruct]
  -[GKAchievementChallengeInternal titleText]
  -[GKAchievementChallengeInternal type]
  -[GKAchievementChallengeInternal achievement]
  -[GKAchievementChallengeInternal setAchievement:]
  -[GKAchievementChallengeInternal serverRepresentationForReceivingPlayer:]


GKTurnBasedMatchInternal : GKInternalRepresentation
 @property  NSString *matchID
 @property  NSString *status
 @property  unsigned int state
 @property  NSDate *creationDate
 @property  NSDate *lastTurnDate
 @property  NSString *message
 @property  NSDictionary *localizableMessage
 @property  NSString *reason
 @property  unsigned char minPlayers
 @property  unsigned char maxPlayers
 @property  NSDate *deletionDate
 @property  BOOL currentParticipant
 @property  unsigned int turnNumber
 @property  NSString *lastTurnPlayerID
 @property  NSData *matchData
 @property  NSString *matchDataVersion
 @property  NSArray *participants
 @property  NSString *bundleID
 @property  NSString *bundleVersion
 @property  NSString *shortBundleVersion
 @property  long long platform
 @property  NSArray *exchanges
 @property  GKGameInternal *game
 @property  GKPlayerInternal *currentPlayer

  // class methods
  +[GKTurnBasedMatchInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTurnBasedMatchInternal bundleVersion]
  -[GKTurnBasedMatchInternal participants]
  -[GKTurnBasedMatchInternal setParticipants:]
  -[GKTurnBasedMatchInternal setBundleVersion:]
  -[GKTurnBasedMatchInternal bundleID]
  -[GKTurnBasedMatchInternal setPlatform:]
  -[GKTurnBasedMatchInternal platform]
  -[GKTurnBasedMatchInternal game]
  -[GKTurnBasedMatchInternal setCreationDate:]
  -[GKTurnBasedMatchInternal setDeletionDate:]
  -[GKTurnBasedMatchInternal .cxx_destruct]
  -[GKTurnBasedMatchInternal setMessage:]
  -[GKTurnBasedMatchInternal setState:]
  -[GKTurnBasedMatchInternal isEqual:]
  -[GKTurnBasedMatchInternal deletionDate]
  -[GKTurnBasedMatchInternal matchID]
  -[GKTurnBasedMatchInternal message]
  -[GKTurnBasedMatchInternal state]
  -[GKTurnBasedMatchInternal reason]
  -[GKTurnBasedMatchInternal setBundleID:]
  -[GKTurnBasedMatchInternal status]
  -[GKTurnBasedMatchInternal setGame:]
  -[GKTurnBasedMatchInternal creationDate]
  -[GKTurnBasedMatchInternal setStatus:]
  -[GKTurnBasedMatchInternal setReason:]
  -[GKTurnBasedMatchInternal shortBundleVersion]
  -[GKTurnBasedMatchInternal setShortBundleVersion:]
  -[GKTurnBasedMatchInternal minPlayers]
  -[GKTurnBasedMatchInternal maxPlayers]
  -[GKTurnBasedMatchInternal setMinPlayers:]
  -[GKTurnBasedMatchInternal setMaxPlayers:]
  -[GKTurnBasedMatchInternal currentParticipant]
  -[GKTurnBasedMatchInternal lastTurnDate]
  -[GKTurnBasedMatchInternal descriptionSubstitutionMap]
  -[GKTurnBasedMatchInternal exchanges]
  -[GKTurnBasedMatchInternal currentPlayer]
  -[GKTurnBasedMatchInternal localizableMessage]
  -[GKTurnBasedMatchInternal setLocalizableMessage:]
  -[GKTurnBasedMatchInternal matchData]
  -[GKTurnBasedMatchInternal setCurrentParticipant:]
  -[GKTurnBasedMatchInternal setMatchData:]
  -[GKTurnBasedMatchInternal turnNumber]
  -[GKTurnBasedMatchInternal localPlayerParticipantIndex]
  -[GKTurnBasedMatchInternal activeExchangeCount]
  -[GKTurnBasedMatchInternal previousParticipantIndex]
  -[GKTurnBasedMatchInternal setMatchID:]
  -[GKTurnBasedMatchInternal setCurrentPlayer:]
  -[GKTurnBasedMatchInternal setLastTurnDate:]
  -[GKTurnBasedMatchInternal setTurnNumber:]
  -[GKTurnBasedMatchInternal lastTurnPlayerID]
  -[GKTurnBasedMatchInternal setLastTurnPlayerID:]
  -[GKTurnBasedMatchInternal matchDataVersion]
  -[GKTurnBasedMatchInternal setMatchDataVersion:]
  -[GKTurnBasedMatchInternal setExchanges:]


GKTurnBasedParticipantInternal : GKInternalRepresentation
 @property  NSString *playerID
 @property  NSString *sessionID
 @property  GKPlayerInternal *player
 @property  GKPlayerInternal *invitedBy
 @property  NSString *inviteMessage
 @property  NSString *status
 @property  NSDate *lastTurnDate
 @property  NSDate *timeoutDate
 @property  unsigned int matchOutcome
 @property  unsigned char slot
 @property  BOOL isAutomatchParticipant

  // class methods
  +[GKTurnBasedParticipantInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTurnBasedParticipantInternal sessionID]
  -[GKTurnBasedParticipantInternal setSessionID:]
  -[GKTurnBasedParticipantInternal setSlot:]
  -[GKTurnBasedParticipantInternal slot]
  -[GKTurnBasedParticipantInternal .cxx_destruct]
  -[GKTurnBasedParticipantInternal setPlayer:]
  -[GKTurnBasedParticipantInternal isEqual:]
  -[GKTurnBasedParticipantInternal player]
  -[GKTurnBasedParticipantInternal status]
  -[GKTurnBasedParticipantInternal invitedBy]
  -[GKTurnBasedParticipantInternal setStatus:]
  -[GKTurnBasedParticipantInternal playerID]
  -[GKTurnBasedParticipantInternal inviteMessage]
  -[GKTurnBasedParticipantInternal setInviteMessage:]
  -[GKTurnBasedParticipantInternal lastTurnDate]
  -[GKTurnBasedParticipantInternal setMatchOutcome:]
  -[GKTurnBasedParticipantInternal isAutomatchParticipant]
  -[GKTurnBasedParticipantInternal timeoutDate]
  -[GKTurnBasedParticipantInternal serverRepresentation]
  -[GKTurnBasedParticipantInternal descriptionSubstitutionMap]
  -[GKTurnBasedParticipantInternal matchOutcome]
  -[GKTurnBasedParticipantInternal setLastTurnDate:]
  -[GKTurnBasedParticipantInternal setTimeoutDate:]
  -[GKTurnBasedParticipantInternal setInvitedBy:]


GKTurnBasedExchangeInternal : GKInternalRepresentation
 @property  NSString *exchangeID
 @property  unsigned char senderIndex
 @property  NSArray *recipientIndexes
 @property  NSString *statusString
 @property  NSDictionary *localizableMessage
 @property  NSData *data
 @property  NSDate *sendDate
 @property  NSDate *timeoutDate
 @property  NSDate *completionDate
 @property  NSArray *replies

  // class methods
  +[GKTurnBasedExchangeInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTurnBasedExchangeInternal sendDate]
  -[GKTurnBasedExchangeInternal .cxx_destruct]
  -[GKTurnBasedExchangeInternal setCompletionDate:]
  -[GKTurnBasedExchangeInternal data]
  -[GKTurnBasedExchangeInternal isEqual:]
  -[GKTurnBasedExchangeInternal setSendDate:]
  -[GKTurnBasedExchangeInternal replies]
  -[GKTurnBasedExchangeInternal statusString]
  -[GKTurnBasedExchangeInternal setData:]
  -[GKTurnBasedExchangeInternal setStatusString:]
  -[GKTurnBasedExchangeInternal completionDate]
  -[GKTurnBasedExchangeInternal timeoutDate]
  -[GKTurnBasedExchangeInternal senderIndex]
  -[GKTurnBasedExchangeInternal recipientIndexes]
  -[GKTurnBasedExchangeInternal setReplies:]
  -[GKTurnBasedExchangeInternal localizableMessage]
  -[GKTurnBasedExchangeInternal setLocalizableMessage:]
  -[GKTurnBasedExchangeInternal exchangeID]
  -[GKTurnBasedExchangeInternal setTimeoutDate:]
  -[GKTurnBasedExchangeInternal setExchangeID:]
  -[GKTurnBasedExchangeInternal setSenderIndex:]
  -[GKTurnBasedExchangeInternal setRecipientIndexes:]


GKTurnBasedExchangeReplyInternal : GKInternalRepresentation
 @property  unsigned char recipientIndex
 @property  NSDictionary *localizableMessage
 @property  NSData *data
 @property  NSDate *replyDate

  // class methods
  +[GKTurnBasedExchangeReplyInternal secureCodedPropertyKeys]

  // instance methods
  -[GKTurnBasedExchangeReplyInternal .cxx_destruct]
  -[GKTurnBasedExchangeReplyInternal data]
  -[GKTurnBasedExchangeReplyInternal setData:]
  -[GKTurnBasedExchangeReplyInternal recipientIndex]
  -[GKTurnBasedExchangeReplyInternal localizableMessage]
  -[GKTurnBasedExchangeReplyInternal setLocalizableMessage:]
  -[GKTurnBasedExchangeReplyInternal replyDate]
  -[GKTurnBasedExchangeReplyInternal setRecipientIndex:]
  -[GKTurnBasedExchangeReplyInternal setReplyDate:]


GKMatchRequestInternal : GKInternalRepresentation
 @property  unsigned char minPlayers
 @property  unsigned char maxPlayers
 @property  unsigned char defaultNumberOfPlayers
 @property  unsigned long playerGroup
 @property  unsigned int playerAttributes
 @property  NSArray *recipients
 @property  NSArray *recipientPlayerIDs
 @property  NSString *inviteMessage
 @property  NSDictionary *localizableInviteMessage
 @property  BOOL restrictToAutomatch
 @property  GKTournamentInternal *tournamentForInvitePool
 @property  unsigned long matchType
 @property  NSData *sessionToken
 @property  NSString *rid
 @property  unsigned int version
 @property  BOOL preloadedMatch

  // class methods
  +[GKMatchRequestInternal secureCodedPropertyKeys]

  // instance methods
  -[GKMatchRequestInternal rid]
  -[GKMatchRequestInternal matchType]
  -[GKMatchRequestInternal setRecipients:]
  -[GKMatchRequestInternal .cxx_destruct]
  -[GKMatchRequestInternal init]
  -[GKMatchRequestInternal recipients]
  -[GKMatchRequestInternal setVersion:]
  -[GKMatchRequestInternal isEqual:]
  -[GKMatchRequestInternal sessionToken]
  -[GKMatchRequestInternal setRid:]
  -[GKMatchRequestInternal version]
  -[GKMatchRequestInternal setSessionToken:]
  -[GKMatchRequestInternal defaultNumberOfPlayers]
  -[GKMatchRequestInternal minPlayers]
  -[GKMatchRequestInternal setDefaultNumberOfPlayers:]
  -[GKMatchRequestInternal maxPlayers]
  -[GKMatchRequestInternal inviteMessage]
  -[GKMatchRequestInternal setMinPlayers:]
  -[GKMatchRequestInternal setMaxPlayers:]
  -[GKMatchRequestInternal setInviteMessage:]
  -[GKMatchRequestInternal setPreloadedMatch:]
  -[GKMatchRequestInternal restrictToAutomatch]
  -[GKMatchRequestInternal setPlayerGroup:]
  -[GKMatchRequestInternal playerGroup]
  -[GKMatchRequestInternal setRestrictToAutomatch:]
  -[GKMatchRequestInternal playerAttributes]
  -[GKMatchRequestInternal recipientPlayerIDs]
  -[GKMatchRequestInternal setRecipientPlayerIDs:]
  -[GKMatchRequestInternal tournamentForInvitePool]
  -[GKMatchRequestInternal setTournamentForInvitePool:]
  -[GKMatchRequestInternal setMatchType:]
  -[GKMatchRequestInternal setPlayerAttributes:]
  -[GKMatchRequestInternal localizableInviteMessage]
  -[GKMatchRequestInternal isPreloadedMatch]
  -[GKMatchRequestInternal hasGuestPlayers]
  -[GKMatchRequestInternal setLocalizableInviteMessage:]


GKInviteInternal : GKInternalRepresentation
 @property  NSString *inviteID
 @property  NSData *sessionToken
 @property  GKPlayerInternal *player
 @property  NSString *message
 @property  NSDictionary *localizableMessage
 @property  unsigned long matchType
 @property  unsigned long playerGroup
 @property  unsigned int playerAttributes
 @property  NSString *peerID
 @property  NSData *peerPushToken
 @property  long long peerNATType
 @property  NSData *peerNATIP
 @property  NSData *peerBlob
 @property  NSString *rid
 @property  unsigned char version
 @property  NSString *participantID
 @property  NSString *deviceID
 @property  NSString *bundleID
 @property  BOOL isNearby
 @property  BOOL isMessageBasedInvite

  // class methods
  +[GKInviteInternal inviteFromNearbyPlayer:participantID:deviceID:bundleID:connectionData:]
  +[GKInviteInternal nearbyInviteIDForPlayerID:deviceID:bundleID:]
  +[GKInviteInternal secureCodedPropertyKeys]
  +[GKInviteInternal inviteWithBulletin:]

  // instance methods
  -[GKInviteInternal peerID]
  -[GKInviteInternal setPeerID:]
  -[GKInviteInternal rid]
  -[GKInviteInternal bundleID]
  -[GKInviteInternal matchType]
  -[GKInviteInternal .cxx_destruct]
  -[GKInviteInternal deviceID]
  -[GKInviteInternal setMessage:]
  -[GKInviteInternal setPlayer:]
  -[GKInviteInternal init]
  -[GKInviteInternal setVersion:]
  -[GKInviteInternal isEqual:]
  -[GKInviteInternal player]
  -[GKInviteInternal sessionToken]
  -[GKInviteInternal setParticipantID:]
  -[GKInviteInternal isNearby]
  -[GKInviteInternal setRid:]
  -[GKInviteInternal message]
  -[GKInviteInternal setBundleID:]
  -[GKInviteInternal version]
  -[GKInviteInternal inviteID]
  -[GKInviteInternal participantID]
  -[GKInviteInternal setDeviceID:]
  -[GKInviteInternal setSessionToken:]
  -[GKInviteInternal peerBlob]
  -[GKInviteInternal setPlayerGroup:]
  -[GKInviteInternal playerGroup]
  -[GKInviteInternal descriptionSubstitutionMap]
  -[GKInviteInternal playerAttributes]
  -[GKInviteInternal peerPushToken]
  -[GKInviteInternal peerNATType]
  -[GKInviteInternal peerNATIP]
  -[GKInviteInternal isMessageBasedInvite]
  -[GKInviteInternal setMatchType:]
  -[GKInviteInternal localizableMessage]
  -[GKInviteInternal setLocalizableMessage:]
  -[GKInviteInternal setPlayerAttributes:]
  -[GKInviteInternal setInviteID:]
  -[GKInviteInternal setPeerPushToken:]
  -[GKInviteInternal setPeerNATType:]
  -[GKInviteInternal setPeerNATIP:]
  -[GKInviteInternal setPeerBlob:]
  -[GKInviteInternal setIsMessageBasedInvite:]


GKCompatibilityEntryInternal : GKInternalRepresentation
 @property  NSString *bundleID
 @property  NSNumber *adamID
 @property  long long platform
 @property  NSSet *versions
 @property  NSSet *shortVersions

  // class methods
  +[GKCompatibilityEntryInternal secureCodedPropertyKeys]

  // instance methods
  -[GKCompatibilityEntryInternal adamID]
  -[GKCompatibilityEntryInternal bundleID]
  -[GKCompatibilityEntryInternal setPlatform:]
  -[GKCompatibilityEntryInternal platform]
  -[GKCompatibilityEntryInternal .cxx_destruct]
  -[GKCompatibilityEntryInternal isEqual:]
  -[GKCompatibilityEntryInternal setBundleID:]
  -[GKCompatibilityEntryInternal versions]
  -[GKCompatibilityEntryInternal setAdamID:]
  -[GKCompatibilityEntryInternal shortVersions]
  -[GKCompatibilityEntryInternal setVersions:]
  -[GKCompatibilityEntryInternal setShortVersions:]


GKDispatchGroup : NSObject
 @property  GKActivity *activity
 @property  NSError *error
 @property  id result
 @property  BOOL loggingEnabled

  // class methods
  +[GKDispatchGroup dispatchGroupWithName:]
  +[GKDispatchGroup waitUntilDone:]
  +[GKDispatchGroup mainQueue]
  +[GKDispatchGroup dispatchGroup]
  +[GKDispatchGroup backgroundConcurrentQueue]
  +[GKDispatchGroup defaultConcurrentQueue]

  // instance methods
  -[GKDispatchGroup setActivity:]
  -[GKDispatchGroup wait]
  -[GKDispatchGroup notifyOnQueue:block:]
  -[GKDispatchGroup objectForKeyedSubscript:]
  -[GKDispatchGroup allValues]
  -[GKDispatchGroup waitWithTimeout:]
  -[GKDispatchGroup perform:]
  -[GKDispatchGroup initWithName:]
  -[GKDispatchGroup setObject:forKeyedSubscript:]
  -[GKDispatchGroup init]
  -[GKDispatchGroup isLoggingEnabled]
  -[GKDispatchGroup result]
  -[GKDispatchGroup activity]
  -[GKDispatchGroup setResult:]
  -[GKDispatchGroup _values]
  -[GKDispatchGroup dealloc]
  -[GKDispatchGroup notifyOnMainQueueWithBlock:]
  -[GKDispatchGroup join:queue:block:]
  -[GKDispatchGroup setLoggingEnabled:]
  -[GKDispatchGroup _waitWithDispatchTimeout:]
  -[GKDispatchGroup enter]
  -[GKDispatchGroup leave]
  -[GKDispatchGroup setError:]
  -[GKDispatchGroup error]


GKGameSessionServiceInterface : GKServiceInterface
  // class methods
  +[GKGameSessionServiceInterface interfaceProtocol]
  +[GKGameSessionServiceInterface configureInterface:]


GKGameSessionServicePrivateInterface : GKServiceInterface
  // class methods
  +[GKGameSessionServicePrivateInterface interfaceProtocol]
  +[GKGameSessionServicePrivateInterface configureInterface:]


GKLeaderboardSummaryInternal : GKInternalRepresentation
 @property  NSString *baseLeaderboardID
 @property  NSString *leaderboardID
 @property  NSString *timeScope
 @property  NSString *groupID
 @property  NSString *title
 @property  NSString *type
 @property  NSString *formattedScoreValue
 @property  unsigned long context
 @property  unsigned long status
 @property  unsigned long startDate
 @property  unsigned long duration
 @property  unsigned long nextStartDate
 @property  unsigned long scoreValue
 @property  unsigned long rank
 @property  unsigned long totalEntries
 @property  unsigned long friendRank
 @property  unsigned long totalFriendEntries

  // class methods
  +[GKLeaderboardSummaryInternal secureCodedPropertyKeys]

  // instance methods
  -[GKLeaderboardSummaryInternal groupID]
  -[GKLeaderboardSummaryInternal timeScope]
  -[GKLeaderboardSummaryInternal setGroupID:]
  -[GKLeaderboardSummaryInternal setTimeScope:]
  -[GKLeaderboardSummaryInternal rank]
  -[GKLeaderboardSummaryInternal setTitle:]
  -[GKLeaderboardSummaryInternal setType:]
  -[GKLeaderboardSummaryInternal .cxx_destruct]
  -[GKLeaderboardSummaryInternal setDuration:]
  -[GKLeaderboardSummaryInternal setRank:]
  -[GKLeaderboardSummaryInternal setStartDate:]
  -[GKLeaderboardSummaryInternal title]
  -[GKLeaderboardSummaryInternal status]
  -[GKLeaderboardSummaryInternal type]
  -[GKLeaderboardSummaryInternal setStatus:]
  -[GKLeaderboardSummaryInternal startDate]
  -[GKLeaderboardSummaryInternal setContext:]
  -[GKLeaderboardSummaryInternal duration]
  -[GKLeaderboardSummaryInternal context]
  -[GKLeaderboardSummaryInternal friendRank]
  -[GKLeaderboardSummaryInternal nextStartDate]
  -[GKLeaderboardSummaryInternal baseLeaderboardID]
  -[GKLeaderboardSummaryInternal totalEntries]
  -[GKLeaderboardSummaryInternal setTotalEntries:]
  -[GKLeaderboardSummaryInternal setFriendRank:]
  -[GKLeaderboardSummaryInternal leaderboardID]
  -[GKLeaderboardSummaryInternal setLeaderboardID:]
  -[GKLeaderboardSummaryInternal scoreValue]
  -[GKLeaderboardSummaryInternal totalFriendEntries]
  -[GKLeaderboardSummaryInternal setBaseLeaderboardID:]
  -[GKLeaderboardSummaryInternal setNextStartDate:]
  -[GKLeaderboardSummaryInternal formattedScoreValue]
  -[GKLeaderboardSummaryInternal setFormattedScoreValue:]
  -[GKLeaderboardSummaryInternal setScoreValue:]
  -[GKLeaderboardSummaryInternal setTotalFriendEntries:]


FriendPlayedEntry : NSManagedObject
 @property  NSDate *playedAt
 @property  GKPlayerProfileCacheObject *friend

  // class methods
  +[FriendPlayedEntry fetchRequest]


FriendPlayedGameEntry : NSManagedObject
 @property  NSSet *friendsPlayed
 @property  GKGameCacheObject *game

  // class methods
  +[FriendPlayedGameEntry fetchRequest]


FriendsPlayedGameList : NSManagedObject
 @property  NSDate *expirationDate
 @property  NSSet *entries
 @property  GKGameCacheObject *game

  // class methods
  +[FriendsPlayedGameList fetchRequest]


GamePlatform : NSManagedObject
 @property  NSString *name
 @property  NSSet *game
 @property  NSSet *gameInfo

  // class methods
  +[GamePlatform fetchRequest]


GamesPlayed : NSManagedObject
 @property  NSDate *expirationDate
 @property  NSString *playerID
 @property  NSSet *entries

  // class methods
  +[GamesPlayed fetchRequest]


GamesPlayedSummaryList : NSManagedObject
 @property  NSDate *expirationDate
 @property  NSString *playerID
 @property  NSNumber *withinSecs
 @property  NSOrderedSet *entries

  // class methods
  +[GamesPlayedSummaryList fetchRequest]


GameSummary : NSManagedObject
 @property  NSNumber *adamID
 @property  NSString *bundleID
 @property  NSNumber *isArcade
 @property  NSDate *playedAt
 @property  NSSet *compatiblePlatforms
 @property  GamesPlayedSummaryList *list

  // class methods
  +[GameSummary fetchRequest]


GKCDFriendCodeDetail : NSManagedObject
 @property  NSString *alreadyUsedPlayerIds
 @property  NSString *creatorPlayerId
 @property  NSDate *expirationDate
 @property  NSString *friendCode
 @property  NSString *friendCodeState
 @property  NSNumber *numUses

  // class methods
  +[GKCDFriendCodeDetail fetchRequest]


GKCDGameAccessList : NSManagedObject
 @property  NSDate *expirationDate
 @property  NSSet *entries

  // class methods
  +[GKCDGameAccessList fetchRequest]


GKCDGameFriend : NSManagedObject
 @property  NSString *gamePlayerID
 @property  NSString *playerID
 @property  NSString *teamPlayerID
 @property  GKCDGameFriendList *list

  // class methods
  +[GKCDGameFriend fetchRequest]


GKCDGameFriendList : NSManagedObject
 @property  NSString *bundleID
 @property  NSDate *expirationDate
 @property  NSOrderedSet *entries

  // class methods
  +[GKCDGameFriendList fetchRequest]


GKCDGameSettings : NSManagedObject
 @property  NSString *allowFriendListAccess
 @property  NSString *bundleID
 @property  NSDate *expirationDate
 @property  NSDate *timeStamp

  // class methods
  +[GKCDGameSettings fetchRequest]


MessageInboxEntry : NSManagedObject
 @property  NSString *contactID
 @property  NSString *friendCode
 @property  NSString *senderAlias
 @property  NSString *senderHandle
 @property  NSString *value

  // class methods
  +[MessageInboxEntry fetchRequest]


MultiplayerGroup : NSManagedObject
 @property  NSString *id
 @property  NSNumber *numberOfAutomatched
 @property  NSNumber *playedAt
 @property  NSSet *entries
 @property  MultiplayerGroupList *list

  // class methods
  +[MultiplayerGroup fetchRequest]


MultiplayerGroupList : NSManagedObject
 @property  NSDate *expirationDate
 @property  NSSet *entries

  // class methods
  +[MultiplayerGroupList fetchRequest]


MultiplayerGroupParticipant : NSManagedObject
 @property  NSString *playerID

  // class methods
  +[MultiplayerGroupParticipant fetchRequest]


ReengagementAchievementEntry : NSManagedObject
 @property  NSString *bundleID
 @property  NSDate *expirationDate
 @property  NSString *identifier
 @property  NSDate *lastReportedDate
 @property  NSNumber *percentComplete
 @property  NSString *playerID

  // class methods
  +[ReengagementAchievementEntry fetchRequest]


(GKCachingAdditions)
	// class methods
	+[(GKCachingAdditions) stringForPercentileWithRank:totalScores:asPercentile:isTop:]
	+[(GKCachingAdditions) stringForPercentileRankingWithRank:totalScores:]
	+[(GKCachingAdditions) _gkUUIDString]
	+[(GKCachingAdditions) stringForParanthenticalPercentileRankingWithRank:totalScores:]
	+[(GKCachingAdditions) stringForRankAndPercentileWithRank:totalScores:]
	+[(GKCachingAdditions) stringForScoreAndPercentileWithRank:totalScores:formattedScore:]

	// instance methods
	-[(GKCachingAdditions) _gkIsNaturallyRTL]
	-[(GKCachingAdditions) _gkSearchMatchesItem:withSearchTerms:]
	-[(GKCachingAdditions) _gkLocaleSensitiveUppercaseString]
	-[(GKCachingAdditions) cacheKeyRepresentation]
	-[(GKCachingAdditions) _gkStringByUnescapingFromURLQuery]
	-[(GKCachingAdditions) _gkSHA1HashString]
	-[(GKCachingAdditions) _gkMD5HashString]
	-[(GKCachingAdditions) _gkSHA1HashData]
	-[(GKCachingAdditions) _gkMD5HashData]
	-[(GKCachingAdditions) processUTF16CharactersForBidi:]
	-[(GKCachingAdditions) _gkIsMixedDirection]
	-[(GKCachingAdditions) _gkTruncationSymbolWithFormat:]
	-[(GKCachingAdditions) _gkArrayByTokenizingString]
	-[(GKCachingAdditions) _gkSHA256Hash]

(GKCachingAdditions)
	// class methods
	+[(GKCachingAdditions) _gkGenerateFriendRequestURL:]

	// instance methods
	-[(GKCachingAdditions) _gkURLByAddingQueryParameters:]
	-[(GKCachingAdditions) cacheKeyRepresentation]
	-[(GKCachingAdditions) _gkIsValidServerURL]
	-[(GKCachingAdditions) _gkIsSecure]
	-[(GKCachingAdditions) _gkURLByReplacingSchemeWithScheme:]
	-[(GKCachingAdditions) _gkQueryDictionary]

NSHTTPURLResponse(GKCachingAdditions)
	// instance methods
	-[NSHTTPURLResponse(GKCachingAdditions) _maxAge]
	-[NSHTTPURLResponse(GKCachingAdditions) getSAPSignature]

NSFileManager(GKCachingAdditions)
	// instance methods
	-[NSFileManager(GKCachingAdditions) _gkReadXattrBytes:count:withName:path:]
	-[NSFileManager(GKCachingAdditions) _gkWriteXattrBytes:count:withName:path:]
	-[NSFileManager(GKCachingAdditions) _gkRemoveXattrNamed:path:]
	-[NSFileManager(GKCachingAdditions) _gkExpirationIntervalOfFileAtPath:]
	-[NSFileManager(GKCachingAdditions) _gkSetExpirationInterval:ofFileAtPath:]

(GKCollectionUtils)
	// class methods
	+[(GKCollectionUtils) _gkArrayWithIndexSet:]

	// instance methods
	-[(GKCollectionUtils) _gkGuestPlayersFromPlayers]
	-[(GKCollectionUtils) _gkDescriptionWithChildren:]
	-[(GKCollectionUtils) _gkValuesForKeyPath:]
	-[(GKCollectionUtils) _gkFilterWithBlock:]
	-[(GKCollectionUtils) _gkMapWithBlock:]
	-[(GKCollectionUtils) _gkNonGuestPlayersFromPlayers]
	-[(GKCollectionUtils) _gkPlayersIDsFromPlayers]
	-[(GKCollectionUtils) _gkIncompletePlayersFromPlayerIDs]
	-[(GKCollectionUtils) _gkMapDictionaryWithKeyPath:valueKeyPath:]
	-[(GKCollectionUtils) _gkMapConcurrentlyWithBlock:]
	-[(GKCollectionUtils) _gkSubarraysByKeyWithBlock:]
	-[(GKCollectionUtils) _gkMapDictionaryWithKeyPath:]
	-[(GKCollectionUtils) _gkDistinctValuesForKeyPath:]
	-[(GKCollectionUtils) _gkFirstObject]
	-[(GKCollectionUtils) _gkFoldWithInitialValue:block:]
	-[(GKCollectionUtils) _gkOrderedSet]
	-[(GKCollectionUtils) _gkInternalsFromPlayers]
	-[(GKCollectionUtils) _gkPlayersFromInternals]
	-[(GKCollectionUtils) _gkValidatePlayersForReturnFromAPI]

(GKCollectionUtils)
	// instance methods
	-[(GKCollectionUtils) _gkDescriptionWithChildren:]
	-[(GKCollectionUtils) _gkValuesForKeyPath:]
	-[(GKCollectionUtils) _gkMapWithBlock:]
	-[(GKCollectionUtils) _gkMapDictionaryWithKeyPath:valueKeyPath:]
	-[(GKCollectionUtils) _gkMapDictionaryWithKeyPath:]
	-[(GKCollectionUtils) _gkDistinctValuesForKeyPath:]
	-[(GKCollectionUtils) _gkSetByRemovingObject:]

NSIndexSet(GKCollectionUtils)
	// class methods
	+[NSIndexSet(GKCollectionUtils) _gkIndexSetWithArray:]

	// instance methods
	-[NSIndexSet(GKCollectionUtils) _gkIndexSetByRemovingIndex:]
	-[NSIndexSet(GKCollectionUtils) _gkIndexSetByAddingIndex:]

(GKCollectionUtils)
	// instance methods
	-[(GKCollectionUtils) _gkDescriptionWithChildren:]
	-[(GKCollectionUtils) _gkValuesForKeyPath:]
	-[(GKCollectionUtils) _gkMapDictionaryWithKeyPath:valueKeyPath:]
	-[(GKCollectionUtils) _gkMapDictionaryWithKeyPath:]
	-[(GKCollectionUtils) _gkDistinctValuesForKeyPath:]
	-[(GKCollectionUtils) _gkFirstObject]
	-[(GKCollectionUtils) _gkIsEqualToOrderedSet:]
	-[(GKCollectionUtils) _gkSortedOrderedSetUsingDescriptors:]
	-[(GKCollectionUtils) _gkFilteredOrderedSetUsingPredicate:]

(GKCollectionUtils)
	// class methods
	+[(GKCollectionUtils) _gkDictionaryWithFormEncodedString:]
	+[(GKCollectionUtils) _gkImageCacheKeyPathsByKey]
	+[(GKCollectionUtils) _gkClientImageDictionaryForServerImageURLs:]

	// instance methods
	-[(GKCollectionUtils) _gkDescriptionWithChildren:]
	-[(GKCollectionUtils) _gkImageURLForSize:scale:]
	-[(GKCollectionUtils) _gkDictionaryByRemovingObjectsForKeys:]
	-[(GKCollectionUtils) _gkDictionaryByRemovingObjectForKey:]
	-[(GKCollectionUtils) _gkSubDictionaryWithKeys:]
	-[(GKCollectionUtils) _gkSubDictionaryWithKeys:mappedToNewKeys:]
	-[(GKCollectionUtils) _gkValuesForKeys:]
	-[(GKCollectionUtils) _gkImageURLForSize:scale:foundSize:]

<DEREK BUG Categories!>(GKAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(GKAdditions) _gkAddEntriesFromFormEncodedString:]

NSMapTable(GKAdditions)
	// instance methods
	-[NSMapTable(GKAdditions) objectForKeyedSubscript:]
	-[NSMapTable(GKAdditions) setObject:forKeyedSubscript:]
	-[NSMapTable(GKAdditions) _gkEnumerateKeysAndObjectsUsingBlock:]

(GKDigestUtils)
	// class methods
	+[(GKDigestUtils) _gkLoadRemoteImageDataForURL:subdirectory:filename:queue:handler:]
	+[(GKDigestUtils) _gkLoadRemoteImageDataForUrl:subdirectory:filename:queue:imageQueue:handler:]
	+[(GKDigestUtils) _gkRequestClientsRemoteImageDataForURL:queue:reply:]
	+[(GKDigestUtils) _gkLoadRemoteImageDataForORBForURL:queue:handler:]

	// instance methods
	-[(GKDigestUtils) _gkSHA1HashString]
	-[(GKDigestUtils) _gkMD5HashString]
	-[(GKDigestUtils) _gkSHA1HashData]
	-[(GKDigestUtils) _gkMD5HashData]
	-[(GKDigestUtils) _gkBase64EncodedString]
	-[(GKDigestUtils) initWithBase64EncodedString_gk:]
	-[(GKDigestUtils) _gkZippedDictionaryValue]

NSURLRequest(GKSAPSession)
	// instance methods
	-[NSURLRequest(GKSAPSession) _gkSAPSession]
	-[NSURLRequest(GKSAPSession) _gkSetSAPSession:]
	-[NSURLRequest(GKSAPSession) _gkDictionaryKey]
	-[NSURLRequest(GKSAPSession) loggableHeaders]

NSMutableURLRequest(GKAdditions)
	// class methods
	+[NSMutableURLRequest(GKAdditions) hashForPlayerID:]
	+[NSMutableURLRequest(GKAdditions) _gkHTTPRequestWithURL:method:postData:]

	// instance methods
	-[NSMutableURLRequest(GKAdditions) setBuildVersion:]
	-[NSMutableURLRequest(GKAdditions) setLocale:]
	-[NSMutableURLRequest(GKAdditions) setProtocolVersion:]
	-[NSMutableURLRequest(GKAdditions) setPushToken:]
	-[NSMutableURLRequest(GKAdditions) setDeviceUniqueID:]
	-[NSMutableURLRequest(GKAdditions) setInternal:]
	-[NSMutableURLRequest(GKAdditions) setProcessName:]
	-[NSMutableURLRequest(GKAdditions) setRestrictions:]
	-[NSMutableURLRequest(GKAdditions) setPlayerID:hash:authToken:]
	-[NSMutableURLRequest(GKAdditions) setGameDescriptor:]
	-[NSMutableURLRequest(GKAdditions) setStoreMode:]
	-[NSMutableURLRequest(GKAdditions) setSAPSignature:]
	-[NSMutableURLRequest(GKAdditions) setSAPversion:]

NSBundle(GKVersioning)
	// class methods
	+[NSBundle(GKVersioning) _gkPreferredSystemLanguage]
	+[NSBundle(GKVersioning) _gkMainBundleIsGameCenterSystemProcess]
	+[NSBundle(GKVersioning) _gkBundleWithIdentifier:]
	+[NSBundle(GKVersioning) _gkLocalizedMessageFromDictionary:]
	+[NSBundle(GKVersioning) _gkLocalizedMessageFromDictionary:forBundleID:]
	+[NSBundle(GKVersioning) _gkLocalizedMessageFromPushDictionary:forBundleID:]

	// instance methods
	-[NSBundle(GKVersioning) _gkPathForMessageImage]
	-[NSBundle(GKVersioning) _gkIsGameCenterExtension]
	-[NSBundle(GKVersioning) _gkIsPurpleBuddy]
	-[NSBundle(GKVersioning) _gkIsPreferences]
	-[NSBundle(GKVersioning) _gkIsFirstParty]
	-[NSBundle(GKVersioning) _gkBundleVersion]
	-[NSBundle(GKVersioning) _gkBundleShortVersion]
	-[NSBundle(GKVersioning) _gkLocalizedName]
	-[NSBundle(GKVersioning) _gkFrameworkVersionDescription]
	-[NSBundle(GKVersioning) _gkLocalizedStringForKey:value:table:language:]
	-[NSBundle(GKVersioning) _gkSystemLocalizedStringForKey:value:table:]
	-[NSBundle(GKVersioning) _gkLocalizedStringForKey:defaultValue:arguments:]
	-[NSBundle(GKVersioning) _gkIsGameCenter]
	-[NSBundle(GKVersioning) _gkIsDaemon]
	-[NSBundle(GKVersioning) _gkPathForImageWithName:]
	-[NSBundle(GKVersioning) _gkPathForSoundWithName:]
	-[NSBundle(GKVersioning) _gkIsBadgingEnabled]
	-[NSBundle(GKVersioning) _gkPathForInviteSound]
	-[NSBundle(GKVersioning) _gkPathForChallengeSound]

(GKExtensions)
	// class methods
	+[(GKExtensions) _gkFormattedTimeIntervalStringWithStartDate:endDate:calendarUnits:style:]
	+[(GKExtensions) _gkServerTimestamp]
	+[(GKExtensions) _gkDateFromScalarServerTimestamp:]
	+[(GKExtensions) _gkDateFromServerTimestamp:]

	// instance methods
	-[(GKExtensions) _gkFormattedWhenStringWithOptions:]
	-[(GKExtensions) _gkFormattedDateForStyle:relative:]
	-[(GKExtensions) _gkFormattedStringWithDateStyle:timeStyle:]
	-[(GKExtensions) _gkServerTimestamp]

(GKAdditions)
	// class methods
	+[(GKAdditions) _gkDefaultKeymap]

	// instance methods
	-[(GKAdditions) _gkDescriptionWithChildren:]
	-[(GKAdditions) _gkRecursiveDescription]
	-[(GKAdditions) _gkDescription]
	-[(GKAdditions) _gkPerformSelector:]
	-[(GKAdditions) _gkInvokeSelector:]
	-[(GKAdditions) _gkPerformSelector:withObject:]
	-[(GKAdditions) _gkRemoveObserverWithBlockToken:]
	-[(GKAdditions) _gkAddObserverForKeyPath:options:withBlock:]
	-[(GKAdditions) _gkPerformSelector:withObject:withObject:]
	-[(GKAdditions) _gkPerformSelector:withNullableObject:]
	-[(GKAdditions) _gkInvokeSelector:withNullableObject:]
	-[(GKAdditions) _gkPopulateWithObject:keymap:]
	-[(GKAdditions) _gkInvokeSelector:withObject:]
	-[(GKAdditions) _gkViewDebuggingChildKeys]
	-[(GKAdditions) _gkViewDebuggingChildren]

NSURLSession(GKAdditions)
	// class methods
	+[NSURLSession(GKAdditions) _gkSendAsynchronousRequest:completionHandler:]

NSFormatter(GKAdditions)
	// instance methods
	-[NSFormatter(GKAdditions) _gkUpdateLocale]

(GKAdditions)
	// class methods
	+[(GKAdditions) gk_formatInteger:withGrouping:]
	+[(GKAdditions) gkRankFormatter]
	+[(GKAdditions) gk_formatUnsignedInteger:withGrouping:]

(GKServerTimestamp)
	// class methods
	+[(GKServerTimestamp) _gkServerTimeInterval:]

<DEREK BUG Categories!>(GKAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(GKAdditions) _gkMutableOrderedSet]

NSPropertyListSerialization(GKAdditions)
	// class methods
	+[NSPropertyListSerialization(GKAdditions) _gkTypesafePropertyListWithData:withClass:]

(GameKitErrors)
	// class methods
	+[(GameKitErrors) userErrorForCode:userInfo:]
	+[(GameKitErrors) userErrorForCode:underlyingError:]
	+[(GameKitErrors) userErrorForServerCode:reason:]
	+[(GameKitErrors) userErrorForServerError:userInfo:]
	+[(GameKitErrors) serverErrorForCode:withReason:]
	+[(GameKitErrors) userErrorForServerError:]
	+[(GameKitErrors) serverErrorForCode:withUserInfo:]
	+[(GameKitErrors) userErrorForServerCode:reason:userInfo:]
	+[(GameKitErrors) _gkUnauthenticatedError]
	+[(GameKitErrors) _gkUserErrorForGameSessionErrorCode:userInfo:]
	+[(GameKitErrors) _gkUserErrorForTournamentErrorCode:reason:userInfo:]

	// instance methods
	-[(GameKitErrors) _gkIsUnauthenticatedError]

ACAccount(GameCenter)
	// instance methods
	-[ACAccount(GameCenter) _gkCredentialsForEnvironment:]
	-[ACAccount(GameCenter) _gkTokenForEnvironment:]
	-[ACAccount(GameCenter) _gkPerEnvironmentTokens]
	-[ACAccount(GameCenter) _gkPlayerInternal]
	-[ACAccount(GameCenter) _gkPropertyForKey:environment:]
	-[ACAccount(GameCenter) _gkModifiedDateForProperty:environment:]
	-[ACAccount(GameCenter) _gkCredentials]
	-[ACAccount(GameCenter) _gkIsPrimaryForEnvironment:]
	-[ACAccount(GameCenter) _gkSetToken:forEnvironment:]
	-[ACAccount(GameCenter) _gkSetPlayerInternal:]
	-[ACAccount(GameCenter) _gkCredentialForEnvironment:]
	-[ACAccount(GameCenter) _gkSetProperty:forKey:environment:]

ACAccountStore(GameCenter)
	// instance methods
	-[ACAccountStore(GameCenter) _gkSaveCredential:completionHandler:]
	-[ACAccountStore(GameCenter) _gkAllCredentialsForEnvironment:]
	-[ACAccountStore(GameCenter) _getAltDSIDFromIDMSForCredential:completionHandler:]
	-[ACAccountStore(GameCenter) _gkDeleteCredential:completionHandler:]
	-[ACAccountStore(GameCenter) _gkPrimaryCredentialForEnvironment:]
	-[ACAccountStore(GameCenter) _gkCredentialForUsername:environment:]
	-[ACAccountStore(GameCenter) _gkAccountForAppleID:]
	-[ACAccountStore(GameCenter) _gkMapAccountsWithBlock:]
	-[ACAccountStore(GameCenter) _gkSetScope:forCredential:completionHandler:]
	-[ACAccountStore(GameCenter) _gkAllCredentials]

AMSMetricsEvent(GK)
	// class methods
	+[AMSMetricsEvent(GK) gkDefaultProperties]
	+[AMSMetricsEvent(GK) gkRequiredProperties]
	+[AMSMetricsEvent(GK) bundleIDAllowed]
	+[AMSMetricsEvent(GK) gkEventWithDomain:amsProperties:eventProperties:]

NSInvocation(GKProxyHelpers)
	// class methods
	+[NSInvocation(GKProxyHelpers) _gkInvocationWithBlock:]

	// instance methods
	-[NSInvocation(GKProxyHelpers) _gkInvokeOnce]
	-[NSInvocation(GKProxyHelpers) _gkHasReplyBlock]
	-[NSInvocation(GKProxyHelpers) _gkCopyArguments]
	-[NSInvocation(GKProxyHelpers) _gkReplyHandlerInvocation]
	-[NSInvocation(GKProxyHelpers) _gkCallbackWithError:queue:]
	-[NSInvocation(GKProxyHelpers) _gkInvokeOnceWithTarget:]
	-[NSInvocation(GKProxyHelpers) _gkClearCopiedArguments]
	-[NSInvocation(GKProxyHelpers) _gkPrepareForCallWithError:]
	-[NSInvocation(GKProxyHelpers) _gkClearTarget]
	-[NSInvocation(GKProxyHelpers) _gkPrintBlockSignature]
	-[NSInvocation(GKProxyHelpers) __gkPrepareForFakeCallbackWithNoData:orError:]
	-[NSInvocation(GKProxyHelpers) _gkClearArgumentAtIndex:]

NSMethodSignature(GKAdditions)
	// instance methods
	-[NSMethodSignature(GKAdditions) _gkHasReplyBlock]
	-[NSMethodSignature(GKAdditions) _gkTakesBlockAtIndex:]

NSManagedObject(GKCache)
	// class methods
	+[NSManagedObject(GKCache) _gkFetchRequest]
	+[NSManagedObject(GKCache) _gkRetrieveCleanEntry:request:]

	// instance methods
	-[NSManagedObject(GKCache) _gkIsExpired:]

01 00 1700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 1700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountCredential 
01 00 1700 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1a00 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 0c00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBag 
01 00 0c00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSBagKeySet 
01 00 0c00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSDevice 
01 00 0c00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSLookup 
01 00 0c00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetrics 
01 00 0c00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetricsEvent 
01 00 0c00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetricsLoadURLContext 
01 00 0c00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSMetricsLoadURLEvent 
01 00 0a00 /System/Library/PrivateFrameworks/AppStoreComponents.framework/AppStoreComponents: ASCArtwork 
01 00 0b00 /System/Library/PrivateFrameworks/ChronoServices.framework/ChronoServices: CHSTimelineController 
01 00 1600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 1600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 1600 /System/Library/Frameworks/Contacts.framework/Contacts: CNMutableContact 
01 00 0600 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSSystemService 
01 00 1b00 /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices: GKConnection 
01 00 1b00 /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices: GKSConnectivitySettings 
01 00 1b00 /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices: GKSessionInternal 
01 00 1b00 /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices: GKVoiceChatServiceFocus 
01 00 1b00 /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices: GKVoiceChatSession 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 1100 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0100 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateComponentsFormatter 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSFetchRequest 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileCoordinator 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileVersion 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileWrapper 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSManagedObject 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMetadataQuery 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCache 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessMonitor 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessPredicate 
01 00 0d00 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessStateDescriptor 
01 00 0e00 /System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester: _PSContactSuggestion 
01 00 0e00 /System/Library/PrivateFrameworks/PeopleSuggester.framework/PeopleSuggester: _PSSuggestion 
