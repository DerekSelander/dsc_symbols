|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingCorrectionDependency
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingCorrectionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingCorrectionOwner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDependency
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionDependency
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionEventBackwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionEventForwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionEventIntervalEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionEventPointEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionOwner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionRuleEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingDistributionRuleManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingEnergyEstimateEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingEnergyEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingNodeEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingNodeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingOwner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingOwnerDependencyManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingPowerEventBackwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingPowerEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingPowerEventForwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingPowerEventIntervalEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationDependency
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationEventBackwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationEventForwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationEventIntervalEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationEventPointEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationOwner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationRuleEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingQualificationRuleManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingRange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingRuleEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAccountingRuleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingCorrectionDependency
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingCorrectionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingCorrectionOwner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDependency
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionDependency
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionEventBackwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionEventForwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionEventIntervalEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionEventPointEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionOwner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionRuleEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingDistributionRuleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingEnergyEstimateEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingEnergyEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingNodeEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingNodeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingOwner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingOwnerDependencyManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingPowerEventBackwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingPowerEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingPowerEventForwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingPowerEventIntervalEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationDependency
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationEventBackwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationEventEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationEventForwardEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationEventIntervalEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationEventPointEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationOwner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationRuleEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingQualificationRuleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingRange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingRuleEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAccountingRuleManager
|| __TEXT.__const _kPLAccountingRangeMinIntersectionOverlap
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ PowerlogCore: _OBJC_CLASS_$_PLAccountingOperator
__ PowerlogCore: _OBJC_CLASS_$_PLActivityCriterionTime
__ PowerlogCore: _OBJC_CLASS_$_PLActivityScheduler
__ PowerlogCore: _OBJC_CLASS_$_PLCoreStorage
__ PowerlogCore: _OBJC_CLASS_$_PLDefaults
__ PowerlogCore: _OBJC_CLASS_$_PLEntry
__ PowerlogCore: _OBJC_CLASS_$_PLEntryDefinition
__ PowerlogCore: _OBJC_CLASS_$_PLEntryNotificationOperatorComposition
__ PowerlogCore: _OBJC_CLASS_$_PLPlatform
__ PowerlogCore: _OBJC_CLASS_$_PLStorageCache
__ PowerlogCore: _OBJC_CLASS_$_PLTimer
__ PowerlogCore: _OBJC_CLASS_$_PLUtilities
__ PowerlogCore: _OBJC_CLASS_$_PLValueComparison
__ PowerlogCore: _OBJC_CLASS_$_PowerlogCore
__ PowerlogCore: _OBJC_METACLASS_$_PLEntry
__ PowerlogCore: _PLLogCommon
__ PowerlogCore: _kPLAccountingOperatorAggregateNameQualificationEnergy
__ PowerlogCore: _kPLAccountingOperatorAggregateNameQualificationEnergyEnergy
__ PowerlogCore: _kPLAccountingOperatorAggregateNameQualificationEnergyNodeID
__ PowerlogCore: _kPLAccountingOperatorAggregateNameQualificationEnergyQualificationID
__ PowerlogCore: _kPLAccountingOperatorAggregateNameQualificationEnergyRootNodeID
__ PowerlogCore: _kPLAccountingOperatorAggregateNameRootNodeEnergy
__ PowerlogCore: _kPLAccountingOperatorAggregateNameRootNodeEnergyEnergy
__ PowerlogCore: _kPLAccountingOperatorAggregateNameRootNodeEnergyNodeID
__ PowerlogCore: _kPLAccountingOperatorAggregateNameRootNodeEnergyRootNodeID
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEvents
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsCorrectionDate
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsCorrectionEnergy
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsDistributionDate
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsDistributionRuleID
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsEndOffset
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsEnergy
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsNodeID
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsNumAncestors
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsParentEntryID
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsQualificationDate
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsQualificationRuleIDSum
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsRootNodeID
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsStartOffset
__ PowerlogCore: _kPLAccountingOperatorEventIntervalNameEnergyEstimateEventsTerminationRatio
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameDistributionRules
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameDistributionRulesDistributionID
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameDistributionRulesNodeID
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameDistributionRulesRootNodeID
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameNodes
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameNodesIsPermanent
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameNodesName
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameQualificationRules
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameQualificationRulesQualificationID
__ PowerlogCore: _kPLAccountingOperatorEventNoneNameQualificationRulesRootNodeID
__ PowerlogCore: _kPLAccountingOperatorNameDistributionEvents
__ PowerlogCore: _kPLAccountingOperatorNameDistributionEventsChildNodeID
__ PowerlogCore: _kPLAccountingOperatorNameDistributionEventsDistributionID
__ PowerlogCore: _kPLAccountingOperatorNameDistributionEventsEndOffset
__ PowerlogCore: _kPLAccountingOperatorNameDistributionEventsStartOffset
__ PowerlogCore: _kPLAccountingOperatorNamePowerEvents
__ PowerlogCore: _kPLAccountingOperatorNamePowerEventsPower
__ PowerlogCore: _kPLAccountingOperatorNamePowerEventsRootNodeID
__ PowerlogCore: _kPLAccountingOperatorNameQualificationEvents
__ PowerlogCore: _kPLAccountingOperatorNameQualificationEventsChildNodeID
__ PowerlogCore: _kPLAccountingOperatorNameQualificationEventsEndOffset
__ PowerlogCore: _kPLAccountingOperatorNameQualificationEventsQualificationID
__ PowerlogCore: _kPLAccountingOperatorNameQualificationEventsStartOffset
__ PowerlogCore: _kPLED_AggregateKey
__ PowerlogCore: _kPLED_DynamicKey
__ PowerlogCore: _kPLED_EventBackwardKey
__ PowerlogCore: _kPLED_EventForwardKey
__ PowerlogCore: _kPLED_EventIntervalKey
__ PowerlogCore: _kPLED_EventNoneKey
__ PowerlogCore: _kPLED_EventPointKey
__ libSystem.B.dylib: _CCCrypt
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_and_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fscanf
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
PLAccountingDistributionEventEntry : PLAccountingEventEntry
 @property  BOOL _distributeRangeWeightedTotal
 @property  NSNumber *distributionID
 @property  NSDictionary *childNodeIDToWeight
 @property  NSDictionary *childNodeNameToWeight
 @property  BOOL distributeRangeWeightedTotal

  // class methods
  +[PLAccountingDistributionEventEntry load]

  // instance methods
  -[PLAccountingDistributionEventEntry distributionID]
  -[PLAccountingDistributionEventEntry .cxx_destruct]
  -[PLAccountingDistributionEventEntry subEntryKey]
  -[PLAccountingDistributionEventEntry initWithDistributionID:withChildNodeIDToWeight:withRange:]
  -[PLAccountingDistributionEventEntry instanceDirectionality]
  -[PLAccountingDistributionEventEntry childNodeIDToWeight]
  -[PLAccountingDistributionEventEntry initWithDistributionID:withChildNodeNameToWeight:withRange:]
  -[PLAccountingDistributionEventEntry distributeRangeWeightedTotal]
  -[PLAccountingDistributionEventEntry childNodeNameToWeight]
  -[PLAccountingDistributionEventEntry isEqualContentsWithEvent:]
  -[PLAccountingDistributionEventEntry isEmptyEvent]
  -[PLAccountingDistributionEventEntry _distributeRangeWeightedTotal]
  -[PLAccountingDistributionEventEntry set_distributeRangeWeightedTotal:]


PLAccountingDependency : NSObject
 @property  NSMutableSet *observingOwnerIDs
 @property  <PLAccountingDependencyManager> *manager
 @property  NSNumber *ID
 @property  PLAccountingRange *range
 @property  NSDate *activationDate

  // instance methods
  -[PLAccountingDependency range]
  -[PLAccountingDependency ID]
  -[PLAccountingDependency setManager:]
  -[PLAccountingDependency .cxx_destruct]
  -[PLAccountingDependency setRange:]
  -[PLAccountingDependency setID:]
  -[PLAccountingDependency setActivationDate:]
  -[PLAccountingDependency activate]
  -[PLAccountingDependency manager]
  -[PLAccountingDependency deactivate]
  -[PLAccountingDependency activationDate]
  -[PLAccountingDependency setObservingOwnerIDs:]
  -[PLAccountingDependency observingOwnerIDs]
  -[PLAccountingDependency didReceiveOwner:]
  -[PLAccountingDependency updateWithEndDate:]


PLAccountingQualificationEventEntry : PLAccountingEventEntry
 @property  NSNumber *qualificationID
 @property  NSSet *childNodeIDs
 @property  NSSet *childNodeNames

  // class methods
  +[PLAccountingQualificationEventEntry load]

  // instance methods
  -[PLAccountingQualificationEventEntry qualificationID]
  -[PLAccountingQualificationEventEntry .cxx_destruct]
  -[PLAccountingQualificationEventEntry subEntryKey]
  -[PLAccountingQualificationEventEntry instanceDirectionality]
  -[PLAccountingQualificationEventEntry isEqualContentsWithEvent:]
  -[PLAccountingQualificationEventEntry isEmptyEvent]
  -[PLAccountingQualificationEventEntry initWithQualificationID:withChildNodeIDs:withRange:]
  -[PLAccountingQualificationEventEntry childNodeIDs]
  -[PLAccountingQualificationEventEntry initWithQualificationID:withChildNodeNames:withRange:]
  -[PLAccountingQualificationEventEntry childNodeNames]


PLAccountingQualificationManager : PLAccountingOwnerDependencyManager
 @property  <PLAccountingQualificationManagerDelegate> *delegate
 @property  PLAccountingEnergyEventEntry *lastQualifiedEnergyEvent

  // class methods
  +[PLAccountingQualificationManager freeTimerInterval]

  // instance methods
  -[PLAccountingQualificationManager setLastQualifiedEnergyEvent:]
  -[PLAccountingQualificationManager dependencyIDsForOwner:]
  -[PLAccountingQualificationManager ownerIDsForDependency:]
  -[PLAccountingQualificationManager .cxx_destruct]
  -[PLAccountingQualificationManager setDelegate:]
  -[PLAccountingQualificationManager closeLastQualificationEventForwardWithQualificationID:withEndDate:]
  -[PLAccountingQualificationManager didQualifyEnergyEvent:withRootNodeID:withQualificationID:]
  -[PLAccountingQualificationManager addQualificationEvent:]
  -[PLAccountingQualificationManager reloadDependenciesNewerThanDate:]
  -[PLAccountingQualificationManager lastQualifiedEnergyEvent]
  -[PLAccountingQualificationManager delegate]
  -[PLAccountingQualificationManager addEnergyEstimate:withNow:]


PLAccountingCorrectionDependency : PLAccountingDependency
 @property  PLAccountingEnergyEventEntry *energyEvent

  // instance methods
  -[PLAccountingCorrectionDependency range]
  -[PLAccountingCorrectionDependency ID]
  -[PLAccountingCorrectionDependency .cxx_destruct]
  -[PLAccountingCorrectionDependency setEnergyEvent:]
  -[PLAccountingCorrectionDependency energyEvent]
  -[PLAccountingCorrectionDependency initWithEnergyEvent:]
  -[PLAccountingCorrectionDependency activationDate]


PLAccountingCorrectionOwner : PLAccountingOwner
 @property  <PLAccountingCorrectionOwnerManager> *manager
 @property  PLAccountingEnergyEstimateEventEntry *rootEnergyEstimate

  // instance methods
  -[PLAccountingCorrectionOwner range]
  -[PLAccountingCorrectionOwner ID]
  -[PLAccountingCorrectionOwner setRunDate:]
  -[PLAccountingCorrectionOwner .cxx_destruct]
  -[PLAccountingCorrectionOwner setRootEnergyEstimate:]
  -[PLAccountingCorrectionOwner initWithRootEnergyEstimate:]
  -[PLAccountingCorrectionOwner rootEnergyEstimate]
  -[PLAccountingCorrectionOwner correct]
  -[PLAccountingCorrectionOwner run]
  -[PLAccountingCorrectionOwner activationDate]


PLAccountingNodeEntry : PLEntry
 @property  NSString *name

  // class methods
  +[PLAccountingNodeEntry load]
  +[PLAccountingNodeEntry entryKey]

  // instance methods
  -[PLAccountingNodeEntry name]
  -[PLAccountingNodeEntry initWithRootNodeID:]
  -[PLAccountingNodeEntry initWithName:]
  -[PLAccountingNodeEntry isEqual:]
  -[PLAccountingNodeEntry initEntryWithRawData:]


PLAccountingDistributionManager : PLAccountingOwnerDependencyManager <PLAccountingDistributionOwnerManager>
 @property  <PLAccountingDistributionManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLAccountingDistributionManager freeTimerInterval]

  // instance methods
  -[PLAccountingDistributionManager dependencyIDsForOwner:]
  -[PLAccountingDistributionManager ownerIDsForDependency:]
  -[PLAccountingDistributionManager .cxx_destruct]
  -[PLAccountingDistributionManager closeLastDistributionEventForwardWithDistributionID:withEndDate:]
  -[PLAccountingDistributionManager addDistributionEvent:]
  -[PLAccountingDistributionManager setDelegate:]
  -[PLAccountingDistributionManager init]
  -[PLAccountingDistributionManager reloadDependenciesNewerThanDate:]
  -[PLAccountingDistributionManager didDistributeToChildEnergyEstimate:fromParentEnergyEstimate:]
  -[PLAccountingDistributionManager delegate]
  -[PLAccountingDistributionManager addEnergyEstimate:withNow:]
  -[PLAccountingDistributionManager didDistributeEnergyEstimate:]


PLAccountingEngine : NSObject <PLAccountingDistributionManagerDelegate, PLAccountingCorrectionManagerDelegate, PLAccountingQualificationManagerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  PLActivity *chunkActivity
 @property  PLEntryNotificationOperatorComposition *batteryListener
 @property  BOOL pluggedIn
 @property  PLAccountingDistributionManager *distributionManager
 @property  PLAccountingCorrectionManager *correctionManager
 @property  PLAccountingQualificationManager *qualificationManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLAccountingEngine sharedInstance]
  +[PLAccountingEngine maxPowerEventChunkInterval]
  +[PLAccountingEngine deviceSoCRootNodeIDs]
  +[PLAccountingEngine gasGaugeEntryKey]
  +[PLAccountingEngine normalizeWeights:]
  +[PLAccountingEngine minEnergy]
  +[PLAccountingEngine debugInstance]
  +[PLAccountingEngine allQualificationIDs]
  +[PLAccountingEngine distributionIDForDistributionName:]
  +[PLAccountingEngine accountingDebugEnabled]
  +[PLAccountingEngine qualificationIDForQualificationName:]
  +[PLAccountingEngine deviceBBRootNodeIDs]
  +[PLAccountingEngine clearWithEntryKey:]
  +[PLAccountingEngine minDistributionEnergy]
  +[PLAccountingEngine workQueue]
  +[PLAccountingEngine allDistributionIDs]
  +[PLAccountingEngine allSoCRootNodeIDs]
  +[PLAccountingEngine allBBRootNodeIDs]
  +[PLAccountingEngine deviceRootNodeIDs]

  // instance methods
  -[PLAccountingEngine createDistributionEventForwardWithDistributionID:withAddingChildNodeName:withStartDate:]
  -[PLAccountingEngine setWorkQueue:]
  -[PLAccountingEngine createPowerEventBackwardWithRootNodeID:withPower:withEndDate:]
  -[PLAccountingEngine qualificationManager]
  -[PLAccountingEngine addDistributionEventIntervalWithLastDistributionEventBackward:withDistributionEventBackward:]
  -[PLAccountingEngine addQualificationEventPoint:]
  -[PLAccountingEngine addPowerMeasurementEventIntervalWithPower:withStartDate:withEndDate:]
  -[PLAccountingEngine didCorrectEnergyEstimate:]
  -[PLAccountingEngine createDistributionEventForwardWithDistributionID:withRemovingChildNodeName:withStartDate:]
  -[PLAccountingEngine setPluggedIn:]
  -[PLAccountingEngine createDistributionEventBackwardWithDistributionID:withChildNodeNameToWeight:withEndDate:]
  -[PLAccountingEngine currentDistributionEventForwardWithDistributionID:]
  -[PLAccountingEngine createDistributionEventIntervalWithDistributionID:withChildNodeNameToWeight:withStartDate:withEndDate:]
  -[PLAccountingEngine reloadLastPowerEventsWithLastDeviceBootDate:]
  -[PLAccountingEngine .cxx_destruct]
  -[PLAccountingEngine setDistributionManager:]
  -[PLAccountingEngine createQualificationEventForwardWithQualificationID:withAddingChildNodeName:withStartDate:]
  -[PLAccountingEngine addQualificationEventIntervalWithLastQualificationEventForward:withQualificationEventForward:]
  -[PLAccountingEngine createQualificationEventForwardWithQualificationID:withRemovingChildNodeName:withStartDate:]
  -[PLAccountingEngine didCreateChildEnergyEstimate:withParentEnergyEstimate:]
  -[PLAccountingEngine getLastQualifiedEnergyEvent]
  -[PLAccountingEngine createQualificationEventPointWithQualificationID:withChildNodeNames:withStartDate:]
  -[PLAccountingEngine init]
  -[PLAccountingEngine didQualifyEnergyEvent:withRootNodeID:withQualificationID:]
  -[PLAccountingEngine addQualificationEventIntervalWithLastQualificationEventBackward:withQualificationEventBackward:]
  -[PLAccountingEngine addEnergyMeasurementWithRootNodeID:withEnergy:withRange:]
  -[PLAccountingEngine chunkWithLastChunkDate:withNow:]
  -[PLAccountingEngine createDistributionEventForwardWithDistributionID:withChildNodeNameToWeight:withStartDate:]
  -[PLAccountingEngine addDistributionEventIntervalWithLastDistributionEventForward:withDistributionEventForward:]
  -[PLAccountingEngine reloadLastDistributionEventsWithLastDeviceBootDate:]
  -[PLAccountingEngine chunkActivity]
  -[PLAccountingEngine reset]
  -[PLAccountingEngine createQualificationEventForwardWithQualificationID:withChildNodeNames:withStartDate:]
  -[PLAccountingEngine reloadLastQualificationEventsWithLastDeviceBootDate:]
  -[PLAccountingEngine addDistributionEventPoint:]
  -[PLAccountingEngine createQualificationEventBackwardWithQualificationID:withChildNodeNames:withEndDate:]
  -[PLAccountingEngine setChunkActivity:]
  -[PLAccountingEngine pluggedIn]
  -[PLAccountingEngine workQueue]
  -[PLAccountingEngine setBatteryListener:]
  -[PLAccountingEngine createDistributionEventPointWithDistributionID:withChildNodeNameToWeight:withStartDate:]
  -[PLAccountingEngine createEventWithEvent:withActionBlock:]
  -[PLAccountingEngine addDistributionEventInterval:]
  -[PLAccountingEngine addQualificationEventInterval:]
  -[PLAccountingEngine setQualificationManager:]
  -[PLAccountingEngine createQualificationEventIntervalWithQualificationID:withChildNodeNames:withStartDate:withEndDate:]
  -[PLAccountingEngine setCorrectionManager:]
  -[PLAccountingEngine batteryListener]
  -[PLAccountingEngine correctionManager]
  -[PLAccountingEngine createAggregateRootNodeEnergyEntryWithEnergyEstimate:]
  -[PLAccountingEngine createPowerEventForwardWithRootNodeID:withPower:withStartDate:]
  -[PLAccountingEngine didDistributeEnergyEstimate:]
  -[PLAccountingEngine createPowerEventIntervalWithRootNodeID:withPower:withStartDate:withEndDate:]
  -[PLAccountingEngine distributionManager]
  -[PLAccountingEngine reload]


PLAccountingDistributionEventBackwardEntry : PLAccountingDistributionEventEntry
  // class methods
  +[PLAccountingDistributionEventBackwardEntry load]
  +[PLAccountingDistributionEventBackwardEntry entryKey]
  +[PLAccountingDistributionEventBackwardEntry classDirectionality]

  // instance methods
  -[PLAccountingDistributionEventBackwardEntry initWithDistributionID:withChildNodeNameToWeight:withEndDate:]


PLAccountingRuleEntry : PLEntry
  // class methods
  +[PLAccountingRuleEntry ruleWithString:withRegex:withEntryDate:]


PLAccountingEnergyEstimateEventEntry : PLAccountingEnergyEventEntry
 @property  NSNumber *rootNodeID
 @property  int parentEntryID
 @property  int numAncestors
 @property  NSNumber *distributionRuleID
 @property  NSNumber *qualificationRuleIDSum
 @property  double correctionEnergy
 @property  double terminationRatio
 @property  NSDate *distributionDate
 @property  NSDate *correctionDate
 @property  NSDate *qualificationDate
 @property  BOOL isRootNodeEnergyAggregated

  // class methods
  +[PLAccountingEnergyEstimateEventEntry load]
  +[PLAccountingEnergyEstimateEventEntry entryKey]

  // instance methods
  -[PLAccountingEnergyEstimateEventEntry distributionDate]
  -[PLAccountingEnergyEstimateEventEntry setQualificationDate:]
  -[PLAccountingEnergyEstimateEventEntry parentEntryID]
  -[PLAccountingEnergyEstimateEventEntry qualificationRuleIDSum]
  -[PLAccountingEnergyEstimateEventEntry setIsRootNodeEnergyAggregated:]
  -[PLAccountingEnergyEstimateEventEntry correctionEnergy]
  -[PLAccountingEnergyEstimateEventEntry setDistributionDate:]
  -[PLAccountingEnergyEstimateEventEntry rootNodeID]
  -[PLAccountingEnergyEstimateEventEntry qualificationDate]
  -[PLAccountingEnergyEstimateEventEntry terminationRatio]
  -[PLAccountingEnergyEstimateEventEntry distributionRuleID]
  -[PLAccountingEnergyEstimateEventEntry setTerminationRatio:]
  -[PLAccountingEnergyEstimateEventEntry setCorrectionEnergy:]
  -[PLAccountingEnergyEstimateEventEntry numAncestors]
  -[PLAccountingEnergyEstimateEventEntry initWithNodeID:withRootNodeID:withParentEntryID:withNumAncestors:withEnergy:withRange:withEntryDate:]
  -[PLAccountingEnergyEstimateEventEntry isRootNodeEnergyAggregated]
  -[PLAccountingEnergyEstimateEventEntry setCorrectionDate:]
  -[PLAccountingEnergyEstimateEventEntry correctionDate]


PLAccountingDistributionRuleManager : PLAccountingRuleManager
 @property  NSMutableDictionary *rootNodeIDToNodeIDToDistributionRule
 @property  NSMutableDictionary *distributionIDToDistributionRules

  // class methods
  +[PLAccountingDistributionRuleManager sharedInstance]
  +[PLAccountingDistributionRuleManager rulesEntryKey]
  +[PLAccountingDistributionRuleManager rulesPath]

  // instance methods
  -[PLAccountingDistributionRuleManager regex]
  -[PLAccountingDistributionRuleManager setRegex:]
  -[PLAccountingDistributionRuleManager distributionRuleForRootNodeID:andNodeID:]
  -[PLAccountingDistributionRuleManager .cxx_destruct]
  -[PLAccountingDistributionRuleManager distributionIDToDistributionRules]
  -[PLAccountingDistributionRuleManager setRootNodeIDToNodeIDToDistributionRule:]
  -[PLAccountingDistributionRuleManager indexRule:]
  -[PLAccountingDistributionRuleManager rootNodeIDToNodeIDToDistributionRule]
  -[PLAccountingDistributionRuleManager setDistributionIDToDistributionRules:]
  -[PLAccountingDistributionRuleManager distributionRulesForDistributionID:]
  -[PLAccountingDistributionRuleManager ruleWithString:withEntryDate:]


PLAccountingQualificationEventPointEntry : PLAccountingQualificationEventEntry
  // class methods
  +[PLAccountingQualificationEventPointEntry load]
  +[PLAccountingQualificationEventPointEntry entryKey]
  +[PLAccountingQualificationEventPointEntry classDirectionality]

  // instance methods
  -[PLAccountingQualificationEventPointEntry initWithQualificationID:withChildNodeNames:withStartDate:]


PLAccountingDistributionDependency : PLAccountingDependency
 @property  PLAccountingDistributionEventEntry *distributionEvent

  // instance methods
  -[PLAccountingDistributionDependency range]
  -[PLAccountingDistributionDependency ID]
  -[PLAccountingDistributionDependency .cxx_destruct]
  -[PLAccountingDistributionDependency setRange:]
  -[PLAccountingDistributionDependency initWithDistributionEvent:]
  -[PLAccountingDistributionDependency setDistributionEvent:]
  -[PLAccountingDistributionDependency distributionEvent]
  -[PLAccountingDistributionDependency activationDate]


PLAccountingOwner : NSObject <PLAccountingDependencyOwner>
 @property  NSMutableSet *observingDependencyIDs
 @property  NSMutableDictionary *dependencyIDToDependenciesInRange
 @property  <PLAccountingOwnerManager> *manager
 @property  NSNumber *ID
 @property  PLAccountingRange *range
 @property  NSDate *activationDate
 @property  NSDate *runDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PLAccountingOwner range]
  -[PLAccountingOwner ID]
  -[PLAccountingOwner setRunDate:]
  -[PLAccountingOwner runDate]
  -[PLAccountingOwner setManager:]
  -[PLAccountingOwner .cxx_destruct]
  -[PLAccountingOwner setRange:]
  -[PLAccountingOwner allRun]
  -[PLAccountingOwner hasRun]
  -[PLAccountingOwner setID:]
  -[PLAccountingOwner addDependency:]
  -[PLAccountingOwner setActivationDate:]
  -[PLAccountingOwner activate]
  -[PLAccountingOwner manager]
  -[PLAccountingOwner deactivate]
  -[PLAccountingOwner run]
  -[PLAccountingOwner activationDate]
  -[PLAccountingOwner dependencyIDToDependenciesInRange]
  -[PLAccountingOwner setObservingDependencyIDs:]
  -[PLAccountingOwner observingDependencyIDs]
  -[PLAccountingOwner setDependencyIDToDependenciesInRange:]
  -[PLAccountingOwner didReceiveDependency:]


PLAccountingCorrectionManager : PLAccountingOwnerDependencyManager <PLAccountingCorrectionOwnerManager>
 @property  NSMutableDictionary *parentEntryIDToChildEnergyEstimates
 @property  <PLAccountingCorrectionManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLAccountingCorrectionManager disableCorrection]
  +[PLAccountingCorrectionManager freeTimerInterval]

  // instance methods
  -[PLAccountingCorrectionManager didCorrectEnergyEstimate:]
  -[PLAccountingCorrectionManager dependencyIDsForOwner:]
  -[PLAccountingCorrectionManager ownerIDsForDependency:]
  -[PLAccountingCorrectionManager .cxx_destruct]
  -[PLAccountingCorrectionManager setDelegate:]
  -[PLAccountingCorrectionManager addEnergyMeasurement:]
  -[PLAccountingCorrectionManager setParentEntryIDToChildEnergyEstimates:]
  -[PLAccountingCorrectionManager reloadDependenciesNewerThanDate:]
  -[PLAccountingCorrectionManager parentEntryIDToChildEnergyEstimates]
  -[PLAccountingCorrectionManager delegate]
  -[PLAccountingCorrectionManager correctChildEnergyEstimate:withParentEnergyEstimate:withNow:]
  -[PLAccountingCorrectionManager childEnergyEstimatesForParentEntryID:]
  -[PLAccountingCorrectionManager addRootEnergyEstimate:withNow:]


PLAccountingPowerEventIntervalEntry : PLAccountingPowerEventEntry
  // class methods
  +[PLAccountingPowerEventIntervalEntry load]
  +[PLAccountingPowerEventIntervalEntry entryKey]
  +[PLAccountingPowerEventIntervalEntry classDirectionality]

  // instance methods
  -[PLAccountingPowerEventIntervalEntry initWithRootNodeID:withPower:withStartDate:withEndDate:]
  -[PLAccountingPowerEventIntervalEntry canMergeWithEvent:]


PLAccountingQualificationRuleEntry : PLAccountingRuleEntry
 @property  NSNumber *rootNodeID
 @property  NSNumber *qualificationID

  // class methods
  +[PLAccountingQualificationRuleEntry load]
  +[PLAccountingQualificationRuleEntry entryKey]

  // instance methods
  -[PLAccountingQualificationRuleEntry qualificationID]
  -[PLAccountingQualificationRuleEntry isEqual:]
  -[PLAccountingQualificationRuleEntry rootNodeID]
  -[PLAccountingQualificationRuleEntry initWithRootNodeID:withQualificationID:withEntryDate:]


PLAccountingEventEntry : PLEntry
 @property  int instanceDirectionality
 @property  PLAccountingRange *range
 @property  BOOL used

  // class methods
  +[PLAccountingEventEntry classDirectionality]

  // instance methods
  -[PLAccountingEventEntry range]
  -[PLAccountingEventEntry setUsed:]
  -[PLAccountingEventEntry initWithRange:]
  -[PLAccountingEventEntry .cxx_destruct]
  -[PLAccountingEventEntry setRange:]
  -[PLAccountingEventEntry used]
  -[PLAccountingEventEntry canMergeWithEvent:]
  -[PLAccountingEventEntry instanceDirectionality]
  -[PLAccountingEventEntry isEqualContentsWithEvent:]
  -[PLAccountingEventEntry isEmptyEvent]
  -[PLAccountingEventEntry rangeSinceEvent:]
  -[PLAccountingEventEntry mergeWithEvent:]


PLAccountingEnergyEventEntry : PLEntry
 @property  NSNumber *nodeID
 @property  double energy
 @property  PLAccountingRange *range

  // class methods
  +[PLAccountingEnergyEventEntry load]
  +[PLAccountingEnergyEventEntry entryKey]

  // instance methods
  -[PLAccountingEnergyEventEntry nodeID]
  -[PLAccountingEnergyEventEntry range]
  -[PLAccountingEnergyEventEntry .cxx_destruct]
  -[PLAccountingEnergyEventEntry initWithNodeID:withEnergy:withRange:withEntryDate:]
  -[PLAccountingEnergyEventEntry energy]


PLAccountingQualificationEventIntervalEntry : PLAccountingQualificationEventEntry
  // class methods
  +[PLAccountingQualificationEventIntervalEntry load]
  +[PLAccountingQualificationEventIntervalEntry entryKey]
  +[PLAccountingQualificationEventIntervalEntry classDirectionality]

  // instance methods
  -[PLAccountingQualificationEventIntervalEntry initWithQualificationID:withChildNodeIDs:withStartDate:withEndDate:]
  -[PLAccountingQualificationEventIntervalEntry initWithQualificationID:withChildNodeNames:withStartDate:withEndDate:]


PLAccountingDistributionEventForwardEntry : PLAccountingDistributionEventEntry
  // class methods
  +[PLAccountingDistributionEventForwardEntry load]
  +[PLAccountingDistributionEventForwardEntry entryKey]
  +[PLAccountingDistributionEventForwardEntry classDirectionality]

  // instance methods
  -[PLAccountingDistributionEventForwardEntry initWithDistributionID:withChildNodeNameToWeight:withStartDate:]


PLAccountingDistributionEventPointEntry : PLAccountingDistributionEventEntry
  // class methods
  +[PLAccountingDistributionEventPointEntry load]
  +[PLAccountingDistributionEventPointEntry entryKey]
  +[PLAccountingDistributionEventPointEntry classDirectionality]

  // instance methods
  -[PLAccountingDistributionEventPointEntry initWithDistributionID:withChildNodeNameToWeight:withStartDate:]


PLAccountingOwnerDependencyManager : NSObject <PLAccountingOwnerManager, PLAccountingDependencyManager>
 @property  NSMutableDictionary *dependencyIDToObservingOwners
 @property  NSMutableDictionary *dependencyIDToDependencies
 @property  int numDependencies
 @property  NSMutableDictionary *ownerIDToObservingDependencies
 @property  NSMutableDictionary *ownerIDToLastOwner
 @property  NSMutableSet *ownersRepository
 @property  PLTimer *freeTimer
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLAccountingOwnerDependencyManager freeTimerInterval]
  +[PLAccountingOwnerDependencyManager maxOwners]
  +[PLAccountingOwnerDependencyManager maxDependencies]

  // instance methods
  -[PLAccountingOwnerDependencyManager dependencyIDsForOwner:]
  -[PLAccountingOwnerDependencyManager ownerIDsForDependency:]
  -[PLAccountingOwnerDependencyManager .cxx_destruct]
  -[PLAccountingOwnerDependencyManager init]
  -[PLAccountingOwnerDependencyManager addDependency:]
  -[PLAccountingOwnerDependencyManager reloadDependenciesNewerThanDate:]
  -[PLAccountingOwnerDependencyManager workQueue]
  -[PLAccountingOwnerDependencyManager lastOwnerForOwnerID:]
  -[PLAccountingOwnerDependencyManager startObservingOwnerID:forDependency:]
  -[PLAccountingOwnerDependencyManager stopObservingOwnerID:forDependency:]
  -[PLAccountingOwnerDependencyManager canFreeDependency:]
  -[PLAccountingOwnerDependencyManager addOwner:]
  -[PLAccountingOwnerDependencyManager notifyDependenciesWithOwner:]
  -[PLAccountingOwnerDependencyManager notifyOwnersWithDependency:]
  -[PLAccountingOwnerDependencyManager updateLastDependencyID:withEndDate:]
  -[PLAccountingOwnerDependencyManager _lastDependencyForDependencyID:]
  -[PLAccountingOwnerDependencyManager lastDependencyForDependencyID:]
  -[PLAccountingOwnerDependencyManager dependenciesWithDependencyID:withRange:]
  -[PLAccountingOwnerDependencyManager startObservingDependencyID:forOwner:]
  -[PLAccountingOwnerDependencyManager stopObservingDependencyID:forOwner:]
  -[PLAccountingOwnerDependencyManager canFreeOwner:]
  -[PLAccountingOwnerDependencyManager freeExpiredOwnersAtNow:]
  -[PLAccountingOwnerDependencyManager freeExpiredDependenciesAtNow:]
  -[PLAccountingOwnerDependencyManager ownersRepository]
  -[PLAccountingOwnerDependencyManager ownerIDToLastOwner]
  -[PLAccountingOwnerDependencyManager ownerIDToObservingDependencies]
  -[PLAccountingOwnerDependencyManager dependencyIDToDependencies]
  -[PLAccountingOwnerDependencyManager numDependencies]
  -[PLAccountingOwnerDependencyManager setNumDependencies:]
  -[PLAccountingOwnerDependencyManager dependencyIDToObservingOwners]
  -[PLAccountingOwnerDependencyManager setDependencyIDToObservingOwners:]
  -[PLAccountingOwnerDependencyManager setDependencyIDToDependencies:]
  -[PLAccountingOwnerDependencyManager setOwnerIDToObservingDependencies:]
  -[PLAccountingOwnerDependencyManager setOwnerIDToLastOwner:]
  -[PLAccountingOwnerDependencyManager setOwnersRepository:]
  -[PLAccountingOwnerDependencyManager freeTimer]
  -[PLAccountingOwnerDependencyManager setFreeTimer:]


PLAccountingQualificationOwner : PLAccountingOwner
 @property  <PLAccountingQualificationOwnerManager> *manager
 @property  PLAccountingEnergyEstimateEventEntry *energyEstimate

  // instance methods
  -[PLAccountingQualificationOwner range]
  -[PLAccountingQualificationOwner ID]
  -[PLAccountingQualificationOwner setRunDate:]
  -[PLAccountingQualificationOwner .cxx_destruct]
  -[PLAccountingQualificationOwner energyEstimate]
  -[PLAccountingQualificationOwner qualify]
  -[PLAccountingQualificationOwner run]
  -[PLAccountingQualificationOwner activationDate]
  -[PLAccountingQualificationOwner initWithEnergyEstimate:]
  -[PLAccountingQualificationOwner setEnergyEstimate:]


PLAccountingQualificationEventForwardEntry : PLAccountingQualificationEventEntry
  // class methods
  +[PLAccountingQualificationEventForwardEntry load]
  +[PLAccountingQualificationEventForwardEntry entryKey]
  +[PLAccountingQualificationEventForwardEntry classDirectionality]

  // instance methods
  -[PLAccountingQualificationEventForwardEntry initWithQualificationID:withChildNodeNames:withStartDate:]


PLAccountingRange : NSObject
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  double length

  // class methods
  +[PLAccountingRange rangeWithStartDate:withEndDate:]
  +[PLAccountingRange emptyRange]

  // instance methods
  -[PLAccountingRange containsDate:]
  -[PLAccountingRange .cxx_destruct]
  -[PLAccountingRange overlaps:]
  -[PLAccountingRange length]
  -[PLAccountingRange intersect:]
  -[PLAccountingRange isEqual:]
  -[PLAccountingRange initWithStartDate:withEndDate:]
  -[PLAccountingRange startDate]
  -[PLAccountingRange endDate]


PLAccountingPowerEventEntry : PLAccountingEventEntry
 @property  NSNumber *rootNodeID
 @property  double power

  // class methods
  +[PLAccountingPowerEventEntry load]
  +[PLAccountingPowerEventEntry isValidPower:forRootNodeID:]
  +[PLAccountingPowerEventEntry minPowerDifference]
  +[PLAccountingPowerEventEntry minPowerPercentageDifference]

  // instance methods
  -[PLAccountingPowerEventEntry power]
  -[PLAccountingPowerEventEntry rootNodeID]
  -[PLAccountingPowerEventEntry subEntryKey]
  -[PLAccountingPowerEventEntry instanceDirectionality]
  -[PLAccountingPowerEventEntry isEqualContentsWithEvent:]
  -[PLAccountingPowerEventEntry isEmptyEvent]
  -[PLAccountingPowerEventEntry initWithRootNodeID:withPower:withRange:]


PLAccountingQualificationRuleManager : PLAccountingRuleManager
 @property  NSMutableDictionary *rootNodeIDToQualificationRules
 @property  NSMutableDictionary *qualificationIDToQualificationRules

  // class methods
  +[PLAccountingQualificationRuleManager sharedInstance]
  +[PLAccountingQualificationRuleManager rulesEntryKey]
  +[PLAccountingQualificationRuleManager rulesPath]

  // instance methods
  -[PLAccountingQualificationRuleManager regex]
  -[PLAccountingQualificationRuleManager setRegex:]
  -[PLAccountingQualificationRuleManager rootNodeIDToQualificationRules]
  -[PLAccountingQualificationRuleManager setQualificationIDToQualificationRules:]
  -[PLAccountingQualificationRuleManager setRootNodeIDToQualificationRules:]
  -[PLAccountingQualificationRuleManager .cxx_destruct]
  -[PLAccountingQualificationRuleManager qualificationRulesForRootNodeID:]
  -[PLAccountingQualificationRuleManager qualificationIDToQualificationRules]
  -[PLAccountingQualificationRuleManager qualificationRulesForQualificationID:]
  -[PLAccountingQualificationRuleManager indexRule:]
  -[PLAccountingQualificationRuleManager ruleWithString:withEntryDate:]


PLAccountingDistributionRuleEntry : PLAccountingRuleEntry
 @property  NSNumber *nodeID
 @property  NSNumber *rootNodeID
 @property  NSNumber *distributionID

  // class methods
  +[PLAccountingDistributionRuleEntry load]
  +[PLAccountingDistributionRuleEntry entryKey]

  // instance methods
  -[PLAccountingDistributionRuleEntry nodeID]
  -[PLAccountingDistributionRuleEntry distributionID]
  -[PLAccountingDistributionRuleEntry isEqual:]
  -[PLAccountingDistributionRuleEntry rootNodeID]
  -[PLAccountingDistributionRuleEntry initWithNodeID:withRootNodeID:withDistributionID:withEntryDate:]


PLAccountingQualificationEventBackwardEntry : PLAccountingQualificationEventEntry
  // class methods
  +[PLAccountingQualificationEventBackwardEntry load]
  +[PLAccountingQualificationEventBackwardEntry entryKey]
  +[PLAccountingQualificationEventBackwardEntry classDirectionality]

  // instance methods
  -[PLAccountingQualificationEventBackwardEntry initWithQualificationID:withChildNodeNames:withEndDate:]


PLAccountingQualificationDependency : PLAccountingDependency
 @property  PLAccountingQualificationEventEntry *qualificationEvent

  // instance methods
  -[PLAccountingQualificationDependency range]
  -[PLAccountingQualificationDependency ID]
  -[PLAccountingQualificationDependency .cxx_destruct]
  -[PLAccountingQualificationDependency setRange:]
  -[PLAccountingQualificationDependency qualificationEvent]
  -[PLAccountingQualificationDependency setQualificationEvent:]
  -[PLAccountingQualificationDependency initWithQualificationEvent:]
  -[PLAccountingQualificationDependency activationDate]


PLAccountingRuleManager : NSObject
 @property  NSMutableDictionary *ruleIDToRule
 @property  NSRegularExpression *regex

  // class methods
  +[PLAccountingRuleManager sharedInstance]
  +[PLAccountingRuleManager rulesEntryKey]
  +[PLAccountingRuleManager rulesPath]
  +[PLAccountingRuleManager firstLineWithFile:]
  +[PLAccountingRuleManager decryptData:withKey:]
  +[PLAccountingRuleManager storedHashDefaults]

  // instance methods
  -[PLAccountingRuleManager regex]
  -[PLAccountingRuleManager setRegex:]
  -[PLAccountingRuleManager .cxx_destruct]
  -[PLAccountingRuleManager init]
  -[PLAccountingRuleManager indexRule:]
  -[PLAccountingRuleManager ruleWithString:withEntryDate:]
  -[PLAccountingRuleManager ruleForRuleID:]
  -[PLAccountingRuleManager loadRules]
  -[PLAccountingRuleManager ruleIDToRule]
  -[PLAccountingRuleManager rulesFromFileWithForceLoad:]
  -[PLAccountingRuleManager setRuleIDToRule:]


PLAccountingDistributionEventIntervalEntry : PLAccountingDistributionEventEntry
  // class methods
  +[PLAccountingDistributionEventIntervalEntry load]
  +[PLAccountingDistributionEventIntervalEntry entryKey]
  +[PLAccountingDistributionEventIntervalEntry classDirectionality]

  // instance methods
  -[PLAccountingDistributionEventIntervalEntry initWithDistributionID:withChildNodeNameToWeight:withStartDate:withEndDate:]
  -[PLAccountingDistributionEventIntervalEntry initWithDistributionID:withChildNodeIDToWeight:withStartDate:withEndDate:]


PLAccountingPowerEventForwardEntry : PLAccountingPowerEventEntry
  // class methods
  +[PLAccountingPowerEventForwardEntry load]
  +[PLAccountingPowerEventForwardEntry entryKey]
  +[PLAccountingPowerEventForwardEntry classDirectionality]

  // instance methods
  -[PLAccountingPowerEventForwardEntry initWithRootNodeID:withPower:withStartDate:]
  -[PLAccountingPowerEventForwardEntry canMergeWithEvent:]


PLAccountingNodeManager : NSObject
 @property  NSMutableDictionary *nodeNameToNodeID
 @property  NSMutableDictionary *nodeIDToNodeName

  // class methods
  +[PLAccountingNodeManager sharedInstance]

  // instance methods
  -[PLAccountingNodeManager .cxx_destruct]
  -[PLAccountingNodeManager childNodeIDsFromChildNodeNames:]
  -[PLAccountingNodeManager init]
  -[PLAccountingNodeManager removeNodeReferenceFromCache:]
  -[PLAccountingNodeManager setupNodes]
  -[PLAccountingNodeManager setNodeIDToNodeName:]
  -[PLAccountingNodeManager nodeNameForNodeID:]
  -[PLAccountingNodeManager nodeNameToNodeID]
  -[PLAccountingNodeManager nodeIDToNodeName]
  -[PLAccountingNodeManager nodeIDForNodeName:isPermanent:]
  -[PLAccountingNodeManager setNodeNameToNodeID:]


PLAccountingDistributionOwner : PLAccountingOwner
 @property  <PLAccountingDistributionOwnerManager> *manager
 @property  PLAccountingEnergyEstimateEventEntry *energyEstimate

  // instance methods
  -[PLAccountingDistributionOwner range]
  -[PLAccountingDistributionOwner ID]
  -[PLAccountingDistributionOwner setRunDate:]
  -[PLAccountingDistributionOwner .cxx_destruct]
  -[PLAccountingDistributionOwner energyEstimate]
  -[PLAccountingDistributionOwner run]
  -[PLAccountingDistributionOwner distribute]
  -[PLAccountingDistributionOwner activationDate]
  -[PLAccountingDistributionOwner initWithEnergyEstimate:]
  -[PLAccountingDistributionOwner setEnergyEstimate:]


PLAccountingPowerEventBackwardEntry : PLAccountingPowerEventEntry
  // class methods
  +[PLAccountingPowerEventBackwardEntry load]
  +[PLAccountingPowerEventBackwardEntry entryKey]
  +[PLAccountingPowerEventBackwardEntry classDirectionality]

  // instance methods
  -[PLAccountingPowerEventBackwardEntry initWithRootNodeID:withPower:withEndDate:]


01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLAccountingOperator 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLActivityCriterionTime 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLActivityScheduler 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLCoreStorage 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLDefaults 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLEntry 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLEntryDefinition 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLEntryNotificationOperatorComposition 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLPlatform 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLStorageCache 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLTimer 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLUtilities 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PLValueComparison 
01 00 0200 /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore: PowerlogCore 
