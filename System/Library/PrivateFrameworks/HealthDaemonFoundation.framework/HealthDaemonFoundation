|| __DATA.__objc_data _OBJC_CLASS_$_HDAnalyticsWriter
|| __DATA.__objc_data _OBJC_CLASS_$_HDUserNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_HDAnalyticsWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_HDUserNotification
|| __DATA_CONST.__const _HDAnalyticsWriterBugTypeClinicalData
|| __DATA_CONST.__const _HDAnalyticsWriterBugTypeReportAProblem
|| __DATA_CONST.__const _HDAssertionManagerAssertionKey
|| __DATA_CONST.__const _HDAssertionManagerAssertionReturnedNotification
|| __DATA_CONST.__const _HDAssertionManagerAssertionTakenNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDAssertion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDDiagnosticManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDXPCAlarm
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDXPCAlarmEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDXPCAlarmScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDXPCEventPublisher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDXPCGatedActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDXPCListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDXPCPeriodicActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HDXPCProcess
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDAssertion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDDiagnosticManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDXPCAlarm
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDXPCAlarmEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDXPCAlarmScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDXPCClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDXPCEventPublisher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDXPCGatedActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDXPCListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDXPCPeriodicActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HDXPCProcess
|| __TEXT.__text _HDDiagnosticStringFromDate
|| __TEXT.__text _HDDiagnosticStringFromDuration
|| __TEXT.__text _HDStringFromGatedActivityResult
|| __TEXT.__text _HDUserNotificationResponseButtonToString
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ Foundation: _NSClassFromString
__ Foundation: _NSFileCreationDate
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ HealthKit: _HKCreateSerialDispatchQueue
__ HealthKit: _HKDiagnosticStringFromDate
__ HealthKit: _HKDiagnosticStringFromDuration
__ HealthKit: _HKHealthWrapDERDataFromString
__ HealthKit: _HKLogAssertions
__ HealthKit: _HKLogDefault
__ HealthKit: _HKLogHealthRecords
__ HealthKit: _HKLogInfrastructure
__ HealthKit: _HKMachAbsoluteTimeGetCurrent
__ HealthKit: _HKSubmitAnalyticsFile
__ HealthKit: _HKXPCEventSendToClientKey
__ HealthKit: _OBJC_CLASS_$_HKDaemonTransaction
__ HealthKit: _OBJC_CLASS_$_HKHealthWrapMessage
__ HealthKit: _OBJC_CLASS_$_HKHealthWrapMessageConfiguration
__ HealthKit: _OBJC_CLASS_$_HKObserverSet
__ HealthKit: _OBJC_CLASS_$__HKBehavior
__ HealthKit: _OBJC_CLASS_$__HKEntitlements
__ HealthKit: _OBJC_CLASS_$__HKXPCAuditToken
__ HealthKit: __HKInitializeLogging
__ HealthKit: __HKLogDroppedError
__ HealthKit: __HKLogPersistedSignposts
__ PlugInKit: _OBJC_CLASS_$_PKManager
__ PlugInKit: _PKManagerPlugInPathKey
__ Security: _SecCertificateCreateWithData
__ libSystem.B.dylib: _SANDBOX_CHECK_NO_REPORT
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_error_key_description
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _proc_pidpath_audittoken
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_completion_status
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_copy
__ libSystem.B.dylib: _xpc_copy_code_signing_identity_for_token
__ libSystem.B.dylib: _xpc_copy_entitlement_for_token
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_audit_token
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_date
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_event_publisher_activate
__ libSystem.B.dylib: _xpc_event_publisher_create
__ libSystem.B.dylib: _xpc_event_publisher_fire
__ libSystem.B.dylib: _xpc_event_publisher_fire_with_reply
__ libSystem.B.dylib: _xpc_event_publisher_set_error_handler
__ libSystem.B.dylib: _xpc_event_publisher_set_handler
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_set_event
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: _xpc_type_get_name
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
HDAssertion : NSObject
 @property  long long rawState
 @property  NSUUID *UUID
 @property  NSString *assertionIdentifier
 @property  NSString *ownerIdentifier
 @property  long long state
 @property  double budget
 @property  double remainingBudget

  // instance methods
  -[HDAssertion budget]
  -[HDAssertion _lock_consumeBudgetThroughTime:error:]
  -[HDAssertion _consumeFromBudgetThroughTime:]
  -[HDAssertion remainingBudget]
  -[HDAssertion state]
  -[HDAssertion rawState]
  -[HDAssertion dealloc]
  -[HDAssertion _setBudgetIntervalStartTime:]
  -[HDAssertion .cxx_destruct]
  -[HDAssertion initWithAssertionIdentifier:ownerIdentifier:]
  -[HDAssertion _lock_remainingBudget]
  -[HDAssertion UUID]
  -[HDAssertion _lock_setBudget:error:]
  -[HDAssertion _lock_setBudgetIntervalStartTime:]
  -[HDAssertion _takeWithManager:]
  -[HDAssertion _invalidateAndRelease:]
  -[HDAssertion assertionIdentifier]
  -[HDAssertion cloneWithOwnerIdentifier:]
  -[HDAssertion invalidate]
  -[HDAssertion _lock_description]
  -[HDAssertion _lock_state]
  -[HDAssertion _lock_cloneWithOwnerIdentifier:]
  -[HDAssertion setBudget:]
  -[HDAssertion ownerIdentifier]


HDXPCPeriodicActivity : NSObject <HDXPCActivityShim>
 @property  NSString *name
 @property  NSObject<OS_os_log> *loggingCategory
 @property  double baseInterval
 @property  NSObject<OS_xpc_object> *criteria
 @property  long long errorCount
 @property  NSDate *lastSuccessfulRunDate
 @property  NSDate *earliestRunDate
 @property  NSObject<OS_xpc_object> *currentActivity
 @property  NSObject<OS_xpc_object> *currentCriteria
 @property  BOOL shouldDefer
 @property  BOOL isWaiting

  // class methods
  +[HDXPCPeriodicActivity registerDisabledPeriodicActivityWithName:loggingCategory:]

  // instance methods
  -[HDXPCPeriodicActivity currentActivity]
  -[HDXPCPeriodicActivity didPerformActivityWithResult:minimumRetryInterval:activityStartDate:error:]
  -[HDXPCPeriodicActivity registerActivity]
  -[HDXPCPeriodicActivity unregisterActivity]
  -[HDXPCPeriodicActivity setCriteria:]
  -[HDXPCPeriodicActivity loggingCategory]
  -[HDXPCPeriodicActivity updateCriteriaForModifiedIntervalForCurrentState]
  -[HDXPCPeriodicActivity lastSuccessfulRunDate]
  -[HDXPCPeriodicActivity errorCount]
  -[HDXPCPeriodicActivity currentCriteria]
  -[HDXPCPeriodicActivity shouldDefer]
  -[HDXPCPeriodicActivity xpcActivity_setState:activity:]
  -[HDXPCPeriodicActivity dealloc]
  -[HDXPCPeriodicActivity .cxx_destruct]
  -[HDXPCPeriodicActivity externalConditionsChanged]
  -[HDXPCPeriodicActivity isWaiting]
  -[HDXPCPeriodicActivity criteria]
  -[HDXPCPeriodicActivity xpcActivity_unregister:]
  -[HDXPCPeriodicActivity baseInterval]
  -[HDXPCPeriodicActivity initWithName:baseInterval:criteria:loggingCategory:handler:]
  -[HDXPCPeriodicActivity unitTest_reset]
  -[HDXPCPeriodicActivity unitTest_synthesizeActivityFireWithCompletion:]
  -[HDXPCPeriodicActivity earliestRunDate]
  -[HDXPCPeriodicActivity name]
  -[HDXPCPeriodicActivity xpcActivity_getState:]
  -[HDXPCPeriodicActivity xpcActivity_register:criteria:handler:]
  -[HDXPCPeriodicActivity xpcActivity_setCompletionStatus:activity:]
  -[HDXPCPeriodicActivity modifiedIntervalForCurrentState]
  -[HDXPCPeriodicActivity unitTest_setActivityShim:]
  -[HDXPCPeriodicActivity xpcActivity_copyCriteria:]
  -[HDXPCPeriodicActivity xpcActivity_setCriteria:activity:]
  -[HDXPCPeriodicActivity xpcActivity_shouldDefer:]


HDXPCAlarm : NSObject
 @property  HDXPCAlarmScheduler *scheduler
 @property  NSObject<OS_dispatch_queue> *eventHandlerQueue
 @property  @? eventHandler
 @property  @? unitTest_schedulerObserver
 @property  NSString *eventName

  // instance methods
  -[HDXPCAlarm eventHandler]
  -[HDXPCAlarm scheduler]
  -[HDXPCAlarm eventName]
  -[HDXPCAlarm initWithProfile:eventName:eventHandlerQueue:]
  -[HDXPCAlarm unitTest_schedulerObserver]
  -[HDXPCAlarm setNextFireDate:isUserVisible:]
  -[HDXPCAlarm .cxx_destruct]
  -[HDXPCAlarm setUnitTest_schedulerObserver:]
  -[HDXPCAlarm eventDidFire:]
  -[HDXPCAlarm unitTest_fireEventImmediatelyWithDate:isUserVisible:]
  -[HDXPCAlarm setEventHandler:]
  -[HDXPCAlarm beginReceivingEventsWithHandler:]
  -[HDXPCAlarm unschedule]
  -[HDXPCAlarm invalidate]
  -[HDXPCAlarm eventHandlerQueue]
  -[HDXPCAlarm initWithDaemon:eventName:eventHandlerQueue:]


HDXPCListener : NSObject <NSXPCListenerDelegate>
 @property  NSArray *allClients
 @property  <HDXPCListenerDelegate> *delegate
 @property  <HDXPCListenerClientProvider> *clientProvider
 @property  NSXPCListenerEndpoint *endpoint
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HDXPCListener serviceListener]

  // instance methods
  -[HDXPCListener allClients]
  -[HDXPCListener setConnectionQueue:]
  -[HDXPCListener initWithLabel:]
  -[HDXPCListener setDelegate:]
  -[HDXPCListener _handleInvalidationWithClient:exportedObject:]
  -[HDXPCListener clientProvider]
  -[HDXPCListener setClientProvider:]
  -[HDXPCListener endpoint]
  -[HDXPCListener delegate]
  -[HDXPCListener initWithUnderlyingListener:label:]
  -[HDXPCListener dealloc]
  -[HDXPCListener .cxx_destruct]
  -[HDXPCListener resume]
  -[HDXPCListener _handleConnectionInvalidationForClient:exportedObject:]
  -[HDXPCListener _handleInterruptionWithClient:exportedObject:]
  -[HDXPCListener initWithMachServiceName:]
  -[HDXPCListener setQueue:]
  -[HDXPCListener label]
  -[HDXPCListener invalidate]
  -[HDXPCListener listener:shouldAcceptNewConnection:]
  -[HDXPCListener init]


HDXPCEventPublisher : NSObject
  // instance methods
  -[HDXPCEventPublisher .cxx_destruct]
  -[HDXPCEventPublisher broadcastEvent:]
  -[HDXPCEventPublisher initWithStream:entitlement:]


HDXPCClient : NSObject
 @property  HDXPCProcess *process
 @property  NSXPCConnection *connection

  // class methods
  +[HDXPCClient clientWithConnection:error:]

  // instance methods
  -[HDXPCClient _initWithConnection:process:]
  -[HDXPCClient process]
  -[HDXPCClient initWithProcess:]
  -[HDXPCClient .cxx_destruct]
  -[HDXPCClient connection]
  -[HDXPCClient initWithConnection:process:]


HDDiagnosticManager : NSObject
  // class methods
  +[HDDiagnosticManager sharedDiagnosticManager]

  // instance methods
  -[HDDiagnosticManager .cxx_destruct]
  -[HDDiagnosticManager addObject:]
  -[HDDiagnosticManager _diagnosticsForKeys:shouldLog:]
  -[HDDiagnosticManager removeObject:]
  -[HDDiagnosticManager logAllDiagnostics]
  -[HDDiagnosticManager diagnosticsForKeys:]
  -[HDDiagnosticManager _diagnosticsOverview]
  -[HDDiagnosticManager init]


HDAssertionManager : NSObject
 @property  NSObject<OS_dispatch_queue> *budgetTimerQueue

  // instance methods
  -[HDAssertionManager addObserver:forAssertionIdentifier:queue:]
  -[HDAssertionManager removeObserver:forAssertionIdentifier:]
  -[HDAssertionManager dealloc]
  -[HDAssertionManager suspendBudgetConsumption]
  -[HDAssertionManager .cxx_destruct]
  -[HDAssertionManager resumeBudgetConsumption]
  -[HDAssertionManager activeAssertionsForIdentifier:]
  -[HDAssertionManager hasActiveAssertion:]
  -[HDAssertionManager budgetTimerQueue]
  -[HDAssertionManager invalidate]
  -[HDAssertionManager takeAssertion:]
  -[HDAssertionManager removeObserver:]
  -[HDAssertionManager ownerIdentifiersForAssertionIdentifier:]
  -[HDAssertionManager _releaseAssertion:]
  -[HDAssertionManager hasActiveAssertionForIdentifier:]
  -[HDAssertionManager init]
  -[HDAssertionManager allAssertionsForIdentifier:]


_HDAssertionRecord : NSObject
  // instance methods
  -[_HDAssertionRecord .cxx_destruct]


HDXPCGatedActivity : NSObject
 @property  NSObject<OS_xpc_object> *currentActivity
 @property  NSString *name
 @property  NSObject<OS_os_log> *loggingCategory
 @property  BOOL shouldDefer
 @property  BOOL rescheduleWhileInProgress
 @property  BOOL waitingForTrigger

  // instance methods
  -[HDXPCGatedActivity _registerActivityWithCriteria:]
  -[HDXPCGatedActivity currentActivity]
  -[HDXPCGatedActivity loggingCategory]
  -[HDXPCGatedActivity _handleXPCActivityCallback:]
  -[HDXPCGatedActivity _lock_resetNextActivityFireDate]
  -[HDXPCGatedActivity setRescheduleWhileInProgress:]
  -[HDXPCGatedActivity setWaitingForTrigger:]
  -[HDXPCGatedActivity shouldDefer]
  -[HDXPCGatedActivity _lock_setNextScheduledFireDeadline:]
  -[HDXPCGatedActivity .cxx_destruct]
  -[HDXPCGatedActivity _registerActivityWithCriteria:delay:]
  -[HDXPCGatedActivity runUngatedWithCompletion:]
  -[HDXPCGatedActivity initWithName:criteria:loggingCategory:handler:]
  -[HDXPCGatedActivity _performActivity:completion:]
  -[HDXPCGatedActivity name]
  -[HDXPCGatedActivity waitingForTrigger]
  -[HDXPCGatedActivity setCurrentActivity:]
  -[HDXPCGatedActivity _activityFinishedWithResult:error:]
  -[HDXPCGatedActivity requestRunWithMaximumDelay:completion:]
  -[HDXPCGatedActivity rescheduleWhileInProgress]


HDAnalyticsWriter : NSObject
  // instance methods
  -[HDAnalyticsWriter initWithURL:]
  -[HDAnalyticsWriter .cxx_destruct]
  -[HDAnalyticsWriter init]
  -[HDAnalyticsWriter URLForAnalyticsFileWithName:]
  -[HDAnalyticsWriter submitJSONAnalyticsData:bugType:error:]
  -[HDAnalyticsWriter submitJSONAnalyticsData:toDirectory:withConfiguration:error:]
  -[HDAnalyticsWriter analyticsFilePathsWithError:]


HDXPCProcess : NSObject
 @property  _HKEntitlements *entitlements
 @property  int processIdentifier
 @property  _HKXPCAuditToken *auditToken
 @property  NSString *name
 @property  NSString *bundleIdentifier
 @property  BOOL isExtension
 @property  BOOL isWidgetKitExtension
 @property  NSString *containerAppBundleIdentifier
 @property  NSString *applicationIdentifier

  // class methods
  +[HDXPCProcess currentProcess]
  +[HDXPCProcess processWithConnection:error:]

  // instance methods
  -[HDXPCProcess initWithAuditToken:entitlements:isExtension:containerAppBundleIdentifier:]
  -[HDXPCProcess applicationIdentifier]
  -[HDXPCProcess hasRequiredEntitlement:error:]
  -[HDXPCProcess entitlements]
  -[HDXPCProcess dropEntitlement:]
  -[HDXPCProcess valueForEntitlement:]
  -[HDXPCProcess .cxx_destruct]
  -[HDXPCProcess auditToken]
  -[HDXPCProcess isExtension]
  -[HDXPCProcess processIdentifier]
  -[HDXPCProcess _pluginBundleForCurrentProcess]
  -[HDXPCProcess bundleIdentifier]
  -[HDXPCProcess containerAppBundleIdentifier]
  -[HDXPCProcess restoreEntitlement:]
  -[HDXPCProcess name]
  -[HDXPCProcess isWidgetKitExtension]
  -[HDXPCProcess hasEntitlement:]
  -[HDXPCProcess hasRequiredArrayEntitlement:containing:error:]
  -[HDXPCProcess unitTest_copyProcessWithEntitlements:]
  -[HDXPCProcess hasArrayEntitlement:containing:]


HDXPCAlarmScheduler : NSObject <HDDiagnosticObject>
 @property  @? unitTest_schedulerObserver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HDXPCAlarmScheduler removeAlarm:]
  -[HDXPCAlarmScheduler unitTest_schedulerObserver]
  -[HDXPCAlarmScheduler addAlarm:]
  -[HDXPCAlarmScheduler .cxx_destruct]
  -[HDXPCAlarmScheduler setUnitTest_schedulerObserver:]
  -[HDXPCAlarmScheduler _queue_handleXPCEvent:]
  -[HDXPCAlarmScheduler scheduleEvent:]
  -[HDXPCAlarmScheduler _queue_notifyAlarmsOfPendingEvents]
  -[HDXPCAlarmScheduler diagnosticDescription]
  -[HDXPCAlarmScheduler _queue_unscheduleEventWithName:]
  -[HDXPCAlarmScheduler _queue_scheduleEvent:]
  -[HDXPCAlarmScheduler unscheduleEventWithName:]
  -[HDXPCAlarmScheduler unittest_fireEvent:]
  -[HDXPCAlarmScheduler _queue_handleEvent:]
  -[HDXPCAlarmScheduler init]


HDXPCAlarmEvent : NSObject
 @property  NSString *name
 @property  NSDate *fireDate
 @property  BOOL isUserVisible

  // class methods
  +[HDXPCAlarmEvent _eventWithName:]

  // instance methods
  -[HDXPCAlarmEvent isUserVisible]
  -[HDXPCAlarmEvent fireDate]
  -[HDXPCAlarmEvent .cxx_destruct]
  -[HDXPCAlarmEvent initWithName:fireDate:isUserVisible:]
  -[HDXPCAlarmEvent name]
  -[HDXPCAlarmEvent isEqual:]


HDUserNotification : NSObject
 @property  @? responseHandler
 @property  ^{__CFUserNotification=} notification
 @property  NSString *title
 @property  NSString *message
 @property  NSString *defaultButton
 @property  NSString *cancelButton
 @property  NSString *otherButton
 @property  NSDictionary *additionalDescriptors
 @property  long long alertLevel
 @property  unsigned long userNotificationOptions

  // instance methods
  -[HDUserNotification setNotification:]
  -[HDUserNotification responseHandler]
  -[HDUserNotification setMessage:]
  -[HDUserNotification setCancelButton:]
  -[HDUserNotification cancelButton]
  -[HDUserNotification notification]
  -[HDUserNotification .cxx_destruct]
  -[HDUserNotification title]
  -[HDUserNotification setResponseHandler:]
  -[HDUserNotification message]
  -[HDUserNotification setTitle:]
  -[HDUserNotification alertLevel]
  -[HDUserNotification setAlertLevel:]
  -[HDUserNotification defaultButton]
  -[HDUserNotification setDefaultButton:]
  -[HDUserNotification _handleResponse:]
  -[HDUserNotification presentWithResponseHandler:]
  -[HDUserNotification setOtherButton:]
  -[HDUserNotification otherButton]
  -[HDUserNotification additionalDescriptors]
  -[HDUserNotification setAdditionalDescriptors:]
  -[HDUserNotification userNotificationOptions]
  -[HDUserNotification setUserNotificationOptions:]


01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKDaemonTransaction 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKHealthWrapMessage 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKHealthWrapMessageConfiguration 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: HKObserverSet 
01 00 0400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0100 /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit: PKManager 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKBehavior 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKEntitlements 
01 00 0200 /System/Library/Frameworks/HealthKit.framework/HealthKit: _HKXPCAuditToken 
