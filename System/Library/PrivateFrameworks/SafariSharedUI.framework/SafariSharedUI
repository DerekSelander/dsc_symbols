|| __DATA.__common _WBSNullPointer
|| __DATA.__data _getMAAssetClass
|| __DATA.__data _getMAAssetQueryClass
|| __DATA.__data _getMLModelClass
|| __DATA.__data _getPKGlyphViewClass
|| __DATA.__data _getVNClassificationObservationClass
|| __DATA.__data _getVNCoreMLModelClass
|| __DATA.__data _getVNCoreMLRequestClass
|| __DATA.__data _getVNImageRequestHandlerClass
|| __DATA.__data _get_LTAlignmentClass
|| __DATA.__data _get_LTLanguageDetectionResultClass
|| __DATA.__data _get_LTLocalePairClass
|| __DATA.__data _get_LTParagraphTranslationRequestClass
|| __DATA.__data _get_LTTextLanguageDetectionResultClass
|| __DATA.__data _get_LTTranslationRangeClass
|| __DATA.__data _get_LTTranslationRequestClass
|| __DATA.__data _get_LTTranslationSessionClass
|| __DATA.__data _get_LTTranslatorClass
|| __DATA.__objc_data _OBJC_CLASS_$_WBSAppLink
|| __DATA.__objc_data _OBJC_CLASS_$_WBSBookmarkFolderTouchIconProvider
|| __DATA.__objc_data _OBJC_CLASS_$_WBSBookmarkFolderTouchIconProviderInfo
|| __DATA.__objc_data _OBJC_CLASS_$_WBSBookmarkFolderTouchIconProviderRequestInfo
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCachedFont
|| __DATA.__objc_data _OBJC_CLASS_$_WBSCompletionListRankingObserver
|| __DATA.__objc_data _OBJC_CLASS_$_WBSContextResultGrouper
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconProvider
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconProviderDatabaseController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconProviderIconInfo
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconProviderPersistenceController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconProviderPrivateCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconProviderRecordCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconProviderUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconRequestsController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFaviconResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFluidProgressAnimation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFluidProgressController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFluidProgressState
|| __DATA.__objc_data _OBJC_CLASS_$_WBSForYouCloudTabsDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_WBSForYouDataSourceWeightManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSForYouLinkRecommendation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSForYouPerSitePreferenceManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSForYouRecentParsecResultsManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSForYouRecommendationMediator
|| __DATA.__objc_data _OBJC_CLASS_$_WBSForYouRecommendationMediatorDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_WBSForYouTopic
|| __DATA.__objc_data _OBJC_CLASS_$_WBSForYouTopicManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSFoundInRecommendationManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSImageFetchingURLSessionTaskManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSImageUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_WBSKnownTrackerFilter
|| __DATA.__objc_data _OBJC_CLASS_$_WBSKnownTrackingThirdParty
|| __DATA.__objc_data _OBJC_CLASS_$_WBSLeadImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSLeadImageCacheRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WBSLeadImageCacheResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WBSLeadImageSaver
|| __DATA.__objc_data _OBJC_CLASS_$_WBSLocalAssetController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSLocalePair
|| __DATA.__objc_data _OBJC_CLASS_$_WBSMetadataExtractor
|| __DATA.__objc_data _OBJC_CLASS_$_WBSMobileAssetController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSOnDiskDataCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecABGroupIdentifierUserDefaultsStore
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecABGroupManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecActionButton
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecAuxiliaryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecDFeedbackDispatcher
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecDSession
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecFormattedText
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecHiddenResultInfo
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecImageRepresentation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecLegacySearchResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecPunchout
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecResultSetPattern
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecRichText
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchCompletionResultSet
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchGenericResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchMapsResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchMapsResultFeedbackSender
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchMoviesResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchResultCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchSimpleResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchSportsAttributionExtraCompletionItem
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchSportsResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSearchUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSportsImage
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSportsScoreSummary
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSubscriptionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_WBSParsecSubscriptionManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingAssetController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingClassifierController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingClassifierControllerConfigurationTransformer
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingClassifierResults
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingConfigurationDomain
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingConfigurationImageClassifierIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingConfigurationOverride
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingImageClassifierModel
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingURLClassifierCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingURLClassifierConfigurationOverrideAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingURLClassifierCrowdsourcedFeedbackAllowListAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingURLClassifierHistoryAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingURLClassifierWithFallback
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPhishingUpdateConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_WBSPrivacyReportData
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingFetchOperation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingProvider
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSVGImageRenderingWebProcessPlugInPageController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSiriIntelligenceDonor
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSiriIntelligenceDonorBookmarkData
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSiriIntelligenceDonorHistoryData
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSiriIntelligenceHistorySearch
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSiteIconKeyColorExtractor
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSiteMetadataFetchOperation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSiteMetadataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WBSSiteMetadataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTemplateIconCache
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTemplateIconMonogramConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTemplateIconMonogramGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTemplateIconRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTemplateIconResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTouchIconFetchOperation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTouchIconFetchOperationResult
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTouchIconRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTouchIconResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTouchIconWebProcessPlugInPageController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTrackedFirstParty
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTrackingCapableFirstParty
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTrackingCapableThirdParty
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationAvailability
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationConsentAlertHelper
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationContext
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationContextSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationDataCollectionManager
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationDiagnosticData
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationErrorController
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationInformation
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationURLParser
|| __DATA.__objc_data _OBJC_CLASS_$_WBSTranslationWebpageContentExtractor
|| __DATA.__objc_data _OBJC_CLASS_$_WBSUISafariSandboxBroker
|| __DATA.__objc_data _OBJC_CLASS_$_WBSUISafariSandboxBrokerConnection
|| __DATA.__objc_data _OBJC_CLASS_$_WBSURLSpoofingMitigator
|| __DATA.__objc_data _OBJC_CLASS_$_WBSWebViewMetadataFetchOperation
|| __DATA.__objc_data _OBJC_CLASS_$__WBSFaviconRecord
|| __DATA.__objc_data _OBJC_CLASS_$__WBSParsecSubscriptionInfoKeyValueStringParser
|| __DATA.__objc_data _OBJC_CLASS_$__WBSSearchFoundationFeedbackGenerator
|| __DATA.__objc_data _OBJC_CLASS_$__WBSSiteMetadataRequestInfo
|| __DATA.__objc_data _OBJC_CLASS_$__WBSSiteMetadataToken
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSAppLink
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSBookmarkFolderTouchIconProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSBookmarkFolderTouchIconProviderInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSBookmarkFolderTouchIconProviderRequestInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCachedFont
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSCompletionListRankingObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSContextResultGrouper
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderDatabaseController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderIconInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderPersistenceController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderPrivateCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderRecordCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconProviderUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconRequestsController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFaviconResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFluidProgressAnimation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFluidProgressController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFluidProgressState
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSForYouCloudTabsDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSForYouDataSourceWeightManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSForYouLinkRecommendation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSForYouPerSitePreferenceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSForYouRecentParsecResultsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSForYouRecommendationMediator
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSForYouRecommendationMediatorDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSForYouTopic
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSForYouTopicManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSFoundInRecommendationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSImageFetchingURLSessionTaskManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSImageUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSKnownTrackerFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSKnownTrackingThirdParty
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSLeadImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSLeadImageCacheRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSLeadImageCacheResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSLeadImageSaver
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSLocalAssetController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSLocalePair
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSMetadataExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSMobileAssetController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSOnDiskDataCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecABGroupIdentifierUserDefaultsStore
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecABGroupManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecActionButton
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecAuxiliaryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecDFeedbackDispatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecDSession
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecFormattedText
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecHiddenResultInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecImageRepresentation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecLegacySearchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecPunchout
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecResultSetPattern
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecRichText
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchCompletionResultSet
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchGenericResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchMapsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchMapsResultFeedbackSender
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchMoviesResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchResultCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchSimpleResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchSportsAttributionExtraCompletionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchSportsResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSearchUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSportsImage
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSportsScoreSummary
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSubscriptionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSParsecSubscriptionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingAssetController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingClassifierController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingClassifierControllerConfigurationTransformer
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingClassifierResults
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingConfigurationDomain
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingConfigurationImageClassifierIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingConfigurationOverride
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingImageClassifierModel
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingURLClassifierCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingURLClassifierConfigurationOverrideAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingURLClassifierCrowdsourcedFeedbackAllowListAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingURLClassifierHistoryAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingURLClassifierWithFallback
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPhishingUpdateConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSPrivacyReportData
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingFetchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSVGImageRenderingWebProcessPlugInPageController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSiriIntelligenceDonor
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSiriIntelligenceDonorBookmarkData
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSiriIntelligenceDonorHistoryData
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSiriIntelligenceHistorySearch
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSiteIconKeyColorExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataFetchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTemplateIconCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTemplateIconMonogramConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTemplateIconMonogramGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTemplateIconRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTemplateIconResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTouchIconFetchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTouchIconFetchOperationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTouchIconRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTouchIconResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTouchIconWebProcessPlugInPageController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTrackedFirstParty
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTrackingCapableFirstParty
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTrackingCapableThirdParty
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationAvailability
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationConsentAlertHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationContextSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationDataCollectionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationDiagnosticData
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationErrorController
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationURLParser
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSTranslationWebpageContentExtractor
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSUISafariSandboxBroker
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSUISafariSandboxBrokerConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSURLSpoofingMitigator
|| __DATA.__objc_data _OBJC_METACLASS_$_WBSWebViewMetadataFetchOperation
|| __DATA.__objc_data _OBJC_METACLASS_$__WBSFaviconRecord
|| __DATA.__objc_data _OBJC_METACLASS_$__WBSParsecSubscriptionInfoKeyValueStringParser
|| __DATA.__objc_data _OBJC_METACLASS_$__WBSSearchFoundationFeedbackGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$__WBSSiteMetadataRequestInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__WBSSiteMetadataToken
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorContentDidChangeNotification
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorContentDidChangeSourceKey
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorDidUpdateHandoffApplicationNotification
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorDidUpdateImageForItemNotification
|| __DATA_CONST.__const _WBSForYouRecommendationMediatorRecommendationKey
|| __DATA_CONST.__const _WBSFoundInRecommendationManagerDidUpdateSuggestionsNotification
|| __DATA_CONST.__const _WBSParsecABGroupManagerDidChangeGroupIdentifierNotification
|| __DATA_CONST.__const _WBSParsecAuxiliaryInfoTextColorGreen
|| __DATA_CONST.__const _WBSParsecAuxiliaryInfoTextColorRed
|| __DATA_CONST.__const _WBSParsecDSessionDidLoadBagNotification
|| __DATA_CONST.__const _WBSParsecEngagementActionArea
|| __DATA_CONST.__const _WBSParsecEngagementActionAreaCard
|| __DATA_CONST.__const _WBSParsecEngagementActionAreaResult
|| __DATA_CONST.__const _WBSParsecEngagementActionCardType
|| __DATA_CONST.__const _WBSParsecEngagementActionDestination
|| __DATA_CONST.__const _WBSParsecEngagementActionTarget
|| __DATA_CONST.__const _WBSParsecEngagementActionTargetPlayButton
|| __DATA_CONST.__const _WBSParsecEngagementActionType
|| __DATA_CONST.__const _WBSParsecEngagementActionTypeEnterKey
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetErrorDomain
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusCached
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusDebug
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusError
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusNoCompletion
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusNoResults
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusOK
|| __DATA_CONST.__const _WBSParsecSearchCompletionResultSetStatusRemote
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardAddressAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessMoreInfoAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessPhotoAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessReportAProblemAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessReviewAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardBusinessWriteAReviewAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardDirectionsFromHereAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardDirectionsToHereAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardHomePageAction
|| __DATA_CONST.__const _WBSParsecSearchMapsResultInCardPhoneAction
|| __DATA_CONST.__const _WBSParsecSearchResultErrorDomain
|| __DATA_CONST.__const _WBSParsecSportsImageErrorDomain
|| __DATA_CONST.__const _WBSParsecSportsScoreSummaryErrorDomain
|| __DATA_CONST.__const _WBSPhishingClassifierErrorDomain
|| __DATA_CONST.__const _WBSSVGImageRenderingWebViewConfigurationGroupIdentifier
|| __DATA_CONST.__const _WBSTouchIconCacheWillPurgeUnneededImagesNotification
|| __DATA_CONST.__const _WBSTouchIconWebViewConfigurationGroupIdentifier
|| __DATA_CONST.__const _WBSTranslationAvailabilityDidChangeNotificationName
|| __DATA_CONST.__const _WBSTranslationConsentedToFirstTimeAlertSettingsKey
|| __DATA_CONST.__const _WBSTranslationDebugAlwaysShowConsentAlertSettingsKey
|| __DATA_CONST.__const _WBSTranslationDetectionDidChangeNotificationName
|| __DATA_CONST.__const _WBSTranslationDetectionDidChangeNotificationNotificationLevelUserInfoKey
|| __DATA_CONST.__const _WBSTranslationDetectionDidChangeNotificationWebpageLanguageUserInfoKey
|| __DATA_CONST.__const _WBSTranslationDiagnosticDictionaryParagraphsKey
|| __DATA_CONST.__const _WBSTranslationDiagnosticDictionaryURLKey
|| __DATA_CONST.__const _WBSTranslationEnableContinuedTranslationSettingsKey
|| __DATA_CONST.__const _WBSTranslationEnabledSettingsKey
|| __DATA_CONST.__const _WBSTranslationErrorDomain
|| __DATA_CONST.__const _WBSTranslationForceOnlineTranslationSettingsKey
|| __DATA_CONST.__const _WBSTranslationHideInternalTapToRadarActionSettingsKey
|| __DATA_CONST.__const _WBSTranslationHideMessageInUnifiedFieldSettingsKey
|| __DATA_CONST.__const _WBSTranslationLowErrorAlertThresholdSettingsKey
|| __DATA_CONST.__const _WBSTranslationSetWebpageTranslationTaskSettingsKey
|| __DATA_CONST.__const _WBSTranslationStateDidChangeNotificationName
|| __DATA_CONST.__const _WBSTranslationStateDidChangeNotificationNewStateUserInfoKey
|| __DATA_CONST.__const _WBSTranslationStateDidChangeNotificationPreviousStateUserInfoKey
|| __DATA_CONST.__const _WBSTranslationTargetLanguageChineseSettingsKey
|| __DATA_CONST.__const _WBSTranslationTargetLanguageEnglishSettingsKey
|| __DATA_CONST.__const _WBSTranslationTargetLanguageFrenchSettingsKey
|| __DATA_CONST.__const _WBSTranslationTargetLanguageGermanSettingsKey
|| __DATA_CONST.__const _WBSTranslationTargetLanguagePortugeseSettingsKey
|| __DATA_CONST.__const _WBSTranslationTargetLanguageRussianSettingsKey
|| __DATA_CONST.__const _WBSTranslationTargetLanguageSpanishSettingsKey
|| __DATA_CONST.__const _WBSTranslationUseTranslationAPIsSettingsKey
|| __DATA_CONST.__const _WBSWKTextManipulationItemIdentifierKey
|| __DATA_CONST.__const _WBSWKTextManipulationItemTokensKey
|| __DATA_CONST.__const _WBSWKTextManipulationTokenContentKey
|| __DATA_CONST.__const _WBSWKTextManipulationTokenIdentifierKey
|| __DATA_CONST.__const _WBSWKTextManipulationTokenMetadataKey
|| __DATA_CONST.__const _WBSWKTextManipulationTokenMetadataRoleAttributeKey
|| __DATA_CONST.__const _WBSWKTextManipulationTokenMetadataTagNameKey
|| __DATA_CONST.__const _WBSWKTextManipulationTokenShouldTranslateKey
|| __DATA_CONST.__const _WBSWebProcessPlugInDefaultSearchEngineKey
|| __DATA_CONST.__const _WBSWebProcessPlugInParsecABGroupIdentifierKey
|| __DATA_CONST.__const _WBSWebProcessPlugInParsecABTestingEnabledKey
|| __DATA_CONST.__const _WBSWebProcessPlugInSearchEnginesForRedirectToSafeSearchKey
|| __DATA_CONST.__const _WBS_WKTextManipulationTokenUserInfoRoleAttributeKey
|| __DATA_CONST.__const _WBS_WKTextManipulationTokenUserInfoTagNameKey
|| __DATA_CONST.__const _coreSpotlightHistoryContentType
|| __DATA_CONST.__const _coreSpotlightPageVisitCountKey
|| __DATA_CONST.__const _dpLanguageCodeForEnglish
|| __DATA_CONST.__const _dpLanguageCodeForFrench
|| __DATA_CONST.__const _dpLanguageCodeForGerman
|| __DATA_CONST.__const _dpLanguageCodeForJapanese
|| __DATA_CONST.__const _dpLanguageCodeForOthers
|| __DATA_CONST.__const _dpLanguageCodeForRussian
|| __DATA_CONST.__const _dpLanguageCodeForSimplifiedChinese
|| __DATA_CONST.__const _dpLanguageCodeForSpanish
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSCacheRetainReleasePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSearchProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteMetadataImageCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteMetadataImageCacheSettingsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSSiteMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconCacheSettingsEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSTouchIconCacheSettingsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSWebProcessPlugIn
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WBSWebProcessPlugInPageController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSCacheRetainReleasePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSearchProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataImageCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataImageCacheSettingsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSSiteMetadataManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconCacheSettingsEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSTouchIconCacheSettingsSQLiteStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSWebProcessPlugIn
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WBSWebProcessPlugInPageController
|| __TEXT.__const _WBSFaviconRequestMediumIconSize
|| __TEXT.__const _WBSFaviconRequestSmallIconSize
|| __TEXT.__const _WBSForYouRelevancyThresholdInSeconds
|| __TEXT.__text _WBSComputeAverageLuminance
|| __TEXT.__text _WBSComputeLuminance
|| __TEXT.__text _WBSEuclideanDistanceBetweenPoints
|| __TEXT.__text _WBSFolderGlyphColor
|| __TEXT.__text _WBSForYouLinkRecommendationSourceDownvoteActionTitle
|| __TEXT.__text _WBSMLPhishingDetailsText
|| __TEXT.__text _WBSMLPhishingPageTitle
|| __TEXT.__text _WBSMLPhishingWarningText
|| __TEXT.__text _WBSPhishingClassificationFromString
|| __TEXT.__text _WBSPhishingClassificationToString
|| __TEXT.__text _WBSRectCenteredWithinRect
|| __TEXT.__text _WBSRoundFloatToPixelsInContext
|| __TEXT.__text _WBSSetParsecGlobalFeedbackDispatcherEnabledBlock
|| __TEXT.__text _WBSSharedParsecBag
|| __TEXT.__text _WBSSharedParsecGlobalFeedbackDispatcher
|| __TEXT.__text _WBSShouldApplyBackingForDarkBackdropToImage
|| __TEXT.__text _WBSSizeScaleAspectFillSize
|| __TEXT.__text _WBSSizeScaleAspectFitSize
|| __TEXT.__text _WBSTranslationAlertAllowButtonTitleForType
|| __TEXT.__text _WBSTranslationAlertDeclineButtonTitleForType
|| __TEXT.__text _WBSTranslationAlertTitleStringForType
|| __TEXT.__text _WBSTranslationDetailStringForType
|| __TEXT.__text _WBSTranslationLearnMoreBodyTextForType
|| __TEXT.__text _WBSTranslationLearnMoreTitleForType
|| __TEXT.__text _WBSTranslationStateDescription
|| __TEXT.__text _WBSUISafariSandboxBrokerInterface
|| __TEXT.__text _WBSUISafariSandboxBrokerInterfaceWithProtocol
|| __TEXT.__text __ZN12SafariShared25TranslatedFileURLProtocol16registerProtocolEPKNS0_12ProtocolInfoE
|| __TEXT.__text _allSupportedTargetLocales
|| __TEXT.__text _allocMAAssetInstance
|| __TEXT.__text _allocMAAssetQueryInstance
|| __TEXT.__text _allocMLModelInstance
|| __TEXT.__text _allocPKGlyphViewInstance
|| __TEXT.__text _allocVNClassificationObservationInstance
|| __TEXT.__text _allocVNCoreMLModelInstance
|| __TEXT.__text _allocVNCoreMLRequestInstance
|| __TEXT.__text _allocVNImageRequestHandlerInstance
|| __TEXT.__text _alloc_LTAlignmentInstance
|| __TEXT.__text _alloc_LTLanguageDetectionResultInstance
|| __TEXT.__text _alloc_LTLocalePairInstance
|| __TEXT.__text _alloc_LTParagraphTranslationRequestInstance
|| __TEXT.__text _alloc_LTTextLanguageDetectionResultInstance
|| __TEXT.__text _alloc_LTTranslationRangeInstance
|| __TEXT.__text _alloc_LTTranslationRequestInstance
|| __TEXT.__text _alloc_LTTranslationSessionInstance
|| __TEXT.__text _alloc_LTTranslatorInstance
|| __TEXT.__text _availablePreferredTargetLocalesFilteredBySupportedLocales
|| __TEXT.__text _canLoadCoreML
|| __TEXT.__text _canLoadMobileAsset
|| __TEXT.__text _canLoadPassKitUIFoundation
|| __TEXT.__text _canLoadTranslation
|| __TEXT.__text _canLoadVision
|| __TEXT.__text _defaultTranslationPreferenceValues
|| __TEXT.__text _getASAttributeContentVersion
|| __TEXT.__text _getMLModelVersionStringKey
|| __TEXT.__text _get_LTTranslationTaskHint
|| __TEXT.__text _get_LTTranslationTaskHintWeb
|| __TEXT.__text _preferredTargetLocalesFromSettings
|| __TEXT.__text _showInternalTranslationActions
__ Accelerate: _vImageBuffer_Init
__ Accelerate: _vImageBuffer_InitWithCGImage
__ Accelerate: _vImageCGImageFormat_IsEqual
__ Accelerate: _vImageConvert_AnyToAny
__ Accelerate: _vImageConverter_CreateWithCGImageFormat
__ Accelerate: _vImageConverter_MustOperateOutOfPlace
__ Accelerate: _vImageConverter_Release
__ Accelerate: _vImageHistogramCalculation_ARGB8888
__ CFNetwork: _CFURLProtocolGetClient
__ CFNetwork: _CFURLProtocolGetRequest
__ CFNetwork: _CFURLProtocolRegisterImplementation
__ CFNetwork: _CFURLRequestGetURL
__ CFNetwork: _CFURLResponseCreate
__ CFNetwork: _OBJC_CLASS_$_NSURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: __CFHostIsDomainTopLevel
__ CFNetwork: __CFNetworkCopyHSTSPolicies
__ CFNetwork: __CFNetworkResetHSTS
__ CFNetwork: _kCFErrorDomainCFNetwork
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ ContextKit: _OBJC_CLASS_$_CKContextResponse
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFDataCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFErrorCreate
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFURLCreateStringByAddingPercentEscapes
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextConvertSizeToDeviceSpace
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawImageFromRect
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextGetUserSpaceToDeviceSpaceTransform
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetInterpolationQuality
__ CoreGraphics: _CGDataProviderCopyData
__ CoreGraphics: _CGImageGetBitmapInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBitsPerPixel
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetDataProvider
__ CoreGraphics: _CGImageGetDecode
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetRenderingIntent
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageHasAlpha
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceGenericRGB
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreParsec: _OBJC_CLASS_$_PARRequest
__ CoreParsec: _OBJC_CLASS_$_PARSession
__ CoreParsec: _OBJC_CLASS_$_PARSessionConfiguration
__ CoreRecognition: _CROutputTypeCreditCardCardholderName
__ CoreRecognition: _CROutputTypeCreditCardExpirationDate
__ CoreRecognition: _CROutputTypeCreditCardNumber
__ CoreServices: _OBJC_CLASS_$_LSAppLink
__ CoreServices: _OBJC_CLASS_$__LSOpenConfiguration
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTagClassMIMEType
__ CoreServices: _kUTTypeICO
__ CoreSpotlight: _OBJC_CLASS_$_CSCustomAttributeKey
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchQuery
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableIndex
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItem
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableItemAttributeSet
__ CoreSuggestions: _OBJC_CLASS_$_SGSuggestionsService
__ CoreSuggestions: _kSGURLChangeNotification
__ CoreText: _CTFontDescriptorCreateMatchingFontDescriptors
__ CoreText: _CTFontDescriptorCreateWithAttributes
__ CoreText: _CTFontDescriptorMatchFontDescriptorsWithProgressHandler
__ CoreText: _CTLineCreateTruncatedLineWithTokenHandler
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineGetGlyphRuns
__ CoreText: _kCTFontDescriptorTextStyleAttribute
__ CoreText: _kCTFontDescriptorTextStyleHeavy
__ CoreText: _kCTFontDownloadableAttribute
__ CoreText: _kCTFontDownloadedAttribute
__ CoreText: _kCTFontFamilyNameAttribute
__ CoreText: _kCTFontWeightLight
__ CoreText: _kCTFontWeightMedium
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUserActivityTypeBrowsingWeb
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ FrontBoardServices: _FBSOpenApplicationOptionKeyBrowserAppLinkState4LS
__ GeoServices: _OBJC_CLASS_$_GEOUsageManager
__ GeoServices: _OBJC_CLASS_$_GEOUserSession
__ IMCore: _IMSPIQueryMessageWithGUIDAndLoadAttachments
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _kCGImagePropertyPixelHeight
__ ImageIO: _kCGImagePropertyPixelWidth
__ JavaScriptCore: _WTFLogAlways
__ JavaScriptCore: __ZN3WTF10fastMallocEm
__ JavaScriptCore: __ZN3WTF16fastZeroedMallocEm
__ JavaScriptCore: __ZN3WTF16weakRandomUint32Ev
__ JavaScriptCore: __ZN3WTF8fastFreeEPv
__ LinkPresentation: _OBJC_CLASS_$_LPMetadataProvider
__ MapKit: _OBJC_CLASS_$_MKMapItem
__ OnBoardingKit: _OBJC_CLASS_$_OBBoldTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBLinkTrayButton
__ OnBoardingKit: _OBJC_CLASS_$_OBTextWelcomeController
__ ParsecSubscriptionServiceSupport: _OBJC_CLASS_$_PSSSSubscriptionManagerInternal
__ PersonalizationPortrait: _OBJC_CLASS_$_PPNamedEntityQuery
__ PersonalizationPortrait: _OBJC_CLASS_$_PPNamedEntityStore
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _kCAMediaTimingFunctionEaseOut
__ QuartzCore: _kCAMediaTimingFunctionLinear
__ SafariShared: _OBJC_CLASS_$_WBSAnalyticsLogger
__ SafariShared: _OBJC_CLASS_$_WBSCoalescedAsynchronousWriter
__ SafariShared: _OBJC_CLASS_$_WBSCompletionQuery
__ SafariShared: _OBJC_CLASS_$_WBSConfigurationDataTransformer
__ SafariShared: _OBJC_CLASS_$_WBSContentBlockerStatisticsSQLiteStore
__ SafariShared: _OBJC_CLASS_$_WBSCreditCardData
__ SafariShared: _OBJC_CLASS_$_WBSCrowdsourcedFeedbackDomainNormalizer
__ SafariShared: _OBJC_CLASS_$_WBSFormAutoFillCorrectionsSQLiteStore
__ SafariShared: _OBJC_CLASS_$_WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor
__ SafariShared: _OBJC_CLASS_$_WBSFormAutoFillParsecDomainPolicyProvider
__ SafariShared: _OBJC_CLASS_$_WBSHistory
__ SafariShared: _OBJC_CLASS_$_WBSOpenSearchURLTemplate
__ SafariShared: _OBJC_CLASS_$_WBSPair
__ SafariShared: _OBJC_CLASS_$_WBSParsecModel
__ SafariShared: _OBJC_CLASS_$_WBSParsecSchema
__ SafariShared: _OBJC_CLASS_$_WBSPerSitePreference
__ SafariShared: _OBJC_CLASS_$_WBSPerSitePreferenceManager
__ SafariShared: _OBJC_CLASS_$_WBSPerSitePreferencesSQLiteStore
__ SafariShared: _OBJC_CLASS_$_WBSPeriodicActivityScheduler
__ SafariShared: _OBJC_CLASS_$_WBSReaderFont
__ SafariShared: _OBJC_CLASS_$_WBSRecentHistoryTopicTagController
__ SafariShared: _OBJC_CLASS_$_WBSRemotePlistController
__ SafariShared: _OBJC_CLASS_$_WBSSQLiteDatabase
__ SafariShared: _OBJC_CLASS_$_WBSSQLiteStatement
__ SafariShared: _OBJC_CLASS_$_WBSSQLiteStore
__ SafariShared: _OBJC_CLASS_$_WBSSafariSandboxBroker
__ SafariShared: _OBJC_CLASS_$_WBSSafariSandboxBrokerConnection
__ SafariShared: _OBJC_CLASS_$_WBSURLSuffixChecker
__ SafariShared: _OBJC_METACLASS_$_WBSConfigurationDataTransformer
__ SafariShared: _OBJC_METACLASS_$_WBSParsecModel
__ SafariShared: _OBJC_METACLASS_$_WBSPerSitePreferenceManager
__ SafariShared: _OBJC_METACLASS_$_WBSSQLiteStore
__ SafariShared: _OBJC_METACLASS_$_WBSSafariSandboxBroker
__ SafariShared: _OBJC_METACLASS_$_WBSSafariSandboxBrokerConnection
__ SafariShared: _WBSDebugMLPhishingAssetURLKey
__ SafariShared: _WBSDisableMLPhishingKey
__ SafariShared: _WBSDispatchGroupNotifyWithTimeout
__ SafariShared: _WBSExpirationDateWithDayMonthYear
__ SafariShared: _WBSForYouSitePreferenceIdentifier
__ SafariShared: _WBSHistoryInMemoryDatabaseKey
__ SafariShared: _WBSHistoryItemsKey
__ SafariShared: _WBSHistoryItemsWereAddedNotification
__ SafariShared: _WBSHistoryItemsWereLoadedNotification
__ SafariShared: _WBSHistoryItemsWereRemovedNotification
__ SafariShared: _WBSHistoryWasClearedNotification
__ SafariShared: _WBSHistoryWasLoadedNotification
__ SafariShared: _WBSIsEqual
__ SafariShared: _WBSLogWithDifferentialPrivacy
__ SafariShared: _WBSParsecABGroupIdentifierGenerationDatePreferenceKey
__ SafariShared: _WBSParsecABGroupIdentifierPreferenceKey
__ SafariShared: _WBSParsecDomainServerMaps
__ SafariShared: _WBSParsecITunesMediaKindAlbum
__ SafariShared: _WBSParsecITunesMediaKindArtist
__ SafariShared: _WBSParsecITunesMediaKindPlaylist
__ SafariShared: _WBSParsecITunesMediaKindSong
__ SafariShared: _WBSSafariSandboxBrokerInterfaceWithProtocol
__ SafariShared: _WBSTranslationIsUnthrottledKey
__ SafariShared: __WBSLocalizedString
__ SafariShared: __ZN12SafariShared25SuddenTerminationDisabler23enableSuddenTerminationEv
__ SafariShared: __ZN12SafariShared25SuddenTerminationDisablerC1EP8NSString
__ SafariShared: _canLoadSharedWebCredentials
__ SafariShared: _get_SWCTrackingDomainInfoClass
__ SearchFoundation: _OBJC_CLASS_$_SFClearInputFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFClientTimingFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFCompactRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFCustomFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFDetailedRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFDidGoToSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFDidGoToSiteFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFEndLocalSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFEndNetworkSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFImage
__ SearchFoundation: _OBJC_CLASS_$_SFMapsCardSectionEngagementFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFMapsDetailedRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFRankingFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFResultEngagementFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFResultRankingFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFResultSection
__ SearchFoundation: _OBJC_CLASS_$_SFResultsReceivedAfterTimeoutFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFRowCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFScoreboardCardSection
__ SearchFoundation: _OBJC_CLASS_$_SFSearchResult
__ SearchFoundation: _OBJC_CLASS_$_SFSearchSuggestion
__ SearchFoundation: _OBJC_CLASS_$_SFSearchViewAppearFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFSearchViewDisappearFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFSectionRankingFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFStartLocalSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFStartNetworkSearchFeedback
__ SearchFoundation: _OBJC_CLASS_$_SFText
__ SearchFoundation: _OBJC_CLASS_$_SFVisibleResultsFeedback
__ Translation: __LTTranslationErrorDomain
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSParagraphStyleAttributeName
__ UIKit: _NSUnderlineStyleAttributeName
__ UIKit: _OBJC_CLASS_$_NSParagraphStyle
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _UIFontDescriptorSystemDesignSerif
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePNGRepresentation
__ UserActivity: _OBJC_CLASS_$_UABestAppSuggestionManager
__ UserActivity: _OBJC_CLASS_$_UAUserActivity
__ UserActivity: _OBJC_CLASS_$_UAUserActivityManager
__ WebKit: _OBJC_CLASS_$_WKBackForwardListItem
__ WebKit: _OBJC_CLASS_$_WKBrowsingContextController
__ WebKit: _OBJC_CLASS_$_WKContentWorld
__ WebKit: _OBJC_CLASS_$_WKNavigationAction
__ WebKit: _OBJC_CLASS_$_WKProcessPool
__ WebKit: _OBJC_CLASS_$_WKSnapshotConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebProcessPlugInNodeHandle
__ WebKit: _OBJC_CLASS_$_WKWebProcessPlugInScriptWorld
__ WebKit: _OBJC_CLASS_$_WKWebView
__ WebKit: _OBJC_CLASS_$_WKWebViewConfiguration
__ WebKit: _OBJC_CLASS_$_WKWebsiteDataStore
__ WebKit: _OBJC_CLASS_$__WKProcessPoolConfiguration
__ WebKit: _OBJC_CLASS_$__WKRemoteObjectInterface
__ WebKit: _OBJC_CLASS_$__WKTextManipulationConfiguration
__ WebKit: _OBJC_CLASS_$__WKTextManipulationExclusionRule
__ WebKit: _OBJC_CLASS_$__WKTextManipulationItem
__ WebKit: _OBJC_CLASS_$__WKTextManipulationToken
__ WebKit: _OBJC_CLASS_$__WKWebsiteDataStoreConfiguration
__ WebKit: __WKLegacyErrorDomain
__ WebKit: __WKTextManipulationItemErrorItemKey
__ WebKit: __WKWebsiteDataTypeAdClickAttributions
__ WebKit: __WKWebsiteDataTypeCredentials
__ WebKit: __WKWebsiteDataTypeHSTSCache
__ WebKit: __WKWebsiteDataTypeMediaKeys
__ WebKit: __WKWebsiteDataTypeResourceLoadStatistics
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_8_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pow
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
WBSPhishingConfigurationOverride : NSObject /usr/lib/libc++.1.dylib
 @property  NSRegularExpression *expression
 @property  unsigned long classification

  // instance methods
  -[WBSPhishingConfigurationOverride .cxx_destruct]
  -[WBSPhishingConfigurationOverride initWithDictionary:error:]
  -[WBSPhishingConfigurationOverride classification]
  -[WBSPhishingConfigurationOverride dictionaryRepresentation]
  -[WBSPhishingConfigurationOverride expression]
  -[WBSPhishingConfigurationOverride initWithExpression:classification:error:]


WBSPhishingConfigurationDomain : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *expressions

  // instance methods
  -[WBSPhishingConfigurationDomain matchesURL:]
  -[WBSPhishingConfigurationDomain .cxx_destruct]
  -[WBSPhishingConfigurationDomain initWithDictionary:error:]
  -[WBSPhishingConfigurationDomain expressions]
  -[WBSPhishingConfigurationDomain dictionaryRepresentation]
  -[WBSPhishingConfigurationDomain initWithExpressions:error:]


WBSPhishingConfigurationImageClassifierIdentifier : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domainName
 @property  float minimumConfidence

  // instance methods
  -[WBSPhishingConfigurationImageClassifierIdentifier domainName]
  -[WBSPhishingConfigurationImageClassifierIdentifier .cxx_destruct]
  -[WBSPhishingConfigurationImageClassifierIdentifier initWithDictionary:error:]
  -[WBSPhishingConfigurationImageClassifierIdentifier minimumConfidence]
  -[WBSPhishingConfigurationImageClassifierIdentifier dictionaryRepresentation]
  -[WBSPhishingConfigurationImageClassifierIdentifier initWithDomain:minimumConfidence:]


WBSPhishingConfiguration : NSObject /usr/lib/libc++.1.dylib <WBSRemotePlistSnapshot>
 @property  unsigned long imageCropAndScaleOption
 @property  {CGSize=dd} imageInputSize
 @property  NSString *version
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSPhishingConfiguration .cxx_destruct]
  -[WBSPhishingConfiguration initWithDictionary:error:]
  -[WBSPhishingConfiguration version]
  -[WBSPhishingConfiguration dictionaryRepresentation]
  -[WBSPhishingConfiguration imageCropAndScaleOption]
  -[WBSPhishingConfiguration initWithPlistData:error:]
  -[WBSPhishingConfiguration plistDataWithFormat:]
  -[WBSPhishingConfiguration _parseOverrides:error:]
  -[WBSPhishingConfiguration _parseDomains:error:]
  -[WBSPhishingConfiguration _parseImageClassifierIdentifiers:error:]
  -[WBSPhishingConfiguration _sanitizeURL:]
  -[WBSPhishingConfiguration classifyURL:error:]
  -[WBSPhishingConfiguration classifyURL:imageClassifierIdentifier:imageClassifierConfidence:error:]
  -[WBSPhishingConfiguration imageInputSize]


WBSUISafariSandboxBrokerConnection : WBSSafariSandboxBrokerConnection /System/Library/Frameworks/Accelerate.framework/Accelerate <WBSUISafariSandboxBrokerProtocol>
  // instance methods
  -[WBSUISafariSandboxBrokerConnection loadLinkPresentationMetdataForMessageWithGUID:completionHandler:]


WBSBookmarkFolderTouchIconProvider : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataProvider>
 @property  NSArray *allFolderUUIDs
 @property  UIColor *backgroundColor
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSBookmarkFolderTouchIconProvider _appUsesLeftToRightLayout]

  // instance methods
  -[WBSBookmarkFolderTouchIconProvider responseForRequest:willProvideUpdates:]
  -[WBSBookmarkFolderTouchIconProvider init]
  -[WBSBookmarkFolderTouchIconProvider setProviderDelegate:]
  -[WBSBookmarkFolderTouchIconProvider providerDelegate]
  -[WBSBookmarkFolderTouchIconProvider backgroundColor]
  -[WBSBookmarkFolderTouchIconProvider .cxx_destruct]
  -[WBSBookmarkFolderTouchIconProvider touchIconRequestForBookmark:inFolderWithRequest:]
  -[WBSBookmarkFolderTouchIconProvider allFolderUUIDs]
  -[WBSBookmarkFolderTouchIconProvider defaultFolderIconForRequest:]
  -[WBSBookmarkFolderTouchIconProvider stopWatchingUpdatesForRequest:]
  -[WBSBookmarkFolderTouchIconProvider removeInfoForFolderWithUUID:]
  -[WBSBookmarkFolderTouchIconProvider removeInfoForFoldersWithUUIDs:]
  -[WBSBookmarkFolderTouchIconProvider displayableFolderContentsForRequest:]
  -[WBSBookmarkFolderTouchIconProvider canHandleRequest:]
  -[WBSBookmarkFolderTouchIconProvider prepareResponseForRequest:allowDelayedResponse:]
  -[WBSBookmarkFolderTouchIconProvider bookmarkUUIDForRequest:]
  -[WBSBookmarkFolderTouchIconProvider _prepareResponseForRequest:allowDelayedResponse:]
  -[WBSBookmarkFolderTouchIconProvider _responseHandlerForRequest:thumbnailIndex:]
  -[WBSBookmarkFolderTouchIconProvider _coalesceResponseDispatchForRequest:]
  -[WBSBookmarkFolderTouchIconProvider _dispatchResponseForRequest:]
  -[WBSBookmarkFolderTouchIconProvider _dispatchResponseForRequest:touchIcon:]
  -[WBSBookmarkFolderTouchIconProvider _drawTouchIconForRequest:]
  -[WBSBookmarkFolderTouchIconProvider didCreateTouchIcon:]


WBSBookmarkFolderTouchIconProviderRequestInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *subrequestTokens
 @property  NSArray *thumbnailImages
 @property  NSArray *backgroundColors
 @property  BOOL hasScheduledCoalescedUpdate

  // instance methods
  -[WBSBookmarkFolderTouchIconProviderRequestInfo init]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo thumbnailImages]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo .cxx_destruct]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo backgroundColors]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo subrequestTokens]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo setSubrequestTokens:]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo setThumbnailImage:atIndex:]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo setBackgroundColor:atIndex:]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo hasScheduledCoalescedUpdate]
  -[WBSBookmarkFolderTouchIconProviderRequestInfo setHasScheduledCoalescedUpdate:]


WBSBookmarkFolderTouchIconProviderInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *thumbnailImages
 @property  NSArray *backgroundColors
 @property  UIImage *touchIcon

  // class methods
  +[WBSBookmarkFolderTouchIconProviderInfo new]

  // instance methods
  -[WBSBookmarkFolderTouchIconProviderInfo init]
  -[WBSBookmarkFolderTouchIconProviderInfo thumbnailImages]
  -[WBSBookmarkFolderTouchIconProviderInfo .cxx_destruct]
  -[WBSBookmarkFolderTouchIconProviderInfo backgroundColors]
  -[WBSBookmarkFolderTouchIconProviderInfo touchIcon]
  -[WBSBookmarkFolderTouchIconProviderInfo initWithThumbnailImages:backgroundColors:touchIcon:]


WBSCacheRetainReleasePolicy : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *retainedKeyStrings

  // instance methods
  -[WBSCacheRetainReleasePolicy retainedKeyStrings]
  -[WBSCacheRetainReleasePolicy retainEntriesForKeyStrings:]
  -[WBSCacheRetainReleasePolicy releaseEntryForKeyString:]
  -[WBSCacheRetainReleasePolicy .cxx_destruct]
  -[WBSCacheRetainReleasePolicy initWithPurgeBlock:]
  -[WBSCacheRetainReleasePolicy releaseEntryWithKeyStringProvider:]
  -[WBSCacheRetainReleasePolicy _releaseEntryForKeyString:]
  -[WBSCacheRetainReleasePolicy releaseEntriesForKeyStrings:]
  -[WBSCacheRetainReleasePolicy retainEntryWithKeyStringProvider:]
  -[WBSCacheRetainReleasePolicy retainEntryForKeyString:]
  -[WBSCacheRetainReleasePolicy _retainEntryForKeyString:]
  -[WBSCacheRetainReleasePolicy isEntryRetainedForKeyString:]


WBSFaviconRequest : WBSSiteMetadataRequest <WBSIconRequest>
 @property  unsigned long type
 @property  {CGSize=dd} iconSize
 @property  unsigned long fallbackType
 @property  BOOL isURLTypedByUser
 @property  {CGSize=dd} sizeForDrawing
 @property  NSString *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSFaviconRequest iconSize]
  -[WBSFaviconRequest fallbackType]
  -[WBSFaviconRequest uniqueIdentifier]
  -[WBSFaviconRequest type]
  -[WBSFaviconRequest sizeForDrawing]
  -[WBSFaviconRequest _initWithURL:type:iconSize:fallbackType:isURLTypedByUser:]
  -[WBSFaviconRequest initWithURL:extraInfo:]
  -[WBSFaviconRequest initWithDomain:iconSize:fallbackType:]
  -[WBSFaviconRequest initWithURL:iconSize:fallbackType:]
  -[WBSFaviconRequest initWithURL:iconSize:fallbackType:isURLTypedByUser:]
  -[WBSFaviconRequest isURLTypedByUser]


WBSTranslationConsentAlertHelper : NSObject /usr/lib/libc++.1.dylib <UIAdaptivePresentationControllerDelegate>
 @property  <WBSTranslationConsentAlertHelperDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSTranslationConsentAlertHelper .cxx_destruct]
  -[WBSTranslationConsentAlertHelper consentAlertForType:withCompletionHandler:]
  -[WBSTranslationConsentAlertHelper setDelegate:]
  -[WBSTranslationConsentAlertHelper _notNow:]
  -[WBSTranslationConsentAlertHelper delegate]
  -[WBSTranslationConsentAlertHelper presentationControllerDidDismiss:]
  -[WBSTranslationConsentAlertHelper _callCompletionHandlerIfNeededWithConsent:]
  -[WBSTranslationConsentAlertHelper _enableTranslation:]


WBSFaviconRequestsController : NSObject /usr/lib/libc++.1.dylib
 @property  WBSSiteMetadataManager *manager
 @property  long long priority
 @property  {CGSize=dd} size

  // instance methods
  -[WBSFaviconRequestsController dealloc]
  -[WBSFaviconRequestsController size]
  -[WBSFaviconRequestsController .cxx_destruct]
  -[WBSFaviconRequestsController manager]
  -[WBSFaviconRequestsController setSize:]
  -[WBSFaviconRequestsController setPriority:]
  -[WBSFaviconRequestsController priority]
  -[WBSFaviconRequestsController _issueRequest:isOneTime:withToken:completion:]
  -[WBSFaviconRequestsController registerRequestForURLString:withToken:returnDefaultIconIfNoneAvailable:iconSize:isURLTypedByUser:completion:]
  -[WBSFaviconRequestsController registerOneTimeRequestForURLString:withToken:returnDefaultIconIfNoneAvailable:iconSize:isURLTypedByUser:completion:]
  -[WBSFaviconRequestsController cancelAllRegistrationsWithCompletionHandler:]
  -[WBSFaviconRequestsController initWithSiteMetadataManager:]
  -[WBSFaviconRequestsController registerRequestForDomain:withToken:completion:]
  -[WBSFaviconRequestsController registerRequestForURLString:withToken:completion:]
  -[WBSFaviconRequestsController registerOneTimeRequestForURLString:withToken:completion:]
  -[WBSFaviconRequestsController registerOneTimeRequestForDomain:withToken:completion:]
  -[WBSFaviconRequestsController cancelAllRegistrations]


WBSFaviconResponse : WBSSiteMetadataResponse <WBSIconResponse>
 @property  UIImage *favicon
 @property  unsigned long faviconType
 @property  UIImage *icon
 @property  BOOL generated
 @property  UIColor *extractedBackgroundColor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSFaviconResponse initWithURL:]
  -[WBSFaviconResponse .cxx_destruct]
  -[WBSFaviconResponse icon]
  -[WBSFaviconResponse favicon]
  -[WBSFaviconResponse faviconType]
  -[WBSFaviconResponse initWithURL:favicon:faviconType:]


WBSPhishingClassifierResults : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *url
 @property  UIImage *image
 @property  unsigned long classification
 @property  NSString *identifier
 @property  float confidence
 @property  NSDictionary *dictionaryRepresentation

  // instance methods
  -[WBSPhishingClassifierResults url]
  -[WBSPhishingClassifierResults .cxx_destruct]
  -[WBSPhishingClassifierResults confidence]
  -[WBSPhishingClassifierResults image]
  -[WBSPhishingClassifierResults identifier]
  -[WBSPhishingClassifierResults classification]
  -[WBSPhishingClassifierResults dictionaryRepresentation]
  -[WBSPhishingClassifierResults initWithURL:image:classification:identifier:confidence:]


_WBSFaviconRecord : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *pageURL
 @property  NSURL *originalPageURL
 @property  NSURL *iconURL
 @property  NSData *iconData
 @property  {CGSize=dd} size
 @property  BOOL isPrivate

  // class methods
  +[_WBSFaviconRecord new]

  // instance methods
  -[_WBSFaviconRecord isPrivate]
  -[_WBSFaviconRecord init]
  -[_WBSFaviconRecord pageURL]
  -[_WBSFaviconRecord iconData]
  -[_WBSFaviconRecord size]
  -[_WBSFaviconRecord .cxx_destruct]
  -[_WBSFaviconRecord iconURL]
  -[_WBSFaviconRecord initWithPageURL:originalPageURL:iconURL:iconData:size:isPrivate:]
  -[_WBSFaviconRecord originalPageURL]


WBSFaviconProvider : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataProvider>
 @property  NSURL *baseURL
 @property  {CGSize=dd} preferredIconSize
 @property  double preferredIconScale
 @property  NSArray *allIconScales
 @property  BOOL isReadOnly
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSFaviconProvider defaultFaviconSize]

  // instance methods
  -[WBSFaviconProvider isReadOnly]
  -[WBSFaviconProvider responseForRequest:willProvideUpdates:]
  -[WBSFaviconProvider init]
  -[WBSFaviconProvider setProviderDelegate:]
  -[WBSFaviconProvider baseURL]
  -[WBSFaviconProvider providerDelegate]
  -[WBSFaviconProvider setUpWithCompletionHandler:]
  -[WBSFaviconProvider dealloc]
  -[WBSFaviconProvider .cxx_destruct]
  -[WBSFaviconProvider savePendingChangesBeforeTermination]
  -[WBSFaviconProvider initWithPersistenceBaseURL:persistenceName:preferredIconSize:atScale:allScales:isReadOnly:shouldCheckIntegrityWhenOpeningDatabaseBlock:]
  -[WBSFaviconProvider flushPrivateDataFromMemoryWithCompletionHandler:]
  -[WBSFaviconProvider stopWatchingUpdatesForRequest:]
  -[WBSFaviconProvider preferredIconSize]
  -[WBSFaviconProvider canHandleRequest:]
  -[WBSFaviconProvider prepareResponseForRequest:allowDelayedResponse:]
  -[WBSFaviconProvider persistenceController]
  -[WBSFaviconProvider emptyCaches]
  -[WBSFaviconProvider fallbackIconForRequest:]
  -[WBSFaviconProvider providesFavicons]
  -[WBSFaviconProvider _updateOutstandingRequestsAfterSuccessfulSetup]
  -[WBSFaviconProvider _atomicallySaveImageData:iconURL:pageURL:originalPageURL:size:isPrivate:completionHandler:]
  -[WBSFaviconProvider cleanUpAfterPersistenceSetUpDidSucceed:completionHandler:]
  -[WBSFaviconProvider setUpPersistenceAtPath:completionHandler:]
  -[WBSFaviconProvider _isIconDateExpired:]
  -[WBSFaviconProvider _atomicallyLinkPageURLs:toIconWithInfo:isPrivate:]
  -[WBSFaviconProvider _updateOutstandingRequestsForPageURL:forceDidReceiveNewData:]
  -[WBSFaviconProvider _saveImageData:iconURL:pageURL:originalPageURL:size:isPrivate:completionHandler:]
  -[WBSFaviconProvider _confirmImageDataShouldBeSaved:size:pageURL:iconURL:includingPrivateData:completionHandler:]
  -[WBSFaviconProvider _registerRequest:]
  -[WBSFaviconProvider _cachedResponseForRequest:]
  -[WBSFaviconProvider _prepareAndSendResponseForRequests:forceDidReceiveNewData:]
  -[WBSFaviconProvider _hostFromRequest:]
  -[WBSFaviconProvider _responseCacheKeyForRequest:]
  -[WBSFaviconProvider _responseDictionaryKeyForRequest:]
  -[WBSFaviconProvider _hostFromURL:]
  -[WBSFaviconProvider _removeCachedResponsesForURL:]
  -[WBSFaviconProvider _requestsForHost:]
  -[WBSFaviconProvider _addCachedResponse:forRequest:]
  -[WBSFaviconProvider _getIconForRequest:withCompletionHandler:]
  -[WBSFaviconProvider builtInIconForRequest:]
  -[WBSFaviconProvider imageForRequestDuringPersistenceSetUp:completionHandler:]
  -[WBSFaviconProvider _linkPageURL:toIconWithInfo:isPrivate:completionHandler:]
  -[WBSFaviconProvider initWithPersistenceBaseURL:persistenceName:preferredIconSize:atScale:allScales:shouldCheckIntegrityWhenOpeningDatabaseBlock:]
  -[WBSFaviconProvider providerState]
  -[WBSFaviconProvider shouldIconDataBeSavedForIconWithPageURL:originalPageURL:iconURL:size:isPrivate:completionHandler:]
  -[WBSFaviconProvider linkIconFromPageURL:toCurrentPageURL:isPrivate:completionHandler:]
  -[WBSFaviconProvider saveFaviconImageData:iconURL:pageURL:originalPageURL:size:isPrivate:completionHandler:]
  -[WBSFaviconProvider removeAllIconsForURLStringsNotIn:completionHandler:]
  -[WBSFaviconProvider removeIconForURLString:completionHandler:]
  -[WBSFaviconProvider retainPrivateData]
  -[WBSFaviconProvider releasePrivateData]
  -[WBSFaviconProvider _removeCachedResponsesForRequest:]
  -[WBSFaviconProvider preferredIconScale]
  -[WBSFaviconProvider allIconScales]


WBSFaviconProviderDatabaseController : WBSSQLiteStore /System/Library/Frameworks/Accelerate.framework/Accelerate
  // instance methods
  -[WBSFaviconProviderDatabaseController _migrateToSchemaVersion_3]
  -[WBSFaviconProviderDatabaseController _fetchAllPageURLStrings]
  -[WBSFaviconProviderDatabaseController _hasPageURLsForIconUUID:]
  -[WBSFaviconProviderDatabaseController _firstIconUUIDForPageURLStrings:completionHandler:]
  -[WBSFaviconProviderDatabaseController _deleteRejectedResourceForPageURLString:]
  -[WBSFaviconProviderDatabaseController linkPageURLString:toExistingIconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController linkAndUpdateTimestampForIconWithPageURLString:iconURLString:iconSize:iconHasGeneratedResolutions:completionHandler:]
  -[WBSFaviconProviderDatabaseController _deleteRejectedResourceForPageURLString:iconURLString:]
  -[WBSFaviconProviderDatabaseController fetchPageURLStringsWithPrefixesIn:completionHandler:]
  -[WBSFaviconProviderDatabaseController _fetchIconUUIDForPageURLString:]
  -[WBSFaviconProviderDatabaseController _fetchIconInfoForRejectedResourceWithPageURLString:iconURLString:]
  -[WBSFaviconProviderDatabaseController _deletePageURLsWithUUIDFromPageInfo:]
  -[WBSFaviconProviderDatabaseController firstIconUUIDMatchingPageURLStringIn:completionHandler:]
  -[WBSFaviconProviderDatabaseController _fetchIconInfoForIconURLString:]
  -[WBSFaviconProviderDatabaseController iconInfoForPageURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController _fetchIconUUIDsForPageURLStrings:]
  -[WBSFaviconProviderDatabaseController _deleteIconsWithUUIDsFromIconInfo:]
  -[WBSFaviconProviderDatabaseController removeAllPageURLStringsWithCompletionHandler:]
  -[WBSFaviconProviderDatabaseController _deletePageURL:]
  -[WBSFaviconProviderDatabaseController markRejectedIconAtPageURLString:iconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController _setRejectedResourceForPageURL:iconURLString:]
  -[WBSFaviconProviderDatabaseController fetchAllIconUUIDsWithCompletionHandler:]
  -[WBSFaviconProviderDatabaseController _deletePageURLs:]
  -[WBSFaviconProviderDatabaseController _setIconUUID:forIconURLString:size:hasGeneratedResolutions:]
  -[WBSFaviconProviderDatabaseController iconInfoForIconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController _generateStatementsForQuery:arguments:statementCallback:]
  -[WBSFaviconProviderDatabaseController firstIconInfoMatchingIconURLStringIn:completionHandler:]
  -[WBSFaviconProviderDatabaseController fetchAllKnownPageURLStringsWithCompletionHandler:]
  -[WBSFaviconProviderDatabaseController _fetchIconInfoForIconUUID:]
  -[WBSFaviconProviderDatabaseController _fetchPageURLStringsWithPredicate:]
  -[WBSFaviconProviderDatabaseController _migrateToSchemaVersion_4]
  -[WBSFaviconProviderDatabaseController firstIconInfoMatchingPageURLStringIn:completionHandler:]
  -[WBSFaviconProviderDatabaseController _deleteRejectedResourceForPageURLStrings:]
  -[WBSFaviconProviderDatabaseController removePageURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController _findOrphansFromIconUUIDs:]
  -[WBSFaviconProviderDatabaseController _deleteAllPageAndIconEntries]
  -[WBSFaviconProviderDatabaseController _currentSchemaVersion]
  -[WBSFaviconProviderDatabaseController markValidIconAtPageURLString:iconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController _migrateToSchemaVersion_2]
  -[WBSFaviconProviderDatabaseController rejectedResourceIconInfoForPageURLString:iconURLString:completionHandler:]
  -[WBSFaviconProviderDatabaseController _setPageURL:toIconUUID:]
  -[WBSFaviconProviderDatabaseController _createFreshDatabaseSchema]
  -[WBSFaviconProviderDatabaseController _migrateToSchemaVersion:]
  -[WBSFaviconProviderDatabaseController _setTimestampToNowForIconUUID:]
  -[WBSFaviconProviderDatabaseController _deleteIconWithUUIDFromIconInfo:]
  -[WBSFaviconProviderDatabaseController removeAllDataForIconUUID:completionHandler:]
  -[WBSFaviconProviderDatabaseController removePageURLStrings:completionHandler:]


WBSFaviconProviderIconInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *pageURLString
 @property  NSString *iconURLString
 @property  NSString *UUIDString
 @property  NSDate *dateAdded
 @property  {CGSize=dd} size
 @property  BOOL hasGeneratedResolutions
 @property  BOOL isRejectedResource

  // instance methods
  -[WBSFaviconProviderIconInfo UUIDString]
  -[WBSFaviconProviderIconInfo init]
  -[WBSFaviconProviderIconInfo size]
  -[WBSFaviconProviderIconInfo .cxx_destruct]
  -[WBSFaviconProviderIconInfo iconURLString]
  -[WBSFaviconProviderIconInfo dateAdded]
  -[WBSFaviconProviderIconInfo isRejectedResource]
  -[WBSFaviconProviderIconInfo hasGeneratedResolutions]
  -[WBSFaviconProviderIconInfo initWithPageURLString:iconURLString:UUIDString:dateAdded:size:hasGeneratedResolutions:isRejectedResource:]
  -[WBSFaviconProviderIconInfo pageURLString]


WBSFaviconProviderPersistenceController : NSObject /usr/lib/libc++.1.dylib <WBSDataCacheDelegate, WBSSQLiteStoreDelegate>
 @property  NSURL *databaseURL
 @property  NSURL *diskCacheURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSFaviconProviderPersistenceController sqliteStoreDidFallBackToInMemoryStore:]
  -[WBSFaviconProviderPersistenceController iconForPageURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController removeIconFilesNotReferencedInDatabaseWithCompletionHandler:]
  -[WBSFaviconProviderPersistenceController init]
  -[WBSFaviconProviderPersistenceController setIconData:forPageURLString:iconURLString:iconSize:hasGeneratedResolutions:isPrivate:completionHandler:]
  -[WBSFaviconProviderPersistenceController sqliteStoreDidFailDatabaseIntegrityCheck:completionHandler:]
  -[WBSFaviconProviderPersistenceController removeIconWithPageURLString:completionHandler:]
  -[WBSFaviconProviderPersistenceController _finishSetUpWithStatus:]
  -[WBSFaviconProviderPersistenceController .cxx_destruct]
  -[WBSFaviconProviderPersistenceController _iconForIconUUID:completionHandler:]
  -[WBSFaviconProviderPersistenceController rejectedResourceInfoForPageURLString:iconURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController pageURLStringsPrefixedWithVariantsOfDomainString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController savePendingChangesBeforeTermination]
  -[WBSFaviconProviderPersistenceController _imageFromURL:]
  -[WBSFaviconProviderPersistenceController databaseURL]
  -[WBSFaviconProviderPersistenceController flushPrivateDataFromMemoryWithCompletionHandler:]
  -[WBSFaviconProviderPersistenceController openAndCheckIntegrity:createIfNeeded:fallBackToMemoryStoreIfError:completionHandler:]
  -[WBSFaviconProviderPersistenceController setIconIsRejectedResource:forPageURLString:iconURLString:isPrivate:completionHandler:]
  -[WBSFaviconProviderPersistenceController iconForIconURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController firstIconForVariantsOfDomainString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController removeAllIconsWithCompletionHandler:]
  -[WBSFaviconProviderPersistenceController firstIconForVariantsOfPageURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController initWithPersistenceBaseURL:databaseName:preferredIconSize:isReadOnly:]
  -[WBSFaviconProviderPersistenceController removeIconsWithURLStringsNotFoundIn:completionHandler:]
  -[WBSFaviconProviderPersistenceController dataCacheDidSetUp:]
  -[WBSFaviconProviderPersistenceController closeWithCompletionHandler:]
  -[WBSFaviconProviderPersistenceController _faviconStatusFromWBSSQLStoreStatus:]
  -[WBSFaviconProviderPersistenceController iconInfoForIconURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController iconInfoForPageURLString:includingPrivateData:completionHandler:]
  -[WBSFaviconProviderPersistenceController linkPageURLString:toIconURLString:isPrivate:completionHandler:]
  -[WBSFaviconProviderPersistenceController diskCacheURL]


WBSFaviconProviderRecordCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSFaviconProviderRecordCache removeRecordForIconUUIDs:]
  -[WBSFaviconProviderRecordCache removeAllRecords]
  -[WBSFaviconProviderRecordCache setDateAdded:forFaviconURLString:iconUUID:iconSize:hasGeneratedResolutions:]
  -[WBSFaviconProviderRecordCache init]
  -[WBSFaviconProviderRecordCache dateAddedForFaviconURLString:iconUUID:size:]
  -[WBSFaviconProviderRecordCache .cxx_destruct]
  -[WBSFaviconProviderRecordCache iconInfoForURLString:]


WBSFaviconProviderPrivateCache : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSFaviconProviderPrivateCache setIsRejectedResource:forPageURLString:iconURLString:]
  -[WBSFaviconProviderPrivateCache init]
  -[WBSFaviconProviderPrivateCache .cxx_destruct]
  -[WBSFaviconProviderPrivateCache linkPageURLString:toIconURLString:]
  -[WBSFaviconProviderPrivateCache pageURLStringsWithPrefixesIn:]
  -[WBSFaviconProviderPrivateCache removeAllImageDataWithCompletionHandler:]
  -[WBSFaviconProviderPrivateCache firstImageDataMatchingPageURLStringIn:matchedPageURLString:]
  -[WBSFaviconProviderPrivateCache setImageData:forPageURLString:iconURLString:iconSize:hasGeneratedResolutions:]
  -[WBSFaviconProviderPrivateCache imageDataForIconURLString:]
  -[WBSFaviconProviderPrivateCache imageDataForPageURLString:]
  -[WBSFaviconProviderPrivateCache removeImageDataForPageURLString:]
  -[WBSFaviconProviderPrivateCache imageInfoForIconURLString:]
  -[WBSFaviconProviderPrivateCache rejectedResourceInfoForPageURLString:iconURLString:]
  -[WBSFaviconProviderPrivateCache imageInfoForPageURLString:]


WBSTranslationAvailability : NSObject /usr/lib/libc++.1.dylib <WBSTranslationAvailabilityProviding>
 @property  NSArray *userPreferredTargetLocales
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSTranslationAvailability sharedAvailability]

  // instance methods
  -[WBSTranslationAvailability init]
  -[WBSTranslationAvailability .cxx_destruct]
  -[WBSTranslationAvailability _initWithAvailabilityProvider:]
  -[WBSTranslationAvailability _updateCachedValues]
  -[WBSTranslationAvailability userPreferredTargetLocales]
  -[WBSTranslationAvailability getAvailableLocalePairsWithCompletionHandler:]
  -[WBSTranslationAvailability _didUpdateSupportedRegionAndLocalePairs]
  -[WBSTranslationAvailability isTranslationSupportedForCurrentRegionWithCompletionHandler:]
  -[WBSTranslationAvailability supportedLocalePairsWithCompletionHandler:]
  -[WBSTranslationAvailability getTranslationAvailabilityWithCompletionHandler:]
  -[WBSTranslationAvailability getAllTargetLocalesInUserPreferredOrderWithCompletionHandler:]


WBSFaviconProviderUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFaviconProviderUtilities isFaviconSize:morePreferrableThanFaviconSize:givenDesiredSize:]
  +[WBSFaviconProviderUtilities sizeOfImageWithData:closestToPreferredSize:isMultiResolution:]
  +[WBSFaviconProviderUtilities computeRelativeSize:referenceSize:]
  +[WBSFaviconProviderUtilities multiResolutionImageFromImageData:withPreferredSize:atScales:didGenerateResolutions:]
  +[WBSFaviconProviderUtilities imageWithURL:closetToPreferredSize:]


WBSLeadImageCache : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataImageCacheDelegate, WBSSiteMetadataProvider>
 @property  NSURL *imageDirectoryURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // instance methods
  -[WBSLeadImageCache _addRequest:]
  -[WBSLeadImageCache responseForRequest:willProvideUpdates:]
  -[WBSLeadImageCache imageDirectoryURL]
  -[WBSLeadImageCache setProviderDelegate:]
  -[WBSLeadImageCache providerDelegate]
  -[WBSLeadImageCache saveImage:forURL:completionHandler:]
  -[WBSLeadImageCache .cxx_destruct]
  -[WBSLeadImageCache savePendingChangesBeforeTermination]
  -[WBSLeadImageCache siteMetadataImageCache:didFinishLoadingImage:forKeyString:]
  -[WBSLeadImageCache stopWatchingUpdatesForRequest:]
  -[WBSLeadImageCache initWithImageDirectoryURL:]
  -[WBSLeadImageCache siteMetadataImageCacheDidEmptyCache:]
  -[WBSLeadImageCache purgeUnneededCacheEntries]
  -[WBSLeadImageCache canHandleRequest:]
  -[WBSLeadImageCache prepareResponseForRequest:allowDelayedResponse:]
  -[WBSLeadImageCache emptyCaches]
  -[WBSLeadImageCache imageForURL:]


WBSLeadImageCacheResponse : WBSSiteMetadataResponse
 @property  UIImage *thumbnail

  // class methods
  +[WBSLeadImageCacheResponse responseWithURL:thumbnail:]

  // instance methods
  -[WBSLeadImageCacheResponse thumbnail]
  -[WBSLeadImageCacheResponse initWithURL:]
  -[WBSLeadImageCacheResponse .cxx_destruct]
  -[WBSLeadImageCacheResponse initWithURL:thumbnail:]


WBSLeadImageCacheRequest : WBSSiteMetadataRequest
  // class methods
  +[WBSLeadImageCacheRequest requestWithURL:]


WBSLeadImageSaver : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSLeadImageSaver saveLeadImageFromWebView:toLeadImageCacheRegisteredWithMetadataManager:completionHandler:]


WBSParsecABGroupIdentifierUserDefaultsStore : NSObject /usr/lib/libc++.1.dylib <WBSParsecABGroupStore>
 @property  <WBSParsecABGroupStoreClient> *client
 @property  NSNumber *groupIdentifier
 @property  NSDate *generationDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSParsecABGroupIdentifierUserDefaultsStore setGroupIdentifier:]
  -[WBSParsecABGroupIdentifierUserDefaultsStore setClient:]
  -[WBSParsecABGroupIdentifierUserDefaultsStore groupIdentifier]
  -[WBSParsecABGroupIdentifierUserDefaultsStore client]
  -[WBSParsecABGroupIdentifierUserDefaultsStore init]
  -[WBSParsecABGroupIdentifierUserDefaultsStore dealloc]
  -[WBSParsecABGroupIdentifierUserDefaultsStore .cxx_destruct]
  -[WBSParsecABGroupIdentifierUserDefaultsStore setGenerationDate:]
  -[WBSParsecABGroupIdentifierUserDefaultsStore observeValueForKeyPath:ofObject:change:context:]
  -[WBSParsecABGroupIdentifierUserDefaultsStore generationDate]


WBSOnDiskDataCache : NSObject /usr/lib/libc++.1.dylib <WBSDataCache>
 @property  BOOL isInMemoryCacheEnabled
 @property  NSURL *cacheDirectoryURL
 @property  BOOL terminating
 @property  <WBSDataCacheDelegate> *dataCacheDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSOnDiskDataCache entryStateForKeyString:]
  -[WBSOnDiskDataCache init]
  -[WBSOnDiskDataCache _internalQueueDispatchAsync:]
  -[WBSOnDiskDataCache _didFailToLoadEntryForKeyString:error:]
  -[WBSOnDiskDataCache setDataCacheDelegate:]
  -[WBSOnDiskDataCache setIsInMemoryCacheEnabled:]
  -[WBSOnDiskDataCache isInMemoryCacheEnabled]
  -[WBSOnDiskDataCache setUp]
  -[WBSOnDiskDataCache .cxx_destruct]
  -[WBSOnDiskDataCache _diskAccessQueueName]
  -[WBSOnDiskDataCache _notifyDidFinishSettingUp]
  -[WBSOnDiskDataCache requestEntryForKeyString:]
  -[WBSOnDiskDataCache isTerminating]
  -[WBSOnDiskDataCache _fileLocationForKeyString:]
  -[WBSOnDiskDataCache settingForKey:]
  -[WBSOnDiskDataCache _cacheSettingsFileURL]
  -[WBSOnDiskDataCache _internalEntryStateForKeyString:]
  -[WBSOnDiskDataCache reset]
  -[WBSOnDiskDataCache setEntry:forKeyString:completionHandler:]
  -[WBSOnDiskDataCache _internalQueueName]
  -[WBSOnDiskDataCache _didLoadEntry:forKeyString:]
  -[WBSOnDiskDataCache getEntryURLForKeyString:completionHandler:]
  -[WBSOnDiskDataCache removeEntriesForKeyStringsNotIncludedIn:completionHandler:]
  -[WBSOnDiskDataCache dataCacheDelegate]
  -[WBSOnDiskDataCache cacheDirectoryURL]
  -[WBSOnDiskDataCache _dispatchDiskAccessBlock:]
  -[WBSOnDiskDataCache setSetting:forKey:]
  -[WBSOnDiskDataCache initWithCacheDirectoryURL:]
  -[WBSOnDiskDataCache _internalQueueDispatchSync:]
  -[WBSOnDiskDataCache savePendingChangesBeforeTearDown]
  -[WBSOnDiskDataCache removeEntriesForKeyStrings:completionHandler:]


WBSSiteMetadataFetchOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  long long status
 @property  WBSSiteMetadataRequest *request

  // class methods
  +[WBSSiteMetadataFetchOperation keyPathsForValuesAffectingValueForKey:]

  // instance methods
  -[WBSSiteMetadataFetchOperation initWithRequest:]
  -[WBSSiteMetadataFetchOperation init]
  -[WBSSiteMetadataFetchOperation .cxx_destruct]
  -[WBSSiteMetadataFetchOperation isExecuting]
  -[WBSSiteMetadataFetchOperation isFinished]
  -[WBSSiteMetadataFetchOperation _setStatus:]
  -[WBSSiteMetadataFetchOperation request]
  -[WBSSiteMetadataFetchOperation _status]
  -[WBSSiteMetadataFetchOperation start]


WBSSiteMetadataImageCache : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *imageDirectoryURL
 @property  long long imageType
 @property  BOOL terminating
 @property  <WBSSiteMetadataImageCacheDelegate> *delegate

  // instance methods
  -[WBSSiteMetadataImageCache removeAllImages]
  -[WBSSiteMetadataImageCache _internalSettingForKey:]
  -[WBSSiteMetadataImageCache _didLoadImage:forKeyString:fromDisk:]
  -[WBSSiteMetadataImageCache imageDirectoryURL]
  -[WBSSiteMetadataImageCache removeImagesFromCacheForKeyStrings:]
  -[WBSSiteMetadataImageCache init]
  -[WBSSiteMetadataImageCache imageType]
  -[WBSSiteMetadataImageCache _loadImageFromDiskForKeyString:]
  -[WBSSiteMetadataImageCache imageStateForKeyString:]
  -[WBSSiteMetadataImageCache _emptyCacheDirectory]
  -[WBSSiteMetadataImageCache _internalImageForKeyString:]
  -[WBSSiteMetadataImageCache _internalRemoveAllImages]
  -[WBSSiteMetadataImageCache retainImageForKeyString:]
  -[WBSSiteMetadataImageCache isImageRetainedForKeyString:]
  -[WBSSiteMetadataImageCache emptyCache]
  -[WBSSiteMetadataImageCache _fileNameForKeyString:]
  -[WBSSiteMetadataImageCache .cxx_destruct]
  -[WBSSiteMetadataImageCache _internalSetSetting:forKey:]
  -[WBSSiteMetadataImageCache _requestImageForKeyString:]
  -[WBSSiteMetadataImageCache setImage:forKeyString:]
  -[WBSSiteMetadataImageCache _diskAccessQueueName]
  -[WBSSiteMetadataImageCache _internalSetImageState:forKeyString:]
  -[WBSSiteMetadataImageCache _saveCacheSettingsSoon]
  -[WBSSiteMetadataImageCache isTerminating]
  -[WBSSiteMetadataImageCache releaseImageWithKeyStringProvider:]
  -[WBSSiteMetadataImageCache savePendingChangesBeforeTermination]
  -[WBSSiteMetadataImageCache imageForKeyString:completionHandler:]
  -[WBSSiteMetadataImageCache _fileLocationForKeyString:]
  -[WBSSiteMetadataImageCache _internalQueueDispatchBarrierAsync:]
  -[WBSSiteMetadataImageCache _internalImageStateForKeyString:]
  -[WBSSiteMetadataImageCache purgeUnneededImages]
  -[WBSSiteMetadataImageCache releaseImagesForKeyStrings:]
  -[WBSSiteMetadataImageCache settingForKey:]
  -[WBSSiteMetadataImageCache releaseImageForKeyString:]
  -[WBSSiteMetadataImageCache _cacheSettingsFileURL]
  -[WBSSiteMetadataImageCache initWithImageDirectoryURL:imageType:fileProtectionOptions:]
  -[WBSSiteMetadataImageCache _internalSaveImageToDisk:forKeyString:completionHandler:]
  -[WBSSiteMetadataImageCache initWithImageDirectoryURL:imageType:]
  -[WBSSiteMetadataImageCache imageForKeyString:getImageState:]
  -[WBSSiteMetadataImageCache _internalReleaseImageForKeyString:]
  -[WBSSiteMetadataImageCache _removeImagesPassingTest:]
  -[WBSSiteMetadataImageCache _internalSetUpImageCache]
  -[WBSSiteMetadataImageCache _internalPurgeUnneededImages]
  -[WBSSiteMetadataImageCache _internalQueueName]
  -[WBSSiteMetadataImageCache _internalRemoveImagesFromCacheForKeyStrings:]
  -[WBSSiteMetadataImageCache retainImagesForKeyStrings:]
  -[WBSSiteMetadataImageCache _notifyDidFinishLoadingSettings]
  -[WBSSiteMetadataImageCache setDelegate:]
  -[WBSSiteMetadataImageCache setImageState:forKeyString:]
  -[WBSSiteMetadataImageCache _dispatchDiskAccessBlock:]
  -[WBSSiteMetadataImageCache setSetting:forKey:]
  -[WBSSiteMetadataImageCache saveImageToDisk:forKeyString:completionHandler:]
  -[WBSSiteMetadataImageCache _internalQueueDispatchSync:]
  -[WBSSiteMetadataImageCache delegate]
  -[WBSSiteMetadataImageCache setUpImageCache]
  -[WBSSiteMetadataImageCache retainImageWithKeyStringProvider:]


WBSSiteMetadataImageCacheSettingsSQLiteStore : NSObject /usr/lib/libc++.1.dylib
 @property  WBSSQLiteDatabase *database
 @property  NSURL *databaseURL

  // class methods
  +[WBSSiteMetadataImageCacheSettingsSQLiteStore cacheSettingsEntryClass]
  +[WBSSiteMetadataImageCacheSettingsSQLiteStore databaseSchemaVersion]

  // instance methods
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _deleteAllEntriesSQLiteStatement]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore initWithDatabaseURL:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _createNewDatabaseSQLiteStatement]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore allEntries]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore dealloc]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore .cxx_destruct]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore close]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _setDatabaseSchemaVersion:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore database]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _updateEntrySQLiteStatementWithEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore databaseURL]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _deleteEntrySQLiteStatementWithHost:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _statementsForMigrationToSchemaVersion:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _closeDatabase]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _selectAllEntriesSQLiteStatement]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _insertEntrySQLiteStatementWithEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _selectEntrySQLiteStatementWithHost:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _checkDatabaseIntegrity]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore initWithDatabaseURL:protectionType:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _openDatabase:andCheckIntegrity:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _migrateToCurrentSchemaVersionifNeeded]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _createNewDatabaseSchema]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _performMigrationStepToSchemaVersion:withStatements:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _updateEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore _insertEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore entryWithHost:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore saveEntry:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore deleteEntryWithHost:]
  -[WBSSiteMetadataImageCacheSettingsSQLiteStore deleteAllEntries]


WBSSiteMetadataManager : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataProviderDelegate>
 @property  NSURL *injectedBundleURL
 @property  BOOL suspended
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSSiteMetadataManager setSuspended:]
  -[WBSSiteMetadataManager init]
  -[WBSSiteMetadataManager isSuspended]
  -[WBSSiteMetadataManager preloadRequests:withPriority:responseHandler:]
  -[WBSSiteMetadataManager savePendingProviderChangesBeforeTermination]
  -[WBSSiteMetadataManager .cxx_destruct]
  -[WBSSiteMetadataManager injectedBundleURL]
  -[WBSSiteMetadataManager cancelRequestWithToken:]
  -[WBSSiteMetadataManager cancelRequestsWithTokens:]
  -[WBSSiteMetadataManager registerSiteMetadataProvider:]
  -[WBSSiteMetadataManager registerRequest:priority:responseHandler:]
  -[WBSSiteMetadataManager initWithInjectedBundleURL:]
  -[WBSSiteMetadataManager _processPool]
  -[WBSSiteMetadataManager siteMetadataProvider:cancelRequestsWithTokens:]
  -[WBSSiteMetadataManager siteMetadataProvider:didReceiveResponse:ofType:didReceiveNewData:forRequest:]
  -[WBSSiteMetadataManager siteMetadataProvider:registerRequest:priority:responseHandler:]
  -[WBSSiteMetadataManager cancelRequestsWithTokens:completionHandler:]
  -[WBSSiteMetadataManager registerOneTimeRequest:priority:responseHandler:]
  -[WBSSiteMetadataManager preloadRequest:withPriority:responseHandler:]
  -[WBSSiteMetadataManager _numberOfConcurrentRequests]
  -[WBSSiteMetadataManager _providerForRequest:]
  -[WBSSiteMetadataManager _registerToken:withProvider:]
  -[WBSSiteMetadataManager _requestIsCancelledForToken:]
  -[WBSSiteMetadataManager _internalCancelRequestWithToken:]
  -[WBSSiteMetadataManager _reprioritizeOperationForRequest:]
  -[WBSSiteMetadataManager _internalSetPriority:ofRequestWithToken:]
  -[WBSSiteMetadataManager emptyProviderCachesIncludingFavicons:]
  -[WBSSiteMetadataManager _highestRequestPriorityForRequest:]
  -[WBSSiteMetadataManager _updateOperationForRequestIfPossible:]
  -[WBSSiteMetadataManager _sendResponse:toResponseHandlersForRequest:didReceiveNewData:]
  -[WBSSiteMetadataManager _scheduleDelayedResponse:forRequestToken:]
  -[WBSSiteMetadataManager _setUpOperationForRequest:withSiteMetadataProvider:usingOperationBlock:]
  -[WBSSiteMetadataManager _sendRequiresDownloadResponse:toResponseHandlersForRequest:]
  -[WBSSiteMetadataManager _popReusableWebView]
  -[WBSSiteMetadataManager _discardWebViewSoon:]
  -[WBSSiteMetadataManager siteMetadataProvider:didReceiveResponse:forRequest:beginOperationUsingBlock:]
  -[WBSSiteMetadataManager siteMetadataProvider:registerOneTimeRequest:priority:responseHandler:]
  -[WBSSiteMetadataManager siteMetadataProvider:getWebViewOfSize:withConfiguration:completionHandler:]
  -[WBSSiteMetadataManager siteMetadataProvider:didFinishUsingWebView:]
  -[WBSSiteMetadataManager setPriority:ofRequestWithToken:]
  -[WBSSiteMetadataManager setPriority:ofRequestsWithTokens:]
  -[WBSSiteMetadataManager emptyProviderCaches]
  -[WBSSiteMetadataManager _makeWebViewOfSize:withConfiguration:]


_WBSSiteMetadataToken : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL cancelled
 @property  BOOL isOneTimeRequest
 @property  WBSSiteMetadataRequest *request
 @property  long long priority
 @property  @? responseHandler
 @property  NSTimer *delayTimer
 @property  BOOL didReceiveResponse

  // instance methods
  -[_WBSSiteMetadataToken setCancelled:]
  -[_WBSSiteMetadataToken isCancelled]
  -[_WBSSiteMetadataToken delayTimer]
  -[_WBSSiteMetadataToken setDelayTimer:]
  -[_WBSSiteMetadataToken dealloc]
  -[_WBSSiteMetadataToken .cxx_destruct]
  -[_WBSSiteMetadataToken initWithRequest:priority:responseHandler:]
  -[_WBSSiteMetadataToken didReceiveResponse]
  -[_WBSSiteMetadataToken dispatchResponse:]
  -[_WBSSiteMetadataToken responseHandler]
  -[_WBSSiteMetadataToken setDidReceiveResponse:]
  -[_WBSSiteMetadataToken isOneTimeRequest]
  -[_WBSSiteMetadataToken setPriority:]
  -[_WBSSiteMetadataToken priority]
  -[_WBSSiteMetadataToken request]
  -[_WBSSiteMetadataToken initWithOneTimeRequest:priority:responseHandler:]


_WBSSiteMetadataRequestInfo : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSSiteMetadataProvider> *provider
 @property  NSMutableSet *tokens
 @property  NSOperation *operation

  // instance methods
  -[_WBSSiteMetadataRequestInfo tokens]
  -[_WBSSiteMetadataRequestInfo setOperation:]
  -[_WBSSiteMetadataRequestInfo operation]
  -[_WBSSiteMetadataRequestInfo initWithProvider:]
  -[_WBSSiteMetadataRequestInfo provider]
  -[_WBSSiteMetadataRequestInfo dealloc]
  -[_WBSSiteMetadataRequestInfo .cxx_destruct]


WBSSiteMetadataRequest : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSURL *url
 @property  NSDictionary *extraInfo

  // instance methods
  -[WBSSiteMetadataRequest copyWithZone:]
  -[WBSSiteMetadataRequest init]
  -[WBSSiteMetadataRequest url]
  -[WBSSiteMetadataRequest .cxx_destruct]
  -[WBSSiteMetadataRequest isEqual:]
  -[WBSSiteMetadataRequest extraInfo]
  -[WBSSiteMetadataRequest initWithURL:extraInfo:]


WBSSiteMetadataResponse : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *url

  // class methods
  +[WBSSiteMetadataResponse responseWithURL:]

  // instance methods
  -[WBSSiteMetadataResponse init]
  -[WBSSiteMetadataResponse url]
  -[WBSSiteMetadataResponse initWithURL:]
  -[WBSSiteMetadataResponse .cxx_destruct]


WBSSVGImageRenderingFetchOperation : WBSWebViewMetadataFetchOperation <WBSSVGImageRenderingObserver>
 @property  WBSSVGImageRenderingRequest *request
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSSVGImageRenderingFetchOperation initWithRequest:]
  -[WBSSVGImageRenderingFetchOperation initWithRequest:completionHandler:]
  -[WBSSVGImageRenderingFetchOperation .cxx_destruct]
  -[WBSSVGImageRenderingFetchOperation didCreateWebView]
  -[WBSSVGImageRenderingFetchOperation completionHandler]
  -[WBSSVGImageRenderingFetchOperation webViewConfiguration]
  -[WBSSVGImageRenderingFetchOperation _htmlStringWithImageElementString:]
  -[WBSSVGImageRenderingFetchOperation didRenderImage:]
  -[WBSSVGImageRenderingFetchOperation _htmlStringWithSVGContent:]
  -[WBSSVGImageRenderingFetchOperation _loadingTimerDidTimeout:]
  -[WBSSVGImageRenderingFetchOperation _htmlStringWithURL:]
  -[WBSSVGImageRenderingFetchOperation _loadSVGFileURL:]
  -[WBSSVGImageRenderingFetchOperation _renderNextImage]
  -[WBSSVGImageRenderingFetchOperation _didCompleteWithImage:]
  -[WBSSVGImageRenderingFetchOperation willClearWebView]
  -[WBSSVGImageRenderingFetchOperation didFailFetch]
  -[WBSSVGImageRenderingFetchOperation webViewSize]
  -[WBSSVGImageRenderingFetchOperation startOffscreenFetching]


WBSSVGImageRenderingProvider : NSObject /usr/lib/libc++.1.dylib <WBSWebViewMetadataFetchOperationDelegate, WBSSiteMetadataProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // instance methods
  -[WBSSVGImageRenderingProvider responseForRequest:willProvideUpdates:]
  -[WBSSVGImageRenderingProvider setProviderDelegate:]
  -[WBSSVGImageRenderingProvider providerDelegate]
  -[WBSSVGImageRenderingProvider .cxx_destruct]
  -[WBSSVGImageRenderingProvider canHandleRequest:]
  -[WBSSVGImageRenderingProvider prepareResponseForRequest:allowDelayedResponse:]
  -[WBSSVGImageRenderingProvider _requestIsValid:]
  -[WBSSVGImageRenderingProvider webViewMetadataFetchOperation:getWebViewOfSize:withConfiguration:completionHandler:]
  -[WBSSVGImageRenderingProvider webViewMetadataFetchOperation:didFinishUsingWebView:]


WBSSVGImageRenderingRequest : WBSSiteMetadataRequest
 @property  {CGSize=dd} imageSize
 @property  NSArray *urls
 @property  NSString *svgContent

  // instance methods
  -[WBSSVGImageRenderingRequest urls]
  -[WBSSVGImageRenderingRequest imageSize]
  -[WBSSVGImageRenderingRequest initWithURL:extraInfo:]
  -[WBSSVGImageRenderingRequest svgContent]
  -[WBSSVGImageRenderingRequest _imageSizeValueWithSize:]
  -[WBSSVGImageRenderingRequest initWithURL:imageSize:]
  -[WBSSVGImageRenderingRequest initWithURLs:imageSize:]
  -[WBSSVGImageRenderingRequest initWithSVGContent:imageSize:]


WBSSVGImageRenderingResponse : WBSSiteMetadataResponse
 @property  UIImage *image

  // instance methods
  -[WBSSVGImageRenderingResponse initWithURL:]
  -[WBSSVGImageRenderingResponse .cxx_destruct]
  -[WBSSVGImageRenderingResponse image]
  -[WBSSVGImageRenderingResponse initWithURL:image:]


WBSPrivacyReportData : NSObject /usr/lib/libc++.1.dylib <WBSPrivacyReportDataProvider>
 @property  WBSHistory *history
 @property  NSArray *knownTrackers
 @property  NSArray *knownTrackersSortDescriptors
 @property  NSArray *trackedFirstParties
 @property  NSArray *trackedFirstPartiesSortDescriptors
 @property  WBSKnownTrackingThirdParty *mostSeenKnownTracker
 @property  NSSet *trackerOwnerNames
 @property  double ratioOfTrackedFirstPartiesToAllVisited
 @property  BOOL hasData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSPrivacyReportData getKnownTrackingDomainsForWebView:after:before:completionHandler:]

  // instance methods
  -[WBSPrivacyReportData history]
  -[WBSPrivacyReportData initWithHistory:]
  -[WBSPrivacyReportData hasData]
  -[WBSPrivacyReportData .cxx_destruct]
  -[WBSPrivacyReportData setHistory:]
  -[WBSPrivacyReportData ratioOfTrackedFirstPartiesToAllVisited]
  -[WBSPrivacyReportData mostSeenKnownTracker]
  -[WBSPrivacyReportData _computeStatistics]
  -[WBSPrivacyReportData loadDataWithCompletionHandler:]
  -[WBSPrivacyReportData knownTrackers]
  -[WBSPrivacyReportData trackedFirstParties]
  -[WBSPrivacyReportData _resetKnownTrackersSortDescriptors]
  -[WBSPrivacyReportData _resetTrackedFirstPartiesSortDescriptors]
  -[WBSPrivacyReportData _sortKnownTrackers]
  -[WBSPrivacyReportData _sortTrackedFirstParties]
  -[WBSPrivacyReportData _prefetchData]
  -[WBSPrivacyReportData _executePrefetchCompletionHandlers]
  -[WBSPrivacyReportData _loadDataWithCompletionHandler:]
  -[WBSPrivacyReportData _discardPrefetchedData]
  -[WBSPrivacyReportData _dataWindowStartWithLoadedThirdParties:boundBy:]
  -[WBSPrivacyReportData _dataWindowStartWithBlockedThirdParties:boundBy:]
  -[WBSPrivacyReportData getRecentFirstPartiesFromThirdParty:]
  -[WBSPrivacyReportData _ingestPreventedThirdParties:completionHandler:]
  -[WBSPrivacyReportData _addPrefetchCompletionHandler:]
  -[WBSPrivacyReportData loadDataFromStartDate:toEndDate:withCompletionHandler:]
  -[WBSPrivacyReportData knownTrackersSortDescriptors]
  -[WBSPrivacyReportData setKnownTrackersSortDescriptors:]
  -[WBSPrivacyReportData trackedFirstPartiesSortDescriptors]
  -[WBSPrivacyReportData setTrackedFirstPartiesSortDescriptors:]
  -[WBSPrivacyReportData trackerOwnerNames]
  -[WBSPrivacyReportData prefetchData]
  -[WBSPrivacyReportData discardPrefetchedData]


WBSParsecABGroupManager : NSObject /usr/lib/libc++.1.dylib <WBSParsecABGroupStoreClient>
 @property  <WBSParsecABGroupStore> *groupStore
 @property  unsigned long groupIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSParsecABGroupManager ephemeralGroupIdentifier]
  +[WBSParsecABGroupManager _weightedRandomIdentifier]

  // instance methods
  -[WBSParsecABGroupManager groupIdentifier]
  -[WBSParsecABGroupManager _scheduleShuffleTimer]
  -[WBSParsecABGroupManager .cxx_destruct]
  -[WBSParsecABGroupManager groupStore]
  -[WBSParsecABGroupManager _generateAndSaveNewGroupIdentifier]
  -[WBSParsecABGroupManager abGroupStoreDidUpdateGroupIdentifier:]
  -[WBSParsecABGroupManager _postDidChangeGroupIdentifierNotification]
  -[WBSParsecABGroupManager shuffleGroup]
  -[WBSParsecABGroupManager initWithGroupStore:]


WBSSVGImageRenderingWebProcessPlugInPageController : WBSWebProcessPlugInPageController
  // instance methods
  -[WBSSVGImageRenderingWebProcessPlugInPageController .cxx_destruct]
  -[WBSSVGImageRenderingWebProcessPlugInPageController webProcessPlugInBrowserContextController:didFinishLoadForFrame:]
  -[WBSSVGImageRenderingWebProcessPlugInPageController svgImageRenderingObserver]


WBSTouchIconCache : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataImageCacheDelegate, WBSWebViewMetadataFetchOperationDelegate, WBSSiteMetadataProvider>
 @property  NSURL *imageDirectoryURL
 @property  NSURL *cacheDirectoryURL
 @property  BOOL readOnly
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // class methods
  +[WBSTouchIconCache defaultBackgroundColor]
  +[WBSTouchIconCache _generateDefaultFavoritesIcon]
  +[WBSTouchIconCache _monogramConfiguration]
  +[WBSTouchIconCache generateFavoritesIconForTitle:url:backgroundColor:]
  +[WBSTouchIconCache _generateFavoritesIconForRequest:withBackgroundColor:]
  +[WBSTouchIconCache defaultGlyphColor]

  // instance methods
  -[WBSTouchIconCache isReadOnly]
  -[WBSTouchIconCache responseForRequest:willProvideUpdates:]
  -[WBSTouchIconCache imageDirectoryURL]
  -[WBSTouchIconCache init]
  -[WBSTouchIconCache setProviderDelegate:]
  -[WBSTouchIconCache providerDelegate]
  -[WBSTouchIconCache initWithCacheDirectoryURL:isReadOnly:protectionType:allowFetchingOverCellularNetwork:fileMappingStyle:]
  -[WBSTouchIconCache dealloc]
  -[WBSTouchIconCache .cxx_destruct]
  -[WBSTouchIconCache savePendingChangesBeforeTermination]
  -[WBSTouchIconCache siteMetadataImageCache:didFinishLoadingImage:forKeyString:]
  -[WBSTouchIconCache stopWatchingUpdatesForRequest:]
  -[WBSTouchIconCache siteMetadataImageCacheDidEmptyCache:]
  -[WBSTouchIconCache purgeUnneededCacheEntries]
  -[WBSTouchIconCache _operationWithRequest:completionHandler:]
  -[WBSTouchIconCache canHandleRequest:]
  -[WBSTouchIconCache initWithCacheDirectoryURL:isReadOnly:]
  -[WBSTouchIconCache prepareResponseForRequest:allowDelayedResponse:]
  -[WBSTouchIconCache cacheDirectoryURL]
  -[WBSTouchIconCache emptyCaches]
  -[WBSTouchIconCache initWithCacheDirectoryURL:]
  -[WBSTouchIconCache siteMetadataImageCacheDidFinishLoadingSettings:]
  -[WBSTouchIconCache siteMetadataImageCache:didRemoveImageFromCacheForKeyString:]
  -[WBSTouchIconCache siteMetadataImageCache:customFileNameForKeyString:]
  -[WBSTouchIconCache webViewMetadataFetchOperation:getWebViewOfSize:withConfiguration:completionHandler:]
  -[WBSTouchIconCache webViewMetadataFetchOperation:didFinishUsingWebView:]
  -[WBSTouchIconCache _setUpImageCacheSettingsSQLiteStore]
  -[WBSTouchIconCache _imageCacheSettingsDatabaseURL]
  -[WBSTouchIconCache _ensureCacheDirectory]
  -[WBSTouchIconCache _openCacheSettingsDatabaseIfNeeded]
  -[WBSTouchIconCache _notifyImageWasLoaded:forHost:]
  -[WBSTouchIconCache _touchIconForURL:getImageState:]
  -[WBSTouchIconCache _didLoadTouchIcon:withCacheSettingsEntry:]
  -[WBSTouchIconCache _resizedImage:forHost:]
  -[WBSTouchIconCache _updateTouchIconsDataForHost:image:requestDidSucceed:isUserLoadedWebpageRequest:higherPriorityIconDownloadFailedDueToNetworkError:UUIDString:]
  -[WBSTouchIconCache _saveTouchIconToDisk:forHost:requestDidSucceed:isUserLoadedWebpageRequest:higherPriorityIconDownloadFailedDueToNetworkError:]
  -[WBSTouchIconCache _shouldRequestTouchIconWithTimeoutForURL:inUserLoadedWebpage:initiatedFromBookmarkInteraction:]
  -[WBSTouchIconCache _shouldRequestTouchIconForURL:inUserLoadedWebpage:initiatedFromBookmarkInteraction:]
  -[WBSTouchIconCache _canFetchTouchIconForURL:inUserLoadedWebpage:]
  -[WBSTouchIconCache _shouldRequestTouchIconForURL:inUserLoadedWebpage:initiatedFromBookmarkInteraction:shouldCheckImageState:]
  -[WBSTouchIconCache _responseForTouchIconRequestWithNoHost:]
  -[WBSTouchIconCache _setUpAndReturnDelayedResponseForRequest:]
  -[WBSTouchIconCache _setUpAndReturnPreparedResponseForRequest:withImage:imageState:didReceiveNewData:]
  -[WBSTouchIconCache _didGenerateResponse:forRequest:]
  -[WBSTouchIconCache _responseForRequest:withTouchIcon:]
  -[WBSTouchIconCache _shouldRequestTouchIconForURL:inUserLoadedWebpage:initiatedFromBookmarkInteraction:knownImageState:]
  -[WBSTouchIconCache _blockOperationForRequest:knownImageState:]
  -[WBSTouchIconCache _saveTouchIconToDiskWithResult:forRequest:knownImageState:]
  -[WBSTouchIconCache _maximumScreenScale]
  -[WBSTouchIconCache _enumerateRequestsForHost:usingBlock:]
  -[WBSTouchIconCache _willSaveTouchIcon:withCacheSettingsEntry:]
  -[WBSTouchIconCache _removeTouchIconsDataForHost:]
  -[WBSTouchIconCache _shouldGenerateTouchIconFromTouchIcon:forRequest:]
  -[WBSTouchIconCache uuidStringToHost]
  -[WBSTouchIconCache cacheFirstAvailableTouchIcon:forURL:]
  -[WBSTouchIconCache retainTouchIconForURLString:]
  -[WBSTouchIconCache retainTouchIconForHost:]
  -[WBSTouchIconCache retainTouchIconsForHosts:]
  -[WBSTouchIconCache releaseTouchIconForURLString:]
  -[WBSTouchIconCache releaseTouchIconForHost:]
  -[WBSTouchIconCache releaseTouchIconsForHosts:]
  -[WBSTouchIconCache hasDeterminedIconAvailabilityForURL:]
  -[WBSTouchIconCache shouldRequestTouchIconForWebPageNavigationFromBookmarkInteractionForURL:]
  -[WBSTouchIconCache shouldRequestTouchIconForURL:inUserLoadedWebpage:]
  -[WBSTouchIconCache removeTouchIconMetadataForHosts:completionHandler:]


WBSTouchIconCacheSettingsEntry : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataImageCacheSettingsEntry>
 @property  NSString *host
 @property  NSString *UUIDString
 @property  NSDate *lastRequestDate
 @property  BOOL lastRequestWasInUserLoadedWebpage
 @property  long long requestCount
 @property  BOOL iconInCache
 @property  BOOL requestDidSucceed
 @property  UIColor *extractedColor
 @property  long long transparencyAnalysisResult
 @property  BOOL higherPriorityIconDownloadFailedDueToNetworkError
 @property  unsigned long downloadStatusFlags
 @property  long long databaseID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSTouchIconCacheSettingsEntry entryWithHost:lastRequestDate:lastRequestWasInUserLoadedWebpage:requestCount:iconInCache:requestDidSucceed:extractedColor:transparencyAnalysisResult:higherPriorityIconDownloadFailedDueToNetworkError:UUIDString:]

  // instance methods
  -[WBSTouchIconCacheSettingsEntry databaseID]
  -[WBSTouchIconCacheSettingsEntry host]
  -[WBSTouchIconCacheSettingsEntry setHost:]
  -[WBSTouchIconCacheSettingsEntry setDatabaseID:]
  -[WBSTouchIconCacheSettingsEntry UUIDString]
  -[WBSTouchIconCacheSettingsEntry setRequestCount:]
  -[WBSTouchIconCacheSettingsEntry setExtractedColor:]
  -[WBSTouchIconCacheSettingsEntry extractedColor]
  -[WBSTouchIconCacheSettingsEntry setLastRequestDate:]
  -[WBSTouchIconCacheSettingsEntry .cxx_destruct]
  -[WBSTouchIconCacheSettingsEntry setLastRequestWasInUserLoadedWebpage:]
  -[WBSTouchIconCacheSettingsEntry downloadStatusFlags]
  -[WBSTouchIconCacheSettingsEntry isIconInCache]
  -[WBSTouchIconCacheSettingsEntry initWithHost:]
  -[WBSTouchIconCacheSettingsEntry transparencyAnalysisResult]
  -[WBSTouchIconCacheSettingsEntry setRequestDidSucceed:]
  -[WBSTouchIconCacheSettingsEntry initWithHost:lastRequestDate:lastRequestWasInUserLoadedWebpage:requestCount:iconInCache:requestDidSucceed:extractedColor:transparencyAnalysisResult:higherPriorityIconDownloadFailedDueToNetworkError:UUIDString:]
  -[WBSTouchIconCacheSettingsEntry requestCount]
  -[WBSTouchIconCacheSettingsEntry higherPriorityIconDownloadFailedDueToNetworkError]
  -[WBSTouchIconCacheSettingsEntry isEqual:]
  -[WBSTouchIconCacheSettingsEntry lastRequestWasInUserLoadedWebpage]
  -[WBSTouchIconCacheSettingsEntry initWithSQLiteRow:]
  -[WBSTouchIconCacheSettingsEntry requestDidSucceed]
  -[WBSTouchIconCacheSettingsEntry setIconInCache:]
  -[WBSTouchIconCacheSettingsEntry setUUIDString:]
  -[WBSTouchIconCacheSettingsEntry lastRequestDate]
  -[WBSTouchIconCacheSettingsEntry setHigherPriorityIconDownloadFailedDueToNetworkError:]
  -[WBSTouchIconCacheSettingsEntry setTransparencyAnalysisResult:]


WBSUISafariSandboxBroker : WBSSafariSandboxBroker /System/Library/Frameworks/Accelerate.framework/Accelerate <WBSUISafariSandboxBrokerProtocol>
  // instance methods
  -[WBSUISafariSandboxBroker loadLinkPresentationMetdataForMessageWithGUID:completionHandler:]


WBSLocalePair : NSObject /usr/lib/libc++.1.dylib
 @property  NSLocale *sourceLocale
 @property  NSLocale *targetLocale
 @property  NSString *sourceLocaleIdentifier
 @property  NSString *targetLocaleIdentifier
 @property  NSString *compactDescriptionForLogging
 @property  _LTLocalePair *lt_localePair

  // instance methods
  -[WBSLocalePair sourceLocale]
  -[WBSLocalePair targetLocale]
  -[WBSLocalePair initWithSourceLocale:targetLocale:]
  -[WBSLocalePair .cxx_destruct]
  -[WBSLocalePair sourceLocaleIdentifier]
  -[WBSLocalePair targetLocaleIdentifier]
  -[WBSLocalePair initWithLTLocalePair:]
  -[WBSLocalePair compactDescriptionForLogging]
  -[WBSLocalePair initWithSourceLocaleIdentifier:targetLocaleIdentifier:]
  -[WBSLocalePair lt_localePair]


WBSTouchIconCacheSettingsSQLiteStore : WBSSiteMetadataImageCacheSettingsSQLiteStore
  // class methods
  +[WBSTouchIconCacheSettingsSQLiteStore cacheSettingsEntryClass]
  +[WBSTouchIconCacheSettingsSQLiteStore databaseSchemaVersion]

  // instance methods
  -[WBSTouchIconCacheSettingsSQLiteStore _deleteAllEntriesSQLiteStatement]
  -[WBSTouchIconCacheSettingsSQLiteStore _createNewDatabaseSQLiteStatement]
  -[WBSTouchIconCacheSettingsSQLiteStore _updateEntrySQLiteStatementWithEntry:]
  -[WBSTouchIconCacheSettingsSQLiteStore _deleteEntrySQLiteStatementWithHost:]
  -[WBSTouchIconCacheSettingsSQLiteStore _statementsForMigrationToSchemaVersion:]
  -[WBSTouchIconCacheSettingsSQLiteStore _selectAllEntriesSQLiteStatement]
  -[WBSTouchIconCacheSettingsSQLiteStore _insertEntrySQLiteStatementWithEntry:]
  -[WBSTouchIconCacheSettingsSQLiteStore _selectEntrySQLiteStatementWithHost:]


WBSLocalAssetController : NSObject /usr/lib/libc++.1.dylib <WBSMobileAssetControllerProtocol>
 @property  <WBSMobileAssetControllerDelegate> *delegate
 @property  NSDate *lastUpdateDate
 @property  double updateInterval

  // instance methods
  -[WBSLocalAssetController lastUpdateDate]
  -[WBSLocalAssetController updateInterval]
  -[WBSLocalAssetController initWithURL:]
  -[WBSLocalAssetController .cxx_destruct]
  -[WBSLocalAssetController setLastUpdateDate:]
  -[WBSLocalAssetController setDelegate:]
  -[WBSLocalAssetController delegate]
  -[WBSLocalAssetController queryURL:]


WBSPhishingURLClassifierHistoryAdapter : NSObject /usr/lib/libc++.1.dylib <WBSPhishingURLClassifier>
  // instance methods
  -[WBSPhishingURLClassifierHistoryAdapter initWithHistory:]
  -[WBSPhishingURLClassifierHistoryAdapter .cxx_destruct]
  -[WBSPhishingURLClassifierHistoryAdapter classifyURL:options:completionHandler:]


WBSTouchIconFetchOperation : WBSWebViewMetadataFetchOperation <WBSTouchIconObserver>
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSTouchIconFetchOperation initWithRequest:]
  -[WBSTouchIconFetchOperation initWithRequest:completionHandler:]
  -[WBSTouchIconFetchOperation initWithRequest:allowFetchingOverCellularNetwork:completionHandler:]
  -[WBSTouchIconFetchOperation .cxx_destruct]
  -[WBSTouchIconFetchOperation webView:decidePolicyForNavigationAction:decisionHandler:]
  -[WBSTouchIconFetchOperation isEqual:]
  -[WBSTouchIconFetchOperation didCreateWebView]
  -[WBSTouchIconFetchOperation didFetchTouchIconURLs:andFaviconURLs:forURL:]
  -[WBSTouchIconFetchOperation resetState]
  -[WBSTouchIconFetchOperation completionHandler]
  -[WBSTouchIconFetchOperation webViewConfiguration]
  -[WBSTouchIconFetchOperation clearWebView]
  -[WBSTouchIconFetchOperation willClearWebView]
  -[WBSTouchIconFetchOperation didFailFetch]
  -[WBSTouchIconFetchOperation startOffscreenFetching]
  -[WBSTouchIconFetchOperation _scheduleTimeoutWithTimeInterval:]
  -[WBSTouchIconFetchOperation loadRequest]
  -[WBSTouchIconFetchOperation didCompleteWithResult:]
  -[WBSTouchIconFetchOperation _downloadFirstValidImageWithURLs:failureHandler:]
  -[WBSTouchIconFetchOperation _setUpRemoteObjectProxies]
  -[WBSTouchIconFetchOperation _tearDownRemoteObjectProxies]
  -[WBSTouchIconFetchOperation _downloadPendingTouchIconURLs]


WBSTouchIconFetchOperationResult : NSObject /usr/lib/libc++.1.dylib
 @property  UIImage *touchIcon
 @property  NSString *host
 @property  BOOL favicon
 @property  BOOL pageRequestDidSucceed
 @property  BOOL higherPriorityIconDownloadFailedDueToNetworkError

  // class methods
  +[WBSTouchIconFetchOperationResult resultForFetchFailureWithHost:pageRequestDidSucceed:]
  +[WBSTouchIconFetchOperationResult resultWithTouchIcon:host:isFavicon:pageRequestDidSucceed:higherPriorityIconDownloadFailedDueToNetworkError:]

  // instance methods
  -[WBSTouchIconFetchOperationResult host]
  -[WBSTouchIconFetchOperationResult .cxx_destruct]
  -[WBSTouchIconFetchOperationResult higherPriorityIconDownloadFailedDueToNetworkError]
  -[WBSTouchIconFetchOperationResult touchIcon]
  -[WBSTouchIconFetchOperationResult pageRequestDidSucceed]
  -[WBSTouchIconFetchOperationResult initWithTouchIcon:host:isFavicon:pageRequestDidSucceed:higherPriorityIconDownloadFailedDueToNetworkError:]
  -[WBSTouchIconFetchOperationResult isFavicon]


WBSTouchIconRequest : WBSSiteMetadataRequest <WBSIconRequest>
 @property  BOOL iconGenerationEnabled
 @property  BOOL iconDownloadingEnabled
 @property  {CGSize=dd} minimumIconSize
 @property  {CGSize=dd} maximumIconSize
 @property  NSString *monogramTitle
 @property  {CGSize=dd} sizeForDrawing
 @property  NSString *uniqueIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSTouchIconRequest requestWithTitle:url:minimumIconSize:maximumIconSize:iconGenerationEnabled:iconDownloadingEnabled:]
  +[WBSTouchIconRequest requestWithTitle:url:minimumIconSize:maximumIconSize:iconGenerationEnabled:]
  +[WBSTouchIconRequest requestWithTitle:url:minimumIconSize:maximumIconSize:]

  // instance methods
  -[WBSTouchIconRequest .cxx_destruct]
  -[WBSTouchIconRequest uniqueIdentifier]
  -[WBSTouchIconRequest isEqual:]
  -[WBSTouchIconRequest initWithTitle:url:minimumIconSize:maximumIconSize:iconGenerationEnabled:]
  -[WBSTouchIconRequest maximumIconSize]
  -[WBSTouchIconRequest sizeForDrawing]
  -[WBSTouchIconRequest isIconGenerationEnabled]
  -[WBSTouchIconRequest monogramTitle]
  -[WBSTouchIconRequest isIconDownloadingEnabled]
  -[WBSTouchIconRequest minimumIconSize]
  -[WBSTouchIconRequest initWithTitle:url:minimumIconSize:maximumIconSize:]
  -[WBSTouchIconRequest initWithTitle:url:minimumIconSize:maximumIconSize:iconGenerationEnabled:iconDownloadingEnabled:]


WBSTouchIconResponse : WBSSiteMetadataResponse <WBSIconResponse>
 @property  UIImage *touchIcon
 @property  UIColor *extractedBackgroundColor
 @property  BOOL generated
 @property  UIImage *icon
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSTouchIconResponse responseWithURL:touchIcon:generated:extractedBackgroundColor:]

  // instance methods
  -[WBSTouchIconResponse isGenerated]
  -[WBSTouchIconResponse initWithURL:]
  -[WBSTouchIconResponse .cxx_destruct]
  -[WBSTouchIconResponse initWithURL:touchIcon:generated:extractedBackgroundColor:]
  -[WBSTouchIconResponse icon]
  -[WBSTouchIconResponse extractedBackgroundColor]
  -[WBSTouchIconResponse touchIcon]


WBSTouchIconWebProcessPlugInPageController : WBSWebProcessPlugInPageController
 @property  <WBSTouchIconObserver> *touchIconObserver

  // instance methods
  -[WBSTouchIconWebProcessPlugInPageController .cxx_destruct]
  -[WBSTouchIconWebProcessPlugInPageController webProcessPlugInBrowserContextController:didFinishDocumentLoadForFrame:]
  -[WBSTouchIconWebProcessPlugInPageController webProcessPlugInBrowserContextController:didHandleOnloadEventsForFrame:]
  -[WBSTouchIconWebProcessPlugInPageController webProcessPlugInBrowserContextController:frame:willSendRequestForResource:request:redirectResponse:]
  -[WBSTouchIconWebProcessPlugInPageController webProcessPlugInBrowserContextController:frame:didInitiateLoadForResource:request:pageIsProvisionallyLoading:]
  -[WBSTouchIconWebProcessPlugInPageController _extractTouchIconURLsIncludingDefaultURLs:didExtractNonDefaultIconURLs:]
  -[WBSTouchIconWebProcessPlugInPageController _extractFaviconURLsIncludingDefaultURLs:didExtractNonDefaultIconURLs:]
  -[WBSTouchIconWebProcessPlugInPageController touchIconObserver]


WBSTemplateIconCache : NSObject /usr/lib/libc++.1.dylib <WBSSiteMetadataImageCacheDelegate, WBSSiteMetadataProvider>
 @property  NSURL *imageDirectoryURL
 @property  {CGSize=dd} defaultIconSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSSiteMetadataProviderDelegate> *providerDelegate
 @property  BOOL providesFavicons

  // instance methods
  -[WBSTemplateIconCache responseForRequest:willProvideUpdates:]
  -[WBSTemplateIconCache imageDirectoryURL]
  -[WBSTemplateIconCache init]
  -[WBSTemplateIconCache setProviderDelegate:]
  -[WBSTemplateIconCache providerDelegate]
  -[WBSTemplateIconCache dealloc]
  -[WBSTemplateIconCache .cxx_destruct]
  -[WBSTemplateIconCache savePendingChangesBeforeTermination]
  -[WBSTemplateIconCache siteMetadataImageCache:didFinishLoadingImage:forKeyString:]
  -[WBSTemplateIconCache stopWatchingUpdatesForRequest:]
  -[WBSTemplateIconCache initWithImageDirectoryURL:]
  -[WBSTemplateIconCache siteMetadataImageCacheDidEmptyCache:]
  -[WBSTemplateIconCache purgeUnneededCacheEntries]
  -[WBSTemplateIconCache canHandleRequest:]
  -[WBSTemplateIconCache prepareResponseForRequest:allowDelayedResponse:]
  -[WBSTemplateIconCache emptyCaches]
  -[WBSTemplateIconCache _registerRequest:]
  -[WBSTemplateIconCache siteMetadataImageCacheDidFinishLoadingSettings:]
  -[WBSTemplateIconCache siteMetadataImageCache:didRemoveImageFromCacheForKeyString:]
  -[WBSTemplateIconCache _notifyImageWasLoaded:forHost:]
  -[WBSTemplateIconCache _setUpAndReturnDelayedResponseForRequest:]
  -[WBSTemplateIconCache hasDeterminedIconAvailabilityForURL:]
  -[WBSTemplateIconCache _didAddHistoryItems:]
  -[WBSTemplateIconCache _didRemoveHistoryItems:]
  -[WBSTemplateIconCache _didLoadHistory:]
  -[WBSTemplateIconCache _monogramForRequest:themeColor:]
  -[WBSTemplateIconCache _requestTemplateIconForRequest:]
  -[WBSTemplateIconCache _setUpAndReturnPreparedResponseForRequest:]
  -[WBSTemplateIconCache _generateResponseForRequest:completionHandler:]
  -[WBSTemplateIconCache _templateIconForURL:getThemeColor:]
  -[WBSTemplateIconCache _imageForRequest:getThemeColor:]
  -[WBSTemplateIconCache _saveTemplateIcon:withThemeColor:forHost:toDisk:]
  -[WBSTemplateIconCache _updateTemplateIconsDataForHost:image:themeColor:isSavedToDisk:]
  -[WBSTemplateIconCache _shouldRequestTemplateIconForURL:allowRefresh:]
  -[WBSTemplateIconCache _templateIconRetainerIsReadyForCleanUp]
  -[WBSTemplateIconCache retainTemplateIconsForHosts:]
  -[WBSTemplateIconCache releaseTemplateIconsForHosts:]
  -[WBSTemplateIconCache _purgeUnneededTemplateIconsIfReady]
  -[WBSTemplateIconCache _removeTemplateIconsDataForHost:]
  -[WBSTemplateIconCache _notifyDidLoadIconForHost:]
  -[WBSTemplateIconCache _upgradeCacheVersionIfNeeded]
  -[WBSTemplateIconCache _isLocalIconRequest:]
  -[WBSTemplateIconCache templateIconForURL:getThemeColor:]
  -[WBSTemplateIconCache addTemplateIconAtURL:withThemeColor:forHost:toDisk:]
  -[WBSTemplateIconCache retainTemplateIconForURLString:]
  -[WBSTemplateIconCache retainTemplateIconForHost:]
  -[WBSTemplateIconCache releaseTemplateIconForURLString:]
  -[WBSTemplateIconCache releaseTemplateIconForHost:]
  -[WBSTemplateIconCache shouldRequestTemplateIconForURL:allowRefresh:]
  -[WBSTemplateIconCache defaultIconSize]
  -[WBSTemplateIconCache setDefaultIconSize:]


WBSCachedFont : NSObject /usr/lib/libc++.1.dylib
 @property  UIFont *font
 @property  double size
 @property  long long fontWeight

  // instance methods
  -[WBSCachedFont size]
  -[WBSCachedFont .cxx_destruct]
  -[WBSCachedFont fontWeight]
  -[WBSCachedFont setFontWeight:]
  -[WBSCachedFont setSize:]
  -[WBSCachedFont setFont:]
  -[WBSCachedFont font]


WBSTemplateIconMonogramGenerator : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSTemplateIconMonogramGenerator monogramWithTitle:url:backgroundColor:]
  +[WBSTemplateIconMonogramGenerator monogramStringForTitle:url:]
  +[WBSTemplateIconMonogramGenerator monogramWithTitle:url:size:fontSize:fontWeight:baselineOffset:backgroundColor:cornerRadius:]
  +[WBSTemplateIconMonogramGenerator monogramWithTitle:url:monogramConfiguration:]
  +[WBSTemplateIconMonogramGenerator _monogramStringForPreparedTitle:url:]
  +[WBSTemplateIconMonogramGenerator monogramStringForURL:]


WBSTemplateIconMonogramConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL skipMonogramGeneration
 @property  {CGSize=dd} iconSize
 @property  double fontSize
 @property  long long fontWeight
 @property  double baselineOffset
 @property  UIColor *backgroundColor
 @property  double cornerRadius

  // class methods
  +[WBSTemplateIconMonogramConfiguration configurationWithIconSize:fontSize:fontWeight:baselineOffset:backgroundColor:cornerRadius:]
  +[WBSTemplateIconMonogramConfiguration configurationWithBackgroundColor:]

  // instance methods
  -[WBSTemplateIconMonogramConfiguration iconSize]
  -[WBSTemplateIconMonogramConfiguration setBackgroundColor:]
  -[WBSTemplateIconMonogramConfiguration setBaselineOffset:]
  -[WBSTemplateIconMonogramConfiguration setFontSize:]
  -[WBSTemplateIconMonogramConfiguration fontSize]
  -[WBSTemplateIconMonogramConfiguration setCornerRadius:]
  -[WBSTemplateIconMonogramConfiguration backgroundColor]
  -[WBSTemplateIconMonogramConfiguration .cxx_destruct]
  -[WBSTemplateIconMonogramConfiguration fontWeight]
  -[WBSTemplateIconMonogramConfiguration setFontWeight:]
  -[WBSTemplateIconMonogramConfiguration baselineOffset]
  -[WBSTemplateIconMonogramConfiguration cornerRadius]
  -[WBSTemplateIconMonogramConfiguration setIconSize:]
  -[WBSTemplateIconMonogramConfiguration skipMonogramGeneration]
  -[WBSTemplateIconMonogramConfiguration setSkipMonogramGeneration:]


WBSTemplateIconRequest : WBSSiteMetadataRequest
 @property  NSString *monogramTitle
 @property  WBSTemplateIconMonogramConfiguration *monogramConfiguration
 @property  UIColor *overrideForegroundColor
 @property  BOOL saveToDisk

  // instance methods
  -[WBSTemplateIconRequest saveToDisk]
  -[WBSTemplateIconRequest initWithURL:extraInfo:]
  -[WBSTemplateIconRequest monogramTitle]
  -[WBSTemplateIconRequest overrideForegroundColor]
  -[WBSTemplateIconRequest monogramConfiguration]
  -[WBSTemplateIconRequest initWithURL:title:monogramConfiguration:overrideForegroundColor:saveToDisk:]


WBSTranslationContextSnapshot : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long state
 @property  NSString *targetLocale
 @property  NSString *webpageLocale
 @property  NSURL *webpageURL

  // instance methods
  -[WBSTranslationContextSnapshot webpageURL]
  -[WBSTranslationContextSnapshot setState:]
  -[WBSTranslationContextSnapshot targetLocale]
  -[WBSTranslationContextSnapshot .cxx_destruct]
  -[WBSTranslationContextSnapshot setTargetLocale:]
  -[WBSTranslationContextSnapshot setWebpageURL:]
  -[WBSTranslationContextSnapshot state]
  -[WBSTranslationContextSnapshot webpageLocale]
  -[WBSTranslationContextSnapshot setWebpageLocale:]


WBSTemplateIconResponse : WBSSiteMetadataResponse
 @property  UIImage *image
 @property  UIImage *highlightedImage
 @property  UIColor *themeColor
 @property  BOOL monogram

  // class methods
  +[WBSTemplateIconResponse responseWithURL:image:highlightedImage:themeColor:isMonogram:]

  // instance methods
  -[WBSTemplateIconResponse initWithURL:]
  -[WBSTemplateIconResponse .cxx_destruct]
  -[WBSTemplateIconResponse themeColor]
  -[WBSTemplateIconResponse image]
  -[WBSTemplateIconResponse highlightedImage]
  -[WBSTemplateIconResponse isMonogram]
  -[WBSTemplateIconResponse initWithURL:image:highlightedImage:themeColor:isMonogram:]


WBSWebProcessPlugIn : NSObject /usr/lib/libc++.1.dylib <WKWebProcessPlugIn>
 @property  WKWebProcessPlugInController *plugInController
 @property  NSArray *searchEnginesForRedirectToSafeSearch
 @property  WBSSearchProvider *defaultSearchProvider
 @property  BOOL parsecABTestingEnabled
 @property  unsigned long parsecABGroupIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSWebProcessPlugIn .cxx_destruct]
  -[WBSWebProcessPlugIn searchEnginesForRedirectToSafeSearch]
  -[WBSWebProcessPlugIn isParsecABTestingEnabled]
  -[WBSWebProcessPlugIn parsecABGroupIdentifier]
  -[WBSWebProcessPlugIn plugInController]
  -[WBSWebProcessPlugIn defaultSearchProvider]
  -[WBSWebProcessPlugIn webProcessPlugIn:initializeWithObject:]
  -[WBSWebProcessPlugIn webProcessPlugIn:didCreateBrowserContextController:]
  -[WBSWebProcessPlugIn webProcessPlugIn:willDestroyBrowserContextController:]
  -[WBSWebProcessPlugIn didCreatePageController:forBrowserContextController:]
  -[WBSWebProcessPlugIn willDestroyPageController:forBrowserContextController:]
  -[WBSWebProcessPlugIn pageControllerWithBrowserContextController:]


WBSWebProcessPlugInPageController : NSObject /usr/lib/libc++.1.dylib <WKWebProcessPlugInLoadDelegate>
 @property  WKWebProcessPlugInFrame *mainFrame
 @property  WKWebProcessPlugInBrowserContextController *browserContextController
 @property  WBSWebProcessPlugIn *webProcessPlugIn
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSWebProcessPlugInPageController init]
  -[WBSWebProcessPlugInPageController initWithPlugIn:contextController:]
  -[WBSWebProcessPlugInPageController .cxx_destruct]
  -[WBSWebProcessPlugInPageController webProcessPlugIn]
  -[WBSWebProcessPlugInPageController browserContextController]
  -[WBSWebProcessPlugInPageController willDestroyBrowserContextController:]
  -[WBSWebProcessPlugInPageController mainFrame]


WBSWebViewMetadataFetchOperation : WBSSiteMetadataFetchOperation <WKNavigationDelegate>
 @property  <WBSWebViewMetadataFetchOperationDelegate> *delegate
 @property  WKWebView *webView
 @property  WKWebViewConfiguration *webViewConfiguration
 @property  {CGSize=dd} webViewSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSWebViewMetadataFetchOperation webView]
  -[WBSWebViewMetadataFetchOperation dealloc]
  -[WBSWebViewMetadataFetchOperation _webViewWebProcessDidCrash:]
  -[WBSWebViewMetadataFetchOperation webView:didFailProvisionalNavigation:withError:]
  -[WBSWebViewMetadataFetchOperation .cxx_destruct]
  -[WBSWebViewMetadataFetchOperation cancel]
  -[WBSWebViewMetadataFetchOperation didCreateWebView]
  -[WBSWebViewMetadataFetchOperation setDelegate:]
  -[WBSWebViewMetadataFetchOperation webView:didFailNavigation:withError:]
  -[WBSWebViewMetadataFetchOperation delegate]
  -[WBSWebViewMetadataFetchOperation webViewConfiguration]
  -[WBSWebViewMetadataFetchOperation start]
  -[WBSWebViewMetadataFetchOperation clearWebView]
  -[WBSWebViewMetadataFetchOperation willClearWebView]
  -[WBSWebViewMetadataFetchOperation didFailFetch]
  -[WBSWebViewMetadataFetchOperation webViewSize]
  -[WBSWebViewMetadataFetchOperation startOffscreenFetching]
  -[WBSWebViewMetadataFetchOperation _setUpWebViewAndStartOffscreenFetching]


WBSPhishingUpdateConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *configurationName
 @property  NSString *configurationVersion
 @property  double updateInterval

  // instance methods
  -[WBSPhishingUpdateConfiguration configurationName]
  -[WBSPhishingUpdateConfiguration updateInterval]
  -[WBSPhishingUpdateConfiguration initWithData:error:]
  -[WBSPhishingUpdateConfiguration .cxx_destruct]
  -[WBSPhishingUpdateConfiguration configurationVersion]
  -[WBSPhishingUpdateConfiguration initWithDictionary:error:]
  -[WBSPhishingUpdateConfiguration initWithURL:error:]


WBSAppLink : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *url
 @property  LSApplicationProxy *synchronousTargetApplicationProxy

  // class methods
  +[WBSAppLink clearSavedSettings]

  // instance methods
  -[WBSAppLink disable]
  -[WBSAppLink url]
  -[WBSAppLink initWithURL:]
  -[WBSAppLink .cxx_destruct]
  -[WBSAppLink getAppLinkLabel:name:icon:]
  -[WBSAppLink synchronousTargetApplicationProxy]
  -[WBSAppLink openExternallyWithWebBrowserState:referrerURL:completionHandler:]
  -[WBSAppLink decideOpenStrategyWithCompletionHandler:]
  -[WBSAppLink synchronouslyDecideOpenStrategy]
  -[WBSAppLink getAppLinkAttributesWithCompletionHandler:]
  -[WBSAppLink disableWithCompletionHandler:]
  -[WBSAppLink _synchronouslyFetchAppLinkWithError:]
  -[WBSAppLink _getAppLinkWithCompletionHandler:]
  -[WBSAppLink _openStrategyForAppLink:]
  -[WBSAppLink _appLink:getAppLinkLabel:name:icon:]
  -[WBSAppLink openExternally]


WBSPhishingAssetController : NSObject /usr/lib/libc++.1.dylib <WBSMobileAssetControllerDelegate, WBSRemotePlistControllerDelegate, WBSPhishingAssetControllerProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSPhishingAssetControllerDelegate> *delegate

  // class methods
  +[WBSPhishingAssetController mobileAssetType]

  // instance methods
  -[WBSPhishingAssetController init]
  -[WBSPhishingAssetController .cxx_destruct]
  -[WBSPhishingAssetController didDownloadPlistForRemotePlistController:]
  -[WBSPhishingAssetController setDelegate:]
  -[WBSPhishingAssetController delegate]
  -[WBSPhishingAssetController mobileAssetController:didBecomeAvailable:]
  -[WBSPhishingAssetController initWithMobileAssetController:canUpdateConfiguration:]
  -[WBSPhishingAssetController _sendAssetToDelegateIfPossible:]
  -[WBSPhishingAssetController _sendAssetToDelegateIfPossible]
  -[WBSPhishingAssetController _createConfigurationControllerWithDefaultConfigurationURL:updateConfiguration:defaultsKey:]
  -[WBSPhishingAssetController _configurationWasUpdated:]
  -[WBSPhishingAssetController mobileAssetController:didDownload:]
  -[WBSPhishingAssetController mobileAssetController:didFailDownload:]
  -[WBSPhishingAssetController mobileAssetController:didFailCatalogDownload:]
  -[WBSPhishingAssetController mobileAssetController:didFailRetrieve:]


WBSPhishingClassifierControllerConfigurationTransformer : WBSConfigurationDataTransformer /System/Library/Frameworks/Accelerate.framework/Accelerate
  // instance methods
  -[WBSPhishingClassifierControllerConfigurationTransformer objectFromData:]


WBSFluidProgressController : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSFluidProgressControllerDelegate> *delegate
 @property  <WBSFluidProgressControllerWindowDelegate> *windowDelegate

  // instance methods
  -[WBSFluidProgressController _updateFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController frontmostTabDidChange]
  -[WBSFluidProgressController windowDelegate]
  -[WBSFluidProgressController progressStateSourceDidCommitLoad:loadingSingleResource:]
  -[WBSFluidProgressController startRocketEffectWithProgressStateSource:]
  -[WBSFluidProgressController setWindowDelegate:]
  -[WBSFluidProgressController .cxx_destruct]
  -[WBSFluidProgressController animationStepCompleted:]
  -[WBSFluidProgressController cancelFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController startFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController finishFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController updateFluidProgressWithProgressStateSource:]
  -[WBSFluidProgressController setDelegate:]
  -[WBSFluidProgressController delegate]


WBSFluidProgressAnimation : NSObject /usr/lib/libc++.1.dylib
 @property  CAMediaTimingFunction *timingFunction
 @property  double initialPosition
 @property  double destinationPosition
 @property  double animationDuration

  // instance methods
  -[WBSFluidProgressAnimation timingFunction]
  -[WBSFluidProgressAnimation setTimingFunction:]
  -[WBSFluidProgressAnimation .cxx_destruct]
  -[WBSFluidProgressAnimation animationDuration]
  -[WBSFluidProgressAnimation setAnimationDuration:]
  -[WBSFluidProgressAnimation destinationPosition]
  -[WBSFluidProgressAnimation initialPosition]
  -[WBSFluidProgressAnimation setInitialPosition:]
  -[WBSFluidProgressAnimation setDestinationPosition:]


WBSFluidProgressState : NSObject /usr/lib/libc++.1.dylib
 @property  long long fluidProgressType
 @property  NSString *loadURL
 @property  double minProgressPosition
 @property  long long fluidProgressAnimationPhase
 @property  BOOL hasCompletedLoad
 @property  BOOL hasCanceledLoad
 @property  BOOL hasCommittedLoad
 @property  BOOL shouldAnimateUsingInitialPosition

  // class methods
  +[WBSFluidProgressState _estimatedLoadTimeRemainingFromProgressValue:]

  // instance methods
  -[WBSFluidProgressState initWithType:]
  -[WBSFluidProgressState .cxx_destruct]
  -[WBSFluidProgressState setLoadURL:]
  -[WBSFluidProgressState loadURL]
  -[WBSFluidProgressState _animationDuration]
  -[WBSFluidProgressState fluidProgressAnimationPhase]
  -[WBSFluidProgressState setFluidProgressAnimationPhase:]
  -[WBSFluidProgressState hasCompletedLoad]
  -[WBSFluidProgressState nextFluidProgressAnimation]
  -[WBSFluidProgressState isFluidProgressStalled]
  -[WBSFluidProgressState fluidProgressValue]
  -[WBSFluidProgressState setHasCommittedLoad:]
  -[WBSFluidProgressState setWebKitProgressValue:]
  -[WBSFluidProgressState hasCommittedLoad]
  -[WBSFluidProgressState setHasCompletedLoad:]
  -[WBSFluidProgressState setHasCanceledLoad:]
  -[WBSFluidProgressState setShouldAnimateUsingInitialPosition:]
  -[WBSFluidProgressState setFluidProgressType:]
  -[WBSFluidProgressState hasCanceledLoad]
  -[WBSFluidProgressState setMinProgressPosition:]
  -[WBSFluidProgressState _updateLinearFunction]
  -[WBSFluidProgressState secondsElapsedSinceLoadBegan]
  -[WBSFluidProgressState _fractionCompleteAtElapsedTime:]
  -[WBSFluidProgressState _adjustProgressPosition:]
  -[WBSFluidProgressState _nextProgressPosition:]
  -[WBSFluidProgressState minProgressPosition]
  -[WBSFluidProgressState fluidProgressType]
  -[WBSFluidProgressState shouldAnimateUsingInitialPosition]
  -[WBSFluidProgressState _estimatedLoadTimeRemaining]


WBSContextResultGrouper : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long minimumNumberOfItemsRequiredInGroup

  // instance methods
  -[WBSContextResultGrouper init]
  -[WBSContextResultGrouper groupItems:]
  -[WBSContextResultGrouper minimumNumberOfItemsRequiredInGroup]
  -[WBSContextResultGrouper setMinimumNumberOfItemsRequiredInGroup:]


WBSForYouCloudTabsDataSource : WBSForYouRecommendationMediatorDataSource
  // instance methods
  -[WBSForYouCloudTabsDataSource .cxx_destruct]
  -[WBSForYouCloudTabsDataSource retrieveRecommendationsMatchingTopic:withCompletionHandler:]
  -[WBSForYouCloudTabsDataSource _createInternalQueueIfNecessary]
  -[WBSForYouCloudTabsDataSource initWithTabStore:]


WBSForYouDataSourceWeightManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSForYouDataSourceWeightManager clear]
  -[WBSForYouDataSourceWeightManager downvoteSource:]
  -[WBSForYouDataSourceWeightManager .cxx_destruct]
  -[WBSForYouDataSourceWeightManager weightForSource:]
  -[WBSForYouDataSourceWeightManager initWithKeyValueStore:]


WBSForYouLinkRecommendation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSString *footnote
 @property  NSString *originalQueriesString
 @property  NSSet *originalQueries
 @property  NSURL *pageURL
 @property  NSString *simplifiedURLString
 @property  NSURL *imageURL
 @property  UIImage *image
 @property  CNContact *contact
 @property  UIImage *contactImage
 @property  UIImage *appIcon
 @property  UIImage *sourceIcon
 @property  NSDate *lastSeenDate
 @property  id sourceID
 @property  NSString *bundleIdentifier
 @property  NSString *badgeBundleIdentifier
 @property  NSString *secondarySourceIdentifier
 @property  unsigned long source
 @property  unsigned long topicSource
 @property  NSUUID *uniqueIdentifier
 @property  NSNumber *cachedScore

  // instance methods
  -[WBSForYouLinkRecommendation setImageURL:]
  -[WBSForYouLinkRecommendation contact]
  -[WBSForYouLinkRecommendation pageURL]
  -[WBSForYouLinkRecommendation setFootnote:]
  -[WBSForYouLinkRecommendation setContact:]
  -[WBSForYouLinkRecommendation source]
  -[WBSForYouLinkRecommendation setContactImage:]
  -[WBSForYouLinkRecommendation sourceIcon]
  -[WBSForYouLinkRecommendation .cxx_destruct]
  -[WBSForYouLinkRecommendation setImage:]
  -[WBSForYouLinkRecommendation setTitle:]
  -[WBSForYouLinkRecommendation image]
  -[WBSForYouLinkRecommendation uniqueIdentifier]
  -[WBSForYouLinkRecommendation title]
  -[WBSForYouLinkRecommendation setBundleIdentifier:]
  -[WBSForYouLinkRecommendation contactImage]
  -[WBSForYouLinkRecommendation footnote]
  -[WBSForYouLinkRecommendation imageURL]
  -[WBSForYouLinkRecommendation appIcon]
  -[WBSForYouLinkRecommendation sourceID]
  -[WBSForYouLinkRecommendation lastSeenDate]
  -[WBSForYouLinkRecommendation bundleIdentifier]
  -[WBSForYouLinkRecommendation setSourceID:]
  -[WBSForYouLinkRecommendation initWithTitle:url:lastSeenDate:source:topicSource:]
  -[WBSForYouLinkRecommendation addOriginalQueries:]
  -[WBSForYouLinkRecommendation badgeBundleIdentifier]
  -[WBSForYouLinkRecommendation originalQueries]
  -[WBSForYouLinkRecommendation originalQueriesString]
  -[WBSForYouLinkRecommendation simplifiedURLString]
  -[WBSForYouLinkRecommendation secondarySourceIdentifier]
  -[WBSForYouLinkRecommendation setSecondarySourceIdentifier:]
  -[WBSForYouLinkRecommendation topicSource]
  -[WBSForYouLinkRecommendation setTopicSource:]
  -[WBSForYouLinkRecommendation cachedScore]
  -[WBSForYouLinkRecommendation setCachedScore:]


WBSForYouPerSitePreferenceManager : WBSPerSitePreferenceManager /System/Library/Frameworks/Accelerate.framework/Accelerate <WBSPerSitePreferenceManagerStorageDelegate, WBSPerSitePreferenceManagerDefaultsDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSPerSitePreferencesSQLiteStore *perSitePreferencesStore

  // instance methods
  -[WBSForYouPerSitePreferenceManager perSitePreferencesStore]
  -[WBSForYouPerSitePreferenceManager init]
  -[WBSForYouPerSitePreferenceManager initWithPerSitePreferencesStore:]
  -[WBSForYouPerSitePreferenceManager defaultPreferenceValueForPreferenceIfNotCustomized:]
  -[WBSForYouPerSitePreferenceManager preferences]
  -[WBSForYouPerSitePreferenceManager .cxx_destruct]
  -[WBSForYouPerSitePreferenceManager valuesForPreference:]
  -[WBSForYouPerSitePreferenceManager preferencesStoreKeyForPreference:]
  -[WBSForYouPerSitePreferenceManager localizedStringForValue:inPreference:]
  -[WBSForYouPerSitePreferenceManager allowedForYouRecommendationsFromRecommendations:completionHandler:]
  -[WBSForYouPerSitePreferenceManager setPreferenceValue:forURL:completionHandler:]


WBSForYouRecommendationMediator : NSObject /usr/lib/libc++.1.dylib <UABestAppSuggestionManagerDelegate>
 @property  NSArray *dataSources
 @property  BOOL ignoreMinimumNumberOfRecommendationsPerTopic
 @property  BOOL suppressHistoryDeduplication
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSForYouRecommendationMediator _titleForRecommendationSource:]
  +[WBSForYouRecommendationMediator _titleForRecommendationTopicSource:]
  +[WBSForYouRecommendationMediator scoreForRecommendation:weightManager:simplifiedURLStringToLastVisitedDateMap:]
  +[WBSForYouRecommendationMediator _rankRecommendationsInPlace:history:weightManager:suppressHistoryDeduplication:]
  +[WBSForYouRecommendationMediator _adjustedTopicsWithTopics:]
  +[WBSForYouRecommendationMediator areSiriSuggestionsEnabled]

  // instance methods
  -[WBSForYouRecommendationMediator downvoteSource:]
  -[WBSForYouRecommendationMediator setIgnoreMinimumNumberOfRecommendationsPerTopic:]
  -[WBSForYouRecommendationMediator ignoreMinimumNumberOfRecommendationsPerTopic]
  -[WBSForYouRecommendationMediator bestAppSuggestionChanged:]
  -[WBSForYouRecommendationMediator dealloc]
  -[WBSForYouRecommendationMediator banURLsOfSameDomainAsURL:]
  -[WBSForYouRecommendationMediator _fetchImagesForRecommendations:recommendationsDispatchGroup:]
  -[WBSForYouRecommendationMediator .cxx_destruct]
  -[WBSForYouRecommendationMediator updatedRecommendationsForTopics:withCompletionHandler:]
  -[WBSForYouRecommendationMediator setSuppressHistoryDeduplication:]
  -[WBSForYouRecommendationMediator dataSources]
  -[WBSForYouRecommendationMediator beginListeningForURLSuggestionChanges]
  -[WBSForYouRecommendationMediator recommendationFromDictionary:]
  -[WBSForYouRecommendationMediator banURLsOfSameDomainAsURL:postingChangeNotificationWhenDone:]
  -[WBSForYouRecommendationMediator updatedTopicsWithCompletionHandler:]
  -[WBSForYouRecommendationMediator analyticsMetadataForRecommendation:]
  -[WBSForYouRecommendationMediator fetchImageForRecommendation:completionHandler:]
  -[WBSForYouRecommendationMediator _dataSourceWeightManager]
  -[WBSForYouRecommendationMediator _createAppSuggestionsManagerIfNecessary]
  -[WBSForYouRecommendationMediator downvoteSource:postingChangeNotificationWhenDone:]
  -[WBSForYouRecommendationMediator _retrieveFoundInRecommendationsWithCompletionHandler:]
  -[WBSForYouRecommendationMediator clearDataSourceWeights]
  -[WBSForYouRecommendationMediator obtainMessagesImagesWherePossibleForRecommendations:completionHandler:]
  -[WBSForYouRecommendationMediator suppressHistoryDeduplication]
  -[WBSForYouRecommendationMediator _endListeningForHandoffActivity]
  -[WBSForYouRecommendationMediator _createPreferenceManagerIfNecessary]
  -[WBSForYouRecommendationMediator initWithContextClient:historyProvider:]
  -[WBSForYouRecommendationMediator _didUpdateFoundInSuggestions:]
  -[WBSForYouRecommendationMediator retrieveHandoffRecommendationWithCompletionHandler:]
  -[WBSForYouRecommendationMediator _beginListeningForHandoffActivity]
  -[WBSForYouRecommendationMediator stopListeningForURLSuggestionChanges]
  -[WBSForYouRecommendationMediator loadLinkPresentationMetadataForMessageWithGUID:completionHandler:]


WBSForYouRecommendationMediatorDataSource : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSForYouRecommendationMediatorDataSource retrieveRecommendationsMatchingTopic:withCompletionHandler:]
  -[WBSForYouRecommendationMediatorDataSource emitStartRetrievingRecommendationsPerformanceMarker]
  -[WBSForYouRecommendationMediatorDataSource recommendationsWithTopics:withCompletionHandler:]
  -[WBSForYouRecommendationMediatorDataSource notifyContentsDidChangeFromSource:]
  -[WBSForYouRecommendationMediatorDataSource notifyImageWasUpdatedForRecommendation:]


WBSForYouTopic : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSString *identifier
 @property  NSArray *associatedTopics
 @property  NSDate *relevancyDate
 @property  unsigned long source

  // instance methods
  -[WBSForYouTopic associatedTopics]
  -[WBSForYouTopic setSource:]
  -[WBSForYouTopic source]
  -[WBSForYouTopic .cxx_destruct]
  -[WBSForYouTopic identifier]
  -[WBSForYouTopic initWithTitle:identifier:relevancyDate:source:]
  -[WBSForYouTopic title]
  -[WBSForYouTopic relevancyDate]
  -[WBSForYouTopic setAssociatedTopics:]


WBSForYouTopicManager : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSForYouTopicManager initWithHistory:contextClient:]
  -[WBSForYouTopicManager .cxx_destruct]
  -[WBSForYouTopicManager portraitNamedEntitiesWithCompletionHandler:]
  -[WBSForYouTopicManager _createInternalQueueIfNecessary]
  -[WBSForYouTopicManager contextKitTopicsWithCompletionHandler:]


WBSFoundInRecommendationManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSFoundInRecommendationManager isBundleIdentifierFromMessages:]
  +[WBSFoundInRecommendationManager foundInSourceFromBundleIdentifier:]
  +[WBSFoundInRecommendationManager isBundleIdentifierFromCalendar:]
  +[WBSFoundInRecommendationManager _linkRecommendationsFromSGSuggestions:contactStoreProvider:]

  // instance methods
  -[WBSFoundInRecommendationManager _recentURLRecommendationsWithCompletionHandler:]
  -[WBSFoundInRecommendationManager .cxx_destruct]
  -[WBSFoundInRecommendationManager beginListeningForURLSuggestionChanges]
  -[WBSFoundInRecommendationManager recentRecommendationsWithCompletionHandler:]
  -[WBSFoundInRecommendationManager _createInternalQueueIfNecessary]
  -[WBSFoundInRecommendationManager stopListeningForURLSuggestionChanges]


WBSSiriIntelligenceDonorHistoryData : NSObject /usr/lib/libc++.1.dylib
 @property  NSURL *pageURL
 @property  NSString *userVisibleURLString
 @property  NSString *pageTitle
 @property  NSString *fullPageText
 @property  NSString *readerText
 @property  NSDate *lastVisitedDate
 @property  unsigned long visitCount
 @property  NSArray *autocompleteTriggers

  // instance methods
  -[WBSSiriIntelligenceDonorHistoryData pageURL]
  -[WBSSiriIntelligenceDonorHistoryData setPageTitle:]
  -[WBSSiriIntelligenceDonorHistoryData .cxx_destruct]
  -[WBSSiriIntelligenceDonorHistoryData userVisibleURLString]
  -[WBSSiriIntelligenceDonorHistoryData autocompleteTriggers]
  -[WBSSiriIntelligenceDonorHistoryData setAutocompleteTriggers:]
  -[WBSSiriIntelligenceDonorHistoryData setPageURL:]
  -[WBSSiriIntelligenceDonorHistoryData setVisitCount:]
  -[WBSSiriIntelligenceDonorHistoryData pageTitle]
  -[WBSSiriIntelligenceDonorHistoryData setLastVisitedDate:]
  -[WBSSiriIntelligenceDonorHistoryData visitCount]
  -[WBSSiriIntelligenceDonorHistoryData lastVisitedDate]
  -[WBSSiriIntelligenceDonorHistoryData setUserVisibleURLString:]
  -[WBSSiriIntelligenceDonorHistoryData fullPageText]
  -[WBSSiriIntelligenceDonorHistoryData setFullPageText:]
  -[WBSSiriIntelligenceDonorHistoryData readerText]
  -[WBSSiriIntelligenceDonorHistoryData setReaderText:]


WBSSiriIntelligenceDonorBookmarkData : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *coreSpotlightID
 @property  NSString *bookmarkURLString
 @property  NSString *bookmarkTitle

  // instance methods
  -[WBSSiriIntelligenceDonorBookmarkData .cxx_destruct]
  -[WBSSiriIntelligenceDonorBookmarkData coreSpotlightID]
  -[WBSSiriIntelligenceDonorBookmarkData setCoreSpotlightID:]
  -[WBSSiriIntelligenceDonorBookmarkData bookmarkURLString]
  -[WBSSiriIntelligenceDonorBookmarkData setBookmarkURLString:]
  -[WBSSiriIntelligenceDonorBookmarkData bookmarkTitle]
  -[WBSSiriIntelligenceDonorBookmarkData setBookmarkTitle:]


WBSSiriIntelligenceDonor : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSSiriIntelligenceDonor sharedInstance]
  +[WBSSiriIntelligenceDonor coreSpotlightPageDonationIdentifier]
  +[WBSSiriIntelligenceDonor historyItemIdentifierForURL:]
  +[WBSSiriIntelligenceDonor _historyItemIdentifierForURLString:]
  +[WBSSiriIntelligenceDonor _coreSpotlightItemIdentifierForURLString:]
  +[WBSSiriIntelligenceDonor _bookmarkItemIdentifierForURLString:]

  // instance methods
  -[WBSSiriIntelligenceDonor init]
  -[WBSSiriIntelligenceDonor .cxx_destruct]
  -[WBSSiriIntelligenceDonor _donateDataForPageWithURL:fullPageText:readerText:autocompleteTriggers:]
  -[WBSSiriIntelligenceDonor _indexHistoryItemsToCoreSpotlight:completionHandler:]
  -[WBSSiriIntelligenceDonor _computeCoreSpotlightIDsForBookmarks:]
  -[WBSSiriIntelligenceDonor _indexedBookmarksIDs:]
  -[WBSSiriIntelligenceDonor _computeCoreSpotlightIndexingRequirementsForAllBookmarksIDs:indexedBookmarksIDs:outIndexIDs:outRemoveIDs:]
  -[WBSSiriIntelligenceDonor _removeCoreSpotlightDataWithIDs:completionHandler:]
  -[WBSSiriIntelligenceDonor _searchableItemsForIDs:allBookmarks:]
  -[WBSSiriIntelligenceDonor _indexCoreSpotlightData:]
  -[WBSSiriIntelligenceDonor _contentDescriptionForURL:]
  -[WBSSiriIntelligenceDonor _sanitizeAttributeSet:]
  -[WBSSiriIntelligenceDonor donateDataForPageWithURL:fullPageText:readerText:]
  -[WBSSiriIntelligenceDonor export30DaysWorthOfHistoryToCoreSpotlightWithCompletionHandler:]
  -[WBSSiriIntelligenceDonor donateSafariBookmarksToCoreSpotlight:]
  -[WBSSiriIntelligenceDonor processRemovedHistoryItems:]
  -[WBSSiriIntelligenceDonor removeAllCoreSpotlightHistoryDataDonatedBySafari]


WBSSiriIntelligenceHistorySearch : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSSiriIntelligenceHistorySearch dealloc]
  -[WBSSiriIntelligenceHistorySearch .cxx_destruct]
  -[WBSSiriIntelligenceHistorySearch findURLStringsForHistoryItemsContainingString:completionHandler:]


_WBSParsecSubscriptionInfoKeyValueStringParser : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[_WBSParsecSubscriptionInfoKeyValueStringParser parseKeyValuePairsFromString:]

  // instance methods
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _initWithString:]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser .cxx_destruct]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _isAtEnd]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseKeyValuePairs]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseKeyValuePairWithKey:value:]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _previewCharacter]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _consumeCharacter]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _skipWhitespace]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseKey]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseValue]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseUpToCharacterFromSet:]
  -[_WBSParsecSubscriptionInfoKeyValueStringParser _parseJSONValue]


WBSParsecSubscriptionInfo : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *expirationDate
 @property  NSString *type
 @property  BOOL expired

  // instance methods
  -[WBSParsecSubscriptionInfo initWithString:]
  -[WBSParsecSubscriptionInfo .cxx_destruct]
  -[WBSParsecSubscriptionInfo isExpired]
  -[WBSParsecSubscriptionInfo type]
  -[WBSParsecSubscriptionInfo expirationDate]
  -[WBSParsecSubscriptionInfo _initWithDictionary:]


WBSPhishingURLClassifierWithFallback : NSObject /usr/lib/libc++.1.dylib <WBSPhishingURLClassifier>
 @property  <WBSPhishingURLClassifier> *urlClassifier
 @property  <WBSPhishingURLClassifier> *fallbackClassifier

  // class methods
  +[WBSPhishingURLClassifierWithFallback buildChain:]

  // instance methods
  -[WBSPhishingURLClassifierWithFallback .cxx_destruct]
  -[WBSPhishingURLClassifierWithFallback classifyURL:options:completionHandler:]
  -[WBSPhishingURLClassifierWithFallback initWithURLClassifier:fallback:]
  -[WBSPhishingURLClassifierWithFallback urlClassifier]
  -[WBSPhishingURLClassifierWithFallback fallbackClassifier]


WBSParsecAuxiliaryInfo : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate
 @property  NSString *topText
 @property  NSString *middleText
 @property  NSString *bottomText
 @property  NSString *bottomTextColor

  // class methods
  +[WBSParsecAuxiliaryInfo schema]

  // instance methods
  -[WBSParsecAuxiliaryInfo .cxx_destruct]
  -[WBSParsecAuxiliaryInfo initWithDictionary:]
  -[WBSParsecAuxiliaryInfo topText]
  -[WBSParsecAuxiliaryInfo middleText]
  -[WBSParsecAuxiliaryInfo bottomText]
  -[WBSParsecAuxiliaryInfo bottomTextColor]


WBSParsecSearchSimpleResult : WBSParsecLegacySearchResult <WBSParsecSearchSimpleResult>
 @property  NSNumber *titleMaximumNumberOfLines
 @property  NSString *descriptionLeadInText
 @property  NSNumber *descriptionMaximumNumberOfLines
 @property  BOOL descriptionTextCanWrap
 @property  NSString *footnote
 @property  BOOL hasSingleLineDescriptionAndTitle
 @property  <WBSParsecSearchSession> *parsecSearchSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WBSParsecSearchMapsResultFeedbackSender *mapsFeedbackSender

  // instance methods
  -[WBSParsecSearchSimpleResult .cxx_destruct]
  -[WBSParsecSearchSimpleResult initWithDictionary:]
  -[WBSParsecSearchSimpleResult footnote]
  -[WBSParsecSearchSimpleResult parsecSearchSession]
  -[WBSParsecSearchSimpleResult setParsecSearchSession:]
  -[WBSParsecSearchSimpleResult mapsFeedbackSender]
  -[WBSParsecSearchSimpleResult setMapsFeedbackSender:]
  -[WBSParsecSearchSimpleResult titleGlyphWithSession:]
  -[WBSParsecSearchSimpleResult titleMaximumNumberOfLines]
  -[WBSParsecSearchSimpleResult descriptionLeadInText]
  -[WBSParsecSearchSimpleResult descriptionMaximumNumberOfLines]
  -[WBSParsecSearchSimpleResult descriptionTextCanWrap]
  -[WBSParsecSearchSimpleResult hasSingleLineDescriptionAndTitle]


WBSCompletionListRankingObserver : NSObject /usr/lib/libc++.1.dylib <_CompletionListRankingObserverFeedbackGeneratorDelegate>
 @property  <WBSCompletionListRankingObserverDelegate> *delegate
 @property  SFRankingFeedback *rankingFeedback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSCompletionListRankingObserver _createFeedbackGenerator]
  -[WBSCompletionListRankingObserver .cxx_destruct]
  -[WBSCompletionListRankingObserver rankingFeedback]
  -[WBSCompletionListRankingObserver setDelegate:]
  -[WBSCompletionListRankingObserver delegate]
  -[WBSCompletionListRankingObserver didBeginRanking]
  -[WBSCompletionListRankingObserver didEndRanking]
  -[WBSCompletionListRankingObserver didBeginSectionWithBundleIdentifier:]
  -[WBSCompletionListRankingObserver didAddItem:hidingOutrankedResults:hidingDuplicateResults:]
  -[WBSCompletionListRankingObserver removeAllSectionsAndItems]
  -[WBSCompletionListRankingObserver _feedbackGeneratorClass]
  -[WBSCompletionListRankingObserver completionListRankingObserverFeedbackGenerator:frequentlyVisitedSitesIndexOfItem:hidingItem:]
  -[WBSCompletionListRankingObserver didAddItem:]


_WBSSearchFoundationFeedbackGenerator : NSObject /usr/lib/libc++.1.dylib <_CompletionListRankingObserverFeedbackGenerator>
 @property  SFRankingFeedback *rankingFeedback
 @property  <_CompletionListRankingObserverFeedbackGeneratorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_WBSSearchFoundationFeedbackGenerator init]
  -[_WBSSearchFoundationFeedbackGenerator .cxx_destruct]
  -[_WBSSearchFoundationFeedbackGenerator rankingFeedback]
  -[_WBSSearchFoundationFeedbackGenerator didBeginRanking]
  -[_WBSSearchFoundationFeedbackGenerator didEndRanking]
  -[_WBSSearchFoundationFeedbackGenerator didBeginSectionWithBundleIdentifier:]
  -[_WBSSearchFoundationFeedbackGenerator didAddItem:hidingOutrankedResults:hidingDuplicateResults:]
  -[_WBSSearchFoundationFeedbackGenerator removeAllSectionsAndItems]
  -[_WBSSearchFoundationFeedbackGenerator _commitPreviousSectionIfNecessary]


WBSParsecSearchUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSParsecSearchUtilities anyParsecSearchResult:fuzzyMatchesSuggestedSiteURLString:]


WBSParsecSearchResponse : NSObject /usr/lib/libc++.1.dylib
 @property  double maxAge
 @property  unsigned long sizeInBytes
 @property  NSArray *completionResultSets
 @property  WBSParsecSearchCompletionResultSet *bestCompletionResultSet
 @property  NSArray *statusCodesForCompletionResultSets

  // class methods
  +[WBSParsecSearchResponse searchResponseSchemaWithCache:]

  // instance methods
  -[WBSParsecSearchResponse sizeInBytes]
  -[WBSParsecSearchResponse maxAge]
  -[WBSParsecSearchResponse .cxx_destruct]
  -[WBSParsecSearchResponse initWithArray:responseHeaders:sizeInBytes:cache:]
  -[WBSParsecSearchResponse bestCompletionResultSet]
  -[WBSParsecSearchResponse statusCodesForCompletionResultSets]
  -[WBSParsecSearchResponse completionResultSets]


WBSKnownTrackerFilter : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[WBSKnownTrackerFilter getKnownTrackersFromHighLevelDomains:completionHandler:]
  -[WBSKnownTrackerFilter _createKnownTrackersDictionary]


WBSParsecSearchResultCache : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *allCachedQueries

  // instance methods
  -[WBSParsecSearchResultCache .cxx_destruct]
  -[WBSParsecSearchResultCache _shouldCacheResultSetForQueryMatching:]
  -[WBSParsecSearchResultCache _resultSet:isMatchForQuery:]
  -[WBSParsecSearchResultCache initWithCachedQueriesLimit:]
  -[WBSParsecSearchResultCache cacheResultSetsFromSearchResponse:]
  -[WBSParsecSearchResultCache cacheResultSet:]
  -[WBSParsecSearchResultCache bestResultSetForQuery:]
  -[WBSParsecSearchResultCache resultSetWithQuery:]
  -[WBSParsecSearchResultCache allCachedQueries]


WBSParsecResultSetPattern : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSParsecResultSetPattern _regularExpressionPatternForToken:]
  +[WBSParsecResultSetPattern _nextTokenInResultSetPattern:]
  +[WBSParsecResultSetPattern _regularExpressionPatternForResultSetPatternSuffix:]
  +[WBSParsecResultSetPattern _regularExpressionPatternFromResultSetPattern:]
  +[WBSParsecResultSetPattern patternWithString:]

  // instance methods
  -[WBSParsecResultSetPattern .cxx_destruct]
  -[WBSParsecResultSetPattern isMatchedByString:]
  -[WBSParsecResultSetPattern _initWithRegularExpression:]


WBSParsecSportsScoreSummary : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate
 @property  NSArray *images
 @property  NSString *subtitle
 @property  NSArray *scores

  // class methods
  +[WBSParsecSportsScoreSummary schema]

  // instance methods
  -[WBSParsecSportsScoreSummary scores]
  -[WBSParsecSportsScoreSummary .cxx_destruct]
  -[WBSParsecSportsScoreSummary images]
  -[WBSParsecSportsScoreSummary initWithDictionary:]
  -[WBSParsecSportsScoreSummary subtitle]


WBSParsecDSession : NSObject /usr/lib/libc++.1.dylib <PARSessionDelegate, WBSParsecSearchSession>
 @property  unsigned long currentQueryID
 @property  BOOL skipAutoFillDataUpdates
 @property  PARSession *parsecdSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSParsecSearchSessionDelegate> *delegate
 @property  WBSCompletionQuery *currentQuery
 @property  double uiScale
 @property  <WBSParsecFeedbackDispatcher> *feedbackDispatcher
 @property  WBSParsecABGroupManager *abGroupManager
 @property  BOOL abTestingEnabled

  // class methods
  +[WBSParsecDSession _updateAutoFillTLDsIfNeededForSession:completionHandler:]
  +[WBSParsecDSession _updateAutoFillCorrectionSetsIfNeededForSession:completionHandler:]
  +[WBSParsecDSession sharedDomainPolicyProvider]
  +[WBSParsecDSession sharedCorrectionsProcessor]
  +[WBSParsecDSession sharedPARSession]

  // instance methods
  -[WBSParsecDSession uiScale]
  -[WBSParsecDSession currentQueryID]
  -[WBSParsecDSession setCurrentQuery:]
  -[WBSParsecDSession currentQuery]
  -[WBSParsecDSession parsecdSession]
  -[WBSParsecDSession .cxx_destruct]
  -[WBSParsecDSession session:bag:didLoadWithError:]
  -[WBSParsecDSession _setCurrentQuery:withKeyboardInputType:]
  -[WBSParsecDSession setUIScale:]
  -[WBSParsecDSession setCurrentQueryID:]
  -[WBSParsecDSession setParsecdSession:]
  -[WBSParsecDSession skipAutoFillDataUpdates]
  -[WBSParsecDSession _didReceiveResponse:error:forTask:query:]
  -[WBSParsecDSession initWithParsecdSession:skipAutoFillDataUpdates:]
  -[WBSParsecDSession isABTestingEnabled]
  -[WBSParsecDSession feedbackDispatcher]
  -[WBSParsecDSession setDelegate:]
  -[WBSParsecDSession abGroupManager]
  -[WBSParsecDSession delegate]
  -[WBSParsecDSession _startUpdatingAutoFillDataInBackgroundIfPossibleForSession:]
  -[WBSParsecDSession _isABTestingEnabledOnProcessingQueue]


WBSParsecLegacySearchResult : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate <WBSParsecSearchResult, WBSCompletionListItem>
 @property  unsigned long legacyType
 @property  SFSearchResult *sfSearchResultValue
 @property  NSString *sectionBundleIdentifier
 @property  long long parsecQueryID
 @property  NSString *title
 @property  NSString *descriptionText
 @property  NSString *identifier
 @property  NSString *feedbackIdentifier
 @property  NSString *urlString
 @property  NSString *sectionHeader
 @property  NSString *completion
 @property  NSString *query
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  NSURL *appPunchoutURL
 @property  NSString *mediaKind
 @property  NSString *referrerForLoadingResult
 @property  WBSParsecActionButton *actionButton
 @property  MKMapItem *mapItem
 @property  WBSParsecImageRepresentation *icon
 @property  WBSParsecImageRepresentation *completionIcon
 @property  NSString *parsecDomainIdentifier
 @property  unsigned long engagementDestination
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSParsecLegacySearchResult schema]
  +[WBSParsecLegacySearchResult _resultClassForDictionary:]
  +[WBSParsecLegacySearchResult _specializedSchema]
  +[WBSParsecLegacySearchResult resultWithDictionary:]

  // instance methods
  -[WBSParsecLegacySearchResult completion]
  -[WBSParsecLegacySearchResult descriptionText]
  -[WBSParsecLegacySearchResult .cxx_destruct]
  -[WBSParsecLegacySearchResult query]
  -[WBSParsecLegacySearchResult icon]
  -[WBSParsecLegacySearchResult setSectionBundleIdentifier:]
  -[WBSParsecLegacySearchResult parsecQueryID]
  -[WBSParsecLegacySearchResult setParsecQueryID:]
  -[WBSParsecLegacySearchResult urlString]
  -[WBSParsecLegacySearchResult identifier]
  -[WBSParsecLegacySearchResult title]
  -[WBSParsecLegacySearchResult mediaKind]
  -[WBSParsecLegacySearchResult initWithDictionary:]
  -[WBSParsecLegacySearchResult mapItem]
  -[WBSParsecLegacySearchResult sectionBundleIdentifier]
  -[WBSParsecLegacySearchResult parsecDomainIdentifier]
  -[WBSParsecLegacySearchResult sectionHeader]
  -[WBSParsecLegacySearchResult actionButton]
  -[WBSParsecLegacySearchResult minimumRankOfTopHitToSuppressResult]
  -[WBSParsecLegacySearchResult completionIcon]
  -[WBSParsecLegacySearchResult sfSearchResultValue]
  -[WBSParsecLegacySearchResult engagementDestination]
  -[WBSParsecLegacySearchResult _glyphRepresentationsFromGlyphDictionaries:]
  -[WBSParsecLegacySearchResult canBecomeTopHitForQuery:]
  -[WBSParsecLegacySearchResult iconWithSession:]
  -[WBSParsecLegacySearchResult completionIconWithSession:]
  -[WBSParsecLegacySearchResult feedbackIdentifier]
  -[WBSParsecLegacySearchResult appPunchoutURL]
  -[WBSParsecLegacySearchResult referrerForLoadingResult]
  -[WBSParsecLegacySearchResult _glyphsFromGlyphRepresentations:withSession:]
  -[WBSParsecLegacySearchResult legacyType]
  -[WBSParsecLegacySearchResult setSfSearchResultValue:]


WBSParsecSearchResult : NSObject /usr/lib/libc++.1.dylib <WBSParsecSearchResult, WBSCompletionListItem, WBSParsecSearchGenericResult, WBSParsecSearchMapsResult, WBSParsecSearchSimpleResult, WBSParsecSearchSportsResult>
 @property  WBSParsecLegacySearchResult *legacySearchResult
 @property  long long type
 @property  long long subtype
 @property  NSString *title
 @property  NSString *descriptionText
 @property  NSString *identifier
 @property  NSString *feedbackIdentifier
 @property  NSString *urlString
 @property  NSString *sectionHeader
 @property  NSString *completion
 @property  NSString *query
 @property  unsigned long minimumRankOfTopHitToSuppressResult
 @property  NSURL *appPunchoutURL
 @property  NSString *mediaKind
 @property  NSString *referrerForLoadingResult
 @property  WBSParsecActionButton *actionButton
 @property  MKMapItem *mapItem
 @property  NSString *sectionBundleIdentifier
 @property  WBSParsecImageRepresentation *icon
 @property  WBSParsecImageRepresentation *completionIcon
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSNumber *titleMaximumLines
 @property  NSArray *descriptionRichTexts
 @property  NSString *footnote
 @property  NSString *secondaryTitle
 @property  WBSParsecImageRepresentation *secondaryTitleGlyph
 @property  WBSParsecAuxiliaryInfo *auxiliaryInfo
 @property  WBSParsecImageRepresentation *thumbnail
 @property  <WBSParsecSearchSession> *parsecSearchSession
 @property  WBSParsecSearchMapsResultFeedbackSender *mapsFeedbackSender
 @property  NSNumber *titleMaximumNumberOfLines
 @property  NSString *descriptionLeadInText
 @property  NSNumber *descriptionMaximumNumberOfLines
 @property  BOOL descriptionTextCanWrap
 @property  BOOL hasSingleLineDescriptionAndTitle
 @property  NSArray *images
 @property  NSArray *individualScores
 @property  NSString *subtitle
 @property  WBSParsecSearchSportsAttributionExtraCompletionItem *extraCompletionItem

  // class methods
  +[WBSParsecSearchResult typeForSFSearchResult:isOneLine:]
  +[WBSParsecSearchResult typeForSFSearchResult:]

  // instance methods
  -[WBSParsecSearchResult _result]
  -[WBSParsecSearchResult subtype]
  -[WBSParsecSearchResult thumbnail]
  -[WBSParsecSearchResult init]
  -[WBSParsecSearchResult completion]
  -[WBSParsecSearchResult descriptionText]
  -[WBSParsecSearchResult .cxx_destruct]
  -[WBSParsecSearchResult query]
  -[WBSParsecSearchResult icon]
  -[WBSParsecSearchResult images]
  -[WBSParsecSearchResult parsecQueryID]
  -[WBSParsecSearchResult setParsecQueryID:]
  -[WBSParsecSearchResult urlString]
  -[WBSParsecSearchResult identifier]
  -[WBSParsecSearchResult title]
  -[WBSParsecSearchResult mediaKind]
  -[WBSParsecSearchResult type]
  -[WBSParsecSearchResult footnote]
  -[WBSParsecSearchResult mapItem]
  -[WBSParsecSearchResult sectionBundleIdentifier]
  -[WBSParsecSearchResult parsecDomainIdentifier]
  -[WBSParsecSearchResult sectionHeader]
  -[WBSParsecSearchResult subtitle]
  -[WBSParsecSearchResult actionButton]
  -[WBSParsecSearchResult secondaryTitle]
  -[WBSParsecSearchResult minimumRankOfTopHitToSuppressResult]
  -[WBSParsecSearchResult completionIcon]
  -[WBSParsecSearchResult _mapsResult]
  -[WBSParsecSearchResult sfSearchResultValue]
  -[WBSParsecSearchResult engagementDestination]
  -[WBSParsecSearchResult parsecSearchSession]
  -[WBSParsecSearchResult setParsecSearchSession:]
  -[WBSParsecSearchResult mapsFeedbackSender]
  -[WBSParsecSearchResult setMapsFeedbackSender:]
  -[WBSParsecSearchResult titleGlyphWithSession:]
  -[WBSParsecSearchResult titleMaximumNumberOfLines]
  -[WBSParsecSearchResult descriptionLeadInText]
  -[WBSParsecSearchResult descriptionMaximumNumberOfLines]
  -[WBSParsecSearchResult descriptionTextCanWrap]
  -[WBSParsecSearchResult hasSingleLineDescriptionAndTitle]
  -[WBSParsecSearchResult canBecomeTopHitForQuery:]
  -[WBSParsecSearchResult iconWithSession:]
  -[WBSParsecSearchResult completionIconWithSession:]
  -[WBSParsecSearchResult feedbackIdentifier]
  -[WBSParsecSearchResult appPunchoutURL]
  -[WBSParsecSearchResult referrerForLoadingResult]
  -[WBSParsecSearchResult _genericResult]
  -[WBSParsecSearchResult titleMaximumLines]
  -[WBSParsecSearchResult descriptionRichTexts]
  -[WBSParsecSearchResult secondaryTitleGlyph]
  -[WBSParsecSearchResult auxiliaryInfo]
  -[WBSParsecSearchResult thumbnailWithSession:]
  -[WBSParsecSearchResult _resultPresentedInCard]
  -[WBSParsecSearchResult _simpleResult]
  -[WBSParsecSearchResult _sportsResult]
  -[WBSParsecSearchResult individualScores]
  -[WBSParsecSearchResult extraCompletionItem]
  -[WBSParsecSearchResult initWithLegacySearchResult:]
  -[WBSParsecSearchResult legacySearchResult]


WBSPhishingClassifierController : NSObject /usr/lib/libc++.1.dylib <WBSPhishingAssetControllerDelegate, WBSPhishingClassifier>
 @property  <WBSPhishingClassifierControllerDelegate> *delegate

  // class methods
  +[WBSPhishingClassifierController isDisabled]

  // instance methods
  -[WBSPhishingClassifierController .cxx_destruct]
  -[WBSPhishingClassifierController setDelegate:]
  -[WBSPhishingClassifierController delegate]
  -[WBSPhishingClassifierController classifyURL:options:completionHandler:]
  -[WBSPhishingClassifierController phishingAssetController:didFailModelInitialization:]
  -[WBSPhishingClassifierController phishingAssetController:didLoadImageClassifierModel:configuration:]
  -[WBSPhishingClassifierController phishingAssetController:didFailDownload:]
  -[WBSPhishingClassifierController phishingAssetController:didFailCatalogDownload:]
  -[WBSPhishingClassifierController phishingAssetController:didFailLoad:]
  -[WBSPhishingClassifierController initWithAssetController:history:crowdsourcedFeedbackAllowList:]
  -[WBSPhishingClassifierController classifyURL:image:completionHandler:]
  -[WBSPhishingClassifierController classifyURL:webView:completionHandler:]
  -[WBSPhishingClassifierController takeSnapshotForWebView:completionHandler:]
  -[WBSPhishingClassifierController setClassification:forURL:]
  -[WBSPhishingClassifierController initWithHistory:crowdsourcedFeedbackAllowList:]


WBSParsecHiddenResultInfo : NSObject /usr/lib/libc++.1.dylib
 @property  WBSParsecSearchResult *hiddenResult
 @property  <WBSCompletionListItem> *preferredCompletionListItem
 @property  long long reasonForHidingResult
 @property  unsigned long preferredCompletionListItemPositionInCompletionList
 @property  unsigned long preferredCompletionListItemPositionInFrequentlyVisitedSites
 @property  NSDictionary *feedbackDictionaryRepresentation

  // instance methods
  -[WBSParsecHiddenResultInfo .cxx_destruct]
  -[WBSParsecHiddenResultInfo initWithHiddenResult:preferredCompletionListItem:reason:]
  -[WBSParsecHiddenResultInfo feedbackDictionaryRepresentation]
  -[WBSParsecHiddenResultInfo hiddenResult]
  -[WBSParsecHiddenResultInfo preferredCompletionListItem]
  -[WBSParsecHiddenResultInfo reasonForHidingResult]
  -[WBSParsecHiddenResultInfo preferredCompletionListItemPositionInCompletionList]
  -[WBSParsecHiddenResultInfo setPreferredCompletionListItemPositionInCompletionList:]
  -[WBSParsecHiddenResultInfo preferredCompletionListItemPositionInFrequentlyVisitedSites]
  -[WBSParsecHiddenResultInfo setPreferredCompletionListItemPositionInFrequentlyVisitedSites:]


WBSParsecSearchSportsAttributionExtraCompletionItem : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate <WBSCompletionListItem>
 @property  NSString *label
 @property  NSURL *url
 @property  WBSParsecImageRepresentation *imageRepresentation
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSParsecSearchSportsAttributionExtraCompletionItem schema]

  // instance methods
  -[WBSParsecSearchSportsAttributionExtraCompletionItem imageRepresentation]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem url]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem .cxx_destruct]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem label]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem parsecQueryID]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem setParsecQueryID:]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem initWithDictionary:]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem parsecDomainIdentifier]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem sfSearchResultValue]
  -[WBSParsecSearchSportsAttributionExtraCompletionItem engagementDestination]


WBSParsecPunchout : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate
 @property  NSString *name
 @property  NSString *bundleID
 @property  NSString *punchoutLabel
 @property  NSURL *punchoutURL
 @property  NSURL *installURL

  // class methods
  +[WBSParsecPunchout schema]

  // instance methods
  -[WBSParsecPunchout .cxx_destruct]
  -[WBSParsecPunchout name]
  -[WBSParsecPunchout punchoutLabel]
  -[WBSParsecPunchout initWithDictionary:]
  -[WBSParsecPunchout bundleID]
  -[WBSParsecPunchout punchoutURL]
  -[WBSParsecPunchout installURL]


WBSParsecSearchMoviesResult : WBSParsecLegacySearchResult
 @property  NSString *descriptionLeadInText

  // instance methods
  -[WBSParsecSearchMoviesResult .cxx_destruct]
  -[WBSParsecSearchMoviesResult initWithDictionary:]
  -[WBSParsecSearchMoviesResult descriptionLeadInText]
  -[WBSParsecSearchMoviesResult postersWithSession:]


WBSParsecDFeedbackDispatcher : NSObject /usr/lib/libc++.1.dylib <WBSParsecFeedbackDispatcher, WBSParsecGlobalFeedbackDispatcher>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSParsecDFeedbackDispatcher initWithSession:]
  -[WBSParsecDFeedbackDispatcher _takeStartSearchFeedbackForSearchOfType:forQuery:]
  -[WBSParsecDFeedbackDispatcher userTypedURLDirectlyForQuery:]
  -[WBSParsecDFeedbackDispatcher sendWindowMiniaturizeByKeyboardFeedback]
  -[WBSParsecDFeedbackDispatcher sendAppQuitFeedback]
  -[WBSParsecDFeedbackDispatcher flush]
  -[WBSParsecDFeedbackDispatcher sendMapsPlaceCardEngagementFeedbackOfType:forQueryID:]
  -[WBSParsecDFeedbackDispatcher _setStartSearchFeedback:forSearchOfType:withQuery:]
  -[WBSParsecDFeedbackDispatcher userTypedGoToSearch:endpoint:forQueryID:]
  -[WBSParsecDFeedbackDispatcher .cxx_destruct]
  -[WBSParsecDFeedbackDispatcher sendWindowCloseByKeyboardFeedback]
  -[WBSParsecDFeedbackDispatcher didBeginSearchOfType:withQuery:endpoint:]
  -[WBSParsecDFeedbackDispatcher postFeedback:forQueryID:]
  -[WBSParsecDFeedbackDispatcher sendClearInputFeedbackWithTriggerEvent:forQueryID:]
  -[WBSParsecDFeedbackDispatcher userDidTypeKey:]
  -[WBSParsecDFeedbackDispatcher didBeginSearchOfType:withQuery:urlString:headers:endpoint:]
  -[WBSParsecDFeedbackDispatcher didReceiveLocalResultsForQuery:]
  -[WBSParsecDFeedbackDispatcher sendNewTabFeedback]
  -[WBSParsecDFeedbackDispatcher userDidEngageWithCompletionListItem:onActionButton:method:doesMatchSiriSuggestion:]
  -[WBSParsecDFeedbackDispatcher _postFeedbackOnFeedbackQueue:forQueryID:]
  -[WBSParsecDFeedbackDispatcher sendWindowCloseByMouseFeedback]
  -[WBSParsecDFeedbackDispatcher userDidCancelSession:]
  -[WBSParsecDFeedbackDispatcher userDidCancelSession]
  -[WBSParsecDFeedbackDispatcher sendAppLostFocusFeedback]
  -[WBSParsecDFeedbackDispatcher sendSmartSearchFieldClickedFeedbackWithReaderAvailable:]
  -[WBSParsecDFeedbackDispatcher didReceiveParsecResultsAfterTimeout:]
  -[WBSParsecDFeedbackDispatcher didRankSections:blendingDuration:feedbackForHiddenAndDuplicateResults:forQueryID:]
  -[WBSParsecDFeedbackDispatcher sendAppLaunchFeedback]
  -[WBSParsecDFeedbackDispatcher searchViewDisappearedBecauseOfEvent:forQueryID:]
  -[WBSParsecDFeedbackDispatcher didDisplayCompletionListItems:forQuery:forEvent:]
  -[WBSParsecDFeedbackDispatcher sendCrowdsourcedAutoFillFeedback:forQueryID:]
  -[WBSParsecDFeedbackDispatcher didGenerateCompletionListItemsWithRankingObserver:forQueryID:]
  -[WBSParsecDFeedbackDispatcher searchViewAppearedBecauseOfEvent:isSafariReaderAvailable:forQueryID:]
  -[WBSParsecDFeedbackDispatcher userDidEngageWithCompletionListItem:onActionButton:method:]
  -[WBSParsecDFeedbackDispatcher sendWindowMiniaturizeByMouseFeedback]
  -[WBSParsecDFeedbackDispatcher searchViewAppearedBecauseOfEvent:forQueryID:]
  -[WBSParsecDFeedbackDispatcher sendNewWindowFeedback]
  -[WBSParsecDFeedbackDispatcher _customFeedbackOfType:JSONDictionary:]
  -[WBSParsecDFeedbackDispatcher didReceiveWebSuggestionsForQuery:fromSearchProvider:responseSize:statusCode:networkTimingData:]


WBSTrackingCapableFirstParty : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domain

  // instance methods
  -[WBSTrackingCapableFirstParty initWithDomain:]
  -[WBSTrackingCapableFirstParty init]
  -[WBSTrackingCapableFirstParty domain]
  -[WBSTrackingCapableFirstParty .cxx_destruct]


WBSTrackedFirstParty : WBSTrackingCapableFirstParty
 @property  NSArray *trackers

  // instance methods
  -[WBSTrackedFirstParty initWithDomain:]
  -[WBSTrackedFirstParty .cxx_destruct]
  -[WBSTrackedFirstParty trackers]
  -[WBSTrackedFirstParty initWithDomain:trackers:]
  -[WBSTrackedFirstParty setTrackers:]


WBSTrackingCapableThirdParty : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *domain
 @property  NSArray *firstParties

  // instance methods
  -[WBSTrackingCapableThirdParty init]
  -[WBSTrackingCapableThirdParty domain]
  -[WBSTrackingCapableThirdParty .cxx_destruct]
  -[WBSTrackingCapableThirdParty firstParties]
  -[WBSTrackingCapableThirdParty isEqual:]
  -[WBSTrackingCapableThirdParty initWithDomain:firstParties:]


WBSKnownTrackingThirdParty : WBSTrackingCapableThirdParty
 @property  NSString *ownerName

  // instance methods
  -[WBSKnownTrackingThirdParty .cxx_destruct]
  -[WBSKnownTrackingThirdParty setOwnerName:]
  -[WBSKnownTrackingThirdParty ownerName]


WBSSearchProvider : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSString *shortName
 @property  WBSOpenSearchURLTemplate *searchURLTemplate
 @property  WBSOpenSearchURLTemplate *safeSearchURLTemplate
 @property  NSDictionary *safeSearchURLQueryParameters
 @property  WBSOpenSearchURLTemplate *suggestionsURLTemplate
 @property  NSArray *hostSuffixes
 @property  NSArray *pathPrefixes
 @property  BOOL usesSearchTermsFromFragment
 @property  NSString *groupIdentifierQueryStringKey

  // class methods
  +[WBSSearchProvider supportsSecureCoding]

  // instance methods
  -[WBSSearchProvider copyWithZone:]
  -[WBSSearchProvider shortName]
  -[WBSSearchProvider searchShouldUseSafeSearchTemplate]
  -[WBSSearchProvider safeSearchURLQueryParameters]
  -[WBSSearchProvider safeSearchURLForSearchURL:]
  -[WBSSearchProvider hostSuffixes]
  -[WBSSearchProvider pathPrefixes]
  -[WBSSearchProvider usesSearchTermsFromFragment]
  -[WBSSearchProvider suggestionsURLTemplate]
  -[WBSSearchProvider .cxx_destruct]
  -[WBSSearchProvider initWithShortName:searchURLTemplate:safeSearchURLTemplate:safeSearchURLQueryParameters:usesSearchTermsFromFragment:groupIdentifierQueryStringKey:suggestionsURLTemplate:hostSuffixes:pathPrefixes:]
  -[WBSSearchProvider userVisibleQueryFromSearchURL:]
  -[WBSSearchProvider userVisibleQueryFromSearchURL:allowQueryThatLooksLikeURL:]
  -[WBSSearchProvider suggestionsURLForUserTypedString:]
  -[WBSSearchProvider safeSearchURLTemplate]
  -[WBSSearchProvider encodeWithCoder:]
  -[WBSSearchProvider _urlByEnsuringQueryItemInURL:percentEncodedQueryItemKey:percentEncodedQueryItemValue:]
  -[WBSSearchProvider urlByIncorporatingGroupIdentifier:ifIsValidSearchResultsURL:]
  -[WBSSearchProvider searchURLTemplate]
  -[WBSSearchProvider searchURLForUserTypedString:]
  -[WBSSearchProvider urlAttributingToSafariIfValidSearchURL:]
  -[WBSSearchProvider urlIsValidSearch:]
  -[WBSSearchProvider groupIdentifierQueryStringKey]
  -[WBSSearchProvider initWithCoder:]


WBSParsecFormattedText : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate
 @property  NSString *text
 @property  BOOL emphasized
 @property  WBSParsecImageRepresentation *glyphRepresentation
 @property  NSNumber *spaceBeforeInPoints
 @property  NSNumber *spaceAfterInPoints

  // class methods
  +[WBSParsecFormattedText schema]

  // instance methods
  -[WBSParsecFormattedText text]
  -[WBSParsecFormattedText .cxx_destruct]
  -[WBSParsecFormattedText initWithDictionary:]
  -[WBSParsecFormattedText isEmphasized]
  -[WBSParsecFormattedText isEqual:]
  -[WBSParsecFormattedText spaceAfterInPoints]
  -[WBSParsecFormattedText spaceBeforeInPoints]
  -[WBSParsecFormattedText glyphWithSession:]
  -[WBSParsecFormattedText glyphRepresentation]


WBSParsecSubscriptionManager : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *subscriptionDictionaries
 @property  BOOL needsUpdate

  // class methods
  +[WBSParsecSubscriptionManager sharedManager]

  // instance methods
  -[WBSParsecSubscriptionManager init]
  -[WBSParsecSubscriptionManager .cxx_destruct]
  -[WBSParsecSubscriptionManager _init]
  -[WBSParsecSubscriptionManager needsUpdate]
  -[WBSParsecSubscriptionManager _updateThirdPartySubscriptionsWithBundleIdentifierWhitelist:domainWhitelist:maximumExpirationLimit:]
  -[WBSParsecSubscriptionManager subscriptionDictionaries]
  -[WBSParsecSubscriptionManager updateSubscriptionsWithBundleIdentifierWhitelist:domainWhitelist:maximumExpirationLimit:]
  -[WBSParsecSubscriptionManager registerSubscriptionServiceForURL:withSubscriptionInfo:]
  -[WBSParsecSubscriptionManager removeSubscriptionsAddedAfterDate:]


WBSParsecSearchMapsResultFeedbackSender : NSObject /usr/lib/libc++.1.dylib <_MKPlaceViewControllerFeedbackDelegate>
 @property  <WBSParsecSearchResultPresentedInCard><WBSCompletionListItem> *searchResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WBSParsecSearchMapsResultFeedbackSender searchResult]
  -[WBSParsecSearchMapsResultFeedbackSender .cxx_destruct]
  -[WBSParsecSearchMapsResultFeedbackSender placeViewController:shouldLogFeedbackOfType:]
  -[WBSParsecSearchMapsResultFeedbackSender initWithSearchResult:]


WBSPhishingURLClassifierCrowdsourcedFeedbackAllowListAdapter : NSObject /usr/lib/libc++.1.dylib <WBSPhishingURLClassifier>
  // instance methods
  -[WBSPhishingURLClassifierCrowdsourcedFeedbackAllowListAdapter .cxx_destruct]
  -[WBSPhishingURLClassifierCrowdsourcedFeedbackAllowListAdapter classifyURL:options:completionHandler:]
  -[WBSPhishingURLClassifierCrowdsourcedFeedbackAllowListAdapter initWithCrowdsourcedFeedbackAllowList:]


WBSParsecSportsImage : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate
 @property  long long alignment
 @property  WBSParsecImageRepresentation *imageRepresentation
 @property  NSString *label
 @property  NSString *name

  // class methods
  +[WBSParsecSportsImage schema]

  // instance methods
  -[WBSParsecSportsImage imageRepresentation]
  -[WBSParsecSportsImage .cxx_destruct]
  -[WBSParsecSportsImage name]
  -[WBSParsecSportsImage alignment]
  -[WBSParsecSportsImage label]
  -[WBSParsecSportsImage initWithDictionary:]


WBSParsecSearchMapsResult : WBSParsecLegacySearchResult <WBSParsecSearchMapsResult>
 @property  <WBSParsecSearchSession> *parsecSearchSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *parsecDomainIdentifier
 @property  SFSearchResult *sfSearchResultValue
 @property  unsigned long engagementDestination
 @property  long long parsecQueryID
 @property  NSString *lastSearchQuery
 @property  WBSQuerySuggestion *siriSuggestion
 @property  WBSParsecSearchMapsResultFeedbackSender *mapsFeedbackSender

  // instance methods
  -[WBSParsecSearchMapsResult .cxx_destruct]
  -[WBSParsecSearchMapsResult initWithDictionary:]
  -[WBSParsecSearchMapsResult parsecSearchSession]
  -[WBSParsecSearchMapsResult setParsecSearchSession:]
  -[WBSParsecSearchMapsResult mapsFeedbackSender]
  -[WBSParsecSearchMapsResult setMapsFeedbackSender:]


WBSParsecSearchSportsResult : WBSParsecLegacySearchResult <WBSParsecSearchSportsResult>
 @property  NSArray *images
 @property  NSArray *individualScores
 @property  NSString *subtitle
 @property  WBSParsecSearchSportsAttributionExtraCompletionItem *extraCompletionItem

  // class methods
  +[WBSParsecSearchSportsResult _specializedSchema]

  // instance methods
  -[WBSParsecSearchSportsResult .cxx_destruct]
  -[WBSParsecSearchSportsResult images]
  -[WBSParsecSearchSportsResult initWithDictionary:]
  -[WBSParsecSearchSportsResult subtitle]
  -[WBSParsecSearchSportsResult individualScores]
  -[WBSParsecSearchSportsResult extraCompletionItem]


WBSParsecSearchGenericResult : WBSParsecLegacySearchResult <WBSParsecSearchGenericResult>
 @property  NSNumber *titleMaximumLines
 @property  NSArray *descriptionRichTexts
 @property  NSString *footnote
 @property  NSString *secondaryTitle
 @property  WBSParsecImageRepresentation *secondaryTitleGlyph
 @property  WBSParsecAuxiliaryInfo *auxiliaryInfo
 @property  WBSParsecImageRepresentation *thumbnail

  // class methods
  +[WBSParsecSearchGenericResult _specializedSchema]

  // instance methods
  -[WBSParsecSearchGenericResult thumbnail]
  -[WBSParsecSearchGenericResult .cxx_destruct]
  -[WBSParsecSearchGenericResult initWithDictionary:]
  -[WBSParsecSearchGenericResult footnote]
  -[WBSParsecSearchGenericResult actionButton]
  -[WBSParsecSearchGenericResult secondaryTitle]
  -[WBSParsecSearchGenericResult titleMaximumLines]
  -[WBSParsecSearchGenericResult descriptionRichTexts]
  -[WBSParsecSearchGenericResult secondaryTitleGlyph]
  -[WBSParsecSearchGenericResult auxiliaryInfo]
  -[WBSParsecSearchGenericResult thumbnailWithSession:]


WBSPhishingImageClassifierModel : NSObject /usr/lib/libc++.1.dylib <WBSPhishingImageClassifierModelProtocol>
  // class methods
  +[WBSPhishingImageClassifierModel configureSnapshotConfiguration:cropAndScaleOption:webViewBounds:modelInputSize:]

  // instance methods
  -[WBSPhishingImageClassifierModel .cxx_destruct]
  -[WBSPhishingImageClassifierModel initWithURL:cropAndScaleOption:imageInputSize:error:]
  -[WBSPhishingImageClassifierModel configureSnapshotConfiguration:webViewBounds:]
  -[WBSPhishingImageClassifierModel classifyImage:enumerationBlock:error:]
  -[WBSPhishingImageClassifierModel _loadModelIfNecessary]
  -[WBSPhishingImageClassifierModel _createClassifierRequest]
  -[WBSPhishingImageClassifierModel _createClassifierRequestHandlerWithImage:]


WBSParsecSearchCompletionResultSet : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *status
 @property  NSString *errorCodeString
 @property  NSString *completionString
 @property  NSString *prefix
 @property  NSString *feedbackQueryIdentifier
 @property  NSArray *results
 @property  double maxAge
 @property  double completionScore

  // class methods
  +[WBSParsecSearchCompletionResultSet resultSetSchemaWithCache:]
  +[WBSParsecSearchCompletionResultSet resultSetWithDictionary:cache:]

  // instance methods
  -[WBSParsecSearchCompletionResultSet results]
  -[WBSParsecSearchCompletionResultSet maxAge]
  -[WBSParsecSearchCompletionResultSet .cxx_destruct]
  -[WBSParsecSearchCompletionResultSet completionString]
  -[WBSParsecSearchCompletionResultSet setStatus:]
  -[WBSParsecSearchCompletionResultSet prefix]
  -[WBSParsecSearchCompletionResultSet status]
  -[WBSParsecSearchCompletionResultSet completionScore]
  -[WBSParsecSearchCompletionResultSet enumeratePatternsUsingBlock:]
  -[WBSParsecSearchCompletionResultSet _initWithDictionary:cache:]
  -[WBSParsecSearchCompletionResultSet errorCodeString]
  -[WBSParsecSearchCompletionResultSet feedbackQueryIdentifier]


WBSTranslationErrorController : NSObject /usr/lib/libc++.1.dylib
 @property  <WBSTranslationErrorControllerDelegate> *delegate

  // instance methods
  -[WBSTranslationErrorController init]
  -[WBSTranslationErrorController .cxx_destruct]
  -[WBSTranslationErrorController setDelegate:]
  -[WBSTranslationErrorController invalidate]
  -[WBSTranslationErrorController delegate]
  -[WBSTranslationErrorController _overriddenThresholdForError:]
  -[WBSTranslationErrorController addError:]


WBSParsecRichText : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate
 @property  NSString *text
 @property  NSNumber *maximumLines
 @property  NSArray *formattedTextList
 @property  NSArray *moreGlyphRepresentations
 @property  NSString *contentAdvisoryString

  // class methods
  +[WBSParsecRichText schema]

  // instance methods
  -[WBSParsecRichText text]
  -[WBSParsecRichText .cxx_destruct]
  -[WBSParsecRichText initWithDictionary:]
  -[WBSParsecRichText maximumLines]
  -[WBSParsecRichText isEqual:]
  -[WBSParsecRichText formattedTextList]
  -[WBSParsecRichText contentAdvisoryImageWithSession:]
  -[WBSParsecRichText moreGlyphsWithSession:]
  -[WBSParsecRichText moreGlyphRepresentations]
  -[WBSParsecRichText contentAdvisoryString]


WBSParsecActionButton : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate
 @property  NSString *type
 @property  NSString *label
 @property  NSString *labelAlignment
 @property  NSString *itunesLabel
 @property  NSString *offerType
 @property  NSString *completion
 @property  NSString *itunesCompletion
 @property  NSString *mediaKind
 @property  NSArray *itunesContentIdentifiers
 @property  BOOL forStreamingResult
 @property  BOOL forAppleMusicResult
 @property  BOOL overlay
 @property  WBSParsecImageRepresentation *baseIcon
 @property  WBSParsecImageRepresentation *icon
 @property  NSString *punchoutAppName
 @property  NSString *punchoutAppBundleIdentifier
 @property  NSURL *punchoutURL

  // class methods
  +[WBSParsecActionButton schema]

  // instance methods
  -[WBSParsecActionButton completion]
  -[WBSParsecActionButton isOverlay]
  -[WBSParsecActionButton .cxx_destruct]
  -[WBSParsecActionButton icon]
  -[WBSParsecActionButton label]
  -[WBSParsecActionButton mediaKind]
  -[WBSParsecActionButton type]
  -[WBSParsecActionButton offerType]
  -[WBSParsecActionButton baseIcon]
  -[WBSParsecActionButton punchoutURL]
  -[WBSParsecActionButton initWithDictionary:mediaKind:]
  -[WBSParsecActionButton isForAppleMusicResult]
  -[WBSParsecActionButton labelAlignment]
  -[WBSParsecActionButton itunesLabel]
  -[WBSParsecActionButton itunesCompletion]
  -[WBSParsecActionButton itunesContentIdentifiers]
  -[WBSParsecActionButton isForStreamingResult]
  -[WBSParsecActionButton punchoutAppName]
  -[WBSParsecActionButton punchoutAppBundleIdentifier]


WBSParsecImageRepresentation : WBSParsecModel /System/Library/Frameworks/Accelerate.framework/Accelerate
 @property  NSNumber *baselineOffset
 @property  NSNumber *roundCornerRadius

  // class methods
  +[WBSParsecImageRepresentation schema]
  +[WBSParsecImageRepresentation _bagImageDataCache]

  // instance methods
  -[WBSParsecImageRepresentation .cxx_destruct]
  -[WBSParsecImageRepresentation initWithJSONObject:]
  -[WBSParsecImageRepresentation isEqual:]
  -[WBSParsecImageRepresentation _imageWithData:]
  -[WBSParsecImageRepresentation baselineOffset]
  -[WBSParsecImageRepresentation imageWithSession:]
  -[WBSParsecImageRepresentation _fetchImageData]
  -[WBSParsecImageRepresentation imageWithScaleFactor:]
  -[WBSParsecImageRepresentation _templateImageWithImage:]
  -[WBSParsecImageRepresentation _fetchImageDataUsingBlock:]
  -[WBSParsecImageRepresentation test_data]
  -[WBSParsecImageRepresentation test_identifier]
  -[WBSParsecImageRepresentation test_imageURLString]
  -[WBSParsecImageRepresentation test_isTemplate]
  -[WBSParsecImageRepresentation roundCornerRadius]


WBSForYouRecentParsecResultsManager : WBSForYouRecommendationMediatorDataSource
 @property  NSArray *recentRecommendations

  // class methods
  +[WBSForYouRecentParsecResultsManager recommendationsMatchingTopic:fromArray:]

  // instance methods
  -[WBSForYouRecentParsecResultsManager _cacheEnsuringExistence]
  -[WBSForYouRecentParsecResultsManager .cxx_destruct]
  -[WBSForYouRecentParsecResultsManager _bestAcceptableImageForSFResult:]
  -[WBSForYouRecentParsecResultsManager recentRecommendations]
  -[WBSForYouRecentParsecResultsManager _hasPermissibleResultTypeForResult:]
  -[WBSForYouRecentParsecResultsManager appendResultsIfApplicable:withDelayedExistenceCheck:]
  -[WBSForYouRecentParsecResultsManager retrieveRecommendationsMatchingTopic:withCompletionHandler:]
  -[WBSForYouRecentParsecResultsManager _createInternalQueueIfNecessary]
  -[WBSForYouRecentParsecResultsManager clearAllResults]
  -[WBSForYouRecentParsecResultsManager appendResultsIfApplicable:]


WBSImageFetchingURLSessionTaskManager : NSObject /usr/lib/libc++.1.dylib <NSURLSessionTaskDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSImageFetchingURLSessionTaskManager sharedManager]

  // instance methods
  -[WBSImageFetchingURLSessionTaskManager URLSession:task:didReceiveChallenge:completionHandler:]


WBSImageUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSImageUtilities squareThumbnailImageFromImage:thumbnailWidthInPixels:]
  +[WBSImageUtilities imageSizeScalingSize:proportionallyToFitSize:]
  +[WBSImageUtilities resizedImage:withSize:]
  +[WBSImageUtilities flatImage:withColor:]
  +[WBSImageUtilities handoffIconForDeviceType:]
  +[WBSImageUtilities _pixelDataForImage:]
  +[WBSImageUtilities image:isEqualToImage:]


WBSSiteIconKeyColorExtractor : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSSiteIconKeyColorExtractor keyColorForIcon:]
  +[WBSSiteIconKeyColorExtractor _createRGBAPixelBufferFromImage:]


WBSMetadataExtractor : NSObject /usr/lib/libc++.1.dylib
 @property  WKWebProcessPlugInFrame *webProcessPlugInFrame
 @property  JSContext *context

  // class methods
  +[WBSMetadataExtractor metadataExtractorScriptSource]

  // instance methods
  -[WBSMetadataExtractor context]
  -[WBSMetadataExtractor dealloc]
  -[WBSMetadataExtractor .cxx_destruct]
  -[WBSMetadataExtractor appleTouchIconURLs]
  -[WBSMetadataExtractor faviconURLs]
  -[WBSMetadataExtractor initWithWebProcessPlugInFrame:]
  -[WBSMetadataExtractor initWithWebProcessPlugInFrame:useNormalWorld:]
  -[WBSMetadataExtractor firstElementForSelector:]
  -[WBSMetadataExtractor makeContext]
  -[WBSMetadataExtractor _resultForInvokingFunctionWithName:]
  -[WBSMetadataExtractor _colorFromColorComponents:]
  -[WBSMetadataExtractor getTemplateIconURL:andColor:]
  -[WBSMetadataExtractor webProcessPlugInFrame]


WBSPhishingURLClassifierConfigurationOverrideAdapter : NSObject /usr/lib/libc++.1.dylib <WBSPhishingURLClassifier>
 @property  WBSPhishingConfiguration *configuration

  // instance methods
  -[WBSPhishingURLClassifierConfigurationOverrideAdapter .cxx_destruct]
  -[WBSPhishingURLClassifierConfigurationOverrideAdapter configuration]
  -[WBSPhishingURLClassifierConfigurationOverrideAdapter setConfiguration:]
  -[WBSPhishingURLClassifierConfigurationOverrideAdapter classifyURL:options:completionHandler:]


WBSPhishingURLClassifierCache : NSObject /usr/lib/libc++.1.dylib <WBSPhishingURLClassifier>
 @property  <WBSPhishingURLClassifier> *urlClassifier

  // instance methods
  -[WBSPhishingURLClassifierCache .cxx_destruct]
  -[WBSPhishingURLClassifierCache clearCache]
  -[WBSPhishingURLClassifierCache classifyURL:options:completionHandler:]
  -[WBSPhishingURLClassifierCache urlClassifier]
  -[WBSPhishingURLClassifierCache initWithURLClassifier:]
  -[WBSPhishingURLClassifierCache cacheClassification:forURL:]


WBSURLSpoofingMitigator : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL UIShouldReflectCommittedURLInsteadOfCurrentURL
 @property  long long navigationSource

  // class methods
  +[WBSURLSpoofingMitigator automaticallyNotifiesObserversOfUIShouldReflectCommittedURLInsteadOfCurrentURL]

  // instance methods
  -[WBSURLSpoofingMitigator willStartNewBrowserChromeInitiatedNavigation]
  -[WBSURLSpoofingMitigator didStartProvisionalNavigationWithUserInitiatedAction:]
  -[WBSURLSpoofingMitigator UIShouldReflectCommittedURLInsteadOfCurrentURL]
  -[WBSURLSpoofingMitigator .cxx_destruct]
  -[WBSURLSpoofingMitigator _setUIShouldReflectCommittedURLInsteadOfCurrentURL:]
  -[WBSURLSpoofingMitigator didFailProvisionalNavigationWithError:]
  -[WBSURLSpoofingMitigator didCommitNavigation]
  -[WBSURLSpoofingMitigator setNavigationSource:]
  -[WBSURLSpoofingMitigator navigationSource]
  -[WBSURLSpoofingMitigator _determineIfPageIsTryingToSpoofAddressFieldWhenInterruptingProvisionalNavigation]
  -[WBSURLSpoofingMitigator _stopTrackingInterruptedProvisionalNavigations]


WBSTranslationDataCollectionManager : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSTranslationDataCollectionManager _currentLanguage]
  +[WBSTranslationDataCollectionManager _sendDomainDataToDifferentialPrivacy:withKey:]
  +[WBSTranslationDataCollectionManager _sendDataToDifferentialPrivacyWithKey:value:]
  +[WBSTranslationDataCollectionManager _sendNormalizedHighLevelDomainDataToDifferentialPrivacy:withKey:]
  +[WBSTranslationDataCollectionManager _translationDomainFromURLString:]
  +[WBSTranslationDataCollectionManager sendUserMayWantTranslationURLDataToDifferentialPrivacyIfNecessary:]
  +[WBSTranslationDataCollectionManager sendUserPerformedTranslationURLDataToDifferentialPrivacyIfNecessary:]


WBSTranslationInformation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *urlString
 @property  NSString *sourceLanguage
 @property  NSString *targetLanguage

  // instance methods
  -[WBSTranslationInformation init]
  -[WBSTranslationInformation .cxx_destruct]
  -[WBSTranslationInformation sourceLanguage]
  -[WBSTranslationInformation urlString]
  -[WBSTranslationInformation isEqual:]
  -[WBSTranslationInformation targetLanguage]
  -[WBSTranslationInformation initWithURLString:sourceLanguage:targetLanguage:]


WBSTranslationURLParser : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[WBSTranslationURLParser parseURL:forProvider:]
  +[WBSTranslationURLParser _normalizeSourceLanguage:targetLanguage:forProvider:]
  +[WBSTranslationURLParser _parseURL:sourceLanguageKey:targetLanguageKey:urlKey:provider:]


WBSTranslationWebpageContentExtractor : NSObject /usr/lib/libc++.1.dylib <_WKTextManipulationDelegate, WBSTranslationContentExtracting, WBSTranslationContentFilling>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WBSTranslationContentExtractionDelegate> *extractionDelegate
 @property  <WBSTranslationContentFillingDelegate> *fillingDelegate

  // instance methods
  -[WBSTranslationWebpageContentExtractor .cxx_destruct]
  -[WBSTranslationWebpageContentExtractor _webView:didFindTextManipulationItems:]
  -[WBSTranslationWebpageContentExtractor _webView:didFindTextManipulationItem:]
  -[WBSTranslationWebpageContentExtractor initWithWebView:]
  -[WBSTranslationWebpageContentExtractor _textManipulationConfiguration]
  -[WBSTranslationWebpageContentExtractor _scheduleReplaceItemsWithTargetLocale:]
  -[WBSTranslationWebpageContentExtractor _updateHTMLLanguageAttributesIfNeeded:]
  -[WBSTranslationWebpageContentExtractor _replaceItemsWithSignpostID:]
  -[WBSTranslationWebpageContentExtractor beginExtractingContent]
  -[WBSTranslationWebpageContentExtractor stopExtractingContent]
  -[WBSTranslationWebpageContentExtractor extractionDelegate]
  -[WBSTranslationWebpageContentExtractor setExtractionDelegate:]
  -[WBSTranslationWebpageContentExtractor replaceExtractedContent:withTranslatedContent:targetLocale:]
  -[WBSTranslationWebpageContentExtractor fillingDelegate]
  -[WBSTranslationWebpageContentExtractor setFillingDelegate:]


WBSTranslationContext : NSObject /usr/lib/libc++.1.dylib <WBSTranslationErrorControllerDelegate, WBSFluidProgressStateSource, WBSTranslationContentExtractionDelegate, WBSTranslationContentFillingDelegate, WBSTranslationContextTranslating>
 @property  NSArray *allowedTargetLocaleIdentifiers
 @property  NSArray *availableTargetLocaleIdentifiers
 @property  BOOL shouldOfferTranslationUI
 @property  unsigned long detectionNotificationLevel
 @property  BOOL hasStartedTranslating
 @property  unsigned long state
 @property  NSString *webpageLocale
 @property  WBSFluidProgressController *fluidProgressController
 @property  <WBSTranslationContextDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WBSTranslationContext translationContextWithWebView:delegate:]

  // instance methods
  -[WBSTranslationContext owningWebViewDidCommitNavigationWithURL:completionHandler:]
  -[WBSTranslationContext expectedOrCurrentURL]
  -[WBSTranslationContext setWebpageLocaleWithExtractedTextSamples:url:completionHandler:]
  -[WBSTranslationContext progressState]
  -[WBSTranslationContext .cxx_destruct]
  -[WBSTranslationContext owningWebViewDidDecidePolicy:forNavigationAction:currentBackForwardListItem:]
  -[WBSTranslationContext owningWebViewWillNavigateToBackForwardListItem:inPageCache:]
  -[WBSTranslationContext clearFluidProgressState]
  -[WBSTranslationContext hasFailedURL]
  -[WBSTranslationContext reloadPageInOriginalLanguage]
  -[WBSTranslationContext generateDiagnosticDataForPurpose:completionHandler:]
  -[WBSTranslationContext hasStartedTranslating]
  -[WBSTranslationContext _currentSnapshot]
  -[WBSTranslationContext createFluidProgressState]
  -[WBSTranslationContext availableTargetLocaleIdentifiers]
  -[WBSTranslationContext estimatedProgress]
  -[WBSTranslationContext state]
  -[WBSTranslationContext requestTranslatingWebpageToLocale:completionHandler:]
  -[WBSTranslationContext validateTargetLocale:completionHandler:]
  -[WBSTranslationContext delegate]
  -[WBSTranslationContext setFluidProgressController:]
  -[WBSTranslationContext fluidProgressController]
  -[WBSTranslationContext _currentSession]
  -[WBSTranslationContext userPreferredTargetLocales]
  -[WBSTranslationContext isTranslationSupportedForCurrentRegionWithCompletionHandler:]
  -[WBSTranslationContext supportedLocalePairsWithCompletionHandler:]
  -[WBSTranslationContext webpageLocale]
  -[WBSTranslationContext errorController:didReachThresholdForError:]
  -[WBSTranslationContext contentExtractorDidFinishExtractingInitialContent:]
  -[WBSTranslationContext contentFiller:didCompleteFillingItem:withError:]
  -[WBSTranslationContext contentExtractor:didExtractContent:]
  -[WBSTranslationContext _updateCachedAPISupportedValues]
  -[WBSTranslationContext _availableTargetLocaleIdentifiersConsideringCurrentWebpageLocale:]
  -[WBSTranslationContext hideMessageInUnifiedField]
  -[WBSTranslationContext isTranslationEnabled]
  -[WBSTranslationContext _setState:usingLock:]
  -[WBSTranslationContext _requestTranslatingWebpageToLocale:requestType:completionHandler:]
  -[WBSTranslationContext detectionNotificationLevel]
  -[WBSTranslationContext _reportLanguageDetectionAnalyticsForWebpageLocale:notificationLevel:]
  -[WBSTranslationContext dominantLocaleForTextSamples:url:completionHandler:]
  -[WBSTranslationContext _validateTargetLocaleSynchronously:]
  -[WBSTranslationContext _startProgressForExtractingContent]
  -[WBSTranslationContext _reportRequestedTranslationAnalyticsForWebpageLocale:targetLocale:requestType:]
  -[WBSTranslationContext _promptIfNeededToConsentToTranslationWithCompletionHandler:]
  -[WBSTranslationContext _restoreContextSnapshotIfNeeded:forURL:]
  -[WBSTranslationContext _nextURLIsEligibleForContinuedTranslation:]
  -[WBSTranslationContext _cancelProgressForNavigation:]
  -[WBSTranslationContext _generateJSONVersionOfContent:prettyPrinted:completionHandler:]
  -[WBSTranslationContext _updateProgressWithExtractedParagraphCount:]
  -[WBSTranslationContext _updateProgressWithTranslatedParagraphCount:]
  -[WBSTranslationContext translationContext:translateWebpageContents:toTargetLocale:translationHandler:]
  -[WBSTranslationContext _updateProgressForFinishingInitialContentExtraction]
  -[WBSTranslationContext _dominantLocaleForTextSample:completionHandler:]
  -[WBSTranslationContext dominantLocaleForTextSamples:completionHandler:]
  -[WBSTranslationContext _userVisibleErrorMessageForError:]
  -[WBSTranslationContext _notifyDelegateToReportProgressInUnifiedField:]
  -[WBSTranslationContext _translationSupportedInCurrentRegion]
  -[WBSTranslationContext _setState:usingLock:validatingTransitionIsAllowed:]
  -[WBSTranslationContext _canLogSourcePageURL]
  -[WBSTranslationContext hasConsentedToFirstTimeAlert]
  -[WBSTranslationContext debugAlwaysShowConsentAlert]
  -[WBSTranslationContext setConsentedToFirstTimeAlert:]
  -[WBSTranslationContext _genericErrorMessage]
  -[WBSTranslationContext isContinuedTranslationEnabled]
  -[WBSTranslationContext _reportFinishedFillingInitialPageContentIfNeeded]
  -[WBSTranslationContext _reportFilledFirstParagraphIfNeeded]
  -[WBSTranslationContext initWithContentExtractor:contentFiller:delegate:]
  -[WBSTranslationContext allowedTargetLocaleIdentifiers]
  -[WBSTranslationContext shouldOfferTranslationUI]
  -[WBSTranslationContext setPreferenceProvider:]
  -[WBSTranslationContext cacheTextSamples:]
  -[WBSTranslationContext setWebpageLocaleUsingCachedTextSamplesIfNeeded:]
  -[WBSTranslationContext validateTargetLocale:]
  -[WBSTranslationContext owningWebViewWillNavigateAndSaveCurrentSnapshotToStore:isEligibleForContinuedTranslation:]
  -[WBSTranslationContext owningWebViewWillNavigateToBackForwardListItemWithSnapshotStore:inPageCache:]
  -[WBSTranslationContext setContentTranslator:]


WBSTranslationDiagnosticData : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  NSString *extractedParagraphsAsJSON
 @property  NSString *translatedParagraphsAsJSON
 @property  NSString *URLString
 @property  NSArray *extractedParagraphs
 @property  NSArray *translatedParagraphs

  // instance methods
  -[WBSTranslationDiagnosticData copyWithZone:]
  -[WBSTranslationDiagnosticData URLString]
  -[WBSTranslationDiagnosticData init]
  -[WBSTranslationDiagnosticData setURLString:]
  -[WBSTranslationDiagnosticData .cxx_destruct]
  -[WBSTranslationDiagnosticData saveDiagnosticDataAsTemporaryFiles]
  -[WBSTranslationDiagnosticData extractedParagraphs]
  -[WBSTranslationDiagnosticData setExtractedParagraphsAsJSON:]
  -[WBSTranslationDiagnosticData translatedParagraphs]
  -[WBSTranslationDiagnosticData setTranslatedParagraphsAsJSON:]
  -[WBSTranslationDiagnosticData addExtractedParagraphs:]
  -[WBSTranslationDiagnosticData addTranslatedParagraph:]
  -[WBSTranslationDiagnosticData _destinationDirectory]
  -[WBSTranslationDiagnosticData _createFileForContents:fileName:inDirectory:]
  -[WBSTranslationDiagnosticData extractedParagraphsAsJSON]
  -[WBSTranslationDiagnosticData translatedParagraphsAsJSON]


WBSMobileAssetController : NSObject /usr/lib/libc++.1.dylib <WBSMobileAssetControllerProtocol>
 @property  <WBSMobileAssetControllerDelegate> *delegate
 @property  NSString *assetType
 @property  NSString *updateDateDefaultsKey
 @property  NSDate *lastUpdateDate
 @property  double updateInterval

  // instance methods
  -[WBSMobileAssetController lastUpdateDate]
  -[WBSMobileAssetController updateInterval]
  -[WBSMobileAssetController assetType]
  -[WBSMobileAssetController .cxx_destruct]
  -[WBSMobileAssetController _update]
  -[WBSMobileAssetController setLastUpdateDate:]
  -[WBSMobileAssetController setDelegate:]
  -[WBSMobileAssetController delegate]
  -[WBSMobileAssetController queryURL:]
  -[WBSMobileAssetController initWithMobileAssetType:updateInterval:minimumDelay:]
  -[WBSMobileAssetController initWithMobileAssetType:updateDateDefaultsKey:updateInterval:minimumDelay:]
  -[WBSMobileAssetController _queryMostRecentAsset:]
  -[WBSMobileAssetController _downloadIfNecessary:]
  -[WBSMobileAssetController _updateCatalog:]
  -[WBSMobileAssetController _queryAssets:]
  -[WBSMobileAssetController updateDateDefaultsKey]


WBSReaderFont(SafariSharedUI)
	// instance methods
	-[WBSReaderFont(SafariSharedUI) isInstalledWithCompletionHandler:]
	-[WBSReaderFont(SafariSharedUI) fontOfSize:]

(SafariSharedUIExtras)
	// instance methods
	-[(SafariSharedUIExtras) safari_stringWithFont:forWidth:lineBreakMode:]
	-[(SafariSharedUIExtras) _safari_variantsOfURLStringInFaviconFormat:]
	-[(SafariSharedUIExtras) safari_stringByFormattingForFaviconDatabase]
	-[(SafariSharedUIExtras) safari_domainURLStringPrefixVariantsForFaviconDatabase]
	-[(SafariSharedUIExtras) safari_stringByFormattingForIconControllerDatabase]
	-[(SafariSharedUIExtras) safari_urlStringVariantsForFaviconDatabase]
	-[(SafariSharedUIExtras) safari_domainFaviconURLStringVariantsForFaviconDatabase]
	-[(SafariSharedUIExtras) safari_urlStringVariantsForIconControllerDatabase]

NSURLSession(WBSUINSURLSessionExtras)
	// class methods
	+[NSURLSession(WBSUINSURLSessionExtras) safari_sharedSession]
	+[NSURLSession(WBSUINSURLSessionExtras) safari_sharedNonCellularSession]

	// instance methods
	-[NSURLSession(WBSUINSURLSessionExtras) _safari_downloadFirstValidImageWithURLs:failedURLDownloadsToErrorsDictionary:completionHandler:]
	-[NSURLSession(WBSUINSURLSessionExtras) safari_downloadFirstValidImageWithURLs:completionHandler:]
	-[NSURLSession(WBSUINSURLSessionExtras) safari_downloadImageWithURL:completionHandler:]
	-[NSURLSession(WBSUINSURLSessionExtras) safari_downloadImageWithURL:completionHandlerIncludingErrors:]

WKNavigationAction(SafariSharedUIExtras)
	// instance methods
	-[WKNavigationAction(SafariSharedUIExtras) safari_isEligibleForContinuedTranslationWithPolicy:]

(SafariSharedUIExtras)
	// class methods
	+[(SafariSharedUIExtras) safari_displayNameForLocaleIdentifier:]
	+[(SafariSharedUIExtras) safari_displayNameForLocaleIdentifier:inNativeLanguage:]
	+[(SafariSharedUIExtras) safari_currentLocaleHasSameBaseLanguageAsLocaleIdentifier:]
	+[(SafariSharedUIExtras) safari_displayNameForLocaleIdentifier:usingLanguageForLocalization:]

WBSCreditCardData(SafariSharedUIExtras)
	// instance methods
	-[WBSCreditCardData(SafariSharedUIExtras) initWithCameraReaderOutput:]
	-[WBSCreditCardData(SafariSharedUIExtras) virtualCardIcon]

WKBackForwardListItem(SafariSharedUIExtras)
	// instance methods
	-[WKBackForwardListItem(SafariSharedUIExtras) _safari_translationContextSnapshot]
	-[WKBackForwardListItem(SafariSharedUIExtras) _safari_setTranslationContextSnapshot:]

UIFontDescriptor(SafariSharedExtras)
	// class methods
	+[UIFontDescriptor(SafariSharedExtras) safari_preferredFontDescriptorWithTextStyle:]

CKContextResponse(SafariSharedExtras)
	// instance methods
	-[CKContextResponse(SafariSharedExtras) safari_topQIDsWithMaximumCount:]

SFSearchResult(SafariSharedExtras)
	// class methods
	+[SFSearchResult(SafariSharedExtras) safari_sfSearchResultWithUniqueIdentifier]

	// instance methods
	-[SFSearchResult(SafariSharedExtras) parsecQueryID]
	-[SFSearchResult(SafariSharedExtras) setParsecQueryID:]
	-[SFSearchResult(SafariSharedExtras) parsecDomainIdentifier]
	-[SFSearchResult(SafariSharedExtras) sfSearchResultValue]
	-[SFSearchResult(SafariSharedExtras) engagementDestination]
	-[SFSearchResult(SafariSharedExtras) _firstCardSectionOfClass:ofCard:outIndex:]
	-[SFSearchResult(SafariSharedExtras) safari_firstCardSectionOfClass:]
	-[SFSearchResult(SafariSharedExtras) safari_firstInlineCardSectionOfClass:]
	-[SFSearchResult(SafariSharedExtras) safari_indexOfFirstInlineCardSectionOfClass:]
	-[SFSearchResult(SafariSharedExtras) safari_loggingDescription]

(WBSParsecExtras)
	// instance methods
	-[(WBSParsecExtras) safari_percentageFromSamplingRate]

UIColor(SafariSharedExtras)
	// class methods
	+[UIColor(SafariSharedExtras) safari_colorWithSerializedColorData:]
	+[UIColor(SafariSharedExtras) safari_colorWithRGBColorComponents:]

	// instance methods
	-[UIColor(SafariSharedExtras) safari_colorDataForSerialization]
	-[UIColor(SafariSharedExtras) safari_rgbColorComponents]

UIImage(SafariSharedExtras)
	// class methods
	+[UIImage(SafariSharedExtras) safari_imageWithSize:actions:]

	// instance methods
	-[UIImage(SafariSharedExtras) safari_transparencyAnalysisResult]
	-[UIImage(SafariSharedExtras) safari_setTransparencyAnalysisResult:]
	-[UIImage(SafariSharedExtras) safari_transparencyAnalysisResultIsNotOpaque]

_WKRemoteObjectInterface(SafariSharedExtras)
	// class methods
	+[_WKRemoteObjectInterface(SafariSharedExtras) safari_javaScriptClasses]

WKWebsiteDataStore(SafariSharedExtras)
	// class methods
	+[WKWebsiteDataStore(SafariSharedExtras) safari_nonPersistentDataStore]
	+[WKWebsiteDataStore(SafariSharedExtras) safari_dataStoreWithConfiguration:]
	+[WKWebsiteDataStore(SafariSharedExtras) safari_defaultDataStore]
	+[WKWebsiteDataStore(SafariSharedExtras) safari_setCommonProperties:]
	+[WKWebsiteDataStore(SafariSharedExtras) safari_allDataTypes]
	+[WKWebsiteDataStore(SafariSharedExtras) safari_clearHSTSSuperCookies]

_WKTextManipulationItem(SafariSharedExtras)
	// class methods
	+[_WKTextManipulationItem(SafariSharedExtras) safari_textManipulationItemWithTranslationResult:]

	// instance methods
	-[_WKTextManipulationItem(SafariSharedExtras) safari_privacyPreservingDescription]
	-[_WKTextManipulationItem(SafariSharedExtras) safari_updateTranslationRequest:]
	-[_WKTextManipulationItem(SafariSharedExtras) _safari_descriptionPreservingPrivacy:]
	-[_WKTextManipulationItem(SafariSharedExtras) safari_debugDescription]
	-[_WKTextManipulationItem(SafariSharedExtras) safari_dictionaryRepresentation]
	-[_WKTextManipulationItem(SafariSharedExtras) safari_isEqualToManipulationItem:includingContentEquality:]
	-[_WKTextManipulationItem(SafariSharedExtras) safari_jsonRepresentation]

_WKTextManipulationToken(SafariSharedExtras)
	// class methods
	+[_WKTextManipulationToken(SafariSharedExtras) safari_tokenWithTranslationAlignmentRepresentation:]

	// instance methods
	-[_WKTextManipulationToken(SafariSharedExtras) safari_privacyPreservingDescription]
	-[_WKTextManipulationToken(SafariSharedExtras) safari_translationRangeRepresentation]
	-[_WKTextManipulationToken(SafariSharedExtras) safari_isEqualToManipulationToken:includingContentEquality:]
	-[_WKTextManipulationToken(SafariSharedExtras) _safari_descriptionPreservingPrivacy:]
	-[_WKTextManipulationToken(SafariSharedExtras) safari_debugDescription]
	-[_WKTextManipulationToken(SafariSharedExtras) safari_dictionaryRepresentation]
	-[_WKTextManipulationToken(SafariSharedExtras) safari_jsonRepresentation]
	-[_WKTextManipulationToken(SafariSharedExtras) safari_privacyPreservingMetadata]

01 00 1d00 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0700 /System/Library/PrivateFrameworks/ContextKit.framework/ContextKit: CKContextResponse 
01 00 0800 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0600 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSCustomAttributeKey 
01 00 0600 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchQuery 
01 00 0600 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableIndex 
01 00 0600 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItem 
01 00 0600 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableItemAttributeSet 
01 00 1e40 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOUsageManager 
01 00 1e40 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOUserSession 
01 00 0500 /System/Library/Frameworks/LinkPresentation.framework/LinkPresentation: LPMetadataProvider 
01 00 1b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSAppLink 
01 00 0400 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapItem 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2000 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: NSParagraphStyle 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLRequest 
01 00 1900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 1900 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1f00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1300 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBBoldTrayButton 
01 00 1300 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBLinkTrayButton 
01 00 1300 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBTextWelcomeController 
01 00 0d00 /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec: PARRequest 
01 00 0d00 /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec: PARSession 
01 00 0d00 /System/Library/PrivateFrameworks/CoreParsec.framework/CoreParsec: PARSessionConfiguration 
01 00 0900 /System/Library/PrivateFrameworks/PersonalizationPortrait.framework/PersonalizationPortrait: PPNamedEntityQuery 
01 00 0900 /System/Library/PrivateFrameworks/PersonalizationPortrait.framework/PersonalizationPortrait: PPNamedEntityStore 
01 00 1000 /System/Library/PrivateFrameworks/ParsecSubscriptionServiceSupport.framework/ParsecSubscriptionServiceSupport: PSSSSubscriptionManagerInternal 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFClearInputFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFClientTimingFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCompactRowCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFCustomFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFDetailedRowCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFDidGoToSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFDidGoToSiteFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFEndLocalSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFEndNetworkSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFImage 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFMapsCardSectionEngagementFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFMapsDetailedRowCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFRankingFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultEngagementFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultRankingFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFResultsReceivedAfterTimeoutFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFRowCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFScoreboardCardSection 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchResult 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchSuggestion 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchViewAppearFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSearchViewDisappearFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFSectionRankingFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFStartLocalSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFStartNetworkSearchFeedback 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFText 
01 00 0e00 /System/Library/PrivateFrameworks/SearchFoundation.framework/SearchFoundation: SFVisibleResultsFeedback 
01 00 0a00 /System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions: SGSuggestionsService 
01 00 0c00 /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity: UABestAppSuggestionManager 
01 00 0c00 /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity: UAUserActivity 
01 00 0c00 /System/Library/PrivateFrameworks/UserActivity.framework/UserActivity: UAUserActivityManager 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSAnalyticsLogger 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSCoalescedAsynchronousWriter 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSCompletionQuery 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSConfigurationDataTransformer 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSContentBlockerStatisticsSQLiteStore 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSCreditCardData 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSCrowdsourcedFeedbackDomainNormalizer 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSFormAutoFillCorrectionsSQLiteStore 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSFormAutoFillParsecCrowdsourcedCorrectionsProcessor 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSFormAutoFillParsecDomainPolicyProvider 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSHistory 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSOpenSearchURLTemplate 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSPair 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSParsecModel 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSParsecSchema 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSPerSitePreference 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSPerSitePreferenceManager 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSPerSitePreferencesSQLiteStore 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSPeriodicActivityScheduler 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSReaderFont 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSRecentHistoryTopicTagController 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSRemotePlistController 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSSQLiteDatabase 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSSQLiteStatement 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSSQLiteStore 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSSafariSandboxBroker 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSSafariSandboxBrokerConnection 
01 00 1400 /System/Library/PrivateFrameworks/SafariShared.framework/SafariShared: WBSURLSuffixChecker 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKBackForwardListItem 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKBrowsingContextController 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKContentWorld 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKNavigationAction 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKProcessPool 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKSnapshotConfiguration 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebProcessPlugInNodeHandle 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebProcessPlugInScriptWorld 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebView 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebViewConfiguration 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: WKWebsiteDataStore 
01 00 1b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: _LSOpenConfiguration 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: _WKProcessPoolConfiguration 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: _WKRemoteObjectInterface 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: _WKTextManipulationConfiguration 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: _WKTextManipulationExclusionRule 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: _WKTextManipulationItem 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: _WKTextManipulationToken 
01 00 1800 /System/Library/Frameworks/WebKit.framework/WebKit: _WKWebsiteDataStoreConfiguration 
