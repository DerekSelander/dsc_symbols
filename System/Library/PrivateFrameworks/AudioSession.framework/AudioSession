|| __DATA_CONST.__const _AVAudioSessionActivationAccessibilityPreferenceKey
|| __DATA_CONST.__const _AVAudioSessionActivationCallDirectionKey
|| __DATA_CONST.__const _AVAudioSessionActivationDeviceUIDKey
|| __DATA_CONST.__const _AVAudioSessionActivationTriggerKey
|| __DATA_CONST.__const _AVAudioSessionCategoryAlarm
|| __DATA_CONST.__const _AVAudioSessionCategoryAmbient
|| __DATA_CONST.__const _AVAudioSessionCategoryAudioProcessing
|| __DATA_CONST.__const _AVAudioSessionCategoryEmergencyAlert
|| __DATA_CONST.__const _AVAudioSessionCategoryEmergencyAlert_CanBeMuted
|| __DATA_CONST.__const _AVAudioSessionCategoryFindMyDevice
|| __DATA_CONST.__const _AVAudioSessionCategoryFindMyPhone
|| __DATA_CONST.__const _AVAudioSessionCategoryMultiRoute
|| __DATA_CONST.__const _AVAudioSessionCategoryPhoneCall
|| __DATA_CONST.__const _AVAudioSessionCategoryPlayAndRecord
|| __DATA_CONST.__const _AVAudioSessionCategoryPlayback
|| __DATA_CONST.__const _AVAudioSessionCategoryPlaybackNoSpeaker
|| __DATA_CONST.__const _AVAudioSessionCategoryRecord
|| __DATA_CONST.__const _AVAudioSessionCategoryRingtone
|| __DATA_CONST.__const _AVAudioSessionCategoryRingtonePreview
|| __DATA_CONST.__const _AVAudioSessionCategorySoloAmbient
|| __DATA_CONST.__const _AVAudioSessionCategorySystemSoundsAndHaptics
|| __DATA_CONST.__const _AVAudioSessionCategoryTTYCall
|| __DATA_CONST.__const _AVAudioSessionCategoryVoiceCommand
|| __DATA_CONST.__const _AVAudioSessionCategoryVoiceMail
|| __DATA_CONST.__const _AVAudioSessionCategoryVoiceOver
|| __DATA_CONST.__const _AVAudioSessionCategoryWaterEjection
|| __DATA_CONST.__const _AVAudioSessionInterruptionNotification
|| __DATA_CONST.__const _AVAudioSessionInterruptionOptionKey
|| __DATA_CONST.__const _AVAudioSessionInterruptionTypeKey
|| __DATA_CONST.__const _AVAudioSessionInterruptionWasSuspendedKey
|| __DATA_CONST.__const _AVAudioSessionInterruptorNameKey
|| __DATA_CONST.__const _AVAudioSessionLocationLower
|| __DATA_CONST.__const _AVAudioSessionLocationUpper
|| __DATA_CONST.__const _AVAudioSessionMediaServicesWereLostNotification
|| __DATA_CONST.__const _AVAudioSessionMediaServicesWereResetNotification
|| __DATA_CONST.__const _AVAudioSessionModeDefault
|| __DATA_CONST.__const _AVAudioSessionModeEmergencyAlert
|| __DATA_CONST.__const _AVAudioSessionModeGameChat
|| __DATA_CONST.__const _AVAudioSessionModeHapticsConstantVolume
|| __DATA_CONST.__const _AVAudioSessionModeHearingAccessibility
|| __DATA_CONST.__const _AVAudioSessionModeLivePhoto
|| __DATA_CONST.__const _AVAudioSessionModeLocatePhone
|| __DATA_CONST.__const _AVAudioSessionModeMeasurement
|| __DATA_CONST.__const _AVAudioSessionModeMoviePlayback
|| __DATA_CONST.__const _AVAudioSessionModeRaw
|| __DATA_CONST.__const _AVAudioSessionModeSOS
|| __DATA_CONST.__const _AVAudioSessionModeSpatialRecording
|| __DATA_CONST.__const _AVAudioSessionModeSpeechRecognition
|| __DATA_CONST.__const _AVAudioSessionModeSpokenAudio
|| __DATA_CONST.__const _AVAudioSessionModeVideoChat
|| __DATA_CONST.__const _AVAudioSessionModeVideoChatForMedia
|| __DATA_CONST.__const _AVAudioSessionModeVideoRecording
|| __DATA_CONST.__const _AVAudioSessionModeVoiceChat
|| __DATA_CONST.__const _AVAudioSessionModeVoiceMessages
|| __DATA_CONST.__const _AVAudioSessionModeVoicePrompt
|| __DATA_CONST.__const _AVAudioSessionOrientationBack
|| __DATA_CONST.__const _AVAudioSessionOrientationBottom
|| __DATA_CONST.__const _AVAudioSessionOrientationFront
|| __DATA_CONST.__const _AVAudioSessionOrientationLeft
|| __DATA_CONST.__const _AVAudioSessionOrientationRight
|| __DATA_CONST.__const _AVAudioSessionOrientationTop
|| __DATA_CONST.__const _AVAudioSessionOtherPrimaryAudioPlayStateChangeNotification
|| __DATA_CONST.__const _AVAudioSessionPickableRouteChangeNotification
|| __DATA_CONST.__const _AVAudioSessionPolarPatternCardioid
|| __DATA_CONST.__const _AVAudioSessionPolarPatternOmnidirectional
|| __DATA_CONST.__const _AVAudioSessionPolarPatternStereo
|| __DATA_CONST.__const _AVAudioSessionPolarPatternSubcardioid
|| __DATA_CONST.__const _AVAudioSessionPortAVB
|| __DATA_CONST.__const _AVAudioSessionPortAirPlay
|| __DATA_CONST.__const _AVAudioSessionPortBluetoothA2DP
|| __DATA_CONST.__const _AVAudioSessionPortBluetoothHFP
|| __DATA_CONST.__const _AVAudioSessionPortBluetoothLE
|| __DATA_CONST.__const _AVAudioSessionPortBuiltInMic
|| __DATA_CONST.__const _AVAudioSessionPortBuiltInReceiver
|| __DATA_CONST.__const _AVAudioSessionPortBuiltInSpeaker
|| __DATA_CONST.__const _AVAudioSessionPortCarAudio
|| __DATA_CONST.__const _AVAudioSessionPortDisplayPort
|| __DATA_CONST.__const _AVAudioSessionPortFireWire
|| __DATA_CONST.__const _AVAudioSessionPortHDMI
|| __DATA_CONST.__const _AVAudioSessionPortHeadphones
|| __DATA_CONST.__const _AVAudioSessionPortHeadsetMic
|| __DATA_CONST.__const _AVAudioSessionPortLineIn
|| __DATA_CONST.__const _AVAudioSessionPortLineOut
|| __DATA_CONST.__const _AVAudioSessionPortPCI
|| __DATA_CONST.__const _AVAudioSessionPortSPDIF
|| __DATA_CONST.__const _AVAudioSessionPortThunderbolt
|| __DATA_CONST.__const _AVAudioSessionPortUSBAudio
|| __DATA_CONST.__const _AVAudioSessionPortVirtual
|| __DATA_CONST.__const _AVAudioSessionRouteChangeNotification
|| __DATA_CONST.__const _AVAudioSessionRouteChangePreviousRouteKey
|| __DATA_CONST.__const _AVAudioSessionRouteChangeReasonKey
|| __DATA_CONST.__const _AVAudioSessionRoutingContextChangeNotification
|| __DATA_CONST.__const _AVAudioSessionSilenceSecondaryAudioHintNotification
|| __DATA_CONST.__const _AVAudioSessionSilenceSecondaryAudioHintTypeKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSessionChannelDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSessionDataSourceDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSessionPortDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSessionRouteDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSessionChannelDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSessionDataSourceDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSessionPortDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSessionRouteDescription
__ AudioToolbox: _AudioSessionAddPropertyListener_Priv
__ AudioToolbox: _AudioSessionCopyProperty_Priv
__ AudioToolbox: _AudioSessionCreateForID
__ AudioToolbox: _AudioSessionCreateSession_Priv
__ AudioToolbox: _AudioSessionDeactivateAndSetPriority_Priv
__ AudioToolbox: _AudioSessionDestroySession_Priv
__ AudioToolbox: _AudioSessionRemovePropertyListener_Priv
__ AudioToolbox: _AudioSessionRequestRecordPermission
__ AudioToolbox: _AudioSessionSetActive_Priv
__ AudioToolbox: _AudioSessionSetProperty_Priv
__ AudioToolbox: _AudioSessionSilenceOutput2
__ AudioToolbox: _kAudioSessionInputRoute_BluetoothHFP
__ AudioToolbox: _kAudioSessionInputRoute_CarAudio
__ AudioToolbox: _kAudioSessionInputRoute_USBAudio
__ AudioToolbox: _kAudioSessionOutputRoute_BluetoothHFP
__ AudioToolbox: _kAudioSessionOutputRoute_CarAudio
__ AudioToolbox: _kAudioSessionOutputRoute_USBAudio
__ AudioToolbox: _kAudioSession_AudioRouteChangeKey_CurrentRouteDescription
__ AudioToolbox: _kAudioSession_AudioRouteChangeKey_PreviousRouteDescription
__ AudioToolbox: _kAudioSession_AudioRouteKey_ChannelDescriptions
__ AudioToolbox: _kAudioSession_AudioRouteKey_Inputs
__ AudioToolbox: _kAudioSession_AudioRouteKey_Name
__ AudioToolbox: _kAudioSession_AudioRouteKey_Outputs
__ AudioToolbox: _kAudioSession_AudioRouteKey_Type
__ AudioToolbox: _kAudioSession_AudioRouteKey_UID
__ AudioToolbox: _kAudioSession_ChannelDescriptionKey_Label
__ AudioToolbox: _kAudioSession_ChannelDescriptionKey_Name
__ AudioToolbox: _kAudioSession_DataSourceDescriptionKey_AvailableMicrophonePolarPatterns
__ AudioToolbox: _kAudioSession_DataSourceDescriptionKey_ID
__ AudioToolbox: _kAudioSession_DataSourceDescriptionKey_MicrophoneOrientation
__ AudioToolbox: _kAudioSession_DataSourceDescriptionKey_MicrophoneRegion
__ AudioToolbox: _kAudioSession_DataSourceDescriptionKey_Name
__ AudioToolbox: _kAudioSession_DataSourceDescriptionKey_SelectedMicrophonePolarPattern
__ AudioToolbox: _kAudioSession_InterruptionInfoKey_InterruptorName
__ AudioToolbox: _kAudioSession_InterruptionInfoKey_State
__ AudioToolbox: _kAudioSession_InterruptionInfoKey_Type
__ AudioToolbox: _kAudioSession_InterruptionInfoKey_WasSuspended
__ AudioToolbox: _kAudioSession_RouteChangeKey_Reason
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: _kCFRunLoopDefaultMode
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___cxa_atexit
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_getschedparam
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setdetachstate
__ libSystem.B.dylib: _pthread_attr_setschedparam
__ libSystem.B.dylib: _pthread_attr_setschedpolicy
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_mach_thread_np
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_setname_np
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _thread_info
__ libSystem.B.dylib: _thread_policy_set
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt9exception4whatEv
__ libc++.1.dylib: __ZNSt11logic_errorC1EPKc
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt11logic_errorD1Ev
__ libc++.1.dylib: __ZNSt12out_of_rangeD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorC1EPKc
__ libc++.1.dylib: __ZNSt13runtime_errorD1Ev
__ libc++.1.dylib: __ZNSt3__111__call_onceERVmPvPFvS2_E
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVSt12out_of_range
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
AVAudioSessionPortDescription : NSObject
 @property  NSString *portType
 @property  NSString *portName
 @property  NSString *UID
 @property  BOOL hasHardwareVoiceCallProcessing
 @property  NSArray *channels
 @property  NSArray *dataSources
 @property  AVAudioSessionDataSourceDescription *selectedDataSource
 @property  AVAudioSessionDataSourceDescription *preferredDataSource

  // class methods
  +[AVAudioSessionPortDescription privateCreateArray:owningSession:]

  // instance methods
  -[AVAudioSessionPortDescription portType]
  -[AVAudioSessionPortDescription initWithSession:]
  -[AVAudioSessionPortDescription portName]
  -[AVAudioSessionPortDescription endpointType]
  -[AVAudioSessionPortDescription selectedDataSource]
  -[AVAudioSessionPortDescription preferredDataSource]
  -[AVAudioSessionPortDescription UID]
  -[AVAudioSessionPortDescription dealloc]
  -[AVAudioSessionPortDescription dataSources]
  -[AVAudioSessionPortDescription isEqualToPort:compareStrict:]
  -[AVAudioSessionPortDescription privateGetID]
  -[AVAudioSessionPortDescription initWithRawPortDescription:owningSession:]
  -[AVAudioSessionPortDescription configureChannelsAndDataSources:]
  -[AVAudioSessionPortDescription isEqual:]
  -[AVAudioSessionPortDescription isLiveListenSupported]
  -[AVAudioSessionPortDescription hasHardwareVoiceCallProcessing]
  -[AVAudioSessionPortDescription setPreferredDataSource:error:]
  -[AVAudioSessionPortDescription channels]
  -[AVAudioSessionPortDescription isHeadphones]
  -[AVAudioSessionPortDescription privateGetImplementation]


AVAudioSession : NSObject
 @property  BOOL isPrimary
 @property  NSArray *availableCategories
 @property  NSString *category
 @property  unsigned long categoryOptions
 @property  unsigned long routeSharingPolicy
 @property  NSArray *availableModes
 @property  NSString *mode
 @property  BOOL allowHapticsAndSystemSoundsDuringRecording
 @property  unsigned long recordPermission
 @property  AVAudioSessionPortDescription *preferredInput

  // class methods
  +[AVAudioSession sharedInstance]
  +[AVAudioSession auxiliarySession]
  +[AVAudioSession primarySession]
  +[AVAudioSession retrieveSessionWithID:]
  +[AVAudioSession categoryEnablesInput:]

  // instance methods
  -[AVAudioSession mode]
  -[AVAudioSession category]
  -[AVAudioSession autorelease]
  -[AVAudioSession currentHardwareOutputNumberOfChannels]
  -[AVAudioSession init]
  -[AVAudioSession setActive:withFlags:error:]
  -[AVAudioSession reporterID]
  -[AVAudioSession preferredSampleRate]
  -[AVAudioSession dealloc]
  -[AVAudioSession sessionType]
  -[AVAudioSession pickedRoute]
  -[AVAudioSession isPrimary]
  -[AVAudioSession preferredIOBufferDuration]
  -[AVAudioSession routeSharingPolicy]
  -[AVAudioSession inputGain]
  -[AVAudioSession retainCount]
  -[AVAudioSession setPreferredIOBufferDuration:error:]
  -[AVAudioSession setCategory:error:]
  -[AVAudioSession inputIsAvailable]
  -[AVAudioSession inputLatency]
  -[AVAudioSession isPiPAvailable]
  -[AVAudioSession opaqueSessionID]
  -[AVAudioSession allowAllBuiltInDataSources]
  -[AVAudioSession privateInputIsAvailableChanged:]
  -[AVAudioSession categoryOptions]
  -[AVAudioSession privateInterruptionWithInfo:]
  -[AVAudioSession privateUpdateInputGain:]
  -[AVAudioSession privateUpdateOutputVolume:]
  -[AVAudioSession initWithSessionType:]
  -[AVAudioSession privateUpdatePromptStyle:]
  -[AVAudioSession privateUpdateAudioFormats:]
  -[AVAudioSession privateHandlePickableRoutesChange]
  -[AVAudioSession outputLatency]
  -[AVAudioSession privateHandleServerDied]
  -[AVAudioSession privateUpdateInputChannelCount:]
  -[AVAudioSession privateUpdateOutputChannelCount:]
  -[AVAudioSession promptStyle]
  -[AVAudioSession privateHandleSecondaryAudioHintChange:]
  -[AVAudioSession privateHandleOtherPrimaryAudioPlayStateChange]
  -[AVAudioSession forceSoundCheck]
  -[AVAudioSession privateUpdatePiPAvailabilityChange:]
  -[AVAudioSession privateHandleRoutingContextChange]
  -[AVAudioSession privateMarkKVOPropertiesDirty:]
  -[AVAudioSession privateHandleServerConnectionCompletion:]
  -[AVAudioSession privateNeedsTranslationForNoSpeakerCategory:]
  -[AVAudioSession preferredInput]
  -[AVAudioSession privateSetCategoryWithOptions:modes:routeSharingPolicy:options:]
  -[AVAudioSession setActive:withOptions:error:]
  -[AVAudioSession privateGetDataSources:]
  -[AVAudioSession privateGetSelectedDataSource:]
  -[AVAudioSession privateSetRouteSharingPolicy:error:]
  -[AVAudioSession audioFormat]
  -[AVAudioSession privateRefreshAvailableInputs]
  -[AVAudioSession setPreferredSampleRate:error:]
  -[AVAudioSession isInputAvailable]
  -[AVAudioSession inputNumberOfChannels]
  -[AVAudioSession outputNumberOfChannels]
  -[AVAudioSession availableCategories]
  -[AVAudioSession setCategory:withOptions:error:]
  -[AVAudioSession recordPermission]
  -[AVAudioSession setCategory:mode:options:error:]
  -[AVAudioSession activateWithOptions:completionHandler:]
  -[AVAudioSession requestRecordPermission:]
  -[AVAudioSession deactivateAndSetInterruptionPriority:error:]
  -[AVAudioSession setPreferredIOBufferFrameSize:error:]
  -[AVAudioSession setInputGain:error:]
  -[AVAudioSession setInterruptionPriority:error:]
  -[AVAudioSession setPreferredInputNumberOfChannels:error:]
  -[AVAudioSession setInputDataSource:error:]
  -[AVAudioSession setPreferredOutputNumberOfChannels:error:]
  -[AVAudioSession setOutputDataSource:error:]
  -[AVAudioSession preferredInputOrientation]
  -[AVAudioSession setPreferredInputOrientation:error:]
  -[AVAudioSession inputOrientation]
  -[AVAudioSession allowHapticsAndSystemSoundsDuringRecording]
  -[AVAudioSession setAllowHapticsAndSystemSoundsDuringRecording:error:]
  -[AVAudioSession isDolbyDigitalEncoderAvailable]
  -[AVAudioSession inputDataSources]
  -[AVAudioSession isEarpieceActiveNoiseCancelationEnabled]
  -[AVAudioSession setForceSoundCheck:error:]
  -[AVAudioSession lastActivationStoppedNowPlayingApp]
  -[AVAudioSession requiresNoAudioResources]
  -[AVAudioSession setRequiresNoAudioResources:error:]
  -[AVAudioSession allowMixableAudioWhileRecording]
  -[AVAudioSession setAllowMixableAudioWhileRecording:error:]
  -[AVAudioSession participatesInNowPlayingAppPolicy]
  -[AVAudioSession recordingFromRemoteInput]
  -[AVAudioSession setParticipatesInNowPlayingAppPolicy:error:]
  -[AVAudioSession eligibleForBTSmartRoutingConsideration]
  -[AVAudioSession outputDataSources]
  -[AVAudioSession setEligibleForBTSmartRoutingConsideration:error:]
  -[AVAudioSession setRecordingFromRemoteInput:error:]
  -[AVAudioSession inputDataSource]
  -[AVAudioSession setAllowAllBuiltInDataSources:]
  -[AVAudioSession setBypassRingerSwitchPolicy:error:]
  -[AVAudioSession setInterruptionFadeDuration:error:]
  -[AVAudioSession setAudioHardwareControlFlags:error:]
  -[AVAudioSession setReporterID:error:]
  -[AVAudioSession isHardwareFormatFixedToMultiChannel]
  -[AVAudioSession fixHardwareFormatToMultiChannel:error:]
  -[AVAudioSession outputDataSource]
  -[AVAudioSession isInputGainSettable]
  -[AVAudioSession isOtherAudioPlaying]
  -[AVAudioSession secondaryAudioShouldBeSilencedHint]
  -[AVAudioSession inputSafetyOffset]
  -[AVAudioSession outputSafetyOffset]
  -[AVAudioSession activeSessionDisplayIDs]
  -[AVAudioSession IOBufferFrameSize]
  -[AVAudioSession interruptionPriority]
  -[AVAudioSession preferredIOBufferFrameSize]
  -[AVAudioSession preferredInputNumberOfChannels]
  -[AVAudioSession preferredOutputNumberOfChannels]
  -[AVAudioSession maximumInputNumberOfChannels]
  -[AVAudioSession maximumOutputNumberOfChannels]
  -[AVAudioSession selectIndependentRoutingContext:]
  -[AVAudioSession overrideOutputAudioPort:error:]
  -[AVAudioSession setPreferredInput:error:]
  -[AVAudioSession decoupledIO]
  -[AVAudioSession setAudioClockDevice:error:]
  -[AVAudioSession audioClockDevice]
  -[AVAudioSession speechDetectionDeviceSampleRate]
  -[AVAudioSession availableInputs]
  -[AVAudioSession setDisallowedPorts:error:]
  -[AVAudioSession setDefaultChatMode:error:]
  -[AVAudioSession setIAmTheAssistant:error:]
  -[AVAudioSession prefersNoDucking]
  -[AVAudioSession prefersNoInterruptionsByRingtonesAndAlerts]
  -[AVAudioSession setPrefersNoInterruptionsByRingtonesAndAlerts:error:]
  -[AVAudioSession setPrefersNoDucking:error:]
  -[AVAudioSession clearInputPreferences:]
  -[AVAudioSession preferDecoupledIO:error:]
  -[AVAudioSession preferredInputSampleRate]
  -[AVAudioSession setAggregatedIOPreference:error:]
  -[AVAudioSession setPreferredInputSampleRate:error:]
  -[AVAudioSession preferredOutputSampleRate]
  -[AVAudioSession setPreferredOutputSampleRate:error:]
  -[AVAudioSession inputSampleRate]
  -[AVAudioSession setSpeakerThermalGain:error:]
  -[AVAudioSession speakerThermalGain]
  -[AVAudioSession setHapticThermalGain:error:]
  -[AVAudioSession hapticThermalGain]
  -[AVAudioSession enableNotifications:error:]
  -[AVAudioSession isDolbyAtmosAvailable]
  -[AVAudioSession privateSetPropertyValue:withBool:error:]
  -[AVAudioSession privateUpdateDataSources:forInput:]
  -[AVAudioSession privateUpdateAudioFormat:]
  -[AVAudioSession outputSampleRate]
  -[AVAudioSession initAuxiliarySession]
  -[AVAudioSession currentHardwareSampleRate]
  -[AVAudioSession preferredHardwareSampleRate]
  -[AVAudioSession audioFormats]
  -[AVAudioSession setActivationContext:error:]
  -[AVAudioSession setDelegate:]
  -[AVAudioSession currentRoute]
  -[AVAudioSession silenceOutput:error:]
  -[AVAudioSession retain]
  -[AVAudioSession setActive:error:]
  -[AVAudioSession sampleRate]
  -[AVAudioSession routingContextUID]
  -[AVAudioSession outputVolume]
  -[AVAudioSession setMode:error:]
  -[AVAudioSession initWithSessionID:]
  -[AVAudioSession setPreferredHardwareSampleRate:error:]
  -[AVAudioSession delegate]
  -[AVAudioSession IOBufferDuration]
  -[AVAudioSession currentHardwareInputNumberOfChannels]
  -[AVAudioSession setCategory:mode:routeSharingPolicy:options:error:]
  -[AVAudioSession availableModes]
  -[AVAudioSession release]
  -[AVAudioSession privateGetImplementation]


AVAudioSessionDataSourceDescription : NSObject
 @property  NSNumber *dataSourceID
 @property  NSString *dataSourceName
 @property  NSString *location
 @property  NSString *orientation
 @property  NSArray *supportedPolarPatterns
 @property  NSString *selectedPolarPattern
 @property  NSString *preferredPolarPattern

  // class methods
  +[AVAudioSessionDataSourceDescription privateCreateArray:portID:sessionID:]

  // instance methods
  -[AVAudioSessionDataSourceDescription dealloc]
  -[AVAudioSessionDataSourceDescription dataSourceName]
  -[AVAudioSessionDataSourceDescription preferredPolarPattern]
  -[AVAudioSessionDataSourceDescription privateGetOwningPortID]
  -[AVAudioSessionDataSourceDescription isEqual:]
  -[AVAudioSessionDataSourceDescription configurePolarPatterns:]
  -[AVAudioSessionDataSourceDescription location]
  -[AVAudioSessionDataSourceDescription selectedPolarPattern]
  -[AVAudioSessionDataSourceDescription orientation]
  -[AVAudioSessionDataSourceDescription privateMatchesRawDescription:]
  -[AVAudioSessionDataSourceDescription isEqualToDataSource:]
  -[AVAudioSessionDataSourceDescription initWithSessionID:]
  -[AVAudioSessionDataSourceDescription initWithRawSourceDescription:andOwningPortID:andSessionID:]
  -[AVAudioSessionDataSourceDescription dataSourceID]
  -[AVAudioSessionDataSourceDescription supportedPolarPatterns]
  -[AVAudioSessionDataSourceDescription setPreferredPolarPattern:error:]
  -[AVAudioSessionDataSourceDescription privateGetImplementation]


AVAudioSessionChannelDescription : NSObject
 @property  NSString *channelName
 @property  NSString *owningPortUID
 @property  unsigned long channelNumber
 @property  unsigned int channelLabel

  // class methods
  +[AVAudioSessionChannelDescription privateCreateArray:portUID:]
  +[AVAudioSessionChannelDescription privateCreate:portUID:channelNumber:]

  // instance methods
  -[AVAudioSessionChannelDescription init]
  -[AVAudioSessionChannelDescription dealloc]
  -[AVAudioSessionChannelDescription channelName]
  -[AVAudioSessionChannelDescription channelNumber]
  -[AVAudioSessionChannelDescription isEqual:]
  -[AVAudioSessionChannelDescription isEqualToChannel:]
  -[AVAudioSessionChannelDescription channelLabel]
  -[AVAudioSessionChannelDescription owningPortUID]
  -[AVAudioSessionChannelDescription privateGetImplementation]


AVAudioSessionRouteDescription : NSObject
 @property  NSString *siriRemoteInputIdentifier
 @property  unsigned long siriInputSource
 @property  BOOL supportsSoftwareVolume
 @property  BOOL supportsDoAP
 @property  NSArray *inputs
 @property  NSArray *outputs

  // instance methods
  -[AVAudioSessionRouteDescription isEqualToRoute:]
  -[AVAudioSessionRouteDescription init]
  -[AVAudioSessionRouteDescription initWithRawDescription:owningSession:]
  -[AVAudioSessionRouteDescription dealloc]
  -[AVAudioSessionRouteDescription siriRemoteInputIdentifier]
  -[AVAudioSessionRouteDescription supportsSoftwareVolume]
  -[AVAudioSessionRouteDescription inputs]
  -[AVAudioSessionRouteDescription supportsDoAP]
  -[AVAudioSessionRouteDescription outputs]
  -[AVAudioSessionRouteDescription isEqual:]
  -[AVAudioSessionRouteDescription siriInputSource]
  -[AVAudioSessionRouteDescription privateGetImplementation]


01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
