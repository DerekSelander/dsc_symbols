|| __DATA.__objc_data _OBJC_CLASS_$_AVAudioSessionIOBinding
|| __DATA.__objc_data _OBJC_METACLASS_$_AVAudioSessionIOBinding
|| __DATA_CONST.__const _AVAudioSessionActivationAccessibilityPreferenceKey
|| __DATA_CONST.__const _AVAudioSessionActivationCallDirectionKey
|| __DATA_CONST.__const _AVAudioSessionActivationDeviceUIDKey
|| __DATA_CONST.__const _AVAudioSessionActivationTriggerKey
|| __DATA_CONST.__const _AVAudioSessionAvailableSampleRatesChangeNotification
|| __DATA_CONST.__const _AVAudioSessionBeaconBudgetChangeNotification
|| __DATA_CONST.__const _AVAudioSessionCategoryAlarm
|| __DATA_CONST.__const _AVAudioSessionCategoryAmbient
|| __DATA_CONST.__const _AVAudioSessionCategoryAudioProcessing
|| __DATA_CONST.__const _AVAudioSessionCategoryEmergencyAlert
|| __DATA_CONST.__const _AVAudioSessionCategoryEmergencyAlert_CanBeMuted
|| __DATA_CONST.__const _AVAudioSessionCategoryFindMyDevice
|| __DATA_CONST.__const _AVAudioSessionCategoryFindMyPhone
|| __DATA_CONST.__const _AVAudioSessionCategoryMultiRoute
|| __DATA_CONST.__const _AVAudioSessionCategoryPhoneCall
|| __DATA_CONST.__const _AVAudioSessionCategoryPlayAndRecord
|| __DATA_CONST.__const _AVAudioSessionCategoryPlayback
|| __DATA_CONST.__const _AVAudioSessionCategoryPlaybackNoSpeaker
|| __DATA_CONST.__const _AVAudioSessionCategoryRecord
|| __DATA_CONST.__const _AVAudioSessionCategoryRingtone
|| __DATA_CONST.__const _AVAudioSessionCategoryRingtonePreview
|| __DATA_CONST.__const _AVAudioSessionCategorySoloAmbient
|| __DATA_CONST.__const _AVAudioSessionCategorySystemSoundsAndHaptics
|| __DATA_CONST.__const _AVAudioSessionCategoryTTYCall
|| __DATA_CONST.__const _AVAudioSessionCategoryVoiceCommand
|| __DATA_CONST.__const _AVAudioSessionCategoryVoiceMail
|| __DATA_CONST.__const _AVAudioSessionCategoryVoiceOver
|| __DATA_CONST.__const _AVAudioSessionCategoryWaterEjection
|| __DATA_CONST.__const _AVAudioSessionInterruptionNotification
|| __DATA_CONST.__const _AVAudioSessionInterruptionOptionKey
|| __DATA_CONST.__const _AVAudioSessionInterruptionReasonKey
|| __DATA_CONST.__const _AVAudioSessionInterruptionTypeKey
|| __DATA_CONST.__const _AVAudioSessionInterruptionWasSuspendedKey
|| __DATA_CONST.__const _AVAudioSessionInterruptorNameKey
|| __DATA_CONST.__const _AVAudioSessionLocationLower
|| __DATA_CONST.__const _AVAudioSessionLocationUpper
|| __DATA_CONST.__const _AVAudioSessionMediaServicesWereLostNotification
|| __DATA_CONST.__const _AVAudioSessionMediaServicesWereResetNotification
|| __DATA_CONST.__const _AVAudioSessionModeBeacon
|| __DATA_CONST.__const _AVAudioSessionModeDefault
|| __DATA_CONST.__const _AVAudioSessionModeEmergencyAlert
|| __DATA_CONST.__const _AVAudioSessionModeGameChat
|| __DATA_CONST.__const _AVAudioSessionModeHapticsConstantVolume
|| __DATA_CONST.__const _AVAudioSessionModeHearingAccessibility
|| __DATA_CONST.__const _AVAudioSessionModeLivePhoto
|| __DATA_CONST.__const _AVAudioSessionModeLocatePhone
|| __DATA_CONST.__const _AVAudioSessionModeLowLatency
|| __DATA_CONST.__const _AVAudioSessionModeMeasurement
|| __DATA_CONST.__const _AVAudioSessionModeMoviePlayback
|| __DATA_CONST.__const _AVAudioSessionModeRaw
|| __DATA_CONST.__const _AVAudioSessionModeSOS
|| __DATA_CONST.__const _AVAudioSessionModeSleepTimer
|| __DATA_CONST.__const _AVAudioSessionModeSoundRecognition
|| __DATA_CONST.__const _AVAudioSessionModeSpatialRecording
|| __DATA_CONST.__const _AVAudioSessionModeSpeechRecognition
|| __DATA_CONST.__const _AVAudioSessionModeSpokenAudio
|| __DATA_CONST.__const _AVAudioSessionModeVideoChat
|| __DATA_CONST.__const _AVAudioSessionModeVideoChatForMedia
|| __DATA_CONST.__const _AVAudioSessionModeVideoRecording
|| __DATA_CONST.__const _AVAudioSessionModeVoiceChat
|| __DATA_CONST.__const _AVAudioSessionModeVoiceMessages
|| __DATA_CONST.__const _AVAudioSessionModeVoicePrompt
|| __DATA_CONST.__const _AVAudioSessionOrientationBack
|| __DATA_CONST.__const _AVAudioSessionOrientationBottom
|| __DATA_CONST.__const _AVAudioSessionOrientationFront
|| __DATA_CONST.__const _AVAudioSessionOrientationLeft
|| __DATA_CONST.__const _AVAudioSessionOrientationRight
|| __DATA_CONST.__const _AVAudioSessionOrientationTop
|| __DATA_CONST.__const _AVAudioSessionOtherPrimaryAudioPlayStateChangeNotification
|| __DATA_CONST.__const _AVAudioSessionPickableRouteChangeNotification
|| __DATA_CONST.__const _AVAudioSessionPolarPatternCardioid
|| __DATA_CONST.__const _AVAudioSessionPolarPatternOmnidirectional
|| __DATA_CONST.__const _AVAudioSessionPolarPatternStereo
|| __DATA_CONST.__const _AVAudioSessionPolarPatternSubcardioid
|| __DATA_CONST.__const _AVAudioSessionPortAVB
|| __DATA_CONST.__const _AVAudioSessionPortAirPlay
|| __DATA_CONST.__const _AVAudioSessionPortBluetoothA2DP
|| __DATA_CONST.__const _AVAudioSessionPortBluetoothHFP
|| __DATA_CONST.__const _AVAudioSessionPortBluetoothLE
|| __DATA_CONST.__const _AVAudioSessionPortBuiltInMic
|| __DATA_CONST.__const _AVAudioSessionPortBuiltInReceiver
|| __DATA_CONST.__const _AVAudioSessionPortBuiltInSpeaker
|| __DATA_CONST.__const _AVAudioSessionPortCarAudio
|| __DATA_CONST.__const _AVAudioSessionPortDisplayPort
|| __DATA_CONST.__const _AVAudioSessionPortFireWire
|| __DATA_CONST.__const _AVAudioSessionPortHDMI
|| __DATA_CONST.__const _AVAudioSessionPortHeadphones
|| __DATA_CONST.__const _AVAudioSessionPortHeadsetMic
|| __DATA_CONST.__const _AVAudioSessionPortLineIn
|| __DATA_CONST.__const _AVAudioSessionPortLineOut
|| __DATA_CONST.__const _AVAudioSessionPortPCI
|| __DATA_CONST.__const _AVAudioSessionPortSPDIF
|| __DATA_CONST.__const _AVAudioSessionPortThunderbolt
|| __DATA_CONST.__const _AVAudioSessionPortUSBAudio
|| __DATA_CONST.__const _AVAudioSessionPortVirtual
|| __DATA_CONST.__const _AVAudioSessionRouteChangeNotification
|| __DATA_CONST.__const _AVAudioSessionRouteChangePreviousRouteKey
|| __DATA_CONST.__const _AVAudioSessionRouteChangeReasonKey
|| __DATA_CONST.__const _AVAudioSessionRoutingContextChangeNotification
|| __DATA_CONST.__const _AVAudioSessionSilenceSecondaryAudioHintNotification
|| __DATA_CONST.__const _AVAudioSessionSilenceSecondaryAudioHintTypeKey
|| __DATA_CONST.__const _AVAudioSessionSourceContentBestAvailableContentTypeKey
|| __DATA_CONST.__const _AVAudioSessionSourceContentCurrentlyPlayingChannelCountKey
|| __DATA_CONST.__const _AVAudioSessionSourceContentCurrentlyPlayingFormatKey
|| __DATA_CONST.__const _AVAudioSessionSourceContentCurrentlyPlayingIsEligibleForSpatializationKey
|| __DATA_CONST.__const _AVAudioSessionSourceContentCurrentlyPlayingIsSpatializedKey
|| __DATA_CONST.__const _AVAudioSessionSpatialAudioEnabledKey
|| __DATA_CONST.__const _AVAudioSessionSpatialPlaybackCapabilitiesChangedNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSessionChannelDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSessionDataSourceDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSessionPortDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AVAudioSessionRouteDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSessionChannelDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSessionDataSourceDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSessionPortDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AVAudioSessionRouteDescription
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopDefaultMode
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ MediaExperience: _kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_NewDetailedRoute
__ MediaExperience: _kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_OldDetailedRoute
__ MediaExperience: _kCMSessionGlobalNotificationKey_ActiveAudioRouteDidChange_Reason
__ MediaExperience: _kCMSessionGlobalNotificationKey_VoicePromptStyleDidChange_VoicePromptStyle
__ MediaExperience: _kCMSessionGlobalProperty_CurrentInputSafetyOffset
__ MediaExperience: _kCMSessionGlobalProperty_CurrentOutputSafetyOffset
__ MediaExperience: _kCMSessionGlobalProperty_DisplayIDsOfActiveSessions
__ MediaExperience: _kCMSessionGlobalProperty_ThermalGainAdjustment_Haptics
__ MediaExperience: _kCMSessionGlobalProperty_ThermalGainAdjustment_Speaker
__ MediaExperience: _kCMSessionGlobalProperty_VoicePromptStyle
__ MediaExperience: _kCMSessionVoicePromptStyle_None
__ MediaExperience: _kCMSessionVoicePromptStyle_Normal
__ MediaExperience: _kCMSessionVoicePromptStyle_Short
__ MediaExperience: _kMXSessionAudioCategory_Alarm
__ MediaExperience: _kMXSessionAudioCategory_AmbientSound
__ MediaExperience: _kMXSessionAudioCategory_AudioProcessing
__ MediaExperience: _kMXSessionAudioCategory_EmergencyAlert
__ MediaExperience: _kMXSessionAudioCategory_EmergencyAlert_Muteable
__ MediaExperience: _kMXSessionAudioCategory_FindMyAudioDevice
__ MediaExperience: _kMXSessionAudioCategory_FindMyPhone
__ MediaExperience: _kMXSessionAudioCategory_MediaPlayback
__ MediaExperience: _kMXSessionAudioCategory_MediaPlaybackNoSpeaker
__ MediaExperience: _kMXSessionAudioCategory_Multi
__ MediaExperience: _kMXSessionAudioCategory_PhoneCall
__ MediaExperience: _kMXSessionAudioCategory_PlayAndRecord
__ MediaExperience: _kMXSessionAudioCategory_Record
__ MediaExperience: _kMXSessionAudioCategory_Ringtone
__ MediaExperience: _kMXSessionAudioCategory_RingtonePreview
__ MediaExperience: _kMXSessionAudioCategory_SoloAmbientSound
__ MediaExperience: _kMXSessionAudioCategory_SystemSoundsAndHaptics
__ MediaExperience: _kMXSessionAudioCategory_TTYCall
__ MediaExperience: _kMXSessionAudioCategory_VoiceCommand
__ MediaExperience: _kMXSessionAudioCategory_VoiceOver
__ MediaExperience: _kMXSessionAudioCategory_Voicemail
__ MediaExperience: _kMXSessionAudioCategory_WaterEjection
__ MediaExperience: _kMXSessionAudioCategory_eARC
__ MediaExperience: _kMXSessionAudioHardwareFormat_AC3
__ MediaExperience: _kMXSessionAudioHardwareFormat_LPCM
__ MediaExperience: _kMXSessionAudioMode_CustomVolume
__ MediaExperience: _kMXSessionAudioMode_Default
__ MediaExperience: _kMXSessionAudioMode_FindMyPhone
__ MediaExperience: _kMXSessionAudioMode_GameChat
__ MediaExperience: _kMXSessionAudioMode_HearingAccessibility
__ MediaExperience: _kMXSessionAudioMode_LivePhoto
__ MediaExperience: _kMXSessionAudioMode_LowLatency
__ MediaExperience: _kMXSessionAudioMode_Measurement
__ MediaExperience: _kMXSessionAudioMode_MoviePlayback
__ MediaExperience: _kMXSessionAudioMode_Raw
__ MediaExperience: _kMXSessionAudioMode_SOSNotification
__ MediaExperience: _kMXSessionAudioMode_Skeuomorphic
__ MediaExperience: _kMXSessionAudioMode_SpatialRecording
__ MediaExperience: _kMXSessionAudioMode_SpeechRecognition
__ MediaExperience: _kMXSessionAudioMode_SpokenAudio
__ MediaExperience: _kMXSessionAudioMode_VideoChat
__ MediaExperience: _kMXSessionAudioMode_VideoChatForMedia
__ MediaExperience: _kMXSessionAudioMode_VideoRecording
__ MediaExperience: _kMXSessionAudioMode_VoiceChat
__ MediaExperience: _kMXSessionAudioMode_VoiceMessages
__ MediaExperience: _kMXSessionAudioMode_VoicePrompt
__ MediaExperience: _kMXSessionNotificationKey_AvailablePhysicalFormatsDidChange_Formats
__ MediaExperience: _kMXSessionNotificationKey_InputGainScalarDidChange_Gain
__ MediaExperience: _kMXSessionNotificationKey_NumberOfInputChannelsDidChange_ChannelCount
__ MediaExperience: _kMXSessionNotificationKey_NumberOfOutputChannelsDidChange_ChannelCount
__ MediaExperience: _kMXSessionNotificationKey_PiPIsPossibleDidChange_PiPPossible
__ MediaExperience: _kMXSessionNotification_ActiveAudioRouteDidChange
__ MediaExperience: _kMXSessionNotification_AvailablePhysicalFormatsDidChange
__ MediaExperience: _kMXSessionNotification_AvailableSampleRatesDidChange
__ MediaExperience: _kMXSessionNotification_InputGainScalarDidChange
__ MediaExperience: _kMXSessionNotification_Interruption
__ MediaExperience: _kMXSessionNotification_NumberOfInputChannelsDidChange
__ MediaExperience: _kMXSessionNotification_NumberOfOutputChannelsDidChange
__ MediaExperience: _kMXSessionNotification_PiPIsPossibleDidChange
__ MediaExperience: _kMXSessionNotification_PickableRoutesDidChange
__ MediaExperience: _kMXSessionNotification_RoutingContextDidChange
__ MediaExperience: _kMXSessionNotification_SomeOtherNonAmbientSessionIsPlayingDidChange
__ MediaExperience: _kMXSessionNotification_VoicePromptStyleDidChange
__ MediaExperience: _kMXSessionProperty_ActivationContext
__ MediaExperience: _kMXSessionProperty_AllowMixableAudioWhileRecording
__ MediaExperience: _kMXSessionProperty_AllowSystemSoundsWhileRecording
__ MediaExperience: _kMXSessionProperty_AllowedRouteTypes
__ MediaExperience: _kMXSessionProperty_AudioCategory
__ MediaExperience: _kMXSessionProperty_AudioClockDevice
__ MediaExperience: _kMXSessionProperty_AudioHardwareControlFlags
__ MediaExperience: _kMXSessionProperty_AudioMode
__ MediaExperience: _kMXSessionProperty_BestAvailableContentType
__ MediaExperience: _kMXSessionProperty_CategoryCustomization_DefaultBuiltInRoute
__ MediaExperience: _kMXSessionProperty_CategoryCustomization_EnableBluetoothRecording
__ MediaExperience: _kMXSessionProperty_ClientPriority
__ MediaExperience: _kMXSessionProperty_ConsolidatedSourceFormatInfo
__ MediaExperience: _kMXSessionProperty_CurrentAudioHardwareFormat
__ MediaExperience: _kMXSessionProperty_CurrentAudioHardwareInputNumberChannels
__ MediaExperience: _kMXSessionProperty_CurrentAudioHardwareOutputNumberChannels
__ MediaExperience: _kMXSessionProperty_CurrentAudioHardwareSampleRate
__ MediaExperience: _kMXSessionProperty_CurrentInputDeviceBufferSize
__ MediaExperience: _kMXSessionProperty_CurrentInputLatency
__ MediaExperience: _kMXSessionProperty_CurrentInputSampleRate
__ MediaExperience: _kMXSessionProperty_CurrentOutputDeviceBufferSize
__ MediaExperience: _kMXSessionProperty_CurrentOutputLatency
__ MediaExperience: _kMXSessionProperty_CurrentOutputSampleRate
__ MediaExperience: _kMXSessionProperty_CurrentSpeechDetectionDeviceSampleRate
__ MediaExperience: _kMXSessionProperty_CurrentStereoInputOrientation
__ MediaExperience: _kMXSessionProperty_DefaultVPChatMode
__ MediaExperience: _kMXSessionProperty_DeselectedInputs
__ MediaExperience: _kMXSessionProperty_DisallowAudioFormatChanges
__ MediaExperience: _kMXSessionProperty_DoesntActuallyPlayAudio
__ MediaExperience: _kMXSessionProperty_DuckFadeDuration
__ MediaExperience: _kMXSessionProperty_DuckToLevelDB
__ MediaExperience: _kMXSessionProperty_DuckToLevelScalar
__ MediaExperience: _kMXSessionProperty_ExcludedRoutes
__ MediaExperience: _kMXSessionProperty_ForceSoundCheck
__ MediaExperience: _kMXSessionProperty_IAmTheAssistant
__ MediaExperience: _kMXSessionProperty_IgnoreRingerSwitch
__ MediaExperience: _kMXSessionProperty_InputGainAvailable
__ MediaExperience: _kMXSessionProperty_InputGainScalar
__ MediaExperience: _kMXSessionProperty_InterruptionFadeDuration
__ MediaExperience: _kMXSessionProperty_InterruptionStyle
__ MediaExperience: _kMXSessionProperty_IsActive
__ MediaExperience: _kMXSessionProperty_IsEligibleForBTSmartRoutingConsideration
__ MediaExperience: _kMXSessionProperty_IsEligibleForNowPlayingAppConsideration
__ MediaExperience: _kMXSessionProperty_IsExpanseMediaSession
__ MediaExperience: _kMXSessionProperty_IsInputOutputDecoupled
__ MediaExperience: _kMXSessionProperty_MaximumNumberOfInputChannels
__ MediaExperience: _kMXSessionProperty_MaximumNumberOfOutputChannels
__ MediaExperience: _kMXSessionProperty_NeedsAudioBudget
__ MediaExperience: _kMXSessionProperty_NowPlayingAppWasStoppedOnMostRecentActivation
__ MediaExperience: _kMXSessionProperty_OptOutOfMutePriority
__ MediaExperience: _kMXSessionProperty_OverrideRoute
__ MediaExperience: _kMXSessionProperty_PhysicalFormatsSupported
__ MediaExperience: _kMXSessionProperty_PiPIsPossible
__ MediaExperience: _kMXSessionProperty_PickedRoute
__ MediaExperience: _kMXSessionProperty_PowerBudget
__ MediaExperience: _kMXSessionProperty_PowerProfile
__ MediaExperience: _kMXSessionProperty_PreferredAudioHardwareIOBufferDuration
__ MediaExperience: _kMXSessionProperty_PreferredAudioHardwareIOBufferFrames
__ MediaExperience: _kMXSessionProperty_PreferredDecoupledInputOutput
__ MediaExperience: _kMXSessionProperty_PreferredInputSampleRate
__ MediaExperience: _kMXSessionProperty_PreferredInputs
__ MediaExperience: _kMXSessionProperty_PreferredNumberOfInputChannels
__ MediaExperience: _kMXSessionProperty_PreferredNumberOfOutputChannels
__ MediaExperience: _kMXSessionProperty_PreferredOutputSampleRate
__ MediaExperience: _kMXSessionProperty_PreferredStereoInputOrientation
__ MediaExperience: _kMXSessionProperty_PrefersMultichannelAudio
__ MediaExperience: _kMXSessionProperty_PrefersNoDucking
__ MediaExperience: _kMXSessionProperty_PrefersNoInterruptionWhenSecureMicrophoneIsEngaged
__ MediaExperience: _kMXSessionProperty_PrefersNoInterruptionsByRingtonesAndAlerts
__ MediaExperience: _kMXSessionProperty_PrefersSuppressingRecordingState
__ MediaExperience: _kMXSessionProperty_PrefersToTakeHWControlFlagsFromAnotherSession
__ MediaExperience: _kMXSessionProperty_PrefersToVibeWhenVibrationsAreDisabled
__ MediaExperience: _kMXSessionProperty_ProcessAssertionAuditTokens
__ MediaExperience: _kMXSessionProperty_ReporterIDs
__ MediaExperience: _kMXSessionProperty_RequiresAggregatedInputOutput
__ MediaExperience: _kMXSessionProperty_RouteSharingPolicy
__ MediaExperience: _kMXSessionProperty_RoutingContextUUID
__ MediaExperience: _kMXSessionProperty_SelectableInputs
__ MediaExperience: _kMXSessionProperty_SomeOtherClientIsPlaying
__ MediaExperience: _kMXSessionProperty_SomeOtherNonAmbientAudioCategoryClientIsPlaying
__ MediaExperience: _kMXSessionProperty_SubscribeToNotifications
__ MediaExperience: _kMXSessionProperty_UnduckFadeDuration
__ MediaExperience: _kMXSessionProperty_UserVolume
__ MediaExperience: _kMXSessionProperty_WantsToBeVolumeButtonClient
__ MediaExperience: _kMXSessionProperty_WantsToPauseSpokenAudio
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_ChannelDescriptions
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_ChannelDescriptions_Label
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_ChannelDescriptions_Name
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_DataSources
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_EndpointType
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_HiddenDataSources
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_ID
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_Inputs
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_IsHeadphones
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_LiveListenIsSupported
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_Name
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_Outputs
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_PortType
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_SelectedDataSource
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_SiriInputDeviceUUID
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_SiriInputSource
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_SupportsDoAP
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_SupportsSoftwareVolume
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_UID
__ MediaExperience: _kMXSession_RouteDetailedDescriptionKey_VoiceProcessingIsSupported
__ MediaExperience: _kMXSession_SelectedRouteDescription_DataSourceID
__ MediaExperience: _kMXSession_SelectedRouteDescription_RouteID
__ MediaExperience: _kMXSession_SourceFormatInfoKey_BestAvailableContentType_Multichannel
__ MediaExperience: _kMXSession_SourceFormatInfoKey_BestAvailableContentType_Stereo
__ MediaExperience: _kMXSystemControllerNotificationKey_SomeNonAmbientAudioCategoryClientIsPlayingDidChange_IsPlaying
__ MediaExperience: _kMXSystemControllerNotificationKey_SystemVolumeDidChange_Volume
__ MediaExperience: _kMXSystemControllerNotification_SomeNonAmbientAudioCategoryClientIsPlayingDidChange
__ MediaExperience: _kMXSystemControllerNotification_SystemVolumeDidChange
__ SoftLinking: __sl_dlopen
__ TCC: _kTCCServiceMicrophone
__ TCC: _tcc_authorization_record_get_authorization_right
__ TCC: _tcc_credential_singleton_for_self
__ TCC: _tcc_message_options_create
__ TCC: _tcc_message_options_set_reply_handler_policy
__ TCC: _tcc_message_options_set_request_prompt_policy
__ TCC: _tcc_server_create
__ TCC: _tcc_server_message_request_authorization
__ TCC: _tcc_service_get_name
__ TCC: _tcc_service_singleton_for_CF_name
__ caulk: __ZN5caulk3ipc13mapped_memory5resetEv
__ caulk: __ZN5caulk3ipc13mapped_memoryC1ERKNS_4mach10xpc_objectE
__ caulk: __ZN5caulk4mach7details16retain_os_objectEPv
__ caulk: __ZN5caulk4mach7details17release_os_objectEPv
__ caulk: __ZN5caulk9semaphore10timed_waitEd
__ caulk: __ZN5caulk9semaphore6signalEv
__ caulk: __ZN5caulk9semaphoreC1Ej
__ libAudioStatistics.dylib: _CAReportingClientSendMessage
__ libSessionUtility.dylib: __ZN2as28GetServerXPCListenerEndpointEv
__ libSessionUtility.dylib: __ZN2as28IsStandardMXNotificationNameEP8NSString
__ libSessionUtility.dylib: _kAudioSessionNotification_ConnectedPorts
__ libSessionUtility.dylib: _kAudioSessionNotification_ConnectedPortsKey_InputAvailable
__ libSessionUtility.dylib: _kAudioSessionNotification_InterruptionInfoKey_InterruptionReason
__ libSessionUtility.dylib: _kAudioSessionNotification_InterruptionInfoKey_InterruptorName
__ libSessionUtility.dylib: _kAudioSessionNotification_InterruptionInfoKey_State
__ libSessionUtility.dylib: _kAudioSessionNotification_InterruptionInfoKey_Type
__ libSessionUtility.dylib: _kAudioSessionNotification_InterruptionInfoKey_WasSuspended
__ libSessionUtility.dylib: _kAudioSessionNotification_SpatialPreferencesChanged
__ libSessionUtility.dylib: _sessionManagerXPCCallbackInterface
__ libSessionUtility.dylib: _sessionManagerXPCInterface
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___udivti3
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_assert_log
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_f
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mprotect
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_attr_destroy
__ libSystem.B.dylib: _pthread_attr_getschedparam
__ libSystem.B.dylib: _pthread_attr_init
__ libSystem.B.dylib: _pthread_attr_setdetachstate
__ libSystem.B.dylib: _pthread_attr_setschedparam
__ libSystem.B.dylib: _pthread_attr_setschedpolicy
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_mach_thread_np
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _pthread_setname_np
__ libSystem.B.dylib: _sched_yield
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _thread_info
__ libSystem.B.dylib: _thread_policy_set
__ libSystem.B.dylib: _usleep
__ libc++.1.dylib: __ZNKSt3__119__shared_weak_count13__get_deleterERKSt9type_info
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt9exception4whatEv
__ libc++.1.dylib: __ZNSt11logic_errorC1EPKc
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt11logic_errorD1Ev
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt12out_of_rangeD1Ev
__ libc++.1.dylib: __ZNSt13runtime_errorC1EPKc
__ libc++.1.dylib: __ZNSt13runtime_errorD1Ev
__ libc++.1.dylib: __ZNSt3__111__call_onceERVmPvPFvS2_E
__ libc++.1.dylib: __ZNSt3__112bad_weak_ptrD1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__115recursive_mutex4lockEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutex6unlockEv
__ libc++.1.dylib: __ZNSt3__115recursive_mutexC1Ev
__ libc++.1.dylib: __ZNSt3__115recursive_mutexD1Ev
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count14__release_weakEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_count4lockEv
__ libc++.1.dylib: __ZNSt3__119__shared_weak_countD2Ev
__ libc++.1.dylib: __ZNSt3__15mutex4lockEv
__ libc++.1.dylib: __ZNSt3__15mutex6unlockEv
__ libc++.1.dylib: __ZNSt8bad_castC2Ev
__ libc++.1.dylib: __ZNSt8bad_castD2Ev
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv121__vmi_class_type_infoE
__ libc++.1.dylib: __ZTVNSt3__112bad_weak_ptrE
__ libc++.1.dylib: __ZTVSt12bad_any_cast
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt12out_of_range
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_guard_abort
__ libc++.1.dylib: ___cxa_guard_acquire
__ libc++.1.dylib: ___cxa_guard_release
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
AVAudioSessionCallbackDispatcher : NSObject <SessionManagerXPCServerCallbackProtocol>
  // instance methods
  -[AVAudioSessionCallbackDispatcher pingClient:]
  -[AVAudioSessionCallbackDispatcher IOControllerEvent:sessions:isDecoupledInput:]


AVAudioIOController_iOS : NSObject <AVAudioIOController>
 @property  unsigned int timingStateSlot
 @property  {AVAudioIOPeriod=ddQf} IOPeriod
 @property  BOOL running
 @property  BOOL supportsPresentationTime
 @property  {AVAudioTimeInterval=ddQ} dynamicLatency
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[AVAudioIOController_iOS currentTime]
  -[AVAudioIOController_iOS .cxx_construct]
  -[AVAudioIOController_iOS isRunning]
  -[AVAudioIOController_iOS .cxx_destruct]
  -[AVAudioIOController_iOS presentationTime]
  -[AVAudioIOController_iOS createIOEventBlock:]
  -[AVAudioIOController_iOS destroyIOEventBlock:]
  -[AVAudioIOController_iOS IOPeriod]
  -[AVAudioIOController_iOS supportsPresentationTime]
  -[AVAudioIOController_iOS dynamicLatency]
  -[AVAudioIOController_iOS initWithSession:xpcConnection:timingStateSlot:isDecoupledInput:]
  -[AVAudioIOController_iOS timingStateSlot]
  -[AVAudioIOController_iOS setTimingStateSlot:]
  -[AVAudioIOController_iOS privateDispatchIOControllerEvent:]


AVAudioSessionPortDescription : NSObject
 @property  NSString *portType
 @property  NSString *portName
 @property  NSString *UID
 @property  BOOL hasHardwareVoiceCallProcessing
 @property  BOOL spatialAudioEnabled
 @property  NSArray *channels
 @property  NSArray *dataSources
 @property  AVAudioSessionDataSourceDescription *selectedDataSource
 @property  AVAudioSessionDataSourceDescription *preferredDataSource

  // class methods
  +[AVAudioSessionPortDescription privateCreateArray:owningSession:]

  // instance methods
  -[AVAudioSessionPortDescription portName]
  -[AVAudioSessionPortDescription privateGetImplementation]
  -[AVAudioSessionPortDescription portType]
  -[AVAudioSessionPortDescription dealloc]
  -[AVAudioSessionPortDescription initWithRawPortDescription:owningSession:]
  -[AVAudioSessionPortDescription selectedDataSource]
  -[AVAudioSessionPortDescription initWithRawPortDescriptionXPC:owningSession:]
  -[AVAudioSessionPortDescription channels]
  -[AVAudioSessionPortDescription dataSources]
  -[AVAudioSessionPortDescription UID]
  -[AVAudioSessionPortDescription privateGetID]
  -[AVAudioSessionPortDescription isLowLatencyAirPlay]
  -[AVAudioSessionPortDescription hasHardwareVoiceCallProcessing]
  -[AVAudioSessionPortDescription isSpatialAudioEnabled]
  -[AVAudioSessionPortDescription isEqualToPort:compareStrict:]
  -[AVAudioSessionPortDescription portSubType]
  -[AVAudioSessionPortDescription setPreferredDataSource:error:]
  -[AVAudioSessionPortDescription isHeadphones]
  -[AVAudioSessionPortDescription isLiveListenSupported]
  -[AVAudioSessionPortDescription isEqual:]
  -[AVAudioSessionPortDescription setSupportsSpatialAudio:]
  -[AVAudioSessionPortDescription endpointType]
  -[AVAudioSessionPortDescription preferredDataSource]
  -[AVAudioSessionPortDescription configureChannelsAndDataSources:]


AVAudioSession : NSObject
 @property  BOOL isPrimary
 @property  NSArray *availableCategories
 @property  NSString *category
 @property  unsigned long categoryOptions
 @property  unsigned long routeSharingPolicy
 @property  NSArray *availableModes
 @property  NSString *mode
 @property  BOOL allowHapticsAndSystemSoundsDuringRecording
 @property  unsigned long recordPermission
 @property  AVAudioSessionPortDescription *preferredInput
 @property  BOOL prefersNoInterruptionsFromSystemAlerts

  // class methods
  +[AVAudioSession sharedInstance]
  +[AVAudioSession auxiliarySession]
  +[AVAudioSession retrieveSessionWithID:]
  +[AVAudioSession primarySession]
  +[AVAudioSession categoryEnablesInput:]

  // instance methods
  -[AVAudioSession retain]
  -[AVAudioSession privateGetImplementation]
  -[AVAudioSession routingContextUID]
  -[AVAudioSession sessionType]
  -[AVAudioSession isPrimary]
  -[AVAudioSession setActive:error:]
  -[AVAudioSession inputIsAvailable]
  -[AVAudioSession pickedRoute]
  -[AVAudioSession currentHardwareSampleRate]
  -[AVAudioSession allowMixableAudioWhileRecording]
  -[AVAudioSession outputLatency]
  -[AVAudioSession setMode:error:]
  -[AVAudioSession setPreferredHardwareSampleRate:error:]
  -[AVAudioSession forceSoundCheck]
  -[AVAudioSession setDelegate:]
  -[AVAudioSession setCategory:error:]
  -[AVAudioSession availableModes]
  -[AVAudioSession inputLatency]
  -[AVAudioSession setActive:withFlags:error:]
  -[AVAudioSession delegate]
  -[AVAudioSession currentRoute]
  -[AVAudioSession currentHardwareOutputNumberOfChannels]
  -[AVAudioSession outputSampleRate]
  -[AVAudioSession dealloc]
  -[AVAudioSession initWithSpecification:]
  -[AVAudioSession setPreferredIOBufferDuration:error:]
  -[AVAudioSession category]
  -[AVAudioSession isActive]
  -[AVAudioSession setActivationContext:error:]
  -[AVAudioSession mode]
  -[AVAudioSession sampleRate]
  -[AVAudioSession release]
  -[AVAudioSession outputSafetyOffset]
  -[AVAudioSession prefersNoDucking]
  -[AVAudioSession prefersToVibeWhenVibrationsAreDisabled]
  -[AVAudioSession powerProfile]
  -[AVAudioSession initWithSessionID:]
  -[AVAudioSession preferredHardwareSampleRate]
  -[AVAudioSession inputSafetyOffset]
  -[AVAudioSession preferredIOBufferDuration]
  -[AVAudioSession preferredInputSampleRate]
  -[AVAudioSession preferredOutputSampleRate]
  -[AVAudioSession reporterID]
  -[AVAudioSession currentHardwareInputNumberOfChannels]
  -[AVAudioSession routeSharingPolicy]
  -[AVAudioSession prefersNoInterruptionsByRingtonesAndAlerts]
  -[AVAudioSession prefersMultichannelAudio]
  -[AVAudioSession retainCount]
  -[AVAudioSession outputVolume]
  -[AVAudioSession autorelease]
  -[AVAudioSession audioFormat]
  -[AVAudioSession init]
  -[AVAudioSession hostProcessAttribution]
  -[AVAudioSession initAuxiliarySession]
  -[AVAudioSession audioFormats]
  -[AVAudioSession setCategory:withOptions:error:]
  -[AVAudioSession outputDataSources]
  -[AVAudioSession setActive:withOptions:error:]
  -[AVAudioSession IOController]
  -[AVAudioSession setIsExpanseMediaSession:error:]
  -[AVAudioSession opaqueSessionID]
  -[AVAudioSession setRoutingContextUID:error:]
  -[AVAudioSession categoryOptions]
  -[AVAudioSession maximumOutputNumberOfChannels]
  -[AVAudioSession outputNumberOfChannels]
  -[AVAudioSession setHostProcessAttribution:error:]
  -[AVAudioSession setPreferredInput:error:]
  -[AVAudioSession setCategory:mode:routeSharingPolicy:options:error:]
  -[AVAudioSession setCategory:mode:options:error:]
  -[AVAudioSession IOBufferDuration]
  -[AVAudioSession availableInputs]
  -[AVAudioSession setAuditTokensForProcessAssertion:error:]
  -[AVAudioSession setEligibleForBTSmartRoutingConsideration:error:]
  -[AVAudioSession eligibleForBTSmartRoutingConsideration]
  -[AVAudioSession inputOrientation]
  -[AVAudioSession lastActivationStoppedNowPlayingApp]
  -[AVAudioSession setAllowHapticsAndSystemSoundsDuringRecording:error:]
  -[AVAudioSession preferredIOBufferFrameSize]
  -[AVAudioSession setReporterID:error:]
  -[AVAudioSession isOtherAudioPlaying]
  -[AVAudioSession setEligibleForBTTriangleConsideration:error:]
  -[AVAudioSession activeSessionDisplayIDs]
  -[AVAudioSession setPreferredIOBufferFrameSize:error:]
  -[AVAudioSession setDuckingFadeOutDuration:fadeInDuration:error:]
  -[AVAudioSession speechDetectionDeviceSampleRate]
  -[AVAudioSession clearInputPreferences:]
  -[AVAudioSession setAudioHardwareControlFlags:error:]
  -[AVAudioSession setIAmTheAssistant:error:]
  -[AVAudioSession setPreferredSampleRate:error:]
  -[AVAudioSession setRecordingFromRemoteInput:error:]
  -[AVAudioSession inputNumberOfChannels]
  -[AVAudioSession setDuckToLevelDB:error:]
  -[AVAudioSession setDuckToLevelScalar:error:]
  -[AVAudioSession privateSetProperty:value:isMXProperty:]
  -[AVAudioSession privateSetBatchProperties:areMXProperties:]
  -[AVAudioSession privateHandlePing]
  -[AVAudioSession privateAllowsLongFormRoutingToSpeaker]
  -[AVAudioSession privateSetAllowsLongFormRoutingToSpeaker:]
  -[AVAudioSession privateRequiresWatchOSRoutePicker]
  -[AVAudioSession initWithSessionType:]
  -[AVAudioSession privateCreateSessionInServerUsingAudioToolbox:type:identifier:]
  -[AVAudioSession privateCreateSessionInServerUsingXPC]
  -[AVAudioSession privateRecreateSessionInServerUsingXPC]
  -[AVAudioSession initSiblingSession:auditToken:clientIdentifier:]
  -[AVAudioSession initWithSiriEndpointIdentifier:]
  -[AVAudioSession availableCategories]
  -[AVAudioSession addCategoryOptionsToDictionary:nonXPCArray:category:options:useXPC:]
  -[AVAudioSession privateSetCategoryWithOptions:modes:routeSharingPolicy:options:]
  -[AVAudioSession activateWithOptions:completionHandler:]
  -[AVAudioSession deactivateAndSetInterruptionPriority:error:]
  -[AVAudioSession recordPermission]
  -[AVAudioSession requestRecordPermission:]
  -[AVAudioSession setInterruptionPriority:error:]
  -[AVAudioSession setPreferredInputNumberOfChannels:error:]
  -[AVAudioSession setPreferredOutputNumberOfChannels:error:]
  -[AVAudioSession setInputGain:error:]
  -[AVAudioSession setInputDataSource:error:]
  -[AVAudioSession setOutputDataSource:error:]
  -[AVAudioSession setPreferredInputOrientation:error:]
  -[AVAudioSession preferredInputOrientation]
  -[AVAudioSession promptStyle]
  -[AVAudioSession allowHapticsAndSystemSoundsDuringRecording]
  -[AVAudioSession consolidatedSourceContentInfo]
  -[AVAudioSession privateRegisterMXNotificationWithServer:]
  -[AVAudioSession privatePostNotificationForType:name:userInfo:]
  -[AVAudioSession addObserverForType:name:block:]
  -[AVAudioSession removeObserverForType:observer:name:]
  -[AVAudioSession isDolbyDigitalEncoderAvailable]
  -[AVAudioSession isEarpieceActiveNoiseCancelationEnabled]
  -[AVAudioSession isPiPAvailable]
  -[AVAudioSession setForceSoundCheck:error:]
  -[AVAudioSession requiresNoAudioResources]
  -[AVAudioSession setRequiresNoAudioResources:error:]
  -[AVAudioSession setAllowMixableAudioWhileRecording:error:]
  -[AVAudioSession participatesInNowPlayingAppPolicy]
  -[AVAudioSession setParticipatesInNowPlayingAppPolicy:error:]
  -[AVAudioSession eligibleForBTTriangleConsideration]
  -[AVAudioSession prefersToAcquireHWControlFromOtherSessions]
  -[AVAudioSession setPrefersToAcquireHWControlFromOtherSessions:error:]
  -[AVAudioSession prefersNoMicrophoneUsageIndicator]
  -[AVAudioSession setPrefersNoMicrophoneUsageIndicator:error:]
  -[AVAudioSession participatesInMutePriority]
  -[AVAudioSession setParticipatesInMutePriority:error:]
  -[AVAudioSession recordingFromRemoteInput]
  -[AVAudioSession allowAllBuiltInDataSources]
  -[AVAudioSession setAllowAllBuiltInDataSources:]
  -[AVAudioSession setBypassRingerSwitchPolicy:error:]
  -[AVAudioSession setInterruptionFadeDuration:error:]
  -[AVAudioSession isExpanseMediaSession]
  -[AVAudioSession isHardwareFormatFixedToMultiChannel]
  -[AVAudioSession fixHardwareFormatToMultiChannel:error:]
  -[AVAudioSession inputGain]
  -[AVAudioSession privateGetDataSources:]
  -[AVAudioSession privateGetNotificationStateForType:create:]
  -[AVAudioSession privateGetSelectedDataSource:]
  -[AVAudioSession inputDataSources]
  -[AVAudioSession inputDataSource]
  -[AVAudioSession outputDataSource]
  -[AVAudioSession isInputGainSettable]
  -[AVAudioSession isInputAvailable]
  -[AVAudioSession secondaryAudioShouldBeSilencedHint]
  -[AVAudioSession IOBufferFrameSize]
  -[AVAudioSession interruptionPriority]
  -[AVAudioSession preferredSampleRate]
  -[AVAudioSession preferredInputNumberOfChannels]
  -[AVAudioSession preferredOutputNumberOfChannels]
  -[AVAudioSession maximumInputNumberOfChannels]
  -[AVAudioSession privateSetRouteSharingPolicy:error:]
  -[AVAudioSession privateNeedsTranslationForNoSpeakerCategory:]
  -[AVAudioSession auditTokensForProcessAssertion]
  -[AVAudioSession powerBudget]
  -[AVAudioSession setPowerProfile:error:]
  -[AVAudioSession subscribeToNotifications:error:]
  -[AVAudioSession selectIndependentRoutingContext:]
  -[AVAudioSession overrideOutputAudioPort:error:]
  -[AVAudioSession preferredInput]
  -[AVAudioSession setSupportsMultichannelContent:error:]
  -[AVAudioSession supportsMultichannelContent]
  -[AVAudioSession setAudioClockDevice:error:]
  -[AVAudioSession audioClockDevice]
  -[AVAudioSession privateRefreshAvailableInputs]
  -[AVAudioSession privateGetCachedReporterID]
  -[AVAudioSession setDisallowedPorts:error:]
  -[AVAudioSession silenceOutput:error:]
  -[AVAudioSession isSessionInputMuted]
  -[AVAudioSession muteSessionInput:error:]
  -[AVAudioSession setDefaultChatMode:error:]
  -[AVAudioSession iAmTheAssistant]
  -[AVAudioSession setPrefersNoInterruptionsByRingtonesAndAlerts:error:]
  -[AVAudioSession prefersNoInterruptionsFromSystemAlerts]
  -[AVAudioSession setPrefersNoInterruptionsFromSystemAlerts:error:]
  -[AVAudioSession setPrefersNoDucking:error:]
  -[AVAudioSession needsHighPowerBudgeting]
  -[AVAudioSession setNeedsHighPowerBudgeting:error:]
  -[AVAudioSession participatesInVolumePolicy]
  -[AVAudioSession setParticipatesInVolumePolicy:error:]
  -[AVAudioSession setPrefersToVibeWhenVibrationsAreDisabled:error:]
  -[AVAudioSession defaultCalibratedOutputSPL]
  -[AVAudioSession preferDecoupledIO:error:]
  -[AVAudioSession setAggregatedIOPreference:error:]
  -[AVAudioSession decoupledIO]
  -[AVAudioSession setPreferredInputSampleRate:error:]
  -[AVAudioSession setPreferredOutputSampleRate:error:]
  -[AVAudioSession inputSampleRate]
  -[AVAudioSession setSpeakerThermalGain:error:]
  -[AVAudioSession setHapticThermalGain:error:]
  -[AVAudioSession speakerThermalGain]
  -[AVAudioSession hapticThermalGain]
  -[AVAudioSession privateInputIsAvailableChanged:]
  -[AVAudioSession privateInterruptionWithInfo:]
  -[AVAudioSession privateMarkKVOPropertiesDirty:]
  -[AVAudioSession privateHandleServerDied]
  -[AVAudioSession privateHandleAvailableSampleRatesChange]
  -[AVAudioSession privateHandleBeaconBudgetChange:]
  -[AVAudioSession privateHandlePickableRoutesChange]
  -[AVAudioSession privateHandleSecondaryAudioHintChange:]
  -[AVAudioSession privateHandleOtherPrimaryAudioPlayStateChange]
  -[AVAudioSession privateUpdatePiPAvailabilityChange:]
  -[AVAudioSession privateHandleRoutingContextChange]
  -[AVAudioSession privateHandleServerConnectionCompletion:]
  -[AVAudioSession enableNotifications:error:]
  -[AVAudioSession setPrefersMultichannelAudio:error:]
  -[AVAudioSession privateSetPropertyValue:withBool:error:]
  -[AVAudioSession privateUpdateOutputVolume:]
  -[AVAudioSession privateUpdatePromptStyle:]
  -[AVAudioSession privateUpdateInputGain:]
  -[AVAudioSession privateUpdateDataSources:forInput:]
  -[AVAudioSession privateUpdateAudioFormats:]
  -[AVAudioSession privateUpdateAudioFormat:]
  -[AVAudioSession privateUpdateInputChannelCount:]
  -[AVAudioSession privateUpdateOutputChannelCount:]
  -[AVAudioSession isDolbyAtmosAvailable]
  -[AVAudioSession getMXSessionProperty:error:]
  -[AVAudioSession setMXSessionProperty:value:error:]
  -[AVAudioSession decoupledInputIOController]


AVAudioSessionDataSourceDescription : NSObject
 @property  NSNumber *dataSourceID
 @property  NSString *dataSourceName
 @property  NSString *location
 @property  NSString *orientation
 @property  NSArray *supportedPolarPatterns
 @property  NSString *selectedPolarPattern
 @property  NSString *preferredPolarPattern

  // class methods
  +[AVAudioSessionDataSourceDescription privateCreateArray:portID:sessionID:]

  // instance methods
  -[AVAudioSessionDataSourceDescription privateGetImplementation]
  -[AVAudioSessionDataSourceDescription privateGetOwningPortID]
  -[AVAudioSessionDataSourceDescription isEqualToDataSource:]
  -[AVAudioSessionDataSourceDescription orientation]
  -[AVAudioSessionDataSourceDescription dealloc]
  -[AVAudioSessionDataSourceDescription preferredPolarPattern]
  -[AVAudioSessionDataSourceDescription dataSourceName]
  -[AVAudioSessionDataSourceDescription setPreferredPolarPattern:error:]
  -[AVAudioSessionDataSourceDescription dataSourceID]
  -[AVAudioSessionDataSourceDescription initWithSessionID:]
  -[AVAudioSessionDataSourceDescription privateMatchesRawDescription:]
  -[AVAudioSessionDataSourceDescription location]
  -[AVAudioSessionDataSourceDescription configurePolarPatterns:]
  -[AVAudioSessionDataSourceDescription isEqual:]
  -[AVAudioSessionDataSourceDescription supportedPolarPatterns]
  -[AVAudioSessionDataSourceDescription initWithRawSourceDescription:andOwningPortID:andSessionID:]
  -[AVAudioSessionDataSourceDescription selectedPolarPattern]


AVAudioSessionIOBinding : NSObject
 @property  AVAudioSession *session
 @property  NSArray *streams

  // instance methods
  -[AVAudioSessionIOBinding streams]
  -[AVAudioSessionIOBinding session]
  -[AVAudioSessionIOBinding .cxx_destruct]
  -[AVAudioSessionIOBinding initWithSession:]
  -[AVAudioSessionIOBinding initWithSession:streams:error:]


AVAudioSessionSpecification : NSObject <NSSecureCoding>
 @property  unsigned long sessionType
 @property  {?=[8I]} clientAuditToken
 @property  unsigned int siblingID
 @property  NSString *clientIdentifier

  // class methods
  +[AVAudioSessionSpecification supportsSecureCoding]

  // instance methods
  -[AVAudioSessionSpecification setSessionType:]
  -[AVAudioSessionSpecification sessionType]
  -[AVAudioSessionSpecification setClientIdentifier:]
  -[AVAudioSessionSpecification clientAuditToken]
  -[AVAudioSessionSpecification clientIdentifier]
  -[AVAudioSessionSpecification encodeWithCoder:]
  -[AVAudioSessionSpecification .cxx_destruct]
  -[AVAudioSessionSpecification setSiblingID:]
  -[AVAudioSessionSpecification setClientAuditToken:]
  -[AVAudioSessionSpecification siblingID]
  -[AVAudioSessionSpecification initWithCoder:]


AVAudioSessionChannelDescription : NSObject
 @property  NSString *channelName
 @property  NSString *owningPortUID
 @property  unsigned long channelNumber
 @property  unsigned int channelLabel

  // class methods
  +[AVAudioSessionChannelDescription privateCreateArray:portUID:]
  +[AVAudioSessionChannelDescription privateCreate:portUID:channelNumber:]

  // instance methods
  -[AVAudioSessionChannelDescription privateGetImplementation]
  -[AVAudioSessionChannelDescription channelName]
  -[AVAudioSessionChannelDescription channelNumber]
  -[AVAudioSessionChannelDescription channelLabel]
  -[AVAudioSessionChannelDescription dealloc]
  -[AVAudioSessionChannelDescription isEqualToChannel:]
  -[AVAudioSessionChannelDescription owningPortUID]
  -[AVAudioSessionChannelDescription isEqual:]
  -[AVAudioSessionChannelDescription init]


AVAudioSessionRouteDescription : NSObject
 @property  NSString *siriRemoteInputIdentifier
 @property  unsigned long siriInputSource
 @property  BOOL supportsSoftwareVolume
 @property  BOOL supportsDoAP
 @property  NSArray *inputs
 @property  NSArray *outputs

  // instance methods
  -[AVAudioSessionRouteDescription privateGetImplementation]
  -[AVAudioSessionRouteDescription inputs]
  -[AVAudioSessionRouteDescription isEqualToRoute:]
  -[AVAudioSessionRouteDescription siriInputSource]
  -[AVAudioSessionRouteDescription dealloc]
  -[AVAudioSessionRouteDescription updateOutputPortsWithSpatialAudioStatus:]
  -[AVAudioSessionRouteDescription supportsDoAP]
  -[AVAudioSessionRouteDescription siriRemoteInputIdentifier]
  -[AVAudioSessionRouteDescription outputs]
  -[AVAudioSessionRouteDescription initWithRawDescription:owningSession:]
  -[AVAudioSessionRouteDescription supportsSoftwareVolume]
  -[AVAudioSessionRouteDescription isEqual:]
  -[AVAudioSessionRouteDescription init]


01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
