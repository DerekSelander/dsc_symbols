|| __DATA.__data _ContinuityCaptureSystemPressureContext
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureCapabilities
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureClientBase
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureControl
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureDeviceCapabilities
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureMSNExceptionMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureProximityMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureRemoteAudioDevice
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureRemoteClient
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureRemoteCompositeDevice
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureRemoteDeskcamVideoDevice
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureRemoteVideoDevice
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureState
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureStateMachineEvent
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureStateTransition
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureStillImageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureStreamFormat
|| __DATA.__objc_data _OBJC_CLASS_$_CMContinuityCaptureTimeSyncClock
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureCapabilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureClientBase
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureControl
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureDeviceCapabilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureMSNExceptionMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureProximityMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureRemoteAudioDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureRemoteClient
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureRemoteCompositeDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureRemoteDeskcamVideoDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureRemoteVideoDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureState
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureStateMachineEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureStateTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureStillImageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureStreamFormat
|| __DATA.__objc_data _OBJC_METACLASS_$_CMContinuityCaptureTimeSyncClock
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMContinuityCaptureRemoteVideoDevice._activeConfiguration
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMContinuityCaptureRemoteVideoDevice._connections
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMContinuityCaptureRemoteVideoDevice._frameRateThrottledByThermalLevelOrPowerMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMContinuityCaptureRemoteVideoDevice._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CMContinuityCaptureRemoteVideoDevice._streaming
|| __DATA_CONST.__const _CMContinuityCaptureActiveAVCaptureStreamEntitySetKVOKey
|| __DATA_CONST.__const _CMContinuityCaptureAudioCaptureSessionKVOKey
|| __DATA_CONST.__const _CMContinuityCaptureClientActiveKVOKey
|| __DATA_CONST.__const _CMContinuityCaptureControlNameAsyncStillCaptureConfigs
|| __DATA_CONST.__const _CMContinuityCaptureControlNameAsyncStillCaptureEnabled
|| __DATA_CONST.__const _CMContinuityCaptureControlNameCinematicFramingActive
|| __DATA_CONST.__const _CMContinuityCaptureControlNameCinematicFramingEnabled
|| __DATA_CONST.__const _CMContinuityCaptureControlNameDeskViewCameraMode
|| __DATA_CONST.__const _CMContinuityCaptureControlNameFaceDetectionEnabled
|| __DATA_CONST.__const _CMContinuityCaptureControlNameFlashSupported
|| __DATA_CONST.__const _CMContinuityCaptureControlNameHumanBodyDetectionEnabled
|| __DATA_CONST.__const _CMContinuityCaptureControlNameMaxFrameRate
|| __DATA_CONST.__const _CMContinuityCaptureControlNameMinFrameRate
|| __DATA_CONST.__const _CMContinuityCaptureControlNamePerFrameExifDataEnabled
|| __DATA_CONST.__const _CMContinuityCaptureControlNamePortraitEffectActive
|| __DATA_CONST.__const _CMContinuityCaptureControlNamePortraitEffectEnabled
|| __DATA_CONST.__const _CMContinuityCaptureControlNameStudioLightingActive
|| __DATA_CONST.__const _CMContinuityCaptureControlNameStudioLightingEnabled
|| __DATA_CONST.__const _CMContinuityCaptureControlNameZoom
|| __DATA_CONST.__const _CMContinuityCaptureStateMachineStateUpdateKVOKey
|| __DATA_CONST.__const _CMContinuityCaptureStreamFormatName1280x720
|| __DATA_CONST.__const _CMContinuityCaptureStreamFormatName1280x720p60
|| __DATA_CONST.__const _CMContinuityCaptureStreamFormatName1920x1080
|| __DATA_CONST.__const _CMContinuityCaptureStreamFormatName1920x1080p60
|| __DATA_CONST.__const _CMContinuityCaptureStreamFormatName1920x1440
|| __DATA_CONST.__const _CMContinuityCaptureStreamFormatName1920x1440p60
|| __DATA_CONST.__const _CMContinuityCaptureStreamFormatName640x480
|| __DATA_CONST.__const _CMContinuityCaptureStreamFormatName640x480p60
|| __DATA_CONST.__const _CMContinuityCaptureStreamStateUpdateKVOKey
|| __DATA_CONST.__const _CMContinuityCaptureValueUpdateKVOKey
|| __DATA_CONST.__const _ContinuityCaptureClientArgsKey
|| __DATA_CONST.__const _ContinuityCaptureClientGIDKey
|| __DATA_CONST.__const _ContinuityCaptureClientSelectorKey
|| __DATA_CONST.__const _ContinuityCaptureCommandIdentifier
|| __DATA_CONST.__const _ContinuityCaptureControlIdentifier
|| __DATA_CONST.__const _ContinuityCaptureDataIdentifier
|| __DATA_CONST.__const _ContinuityCaptureMediaIdentifierDefaultVideo
|| __DATA_CONST.__const _ContinuityCaptureMediaIdentifierDeskcamVideo
|| __DATA_CONST.__const _ContinuityCaptureMediaIdentifierMicrophone
|| __DATA_CONST.__const _ContinuityCapturePropagatableAttachmentsKey_ContinuityCaptureRemoteSessionID
|| __DATA_CONST.__const _ContinuityCapturePropagatableAttachmentsKey_NetworkTime
|| __DATA_CONST.__const _kCMContinuityCaptureAudioPreferencesKeyObfuscationEnabled
|| __DATA_CONST.__const _kCMContinuityCaptureAudioPreferencesKeyTransportLatencyInSeconds
|| __DATA_CONST.__const _kCMContinuityCaptureCallGroupUUID
|| __DATA_CONST.__const _kCMContinuityCaptureCallIsFaceTime
|| __DATA_CONST.__const _kCMContinuityCaptureCallProvider
|| __DATA_CONST.__const _kCMContinuityCaptureCallService
|| __DATA_CONST.__const _kCMContinuityCaptureCallUUID
|| __DATA_CONST.__const _kCMContinuityCaptureCallUniqueProxyIdentifier
|| __DATA_CONST.__const _kCMContinuityCaptureCallerHandle
|| __DATA_CONST.__const _kCMContinuityCaptureCallerName
|| __DATA_CONST.__const _kCMContinuityCaptureControlBatteryLevel
|| __DATA_CONST.__const _kCMContinuityCaptureControlBatteryState
|| __DATA_CONST.__const _kCMContinuityCaptureControlDebugInfo
|| __DATA_CONST.__const _kCMContinuityCaptureControlIncomingCall
|| __DATA_CONST.__const _kCMContinuityCaptureControlIncomingCallComplete
|| __DATA_CONST.__const _kCMContinuityCaptureControlStreamStatus
|| __DATA_CONST.__const _kCMContinuityCaptureControlSystemPressure
|| __DATA_CONST.__const _kCMContinuityCaptureDebugCurrentStateMachineState
|| __DATA_CONST.__const _kCMContinuityCaptureDevicePropertyCompanionDeskcamDeviceUUID
|| __DATA_CONST.__const _kCMContinuityCaptureEventActiveCallEnd
|| __DATA_CONST.__const _kCMContinuityCaptureEventActiveCallStart
|| __DATA_CONST.__const _kCMContinuityCaptureEventAssociatedDevicePause
|| __DATA_CONST.__const _kCMContinuityCaptureEventAssociatedDeviceResume
|| __DATA_CONST.__const _kCMContinuityCaptureEventCGDidReconfig
|| __DATA_CONST.__const _kCMContinuityCaptureEventCGWillReconfig
|| __DATA_CONST.__const _kCMContinuityCaptureEventConnectionChange
|| __DATA_CONST.__const _kCMContinuityCaptureEventConnectionConnect
|| __DATA_CONST.__const _kCMContinuityCaptureEventConnectionDisconnect
|| __DATA_CONST.__const _kCMContinuityCaptureEventForceRestartStream
|| __DATA_CONST.__const _kCMContinuityCaptureEventFormatChange
|| __DATA_CONST.__const _kCMContinuityCaptureEventImageCapture
|| __DATA_CONST.__const _kCMContinuityCaptureEventOnBoardingComplete
|| __DATA_CONST.__const _kCMContinuityCaptureEventScreenLocked
|| __DATA_CONST.__const _kCMContinuityCaptureEventScreenUnlocked
|| __DATA_CONST.__const _kCMContinuityCaptureEventSidecarConnect
|| __DATA_CONST.__const _kCMContinuityCaptureEventSidecarDeviceCameraStateChange
|| __DATA_CONST.__const _kCMContinuityCaptureEventSidecarDisconnect
|| __DATA_CONST.__const _kCMContinuityCaptureEventSidecarReconnect
|| __DATA_CONST.__const _kCMContinuityCaptureEventStartStream
|| __DATA_CONST.__const _kCMContinuityCaptureEventStopStream
|| __DATA_CONST.__const _kCMContinuityCaptureEventStreamDidReset
|| __DATA_CONST.__const _kCMContinuityCaptureEventStreamDisableForMultipleStream
|| __DATA_CONST.__const _kCMContinuityCaptureEventStreamDisableForSidecarDisplaySession
|| __DATA_CONST.__const _kCMContinuityCaptureEventStreamDisableForWifiContention
|| __DATA_CONST.__const _kCMContinuityCaptureEventStreamEnableForMultipleStreamExit
|| __DATA_CONST.__const _kCMContinuityCaptureEventStreamEnableForSidecarDisplaySessionExit
|| __DATA_CONST.__const _kCMContinuityCaptureEventStreamEnableForWifiContentionExit
|| __DATA_CONST.__const _kCMContinuityCaptureEventStreamInterrupted
|| __DATA_CONST.__const _kCMContinuityCaptureEventStreamWillReset
|| __DATA_CONST.__const _kCMContinuityCaptureEventSystemSleep
|| __DATA_CONST.__const _kCMContinuityCaptureEventSystemWake
|| __DATA_CONST.__const _kCMContinuityCaptureEventTerminate
|| __DATA_CONST.__const _kCMContinuityCaptureEventUserDisconnect
|| __DATA_CONST.__const _kCMContinuityCaptureEventUserPause
|| __DATA_CONST.__const _kCMContinuityCaptureEventUserReconnect
|| __DATA_CONST.__const _kCMContinuityCaptureEventUserResume
|| __DATA_CONST.__const _kCMContinuityCaptureSidecarItemTypeMacName
|| __DATA_CONST.__const _kCMContinuityCaptureSidecarItemTypeSessionGID
|| __DATA_CONST.__const _kCMContinuityCaptureSidecarItemTypeStreamConfiguration
|| __DATA_CONST.__const _kCMContinuityCaptureStateDisabled
|| __DATA_CONST.__const _kCMContinuityCaptureStateInit
|| __DATA_CONST.__const _kCMContinuityCaptureStatePaused
|| __DATA_CONST.__const _kCMContinuityCaptureStateReady
|| __DATA_CONST.__const _kCMContinuityCaptureStateStreaming
|| __DATA_CONST.__const _kCMContinuityCaptureStateTerminated
|| __TEXT.__const _CMContinuityCaptureCoreVersionNumber
|| __TEXT.__const _CMContinuityCaptureCoreVersionString
|| __TEXT.__text _CMContinityCaptureDebugLogEnabled
|| __TEXT.__text _CMContinuityCapture4CCIDFromControlName
|| __TEXT.__text _CMContinuityCaptureClamshellIsClosed
|| __TEXT.__text _CMContinuityCaptureCreateCipherKey
|| __TEXT.__text _CMContinuityCaptureEntityTypeFromMediaIdentifer
|| __TEXT.__text _CMContinuityCaptureGetAVCVideoResolutionForFormat
|| __TEXT.__text _CMContinuityCaptureGetActivateGenerationID
|| __TEXT.__text _CMContinuityCaptureGetBootArgsForKey
|| __TEXT.__text _CMContinuityCaptureGetCurrentTimeString
|| __TEXT.__text _CMContinuityCaptureGetHostTimeInNanoSec
|| __TEXT.__text _CMContinuityCaptureGetMediaProcessUniqueID
|| __TEXT.__text _CMContinuityCaptureGetMessageGenerationID
|| __TEXT.__text _CMContinuityCaptureGetMutableListOfSupportedSidecarSidebandIdentifiers
|| __TEXT.__text _CMContinuityCaptureGetStreamSessionGenerationID
|| __TEXT.__text _CMContinuityCaptureGetStreamUUID
|| __TEXT.__text _CMContinuityCaptureLog
|| __TEXT.__text _CMContinuityCaptureMediaIdentifierFromEntityType
|| __TEXT.__text _CMContinuityCaptureSMCreateTransitionsFromStateToDestinationOnEvents
|| __TEXT.__text _CMContinuityCaptureSMCreateTransitionsFromStateToDestinations
|| __TEXT.__text _CMContinuityCaptureSMCreateTransitionsFromStatesToDestination
|| __TEXT.__text _CMContinuityCaptureSMDeferEventsInState
|| __TEXT.__text _CMContinuityCaptureSMGetMatchingStateEntryEventForExitEvent
|| __TEXT.__text _CMContinuityCaptureSMGetMatchingStateExitEventForEntryEvent
|| __TEXT.__text _CMContinuityCaptureSMIsValidEntryEventForState
|| __TEXT.__text _CMContinuityCaptureSMIsValidExitEventForState
|| __TEXT.__text _CMContinuityCaptureSMValidSameStateEventName
|| __TEXT.__text _CMContinuityCaptureStringFromOSType
|| __TEXT.__text _CMContinuityCaptureStringFromSelector
|| __TEXT.__text _CMContinuityCaptureValidSMEvent
|| __TEXT.__text _CMContinuityCaptureXPCConnectionHasEntitlement
__ AVConference: _AVCKeyDaemonProcessInfoUniquePID
__ AVConference: _OBJC_CLASS_$_AVCAudioStream
__ AVConference: _OBJC_CLASS_$_AVCDaemonProcessInfo
__ AVConference: _OBJC_CLASS_$_AVCMediaStreamConfig
__ AVConference: _OBJC_CLASS_$_AVCMediaStreamNegotiator
__ AVConference: _OBJC_CLASS_$_AVCStreamInput
__ AVConference: _OBJC_CLASS_$_AVCVideoStream
__ AVFoundation: _AVCaptureDeviceTypeBuiltInUltraWideCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInWideAngleCamera
__ AVFoundation: _AVCaptureDeviceTypeDeskViewCamera
__ AVFoundation: _AVCaptureSystemPressureLevelNominal
__ AVFoundation: _AVGQ3J3FEVOOCNOKKTK3XQPUQ47DYY
__ AVFoundation: _AVGestaltGetBoolAnswer
__ AVFoundation: _AVMediaTypeAudio
__ AVFoundation: _AVMediaTypeMetadataObject
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVMetadataObjectTypeFace
__ AVFoundation: _AVMetadataObjectTypeHumanBody
__ AVFoundation: _AVVideoCodecKey
__ AVFoundation: _AVVideoCodecTypeHEVC
__ AVFoundation: _OBJC_CLASS_$_AVCaptureAudioDataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureConnection
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDevice
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMetadataOutput
__ AVFoundation: _OBJC_CLASS_$_AVCaptureMultiCamSession
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoOutput
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoSettings
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoDataOutput
__ AudioToolbox: _AudioServicesPlaySystemSound
__ CMCapture: _FigContinuityCaptureCameraVolatilePreferencesDomain
__ CMCapture: _FigContinuityCaptureCameraVolatilePreferencesKey_InUse
__ CMCapture: _FigContinuityCaptureCameraVolatilePreferencesKey_LastUsedDate
__ CMCapture: _FigContinuityCaptureGetUserPreferenceDisabled
__ CMCapture: _kFigCaptureSampleBufferAttachmentKey_DetectedObjectsInfo
__ CMCapture: _kFigCaptureSampleBufferAttachmentKey_TransportLayerPropagatableAttachments
__ CMCapture: _kFigCaptureStreamDetectedObjectsInfoKey_HumanBodies
__ CMCapture: _kFigCaptureStreamDetectedObjectsInfoKey_HumanFaces
__ CMCapture: _kFigCaptureStreamMetadata_DetectedObjectsInfo
__ CMCapture: _kFigCaptureStreamMetadata_DetectedObjectsSource
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUUIDCreateFromUUIDBytes
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFPreferencesCurrentHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreMedia: _CMAudioFormatDescriptionCreate
__ CoreMedia: _CMAudioFormatDescriptionGetStreamBasicDescription
__ CoreMedia: _CMBlockBufferCreateWithMemoryBlock
__ CoreMedia: _CMBlockBufferGetDataPointer
__ CoreMedia: _CMClockConvertHostTimeToSystemUnits
__ CoreMedia: _CMClockGetHostTimeClock
__ CoreMedia: _CMFormatDescriptionGetMediaSubType
__ CoreMedia: _CMGetAttachment
__ CoreMedia: _CMSampleBufferCreate
__ CoreMedia: _CMSampleBufferGetDataBuffer
__ CoreMedia: _CMSampleBufferGetFormatDescription
__ CoreMedia: _CMSampleBufferGetNumSamples
__ CoreMedia: _CMSampleBufferGetPresentationTimeStamp
__ CoreMedia: _CMSetAttachment
__ CoreMedia: _CMSyncConvertTime
__ CoreMedia: _CMTimeAdd
__ CoreMedia: _CMTimeCompare
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMake
__ CoreMedia: _CMTimeSubtract
__ CoreMedia: _CMVideoFormatDescriptionCreate
__ CoreMedia: _CMVideoFormatDescriptionGetDimensions
__ CoreMedia: _FigDispatchQueueCreateWithPriority
__ CoreMedia: _FigGetCFPreferenceBooleanWithDefault
__ CoreMedia: _FigNote_AllowInternalDefaultLogs
__ CoreMedia: _fig_log_emit
__ CoreMedia: _fig_note_initialize_with_default_work
__ CoreMedia: _kCMFormatDescriptionExtension_FormatName
__ CoreMedia: _kCMTimeInvalid
__ CoreMedia: _kCMTimePositiveInfinity
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSProcessInfoPowerStateDidChangeNotification
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ IOKit: _IONotificationPortCreate
__ IOKit: _IONotificationPortDestroy
__ IOKit: _IONotificationPortSetDispatchQueue
__ IOKit: _IOObjectRelease
__ IOKit: _IORegistryEntryCreateCFProperty
__ IOKit: _IORegistryEntryFromPath
__ IOKit: _IOServiceAddInterestNotification
__ IOKit: _IOServiceGetMatchingService
__ IOKit: _IOServiceMatching
__ IOKit: _kIOMainPortDefault
__ MediaSafetyNet: _MSNMonitorBeginException
__ MediaSafetyNet: _MSNMonitorEndException
__ NearbyInteraction: _OBJC_CLASS_$_NIDevicePresenceConfiguration
__ NearbyInteraction: _OBJC_CLASS_$_NIRegionPredicate
__ NearbyInteraction: _OBJC_CLASS_$_NISession
__ Rapport: _OBJC_CLASS_$_RPStreamSession
__ TimeSync: _OBJC_CLASS_$_TSClockManager
__ TimeSync: _OBJC_CLASS_$_TSgPTPClock
__ TimeSync: _TSInvalidTime
__ TimeSync: _TSNullgPTPClockIdentity
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strncpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_log_pack_fill
__ libSystem.B.dylib: __os_log_pack_size
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_and_wait
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _kOSThermalNotificationName
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _sysctlbyname
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
CMContinuityCaptureState : NSObject
 @property  NSString *name
 @property  NSMutableSet *pendingEvents
 @property  @? entryAction
 @property  @? exitAction

  // instance methods
  -[CMContinuityCaptureState pendingEvents]
  -[CMContinuityCaptureState setEntryAction:]
  -[CMContinuityCaptureState exitAction]
  -[CMContinuityCaptureState .cxx_destruct]
  -[CMContinuityCaptureState setExitAction:]
  -[CMContinuityCaptureState entryAction]
  -[CMContinuityCaptureState setName:]
  -[CMContinuityCaptureState name]
  -[CMContinuityCaptureState setPendingEvents:]
  -[CMContinuityCaptureState initWithAttributes:entryAction:exitAction:]


CMContinuityCaptureStateTransition : NSObject
 @property  CMContinuityCaptureState *srcState
 @property  CMContinuityCaptureState *dstState
 @property  CMContinuityCaptureStateMachineEvent *event
 @property  @? guard
 @property  @? action

  // instance methods
  -[CMContinuityCaptureStateTransition setEvent:]
  -[CMContinuityCaptureStateTransition .cxx_destruct]
  -[CMContinuityCaptureStateTransition action]
  -[CMContinuityCaptureStateTransition event]
  -[CMContinuityCaptureStateTransition setAction:]
  -[CMContinuityCaptureStateTransition guard]
  -[CMContinuityCaptureStateTransition setGuard:]
  -[CMContinuityCaptureStateTransition initWithAttributes:dstState:event:guard:action:]
  -[CMContinuityCaptureStateTransition transactionFromStateOnEvent:event:]
  -[CMContinuityCaptureStateTransition srcState]
  -[CMContinuityCaptureStateTransition setSrcState:]
  -[CMContinuityCaptureStateTransition dstState]
  -[CMContinuityCaptureStateTransition setDstState:]


CMContinuityCaptureStateMachineEvent : NSObject
 @property  NSString *name
 @property  BOOL isEntry
 @property  @? action

  // instance methods
  -[CMContinuityCaptureStateMachineEvent .cxx_destruct]
  -[CMContinuityCaptureStateMachineEvent action]
  -[CMContinuityCaptureStateMachineEvent name]
  -[CMContinuityCaptureStateMachineEvent initWithName:isEntry:eventAction:]
  -[CMContinuityCaptureStateMachineEvent isEntry]


CMContinuityCaptureStateMachine : NSObject
 @property  CMContinuityCaptureState *currentState
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableArray *deferredEvents

  // instance methods
  -[CMContinuityCaptureStateMachine addEvents:]
  -[CMContinuityCaptureStateMachine setCurrentState:]
  -[CMContinuityCaptureStateMachine .cxx_destruct]
  -[CMContinuityCaptureStateMachine setQueue:]
  -[CMContinuityCaptureStateMachine queue]
  -[CMContinuityCaptureStateMachine currentState]
  -[CMContinuityCaptureStateMachine initWithActionDelegate:queue:]
  -[CMContinuityCaptureStateMachine setupStateMachineForExtension]
  -[CMContinuityCaptureStateMachine setupStateMachineForAgent]
  -[CMContinuityCaptureStateMachine stateMachineUserDisconnect:]
  -[CMContinuityCaptureStateMachine stateMachineUserReconnect:]
  -[CMContinuityCaptureStateMachine stateMachineDisableReconnect]
  -[CMContinuityCaptureStateMachine stateMachineStreamDisable:]
  -[CMContinuityCaptureStateMachine stateMachineStreamEnable:]
  -[CMContinuityCaptureStateMachine stateMachinePause:]
  -[CMContinuityCaptureStateMachine stateMachineEnterPause:]
  -[CMContinuityCaptureStateMachine stateMachineExitPause:]
  -[CMContinuityCaptureStateMachine stateMachineResume:]
  -[CMContinuityCaptureStateMachine stateMachineNotifyCompletion:]
  -[CMContinuityCaptureStateMachine stateMachinePauseGuard]
  -[CMContinuityCaptureStateMachine stateMachineConnectionChangeGuard]
  -[CMContinuityCaptureStateMachine stateMachineSidecarConnectGuard]
  -[CMContinuityCaptureStateMachine stateMachineStreamGuard]
  -[CMContinuityCaptureStateMachine stateMachineImageCaptureGuard]
  -[CMContinuityCaptureStateMachine stateMachineStartStream:]
  -[CMContinuityCaptureStateMachine stateMachineStopStream:]
  -[CMContinuityCaptureStateMachine stateMachineSidecarConnect:]
  -[CMContinuityCaptureStateMachine stateMachineSidecarDisconnect:]
  -[CMContinuityCaptureStateMachine stateMachineRestartStream:]
  -[CMContinuityCaptureStateMachine stateMachineForceRestartStream:]
  -[CMContinuityCaptureStateMachine stateMachineTerminate]
  -[CMContinuityCaptureStateMachine stateMachineImageCapture]
  -[CMContinuityCaptureStateMachine eventForName:]
  -[CMContinuityCaptureStateMachine addStateTransitions:]
  -[CMContinuityCaptureStateMachine postSameStateAction:transition:event:]
  -[CMContinuityCaptureStateMachine getDeferredEventsToPostForState:]
  -[CMContinuityCaptureStateMachine getNewStateAfterPostingDeferredEvents:deferredEventsToPost:]
  -[CMContinuityCaptureStateMachine postStateChangeAction:transition:event:]
  -[CMContinuityCaptureStateMachine enqueueEventWithNameToPost:]
  -[CMContinuityCaptureStateMachine _enqueueEventWithNameToPost:]
  -[CMContinuityCaptureStateMachine aggregateEvents]
  -[CMContinuityCaptureStateMachine enqueueEventWithNameToPostOnCurrentQueue:]
  -[CMContinuityCaptureStateMachine notifyCompletion:]
  -[CMContinuityCaptureStateMachine _notifyCompletion:]
  -[CMContinuityCaptureStateMachine actionTypeForEventName:]
  -[CMContinuityCaptureStateMachine postEventWithName:]
  -[CMContinuityCaptureStateMachine deferredEvents]
  -[CMContinuityCaptureStateMachine setDeferredEvents:]


CMContinuityCaptureRemoteVideoDevice : NSObject <CMContinuityCaptureRemoteDevice>
 @property  AVCaptureDevice *videoDevice
 @property  NSArray *controls
 @property  CMContinuityCaptureConfiguration *activeConfiguration
 @property  BOOL centerStageRunning
 @property  CMContinuityCaptureRemoteClient *client
 @property  NSObject<OS_dispatch_queue> *queue
 @property  long long entity
 @property  CMContinuityCaptureDeviceCapabilities *capabilities
 @property  CMContinuityCaptureRemoteCompositeDevice *compositeDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CMContinuityCaptureRemoteVideoDevice streaming]
  -[CMContinuityCaptureRemoteVideoDevice controls]
  -[CMContinuityCaptureRemoteVideoDevice entity]
  -[CMContinuityCaptureRemoteVideoDevice captureOutput:didOutputSampleBuffer:fromConnection:]
  -[CMContinuityCaptureRemoteVideoDevice .cxx_destruct]
  -[CMContinuityCaptureRemoteVideoDevice capabilities]
  -[CMContinuityCaptureRemoteVideoDevice activeConfiguration]
  -[CMContinuityCaptureRemoteVideoDevice client]
  -[CMContinuityCaptureRemoteVideoDevice captureOutput:didFinishCaptureForResolvedSettings:error:]
  -[CMContinuityCaptureRemoteVideoDevice observeValueForKeyPath:ofObject:change:context:]
  -[CMContinuityCaptureRemoteVideoDevice captureOutput:didFinishProcessingPhoto:error:]
  -[CMContinuityCaptureRemoteVideoDevice _observeValueForKeyPath:ofObject:change:context:]
  -[CMContinuityCaptureRemoteVideoDevice streamDidStop:]
  -[CMContinuityCaptureRemoteVideoDevice queue]
  -[CMContinuityCaptureRemoteVideoDevice videoDevice]
  -[CMContinuityCaptureRemoteVideoDevice captureOutput:didDropSampleBuffer:fromConnection:]
  -[CMContinuityCaptureRemoteVideoDevice _abort:]
  -[CMContinuityCaptureRemoteVideoDevice abort:]
  -[CMContinuityCaptureRemoteVideoDevice stream:didStart:error:]
  -[CMContinuityCaptureRemoteVideoDevice streamDidRTPTimeOut:]
  -[CMContinuityCaptureRemoteVideoDevice streamDidRTCPTimeOut:]
  -[CMContinuityCaptureRemoteVideoDevice streamDidServerDie:]
  -[CMContinuityCaptureRemoteVideoDevice didStartStreamInput:]
  -[CMContinuityCaptureRemoteVideoDevice didStopStreamInput:]
  -[CMContinuityCaptureRemoteVideoDevice serverDidDie]
  -[CMContinuityCaptureRemoteVideoDevice configureWithConfiguration:error:]
  -[CMContinuityCaptureRemoteVideoDevice setValueForControl:completion:]
  -[CMContinuityCaptureRemoteVideoDevice startStream:option:completion:]
  -[CMContinuityCaptureRemoteVideoDevice stopStream:option:completion:]
  -[CMContinuityCaptureRemoteVideoDevice postEvent:entity:]
  -[CMContinuityCaptureRemoteVideoDevice handleAVCNegotiation:data:]
  -[CMContinuityCaptureRemoteVideoDevice captureStillImage:entity:completion:]
  -[CMContinuityCaptureRemoteVideoDevice initWithCompositeDevice:entity:capabilities:client:]
  -[CMContinuityCaptureRemoteVideoDevice terminateAVCSession:]
  -[CMContinuityCaptureRemoteVideoDevice resetClient:]
  -[CMContinuityCaptureRemoteVideoDevice resetClientComplete:]
  -[CMContinuityCaptureRemoteVideoDevice debugInfo:]
  -[CMContinuityCaptureRemoteVideoDevice compositeDevice]
  -[CMContinuityCaptureRemoteVideoDevice logStreamSessionSummary]
  -[CMContinuityCaptureRemoteVideoDevice logControlSetSummary:]
  -[CMContinuityCaptureRemoteVideoDevice setupControls]
  -[CMContinuityCaptureRemoteVideoDevice isCenterStageRunning]
  -[CMContinuityCaptureRemoteVideoDevice _terminateAVCSession:]
  -[CMContinuityCaptureRemoteVideoDevice newVideoStreamConfigWithIsWired:key:streamInputID:format:frameRate:]
  -[CMContinuityCaptureRemoteVideoDevice clearAVCArtifacts]
  -[CMContinuityCaptureRemoteVideoDevice dispatchFrame:entity:completion:]
  -[CMContinuityCaptureRemoteVideoDevice createAVCVideoStreamForSidecarStream:]
  -[CMContinuityCaptureRemoteVideoDevice startAVCInputForConfiguration:completion:]
  -[CMContinuityCaptureRemoteVideoDevice stopAVCInput:option:]
  -[CMContinuityCaptureRemoteVideoDevice _postEvent:entity:]
  -[CMContinuityCaptureRemoteVideoDevice _deviceFormat:isCompatibleWithConfiguration:requiringMultiCamSupport:]
  -[CMContinuityCaptureRemoteVideoDevice preStartAVCaptureSessionForConfiguration:]
  -[CMContinuityCaptureRemoteVideoDevice _startStream:option:completion:]
  -[CMContinuityCaptureRemoteVideoDevice _configureWithConfiguration:error:]
  -[CMContinuityCaptureRemoteVideoDevice forceCenterStage:]
  -[CMContinuityCaptureRemoteVideoDevice _stopStream:option:completion:]
  -[CMContinuityCaptureRemoteVideoDevice updateControlStatus]
  -[CMContinuityCaptureRemoteVideoDevice _updateControlStatus]
  -[CMContinuityCaptureRemoteVideoDevice _setValueForControl:completion:]
  -[CMContinuityCaptureRemoteVideoDevice _updatePortraitEffect:]
  -[CMContinuityCaptureRemoteVideoDevice _updateStudioLighting:]
  -[CMContinuityCaptureRemoteVideoDevice restoreConfigurationFrameRate]
  -[CMContinuityCaptureRemoteVideoDevice _updateActiveMaxFrameRate:]
  -[CMContinuityCaptureRemoteVideoDevice _updateActiveMinFrameRate:]
  -[CMContinuityCaptureRemoteVideoDevice _updateVideoZoomFactor:]
  -[CMContinuityCaptureRemoteVideoDevice _updatePhotoOutputConfigs]
  -[CMContinuityCaptureRemoteVideoDevice _shouldPrintSampleBufferLog:]
  -[CMContinuityCaptureRemoteVideoDevice _shouldPrintDroppedSampleBufferLog:]
  -[CMContinuityCaptureRemoteVideoDevice setFaceDrivenAFEnabled:]
  -[CMContinuityCaptureRemoteVideoDevice _setFaceDrivenAFEnabled:forCaptureDevice:]
  -[CMContinuityCaptureRemoteVideoDevice checkThermalLevelPowerModeAndToggleFrameRateThrottling]
  -[CMContinuityCaptureRemoteVideoDevice _throttleFrameRateByThermalLevelPowerMode]
  -[CMContinuityCaptureRemoteVideoDevice _unthrottleFrameRateByThermalLevelPowerMode]


CMContinuityCaptureRemoteDeskcamVideoDevice : CMContinuityCaptureRemoteVideoDevice
 @property  AVCaptureConnection *videoDataConnection
 @property  AVCaptureDevice *deskViewCamera

  // instance methods
  -[CMContinuityCaptureRemoteDeskcamVideoDevice streaming]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice .cxx_destruct]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice initWithCompositeDevice:entity:capabilities:client:]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice _startStream:option:completion:]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice _configureWithConfiguration:error:]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice _stopStream:option:completion:]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice _setValueForControl:completion:]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice _updateActiveMaxFrameRate:]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice _updateActiveMinFrameRate:]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice _throttleFrameRateByThermalLevelPowerMode]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice _unthrottleFrameRateByThermalLevelPowerMode]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice createConnectionsForPrewarming]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice removePrewarmedConnectionsIfNeeded]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice _createConnectionsForPrewarming:]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice videoDataConnection]
  -[CMContinuityCaptureRemoteDeskcamVideoDevice deskViewCamera]


CMContinuityCaptureRemoteAudioDevice : NSObject <CMContinuityCaptureRemoteDevice, AVCaptureAudioDataOutputSampleBufferDelegate>
 @property  AVCaptureDevice *audioDevice
 @property  CMContinuityCaptureRemoteClient *client
 @property  NSObject<OS_dispatch_queue> *queue
 @property  long long entity
 @property  CMContinuityCaptureDeviceCapabilities *capabilities
 @property  CMContinuityCaptureRemoteCompositeDevice *compositeDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CMContinuityCaptureRemoteAudioDevice entity]
  -[CMContinuityCaptureRemoteAudioDevice captureOutput:didOutputSampleBuffer:fromConnection:]
  -[CMContinuityCaptureRemoteAudioDevice .cxx_destruct]
  -[CMContinuityCaptureRemoteAudioDevice capabilities]
  -[CMContinuityCaptureRemoteAudioDevice client]
  -[CMContinuityCaptureRemoteAudioDevice observeValueForKeyPath:ofObject:change:context:]
  -[CMContinuityCaptureRemoteAudioDevice _observeValueForKeyPath:ofObject:change:context:]
  -[CMContinuityCaptureRemoteAudioDevice streamDidStop:]
  -[CMContinuityCaptureRemoteAudioDevice queue]
  -[CMContinuityCaptureRemoteAudioDevice captureOutput:didDropSampleBuffer:fromConnection:]
  -[CMContinuityCaptureRemoteAudioDevice audioDevice]
  -[CMContinuityCaptureRemoteAudioDevice _abort:]
  -[CMContinuityCaptureRemoteAudioDevice abort:]
  -[CMContinuityCaptureRemoteAudioDevice stream:didStart:error:]
  -[CMContinuityCaptureRemoteAudioDevice streamDidRTPTimeOut:]
  -[CMContinuityCaptureRemoteAudioDevice streamDidRTCPTimeOut:]
  -[CMContinuityCaptureRemoteAudioDevice streamDidServerDie:]
  -[CMContinuityCaptureRemoteAudioDevice didStartStreamInput:]
  -[CMContinuityCaptureRemoteAudioDevice didStopStreamInput:]
  -[CMContinuityCaptureRemoteAudioDevice setValueForControl:completion:]
  -[CMContinuityCaptureRemoteAudioDevice startStream:option:completion:]
  -[CMContinuityCaptureRemoteAudioDevice stopStream:option:completion:]
  -[CMContinuityCaptureRemoteAudioDevice postEvent:entity:]
  -[CMContinuityCaptureRemoteAudioDevice handleAVCNegotiation:data:]
  -[CMContinuityCaptureRemoteAudioDevice handleSynchronizeAudioClockCompletion]
  -[CMContinuityCaptureRemoteAudioDevice initWithCompositeDevice:entity:capabilities:client:]
  -[CMContinuityCaptureRemoteAudioDevice terminateAVCSession:]
  -[CMContinuityCaptureRemoteAudioDevice resetClient:]
  -[CMContinuityCaptureRemoteAudioDevice resetClientComplete:]
  -[CMContinuityCaptureRemoteAudioDevice debugInfo:]
  -[CMContinuityCaptureRemoteAudioDevice compositeDevice]
  -[CMContinuityCaptureRemoteAudioDevice _terminateAVCSession:]
  -[CMContinuityCaptureRemoteAudioDevice clearAVCArtifacts]
  -[CMContinuityCaptureRemoteAudioDevice dispatchFrame:entity:completion:]
  -[CMContinuityCaptureRemoteAudioDevice startAVCInputForConfiguration:completion:]
  -[CMContinuityCaptureRemoteAudioDevice stopAVCInput:option:]
  -[CMContinuityCaptureRemoteAudioDevice _postEvent:entity:]
  -[CMContinuityCaptureRemoteAudioDevice _startStream:option:completion:]
  -[CMContinuityCaptureRemoteAudioDevice _stopStream:option:completion:]
  -[CMContinuityCaptureRemoteAudioDevice _shouldPrintSampleBufferLog:]
  -[CMContinuityCaptureRemoteAudioDevice _shouldPrintDroppedSampleBufferLog:]
  -[CMContinuityCaptureRemoteAudioDevice createAVCAudioStreamForSidecarStream:]
  -[CMContinuityCaptureRemoteAudioDevice newAudioStreamConfigWithIsWired:key:streamInputID:networkClock:]
  -[CMContinuityCaptureRemoteAudioDevice _processIncomingAudioBuffer:]
  -[CMContinuityCaptureRemoteAudioDevice _createSampleBufferForAudioData:dataRange:pts:formatDescription:]
  -[CMContinuityCaptureRemoteAudioDevice _resetNetworkSampleTime]
  -[CMContinuityCaptureRemoteAudioDevice _dispatchAudioFrame:]


CMContinuityCaptureConfiguration : NSObject <NSSecureCoding>
 @property  long long entity
 @property  NSUUID *sessionID
 @property  unsigned long generationID
 @property  BOOL portraitEffectEnabled
 @property  BOOL centerStageEnabled
 @property  BOOL forceEnableCenterStage
 @property  BOOL faceDetectionEnabled
 @property  BOOL humanBodyDetectionEnabled
 @property  BOOL studioLightingEnabled
 @property  CMContinuityCaptureStreamFormat *format
 @property  unsigned int maxFrameRate
 @property  unsigned int minFrameRate
 @property  double videoZoomFactor
 @property  BOOL asyncStillCaptureEnabled
 @property  NSDictionary *asyncStillCaptureConfigs
 @property  int maxPhotoQualityPrioritization
 @property  long long deskViewCameraMode

  // class methods
  +[CMContinuityCaptureConfiguration supportsSecureCoding]

  // instance methods
  -[CMContinuityCaptureConfiguration setVideoZoomFactor:]
  -[CMContinuityCaptureConfiguration setStudioLightingEnabled:]
  -[CMContinuityCaptureConfiguration videoZoomFactor]
  -[CMContinuityCaptureConfiguration studioLightingEnabled]
  -[CMContinuityCaptureConfiguration generationID]
  -[CMContinuityCaptureConfiguration setGenerationID:]
  -[CMContinuityCaptureConfiguration faceDetectionEnabled]
  -[CMContinuityCaptureConfiguration sessionID]
  -[CMContinuityCaptureConfiguration minFrameRate]
  -[CMContinuityCaptureConfiguration entity]
  -[CMContinuityCaptureConfiguration encodeWithCoder:]
  -[CMContinuityCaptureConfiguration .cxx_destruct]
  -[CMContinuityCaptureConfiguration deskViewCameraMode]
  -[CMContinuityCaptureConfiguration setDeskViewCameraMode:]
  -[CMContinuityCaptureConfiguration setCenterStageEnabled:]
  -[CMContinuityCaptureConfiguration maxPhotoQualityPrioritization]
  -[CMContinuityCaptureConfiguration setFaceDetectionEnabled:]
  -[CMContinuityCaptureConfiguration setFormat:]
  -[CMContinuityCaptureConfiguration format]
  -[CMContinuityCaptureConfiguration setMinFrameRate:]
  -[CMContinuityCaptureConfiguration setSessionID:]
  -[CMContinuityCaptureConfiguration maxFrameRate]
  -[CMContinuityCaptureConfiguration setEntity:]
  -[CMContinuityCaptureConfiguration init]
  -[CMContinuityCaptureConfiguration initWithCoder:]
  -[CMContinuityCaptureConfiguration setMaxFrameRate:]
  -[CMContinuityCaptureConfiguration portraitEffectEnabled]
  -[CMContinuityCaptureConfiguration setPortraitEffectEnabled:]
  -[CMContinuityCaptureConfiguration centerStageEnabled]
  -[CMContinuityCaptureConfiguration forceEnableCenterStage]
  -[CMContinuityCaptureConfiguration setForceEnableCenterStage:]
  -[CMContinuityCaptureConfiguration humanBodyDetectionEnabled]
  -[CMContinuityCaptureConfiguration setHumanBodyDetectionEnabled:]
  -[CMContinuityCaptureConfiguration asyncStillCaptureEnabled]
  -[CMContinuityCaptureConfiguration setAsyncStillCaptureEnabled:]
  -[CMContinuityCaptureConfiguration asyncStillCaptureConfigs]
  -[CMContinuityCaptureConfiguration setAsyncStillCaptureConfigs:]


CMContinuityCaptureClientBase : NSObject <ContinuityCaptureControlDelegate, ContinuityCaptureAVCNegotiationDataDelegate, ContinuityCaptureClockSynchronizationDelegate, ContinuityCaptureStillImageCaptureDelegate>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  long long transport
 @property  NSArray *mediaIdentifers
 @property  CMContinuityCaptureTimeSyncClock *timeSyncClock
 @property  unsigned long currentSessionID
 @property  @? statusHandler
 @property  BOOL active
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CMContinuityCaptureClientBase initialize]

  // instance methods
  -[CMContinuityCaptureClientBase transport]
  -[CMContinuityCaptureClientBase cancel:]
  -[CMContinuityCaptureClientBase active]
  -[CMContinuityCaptureClientBase connectionInterrupted:]
  -[CMContinuityCaptureClientBase .cxx_destruct]
  -[CMContinuityCaptureClientBase observeValueForKeyPath:ofObject:change:context:]
  -[CMContinuityCaptureClientBase queue]
  -[CMContinuityCaptureClientBase debugInfo]
  -[CMContinuityCaptureClientBase timeSyncClock]
  -[CMContinuityCaptureClientBase activate:]
  -[CMContinuityCaptureClientBase reset:error:]
  -[CMContinuityCaptureClientBase currentSessionID]
  -[CMContinuityCaptureClientBase setCurrentSessionID:]
  -[CMContinuityCaptureClientBase statusHandler]
  -[CMContinuityCaptureClientBase setValueForControl:completion:]
  -[CMContinuityCaptureClientBase handleAVCNegotiation:data:]
  -[CMContinuityCaptureClientBase _setValueForControl:completion:]
  -[CMContinuityCaptureClientBase initWithQueue:mediaIdentifers:]
  -[CMContinuityCaptureClientBase logTimeSyncFailures:]
  -[CMContinuityCaptureClientBase logActivationFailure]
  -[CMContinuityCaptureClientBase enqueueResponse:identifier:]
  -[CMContinuityCaptureClientBase setupSidecarStreams:earlyStreamCompletion:timeSyncClockCompletion:option:]
  -[CMContinuityCaptureClientBase mediaIdentifers]
  -[CMContinuityCaptureClientBase sidecarStreamForIdentifier:]
  -[CMContinuityCaptureClientBase registerOnetimeCallackForActivationCompletionOfEntity:completion:]
  -[CMContinuityCaptureClientBase activateSidecarStream:completion:]
  -[CMContinuityCaptureClientBase createTimeSyncClockForSession:completion:]
  -[CMContinuityCaptureClientBase activateSidecarStreams:option:]
  -[CMContinuityCaptureClientBase sendMessage:message:completion:]
  -[CMContinuityCaptureClientBase _sendMessage:message:completion:]
  -[CMContinuityCaptureClientBase setConnectionInterruptHandler:]
  -[CMContinuityCaptureClientBase teardownSidecarStreams:completion:]
  -[CMContinuityCaptureClientBase _handleAVCNegotiation:data:]


CMContinuityCaptureThermalMonitor : NSObject
 @property  unsigned long thermalLevel

  // instance methods
  -[CMContinuityCaptureThermalMonitor dealloc]
  -[CMContinuityCaptureThermalMonitor .cxx_destruct]
  -[CMContinuityCaptureThermalMonitor initWithQueue:delegate:]
  -[CMContinuityCaptureThermalMonitor thermalLevel]
  -[CMContinuityCaptureThermalMonitor _thermalNotification:]


CMContinuityCaptureDeviceCapabilities : NSObject <CMContinuityCaptureDictionaryRepresentable>
 @property  long long entityType
 @property  NSArray *streamFormats
 @property  NSArray *controls
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CMContinuityCaptureDeviceCapabilities capabilitiesForEntityType:]
  +[CMContinuityCaptureDeviceCapabilities _resolvedStreamFormatsForEntityType:]
  +[CMContinuityCaptureDeviceCapabilities _resolvedControlsForEntityType:]
  +[CMContinuityCaptureDeviceCapabilities avcaptureDeviceSupportsStudioLighting:]

  // instance methods
  -[CMContinuityCaptureDeviceCapabilities controls]
  -[CMContinuityCaptureDeviceCapabilities .cxx_destruct]
  -[CMContinuityCaptureDeviceCapabilities initWithDictionaryRepresentation:]
  -[CMContinuityCaptureDeviceCapabilities dictionaryRepresentation]
  -[CMContinuityCaptureDeviceCapabilities entityType]
  -[CMContinuityCaptureDeviceCapabilities initWithEntityType:streamFormats:controls:]
  -[CMContinuityCaptureDeviceCapabilities streamFormats]


CMContinuityCaptureCapabilities : NSObject <CMContinuityCaptureDictionaryRepresentable>
 @property  {?=qqq} capabilitiesVersion
 @property  NSArray *devicesCapabilities
 @property  BOOL userDisabled
 @property  BOOL inUse
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CMContinuityCaptureCapabilities capabilitiesForCurrentDevice]

  // instance methods
  -[CMContinuityCaptureCapabilities capabilitiesVersion]
  -[CMContinuityCaptureCapabilities .cxx_destruct]
  -[CMContinuityCaptureCapabilities inUse]
  -[CMContinuityCaptureCapabilities initWithDictionaryRepresentation:]
  -[CMContinuityCaptureCapabilities dictionaryRepresentation]
  -[CMContinuityCaptureCapabilities userDisabled]
  -[CMContinuityCaptureCapabilities initWithCapabilitiesVersion:devicesCapabilities:userDisabled:inUse:]
  -[CMContinuityCaptureCapabilities devicesCapabilities]


CMContinuityCaptureControl : NSObject <NSSecureCoding, NSCopying, CMContinuityCaptureDictionaryRepresentable>
 @property  NSString *name
 @property  long long entity
 @property  NSDictionary *attributes
 @property  {?=qqq} minimumSupportedVersion
 @property  id value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CMContinuityCaptureControl supportsSecureCoding]

  // instance methods
  -[CMContinuityCaptureControl minimumSupportedVersion]
  -[CMContinuityCaptureControl attributes]
  -[CMContinuityCaptureControl entity]
  -[CMContinuityCaptureControl encodeWithCoder:]
  -[CMContinuityCaptureControl .cxx_destruct]
  -[CMContinuityCaptureControl initWithDictionaryRepresentation:]
  -[CMContinuityCaptureControl setValue:]
  -[CMContinuityCaptureControl dictionaryRepresentation]
  -[CMContinuityCaptureControl copyWithZone:]
  -[CMContinuityCaptureControl value]
  -[CMContinuityCaptureControl name]
  -[CMContinuityCaptureControl initWithCoder:]
  -[CMContinuityCaptureControl initWithName:attributes:entity:minimumSupportedVersion:value:]


CMContinuityCaptureRemoteClient : CMContinuityCaptureClientBase <ContinuityCaptureEventDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CMContinuityCaptureRemoteClient .cxx_destruct]
  -[CMContinuityCaptureRemoteClient debugInfo]
  -[CMContinuityCaptureRemoteClient postEvent:entity:]
  -[CMContinuityCaptureRemoteClient synchronizeAudioClockWithSampleTime:networkTime:clockGrandMasterIdentifier:]
  -[CMContinuityCaptureRemoteClient didCaptureStillImage:entity:]
  -[CMContinuityCaptureRemoteClient _postEvent:entity:]
  -[CMContinuityCaptureRemoteClient enqueueResponse:identifier:]
  -[CMContinuityCaptureRemoteClient setupSidecarStreams:earlyStreamCompletion:timeSyncClockCompletion:option:]
  -[CMContinuityCaptureRemoteClient teardownSidecarStreams:completion:]
  -[CMContinuityCaptureRemoteClient initWithRequest:mediaIdentifiers:streamDelegate:controlDelegate:avcNegotiationDelegate:clockSynchronizationDelegate:stillImageCaptureDelegate:queue:]
  -[CMContinuityCaptureRemoteClient logConnectionTimeout]
  -[CMContinuityCaptureRemoteClient _synchronizeAudioClockWithSampleTime:networkTime:clockGrandMasterIdentifier:]
  -[CMContinuityCaptureRemoteClient _didCaptureStillImage:entity:]
  -[CMContinuityCaptureRemoteClient postCommandForSelector:args:]
  -[CMContinuityCaptureRemoteClient notifyCompletion]
  -[CMContinuityCaptureRemoteClient _notifyCompletion]
  -[CMContinuityCaptureRemoteClient enqueueCommandForSelector:args:]
  -[CMContinuityCaptureRemoteClient _enqueueCommandForSelector:args:]


CMContinuityCaptureTimeSyncClock : NSObject
 @property  unsigned long clockIdentifier
 @property  unsigned long grandMasterIdentifier
 @property  NSString *clockDeviceUID
 @property  BOOL connectedToPeer

  // class methods
  +[CMContinuityCaptureTimeSyncClock initialize]

  // instance methods
  -[CMContinuityCaptureTimeSyncClock dealloc]
  -[CMContinuityCaptureTimeSyncClock .cxx_destruct]
  -[CMContinuityCaptureTimeSyncClock setClockIdentifier:]
  -[CMContinuityCaptureTimeSyncClock clockIdentifier]
  -[CMContinuityCaptureTimeSyncClock initWithClockIdentifier:]
  -[CMContinuityCaptureTimeSyncClock clockDeviceUID]
  -[CMContinuityCaptureTimeSyncClock setClockDeviceUID:]
  -[CMContinuityCaptureTimeSyncClock isConnectedToPeer]
  -[CMContinuityCaptureTimeSyncClock domainTimeForMachAbsoluteTime:]
  -[CMContinuityCaptureTimeSyncClock machAbsoluteTimeForDomainTime:]
  -[CMContinuityCaptureTimeSyncClock startEmittingHeartBeatSignposts]
  -[CMContinuityCaptureTimeSyncClock stopEmittingHeartBeatSignposts]
  -[CMContinuityCaptureTimeSyncClock grandMasterIdentifier]
  -[CMContinuityCaptureTimeSyncClock setGrandMasterIdentifier:]


CMContinuityCaptureRemoteCompositeDevice : NSObject <CMContinuityCaptureThermalMonitorDelegate, ContinuityCaptureControlDelegate, ContinuityCaptureStreamDelegate, ContinuityCaptureEventDelegate, ContinuityCaptureAVCNegotiationDataDelegate, ContinuityCaptureClockSynchronizationDelegate, ContinuityCaptureStillImageCaptureDelegate>
 @property  CMContinuityCaptureRemoteClient *client
 @property  NSArray *continuityCaptureDevices
 @property  NSUUID *sidecarIdentifier
 @property  AVCaptureSession *captureSession
 @property  AVCaptureSession *audioCaptureSession
 @property  BOOL streaming
 @property  NSSet *activeAVCaptureStreamEntitySet
 @property  NSArray *controls
 @property  int throttlingFrameRateLevel
 @property  long long deskViewCameraMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CMContinuityCaptureRemoteCompositeDevice reset:]
  -[CMContinuityCaptureRemoteCompositeDevice _registerForBatteryNotifications]
  -[CMContinuityCaptureRemoteCompositeDevice streaming]
  -[CMContinuityCaptureRemoteCompositeDevice controls]
  -[CMContinuityCaptureRemoteCompositeDevice dealloc]
  -[CMContinuityCaptureRemoteCompositeDevice lowPowerModeChanged:]
  -[CMContinuityCaptureRemoteCompositeDevice .cxx_destruct]
  -[CMContinuityCaptureRemoteCompositeDevice deskViewCameraMode]
  -[CMContinuityCaptureRemoteCompositeDevice _reset:]
  -[CMContinuityCaptureRemoteCompositeDevice client]
  -[CMContinuityCaptureRemoteCompositeDevice observeValueForKeyPath:ofObject:change:context:]
  -[CMContinuityCaptureRemoteCompositeDevice _observeValueForKeyPath:ofObject:change:context:]
  -[CMContinuityCaptureRemoteCompositeDevice invalidate]
  -[CMContinuityCaptureRemoteCompositeDevice postNotification:value:]
  -[CMContinuityCaptureRemoteCompositeDevice _abort:]
  -[CMContinuityCaptureRemoteCompositeDevice captureSession]
  -[CMContinuityCaptureRemoteCompositeDevice abort:]
  -[CMContinuityCaptureRemoteCompositeDevice setValueForControl:completion:]
  -[CMContinuityCaptureRemoteCompositeDevice startStream:option:completion:]
  -[CMContinuityCaptureRemoteCompositeDevice stopStream:option:completion:]
  -[CMContinuityCaptureRemoteCompositeDevice postEvent:entity:]
  -[CMContinuityCaptureRemoteCompositeDevice handleAVCNegotiation:data:]
  -[CMContinuityCaptureRemoteCompositeDevice handleSynchronizeAudioClockCompletion]
  -[CMContinuityCaptureRemoteCompositeDevice captureStillImage:entity:completion:]
  -[CMContinuityCaptureRemoteCompositeDevice terminateAVCSession:]
  -[CMContinuityCaptureRemoteCompositeDevice setupControls]
  -[CMContinuityCaptureRemoteCompositeDevice isCenterStageRunning]
  -[CMContinuityCaptureRemoteCompositeDevice _terminateAVCSession:]
  -[CMContinuityCaptureRemoteCompositeDevice _postEvent:entity:]
  -[CMContinuityCaptureRemoteCompositeDevice preStartAVCaptureSessionForConfiguration:]
  -[CMContinuityCaptureRemoteCompositeDevice _startStream:option:completion:]
  -[CMContinuityCaptureRemoteCompositeDevice forceCenterStage:]
  -[CMContinuityCaptureRemoteCompositeDevice _stopStream:option:completion:]
  -[CMContinuityCaptureRemoteCompositeDevice thermalLevelChanged:]
  -[CMContinuityCaptureRemoteCompositeDevice initWithSidecarRequest:videoPreviewLayer:commandNotificationDelegate:sessionID:statusHandler:]
  -[CMContinuityCaptureRemoteCompositeDevice activateClient:]
  -[CMContinuityCaptureRemoteCompositeDevice resetClientWithNewSidecarRequest:completion:]
  -[CMContinuityCaptureRemoteCompositeDevice setDeskViewCameraModeOnDefaultVideoCamera:]
  -[CMContinuityCaptureRemoteCompositeDevice _setDeskViewCameraModeOnDefaultVideoCamera:]
  -[CMContinuityCaptureRemoteCompositeDevice continuityCaptureDevices]
  -[CMContinuityCaptureRemoteCompositeDevice setCenterStageForceEnabled:]
  -[CMContinuityCaptureRemoteCompositeDevice centerStageForceEnabled]
  -[CMContinuityCaptureRemoteCompositeDevice sidecarIdentifier]
  -[CMContinuityCaptureRemoteCompositeDevice logDebugInfo:]
  -[CMContinuityCaptureRemoteCompositeDevice _logDebugInfo:]
  -[CMContinuityCaptureRemoteCompositeDevice setupCaptureDevices:multiCamRequired:]
  -[CMContinuityCaptureRemoteCompositeDevice setupClient:]
  -[CMContinuityCaptureRemoteCompositeDevice isUSBConnected]
  -[CMContinuityCaptureRemoteCompositeDevice restartStream:option:completion:]
  -[CMContinuityCaptureRemoteCompositeDevice _restartStream:option:completion:]
  -[CMContinuityCaptureRemoteCompositeDevice isDeskCamRunning]
  -[CMContinuityCaptureRemoteCompositeDevice prewarmDeskCam]
  -[CMContinuityCaptureRemoteCompositeDevice tearDownPrewarmedDeskCamIfNeeded]
  -[CMContinuityCaptureRemoteCompositeDevice startVideoCaptureSessionIfNeeded:]
  -[CMContinuityCaptureRemoteCompositeDevice preStartStreamForConfiguration:]
  -[CMContinuityCaptureRemoteCompositeDevice _executeAbort:]
  -[CMContinuityCaptureRemoteCompositeDevice _startVideoCaptureSessionIfNeeded:]
  -[CMContinuityCaptureRemoteCompositeDevice stopVideoStreamForConnections:error:]
  -[CMContinuityCaptureRemoteCompositeDevice _stopVideoStreamForConnections:error:]
  -[CMContinuityCaptureRemoteCompositeDevice removeConnections:]
  -[CMContinuityCaptureRemoteCompositeDevice _removeConnections:]
  -[CMContinuityCaptureRemoteCompositeDevice stopVideoCaptureSessionIfNeeded:]
  -[CMContinuityCaptureRemoteCompositeDevice _stopVideoCaptureSessionIfNeeded:]
  -[CMContinuityCaptureRemoteCompositeDevice throttleFrameRateIfNeeded]
  -[CMContinuityCaptureRemoteCompositeDevice _throttleFrameRateIfNeeded]
  -[CMContinuityCaptureRemoteCompositeDevice startAudioCaptureSession:]
  -[CMContinuityCaptureRemoteCompositeDevice _startAudioCaptureSession:]
  -[CMContinuityCaptureRemoteCompositeDevice stopAudioCaptureSession:]
  -[CMContinuityCaptureRemoteCompositeDevice _stopAudioCaptureSession:]
  -[CMContinuityCaptureRemoteCompositeDevice _postNotification:value:]
  -[CMContinuityCaptureRemoteCompositeDevice configureCaptureSessionForConnections:]
  -[CMContinuityCaptureRemoteCompositeDevice _configureCaptureSessionForConnections:]
  -[CMContinuityCaptureRemoteCompositeDevice configureAudioCaptureSessionForInput:andOutput:]
  -[CMContinuityCaptureRemoteCompositeDevice _configureAudioCaptureSessionForInput:andOutput:]
  -[CMContinuityCaptureRemoteCompositeDevice _unregisterBatteryNotifications]
  -[CMContinuityCaptureRemoteCompositeDevice throttlingFrameRateLevel]
  -[CMContinuityCaptureRemoteCompositeDevice getThrottlingFrameRateByThermalLevelAndLowPowerModeWithDefault:]
  -[CMContinuityCaptureRemoteCompositeDevice _handleThermalLevelLowPowerModeChange]
  -[CMContinuityCaptureRemoteCompositeDevice setDefaultVideoCameraFaceDrivenAFEnabled:]
  -[CMContinuityCaptureRemoteCompositeDevice audioCaptureSession]
  -[CMContinuityCaptureRemoteCompositeDevice activeAVCaptureStreamEntitySet]


CMContinuityCaptureMSNExceptionMonitor : NSObject
  // class methods
  +[CMContinuityCaptureMSNExceptionMonitor initialize]
  +[CMContinuityCaptureMSNExceptionMonitor sharedMonitor]

  // instance methods
  -[CMContinuityCaptureMSNExceptionMonitor reset]
  -[CMContinuityCaptureMSNExceptionMonitor .cxx_destruct]
  -[CMContinuityCaptureMSNExceptionMonitor _init]
  -[CMContinuityCaptureMSNExceptionMonitor incrementExceptionCountForEntity:]
  -[CMContinuityCaptureMSNExceptionMonitor decrementExceptionCountForEntity:]


CMContinuityCapturePongSoundManager : NSObject <CMContinuityCaptureProximityMonitorDelegate>
 @property  CMContinuityCaptureRemoteCompositeDevice *compositeDevice

  // instance methods
  -[CMContinuityCapturePongSoundManager .cxx_destruct]
  -[CMContinuityCapturePongSoundManager compositeDevice]
  -[CMContinuityCapturePongSoundManager device:isNearby:]
  -[CMContinuityCapturePongSoundManager initWithCompositeDevice:]
  -[CMContinuityCapturePongSoundManager pongIfNeededWithShouldConsiderPongHistory:]
  -[CMContinuityCapturePongSoundManager _shouldUseNearbyInteractionToDeterminePongSound]
  -[CMContinuityCapturePongSoundManager _playPongSoundForIdentifier:]


CMContinuityCaptureStreamFormat : NSObject <NSSecureCoding, CMContinuityCaptureDictionaryRepresentable>
 @property  NSString *name
 @property  unsigned long width
 @property  unsigned long height
 @property  unsigned int pixelFormat
 @property  unsigned int minFrameRate
 @property  unsigned int maxFrameRate
 @property  r^{opaqueCMFormatDescription=} formatDescription
 @property  long long entity
 @property  {?=qqq} minimumSupportedVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CMContinuityCaptureStreamFormat supportsSecureCoding]

  // instance methods
  -[CMContinuityCaptureStreamFormat minimumSupportedVersion]
  -[CMContinuityCaptureStreamFormat pixelFormat]
  -[CMContinuityCaptureStreamFormat minFrameRate]
  -[CMContinuityCaptureStreamFormat width]
  -[CMContinuityCaptureStreamFormat entity]
  -[CMContinuityCaptureStreamFormat encodeWithCoder:]
  -[CMContinuityCaptureStreamFormat height]
  -[CMContinuityCaptureStreamFormat .cxx_destruct]
  -[CMContinuityCaptureStreamFormat formatDescription]
  -[CMContinuityCaptureStreamFormat initWithDictionaryRepresentation:]
  -[CMContinuityCaptureStreamFormat dictionaryRepresentation]
  -[CMContinuityCaptureStreamFormat name]
  -[CMContinuityCaptureStreamFormat maxFrameRate]
  -[CMContinuityCaptureStreamFormat initWithCoder:]
  -[CMContinuityCaptureStreamFormat initWithName:width:height:pixelFormat:minFrameRate:maxFrameRate:entity:minimumSupportedVersion:]


CMContinuityCaptureProximityMonitor : NSObject <NIInternalSessionDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CMContinuityCaptureProximityMonitor _invalidate]
  -[CMContinuityCaptureProximityMonitor dealloc]
  -[CMContinuityCaptureProximityMonitor .cxx_destruct]
  -[CMContinuityCaptureProximityMonitor initWithQueue:delegate:]
  -[CMContinuityCaptureProximityMonitor invalidate]
  -[CMContinuityCaptureProximityMonitor sessionSuspensionEnded:]
  -[CMContinuityCaptureProximityMonitor session:object:didUpdateRegion:previousRegion:]
  -[CMContinuityCaptureProximityMonitor sessionWasSuspended:]
  -[CMContinuityCaptureProximityMonitor session:didInvalidateWithError:]
  -[CMContinuityCaptureProximityMonitor beginTracking:]
  -[CMContinuityCaptureProximityMonitor endTracking:]
  -[CMContinuityCaptureProximityMonitor isDeviceNearby:]
  -[CMContinuityCaptureProximityMonitor isDeviceKnown:]
  -[CMContinuityCaptureProximityMonitor _startNearbyInteractionSession]


CMContinuityCaptureStillImageRequest : NSObject <NSSecureCoding>
 @property  long long uniqueID
 @property  NSString *compressedFormat
 @property  BOOL highResolutionPhotoEnabled
 @property  int flashMode
 @property  int photoQualityPrioritization
 @property  {?=ii} maxPhotoDimensions
 @property  BOOL captureComplete
 @property  NSNumber *networkTimestamp
 @property  NSError *error
 @property  NSData *imageFileData
 @property  unsigned int imageCodecType
 @property  int imageWidth
 @property  int imageHeight
 @property  @? completionHandler

  // class methods
  +[CMContinuityCaptureStillImageRequest supportsSecureCoding]

  // instance methods
  -[CMContinuityCaptureStillImageRequest setFlashMode:]
  -[CMContinuityCaptureStillImageRequest flashMode]
  -[CMContinuityCaptureStillImageRequest uniqueID]
  -[CMContinuityCaptureStillImageRequest photoQualityPrioritization]
  -[CMContinuityCaptureStillImageRequest encodeWithCoder:]
  -[CMContinuityCaptureStillImageRequest error]
  -[CMContinuityCaptureStillImageRequest maxPhotoDimensions]
  -[CMContinuityCaptureStillImageRequest .cxx_destruct]
  -[CMContinuityCaptureStillImageRequest setError:]
  -[CMContinuityCaptureStillImageRequest copyWithZone:]
  -[CMContinuityCaptureStillImageRequest setUniqueID:]
  -[CMContinuityCaptureStillImageRequest setMaxPhotoDimensions:]
  -[CMContinuityCaptureStillImageRequest setPhotoQualityPrioritization:]
  -[CMContinuityCaptureStillImageRequest setCompletionHandler:]
  -[CMContinuityCaptureStillImageRequest completionHandler]
  -[CMContinuityCaptureStillImageRequest init]
  -[CMContinuityCaptureStillImageRequest initWithCoder:]
  -[CMContinuityCaptureStillImageRequest imageWidth]
  -[CMContinuityCaptureStillImageRequest imageHeight]
  -[CMContinuityCaptureStillImageRequest highResolutionPhotoEnabled]
  -[CMContinuityCaptureStillImageRequest setHighResolutionPhotoEnabled:]
  -[CMContinuityCaptureStillImageRequest setImageHeight:]
  -[CMContinuityCaptureStillImageRequest setImageWidth:]
  -[CMContinuityCaptureStillImageRequest compressedFormat]
  -[CMContinuityCaptureStillImageRequest setCompressedFormat:]
  -[CMContinuityCaptureStillImageRequest captureComplete]
  -[CMContinuityCaptureStillImageRequest setCaptureComplete:]
  -[CMContinuityCaptureStillImageRequest networkTimestamp]
  -[CMContinuityCaptureStillImageRequest setNetworkTimestamp:]
  -[CMContinuityCaptureStillImageRequest imageFileData]
  -[CMContinuityCaptureStillImageRequest setImageFileData:]
  -[CMContinuityCaptureStillImageRequest imageCodecType]
  -[CMContinuityCaptureStillImageRequest setImageCodecType:]


01 00 0a00 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCAudioStream 
01 00 0a00 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCDaemonProcessInfo 
01 00 0a00 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCMediaStreamConfig 
01 00 0a00 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCMediaStreamNegotiator 
01 00 0a00 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCStreamInput 
01 00 0a00 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCVideoStream 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureAudioDataOutput 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureConnection 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDevice 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMetadataOutput 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureMultiCamSession 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoOutput 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoSettings 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 0c00 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoDataOutput 
01 00 0200 /System/Library/Frameworks/NearbyInteraction.framework/NearbyInteraction: NIDevicePresenceConfiguration 
01 00 0200 /System/Library/Frameworks/NearbyInteraction.framework/NearbyInteraction: NIRegionPredicate 
01 00 0200 /System/Library/Frameworks/NearbyInteraction.framework/NearbyInteraction: NISession 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0900 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPStreamSession 
01 00 0600 /System/Library/PrivateFrameworks/TimeSync.framework/TimeSync: TSClockManager 
01 00 0600 /System/Library/PrivateFrameworks/TimeSync.framework/TimeSync: TSgPTPClock 
