|| __DATA.__data _OBJC_METACLASS_$_MFAudioSessionConfiguration
|| __DATA.__data _OBJC_METACLASS_$_MFDescription
|| __DATA.__data _OBJC_METACLASS_$_MFPlaybackStackControllerImplementation
|| __DATA.__objc_data _OBJC_CLASS_$_MFAudioSessionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_MFDescription
|| __DATA.__objc_data _OBJC_CLASS_$_MFPlaybackStackControllerImplementation
|| __TEXT.__const _MediaFoundationVersionNumber
|| __TEXT.__const _MediaFoundationVersionString
__ AVFoundation: _AVAudioSessionCategoryPlayback
__ AVFoundation: _AVAudioSessionInterruptionNotification
__ AVFoundation: _AVAudioSessionInterruptionOptionKey
__ AVFoundation: _AVAudioSessionInterruptionTypeKey
__ AVFoundation: _AVAudioSessionInterruptionWasSuspendedKey
__ AVFoundation: _AVAudioSessionInterruptorNameKey
__ AVFoundation: _AVAudioSessionMediaServicesWereLostNotification
__ AVFoundation: _AVAudioSessionMediaServicesWereResetNotification
__ AVFoundation: _AVAudioSessionModeDefault
__ AVFoundation: _AVAudioSessionPortAirPlay
__ AVFoundation: _AVAudioSessionPortBluetoothA2DP
__ AVFoundation: _AVAudioSessionPortHeadphones
__ AVFoundation: _AVAudioSessionPortUSBAudio
__ AVFoundation: _AVAudioSessionRouteChangeNotification
__ AVFoundation: _AVAudioSessionRouteChangePreviousRouteKey
__ AVFoundation: _AVAudioSessionRouteChangeReasonKey
__ AVFoundation: _AVFoundationErrorDomain
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeErrorKey
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeNotification
__ AVFoundation: _AVPlayerWaitingToMinimizeStallsReason
__ AVFoundation: _AVPlayerWaitingWhileEvaluatingBufferingRateReason
__ AVFoundation: _AVPlayerWaitingWithNoItemToPlayReason
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVAudioSessionPortDescription
__ AVFoundation: _OBJC_CLASS_$_AVAudioSessionRouteDescription
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVQueuePlayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVKit: _OBJC_CLASS_$_AVMusicAppBehavior
__ AVKit: _OBJC_CLASS_$_AVPlayerViewController
__ AVKit: _OBJC_METACLASS_$_AVMusicAppBehavior
__ CoreMedia: _kCMTimeNegativeInfinity
__ CoreMedia: _kCMTimePositiveInfinity
__ CoreMedia: _kCMTimeZero
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ MediaToolbox: _FigOutputMonitorIsScreenProbablyBeingRecorded
__ MediaToolbox: _kFigOutputMonitorNotification_RecordingStateChanged
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _UIBackgroundTaskInvalid
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_source
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_os_log
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_storeStrong
__ libswiftAVFoundation.dylib: __swift_FORCE_LOAD_$_swiftAVFoundation
__ libswiftCore.dylib: _OBJC_CLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: _OBJC_METACLASS_$__TtCs12_SwiftObject
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swiftEmptySetSingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericClassMetadata
__ libswiftCore.dylib: _swift_arrayAssignWithTake
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_checkMetadataState
__ libswiftCore.dylib: _swift_deallocClassInstance
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastClassUnconditional
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClassUnconditional
__ libswiftCore.dylib: _swift_dynamicCastObjCProtocolConditional
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getAssociatedConformanceWitness
__ libswiftCore.dylib: _swift_getAssociatedTypeWitness
__ libswiftCore.dylib: _swift_getErrorValue
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getKeyPath
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initClassMetadata2
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_initStaticObject
__ libswiftCore.dylib: _swift_isUniquelyReferencedNonObjC_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_makeBoxUnique
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_setDeallocating
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRelease_n
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_unknownObjectRetain_n
__ libswiftCore.dylib: _swift_unknownObjectWeakAssign
__ libswiftCore.dylib: _swift_unknownObjectWeakDestroy
__ libswiftCore.dylib: _swift_unknownObjectWeakInit
__ libswiftCore.dylib: _swift_unknownObjectWeakLoadStrong
__ libswiftCore.dylib: _swift_weakDestroy
__ libswiftCore.dylib: _swift_weakInit
__ libswiftCore.dylib: _swift_weakLoadStrong
__ libswiftCore.dylib: _swift_willThrow
__ libswiftCoreAudio.dylib: __swift_FORCE_LOAD_$_swiftCoreAudio
__ libswiftCoreFoundation.dylib: __swift_FORCE_LOAD_$_swiftCoreFoundation
__ libswiftCoreGraphics.dylib: __swift_FORCE_LOAD_$_swiftCoreGraphics
__ libswiftCoreImage.dylib: __swift_FORCE_LOAD_$_swiftCoreImage
__ libswiftCoreMIDI.dylib: __swift_FORCE_LOAD_$_swiftCoreMIDI
__ libswiftCoreMedia.dylib: __swift_FORCE_LOAD_$_swiftCoreMedia
__ libswiftDarwin.dylib: __swift_FORCE_LOAD_$_swiftDarwin
__ libswiftDispatch.dylib: __swift_FORCE_LOAD_$_swiftDispatch
__ libswiftFoundation.dylib: __swift_FORCE_LOAD_$_swiftFoundation
__ libswiftMetal.dylib: __swift_FORCE_LOAD_$_swiftMetal
__ libswiftObjectiveC.dylib: __swift_FORCE_LOAD_$_swiftObjectiveC
__ libswiftQuartzCore.dylib: __swift_FORCE_LOAD_$_swiftQuartzCore
__ libswiftUIKit.dylib: __swift_FORCE_LOAD_$_swiftUIKit
__ libswiftUniformTypeIdentifiers.dylib: __swift_FORCE_LOAD_$_swiftUniformTypeIdentifiers
__ libswiftos.dylib: __swift_FORCE_LOAD_$_swiftos
__ libswiftsimd.dylib: __swift_FORCE_LOAD_$_swiftsimd
_TtC15MediaFoundation16QueueAssetLoader : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFStateDumpable, MFStateDumpable>
 @property  NSDictionary *stateDictionary

  // instance methods
  -[_TtC15MediaFoundation16QueueAssetLoader stateDictionary]


_TtC15MediaFoundation10ItemLoader : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFStateDumpable>
 @property  NSDictionary *stateDictionary

  // instance methods
  -[_TtC15MediaFoundation10ItemLoader stateDictionary]


_TtC15MediaFoundation18ItemBufferProducer : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFStateDumpable>
 @property  NSDictionary *stateDictionary

  // instance methods
  -[_TtC15MediaFoundation18ItemBufferProducer stateDictionary]


_TtC15MediaFoundation16PlayerController : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFStateDumpable, MFResettable, MFAudioSessionControlling>
 @property  NSDictionary *stateDictionary

  // instance methods
  -[_TtC15MediaFoundation16PlayerController stateDictionary]
  -[_TtC15MediaFoundation16PlayerController reset]
  -[_TtC15MediaFoundation16PlayerController setAudioSessionActive:withOptions:error:]
  -[_TtC15MediaFoundation16PlayerController updateAudioSessionWithConfiguration:]


_TtC15MediaFoundation15VideoUserAction : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFUserAction>
 @property  NSString *identifier
 @property  long long type
 @property  <MFTimeStamp> *timeStamp
 @property  NSDictionary *options
 @property  long long source
 @property  NSString *sourceID

  // instance methods
  -[_TtC15MediaFoundation15VideoUserAction setSource:]
  -[_TtC15MediaFoundation15VideoUserAction source]
  -[_TtC15MediaFoundation15VideoUserAction setType:]
  -[_TtC15MediaFoundation15VideoUserAction options]
  -[_TtC15MediaFoundation15VideoUserAction timeStamp]
  -[_TtC15MediaFoundation15VideoUserAction setIdentifier:]
  -[_TtC15MediaFoundation15VideoUserAction identifier]
  -[_TtC15MediaFoundation15VideoUserAction type]
  -[_TtC15MediaFoundation15VideoUserAction setOptions:]
  -[_TtC15MediaFoundation15VideoUserAction sourceID]
  -[_TtC15MediaFoundation15VideoUserAction setTimeStamp:]
  -[_TtC15MediaFoundation15VideoUserAction setSourceID:]


PlayerViewControllerBehavior : AVMusicAppBehavior /System/Library/Frameworks/Combine.framework/Combine
  // instance methods
  -[PlayerViewControllerBehavior init]
  -[PlayerViewControllerBehavior contextWillHandleUserAction:]
  -[PlayerViewControllerBehavior .cxx_destruct]
  -[PlayerViewControllerBehavior skipToNextItem]
  -[PlayerViewControllerBehavior skipToPreviousItem]
  -[PlayerViewControllerBehavior willMoveToContext:]


_TtC15MediaFoundation9PlayerFSM : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFStateDumpable, MFResettable>
 @property  NSDictionary *stateDictionary

  // instance methods
  -[_TtC15MediaFoundation9PlayerFSM stateDictionary]
  -[_TtC15MediaFoundation9PlayerFSM reset]


_TtC15MediaFoundation15JumpToTimeState : MediaFoundation.State

_TtC15MediaFoundation11PausedState : MediaFoundation.TransportableState

_TtC15MediaFoundation12SeekingState : MediaFoundation.State

_TtC15MediaFoundation18ChangingQueueState : MediaFoundation.State

_TtC15MediaFoundation19ResettingQueueState : MediaFoundation.ChangingQueueState

_TtC15MediaFoundation24ChangingCurrentItemState : MediaFoundation.ChangingQueueState

_TtC15MediaFoundation13RouteMetadata : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFRouteChangeMetadata>
 @property  BOOL isAirplay
 @property  NSString *routeDescription

  // instance methods
  -[_TtC15MediaFoundation13RouteMetadata routeDescription]
  -[_TtC15MediaFoundation13RouteMetadata isAirplay]


_TtC15MediaFoundation15EndOfQueueState : MediaFoundation.PausedState

_TtC15MediaFoundation15TransitionState : MediaFoundation.State

_TtC15MediaFoundation22NaturalTransitionState : MediaFoundation.TransitionState

_TtC15MediaFoundation21FailedTransitionState : MediaFoundation.TransitionState

_TtC15MediaFoundation35FailedInitialLoadingTransitionState : MediaFoundation.FailedTransitionState

_TtC15MediaFoundation23SkippingTransitionState : MediaFoundation.TransitionState

_TtC15MediaFoundation29WaitingForItemTransitionState : MediaFoundation.TransitionState

_TtC15MediaFoundation31InternalPlaybackStackController : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFStateDumpable>
 @property  NSDictionary *stateDictionary

  // instance methods
  -[_TtC15MediaFoundation31InternalPlaybackStackController stateDictionary]


_TtC15MediaFoundation14BackgroundTask : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib

_TtC15MediaFoundation24BackgroundTaskController : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFResettable, MFStateDumpable>
 @property  NSDictionary *stateDictionary

  // instance methods
  -[_TtC15MediaFoundation24BackgroundTaskController stateDictionary]
  -[_TtC15MediaFoundation24BackgroundTaskController reset]


_TtC15MediaFoundation19InitialLoadingState : MediaFoundation.State

_TtC15MediaFoundation23InitiatingPlaybackState : MediaFoundation.State

_TtC15MediaFoundation12PlayingState : MediaFoundation.TransportableState

_TtC15MediaFoundation29MediaServicesInterruptedState : MediaFoundation.PausedState

_TtC15MediaFoundation26MediaServicesResumingState : MediaFoundation.PausedState

_TtC15MediaFoundation24InternalPlayerController : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFStateDumpable, MFResettable, MFStateDumpable, MFResettable>
 @property  NSDictionary *stateDictionary

  // instance methods
  -[_TtC15MediaFoundation24InternalPlayerController stateDictionary]
  -[_TtC15MediaFoundation24InternalPlayerController reset]


_TtC15MediaFoundation13ScanningState : MediaFoundation.State

_TtC15MediaFoundation18TransportableState : MediaFoundation.State

_TtC15MediaFoundation16InterruptedState : MediaFoundation.PausedState

MFDescription : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[MFDescription forPlayerState:]
  +[MFDescription forPlaybackTimeChangeReason:]
  +[MFDescription forErrorResolution:]
  +[MFDescription forBufferState:]
  +[MFDescription forItemRequestReason:]
  +[MFDescription forItemTransition:]
  +[MFDescription forUserActionType:]
  +[MFDescription forUserActionSource:]

  // instance methods
  -[MFDescription init]


MFAudioSessionConfiguration : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[MFAudioSessionConfiguration init]
  -[MFAudioSessionConfiguration .cxx_destruct]
  -[MFAudioSessionConfiguration initWithCategory:mode:routeSharingPolicy:options:]


MFPlaybackStackControllerImplementation : NSObject /usr/lib/libSystem.B.dylib <MFPlaybackStackController, MFQueueManagement>
 @property  long long maximumPlayerQueueLength
 @property  <MFPlaybackStackControllerDelegate> *delegate
 @property  long long currentState
 @property  long long interruptedState
 @property  long long currentItemTransition
 @property  double currentTime
 @property  float rate
 @property  float targetRate
 @property  NSNumber *targetTime
 @property  <MFPlayerItem> *currentItem
 @property  NSArray *nextItems
 @property  <MFQueuePlayerItem> *currentQueueItem
 @property  AVPlayerViewController *videoViewController
 @property  NSDictionary *stateDictionary

  // instance methods
  -[MFPlaybackStackControllerImplementation currentItem]
  -[MFPlaybackStackControllerImplementation rate]
  -[MFPlaybackStackControllerImplementation currentState]
  -[MFPlaybackStackControllerImplementation init]
  -[MFPlaybackStackControllerImplementation videoViewController]
  -[MFPlaybackStackControllerImplementation reloadItemsKeepingCurrentItem:]
  -[MFPlaybackStackControllerImplementation .cxx_destruct]
  -[MFPlaybackStackControllerImplementation currentTime]
  -[MFPlaybackStackControllerImplementation stateDictionary]
  -[MFPlaybackStackControllerImplementation reset]
  -[MFPlaybackStackControllerImplementation targetTime]
  -[MFPlaybackStackControllerImplementation nextItems]
  -[MFPlaybackStackControllerImplementation setDelegate:]
  -[MFPlaybackStackControllerImplementation delegate]
  -[MFPlaybackStackControllerImplementation currentQueueItem]
  -[MFPlaybackStackControllerImplementation setQueueWithInitialItem:andPlay:identifier:completion:]
  -[MFPlaybackStackControllerImplementation restoreQueue:]
  -[MFPlaybackStackControllerImplementation setAudioSessionActive:withOptions:error:]
  -[MFPlaybackStackControllerImplementation skipWithDirection:identifier:completion:]
  -[MFPlaybackStackControllerImplementation jumpTo:identifier:completion:]
  -[MFPlaybackStackControllerImplementation pauseWithFadeOut:identifier:completion:]
  -[MFPlaybackStackControllerImplementation interruptedState]
  -[MFPlaybackStackControllerImplementation pauseWithIdentifier:completion:]
  -[MFPlaybackStackControllerImplementation playWithRate:identifier:completion:]
  -[MFPlaybackStackControllerImplementation shouldSkipJumpToItemStart:]
  -[MFPlaybackStackControllerImplementation beginScanningWithDirection:identifier:completion:]
  -[MFPlaybackStackControllerImplementation endScanningWithIdentifier:completion:]
  -[MFPlaybackStackControllerImplementation setRate:identifier:completion:]
  -[MFPlaybackStackControllerImplementation initWithQueueController:assetLoader:errorController:externalPlaybackController:leaseController:queue:]
  -[MFPlaybackStackControllerImplementation setMaximumPlayerQueueLength:]
  -[MFPlaybackStackControllerImplementation targetRate]
  -[MFPlaybackStackControllerImplementation updateAudioSessionWithConfiguration:]
  -[MFPlaybackStackControllerImplementation currentItemTransition]
  -[MFPlaybackStackControllerImplementation clearPlaybackQueue]
  -[MFPlaybackStackControllerImplementation maximumPlayerQueueLength]
  -[MFPlaybackStackControllerImplementation beginSeekingWithIdentifier:completion:]
  -[MFPlaybackStackControllerImplementation seekTo:identifier:completion:]
  -[MFPlaybackStackControllerImplementation endSeekingWithIdentifier:completion:]


_TtC15MediaFoundation5State : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib

_TtC15MediaFoundation9EventTime : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFTimeStamp>
 @property  double time
 @property  double userSecondsSinceReferenceDate
 @property  {?=qiIq} hostTime

  // instance methods
  -[_TtC15MediaFoundation9EventTime hostTime]
  -[_TtC15MediaFoundation9EventTime time]
  -[_TtC15MediaFoundation9EventTime userSecondsSinceReferenceDate]


_TtC15MediaFoundation9IdleState : MediaFoundation.State

_TtC15MediaFoundation13EventReporter : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib

_TtC15MediaFoundation23PlaybackStackController : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib <MFStateDumpable, MFResettable, MFAudioSessionControlling>
 @property  NSDictionary *stateDictionary

  // instance methods
  -[_TtC15MediaFoundation23PlaybackStackController stateDictionary]
  -[_TtC15MediaFoundation23PlaybackStackController reset]
  -[_TtC15MediaFoundation23PlaybackStackController setAudioSessionActive:withOptions:error:]
  -[_TtC15MediaFoundation23PlaybackStackController updateAudioSessionWithConfiguration:]


_TtC15MediaFoundation20ErrorResolutionState : MediaFoundation.State

_TtC15MediaFoundation17UserEventsMonitor : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib

_TtC15MediaFoundationP33_8E60203C4A0D8D08719FEC3D39F6597C26UserEventCompletionMonitor : Swift._SwiftObject /usr/lib/swift/libswiftCoreAudio.dylib

AVQueuePlayer(MediaFoundation)
	// instance methods
	-[AVQueuePlayer(MediaFoundation) playbackType]
	-[AVQueuePlayer(MediaFoundation) stateDictionary]

AVPlayerItem(MediaFoundation)
	// instance methods
	-[AVPlayerItem(MediaFoundation) url]
	-[AVPlayerItem(MediaFoundation) description]
	-[AVPlayerItem(MediaFoundation) avPlayerItem]
	-[AVPlayerItem(MediaFoundation) setTitle:]
	-[AVPlayerItem(MediaFoundation) title]
	-[AVPlayerItem(MediaFoundation) setContentItemID:]
	-[AVPlayerItem(MediaFoundation) isAssetLoaded]
	-[AVPlayerItem(MediaFoundation) prefersSeekOverSkip]
	-[AVPlayerItem(MediaFoundation) repeatIndex]
	-[AVPlayerItem(MediaFoundation) setRepeatIndex:]
	-[AVPlayerItem(MediaFoundation) contentItemID]
	-[AVPlayerItem(MediaFoundation) hasLoadableAsset]
	-[AVPlayerItem(MediaFoundation) setPrefersSeekOverSkip:]
	-[AVPlayerItem(MediaFoundation) isFullyDownloaded]
	-[AVPlayerItem(MediaFoundation) isVideoContent]
	-[AVPlayerItem(MediaFoundation) setIsVideoContent:]
	-[AVPlayerItem(MediaFoundation) initWithUrl:contentItemID:repeatIndex:isVideoContent:prefersSeekOverSkip:]

01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSessionPortDescription 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSessionRouteDescription 
01 00 0500 /System/Library/Frameworks/AVKit.framework/AVKit: AVMusicAppBehavior 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0500 /System/Library/Frameworks/AVKit.framework/AVKit: AVPlayerViewController 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVQueuePlayer 
01 00 0100 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 0300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0400 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 0400 /usr/lib/libSystem.B.dylib: OS_dispatch_source 
01 00 0400 /usr/lib/libSystem.B.dylib: OS_os_log 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0b00 /usr/lib/swift/libswiftCore.dylib: _TtCs12_SwiftObject 
