|| __DATA.__data _VMUBacktraceIsExcludedMarker
|| __DATA.__data _VMUmappedFileLabel
|| __DATA.__data _VMUobjcAdditionalDataLabel
|| __DATA.__data _VMUunusedSharedLibLabelPrefix
|| __DATA.__data _kVMUAutoreleasePoolBoundaryClassName
|| __DATA.__data _kVMURootRetainCycle
|| __DATA.__objc_data _OBJC_CLASS_$_VMUArchitecture
|| __DATA.__objc_data _OBJC_CLASS_$_VMUCallTreeNode
|| __DATA.__objc_data _OBJC_CLASS_$_VMUCallTreeRoot
|| __DATA.__objc_data _OBJC_CLASS_$_VMUCallTreeRootWithBacktrace
|| __DATA.__objc_data _OBJC_CLASS_$_VMUClassInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VMUClassInfoMap
|| __DATA.__objc_data _OBJC_CLASS_$_VMUDirectedGraph
|| __DATA.__objc_data _OBJC_CLASS_$_VMUFieldInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VMUGraphStackLogReader
|| __DATA.__objc_data _OBJC_CLASS_$_VMULeakDetector
|| __DATA.__objc_data _OBJC_CLASS_$_VMUMutableClassInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VMUMutableFieldInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VMUNodeToStringMap
|| __DATA.__objc_data _OBJC_CLASS_$_VMUNonOverlappingRangeArray
|| __DATA.__objc_data _OBJC_CLASS_$_VMUObjectGraph
|| __DATA.__objc_data _OBJC_CLASS_$_VMUObjectIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_VMUProcList
|| __DATA.__objc_data _OBJC_CLASS_$_VMUProcessObjectGraph
|| __DATA.__objc_data _OBJC_CLASS_$_VMURangeArray
|| __DATA.__objc_data _OBJC_CLASS_$_VMURangeToStringMap
|| __DATA.__objc_data _OBJC_CLASS_$_VMUScanOverlay
|| __DATA.__objc_data _OBJC_CLASS_$_VMUStackLogConsolidator
|| __DATA.__objc_data _OBJC_CLASS_$_VMUStackLogReaderBase
|| __DATA.__objc_data _OBJC_CLASS_$_VMUSwiftRuntimeInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VMUTaskMemoryCache
|| __DATA.__objc_data _OBJC_CLASS_$_VMUTaskMemoryScanner
|| __DATA.__objc_data _OBJC_CLASS_$_VMUTaskStackLogReader
|| __DATA.__objc_data _OBJC_CLASS_$_VMUVMRegionRangeInfo
|| __DATA.__objc_data _OBJC_CLASS_$_VMUVMRegionTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUArchitecture
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUCallTreeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUCallTreeRoot
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUCallTreeRootWithBacktrace
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUClassInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUClassInfoMap
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUDirectedGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUFieldInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUGraphStackLogReader
|| __DATA.__objc_data _OBJC_METACLASS_$_VMULeakDetector
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUMutableClassInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUMutableFieldInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUNodeToStringMap
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUNonOverlappingRangeArray
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUObjectGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUObjectIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUProcList
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUProcessObjectGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_VMURangeArray
|| __DATA.__objc_data _OBJC_METACLASS_$_VMURangeToStringMap
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUScanOverlay
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUStackLogConsolidator
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUStackLogReaderBase
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUSwiftRuntimeInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUTaskMemoryCache
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUTaskMemoryScanner
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUTaskStackLogReader
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUVMRegionRangeInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_VMUVMRegionTracker
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUBacktrace._callstack
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUBacktrace._flavor
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUCallTreeNode._address
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUCallTreeNode._children
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUCallTreeNode._count
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUCallTreeNode._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUCallTreeNode._numBytes
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUCallTreeNode._numChildren
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUCallTreeNode._parent
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUNodeToStringMap._nodeToStringIndexMapVoidPtr
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUNodeToStringMap._stringToIndexMapVoidPtr
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUNodeToStringMap._strings
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMURangeArray._count
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMURangeArray._max
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMURangeArray._ranges
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMURangeArray._sorted
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMURangeToStringMap._rangeAndStringVectorVoidPtr
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMURangeToStringMap._sorted
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMURangeToStringMap._stringToIndexMapVoidPtr
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMURangeToStringMap._strings
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUStackLogReaderBase._addressToSymbolicationMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUStackLogReaderBase._binaryImagePathToIdentifierMap
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUStackLogReaderBase._coldestFrameIsNotThreadId
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUStackLogReaderBase._excludedFrames
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUStackLogReaderBase._regionTracker
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUStackLogReaderBase._task
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUStackLogReaderBase._usesLiteMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._nativeWeakReferenceMarkerMask
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._nativeWeakReferenceMarkerValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._nativeWeakReferencePointerIsSideTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._nativeWeakReferencePointerMask
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._refcountIsSideTableMarkerMask
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._refcountIsSideTableMarkerValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._runtimeHasStableABI
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._sideTableLayout
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._sideTablePointerLeftShift
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._sideTablePointerMask
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._sideTablePointerRightShift
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUSwiftRuntimeInfo._unownedExtraDataLayout
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.coalesced_region_count
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.dirty_size
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.external_pager
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.is_macho_region
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.is_submap
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.is_unused_data_page_shared_with_active_content
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.is_unused_data_region
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.is_wired
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.mallocBlockCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.mallocTypeFlag
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.maxProt
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.nesting_depth
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.object_id
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.offset
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.pages_dirtied
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.pages_resident
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.pages_shared_now_private
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.pages_swapped_out
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.path
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.prot
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.purgable_empty_size
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.purgable_non_vol_size
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.purgable_vol_size
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.purgeable
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.range
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.ref_count
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.reserved_flags
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.resident_size
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.reusable_size
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.share_mode
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.shared_now_private_size
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.summarized
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.swapped_out_size
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.type
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.user_tag
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.virtual_pages
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegion.zone_index
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegionRangeInfo.address
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegionRangeInfo.size
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegionRangeInfo.stackIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegionRangeInfo.userTag
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegionTracker._regionInfoArray
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegionTracker._stackLogReader
|| __DATA.__objc_ivar _OBJC_IVAR_$_VMUVMRegionTracker._task
|| __DATA_CONST.__const _VMUDirectedGraphCompatibilityVersionNumberInGraphKey
|| __DATA_CONST.__const _VMUDirectedGraphToolCompatibilityVersionKey
|| __DATA_CONST.__const _VMUmallocMetadataLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMUBacktrace
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMUDebugTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMUOptionParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMUProcInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMUProcessDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMUSampler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMUTaskThreadStates
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMUVMRegion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_VMUVMRegionIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMUBacktrace
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMUDebugTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMUOptionParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMUProcInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMUProcessDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMUSampler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMUTaskThreadStates
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMUVMRegion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_VMUVMRegionIdentifier
|| __TEXT.__text _VMUCreateRootNodeMarkingMap
|| __TEXT.__text _VMUEnumerateVMAnnotatedMallocObjectsWithBlock
|| __TEXT.__text _VMUGetFlagsForAllVMRegionStatistics
|| __TEXT.__text _VMUGraphNodeTypeDescription
|| __TEXT.__text _VMUGraphNodeType_IsRoot
|| __TEXT.__text _VMUGraphNodeType_IsVMRegion
|| __TEXT.__text _VMUIntersectionRange
|| __TEXT.__text _VMUIsOwningReference
|| __TEXT.__text _VMULiteZoneIndex
|| __TEXT.__text _VMUMarkObject
|| __TEXT.__text _VMUMemorySizeString
|| __TEXT.__text _VMUOptionParserError
|| __TEXT.__text _VMUOptionParserRegisterFlag
|| __TEXT.__text _VMUOptionParserRegisterFlagInternal
|| __TEXT.__text _VMUPlatformForTask
|| __TEXT.__text _VMUPlatformNameForPlatform
|| __TEXT.__text _VMUPlatformNameForTask
|| __TEXT.__text _VMUPurgeableDisplayCharacter
|| __TEXT.__text _VMURangeContainsRange
|| __TEXT.__text _VMURangeIntersectsOrAbutsRange
|| __TEXT.__text _VMURangeIntersectsRange
|| __TEXT.__text _VMURegionTypeDescriptionForTagShareProtAndPager
|| __TEXT.__text _VMURegisterNameForIndex
|| __TEXT.__text _VMUSanitizePath
|| __TEXT.__text _VMUScanTypeKeywordDescription
|| __TEXT.__text _VMUScanTypeScanDescription
|| __TEXT.__text _VMUScanningMaskForAllReferences
|| __TEXT.__text _VMUScanningMaskForOwningReferences
|| __TEXT.__text _VMUSortIndexForLibraryPath
|| __TEXT.__text _VMUUnionRange
|| __TEXT.__text _VMUVMRegionShareModeName
|| __TEXT.__text _VMUWithRootNodeMarkingMap
|| __TEXT.__text __VMUEnumerateMarkedObjects
|| __TEXT.__text _pidFromHint
|| __TEXT.__text _psName
|| __TEXT.__text _task_enumerate_malloc_blocks
|| __TEXT.__text _task_find_leaks
|| __TEXT.__text _task_foreach_malloc_zone
|| __TEXT.__text _task_get_malloc_ptrs
|| __TEXT.__text _task_get_malloc_ptrs_by_zone
|| __TEXT.__text _task_get_mapped_memory_cache
|| __TEXT.__text _task_peek
|| __TEXT.__text _task_peek_clear_cache
|| __TEXT.__text _task_peek_natural_size
|| __TEXT.__text _task_peek_string
|| __TEXT.__text _task_read_ptr_at
|| __TEXT.__text _task_read_unsigned_at
|| __TEXT.__text _task_release_mapped_memory_cache
|| __TEXT.__text _task_start_peeking
|| __TEXT.__text _task_stop_peeking
|| __TEXT.__text _task_try_peek
|| __TEXT.__text _vmu_context_for_uniqued_stack
|| __TEXT.__text _vmu_create_backtrace_uniquing_table
|| __TEXT.__text _vmu_destroy_backtrace_uniquing_table
|| __TEXT.__text _vmu_enter_ptrSized_stack_in_backtrace_uniquing_table
|| __TEXT.__text _vmu_enter_stack_in_backtrace_uniquing_table
|| __TEXT.__text _vmu_enumerate_backtrace_uniquing_table
|| __TEXT.__text _vmu_print_backtrace_uniquing_table
|| __TEXT.__text _vmu_ptrSized_stack_frames_for_uniqued_stack
|| __TEXT.__text _vmu_remove_stack_from_backtrace_uniquing_table
|| __TEXT.__text _vmu_stack_frames_for_uniqued_stack
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetValueForInfoDictionaryKey
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFLog
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFURLCreateWithFileSystemPath
__ CoreFoundation: _CFUUIDCreateFromUUIDBytes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSBlock
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCreateWithExecutableURLIfLooksLikeBundle
__ CoreFoundation: __CFCopyServerVersionDictionary
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: __CFStringGetLength2
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___CFGenericTypeID
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: __kCFSystemVersionProductNameKey
__ CoreFoundation: __kCFSystemVersionProductVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreSymbolication: _CSDemangleSymbolName
__ CoreSymbolication: _CSIsNull
__ CoreSymbolication: _CSRegionGetName
__ CoreSymbolication: _CSRegionGetRange
__ CoreSymbolication: _CSRelease
__ CoreSymbolication: _CSRetain
__ CoreSymbolication: _CSSegmentForeachSection
__ CoreSymbolication: _CSSourceInfoGetFilename
__ CoreSymbolication: _CSSourceInfoGetLineNumber
__ CoreSymbolication: _CSSourceInfoGetPath
__ CoreSymbolication: _CSSourceInfoGetRange
__ CoreSymbolication: _CSSymbolGetMangledName
__ CoreSymbolication: _CSSymbolGetName
__ CoreSymbolication: _CSSymbolGetRange
__ CoreSymbolication: _CSSymbolGetSymbolOwner
__ CoreSymbolication: _CSSymbolIsUnnamed
__ CoreSymbolication: _CSSymbolOwnerForeachSection
__ CoreSymbolication: _CSSymbolOwnerForeachSegment
__ CoreSymbolication: _CSSymbolOwnerGetArchitecture
__ CoreSymbolication: _CSSymbolOwnerGetBaseAddress
__ CoreSymbolication: _CSSymbolOwnerGetCFUUIDBytes
__ CoreSymbolication: _CSSymbolOwnerGetName
__ CoreSymbolication: _CSSymbolOwnerGetPath
__ CoreSymbolication: _CSSymbolOwnerGetSegmentWithAddress
__ CoreSymbolication: _CSSymbolOwnerGetSourceInfoWithAddress
__ CoreSymbolication: _CSSymbolOwnerGetSymbolWithAddress
__ CoreSymbolication: _CSSymbolOwnerGetSymbolWithMangledName
__ CoreSymbolication: _CSSymbolOwnerGetSymbolWithName
__ CoreSymbolication: _CSSymbolOwnerGetVersion
__ CoreSymbolication: _CSSymbolOwnerIsDyldSharedCache
__ CoreSymbolication: _CSSymbolOwnerUsesCPlusPlus
__ CoreSymbolication: _CSSymbolicatorCreateWithBinaryImageListCountPidFlagsAndNotification
__ CoreSymbolication: _CSSymbolicatorCreateWithTask
__ CoreSymbolication: _CSSymbolicatorCreateWithTaskFlagsAndNotification
__ CoreSymbolication: _CSSymbolicatorFixupFrames
__ CoreSymbolication: _CSSymbolicatorForceFullSymbolExtraction
__ CoreSymbolication: _CSSymbolicatorForeachSymbolOwnerAtTime
__ CoreSymbolication: _CSSymbolicatorForeachSymbolOwnerWithNameAtTime
__ CoreSymbolication: _CSSymbolicatorGetAOutSymbolOwner
__ CoreSymbolication: _CSSymbolicatorGetFlagsForNListOnlyData
__ CoreSymbolication: _CSSymbolicatorGetFlagsForNoSymbolOrSourceInfoData
__ CoreSymbolication: _CSSymbolicatorGetSectionWithAddressAtTime
__ CoreSymbolication: _CSSymbolicatorGetSourceInfoWithAddressAtTime
__ CoreSymbolication: _CSSymbolicatorGetSymbolOwnerWithAddressAtTime
__ CoreSymbolication: _CSSymbolicatorGetSymbolOwnerWithNameAtTime
__ CoreSymbolication: _CSSymbolicatorGetSymbolWithAddressAtTime
__ CoreSymbolication: _CSSymbolicatorGetSymbolWithNameAtTime
__ CoreSymbolication: _CSSymbolicatorGetSymbolWithNameFromSymbolOwnerWithNameAtTime
__ CoreSymbolication: _CSSymbolicatorGetTask
__ CoreSymbolication: _CSUUIDStringToCFUUIDBytes
__ CoreSymbolication: _clear_mapped_memory
__ CoreSymbolication: _create_mapped_memory_cache_for_task
__ CoreSymbolication: _create_sampling_context_for_task_pid_symbolicator
__ CoreSymbolication: _destroy_mapped_memory_cache
__ CoreSymbolication: _destroy_sampling_context
__ CoreSymbolication: _dispatch_queue_name_for_serial_number
__ CoreSymbolication: _enumerate_mapped_memory_cache
__ CoreSymbolication: _find_node
__ CoreSymbolication: _map_new_node
__ CoreSymbolication: _release_mapped_memory_cache
__ CoreSymbolication: _retain_mapped_memory_cache
__ CoreSymbolication: _sample_remote_thread_with_dispatch_queue
__ CoreSymbolication: _sampling_context_clear_cache
__ CoreSymbolication: _task_is_64bit
__ CoreSymbolication: _thread_name_for_thread_port
__ Foundation: _NSAllMapTableKeys
__ Foundation: _NSClassFromString
__ Foundation: _NSEndMapTableEnumeration
__ Foundation: _NSEnumerateMapTable
__ Foundation: _NSHashGet
__ Foundation: _NSHashInsert
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMapInsertKnownAbsent
__ Foundation: _NSMapRemove
__ Foundation: _NSNextMapEnumeratorPair
__ Foundation: _NSResetMapTable
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ IOSurface: _OBJC_CLASS_$_IOSurfaceDebugDescription
__ MallocStackLogging: _msl_coldest_frame_is_threadid
__ MallocStackLogging: _msl_copy_disk_stack_logs
__ MallocStackLogging: _msl_disk_stack_logs_enumerate_from_buffer
__ MallocStackLogging: _msl_disk_stack_logs_enumerate_from_task_with_block
__ MallocStackLogging: _msl_get_frames_for_address
__ MallocStackLogging: _msl_payload_create_from_index
__ MallocStackLogging: _msl_payload_for_vm_region_in_task
__ MallocStackLogging: _msl_payload_from_lite_zone_ptr
__ MallocStackLogging: _msl_payload_get_invalid
__ MallocStackLogging: _msl_payload_get_uniquing_table_index
__ MallocStackLogging: _msl_payload_is_invalid
__ MallocStackLogging: _msl_payload_version_from_task
__ MallocStackLogging: _msl_start_reading
__ MallocStackLogging: _msl_stop_reading
__ MallocStackLogging: _msl_uniquing_table_copy_from_serialized
__ MallocStackLogging: _msl_uniquing_table_copy_from_task
__ MallocStackLogging: _msl_uniquing_table_enumerate
__ MallocStackLogging: _msl_uniquing_table_get_frames_from_table
__ MallocStackLogging: _msl_uniquing_table_get_frames_from_task
__ MallocStackLogging: _msl_uniquing_table_release
__ MallocStackLogging: _msl_uniquing_table_serialize
__ libSystem.B.dylib: _CC_MD5_Final
__ libSystem.B.dylib: _CC_MD5_Init
__ libSystem.B.dylib: _CC_MD5_Update
__ libSystem.B.dylib: _NXGetArchInfoFromCpuType
__ libSystem.B.dylib: _NXGetArchInfoFromName
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___sprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdinp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: ___strcpy_chk
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dyld_process_info_create
__ libSystem.B.dylib: __dyld_process_info_get_platform
__ libSystem.B.dylib: __dyld_process_info_release
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _access
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _bsearch_b
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _chmod
__ libSystem.B.dylib: _csops
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_get_label
__ libSystem.B.dylib: _dispatch_queue_get_qos_class
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlclose
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_process_is_restricted
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fclose
__ libSystem.B.dylib: _fdopen
__ libSystem.B.dylib: _feof
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fgetln
__ libSystem.B.dylib: _fgets
__ libSystem.B.dylib: _flsll
__ libSystem.B.dylib: _fopen
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _fputs
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getopt_long_only
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _getsectiondata
__ libSystem.B.dylib: _getsegmentdata
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _host_info
__ libSystem.B.dylib: _isatty
__ libSystem.B.dylib: _kill
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_continuous_approximate_time
__ libSystem.B.dylib: _mach_error
__ libSystem.B.dylib: _mach_error_string
__ libSystem.B.dylib: _mach_get_times
__ libSystem.B.dylib: _mach_host_self
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_thread_self
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _mach_vm_allocate
__ libSystem.B.dylib: _mach_vm_copy
__ libSystem.B.dylib: _mach_vm_deallocate
__ libSystem.B.dylib: _mach_vm_page_range_query
__ libSystem.B.dylib: _mach_vm_purgable_control
__ libSystem.B.dylib: _mach_vm_read
__ libSystem.B.dylib: _mach_vm_region
__ libSystem.B.dylib: _mach_vm_region_recurse
__ libSystem.B.dylib: _mach_wait_until
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_get_all_zones
__ libSystem.B.dylib: _malloc_good_size
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _malloc_zone_unregister
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern4
__ libSystem.B.dylib: _mergesort
__ libSystem.B.dylib: _mergesort_b
__ libSystem.B.dylib: _mkstemps
__ libSystem.B.dylib: _optarg
__ libSystem.B.dylib: _optind
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_copy_description
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _perror
__ libSystem.B.dylib: _pid_for_task
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _proc_list_uptrs
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _proc_pid_rusage
__ libSystem.B.dylib: _proc_pidinfo
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _proc_regionfilename
__ libSystem.B.dylib: _pthread_create
__ libSystem.B.dylib: _pthread_join
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _putchar
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _reallocf
__ libSystem.B.dylib: _regcomp
__ libSystem.B.dylib: _regexec
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _sscanf
__ libSystem.B.dylib: _strchr
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strcspn
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strncpy
__ libSystem.B.dylib: _strndup
__ libSystem.B.dylib: _strnlen
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _strstr
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _sysctlnametomib
__ libSystem.B.dylib: _task_for_pid
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _task_map_corpse_info_64
__ libSystem.B.dylib: _task_resume
__ libSystem.B.dylib: _task_resume2
__ libSystem.B.dylib: _task_suspend
__ libSystem.B.dylib: _task_suspend2
__ libSystem.B.dylib: _task_threads
__ libSystem.B.dylib: _thread_get_state
__ libSystem.B.dylib: _thread_info
__ libSystem.B.dylib: _thread_policy_set
__ libSystem.B.dylib: _thread_resume
__ libSystem.B.dylib: _thread_suspend
__ libSystem.B.dylib: _vfprintf
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _vm_kernel_page_mask
__ libSystem.B.dylib: _vm_kernel_page_size
__ libSystem.B.dylib: _vm_map_page_query
__ libSystem.B.dylib: _vm_page_mask
__ libSystem.B.dylib: _vm_page_shift
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: _vproc_swap_string
__ libSystem.B.dylib: _xpc_connection_get_pid
__ libSystem.B.dylib: _xpc_inspect_copy_description
__ libSystem.B.dylib: dyld_stub_binder
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt12out_of_rangeD1Ev
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt12out_of_range
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZTVSt12out_of_range
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getInstanceSize
__ libobjc.A.dylib: _class_getInstanceVariable
__ libobjc.A.dylib: _ivar_getName
__ libobjc.A.dylib: _ivar_getOffset
__ libobjc.A.dylib: _ivar_getTypeEncoding
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_debug_tag60_permutations
__ libobjc.A.dylib: _objc_debug_taggedpointer_mask
__ libobjc.A.dylib: _objc_debug_taggedpointer_obfuscator
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _sel_getName
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateBound
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
VMUArchitecture : NSObject /usr/lib/libc++.1.dylib <NSCoding, NSCopying>
  // class methods
  +[VMUArchitecture initialize]
  +[VMUArchitecture currentArchitecture]
  +[VMUArchitecture anyArchitecture]
  +[VMUArchitecture ppcArchitecture]
  +[VMUArchitecture ppc32Architecture]
  +[VMUArchitecture ppc64Architecture]
  +[VMUArchitecture i386Architecture]
  +[VMUArchitecture x86_32Architecture]
  +[VMUArchitecture x86_64Architecture]
  +[VMUArchitecture armArchitecture]
  +[VMUArchitecture architectureWithCpuType:cpuSubtype:]

  // instance methods
  -[VMUArchitecture copyWithZone:]
  -[VMUArchitecture cpuType]
  -[VMUArchitecture is32Bit]
  -[VMUArchitecture encodeWithCoder:]
  -[VMUArchitecture initWithCpuType:cpuSubtype:]
  -[VMUArchitecture isLittleEndian]
  -[VMUArchitecture isEqualToArchitecture:]
  -[VMUArchitecture isBigEndian]
  -[VMUArchitecture matchesArchitecture:]
  -[VMUArchitecture isEqual:]
  -[VMUArchitecture cpuSubtype]
  -[VMUArchitecture initWithCoder:]
  -[VMUArchitecture is64Bit]


VMURuntimeMetadataChunkInfo : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VMURuntimeMetadataChunkInfo .cxx_destruct]


VMUTaskMemoryScanner : NSObject /usr/lib/libc++.1.dylib <VMUCommonGraphInterface>
 @property  unsigned long suspendTimeContinuous
 @property  VMUTaskMemoryCache *memoryCache
 @property  VMUObjectIdentifier *objectIdentifier
 @property  BOOL exactScanningEnabled
 @property  BOOL abandonedMarkingEnabled
 @property  unsigned long maxInteriorOffset
 @property  unsigned int scanningMask
 @property  VMUDebugTimer *debugTimer
 @property  BOOL showRawClassNames
 @property  unsigned int objectContentLevel
 @property  BOOL recordRuntimeMetadataChunkInfo
 @property  unsigned int nodeCount
 @property  unsigned int zoneCount
 @property  unsigned int mallocNodeCount
 @property  VMUClassInfoMap *realizedClasses
 @property  unsigned int task
 @property  int pid
 @property  BOOL is64bit
 @property  unsigned int vmPageSize
 @property  unsigned int kernelPageSize
 @property  unsigned int regionCount
 @property  unsigned int nodeNamespaceSize
 @property  NSString *processName
 @property  NSString *processDescriptionString
 @property  NSString *executablePath
 @property  NSString *binaryImagesDescription
 @property  unsigned long physicalFootprint
 @property  unsigned long physicalFootprintPeak
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VMUTaskMemoryScanner initialize]
  +[VMUTaskMemoryScanner nodeDescription:withNodeOffset:sortedVMRegions:]
  +[VMUTaskMemoryScanner referenceDescription:withSourceNode:destinationNode:sortedVMRegions:symbolicator:alignmentSpacing:]

  // instance methods
  -[VMUTaskMemoryScanner _suspend]
  -[VMUTaskMemoryScanner executablePath]
  -[VMUTaskMemoryScanner enumerateObjectsWithBlock:]
  -[VMUTaskMemoryScanner objectIdentifier]
  -[VMUTaskMemoryScanner dealloc]
  -[VMUTaskMemoryScanner processName]
  -[VMUTaskMemoryScanner .cxx_destruct]
  -[VMUTaskMemoryScanner is64bit]
  -[VMUTaskMemoryScanner binaryImagesDescription]
  -[VMUTaskMemoryScanner physicalFootprint]
  -[VMUTaskMemoryScanner enumerateNodesWithBlock:]
  -[VMUTaskMemoryScanner physicalFootprintPeak]
  -[VMUTaskMemoryScanner mapDyldSharedCacheFromTargetWithRegions:]
  -[VMUTaskMemoryScanner realizedClasses]
  -[VMUTaskMemoryScanner refineTypesWithOverlay:]
  -[VMUTaskMemoryScanner _initWithTask:options:]
  -[VMUTaskMemoryScanner setNodeScanningLogger:]
  -[VMUTaskMemoryScanner setReferenceScanningLogger:]
  -[VMUTaskMemoryScanner detachFromTask]
  -[VMUTaskMemoryScanner _destroyLinearClassInfos]
  -[VMUTaskMemoryScanner _withMemoryReaderBlock:]
  -[VMUTaskMemoryScanner _addThreadNodesFromTask]
  -[VMUTaskMemoryScanner _addSpecialNodesFromTask]
  -[VMUTaskMemoryScanner _callRemoteMallocEnumerators:block:]
  -[VMUTaskMemoryScanner objectContentLevel]
  -[VMUTaskMemoryScanner _readonlyRegionRanges]
  -[VMUTaskMemoryScanner _sortBlocks]
  -[VMUTaskMemoryScanner setObjectContentLevel:]
  -[VMUTaskMemoryScanner _sortAndClassifyBlocks]
  -[VMUTaskMemoryScanner _buildRegionPageBlockMaps]
  -[VMUTaskMemoryScanner _fixupBlockIsas]
  -[VMUTaskMemoryScanner _findMarkedAbandonedBlocks]
  -[VMUTaskMemoryScanner nodeForAddress:]
  -[VMUTaskMemoryScanner _withOrderedNodeMapper:]
  -[VMUTaskMemoryScanner _updateLinearClassInfos]
  -[VMUTaskMemoryScanner _identifyObjCClassStructureBlocks]
  -[VMUTaskMemoryScanner pid]
  -[VMUTaskMemoryScanner _identifyNonObjectsPointedToByTypedIvars]
  -[VMUTaskMemoryScanner nodeNamespaceSize]
  -[VMUTaskMemoryScanner _withScanningContext:]
  -[VMUTaskMemoryScanner setDebugTimer:]
  -[VMUTaskMemoryScanner _orderedScanWithScanner:recorder:keepMapped:actions:]
  -[VMUTaskMemoryScanner _removeFalsePositiveLeakedVMregionsFromNodes:nodeCount:recorder:]
  -[VMUTaskMemoryScanner markReachableNodesFromRoots:inMap:]
  -[VMUTaskMemoryScanner processSnapshotGraphWithOptions:]
  -[VMUTaskMemoryScanner setShowRawClassNames:]
  -[VMUTaskMemoryScanner labelForNode:]
  -[VMUTaskMemoryScanner zoneCount]
  -[VMUTaskMemoryScanner scanNodesForReferences:]
  -[VMUTaskMemoryScanner unmapAllRegions]
  -[VMUTaskMemoryScanner processSnapshotGraphWithMallocStackLogs:]
  -[VMUTaskMemoryScanner nodeDetails:]
  -[VMUTaskMemoryScanner contentForNode:]
  -[VMUTaskMemoryScanner vmuVMRegionForAddress:]
  -[VMUTaskMemoryScanner copyUserMarked]
  -[VMUTaskMemoryScanner zoneNameForIndex:]
  -[VMUTaskMemoryScanner vmuVMRegionForNode:]
  -[VMUTaskMemoryScanner enumerateMarkedObjects:withBlock:]
  -[VMUTaskMemoryScanner enumerateRegionsWithBlock:]
  -[VMUTaskMemoryScanner hasLabelsForNodes]
  -[VMUTaskMemoryScanner enumerateReferencesWithBlock:]
  -[VMUTaskMemoryScanner shortLabelForNode:]
  -[VMUTaskMemoryScanner vmPageSize]
  -[VMUTaskMemoryScanner kernelPageSize]
  -[VMUTaskMemoryScanner regionCount]
  -[VMUTaskMemoryScanner processDescriptionString]
  -[VMUTaskMemoryScanner initWithSelfTaskAndOptions:]
  -[VMUTaskMemoryScanner _indexForClassInfo:]
  -[VMUTaskMemoryScanner _cachedVariantForGenericInfo:variantKey:]
  -[VMUTaskMemoryScanner addRootNodesFromTask]
  -[VMUTaskMemoryScanner scanningMask]
  -[VMUTaskMemoryScanner _registerVariant:forGenericInfo:variantKey:]
  -[VMUTaskMemoryScanner addMallocNodesFromTask]
  -[VMUTaskMemoryScanner addMallocNodes:]
  -[VMUTaskMemoryScanner printRuntimeMetadataInfo]
  -[VMUTaskMemoryScanner orderedNodeTraversal:withBlock:]
  -[VMUTaskMemoryScanner removeRootReachableNodes]
  -[VMUTaskMemoryScanner processSnapshotGraph]
  -[VMUTaskMemoryScanner zoneNameForNode:]
  -[VMUTaskMemoryScanner mallocNodeCount]
  -[VMUTaskMemoryScanner nodeDescription:]
  -[VMUTaskMemoryScanner classInfoForObjectAtAddress:]
  -[VMUTaskMemoryScanner validateAddressRange:]
  -[VMUTaskMemoryScanner addressIsInDataSegment:]
  -[VMUTaskMemoryScanner nodeDescription:withOffset:]
  -[VMUTaskMemoryScanner referenceDescription:withSourceNode:destinationNode:symbolicator:alignmentSpacing:]
  -[VMUTaskMemoryScanner maxInteriorOffset]
  -[VMUTaskMemoryScanner setMaxInteriorOffset:]
  -[VMUTaskMemoryScanner exactScanningEnabled]
  -[VMUTaskMemoryScanner setExactScanningEnabled:]
  -[VMUTaskMemoryScanner setScanningMask:]
  -[VMUTaskMemoryScanner abandonedMarkingEnabled]
  -[VMUTaskMemoryScanner setAbandonedMarkingEnabled:]
  -[VMUTaskMemoryScanner debugTimer]
  -[VMUTaskMemoryScanner showRawClassNames]
  -[VMUTaskMemoryScanner recordRuntimeMetadataChunkInfo]
  -[VMUTaskMemoryScanner setRecordRuntimeMetadataChunkInfo:]
  -[VMUTaskMemoryScanner suspendTimeContinuous]
  -[VMUTaskMemoryScanner memoryCache]
  -[VMUTaskMemoryScanner initWithTask:options:]
  -[VMUTaskMemoryScanner task]
  -[VMUTaskMemoryScanner initWithTask:]
  -[VMUTaskMemoryScanner nodeCount]


VMUStackLogReaderBase : NSObject /usr/lib/libc++.1.dylib <VMUStackLogReader>
 @property  unsigned int task
 @property  BOOL is64bit
 @property  BOOL inspectingLiveProcess
 @property  BOOL usesLiteMode
 @property  BOOL coldestFrameIsNotThreadId
 @property  VMUVMRegionTracker *regionTracker
 @property  NSSet *excludedFrames
 @property  unsigned long nodesInUniquingTable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VMUStackLogReaderBase .cxx_destruct]
  -[VMUStackLogReaderBase is64bit]
  -[VMUStackLogReaderBase vmuVMRegionForAddress:]
  -[VMUStackLogReaderBase getFramesForStackID:stackFramesBuffer:]
  -[VMUStackLogReaderBase enumerateRecords:]
  -[VMUStackLogReaderBase getFramesForNode:inLiteZone:stackFramesBuffer:]
  -[VMUStackLogReaderBase symbolicatedBacktraceForFrames:frameCount:options:]
  -[VMUStackLogReaderBase coldestFrameIsNotThreadId]
  -[VMUStackLogReaderBase binaryImagePathForPCaddress:]
  -[VMUStackLogReaderBase identifierForBinaryImagePath:]
  -[VMUStackLogReaderBase functionNameForPCaddress:]
  -[VMUStackLogReaderBase sourcePathForPCaddress:]
  -[VMUStackLogReaderBase functionRangeContainingPCaddress:]
  -[VMUStackLogReaderBase binaryImageRangeForPCaddress:]
  -[VMUStackLogReaderBase sourceFileNameAndLineNumberForPCaddress:fullPath:]
  -[VMUStackLogReaderBase enumerateMSLRecordsAndPayloads:]
  -[VMUStackLogReaderBase getFramesForAddress:size:inLiteZone:stackFramesBuffer:]
  -[VMUStackLogReaderBase sourceFileNameForPCaddress:]
  -[VMUStackLogReaderBase sourceLineNumberForPCaddress:]
  -[VMUStackLogReaderBase symbolicatedBacktraceForNode:nodeDetails:isLiteZone:options:]
  -[VMUStackLogReaderBase symbolicatedBacktraceForStackID:options:]
  -[VMUStackLogReaderBase inspectingLiveProcess]
  -[VMUStackLogReaderBase usesLiteMode]
  -[VMUStackLogReaderBase regionTracker]
  -[VMUStackLogReaderBase excludedFrames]
  -[VMUStackLogReaderBase setExcludedFrames:]
  -[VMUStackLogReaderBase task]


VMUCallTreeRootWithBacktrace : VMUCallTreeRoot
 @property  NSString *backtraceString

  // instance methods
  -[VMUCallTreeRootWithBacktrace .cxx_destruct]
  -[VMUCallTreeRootWithBacktrace backtraceString]
  -[VMUCallTreeRootWithBacktrace setBacktraceString:]


VMULeakDetector : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL showLeakedVMregions
 @property  BOOL showContext
 @property  BOOL showOnlyVMregions
 @property  BOOL fullStacks
 @property  BOOL showRawClassNames
 @property  BOOL showBinaryContents
 @property  BOOL checkAbandoned
 @property  BOOL suppressOutput
 @property  BOOL showListOfLeaks
 @property  BOOL groupByType
 @property  BOOL referenceTreeShowRegionVirtualSize
 @property  VMUDebugTimer *debugTimer
 @property  ^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq} outputFile
 @property  BOOL fcloseOutput
 @property  unsigned int objectContentLevel
 @property  unsigned int task
 @property  VMUProcessObjectGraph *graph
 @property  VMUTaskMemoryScanner *scanner
 @property  <VMUStackLogReader> *stackLogReader
 @property  ^v abandoned
 @property  ^v leakedNodes
 @property  NSMutableArray *leakTreeRootsArray
 @property  VMUProcessObjectGraph *leakedGraph

  // instance methods
  -[VMULeakDetector graph]
  -[VMULeakDetector dealloc]
  -[VMULeakDetector .cxx_destruct]
  -[VMULeakDetector scanner]
  -[VMULeakDetector objectContentLevel]
  -[VMULeakDetector setObjectContentLevel:]
  -[VMULeakDetector setDebugTimer:]
  -[VMULeakDetector setShowRawClassNames:]
  -[VMULeakDetector nodeDescription:]
  -[VMULeakDetector printout:]
  -[VMULeakDetector debugTimer]
  -[VMULeakDetector showRawClassNames]
  -[VMULeakDetector scannerOrGraph]
  -[VMULeakDetector labelForNode:details:shortLabel:]
  -[VMULeakDetector printContents:size:]
  -[VMULeakDetector nodeTypeDescription:details:mallocBySize:]
  -[VMULeakDetector nodeDescription:usingDetails:]
  -[VMULeakDetector setLeakedGraph:]
  -[VMULeakDetector setLeakTreeRootsArray:]
  -[VMULeakDetector referenceDescription:dstDescription:is64bit:]
  -[VMULeakDetector outputFile]
  -[VMULeakDetector checkTaskExistence]
  -[VMULeakDetector setLeakedNodes:]
  -[VMULeakDetector setAbandoned:]
  -[VMULeakDetector printLeak:node:details:region:stop:]
  -[VMULeakDetector buildLeakTree]
  -[VMULeakDetector printLeakTree]
  -[VMULeakDetector initWithTask:graph:scanner:stackLogReader:]
  -[VMULeakDetector doNormalLeakDetectionWithError:]
  -[VMULeakDetector showLeakedVMregions]
  -[VMULeakDetector setShowLeakedVMregions:]
  -[VMULeakDetector showContext]
  -[VMULeakDetector setShowContext:]
  -[VMULeakDetector showOnlyVMregions]
  -[VMULeakDetector setShowOnlyVMregions:]
  -[VMULeakDetector fullStacks]
  -[VMULeakDetector setFullStacks:]
  -[VMULeakDetector showBinaryContents]
  -[VMULeakDetector setShowBinaryContents:]
  -[VMULeakDetector checkAbandoned]
  -[VMULeakDetector setCheckAbandoned:]
  -[VMULeakDetector suppressOutput]
  -[VMULeakDetector setSuppressOutput:]
  -[VMULeakDetector showListOfLeaks]
  -[VMULeakDetector setShowListOfLeaks:]
  -[VMULeakDetector groupByType]
  -[VMULeakDetector setGroupByType:]
  -[VMULeakDetector referenceTreeShowRegionVirtualSize]
  -[VMULeakDetector setReferenceTreeShowRegionVirtualSize:]
  -[VMULeakDetector setOutputFile:]
  -[VMULeakDetector fcloseOutput]
  -[VMULeakDetector setFcloseOutput:]
  -[VMULeakDetector stackLogReader]
  -[VMULeakDetector abandoned]
  -[VMULeakDetector leakedNodes]
  -[VMULeakDetector leakTreeRootsArray]
  -[VMULeakDetector leakedGraph]
  -[VMULeakDetector task]


VMUVMRegionRangeInfo : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long address
 @property  unsigned long size
 @property  {_VMURange=QQ} range
 @property  unsigned long stackIdentifier
 @property  unsigned int userTag

  // instance methods
  -[VMUVMRegionRangeInfo range]
  -[VMUVMRegionRangeInfo init]
  -[VMUVMRegionRangeInfo setAddress:]
  -[VMUVMRegionRangeInfo address]
  -[VMUVMRegionRangeInfo size]
  -[VMUVMRegionRangeInfo userTag]
  -[VMUVMRegionRangeInfo stackIdentifier]
  -[VMUVMRegionRangeInfo setStackIdentifier:]
  -[VMUVMRegionRangeInfo setUserTag:]
  -[VMUVMRegionRangeInfo setSize:]


VMUVMRegionTracker : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  long long regionCount

  // class methods
  +[VMUVMRegionTracker initialize]
  +[VMUVMRegionTracker supportsSecureCoding]
  +[VMUVMRegionTracker _claimUnarchivingOfClass:]

  // instance methods
  -[VMUVMRegionTracker .cxx_destruct]
  -[VMUVMRegionTracker encodeWithCoder:]
  -[VMUVMRegionTracker regionCount]
  -[VMUVMRegionTracker vmRegionRangeInfoForRange:]
  -[VMUVMRegionTracker handleStackLogType:address:size:stackID:]
  -[VMUVMRegionTracker _regionIndexForAddress:]
  -[VMUVMRegionTracker initWithTask:stackLogReader:]
  -[VMUVMRegionTracker convertStackIDs:]
  -[VMUVMRegionTracker initWithTask:]
  -[VMUVMRegionTracker initWithCoder:]


VMUProcessDescription : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long physicalFootprint
 @property  unsigned long physicalFootprintPeak

  // class methods
  +[VMUProcessDescription parseBinaryImagesDescription:]
  +[VMUProcessDescription symbolicatorFromBinaryImagesDescription:]

  // instance methods
  -[VMUProcessDescription executablePath]
  -[VMUProcessDescription processIdentifier]
  -[VMUProcessDescription cpuType]
  -[VMUProcessDescription dealloc]
  -[VMUProcessDescription processName]
  -[VMUProcessDescription .cxx_destruct]
  -[VMUProcessDescription date]
  -[VMUProcessDescription initWithTask:getBinariesList:]
  -[VMUProcessDescription binaryImagesDescription]
  -[VMUProcessDescription physicalFootprint]
  -[VMUProcessDescription physicalFootprintPeak]
  -[VMUProcessDescription pid]
  -[VMUProcessDescription binaryImages]
  -[VMUProcessDescription valueForEnvVar:]
  -[VMUProcessDescription initFromCorpse]
  -[VMUProcessDescription initFromLiveProcess]
  -[VMUProcessDescription _libraryLoaded:]
  -[VMUProcessDescription cleansePathsIncludingBinaryImageList:]
  -[VMUProcessDescription processVersionDictionary]
  -[VMUProcessDescription _sanitizeVersion:]
  -[VMUProcessDescription setCrashReporterInfo]
  -[VMUProcessDescription _bundleLock]
  -[VMUProcessDescription clearCrashReporterInfo]
  -[VMUProcessDescription _rangesOfBinaryImages:forBacktraces:]
  -[VMUProcessDescription _binaryImagesDescriptionForRanges:]
  -[VMUProcessDescription _buildVersionDictionary]
  -[VMUProcessDescription _osVersionDictionary]
  -[VMUProcessDescription _buildInfoDescription]
  -[VMUProcessDescription processVersion]
  -[VMUProcessDescription parentProcessName]
  -[VMUProcessDescription _systemVersionDescription]
  -[VMUProcessDescription processDescriptionHeader]
  -[VMUProcessDescription dateAndVersionDescription]
  -[VMUProcessDescription initWithPid:orTask:]
  -[VMUProcessDescription processStatisticsDescription]
  -[VMUProcessDescription parentPid]
  -[VMUProcessDescription parentProcessPath]
  -[VMUProcessDescription binaryImagesDescriptionForBacktraces:]
  -[VMUProcessDescription binaryImageDictionaryForAddress:]
  -[VMUProcessDescription task]
  -[VMUProcessDescription _cpuTypeDescription]
  -[VMUProcessDescription bundleIdentifier]
  -[VMUProcessDescription displayName]
  -[VMUProcessDescription is64Bit]
  -[VMUProcessDescription isAppleApplication]


VMUOptionParser : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *purposeDescription
 @property  NSString *syntaxDescription
 @property  NSString *discussion
 @property  BOOL singleHyphenLongNames
 @property  BOOL parametersShowAsAssignment
 @property  int optind

  // instance methods
  -[VMUOptionParser init]
  -[VMUOptionParser dealloc]
  -[VMUOptionParser optind]
  -[VMUOptionParser usage:]
  -[VMUOptionParser .cxx_destruct]
  -[VMUOptionParser discussion]
  -[VMUOptionParser registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:flags:handler:]
  -[VMUOptionParser parseArguments:withBlock:]
  -[VMUOptionParser printOptionDescriptions:]
  -[VMUOptionParser usage:shouldExit:]
  -[VMUOptionParser parseArgumentsArray:withBlock:]
  -[VMUOptionParser syntaxDescription]
  -[VMUOptionParser registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:handler:]
  -[VMUOptionParser purposeDescription]
  -[VMUOptionParser setPurposeDescription:]
  -[VMUOptionParser setSyntaxDescription:]
  -[VMUOptionParser setDiscussion:]
  -[VMUOptionParser singleHyphenLongNames]
  -[VMUOptionParser setSingleHyphenLongNames:]
  -[VMUOptionParser parametersShowAsAssignment]
  -[VMUOptionParser setParametersShowAsAssignment:]


VMUNodeToStringMap : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
  // class methods
  +[VMUNodeToStringMap initialize]
  +[VMUNodeToStringMap supportsSecureCoding]
  +[VMUNodeToStringMap _claimUnarchivingOfClass:]

  // instance methods
  -[VMUNodeToStringMap init]
  -[VMUNodeToStringMap dealloc]
  -[VMUNodeToStringMap .cxx_destruct]
  -[VMUNodeToStringMap encodeWithCoder:]
  -[VMUNodeToStringMap uniquedStringCount]
  -[VMUNodeToStringMap _indexForString:]
  -[VMUNodeToStringMap setString:forNode:]
  -[VMUNodeToStringMap stringForNode:]
  -[VMUNodeToStringMap count]
  -[VMUNodeToStringMap initWithCoder:]


VMUScanOverlay : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *refinementRules

  // class methods
  +[VMUScanOverlay defaultOverlayWithScanner:]
  +[VMUScanOverlay defaultOverlay]

  // instance methods
  -[VMUScanOverlay .cxx_destruct]
  -[VMUScanOverlay initWithScanner:]
  -[VMUScanOverlay addMetadataRefinementRule:]
  -[VMUScanOverlay refinementRules]


VMUTaskStackLogReader : VMUStackLogReaderBase <VMUStackLogReader>
 @property  VMUTaskMemoryScanner *scanner
 @property  unsigned int task
 @property  BOOL is64bit
 @property  BOOL inspectingLiveProcess
 @property  BOOL usesLiteMode
 @property  BOOL coldestFrameIsNotThreadId
 @property  VMUVMRegionTracker *regionTracker
 @property  NSSet *excludedFrames
 @property  unsigned long nodesInUniquingTable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VMUTaskStackLogReader dealloc]
  -[VMUTaskStackLogReader .cxx_destruct]
  -[VMUTaskStackLogReader scanner]
  -[VMUTaskStackLogReader is64bit]
  -[VMUTaskStackLogReader setScanner:]
  -[VMUTaskStackLogReader vmuVMRegionForAddress:]
  -[VMUTaskStackLogReader getFramesForStackID:stackFramesBuffer:]
  -[VMUTaskStackLogReader enumerateRecords:]
  -[VMUTaskStackLogReader getFramesForNode:inLiteZone:stackFramesBuffer:]
  -[VMUTaskStackLogReader binaryImagePathForPCaddress:]
  -[VMUTaskStackLogReader functionNameForPCaddress:]
  -[VMUTaskStackLogReader sourcePathForPCaddress:]
  -[VMUTaskStackLogReader functionRangeContainingPCaddress:]
  -[VMUTaskStackLogReader binaryImageRangeForPCaddress:]
  -[VMUTaskStackLogReader sourceFileNameAndLineNumberForPCaddress:fullPath:]
  -[VMUTaskStackLogReader enumerateMSLRecordsAndPayloads:]
  -[VMUTaskStackLogReader getFramesForAddress:size:inLiteZone:stackFramesBuffer:]
  -[VMUTaskStackLogReader sourceFileNameForPCaddress:]
  -[VMUTaskStackLogReader sourceLineNumberForPCaddress:]
  -[VMUTaskStackLogReader inspectingLiveProcess]
  -[VMUTaskStackLogReader regionTracker]
  -[VMUTaskStackLogReader nodesInUniquingTable]
  -[VMUTaskStackLogReader liteModeStackIDforAddress:size:]
  -[VMUTaskStackLogReader liteModeStackIDforVMregionAddress:]
  -[VMUTaskStackLogReader liteMSLPayloadforMallocAddress:size:]
  -[VMUTaskStackLogReader liteMSLPayloadforVMregionAddress:]
  -[VMUTaskStackLogReader initWithTask:symbolicator:]
  -[VMUTaskStackLogReader initWithTask:]


VMUCallTreePseudoNode : VMUCallTreeNode
  // instance methods
  -[VMUCallTreePseudoNode isPseudo]
  -[VMUCallTreePseudoNode pseudoNodeTopOfStackChild]
  -[VMUCallTreePseudoNode sortedChildrenWithPseudoNode]
  -[VMUCallTreePseudoNode largestTopOfStackPath]


VMUCallTreeNode : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VMUCallTreeNode rootForSamples:symbolicator:sampler:options:]
  +[VMUCallTreeNode nodeWithName:address:count:numBytes:]
  +[VMUCallTreeNode rootForSamples:symbolicator:]
  +[VMUCallTreeNode makeFakeRootForNode:]

  // instance methods
  -[VMUCallTreeNode parent]
  -[VMUCallTreeNode numBytes]
  -[VMUCallTreeNode compare:]
  -[VMUCallTreeNode addChild:]
  -[VMUCallTreeNode address]
  -[VMUCallTreeNode dealloc]
  -[VMUCallTreeNode .cxx_destruct]
  -[VMUCallTreeNode name]
  -[VMUCallTreeNode childAtIndex:]
  -[VMUCallTreeNode isPseudo]
  -[VMUCallTreeNode numChildren]
  -[VMUCallTreeNode sortedChildren]
  -[VMUCallTreeNode comparePuttingRetainCycleNodesAtTop:]
  -[VMUCallTreeNode sumOfChildCounts]
  -[VMUCallTreeNode printCallTreeToFile:options:]
  -[VMUCallTreeNode pseudoName]
  -[VMUCallTreeNode setChildren:]
  -[VMUCallTreeNode pseudoNodeTopOfStackChild]
  -[VMUCallTreeNode sortedChildrenWithPseudoNode]
  -[VMUCallTreeNode largestTopOfStackPath]
  -[VMUCallTreeNode browserName]
  -[VMUCallTreeNode initWithName:address:count:numBytes:]
  -[VMUCallTreeNode getBrowserName:]
  -[VMUCallTreeNode findOrAddChildWithName:address:nodeSearchType:isLeafNode:]
  -[VMUCallTreeNode compareSizeAndCount:]
  -[VMUCallTreeNode symbolNameIsUnknown]
  -[VMUCallTreeNode parseNameIntoSymbol:library:loadAddress:offset:address:suffix:]
  -[VMUCallTreeNode sortedChildrenWithPseudoNode:withCompare:]
  -[VMUCallTreeNode nameWithoutOffset]
  -[VMUCallTreeNode comparePuttingMainThreadFirst:]
  -[VMUCallTreeNode isMallocBlockContentNode]
  -[VMUCallTreeNode countFunctionOccurrencesInTree:]
  -[VMUCallTreeNode callTreeHasBranches]
  -[VMUCallTreeNode _printCallTreeToFile:cumulativeOutput:indentString:branchPointCount:topFunctions:options:]
  -[VMUCallTreeNode fullOutputWithThreshold:showPseudoNodes:]
  -[VMUCallTreeNode stringFromCallTreeWithOptions:]
  -[VMUCallTreeNode stringFromCallTreeIndentIfNoBranches:showPseudoNodes:]
  -[VMUCallTreeNode pruneCount:]
  -[VMUCallTreeNode printCallTreeToFile:]
  -[VMUCallTreeNode filterOutSymbols:required:]
  -[VMUCallTreeNode chargeLibrariesInSet:toCaller:parentLibrary:]
  -[VMUCallTreeNode pruneMallocSize:]
  -[VMUCallTreeNode allChildren]
  -[VMUCallTreeNode findOrAddChildWithName:address:]
  -[VMUCallTreeNode fullOutputWithThreshold:]
  -[VMUCallTreeNode nameWithStringsForSymbol:library:loadAddress:offset:address:suffix:]
  -[VMUCallTreeNode stringFromCallTreeIndentIfNoBranches:]
  -[VMUCallTreeNode printCallTree]
  -[VMUCallTreeNode invertedNode]
  -[VMUCallTreeNode filterOutSymbols:]
  -[VMUCallTreeNode chargeLibrariesToCallers:keepBoundaries:]
  -[VMUCallTreeNode chargeSystemLibrariesToCallersAndKeepBoundaries:]
  -[VMUCallTreeNode count]


VMURangeToStringMap : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
  // class methods
  +[VMURangeToStringMap initialize]
  +[VMURangeToStringMap supportsSecureCoding]
  +[VMURangeToStringMap _claimUnarchivingOfClass:]

  // instance methods
  -[VMURangeToStringMap init]
  -[VMURangeToStringMap sort]
  -[VMURangeToStringMap dealloc]
  -[VMURangeToStringMap .cxx_destruct]
  -[VMURangeToStringMap encodeWithCoder:]
  -[VMURangeToStringMap stringForIndex:]
  -[VMURangeToStringMap uniquedStringCount]
  -[VMURangeToStringMap setString:forRange:]
  -[VMURangeToStringMap indexForString:insertIfMissing:]
  -[VMURangeToStringMap stringForAddress:]
  -[VMURangeToStringMap rangeContainingAddress:]
  -[VMURangeToStringMap rangeForString:startingAtAddress:]
  -[VMURangeToStringMap count]
  -[VMURangeToStringMap initWithCoder:]


VMUStackLogConsolidator : NSObject /usr/lib/libc++.1.dylib
 @property  VMUDebugTimer *debugTimer

  // instance methods
  -[VMUStackLogConsolidator .cxx_destruct]
  -[VMUStackLogConsolidator setDebugTimer:]
  -[VMUStackLogConsolidator debugTimer]
  -[VMUStackLogConsolidator stackIDsToNodesWithFilter:]
  -[VMUStackLogConsolidator initWithGraph:stackLogReader:]
  -[VMUStackLogConsolidator callTreeWithOptions:nodeFilter:]


VMUProcList : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VMUProcList update]
  -[VMUProcList init]
  -[VMUProcList .cxx_destruct]
  -[VMUProcList allPIDs]
  -[VMUProcList allNames]
  -[VMUProcList appsOnly]
  -[VMUProcList ownedOnly:]
  -[VMUProcList updateFromSystem]
  -[VMUProcList _populateFromSystem]
  -[VMUProcList newestProcInfoWithName:]
  -[VMUProcList setProcInfos:]
  -[VMUProcList addProcInfo:]
  -[VMUProcList removeProcInfo:]
  -[VMUProcList setOwnedOnly:]
  -[VMUProcList setAppsOnly:]
  -[VMUProcList allProcInfos]
  -[VMUProcList allPathNames]
  -[VMUProcList newestProcInfo]
  -[VMUProcList procInfoWithPID:]
  -[VMUProcList count]


VMUSampler : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VMUSampler initialize]
  +[VMUSampler sampleAllThreadsOfPID:]
  +[VMUSampler sampleAllThreadsOfTask:]
  +[VMUSampler sampleAllThreadsOfTask:symbolicate:]

  // instance methods
  -[VMUSampler samplingInterval]
  -[VMUSampler preloadSymbols]
  -[VMUSampler sampleCount]
  -[VMUSampler _checkDispatchThreadLimits]
  -[VMUSampler setRecordThreadStates:]
  -[VMUSampler _fixupStacks:]
  -[VMUSampler sampleAllThreadsOnceWithFramePointers:]
  -[VMUSampler dealloc]
  -[VMUSampler writeOutput:append:]
  -[VMUSampler setSamplingInterval:]
  -[VMUSampler .cxx_destruct]
  -[VMUSampler threadDescriptionStringForBacktrace:returnedAddress:]
  -[VMUSampler flushData]
  -[VMUSampler forceStop]
  -[VMUSampler recordSampleTo:beginTime:endTime:thread:recordFramePointers:clearMemoryCache:]
  -[VMUSampler _makeHighPriority]
  -[VMUSampler dispatchQueueNameForSerialNumber:returnedConcurrentFlag:returnedThreadId:]
  -[VMUSampler initWithPID:orTask:options:]
  -[VMUSampler stop]
  -[VMUSampler pid]
  -[VMUSampler waitUntilDone]
  -[VMUSampler initWithPID:]
  -[VMUSampler symbolicator]
  -[VMUSampler dispatchQueueNameForSerialNumber:]
  -[VMUSampler initWithTask:options:]
  -[VMUSampler threadNameForThread:returnedThreadId:returnedDispatchQueueSerialNum:]
  -[VMUSampler sampleThread:]
  -[VMUSampler samples]
  -[VMUSampler initWithPID:options:]
  -[VMUSampler setTimeLimit:]
  -[VMUSampler initWithPID:task:processName:is64Bit:options:]
  -[VMUSampler setSampleLimit:]
  -[VMUSampler setDelegate:]
  -[VMUSampler outputString]
  -[VMUSampler mainThread]
  -[VMUSampler sampleAllThreadsOnce]
  -[VMUSampler stopSampling]
  -[VMUSampler initializeSamplingContextWithOptions:]
  -[VMUSampler sampleLimit]
  -[VMUSampler threadNameForThread:]
  -[VMUSampler delegate]
  -[VMUSampler sampleForDuration:interval:]
  -[VMUSampler initWithTask:]
  -[VMUSampler timeLimit]
  -[VMUSampler stopSamplingAndReturnCallNode]
  -[VMUSampler _makeTimeshare]
  -[VMUSampler start]
  -[VMUSampler _runSamplingThread]


VMUTaskMemoryCache : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VMUTaskMemoryCache taskMemoryCacheForTask:]
  +[VMUTaskMemoryCache taskIs64Bit:]

  // instance methods
  -[VMUTaskMemoryCache dealloc]
  -[VMUTaskMemoryCache flushMemoryCache]
  -[VMUTaskMemoryCache mapAddress:size:]
  -[VMUTaskMemoryCache mapAddress:size:returnedAddress:returnedSize:]
  -[VMUTaskMemoryCache stopPeeking]
  -[VMUTaskMemoryCache peekAtAddress:size:returnsBuf:]
  -[VMUTaskMemoryCache enumerateMemoryCache:]
  -[VMUTaskMemoryCache startPeeking]
  -[VMUTaskMemoryCache readPointerAt:value:]
  -[VMUTaskMemoryCache copyRange:to:]
  -[VMUTaskMemoryCache initWithTask:]


VMUAbstractSerializer : NSObject /usr/lib/libc++.1.dylib

VMUSimpleSerializer : VMUAbstractSerializer
  // instance methods
  -[VMUSimpleSerializer init]
  -[VMUSimpleSerializer dealloc]
  -[VMUSimpleSerializer serialize32:]
  -[VMUSimpleSerializer serialize64:]
  -[VMUSimpleSerializer copyContiguousData]
  -[VMUSimpleSerializer serializeString:]
  -[VMUSimpleSerializer serializeNullTerminatedBytes:]
  -[VMUSimpleSerializer _serializeValues:count:]


VMUSimpleDeserializer : VMUAbstractSerializer
  // instance methods
  -[VMUSimpleDeserializer dealloc]
  -[VMUSimpleDeserializer .cxx_destruct]
  -[VMUSimpleDeserializer initWithData:]
  -[VMUSimpleDeserializer deserialize32WithError:]
  -[VMUSimpleDeserializer deserialize64WithError:]
  -[VMUSimpleDeserializer copyDeserializedStringWithError:]
  -[VMUSimpleDeserializer copyDeserializedStringWithID:error:]
  -[VMUSimpleDeserializer skipFields:]
  -[VMUSimpleDeserializer copyDeserializedNullTerminatedBytesWithError:]
  -[VMUSimpleDeserializer _deserializeValues:error:]


VMURangeArray : NSObject /usr/lib/libc++.1.dylib <NSCopying>
  // instance methods
  -[VMURangeArray setCapacity:]
  -[VMURangeArray copyWithZone:]
  -[VMURangeArray range]
  -[VMURangeArray init]
  -[VMURangeArray sort]
  -[VMURangeArray rangeAtIndex:]
  -[VMURangeArray dealloc]
  -[VMURangeArray ranges]
  -[VMURangeArray indexForLocation:]
  -[VMURangeArray removeRangeAtIndex:]
  -[VMURangeArray removeAllRanges]
  -[VMURangeArray intersectsLocation:]
  -[VMURangeArray addRanges:]
  -[VMURangeArray initWithRanges:count:]
  -[VMURangeArray rangeForLocation:]
  -[VMURangeArray insertRange:atIndex:]
  -[VMURangeArray subrangeNotExcludedBySelfForRange:]
  -[VMURangeArray largestRange]
  -[VMURangeArray sumLengths]
  -[VMURangeArray count]
  -[VMURangeArray addRange:]
  -[VMURangeArray intersectsRange:]


VMUNonOverlappingRangeArray : VMURangeArray
  // instance methods
  -[VMUNonOverlappingRangeArray addOrExtendRange:]
  -[VMUNonOverlappingRangeArray mergeRange:]
  -[VMUNonOverlappingRangeArray mergeRange:excludingRanges:]
  -[VMUNonOverlappingRangeArray _mergeAllBitsOfRange:excludingRanges:mergeRanges:]
  -[VMUNonOverlappingRangeArray sortAndMergeRanges]
  -[VMUNonOverlappingRangeArray mergeRanges:]
  -[VMUNonOverlappingRangeArray mergeRanges:excludingRanges:]
  -[VMUNonOverlappingRangeArray subtract:mergeRanges:]


VMUClassInfo : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned int defaultScanType
 @property  BOOL hasSpecificLayout
 @property  BOOL hasVariantLayout
 @property  unsigned int pointerSize
 @property  BOOL usesSwiftRefcounting
 @property  unsigned int ivarCount
 @property  NSString *typeName
 @property  NSString *className
 @property  NSString *displayName
 @property  NSString *binaryName
 @property  NSString *binaryPath
 @property  NSString *fullIvarDescription
 @property  NSString *shortIvarDescription
 @property  VMUClassInfo *superclassInfo
 @property  VMUClassInfo *genericInfo
 @property  unsigned int infoType
 @property  unsigned long remoteIsa
 @property  unsigned int instanceSize
 @property  BOOL isARR
 @property  BOOL isRealized
 @property  BOOL isMetaClass
 @property  BOOL isRootClass
 @property  BOOL hasCppConstructorOrDestructor

  // class methods
  +[VMUClassInfo initialize]
  +[VMUClassInfo classInfoWithClassName:binaryPath:type:]
  +[VMUClassInfo _genericBlockByrefInfo]
  +[VMUClassInfo descriptionForTypeEncoding:ivarName:]
  +[VMUClassInfo sizeofClassStructure]

  // instance methods
  -[VMUClassInfo isARR]
  -[VMUClassInfo dealloc]
  -[VMUClassInfo .cxx_destruct]
  -[VMUClassInfo _setDisplayName:]
  -[VMUClassInfo encodeWithCoder:]
  -[VMUClassInfo infoType]
  -[VMUClassInfo className]
  -[VMUClassInfo identifyObjCClassStructureBlocksWithScanner:addressIdentifierBlock:]
  -[VMUClassInfo hasSpecificLayout]
  -[VMUClassInfo instanceSpecificInfoForObject:ofSize:withScanner:memoryReader:]
  -[VMUClassInfo enumerateSublayoutsForSize:withBlock:]
  -[VMUClassInfo enumerateExternalValuesFromObject:withSize:block:]
  -[VMUClassInfo binaryPath]
  -[VMUClassInfo enumerateAllPointerFieldsWithBlock:]
  -[VMUClassInfo instanceSize]
  -[VMUClassInfo enumerateScanningLocationsForSize:withBlock:]
  -[VMUClassInfo defaultScanType]
  -[VMUClassInfo enumerateStoredEntriesForObject:ofSize:externalValues:block:]
  -[VMUClassInfo type]
  -[VMUClassInfo typeName]
  -[VMUClassInfo fieldAtOrBeforeOffset:]
  -[VMUClassInfo genericInfo]
  -[VMUClassInfo pointerSize]
  -[VMUClassInfo usesSwiftRefcounting]
  -[VMUClassInfo binaryName]
  -[VMUClassInfo mutableCopy]
  -[VMUClassInfo _setIsa:]
  -[VMUClassInfo firstFieldWithName:]
  -[VMUClassInfo superclassInfo]
  -[VMUClassInfo remoteIsa]
  -[VMUClassInfo initWithClassName:binaryPath:type:]
  -[VMUClassInfo _processARRLayout:scanType:]
  -[VMUClassInfo _demangleClassName]
  -[VMUClassInfo hasVariantLayout]
  -[VMUClassInfo _objcABIFromObjectIdentifier:]
  -[VMUClassInfo _setClassNameWithAddress:symbolicator:]
  -[VMUClassInfo _parseIvarsAndLayouts]
  -[VMUClassInfo isRootClass]
  -[VMUClassInfo _freeLocalIvarList]
  -[VMUClassInfo isEqual:]
  -[VMUClassInfo _initWithClass:type:realizedOnly:infoMap:objectIdentifier:reader:]
  -[VMUClassInfo _determineBinaryPathUsingObjectIdentifier:remoteClassNameLoc:]
  -[VMUClassInfo _setBinaryPath:sanitize:]
  -[VMUClassInfo ivarCount]
  -[VMUClassInfo _copyWithInstanceSize:superclassOffset:asVariant:mutable:]
  -[VMUClassInfo _identifyObjCClassStructureBlocksForIsa:isMetaclass:withScanner:addressIdentifierBlock:]
  -[VMUClassInfo initWithSerializer:classMap:version:error:]
  -[VMUClassInfo _logDescriptionWithSuperclasses:indentation:toLogger:]
  -[VMUClassInfo _applyExtendedLayout:withSize:]
  -[VMUClassInfo enumerateAllFieldsWithBlock:]
  -[VMUClassInfo _totalIvarCount]
  -[VMUClassInfo enumerateClassHierarchyWithBlock:]
  -[VMUClassInfo enumerateTypeFieldsWithBlock:]
  -[VMUClassInfo enumeratePointerTypeFieldsWithBlock:]
  -[VMUClassInfo fullIvarDescription]
  -[VMUClassInfo _setSuperclassInfo:]
  -[VMUClassInfo _setDefaultScanType:]
  -[VMUClassInfo _setFields:]
  -[VMUClassInfo initWithClosureContext:typeInfo:infoMap:swiftFieldMetadataContext:]
  -[VMUClassInfo initSwiftClassWithName:classInfoType:size:]
  -[VMUClassInfo initWithClass:type:infoMap:objectIdentifier:reader:]
  -[VMUClassInfo initWithRealizedClass:type:infoMap:objectIdentifier:reader:]
  -[VMUClassInfo _addFields:]
  -[VMUClassInfo serializeWithClassMap:simpleSerializer:version:]
  -[VMUClassInfo instanceSpecificInfoForObject:ofSize:memoryReader:]
  -[VMUClassInfo _replaceField:withFields:]
  -[VMUClassInfo _replaceFieldRecursively:withField:]
  -[VMUClassInfo _addVariantAction:withEvaluator:]
  -[VMUClassInfo shortIvarDescription]
  -[VMUClassInfo isRealized]
  -[VMUClassInfo scanDescriptionWithSize:]
  -[VMUClassInfo isMetaClass]
  -[VMUClassInfo hasCppConstructorOrDestructor]
  -[VMUClassInfo displayName]
  -[VMUClassInfo initWithCoder:]


VMUMutableClassInfo : VMUClassInfo
 @property  VMUClassInfo *superclassInfo
 @property  NSString *displayName
 @property  NSString *binaryPath
 @property  unsigned int defaultScanType

  // instance methods
  -[VMUMutableClassInfo setFields:]
  -[VMUMutableClassInfo addFields:]
  -[VMUMutableClassInfo setDisplayName:]
  -[VMUMutableClassInfo setDefaultScanType:]
  -[VMUMutableClassInfo addVariant:forField:withEvaluator:]
  -[VMUMutableClassInfo mutateTypeFieldsWithBlock:]
  -[VMUMutableClassInfo replaceField:withFields:]
  -[VMUMutableClassInfo setVariantScanType:withEvaluator:]
  -[VMUMutableClassInfo addVariantRecursively:forField:withEvaluator:]
  -[VMUMutableClassInfo mutateTypeFieldsRecursivelyWithBlock:]
  -[VMUMutableClassInfo setSuperclassInfo:]
  -[VMUMutableClassInfo setBinaryPath:]


VMUFieldValue : NSObject /usr/lib/libc++.1.dylib
 @property  VMUFieldInfo *field
 @property  unsigned long value

  // instance methods
  -[VMUFieldValue field]
  -[VMUFieldValue .cxx_destruct]
  -[VMUFieldValue initWithField:value:]
  -[VMUFieldValue value]


VMUSwiftRuntimeInfo : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long nativeWeakReferenceMarkerMask
 @property  unsigned long nativeWeakReferenceMarkerValue
 @property  unsigned long nativeWeakReferencePointerMask
 @property  BOOL nativeWeakReferencePointerIsSideTable
 @property  unsigned long refcountIsSideTableMarkerMask
 @property  unsigned long refcountIsSideTableMarkerValue
 @property  unsigned long sideTablePointerMask
 @property  unsigned char sideTablePointerRightShift
 @property  unsigned char sideTablePointerLeftShift
 @property  VMUMutableClassInfo *sideTableLayout
 @property  VMUMutableClassInfo *unownedExtraDataLayout
 @property  BOOL runtimeHasStableABI

  // instance methods
  -[VMUSwiftRuntimeInfo .cxx_destruct]
  -[VMUSwiftRuntimeInfo nativeWeakReferencePointerMask]
  -[VMUSwiftRuntimeInfo sideTablePointerMask]
  -[VMUSwiftRuntimeInfo refcountIsSideTableMarkerMask]
  -[VMUSwiftRuntimeInfo refcountIsSideTableMarkerValue]
  -[VMUSwiftRuntimeInfo sideTablePointerRightShift]
  -[VMUSwiftRuntimeInfo sideTablePointerLeftShift]
  -[VMUSwiftRuntimeInfo sideTableLayout]
  -[VMUSwiftRuntimeInfo nativeWeakReferencePointerIsSideTable]
  -[VMUSwiftRuntimeInfo nativeWeakReferenceMarkerMask]
  -[VMUSwiftRuntimeInfo nativeWeakReferenceMarkerValue]
  -[VMUSwiftRuntimeInfo unownedExtraDataLayout]
  -[VMUSwiftRuntimeInfo initWithSwiftCore:memoryReader:]
  -[VMUSwiftRuntimeInfo runtimeHasStableABI]


VMUDebugTimer : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VMUDebugTimer sharedTimerIfCreated]
  +[VMUDebugTimer sharedTimer]

  // instance methods
  -[VMUDebugTimer init]
  -[VMUDebugTimer .cxx_destruct]
  -[VMUDebugTimer startWithMessage:]
  -[VMUDebugTimer stop]
  -[VMUDebugTimer _endEvent]


__VMULeaksMarkerObject : NSObject /usr/lib/libc++.1.dylib
 @property  ^{?=QIIIIIIQ} region
 @property  unsigned int entryIndex

  // instance methods
  -[__VMULeaksMarkerObject dealloc]
  -[__VMULeaksMarkerObject entryIndex]
  -[__VMULeaksMarkerObject setRegion:]
  -[__VMULeaksMarkerObject region]
  -[__VMULeaksMarkerObject setEntryIndex:]


VMUFieldInfo : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned int flags
 @property  BOOL isCapture
 @property  BOOL isByref
 @property  BOOL isStorageImplPointer
 @property  BOOL isArraySize
 @property  BOOL isArrayEntries
 @property  BOOL isStorageBitmapPointer
 @property  BOOL isKeysPointer
 @property  BOOL isValuesPointer
 @property  BOOL isValueField
 @property  BOOL isKeyField
 @property  ^v swiftTyperef
 @property  NSString *typedDescription
 @property  NSString *ivarName
 @property  NSString *typeName
 @property  unsigned int scanType
 @property  unsigned int offset
 @property  unsigned int size
 @property  unsigned int scannableSize
 @property  unsigned int stride
 @property  unsigned int bitfieldWidth
 @property  VMUClassInfo *destinationLayout
 @property  NSArray *subFieldArray

  // instance methods
  -[VMUFieldInfo isByref]
  -[VMUFieldInfo scanType]
  -[VMUFieldInfo dealloc]
  -[VMUFieldInfo size]
  -[VMUFieldInfo .cxx_destruct]
  -[VMUFieldInfo fullIvarNameAtOffset:]
  -[VMUFieldInfo getLeafFieldAtOffset:leafOffset:]
  -[VMUFieldInfo _setSize:]
  -[VMUFieldInfo typeName]
  -[VMUFieldInfo stride]
  -[VMUFieldInfo mutableCopy]
  -[VMUFieldInfo ivarName]
  -[VMUFieldInfo initWithName:type:scan:offset:size:]
  -[VMUFieldInfo offset]
  -[VMUFieldInfo initWithObjcIvar:size:isARC:is64Bit:]
  -[VMUFieldInfo isEqual:]
  -[VMUFieldInfo initWithSerializer:classMap:version:error:]
  -[VMUFieldInfo destinationLayout]
  -[VMUFieldInfo scannableSize]
  -[VMUFieldInfo isArraySize]
  -[VMUFieldInfo isArrayEntries]
  -[VMUFieldInfo isKeysPointer]
  -[VMUFieldInfo isStorageImplPointer]
  -[VMUFieldInfo isStorageBitmapPointer]
  -[VMUFieldInfo isValuesPointer]
  -[VMUFieldInfo isKeyField]
  -[VMUFieldInfo isValueField]
  -[VMUFieldInfo subFieldArray]
  -[VMUFieldInfo serializeWithClassMap:simpleSerializer:version:]
  -[VMUFieldInfo initWithName:type:kind:scan:offset:size:stride:subFieldArray:swiftTyperef:]
  -[VMUFieldInfo isCapture]
  -[VMUFieldInfo initWithSerializer:classMap:version:returnedDestinationLayoutClassInfoIndex:error:]
  -[VMUFieldInfo _getFieldAtOffset:]
  -[VMUFieldInfo typedDescription]
  -[VMUFieldInfo _setFlags:]
  -[VMUFieldInfo _fullIvarNameAtOffset:leafOffset:depth:]
  -[VMUFieldInfo initializeSubFieldArray]
  -[VMUFieldInfo initStorageInfoFieldWithName:type:kind:scan:offset:size:stride:subFieldArray:]
  -[VMUFieldInfo initStorageEntryFieldWithName:type:kind:scan:offset:size:stride:subFieldArray:]
  -[VMUFieldInfo _setIvarName:]
  -[VMUFieldInfo _setTypeName:]
  -[VMUFieldInfo _setScanType:]
  -[VMUFieldInfo _setOffset:]
  -[VMUFieldInfo bitfieldWidth]
  -[VMUFieldInfo _setScannableSize:]
  -[VMUFieldInfo _setStride:]
  -[VMUFieldInfo _setDestinationLayout:]
  -[VMUFieldInfo descriptionOfFieldValueInObjectMemory:scanner:]
  -[VMUFieldInfo swiftTyperef]
  -[VMUFieldInfo flags]


VMUMutableFieldInfo : VMUFieldInfo
 @property  unsigned int scannableSize
 @property  unsigned int stride
 @property  unsigned int flags
 @property  BOOL isCapture
 @property  BOOL isByref
 @property  NSString *ivarName
 @property  NSString *typeName
 @property  unsigned int scanType
 @property  VMUClassInfo *destinationLayout

  // instance methods
  -[VMUMutableFieldInfo setScanType:]
  -[VMUMutableFieldInfo setFlags:]
  -[VMUMutableFieldInfo setStride:]
  -[VMUMutableFieldInfo setTypeName:]
  -[VMUMutableFieldInfo setOffset:]
  -[VMUMutableFieldInfo setDestinationLayout:]
  -[VMUMutableFieldInfo setIsByref:]
  -[VMUMutableFieldInfo setIsCapture:]
  -[VMUMutableFieldInfo setSize:]
  -[VMUMutableFieldInfo replaceFieldRecursively:withField:]
  -[VMUMutableFieldInfo mutateTypeFieldsRecursivelyWithBlock:parentOffset:]
  -[VMUMutableFieldInfo setScannableSize:]
  -[VMUMutableFieldInfo setIvarName:]
  -[VMUMutableFieldInfo addSubField:]


VMUVMRegionIdentifier : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VMUVMRegionIdentifier descriptionForRange:inSortedRegions:options:]

  // instance methods
  -[VMUVMRegionIdentifier init]
  -[VMUVMRegionIdentifier regions]
  -[VMUVMRegionIdentifier .cxx_destruct]
  -[VMUVMRegionIdentifier taskThreadStates]
  -[VMUVMRegionIdentifier initWithTask:options:]
  -[VMUVMRegionIdentifier _recordRegionsAroundAddress:regionDescriptionOptions:]
  -[VMUVMRegionIdentifier initWithTask:pid:options:]
  -[VMUVMRegionIdentifier descriptionOfRegionsAroundAddress:options:maximumLength:memorySizeDivisor:]
  -[VMUVMRegionIdentifier initWithGraph:options:]
  -[VMUVMRegionIdentifier descriptionForRegionTotalsWithOptions:memorySizeDivisor:]
  -[VMUVMRegionIdentifier descriptionForMallocZoneTotalsWithOptions:memorySizeDivisor:]
  -[VMUVMRegionIdentifier nonSubmapRegionContainingAddress:]
  -[VMUVMRegionIdentifier hasFractionalPageSizes]
  -[VMUVMRegionIdentifier descriptionForRange:]
  -[VMUVMRegionIdentifier descriptionForRange:options:]
  -[VMUVMRegionIdentifier descriptionOfRegionsAroundAddress:options:]
  -[VMUVMRegionIdentifier descriptionForRegionTotalsWithOptions:]
  -[VMUVMRegionIdentifier initWithTask:]


VMUObjectLabelHandlerInfo : NSObject /usr/lib/libc++.1.dylib
  // instance methods
  -[VMUObjectLabelHandlerInfo .cxx_destruct]


VMUObjectIdentifier : NSObject /usr/lib/libc++.1.dylib
 @property  VMUSwiftRuntimeInfo *swiftRuntimeInfoStableABI
 @property  VMUSwiftRuntimeInfo *swiftRuntimeInfoPreABI
 @property  ^{libSwiftRemoteMirrorWrapper=^{SwiftReflectionInteropContext}Q} swiftMirror
 @property  BOOL needToValidateAddressRange
 @property  BOOL hasSwiftContent
 @property  BOOL hasSwiftReflection
 @property  unsigned int objcABI
 @property  NSMutableDictionary *moduleNameToBinaryPathDict
 @property  @? memoryReader
 @property  VMUClassInfoMap *realizedClasses
 @property  unsigned long taggedPointerMask
 @property  {_CSTypeRef=QQ} symbolicator
 @property  unsigned int objectContentLevel
 @property  VMURangeArray *readonlyRegionRanges
 @property  ^{VMUAutoreleasePoolPageLayout=IIIQI} autoreleasePoolPageLayout

  // instance methods
  -[VMUObjectIdentifier dealloc]
  -[VMUObjectIdentifier .cxx_destruct]
  -[VMUObjectIdentifier _scanner]
  -[VMUObjectIdentifier objcABI]
  -[VMUObjectIdentifier initWithTask:symbolicator:scanner:]
  -[VMUObjectIdentifier realizedClasses]
  -[VMUObjectIdentifier addressOfSymbol:inLibrary:]
  -[VMUObjectIdentifier ObjCclassCount]
  -[VMUObjectIdentifier SwiftClassCount]
  -[VMUObjectIdentifier objectContentLevel]
  -[VMUObjectIdentifier setReadonlyRegionRanges:]
  -[VMUObjectIdentifier setObjectContentLevel:]
  -[VMUObjectIdentifier classInfoIndexForObjCClassStructurePointerType:]
  -[VMUObjectIdentifier memoryReader]
  -[VMUObjectIdentifier enumerateRealizedClassInfosWithBlock:]
  -[VMUObjectIdentifier swiftRuntimeInfoStableABI]
  -[VMUObjectIdentifier swiftRuntimeInfoPreABI]
  -[VMUObjectIdentifier classInfoForMemory:length:remoteAddress:]
  -[VMUObjectIdentifier hasSwiftContent]
  -[VMUObjectIdentifier autoreleasePoolPageLayout]
  -[VMUObjectIdentifier isTaggedPointer:]
  -[VMUObjectIdentifier labelForMemory:length:remoteAddress:classInfo:]
  -[VMUObjectIdentifier classInfoForObjectWithRange:]
  -[VMUObjectIdentifier symbolicator]
  -[VMUObjectIdentifier initWithTask:symbolicator:]
  -[VMUObjectIdentifier swiftMirror]
  -[VMUObjectIdentifier moduleNameToBinaryPathDict]
  -[VMUObjectIdentifier translateIsaPointer:]
  -[VMUObjectIdentifier createAutoreleasePoolPageLayout]
  -[VMUObjectIdentifier loadSwiftReflectionLibraries]
  -[VMUObjectIdentifier _populateSwiftABIVariables]
  -[VMUObjectIdentifier findCFTypes]
  -[VMUObjectIdentifier setupIsaTranslator]
  -[VMUObjectIdentifier findObjCAndSwiftClasses]
  -[VMUObjectIdentifier _generateClassInfosForObjCClassStructurePointerTypes]
  -[VMUObjectIdentifier _classInfoWithNonobjectType:binaryPath:]
  -[VMUObjectIdentifier _isValidInstanceLength:expectedLength:]
  -[VMUObjectIdentifier hasSwiftReflection]
  -[VMUObjectIdentifier _classInfoWithPthreadType:]
  -[VMUObjectIdentifier classInfoForNonobjectMemory:length:]
  -[VMUObjectIdentifier _returnFaultedClass:ofType:]
  -[VMUObjectIdentifier _faultClass:ofType:]
  -[VMUObjectIdentifier _findObjCAndSwiftClassesFromClass:recursionDepth:]
  -[VMUObjectIdentifier osMajorMinorVersionString]
  -[VMUObjectIdentifier buildIsaToObjectLabelHandlerMap]
  -[VMUObjectIdentifier uniquifyStringLabel:stringType:printDetail:]
  -[VMUObjectIdentifier labelForNSNumber:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSDate:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSString:mappedSize:remoteAddress:printDetail:]
  -[VMUObjectIdentifier objectLabelHandlerForRemoteIsa:]
  -[VMUObjectIdentifier _remoteAddressIsOKtoRead:]
  -[VMUObjectIdentifier labelForNSString:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSCFStringAtRemoteAddress:printDetail:]
  -[VMUObjectIdentifier labelForObjectOfClass:atOffset:ofObject:]
  -[VMUObjectIdentifier formattedDateLabel:]
  -[VMUObjectIdentifier labelForItemCount:]
  -[VMUObjectIdentifier labelForNSDictionary:length:remoteAddress:]
  -[VMUObjectIdentifier labelForMallocBlock:]
  -[VMUObjectIdentifier labelForNSSet:length:remoteAddress:]
  -[VMUObjectIdentifier labelForOSDispatchMach:length:remoteAddress:]
  -[VMUObjectIdentifier labelForOSXPCObject:length:remoteAddress:]
  -[VMUObjectIdentifier _findOffsetsInOSXPCConnection:length:]
  -[VMUObjectIdentifier labelForMallocBlock:usingHandlerBlock:]
  -[VMUObjectIdentifier labelForTaggedPointer:]
  -[VMUObjectIdentifier CFTypeCount]
  -[VMUObjectIdentifier labelForMemory:length:remoteAddress:classInfo:usingHandlerBlock:]
  -[VMUObjectIdentifier classInfoForObjCClassStructurePointerType:]
  -[VMUObjectIdentifier labelForClassStructure:length:remoteAddress:]
  -[VMUObjectIdentifier labelForClassDataRW:length:remoteAddress:]
  -[VMUObjectIdentifier _dlopenLibSwiftRemoteMirrorFromDir:]
  -[VMUObjectIdentifier labelForClassDataExtRW:length:remoteAddress:]
  -[VMUObjectIdentifier labelForClassDataRO:length:remoteAddress:]
  -[VMUObjectIdentifier _dlopenLibSwiftRemoteMirrorNearLibSwiftCoreWithSymbolicator:avoidSystem:]
  -[VMUObjectIdentifier _dlopenLibSwiftRemoteMirrorWithSymbolicator:]
  -[VMUObjectIdentifier _populateSwiftReflectionInfo:]
  -[VMUObjectIdentifier enumerateAllClassInfosWithBlock:]
  -[VMUObjectIdentifier classInfoForMemory:length:]
  -[VMUObjectIdentifier vmRegionRangeForAddress:]
  -[VMUObjectIdentifier symbolForAddress:]
  -[VMUObjectIdentifier classNameForTaggedPointer:]
  -[VMUObjectIdentifier labelForNSTaggedPointerStringCStringContainer:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSURL:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSConcreteAttributedString:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSPathStore2:length:remoteAddress:]
  -[VMUObjectIdentifier labelForCFBundle:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSBundle:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSArray:length:remoteAddress:]
  -[VMUObjectIdentifier taggedPointerMask]
  -[VMUObjectIdentifier labelForNSCFDictionary:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSConcreteHashTable:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSCFSet:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSData:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSConcreteData:length:remoteAddress:]
  -[VMUObjectIdentifier readonlyRegionRanges]
  -[VMUObjectIdentifier labelForNSConcreteMutableData:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSInlineData:length:remoteAddress:]
  -[VMUObjectIdentifier labelForOSDispatchQueue:length:remoteAddress:]
  -[VMUObjectIdentifier labelForOSLog:length:remoteAddress:]
  -[VMUObjectIdentifier noLabelForOSXPCObject:length:remoteAddress:]
  -[VMUObjectIdentifier labelForOSTransaction:length:remoteAddress:]
  -[VMUObjectIdentifier labelFor_NSActivityAssertion:length:remoteAddress:]
  -[VMUObjectIdentifier labelForOSXPCConnection:length:remoteAddress:]
  -[VMUObjectIdentifier labelForOSXPCActivity:length:remoteAddress:]
  -[VMUObjectIdentifier labelForProtocol:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSXPCInterface:length:remoteAddress:]
  -[VMUObjectIdentifier labelForNSXPCConnection:length:remoteAddress:]
  -[VMUObjectIdentifier labelFor__NSMallocBlock__:length:remoteAddress:]
  -[VMUObjectIdentifier labelForMemory:length:]
  -[VMUObjectIdentifier labelForMemory:length:remoteAddress:]
  -[VMUObjectIdentifier needToValidateAddressRange]
  -[VMUObjectIdentifier _dlopenLibSwiftRemoteMirrorNearExecutable]
  -[VMUObjectIdentifier _symbolicator]
  -[VMUObjectIdentifier initWithTask:]


VMUGraphStackLogReader : VMUStackLogReaderBase <NSSecureCoding, VMUStackLogReader>
 @property  VMUProcessObjectGraph *graph
 @property  NSData *diskLogs
 @property  unsigned int task
 @property  BOOL is64bit
 @property  BOOL inspectingLiveProcess
 @property  BOOL usesLiteMode
 @property  BOOL coldestFrameIsNotThreadId
 @property  VMUVMRegionTracker *regionTracker
 @property  NSSet *excludedFrames
 @property  unsigned long nodesInUniquingTable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VMUGraphStackLogReader initialize]
  +[VMUGraphStackLogReader supportsSecureCoding]
  +[VMUGraphStackLogReader _claimUnarchivingOfClass:]

  // instance methods
  -[VMUGraphStackLogReader graph]
  -[VMUGraphStackLogReader setGraph:]
  -[VMUGraphStackLogReader dealloc]
  -[VMUGraphStackLogReader .cxx_destruct]
  -[VMUGraphStackLogReader is64bit]
  -[VMUGraphStackLogReader encodeWithCoder:]
  -[VMUGraphStackLogReader initWithTask:symbolicator:graph:debugTimer:collectDisklogs:]
  -[VMUGraphStackLogReader vmuVMRegionForAddress:]
  -[VMUGraphStackLogReader stackIDForNode:]
  -[VMUGraphStackLogReader getFramesForStackID:stackFramesBuffer:]
  -[VMUGraphStackLogReader enumerateRecords:]
  -[VMUGraphStackLogReader getFramesForNode:inLiteZone:stackFramesBuffer:]
  -[VMUGraphStackLogReader binaryImagePathForPCaddress:]
  -[VMUGraphStackLogReader functionNameForPCaddress:]
  -[VMUGraphStackLogReader sourcePathForPCaddress:]
  -[VMUGraphStackLogReader functionRangeContainingPCaddress:]
  -[VMUGraphStackLogReader binaryImageRangeForPCaddress:]
  -[VMUGraphStackLogReader sourceFileNameAndLineNumberForPCaddress:fullPath:]
  -[VMUGraphStackLogReader enumerateMSLRecordsAndPayloads:]
  -[VMUGraphStackLogReader getFramesForAddress:size:inLiteZone:stackFramesBuffer:]
  -[VMUGraphStackLogReader sourceFileNameForPCaddress:]
  -[VMUGraphStackLogReader sourceLineNumberForPCaddress:]
  -[VMUGraphStackLogReader inspectingLiveProcess]
  -[VMUGraphStackLogReader nodesInUniquingTable]
  -[VMUGraphStackLogReader streamFullStackLogsToBlock:]
  -[VMUGraphStackLogReader diskLogs]
  -[VMUGraphStackLogReader copyOriginalUniquingTable:]
  -[VMUGraphStackLogReader populateBacktraceUniquingTableWithStackLogs:]
  -[VMUGraphStackLogReader symbolicateBacktraceUniquingTable]
  -[VMUGraphStackLogReader setDiskLogs:]
  -[VMUGraphStackLogReader _setFunctionName:forPCAddressRange:]
  -[VMUGraphStackLogReader _setSourcePath:lineNumber:forPCAddressRange:]
  -[VMUGraphStackLogReader _parseSourceInfoString:intoComponents:]
  -[VMUGraphStackLogReader sourceLineRangeContainingPCaddress:]
  -[VMUGraphStackLogReader initWithCoder:]


VMUBacktrace : NSObject /usr/lib/libc++.1.dylib <NSCopying>
  // instance methods
  -[VMUBacktrace copyWithZone:]
  -[VMUBacktrace setEndTime:]
  -[VMUBacktrace setStartTime:]
  -[VMUBacktrace initWithSamplingContext:thread:recordFramePointers:]
  -[VMUBacktrace dealloc]
  -[VMUBacktrace dispatchQueueSerialNumber]
  -[VMUBacktrace setThreadState:]
  -[VMUBacktrace backtrace]
  -[VMUBacktrace stackFramePointers]
  -[VMUBacktrace fixupStackWithSamplingContext:symbolicator:]
  -[VMUBacktrace thread]
  -[VMUBacktrace threadState]
  -[VMUBacktrace backtraceLength]
  -[VMUBacktrace initWithTask:thread:is64Bit:]
  -[VMUBacktrace _symbolicator]
  -[VMUBacktrace setLengthTime:]


VMUProcInfo : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VMUProcInfo getProcessIds]
  +[VMUProcInfo processParentId:]
  +[VMUProcInfo isProcessRunning:]

  // instance methods
  -[VMUProcInfo terminate]
  -[VMUProcInfo update]
  -[VMUProcInfo firstArgument]
  -[VMUProcInfo compareByUserAppName:]
  -[VMUProcInfo init]
  -[VMUProcInfo envVars]
  -[VMUProcInfo compare:]
  -[VMUProcInfo signal:]
  -[VMUProcInfo arguments]
  -[VMUProcInfo cpuType]
  -[VMUProcInfo dealloc]
  -[VMUProcInfo .cxx_destruct]
  -[VMUProcInfo name]
  -[VMUProcInfo procTableName]
  -[VMUProcInfo initWithPid:]
  -[VMUProcInfo isCFM]
  -[VMUProcInfo ppid]
  -[VMUProcInfo pid]
  -[VMUProcInfo valueForEnvVar:]
  -[VMUProcInfo platformName]
  -[VMUProcInfo requestedAppName]
  -[VMUProcInfo realAppName]
  -[VMUProcInfo platform]
  -[VMUProcInfo isEqual:]
  -[VMUProcInfo isNative]
  -[VMUProcInfo isRunning]
  -[VMUProcInfo _infoFromCommandLine:]
  -[VMUProcInfo task]
  -[VMUProcInfo isMachO]
  -[VMUProcInfo userAppName]
  -[VMUProcInfo compareByName:]
  -[VMUProcInfo initWithTask:]
  -[VMUProcInfo startTime]
  -[VMUProcInfo isApp]


VMUProcessObjectGraph : VMUObjectGraph <VMUCommonGraphInterface>
 @property  unsigned long snapshotMachTime
 @property  unsigned long physicalFootprint
 @property  unsigned long physicalFootprintPeak
 @property  NSDictionary *srcAddressToExtraAutoreleaseCountDict
 @property  VMUTaskMemoryScanner *scanner
 @property  VMUDebugTimer *debugTimer
 @property  <VMUStackLogReader> *stackLogReader
 @property  BOOL showRawClassNames
 @property  BOOL showsPhysFootprint
 @property  unsigned int objectContentLevel
 @property  unsigned int objectContentLevelForNodeLabels
 @property  int pid
 @property  BOOL is64bit
 @property  unsigned int vmPageSize
 @property  unsigned int kernelPageSize
 @property  VMUClassInfoMap *realizedClasses
 @property  unsigned int zoneCount
 @property  unsigned int regionCount
 @property  unsigned int nodeCount
 @property  unsigned int nodeNamespaceSize
 @property  NSString *processName
 @property  NSString *processDescriptionString
 @property  NSString *executablePath
 @property  NSString *binaryImagesDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VMUProcessObjectGraph executablePath]
  -[VMUProcessObjectGraph copyWithZone:]
  -[VMUProcessObjectGraph setProcessName:]
  -[VMUProcessObjectGraph dealloc]
  -[VMUProcessObjectGraph processName]
  -[VMUProcessObjectGraph .cxx_destruct]
  -[VMUProcessObjectGraph scanner]
  -[VMUProcessObjectGraph is64bit]
  -[VMUProcessObjectGraph binaryImagesDescription]
  -[VMUProcessObjectGraph physicalFootprint]
  -[VMUProcessObjectGraph physicalFootprintPeak]
  -[VMUProcessObjectGraph realizedClasses]
  -[VMUProcessObjectGraph refineTypesWithOverlay:]
  -[VMUProcessObjectGraph objectContentLevel]
  -[VMUProcessObjectGraph setObjectContentLevel:]
  -[VMUProcessObjectGraph pid]
  -[VMUProcessObjectGraph setScanner:]
  -[VMUProcessObjectGraph setDebugTimer:]
  -[VMUProcessObjectGraph markReachableNodesFromRoots:inMap:]
  -[VMUProcessObjectGraph setSnapshotMachTime:]
  -[VMUProcessObjectGraph setShowRawClassNames:]
  -[VMUProcessObjectGraph initWithPid:nodes:nodeCount:zoneNames:classInfoMap:regions:pthreadOffsets:userMarked:]
  -[VMUProcessObjectGraph setProcessDescriptionString:]
  -[VMUProcessObjectGraph setBinaryImagesDescription:]
  -[VMUProcessObjectGraph setPhysicalFootprint:]
  -[VMUProcessObjectGraph setPhysicalFootprintPeak:]
  -[VMUProcessObjectGraph setObjectContentLevelForNodeLabels:]
  -[VMUProcessObjectGraph setSrcAddressToExtraAutoreleaseCountDict:]
  -[VMUProcessObjectGraph setShowsPhysFootprint:]
  -[VMUProcessObjectGraph labelForNode:]
  -[VMUProcessObjectGraph setLabel:forNode:]
  -[VMUProcessObjectGraph setBinarySectionName:forRange:]
  -[VMUProcessObjectGraph setRegionSymbolName:forRange:]
  -[VMUProcessObjectGraph zoneCount]
  -[VMUProcessObjectGraph setThreadName:forRange:]
  -[VMUProcessObjectGraph setStackLogReader:]
  -[VMUProcessObjectGraph contentForNode:]
  -[VMUProcessObjectGraph vmuVMRegionForAddress:]
  -[VMUProcessObjectGraph copyUserMarked]
  -[VMUProcessObjectGraph zoneNameForIndex:]
  -[VMUProcessObjectGraph vmuVMRegionForNode:]
  -[VMUProcessObjectGraph enumerateRegionsWithBlock:]
  -[VMUProcessObjectGraph hasLabelsForNodes]
  -[VMUProcessObjectGraph shortLabelForNode:]
  -[VMUProcessObjectGraph vmPageSize]
  -[VMUProcessObjectGraph kernelPageSize]
  -[VMUProcessObjectGraph regionCount]
  -[VMUProcessObjectGraph processDescriptionString]
  -[VMUProcessObjectGraph nodeDescription:]
  -[VMUProcessObjectGraph nodeDescription:withOffset:]
  -[VMUProcessObjectGraph debugTimer]
  -[VMUProcessObjectGraph showRawClassNames]
  -[VMUProcessObjectGraph nodeDescription:withOffset:showLabel:]
  -[VMUProcessObjectGraph markReachableNodesFromRoots:inMap:options:]
  -[VMUProcessObjectGraph stackLogReader]
  -[VMUProcessObjectGraph initWithArchived:version:options:diskLogs:error:]
  -[VMUProcessObjectGraph archiveDictionaryRepresentation:options:]
  -[VMUProcessObjectGraph _deriveObjcClassStructureRanges]
  -[VMUProcessObjectGraph rangeForSymbolName:inRegion:]
  -[VMUProcessObjectGraph enumerateReferencesFromDataRegion:atGlobalSymbol:withBlock:]
  -[VMUProcessObjectGraph objectContentLevelForNodeLabels]
  -[VMUProcessObjectGraph _renameWithNodeMap:nodeNamespace:edgeMap:edgeNamespace:]
  -[VMUProcessObjectGraph threadNameForAddress:]
  -[VMUProcessObjectGraph binarySectionNameForAddress:]
  -[VMUProcessObjectGraph binarySectionRangeContainingAddress:]
  -[VMUProcessObjectGraph regionSymbolNameForAddress:]
  -[VMUProcessObjectGraph regionSymbolRangeContainingAddress:]
  -[VMUProcessObjectGraph _detailedNodeOffsetDescription:withSourceNode:destinationNode:alignmentSpacing:]
  -[VMUProcessObjectGraph _descriptionForRegionAddress:withOffset:showSegment:]
  -[VMUProcessObjectGraph nodeIsAutoreleasePoolContentPage:]
  -[VMUProcessObjectGraph setUserMarked:]
  -[VMUProcessObjectGraph nodeDetailIsAutoreleasePoolContentPage:]
  -[VMUProcessObjectGraph nodeReferencedFromDataRegion:byGlobalSymbol:]
  -[VMUProcessObjectGraph shortNodeDescription:]
  -[VMUProcessObjectGraph nodeDescription:withDestinationNode:referenceInfo:]
  -[VMUProcessObjectGraph nodeOffsetDescription:withSourceNode:destinationNode:]
  -[VMUProcessObjectGraph snapshotMachTime]
  -[VMUProcessObjectGraph referenceDescription:withSourceNode:destinationNode:alignmentSpacing:]
  -[VMUProcessObjectGraph refineEdges:withOptions:markingInvalid:]
  -[VMUProcessObjectGraph showsPhysFootprint]
  -[VMUProcessObjectGraph srcAddressToExtraAutoreleaseCountDict]


VMUTaskThreadStates : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned int threadCount
 @property  unsigned int threadStateSize

  // instance methods
  -[VMUTaskThreadStates threadCount]
  -[VMUTaskThreadStates dealloc]
  -[VMUTaskThreadStates stackPointerForThreadNum:]
  -[VMUTaskThreadStates threadStateForThreadNum:]
  -[VMUTaskThreadStates threadStateSize]
  -[VMUTaskThreadStates initWithPid:task:]


VMUCallTreeRoot : VMUCallTreeNode
 @property  NSString *binaryImagesDescription

  // instance methods
  -[VMUCallTreeRoot dealloc]
  -[VMUCallTreeRoot .cxx_destruct]
  -[VMUCallTreeRoot binaryImagesDescription]
  -[VMUCallTreeRoot setBinaryImagesDescription:]
  -[VMUCallTreeRoot setStackLogReader:]
  -[VMUCallTreeRoot initWithSymbolicator:sampler:options:]
  -[VMUCallTreeRoot addChildWithName:address:count:numBytes:toNode:]
  -[VMUCallTreeRoot addUniqueChildWithName:address:count:numBytes:toNode:isLeafNode:]
  -[VMUCallTreeRoot addChildCountsIntoNode]
  -[VMUCallTreeRoot addBacktrace:]
  -[VMUCallTreeRoot chargeSystemLibrariesToCallersAndKeepBoundaries:]
  -[VMUCallTreeRoot addBacktrace:count:numBytes:]
  -[VMUCallTreeRoot allBacktracesHaveBeenAdded]
  -[VMUCallTreeRoot setVMRegions:]
  -[VMUCallTreeRoot descriptionStringForAddress:atTime:leafFrame:startOfRecursion:]
  -[VMUCallTreeRoot setCambriaRuntimeVMObjectID:]
  -[VMUCallTreeRoot addUniqueChildWithName:address:count:numBytes:toNode:]
  -[VMUCallTreeRoot initWithCallGraphFile:fileHeader:topFunctionsList:binaryImagesList:]


VMUCallTreeLeafNode : VMUCallTreeNode
  // instance methods
  -[VMUCallTreeLeafNode addAddress:]
  -[VMUCallTreeLeafNode init]
  -[VMUCallTreeLeafNode .cxx_destruct]
  -[VMUCallTreeLeafNode initWithName:address:count:numBytes:]
  -[VMUCallTreeLeafNode getBrowserName:]


VMUClassInfoMap : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  unsigned int count
 @property  unsigned int fieldInfoCount

  // class methods
  +[VMUClassInfoMap initialize]
  +[VMUClassInfoMap supportsSecureCoding]
  +[VMUClassInfoMap _destroyRetainedLinearArray:withCount:]
  +[VMUClassInfoMap _claimUnarchivingOfClass:]

  // instance methods
  -[VMUClassInfoMap init]
  -[VMUClassInfoMap dealloc]
  -[VMUClassInfoMap .cxx_destruct]
  -[VMUClassInfoMap encodeWithCoder:]
  -[VMUClassInfoMap indexForClassInfo:]
  -[VMUClassInfoMap _retainedLinearArrayWithReturnedCount:]
  -[VMUClassInfoMap enumerateInfosWithBlock:]
  -[VMUClassInfoMap _applyTypeOverlay:]
  -[VMUClassInfoMap classInfoForAddress:]
  -[VMUClassInfoMap addClassInfo:forAddress:]
  -[VMUClassInfoMap indexForFieldInfo:]
  -[VMUClassInfoMap fieldInfoForIndex:]
  -[VMUClassInfoMap classInfoForIndex:]
  -[VMUClassInfoMap swiftFieldWithName:offset:kind:typeref:]
  -[VMUClassInfoMap memoizeSwiftField:withName:offset:kind:typeref:]
  -[VMUClassInfoMap count]
  -[VMUClassInfoMap addFieldInfo:]
  -[VMUClassInfoMap addClassInfosFromMap:]
  -[VMUClassInfoMap fieldInfoCount]
  -[VMUClassInfoMap initWithCoder:]


VMUVMRegion : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[VMUVMRegion initialize]
  +[VMUVMRegion columnHeadersWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:]
  +[VMUVMRegion columnHeadersWithOptions:maximumLength:]

  // instance methods
  -[VMUVMRegion range]
  -[VMUVMRegion length]
  -[VMUVMRegion path]
  -[VMUVMRegion init]
  -[VMUVMRegion address]
  -[VMUVMRegion .cxx_destruct]
  -[VMUVMRegion isSubmap]
  -[VMUVMRegion isWired]
  -[VMUVMRegion type]
  -[VMUVMRegion descriptionWithOptions:maximumLength:]
  -[VMUVMRegion isEqual:]
  -[VMUVMRegion descriptionWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:]
  -[VMUVMRegion addInfoFromRegion:]
  -[VMUVMRegion hasSameInfoAsRegion:]
  -[VMUVMRegion breakAtLength:]
  -[VMUVMRegion isNullRegion]
  -[VMUVMRegion setVMRegionDataExtra:]
  -[VMUVMRegion initWithVMRegionData:encodedVersion:simpleSerializer:error:]
  -[VMUVMRegion getVMRegionData:withSimpleSerializer:]
  -[VMUVMRegion getVMRegionDataExtra:]
  -[VMUVMRegion maxProtection]
  -[VMUVMRegion protection]


VMUDirectedGraph : NSObject /usr/lib/libc++.1.dylib <NSCopying>
 @property  BOOL inverted
 @property  NSDictionary *additionalProperties
 @property  unsigned int nodeCount
 @property  unsigned int edgeCount
 @property  unsigned int nodeNamespaceSize
 @property  unsigned int edgeNamespaceSize
 @property  BOOL graphIs64bit
 @property  unsigned int pointerSize

  // class methods
  +[VMUDirectedGraph _archivedBytes:length:options:]
  +[VMUDirectedGraph _archivedObject:options:]
  +[VMUDirectedGraph _copyUnarchived:length:options:]
  +[VMUDirectedGraph _unarchivedObject:ofClass:options:]
  +[VMUDirectedGraph directedGraphWithData:error:]
  +[VMUDirectedGraph encapsulateData:to:withSupplementalDataTag:dataGeneratorBlock:]

  // instance methods
  -[VMUDirectedGraph copyWithZone:]
  -[VMUDirectedGraph setGraphVersion:]
  -[VMUDirectedGraph initWithNodes:]
  -[VMUDirectedGraph dealloc]
  -[VMUDirectedGraph inverted]
  -[VMUDirectedGraph setAdditionalProperties:]
  -[VMUDirectedGraph .cxx_destruct]
  -[VMUDirectedGraph addNode]
  -[VMUDirectedGraph enumerateNodesWithBlock:]
  -[VMUDirectedGraph nodeNamespaceSize]
  -[VMUDirectedGraph pointerSize]
  -[VMUDirectedGraph edgeCount]
  -[VMUDirectedGraph subgraphWithMarkedNodes:]
  -[VMUDirectedGraph addGroupNodeForNodes:count:]
  -[VMUDirectedGraph invertedGraph]
  -[VMUDirectedGraph enumerateMembersOfGroupNode:withBlock:]
  -[VMUDirectedGraph parentGroupForNode:]
  -[VMUDirectedGraph enumerateEdgesWithBlock:]
  -[VMUDirectedGraph initWithArchived:version:options:diskLogs:error:]
  -[VMUDirectedGraph archiveDictionaryRepresentation:options:]
  -[VMUDirectedGraph _renameWithNodeMap:nodeNamespace:edgeMap:edgeNamespace:]
  -[VMUDirectedGraph _internalAccessRawEdgesWithBlock:]
  -[VMUDirectedGraph _internalEnumerateEdgesOfNode:withBlock:]
  -[VMUDirectedGraph additionalProperties]
  -[VMUDirectedGraph initWithPlistRepresentation:error:]
  -[VMUDirectedGraph decapsulateIPSheaderInData:error:]
  -[VMUDirectedGraph decapsulateSupplementalData:forTag:]
  -[VMUDirectedGraph decapsulatePlistData:error:]
  -[VMUDirectedGraph edgeNamespaceSize]
  -[VMUDirectedGraph graphIs64bit]
  -[VMUDirectedGraph _removeEdges:]
  -[VMUDirectedGraph _reorderEdgesNaturally]
  -[VMUDirectedGraph _internalAddEdgeFromNode:toNode:withName:]
  -[VMUDirectedGraph _faultDeadNodeMap]
  -[VMUDirectedGraph _adjustAdjacencyMap]
  -[VMUDirectedGraph _dfsCore:colors:visitBlock:examineBlock:]
  -[VMUDirectedGraph _searchMainLoop:action:]
  -[VMUDirectedGraph _bfsCore:colors:visitBlock:examineBlock:]
  -[VMUDirectedGraph setInverted:]
  -[VMUDirectedGraph _renormalize]
  -[VMUDirectedGraph removeMarkedNodes:]
  -[VMUDirectedGraph setGraphCompatibilityVersion:]
  -[VMUDirectedGraph plistRepresentationWithOptions:]
  -[VMUDirectedGraph addEdgeFromNode:toNode:]
  -[VMUDirectedGraph deadNodeMap]
  -[VMUDirectedGraph removeMarkedEdges:]
  -[VMUDirectedGraph isNodePresent:]
  -[VMUDirectedGraph ungroupNode:]
  -[VMUDirectedGraph enumerateEdgesOfNode:withBlock:]
  -[VMUDirectedGraph withNodeMarkingMap:]
  -[VMUDirectedGraph withEdgeMarkingMap:]
  -[VMUDirectedGraph depthFirstSearch:nodeVisitBlock:edgeVisitBlock:]
  -[VMUDirectedGraph breadthFirstSearch:nodeVisitBlock:edgeVisitBlock:]
  -[VMUDirectedGraph _dumpAdjacencyList]
  -[VMUDirectedGraph invertEdges]
  -[VMUDirectedGraph renormalizedGraph]
  -[VMUDirectedGraph initWithPlistRepresentation:]
  -[VMUDirectedGraph nodeCount]


VMUObjectGraph : VMUDirectedGraph
 @property  VMUClassInfoMap *indexedClassInfos

  // instance methods
  -[VMUObjectGraph copyWithZone:]
  -[VMUObjectGraph enumerateObjectsWithBlock:]
  -[VMUObjectGraph dealloc]
  -[VMUObjectGraph .cxx_destruct]
  -[VMUObjectGraph nodeForAddress:]
  -[VMUObjectGraph addEdgeFromNode:sourceOffset:withScanType:toNode:destinationOffset:]
  -[VMUObjectGraph nodeDetails:]
  -[VMUObjectGraph enumerateMarkedObjects:withBlock:]
  -[VMUObjectGraph enumerateReferencesWithBlock:]
  -[VMUObjectGraph stronglyConnectedComponentSearch:withRecorder:]
  -[VMUObjectGraph isRootNode:]
  -[VMUObjectGraph isGroupNode:]
  -[VMUObjectGraph enumerateReferencesOfNode:withBlock:]
  -[VMUObjectGraph initWithNodesNoCopy:nodeCount:]
  -[VMUObjectGraph setIndexedClassInfos:]
  -[VMUObjectGraph internalizeNodes]
  -[VMUObjectGraph initWithArchived:version:options:diskLogs:error:]
  -[VMUObjectGraph archiveDictionaryRepresentation:options:]
  -[VMUObjectGraph indexedClassInfos]
  -[VMUObjectGraph _renameWithNodeMap:nodeNamespace:edgeMap:edgeNamespace:]
  -[VMUObjectGraph _refineTypesWithOverlay:]
  -[VMUObjectGraph _rawReferenceInfoWithName:]
  -[VMUObjectGraph scanTypeOfReferenceWithName:]
  -[VMUObjectGraph addEdgeFromNode:toNode:]
  -[VMUObjectGraph referenceInfoWithName:]
  -[VMUObjectGraph _modifyDerivativeGraphCount:]
  -[VMUObjectGraph _compareWithGraph:andMarkOnMatch:]
  -[VMUObjectGraph initWithNodeCount:nodeProvider:]
  -[VMUObjectGraph enumerateObjectsOfGroupNode:withBlock:]
  -[VMUObjectGraph nodeReferencedFromSourceNode:byIvarWithName:]
  -[VMUObjectGraph enumerateObjectsContainedInCollection:withBlock:]
  -[VMUObjectGraph createMapForMinusGraph:]
  -[VMUObjectGraph createMapForIntersectGraph:]
  -[VMUObjectGraph subgraphWithShortestPathsFromNode:toNodes:]
  -[VMUObjectGraph subgraphWithUniquePathsFromNode:toNodes:]


01 00 0340 /System/Library/Frameworks/IOSurface.framework/IOSurface: IOSurfaceDebugDescription 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSBlock 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0600 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
