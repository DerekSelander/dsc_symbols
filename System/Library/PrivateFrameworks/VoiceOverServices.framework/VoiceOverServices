|| __DATA.__data _DiscoveryAgentCallbacks
|| __DATA.__data _LocalDeviceCallbacks
|| __DATA.__data _PairingAgentCallbacks
|| __DATA.__data _SessionCallbacks
|| __DATA.__data _kVOTEventAppSwitchNext
|| __DATA.__data _kVOTEventAppSwitchPrevious
|| __DATA.__data _kVOTEventCommandActivateBrailleScreenInput
|| __DATA.__data _kVOTEventCommandAnnounceQuickNav
|| __DATA.__data _kVOTEventCommandAnnouncement
|| __DATA.__data _kVOTEventCommandBSINextBrailleMode
|| __DATA.__data _kVOTEventCommandBSIOrientationLock
|| __DATA.__data _kVOTEventCommandBSIPreviousBrailleMode
|| __DATA.__data _kVOTEventCommandBSIQuickAction
|| __DATA.__data _kVOTEventCommandBSITranslateImmediately
|| __DATA.__data _kVOTEventCommandBottomEdgePanDown
|| __DATA.__data _kVOTEventCommandBottomEdgePanLong
|| __DATA.__data _kVOTEventCommandBottomEdgePanShort
|| __DATA.__data _kVOTEventCommandBrailleAnnouncementModeOn
|| __DATA.__data _kVOTEventCommandBrailleDecreaseAutoAdvanceSpeed
|| __DATA.__data _kVOTEventCommandBrailleEnableAutoAdvance
|| __DATA.__data _kVOTEventCommandBrailleIncreaseAutoAdvanceSpeed
|| __DATA.__data _kVOTEventCommandBrailleNextInputMode
|| __DATA.__data _kVOTEventCommandBrailleNextOutputMode
|| __DATA.__data _kVOTEventCommandBraillePanLeft
|| __DATA.__data _kVOTEventCommandBraillePanRight
|| __DATA.__data _kVOTEventCommandBrailleRefreshBrailleLine
|| __DATA.__data _kVOTEventCommandBrailleRouter
|| __DATA.__data _kVOTEventCommandBrailleStatusRouter
|| __DATA.__data _kVOTEventCommandBrailleToggleContractions
|| __DATA.__data _kVOTEventCommandBrailleToggleEightDot
|| __DATA.__data _kVOTEventCommandBrailleToggleWordWrap
|| __DATA.__data _kVOTEventCommandBrailleTranslate
|| __DATA.__data _kVOTEventCommandBrailleTranslateBrailleToClipboard
|| __DATA.__data _kVOTEventCommandCancelSpeaking
|| __DATA.__data _kVOTEventCommandCaptureImageCaptionDiagnostics
|| __DATA.__data _kVOTEventCommandContainerBottom
|| __DATA.__data _kVOTEventCommandContainerTop
|| __DATA.__data _kVOTEventCommandContinueSpeaking
|| __DATA.__data _kVOTEventCommandCopy
|| __DATA.__data _kVOTEventCommandCopySpeechToClipboard
|| __DATA.__data _kVOTEventCommandCustomTwoFingerSwipeLeft
|| __DATA.__data _kVOTEventCommandCut
|| __DATA.__data _kVOTEventCommandDecreaseVolume
|| __DATA.__data _kVOTEventCommandDelete
|| __DATA.__data _kVOTEventCommandDescribeImage
|| __DATA.__data _kVOTEventCommandDocumentBottom
|| __DATA.__data _kVOTEventCommandDocumentTop
|| __DATA.__data _kVOTEventCommandDoubleTap
|| __DATA.__data _kVOTEventCommandDownArrow
|| __DATA.__data _kVOTEventCommandEdgeBottom
|| __DATA.__data _kVOTEventCommandEdgeLeft
|| __DATA.__data _kVOTEventCommandEdgeRight
|| __DATA.__data _kVOTEventCommandEdgeTop
|| __DATA.__data _kVOTEventCommandEjectButtonPress
|| __DATA.__data _kVOTEventCommandElementAbove
|| __DATA.__data _kVOTEventCommandElementBelow
|| __DATA.__data _kVOTEventCommandEscape
|| __DATA.__data _kVOTEventCommandFirstElement
|| __DATA.__data _kVOTEventCommandFirstWord
|| __DATA.__data _kVOTEventCommandGestureTypingCommitTyping
|| __DATA.__data _kVOTEventCommandGestureTypingDelete
|| __DATA.__data _kVOTEventCommandGestureTypingNextInternationalKeyboard
|| __DATA.__data _kVOTEventCommandGestureTypingNextKeyplane
|| __DATA.__data _kVOTEventCommandGestureTypingNextSuggestion
|| __DATA.__data _kVOTEventCommandGestureTypingPreviousKeyplane
|| __DATA.__data _kVOTEventCommandGestureTypingPreviousSuggestion
|| __DATA.__data _kVOTEventCommandGestureTypingShift
|| __DATA.__data _kVOTEventCommandGestureTypingShiftLock
|| __DATA.__data _kVOTEventCommandGestureTypingType
|| __DATA.__data _kVOTEventCommandGestureTypingTypeEnter
|| __DATA.__data _kVOTEventCommandGestureTypingTypePeriod
|| __DATA.__data _kVOTEventCommandGesturedTextInputBackspace
|| __DATA.__data _kVOTEventCommandGesturedTextInputDeleteWord
|| __DATA.__data _kVOTEventCommandGesturedTextInputInsertSpace
|| __DATA.__data _kVOTEventCommandGesturedTextInputLaunchApp
|| __DATA.__data _kVOTEventCommandGesturedTextInputNextBrailleTable
|| __DATA.__data _kVOTEventCommandGesturedTextInputNextKeyboardLanguage
|| __DATA.__data _kVOTEventCommandGesturedTextInputNextSuggestion
|| __DATA.__data _kVOTEventCommandGesturedTextInputPerformReturnEquivalent
|| __DATA.__data _kVOTEventCommandGesturedTextInputPreviousSuggestion
|| __DATA.__data _kVOTEventCommandHandwritingAnnounceActiveCharacterSet
|| __DATA.__data _kVOTEventCommandHandwritingNextActiveCharacterSet
|| __DATA.__data _kVOTEventCommandHandwritingPreviousActiveCharacterSet
|| __DATA.__data _kVOTEventCommandHomeButtonPress
|| __DATA.__data _kVOTEventCommandIdle
|| __DATA.__data _kVOTEventCommandIncreaseVolume
|| __DATA.__data _kVOTEventCommandItemChooser
|| __DATA.__data _kVOTEventCommandLabelElement
|| __DATA.__data _kVOTEventCommandLastElement
|| __DATA.__data _kVOTEventCommandLastWord
|| __DATA.__data _kVOTEventCommandLaunchSocialDistancing
|| __DATA.__data _kVOTEventCommandLeftArrow
|| __DATA.__data _kVOTEventCommandLeftElementCommunity
|| __DATA.__data _kVOTEventCommandLockVOKeyboardKeys
|| __DATA.__data _kVOTEventCommandModifierCommand
|| __DATA.__data _kVOTEventCommandModifierCommandToggle
|| __DATA.__data _kVOTEventCommandModifierControl
|| __DATA.__data _kVOTEventCommandModifierControlToggle
|| __DATA.__data _kVOTEventCommandModifierFn
|| __DATA.__data _kVOTEventCommandModifierFnToggle
|| __DATA.__data _kVOTEventCommandModifierOption
|| __DATA.__data _kVOTEventCommandModifierOptionToggle
|| __DATA.__data _kVOTEventCommandModifierShift
|| __DATA.__data _kVOTEventCommandModifierShiftToggle
|| __DATA.__data _kVOTEventCommandMonitorElement
|| __DATA.__data _kVOTEventCommandMoveToLinkedUI
|| __DATA.__data _kVOTEventCommandMoveToNativeFocusedElement
|| __DATA.__data _kVOTEventCommandMoveToStatusBar
|| __DATA.__data _kVOTEventCommandNextBlockquote
|| __DATA.__data _kVOTEventCommandNextBoldText
|| __DATA.__data _kVOTEventCommandNextCharacter
|| __DATA.__data _kVOTEventCommandNextColorChange
|| __DATA.__data _kVOTEventCommandNextColumn
|| __DATA.__data _kVOTEventCommandNextContainer
|| __DATA.__data _kVOTEventCommandNextControl
|| __DATA.__data _kVOTEventCommandNextDifferentElement
|| __DATA.__data _kVOTEventCommandNextElement
|| __DATA.__data _kVOTEventCommandNextElementCommunity
|| __DATA.__data _kVOTEventCommandNextFontChange
|| __DATA.__data _kVOTEventCommandNextFrame
|| __DATA.__data _kVOTEventCommandNextGraphic
|| __DATA.__data _kVOTEventCommandNextHeading
|| __DATA.__data _kVOTEventCommandNextItalicText
|| __DATA.__data _kVOTEventCommandNextKeyboardLanguage
|| __DATA.__data _kVOTEventCommandNextLine
|| __DATA.__data _kVOTEventCommandNextLink
|| __DATA.__data _kVOTEventCommandNextList
|| __DATA.__data _kVOTEventCommandNextMisspelledWord
|| __DATA.__data _kVOTEventCommandNextParagraph
|| __DATA.__data _kVOTEventCommandNextPlainText
|| __DATA.__data _kVOTEventCommandNextRealtimeElement
|| __DATA.__data _kVOTEventCommandNextSameBlockquote
|| __DATA.__data _kVOTEventCommandNextSameElement
|| __DATA.__data _kVOTEventCommandNextSameHeading
|| __DATA.__data _kVOTEventCommandNextSentence
|| __DATA.__data _kVOTEventCommandNextStyleChange
|| __DATA.__data _kVOTEventCommandNextTable
|| __DATA.__data _kVOTEventCommandNextTextSegment
|| __DATA.__data _kVOTEventCommandNextTextSegmentType
|| __DATA.__data _kVOTEventCommandNextUnderlineText
|| __DATA.__data _kVOTEventCommandNextVisitedLink
|| __DATA.__data _kVOTEventCommandNextWord
|| __DATA.__data _kVOTEventCommandNullCommand
|| __DATA.__data _kVOTEventCommandOpenVoiceOverSettings
|| __DATA.__data _kVOTEventCommandOutputCellRowColumnInfo
|| __DATA.__data _kVOTEventCommandOutputCharacter
|| __DATA.__data _kVOTEventCommandOutputCharacterPhonetically
|| __DATA.__data _kVOTEventCommandOutputColumnHeader
|| __DATA.__data _kVOTEventCommandOutputContentsOfColumn
|| __DATA.__data _kVOTEventCommandOutputContentsOfRow
|| __DATA.__data _kVOTEventCommandOutputDetailedFocusedElementSummary
|| __DATA.__data _kVOTEventCommandOutputElementComputerVisionAnalysisSummary
|| __DATA.__data _kVOTEventCommandOutputElementImageCaption
|| __DATA.__data _kVOTEventCommandOutputElementOCRDetectedText
|| __DATA.__data _kVOTEventCommandOutputElementSummary
|| __DATA.__data _kVOTEventCommandOutputFocusedElementSummary
|| __DATA.__data _kVOTEventCommandOutputLineCount
|| __DATA.__data _kVOTEventCommandOutputRowHeader
|| __DATA.__data _kVOTEventCommandOutputSelectedInformation
|| __DATA.__data _kVOTEventCommandOutputTableRowColumnInfo
|| __DATA.__data _kVOTEventCommandOutputTextStyle
|| __DATA.__data _kVOTEventCommandPaste
|| __DATA.__data _kVOTEventCommandPauseSpeaking
|| __DATA.__data _kVOTEventCommandPreviousBlockquote
|| __DATA.__data _kVOTEventCommandPreviousBoldText
|| __DATA.__data _kVOTEventCommandPreviousCharacter
|| __DATA.__data _kVOTEventCommandPreviousColorChange
|| __DATA.__data _kVOTEventCommandPreviousColumn
|| __DATA.__data _kVOTEventCommandPreviousContainer
|| __DATA.__data _kVOTEventCommandPreviousControl
|| __DATA.__data _kVOTEventCommandPreviousDifferentElement
|| __DATA.__data _kVOTEventCommandPreviousElement
|| __DATA.__data _kVOTEventCommandPreviousElementCommunity
|| __DATA.__data _kVOTEventCommandPreviousFontChange
|| __DATA.__data _kVOTEventCommandPreviousFrame
|| __DATA.__data _kVOTEventCommandPreviousGraphic
|| __DATA.__data _kVOTEventCommandPreviousHeading
|| __DATA.__data _kVOTEventCommandPreviousItalicText
|| __DATA.__data _kVOTEventCommandPreviousLine
|| __DATA.__data _kVOTEventCommandPreviousLink
|| __DATA.__data _kVOTEventCommandPreviousList
|| __DATA.__data _kVOTEventCommandPreviousMisspelledWord
|| __DATA.__data _kVOTEventCommandPreviousParagraph
|| __DATA.__data _kVOTEventCommandPreviousPlainText
|| __DATA.__data _kVOTEventCommandPreviousRealtimeElement
|| __DATA.__data _kVOTEventCommandPreviousSameBlockquote
|| __DATA.__data _kVOTEventCommandPreviousSameElement
|| __DATA.__data _kVOTEventCommandPreviousSameHeading
|| __DATA.__data _kVOTEventCommandPreviousSentence
|| __DATA.__data _kVOTEventCommandPreviousStyleChange
|| __DATA.__data _kVOTEventCommandPreviousTable
|| __DATA.__data _kVOTEventCommandPreviousTextSegment
|| __DATA.__data _kVOTEventCommandPreviousTextSegmentType
|| __DATA.__data _kVOTEventCommandPreviousUnderlineText
|| __DATA.__data _kVOTEventCommandPreviousVisitedLink
|| __DATA.__data _kVOTEventCommandPreviousWord
|| __DATA.__data _kVOTEventCommandReadAll
|| __DATA.__data _kVOTEventCommandReadFromTop
|| __DATA.__data _kVOTEventCommandReadHint
|| __DATA.__data _kVOTEventCommandReadLine
|| __DATA.__data _kVOTEventCommandReadScreenSummary
|| __DATA.__data _kVOTEventCommandReadURL
|| __DATA.__data _kVOTEventCommandReadWord
|| __DATA.__data _kVOTEventCommandRedo
|| __DATA.__data _kVOTEventCommandReturn
|| __DATA.__data _kVOTEventCommandRightArrow
|| __DATA.__data _kVOTEventCommandRightElementCommunity
|| __DATA.__data _kVOTEventCommandRotateOrientationLeft
|| __DATA.__data _kVOTEventCommandRotateOrientationRight
|| __DATA.__data _kVOTEventCommandRunSiriShortcut
|| __DATA.__data _kVOTEventCommandScrollDownPage
|| __DATA.__data _kVOTEventCommandScrollLeftPage
|| __DATA.__data _kVOTEventCommandScrollRightPage
|| __DATA.__data _kVOTEventCommandScrollToPoint
|| __DATA.__data _kVOTEventCommandScrollUpPage
|| __DATA.__data _kVOTEventCommandSearchRotorDown
|| __DATA.__data _kVOTEventCommandSearchRotorEcho
|| __DATA.__data _kVOTEventCommandSearchRotorLeft
|| __DATA.__data _kVOTEventCommandSearchRotorRight
|| __DATA.__data _kVOTEventCommandSearchRotorSetMathPosition
|| __DATA.__data _kVOTEventCommandSearchRotorUp
|| __DATA.__data _kVOTEventCommandSelectAll
|| __DATA.__data _kVOTEventCommandSelectLeft
|| __DATA.__data _kVOTEventCommandSelectRight
|| __DATA.__data _kVOTEventCommandShiftTab
|| __DATA.__data _kVOTEventCommandShowEditingHUD
|| __DATA.__data _kVOTEventCommandShowSideApp
|| __DATA.__data _kVOTEventCommandSimpleTap
|| __DATA.__data _kVOTEventCommandSimulatedForceTouch
|| __DATA.__data _kVOTEventCommandSimulatedLongPress
|| __DATA.__data _kVOTEventCommandSingleLetterSearch
|| __DATA.__data _kVOTEventCommandSpeechRotorDecrementValue
|| __DATA.__data _kVOTEventCommandSpeechRotorIncrementValue
|| __DATA.__data _kVOTEventCommandSpeechRotorNext
|| __DATA.__data _kVOTEventCommandSpeechRotorPrevious
|| __DATA.__data _kVOTEventCommandSplitTapTap
|| __DATA.__data _kVOTEventCommandStartHelp
|| __DATA.__data _kVOTEventCommandStartSiri
|| __DATA.__data _kVOTEventCommandStartStopTextSelection
|| __DATA.__data _kVOTEventCommandStartStopToggle
|| __DATA.__data _kVOTEventCommandStartTextSearch
|| __DATA.__data _kVOTEventCommandStopReadAll
|| __DATA.__data _kVOTEventCommandSystemActivateAccessibilityShortcut
|| __DATA.__data _kVOTEventCommandSystemActivateLockButton
|| __DATA.__data _kVOTEventCommandSystemActivateSpeakScreen
|| __DATA.__data _kVOTEventCommandSystemControlBottom
|| __DATA.__data _kVOTEventCommandSystemControlLeft
|| __DATA.__data _kVOTEventCommandSystemControlRight
|| __DATA.__data _kVOTEventCommandSystemControlTop
|| __DATA.__data _kVOTEventCommandSystemControlTwoTop
|| __DATA.__data _kVOTEventCommandSystemShowControlCenter
|| __DATA.__data _kVOTEventCommandSystemShowNotificationCenter
|| __DATA.__data _kVOTEventCommandSystemShowSpotlight
|| __DATA.__data _kVOTEventCommandSystemSwitchToNextApp
|| __DATA.__data _kVOTEventCommandSystemSwitchToPreviousApp
|| __DATA.__data _kVOTEventCommandSystemTakeScreenshot
|| __DATA.__data _kVOTEventCommandSystemToggleAppSwitcher
|| __DATA.__data _kVOTEventCommandSystemToggleDock
|| __DATA.__data _kVOTEventCommandSystemToggleReachability
|| __DATA.__data _kVOTEventCommandTab
|| __DATA.__data _kVOTEventCommandTapAndHoldEventMonitor
|| __DATA.__data _kVOTEventCommandTapAndHoldMode
|| __DATA.__data _kVOTEventCommandTapAutofill
|| __DATA.__data _kVOTEventCommandTextSearchBackward
|| __DATA.__data _kVOTEventCommandTextSearchForward
|| __DATA.__data _kVOTEventCommandToggleAudioDucking
|| __DATA.__data _kVOTEventCommandToggleAutomaticAccessibility
|| __DATA.__data _kVOTEventCommandToggleCaptionPanel
|| __DATA.__data _kVOTEventCommandToggleCrownNaviation
|| __DATA.__data _kVOTEventCommandToggleMute
|| __DATA.__data _kVOTEventCommandToggleNavigationStyle
|| __DATA.__data _kVOTEventCommandToggleQuickNav
|| __DATA.__data _kVOTEventCommandToggleRotationCapability
|| __DATA.__data _kVOTEventCommandToggleScreenCurtain
|| __DATA.__data _kVOTEventCommandToggleSingleLetterQuickNav
|| __DATA.__data _kVOTEventCommandToggleSpeaking
|| __DATA.__data _kVOTEventCommandToggleSyncNativeAndExploreFocus
|| __DATA.__data _kVOTEventCommandTopEdgePanLong
|| __DATA.__data _kVOTEventCommandTopEdgePanShort
|| __DATA.__data _kVOTEventCommandTouchCancel
|| __DATA.__data _kVOTEventCommandTouchDown
|| __DATA.__data _kVOTEventCommandTouchMove
|| __DATA.__data _kVOTEventCommandTouchUp
|| __DATA.__data _kVOTEventCommandTracking
|| __DATA.__data _kVOTEventCommandTripleTap
|| __DATA.__data _kVOTEventCommandUndo
|| __DATA.__data _kVOTEventCommandUpArrow
|| __DATA.__data _kVOTEventCommandVolumeDownButtonPress
|| __DATA.__data _kVOTEventCommandVolumeUpButtonPress
|| __DATA.__data _kVOTEventCommandWatchWakeDoubleTap
|| __DATA.__data _kVOTEventCommandWatchWakeTap
|| __DATA.__data _kVOTEventCommandWatchWakeTripleTap
|| __DATA.__objc_data _OBJC_CLASS_$_VOSBluetoothDevice
|| __DATA.__objc_data _OBJC_CLASS_$_VOSBluetoothLowEnergyDevice
|| __DATA.__objc_data _OBJC_CLASS_$_VOSBluetoothManager
|| __DATA.__objc_data _OBJC_CLASS_$_VOSBluetoothSSPPairingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_VOSCommand
|| __DATA.__objc_data _OBJC_CLASS_$_VOSCommandCategory
|| __DATA.__objc_data _OBJC_CLASS_$_VOSCommandManager
|| __DATA.__objc_data _OBJC_CLASS_$_VOSCommandProfile
|| __DATA.__objc_data _OBJC_CLASS_$_VOSCommandProfileValidation
|| __DATA.__objc_data _OBJC_CLASS_$_VOSCommandResolver
|| __DATA.__objc_data _OBJC_CLASS_$_VOSDefaultHapticPack
|| __DATA.__objc_data _OBJC_CLASS_$_VOSDefaultSoundPack
|| __DATA.__objc_data _OBJC_CLASS_$_VOSGesture
|| __DATA.__objc_data _OBJC_CLASS_$_VOSGestureCategory
|| __DATA.__objc_data _OBJC_CLASS_$_VOSOutputEvent
|| __DATA.__objc_data _OBJC_CLASS_$_VOSOutputEventCategory
|| __DATA.__objc_data _OBJC_CLASS_$_VOSOutputEventDispatcher
|| __DATA.__objc_data _OBJC_CLASS_$_VOSScreenreaderMode
|| __DATA.__objc_data _OBJC_CLASS_$_VOSVoiceOverCommandInfo
|| __DATA.__objc_data _OBJC_CLASS_$__VOSProfileCommand
|| __DATA.__objc_data _OBJC_CLASS_$__VOSProfileGesture
|| __DATA.__objc_data _OBJC_CLASS_$__VOSProfileKeyChord
|| __DATA.__objc_data _OBJC_CLASS_$__VOSProfileMode
|| __DATA.__objc_data _OBJC_CLASS_$__VOSProfileSlaveCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSBluetoothDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSBluetoothLowEnergyDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSBluetoothManager
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSBluetoothSSPPairingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSCommandCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSCommandManager
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSCommandProfile
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSCommandProfileValidation
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSCommandResolver
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSDefaultHapticPack
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSDefaultSoundPack
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSGesture
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSGestureCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSOutputEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSOutputEventCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSOutputEventDispatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSScreenreaderMode
|| __DATA.__objc_data _OBJC_METACLASS_$_VOSVoiceOverCommandInfo
|| __DATA.__objc_data _OBJC_METACLASS_$__VOSProfileCommand
|| __DATA.__objc_data _OBJC_METACLASS_$__VOSProfileGesture
|| __DATA.__objc_data _OBJC_METACLASS_$__VOSProfileKeyChord
|| __DATA.__objc_data _OBJC_METACLASS_$__VOSProfileMode
|| __DATA.__objc_data _OBJC_METACLASS_$__VOSProfileSlaveCommand
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothDevice._address
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothDevice._device
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothDevice._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._audioConnected
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._authorizedServices
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._available
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._btAddrDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._btDeviceDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._discoveryAgent
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._localDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._pairingAgent
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._scanningEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_VOSBluetoothManager._session
|| __DATA_CONST.__const _VOSBluetoothAvailabilityChangedNotification
|| __DATA_CONST.__const _VOSBluetoothConnectabilityChangedNotification
|| __DATA_CONST.__const _VOSBluetoothConnectionStatusChangedNotification
|| __DATA_CONST.__const _VOSBluetoothDeviceConnectFailedNotification
|| __DATA_CONST.__const _VOSBluetoothDeviceConnectSuccessNotification
|| __DATA_CONST.__const _VOSBluetoothDeviceDisconnectFailedNotification
|| __DATA_CONST.__const _VOSBluetoothDeviceDisconnectSuccessNotification
|| __DATA_CONST.__const _VOSBluetoothDeviceDiscoveredNotification
|| __DATA_CONST.__const _VOSBluetoothDeviceRemovedNotification
|| __DATA_CONST.__const _VOSBluetoothDeviceUnpairedNotification
|| __DATA_CONST.__const _VOSBluetoothDeviceUpdatedNotification
|| __DATA_CONST.__const _VOSBluetoothDiscoveryStateChangedNotification
|| __DATA_CONST.__const _VOSBluetoothErrorKey
|| __DATA_CONST.__const _VOSBluetoothNotificationNameKey
|| __DATA_CONST.__const _VOSBluetoothPairingPINRequestNotification
|| __DATA_CONST.__const _VOSBluetoothPairingPINResultFailedNotification
|| __DATA_CONST.__const _VOSBluetoothPairingPINResultSuccessNotification
|| __DATA_CONST.__const _VOSBluetoothPairingPassKeyDisplayNotification
|| __DATA_CONST.__const _VOSBluetoothPairingUserConfirmationNotification
|| __DATA_CONST.__const _VOSBluetoothPairingUserNumericComparisionNotification
|| __DATA_CONST.__const _VOSBluetoothPowerChangedNotification
|| __TEXT.__text _VOSAddressForBTDevice
|| __TEXT.__text _VOSLocString
|| __TEXT.__text _VOSVoiceOverBundle
|| __TEXT.__text _VOSVoiceOverServicesBundle
|| __TEXT.__text __btDiscoveryEventCallback
|| __TEXT.__text __btDiscoveryStatusEventCallback
|| __TEXT.__text __btLocalStatusEventCallback
|| __TEXT.__text __btServiceEventCallback
|| __TEXT.__text __btSessionEventCallback
|| __TEXT.__text _pairingAgentAuthorizationCallback
|| __TEXT.__text _pairingAgentPassKeyDisplayCallback
|| __TEXT.__text _pairingAgentPincodeCallback
|| __TEXT.__text _pairingAgentStatusEventCallback
|| __TEXT.__text _pairingAgentUserConfirmationCallback
__ AccessibilitySharedSupport: _OBJC_CLASS_$_AXSSKeyChord
__ AccessibilityUtilities: _AXColorizeFormatLog
__ AccessibilityUtilities: _AXDeviceHasForcePress3dTouch
__ AccessibilityUtilities: _AXDeviceIsAudioAccessory
__ AccessibilityUtilities: _AXDeviceIsPad
__ AccessibilityUtilities: _AXDeviceIsTV
__ AccessibilityUtilities: _AXDeviceSupportsBackTap
__ AccessibilityUtilities: _AXIsInternalInstall
__ AccessibilityUtilities: _AXLogBrailleHW
__ AccessibilityUtilities: _AXLoggerForFacility
__ AccessibilityUtilities: _AXOSLogLevelFromAXLogLevel
__ AccessibilityUtilities: _AXPerformBlockOnMainThreadAfterDelay
__ AccessibilityUtilities: _AXRuntimeCheck_HasANE
__ AccessibilityUtilities: _OBJC_CLASS_$_AXSettings
__ AccessibilityUtilities: _OBJC_CLASS_$_AXSiriShortcut
__ AccessibilityUtilities: _OBJC_CLASS_$_AXSiriShortcutsManager
__ AccessibilityUtilities: _OBJC_CLASS_$_AXSubsystemBrailleHardware
__ AccessibilityUtilities: _VOTLogCommon
__ AccessibilityUtilities: __AXStringForArgs
__ BluetoothManager: _OBJC_CLASS_$_BluetoothDevice
__ BluetoothManager: _OBJC_CLASS_$_BluetoothManager
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSConstantValueExpression
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSValue
__ MobileBluetooth: _BTDeviceAddressFromString
__ MobileBluetooth: _BTDeviceConnectServices
__ MobileBluetooth: _BTDeviceDisconnect
__ MobileBluetooth: _BTDeviceFromAddress
__ MobileBluetooth: _BTDeviceGetAddressString
__ MobileBluetooth: _BTDeviceGetAuthorizedServices
__ MobileBluetooth: _BTDeviceGetConnectedServices
__ MobileBluetooth: _BTDeviceGetDefaultName
__ MobileBluetooth: _BTDeviceGetDeviceClass
__ MobileBluetooth: _BTDeviceGetDeviceId
__ MobileBluetooth: _BTDeviceGetDeviceType
__ MobileBluetooth: _BTDeviceGetName
__ MobileBluetooth: _BTDeviceGetPairingStatus
__ MobileBluetooth: _BTDeviceGetSupportedServices
__ MobileBluetooth: _BTDiscoveryAgentCreate
__ MobileBluetooth: _BTDiscoveryAgentDestroy
__ MobileBluetooth: _BTDiscoveryAgentGetDevices
__ MobileBluetooth: _BTDiscoveryAgentStartScan
__ MobileBluetooth: _BTDiscoveryAgentStopScan
__ MobileBluetooth: _BTLocalDeviceAddCallbacks
__ MobileBluetooth: _BTLocalDeviceGetConnectable
__ MobileBluetooth: _BTLocalDeviceGetConnectedDevices
__ MobileBluetooth: _BTLocalDeviceGetConnectingDevices
__ MobileBluetooth: _BTLocalDeviceGetConnectionStatus
__ MobileBluetooth: _BTLocalDeviceGetDefault
__ MobileBluetooth: _BTLocalDeviceGetDiscoverable
__ MobileBluetooth: _BTLocalDeviceGetModulePower
__ MobileBluetooth: _BTLocalDeviceGetPairedDevices
__ MobileBluetooth: _BTLocalDeviceGetScanning
__ MobileBluetooth: _BTLocalDeviceRemoveCallbacks
__ MobileBluetooth: _BTLocalDeviceSetConnectable
__ MobileBluetooth: _BTLocalDeviceSetDiscoverable
__ MobileBluetooth: _BTLocalDeviceSetModulePower
__ MobileBluetooth: _BTLocalDeviceSupportsService
__ MobileBluetooth: _BTPairingAgentAcceptSSP
__ MobileBluetooth: _BTPairingAgentCancelPairing
__ MobileBluetooth: _BTPairingAgentCreate
__ MobileBluetooth: _BTPairingAgentDeletePairedDevice
__ MobileBluetooth: _BTPairingAgentDestroy
__ MobileBluetooth: _BTPairingAgentSetPincode
__ MobileBluetooth: _BTPairingAgentStart
__ MobileBluetooth: _BTPairingAgentStop
__ MobileBluetooth: _BTServiceAddCallbacks
__ MobileBluetooth: _BTServiceRemoveCallbacks
__ MobileBluetooth: _BTSessionAttachWithQueue
__ MobileBluetooth: _BTSessionDetachWithQueue
__ ScreenReaderOutput: _kSCROBrailleDriverBluetoothDeviceNameRegexPatterns
__ ScreenReaderOutput: _kSCROBrailleDriverBluetoothSearchDictionary
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIDevice
__ libAccessibility.dylib: __AXSVibrationDisabled
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
VOSGestureCategory : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *gestures
 @property  NSString *localizedCategoryName

  // class methods
  +[VOSGestureCategory oneFingerTaps]
  +[VOSGestureCategory twoFingerTaps]
  +[VOSGestureCategory threeFingerTaps]
  +[VOSGestureCategory fourFingerTaps]
  +[VOSGestureCategory fiveFingerTaps]
  +[VOSGestureCategory oneFingerFlicks]
  +[VOSGestureCategory twoFingerFlicks]
  +[VOSGestureCategory threeFingerFlicks]
  +[VOSGestureCategory fourFingerFlicks]
  +[VOSGestureCategory twoFingerRotates]
  +[VOSGestureCategory twoFingerScrubs]
  +[VOSGestureCategory oneFingerTapAndHolds]
  +[VOSGestureCategory twoFingerTapAndHolds]
  +[VOSGestureCategory threeFingerTapAndHolds]
  +[VOSGestureCategory threeFingerDoubleTapHoldAndFlicks]
  +[VOSGestureCategory backTaps]
  +[VOSGestureCategory allCategories]
  +[VOSGestureCategory isFlickGesture:]
  +[VOSGestureCategory isTapGesture:]
  +[VOSGestureCategory isRotateGesture:]
  +[VOSGestureCategory isScrubGesture:]
  +[VOSGestureCategory isTapAndHoldGesture:]

  // instance methods
  -[VOSGestureCategory init]
  -[VOSGestureCategory .cxx_destruct]
  -[VOSGestureCategory isEqual:]
  -[VOSGestureCategory localizedCategoryName]
  -[VOSGestureCategory setLocalizedCategoryName:]
  -[VOSGestureCategory gestures]
  -[VOSGestureCategory initWithGestures:localizedCategoryName:]
  -[VOSGestureCategory setGestures:]
  -[VOSGestureCategory containsGesture:]


VOSDefaultHapticPack : NSObject /usr/lib/libSystem.B.dylib <VOSHapticPack>
 @property  NSDictionary *eventToHapticFilenameMapping
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VOSDefaultHapticPack eventToHapticFilenameMapping]
  -[VOSDefaultHapticPack hapticAssetURLForOutputEvent:]


_VOSProfileKeyChord : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  AXSSKeyChord *keyChord
 @property  _VOSProfileCommand *command

  // class methods
  +[_VOSProfileKeyChord supportsSecureCoding]
  +[_VOSProfileKeyChord profileKeyChordWithKeyChord:]
  +[_VOSProfileKeyChord profileKeyChordWithStringValue:]

  // instance methods
  -[_VOSProfileKeyChord command]
  -[_VOSProfileKeyChord .cxx_destruct]
  -[_VOSProfileKeyChord encodeWithCoder:]
  -[_VOSProfileKeyChord setCommand:]
  -[_VOSProfileKeyChord initWithCoder:]
  -[_VOSProfileKeyChord keyChord]
  -[_VOSProfileKeyChord _initWithKeyChord:]
  -[_VOSProfileKeyChord setKeyChord:]


VOSVoiceOverCommandInfo : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[VOSVoiceOverCommandInfo .cxx_destruct]
  -[VOSVoiceOverCommandInfo localizedNameForCategory:]
  -[VOSVoiceOverCommandInfo _loadBrailleCommandsIfNecessary]
  -[VOSVoiceOverCommandInfo brailleVoiceOverCategories]
  -[VOSVoiceOverCommandInfo brailleCommandsForCategory:]
  -[VOSVoiceOverCommandInfo localizedNameForCommand:]


VOSGesture : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSString *rawValue
 @property  NSString *localizedName

  // class methods
  +[VOSGesture supportsSecureCoding]
  +[VOSGesture Invalid]
  +[VOSGesture OneFingerSingleTap]
  +[VOSGesture OneFingerDoubleTap]
  +[VOSGesture OneFingerTripleTap]
  +[VOSGesture OneFingerQuadrupleTap]
  +[VOSGesture TwoFingerSingleTap]
  +[VOSGesture TwoFingerDoubleTap]
  +[VOSGesture TwoFingerTripleTap]
  +[VOSGesture TwoFingerQuadrupleTap]
  +[VOSGesture ThreeFingerSingleTap]
  +[VOSGesture ThreeFingerDoubleTap]
  +[VOSGesture ThreeFingerTripleTap]
  +[VOSGesture ThreeFingerQuadrupleTap]
  +[VOSGesture FourFingerSingleTap]
  +[VOSGesture FourFingerDoubleTap]
  +[VOSGesture FourFingerTripleTap]
  +[VOSGesture FourFingerQuadrupleTap]
  +[VOSGesture FiveFingerSingleTap]
  +[VOSGesture FiveFingerDoubleTap]
  +[VOSGesture FiveFingerTripleTap]
  +[VOSGesture FiveFingerQuadrupleTap]
  +[VOSGesture OneFingerFlickLeft]
  +[VOSGesture OneFingerFlickRight]
  +[VOSGesture OneFingerFlickUp]
  +[VOSGesture OneFingerFlickDown]
  +[VOSGesture TwoFingerFlickLeft]
  +[VOSGesture TwoFingerFlickRight]
  +[VOSGesture TwoFingerFlickUp]
  +[VOSGesture TwoFingerFlickDown]
  +[VOSGesture ThreeFingerFlickLeft]
  +[VOSGesture ThreeFingerFlickRight]
  +[VOSGesture ThreeFingerFlickUp]
  +[VOSGesture ThreeFingerFlickDown]
  +[VOSGesture FourFingerFlickLeft]
  +[VOSGesture FourFingerFlickRight]
  +[VOSGesture FourFingerFlickUp]
  +[VOSGesture FourFingerFlickDown]
  +[VOSGesture TwoFingerRotateCounterclockwise]
  +[VOSGesture TwoFingerRotateClockwise]
  +[VOSGesture TwoFingerScrub]
  +[VOSGesture OneFingerSingleTapAndHold]
  +[VOSGesture OneFingerDoubleTapAndHold]
  +[VOSGesture TwoFingerSingleTapAndHold]
  +[VOSGesture TwoFingerDoubleTapAndHold]
  +[VOSGesture ThreeFingerSingleTapAndHold]
  +[VOSGesture ThreeFingerDoubleTapAndHold]
  +[VOSGesture ThreeFingerDoubleTapHoldAndFlickUp]
  +[VOSGesture ThreeFingerDoubleTapHoldAndFlickLeft]
  +[VOSGesture ThreeFingerDoubleTapHoldAndFlickDown]
  +[VOSGesture ThreeFingerDoubleTapHoldAndFlickRight]
  +[VOSGesture BackTapDoubleTap]
  +[VOSGesture BackTapTripleTap]
  +[VOSGesture allGestures]
  +[VOSGesture _gesturesForFingerCount:]
  +[VOSGesture gestureWithStringValue:]
  +[VOSGesture horizontalMirrorGestureForGesture:]
  +[VOSGesture rtlGestureForGesture:]
  +[VOSGesture oneFingerGestures]
  +[VOSGesture twoFingerGestures]
  +[VOSGesture threeFingerGestures]
  +[VOSGesture fourFingerGestures]
  +[VOSGesture fiveFingerGestures]
  +[VOSGesture conflictingZoomGestures]

  // instance methods
  -[VOSGesture .cxx_destruct]
  -[VOSGesture localizedName]
  -[VOSGesture rawValue]
  -[VOSGesture encodeWithCoder:]
  -[VOSGesture isEqual:]
  -[VOSGesture initWithCoder:]
  -[VOSGesture _initWithRawValue:]


VOSDefaultSoundPack : NSObject /usr/lib/libSystem.B.dylib <VOSSoundPack>
 @property  NSDictionary *eventToSoundFilenameMapping
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VOSDefaultSoundPack eventToSoundFilenameMapping]
  -[VOSDefaultSoundPack soundAssetURLForOutputEvent:]


VOSScreenreaderMode : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *rawValue
 @property  NSString *localizedName

  // class methods
  +[VOSScreenreaderMode allModes]
  +[VOSScreenreaderMode Invalid]
  +[VOSScreenreaderMode Default]
  +[VOSScreenreaderMode Handwriting]
  +[VOSScreenreaderMode BrailleScreenInput]
  +[VOSScreenreaderMode modeWithStringValue:]

  // instance methods
  -[VOSScreenreaderMode .cxx_destruct]
  -[VOSScreenreaderMode localizedName]
  -[VOSScreenreaderMode rawValue]
  -[VOSScreenreaderMode _initWithRawValue:]


VOSCommandManager : NSObject /usr/lib/libSystem.B.dylib <VOSCommandProfileDelegate>
 @property  BOOL activeProfileIsUserProfile
 @property  VOSCommandProfile *activeProfile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VOSCommandManager _commonInit]
  -[VOSCommandManager init]
  -[VOSCommandManager dealloc]
  -[VOSCommandManager .cxx_destruct]
  -[VOSCommandManager reloadWithSystemProfile]
  -[VOSCommandManager reloadPreferringUserProfile]
  -[VOSCommandManager activeProfileIsUserProfile]
  -[VOSCommandManager _validateUserProfileDiscrepancies:]
  -[VOSCommandManager saveAsUserProfile]
  -[VOSCommandManager initPreferringUserProfile]
  -[VOSCommandManager _loadSystemProfile]
  -[VOSCommandManager setActiveProfileIsUserProfile:]
  -[VOSCommandManager systemProfile]
  -[VOSCommandManager availabilityForGesture:withResolver:]
  -[VOSCommandManager commandForTouchGesture:withResolver:]
  -[VOSCommandManager addGesture:toCommand:withResolver:]
  -[VOSCommandManager removeGesture:fromCommand:withResolver:]
  -[VOSCommandManager addKeyChord:toCommand:withResolver:]
  -[VOSCommandManager removeKeyChord:fromCommand:withResolver:]
  -[VOSCommandManager validateCanAddGesture:toCommand:withResolver:]
  -[VOSCommandManager validateCanRemoveGesture:fromCommand:withResolver:]
  -[VOSCommandManager validateCanAddKeyChord:toCommand:withResolver:]
  -[VOSCommandManager validateCanRemoveKeyChord:fromCommand:withResolver:]
  -[VOSCommandManager commandForKeyChord:withResolver:]
  -[VOSCommandManager allCommandsWithResolver:]
  -[VOSCommandManager allSiriShortcutCommandsWithResolver:]
  -[VOSCommandManager allShortcutBindingsWithResolver:]
  -[VOSCommandManager userPresentableAllShortcutBindingsWithResolver:]
  -[VOSCommandManager gestureBindingsForCommand:withResolver:]
  -[VOSCommandManager shortcutBindingsForCommand:withResolver:]
  -[VOSCommandManager commandHasAnyBindings:withResolver:]
  -[VOSCommandManager availabilityForShortcut:withResolver:]
  -[VOSCommandManager availabilityForCommand:withResolver:]
  -[VOSCommandManager commandHasModifiedBindingsWhenZoomEnabled:withResolver:]
  -[VOSCommandManager availableSiriShortcuts:]
  -[VOSCommandManager initWithSystemProfile]
  -[VOSCommandManager restoreDefaultProfile]
  -[VOSCommandManager batchUpdateActiveProfile:saveIfSuccessful:completion:]
  -[VOSCommandManager activeProfile]


VOSBluetoothLowEnergyDevice : NSObject /usr/lib/libSystem.B.dylib <VOSBluetoothConnectableDevice>
 @property  CBPeripheral *peripheral
 @property  CBCentralManager *centralManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VOSBluetoothLowEnergyDevice paired]
  -[VOSBluetoothLowEnergyDevice disconnect]
  -[VOSBluetoothLowEnergyDevice connect]
  -[VOSBluetoothLowEnergyDevice compare:]
  -[VOSBluetoothLowEnergyDevice centralManager]
  -[VOSBluetoothLowEnergyDevice unpair]
  -[VOSBluetoothLowEnergyDevice .cxx_destruct]
  -[VOSBluetoothLowEnergyDevice name]
  -[VOSBluetoothLowEnergyDevice connected]
  -[VOSBluetoothLowEnergyDevice identifier]
  -[VOSBluetoothLowEnergyDevice isEqual:]
  -[VOSBluetoothLowEnergyDevice peripheral]
  -[VOSBluetoothLowEnergyDevice initWithPeripheral:manager:]
  -[VOSBluetoothLowEnergyDevice connecting]


VOSCommandResolver : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  VOSScreenreaderMode *screenreaderMode
 @property  BOOL isDefaultScreenreaderMode
 @property  BOOL isHandwritingScreenreaderMode
 @property  BOOL isBSIScreenreaderMode
 @property  BOOL shouldApplyRTL
 @property  unsigned long keyboardMode
 @property  BOOL isDefaultKeyboardMode
 @property  BOOL isQuickNavKeyboardMode
 @property  unsigned long host
 @property  BOOL isIPad
 @property  BOOL isIPhone
 @property  BOOL isWatch
 @property  BOOL isAppleTV
 @property  BOOL isHomePod
 @property  unsigned long bsiTypingMode
 @property  long long pressCount
 @property  @? fetchPressCountBlock
 @property  unsigned long context
 @property  @? fetchContextBlock
 @property  @? resolvingEventOccurredBlock

  // class methods
  +[VOSCommandResolver currentHost]
  +[VOSCommandResolver resolverForCurrentHost]

  // instance methods
  -[VOSCommandResolver host]
  -[VOSCommandResolver context]
  -[VOSCommandResolver setHost:]
  -[VOSCommandResolver copyWithZone:]
  -[VOSCommandResolver isIPad]
  -[VOSCommandResolver isHomePod]
  -[VOSCommandResolver .cxx_destruct]
  -[VOSCommandResolver isAppleTV]
  -[VOSCommandResolver isIPhone]
  -[VOSCommandResolver isWatch]
  -[VOSCommandResolver setScreenreaderMode:]
  -[VOSCommandResolver screenreaderMode]
  -[VOSCommandResolver keyboardMode]
  -[VOSCommandResolver fetchPressCountBlock]
  -[VOSCommandResolver fetchContextBlock]
  -[VOSCommandResolver shouldApplyRTL]
  -[VOSCommandResolver bsiTypingMode]
  -[VOSCommandResolver pressCount]
  -[VOSCommandResolver setShouldApplyRTL:]
  -[VOSCommandResolver setKeyboardMode:]
  -[VOSCommandResolver setBsiTypingMode:]
  -[VOSCommandResolver setFetchPressCountBlock:]
  -[VOSCommandResolver setFetchContextBlock:]
  -[VOSCommandResolver resolvingEventOccurredBlock]
  -[VOSCommandResolver setResolvingEventOccurredBlock:]
  -[VOSCommandResolver resolverWithScreenreaderModeVariant:]
  -[VOSCommandResolver isDefaultScreenreaderMode]
  -[VOSCommandResolver isBSIScreenreaderMode]
  -[VOSCommandResolver isHandwritingScreenreaderMode]
  -[VOSCommandResolver isDefaultKeyboardMode]
  -[VOSCommandResolver isQuickNavKeyboardMode]


VOSOutputEvent : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL supportsSoundEffect
 @property  BOOL supportsHaptic
 @property  NSString *rawValue
 @property  NSString *localizedName

  // class methods
  +[VOSOutputEvent DidActivateElement]
  +[VOSOutputEvent NoResultsFound]
  +[VOSOutputEvent BoundaryEncountered]
  +[VOSOutputEvent DidFocusOnElement]
  +[VOSOutputEvent DidReorderItem]
  +[VOSOutputEvent UnknownCommand]
  +[VOSOutputEvent DidWrapBackwards]
  +[VOSOutputEvent DidWrapForwards]
  +[VOSOutputEvent DidScrollByPage]
  +[VOSOutputEvent DidBeginPassthrough]
  +[VOSOutputEvent DidSelectAutofill]
  +[VOSOutputEvent DidSelectPreviousRotor]
  +[VOSOutputEvent DidSelectNextRotor]
  +[VOSOutputEvent PreviousRotorProgress]
  +[VOSOutputEvent NextRotorProgress]
  +[VOSOutputEvent DidEnterTouchContainer]
  +[VOSOutputEvent DidEnterSecureText]
  +[VOSOutputEvent DidEnterTargetArea]
  +[VOSOutputEvent DidLeaveTargetArea]
  +[VOSOutputEvent DidSyncWithSystemFocus]
  +[VOSOutputEvent DidChangeTextSelectionDirection]
  +[VOSOutputEvent AlertDidAppear]
  +[VOSOutputEvent PopoverDidAppear]
  +[VOSOutputEvent ScreenDidChange]
  +[VOSOutputEvent ItemIsLoading]
  +[VOSOutputEvent ItemDidLoad]
  +[VOSOutputEvent ScreenDidTurnOff]
  +[VOSOutputEvent CollaborationOccurred]
  +[VOSOutputEvent InsertionPointDidMove]
  +[VOSOutputEvent AutofillDidAppear]
  +[VOSOutputEvent AutofillDidDismiss]
  +[VOSOutputEvent FolderWillOpen]
  +[VOSOutputEvent FolderDidOpen]
  +[VOSOutputEvent FolderDidClose]
  +[VOSOutputEvent KeyboardAppeared]
  +[VOSOutputEvent KeyboardDisappeared]
  +[VOSOutputEvent BrailleDisplayConnected]
  +[VOSOutputEvent BrailleDisplayDisconnected]
  +[VOSOutputEvent ItemMemorizationSucceeded]
  +[VOSOutputEvent ItemMemorizationFailed]
  +[VOSOutputEvent ItemMemorizationInProgress]
  +[VOSOutputEvent DockDidAppear]
  +[VOSOutputEvent DockDidDisappear]
  +[VOSOutputEvent ReachabilityDidBegin]
  +[VOSOutputEvent ReachabilityDidEnd]
  +[VOSOutputEvent TouchIDAuthenticated]
  +[VOSOutputEvent TouchIDFailed]
  +[VOSOutputEvent NoItemExists]
  +[VOSOutputEvent DidChangeVolume]
  +[VOSOutputEvent DidRecognizeMLContent]
  +[VOSOutputEvent DidEnableQuickNav]
  +[VOSOutputEvent DidDisableQuickNav]
  +[VOSOutputEvent TVDidBeginInteractionWithRotor]
  +[VOSOutputEvent TVDidEndInteractionWithRotor]
  +[VOSOutputEvent SensitiveContent]
  +[VOSOutputEvent allOutputEvents]
  +[VOSOutputEvent eventWithStringValue:]

  // instance methods
  -[VOSOutputEvent .cxx_destruct]
  -[VOSOutputEvent localizedName]
  -[VOSOutputEvent rawValue]
  -[VOSOutputEvent supportsHaptic]
  -[VOSOutputEvent supportsSoundEffect]
  -[VOSOutputEvent setSupportsSoundEffect:]
  -[VOSOutputEvent setSupportsHaptic:]
  -[VOSOutputEvent _initOutputEventWithRawValue:supportsSoundEffect:supportsHaptic:]


_VOSProfileCommand : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  VOSCommand *command
 @property  NSMutableSet *gestures
 @property  NSMutableSet *keyboardShortcuts
 @property  NSMutableSet *quickNavShortcuts
 @property  NSMutableSet *slaveCommands
 @property  _VOSProfileMode *mode
 @property  BOOL hasSlaveCommands

  // class methods
  +[_VOSProfileCommand supportsSecureCoding]
  +[_VOSProfileCommand profileCommandWithCommand:]
  +[_VOSProfileCommand profileCommandWithStringValue:]

  // instance methods
  -[_VOSProfileCommand command]
  -[_VOSProfileCommand mode]
  -[_VOSProfileCommand .cxx_destruct]
  -[_VOSProfileCommand encodeWithCoder:]
  -[_VOSProfileCommand setMode:]
  -[_VOSProfileCommand setCommand:]
  -[_VOSProfileCommand gestures]
  -[_VOSProfileCommand initWithCoder:]
  -[_VOSProfileCommand setGestures:]
  -[_VOSProfileCommand _initWithCommand:gestures:keyboardShortcuts:quickNavShortcuts:slaveCommands:]
  -[_VOSProfileCommand addGesture:]
  -[_VOSProfileCommand removeGesture:]
  -[_VOSProfileCommand profileGestureForGesture:]
  -[_VOSProfileCommand addKeyboardShortcut:]
  -[_VOSProfileCommand removeKeyboardShortcut:]
  -[_VOSProfileCommand profileKeyboardShortcutForKeyChord:]
  -[_VOSProfileCommand addQuickNavShortcut:]
  -[_VOSProfileCommand removeQuickNavShortcut:]
  -[_VOSProfileCommand profileQuickNavShortcutForKeyChord:]
  -[_VOSProfileCommand addSlaveCommand:]
  -[_VOSProfileCommand removeSlaveCommand:]
  -[_VOSProfileCommand hasSlaveCommands]
  -[_VOSProfileCommand slaveCommandsForPressCount:]
  -[_VOSProfileCommand keyboardShortcuts]
  -[_VOSProfileCommand setKeyboardShortcuts:]
  -[_VOSProfileCommand quickNavShortcuts]
  -[_VOSProfileCommand setQuickNavShortcuts:]
  -[_VOSProfileCommand slaveCommands]
  -[_VOSProfileCommand setSlaveCommands:]


VOSCommandCategory : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *commands
 @property  NSString *localizedCategoryName

  // class methods
  +[VOSCommandCategory output]
  +[VOSCommandCategory interaction]
  +[VOSCommandCategory rotor]
  +[VOSCommandCategory scrolling]
  +[VOSCommandCategory other]
  +[VOSCommandCategory editing]
  +[VOSCommandCategory system]
  +[VOSCommandCategory allCategories]
  +[VOSCommandCategory basicNavigation]
  +[VOSCommandCategory textNavigation]
  +[VOSCommandCategory advancedNavigation]
  +[VOSCommandCategory speechAndAudio]
  +[VOSCommandCategory voiceOverFeatures]
  +[VOSCommandCategory internalOnly]
  +[VOSCommandCategory handwriting]
  +[VOSCommandCategory brailleScreenInput]
  +[VOSCommandCategory categories:containsCommand:]

  // instance methods
  -[VOSCommandCategory init]
  -[VOSCommandCategory .cxx_destruct]
  -[VOSCommandCategory setCommands:]
  -[VOSCommandCategory localizedCategoryName]
  -[VOSCommandCategory setLocalizedCategoryName:]
  -[VOSCommandCategory commands]
  -[VOSCommandCategory initWithCommands:localizedCategoryName:]
  -[VOSCommandCategory containsCommand:]


_VOSProfileMode : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  VOSScreenreaderMode *mode
 @property  NSMutableSet *commands

  // class methods
  +[_VOSProfileMode supportsSecureCoding]
  +[_VOSProfileMode profileModeWitMode:]
  +[_VOSProfileMode profileModeWithStringValue:]

  // instance methods
  -[_VOSProfileMode mode]
  -[_VOSProfileMode addCommand:]
  -[_VOSProfileMode .cxx_destruct]
  -[_VOSProfileMode setCommands:]
  -[_VOSProfileMode encodeWithCoder:]
  -[_VOSProfileMode setMode:]
  -[_VOSProfileMode commands]
  -[_VOSProfileMode initWithCoder:]
  -[_VOSProfileMode _initWithMode:commands:]


VOSCommand : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *votEventCommandName
 @property  long long commandType
 @property  NSString *rawValue
 @property  AXSiriShortcut *siriShortcut
 @property  NSString *localizedName

  // class methods
  +[VOSCommand Cut]
  +[VOSCommand Copy]
  +[VOSCommand Undo]
  +[VOSCommand Redo]
  +[VOSCommand Paste]
  +[VOSCommand Escape]
  +[VOSCommand Invalid]
  +[VOSCommand ReadAll]
  +[VOSCommand ReadURL]
  +[VOSCommand LaunchSocialDistancing]
  +[VOSCommand builtInCommandWithStringValue:]
  +[VOSCommand commandWithSiriShortcut:]
  +[VOSCommand PrimaryActivate]
  +[VOSCommand SecondaryActivate]
  +[VOSCommand MagicTap]
  +[VOSCommand PerformLongPress]
  +[VOSCommand MoveToPreviousElement]
  +[VOSCommand MoveToNextElement]
  +[VOSCommand MoveToFirstElement]
  +[VOSCommand MoveToElementAbove]
  +[VOSCommand MoveToElementBelow]
  +[VOSCommand MoveToLastElement]
  +[VOSCommand MoveToPreviousContainer]
  +[VOSCommand MoveToNextContainer]
  +[VOSCommand MoveToTopOfCurrentContainer]
  +[VOSCommand MoveToBottomOfCurrentContainer]
  +[VOSCommand MoveToTopOfCurrentDocument]
  +[VOSCommand MoveToBottomOfCurrentDocument]
  +[VOSCommand MoveToLinkedUI]
  +[VOSCommand MoveToStatusBar]
  +[VOSCommand MoveToPreviousElementCommunity]
  +[VOSCommand MoveToNextElementCommunity]
  +[VOSCommand MoveToPreviousCharacter]
  +[VOSCommand MoveToNextCharacter]
  +[VOSCommand MoveToPreviousWord]
  +[VOSCommand MoveToNextWord]
  +[VOSCommand MoveToPreviousSentence]
  +[VOSCommand MoveToNextSentence]
  +[VOSCommand MoveToPreviousParagraph]
  +[VOSCommand MoveToNextParagraph]
  +[VOSCommand MoveToPreviousStyleChange]
  +[VOSCommand MoveToNextStyleChange]
  +[VOSCommand MoveToPreviousFontChange]
  +[VOSCommand MoveToNextFontChange]
  +[VOSCommand MoveToPreviousUnderlineText]
  +[VOSCommand MoveToNextUnderlineText]
  +[VOSCommand MoveToPreviousItalicText]
  +[VOSCommand MoveToNextItalicText]
  +[VOSCommand MoveToPreviousBoldText]
  +[VOSCommand MoveToNextBoldText]
  +[VOSCommand MoveToPreviousColorChange]
  +[VOSCommand MoveToNextColorChange]
  +[VOSCommand MoveToPreviousPlainText]
  +[VOSCommand MoveToNextPlainText]
  +[VOSCommand MoveToPreviousMisspelledWord]
  +[VOSCommand MoveToNextMisspelledWord]
  +[VOSCommand MoveToPreviousBlockquote]
  +[VOSCommand MoveToNextBlockquote]
  +[VOSCommand MoveToPreviousSameBlockquote]
  +[VOSCommand MoveToNextSameBlockquote]
  +[VOSCommand MoveToPreviousFrame]
  +[VOSCommand MoveToNextFrame]
  +[VOSCommand MoveToPreviousTable]
  +[VOSCommand MoveToNextTable]
  +[VOSCommand MoveToPreviousColumn]
  +[VOSCommand MoveToNextColumn]
  +[VOSCommand MoveToPreviousList]
  +[VOSCommand MoveToNextList]
  +[VOSCommand MoveToPreviousSameElement]
  +[VOSCommand MoveToNextSameElement]
  +[VOSCommand MoveToPreviousDifferentElement]
  +[VOSCommand MoveToNextDifferentElement]
  +[VOSCommand MoveToPreviousHeading]
  +[VOSCommand MoveToNextHeading]
  +[VOSCommand MoveToPreviousSameHeading]
  +[VOSCommand MoveToNextSameHeading]
  +[VOSCommand MoveToPreviousLink]
  +[VOSCommand MoveToNextLink]
  +[VOSCommand MoveToPreviousVisitedLink]
  +[VOSCommand MoveToNextVisitedLink]
  +[VOSCommand MoveToPreviousControl]
  +[VOSCommand MoveToNextControl]
  +[VOSCommand MoveToPreviousGraphic]
  +[VOSCommand MoveToNextGraphic]
  +[VOSCommand MoveToSystemFocusedElement]
  +[VOSCommand FindElementWithTextSearch]
  +[VOSCommand PreviousSearchResult]
  +[VOSCommand NextSearchResult]
  +[VOSCommand ToggleMute]
  +[VOSCommand ToggleSpeech]
  +[VOSCommand ToggleAudioDucking]
  +[VOSCommand SummarizeElement]
  +[VOSCommand AnalyzeElement]
  +[VOSCommand ReadFromTop]
  +[VOSCommand ReadLine]
  +[VOSCommand ReadWord]
  +[VOSCommand ReadSelectedText]
  +[VOSCommand ReadTextStyle]
  +[VOSCommand ReadHint]
  +[VOSCommand ReadCharacter]
  +[VOSCommand ReadCharacterPhonetically]
  +[VOSCommand ReadRowHeader]
  +[VOSCommand ReadRowContents]
  +[VOSCommand ReadTableRowColumn]
  +[VOSCommand ReadTableRowColumnCell]
  +[VOSCommand ReadColumnHeader]
  +[VOSCommand ReadColumnContents]
  +[VOSCommand ReadLineCount]
  +[VOSCommand SummarizeSystemFocusedElement]
  +[VOSCommand ReadSystemFocusedElementDetails]
  +[VOSCommand PreviewElementWith3DTouch]
  +[VOSCommand PreviousRotor]
  +[VOSCommand NextRotor]
  +[VOSCommand PreviousRotorItem]
  +[VOSCommand NextRotorItem]
  +[VOSCommand ScrollLeft]
  +[VOSCommand ScrollRight]
  +[VOSCommand ScrollUp]
  +[VOSCommand ScrollDown]
  +[VOSCommand ShowItemChooser]
  +[VOSCommand OpenVoiceOverSettings]
  +[VOSCommand ToggleScreenCurtain]
  +[VOSCommand StartHelp]
  +[VOSCommand ToggleCaptionPanel]
  +[VOSCommand LabelElement]
  +[VOSCommand MonitorElement]
  +[VOSCommand ToggleSingleLetterQuickNav]
  +[VOSCommand ToggleLockModifierKeys]
  +[VOSCommand DescribeImage]
  +[VOSCommand ToggleAutomaticAccessibility]
  +[VOSCommand ShowNotificationCenter]
  +[VOSCommand ShowControlCenter]
  +[VOSCommand ActivateSpeakScreen]
  +[VOSCommand ActivateHomeButton]
  +[VOSCommand ToggleDock]
  +[VOSCommand ToggleAppSwitcher]
  +[VOSCommand ActivateLockButton]
  +[VOSCommand ShowSpotlight]
  +[VOSCommand ActivateAccessibilityShortcut]
  +[VOSCommand ToggleReachability]
  +[VOSCommand TakeScreenshot]
  +[VOSCommand SwitchToPreviousApp]
  +[VOSCommand SwitchToNextApp]
  +[VOSCommand ToggleTextSelection]
  +[VOSCommand CopySpeechToClipboard]
  +[VOSCommand PreviousHandwritingCharacterMode]
  +[VOSCommand NextHandwritingCharacterMode]
  +[VOSCommand AnnounceHandwritingCharacterMode]
  +[VOSCommand GesturedTextInputInsertSpace]
  +[VOSCommand GesturedTextInputBackspace]
  +[VOSCommand GesturedTextInputDeleteWord]
  +[VOSCommand GesturedTextInputPerformReturnEquivalent]
  +[VOSCommand GesturedTextInputPreviousSuggestion]
  +[VOSCommand GesturedTextInputNextSuggestion]
  +[VOSCommand GesturedTextInputLaunchApp]
  +[VOSCommand GesturedTextInputNextKeyboardLanguage]
  +[VOSCommand BSIPreviousBrailleMode]
  +[VOSCommand BSINextBrailleMode]
  +[VOSCommand BSITranslateImmediately]
  +[VOSCommand BSIOrientationLock]
  +[VOSCommand BSIQuickAction]
  +[VOSCommand GesturedTextInputNextBrailleTable]
  +[VOSCommand MoveToFirstWord]
  +[VOSCommand MoveToLastWord]
  +[VOSCommand ActivateBrailleScreenInput]
  +[VOSCommand ToggleNavigationStyle]
  +[VOSCommand ToggleSyncNativeAndExploreFocus]
  +[VOSCommand allBuiltInCommands]
  +[VOSCommand commandForVOSEventCommand:]

  // instance methods
  -[VOSCommand .cxx_destruct]
  -[VOSCommand localizedName]
  -[VOSCommand rawValue]
  -[VOSCommand commandType]
  -[VOSCommand setCommandType:]
  -[VOSCommand siriShortcut]
  -[VOSCommand _initWithSiriShortcut:]
  -[VOSCommand _initBuiltInCommandWithRawValue:votEventCommandName:]
  -[VOSCommand votEventCommandName]
  -[VOSCommand setVotEventCommandName:]


VOSCommandProfileValidation : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isSuccessful
 @property  BOOL isGestureAlreadyAssignedToCommand
 @property  BOOL isGestureAssignedToOtherCommand
 @property  BOOL isKeyboardShortcutAlreadyAssignedToCommand
 @property  BOOL isKeyboardShortcutAssignedToOtherCommand
 @property  NSString *localizedErrorTitle
 @property  NSString *localizedErrorMessage
 @property  VOSCommand *previouslyBoundCommand

  // class methods
  +[VOSCommandProfileValidation successfulValidation]
  +[VOSCommandProfileValidation gestureAssignedToOtherCommandValidation:]
  +[VOSCommandProfileValidation keyboardShortcutAssignedToOtherCommandValidation:]

  // instance methods
  -[VOSCommandProfileValidation init]
  -[VOSCommandProfileValidation initWithType:]
  -[VOSCommandProfileValidation .cxx_destruct]
  -[VOSCommandProfileValidation localizedErrorMessage]
  -[VOSCommandProfileValidation isSuccessful]
  -[VOSCommandProfileValidation setPreviouslyBoundCommand:]
  -[VOSCommandProfileValidation previouslyBoundCommand]
  -[VOSCommandProfileValidation isGestureAlreadyAssignedToCommand]
  -[VOSCommandProfileValidation isGestureAssignedToOtherCommand]
  -[VOSCommandProfileValidation isKeyboardShortcutAlreadyAssignedToCommand]
  -[VOSCommandProfileValidation isKeyboardShortcutAssignedToOtherCommand]
  -[VOSCommandProfileValidation localizedErrorTitle]


_VOSProfileGesture : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  VOSGesture *gesture
 @property  _VOSProfileCommand *command

  // class methods
  +[_VOSProfileGesture supportsSecureCoding]
  +[_VOSProfileGesture profileGestureWithGesture:]
  +[_VOSProfileGesture profileGestureWithStringValue:]

  // instance methods
  -[_VOSProfileGesture command]
  -[_VOSProfileGesture setGesture:]
  -[_VOSProfileGesture .cxx_destruct]
  -[_VOSProfileGesture encodeWithCoder:]
  -[_VOSProfileGesture gesture]
  -[_VOSProfileGesture setCommand:]
  -[_VOSProfileGesture initWithCoder:]
  -[_VOSProfileGesture _initWithGesture:]


_VOSProfileSlaveCommand : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  VOSCommand *command
 @property  unsigned long context
 @property  unsigned long pressCount
 @property  _VOSProfileCommand *masterProfileCommand

  // class methods
  +[_VOSProfileSlaveCommand supportsSecureCoding]
  +[_VOSProfileSlaveCommand profileSlaveCommandWithCommand:context:pressCount:]
  +[_VOSProfileSlaveCommand profileSlaveCommandWithStringValue:context:pressCount:]

  // instance methods
  -[_VOSProfileSlaveCommand context]
  -[_VOSProfileSlaveCommand command]
  -[_VOSProfileSlaveCommand .cxx_destruct]
  -[_VOSProfileSlaveCommand encodeWithCoder:]
  -[_VOSProfileSlaveCommand setContext:]
  -[_VOSProfileSlaveCommand setCommand:]
  -[_VOSProfileSlaveCommand initWithCoder:]
  -[_VOSProfileSlaveCommand pressCount]
  -[_VOSProfileSlaveCommand setMasterProfileCommand:]
  -[_VOSProfileSlaveCommand _initWithCommand:context:pressCount:]
  -[_VOSProfileSlaveCommand setPressCount:]
  -[_VOSProfileSlaveCommand masterProfileCommand]


VOSBluetoothManager : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned int authorizedServices
 @property  NSArray *connectingDevices
 @property  NSArray *pairedDevices
 @property  NSArray *pairedBrailleDevices

  // class methods
  +[VOSBluetoothManager sharedInstance]
  +[VOSBluetoothManager lastInitError]

  // instance methods
  -[VOSBluetoothManager powerState]
  -[VOSBluetoothManager setDevicePairingEnabled:]
  -[VOSBluetoothManager audioConnected]
  -[VOSBluetoothManager setDiscoverable:]
  -[VOSBluetoothManager _setup:]
  -[VOSBluetoothManager _powerChanged]
  -[VOSBluetoothManager enabled]
  -[VOSBluetoothManager connectingDevices]
  -[VOSBluetoothManager init]
  -[VOSBluetoothManager _connectedStatusChanged]
  -[VOSBluetoothManager _cleanup:]
  -[VOSBluetoothManager setPowered:]
  -[VOSBluetoothManager powered]
  -[VOSBluetoothManager dealloc]
  -[VOSBluetoothManager resetDeviceScanning]
  -[VOSBluetoothManager .cxx_destruct]
  -[VOSBluetoothManager available]
  -[VOSBluetoothManager connected]
  -[VOSBluetoothManager isDiscoverable]
  -[VOSBluetoothManager devicePairingEnabled]
  -[VOSBluetoothManager wasDeviceDiscovered:]
  -[VOSBluetoothManager cancelPairing]
  -[VOSBluetoothManager _restartScan]
  -[VOSBluetoothManager isServiceSupported:]
  -[VOSBluetoothManager connectable]
  -[VOSBluetoothManager connectDevice:]
  -[VOSBluetoothManager setPincode:forDevice:]
  -[VOSBluetoothManager addDeviceIfNeeded:]
  -[VOSBluetoothManager _attach:]
  -[VOSBluetoothManager pairedDevices]
  -[VOSBluetoothManager connectDevice:withServices:]
  -[VOSBluetoothManager isAnyoneScanning]
  -[VOSBluetoothManager setConnectable:]
  -[VOSBluetoothManager acceptSSP:forDevice:]
  -[VOSBluetoothManager postNotification:]
  -[VOSBluetoothManager setAudioConnected:]
  -[VOSBluetoothManager _connectabilityChanged]
  -[VOSBluetoothManager setEnabled:]
  -[VOSBluetoothManager setDeviceScanningEnabled:]
  -[VOSBluetoothManager _postNotification:]
  -[VOSBluetoothManager postNotificationName:object:error:]
  -[VOSBluetoothManager _discoveryStateChanged]
  -[VOSBluetoothManager unpairDevice:]
  -[VOSBluetoothManager deviceScanningEnabled]
  -[VOSBluetoothManager _removeDevice:]
  -[VOSBluetoothManager postNotificationName:object:]
  -[VOSBluetoothManager _postNotificationWithArray:]
  -[VOSBluetoothManager authorizedServices]
  -[VOSBluetoothManager _setDiscoveryAgentScanning:]
  -[VOSBluetoothManager isValidBrailleDevice:]
  -[VOSBluetoothManager _onlySensorsConnected]
  -[VOSBluetoothManager deviceForAddressString:]
  -[VOSBluetoothManager pairedBrailleDevices]
  -[VOSBluetoothManager authorizedServicesForDevice:]
  -[VOSBluetoothManager alertControllerWithVOSBluetoothResult:device:buttonHandler:]
  -[VOSBluetoothManager setAuthorizedServices:]


VOSOutputEventDispatcher : NSObject /usr/lib/libSystem.B.dylib <VOSOutputEventDispatching>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[VOSOutputEventDispatcher sharedInstance]

  // instance methods
  -[VOSOutputEventDispatcher addEventHandler:]
  -[VOSOutputEventDispatcher .cxx_destruct]
  -[VOSOutputEventDispatcher _init]
  -[VOSOutputEventDispatcher sendEvent:]
  -[VOSOutputEventDispatcher removeEventHandler:]
  -[VOSOutputEventDispatcher _activeSoundPack]
  -[VOSOutputEventDispatcher _activeHapticPack]
  -[VOSOutputEventDispatcher shouldPlaySoundForEvent:]
  -[VOSOutputEventDispatcher shouldPlayHapticForEvent:]


VOSCommandProfile : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  <VOSCommandProfileDelegate> *delegate

  // class methods
  +[VOSCommandProfile supportsSecureCoding]
  +[VOSCommandProfile _parseProfileProperties:overlayProperties:]
  +[VOSCommandProfile _addGesturesToCommand:fromCommandProperties:overlayProperties:]
  +[VOSCommandProfile _addKeyboardShortcutsToCommand:fromCommandProperties:overlayProperties:]
  +[VOSCommandProfile _addQuickNavShortcutsToCommand:fromCommandProperties:overlayProperties:]
  +[VOSCommandProfile _addSlaveCommandsToCommand:fromCommandProperties:overlayProperties:]
  +[VOSCommandProfile _overlay:shouldIncludeItem:]
  +[VOSCommandProfile _profileKeyChordsFromDictionaryValue:]

  // instance methods
  -[VOSCommandProfile .cxx_destruct]
  -[VOSCommandProfile encodeWithCoder:]
  -[VOSCommandProfile setDelegate:]
  -[VOSCommandProfile delegate]
  -[VOSCommandProfile initWithCoder:]
  -[VOSCommandProfile availabilityForGesture:withResolver:]
  -[VOSCommandProfile commandForTouchGesture:withResolver:]
  -[VOSCommandProfile addGesture:toCommand:withResolver:]
  -[VOSCommandProfile removeGesture:fromCommand:withResolver:]
  -[VOSCommandProfile addKeyChord:toCommand:withResolver:]
  -[VOSCommandProfile removeKeyChord:fromCommand:withResolver:]
  -[VOSCommandProfile validateCanAddGesture:toCommand:withResolver:]
  -[VOSCommandProfile validateCanRemoveGesture:fromCommand:withResolver:]
  -[VOSCommandProfile validateCanAddKeyChord:toCommand:withResolver:]
  -[VOSCommandProfile validateCanRemoveKeyChord:fromCommand:withResolver:]
  -[VOSCommandProfile commandForKeyChord:withResolver:]
  -[VOSCommandProfile allCommandsWithResolver:]
  -[VOSCommandProfile allSiriShortcutCommandsWithResolver:]
  -[VOSCommandProfile allShortcutBindingsWithResolver:]
  -[VOSCommandProfile userPresentableAllShortcutBindingsWithResolver:]
  -[VOSCommandProfile gestureBindingsForCommand:withResolver:]
  -[VOSCommandProfile shortcutBindingsForCommand:withResolver:]
  -[VOSCommandProfile commandHasAnyBindings:withResolver:]
  -[VOSCommandProfile availabilityForShortcut:withResolver:]
  -[VOSCommandProfile availabilityForCommand:withResolver:]
  -[VOSCommandProfile commandHasModifiedBindingsWhenZoomEnabled:withResolver:]
  -[VOSCommandProfile initWithProfileProperties:overlayProperties:]
  -[VOSCommandProfile _initWithModes:]
  -[VOSCommandProfile _profileModeForResolver:]
  -[VOSCommandProfile _resolvedSlaveCommandForProfileCommand:resolver:]
  -[VOSCommandProfile _profileCommandForCommand:inMode:]
  -[VOSCommandProfile _profileModeForScreenreaderMode:]


VOSBluetoothSSPPairingRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  @? pairingAcceptedBlock
 @property  @? pairingFailedBlock

  // instance methods
  -[VOSBluetoothSSPPairingRequest dismiss]
  -[VOSBluetoothSSPPairingRequest dealloc]
  -[VOSBluetoothSSPPairingRequest .cxx_destruct]
  -[VOSBluetoothSSPPairingRequest initWithDevice:andSpecifier:]
  -[VOSBluetoothSSPPairingRequest setPairingStyle:andPasskey:]
  -[VOSBluetoothSSPPairingRequest pairingStyle]
  -[VOSBluetoothSSPPairingRequest setDelegate:]
  -[VOSBluetoothSSPPairingRequest hidPairingResult:]
  -[VOSBluetoothSSPPairingRequest _sanitizeNameForAlert:]
  -[VOSBluetoothSSPPairingRequest showWithWindow:]
  -[VOSBluetoothSSPPairingRequest pairingAcceptedBlock]
  -[VOSBluetoothSSPPairingRequest setPairingAcceptedBlock:]
  -[VOSBluetoothSSPPairingRequest pairingFailedBlock]
  -[VOSBluetoothSSPPairingRequest setPairingFailedBlock:]


VOSOutputEventCategory : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *outputEvents
 @property  NSString *localizedCategoryName

  // class methods
  +[VOSOutputEventCategory interaction]
  +[VOSOutputEventCategory system]
  +[VOSOutputEventCategory braille]
  +[VOSOutputEventCategory allCategories]
  +[VOSOutputEventCategory voiceOverFeedback]
  +[VOSOutputEventCategory appFeedback]
  +[VOSOutputEventCategory textEditing]

  // instance methods
  -[VOSOutputEventCategory init]
  -[VOSOutputEventCategory .cxx_destruct]
  -[VOSOutputEventCategory localizedCategoryName]
  -[VOSOutputEventCategory setLocalizedCategoryName:]
  -[VOSOutputEventCategory initWithOutputEvents:localizedCategoryName:]
  -[VOSOutputEventCategory setOutputEvents:]
  -[VOSOutputEventCategory outputEvents]
  -[VOSOutputEventCategory containsOutputEvent:]


VOSBluetoothDevice : NSObject /usr/lib/libSystem.B.dylib <NSCopying, VOSBluetoothConnectableDevice>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[VOSBluetoothDevice paired]
  -[VOSBluetoothDevice disconnect]
  -[VOSBluetoothDevice copyWithZone:]
  -[VOSBluetoothDevice connect]
  -[VOSBluetoothDevice vendorId]
  -[VOSBluetoothDevice device]
  -[VOSBluetoothDevice deviceClass]
  -[VOSBluetoothDevice compare:]
  -[VOSBluetoothDevice address]
  -[VOSBluetoothDevice unpair]
  -[VOSBluetoothDevice .cxx_destruct]
  -[VOSBluetoothDevice name]
  -[VOSBluetoothDevice connected]
  -[VOSBluetoothDevice identifier]
  -[VOSBluetoothDevice isServiceSupported:]
  -[VOSBluetoothDevice type]
  -[VOSBluetoothDevice setDevice:]
  -[VOSBluetoothDevice productId]
  -[VOSBluetoothDevice isEqual:]
  -[VOSBluetoothDevice setPIN:]
  -[VOSBluetoothDevice connectedServices]
  -[VOSBluetoothDevice isEqualToDevice:]
  -[VOSBluetoothDevice authorizedServices]
  -[VOSBluetoothDevice majorClass]
  -[VOSBluetoothDevice acceptSSP:]
  -[VOSBluetoothDevice initWithDevice:address:]
  -[VOSBluetoothDevice _clearName]
  -[VOSBluetoothDevice minorClass]
  -[VOSBluetoothDevice connectedServicesCount]
  -[VOSBluetoothDevice connectWithServices:]
  -[VOSBluetoothDevice connecting]
  -[VOSBluetoothDevice isNameCached]
  -[VOSBluetoothDevice hasAddress:]
  -[VOSBluetoothDevice isAppleHIDDevice]


01 00 0400 /System/Library/PrivateFrameworks/AccessibilitySharedSupport.framework/AccessibilitySharedSupport: AXSSKeyChord 
01 00 0600 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXSettings 
01 00 0600 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXSiriShortcut 
01 00 0600 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXSiriShortcutsManager 
01 00 0600 /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities: AXSubsystemBrailleHardware 
01 00 0300 /System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager: BluetoothDevice 
01 00 0300 /System/Library/PrivateFrameworks/BluetoothManager.framework/BluetoothManager: BluetoothManager 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantValueExpression 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0200 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
