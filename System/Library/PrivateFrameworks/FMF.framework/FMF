|| __DATA.__objc_data _OBJC_CLASS_$_FMFAppAccountInfo
|| __DATA.__objc_data _OBJC_CLASS_$_FMFContactUtility
|| __DATA.__objc_data _OBJC_CLASS_$_FMFMapImageRequest
|| __DATA.__objc_data _OBJC_CLASS_$_FMFMapSession
|| __DATA.__objc_data _OBJC_CLASS_$_FMFNotNowRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FMFAppAccountInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_FMFContactUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_FMFMapImageRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_FMFMapSession
|| __DATA.__objc_data _OBJC_METACLASS_$_FMFNotNowRequest
|| __DATA_CONST.__const _FMFDataUpdateCompleteNotification
|| __DATA_CONST.__const _FMFDevicesChangedNotification
|| __DATA_CONST.__const _FMFErrorDomain
|| __DATA_CONST.__const _FMFFenceAcceptanceStatusAccepted
|| __DATA_CONST.__const _FMFFenceAcceptanceStatusPending
|| __DATA_CONST.__const _FMFFenceAcceptanceStatusPendingHidden
|| __DATA_CONST.__const _FMFFenceErrorDomain
|| __DATA_CONST.__const _FMFFenceTimerAlarmDateKey
|| __DATA_CONST.__const _FMFFenceTimerAlarmStream
|| __DATA_CONST.__const _FMFFenceTimerAlarmUserVisible
|| __DATA_CONST.__const _FMFFenceTriggerArriving
|| __DATA_CONST.__const _FMFFenceTriggerImmediate
|| __DATA_CONST.__const _FMFFenceTriggerLeaving
|| __DATA_CONST.__const _FMFFenceTriggerScheduled
|| __DATA_CONST.__const _FMFFenceTriggerStatusEnter
|| __DATA_CONST.__const _FMFFenceTriggerStatusExit
|| __DATA_CONST.__const _FMFFenceTriggerStatusIn
|| __DATA_CONST.__const _FMFFenceTriggerStatusOut
|| __DATA_CONST.__const _FMFFenceTriggerStatusUndetermined
|| __DATA_CONST.__const _FMFFenceTypeNotifyMe
|| __DATA_CONST.__const _FMFFenceTypeNotifyOther
|| __DATA_CONST.__const _FMFFollowersChangedNotification
|| __DATA_CONST.__const _FMFFollowersRemovedNotification
|| __DATA_CONST.__const _FMFFollowingRemovedNotification
|| __DATA_CONST.__const _FMFGroupIdDefault
|| __DATA_CONST.__const _FMFGroupIdGroup
|| __DATA_CONST.__const _FMFGroupIdOneToOne
|| __DATA_CONST.__const _FMFHomeKitAutomationDeviceChangedNotification
|| __DATA_CONST.__const _FMFLocationSharingStatusChanged
|| __DATA_CONST.__const _FMFMeDeviceChangedNotification
|| __DATA_CONST.__const _FMFScheduleTimerIdentifier
|| __DATA_CONST.__const _kMapImageKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFFence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFFriendshipRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFPlacemark
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFSchedule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_FMFSynchronizer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFFence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFFriendshipRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFPlacemark
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFSchedule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_FMFSynchronizer
|| __TEXT.__const _kFMFSyncXPCTimeout
|| __TEXT.__text _FMFDaysOfWeekCount
|| __TEXT.__text _FMFDaysOfWeekFromDayOfWeek
__ Accounts: _kAccountDataclassShareLocation
__ Contacts: _CNContactBirthdayKey
__ Contacts: _CNContactDatesKey
__ Contacts: _CNContactDepartmentNameKey
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactIdentifierKey
__ Contacts: _CNContactImageDataAvailableKey
__ Contacts: _CNContactImageDataKey
__ Contacts: _CNContactInstantMessageAddressesKey
__ Contacts: _CNContactJobTitleKey
__ Contacts: _CNContactLinkIdentifierKey
__ Contacts: _CNContactMiddleNameKey
__ Contacts: _CNContactNamePrefixKey
__ Contacts: _CNContactNameSuffixKey
__ Contacts: _CNContactNicknameKey
__ Contacts: _CNContactNonGregorianBirthdayKey
__ Contacts: _CNContactNoteKey
__ Contacts: _CNContactOrganizationNameKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactPhoneticFamilyNameKey
__ Contacts: _CNContactPhoneticGivenNameKey
__ Contacts: _CNContactPhoneticMiddleNameKey
__ Contacts: _CNContactPostalAddressesKey
__ Contacts: _CNContactPreferredApplePersonaIdentifierKey
__ Contacts: _CNContactPreferredLikenessSourceKey
__ Contacts: _CNContactPreviousFamilyNameKey
__ Contacts: _CNContactRelationsKey
__ Contacts: _CNContactSocialProfilesKey
__ Contacts: _CNContactThumbnailImageDataKey
__ Contacts: _CNContactTypeKey
__ Contacts: _CNContactUrlAddressesKey
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSSystemClockDidChangeNotification
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CorePhoneNumbers: _CFPhoneNumberCreate
__ CorePhoneNumbers: _CFPhoneNumberCreateString
__ FMCoreLite: _FMEmptyResult
__ FMCoreLite: _OBJC_CLASS_$_FMFuture
__ FMCoreLite: _OBJC_CLASS_$_FMPreferencesUtil
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSDateFormatter
__ GeoServices: _OBJC_CLASS_$_GEOLatLng
__ GeoServices: _OBJC_CLASS_$_GEOMapRegion
__ ManagedConfiguration: _MCFeatureFindMyFriendsModificationAllowed
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _time
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_date
__ libSystem.B.dylib: _xpc_set_event
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getName
FMFMapCacheImage : NSObject <NSSecureCoding>
 @property  long long count
 @property  NSString *path
 @property  NSDate *timestamp

  // class methods
  +[FMFMapCacheImage supportsSecureCoding]

  // instance methods
  -[FMFMapCacheImage setCount:]
  -[FMFMapCacheImage setTimestamp:]
  -[FMFMapCacheImage initWithPath:]
  -[FMFMapCacheImage path]
  -[FMFMapCacheImage encodeWithCoder:]
  -[FMFMapCacheImage .cxx_destruct]
  -[FMFMapCacheImage setPath:]
  -[FMFMapCacheImage count]
  -[FMFMapCacheImage timestamp]
  -[FMFMapCacheImage initWithCoder:]
  -[FMFMapCacheImage boostPriority]


FMFSchedule : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *localizedDaysOfWeekString
 @property  NSString *localizedStartTimeString
 @property  NSString *localizedEndTimeString
 @property  NSCalendar *_gregorian
 @property  NSDictionary *dictionary
 @property  NSString *validityError
 @property  unsigned long startHour
 @property  unsigned long startMin
 @property  long long daysOfWeek
 @property  unsigned long endHour
 @property  unsigned long endMin
 @property  unsigned long spanDays
 @property  NSTimeZone *timeZone

  // class methods
  +[FMFSchedule supportsSecureCoding]
  +[FMFSchedule firstDateFromDates:order:]
  +[FMFSchedule _dateFromHour:andMinute:]
  +[FMFSchedule _enumerateDaysOfWeekInFMFDaysOfWeek:callback:]
  +[FMFSchedule _dayStringForDayOfWeek:]
  +[FMFSchedule _stringForDaysOfWeek:]
  +[FMFSchedule localizedDaysOfWeekStringFor:]
  +[FMFSchedule localizedTimeStringForHour:andMinute:timeStyle:]
  +[FMFSchedule localizedTimeStringForHour:andMinute:]

  // instance methods
  -[FMFSchedule timeZone]
  -[FMFSchedule setTimeZone:]
  -[FMFSchedule encodeWithCoder:]
  -[FMFSchedule initWithDictionary:]
  -[FMFSchedule .cxx_destruct]
  -[FMFSchedule copyWithZone:]
  -[FMFSchedule isEqual:]
  -[FMFSchedule initWithCoder:]
  -[FMFSchedule dictionary]
  -[FMFSchedule _gregorian]
  -[FMFSchedule _daysOfWeek]
  -[FMFSchedule setDaysOfWeek:]
  -[FMFSchedule daysOfWeek]
  -[FMFSchedule setEndHour:]
  -[FMFSchedule setStartHour:]
  -[FMFSchedule startHour]
  -[FMFSchedule endHour]
  -[FMFSchedule validityError]
  -[FMFSchedule isCurrentAt:]
  -[FMFSchedule nextStartOrEndDateFrom:]
  -[FMFSchedule previousStartDateFrom:]
  -[FMFSchedule _endDateForStartDate:]
  -[FMFSchedule nextStartDateFrom:options:]
  -[FMFSchedule _nextStartDateOnDayOfWeek:from:options:]
  -[FMFSchedule startMin]
  -[FMFSchedule setStartMin:]
  -[FMFSchedule endMin]
  -[FMFSchedule setEndMin:]
  -[FMFSchedule spanDays]
  -[FMFSchedule setSpanDays:]
  -[FMFSchedule localizedDaysOfWeekString]
  -[FMFSchedule localizedStartTimeString]
  -[FMFSchedule localizedEndTimeString]


FMFMapSession : NSObject
 @property  FMFMapCache *mapCache
 @property  NSXPCConnection *connection

  // class methods
  +[FMFMapSession sharedInstance]
  +[FMFMapSession newConnection]

  // instance methods
  -[FMFMapSession .cxx_destruct]
  -[FMFMapSession connection]
  -[FMFMapSession setConnection:]
  -[FMFMapSession mapImageForRequest:andCompletion:]
  -[FMFMapSession gridImageForScreenRatio:andCompletion:]
  -[FMFMapSession noLocationImageForScreenRatio:andCompletion:]
  -[FMFMapSession mapImageForLocation:isShifted:altitude:pitch:screenRatio:andCompletion:]
  -[FMFMapSession gridImageForWidth:height:cache:andCompletion:]
  -[FMFMapSession mapImageForLocation:radius:width:height:cache:andCompletion:]
  -[FMFMapSession mapImageForLocation:isShifted:radius:width:height:cache:andCompletion:]
  -[FMFMapSession noLocationImageForWidth:height:cache:andCompletion:]
  -[FMFMapSession mapImageForLocation:altitude:pitch:width:height:cache:andCompletion:]
  -[FMFMapSession mapImageForLocation:isShifted:altitude:pitch:width:height:cache:andCompletion:]
  -[FMFMapSession mapImageForLocation:altitude:pitch:screenRatio:andCompletion:]
  -[FMFMapSession mapCache]
  -[FMFMapSession setMapCache:]


FMFHandle : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *serverId
 @property  NSNumber *dsid
 @property  BOOL isFamilyMember
 @property  NSArray *aliasServerIds
 @property  NSArray *invitationSentToIds
 @property  NSDictionary *expiresByGroupId
 @property  NSString *hashedDSID
 @property  BOOL pending
 @property  NSNumber *trackingTimestamp
 @property  NSNumber *favoriteOrder
 @property  NSString *_prettyNameInternal
 @property  long long idsStatus
 @property  BOOL reachable
 @property  NSString *qualifiedIdentifier

  // class methods
  +[FMFHandle supportsSecureCoding]
  +[FMFHandle handleWithId:]
  +[FMFHandle handleWithId:serverId:]
  +[FMFHandle familyHandleWithId:dsid:]

  // instance methods
  -[FMFHandle abPreferencesDidChange]
  -[FMFHandle identifier]
  -[FMFHandle dsid]
  -[FMFHandle setDsid:]
  -[FMFHandle encodeWithCoder:]
  -[FMFHandle setHashedDSID:]
  -[FMFHandle isPhoneNumber]
  -[FMFHandle .cxx_destruct]
  -[FMFHandle setReachable:]
  -[FMFHandle setPending:]
  -[FMFHandle isPending]
  -[FMFHandle hashedDSID]
  -[FMFHandle setIdentifier:]
  -[FMFHandle copyWithZone:]
  -[FMFHandle isEqual:]
  -[FMFHandle recordId]
  -[FMFHandle initWithCoder:]
  -[FMFHandle favoriteOrder]
  -[FMFHandle sanitizePhoneNumber:]
  -[FMFHandle reachable]
  -[FMFHandle isFamilyMember]
  -[FMFHandle serverId]
  -[FMFHandle setServerId:]
  -[FMFHandle prettyName]
  -[FMFHandle addressBookDidChange]
  -[FMFHandle setICloudId:]
  -[FMFHandle isSharingThroughGroupId:]
  -[FMFHandle comparisonIdentifier]
  -[FMFHandle prettyNameCompare:]
  -[FMFHandle cachedPrettyName]
  -[FMFHandle prettyNameWithCompletion:]
  -[FMFHandle clearFavoriteOrder]
  -[FMFHandle setIsFamilyMember:]
  -[FMFHandle aliasServerIds]
  -[FMFHandle setAliasServerIds:]
  -[FMFHandle invitationSentToIds]
  -[FMFHandle setInvitationSentToIds:]
  -[FMFHandle expiresByGroupId]
  -[FMFHandle setExpiresByGroupId:]
  -[FMFHandle trackingTimestamp]
  -[FMFHandle setTrackingTimestamp:]
  -[FMFHandle setFavoriteOrder:]
  -[FMFHandle _prettyNameInternal]
  -[FMFHandle set_prettyNameInternal:]
  -[FMFHandle idsStatus]
  -[FMFHandle setIdsStatus:]
  -[FMFHandle qualifiedIdentifier]
  -[FMFHandle setQualifiedIdentifier:]


FMFMapImageRequest : NSObject <NSSecureCoding>
 @property  CLLocation *location
 @property  BOOL isShifted
 @property  double altitude
 @property  NSString *key
 @property  double pitch
 @property  double width
 @property  double height
 @property  BOOL cachingEnabled
 @property  long long priority
 @property  double radius

  // class methods
  +[FMFMapImageRequest supportsSecureCoding]

  // instance methods
  -[FMFMapImageRequest altitude]
  -[FMFMapImageRequest setAltitude:]
  -[FMFMapImageRequest isShifted]
  -[FMFMapImageRequest radius]
  -[FMFMapImageRequest setPriority:]
  -[FMFMapImageRequest width]
  -[FMFMapImageRequest encodeWithCoder:]
  -[FMFMapImageRequest height]
  -[FMFMapImageRequest setWidth:]
  -[FMFMapImageRequest .cxx_destruct]
  -[FMFMapImageRequest pitch]
  -[FMFMapImageRequest setPitch:]
  -[FMFMapImageRequest setLocation:]
  -[FMFMapImageRequest key]
  -[FMFMapImageRequest priority]
  -[FMFMapImageRequest setHeight:]
  -[FMFMapImageRequest location]
  -[FMFMapImageRequest setCachingEnabled:]
  -[FMFMapImageRequest setRadius:]
  -[FMFMapImageRequest cachingEnabled]
  -[FMFMapImageRequest initWithCoder:]
  -[FMFMapImageRequest setIsShifted:]
  -[FMFMapImageRequest initWithLocation:altitude:pitch:width:height:andCachingEnabled:]
  -[FMFMapImageRequest initWithLocation:isShifted:altitude:pitch:width:height:andCachingEnabled:]
  -[FMFMapImageRequest initWithLocation:radius:width:height:andCachingEnabled:]
  -[FMFMapImageRequest initWithLocation:isShifted:radius:width:height:andCachingEnabled:]


FMFSessionDataManager : NSObject
 @property  NSMutableDictionary *locationsCache
 @property  NSSet *followers
 @property  NSSet *following
 @property  NSSet *locations
 @property  NSSet *fences

  // class methods
  +[FMFSessionDataManager sharedInstance]

  // instance methods
  -[FMFSessionDataManager abPreferencesDidChange]
  -[FMFSessionDataManager abDidChange]
  -[FMFSessionDataManager locations]
  -[FMFSessionDataManager following]
  -[FMFSessionDataManager followers]
  -[FMFSessionDataManager setLocations:]
  -[FMFSessionDataManager followingForHandle:]
  -[FMFSessionDataManager setFences:]
  -[FMFSessionDataManager .cxx_destruct]
  -[FMFSessionDataManager locationForHandle:]
  -[FMFSessionDataManager locationsCache]
  -[FMFSessionDataManager favoritesOrdered]
  -[FMFSessionDataManager setLocationsCache:]
  -[FMFSessionDataManager setFollowers:]
  -[FMFSessionDataManager setFollowing:]
  -[FMFSessionDataManager offerExpirationForHandle:groupId:]
  -[FMFSessionDataManager fences]
  -[FMFSessionDataManager followerForHandle:]


FMFPlacemark : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *formattedAddressLines
 @property  NSString *locality
 @property  NSString *administrativeArea
 @property  NSString *country
 @property  NSString *state
 @property  NSString *streetAddress
 @property  NSString *streetName

  // class methods
  +[FMFPlacemark supportsSecureCoding]

  // instance methods
  -[FMFPlacemark dictionaryValue]
  -[FMFPlacemark setAdministrativeArea:]
  -[FMFPlacemark encodeWithCoder:]
  -[FMFPlacemark state]
  -[FMFPlacemark initWithDictionary:]
  -[FMFPlacemark .cxx_destruct]
  -[FMFPlacemark copyWithZone:]
  -[FMFPlacemark administrativeArea]
  -[FMFPlacemark setCountry:]
  -[FMFPlacemark country]
  -[FMFPlacemark locality]
  -[FMFPlacemark setLocality:]
  -[FMFPlacemark isEqual:]
  -[FMFPlacemark setState:]
  -[FMFPlacemark initWithCoder:]
  -[FMFPlacemark streetAddress]
  -[FMFPlacemark setStreetAddress:]
  -[FMFPlacemark formattedAddressLines]
  -[FMFPlacemark setFormattedAddressLines:]
  -[FMFPlacemark formattedAddress]
  -[FMFPlacemark initWithLocality:administrativeArea:country:state:streetAddress:streetName:]
  -[FMFPlacemark streetName]
  -[FMFPlacemark setStreetName:]


FMFLocationDateFormatter : NSDateFormatter
  // class methods
  +[FMFLocationDateFormatter sharedInstance]


FMFLabelUtil : NSObject
  // class methods
  +[FMFLabelUtil defaultLabelKeys]
  +[FMFLabelUtil isDefaultLabel:]


FMFLocation : NSObject <NSCopying, NSSecureCoding, FMAnnotation>
 @property  FMFHandle *handle
 @property  FMFPlacemark *placemark
 @property  long long locationType
 @property  CLLocation *location
 @property  long long activityState
 @property  NSString *label
 @property  BOOL locatingInProgress
 @property  NSString *shortAddressString
 @property  NSString *longAddress
 @property  NSDate *timestamp
 @property  double maxLocatingInterval
 @property  double TTL
 @property  double distance
 @property  NSString *distanceDescription
 @property  NSString *age
 @property  NSString *shortAddress
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  FMAccuracyOverlay *overlay
 @property  double horizontalAccuracy
 @property  double distanceFromUser
 @property  BOOL isBorderEnabled
 @property  UIColor *tintColor
 @property  UIImage *largeAnnotationIcon
 @property  UIImage *smallAnnotationIcon
 @property  UIImage *largeOverlayIcon
 @property  UIImage *smallOverlayIcon
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FMFLocation supportsSecureCoding]

  // instance methods
  -[FMFLocation horizontalAccuracy]
  -[FMFLocation setHorizontalAccuracy:]
  -[FMFLocation setLocationType:]
  -[FMFLocation distance]
  -[FMFLocation locationType]
  -[FMFLocation setActivityState:]
  -[FMFLocation setHandle:]
  -[FMFLocation initWithLatitude:longitude:]
  -[FMFLocation subtitle]
  -[FMFLocation setTimestamp:]
  -[FMFLocation coordinate]
  -[FMFLocation encodeWithCoder:]
  -[FMFLocation setLabel:]
  -[FMFLocation handle]
  -[FMFLocation isValid]
  -[FMFLocation .cxx_destruct]
  -[FMFLocation setLocation:]
  -[FMFLocation activityState]
  -[FMFLocation tintColor]
  -[FMFLocation title]
  -[FMFLocation setAge:]
  -[FMFLocation conformsToProtocol:]
  -[FMFLocation updateLocation:]
  -[FMFLocation overlay]
  -[FMFLocation shortAddress]
  -[FMFLocation copyWithZone:]
  -[FMFLocation setTintColor:]
  -[FMFLocation label]
  -[FMFLocation timestamp]
  -[FMFLocation location]
  -[FMFLocation isThisDevice]
  -[FMFLocation setDistance:]
  -[FMFLocation maxLocatingInterval]
  -[FMFLocation setCoordinate:]
  -[FMFLocation isEqual:]
  -[FMFLocation initWithCoder:]
  -[FMFLocation age]
  -[FMFLocation setOverlay:]
  -[FMFLocation hasKnownLocation]
  -[FMFLocation placemark]
  -[FMFLocation locationShortAddressWithAgeIncludeLocating]
  -[FMFLocation setPlacemark:]
  -[FMFLocation _updateLocation:]
  -[FMFLocation longAddress]
  -[FMFLocation locationAge]
  -[FMFLocation distanceFromUser]
  -[FMFLocation setDistanceFromUser:]
  -[FMFLocation isBorderEnabled]
  -[FMFLocation setIsBorderEnabled:]
  -[FMFLocation largeAnnotationIcon]
  -[FMFLocation setLargeAnnotationIcon:]
  -[FMFLocation smallAnnotationIcon]
  -[FMFLocation setSmallAnnotationIcon:]
  -[FMFLocation largeOverlayIcon]
  -[FMFLocation setLargeOverlayIcon:]
  -[FMFLocation smallOverlayIcon]
  -[FMFLocation setSmallOverlayIcon:]
  -[FMFLocation initWithDictionary:forHandle:maxLocatingInterval:TTL:]
  -[FMFLocation initWithHandle:locationType:location:activityState:label:locatingInProgress:shortAddress:longAddress:placemark:]
  -[FMFLocation agingItemTimestamp]
  -[FMFLocation locationShortAddressWithAge]
  -[FMFLocation isLocatingInProgress]
  -[FMFLocation setLocatingInProgress:]
  -[FMFLocation resetLocateInProgress:]
  -[FMFLocation resetLocateInProgressTimer]
  -[FMFLocation distanceThenNameCompare:]
  -[FMFLocation updateLocationForCache:]
  -[FMFLocation updateHandle:]
  -[FMFLocation isMoreRecentThan:]
  -[FMFLocation setLongAddress:]
  -[FMFLocation shortAddressString]
  -[FMFLocation setShortAddressString:]
  -[FMFLocation setMaxLocatingInterval:]
  -[FMFLocation TTL]
  -[FMFLocation setTTL:]
  -[FMFLocation distanceDescription]
  -[FMFLocation setDistanceDescription:]


FMFMapCache : NSObject
 @property  NSMutableDictionary *cacheMetaData
 @property  NSMutableDictionary *gridImageMetaData
 @property  NSMutableDictionary *noLocationImageMetaData
 @property  NSMutableDictionary *mapImageMetaData
 @property  NSMutableDictionary *pendingMapImageMetaData
 @property  NSString *cachePath
 @property  NSString *imageCachePath
 @property  NSDate *lastPruneDate
 @property  NSObject<OS_dispatch_queue> *cacheMetaQueue
 @property  NSObject<OS_dispatch_queue> *gridImageQueue
 @property  NSObject<OS_dispatch_queue> *noLocationImageQueue
 @property  NSObject<OS_dispatch_queue> *mapImageQueue
 @property  NSObject<OS_dispatch_queue> *pendingImageQueue
 @property  double mapLocationDistanceThreshold
 @property  BOOL fileProtectionDeactivated

  // instance methods
  -[FMFMapCache cachePath]
  -[FMFMapCache setLastPruneDate:]
  -[FMFMapCache .cxx_destruct]
  -[FMFMapCache lastPruneDate]
  -[FMFMapCache flushCache]
  -[FMFMapCache init]
  -[FMFMapCache setCachePath:]
  -[FMFMapCache cachedGridImageForWidth:andHeight:]
  -[FMFMapCache cacheGridImage:forWidth:andHeight:]
  -[FMFMapCache cachedNoLocationImageForWidth:andHeight:]
  -[FMFMapCache cacheNoLocationImage:forWidth:andHeight:]
  -[FMFMapCache cachedMapImageForRequest:]
  -[FMFMapCache cachedMapImageForLocation:altitude:pitch:width:andHeight:]
  -[FMFMapCache cacheMapImage:forRequest:]
  -[FMFMapCache cacheMapImage:forLocation:altitude:pitch:width:andHeight:]
  -[FMFMapCache pendingMapImageForRequest:]
  -[FMFMapCache pendingMapImageForLocation:altitude:pitch:width:andHeight:]
  -[FMFMapCache readMetaData]
  -[FMFMapCache saveMetaData]
  -[FMFMapCache pruneCacheIfNeeded]
  -[FMFMapCache gridKeyForWidth:andHeight:]
  -[FMFMapCache noLocationKeyForWidth:andHeight:]
  -[FMFMapCache cacheExpiryInSeconds]
  -[FMFMapCache pruneIntervalInSeconds]
  -[FMFMapCache cacheMetaData]
  -[FMFMapCache setCacheMetaData:]
  -[FMFMapCache gridImageMetaData]
  -[FMFMapCache setGridImageMetaData:]
  -[FMFMapCache noLocationImageMetaData]
  -[FMFMapCache setNoLocationImageMetaData:]
  -[FMFMapCache mapImageMetaData]
  -[FMFMapCache setMapImageMetaData:]
  -[FMFMapCache pendingMapImageMetaData]
  -[FMFMapCache setPendingMapImageMetaData:]
  -[FMFMapCache imageCachePath]
  -[FMFMapCache setImageCachePath:]
  -[FMFMapCache cacheMetaQueue]
  -[FMFMapCache setCacheMetaQueue:]
  -[FMFMapCache gridImageQueue]
  -[FMFMapCache setGridImageQueue:]
  -[FMFMapCache noLocationImageQueue]
  -[FMFMapCache setNoLocationImageQueue:]
  -[FMFMapCache mapImageQueue]
  -[FMFMapCache setMapImageQueue:]
  -[FMFMapCache pendingImageQueue]
  -[FMFMapCache setPendingImageQueue:]
  -[FMFMapCache mapLocationDistanceThreshold]
  -[FMFMapCache setMapLocationDistanceThreshold:]
  -[FMFMapCache fileProtectionDeactivated]
  -[FMFMapCache setFileProtectionDeactivated:]


FMFDevice : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *deviceId
 @property  NSString *deviceName
 @property  BOOL isActiveDevice
 @property  BOOL isThisDevice
 @property  BOOL isCompanionDevice
 @property  BOOL isAutoMeCapable
 @property  NSString *idsDeviceId

  // class methods
  +[FMFDevice supportsSecureCoding]
  +[FMFDevice deviceWithId:name:idsDeviceId:isActive:isThisDevice:isCompanionDevice:isAutoMeCapable:]

  // instance methods
  -[FMFDevice deviceId]
  -[FMFDevice setDeviceName:]
  -[FMFDevice setIsActiveDevice:]
  -[FMFDevice encodeWithCoder:]
  -[FMFDevice updateIsActive:isThisDevice:]
  -[FMFDevice setIsCompanionDevice:]
  -[FMFDevice isCompanionDevice]
  -[FMFDevice setDeviceId:]
  -[FMFDevice isAutoMeCapable]
  -[FMFDevice .cxx_destruct]
  -[FMFDevice setIsThisDevice:]
  -[FMFDevice isActiveDevice]
  -[FMFDevice setIdsDeviceId:]
  -[FMFDevice idsDeviceId]
  -[FMFDevice copyWithZone:]
  -[FMFDevice deviceName]
  -[FMFDevice setIsAutoMeCapable:]
  -[FMFDevice isThisDevice]
  -[FMFDevice isEqual:]
  -[FMFDevice initWithCoder:]


FMFAppAccountInfo : NSObject
 @property  NSString *dsid
 @property  NSString *username
 @property  NSString *appServerHost
 @property  NSString *appAuthToken
 @property  long long appAuthTokenStatus
 @property  NSString *legacyDsid
 @property  NSString *legacyUsername

  // instance methods
  -[FMFAppAccountInfo dsid]
  -[FMFAppAccountInfo setDsid:]
  -[FMFAppAccountInfo setUsername:]
  -[FMFAppAccountInfo .cxx_destruct]
  -[FMFAppAccountInfo username]
  -[FMFAppAccountInfo appServerHost]
  -[FMFAppAccountInfo setAppServerHost:]
  -[FMFAppAccountInfo appAuthToken]
  -[FMFAppAccountInfo setAppAuthToken:]
  -[FMFAppAccountInfo appAuthTokenStatus]
  -[FMFAppAccountInfo setAppAuthTokenStatus:]
  -[FMFAppAccountInfo legacyDsid]
  -[FMFAppAccountInfo setLegacyDsid:]
  -[FMFAppAccountInfo legacyUsername]
  -[FMFAppAccountInfo setLegacyUsername:]


FMFSessionProxy : NSObject <FMFXPCInternalClientProtocol>
 @property  FMFSession *session
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[FMFSessionProxy abPreferencesDidChange]
  -[FMFSessionProxy didUpdateFollowing:]
  -[FMFSessionProxy didUpdateFavorites:]
  -[FMFSessionProxy modelDidLoad]
  -[FMFSessionProxy didUpdatePreferences:]
  -[FMFSessionProxy didAddFollowerHandle:]
  -[FMFSessionProxy networkReachabilityUpdated:]
  -[FMFSessionProxy didUpdateHideFromFollowersStatus:]
  -[FMFSessionProxy didStartFollowingHandle:]
  -[FMFSessionProxy didReceiveServerError:]
  -[FMFSessionProxy sendMappingPacket:toHandle:]
  -[FMFSessionProxy didUpdateFences:]
  -[FMFSessionProxy didUpdateActiveDeviceList:]
  -[FMFSessionProxy didUpdatePendingOffersForHandles:]
  -[FMFSessionProxy didUpdateFollowers:]
  -[FMFSessionProxy didChangeActiveLocationSharingDevice:]
  -[FMFSessionProxy abDidChange]
  -[FMFSessionProxy didReceiveFriendshipRequest:]
  -[FMFSessionProxy didUpdateLocations:]
  -[FMFSessionProxy session]
  -[FMFSessionProxy setSession:]
  -[FMFSessionProxy setLocations:]
  -[FMFSessionProxy didRemoveFollowerHandle:]
  -[FMFSessionProxy failedToGetLocationForHandle:error:]
  -[FMFSessionProxy .cxx_destruct]
  -[FMFSessionProxy didStopFollowingHandle:]
  -[FMFSessionProxy initWithFMFSession:]


FMFSession : NSObject <FMFXPCInternalClientProtocol>
 @property  NSMutableSet *internalHandles
 @property  NSXPCConnection *connection
 @property  NSSet *cachedGetHandlesSharingLocationsWithMe
 @property  NSSet *cachedGetHandlesFollowingMyLocation
 @property  NSMutableDictionary *cachedLocationForHandleByHandle
 @property  NSMutableDictionary *cachedOfferExpirationForHandleByHandle
 @property  NSMutableDictionary *cachedCanShareLocationWithHandleByHandle
 @property  NSObject<OS_dispatch_queue> *connectionQueue
 @property  NSObject<OS_dispatch_queue> *handlesQueue
 @property  BOOL isModelInitialized
 @property  FMFuture *sessionInvalidationFuture
 @property  FMFuture *sessionInterruptionFuture
 @property  NSSet *handles
 @property  <FMFSessionDelegate> *delegate
 @property  NSOperationQueue *delegateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[FMFSession sharedInstance]
  +[FMFSession FMFAllowed]
  +[FMFSession isProvisionedForLocationSharing]
  +[FMFSession isAnyAccountManaged]
  +[FMFSession FMFRestricted]

  // instance methods
  -[FMFSession abPreferencesDidChange]
  -[FMFSession applicationWillEnterForeground]
  -[FMFSession didUpdateFollowing:]
  -[FMFSession didUpdateFavorites:]
  -[FMFSession modelDidLoad]
  -[FMFSession setSessionInvalidationFuture:]
  -[FMFSession setHandlesQueue:]
  -[FMFSession didUpdatePreferences:]
  -[FMFSession didAddFollowerHandle:]
  -[FMFSession networkReachabilityUpdated:]
  -[FMFSession didUpdateHideFromFollowersStatus:]
  -[FMFSession didStartFollowingHandle:]
  -[FMFSession didReceiveServerError:]
  -[FMFSession sendMappingPacket:toHandle:]
  -[FMFSession didUpdateFences:]
  -[FMFSession initWithDelegate:delegateQueue:]
  -[FMFSession didUpdateActiveDeviceList:]
  -[FMFSession connectionQueue]
  -[FMFSession sessionInvalidationFuture]
  -[FMFSession didUpdatePendingOffersForHandles:]
  -[FMFSession didUpdateFollowers:]
  -[FMFSession didChangeActiveLocationSharingDevice:]
  -[FMFSession abDidChange]
  -[FMFSession didReceiveFriendshipRequest:]
  -[FMFSession didUpdateLocations:]
  -[FMFSession applicationDidEnterBackground]
  -[FMFSession forceRefreshWithCompletion:]
  -[FMFSession setAllowFriendRequestsEnabled:completion:]
  -[FMFSession setConnectionQueue:]
  -[FMFSession restoreClientConnection]
  -[FMFSession sendIDSPacket:toHandle:]
  -[FMFSession refreshLocationForHandle:callerId:priority:completion:]
  -[FMFSession isIn5XXGracePeriodWithCompletion:]
  -[FMFSession setIsModelInitialized:]
  -[FMFSession cachedLocationForHandle:]
  -[FMFSession receivedMappingPacket:completion:]
  -[FMFSession handleIncomingAirDropURL:completion:]
  -[FMFSession contactForPayload:completion:]
  -[FMFSession setDelegate:]
  -[FMFSession removeFavorite:completion:]
  -[FMFSession sessionHandleReport:]
  -[FMFSession sendIDSMessage:toIdentifier:completion:]
  -[FMFSession cachedGetHandlesFollowingMyLocation]
  -[FMFSession _isNoMappingPacketReturnedError:]
  -[FMFSession dumpStateWithCompletion:]
  -[FMFSession decryptPayload:withToken:completion:]
  -[FMFSession sendFriendshipOfferToHandles:groupId:callerId:endDate:completion:]
  -[FMFSession delegate]
  -[FMFSession setDelegateQueue:]
  -[FMFSession addHandles:]
  -[FMFSession favoritesForMaxCount:completion:]
  -[FMFSession addFence:completion:]
  -[FMFSession setLocations:]
  -[FMFSession isAllowFriendRequestsEnabled:]
  -[FMFSession _registerForApplicationLifecycleEvents]
  -[FMFSession getDataForPerformanceRequest:]
  -[FMFSession getHandlesSharingLocationsWithMe]
  -[FMFSession getHandlesWithPendingOffers:]
  -[FMFSession __connection]
  -[FMFSession dealloc]
  -[FMFSession didRemoveFollowerHandle:]
  -[FMFSession getFavoritesSharingLocationWithMe]
  -[FMFSession failedToGetLocationForHandle:error:]
  -[FMFSession canGetLocationForHandle:groupId:callerId:completion:]
  -[FMFSession forceRefresh]
  -[FMFSession getFavoritesWithCompletion:]
  -[FMFSession canShareLocationWithHandle:groupId:callerId:]
  -[FMFSession locatingInProgressChanged:]
  -[FMFSession hasModelInitialized]
  -[FMFSession locationForHandle:completion:]
  -[FMFSession getAllDevices]
  -[FMFSession .cxx_destruct]
  -[FMFSession getFences:]
  -[FMFSession setCachedLocationForHandleByHandle:]
  -[FMFSession reloadDataIfNotLoaded]
  -[FMFSession delegateQueue]
  -[FMFSession connection]
  -[FMFSession _checkAndDisplayMeDeviceSwitchAlert]
  -[FMFSession stopSharingMyLocationWithHandle:groupId:callerId:completion:]
  -[FMFSession getOfferExpirationForHandle:groupId:callerId:]
  -[FMFSession handles]
  -[FMFSession setDebugContext:]
  -[FMFSession _sendFriendshipOfferToHandles:groupId:callerId:endDate:completion:]
  -[FMFSession shouldHandleErrorInFWK:]
  -[FMFSession isMyLocationEnabled]
  -[FMFSession triggerWithUUID:forFenceWithID:withStatus:forDate:triggerLocation:completion:]
  -[FMFSession verifyRestrictionsAndShowDialogIfRequired]
  -[FMFSession initWithDelegate:]
  -[FMFSession setCachedCanShareLocationWithHandleByHandle:]
  -[FMFSession showShareMyLocationiCloudSettingsOffAlert]
  -[FMFSession getHandlesWithPendingOffers]
  -[FMFSession showMeDeviceAlert]
  -[FMFSession setCachedGetHandlesFollowingMyLocation:]
  -[FMFSession extendFriendshipOfferToHandle:groupId:callerId:endDate:completion:]
  -[FMFSession cachedGetHandlesSharingLocationsWithMe]
  -[FMFSession serverProxy]
  -[FMFSession getHandlesSharingLocationsWithMe:]
  -[FMFSession stopSharingMyLocationWithHandles:groupId:callerId:completion:]
  -[FMFSession sendNotNowToHandle:callerId:completion:]
  -[FMFSession getActiveLocationSharingDevice:]
  -[FMFSession getHandlesFollowingMyLocationWithGroupId:completion:]
  -[FMFSession _daemonDidLaunch]
  -[FMFSession isMyLocationEnabled:]
  -[FMFSession internalHandles]
  -[FMFSession getOfferExpirationForHandle:groupId:callerId:completion:]
  -[FMFSession removeHandles:]
  -[FMFSession setActiveDevice:completion:]
  -[FMFSession addFavorite:completion:]
  -[FMFSession sessionInterruptionFuture]
  -[FMFSession sendFriendshipInviteToHandle:groupId:callerId:endDate:completion:]
  -[FMFSession addInvalidationHander:]
  -[FMFSession setInternalHandles:]
  -[FMFSession deleteFence:completion:]
  -[FMFSession setCachedOfferExpirationForHandleByHandle:]
  -[FMFSession dispatchOnDelegateQueue:]
  -[FMFSession getThisDeviceAndCompanion:]
  -[FMFSession _sendAutoSwitchMeDevice]
  -[FMFSession crashDaemon]
  -[FMFSession canOfferToHandles:completion:]
  -[FMFSession is5XXError:]
  -[FMFSession invalidate]
  -[FMFSession iCloudAccountNameWithCompletion:]
  -[FMFSession setCachedGetHandlesSharingLocationsWithMe:]
  -[FMFSession removeDevice:completion:]
  -[FMFSession cachedOfferExpirationForHandleByHandle]
  -[FMFSession isModelInitialized]
  -[FMFSession setHideMyLocationEnabled:completion:]
  -[FMFSession getHandlesSharingLocationsWithMeWithGroupId:completion:]
  -[FMFSession canShareLocationWithHandle:groupId:callerId:completion:]
  -[FMFSession showShareMyLocationRestrictedAlert]
  -[FMFSession getAllDevices:]
  -[FMFSession didStopFollowingHandle:]
  -[FMFSession setHandles:]
  -[FMFSession getPendingFriendshipRequestsWithCompletion:]
  -[FMFSession muteFencesForHandle:untilDate:completion:]
  -[FMFSession encryptPayload:completion:]
  -[FMFSession exit5XXGracePeriod]
  -[FMFSession nearbyLocationsWithCompletion:]
  -[FMFSession getAllLocations:]
  -[FMFSession getHandlesFollowingMyLocation:]
  -[FMFSession getRecordIdForHandle:completion:]
  -[FMFSession fencesForHandles:completion:]
  -[FMFSession refreshLocationForHandles:callerId:priority:completion:]
  -[FMFSession mappingPacketSendFailed:toHandle:withError:]
  -[FMFSession triggerWithUUID:forFenceWithID:withStatus:forDate:completion:]
  -[FMFSession setSessionInterruptionFuture:]
  -[FMFSession handleAndLocationForPayload:completion:]
  -[FMFSession getHandlesFollowingMyLocation]
  -[FMFSession maxLocatingInterval]
  -[FMFSession includeDeviceInAutomations:]
  -[FMFSession getActiveLocationSharingDevice]
  -[FMFSession canGetLocationForHandle:groupId:callerId:]
  -[FMFSession declineFriendshipRequest:completion:]
  -[FMFSession getAccountEmailAddress:]
  -[FMFSession addInterruptionHander:]
  -[FMFSession cachedLocationForHandleByHandle]
  -[FMFSession dataForPayload:completion:]
  -[FMFSession sendFriendshipOfferToHandle:groupId:callerId:endDate:completion:]
  -[FMFSession setExpiredInitTimestamp]
  -[FMFSession init]
  -[FMFSession approveFriendshipRequest:completion:]
  -[FMFSession getPendingMappingPacketsForHandle:groupId:completion:]
  -[FMFSession _registerForFMFDLaunchedNotification]
  -[FMFSession cachedCanShareLocationWithHandleByHandle]
  -[FMFSession handlesQueue]
  -[FMFSession setConnection:]
  -[FMFSession getPrettyNameForHandle:completion:]


FMFFence : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *displayLocationName
 @property  NSDate *timestamp
 @property  NSArray *followerIds
 @property  NSString *identifier
 @property  NSString *friendIdentifier
 @property  NSString *createdByIdentifier
 @property  NSString *pendingIdentifier
 @property  NSString *label
 @property  CLLocation *location
 @property  FMFPlacemark *placemark
 @property  NSArray *recipients
 @property  NSString *trigger
 @property  NSString *type
 @property  unsigned long locationType
 @property  BOOL active
 @property  BOOL recurring
 @property  BOOL fromMe
 @property  FMFSchedule *schedule
 @property  NSDate *muteEndDate
 @property  NSString *ckRecordName
 @property  NSString *ckRecordZoneOwnerName
 @property  NSString *acceptanceStatus
 @property  BOOL regionAllowed
 @property  BOOL onMe
 @property  BOOL supported
 @property  BOOL useCloudKitStore
 @property  BOOL useIDSTrigger
 @property  BOOL isMuted
 @property  NSDate *inviteDate

  // class methods
  +[FMFFence supportsSecureCoding]
  +[FMFFence genericFriendName]
  +[FMFFence endDateForMuteTimespan:]
  +[FMFFence isAllowedAtLocation:]

  // instance methods
  -[FMFFence setLocationType:]
  -[FMFFence recipients]
  -[FMFFence locationType]
  -[FMFFence schedule]
  -[FMFFence identifier]
  -[FMFFence setTimestamp:]
  -[FMFFence encodeWithCoder:]
  -[FMFFence type]
  -[FMFFence initWithDictionary:]
  -[FMFFence setLabel:]
  -[FMFFence isActive]
  -[FMFFence trigger]
  -[FMFFence isMuted]
  -[FMFFence .cxx_destruct]
  -[FMFFence setTrigger:]
  -[FMFFence setSchedule:]
  -[FMFFence setLocation:]
  -[FMFFence setType:]
  -[FMFFence setActive:]
  -[FMFFence setIdentifier:]
  -[FMFFence isSupported]
  -[FMFFence copyWithZone:]
  -[FMFFence label]
  -[FMFFence timestamp]
  -[FMFFence location]
  -[FMFFence setRecipients:]
  -[FMFFence isEqual:]
  -[FMFFence initWithCoder:]
  -[FMFFence setCkRecordName:]
  -[FMFFence ckRecordName]
  -[FMFFence acceptanceStatus]
  -[FMFFence setAcceptanceStatus:]
  -[FMFFence placemark]
  -[FMFFence isFromMe]
  -[FMFFence setFromMe:]
  -[FMFFence setPlacemark:]
  -[FMFFence inviteDate]
  -[FMFFence isRecurring]
  -[FMFFence pendingIdentifier]
  -[FMFFence displayLocationName]
  -[FMFFence localizedNotificationStringForFollower:locationName:]
  -[FMFFence localizedRequestNotificationStringForFollower:locationName:]
  -[FMFFence localizedWillBeNotifiedStringForFollower:locationName:]
  -[FMFFence localizedSubtitleStringWithLocationName:]
  -[FMFFence initWithRecipient:location:placemark:label:trigger:type:locationType:recurring:]
  -[FMFFence isOnMe]
  -[FMFFence shouldUseIDSTrigger]
  -[FMFFence shouldUseCloudKitStore]
  -[FMFFence isRegionAllowed]
  -[FMFFence updateFenceLocation:placemark:label:trigger:type:locationType:]
  -[FMFFence updateFenceMuteEndDate:]
  -[FMFFence locationForDictionary:]
  -[FMFFence handlesForArray:]
  -[FMFFence followerIds]
  -[FMFFence setFollowerIds:]
  -[FMFFence setRecurring:]
  -[FMFFence muteEndDate]
  -[FMFFence setMuteEndDate:]
  -[FMFFence ckRecordZoneOwnerName]
  -[FMFFence setCkRecordZoneOwnerName:]
  -[FMFFence friendIdentifier]
  -[FMFFence setFriendIdentifier:]
  -[FMFFence createdByIdentifier]
  -[FMFFence setCreatedByIdentifier:]
  -[FMFFence setPendingIdentifier:]


FMFNotNowRequest : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *requestId
 @property  FMFHandle *fromHandle
 @property  NSSet *toHandles

  // class methods
  +[FMFNotNowRequest supportsSecureCoding]
  +[FMFNotNowRequest notNowRequestToHandles:fromHandle:]

  // instance methods
  -[FMFNotNowRequest requestId]
  -[FMFNotNowRequest encodeWithCoder:]
  -[FMFNotNowRequest .cxx_destruct]
  -[FMFNotNowRequest copyWithZone:]
  -[FMFNotNowRequest initWithCoder:]
  -[FMFNotNowRequest fromHandle]
  -[FMFNotNowRequest toHandles]
  -[FMFNotNowRequest setFromHandle:]
  -[FMFNotNowRequest setToHandles:]
  -[FMFNotNowRequest setRequestId:]
  -[FMFNotNowRequest initWithFromHandle:toHandle:requestId:]


FMFFriendshipRequest : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *requestId
 @property  long long requestType
 @property  FMFHandle *fromHandle
 @property  NSSet *toHandles
 @property  NSDate *endDate
 @property  NSString *groupId

  // class methods
  +[FMFFriendshipRequest supportsSecureCoding]
  +[FMFFriendshipRequest friendshipRequestToHandles:fromHandle:withType:groupId:withEndDate:]

  // instance methods
  -[FMFFriendshipRequest requestId]
  -[FMFFriendshipRequest setGroupId:]
  -[FMFFriendshipRequest groupId]
  -[FMFFriendshipRequest endDate]
  -[FMFFriendshipRequest encodeWithCoder:]
  -[FMFFriendshipRequest requestType]
  -[FMFFriendshipRequest .cxx_destruct]
  -[FMFFriendshipRequest setRequestType:]
  -[FMFFriendshipRequest setEndDate:]
  -[FMFFriendshipRequest copyWithZone:]
  -[FMFFriendshipRequest initWithCoder:]
  -[FMFFriendshipRequest fromHandle]
  -[FMFFriendshipRequest toHandles]
  -[FMFFriendshipRequest setFromHandle:]
  -[FMFFriendshipRequest setToHandles:]
  -[FMFFriendshipRequest setRequestId:]
  -[FMFFriendshipRequest initWithFromHandle:toHandle:ofType:groupId:endDate:requestId:]


FMFScheduler : NSObject
 @property  FMXPCTimer *timer
 @property  <FMFSchedulerDelegate> *delegate
 @property  NSArray *schedules
 @property  NSArray *currentSchedules

  // class methods
  +[FMFScheduler _nextStartOrEndDateFrom:forSchedules:]

  // instance methods
  -[FMFScheduler _updateScheduleTimer]
  -[FMFScheduler currentSchedules]
  -[FMFScheduler delegate]
  -[FMFScheduler .cxx_destruct]
  -[FMFScheduler setTimer:]
  -[FMFScheduler timer]
  -[FMFScheduler initWithDelegate:]
  -[FMFScheduler _significantTimeChange:]
  -[FMFScheduler schedules]
  -[FMFScheduler scheduleTimerFired]
  -[FMFScheduler setSchedules:]
  -[FMFScheduler _registerForSignificantTimeChangeNotifications]


FMFSynchronizer : NSObject
 @property  BOOL timeoutOccurred
 @property  double timeout
 @property  NSString *info
 @property  NSObject<OS_dispatch_semaphore> *sem

  // instance methods
  -[FMFSynchronizer timeoutOccurred]
  -[FMFSynchronizer setSem:]
  -[FMFSynchronizer setTimeout:]
  -[FMFSynchronizer .cxx_destruct]
  -[FMFSynchronizer timeout]
  -[FMFSynchronizer setInfo:]
  -[FMFSynchronizer initWithDescription:andTimeout:]
  -[FMFSynchronizer loggingID]
  -[FMFSynchronizer info]
  -[FMFSynchronizer setTimeoutOccurred:]
  -[FMFSynchronizer sem]
  -[FMFSynchronizer wait]
  -[FMFSynchronizer signal]


FMFContactUtility : NSObject
 @property  CNContactStore *contactStore
 @property  CNContactFormatter *contactFormatter

  // class methods
  +[FMFContactUtility sharedInstance]

  // instance methods
  -[FMFContactUtility setContactStore:]
  -[FMFContactUtility .cxx_destruct]
  -[FMFContactUtility contactStore]
  -[FMFContactUtility contactFormatter]
  -[FMFContactUtility setContactFormatter:]
  -[FMFContactUtility contactKeys]
  -[FMFContactUtility shortDisplayNameForContact:andHandle:]
  -[FMFContactUtility displayNameForContact:andHandle:]
  -[FMFContactUtility getContactForHandle:]
  -[FMFContactUtility getContactForHandle:keysToFetch:]
  -[FMFContactUtility findOptimalContactInContacts:]


01 00 0800 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0600 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0600 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 0a00 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMFuture 
01 00 0a00 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMPreferencesUtil 
01 00 0200 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOLatLng 
01 00 0200 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOMapRegion 
01 00 0100 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
