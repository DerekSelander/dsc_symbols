|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleATMO
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleCAQI
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryATMO
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryCAQI
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryDAQI
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryEPA
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryHJ6332012
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryIMECA
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryNAQI
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryUBA
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleDAQI
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleEPA
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleHJ6332012
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleIMECA
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleNAQI
|| __DATA.__objc_data _OBJC_CLASS_$_WFAQIScaleUBA
|| __DATA.__objc_data _OBJC_CLASS_$_WFChangeForecastRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WFDailyForecastRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WFFavoriteLocationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WFFavoriteLocationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WFInternalAppSettings
|| __DATA.__objc_data _OBJC_CLASS_$_WFPollenConditions
|| __DATA.__objc_data _OBJC_CLASS_$_WFReachabilityConfigurationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WFReachabilityConfigurationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_WFResourceManager
|| __DATA.__objc_data _OBJC_CLASS_$_WFServiceReachabilityObserver
|| __DATA.__objc_data _OBJC_CLASS_$_WFTemperatureUnitChangeRequest
|| __DATA.__objc_data _OBJC_CLASS_$_WFTypes
|| __DATA.__objc_data _OBJC_CLASS_$_WFURLComponents
|| __DATA.__objc_data _OBJC_CLASS_$_WFWeatherChannelParserV3
|| __DATA.__objc_data _OBJC_CLASS_$_WFWeatherChannelRequestFormatterV3
|| __DATA.__objc_data _OBJC_CLASS_$_WFWeatherHistorical30DayParserV3
|| __DATA.__objc_data _OBJC_CLASS_$_WFWeatherHistorical30DaysRequestFormatterV3
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleATMO
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleCAQI
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryATMO
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryCAQI
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryDAQI
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryEPA
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryHJ6332012
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryIMECA
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryNAQI
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryUBA
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleDAQI
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleEPA
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleHJ6332012
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleIMECA
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleNAQI
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAQIScaleUBA
|| __DATA.__objc_data _OBJC_METACLASS_$_WFChangeForecastRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WFDailyForecastRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WFFavoriteLocationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WFFavoriteLocationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WFInternalAppSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_WFPollenConditions
|| __DATA.__objc_data _OBJC_METACLASS_$_WFReachabilityConfigurationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WFReachabilityConfigurationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_WFResourceManager
|| __DATA.__objc_data _OBJC_METACLASS_$_WFServiceReachabilityObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitChangeRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_WFTypes
|| __DATA.__objc_data _OBJC_METACLASS_$_WFURLComponents
|| __DATA.__objc_data _OBJC_METACLASS_$_WFWeatherChannelParserV3
|| __DATA.__objc_data _OBJC_METACLASS_$_WFWeatherChannelRequestFormatterV3
|| __DATA.__objc_data _OBJC_METACLASS_$_WFWeatherHistorical30DayParserV3
|| __DATA.__objc_data _OBJC_METACLASS_$_WFWeatherHistorical30DaysRequestFormatterV3
|| __DATA_CONST.__const _CloudCityLatitudeKey
|| __DATA_CONST.__const _CloudCityLongitudeKey
|| __DATA_CONST.__const _CloudCityNameKey
|| __DATA_CONST.__const _CloudCitySearchSubtitleKey
|| __DATA_CONST.__const _CloudCitySearchTitleKey
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_10D
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_10D_SINGLE_ENDPOINT
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_DAYPART_DAY_OR_NIGHT
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_FORECAST
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_GRASS_POLLEN_INDEX
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_RAGWEED_POLLEN_INDEX
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_TREE_POLLEN_INDEX
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_VALID_TIME_UTC
|| __DATA_CONST.__const _TWC_V2_PARAMETER_DEFAULT_VALUE_API_KEY
|| __DATA_CONST.__const _TWC_V2_PARAMETER_DEFAULT_VALUE_FORMAT
|| __DATA_CONST.__const _TWC_V2_PARAMETER_DEFAULT_VALUE_UNITS
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_API_KEY
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_FORMAT
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_GEOCODE
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_LANGUAGE
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_PRODUCTS
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_START_DATE
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_TRACKER_ID
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_UNITS
|| __DATA_CONST.__const _TWC_V2_PARAMETER_VALUE_HISTORICAL_AND_ALMANAC_API_KEY
|| __DATA_CONST.__const _TWC_V3_ALMANAC_1D
|| __DATA_CONST.__const _TWC_V3_CC
|| __DATA_CONST.__const _TWC_V3_CC_CLOUD_COVER_PHRASE
|| __DATA_CONST.__const _TWC_V3_CC_OBSERVATION_QUALIFIER_CODE
|| __DATA_CONST.__const _TWC_V3_CC_OBSERVATION_QUALIFIER_SEVERITY
|| __DATA_CONST.__const _TWC_V3_CLOUD_COVER
|| __DATA_CONST.__const _TWC_V3_CONDITIONS_DESCRIPTION_LONG
|| __DATA_CONST.__const _TWC_V3_CONDITIONS_DESCRIPTION_MEDIUM
|| __DATA_CONST.__const _TWC_V3_CONDITIONS_DESCRIPTION_SHORT
|| __DATA_CONST.__const _TWC_V3_DAY_OF_WEEK
|| __DATA_CONST.__const _TWC_V3_DAY_OR_NIGHT
|| __DATA_CONST.__const _TWC_V3_DF_10D
|| __DATA_CONST.__const _TWC_V3_DF_15D
|| __DATA_CONST.__const _TWC_V3_DF_3D
|| __DATA_CONST.__const _TWC_V3_DF_5D
|| __DATA_CONST.__const _TWC_V3_DF_7D
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_DAY_OR_NIGHT
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_NAME
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_QUALIFIER_PHRASE
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_SNOW_RANGE
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_THUNDER_CATEGORY
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_THUNDER_INDEX
|| __DATA_CONST.__const _TWC_V3_DF_MOONRISE_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_DF_MOONRISE_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_DF_MOONSET_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_DF_MOONSET_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_DF_MOON_PHASE
|| __DATA_CONST.__const _TWC_V3_DF_MOON_PHASE_CODE
|| __DATA_CONST.__const _TWC_V3_DF_MOON_PHASE_DAY
|| __DATA_CONST.__const _TWC_V3_DF_TEMPERATURE_MAX
|| __DATA_CONST.__const _TWC_V3_DF_TEMPERATURE_MIN
|| __DATA_CONST.__const _TWC_V3_ERRORS
|| __DATA_CONST.__const _TWC_V3_ERROR_CODE
|| __DATA_CONST.__const _TWC_V3_ERROR_MESSAGE
|| __DATA_CONST.__const _TWC_V3_EXPIRATION_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_GAQ
|| __DATA_CONST.__const _TWC_V3_GAQ_CATEGORY
|| __DATA_CONST.__const _TWC_V3_GAQ_CATEGORY_INDEX
|| __DATA_CONST.__const _TWC_V3_GAQ_CATEGORY_INDEX_COLOR
|| __DATA_CONST.__const _TWC_V3_GAQ_DISCLAIMER
|| __DATA_CONST.__const _TWC_V3_GAQ_EXPIRE_TIME_GMT
|| __DATA_CONST.__const _TWC_V3_GAQ_INDEX
|| __DATA_CONST.__const _TWC_V3_GAQ_LAT
|| __DATA_CONST.__const _TWC_V3_GAQ_LONG
|| __DATA_CONST.__const _TWC_V3_GAQ_MESSAGES
|| __DATA_CONST.__const _TWC_V3_GAQ_MESSAGE_TEXT
|| __DATA_CONST.__const _TWC_V3_GAQ_MESSAGE_TITLE
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANTS
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_AMOUNT
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_CATEGORY
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_CATEGORY_INDEX
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_INDEX
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_NAME
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_PHRASE
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_UNIT
|| __DATA_CONST.__const _TWC_V3_GAQ_PRIMARY_POLLUTANT
|| __DATA_CONST.__const _TWC_V3_GAQ_ROOT
|| __DATA_CONST.__const _TWC_V3_GAQ_SOURCE
|| __DATA_CONST.__const _TWC_V3_HF_10D
|| __DATA_CONST.__const _TWC_V3_HF_12H
|| __DATA_CONST.__const _TWC_V3_HF_15D
|| __DATA_CONST.__const _TWC_V3_HF_1D
|| __DATA_CONST.__const _TWC_V3_HF_2D
|| __DATA_CONST.__const _TWC_V3_HF_3D
|| __DATA_CONST.__const _TWC_V3_HF_6H
|| __DATA_CONST.__const _TWC_V3_HF_SEVERITY
|| __DATA_CONST.__const _TWC_V3_HO_DAILY_30D
|| __DATA_CONST.__const _TWC_V3_HO_HOURLY_1D
|| __DATA_CONST.__const _TWC_V3_ICON_CODE
|| __DATA_CONST.__const _TWC_V3_ICON_CODE_EXTEND
|| __DATA_CONST.__const _TWC_V3_NARRATIVE
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_CLOUD_CEILING
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRECIPITATION_ACCUMULATION_24H
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRESSURE_ALTIMETER
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRESSURE_CHANGE
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRESSURE_TENDENCY_CODE
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRESSURE_TENDENCY_TREND
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_SNOWFALL_ACCUMULATION_24H
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_TEMPERATURE_CHANGE_24H
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_TEMPERATURE_MAX_24H
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_TEMPERATURE_MAX_SINCE_7AM
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_TEMPERATURE_MIN_24H
|| __DATA_CONST.__const _TWC_V3_PARAMETER_DEFAULT_API_KEY
|| __DATA_CONST.__const _TWC_V3_PARAMETER_DEFAULT_VALUE_FORMAT
|| __DATA_CONST.__const _TWC_V3_PARAMETER_DEFAULT_VALUE_LANGUAGE
|| __DATA_CONST.__const _TWC_V3_PARAMETER_DEFAULT_VALUE_UNITS
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_API_KEY
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_DAY
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_FORMAT
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_GEOCODE
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_LANGUAGE
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_MONTH
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_SCALE
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_UNITS
|| __DATA_CONST.__const _TWC_V3_PARAMETER_VALUE_HISTORICAL_AND_ALMANAC_API_KEY
|| __DATA_CONST.__const _TWC_V3_PRECIPITATION_ACCUMULATION
|| __DATA_CONST.__const _TWC_V3_PRECIPITATION_CHANCE
|| __DATA_CONST.__const _TWC_V3_PRECIPITATION_TYPE
|| __DATA_CONST.__const _TWC_V3_PRESSURE_MEAN_SEA_LEVEL
|| __DATA_CONST.__const _TWC_V3_RELATIVE_HUMIDITY
|| __DATA_CONST.__const _TWC_V3_SNOWFALL_ACCUMULATION
|| __DATA_CONST.__const _TWC_V3_SUNRISE_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_SUNRISE_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_SUNSET_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_SUNSET_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE_DEW_POINT
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE_FEELS_LIKE
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE_HEAT_INDEX
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE_WIND_CHILL
|| __DATA_CONST.__const _TWC_V3_UV_DESCRIPTION
|| __DATA_CONST.__const _TWC_V3_UV_INDEX
|| __DATA_CONST.__const _TWC_V3_VALID_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_VALID_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_VISIBILITY
|| __DATA_CONST.__const _TWC_V3_WEB_LINKS
|| __DATA_CONST.__const _TWC_V3_WEB_LINKS_WEB
|| __DATA_CONST.__const _TWC_V3_WIND_DIRECTION
|| __DATA_CONST.__const _TWC_V3_WIND_DIRECTION_CARDINAL
|| __DATA_CONST.__const _TWC_V3_WIND_GUST
|| __DATA_CONST.__const _TWC_V3_WIND_SPEED
|| __DATA_CONST.__const _WDS_V1_ADDITIONAL_PROPERTIES
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_CATEGORY
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_CATEGORY_INDEX
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_CATEGORY_INDEX_COLOR
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_INDEX
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_IS_SIGNIFICANT
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_LEARN_MORE_URL
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_SCALE
|| __DATA_CONST.__const _WDS_V1_AMOUNT
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_AQI
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_ASCENDING
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_CATEGORIES
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_CATEGORY_COLOR
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_CATEGORY_GLYPH
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_CATEGORY_NAME
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_CATEGORY_NUMBER
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_CATEGORY_RANGE
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_CATEGORY_RECOMMENDATION
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_DISPLAY_LABEL
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_DISPLAY_NAME
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_GRADIENT
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_GRADIENT_COLOR
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_GRADIENT_LOCATION
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_GRADIENT_STOPS
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_NUMERICAL
|| __DATA_CONST.__const _WDS_V1_AQI_SCALE_RESPONSE_RANGE
|| __DATA_CONST.__const _WDS_V1_CATEGORY
|| __DATA_CONST.__const _WDS_V1_CATEGORY_INDEX
|| __DATA_CONST.__const _WDS_V1_CHANGE_FORECAST
|| __DATA_CONST.__const _WDS_V1_CIC_DESCRIPTION_DIFFERENTTIMEZONE
|| __DATA_CONST.__const _WDS_V1_CIC_DESCRIPTION_SAMETIMEZONE
|| __DATA_CONST.__const _WDS_V1_CLOUD_CEILING
|| __DATA_CONST.__const _WDS_V1_CLOUD_COVER
|| __DATA_CONST.__const _WDS_V1_CLOUD_COVER_PHRASE
|| __DATA_CONST.__const _WDS_V1_CURRENT_OBSERVATIONS
|| __DATA_CONST.__const _WDS_V1_DAILY_ALMANAC
|| __DATA_CONST.__const _WDS_V1_DAILY_FORECAST
|| __DATA_CONST.__const _WDS_V1_DAILY_HISTORY
|| __DATA_CONST.__const _WDS_V1_DATA_SOURCE
|| __DATA_CONST.__const _WDS_V1_DAYS
|| __DATA_CONST.__const _WDS_V1_DAY_OF_WEEK
|| __DATA_CONST.__const _WDS_V1_DAY_OR_NIGHT
|| __DATA_CONST.__const _WDS_V1_DAY_PARTS
|| __DATA_CONST.__const _WDS_V1_DESCRIPTION
|| __DATA_CONST.__const _WDS_V1_DISCLAIMER
|| __DATA_CONST.__const _WDS_V1_EXPIRATION_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_EXPIRE_TIME
|| __DATA_CONST.__const _WDS_V1_FORECASTED_CHANGES
|| __DATA_CONST.__const _WDS_V1_GRASS_POLLEN_INDEX
|| __DATA_CONST.__const _WDS_V1_HOURLY_FORECAST
|| __DATA_CONST.__const _WDS_V1_HOURLY_HISTORY
|| __DATA_CONST.__const _WDS_V1_HOURS
|| __DATA_CONST.__const _WDS_V1_ICON_CODE
|| __DATA_CONST.__const _WDS_V1_ICON_CODE_DAY
|| __DATA_CONST.__const _WDS_V1_ICON_CODE_EXTEND
|| __DATA_CONST.__const _WDS_V1_ICON_CODE_NIGHT
|| __DATA_CONST.__const _WDS_V1_INDEX
|| __DATA_CONST.__const _WDS_V1_IOS_NOW
|| __DATA_CONST.__const _WDS_V1_LANGUAGE
|| __DATA_CONST.__const _WDS_V1_LATITUDE
|| __DATA_CONST.__const _WDS_V1_LONGITUDE
|| __DATA_CONST.__const _WDS_V1_MAX_TEMPERATURE_CHANGE
|| __DATA_CONST.__const _WDS_V1_METADATA
|| __DATA_CONST.__const _WDS_V1_MIN_TEMPERATURE_CHANGE
|| __DATA_CONST.__const _WDS_V1_MONTHLY_ALMANAC
|| __DATA_CONST.__const _WDS_V1_MONTHLY_HISTORY
|| __DATA_CONST.__const _WDS_V1_MONTHS
|| __DATA_CONST.__const _WDS_V1_MOONRISE_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_MOONSET_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_MOON_PHASE
|| __DATA_CONST.__const _WDS_V1_MOON_PHASE_CODE
|| __DATA_CONST.__const _WDS_V1_MOON_PHASE_DAY
|| __DATA_CONST.__const _WDS_V1_NAME
|| __DATA_CONST.__const _WDS_V1_NARRATIVE
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIP
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_CONDITION
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_CONDITION_LONGTEMPLATE
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_CONDITION_PARAMETERS
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_CONDITION_SHORTTEMPLATE
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_CONDITION_TOKEN
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_CONDITION_VALIDUNTIL
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_METADATA
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_METADATA_EXPIRE_TIME
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_METADATA_READ_TIME
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_MINUTES
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_MINUTES_PERCEIVEDINTENSITY
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_MINUTES_PRECIPCHANCE
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_MINUTES_PRECIPINTENSITY
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_MINUTES_STARTDATE
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_STARTTIME
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_SUMMARY
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_SUMMARY_CONDITION
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_SUMMARY_INTENSITY
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_SUMMARY_PROBABILITY
|| __DATA_CONST.__const _WDS_V1_NEXT_HOUR_PRECIPITATION_SUMMARY_VALIDUNTIL
|| __DATA_CONST.__const _WDS_V1_NOW_LINKS
|| __DATA_CONST.__const _WDS_V1_OBS_QUALIFIER_CODE
|| __DATA_CONST.__const _WDS_V1_OBS_QUALIFIER_SEVERITY
|| __DATA_CONST.__const _WDS_V1_PARAM_DAY_OF_MONTH
|| __DATA_CONST.__const _WDS_V1_PARAM_INCLUDE
|| __DATA_CONST.__const _WDS_V1_PARAM_MONTH
|| __DATA_CONST.__const _WDS_V1_PARAM_NUM_DAYS
|| __DATA_CONST.__const _WDS_V1_PARAM_NUM_MONTHS
|| __DATA_CONST.__const _WDS_V1_PARAM_SCALE
|| __DATA_CONST.__const _WDS_V1_PARAM_UNITS
|| __DATA_CONST.__const _WDS_V1_PARAM_YEAR
|| __DATA_CONST.__const _WDS_V1_PHRASE
|| __DATA_CONST.__const _WDS_V1_POLLEN
|| __DATA_CONST.__const _WDS_V1_POLLUTANTS
|| __DATA_CONST.__const _WDS_V1_PRECIPITATION_CHANGE
|| __DATA_CONST.__const _WDS_V1_PRECIP_1HOUR
|| __DATA_CONST.__const _WDS_V1_PRECIP_24HOUR
|| __DATA_CONST.__const _WDS_V1_PRECIP_6HOUR
|| __DATA_CONST.__const _WDS_V1_PRECIP_AVERAGE
|| __DATA_CONST.__const _WDS_V1_PRECIP_CHANCE
|| __DATA_CONST.__const _WDS_V1_PRECIP_TYPE
|| __DATA_CONST.__const _WDS_V1_PRESSURE_ALTIMETER
|| __DATA_CONST.__const _WDS_V1_PRESSURE_CHANGE
|| __DATA_CONST.__const _WDS_V1_PRESSURE_MEAN_SEA_LEVEL
|| __DATA_CONST.__const _WDS_V1_PRESSURE_TENDENCY_CODE
|| __DATA_CONST.__const _WDS_V1_PRESSURE_TENDENCY_TREND
|| __DATA_CONST.__const _WDS_V1_PRIMARY_POLUTANT
|| __DATA_CONST.__const _WDS_V1_PROVIDER_LOGO
|| __DATA_CONST.__const _WDS_V1_PROVIDER_NAME
|| __DATA_CONST.__const _WDS_V1_QPF
|| __DATA_CONST.__const _WDS_V1_QPF_SNOW
|| __DATA_CONST.__const _WDS_V1_QUALIFIER_PHRASE
|| __DATA_CONST.__const _WDS_V1_RAGWEED_POLLEN_INDEX
|| __DATA_CONST.__const _WDS_V1_READ_TIME
|| __DATA_CONST.__const _WDS_V1_RELATIVE_HUMIDITY
|| __DATA_CONST.__const _WDS_V1_REPORTED_TIME
|| __DATA_CONST.__const _WDS_V1_SCHEMA
|| __DATA_CONST.__const _WDS_V1_SEVERE_WEATHER
|| __DATA_CONST.__const _WDS_V1_SEVERE_WEATHER_EVENTS
|| __DATA_CONST.__const _WDS_V1_SEVERE_WEATHER_EVENT_AREA_NAME
|| __DATA_CONST.__const _WDS_V1_SEVERE_WEATHER_EVENT_DESCRIPTION
|| __DATA_CONST.__const _WDS_V1_SEVERE_WEATHER_EVENT_EXPIRE_TIME
|| __DATA_CONST.__const _WDS_V1_SEVERE_WEATHER_EVENT_IDENTIFIER
|| __DATA_CONST.__const _WDS_V1_SEVERE_WEATHER_EVENT_IS_IMPORTANT
|| __DATA_CONST.__const _WDS_V1_SEVERE_WEATHER_EVENT_SOURCE
|| __DATA_CONST.__const _WDS_V1_SEVERE_WEATHER_EVENT_URL
|| __DATA_CONST.__const _WDS_V1_SNOW_1HOUR
|| __DATA_CONST.__const _WDS_V1_SNOW_24HOUR
|| __DATA_CONST.__const _WDS_V1_SNOW_6HOUR
|| __DATA_CONST.__const _WDS_V1_SNOW_RANGE
|| __DATA_CONST.__const _WDS_V1_SOURCE
|| __DATA_CONST.__const _WDS_V1_SUNRISE_TIME_LOCAL
|| __DATA_CONST.__const _WDS_V1_SUNRISE_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_SUNSET_TIME_LOCAL
|| __DATA_CONST.__const _WDS_V1_SUNSET_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_AVERAGE_MAX
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_AVERAGE_MIN
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_CHANGE_24HOUR
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_DEW_POINT
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_FEELS_LIKE
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_HEAT_INDEX
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MAX
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MAX_24HOUR
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MAX_SINCE_7AM
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MIN
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MIN_24HOUR
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_RECORD_MAX
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_RECORD_MIN
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_WIND_CHILL
|| __DATA_CONST.__const _WDS_V1_THUNDER_CATEGORY
|| __DATA_CONST.__const _WDS_V1_THUNDER_INIDEX
|| __DATA_CONST.__const _WDS_V1_TREE_POLLEN_INDEX
|| __DATA_CONST.__const _WDS_V1_UNAVAILABLE
|| __DATA_CONST.__const _WDS_V1_UNIT
|| __DATA_CONST.__const _WDS_V1_UV_DESCRIPTION
|| __DATA_CONST.__const _WDS_V1_UV_INDEX
|| __DATA_CONST.__const _WDS_V1_VALID_TIME_LOCAL
|| __DATA_CONST.__const _WDS_V1_VALID_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_VALUE_DEFAULT_UNITS
|| __DATA_CONST.__const _WDS_V1_VERSION
|| __DATA_CONST.__const _WDS_V1_VISIBILITY
|| __DATA_CONST.__const _WDS_V1_WEATHER_CHANGE
|| __DATA_CONST.__const _WDS_V1_WEB
|| __DATA_CONST.__const _WDS_V1_WEB_ALLERGY
|| __DATA_CONST.__const _WDS_V1_WEB_FORECAST_DAILY_10DAY
|| __DATA_CONST.__const _WDS_V1_WEB_FORECAST_HOURLY
|| __DATA_CONST.__const _WDS_V1_WEB_FORECAST_MONTHLY
|| __DATA_CONST.__const _WDS_V1_WEB_RADAR
|| __DATA_CONST.__const _WDS_V1_WIND_DIRECTION
|| __DATA_CONST.__const _WDS_V1_WIND_DIRECTION_CARDINAL
|| __DATA_CONST.__const _WDS_V1_WIND_GUST
|| __DATA_CONST.__const _WDS_V1_WIND_PHRASE
|| __DATA_CONST.__const _WDS_V1_WIND_SPEED
|| __DATA_CONST.__const _WDS_V1_WX_PHRASE_LONG
|| __DATA_CONST.__const _WDS_V1_WX_PHRASE_MEDIUM
|| __DATA_CONST.__const _WDS_V1_WX_PHRASE_SHORT
|| __DATA_CONST.__const _WDS_V1_WX_SEVERITY
|| __DATA_CONST.__const _WFAPIVersionBucketHash
|| __DATA_CONST.__const _WFAPIVersionFallbackKey
|| __DATA_CONST.__const _WFAPIVersionKey
|| __DATA_CONST.__const _WFAPIVersionV1
|| __DATA_CONST.__const _WFAPIVersionV2
|| __DATA_CONST.__const _WFAPIVersionV3
|| __DATA_CONST.__const _WFAQIEnabled
|| __DATA_CONST.__const _WFAQIEnabledCountriesKey
|| __DATA_CONST.__const _WFAQIProviderAttributionPrimitives
|| __DATA_CONST.__const _WFAQIRemoteScales
|| __DATA_CONST.__const _WFAirQualityProviderAttributionErrorDomain
|| __DATA_CONST.__const _WFAirQualityProviderAttributionManagerErrorDomain
|| __DATA_CONST.__const _WFAirQualityRequestAttachRawAPIOptionsKey
|| __DATA_CONST.__const _WFAppAnalyticsEnvKey
|| __DATA_CONST.__const _WFAppSettingsRefreshRateKey
|| __DATA_CONST.__const _WFAttributionUnlocalizedDescriptionSourceString
|| __DATA_CONST.__const _WFAttributionUnlocalizedSourceString
|| __DATA_CONST.__const _WFCachedAppConfig
|| __DATA_CONST.__const _WFCachedAppConfigLastSavedDate
|| __DATA_CONST.__const _WFChangeInConditionsConfigKey
|| __DATA_CONST.__const _WFClearConfigCacheOnLaunch
|| __DATA_CONST.__const _WFExecutingReverseGeoNotification
|| __DATA_CONST.__const _WFFetchRemoteSettings
|| __DATA_CONST.__const _WFForecastRequestAttachRawAPIOptionsKey
|| __DATA_CONST.__const _WFLocationCodingCityKey
|| __DATA_CONST.__const _WFLocationCodingCountryAbbreviationKey
|| __DATA_CONST.__const _WFLocationCodingCountryKey
|| __DATA_CONST.__const _WFLocationCodingCountyKey
|| __DATA_CONST.__const _WFLocationCodingCreationDateKey
|| __DATA_CONST.__const _WFLocationCodingGeoLocationKey
|| __DATA_CONST.__const _WFLocationCodingLocationIDKey
|| __DATA_CONST.__const _WFLocationCodingStateAbbreviationKey
|| __DATA_CONST.__const _WFLocationCodingStateKey
|| __DATA_CONST.__const _WFLocationCodingTimeZoneKey
|| __DATA_CONST.__const _WFLocationDecimalPrecision
|| __DATA_CONST.__const _WFNetworkFailedAttempsLimitKey
|| __DATA_CONST.__const _WFNetworkSwitchExpirationTimeKey
|| __DATA_CONST.__const _WFNextHourPrecipitationConfigKey
|| __DATA_CONST.__const _WFRemoteConfigurationEnvKey
|| __DATA_CONST.__const _WFRemoteConfigurationEnvProduction
|| __DATA_CONST.__const _WFRemoteConfigurationEnvQA
|| __DATA_CONST.__const _WFRemoteConfigurationEnvStaging
|| __DATA_CONST.__const _WFSevereWeatherConfigKey
|| __DATA_CONST.__const _WFTWCAPI
|| __DATA_CONST.__const _WFTWCAPIVersionV2
|| __DATA_CONST.__const _WFTWCAPIVersionV3
|| __DATA_CONST.__const _WFTemperatureUnitsChangedDarwinNotification
|| __DATA_CONST.__const _WFURLComponentIsShowingHourly
|| __DATA_CONST.__const _WFURLComponentLatitude
|| __DATA_CONST.__const _WFURLComponentLocale
|| __DATA_CONST.__const _WFURLComponentLocationName
|| __DATA_CONST.__const _WFURLComponentLongitude
|| __DATA_CONST.__const _WFURLComponentPlatform
|| __DATA_CONST.__const _WFUnknownTemperatureString
|| __DATA_CONST.__const _WFUseInternalSettings
|| __DATA_CONST.__const _WFUseNonInternalBundleID
|| __DATA_CONST.__const _WFWDSAPI
|| __DATA_CONST.__const _WFWDSAPIEnvDev
|| __DATA_CONST.__const _WFWDSAPIEnvKey
|| __DATA_CONST.__const _WFWDSAPIEnvProd
|| __DATA_CONST.__const _WFWDSAPIEnvProdOrigin
|| __DATA_CONST.__const _WFWDSAPIEnvQA
|| __DATA_CONST.__const _WFWDSAPIEnvStaging
|| __DATA_CONST.__const _WFWDSAPIEnvTest
|| __DATA_CONST.__const _WFWDSAPIVersionV1
|| __DATA_CONST.__const _WFWeatherConditionComponent
|| __DATA_CONST.__const _WFWeatherDataProviderName
|| __DATA_CONST.__const _WFWeatherDewpointComponent
|| __DATA_CONST.__const _WFWeatherDewpointTemperatureComponent
|| __DATA_CONST.__const _WFWeatherEventConfigAppKey
|| __DATA_CONST.__const _WFWeatherEventConfigIosKey
|| __DATA_CONST.__const _WFWeatherEventConfigKey
|| __DATA_CONST.__const _WFWeatherEventConfigMacosKey
|| __DATA_CONST.__const _WFWeatherFeelsLikeTemperatureComponent
|| __DATA_CONST.__const _WFWeatherForecastDateComponent
|| __DATA_CONST.__const _WFWeatherForecastExpirationDateComponent
|| __DATA_CONST.__const _WFWeatherForecastExpirationTimeComponent
|| __DATA_CONST.__const _WFWeatherForecastTimeComponent
|| __DATA_CONST.__const _WFWeatherHighTemperatureComponent
|| __DATA_CONST.__const _WFWeatherHumidityComponent
|| __DATA_CONST.__const _WFWeatherIOSLinkComponent
|| __DATA_CONST.__const _WFWeatherLowTemperatureComponent
|| __DATA_CONST.__const _WFWeatherMobileLinkComponent
|| __DATA_CONST.__const _WFWeatherPrecipitationAmountComponent
|| __DATA_CONST.__const _WFWeatherPrecipitationChanceComponent
|| __DATA_CONST.__const _WFWeatherPrecipitationTypeComponent
|| __DATA_CONST.__const _WFWeatherPressureComponent
|| __DATA_CONST.__const _WFWeatherPressureTrendComponent
|| __DATA_CONST.__const _WFWeatherSeverityComponent
|| __DATA_CONST.__const _WFWeatherSunriseDateComponent
|| __DATA_CONST.__const _WFWeatherSunriseTimeComponent
|| __DATA_CONST.__const _WFWeatherSunsetDateComponent
|| __DATA_CONST.__const _WFWeatherSunsetTimeComponent
|| __DATA_CONST.__const _WFWeatherTemperatureComponent
|| __DATA_CONST.__const _WFWeatherUVIndexComponent
|| __DATA_CONST.__const _WFWeatherUserIdKey
|| __DATA_CONST.__const _WFWeatherVisibilityComponent
|| __DATA_CONST.__const _WFWeatherWebAllergyLinkComponent
|| __DATA_CONST.__const _WFWeatherWebForecastDailyLinkComponent
|| __DATA_CONST.__const _WFWeatherWebForecastHourlyLinkComponent
|| __DATA_CONST.__const _WFWeatherWebForecastMonthlyLinkComponent
|| __DATA_CONST.__const _WFWeatherWebLinkComponent
|| __DATA_CONST.__const _WFWeatherWebRadarLinkComponent
|| __DATA_CONST.__const _WFWeatherWindDirectionComponent
|| __DATA_CONST.__const _WFWeatherWindSpeedComponent
|| __DATA_CONST.__const _WFWidgetRefreshPolicyConfigKey
|| __DATA_CONST.__const ___WFWeatherLegacyConditionComponent
|| __DATA_CONST.__const ___WFWeatherSeriesIndexComponent
|| __DATA_CONST.__const _kWFErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAPIConfigurationFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScale
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCacheManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleGradient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleGradientStop
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateCommonForecast
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateCommonRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateCommonResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateForecastResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirPollutant
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirQualityConditions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirQualityProviderAttribution
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirQualityProviderAttributionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirQualityProviderStation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirQualityRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirQualityResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAttribution
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFChangeForecast
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFForecastDataParserUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFForecastResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFGeocodeRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFGeocodeResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFHourlyForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFNetworkBehaviorMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFNetworkEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFNetworkRetryManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFNextHourPrecipitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFNextHourPrecipitationCondition
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFNextHourPrecipitationDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFNextHourPrecipitationMinute
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFParsedForecastData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFRemoteAppSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFRequestFormattingRules
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFResponseParsingRules
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFSevereWeatherEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTaskIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperature
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureFormatter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureUnitObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureUnitProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureUnitRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureUnitResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFUserInfoManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherAlmanacParserV3
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherAlmanacRequestFormatterV3
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherChannelAPIConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherChannelRequestFormatterV2
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherConditions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherDataServiceAPIConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherDataServiceParserV1
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherDataServiceRequestFormatterV1
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherDataServiceRequestSigner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherEventConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherEventsConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherHistorical1DayRequestFormatterV2
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherStoreService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherStoreServiceConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAPIConfigurationFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScale
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCacheManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleGradient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleGradientStop
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateCommonForecast
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateCommonRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateCommonResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateForecastResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirPollutant
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirQualityConditions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirQualityProviderAttribution
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirQualityProviderAttributionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirQualityProviderStation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirQualityRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirQualityResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAttribution
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFChangeForecast
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFForecastDataParserUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFForecastResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFGeocodeRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFGeocodeResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFHourlyForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFNetworkBehaviorMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFNetworkEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFNetworkRetryManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFNextHourPrecipitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFNextHourPrecipitationCondition
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFNextHourPrecipitationDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFNextHourPrecipitationMinute
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFParsedForecastData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFRemoteAppSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFRequestFormattingRules
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFResponseParsingRules
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFSevereWeatherEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTaskIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperature
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFUserInfoManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherAlmanacParserV3
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherAlmanacRequestFormatterV3
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherChannelAPIConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherChannelRequestFormatterV2
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherConditions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherDataServiceAPIConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherDataServiceParserV1
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherDataServiceRequestFormatterV1
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherDataServiceRequestSigner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherEventConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherEventsConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherHistorical1DayRequestFormatterV2
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherStoreService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherStoreServiceConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherService
|| __TEXT.__const _LegacyWeatherConditionCodeCount
|| __TEXT.__const _WFAirQualityProviderAttributionErrorFetchingLogoImageCode
|| __TEXT.__const _WFAirQualityProviderAttributionErrorNoLogoURLCode
|| __TEXT.__const _WFAirQualityProviderAttributionManagerAttributionProviderNotFound
|| __TEXT.__const _WeatherFoundationVersionNumber
|| __TEXT.__const _WeatherFoundationVersionString
|| __TEXT.__const _kWFNetworkTimeoutInNanoseconds
|| __TEXT.__text _AqiScaleForCountryCode
|| __TEXT.__text _AqiScaleFromIdentifier
|| __TEXT.__text _CLLocationCoordinate2DFromString
|| __TEXT.__text _CLPlacemarkClosestToReferenceLocation
|| __TEXT.__text _CurrentAqiScale
|| __TEXT.__text _LegacyWeatherConditionCodeFromWFConditionCode
|| __TEXT.__text _NSStringFromCLLocationCoordinate2D
|| __TEXT.__text _NSStringFromWFChangeForecastDirection
|| __TEXT.__text _NSStringFromWFTemperatureUnit
|| __TEXT.__text _NSStringToWFTemperatureUnit
|| __TEXT.__text _WFAggregateCommonRequestSupportedForecastTypes
|| __TEXT.__text _WFCacheKeyForForecastType
|| __TEXT.__text _WFChangeForecastDirectionFromString
|| __TEXT.__text _WFConditionCodeFromLegacyWeatherConditionCode
|| __TEXT.__text _WFConvertTemperature
|| __TEXT.__text _WFForecastTypeForDate
|| __TEXT.__text _WFForecastTypeIsRequestedInTypes
|| __TEXT.__text _WFForecastTypeIsSingleType
|| __TEXT.__text _WFForecastTypes
|| __TEXT.__text _WFForecastTypesUnknownTypes
|| __TEXT.__text _WFLogForCategory
|| __TEXT.__text _WFNetworkEventTypeFromAPIVersion
|| __TEXT.__text _WFTemperatureUnitForLocale
|| __TEXT.__text _WFTemperatureUnitIsValid
|| __TEXT.__text _WFTimeOfDayForString
|| __TEXT.__text _WFWeatherStoreServiceCacheURL
|| __TEXT.__text _WeatherFoundationInternalUserDefaults
__ AppSupport: _OBJC_CLASS_$_ALCityManager
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierISO8601
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSLocaleTemperatureUnit
__ CoreFoundation: _NSLocaleTemperatureUnitCelsius
__ CoreFoundation: _NSLocaleTemperatureUnitFahrenheit
__ CoreFoundation: _NSLocaleUsesMetricSystem
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreLocation: _CLLocationCoordinate2DIsValid
__ CoreLocation: _OBJC_CLASS_$_CLGeocoder
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _kCLErrorDomain
__ CoreLocation: _kCLLocationCoordinate2DInvalid
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUbiquitousKeyValueStoreDidChangeExternallyNotification
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMeasurement
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUbiquitousKeyValueStore
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ GeoServices: _GEOAlmanacAltitudeSunset
__ GeoServices: _OBJC_CLASS_$_GEOAlmanac
__ MapKit: _OBJC_CLASS_$_MKLocalSearch
__ MapKit: _OBJC_CLASS_$_MKLocalSearchRequest
__ MapKit: _OBJC_CLASS_$_MKMapItem
__ MapKit: _OBJC_CLASS_$_MKPlacemark
__ Network: _OBJC_CLASS_$_NWHostEndpoint
__ Network: _OBJC_CLASS_$_NWPathEvaluator
__ RemoteConfiguration: _OBJC_CLASS_$_RCConfigurationManager
__ RemoteConfiguration: _OBJC_CLASS_$_RCConfigurationSettings
__ RemoteConfiguration: _OBJC_CLASS_$_RCDebugOverrides
__ RemoteConfiguration: _OBJC_CLASS_$_RCDeviceInfo
__ SoftLinking: __sl_dlopen
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CCHmacFinal
__ libSystem.B.dylib: _CCHmacInit
__ libSystem.B.dylib: _CCHmacUpdate
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _dispatch_apply
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libicucore.A.dylib: _u_strToUTF8
__ libicucore.A.dylib: _uameasfmt_close
__ libicucore.A.dylib: _uameasfmt_format
__ libicucore.A.dylib: _uameasfmt_open
__ libicucore.A.dylib: _unum_open
__ libicucore.A.dylib: _unum_setAttribute
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
WFDefaultFavoritesProvider : NSObject <WFFavoriteLocationProvider>
 @property  <WFFavoriteLocationProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFDefaultFavoritesProvider locations]
  -[WFDefaultFavoritesProvider setDelegate:]
  -[WFDefaultFavoritesProvider delegate]
  -[WFDefaultFavoritesProvider setLocations:]
  -[WFDefaultFavoritesProvider .cxx_destruct]
  -[WFDefaultFavoritesProvider addLocation:]
  -[WFDefaultFavoritesProvider init]
  -[WFDefaultFavoritesProvider initWithDelegate:persistence:]
  -[WFDefaultFavoritesProvider removeLocation:]
  -[WFDefaultFavoritesProvider canProvideDefaultFavorites]
  -[WFDefaultFavoritesProvider locationFromCity:]


WFNextHourPrecipitationCondition : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long type
 @property  double intensity
 @property  double probability
 @property  NSDate *validUntil

  // class methods
  +[WFNextHourPrecipitationCondition supportsSecureCoding]

  // instance methods
  -[WFNextHourPrecipitationCondition intensity]
  -[WFNextHourPrecipitationCondition encodeWithCoder:]
  -[WFNextHourPrecipitationCondition type]
  -[WFNextHourPrecipitationCondition .cxx_destruct]
  -[WFNextHourPrecipitationCondition copyWithZone:]
  -[WFNextHourPrecipitationCondition initWithCoder:]
  -[WFNextHourPrecipitationCondition probability]
  -[WFNextHourPrecipitationCondition validUntil]
  -[WFNextHourPrecipitationCondition _stringForType:]
  -[WFNextHourPrecipitationCondition typeForString:]
  -[WFNextHourPrecipitationCondition initWithType:intensity:probability:validUntil:]


WFAirQualityRequest : WFTask
 @property  WFLocation *location
 @property  NSLocale *locale
 @property  @? completionHandler
 @property  BOOL attachRawAPIData

  // class methods
  +[WFAirQualityRequest airQualityRequestForLocation:locale:completionHandler:]

  // instance methods
  -[WFAirQualityRequest cleanup]
  -[WFAirQualityRequest handleResponse:]
  -[WFAirQualityRequest startWithService:]
  -[WFAirQualityRequest .cxx_destruct]
  -[WFAirQualityRequest attachRawAPIData]
  -[WFAirQualityRequest options]
  -[WFAirQualityRequest locale]
  -[WFAirQualityRequest setLocation:]
  -[WFAirQualityRequest setLocale:]
  -[WFAirQualityRequest setAttachRawAPIData:]
  -[WFAirQualityRequest location]
  -[WFAirQualityRequest setCompletionHandler:]
  -[WFAirQualityRequest completionHandler]
  -[WFAirQualityRequest handleError:forResponseIdentifier:]
  -[WFAirQualityRequest initWithLocation:locale:completionHandler:]


WFWeatherAlmanacRequestFormatterV3 : NSObject <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherAlmanacRequestFormatterV3 aqiRequestForScaleNamed:language:]
  +[WFWeatherAlmanacRequestFormatterV3 forecastRequest:forLocation:locale:date:]
  +[WFWeatherAlmanacRequestFormatterV3 forecastRequest:forLocation:withUnits:locale:date:rules:options:]
  +[WFWeatherAlmanacRequestFormatterV3 hostURLForService]


WFUserDefaultsPersistence : NSObject <WeatherPreferencesPersistence>
 @property  NSUserDefaults *userDefaults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFUserDefaultsPersistence setUserDefaults:]
  -[WFUserDefaultsPersistence synchronize]
  -[WFUserDefaultsPersistence userDefaults]
  -[WFUserDefaultsPersistence setObject:forKey:]
  -[WFUserDefaultsPersistence .cxx_destruct]
  -[WFUserDefaultsPersistence stringForKey:]
  -[WFUserDefaultsPersistence initWithUserDefaults:]
  -[WFUserDefaultsPersistence dictionaryForKey:]
  -[WFUserDefaultsPersistence setBool:forKey:]
  -[WFUserDefaultsPersistence boolForKey:]
  -[WFUserDefaultsPersistence objectForKey:]
  -[WFUserDefaultsPersistence arrayForKey:]
  -[WFUserDefaultsPersistence init]


WFWeatherStoreServiceConfiguration : NSObject <NSURLSessionTaskDelegate, NSCopying>
 @property  {os_unfair_lock_s=I} serviceConnectivityEvaluationURLLock
 @property  {os_unfair_lock_s=I} serviceConnectivityEvaluatorLock
 @property  NSURLSession *session
 @property  Class cacheClass
 @property  NSURL *serviceConnectivityEvaluationURL
 @property  WFSettingsManager *settingsManager
 @property  BOOL isValid
 @property  NSString *apiVersion
 @property  NSURL *cacheURL
 @property  NWPathEvaluator *serviceConnectivityEvaluator
 @property  BOOL isServiceAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherStoreServiceConfiguration defaultConfigurationWithSourceBundleIdentifier:]
  +[WFWeatherStoreServiceConfiguration defaultConfiguration]
  +[WFWeatherStoreServiceConfiguration generateUserAgent]

  // instance methods
  -[WFWeatherStoreServiceConfiguration setCacheURL:]
  -[WFWeatherStoreServiceConfiguration setServiceConnectivityEvaluationURLLock:]
  -[WFWeatherStoreServiceConfiguration session]
  -[WFWeatherStoreServiceConfiguration serviceConnectivityEvaluationURL]
  -[WFWeatherStoreServiceConfiguration isServiceAvailableSync]
  -[WFWeatherStoreServiceConfiguration serviceConnectivityEvaluator]
  -[WFWeatherStoreServiceConfiguration aqiScaleRequestForScaleNamed:language:error:]
  -[WFWeatherStoreServiceConfiguration cacheURL]
  -[WFWeatherStoreServiceConfiguration setSession:]
  -[WFWeatherStoreServiceConfiguration parseAQIScaleNamed:data:apiVersion:error:]
  -[WFWeatherStoreServiceConfiguration forecastRequestForTypes:location:date:error:]
  -[WFWeatherStoreServiceConfiguration setServiceConnectivityEvaluatorLock:]
  -[WFWeatherStoreServiceConfiguration serviceConnectivityEvaluatorLock]
  -[WFWeatherStoreServiceConfiguration isValid]
  -[WFWeatherStoreServiceConfiguration .cxx_destruct]
  -[WFWeatherStoreServiceConfiguration apiConfiguration]
  -[WFWeatherStoreServiceConfiguration apiConfigurationForAPIVersion:]
  -[WFWeatherStoreServiceConfiguration cacheClass]
  -[WFWeatherStoreServiceConfiguration setCacheClass:]
  -[WFWeatherStoreServiceConfiguration parseForecast:data:location:units:locale:date:error:]
  -[WFWeatherStoreServiceConfiguration forecastRequestForTypes:location:units:date:apiVersion:error:requestOptions:]
  -[WFWeatherStoreServiceConfiguration setSettingsManager:]
  -[WFWeatherStoreServiceConfiguration settingsManager]
  -[WFWeatherStoreServiceConfiguration copyWithZone:]
  -[WFWeatherStoreServiceConfiguration forecastRequestForTypes:location:date:apiVersion:error:]
  -[WFWeatherStoreServiceConfiguration invalidate]
  -[WFWeatherStoreServiceConfiguration serviceConnectivityEvaluationURLLock]
  -[WFWeatherStoreServiceConfiguration forecastRequestForTypes:location:units:date:apiVersion:error:]
  -[WFWeatherStoreServiceConfiguration isServiceAvailable]
  -[WFWeatherStoreServiceConfiguration URLSession:task:didFinishCollectingMetrics:]
  -[WFWeatherStoreServiceConfiguration parseForecast:data:location:units:locale:date:apiVersion:error:]
  -[WFWeatherStoreServiceConfiguration apiVersion]
  -[WFWeatherStoreServiceConfiguration init]
  -[WFWeatherStoreServiceConfiguration setServiceConnectivityEvaluationURL:]


WFAQIScaleATMO : NSObject <WFAQIScale>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFAQIScaleATMO name]
  -[WFAQIScaleATMO scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryATMO : WFAQIScaleCategory

WFAQIScaleCAQI : NSObject <WFAQIScale>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFAQIScaleCAQI name]
  -[WFAQIScaleCAQI scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryCAQI : WFAQIScaleCategory

WFAQIScaleDAQI : NSObject <WFAQIScale>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFAQIScaleDAQI name]
  -[WFAQIScaleDAQI scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryDAQI : WFAQIScaleCategory

WFAQIScaleEPA : NSObject <WFAQIScale>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFAQIScaleEPA name]
  -[WFAQIScaleEPA scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryEPA : WFAQIScaleCategory

WFAQIScaleHJ6332012 : NSObject <WFAQIScale>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFAQIScaleHJ6332012 name]
  -[WFAQIScaleHJ6332012 scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryHJ6332012 : WFAQIScaleCategory

WFAQIScaleIMECA : NSObject <WFAQIScale>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFAQIScaleIMECA name]
  -[WFAQIScaleIMECA scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryIMECA : WFAQIScaleCategory

WFAQIScaleNAQI : NSObject <WFAQIScale>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFAQIScaleNAQI name]
  -[WFAQIScaleNAQI scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryNAQI : WFAQIScaleCategory

WFAQIScaleUBA : NSObject <WFAQIScale>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFAQIScaleUBA name]
  -[WFAQIScaleUBA scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryUBA : WFAQIScaleCategory

WFWeatherEventConfig : NSObject <NSCopying>
 @property  BOOL enabled

  // instance methods
  -[WFWeatherEventConfig initWithDictionary:defaulEnabled:]
  -[WFWeatherEventConfig setEnabled:]
  -[WFWeatherEventConfig copyWithZone:]
  -[WFWeatherEventConfig enabled]


WFWeatherStoreCache : NSObject
 @property  NSTimer *cacheStoreTimer
 @property  NSObject<OS_dispatch_queue> *cacheConcurrentQueue
 @property  NSMutableDictionary *cacheForDomain
 @property  NSMutableSet *dirtyCacheDomains
 @property  NSURL *URL

  // class methods
  +[WFWeatherStoreCache removeObjectsFromCache:passingTest:]
  +[WFWeatherStoreCache createCacheIfNecessary:error:]
  +[WFWeatherStoreCache wf_mainDomains]

  // instance methods
  -[WFWeatherStoreCache setCacheForDomain:]
  -[WFWeatherStoreCache _concurrentQueue_barrier_removeObjectWithinDomain:forKey:]
  -[WFWeatherStoreCache removeAllObjects]
  -[WFWeatherStoreCache _startCacheStoreTimer]
  -[WFWeatherStoreCache _concurrentQueue_barrier_shrinkDomain:]
  -[WFWeatherStoreCache initWithURL:]
  -[WFWeatherStoreCache _markDomainDirty:]
  -[WFWeatherStoreCache _dirtyCacheDomains]
  -[WFWeatherStoreCache _concurrentQueue_barrier_loadDomain:]
  -[WFWeatherStoreCache deleteOldDataFromCache:allowedStaleness:]
  -[WFWeatherStoreCache cacheConcurrentQueue]
  -[WFWeatherStoreCache _ensureDomainIsLoaded:]
  -[WFWeatherStoreCache setURL:]
  -[WFWeatherStoreCache dealloc]
  -[WFWeatherStoreCache .cxx_destruct]
  -[WFWeatherStoreCache cache:withinDomain:forKey:]
  -[WFWeatherStoreCache _stopCacheStoreTimer]
  -[WFWeatherStoreCache dirtyCacheDomains]
  -[WFWeatherStoreCache cache:withinDomain:date:forKey:expiration:synchronous:]
  -[WFWeatherStoreCache _concurrentQueue_barrier_writeCacheDictionaryToFile]
  -[WFWeatherStoreCache removeObjectWithinDomain:forKey:]
  -[WFWeatherStoreCache cachedObjectWithinDomain:forKey:]
  -[WFWeatherStoreCache setCacheConcurrentQueue:]
  -[WFWeatherStoreCache _shrinkDomain:]
  -[WFWeatherStoreCache _loadedCacheDomains]
  -[WFWeatherStoreCache writeCacheDictionaryToFile]
  -[WFWeatherStoreCache _concurrentQueue_barrier_deleteOldDataFromCache]
  -[WFWeatherStoreCache executeTransaction:]
  -[WFWeatherStoreCache cacheForDomain]
  -[WFWeatherStoreCache cache:withinDomain:forKey:expiration:]
  -[WFWeatherStoreCache setCacheStoreTimer:]
  -[WFWeatherStoreCache cacheStoreTimer]
  -[WFWeatherStoreCache URL]
  -[WFWeatherStoreCache cachedObjectWithinDomain:forKey:staleness:]
  -[WFWeatherStoreCache _concurrentQueue_barrier_deleteOldDataFromCache:allowedStaleness:]
  -[WFWeatherStoreCache init]
  -[WFWeatherStoreCache setDirtyCacheDomains:]
  -[WFWeatherStoreCache _loadDomain:]


WFWeatherEventsConfig : NSObject <NSCopying>
 @property  WFWeatherEventConfig *changeInConditions
 @property  WFWeatherEventConfig *nextHourPrecipitation
 @property  WFWeatherEventConfig *severeWeather

  // instance methods
  -[WFWeatherEventsConfig setNextHourPrecipitation:]
  -[WFWeatherEventsConfig setChangeInConditions:]
  -[WFWeatherEventsConfig initWithDictionary:]
  -[WFWeatherEventsConfig setSevereWeather:]
  -[WFWeatherEventsConfig .cxx_destruct]
  -[WFWeatherEventsConfig severeWeather]
  -[WFWeatherEventsConfig copyWithZone:]
  -[WFWeatherEventsConfig changeInConditions]
  -[WFWeatherEventsConfig nextHourPrecipitation]


WFWeatherChannelRequestFormatterV2 : NSObject <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherChannelRequestFormatterV2 aqiRequestForScaleNamed:language:]
  +[WFWeatherChannelRequestFormatterV2 forecastRequest:forLocation:locale:date:]
  +[WFWeatherChannelRequestFormatterV2 forecastRequest:forLocation:withUnits:locale:date:rules:options:]
  +[WFWeatherChannelRequestFormatterV2 hostURLForService]
  +[WFWeatherChannelRequestFormatterV2 airQualityRequestForLocation:locale:]
  +[WFWeatherChannelRequestFormatterV2 forecastRequestForRequest:queryItems:forLocation:rules:]
  +[WFWeatherChannelRequestFormatterV2 forecastRequestForURL:queryItems:]


WFAirQualityProviderStation : NSObject
 @property  NSDate *lastReadDate
 @property  CLLocation *location

  // instance methods
  -[WFAirQualityProviderStation .cxx_destruct]
  -[WFAirQualityProviderStation location]
  -[WFAirQualityProviderStation lastReadDate]
  -[WFAirQualityProviderStation initWithLocation:lastReadDate:]


WFLocationQueryGeocode : NSObject <WFLocationQuery>
 @property  @? resultHandler
 @property  WFResponse *response
 @property  CLGeocoder *reverseGeocoder
 @property  MKLocalSearch *search
 @property  {CLLocationCoordinate2D=dd} searchCoordinate
 @property  {CLLocationCoordinate2D=dd} unshiftedCoordinate
 @property  MKLocalSearchCompletion *searchCompletion
 @property  NSString *searchString
 @property  WFTaskIdentifier *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFLocationQueryGeocode invalidateCaches]
  +[WFLocationQueryGeocode queryWithDictionaryRepresentation:resultHandler:]
  +[WFLocationQueryGeocode queryWithCoordinate:resultHandler:]
  +[WFLocationQueryGeocode queryWithSearchCompletion:resultHandler:]
  +[WFLocationQueryGeocode queryWithSearchString:resultHandler:]

  // instance methods
  -[WFLocationQueryGeocode resultHandler]
  -[WFLocationQueryGeocode identifier]
  -[WFLocationQueryGeocode setResultHandler:]
  -[WFLocationQueryGeocode .cxx_destruct]
  -[WFLocationQueryGeocode setResponse:]
  -[WFLocationQueryGeocode setIdentifier:]
  -[WFLocationQueryGeocode searchString]
  -[WFLocationQueryGeocode start]
  -[WFLocationQueryGeocode response]
  -[WFLocationQueryGeocode cancel]
  -[WFLocationQueryGeocode search]
  -[WFLocationQueryGeocode searchCoordinate]
  -[WFLocationQueryGeocode setSearch:]
  -[WFLocationQueryGeocode searchCompletion]
  -[WFLocationQueryGeocode initWithCoordinate:resultHandler:]
  -[WFLocationQueryGeocode initWithSearchCompletion:resultHandler:]
  -[WFLocationQueryGeocode initWithSearchString:resultHandler:]
  -[WFLocationQueryGeocode _startMKLocalSearch]
  -[WFLocationQueryGeocode _startCLGeocoderReverseGeo]
  -[WFLocationQueryGeocode isLocationValid:]
  -[WFLocationQueryGeocode _mkLocalSearchRequest]
  -[WFLocationQueryGeocode _reverseGeocoderLocation]
  -[WFLocationQueryGeocode handleSearchResponseWithLocation:]
  -[WFLocationQueryGeocode _handleErrorResponse:]
  -[WFLocationQueryGeocode reverseGeocoder]
  -[WFLocationQueryGeocode setReverseGeocoder:]
  -[WFLocationQueryGeocode setSearchCoordinate:]
  -[WFLocationQueryGeocode unshiftedCoordinate]
  -[WFLocationQueryGeocode setUnshiftedCoordinate:]


WFWeatherUndergroundRequestFormatter : NSObject <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherUndergroundRequestFormatter aqiRequestForScaleNamed:language:]
  +[WFWeatherUndergroundRequestFormatter forecastRequest:forLocation:locale:date:]
  +[WFWeatherUndergroundRequestFormatter forecastRequest:forLocation:withUnits:locale:date:rules:options:]
  +[WFWeatherUndergroundRequestFormatter hostURLForService]


WFTemperatureUnitObserver : NSObject
 @property  NSObject<OS_dispatch_queue> *temperatureUnitUpdateQueue
 @property  {os_unfair_lock_s=I} dataSynchronizationLock
 @property  NSMutableDictionary *blockObserversForUUID
 @property  NSHashTable *observerObjects
 @property  int userTemperatureUnit
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  int temperatureUnit

  // class methods
  +[WFTemperatureUnitObserver sharedObserver]

  // instance methods
  -[WFTemperatureUnitObserver setCallbackQueue:]
  -[WFTemperatureUnitObserver addObserver:]
  -[WFTemperatureUnitObserver callbackQueue]
  -[WFTemperatureUnitObserver dealloc]
  -[WFTemperatureUnitObserver removeAllObservers]
  -[WFTemperatureUnitObserver .cxx_destruct]
  -[WFTemperatureUnitObserver dataSynchronizationLock]
  -[WFTemperatureUnitObserver temperatureUnit]
  -[WFTemperatureUnitObserver userTemperatureUnit]
  -[WFTemperatureUnitObserver removeObserver:]
  -[WFTemperatureUnitObserver _init]
  -[WFTemperatureUnitObserver init]
  -[WFTemperatureUnitObserver _updateTemperatureUnit]
  -[WFTemperatureUnitObserver addBlockObserver:]
  -[WFTemperatureUnitObserver removeBlockObserverWithHandle:]
  -[WFTemperatureUnitObserver q_updateTemperatureUnit]
  -[WFTemperatureUnitObserver q_notifyObserversOfUpdatedTemperatureUnit:]
  -[WFTemperatureUnitObserver temperatureUnitUpdateQueue]
  -[WFTemperatureUnitObserver setTemperatureUnitUpdateQueue:]
  -[WFTemperatureUnitObserver setDataSynchronizationLock:]
  -[WFTemperatureUnitObserver blockObserversForUUID]
  -[WFTemperatureUnitObserver setBlockObserversForUUID:]
  -[WFTemperatureUnitObserver observerObjects]
  -[WFTemperatureUnitObserver setObserverObjects:]
  -[WFTemperatureUnitObserver setUserTemperatureUnit:]


WFWeatherChannelParserV2 : NSObject <WFForecastDataParser>
 @property  NSCalendar *calendar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherChannelParserV2 expectedHourlyForecastCount]
  +[WFWeatherChannelParserV2 expectedDailyForecastCount]
  +[WFWeatherChannelParserV2 componentsForCurrentForecast]
  +[WFWeatherChannelParserV2 componentsForHourlyForecasts]
  +[WFWeatherChannelParserV2 componentsForDailyForecasts]

  // instance methods
  -[WFWeatherChannelParserV2 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherChannelParserV2 calendar]
  -[WFWeatherChannelParserV2 .cxx_destruct]
  -[WFWeatherChannelParserV2 setCalendar:]
  -[WFWeatherChannelParserV2 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherChannelParserV2 init]
  -[WFWeatherChannelParserV2 _pressureTrendFromWeatherChannelCode:]
  -[WFWeatherChannelParserV2 parseDailyForecasts:]
  -[WFWeatherChannelParserV2 parseHourlyForecasts:]
  -[WFWeatherChannelParserV2 parseCurrentCondition:]
  -[WFWeatherChannelParserV2 parseCommonComponents:data:]
  -[WFWeatherChannelParserV2 parseAirQualityData:location:error:]


WFAirQualityProviderAttributionManager : NSObject
 @property  {os_unfair_lock_s=I} dataSynchronizationLock
 @property  NSMutableDictionary *attributionCache
 @property  WFAirQualityProviderAttribution *defaultProviderAttribution

  // class methods
  +[WFAirQualityProviderAttributionManager sharedManager]

  // instance methods
  -[WFAirQualityProviderAttributionManager .cxx_destruct]
  -[WFAirQualityProviderAttributionManager dataSynchronizationLock]
  -[WFAirQualityProviderAttributionManager init]
  -[WFAirQualityProviderAttributionManager setDataSynchronizationLock:]
  -[WFAirQualityProviderAttributionManager registerProviderAttribution:]
  -[WFAirQualityProviderAttributionManager cachedAttributionForProvider:]
  -[WFAirQualityProviderAttributionManager loadAttributionForProvider:completion:]
  -[WFAirQualityProviderAttributionManager defaultProviderAttribution]
  -[WFAirQualityProviderAttributionManager p_archivedDataForProviderAttribution:]
  -[WFAirQualityProviderAttributionManager p_updateCacheWithProviderAttribution:]
  -[WFAirQualityProviderAttributionManager attributionCache]
  -[WFAirQualityProviderAttributionManager setAttributionCache:]


WFTemperatureUnitResponse : WFResponse <NSSecureCoding>
 @property  int temperatureUnit

  // class methods
  +[WFTemperatureUnitResponse supportsSecureCoding]

  // instance methods
  -[WFTemperatureUnitResponse encodeWithCoder:]
  -[WFTemperatureUnitResponse temperatureUnit]
  -[WFTemperatureUnitResponse setTemperatureUnit:]
  -[WFTemperatureUnitResponse initWithCoder:]


WFAPIConfigurationFactory : NSObject
  // class methods
  +[WFAPIConfigurationFactory configurationForAPIVersion:]


WFWeatherHistorical30DaysRequestFormatterV3 : NSObject <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherHistorical30DaysRequestFormatterV3 aqiRequestForScaleNamed:language:]
  +[WFWeatherHistorical30DaysRequestFormatterV3 forecastRequest:forLocation:locale:date:]
  +[WFWeatherHistorical30DaysRequestFormatterV3 forecastRequest:forLocation:withUnits:locale:date:rules:options:]
  +[WFWeatherHistorical30DaysRequestFormatterV3 hostURLForService]


WFForecastDataParserUtils : NSObject
  // class methods
  +[WFForecastDataParserUtils ascendingTimeComparator]
  +[WFForecastDataParserUtils stringFromKeyPath:]


WFParsedForecastData : NSObject
 @property  NSData *rawData
 @property  WFAirQualityConditions *airQualityObservations
 @property  WFWeatherConditions *currentConditions
 @property  NSArray *lastTwentyFourHoursOfObservations
 @property  NSArray *dailyForecasts
 @property  NSArray *hourlyForecasts
 @property  NSArray *pollenForecasts
 @property  NSArray *changeForecasts
 @property  NSArray *severeWeatherEvents
 @property  WFNextHourPrecipitation *nextHourPrecipitation

  // instance methods
  -[WFParsedForecastData dailyForecasts]
  -[WFParsedForecastData rawData]
  -[WFParsedForecastData objectForForecastType:]
  -[WFParsedForecastData setNextHourPrecipitation:]
  -[WFParsedForecastData setPollenForecasts:]
  -[WFParsedForecastData currentConditions]
  -[WFParsedForecastData lastTwentyFourHoursOfObservations]
  -[WFParsedForecastData setLastTwentyFourHoursOfObservations:]
  -[WFParsedForecastData changeForecasts]
  -[WFParsedForecastData setCurrentConditions:]
  -[WFParsedForecastData .cxx_destruct]
  -[WFParsedForecastData setHourlyForecasts:]
  -[WFParsedForecastData pollenForecasts]
  -[WFParsedForecastData setSevereWeatherEvents:]
  -[WFParsedForecastData setChangeForecasts:]
  -[WFParsedForecastData hourlyForecasts]
  -[WFParsedForecastData severeWeatherEvents]
  -[WFParsedForecastData airQualityObservations]
  -[WFParsedForecastData setRawData:]
  -[WFParsedForecastData setDailyForecasts:]
  -[WFParsedForecastData nextHourPrecipitation]
  -[WFParsedForecastData setAirQualityObservations:]


WFChangeForecastRequest : WFTask
 @property  WFLocation *location
 @property  @? completionHandler

  // instance methods
  -[WFChangeForecastRequest initWithLocation:completionHandler:]
  -[WFChangeForecastRequest handleResponse:]
  -[WFChangeForecastRequest startWithService:]
  -[WFChangeForecastRequest .cxx_destruct]
  -[WFChangeForecastRequest location]
  -[WFChangeForecastRequest completionHandler]
  -[WFChangeForecastRequest handleError:forResponseIdentifier:]


WFJSONStructureLeafNode : NSObject
 @property  BOOL required

  // class methods
  +[WFJSONStructureLeafNode requiredLeafNode]
  +[WFJSONStructureLeafNode optionalLeafNode]

  // instance methods
  -[WFJSONStructureLeafNode setRequired:]
  -[WFJSONStructureLeafNode isRequired]


WFWeatherChannelValidator : NSObject
  // class methods
  +[WFWeatherChannelValidator expectedStructure]
  +[WFWeatherChannelValidator isLeafNodeType:]

  // instance methods
  -[WFWeatherChannelValidator validateResponseData:]
  -[WFWeatherChannelValidator validateDictionary:expectedStructure:]


WFAQIScaleGradientStop : NSObject <NSCopying, NSSecureCoding>
 @property  float location
 @property  NSString *color

  // class methods
  +[WFAQIScaleGradientStop supportsSecureCoding]

  // instance methods
  -[WFAQIScaleGradientStop encodeWithCoder:]
  -[WFAQIScaleGradientStop .cxx_destruct]
  -[WFAQIScaleGradientStop copyWithZone:]
  -[WFAQIScaleGradientStop color]
  -[WFAQIScaleGradientStop location]
  -[WFAQIScaleGradientStop initWithCoder:]
  -[WFAQIScaleGradientStop initWithLocation:color:]


WeatherService : NSObject <WeatherServiceProtocol, WeatherServicePrivateProtocol>
 @property  WFWeatherStoreService *internalService
 @property  WFQueryDispatcher *queryDispatcher
 @property  NSMapTable *clientDictionary
 @property  NSArray *clients
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WFTemperatureUnitProvider *temperatureUnitProvider

  // class methods
  +[WeatherService sharedService]

  // instance methods
  -[WeatherService removeClient:]
  -[WeatherService queryDispatcher]
  -[WeatherService clients]
  -[WeatherService cancelTaskWithIdentifier:]
  -[WeatherService forecastForLocation:locale:onDate:options:taskIdentifier:]
  -[WeatherService addClient:]
  -[WeatherService replaceTemperatureUnitWith:identifier:]
  -[WeatherService initWithStore:]
  -[WeatherService locationForCoordinate:taskIdentifier:]
  -[WeatherService clientDictionary]
  -[WeatherService .cxx_destruct]
  -[WeatherService temperatureUnitWithIdentifier:]
  -[WeatherService setTemperatureUnitProvider:]
  -[WeatherService addClient:forPid:]
  -[WeatherService invalidateCache:]
  -[WeatherService temperatureUnitProvider]
  -[WeatherService forecast:forLocation:withUnits:locale:taskIdentifier:]
  -[WeatherService setInternalService:]
  -[WeatherService reachabilityConfigurationForIdentifier:]
  -[WeatherService hourlyForecastForLocation:locale:taskIdentifier:]
  -[WeatherService dailyForecastForLocation:locale:taskIdentifier:]
  -[WeatherService forecast:forLocation:withUnits:locale:taskIdentifier:requestOptions:]
  -[WeatherService locationForSearchCompletion:taskIdentifier:]
  -[WeatherService internalService]
  -[WeatherService forecast:forLocation:locale:taskIdentifier:]
  -[WeatherService performMigrationWithCompletion:]
  -[WeatherService setClientDictionary:]
  -[WeatherService locationForString:taskIdentifier:]
  -[WeatherService airQualityForLocation:locale:options:taskIdentifier:]
  -[WeatherService setQueryDispatcher:]
  -[WeatherService clientForPid:]
  -[WeatherService queryDispatcherDidReceiveResponse:identifier:]
  -[WeatherService init]
  -[WeatherService fetchFavoriteLocationsWithTaskIdentifier:]


WFNextHourPrecipitation : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *readDate
 @property  NSDate *startDate
 @property  NSDate *expirationDate
 @property  NSArray *minutes
 @property  NSArray *precipitationDescriptions
 @property  NSArray *conditions
 @property  BOOL isRelevant
 @property  WFNextHourPrecipitationDescription *currentDescription
 @property  NSArray *activeMinutes

  // class methods
  +[WFNextHourPrecipitation supportsSecureCoding]

  // instance methods
  -[WFNextHourPrecipitation expirationDate]
  -[WFNextHourPrecipitation encodeWithCoder:]
  -[WFNextHourPrecipitation .cxx_destruct]
  -[WFNextHourPrecipitation conditions]
  -[WFNextHourPrecipitation minutes]
  -[WFNextHourPrecipitation copyWithZone:]
  -[WFNextHourPrecipitation startDate]
  -[WFNextHourPrecipitation isEqual:]
  -[WFNextHourPrecipitation readDate]
  -[WFNextHourPrecipitation initWithCoder:]
  -[WFNextHourPrecipitation initWithReadDate:startDate:expirationDate:minutes:conditions:descriptions:]
  -[WFNextHourPrecipitation activeMinutes]
  -[WFNextHourPrecipitation isRelevant]
  -[WFNextHourPrecipitation currentDescription]
  -[WFNextHourPrecipitation precipitationDescriptions]


WFAggregateForecastResponse : WFResponse <NSCopying, NSSecureCoding>
 @property  NSArray *forecasts
 @property  BOOL responseWasFromCache

  // class methods
  +[WFAggregateForecastResponse supportsSecureCoding]

  // instance methods
  -[WFAggregateForecastResponse setForecasts:]
  -[WFAggregateForecastResponse encodeWithCoder:]
  -[WFAggregateForecastResponse .cxx_destruct]
  -[WFAggregateForecastResponse responseWasFromCache]
  -[WFAggregateForecastResponse forecasts]
  -[WFAggregateForecastResponse copyWithZone:]
  -[WFAggregateForecastResponse setResponseWasFromCache:]
  -[WFAggregateForecastResponse initWithCoder:]


WFForecastRequest : WFTask
 @property  @? completionHandler
 @property  NSDateComponents *date
 @property  WFLocation *location
 @property  unsigned long forecastType
 @property  BOOL attachRawAPIData
 @property  NSData *rawAPIData
 @property  NSLocale *locale
 @property  NSString *trackingParameter
 @property  NSDate *onDate

  // class methods
  +[WFForecastRequest forecastRequestForLocation:completionHandler:]
  +[WFForecastRequest forecastRequestForLocation:date:completionHandler:]
  +[WFForecastRequest forecastRequestForLocation:onDate:completionHandler:]

  // instance methods
  -[WFForecastRequest cleanup]
  -[WFForecastRequest initWithLocation:completionHandler:]
  -[WFForecastRequest handleResponse:]
  -[WFForecastRequest startWithService:]
  -[WFForecastRequest forecastType]
  -[WFForecastRequest setDate:]
  -[WFForecastRequest date]
  -[WFForecastRequest setForecastType:]
  -[WFForecastRequest initWithLocation:onDate:completionHandler:]
  -[WFForecastRequest .cxx_destruct]
  -[WFForecastRequest attachRawAPIData]
  -[WFForecastRequest handleCancellation]
  -[WFForecastRequest locale]
  -[WFForecastRequest setLocation:]
  -[WFForecastRequest rawAPIData]
  -[WFForecastRequest setLocale:]
  -[WFForecastRequest setTrackingParameter:]
  -[WFForecastRequest setAttachRawAPIData:]
  -[WFForecastRequest location]
  -[WFForecastRequest setRawAPIData:]
  -[WFForecastRequest initWithLocation:date:completionHandler:]
  -[WFForecastRequest setCompletionHandler:]
  -[WFForecastRequest completionHandler]
  -[WFForecastRequest onDate]
  -[WFForecastRequest handleError:forResponseIdentifier:]
  -[WFForecastRequest trackingParameter]


WFRemoteAppSettings : NSObject <WFSettings>
 @property  long long appConfigRefreshRate
 @property  NSDate *lastModificationDate
 @property  NSString *bundleID
 @property  NSString *countryCode
 @property  unsigned long apiConfigModdedHash
 @property  unsigned long apiConfigMinRange
 @property  unsigned long apiConfigMaxRange
 @property  BOOL isExpired
 @property  NSDictionary *config
 @property  NSString *apiVersion
 @property  NSSet *aqiEnabledCountryCodes
 @property  NSString *apiVersionFallback
 @property  unsigned long networkFailedAttemptsLimit
 @property  unsigned long networkSwitchExpirationTimeInSeconds
 @property  unsigned long locationNumDecimalsOfPrecision
 @property  WFWeatherEventsConfig *weatherEventsConfig
 @property  NSDictionary *widgetRefreshPolicy
 @property  NSURL *appAnalyticsEndpointUrl
 @property  float dataSamplingRate
 @property  float telemetrySamplingRate
 @property  float locationGeocodingSamplingRate
 @property  double userIdentifierResetTimeInterval
 @property  double privateUserIdentifierResetTimeInterval
 @property  double cachedGeocodeLocationExpirationTimeInterval
 @property  double locationUpdateMinTimeInterval
 @property  double locationUpdateMinDistance
 @property  BOOL disableForecastRequestCancelation
 @property  BOOL disablePriorityForecastRequestQueue
 @property  BOOL loadSavedCitiesFromKVSOnly
 @property  BOOL disableLimitReverseGeocoding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFRemoteAppSettings defaultSettings]
  +[WFRemoteAppSettings wfSeedBuild]
  +[WFRemoteAppSettings bundleIDsListFor:useInternalBundleID:useSeedBundleID:]
  +[WFRemoteAppSettings configurationWithData:bundleIDs:country:userID:error:]
  +[WFRemoteAppSettings wfInternalBuild]
  +[WFRemoteAppSettings configurationWithData:userID:error:]
  +[WFRemoteAppSettings useInternalBundleID]

  // instance methods
  -[WFRemoteAppSettings getAPIVersionFromDictionary:userID:]
  -[WFRemoteAppSettings loadSavedCitiesFromKVSOnly]
  -[WFRemoteAppSettings weatherEventsConfig]
  -[WFRemoteAppSettings lastModificationDate]
  -[WFRemoteAppSettings apiConfigMinRange]
  -[WFRemoteAppSettings config]
  -[WFRemoteAppSettings networkFailedAttemptsLimit]
  -[WFRemoteAppSettings shouldUseAPIVersionFromDictionary:userID:]
  -[WFRemoteAppSettings .cxx_destruct]
  -[WFRemoteAppSettings aqiEnabledForCountryCode:]
  -[WFRemoteAppSettings networkSwitchExpirationTimeInSeconds]
  -[WFRemoteAppSettings aqiEnabledCountryCodes]
  -[WFRemoteAppSettings getEnvironmentSpecificConfigDictionaryFromDictionary:bundleIDs:country:]
  -[WFRemoteAppSettings apiVersionFallback]
  -[WFRemoteAppSettings disablePriorityForecastRequestQueue]
  -[WFRemoteAppSettings getSpecificConfigFromConfigs:configSpecifiers:specifierKey:]
  -[WFRemoteAppSettings widgetRefreshPolicy]
  -[WFRemoteAppSettings apiConfigModdedHash]
  -[WFRemoteAppSettings locationUpdateMinDistance]
  -[WFRemoteAppSettings copyWithZone:]
  -[WFRemoteAppSettings privateUserIdentifierResetTimeInterval]
  -[WFRemoteAppSettings isExpired]
  -[WFRemoteAppSettings appAnalyticsEndpointUrl]
  -[WFRemoteAppSettings userIdentifierResetTimeInterval]
  -[WFRemoteAppSettings bundleID]
  -[WFRemoteAppSettings telemetrySamplingRate]
  -[WFRemoteAppSettings disableForecastRequestCancelation]
  -[WFRemoteAppSettings disableLimitReverseGeocoding]
  -[WFRemoteAppSettings cachedGeocodeLocationExpirationTimeInterval]
  -[WFRemoteAppSettings countryCode]
  -[WFRemoteAppSettings dataSamplingRate]
  -[WFRemoteAppSettings initWithConfigDictionary:bundleIDs:country:userID:]
  -[WFRemoteAppSettings locationUpdateMinTimeInterval]
  -[WFRemoteAppSettings locationGeocodingSamplingRate]
  -[WFRemoteAppSettings apiVersion]
  -[WFRemoteAppSettings appConfigRefreshRate]
  -[WFRemoteAppSettings locationNumDecimalsOfPrecision]
  -[WFRemoteAppSettings apiConfigMaxRange]


WFNetworkBehaviorMonitor : NSObject
 @property  NSHashTable *observers

  // class methods
  +[WFNetworkBehaviorMonitor sharedInstance]

  // instance methods
  -[WFNetworkBehaviorMonitor logNetworkEvent:]
  -[WFNetworkBehaviorMonitor addObserver:]
  -[WFNetworkBehaviorMonitor .cxx_destruct]
  -[WFNetworkBehaviorMonitor removeObserver:]
  -[WFNetworkBehaviorMonitor init]
  -[WFNetworkBehaviorMonitor observers]


WFTemperatureUnitRequest : WFTask
 @property  @? resultHandler

  // instance methods
  -[WFTemperatureUnitRequest cleanup]
  -[WFTemperatureUnitRequest resultHandler]
  -[WFTemperatureUnitRequest handleResponse:]
  -[WFTemperatureUnitRequest startWithService:]
  -[WFTemperatureUnitRequest setResultHandler:]
  -[WFTemperatureUnitRequest requiresResponse]
  -[WFTemperatureUnitRequest .cxx_destruct]
  -[WFTemperatureUnitRequest handleCancellation]
  -[WFTemperatureUnitRequest handleError:forResponseIdentifier:]
  -[WFTemperatureUnitRequest initWithResultHandler:]


WFRequestFormattingRules : NSObject
 @property  <WFSettings> *settings

  // class methods
  +[WFRequestFormattingRules aqiEnabledByRules:forLocation:]

  // instance methods
  -[WFRequestFormattingRules initWithSettings:]
  -[WFRequestFormattingRules .cxx_destruct]
  -[WFRequestFormattingRules aqiEnabledForCountryCode:]
  -[WFRequestFormattingRules settings]
  -[WFRequestFormattingRules locationNumDecimalsOfPrecision]


WFUserInfoManager : NSObject
 @property  NSObject<OS_dispatch_queue> *ubiquitousKVSCommunicationsQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSUbiquitousKeyValueStore *encryptedStore
 @property  <WFUserInfoManagerDelegate> *delegate

  // instance methods
  -[WFUserInfoManager synchronize]
  -[WFUserInfoManager encryptedStoreChanged:]
  -[WFUserInfoManager setDelegate:]
  -[WFUserInfoManager setCallbackQueue:]
  -[WFUserInfoManager delegate]
  -[WFUserInfoManager callbackQueue]
  -[WFUserInfoManager dealloc]
  -[WFUserInfoManager .cxx_destruct]
  -[WFUserInfoManager encryptedStore]
  -[WFUserInfoManager setUbiquitousKVSCommunicationsQueue:]
  -[WFUserInfoManager readUserIdentifierAndNotify]
  -[WFUserInfoManager ubiquitousKVSCommunicationsQueue]
  -[WFUserInfoManager init]


WFWeatherAlmanacParserV3 : NSObject <WFForecastDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherAlmanacParserV3 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherAlmanacParserV3 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherAlmanacParserV3 parseAlmanacForecastDataFromJson:location:date:]


WFGeocodeResponse : WFResponse <NSSecureCoding>
 @property  WFLocation *location

  // class methods
  +[WFGeocodeResponse supportsSecureCoding]

  // instance methods
  -[WFGeocodeResponse encodeWithCoder:]
  -[WFGeocodeResponse .cxx_destruct]
  -[WFGeocodeResponse location]
  -[WFGeocodeResponse initWithCoder:]
  -[WFGeocodeResponse initWithIdentifier:location:]


WFPollenConditions : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *date
 @property  unsigned long timeOfDay
 @property  unsigned long grassIndex
 @property  unsigned long ragweedIndex
 @property  unsigned long treeIndex

  // class methods
  +[WFPollenConditions supportsSecureCoding]

  // instance methods
  -[WFPollenConditions encodeWithCoder:]
  -[WFPollenConditions setDate:]
  -[WFPollenConditions date]
  -[WFPollenConditions .cxx_destruct]
  -[WFPollenConditions copyWithZone:]
  -[WFPollenConditions timeOfDay]
  -[WFPollenConditions initWithCoder:]
  -[WFPollenConditions setTimeOfDay:]
  -[WFPollenConditions grassIndex]
  -[WFPollenConditions setGrassIndex:]
  -[WFPollenConditions ragweedIndex]
  -[WFPollenConditions setRagweedIndex:]
  -[WFPollenConditions treeIndex]
  -[WFPollenConditions setTreeIndex:]


WFRequestOptions : NSObject
 @property  NSMutableDictionary *httpHeaderDictionary

  // instance methods
  -[WFRequestOptions .cxx_destruct]
  -[WFRequestOptions addHttpHeaderField:withValue:]
  -[WFRequestOptions httpHeaderDictionary]


WFServiceReachabilityObserver : NSObject
 @property  NSObject<OS_dispatch_queue> *observerQueue
 @property  NSMutableDictionary *blockObserversForUUID
 @property  NSHashTable *observerObjects
 @property  long long reachability
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NWPathEvaluator *serviceReachabilityEvaluator
 @property  BOOL isServiceAvailable

  // class methods
  +[WFServiceReachabilityObserver sharedObserver]

  // instance methods
  -[WFServiceReachabilityObserver reachability]
  -[WFServiceReachabilityObserver observerQueue]
  -[WFServiceReachabilityObserver setReachability:]
  -[WFServiceReachabilityObserver setCallbackQueue:]
  -[WFServiceReachabilityObserver setObserverQueue:]
  -[WFServiceReachabilityObserver addObserver:]
  -[WFServiceReachabilityObserver callbackQueue]
  -[WFServiceReachabilityObserver dealloc]
  -[WFServiceReachabilityObserver removeAllObservers]
  -[WFServiceReachabilityObserver .cxx_destruct]
  -[WFServiceReachabilityObserver _setupReachability]
  -[WFServiceReachabilityObserver observeValueForKeyPath:ofObject:change:context:]
  -[WFServiceReachabilityObserver isServiceAvailable]
  -[WFServiceReachabilityObserver removeObserver:]
  -[WFServiceReachabilityObserver _init]
  -[WFServiceReachabilityObserver init]
  -[WFServiceReachabilityObserver addBlockObserver:]
  -[WFServiceReachabilityObserver removeBlockObserverWithHandle:]
  -[WFServiceReachabilityObserver blockObserversForUUID]
  -[WFServiceReachabilityObserver setBlockObserversForUUID:]
  -[WFServiceReachabilityObserver observerObjects]
  -[WFServiceReachabilityObserver setObserverObjects:]
  -[WFServiceReachabilityObserver _deliverReachabilityUpdate:]
  -[WFServiceReachabilityObserver serviceReachabilityEvaluator]
  -[WFServiceReachabilityObserver setServiceReachabilityEvaluator:]


WFInternalAppSettings : NSObject <WFSettings>
 @property  NSString *apiVersion
 @property  NSSet *aqiEnabledCountryCodes
 @property  NSString *apiVersionFallback
 @property  unsigned long networkFailedAttemptsLimit
 @property  unsigned long networkSwitchExpirationTimeInSeconds
 @property  unsigned long locationNumDecimalsOfPrecision
 @property  WFWeatherEventsConfig *weatherEventsConfig
 @property  NSDictionary *widgetRefreshPolicy
 @property  NSURL *appAnalyticsEndpointUrl
 @property  float dataSamplingRate
 @property  float telemetrySamplingRate
 @property  float locationGeocodingSamplingRate
 @property  double userIdentifierResetTimeInterval
 @property  double privateUserIdentifierResetTimeInterval
 @property  double cachedGeocodeLocationExpirationTimeInterval
 @property  double locationUpdateMinTimeInterval
 @property  double locationUpdateMinDistance
 @property  BOOL disableForecastRequestCancelation
 @property  BOOL disablePriorityForecastRequestQueue
 @property  BOOL loadSavedCitiesFromKVSOnly
 @property  BOOL disableLimitReverseGeocoding
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFInternalAppSettings loadSavedCitiesFromKVSOnly]
  -[WFInternalAppSettings weatherEventsConfig]
  -[WFInternalAppSettings networkFailedAttemptsLimit]
  -[WFInternalAppSettings networkSwitchExpirationTimeInSeconds]
  -[WFInternalAppSettings aqiEnabledCountryCodes]
  -[WFInternalAppSettings apiVersionFallback]
  -[WFInternalAppSettings disablePriorityForecastRequestQueue]
  -[WFInternalAppSettings locationUpdateMinDistance]
  -[WFInternalAppSettings copyWithZone:]
  -[WFInternalAppSettings privateUserIdentifierResetTimeInterval]
  -[WFInternalAppSettings appAnalyticsEndpointUrl]
  -[WFInternalAppSettings userIdentifierResetTimeInterval]
  -[WFInternalAppSettings telemetrySamplingRate]
  -[WFInternalAppSettings disableForecastRequestCancelation]
  -[WFInternalAppSettings disableLimitReverseGeocoding]
  -[WFInternalAppSettings cachedGeocodeLocationExpirationTimeInterval]
  -[WFInternalAppSettings dataSamplingRate]
  -[WFInternalAppSettings locationUpdateMinTimeInterval]
  -[WFInternalAppSettings locationGeocodingSamplingRate]
  -[WFInternalAppSettings apiVersion]
  -[WFInternalAppSettings locationNumDecimalsOfPrecision]


WFAirPollutant : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *localizedName
 @property  NSString *localizedDescription
 @property  double amount
 @property  NSString *unit
 @property  NSString *localizedCategoryDescription
 @property  unsigned long categoryIndex
 @property  unsigned long index

  // class methods
  +[WFAirPollutant supportsSecureCoding]

  // instance methods
  -[WFAirPollutant localizedDescription]
  -[WFAirPollutant setLocalizedName:]
  -[WFAirPollutant setIndex:]
  -[WFAirPollutant index]
  -[WFAirPollutant encodeWithCoder:]
  -[WFAirPollutant unit]
  -[WFAirPollutant .cxx_destruct]
  -[WFAirPollutant setLocalizedDescription:]
  -[WFAirPollutant localizedName]
  -[WFAirPollutant copyWithZone:]
  -[WFAirPollutant setUnit:]
  -[WFAirPollutant initWithCoder:]
  -[WFAirPollutant amount]
  -[WFAirPollutant setAmount:]
  -[WFAirPollutant categoryIndex]
  -[WFAirPollutant setCategoryIndex:]
  -[WFAirPollutant localizedCategoryDescription]
  -[WFAirPollutant setLocalizedCategoryDescription:]


WFLocationQueryGeocodeCacheManager : NSObject
 @property  {os_unfair_lock_s=I} dataSynchronizationLock
 @property  NSMutableDictionary *geocodeCache
 @property  double expirationTime

  // class methods
  +[WFLocationQueryGeocodeCacheManager sharedManager]

  // instance methods
  -[WFLocationQueryGeocodeCacheManager expirationTime]
  -[WFLocationQueryGeocodeCacheManager .cxx_destruct]
  -[WFLocationQueryGeocodeCacheManager dataSynchronizationLock]
  -[WFLocationQueryGeocodeCacheManager init]
  -[WFLocationQueryGeocodeCacheManager updateCacheForKey:withLocation:]
  -[WFLocationQueryGeocodeCacheManager cachedLocationForKey:]
  -[WFLocationQueryGeocodeCacheManager _discardExpiredLocations]
  -[WFLocationQueryGeocodeCacheManager _persistInfoToDisk]
  -[WFLocationQueryGeocodeCacheManager _persistedInfoURL]
  -[WFLocationQueryGeocodeCacheManager _persistedInfoFromDisk]
  -[WFLocationQueryGeocodeCacheManager geocodeCache]


WFWeatherDataServiceRequestFormatterV1 : NSObject <WFForecastRequestFormatter, WFForecastRequestFormatterMultiHost>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherDataServiceRequestFormatterV1 aqiRequestForScaleNamed:language:]
  +[WFWeatherDataServiceRequestFormatterV1 forecastRequest:forLocation:locale:date:]
  +[WFWeatherDataServiceRequestFormatterV1 geocodePathForLocation:rules:]
  +[WFWeatherDataServiceRequestFormatterV1 languagePathForLocale:]
  +[WFWeatherDataServiceRequestFormatterV1 forecastRequest:forLocation:withUnits:locale:date:rules:options:]
  +[WFWeatherDataServiceRequestFormatterV1 hostURLForEnvironment:]
  +[WFWeatherDataServiceRequestFormatterV1 hostURLForService]


WFTypes : NSObject
  // class methods
  +[WFTypes WeatherDescriptions]


WFWeatherConditions : NSObject <NSCopying, NSSecureCoding>
 @property  NSMutableDictionary *components
 @property  {os_unfair_lock_s=I} componentsLock
 @property  WFLocation *location
 @property  BOOL nightForecast

  // class methods
  +[WFWeatherConditions supportsSecureCoding]
  +[WFWeatherConditions calendar]
  +[WFWeatherConditions dateComponentCalendarUnits]

  // instance methods
  -[WFWeatherConditions valueForComponent:]
  -[WFWeatherConditions setComponents:]
  -[WFWeatherConditions setObject:forKeyedSubscript:]
  -[WFWeatherConditions encodeWithCoder:]
  -[WFWeatherConditions isNightForecast]
  -[WFWeatherConditions setValueSync:forComponent:]
  -[WFWeatherConditions setComponentsLock:]
  -[WFWeatherConditions .cxx_destruct]
  -[WFWeatherConditions componentsLock]
  -[WFWeatherConditions wf_isDayIfSunrise:sunset:]
  -[WFWeatherConditions setValue:forComponent:]
  -[WFWeatherConditions setLocation:]
  -[WFWeatherConditions _commonInit]
  -[WFWeatherConditions dictionaryRepresentation]
  -[WFWeatherConditions setNightForecast:]
  -[WFWeatherConditions objectForKeyedSubscript:]
  -[WFWeatherConditions wf_isDay]
  -[WFWeatherConditions copyWithZone:]
  -[WFWeatherConditions location]
  -[WFWeatherConditions components]
  -[WFWeatherConditions allComponents]
  -[WFWeatherConditions valueForComponentSync:]
  -[WFWeatherConditions init]
  -[WFWeatherConditions editLinksWithLocale:trackingParameter:]
  -[WFWeatherConditions initWithCoder:]


WFWeatherDataServiceParserV1 : NSObject <WFForecastDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherDataServiceParserV1 dateFormatter]
  +[WFWeatherDataServiceParserV1 dateFormatter]

  // instance methods
  -[WFWeatherDataServiceParserV1 parseAlmanacFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherDataServiceParserV1 parseSevereWeatherEventsFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 dailyHistoryDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseChangeForecastFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 hourlyHistoryDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parsePollutants:]
  -[WFWeatherDataServiceParserV1 airQualityDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseForecastData:types:location:units:locale:date:error:rules:]
  -[WFWeatherDataServiceParserV1 parseForecastDataFromDict:types:location:units:locale:date:error:rules:]
  -[WFWeatherDataServiceParserV1 parsePollenFromData:]
  -[WFWeatherDataServiceParserV1 parseHourlyHistoryFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 parseDailyForecastFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 nextHourPrecipitationEventDictFromData:types:]
  -[WFWeatherDataServiceParserV1 dailyAlmanacDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseAQIScaleNamed:data:error:]
  -[WFWeatherDataServiceParserV1 parsedGradientStopFromDictionary:]
  -[WFWeatherDataServiceParserV1 changeForecastDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseNowLinksFromData:intoConditions:]
  -[WFWeatherDataServiceParserV1 parsedCategoryFromDictionary:]
  -[WFWeatherDataServiceParserV1 parseCurrentObservationsFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 parseDailyHistoryFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 parseWeatherComponentsFromData:intoConditions:withUnit:]
  -[WFWeatherDataServiceParserV1 dailyForecastDictFromData:types:]
  -[WFWeatherDataServiceParserV1 pollenDictFromData:types:]
  -[WFWeatherDataServiceParserV1 currentObservationsDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseHourlyForecastFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 parseMetaDataFromData:]
  -[WFWeatherDataServiceParserV1 parseWeatherComponentsFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 isProviderAttribution:stillValidWithMetadata:]
  -[WFWeatherDataServiceParserV1 parseNextHourPrecipitationFromData:withUnit:]
  -[WFWeatherDataServiceParserV1 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherDataServiceParserV1 parseAirQualityFromData:locale:]
  -[WFWeatherDataServiceParserV1 hourlyForecastDictFromData:types:]
  -[WFWeatherDataServiceParserV1 nowLinksDictFromData:types:]
  -[WFWeatherDataServiceParserV1 severeWeatherEventDictFromData:types:]


WFURLComponents : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL isLocalWeatherCity
 @property  unsigned long cityIndex
 @property  NSLocale *locale
 @property  NSString *platform
 @property  unsigned long destination
 @property  CLLocation *location
 @property  NSString *locationName
 @property  BOOL showHourlyWeatherOnly
 @property  NSURL *URL

  // class methods
  +[WFURLComponents supportsSecureCoding]
  +[WFURLComponents locationForURLComponents:completion:]
  +[WFURLComponents locationForURL:completion:]
  +[WFURLComponents componentsForURL:]
  +[WFURLComponents componentsForLocation:]

  // instance methods
  -[WFURLComponents initWithLocation:]
  -[WFURLComponents setDestination:]
  -[WFURLComponents destination]
  -[WFURLComponents setPlatform:]
  -[WFURLComponents platform]
  -[WFURLComponents locationName]
  -[WFURLComponents encodeWithCoder:]
  -[WFURLComponents .cxx_destruct]
  -[WFURLComponents locale]
  -[WFURLComponents setLocation:]
  -[WFURLComponents setLocale:]
  -[WFURLComponents copyWithZone:]
  -[WFURLComponents location]
  -[WFURLComponents URL]
  -[WFURLComponents isEqual:]
  -[WFURLComponents init]
  -[WFURLComponents initWithCoder:]
  -[WFURLComponents isEqualToComponents:]
  -[WFURLComponents setLocationName:]
  -[WFURLComponents _canBuildURLWithProvidedComponents]
  -[WFURLComponents showHourlyWeatherOnly]
  -[WFURLComponents setShowHourlyWeatherOnly:]
  -[WFURLComponents isLocalWeatherCity]
  -[WFURLComponents setIsLocalWeatherCity:]
  -[WFURLComponents cityIndex]
  -[WFURLComponents setCityIndex:]


WFAirQualityConditions : NSObject <NSSecureCoding, NSCopying>
 @property  WFLocation *location
 @property  NSDate *expirationDate
 @property  NSDate *date
 @property  BOOL temporarilyUnavailable
 @property  NSString *provider
 @property  WFAirQualityProviderAttribution *providerAttribution
 @property  NSArray *pollutants
 @property  WFAirPollutant *primaryPollutant
 @property  unsigned long airQualityIndex
 @property  unsigned long significance
 @property  NSURL *learnMoreURL
 @property  unsigned long currentCategoryIndex
 @property  WFAQIScaleCategory *currentScaleCategory
 @property  NSString *scaleIdentifier
 @property  WFAQIScale *scale
 @property  NSString *localizedRecommendation
 @property  NSString *localizedDisclaimer
 @property  unsigned long category
 @property  NSLocale *locale
 @property  NSString *localizedAirQualityCategory
 @property  NSString *airQualityScale
 @property  unsigned long localizedAirQualityIndex
 @property  WFAQIScaleCategory *localizedAirQualityScaleCategory
 @property  BOOL expired

  // class methods
  +[WFAirQualityConditions supportsSecureCoding]

  // instance methods
  -[WFAirQualityConditions setCategory:]
  -[WFAirQualityConditions expirationDate]
  -[WFAirQualityConditions setExpirationDate:]
  -[WFAirQualityConditions encodeWithCoder:]
  -[WFAirQualityConditions setLearnMoreURL:]
  -[WFAirQualityConditions setDate:]
  -[WFAirQualityConditions date]
  -[WFAirQualityConditions category]
  -[WFAirQualityConditions .cxx_destruct]
  -[WFAirQualityConditions setSignificance:]
  -[WFAirQualityConditions temporarilyUnavailable]
  -[WFAirQualityConditions provider]
  -[WFAirQualityConditions locale]
  -[WFAirQualityConditions setLocation:]
  -[WFAirQualityConditions significance]
  -[WFAirQualityConditions scale]
  -[WFAirQualityConditions learnMoreURL]
  -[WFAirQualityConditions setLocale:]
  -[WFAirQualityConditions copyWithZone:]
  -[WFAirQualityConditions isExpired]
  -[WFAirQualityConditions location]
  -[WFAirQualityConditions setTemporarilyUnavailable:]
  -[WFAirQualityConditions setScale:]
  -[WFAirQualityConditions setProvider:]
  -[WFAirQualityConditions initWithCoder:]
  -[WFAirQualityConditions airQualityIndex]
  -[WFAirQualityConditions setAirQualityIndex:]
  -[WFAirQualityConditions pollutants]
  -[WFAirQualityConditions setPollutants:]
  -[WFAirQualityConditions currentCategoryIndex]
  -[WFAirQualityConditions setCurrentCategoryIndex:]
  -[WFAirQualityConditions providerAttribution]
  -[WFAirQualityConditions setProviderAttribution:]
  -[WFAirQualityConditions scaleIdentifier]
  -[WFAirQualityConditions setScaleIdentifier:]
  -[WFAirQualityConditions currentScaleCategory]
  -[WFAirQualityConditions setCurrentScaleCategory:]
  -[WFAirQualityConditions primaryPollutant]
  -[WFAirQualityConditions setPrimaryPollutant:]
  -[WFAirQualityConditions localizedRecommendation]
  -[WFAirQualityConditions setLocalizedRecommendation:]
  -[WFAirQualityConditions localizedDisclaimer]
  -[WFAirQualityConditions setLocalizedDisclaimer:]
  -[WFAirQualityConditions localizedAirQualityCategory]
  -[WFAirQualityConditions setLocalizedAirQualityCategory:]
  -[WFAirQualityConditions airQualityScale]
  -[WFAirQualityConditions setAirQualityScale:]
  -[WFAirQualityConditions localizedAirQualityIndex]
  -[WFAirQualityConditions setLocalizedAirQualityIndex:]
  -[WFAirQualityConditions localizedAirQualityScaleCategory]
  -[WFAirQualityConditions setLocalizedAirQualityScaleCategory:]


WFSevereWeatherEvent : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *areaName
 @property  NSString *eventDescription
 @property  NSString *source
 @property  NSDate *expirationDate
 @property  NSURL *URL
 @property  unsigned long importance

  // class methods
  +[WFSevereWeatherEvent supportsSecureCoding]

  // instance methods
  -[WFSevereWeatherEvent source]
  -[WFSevereWeatherEvent expirationDate]
  -[WFSevereWeatherEvent identifier]
  -[WFSevereWeatherEvent encodeWithCoder:]
  -[WFSevereWeatherEvent .cxx_destruct]
  -[WFSevereWeatherEvent copyWithZone:]
  -[WFSevereWeatherEvent URL]
  -[WFSevereWeatherEvent importance]
  -[WFSevereWeatherEvent initWithCoder:]
  -[WFSevereWeatherEvent areaName]
  -[WFSevereWeatherEvent eventDescription]
  -[WFSevereWeatherEvent initWithIdentifier:areaName:eventDescription:source:expirationDate:URL:importance:]


WFWeatherStoreCallbackWrapper : NSObject
 @property  unsigned long requestType
 @property  @? forecastRetrievalCompletionBlock
 @property  @? aqiScaleRetrievalCompletionBlock
 @property  BOOL executedCompletionBlock
 @property  {os_unfair_lock_s=I} lock

  // instance methods
  -[WFWeatherStoreCallbackWrapper forecastRetrievalCompletionBlock]
  -[WFWeatherStoreCallbackWrapper requestType]
  -[WFWeatherStoreCallbackWrapper .cxx_destruct]
  -[WFWeatherStoreCallbackWrapper setRequestType:]
  -[WFWeatherStoreCallbackWrapper setLock:]
  -[WFWeatherStoreCallbackWrapper executedCompletionBlock]
  -[WFWeatherStoreCallbackWrapper aqiScaleRetrievalCompletionBlock]
  -[WFWeatherStoreCallbackWrapper lock]
  -[WFWeatherStoreCallbackWrapper initWithForecastRetrievalBlock:]
  -[WFWeatherStoreCallbackWrapper executeCallbackwithResponse:error:]
  -[WFWeatherStoreCallbackWrapper initWithAQIScaleRetrievalBlock:]
  -[WFWeatherStoreCallbackWrapper setForecastRetrievalCompletionBlock:]
  -[WFWeatherStoreCallbackWrapper setAqiScaleRetrievalCompletionBlock:]


WFWeatherStoreResponseDataWrapper : NSObject
 @property  unsigned long requestType
 @property  WFParsedForecastData *forecastData
 @property  WFAQIScale *aqiScale

  // instance methods
  -[WFWeatherStoreResponseDataWrapper aqiScale]
  -[WFWeatherStoreResponseDataWrapper requestType]
  -[WFWeatherStoreResponseDataWrapper initWithForecastData:]
  -[WFWeatherStoreResponseDataWrapper .cxx_destruct]
  -[WFWeatherStoreResponseDataWrapper setRequestType:]
  -[WFWeatherStoreResponseDataWrapper setForecastData:]
  -[WFWeatherStoreResponseDataWrapper setAqiScale:]
  -[WFWeatherStoreResponseDataWrapper forecastData]
  -[WFWeatherStoreResponseDataWrapper initWithAQIScale:]


WFWeatherStoreService : NSObject <WFWeatherStore>
 @property  NSObject<OS_dispatch_queue> *incomingRequestQueue
 @property  NSObject<OS_dispatch_queue> *parseQueue
 @property  NSObject<OS_dispatch_queue> *mapQueue
 @property  {os_unfair_lock_s=I} retryLock
 @property  NSMutableDictionary *UUIDToCallbackMap
 @property  NSMutableDictionary *UUIDToURLMap
 @property  NSMutableDictionary *URLToTaskMap
 @property  NSMutableDictionary *URLToCallbackMap
 @property  WFWeatherStoreServiceConfiguration *configuration
 @property  WFWeatherStoreCache *cache
 @property  WFNetworkRetryManager *retryManager
 @property  @? forecastRequestStartingCallback
 @property  @? locationGeocodeForCoordinateRequestStartingCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherStoreService setMapQueue:]
  -[WFWeatherStoreService setURLToTaskMap:]
  -[WFWeatherStoreService setConfiguration:]
  -[WFWeatherStoreService setCache:]
  -[WFWeatherStoreService _cachedDailyPollenForecastedConditionsForLocation:date:]
  -[WFWeatherStoreService invalidateCacheWithIdentifier:]
  -[WFWeatherStoreService _setTask:requestIdentifier:callback:forURL:]
  -[WFWeatherStoreService _cachedDailyForecastedConditionsForLocation:date:]
  -[WFWeatherStoreService cancelTaskWithIdentifier:]
  -[WFWeatherStoreService _cacheObject:type:date:forLocation:]
  -[WFWeatherStoreService setForecastRequestStartingCallback:]
  -[WFWeatherStoreService _enumerateForecastTypesIn:usingBlock:]
  -[WFWeatherStoreService _currentScaleCategoryForScale:index:]
  -[WFWeatherStoreService _forecastConditionsForTypes:location:units:locale:date:requestIdentifier:requestOptions:completionHandler:]
  -[WFWeatherStoreService configuration]
  -[WFWeatherStoreService forecastForLocation:locale:onDate:requestIdentifier:options:completionHandler:]
  -[WFWeatherStoreService _cachedSevereWeatherEventsForLocation:date:]
  -[WFWeatherStoreService _cachedData:forLocation:date:]
  -[WFWeatherStoreService forecast:forLocation:locale:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService dealloc]
  -[WFWeatherStoreService _cacheParsedForecastData:types:location:date:requestIdentifier:]
  -[WFWeatherStoreService UUIDToCallbackMap]
  -[WFWeatherStoreService retryManager]
  -[WFWeatherStoreService cache]
  -[WFWeatherStoreService .cxx_destruct]
  -[WFWeatherStoreService initWithConfiguration:error:]
  -[WFWeatherStoreService setUUIDToURLMap:]
  -[WFWeatherStoreService forecast:forLocation:withUnits:locale:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService retryLock]
  -[WFWeatherStoreService URLToTaskMap]
  -[WFWeatherStoreService setURLToCallbackMap:]
  -[WFWeatherStoreService setIncomingRequestQueue:]
  -[WFWeatherStoreService requestFailureForAPIVersion:error:]
  -[WFWeatherStoreService airQualityForLocation:locale:requestIdentifier:options:completionHandler:]
  -[WFWeatherStoreService setParseQueue:]
  -[WFWeatherStoreService _forecastConditionsForTWCAQIAndTypes:location:locale:date:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService locationGeocodeForCoordinateRequestStartingCallback]
  -[WFWeatherStoreService _addCallback:requestIdentifier:forURL:]
  -[WFWeatherStoreService completeErroneousForecastRequestWithHandler:requestIdentifier:error:]
  -[WFWeatherStoreService dailyForecastForLocation:locale:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService _cleanupCallbacksAndTasksForURL:]
  -[WFWeatherStoreService languageForLocale:]
  -[WFWeatherStoreService _submitRequest:withIdentifier:forLocation:forecastTypes:configuration:units:locale:date:apiVersion:completionHandler:]
  -[WFWeatherStoreService incomingRequestQueue]
  -[WFWeatherStoreService initWithConfiguration:]
  -[WFWeatherStoreService _cachedAirQualityConditionsForLocation:date:]
  -[WFWeatherStoreService forecastRequestStartingCallback]
  -[WFWeatherStoreService _cachedHistoricalObservationsForLast24hForLocation:date:]
  -[WFWeatherStoreService _handleDataTaskCompletionWithData:httpResponse:apiVersion:identifier:requestURL:dataTask:dataTaskError:startDate:]
  -[WFWeatherStoreService parseQueue]
  -[WFWeatherStoreService _cachedChangeForecastForLocation:date:]
  -[WFWeatherStoreService _submitRequest:withIdentifier:forScaleNamed:language:configuration:apiVersion:completionHandler:]
  -[WFWeatherStoreService _cachedCurrentObservationsForLocation:date:]
  -[WFWeatherStoreService forecast:forLocation:withUnits:locale:requestIdentifier:requestOptions:completionHandler:]
  -[WFWeatherStoreService setRetryManager:]
  -[WFWeatherStoreService setLocationGeocodeForCoordinateRequestStartingCallback:]
  -[WFWeatherStoreService _isConnectivityAvailableForWeatherHost:]
  -[WFWeatherStoreService _cachedNextHourPrecipitationForLocation:date:]
  -[WFWeatherStoreService apiVersionForSettings:]
  -[WFWeatherStoreService hourlyForecastForLocation:locale:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService _cachedHourlyForecastedConditionsForLocation:date:]
  -[WFWeatherStoreService setRetryLock:]
  -[WFWeatherStoreService URLToCallbackMap]
  -[WFWeatherStoreService setUUIDToCallbackMap:]
  -[WFWeatherStoreService _forecastConditionsForTypes:location:locale:date:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService UUIDToURLMap]
  -[WFWeatherStoreService init]
  -[WFWeatherStoreService _taskForURL:]
  -[WFWeatherStoreService mapQueue]
  -[WFWeatherStoreService _cancelWithRequestIdentifier:]
  -[WFWeatherStoreService requestSuccessForAPIVersion:]
  -[WFWeatherStoreService _executeCallbacksForURL:responseData:error:]


WFAggregateCommonResponse : WFResponse <NSCopying, NSSecureCoding>
 @property  WFAirQualityConditions *airQualityObservations
 @property  WFWeatherConditions *currentObservations
 @property  NSArray *lastTwentyFourHoursOfObservations
 @property  NSArray *hourlyForecastedConditions
 @property  NSArray *dailyForecastedConditions
 @property  NSArray *dailyPollenForecastedConditions
 @property  NSArray *changeForecasts
 @property  NSArray *severeWeatherEvents
 @property  WFNextHourPrecipitation *nextHourPrecipitation
 @property  BOOL responseWasFromCache
 @property  NSData *rawAPIData

  // class methods
  +[WFAggregateCommonResponse supportsSecureCoding]

  // instance methods
  -[WFAggregateCommonResponse setNextHourPrecipitation:]
  -[WFAggregateCommonResponse lastTwentyFourHoursOfObservations]
  -[WFAggregateCommonResponse encodeWithCoder:]
  -[WFAggregateCommonResponse setLastTwentyFourHoursOfObservations:]
  -[WFAggregateCommonResponse changeForecasts]
  -[WFAggregateCommonResponse .cxx_destruct]
  -[WFAggregateCommonResponse responseWasFromCache]
  -[WFAggregateCommonResponse setSevereWeatherEvents:]
  -[WFAggregateCommonResponse setChangeForecasts:]
  -[WFAggregateCommonResponse rawAPIData]
  -[WFAggregateCommonResponse copyWithZone:]
  -[WFAggregateCommonResponse severeWeatherEvents]
  -[WFAggregateCommonResponse airQualityObservations]
  -[WFAggregateCommonResponse setResponseWasFromCache:]
  -[WFAggregateCommonResponse setRawAPIData:]
  -[WFAggregateCommonResponse nextHourPrecipitation]
  -[WFAggregateCommonResponse setAirQualityObservations:]
  -[WFAggregateCommonResponse initWithCoder:]
  -[WFAggregateCommonResponse currentObservations]
  -[WFAggregateCommonResponse hourlyForecastedConditions]
  -[WFAggregateCommonResponse dailyForecastedConditions]
  -[WFAggregateCommonResponse dailyPollenForecastedConditions]
  -[WFAggregateCommonResponse setCurrentObservations:]
  -[WFAggregateCommonResponse setHourlyForecastedConditions:]
  -[WFAggregateCommonResponse setDailyForecastedConditions:]
  -[WFAggregateCommonResponse setDailyPollenForecastedConditions:]


WFWeatherDataServiceParserMetadataV1 : NSObject
 @property  NSDate *readDate
 @property  NSDate *expireDate
 @property  unsigned long version
 @property  WFLocation *location
 @property  NSString *language
 @property  NSString *providerName
 @property  NSURL *providerLogoURL
 @property  long long dataOrigination
 @property  BOOL temporarilyUnavailable

  // instance methods
  -[WFWeatherDataServiceParserMetadataV1 setExpireDate:]
  -[WFWeatherDataServiceParserMetadataV1 setLanguage:]
  -[WFWeatherDataServiceParserMetadataV1 expireDate]
  -[WFWeatherDataServiceParserMetadataV1 .cxx_destruct]
  -[WFWeatherDataServiceParserMetadataV1 setDataOrigination:]
  -[WFWeatherDataServiceParserMetadataV1 temporarilyUnavailable]
  -[WFWeatherDataServiceParserMetadataV1 setProviderName:]
  -[WFWeatherDataServiceParserMetadataV1 setLocation:]
  -[WFWeatherDataServiceParserMetadataV1 dataOrigination]
  -[WFWeatherDataServiceParserMetadataV1 setReadDate:]
  -[WFWeatherDataServiceParserMetadataV1 version]
  -[WFWeatherDataServiceParserMetadataV1 language]
  -[WFWeatherDataServiceParserMetadataV1 providerLogoURL]
  -[WFWeatherDataServiceParserMetadataV1 location]
  -[WFWeatherDataServiceParserMetadataV1 setTemporarilyUnavailable:]
  -[WFWeatherDataServiceParserMetadataV1 setProviderLogoURL:]
  -[WFWeatherDataServiceParserMetadataV1 setVersion:]
  -[WFWeatherDataServiceParserMetadataV1 readDate]
  -[WFWeatherDataServiceParserMetadataV1 providerName]


WFAQIScale : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *displayName
 @property  NSString *displayLabel
 @property  BOOL numerical
 @property  BOOL ascending
 @property  {_NSRange=QQ} range
 @property  NSArray *categories
 @property  WFAQIScaleGradient *gradient

  // class methods
  +[WFAQIScale supportsSecureCoding]

  // instance methods
  -[WFAQIScale displayLabel]
  -[WFAQIScale gradient]
  -[WFAQIScale categories]
  -[WFAQIScale identifier]
  -[WFAQIScale setGradient:]
  -[WFAQIScale encodeWithCoder:]
  -[WFAQIScale setDisplayLabel:]
  -[WFAQIScale .cxx_destruct]
  -[WFAQIScale setDisplayName:]
  -[WFAQIScale setRange:]
  -[WFAQIScale isNumerical]
  -[WFAQIScale setIdentifier:]
  -[WFAQIScale copyWithZone:]
  -[WFAQIScale range]
  -[WFAQIScale displayName]
  -[WFAQIScale setAscending:]
  -[WFAQIScale isEqual:]
  -[WFAQIScale setCategories:]
  -[WFAQIScale isAscending]
  -[WFAQIScale initWithCoder:]
  -[WFAQIScale isEqualToScale:]
  -[WFAQIScale setNumerical:]


WFWeatherDataServiceRequestSigner : NSObject
  // class methods
  +[WFWeatherDataServiceRequestSigner roundDate:toMinutes:]
  +[WFWeatherDataServiceRequestSigner buildAuthHeader:withSecret:andDate:]
  +[WFWeatherDataServiceRequestSigner signRequest:withSecret:andDate:]
  +[WFWeatherDataServiceRequestSigner signRequest:withDate:]


WFWeatherHistorical1DayParserV2 : NSObject <WFForecastDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherHistorical1DayParserV2 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherHistorical1DayParserV2 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherHistorical1DayParserV2 parseHistoricalForecast:location:date:error:]
  -[WFWeatherHistorical1DayParserV2 parseHistoricalForecastConditionsFromObservations:forDate:]
  -[WFWeatherHistorical1DayParserV2 parseForecastConditionsFromObservations:]


WFNextHourPrecipitationMinute : NSObject <NSCopying, NSSecureCoding>
 @property  double intensity
 @property  double chance
 @property  double perceivedIntensity
 @property  NSDate *date

  // class methods
  +[WFNextHourPrecipitationMinute supportsSecureCoding]

  // instance methods
  -[WFNextHourPrecipitationMinute intensity]
  -[WFNextHourPrecipitationMinute encodeWithCoder:]
  -[WFNextHourPrecipitationMinute date]
  -[WFNextHourPrecipitationMinute .cxx_destruct]
  -[WFNextHourPrecipitationMinute copyWithZone:]
  -[WFNextHourPrecipitationMinute initWithCoder:]
  -[WFNextHourPrecipitationMinute initWithIntensity:chance:perceivedIntensity:date:]
  -[WFNextHourPrecipitationMinute chance]
  -[WFNextHourPrecipitationMinute perceivedIntensity]


WFAirQualityResponse : WFResponse <NSSecureCoding>
 @property  BOOL responseWasFromCache
 @property  NSData *rawAPIData
 @property  WFAirQualityConditions *airQualityConditions

  // class methods
  +[WFAirQualityResponse supportsSecureCoding]

  // instance methods
  -[WFAirQualityResponse encodeWithCoder:]
  -[WFAirQualityResponse .cxx_destruct]
  -[WFAirQualityResponse responseWasFromCache]
  -[WFAirQualityResponse rawAPIData]
  -[WFAirQualityResponse setResponseWasFromCache:]
  -[WFAirQualityResponse setRawAPIData:]
  -[WFAirQualityResponse initWithCoder:]
  -[WFAirQualityResponse airQualityConditions]
  -[WFAirQualityResponse setAirQualityConditions:]


WFTemperatureUnitChangeRequest : WFTemperatureUnitRequest
 @property  int temperatureUnit

  // instance methods
  -[WFTemperatureUnitChangeRequest startWithService:]
  -[WFTemperatureUnitChangeRequest temperatureUnit]
  -[WFTemperatureUnitChangeRequest setTemperatureUnit:]


WFWeatherUndergroundParser : NSObject <WFForecastDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherUndergroundParser expectedHourlyForecastCount]
  +[WFWeatherUndergroundParser expectedDailyForecastCount]
  +[WFWeatherUndergroundParser componentsForCurrentForecast]
  +[WFWeatherUndergroundParser componentsForHourlyForecasts]
  +[WFWeatherUndergroundParser componentsForDailyForecasts]
  +[WFWeatherUndergroundParser conditionFromWeatherUndergroundPhrase:]

  // instance methods
  -[WFWeatherUndergroundParser parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherUndergroundParser parseForecastData:types:location:locale:date:error:]
  -[WFWeatherUndergroundParser parseHistoricalForecast:error:]
  -[WFWeatherUndergroundParser logParsingErrorAtKeyPath:error:]
  -[WFWeatherUndergroundParser sanitizedNumberForKeyPath:dict:]
  -[WFWeatherUndergroundParser sanitizedTemperatureForCelsiusKeyPath:fahrenheitKeyPath:dict:]
  -[WFWeatherUndergroundParser dateFromUTCDict:toUnitGranularity:]


WFNetworkEvent : NSObject
 @property  long long eventType
 @property  NSDate *startDate
 @property  double DNSDuration
 @property  double connectDuration
 @property  double requestDuration
 @property  double responseDuration
 @property  unsigned long responseSize
 @property  unsigned long HTTPStatusCode
 @property  long long errorCode

  // instance methods
  -[WFNetworkEvent errorCode]
  -[WFNetworkEvent responseSize]
  -[WFNetworkEvent connectDuration]
  -[WFNetworkEvent initWithEventType:startDate:DNSDuration:connectDuration:requestDuration:responseDuration:responseSize:HTTPStatusCode:errorCode:]
  -[WFNetworkEvent .cxx_destruct]
  -[WFNetworkEvent eventType]
  -[WFNetworkEvent HTTPStatusCode]
  -[WFNetworkEvent responseDuration]
  -[WFNetworkEvent initWithEventType:startDate:error:]
  -[WFNetworkEvent requestDuration]
  -[WFNetworkEvent initWithEventType:metrics:]
  -[WFNetworkEvent startDate]
  -[WFNetworkEvent DNSDuration]


WFHourlyForecastRequest : WFAggregateForecastRequest
 @property  NSLocale *locale

  // instance methods
  -[WFHourlyForecastRequest initWithLocation:completionHandler:]
  -[WFHourlyForecastRequest startWithService:]
  -[WFHourlyForecastRequest .cxx_destruct]
  -[WFHourlyForecastRequest locale]
  -[WFHourlyForecastRequest setLocale:]


WFForecastResponse : WFResponse <NSSecureCoding>
 @property  WFWeatherConditions *forecast
 @property  unsigned long forecastType
 @property  BOOL responseWasFromCache
 @property  NSData *rawAPIData

  // class methods
  +[WFForecastResponse supportsSecureCoding]

  // instance methods
  -[WFForecastResponse forecastType]
  -[WFForecastResponse encodeWithCoder:]
  -[WFForecastResponse setForecastType:]
  -[WFForecastResponse .cxx_destruct]
  -[WFForecastResponse responseWasFromCache]
  -[WFForecastResponse rawAPIData]
  -[WFForecastResponse forecast]
  -[WFForecastResponse setResponseWasFromCache:]
  -[WFForecastResponse setRawAPIData:]
  -[WFForecastResponse initWithCoder:]
  -[WFForecastResponse setForecast:]


WFWeatherHistorical1DayRequestFormatterV2 : NSObject <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherHistorical1DayRequestFormatterV2 dateFormatter]
  +[WFWeatherHistorical1DayRequestFormatterV2 forecastRequest:forLocation:locale:date:]
  +[WFWeatherHistorical1DayRequestFormatterV2 forecastRequest:forLocation:withUnits:locale:date:rules:options:]
  +[WFWeatherHistorical1DayRequestFormatterV2 hostURLForService]


WFFavoriteLocationRequest : WFTask
 @property  @? resultHandler

  // instance methods
  -[WFFavoriteLocationRequest resultHandler]
  -[WFFavoriteLocationRequest handleResponse:]
  -[WFFavoriteLocationRequest startWithService:]
  -[WFFavoriteLocationRequest .cxx_destruct]
  -[WFFavoriteLocationRequest handleCancellation]
  -[WFFavoriteLocationRequest handleError:forResponseIdentifier:]
  -[WFFavoriteLocationRequest initWithResultHandler:]


WFWeatherChannelAPIConfiguration : NSObject <WFAPIConfigurationProtocol>
 @property  NSMutableDictionary *requestFormatterForForecastType
 @property  NSMutableDictionary *requestParserForForecastType
 @property  Class defaultForecastRequestFormatterClass
 @property  <WFForecastDataParser> *defaultForecastParser
 @property  BOOL isValid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherChannelAPIConfiguration isValid]
  -[WFWeatherChannelAPIConfiguration .cxx_destruct]
  -[WFWeatherChannelAPIConfiguration parseForecast:data:location:units:locale:date:error:rules:]
  -[WFWeatherChannelAPIConfiguration copyWithZone:]
  -[WFWeatherChannelAPIConfiguration forecastRequestForTypes:location:units:date:error:rules:options:]
  -[WFWeatherChannelAPIConfiguration hostUrl]
  -[WFWeatherChannelAPIConfiguration initWithVersion:]
  -[WFWeatherChannelAPIConfiguration setRequestFormatter:forForecastType:]
  -[WFWeatherChannelAPIConfiguration setRequestParser:forForecastType:]
  -[WFWeatherChannelAPIConfiguration setDefaultForecastFormatter:]
  -[WFWeatherChannelAPIConfiguration requestFormatterForForecastType]
  -[WFWeatherChannelAPIConfiguration setRequestFormatterForForecastType:]
  -[WFWeatherChannelAPIConfiguration requestParserForForecastType]
  -[WFWeatherChannelAPIConfiguration setRequestParserForForecastType:]
  -[WFWeatherChannelAPIConfiguration defaultForecastRequestFormatterClass]
  -[WFWeatherChannelAPIConfiguration setDefaultForecastRequestFormatterClass:]
  -[WFWeatherChannelAPIConfiguration defaultForecastParser]
  -[WFWeatherChannelAPIConfiguration setDefaultForecastParser:]


WFTaskIdentifier : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSString *processName
 @property  int pid

  // class methods
  +[WFTaskIdentifier supportsSecureCoding]
  +[WFTaskIdentifier defaultIdentifier]

  // instance methods
  -[WFTaskIdentifier processName]
  -[WFTaskIdentifier encodeWithCoder:]
  -[WFTaskIdentifier .cxx_destruct]
  -[WFTaskIdentifier UUID]
  -[WFTaskIdentifier pid]
  -[WFTaskIdentifier copyWithZone:]
  -[WFTaskIdentifier isEqual:]
  -[WFTaskIdentifier init]
  -[WFTaskIdentifier initWithCoder:]


WFWeatherDataServiceAPIConfiguration : NSObject <WFAPIConfigurationProtocol>
 @property  Class forecastRequestFormatterClass
 @property  <WFForecastDataParser> *forecastParser
 @property  NSString *environment
 @property  BOOL isValid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherDataServiceAPIConfiguration forecastParser]
  -[WFWeatherDataServiceAPIConfiguration aqiRequestForScaleNamed:language:]
  -[WFWeatherDataServiceAPIConfiguration setForecastRequestFormatterClass:]
  -[WFWeatherDataServiceAPIConfiguration forecastRequestFormatterClass]
  -[WFWeatherDataServiceAPIConfiguration isValid]
  -[WFWeatherDataServiceAPIConfiguration .cxx_destruct]
  -[WFWeatherDataServiceAPIConfiguration parseForecast:data:location:units:locale:date:error:rules:]
  -[WFWeatherDataServiceAPIConfiguration parseAQIScaleNamed:data:error:]
  -[WFWeatherDataServiceAPIConfiguration initWithVersion:environment:]
  -[WFWeatherDataServiceAPIConfiguration setForecastParser:]
  -[WFWeatherDataServiceAPIConfiguration copyWithZone:]
  -[WFWeatherDataServiceAPIConfiguration forecastRequestForTypes:location:units:date:error:rules:options:]
  -[WFWeatherDataServiceAPIConfiguration hostUrl]
  -[WFWeatherDataServiceAPIConfiguration environment]


WFAQIScaleCacheManager : NSObject
 @property  {os_unfair_lock_s=I} dataSynchronizationLock
 @property  NSMutableDictionary *aqiScaleCache
 @property  WFAQIScale *defaultScale

  // class methods
  +[WFAQIScaleCacheManager sharedManager]

  // instance methods
  -[WFAQIScaleCacheManager .cxx_destruct]
  -[WFAQIScaleCacheManager defaultScale]
  -[WFAQIScaleCacheManager dataSynchronizationLock]
  -[WFAQIScaleCacheManager clearCache]
  -[WFAQIScaleCacheManager init]
  -[WFAQIScaleCacheManager _persistInfoToDisk]
  -[WFAQIScaleCacheManager _persistedInfoURL]
  -[WFAQIScaleCacheManager _persistedInfoFromDisk]
  -[WFAQIScaleCacheManager updateCacheWithScale:identifier:]
  -[WFAQIScaleCacheManager cachedScaleFromIdentifier:]
  -[WFAQIScaleCacheManager aqiScaleCache]


WFQueryDispatcher : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *queriesPendingResponse

  // instance methods
  -[WFQueryDispatcher invalidateCacheWithIdentifier:]
  -[WFQueryDispatcher fetchFavoriteLocationsWithTaskIdentifier:results:]
  -[WFQueryDispatcher cancelTaskWithIdentifier:]
  -[WFQueryDispatcher dispatchQuery:]
  -[WFQueryDispatcher .cxx_destruct]
  -[WFQueryDispatcher locationForCoordinate:taskIdentifier:results:]
  -[WFQueryDispatcher removePendingQueryWithIdentifier:]
  -[WFQueryDispatcher setQueue:]
  -[WFQueryDispatcher queriesPendingResponse]
  -[WFQueryDispatcher queue]
  -[WFQueryDispatcher locationForString:taskIdentifier:results:]
  -[WFQueryDispatcher setQueriesPendingResponse:]
  -[WFQueryDispatcher locationForSearchCompletion:taskIdentifier:results:]
  -[WFQueryDispatcher init]


WFResourceManager : NSObject
  // class methods
  +[WFResourceManager sharedManager]

  // instance methods
  -[WFResourceManager localizedStringForKey:]
  -[WFResourceManager tableName]
  -[WFResourceManager frameworkBundle]


WFWeatherChannelParserV3 : NSObject <WFForecastDataParser>
 @property  NSCalendar *calendar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherChannelParserV3 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherChannelParserV3 calendar]
  -[WFWeatherChannelParserV3 .cxx_destruct]
  -[WFWeatherChannelParserV3 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherChannelParserV3 init]
  -[WFWeatherChannelParserV3 _parseCommonComponents:intoConditions:]
  -[WFWeatherChannelParserV3 _parseCurrentConditions:]
  -[WFWeatherChannelParserV3 _parseForecastedConditions:individualForecastProcessingBlock:uniqueParsingBlock:]
  -[WFWeatherChannelParserV3 _parseDailyForecastedConditions:]
  -[WFWeatherChannelParserV3 _parseDailyPollenForecastedConditions:]
  -[WFWeatherChannelParserV3 _parseHourlyForecastedConditions:]
  -[WFWeatherChannelParserV3 _parseLastTwentyFourHoursOfObservations:]
  -[WFWeatherChannelParserV3 _parsePollutants:]
  -[WFWeatherChannelParserV3 _parseWebLinks:intoWeatherConditions:]
  -[WFWeatherChannelParserV3 parseAirQualityData:location:locale:error:]


WFResponse : NSObject <NSSecureCoding>
 @property  double executionTime
 @property  NSUUID *identifier
 @property  NSString *type
 @property  NSError *error

  // class methods
  +[WFResponse supportsSecureCoding]
  +[WFResponse responseWithIdentifier:error:]

  // instance methods
  -[WFResponse identifier]
  -[WFResponse encodeWithCoder:]
  -[WFResponse type]
  -[WFResponse error]
  -[WFResponse .cxx_destruct]
  -[WFResponse setError:]
  -[WFResponse initWithIdentifier:]
  -[WFResponse executionTime]
  -[WFResponse initWithCoder:]
  -[WFResponse initWithIdentifier:error:]
  -[WFResponse setExecutionTime:]


WFNetworkFailTracker : NSObject
 @property  int numConsecutiveFails
 @property  double lastFailTimeInSeconds

  // instance methods
  -[WFNetworkFailTracker incrementFailCount]
  -[WFNetworkFailTracker lastFailTimeExpiredForSettings:]
  -[WFNetworkFailTracker numConsecutiveFails]
  -[WFNetworkFailTracker lastFailTimeInSeconds]


WFNetworkRetryManager : NSObject
 @property  NSMutableDictionary *failTrackerDict
 @property  NSMutableSet *failingAPIVersionsSet
 @property  NSArray *apiVersions
 @property  NSArray *failingAPIVersions

  // instance methods
  -[WFNetworkRetryManager failingAPIVersionsSet]
  -[WFNetworkRetryManager failTrackerDict]
  -[WFNetworkRetryManager failingAPIVersions]
  -[WFNetworkRetryManager consecutiveFailsForAPIVersion:]
  -[WFNetworkRetryManager .cxx_destruct]
  -[WFNetworkRetryManager apiVersions]
  -[WFNetworkRetryManager requestFailureForAPIVersion:error:]
  -[WFNetworkRetryManager lastFailTimeInSecondsForAPIVersion:]
  -[WFNetworkRetryManager defaultAPIVersionIsFailingForSettings:failTracker:]
  -[WFNetworkRetryManager apiVersionForSettings:]
  -[WFNetworkRetryManager init]
  -[WFNetworkRetryManager requestSuccessForAPIVersion:]


WFChangeForecast : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *date
 @property  NSString *descriptionSameTimeZone
 @property  NSString *descriptionDifferentTimeZone

  // class methods
  +[WFChangeForecast supportsSecureCoding]

  // instance methods
  -[WFChangeForecast encodeWithCoder:]
  -[WFChangeForecast date]
  -[WFChangeForecast .cxx_destruct]
  -[WFChangeForecast copyWithZone:]
  -[WFChangeForecast initWithCoder:]
  -[WFChangeForecast initWithDate:descriptionSameTimeZone:descriptionDifferentTimeZone:]
  -[WFChangeForecast descriptionSameTimeZone]
  -[WFChangeForecast descriptionDifferentTimeZone]


WFTemperature : NSObject <NSCopying, NSSecureCoding>
 @property  double celsius
 @property  double fahrenheit
 @property  double kelvin

  // class methods
  +[WFTemperature supportsSecureCoding]

  // instance methods
  -[WFTemperature _unitIsHydrated:outputValue:]
  -[WFTemperature setFahrenheit:]
  -[WFTemperature temperatureForUnit:]
  -[WFTemperature encodeWithCoder:]
  -[WFTemperature isEqualToTemperature:]
  -[WFTemperature kelvin]
  -[WFTemperature celsius]
  -[WFTemperature setCelsius:]
  -[WFTemperature fahrenheit]
  -[WFTemperature copyWithZone:]
  -[WFTemperature _resetTemperatureValues]
  -[WFTemperature _setValue:forUnit:]
  -[WFTemperature setKelvin:]
  -[WFTemperature initWithTemperatureUnit:value:]
  -[WFTemperature isEqual:]
  -[WFTemperature init]
  -[WFTemperature initWithCoder:]


WFReachabilityConfigurationRequest : WFTask
 @property  @? resultHandler

  // instance methods
  -[WFReachabilityConfigurationRequest cleanup]
  -[WFReachabilityConfigurationRequest resultHandler]
  -[WFReachabilityConfigurationRequest handleResponse:]
  -[WFReachabilityConfigurationRequest startWithService:]
  -[WFReachabilityConfigurationRequest setResultHandler:]
  -[WFReachabilityConfigurationRequest requiresResponse]
  -[WFReachabilityConfigurationRequest .cxx_destruct]
  -[WFReachabilityConfigurationRequest handleCancellation]
  -[WFReachabilityConfigurationRequest handleError:forResponseIdentifier:]
  -[WFReachabilityConfigurationRequest initWithResultHandler:]


WFAirQualityProviderCompletionWrapper : NSObject
 @property  @? completion

  // instance methods
  -[WFAirQualityProviderCompletionWrapper completion]
  -[WFAirQualityProviderCompletionWrapper setCompletion:]
  -[WFAirQualityProviderCompletionWrapper .cxx_destruct]


WFAirQualityProviderAttribution : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *name
 @property  long long dataOrigination
 @property  NSObject<OS_dispatch_queue> *logoImageLoadingQueue
 @property  NSMutableArray *outstandingRequestsCompletionBlocks
 @property  BOOL logoRequestInFlight
 @property  {os_unfair_lock_s=I} dataSynchronizationLock
 @property  UIImage *cachedLogoImage
 @property  WFAirQualityProviderStation *station
 @property  NSURL *logoURL

  // class methods
  +[WFAirQualityProviderAttribution supportsSecureCoding]
  +[WFAirQualityProviderAttribution defaultProviderAttribution]

  // instance methods
  -[WFAirQualityProviderAttribution encodeWithCoder:]
  -[WFAirQualityProviderAttribution .cxx_destruct]
  -[WFAirQualityProviderAttribution _initInternal]
  -[WFAirQualityProviderAttribution setDataOrigination:]
  -[WFAirQualityProviderAttribution dataOrigination]
  -[WFAirQualityProviderAttribution dataSynchronizationLock]
  -[WFAirQualityProviderAttribution setName:]
  -[WFAirQualityProviderAttribution copyWithZone:]
  -[WFAirQualityProviderAttribution name]
  -[WFAirQualityProviderAttribution initWithCoder:]
  -[WFAirQualityProviderAttribution station]
  -[WFAirQualityProviderAttribution logoURL]
  -[WFAirQualityProviderAttribution setLogoURL:]
  -[WFAirQualityProviderAttribution setStation:]
  -[WFAirQualityProviderAttribution setDataSynchronizationLock:]
  -[WFAirQualityProviderAttribution initWithName:logoImage:dataOrigination:station:]
  -[WFAirQualityProviderAttribution initWithName:logoURL:dataOrigination:]
  -[WFAirQualityProviderAttribution initWithName:logoURL:dataOrigination:station:]
  -[WFAirQualityProviderAttribution loadLogoImageWithCompletion:]
  -[WFAirQualityProviderAttribution p_loadRemoteLogoImageForProvider:completion:]
  -[WFAirQualityProviderAttribution p_imageWithData:]
  -[WFAirQualityProviderAttribution p_checkRequestInFlight]
  -[WFAirQualityProviderAttribution p_setRequestInFlight]
  -[WFAirQualityProviderAttribution p_clearRequestInFlight]
  -[WFAirQualityProviderAttribution p_queueCompletionBlock:]
  -[WFAirQualityProviderAttribution p_invokeAndClearCompletionBlocksWithImage:error:]
  -[WFAirQualityProviderAttribution cachedLogoImage]
  -[WFAirQualityProviderAttribution setCachedLogoImage:]
  -[WFAirQualityProviderAttribution logoImageLoadingQueue]
  -[WFAirQualityProviderAttribution setLogoImageLoadingQueue:]
  -[WFAirQualityProviderAttribution outstandingRequestsCompletionBlocks]
  -[WFAirQualityProviderAttribution setOutstandingRequestsCompletionBlocks:]
  -[WFAirQualityProviderAttribution logoRequestInFlight]
  -[WFAirQualityProviderAttribution setLogoRequestInFlight:]


WFAQIScaleCategory : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *categoryName
 @property  NSString *color
 @property  NSString *glyph
 @property  NSString *recommendation
 @property  unsigned long categoryNumber
 @property  {_NSRange=QQ} range
 @property  unsigned long categoryIndex
 @property  NSString *localizedCategoryDescription

  // class methods
  +[WFAQIScaleCategory supportsSecureCoding]

  // instance methods
  -[WFAQIScaleCategory encodeWithCoder:]
  -[WFAQIScaleCategory .cxx_destruct]
  -[WFAQIScaleCategory setRange:]
  -[WFAQIScaleCategory setCategoryNumber:]
  -[WFAQIScaleCategory copyWithZone:]
  -[WFAQIScaleCategory color]
  -[WFAQIScaleCategory range]
  -[WFAQIScaleCategory categoryNumber]
  -[WFAQIScaleCategory setColor:]
  -[WFAQIScaleCategory glyph]
  -[WFAQIScaleCategory setGlyph:]
  -[WFAQIScaleCategory isEqual:]
  -[WFAQIScaleCategory initWithCoder:]
  -[WFAQIScaleCategory categoryName]
  -[WFAQIScaleCategory setCategoryName:]
  -[WFAQIScaleCategory recommendation]
  -[WFAQIScaleCategory categoryIndex]
  -[WFAQIScaleCategory setCategoryIndex:]
  -[WFAQIScaleCategory setRecommendation:]
  -[WFAQIScaleCategory localizedCategoryDescription]
  -[WFAQIScaleCategory setLocalizedCategoryDescription:]
  -[WFAQIScaleCategory initWithCategoryIndex:localizedCategoryDescription:]
  -[WFAQIScaleCategory isEqualToScaleCategory:]


WFWeatherHistorical30DayParserV3 : NSObject <WFForecastDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherHistorical30DayParserV3 dateFormatter]
  +[WFWeatherHistorical30DayParserV3 daysOfWeek]

  // instance methods
  -[WFWeatherHistorical30DayParserV3 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherHistorical30DayParserV3 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherHistorical30DayParserV3 parseHistorical30DayForecastDataFromJson:location:date:error:]
  -[WFWeatherHistorical30DayParserV3 getDataIndexFromFirstDayOfWeek:andRequestedDate:]


WFLocation : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *wf_weatherChannelGeocodeValue
 @property  long long archiveVersion
 @property  CLLocation *geoLocation
 @property  NSString *locationID
 @property  NSString *displayName
 @property  NSString *weatherDisplayName
 @property  NSString *weatherLocationName
 @property  NSString *city
 @property  NSString *county
 @property  NSString *state
 @property  NSString *stateAbbreviation
 @property  NSString *country
 @property  NSString *countryAbbreviation
 @property  NSTimeZone *timeZone
 @property  NSDate *creationDate
 @property  BOOL shouldQueryForAirQualityData
 @property  BOOL needsGeocoding

  // class methods
  +[WFLocation supportsSecureCoding]
  +[WFLocation currentArchiveVersion]
  +[WFLocation knownKeys]
  +[WFLocation locationsByFilteringDuplicates:]
  +[WFLocation locationsByConsolidatingDuplicates:originalOrder:]
  +[WFLocation locationsByConsolidatingDuplicatesInBucket:]

  // instance methods
  -[WFLocation timeZone]
  -[WFLocation sunrise:andSunset:forDate:]
  -[WFLocation setTimeZone:]
  -[WFLocation weatherDisplayName]
  -[WFLocation setCity:]
  -[WFLocation cloudDictionaryRepresentation]
  -[WFLocation encodeWithCoder:]
  -[WFLocation geoLocation]
  -[WFLocation state]
  -[WFLocation setGeoLocation:]
  -[WFLocation .cxx_destruct]
  -[WFLocation city]
  -[WFLocation stateAbbreviation]
  -[WFLocation initWithMapItem:isCurrentLocation:]
  -[WFLocation setStateAbbreviation:]
  -[WFLocation setDisplayName:]
  -[WFLocation creationDate]
  -[WFLocation county]
  -[WFLocation shouldQueryForAirQualityData]
  -[WFLocation summary]
  -[WFLocation archiveVersion]
  -[WFLocation initWithPlacemark:]
  -[WFLocation locationID]
  -[WFLocation initWithSearchResponse:]
  -[WFLocation wf_weatherChannelGeocodeValue]
  -[WFLocation initWithMapItem:]
  -[WFLocation setWeatherDisplayName:]
  -[WFLocation copyWithZone:]
  -[WFLocation setCreationDate:]
  -[WFLocation weatherLocationName]
  -[WFLocation isDayForDate:]
  -[WFLocation summaryThatIsCompact:]
  -[WFLocation setWeatherLocationName:]
  -[WFLocation _sunAlmanacForDate:]
  -[WFLocation displayName]
  -[WFLocation setCountry:]
  -[WFLocation localDataRepresentation]
  -[WFLocation initWithCloudDictionaryRepresentation:]
  -[WFLocation country]
  -[WFLocation setLocationID:]
  -[WFLocation isDay]
  -[WFLocation setCountryAbbreviation:]
  -[WFLocation setCounty:]
  -[WFLocation initWithLocalDataRepresentation:]
  -[WFLocation sunsetForDate:]
  -[WFLocation countryAbbreviation]
  -[WFLocation isEqual:]
  -[WFLocation sunriseForDate:]
  -[WFLocation needsGeocoding]
  -[WFLocation setArchiveVersion:]
  -[WFLocation setState:]
  -[WFLocation initWithCoder:]


WFDailyForecastRequest : WFAggregateForecastRequest
 @property  NSLocale *locale

  // class methods
  +[WFDailyForecastRequest supportsSecureCoding]

  // instance methods
  -[WFDailyForecastRequest initWithLocation:completionHandler:]
  -[WFDailyForecastRequest startWithService:]
  -[WFDailyForecastRequest .cxx_destruct]
  -[WFDailyForecastRequest locale]
  -[WFDailyForecastRequest setLocale:]


WFAQIScaleGradient : NSObject <NSCopying, NSSecureCoding>
 @property  NSArray *stops

  // class methods
  +[WFAQIScaleGradient supportsSecureCoding]

  // instance methods
  -[WFAQIScaleGradient encodeWithCoder:]
  -[WFAQIScaleGradient .cxx_destruct]
  -[WFAQIScaleGradient copyWithZone:]
  -[WFAQIScaleGradient isEqual:]
  -[WFAQIScaleGradient initWithCoder:]
  -[WFAQIScaleGradient stops]
  -[WFAQIScaleGradient initWithStops:]
  -[WFAQIScaleGradient isEqualToScaleGradient:]


WFGeocodeRequest : WFTask
 @property  NSString *searchString
 @property  MKLocalSearchCompletion *autocompleteSearchResult
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  WFLocation *geocodedResult
 @property  @? resultHandler
 @property  NSString *searchTerm

  // instance methods
  -[WFGeocodeRequest cleanup]
  -[WFGeocodeRequest resultHandler]
  -[WFGeocodeRequest searchTerm]
  -[WFGeocodeRequest handleResponse:]
  -[WFGeocodeRequest startWithService:]
  -[WFGeocodeRequest coordinate]
  -[WFGeocodeRequest .cxx_destruct]
  -[WFGeocodeRequest handleCancellation]
  -[WFGeocodeRequest searchString]
  -[WFGeocodeRequest setSearchString:]
  -[WFGeocodeRequest setCoordinate:]
  -[WFGeocodeRequest handleError:forResponseIdentifier:]
  -[WFGeocodeRequest initWithCoordinate:resultHandler:]
  -[WFGeocodeRequest initWithSearchCompletion:resultHandler:]
  -[WFGeocodeRequest initWithSearchString:resultHandler:]
  -[WFGeocodeRequest autocompleteSearchResult]
  -[WFGeocodeRequest setAutocompleteSearchResult:]
  -[WFGeocodeRequest geocodedResult]
  -[WFGeocodeRequest setGeocodedResult:]


WFNextHourPrecipitationDescription : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *token
 @property  NSString *shortTemplate
 @property  NSString *longTemplate
 @property  NSDictionary *parameters
 @property  NSString *shortDescription
 @property  NSString *longDescription
 @property  NSDate *validUntil

  // class methods
  +[WFNextHourPrecipitationDescription supportsSecureCoding]

  // instance methods
  -[WFNextHourPrecipitationDescription parameters]
  -[WFNextHourPrecipitationDescription token]
  -[WFNextHourPrecipitationDescription encodeWithCoder:]
  -[WFNextHourPrecipitationDescription .cxx_destruct]
  -[WFNextHourPrecipitationDescription setParameters:]
  -[WFNextHourPrecipitationDescription shortDescription]
  -[WFNextHourPrecipitationDescription isValidAtDate:]
  -[WFNextHourPrecipitationDescription copyWithZone:]
  -[WFNextHourPrecipitationDescription setToken:]
  -[WFNextHourPrecipitationDescription longDescription]
  -[WFNextHourPrecipitationDescription initWithCoder:]
  -[WFNextHourPrecipitationDescription validUntil]
  -[WFNextHourPrecipitationDescription initWithToken:shortTemplate:longTemplate:parameters:validUntil:]
  -[WFNextHourPrecipitationDescription initWithShortTemplate:longTemplate:parameters:validUntil:]
  -[WFNextHourPrecipitationDescription fillTemplate:withDate:]
  -[WFNextHourPrecipitationDescription shortTemplate]
  -[WFNextHourPrecipitationDescription setShortTemplate:]
  -[WFNextHourPrecipitationDescription longTemplate]
  -[WFNextHourPrecipitationDescription setLongTemplate:]


WFAggregateForecastRequest : WFTask
 @property  WFLocation *location
 @property  @? completionHandler

  // instance methods
  -[WFAggregateForecastRequest cleanup]
  -[WFAggregateForecastRequest initWithLocation:completionHandler:]
  -[WFAggregateForecastRequest handleResponse:]
  -[WFAggregateForecastRequest .cxx_destruct]
  -[WFAggregateForecastRequest handleCancellation]
  -[WFAggregateForecastRequest setLocation:]
  -[WFAggregateForecastRequest location]
  -[WFAggregateForecastRequest setCompletionHandler:]
  -[WFAggregateForecastRequest completionHandler]
  -[WFAggregateForecastRequest handleError:forResponseIdentifier:]


WFTask : NSObject
 @property  WFTaskIdentifier *identifier
 @property  BOOL requiresResponse
 @property  NSProgress *progress
 @property  BOOL isCancelled

  // class methods
  +[WFTask sharedServiceConnection]

  // instance methods
  -[WFTask progress]
  -[WFTask cleanup]
  -[WFTask identifier]
  -[WFTask setProgress:]
  -[WFTask handleResponse:]
  -[WFTask startWithService:]
  -[WFTask requiresResponse]
  -[WFTask .cxx_destruct]
  -[WFTask handleCancellation]
  -[WFTask start]
  -[WFTask isCancelled]
  -[WFTask cancel]
  -[WFTask init]
  -[WFTask handleError:forResponseIdentifier:]
  -[WFTask initWithResponseRequired:]
  -[WFTask executeSynchronously]


WFWeatherChannelRequestFormatterV3 : NSObject <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherChannelRequestFormatterV3 aqiRequestForScaleNamed:language:]
  +[WFWeatherChannelRequestFormatterV3 forecastRequest:forLocation:locale:date:]
  +[WFWeatherChannelRequestFormatterV3 forecastRequest:forLocation:withUnits:locale:date:rules:options:]
  +[WFWeatherChannelRequestFormatterV3 hostURLForService]
  +[WFWeatherChannelRequestFormatterV3 forecastRequest:forLocation:locale:date:queryItems:rules:]
  +[WFWeatherChannelRequestFormatterV3 forecastRequestForComponents:location:locale:date:queryItems:]


WFFavoriteLocationResponse : WFResponse
 @property  NSArray *favoriteLocations

  // class methods
  +[WFFavoriteLocationResponse supportsSecureCoding]

  // instance methods
  -[WFFavoriteLocationResponse encodeWithCoder:]
  -[WFFavoriteLocationResponse .cxx_destruct]
  -[WFFavoriteLocationResponse initWithCoder:]
  -[WFFavoriteLocationResponse initWithIdentifier:favorites:]
  -[WFFavoriteLocationResponse favoriteLocations]


WFAggregateCommonForecast : NSObject
 @property  WFAirQualityConditions *airQualityObservations
 @property  WFWeatherConditions *currentObservations
 @property  NSArray *lastTwentyFourHoursOfObservations
 @property  NSArray *hourlyForecastedConditions
 @property  NSArray *dailyForecastedConditions
 @property  NSArray *dailyPollenForecastedConditions
 @property  NSArray *severeWeatherEvents
 @property  NSArray *changeForecasts
 @property  WFNextHourPrecipitation *nextHourPrecipitation

  // instance methods
  -[WFAggregateCommonForecast setNextHourPrecipitation:]
  -[WFAggregateCommonForecast lastTwentyFourHoursOfObservations]
  -[WFAggregateCommonForecast setLastTwentyFourHoursOfObservations:]
  -[WFAggregateCommonForecast changeForecasts]
  -[WFAggregateCommonForecast .cxx_destruct]
  -[WFAggregateCommonForecast setSevereWeatherEvents:]
  -[WFAggregateCommonForecast setChangeForecasts:]
  -[WFAggregateCommonForecast severeWeatherEvents]
  -[WFAggregateCommonForecast airQualityObservations]
  -[WFAggregateCommonForecast nextHourPrecipitation]
  -[WFAggregateCommonForecast setAirQualityObservations:]
  -[WFAggregateCommonForecast currentObservations]
  -[WFAggregateCommonForecast hourlyForecastedConditions]
  -[WFAggregateCommonForecast dailyForecastedConditions]
  -[WFAggregateCommonForecast dailyPollenForecastedConditions]
  -[WFAggregateCommonForecast setCurrentObservations:]
  -[WFAggregateCommonForecast setHourlyForecastedConditions:]
  -[WFAggregateCommonForecast setDailyForecastedConditions:]
  -[WFAggregateCommonForecast setDailyPollenForecastedConditions:]


WFAggregateCommonRequest : WFTask
 @property  NSLocale *locale
 @property  WFLocation *location
 @property  unsigned long types
 @property  int units
 @property  WFRequestOptions *requestOptions
 @property  NSString *trackingParameter
 @property  @? completionHandler

  // instance methods
  -[WFAggregateCommonRequest cleanup]
  -[WFAggregateCommonRequest handleResponse:]
  -[WFAggregateCommonRequest startWithService:]
  -[WFAggregateCommonRequest units]
  -[WFAggregateCommonRequest types]
  -[WFAggregateCommonRequest .cxx_destruct]
  -[WFAggregateCommonRequest requestOptions]
  -[WFAggregateCommonRequest handleCancellation]
  -[WFAggregateCommonRequest locale]
  -[WFAggregateCommonRequest setLocale:]
  -[WFAggregateCommonRequest location]
  -[WFAggregateCommonRequest completionHandler]
  -[WFAggregateCommonRequest handleError:forResponseIdentifier:]
  -[WFAggregateCommonRequest trackingParameter]
  -[WFAggregateCommonRequest initWithLocation:types:trackingParameter:completionHandler:]
  -[WFAggregateCommonRequest initWithLocation:types:units:trackingParameter:completionHandler:]
  -[WFAggregateCommonRequest initWithLocation:types:units:requestOptions:trackingParameter:completionHandler:]
  -[WFAggregateCommonRequest _supportedForecastTypes:]


WFSettingsManager : NSObject <WFUserInfoManagerDelegate>
 @property  NSObject<OS_dispatch_queue> *requestSerialQueue
 @property  {os_unfair_lock_s=I} settingsLock
 @property  WFRemoteAppSettings *settings
 @property  WFUserInfoManager *userInfoManager
 @property  NSHashTable *observers
 @property  NSString *APIVersion
 @property  BOOL useFallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFSettingsManager sharedInstance]
  +[WFSettingsManager setUserIdentifier:]
  +[WFSettingsManager userIdentifier]

  // instance methods
  -[WFSettingsManager setUseFallback:]
  -[WFSettingsManager addObserver:]
  -[WFSettingsManager containerIdentifier]
  -[WFSettingsManager debugOverrides]
  -[WFSettingsManager settingsLock]
  -[WFSettingsManager .cxx_destruct]
  -[WFSettingsManager userInfoManager]
  -[WFSettingsManager useFallback]
  -[WFSettingsManager forceFetchAppConfiguration]
  -[WFSettingsManager settings]
  -[WFSettingsManager updateAssetURLHostIfNeededWithComponents:containerIdentifier:]
  -[WFSettingsManager requestSerialQueue]
  -[WFSettingsManager setSettings:]
  -[WFSettingsManager fetchAppConfigurationWithCompletionQueue:completion:]
  -[WFSettingsManager permanentURLForRecordID:containerIdentifier:]
  -[WFSettingsManager containerIDForContainerIdentifier:]
  -[WFSettingsManager setupRemoteSettings]
  -[WFSettingsManager notifyObserversOfAppConfigRefresh]
  -[WFSettingsManager urlSafeBase64EncodedStringWithData:options:]
  -[WFSettingsManager fetchAppConfigurationIfExpired]
  -[WFSettingsManager APIVersion]
  -[WFSettingsManager debugEnvironmentFromOverride:]
  -[WFSettingsManager clearConfigCacheOnLaunchIfRequested]
  -[WFSettingsManager userInfoManager:didSynchronizeUserIdentifier:]
  -[WFSettingsManager shouldReroutePermanentURLsForContainerIdentifier:]
  -[WFSettingsManager completeOnQueue:error:completion:]
  -[WFSettingsManager removeObserver:]
  -[WFSettingsManager setRequestSerialQueue:]
  -[WFSettingsManager setSettingsLock:]
  -[WFSettingsManager init]
  -[WFSettingsManager setUserInfoManager:]
  -[WFSettingsManager observers]


WFAttribution : NSObject
 @property  NSString *sourceName
 @property  NSString *localizedSourceAttribution
 @property  NSURL *sourceAttributionURL

  // class methods
  +[WFAttribution sharedAttribution]
  +[WFAttribution weatherSourceAttributionURLForTrafficParameter:]
  +[WFAttribution platformSpecializedWeatherSourceAttributionURLForTrafficParameter:]

  // instance methods
  -[WFAttribution sourceName]
  -[WFAttribution sourceAttributionURL]
  -[WFAttribution localizedSourceAttribution]
  -[WFAttribution sourceAttributionImageForStyle:]


WFResponseParsingRules : NSObject
 @property  <WFSettings> *settings

  // class methods
  +[WFResponseParsingRules aqiEnabledByRules:forLocation:]

  // instance methods
  -[WFResponseParsingRules initWithSettings:]
  -[WFResponseParsingRules .cxx_destruct]
  -[WFResponseParsingRules aqiEnabledForCountryCode:]
  -[WFResponseParsingRules settings]


WFTemperatureUnitProvider : NSObject
 @property  NSObject<OS_dispatch_queue> *providerQueue
 @property  int userTemperatureUnit

  // instance methods
  -[WFTemperatureUnitProvider setProviderQueue:]
  -[WFTemperatureUnitProvider providerQueue]
  -[WFTemperatureUnitProvider .cxx_destruct]
  -[WFTemperatureUnitProvider _postDidChangeUnitDefaultsPreference]
  -[WFTemperatureUnitProvider _providerQueue_readUnit]
  -[WFTemperatureUnitProvider replaceUnit:]
  -[WFTemperatureUnitProvider replaceUnit:completionHandler:]
  -[WFTemperatureUnitProvider userTemperatureUnit]
  -[WFTemperatureUnitProvider fetchTemperatureUnitWithCompletionHandler:]
  -[WFTemperatureUnitProvider _providerQueue_changeUnit:]
  -[WFTemperatureUnitProvider init]


WFTemperatureFormatter : NSFormatter
 @property  ^{UAMeasureFormat=} measureFormatter
 @property  NSLocale *locale
 @property  NSString *fallbackTemperatureString
 @property  int inputUnit
 @property  int outputUnit
 @property  unsigned long roundingMode
 @property  unsigned long maximumFractionDigits
 @property  int symbolType
 @property  BOOL includeDegreeSymbol

  // class methods
  +[WFTemperatureFormatter temperatureFormatterWithInputUnit:outputUnit:]

  // instance methods
  -[WFTemperatureFormatter _localeDidChangeNotification:]
  -[WFTemperatureFormatter getObjectValue:forString:errorDescription:]
  -[WFTemperatureFormatter dealloc]
  -[WFTemperatureFormatter .cxx_destruct]
  -[WFTemperatureFormatter locale]
  -[WFTemperatureFormatter roundingMode]
  -[WFTemperatureFormatter fallbackTemperatureString]
  -[WFTemperatureFormatter setLocale:]
  -[WFTemperatureFormatter copyWithZone:]
  -[WFTemperatureFormatter setMaximumFractionDigits:]
  -[WFTemperatureFormatter maximumFractionDigits]
  -[WFTemperatureFormatter setFallbackTemperatureString:]
  -[WFTemperatureFormatter stringForObjectValue:]
  -[WFTemperatureFormatter init]
  -[WFTemperatureFormatter setRoundingMode:]
  -[WFTemperatureFormatter inputUnit]
  -[WFTemperatureFormatter setInputUnit:]
  -[WFTemperatureFormatter outputUnit]
  -[WFTemperatureFormatter setOutputUnit:]
  -[WFTemperatureFormatter measureFormatter]
  -[WFTemperatureFormatter setMeasureFormatter:]
  -[WFTemperatureFormatter formattedStringFromTemperature:]
  -[WFTemperatureFormatter formattedTemperatureFromString:]
  -[WFTemperatureFormatter _formatTemperatureValue:toUnit:]
  -[WFTemperatureFormatter symbolType]
  -[WFTemperatureFormatter setSymbolType:]
  -[WFTemperatureFormatter includeDegreeSymbol]
  -[WFTemperatureFormatter setIncludeDegreeSymbol:]


WFServiceConnection : NSObject <WeatherServiceClientProtocol>
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSObject<OS_dispatch_queue> *internalStateQueue
 @property  NSXPCConnection *xpcConnection
 @property  <WeatherServiceProtocol> *serviceProxy
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *tasksPendingResponseForTaskIdentifier
 @property  NSMutableDictionary *dispatchGroupForTaskIdentifier
 @property  NSMutableDictionary *executionStartTimeForTaskIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFServiceConnection allAllowedClasses]
  +[WFServiceConnection weatherServiceInterface]
  +[WFServiceConnection weatherServiceClientInterface]

  // instance methods
  -[WFServiceConnection serviceProxy]
  -[WFServiceConnection _cleanup]
  -[WFServiceConnection serviceDidReceiveResponse:]
  -[WFServiceConnection accessServiceWithBlock:]
  -[WFServiceConnection setCallbackQueue:]
  -[WFServiceConnection xpcConnection]
  -[WFServiceConnection internalStateQueue]
  -[WFServiceConnection _handleRemoteObjectProxyError:]
  -[WFServiceConnection callbackQueue]
  -[WFServiceConnection _onQueueOpenConnection]
  -[WFServiceConnection invalidateCache]
  -[WFServiceConnection dealloc]
  -[WFServiceConnection .cxx_destruct]
  -[WFServiceConnection tasksPendingResponseForTaskIdentifier]
  -[WFServiceConnection setXpcConnection:]
  -[WFServiceConnection executionStartTimeForTaskIdentifier]
  -[WFServiceConnection setInternalStateQueue:]
  -[WFServiceConnection dispatchGroupForTaskIdentifier]
  -[WFServiceConnection _callbackAllPendingTasksOnInvalidate:]
  -[WFServiceConnection setQueue:]
  -[WFServiceConnection cancelRequestWithIdentifier:]
  -[WFServiceConnection enqueueRequest:]
  -[WFServiceConnection _onQueueInvalidateConnection:]
  -[WFServiceConnection invalidate]
  -[WFServiceConnection queue]
  -[WFServiceConnection enqueueRequest:waitUntilDone:]
  -[WFServiceConnection setServiceProxy:]
  -[WFServiceConnection taskIdentifier:]
  -[WFServiceConnection init]


WFReachabilityConfigurationResponse : WFResponse <NSSecureCoding>
 @property  NSURL *reachabilityHostURL
 @property  NWPathEvaluator *pathEvaluator

  // class methods
  +[WFReachabilityConfigurationResponse supportsSecureCoding]

  // instance methods
  -[WFReachabilityConfigurationResponse encodeWithCoder:]
  -[WFReachabilityConfigurationResponse .cxx_destruct]
  -[WFReachabilityConfigurationResponse pathEvaluator]
  -[WFReachabilityConfigurationResponse initWithCoder:]
  -[WFReachabilityConfigurationResponse reachabilityHostURL]
  -[WFReachabilityConfigurationResponse setReachabilityHostURL:]


NWPathEvaluator(WFAdditions)
	// class methods
	+[NWPathEvaluator(WFAdditions) wf_pathEvaluatorForURL:]

	// instance methods
	-[NWPathEvaluator(WFAdditions) wf_isReachable]

(WFWeatherChannelParser)
	// instance methods
	-[(WFWeatherChannelParser) wf_dateComponentsForEpochDateNumber:toUnitGranularity:]

(StoreCacheAdditions)
	// class methods
	+[(StoreCacheAdditions) wf_inMemoryAddress]
	+[(StoreCacheAdditions) wf_cacheDirectory]

	// instance methods
	-[(StoreCacheAdditions) wf_isInMemoryAddress]
	-[(StoreCacheAdditions) wf_URLWithTracking:]
	-[(StoreCacheAdditions) wf_URLHasParameter:]

NSError(WFAdditions)
	// class methods
	+[NSError(WFAdditions) wf_errorWithCode:]
	+[NSError(WFAdditions) wf_errorWithCode:userInfo:]
	+[NSError(WFAdditions) wf_errorWithCode:encapsulatedError:userInfo:]

(WFAdditions)
	// class methods
	+[(WFAdditions) floatValueFromDictionary:forKey:defaultValue:]
	+[(WFAdditions) doubleValueFromDictionary:forKey:defaultValue:]
	+[(WFAdditions) integerValueFromDictionary:forKey:defaultValue:]
	+[(WFAdditions) stringValueFromDictionary:forKey:defaultValue:]
	+[(WFAdditions) timeIntervalValueFromDictionary:forKey:defaultValue:]

	// instance methods
	-[(WFAdditions) boolForKey:defaultValue:]
	-[(WFAdditions) stringForKey:]
	-[(WFAdditions) numberForKey:]
	-[(WFAdditions) dictionaryForKey:]
	-[(WFAdditions) arrayForKey:]
	-[(WFAdditions) wf_objectOfKind:forKeyPath:]
	-[(WFAdditions) wf_objectForKeyPath:]
	-[(WFAdditions) wf_dictionaryForKeyPath:]
	-[(WFAdditions) wf_arrayForKeyPath:]
	-[(WFAdditions) wf_stringForKeyPath:]
	-[(WFAdditions) wf_URLForKeyPath:]
	-[(WFAdditions) wf_numberForKeyPath:]
	-[(WFAdditions) wf_temperatureWithCelsiusKeyPath:fahrenheitKeyPath:]
	-[(WFAdditions) wf_integerForKeyPath:]
	-[(WFAdditions) wf_floatForKeyPath:]
	-[(WFAdditions) wf_doubleForKeyPath:]
	-[(WFAdditions) wf_filter:]

NSDateComponents(WFAdditions)
	// class methods
	+[NSDateComponents(WFAdditions) wf_nowDateComponents]

<DEREK BUG Categories!>(SafeAddObject)
	// instance methods
	-[<DEREK BUG Categories!>(SafeAddObject) wf_safelyAddObject:]

(WFPrivateAdditions)
	// class methods
	+[(WFPrivateAdditions) wf_isDate:inSameDayWithDate:inCalendar:]
	+[(WFPrivateAdditions) wf_minutesBetweenDate:andDate:]
	+[(WFPrivateAdditions) wf_weatherConditionsClosestToDate:inArray:]
	+[(WFPrivateAdditions) wf_weatherConditionsOnDate:inCalendar:inArray:]
	+[(WFPrivateAdditions) wf_allWeatherConditionsOnDate:inCalendar:inArray:]

	// instance methods
	-[(WFPrivateAdditions) wf_isInSameDayWithDate:inCalendar:]
	-[(WFPrivateAdditions) wf_minutesDifferenceFromDate:]
	-[(WFPrivateAdditions) wf_weatherConditionsClosestToDate:]
	-[(WFPrivateAdditions) wf_weatherConditionsOnDate:inCalendar:]
	-[(WFPrivateAdditions) wf_allWeatherConditionsOnDate:inCalendar:]

CLLocation(WFAdditions)
	// instance methods
	-[CLLocation(WFAdditions) wf_isEquivalentToLocation:tolerance:]

(WFAdditions)
	// instance methods
	-[(WFAdditions) wf_temperatureUnit]
	-[(WFAdditions) setWf_temperatureUnit:]

(stringWithTemperatureUnit)
	// instance methods
	-[(stringWithTemperatureUnit) stringWithTemperatureUnit:]

01 00 0700 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: ALCityManager 
01 00 0300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLGeocoder 
01 00 0300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0500 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOAlmanac 
01 00 0100 /System/Library/Frameworks/MapKit.framework/MapKit: MKLocalSearch 
01 00 0100 /System/Library/Frameworks/MapKit.framework/MapKit: MKLocalSearchRequest 
01 00 0100 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapItem 
01 00 0100 /System/Library/Frameworks/MapKit.framework/MapKit: MKPlacemark 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurement 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUbiquitousKeyValueStore 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0600 /System/Library/Frameworks/Network.framework/Network: NWHostEndpoint 
01 00 0600 /System/Library/Frameworks/Network.framework/Network: NWPathEvaluator 
01 00 0900 /System/Library/PrivateFrameworks/RemoteConfiguration.framework/RemoteConfiguration: RCConfigurationManager 
01 00 0900 /System/Library/PrivateFrameworks/RemoteConfiguration.framework/RemoteConfiguration: RCConfigurationSettings 
01 00 0900 /System/Library/PrivateFrameworks/RemoteConfiguration.framework/RemoteConfiguration: RCDebugOverrides 
01 00 0900 /System/Library/PrivateFrameworks/RemoteConfiguration.framework/RemoteConfiguration: RCDeviceInfo 
