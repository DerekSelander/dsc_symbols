|| __DATA.__objc_data _OBJC_CLASS_$_WFInternalAppSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_WFInternalAppSettings
|| __DATA_CONST.__const _CloudCityLatitudeKey
|| __DATA_CONST.__const _CloudCityLongitudeKey
|| __DATA_CONST.__const _CloudCityNameKey
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_10D
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_10D_SINGLE_ENDPOINT
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_DAYPART_DAY_OR_NIGHT
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_FORECAST
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_GRASS_POLLEN_INDEX
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_RAGWEED_POLLEN_INDEX
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_TREE_POLLEN_INDEX
|| __DATA_CONST.__const _TWC_V2_LSI_POLLEN_VALID_TIME_UTC
|| __DATA_CONST.__const _TWC_V2_PARAMETER_DEFAULT_VALUE_API_KEY
|| __DATA_CONST.__const _TWC_V2_PARAMETER_DEFAULT_VALUE_FORMAT
|| __DATA_CONST.__const _TWC_V2_PARAMETER_DEFAULT_VALUE_UNITS
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_API_KEY
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_FORMAT
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_GEOCODE
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_LANGUAGE
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_PRODUCTS
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_START_DATE
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_TRACKER_ID
|| __DATA_CONST.__const _TWC_V2_PARAMETER_KEY_UNITS
|| __DATA_CONST.__const _TWC_V2_PARAMETER_VALUE_HISTORICAL_AND_ALMANAC_API_KEY
|| __DATA_CONST.__const _TWC_V3_ALMANAC_1D
|| __DATA_CONST.__const _TWC_V3_CC
|| __DATA_CONST.__const _TWC_V3_CC_CLOUD_COVER_PHRASE
|| __DATA_CONST.__const _TWC_V3_CC_OBSERVATION_QUALIFIER_CODE
|| __DATA_CONST.__const _TWC_V3_CC_OBSERVATION_QUALIFIER_SEVERITY
|| __DATA_CONST.__const _TWC_V3_CLOUD_COVER
|| __DATA_CONST.__const _TWC_V3_CONDITIONS_DESCRIPTION_LONG
|| __DATA_CONST.__const _TWC_V3_CONDITIONS_DESCRIPTION_MEDIUM
|| __DATA_CONST.__const _TWC_V3_CONDITIONS_DESCRIPTION_SHORT
|| __DATA_CONST.__const _TWC_V3_DAY_OF_WEEK
|| __DATA_CONST.__const _TWC_V3_DAY_OR_NIGHT
|| __DATA_CONST.__const _TWC_V3_DF_10D
|| __DATA_CONST.__const _TWC_V3_DF_15D
|| __DATA_CONST.__const _TWC_V3_DF_3D
|| __DATA_CONST.__const _TWC_V3_DF_5D
|| __DATA_CONST.__const _TWC_V3_DF_7D
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_DAY_OR_NIGHT
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_NAME
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_QUALIFIER_PHRASE
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_SNOW_RANGE
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_THUNDER_CATEGORY
|| __DATA_CONST.__const _TWC_V3_DF_DAYPART_THUNDER_INDEX
|| __DATA_CONST.__const _TWC_V3_DF_MOONRISE_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_DF_MOONRISE_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_DF_MOONSET_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_DF_MOONSET_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_DF_MOON_PHASE
|| __DATA_CONST.__const _TWC_V3_DF_MOON_PHASE_CODE
|| __DATA_CONST.__const _TWC_V3_DF_MOON_PHASE_DAY
|| __DATA_CONST.__const _TWC_V3_DF_TEMPERATURE_MAX
|| __DATA_CONST.__const _TWC_V3_DF_TEMPERATURE_MIN
|| __DATA_CONST.__const _TWC_V3_ERRORS
|| __DATA_CONST.__const _TWC_V3_ERROR_CODE
|| __DATA_CONST.__const _TWC_V3_ERROR_MESSAGE
|| __DATA_CONST.__const _TWC_V3_EXPIRATION_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_GAQ
|| __DATA_CONST.__const _TWC_V3_GAQ_CATEGORY
|| __DATA_CONST.__const _TWC_V3_GAQ_CATEGORY_INDEX
|| __DATA_CONST.__const _TWC_V3_GAQ_CATEGORY_INDEX_COLOR
|| __DATA_CONST.__const _TWC_V3_GAQ_DISCLAIMER
|| __DATA_CONST.__const _TWC_V3_GAQ_EXPIRE_TIME_GMT
|| __DATA_CONST.__const _TWC_V3_GAQ_INDEX
|| __DATA_CONST.__const _TWC_V3_GAQ_LAT
|| __DATA_CONST.__const _TWC_V3_GAQ_LONG
|| __DATA_CONST.__const _TWC_V3_GAQ_MESSAGES
|| __DATA_CONST.__const _TWC_V3_GAQ_MESSAGE_TEXT
|| __DATA_CONST.__const _TWC_V3_GAQ_MESSAGE_TITLE
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANTS
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_AMOUNT
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_CATEGORY
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_CATEGORY_INDEX
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_INDEX
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_NAME
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_PHRASE
|| __DATA_CONST.__const _TWC_V3_GAQ_POLLUTANT_UNIT
|| __DATA_CONST.__const _TWC_V3_GAQ_PRIMARY_POLLUTANT
|| __DATA_CONST.__const _TWC_V3_GAQ_ROOT
|| __DATA_CONST.__const _TWC_V3_GAQ_SOURCE
|| __DATA_CONST.__const _TWC_V3_HF_10D
|| __DATA_CONST.__const _TWC_V3_HF_12H
|| __DATA_CONST.__const _TWC_V3_HF_15D
|| __DATA_CONST.__const _TWC_V3_HF_1D
|| __DATA_CONST.__const _TWC_V3_HF_2D
|| __DATA_CONST.__const _TWC_V3_HF_3D
|| __DATA_CONST.__const _TWC_V3_HF_6H
|| __DATA_CONST.__const _TWC_V3_HF_SEVERITY
|| __DATA_CONST.__const _TWC_V3_HO_DAILY_30D
|| __DATA_CONST.__const _TWC_V3_HO_HOURLY_1D
|| __DATA_CONST.__const _TWC_V3_ICON_CODE
|| __DATA_CONST.__const _TWC_V3_ICON_CODE_EXTEND
|| __DATA_CONST.__const _TWC_V3_NARRATIVE
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_CLOUD_CEILING
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRECIPITATION_ACCUMULATION_24H
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRESSURE_ALTIMETER
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRESSURE_CHANGE
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRESSURE_TENDENCY_CODE
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_PRESSURE_TENDENCY_TREND
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_SNOWFALL_ACCUMULATION_24H
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_TEMPERATURE_CHANGE_24H
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_TEMPERATURE_MAX_24H
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_TEMPERATURE_MAX_SINCE_7AM
|| __DATA_CONST.__const _TWC_V3_OBSERVATIONS_TEMPERATURE_MIN_24H
|| __DATA_CONST.__const _TWC_V3_PARAMETER_DEFAULT_API_KEY
|| __DATA_CONST.__const _TWC_V3_PARAMETER_DEFAULT_VALUE_FORMAT
|| __DATA_CONST.__const _TWC_V3_PARAMETER_DEFAULT_VALUE_LANGUAGE
|| __DATA_CONST.__const _TWC_V3_PARAMETER_DEFAULT_VALUE_UNITS
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_API_KEY
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_DAY
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_FORMAT
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_GEOCODE
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_LANGUAGE
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_MONTH
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_SCALE
|| __DATA_CONST.__const _TWC_V3_PARAMETER_KEY_UNITS
|| __DATA_CONST.__const _TWC_V3_PARAMETER_VALUE_HISTORICAL_AND_ALMANAC_API_KEY
|| __DATA_CONST.__const _TWC_V3_PRECIPITATION_ACCUMULATION
|| __DATA_CONST.__const _TWC_V3_PRECIPITATION_CHANCE
|| __DATA_CONST.__const _TWC_V3_PRECIPITATION_TYPE
|| __DATA_CONST.__const _TWC_V3_PRESSURE_MEAN_SEA_LEVEL
|| __DATA_CONST.__const _TWC_V3_RELATIVE_HUMIDITY
|| __DATA_CONST.__const _TWC_V3_SNOWFALL_ACCUMULATION
|| __DATA_CONST.__const _TWC_V3_SUNRISE_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_SUNRISE_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_SUNSET_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_SUNSET_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE_DEW_POINT
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE_FEELS_LIKE
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE_HEAT_INDEX
|| __DATA_CONST.__const _TWC_V3_TEMPERATURE_WIND_CHILL
|| __DATA_CONST.__const _TWC_V3_UV_DESCRIPTION
|| __DATA_CONST.__const _TWC_V3_UV_INDEX
|| __DATA_CONST.__const _TWC_V3_VALID_TIME_LOCAL
|| __DATA_CONST.__const _TWC_V3_VALID_TIME_UTC
|| __DATA_CONST.__const _TWC_V3_VISIBILITY
|| __DATA_CONST.__const _TWC_V3_WEB_LINKS
|| __DATA_CONST.__const _TWC_V3_WEB_LINKS_WEB
|| __DATA_CONST.__const _TWC_V3_WIND_DIRECTION
|| __DATA_CONST.__const _TWC_V3_WIND_DIRECTION_CARDINAL
|| __DATA_CONST.__const _TWC_V3_WIND_GUST
|| __DATA_CONST.__const _TWC_V3_WIND_SPEED
|| __DATA_CONST.__const _WDS_V1_ADDITIONAL_PROPERTIES
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_CATEGORY
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_CATEGORY_INDEX
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_CATEGORY_INDEX_COLOR
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_INDEX
|| __DATA_CONST.__const _WDS_V1_AIR_QUALITY_SCALE
|| __DATA_CONST.__const _WDS_V1_AMOUNT
|| __DATA_CONST.__const _WDS_V1_CATEGORY
|| __DATA_CONST.__const _WDS_V1_CATEGORY_INDEX
|| __DATA_CONST.__const _WDS_V1_CLOUD_CEILING
|| __DATA_CONST.__const _WDS_V1_CLOUD_COVER
|| __DATA_CONST.__const _WDS_V1_CLOUD_COVER_PHRASE
|| __DATA_CONST.__const _WDS_V1_CURRENT_OBSERVATIONS
|| __DATA_CONST.__const _WDS_V1_DAILY_ALMANAC
|| __DATA_CONST.__const _WDS_V1_DAILY_FORECAST
|| __DATA_CONST.__const _WDS_V1_DAILY_HISTORY
|| __DATA_CONST.__const _WDS_V1_DAYS
|| __DATA_CONST.__const _WDS_V1_DAY_OF_WEEK
|| __DATA_CONST.__const _WDS_V1_DAY_OR_NIGHT
|| __DATA_CONST.__const _WDS_V1_DAY_PARTS
|| __DATA_CONST.__const _WDS_V1_DESCRIPTION
|| __DATA_CONST.__const _WDS_V1_DISCLAIMER
|| __DATA_CONST.__const _WDS_V1_EXPIRATION_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_EXPIRE_TIME
|| __DATA_CONST.__const _WDS_V1_GRASS_POLLEN_INDEX
|| __DATA_CONST.__const _WDS_V1_HOURLY_FORECAST
|| __DATA_CONST.__const _WDS_V1_HOURLY_HISTORY
|| __DATA_CONST.__const _WDS_V1_HOURS
|| __DATA_CONST.__const _WDS_V1_ICON_CODE
|| __DATA_CONST.__const _WDS_V1_ICON_CODE_DAY
|| __DATA_CONST.__const _WDS_V1_ICON_CODE_EXTEND
|| __DATA_CONST.__const _WDS_V1_ICON_CODE_NIGHT
|| __DATA_CONST.__const _WDS_V1_INDEX
|| __DATA_CONST.__const _WDS_V1_IOS_NOW
|| __DATA_CONST.__const _WDS_V1_LANGUAGE
|| __DATA_CONST.__const _WDS_V1_LATITUDE
|| __DATA_CONST.__const _WDS_V1_LONGITUDE
|| __DATA_CONST.__const _WDS_V1_METADATA
|| __DATA_CONST.__const _WDS_V1_MONTHLY_ALMANAC
|| __DATA_CONST.__const _WDS_V1_MONTHLY_HISTORY
|| __DATA_CONST.__const _WDS_V1_MONTHS
|| __DATA_CONST.__const _WDS_V1_MOONRISE_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_MOONSET_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_MOON_PHASE
|| __DATA_CONST.__const _WDS_V1_MOON_PHASE_CODE
|| __DATA_CONST.__const _WDS_V1_MOON_PHASE_DAY
|| __DATA_CONST.__const _WDS_V1_NAME
|| __DATA_CONST.__const _WDS_V1_NARRATIVE
|| __DATA_CONST.__const _WDS_V1_NOW_LINKS
|| __DATA_CONST.__const _WDS_V1_OBS_QUALIFIER_CODE
|| __DATA_CONST.__const _WDS_V1_OBS_QUALIFIER_SEVERITY
|| __DATA_CONST.__const _WDS_V1_PARAM_DAY_OF_MONTH
|| __DATA_CONST.__const _WDS_V1_PARAM_INCLUDE
|| __DATA_CONST.__const _WDS_V1_PARAM_MONTH
|| __DATA_CONST.__const _WDS_V1_PARAM_NUM_DAYS
|| __DATA_CONST.__const _WDS_V1_PARAM_NUM_MONTHS
|| __DATA_CONST.__const _WDS_V1_PARAM_SCALE
|| __DATA_CONST.__const _WDS_V1_PARAM_UNITS
|| __DATA_CONST.__const _WDS_V1_PARAM_YEAR
|| __DATA_CONST.__const _WDS_V1_PHRASE
|| __DATA_CONST.__const _WDS_V1_POLLEN
|| __DATA_CONST.__const _WDS_V1_POLLUTANTS
|| __DATA_CONST.__const _WDS_V1_PRECIP_1HOUR
|| __DATA_CONST.__const _WDS_V1_PRECIP_24HOUR
|| __DATA_CONST.__const _WDS_V1_PRECIP_6HOUR
|| __DATA_CONST.__const _WDS_V1_PRECIP_AVERAGE
|| __DATA_CONST.__const _WDS_V1_PRECIP_CHANCE
|| __DATA_CONST.__const _WDS_V1_PRECIP_TYPE
|| __DATA_CONST.__const _WDS_V1_PRESSURE_ALTIMETER
|| __DATA_CONST.__const _WDS_V1_PRESSURE_CHANGE
|| __DATA_CONST.__const _WDS_V1_PRESSURE_MEAN_SEA_LEVEL
|| __DATA_CONST.__const _WDS_V1_PRESSURE_TENDENCY_CODE
|| __DATA_CONST.__const _WDS_V1_PRESSURE_TENDENCY_TREND
|| __DATA_CONST.__const _WDS_V1_PRIMARY_POLUTANT
|| __DATA_CONST.__const _WDS_V1_QPF
|| __DATA_CONST.__const _WDS_V1_QPF_SNOW
|| __DATA_CONST.__const _WDS_V1_QUALIFIER_PHRASE
|| __DATA_CONST.__const _WDS_V1_RAGWEED_POLLEN_INDEX
|| __DATA_CONST.__const _WDS_V1_READ_TIME
|| __DATA_CONST.__const _WDS_V1_RELATIVE_HUMIDITY
|| __DATA_CONST.__const _WDS_V1_SCHEMA
|| __DATA_CONST.__const _WDS_V1_SNOW_1HOUR
|| __DATA_CONST.__const _WDS_V1_SNOW_24HOUR
|| __DATA_CONST.__const _WDS_V1_SNOW_6HOUR
|| __DATA_CONST.__const _WDS_V1_SNOW_RANGE
|| __DATA_CONST.__const _WDS_V1_SOURCE
|| __DATA_CONST.__const _WDS_V1_SUNRISE_TIME_LOCAL
|| __DATA_CONST.__const _WDS_V1_SUNRISE_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_SUNSET_TIME_LOCAL
|| __DATA_CONST.__const _WDS_V1_SUNSET_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_AVERAGE_MAX
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_AVERAGE_MIN
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_CHANGE_24HOUR
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_DEW_POINT
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_FEELS_LIKE
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_HEAT_INDEX
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MAX
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MAX_24HOUR
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MAX_SINCE_7AM
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MIN
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_MIN_24HOUR
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_RECORD_MAX
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_RECORD_MIN
|| __DATA_CONST.__const _WDS_V1_TEMPERATURE_WIND_CHILL
|| __DATA_CONST.__const _WDS_V1_THUNDER_CATEGORY
|| __DATA_CONST.__const _WDS_V1_THUNDER_INIDEX
|| __DATA_CONST.__const _WDS_V1_TREE_POLLEN_INDEX
|| __DATA_CONST.__const _WDS_V1_UNIT
|| __DATA_CONST.__const _WDS_V1_UV_DESCRIPTION
|| __DATA_CONST.__const _WDS_V1_UV_INDEX
|| __DATA_CONST.__const _WDS_V1_VALID_TIME_LOCAL
|| __DATA_CONST.__const _WDS_V1_VALID_TIME_UTC
|| __DATA_CONST.__const _WDS_V1_VALUE_DEFAULT_UNITS
|| __DATA_CONST.__const _WDS_V1_VERSION
|| __DATA_CONST.__const _WDS_V1_VISIBILITY
|| __DATA_CONST.__const _WDS_V1_WEB
|| __DATA_CONST.__const _WDS_V1_WEB_ALLERGY
|| __DATA_CONST.__const _WDS_V1_WEB_FORECAST_DAILY_10DAY
|| __DATA_CONST.__const _WDS_V1_WEB_FORECAST_HOURLY
|| __DATA_CONST.__const _WDS_V1_WEB_FORECAST_MONTHLY
|| __DATA_CONST.__const _WDS_V1_WEB_RADAR
|| __DATA_CONST.__const _WDS_V1_WIND_DIRECTION
|| __DATA_CONST.__const _WDS_V1_WIND_DIRECTION_CARDINAL
|| __DATA_CONST.__const _WDS_V1_WIND_GUST
|| __DATA_CONST.__const _WDS_V1_WIND_PHRASE
|| __DATA_CONST.__const _WDS_V1_WIND_SPEED
|| __DATA_CONST.__const _WDS_V1_WX_PHRASE_LONG
|| __DATA_CONST.__const _WDS_V1_WX_PHRASE_MEDIUM
|| __DATA_CONST.__const _WDS_V1_WX_PHRASE_SHORT
|| __DATA_CONST.__const _WDS_V1_WX_SEVERITY
|| __DATA_CONST.__const _WFAPIVersionBucketHash
|| __DATA_CONST.__const _WFAPIVersionFallbackKey
|| __DATA_CONST.__const _WFAPIVersionKey
|| __DATA_CONST.__const _WFAPIVersionV1
|| __DATA_CONST.__const _WFAPIVersionV2
|| __DATA_CONST.__const _WFAPIVersionV3
|| __DATA_CONST.__const _WFAQIEnabled
|| __DATA_CONST.__const _WFAQIEnabledCountriesKey
|| __DATA_CONST.__const _WFAirQualityRequestAttachRawAPIOptionsKey
|| __DATA_CONST.__const _WFAppSettingsRefreshRateKey
|| __DATA_CONST.__const _WFAttributionUnlocalizedDescriptionSourceString
|| __DATA_CONST.__const _WFAttributionUnlocalizedSourceString
|| __DATA_CONST.__const _WFClearConfigCacheOnLaunch
|| __DATA_CONST.__const _WFExecutingReverseGeoNotification
|| __DATA_CONST.__const _WFFetchRemoteSettings
|| __DATA_CONST.__const _WFForecastRequestAttachRawAPIOptionsKey
|| __DATA_CONST.__const _WFLocationCodingCityKey
|| __DATA_CONST.__const _WFLocationCodingCountryAbbreviationKey
|| __DATA_CONST.__const _WFLocationCodingCountryKey
|| __DATA_CONST.__const _WFLocationCodingCountyKey
|| __DATA_CONST.__const _WFLocationCodingCreationDateKey
|| __DATA_CONST.__const _WFLocationCodingGeoLocationKey
|| __DATA_CONST.__const _WFLocationCodingLocationIDKey
|| __DATA_CONST.__const _WFLocationCodingStateAbbreviationKey
|| __DATA_CONST.__const _WFLocationCodingStateKey
|| __DATA_CONST.__const _WFLocationCodingTimeZoneKey
|| __DATA_CONST.__const _WFLocationDecimalPrecision
|| __DATA_CONST.__const _WFNetworkFailedAttempsLimitKey
|| __DATA_CONST.__const _WFNetworkSwitchExpirationTimeKey
|| __DATA_CONST.__const _WFRemoteConfigurationEnvKey
|| __DATA_CONST.__const _WFRemoteConfigurationEnvProduction
|| __DATA_CONST.__const _WFRemoteConfigurationEnvQA
|| __DATA_CONST.__const _WFRemoteConfigurationEnvStaging
|| __DATA_CONST.__const _WFTWCAPI
|| __DATA_CONST.__const _WFTWCAPIVersionV2
|| __DATA_CONST.__const _WFTWCAPIVersionV3
|| __DATA_CONST.__const _WFTemperatureUnitsChangedDarwinNotification
|| __DATA_CONST.__const _WFURLComponentIsShowingHourly
|| __DATA_CONST.__const _WFURLComponentLatitude
|| __DATA_CONST.__const _WFURLComponentLocale
|| __DATA_CONST.__const _WFURLComponentLocationName
|| __DATA_CONST.__const _WFURLComponentLongitude
|| __DATA_CONST.__const _WFURLComponentPlatform
|| __DATA_CONST.__const _WFUnknownTemperatureString
|| __DATA_CONST.__const _WFUseInternalSettings
|| __DATA_CONST.__const _WFUseNonInternalBundleID
|| __DATA_CONST.__const _WFWDSAPI
|| __DATA_CONST.__const _WFWDSAPIEnvDev
|| __DATA_CONST.__const _WFWDSAPIEnvKey
|| __DATA_CONST.__const _WFWDSAPIEnvProd
|| __DATA_CONST.__const _WFWDSAPIEnvProdOrigin
|| __DATA_CONST.__const _WFWDSAPIEnvStaging
|| __DATA_CONST.__const _WFWDSAPIVersionV1
|| __DATA_CONST.__const _WFWeatherConditionComponent
|| __DATA_CONST.__const _WFWeatherDewpointComponent
|| __DATA_CONST.__const _WFWeatherDewpointTemperatureComponent
|| __DATA_CONST.__const _WFWeatherFeelsLikeTemperatureComponent
|| __DATA_CONST.__const _WFWeatherForecastExpirationTimeComponent
|| __DATA_CONST.__const _WFWeatherForecastTimeComponent
|| __DATA_CONST.__const _WFWeatherForecastedPrecipitationAmountMeasurementComponent
|| __DATA_CONST.__const _WFWeatherHighTemperatureComponent
|| __DATA_CONST.__const _WFWeatherHumidityComponent
|| __DATA_CONST.__const _WFWeatherIOSLinkComponent
|| __DATA_CONST.__const _WFWeatherLowTemperatureComponent
|| __DATA_CONST.__const _WFWeatherMobileLinkComponent
|| __DATA_CONST.__const _WFWeatherPrecipitationAmountComponent
|| __DATA_CONST.__const _WFWeatherPrecipitationAmountMeasurementComponent
|| __DATA_CONST.__const _WFWeatherPrecipitationChanceComponent
|| __DATA_CONST.__const _WFWeatherPressureComponent
|| __DATA_CONST.__const _WFWeatherPressureMeasurementComponent
|| __DATA_CONST.__const _WFWeatherPressureTrendComponent
|| __DATA_CONST.__const _WFWeatherSeverityComponent
|| __DATA_CONST.__const _WFWeatherSunriseTimeComponent
|| __DATA_CONST.__const _WFWeatherSunsetTimeComponent
|| __DATA_CONST.__const _WFWeatherTemperatureComponent
|| __DATA_CONST.__const _WFWeatherUVIndexComponent
|| __DATA_CONST.__const _WFWeatherUserIdKey
|| __DATA_CONST.__const _WFWeatherVisibilityComponent
|| __DATA_CONST.__const _WFWeatherVisibilityMeasurementComponent
|| __DATA_CONST.__const _WFWeatherWebAllergyLinkComponent
|| __DATA_CONST.__const _WFWeatherWebForecastDailyLinkComponent
|| __DATA_CONST.__const _WFWeatherWebForecastHourlyLinkComponent
|| __DATA_CONST.__const _WFWeatherWebForecastMonthlyLinkComponent
|| __DATA_CONST.__const _WFWeatherWebLinkComponent
|| __DATA_CONST.__const _WFWeatherWebRadarLinkComponent
|| __DATA_CONST.__const _WFWeatherWindDirectionComponent
|| __DATA_CONST.__const _WFWeatherWindSpeedComponent
|| __DATA_CONST.__const _WFWeatherWindSpeedMeasurementComponent
|| __DATA_CONST.__const ___WFWeatherLegacyConditionComponent
|| __DATA_CONST.__const ___WFWeatherSeriesIndexComponent
|| __DATA_CONST.__const _kWFErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAPIConfigurationFactory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleATMO
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCAQI
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryATMO
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryCAQI
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryDAQI
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryEPA
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryHJ6332012
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryIMECA
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryNAQI
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleCategoryUBA
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleDAQI
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleEPA
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleHJ6332012
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleIMECA
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleNAQI
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAQIScaleUBA
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateCommonForecast
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateCommonRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateCommonResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAggregateForecastResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirPollutant
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirQualityConditions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirQualityRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAirQualityResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFAttribution
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFDailyForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFFavoriteLocationRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFFavoriteLocationResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFForecastDataParserUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFForecastResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFGeocodeRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFGeocodeResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFHourlyForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFNetworkRetryManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFParsedForecastData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFPollenConditions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFReachabilityConfigurationRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFReachabilityConfigurationResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFRemoteAppSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFRequestFormattingRules
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFResourceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFResponseParsingRules
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFServiceReachabilityObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTask
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTaskIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperature
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureFormatter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureUnitChangeRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureUnitObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureUnitProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureUnitRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTemperatureUnitResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFTypes
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFURLComponents
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherAlmanacParserV3
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherAlmanacRequestFormatterV3
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherChannelAPIConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherChannelParserV3
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherChannelRequestFormatterV2
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherChannelRequestFormatterV3
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherConditions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherDataServiceAPIConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherDataServiceParserV1
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherDataServiceRequestFormatterV1
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherDataServiceRequestSigner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherHistorical1DayRequestFormatterV2
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherHistorical30DayParserV3
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherHistorical30DaysRequestFormatterV3
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherStoreService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFWeatherStoreServiceConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WeatherService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAPIConfigurationFactory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleATMO
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCAQI
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryATMO
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryCAQI
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryDAQI
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryEPA
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryHJ6332012
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryIMECA
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryNAQI
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleCategoryUBA
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleDAQI
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleEPA
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleHJ6332012
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleIMECA
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleNAQI
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAQIScaleUBA
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateCommonForecast
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateCommonRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateCommonResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAggregateForecastResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirPollutant
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirQualityConditions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirQualityRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAirQualityResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFAttribution
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFDailyForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFFavoriteLocationRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFFavoriteLocationResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFForecastDataParserUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFForecastResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFGeocodeRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFGeocodeResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFHourlyForecastRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFNetworkRetryManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFParsedForecastData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFPollenConditions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFReachabilityConfigurationRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFReachabilityConfigurationResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFRemoteAppSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFRequestFormattingRules
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFResourceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFResponseParsingRules
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFServiceConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFServiceReachabilityObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTask
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTaskIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperature
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitChangeRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTemperatureUnitResponse
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFTypes
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFURLComponents
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherAlmanacParserV3
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherAlmanacRequestFormatterV3
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherChannelAPIConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherChannelParserV3
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherChannelRequestFormatterV2
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherChannelRequestFormatterV3
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherConditions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherDataServiceAPIConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherDataServiceParserV1
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherDataServiceRequestFormatterV1
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherDataServiceRequestSigner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherHistorical1DayRequestFormatterV2
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherHistorical30DayParserV3
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherHistorical30DaysRequestFormatterV3
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherStoreService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFWeatherStoreServiceConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WeatherService
|| __TEXT.__const _LegacyWeatherConditionCodeCount
|| __TEXT.__const _WeatherFoundationVersionNumber
|| __TEXT.__const _WeatherFoundationVersionString
|| __TEXT.__const _kWFNetworkTimeoutInNanoseconds
|| __TEXT.__text _AqiScaleForCountryCode
|| __TEXT.__text _CLLocationCoordinate2DFromString
|| __TEXT.__text _CLPlacemarkClosestToReferenceLocation
|| __TEXT.__text _CurrentAqiScale
|| __TEXT.__text _LegacyWeatherConditionCodeFromWFConditionCode
|| __TEXT.__text _NSStringFromCLLocationCoordinate2D
|| __TEXT.__text _NSStringFromWFTemperatureUnit
|| __TEXT.__text _NSStringToWFTemperatureUnit
|| __TEXT.__text _WFAggregateCommonRequestSupportedForecastTypes
|| __TEXT.__text _WFCacheKeyForForecastType
|| __TEXT.__text _WFConditionCodeFromLegacyWeatherConditionCode
|| __TEXT.__text _WFConvertTemperature
|| __TEXT.__text _WFForecastTypeForDateComponents
|| __TEXT.__text _WFForecastTypeIsRequestedInTypes
|| __TEXT.__text _WFForecastTypeIsSingleType
|| __TEXT.__text _WFForecastTypes
|| __TEXT.__text _WFForecastTypesUnknownTypes
|| __TEXT.__text _WFLocationNameForPlacemark
|| __TEXT.__text _WFLogForCategory
|| __TEXT.__text _WFTemperatureUnitForLocale
|| __TEXT.__text _WFTemperatureUnitIsValid
|| __TEXT.__text _WFTimeOfDayForString
|| __TEXT.__text _WFWeatherStoreServiceCacheURL
|| __TEXT.__text _WeatherFoundationInternalUserDefaults
__ AggregateDictionary: _ADClientAddValueForScalarKey
__ AggregateDictionary: _ADClientPushValueForDistributionKey
__ AppSupport: _OBJC_CLASS_$_ALCityManager
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSCalendarIdentifierISO8601
__ CoreFoundation: _NSCurrentLocaleDidChangeNotification
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSLocaleTemperatureUnit
__ CoreFoundation: _NSLocaleTemperatureUnitCelsius
__ CoreFoundation: _NSLocaleTemperatureUnitFahrenheit
__ CoreFoundation: _NSLocaleUsesMetricSystem
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreLocation: _CLLocationCoordinate2DIsValid
__ CoreLocation: _OBJC_CLASS_$_CLGeocoder
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _kCLErrorDomain
__ CoreLocation: _kCLLocationCoordinate2DInvalid
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMeasurement
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSProgress
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUnitLength
__ Foundation: _OBJC_CLASS_$_NSUnitPressure
__ Foundation: _OBJC_CLASS_$_NSUnitSpeed
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ GeoServices: _GEOAlmanacAltitudeSunset
__ GeoServices: _OBJC_CLASS_$_GEOAlmanac
__ MapKit: _OBJC_CLASS_$_MKLocalSearch
__ MapKit: _OBJC_CLASS_$_MKLocalSearchRequest
__ MapKit: _OBJC_CLASS_$_MKMapItem
__ MapKit: _OBJC_CLASS_$_MKPlacemark
__ Network: _OBJC_CLASS_$_NWHostEndpoint
__ Network: _OBJC_CLASS_$_NWPathEvaluator
__ RemoteConfiguration: _OBJC_CLASS_$_RCConfigurationManager
__ RemoteConfiguration: _OBJC_CLASS_$_RCConfigurationSettings
__ RemoteConfiguration: _OBJC_CLASS_$_RCDeviceInfo
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: _CCHmacFinal
__ libSystem.B.dylib: _CCHmacInit
__ libSystem.B.dylib: _CCHmacUpdate
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_apply
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: dyld_stub_binder
__ libicucore.A.dylib: _u_strToUTF8
__ libicucore.A.dylib: _uameasfmt_close
__ libicucore.A.dylib: _uameasfmt_format
__ libicucore.A.dylib: _uameasfmt_open
__ libicucore.A.dylib: _unum_open
__ libicucore.A.dylib: _unum_setAttribute
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
WFDefaultFavoritesProvider : NSObject /usr/lib/libSystem.B.dylib <WFFavoriteLocationProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <WFFavoriteLocationProviderDelegate> *delegate

  // instance methods
  -[WFDefaultFavoritesProvider init]
  -[WFDefaultFavoritesProvider delegate]
  -[WFDefaultFavoritesProvider setDelegate:]
  -[WFDefaultFavoritesProvider .cxx_destruct]
  -[WFDefaultFavoritesProvider setLocations:]
  -[WFDefaultFavoritesProvider locations]
  -[WFDefaultFavoritesProvider addLocation:]
  -[WFDefaultFavoritesProvider initWithDelegate:persistence:]
  -[WFDefaultFavoritesProvider locationFromCity:]
  -[WFDefaultFavoritesProvider removeLocation:]
  -[WFDefaultFavoritesProvider canProvideDefaultFavorites]


WFAirQualityRequest : WFTask
 @property  WFLocation *location
 @property  NSLocale *locale
 @property  @? completionHandler
 @property  BOOL attachRawAPIData

  // class methods
  +[WFAirQualityRequest airQualityRequestForLocation:locale:completionHandler:]

  // instance methods
  -[WFAirQualityRequest options]
  -[WFAirQualityRequest setLocale:]
  -[WFAirQualityRequest .cxx_destruct]
  -[WFAirQualityRequest locale]
  -[WFAirQualityRequest location]
  -[WFAirQualityRequest cleanup]
  -[WFAirQualityRequest completionHandler]
  -[WFAirQualityRequest setCompletionHandler:]
  -[WFAirQualityRequest setLocation:]
  -[WFAirQualityRequest initWithLocation:locale:completionHandler:]
  -[WFAirQualityRequest attachRawAPIData]
  -[WFAirQualityRequest handleResponse:]
  -[WFAirQualityRequest startWithService:]
  -[WFAirQualityRequest setAttachRawAPIData:]


WFWeatherAlmanacRequestFormatterV3 : NSObject /usr/lib/libSystem.B.dylib <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherAlmanacRequestFormatterV3 hostURLForService]
  +[WFWeatherAlmanacRequestFormatterV3 forecastRequest:forLocation:locale:date:rules:]
  +[WFWeatherAlmanacRequestFormatterV3 forecastRequest:forLocation:locale:date:]


WFUserDefaultsPersistence : NSObject /usr/lib/libSystem.B.dylib <WeatherPreferencesPersistence>
 @property  NSUserDefaults *userDefaults
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFUserDefaultsPersistence init]
  -[WFUserDefaultsPersistence synchronize]
  -[WFUserDefaultsPersistence objectForKey:]
  -[WFUserDefaultsPersistence setObject:forKey:]
  -[WFUserDefaultsPersistence .cxx_destruct]
  -[WFUserDefaultsPersistence boolForKey:]
  -[WFUserDefaultsPersistence stringForKey:]
  -[WFUserDefaultsPersistence arrayForKey:]
  -[WFUserDefaultsPersistence dictionaryForKey:]
  -[WFUserDefaultsPersistence setBool:forKey:]
  -[WFUserDefaultsPersistence userDefaults]
  -[WFUserDefaultsPersistence setUserDefaults:]
  -[WFUserDefaultsPersistence initWithUserDefaults:]


WFWeatherStoreServiceConfiguration : NSObject /usr/lib/libSystem.B.dylib <NSURLSessionTaskDelegate, NSCopying>
 @property  {os_unfair_lock_s=I} serviceConnectivityEvaluationURLLock
 @property  {os_unfair_lock_s=I} serviceConnectivityEvaluatorLock
 @property  NSURLSession *session
 @property  Class cacheClass
 @property  NSURL *serviceConnectivityEvaluationURL
 @property  WFSettingsManager *settingsManager
 @property  BOOL isValid
 @property  NSString *apiVersion
 @property  NSURL *cacheURL
 @property  NWPathEvaluator *serviceConnectivityEvaluator
 @property  BOOL isServiceAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherStoreServiceConfiguration defaultConfiguration]
  +[WFWeatherStoreServiceConfiguration generateUserAgent]
  +[WFWeatherStoreServiceConfiguration defaultConfigurationWithSourceBundleIdentifier:]

  // instance methods
  -[WFWeatherStoreServiceConfiguration init]
  -[WFWeatherStoreServiceConfiguration copyWithZone:]
  -[WFWeatherStoreServiceConfiguration isValid]
  -[WFWeatherStoreServiceConfiguration .cxx_destruct]
  -[WFWeatherStoreServiceConfiguration session]
  -[WFWeatherStoreServiceConfiguration setSession:]
  -[WFWeatherStoreServiceConfiguration URLSession:task:didFinishCollectingMetrics:]
  -[WFWeatherStoreServiceConfiguration apiVersion]
  -[WFWeatherStoreServiceConfiguration cacheURL]
  -[WFWeatherStoreServiceConfiguration setCacheURL:]
  -[WFWeatherStoreServiceConfiguration setSettingsManager:]
  -[WFWeatherStoreServiceConfiguration setCacheClass:]
  -[WFWeatherStoreServiceConfiguration setServiceConnectivityEvaluationURLLock:]
  -[WFWeatherStoreServiceConfiguration setServiceConnectivityEvaluatorLock:]
  -[WFWeatherStoreServiceConfiguration settingsManager]
  -[WFWeatherStoreServiceConfiguration apiConfigurationForAPIVersion:]
  -[WFWeatherStoreServiceConfiguration serviceConnectivityEvaluationURL]
  -[WFWeatherStoreServiceConfiguration setServiceConnectivityEvaluationURL:]
  -[WFWeatherStoreServiceConfiguration isServiceAvailableSync]
  -[WFWeatherStoreServiceConfiguration apiConfiguration]
  -[WFWeatherStoreServiceConfiguration cacheClass]
  -[WFWeatherStoreServiceConfiguration forecastRequestForTypes:location:date:apiVersion:error:]
  -[WFWeatherStoreServiceConfiguration parseForecast:data:location:locale:date:apiVersion:error:]
  -[WFWeatherStoreServiceConfiguration isServiceAvailable]
  -[WFWeatherStoreServiceConfiguration forecastRequestForTypes:location:date:error:]
  -[WFWeatherStoreServiceConfiguration parseForecast:data:location:locale:date:error:]
  -[WFWeatherStoreServiceConfiguration serviceConnectivityEvaluator]
  -[WFWeatherStoreServiceConfiguration serviceConnectivityEvaluationURLLock]
  -[WFWeatherStoreServiceConfiguration serviceConnectivityEvaluatorLock]


WFWeatherStoreCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSTimer *cacheStoreTimer
 @property  NSObject<OS_dispatch_queue> *cacheConcurrentQueue
 @property  NSMutableDictionary *cacheForDomain
 @property  NSMutableSet *dirtyCacheDomains
 @property  NSURL *URL

  // class methods
  +[WFWeatherStoreCache removeObjectsFromCache:passingTest:]
  +[WFWeatherStoreCache wf_masterDomains]
  +[WFWeatherStoreCache createCacheIfNecessary:error:]

  // instance methods
  -[WFWeatherStoreCache init]
  -[WFWeatherStoreCache dealloc]
  -[WFWeatherStoreCache removeAllObjects]
  -[WFWeatherStoreCache initWithURL:]
  -[WFWeatherStoreCache .cxx_destruct]
  -[WFWeatherStoreCache setURL:]
  -[WFWeatherStoreCache URL]
  -[WFWeatherStoreCache _startCacheStoreTimer]
  -[WFWeatherStoreCache _stopCacheStoreTimer]
  -[WFWeatherStoreCache writeCacheDictionaryToFile]
  -[WFWeatherStoreCache setCacheStoreTimer:]
  -[WFWeatherStoreCache cacheStoreTimer]
  -[WFWeatherStoreCache cacheConcurrentQueue]
  -[WFWeatherStoreCache _concurrentQueue_barrier_deleteOldDataFromCache:allowedStaleness:]
  -[WFWeatherStoreCache _concurrentQueue_barrier_writeCacheDictionaryToFile]
  -[WFWeatherStoreCache cacheForDomain]
  -[WFWeatherStoreCache _concurrentQueue_barrier_deleteOldDataFromCache]
  -[WFWeatherStoreCache dirtyCacheDomains]
  -[WFWeatherStoreCache cachedObjectWithinDomain:forKey:staleness:]
  -[WFWeatherStoreCache _ensureDomainIsLoaded:]
  -[WFWeatherStoreCache _concurrentQueue_barrier_removeObjectWithinDomain:forKey:]
  -[WFWeatherStoreCache cache:withinDomain:date:forKey:expiration:synchronous:]
  -[WFWeatherStoreCache _concurrentQueue_barrier_shrinkDomain:]
  -[WFWeatherStoreCache _concurrentQueue_barrier_loadDomain:]
  -[WFWeatherStoreCache _loadedCacheDomains]
  -[WFWeatherStoreCache _loadDomain:]
  -[WFWeatherStoreCache deleteOldDataFromCache:allowedStaleness:]
  -[WFWeatherStoreCache cachedObjectWithinDomain:forKey:]
  -[WFWeatherStoreCache cache:withinDomain:forKey:]
  -[WFWeatherStoreCache cache:withinDomain:forKey:expiration:]
  -[WFWeatherStoreCache removeObjectWithinDomain:forKey:]
  -[WFWeatherStoreCache executeTransaction:]
  -[WFWeatherStoreCache _shrinkDomain:]
  -[WFWeatherStoreCache _markDomainDirty:]
  -[WFWeatherStoreCache _dirtyCacheDomains]
  -[WFWeatherStoreCache setCacheConcurrentQueue:]
  -[WFWeatherStoreCache setCacheForDomain:]
  -[WFWeatherStoreCache setDirtyCacheDomains:]


WFWeatherChannelRequestFormatterV2 : NSObject /usr/lib/libSystem.B.dylib <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherChannelRequestFormatterV2 hostURLForService]
  +[WFWeatherChannelRequestFormatterV2 forecastRequest:forLocation:locale:date:rules:]
  +[WFWeatherChannelRequestFormatterV2 forecastRequest:forLocation:locale:date:]
  +[WFWeatherChannelRequestFormatterV2 airQualityRequestForLocation:locale:]
  +[WFWeatherChannelRequestFormatterV2 forecastRequestForRequest:queryItems:forLocation:rules:]
  +[WFWeatherChannelRequestFormatterV2 forecastRequestForURL:queryItems:]


WFLocationQueryGeocode : NSObject /usr/lib/libSystem.B.dylib <WFLocationQuery>
 @property  @? resultHandler
 @property  WFResponse *response
 @property  CLGeocoder *reverseGeocoder
 @property  MKLocalSearch *search
 @property  {CLLocationCoordinate2D=dd} searchCoordinate
 @property  {CLLocationCoordinate2D=dd} unshiftedCoordinate
 @property  MKLocalSearchCompletion *searchCompletion
 @property  NSString *searchString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WFTaskIdentifier *identifier

  // class methods
  +[WFLocationQueryGeocode queryWithCoordinate:resultHandler:]
  +[WFLocationQueryGeocode clReverseGeocoderCache]
  +[WFLocationQueryGeocode mkLocalSearchGeoCodeCache]
  +[WFLocationQueryGeocode queryWithDictionaryRepresentation:resultHandler:]
  +[WFLocationQueryGeocode queryWithSearchCompletion:resultHandler:]
  +[WFLocationQueryGeocode invalidateCaches]
  +[WFLocationQueryGeocode queryWithSearchString:resultHandler:]

  // instance methods
  -[WFLocationQueryGeocode .cxx_destruct]
  -[WFLocationQueryGeocode identifier]
  -[WFLocationQueryGeocode cancel]
  -[WFLocationQueryGeocode start]
  -[WFLocationQueryGeocode setIdentifier:]
  -[WFLocationQueryGeocode response]
  -[WFLocationQueryGeocode setResponse:]
  -[WFLocationQueryGeocode searchString]
  -[WFLocationQueryGeocode search]
  -[WFLocationQueryGeocode setSearch:]
  -[WFLocationQueryGeocode searchCoordinate]
  -[WFLocationQueryGeocode searchCompletion]
  -[WFLocationQueryGeocode resultHandler]
  -[WFLocationQueryGeocode setResultHandler:]
  -[WFLocationQueryGeocode initWithCoordinate:resultHandler:]
  -[WFLocationQueryGeocode initWithSearchString:resultHandler:]
  -[WFLocationQueryGeocode reverseGeocoder]
  -[WFLocationQueryGeocode setReverseGeocoder:]
  -[WFLocationQueryGeocode setUnshiftedCoordinate:]
  -[WFLocationQueryGeocode initWithSearchCompletion:resultHandler:]
  -[WFLocationQueryGeocode setSearchCoordinate:]
  -[WFLocationQueryGeocode _reverseGeocoderLocation]
  -[WFLocationQueryGeocode _startCLGeocoderReverseGeo]
  -[WFLocationQueryGeocode _mkLocalSearchRequest]
  -[WFLocationQueryGeocode _startMKLocalSearch]
  -[WFLocationQueryGeocode _handleErrorResponse:]
  -[WFLocationQueryGeocode handleSearchResponseWithLocation:]
  -[WFLocationQueryGeocode unshiftedCoordinate]


WFWeatherUndergroundRequestFormatter : NSObject /usr/lib/libSystem.B.dylib <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherUndergroundRequestFormatter hostURLForService]
  +[WFWeatherUndergroundRequestFormatter forecastRequest:forLocation:locale:date:rules:]
  +[WFWeatherUndergroundRequestFormatter forecastRequest:forLocation:locale:date:]


WFTemperatureUnitObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *observerQueue
 @property  NSMutableDictionary *blockObserversForUUID
 @property  NSHashTable *observerObjects
 @property  int userTemperatureUnit
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  int temperatureUnit

  // class methods
  +[WFTemperatureUnitObserver sharedObserver]

  // instance methods
  -[WFTemperatureUnitObserver init]
  -[WFTemperatureUnitObserver dealloc]
  -[WFTemperatureUnitObserver .cxx_destruct]
  -[WFTemperatureUnitObserver _init]
  -[WFTemperatureUnitObserver addObserver:]
  -[WFTemperatureUnitObserver removeObserver:]
  -[WFTemperatureUnitObserver callbackQueue]
  -[WFTemperatureUnitObserver setCallbackQueue:]
  -[WFTemperatureUnitObserver removeAllObservers]
  -[WFTemperatureUnitObserver temperatureUnit]
  -[WFTemperatureUnitObserver observerQueue]
  -[WFTemperatureUnitObserver setObserverQueue:]
  -[WFTemperatureUnitObserver userTemperatureUnit]
  -[WFTemperatureUnitObserver _updateTemperatureUnit]
  -[WFTemperatureUnitObserver setBlockObserversForUUID:]
  -[WFTemperatureUnitObserver setObserverObjects:]
  -[WFTemperatureUnitObserver setUserTemperatureUnit:]
  -[WFTemperatureUnitObserver observerObjects]
  -[WFTemperatureUnitObserver blockObserversForUUID]
  -[WFTemperatureUnitObserver addBlockObserver:]
  -[WFTemperatureUnitObserver removeBlockObserverWithHandle:]


WFWeatherChannelParserV2 : NSObject /usr/lib/libSystem.B.dylib <WFForecastDataParser>
 @property  NSCalendar *calendar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherChannelParserV2 expectedDailyForecastCount]
  +[WFWeatherChannelParserV2 expectedHourlyForecastCount]
  +[WFWeatherChannelParserV2 componentsForCurrentForecast]
  +[WFWeatherChannelParserV2 componentsForHourlyForecasts]
  +[WFWeatherChannelParserV2 componentsForDailyForecasts]

  // instance methods
  -[WFWeatherChannelParserV2 init]
  -[WFWeatherChannelParserV2 .cxx_destruct]
  -[WFWeatherChannelParserV2 calendar]
  -[WFWeatherChannelParserV2 setCalendar:]
  -[WFWeatherChannelParserV2 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherChannelParserV2 parseAirQualityData:location:error:]
  -[WFWeatherChannelParserV2 parseDailyForecasts:date:]
  -[WFWeatherChannelParserV2 parseHourlyForecasts:date:]
  -[WFWeatherChannelParserV2 parseCurrentCondition:high:low:]
  -[WFWeatherChannelParserV2 parseCommonComponents:data:]
  -[WFWeatherChannelParserV2 _pressureTrendFromWeatherChannelCode:]
  -[WFWeatherChannelParserV2 parseForecastData:types:location:locale:date:error:]


WFTemperatureUnitResponse : WFResponse <NSSecureCoding>
 @property  int temperatureUnit

  // class methods
  +[WFTemperatureUnitResponse supportsSecureCoding]

  // instance methods
  -[WFTemperatureUnitResponse encodeWithCoder:]
  -[WFTemperatureUnitResponse initWithCoder:]
  -[WFTemperatureUnitResponse temperatureUnit]
  -[WFTemperatureUnitResponse setTemperatureUnit:]


WFAPIConfigurationFactory : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[WFAPIConfigurationFactory configurationForAPIVersion:]


WFWeatherHistorical30DaysRequestFormatterV3 : NSObject /usr/lib/libSystem.B.dylib <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherHistorical30DaysRequestFormatterV3 hostURLForService]
  +[WFWeatherHistorical30DaysRequestFormatterV3 forecastRequest:forLocation:locale:date:rules:]
  +[WFWeatherHistorical30DaysRequestFormatterV3 forecastRequest:forLocation:locale:date:]


WFForecastDataParserUtils : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[WFForecastDataParserUtils stringFromKeyPath:]
  +[WFForecastDataParserUtils ascendingTimeComparator]


WFParsedForecastData : NSObject /usr/lib/libSystem.B.dylib
 @property  NSData *rawData
 @property  WFAirQualityConditions *airQualityObservations
 @property  WFWeatherConditions *currentConditions
 @property  NSArray *lastTwentyFourHoursOfObservations
 @property  NSArray *dailyForecasts
 @property  NSArray *hourlyForecasts
 @property  NSArray *pollenForecasts

  // instance methods
  -[WFParsedForecastData .cxx_destruct]
  -[WFParsedForecastData rawData]
  -[WFParsedForecastData setRawData:]
  -[WFParsedForecastData currentConditions]
  -[WFParsedForecastData setCurrentConditions:]
  -[WFParsedForecastData dailyForecasts]
  -[WFParsedForecastData setDailyForecasts:]
  -[WFParsedForecastData hourlyForecasts]
  -[WFParsedForecastData setHourlyForecasts:]
  -[WFParsedForecastData setAirQualityObservations:]
  -[WFParsedForecastData airQualityObservations]
  -[WFParsedForecastData lastTwentyFourHoursOfObservations]
  -[WFParsedForecastData pollenForecasts]
  -[WFParsedForecastData objectForForecastType:]
  -[WFParsedForecastData setLastTwentyFourHoursOfObservations:]
  -[WFParsedForecastData setPollenForecasts:]


WFJSONStructureLeafNode : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL required

  // class methods
  +[WFJSONStructureLeafNode requiredLeafNode]
  +[WFJSONStructureLeafNode optionalLeafNode]

  // instance methods
  -[WFJSONStructureLeafNode setRequired:]
  -[WFJSONStructureLeafNode isRequired]


WFWeatherChannelValidator : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[WFWeatherChannelValidator expectedStructure]
  +[WFWeatherChannelValidator isLeafNodeType:]

  // instance methods
  -[WFWeatherChannelValidator validateDictionary:expectedStructure:]
  -[WFWeatherChannelValidator validateResponseData:]


WFLocationQueryGeocodeCache : NSObject /usr/lib/libSystem.B.dylib
 @property  double expirationInterval

  // instance methods
  -[WFLocationQueryGeocodeCache init]
  -[WFLocationQueryGeocodeCache removeAllObjects]
  -[WFLocationQueryGeocodeCache objectForKey:]
  -[WFLocationQueryGeocodeCache removeObjectForKey:]
  -[WFLocationQueryGeocodeCache setObject:forKey:]
  -[WFLocationQueryGeocodeCache .cxx_destruct]
  -[WFLocationQueryGeocodeCache setExpirationInterval:]
  -[WFLocationQueryGeocodeCache expirationInterval]
  -[WFLocationQueryGeocodeCache _shouldEvictObjectWithDate:]
  -[WFLocationQueryGeocodeCache _setObject:forKey:withDate:]


WeatherService : NSObject /usr/lib/libSystem.B.dylib <WeatherServiceProtocol, WeatherServicePrivateProtocol>
 @property  WFWeatherStoreService *internalService
 @property  WFQueryDispatcher *queryDispatcher
 @property  NSMapTable *clientDictionary
 @property  NSArray *clients
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  WFTemperatureUnitProvider *temperatureUnitProvider

  // class methods
  +[WeatherService sharedService]

  // instance methods
  -[WeatherService init]
  -[WeatherService .cxx_destruct]
  -[WeatherService initWithStore:]
  -[WeatherService setQueryDispatcher:]
  -[WeatherService queryDispatcher]
  -[WeatherService cancelTaskWithIdentifier:]
  -[WeatherService addClient:]
  -[WeatherService removeClient:]
  -[WeatherService clients]
  -[WeatherService performMigrationWithCompletion:]
  -[WeatherService airQualityForLocation:locale:options:taskIdentifier:]
  -[WeatherService setInternalService:]
  -[WeatherService setClientDictionary:]
  -[WeatherService setTemperatureUnitProvider:]
  -[WeatherService clientDictionary]
  -[WeatherService internalService]
  -[WeatherService queryDispatcherDidReceiveResponse:identifier:]
  -[WeatherService temperatureUnitProvider]
  -[WeatherService clientForPid:]
  -[WeatherService forecastForLocation:locale:atDate:options:taskIdentifier:]
  -[WeatherService hourlyForecastForLocation:locale:taskIdentifier:]
  -[WeatherService dailyForecastForLocation:locale:taskIdentifier:]
  -[WeatherService forecast:forLocation:locale:taskIdentifier:]
  -[WeatherService locationForString:taskIdentifier:]
  -[WeatherService locationForCoordinate:taskIdentifier:]
  -[WeatherService locationForSearchCompletion:taskIdentifier:]
  -[WeatherService temperatureUnitWithIdentifier:]
  -[WeatherService replaceTemperatureUnitWith:identifier:]
  -[WeatherService reachabilityConfigurationForIdentifier:]
  -[WeatherService invalidateCache:]
  -[WeatherService addClient:forPid:]
  -[WeatherService fetchFavoriteLocationsWithTaskIdentifier:]


WFAggregateForecastResponse : WFResponse <NSCopying, NSSecureCoding>
 @property  NSArray *forecasts
 @property  BOOL responseWasFromCache

  // class methods
  +[WFAggregateForecastResponse supportsSecureCoding]

  // instance methods
  -[WFAggregateForecastResponse copyWithZone:]
  -[WFAggregateForecastResponse encodeWithCoder:]
  -[WFAggregateForecastResponse initWithCoder:]
  -[WFAggregateForecastResponse .cxx_destruct]
  -[WFAggregateForecastResponse setForecasts:]
  -[WFAggregateForecastResponse setResponseWasFromCache:]
  -[WFAggregateForecastResponse forecasts]
  -[WFAggregateForecastResponse responseWasFromCache]


WFForecastRequest : WFTask
 @property  @? completionHandler
 @property  NSDateComponents *date
 @property  WFLocation *location
 @property  unsigned long forecastType
 @property  BOOL attachRawAPIData
 @property  NSData *rawAPIData
 @property  NSLocale *locale
 @property  NSString *trackingParameter

  // class methods
  +[WFForecastRequest forecastRequestForLocation:date:completionHandler:]
  +[WFForecastRequest forecastRequestForLocation:completionHandler:]

  // instance methods
  -[WFForecastRequest setLocale:]
  -[WFForecastRequest .cxx_destruct]
  -[WFForecastRequest date]
  -[WFForecastRequest locale]
  -[WFForecastRequest location]
  -[WFForecastRequest cleanup]
  -[WFForecastRequest setDate:]
  -[WFForecastRequest completionHandler]
  -[WFForecastRequest setCompletionHandler:]
  -[WFForecastRequest setLocation:]
  -[WFForecastRequest initWithLocation:date:completionHandler:]
  -[WFForecastRequest trackingParameter]
  -[WFForecastRequest setTrackingParameter:]
  -[WFForecastRequest initWithLocation:completionHandler:]
  -[WFForecastRequest rawAPIData]
  -[WFForecastRequest setRawAPIData:]
  -[WFForecastRequest attachRawAPIData]
  -[WFForecastRequest handleResponse:]
  -[WFForecastRequest startWithService:]
  -[WFForecastRequest setAttachRawAPIData:]
  -[WFForecastRequest editLinksForForecast:]
  -[WFForecastRequest handleCancellation]
  -[WFForecastRequest forecastType]
  -[WFForecastRequest setForecastType:]


WFRemoteAppSettings : NSObject /usr/lib/libSystem.B.dylib <WFSettings>
 @property  long long appConfigRefreshRate
 @property  NSDate *lastModificationDate
 @property  NSString *bundleID
 @property  NSString *countryCode
 @property  unsigned long apiConfigModdedHash
 @property  unsigned long apiConfigMinRange
 @property  unsigned long apiConfigMaxRange
 @property  BOOL isExpired
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *apiVersion
 @property  NSSet *aqiEnabledCountryCodes
 @property  NSString *apiVersionFallback
 @property  unsigned long networkFailedAttemptsLimit
 @property  unsigned long networkSwitchExpirationTimeInSeconds
 @property  unsigned long locationNumDecimalsOfPrecision

  // class methods
  +[WFRemoteAppSettings useInternalBundleID]
  +[WFRemoteAppSettings wfSeedBuild]
  +[WFRemoteAppSettings bundleIDsListFor:useInternalBundleID:useSeedBundleID:]
  +[WFRemoteAppSettings configurationWithData:bundleIDs:country:userID:error:]
  +[WFRemoteAppSettings wfInternalBuild]
  +[WFRemoteAppSettings configurationWithData:userID:error:]

  // instance methods
  -[WFRemoteAppSettings init]
  -[WFRemoteAppSettings copyWithZone:]
  -[WFRemoteAppSettings .cxx_destruct]
  -[WFRemoteAppSettings countryCode]
  -[WFRemoteAppSettings bundleID]
  -[WFRemoteAppSettings isExpired]
  -[WFRemoteAppSettings apiVersion]
  -[WFRemoteAppSettings lastModificationDate]
  -[WFRemoteAppSettings initWithConfigDictionary:bundleIDs:country:userID:]
  -[WFRemoteAppSettings getEnvironmentSpecificConfigDictionaryFromDictionary:bundleIDs:country:]
  -[WFRemoteAppSettings getAPIVersionFromDictionary:userID:]
  -[WFRemoteAppSettings getSpecificConfigFromConfigs:configSpecifiers:specifierKey:]
  -[WFRemoteAppSettings shouldUseAPIVersionFromDictionary:userID:]
  -[WFRemoteAppSettings aqiEnabledCountryCodes]
  -[WFRemoteAppSettings appConfigRefreshRate]
  -[WFRemoteAppSettings networkFailedAttemptsLimit]
  -[WFRemoteAppSettings networkSwitchExpirationTimeInSeconds]
  -[WFRemoteAppSettings apiVersionFallback]
  -[WFRemoteAppSettings locationNumDecimalsOfPrecision]
  -[WFRemoteAppSettings aqiEnabledForCountryCode:]
  -[WFRemoteAppSettings apiConfigModdedHash]
  -[WFRemoteAppSettings apiConfigMinRange]
  -[WFRemoteAppSettings apiConfigMaxRange]


WFTemperatureUnitRequest : WFTask
 @property  @? resultHandler

  // instance methods
  -[WFTemperatureUnitRequest .cxx_destruct]
  -[WFTemperatureUnitRequest cleanup]
  -[WFTemperatureUnitRequest resultHandler]
  -[WFTemperatureUnitRequest setResultHandler:]
  -[WFTemperatureUnitRequest requiresResponse]
  -[WFTemperatureUnitRequest initWithResultHandler:]
  -[WFTemperatureUnitRequest handleResponse:]
  -[WFTemperatureUnitRequest startWithService:]
  -[WFTemperatureUnitRequest handleCancellation]


WFRequestFormattingRules : NSObject /usr/lib/libSystem.B.dylib
 @property  <WFSettings> *settings

  // class methods
  +[WFRequestFormattingRules aqiEnabledByRules:forLocation:]

  // instance methods
  -[WFRequestFormattingRules .cxx_destruct]
  -[WFRequestFormattingRules initWithSettings:]
  -[WFRequestFormattingRules settings]
  -[WFRequestFormattingRules locationNumDecimalsOfPrecision]
  -[WFRequestFormattingRules aqiEnabledForCountryCode:]


WFWeatherAlmanacParserV3 : NSObject /usr/lib/libSystem.B.dylib <WFForecastDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherAlmanacParserV3 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherAlmanacParserV3 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherAlmanacParserV3 parseAlmanacForecastDataFromJson:location:date:]


WFGeocodeResponse : WFResponse <NSSecureCoding>
 @property  WFLocation *location

  // class methods
  +[WFGeocodeResponse supportsSecureCoding]

  // instance methods
  -[WFGeocodeResponse encodeWithCoder:]
  -[WFGeocodeResponse initWithCoder:]
  -[WFGeocodeResponse .cxx_destruct]
  -[WFGeocodeResponse location]
  -[WFGeocodeResponse initWithIdentifier:location:]


WFPollenConditions : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSDate *date
 @property  unsigned long timeOfDay
 @property  unsigned long grassIndex
 @property  unsigned long ragweedIndex
 @property  unsigned long treeIndex

  // class methods
  +[WFPollenConditions supportsSecureCoding]

  // instance methods
  -[WFPollenConditions copyWithZone:]
  -[WFPollenConditions encodeWithCoder:]
  -[WFPollenConditions initWithCoder:]
  -[WFPollenConditions .cxx_destruct]
  -[WFPollenConditions date]
  -[WFPollenConditions setDate:]
  -[WFPollenConditions setTimeOfDay:]
  -[WFPollenConditions timeOfDay]
  -[WFPollenConditions setGrassIndex:]
  -[WFPollenConditions setRagweedIndex:]
  -[WFPollenConditions setTreeIndex:]
  -[WFPollenConditions grassIndex]
  -[WFPollenConditions ragweedIndex]
  -[WFPollenConditions treeIndex]


WFServiceReachabilityObserver : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *observerQueue
 @property  NSMutableDictionary *blockObserversForUUID
 @property  NSHashTable *observerObjects
 @property  long long reachability
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NWPathEvaluator *serviceReachabilityEvaluator
 @property  BOOL isServiceAvailable

  // class methods
  +[WFServiceReachabilityObserver sharedObserver]

  // instance methods
  -[WFServiceReachabilityObserver init]
  -[WFServiceReachabilityObserver dealloc]
  -[WFServiceReachabilityObserver .cxx_destruct]
  -[WFServiceReachabilityObserver _init]
  -[WFServiceReachabilityObserver addObserver:]
  -[WFServiceReachabilityObserver observeValueForKeyPath:ofObject:change:context:]
  -[WFServiceReachabilityObserver removeObserver:]
  -[WFServiceReachabilityObserver callbackQueue]
  -[WFServiceReachabilityObserver setCallbackQueue:]
  -[WFServiceReachabilityObserver removeAllObservers]
  -[WFServiceReachabilityObserver reachability]
  -[WFServiceReachabilityObserver setReachability:]
  -[WFServiceReachabilityObserver _setupReachability]
  -[WFServiceReachabilityObserver observerQueue]
  -[WFServiceReachabilityObserver setObserverQueue:]
  -[WFServiceReachabilityObserver isServiceAvailable]
  -[WFServiceReachabilityObserver setBlockObserversForUUID:]
  -[WFServiceReachabilityObserver setObserverObjects:]
  -[WFServiceReachabilityObserver observerObjects]
  -[WFServiceReachabilityObserver blockObserversForUUID]
  -[WFServiceReachabilityObserver addBlockObserver:]
  -[WFServiceReachabilityObserver removeBlockObserverWithHandle:]
  -[WFServiceReachabilityObserver serviceReachabilityEvaluator]
  -[WFServiceReachabilityObserver _deliverReachabilityUpdate:]
  -[WFServiceReachabilityObserver setServiceReachabilityEvaluator:]


WFInternalAppSettings : NSObject /usr/lib/libSystem.B.dylib <WFSettings>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *apiVersion
 @property  NSSet *aqiEnabledCountryCodes
 @property  NSString *apiVersionFallback
 @property  unsigned long networkFailedAttemptsLimit
 @property  unsigned long networkSwitchExpirationTimeInSeconds
 @property  unsigned long locationNumDecimalsOfPrecision

  // instance methods
  -[WFInternalAppSettings copyWithZone:]
  -[WFInternalAppSettings apiVersion]
  -[WFInternalAppSettings aqiEnabledCountryCodes]
  -[WFInternalAppSettings networkFailedAttemptsLimit]
  -[WFInternalAppSettings networkSwitchExpirationTimeInSeconds]
  -[WFInternalAppSettings apiVersionFallback]
  -[WFInternalAppSettings locationNumDecimalsOfPrecision]


WFAirPollutant : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *localizedName
 @property  NSString *localizedDescription
 @property  double amount
 @property  NSString *unit
 @property  NSString *localizedCategoryDescription
 @property  unsigned long categoryIndex
 @property  unsigned long index

  // class methods
  +[WFAirPollutant supportsSecureCoding]

  // instance methods
  -[WFAirPollutant copyWithZone:]
  -[WFAirPollutant localizedDescription]
  -[WFAirPollutant encodeWithCoder:]
  -[WFAirPollutant initWithCoder:]
  -[WFAirPollutant .cxx_destruct]
  -[WFAirPollutant index]
  -[WFAirPollutant unit]
  -[WFAirPollutant localizedName]
  -[WFAirPollutant setLocalizedDescription:]
  -[WFAirPollutant amount]
  -[WFAirPollutant setAmount:]
  -[WFAirPollutant setIndex:]
  -[WFAirPollutant setLocalizedName:]
  -[WFAirPollutant setUnit:]
  -[WFAirPollutant categoryIndex]
  -[WFAirPollutant localizedCategoryDescription]
  -[WFAirPollutant setLocalizedCategoryDescription:]
  -[WFAirPollutant setCategoryIndex:]


WFWeatherDataServiceRequestFormatterV1 : NSObject /usr/lib/libSystem.B.dylib <WFForecastRequestFormatter, WFForecastRequestFormatterMultiHost>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherDataServiceRequestFormatterV1 hostURLForService]
  +[WFWeatherDataServiceRequestFormatterV1 forecastRequest:forLocation:locale:date:rules:]
  +[WFWeatherDataServiceRequestFormatterV1 forecastRequest:forLocation:locale:date:]
  +[WFWeatherDataServiceRequestFormatterV1 hostURLForEnvironment:]
  +[WFWeatherDataServiceRequestFormatterV1 geocodePathForLocation:rules:]


WFTypes : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[WFTypes WeatherDescriptions]


WFWeatherConditions : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSMutableDictionary *components
 @property  {os_unfair_lock_s=I} componentsLock
 @property  WFLocation *location
 @property  BOOL nightForecast

  // class methods
  +[WFWeatherConditions supportsSecureCoding]

  // instance methods
  -[WFWeatherConditions init]
  -[WFWeatherConditions copyWithZone:]
  -[WFWeatherConditions encodeWithCoder:]
  -[WFWeatherConditions initWithCoder:]
  -[WFWeatherConditions objectForKeyedSubscript:]
  -[WFWeatherConditions .cxx_destruct]
  -[WFWeatherConditions setValue:forComponent:]
  -[WFWeatherConditions valueForComponent:]
  -[WFWeatherConditions setObject:forKeyedSubscript:]
  -[WFWeatherConditions dictionaryRepresentation]
  -[WFWeatherConditions components]
  -[WFWeatherConditions location]
  -[WFWeatherConditions setLocation:]
  -[WFWeatherConditions _commonInit]
  -[WFWeatherConditions setComponents:]
  -[WFWeatherConditions setNightForecast:]
  -[WFWeatherConditions isNightForecast]
  -[WFWeatherConditions valueForComponentSync:]
  -[WFWeatherConditions _retrieveSunrise:sunset:]
  -[WFWeatherConditions setValueSync:forComponent:]
  -[WFWeatherConditions wf_isDayIfSunrise:sunset:]
  -[WFWeatherConditions allComponents]
  -[WFWeatherConditions wf_isDay]
  -[WFWeatherConditions componentsLock]
  -[WFWeatherConditions setComponentsLock:]


WFWeatherDataServiceParserV1 : NSObject /usr/lib/libSystem.B.dylib <WFForecastDataParser>
 @property  NSCalendar *calendar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherDataServiceParserV1 init]
  -[WFWeatherDataServiceParserV1 .cxx_destruct]
  -[WFWeatherDataServiceParserV1 calendar]
  -[WFWeatherDataServiceParserV1 parseAlmanacFromData:]
  -[WFWeatherDataServiceParserV1 dailyAlmanacDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parsePollenFromData:]
  -[WFWeatherDataServiceParserV1 pollenDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherDataServiceParserV1 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherDataServiceParserV1 parseMetaDataFromData:]
  -[WFWeatherDataServiceParserV1 parseWeatherComponentsFromData:]
  -[WFWeatherDataServiceParserV1 parseHourlyForecastFromData:]
  -[WFWeatherDataServiceParserV1 hourlyForecastDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseHourlyHistoryFromData:]
  -[WFWeatherDataServiceParserV1 hourlyHistoryDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseForecastDataFromDict:types:location:locale:date:error:rules:]
  -[WFWeatherDataServiceParserV1 currentObservationsDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseCurrentObservationsFromData:]
  -[WFWeatherDataServiceParserV1 dailyHistoryDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseDailyHistoryFromData:]
  -[WFWeatherDataServiceParserV1 dailyForecastDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseDailyForecastFromData:]
  -[WFWeatherDataServiceParserV1 airQualityDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseAirQualityFromData:locale:]
  -[WFWeatherDataServiceParserV1 nowLinksDictFromData:types:]
  -[WFWeatherDataServiceParserV1 parseNowLinksFromData:intoConditions:]
  -[WFWeatherDataServiceParserV1 parseWeatherComponentsFromData:intoConditions:]
  -[WFWeatherDataServiceParserV1 parsePollutants:]


WFURLComponents : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  BOOL isLocalWeatherCity
 @property  unsigned long cityIndex
 @property  NSLocale *locale
 @property  NSString *platform
 @property  unsigned long destination
 @property  CLLocation *location
 @property  NSString *locationName
 @property  BOOL showHourlyWeatherOnly
 @property  NSURL *URL

  // class methods
  +[WFURLComponents supportsSecureCoding]
  +[WFURLComponents componentsForURL:]
  +[WFURLComponents locationForURLComponents:completion:]
  +[WFURLComponents locationForURL:completion:]
  +[WFURLComponents componentsForLocation:]

  // instance methods
  -[WFURLComponents init]
  -[WFURLComponents isEqual:]
  -[WFURLComponents copyWithZone:]
  -[WFURLComponents encodeWithCoder:]
  -[WFURLComponents initWithCoder:]
  -[WFURLComponents setLocale:]
  -[WFURLComponents .cxx_destruct]
  -[WFURLComponents locale]
  -[WFURLComponents isEqualToComponents:]
  -[WFURLComponents URL]
  -[WFURLComponents platform]
  -[WFURLComponents location]
  -[WFURLComponents destination]
  -[WFURLComponents setDestination:]
  -[WFURLComponents locationName]
  -[WFURLComponents setPlatform:]
  -[WFURLComponents setLocation:]
  -[WFURLComponents initWithLocation:]
  -[WFURLComponents setLocationName:]
  -[WFURLComponents isLocalWeatherCity]
  -[WFURLComponents setIsLocalWeatherCity:]
  -[WFURLComponents cityIndex]
  -[WFURLComponents setShowHourlyWeatherOnly:]
  -[WFURLComponents setCityIndex:]
  -[WFURLComponents showHourlyWeatherOnly]
  -[WFURLComponents _canBuildURLWithProvidedComponents]


WFAirQualityConditions : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  WFLocation *location
 @property  NSDate *expirationDate
 @property  NSDate *date
 @property  NSString *provider
 @property  NSString *localizedDisclaimer
 @property  NSArray *pollutants
 @property  WFAirPollutant *primaryPollutant
 @property  unsigned long localizedAirQualityIndex
 @property  WFAQIScaleCategory *localizedAirQualityScaleCategory
 @property  unsigned long category
 @property  NSLocale *locale
 @property  NSString *localizedAirQualityCategory
 @property  NSString *airQualityScale
 @property  BOOL expired

  // class methods
  +[WFAirQualityConditions supportsSecureCoding]

  // instance methods
  -[WFAirQualityConditions copyWithZone:]
  -[WFAirQualityConditions encodeWithCoder:]
  -[WFAirQualityConditions initWithCoder:]
  -[WFAirQualityConditions setLocale:]
  -[WFAirQualityConditions .cxx_destruct]
  -[WFAirQualityConditions date]
  -[WFAirQualityConditions locale]
  -[WFAirQualityConditions category]
  -[WFAirQualityConditions setCategory:]
  -[WFAirQualityConditions expirationDate]
  -[WFAirQualityConditions setExpirationDate:]
  -[WFAirQualityConditions setProvider:]
  -[WFAirQualityConditions location]
  -[WFAirQualityConditions setDate:]
  -[WFAirQualityConditions provider]
  -[WFAirQualityConditions setLocation:]
  -[WFAirQualityConditions isExpired]
  -[WFAirQualityConditions airQualityIndex]
  -[WFAirQualityConditions pollutants]
  -[WFAirQualityConditions setPollutants:]
  -[WFAirQualityConditions airQualityScale]
  -[WFAirQualityConditions setLocalizedAirQualityIndex:]
  -[WFAirQualityConditions setLocalizedAirQualityScaleCategory:]
  -[WFAirQualityConditions localizedAirQualityScaleCategory]
  -[WFAirQualityConditions localizedAirQualityIndex]
  -[WFAirQualityConditions setAirQualityScale:]
  -[WFAirQualityConditions setLocalizedAirQualityCategory:]
  -[WFAirQualityConditions primaryPollutant]
  -[WFAirQualityConditions setPrimaryPollutant:]
  -[WFAirQualityConditions localizedDisclaimer]
  -[WFAirQualityConditions setLocalizedDisclaimer:]
  -[WFAirQualityConditions localizedAirQualityCategory]


WFRequestFailureTracker : NSObject /usr/lib/libSystem.B.dylib
 @property  unsigned long requestFailures
 @property  unsigned long requestSuccesses

  // instance methods
  -[WFRequestFailureTracker incrementFailCount]
  -[WFRequestFailureTracker incrementSuccessCount]
  -[WFRequestFailureTracker failureRate]
  -[WFRequestFailureTracker requestFailures]
  -[WFRequestFailureTracker requestSuccesses]


WFAggregateDictionary : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *failTrackerDict
 @property  NSString *domain
 @property  unsigned long requestFailures
 @property  unsigned long requestSuccesses

  // class methods
  +[WFAggregateDictionary defaultAggregateDictionary]

  // instance methods
  -[WFAggregateDictionary init]
  -[WFAggregateDictionary setQueue:]
  -[WFAggregateDictionary queue]
  -[WFAggregateDictionary domain]
  -[WFAggregateDictionary .cxx_destruct]
  -[WFAggregateDictionary setDomain:]
  -[WFAggregateDictionary failureRate]
  -[WFAggregateDictionary requestFailures]
  -[WFAggregateDictionary requestSuccesses]
  -[WFAggregateDictionary setFailTrackerDict:]
  -[WFAggregateDictionary _queue_addValueForScalarKey:value:]
  -[WFAggregateDictionary failTrackerForAPIVersion:]
  -[WFAggregateDictionary _queue_pushValue:forKey:]
  -[WFAggregateDictionary failTrackerDict]
  -[WFAggregateDictionary logRequestFailureForAPIVersion:date:]
  -[WFAggregateDictionary logRequestSuccessForAPIVersion:date:]
  -[WFAggregateDictionary logFallbackFromAPIVersion:date:]
  -[WFAggregateDictionary logLocationAccuracy:]
  -[WFAggregateDictionary setRequestFailures:]
  -[WFAggregateDictionary setRequestSuccesses:]


WFWeatherStoreService : NSObject /usr/lib/libSystem.B.dylib <WFWeatherStore>
 @property  NSObject<OS_dispatch_queue> *incomingRequestQueue
 @property  NSObject<OS_dispatch_queue> *parseQueue
 @property  NSObject<OS_dispatch_queue> *mapQueue
 @property  {os_unfair_lock_s=I} retryLock
 @property  NSMutableDictionary *UUIDToCallbackMap
 @property  NSMutableDictionary *UUIDToURLMap
 @property  NSMutableDictionary *URLToTaskMap
 @property  NSMutableDictionary *URLToCallbackMap
 @property  WFWeatherStoreServiceConfiguration *configuration
 @property  WFWeatherStoreCache *cache
 @property  WFNetworkRetryManager *retryManager
 @property  @? forecastRequestStartingCallback
 @property  @? locationGeocodeForCoordinateRequestStartingCallback
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherStoreService init]
  -[WFWeatherStoreService .cxx_destruct]
  -[WFWeatherStoreService setConfiguration:]
  -[WFWeatherStoreService setCache:]
  -[WFWeatherStoreService cache]
  -[WFWeatherStoreService configuration]
  -[WFWeatherStoreService cancelTaskWithIdentifier:]
  -[WFWeatherStoreService initWithConfiguration:]
  -[WFWeatherStoreService initWithConfiguration:error:]
  -[WFWeatherStoreService parseQueue]
  -[WFWeatherStoreService setParseQueue:]
  -[WFWeatherStoreService setForecastRequestStartingCallback:]
  -[WFWeatherStoreService setLocationGeocodeForCoordinateRequestStartingCallback:]
  -[WFWeatherStoreService setIncomingRequestQueue:]
  -[WFWeatherStoreService incomingRequestQueue]
  -[WFWeatherStoreService forecastForLocation:locale:atDate:requestIdentifier:options:completionHandler:]
  -[WFWeatherStoreService hourlyForecastForLocation:locale:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService dailyForecastForLocation:locale:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService forecast:forLocation:locale:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService airQualityForLocation:locale:requestIdentifier:options:completionHandler:]
  -[WFWeatherStoreService invalidateCacheWithIdentifier:]
  -[WFWeatherStoreService locationGeocodeForCoordinateRequestStartingCallback]
  -[WFWeatherStoreService setMapQueue:]
  -[WFWeatherStoreService setURLToTaskMap:]
  -[WFWeatherStoreService setURLToCallbackMap:]
  -[WFWeatherStoreService setUUIDToURLMap:]
  -[WFWeatherStoreService setUUIDToCallbackMap:]
  -[WFWeatherStoreService setRetryManager:]
  -[WFWeatherStoreService setRetryLock:]
  -[WFWeatherStoreService _cancelWithRequestIdentifier:]
  -[WFWeatherStoreService _forecastConditionsForTypes:location:locale:date:requestIdentifier:completionHandler:]
  -[WFWeatherStoreService _cachedHourlyForecastedConditionsForLocation:date:]
  -[WFWeatherStoreService _cachedDailyForecastedConditionsForLocation:date:]
  -[WFWeatherStoreService _cachedAirQualityConditionsForLocation:date:]
  -[WFWeatherStoreService apiVersionForSettings:]
  -[WFWeatherStoreService _cacheParsedForecastData:types:location:date:requestIdentifier:]
  -[WFWeatherStoreService _submitRequest:withIdentifier:forLocation:forecastTypes:configuration:locale:date:apiVersion:completionHandler:]
  -[WFWeatherStoreService _cachedCurrentObservationsForLocation:date:]
  -[WFWeatherStoreService _cachedDailyPollenForecastedConditionsForLocation:date:]
  -[WFWeatherStoreService _cachedHistoricalObservationsForLast24hForLocation:date:]
  -[WFWeatherStoreService _enumerateForecastTypesIn:usingBlock:]
  -[WFWeatherStoreService _cachedData:forLocation:date:]
  -[WFWeatherStoreService _cacheObject:type:date:forLocation:]
  -[WFWeatherStoreService _isConnectivityAvailableForWeatherHost:]
  -[WFWeatherStoreService mapQueue]
  -[WFWeatherStoreService _taskForURL:]
  -[WFWeatherStoreService requestSuccessForAPIVersion:]
  -[WFWeatherStoreService requestFailureForAPIVersion:error:]
  -[WFWeatherStoreService _executeCallbacksForURL:parsedForecastData:error:]
  -[WFWeatherStoreService _setTask:requestIdentifier:callback:forURL:]
  -[WFWeatherStoreService forecastRequestStartingCallback]
  -[WFWeatherStoreService _addCallback:requestIdentifier:forURL:]
  -[WFWeatherStoreService retryManager]
  -[WFWeatherStoreService URLToCallbackMap]
  -[WFWeatherStoreService URLToTaskMap]
  -[WFWeatherStoreService UUIDToCallbackMap]
  -[WFWeatherStoreService UUIDToURLMap]
  -[WFWeatherStoreService _cleanupCallbacksAndTasksForURL:]
  -[WFWeatherStoreService completeErroneousForecastRequestWithHandler:requestIdentifier:error:]
  -[WFWeatherStoreService retryLock]


WFAggregateCommonResponse : WFResponse <NSCopying, NSSecureCoding>
 @property  WFAirQualityConditions *airQualityObservations
 @property  WFWeatherConditions *currentObservations
 @property  NSArray *lastTwentyFourHoursOfObservations
 @property  NSArray *hourlyForecastedConditions
 @property  NSArray *dailyForecastedConditions
 @property  NSArray *dailyPollenForecastedConditions
 @property  BOOL responseWasFromCache

  // class methods
  +[WFAggregateCommonResponse supportsSecureCoding]

  // instance methods
  -[WFAggregateCommonResponse copyWithZone:]
  -[WFAggregateCommonResponse encodeWithCoder:]
  -[WFAggregateCommonResponse initWithCoder:]
  -[WFAggregateCommonResponse .cxx_destruct]
  -[WFAggregateCommonResponse setAirQualityObservations:]
  -[WFAggregateCommonResponse airQualityObservations]
  -[WFAggregateCommonResponse lastTwentyFourHoursOfObservations]
  -[WFAggregateCommonResponse setLastTwentyFourHoursOfObservations:]
  -[WFAggregateCommonResponse setResponseWasFromCache:]
  -[WFAggregateCommonResponse responseWasFromCache]
  -[WFAggregateCommonResponse setCurrentObservations:]
  -[WFAggregateCommonResponse setHourlyForecastedConditions:]
  -[WFAggregateCommonResponse setDailyForecastedConditions:]
  -[WFAggregateCommonResponse setDailyPollenForecastedConditions:]
  -[WFAggregateCommonResponse currentObservations]
  -[WFAggregateCommonResponse hourlyForecastedConditions]
  -[WFAggregateCommonResponse dailyForecastedConditions]
  -[WFAggregateCommonResponse dailyPollenForecastedConditions]


WFWeatherDataServiceParserMetadataV1 : NSObject /usr/lib/libSystem.B.dylib
 @property  NSDate *readTime
 @property  NSDate *expireTime
 @property  unsigned long version
 @property  WFLocation *location
 @property  NSString *language

  // instance methods
  -[WFWeatherDataServiceParserMetadataV1 .cxx_destruct]
  -[WFWeatherDataServiceParserMetadataV1 version]
  -[WFWeatherDataServiceParserMetadataV1 setVersion:]
  -[WFWeatherDataServiceParserMetadataV1 location]
  -[WFWeatherDataServiceParserMetadataV1 language]
  -[WFWeatherDataServiceParserMetadataV1 setLanguage:]
  -[WFWeatherDataServiceParserMetadataV1 setLocation:]
  -[WFWeatherDataServiceParserMetadataV1 readTime]
  -[WFWeatherDataServiceParserMetadataV1 setReadTime:]
  -[WFWeatherDataServiceParserMetadataV1 expireTime]
  -[WFWeatherDataServiceParserMetadataV1 setExpireTime:]


WFAQIScaleCategory : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  unsigned long categoryIndex
 @property  NSString *localizedCategoryDescription

  // class methods
  +[WFAQIScaleCategory supportsSecureCoding]

  // instance methods
  -[WFAQIScaleCategory isEqual:]
  -[WFAQIScaleCategory copyWithZone:]
  -[WFAQIScaleCategory encodeWithCoder:]
  -[WFAQIScaleCategory initWithCoder:]
  -[WFAQIScaleCategory .cxx_destruct]
  -[WFAQIScaleCategory categoryIndex]
  -[WFAQIScaleCategory localizedCategoryDescription]
  -[WFAQIScaleCategory isEqualToScaleCategory:]
  -[WFAQIScaleCategory initWithCategoryIndex:localizedCategoryDescription:]


WFAQIScaleATMO : NSObject /usr/lib/libSystem.B.dylib <WFAQIScale>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name

  // instance methods
  -[WFAQIScaleATMO name]
  -[WFAQIScaleATMO scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryATMO : WFAQIScaleCategory

WFAQIScaleCAQI : NSObject /usr/lib/libSystem.B.dylib <WFAQIScale>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name

  // instance methods
  -[WFAQIScaleCAQI name]
  -[WFAQIScaleCAQI scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryCAQI : WFAQIScaleCategory

WFAQIScaleDAQI : NSObject /usr/lib/libSystem.B.dylib <WFAQIScale>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name

  // instance methods
  -[WFAQIScaleDAQI name]
  -[WFAQIScaleDAQI scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryDAQI : WFAQIScaleCategory

WFAQIScaleEPA : NSObject /usr/lib/libSystem.B.dylib <WFAQIScale>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name

  // instance methods
  -[WFAQIScaleEPA name]
  -[WFAQIScaleEPA scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryEPA : WFAQIScaleCategory

WFAQIScaleHJ6332012 : NSObject /usr/lib/libSystem.B.dylib <WFAQIScale>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name

  // instance methods
  -[WFAQIScaleHJ6332012 name]
  -[WFAQIScaleHJ6332012 scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryHJ6332012 : WFAQIScaleCategory

WFAQIScaleIMECA : NSObject /usr/lib/libSystem.B.dylib <WFAQIScale>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name

  // instance methods
  -[WFAQIScaleIMECA name]
  -[WFAQIScaleIMECA scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryIMECA : WFAQIScaleCategory

WFAQIScaleNAQI : NSObject /usr/lib/libSystem.B.dylib <WFAQIScale>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name

  // instance methods
  -[WFAQIScaleNAQI name]
  -[WFAQIScaleNAQI scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryNAQI : WFAQIScaleCategory

WFAQIScaleUBA : NSObject /usr/lib/libSystem.B.dylib <WFAQIScale>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *name

  // instance methods
  -[WFAQIScaleUBA name]
  -[WFAQIScaleUBA scaleCategoryForCategoryIndex:localizedCategoryDescription:]


WFAQIScaleCategoryUBA : WFAQIScaleCategory

WFWeatherDataServiceRequestSigner : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[WFWeatherDataServiceRequestSigner signRequest:withDate:]
  +[WFWeatherDataServiceRequestSigner signRequest:withSecret:andDate:]
  +[WFWeatherDataServiceRequestSigner buildAuthHeader:withSecret:andDate:]
  +[WFWeatherDataServiceRequestSigner roundDate:toMinutes:]


WFWeatherHistorical1DayParserV2 : NSObject /usr/lib/libSystem.B.dylib <WFForecastDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherHistorical1DayParserV2 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherHistorical1DayParserV2 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherHistorical1DayParserV2 parseHistoricalForecast:location:date:error:]
  -[WFWeatherHistorical1DayParserV2 parseHistoricalForecastConditionsFromObservations:forDate:]
  -[WFWeatherHistorical1DayParserV2 parseForecastConditionsFromObservations:calendar:]


WFAirQualityResponse : WFResponse <NSSecureCoding>
 @property  BOOL responseWasFromCache
 @property  NSData *rawAPIData
 @property  WFAirQualityConditions *airQualityConditions

  // class methods
  +[WFAirQualityResponse supportsSecureCoding]

  // instance methods
  -[WFAirQualityResponse encodeWithCoder:]
  -[WFAirQualityResponse initWithCoder:]
  -[WFAirQualityResponse .cxx_destruct]
  -[WFAirQualityResponse setAirQualityConditions:]
  -[WFAirQualityResponse airQualityConditions]
  -[WFAirQualityResponse rawAPIData]
  -[WFAirQualityResponse setRawAPIData:]
  -[WFAirQualityResponse setResponseWasFromCache:]
  -[WFAirQualityResponse responseWasFromCache]


WFTemperatureUnitChangeRequest : WFTemperatureUnitRequest
 @property  int temperatureUnit

  // instance methods
  -[WFTemperatureUnitChangeRequest temperatureUnit]
  -[WFTemperatureUnitChangeRequest setTemperatureUnit:]
  -[WFTemperatureUnitChangeRequest startWithService:]


WFWeatherUndergroundParser : NSObject /usr/lib/libSystem.B.dylib <WFForecastDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherUndergroundParser expectedDailyForecastCount]
  +[WFWeatherUndergroundParser expectedHourlyForecastCount]
  +[WFWeatherUndergroundParser componentsForCurrentForecast]
  +[WFWeatherUndergroundParser componentsForHourlyForecasts]
  +[WFWeatherUndergroundParser componentsForDailyForecasts]
  +[WFWeatherUndergroundParser conditionFromWeatherUndergroundPhrase:]

  // instance methods
  -[WFWeatherUndergroundParser parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherUndergroundParser parseForecastData:types:location:locale:date:error:]
  -[WFWeatherUndergroundParser parseHistoricalForecast:date:error:]
  -[WFWeatherUndergroundParser logParsingErrorAtKeyPath:error:]
  -[WFWeatherUndergroundParser dateComponentsFromUTCDict:toUnitGranularity:]
  -[WFWeatherUndergroundParser sanitizedTemperatureForCelsiusKeyPath:fahrenheitKeyPath:dict:]
  -[WFWeatherUndergroundParser sanitizedNumberForKeyPath:dict:]


WFHourlyForecastRequest : WFAggregateForecastRequest
 @property  NSLocale *locale

  // instance methods
  -[WFHourlyForecastRequest setLocale:]
  -[WFHourlyForecastRequest .cxx_destruct]
  -[WFHourlyForecastRequest locale]
  -[WFHourlyForecastRequest initWithLocation:completionHandler:]
  -[WFHourlyForecastRequest startWithService:]


WFForecastResponse : WFResponse <NSSecureCoding>
 @property  WFWeatherConditions *forecast
 @property  unsigned long forecastType
 @property  BOOL responseWasFromCache
 @property  NSData *rawAPIData

  // class methods
  +[WFForecastResponse supportsSecureCoding]

  // instance methods
  -[WFForecastResponse encodeWithCoder:]
  -[WFForecastResponse initWithCoder:]
  -[WFForecastResponse .cxx_destruct]
  -[WFForecastResponse forecast]
  -[WFForecastResponse rawAPIData]
  -[WFForecastResponse setRawAPIData:]
  -[WFForecastResponse setResponseWasFromCache:]
  -[WFForecastResponse responseWasFromCache]
  -[WFForecastResponse forecastType]
  -[WFForecastResponse setForecastType:]
  -[WFForecastResponse setForecast:]


WFWeatherHistorical1DayRequestFormatterV2 : NSObject /usr/lib/libSystem.B.dylib <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherHistorical1DayRequestFormatterV2 dateFormatter]
  +[WFWeatherHistorical1DayRequestFormatterV2 hostURLForService]
  +[WFWeatherHistorical1DayRequestFormatterV2 forecastRequest:forLocation:locale:date:rules:]
  +[WFWeatherHistorical1DayRequestFormatterV2 forecastRequest:forLocation:locale:date:]


WFFavoriteLocationRequest : WFTask
 @property  @? resultHandler

  // instance methods
  -[WFFavoriteLocationRequest .cxx_destruct]
  -[WFFavoriteLocationRequest resultHandler]
  -[WFFavoriteLocationRequest initWithResultHandler:]
  -[WFFavoriteLocationRequest handleResponse:]
  -[WFFavoriteLocationRequest startWithService:]
  -[WFFavoriteLocationRequest handleCancellation]


WFWeatherChannelAPIConfiguration : NSObject /usr/lib/libSystem.B.dylib <WFAPIConfigurationProtocol>
 @property  NSMutableDictionary *requestFormatterForForecastType
 @property  NSMutableDictionary *requestParserForForecastType
 @property  Class defaultForecastRequestFormatterClass
 @property  <WFForecastDataParser> *defaultForecastParser
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isValid

  // instance methods
  -[WFWeatherChannelAPIConfiguration copyWithZone:]
  -[WFWeatherChannelAPIConfiguration isValid]
  -[WFWeatherChannelAPIConfiguration .cxx_destruct]
  -[WFWeatherChannelAPIConfiguration initWithVersion:]
  -[WFWeatherChannelAPIConfiguration hostUrl]
  -[WFWeatherChannelAPIConfiguration forecastRequestForTypes:location:date:error:rules:]
  -[WFWeatherChannelAPIConfiguration parseForecast:data:location:locale:date:error:rules:]
  -[WFWeatherChannelAPIConfiguration setDefaultForecastFormatter:]
  -[WFWeatherChannelAPIConfiguration setDefaultForecastParser:]
  -[WFWeatherChannelAPIConfiguration setRequestFormatterForForecastType:]
  -[WFWeatherChannelAPIConfiguration setRequestParserForForecastType:]
  -[WFWeatherChannelAPIConfiguration setRequestFormatter:forForecastType:]
  -[WFWeatherChannelAPIConfiguration setRequestParser:forForecastType:]
  -[WFWeatherChannelAPIConfiguration requestFormatterForForecastType]
  -[WFWeatherChannelAPIConfiguration defaultForecastRequestFormatterClass]
  -[WFWeatherChannelAPIConfiguration requestParserForForecastType]
  -[WFWeatherChannelAPIConfiguration defaultForecastParser]
  -[WFWeatherChannelAPIConfiguration setDefaultForecastRequestFormatterClass:]


WFTaskIdentifier : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *UUID
 @property  NSString *processName
 @property  int pid

  // class methods
  +[WFTaskIdentifier supportsSecureCoding]
  +[WFTaskIdentifier defaultIdentifier]

  // instance methods
  -[WFTaskIdentifier init]
  -[WFTaskIdentifier isEqual:]
  -[WFTaskIdentifier copyWithZone:]
  -[WFTaskIdentifier encodeWithCoder:]
  -[WFTaskIdentifier initWithCoder:]
  -[WFTaskIdentifier .cxx_destruct]
  -[WFTaskIdentifier processName]
  -[WFTaskIdentifier UUID]
  -[WFTaskIdentifier pid]


WFWeatherDataServiceAPIConfiguration : NSObject /usr/lib/libSystem.B.dylib <WFAPIConfigurationProtocol>
 @property  Class forecastRequestFormatterClass
 @property  <WFForecastDataParser> *forecastParser
 @property  NSString *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isValid

  // instance methods
  -[WFWeatherDataServiceAPIConfiguration copyWithZone:]
  -[WFWeatherDataServiceAPIConfiguration isValid]
  -[WFWeatherDataServiceAPIConfiguration .cxx_destruct]
  -[WFWeatherDataServiceAPIConfiguration environment]
  -[WFWeatherDataServiceAPIConfiguration hostUrl]
  -[WFWeatherDataServiceAPIConfiguration forecastRequestForTypes:location:date:error:rules:]
  -[WFWeatherDataServiceAPIConfiguration parseForecast:data:location:locale:date:error:rules:]
  -[WFWeatherDataServiceAPIConfiguration initWithVersion:environment:]
  -[WFWeatherDataServiceAPIConfiguration setForecastRequestFormatterClass:]
  -[WFWeatherDataServiceAPIConfiguration setForecastParser:]
  -[WFWeatherDataServiceAPIConfiguration forecastRequestFormatterClass]
  -[WFWeatherDataServiceAPIConfiguration forecastParser]


WFQueryDispatcher : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *queriesPendingResponse

  // instance methods
  -[WFQueryDispatcher init]
  -[WFQueryDispatcher setQueue:]
  -[WFQueryDispatcher queue]
  -[WFQueryDispatcher .cxx_destruct]
  -[WFQueryDispatcher cancelTaskWithIdentifier:]
  -[WFQueryDispatcher invalidateCacheWithIdentifier:]
  -[WFQueryDispatcher locationForString:taskIdentifier:results:]
  -[WFQueryDispatcher locationForCoordinate:taskIdentifier:results:]
  -[WFQueryDispatcher locationForSearchCompletion:taskIdentifier:results:]
  -[WFQueryDispatcher queriesPendingResponse]
  -[WFQueryDispatcher removePendingQueryWithIdentifier:]
  -[WFQueryDispatcher dispatchQuery:]
  -[WFQueryDispatcher fetchFavoriteLocationsWithTaskIdentifier:results:]
  -[WFQueryDispatcher setQueriesPendingResponse:]


WFResourceManager : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[WFResourceManager sharedManager]

  // instance methods
  -[WFResourceManager localizedStringForKey:]
  -[WFResourceManager tableName]
  -[WFResourceManager frameworkBundle]


WFWeatherChannelParserV3 : NSObject /usr/lib/libSystem.B.dylib <WFForecastDataParser>
 @property  NSCalendar *calendar
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFWeatherChannelParserV3 init]
  -[WFWeatherChannelParserV3 .cxx_destruct]
  -[WFWeatherChannelParserV3 calendar]
  -[WFWeatherChannelParserV3 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherChannelParserV3 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherChannelParserV3 _parseCommonComponents:intoConditions:]
  -[WFWeatherChannelParserV3 _parseForecastedConditions:individualForecastProcessingBlock:uniqueParsingBlock:]
  -[WFWeatherChannelParserV3 _parseCurrentConditions:]
  -[WFWeatherChannelParserV3 _parseWebLinks:intoWeatherConditions:]
  -[WFWeatherChannelParserV3 _parseLastTwentyFourHoursOfObservations:]
  -[WFWeatherChannelParserV3 _parseHourlyForecastedConditions:]
  -[WFWeatherChannelParserV3 _parseDailyForecastedConditions:]
  -[WFWeatherChannelParserV3 parseAirQualityData:location:locale:error:]
  -[WFWeatherChannelParserV3 _parseDailyPollenForecastedConditions:]
  -[WFWeatherChannelParserV3 _parsePollutants:]


WFResponse : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  double executionTime
 @property  NSUUID *identifier
 @property  NSString *type
 @property  NSError *error

  // class methods
  +[WFResponse supportsSecureCoding]
  +[WFResponse responseWithIdentifier:error:]

  // instance methods
  -[WFResponse type]
  -[WFResponse encodeWithCoder:]
  -[WFResponse initWithCoder:]
  -[WFResponse .cxx_destruct]
  -[WFResponse identifier]
  -[WFResponse error]
  -[WFResponse setError:]
  -[WFResponse initWithIdentifier:]
  -[WFResponse executionTime]
  -[WFResponse initWithIdentifier:error:]
  -[WFResponse setExecutionTime:]


WFNetworkFailTracker : NSObject /usr/lib/libSystem.B.dylib
 @property  int numConsecutiveFails
 @property  double lastFailTimeInSeconds

  // instance methods
  -[WFNetworkFailTracker incrementFailCount]
  -[WFNetworkFailTracker lastFailTimeInSeconds]
  -[WFNetworkFailTracker lastFailTimeExpiredForSettings:]
  -[WFNetworkFailTracker numConsecutiveFails]


WFNetworkRetryManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *failTrackerDict
 @property  NSMutableSet *failingAPIVersionsSet
 @property  NSArray *apiVersions
 @property  NSArray *failingAPIVersions

  // instance methods
  -[WFNetworkRetryManager init]
  -[WFNetworkRetryManager .cxx_destruct]
  -[WFNetworkRetryManager failTrackerDict]
  -[WFNetworkRetryManager apiVersionForSettings:]
  -[WFNetworkRetryManager requestSuccessForAPIVersion:]
  -[WFNetworkRetryManager requestFailureForAPIVersion:error:]
  -[WFNetworkRetryManager apiVersionForSettings:aggregateDictionary:]
  -[WFNetworkRetryManager defaultAPIVersionIsFailingForSettings:failTracker:]
  -[WFNetworkRetryManager failingAPIVersionsSet]
  -[WFNetworkRetryManager requestSuccessForAPIVersion:aggregateDictionary:]
  -[WFNetworkRetryManager requestFailureForAPIVersion:aggregateDictionary:error:]
  -[WFNetworkRetryManager apiVersions]
  -[WFNetworkRetryManager failingAPIVersions]
  -[WFNetworkRetryManager consecutiveFailsForAPIVersion:]
  -[WFNetworkRetryManager lastFailTimeInSecondsForAPIVersion:]


WFTemperature : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  double celsius
 @property  double fahrenheit
 @property  double kelvin

  // class methods
  +[WFTemperature supportsSecureCoding]

  // instance methods
  -[WFTemperature init]
  -[WFTemperature isEqual:]
  -[WFTemperature copyWithZone:]
  -[WFTemperature encodeWithCoder:]
  -[WFTemperature initWithCoder:]
  -[WFTemperature celsius]
  -[WFTemperature fahrenheit]
  -[WFTemperature kelvin]
  -[WFTemperature temperatureForUnit:]
  -[WFTemperature initWithTemperatureUnit:value:]
  -[WFTemperature setCelsius:]
  -[WFTemperature setKelvin:]
  -[WFTemperature setFahrenheit:]
  -[WFTemperature isEqualToTemperature:]
  -[WFTemperature _setValue:forUnit:]
  -[WFTemperature _resetTemperatureValues]
  -[WFTemperature _unitIsHydrated:outputValue:]


WFReachabilityConfigurationRequest : WFTask
 @property  @? resultHandler

  // instance methods
  -[WFReachabilityConfigurationRequest .cxx_destruct]
  -[WFReachabilityConfigurationRequest cleanup]
  -[WFReachabilityConfigurationRequest resultHandler]
  -[WFReachabilityConfigurationRequest setResultHandler:]
  -[WFReachabilityConfigurationRequest requiresResponse]
  -[WFReachabilityConfigurationRequest initWithResultHandler:]
  -[WFReachabilityConfigurationRequest handleResponse:]
  -[WFReachabilityConfigurationRequest startWithService:]
  -[WFReachabilityConfigurationRequest handleCancellation]


WFWeatherHistorical30DayParserV3 : NSObject /usr/lib/libSystem.B.dylib <WFForecastDataParser>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherHistorical30DayParserV3 dateFormatter]
  +[WFWeatherHistorical30DayParserV3 daysOfWeek]

  // instance methods
  -[WFWeatherHistorical30DayParserV3 parseForecastData:types:location:locale:date:error:rules:]
  -[WFWeatherHistorical30DayParserV3 parseForecastData:types:location:locale:date:error:]
  -[WFWeatherHistorical30DayParserV3 parseHistorical30DayForecastDataFromJson:location:date:error:]
  -[WFWeatherHistorical30DayParserV3 getDataIndexFromFirstDayOfWeek:andRequestedDate:]


WFLocation : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSString *wf_weatherChannelGeocodeValue
 @property  long long archiveVersion
 @property  NSString *city
 @property  NSString *county
 @property  NSString *state
 @property  NSString *stateAbbreviation
 @property  NSString *country
 @property  NSString *countryAbbreviation
 @property  NSString *weatherDisplayName
 @property  CLLocation *geoLocation
 @property  NSString *locationID
 @property  NSTimeZone *timeZone
 @property  NSString *displayName
 @property  NSDate *creationDate
 @property  BOOL shouldQueryForAirQualityData

  // class methods
  +[WFLocation supportsSecureCoding]
  +[WFLocation currentArchiveVersion]
  +[WFLocation knownKeys]
  +[WFLocation locationsByConsolidatingDuplicates:originalOrder:]
  +[WFLocation locationsByConsolidatingDuplicatesInBucket:]
  +[WFLocation locationsByFilteringDuplicates:]

  // instance methods
  -[WFLocation isEqual:]
  -[WFLocation copyWithZone:]
  -[WFLocation encodeWithCoder:]
  -[WFLocation initWithCoder:]
  -[WFLocation setTimeZone:]
  -[WFLocation .cxx_destruct]
  -[WFLocation timeZone]
  -[WFLocation state]
  -[WFLocation displayName]
  -[WFLocation setState:]
  -[WFLocation creationDate]
  -[WFLocation city]
  -[WFLocation country]
  -[WFLocation setDisplayName:]
  -[WFLocation setCreationDate:]
  -[WFLocation initWithPlacemark:]
  -[WFLocation setCountry:]
  -[WFLocation setCity:]
  -[WFLocation weatherDisplayName]
  -[WFLocation initWithMapItem:]
  -[WFLocation summary]
  -[WFLocation geoLocation]
  -[WFLocation setGeoLocation:]
  -[WFLocation locationID]
  -[WFLocation setLocationID:]
  -[WFLocation setCountryAbbreviation:]
  -[WFLocation sunriseForDate:]
  -[WFLocation sunsetForDate:]
  -[WFLocation countryAbbreviation]
  -[WFLocation isDay]
  -[WFLocation shouldQueryForAirQualityData]
  -[WFLocation initWithMapItem:isCurrentLocation:]
  -[WFLocation wf_weatherChannelGeocodeValue]
  -[WFLocation setWeatherDisplayName:]
  -[WFLocation setCounty:]
  -[WFLocation summaryThatIsCompact:]
  -[WFLocation county]
  -[WFLocation stateAbbreviation]
  -[WFLocation archiveVersion]
  -[WFLocation setStateAbbreviation:]
  -[WFLocation setArchiveVersion:]
  -[WFLocation isDayForDate:]
  -[WFLocation countriesSupportAQI]
  -[WFLocation initWithSearchResponse:]
  -[WFLocation localDataRepresentation]
  -[WFLocation initWithLocalDataRepresentation:]
  -[WFLocation cloudDictionaryRepresentation]
  -[WFLocation initWithCloudDictionaryRepresentation:]


WFDailyForecastRequest : WFAggregateForecastRequest
 @property  NSLocale *locale

  // class methods
  +[WFDailyForecastRequest supportsSecureCoding]

  // instance methods
  -[WFDailyForecastRequest setLocale:]
  -[WFDailyForecastRequest .cxx_destruct]
  -[WFDailyForecastRequest locale]
  -[WFDailyForecastRequest initWithLocation:completionHandler:]
  -[WFDailyForecastRequest startWithService:]


WFGeocodeRequest : WFTask
 @property  NSString *searchString
 @property  MKLocalSearchCompletion *autocompleteSearchResult
 @property  {CLLocationCoordinate2D=dd} coordinate
 @property  WFLocation *geocodedResult
 @property  @? resultHandler
 @property  NSString *searchTerm

  // instance methods
  -[WFGeocodeRequest .cxx_destruct]
  -[WFGeocodeRequest coordinate]
  -[WFGeocodeRequest cleanup]
  -[WFGeocodeRequest setCoordinate:]
  -[WFGeocodeRequest searchString]
  -[WFGeocodeRequest setSearchString:]
  -[WFGeocodeRequest resultHandler]
  -[WFGeocodeRequest searchTerm]
  -[WFGeocodeRequest initWithCoordinate:resultHandler:]
  -[WFGeocodeRequest initWithSearchString:resultHandler:]
  -[WFGeocodeRequest handleResponse:]
  -[WFGeocodeRequest startWithService:]
  -[WFGeocodeRequest initWithSearchCompletion:resultHandler:]
  -[WFGeocodeRequest handleCancellation]
  -[WFGeocodeRequest autocompleteSearchResult]
  -[WFGeocodeRequest setGeocodedResult:]
  -[WFGeocodeRequest geocodedResult]
  -[WFGeocodeRequest setAutocompleteSearchResult:]


WFAggregateForecastRequest : WFTask
 @property  WFLocation *location
 @property  @? completionHandler

  // instance methods
  -[WFAggregateForecastRequest .cxx_destruct]
  -[WFAggregateForecastRequest location]
  -[WFAggregateForecastRequest cleanup]
  -[WFAggregateForecastRequest completionHandler]
  -[WFAggregateForecastRequest setCompletionHandler:]
  -[WFAggregateForecastRequest setLocation:]
  -[WFAggregateForecastRequest initWithLocation:completionHandler:]
  -[WFAggregateForecastRequest handleResponse:]
  -[WFAggregateForecastRequest handleCancellation]


WFTask : NSObject /usr/lib/libSystem.B.dylib
 @property  WFTaskIdentifier *identifier
 @property  BOOL requiresResponse
 @property  NSProgress *progress
 @property  BOOL isCancelled

  // class methods
  +[WFTask sharedServiceConnection]

  // instance methods
  -[WFTask init]
  -[WFTask .cxx_destruct]
  -[WFTask identifier]
  -[WFTask cancel]
  -[WFTask start]
  -[WFTask isCancelled]
  -[WFTask progress]
  -[WFTask cleanup]
  -[WFTask setProgress:]
  -[WFTask requiresResponse]
  -[WFTask executeSynchronously]
  -[WFTask initWithResponseRequired:]
  -[WFTask handleResponse:]
  -[WFTask startWithService:]
  -[WFTask handleCancellation]


WFWeatherChannelRequestFormatterV3 : NSObject /usr/lib/libSystem.B.dylib <WFForecastRequestFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFWeatherChannelRequestFormatterV3 hostURLForService]
  +[WFWeatherChannelRequestFormatterV3 forecastRequest:forLocation:locale:date:rules:]
  +[WFWeatherChannelRequestFormatterV3 forecastRequest:forLocation:locale:date:queryItems:rules:]
  +[WFWeatherChannelRequestFormatterV3 forecastRequest:forLocation:locale:date:]
  +[WFWeatherChannelRequestFormatterV3 forecastRequestForComponents:location:locale:date:queryItems:]


WFFavoriteLocationResponse : WFResponse
 @property  NSArray *favoriteLocations

  // class methods
  +[WFFavoriteLocationResponse supportsSecureCoding]

  // instance methods
  -[WFFavoriteLocationResponse encodeWithCoder:]
  -[WFFavoriteLocationResponse initWithCoder:]
  -[WFFavoriteLocationResponse .cxx_destruct]
  -[WFFavoriteLocationResponse favoriteLocations]
  -[WFFavoriteLocationResponse initWithIdentifier:favorites:]


WFAggregateCommonForecast : NSObject /usr/lib/libSystem.B.dylib
 @property  WFAirQualityConditions *airQualityObservations
 @property  WFWeatherConditions *currentObservations
 @property  NSArray *lastTwentyFourHoursOfObservations
 @property  NSArray *hourlyForecastedConditions
 @property  NSArray *dailyForecastedConditions
 @property  NSArray *dailyPollenForecastedConditions

  // instance methods
  -[WFAggregateCommonForecast .cxx_destruct]
  -[WFAggregateCommonForecast setAirQualityObservations:]
  -[WFAggregateCommonForecast airQualityObservations]
  -[WFAggregateCommonForecast lastTwentyFourHoursOfObservations]
  -[WFAggregateCommonForecast setLastTwentyFourHoursOfObservations:]
  -[WFAggregateCommonForecast setCurrentObservations:]
  -[WFAggregateCommonForecast setHourlyForecastedConditions:]
  -[WFAggregateCommonForecast setDailyForecastedConditions:]
  -[WFAggregateCommonForecast setDailyPollenForecastedConditions:]
  -[WFAggregateCommonForecast currentObservations]
  -[WFAggregateCommonForecast hourlyForecastedConditions]
  -[WFAggregateCommonForecast dailyForecastedConditions]
  -[WFAggregateCommonForecast dailyPollenForecastedConditions]


WFAggregateCommonRequest : WFTask
 @property  NSLocale *locale
 @property  WFLocation *location
 @property  unsigned long types
 @property  @? completionHandler

  // instance methods
  -[WFAggregateCommonRequest setLocale:]
  -[WFAggregateCommonRequest .cxx_destruct]
  -[WFAggregateCommonRequest locale]
  -[WFAggregateCommonRequest location]
  -[WFAggregateCommonRequest cleanup]
  -[WFAggregateCommonRequest completionHandler]
  -[WFAggregateCommonRequest types]
  -[WFAggregateCommonRequest handleResponse:]
  -[WFAggregateCommonRequest startWithService:]
  -[WFAggregateCommonRequest handleCancellation]
  -[WFAggregateCommonRequest _supportedForecastTypes:]
  -[WFAggregateCommonRequest initWithLocation:types:completionHandler:]


WFSettingsManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *requestSerialQueue
 @property  {os_unfair_lock_s=I} useFallbackLock
 @property  {os_unfair_lock_s=I} settingsLock
 @property  <WFSettings> *settings
 @property  NSString *APIVersion
 @property  BOOL useFallback

  // class methods
  +[WFSettingsManager userId]

  // instance methods
  -[WFSettingsManager init]
  -[WFSettingsManager .cxx_destruct]
  -[WFSettingsManager containerIdentifier]
  -[WFSettingsManager settings]
  -[WFSettingsManager setSettings:]
  -[WFSettingsManager APIVersion]
  -[WFSettingsManager fetchAppConfigurationIfExpired]
  -[WFSettingsManager clearConfigCache]
  -[WFSettingsManager fetchAppConfigurationIfNeeded]
  -[WFSettingsManager _fetchAppConfigurationIfNeededWithCompletionQueue:completion:]
  -[WFSettingsManager requestSerialQueue]
  -[WFSettingsManager _permanentURLForRecordID:containerIdentifier:]
  -[WFSettingsManager completeOnQueue:error:completion:]
  -[WFSettingsManager useFallback]
  -[WFSettingsManager _containerIDForContainerIdentifier:]
  -[WFSettingsManager _URLSafeBase64EncodedStringWithData:options:]
  -[WFSettingsManager setUseFallback:]
  -[WFSettingsManager fetchAppConfigurationIfNeededWithCompletionQueue:completion:]
  -[WFSettingsManager setRequestSerialQueue:]
  -[WFSettingsManager useFallbackLock]
  -[WFSettingsManager setUseFallbackLock:]
  -[WFSettingsManager settingsLock]
  -[WFSettingsManager setSettingsLock:]


WFAttribution : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *sourceName
 @property  NSString *localizedSourceAttribution
 @property  NSURL *sourceAttributionURL

  // class methods
  +[WFAttribution platformSpecializedWeatherSourceAttributionURLForTrafficParameter:]
  +[WFAttribution weatherSourceAttributionURLForTrafficParameter:]
  +[WFAttribution sharedAttribution]

  // instance methods
  -[WFAttribution sourceName]
  -[WFAttribution sourceAttributionURL]
  -[WFAttribution localizedSourceAttribution]
  -[WFAttribution sourceAttributionImageForStyle:]


WFResponseParsingRules : NSObject /usr/lib/libSystem.B.dylib
 @property  <WFSettings> *settings

  // class methods
  +[WFResponseParsingRules aqiEnabledByRules:forLocation:]

  // instance methods
  -[WFResponseParsingRules .cxx_destruct]
  -[WFResponseParsingRules initWithSettings:]
  -[WFResponseParsingRules settings]
  -[WFResponseParsingRules aqiEnabledForCountryCode:]


WFTemperatureUnitProvider : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_dispatch_queue> *providerQueue
 @property  int userTemperatureUnit

  // instance methods
  -[WFTemperatureUnitProvider init]
  -[WFTemperatureUnitProvider .cxx_destruct]
  -[WFTemperatureUnitProvider userTemperatureUnit]
  -[WFTemperatureUnitProvider fetchTemperatureUnitWithCompletionHandler:]
  -[WFTemperatureUnitProvider replaceUnit:completionHandler:]
  -[WFTemperatureUnitProvider setProviderQueue:]
  -[WFTemperatureUnitProvider providerQueue]
  -[WFTemperatureUnitProvider _providerQueue_readUnit]
  -[WFTemperatureUnitProvider _providerQueue_changeUnit:]
  -[WFTemperatureUnitProvider _postDidChangeUnitDefaultsPreference]
  -[WFTemperatureUnitProvider replaceUnit:]


WFTemperatureFormatter : NSFormatter /usr/lib/libobjc.A.dylib
 @property  ^{UAMeasureFormat=} measureFormatter
 @property  NSLocale *locale
 @property  NSString *fallbackTemperatureString
 @property  int inputUnit
 @property  int outputUnit
 @property  unsigned long roundingMode
 @property  unsigned long maximumFractionDigits
 @property  int symbolType
 @property  BOOL includeDegreeSymbol

  // class methods
  +[WFTemperatureFormatter temperatureFormatterWithInputUnit:outputUnit:]

  // instance methods
  -[WFTemperatureFormatter init]
  -[WFTemperatureFormatter dealloc]
  -[WFTemperatureFormatter copyWithZone:]
  -[WFTemperatureFormatter setLocale:]
  -[WFTemperatureFormatter .cxx_destruct]
  -[WFTemperatureFormatter locale]
  -[WFTemperatureFormatter stringForObjectValue:]
  -[WFTemperatureFormatter getObjectValue:forString:errorDescription:]
  -[WFTemperatureFormatter roundingMode]
  -[WFTemperatureFormatter setRoundingMode:]
  -[WFTemperatureFormatter maximumFractionDigits]
  -[WFTemperatureFormatter setMaximumFractionDigits:]
  -[WFTemperatureFormatter _localeDidChangeNotification:]
  -[WFTemperatureFormatter setOutputUnit:]
  -[WFTemperatureFormatter setIncludeDegreeSymbol:]
  -[WFTemperatureFormatter setSymbolType:]
  -[WFTemperatureFormatter setInputUnit:]
  -[WFTemperatureFormatter setFallbackTemperatureString:]
  -[WFTemperatureFormatter inputUnit]
  -[WFTemperatureFormatter outputUnit]
  -[WFTemperatureFormatter fallbackTemperatureString]
  -[WFTemperatureFormatter symbolType]
  -[WFTemperatureFormatter setMeasureFormatter:]
  -[WFTemperatureFormatter formattedTemperatureFromString:]
  -[WFTemperatureFormatter formattedStringFromTemperature:]
  -[WFTemperatureFormatter _formatTemperatureValue:toUnit:]
  -[WFTemperatureFormatter measureFormatter]
  -[WFTemperatureFormatter includeDegreeSymbol]


WFServiceConnection : NSObject /usr/lib/libSystem.B.dylib <WeatherServiceClientProtocol>
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSObject<OS_dispatch_queue> *internalStateQueue
 @property  NSXPCConnection *xpcConnection
 @property  <WeatherServiceProtocol> *serviceProxy
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *tasksPendingResponseForTaskIdentifier
 @property  NSMutableDictionary *dispatchGroupForTaskIdentifier
 @property  NSMutableDictionary *executionStartTimeForTaskIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[WFServiceConnection allAllowedClasses]
  +[WFServiceConnection weatherServiceInterface]
  +[WFServiceConnection weatherServiceClientInterface]

  // instance methods
  -[WFServiceConnection init]
  -[WFServiceConnection dealloc]
  -[WFServiceConnection setQueue:]
  -[WFServiceConnection invalidate]
  -[WFServiceConnection queue]
  -[WFServiceConnection .cxx_destruct]
  -[WFServiceConnection xpcConnection]
  -[WFServiceConnection callbackQueue]
  -[WFServiceConnection setXpcConnection:]
  -[WFServiceConnection setCallbackQueue:]
  -[WFServiceConnection invalidateCache]
  -[WFServiceConnection enqueueRequest:]
  -[WFServiceConnection serviceProxy]
  -[WFServiceConnection setServiceProxy:]
  -[WFServiceConnection cancelRequestWithIdentifier:]
  -[WFServiceConnection enqueueRequest:waitUntilDone:]
  -[WFServiceConnection taskIdentifier:]
  -[WFServiceConnection serviceDidReceiveResponse:]
  -[WFServiceConnection _onQueueInvalidateConnection:]
  -[WFServiceConnection _onQueueOpenConnection]
  -[WFServiceConnection accessServiceWithBlock:]
  -[WFServiceConnection internalStateQueue]
  -[WFServiceConnection tasksPendingResponseForTaskIdentifier]
  -[WFServiceConnection executionStartTimeForTaskIdentifier]
  -[WFServiceConnection dispatchGroupForTaskIdentifier]
  -[WFServiceConnection _handleRemoteObjectProxyError:]
  -[WFServiceConnection setInternalStateQueue:]


WFReachabilityConfigurationResponse : WFResponse <NSSecureCoding>
 @property  NSURL *reachabilityHostURL
 @property  NWPathEvaluator *pathEvaluator

  // class methods
  +[WFReachabilityConfigurationResponse supportsSecureCoding]

  // instance methods
  -[WFReachabilityConfigurationResponse encodeWithCoder:]
  -[WFReachabilityConfigurationResponse initWithCoder:]
  -[WFReachabilityConfigurationResponse .cxx_destruct]
  -[WFReachabilityConfigurationResponse pathEvaluator]
  -[WFReachabilityConfigurationResponse setReachabilityHostURL:]
  -[WFReachabilityConfigurationResponse reachabilityHostURL]


NWPathEvaluator(WFAdditions)
	// class methods
	+[NWPathEvaluator(WFAdditions) wf_pathEvaluatorForURL:]

	// instance methods
	-[NWPathEvaluator(WFAdditions) wf_isReachable]

NSCalendar(WFWeatherChannelParser)
	// instance methods
	-[NSCalendar(WFWeatherChannelParser) wf_dateComponentsForEpochDateNumber:toUnitGranularity:]

NSURL(StoreCacheAdditions)
	// class methods
	+[NSURL(StoreCacheAdditions) wf_inMemoryAddress]
	+[NSURL(StoreCacheAdditions) wf_cacheDirectory:]

	// instance methods
	-[NSURL(StoreCacheAdditions) wf_isInMemoryAddress]
	-[NSURL(StoreCacheAdditions) wf_URLWithTracking:]
	-[NSURL(StoreCacheAdditions) wf_URLHasParameter:]

NSError(WFAdditions)
	// class methods
	+[NSError(WFAdditions) wf_errorWithCode:]
	+[NSError(WFAdditions) wf_errorWithCode:encapsulatedError:userInfo:]
	+[NSError(WFAdditions) wf_errorWithCode:userInfo:]

NSDictionary(WFAdditions)
	// class methods
	+[NSDictionary(WFAdditions) integerValueFromDictionary:forKey:defaultValue:]
	+[NSDictionary(WFAdditions) stringValueFromDictionary:forKey:defaultValue:]

	// instance methods
	-[NSDictionary(WFAdditions) stringForKey:]
	-[NSDictionary(WFAdditions) arrayForKey:]
	-[NSDictionary(WFAdditions) dictionaryForKey:]
	-[NSDictionary(WFAdditions) numberForKey:]
	-[NSDictionary(WFAdditions) wf_arrayForKeyPath:]
	-[NSDictionary(WFAdditions) wf_numberForKeyPath:]
	-[NSDictionary(WFAdditions) wf_temperatureWithCelsiusKeyPath:fahrenheitKeyPath:]
	-[NSDictionary(WFAdditions) wf_dictionaryForKeyPath:]
	-[NSDictionary(WFAdditions) wf_stringForKeyPath:]
	-[NSDictionary(WFAdditions) wf_objectOfKind:forKeyPath:]
	-[NSDictionary(WFAdditions) wf_objectForKeyPath:]
	-[NSDictionary(WFAdditions) wf_URLForKeyPath:]
	-[NSDictionary(WFAdditions) wf_integerForKeyPath:]
	-[NSDictionary(WFAdditions) wf_floatForKeyPath:]
	-[NSDictionary(WFAdditions) wf_doubleForKeyPath:]

NSDateComponents(WFAdditions)
	// class methods
	+[NSDateComponents(WFAdditions) wf_nowDateComponents]
	+[NSDateComponents(WFAdditions) wf_weatherDataClosestToDate:inArray:]
	+[NSDateComponents(WFAdditions) wf_minutesBetweenDateComponents:andComponents:]
	+[NSDateComponents(WFAdditions) wf_isSameDayWithComponents:andComponents:]
	+[NSDateComponents(WFAdditions) wf_weatherDatasOnDate:inArray:]
	+[NSDateComponents(WFAdditions) wf_weatherDataOnDate:inArray:]

	// instance methods
	-[NSDateComponents(WFAdditions) wf_componentsWithoutTimeZone]
	-[NSDateComponents(WFAdditions) wf_minutesFromNow]
	-[NSDateComponents(WFAdditions) wf_minutesDifferenceFromDate:]
	-[NSDateComponents(WFAdditions) wf_componentsAreTimeless]
	-[NSDateComponents(WFAdditions) wf_dateComponentsCompare:]

NSMutableArray(SafeAddObject)
	// instance methods
	-[NSMutableArray(SafeAddObject) wf_safelyAddObject:]

NSDate(WFPrivateAdditions)
	// instance methods
	-[NSDate(WFPrivateAdditions) wf_dateOnlyComponentsInCalendar:]

CLLocation(WFAdditions)
	// instance methods
	-[CLLocation(WFAdditions) wf_isEquivalentToLocation:tolerance:]

NSLocale(WFAdditions)
	// instance methods
	-[NSLocale(WFAdditions) wf_temperatureUnit]
	-[NSLocale(WFAdditions) setWf_temperatureUnit:]

NSString(stringWithTemperatureUnit)
	// instance methods
	-[NSString(stringWithTemperatureUnit) stringWithTemperatureUnit:]

01 00 0700 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: ALCityManager 
01 00 0300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLGeocoder 
01 00 0300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0500 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOAlmanac 
01 00 0100 /System/Library/Frameworks/MapKit.framework/MapKit: MKLocalSearch 
01 00 0100 /System/Library/Frameworks/MapKit.framework/MapKit: MKLocalSearchRequest 
01 00 0100 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapItem 
01 00 0100 /System/Library/Frameworks/MapKit.framework/MapKit: MKPlacemark 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMeasurement 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProgress 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitLength 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitPressure 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUnitSpeed 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0b00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0600 /System/Library/Frameworks/Network.framework/Network: NWHostEndpoint 
01 00 0600 /System/Library/Frameworks/Network.framework/Network: NWPathEvaluator 
01 00 0a00 /System/Library/PrivateFrameworks/RemoteConfiguration.framework/RemoteConfiguration: RCConfigurationManager 
01 00 0a00 /System/Library/PrivateFrameworks/RemoteConfiguration.framework/RemoteConfiguration: RCConfigurationSettings 
01 00 0a00 /System/Library/PrivateFrameworks/RemoteConfiguration.framework/RemoteConfiguration: RCDeviceInfo 
