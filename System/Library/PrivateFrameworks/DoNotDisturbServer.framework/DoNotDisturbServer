|| __DATA.__common _DNDSLogAssertionStore
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSAnyModeAssertionInvalidationPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSBehaviorSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSBypassSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSIDSSyncService
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSLegacyAssertionSyncManager
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSLegacyBehaviorOverride
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSLegacyBehaviorOverrideEffectiveInterval
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSLegacySettingsSyncManager
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionClientIdentifierInvalidationPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionDateInvalidationPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionDetailsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationDetailsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationPredicateRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationRequestRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionLifetimeRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionSourceRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionUUIDInvalidationPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModernAssertionSyncManager
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableBehaviorSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableBypassSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableScheduleSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSPairedDevice
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSScheduleSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSStateProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSAnyModeAssertionInvalidationPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSBehaviorSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSBypassSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSIDSSyncService
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSLegacyAssertionSyncManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSLegacyBehaviorOverride
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSLegacyBehaviorOverrideEffectiveInterval
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSLegacySettingsSyncManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionClientIdentifierInvalidationPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionDateInvalidationPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionDetailsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationDetailsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationPredicateRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationRequestRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionLifetimeRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionSourceRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionUUIDInvalidationPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModernAssertionSyncManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableBehaviorSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableBypassSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableScheduleSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSPairedDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSScheduleSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSStateProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBehaviorSettingsRecord._interruptionBehaviorSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBypassSettingsRecord._immediateBypassCNGroupIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBypassSettingsRecord._immediateBypassEventSourceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBypassSettingsRecord._repeatEventSourceBehaviorEnabledSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._assertionUpdateClientIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._interruptionInvalidationAssertionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._wantsSettingsUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._wantsStateUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeAssertionStore._assertions
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeAssertionStore._invalidationRequests
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeAssertionStore._invalidations
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._bedtimeBehaviorEnabledSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._lastUpdatedTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._scheduleEnabledSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._timePeriodEndTimeHour
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._timePeriodEndTimeMinute
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._timePeriodStartTimeHour
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._timePeriodStartTimeMinute
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSettingsRecord._behaviorSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSettingsRecord._phoneCallBypassSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSettingsRecord._scheduleSettings
|| __DATA_CONST.__const _DNDSScheduleManagerClientIdentifier
|| __DATA_CONST.__const _kDNDModeAssertionScheduleLifetimeBehaviorRecordExpireWhenNextScheduleEndsValue
|| __DATA_CONST.__const _kDNDModeAssertionScheduleLifetimeBehaviorRecordMatchScheduleValue
|| __DATA_CONST.__const _kLegacyOverrideLastCalculatedTimeKey
|| __DATA_CONST.__const _kLegacyOverrideStatusKey
|| __DATA_CONST.__const _kNanoPreferencesLegacySyncDomainKey
|| __DATA_DIRTY.__common _DNDSLogAssertionManager
|| __DATA_DIRTY.__common _DNDSLogCalendarEventLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogDataMigrator
|| __DATA_DIRTY.__common _DNDSLogDateIntervalLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogDefaultLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogGeneral
|| __DATA_DIRTY.__common _DNDSLogIDSTransport
|| __DATA_DIRTY.__common _DNDSLogLegacyAssertionSync
|| __DATA_DIRTY.__common _DNDSLogLegacySettingsSync
|| __DATA_DIRTY.__common _DNDSLogLocationLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogModernAssertionSync
|| __DATA_DIRTY.__common _DNDSLogPairedDeviceState
|| __DATA_DIRTY.__common _DNDSLogResolver
|| __DATA_DIRTY.__common _DNDSLogSchedule
|| __DATA_DIRTY.__common _DNDSLogScheduleLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogServiceProvider
|| __DATA_DIRTY.__common _DNDSLogSettings
|| __DATA_DIRTY.__common _DNDSLogStateProvider
|| __DATA_DIRTY.__common _DNDSLogSysdiagnose
|| __DATA_DIRTY.__common _DNDSLogSystemState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSBaseLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSCalendarEventLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSClientConnectionDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSClientDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSClientDetailsProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSDateIntervalLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSDefaultLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSEventBehaviorResolution
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSEventBehaviorResolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSJSONBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSLifetimeMonitorResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSLocationLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMemoryCachedBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionManagerUpdateContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionStoreRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionUpdateResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeRepository
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableClientConnectionDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableModeAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSPairedDeviceStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSRemoteServiceProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSScheduleLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSScheduleManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSScheduleSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSyncSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSyncSettingsProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSBaseLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSCalendarEventLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSClientConnectionDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSClientDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSClientDetailsProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSDateIntervalLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSDefaultLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSEventBehaviorResolution
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSEventBehaviorResolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSJSONBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSLifetimeMonitorResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSLocationLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMemoryCachedBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionManagerUpdateContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionStoreRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionUpdateResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeRepository
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableClientConnectionDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableModeAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSPairedDeviceStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSRemoteServiceProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSScheduleLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSScheduleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSScheduleSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSyncSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSyncSettingsProvider
|| __TEXT.__const _DoNotDisturbServerVersionNumber
|| __TEXT.__const _DoNotDisturbServerVersionString
|| __TEXT.__const _kIDSMaxMessageTimeout
|| __TEXT.__const _kIDSMessageVersion
|| __TEXT.__const _kLeaveLocationRadius
|| __TEXT.__const _kRepeatEventThreshold
|| __TEXT.__const _kResolutionRecordDesiredCount
|| __TEXT.__const _kScheduleEnabledModes
|| __TEXT.__text _DNDSGetLifetimePhase
|| __TEXT.__text _DNDSIsSysdiagnoseBeingCaptured
|| __TEXT.__text _DNDSMigrateLegacySettings
|| __TEXT.__text _DNDSRegisterLogging
|| __TEXT.__text _DNDSRegisterSysdiagnose
|| __TEXT.__text _DNDSRegisterSysdiagnoseDataProvider
|| __TEXT.__text _DNDSResolutionOutcomeToString
|| __TEXT.__text _DNDSResolutionReasonToString
|| __TEXT.__text _DNDSRunServer
|| __TEXT.__text _DNDSSetUILockState
|| __TEXT.__text _DNDSStringFromLostModeState
|| __TEXT.__text _DNDSStringFromPairedDeviceClass
|| __TEXT.__text _DNDSStringFromUILockState
|| __TEXT.__text _DNDSUnregisterSysdiagnoseDataProvider
|| __TEXT.__text __DNDSRequestRadar
__ BaseBoard: _BSCurrentUserDirectory
__ BaseBoard: _BSExecutablePathForPID
__ BaseBoard: _BSSystemRootDirectory
__ BaseBoard: _OBJC_CLASS_$_BSPlatform
__ Contacts: _CNContactCallAlertKey
__ Contacts: _CNContactIdentifierKey
__ Contacts: _CNContactLinkIdentifierKey
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNFavorites
__ Contacts: _OBJC_CLASS_$_CNGroup
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ CoreFoundation: _CFBundleCopyInfoDictionaryInDirectory
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreLocation: _OBJC_CLASS_$_CLCircularRegion
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ DoNotDisturb: _DNDDefaultModeIdentifier
__ DoNotDisturb: _DNDDefaultScheduleIdentifier
__ DoNotDisturb: _DNDEnabledSettingToString
__ DoNotDisturb: _DNDEventSourceTypeToString
__ DoNotDisturb: _DNDInterruptionSuppressionToString
__ DoNotDisturb: _DNDModeAssertionInvalidationReasonOverrideToString
__ DoNotDisturb: _DNDModeAssertionInvalidationReasonToString
__ DoNotDisturb: _DNDMostRestrictiveInterruptionSuppression
__ DoNotDisturb: _DNDResolvedBedtimeBehaviorEnabledSetting
__ DoNotDisturb: _DNDResolvedImmediateBypassEventSourceType
__ DoNotDisturb: _DNDResolvedInterruptionBehaviorSetting
__ DoNotDisturb: _DNDResolvedModeAssertionInvalidationReason
__ DoNotDisturb: _DNDResolvedRepeatEventSourceBehaviorEnabledSetting
__ DoNotDisturb: _DNDResolvedScheduleEnabledSetting
__ DoNotDisturb: _DNDStateUpdateReasonToString
__ DoNotDisturb: _DNDStringFromInterruptionBehaviorSetting
__ DoNotDisturb: _DNDSystemClientIdentifier
__ DoNotDisturb: _OBJC_CLASS_$_DNDBehaviorSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDBypassSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDClientEventBehavior
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertion
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionCalendarEventLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionDateIntervalLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionDetails
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionInvalidation
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionLocationLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionScheduleLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionSource
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableBehaviorSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableBypassSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableModeAssertionDetails
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableModeAssertionInvalidationDetails
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableScheduleTime
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableScheduleTimePeriod
__ DoNotDisturb: _OBJC_CLASS_$_DNDScheduleSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDState
__ DoNotDisturb: _OBJC_CLASS_$_DNDStateModeAssertionMetadata
__ DoNotDisturb: _OBJC_CLASS_$_DNDStateUpdate
__ DoNotDisturb: _OBJC_METACLASS_$_DNDScheduleSettings
__ EventKit: _EKEventStoreChangedNotification
__ EventKit: _OBJC_CLASS_$_EKEventStore
__ FindMyDevice: _OBJC_CLASS_$_FMDFMIPManager
__ FindMyDevice: _kLostModeChangedNotification
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSPredicate
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSDefaultPairedDevice
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _OBJC_CLASS_$_IDSService
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRDevicePropertyLocalPairingDataStorePath
__ NanoRegistry: _NRDevicePropertyPairingID
__ NanoRegistry: _NRPairedDeviceRegistryPairedDeviceDidChangeVersionDarwinNotification
__ NanoRegistry: _NRVersionIsGreaterThanOrEqual
__ NanoRegistry: _NRWatchOSVersionForRemoteDevice
__ NanoRegistry: _OBJC_CLASS_$_NRDevice
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ PersistentConnection: _OBJC_CLASS_$_PCPersistentTimer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_trylock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
DNDSBehaviorSettingsRecord : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSNumber *interruptionBehaviorSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSBehaviorSettingsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSBehaviorSettingsRecord newWithDictionaryRepresentation:]
  +[DNDSBehaviorSettingsRecord _recordWithEncodedInfo:error:]

  // instance methods
  -[DNDSBehaviorSettingsRecord init]
  -[DNDSBehaviorSettingsRecord isEqual:]
  -[DNDSBehaviorSettingsRecord copyWithZone:]
  -[DNDSBehaviorSettingsRecord mutableCopyWithZone:]
  -[DNDSBehaviorSettingsRecord .cxx_destruct]
  -[DNDSBehaviorSettingsRecord dictionaryRepresentation]
  -[DNDSBehaviorSettingsRecord interruptionBehaviorSetting]
  -[DNDSBehaviorSettingsRecord _initWithInterruptionBehaviorSetting:]
  -[DNDSBehaviorSettingsRecord _initWithRecord:]


DNDSMutableBehaviorSettingsRecord : DNDSBehaviorSettingsRecord
 @property  NSNumber *interruptionBehaviorSetting

  // instance methods
  -[DNDSMutableBehaviorSettingsRecord copyWithZone:]
  -[DNDSMutableBehaviorSettingsRecord setInterruptionBehaviorSetting:]


DNDSJSONBackingStore : NSObject /usr/lib/libSystem.B.dylib <DNDSSysdiagnoseDataProvider, DNDSBackingStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier
 @property  <DNDSBackingStoreDelegate> *delegate

  // instance methods
  -[DNDSJSONBackingStore dealloc]
  -[DNDSJSONBackingStore delegate]
  -[DNDSJSONBackingStore setDelegate:]
  -[DNDSJSONBackingStore .cxx_destruct]
  -[DNDSJSONBackingStore sysdiagnoseDataForDate:]
  -[DNDSJSONBackingStore sysdiagnoseDataIdentifier]
  -[DNDSJSONBackingStore readRecordWithError:]
  -[DNDSJSONBackingStore writeRecord:error:]
  -[DNDSJSONBackingStore initWithRecordClass:fileURL:versionNumber:]


DNDSModeAssertionInvalidationRequest : NSObject /usr/lib/libSystem.B.dylib <DNDSModernAssertionSourceResolution, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  DNDSModeAssertionInvalidationPredicate *predicate
 @property  NSDate *requestDate
 @property  DNDModeAssertionInvalidationDetails *details
 @property  DNDModeAssertionSource *source
 @property  unsigned long reason
 @property  unsigned long reasonOverride

  // class methods
  +[DNDSModeAssertionInvalidationRequest requestWithPredicate:requestDate:source:reason:]
  +[DNDSModeAssertionInvalidationRequest requestWithPredicate:requestDate:details:source:reason:reasonOverride:]

  // instance methods
  -[DNDSModeAssertionInvalidationRequest isEqual:]
  -[DNDSModeAssertionInvalidationRequest copyWithZone:]
  -[DNDSModeAssertionInvalidationRequest reason]
  -[DNDSModeAssertionInvalidationRequest .cxx_destruct]
  -[DNDSModeAssertionInvalidationRequest source]
  -[DNDSModeAssertionInvalidationRequest predicate]
  -[DNDSModeAssertionInvalidationRequest UUID]
  -[DNDSModeAssertionInvalidationRequest details]
  -[DNDSModeAssertionInvalidationRequest reasonOverride]
  -[DNDSModeAssertionInvalidationRequest requestDate]
  -[DNDSModeAssertionInvalidationRequest resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:]
  -[DNDSModeAssertionInvalidationRequest initWithUUID:predicate:requestDate:details:source:reason:reasonOverride:]


DNDSLifetimeMonitorResult : NSObject /usr/lib/libSystem.B.dylib
 @property  NSArray *activeUUIDs
 @property  NSArray *expiredUUIDs

  // instance methods
  -[DNDSLifetimeMonitorResult .cxx_destruct]
  -[DNDSLifetimeMonitorResult initWithActiveUUIDs:expiredUUIDs:]
  -[DNDSLifetimeMonitorResult activeUUIDs]
  -[DNDSLifetimeMonitorResult expiredUUIDs]


DNDSBaseLifetimeMonitor : NSObject /usr/lib/libSystem.B.dylib <DNDSSysdiagnoseDataProvider, DNDSLifetimeMonitor>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier
 @property  NSArray *activeLifetimeAssertionUUIDs
 @property  <DNDSLifetimeMonitorDataSource> *dataSource
 @property  <DNDSLifetimeMonitorDelegate> *delegate

  // class methods
  +[DNDSBaseLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSBaseLifetimeMonitor init]
  -[DNDSBaseLifetimeMonitor dealloc]
  -[DNDSBaseLifetimeMonitor queue]
  -[DNDSBaseLifetimeMonitor delegate]
  -[DNDSBaseLifetimeMonitor setDelegate:]
  -[DNDSBaseLifetimeMonitor .cxx_destruct]
  -[DNDSBaseLifetimeMonitor dataSource]
  -[DNDSBaseLifetimeMonitor setDataSource:]
  -[DNDSBaseLifetimeMonitor sysdiagnoseDataForDate:]
  -[DNDSBaseLifetimeMonitor sysdiagnoseDataIdentifier]
  -[DNDSBaseLifetimeMonitor refreshMonitorFromQueueForDate:]
  -[DNDSBaseLifetimeMonitor updateForModeAssertions:date:]
  -[DNDSBaseLifetimeMonitor activeLifetimeAssertionUUIDs]
  -[DNDSBaseLifetimeMonitor refreshMonitorForDate:]


DNDSEventBehaviorResolver : NSObject /usr/lib/libSystem.B.dylib <DNDSSysdiagnoseDataProvider>
 @property  <DNDSEventBehaviorResolverDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // instance methods
  -[DNDSEventBehaviorResolver dealloc]
  -[DNDSEventBehaviorResolver .cxx_destruct]
  -[DNDSEventBehaviorResolver dataSource]
  -[DNDSEventBehaviorResolver setDataSource:]
  -[DNDSEventBehaviorResolver sysdiagnoseDataForDate:]
  -[DNDSEventBehaviorResolver sysdiagnoseDataIdentifier]
  -[DNDSEventBehaviorResolver _queue_resolveBehaviorForEventDetails:clientDetails:date:error:]
  -[DNDSEventBehaviorResolver _queue_resolveOutcomeForEventSource:clientDetails:date:reason:]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsFavorite:]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsContact:]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsContact:inGroupWithIdentifier:]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsRepeat:clientDetails:date:]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsEmergencyContact:]
  -[DNDSEventBehaviorResolver initWithModeRepository:contactStore:]
  -[DNDSEventBehaviorResolver resolveBehaviorForEventDetails:clientDetails:date:error:]


DNDSMemoryCachedBackingStore : NSObject /usr/lib/libSystem.B.dylib <DNDSBackingStoreDelegate, DNDSBackingStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DNDSBackingStoreDelegate> *delegate

  // instance methods
  -[DNDSMemoryCachedBackingStore delegate]
  -[DNDSMemoryCachedBackingStore setDelegate:]
  -[DNDSMemoryCachedBackingStore .cxx_destruct]
  -[DNDSMemoryCachedBackingStore backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSMemoryCachedBackingStore readRecordWithError:]
  -[DNDSMemoryCachedBackingStore writeRecord:error:]
  -[DNDSMemoryCachedBackingStore initWithUnderlyingBackingStore:]


DNDSBypassSettingsRecord : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSNumber *immediateBypassEventSourceType
 @property  NSString *immediateBypassCNGroupIdentifier
 @property  NSNumber *repeatEventSourceBehaviorEnabledSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSBypassSettingsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSBypassSettingsRecord newWithDictionaryRepresentation:]
  +[DNDSBypassSettingsRecord recordForLegacyPrivilegedSenderType:legacyAddressBookID:]
  +[DNDSBypassSettingsRecord _recordWithEncodedInfo:error:]

  // instance methods
  -[DNDSBypassSettingsRecord init]
  -[DNDSBypassSettingsRecord isEqual:]
  -[DNDSBypassSettingsRecord copyWithZone:]
  -[DNDSBypassSettingsRecord mutableCopyWithZone:]
  -[DNDSBypassSettingsRecord .cxx_destruct]
  -[DNDSBypassSettingsRecord dictionaryRepresentation]
  -[DNDSBypassSettingsRecord immediateBypassEventSourceType]
  -[DNDSBypassSettingsRecord immediateBypassCNGroupIdentifier]
  -[DNDSBypassSettingsRecord repeatEventSourceBehaviorEnabledSetting]
  -[DNDSBypassSettingsRecord _initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:]
  -[DNDSBypassSettingsRecord _initWithRecord:]
  -[DNDSBypassSettingsRecord legacyPrivilegedSenderType]


DNDSMutableBypassSettingsRecord : DNDSBypassSettingsRecord
 @property  NSNumber *immediateBypassEventSourceType
 @property  NSString *immediateBypassCNGroupIdentifier
 @property  NSNumber *repeatEventSourceBehaviorEnabledSetting

  // instance methods
  -[DNDSMutableBypassSettingsRecord copyWithZone:]
  -[DNDSMutableBypassSettingsRecord setImmediateBypassEventSourceType:]
  -[DNDSMutableBypassSettingsRecord setImmediateBypassCNGroupIdentifier:]
  -[DNDSMutableBypassSettingsRecord setRepeatEventSourceBehaviorEnabledSetting:]


DNDSCalendarEventLifetimeMonitor : DNDSBaseLifetimeMonitor
  // class methods
  +[DNDSCalendarEventLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSCalendarEventLifetimeMonitor init]
  -[DNDSCalendarEventLifetimeMonitor .cxx_destruct]
  -[DNDSCalendarEventLifetimeMonitor _timerFired:]
  -[DNDSCalendarEventLifetimeMonitor updateForModeAssertions:date:]
  -[DNDSCalendarEventLifetimeMonitor _calendarEventStoreChangedWithNotification:]
  -[DNDSCalendarEventLifetimeMonitor activeDateIntervalForCalendarEventLifetime:assertionStartDate:]


DNDSDateIntervalLifetimeMonitor : DNDSBaseLifetimeMonitor
  // class methods
  +[DNDSDateIntervalLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSDateIntervalLifetimeMonitor .cxx_destruct]
  -[DNDSDateIntervalLifetimeMonitor _timerFired:]
  -[DNDSDateIntervalLifetimeMonitor updateForModeAssertions:date:]


DNDSDefaultLifetimeMonitor : DNDSBaseLifetimeMonitor
  // class methods
  +[DNDSDefaultLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSDefaultLifetimeMonitor updateForModeAssertions:date:]


DNDSLocationLifetimeMonitor : NSObject /usr/lib/libSystem.B.dylib <CLLocationManagerDelegate, DNDSLifetimeMonitor>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *activeLifetimeAssertionUUIDs
 @property  <DNDSLifetimeMonitorDataSource> *dataSource
 @property  <DNDSLifetimeMonitorDelegate> *delegate

  // instance methods
  -[DNDSLocationLifetimeMonitor init]
  -[DNDSLocationLifetimeMonitor delegate]
  -[DNDSLocationLifetimeMonitor setDelegate:]
  -[DNDSLocationLifetimeMonitor .cxx_destruct]
  -[DNDSLocationLifetimeMonitor dataSource]
  -[DNDSLocationLifetimeMonitor setDataSource:]
  -[DNDSLocationLifetimeMonitor locationManager:didUpdateLocations:]
  -[DNDSLocationLifetimeMonitor locationManager:didFailWithError:]
  -[DNDSLocationLifetimeMonitor locationManager:monitoringDidFailForRegion:withError:]
  -[DNDSLocationLifetimeMonitor locationManager:didDetermineState:forRegion:]
  -[DNDSLocationLifetimeMonitor activeLifetimeAssertionUUIDs]
  -[DNDSLocationLifetimeMonitor refreshMonitorForDate:]
  -[DNDSLocationLifetimeMonitor _queue_refreshMonitor]
  -[DNDSLocationLifetimeMonitor _queue_stopMonitoringCurrentLocation]
  -[DNDSLocationLifetimeMonitor _queue_sendExpiryEventForAllLocationAssertions]
  -[DNDSLocationLifetimeMonitor _queue_beginMonitoringCurrentLocation]
  -[DNDSLocationLifetimeMonitor _queue_geofenceLocation:]


DNDSScheduleSettingsRecord : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSNumber *lastUpdatedTimestamp
 @property  NSNumber *scheduleEnabledSetting
 @property  NSNumber *timePeriodStartTimeHour
 @property  NSNumber *timePeriodStartTimeMinute
 @property  NSNumber *timePeriodEndTimeHour
 @property  NSNumber *timePeriodEndTimeMinute
 @property  NSNumber *bedtimeBehaviorEnabledSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSScheduleSettingsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSScheduleSettingsRecord newWithDictionaryRepresentation:]
  +[DNDSScheduleSettingsRecord recordForLegacyBehaviorOverride:lastUpdated:]
  +[DNDSScheduleSettingsRecord _recordWithEncodedInfo:error:]

  // instance methods
  -[DNDSScheduleSettingsRecord init]
  -[DNDSScheduleSettingsRecord isEqual:]
  -[DNDSScheduleSettingsRecord copyWithZone:]
  -[DNDSScheduleSettingsRecord mutableCopyWithZone:]
  -[DNDSScheduleSettingsRecord .cxx_destruct]
  -[DNDSScheduleSettingsRecord dictionaryRepresentation]
  -[DNDSScheduleSettingsRecord scheduleEnabledSetting]
  -[DNDSScheduleSettingsRecord bedtimeBehaviorEnabledSetting]
  -[DNDSScheduleSettingsRecord _initWithRecord:]
  -[DNDSScheduleSettingsRecord lastUpdatedTimestamp]
  -[DNDSScheduleSettingsRecord timePeriodStartTimeHour]
  -[DNDSScheduleSettingsRecord timePeriodStartTimeMinute]
  -[DNDSScheduleSettingsRecord timePeriodEndTimeHour]
  -[DNDSScheduleSettingsRecord timePeriodEndTimeMinute]
  -[DNDSScheduleSettingsRecord _initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:bedtimeBehaviorEnabledSetting:]
  -[DNDSScheduleSettingsRecord legacyBehaviorOverride]


DNDSMutableScheduleSettingsRecord : DNDSScheduleSettingsRecord
 @property  NSNumber *lastUpdatedTimestamp
 @property  NSNumber *scheduleEnabledSetting
 @property  NSNumber *timePeriodStartTimeHour
 @property  NSNumber *timePeriodStartTimeMinute
 @property  NSNumber *timePeriodEndTimeHour
 @property  NSNumber *timePeriodEndTimeMinute
 @property  NSNumber *bedtimeBehaviorEnabledSetting

  // instance methods
  -[DNDSMutableScheduleSettingsRecord copyWithZone:]
  -[DNDSMutableScheduleSettingsRecord setScheduleEnabledSetting:]
  -[DNDSMutableScheduleSettingsRecord setBedtimeBehaviorEnabledSetting:]
  -[DNDSMutableScheduleSettingsRecord setLastUpdatedTimestamp:]
  -[DNDSMutableScheduleSettingsRecord setTimePeriodStartTimeHour:]
  -[DNDSMutableScheduleSettingsRecord setTimePeriodStartTimeMinute:]
  -[DNDSMutableScheduleSettingsRecord setTimePeriodEndTimeHour:]
  -[DNDSMutableScheduleSettingsRecord setTimePeriodEndTimeMinute:]


DNDSModeAssertionManagerUpdateContext : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionUpdateContext>
 @property  DNDSModeAssertionStore *store
 @property  DNDSModeAssertionUpdateResult *updateResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSModeAssertionManagerUpdateContext .cxx_destruct]
  -[DNDSModeAssertionManagerUpdateContext store]
  -[DNDSModeAssertionManagerUpdateContext _resolveStore:]
  -[DNDSModeAssertionManagerUpdateContext _cleanupStore:]
  -[DNDSModeAssertionManagerUpdateContext _calculateUpdateResultForStore:previousStore:]
  -[DNDSModeAssertionManagerUpdateContext takeAssertionWithUUID:details:source:startDate:]
  -[DNDSModeAssertionManagerUpdateContext modeAssertionsMatchingPredicate:]
  -[DNDSModeAssertionManagerUpdateContext modeAssertionInvalidationsMatchingPredicate:]
  -[DNDSModeAssertionManagerUpdateContext takeAssertionWithDetails:source:startDate:]
  -[DNDSModeAssertionManagerUpdateContext invalidateAssertionsForRequest:]
  -[DNDSModeAssertionManagerUpdateContext initWithStore:clientDetailsProvider:]
  -[DNDSModeAssertionManagerUpdateContext updateResult]


DNDSModeDetails : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  unsigned long interruptionSuppression

  // class methods
  +[DNDSModeDetails detailsForInactiveDoNotDisturb]

  // instance methods
  -[DNDSModeDetails isEqual:]
  -[DNDSModeDetails copyWithZone:]
  -[DNDSModeDetails interruptionSuppression]
  -[DNDSModeDetails restrictedDetailsWithDetails:]
  -[DNDSModeDetails initWithInterruptionSuppression:]


DNDSScheduleLifetimeMonitor : DNDSBaseLifetimeMonitor
 @property  <DNDSScheduleLifetimeMonitorDataSource> *dataSource

  // class methods
  +[DNDSScheduleLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSScheduleLifetimeMonitor .cxx_destruct]
  -[DNDSScheduleLifetimeMonitor _timerFired:]
  -[DNDSScheduleLifetimeMonitor updateForModeAssertions:date:]
  -[DNDSScheduleLifetimeMonitor _activeDateIntervalForScheduleLifetime:assertionStartDate:date:scheduleSettings:calendar:ignoreMatchScheduleStartDate:]
  -[DNDSScheduleLifetimeMonitor activeDateIntervalForScheduleLifetime:assertionStartDate:date:]


DNDSModeRepository : NSObject /usr/lib/libSystem.B.dylib <DNDSModeRepository>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSModeRepository modeDetailsForIdentifiers:]


DNDSClientConnectionDetails : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying>
 @property  NSUUID *interruptionInvalidationAssertionUUID
 @property  NSSet *assertionUpdateClientIdentifiers
 @property  BOOL wantsStateUpdates
 @property  BOOL wantsSettingsUpdates

  // instance methods
  -[DNDSClientConnectionDetails init]
  -[DNDSClientConnectionDetails copyWithZone:]
  -[DNDSClientConnectionDetails mutableCopyWithZone:]
  -[DNDSClientConnectionDetails .cxx_destruct]
  -[DNDSClientConnectionDetails _initWithDetails:]
  -[DNDSClientConnectionDetails interruptionInvalidationAssertionUUID]
  -[DNDSClientConnectionDetails assertionUpdateClientIdentifiers]
  -[DNDSClientConnectionDetails wantsStateUpdates]
  -[DNDSClientConnectionDetails wantsSettingsUpdates]
  -[DNDSClientConnectionDetails _initWithInterruptionInvalidationAssertionUUID:assertionUpdateClientIdentifiers:wantsStateUpdates:wantsSettingsUpdates:]


DNDSMutableClientConnectionDetails : DNDSClientConnectionDetails
 @property  NSUUID *interruptionInvalidationAssertionUUID
 @property  NSSet *assertionUpdateClientIdentifiers
 @property  BOOL wantsStateUpdates
 @property  BOOL wantsSettingsUpdates

  // instance methods
  -[DNDSMutableClientConnectionDetails copyWithZone:]
  -[DNDSMutableClientConnectionDetails setInterruptionInvalidationAssertionUUID:]
  -[DNDSMutableClientConnectionDetails setAssertionUpdateClientIdentifiers:]
  -[DNDSMutableClientConnectionDetails setWantsStateUpdates:]
  -[DNDSMutableClientConnectionDetails setWantsSettingsUpdates:]


DNDSStateProvider : NSObject /usr/lib/libSystem.B.dylib
 @property  DNDState *lastCalculatedState
 @property  <DNDSStateProviderDataSource> *dataSource

  // instance methods
  -[DNDSStateProvider .cxx_destruct]
  -[DNDSStateProvider dataSource]
  -[DNDSStateProvider setDataSource:]
  -[DNDSStateProvider setLastCalculatedState:]
  -[DNDSStateProvider recalculateState]
  -[DNDSStateProvider lastCalculatedState]


DNDSScheduleSettings : DNDScheduleSettings /System/Library/Frameworks/EventKit.framework/EventKit
 @property  NSDate *creationDate

  // class methods
  +[DNDSScheduleSettings supportsSecureCoding]
  +[DNDSScheduleSettings settingsForRecord:]
  +[DNDSScheduleSettings defaultScheduleSettings]
  +[DNDSScheduleSettings settingsWithClientSettings:creationDate:]

  // instance methods
  -[DNDSScheduleSettings isEqual:]
  -[DNDSScheduleSettings .cxx_destruct]
  -[DNDSScheduleSettings replacementObjectForCoder:]
  -[DNDSScheduleSettings creationDate]
  -[DNDSScheduleSettings makeRecord]
  -[DNDSScheduleSettings initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:creationDate:]


DNDSSettingsManager : NSObject /usr/lib/libSystem.B.dylib <DNDSSyncSettingsProviderDelegate, DNDSSysdiagnoseDataProvider>
 @property  <DNDSSettingsManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // instance methods
  -[DNDSSettingsManager dealloc]
  -[DNDSSettingsManager delegate]
  -[DNDSSettingsManager setDelegate:]
  -[DNDSSettingsManager .cxx_destruct]
  -[DNDSSettingsManager sysdiagnoseDataForDate:]
  -[DNDSSettingsManager sysdiagnoseDataIdentifier]
  -[DNDSSettingsManager _readSettingsReturningError:]
  -[DNDSSettingsManager _saveBehaviorSettings:phoneCallBypassSettings:scheduleSettings:error:]
  -[DNDSSettingsManager behaviorSettingsWithError:]
  -[DNDSSettingsManager phoneCallBypassSettingsWithError:]
  -[DNDSSettingsManager scheduleSettingsWithError:]
  -[DNDSSettingsManager syncSettingsWithError:]
  -[DNDSSettingsManager syncSettingsProvider:didReceiveUpdatedSyncSettings:]
  -[DNDSSettingsManager initWithBackingStore:contactStore:]
  -[DNDSSettingsManager setBehaviorSettings:withError:]
  -[DNDSSettingsManager setPhoneCallBypassSettings:withError:]
  -[DNDSSettingsManager setScheduleSettings:withError:]


DNDSModeAssertionUpdateResult : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSArray *assertions
 @property  NSArray *invalidations

  // class methods
  +[DNDSModeAssertionUpdateResult emptyResult]

  // instance methods
  -[DNDSModeAssertionUpdateResult copyWithZone:]
  -[DNDSModeAssertionUpdateResult .cxx_destruct]
  -[DNDSModeAssertionUpdateResult assertions]
  -[DNDSModeAssertionUpdateResult invalidations]
  -[DNDSModeAssertionUpdateResult resultCombiningWithResult:]
  -[DNDSModeAssertionUpdateResult initWithAssertions:invalidations:]


DNDSModeAssertionInvalidationPredicate : NSPredicate /System/Library/PrivateFrameworks/IDS.framework/IDS
 @property  unsigned long predicateType

  // class methods
  +[DNDSModeAssertionInvalidationPredicate predicateForAnyAssertion]
  +[DNDSModeAssertionInvalidationPredicate predicateForAssertionClientIdentifiers:]
  +[DNDSModeAssertionInvalidationPredicate predicateForAssertionsTakenBeforeDate:]
  +[DNDSModeAssertionInvalidationPredicate predicateForAssertionUUIDs:]

  // instance methods
  -[DNDSModeAssertionInvalidationPredicate copyWithZone:]
  -[DNDSModeAssertionInvalidationPredicate _init]
  -[DNDSModeAssertionInvalidationPredicate evaluateWithObject:substitutionVariables:]
  -[DNDSModeAssertionInvalidationPredicate predicateType]


DNDSAnyModeAssertionInvalidationPredicate : DNDSModeAssertionInvalidationPredicate
  // class methods
  +[DNDSAnyModeAssertionInvalidationPredicate sharedInstance]
  +[DNDSAnyModeAssertionInvalidationPredicate supportsSecureCoding]

  // instance methods
  -[DNDSAnyModeAssertionInvalidationPredicate isEqual:]
  -[DNDSAnyModeAssertionInvalidationPredicate encodeWithCoder:]
  -[DNDSAnyModeAssertionInvalidationPredicate initWithCoder:]
  -[DNDSAnyModeAssertionInvalidationPredicate predicateType]


DNDSModeAssertionDateInvalidationPredicate : DNDSModeAssertionInvalidationPredicate
 @property  NSDate *date

  // class methods
  +[DNDSModeAssertionDateInvalidationPredicate supportsSecureCoding]

  // instance methods
  -[DNDSModeAssertionDateInvalidationPredicate isEqual:]
  -[DNDSModeAssertionDateInvalidationPredicate encodeWithCoder:]
  -[DNDSModeAssertionDateInvalidationPredicate initWithCoder:]
  -[DNDSModeAssertionDateInvalidationPredicate .cxx_destruct]
  -[DNDSModeAssertionDateInvalidationPredicate date]
  -[DNDSModeAssertionDateInvalidationPredicate initWithDate:]
  -[DNDSModeAssertionDateInvalidationPredicate evaluateWithObject:substitutionVariables:]
  -[DNDSModeAssertionDateInvalidationPredicate predicateType]


DNDSModeAssertionClientIdentifierInvalidationPredicate : DNDSModeAssertionInvalidationPredicate
 @property  NSArray *clientIdentifiers

  // class methods
  +[DNDSModeAssertionClientIdentifierInvalidationPredicate supportsSecureCoding]

  // instance methods
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate isEqual:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate copyWithZone:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate encodeWithCoder:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate initWithCoder:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate .cxx_destruct]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate evaluateWithObject:substitutionVariables:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate predicateType]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate clientIdentifiers]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate initWithClientIdentifiers:]


DNDSModeAssertionUUIDInvalidationPredicate : DNDSModeAssertionInvalidationPredicate
 @property  NSArray *UUIDs

  // class methods
  +[DNDSModeAssertionUUIDInvalidationPredicate supportsSecureCoding]

  // instance methods
  -[DNDSModeAssertionUUIDInvalidationPredicate isEqual:]
  -[DNDSModeAssertionUUIDInvalidationPredicate copyWithZone:]
  -[DNDSModeAssertionUUIDInvalidationPredicate encodeWithCoder:]
  -[DNDSModeAssertionUUIDInvalidationPredicate initWithCoder:]
  -[DNDSModeAssertionUUIDInvalidationPredicate .cxx_destruct]
  -[DNDSModeAssertionUUIDInvalidationPredicate evaluateWithObject:substitutionVariables:]
  -[DNDSModeAssertionUUIDInvalidationPredicate UUIDs]
  -[DNDSModeAssertionUUIDInvalidationPredicate predicateType]
  -[DNDSModeAssertionUUIDInvalidationPredicate initWithUUIDs:]


DNDSLegacyAssertionSyncManager : NSObject /usr/lib/libSystem.B.dylib <DNDSAssertionSyncManager>
 @property  <DNDSLegacyAssertionSyncManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DNDSAssertionSyncManagerDelegate> *delegate

  // class methods
  +[DNDSLegacyAssertionSyncManager cleanupState]

  // instance methods
  -[DNDSLegacyAssertionSyncManager dealloc]
  -[DNDSLegacyAssertionSyncManager delegate]
  -[DNDSLegacyAssertionSyncManager setDelegate:]
  -[DNDSLegacyAssertionSyncManager .cxx_destruct]
  -[DNDSLegacyAssertionSyncManager resume]
  -[DNDSLegacyAssertionSyncManager dataSource]
  -[DNDSLegacyAssertionSyncManager setDataSource:]
  -[DNDSLegacyAssertionSyncManager _endMonitoringForChanges]
  -[DNDSLegacyAssertionSyncManager _beginMonitoringForChanges]
  -[DNDSLegacyAssertionSyncManager _updateForReason:]
  -[DNDSLegacyAssertionSyncManager _queue_updateToggleSyncForReason:]
  -[DNDSLegacyAssertionSyncManager _queue_updateGizmoAssertionSyncWithModeAssertionUpdateContext:]
  -[DNDSLegacyAssertionSyncManager _queue_gizmoUpdateDate]
  -[DNDSLegacyAssertionSyncManager _queue_updateCompanionToggleSyncForGizmoUpdateDate:modeAssertionUpdateContext:]
  -[DNDSLegacyAssertionSyncManager _queue_updateGizmoToggleSyncForState:companionUpdateDate:reason:]
  -[DNDSLegacyAssertionSyncManager _queue_updateCompanionAssertionMirroringForState:]
  -[DNDSLegacyAssertionSyncManager updateForStateUpdate:]
  -[DNDSLegacyAssertionSyncManager initWithClientDetailsProvider:pairedDevice:]
  -[DNDSLegacyAssertionSyncManager _updateGizmoAssertionSync]


DNDSModeAssertionManager : NSObject /usr/lib/libSystem.B.dylib <DNDSBackingStoreDelegate, DNDSSysdiagnoseDataProvider, DNDSModeAssertionQuerying, DNDSModeAssertionUpdating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // instance methods
  -[DNDSModeAssertionManager dealloc]
  -[DNDSModeAssertionManager .cxx_destruct]
  -[DNDSModeAssertionManager backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSModeAssertionManager sysdiagnoseDataForDate:]
  -[DNDSModeAssertionManager sysdiagnoseDataIdentifier]
  -[DNDSModeAssertionManager modeAssertionsMatchingPredicate:]
  -[DNDSModeAssertionManager modeAssertionInvalidationsMatchingPredicate:]
  -[DNDSModeAssertionManager initWithBackingStore:clientDetailsProvider:]
  -[DNDSModeAssertionManager _loadDataFromBackingStore]
  -[DNDSModeAssertionManager updateModeAssertionsWithContextHandler:error:]
  -[DNDSModeAssertionManager _saveDataToBackingStoreWithError:]
  -[DNDSModeAssertionManager initWithBackingStoreURL:clientDetailsProvider:]
  -[DNDSModeAssertionManager clientDetailsForClientIdentifier:]


DNDSLegacySettingsSyncManager : NSObject /usr/lib/libSystem.B.dylib <DNDSSettingsSyncManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DNDSSettingsSyncManagerDataSource> *dataSource
 @property  <DNDSSettingsSyncManagerDelegate> *delegate

  // class methods
  +[DNDSLegacySettingsSyncManager cleanupState]
  +[DNDSLegacySettingsSyncManager sendManagerForPairedDevice:]
  +[DNDSLegacySettingsSyncManager receiveManagerForPairedDevice:]

  // instance methods
  -[DNDSLegacySettingsSyncManager dealloc]
  -[DNDSLegacySettingsSyncManager delegate]
  -[DNDSLegacySettingsSyncManager setDelegate:]
  -[DNDSLegacySettingsSyncManager .cxx_destruct]
  -[DNDSLegacySettingsSyncManager resume]
  -[DNDSLegacySettingsSyncManager update]
  -[DNDSLegacySettingsSyncManager dataSource]
  -[DNDSLegacySettingsSyncManager setDataSource:]
  -[DNDSLegacySettingsSyncManager _endMonitoringForChanges]
  -[DNDSLegacySettingsSyncManager _beginMonitoringForChanges]
  -[DNDSLegacySettingsSyncManager _initWithListen:send:pairedDevice:]
  -[DNDSLegacySettingsSyncManager _updateBypassSettings]
  -[DNDSLegacySettingsSyncManager _updateScheduleSettingsWithDate:]
  -[DNDSLegacySettingsSyncManager _propagateBypassSettings:]
  -[DNDSLegacySettingsSyncManager _propagateScheduleSettings:]


DNDSModeAssertionStore : NSObject /usr/lib/libSystem.B.dylib <DNDSBackingStoreRecord, NSCopying, NSMutableCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *assertions
 @property  NSArray *invalidations
 @property  NSArray *invalidationRequests

  // class methods
  +[DNDSModeAssertionStore newWithDictionaryRepresentation:]
  +[DNDSModeAssertionStore newWithSyncDictionaryRepresentation:]
  +[DNDSModeAssertionStore messageDateForSyncDictionaryRepresentation:]
  +[DNDSModeAssertionStore upgradeDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSModeAssertionStore newWithPeaceSyncDictionaryRepresentation:]
  +[DNDSModeAssertionStore messageDateForPeaceSyncDictionaryRepresentation:]

  // instance methods
  -[DNDSModeAssertionStore init]
  -[DNDSModeAssertionStore isEqual:]
  -[DNDSModeAssertionStore copyWithZone:]
  -[DNDSModeAssertionStore mutableCopyWithZone:]
  -[DNDSModeAssertionStore .cxx_destruct]
  -[DNDSModeAssertionStore dictionaryRepresentation]
  -[DNDSModeAssertionStore assertions]
  -[DNDSModeAssertionStore lastUpdateDate]
  -[DNDSModeAssertionStore invalidations]
  -[DNDSModeAssertionStore _initWithStore:]
  -[DNDSModeAssertionStore syncDictionaryRepresentationWithDate:messageUUID:]
  -[DNDSModeAssertionStore invalidationRequests]
  -[DNDSModeAssertionStore sysdiagnoseDictionaryRepresentation]
  -[DNDSModeAssertionStore peaceSyncDictionaryRepresentationWithDate:messageUUID:userRequestedClientIdentifierHandler:]


DNDSMutableModeAssertionStore : DNDSModeAssertionStore
 @property  NSArray *assertions
 @property  NSArray *invalidations
 @property  NSArray *invalidationRequests

  // instance methods
  -[DNDSMutableModeAssertionStore copyWithZone:]
  -[DNDSMutableModeAssertionStore setAssertions:]
  -[DNDSMutableModeAssertionStore setInvalidationRequests:]
  -[DNDSMutableModeAssertionStore sanitizeDatesForThreshold:]
  -[DNDSMutableModeAssertionStore setInvalidations:]
  -[DNDSMutableModeAssertionStore filterForSyncToPairedDevice:clientDetailsProvider:]
  -[DNDSMutableModeAssertionStore unresolveSourcesForSyncToPairedDevice:]
  -[DNDSMutableModeAssertionStore resolveSourcesForSyncFromPairedDevice:]


DNDSModernAssertionSyncManager : NSObject /usr/lib/libSystem.B.dylib <DNDSSyncServiceDelegate, DNDSAssertionSyncManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DNDSAssertionSyncManagerDataSource> *dataSource
 @property  <DNDSAssertionSyncManagerDelegate> *delegate

  // instance methods
  -[DNDSModernAssertionSyncManager delegate]
  -[DNDSModernAssertionSyncManager setDelegate:]
  -[DNDSModernAssertionSyncManager .cxx_destruct]
  -[DNDSModernAssertionSyncManager resume]
  -[DNDSModernAssertionSyncManager dataSource]
  -[DNDSModernAssertionSyncManager setDataSource:]
  -[DNDSModernAssertionSyncManager updateForModeAssertionUpdateResult:]
  -[DNDSModernAssertionSyncManager _queue_sendStateSnapshotToPairedDevice:force:]
  -[DNDSModernAssertionSyncManager _queue_handleMessage:withVersionNumber:]
  -[DNDSModernAssertionSyncManager syncService:didReceiveMessage:withVersionNumber:fromDeviceIdentifier:]
  -[DNDSModernAssertionSyncManager syncService:shouldAcceptIncomingMessage:withVersionNumber:fromDeviceIdentifier:]
  -[DNDSModernAssertionSyncManager initWithClientDetailsProvider:syncService:]


DNDSPairedDevice : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSUUID *pairingIdentifier
 @property  NSString *pairingDataStore
 @property  NSString *deviceIdentifier
 @property  unsigned long deviceClass
 @property  unsigned long syncProtocolVersion

  // instance methods
  -[DNDSPairedDevice isEqual:]
  -[DNDSPairedDevice copyWithZone:]
  -[DNDSPairedDevice .cxx_destruct]
  -[DNDSPairedDevice deviceIdentifier]
  -[DNDSPairedDevice deviceClass]
  -[DNDSPairedDevice pairingIdentifier]
  -[DNDSPairedDevice pairingDataStore]
  -[DNDSPairedDevice syncProtocolVersion]
  -[DNDSPairedDevice initWithDeviceIdentifier:deviceClass:syncProtocolVersion:pairingIdentifier:pairingDataStore:]


DNDSEventBehaviorResolution : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSUUID *UUID
 @property  NSDate *date
 @property  DNDClientEventBehavior *eventBehavior
 @property  NSString *clientIdentifier
 @property  unsigned long outcome
 @property  unsigned long reason

  // class methods
  +[DNDSEventBehaviorResolution resolutionForDate:eventBehavior:clientIdentifier:outcome:reason:]

  // instance methods
  -[DNDSEventBehaviorResolution isEqual:]
  -[DNDSEventBehaviorResolution copyWithZone:]
  -[DNDSEventBehaviorResolution reason]
  -[DNDSEventBehaviorResolution .cxx_destruct]
  -[DNDSEventBehaviorResolution date]
  -[DNDSEventBehaviorResolution UUID]
  -[DNDSEventBehaviorResolution outcome]
  -[DNDSEventBehaviorResolution clientIdentifier]
  -[DNDSEventBehaviorResolution eventBehavior]
  -[DNDSEventBehaviorResolution _initWithUUID:date:eventBehavior:clientIdentifier:outcome:reason:]


DNDSScheduleManager : NSObject /usr/lib/libSystem.B.dylib
 @property  <DNDSScheduleManagerDataSource> *dataSource

  // instance methods
  -[DNDSScheduleManager .cxx_destruct]
  -[DNDSScheduleManager dataSource]
  -[DNDSScheduleManager setDataSource:]
  -[DNDSScheduleManager refresh]
  -[DNDSScheduleManager _refreshWithScheduleSettings:context:]
  -[DNDSScheduleManager initWithModeAssertionManager:]


DNDSLegacyBehaviorOverride : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  unsigned long overrideType
 @property  unsigned long mode
 @property  NSArray *effectiveIntervals

  // class methods
  +[DNDSLegacyBehaviorOverride supportsSecureCoding]

  // instance methods
  -[DNDSLegacyBehaviorOverride copyWithZone:]
  -[DNDSLegacyBehaviorOverride encodeWithCoder:]
  -[DNDSLegacyBehaviorOverride initWithCoder:]
  -[DNDSLegacyBehaviorOverride .cxx_destruct]
  -[DNDSLegacyBehaviorOverride mode]
  -[DNDSLegacyBehaviorOverride overrideType]
  -[DNDSLegacyBehaviorOverride initWithOverrideType:mode:effectiveIntervals:]
  -[DNDSLegacyBehaviorOverride effectiveIntervals]


DNDSClientDetailsProvider : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DNDSClientDetailsProvider _defaultModuleDirectories]

  // instance methods
  -[DNDSClientDetailsProvider init]
  -[DNDSClientDetailsProvider .cxx_destruct]
  -[DNDSClientDetailsProvider clientDetailsForIdentifier:]
  -[DNDSClientDetailsProvider _loadPreloadBundles]
  -[DNDSClientDetailsProvider clientDetailsForIdentifier:applicationBundleURL:]
  -[DNDSClientDetailsProvider findClientDetailsForIdentifier:]


DNDSPairedDeviceStateMonitor : NSObject /usr/lib/libSystem.B.dylib <IDSServiceDelegate, DNDSSysdiagnoseDataProvider>
 @property  DNDSPairedDevice *pairedDevice
 @property  <DNDSPairedDeviceStateMonitorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // instance methods
  -[DNDSPairedDeviceStateMonitor dealloc]
  -[DNDSPairedDeviceStateMonitor delegate]
  -[DNDSPairedDeviceStateMonitor setDelegate:]
  -[DNDSPairedDeviceStateMonitor .cxx_destruct]
  -[DNDSPairedDeviceStateMonitor resume]
  -[DNDSPairedDeviceStateMonitor setPairedDevice:]
  -[DNDSPairedDeviceStateMonitor pairedDevice]
  -[DNDSPairedDeviceStateMonitor service:nearbyDevicesChanged:]
  -[DNDSPairedDeviceStateMonitor initWithIDSService:]
  -[DNDSPairedDeviceStateMonitor sysdiagnoseDataForDate:]
  -[DNDSPairedDeviceStateMonitor sysdiagnoseDataIdentifier]
  -[DNDSPairedDeviceStateMonitor _endMonitoringForChanges]
  -[DNDSPairedDeviceStateMonitor _beginMonitoringForChanges]
  -[DNDSPairedDeviceStateMonitor _queue_updatePairedState]
  -[DNDSPairedDeviceStateMonitor _getCurrentPairedDevice]
  -[DNDSPairedDeviceStateMonitor _pairedDeviceStateChanged:]


DNDSIDSSyncService : NSObject /usr/lib/libSystem.B.dylib <IDSServiceDelegate, DNDSSyncService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DNDSSyncServiceDelegate> *delegate

  // instance methods
  -[DNDSIDSSyncService delegate]
  -[DNDSIDSSyncService setDelegate:]
  -[DNDSIDSSyncService .cxx_destruct]
  -[DNDSIDSSyncService resume]
  -[DNDSIDSSyncService service:account:incomingMessage:fromID:context:]
  -[DNDSIDSSyncService service:account:identifier:didSendWithSuccess:error:]
  -[DNDSIDSSyncService initWithIDSService:]
  -[DNDSIDSSyncService sendMessage:withVersionNumber:completionHandler:]
  -[DNDSIDSSyncService _queue_resume]
  -[DNDSIDSSyncService _queue_sendMessage:withVersionNumber:error:]
  -[DNDSIDSSyncService _queue_handleIncomingMessage:deviceIdentifier:]


DNDSLegacyBehaviorOverrideEffectiveInterval : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSDateComponents *startComponents
 @property  NSDateComponents *endComponents
 @property  NSString *calendarIdentifier
 @property  unsigned long repeatInterval
 @property  NSUUID *identifier

  // class methods
  +[DNDSLegacyBehaviorOverrideEffectiveInterval supportsSecureCoding]

  // instance methods
  -[DNDSLegacyBehaviorOverrideEffectiveInterval copyWithZone:]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval encodeWithCoder:]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval initWithCoder:]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval calendarIdentifier]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval .cxx_destruct]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval identifier]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval repeatInterval]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:identifier:]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval startComponents]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval endComponents]


DNDSSyncSettings : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  BOOL syncEnabled

  // instance methods
  -[DNDSSyncSettings isEqual:]
  -[DNDSSyncSettings copyWithZone:]
  -[DNDSSyncSettings isSyncEnabled]
  -[DNDSSyncSettings initWithSyncEnabled:]


DNDSModeAssertionStoreRecord : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *assertions
 @property  NSArray *invalidations
 @property  NSArray *invalidationRequests

  // class methods
  +[DNDSModeAssertionStoreRecord recordForDictionary:keys:]
  +[DNDSModeAssertionStoreRecord recordForAssertionStore:]

  // instance methods
  -[DNDSModeAssertionStoreRecord object]
  -[DNDSModeAssertionStoreRecord .cxx_destruct]
  -[DNDSModeAssertionStoreRecord assertions]
  -[DNDSModeAssertionStoreRecord setAssertions:]
  -[DNDSModeAssertionStoreRecord invalidations]
  -[DNDSModeAssertionStoreRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionStoreRecord invalidationRequests]
  -[DNDSModeAssertionStoreRecord setInvalidationRequests:]
  -[DNDSModeAssertionStoreRecord setInvalidations:]


DNDSModeAssertionRecord : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *UUID
 @property  NSNumber *startDate
 @property  DNDSModeAssertionDetailsRecord *details
 @property  DNDSModeAssertionSourceRecord *source

  // class methods
  +[DNDSModeAssertionRecord recordForDictionary:keys:]
  +[DNDSModeAssertionRecord recordForAssertion:]

  // instance methods
  -[DNDSModeAssertionRecord object]
  -[DNDSModeAssertionRecord setSource:]
  -[DNDSModeAssertionRecord .cxx_destruct]
  -[DNDSModeAssertionRecord source]
  -[DNDSModeAssertionRecord startDate]
  -[DNDSModeAssertionRecord UUID]
  -[DNDSModeAssertionRecord setUUID:]
  -[DNDSModeAssertionRecord setStartDate:]
  -[DNDSModeAssertionRecord details]
  -[DNDSModeAssertionRecord setDetails:]
  -[DNDSModeAssertionRecord dictionaryWithKeys:options:]


DNDSModeAssertionDetailsRecord : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  NSString *modeIdentifier
 @property  NSNumber *userVisibleEndDate
 @property  DNDSModeAssertionLifetimeRecord *lifetime

  // class methods
  +[DNDSModeAssertionDetailsRecord recordForDictionary:keys:]
  +[DNDSModeAssertionDetailsRecord recordForAssertionDetails:]

  // instance methods
  -[DNDSModeAssertionDetailsRecord object]
  -[DNDSModeAssertionDetailsRecord .cxx_destruct]
  -[DNDSModeAssertionDetailsRecord identifier]
  -[DNDSModeAssertionDetailsRecord setIdentifier:]
  -[DNDSModeAssertionDetailsRecord lifetime]
  -[DNDSModeAssertionDetailsRecord setLifetime:]
  -[DNDSModeAssertionDetailsRecord modeIdentifier]
  -[DNDSModeAssertionDetailsRecord userVisibleEndDate]
  -[DNDSModeAssertionDetailsRecord setModeIdentifier:]
  -[DNDSModeAssertionDetailsRecord setUserVisibleEndDate:]
  -[DNDSModeAssertionDetailsRecord dictionaryWithKeys:options:]


DNDSModeAssertionLifetimeRecord : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *lifetimeType
 @property  NSString *eventUniqueID
 @property  NSNumber *occurrenceDate
 @property  NSNumber *onlyDuringEvent
 @property  NSNumber *startDate
 @property  NSNumber *endDate
 @property  NSString *scheduleIdentifier
 @property  NSString *behavior

  // class methods
  +[DNDSModeAssertionLifetimeRecord recordForDictionary:keys:]
  +[DNDSModeAssertionLifetimeRecord recordForAssertionLifetime:]

  // instance methods
  -[DNDSModeAssertionLifetimeRecord object]
  -[DNDSModeAssertionLifetimeRecord .cxx_destruct]
  -[DNDSModeAssertionLifetimeRecord startDate]
  -[DNDSModeAssertionLifetimeRecord endDate]
  -[DNDSModeAssertionLifetimeRecord setStartDate:]
  -[DNDSModeAssertionLifetimeRecord setEndDate:]
  -[DNDSModeAssertionLifetimeRecord behavior]
  -[DNDSModeAssertionLifetimeRecord setBehavior:]
  -[DNDSModeAssertionLifetimeRecord occurrenceDate]
  -[DNDSModeAssertionLifetimeRecord lifetimeType]
  -[DNDSModeAssertionLifetimeRecord eventUniqueID]
  -[DNDSModeAssertionLifetimeRecord scheduleIdentifier]
  -[DNDSModeAssertionLifetimeRecord setEventUniqueID:]
  -[DNDSModeAssertionLifetimeRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionLifetimeRecord setLifetimeType:]
  -[DNDSModeAssertionLifetimeRecord setOnlyDuringEvent:]
  -[DNDSModeAssertionLifetimeRecord setOccurrenceDate:]
  -[DNDSModeAssertionLifetimeRecord setScheduleIdentifier:]
  -[DNDSModeAssertionLifetimeRecord onlyDuringEvent]


DNDSModeAssertionSourceRecord : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *clientIdentifier
 @property  NSString *deviceIdentifier

  // class methods
  +[DNDSModeAssertionSourceRecord recordForDictionary:keys:]
  +[DNDSModeAssertionSourceRecord recordForAssertionSource:]

  // instance methods
  -[DNDSModeAssertionSourceRecord object]
  -[DNDSModeAssertionSourceRecord .cxx_destruct]
  -[DNDSModeAssertionSourceRecord deviceIdentifier]
  -[DNDSModeAssertionSourceRecord setDeviceIdentifier:]
  -[DNDSModeAssertionSourceRecord setClientIdentifier:]
  -[DNDSModeAssertionSourceRecord clientIdentifier]
  -[DNDSModeAssertionSourceRecord dictionaryWithKeys:options:]


DNDSModeAssertionInvalidationRecord : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  DNDSModeAssertionRecord *assertion
 @property  NSNumber *invalidationDate
 @property  DNDSModeAssertionInvalidationDetailsRecord *details
 @property  DNDSModeAssertionSourceRecord *source
 @property  NSString *reason
 @property  NSString *reasonOverride

  // class methods
  +[DNDSModeAssertionInvalidationRecord recordForDictionary:keys:]
  +[DNDSModeAssertionInvalidationRecord recordForInvalidation:]

  // instance methods
  -[DNDSModeAssertionInvalidationRecord object]
  -[DNDSModeAssertionInvalidationRecord setSource:]
  -[DNDSModeAssertionInvalidationRecord reason]
  -[DNDSModeAssertionInvalidationRecord .cxx_destruct]
  -[DNDSModeAssertionInvalidationRecord source]
  -[DNDSModeAssertionInvalidationRecord assertion]
  -[DNDSModeAssertionInvalidationRecord setAssertion:]
  -[DNDSModeAssertionInvalidationRecord details]
  -[DNDSModeAssertionInvalidationRecord setDetails:]
  -[DNDSModeAssertionInvalidationRecord setReason:]
  -[DNDSModeAssertionInvalidationRecord invalidationDate]
  -[DNDSModeAssertionInvalidationRecord reasonOverride]
  -[DNDSModeAssertionInvalidationRecord setInvalidationDate:]
  -[DNDSModeAssertionInvalidationRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionInvalidationRecord setReasonOverride:]


DNDSModeAssertionInvalidationDetailsRecord : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier

  // class methods
  +[DNDSModeAssertionInvalidationDetailsRecord recordForDictionary:keys:]
  +[DNDSModeAssertionInvalidationDetailsRecord recordForInvalidationDetails:]

  // instance methods
  -[DNDSModeAssertionInvalidationDetailsRecord object]
  -[DNDSModeAssertionInvalidationDetailsRecord .cxx_destruct]
  -[DNDSModeAssertionInvalidationDetailsRecord identifier]
  -[DNDSModeAssertionInvalidationDetailsRecord setIdentifier:]
  -[DNDSModeAssertionInvalidationDetailsRecord dictionaryWithKeys:options:]


DNDSModeAssertionInvalidationRequestRecord : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *UUID
 @property  DNDSModeAssertionInvalidationPredicateRecord *predicate
 @property  NSNumber *requestDate
 @property  DNDSModeAssertionInvalidationDetailsRecord *details
 @property  DNDSModeAssertionSourceRecord *source
 @property  NSString *reason
 @property  NSString *reasonOverride

  // class methods
  +[DNDSModeAssertionInvalidationRequestRecord recordForDictionary:keys:]
  +[DNDSModeAssertionInvalidationRequestRecord recordForInvalidationRequest:]

  // instance methods
  -[DNDSModeAssertionInvalidationRequestRecord object]
  -[DNDSModeAssertionInvalidationRequestRecord setSource:]
  -[DNDSModeAssertionInvalidationRequestRecord reason]
  -[DNDSModeAssertionInvalidationRequestRecord .cxx_destruct]
  -[DNDSModeAssertionInvalidationRequestRecord source]
  -[DNDSModeAssertionInvalidationRequestRecord setPredicate:]
  -[DNDSModeAssertionInvalidationRequestRecord predicate]
  -[DNDSModeAssertionInvalidationRequestRecord UUID]
  -[DNDSModeAssertionInvalidationRequestRecord setUUID:]
  -[DNDSModeAssertionInvalidationRequestRecord details]
  -[DNDSModeAssertionInvalidationRequestRecord setDetails:]
  -[DNDSModeAssertionInvalidationRequestRecord setReason:]
  -[DNDSModeAssertionInvalidationRequestRecord reasonOverride]
  -[DNDSModeAssertionInvalidationRequestRecord requestDate]
  -[DNDSModeAssertionInvalidationRequestRecord setRequestDate:]
  -[DNDSModeAssertionInvalidationRequestRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionInvalidationRequestRecord setReasonOverride:]


DNDSModeAssertionInvalidationPredicateRecord : NSObject /usr/lib/libSystem.B.dylib <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *predicateType
 @property  NSNumber *date
 @property  NSArray *clientIdentifiers
 @property  NSArray *UUIDs

  // class methods
  +[DNDSModeAssertionInvalidationPredicateRecord recordForDictionary:keys:]
  +[DNDSModeAssertionInvalidationPredicateRecord recordForInvalidationPredicate:]

  // instance methods
  -[DNDSModeAssertionInvalidationPredicateRecord object]
  -[DNDSModeAssertionInvalidationPredicateRecord .cxx_destruct]
  -[DNDSModeAssertionInvalidationPredicateRecord date]
  -[DNDSModeAssertionInvalidationPredicateRecord setDate:]
  -[DNDSModeAssertionInvalidationPredicateRecord UUIDs]
  -[DNDSModeAssertionInvalidationPredicateRecord predicateType]
  -[DNDSModeAssertionInvalidationPredicateRecord clientIdentifiers]
  -[DNDSModeAssertionInvalidationPredicateRecord setClientIdentifiers:]
  -[DNDSModeAssertionInvalidationPredicateRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionInvalidationPredicateRecord setPredicateType:]
  -[DNDSModeAssertionInvalidationPredicateRecord setUUIDs:]


DNDSClientDetails : NSObject /usr/lib/libSystem.B.dylib <NSCopying>
 @property  NSString *clientIdentifier
 @property  NSArray *identifiers
 @property  BOOL resolutionContextAssumingDeviceUILocked
 @property  BOOL userInteractionClient
 @property  BOOL persistentAssertionClient
 @property  BOOL syncSuppressedClient

  // class methods
  +[DNDSClientDetails detailsForBundleAtURL:]
  +[DNDSClientDetails detailsForClientIdentifier:applicationBundleURL:]
  +[DNDSClientDetails _detailsForBundleInfoDictionary:]

  // instance methods
  -[DNDSClientDetails copyWithZone:]
  -[DNDSClientDetails .cxx_destruct]
  -[DNDSClientDetails identifiers]
  -[DNDSClientDetails clientIdentifier]
  -[DNDSClientDetails isResolutionContextAssumingDeviceUILocked]
  -[DNDSClientDetails isUserInteractionClient]
  -[DNDSClientDetails isSyncSuppressedClient]
  -[DNDSClientDetails isPersistentAssertionClient]
  -[DNDSClientDetails initWithClientIdentifier:identifiers:resolutionContextAssumingDeviceUILocked:userInteractionClient:persistentAssertionClient:syncSuppressedClient:]


DNDSSyncSettingsProvider : NSObject /usr/lib/libSystem.B.dylib
 @property  DNDSSyncSettings *syncSettings
 @property  <DNDSSyncSettingsProviderDelegate> *delegate

  // instance methods
  -[DNDSSyncSettingsProvider dealloc]
  -[DNDSSyncSettingsProvider delegate]
  -[DNDSSyncSettingsProvider setDelegate:]
  -[DNDSSyncSettingsProvider .cxx_destruct]
  -[DNDSSyncSettingsProvider initWithQueue:]
  -[DNDSSyncSettingsProvider syncSettings]
  -[DNDSSyncSettingsProvider setSyncSettings:]
  -[DNDSSyncSettingsProvider _endMonitoringForChanges]
  -[DNDSSyncSettingsProvider _beginMonitoringForChanges]
  -[DNDSSyncSettingsProvider _updateSyncPreferences]
  -[DNDSSyncSettingsProvider _queue_updateSyncPreferences]


DNDSSettingsRecord : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  DNDSBehaviorSettingsRecord *behaviorSettings
 @property  DNDSBypassSettingsRecord *phoneCallBypassSettings
 @property  DNDSScheduleSettingsRecord *scheduleSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSSettingsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSSettingsRecord newWithDictionaryRepresentation:]
  +[DNDSSettingsRecord recordWithEncodedInfo:error:]
  +[DNDSSettingsRecord backingStoreWithFileURL:]

  // instance methods
  -[DNDSSettingsRecord init]
  -[DNDSSettingsRecord isEqual:]
  -[DNDSSettingsRecord copyWithZone:]
  -[DNDSSettingsRecord mutableCopyWithZone:]
  -[DNDSSettingsRecord .cxx_destruct]
  -[DNDSSettingsRecord dictionaryRepresentation]
  -[DNDSSettingsRecord _initWithRecord:]
  -[DNDSSettingsRecord behaviorSettings]
  -[DNDSSettingsRecord phoneCallBypassSettings]
  -[DNDSSettingsRecord scheduleSettings]
  -[DNDSSettingsRecord _initWithBehaviorSettings:phoneCallBypassSettings:scheduleSettings:]


DNDSMutableSettingsRecord : DNDSSettingsRecord
 @property  DNDSBehaviorSettingsRecord *behaviorSettings
 @property  DNDSBypassSettingsRecord *phoneCallBypassSettings
 @property  DNDSScheduleSettingsRecord *scheduleSettings

  // instance methods
  -[DNDSMutableSettingsRecord copyWithZone:]
  -[DNDSMutableSettingsRecord setBehaviorSettings:]
  -[DNDSMutableSettingsRecord setPhoneCallBypassSettings:]
  -[DNDSMutableSettingsRecord setScheduleSettings:]


DNDSRemoteServiceProvider : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, DNDRemoteServiceServerProtocol>
 @property  <DNDSRemoteServiceProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSRemoteServiceProvider dealloc]
  -[DNDSRemoteServiceProvider invalidate]
  -[DNDSRemoteServiceProvider delegate]
  -[DNDSRemoteServiceProvider setDelegate:]
  -[DNDSRemoteServiceProvider .cxx_destruct]
  -[DNDSRemoteServiceProvider resume]
  -[DNDSRemoteServiceProvider listener:shouldAcceptNewConnection:]
  -[DNDSRemoteServiceProvider resolveBehaviorForEventDetails:requestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider queryStateWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider registerForStateUpdatesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider takeModeAssertionWithDetails:requestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getActiveModeAssertionWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider registerForAssertionUpdatesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getBehaviorSettingsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider setBehaviorSettings:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getPhoneCallBypassSettingsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider setPhoneCallBypassSettings:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getScheduleSettingsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider setScheduleSettings:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider registerForSettingsUpdatesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider _iterateClientConnectionsToSendWithHandler:]
  -[DNDSRemoteServiceProvider _handleClientConnectionInterrupted:]
  -[DNDSRemoteServiceProvider _handleClientConnectionInvalidated:]
  -[DNDSRemoteServiceProvider _clientDetailsForClientIdentifier:clientConnection:]
  -[DNDSRemoteServiceProvider _registerOrMutateConnectionDetailsForClientConnection:handler:]
  -[DNDSRemoteServiceProvider _unregisterConnectionDetailsForClientConnection:]
  -[DNDSRemoteServiceProvider initWithClientDetailsProvider:]
  -[DNDSRemoteServiceProvider handleStateUpdate:]
  -[DNDSRemoteServiceProvider handleModeAssertionUpdateResult:]
  -[DNDSRemoteServiceProvider handleUpdatedBehaviorSettings:]
  -[DNDSRemoteServiceProvider handleUpdatedPhoneCallBypassSettings:]
  -[DNDSRemoteServiceProvider handleUpdatedScheduleSettings:]


DNDSServer : NSObject /usr/lib/libSystem.B.dylib <DNDSEventBehaviorResolverDataSource, DNDSLifetimeMonitorDataSource, DNDSScheduleLifetimeMonitorDataSource, DNDSLifetimeMonitorDelegate, DNDSStateProviderDataSource, DNDSRemoteServiceProviderDelegate, DNDSAssertionSyncManagerDataSource, DNDSAssertionSyncManagerDelegate, DNDSLegacyAssertionSyncManagerDataSource, DNDSSettingsSyncManagerDataSource, DNDSSettingsSyncManagerDelegate, DNDSScheduleManagerDataSource, DNDSSettingsManagerDelegate, DNDSPairedDeviceStateMonitorDelegate>
 @property  unsigned long lockState
 @property  unsigned long lostModeState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSServer init]
  -[DNDSServer .cxx_destruct]
  -[DNDSServer resume]
  -[DNDSServer lockState]
  -[DNDSServer setLockState:]
  -[DNDSServer _handleSignificantTimeChange]
  -[DNDSServer lifetimeMonitor:modeAssertionsWithLifetimeClass:]
  -[DNDSServer lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:expirationDate:]
  -[DNDSServer activeAssertionsDidChangeForLifetimeMonitor:]
  -[DNDSServer currentStateForEventBehaviorResolver:]
  -[DNDSServer currentUILockStateForEventBehaviorResolver:]
  -[DNDSServer eventBehaviorResolver:bypassSettingsForClientIdentifier:]
  -[DNDSServer scheduleSettingsForScheduleLifetimeMonitor:]
  -[DNDSServer currentlyActiveModeAssertionsForStateProvider:]
  -[DNDSServer currentLostModeStateForStateProvider:]
  -[DNDSServer currentInterruptionBehaviorSettingForStateProvider:]
  -[DNDSServer stateProvider:activeDateIntervalForModeAssertion:]
  -[DNDSServer settingsManager:didReceiveUpdatedBehaviorSettings:]
  -[DNDSServer settingsManager:didReceiveUpdatedPhoneCallBypassSettings:]
  -[DNDSServer settingsManager:didReceiveUpdatedScheduleSettings:]
  -[DNDSServer settingsManager:didReceiveUpdatedSyncSettings:]
  -[DNDSServer syncManager:performModeAssertionUpdatesWithHandler:]
  -[DNDSServer currentStateForLegacyAssertionSyncManager:]
  -[DNDSServer currentlyActivePairedDeviceForSyncManager:]
  -[DNDSServer phoneCallBypassSettingsForSyncManager:]
  -[DNDSServer scheduleSettingsForSyncManager:]
  -[DNDSServer syncManager:didReceiveUpdatedScheduleSettings:]
  -[DNDSServer syncManager:didReceiveUpdatedPhoneCallBypassSettings:]
  -[DNDSServer scheduleSettingsForScheduleManager:]
  -[DNDSServer pairedDeviceStateMonitor:pairingChangedFromDevice:toDevice:]
  -[DNDSServer _queue_resume]
  -[DNDSServer remoteServiceProvider:resolveBehaviorForEventDetails:clientDetails:date:error:]
  -[DNDSServer remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:error:]
  -[DNDSServer remoteServiceProvider:invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:]
  -[DNDSServer remoteServiceProvider:assertionWithClientIdentifer:error:]
  -[DNDSServer remoteServiceProvider:latestInvalidationWithClientIdentifer:error:]
  -[DNDSServer remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:clientIdentifier:error:]
  -[DNDSServer remoteServiceProvider:currentStateWithError:]
  -[DNDSServer remoteServiceProvider:behaviorSettingsWithError:]
  -[DNDSServer remoteServiceProvider:setBehaviorSettings:withError:]
  -[DNDSServer remoteServiceProvider:phoneCallBypassSettingsWithError:]
  -[DNDSServer remoteServiceProvider:setPhoneCallBypassSettings:withError:]
  -[DNDSServer remoteServiceProvider:scheduleSettingsWithError:]
  -[DNDSServer remoteServiceProvider:setScheduleSettings:withError:]
  -[DNDSServer remoteServiceProvider:invalidateModeAssertionWithUUID:reason:reasonOverride:error:]
  -[DNDSServer _queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:]
  -[DNDSServer setLostModeState:]
  -[DNDSServer _updateModeAssertionManagerAndRefreshLifetimesAndStateWithHandler:error:]
  -[DNDSServer _activeModeAssertions]
  -[DNDSServer _activeDateIntervalForModeAssertion:]
  -[DNDSServer lostModeState]
  -[DNDSServer _queue_handlePairedDeviceAndSyncSettingsChange]
  -[DNDSServer setUILockState:error:]
  -[DNDSServer _setLostModeState:error:]


DNDModeAssertion(Resolution)
	// class methods
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsWithClientIdentifiers:]
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsWithDeviceIdentifier:]
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsWithUUIDs:]
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsWithLifetimeClass:]
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsTakenBeforeDate:]

	// instance methods
	-[DNDModeAssertion(Resolution) resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:]

DNDModeAssertionInvalidation(Resolution)
	// class methods
	+[DNDModeAssertionInvalidation(Resolution) predicateForModeAssertionInvalidationsWithAssertionClientIdentifiers:]

	// instance methods
	-[DNDModeAssertionInvalidation(Resolution) resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:]

DNDModeAssertionSource(Resolution)
	// instance methods
	-[DNDModeAssertionSource(Resolution) resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:]

NSDateInterval(Schedule)
	// class methods
	+[NSDateInterval(Schedule) dnds_dateIntervalForScheduleSettings:date:calendar:]
	+[NSDateInterval(Schedule) dnds_dateIntervalUntilEndOfScheduleForScheduleSettings:startDate:calendar:]

	// instance methods
	-[NSDateInterval(Schedule) dnds_lifetimePhaseForDate:]

NSNumber(DNDSDateHelper)
	// class methods
	+[NSNumber(DNDSDateHelper) dnds_numberWithDate:]
	+[NSNumber(DNDSDateHelper) dnds_safeNumberWithDate:]

	// instance methods
	-[NSNumber(DNDSDateHelper) dnds_dateValue]

CNContact(DNDClientEventSource)
	// class methods
	+[CNContact(DNDClientEventSource) dnds_predicateForContactsMatchingEventSource:]

DNDBehaviorSettings(Record)
	// class methods
	+[DNDBehaviorSettings(Record) settingsForRecord:]

	// instance methods
	-[DNDBehaviorSettings(Record) makeRecord]

DNDBypassSettings(Record)
	// class methods
	+[DNDBypassSettings(Record) settingsForRecord:]

	// instance methods
	-[DNDBypassSettings(Record) makeRecord]

NSURL(BackingStores)
	// class methods
	+[NSURL(BackingStores) dnds_localAssertionBackingStoreFileURL]
	+[NSURL(BackingStores) dnds_settingsBackingStoreFileURL]
	+[NSURL(BackingStores) dnds_legacySettingsFileURL]

NSKeyedArchiver(LegacySupport)
	// class methods
	+[NSKeyedArchiver(LegacySupport) dnds_secureLegacyArchiver]

NSKeyedUnarchiver(LegacySupport)
	// class methods
	+[NSKeyedUnarchiver(LegacySupport) dnds_secureLegacyUnarchiverForReadingFromData:error:]

NPSDomainAccessor(DNDSLegacySettingsSyncManager)
	// instance methods
	-[NPSDomainAccessor(DNDSLegacySettingsSyncManager) dnds_bypassSettings]
	-[NPSDomainAccessor(DNDSLegacySettingsSyncManager) dnds_setBypassSettings:]
	-[NPSDomainAccessor(DNDSLegacySettingsSyncManager) dnds_scheduleSettingsWithLastUpdated:]
	-[NPSDomainAccessor(DNDSLegacySettingsSyncManager) dnds_setScheduleSettings:]

NSMutableDictionary(DNDSModeAssertionStoreRecord)
	// instance methods
	-[NSMutableDictionary(DNDSModeAssertionStoreRecord) dnds_setSafeLocalDateForTimestamp:key:]

NSString(DNDModeAssertionLifetimeTypeHelper)
	// class methods
	+[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_stringForLifetimeType:]
	+[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_stringForScheduleLifetimeBehavior:]
	+[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_stringForInvalidationReason:]
	+[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_stringForInvalidationReasonOverride:]
	+[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_stringForPredicateType:]

	// instance methods
	-[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_lifetimeTypeValue]
	-[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_scheduleLifetimeBehaviorValue]
	-[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_invalidationReasonValue]
	-[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_invalidationReasonOverrideValue]
	-[NSString(DNDModeAssertionLifetimeTypeHelper) dnds_predicateTypeValue]

NRDevice(DNDServer)
	// instance methods
	-[NRDevice(DNDServer) _dnds_pairedDeviceClass]
	-[NRDevice(DNDServer) _dnds_syncProtocolVersion]

NSError(DoNotDisturbServer)
	// instance methods
	-[NSError(DoNotDisturbServer) dnds_isOutOfSpaceError]

NSXPCConnection(Entitlements)
	// instance methods
	-[NSXPCConnection(Entitlements) dnds_hasAnyValidEntitlement]
	-[NSXPCConnection(Entitlements) dnds_hasBehaviorResolutionEntitlementForClientIdentifier:]
	-[NSXPCConnection(Entitlements) dnds_hasEntitlementsToRequestAssertionWithDetails:clientIdentifier:]
	-[NSXPCConnection(Entitlements) dnds_hasModeAssertionEntitlementForClientIdentifier:]
	-[NSXPCConnection(Entitlements) dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:]
	-[NSXPCConnection(Entitlements) dnds_hasStateRequestEntitlementForClientIdentifier:]
	-[NSXPCConnection(Entitlements) dnds_hasStateUpdatesEntitlementForClientIdentifier:]
	-[NSXPCConnection(Entitlements) dnds_hasSettingsRequestEntitlementForClientIdentifier:]
	-[NSXPCConnection(Entitlements) dnds_hasSettingsModificationEntitlementForClientIdentifier:]
	-[NSXPCConnection(Entitlements) dnds_hasSettingsUpdatesEntitlementForClientIdentifier:]
	-[NSXPCConnection(Entitlements) _dnds_safeStringArrayEntitlementForKey:]

01 00 0300 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSPlatform 
01 00 0500 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLCircularRegion 
01 00 0500 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 0400 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0400 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFetchRequest 
01 00 0400 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0400 /System/Library/Frameworks/Contacts.framework/Contacts: CNFavorites 
01 00 0400 /System/Library/Frameworks/Contacts.framework/Contacts: CNGroup 
01 00 0400 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDBehaviorSettings 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDBypassSettings 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDClientEventBehavior 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertion 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionCalendarEventLifetime 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionDateIntervalLifetime 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionDetails 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionInvalidation 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionLifetime 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionLocationLifetime 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionScheduleLifetime 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionSource 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableBehaviorSettings 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableBypassSettings 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableModeAssertionDetails 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableModeAssertionInvalidationDetails 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableScheduleTime 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableScheduleTimePeriod 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDScheduleSettings 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDState 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDStateModeAssertionMetadata 
01 00 0600 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDStateUpdate 
01 00 0700 /System/Library/Frameworks/EventKit.framework/EventKit: EKEventStore 
01 00 0800 /System/Library/PrivateFrameworks/FindMyDevice.framework/FindMyDevice: FMDFMIPManager 
01 00 0a00 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 0100 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 0100 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 0200 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRDevice 
01 00 0200 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0b00 /System/Library/PrivateFrameworks/PersistentConnection.framework/PersistentConnection: PCPersistentTimer 
