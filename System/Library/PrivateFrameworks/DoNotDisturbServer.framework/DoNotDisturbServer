|| __DATA.__objc_data _OBJC_CLASS_$_DNDSApplicationConfigurationRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSAvailabilityInvitationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSConfigurationsSecureRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSContactRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSIDSRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSIDSRecordID
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSIDSRecordMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSLegacyBehaviorOverride
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSLegacyBehaviorOverrideEffectiveInterval
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionDateInvalidationPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionDetailsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionLifetimeRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeAssertionRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSModeConfigurationsRecordDiff
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableApplicationConfigurationRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableBehaviorSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableConfigurationRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableConfigurationSecureRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableConfigurationsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableConfigurationsSecureRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableContactRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableDailyHeartbeatMetricsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableExplicitRegionStore
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableGlobalConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableHeartbeatMetricsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableIDSRecordMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableMeDeviceStore
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableModeConfigurationTriggersRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableModeRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableMonthlyHeartbeatMetricsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableScheduleSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableSettingsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableUntilExitRegionStore
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSMutableWeeklyHeartbeatMetricsRecord
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSUserAvailabilityIntentLauncher
|| __DATA.__objc_data _OBJC_CLASS_$_DNDSUserAvailabilityPublishResult
|| __DATA.__objc_data _OBJC_CLASS_$__DNDSPendingMessageRecipients
|| __DATA.__objc_data _OBJC_CLASS_$__DNDSSyncMessageGroup
|| __DATA.__objc_data _OBJC_CLASS_$__DNDSUserAvailabilityTCCProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSApplicationConfigurationRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSAvailabilityInvitationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSConfigurationsSecureRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSContactRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSIDSRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSIDSRecordID
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSIDSRecordMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSLegacyBehaviorOverride
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSLegacyBehaviorOverrideEffectiveInterval
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionDateInvalidationPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionDetailsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionLifetimeRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSModeConfigurationsRecordDiff
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableApplicationConfigurationRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableBehaviorSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableConfigurationRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableConfigurationSecureRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableConfigurationsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableConfigurationsSecureRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableContactRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableDailyHeartbeatMetricsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableExplicitRegionStore
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableGlobalConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableHeartbeatMetricsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableIDSRecordMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableMeDeviceStore
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableModeConfigurationTriggersRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableModeRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableMonthlyHeartbeatMetricsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableScheduleSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableSettingsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableUntilExitRegionStore
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSMutableWeeklyHeartbeatMetricsRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSUserAvailabilityIntentLauncher
|| __DATA.__objc_data _OBJC_METACLASS_$_DNDSUserAvailabilityPublishResult
|| __DATA.__objc_data _OBJC_METACLASS_$__DNDSPendingMessageRecipients
|| __DATA.__objc_data _OBJC_METACLASS_$__DNDSSyncMessageGroup
|| __DATA.__objc_data _OBJC_METACLASS_$__DNDSUserAvailabilityTCCProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSApplicationConfigurationRecord._allowedThreads
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSApplicationConfigurationRecord._deniedThreads
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSApplicationConfigurationRecord._minimumBreakthroughUrgency
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBackingStoreDictionaryContext._applicationIdentifierMapper
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBackingStoreDictionaryContext._contactProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBackingStoreDictionaryContext._destination
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBackingStoreDictionaryContext._partitionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBackingStoreDictionaryContext._redactSensitiveData
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBackingStoreDictionaryContext._underlyingHealingSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBehaviorSettingsRecord._interruptionBehaviorSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBypassSettingsRecord._immediateBypassCNGroupIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBypassSettingsRecord._immediateBypassEventSourceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSBypassSettingsRecord._repeatEventSourceBehaviorEnabledSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._activeAssertionUpdateClientIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._assertionUpdateClientIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._interruptionInvalidationAssertionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._wantsActiveModeUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._wantsGlobalConfigurationUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._wantsMeDeviceStateUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._wantsModeUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._wantsSettingsUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSClientConnectionDetails._wantsStateUpdates
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationRecord._compatibilityVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationRecord._hideApplicationBadges
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationRecord._minimumBreakthroughUrgency
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationRecord._suppressionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationRecord._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationSecureRecord._allowedApplications
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationSecureRecord._deniedApplications
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationSecureRecord._senderConfiguration
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationsRecord._modeConfigurations
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSConfigurationsSecureRecord._modeConfigurations
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactMonitorChangeCollector._deletedContactIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactMonitorChangeCollector._monitoredContactIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactMonitorChangeCollector._updatedContacts
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactRecord._contactIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactRecord._emailAddresses
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactRecord._firstName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactRecord._lastName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactRecord._middleName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactRecord._nickName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactRecord._organizationName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSContactRecord._phoneNumbers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSDailyHeartbeatMetricsRecord._dayOfWeek
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSExplicitRegionStore._enteredRegionIdentifiersPendingExit
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSGlobalConfiguration._automaticallyGenerated
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSGlobalConfiguration._bypassSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSGlobalConfiguration._lastModified
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSGlobalConfiguration._preventAutoReply
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabledAtLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabledDrivingMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabledDuringEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabledForOneHour
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabledFromControlCenterPhone
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabledFromControlCenterWatch
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabledSleepMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabledUntilEvening
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._enabledUntilMorning
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._manuallyEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._numberOfManualSessions
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSHeartbeatMetricsRecord._numberOfSessions
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSIDSRecordID._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSIDSRecordID._zone
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSIDSRecordMetadata._deleted
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSIDSRecordMetadata._lastModified
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSIDSRecordMetadata._recordID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSMeDeviceStore._meDeviceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSMeDeviceStore._meDeviceStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSMetricsRecord._lastDailyHeartbeat
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSMetricsRecord._lastMonthlyHeartbeat
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSMetricsRecord._lastWeeklyHeartbeat
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSMetricsRecord._metricsByDay
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSMetricsRecord._metricsByMonth
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSMetricsRecord._metricsByWeek
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeAssertionStore._assertions
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeAssertionStore._invalidationRequests
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeAssertionStore._invalidations
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._automaticallyGenerated
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._compatibilityVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._configuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._created
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._dimsLockScreen
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._ephemeralResolvedCompatibilityVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._hasSecureData
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._impactsAvailability
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._lastModified
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._mode
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._secureConfiguration
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationRecord._triggers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationTriggersRecord._triggers
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeConfigurationsRecord._modeConfigurationsByModeIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeRecord._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeRecord._modeIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeRecord._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeRecord._semanticType
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeRecord._symbolImageName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeRecord._tintColorName
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSModeRecord._visibility
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._bedtimeBehaviorEnabledSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._lastUpdatedTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._scheduleEnabledSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._timePeriodEndTimeHour
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._timePeriodEndTimeMinute
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._timePeriodStartTimeHour
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._timePeriodStartTimeMinute
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSScheduleSettingsRecord._timePeriodWeekdays
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSenderConfigurationRecord._allowedContactGroups
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSenderConfigurationRecord._allowedContactTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSenderConfigurationRecord._allowedContacts
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSenderConfigurationRecord._deniedContactGroups
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSenderConfigurationRecord._deniedContactTypes
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSenderConfigurationRecord._deniedContacts
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSenderConfigurationRecord._phoneCallBypassSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSettingsRecord._behaviorSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSettingsRecord._configurations
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSettingsRecord._phoneCallBypassSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSettingsRecord._scheduleSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSStateProviderSystemSnapshot._activeAssertionUUIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSStateProviderSystemSnapshot._activeDateIntervalByAssertionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSStateProviderSystemSnapshot._assertions
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSStateProviderSystemSnapshot._interruptionBehaviorSetting
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSStateProviderSystemSnapshot._lastUpdate
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSStateProviderSystemSnapshot._lostModeState
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSyncSettings._cloudSyncEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSSyncSettings._pairSyncEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSUntilExitRegionStore._activeLifetimeAssertionUUIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSUntilExitRegionStore._currentRegion
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSUntilExitRegionStore._hasActiveLifetimes
|| __DATA.__objc_ivar _OBJC_IVAR_$_DNDSUntilExitRegionStore._regionEntered
|| __DATA_CONST.__const _DNDSAppForegroundTriggerManagerAssertionIdentifierSuffix
|| __DATA_CONST.__const _DNDSAppForegroundTriggerManagerClientIdentifier
|| __DATA_CONST.__const _DNDSDrivingTriggerAssertionIdentifier
|| __DATA_CONST.__const _DNDSDrivingTriggerManagerClientIdentifier
|| __DATA_CONST.__const _DNDSFocusActivityManagerClientIdentifier
|| __DATA_CONST.__const _DNDSGamingTriggerAssertionIdentifier
|| __DATA_CONST.__const _DNDSGamingTriggerManagerClientIdentifier
|| __DATA_CONST.__const _DNDSMindfulnessTriggerAssertionIdentifier
|| __DATA_CONST.__const _DNDSMindfulnessTriggerManagerClientIdentifier
|| __DATA_CONST.__const _DNDSScheduleManagerClientIdentifier
|| __DATA_CONST.__const _DNDSSleepingTriggerAssertionIdentifier
|| __DATA_CONST.__const _DNDSSleepingTriggerManagerClientIdentifier
|| __DATA_CONST.__const _DNDSSmartTriggerAssertionIdentifier
|| __DATA_CONST.__const _DNDSSmartTriggerManagerClientIdentifier
|| __DATA_CONST.__const _DNDSWorkoutTriggerAssertionIdentifier
|| __DATA_CONST.__const _DNDSWorkoutTriggerManagerClientIdentifier
|| __DATA_CONST.__const _DNDUntilILeaveRegionIdentifier
|| __DATA_CONST.__const _DNDUserNotificationsCommunicationEntitlement
|| __DATA_CONST.__const _kDNDModeAssertionScheduleLifetimeBehaviorRecordExpireWhenNextScheduleEndsValue
|| __DATA_CONST.__const _kDNDModeAssertionScheduleLifetimeBehaviorRecordMatchScheduleValue
|| __DATA_CONST.__const _kDNDSIDSSyncEngineActionAck
|| __DATA_CONST.__const _kDNDSIDSSyncEngineActionReplace
|| __DATA_CONST.__const _kDNDSIDSSyncEngineActionResync
|| __DATA_CONST.__const _kDNDSIDSSyncEngineActionUnlock
|| __DATA_CONST.__const _kDNDSIDSSyncEngineActionUpdate
|| __DATA_CONST.__const _kDNDSModeConfigurationsMinimumRequiredVersionKey
|| __DATA_CONST.__const _kDNDSModeConfigurationsRecordDataKey
|| __DATA_CONST.__const _kDNDSModeConfigurationsRecordMainPartitionKey
|| __DATA_CONST.__const _kDNDSModeConfigurationsRecordPartitionedDataKey
|| __DATA_CONST.__const _kDNDSModeConfigurationsRecordSecondaryPartitionKey
|| __DATA_CONST.__const _kDNDSModeConfigurationsVersionKey
|| __DATA_CONST.__const _kDNDSModeConfigurationsVersionSupported
|| __DATA_CONST.__const _kDNDSSyncSettingsCloudSyncDisabledKey
|| __DATA_CONST.__const _kDNDSSyncSettingsMirrorDNDKey
|| __DATA_CONST.__const _kLegacyOverrideLastCalculatedTimeKey
|| __DATA_CONST.__const _kLegacyOverrideStatusKey
|| __DATA_CONST.__const _kNanoPreferencesLegacySyncDomainKey
|| __DATA_DIRTY.__common _DNDSLogAppForegroundTrigger
|| __DATA_DIRTY.__common _DNDSLogAssertionManager
|| __DATA_DIRTY.__common _DNDSLogAssertionStore
|| __DATA_DIRTY.__common _DNDSLogAuxiliaryState
|| __DATA_DIRTY.__common _DNDSLogAvailabilityProvider
|| __DATA_DIRTY.__common _DNDSLogBiomeDonation
|| __DATA_DIRTY.__common _DNDSLogCalendarEventLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogCloudSync
|| __DATA_DIRTY.__common _DNDSLogDataMigrator
|| __DATA_DIRTY.__common _DNDSLogDateIntervalLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogDefaultLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogDrivingTrigger
|| __DATA_DIRTY.__common _DNDSLogGamingTrigger
|| __DATA_DIRTY.__common _DNDSLogGeneral
|| __DATA_DIRTY.__common _DNDSLogGlobalConfiguration
|| __DATA_DIRTY.__common _DNDSLogIDSSyncEngine
|| __DATA_DIRTY.__common _DNDSLogIDSTransport
|| __DATA_DIRTY.__common _DNDSLogKeybag
|| __DATA_DIRTY.__common _DNDSLogLegacyAssertionSync
|| __DATA_DIRTY.__common _DNDSLogLegacySettingsSync
|| __DATA_DIRTY.__common _DNDSLogLocationLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogMeDeviceService
|| __DATA_DIRTY.__common _DNDSLogMetrics
|| __DATA_DIRTY.__common _DNDSLogMindfulnessTrigger
|| __DATA_DIRTY.__common _DNDSLogModeConfigurations
|| __DATA_DIRTY.__common _DNDSLogModernAssertionSync
|| __DATA_DIRTY.__common _DNDSLogPairedDeviceState
|| __DATA_DIRTY.__common _DNDSLogResolver
|| __DATA_DIRTY.__common _DNDSLogSchedule
|| __DATA_DIRTY.__common _DNDSLogScheduleLifetimeMonitor
|| __DATA_DIRTY.__common _DNDSLogServiceProvider
|| __DATA_DIRTY.__common _DNDSLogSettings
|| __DATA_DIRTY.__common _DNDSLogSleepingTrigger
|| __DATA_DIRTY.__common _DNDSLogSmartTrigger
|| __DATA_DIRTY.__common _DNDSLogStateProvider
|| __DATA_DIRTY.__common _DNDSLogSysdiagnose
|| __DATA_DIRTY.__common _DNDSLogSystemState
|| __DATA_DIRTY.__common _DNDSLogWorkoutTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSAnyModeAssertionInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSAppForegroundTriggerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSAppForegroundTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSAppInfoCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSApplicationIdentifierMapper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSAuxiliaryStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSBackingStoreDictionaryContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSBaseLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSBehaviorSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSBiomeDonationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSBypassSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSCalendarEventLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSClientConnectionDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSClientDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSClientDetailsProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSConfigurationSecureRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSConfigurationsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSContactMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSContactMonitorChangeCollector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSContactProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSDailyHeartbeatMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSDateIntervalLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSDefaultLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSDrivingTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSEventBehaviorResolution
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSEventBehaviorResolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSExplicitRegionLocationLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSExplicitRegionStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSFirstUnlockPurgedBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSGamingTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSGlobalConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSGlobalConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSGlobalConfigurationStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSHeartbeatMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSIDSServerBagValues
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSIDSSyncEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSIDSSyncEngineMetadataStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSIDSSyncService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSJSONBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSKeybag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSLegacyAssertionSyncManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSLegacySettingsSyncManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSLifetimeMonitorResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSLocationLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSLocationTriggerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMeDeviceService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMeDeviceStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMemoryCachedBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMetricsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMindfulnessTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionClientIdentifierInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationDetailsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationPredicateRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionInvalidationRequestRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionManagerUpdateContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionSourceRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionStoreRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionUUIDInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeAssertionUpdateResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeConfigurationTriggersRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeConfigurationsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeConfigurationsStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeRepository
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModeResolutionService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModernAssertionSyncManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSModernAssertionSyncMetadataStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMonthlyHeartbeatMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableBackingStoreDictionaryContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableBypassSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableClientConnectionDetails
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableModeAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableModeConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableModeConfigurationsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableSenderConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableStateProviderSystemSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSMutableSyncSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSPairedDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSPairedDeviceStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSPlaceholderModeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSPlaceholderModesRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSReachability
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSRemoteAvailabilityServiceProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSRemoteServiceProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSScheduleLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSScheduleManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSScheduleSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSScheduleSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSenderConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSleepingTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSmartTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSStateProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSStateProviderSystemSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSyncEngine
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSyncEngineLastChanceDataStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSyncEngineMetadataStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSyncSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSSyncSettingsProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSUntilExitLocationLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSUntilExitRegionStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSUserAvailabilityCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSWeeklyHeartbeatMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSWorkloop
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSWorkoutTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSXPCEventInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSXPCEventStream
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_DNDSXPCTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSAnyModeAssertionInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSAppForegroundTriggerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSAppForegroundTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSAppInfoCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSApplicationIdentifierMapper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSAuxiliaryStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSBackingStoreDictionaryContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSBaseLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSBehaviorSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSBiomeDonationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSBypassSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSCalendarEventLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSClientConnectionDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSClientDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSClientDetailsProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSConfigurationSecureRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSConfigurationsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSContactMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSContactMonitorChangeCollector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSContactProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSDailyHeartbeatMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSDateIntervalLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSDefaultLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSDrivingTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSEventBehaviorResolution
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSEventBehaviorResolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSExplicitRegionLocationLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSExplicitRegionStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSFirstUnlockPurgedBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSGamingTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSGlobalConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSGlobalConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSGlobalConfigurationStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSHeartbeatMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSIDSServerBagValues
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSIDSSyncEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSIDSSyncEngineMetadataStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSIDSSyncService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSJSONBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSKeybag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSLegacyAssertionSyncManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSLegacySettingsSyncManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSLifetimeMonitorResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSLocationLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSLocationTriggerConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMeDeviceService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMeDeviceStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMemoryCachedBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMetricsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMindfulnessTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionClientIdentifierInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationDetailsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationPredicateRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionInvalidationRequestRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionManagerUpdateContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionSourceRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionStoreRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionUUIDInvalidationPredicate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeAssertionUpdateResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeConfigurationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeConfigurationTriggersRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeConfigurationsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeConfigurationsStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeRepository
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModeResolutionService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModernAssertionSyncManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSModernAssertionSyncMetadataStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMonthlyHeartbeatMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableBackingStoreDictionaryContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableBypassSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableClientConnectionDetails
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableModeAssertionStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableModeConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableModeConfigurationsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableSenderConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableStateProviderSystemSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSMutableSyncSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSPairedDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSPairedDeviceStateMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSPlaceholderModeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSPlaceholderModesRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSReachability
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSRemoteAvailabilityServiceProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSRemoteServiceProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSScheduleLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSScheduleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSScheduleSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSScheduleSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSenderConfigurationRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSettingsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSettingsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSleepingTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSmartTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSStateProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSStateProviderSystemSnapshot
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSyncEngine
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSyncEngineLastChanceDataStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSyncEngineMetadataStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSyncSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSSyncSettingsProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSUntilExitLocationLifetimeMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSUntilExitRegionStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSUserAvailabilityCoordinator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSWeeklyHeartbeatMetricsRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSWorkloop
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSWorkoutTriggerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSXPCEventInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSXPCEventStream
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_DNDSXPCTimer
|| __TEXT.__const _DoNotDisturbServerVersionNumber
|| __TEXT.__const _DoNotDisturbServerVersionString
|| __TEXT.__const _kDefaultPreventAutoReplySetting
|| __TEXT.__const _kIDSMessageVersion
|| __TEXT.__const _kLeaveLocationRadius
|| __TEXT.__const _kMaximumMonitoredRegions
|| __TEXT.__const _kMonitoredRegionsReservedForUntilILeave
|| __TEXT.__const _kRepeatEventThreshold
|| __TEXT.__const _kResolutionRecordDesiredCount
|| __TEXT.__const _kScheduleEnabledModes
|| __TEXT.__text _BMUserFocusComputedModeUpdateReasonForStateUpdateReason
|| __TEXT.__text _BMUserFocusComputedModeUpdateSourceForStateUpdateSource
|| __TEXT.__text _DNDGrantedUserNotificationsAuthorizationForBundleIdentifier
|| __TEXT.__text _DNDOverrideSettingToString
|| __TEXT.__text _DNDResolvedPreventAutoReplySetting
|| __TEXT.__text _DNDSCollectSysdiagnoseState
|| __TEXT.__text _DNDSGetLifetimePhase
|| __TEXT.__text _DNDSIsSysdiagnoseBeingCaptured
|| __TEXT.__text _DNDSMigrateLegacySettings
|| __TEXT.__text _DNDSModeConfigurationsMinimumRequiredVersionForConfigurationVersion
|| __TEXT.__text _DNDSPowerLogFocusInterruptionSuppresionEvent
|| __TEXT.__text _DNDSPowerLogFocusModeSemanticTypeForDNDModeSemanticType
|| __TEXT.__text _DNDSPowerLogFocusStatusChangeEvent
|| __TEXT.__text _DNDSPowerLogFocusUpdateReasonForDNDStateUpdateReason
|| __TEXT.__text _DNDSPowerLogFocusUpdateSourceForDNDStateUpdateSource
|| __TEXT.__text _DNDSPowerLogInterruptionSuppressionForDNDInterruptionSuppression
|| __TEXT.__text _DNDSRegisterLogging
|| __TEXT.__text _DNDSRegisterSysdiagnose
|| __TEXT.__text _DNDSRegisterSysdiagnoseDataProvider
|| __TEXT.__text _DNDSResolutionOutcomeToString
|| __TEXT.__text _DNDSRunServer
|| __TEXT.__text _DNDSStringFromLostModeState
|| __TEXT.__text _DNDSStringFromPairedDeviceClass
|| __TEXT.__text _DNDSStringFromSyncServiceType
|| __TEXT.__text _DNDSStringFromUILockState
|| __TEXT.__text _DNDSSyncEngineStateIsAvailable
|| __TEXT.__text _DNDSSyncEngineStateIsEnabled
|| __TEXT.__text _DNDSSyncEngineStatePreferenceIsEnabled
|| __TEXT.__text _DNDSUnregisterSysdiagnoseDataProvider
|| __TEXT.__text __DNDSRequestRadar
__ AvailabilityKit: _AKAvailabilityStatusTypeIdentifier
__ AvailabilityKit: _OBJC_CLASS_$_AKAvailability
__ AvailabilityKit: _OBJC_CLASS_$_AKAvailabilityInvitation
__ BaseBoard: _BSCurrentUserDirectory
__ BaseBoard: _BSDispatchQueueAssertNot
__ BaseBoard: _BSDispatchQueueCreateWithQualityOfService
__ BaseBoard: _BSExecutablePathForPID
__ BaseBoard: _BSPIDForAuditToken
__ BaseBoard: _BSSystemRootDirectory
__ BaseBoard: _OBJC_CLASS_$_BSPlatform
__ BaseBoard: __BSSafeCast
__ BiomeStreams: _OBJC_CLASS_$_BMBiomeScheduler
__ BiomeStreams: _OBJC_CLASS_$_BMInferredModeStream
__ BiomeStreams: _OBJC_CLASS_$_BMStreams
__ BiomeStreams: _OBJC_CLASS_$_BMUserFocusComputedModeEvent
__ BiomeStreams: _OBJC_CLASS_$_BMUserFocusComputedModeStream
__ BoardServices: _OBJC_CLASS_$_BSServiceConnection
__ BoardServices: _OBJC_CLASS_$_BSServiceConnectionListener
__ BoardServices: _OBJC_CLASS_$_BSServiceQuality
__ BoardServices: _OBJC_CLASS_$_BSServicesConfiguration
__ CarKit: _CARAutomaticDNDCarPlayActivationChangedNotification
__ CarKit: _CARAutomaticDNDTriggeringPreferenceChangedNotification
__ CarKit: _OBJC_CLASS_$_CARAutomaticDNDStatus
__ Categories: _CTOSPlatformiOS
__ Categories: _CTOSPlatformmacOS
__ Categories: _OBJC_CLASS_$_CTCategories
__ CloudKit: _CKAccountChangedNotification
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKRecordChangedErrorClientRecordKey
__ CloudKit: _CKRecordChangedErrorServerRecordKey
__ CloudKit: _CKStringFromAccountStatus
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKSyncEngine
__ CloudKit: _OBJC_CLASS_$_CKSyncEngineConfiguration
__ Contacts: _CNContactCallAlertKey
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactFamilyNameKey
__ Contacts: _CNContactGivenNameKey
__ Contacts: _CNContactIdentifierKey
__ Contacts: _CNContactLinkIdentifierKey
__ Contacts: _CNContactMiddleNameKey
__ Contacts: _CNContactNicknameKey
__ Contacts: _CNContactOrganizationNameKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _OBJC_CLASS_$_CNChangeHistoryFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNFavorites
__ Contacts: _OBJC_CLASS_$_CNGroup
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFBundleCopyInfoDictionaryInDirectory
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterPostNotification
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFBundleCopyBundleURLForExecutableURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLCircularRegion
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ DoNotDisturb: _DNDCompatibilityVersionToString
__ DoNotDisturb: _DNDDefaultModeIdentifier
__ DoNotDisturb: _DNDDefaultScheduleIdentifier
__ DoNotDisturb: _DNDEnabledSettingToString
__ DoNotDisturb: _DNDEnumerateDaysOfWeekStartingOnDay
__ DoNotDisturb: _DNDErrorDomain
__ DoNotDisturb: _DNDInterruptionSuppressionToString
__ DoNotDisturb: _DNDMeDeviceStatusToString
__ DoNotDisturb: _DNDModeAssertionInvalidationReasonOverrideToString
__ DoNotDisturb: _DNDModeAssertionInvalidationReasonToString
__ DoNotDisturb: _DNDMostRestrictiveInterruptionSuppression
__ DoNotDisturb: _DNDPlatformForCurrentDevice
__ DoNotDisturb: _DNDRemoteAvailabilityServiceServerInterface
__ DoNotDisturb: _DNDRemoteMonitorServerInterface
__ DoNotDisturb: _DNDRemoteServiceServerInterface
__ DoNotDisturb: _DNDResolutionReasonToString
__ DoNotDisturb: _DNDResolvedBedtimeBehaviorEnabledSetting
__ DoNotDisturb: _DNDResolvedImmediateBypassEventSourceType
__ DoNotDisturb: _DNDResolvedImpactsAvailabilitySetting
__ DoNotDisturb: _DNDResolvedInterruptionBehaviorSetting
__ DoNotDisturb: _DNDResolvedModeAssertionInvalidationReason
__ DoNotDisturb: _DNDResolvedRepeatEventSourceBehaviorEnabledSetting
__ DoNotDisturb: _DNDResolvedScheduleEnabledSetting
__ DoNotDisturb: _DNDSettingsBedtimeModeIdentifier
__ DoNotDisturb: _DNDStateUpdateReasonToString
__ DoNotDisturb: _DNDStateUpdateSourceToString
__ DoNotDisturb: _DNDStringFromBreakthroughUrgency
__ DoNotDisturb: _DNDStringFromClientEventType
__ DoNotDisturb: _DNDStringFromClientEventUrgency
__ DoNotDisturb: _DNDStringFromConfigurationType
__ DoNotDisturb: _DNDStringFromInterruptionBehaviorSetting
__ DoNotDisturb: _DNDSystemClientIdentifier
__ DoNotDisturb: _DNDWeekdaysFromDay
__ DoNotDisturb: _DNDWeekdaysUnset
__ DoNotDisturb: _NSStringFromDNDPlatform
__ DoNotDisturb: _OBJC_CLASS_$_DNDAppInfo
__ DoNotDisturb: _OBJC_CLASS_$_DNDApplicationConfiguration
__ DoNotDisturb: _OBJC_CLASS_$_DNDApplicationIdentifier
__ DoNotDisturb: _OBJC_CLASS_$_DNDBehaviorSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDBypassSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDClientEventBehavior
__ DoNotDisturb: _OBJC_CLASS_$_DNDConfiguration
__ DoNotDisturb: _OBJC_CLASS_$_DNDContact
__ DoNotDisturb: _OBJC_CLASS_$_DNDContactHandle
__ DoNotDisturb: _OBJC_CLASS_$_DNDDevice
__ DoNotDisturb: _OBJC_CLASS_$_DNDDiffBuilder
__ DoNotDisturb: _OBJC_CLASS_$_DNDMeDeviceState
__ DoNotDisturb: _OBJC_CLASS_$_DNDMode
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertion
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionCalendarEventLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionCurrentLocationLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionDateIntervalLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionDetails
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionExplicitRegionLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionInvalidation
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionScheduleLifetime
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeAssertionSource
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfiguration
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationAppForegroundTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationDrivingTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationGameControllerTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationLocationTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationMindfulnessTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationScheduleTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationSleepingTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationSmartTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDModeConfigurationWorkoutTrigger
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableAppInfo
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableApplicationConfiguration
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableBehaviorSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableBypassSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableConfiguration
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableContact
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableContactHandle
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableModeAssertionDetails
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableModeAssertionInvalidationDetails
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableModeConfiguration
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableScheduleTime
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableScheduleTimePeriod
__ DoNotDisturb: _OBJC_CLASS_$_DNDMutableSenderConfiguration
__ DoNotDisturb: _OBJC_CLASS_$_DNDScheduleSettings
__ DoNotDisturb: _OBJC_CLASS_$_DNDSenderConfiguration
__ DoNotDisturb: _OBJC_CLASS_$_DNDState
__ DoNotDisturb: _OBJC_CLASS_$_DNDStateModeAssertionMetadata
__ DoNotDisturb: _OBJC_CLASS_$_DNDStateUpdate
__ DoNotDisturb: _OBJC_METACLASS_$_DNDScheduleSettings
__ EventKit: _EKEventStoreChangedNotification
__ EventKit: _OBJC_CLASS_$_EKEventStore
__ FMF: _FMFDevicesChangedNotification
__ FMF: _FMFMeDeviceChangedNotification
__ FMF: _OBJC_CLASS_$_FMFSession
__ FindMyDevice: _OBJC_CLASS_$_FMDFMIPManager
__ FindMyDevice: _kLostModeChangedNotification
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLCache
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLRequest
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_METACLASS_$_NSPredicate
__ FrontBoardServices: _FBSDisplayLayoutElementLockScreenIdentifier
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitor
__ FrontBoardServices: _OBJC_CLASS_$_FBSDisplayLayoutMonitorConfiguration
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSSendMessageOptionQueueOneIdentifierKey
__ IDS: _OBJC_CLASS_$_IDSDevice
__ IDS: _OBJC_CLASS_$_IDSServerBag
__ IDS: _OBJC_CLASS_$_IDSService
__ Intents: _OBJC_CLASS_$_INAppInfo
__ Intents: _OBJC_CLASS_$_INFocusStatus
__ Intents: _OBJC_CLASS_$_INShareFocusStatusIntent
__ IntentsCore: _OBJC_CLASS_$_INCExtensionConnection
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBEventsRegister
__ MobileKeyBag: _MKBEventsUnregister
__ MobileKeyBag: _MKBGetDeviceLockState
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSDomainAccessor
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ NanoRegistry: _NRDevicePropertyLocalPairingDataStorePath
__ NanoRegistry: _NRDevicePropertyName
__ NanoRegistry: _NRDevicePropertyPairingID
__ NanoRegistry: _NRPairedDeviceRegistryPairedDeviceDidChangeVersionDarwinNotification
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ PowerLog: _PLLogRegisteredEvent
__ Sleep: _HKSPSleepModeIdentifier
__ StatusKit: _OBJC_CLASS_$_SKHandle
__ StatusKit: _OBJC_CLASS_$_SKStatusPublishingService
__ SystemStatus: _OBJC_CLASS_$_STFocusStatusDomainPublisher
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _TCCAccessCopyBundleIdentifiersForService
__ TCC: _kTCCServiceFocusStatus
__ UserNotificationsSettings: _OBJC_CLASS_$_UNNotificationSettingsCenter
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_data_replace
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_event_key_name
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_qos_class_fallback
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dispatch_workloop_create_inactive
__ libSystem.B.dylib: _dispatch_workloop_set_autorelease_frequency
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_not_owner
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_trylock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _signal
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_date
__ libSystem.B.dylib: _xpc_set_event
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libnetwork.dylib: _nw_path_create_evaluator_for_endpoint
__ libnetwork.dylib: _nw_path_evaluator_copy_path
__ libnetwork.dylib: _nw_path_get_status
__ libnetwork.dylib: _nw_path_monitor_cancel
__ libnetwork.dylib: _nw_path_monitor_create
__ libnetwork.dylib: _nw_path_monitor_set_queue
__ libnetwork.dylib: _nw_path_monitor_set_update_handler
__ libnetwork.dylib: _nw_path_monitor_start
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
DNDSIDSSyncEngine : NSObject <DNDSSyncServiceDelegate, DNDSKeybagStateObserver, DNDSSysdiagnoseDataProvider, DNDSIDSSyncEngineSynchronizing>
 @property  unsigned long pairSyncState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // instance methods
  -[DNDSIDSSyncEngine sysdiagnoseDataIdentifier]
  -[DNDSIDSSyncEngine sync]
  -[DNDSIDSSyncEngine _queue_handleAckMessage:fromPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngine initWithMetadataStore:syncService:keybag:]
  -[DNDSIDSSyncEngine _queue_restartInflightExpirationTimer]
  -[DNDSIDSSyncEngine syncService:didSendWithRequestIdentifier:withSuccess:error:]
  -[DNDSIDSSyncEngine validate]
  -[DNDSIDSSyncEngine _queue_dataSourceForZone:]
  -[DNDSIDSSyncEngine sysdiagnoseDataForDate:redacted:]
  -[DNDSIDSSyncEngine syncService:didReceiveMessage:withVersionNumber:messageType:fromDeviceIdentifier:]
  -[DNDSIDSSyncEngine .cxx_destruct]
  -[DNDSIDSSyncEngine _queue_handleResyncMessage:fromPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngine _queue_removeAllInflightMetadata]
  -[DNDSIDSSyncEngine _queue_syncDataSourcesToDeviceWithIdentifier:]
  -[DNDSIDSSyncEngine _queue_startRetryTimer]
  -[DNDSIDSSyncEngine _queue_sendResyncMessageToDeviceWithIdentifier:]
  -[DNDSIDSSyncEngine _queue_earliestExpirationTimeSinceNowForInflightMetadata]
  -[DNDSIDSSyncEngine initWithMetadataStore:syncService:keybag:role:syncState:inflightExpirationTime:]
  -[DNDSIDSSyncEngine _queue_startInflightExpirationTimer]
  -[DNDSIDSSyncEngine _queue_sendUnlockMessageToDeviceWithIdentifier:]
  -[DNDSIDSSyncEngine _queue_handleMessage:fromPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngine _queue_removeAllInflightMetadataWithExpirationDate:]
  -[DNDSIDSSyncEngine setDidFireMetadataExpirationTimer:]
  -[DNDSIDSSyncEngine _queue_validate]
  -[DNDSIDSSyncEngine _queue_resetRetryTimer]
  -[DNDSIDSSyncEngine setDataSource:forZone:]
  -[DNDSIDSSyncEngine pairSyncState]
  -[DNDSIDSSyncEngine inflightMetadata]
  -[DNDSIDSSyncEngine syncService:shouldAcceptIncomingMessage:withVersionNumber:messageType:fromDeviceIdentifier:]
  -[DNDSIDSSyncEngine _queue_cancelRetryTimer]
  -[DNDSIDSSyncEngine _queue_handleReplaceMessage:fromPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngine _queue_sendAckWithMetadata:forAction:toDeviceWithIdentifier:]
  -[DNDSIDSSyncEngine _queue_sendModifiedRecordIDs:deletedRecordIDs:toDeviceWithIdentifier:]
  -[DNDSIDSSyncEngine setDidReceiveUnlockMessage:]
  -[DNDSIDSSyncEngine _queue_handleUpdateMessage:fromPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngine _queue_cancelInflightExpirationTimer]
  -[DNDSIDSSyncEngine _queue_handleUnlockMessage:fromPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngine setPairedDevice:syncEnabled:]
  -[DNDSIDSSyncEngine addRecordIDsToSave:recordIDsToDelete:]
  -[DNDSIDSSyncEngine keybagDidUnlockForTheFirstTime:]


DNDSBehaviorSettingsRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSNumber *interruptionBehaviorSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSBehaviorSettingsRecord newWithDictionaryRepresentation:context:]
  +[DNDSBehaviorSettingsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSBehaviorSettingsRecord _recordWithEncodedInfo:error:]

  // instance methods
  -[DNDSBehaviorSettingsRecord dictionaryRepresentationWithContext:]
  -[DNDSBehaviorSettingsRecord interruptionBehaviorSetting]
  -[DNDSBehaviorSettingsRecord _initWithRecord:]
  -[DNDSBehaviorSettingsRecord .cxx_destruct]
  -[DNDSBehaviorSettingsRecord init]
  -[DNDSBehaviorSettingsRecord isEqual:]
  -[DNDSBehaviorSettingsRecord _initWithInterruptionBehaviorSetting:]
  -[DNDSBehaviorSettingsRecord mutableCopyWithZone:]
  -[DNDSBehaviorSettingsRecord copyWithZone:]


DNDSMutableBehaviorSettingsRecord : DNDSBehaviorSettingsRecord
 @property  NSNumber *interruptionBehaviorSetting

  // instance methods
  -[DNDSMutableBehaviorSettingsRecord setInterruptionBehaviorSetting:]
  -[DNDSMutableBehaviorSettingsRecord copyWithZone:]


DNDSJSONBackingStore : NSObject <DNDSSysdiagnoseDataProvider, DNDSBackingStore>
 @property  NSString *sysdiagnoseDataIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DNDSBackingStoreDelegate> *delegate

  // class methods
  +[DNDSJSONBackingStore dataWritingOptionsForSecurityClass:]

  // instance methods
  -[DNDSJSONBackingStore sysdiagnoseDataIdentifier]
  -[DNDSJSONBackingStore sysdiagnoseDataForDate:redacted:]
  -[DNDSJSONBackingStore readRecordDictionaryfromURL:withError:]
  -[DNDSJSONBackingStore .cxx_destruct]
  -[DNDSJSONBackingStore setDelegate:]
  -[DNDSJSONBackingStore writeRecord:writePartition:error:]
  -[DNDSJSONBackingStore writeRecord:error:]
  -[DNDSJSONBackingStore initWithRecordClass:fileURL:secureFileURL:versionNumber:securityClass:]
  -[DNDSJSONBackingStore delegate]
  -[DNDSJSONBackingStore dealloc]
  -[DNDSJSONBackingStore readRecordWithError:]
  -[DNDSJSONBackingStore writeRecordDictionary:withSecurityClass:toURL:error:]
  -[DNDSJSONBackingStore initWithRecordClass:fileURL:versionNumber:]


DNDSModeAssertionInvalidationRequest : NSObject <DNDSModernAssertionSourceResolution, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *UUID
 @property  DNDSModeAssertionInvalidationPredicate *predicate
 @property  NSDate *requestDate
 @property  DNDModeAssertionInvalidationDetails *details
 @property  DNDModeAssertionSource *source
 @property  unsigned long reason
 @property  unsigned long reasonOverride

  // class methods
  +[DNDSModeAssertionInvalidationRequest requestWithPredicate:requestDate:details:source:reason:reasonOverride:]
  +[DNDSModeAssertionInvalidationRequest requestWithPredicate:requestDate:source:reason:]

  // instance methods
  -[DNDSModeAssertionInvalidationRequest UUID]
  -[DNDSModeAssertionInvalidationRequest requestDate]
  -[DNDSModeAssertionInvalidationRequest predicate]
  -[DNDSModeAssertionInvalidationRequest .cxx_destruct]
  -[DNDSModeAssertionInvalidationRequest isEqual:]
  -[DNDSModeAssertionInvalidationRequest reasonOverride]
  -[DNDSModeAssertionInvalidationRequest reason]
  -[DNDSModeAssertionInvalidationRequest details]
  -[DNDSModeAssertionInvalidationRequest initWithUUID:predicate:requestDate:details:source:reason:reasonOverride:]
  -[DNDSModeAssertionInvalidationRequest resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:]
  -[DNDSModeAssertionInvalidationRequest copyWithZone:]
  -[DNDSModeAssertionInvalidationRequest source]


DNDSLifetimeMonitorResult : NSObject
 @property  NSArray *activeUUIDs
 @property  NSArray *expiredUUIDs

  // instance methods
  -[DNDSLifetimeMonitorResult .cxx_destruct]
  -[DNDSLifetimeMonitorResult expiredUUIDs]
  -[DNDSLifetimeMonitorResult initWithActiveUUIDs:expiredUUIDs:]
  -[DNDSLifetimeMonitorResult activeUUIDs]


DNDSBaseLifetimeMonitor : NSObject <DNDSSysdiagnoseDataProvider, DNDSLifetimeMonitor>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *sysdiagnoseDataIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *activeLifetimeAssertionUUIDs
 @property  <DNDSLifetimeMonitorDataSource> *dataSource
 @property  <DNDSLifetimeMonitorDelegate> *delegate

  // class methods
  +[DNDSBaseLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSBaseLifetimeMonitor sysdiagnoseDataIdentifier]
  -[DNDSBaseLifetimeMonitor sysdiagnoseDataForDate:redacted:]
  -[DNDSBaseLifetimeMonitor setDataSource:]
  -[DNDSBaseLifetimeMonitor .cxx_destruct]
  -[DNDSBaseLifetimeMonitor setDelegate:]
  -[DNDSBaseLifetimeMonitor dataSource]
  -[DNDSBaseLifetimeMonitor init]
  -[DNDSBaseLifetimeMonitor updateForModeAssertions:date:]
  -[DNDSBaseLifetimeMonitor delegate]
  -[DNDSBaseLifetimeMonitor queue]
  -[DNDSBaseLifetimeMonitor dealloc]
  -[DNDSBaseLifetimeMonitor activeLifetimeAssertionUUIDs]
  -[DNDSBaseLifetimeMonitor refreshMonitorForDate:]
  -[DNDSBaseLifetimeMonitor refreshMonitorFromQueueForDate:]


DNDSAppForegroundTriggerManager : NSObject <DNDSBiomeTriggerManager>
 @property  <DNDSAppForegroundTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSAppForegroundTriggerManager refresh]
  -[DNDSAppForegroundTriggerManager setDataSource:]
  -[DNDSAppForegroundTriggerManager .cxx_destruct]
  -[DNDSAppForegroundTriggerManager _coalescingQueue_resetCoalescingTimer]
  -[DNDSAppForegroundTriggerManager dataSource]
  -[DNDSAppForegroundTriggerManager init]
  -[DNDSAppForegroundTriggerManager _coalescingQueue_refreshWithTriggerConfiguration:]
  -[DNDSAppForegroundTriggerManager _coalescingQueue_coalesceWithTriggerConfiguration:event:]
  -[DNDSAppForegroundTriggerManager _configureAppForegroundTriggerWithConfiguration:]
  -[DNDSAppForegroundTriggerManager _refreshWithTriggerConfiguration:event:]
  -[DNDSAppForegroundTriggerManager _refreshIfNeccessaryForEvent:]


DNDSAppForegroundTriggerConfiguration : NSObject
  // instance methods
  -[DNDSAppForegroundTriggerConfiguration .cxx_destruct]
  -[DNDSAppForegroundTriggerConfiguration modeIdentifierForBundleIdentifier:]
  -[DNDSAppForegroundTriggerConfiguration addTriggerForModeWithIdentifier:onForegroundOfApp:]
  -[DNDSAppForegroundTriggerConfiguration init]
  -[DNDSAppForegroundTriggerConfiguration triggeringBundleIdentifiers]


DNDSEventBehaviorResolver : NSObject <DNDSSysdiagnoseDataProvider>
 @property  <DNDSEventBehaviorResolverDataSource> *dataSource
 @property  NSString *sysdiagnoseDataIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSEventBehaviorResolver sysdiagnoseDataIdentifier]
  -[DNDSEventBehaviorResolver resolveBehaviorForEventDetails:clientDetails:date:error:]
  -[DNDSEventBehaviorResolver sysdiagnoseDataForDate:redacted:]
  -[DNDSEventBehaviorResolver _queue_resolutionForModeWithConfiguration:eventDetails:clientDetails:activeModeUUID:date:error:]
  -[DNDSEventBehaviorResolver setDataSource:]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsFavorite:]
  -[DNDSEventBehaviorResolver .cxx_destruct]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsRepeat:clientDetails:date:]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsContact:inGroupWithIdentifier:]
  -[DNDSEventBehaviorResolver _queue_resolveOutcomeForEventSender:clientDetails:date:reason:]
  -[DNDSEventBehaviorResolver dataSource]
  -[DNDSEventBehaviorResolver _queue_resolveBehaviorForEventDetails:clientDetails:date:error:]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsEmergencyContact:]
  -[DNDSEventBehaviorResolver _queue_isBreakthroughAllowedForConfiguration:application:sender:urgency:eventType:threadIdentifier:notifyAnyway:reason:]
  -[DNDSEventBehaviorResolver _queue_adjustEventBehaviorResolutionForAuxiliaryState:]
  -[DNDSEventBehaviorResolver initWithModeRepository:contactStore:auxiliaryStateMonitor:]
  -[DNDSEventBehaviorResolver _queue_firstContactForPredicate:]
  -[DNDSEventBehaviorResolver _queue_shouldAdjustEventBehaviorForMirroring]
  -[DNDSEventBehaviorResolver _activeModeConfigurationForBehavior:]
  -[DNDSEventBehaviorResolver dealloc]
  -[DNDSEventBehaviorResolver _queue_isBreakthroughAllowedForSender:eventType:clientDetails:date:reason:]
  -[DNDSEventBehaviorResolver _legacyModeConfigurationForModeConfiguration:]
  -[DNDSEventBehaviorResolver _queue_eventSourceIsContact:]
  -[DNDSEventBehaviorResolver resolutionForConfiguration:eventDetails:clientDetails:date:error:]


DNDSMemoryCachedBackingStore : NSObject <DNDSBackingStoreDelegate, DNDSCachedBackingStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DNDSCachedBackingStoreDelegate> *delegate

  // instance methods
  -[DNDSMemoryCachedBackingStore .cxx_destruct]
  -[DNDSMemoryCachedBackingStore setDelegate:]
  -[DNDSMemoryCachedBackingStore backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSMemoryCachedBackingStore writeRecord:writePartition:error:]
  -[DNDSMemoryCachedBackingStore writeRecord:error:]
  -[DNDSMemoryCachedBackingStore purgeCache]
  -[DNDSMemoryCachedBackingStore delegate]
  -[DNDSMemoryCachedBackingStore initWithUnderlyingBackingStore:]
  -[DNDSMemoryCachedBackingStore readRecordWithError:]


DNDSRemoteAvailabilityServiceProvider : NSObject <BSServiceConnectionListenerDelegate, DNDRemoteAvailabilityServiceServerProtocol>
 @property  <DNDSRemoteAvailabilityServiceProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSRemoteAvailabilityServiceProvider _removeConnection:]
  -[DNDSRemoteAvailabilityServiceProvider listener:didReceiveConnection:withContext:]
  -[DNDSRemoteAvailabilityServiceProvider .cxx_destruct]
  -[DNDSRemoteAvailabilityServiceProvider initWithClientDetailsProvider:]
  -[DNDSRemoteAvailabilityServiceProvider getIsLocalUserAvailableWithRequestDetails:completionHandler:]
  -[DNDSRemoteAvailabilityServiceProvider setDelegate:]
  -[DNDSRemoteAvailabilityServiceProvider _addConnection:]
  -[DNDSRemoteAvailabilityServiceProvider delegate]
  -[DNDSRemoteAvailabilityServiceProvider resume]
  -[DNDSRemoteAvailabilityServiceProvider dealloc]
  -[DNDSRemoteAvailabilityServiceProvider invalidate]
  -[DNDSRemoteAvailabilityServiceProvider _handleClientConnectionInvalidated:]
  -[DNDSRemoteAvailabilityServiceProvider _handleClientConnectionInterrupted:]


DNDSBypassSettingsRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSNumber *immediateBypassEventSourceType
 @property  NSString *immediateBypassCNGroupIdentifier
 @property  NSNumber *repeatEventSourceBehaviorEnabledSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSBypassSettingsRecord newWithDictionaryRepresentation:context:]
  +[DNDSBypassSettingsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSBypassSettingsRecord recordForLegacyPrivilegedSenderType:legacyAddressBookID:]
  +[DNDSBypassSettingsRecord _recordWithEncodedInfo:error:]

  // instance methods
  -[DNDSBypassSettingsRecord immediateBypassEventSourceType]
  -[DNDSBypassSettingsRecord dictionaryRepresentationWithContext:]
  -[DNDSBypassSettingsRecord _initWithRecord:]
  -[DNDSBypassSettingsRecord .cxx_destruct]
  -[DNDSBypassSettingsRecord init]
  -[DNDSBypassSettingsRecord legacyPrivilegedSenderType]
  -[DNDSBypassSettingsRecord isEqual:]
  -[DNDSBypassSettingsRecord _initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:]
  -[DNDSBypassSettingsRecord repeatEventSourceBehaviorEnabledSetting]
  -[DNDSBypassSettingsRecord mutableCopyWithZone:]
  -[DNDSBypassSettingsRecord immediateBypassCNGroupIdentifier]
  -[DNDSBypassSettingsRecord copyWithZone:]


DNDSMutableBypassSettingsRecord : DNDSBypassSettingsRecord
 @property  NSNumber *immediateBypassEventSourceType
 @property  NSString *immediateBypassCNGroupIdentifier
 @property  NSNumber *repeatEventSourceBehaviorEnabledSetting

  // instance methods
  -[DNDSMutableBypassSettingsRecord setRepeatEventSourceBehaviorEnabledSetting:]
  -[DNDSMutableBypassSettingsRecord setImmediateBypassCNGroupIdentifier:]
  -[DNDSMutableBypassSettingsRecord copyWithZone:]
  -[DNDSMutableBypassSettingsRecord setImmediateBypassEventSourceType:]


DNDSContactMonitorChangeCollector : NSObject <CNChangeHistoryEventVisitor>
 @property  NSArray *updatedContacts
 @property  NSArray *deletedContactIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSContactMonitorChangeCollector visitDeleteContactEvent:]
  -[DNDSContactMonitorChangeCollector .cxx_destruct]
  -[DNDSContactMonitorChangeCollector visitDropEverythingEvent:]
  -[DNDSContactMonitorChangeCollector visitUpdateContactEvent:]
  -[DNDSContactMonitorChangeCollector updatedContacts]
  -[DNDSContactMonitorChangeCollector visitAddContactEvent:]
  -[DNDSContactMonitorChangeCollector deletedContactIdentifiers]
  -[DNDSContactMonitorChangeCollector initWithMonitoredContactIdentifiers:]


DNDSContactMonitor : NSObject <DNDSContactMonitoring>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSContactMonitor removeListener:]
  -[DNDSContactMonitor .cxx_destruct]
  -[DNDSContactMonitor _fetchContactsForMonitoredContacts:handler:]
  -[DNDSContactMonitor _lock_monitoredContactsByContactHistoryToken]
  -[DNDSContactMonitor _fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:]
  -[DNDSContactMonitor _updateContactsWithoutIdentifiers]
  -[DNDSContactMonitor _lock_listenersByContactHistoryToken]
  -[DNDSContactMonitor addListener:]
  -[DNDSContactMonitor _contactsWithCNContacts:]
  -[DNDSContactMonitor _fetchContactHistoryWithToken:monitoredContacts:handler:]
  -[DNDSContactMonitor _contactStoreChanged:]
  -[DNDSContactMonitor initWithContactStore:contactProvider:]
  -[DNDSContactMonitor _updateContactsWithIdentifiers]
  -[DNDSContactMonitor _queue_fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:]


DNDSCalendarEventLifetimeMonitor : DNDSBaseLifetimeMonitor
  // class methods
  +[DNDSCalendarEventLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSCalendarEventLifetimeMonitor .cxx_destruct]
  -[DNDSCalendarEventLifetimeMonitor _eventStoreCreatingIfNeeded]
  -[DNDSCalendarEventLifetimeMonitor _eventForCalendarEventLifetime:assertionStartDate:]
  -[DNDSCalendarEventLifetimeMonitor setDelegate:]
  -[DNDSCalendarEventLifetimeMonitor activeDateIntervalForCalendarEventLifetime:assertionStartDate:]
  -[DNDSCalendarEventLifetimeMonitor init]
  -[DNDSCalendarEventLifetimeMonitor _calendarEventStoreChangedWithNotification:]
  -[DNDSCalendarEventLifetimeMonitor updateForModeAssertions:date:]
  -[DNDSCalendarEventLifetimeMonitor _eventStore]


DNDSDateIntervalLifetimeMonitor : DNDSBaseLifetimeMonitor
  // class methods
  +[DNDSDateIntervalLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSDateIntervalLifetimeMonitor .cxx_destruct]
  -[DNDSDateIntervalLifetimeMonitor setDelegate:]
  -[DNDSDateIntervalLifetimeMonitor updateForModeAssertions:date:]


DNDSDefaultLifetimeMonitor : DNDSBaseLifetimeMonitor
  // class methods
  +[DNDSDefaultLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSDefaultLifetimeMonitor updateForModeAssertions:date:]


DNDSUserAvailabilityCoordinator : NSObject
  // instance methods
  -[DNDSUserAvailabilityCoordinator suspend]
  -[DNDSUserAvailabilityCoordinator _publishStatusKitAvailability:activityIdentifier:local:scheduled:date:forced:completion:]
  -[DNDSUserAvailabilityCoordinator .cxx_destruct]
  -[DNDSUserAvailabilityCoordinator publishStatusKitAvailabilityForced:override:error:]
  -[DNDSUserAvailabilityCoordinator isTCCUserAvailabilityGrantedForBundleId:]
  -[DNDSUserAvailabilityCoordinator initWithConfigurationProvider:stateProvider:userAvailabilityTCCProvider:]
  -[DNDSUserAvailabilityCoordinator _publishStatusKitCurrentAvailabilityForced:override:completionHandler:]
  -[DNDSUserAvailabilityCoordinator allowedModesForContactHandle:withError:]
  -[DNDSUserAvailabilityCoordinator isLocalUserAvailableForApplicationIdentifier:withError:]
  -[DNDSUserAvailabilityCoordinator _publishStatusKitAvailability:activityIdentifier:forced:completion:]
  -[DNDSUserAvailabilityCoordinator _queue_notifyIntentExtensionsOfUserAvailability:applicationIdentifiers:completionHandler:]
  -[DNDSUserAvailabilityCoordinator sendStatusKitInvitationsForContacts:completionHandler:]
  -[DNDSUserAvailabilityCoordinator resume]
  -[DNDSUserAvailabilityCoordinator initWithConfigurationProvider:stateProvider:]
  -[DNDSUserAvailabilityCoordinator coordinateUserAvailability:fromConfiguration:toConfiguration:completionHandler:]
  -[DNDSUserAvailabilityCoordinator _isLocalUserAvailableForAppId:modeIdentifier:withError:]
  -[DNDSUserAvailabilityCoordinator _entitlementRecordForApplicationRecord:]
  -[DNDSUserAvailabilityCoordinator _queue_updateAvailabilityKit:fromConfiguration:toConfiguration:completionHandler:]
  -[DNDSUserAvailabilityCoordinator userAvailabilityInActiveModeForContactHandle:withError:]
  -[DNDSUserAvailabilityCoordinator publishStatusKitAvailabilityReturningError:]
  -[DNDSUserAvailabilityCoordinator _isTCCUserAvailabilityGrantedForMessages]
  -[DNDSUserAvailabilityCoordinator publishStatusKitAvailabilityForced:error:]


DNDSUserAvailabilityPublishResult : NSObject
 @property  NSString *identifier
 @property  AKAvailability *availability

  // instance methods
  -[DNDSUserAvailabilityPublishResult .cxx_destruct]
  -[DNDSUserAvailabilityPublishResult isEqual:]
  -[DNDSUserAvailabilityPublishResult availability]
  -[DNDSUserAvailabilityPublishResult identifier]
  -[DNDSUserAvailabilityPublishResult initWithIdentifier:availability:]


DNDSAvailabilityInvitationRequest : NSObject
 @property  NSArray *handles
 @property  AKAvailabilityInvitation *invitation

  // instance methods
  -[DNDSAvailabilityInvitationRequest .cxx_destruct]
  -[DNDSAvailabilityInvitationRequest invitation]
  -[DNDSAvailabilityInvitationRequest isEqual:]
  -[DNDSAvailabilityInvitationRequest handles]
  -[DNDSAvailabilityInvitationRequest initWithHandles:invitation:]


_DNDSUserAvailabilityTCCProvider : NSObject <DNDSUserAvailabilityTCCProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_DNDSUserAvailabilityTCCProvider userAvailabilityTCCApprovedBundleIds]


DNDSContactProvider : NSObject <DNDSContactProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSContactProvider sharedContactStore]

  // instance methods
  -[DNDSContactProvider .cxx_destruct]
  -[DNDSContactProvider init]
  -[DNDSContactProvider contactForContact:]
  -[DNDSContactProvider _bestMatchForContact:inContacts:]


DNDSLocationLifetimeMonitor : NSObject <CLLocationManagerDelegate, DNDSAggregateLocationLifetimeMonitor, DNDSMeDeviceServiceListener, DNDSLifetimeMonitor>
 @property  <DNDSLocationLifetimeMonitorDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSObject<OS_dispatch_queue> *queue
 @property  CLLocationManager *locationManager
 @property  <DNDSLifetimeMonitorDelegate> *delegate
 @property  unsigned long availableRegions
 @property  NSArray *activeLifetimeAssertionUUIDs

  // instance methods
  -[DNDSLocationLifetimeMonitor locationManager:monitoringDidFailForRegion:withError:]
  -[DNDSLocationLifetimeMonitor setDataSource:]
  -[DNDSLocationLifetimeMonitor initWithMeDeviceService:]
  -[DNDSLocationLifetimeMonitor .cxx_destruct]
  -[DNDSLocationLifetimeMonitor locationManager]
  -[DNDSLocationLifetimeMonitor locationManager:didFailWithError:]
  -[DNDSLocationLifetimeMonitor setDelegate:]
  -[DNDSLocationLifetimeMonitor dataSource]
  -[DNDSLocationLifetimeMonitor locationManager:didUpdateLocations:]
  -[DNDSLocationLifetimeMonitor _queue_refreshMonitorForDate:]
  -[DNDSLocationLifetimeMonitor locationManager:didDetermineState:forRegion:]
  -[DNDSLocationLifetimeMonitor delegate]
  -[DNDSLocationLifetimeMonitor queue]
  -[DNDSLocationLifetimeMonitor activeLifetimeAssertionUUIDs]
  -[DNDSLocationLifetimeMonitor refreshMonitorForDate:]
  -[DNDSLocationLifetimeMonitor meDeviceService:didReceiveMeDeviceStateUpdate:]
  -[DNDSLocationLifetimeMonitor availableRegions]


DNDSExplicitRegionLocationLifetimeMonitor : NSObject <DNDSLifetimeMonitor, CLLocationManagerDelegate>
 @property  <DNDSAggregateLocationLifetimeMonitor> *aggregateMonitor
 @property  NSArray *activeLifetimeAssertionUUIDs
 @property  <DNDSLifetimeMonitorDataSource> *dataSource
 @property  <DNDSLifetimeMonitorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSExplicitRegionLocationLifetimeMonitor locationManager:monitoringDidFailForRegion:withError:]
  -[DNDSExplicitRegionLocationLifetimeMonitor setDataSource:]
  -[DNDSExplicitRegionLocationLifetimeMonitor .cxx_destruct]
  -[DNDSExplicitRegionLocationLifetimeMonitor locationManager:didFailWithError:]
  -[DNDSExplicitRegionLocationLifetimeMonitor setDelegate:]
  -[DNDSExplicitRegionLocationLifetimeMonitor _queue_invalidateAssertionOnExitFromRegion:]
  -[DNDSExplicitRegionLocationLifetimeMonitor dataSource]
  -[DNDSExplicitRegionLocationLifetimeMonitor aggregateMonitor]
  -[DNDSExplicitRegionLocationLifetimeMonitor initWithAggregateMonitor:]
  -[DNDSExplicitRegionLocationLifetimeMonitor _queue_refreshMonitor]
  -[DNDSExplicitRegionLocationLifetimeMonitor _saveDataToBackingStoreWithError:]
  -[DNDSExplicitRegionLocationLifetimeMonitor _queue_locationMonitorClientIdentifierForModeIdentifier:region:]
  -[DNDSExplicitRegionLocationLifetimeMonitor setAggregateMonitor:]
  -[DNDSExplicitRegionLocationLifetimeMonitor locationManager:didDetermineState:forRegion:]
  -[DNDSExplicitRegionLocationLifetimeMonitor delegate]
  -[DNDSExplicitRegionLocationLifetimeMonitor _queue_stopMonitoringForRegion:]
  -[DNDSExplicitRegionLocationLifetimeMonitor _queue_takeAssertionOnEntryIntoRegion:]
  -[DNDSExplicitRegionLocationLifetimeMonitor _queue_startMonitoringForRegion:]
  -[DNDSExplicitRegionLocationLifetimeMonitor _loadDataFromBackingStore]
  -[DNDSExplicitRegionLocationLifetimeMonitor activeLifetimeAssertionUUIDs]
  -[DNDSExplicitRegionLocationLifetimeMonitor refreshMonitorForDate:]
  -[DNDSExplicitRegionLocationLifetimeMonitor _queue_resolveEnteredRegionIdentifiersWithAssertionRegionIdentifiers:]


DNDSLocationTriggerConfiguration : NSObject
  // class methods
  +[DNDSLocationTriggerConfiguration emptyConfiguration]

  // instance methods
  -[DNDSLocationTriggerConfiguration regions]
  -[DNDSLocationTriggerConfiguration .cxx_destruct]
  -[DNDSLocationTriggerConfiguration addTriggerForModeWithIdentifier:forRegion:]
  -[DNDSLocationTriggerConfiguration init]
  -[DNDSLocationTriggerConfiguration modeIdentifierForRegion:]
  -[DNDSLocationTriggerConfiguration regionForRegionIdentifier:]
  -[DNDSLocationTriggerConfiguration regionIdentifiers]


DNDSExplicitRegionStore : NSObject <NSCopying, NSMutableCopying>
 @property  NSSet *enteredRegionIdentifiersPendingExit

  // class methods
  +[DNDSExplicitRegionStore newWithDictionaryRepresentation:context:]

  // instance methods
  -[DNDSExplicitRegionStore dictionaryRepresentationWithContext:]
  -[DNDSExplicitRegionStore .cxx_destruct]
  -[DNDSExplicitRegionStore _initWithStore:]
  -[DNDSExplicitRegionStore init]
  -[DNDSExplicitRegionStore isEqual:]
  -[DNDSExplicitRegionStore mutableCopyWithZone:]
  -[DNDSExplicitRegionStore copyWithZone:]
  -[DNDSExplicitRegionStore enteredRegionIdentifiersPendingExit]
  -[DNDSExplicitRegionStore _initWithEnteredRegionIdentifiersPendingExit:]


DNDSMutableExplicitRegionStore : DNDSExplicitRegionStore
 @property  NSSet *enteredRegionIdentifiersPendingExit

  // instance methods
  -[DNDSMutableExplicitRegionStore copyWithZone:]
  -[DNDSMutableExplicitRegionStore setEnteredRegionIdentifiersPendingExit:]


DNDSUntilExitLocationLifetimeMonitor : NSObject <DNDSLifetimeMonitor, CLLocationManagerDelegate>
 @property  <DNDSAggregateLocationLifetimeMonitor> *aggregateMonitor
 @property  BOOL hasCurrentRegion
 @property  NSArray *activeLifetimeAssertionUUIDs
 @property  <DNDSLifetimeMonitorDataSource> *dataSource
 @property  <DNDSLifetimeMonitorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSUntilExitLocationLifetimeMonitor locationManager:monitoringDidFailForRegion:withError:]
  -[DNDSUntilExitLocationLifetimeMonitor _queue_geofenceRegion:]
  -[DNDSUntilExitLocationLifetimeMonitor setDataSource:]
  -[DNDSUntilExitLocationLifetimeMonitor .cxx_destruct]
  -[DNDSUntilExitLocationLifetimeMonitor hasCurrentRegion]
  -[DNDSUntilExitLocationLifetimeMonitor locationManager:didFailWithError:]
  -[DNDSUntilExitLocationLifetimeMonitor setDelegate:]
  -[DNDSUntilExitLocationLifetimeMonitor _queue_sendExpiryEventForAllLocationAssertions]
  -[DNDSUntilExitLocationLifetimeMonitor dataSource]
  -[DNDSUntilExitLocationLifetimeMonitor _queue_stopMonitoringCurrentLocation]
  -[DNDSUntilExitLocationLifetimeMonitor aggregateMonitor]
  -[DNDSUntilExitLocationLifetimeMonitor initWithAggregateMonitor:]
  -[DNDSUntilExitLocationLifetimeMonitor _queue_refreshMonitor]
  -[DNDSUntilExitLocationLifetimeMonitor _saveDataToBackingStoreWithError:]
  -[DNDSUntilExitLocationLifetimeMonitor locationManager:didUpdateLocations:]
  -[DNDSUntilExitLocationLifetimeMonitor _queue_beginMonitoringCurrentLocation]
  -[DNDSUntilExitLocationLifetimeMonitor setAggregateMonitor:]
  -[DNDSUntilExitLocationLifetimeMonitor locationManager:didDetermineState:forRegion:]
  -[DNDSUntilExitLocationLifetimeMonitor delegate]
  -[DNDSUntilExitLocationLifetimeMonitor _queue_geofenceLocation:]
  -[DNDSUntilExitLocationLifetimeMonitor _loadDataFromBackingStore]
  -[DNDSUntilExitLocationLifetimeMonitor activeLifetimeAssertionUUIDs]
  -[DNDSUntilExitLocationLifetimeMonitor refreshMonitorForDate:]


DNDSUntilExitRegionStore : NSObject <NSCopying, NSMutableCopying>
 @property  NSArray *activeLifetimeAssertionUUIDs
 @property  CLRegion *currentRegion
 @property  NSNumber *regionEntered
 @property  NSNumber *hasActiveLifetimes

  // class methods
  +[DNDSUntilExitRegionStore newWithDictionaryRepresentation:context:]

  // instance methods
  -[DNDSUntilExitRegionStore dictionaryRepresentationWithContext:]
  -[DNDSUntilExitRegionStore .cxx_destruct]
  -[DNDSUntilExitRegionStore _initWithStore:]
  -[DNDSUntilExitRegionStore init]
  -[DNDSUntilExitRegionStore isEqual:]
  -[DNDSUntilExitRegionStore currentRegion]
  -[DNDSUntilExitRegionStore mutableCopyWithZone:]
  -[DNDSUntilExitRegionStore hasActiveLifetimes]
  -[DNDSUntilExitRegionStore copyWithZone:]
  -[DNDSUntilExitRegionStore regionEntered]
  -[DNDSUntilExitRegionStore activeLifetimeAssertionUUIDs]
  -[DNDSUntilExitRegionStore _initWithActiveLifetimeAssertionUUIDs:currentRegion:regionEntered:]


DNDSMutableUntilExitRegionStore : DNDSUntilExitRegionStore
 @property  NSArray *activeLifetimeAssertionUUIDs
 @property  CLRegion *currentRegion
 @property  NSNumber *regionEntered
 @property  NSNumber *hasActiveLifetimes

  // instance methods
  -[DNDSMutableUntilExitRegionStore setHasActiveLifetimes:]
  -[DNDSMutableUntilExitRegionStore copyWithZone:]
  -[DNDSMutableUntilExitRegionStore setActiveLifetimeAssertionUUIDs:]
  -[DNDSMutableUntilExitRegionStore setCurrentRegion:]
  -[DNDSMutableUntilExitRegionStore setRegionEntered:]


DNDSIDSServerBagValues : NSObject
  // class methods
  +[DNDSIDSServerBagValues _numberForKey:]
  +[DNDSIDSServerBagValues resolvedScheduledActivityUpdateFuzzMilliseconds]
  +[DNDSIDSServerBagValues resolvedActivityUpdateDisabled]
  +[DNDSIDSServerBagValues resolvedActivityUpdateCoalescingSeconds]


DNDSScheduleSettingsRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSNumber *lastUpdatedTimestamp
 @property  NSNumber *scheduleEnabledSetting
 @property  NSNumber *timePeriodStartTimeHour
 @property  NSNumber *timePeriodStartTimeMinute
 @property  NSNumber *timePeriodEndTimeHour
 @property  NSNumber *timePeriodEndTimeMinute
 @property  NSNumber *timePeriodWeekdays
 @property  NSNumber *bedtimeBehaviorEnabledSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSScheduleSettingsRecord newWithDictionaryRepresentation:context:]
  +[DNDSScheduleSettingsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSScheduleSettingsRecord recordForLegacyBehaviorOverride:lastUpdated:]
  +[DNDSScheduleSettingsRecord _recordWithEncodedInfo:error:]

  // instance methods
  -[DNDSScheduleSettingsRecord scheduleEnabledSetting]
  -[DNDSScheduleSettingsRecord timePeriodEndTimeMinute]
  -[DNDSScheduleSettingsRecord dictionaryRepresentationWithContext:]
  -[DNDSScheduleSettingsRecord _initWithRecord:]
  -[DNDSScheduleSettingsRecord .cxx_destruct]
  -[DNDSScheduleSettingsRecord bedtimeBehaviorEnabledSetting]
  -[DNDSScheduleSettingsRecord timePeriodStartTimeMinute]
  -[DNDSScheduleSettingsRecord legacyBehaviorOverride]
  -[DNDSScheduleSettingsRecord init]
  -[DNDSScheduleSettingsRecord isEqual:]
  -[DNDSScheduleSettingsRecord lastUpdatedTimestamp]
  -[DNDSScheduleSettingsRecord _initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:timePeriodWeekdays:bedtimeBehaviorEnabledSetting:]
  -[DNDSScheduleSettingsRecord timePeriodStartTimeHour]
  -[DNDSScheduleSettingsRecord timePeriodEndTimeHour]
  -[DNDSScheduleSettingsRecord mutableCopyWithZone:]
  -[DNDSScheduleSettingsRecord copyWithZone:]
  -[DNDSScheduleSettingsRecord timePeriodWeekdays]


DNDSMutableScheduleSettingsRecord : DNDSScheduleSettingsRecord
 @property  NSNumber *lastUpdatedTimestamp
 @property  NSNumber *scheduleEnabledSetting
 @property  NSNumber *timePeriodStartTimeHour
 @property  NSNumber *timePeriodStartTimeMinute
 @property  NSNumber *timePeriodEndTimeHour
 @property  NSNumber *timePeriodEndTimeMinute
 @property  NSNumber *timePeriodWeekdays
 @property  NSNumber *bedtimeBehaviorEnabledSetting

  // instance methods
  -[DNDSMutableScheduleSettingsRecord setScheduleEnabledSetting:]
  -[DNDSMutableScheduleSettingsRecord setBedtimeBehaviorEnabledSetting:]
  -[DNDSMutableScheduleSettingsRecord setTimePeriodEndTimeHour:]
  -[DNDSMutableScheduleSettingsRecord setLastUpdatedTimestamp:]
  -[DNDSMutableScheduleSettingsRecord setTimePeriodEndTimeMinute:]
  -[DNDSMutableScheduleSettingsRecord setTimePeriodWeekdays:]
  -[DNDSMutableScheduleSettingsRecord setTimePeriodStartTimeHour:]
  -[DNDSMutableScheduleSettingsRecord copyWithZone:]
  -[DNDSMutableScheduleSettingsRecord setTimePeriodStartTimeMinute:]


DNDSMeDeviceStore : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSNumber *meDeviceStatus
 @property  NSString *meDeviceName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSMeDeviceStore newWithDictionaryRepresentation:context:]

  // instance methods
  -[DNDSMeDeviceStore dictionaryRepresentationWithContext:]
  -[DNDSMeDeviceStore .cxx_destruct]
  -[DNDSMeDeviceStore _initWithStore:]
  -[DNDSMeDeviceStore init]
  -[DNDSMeDeviceStore isEqual:]
  -[DNDSMeDeviceStore mutableCopyWithZone:]
  -[DNDSMeDeviceStore meDeviceName]
  -[DNDSMeDeviceStore copyWithZone:]
  -[DNDSMeDeviceStore meDeviceStatus]
  -[DNDSMeDeviceStore _initWithStatus:name:]


DNDSMutableMeDeviceStore : DNDSMeDeviceStore
 @property  NSNumber *meDeviceStatus
 @property  NSString *meDeviceName

  // instance methods
  -[DNDSMutableMeDeviceStore copyWithZone:]
  -[DNDSMutableMeDeviceStore setMeDeviceStatus:]
  -[DNDSMutableMeDeviceStore setMeDeviceName:]


DNDSPlaceholderModesRecord : NSObject <NSCopying, DNDSBackingStoreRecord>
 @property  NSArray *placeholderModes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSPlaceholderModesRecord newWithDictionaryRepresentation:context:]
  +[DNDSPlaceholderModesRecord backingStoreWithFileURL:]

  // instance methods
  -[DNDSPlaceholderModesRecord dictionaryRepresentationWithContext:]
  -[DNDSPlaceholderModesRecord _initWithRecord:]
  -[DNDSPlaceholderModesRecord .cxx_destruct]
  -[DNDSPlaceholderModesRecord init]
  -[DNDSPlaceholderModesRecord isEqual:]
  -[DNDSPlaceholderModesRecord copyWithZone:]
  -[DNDSPlaceholderModesRecord placeholderModes]
  -[DNDSPlaceholderModesRecord _initWithModePlaceholders:]


DNDSModeAssertionManagerUpdateContext : NSObject <DNDSModeAssertionUpdateContext>
 @property  DNDSModeAssertionStore *store
 @property  DNDSModeAssertionUpdateResult *updateResult
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSModeAssertionManagerUpdateContext .cxx_destruct]
  -[DNDSModeAssertionManagerUpdateContext _calculateUpdateResultForStore:previousStore:]
  -[DNDSModeAssertionManagerUpdateContext updateResult]
  -[DNDSModeAssertionManagerUpdateContext _resolveStore:]
  -[DNDSModeAssertionManagerUpdateContext modeAssertionsMatchingPredicate:]
  -[DNDSModeAssertionManagerUpdateContext modeAssertionInvalidationsMatchingPredicate:]
  -[DNDSModeAssertionManagerUpdateContext _cleanupStore:]
  -[DNDSModeAssertionManagerUpdateContext takeAssertionWithDetails:source:startDate:]
  -[DNDSModeAssertionManagerUpdateContext store]
  -[DNDSModeAssertionManagerUpdateContext takeAssertionWithUUID:details:source:startDate:]
  -[DNDSModeAssertionManagerUpdateContext initWithStore:clientDetailsProvider:]
  -[DNDSModeAssertionManagerUpdateContext invalidateAssertionsForRequest:]


DNDSModeDetails : NSObject <NSCopying>
 @property  unsigned long interruptionSuppression

  // class methods
  +[DNDSModeDetails detailsForInactiveDoNotDisturb]

  // instance methods
  -[DNDSModeDetails interruptionSuppression]
  -[DNDSModeDetails initWithInterruptionSuppression:]
  -[DNDSModeDetails isEqual:]
  -[DNDSModeDetails copyWithZone:]
  -[DNDSModeDetails restrictedDetailsWithDetails:]


DNDSModeConfigurationRecord : NSObject <NSCopying, NSMutableCopying, DNDSPartitionedBackingStoreRecord>
 @property  DNDSModeRecord *mode
 @property  DNDSConfigurationRecord *configuration
 @property  DNDSConfigurationSecureRecord *secureConfiguration
 @property  DNDSModeConfigurationTriggersRecord *triggers
 @property  unsigned long impactsAvailability
 @property  unsigned long dimsLockScreen
 @property  NSDate *created
 @property  NSDate *lastModified
 @property  BOOL automaticallyGenerated
 @property  BOOL hasSecureData
 @property  long long compatibilityVersion
 @property  long long ephemeralResolvedCompatibilityVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSModeConfigurationRecord newWithDictionaryRepresentation:context:]
  +[DNDSModeConfigurationRecord newWithDictionaryRepresentation:partitionedDictionaryRepresentation:context:]
  +[DNDSModeConfigurationRecord dictionaryRepresentationWithCKRecord:partitionType:]
  +[DNDSModeConfigurationRecord newWithCKRecord:]
  +[DNDSModeConfigurationRecord newWithDNDSIDSRecord:]

  // instance methods
  -[DNDSModeConfigurationRecord triggers]
  -[DNDSModeConfigurationRecord lastModified]
  -[DNDSModeConfigurationRecord populateDNDSIDSRecord:]
  -[DNDSModeConfigurationRecord dictionaryRepresentationWithContext:]
  -[DNDSModeConfigurationRecord configuration]
  -[DNDSModeConfigurationRecord _initWithRecord:]
  -[DNDSModeConfigurationRecord .cxx_destruct]
  -[DNDSModeConfigurationRecord compatibilityVersion]
  -[DNDSModeConfigurationRecord init]
  -[DNDSModeConfigurationRecord isEqual:]
  -[DNDSModeConfigurationRecord impactsAvailability]
  -[DNDSModeConfigurationRecord secureConfiguration]
  -[DNDSModeConfigurationRecord _initWithMode:configuration:secureConfiguration:triggers:impactsAvailability:dimsLockScreen:created:lastModified:automaticallyGenerated:compatibilityVersion:ephemeralResolvedCompatibilityVersion:hasSecureData:]
  -[DNDSModeConfigurationRecord dimsLockScreen]
  -[DNDSModeConfigurationRecord populateCKRecord:lastChanceRecord:]
  -[DNDSModeConfigurationRecord mutableCopyWithZone:]
  -[DNDSModeConfigurationRecord shortDescription]
  -[DNDSModeConfigurationRecord log:withMessage:]
  -[DNDSModeConfigurationRecord isAutomaticallyGenerated]
  -[DNDSModeConfigurationRecord hasSecureData]
  -[DNDSModeConfigurationRecord copyWithZone:]
  -[DNDSModeConfigurationRecord ephemeralResolvedCompatibilityVersion]
  -[DNDSModeConfigurationRecord mode]
  -[DNDSModeConfigurationRecord created]


DNDSMutableModeConfigurationRecord : DNDSModeConfigurationRecord
  // instance methods
  -[DNDSMutableModeConfigurationRecord setCompatibilityVersion:]
  -[DNDSMutableModeConfigurationRecord setTriggers:]
  -[DNDSMutableModeConfigurationRecord setEphemeralResolvedCompatibilityVersion:]
  -[DNDSMutableModeConfigurationRecord setAutomaticallyGenerated:]
  -[DNDSMutableModeConfigurationRecord setImpactsAvailability:]
  -[DNDSMutableModeConfigurationRecord setHasSecureData:]
  -[DNDSMutableModeConfigurationRecord setSecureConfiguration:]
  -[DNDSMutableModeConfigurationRecord setCreated:]
  -[DNDSMutableModeConfigurationRecord setLastModified:]
  -[DNDSMutableModeConfigurationRecord setDimsLockScreen:]
  -[DNDSMutableModeConfigurationRecord setMode:]
  -[DNDSMutableModeConfigurationRecord copyWithZone:]
  -[DNDSMutableModeConfigurationRecord setConfiguration:]


DNDSSyncEngineMetadataStore : NSObject <DNDSSyncEngineMetadataStoring>
 @property  NSData *metadata
 @property  NSString *userRecordID
 @property  long long accountStatus
 @property  BOOL encryptionAvailable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSSyncEngineMetadataStore accountStatus]
  -[DNDSSyncEngineMetadataStore zoneNames]
  -[DNDSSyncEngineMetadataStore addRecord:]
  -[DNDSSyncEngineMetadataStore userRecordID]
  -[DNDSSyncEngineMetadataStore _decodeRecordIDFromData:]
  -[DNDSSyncEngineMetadataStore purge]
  -[DNDSSyncEngineMetadataStore setUserRecordID:]
  -[DNDSSyncEngineMetadataStore .cxx_destruct]
  -[DNDSSyncEngineMetadataStore _removeSystemFieldsForRecordID:]
  -[DNDSSyncEngineMetadataStore removeRecordsWithZoneID:]
  -[DNDSSyncEngineMetadataStore removeRecordWithID:]
  -[DNDSSyncEngineMetadataStore removeZoneName:]
  -[DNDSSyncEngineMetadataStore addZoneName:]
  -[DNDSSyncEngineMetadataStore init]
  -[DNDSSyncEngineMetadataStore _encodedSystemFieldsFromRecord:]
  -[DNDSSyncEngineMetadataStore _write]
  -[DNDSSyncEngineMetadataStore recordWithID:]
  -[DNDSSyncEngineMetadataStore metadata]
  -[DNDSSyncEngineMetadataStore _encodedRecordIDFromRecordID:]
  -[DNDSSyncEngineMetadataStore _read]
  -[DNDSSyncEngineMetadataStore setAccountStatus:]
  -[DNDSSyncEngineMetadataStore setMetadata:]
  -[DNDSSyncEngineMetadataStore _updateSystemFieldsForRecord:]
  -[DNDSSyncEngineMetadataStore recordIDsWithZoneID:]
  -[DNDSSyncEngineMetadataStore setEncryptionAvailable:]
  -[DNDSSyncEngineMetadataStore isEncryptionAvailable]
  -[DNDSSyncEngineMetadataStore initWithURL:]


DNDSMetricsManager : NSObject
  // instance methods
  -[DNDSMetricsManager _dateFormatter]
  -[DNDSMetricsManager _metricsMonthStringForDate:]
  -[DNDSMetricsManager sendMetricsHeartbeatsIfNeeded]
  -[DNDSMetricsManager _sendMonthlyHeartbeatIfNeeded]
  -[DNDSMetricsManager _sendWeeklyHeartbeatIfNeeded]
  -[DNDSMetricsManager _sendDailyHeartbeatIfNeeded]
  -[DNDSMetricsManager _startOfLastWeek]
  -[DNDSMetricsManager .cxx_destruct]
  -[DNDSMetricsManager init]
  -[DNDSMetricsManager _startOfMonthWithDate:]
  -[DNDSMetricsManager _startOfWeekWithDate:]
  -[DNDSMetricsManager _writeMetricsToStore:]
  -[DNDSMetricsManager _aggregateMetricsWithEnabled:manuallyEnabled:numberOfNewSessions:numberOfNewManualSessions:controlCenterPhone:controlCenterWatch:type:mode:dayOfWeek:]
  -[DNDSMetricsManager _startOfLastMonth]
  -[DNDSMetricsManager _metricsWeekStringForDate:]
  -[DNDSMetricsManager _dateForYesterday]
  -[DNDSMetricsManager _metricsDayStringForDate:]
  -[DNDSMetricsManager _calendar]
  -[DNDSMetricsManager assertionTaken:withClientDetails:lockState:]


DNDSApplicationConfigurationRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSNumber *minimumBreakthroughUrgency
 @property  NSSet *allowedThreads
 @property  NSSet *deniedThreads
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSApplicationConfigurationRecord newWithDictionaryRepresentation:context:]
  +[DNDSApplicationConfigurationRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSApplicationConfigurationRecord dictionaryRepresentationWithContext:]
  -[DNDSApplicationConfigurationRecord _initWithRecord:]
  -[DNDSApplicationConfigurationRecord .cxx_destruct]
  -[DNDSApplicationConfigurationRecord init]
  -[DNDSApplicationConfigurationRecord isEqual:]
  -[DNDSApplicationConfigurationRecord mutableCopyWithZone:]
  -[DNDSApplicationConfigurationRecord minimumBreakthroughUrgency]
  -[DNDSApplicationConfigurationRecord copyWithZone:]
  -[DNDSApplicationConfigurationRecord allowedThreads]
  -[DNDSApplicationConfigurationRecord deniedThreads]
  -[DNDSApplicationConfigurationRecord _initWithMinimumBreakthroughUrgency:allowedThreads:deniedThreads:]


DNDSMutableApplicationConfigurationRecord : DNDSApplicationConfigurationRecord
 @property  NSNumber *minimumBreakthroughUrgency
 @property  NSSet *allowedThreads
 @property  NSSet *deniedThreads

  // instance methods
  -[DNDSMutableApplicationConfigurationRecord setMinimumBreakthroughUrgency:]
  -[DNDSMutableApplicationConfigurationRecord copyWithZone:]
  -[DNDSMutableApplicationConfigurationRecord setAllowedThreads:]
  -[DNDSMutableApplicationConfigurationRecord setDeniedThreads:]


DNDSScheduleLifetimeMonitor : DNDSBaseLifetimeMonitor
 @property  NSCalendar *calendar
 @property  <DNDSScheduleLifetimeMonitorDataSource> *dataSource

  // class methods
  +[DNDSScheduleLifetimeMonitor lifetimeClass]

  // instance methods
  -[DNDSScheduleLifetimeMonitor nextActiveDateIntervalForScheduleLifetime:assertion:date:]
  -[DNDSScheduleLifetimeMonitor .cxx_destruct]
  -[DNDSScheduleLifetimeMonitor calendar]
  -[DNDSScheduleLifetimeMonitor setDelegate:]
  -[DNDSScheduleLifetimeMonitor updateForModeAssertions:date:]
  -[DNDSScheduleLifetimeMonitor _activeDateIntervalForScheduleLifetime:assertion:date:ignoreMatchScheduleStartDate:]
  -[DNDSScheduleLifetimeMonitor _activeDateIntervalForScheduleLifetime:assertionStartDate:date:scheduleSettings:calendar:ignoreMatchScheduleStartDate:]
  -[DNDSScheduleLifetimeMonitor setCalendar:]
  -[DNDSScheduleLifetimeMonitor activeDateIntervalForScheduleLifetime:assertion:date:]


DNDSModeRepository : NSObject <DNDSModeRepository>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSModeRepository modeDetailsForIdentifiers:]


DNDSReachability : NSObject
 @property  NSObject<OS_nw_path_monitor> *pathMonitor
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_source> *debounceTimer
 @property  NSHashTable *delegates
 @property  BOOL reachable
 @property  BOOL lastInformedReachability
 @property  BOOL initialized

  // class methods
  +[DNDSReachability commonReachability]

  // instance methods
  -[DNDSReachability removeDelegate:]
  -[DNDSReachability .cxx_destruct]
  -[DNDSReachability delegates]
  -[DNDSReachability _informDelegates]
  -[DNDSReachability init]
  -[DNDSReachability lastInformedReachability]
  -[DNDSReachability isReachable]
  -[DNDSReachability setInitialized:]
  -[DNDSReachability debounceTimer]
  -[DNDSReachability _setReachable:]
  -[DNDSReachability isInitialized]
  -[DNDSReachability setupPathMonitor]
  -[DNDSReachability setReachable:]
  -[DNDSReachability queue]
  -[DNDSReachability pathMonitor]
  -[DNDSReachability dealloc]
  -[DNDSReachability _updateHandlerForPath:]
  -[DNDSReachability addDelegate:]
  -[DNDSReachability setLastInformedReachability:]


DNDSModeConfigurationManager : NSObject <DNDSSysdiagnoseDataProvider, DNDSModeConfigurationsStoreDelegate, DNDSKeybagStateObserver, DNDSModeConfigurationProviding>
 @property  <DNDSModeConfigurationManagerDelegate> *delegate
 @property  NSString *sysdiagnoseDataIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSModeConfigurationManager sysdiagnoseDataIdentifier]
  -[DNDSModeConfigurationManager exceptionForApplicationIdentifier:thread:forModeIdentifier:]
  -[DNDSModeConfigurationManager sysdiagnoseDataForDate:redacted:]
  -[DNDSModeConfigurationManager _prepareModeConfigurationForStorage:withError:]
  -[DNDSModeConfigurationManager relevantApplicationIdentifiers]
  -[DNDSModeConfigurationManager removeModeConfigurationForModeIdentifier:withError:]
  -[DNDSModeConfigurationManager .cxx_destruct]
  -[DNDSModeConfigurationManager _fixupConfigurationsIfNeeded]
  -[DNDSModeConfigurationManager exceptionForContactHandle:forModeIdentifier:]
  -[DNDSModeConfigurationManager setDelegate:]
  -[DNDSModeConfigurationManager _saveModeConfiguration:writeSecurePartition:error:]
  -[DNDSModeConfigurationManager backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSModeConfigurationManager modeConfigurationForModeIdentifier:withError:]
  -[DNDSModeConfigurationManager initWithBackingStore:keybag:]
  -[DNDSModeConfigurationManager exceptionForApplication:thread:forModeIdentifier:]
  -[DNDSModeConfigurationManager _writeModeConfigurationsRecord:writeSecurePartition:error:]
  -[DNDSModeConfigurationManager _sysdiagnoseDataShouldRedact:]
  -[DNDSModeConfigurationManager modeConfigurationsWithError:]
  -[DNDSModeConfigurationManager modeConfigurationStore:didUpdateAvailableModes:]
  -[DNDSModeConfigurationManager _readModeConfigurationsReturningError:]
  -[DNDSModeConfigurationManager _removedModeConfigurationRecordForModeRecord:]
  -[DNDSModeConfigurationManager availableModesFilteringPlaceholders:returningError:]
  -[DNDSModeConfigurationManager delegate]
  -[DNDSModeConfigurationManager setModeConfiguration:withError:]
  -[DNDSModeConfigurationManager dealloc]
  -[DNDSModeConfigurationManager _inheritFromDefaultModeConfiguration:]
  -[DNDSModeConfigurationManager _notifyChangeOfModeConfigurationFrom:to:]
  -[DNDSModeConfigurationManager keybagDidUnlockForTheFirstTime:]


DNDSClientConnectionDetails : NSObject <NSCopying, NSMutableCopying>
 @property  NSUUID *interruptionInvalidationAssertionUUID
 @property  NSSet *assertionUpdateClientIdentifiers
 @property  NSSet *activeAssertionUpdateClientIdentifiers
 @property  BOOL wantsStateUpdates
 @property  BOOL wantsSettingsUpdates
 @property  BOOL wantsModeUpdates
 @property  BOOL wantsActiveModeUpdates
 @property  BOOL wantsGlobalConfigurationUpdates
 @property  BOOL wantsMeDeviceStateUpdates

  // instance methods
  -[DNDSClientConnectionDetails activeAssertionUpdateClientIdentifiers]
  -[DNDSClientConnectionDetails wantsModeUpdates]
  -[DNDSClientConnectionDetails wantsStateUpdates]
  -[DNDSClientConnectionDetails wantsMeDeviceStateUpdates]
  -[DNDSClientConnectionDetails wantsSettingsUpdates]
  -[DNDSClientConnectionDetails wantsGlobalConfigurationUpdates]
  -[DNDSClientConnectionDetails wantsActiveModeUpdates]
  -[DNDSClientConnectionDetails .cxx_destruct]
  -[DNDSClientConnectionDetails interruptionInvalidationAssertionUUID]
  -[DNDSClientConnectionDetails init]
  -[DNDSClientConnectionDetails assertionUpdateClientIdentifiers]
  -[DNDSClientConnectionDetails _initWithDetails:]
  -[DNDSClientConnectionDetails _initWithInterruptionInvalidationAssertionUUID:assertionUpdateClientIdentifiers:activeAssertionUpdateClientIdentifiers:wantsStateUpdates:wantsSettingsUpdates:wantsModeUpdates:wantsActiveModeUpdates:wantsGlobalConfigurationUpdates:wantsMeDeviceStateUpdates:]
  -[DNDSClientConnectionDetails mutableCopyWithZone:]
  -[DNDSClientConnectionDetails copyWithZone:]


DNDSMutableClientConnectionDetails : DNDSClientConnectionDetails
 @property  NSUUID *interruptionInvalidationAssertionUUID
 @property  NSSet *assertionUpdateClientIdentifiers
 @property  NSSet *activeAssertionUpdateClientIdentifiers
 @property  BOOL wantsStateUpdates
 @property  BOOL wantsSettingsUpdates
 @property  BOOL wantsModeUpdates
 @property  BOOL wantsActiveModeUpdates
 @property  BOOL wantsGlobalConfigurationUpdates
 @property  BOOL wantsMeDeviceStateUpdates

  // instance methods
  -[DNDSMutableClientConnectionDetails setWantsGlobalConfigurationUpdates:]
  -[DNDSMutableClientConnectionDetails setWantsMeDeviceStateUpdates:]
  -[DNDSMutableClientConnectionDetails setActiveAssertionUpdateClientIdentifiers:]
  -[DNDSMutableClientConnectionDetails setAssertionUpdateClientIdentifiers:]
  -[DNDSMutableClientConnectionDetails setWantsModeUpdates:]
  -[DNDSMutableClientConnectionDetails copyWithZone:]
  -[DNDSMutableClientConnectionDetails setWantsActiveModeUpdates:]
  -[DNDSMutableClientConnectionDetails setWantsStateUpdates:]
  -[DNDSMutableClientConnectionDetails setWantsSettingsUpdates:]
  -[DNDSMutableClientConnectionDetails setInterruptionInvalidationAssertionUUID:]


DNDSStateProvider : NSObject <DNDSStateProviding>
 @property  DNDSStateProviderSystemSnapshot *lastSystemSnapshot
 @property  DNDState *lastCalculatedState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSStateProvider .cxx_destruct]
  -[DNDSStateProvider setLastCalculatedState:]
  -[DNDSStateProvider initWithModeConfigurationManager:]
  -[DNDSStateProvider lastCalculatedState]
  -[DNDSStateProvider setLastSystemSnapshot:]
  -[DNDSStateProvider lastSystemSnapshot]
  -[DNDSStateProvider recalculateStateForSnapshot:]


DNDSPlaceholderModeManager : NSObject <DNDSBackingStoreDelegate, DNDSSysdiagnoseDataProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // instance methods
  -[DNDSPlaceholderModeManager sysdiagnoseDataIdentifier]
  -[DNDSPlaceholderModeManager sysdiagnoseDataForDate:redacted:]
  -[DNDSPlaceholderModeManager .cxx_destruct]
  -[DNDSPlaceholderModeManager backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSPlaceholderModeManager placeholderModesWithError:]
  -[DNDSPlaceholderModeManager _readPlaceholderModesReturningError:]
  -[DNDSPlaceholderModeManager initWithBackingStore:]


DNDSFirstUnlockPurgedBackingStore : NSObject <DNDSCachedBackingStoreDelegate, DNDSKeybagStateObserver, DNDSCachedBackingStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DNDSCachedBackingStoreDelegate> *delegate

  // instance methods
  -[DNDSFirstUnlockPurgedBackingStore cachedBackingStoreDidPurgeCache:]
  -[DNDSFirstUnlockPurgedBackingStore .cxx_destruct]
  -[DNDSFirstUnlockPurgedBackingStore setDelegate:]
  -[DNDSFirstUnlockPurgedBackingStore backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSFirstUnlockPurgedBackingStore writeRecord:writePartition:error:]
  -[DNDSFirstUnlockPurgedBackingStore writeRecord:error:]
  -[DNDSFirstUnlockPurgedBackingStore purgeCache]
  -[DNDSFirstUnlockPurgedBackingStore delegate]
  -[DNDSFirstUnlockPurgedBackingStore initWithUnderlyingBackingStore:keybag:]
  -[DNDSFirstUnlockPurgedBackingStore readRecordWithError:]
  -[DNDSFirstUnlockPurgedBackingStore keybagDidUnlockForTheFirstTime:]


DNDSGlobalConfiguration : NSObject <DNDSBackingStoreRecord, NSCopying, NSMutableCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long preventAutoReply
 @property  DNDBypassSettings *bypassSettings
 @property  NSDate *lastModified
 @property  BOOL automaticallyGenerated

  // class methods
  +[DNDSGlobalConfiguration newWithDictionaryRepresentation:context:]
  +[DNDSGlobalConfiguration backingStoreWithFileURL:]

  // instance methods
  -[DNDSGlobalConfiguration lastModified]
  -[DNDSGlobalConfiguration dictionaryRepresentationWithContext:]
  -[DNDSGlobalConfiguration mergeWithGlobalConfiguration:]
  -[DNDSGlobalConfiguration initWithPreventAutoReply:bypassSettings:lastModified:automaticallyGenerated:]
  -[DNDSGlobalConfiguration .cxx_destruct]
  -[DNDSGlobalConfiguration _initWithConfiguration:]
  -[DNDSGlobalConfiguration init]
  -[DNDSGlobalConfiguration isEqual:]
  -[DNDSGlobalConfiguration preventAutoReply]
  -[DNDSGlobalConfiguration mutableCopyWithZone:]
  -[DNDSGlobalConfiguration isAutomaticallyGenerated]
  -[DNDSGlobalConfiguration copyWithZone:]
  -[DNDSGlobalConfiguration bypassSettings]


DNDSMutableGlobalConfiguration : DNDSGlobalConfiguration
 @property  unsigned long preventAutoReply
 @property  DNDBypassSettings *bypassSettings
 @property  NSDate *lastModified
 @property  BOOL automaticallyGenerated

  // instance methods
  -[DNDSMutableGlobalConfiguration setBypassSettings:]
  -[DNDSMutableGlobalConfiguration setAutomaticallyGenerated:]
  -[DNDSMutableGlobalConfiguration setPreventAutoReply:]
  -[DNDSMutableGlobalConfiguration setLastModified:]
  -[DNDSMutableGlobalConfiguration copyWithZone:]


DNDSScheduleSettings : DNDScheduleSettings
 @property  NSDate *creationDate

  // class methods
  +[DNDSScheduleSettings settingsWithClientSettings:creationDate:]
  +[DNDSScheduleSettings supportsSecureCoding]
  +[DNDSScheduleSettings settingsForRecord:]
  +[DNDSScheduleSettings defaultScheduleSettings]

  // instance methods
  -[DNDSScheduleSettings classForCoder]
  -[DNDSScheduleSettings .cxx_destruct]
  -[DNDSScheduleSettings isEqual:]
  -[DNDSScheduleSettings replacementObjectForCoder:]
  -[DNDSScheduleSettings makeRecord]
  -[DNDSScheduleSettings creationDate]
  -[DNDSScheduleSettings initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:creationDate:]


DNDSMeDeviceService : NSObject
 @property  DNDMeDeviceState *meDeviceState

  // instance methods
  -[DNDSMeDeviceService removeListener:]
  -[DNDSMeDeviceService .cxx_destruct]
  -[DNDSMeDeviceService init]
  -[DNDSMeDeviceService _saveDataToBackingStoreWithError:]
  -[DNDSMeDeviceService addListener:]
  -[DNDSMeDeviceService _loadDataFromBackingStore]
  -[DNDSMeDeviceService meDeviceChanged]
  -[DNDSMeDeviceService meDeviceState]
  -[DNDSMeDeviceService _queue_fetchAllDevices]
  -[DNDSMeDeviceService _queue_processDevices:error:]
  -[DNDSMeDeviceService _queue_computeMeDeviceStateForDevices:]
  -[DNDSMeDeviceService _queue_saveDataToBackingStoreWithError:]
  -[DNDSMeDeviceService devicesChanged]


DNDSModeConfigurationTriggersRecord : NSObject <NSCopying, NSMutableCopying, DNDSPartitionedBackingStoreRecord>
 @property  NSArray *triggers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSModeConfigurationTriggersRecord newWithDictionaryRepresentation:context:]
  +[DNDSModeConfigurationTriggersRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSModeConfigurationTriggersRecord newWithDictionaryRepresentation:partitionedDictionaryRepresentation:context:]

  // instance methods
  -[DNDSModeConfigurationTriggersRecord triggers]
  -[DNDSModeConfigurationTriggersRecord dictionaryRepresentationWithContext:]
  -[DNDSModeConfigurationTriggersRecord _initWithRecord:]
  -[DNDSModeConfigurationTriggersRecord .cxx_destruct]
  -[DNDSModeConfigurationTriggersRecord init]
  -[DNDSModeConfigurationTriggersRecord isEqual:]
  -[DNDSModeConfigurationTriggersRecord initWithTriggers:]
  -[DNDSModeConfigurationTriggersRecord mutableCopyWithZone:]
  -[DNDSModeConfigurationTriggersRecord copyWithZone:]


DNDSMutableModeConfigurationTriggersRecord : DNDSModeConfigurationTriggersRecord
  // instance methods
  -[DNDSMutableModeConfigurationTriggersRecord setTriggers:]
  -[DNDSMutableModeConfigurationTriggersRecord copyWithZone:]


DNDSSettingsManager : NSObject <DNDSSyncSettingsProviderDelegate, DNDSSysdiagnoseDataProvider>
 @property  <DNDSSettingsManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // instance methods
  -[DNDSSettingsManager pairedDeviceDidChange]
  -[DNDSSettingsManager _writeSettingsRecord:error:]
  -[DNDSSettingsManager sysdiagnoseDataIdentifier]
  -[DNDSSettingsManager sysdiagnoseDataForDate:redacted:]
  -[DNDSSettingsManager syncSettingsWithError:]
  -[DNDSSettingsManager setPairSyncEnabled:]
  -[DNDSSettingsManager .cxx_destruct]
  -[DNDSSettingsManager setBehaviorSettings:withError:]
  -[DNDSSettingsManager setDelegate:]
  -[DNDSSettingsManager scheduleSettingsWithError:]
  -[DNDSSettingsManager phoneCallBypassSettingsWithError:]
  -[DNDSSettingsManager initWithBackingStore:contactStore:]
  -[DNDSSettingsManager behaviorSettingsWithError:]
  -[DNDSSettingsManager _readSettingsReturningError:]
  -[DNDSSettingsManager _saveBehaviorSettings:scheduleSettings:error:]
  -[DNDSSettingsManager setScheduleSettings:withError:]
  -[DNDSSettingsManager delegate]
  -[DNDSSettingsManager syncSettingsProvider:didReceiveUpdatedSyncSettings:]
  -[DNDSSettingsManager dealloc]
  -[DNDSSettingsManager fallbackConfiguration]
  -[DNDSSettingsManager _saveConfiguration:forModeIdentifier:error:]


DNDSIDSRecord : NSObject <DNDSBackingStoreRecord>
 @property  DNDSIDSRecordID *recordID
 @property  NSDate *lastModified
 @property  BOOL deleted
 @property  DNDSIDSRecordMetadata *metadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSIDSRecord newWithDictionaryRepresentation:context:]

  // instance methods
  -[DNDSIDSRecord lastModified]
  -[DNDSIDSRecord objectForKey:]
  -[DNDSIDSRecord dictionaryRepresentationWithContext:]
  -[DNDSIDSRecord setObject:forKey:]
  -[DNDSIDSRecord .cxx_destruct]
  -[DNDSIDSRecord recordID]
  -[DNDSIDSRecord isDeleted]
  -[DNDSIDSRecord initWithMetadata:]
  -[DNDSIDSRecord isEqual:]
  -[DNDSIDSRecord metadata]
  -[DNDSIDSRecord copyWithZone:]
  -[DNDSIDSRecord _initWithMetadata:data:]


DNDSModeAssertionUpdateResult : NSObject <NSCopying>
 @property  NSArray *assertions
 @property  NSArray *invalidations

  // class methods
  +[DNDSModeAssertionUpdateResult emptyResult]

  // instance methods
  -[DNDSModeAssertionUpdateResult .cxx_destruct]
  -[DNDSModeAssertionUpdateResult assertions]
  -[DNDSModeAssertionUpdateResult resultCombiningWithResult:]
  -[DNDSModeAssertionUpdateResult copyWithZone:]
  -[DNDSModeAssertionUpdateResult invalidations]
  -[DNDSModeAssertionUpdateResult initWithAssertions:invalidations:]


DNDSModeAssertionInvalidationPredicate : NSPredicate
 @property  unsigned long predicateType

  // class methods
  +[DNDSModeAssertionInvalidationPredicate predicateForAssertionUUIDs:]
  +[DNDSModeAssertionInvalidationPredicate predicateForAnyAssertion]
  +[DNDSModeAssertionInvalidationPredicate predicateForAssertionClientIdentifiers:]
  +[DNDSModeAssertionInvalidationPredicate predicateForAssertionsTakenBeforeDate:]

  // instance methods
  -[DNDSModeAssertionInvalidationPredicate predicateType]
  -[DNDSModeAssertionInvalidationPredicate evaluateWithObject:substitutionVariables:]
  -[DNDSModeAssertionInvalidationPredicate _init]
  -[DNDSModeAssertionInvalidationPredicate copyWithZone:]


DNDSAnyModeAssertionInvalidationPredicate : DNDSModeAssertionInvalidationPredicate
  // class methods
  +[DNDSAnyModeAssertionInvalidationPredicate sharedInstance]
  +[DNDSAnyModeAssertionInvalidationPredicate supportsSecureCoding]

  // instance methods
  -[DNDSAnyModeAssertionInvalidationPredicate predicateType]
  -[DNDSAnyModeAssertionInvalidationPredicate initWithCoder:]
  -[DNDSAnyModeAssertionInvalidationPredicate isEqual:]
  -[DNDSAnyModeAssertionInvalidationPredicate encodeWithCoder:]


DNDSModeAssertionDateInvalidationPredicate : DNDSModeAssertionInvalidationPredicate
 @property  NSDate *date

  // class methods
  +[DNDSModeAssertionDateInvalidationPredicate supportsSecureCoding]

  // instance methods
  -[DNDSModeAssertionDateInvalidationPredicate predicateType]
  -[DNDSModeAssertionDateInvalidationPredicate initWithDate:]
  -[DNDSModeAssertionDateInvalidationPredicate evaluateWithObject:substitutionVariables:]
  -[DNDSModeAssertionDateInvalidationPredicate initWithCoder:]
  -[DNDSModeAssertionDateInvalidationPredicate .cxx_destruct]
  -[DNDSModeAssertionDateInvalidationPredicate isEqual:]
  -[DNDSModeAssertionDateInvalidationPredicate encodeWithCoder:]
  -[DNDSModeAssertionDateInvalidationPredicate date]


DNDSModeAssertionClientIdentifierInvalidationPredicate : DNDSModeAssertionInvalidationPredicate
 @property  NSArray *clientIdentifiers

  // class methods
  +[DNDSModeAssertionClientIdentifierInvalidationPredicate supportsSecureCoding]

  // instance methods
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate clientIdentifiers]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate predicateType]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate evaluateWithObject:substitutionVariables:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate initWithCoder:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate .cxx_destruct]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate initWithClientIdentifiers:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate isEqual:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate copyWithZone:]
  -[DNDSModeAssertionClientIdentifierInvalidationPredicate encodeWithCoder:]


DNDSModeAssertionUUIDInvalidationPredicate : DNDSModeAssertionInvalidationPredicate
 @property  NSArray *UUIDs

  // class methods
  +[DNDSModeAssertionUUIDInvalidationPredicate supportsSecureCoding]

  // instance methods
  -[DNDSModeAssertionUUIDInvalidationPredicate predicateType]
  -[DNDSModeAssertionUUIDInvalidationPredicate evaluateWithObject:substitutionVariables:]
  -[DNDSModeAssertionUUIDInvalidationPredicate initWithCoder:]
  -[DNDSModeAssertionUUIDInvalidationPredicate .cxx_destruct]
  -[DNDSModeAssertionUUIDInvalidationPredicate UUIDs]
  -[DNDSModeAssertionUUIDInvalidationPredicate isEqual:]
  -[DNDSModeAssertionUUIDInvalidationPredicate copyWithZone:]
  -[DNDSModeAssertionUUIDInvalidationPredicate encodeWithCoder:]
  -[DNDSModeAssertionUUIDInvalidationPredicate initWithUUIDs:]


DNDSWorkoutTriggerManager : NSObject <DNDSBiomeTriggerManager>
 @property  <DNDSWorkoutTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSWorkoutTriggerManager pairedDeviceDidChange]
  -[DNDSWorkoutTriggerManager refresh]
  -[DNDSWorkoutTriggerManager setDataSource:]
  -[DNDSWorkoutTriggerManager _assertionIdentifierForHealthKitWorkoutEvent:]
  -[DNDSWorkoutTriggerManager .cxx_destruct]
  -[DNDSWorkoutTriggerManager _updateNanoPreferencesForRefreshWithModeConfiguration:]
  -[DNDSWorkoutTriggerManager _accessor]
  -[DNDSWorkoutTriggerManager dataSource]
  -[DNDSWorkoutTriggerManager _isWorkoutDNDNanoPreferenceEnabled]
  -[DNDSWorkoutTriggerManager _configureWorkoutTriggerWithMode:]
  -[DNDSWorkoutTriggerManager init]
  -[DNDSWorkoutTriggerManager _refreshForNanoPreferenceChange]
  -[DNDSWorkoutTriggerManager _refreshWithMode:event:]
  -[DNDSWorkoutTriggerManager _setWorkoutDNDNanoPreferenceEnabled:]
  -[DNDSWorkoutTriggerManager refreshMigratingIfNecessary]
  -[DNDSWorkoutTriggerManager dealloc]
  -[DNDSWorkoutTriggerManager _isWorkoutTriggerEnabledForModeConfiguration:]
  -[DNDSWorkoutTriggerManager _migrateWorkoutDNDNanoPreference]


DNDSModeConfigurationsRecordDiff : NSObject
 @property  DNDSModeConfigurationsRecord *original
 @property  DNDSModeConfigurationsRecord *updated
 @property  NSArray *modifiedIDs
 @property  NSArray *removedIDs
 @property  CKRecordZone *zone

  // instance methods
  -[DNDSModeConfigurationsRecordDiff .cxx_destruct]
  -[DNDSModeConfigurationsRecordDiff updated]
  -[DNDSModeConfigurationsRecordDiff original]
  -[DNDSModeConfigurationsRecordDiff zone]
  -[DNDSModeConfigurationsRecordDiff _generateDiff]
  -[DNDSModeConfigurationsRecordDiff _modifiedConfigurations]
  -[DNDSModeConfigurationsRecordDiff _removedConfigurations]
  -[DNDSModeConfigurationsRecordDiff _recordIDsInModeConfigurations:]
  -[DNDSModeConfigurationsRecordDiff initWithOriginalModeConfigurations:updatedModeConfigurations:zone:]
  -[DNDSModeConfigurationsRecordDiff modifiedIDs]
  -[DNDSModeConfigurationsRecordDiff removedIDs]


DNDSSyncEngineLastChanceDataStore : NSObject <DNDSSyncEngineLastChanceDataStoring>
 @property  NSDictionary *records
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSSyncEngineLastChanceDataStore addRecord:]
  -[DNDSSyncEngineLastChanceDataStore purge]
  -[DNDSSyncEngineLastChanceDataStore _encodedDataFromRecord:]
  -[DNDSSyncEngineLastChanceDataStore recordsWithZoneID:]
  -[DNDSSyncEngineLastChanceDataStore _queue_read]
  -[DNDSSyncEngineLastChanceDataStore .cxx_destruct]
  -[DNDSSyncEngineLastChanceDataStore removeRecordsWithZoneID:]
  -[DNDSSyncEngineLastChanceDataStore removeRecordWithID:]
  -[DNDSSyncEngineLastChanceDataStore init]
  -[DNDSSyncEngineLastChanceDataStore records]
  -[DNDSSyncEngineLastChanceDataStore recordWithID:]
  -[DNDSSyncEngineLastChanceDataStore _decodeRecordFromData:]
  -[DNDSSyncEngineLastChanceDataStore _queue_write]
  -[DNDSSyncEngineLastChanceDataStore initWithURL:]


DNDSLegacyAssertionSyncManager : NSObject <DNDSAssertionSyncManager>
 @property  <DNDSLegacyAssertionSyncManagerDataSource> *dataSource
 @property  <DNDSAssertionSyncManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSLegacyAssertionSyncManager cleanupState]

  // instance methods
  -[DNDSLegacyAssertionSyncManager updateForStateUpdate:]
  -[DNDSLegacyAssertionSyncManager setDataSource:]
  -[DNDSLegacyAssertionSyncManager .cxx_destruct]
  -[DNDSLegacyAssertionSyncManager setDelegate:]
  -[DNDSLegacyAssertionSyncManager _beginMonitoringForChanges]
  -[DNDSLegacyAssertionSyncManager dataSource]
  -[DNDSLegacyAssertionSyncManager delegate]
  -[DNDSLegacyAssertionSyncManager resume]
  -[DNDSLegacyAssertionSyncManager dealloc]
  -[DNDSLegacyAssertionSyncManager _endMonitoringForChanges]
  -[DNDSLegacyAssertionSyncManager _updateForReason:]
  -[DNDSLegacyAssertionSyncManager _queue_updateToggleSyncForReason:]
  -[DNDSLegacyAssertionSyncManager _queue_updateGizmoAssertionSyncWithModeAssertionUpdateContext:]
  -[DNDSLegacyAssertionSyncManager _queue_gizmoUpdateDate]
  -[DNDSLegacyAssertionSyncManager _queue_updateCompanionToggleSyncForGizmoUpdateDate:modeAssertionUpdateContext:]
  -[DNDSLegacyAssertionSyncManager _queue_updateGizmoToggleSyncForState:companionUpdateDate:reason:]
  -[DNDSLegacyAssertionSyncManager _queue_updateCompanionAssertionMirroringForState:]
  -[DNDSLegacyAssertionSyncManager initWithClientDetailsProvider:pairedDevice:]
  -[DNDSLegacyAssertionSyncManager _updateGizmoAssertionSync]


DNDSModeAssertionManager : NSObject <DNDSBackingStoreDelegate, DNDSSysdiagnoseDataProvider, DNDSModeAssertionQuerying, DNDSModeAssertionUpdating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // instance methods
  -[DNDSModeAssertionManager sysdiagnoseDataIdentifier]
  -[DNDSModeAssertionManager sysdiagnoseDataForDate:redacted:]
  -[DNDSModeAssertionManager .cxx_destruct]
  -[DNDSModeAssertionManager updateModeAssertionsWithContextHandler:error:]
  -[DNDSModeAssertionManager initWithBackingStore:clientDetailsProvider:]
  -[DNDSModeAssertionManager modeAssertionsMatchingPredicate:]
  -[DNDSModeAssertionManager backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSModeAssertionManager modeAssertionInvalidationsMatchingPredicate:]
  -[DNDSModeAssertionManager clientDetailsForClientIdentifier:]
  -[DNDSModeAssertionManager _saveDataToBackingStoreWithError:]
  -[DNDSModeAssertionManager dealloc]
  -[DNDSModeAssertionManager _resolveTransactionForModeAssertionStore]
  -[DNDSModeAssertionManager _loadDataFromBackingStore]
  -[DNDSModeAssertionManager initWithBackingStoreURL:clientDetailsProvider:]


DNDSWorkloop : NSObject
  // class methods
  +[DNDSWorkloop sharedDaemonWorkloop]
  +[DNDSWorkloop serialQueueTargetingSharedWorkloop:]


DNDSMetricsRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSDictionary *metricsByDay
 @property  NSDate *lastDailyHeartbeat
 @property  NSDictionary *metricsByWeek
 @property  NSDate *lastWeeklyHeartbeat
 @property  NSDictionary *metricsByMonth
 @property  NSDate *lastMonthlyHeartbeat
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSMetricsRecord newWithDictionaryRepresentation:context:]
  +[DNDSMetricsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSMetricsRecord backingStoreWithFileURL:]

  // instance methods
  -[DNDSMetricsRecord dictionaryRepresentationWithContext:]
  -[DNDSMetricsRecord _initWithMetricsByDay:lastDailyHeartbeat:metricsByWeek:lastWeeklyHeartbeat:metricsByMonth:lastMonthlyHeartbeat:]
  -[DNDSMetricsRecord _initWithRecord:]
  -[DNDSMetricsRecord .cxx_destruct]
  -[DNDSMetricsRecord init]
  -[DNDSMetricsRecord lastDailyHeartbeat]
  -[DNDSMetricsRecord isEqual:]
  -[DNDSMetricsRecord metricsByDay]
  -[DNDSMetricsRecord lastMonthlyHeartbeat]
  -[DNDSMetricsRecord mutableCopyWithZone:]
  -[DNDSMetricsRecord metricsByMonth]
  -[DNDSMetricsRecord copyWithZone:]
  -[DNDSMetricsRecord metricsByWeek]
  -[DNDSMetricsRecord lastWeeklyHeartbeat]


DNDSMutableMetricsRecord : DNDSMetricsRecord
 @property  NSDictionary *metricsByDay
 @property  NSDate *lastDailyHeartbeat
 @property  NSDictionary *metricsByWeek
 @property  NSDate *lastWeeklyHeartbeat
 @property  NSDictionary *metricsByMonth
 @property  NSDate *lastMonthlyHeartbeat

  // instance methods
  -[DNDSMutableMetricsRecord setLastMonthlyHeartbeat:]
  -[DNDSMutableMetricsRecord setMetricsByWeek:]
  -[DNDSMutableMetricsRecord setLastDailyHeartbeat:]
  -[DNDSMutableMetricsRecord setMetricsByDay:]
  -[DNDSMutableMetricsRecord setLastWeeklyHeartbeat:]
  -[DNDSMutableMetricsRecord copyWithZone:]
  -[DNDSMutableMetricsRecord setMetricsByMonth:]


DNDSDrivingTriggerManager : NSObject <DNDSBiomeTriggerManager>
 @property  <DNDSDrivingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSDrivingTriggerManager _configureDrivingTriggerWithMode:]
  -[DNDSDrivingTriggerManager refresh]
  -[DNDSDrivingTriggerManager setDataSource:]
  -[DNDSDrivingTriggerManager .cxx_destruct]
  -[DNDSDrivingTriggerManager _featureEnabled]
  -[DNDSDrivingTriggerManager dataSource]
  -[DNDSDrivingTriggerManager init]
  -[DNDSDrivingTriggerManager _refreshWithMode:event:]


DNDSLegacySettingsSyncManager : NSObject <DNDSSettingsSyncManager>
 @property  <DNDSSettingsSyncManagerDataSource> *dataSource
 @property  <DNDSSettingsSyncManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSLegacySettingsSyncManager sendManagerForPairedDevice:]
  +[DNDSLegacySettingsSyncManager receiveManagerForPairedDevice:]
  +[DNDSLegacySettingsSyncManager cleanupState]

  // instance methods
  -[DNDSLegacySettingsSyncManager setDataSource:]
  -[DNDSLegacySettingsSyncManager .cxx_destruct]
  -[DNDSLegacySettingsSyncManager update]
  -[DNDSLegacySettingsSyncManager setDelegate:]
  -[DNDSLegacySettingsSyncManager _beginMonitoringForChanges]
  -[DNDSLegacySettingsSyncManager dataSource]
  -[DNDSLegacySettingsSyncManager delegate]
  -[DNDSLegacySettingsSyncManager resume]
  -[DNDSLegacySettingsSyncManager dealloc]
  -[DNDSLegacySettingsSyncManager _endMonitoringForChanges]
  -[DNDSLegacySettingsSyncManager _initWithListen:send:pairedDevice:]
  -[DNDSLegacySettingsSyncManager _updateBypassSettings]
  -[DNDSLegacySettingsSyncManager _updateScheduleSettingsWithDate:]
  -[DNDSLegacySettingsSyncManager _propagateBypassSettings:]
  -[DNDSLegacySettingsSyncManager _propagateScheduleSettings:]


DNDSConfigurationRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSNumber *type
 @property  NSNumber *suppressionType
 @property  NSNumber *minimumBreakthroughUrgency
 @property  NSNumber *hideApplicationBadges
 @property  NSNumber *compatibilityVersion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSConfigurationRecord newWithDictionaryRepresentation:context:]
  +[DNDSConfigurationRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSConfigurationRecord dictionaryRepresentationWithContext:]
  -[DNDSConfigurationRecord _initWithType:suppressionType:minimumBreakthroughUrgency:hideApplicationBadges:compatibilityVersion:]
  -[DNDSConfigurationRecord _initWithRecord:]
  -[DNDSConfigurationRecord hideApplicationBadges]
  -[DNDSConfigurationRecord .cxx_destruct]
  -[DNDSConfigurationRecord compatibilityVersion]
  -[DNDSConfigurationRecord init]
  -[DNDSConfigurationRecord isEqual:]
  -[DNDSConfigurationRecord type]
  -[DNDSConfigurationRecord suppressionType]
  -[DNDSConfigurationRecord mutableCopyWithZone:]
  -[DNDSConfigurationRecord minimumBreakthroughUrgency]
  -[DNDSConfigurationRecord copyWithZone:]


DNDSMutableConfigurationRecord : DNDSConfigurationRecord
 @property  NSNumber *type
 @property  NSNumber *suppressionType
 @property  NSNumber *minimumBreakthroughUrgency
 @property  NSNumber *hideApplicationBadges
 @property  NSNumber *compatibilityVersion

  // instance methods
  -[DNDSMutableConfigurationRecord setCompatibilityVersion:]
  -[DNDSMutableConfigurationRecord setMinimumBreakthroughUrgency:]
  -[DNDSMutableConfigurationRecord setHideApplicationBadges:]
  -[DNDSMutableConfigurationRecord setType:]
  -[DNDSMutableConfigurationRecord setSuppressionType:]
  -[DNDSMutableConfigurationRecord copyWithZone:]


DNDSUserAvailabilityIntentLauncher : NSObject
  // instance methods
  -[DNDSUserAvailabilityIntentLauncher .cxx_destruct]
  -[DNDSUserAvailabilityIntentLauncher initWithApplicationRecord:available:]
  -[DNDSUserAvailabilityIntentLauncher launchIntentExtensionWithCompletion:]
  -[DNDSUserAvailabilityIntentLauncher _cleanupWithError:completion:]


DNDSModeAssertionStore : NSObject <DNDSBackingStoreRecord, NSCopying, NSMutableCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *assertions
 @property  NSArray *invalidations
 @property  NSArray *invalidationRequests

  // class methods
  +[DNDSModeAssertionStore newWithDictionaryRepresentation:context:]
  +[DNDSModeAssertionStore syncMessageKeys]
  +[DNDSModeAssertionStore newWithSyncDictionaryRepresentation:]
  +[DNDSModeAssertionStore messageDateForSyncDictionaryRepresentation:]
  +[DNDSModeAssertionStore backingRecordKeys]
  +[DNDSModeAssertionStore upgradeDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSModeAssertionStore sysdiagnoseRecordKeys]
  +[DNDSModeAssertionStore newWithPeaceSyncDictionaryRepresentation:]
  +[DNDSModeAssertionStore messageDateForPeaceSyncDictionaryRepresentation:]

  // instance methods
  -[DNDSModeAssertionStore syncDictionaryRepresentationWithDate:messageUUID:]
  -[DNDSModeAssertionStore lastUpdateDate]
  -[DNDSModeAssertionStore dictionaryRepresentationWithContext:]
  -[DNDSModeAssertionStore .cxx_destruct]
  -[DNDSModeAssertionStore peaceSyncDictionaryRepresentationWithDate:messageUUID:userRequestedClientIdentifierHandler:]
  -[DNDSModeAssertionStore _initWithStore:]
  -[DNDSModeAssertionStore init]
  -[DNDSModeAssertionStore isEqual:]
  -[DNDSModeAssertionStore assertions]
  -[DNDSModeAssertionStore sysdiagnoseDictionaryRepresentation]
  -[DNDSModeAssertionStore mutableCopyWithZone:]
  -[DNDSModeAssertionStore invalidationRequests]
  -[DNDSModeAssertionStore copyWithZone:]
  -[DNDSModeAssertionStore invalidations]


DNDSMutableModeAssertionStore : DNDSModeAssertionStore
 @property  NSArray *assertions
 @property  NSArray *invalidations
 @property  NSArray *invalidationRequests

  // instance methods
  -[DNDSMutableModeAssertionStore updateConfigurationModificationDatesWithDataSource:syncManager:]
  -[DNDSMutableModeAssertionStore downgradeAssertionsIfNeededForSyncToPairedDevice:dataSource:syncManager:]
  -[DNDSMutableModeAssertionStore sanitizeDatesForThreshold:]
  -[DNDSMutableModeAssertionStore setInvalidationRequests:]
  -[DNDSMutableModeAssertionStore unresolveSourcesForSyncToPairedDevice:]
  -[DNDSMutableModeAssertionStore setAssertions:]
  -[DNDSMutableModeAssertionStore filterForSyncToPairedDevice:clientDetailsProvider:]
  -[DNDSMutableModeAssertionStore resolveSourcesForSyncFromPairedDevice:]
  -[DNDSMutableModeAssertionStore copyWithZone:]
  -[DNDSMutableModeAssertionStore setInvalidations:]


DNDSModernAssertionSyncManager : NSObject <DNDSSyncServiceDelegate, DNDSSysdiagnoseDataProvider, DNDSAssertionSyncManager>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier
 @property  <DNDSAssertionSyncManagerDataSource> *dataSource
 @property  <DNDSAssertionSyncManagerDelegate> *delegate

  // instance methods
  -[DNDSModernAssertionSyncManager updateForStateUpdate:]
  -[DNDSModernAssertionSyncManager sysdiagnoseDataIdentifier]
  -[DNDSModernAssertionSyncManager _saveMetadataToBackingStore]
  -[DNDSModernAssertionSyncManager syncService:didSendWithRequestIdentifier:withSuccess:error:]
  -[DNDSModernAssertionSyncManager sysdiagnoseDataForDate:redacted:]
  -[DNDSModernAssertionSyncManager _queue_sendStateSnapshotToPairedDevices:force:]
  -[DNDSModernAssertionSyncManager setDataSource:]
  -[DNDSModernAssertionSyncManager syncService:didReceiveMessage:withVersionNumber:messageType:fromDeviceIdentifier:]
  -[DNDSModernAssertionSyncManager .cxx_destruct]
  -[DNDSModernAssertionSyncManager setDelegate:]
  -[DNDSModernAssertionSyncManager forceUpdateAllDevices]
  -[DNDSModernAssertionSyncManager _queue_handleDidSendRequestIdentifier:withSuccess:error:]
  -[DNDSModernAssertionSyncManager dataSource]
  -[DNDSModernAssertionSyncManager updateDevices:]
  -[DNDSModernAssertionSyncManager _maintainMetadataBackingStore]
  -[DNDSModernAssertionSyncManager _loadMetadataFromBackingStore]
  -[DNDSModernAssertionSyncManager updateDevices:force:shouldFuzz:]
  -[DNDSModernAssertionSyncManager updateForModeAssertionUpdateResult:]
  -[DNDSModernAssertionSyncManager syncService:shouldAcceptIncomingMessage:withVersionNumber:messageType:fromDeviceIdentifier:]
  -[DNDSModernAssertionSyncManager delegate]
  -[DNDSModernAssertionSyncManager _queue_updateDevices]
  -[DNDSModernAssertionSyncManager resume]
  -[DNDSModernAssertionSyncManager _queue_handleMessage:withVersionNumber:fromDeviceIdentifier:]
  -[DNDSModernAssertionSyncManager dealloc]
  -[DNDSModernAssertionSyncManager initWithClientDetailsProvider:localSyncService:cloudSyncService:]


_DNDSPendingMessageRecipients : NSObject <NSCopying>
 @property  NSDate *lastUpdateDate
 @property  NSSet *deviceIdentifiers

  // instance methods
  -[_DNDSPendingMessageRecipients deviceIdentifiers]
  -[_DNDSPendingMessageRecipients lastUpdateDate]
  -[_DNDSPendingMessageRecipients .cxx_destruct]
  -[_DNDSPendingMessageRecipients copyWithZone:]
  -[_DNDSPendingMessageRecipients initWithLastUpdateDate:deviceIdentifiers:]


_DNDSSyncMessageGroup : NSObject <NSCopying>
 @property  unsigned long protocolVersion
 @property  unsigned long serviceType
 @property  DNDSMutableModeAssertionStore *store

  // instance methods
  -[_DNDSSyncMessageGroup protocolVersion]
  -[_DNDSSyncMessageGroup .cxx_destruct]
  -[_DNDSSyncMessageGroup isEqual:]
  -[_DNDSSyncMessageGroup store]
  -[_DNDSSyncMessageGroup copyWithZone:]
  -[_DNDSSyncMessageGroup serviceType]
  -[_DNDSSyncMessageGroup initWithServiceType:protocolVersion:store:]


DNDSModernAssertionSyncMetadataStore : NSObject <NSCopying, DNDSBackingStoreRecord>
 @property  NSMutableDictionary *lastReceivedStoreDate
 @property  NSMutableDictionary *lastSentStoreDate
 @property  NSMutableDictionary *pendingLastSentStoreDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSModernAssertionSyncMetadataStore newWithDictionaryRepresentation:context:]

  // instance methods
  -[DNDSModernAssertionSyncMetadataStore dictionaryRepresentationWithContext:]
  -[DNDSModernAssertionSyncMetadataStore .cxx_destruct]
  -[DNDSModernAssertionSyncMetadataStore _initWithStore:]
  -[DNDSModernAssertionSyncMetadataStore init]
  -[DNDSModernAssertionSyncMetadataStore isEqual:]
  -[DNDSModernAssertionSyncMetadataStore copyWithZone:]
  -[DNDSModernAssertionSyncMetadataStore lastReceivedStoreDate]
  -[DNDSModernAssertionSyncMetadataStore lastSentStoreDate]
  -[DNDSModernAssertionSyncMetadataStore pendingLastSentStoreDate]
  -[DNDSModernAssertionSyncMetadataStore _initWithLastReceivedStoreDate:lastSentStoreDate:pendingLastSentStoreDate:]


DNDSBiomeDonationManager : NSObject
  // instance methods
  -[DNDSBiomeDonationManager _donateEventForStateUpdate:]
  -[DNDSBiomeDonationManager .cxx_destruct]
  -[DNDSBiomeDonationManager handleStateUpdate:]
  -[DNDSBiomeDonationManager init]


DNDSPairedDevice : NSObject <NSCopying>
 @property  BOOL supportsKettle
 @property  NSUUID *pairingIdentifier
 @property  NSString *pairingDataStore
 @property  BOOL iOS14EraOS
 @property  BOOL iCloudEnabled
 @property  NSString *deviceName
 @property  NSString *osBuild
 @property  NSString *deviceIdentifier
 @property  unsigned long deviceClass
 @property  unsigned long syncProtocolVersion
 @property  unsigned long syncServiceType

  // instance methods
  -[DNDSPairedDevice osBuild]
  -[DNDSPairedDevice deviceName]
  -[DNDSPairedDevice .cxx_destruct]
  -[DNDSPairedDevice deviceClass]
  -[DNDSPairedDevice setDeviceName:]
  -[DNDSPairedDevice isEqual:]
  -[DNDSPairedDevice pairingIdentifier]
  -[DNDSPairedDevice setOsBuild:]
  -[DNDSPairedDevice syncProtocolVersion]
  -[DNDSPairedDevice deviceIdentifier]
  -[DNDSPairedDevice copyWithZone:]
  -[DNDSPairedDevice syncServiceType]
  -[DNDSPairedDevice pairingDataStore]
  -[DNDSPairedDevice isIOS14EraOS]
  -[DNDSPairedDevice supportsKettle]
  -[DNDSPairedDevice isICloudEnabled]
  -[DNDSPairedDevice initWithLocalDeviceIdentifier:deviceClass:syncProtocolVersion:iOS14EraOS:pairingIdentifier:pairingDataStore:]
  -[DNDSPairedDevice initWithCloudDeviceIdentifier:deviceClass:syncProtocolVersion:]
  -[DNDSPairedDevice setICloudEnabled:]


DNDSEventBehaviorResolution : NSObject <NSCopying>
 @property  NSUUID *UUID
 @property  NSDate *date
 @property  DNDClientEventBehavior *eventBehavior
 @property  NSString *clientIdentifier
 @property  unsigned long outcome
 @property  unsigned long reason

  // class methods
  +[DNDSEventBehaviorResolution resolutionForDate:eventBehavior:clientIdentifier:outcome:reason:]

  // instance methods
  -[DNDSEventBehaviorResolution UUID]
  -[DNDSEventBehaviorResolution redactedDescription]
  -[DNDSEventBehaviorResolution eventBehavior]
  -[DNDSEventBehaviorResolution _initWithUUID:date:eventBehavior:clientIdentifier:outcome:reason:]
  -[DNDSEventBehaviorResolution .cxx_destruct]
  -[DNDSEventBehaviorResolution _descriptionForRedacted:]
  -[DNDSEventBehaviorResolution isEqual:]
  -[DNDSEventBehaviorResolution clientIdentifier]
  -[DNDSEventBehaviorResolution reason]
  -[DNDSEventBehaviorResolution copyWithZone:]
  -[DNDSEventBehaviorResolution outcome]
  -[DNDSEventBehaviorResolution date]


DNDSHeartbeatMetricsRecord : NSObject <DNDSHeartbeatMetricsProtocol>
 @property  BOOL enabled
 @property  BOOL manuallyEnabled
 @property  NSNumber *numberOfSessions
 @property  NSNumber *numberOfManualSessions
 @property  BOOL enabledFromControlCenterPhone
 @property  BOOL enabledFromControlCenterWatch
 @property  BOOL enabledForOneHour
 @property  BOOL enabledUntilEvening
 @property  BOOL enabledUntilMorning
 @property  BOOL enabledAtLocation
 @property  BOOL enabledDuringEvent
 @property  BOOL enabledDrivingMode
 @property  BOOL enabledSleepMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSHeartbeatMetricsRecord newWithDictionaryRepresentation:context:]
  +[DNDSHeartbeatMetricsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSHeartbeatMetricsRecord manuallyEnabled]
  -[DNDSHeartbeatMetricsRecord enabledDuringEvent]
  -[DNDSHeartbeatMetricsRecord enabledFromControlCenterPhone]
  -[DNDSHeartbeatMetricsRecord enabledDrivingMode]
  -[DNDSHeartbeatMetricsRecord numberOfSessions]
  -[DNDSHeartbeatMetricsRecord enabledSleepMode]
  -[DNDSHeartbeatMetricsRecord enabledFromControlCenterWatch]
  -[DNDSHeartbeatMetricsRecord enabledForOneHour]
  -[DNDSHeartbeatMetricsRecord numberOfManualSessions]
  -[DNDSHeartbeatMetricsRecord enabledAtLocation]
  -[DNDSHeartbeatMetricsRecord dictionaryRepresentationWithContext:]
  -[DNDSHeartbeatMetricsRecord _initWithRecord:]
  -[DNDSHeartbeatMetricsRecord _initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:]
  -[DNDSHeartbeatMetricsRecord .cxx_destruct]
  -[DNDSHeartbeatMetricsRecord enabled]
  -[DNDSHeartbeatMetricsRecord init]
  -[DNDSHeartbeatMetricsRecord isEqual:]
  -[DNDSHeartbeatMetricsRecord enabledUntilEvening]
  -[DNDSHeartbeatMetricsRecord mutableCopyWithZone:]
  -[DNDSHeartbeatMetricsRecord copyWithZone:]
  -[DNDSHeartbeatMetricsRecord enabledUntilMorning]


DNDSMutableHeartbeatMetricsRecord : DNDSHeartbeatMetricsRecord <DNDSMutableHeartbeatMetricsProtocol>
 @property  BOOL enabled
 @property  BOOL manuallyEnabled
 @property  NSNumber *numberOfSessions
 @property  NSNumber *numberOfManualSessions
 @property  BOOL enabledFromControlCenterPhone
 @property  BOOL enabledFromControlCenterWatch
 @property  BOOL enabledForOneHour
 @property  BOOL enabledUntilEvening
 @property  BOOL enabledUntilMorning
 @property  BOOL enabledAtLocation
 @property  BOOL enabledDuringEvent
 @property  BOOL enabledDrivingMode
 @property  BOOL enabledSleepMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSMutableHeartbeatMetricsRecord setNumberOfManualSessions:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabledFromControlCenterPhone:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabledForOneHour:]
  -[DNDSMutableHeartbeatMetricsRecord setManuallyEnabled:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabledDrivingMode:]
  -[DNDSMutableHeartbeatMetricsRecord setNumberOfSessions:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabledFromControlCenterWatch:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabledSleepMode:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabledUntilEvening:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabledUntilMorning:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabledAtLocation:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabledDuringEvent:]
  -[DNDSMutableHeartbeatMetricsRecord copyWithZone:]
  -[DNDSMutableHeartbeatMetricsRecord setEnabled:]


DNDSDailyHeartbeatMetricsRecord : DNDSHeartbeatMetricsRecord
 @property  NSNumber *dayOfWeek

  // class methods
  +[DNDSDailyHeartbeatMetricsRecord newWithDictionaryRepresentation:context:]
  +[DNDSDailyHeartbeatMetricsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSDailyHeartbeatMetricsRecord dayOfWeek]
  -[DNDSDailyHeartbeatMetricsRecord dictionaryRepresentationWithContext:]
  -[DNDSDailyHeartbeatMetricsRecord _initWithRecord:]
  -[DNDSDailyHeartbeatMetricsRecord .cxx_destruct]
  -[DNDSDailyHeartbeatMetricsRecord init]
  -[DNDSDailyHeartbeatMetricsRecord isEqual:]
  -[DNDSDailyHeartbeatMetricsRecord mutableCopyWithZone:]
  -[DNDSDailyHeartbeatMetricsRecord _initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:dayOfWeek:]
  -[DNDSDailyHeartbeatMetricsRecord copyWithZone:]


DNDSMutableDailyHeartbeatMetricsRecord : DNDSDailyHeartbeatMetricsRecord <DNDSMutableHeartbeatMetricsProtocol>
 @property  NSNumber *dayOfWeek
 @property  BOOL enabled
 @property  BOOL manuallyEnabled
 @property  NSNumber *numberOfSessions
 @property  NSNumber *numberOfManualSessions
 @property  BOOL enabledFromControlCenterPhone
 @property  BOOL enabledFromControlCenterWatch
 @property  BOOL enabledForOneHour
 @property  BOOL enabledUntilEvening
 @property  BOOL enabledUntilMorning
 @property  BOOL enabledAtLocation
 @property  BOOL enabledDuringEvent
 @property  BOOL enabledDrivingMode
 @property  BOOL enabledSleepMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSMutableDailyHeartbeatMetricsRecord setDayOfWeek:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setNumberOfManualSessions:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabledFromControlCenterPhone:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabledForOneHour:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setManuallyEnabled:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabledDrivingMode:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setNumberOfSessions:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabledFromControlCenterWatch:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabledSleepMode:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabledUntilEvening:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabledUntilMorning:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabledAtLocation:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabledDuringEvent:]
  -[DNDSMutableDailyHeartbeatMetricsRecord copyWithZone:]
  -[DNDSMutableDailyHeartbeatMetricsRecord setEnabled:]


DNDSWeeklyHeartbeatMetricsRecord : DNDSHeartbeatMetricsRecord

DNDSMutableWeeklyHeartbeatMetricsRecord : DNDSWeeklyHeartbeatMetricsRecord <DNDSMutableHeartbeatMetricsProtocol>
 @property  BOOL enabled
 @property  BOOL manuallyEnabled
 @property  NSNumber *numberOfSessions
 @property  NSNumber *numberOfManualSessions
 @property  BOOL enabledFromControlCenterPhone
 @property  BOOL enabledFromControlCenterWatch
 @property  BOOL enabledForOneHour
 @property  BOOL enabledUntilEvening
 @property  BOOL enabledUntilMorning
 @property  BOOL enabledAtLocation
 @property  BOOL enabledDuringEvent
 @property  BOOL enabledDrivingMode
 @property  BOOL enabledSleepMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setNumberOfManualSessions:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabledFromControlCenterPhone:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabledForOneHour:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setManuallyEnabled:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabledDrivingMode:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setNumberOfSessions:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabledFromControlCenterWatch:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabledSleepMode:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabledUntilEvening:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabledUntilMorning:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabledAtLocation:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabledDuringEvent:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord copyWithZone:]
  -[DNDSMutableWeeklyHeartbeatMetricsRecord setEnabled:]


DNDSMonthlyHeartbeatMetricsRecord : DNDSHeartbeatMetricsRecord

DNDSMutableMonthlyHeartbeatMetricsRecord : DNDSMonthlyHeartbeatMetricsRecord <DNDSMutableHeartbeatMetricsProtocol>
 @property  BOOL enabled
 @property  BOOL manuallyEnabled
 @property  NSNumber *numberOfSessions
 @property  NSNumber *numberOfManualSessions
 @property  BOOL enabledFromControlCenterPhone
 @property  BOOL enabledFromControlCenterWatch
 @property  BOOL enabledForOneHour
 @property  BOOL enabledUntilEvening
 @property  BOOL enabledUntilMorning
 @property  BOOL enabledAtLocation
 @property  BOOL enabledDuringEvent
 @property  BOOL enabledDrivingMode
 @property  BOOL enabledSleepMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setNumberOfManualSessions:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabledFromControlCenterPhone:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabledForOneHour:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setManuallyEnabled:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabledDrivingMode:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setNumberOfSessions:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabledFromControlCenterWatch:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabledSleepMode:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabledUntilEvening:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabledUntilMorning:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabledAtLocation:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabledDuringEvent:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord copyWithZone:]
  -[DNDSMutableMonthlyHeartbeatMetricsRecord setEnabled:]


DNDSAuxiliaryStateMonitor : NSObject
 @property  BOOL presentationModeEnabled
 @property  BOOL screenShared
 @property  BOOL screenMirrored

  // instance methods
  -[DNDSAuxiliaryStateMonitor .cxx_destruct]
  -[DNDSAuxiliaryStateMonitor init]
  -[DNDSAuxiliaryStateMonitor dealloc]
  -[DNDSAuxiliaryStateMonitor isScreenShared]
  -[DNDSAuxiliaryStateMonitor isScreenMirrored]
  -[DNDSAuxiliaryStateMonitor isPresentationModeEnabled]
  -[DNDSAuxiliaryStateMonitor setScreenShared:]
  -[DNDSAuxiliaryStateMonitor setScreenMirrored:]


DNDSSleepingTriggerManager : NSObject <DNDSBiomeTriggerManager>
 @property  <DNDSSleepingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSSleepingTriggerManager refresh]
  -[DNDSSleepingTriggerManager setDataSource:]
  -[DNDSSleepingTriggerManager .cxx_destruct]
  -[DNDSSleepingTriggerManager _featureEnabled]
  -[DNDSSleepingTriggerManager dataSource]
  -[DNDSSleepingTriggerManager init]
  -[DNDSSleepingTriggerManager _refreshWithMode:event:]
  -[DNDSSleepingTriggerManager _configureSleepingTriggerWithMode:]


DNDSAppInfoCache : NSObject <DNDSKeybagStateObserver, LSApplicationWorkspaceObserverProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSAppInfoCache _fallbackAppInfoByBundleIdentifier]

  // instance methods
  -[DNDSAppInfoCache applicationsDidUninstall:]
  -[DNDSAppInfoCache applicationsDidInstall:]
  -[DNDSAppInfoCache _queue_read]
  -[DNDSAppInfoCache .cxx_destruct]
  -[DNDSAppInfoCache _cacheURL]
  -[DNDSAppInfoCache initWithKeybag:]
  -[DNDSAppInfoCache _queue_write]
  -[DNDSAppInfoCache keybagDidUnlockForTheFirstTime:]
  -[DNDSAppInfoCache appInfoForBundleIdentifier:]
  -[DNDSAppInfoCache _installedBundleIdentifiers]
  -[DNDSAppInfoCache _queue_monitorBundleIdentifiers:]
  -[DNDSAppInfoCache _fallbackAppInfoForBundleIdentifier:]
  -[DNDSAppInfoCache _sanitizeAppInfo:]
  -[DNDSAppInfoCache _parseAppStoreResponseForBundleIdentifiers:response:data:error:]
  -[DNDSAppInfoCache _fetchIconForAppInfo:timeoutInterval:completionHandler:]
  -[DNDSAppInfoCache _queue_removeCachedDataForAppInfo:]
  -[DNDSAppInfoCache _queue_removeUnusedAppInfo]
  -[DNDSAppInfoCache _queue_fetchMissingAppInfo]
  -[DNDSAppInfoCache _queue_bundleIdentifiersWithMissingInfo]
  -[DNDSAppInfoCache _fetchIconsForAppInfo:timeoutInterval:completionHandler:]
  -[DNDSAppInfoCache _fetchAppStoreInfoForBundleIdentifiers:timeoutInterval:limit:completionHandler:]
  -[DNDSAppInfoCache monitorApplicationIdentifiers:]
  -[DNDSAppInfoCache appInfoForBundleIdentifiers:]


DNDSScheduleManager : NSObject
 @property  <DNDSScheduleManagerDataSource> *dataSource

  // instance methods
  -[DNDSScheduleManager refresh]
  -[DNDSScheduleManager setDataSource:]
  -[DNDSScheduleManager .cxx_destruct]
  -[DNDSScheduleManager dataSource]
  -[DNDSScheduleManager initWithModeAssertionManager:]
  -[DNDSScheduleManager _refreshWithScheduleSettings:modeIdentifier:currentScheduleAssertion:context:]
  -[DNDSScheduleManager _refreshWithScheduleSettingsByModeIdentifier:context:]
  -[DNDSScheduleManager _scheduleManagerClientIdentifierForModeIdentifier:]


DNDSLegacyBehaviorOverride : NSObject <NSCopying, NSSecureCoding>
 @property  unsigned long overrideType
 @property  unsigned long mode
 @property  NSArray *effectiveIntervals

  // class methods
  +[DNDSLegacyBehaviorOverride supportsSecureCoding]

  // instance methods
  -[DNDSLegacyBehaviorOverride initWithCoder:]
  -[DNDSLegacyBehaviorOverride .cxx_destruct]
  -[DNDSLegacyBehaviorOverride copyWithZone:]
  -[DNDSLegacyBehaviorOverride mode]
  -[DNDSLegacyBehaviorOverride encodeWithCoder:]
  -[DNDSLegacyBehaviorOverride initWithOverrideType:mode:effectiveIntervals:]
  -[DNDSLegacyBehaviorOverride overrideType]
  -[DNDSLegacyBehaviorOverride effectiveIntervals]


DNDSModeConfigurationsStore : NSObject <DNDSCachedBackingStoreDelegate, DNDSSyncEngineDataSource, DNDSIDSSyncEngineDataSource, DNDSModeConfigurationsStoring, DNDSContactMonitorListener>
 @property  NSNumber *compatibilityVersion
 @property  <DNDSModeConfigurationsStoreDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *contactHistoryToken
 @property  NSSet *monitoredContacts

  // instance methods
  -[DNDSModeConfigurationsStore setCompatibilityVersion:]
  -[DNDSModeConfigurationsStore _lock_recordIDsForIDSSyncEngine:]
  -[DNDSModeConfigurationsStore _lock_purgeRecordIDs:]
  -[DNDSModeConfigurationsStore contactHistoryToken]
  -[DNDSModeConfigurationsStore cachedBackingStoreDidPurgeCache:]
  -[DNDSModeConfigurationsStore _lock_modeConfigurationForCKRecordID:]
  -[DNDSModeConfigurationsStore recordIDsForSyncEngine:]
  -[DNDSModeConfigurationsStore syncEngine:failedToDeleteRecordWithID:error:]
  -[DNDSModeConfigurationsStore _lock_removeModeConfigurationWithModeIdentifier:]
  -[DNDSModeConfigurationsStore .cxx_destruct]
  -[DNDSModeConfigurationsStore _lock_populateCKRecord:lastChanceRecord:]
  -[DNDSModeConfigurationsStore syncEngine:recordTypeForRecordID:]
  -[DNDSModeConfigurationsStore setContactHistoryToken:]
  -[DNDSModeConfigurationsStore compatibilityVersion]
  -[DNDSModeConfigurationsStore _lock_mutableExistingConfigurations]
  -[DNDSModeConfigurationsStore purgeRecordsForSyncEngine:]
  -[DNDSModeConfigurationsStore _lock_purgeData]
  -[DNDSModeConfigurationsStore recordIDsForIDSSyncEngine:]
  -[DNDSModeConfigurationsStore setDelegate:]
  -[DNDSModeConfigurationsStore backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSModeConfigurationsStore contactMonitor:didReceiveUpdatedContacts:deletedContactIdentifiers:withContactHistoryToken:]
  -[DNDSModeConfigurationsStore writeRecord:writePartition:error:]
  -[DNDSModeConfigurationsStore _lock_modeConfigurationForDNDSIDSRecordID:]
  -[DNDSModeConfigurationsStore purgeRecordsForIDSSyncEngine:]
  -[DNDSModeConfigurationsStore _lock_updateModeConfigurationWithDNDSIDSRecord:]
  -[DNDSModeConfigurationsStore writeRecord:error:]
  -[DNDSModeConfigurationsStore _purgeRecordIDs:]
  -[DNDSModeConfigurationsStore monitoredContacts]
  -[DNDSModeConfigurationsStore contactMonitor:didReceiveUpdatedContactsForContactsWithoutIdentifiers:]
  -[DNDSModeConfigurationsStore syncEngine:prepareRecordToSave:]
  -[DNDSModeConfigurationsStore _lock_writeRecord:writePartition:error:]
  -[DNDSModeConfigurationsStore syncEngine:recordWithIDWasDeleted:]
  -[DNDSModeConfigurationsStore syncEngine:didFetchRecord:]
  -[DNDSModeConfigurationsStore delegate]
  -[DNDSModeConfigurationsStore idsSyncEngine:recordWithIDWasDeleted:]
  -[DNDSModeConfigurationsStore _lock_modeIdentifiers]
  -[DNDSModeConfigurationsStore initWithBackingStore:syncEngine:idsSyncEngine:]
  -[DNDSModeConfigurationsStore _lock_removeModeConfigurationWithCKRecordID:]
  -[DNDSModeConfigurationsStore _lock_existingConfigurations]
  -[DNDSModeConfigurationsStore readRecordWithError:]
  -[DNDSModeConfigurationsStore _lock_populateDNDSIDSRecord:]
  -[DNDSModeConfigurationsStore _notifyDelegateOfAvailableModes]
  -[DNDSModeConfigurationsStore _lock_updateModeConfigurationWithConfiguration:]
  -[DNDSModeConfigurationsStore syncEngine:wantsRecord:]
  -[DNDSModeConfigurationsStore _purgeData]
  -[DNDSModeConfigurationsStore syncEngine:resolveConflictBetweenClientRecord:andServerRecord:]
  -[DNDSModeConfigurationsStore _lock_modeConfigurationForModeIdentifier:]
  -[DNDSModeConfigurationsStore idsSyncEngine:prepareRecordToSave:]
  -[DNDSModeConfigurationsStore idsSyncEngine:didFetchRecord:]
  -[DNDSModeConfigurationsStore syncEngine:zoneWithIDWasDeleted:removingRecordIDs:]
  -[DNDSModeConfigurationsStore _lock_updateModeConfigurationWithCKRecord:]


DNDSClientDetailsProvider : NSObject
  // class methods
  +[DNDSClientDetailsProvider _defaultModuleDirectories]

  // instance methods
  -[DNDSClientDetailsProvider .cxx_destruct]
  -[DNDSClientDetailsProvider init]
  -[DNDSClientDetailsProvider clientDetailsForIdentifier:applicationBundleURL:]
  -[DNDSClientDetailsProvider clientDetailsForIdentifier:]
  -[DNDSClientDetailsProvider findClientDetailsForIdentifier:]
  -[DNDSClientDetailsProvider _loadPreloadBundles]


DNDSPairedDeviceStateMonitor : NSObject <IDSServiceDelegate, DNDSSysdiagnoseDataProvider>
 @property  DNDSPairedDevice *pairedDevice
 @property  NSSet *cloudDevices
 @property  <DNDSPairedDeviceStateMonitorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // instance methods
  -[DNDSPairedDeviceStateMonitor service:nearbyDevicesChanged:]
  -[DNDSPairedDeviceStateMonitor pairedDevice]
  -[DNDSPairedDeviceStateMonitor sysdiagnoseDataIdentifier]
  -[DNDSPairedDeviceStateMonitor service:devicesChanged:]
  -[DNDSPairedDeviceStateMonitor pairedDeviceForDeviceIdentifier:]
  -[DNDSPairedDeviceStateMonitor sysdiagnoseDataForDate:redacted:]
  -[DNDSPairedDeviceStateMonitor _pairedDeviceStateChanged:]
  -[DNDSPairedDeviceStateMonitor .cxx_destruct]
  -[DNDSPairedDeviceStateMonitor setCloudDevices:]
  -[DNDSPairedDeviceStateMonitor setPairedDevice:]
  -[DNDSPairedDeviceStateMonitor setDelegate:]
  -[DNDSPairedDeviceStateMonitor _beginMonitoringForChanges]
  -[DNDSPairedDeviceStateMonitor initWithLocalIDSService:cloudIDSService:]
  -[DNDSPairedDeviceStateMonitor _queue_updatePairedState]
  -[DNDSPairedDeviceStateMonitor cloudDevices]
  -[DNDSPairedDeviceStateMonitor _getCurrentPairedDevice]
  -[DNDSPairedDeviceStateMonitor delegate]
  -[DNDSPairedDeviceStateMonitor resume]
  -[DNDSPairedDeviceStateMonitor _queue_updateCloudDevices]
  -[DNDSPairedDeviceStateMonitor dealloc]
  -[DNDSPairedDeviceStateMonitor _endMonitoringForChanges]


DNDSModeRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSString *symbolImageName
 @property  NSString *tintColorName
 @property  NSString *name
 @property  NSString *modeIdentifier
 @property  long long semanticType
 @property  unsigned long visibility
 @property  NSUUID *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSModeRecord newWithDictionaryRepresentation:context:]
  +[DNDSModeRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSModeRecord name]
  -[DNDSModeRecord _initWithSymbolImageName:tintColorName:name:modeIdentifier:semanticType:visibility:identifier:]
  -[DNDSModeRecord visibility]
  -[DNDSModeRecord dictionaryRepresentationWithContext:]
  -[DNDSModeRecord _initWithRecord:]
  -[DNDSModeRecord .cxx_destruct]
  -[DNDSModeRecord modeIdentifier]
  -[DNDSModeRecord semanticType]
  -[DNDSModeRecord tintColorName]
  -[DNDSModeRecord init]
  -[DNDSModeRecord isEqual:]
  -[DNDSModeRecord symbolImageName]
  -[DNDSModeRecord identifier]
  -[DNDSModeRecord mutableCopyWithZone:]
  -[DNDSModeRecord copyWithZone:]


DNDSMutableModeRecord : DNDSModeRecord
  // instance methods
  -[DNDSMutableModeRecord setVisibility:]
  -[DNDSMutableModeRecord setName:]
  -[DNDSMutableModeRecord setSemanticType:]
  -[DNDSMutableModeRecord setTintColorName:]
  -[DNDSMutableModeRecord setModeIdentifier:]
  -[DNDSMutableModeRecord setIdentifier:]
  -[DNDSMutableModeRecord copyWithZone:]
  -[DNDSMutableModeRecord setSymbolImageName:]


DNDSConfigurationsRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSDictionary *modeConfigurations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSConfigurationsRecord newWithDictionaryRepresentation:context:]
  +[DNDSConfigurationsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSConfigurationsRecord dictionaryRepresentationWithContext:]
  -[DNDSConfigurationsRecord _initWithRecord:]
  -[DNDSConfigurationsRecord .cxx_destruct]
  -[DNDSConfigurationsRecord init]
  -[DNDSConfigurationsRecord isEqual:]
  -[DNDSConfigurationsRecord _initWithModeConfigurations:]
  -[DNDSConfigurationsRecord modeConfigurations]
  -[DNDSConfigurationsRecord mutableCopyWithZone:]
  -[DNDSConfigurationsRecord configurationForModeIdentifier:]
  -[DNDSConfigurationsRecord copyWithZone:]


DNDSMutableConfigurationsRecord : DNDSConfigurationsRecord
  // instance methods
  -[DNDSMutableConfigurationsRecord setModeConfigurations:]
  -[DNDSMutableConfigurationsRecord setConfiguration:forModeIdentifier:]
  -[DNDSMutableConfigurationsRecord copyWithZone:]


DNDSIDSSyncService : NSObject <IDSServiceDelegate, DNDSSyncService>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DNDSSyncServiceDelegate> *delegate

  // instance methods
  -[DNDSIDSSyncService service:account:incomingMessage:fromID:context:]
  -[DNDSIDSSyncService service:account:identifier:didSendWithSuccess:error:]
  -[DNDSIDSSyncService sendMessage:withVersionNumber:messageType:toDestinations:completionHandler:]
  -[DNDSIDSSyncService .cxx_destruct]
  -[DNDSIDSSyncService initWithIDSService:]
  -[DNDSIDSSyncService setDelegate:]
  -[DNDSIDSSyncService _queue_sendMessage:withVersionNumber:messageType:toDestinations:requestIdentifier:error:]
  -[DNDSIDSSyncService delegate]
  -[DNDSIDSSyncService resume]
  -[DNDSIDSSyncService sendMessage:withVersionNumber:messageType:toDestinations:identifyingCompletionHandler:]
  -[DNDSIDSSyncService _queue_resume]
  -[DNDSIDSSyncService _queue_handleIncomingMessage:deviceIdentifier:]


DNDSConfigurationSecureRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  DNDSSenderConfigurationRecord *senderConfiguration
 @property  NSDictionary *allowedApplications
 @property  NSSet *deniedApplications
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSConfigurationSecureRecord newWithDictionaryRepresentation:context:]
  +[DNDSConfigurationSecureRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSConfigurationSecureRecord log:withPrefix:]
  -[DNDSConfigurationSecureRecord deniedApplications]
  -[DNDSConfigurationSecureRecord dictionaryRepresentationWithContext:]
  -[DNDSConfigurationSecureRecord _initWithRecord:]
  -[DNDSConfigurationSecureRecord .cxx_destruct]
  -[DNDSConfigurationSecureRecord init]
  -[DNDSConfigurationSecureRecord allowedApplications]
  -[DNDSConfigurationSecureRecord senderConfiguration]
  -[DNDSConfigurationSecureRecord isEqual:]
  -[DNDSConfigurationSecureRecord _initWithSenderConfiguration:allowedApplications:deniedApplications:]
  -[DNDSConfigurationSecureRecord mutableCopyWithZone:]
  -[DNDSConfigurationSecureRecord copyWithZone:]


DNDSMutableConfigurationSecureRecord : DNDSConfigurationSecureRecord
 @property  DNDSSenderConfigurationRecord *senderConfiguration
 @property  NSDictionary *allowedApplications
 @property  NSSet *deniedApplications

  // instance methods
  -[DNDSMutableConfigurationSecureRecord setDeniedApplications:]
  -[DNDSMutableConfigurationSecureRecord setAllowedApplications:]
  -[DNDSMutableConfigurationSecureRecord copyWithZone:]
  -[DNDSMutableConfigurationSecureRecord setSenderConfiguration:]


DNDSLegacyBehaviorOverrideEffectiveInterval : NSObject <NSCopying, NSSecureCoding>
 @property  NSDateComponents *startComponents
 @property  NSDateComponents *endComponents
 @property  NSString *calendarIdentifier
 @property  unsigned long repeatInterval
 @property  NSUUID *identifier

  // class methods
  +[DNDSLegacyBehaviorOverrideEffectiveInterval supportsSecureCoding]

  // instance methods
  -[DNDSLegacyBehaviorOverrideEffectiveInterval initWithCoder:]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval .cxx_destruct]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval repeatInterval]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval identifier]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval copyWithZone:]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval encodeWithCoder:]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval calendarIdentifier]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:identifier:]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval startComponents]
  -[DNDSLegacyBehaviorOverrideEffectiveInterval endComponents]


DNDSSyncSettings : NSObject <NSMutableCopying, NSCopying>
 @property  BOOL pairSyncEnabled
 @property  BOOL cloudSyncEnabled

  // instance methods
  -[DNDSSyncSettings isCloudSyncEnabled]
  -[DNDSSyncSettings isEqual:]
  -[DNDSSyncSettings isPairSyncEnabled]
  -[DNDSSyncSettings initWithPairSyncEnabled:cloudSyncEnabled:]
  -[DNDSSyncSettings mutableCopyWithZone:]
  -[DNDSSyncSettings copyWithZone:]


DNDSMutableSyncSettings : DNDSSyncSettings
 @property  BOOL pairSyncEnabled
 @property  BOOL cloudSyncEnabled

  // instance methods
  -[DNDSMutableSyncSettings setCloudSyncEnabled:]
  -[DNDSMutableSyncSettings setPairSyncEnabled:]
  -[DNDSMutableSyncSettings copyWithZone:]


DNDSStateProviderSystemSnapshot : NSObject <NSCopying, NSMutableCopying>
 @property  NSArray *assertions
 @property  NSArray *activeAssertionUUIDs
 @property  NSDictionary *activeDateIntervalByAssertionUUID
 @property  unsigned long interruptionBehaviorSetting
 @property  unsigned long lostModeState
 @property  NSDate *lastUpdate

  // instance methods
  -[DNDSStateProviderSystemSnapshot lostModeState]
  -[DNDSStateProviderSystemSnapshot interruptionBehaviorSetting]
  -[DNDSStateProviderSystemSnapshot .cxx_destruct]
  -[DNDSStateProviderSystemSnapshot lastUpdate]
  -[DNDSStateProviderSystemSnapshot init]
  -[DNDSStateProviderSystemSnapshot isEqual:]
  -[DNDSStateProviderSystemSnapshot assertions]
  -[DNDSStateProviderSystemSnapshot mutableCopyWithZone:]
  -[DNDSStateProviderSystemSnapshot copyWithZone:]
  -[DNDSStateProviderSystemSnapshot activeAssertionUUIDs]
  -[DNDSStateProviderSystemSnapshot activeDateIntervalByAssertionUUID]
  -[DNDSStateProviderSystemSnapshot _initWithSnapshot:]
  -[DNDSStateProviderSystemSnapshot _initWithAssertions:activeAssertionUUIDs:activeDateIntervalByAssertionUUID:interruptionBehaviorSetting:lostModeState:lastUpdate:]


DNDSMutableStateProviderSystemSnapshot : DNDSStateProviderSystemSnapshot
 @property  NSArray *assertions
 @property  NSArray *activeAssertionUUIDs
 @property  NSDictionary *activeDateIntervalByAssertionUUID
 @property  unsigned long interruptionBehaviorSetting
 @property  unsigned long lostModeState
 @property  NSDate *lastUpdate

  // instance methods
  -[DNDSMutableStateProviderSystemSnapshot setLastUpdate:]
  -[DNDSMutableStateProviderSystemSnapshot setInterruptionBehaviorSetting:]
  -[DNDSMutableStateProviderSystemSnapshot setActiveDateIntervalByAssertionUUID:]
  -[DNDSMutableStateProviderSystemSnapshot setAssertions:]
  -[DNDSMutableStateProviderSystemSnapshot setLostModeState:]
  -[DNDSMutableStateProviderSystemSnapshot copyWithZone:]
  -[DNDSMutableStateProviderSystemSnapshot setActiveAssertionUUIDs:]


DNDSIDSSyncEngineMetadataStore : NSObject <DNDSIDSSyncEngineMetadataStoring>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSIDSSyncEngineMetadataStore setSyncDate:forRecordIDs:forPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngineMetadataStore _forgetMetadataForRecordID:]
  -[DNDSIDSSyncEngineMetadataStore purge]
  -[DNDSIDSSyncEngineMetadataStore _forgetSyncDatesForDevicesWithoutInitialSync]
  -[DNDSIDSSyncEngineMetadataStore hasMetadataForPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngineMetadataStore hasPerformedInitialSyncForPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngineMetadataStore updateMetadata:]
  -[DNDSIDSSyncEngineMetadataStore _isPairedDeviceOutdated:]
  -[DNDSIDSSyncEngineMetadataStore setLastModifiedDate:forRecordIDs:]
  -[DNDSIDSSyncEngineMetadataStore modifiedRecordIDsForPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngineMetadataStore .cxx_destruct]
  -[DNDSIDSSyncEngineMetadataStore _parseDictionary:]
  -[DNDSIDSSyncEngineMetadataStore _isMetadataValidAtDate:]
  -[DNDSIDSSyncEngineMetadataStore unknownRecordIDsInRecordIDs:]
  -[DNDSIDSSyncEngineMetadataStore _areSyncDatesValidAtDate:]
  -[DNDSIDSSyncEngineMetadataStore setDeletedAtDate:forRecordIDs:]
  -[DNDSIDSSyncEngineMetadataStore garbageCollect]
  -[DNDSIDSSyncEngineMetadataStore init]
  -[DNDSIDSSyncEngineMetadataStore setPerformedInitialSyncForPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngineMetadataStore _write]
  -[DNDSIDSSyncEngineMetadataStore isValidAtDate:]
  -[DNDSIDSSyncEngineMetadataStore _read]
  -[DNDSIDSSyncEngineMetadataStore _forgetSyncDatesForOutdatedDevices]
  -[DNDSIDSSyncEngineMetadataStore recordMetadataForRecordID:]
  -[DNDSIDSSyncEngineMetadataStore _forgetObsoleteTombstones]
  -[DNDSIDSSyncEngineMetadataStore initWithDeviceObsoletionDuration:tombstoneObsoletionDuration:]
  -[DNDSIDSSyncEngineMetadataStore _forgetSyncDatesForRecordID:]
  -[DNDSIDSSyncEngineMetadataStore setSyncDate:forRecordsMatchingMetadata:forPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngineMetadataStore _canTombstoneBeRemovedWithRecordID:]
  -[DNDSIDSSyncEngineMetadataStore _forgetRecordID:]
  -[DNDSIDSSyncEngineMetadataStore removePairedDeviceIdentifier:]
  -[DNDSIDSSyncEngineMetadataStore deletedRecordIDsForPairedDeviceIdentifier:]
  -[DNDSIDSSyncEngineMetadataStore initWithURL:]


DNDSModeAssertionStoreRecord : NSObject <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *assertions
 @property  NSArray *invalidations
 @property  NSArray *invalidationRequests

  // class methods
  +[DNDSModeAssertionStoreRecord recordForDictionary:keys:]
  +[DNDSModeAssertionStoreRecord recordForAssertionStore:]

  // instance methods
  -[DNDSModeAssertionStoreRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionStoreRecord setInvalidationRequests:]
  -[DNDSModeAssertionStoreRecord .cxx_destruct]
  -[DNDSModeAssertionStoreRecord assertions]
  -[DNDSModeAssertionStoreRecord object]
  -[DNDSModeAssertionStoreRecord setAssertions:]
  -[DNDSModeAssertionStoreRecord invalidationRequests]
  -[DNDSModeAssertionStoreRecord invalidations]
  -[DNDSModeAssertionStoreRecord setInvalidations:]


DNDSModeAssertionRecord : NSObject <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *UUID
 @property  NSNumber *startDate
 @property  DNDSModeAssertionDetailsRecord *details
 @property  DNDSModeAssertionSourceRecord *source

  // class methods
  +[DNDSModeAssertionRecord recordForDictionary:keys:]
  +[DNDSModeAssertionRecord recordForAssertion:]

  // instance methods
  -[DNDSModeAssertionRecord UUID]
  -[DNDSModeAssertionRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionRecord .cxx_destruct]
  -[DNDSModeAssertionRecord setDetails:]
  -[DNDSModeAssertionRecord setStartDate:]
  -[DNDSModeAssertionRecord object]
  -[DNDSModeAssertionRecord details]
  -[DNDSModeAssertionRecord setSource:]
  -[DNDSModeAssertionRecord startDate]
  -[DNDSModeAssertionRecord source]
  -[DNDSModeAssertionRecord setUUID:]


DNDSModeAssertionDetailsRecord : NSObject <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  NSString *modeIdentifier
 @property  NSNumber *modeConfigurationModifiedDate
 @property  NSNumber *userVisibleEndDate
 @property  DNDSModeAssertionLifetimeRecord *lifetime
 @property  NSString *reason

  // class methods
  +[DNDSModeAssertionDetailsRecord recordForDictionary:keys:]
  +[DNDSModeAssertionDetailsRecord recordForAssertionDetails:]

  // instance methods
  -[DNDSModeAssertionDetailsRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionDetailsRecord .cxx_destruct]
  -[DNDSModeAssertionDetailsRecord modeIdentifier]
  -[DNDSModeAssertionDetailsRecord lifetime]
  -[DNDSModeAssertionDetailsRecord identifier]
  -[DNDSModeAssertionDetailsRecord setModeIdentifier:]
  -[DNDSModeAssertionDetailsRecord reason]
  -[DNDSModeAssertionDetailsRecord object]
  -[DNDSModeAssertionDetailsRecord setIdentifier:]
  -[DNDSModeAssertionDetailsRecord setReason:]
  -[DNDSModeAssertionDetailsRecord setLifetime:]
  -[DNDSModeAssertionDetailsRecord setUserVisibleEndDate:]
  -[DNDSModeAssertionDetailsRecord modeConfigurationModifiedDate]
  -[DNDSModeAssertionDetailsRecord userVisibleEndDate]
  -[DNDSModeAssertionDetailsRecord setModeConfigurationModifiedDate:]


DNDSModeAssertionLifetimeRecord : NSObject <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *lifetimeType
 @property  NSString *eventUniqueID
 @property  NSNumber *occurrenceDate
 @property  NSNumber *onlyDuringEvent
 @property  NSNumber *startDate
 @property  NSNumber *endDate
 @property  NSString *scheduleIdentifier
 @property  NSString *behavior
 @property  NSNumber *latitude
 @property  NSNumber *longitude
 @property  NSNumber *radius
 @property  NSString *regionIdentifier

  // class methods
  +[DNDSModeAssertionLifetimeRecord recordForDictionary:keys:]
  +[DNDSModeAssertionLifetimeRecord recordForAssertionLifetime:]

  // instance methods
  -[DNDSModeAssertionLifetimeRecord setLatitude:]
  -[DNDSModeAssertionLifetimeRecord setLongitude:]
  -[DNDSModeAssertionLifetimeRecord latitude]
  -[DNDSModeAssertionLifetimeRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionLifetimeRecord setEndDate:]
  -[DNDSModeAssertionLifetimeRecord longitude]
  -[DNDSModeAssertionLifetimeRecord .cxx_destruct]
  -[DNDSModeAssertionLifetimeRecord radius]
  -[DNDSModeAssertionLifetimeRecord setStartDate:]
  -[DNDSModeAssertionLifetimeRecord setBehavior:]
  -[DNDSModeAssertionLifetimeRecord behavior]
  -[DNDSModeAssertionLifetimeRecord setRadius:]
  -[DNDSModeAssertionLifetimeRecord object]
  -[DNDSModeAssertionLifetimeRecord startDate]
  -[DNDSModeAssertionLifetimeRecord regionIdentifier]
  -[DNDSModeAssertionLifetimeRecord setRegionIdentifier:]
  -[DNDSModeAssertionLifetimeRecord endDate]
  -[DNDSModeAssertionLifetimeRecord occurrenceDate]
  -[DNDSModeAssertionLifetimeRecord scheduleIdentifier]
  -[DNDSModeAssertionLifetimeRecord lifetimeType]
  -[DNDSModeAssertionLifetimeRecord eventUniqueID]
  -[DNDSModeAssertionLifetimeRecord onlyDuringEvent]
  -[DNDSModeAssertionLifetimeRecord setEventUniqueID:]
  -[DNDSModeAssertionLifetimeRecord setLifetimeType:]
  -[DNDSModeAssertionLifetimeRecord setOnlyDuringEvent:]
  -[DNDSModeAssertionLifetimeRecord setOccurrenceDate:]
  -[DNDSModeAssertionLifetimeRecord setScheduleIdentifier:]


DNDSModeAssertionSourceRecord : NSObject <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *clientIdentifier
 @property  NSString *deviceIdentifier

  // class methods
  +[DNDSModeAssertionSourceRecord recordForDictionary:keys:]
  +[DNDSModeAssertionSourceRecord recordForAssertionSource:]

  // instance methods
  -[DNDSModeAssertionSourceRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionSourceRecord .cxx_destruct]
  -[DNDSModeAssertionSourceRecord clientIdentifier]
  -[DNDSModeAssertionSourceRecord object]
  -[DNDSModeAssertionSourceRecord deviceIdentifier]
  -[DNDSModeAssertionSourceRecord setDeviceIdentifier:]
  -[DNDSModeAssertionSourceRecord setClientIdentifier:]


DNDSModeAssertionInvalidationRecord : NSObject <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  DNDSModeAssertionRecord *assertion
 @property  NSNumber *invalidationDate
 @property  DNDSModeAssertionInvalidationDetailsRecord *details
 @property  DNDSModeAssertionSourceRecord *source
 @property  NSString *reason
 @property  NSString *reasonOverride

  // class methods
  +[DNDSModeAssertionInvalidationRecord recordForDictionary:keys:]
  +[DNDSModeAssertionInvalidationRecord recordForInvalidation:]

  // instance methods
  -[DNDSModeAssertionInvalidationRecord assertion]
  -[DNDSModeAssertionInvalidationRecord setAssertion:]
  -[DNDSModeAssertionInvalidationRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionInvalidationRecord .cxx_destruct]
  -[DNDSModeAssertionInvalidationRecord setDetails:]
  -[DNDSModeAssertionInvalidationRecord reasonOverride]
  -[DNDSModeAssertionInvalidationRecord reason]
  -[DNDSModeAssertionInvalidationRecord object]
  -[DNDSModeAssertionInvalidationRecord details]
  -[DNDSModeAssertionInvalidationRecord setSource:]
  -[DNDSModeAssertionInvalidationRecord setReason:]
  -[DNDSModeAssertionInvalidationRecord source]
  -[DNDSModeAssertionInvalidationRecord setReasonOverride:]
  -[DNDSModeAssertionInvalidationRecord invalidationDate]
  -[DNDSModeAssertionInvalidationRecord setInvalidationDate:]


DNDSModeAssertionInvalidationDetailsRecord : NSObject <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier

  // class methods
  +[DNDSModeAssertionInvalidationDetailsRecord recordForDictionary:keys:]
  +[DNDSModeAssertionInvalidationDetailsRecord recordForInvalidationDetails:]

  // instance methods
  -[DNDSModeAssertionInvalidationDetailsRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionInvalidationDetailsRecord .cxx_destruct]
  -[DNDSModeAssertionInvalidationDetailsRecord identifier]
  -[DNDSModeAssertionInvalidationDetailsRecord object]
  -[DNDSModeAssertionInvalidationDetailsRecord setIdentifier:]


DNDSModeAssertionInvalidationRequestRecord : NSObject <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *UUID
 @property  DNDSModeAssertionInvalidationPredicateRecord *predicate
 @property  NSNumber *requestDate
 @property  DNDSModeAssertionInvalidationDetailsRecord *details
 @property  DNDSModeAssertionSourceRecord *source
 @property  NSString *reason
 @property  NSString *reasonOverride

  // class methods
  +[DNDSModeAssertionInvalidationRequestRecord recordForDictionary:keys:]
  +[DNDSModeAssertionInvalidationRequestRecord recordForInvalidationRequest:]

  // instance methods
  -[DNDSModeAssertionInvalidationRequestRecord setPredicate:]
  -[DNDSModeAssertionInvalidationRequestRecord setRequestDate:]
  -[DNDSModeAssertionInvalidationRequestRecord UUID]
  -[DNDSModeAssertionInvalidationRequestRecord requestDate]
  -[DNDSModeAssertionInvalidationRequestRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionInvalidationRequestRecord predicate]
  -[DNDSModeAssertionInvalidationRequestRecord .cxx_destruct]
  -[DNDSModeAssertionInvalidationRequestRecord setDetails:]
  -[DNDSModeAssertionInvalidationRequestRecord reasonOverride]
  -[DNDSModeAssertionInvalidationRequestRecord reason]
  -[DNDSModeAssertionInvalidationRequestRecord object]
  -[DNDSModeAssertionInvalidationRequestRecord details]
  -[DNDSModeAssertionInvalidationRequestRecord setSource:]
  -[DNDSModeAssertionInvalidationRequestRecord setReason:]
  -[DNDSModeAssertionInvalidationRequestRecord source]
  -[DNDSModeAssertionInvalidationRequestRecord setReasonOverride:]
  -[DNDSModeAssertionInvalidationRequestRecord setUUID:]


DNDSModeAssertionInvalidationPredicateRecord : NSObject <DNDSModeAssertionStoreRecordDictionaryEncoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *predicateType
 @property  NSNumber *date
 @property  NSArray *clientIdentifiers
 @property  NSArray *UUIDs

  // class methods
  +[DNDSModeAssertionInvalidationPredicateRecord recordForDictionary:keys:]
  +[DNDSModeAssertionInvalidationPredicateRecord recordForInvalidationPredicate:]

  // instance methods
  -[DNDSModeAssertionInvalidationPredicateRecord clientIdentifiers]
  -[DNDSModeAssertionInvalidationPredicateRecord predicateType]
  -[DNDSModeAssertionInvalidationPredicateRecord setPredicateType:]
  -[DNDSModeAssertionInvalidationPredicateRecord dictionaryWithKeys:options:]
  -[DNDSModeAssertionInvalidationPredicateRecord .cxx_destruct]
  -[DNDSModeAssertionInvalidationPredicateRecord UUIDs]
  -[DNDSModeAssertionInvalidationPredicateRecord object]
  -[DNDSModeAssertionInvalidationPredicateRecord setDate:]
  -[DNDSModeAssertionInvalidationPredicateRecord setClientIdentifiers:]
  -[DNDSModeAssertionInvalidationPredicateRecord setUUIDs:]
  -[DNDSModeAssertionInvalidationPredicateRecord date]


DNDSMindfulnessTriggerManager : NSObject <DNDSBiomeTriggerManager>
 @property  <DNDSMindfulnessTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSMindfulnessTriggerManager refresh]
  -[DNDSMindfulnessTriggerManager setDataSource:]
  -[DNDSMindfulnessTriggerManager .cxx_destruct]
  -[DNDSMindfulnessTriggerManager _featureEnabled]
  -[DNDSMindfulnessTriggerManager dataSource]
  -[DNDSMindfulnessTriggerManager init]
  -[DNDSMindfulnessTriggerManager _refreshWithMode:event:]
  -[DNDSMindfulnessTriggerManager _configureTriggerWithMode:]


DNDSClientDetails : NSObject <NSCopying>
 @property  NSString *clientIdentifier
 @property  NSArray *identifiers
 @property  BOOL resolutionContextAssumingDeviceUILocked
 @property  BOOL userInteractionClient
 @property  BOOL persistentAssertionClient
 @property  BOOL syncSuppressedClient
 @property  BOOL iOS14SyncSuppressedClient

  // class methods
  +[DNDSClientDetails detailsForBundleAtURL:]
  +[DNDSClientDetails detailsForClientIdentifier:applicationBundleURL:]
  +[DNDSClientDetails _detailsForClientIdentifier:bundleInfoDictionary:]

  // instance methods
  -[DNDSClientDetails isSyncSuppressedClient]
  -[DNDSClientDetails .cxx_destruct]
  -[DNDSClientDetails identifiers]
  -[DNDSClientDetails isIOS14SyncSuppressedClient]
  -[DNDSClientDetails initWithClientIdentifier:identifiers:resolutionContextAssumingDeviceUILocked:userInteractionClient:persistentAssertionClient:syncSuppressedClient:iOS14SyncSuppressedClient:]
  -[DNDSClientDetails isUserInteractionClient]
  -[DNDSClientDetails isResolutionContextAssumingDeviceUILocked]
  -[DNDSClientDetails clientIdentifier]
  -[DNDSClientDetails isPersistentAssertionClient]
  -[DNDSClientDetails copyWithZone:]


DNDSSyncSettingsProvider : NSObject
 @property  DNDSSyncSettings *syncSettings
 @property  <DNDSSyncSettingsProviderDelegate> *delegate

  // instance methods
  -[DNDSSyncSettingsProvider pairedDeviceDidChange]
  -[DNDSSyncSettingsProvider _lock_updatePairSyncPreferences]
  -[DNDSSyncSettingsProvider setPairSyncEnabled:]
  -[DNDSSyncSettingsProvider syncSettings]
  -[DNDSSyncSettingsProvider .cxx_destruct]
  -[DNDSSyncSettingsProvider setSyncSettings:]
  -[DNDSSyncSettingsProvider _lock_updateCompanionCloudSyncPreference]
  -[DNDSSyncSettingsProvider _updateCloudSyncPreferences]
  -[DNDSSyncSettingsProvider setDelegate:]
  -[DNDSSyncSettingsProvider _beginMonitoringForChanges]
  -[DNDSSyncSettingsProvider init]
  -[DNDSSyncSettingsProvider _isCloudSyncPreferenceEnabled]
  -[DNDSSyncSettingsProvider _lock_updateSyncSettingsIfNewSettingsDiffer:]
  -[DNDSSyncSettingsProvider _updatePairSyncPreferences]
  -[DNDSSyncSettingsProvider delegate]
  -[DNDSSyncSettingsProvider _lock_setCompanionCloudSyncPreferenceEnabled:]
  -[DNDSSyncSettingsProvider dealloc]
  -[DNDSSyncSettingsProvider _lock_isPairSyncPreferenceEnabled]
  -[DNDSSyncSettingsProvider _endMonitoringForChanges]
  -[DNDSSyncSettingsProvider _lock_isCloudSyncPreferenceEnabled]
  -[DNDSSyncSettingsProvider observeValueForKeyPath:ofObject:change:context:]
  -[DNDSSyncSettingsProvider _lock_accessor]


DNDSBackingStoreDictionaryContext : NSObject <NSCopying, NSMutableCopying>
 @property  NSObject<NSFastEnumeration> *underlyingHealingSource
 @property  unsigned long destination
 @property  unsigned long partitionType
 @property  BOOL redactSensitiveData
 @property  <DNDSContactProviding> *contactProvider
 @property  <DNDSApplicationIdentifierMapping> *applicationIdentifierMapper
 @property  NSDictionary *healingSource
 @property  NSArray *arrayHealingSource

  // instance methods
  -[DNDSBackingStoreDictionaryContext _initWithContext:]
  -[DNDSBackingStoreDictionaryContext initWithDestination:partitionType:redactSensitiveData:contactProvider:applicationIdentifierMapper:]
  -[DNDSBackingStoreDictionaryContext .cxx_destruct]
  -[DNDSBackingStoreDictionaryContext underlyingHealingSource]
  -[DNDSBackingStoreDictionaryContext destination]
  -[DNDSBackingStoreDictionaryContext arrayHealingSource]
  -[DNDSBackingStoreDictionaryContext healingSource]
  -[DNDSBackingStoreDictionaryContext setUnderlyingHealingSource:]
  -[DNDSBackingStoreDictionaryContext initWithDestination:partitionType:healingSource:redactSensitiveData:contactProvider:applicationIdentifierMapper:]
  -[DNDSBackingStoreDictionaryContext partitionType]
  -[DNDSBackingStoreDictionaryContext redactSensitiveData]
  -[DNDSBackingStoreDictionaryContext applicationIdentifierMapper]
  -[DNDSBackingStoreDictionaryContext mutableCopyWithZone:]
  -[DNDSBackingStoreDictionaryContext copyWithZone:]
  -[DNDSBackingStoreDictionaryContext contactProvider]


DNDSMutableBackingStoreDictionaryContext : DNDSBackingStoreDictionaryContext
 @property  unsigned long destination
 @property  unsigned long partitionType
 @property  BOOL redactSensitiveData
 @property  <DNDSContactProviding> *contactProvider
 @property  <DNDSApplicationIdentifierMapping> *applicationIdentifierMapper
 @property  NSDictionary *healingSource
 @property  NSArray *arrayHealingSource

  // instance methods
  -[DNDSMutableBackingStoreDictionaryContext setContactProvider:]
  -[DNDSMutableBackingStoreDictionaryContext setDestination:]
  -[DNDSMutableBackingStoreDictionaryContext setApplicationIdentifierMapper:]
  -[DNDSMutableBackingStoreDictionaryContext setRedactSensitiveData:]
  -[DNDSMutableBackingStoreDictionaryContext setPartitionType:]
  -[DNDSMutableBackingStoreDictionaryContext setArrayHealingSource:]
  -[DNDSMutableBackingStoreDictionaryContext setHealingSource:]


DNDSSettingsRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  DNDSBehaviorSettingsRecord *behaviorSettings
 @property  DNDSBypassSettingsRecord *phoneCallBypassSettings
 @property  DNDSScheduleSettingsRecord *scheduleSettings
 @property  DNDSConfigurationsRecord *configurations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSSettingsRecord newWithDictionaryRepresentation:context:]
  +[DNDSSettingsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSSettingsRecord backingStoreWithFileURL:]
  +[DNDSSettingsRecord recordWithEncodedInfo:error:]

  // instance methods
  -[DNDSSettingsRecord configurations]
  -[DNDSSettingsRecord dictionaryRepresentationWithContext:]
  -[DNDSSettingsRecord _initWithRecord:]
  -[DNDSSettingsRecord .cxx_destruct]
  -[DNDSSettingsRecord _initWithBehaviorSettings:phoneCallBypassSettings:scheduleSettings:configurations:]
  -[DNDSSettingsRecord phoneCallBypassSettings]
  -[DNDSSettingsRecord behaviorSettings]
  -[DNDSSettingsRecord init]
  -[DNDSSettingsRecord isEqual:]
  -[DNDSSettingsRecord scheduleSettings]
  -[DNDSSettingsRecord mutableCopyWithZone:]
  -[DNDSSettingsRecord copyWithZone:]


DNDSMutableSettingsRecord : DNDSSettingsRecord
 @property  DNDSBehaviorSettingsRecord *behaviorSettings
 @property  DNDSBypassSettingsRecord *phoneCallBypassSettings
 @property  DNDSScheduleSettingsRecord *scheduleSettings
 @property  DNDSConfigurationsRecord *configurations

  // instance methods
  -[DNDSMutableSettingsRecord setPhoneCallBypassSettings:]
  -[DNDSMutableSettingsRecord setConfigurations:]
  -[DNDSMutableSettingsRecord setBehaviorSettings:]
  -[DNDSMutableSettingsRecord copyWithZone:]
  -[DNDSMutableSettingsRecord setScheduleSettings:]


DNDSApplicationIdentifierMapper : NSObject <DNDSApplicationIdentifierMapping>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSApplicationIdentifierMapper applicationIdentifierForSyncWithSourceApplicationIdentifier:]
  -[DNDSApplicationIdentifierMapper applicationIdentifierForTargetPlatform:withSourceApplicationIdentifier:]
  -[DNDSApplicationIdentifierMapper applicationIdentifierForFileWithSourceApplicationIdentifier:]
  -[DNDSApplicationIdentifierMapper _macOSBundleIDForiOSBundleID:]
  -[DNDSApplicationIdentifierMapper _iOSBundleIDForMacOSBundleID:]


DNDSModeResolutionService : NSObject
  // instance methods
  -[DNDSModeResolutionService _preferModeAssertion:toModeAssertion:]
  -[DNDSModeResolutionService _priorityForModeAssertion:]
  -[DNDSModeResolutionService recalculateModeForSnapshot:]


DNDSConfigurationsSecureRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSDictionary *modeConfigurations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSConfigurationsSecureRecord newWithDictionaryRepresentation:context:]
  +[DNDSConfigurationsSecureRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSConfigurationsSecureRecord dictionaryRepresentationWithContext:]
  -[DNDSConfigurationsSecureRecord _initWithRecord:]
  -[DNDSConfigurationsSecureRecord .cxx_destruct]
  -[DNDSConfigurationsSecureRecord init]
  -[DNDSConfigurationsSecureRecord isEqual:]
  -[DNDSConfigurationsSecureRecord _initWithModeConfigurations:]
  -[DNDSConfigurationsSecureRecord modeConfigurations]
  -[DNDSConfigurationsSecureRecord mutableCopyWithZone:]
  -[DNDSConfigurationsSecureRecord configurationForModeIdentifier:]
  -[DNDSConfigurationsSecureRecord copyWithZone:]


DNDSMutableConfigurationsSecureRecord : DNDSConfigurationsSecureRecord
  // instance methods
  -[DNDSMutableConfigurationsSecureRecord setModeConfigurations:]
  -[DNDSMutableConfigurationsSecureRecord setConfiguration:forModeIdentifier:]
  -[DNDSMutableConfigurationsSecureRecord copyWithZone:]


DNDSXPCEventInterface : NSObject
  // class methods
  +[DNDSXPCEventInterface sharedInstance]

  // instance methods
  -[DNDSXPCEventInterface setEvent:forKey:onStream:]
  -[DNDSXPCEventInterface registerForStream:queue:handler:]


DNDSXPCEventStream : NSObject
  // instance methods
  -[DNDSXPCEventStream .cxx_destruct]
  -[DNDSXPCEventStream init]
  -[DNDSXPCEventStream registerTimerHandlerWithServiceIdentifier:handler:]
  -[DNDSXPCEventStream setTimer:]
  -[DNDSXPCEventStream start]


DNDSSenderConfigurationRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSSet *allowedContactTypes
 @property  NSSet *deniedContactTypes
 @property  NSSet *allowedContactGroups
 @property  NSSet *deniedContactGroups
 @property  NSSet *allowedContacts
 @property  NSSet *deniedContacts
 @property  DNDSBypassSettingsRecord *phoneCallBypassSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSSenderConfigurationRecord newWithDictionaryRepresentation:context:]
  +[DNDSSenderConfigurationRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSSenderConfigurationRecord allowedContactGroups]
  -[DNDSSenderConfigurationRecord dictionaryRepresentationWithContext:]
  -[DNDSSenderConfigurationRecord _initWithRecord:]
  -[DNDSSenderConfigurationRecord deniedContactGroups]
  -[DNDSSenderConfigurationRecord .cxx_destruct]
  -[DNDSSenderConfigurationRecord deniedContacts]
  -[DNDSSenderConfigurationRecord phoneCallBypassSettings]
  -[DNDSSenderConfigurationRecord init]
  -[DNDSSenderConfigurationRecord isEqual:]
  -[DNDSSenderConfigurationRecord allowedContacts]
  -[DNDSSenderConfigurationRecord _initWithAllowedContactTypes:deniedContactTypes:allowedContactGroups:deniedContactGroups:allowedContacts:deniedContacts:phoneCallBypassSettings:]
  -[DNDSSenderConfigurationRecord deniedContactTypes]
  -[DNDSSenderConfigurationRecord allowedContactTypes]
  -[DNDSSenderConfigurationRecord mutableCopyWithZone:]
  -[DNDSSenderConfigurationRecord copyWithZone:]


DNDSMutableSenderConfigurationRecord : DNDSSenderConfigurationRecord
 @property  NSSet *allowedContactTypes
 @property  NSSet *deniedContactTypes
 @property  NSSet *allowedContactGroups
 @property  NSSet *deniedContactGroups
 @property  NSSet *allowedContacts
 @property  NSSet *deniedContacts
 @property  DNDSBypassSettingsRecord *phoneCallBypassSettings

  // instance methods
  -[DNDSMutableSenderConfigurationRecord setPhoneCallBypassSettings:]
  -[DNDSMutableSenderConfigurationRecord setDeniedContactGroups:]
  -[DNDSMutableSenderConfigurationRecord setDeniedContacts:]
  -[DNDSMutableSenderConfigurationRecord setAllowedContactGroups:]
  -[DNDSMutableSenderConfigurationRecord setAllowedContacts:]
  -[DNDSMutableSenderConfigurationRecord setDeniedContactTypes:]
  -[DNDSMutableSenderConfigurationRecord setAllowedContactTypes:]
  -[DNDSMutableSenderConfigurationRecord copyWithZone:]


DNDSIDSRecordID : NSObject <NSCopying, DNDSBackingStoreRecord>
 @property  NSString *identifier
 @property  NSString *zone
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSIDSRecordID newWithDictionaryRepresentation:context:]

  // instance methods
  -[DNDSIDSRecordID dictionaryRepresentationWithContext:]
  -[DNDSIDSRecordID .cxx_destruct]
  -[DNDSIDSRecordID isEqual:]
  -[DNDSIDSRecordID identifier]
  -[DNDSIDSRecordID zone]
  -[DNDSIDSRecordID copyWithZone:]
  -[DNDSIDSRecordID initWithIdentifier:zone:]
  -[DNDSIDSRecordID _initWithRecordID:]


DNDSContactRecord : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  NSString *contactIdentifier
 @property  NSString *firstName
 @property  NSString *middleName
 @property  NSString *lastName
 @property  NSString *nickName
 @property  NSString *organizationName
 @property  NSSet *phoneNumbers
 @property  NSSet *emailAddresses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSContactRecord newWithDictionaryRepresentation:context:]
  +[DNDSContactRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]

  // instance methods
  -[DNDSContactRecord organizationName]
  -[DNDSContactRecord firstName]
  -[DNDSContactRecord middleName]
  -[DNDSContactRecord dictionaryRepresentationWithContext:]
  -[DNDSContactRecord lastName]
  -[DNDSContactRecord _initWithRecord:]
  -[DNDSContactRecord .cxx_destruct]
  -[DNDSContactRecord contactIdentifier]
  -[DNDSContactRecord phoneNumbers]
  -[DNDSContactRecord init]
  -[DNDSContactRecord isEqual:]
  -[DNDSContactRecord emailAddresses]
  -[DNDSContactRecord nickName]
  -[DNDSContactRecord mutableCopyWithZone:]
  -[DNDSContactRecord copyWithZone:]
  -[DNDSContactRecord _initWithContactIdentifier:firstName:middleName:lastName:nickName:organizationName:phoneNumbers:emailAddresses:]


DNDSMutableContactRecord : DNDSContactRecord
 @property  NSString *contactIdentifier
 @property  NSString *firstName
 @property  NSString *middleName
 @property  NSString *lastName
 @property  NSString *nickName
 @property  NSString *organizationName
 @property  NSSet *phoneNumbers
 @property  NSSet *emailAddresses

  // instance methods
  -[DNDSMutableContactRecord setEmailAddresses:]
  -[DNDSMutableContactRecord setOrganizationName:]
  -[DNDSMutableContactRecord setContactIdentifier:]
  -[DNDSMutableContactRecord setFirstName:]
  -[DNDSMutableContactRecord setNickName:]
  -[DNDSMutableContactRecord setLastName:]
  -[DNDSMutableContactRecord setMiddleName:]
  -[DNDSMutableContactRecord copyWithZone:]
  -[DNDSMutableContactRecord setPhoneNumbers:]


DNDSModeConfigurationsRecord : NSObject <NSCopying, NSMutableCopying, DNDSPartitionedBackingStoreRecord>
 @property  NSArray *modeConfigurations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSModeConfigurationsRecord newWithDictionaryRepresentation:context:]
  +[DNDSModeConfigurationsRecord migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  +[DNDSModeConfigurationsRecord newWithDictionaryRepresentation:partitionedDictionaryRepresentation:context:]
  +[DNDSModeConfigurationsRecord backingStoreWithFileURL:secureFileURL:]

  // instance methods
  -[DNDSModeConfigurationsRecord dictionaryRepresentationWithContext:]
  -[DNDSModeConfigurationsRecord _initWithRecord:]
  -[DNDSModeConfigurationsRecord .cxx_destruct]
  -[DNDSModeConfigurationsRecord modeForModeIdentifier:]
  -[DNDSModeConfigurationsRecord init]
  -[DNDSModeConfigurationsRecord isEqual:]
  -[DNDSModeConfigurationsRecord _initWithModeConfigurations:]
  -[DNDSModeConfigurationsRecord modeConfigurations]
  -[DNDSModeConfigurationsRecord triggersForModeIdentifier:]
  -[DNDSModeConfigurationsRecord mutableCopyWithZone:]
  -[DNDSModeConfigurationsRecord log:withMessage:]
  -[DNDSModeConfigurationsRecord configurationForModeIdentifier:]
  -[DNDSModeConfigurationsRecord copyWithZone:]
  -[DNDSModeConfigurationsRecord modeConfigurationForModeIdentifier:]


DNDSMutableModeConfigurationsRecord : DNDSModeConfigurationsRecord
  // instance methods
  -[DNDSMutableModeConfigurationsRecord setMode:forModeIdentifier:]
  -[DNDSMutableModeConfigurationsRecord setConfiguration:forModeIdentifier:]
  -[DNDSMutableModeConfigurationsRecord setModeConfiguration:forModeIdentifier:]
  -[DNDSMutableModeConfigurationsRecord setTriggers:forModeIdentifier:]
  -[DNDSMutableModeConfigurationsRecord copyWithZone:]


DNDSSyncEngine : NSObject <DNDSKeybagStateObserver, DNDSSysdiagnoseDataProvider, CKSyncEngineDataSource>
 @property  BOOL syncPreferenceEnabled
 @property  BOOL syncEnabled
 @property  BOOL syncAvailable
 @property  unsigned long cloudSyncState
 @property  BOOL hasLocalChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *sysdiagnoseDataIdentifier

  // class methods
  +[DNDSSyncEngine sharedInstance]

  // instance methods
  -[DNDSSyncEngine pairedDeviceDidChange]
  -[DNDSSyncEngine hasLocalChanges]
  -[DNDSSyncEngine sysdiagnoseDataIdentifier]
  -[DNDSSyncEngine _lock_setCurrentUserRecordID:]
  -[DNDSSyncEngine _lock_setCurrentAccountStatus:]
  -[DNDSSyncEngine _lock_isSyncEnabled]
  -[DNDSSyncEngine cloudSyncState]
  -[DNDSSyncEngine sysdiagnoseDataForDate:redacted:]
  -[DNDSSyncEngine setSyncPreferenceEnabled:]
  -[DNDSSyncEngine _zoneIDForRecord:]
  -[DNDSSyncEngine lastChanceRecordForRecordID:]
  -[DNDSSyncEngine syncEngine:failedToDeleteRecordWithID:error:]
  -[DNDSSyncEngine .cxx_destruct]
  -[DNDSSyncEngine fetchChanges:withCompletionHandler:]
  -[DNDSSyncEngine _lock_isSyncPreferenceEnabled]
  -[DNDSSyncEngine setTesting:]
  -[DNDSSyncEngine syncEngine:shouldFetchChangesForZoneID:]
  -[DNDSSyncEngine _migrateOldStoresWithSyncEnabledState:]
  -[DNDSSyncEngine isSyncEnabled]
  -[DNDSSyncEngine sync:withCompletionHandler:]
  -[DNDSSyncEngine initWithMetadataStore:lastChanceDataStore:keybag:syncEnabled:]
  -[DNDSSyncEngine _lock_purgeData]
  -[DNDSSyncEngine removeZoneWithID:]
  -[DNDSSyncEngine _initialSyncForDataSource:withZoneName:]
  -[DNDSSyncEngine _handleAccountFetchWithUpdatedUserRecordID:updatedAccountStatus:updatedEncryptionAvailable:updatedSyncEnabled:]
  -[DNDSSyncEngine sendChangesWithCompletionHandler:]
  -[DNDSSyncEngine initWithMetadataStore:lastChanceDataStore:syncEngine:keybag:syncEnabled:]
  -[DNDSSyncEngine _lock_dataSources]
  -[DNDSSyncEngine _lock_destroySyncEngine]
  -[DNDSSyncEngine syncEngine:failedToSaveRecord:error:]
  -[DNDSSyncEngine _lock_dataSourceForZoneID:]
  -[DNDSSyncEngine _lock_setEncryptionAvailable:]
  -[DNDSSyncEngine syncEngine:didDeleteRecordWithID:]
  -[DNDSSyncEngine setDataSource:forZoneName:]
  -[DNDSSyncEngine _fetchAccountStateWithCompletionHandler:]
  -[DNDSSyncEngine _cloudKitAccountChanged:]
  -[DNDSSyncEngine _initialSyncForDataSources]
  -[DNDSSyncEngine syncEngine:didSaveRecord:]
  -[DNDSSyncEngine addRecordZonesToSave:recordZoneIDsToDelete:]
  -[DNDSSyncEngine syncEngine:recordToSaveForRecordID:]
  -[DNDSSyncEngine handleDeletedRecordID:]
  -[DNDSSyncEngine _lock_currentAccountStatus]
  -[DNDSSyncEngine syncEngine:didFetchRecord:]
  -[DNDSSyncEngine _syncEngineQueue_updateAccountWithSyncEnabledState:]
  -[DNDSSyncEngine syncEngine:zoneWithIDWasDeleted:]
  -[DNDSSyncEngine purgeZoneWithID:]
  -[DNDSSyncEngine syncEngine:didUpdateMetadata:]
  -[DNDSSyncEngine syncEngine:zoneWithIDWasPurged:]
  -[DNDSSyncEngine _retryLastChanceRecords]
  -[DNDSSyncEngine isSyncPreferenceEnabled]
  -[DNDSSyncEngine _lock_dataSourceForRecord:]
  -[DNDSSyncEngine _updateAccountWithCurrentSyncEnabledState]
  -[DNDSSyncEngine _purgeDataFromDataSources]
  -[DNDSSyncEngine _lock_currentUserRecordID]
  -[DNDSSyncEngine _lock_isSyncAvailable]
  -[DNDSSyncEngine _lock_encryptionAvailable]
  -[DNDSSyncEngine _updateAccountWithSyncEnabledState:]
  -[DNDSSyncEngine _retryLastChanceRecordsForDataSource:withZoneName:]
  -[DNDSSyncEngine handleFetchedRecord:]
  -[DNDSSyncEngine _lock_syncEngine]
  -[DNDSSyncEngine syncEngine:recordWithIDWasDeleted:recordType:]
  -[DNDSSyncEngine addRecordIDsToSave:recordIDsToDelete:]
  -[DNDSSyncEngine isSyncAvailable]
  -[DNDSSyncEngine keybagDidUnlockForTheFirstTime:]


DNDSIDSRecordMetadata : NSObject <NSCopying, NSMutableCopying, DNDSBackingStoreRecord>
 @property  DNDSIDSRecordID *recordID
 @property  NSDate *lastModified
 @property  BOOL deleted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSIDSRecordMetadata newWithDictionaryRepresentation:context:]

  // instance methods
  -[DNDSIDSRecordMetadata lastModified]
  -[DNDSIDSRecordMetadata dictionaryRepresentationWithContext:]
  -[DNDSIDSRecordMetadata .cxx_destruct]
  -[DNDSIDSRecordMetadata recordID]
  -[DNDSIDSRecordMetadata isDeleted]
  -[DNDSIDSRecordMetadata isEqual:]
  -[DNDSIDSRecordMetadata mutableCopyWithZone:]
  -[DNDSIDSRecordMetadata copyWithZone:]
  -[DNDSIDSRecordMetadata initWithRecordID:lastModified:deleted:]
  -[DNDSIDSRecordMetadata _initWithRecordMetadata:]


DNDSMutableIDSRecordMetadata : DNDSIDSRecordMetadata
 @property  DNDSIDSRecordID *recordID
 @property  NSDate *lastModified
 @property  BOOL deleted

  // instance methods
  -[DNDSMutableIDSRecordMetadata setRecordID:]
  -[DNDSMutableIDSRecordMetadata setLastModified:]
  -[DNDSMutableIDSRecordMetadata copyWithZone:]
  -[DNDSMutableIDSRecordMetadata setDeleted:]


DNDSXPCTimer : NSObject
 @property  NSDate *date
 @property  NSString *serviceIdentifier
 @property  BOOL userVisible

  // instance methods
  -[DNDSXPCTimer setServiceIdentifier:]
  -[DNDSXPCTimer serviceIdentifier]
  -[DNDSXPCTimer .cxx_destruct]
  -[DNDSXPCTimer initWithFireDate:serviceIdentifier:userVisible:]
  -[DNDSXPCTimer isUserVisible]
  -[DNDSXPCTimer setDate:]
  -[DNDSXPCTimer setUserVisible:]
  -[DNDSXPCTimer date]


DNDSGamingTriggerManager : NSObject <DNDSBiomeTriggerManager>
 @property  <DNDSGamingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSGamingTriggerManager refresh]
  -[DNDSGamingTriggerManager setDataSource:]
  -[DNDSGamingTriggerManager .cxx_destruct]
  -[DNDSGamingTriggerManager _featureEnabled]
  -[DNDSGamingTriggerManager dataSource]
  -[DNDSGamingTriggerManager init]
  -[DNDSGamingTriggerManager _refreshWithMode:event:]
  -[DNDSGamingTriggerManager _configureTriggerWithMode:]


DNDSRemoteServiceProvider : NSObject <BSServiceConnectionListenerDelegate, DNDRemoteServiceServerProtocol, DNDRemoteMonitorServerProtocol>
 @property  <DNDSRemoteServiceProviderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSRemoteServiceProvider _removeConnection:]
  -[DNDSRemoteServiceProvider registerForGlobalConfigurationUpdatesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider setScheduleSettings:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider _clientDetailsForClientIdentifier:clientConnection:]
  -[DNDSRemoteServiceProvider handleModeAssertionUpdateResult:]
  -[DNDSRemoteServiceProvider didChangeFocusStatusSharingSettingForApplicationIdentifier:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider invalidateModeAssertionWithUUID:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getAppInfoForBundleIdentifier:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider takeModeAssertionWithDetails:requestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getPairSyncStateWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getCloudSyncStateWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider listener:didReceiveConnection:withContext:]
  -[DNDSRemoteServiceProvider setBehaviorSettings:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider registerForStateUpdatesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider .cxx_destruct]
  -[DNDSRemoteServiceProvider initWithClientDetailsProvider:]
  -[DNDSRemoteServiceProvider setPairSyncPreferenceEnabled:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider resolveBehaviorForEventDetails:requestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider handleStateUpdate:]
  -[DNDSRemoteServiceProvider activateModeWithDetails:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider setDelegate:]
  -[DNDSRemoteServiceProvider _queryStateWithCompletionHandler:]
  -[DNDSRemoteServiceProvider getAllModeAssertionsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider _registerOrMutateConnectionDetailsForClientConnection:handler:]
  -[DNDSRemoteServiceProvider handleUpdatedPhoneCallBypassSettings:]
  -[DNDSRemoteServiceProvider queryMeDeviceStateWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getScheduleSettingsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getUserAvailabilityInActiveModeForContactHandle:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getActiveModeAssertionWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider _iterateClientConnectionsToSendWithHandler:]
  -[DNDSRemoteServiceProvider _unregisterConnectionDetailsForClientConnection:]
  -[DNDSRemoteServiceProvider setPreventAutoReply:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getAllModesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider registerForSettingsUpdatesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider handleMeDeviceStateUpdate:]
  -[DNDSRemoteServiceProvider removeModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider publishStatusKitAvailabilityWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider _addConnection:]
  -[DNDSRemoteServiceProvider registerForAssertionUpdatesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getStateDumpWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider handleUpdatedModes:availableModes:]
  -[DNDSRemoteServiceProvider handleUpdatedBehaviorSettings:]
  -[DNDSRemoteServiceProvider getBehaviorSettingsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getPreventAutoReplyWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider delegate]
  -[DNDSRemoteServiceProvider getAvailableModesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider setCloudSyncPreferenceEnabled:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider resume]
  -[DNDSRemoteServiceProvider handleUpdatedPairSyncState:]
  -[DNDSRemoteServiceProvider registerForMeDeviceStateUpdatesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getAppInfoForBundleIdentifiers:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider dealloc]
  -[DNDSRemoteServiceProvider invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider queryStateWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider invalidate]
  -[DNDSRemoteServiceProvider syncModeConfigurationsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getModeConfigurationsWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider registerForModeSelectionUpdatesWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider setScreenIsShared:screenIsMirrored:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider _handleClientConnectionInvalidated:]
  -[DNDSRemoteServiceProvider _handleClientConnectionInterrupted:]
  -[DNDSRemoteServiceProvider handleUpdatedScheduleSettings:]
  -[DNDSRemoteServiceProvider handleUpdatedPreventAutoReplySetting:]
  -[DNDSRemoteServiceProvider queryStateForUpdateWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider setModeConfiguration:withRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider activeModeAssertionWithRequestDetails:completionHandler:]
  -[DNDSRemoteServiceProvider getAllowedModesForContactHandle:withRequestDetails:completionHandler:]


DNDSGlobalConfigurationStore : NSObject <DNDSBackingStoreDelegate, DNDSSyncEngineDataSource, DNDSIDSSyncEngineDataSource, DNDSGlobalConfigurationStoring>
 @property  <DNDSGlobalConfigurationStoreDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSGlobalConfigurationStore recordIDsForSyncEngine:]
  -[DNDSGlobalConfigurationStore _populateCKRecord:withGlobalConfiguration:]
  -[DNDSGlobalConfigurationStore _lock_prepareCKRecordToSave:]
  -[DNDSGlobalConfigurationStore _lock_updateConfigurationWithDNDSIDSRecord:]
  -[DNDSGlobalConfigurationStore syncEngine:failedToDeleteRecordWithID:error:]
  -[DNDSGlobalConfigurationStore .cxx_destruct]
  -[DNDSGlobalConfigurationStore syncEngine:recordTypeForRecordID:]
  -[DNDSGlobalConfigurationStore purgeRecordsForSyncEngine:]
  -[DNDSGlobalConfigurationStore _lock_purgeData]
  -[DNDSGlobalConfigurationStore recordIDsForIDSSyncEngine:]
  -[DNDSGlobalConfigurationStore setDelegate:]
  -[DNDSGlobalConfigurationStore _lock_prepareDNDSIDSRecordToSave:]
  -[DNDSGlobalConfigurationStore backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSGlobalConfigurationStore writeRecord:writePartition:error:]
  -[DNDSGlobalConfigurationStore purgeRecordsForIDSSyncEngine:]
  -[DNDSGlobalConfigurationStore writeRecord:error:]
  -[DNDSGlobalConfigurationStore _notifyDelegateOfConfigurationChange]
  -[DNDSGlobalConfigurationStore _createConfigurationFromCKRecord:]
  -[DNDSGlobalConfigurationStore syncEngine:prepareRecordToSave:]
  -[DNDSGlobalConfigurationStore globalConfigurationSyncManager:didReceiveUpdatedGlobalConfiguration:]
  -[DNDSGlobalConfigurationStore _lock_writeRecord:writePartition:error:]
  -[DNDSGlobalConfigurationStore syncEngine:recordWithIDWasDeleted:]
  -[DNDSGlobalConfigurationStore syncEngine:didFetchRecord:]
  -[DNDSGlobalConfigurationStore delegate]
  -[DNDSGlobalConfigurationStore idsSyncEngine:recordWithIDWasDeleted:]
  -[DNDSGlobalConfigurationStore initWithBackingStore:syncEngine:idsSyncEngine:]
  -[DNDSGlobalConfigurationStore _createConfigurationFromDNDSIDSRecord:]
  -[DNDSGlobalConfigurationStore _lock_mutableExistingConfigurationInStore:]
  -[DNDSGlobalConfigurationStore _lock_existingConfiguration]
  -[DNDSGlobalConfigurationStore readRecordWithError:]
  -[DNDSGlobalConfigurationStore syncEngine:wantsRecord:]
  -[DNDSGlobalConfigurationStore _purgeData]
  -[DNDSGlobalConfigurationStore syncEngine:resolveConflictBetweenClientRecord:andServerRecord:]
  -[DNDSGlobalConfigurationStore _lock_updateConfigurationWithCKRecord:]
  -[DNDSGlobalConfigurationStore idsSyncEngine:prepareRecordToSave:]
  -[DNDSGlobalConfigurationStore idsSyncEngine:didFetchRecord:]
  -[DNDSGlobalConfigurationStore syncEngine:zoneWithIDWasDeleted:removingRecordIDs:]
  -[DNDSGlobalConfigurationStore _populateDNDSIDSRecord:withGlobalConfiguration:]


DNDSKeybag : NSObject <DNDSKeybagStateProviding>
 @property  BOOL isLocked
 @property  BOOL hasUnlockedSinceBoot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DNDSKeybag sharedInstance]

  // instance methods
  -[DNDSKeybag hasUnlockedSinceBoot]
  -[DNDSKeybag .cxx_destruct]
  -[DNDSKeybag init]
  -[DNDSKeybag isLocked]
  -[DNDSKeybag _queue_handleKeybagStatusChanged]
  -[DNDSKeybag addObserver:]
  -[DNDSKeybag addPriorityObserver:]
  -[DNDSKeybag hasUnlockedSinceBootForObserver:]
  -[DNDSKeybag _hasUnlockedSinceBootForObserver:]
  -[DNDSKeybag _beginObservingKeybag]
  -[DNDSKeybag dealloc]
  -[DNDSKeybag _queue_handleFirstUnlock]
  -[DNDSKeybag removeObserver:]


DNDSServer : NSObject <DNDSAppForegroundTriggerManagerDataSource, DNDSDrivingTriggerManagerDataSource, DNDSGamingTriggerManagerDataSource, DNDSMindfulnessTriggerManagerDataSource, DNDSSleepingTriggerManagerDataSource, DNDSSmartTriggerManagerDataSource, DNDSWorkoutTriggerManagerDataSource, DNDSGlobalConfigurationManagerDelegate, DNDSEventBehaviorResolverDataSource, DNDSLifetimeMonitorDataSource, DNDSLocationLifetimeMonitorDataSource, DNDSScheduleLifetimeMonitorDataSource, DNDSLifetimeMonitorDelegate, DNDSRemoteServiceProviderDelegate, DNDSRemoteAvailabilityServiceProviderDelegate, DNDSAssertionSyncManagerDataSource, DNDSAssertionSyncManagerDelegate, DNDSLegacyAssertionSyncManagerDataSource, DNDSSettingsSyncManagerDataSource, DNDSSettingsSyncManagerDelegate, DNDSScheduleManagerDataSource, DNDSSettingsManagerDelegate, DNDSPairedDeviceStateMonitorDelegate, DNDSModeConfigurationManagerDelegate, DNDSReachabilityDelegate, DNDSMeDeviceServiceListener>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long lockState
 @property  unsigned long lostModeState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSServer setLockState:]
  -[DNDSServer currentStateForEventBehaviorResolver:]
  -[DNDSServer remoteServiceProvider:resolveBehaviorForEventDetails:clientDetails:date:error:]
  -[DNDSServer _setScheduleTrigger:forModeConfigurationWithIdentifier:]
  -[DNDSServer lockState]
  -[DNDSServer remoteServiceProvider:assertionWithClientIdentifer:error:]
  -[DNDSServer eventBehaviorResolver:isAvailabilityActiveForBundleIdentifier:]
  -[DNDSServer currentUILockStateForEventBehaviorResolver:]
  -[DNDSServer globalConfigurationManager:didUpdatePhoneCallBypassSettings:]
  -[DNDSServer globalConfigurationManager:didUpdatePreventAutoReplySetting:]
  -[DNDSServer remoteServiceProvider:syncModeConfigurationsReturningError:]
  -[DNDSServer lostModeState]
  -[DNDSServer remoteServiceProvider:behaviorSettingsWithError:]
  -[DNDSServer syncManager:didReceiveUpdatedPhoneCallBypassSettings:]
  -[DNDSServer _invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:]
  -[DNDSServer layoutIsLocked:]
  -[DNDSServer pairedDeviceStateMonitor:pairingChangedFromDevice:toDevice:]
  -[DNDSServer lifetimeMonitor:registerTimerHandlerWithServiceIdentifier:handler:]
  -[DNDSServer eventBehaviorResolver:bypassSettingsForClientIdentifier:]
  -[DNDSServer remoteServiceProvider:getAppInfoForBundleIdentifier:withError:]
  -[DNDSServer syncManager:deviceForDeviceIdentifier:]
  -[DNDSServer syncManager:prepareForSyncToDevices:completionHandler:]
  -[DNDSServer remoteServiceProvider:availableModesReturningError:]
  -[DNDSServer remoteServiceProvider:currentMeDeviceStateWithError:]
  -[DNDSServer .cxx_destruct]
  -[DNDSServer remoteServiceProvider:setScreenIsShared:screenIsMirrored:withError:]
  -[DNDSServer drivingModeForDrivingTriggerManager:]
  -[DNDSServer _queue_handlePairedDeviceAndSyncSettingsChange]
  -[DNDSServer pairedDevicesForSyncManager:]
  -[DNDSServer _setDefaultScheduleTriggerWithScheduleSettings:]
  -[DNDSServer settingsManager:didReceiveUpdatedScheduleSettings:]
  -[DNDSServer remoteServiceProvider:userAvailabilityInActiveModeForContactHandle:withError:]
  -[DNDSServer triggerManager:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:]
  -[DNDSServer remoteServiceProvider:getCloudSyncStateReturningError:]
  -[DNDSServer _scheduleSettingsFromDefaultScheduleTrigger]
  -[DNDSServer _setLostModeState:error:]
  -[DNDSServer init]
  -[DNDSServer _createDefaultModeForWorkoutTriggerIfNecessary]
  -[DNDSServer lifetimeMonitor:takeModeAssertionWithDetails:clientIdentifier:error:]
  -[DNDSServer locationTriggerConfigurationForLifetimeMonitor:]
  -[DNDSServer appForegroundTriggerConfigurationForAppForegroundTriggerManager:]
  -[DNDSServer scheduleSettingsForSyncManager:]
  -[DNDSServer lifetimeMonitor:setTimer:]
  -[DNDSServer remoteServiceProvider:setScheduleSettings:withError:]
  -[DNDSServer _handleSignificantTimeChange]
  -[DNDSServer settingsManager:didReceiveUpdatedSyncSettings:]
  -[DNDSServer remoteServiceProvider:didChangeFocusStatusSharingSettingForApplicationIdentifier:]
  -[DNDSServer _scheduleSettingsForModeConfigurations]
  -[DNDSServer remoteServiceProvider:allActiveModeAssertionsWithError:]
  -[DNDSServer remoteServiceProvider:allModesReturningError:]
  -[DNDSServer remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:error:]
  -[DNDSServer _forceConfigurationSyncIfNeededWithUpdateResult:]
  -[DNDSServer workoutModeForWorkoutTriggerManager:]
  -[DNDSServer modesSupportingSmartEntryForSmartTriggerManager:]
  -[DNDSServer reachabilityChangedTo:]
  -[DNDSServer triggerManager:latestInvalidationWithClientIdentifer:error:]
  -[DNDSServer remoteServiceProvider:setCloudSyncPreferenceEnabled:withError:]
  -[DNDSServer _scheduleSettingsMatchingTrigger:]
  -[DNDSServer remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:clientIdentifier:error:]
  -[DNDSServer remoteAvailabilityServiceProvider:isLocalUserAvailableForApplicationIdentifier:withError:]
  -[DNDSServer pairedDeviceStateMonitor:cloudPairingChangedFromDevices:toDevices:]
  -[DNDSServer _queue_validateIDSSyncEngine]
  -[DNDSServer remoteServiceProvider:publishStatusKitAvailabilityReturningError:]
  -[DNDSServer lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:expirationDate:]
  -[DNDSServer setLostModeState:]
  -[DNDSServer settingsManager:didReceiveUpdatedBehaviorSettings:]
  -[DNDSServer currentStateForLegacyAssertionSyncManager:]
  -[DNDSServer modeConfigurationManager:didUpdateAvailableModes:]
  -[DNDSServer remoteServiceProvider:invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:]
  -[DNDSServer remoteServiceProvider:setPairSyncPreferenceEnabled:withError:]
  -[DNDSServer remoteServiceProvider:modeConfigurationsWithError:]
  -[DNDSServer sleepingModeForSleepingTriggerManager:]
  -[DNDSServer eventBehaviorResolver:configurationForModeIdentifier:]
  -[DNDSServer currentlyActivePairedDeviceForSyncManager:]
  -[DNDSServer remoteServiceProvider:getPreventAutoReplyReturningError:]
  -[DNDSServer _migrateDefaultDoNotDisturbModeIfNeeded]
  -[DNDSServer remoteServiceProvider:getPairSyncStateReturningError:]
  -[DNDSServer mindfulnessModeForMindfulnessTriggerManager:]
  -[DNDSServer createWorkoutModeForWorkoutTriggerManager:]
  -[DNDSServer triggerManager:takeModeAssertionWithDetails:clientIdentifier:error:]
  -[DNDSServer scheduleSettingsByModeIdentifierForScheduleLifetimeMonitor:]
  -[DNDSServer resume]
  -[DNDSServer remoteServiceProvider:modeConfigurationForModeIdentifier:withError:]
  -[DNDSServer remoteServiceProvider:getAppInfoForBundleIdentifiers:withError:]
  -[DNDSServer gamingModeForGamingTriggerManager:]
  -[DNDSServer _allModes]
  -[DNDSServer syncManager:updateOutboundModeAssertion:]
  -[DNDSServer _scheduleTriggerMatchingSettings:]
  -[DNDSServer remoteServiceProvider:latestInvalidationWithClientIdentifer:error:]
  -[DNDSServer settingsManager:didReceiveUpdatedPhoneCallBypassSettings:]
  -[DNDSServer setWorkoutTriggerEnabled:forWorkoutTriggerManager:]
  -[DNDSServer _queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:source:]
  -[DNDSServer _stateSystemSnapshot]
  -[DNDSServer remoteServiceProvider:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:]
  -[DNDSServer remoteServiceProvider:activeAssertionWithClientIdentifer:error:]
  -[DNDSServer syncManager:performModeAssertionUpdatesWithHandler:]
  -[DNDSServer setUILockState:error:]
  -[DNDSServer modeConfigurationManager:didModifyExceptionsForContacts:forModeConfiguration:]
  -[DNDSServer triggerManager:performModeAssertionUpdatesWithHandler:]
  -[DNDSServer scheduleSettingsByModeIdentifierForScheduleManager:]
  -[DNDSServer isCloudSyncDisabledForSyncManager:]
  -[DNDSServer remoteServiceProvider:currentStateWithError:]
  -[DNDSServer lifetimeMonitor:modeAssertionsWithLifetimeClass:]
  -[DNDSServer remoteServiceProvider:setPreventAutoReply:withError:]
  -[DNDSServer remoteServiceProvider:removeModeConfigurationWithModeIdentifier:withError:]
  -[DNDSServer remoteServiceProvider:scheduleSettingsWithError:]
  -[DNDSServer _activeDateIntervalForModeAssertion:currentlyActive:]
  -[DNDSServer _queue_resume]
  -[DNDSServer triggerManager:assertionsWithClientIdentifer:error:]
  -[DNDSServer syncManager:scheduleSettingsForModeIdentifier:]
  -[DNDSServer syncManager:didReceiveUpdatedScheduleSettings:]
  -[DNDSServer _migrateBypassSettingsIfNeeded]
  -[DNDSServer meDeviceService:didReceiveMeDeviceStateUpdate:]
  -[DNDSServer remoteServiceProvider:setBehaviorSettings:withError:]
  -[DNDSServer remoteServiceProvider:setModeConfiguration:withError:]
  -[DNDSServer _setDimsLockScreenSetting:forModeConfigurationWithIdentifier:]
  -[DNDSServer remoteServiceProvider:allowedModesForContactHandle:withError:]
  -[DNDSServer _updateModeAssertionManagerAndRefreshLifetimesAndStateWithHandler:error:]
  -[DNDSServer phoneCallBypassSettingsForSyncManager:]
  -[DNDSServer activeAssertionsDidChangeForLifetimeMonitor:]
  -[DNDSServer keybagDidUnlockForTheFirstTime:]


DNDSSmartTriggerManager : NSObject <DNDSBiomeTriggerManager>
 @property  <DNDSSmartTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSSmartTriggerManager refresh]
  -[DNDSSmartTriggerManager setDataSource:]
  -[DNDSSmartTriggerManager .cxx_destruct]
  -[DNDSSmartTriggerManager _configureSmartTriggerWithSupportedModes:]
  -[DNDSSmartTriggerManager dataSource]
  -[DNDSSmartTriggerManager init]
  -[DNDSSmartTriggerManager _refreshWithSupportedModes:event:]
  -[DNDSSmartTriggerManager _refreshIfNeccessaryForEvent:]


DNDSGlobalConfigurationManager : NSObject <DNDSSysdiagnoseDataProvider, DNDSBackingStoreDelegate, DNDSGlobalConfigurationStoreDelegate>
 @property  <DNDSGlobalConfigurationManagerDelegate> *delegate
 @property  NSString *sysdiagnoseDataIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DNDSGlobalConfigurationManager sysdiagnoseDataIdentifier]
  -[DNDSGlobalConfigurationManager getConfigurationReturningError:]
  -[DNDSGlobalConfigurationManager setConfiguration:withError:]
  -[DNDSGlobalConfigurationManager sysdiagnoseDataForDate:redacted:]
  -[DNDSGlobalConfigurationManager .cxx_destruct]
  -[DNDSGlobalConfigurationManager setDelegate:]
  -[DNDSGlobalConfigurationManager backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:]
  -[DNDSGlobalConfigurationManager getPreventAutoReplyReturningError:]
  -[DNDSGlobalConfigurationManager setPreventAutoReply:withError:]
  -[DNDSGlobalConfigurationManager globalConfigurationStore:didUpdatePreventAutoReplySetting:]
  -[DNDSGlobalConfigurationManager delegate]
  -[DNDSGlobalConfigurationManager _writeConfiguration:error:]
  -[DNDSGlobalConfigurationManager initWithBackingStore:]
  -[DNDSGlobalConfigurationManager dealloc]
  -[DNDSGlobalConfigurationManager fallbackConfiguration]


DNDAppInfo(Record)
	// class methods
	+[DNDAppInfo(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDAppInfo(Record) dictionaryRepresentationWithContext:]

DNDModeAssertion(Resolution)
	// class methods
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsWithClientIdentifiers:]
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsWithDeviceIdentifier:]
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsWithUUIDs:]
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsWithModeIdentifiersNotContainedIn:]
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsWithLifetimeClass:]
	+[DNDModeAssertion(Resolution) predicateForModeAssertionsTakenBeforeDate:]

	// instance methods
	-[DNDModeAssertion(Resolution) resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:]
	-[DNDModeAssertion(Resolution) isUserInitiated]
	-[DNDModeAssertion(Resolution) isInternalScheduled]
	-[DNDModeAssertion(Resolution) isClientScheduled]

DNDModeAssertionInvalidation(Resolution)
	// class methods
	+[DNDModeAssertionInvalidation(Resolution) predicateForModeAssertionInvalidationsWithAssertionClientIdentifiers:]

	// instance methods
	-[DNDModeAssertionInvalidation(Resolution) resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:]
	-[DNDModeAssertionInvalidation(Resolution) isInternalScheduled]
	-[DNDModeAssertionInvalidation(Resolution) isUserInvalidated]

DNDModeAssertionSource(Resolution)
	// instance methods
	-[DNDModeAssertionSource(Resolution) resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:]

DNDContact(Record)
	// class methods
	+[DNDContact(Record) keysToFetch]
	+[DNDContact(Record) contactWithCNContact:]
	+[DNDContact(Record) contactForRecord:]

	// instance methods
	-[DNDContact(Record) makeRecord]
	-[DNDContact(Record) sanitizedContactWithContactStore:withError:]
	-[DNDContact(Record) needsSanitization]

NSDateInterval(Schedule)
	// class methods
	+[NSDateInterval(Schedule) dnds_dateIntervalForScheduleSettings:date:calendar:]
	+[NSDateInterval(Schedule) dnds_dateIntervalUntilEndOfScheduleForScheduleSettings:startDate:calendar:]

	// instance methods
	-[NSDateInterval(Schedule) dnds_lifetimePhaseForDate:]

(DNDSDateHelper)
	// class methods
	+[(DNDSDateHelper) dnds_numberWithDate:]
	+[(DNDSDateHelper) dnds_safeNumberWithDate:]

	// instance methods
	-[(DNDSDateHelper) dnds_dateValue]

CNContact(DNDContactHandle)
	// class methods
	+[CNContact(DNDContactHandle) dnds_predicateForContactsMatchingEventSender:]

DNDContactHandle(DNDSEventBehaviorEvolver)
	// instance methods
	-[DNDContactHandle(DNDSEventBehaviorEvolver) isPopulated]

DNDBehaviorSettings(Record)
	// class methods
	+[DNDBehaviorSettings(Record) settingsForRecord:]

	// instance methods
	-[DNDBehaviorSettings(Record) makeRecord]

DNDState(Defaults)
	// class methods
	+[DNDState(Defaults) fallbackState]

DNDBypassSettings(Record)
	// class methods
	+[DNDBypassSettings(Record) settingsForRecord:]

	// instance methods
	-[DNDBypassSettings(Record) makeRecord]

(BackingStores)
	// class methods
	+[(BackingStores) dnds_locationAssertionExplicitRegionFileURL]
	+[(BackingStores) dnds_locationAssertionUntilExitRegionFileURL]
	+[(BackingStores) dnds_localAssertionBackingStoreFileURL]
	+[(BackingStores) dnds_settingsBackingStoreFileURL]
	+[(BackingStores) dnds_metricsBackingStoreFileURL]
	+[(BackingStores) dnds_legacySettingsFileURL]
	+[(BackingStores) dnds_modeConfigurationsBackingStoreFileURL]
	+[(BackingStores) dnds_modeConfigurationsSecureBackingStoreFileURL]
	+[(BackingStores) dnds_globalConfigurationBackingStoreFileURL]
	+[(BackingStores) dnds_placeholderModesLocalBackingStoreFileURL]
	+[(BackingStores) dnds_syncEngineMetadataFileURL]
	+[(BackingStores) dnds_syncEngineLastChanceFileURL]
	+[(BackingStores) dnds_idsSyncEngineMetadataFileURL]
	+[(BackingStores) dnds_assertionSyncMetadataFileURL]
	+[(BackingStores) dnds_meDeviceStoreFileURL]

DNDApplicationConfiguration(Record)
	// class methods
	+[DNDApplicationConfiguration(Record) configurationForRecord:]

	// instance methods
	-[DNDApplicationConfiguration(Record) makeRecord]

NSKeyedArchiver(LegacySupport)
	// class methods
	+[NSKeyedArchiver(LegacySupport) dnds_secureLegacyArchiver]

NSKeyedUnarchiver(LegacySupport)
	// class methods
	+[NSKeyedUnarchiver(LegacySupport) dnds_secureLegacyUnarchiverForReadingFromData:error:]

DNDApplicationIdentifier(Record)
	// class methods
	+[DNDApplicationIdentifier(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDApplicationIdentifier(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationTrigger(Record)
	// class methods
	+[DNDModeConfigurationTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationTrigger(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationAppForegroundTrigger(Record)
	// class methods
	+[DNDModeConfigurationAppForegroundTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationAppForegroundTrigger(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationScheduleTrigger(Record)
	// class methods
	+[DNDModeConfigurationScheduleTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationScheduleTrigger(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationLocationTrigger(Record)
	// class methods
	+[DNDModeConfigurationLocationTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationLocationTrigger(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationSmartTrigger(Record)
	// class methods
	+[DNDModeConfigurationSmartTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationSmartTrigger(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationWorkoutTrigger(Record)
	// class methods
	+[DNDModeConfigurationWorkoutTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationWorkoutTrigger(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationMindfulnessTrigger(Record)
	// class methods
	+[DNDModeConfigurationMindfulnessTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationMindfulnessTrigger(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationGameControllerTrigger(Record)
	// class methods
	+[DNDModeConfigurationGameControllerTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationGameControllerTrigger(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationSleepingTrigger(Record)
	// class methods
	+[DNDModeConfigurationSleepingTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationSleepingTrigger(Record) dictionaryRepresentationWithContext:]

DNDModeConfigurationDrivingTrigger(Record)
	// class methods
	+[DNDModeConfigurationDrivingTrigger(Record) newWithDictionaryRepresentation:context:]

	// instance methods
	-[DNDModeConfigurationDrivingTrigger(Record) dictionaryRepresentationWithContext:]

(Batch)
	// instance methods
	-[(Batch) enumerateBatchesOfSize:handler:]

NPSDomainAccessor(DNDSLegacySettingsSyncManager)
	// instance methods
	-[NPSDomainAccessor(DNDSLegacySettingsSyncManager) dnds_bypassSettings]
	-[NPSDomainAccessor(DNDSLegacySettingsSyncManager) dnds_setBypassSettings:]
	-[NPSDomainAccessor(DNDSLegacySettingsSyncManager) dnds_scheduleSettingsWithLastUpdated:]
	-[NPSDomainAccessor(DNDSLegacySettingsSyncManager) dnds_setScheduleSettings:]

<DEREK BUG Categories!>(DNDSBackingStoreDictionaryContext)
	// instance methods
	-[<DEREK BUG Categories!>(DNDSBackingStoreDictionaryContext) setDictionaryRepresentationOfRecord:forKey:context:]
	-[<DEREK BUG Categories!>(DNDSBackingStoreDictionaryContext) dnds_setSafeLocalDateForTimestamp:key:]

DNDSenderConfiguration(Contacts)
	// class methods
	+[DNDSenderConfiguration(Contacts) configurationForRecord:]

	// instance methods
	-[DNDSenderConfiguration(Contacts) makeRecord]
	-[DNDSenderConfiguration(Contacts) sanitizedConfigurationWithContactStore:]

CNContactStore(Sanitization)
	// instance methods
	-[CNContactStore(Sanitization) sanitizeContacts:]
	-[CNContactStore(Sanitization) fetchContactsWithIdentifiers:error:]

DNDMode(Record)
	// class methods
	+[DNDMode(Record) modeForRecord:]

	// instance methods
	-[DNDMode(Record) makeRecord]

(DNDModeAssertionLifetimeTypeHelper)
	// class methods
	+[(DNDModeAssertionLifetimeTypeHelper) dnds_stringForLifetimeType:]
	+[(DNDModeAssertionLifetimeTypeHelper) dnds_stringForScheduleLifetimeBehavior:]
	+[(DNDModeAssertionLifetimeTypeHelper) dnds_stringForAssertionReason:]
	+[(DNDModeAssertionLifetimeTypeHelper) dnds_stringForInvalidationReason:]
	+[(DNDModeAssertionLifetimeTypeHelper) dnds_stringForInvalidationReasonOverride:]
	+[(DNDModeAssertionLifetimeTypeHelper) dnds_stringForPredicateType:]

	// instance methods
	-[(DNDModeAssertionLifetimeTypeHelper) dnds_lifetimeTypeValue]
	-[(DNDModeAssertionLifetimeTypeHelper) dnds_scheduleLifetimeBehaviorValue]
	-[(DNDModeAssertionLifetimeTypeHelper) dnds_assertionReasonValue]
	-[(DNDModeAssertionLifetimeTypeHelper) dnds_invalidationReasonValue]
	-[(DNDModeAssertionLifetimeTypeHelper) dnds_invalidationReasonOverrideValue]
	-[(DNDModeAssertionLifetimeTypeHelper) dnds_predicateTypeValue]

IDSDevice(DNDServer)
	// instance methods
	-[IDSDevice(DNDServer) _dnds_pairedDeviceClass]
	-[IDSDevice(DNDServer) _dnds_minorBuildVersion]
	-[IDSDevice(DNDServer) _dnds_syncProtocolVersion]
	-[IDSDevice(DNDServer) _dnds_isIOS14EraOS]

DNDConfiguration(Record)
	// class methods
	+[DNDConfiguration(Record) configurationForRecord:secureRecord:]

	// instance methods
	-[DNDConfiguration(Record) makeRecord]
	-[DNDConfiguration(Record) makeSecureRecord]

(DoNotDisturbServer)
	// instance methods
	-[(DoNotDisturbServer) dnds_isOutOfSpaceError]

BSServiceConnection(Entitlements)
	// instance methods
	-[BSServiceConnection(Entitlements) dnds_hasUserNotificationsCommunicationEntitlement]
	-[BSServiceConnection(Entitlements) dnds_hasAnyValidEntitlement]
	-[BSServiceConnection(Entitlements) dnds_hasBehaviorResolutionEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasEntitlementsToRequestAssertionWithDetails:clientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasModeAssertionEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasStateRequestEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasStateUpdatesEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasAuxiliaryStateModificationEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasSettingsRequestEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasSettingsModificationEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasSettingsUpdatesEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasModeConfigurationModificationEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasModeConfigurationRequestEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasModeConfigurationAvailabilityEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasModeConfigurationUpdatesEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasActiveModeUpdatesEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) dnds_hasMeDeviceStateEntitlementForClientIdentifier:]
	-[BSServiceConnection(Entitlements) _dnds_safeStringArrayEntitlementForKey:]

DNDModeConfiguration(Record)
	// class methods
	+[DNDModeConfiguration(Record) modeConfigurationForRecord:]

	// instance methods
	-[DNDModeConfiguration(Record) makeRecord]

01 00 0900 /System/Library/PrivateFrameworks/AvailabilityKit.framework/AvailabilityKit: AKAvailability 
01 00 0900 /System/Library/PrivateFrameworks/AvailabilityKit.framework/AvailabilityKit: AKAvailabilityInvitation 
01 00 1600 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMBiomeScheduler 
01 00 1600 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMInferredModeStream 
01 00 1600 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMStreams 
01 00 1600 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMUserFocusComputedModeEvent 
01 00 1600 /System/Library/PrivateFrameworks/BiomeStreams.framework/BiomeStreams: BMUserFocusComputedModeStream 
01 00 1500 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSPlatform 
01 00 1700 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnection 
01 00 1700 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceConnectionListener 
01 00 1700 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServiceQuality 
01 00 1700 /System/Library/PrivateFrameworks/BoardServices.framework/BoardServices: BSServicesConfiguration 
01 00 0500 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARAutomaticDNDStatus 
01 00 1800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 1800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 1800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 1800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 1800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKSyncEngine 
01 00 1800 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKSyncEngineConfiguration 
01 00 1b00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLCircularRegion 
01 00 1b00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 1900 /System/Library/Frameworks/Contacts.framework/Contacts: CNChangeHistoryFetchRequest 
01 00 1900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 1900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFetchRequest 
01 00 1900 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 1900 /System/Library/Frameworks/Contacts.framework/Contacts: CNFavorites 
01 00 1900 /System/Library/Frameworks/Contacts.framework/Contacts: CNGroup 
01 00 1900 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 0f00 /System/Library/PrivateFrameworks/Categories.framework/Categories: CTCategories 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDAppInfo 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDApplicationConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDApplicationIdentifier 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDBehaviorSettings 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDBypassSettings 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDClientEventBehavior 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDContact 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDContactHandle 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDDevice 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDDiffBuilder 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMeDeviceState 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMode 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertion 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionCalendarEventLifetime 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionCurrentLocationLifetime 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionDateIntervalLifetime 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionDetails 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionExplicitRegionLifetime 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionInvalidation 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionLifetime 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionScheduleLifetime 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeAssertionSource 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationAppForegroundTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationDrivingTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationGameControllerTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationLocationTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationMindfulnessTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationScheduleTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationSleepingTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationSmartTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDModeConfigurationWorkoutTrigger 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableAppInfo 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableApplicationConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableBehaviorSettings 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableBypassSettings 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableContact 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableContactHandle 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableModeAssertionDetails 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableModeAssertionInvalidationDetails 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableModeConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableScheduleTime 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableScheduleTimePeriod 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDMutableSenderConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDScheduleSettings 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDSenderConfiguration 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDState 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDStateModeAssertionMetadata 
01 00 1000 /System/Library/PrivateFrameworks/DoNotDisturb.framework/DoNotDisturb: DNDStateUpdate 
01 00 1c00 /System/Library/Frameworks/EventKit.framework/EventKit: EKEventStore 
01 00 1f00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitor 
01 00 1f00 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSDisplayLayoutMonitorConfiguration 
01 00 1d00 /System/Library/PrivateFrameworks/FindMyDevice.framework/FindMyDevice: FMDFMIPManager 
01 00 0d00 /System/Library/PrivateFrameworks/FMF.framework/FMF: FMFSession 
01 00 2000 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSDevice 
01 00 2000 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSServerBag 
01 00 2000 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INAppInfo 
01 00 1200 /System/Library/PrivateFrameworks/IntentsCore.framework/IntentsCore: INCExtensionConnection 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INFocusStatus 
01 00 1300 /System/Library/Frameworks/Intents.framework/Intents: INShareFocusStatusIntent 
01 00 1400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 1400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 1400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 0200 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSDomainAccessor 
01 00 0200 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 0400 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2100 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCache 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLRequest 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 1e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2300 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0a00 /System/Library/PrivateFrameworks/StatusKit.framework/StatusKit: SKHandle 
01 00 0a00 /System/Library/PrivateFrameworks/StatusKit.framework/StatusKit: SKStatusPublishingService 
01 00 0600 /System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus: STFocusStatusDomainPublisher 
01 00 0c00 /System/Library/PrivateFrameworks/UserNotificationsSettings.framework/UserNotificationsSettings: UNNotificationSettingsCenter 
