|| __DATA.__common _HMDCoreAnalyticsLogObserverConfigurationDataHistogramBins
|| __DATA.__common _HMDCoreAnalyticsLogObserverHighVolumeHistogramBins
|| __DATA.__common _HMDCoreAnalyticsLogObserverLatencyHistogramBins
|| __DATA.__common _HMDCoreAnalyticsLogObserverLowVolumeHistogramBins
|| __DATA.__common _HMDCoreAnalyticsLogObserverMemoryHistogramBins
|| __DATA.__common _HMDCoreAnalyticsLogObserverSuccessRateHistogramBins
|| __DATA.__data _CODER_RemoteLoginMessage_Error
|| __DATA.__data _CODER_RemoteLoginMessage_SessionID
|| __DATA.__data _CODER_account_KEY
|| __DATA.__data _CODER_altDSID_KEY
|| __DATA.__data _CODER_companionDevice_KEY
|| __DATA.__data _CODER_passwordToken_KEY
|| __DATA.__data _CODER_proxyDevice_KEY
|| __DATA.__data _CODER_rawPassword_KEY
|| __DATA.__data _CODER_targetedAccountType_KEY
|| __DATA.__data _CODER_username_KEY
|| __DATA.__data _HMDApplicationUninstalledNotification
|| __DATA.__data _HMDBulletinBoardNotificationEnableStateDidChange
|| __DATA.__data _HMDDeviceSetupManagerUpdatedRunningNotification
|| __DATA.__data _HMDLocationAuthorizationChangedNotification
|| __DATA.__data _HMDLostModeManagerUpdatedNotification
|| __DATA.__data _HMDMediaSystemAddedNotification
|| __DATA.__data _HMDMediaSystemRemovedNotification
|| __DATA.__data _HMDProcessInfoStateDidChangeNotification
|| __DATA.__data _HMDSoftwareUpdateAvailableNotification
|| __DATA.__data _HMDSoftwareUpdateDocumentationAssetStateUpdatedNotification
|| __DATA.__data _HMDSymptomManagerCurrentDeviceSymptomsChangedNotification
|| __DATA.__data _HomeKitCameraIDSSessionSetup_idsSessionInvitationReceived
|| __DATA.__data _HomeKitCameraIDSSessionSetup_idsSessionInvitationSent
|| __DATA.__data _HomeKitCameraIDSSessionSetup_idsSessionStartedOnInitiator
|| __DATA.__data _HomeKitCameraIDSSessionSetup_idsSessionStartedOnReceiver
|| __DATA.__data _HomeKitCameraSnapshotIDSTransfer_receivedImage
|| __DATA.__data _HomeKitCameraSnapshotIDSTransfer_sentImage
|| __DATA.__data _HomeKitCameraSnapshotMessaging_receivedSnapshotRequest
|| __DATA.__data _HomeKitCameraSnapshotMessaging_sentSnapshotRequest
|| __DATA.__data _HomeKitCameraSnapshotMessaging_sentSnapshotResponse
|| __DATA.__data _HomeKitCameraSnapshot_receivedSnapshotFromAccessory
|| __DATA.__data _HomeKitCameraSnapshot_sentSnapshotRequestToAccessory
|| __DATA.__data _HomeKitCameraStreamConfigure_audioCodec
|| __DATA.__data _HomeKitCameraStreamConfigure_cryptoSuite
|| __DATA.__data _HomeKitCameraStreamConfigure_framerate
|| __DATA.__data _HomeKitCameraStreamConfigure_resolution
|| __DATA.__data _HomeKitCameraStreamConfigure_sampleRate
|| __DATA.__data _HomeKitCameraStreamIDSConnSetupParameters_connectionComplete
|| __DATA.__data _HomeKitCameraStreamIDSConnSetupParameters_connectionRequested
|| __DATA.__data _HomeKitCameraStreamIDSConnSetup_audioConnection
|| __DATA.__data _HomeKitCameraStreamIDSConnSetup_keepaliveConnection
|| __DATA.__data _HomeKitCameraStreamIDSConnSetup_videoConnection
|| __DATA.__data _HomeKitCameraStreamMessaging_receivedConnSetup
|| __DATA.__data _HomeKitCameraStreamMessaging_receivedNegotiationRequest
|| __DATA.__data _HomeKitCameraStreamMessaging_receivedStartRequest
|| __DATA.__data _HomeKitCameraStreamMessaging_sentConnSetup
|| __DATA.__data _HomeKitCameraStreamMessaging_sentNegotiationRequest
|| __DATA.__data _HomeKitCameraStreamMessaging_sentNegotiationResponse
|| __DATA.__data _HomeKitCameraStreamMessaging_sentStartRequest
|| __DATA.__data _HomeKitCameraStreamMessaging_sentStartResponse
|| __DATA.__data _HomeKitCameraStreamReconfigure_reconfigurationTimestamp
|| __DATA.__data _HomeKitCameraStreamReconfigure_resolution
|| __DATA.__data _HomeKitCameraStream_initialConfiguration
|| __DATA.__data _HomeKitCameraStream_receivedFirstFrame
|| __DATA.__data _HomeKitCameraStream_reconfigurations
|| __DATA.__data _authServerLocaleKey
|| __DATA.__data _authServerPPIDKey
|| __DATA.__data _authServerPPIDMetadataAccessoryNameKey
|| __DATA.__data _authServerPPIDMetadataBlacklistedKey
|| __DATA.__data _authServerPPIDMetadataCategoryKey
|| __DATA.__data _authServerPPIDMetadataCertStatusKey
|| __DATA.__data _authServerPPIDMetadataKey
|| __DATA.__data _authServerPPIDMetadataManufactureBrandKey
|| __DATA.__data _authServerPPIDMetadataModelKey
|| __DATA.__data _cloudRecordSizeLimit
|| __DATA.__data _cloudSyncUploadErrorCount
|| __DATA.__data _cloudSyncUploadReasonCount
|| __DATA.__data _gLogCategory_HMDPowerManager
|| __DATA.__data _gLogCategory_HMDSecureRemoteStream
|| __DATA.__data _kAudioStreamNamePrefix
|| __DATA.__data _kCameraController
|| __DATA.__data _kCameraInvalidSocket
|| __DATA.__data _kCameraResident
|| __DATA.__data _kCameraSnapshotIDSRelayFileData
|| __DATA.__data _kCameraSnapshotIDSRelayTimestamp
|| __DATA.__data _kCameraWatch
|| __DATA.__data _kDefaultCameraApplicationIdentifier
|| __DATA.__data _kFMFStatusKey
|| __DATA.__data _kHMDCameraRecordingSessionStartNotification
|| __DATA.__data _kHMDVendorInfoNotificationManufacturerKey
|| __DATA.__data _kHMDVendorInfoUpdatedNotification
|| __DATA.__data _kIDSStreamAudioSocketName
|| __DATA.__data _kIDSStreamKeepAliveSocketName
|| __DATA.__data _kIDSStreamVideoSocketName
|| __DATA.__data _kMetadataCurrentSchemaVersion
|| __DATA.__data _kProxCardHostViewController
|| __DATA.__data _kServiceBundleIdentifier
|| __DATA.__data _kVideoStreamNamePrefix
|| __DATA.__data _maximumAccessoriesPerBridge
|| __DATA.__data _maximumAccessoriesPerHome
|| __DATA.__data _maximumAccessoriesPerRoom
|| __DATA.__data _maximumActionSetsPerHome
|| __DATA.__data _maximumActionsPerActionSet
|| __DATA.__data _maximumCharacteristicsPerService
|| __DATA.__data _maximumDataSyncFragmentSize
|| __DATA.__data _maximumHomes
|| __DATA.__data _maximumRoomsPerHome
|| __DATA.__data _maximumRoomsPerZone
|| __DATA.__data _maximumServiceGroupsPerHome
|| __DATA.__data _maximumServicesPerAccessory
|| __DATA.__data _maximumServicesPerServiceGroup
|| __DATA.__data _maximumTriggersPerHome
|| __DATA.__data _maximumUsersPerHome
|| __DATA.__data _maximumZonesPerHome
|| __DATA.__data _minimumTimerRecurrence
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitAccessoryNetworkProtectionReport
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitAccessoryPairing
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitAccessoryReadWrite
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitAccessoryRelaySetup
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitActionSetTriggered
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitAddEventTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitAssistantAccessControl
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitBackingStoreCKOperationZoneCompletionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitBackingStoreCKRebuildEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitBroadcastEventKeyGeneration
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitBroadcastEventReceived
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCalendarEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraConfigurationData
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraIDSSessionSetup
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraRecordingBulkSendDataRead
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraRecordingClipNotification
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraRecordingFragmentAnalyzed
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraRecordingUploadOperation
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraSnapshotIDSTransfer
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraSnapshotMessaging
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraStream
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraStreamConfigure
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraStreamIDSConnSetup
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraStreamIDSConnSetupParameters
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraStreamMessaging
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraStreamReconfigure
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCameraUserSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCharacteristic
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCharacteristicEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCharacteristicThresholdEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCloudSync
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitCloudSyncInfoTuple
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitConfigurationData
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitDatabaseCKOperationCompletionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitDurationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitEventTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitEventTriggerEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitEventTriggerExecutionSession
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitEventTriggerUserConfirmationReceiverSession
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitEventTriggerUserConfirmationSend
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitEventsAggregationReport
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitHAPService
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitHomeCameraConfigurations
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitHomeConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitHomeSharing
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitLocationEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitMessageHomeLocationReport
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitMessageLocation
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitMessageTransported
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitMultiUserSettings
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitMultiUserSettingsValueByKeyPath
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitNetworkProtectionReport
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitPresenceEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitPresenceRegion
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitPresenceReport
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitProcessMemoryPressureEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitRelaySession
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitRemoteLogin
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitRemoteLogout
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitRemoteSession
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitResetConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitSignificantTimeEvent
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitSiriCommand
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitSiriSync
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitSoftwareUpdateAutomaticUpdateToggled
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitSoftwareUpdateFetched
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitSoftwareUpdateStarted
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitTargetControllerCommand
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitTargetControllerError
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitUpdateEventTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitUserPresenceAuthorization
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitUserPresenceCompute
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitValue
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitVendorInformation
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitVideoResolutionCount
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitWHAAccessControl
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitWHASetting
|| __DATA.__objc_data _OBJC_CLASS_$_AWDHomeKitWatchCompanionConnectivityReport
|| __DATA.__objc_data _OBJC_CLASS_$_BTLEScanner
|| __DATA.__objc_data _OBJC_CLASS_$_HAPCharacteristicTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HAPOperatingStateAbnormalReasonsWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HAPOperatingStateResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HAPOperatingStateWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryAdvertisement
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryAllowedHostsPreviewHelper
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryBrowserXPCMessageSendPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryBrowserXPCMessageSendPolicyParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryBundle
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryCount
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryDataStreamAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryDiagnosticsManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryDiagnosticsSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryDiagnosticsSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryNetworkCredential
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryNetworkProtectionGroupModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryNetworkProtectionGroupRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryPairingEventRetryMap
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryQueues
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryReachabilityElectionParameter
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryReachabilityTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryRetrievalCompletionTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingConstraintModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingGroupMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingGroupModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingMergeHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingMergeStrategy
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingMessageMapper
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingTransform
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingsBackingStoreTransactionReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingsController
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingsControllerDependencyFactory
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingsMessageHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessorySettingsMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryTransportInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccessoryVersion
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAccountHandleResolveOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDActionModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDActionSetModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDActiveSiriSessionInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMDActiveXPCClientConnectionsPeriodicTimer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDActiveXPCConnectionLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAddAccessoryProgressState
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAddActionSetLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAirPlayAccessoryModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsAddEventTriggerData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsCalendarEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsCharacteristicEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsCharacteristicThresholdEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsDurationEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsEventTriggerData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsEventTriggerExecutionSessionData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsEventTriggerUserConfirmationSendData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsHAPServiceData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsLocationEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsMultiUserSettings
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsMultiUserSettingsValueByKeyPath
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsPredicateData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsPresenceEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsSignificantTimeEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsTriggerEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAnalyticsUpdateEventTriggerData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAppleMediaAccessoryAdvertisement
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAppleMediaAccessoryDeleteSiriHistoryOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAppleMediaAccessoryMessageHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAppleMediaAccessoryModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAppleMediaAccessoryModelDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMDApplicationDataModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDApplicationVendorIDStoreValue
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAssistantAccessControlModelV2
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAssistantCharacteristicTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAssistantColorCharacteristic
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAssistantCommand
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAssistantCommandExecutor
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAssistantCommandHelper
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAssistantIntent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAudioCodecConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAudioCodecGroup
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAudioCodecParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAudioSampleRate
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAudioStreamConfig
|| __DATA.__objc_data _OBJC_CLASS_$_HMDAudioStreamInterface
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBTLEAdvertiser
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCKOperationZoneCompletionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCKRebuildEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheDeleteRecordOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheDeleteZoneOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheFetchGroupInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheFetchModelObjectResult
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheFetchModelObjects
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheFetchRecordMappingResult
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheFetchRecordMappings
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheFetchRecordResult
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheUpdateRecordOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreDispatchModelChange
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreLocalFlushOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreLogDropOperationsWithUUID
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreLogPrunePushedOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreLogUpdateOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBackingStoreUpdateObjectReference
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBitRateSetting
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBonjourBrowserHelper
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBulletinBoardCameraNotificationAssociation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBulletinCategory
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBulletinCharacteristicTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HMDBulletinUIManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCUWiFiDeviceWrapper
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCalendarEventModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraAccessModeChangedBulletin
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraAccessorySettingsConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraAudioParameterCombination
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraAudioParameterSelection
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipAddSignificantEventOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipAppendStreamingAssetOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipCreateClipOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipFeedbackManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipFeedbackUploader
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipFinalizeClipOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipImportMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipImportPosterFrameMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipImportVideoSegmentMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipImporter
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipManagerRequestLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipOperationDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipSegmentMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipSignificantEventBulletin
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipUploadPosterFrameOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipUploadVideoSegmentOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipUploader
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipUploaderFactory
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipUserNotificationCenter
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipsQuotaDisableCameraMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipsQuotaDisableCameraResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipsQuotaEnableCameraMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipsQuotaEnableCameraResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraClipsQuotaServerNotification
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraConfigurationsLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraFeaturesDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraHomeSettingsConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraIDSDeviceConnection
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraIDSDeviceConnectionReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraIDSDeviceConnectionSender
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraIDSSessionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraIDSSessionInitiator
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraIDSSessionInviterDeviceVerifier
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraIDSSessionReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraLocalStreamControlManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraLocalStreamSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraMediaConfigGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraNetworkConfig
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraParameterSelection
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraParameterSelectionBase
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraPowerAssertionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraProfileSettingsDerivedPropertiesModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraProfileSettingsManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraProfileSettingsModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraProtocolParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingAudioBitRateMode
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingAudioCodec
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingAudioCodecConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingAudioCodecParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingAudioSampleRate
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingBulkSendSessionInitiator
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingGeneralConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingH264Level
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingH264Profile
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingManagerDependencyFactory
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingMediaContainer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingMediaContainerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingMediaContainerParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingMetricUUIDUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingPreferredAudioConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingPreferredVideoConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingReachabilityEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingReachabilityEventModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingReachabilityLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSelectedConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSessionFaceClassificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSessionFactory
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSessionNotificationTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSessionRetryContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSessionSignificantEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSessionSignificantEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSessionTimelineManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSettingsControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSupportedAudioConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingSupportedVideoConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingVideoAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingVideoCodec
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingVideoCodecConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRecordingVideoCodecParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRemoteStreamControlManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraRemoteStreamSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraResidentMessageContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraResidentMessageHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSessionID
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSettingProactiveReader
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSignificantEventFaceClassification
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSignificantEventFaceClassificationModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSignificantEventFaceClassificationResolver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSignificantEventFetchHeroFrameContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSignificantEventListener
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSignificantEventNotificationModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSignificantEventServer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSignificantEventServerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotIDSRelay
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotIDSRelayInitiator
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotIDSRelayReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotIDSStream
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotIDSStreamInitiator
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotIDSStreamReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotLocal
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotMonitorEvents
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotNotificationTimer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotRemoteRelayReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotRemoteRelaySender
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotRemoteRelayStream
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotRemoteStreamReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotRemoteStreamSender
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotSender
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotSessionID
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamControlManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamControlMessageHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamControlMessageHandlerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamManagerSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamMetrics
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamSessionID
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamSnapshotCapture
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamSnapshotHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraStreamTracker
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraSupportedConfigurationCache
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraUserSettingsConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraVideoParameterCombination
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraVideoParameterSelection
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraVideoTier
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCameraVideoTierParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCapabilityFlags
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicEventBaseModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicEventModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicMonitorEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicReadWriteLogEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicResponseNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicThresholdRangeEventModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicValueUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicWriteActionModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicWriteRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCharacteristicsAvailabilityListener
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudChange
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudChangeNode
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudChangeTree
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudGroupChange
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudGroupRootRecordModelObject
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudHomeManagerZoneChange
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudHomeZoneChange
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudLegacyHomeDataRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudLegacyHomeDataVersion3Record
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudLegacyMetadataRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudLegacyModelObject
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudLegacyZoneChange
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudMetadataZoneChange
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudPairedMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudPairedMetadataDiagnostics
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudPairedMetadataVersionConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudRecord
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudSharedGroupRootRecordModelObject
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudZoneChange
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCloudZoneInformationModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCompanionManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCoreAnalyticsLogObserver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCoreDuetLogEventData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDCoreDuetLogEventObserver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDAccessoryServerBrowserDemo
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDAccessoryServerDemo
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStream
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamBulkSendOpenSessionResult
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamBulkSendPendingSessionContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamBulkSendProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamBulkSendSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamBulkSendSessionCandidate
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamControlProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamController
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamFrameReader
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamHAPPendingWrite
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamHAPSetupOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamHAPTransport
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamMessageCoder
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamPendingRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamSetupOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamSocket
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamStreamProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamTCPSetupOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamTCPTransport
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDataStreamTargetControlProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDatabaseZoneManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDatabaseZoneManagerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDeviceController
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDeviceDiscoveryOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDeviceNotificationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDeviceRegistrationEntry
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDeviceSetupClientSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDeviceSetupServerSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDeviceSetupSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDeviceSetupSessionInternal
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDonationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDoorbellBulletinUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDoorbellChimeController
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDoorbellChimeControllerContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDuetEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDurationEventModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDDynamicActivityAttributionPublisher
|| __DATA.__objc_data _OBJC_CLASS_$_HMDEndPointAddress
|| __DATA.__objc_data _OBJC_CLASS_$_HMDEventAggregationAnalysisLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDEventFlagsManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDEventModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDEventTriggerDevice
|| __DATA.__objc_data _OBJC_CLASS_$_HMDEventTriggerExecutionSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDEventTriggerModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDEventTriggerSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDEventTriggerUserConfirmationSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDExternalPersonManagerSettingsModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDFaceCropModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDFaceprintModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDFairPlaySAPSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDFamiliarFacesBulletinLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDFileManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDFragmentationStreamTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HMDH264Level
|| __DATA.__objc_data _OBJC_CLASS_$_HMDH264Profile
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHAPAccessoryAdvertisement
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHAPMetadataModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHAPMetricsLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHMBLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHTTPClientMessageTransport
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHTTPServerMessageTransport
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeAIHomePersonDataReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeAIPersonDataReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeAIPhotosPersonDataReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeAssistantOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeConfigurationLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeDataPushDestination
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeKitPersonDataReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeKitUserActionPredictionDataReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeLocationData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeManagerModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeMediaSystemControllerMessageHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeNaturalLightingContextUpdater
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeNaturalLightingCurveWriter
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomePeriodicReader
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomePersonDataManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomePersonManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomePersonManagerSettingsModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomePresence
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomePresenceMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomePresenceRemote
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomePresenceUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeRemoteNotification
|| __DATA.__objc_data _OBJC_CLASS_$_HMDHomeReprovisioningPendingInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDIDSActivityMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HMDIDSActivityMonitorBroadcaster
|| __DATA.__objc_data _OBJC_CLASS_$_HMDIDSActivityMonitorHomeManagerDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMDIDSActivityMonitorObserver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDIDSActivityObserverModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDIDSActivityRegistrationModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDIDSMessageContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDIDSSendMessageOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDInitialStreamDataChunk
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLaunchEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLightProfileDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLightProfileNaturalLightingAction
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLightProfileNaturalLightingActionModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLocationCluster
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLocationClusterGroup
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLocationEventModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLocationTuple
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventAnalyzerManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventCloudSyncEventsAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventContextProvider
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventDailyScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventHAPMetricsEventAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventMessageEventsAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventProcessLaunchAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventProcessLaunchAnalyzerContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventProcessMemoryEventsAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventReachabilityEventsAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDLogEventUserActivityAnalyzer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMPCResolveDestinationOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMPCSendMRCommandOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMPCSendMRCommandOperationDefaultExternalObjectInterface
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMPCSessionControllerExecutionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMPCSessionData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMRAVEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMROutputDeviceStatus
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMRSetEndpointVolumeOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMRSetEndpointVolumeOperationDefaultExternalObjectInterface
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaAccessoryAdvertisement
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaAccessoryBrowseOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaAccessoryModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaBrowserDataSource
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaContentProfileAccessControlModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaEndpoint
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaOutputDevice
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaPlaybackActionAsCharacteristicWriteRequests
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaPlaybackActionEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaPlaybackActionModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaPropertyRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaPropertyResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaPropertyWriteRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaSessionState
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaStreamConfig
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaSystemModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMediaSystemModelExtended
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMemoryLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMemoryUseSnapshot
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMessageHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMessageHandlerFailureMetricEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMessageHandlerMetricsDispatcher
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMessageHandlerQueuedMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMutableCameraRecordingSessionSignificantEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMutableCameraSignificantEventFaceClassification
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMutableDatabaseZoneManagerConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMutableHomeManagerXPCMessageSendPolicyParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMutableNaturalLightingCurve
|| __DATA.__objc_data _OBJC_CLASS_$_HMDMutableUserMessagePolicy
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNaturalLightingActiveTransitionContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNaturalLightingContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNaturalLightingCurve
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNaturalLightingCurveWriter
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNaturalLightingEnabledRetryContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterAccessViolation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterAccessViolationControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterAccessViolationControlOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterAccessViolationControlResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterAdvertisementProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientControlOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientControlOperationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientControlResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientIdentifierList
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientStatus
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientStatusControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientStatusControlOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientStatusIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientStatusIdentifierList
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterClientStatusList
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterControlOperation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterControlOperationStatus
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterController
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterCredential
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterDynamicPortRule
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRule
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleAccessoryIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleCloudNetworkDeclarations
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleCloudZone
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleCloudZoneFetchInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleICMPType
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleLAN
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleLANDynamic
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleLANMulticast
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleLANStatic
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirror
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchRecordsInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerClientState
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerOverrideParser
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleManagerUtils
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleWAN
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleWANAddressRange
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterFirewallRuleWANSubject
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterHomeKitOnlyFirewallConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterICMPType
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterICMPTypeList
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterIPAddress
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterIPAddressList
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterIPProtocolVersion
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterLANFirewall
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterLANFirewallConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterLANFirewallRuleList
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterLANIdentifierList
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterMulticastBridgingRule
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterProtocol
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterRuleDirection
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterServiceType
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterStaticICMPRule
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterStaticPortRule
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterWANFirewall
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterWANFirewallConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterWANFirewallRuleList
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterWANICMPRule
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterWANPortRule
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterWANStatus
|| __DATA.__objc_data _OBJC_CLASS_$_HMDNetworkRouterWANStatusList
|| __DATA.__objc_data _OBJC_CLASS_$_HMDObsoleteUserModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDOutgoingHomeInvitationModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPacketizationMode
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPairedAccessoryInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPendingBulkSendListener
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPendingCharacteristic
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPendingResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPendingSocketRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPersonManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPersonModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPersonSettingsManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPersonSettingsModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPhoneCallObserver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPhotoLibrary
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPhotoLibraryImportingFaceCropsImportedLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPhotoLibraryImportingPersonsImportedLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPhotoLibraryImportingPhotoLibraryRenamedPersonsLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPhotoLibraryPersonImporter
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPhotosPersonManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPhotosPersonManagerSettingsModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPresenceEventModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDPrivateUserDataModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDProcessJetsamInfoLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDProcessLaunchInfoLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDProcessMemoryPressureNotificationLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDProcessRelaunchThresholdLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDProximityCardLauncher
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRecordChangedLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRecordsSavedLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRelayAccessTokenModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRelayActivationClient
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRelayActivationSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRelayCertificateRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRelayConsentToken
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRelayPairingClient
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRelayStream
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteAccountHandleMessageDestination
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteAccountMessageDestination
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteDestinationFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteDeviceInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteDeviceMessageDestination
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteDeviceReachabilityChangeLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginAnisetteDataHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginAnisetteDataProvider
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginAuthentication
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginAuthenticationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginAuthenticationResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginBase
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginCompanionAuthenticationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginInitiator
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginInitiatorAuthentication
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginInitiatorAuthenticationSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginInitiatorCompanionAuthentication
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginInitiatorProxyAuthentication
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginInitiatorSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginInitiatorSignoutSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginMessageSender
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginProxyAuthenticationRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginProxyDeviceRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginProxyDeviceResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginReceiver
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginReceiverAuthentication
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginReceiverCompanionAuthentication
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginReceiverProxyAuthentication
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginReceiverSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginSignoutRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteLoginUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteMessageSenderContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteMessageSerialization
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemotePersonDataMessenger
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRemoteReadRequestMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDReselectedRTPParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDReselectedStreamConfigurationWrite
|| __DATA.__objc_data _OBJC_CLASS_$_HMDReselectedVideoParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDResidentCommunicationHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDResidentDeviceElectionParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDResidentDeviceModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDResidentMesh
|| __DATA.__objc_data _OBJC_CLASS_$_HMDResidentMeshMeshStorage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDResidentMeshResidentStorage
|| __DATA.__objc_data _OBJC_CLASS_$_HMDResidentReachabilityContext
|| __DATA.__objc_data _OBJC_CLASS_$_HMDResidentUserModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRoomLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDRoomModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSRTPCryptoSuite
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSRTPParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSecureRemoteSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSecureRemoteStream
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSecureRemoteStreamInternal
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSelectedAudioParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSelectedRTPParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSelectedStreamConfigurationWrite
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSelectedVideoParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDServerBag
|| __DATA.__objc_data _OBJC_CLASS_$_HMDServiceGroupModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDServiceNameComponents
|| __DATA.__objc_data _OBJC_CLASS_$_HMDServiceTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSessionControl
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingAlgorithm
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingAttachedSettingUpdate
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingConstraint
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingConstraintModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingGroupModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingMessageMapper
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingOnChangeAttachedUpdatesResult
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingRootGroupModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingSelectionItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSettingValueSelectionItem
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSetupEndPointRead
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSetupEndPointWrite
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSharedHomeModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSharedHomeUpdateSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSharedUserDataModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDShortcutActionModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSignificantTimeEventModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSiriAccessoryInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSiriAccessoryMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSiriRemoteInputServer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSiriServer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSiriSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotCATransactionHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotCacheEntry
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotCacheRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotCompletionTimer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotFile
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotLocalSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotRemoteSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotRequestHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotSessionApplicationID
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSnapshotSlotManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSoftwareUpdateDocumentationAsset
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSoftwareUpdateDocumentationManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSoftwareUpdateModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDStreamData
|| __DATA.__objc_data _OBJC_CLASS_$_HMDStreamDataChunk
|| __DATA.__objc_data _OBJC_CLASS_$_HMDStreamDataChunkAssembler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDStreamDataSequenceNumber
|| __DATA.__objc_data _OBJC_CLASS_$_HMDStreamInterface
|| __DATA.__objc_data _OBJC_CLASS_$_HMDStreamingCapabilities
|| __DATA.__objc_data _OBJC_CLASS_$_HMDStreamingManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDStreamingStatus
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSupportedAudioStreamConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSupportedRTPConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSupportedSiriAudioConfigurations
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSupportedVideoStreamConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDSymptomContainer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDTargetButtonConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDTargetConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDTargetControlManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDTargetControllerManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDTimeInformationMonitor
|| __DATA.__objc_data _OBJC_CLASS_$_HMDTimerTriggerModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDTransientRuleManagerClient
|| __DATA.__objc_data _OBJC_CLASS_$_HMDTriggerConfirmationTimer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDTriggerModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUIDialogPresenter
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUnpairedHAPAccessoryConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUnpairedHAPAccessoryPairingInformation
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUnpairedHAPAccessoryProgressHandler
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserActionPredictionContainer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserActionPredictionGroup
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserActionPredictionModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserActionPredictionSingleItemGroup
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserActionPredictionSubscriber
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserCloudShareEstablishShareRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserCloudShareRepairRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserCloudShareRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserDataModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserDataZoneControllerShareLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserManagementOperationModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserManagementOperationTimestamp
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserPhotosPersonDataManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserPresence
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserPresenceFeed
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserPresenceFeedRetryTimer
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserPresenceFeedSession
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserPresenceRegion
|| __DATA.__objc_data _OBJC_CLASS_$_HMDUserPushCache
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVendorDataManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVendorModelCollection
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVendorModelEntry
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVideoAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVideoCodec
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVideoCodecConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVideoCodecParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVideoResolution
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVideoStreamConfig
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVideoStreamInterface
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVideoStreamReconfigure
|| __DATA.__objc_data _OBJC_CLASS_$_HMDVideoStreamReconfigureEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDWakeConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDWakeConfigurationParameters
|| __DATA.__objc_data _OBJC_CLASS_$_HMDWatchConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_HMDWatchConnectivityLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDWatchConnectivityLogEventManager
|| __DATA.__objc_data _OBJC_CLASS_$_HMDWatchSync
|| __DATA.__objc_data _OBJC_CLASS_$_HMDWatchSyncState
|| __DATA.__objc_data _OBJC_CLASS_$_HMDWiFiManagementController
|| __DATA.__objc_data _OBJC_CLASS_$_HMDWiFiReconfigurationLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDXPCActivityInterface
|| __DATA.__objc_data _OBJC_CLASS_$_HMDXPCMessageCountTracker
|| __DATA.__objc_data _OBJC_CLASS_$_HMDXPCMessageCountersLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HMDXPCMessageSendPolicy
|| __DATA.__objc_data _OBJC_CLASS_$_HMDZoneModel
|| __DATA.__objc_data _OBJC_CLASS_$_HMEraseAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMEraseAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMFConnectivityInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMFWoBLEInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMFWoWLANInfo
|| __DATA.__objc_data _OBJC_CLASS_$_HMFetchAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMFetchAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMLegacyAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMLegacyAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMObjectCacheHMDCharacteristicMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_HMObjectCacheNSUUID
|| __DATA.__objc_data _OBJC_CLASS_$_HMProvisionAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMProvisionAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HMRemoteLoginMessage
|| __DATA.__objc_data _OBJC_CLASS_$_HMSyncAnisetteDataRequest
|| __DATA.__objc_data _OBJC_CLASS_$_HMSyncAnisetteDataResponse
|| __DATA.__objc_data _OBJC_CLASS_$_HomeKitEventTriggerAddLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HomeKitEventTriggerExecutionSessionLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HomeKitEventTriggerUpdateLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_HomeKitEventTriggerUserConfirmationSendLogEvent
|| __DATA.__objc_data _OBJC_CLASS_$_ScanContext
|| __DATA.__objc_data _OBJC_CLASS_$_THAButton
|| __DATA.__objc_data _OBJC_CLASS_$_THAButtonEvent
|| __DATA.__objc_data _OBJC_CLASS_$_THAController
|| __DATA.__objc_data _OBJC_CLASS_$__HMDCameraPowerAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__HMDCameraStreamTrackerAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__HMDHTTPServerClientConnection
|| __DATA.__objc_data _OBJC_CLASS_$__HMDIDSProxyLinkPreferenceAssertion
|| __DATA.__objc_data _OBJC_CLASS_$__HMDSecureRemoteQueuedMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitAccessoryNetworkProtectionReport
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitAccessoryPairing
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitAccessoryReadWrite
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitAccessoryRelaySetup
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitActionSetTriggered
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitAddEventTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitAssistantAccessControl
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitBackingStoreCKOperationZoneCompletionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitBackingStoreCKRebuildEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitBroadcastEventKeyGeneration
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitBroadcastEventReceived
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCalendarEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraConfigurationData
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraIDSSessionSetup
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraRecordingBulkSendDataRead
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraRecordingClipNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraRecordingFragmentAnalyzed
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraRecordingUploadOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraSnapshotIDSTransfer
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraSnapshotMessaging
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraStream
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraStreamConfigure
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraStreamIDSConnSetup
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraStreamIDSConnSetupParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraStreamMessaging
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraStreamReconfigure
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCameraUserSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCharacteristic
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCharacteristicEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCharacteristicThresholdEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCloudSync
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitCloudSyncInfoTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitConfigurationData
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitDatabaseCKOperationCompletionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitDurationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitEventTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitEventTriggerEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitEventTriggerExecutionSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitEventTriggerUserConfirmationReceiverSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitEventTriggerUserConfirmationSend
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitEventsAggregationReport
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitHAPService
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitHomeCameraConfigurations
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitHomeConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitHomeSharing
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitLocationEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitMessageHomeLocationReport
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitMessageLocation
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitMessageTransported
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitMultiUserSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitMultiUserSettingsValueByKeyPath
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitNetworkProtectionReport
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitPresenceEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitPresenceRegion
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitPresenceReport
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitProcessMemoryPressureEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitRelaySession
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitRemoteLogin
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitRemoteLogout
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitRemoteSession
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitResetConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitSignificantTimeEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitSiriCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitSiriSync
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitSoftwareUpdateAutomaticUpdateToggled
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitSoftwareUpdateFetched
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitSoftwareUpdateStarted
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitTargetControllerCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitTargetControllerError
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitUpdateEventTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitUserPresenceAuthorization
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitUserPresenceCompute
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitValue
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitVendorInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitVideoResolutionCount
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitWHAAccessControl
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitWHASetting
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDHomeKitWatchCompanionConnectivityReport
|| __DATA.__objc_data _OBJC_METACLASS_$_BTLEScanner
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPCharacteristicTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPOperatingStateAbnormalReasonsWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPOperatingStateResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HAPOperatingStateWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryAdvertisement
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryAllowedHostsPreviewHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryBrowserXPCMessageSendPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryBrowserXPCMessageSendPolicyParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryBundle
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryCount
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryDataStreamAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryDiagnosticsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryDiagnosticsSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryDiagnosticsSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryNetworkCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryNetworkProtectionGroupModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryNetworkProtectionGroupRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryPairingEventRetryMap
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryQueues
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryReachabilityElectionParameter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryReachabilityTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryRetrievalCompletionTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingConstraintModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingGroupMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingGroupModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingMergeHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingMergeStrategy
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingMessageMapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingTransform
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingsBackingStoreTransactionReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingsController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingsControllerDependencyFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingsMessageHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingsMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryTransportInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccessoryVersion
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAccountHandleResolveOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDActionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDActionSetModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDActiveSiriSessionInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDActiveXPCClientConnectionsPeriodicTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDActiveXPCConnectionLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAddAccessoryProgressState
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAddActionSetLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAirPlayAccessoryModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsAddEventTriggerData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsCalendarEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsCharacteristicEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsCharacteristicThresholdEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsDurationEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsEventTriggerData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsEventTriggerExecutionSessionData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsEventTriggerUserConfirmationSendData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsHAPServiceData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsLocationEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsMultiUserSettings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsMultiUserSettingsValueByKeyPath
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsPredicateData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsPresenceEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsSignificantTimeEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsTriggerEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAnalyticsUpdateEventTriggerData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAppleMediaAccessoryAdvertisement
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAppleMediaAccessoryDeleteSiriHistoryOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAppleMediaAccessoryMessageHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAppleMediaAccessoryModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAppleMediaAccessoryModelDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDApplicationDataModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDApplicationVendorIDStoreValue
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAssistantAccessControlModelV2
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAssistantCharacteristicTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAssistantColorCharacteristic
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAssistantCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAssistantCommandExecutor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAssistantCommandHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAssistantIntent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAudioCodecConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAudioCodecGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAudioCodecParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAudioSampleRate
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAudioStreamConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDAudioStreamInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBTLEAdvertiser
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCKOperationZoneCompletionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheDeleteRecordOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheDeleteZoneOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheFetchGroupInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheFetchModelObjectResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheFetchModelObjects
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheFetchRecordMappingResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheFetchRecordMappings
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheFetchRecordResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheUpdateRecordOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreDispatchModelChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreLocalFlushOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreLogDropOperationsWithUUID
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreLogPrunePushedOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreLogUpdateOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBackingStoreUpdateObjectReference
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBitRateSetting
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBonjourBrowserHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBulletinBoardCameraNotificationAssociation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBulletinCategory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBulletinCharacteristicTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDBulletinUIManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCUWiFiDeviceWrapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCalendarEventModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraAccessModeChangedBulletin
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraAccessorySettingsConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraAudioParameterCombination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraAudioParameterSelection
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipAddSignificantEventOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipAppendStreamingAssetOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipCreateClipOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipFeedbackManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipFeedbackUploader
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipFinalizeClipOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipImportMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipImportPosterFrameMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipImportVideoSegmentMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipImporter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipManagerRequestLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipOperationDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipSegmentMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipSignificantEventBulletin
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipUploadPosterFrameOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipUploadVideoSegmentOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipUploader
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipUploaderFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipUserNotificationCenter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipsQuotaDisableCameraMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipsQuotaDisableCameraResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipsQuotaEnableCameraMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipsQuotaEnableCameraResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraClipsQuotaServerNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraConfigurationsLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraFeaturesDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraHomeSettingsConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraIDSDeviceConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraIDSDeviceConnectionReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraIDSDeviceConnectionSender
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraIDSSessionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraIDSSessionInitiator
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraIDSSessionInviterDeviceVerifier
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraIDSSessionReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraLocalStreamControlManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraLocalStreamSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraMediaConfigGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraNetworkConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraParameterSelection
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraParameterSelectionBase
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraPowerAssertionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraProfileSettingsDerivedPropertiesModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraProfileSettingsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraProfileSettingsModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraProtocolParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingAudioBitRateMode
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingAudioCodec
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingAudioCodecConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingAudioCodecParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingAudioSampleRate
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingBulkSendSessionInitiator
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingGeneralConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingH264Level
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingH264Profile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingManagerDependencyFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingMediaContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingMediaContainerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingMediaContainerParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingMetricUUIDUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingPreferredAudioConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingPreferredVideoConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingReachabilityEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingReachabilityEventModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingReachabilityLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSelectedConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSessionFaceClassificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSessionFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSessionNotificationTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSessionRetryContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSessionSignificantEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSessionSignificantEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSessionTimelineManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSettingsControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSupportedAudioConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingSupportedVideoConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingVideoAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingVideoCodec
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingVideoCodecConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingVideoCodecParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRemoteStreamControlManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraRemoteStreamSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraResidentMessageContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraResidentMessageHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSessionID
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSettingProactiveReader
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSignificantEventFaceClassification
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSignificantEventFaceClassificationModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSignificantEventFaceClassificationResolver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSignificantEventFetchHeroFrameContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSignificantEventListener
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSignificantEventNotificationModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSignificantEventServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSignificantEventServerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotIDSRelay
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotIDSRelayInitiator
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotIDSRelayReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotIDSStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotIDSStreamInitiator
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotIDSStreamReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotLocal
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotMonitorEvents
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotNotificationTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotRemoteRelayReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotRemoteRelaySender
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotRemoteRelayStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotRemoteStreamReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotRemoteStreamSender
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotSender
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotSessionID
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamControlManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamControlMessageHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamControlMessageHandlerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamManagerSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamMetrics
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamSessionID
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamSnapshotCapture
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamSnapshotHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraStreamTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraSupportedConfigurationCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraUserSettingsConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraVideoParameterCombination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraVideoParameterSelection
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraVideoTier
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCameraVideoTierParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCapabilityFlags
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicEventBaseModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicEventModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicMonitorEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicReadWriteLogEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicResponseNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicThresholdRangeEventModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicValueUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicWriteActionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicWriteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCharacteristicsAvailabilityListener
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudChangeNode
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudChangeTree
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudGroupChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudGroupRootRecordModelObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudHomeManagerZoneChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudHomeZoneChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudLegacyHomeDataRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudLegacyHomeDataVersion3Record
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudLegacyMetadataRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudLegacyModelObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudLegacyZoneChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudMetadataZoneChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudPairedMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudPairedMetadataDiagnostics
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudPairedMetadataVersionConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudPhotosSettingObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudRecord
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudSharedGroupRootRecordModelObject
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudZoneChange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCloudZoneInformationModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCompanionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCoreDuetLogEventData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDCoreDuetLogEventObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDAccessoryServerBrowserDemo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDAccessoryServerDemo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamBulkSendOpenSessionResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamBulkSendPendingSessionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamBulkSendProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamBulkSendSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamBulkSendSessionCandidate
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamControlProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamFrameReader
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamHAPPendingWrite
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamHAPSetupOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamHAPTransport
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamMessageCoder
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamPendingRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamSetupOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamSocket
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamStreamProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamTCPSetupOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamTCPTransport
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDataStreamTargetControlProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDatabaseZoneManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDatabaseZoneManagerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDeviceController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDeviceDiscoveryOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDeviceNotificationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDeviceRegistrationEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDeviceSetupClientSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDeviceSetupServerSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDeviceSetupSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDeviceSetupSessionInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDonationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDoorbellBulletinUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDoorbellChimeController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDoorbellChimeControllerContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDuetEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDuetPredictionSubscriber
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDurationEventModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDDynamicActivityAttributionPublisher
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEndPointAddress
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEventAggregationAnalysisLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEventCountersManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEventFlagsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEventModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEventTriggerDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEventTriggerExecutionSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEventTriggerModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEventTriggerSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDEventTriggerUserConfirmationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDExternalPersonManagerSettingsModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDFaceCropModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDFaceprintModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDFairPlaySAPSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDFamiliarFacesBulletinLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDFileManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDFragmentationStreamTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDH264Level
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDH264Profile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHAPAccessoryAdvertisement
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHAPMetadataModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHAPMetricsLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHMBLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHTTPClientMessageTransport
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHTTPServerMessageTransport
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeAIHomePersonDataReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeAIPersonDataReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeAIPhotosPersonDataReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeAssistantOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeConfigurationLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeDataPushDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeKitPersonDataReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeKitUserActionPredictionDataReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeLocationData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeManagerModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeManagerXPCMessageSendPolicyParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeMediaSystemControllerMessageHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeNaturalLightingContextUpdater
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeNaturalLightingCurveWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomePeriodicReader
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomePersonDataManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomePersonManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomePersonManagerSettingsModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomePresence
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomePresenceMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomePresenceRemote
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomePresenceUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeRemoteNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDHomeReprovisioningPendingInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDIDSActivityMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDIDSActivityMonitorBroadcaster
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDIDSActivityMonitorHomeManagerDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDIDSActivityMonitorObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDIDSActivityObserverModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDIDSActivityRegistrationModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDIDSMessageContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDIDSSendMessageOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDInitialStreamDataChunk
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLightProfileDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLightProfileNaturalLightingAction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLightProfileNaturalLightingActionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLocationCluster
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLocationClusterGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLocationEventModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLocationTuple
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventAnalyzerContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventAnalyzerManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventCloudSyncEventsAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventContextProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventDailyScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventHAPMetricsEventAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventMessageEventsAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventProcessLaunchAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventProcessLaunchAnalyzerContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventProcessMemoryEventsAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventReachabilityEventsAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDLogEventUserActivityAnalyzer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMPCResolveDestinationOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMPCSendMRCommandOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMPCSendMRCommandOperationDefaultExternalObjectInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMPCSessionControllerExecutionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMPCSessionData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMRAVEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMROutputDeviceStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMRSetEndpointVolumeOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMRSetEndpointVolumeOperationDefaultExternalObjectInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaAccessoryAdvertisement
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaAccessoryBrowseOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaAccessoryModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaBrowserDataSource
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaContentProfileAccessControlModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaEndpoint
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaOutputDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaPlaybackActionAsCharacteristicWriteRequests
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaPlaybackActionEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaPlaybackActionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaPropertyRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaPropertyResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaPropertyWriteRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaSessionState
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaStreamConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaSystemModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMediaSystemModelExtended
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMemoryLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMemoryUseSnapshot
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMemoryUtilizationTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMessageHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMessageHandlerFailureMetricEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMessageHandlerMetricsDispatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMessageHandlerQueuedMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMutableCameraRecordingSessionSignificantEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMutableCameraSignificantEventFaceClassification
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMutableDatabaseZoneManagerConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMutableHomeManagerXPCMessageSendPolicyParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMutableNaturalLightingCurve
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDMutableUserMessagePolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNaturalLightingActiveTransitionContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNaturalLightingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNaturalLightingCurve
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNaturalLightingCurveWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNaturalLightingEnabledRetryContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterAccessViolation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterAccessViolationControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterAccessViolationControlOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterAccessViolationControlResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterAdvertisementProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientControlOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientControlOperationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientControlResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientIdentifierList
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientStatusControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientStatusControlOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientStatusIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientStatusIdentifierList
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterClientStatusList
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterControlOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterControlOperationStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterCredential
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterDynamicPortRule
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRule
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleAccessoryIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleCloudNetworkDeclarations
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleCloudZone
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleCloudZoneFetchInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleICMPType
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleLAN
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleLANDynamic
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleLANMulticast
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleLANStatic
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirror
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchRecordsInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerClientState
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerOverrideParser
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleManagerUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleWAN
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleWANAddressRange
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterFirewallRuleWANSubject
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterHomeKitOnlyFirewallConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterICMPType
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterICMPTypeList
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterIPAddress
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterIPAddressList
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterIPProtocolVersion
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterLANFirewall
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterLANFirewallConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterLANFirewallRuleList
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterLANIdentifierList
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterMulticastBridgingRule
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterProtocol
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterRuleDirection
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterServiceType
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterStaticICMPRule
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterStaticPortRule
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterWANFirewall
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterWANFirewallConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterWANFirewallRuleList
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterWANICMPRule
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterWANPortRule
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterWANStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterWANStatusList
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDObsoleteUserModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDOutgoingHomeInvitationModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPacketizationMode
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPairedAccessoryInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPendingBulkSendListener
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPendingCharacteristic
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPendingResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPendingSocketRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPersonManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPersonModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPersonSettingsManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPersonSettingsModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPhoneCallObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPhotoLibrary
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPhotoLibraryImportingFaceCropsImportedLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPhotoLibraryImportingPersonsImportedLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPhotoLibraryImportingPhotoLibraryRenamedPersonsLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPhotoLibraryPersonImporter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPhotosPersonManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPhotosPersonManagerSettingsModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPresenceEventModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDPrivateUserDataModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDProcessLaunchInfoLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDProcessMemoryPressureNotificationLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDProcessMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDProcessRelaunchThresholdLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDProximityCardLauncher
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRecordChangedLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRecordsSavedLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRelayAccessTokenModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRelayActivationClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRelayActivationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRelayCertificateRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRelayConsentToken
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRelayPairingClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRelayStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteAccountHandleMessageDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteAccountMessageDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteDestinationFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteDeviceInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteDeviceMessageDestination
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteDeviceReachabilityChangeLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginAnisetteDataHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginAnisetteDataProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginAuthentication
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginAuthenticationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginAuthenticationResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginBase
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginCompanionAuthenticationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginInitiator
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginInitiatorAuthentication
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginInitiatorAuthenticationSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginInitiatorCompanionAuthentication
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginInitiatorProxyAuthentication
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginInitiatorSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginInitiatorSignoutSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginMessageSender
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginProxyAuthenticationRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginProxyDeviceRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginProxyDeviceResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginReceiver
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginReceiverAuthentication
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginReceiverCompanionAuthentication
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginReceiverProxyAuthentication
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginReceiverSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginSignoutRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteMessageSenderContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteMessageSerialization
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemotePersonDataMessenger
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRemoteReadRequestMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDReselectedRTPParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDReselectedStreamConfigurationWrite
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDReselectedVideoParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDResidentCommunicationHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDResidentDeviceElectionParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDResidentDeviceModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDResidentMesh
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDResidentMeshMeshStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDResidentMeshResidentStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDResidentReachabilityContext
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDResidentReachabilityNotificationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDResidentUserModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRoomLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDRoomModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSRTPCryptoSuite
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSRTPParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSecureRemoteSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSecureRemoteStream
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSecureRemoteStreamInternal
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSelectedAudioParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSelectedRTPParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSelectedStreamConfigurationWrite
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSelectedVideoParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDServerBag
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDServiceGroupModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDServiceNameComponents
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDServiceTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSessionControl
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingAlgorithm
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingAttachedSettingUpdate
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingConstraint
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingConstraintModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingGroupModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingMessageMapper
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingOnChangeAttachedUpdatesResult
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingRootGroupModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingSelectionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSettingValueSelectionItem
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSetupEndPointRead
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSetupEndPointWrite
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSharedHomeModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSharedHomeUpdateSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSharedUserDataModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDShortcutActionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSignificantTimeEventModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSiriAccessoryInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSiriAccessoryMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSiriRemoteInputServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSiriServer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSiriSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotCATransactionHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotCacheEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotCacheRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotCompletionTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotFile
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotLocalSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotRemoteSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotRequestHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotSessionApplicationID
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSnapshotSlotManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSoftwareUpdateDocumentationAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSoftwareUpdateDocumentationManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSoftwareUpdateModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDStreamData
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDStreamDataChunk
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDStreamDataChunkAssembler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDStreamDataSequenceNumber
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDStreamInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDStreamingCapabilities
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDStreamingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDStreamingStatus
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSupportedAudioStreamConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSupportedRTPConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSupportedSiriAudioConfigurations
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSupportedVideoStreamConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDSymptomContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDTargetButtonConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDTargetConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDTargetControlManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDTargetControllerManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDTimeInformationMonitor
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDTimerTriggerModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDTransientRuleManagerClient
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDTriggerConfirmationTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDTriggerModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUIDialogPresenter
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUnpairedHAPAccessoryConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUnpairedHAPAccessoryPairingInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUnpairedHAPAccessoryProgressHandler
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserActionPredictionContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserActionPredictionGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserActionPredictionManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserActionPredictionModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserActionPredictionSingleItemGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserActionPredictionSubscriber
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserCloudShareEstablishShareRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserCloudShareRepairRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserCloudShareRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserDataModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserDataZoneControllerShareLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserManagementOperationModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserManagementOperationTimestamp
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserPhotosPersonDataManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserPresence
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserPresenceFeed
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserPresenceFeedRetryTimer
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserPresenceFeedSession
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserPresenceRegion
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDUserPushCache
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVendorDataManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVendorModelCollection
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVendorModelEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVideoAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVideoCodec
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVideoCodecConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVideoCodecParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVideoResolution
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVideoStreamConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVideoStreamInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVideoStreamReconfigure
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDVideoStreamReconfigureEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDWakeConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDWakeConfigurationParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDWatchConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDWatchConnectivityLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDWatchConnectivityLogEventManager
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDWatchSync
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDWatchSyncState
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDWiFiManagementController
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDWiFiReconfigurationLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDXPCActivityInterface
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDXPCMessageCountTracker
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDXPCMessageSendPolicy
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDXPCMessageSendPolicyParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_HMDZoneModel
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEraseAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMEraseAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFConnectivityInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFWoBLEInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFWoWLANInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFetchAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMFetchAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMLegacyAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMLegacyAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMObjectCacheHMDCharacteristicMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_HMObjectCacheNSUUID
|| __DATA.__objc_data _OBJC_METACLASS_$_HMProvisionAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMProvisionAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HMRemoteLoginMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSyncAnisetteDataRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_HMSyncAnisetteDataResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_HomeKitEventTriggerAddLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HomeKitEventTriggerExecutionSessionLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HomeKitEventTriggerUpdateLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_HomeKitEventTriggerUserConfirmationSendLogEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_ScanContext
|| __DATA.__objc_data _OBJC_METACLASS_$_THAButton
|| __DATA.__objc_data _OBJC_METACLASS_$_THAButtonEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_THAController
|| __DATA.__objc_data _OBJC_METACLASS_$__HMDCameraPowerAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__HMDCameraStreamTrackerAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__HMDHTTPServerClientConnection
|| __DATA.__objc_data _OBJC_METACLASS_$__HMDIDSProxyLinkPreferenceAssertion
|| __DATA.__objc_data _OBJC_METACLASS_$__HMDSecureRemoteQueuedMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryNetworkProtectionReport._hadViolationsInLast24h
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryNetworkProtectionReport._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryNetworkProtectionReport._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryNetworkProtectionReport._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryNetworkProtectionReport._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._appIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._certified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._credentialType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._errorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isAdd
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isAddWithOwnershipProof
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isAddedViaWAC
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isBTOnboard
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isFirstHAPAccessoryInAnyHome
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isFirstHAPAccessoryInHome
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isNetworkRouterAdd
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isNetworkRouterReplace
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isNoeAccessory
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isNoeOnboard
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._isSecureWAC
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._noeCapabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._noeOnboardDuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._noeOnboardErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._noeOnboardErrorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._noeStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._retryCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._transportType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryPairing._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._appIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._certified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._characteristics
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._consecutiveFailureCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._isCached
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._isNoeAccessory
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._isRemote
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._isRemoteAccessAllowed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._isRemotelyReachable
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._isResidentAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._isSentOverNoe
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._isTimedWrite
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._isWrite
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._primaryServiceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._source
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._timeElapsedSinceFirstFailure
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._transaction
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._transportProtocolVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._transportType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._underlyingErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._underlyingErrorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryReadWrite._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryRelaySetup._actionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryRelaySetup._certified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryRelaySetup._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryRelaySetup._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryRelaySetup._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryRelaySetup._reason
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryRelaySetup._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAccessoryRelaySetup._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitActionSetTriggered._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitActionSetTriggered._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitActionSetTriggered._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitActionSetTriggered._numAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitActionSetTriggered._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitActionSetTriggered._transaction
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitActionSetTriggered._triggerSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAddEventTrigger._eventTrigger
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAddEventTrigger._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAddEventTrigger._requestOrigin
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAddEventTrigger._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAddEventTrigger._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAssistantAccessControl._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAssistantAccessControl._isEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAssistantAccessControl._numCapableAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAssistantAccessControl._numEnabledAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAssistantAccessControl._options
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitAssistantAccessControl._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKOperationZoneCompletionEvent._containerType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKOperationZoneCompletionEvent._didSucceed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKOperationZoneCompletionEvent._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKOperationZoneCompletionEvent._errorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKOperationZoneCompletionEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKOperationZoneCompletionEvent._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKOperationZoneCompletionEvent._zoneType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKRebuildEvent._containerType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKRebuildEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKRebuildEvent._rebuildStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKRebuildEvent._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBackingStoreCKRebuildEvent._zoneType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventKeyGeneration._certified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventKeyGeneration._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventKeyGeneration._reason
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventKeyGeneration._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventKeyGeneration._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventReceived._certified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventReceived._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventReceived._isExpectedGSN
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventReceived._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitBroadcastEventReceived._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraConfigurationData._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraConfigurationData._homeConfigurations
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraConfigurationData._isDemoConfiguration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraConfigurationData._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraIDSSessionSetup._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraIDSSessionSetup._idsSessionInvitationReceived
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraIDSSessionSetup._idsSessionInvitationSent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraIDSSessionSetup._idsSessionStartedOnReceiver
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraIDSSessionSetup._idsSessionStartedOnResident
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._bitRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._bytesRead
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._cameraUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._chunkSequenceNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._iFrameInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._imageHeight
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._imageWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._sequenceNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._sessionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._status
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingBulkSendDataRead._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingClipNotification._cameraUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingClipNotification._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingClipNotification._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingClipNotification._recordingEventTriggers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingClipNotification._sequenceNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingClipNotification._sessionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingClipNotification._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingFragmentAnalyzed._analysisResultCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingFragmentAnalyzed._cameraUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingFragmentAnalyzed._clipModelID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingFragmentAnalyzed._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingFragmentAnalyzed._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingFragmentAnalyzed._recordingReason
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingFragmentAnalyzed._sequenceNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingFragmentAnalyzed._sessionUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingFragmentAnalyzed._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._clipModelUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._didCausePreviousClipToFinalizeBecauseMaxDurationExceeded
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._errorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._operationStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._operationType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._retryCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._runTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraRecordingUploadOperation._totalClipDuration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._isInclusionZone
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._isReachabilityNotificationEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._isRecordingAudioEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._isRecordingCapable
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._isRecordingEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._isSmartBulletinBoardNotificationEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._numActivityZonesBinString
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._numPointsInActivityZonesBinStrings
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSettings._recordingEventTriggers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._certified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._controllerMessaging
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._forNotification
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._idsSessionSetup
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._isLocal
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._phoneToWatch
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._receivedSnapshotFromAccessory
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._residentMessaging
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._residentToPhone
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._sentSnapshotRequestToAccessory
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._sessionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._underlyingErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._underlyingErrorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshot._watchMessaging
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshotIDSTransfer._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshotIDSTransfer._receivedImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshotIDSTransfer._sentImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshotMessaging._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshotMessaging._receivedSnapshotRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshotMessaging._sentSnapshotRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraSnapshotMessaging._sentSnapshotResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._certified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._controllerMessaging
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._idsSessionSetup
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._initialConfiguration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._isLocal
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._isStreamStarted
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._phoneIDSConnectionSetup
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._receivedFirstFrame
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._reconfigurations
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._residentMessaging
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._resolutionCounts
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._resolutionOnClose
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._sessionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._startupDelay
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._underlyingErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._underlyingErrorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._watchIDSConnectionSetup
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStream._watchMessaging
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamConfigure._audioCodec
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamConfigure._cryptoSuite
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamConfigure._framerate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamConfigure._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamConfigure._resolution
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamConfigure._sampleRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamIDSConnSetup._audioConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamIDSConnSetup._keepaliveConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamIDSConnSetup._videoConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamIDSConnSetupParameters._connectionComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamIDSConnSetupParameters._connectionRequested
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamIDSConnSetupParameters._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamMessaging._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamMessaging._receivedConnSetup
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamMessaging._receivedNegotiationRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamMessaging._receivedStartRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamMessaging._sentConnSetup
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamMessaging._sentNegotiationRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamMessaging._sentNegotiationResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamMessaging._sentStartRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamMessaging._sentStartResponse
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamReconfigure._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamReconfigure._reconfigurationTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraStreamReconfigure._resolution
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraUserSettings._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraUserSettings._isImportingFromPhotoLibraryEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraUserSettings._isOwner
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCameraUserSettings._isSharingFaceClassificationsEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCharacteristic._characteristicType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCharacteristic._serviceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCharacteristicEvent._containsValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCharacteristicEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCharacteristicThresholdEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCharacteristicThresholdEvent._maxPresent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCharacteristicThresholdEvent._minPresent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._dataSyncState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._fetchCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._hasDecryptionFailed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._homeDataMegabytesFetched
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._homeDataMegabytesPushed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._homeManagerFetchCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._homeManagerUploadCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._homeZoneFetchCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._homeZoneUploadCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._lastDecryptionFailed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._legacyHomeDataMegabytesFetched
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._legacyHomeDataMegabytesPushed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._pushCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._topErrors
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._topReasons
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._uploadCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._uploadErrorCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSync._uploadMaximumDelayReached
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSyncInfoTuple._count
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSyncInfoTuple._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitCloudSyncInfoTuple._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._databaseSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._hasActiveWatchDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._hasWatchDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._homeConfigurations
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._isDemoConfiguration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._isResidentCapable
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._isResidentEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._metadataVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitConfigurationData._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitDataModelMigration._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitDataModelMigration._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitDataModelMigration._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitDatabaseCKOperationCompletionEvent._containerType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitDatabaseCKOperationCompletionEvent._didSucceed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitDatabaseCKOperationCompletionEvent._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitDatabaseCKOperationCompletionEvent._errorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitDatabaseCKOperationCompletionEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitDatabaseCKOperationCompletionEvent._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTrigger._activationState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTrigger._activationType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTrigger._containsRecurrences
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTrigger._events
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTrigger._executeOnce
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTrigger._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTrigger._predicate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._calendarEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._charEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._charThresholdEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._durationEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._endEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._locationEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._presenceEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._significantTimeEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerEvent._thresholdEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerExecutionSession._endEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerExecutionSession._executionState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerExecutionSession._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerExecutionSession._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerExecutionSession._sessionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerExecutionSession._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerExecutionSession._triggerEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerUserConfirmationReceiverSession._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerUserConfirmationReceiverSession._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerUserConfirmationReceiverSession._sessionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerUserConfirmationReceiverSession._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerUserConfirmationReceiverSession._userResponseDelay
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerUserConfirmationSend._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerUserConfirmationSend._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerUserConfirmationSend._sessionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventTriggerUserConfirmationSend._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._acceptedXPCRequestsCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._activeDay
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._activeDaysPerMonthCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._averageSampledProcessMemoryUsage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._dataSyncState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._erroredXPCRequestsCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._filteredXPCNotificationsCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._hapBTLEConnectionPerReasonsCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._hapBTLEConnectionsCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._hapBTLEDiscoveriesCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._hapIPInvalidationCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._hapIPReceivedHTTPEventCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._hapIPReceivedHTTPResponsesCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._hapIPSentHTTPRequestsCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._jetsamReasonHighwaterCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._jetsamReasonOtherCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._jetsamReasonProcessLimitCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._jetsamReasonUnknownKillCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._peakSampledProcessMemoryUsage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._processLaunchCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._processMemoryPressureStateCriticalCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._processMemoryPressureStateWarningCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._remoteMessagesReceivedCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._remoteMessagesSentCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._sentXPCNotificationsCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitEventsAggregationReport._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHAPService._serviceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeCameraConfigurations._enabledResidentsDeviceCapabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeCameraConfigurations._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeCameraConfigurations._homeKitCameraSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeCameraConfigurations._homeKitCameraUserSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeCameraConfigurations._isFaceClassificationEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeCameraConfigurations._isOwner
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._autoThirdPartyJetEnable
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._currentMediaAccessoryFallbackMediaUserType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._enabledResidentsDeviceCapabilities
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._eventTriggers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._firstHAPAccessoryAddedCohortWeek
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._hapServicesListCertifieds
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._hapServicesLists
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._homeCreationCohortWeek
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._homeKitMultiUserSettings
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._homepodSynchLatency
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._isOwner
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._isPrimaryResident
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._isResidentAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._networkProtectionStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAccessoriesNetworkProtectionAutoFullAccess
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAccessoriesNetworkProtectionAutoProtectedHomeKitLAN
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAccessoriesNetworkProtectionAutoProtectedMainLAN
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAccessoriesNetworkProtectionFullAccess
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAccessoriesNetworkProtectionHomeKitOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAccessoriesNetworkProtectionUnprotected
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAccessoriesWiFiPPSKCredential
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAccessoryServiceGroups
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAdmins
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAppleAudioAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAppleMediaAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numAppleTVAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numBridgedAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numBridgedTargetControllers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCameraAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCameraAccessoriesReachabilityNotificationEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCameraAccessoriesRecordingAudioEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCameraAccessoriesRecordingEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCameraAccessoriesSmartBulletinNotificationEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCameraAccessoriesSupportRecording
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCameraAccessoriesWithActivityZonesEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCertifiedAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCertifiedBridgedTargetControllers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numCertifiedTargetControllers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numConfiguredScenes
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numEventTriggers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numHAPAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numHAPBLEAccessoriesSupportJet
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numHAPBTAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numHAPBatteryServiceAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numHAPIPAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numHAPIPAccessoriesSupportJet
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numHAPNoeAccessoriesSupportJet
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numHAPSpeakerServiceAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numLightProfilesWithNaturalLightingEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numLightProfilesWithNaturalLightingSupported
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numLightProfilesWithNaturalLightingUsed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numMediaSystems
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numMoe1Accessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numMoe2Accessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numNoeAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numNoeBRCap
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numNoeBRs
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numNoeFullCap
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numNoeMinCap
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numNoeRoutCap
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numNoeSleepCap
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numNotCertifiedAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numPoe2Count
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numPoeCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numPrimaryHAPSpeakerServiceAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numResidentsEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numRooms
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numScenes
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numServices
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numShortcuts
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numTargetControllers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numTelevisionAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numTimerTriggers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numTriggerOwnedConfiguredScenes
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numTriggers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numUsers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numWholeHouseAudioAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._numZones
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._primaryHAPServicesListCertifieds
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._primaryHAPServicesLists
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeConfiguration._primaryReportingDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeSharing._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeSharing._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeSharing._responseType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeSharing._stage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitHomeSharing._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitLocationEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitLocationEvent._notifyOnEntry
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitLocationEvent._notifyOnExit
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageHomeLocationReport._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageHomeLocationReport._nearestLOI
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageHomeLocationReport._numIterationToConverge
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageHomeLocationReport._rawLocations
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageHomeLocationReport._selectedHomeLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageHomeLocationReport._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageLocation._accuracy
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageLocation._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageLocation._latitude
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageLocation._longitude
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageLocation._numOfReachableBTLEAcc
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageLocation._numOfReachableIPAcc
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageLocation._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._direction
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._isSecure
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._messageName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._messageType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._payloadSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._transactionID
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMessageTransported._transport
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMultiUserSettings._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMultiUserSettings._homeKitMultiUserSettingsValuesByKeyPaths
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMultiUserSettings._isOwner
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMultiUserSettingsValueByKeyPath._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMultiUserSettingsValueByKeyPath._homeKitMultiUserSettingsValueData
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMultiUserSettingsValueByKeyPath._homeKitMultiUserSettingsValueInteger
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMultiUserSettingsValueByKeyPath._homeKitMultiUserSettingsValueString
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitMultiUserSettingsValueByKeyPath._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitNetworkProtectionReport._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitNetworkProtectionReport._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPredicate._containsCalendarTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPredicate._containsCharacteristicValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPredicate._containsSignificantTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPredicate._containsSignificantTimeOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPredicate._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPredicate._presenceEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceEvent._presenceEventGranularity
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceEvent._presenceEventType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceRegion._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceRegion._numPresenceAuthUsers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceRegion._numPresenceRegionValidUsers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceRegion._numUsers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceRegion._primaryResident
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceRegion._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceReport._authStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceReport._computeStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceReport._direction
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceReport._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceReport._reason
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceReport._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitPresenceReport._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitProcessMemoryPressureEvent._dataSyncState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitProcessMemoryPressureEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitProcessMemoryPressureEvent._processMemoryState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitProcessMemoryPressureEvent._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRelaySession._actionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRelaySession._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRelaySession._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRelaySession._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRelaySession._statusCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRelaySession._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogin._delay
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogin._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogin._loginType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogin._requester
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogin._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogin._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogout._delay
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogout._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogout._requester
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogout._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteLogout._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteSession._closeReason
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteSession._deviceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteSession._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteSession._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteSession._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteSession._role
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitRemoteSession._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitResetConfiguration._errorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitResetConfiguration._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitResetConfiguration._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSignificantTimeEvent._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSignificantTimeEvent._offsetPresent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSignificantTimeEvent._significantEvent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._actionType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._currentConfigurationVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._lastSyncedConfigurationVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._numEntities
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._numFailures
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._numIncompleteOperations
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._outcome
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._serverConfigurationVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriCommand._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriSync._currentConfigurationVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriSync._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriSync._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriSync._lastSyncedConfigurationVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriSync._reasons
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriSync._serverConfigurationVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSiriSync._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateAutomaticUpdateToggled._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateAutomaticUpdateToggled._isEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateAutomaticUpdateToggled._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateFetched._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateFetched._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateFetched._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateFetched._source
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateFetched._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateFetched._wasNewUpdateFetched
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateStarted._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateStarted._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateStarted._isAutomaticUpdateEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateStarted._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitSoftwareUpdateStarted._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerCommand._certified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerCommand._command
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerCommand._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerCommand._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerCommand._transportType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerCommand._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerError._certified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerError._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerError._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerError._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerError._transportType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitTargetControllerError._vendorDetails
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUpdateEventTrigger._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUpdateEventTrigger._requestOrigin
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUpdateEventTrigger._resultErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUpdateEventTrigger._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUpdateEventTrigger._updateType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUserPresenceAuthorization._auth
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUserPresenceAuthorization._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUserPresenceAuthorization._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUserPresenceCompute._compute
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUserPresenceCompute._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitUserPresenceCompute._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitValue._boolVal
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitValue._dataVal
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitValue._doubleVal
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitValue._floatVal
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitValue._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitValue._intVal
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitValue._stringVal
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitVendorInformation._category
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitVendorInformation._firmwareVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitVendorInformation._manufacturer
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitVendorInformation._model
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitVendorInformation._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitVendorInformation._productData
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitVideoResolutionCount._count
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitVideoResolutionCount._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitVideoResolutionCount._resolution
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWHAAccessControl._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWHAAccessControl._isP2PEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWHAAccessControl._isPasswordSet
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWHAAccessControl._privilegeLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWHAAccessControl._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWHASetting._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWHASetting._keyPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWHASetting._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWHASetting._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWatchCompanionConnectivityReport._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWatchCompanionConnectivityReport._numWatchAddEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWatchCompanionConnectivityReport._numWatchRemoveEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWatchCompanionConnectivityReport._reportComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDHomeKitWatchCompanionConnectivityReport._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_BTLEScanner.centralManager
|| __DATA.__objc_ivar _OBJC_IVAR_$_BTLEScanner.cubleScanner
|| __DATA.__objc_ivar _OBJC_IVAR_$_BTLEScanner.scanQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_BTLEScanner.scanTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_BTLEScanner.workQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessory._accessoryProfiles
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessory._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessory._primary
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessory._reachable
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessory._remotelyReachable
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessoryBrowserInjectedSettingsDevice._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessoryBundle.accessory
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessoryBundle.context
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessoryProfile._msgDispatcher
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessorySetting._constraints
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessorySetting._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessorySetting._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDAccessorySetting._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDBackingStoreModelObject._reserved
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipSegmentMetadata._byteLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipSegmentMetadata._byteOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipSegmentMetadata._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipSegmentMetadata._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipSegmentMetadata._height
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipSegmentMetadata._timeOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipSegmentMetadata._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipSegmentMetadata._width
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipsQuotaDisableCameraMessage._zoneName
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraClipsQuotaEnableCameraMessage._zoneName
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraNetworkConfig._ipv4SockAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDCameraNetworkConfig._ipv6SockAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDDeviceController._device
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDDeviceController._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDDeviceController._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDDeviceDiscoveryOperation._devices
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDDeviceDiscoveryOperation._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDDeviceDiscoveryOperation._operation
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDDeviceDiscoveryOperation._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDDeviceSetupSessionInternal._state
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHAPMetricsLogEvent._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._UUIDsOfRemovedHomes
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._accessAllowedWhenLocked
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._accessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._account
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._applicationData
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._cloudZones
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._currentDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._dataTag
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._dataVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._demoAccessories
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._demoFinalized
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._homes
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._incomingInvitations
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._lastCurrentHomeUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._pendingReasonSaved
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._pendingUserManagementOperations
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._primaryHomeUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._remoteAccounts
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._residentEnabledState
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._schemaVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeData._unprocessedOperationIdentifiers
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDHomeManagerXPCMessageSendPolicyParameters._active
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDIDSMessageTransport._service
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDIdentifierSaltStore._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDRemoteDeviceInformation._confirmationHandlers
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDRemoteDeviceInformation._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDRemoteMessagePolicy._allowsAnonymousMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDRemoteMessagePolicy._requiresAccountMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDRemoteMessagePolicy._requiresSecureMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDRemoteMessagePolicy._roles
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDRemoteMessagePolicy._transportRestriction
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDUnassociatedAccessory._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDUser._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDUser._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDUser._remoteAccessAllowed
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDUser._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDUserMessagePolicy._homeUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDUserMessagePolicy._requiresCameraStreamingAccess
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDUserMessagePolicy._requiresRemoteAccess
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDUserMessagePolicy._userPrivilege
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDWatchSyncState._syncs
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDXPCRequestTracker._lock
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDXPCRequestTracker._queue
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMDXPCRequestTracker._timer
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBEncodeOption._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBEncodeOption._isSPI
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBEncodeOption._isXPC
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._hapCategories
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._hapCharacteristics
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._hapServices
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_HMPBMetadata._version
|| __DATA.__objc_ivar _OBJC_IVAR_$_ScanContext.timeout
|| __DATA.__objc_ivar _OBJC_IVAR_$__HMDHTTPServerClientConnection._pendingTransactionCompletionHandlers
|| __DATA_CONST.__const _HMAccessoryPairingsAuditedTimestampCodingKey
|| __DATA_CONST.__const _HMAccessorySharedAdminAddedTimestampCodingKey
|| __DATA_CONST.__const _HMAssistantObjectAccessory
|| __DATA_CONST.__const _HMAssistantObjectAccessoryIdentifier
|| __DATA_CONST.__const _HMAssistantObjectAccessoryPrimaryServiceIdentifier
|| __DATA_CONST.__const _HMAssistantObjectAssociatedServiceType
|| __DATA_CONST.__const _HMAssistantObjectCharacteristics
|| __DATA_CONST.__const _HMAssistantObjectGroupIdentifiers
|| __DATA_CONST.__const _HMAssistantObjectGroupType
|| __DATA_CONST.__const _HMAssistantObjectGroups
|| __DATA_CONST.__const _HMAssistantObjectHashedRouteUID
|| __DATA_CONST.__const _HMAssistantObjectHome
|| __DATA_CONST.__const _HMAssistantObjectHomeIdentifier
|| __DATA_CONST.__const _HMAssistantObjectIdentifier
|| __DATA_CONST.__const _HMAssistantObjectName
|| __DATA_CONST.__const _HMAssistantObjectReference
|| __DATA_CONST.__const _HMAssistantObjectRelatedIdentifiers
|| __DATA_CONST.__const _HMAssistantObjectRoom
|| __DATA_CONST.__const _HMAssistantObjectRoomIdentifier
|| __DATA_CONST.__const _HMAssistantObjectSPIIdentifier
|| __DATA_CONST.__const _HMAssistantObjectSceneActions
|| __DATA_CONST.__const _HMAssistantObjectSceneType
|| __DATA_CONST.__const _HMAssistantObjectServiceSubType
|| __DATA_CONST.__const _HMAssistantObjectServiceType
|| __DATA_CONST.__const _HMAssistantObjectStatus
|| __DATA_CONST.__const _HMAssistantObjectType
|| __DATA_CONST.__const _HMAssistantObjectZoneIdentifiers
|| __DATA_CONST.__const _HMAssistantObjectZones
|| __DATA_CONST.__const _HMBaseJobIdentifierStringForTriggers
|| __DATA_CONST.__const _HMCharacteristicKeyPath
|| __DATA_CONST.__const _HMCharacteristicValueKeyPath
|| __DATA_CONST.__const _HMDAccessoryAllowedHostsPreviewHelperCacheTimeout
|| __DATA_CONST.__const _HMDAccessoryBridgedAccessoryAddedNotification
|| __DATA_CONST.__const _HMDAccessoryBridgedAccessoryRemovedNotification
|| __DATA_CONST.__const _HMDAccessoryBridgedAccessoryUUIDKey
|| __DATA_CONST.__const _HMDAccessoryCharacteristicsChangedNotificationKey
|| __DATA_CONST.__const _HMDAccessoryCharacteristicsResponseReceivedNotification
|| __DATA_CONST.__const _HMDAccessoryConfigNumberUpdatedNotificationKey
|| __DATA_CONST.__const _HMDAccessoryConfiguredNetworkProtectionGroupUpdatedNotification
|| __DATA_CONST.__const _HMDAccessoryConnectedNotification
|| __DATA_CONST.__const _HMDAccessoryDataStreamOpenReasonDiagnosticsData
|| __DATA_CONST.__const _HMDAccessoryDiagnosticsDataStreamDataKey
|| __DATA_CONST.__const _HMDAccessoryDiagnosticsDataStreamDataSequenceNumberKey
|| __DATA_CONST.__const _HMDAccessoryDiagnosticsDataStreamFileType
|| __DATA_CONST.__const _HMDAccessoryDiagnosticsDataStreamMetadataKey
|| __DATA_CONST.__const _HMDAccessoryDiagnosticsDataStreamUrlParametersKey
|| __DATA_CONST.__const _HMDAccessoryDiagnosticsTransferTransportDataStream
|| __DATA_CONST.__const _HMDAccessoryDisconnectedNotification
|| __DATA_CONST.__const _HMDAccessoryDoesSupportBulkSendDataStreamNotificationKey
|| __DATA_CONST.__const _HMDAccessoryFirmwareVersionUpdatedNotificationKey
|| __DATA_CONST.__const _HMDAccessoryInitialCategoryUpdatedNotification
|| __DATA_CONST.__const _HMDAccessoryInitialManufacturerUpdatedNotification
|| __DATA_CONST.__const _HMDAccessoryIsNotReachableNotificationKey
|| __DATA_CONST.__const _HMDAccessoryIsNotRemotelyReachableNotificationKey
|| __DATA_CONST.__const _HMDAccessoryIsReachableNotificationKey
|| __DATA_CONST.__const _HMDAccessoryIsRemotelyReachableNotificationKey
|| __DATA_CONST.__const _HMDAccessoryNameUpdatedNotificationKey
|| __DATA_CONST.__const _HMDAccessoryNetworkProtectionGroupCategoryCodingKey
|| __DATA_CONST.__const _HMDAccessoryNetworkProtectionGroupProtectionModeActivated
|| __DATA_CONST.__const _HMDAccessoryNetworkProtectionGroupProtectionModeDeactivated
|| __DATA_CONST.__const _HMDAccessoryNetworkProtectionGroupProtectionModeUpdated
|| __DATA_CONST.__const _HMDAccessoryNotificationKey
|| __DATA_CONST.__const _HMDAccessoryPreviousConfiguredNetworkProtectionGroupUUIDKey
|| __DATA_CONST.__const _HMDAccessoryPreviousFirmwareVersionKey
|| __DATA_CONST.__const _HMDAccessoryProfileAddedNotification
|| __DATA_CONST.__const _HMDAccessoryResidentReachabilityNotificationEnabledMessageKey
|| __DATA_CONST.__const _HMDAccessoryResidentReachabilityNotificationRegistrationMessage
|| __DATA_CONST.__const _HMDAccessoryResidentReachabilityNotificationUUIDsMessageKey
|| __DATA_CONST.__const _HMDAccessoryResidentReachabilityNotificationUserIDMessageKey
|| __DATA_CONST.__const _HMDAccessoryServiceAddedNotification
|| __DATA_CONST.__const _HMDAccessorySettingConfigurationVersion
|| __DATA_CONST.__const _HMDAccessorySettingValueUpdated
|| __DATA_CONST.__const _HMDAccessoryWakeNotificationStarted
|| __DATA_CONST.__const _HMDAccountAddedDeviceNotification
|| __DATA_CONST.__const _HMDAccountHandlesUpdatedNotification
|| __DATA_CONST.__const _HMDAccountNotificationKey
|| __DATA_CONST.__const _HMDAccountRegistryAddedAccountNotification
|| __DATA_CONST.__const _HMDAccountRegistryRemovedAccountNotification
|| __DATA_CONST.__const _HMDAccountRemovedDeviceNotification
|| __DATA_CONST.__const _HMDActionSetNotificationKey
|| __DATA_CONST.__const _HMDAppleAccountManagerAccountModified
|| __DATA_CONST.__const _HMDAppleAccountManagerAccountUpdated
|| __DATA_CONST.__const _HMDAppleAccountManagerDeviceUpdated
|| __DATA_CONST.__const _HMDAppleAccountManagerResolved
|| __DATA_CONST.__const _HMDAppleAccountSettingsHomeStateUpdatedNotificationKey
|| __DATA_CONST.__const _HMDAppleAccountSettingsKeychainSyncStateUpdatedNotificationKey
|| __DATA_CONST.__const _HMDAppleAccountSettingsUpdatedNotification
|| __DATA_CONST.__const _HMDAppleMediaAccessoryDeviceIsReachableNotification
|| __DATA_CONST.__const _HMDAppleMediaAccessoryDeviceUpdatedNotification
|| __DATA_CONST.__const _HMDAppleMediaAccessoryManufacturer
|| __DATA_CONST.__const _HMDAppleMediaAccessorySoftwareVersionUpdatedNotificationKey
|| __DATA_CONST.__const _HMDAppleMediaAccessoryWiFiNetworkInfoUpdatedNotification
|| __DATA_CONST.__const _HMDApplicationEntitlementString
|| __DATA_CONST.__const _HMDApplicationLegacyPrivateEntitlementString
|| __DATA_CONST.__const _HMDApplicationPrivateEntitlementString
|| __DATA_CONST.__const _HMDBackboardServicesRelaunchNotification
|| __DATA_CONST.__const _HMDBackingStoreLocalDataReset
|| __DATA_CONST.__const _HMDBulletinAccessoryContextKey
|| __DATA_CONST.__const _HMDBulletinActionButtonActionDescriptionKey
|| __DATA_CONST.__const _HMDBulletinActionButtonCategoryKey
|| __DATA_CONST.__const _HMDBulletinActionCategoryIDKey
|| __DATA_CONST.__const _HMDBulletinActionDismissButtonKey
|| __DATA_CONST.__const _HMDBulletinActionIDDismissButton
|| __DATA_CONST.__const _HMDBulletinActionIDMicroButton
|| __DATA_CONST.__const _HMDBulletinActionProvideCameraRecordingFeedback
|| __DATA_CONST.__const _HMDBulletinActionTriggerConfirmDoNotExecute
|| __DATA_CONST.__const _HMDBulletinActionTriggerConfirmExecute
|| __DATA_CONST.__const _HMDBulletinCategoryDoorsIdentifier
|| __DATA_CONST.__const _HMDBulletinCategoryFirmwareUpdate
|| __DATA_CONST.__const _HMDBulletinCategoryIncomingInvitation
|| __DATA_CONST.__const _HMDBulletinCategoryLocksIdentifier
|| __DATA_CONST.__const _HMDBulletinCategoryNormalType
|| __DATA_CONST.__const _HMDBulletinCategoryProvideCameraRecordingFeedback
|| __DATA_CONST.__const _HMDBulletinCategorySecureTrigger
|| __DATA_CONST.__const _HMDBulletinCategorySecuritySystemsIdentifier
|| __DATA_CONST.__const _HMDBulletinCategoryWindowsIdentifier
|| __DATA_CONST.__const _HMDBulletinCharacteristicContextKey
|| __DATA_CONST.__const _HMDBulletinCharacteristicTypeContextKey
|| __DATA_CONST.__const _HMDBulletinCharacteristicValueContextKey
|| __DATA_CONST.__const _HMDBulletinContextDidDetectedPerson
|| __DATA_CONST.__const _HMDBulletinContextStateNumberKey
|| __DATA_CONST.__const _HMDBulletinHomeContextKey
|| __DATA_CONST.__const _HMDBulletinHomeIncomingInvitationContextKey
|| __DATA_CONST.__const _HMDBulletinInternalContextHomeUUIDKey
|| __DATA_CONST.__const _HMDBulletinInternalContextTriggerUUIDKey
|| __DATA_CONST.__const _HMDBulletinLongLookCategoryID
|| __DATA_CONST.__const _HMDBulletinRequestsCodingKey
|| __DATA_CONST.__const _HMDBulletinServiceContextKey
|| __DATA_CONST.__const _HMDBulletinServiceTypeContextKey
|| __DATA_CONST.__const _HMDBulletinTriggerContextKey
|| __DATA_CONST.__const _HMDBulletinUserNotificationCenterCodingKey
|| __DATA_CONST.__const _HMDCameraClipAddSignificantEventOperationAssetItemTypeHint
|| __DATA_CONST.__const _HMDCameraClipFeedbackFindAndUploadSubmittedClipsMessage
|| __DATA_CONST.__const _HMDCameraClipManagerMaxClipDurationPreferenceKey
|| __DATA_CONST.__const _HMDCameraClipManagerMessageKeyFaceMisclassificationFaceCropData
|| __DATA_CONST.__const _HMDCameraClipManagerMessageKeyFaceMisclassificationPersonManagerUUID
|| __DATA_CONST.__const _HMDCameraClipManagerMessageKeyFaceMisclassificationPersonUUID
|| __DATA_CONST.__const _HMDCameraClipManagerRemoteHandleFaceMisclassificationMessage
|| __DATA_CONST.__const _HMDCameraClipManagerRequestLogEventFetchVideoSegmentsAssetRequestName
|| __DATA_CONST.__const _HMDCameraClipsCloudContainerIdentifier
|| __DATA_CONST.__const _HMDCameraClipsCloudContainerSourceApplicationBundleIdentifier
|| __DATA_CONST.__const _HMDCameraClipsQuotaErrorDomain
|| __DATA_CONST.__const _HMDCameraClipsQuotaFunctionNameDisableCamera
|| __DATA_CONST.__const _HMDCameraClipsQuotaFunctionNameEnableCamera
|| __DATA_CONST.__const _HMDCameraClipsQuotaServerErrorDomain
|| __DATA_CONST.__const _HMDCameraClipsQuotaServerNotificationFunctionNameAllCamerasDisabled
|| __DATA_CONST.__const _HMDCameraClipsQuotaServerNotificationKeyContainerIdentifier
|| __DATA_CONST.__const _HMDCameraClipsQuotaServerNotificationKeyFunctionName
|| __DATA_CONST.__const _HMDCameraClipsQuotaServerNotificationKeyPayload
|| __DATA_CONST.__const _HMDCameraClipsQuotaServerNotificationKeyRequestID
|| __DATA_CONST.__const _HMDCameraClipsQuotaServerNotificationKeyUserDSID
|| __DATA_CONST.__const _HMDCameraClipsQuotaServiceName
|| __DATA_CONST.__const _HMDCameraClipsZoneNamePrefix
|| __DATA_CONST.__const _HMDCameraEncodedSignificantEventDataMessageKey
|| __DATA_CONST.__const _HMDCameraProfileSettingsDidChangeNotification
|| __DATA_CONST.__const _HMDCameraProfileSettingsDidWriteToAccessoryNotification
|| __DATA_CONST.__const _HMDCameraProfileSettingsIsInitialSettingsUpdateNotificationKey
|| __DATA_CONST.__const _HMDCameraProfileSettingsNotificationKey
|| __DATA_CONST.__const _HMDCameraProfileSettingsZoneNamePrefix
|| __DATA_CONST.__const _HMDCameraProfileUnconfiguredNotification
|| __DATA_CONST.__const _HMDCameraReachabilityChangeReachableDebounceTimeout
|| __DATA_CONST.__const _HMDCameraReachabilityChangeUnreachableDebounceTimeout
|| __DATA_CONST.__const _HMDCameraRecordingBulkDataStreamFileType
|| __DATA_CONST.__const _HMDCameraRecordingBulkSendSessionOpenReasonRecord
|| __DATA_CONST.__const _HMDCameraRecordingBulkSendSessionOpenReasonVideoAnalysis
|| __DATA_CONST.__const _HMDCameraRecordingBulkSendSessionReadTimeoutFactorPreferenceKey
|| __DATA_CONST.__const _HMDCameraRecordingMetricNumberOfActiveRecordingSessionsKey
|| __DATA_CONST.__const _HMDCameraRecordingMetricReadyToRecordByCameraUUIDStringKey
|| __DATA_CONST.__const _HMDCameraRecordingMetricSystemResourceUsageLevelKey
|| __DATA_CONST.__const _HMDCameraRecordingReachabilityEventIgnoringFetchingLabel
|| __DATA_CONST.__const _HMDCameraRecordingSessionInitialRetryInterval
|| __DATA_CONST.__const _HMDCameraRecordingSessionMaxRetryInterval
|| __DATA_CONST.__const _HMDCameraSignificantEventDidOccurMessage
|| __DATA_CONST.__const _HMDCameraSignificantEventFetchHeroFrameMessage
|| __DATA_CONST.__const _HMDCameraSignificantEventNotificationClipReferenceKey
|| __DATA_CONST.__const _HMDCameraSignificantEventNotificationFaceCropAssetKey
|| __DATA_CONST.__const _HMDCameraSignificantEventNotificationHeroFrameAssetKey
|| __DATA_CONST.__const _HMDCameraSignificantEventNotificationUUIDMessageKey
|| __DATA_CONST.__const _HMDCharacteristicLocalNotificationRegistrationIdentifierPrefix
|| __DATA_CONST.__const _HMDCharacteristicTypeAccessoryFlags
|| __DATA_CONST.__const _HMDCharacteristicTypeActivityInterval
|| __DATA_CONST.__const _HMDCharacteristicTypeCCAEnergyDetectThreshold
|| __DATA_CONST.__const _HMDCharacteristicTypeCCASignalDetectThreshold
|| __DATA_CONST.__const _HMDCharacteristicTypeCameraOperatingModeIndicator
|| __DATA_CONST.__const _HMDCharacteristicTypeCharacteristicValueActiveTransitionCount
|| __DATA_CONST.__const _HMDCharacteristicTypeCharacteristicValueTransitionControl
|| __DATA_CONST.__const _HMDCharacteristicTypeCurrentTransport
|| __DATA_CONST.__const _HMDCharacteristicTypeDataStreamHAPTransport
|| __DATA_CONST.__const _HMDCharacteristicTypeDataStreamHAPTransportInterrupt
|| __DATA_CONST.__const _HMDCharacteristicTypeDisplayOrder
|| __DATA_CONST.__const _HMDCharacteristicTypeEventRetransmissionMaximum
|| __DATA_CONST.__const _HMDCharacteristicTypeEventSnapshotsActive
|| __DATA_CONST.__const _HMDCharacteristicTypeEventTransmissionCounters
|| __DATA_CONST.__const _HMDCharacteristicTypeHeartBeat
|| __DATA_CONST.__const _HMDCharacteristicTypeHomeKitCameraActive
|| __DATA_CONST.__const _HMDCharacteristicTypeMACRetransmissionMaximum
|| __DATA_CONST.__const _HMDCharacteristicTypeMACTransmissionCounters
|| __DATA_CONST.__const _HMDCharacteristicTypeManagedNetworkEnable
|| __DATA_CONST.__const _HMDCharacteristicTypeManuallyDisabled
|| __DATA_CONST.__const _HMDCharacteristicTypeMaximumTransmitPower
|| __DATA_CONST.__const _HMDCharacteristicTypeNetworkAccessViolationControl
|| __DATA_CONST.__const _HMDCharacteristicTypeNetworkClientControl
|| __DATA_CONST.__const _HMDCharacteristicTypeNetworkClientStatusControl
|| __DATA_CONST.__const _HMDCharacteristicTypeOperatingStateResponse
|| __DATA_CONST.__const _HMDCharacteristicTypePasswordSetting
|| __DATA_CONST.__const _HMDCharacteristicTypePeriodicSnapshotsActive
|| __DATA_CONST.__const _HMDCharacteristicTypePing
|| __DATA_CONST.__const _HMDCharacteristicTypePrivilege
|| __DATA_CONST.__const _HMDCharacteristicTypeProductData
|| __DATA_CONST.__const _HMDCharacteristicTypeReceivedSignalStrengthIndication
|| __DATA_CONST.__const _HMDCharacteristicTypeReceiverSensitivity
|| __DATA_CONST.__const _HMDCharacteristicTypeRecordingAudioActive
|| __DATA_CONST.__const _HMDCharacteristicTypeRouterStatus
|| __DATA_CONST.__const _HMDCharacteristicTypeSetupDataStreamTransport
|| __DATA_CONST.__const _HMDCharacteristicTypeSignalToNoiseRatio
|| __DATA_CONST.__const _HMDCharacteristicTypeSiriInputType
|| __DATA_CONST.__const _HMDCharacteristicTypeSleepInterval
|| __DATA_CONST.__const _HMDCharacteristicTypeSupportedCharacteristicValueTransitionConfiguration
|| __DATA_CONST.__const _HMDCharacteristicTypeSupportedDataStreamTransportConfiguration
|| __DATA_CONST.__const _HMDCharacteristicTypeSupportedDiagnosticsSnapshot
|| __DATA_CONST.__const _HMDCharacteristicTypeSupportedRouterConfiguration
|| __DATA_CONST.__const _HMDCharacteristicTypeThirdPartyCameraActive
|| __DATA_CONST.__const _HMDCharacteristicTypeTransmitPower
|| __DATA_CONST.__const _HMDCharacteristicTypeVideoAnalysisActive
|| __DATA_CONST.__const _HMDCharacteristicTypeWANConfigurationList
|| __DATA_CONST.__const _HMDCharacteristicTypeWANStatusList
|| __DATA_CONST.__const _HMDCharacteristicTypeWakeConfiguration
|| __DATA_CONST.__const _HMDCharacteristicTypeWiFiCapabilities
|| __DATA_CONST.__const _HMDCharacteristicTypeWiFiConfigurationControl
|| __DATA_CONST.__const _HMDCharacteristicTypeWiFiSatelliteStatus
|| __DATA_CONST.__const _HMDCloudPairedMetadataLogCategoryName
|| __DATA_CONST.__const _HMDCloudPhotosEnabledDidChangeNotification
|| __DATA_CONST.__const _HMDCloudShareInviteMessage
|| __DATA_CONST.__const _HMDCloudShareInviteMessageKeyInvitationData
|| __DATA_CONST.__const _HMDCloudShareRequestInviteMessage
|| __DATA_CONST.__const _HMDCloudZoneReadyInitialFetchKey
|| __DATA_CONST.__const _HMDCloudZoneReadyNotification
|| __DATA_CONST.__const _HMDCloudZoneReadyServerTokenChangedKey
|| __DATA_CONST.__const _HMDCloudZoneReadyZoneIDKey
|| __DATA_CONST.__const _HMDCompanionManagerUpdatedCompanionNotification
|| __DATA_CONST.__const _HMDCoreDuetTriggerMicroLocationsLocalizationScanKey
|| __DATA_CONST.__const _HMDCoreDuetTriggerMicroLocationsRecordingScanKey
|| __DATA_CONST.__const _HMDDataStreamMessageProtocolStream
|| __DATA_CONST.__const _HMDDataStreamMessageStreamDataKey
|| __DATA_CONST.__const _HMDDefaultCloudContainerIdentifier
|| __DATA_CONST.__const _HMDDefaultCloudContainerSourceApplicationBundleIdentifier
|| __DATA_CONST.__const _HMDDeviceCapabilitiesUpdatedDifferingFieldsNotificationKey
|| __DATA_CONST.__const _HMDDeviceCapabilitiesUpdatedNotification
|| __DATA_CONST.__const _HMDDeviceIsPublishingChangedNotification
|| __DATA_CONST.__const _HMDDeviceIsPublishingKey
|| __DATA_CONST.__const _HMDDeviceNotificationKey
|| __DATA_CONST.__const _HMDDeviceSetupManagerRunningNotificationKey
|| __DATA_CONST.__const _HMDDeviceUpdatedNotification
|| __DATA_CONST.__const _HMDDidReceiveRemoteMessageWithNoListenerNotification
|| __DATA_CONST.__const _HMDDoorbellChimeControllerMaximumAnnounceDelay
|| __DATA_CONST.__const _HMDEnableUnencryptedSRTPStream
|| __DATA_CONST.__const _HMDEventCountersArchivedEventCountersKey
|| __DATA_CONST.__const _HMDEventCountersArchivedEventCountersModifiedDateKey
|| __DATA_CONST.__const _HMDEventCountersDataStoreKey
|| __DATA_CONST.__const _HMDEventFlagsArchivedEventFlagsKey
|| __DATA_CONST.__const _HMDEventFlagsArchivedEventFlagsModifiedDateKey
|| __DATA_CONST.__const _HMDEventFlagsArchivedEventPeriodDefinedForEventFlagArchiveKey
|| __DATA_CONST.__const _HMDEventFlagsDataStoreKey
|| __DATA_CONST.__const _HMDEventTriggerCharacteristicBasedEventAddedNotification
|| __DATA_CONST.__const _HMDFMFStatusUpdateNotification
|| __DATA_CONST.__const _HMDGenericActionErrorDataKey
|| __DATA_CONST.__const _HMDHAPAccessoryUpdateCameraProfileNotificationSettingsReason
|| __DATA_CONST.__const _HMDHDSDictionaryKeyData
|| __DATA_CONST.__const _HMDHDSDictionaryKeyDataChunkSequenceNumber
|| __DATA_CONST.__const _HMDHDSDictionaryKeyDataSequenceNumber
|| __DATA_CONST.__const _HMDHDSDictionaryKeyDataType
|| __DATA_CONST.__const _HMDHDSDictionaryKeyIsLastDataChunk
|| __DATA_CONST.__const _HMDHDSDictionaryKeyMetadata
|| __DATA_CONST.__const _HMDHTTPMessageTransportClientIdentifier
|| __DATA_CONST.__const _HMDHTTPMessageTransportErrorDomain
|| __DATA_CONST.__const _HMDHTTPMessageTransportPayloadKey
|| __DATA_CONST.__const _HMDHTTPMessageTransportProtocolVersion
|| __DATA_CONST.__const _HMDHTTPMessageTransportStatusKey
|| __DATA_CONST.__const _HMDHTTPMessageTransportTransactionIdentifier
|| __DATA_CONST.__const _HMDHTTPServerMessageTransportSessionIdentifierKey
|| __DATA_CONST.__const _HMDHTTPServiceDomain
|| __DATA_CONST.__const _HMDHTTPServiceType
|| __DATA_CONST.__const _HMDHomeAccessoryRemovedNotification
|| __DATA_CONST.__const _HMDHomeActionSetRemovedNotification
|| __DATA_CONST.__const _HMDHomeAddedNotification
|| __DATA_CONST.__const _HMDHomeCreateUniquePSKClientConfigurationRequestKey
|| __DATA_CONST.__const _HMDHomeDidArriveHomeNotificationKey
|| __DATA_CONST.__const _HMDHomeDidDisableCharacteristicNotifyEventNotification
|| __DATA_CONST.__const _HMDHomeDidEnableCharacteristicNotifyEventNotification
|| __DATA_CONST.__const _HMDHomeDidLeaveHomeNotificationKey
|| __DATA_CONST.__const _HMDHomeKitVersion1_0String
|| __DATA_CONST.__const _HMDHomeKitVersion2_0String
|| __DATA_CONST.__const _HMDHomeKitVersion2_1String
|| __DATA_CONST.__const _HMDHomeKitVersion2_2String
|| __DATA_CONST.__const _HMDHomeKitVersion3_0String
|| __DATA_CONST.__const _HMDHomeKitVersion3_1String
|| __DATA_CONST.__const _HMDHomeKitVersion3_2String
|| __DATA_CONST.__const _HMDHomeKitVersion4_0String
|| __DATA_CONST.__const _HMDHomeKitVersion4_1String
|| __DATA_CONST.__const _HMDHomeKitVersion4_1_1String
|| __DATA_CONST.__const _HMDHomeKitVersion4_2String
|| __DATA_CONST.__const _HMDHomeKitVersion4_3String
|| __DATA_CONST.__const _HMDHomeKitVersion5_0String
|| __DATA_CONST.__const _HMDHomeKitVersion5_1String
|| __DATA_CONST.__const _HMDHomeKitVersion5_2String
|| __DATA_CONST.__const _HMDHomeKitVersion6_0String
|| __DATA_CONST.__const _HMDHomeKitVersion6_1String
|| __DATA_CONST.__const _HMDHomeKitVersion6_2String
|| __DATA_CONST.__const _HMDHomeKitVersion6_3String
|| __DATA_CONST.__const _HMDHomeKitVersion7_0String
|| __DATA_CONST.__const _HMDHomeKitVersion7_0_1String
|| __DATA_CONST.__const _HMDHomeKitVersion7_1String
|| __DATA_CONST.__const _HMDHomeLocationChangedNotification
|| __DATA_CONST.__const _HMDHomeManagerAccessorySymptomsUpdatedSaveReason
|| __DATA_CONST.__const _HMDHomeManagerAccountAddAccountReprocessSaveReason
|| __DATA_CONST.__const _HMDHomeManagerAccountAddAccountSaveReason
|| __DATA_CONST.__const _HMDHomeManagerAccountHandlePushbackSaveReason
|| __DATA_CONST.__const _HMDHomeManagerAccountRemoveAccountSaveReason
|| __DATA_CONST.__const _HMDHomeManagerAccountUpdatedDevicesSaveReason
|| __DATA_CONST.__const _HMDHomeManagerAccountUpdatedHandlesSaveReason
|| __DATA_CONST.__const _HMDHomeManagerActiveNotification
|| __DATA_CONST.__const _HMDHomeManagerDataSyncInProgressChangedNotification
|| __DATA_CONST.__const _HMDHomeManagerDevicePushbackSaveReason
|| __DATA_CONST.__const _HMDHomeManagerDeviceUpdatedNameSaveReason
|| __DATA_CONST.__const _HMDHomeManagerDeviceUpdatedSaveReason
|| __DATA_CONST.__const _HMDHomeManagerHomeDataLoadedNotification
|| __DATA_CONST.__const _HMDHomeManagerIDMSAccountUsernameDidUpdateNotification
|| __DATA_CONST.__const _HMDHomeManagerInactiveNotification
|| __DATA_CONST.__const _HMDHomeManagerKeyTransferResetTimerNotification
|| __DATA_CONST.__const _HMDHomeManagerLocalHomeDataRemovedNotification
|| __DATA_CONST.__const _HMDHomeManagerObjectRegistrationSaveReason
|| __DATA_CONST.__const _HMDHomeManagerResidentEnabledChangedNotification
|| __DATA_CONST.__const _HMDHomeManagerSaveReasonKey
|| __DATA_CONST.__const _HMDHomeManagerSaveRequestNotificationKey
|| __DATA_CONST.__const _HMDHomeNaturalLightingContextUpdatedNotification
|| __DATA_CONST.__const _HMDHomeNetworkProtectionUpdatedNotificationKey
|| __DATA_CONST.__const _HMDHomeNotificationKey
|| __DATA_CONST.__const _HMDHomeOwnerBecameTrustZoneCapableNotification
|| __DATA_CONST.__const _HMDHomePeriodicReaderInterval
|| __DATA_CONST.__const _HMDHomePersonManagerSettingsDidChangeNotification
|| __DATA_CONST.__const _HMDHomePresenceEvaluatedNotification
|| __DATA_CONST.__const _HMDHomePresenceMapNotificationKey
|| __DATA_CONST.__const _HMDHomePresenceMonitorUpdatedReason
|| __DATA_CONST.__const _HMDHomePresenceUpdateNotification
|| __DATA_CONST.__const _HMDHomeRegionEnteredNotificationKey
|| __DATA_CONST.__const _HMDHomeRegionExitedNotificationKey
|| __DATA_CONST.__const _HMDHomeRemoveClientConfigurationRequestKey
|| __DATA_CONST.__const _HMDHomeRemovedNotification
|| __DATA_CONST.__const _HMDHomeRoomRemovedNotification
|| __DATA_CONST.__const _HMDHomeServiceGroupAddedNotification
|| __DATA_CONST.__const _HMDHomeServiceGroupRemovedNotification
|| __DATA_CONST.__const _HMDHomeServiceGroupUpdatedNotification
|| __DATA_CONST.__const _HMDHomeServiceRemovedNotification
|| __DATA_CONST.__const _HMDHomeThisOwnerDeviceAddedAccessoryNotification
|| __DATA_CONST.__const _HMDHomeUserAddedNotification
|| __DATA_CONST.__const _HMDHomeUserRemovedNotification
|| __DATA_CONST.__const _HMDIDSActivityMonitorBroadcastDebounceDelay
|| __DATA_CONST.__const _HMDIdentityNotificationKey
|| __DATA_CONST.__const _HMDIdentityRegistryAddedIdentity
|| __DATA_CONST.__const _HMDIdentityRegistryRemovedIdentity
|| __DATA_CONST.__const _HMDKeyTransferAgentDataKey
|| __DATA_CONST.__const _HMDKeyTransferAgentPhaseBroadcastKey
|| __DATA_CONST.__const _HMDKeyTransferAgentPhaseKey
|| __DATA_CONST.__const _HMDKeyTransferAgentPhasePingKey
|| __DATA_CONST.__const _HMDKeyTransferAgentPhaseReplyPublicKey
|| __DATA_CONST.__const _HMDKeyTransferAgentPhaseRequestUUID
|| __DATA_CONST.__const _HMDKeyTransferAgentPhaseSendPrivateKey
|| __DATA_CONST.__const _HMDKeyTransferAgentPhaseSendPublicKey
|| __DATA_CONST.__const _HMDKeyTransferAgentUUIDKey
|| __DATA_CONST.__const _HMDLaunchHandlerKeepAliveClientsKey
|| __DATA_CONST.__const _HMDLocationAuthorizationKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerDataSyncStateKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerFetchCountKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerHasDecryptionFailedKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerHomeManagerFetchCountKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerHomeManagerUploadCountKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerHomeZoneFetchCountKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerHomeZoneUploadCountKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerLastDecryptionFailedKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerPushCountKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerRequestGroupKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerTopErrorsKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerTopReasonsKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerUploadCountKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerUploadErrorCountKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsAnalyzerUploadMaximumDelayReachedKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsHomeDataBytesFetchedKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsHomeDataBytesPushedKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsLegacyHomeDataBytesFetchedKey
|| __DATA_CONST.__const _HMDLogEventCloudSyncEventsLegacyHomeDataBytesPushedKey
|| __DATA_CONST.__const _HMDLogEventReachabilityEventsAnalyzerCameraRecordingOfflineDurationCounter
|| __DATA_CONST.__const _HMDLogEventReachabilityEventsAnalyzerCameraRecordingReachabilityChangedCounter
|| __DATA_CONST.__const _HMDLogEventReachabilityEventsAnalyzerHomeHubReachabilityChangedCounter
|| __DATA_CONST.__const _HMDLogEventReachabilityEventsAnalyzerRequestGroup
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerAddAccessoryEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerAddSceneEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerAddShortcutEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerAddTriggerEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerBTDurationAggregation
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerCameraStreamStartFailureEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerCameraStreamStartSuccessEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerFetchCameraClipVideoSegmentsAssetEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerFirstPartyReadEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerFirstPartyWriteEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerIDSDurationAggregation
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerIPDurationAggregation
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerInternalRequestedReadEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerInternalRequestedWriteEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerIsActiveFlag
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerReadWriteBTFailureEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerReadWriteBTSuccessEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerReadWriteIDSFailureEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerReadWriteIDSSuccessEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerReadWriteIPFailureEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerReadWriteIPSuccessEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerRequestGroup
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerRunSceneEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerRunShortcutEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerSiriReadEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerSiriWriteEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerThirdPartyReadEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerThirdPartyWriteEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerTriggerFiredEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerUnknownSourceReadEventCounter
|| __DATA_CONST.__const _HMDLogEventUserActivityAnalyzerUnknownSourceWriteEventCounter
|| __DATA_CONST.__const _HMDLogEventXPCMessageCountTrackerDailyRequestGroup
|| __DATA_CONST.__const _HMDMRSetEndpointVolumeOperationFailedEndpointsKey
|| __DATA_CONST.__const _HMDMRSetEndpointVolumeOperationSucceededEndpointsKey
|| __DATA_CONST.__const _HMDMediaActionMediaProfilesMessageKey
|| __DATA_CONST.__const _HMDMediaActionRouterPlaybackArchiveMessageKey
|| __DATA_CONST.__const _HMDMediaActionRouterPlaybackArchiveOptionsMessageKey
|| __DATA_CONST.__const _HMDMediaActionRouterPlaybackSessionIdentifierMessageKey
|| __DATA_CONST.__const _HMDMediaActionRouterPlaybackSourceMessageKey
|| __DATA_CONST.__const _HMDMediaActionRouterPlaybackStateMessageKey
|| __DATA_CONST.__const _HMDMediaActionRouterPlaybackVolumeMessageKey
|| __DATA_CONST.__const _HMDMediaActionRoutingMessage
|| __DATA_CONST.__const _HMDMediaPlaybackActionErrorDataKey
|| __DATA_CONST.__const _HMDMediaProfileSetPowerKey
|| __DATA_CONST.__const _HMDMediaProfileSetPowerRequestKey
|| __DATA_CONST.__const _HMDMediaProfileSetValueUnsupportedAttributeKey
|| __DATA_CONST.__const _HMDMediaSessionDidUpdateAudioControlNotification
|| __DATA_CONST.__const _HMDMediaSessionDidUpdatePlaybackStateNotification
|| __DATA_CONST.__const _HMDMediaSessionForceNotifyMessageKey
|| __DATA_CONST.__const _HMDMediaSessionsRemovedNotification
|| __DATA_CONST.__const _HMDMediaSystemNotificationKey
|| __DATA_CONST.__const _HMDMessageHandlerFailureMetricEventIdentifierString
|| __DATA_CONST.__const _HMDNaturaLightingCurveBrightnessKey
|| __DATA_CONST.__const _HMDNaturaLightingCurveColorTemperatureKey
|| __DATA_CONST.__const _HMDNaturaLightingCurveColorTemperatureNotifyIntervalThresholdKey
|| __DATA_CONST.__const _HMDNaturaLightingCurveColorTemperatureNotifyValueChangeThresholdKey
|| __DATA_CONST.__const _HMDNaturaLightingCurveColorTemperatureTransitionPointsKey
|| __DATA_CONST.__const _HMDNaturaLightingCurveColorTemperatureValueUpdateIntervalKey
|| __DATA_CONST.__const _HMDNaturaLightingCurveTimeOfDayKey
|| __DATA_CONST.__const _HMDNaturalLightingCharacteristicValueTransitionUUID
|| __DATA_CONST.__const _HMDNaturalLightingCurveKey
|| __DATA_CONST.__const _HMDNaturalLightingCurveVersionKey
|| __DATA_CONST.__const _HMDNetworkProfileAccessoryNotificationKey
|| __DATA_CONST.__const _HMDNetworkRouterAccessViolationQueryEnablePreferenceKey
|| __DATA_CONST.__const _HMDNetworkRouterApplySettingsAction
|| __DATA_CONST.__const _HMDNetworkRouterClientIdentifierKey
|| __DATA_CONST.__const _HMDNetworkRouterFallbackHDS
|| __DATA_CONST.__const _HMDNetworkRouterFallbackRTP
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneAccessoryRecordType
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneCertificateRecordType
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneCertificateZoneName
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordNetworkDeclarationsAssetKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordNetworkDeclarationsKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordNetworkDeclarationsSignatureAssetKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordNetworkDeclarationsSignatureKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordPairedMetadataAssetKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordPairedMetadataKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordPairedMetadataSignatureAssetKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordPairedMetadataSignatureKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordProductGroupAssetKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordProductGroupKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordProductNumberAssetKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleCloudZoneRecordProductNumberKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerBackingStoreContainerIdentifierProduction
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerBackingStoreContainerIdentifierStaging
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorCertificatesZoneName
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneIDTokenUUIDString
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerBackingStorePreferenceKeyContainerEnvironment
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerBackingStorePreferenceKeyContainerIdentifier
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerCoordinatorLogCategoryName
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerLogCategoryName
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerMirrorLogCategoryName
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerNetworkDeclarationsKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerPairedMetadataKey
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerRulesLogCategoryName
|| __DATA_CONST.__const _HMDNetworkRouterFirewallRuleManagerSchedulerLogCategoryName
|| __DATA_CONST.__const _HMDNetworkRouterProfileAddedNotification
|| __DATA_CONST.__const _HMDNetworkRouterProfileRemovedNotification
|| __DATA_CONST.__const _HMDNetworkRouterSatelliteClientIdentifierKey
|| __DATA_CONST.__const _HMDNetworkRouterSatelliteProfileAddedNotification
|| __DATA_CONST.__const _HMDNetworkRouterSatelliteProfileRemovedNotification
|| __DATA_CONST.__const _HMDNotificationAccessoryChangedRoom
|| __DATA_CONST.__const _HMDNotificationAddedAccessoryKey
|| __DATA_CONST.__const _HMDNotificationCharacteristicValueUpdated
|| __DATA_CONST.__const _HMDNotificationCharacteristicValueUpdatedChangedCharacteristicsKey
|| __DATA_CONST.__const _HMDNotificationCharacteristicValueUpdatedReasonKey
|| __DATA_CONST.__const _HMDNotificationHomeAddedAccessory
|| __DATA_CONST.__const _HMDNotificationNetworkRouterFirewallRulesUpdatedAccessoriesKey
|| __DATA_CONST.__const _HMDNotificationNetworkRouterFirewallRulesUpdatedKey
|| __DATA_CONST.__const _HMDNotificationSourceKey
|| __DATA_CONST.__const _HMDPredicateUtilitiesSubsitutionVariable
|| __DATA_CONST.__const _HMDPreferenceAutoConfigureNewTargetControllers
|| __DATA_CONST.__const _HMDPreferenceAutoConfigureNewTargets
|| __DATA_CONST.__const _HMDPreferenceBTLEScanningTimeout
|| __DATA_CONST.__const _HMDPreferenceEnableAddAirPlay2Accessories
|| __DATA_CONST.__const _HMDPreferenceEnableAirPlay2Accessories
|| __DATA_CONST.__const _HMDPreferenceEnableAirPlay2Syncing
|| __DATA_CONST.__const _HMDPreferenceEnableAppleMediaAccessories
|| __DATA_CONST.__const _HMDPreferenceEnableAppleMediaSyncing
|| __DATA_CONST.__const _HMDPreferenceEnableMediaAccessories
|| __DATA_CONST.__const _HMDPreferenceEnableMediaLocalDiscovery
|| __DATA_CONST.__const _HMDPreferenceEnableNetworkRouterSupport
|| __DATA_CONST.__const _HMDPreferenceLEAdvertisingTimeout
|| __DATA_CONST.__const _HMDPreferencePlaybackStateTimeout
|| __DATA_CONST.__const _HMDPreferenceReachabilityTimeout
|| __DATA_CONST.__const _HMDPreferenceShouldLogPrivateInformation
|| __DATA_CONST.__const _HMDPreviousAccountNotificationKey
|| __DATA_CONST.__const _HMDProcessInfoStateKey
|| __DATA_CONST.__const _HMDPushToCloudTransactionRequest
|| __DATA_CONST.__const _HMDRecordingManagementServiceDidUpdateNotification
|| __DATA_CONST.__const _HMDRelayActivationSessionAccessoryCertificate
|| __DATA_CONST.__const _HMDRelayActivationSessionAccessoryChallenge
|| __DATA_CONST.__const _HMDRelayActivationSessionCertificateURL
|| __DATA_CONST.__const _HMDRelayActivationSessionChallenegeIdentifier
|| __DATA_CONST.__const _HMDRelayActivationSessionChallengeResponse
|| __DATA_CONST.__const _HMDRelayActivationSessionChallengeURL
|| __DATA_CONST.__const _HMDRelayActivationSessionFairPlayCertificateURL
|| __DATA_CONST.__const _HMDRelayActivationSessionFairPlaySAPSessionIdentifier
|| __DATA_CONST.__const _HMDRelayActivationSessionFairPlaySAPSessionTTL
|| __DATA_CONST.__const _HMDRelayActivationSessionFairPlaySAPSetupClientExchange
|| __DATA_CONST.__const _HMDRelayActivationSessionFairPlaySAPSetupServerExchange
|| __DATA_CONST.__const _HMDRelayActivationSessionFairPlaySAPSetupURL
|| __DATA_CONST.__const _HMDRelayActivationSessionMFiCertificate
|| __DATA_CONST.__const _HMDRelayActivationSessionPEMCertificateFooter
|| __DATA_CONST.__const _HMDRelayActivationSessionPEMCertificateHeader
|| __DATA_CONST.__const _HMDRelayActivationSessionPEMPublicKeyFooter
|| __DATA_CONST.__const _HMDRelayActivationSessionPEMPublicKeyHeader
|| __DATA_CONST.__const _HMDRelayActivationSessionProtocolVersionHeader
|| __DATA_CONST.__const _HMDRelayActivationSessionPublicKey
|| __DATA_CONST.__const _HMDRelayActivationSessionSignatureHeader
|| __DATA_CONST.__const _HMDRelayManagerIDSAccessTokenKey
|| __DATA_CONST.__const _HMDRelayManagerIDSAccessoryIDKey
|| __DATA_CONST.__const _HMDRelayManagerIDSConsentTokenKey
|| __DATA_CONST.__const _HMDRelayManagerIDSExpiryKey
|| __DATA_CONST.__const _HMDRelayManagerIDSServiceName
|| __DATA_CONST.__const _HMDRelayPairingClientAccessoryBagURL
|| __DATA_CONST.__const _HMDRemoteAccountForceCachingPreferenceKey
|| __DATA_CONST.__const _HMDRemoteAccountManagerAddedAccountNotification
|| __DATA_CONST.__const _HMDRemoteAccountManagerRemovedAccountNotification
|| __DATA_CONST.__const _HMDRemoteCameraReachabilityDidChangeMessage
|| __DATA_CONST.__const _HMDRemoteDeviceIsNotReachableNotification
|| __DATA_CONST.__const _HMDRemoteDeviceIsReachableNotification
|| __DATA_CONST.__const _HMDRemoteDeviceMonitorReachableNotification
|| __DATA_CONST.__const _HMDRemotePersonDataMessengerPerformCloudPullMessage
|| __DATA_CONST.__const _HMDResidentDeviceConfirmedStateChangedNotification
|| __DATA_CONST.__const _HMDResidentDeviceManagerAddResidentNotification
|| __DATA_CONST.__const _HMDResidentDeviceManagerRemoveResidentNotification
|| __DATA_CONST.__const _HMDResidentDeviceManagerResidentDeviceNotificationKey
|| __DATA_CONST.__const _HMDResidentDeviceManagerUpdatePrimaryResidentNotification
|| __DATA_CONST.__const _HMDResidentDeviceManagerUpdateResidentNotification
|| __DATA_CONST.__const _HMDResidentReachabilityNotificationAfterConnectivityDelay
|| __DATA_CONST.__const _HMDRoomNameUpdatedNotification
|| __DATA_CONST.__const _HMDRoomNotificationKey
|| __DATA_CONST.__const _HMDSectionBundleIdentifier
|| __DATA_CONST.__const _HMDSecureRemoteSessionErrorKey
|| __DATA_CONST.__const _HMDSecureRemoteSessionErrorNotification
|| __DATA_CONST.__const _HMDSecureRemoteSessionStreamsMessageKey
|| __DATA_CONST.__const _HMDSecureRemoteStreamID
|| __DATA_CONST.__const _HMDServerBagActivationCertificateHostnameKey
|| __DATA_CONST.__const _HMDServerBagActivationHostnameKey
|| __DATA_CONST.__const _HMDServerBagDefaultBagPlist
|| __DATA_CONST.__const _HMDServerBagEnvironmentProductionString
|| __DATA_CONST.__const _HMDServerBagEnvironmentQA1String
|| __DATA_CONST.__const _HMDServerBagEnvironmentQA2String
|| __DATA_CONST.__const _HMDServerBagHomeKitControlCenterEnabledKey
|| __DATA_CONST.__const _HMDServerBagHomeKitControlCenterKey
|| __DATA_CONST.__const _HMDServerBagHomeKitReportRetryKey
|| __DATA_CONST.__const _HMDServerBagHomeKitReportUrlKey
|| __DATA_CONST.__const _HMDServerBagMaxRetryValueKey
|| __DATA_CONST.__const _HMDServerBagMinRetryValueKey
|| __DATA_CONST.__const _HMDServerBagRefreshedNotification
|| __DATA_CONST.__const _HMDServerBagRequestTimeoutKey
|| __DATA_CONST.__const _HMDServerBagRetryFactorKey
|| __DATA_CONST.__const _HMDServerBagURLFormatString
|| __DATA_CONST.__const _HMDServiceGroupNotificationKey
|| __DATA_CONST.__const _HMDServiceNotificationKey
|| __DATA_CONST.__const _HMDServiceTypeAccessControl
|| __DATA_CONST.__const _HMDServiceTypeAccessoryRuntimeInformation
|| __DATA_CONST.__const _HMDServiceTypeCameraOperatingMode
|| __DATA_CONST.__const _HMDServiceTypeDataStreamTransportManagement
|| __DATA_CONST.__const _HMDServiceTypeDiagnostics
|| __DATA_CONST.__const _HMDServiceTypePowerManagement
|| __DATA_CONST.__const _HMDServiceTypeSiri
|| __DATA_CONST.__const _HMDServiceTypeSmartSpeaker
|| __DATA_CONST.__const _HMDServiceTypeWiFiRouter
|| __DATA_CONST.__const _HMDServiceTypeWiFiSatellite
|| __DATA_CONST.__const _HMDServiceTypeWiFiTransport
|| __DATA_CONST.__const _HMDServiceUUIDKey
|| __DATA_CONST.__const _HMDSharedHomeUpdateSourceVersionUpdatedSaveReason
|| __DATA_CONST.__const _HMDSiriServerDataStreamDataKey
|| __DATA_CONST.__const _HMDSiriServerDataStreamMetadataKey
|| __DATA_CONST.__const _HMDSiriServerDataStreamRMSKey
|| __DATA_CONST.__const _HMDSiriServerDataStreamSequenceNumberKey
|| __DATA_CONST.__const _HMDSoftwareUpdateDocumentationAssetMetadataFilename
|| __DATA_CONST.__const _HMDSoftwareUpdateDocumentationAssetStateNotificationKey
|| __DATA_CONST.__const _HMDSoftwareUpdateDocumentationNotificationKey
|| __DATA_CONST.__const _HMDStreamDataChunkAssemblerErrorDomain
|| __DATA_CONST.__const _HMDStreamDataTypeMediaFragment
|| __DATA_CONST.__const _HMDStreamDataTypeMediaInitialization
|| __DATA_CONST.__const _HMDTargetAccessoriesUUIDKey
|| __DATA_CONST.__const _HMDTargetAccessoryConfiguredNotificationKey
|| __DATA_CONST.__const _HMDTargetAccessoryUnconfiguredNotificationKey
|| __DATA_CONST.__const _HMDTargetControlServiceActiveIdentifierUserInfoKey
|| __DATA_CONST.__const _HMDTargetControlServiceDeselectedNotificationKey
|| __DATA_CONST.__const _HMDTargetControlServiceSelectedNotificationKey
|| __DATA_CONST.__const _HMDTargetControllerAccessoryButtonConfigurationUserInfoKey
|| __DATA_CONST.__const _HMDTargetControllerAccessoryConfigurationUpdatedNotificationKey
|| __DATA_CONST.__const _HMDTargetControllerAccessoryTargetConfigurationUserInfoKey
|| __DATA_CONST.__const _HMDTargetControllerAccessoryTicksPerSecondUserInfoKey
|| __DATA_CONST.__const _HMDUserAssistantAccessControlUpdatedReason
|| __DATA_CONST.__const _HMDUserCamerasAccessLevelDidChangeNotification
|| __DATA_CONST.__const _HMDUserCloudShareIDCodingKey
|| __DATA_CONST.__const _HMDUserCloudShareManagerRemoteShareRepairMessage
|| __DATA_CONST.__const _HMDUserCloudShareManagerRemoteShareRequestMessage
|| __DATA_CONST.__const _HMDUserDataPrivateZoneNamePrefix
|| __DATA_CONST.__const _HMDUserDataSharedZoneNamePrefix
|| __DATA_CONST.__const _HMDUserDidUpdateIDSActivityRegistration
|| __DATA_CONST.__const _HMDUserDisplayNameUpdatedReason
|| __DATA_CONST.__const _HMDUserNotificationKey
|| __DATA_CONST.__const _HMDUserPairingIdentityIdentifierKey
|| __DATA_CONST.__const _HMDUserPairingIdentityPermissionsCodingKey
|| __DATA_CONST.__const _HMDUserPairingIdentityPrivateKeyCodingKey
|| __DATA_CONST.__const _HMDUserPairingIdentityPublicKeyCodingKey
|| __DATA_CONST.__const _HMDUserPresenceUpdateLocalNotification
|| __DATA_CONST.__const _HMDUserPrivilegeDidChangeNotification
|| __DATA_CONST.__const _HMDUserRelayAccessTokenAddedReason
|| __DATA_CONST.__const _HMDUserRelayAccessTokenRemovedReason
|| __DATA_CONST.__const _HMDUserRelayIdentifierUpdatedReason
|| __DATA_CONST.__const _HMDUserRemoteAccessDidChangeNotification
|| __DATA_CONST.__const _HMDUserSettingsUpdatedNotificationKey
|| __DATA_CONST.__const _HMDUserTrustZoneNamePrefix
|| __DATA_CONST.__const _HMDUserUpdateAccountIdentifierReason
|| __DATA_CONST.__const _HMDUserUserIDUpdatedReason
|| __DATA_CONST.__const _HMDWatcherManagerWatchConnectedNotification
|| __DATA_CONST.__const _HMDWatcherManagerWatchDisconnectedNotification
|| __DATA_CONST.__const _HMDWiFiManagementControllerReconfigurationTimeout
|| __DATA_CONST.__const _HMDXPCClientConnectionDidActivateNotification
|| __DATA_CONST.__const _HMDXPCClientConnectionDidDeactivateNotification
|| __DATA_CONST.__const _HMDXPCClientConnectionInvalidatedNotification
|| __DATA_CONST.__const _HMDXPCClientConnectionNotificationKey
|| __DATA_CONST.__const _HMDXPCMessageCountersTypeAcceptedRequests
|| __DATA_CONST.__const _HMDXPCMessageCountersTypeDroppedRequests
|| __DATA_CONST.__const _HMDXPCMessageCountersTypeFilteredNotifications
|| __DATA_CONST.__const _HMDXPCMessageCountersTypeSentNotifications
|| __DATA_CONST.__const _HMDXPCMessageTransportConnectionAddedNotification
|| __DATA_CONST.__const _HMDXPCMessageTransportConnectionRemovedNotification
|| __DATA_CONST.__const _HMErrorCodeNilEventDescription
|| __DATA_CONST.__const _HMErrorDomain
|| __DATA_CONST.__const _HMFPreferenceAllowSiriForUncertifiedAccessories
|| __DATA_CONST.__const _HMFPreferenceAllowVendorDataOverride
|| __DATA_CONST.__const _HMFPreferenceHAPMetricsLoggingPeriod
|| __DATA_CONST.__const _HMFPreferenceHMDConfigurationDataLoggingPeriod
|| __DATA_CONST.__const _HMFPreferenceHMDEventAggregationAnalysisLoggingPeriod
|| __DATA_CONST.__const _HMPreferenceEnableHMObjectCache
|| __DATA_CONST.__const _HMPresenceKeyPath
|| __DATA_CONST.__const _HMSettingAddConstraintMessage
|| __DATA_CONST.__const _HMSettingRemoveConstraintMessage
|| __DATA_CONST.__const _HMSettingReplaceConstraintsMessage
|| __DATA_CONST.__const _HMSettingUpdateConstraintsMessage
|| __DATA_CONST.__const _HMSignificantEventSunrise
|| __DATA_CONST.__const _HMSignificantEventSunset
|| __DATA_CONST.__const _PowerOnQueueAdvertisement
|| __DATA_CONST.__const _PowerOnQueueReachability
|| __DATA_CONST.__const _SCAN_QUEUE_NAME
|| __DATA_CONST.__const _TRCompanionAuthOperationUnauthenticatedServicesKey
|| __DATA_CONST.__const _kAccessAllowedWhenLockedKey
|| __DATA_CONST.__const _kAccessAllowedWhenLockedUpdatedNotificationKey
|| __DATA_CONST.__const _kAccessoryCharacteristicsChangedInternalNotificationKey
|| __DATA_CONST.__const _kAddSaveRequestKey
|| __DATA_CONST.__const _kApplyDeviceUnlockKey
|| __DATA_CONST.__const _kAudioCodecCapabilities
|| __DATA_CONST.__const _kBackingStoreObjectBaseUUID
|| __DATA_CONST.__const _kBackingStoreTransactionResult
|| __DATA_CONST.__const _kCanCacheHomeConfigurationKey
|| __DATA_CONST.__const _kCanUseCachedHomeConfigurationKey
|| __DATA_CONST.__const _kCloudDataSyncInProgressUpdatedNotification
|| __DATA_CONST.__const _kCloudDataSyncTimerExpiredNotification
|| __DATA_CONST.__const _kCloudServerTokenDataResetNotification
|| __DATA_CONST.__const _kConfigTestingModeKey
|| __DATA_CONST.__const _kControllerAssistantTeamIdentifierKey
|| __DATA_CONST.__const _kDateKey
|| __DATA_CONST.__const _kDestinationKey
|| __DATA_CONST.__const _kEffectiveBundleIdentifierForEntitledClients
|| __DATA_CONST.__const _kFilenameKey
|| __DATA_CONST.__const _kHMDCloudDefaultOwner
|| __DATA_CONST.__const _kHMDCloudDoNotUploadRecordName
|| __DATA_CONST.__const _kHMDCloudHomeManagerRootRecordName
|| __DATA_CONST.__const _kHMDCloudHomeManagerSubscriptionName
|| __DATA_CONST.__const _kHMDCloudHomeManagerZoneName
|| __DATA_CONST.__const _kHMDCloudHomeZoneHomeDataRecordName
|| __DATA_CONST.__const _kHMDCloudHomeZoneRootRecordName
|| __DATA_CONST.__const _kHMDCloudHomeZoneRootSharedRecordName
|| __DATA_CONST.__const _kHMDCloudInformation
|| __DATA_CONST.__const _kHMDCloudLegacyHomeDataObjectID
|| __DATA_CONST.__const _kHMDCloudLegacyHomeDataObjectIDVersion3
|| __DATA_CONST.__const _kHMDCloudLegacyHomeDataRecordName
|| __DATA_CONST.__const _kHMDCloudLegacyHomeDataRecordVersion3Name
|| __DATA_CONST.__const _kHMDCloudLegacyMetadataDataKey
|| __DATA_CONST.__const _kHMDCloudLegacyMetadataObjectID
|| __DATA_CONST.__const _kHMDCloudLegacyMetadataRecordName
|| __DATA_CONST.__const _kHMDCloudLegacyMetadataRecordType
|| __DATA_CONST.__const _kHMDCloudLegacyRecordDataKey
|| __DATA_CONST.__const _kHMDCloudLegacyRecordDataVersion2Key
|| __DATA_CONST.__const _kHMDCloudLegacyRecordReadOnlyKey
|| __DATA_CONST.__const _kHMDCloudLegacyRecordType
|| __DATA_CONST.__const _kHMDCloudLegacyRecordVersion3Type
|| __DATA_CONST.__const _kHMDCloudLegacySubscriptionName
|| __DATA_CONST.__const _kHMDCloudLegacyZoneName
|| __DATA_CONST.__const _kHMDCloudMetadataRecordName
|| __DATA_CONST.__const _kHMDCloudMetadataSubscriptionName
|| __DATA_CONST.__const _kHMDCloudMetadataZoneName
|| __DATA_CONST.__const _kHMDCloudRecordDataKey
|| __DATA_CONST.__const _kHMDCloudRecordType
|| __DATA_CONST.__const _kHMDCloudRecordVersionKey
|| __DATA_CONST.__const _kHMDDataStreamMessageBulkSendDataKey
|| __DATA_CONST.__const _kHMDDataStreamMessageBulkSendEndOfStreamKey
|| __DATA_CONST.__const _kHMDDataStreamMessageBulkSendPacketsKey
|| __DATA_CONST.__const _kHMDDataStreamMessageBulkSendReasonKey
|| __DATA_CONST.__const _kHMDDataStreamMessageBulkSendStreamIdentifierKey
|| __DATA_CONST.__const _kHMDDataStreamMessageBulkSendTargetController
|| __DATA_CONST.__const _kHMDDataStreamMessageBulkSendTargetKey
|| __DATA_CONST.__const _kHMDDataStreamMessageBulkSendTypeKey
|| __DATA_CONST.__const _kHMDDataStreamMessageBulkSendTypeSiriAudio
|| __DATA_CONST.__const _kHMDDataStreamMessageEventBulkSendAck
|| __DATA_CONST.__const _kHMDDataStreamMessageEventBulkSendClose
|| __DATA_CONST.__const _kHMDDataStreamMessageEventBulkSendData
|| __DATA_CONST.__const _kHMDDataStreamMessageEventBulkSendOpen
|| __DATA_CONST.__const _kHMDDataStreamMessageEventTargetControlWhoAmI
|| __DATA_CONST.__const _kHMDDataStreamMessageEventTopicKey
|| __DATA_CONST.__const _kHMDDataStreamMessageProtocolBulkSend
|| __DATA_CONST.__const _kHMDDataStreamMessageProtocolControl
|| __DATA_CONST.__const _kHMDDataStreamMessageProtocolKey
|| __DATA_CONST.__const _kHMDDataStreamMessageProtocolTargetControl
|| __DATA_CONST.__const _kHMDDataStreamMessageRequestHello
|| __DATA_CONST.__const _kHMDDataStreamMessageRequestIdentifierKey
|| __DATA_CONST.__const _kHMDDataStreamMessageRequestTopicKey
|| __DATA_CONST.__const _kHMDDataStreamMessageResponseTopicKey
|| __DATA_CONST.__const _kHMDDataStreamMessageStatusKey
|| __DATA_CONST.__const _kHMDDataStreamMessageTargetControlIdentifierKey
|| __DATA_CONST.__const _kHMDHomePresenceMonitorCodingKey
|| __DATA_CONST.__const _kHMDHomePresenceMonitorPresenceMapCodingKey
|| __DATA_CONST.__const _kHMDHomePresenceMonitorPresenceStateCodingKey
|| __DATA_CONST.__const _kHMDNotificationCharacteristicsUpdated
|| __DATA_CONST.__const _kHMDNotificationServicesUpdated
|| __DATA_CONST.__const _kHMDRemoteLoginAuthenticationRequest
|| __DATA_CONST.__const _kHMDRemoteLoginAuthenticationResponse
|| __DATA_CONST.__const _kHMDRemoteLoginCompanionAuthenticationRequest
|| __DATA_CONST.__const _kHMDRemoteLoginProxyAuthenticationRequest
|| __DATA_CONST.__const _kHMDRemoteLoginProxyDeviceRequest
|| __DATA_CONST.__const _kHMDRemoteLoginProxyDeviceResponse
|| __DATA_CONST.__const _kHMDRemoteLoginSignoutRequest
|| __DATA_CONST.__const _kHMEraseAnisetteDataRequest
|| __DATA_CONST.__const _kHMEraseAnisetteDataResponse
|| __DATA_CONST.__const _kHMFetchAnisetteDataRequest
|| __DATA_CONST.__const _kHMFetchAnisetteDataResponse
|| __DATA_CONST.__const _kHMLegacyAnisetteDataRequest
|| __DATA_CONST.__const _kHMLegacyAnisetteDataResponse
|| __DATA_CONST.__const _kHMProvisionAnisetteDataRequest
|| __DATA_CONST.__const _kHMProvisionAnisetteDataResponse
|| __DATA_CONST.__const _kHMSyncAnisetteDataRequest
|| __DATA_CONST.__const _kHMSyncAnisetteDataResponse
|| __DATA_CONST.__const _kHomeCountKey
|| __DATA_CONST.__const _kHomeLocationCountryCodeCodingKey
|| __DATA_CONST.__const _kHomeLocationTimeZoneCodingKey
|| __DATA_CONST.__const _kIncomingHomeInvitationsUpdated
|| __DATA_CONST.__const _kIsUserInitiated
|| __DATA_CONST.__const _kLabel
|| __DATA_CONST.__const _kLabelKey
|| __DATA_CONST.__const _kMeshPayload
|| __DATA_CONST.__const _kMeshPreferredDevice
|| __DATA_CONST.__const _kMigratedEventsToRecords
|| __DATA_CONST.__const _kMigratedEventsToRecordsRequest
|| __DATA_CONST.__const _kMustPushKey
|| __DATA_CONST.__const _kMustReplayKey
|| __DATA_CONST.__const _kNetworkIdentifierKey
|| __DATA_CONST.__const _kNotificationRegistryCodingKey
|| __DATA_CONST.__const _kPresenceComputeStatusUpdate
|| __DATA_CONST.__const _kPresenceDictionaryForNotificationKey
|| __DATA_CONST.__const _kPresencePairingIdentifierDictionaryForNotificationKey
|| __DATA_CONST.__const _kProvisioningStatusKey
|| __DATA_CONST.__const _kReactivateAfterTriggeredRequestKey
|| __DATA_CONST.__const _kRemoteUsersDeregisteredKey
|| __DATA_CONST.__const _kRemoveObjects
|| __DATA_CONST.__const _kRemoveSaveRequestKey
|| __DATA_CONST.__const _kRemovedMediaSessionIdentifiersKey
|| __DATA_CONST.__const _kResidentProvisioningStatusChangedNotificationKey
|| __DATA_CONST.__const _kSQLiteStore
|| __DATA_CONST.__const _kSQLiteStore2
|| __DATA_CONST.__const _kSaveUUIDCodingKey
|| __DATA_CONST.__const _kSourceKey
|| __DATA_CONST.__const _kSourceTypeKey
|| __DATA_CONST.__const _kStreamingTierType
|| __DATA_CONST.__const _kSupportsComfortNoise
|| __DATA_CONST.__const _kTargetControlClientIdentifierKey
|| __DATA_CONST.__const _kTransactionMigration
|| __DATA_CONST.__const _kTriggerSourceInternalMessageKey
|| __DATA_CONST.__const _kUnknownSaveReason
|| __DATA_CONST.__const _kUpdateAccessAllowedWhenLockedRequestKey
|| __DATA_CONST.__const _kUpdateObjects
|| __DATA_CONST.__const _kUserManagementOperationIdentifiersKey
|| __DATA_CONST.__const _kUserManagementUnprocessedOperationModelsKey
|| __DATA_CONST.__const _kVideoCodecCapabilities
|| __DATA_CONST.__const _kVideoResolutionCapabilities
|| __DATA_CONST.__const _xpckHMDRemoteLoginAuthenticationRequest
|| __DATA_CONST.__const _xpckHMDRemoteLoginAuthenticationResponse
|| __DATA_CONST.__const _xpckHMDRemoteLoginCompanionAuthenticationRequest
|| __DATA_CONST.__const _xpckHMDRemoteLoginProxyAuthenticationRequest
|| __DATA_CONST.__const _xpckHMDRemoteLoginProxyDeviceRequest
|| __DATA_CONST.__const _xpckHMDRemoteLoginProxyDeviceResponse
|| __DATA_CONST.__const _xpckHMDRemoteLoginSignoutRequest
|| __DATA_CONST.__const _xpckHMEraseAnisetteDataRequest
|| __DATA_CONST.__const _xpckHMEraseAnisetteDataResponse
|| __DATA_CONST.__const _xpckHMFetchAnisetteDataRequest
|| __DATA_CONST.__const _xpckHMFetchAnisetteDataResponse
|| __DATA_CONST.__const _xpckHMLegacyAnisetteDataRequest
|| __DATA_CONST.__const _xpckHMLegacyAnisetteDataResponse
|| __DATA_CONST.__const _xpckHMProvisionAnisetteDataRequest
|| __DATA_CONST.__const _xpckHMProvisionAnisetteDataResponse
|| __DATA_CONST.__const _xpckHMSyncAnisetteDataRequest
|| __DATA_CONST.__const _xpckHMSyncAnisetteDataResponse
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_AWDHomeKitDataModelMigration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAWDLogEventObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAWDRemoteSessionMetric
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryAllowedHost
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryBrowser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryBrowserInjectedSettingsDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryNetworkAccessViolation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryNetworkProtectionGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryNetworkProtectionGroupRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryPairingEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryRelaySetupEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessorySetting
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessorySettingGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessorySymptomHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccessoryTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccountHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccountHandleFormatter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccountHandleModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccountIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccountModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAccountRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDActionSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDActionSetEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAddAccessoryRequestInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAirPlay2Preference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAirPlayAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAppleAccountContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAppleAccountManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAppleAccountSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAppleMediaAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAppleMediaProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDApplicationData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDApplicationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDApplicationRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDApplicationVendorIDStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAssertionLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAssistantAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAssistantAccessControlModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAssistantAccessControlModifiedEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAssistantGather
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDAuthServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBLEBroadcastEventKeyGeneration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBLEBroadcastEventReceived
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackgroundTaskAgentTimer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheCreateGroupOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheCreateZoneOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheFetchMigratedResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheFetchRecords
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheFetchZonesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheUpdateGroupSubscriptionOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheUpdateGroupTokenOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreCacheZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreLocal
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreLogAddTransactionOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreLogChangesExistFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreLogFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreModelObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreModelObjectStorageInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreModelObjectStorageInfoDeprecatedField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreModelObjectUnsupported
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreSaveToPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreSingleton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreTransactionActions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreTransactionBlock
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreTransactionItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBackingStoreTransactionOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBulletinBoard
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBulletinBoardNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDBulletinBoardNotificationServiceGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCalendarEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraClipModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraClipsQuotaManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraMetricsLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraMetricsSnapshotLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraMetricsStreamLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraRecordingBulkSendDataReadEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraRecordingClipNotificationEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraRecordingFragmentAnalyzedEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraRecordingLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraRecordingResidentElector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraRecordingUploadOperationEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCameraSnapshotManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCharacteristicEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCharacteristicEventBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCharacteristicMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCharacteristicReadWriteLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCharacteristicThresholdRangeEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCharacteristicWriteAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudAccountOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudDataSyncStateFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudFetchLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudHomeManagerZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudHomeZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudLegacyZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudManagerDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudMetadataZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudPhotosSettingObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudShareMessenger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudShareParticipantsManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudShareTrustManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCloudZoneInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDCompanionLinkClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDConfigurationMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDConfigurationMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDConfigurationResetLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDataMigrationEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDataSyncStateEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDatabaseCKOperationCompletionEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDatabaseFetchZonesResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDecryptionCompletedEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDeviceCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDeviceCapabilitiesModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDeviceHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDeviceModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDeviceSetupManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDiagnosticReporterLogObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDuetPredictionSubscriber
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDDurationEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDEducationModeMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDEventCountersManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDFMF
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDFMFHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDFMFQuery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDFMFRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHAPAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHAPAccessoryTransaction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHAPMediaProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHAPMetadataAssistantCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHAPMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHTTPDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHTTPMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHelperExternalProtocolImpl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHome
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeAdministratorHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeConfigurationModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeInviteLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeKitVersion
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeLocationEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeLocationHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeManagerFetchLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeManagerObjectLookup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeManagerUploadLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeManagerXPCMessageSendAnyOptionsPolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeManagerXPCMessageSendPolicyParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeMediaSettingsModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeMediaSystemHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeNetworkRouterManagingDeviceSettingsModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeNetworkRouterSettingsModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeObjectChangeHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeObjectLookup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomePresenceBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeRemoteNotificationHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeReprovisionHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeSaveRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeSettingsModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeZoneFetchLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDHomeZoneUploadLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDIDSMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDIDSProxyMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDIDSServiceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDIdentifierSaltStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDIdentityRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDIncomingCloudPushLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDIncomingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDKeyTransferAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDKeyTransferAgentClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDKeyTransferAgentServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDLaunchHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDLightProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDLocationEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDLogEventAnalyzerContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDLogEventDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDLostModeManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDLostModeMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMPCSessionController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMainDriver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaActionRouter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaBrowser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaPlaybackAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaPreference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaSystem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaSystemComponent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMediaSystemSymptomHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMemoryUtilizationTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMessageDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMessageFilterChain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMobileAssetManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMutableHomeData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDMutableRemoteMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDNameValidator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDNetworkRouterProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDNetworkRouterSatelliteProfile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDNotificationRegistration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDNotificationRegistry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDObjectLookup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDOutgoingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDPairedSync
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDPendingCloudSyncTransactions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDPowerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDPredicateUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDPresenceEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDProcessInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDProcessMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRPIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRelayAccessToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRelayManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRelaySessionEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteAccountManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteAccountMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteDeviceMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteKeyedArchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteLoginAnisetteDataProviderBridge
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteLoginHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteMessageDestination
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteMessageExceedBudgetLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteMessageLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteMessageNotifications
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemoteMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRemovedUser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDResidentDevice
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDResidentDeviceManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDResidentReachabilityNotificationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDResidentUser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDRoom
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSecureRemoteMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSecureRemoteMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDService
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDServiceGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSetting
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSettingGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSettingsController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSettingsControllerDependency
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSettingsMessageHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSettingsMetadataParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSharedHomeUpdateHandler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSharingDeviceDiscovery
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDShortcutAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSignificantTimeEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSiriCommandEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSiriSyncEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSoftwareUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSoftwareUpdateAutomaticUpdateToggledEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSoftwareUpdateFetchedEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSoftwareUpdateManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSoftwareUpdateStartedEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSymptomManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSyncOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSyncOperationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSyncOperationOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDSyncOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDTargetControllerCommandEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDTargetControllerErrorEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDTimeEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDTimerTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUnassociatedAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUnassociatedAirPlayAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUnassociatedAppleMediaAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUnassociatedMediaAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUnassociatedWACAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUnpairedHAPAccessory
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUploadCompletedLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUploadMaximumDelayEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUploadStartingLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserActionPredictionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserCloudShareController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserCloudShareManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserCloudShareManagerCreatorDependency
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserDataController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserDataControllerTimerCreator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserManagementOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserManagementOperationManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserModel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserNotificationCenter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserPresenceFeeder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserPresenceUpdateReason
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDUserSettingsBackingStoreController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDWACBrowser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDWACScanner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDWHAAccessControlEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDWHASettingEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDWatchManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDWatchSystemState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCAccessMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCBackgroundMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCBackgroundMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCEntitlementMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCKeyedArchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCMessageSendPolicyParameters
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDXPCRequestTracker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMDZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMObjectCacheHMDConfigurationMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMObjectCacheHMDRemoteMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMObjectCacheHMDUserMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMObjectCacheHMDXPCBackgroundMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMObjectCacheHMDXPCMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMObjectCacheNSString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBEncodeOption
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HMPBMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HomeKitEventRemoteLoginEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HomeKitEventRemoteLogoutEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HomeKitPresenceRegionEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HomeKitPresenceReportEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HomeKitUserPresenceAuthorizationEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_HomeKitUserPresenceComputeEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HMDAccountIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HMDDeviceHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HMDGlobalDeviceHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__HMDLocalDeviceHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___HMDRegisteredAccountIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___HMDRegisteredDeviceIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___HMDRegisteredIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_AWDHomeKitDataModelMigration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAWDLogEventObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAWDRemoteSessionMetric
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryAllowedHost
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryBrowserInjectedSettingsDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryNetworkAccessViolation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryNetworkProtectionGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryNetworkProtectionGroupRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryPairingEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryRelaySetupEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessorySetting
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessorySettingGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessorySymptomHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccessoryTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccountHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccountHandleFormatter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccountHandleModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccountIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccountModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAccountRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDActionSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDActionSetEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAddAccessoryRequestInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAirPlay2Preference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAirPlayAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAppleAccountContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAppleAccountManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAppleAccountSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAppleMediaAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAppleMediaProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDApplicationData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDApplicationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDApplicationRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDApplicationVendorIDStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAssertionLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAssistantAccessControl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAssistantAccessControlModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAssistantAccessControlModifiedEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAssistantGather
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDAuthServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBLEBroadcastEventKeyGeneration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBLEBroadcastEventReceived
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackgroundTaskAgentTimer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCKRebuildEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheCreateGroupOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheCreateZoneOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheFetchMigratedResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheFetchRecords
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheFetchZonesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheUpdateGroupSubscriptionOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheUpdateGroupTokenOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreCacheZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreLocal
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreLogAddTransactionOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreLogChangesExistFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreLogFetchOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreModelObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreModelObjectStorageInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreModelObjectStorageInfoDeprecatedField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreModelObjectUnsupported
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreSaveToPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreSingleton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreTransactionActions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreTransactionBlock
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreTransactionItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBackingStoreTransactionOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBulletinBoard
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBulletinBoardNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDBulletinBoardNotificationServiceGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCalendarEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraClipModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraClipsQuotaManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraMetricsLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraMetricsSnapshotLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraMetricsStreamLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingBulkSendDataReadEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingClipNotificationEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingFragmentAnalyzedEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingResidentElector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraRecordingUploadOperationEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCameraSnapshotManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCharacteristicEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCharacteristicEventBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCharacteristicMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCharacteristicReadWriteLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCharacteristicThresholdRangeEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCharacteristicWriteAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudAccountOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudDataSyncStateFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudFetchLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudHomeManagerZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudHomeZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudLegacyZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudManagerDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudMetadataZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudShareMessenger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudShareParticipantsManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudShareTrustManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCloudZoneInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCompanionLinkClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDConfigurationMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDConfigurationMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDConfigurationResetLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDCoreAnalyticsLogObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDataMigrationEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDataSyncStateEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDatabaseCKOperationCompletionEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDatabaseFetchZonesResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDecryptionCompletedEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDeviceCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDeviceCapabilitiesModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDeviceHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDeviceModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDeviceSetupManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDiagnosticReporterLogObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDDurationEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDEducationModeMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDEventTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDFMF
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDFMFHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDFMFQuery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDFMFRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHAPAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHAPAccessoryTransaction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHAPMediaProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHAPMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHAPMetadataAssistantCharacteristic
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHAPMetadataCategory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHTTPDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHTTPMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHelperExternalProtocolImpl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHome
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeAdministratorHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeConfigurationModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeInviteLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeKitVersion
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeLocationEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeLocationHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeManagerFetchLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeManagerObjectLookup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeManagerUploadLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeManagerXPCMessageSendAnyOptionsPolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeMediaSettingsModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeMediaSystemHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeNetworkRouterManagingDeviceSettingsModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeNetworkRouterSettingsModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeObjectChangeHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeObjectLookup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomePresenceBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeRemoteNotificationHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeReprovisionHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeSaveRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeSettingsModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeZoneFetchLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDHomeZoneUploadLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDIDSMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDIDSProxyMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDIDSServiceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDIdentifierSaltStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDIdentityRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDIncomingCloudPushLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDIncomingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDKeyTransferAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDKeyTransferAgentClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDKeyTransferAgentServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDLaunchEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDLaunchHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDLightProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDLocationEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDLogEventDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDLostModeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDLostModeMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMPCSessionController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMainDriver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaActionRouter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaPlaybackAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaPreference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaSystem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaSystemComponent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMediaSystemSymptomHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMessageDispatcher
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMessageFilterChain
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMobileAssetManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMutableHomeData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDMutableRemoteMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDNameValidator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDNetworkRouterSatelliteProfile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDNotificationRegistration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDNotificationRegistry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDObjectLookup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDOutgoingHomeInvitation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDPairedSync
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDPendingCloudSyncTransactions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDPersistentStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDPowerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDPredicateUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDPresenceEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDProcessInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDProcessJetsamInfoLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRPIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRelayAccessToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRelayManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRelaySessionEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteAccountManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteAccountMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteDeviceMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteKeyedArchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginAnisetteDataProviderBridge
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteLoginHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteMessageDestination
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteMessageExceedBudgetLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteMessageLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteMessageNotifications
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemoteMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRemovedUser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDResidentDevice
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDResidentDeviceManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDResidentUser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDRoom
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSecureRemoteMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSecureRemoteMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDServiceGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSetting
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSettingGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSettingsController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSettingsControllerDependency
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSettingsMessageHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSettingsMetadataParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSharedHomeUpdateHandler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSharingDeviceDiscovery
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDShortcutAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSignificantTimeEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSiriCommandEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSiriSyncEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSoftwareUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSoftwareUpdateAutomaticUpdateToggledEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSoftwareUpdateFetchedEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSoftwareUpdateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSoftwareUpdateStartedEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSymptomManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSyncOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSyncOperationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSyncOperationOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDSyncOperationQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDTargetControllerCommandEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDTargetControllerErrorEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDTimeEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDTimerTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUnassociatedAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUnassociatedAirPlayAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUnassociatedAppleMediaAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUnassociatedMediaAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUnassociatedWACAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUnpairedHAPAccessory
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUploadCompletedLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUploadMaximumDelayEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUploadStartingLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserCloudShareController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserCloudShareManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserCloudShareManagerCreatorDependency
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserDataController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserDataControllerTimerCreator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserManagementOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserManagementOperationManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserModel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserNotificationCenter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserPresenceFeeder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserPresenceUpdateReason
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDUserSettingsBackingStoreController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDWACBrowser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDWACScanner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDWHAAccessControlEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDWHASettingEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDWatchManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDWatchSystemState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCAccessMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCBackgroundMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCBackgroundMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCClientConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCEntitlementMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCKeyedArchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCMessageCountersLogEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCMessageFilter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCMessageTransport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDXPCRequestTracker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMDZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMObjectCacheHMDConfigurationMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMObjectCacheHMDRemoteMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMObjectCacheHMDUserMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMObjectCacheHMDXPCBackgroundMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMObjectCacheHMDXPCMessagePolicy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMObjectCacheNSString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBEncodeOption
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HMPBMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HomeKitEventRemoteLoginEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HomeKitEventRemoteLogoutEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HomeKitPresenceRegionEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HomeKitPresenceReportEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HomeKitUserPresenceAuthorizationEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_HomeKitUserPresenceComputeEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HMDAccountIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HMDDeviceHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HMDGlobalDeviceHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__HMDLocalDeviceHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___HMDRegisteredAccountIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___HMDRegisteredDeviceIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___HMDRegisteredIdentity
|| __TEXT.__const _AWDUnknownVendorInfoMaxLength
|| __TEXT.__const _DefaultKMeansIteration
|| __TEXT.__const _HMDCameraClipAppendStreamingAssetOperationMinimumRetryDelay
|| __TEXT.__const _HMDCameraProfileSettingsDefaultCameraAccessMode
|| __TEXT.__const _HMDCameraRecordingDefaultBulkSendSessionReadTimeoutFactor
|| __TEXT.__const _HMDCameraRecordingEventsCleanupInterval
|| __TEXT.__const _HMDCharacteristicTupleTimeOutInSeconds
|| __TEXT.__const _HMDCloudShareInviteRetryDuration
|| __TEXT.__const _HMDCloudShareInviteRetryLimit
|| __TEXT.__const _HMDDoorbellBulletinUtilitiesRecentFaceClassificationsBackwardTimeInterval
|| __TEXT.__const _HMDDoorbellBulletinUtilitiesRecentFaceClassificationsForwardTimeInterval
|| __TEXT.__const _HMDDuplicateBulletinTimeOutInSeconds
|| __TEXT.__const _HMDEventAggregationAnalysisMonthlyActiveDaysBitMask
|| __TEXT.__const _HMDFMFSessionResponseTimeout
|| __TEXT.__const _HMDHAPMetatadataCategoryIdentifierOther
|| __TEXT.__const _HMDLocationHorizontalAccuracyLimit
|| __TEXT.__const _HMDLogEventCloudSyncEventsAnalyzerEventPeriod
|| __TEXT.__const _HMDLogEventUserActivityAnalyzerEventPeriod
|| __TEXT.__const _HMDMaxBulletinsCount
|| __TEXT.__const _HMDMaxFragmentAnalysisDuration
|| __TEXT.__const _HMDMaxFragmentDurationAllowanceFactor
|| __TEXT.__const _HMDNaturalLightingCurveEndTime
|| __TEXT.__const _HMDNaturalLightingCurveMaximumBrightness
|| __TEXT.__const _HMDNaturalLightingCurveMinimumBrightness
|| __TEXT.__const _HMDNaturalLightingCurveStartTime
|| __TEXT.__const _HMDPosterFrameGenerationInterval
|| __TEXT.__const _HMDPosterFrameHeight
|| __TEXT.__const _HMDProductDataGroupLength
|| __TEXT.__const _HMDProductDataNumberLength
|| __TEXT.__const _HMDRemotePersonDataMessengerUpdatedDataDebounceTimerInterval
|| __TEXT.__const _HMDTargetControlInvalidIdentifier
|| __TEXT.__const _HMVDBMinimumDataVersion
|| __TEXT.__const _HMVDBSupportedSchemaVersion
|| __TEXT.__const _destinationShift
|| __TEXT.__const _fieldMask
|| __TEXT.__const _kCameraStreamMTUForIPv4
|| __TEXT.__const _kCameraStreamMTUForIPv6
|| __TEXT.__const _kCompressionChunkSize
|| __TEXT.__const _kHMDHomePeriodicReaderDefaultInterval
|| __TEXT.__const _kIPCameraUnknownParameter
|| __TEXT.__const _kLastDecodedFrameCaptureWaitPeriod
|| __TEXT.__const _kLocalSnapshotCompletionPeriod
|| __TEXT.__const _kLocalStreamSetupWaitPeriod
|| __TEXT.__const _kMaximumReconfigureEventCount
|| __TEXT.__const _kMostRecentSnapshotValidPeriod
|| __TEXT.__const _kPresenceRegionStatusChangeWindow
|| __TEXT.__const _kReactivationDelay
|| __TEXT.__const _kReconfigureFlipFlopTimeWindow
|| __TEXT.__const _kReconfigureUpgradeBackoffDebouceTimer
|| __TEXT.__const _kRemoteInitiatorSnapshotCompletionPeriod
|| __TEXT.__const _kRemoteRTPPtime
|| __TEXT.__const _kRemoteReceiverSnapshotCompletionPeriod
|| __TEXT.__const _kRemoteRelayStreamSnapshotCompletionPeriod
|| __TEXT.__const _kRemoteStreamSetupWaitPeriod
|| __TEXT.__const _kRequestMaxRetries
|| __TEXT.__const _kSnapshotFileFragmentSize
|| __TEXT.__const _kSnapshotLocalNotificationCompletionPeriod
|| __TEXT.__const _kSnapshotRemoteNotificationCompletionPeriod
|| __TEXT.__const _kStatusChangeValidPeriod
|| __TEXT.__const _successShift
|| __TEXT.__const _versionFlagMask
|| __TEXT.__const _versionFlagV1
|| __TEXT.__text _AVCAudioCodecTypeAsString
|| __TEXT.__text _AVCCipherSuiteAsString
|| __TEXT.__text _AVCVideoCodecTypeAsString
|| __TEXT.__text _AVCVideoResolutionAsString
|| __TEXT.__text _AWDHomeKitAccessoryNetworkProtectionReportReadFrom
|| __TEXT.__text _AWDHomeKitAccessoryPairingReadFrom
|| __TEXT.__text _AWDHomeKitAccessoryReadWriteReadFrom
|| __TEXT.__text _AWDHomeKitAccessoryRelaySetupReadFrom
|| __TEXT.__text _AWDHomeKitActionSetTriggeredReadFrom
|| __TEXT.__text _AWDHomeKitAddEventTriggerReadFrom
|| __TEXT.__text _AWDHomeKitAssistantAccessControlReadFrom
|| __TEXT.__text _AWDHomeKitBackingStoreCKOperationZoneCompletionEventReadFrom
|| __TEXT.__text _AWDHomeKitBackingStoreCKRebuildEventReadFrom
|| __TEXT.__text _AWDHomeKitBroadcastEventKeyGenerationReadFrom
|| __TEXT.__text _AWDHomeKitBroadcastEventReceivedReadFrom
|| __TEXT.__text _AWDHomeKitCalendarEventReadFrom
|| __TEXT.__text _AWDHomeKitCameraConfigurationDataReadFrom
|| __TEXT.__text _AWDHomeKitCameraIDSSessionSetupReadFrom
|| __TEXT.__text _AWDHomeKitCameraRecordingBulkSendDataReadReadFrom
|| __TEXT.__text _AWDHomeKitCameraRecordingClipNotificationReadFrom
|| __TEXT.__text _AWDHomeKitCameraRecordingFragmentAnalyzedReadFrom
|| __TEXT.__text _AWDHomeKitCameraRecordingUploadOperationReadFrom
|| __TEXT.__text _AWDHomeKitCameraSettingsReadFrom
|| __TEXT.__text _AWDHomeKitCameraSnapshotIDSTransferReadFrom
|| __TEXT.__text _AWDHomeKitCameraSnapshotMessagingReadFrom
|| __TEXT.__text _AWDHomeKitCameraSnapshotReadFrom
|| __TEXT.__text _AWDHomeKitCameraStreamConfigureReadFrom
|| __TEXT.__text _AWDHomeKitCameraStreamIDSConnSetupParametersReadFrom
|| __TEXT.__text _AWDHomeKitCameraStreamIDSConnSetupReadFrom
|| __TEXT.__text _AWDHomeKitCameraStreamMessagingReadFrom
|| __TEXT.__text _AWDHomeKitCameraStreamReadFrom
|| __TEXT.__text _AWDHomeKitCameraStreamReconfigureReadFrom
|| __TEXT.__text _AWDHomeKitCameraUserSettingsReadFrom
|| __TEXT.__text _AWDHomeKitCharacteristicEventReadFrom
|| __TEXT.__text _AWDHomeKitCharacteristicReadFrom
|| __TEXT.__text _AWDHomeKitCharacteristicThresholdEventReadFrom
|| __TEXT.__text _AWDHomeKitCloudSyncInfoTupleReadFrom
|| __TEXT.__text _AWDHomeKitCloudSyncReadFrom
|| __TEXT.__text _AWDHomeKitConfigurationDataReadFrom
|| __TEXT.__text _AWDHomeKitDataModelMigrationReadFrom
|| __TEXT.__text _AWDHomeKitDatabaseCKOperationCompletionEventReadFrom
|| __TEXT.__text _AWDHomeKitDurationEventReadFrom
|| __TEXT.__text _AWDHomeKitEventTriggerEventReadFrom
|| __TEXT.__text _AWDHomeKitEventTriggerExecutionSessionReadFrom
|| __TEXT.__text _AWDHomeKitEventTriggerReadFrom
|| __TEXT.__text _AWDHomeKitEventTriggerUserConfirmationReceiverSessionReadFrom
|| __TEXT.__text _AWDHomeKitEventTriggerUserConfirmationSendReadFrom
|| __TEXT.__text _AWDHomeKitEventsAggregationReportReadFrom
|| __TEXT.__text _AWDHomeKitHAPServiceReadFrom
|| __TEXT.__text _AWDHomeKitHomeCameraConfigurationsReadFrom
|| __TEXT.__text _AWDHomeKitHomeConfigurationReadFrom
|| __TEXT.__text _AWDHomeKitHomeSharingReadFrom
|| __TEXT.__text _AWDHomeKitLocationEventReadFrom
|| __TEXT.__text _AWDHomeKitMessageHomeLocationReportReadFrom
|| __TEXT.__text _AWDHomeKitMessageLocationReadFrom
|| __TEXT.__text _AWDHomeKitMessageTransportedReadFrom
|| __TEXT.__text _AWDHomeKitMultiUserSettingsReadFrom
|| __TEXT.__text _AWDHomeKitMultiUserSettingsValueByKeyPathReadFrom
|| __TEXT.__text _AWDHomeKitNetworkProtectionReportReadFrom
|| __TEXT.__text _AWDHomeKitPredicateReadFrom
|| __TEXT.__text _AWDHomeKitPresenceEventReadFrom
|| __TEXT.__text _AWDHomeKitPresenceRegionReadFrom
|| __TEXT.__text _AWDHomeKitPresenceReportReadFrom
|| __TEXT.__text _AWDHomeKitProcessMemoryPressureEventReadFrom
|| __TEXT.__text _AWDHomeKitRelaySessionReadFrom
|| __TEXT.__text _AWDHomeKitRemoteLoginReadFrom
|| __TEXT.__text _AWDHomeKitRemoteLogoutReadFrom
|| __TEXT.__text _AWDHomeKitRemoteSessionReadFrom
|| __TEXT.__text _AWDHomeKitResetConfigurationReadFrom
|| __TEXT.__text _AWDHomeKitSignificantTimeEventReadFrom
|| __TEXT.__text _AWDHomeKitSiriCommandReadFrom
|| __TEXT.__text _AWDHomeKitSiriSyncReadFrom
|| __TEXT.__text _AWDHomeKitSoftwareUpdateAutomaticUpdateToggledReadFrom
|| __TEXT.__text _AWDHomeKitSoftwareUpdateFetchedReadFrom
|| __TEXT.__text _AWDHomeKitSoftwareUpdateStartedReadFrom
|| __TEXT.__text _AWDHomeKitTargetControllerCommandReadFrom
|| __TEXT.__text _AWDHomeKitTargetControllerErrorReadFrom
|| __TEXT.__text _AWDHomeKitUpdateEventTriggerReadFrom
|| __TEXT.__text _AWDHomeKitUserPresenceAuthorizationReadFrom
|| __TEXT.__text _AWDHomeKitUserPresenceComputeReadFrom
|| __TEXT.__text _AWDHomeKitValueReadFrom
|| __TEXT.__text _AWDHomeKitVendorInformationReadFrom
|| __TEXT.__text _AWDHomeKitVideoResolutionCountReadFrom
|| __TEXT.__text _AWDHomeKitWHAAccessControlReadFrom
|| __TEXT.__text _AWDHomeKitWHASettingReadFrom
|| __TEXT.__text _AWDHomeKitWatchCompanionConnectivityReportReadFrom
|| __TEXT.__text _CreatePasswordSettingTLV
|| __TEXT.__text _DecodePasswordSettingTLV
|| __TEXT.__text _HAPOperatingStateAbnormalReasonsAsString
|| __TEXT.__text _HAPOperatingStateAsString
|| __TEXT.__text _HMDAVOutputDeviceFromMRAVOutputDevice
|| __TEXT.__text _HMDAccessorySettingMergeStrategyTypeAsString
|| __TEXT.__text _HMDAccessorySettingsAuditReasonAsString
|| __TEXT.__text _HMDApplicationStateDescription
|| __TEXT.__text _HMDAudioCodecGroupTypeAsString
|| __TEXT.__text _HMDAudioSampleRateTypeAsString
|| __TEXT.__text _HMDBitRateSettingTypeAsString
|| __TEXT.__text _HMDCameraClipSegmentMetadataReadFrom
|| __TEXT.__text _HMDCameraClipsQuotaDisableCameraMessageReadFrom
|| __TEXT.__text _HMDCameraClipsQuotaDisableCameraResponseReadFrom
|| __TEXT.__text _HMDCameraClipsQuotaEnableCameraMessageReadFrom
|| __TEXT.__text _HMDCameraClipsQuotaEnableCameraResponseReadFrom
|| __TEXT.__text _HMDCameraLocalStreamSessionStateAsString
|| __TEXT.__text _HMDCameraRecordingAudioBitRateModeTypeAsString
|| __TEXT.__text _HMDCameraRecordingAudioCodecTypeAsString
|| __TEXT.__text _HMDCameraRecordingAudioSampleRateTypeAsString
|| __TEXT.__text _HMDCameraRecordingEventTriggerOptionsAsString
|| __TEXT.__text _HMDCameraRecordingH264LevelTypeAsString
|| __TEXT.__text _HMDCameraRecordingH264ProfileTypeAsString
|| __TEXT.__text _HMDCameraRecordingMediaContainerTypeAsString
|| __TEXT.__text _HMDCameraRecordingVideoCodecTypeAsString
|| __TEXT.__text _HMDCameraRecordingVideoResolutionTypeAsString
|| __TEXT.__text _HMDCameraRemoteStreamSessionStateAsString
|| __TEXT.__text _HMDCameraSnapshotReasonAsString
|| __TEXT.__text _HMDCameraStreamInterfaceStateAsString
|| __TEXT.__text _HMDCameraVideoAnalyzerEventTypesFromSignificantEventTypes
|| __TEXT.__text _HMDClientEntitlementsShortDescription
|| __TEXT.__text _HMDClientEntitlementsToComponents
|| __TEXT.__text _HMDClientEntitlementsToString
|| __TEXT.__text _HMDCreateUniquePSKClientConfiguration
|| __TEXT.__text _HMDDuetDeleteEvents
|| __TEXT.__text _HMDDuetDumpAllEvents
|| __TEXT.__text _HMDDuetDumpEvents
|| __TEXT.__text _HMDDuetLogEventWithStringValue
|| __TEXT.__text _HMDDuetQueryEvents
|| __TEXT.__text _HMDDuetQueryMostRecentEvent
|| __TEXT.__text _HMDDuetRegisterForHomeKitObjectRemovalNotifications
|| __TEXT.__text _HMDDuetResetAllEvents
|| __TEXT.__text _HMDEnterSandbox
|| __TEXT.__text _HMDEventTriggerActivationTypeAsString
|| __TEXT.__text _HMDEventTriggerExecutionStateAsString
|| __TEXT.__text _HMDFMFStatusAsString
|| __TEXT.__text _HMDH264LevelTypeAsString
|| __TEXT.__text _HMDH264ProfileTypeAsString
|| __TEXT.__text _HMDLocationAuthorizationAsString
|| __TEXT.__text _HMDMessageHandlerFailureEventTypeAsString
|| __TEXT.__text _HMDNetworkRouterAccessViolationControlOperationTypeAsString
|| __TEXT.__text _HMDNetworkRouterAccessViolationQueryEnabled
|| __TEXT.__text _HMDNetworkRouterAdvertisementProtocolTypeAsString
|| __TEXT.__text _HMDNetworkRouterClientStatusControlOperationTypeAsString
|| __TEXT.__text _HMDNetworkRouterControlOperationStatusTypeAsString
|| __TEXT.__text _HMDNetworkRouterControlOperationTypeAsString
|| __TEXT.__text _HMDNetworkRouterFirewallRuleIPProtocolAsString
|| __TEXT.__text _HMDNetworkRouterFirewallRuleLANPurposeAsString
|| __TEXT.__text _HMDNetworkRouterFirewallRuleWANPurposeAsString
|| __TEXT.__text _HMDNetworkRouterIPProtocolVersionTypeAsString
|| __TEXT.__text _HMDNetworkRouterLANFirewallTypeAsString
|| __TEXT.__text _HMDNetworkRouterLANIdentifierTypeAsString
|| __TEXT.__text _HMDNetworkRouterProtocolTypeAsString
|| __TEXT.__text _HMDNetworkRouterRuleDirectionTypeAsString
|| __TEXT.__text _HMDNetworkRouterSupportAsString
|| __TEXT.__text _HMDNetworkRouterWANFirewallTypeAsString
|| __TEXT.__text _HMDNetworkRouterWANIdentifierTypeAsString
|| __TEXT.__text _HMDNetworkRouterWANRulesFromFirewallRuleWan
|| __TEXT.__text _HMDPacketizationModeTypeAsString
|| __TEXT.__text _HMDRegionStateString
|| __TEXT.__text _HMDRemoteDeviceReachabilityChangeReasonAsString
|| __TEXT.__text _HMDRemoteLoginAccountTypeAsString
|| __TEXT.__text _HMDRemoteMessageTypeToString
|| __TEXT.__text _HMDResidentDeviceConfigurationStateString
|| __TEXT.__text _HMDSRTPCryptoSuiteTypeAsString
|| __TEXT.__text _HMDSecureRemoteStreamRoleToString
|| __TEXT.__text _HMDServerBagEnvironmentFromString
|| __TEXT.__text _HMDServerBagEnvironmentToString
|| __TEXT.__text _HMDSessionControlCommandAsString
|| __TEXT.__text _HMDStreamControlPointResponseStatusAsString
|| __TEXT.__text _HMDStreamingStatusTypeAsString
|| __TEXT.__text _HMDStreamingTierTypeAsString
|| __TEXT.__text _HMDStringFromDataStreamMessageStatus
|| __TEXT.__text _HMDUserConfirmationResponseAsString
|| __TEXT.__text _HMDUserManagementOperationTypeToString
|| __TEXT.__text _HMDUserPresenceRegionStatusAsString
|| __TEXT.__text _HMDUserPresenceUpdateReasonStatusAsString
|| __TEXT.__text _HMDUserPrivilegeAsString
|| __TEXT.__text _HMDUserPrivilegeCompare
|| __TEXT.__text _HMDUserPrivilegeFromPrivilege
|| __TEXT.__text _HMDVideoCodecTypeAsString
|| __TEXT.__text _HMDVideoResolutionAspectRatioAsString
|| __TEXT.__text _HMDVideoResolutionTypeAsString
|| __TEXT.__text _HMDWakeConfigurationParameterTypeAsString
|| __TEXT.__text _HMDWakeTypeAsString
|| __TEXT.__text _HMDXPCCounterTypeAsString
|| __TEXT.__text _HMDispatchQueueNameString
|| __TEXT.__text _HMPBEncodeOptionReadFrom
|| __TEXT.__text _HMPBMetadataReadFrom
|| __TEXT.__text _HMStringFromIntentRequestType
|| __TEXT.__text _HomeKitDataMigrationAsString
|| __TEXT.__text _HomeKitDataMigrationOptionsAsString
|| __TEXT.__text ___accessoryReachabilityUpdateMessages
|| __TEXT.__text ___createAddAccessoryProgressHandler
|| __TEXT.__text ___decodeRemoteClientRequest
|| __TEXT.__text ___isValueValid
|| __TEXT.__text ___morePrivateAccessModeBetween
|| __TEXT.__text __homeManagerOptionsFromPayload
|| __TEXT.__text _actionSetFromObject
|| __TEXT.__text _addressFromHMFNetAddress
|| __TEXT.__text _anonymizeUnknownVendorString
|| __TEXT.__text _appendToShortDescription
|| __TEXT.__text _awdValueFromValue
|| __TEXT.__text _bucketizeValueIntoHistogramBinNumber
|| __TEXT.__text _bucketizeValueIntoHistogramBinString
|| __TEXT.__text _buttonConfigurationAsString
|| __TEXT.__text _cameraStreamNetworkAdaptationEnabled
|| __TEXT.__text _celsiusToFahrenheit
|| __TEXT.__text _cleanDirectory
|| __TEXT.__text _compareCharacteristicValue
|| __TEXT.__text _compareNumbers
|| __TEXT.__text _configurationDescription
|| __TEXT.__text _convertToAWDEventTrigger
|| __TEXT.__text _convertToAWDEventTriggerList
|| __TEXT.__text _convertToAWDPredicate
|| __TEXT.__text _convertToAWDPresenceEvent
|| __TEXT.__text _convertToAWDPresenceEventActivationGranualrity
|| __TEXT.__text _convertToAWDPresenceEventList
|| __TEXT.__text _convertToAWDPresenceEventType
|| __TEXT.__text _convertToAWDTriggerActivationState
|| __TEXT.__text _convertToAWDTriggerActivationType
|| __TEXT.__text _convertToAWDTriggerEvent
|| __TEXT.__text _convertToAWDTriggerEventList
|| __TEXT.__text _convertToAWDTriggerRequestType
|| __TEXT.__text _convertToAWDTriggerUpdateType
|| __TEXT.__text _convertValue
|| __TEXT.__text _createDirectory
|| __TEXT.__text _createHMFNetAddressFromIPAddressString
|| __TEXT.__text _createResizedImage
|| __TEXT.__text _createStateData
|| __TEXT.__text _dataFromCKRecord
|| __TEXT.__text _decodeAddressFromJSONDictionary
|| __TEXT.__text _decodePortFromJSONDictionary
|| __TEXT.__text _decodeStringFromJSONDictionary
|| __TEXT.__text _decodeTimeFromJSONDictionary
|| __TEXT.__text _decodeUnsignedIntegerFromJSONDictionary
|| __TEXT.__text _defaultMinimumNetworkRouterSupportHomeKitVersion
|| __TEXT.__text _deobfuscateSettingsName
|| __TEXT.__text _deviceName
|| __TEXT.__text _encodeBulletinBoardNotificationServiceGroup
|| __TEXT.__text _encodeRootObject
|| __TEXT.__text _encodeRootObjectForIncomingXPCMessage
|| __TEXT.__text _encodeRootObjectForRemote
|| __TEXT.__text _encodeRootObjectForRemoteAdministrator
|| __TEXT.__text _encodeRootObjectForRemoteDeviceOnSameAccount
|| __TEXT.__text _encodeRootObjectForRemoteGateway
|| __TEXT.__text _encodeRootObjectForSPIClients
|| __TEXT.__text _encodeRootObjectForXPC
|| __TEXT.__text _entityForMediaProfile
|| __TEXT.__text _entityForService
|| __TEXT.__text _entityFromObject
|| __TEXT.__text _errorAsString
|| __TEXT.__text _fahrenheitToCelsius
|| __TEXT.__text _findImageAspectRatio
|| __TEXT.__text _generateDataForDisplayOrder
|| __TEXT.__text _generateURLForHomeKitObject
|| __TEXT.__text _generateWiFiUniquePreSharedKey
|| __TEXT.__text _getAccessoryConnectivityWaitPeriod
|| __TEXT.__text _getAggressiveControllerKeyPollInterval
|| __TEXT.__text _getAllowAnonymousServerConnections
|| __TEXT.__text _getAppleConfigurationServer
|| __TEXT.__text _getAssistantClientActionSetTimeoutSeconds
|| __TEXT.__text _getAssistantClientReadWriteTimeoutSeconds
|| __TEXT.__text _getAuthServerRetryCount
|| __TEXT.__text _getAuthServerRetryTimeInterval
|| __TEXT.__text _getBLEAccessoryCachePath
|| __TEXT.__text _getBTLEReachabilityLeewayNanoseconds
|| __TEXT.__text _getBTLEReachabilityProbeReduceFactor
|| __TEXT.__text _getBTLEReachabilityTimerNanoseconds
|| __TEXT.__text _getBatchLocationCollectPeriod
|| __TEXT.__text _getBlacklistedBundlesPath
|| __TEXT.__text _getBluetoothGSNMaxValue
|| __TEXT.__text _getBroadcastKeyRefreshPeriod
|| __TEXT.__text _getBuiltinMetadataDictionaryPath
|| __TEXT.__text _getBulletinBoardPath
|| __TEXT.__text _getBulletinImagesPath
|| __TEXT.__text _getBulletinSecureTriggerTimeoutInSeconds
|| __TEXT.__text _getCapabilityForElecting
|| __TEXT.__text _getCheckRemoteAccessTimeout
|| __TEXT.__text _getCloudCachePath
|| __TEXT.__text _getCloudDataSyncInProgressWaitPeriod
|| __TEXT.__text _getCloudKitContainerEnvironment
|| __TEXT.__text _getCloudPushBatchLimit
|| __TEXT.__text _getCloudRecordSizeLimit
|| __TEXT.__text _getCloudUploadMaximumTimerInterval
|| __TEXT.__text _getCloudUploadTimerInterval
|| __TEXT.__text _getCloudUploadTimerIntervalExponentialFactor
|| __TEXT.__text _getCloudZoneUploadTimerInitialInterval
|| __TEXT.__text _getCloudZoneUploadTimerInterval
|| __TEXT.__text _getCoalesceNotificationsPeriod
|| __TEXT.__text _getComfortNoisePayloadType
|| __TEXT.__text _getConfigurationURLForPath
|| __TEXT.__text _getControllerKeyNotLandingShortCircuitWaitPeriod
|| __TEXT.__text _getControllerKeyNotLandingWaitPeriod
|| __TEXT.__text _getControllerKeyPollInterval
|| __TEXT.__text _getDefaultAudioPayloadType
|| __TEXT.__text _getDefaultVideoPayloadType
|| __TEXT.__text _getDelayNotificationsPeriod
|| __TEXT.__text _getDeviceClass
|| __TEXT.__text _getDeviceConnectionKeepAliveResponseTimeoutPeriod
|| __TEXT.__text _getDeviceConnectionKeepAliveTimerPeriod
|| __TEXT.__text _getDisableNotificationsDeferPeriod
|| __TEXT.__text _getDisableReprovisionBrowsingPeriod
|| __TEXT.__text _getDiscoveryBackoffPeriod
|| __TEXT.__text _getEventCountersDataStorePath
|| __TEXT.__text _getEventFlagsDataStorePath
|| __TEXT.__text _getHMCloudSyncUploadErrorCount
|| __TEXT.__text _getHMCloudSyncUploadReasonCount
|| __TEXT.__text _getHMMaximumAccessoriesPerBridge
|| __TEXT.__text _getHMMaximumAccessoriesPerHome
|| __TEXT.__text _getHMMaximumAccessoriesPerRoom
|| __TEXT.__text _getHMMaximumActionSetsPerHome
|| __TEXT.__text _getHMMaximumActionsPerActionSet
|| __TEXT.__text _getHMMaximumCharacteristicsPerService
|| __TEXT.__text _getHMMaximumDataSyncFragmentSize
|| __TEXT.__text _getHMMaximumHomes
|| __TEXT.__text _getHMMaximumRoomsPerHome
|| __TEXT.__text _getHMMaximumRoomsPerZone
|| __TEXT.__text _getHMMaximumServiceGroupsPerHome
|| __TEXT.__text _getHMMaximumServicesPerAccessory
|| __TEXT.__text _getHMMaximumServicesPerServiceGroup
|| __TEXT.__text _getHMMaximumTriggersPerHome
|| __TEXT.__text _getHMMaximumUsersPerHome
|| __TEXT.__text _getHMMaximumZonesPerHome
|| __TEXT.__text _getHMTimerMinimumRecurrence
|| __TEXT.__text _getHRSCommitTimeoutNanoseconds
|| __TEXT.__text _getHRSIdleClientTimeoutNanoseconds
|| __TEXT.__text _getHRSIdleServertTimeoutNanoseconds
|| __TEXT.__text _getHRSSendInternalRequestTimeoutNanoseconds
|| __TEXT.__text _getHRSSendInternalRequestToWatchTimeoutNanoseconds
|| __TEXT.__text _getHRSSendUserRequestTimeoutNanoseconds
|| __TEXT.__text _getHomeKitConfigurationPath
|| __TEXT.__text _getHomedSupportedFeatures
|| __TEXT.__text _getHomedVersion
|| __TEXT.__text _getIDSDataSyncJournalPath
|| __TEXT.__text _getIDSSessionOptionsAllowedClasses
|| __TEXT.__text _getImagesPath
|| __TEXT.__text _getKeyTransferBroadcastMaximumDelay
|| __TEXT.__text _getKeychainPopupTimerInterval
|| __TEXT.__text _getLaunchAssertionPlistPath
|| __TEXT.__text _getMaxCloudOperationRetries
|| __TEXT.__text _getMaximumSecureRemoteStreams
|| __TEXT.__text _getMaximumSimultaneousRemoteStreams
|| __TEXT.__text _getMediaBrowserProcessingInterval
|| __TEXT.__text _getMediaRouteIdentifier
|| __TEXT.__text _getMinimumSupportedResidentHomeKitVersion
|| __TEXT.__text _getMinimumTrustZoneCapableHomeKitVersion
|| __TEXT.__text _getPairingInterruptionGracePeriod
|| __TEXT.__text _getPairingReconfirmWaitPeriod
|| __TEXT.__text _getPendingResponseMaxPeriod
|| __TEXT.__text _getPendingResponseTickPeriod
|| __TEXT.__text _getPlainMetadataPath
|| __TEXT.__text _getPreferredPrimaryForHome
|| __TEXT.__text _getPresenceFeedRefreshInMinutes
|| __TEXT.__text _getPresenceMonitorAuditInMinutes
|| __TEXT.__text _getPresenceMonitorRefreshGracePeriodInMinutes
|| __TEXT.__text _getProactiveSnapshotCacheValidPeriod
|| __TEXT.__text _getProtectedMetadataPath
|| __TEXT.__text _getProtectedStorePath
|| __TEXT.__text _getRTPPtime
|| __TEXT.__text _getRegisteredApplicationsPath
|| __TEXT.__text _getRemoteDeviceMonitorHealthTimerTimeInterval
|| __TEXT.__text _getRemoteDeviceMonitorRetryTimerFactor
|| __TEXT.__text _getRemoteDeviceMonitorRetryTimerMaximumTimeInterval
|| __TEXT.__text _getRemoteDeviceMonitorRetryTimerMinimumTimeInterval
|| __TEXT.__text _getRemotePendingResponseDecayScale
|| __TEXT.__text _getRemotePendingResponseLeewayNanoseconds
|| __TEXT.__text _getRemotePendingResponseTimerNanoseconds
|| __TEXT.__text _getRemoteReachabilityDeregistrationDeferPeriod
|| __TEXT.__text _getRemoteReachabilityNotificationsDeferPeriod
|| __TEXT.__text _getReportingUnits
|| __TEXT.__text _getRequestHomeDataSyncRetryPeriodInMinutes
|| __TEXT.__text _getSQLitePath
|| __TEXT.__text _getSecureAccessErrorCode
|| __TEXT.__text _getSecureSessionMessageTimeout
|| __TEXT.__text _getSecureTriggerUserResponseTimeoutInSeconds
|| __TEXT.__text _getServerTokenPath
|| __TEXT.__text _getSnapshotResolution
|| __TEXT.__text _getStartCharacteristicsMonitorWaitPeriod
|| __TEXT.__text _getStoreDirectoryPath
|| __TEXT.__text _getSupportedAudioCodecs
|| __TEXT.__text _getSupportedResolutions
|| __TEXT.__text _getSupportedSRTPAuths
|| __TEXT.__text _getSupportedVideoCodecs
|| __TEXT.__text _getTransactionJournalPath
|| __TEXT.__text _getTupleForCharacteristic
|| __TEXT.__text _getUniqueDeviceId
|| __TEXT.__text _getUserPushCacheTimeInterval
|| __TEXT.__text _getVendorIDStorePath
|| __TEXT.__text _getVendorInfoDatabaseServerURLOverride
|| __TEXT.__text _getVendorInfoFetchPeriod
|| __TEXT.__text _getVideoAttributesDowngradeDebouceTimer
|| __TEXT.__text _getVideoAttributesUpgradeDebouceTimer
|| __TEXT.__text _getWatchdogControllerKeyPollTimeout
|| __TEXT.__text _hapLinkTypeDescription
|| __TEXT.__text _hapOperationTypeDescription
|| __TEXT.__text _hasAssistantHashingKeyChanged
|| __TEXT.__text _identifierForTargetWithUUID
|| __TEXT.__text _initializeCapabilitiesPathsAndTimeouts
|| __TEXT.__text _inputStreamFromCKRecord
|| __TEXT.__text _isAppleTV
|| __TEXT.__text _isAutoLockEnabledOnThisDevice
|| __TEXT.__text _isBTLECapableDevice
|| __TEXT.__text _isCarrierBuild
|| __TEXT.__text _isDeveloperBuild
|| __TEXT.__text _isDeviceLocked
|| __TEXT.__text _isHomePod
|| __TEXT.__text _isInternalBuild
|| __TEXT.__text _isMac
|| __TEXT.__text _isMetricLocale
|| __TEXT.__text _isPasscodeEnabledOnThisDevice
|| __TEXT.__text _isSimulator
|| __TEXT.__text _isTimeServiceEnabled
|| __TEXT.__text _isTruePredicate
|| __TEXT.__text _isValidAudioStreamSetting
|| __TEXT.__text _isValidSignificantEvent
|| __TEXT.__text _isWatch
|| __TEXT.__text _isiOSDevice
|| __TEXT.__text _isiPadDevice
|| __TEXT.__text _launchURL
|| __TEXT.__text _linkQualityAsString
|| __TEXT.__text _localizedDescriptionKeyForError
|| __TEXT.__text _localizedStringForKey
|| __TEXT.__text _locationAsString
|| __TEXT.__text _logAndPostNotification
|| __TEXT.__text _mapFromSiriSceneType
|| __TEXT.__text _mapInternalCameraErrorCodes
|| __TEXT.__text _mapProfilesToAccessoryUUIDs
|| __TEXT.__text _mapProfilesToServiceUUIDs
|| __TEXT.__text _mapTargetCategory
|| __TEXT.__text _mapToHMMediaPlaybackState
|| __TEXT.__text _mapToHMMediaPlaybackStateFromMPCPlayerState
|| __TEXT.__text _mapToHMMediaRepeatState
|| __TEXT.__text _mapToHMMediaShuffleState
|| __TEXT.__text _mapToSiriMediaProfileAttribute
|| __TEXT.__text _mapToSiriSceneType
|| __TEXT.__text _parseMediaSourceDisplayOrder
|| __TEXT.__text _parseMessageSource
|| __TEXT.__text _playbackStateAsString
|| __TEXT.__text _plurizedStringIfNeeded
|| __TEXT.__text _populateAccessoryMigrationModelsForHome
|| __TEXT.__text _populateTransactionForNewAccessory
|| __TEXT.__text _populateTransactionForUpdatedAccessory
|| __TEXT.__text _regionAsString
|| __TEXT.__text _resizeImageData
|| __TEXT.__text _shouldDelayBatchedReadWrite
|| __TEXT.__text _shouldDisableCloudDataSync
|| __TEXT.__text _shouldDisableLegacyCloudDataSync
|| __TEXT.__text _shouldDisableWACBrowser
|| __TEXT.__text _shouldEnableNetworkLogging
|| __TEXT.__text _shouldEnableRetailDemoSetup
|| __TEXT.__text _shouldEnableTwoFactorAuthentication
|| __TEXT.__text _shouldEnableWakeNotifications
|| __TEXT.__text _shouldLogPrivateInformation
|| __TEXT.__text _shouldShowAuthDialog
|| __TEXT.__text _shouldSkipAuthPromptDialog
|| __TEXT.__text _sourceAsString
|| __TEXT.__text _stringFromCKRecord
|| __TEXT.__text _translateAVCAudioCodec
|| __TEXT.__text _translateAVCCipherSuite
|| __TEXT.__text _translateAVCVideoCodec
|| __TEXT.__text _translateAVCVideoResolution
|| __TEXT.__text _translateAudioCodec
|| __TEXT.__text _translateHMDCipherSuite
|| __TEXT.__text _translateImageResolution
|| __TEXT.__text _translateVideoCodec
|| __TEXT.__text _translateVideoResolution
|| __TEXT.__text _updateAssistantHashingKey
|| __TEXT.__text _validateHomeKitServerChallenge
|| __TEXT.__text _validateHostNameForWANFirewallRule
|| __TEXT.__text _validateRegion
|| __TEXT.__text _valueWithAssistantUnits
__ AVConference: _OBJC_CLASS_$_AVAudioClient
__ AVConference: _OBJC_CLASS_$_AVCAudioStream
__ AVConference: _OBJC_CLASS_$_AVCMediaStreamConfig
__ AVConference: _OBJC_CLASS_$_AVCNetworkAddress
__ AVConference: _OBJC_CLASS_$_AVCPacketFilterRTP
__ AVConference: _OBJC_CLASS_$_AVCPacketRelay
__ AVConference: _OBJC_CLASS_$_AVCPacketRelayConnection
__ AVConference: _OBJC_CLASS_$_AVCRemoteVideoClient
__ AVConference: _OBJC_CLASS_$_AVCVideoStream
__ AVConference: _OBJC_METACLASS_$_AVCMediaStreamConfig
__ AVConference: _kAVCKeyRTPLocalSSRC
__ AVConference: _kAVCKeySharedSocket
__ AVConference: _kAVCKeySupportedAudioCodecs
__ AVConference: _kAVCKeySupportedVideoDecodingCodecs
__ AVConference: _kAVCKeySupportedVideoDecodingResolutions
__ AVConference: _kAVCKeyVideoStreamDownlinkIsOperatingAtMaxBitrate
__ AVConference: _kAVCKeyVideoStreamDownlinkIsOperatingAtMinBitrate
__ AVConference: _kAVCKeyVideoStreamDownlinkOperatingBitrate
__ AVConference: _kAVCKeyVideoStreamDownlinkOptimalBitrate
__ AVFoundation: _AVOutputDeviceConfigurationOptionCancelConfigurationIfAuthRequired
__ AVFoundation: _OBJC_CLASS_$_AVOutputDevice
__ AVFoundation: _OBJC_CLASS_$_AVOutputDeviceAuthorizedPeer
__ Accounts: _ACAccountDataclassCloudPhotos
__ Accounts: _ACAccountTypeIdentifierIDMS
__ Accounts: _ACAccountTypeIdentifieriTunesStore
__ Accounts: _ACDAccountStoreDidChangeNotification
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassHome
__ AirPlayRoutePrediction: _OBJC_CLASS_$_ARPHomeControlSuggester
__ AppSupport: _CPCopyBundleIdentifierAndTeamFromAuditToken
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthenticateOptions
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthenticateRequest
__ AppleMediaServices: _OBJC_CLASS_$_AMSAuthenticateTask
__ ApplePushService: _APSConnectionOverrideNamedDelegatePort
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ AssistantServices: _OBJC_CLASS_$_AFSecurityConnection
__ AssistantServices: _OBJC_CLASS_$_AFSettingsConnection
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _AKAuthenticationDSIDKey
__ AuthKit: _AKAuthenticationIsHSA2Key
__ AuthKit: _AKAuthenticationPasswordKey
__ AuthKit: _AKAuthenticationRawPasswordKey
__ AuthKit: _AKAuthenticationUsernameKey
__ AuthKit: _OBJC_CLASS_$_AKAccountManager
__ AuthKit: _OBJC_CLASS_$_AKAnisetteData
__ AuthKit: _OBJC_CLASS_$_AKAnisetteProvisioningController
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationContext
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKDevice
__ BackgroundTaskAgent: _BackgroundTaskAgentAddJob
__ BackgroundTaskAgent: _BackgroundTaskAgentCopyJob
__ BackgroundTaskAgent: _BackgroundTaskAgentInit
__ BackgroundTaskAgent: _BackgroundTaskAgentRemoveJob
__ BackgroundTaskAgent: _kBackgroundTaskAgentJobExpired
__ BackgroundTaskAgent: _kBackgroundTaskAgentJobStatus
__ BackgroundTaskAgent: _kBackgroundTaskAgentJobWindowAdjustTime
__ BackgroundTaskAgent: _kBackgroundTaskAgentJobWindowEndTime
__ BackgroundTaskAgent: _kBackgroundTaskAgentJobWindowStartTime
__ BackgroundTaskAgent: _kBackgroundTaskAgentPowerOptLevel
__ BackgroundTaskAgent: _kBackgroundTaskAgentUserContext
__ BaseBoard: _OBJC_CLASS_$_BSPortDeathWatcher
__ CallKit: _OBJC_CLASS_$_CXCallObserver
__ CarKit: _OBJC_CLASS_$_CARSessionStatus
__ Celestial: _AVSystemController_UplinkMuteAttribute
__ Celestial: _OBJC_CLASS_$_AVSystemController
__ CloudKit: _CKAccountChangedNotification
__ CloudKit: _CKContainerEnvironmentFromString
__ CloudKit: _CKContainerEnvironmentString
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _OBJC_CLASS_$_CKAsset
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKContainerID
__ CloudKit: _OBJC_CLASS_$_CKFetchDatabaseChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchSubscriptionsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperation
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperation
__ CloudKit: _OBJC_CLASS_$_CKModifySubscriptionsOperation
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKOperationGroup
__ CloudKit: _OBJC_CLASS_$_CKQuery
__ CloudKit: _OBJC_CLASS_$_CKQueryOperation
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneSubscription
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CloudKit: _OBJC_CLASS_$_CKStreamingAssetAppendContext
__ CloudKit: _OBJC_CLASS_$_CKUserIdentityLookupInfo
__ Contacts: _CNContactStoreDidChangeNotification
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreDuet: _OBJC_CLASS_$__DKEvent
__ CoreDuet: _OBJC_CLASS_$__DKEventQuery
__ CoreDuet: _OBJC_CLASS_$__DKEventStream
__ CoreDuet: _OBJC_CLASS_$__DKHomeKitAccessoryControlIdentifier
__ CoreDuet: _OBJC_CLASS_$__DKHomeKitHomeAppViewIdentifier
__ CoreDuet: _OBJC_CLASS_$__DKHomeKitSceneIdentifier
__ CoreDuet: _OBJC_CLASS_$__DKKnowledgeStore
__ CoreDuet: _OBJC_CLASS_$__DKMetadataHomeAppView
__ CoreDuet: _OBJC_CLASS_$__DKMetadataHomeKitAccessoryControl
__ CoreDuet: _OBJC_CLASS_$__DKMetadataHomeKitScene
__ CoreDuet: _OBJC_CLASS_$__DKQuery
__ CoreDuet: _OBJC_CLASS_$__DKSystemEventStreams
__ CoreDuet: __DKHomeKitSourceEventTrigger
__ CoreDuet: __DKHomeKitSourceFirstParty
__ CoreDuet: __DKHomeKitSourceIntentSuggestion
__ CoreDuet: __DKHomeKitSourceInternalRequested
__ CoreDuet: __DKHomeKitSourceRemoteRequested
__ CoreDuet: __DKHomeKitSourceSiri
__ CoreDuet: __DKHomeKitSourceThirdParty
__ CoreDuet: __DKHomeKitSourceTimerTrigger
__ CoreDuet: __DKHomeKitSourceUnknown
__ CoreDuet: __DKHomeKitSourceUser
__ CoreDuetContext: _OBJC_CLASS_$__CDClientContext
__ CoreDuetContext: _OBJC_CLASS_$__CDContextQueries
__ CoreFollowUp: _FLFollowUpPreferencesBundleIdentifier
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpController
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpItem
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterGetLocalCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesCopyMultiple
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFPreferencesSetMultiple
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationGetResponseValue
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleUsesMetricSystem
__ CoreFoundation: _NSSystemClockDidChangeNotification
__ CoreFoundation: _NSSystemTimeZoneDidChangeNotification
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFPreferencesCurrentUser
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlertTopMostKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationKeyboardTypesKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreFoundation: _kCFUserNotificationTextFieldTitlesKey
__ CoreFoundation: _kCFUserNotificationTextFieldValuesKey
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGImageGetAlphaInfo
__ CoreGraphics: _CGImageGetBitsPerComponent
__ CoreGraphics: _CGImageGetBytesPerRow
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGRectZero
__ CoreHAP: _HAPAccessoryInstanceID
__ CoreHAP: _HAPAttributeDatabaseKey_Accessories
__ CoreHAP: _HAPAttributeDatabaseKey_AccessoryInstanceID
__ CoreHAP: _HAPCharacteristicEventNotification
__ CoreHAP: _HAPCharacteristicEventsUserInfoKey
__ CoreHAP: _HAPCharacteristicUUID_Active
__ CoreHAP: _HAPCharacteristicUUID_AirParticulateDensity
__ CoreHAP: _HAPCharacteristicUUID_AirQuality
__ CoreHAP: _HAPCharacteristicUUID_CarbonDioxideDetected
__ CoreHAP: _HAPCharacteristicUUID_CarbonMonoxideDetected
__ CoreHAP: _HAPCharacteristicUUID_ContactState
__ CoreHAP: _HAPCharacteristicUUID_CoolingThreshold
__ CoreHAP: _HAPCharacteristicUUID_CurrentDoorState
__ CoreHAP: _HAPCharacteristicUUID_CurrentHeaterCoolerState
__ CoreHAP: _HAPCharacteristicUUID_CurrentHeatingCooling
__ CoreHAP: _HAPCharacteristicUUID_CurrentHorizontalTilt
__ CoreHAP: _HAPCharacteristicUUID_CurrentLockMechanismState
__ CoreHAP: _HAPCharacteristicUUID_CurrentPosition
__ CoreHAP: _HAPCharacteristicUUID_CurrentRelativeHumidity
__ CoreHAP: _HAPCharacteristicUUID_CurrentSecuritySystemState
__ CoreHAP: _HAPCharacteristicUUID_CurrentTemperature
__ CoreHAP: _HAPCharacteristicUUID_CurrentTilt
__ CoreHAP: _HAPCharacteristicUUID_CurrentVerticalTilt
__ CoreHAP: _HAPCharacteristicUUID_HeatingThreshold
__ CoreHAP: _HAPCharacteristicUUID_Identify
__ CoreHAP: _HAPCharacteristicUUID_InUse
__ CoreHAP: _HAPCharacteristicUUID_InputEvent
__ CoreHAP: _HAPCharacteristicUUID_LeakDetected
__ CoreHAP: _HAPCharacteristicUUID_MotionDetected
__ CoreHAP: _HAPCharacteristicUUID_Name
__ CoreHAP: _HAPCharacteristicUUID_ObstructionDetected
__ CoreHAP: _HAPCharacteristicUUID_OccupancyDetected
__ CoreHAP: _HAPCharacteristicUUID_On
__ CoreHAP: _HAPCharacteristicUUID_PM10Density
__ CoreHAP: _HAPCharacteristicUUID_PM2_5Density
__ CoreHAP: _HAPCharacteristicUUID_Ping
__ CoreHAP: _HAPCharacteristicUUID_PositionState
__ CoreHAP: _HAPCharacteristicUUID_ProgramMode
__ CoreHAP: _HAPCharacteristicUUID_RemainingDuration
__ CoreHAP: _HAPCharacteristicUUID_SecuritySystemAlarmType
__ CoreHAP: _HAPCharacteristicUUID_SelectedStreamConfiguration
__ CoreHAP: _HAPCharacteristicUUID_SetupStreamEndpoint
__ CoreHAP: _HAPCharacteristicUUID_SmokeDetected
__ CoreHAP: _HAPCharacteristicUUID_StreamingStatus
__ CoreHAP: _HAPCharacteristicUUID_SupportedAudioStreamConfiguration
__ CoreHAP: _HAPCharacteristicUUID_SupportedRTPConfiguration
__ CoreHAP: _HAPCharacteristicUUID_SupportedVideoStreamConfiguration
__ CoreHAP: _HAPCharacteristicUUID_TargetDoorState
__ CoreHAP: _HAPCharacteristicUUID_TargetHeaterCoolerState
__ CoreHAP: _HAPCharacteristicUUID_TargetHeatingCooling
__ CoreHAP: _HAPCharacteristicUUID_TargetHorizontalTilt
__ CoreHAP: _HAPCharacteristicUUID_TargetLockMechanismState
__ CoreHAP: _HAPCharacteristicUUID_TargetPosition
__ CoreHAP: _HAPCharacteristicUUID_TargetRelativeHumidity
__ CoreHAP: _HAPCharacteristicUUID_TargetSecuritySystemState
__ CoreHAP: _HAPCharacteristicUUID_TargetTemperature
__ CoreHAP: _HAPCharacteristicUUID_TargetTilt
__ CoreHAP: _HAPCharacteristicUUID_TargetVerticalTilt
__ CoreHAP: _HAPCharacteristicUUID_TimeUpdate
__ CoreHAP: _HAPDataStreamTransportCommandStatusAsString
__ CoreHAP: _HAPDispatchQueueName
__ CoreHAP: _HAPErrorDomain
__ CoreHAP: _HAPLinkTypeDescription
__ CoreHAP: _HAPNFCData
__ CoreHAP: _HAPNFCProxSetupNotification
__ CoreHAP: _HAPNotificationPingFailedAccessoryNotReachable
__ CoreHAP: _HAPNotificationPingSucceededAccessoryReachable
__ CoreHAP: _HAPServiceType_Lightbulb
__ CoreHAP: _HAPServiceType_LockMechanism
__ CoreHAP: _HAPServiceType_SecuritySystem
__ CoreHAP: _HAPServiceUUID_AccessoryInformation
__ CoreHAP: _HAPServiceUUID_AirPurifier
__ CoreHAP: _HAPServiceUUID_CameraRTPStreamManagement
__ CoreHAP: _HAPServiceUUID_Door
__ CoreHAP: _HAPServiceUUID_Doorbell
__ CoreHAP: _HAPServiceUUID_Fan
__ CoreHAP: _HAPServiceUUID_Faucet
__ CoreHAP: _HAPServiceUUID_GarageDoorOpener
__ CoreHAP: _HAPServiceUUID_HeaterCooler
__ CoreHAP: _HAPServiceUUID_HumidifierDehumidifier
__ CoreHAP: _HAPServiceUUID_IrrigationSystem
__ CoreHAP: _HAPServiceUUID_Lightbulb
__ CoreHAP: _HAPServiceUUID_LockMechanism
__ CoreHAP: _HAPServiceUUID_Microphone
__ CoreHAP: _HAPServiceUUID_Outlet
__ CoreHAP: _HAPServiceUUID_ProgrammableSwitch_Stateless
__ CoreHAP: _HAPServiceUUID_SecuritySystem
__ CoreHAP: _HAPServiceUUID_Sensor_AirQuality
__ CoreHAP: _HAPServiceUUID_Sensor_CarbonDioxide
__ CoreHAP: _HAPServiceUUID_Sensor_CarbonMonoxide
__ CoreHAP: _HAPServiceUUID_Sensor_Contact
__ CoreHAP: _HAPServiceUUID_Sensor_Humidity
__ CoreHAP: _HAPServiceUUID_Sensor_Leak
__ CoreHAP: _HAPServiceUUID_Sensor_Light
__ CoreHAP: _HAPServiceUUID_Sensor_Motion
__ CoreHAP: _HAPServiceUUID_Sensor_Occupancy
__ CoreHAP: _HAPServiceUUID_Sensor_Smoke
__ CoreHAP: _HAPServiceUUID_Sensor_Temperature
__ CoreHAP: _HAPServiceUUID_Speaker
__ CoreHAP: _HAPServiceUUID_Switch
__ CoreHAP: _HAPServiceUUID_Thermostat
__ CoreHAP: _HAPServiceUUID_TimeInformation
__ CoreHAP: _HAPServiceUUID_Valve
__ CoreHAP: _HAPServiceUUID_VentilationFan
__ CoreHAP: _HAPServiceUUID_Window
__ CoreHAP: _HAPServiceUUID_WindowCovering
__ CoreHAP: _HAPTLVCreateParseArrayToString
__ CoreHAP: _HAPTLVParseContiguousTlvs
__ CoreHAP: _HAPTLVParseUInt64
__ CoreHAP: _HAPTLVWriteUInt64
__ CoreHAP: _HAPURLComponent_ResourceImage
__ CoreHAP: _HAPURLComponent_ResourceImageHeight
__ CoreHAP: _HAPURLComponent_ResourceImageWidth
__ CoreHAP: _HAPURLComponent_ResourceRequestReason
__ CoreHAP: _HAPURLComponent_ResourceType
__ CoreHAP: _HAPUserPermissionTypeDescription
__ CoreHAP: _HAPValidateSetupHash
__ CoreHAP: _HMErrorCodeFromHAPErrorCode
__ CoreHAP: _HMErrorFromOSStatus
__ CoreHAP: _OBJC_CLASS_$_HAPAccessory
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryInfo
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryServer
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryServerBTLE
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryServerBrowser
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryServerBrowserBTLE
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryServerBrowserIP
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryServerBrowserRelay
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryServerIP
__ CoreHAP: _OBJC_CLASS_$_HAPAccessoryWiFiConfiguration
__ CoreHAP: _OBJC_CLASS_$_HAPArrayWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPBTLECentralManager
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristic
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicConfigurationRequestTuple
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicResponseTuple
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueActiveTransitionContext
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueLinearDerivedTransition
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueLinearDerivedTransitionPoint
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueRange
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueTransition
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueTransitionControl
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueTransitionControlResponse
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueTransitionControllerContext
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueTransitionEndBehaviorWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueTransitionFetch
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueTransitionStart
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicValueTransitionState
__ CoreHAP: _OBJC_CLASS_$_HAPCharacteristicWriteRequestTuple
__ CoreHAP: _OBJC_CLASS_$_HAPDataStreamHAPAccessoryPayload
__ CoreHAP: _OBJC_CLASS_$_HAPDataStreamHAPControllerPayload
__ CoreHAP: _OBJC_CLASS_$_HAPDataStreamTransportCommandWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPDataStreamTransportInterruptPayload
__ CoreHAP: _OBJC_CLASS_$_HAPDataStreamTransportProtocolWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPDataStreamTransportSetup
__ CoreHAP: _OBJC_CLASS_$_HAPDataStreamTransportSetupResponse
__ CoreHAP: _OBJC_CLASS_$_HAPDataStreamTransportSupportedConfiguration
__ CoreHAP: _OBJC_CLASS_$_HAPDataWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPFragmentationPacket
__ CoreHAP: _OBJC_CLASS_$_HAPFragmentationStream
__ CoreHAP: _OBJC_CLASS_$_HAPMetadata
__ CoreHAP: _OBJC_CLASS_$_HAPMetadataTuple
__ CoreHAP: _OBJC_CLASS_$_HAPNFCReaderNotification
__ CoreHAP: _OBJC_CLASS_$_HAPNotification
__ CoreHAP: _OBJC_CLASS_$_HAPNumberParser
__ CoreHAP: _OBJC_CLASS_$_HAPNumberWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPPairSetupSession
__ CoreHAP: _OBJC_CLASS_$_HAPPairingIdentity
__ CoreHAP: _OBJC_CLASS_$_HAPRelayAccessory
__ CoreHAP: _OBJC_CLASS_$_HAPRelayActivationClient
__ CoreHAP: _OBJC_CLASS_$_HAPRelayPairingClient
__ CoreHAP: _OBJC_CLASS_$_HAPRelayStream
__ CoreHAP: _OBJC_CLASS_$_HAPSelectedAudioStreamConfiguration
__ CoreHAP: _OBJC_CLASS_$_HAPStringWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPSupportedAudioStreamConfigurations
__ CoreHAP: _OBJC_CLASS_$_HAPSupportedCharacteristicValueTransitionConfiguration
__ CoreHAP: _OBJC_CLASS_$_HAPSupportedDiagnosticsSnapshot
__ CoreHAP: _OBJC_CLASS_$_HAPSystemKeychainStore
__ CoreHAP: _OBJC_CLASS_$_HAPTLVBase
__ CoreHAP: _OBJC_CLASS_$_HAPTLVCreator
__ CoreHAP: _OBJC_CLASS_$_HAPTLVFloatNumberValue
__ CoreHAP: _OBJC_CLASS_$_HAPTLVSignedNumberValue
__ CoreHAP: _OBJC_CLASS_$_HAPTLVUnsignedNumberValue
__ CoreHAP: _OBJC_CLASS_$_HAPTunneledAccessoryBTLE
__ CoreHAP: _OBJC_CLASS_$_HAPUUIDWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPWiFiConfigurationControl
__ CoreHAP: _OBJC_CLASS_$_HAPWiFiConfigurationOperationTypeWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPWiFiSecurityModeWrapper
__ CoreHAP: _OBJC_CLASS_$_HAPWiFiStationConfiguration
__ CoreHAP: _OBJC_IVAR_$_HAPAccessoryServer._identifier
__ CoreHAP: _OBJC_IVAR_$_HAPAccessoryServer._name
__ CoreHAP: _OBJC_METACLASS_$_HAPAccessoryServer
__ CoreHAP: _OBJC_METACLASS_$_HAPAccessoryServerBrowser
__ CoreHAP: _OBJC_METACLASS_$_HAPNumberParser
__ CoreHAP: _OBJC_METACLASS_$_HAPRelayActivationClient
__ CoreHAP: _OBJC_METACLASS_$_HAPRelayPairingClient
__ CoreHAP: _OBJC_METACLASS_$_HAPRelayStream
__ CoreHAP: _OBJC_METACLASS_$_HAPTLVBase
__ CoreHAP: __parseSerializedAccessory
__ CoreHAP: _compareStateNumberWithRollover
__ CoreHAP: _dateWithTimeIntervalSince1970
__ CoreHAP: _kControllerKeyPairGeneratedNotification
__ CoreHAP: _kHAPMetadataKey
__ CoreHAP: _kHAPPrimaryAccessoryInstanceID
__ CoreHAP: _kHMMetadataKey
__ CoreHAP: _kMetadataAllowableSecuringWritesKey
__ CoreHAP: _kMetadataAssistantKey
__ CoreHAP: _kMetadataBlacklistFromApplicationsKey
__ CoreHAP: _kMetadataBlacklistKey
__ CoreHAP: _kMetadataBulletinBoardEnabledKey
__ CoreHAP: _kMetadataCategoriesKey
__ CoreHAP: _kMetadataCharacteristicsKey
__ CoreHAP: _kMetadataCoalesceNotificationsKey
__ CoreHAP: _kMetadataDefaultDescriptionKey
__ CoreHAP: _kMetadataFormatKey
__ CoreHAP: _kMetadataIdentifierKey
__ CoreHAP: _kMetadataLegacyV3CloudDataKey
__ CoreHAP: _kMetadataLegacyV3IDSDataKey
__ CoreHAP: _kMetadataNotificationAutoEnabledKey
__ CoreHAP: _kMetadataNotificationKey
__ CoreHAP: _kMetadataOutValuesKey
__ CoreHAP: _kMetadataPlistDictionaryKey
__ CoreHAP: _kMetadataPowerOnWriteFilter
__ CoreHAP: _kMetadataReadKey
__ CoreHAP: _kMetadataReadWriteKey
__ CoreHAP: _kMetadataRequiresDeviceUnlockKey
__ CoreHAP: _kMetadataSchemaVersionKey
__ CoreHAP: _kMetadataServicesKey
__ CoreHAP: _kMetadataSupportsLocalizationKey
__ CoreHAP: _kMetadataUUIDKey
__ CoreHAP: _kMetadataUnitsKey
__ CoreHAP: _kMetadataValuesKey
__ CoreHAP: _kMetadataVersionKey
__ CoreHAP: _kMetadataWriteKey
__ CoreLocation: _OBJC_CLASS_$_CLBeaconRegion
__ CoreLocation: _OBJC_CLASS_$_CLCircularRegion
__ CoreLocation: _OBJC_CLASS_$_CLGeocoder
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _OBJC_CLASS_$_CLLocationManager
__ CoreLocation: _OBJC_CLASS_$_CLRegion
__ CoreLocation: _kCLDistanceFilterNone
__ CoreLocation: _kCLLocationAccuracyBestForNavigation
__ CoreMedia: _CMTimeGetSeconds
__ CoreRoutine: _OBJC_CLASS_$_RTRoutineManager
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _kUTTypeJPEG
__ CoreSpotlight: _OBJC_CLASS_$_CSSearchableIndex
__ CoreUtils: _CFPrefs_CopyTypedValue
__ CoreUtils: _CFPrefs_GetDouble
__ CoreUtils: _CFPrefs_GetInt64
__ CoreUtils: _DebugGetErrorString
__ CoreUtils: _GetPrimaryIPAddress
__ CoreUtils: _HardwareAddressToCString
__ CoreUtils: _IsAppleTV
__ CoreUtils: _LogPrintF
__ CoreUtils: _NSAppendPrintF
__ CoreUtils: _OBJC_CLASS_$_CUBLEAdvertiser
__ CoreUtils: _OBJC_CLASS_$_CUBLEScanner
__ CoreUtils: _OBJC_CLASS_$_CULiveAction
__ CoreUtils: _OBJC_CLASS_$_CUWACSession
__ CoreUtils: _OBJC_CLASS_$_CUWiFiScanner
__ CoreUtils: _OPACKDecodeBytes
__ CoreUtils: _OPACKEncoderCreateData
__ CoreUtils: _PairingSessionCreate
__ CoreUtils: _PairingSessionDeriveKey
__ CoreUtils: _PairingSessionExchange
__ CoreUtils: _PairingSessionSetLogging
__ CoreUtils: _RandomBytes
__ CoreUtils: _SocketGetInterfaceInfo
__ CoreUtils: _TLV8BufferAppend
__ CoreUtils: _TLV8BufferAppendUInt64
__ CoreUtils: _TLV8BufferFree
__ CoreUtils: _TLV8BufferInit
__ CoreUtils: _TLV8Get
__ CoreUtils: _TLV8GetNext
__ CoreUtils: _TLV8GetOrCopyCoalesced
__ CoreUtils: _TLV8GetUInt64
__ CoreUtils: _UpTicksToMilliseconds
__ CoreUtils: _WiFiCopyNetworkInfo
__ CoreUtils: __LogCategory_Initialize
__ CoreUtils: _cced25519_verify_compat
__ CoreUtils: _chacha20_poly1305_decrypt_all_64x64
__ CoreUtils: _chacha20_poly1305_decrypt_all_96x32
__ CoreUtils: _chacha20_poly1305_encrypt_all_64x64
__ CoreUtils: _chacha20_poly1305_encrypt_all_96x32
__ FMF: _FMFDevicesChangedNotification
__ FMF: _FMFMeDeviceChangedNotification
__ FMF: _OBJC_CLASS_$_FMFSession
__ FindMyDevice: _OBJC_CLASS_$_FMDFMIPManager
__ FindMyDevice: _kLostModeChangedNotification
__ Foundation: _NSAllMapTableValues
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLocalizedFileSizeDescription
__ Foundation: _NSLocalizedRecoverySuggestionErrorKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromBOOL
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBackgroundActivityScheduler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantFloatNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSCountedSet
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFormatter
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSListFormatter
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNetServiceBrowser
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLCredential
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSURLSession
__ Foundation: _OBJC_CLASS_$_NSURLSessionConfiguration
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSFormatter
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ FrontBoardServices: _FBSSceneVisibilityEndowmentNamespace
__ GeoServices: _GEOAlmanacAltitudeSunset
__ GeoServices: _OBJC_CLASS_$_GEOAlmanac
__ HMFoundation: _HMFAreStringsEqualIgnoringCase
__ HMFoundation: _HMFBooleanToString
__ HMFoundation: _HMFDataIsReversed
__ HMFoundation: _HMFDigestAlgorithmToString
__ HMFoundation: _HMFDispatchQueueName
__ HMFoundation: _HMFEnabledStatusToString
__ HMFoundation: _HMFEqualObjects
__ HMFoundation: _HMFErrorDomain
__ HMFoundation: _HMFEventDictionaryFromFormatWithUUID
__ HMFoundation: _HMFGetActivityIdentifier
__ HMFoundation: _HMFGetLogCategory
__ HMFoundation: _HMFGetLogIdentifier
__ HMFoundation: _HMFGetOsLogHandle
__ HMFoundation: _HMFHomeKitLoggingSubsystem
__ HMFoundation: _HMFKeySizeIRK128
__ HMFoundation: _HMFKeyTypeIRK
__ HMFoundation: _HMFMemoryMonitorProcessMemoryPressureNotification
__ HMFoundation: _HMFMethodDescription
__ HMFoundation: _HMFObjectDescription
__ HMFoundation: _HMFOperatingSystemVersionCompare
__ HMFoundation: _HMFPowerManagerBatteryLevelDidChangeNotification
__ HMFoundation: _HMFPowerManagerBatteryStateDidChangeNotification
__ HMFoundation: _HMFProcessMemoryStateUpdateKey
__ HMFoundation: _HMFProductClassFromString
__ HMFoundation: _HMFProductClassToString
__ HMFoundation: _HMFProductInfoArcherOSVersion
__ HMFoundation: _HMFProductInfoAzulOSVersion
__ HMFoundation: _HMFProductInfoBlowfishOSVersion
__ HMFoundation: _HMFProductInfoBondiOSVersion
__ HMFoundation: _HMFProductInfoBugleOSVersion
__ HMFoundation: _HMFProductInfoButlerOSVersion
__ HMFoundation: _HMFProductInfoCatamaranOSVersion
__ HMFoundation: _HMFProductInfoCinarOSVersion
__ HMFoundation: _HMFProductInfoCoralOSVersion
__ HMFoundation: _HMFProductInfoCoyoteOSVersion
__ HMFoundation: _HMFProductInfoDaytonaOSVersion
__ HMFoundation: _HMFProductInfoDonnerTideOSVersion
__ HMFoundation: _HMFProductInfoEagleOSVersion
__ HMFoundation: _HMFProductInfoEatonOSVersion
__ HMFoundation: _HMFProductInfoElectricOSVersion
__ HMFoundation: _HMFProductInfoEmeraldOSVersion
__ HMFoundation: _HMFProductInfoEmetOSVersion
__ HMFoundation: _HMFProductInfoEmperorOSVersion
__ HMFoundation: _HMFProductInfoErieOSVersion
__ HMFoundation: _HMFProductInfoFatsaOSVersion
__ HMFoundation: _HMFProductInfoFerryOSVersion
__ HMFoundation: _HMFProductInfoFortuneOSVersion
__ HMFoundation: _HMFProductInfoFrancisOSVersion
__ HMFoundation: _HMFProductInfoGloryCOSVersion
__ HMFoundation: _HMFProductInfoGloryGOSVersion
__ HMFoundation: _HMFProductInfoGloryOSVersion
__ HMFoundation: _HMFProductInfoGoldenGateOSVersion
__ HMFoundation: _HMFProductInfoGraceBOSVersion
__ HMFoundation: _HMFProductInfoGraceFOSVersion
__ HMFoundation: _HMFProductInfoGraceOSVersion
__ HMFoundation: _HMFProductInfoHopeBOSVersion
__ HMFoundation: _HMFProductInfoHopeCOSVersion
__ HMFoundation: _HMFProductInfoHopeGOSVersion
__ HMFoundation: _HMFProductInfoHopeOSVersion
__ HMFoundation: _HMFProductInfoJazzBOSVersion
__ HMFoundation: _HMFProductInfoJazzFOSVersion
__ HMFoundation: _HMFProductInfoJazzOSVersion
__ HMFoundation: _HMFProductInfoLibertyCOSVersion
__ HMFoundation: _HMFProductInfoLibertyGOSVersion
__ HMFoundation: _HMFProductInfoMonarchOSVersion
__ HMFoundation: _HMFProductInfoPeaceCOSVersion
__ HMFoundation: _HMFProductInfoPeaceGOSVersion
__ HMFoundation: _HMFProductInfoPeaceOSVersion
__ HMFoundation: _HMFProductInfoTigrisOSVersion
__ HMFoundation: _HMFProductInfoTildenOSVersion
__ HMFoundation: _HMFProductInfoTopazOSVersion
__ HMFoundation: _HMFProductInfoUnionOSVersion
__ HMFoundation: _HMFProductInfoWhitetailOSVersion
__ HMFoundation: _HMFProductInfoYagerBOSVersion
__ HMFoundation: _HMFProductInfoYagerFOSVersion
__ HMFoundation: _HMFProductInfoYagerOSVersion
__ HMFoundation: _HMFProductInfoYukonBOSVersion
__ HMFoundation: _HMFProductInfoYukonFOSVersion
__ HMFoundation: _HMFProductInfoYukonOSVersion
__ HMFoundation: _HMFProductInfoYukonPreOSVersion
__ HMFoundation: _HMFProductPlatformToString
__ HMFoundation: _HMFQOSClassFromQualityOfService
__ HMFoundation: _HMFQualityOfServiceCompare
__ HMFoundation: _HMFQualityOfServiceToString
__ HMFoundation: _HMFSystemInfoMigratingUpdatedNotification
__ HMFoundation: _HMFSystemInfoNameNotificationKey
__ HMFoundation: _HMFSystemInfoNameUpdatedNotification
__ HMFoundation: _HMFWiFiManagerCurrentNetworkDidChangeNotification
__ HMFoundation: _OBJC_CLASS_$_HMFActivity
__ HMFoundation: _OBJC_CLASS_$_HMFAssertion
__ HMFoundation: _OBJC_CLASS_$_HMFAttributeDescription
__ HMFoundation: _OBJC_CLASS_$_HMFBlockOperation
__ HMFoundation: _OBJC_CLASS_$_HMFBoolean
__ HMFoundation: _OBJC_CLASS_$_HMFCache
__ HMFoundation: _OBJC_CLASS_$_HMFDumpCategory
__ HMFoundation: _OBJC_CLASS_$_HMFExponentialBackoffTimer
__ HMFoundation: _OBJC_CLASS_$_HMFHTTPClient
__ HMFoundation: _OBJC_CLASS_$_HMFHTTPClientConfiguration
__ HMFoundation: _OBJC_CLASS_$_HMFHTTPRequestHandler
__ HMFoundation: _OBJC_CLASS_$_HMFHTTPServer
__ HMFoundation: _OBJC_CLASS_$_HMFKey
__ HMFoundation: _OBJC_CLASS_$_HMFLocationAuthorization
__ HMFoundation: _OBJC_CLASS_$_HMFLogCategory
__ HMFoundation: _OBJC_CLASS_$_HMFLogEventSessionVoucher
__ HMFoundation: _OBJC_CLASS_$_HMFMACAddress
__ HMFoundation: _OBJC_CLASS_$_HMFMemoryMonitor
__ HMFoundation: _OBJC_CLASS_$_HMFMessage
__ HMFoundation: _OBJC_CLASS_$_HMFMessageDestination
__ HMFoundation: _OBJC_CLASS_$_HMFMessageDispatcher
__ HMFoundation: _OBJC_CLASS_$_HMFMessageFilter
__ HMFoundation: _OBJC_CLASS_$_HMFMessagePolicy
__ HMFoundation: _OBJC_CLASS_$_HMFMessageTransport
__ HMFoundation: _OBJC_CLASS_$_HMFMutableHTTPRequest
__ HMFoundation: _OBJC_CLASS_$_HMFMutableMessage
__ HMFoundation: _OBJC_CLASS_$_HMFNetAddress
__ HMFoundation: _OBJC_CLASS_$_HMFNetManager
__ HMFoundation: _OBJC_CLASS_$_HMFNetMonitor
__ HMFoundation: _OBJC_CLASS_$_HMFNetService
__ HMFoundation: _OBJC_CLASS_$_HMFNetServiceBrowser
__ HMFoundation: _OBJC_CLASS_$_HMFOSTransaction
__ HMFoundation: _OBJC_CLASS_$_HMFObject
__ HMFoundation: _OBJC_CLASS_$_HMFObjectObserver
__ HMFoundation: _OBJC_CLASS_$_HMFOperation
__ HMFoundation: _OBJC_CLASS_$_HMFOperationBudget
__ HMFoundation: _OBJC_CLASS_$_HMFPairingIdentity
__ HMFoundation: _OBJC_CLASS_$_HMFPairingKey
__ HMFoundation: _OBJC_CLASS_$_HMFPowerLogger
__ HMFoundation: _OBJC_CLASS_$_HMFPowerManager
__ HMFoundation: _OBJC_CLASS_$_HMFPreference
__ HMFoundation: _OBJC_CLASS_$_HMFPreferences
__ HMFoundation: _OBJC_CLASS_$_HMFPrivateObjectFormatter
__ HMFoundation: _OBJC_CLASS_$_HMFProcessInfo
__ HMFoundation: _OBJC_CLASS_$_HMFProductInfo
__ HMFoundation: _OBJC_CLASS_$_HMFScheduler
__ HMFoundation: _OBJC_CLASS_$_HMFSoftwareVersion
__ HMFoundation: _OBJC_CLASS_$_HMFStringIndentation
__ HMFoundation: _OBJC_CLASS_$_HMFSystemInfo
__ HMFoundation: _OBJC_CLASS_$_HMFSystemPreference
__ HMFoundation: _OBJC_CLASS_$_HMFTimer
__ HMFoundation: _OBJC_CLASS_$_HMFUnfairLock
__ HMFoundation: _OBJC_CLASS_$_HMFVersion
__ HMFoundation: _OBJC_CLASS_$_HMFWiFiManager
__ HMFoundation: _OBJC_CLASS_$_HMFWiFiNetworkInfo
__ HMFoundation: _OBJC_METACLASS_$_HMFAssertion
__ HMFoundation: _OBJC_METACLASS_$_HMFMessage
__ HMFoundation: _OBJC_METACLASS_$_HMFMessageDestination
__ HMFoundation: _OBJC_METACLASS_$_HMFMessageDispatcher
__ HMFoundation: _OBJC_METACLASS_$_HMFMessageFilter
__ HMFoundation: _OBJC_METACLASS_$_HMFMessagePolicy
__ HMFoundation: _OBJC_METACLASS_$_HMFMessageTransport
__ HMFoundation: _OBJC_METACLASS_$_HMFObject
__ HMFoundation: _OBJC_METACLASS_$_HMFOperation
__ HMFoundation: _OBJC_METACLASS_$_HMFPreference
__ HMFoundation: _OBJC_METACLASS_$_HMFProcessInfo
__ HMFoundation: _OBJC_METACLASS_$_HMFSoftwareVersion
__ HMFoundation: _OBJC_METACLASS_$_HMFTimer
__ HMFoundation: _OBJC_METACLASS_$_HMFVersion
__ HMFoundation: __HMFPreconditionFailure
__ HMFoundation: ___HMFActivityScopeLeave
__ HMFoundation: _isEqualToObject
__ HMFoundation: _kDumpStateAccessoryCategoryKey
__ HMFoundation: _kDumpStateAccessoryKey
__ HMFoundation: _kDumpStateAccessoryProfileKey
__ HMFoundation: _kDumpStateAccessorySetupHashKey
__ HMFoundation: _kDumpStateAccessoryTransportKey
__ HMFoundation: _kDumpStateActionSetKey
__ HMFoundation: _kDumpStateApplicationDataKey
__ HMFoundation: _kDumpStateBridgeAccessoryKey
__ HMFoundation: _kDumpStateBridgedAccessoryKey
__ HMFoundation: _kDumpStateBulletinNotificationGroupCamerasKey
__ HMFoundation: _kDumpStateBulletinNotificationGroupKey
__ HMFoundation: _kDumpStateBulletinNotificationGroupServicesKey
__ HMFoundation: _kDumpStateBulletinNotificationKey
__ HMFoundation: _kDumpStateCharacteristicKey
__ HMFoundation: _kDumpStateCurrentUser
__ HMFoundation: _kDumpStateEventKey
__ HMFoundation: _kDumpStateExecuteOnceKey
__ HMFoundation: _kDumpStateExecuteSessionKey
__ HMFoundation: _kDumpStateHomeDaemonVersionKey
__ HMFoundation: _kDumpStateHomeKey
__ HMFoundation: _kDumpStateHomeManagerKey
__ HMFoundation: _kDumpStateHomeNotificationRegistrationsKey
__ HMFoundation: _kDumpStateIncomingInvitesKey
__ HMFoundation: _kDumpStateInvitesKey
__ HMFoundation: _kDumpStateKeychainKey
__ HMFoundation: _kDumpStateLocationKey
__ HMFoundation: _kDumpStateMetadataKey
__ HMFoundation: _kDumpStateOutgoingInvitesKey
__ HMFoundation: _kDumpStatePendingResponses
__ HMFoundation: _kDumpStatePredicateKey
__ HMFoundation: _kDumpStateRecurrenceKey
__ HMFoundation: _kDumpStateRemovedUserKey
__ HMFoundation: _kDumpStateResidentKey
__ HMFoundation: _kDumpStateRoomKey
__ HMFoundation: _kDumpStateSecondaryAccessoryKey
__ HMFoundation: _kDumpStateServiceGroupKey
__ HMFoundation: _kDumpStateServiceKey
__ HMFoundation: _kDumpStateSharedHomeSourceVersion
__ HMFoundation: _kDumpStateSharedHomeUpdateHandler
__ HMFoundation: _kDumpStateSharedHomeUpdateSession
__ HMFoundation: _kDumpStateStateKey
__ HMFoundation: _kDumpStateSyncManagerKey
__ HMFoundation: _kDumpStateTimerTriggerKey
__ HMFoundation: _kDumpStateTriggerKey
__ HMFoundation: _kDumpStateUserAccessTokenKey
__ HMFoundation: _kDumpStateUserKey
__ HMFoundation: _kDumpStateZoneKey
__ HMFoundation: _randomDataWithLength
__ HMFoundation: _randomUInt32
__ HomeAI: _HMICameraVideoAnalyzerResultCodeAsString
__ HomeAI: _OBJC_CLASS_$_HMICamera
__ HomeAI: _OBJC_CLASS_$_HMICameraActivityZone
__ HomeAI: _OBJC_CLASS_$_HMICameraVideoAnalyzer
__ HomeAI: _OBJC_CLASS_$_HMICameraVideoAnalyzerConfiguration
__ HomeAI: _OBJC_CLASS_$_HMICameraVideoFragment
__ HomeAI: _OBJC_CLASS_$_HMIExternalPersonManager
__ HomeAI: _OBJC_CLASS_$_HMIFaceCrop
__ HomeAI: _OBJC_CLASS_$_HMIFaceDetectorVision
__ HomeAI: _OBJC_CLASS_$_HMIFaceprint
__ HomeAI: _OBJC_CLASS_$_HMIFeedback
__ HomeAI: _OBJC_CLASS_$_HMIHomePersonManager
__ HomeAI: _OBJC_CLASS_$_HMIMutableExternalPersonManagerSettings
__ HomeAI: _OBJC_CLASS_$_HMIMutableHomePersonManagerSettings
__ HomeAI: _OBJC_CLASS_$_HMIPerson
__ HomeAI: _OBJC_CLASS_$_HMIPersonFaceCrop
__ HomeAI: _OBJC_CLASS_$_HMIPoint
__ HomeAI: _OBJC_CLASS_$_HMISystemResourceUsageMonitor
__ HomeAI: _OBJC_CLASS_$_HMIVideoAnalyzerEventFace
__ HomeAI: _OBJC_CLASS_$_HMIVideoAnalyzerEventPerson
__ HomeAI: _OBJC_CLASS_$_HMIVideoAnalyzerEventPet
__ HomeAI: _OBJC_CLASS_$_HMIVideoAnalyzerEventVehicle
__ HomeAI: _OBJC_CLASS_$_HMIVideoFragment
__ HomeKit: _HMAccessControlUserCodingKey
__ HomeKit: _HMAccessoryAddControlTargetsMessageKey
__ HomeKit: _HMAccessoryAllowedHostAddressesCodingKey
__ HomeKit: _HMAccessoryAllowedHostNameCodingKey
__ HomeKit: _HMAccessoryAllowedHostPurposeCodingKey
__ HomeKit: _HMAccessoryAllowedHostUnrestrictedCodingKey
__ HomeKit: _HMAccessoryAllowedHostsCodingKey
__ HomeKit: _HMAccessoryAssociationOptionsCodingKey
__ HomeKit: _HMAccessoryAuditPairingsMessageKey
__ HomeKit: _HMAccessoryCategoryTypeAirConditioner
__ HomeKit: _HMAccessoryCategoryTypeAirDehumidifier
__ HomeKit: _HMAccessoryCategoryTypeAirHeater
__ HomeKit: _HMAccessoryCategoryTypeAirHumidifier
__ HomeKit: _HMAccessoryCategoryTypeAirPort
__ HomeKit: _HMAccessoryCategoryTypeAirPurifier
__ HomeKit: _HMAccessoryCategoryTypeAppleTV
__ HomeKit: _HMAccessoryCategoryTypeDoor
__ HomeKit: _HMAccessoryCategoryTypeDoorLock
__ HomeKit: _HMAccessoryCategoryTypeFan
__ HomeKit: _HMAccessoryCategoryTypeFaucet
__ HomeKit: _HMAccessoryCategoryTypeGarageDoorOpener
__ HomeKit: _HMAccessoryCategoryTypeHomePod
__ HomeKit: _HMAccessoryCategoryTypeIPCamera
__ HomeKit: _HMAccessoryCategoryTypeLightbulb
__ HomeKit: _HMAccessoryCategoryTypeOutlet
__ HomeKit: _HMAccessoryCategoryTypeProgrammableSwitch
__ HomeKit: _HMAccessoryCategoryTypeSecuritySystem
__ HomeKit: _HMAccessoryCategoryTypeSensor
__ HomeKit: _HMAccessoryCategoryTypeShowerHead
__ HomeKit: _HMAccessoryCategoryTypeSpeaker
__ HomeKit: _HMAccessoryCategoryTypeSprinkler
__ HomeKit: _HMAccessoryCategoryTypeSwitch
__ HomeKit: _HMAccessoryCategoryTypeTelevision
__ HomeKit: _HMAccessoryCategoryTypeTelevisionDeprecated
__ HomeKit: _HMAccessoryCategoryTypeTelevisionSetTopBox
__ HomeKit: _HMAccessoryCategoryTypeTelevisionStreamingStick
__ HomeKit: _HMAccessoryCategoryTypeThermostat
__ HomeKit: _HMAccessoryCategoryTypeVideoDoorbell
__ HomeKit: _HMAccessoryCategoryTypeWiFiRouter
__ HomeKit: _HMAccessoryCategoryTypeWindow
__ HomeKit: _HMAccessoryCategoryTypeWindowCovering
__ HomeKit: _HMAccessoryCertificationStatusCodingKey
__ HomeKit: _HMAccessoryConfigureControlTargetsMessage
__ HomeKit: _HMAccessoryConfiguredProtectionGroupUUIDCodingKey
__ HomeKit: _HMAccessoryConnectivityChangedNotification
__ HomeKit: _HMAccessoryConnectivityInfoCodingKey
__ HomeKit: _HMAccessoryControlTargetsCodingKey
__ HomeKit: _HMAccessoryControllableCodingKey
__ HomeKit: _HMAccessoryControllableMessageKey
__ HomeKit: _HMAccessoryControllableUpdatedMessage
__ HomeKit: _HMAccessoryCurrentAccessoryCodingKey
__ HomeKit: _HMAccessoryCurrentNetworkProtectionModeCodingKey
__ HomeKit: _HMAccessoryDeleteSiriHistoryRequestMessage
__ HomeKit: _HMAccessoryDeviceCodingKey
__ HomeKit: _HMAccessoryDiagnosticsMetadataCodingKey
__ HomeKit: _HMAccessoryDiagnosticsTransferRequestMessage
__ HomeKit: _HMAccessoryDiagnosticsTransferSupportCodingKey
__ HomeKit: _HMAccessoryDiagnosticsTransferSupportMessageKey
__ HomeKit: _HMAccessoryDiagnosticsTransferUpdatedMessage
__ HomeKit: _HMAccessoryHasOnboardedForNaturalLightingKey
__ HomeKit: _HMAccessoryListControlTargetsMessageKey
__ HomeKit: _HMAccessoryMultiUserSupportCodingKey
__ HomeKit: _HMAccessoryNetworkAccessViolationCodingKey
__ HomeKit: _HMAccessoryNetworkAccessViolationLastOccurrenceDateCodingKey
__ HomeKit: _HMAccessoryNetworkAccessViolationLastResetDateCodingKey
__ HomeKit: _HMAccessoryNetworkConfigurationRestrictedCodingKey
__ HomeKit: _HMAccessoryNetworkProtectionGroupAddedNotification
__ HomeKit: _HMAccessoryNetworkProtectionGroupCategoryCodingKey
__ HomeKit: _HMAccessoryNetworkProtectionGroupManufacturerCodingKey
__ HomeKit: _HMAccessoryNetworkProtectionGroupMessageKey
__ HomeKit: _HMAccessoryNetworkProtectionGroupProtectionModeCodingKey
__ HomeKit: _HMAccessoryNetworkProtectionGroupProtectionModeMessageKey
__ HomeKit: _HMAccessoryNetworkProtectionGroupProtectionModeUpdateRequest
__ HomeKit: _HMAccessoryNetworkProtectionGroupRemovedNotification
__ HomeKit: _HMAccessoryNetworkProtectionGroupUUIDCodingKey
__ HomeKit: _HMAccessoryNetworkProtectionGroupUUIDMessageKey
__ HomeKit: _HMAccessoryNetworkProtectionModeAsString
__ HomeKit: _HMAccessoryNetworkProtectionSupportCodingKey
__ HomeKit: _HMAccessoryPairingIdentityCodingKey
__ HomeKit: _HMAccessoryPairingIdentityIncludePrivateKeyMessageKey
__ HomeKit: _HMAccessoryPairingIdentityRequestMessage
__ HomeKit: _HMAccessoryProtectionGroupUUIDCodingKey
__ HomeKit: _HMAccessoryReachableTransportsMessageKey
__ HomeKit: _HMAccessoryRemoteLoginCodingKey
__ HomeKit: _HMAccessoryRemoveControlTargetsMessageKey
__ HomeKit: _HMAccessoryResetControlTargetsMessageKey
__ HomeKit: _HMAccessoryRootSettingsCodingKey
__ HomeKit: _HMAccessorySetHasOnboardedForNaturalLightingMessage
__ HomeKit: _HMAccessorySettingAddConstraintMessage
__ HomeKit: _HMAccessorySettingConstraintAddMessageKey
__ HomeKit: _HMAccessorySettingConstraintMessageKey
__ HomeKit: _HMAccessorySettingConstraintRemoveMessageKey
__ HomeKit: _HMAccessorySettingConstraintTypeFromString
__ HomeKit: _HMAccessorySettingConstraintsCodingKey
__ HomeKit: _HMAccessorySettingGroupGroupsCodingKey
__ HomeKit: _HMAccessorySettingGroupIdentifierCodingKey
__ HomeKit: _HMAccessorySettingGroupNameCodingKey
__ HomeKit: _HMAccessorySettingGroupSettingsCodingKey
__ HomeKit: _HMAccessorySettingIdentifierCodingKey
__ HomeKit: _HMAccessorySettingNameCodingKey
__ HomeKit: _HMAccessorySettingPropertiesCodingKey
__ HomeKit: _HMAccessorySettingPropertiesFromString
__ HomeKit: _HMAccessorySettingPropertiesToString
__ HomeKit: _HMAccessorySettingReflectedCodingKey
__ HomeKit: _HMAccessorySettingRemoveConstraintMessage
__ HomeKit: _HMAccessorySettingReplaceConstraintsMessage
__ HomeKit: _HMAccessorySettingTypeCodingKey
__ HomeKit: _HMAccessorySettingTypeFromString
__ HomeKit: _HMAccessorySettingTypeToString
__ HomeKit: _HMAccessorySettingUpdateConstraintsMessage
__ HomeKit: _HMAccessorySettingUpdateValueMessage
__ HomeKit: _HMAccessorySettingValueCodingKey
__ HomeKit: _HMAccessorySettingValueMessageKey
__ HomeKit: _HMAccessorySettingsRootGroupKeyPath
__ HomeKit: _HMAccessorySoftwareUpdateCodingKey
__ HomeKit: _HMAccessorySoftwareVersionCodingKey
__ HomeKit: _HMAccessorySupportsCompanionInitiatedRestartCodingKey
__ HomeKit: _HMAccessorySupportsDoorbellChimeCodingKey
__ HomeKit: _HMAccessorySupportsIdentifyCodingKey
__ HomeKit: _HMAccessorySupportsMediaAccessControlCodingKey
__ HomeKit: _HMAccessorySymptomsHandlerUpdatedMessage
__ HomeKit: _HMAccessoryTargetControlSupportCodingKey
__ HomeKit: _HMAccessoryTargetControlSupportMessageKey
__ HomeKit: _HMAccessoryTargetControlUpdatedMessage
__ HomeKit: _HMAccessoryTargetControllerHardwareSupportCodingKey
__ HomeKit: _HMAccessoryTargetControllerHardwareSupportMessageKey
__ HomeKit: _HMAccessoryTargetControllerSupportCodingKey
__ HomeKit: _HMAccessoryTargetControllerSupportMessageKey
__ HomeKit: _HMAccessoryTargetNetworkProtectionModeCodingKey
__ HomeKit: _HMAccessoryTransportTypesToString
__ HomeKit: _HMAccessoryWiFiCredentialTypeAsString
__ HomeKit: _HMAccessoryWiFiCredentialTypeCodingKey
__ HomeKit: _HMAccessoryWiFiNetworkInfoCodingKey
__ HomeKit: _HMAccessoryWiFiReconfigurationSupportCodingKey
__ HomeKit: _HMAccessorysupportsThirdPartyMusicCodingKey
__ HomeKit: _HMActionSetNameKeyHomeArrival
__ HomeKit: _HMActionSetNameKeyHomeDeparture
__ HomeKit: _HMActionSetNameKeySleep
__ HomeKit: _HMActionSetNameKeyWakeUp
__ HomeKit: _HMActionSetTypeHomeArrival
__ HomeKit: _HMActionSetTypeHomeDeparture
__ HomeKit: _HMActionSetTypeShortcutsComponent
__ HomeKit: _HMActionSetTypeSleep
__ HomeKit: _HMActionSetTypeTriggerOwned
__ HomeKit: _HMActionSetTypeUserDefined
__ HomeKit: _HMActionSetTypeWakeUp
__ HomeKit: _HMActionTypeAsString
__ HomeKit: _HMActiveAssertionAdaptiveMessageKey
__ HomeKit: _HMActiveAssertionMessage
__ HomeKit: _HMActiveAssertionStateMessageKey
__ HomeKit: _HMActivityIdentifierKey
__ HomeKit: _HMActivityNameKey
__ HomeKit: _HMAddAccessoryRequestAccessoryDescriptionCodingKey
__ HomeKit: _HMAddAccessoryRequestAccessoryNameCodingKey
__ HomeKit: _HMAddAccessoryRequestCategoryCodingKey
__ HomeKit: _HMAddAccessoryRequestIdentifierCodingKey
__ HomeKit: _HMAppleTVAccessoriesConfiguredStatusKey
__ HomeKit: _HMAreSnapshotsAllowedForCameraAccessMode
__ HomeKit: _HMAssistantAccessControlAccessoriesCodingKey
__ HomeKit: _HMAssistantAccessControlEnabledCodingKey
__ HomeKit: _HMAssistantAccessControlOptionsCodingKey
__ HomeKit: _HMAssistantAccessControlOptionsToString
__ HomeKit: _HMBulletinCameraClipIDKey
__ HomeKit: _HMBulletinCameraNotificationIDKey
__ HomeKit: _HMBulletinCameraProfileIDKey
__ HomeKit: _HMBulletinCameraSignificantEventUUIDsKey
__ HomeKit: _HMBulletinContextAccessoryIDKey
__ HomeKit: _HMBulletinContextCharacteristicIDKey
__ HomeKit: _HMBulletinContextHomeIDKey
__ HomeKit: _HMBulletinContextHomeNameKey
__ HomeKit: _HMBulletinContextRoomServiceNameKey
__ HomeKit: _HMBulletinContextServiceIDKey
__ HomeKit: _HMBulletinContextTriggerIDKey
__ HomeKit: _HMBulletinContextTriggerNameKey
__ HomeKit: _HMBulletinReasonDoorbellPressed
__ HomeKit: _HMBulletinReasonKey
__ HomeKit: _HMBulletinReasonSignificantEvent
__ HomeKit: _HMCameraAccessModeAsString
__ HomeKit: _HMCameraAudioStreamSettingAsString
__ HomeKit: _HMCameraClipManagerDeleteAllClipsMessage
__ HomeKit: _HMCameraClipManagerDeleteClipMessage
__ HomeKit: _HMCameraClipManagerDidChangeClipsMessage
__ HomeKit: _HMCameraClipManagerDidChangeSignificantEventsMessage
__ HomeKit: _HMCameraClipManagerFetchClipForSignificantEventMessage
__ HomeKit: _HMCameraClipManagerFetchClipMessage
__ HomeKit: _HMCameraClipManagerFetchClipsMessage
__ HomeKit: _HMCameraClipManagerFetchCountOfClipsMessage
__ HomeKit: _HMCameraClipManagerFetchFaceCropDataRepresentationMessage
__ HomeKit: _HMCameraClipManagerFetchFaceCropURLMessage
__ HomeKit: _HMCameraClipManagerFetchHeroFrameDataRepresentationMessage
__ HomeKit: _HMCameraClipManagerFetchHeroFrameURLMessage
__ HomeKit: _HMCameraClipManagerFetchPosterFramesAssetContextMessage
__ HomeKit: _HMCameraClipManagerFetchSignificantEventsMessage
__ HomeKit: _HMCameraClipManagerFetchVideoSegmentsAssetContextMessage
__ HomeKit: _HMCameraClipManagerHandleFaceMisclassificationMessage
__ HomeKit: _HMCameraClipManagerImportClipsMessage
__ HomeKit: _HMCameraClipManagerMessageKeyAssetContext
__ HomeKit: _HMCameraClipManagerMessageKeyClip
__ HomeKit: _HMCameraClipManagerMessageKeyClipImportData
__ HomeKit: _HMCameraClipManagerMessageKeyClipUUID
__ HomeKit: _HMCameraClipManagerMessageKeyClipUUIDs
__ HomeKit: _HMCameraClipManagerMessageKeyCountOfClips
__ HomeKit: _HMCameraClipManagerMessageKeyDataRepresentation
__ HomeKit: _HMCameraClipManagerMessageKeyDateAfter
__ HomeKit: _HMCameraClipManagerMessageKeyDateBefore
__ HomeKit: _HMCameraClipManagerMessageKeyFetchedURL
__ HomeKit: _HMCameraClipManagerMessageKeyLimit
__ HomeKit: _HMCameraClipManagerMessageKeyRemovedClipUUIDs
__ HomeKit: _HMCameraClipManagerMessageKeyRemovedSignificantEventUUIDs
__ HomeKit: _HMCameraClipManagerMessageKeyShouldOrderAscending
__ HomeKit: _HMCameraClipManagerMessageKeySignificantEventUUIDs
__ HomeKit: _HMCameraClipManagerMessageKeySignificantEvents
__ HomeKit: _HMCameraClipManagerMessageKeyUpdatedClips
__ HomeKit: _HMCameraClipManagerMessageKeyUpdatedSignificantEvents
__ HomeKit: _HMCameraClipManagerPerformCloudPullMessage
__ HomeKit: _HMCameraClipManagerSubmitClipsMessage
__ HomeKit: _HMCameraClipManagerSubscribeMessage
__ HomeKit: _HMCameraClipManagerUnsubscribeMessage
__ HomeKit: _HMCameraRecordingEventsExpirationTimeInterval
__ HomeKit: _HMCameraRecordingReachabilityEventManagerDeleteAllEventsMessage
__ HomeKit: _HMCameraRecordingReachabilityEventManagerDidChangeEventsMessage
__ HomeKit: _HMCameraRecordingReachabilityEventManagerFetchCountOfEventsMessage
__ HomeKit: _HMCameraRecordingReachabilityEventManagerFetchEventsMessage
__ HomeKit: _HMCameraRecordingReachabilityEventManagerMessageKeyCountOfEvents
__ HomeKit: _HMCameraRecordingReachabilityEventManagerMessageKeyDateAfter
__ HomeKit: _HMCameraRecordingReachabilityEventManagerMessageKeyDateBefore
__ HomeKit: _HMCameraRecordingReachabilityEventManagerMessageKeyLimit
__ HomeKit: _HMCameraRecordingReachabilityEventManagerMessageKeyRemovedEventsUUIDs
__ HomeKit: _HMCameraRecordingReachabilityEventManagerMessageKeyShouldOrderAscending
__ HomeKit: _HMCameraRecordingReachabilityEventManagerMessageKeyUpdatedEvents
__ HomeKit: _HMCameraRecordingReachabilityEventManagerMessageResponseKeyFetchedEvents
__ HomeKit: _HMCameraRecordingReachabilityEventManagerPerformCloudPullMessage
__ HomeKit: _HMCameraRecordingReachabilityEventManagerSubscribeMessage
__ HomeKit: _HMCameraRecordingReachabilityEventManagerUnsubscribeMessage
__ HomeKit: _HMCameraSignificantEventTypesAsString
__ HomeKit: _HMCameraSignificantEventTypesFromReasons
__ HomeKit: _HMCameraSupportedFeaturesAsString
__ HomeKit: _HMCameraUserSettingsAccessModeChangeNotificationEnabledMessageKey
__ HomeKit: _HMCameraUserSettingsAccessModeIndicatorEnabledMessageKey
__ HomeKit: _HMCameraUserSettingsAccessModeMessageKey
__ HomeKit: _HMCameraUserSettingsActivityZonesIncludedForSignificantEventDetectionMessageKey
__ HomeKit: _HMCameraUserSettingsCodingKey
__ HomeKit: _HMCameraUserSettingsDidUpdateMessage
__ HomeKit: _HMCameraUserSettingsMessageKey
__ HomeKit: _HMCameraUserSettingsNightVisionModeEnabledMessageKey
__ HomeKit: _HMCameraUserSettingsPresenceTypeMessageKey
__ HomeKit: _HMCameraUserSettingsReachabilityEventNotificationEnabledMessageKey
__ HomeKit: _HMCameraUserSettingsRecordingAudioEnabledMessageKey
__ HomeKit: _HMCameraUserSettingsRecordingTriggerMessageKey
__ HomeKit: _HMCameraUserSettingsSnapshotsAllowedMessageKey
__ HomeKit: _HMCameraUserSettingsUpdateAccessModeChangeNotificationEnabledMessage
__ HomeKit: _HMCameraUserSettingsUpdateAccessModeIndicatorEnabledMessage
__ HomeKit: _HMCameraUserSettingsUpdateAccessModeMessage
__ HomeKit: _HMCameraUserSettingsUpdateActivityZonesMessage
__ HomeKit: _HMCameraUserSettingsUpdateActivityZonesMessageKey
__ HomeKit: _HMCameraUserSettingsUpdateNightVisionModeEnabledMessage
__ HomeKit: _HMCameraUserSettingsUpdateReachabilityEventNotificationEnabledMessage
__ HomeKit: _HMCameraUserSettingsUpdateRecordingAudioEnabledMessage
__ HomeKit: _HMCameraUserSettingsUpdateRecordingTriggerEventsMessage
__ HomeKit: _HMCameraUserSettingsUpdateSnapshotsAllowedMessage
__ HomeKit: _HMCharacteristicMetadataFormatBool
__ HomeKit: _HMCharacteristicMetadataFormatFloat
__ HomeKit: _HMCharacteristicMetadataFormatInt
__ HomeKit: _HMCharacteristicMetadataFormatString
__ HomeKit: _HMCharacteristicMetadataFormatUInt16
__ HomeKit: _HMCharacteristicMetadataFormatUInt32
__ HomeKit: _HMCharacteristicMetadataFormatUInt64
__ HomeKit: _HMCharacteristicMetadataFormatUInt8
__ HomeKit: _HMCharacteristicMetadataUnitsCelsius
__ HomeKit: _HMCharacteristicMetadataUnitsFahrenheit
__ HomeKit: _HMCharacteristicTypeActive
__ HomeKit: _HMCharacteristicTypeActiveIdentifier
__ HomeKit: _HMCharacteristicTypeBrightness
__ HomeKit: _HMCharacteristicTypeButtonEvent
__ HomeKit: _HMCharacteristicTypeColorTemperature
__ HomeKit: _HMCharacteristicTypeConfiguredName
__ HomeKit: _HMCharacteristicTypeCurrentMediaState
__ HomeKit: _HMCharacteristicTypeFirmwareVersion
__ HomeKit: _HMCharacteristicTypeHue
__ HomeKit: _HMCharacteristicTypeIdentifier
__ HomeKit: _HMCharacteristicTypeInputEvent
__ HomeKit: _HMCharacteristicTypeManufacturer
__ HomeKit: _HMCharacteristicTypeModel
__ HomeKit: _HMCharacteristicTypeMotionDetected
__ HomeKit: _HMCharacteristicTypeMute
__ HomeKit: _HMCharacteristicTypeName
__ HomeKit: _HMCharacteristicTypeNightVision
__ HomeKit: _HMCharacteristicTypeSaturation
__ HomeKit: _HMCharacteristicTypeSelectedAudioStreamConfiguration
__ HomeKit: _HMCharacteristicTypeSelectedCameraRecordingConfiguration
__ HomeKit: _HMCharacteristicTypeSerialNumber
__ HomeKit: _HMCharacteristicTypeSleepDiscoveryMode
__ HomeKit: _HMCharacteristicTypeSupportedAudioRecordingConfiguration
__ HomeKit: _HMCharacteristicTypeSupportedAudioStreamConfiguration
__ HomeKit: _HMCharacteristicTypeSupportedCameraRecordingConfiguration
__ HomeKit: _HMCharacteristicTypeSupportedTargetConfiguration
__ HomeKit: _HMCharacteristicTypeSupportedVideoRecordingConfiguration
__ HomeKit: _HMCharacteristicTypeTargetDoorState
__ HomeKit: _HMCharacteristicTypeTargetList
__ HomeKit: _HMCharacteristicTypeTargetMediaState
__ HomeKit: _HMCharacteristicTypeVersion
__ HomeKit: _HMCharacteristicTypeVolume
__ HomeKit: _HMDailyRotatedUUID
__ HomeKit: _HMDeviceIDSDestinationStringCodingKey
__ HomeKit: _HMDeviceIDSIdentifierCodingKey
__ HomeKit: _HMDeviceRPDeviceIRKCodingKey
__ HomeKit: _HMDeviceSetupFollowupIdentifier
__ HomeKit: _HMDeviceSetupSessionCloseMessage
__ HomeKit: _HMDeviceSetupSessionDataMessageKey
__ HomeKit: _HMDeviceSetupSessionErrorMessageKey
__ HomeKit: _HMDeviceSetupSessionIdentifierMessageKey
__ HomeKit: _HMDeviceSetupSessionOpenMessage
__ HomeKit: _HMDeviceSetupSessionReceiveDataMessage
__ HomeKit: _HMDeviceSetupSessionRoleMessageKey
__ HomeKit: _HMDeviceSetupSessionUserInfoMessageKey
__ HomeKit: _HMDoorbellChimeEnabledPayloadKey
__ HomeKit: _HMEventTriggerActivationStateAsString
__ HomeKit: _HMFaceCropEntireImageFaceBoundingBox
__ HomeKit: _HMHomeAccessoryErrorMessage
__ HomeKit: _HMHomeAccessoryNetworkProtectionGroupsCodingKey
__ HomeKit: _HMHomeAddAccessoryRequestDumpStateKey
__ HomeKit: _HMHomeAddNetworkRouterEnabledCodingKey
__ HomeKit: _HMHomeAddNetworkRouterEnabledMessageKey
__ HomeKit: _HMHomeAutomaticSoftwareUpdateEnabledCodingKey
__ HomeKit: _HMHomeConfirmResidentRequestKey
__ HomeKit: _HMHomeDoorbellChimeEnabledRequestKey
__ HomeKit: _HMHomeDoorbellChimeValueCodingKey
__ HomeKit: _HMHomeEnableMultiUserRequestKey
__ HomeKit: _HMHomeErrorMessageKey
__ HomeKit: _HMHomeExecuteActionsActionInfoKey
__ HomeKit: _HMHomeExecuteActionsRequestKey
__ HomeKit: _HMHomeFetchLastModifiedServiceOfTypeMessage
__ HomeKit: _HMHomeHasAnyUserAcknowledgedCameraRecordingOnboardingChangeNotificationKey
__ HomeKit: _HMHomeHasAnyUserAcknowledgedCameraRecordingOnboardingValueCodingKey
__ HomeKit: _HMHomeHubStateCodingKey
__ HomeKit: _HMHomeHubStateMessageKey
__ HomeKit: _HMHomeHubStateUpdatedMessage
__ HomeKit: _HMHomeInternalSetMinHomeKitVersionForAccessoryNetworkProtectionChangeRequest
__ HomeKit: _HMHomeInternalSetMiniumumNetworkRouterSupportHomeKitVersionRequest
__ HomeKit: _HMHomeLocationStatusUpdateNotificationKey
__ HomeKit: _HMHomeLocationStatusValueCodingKey
__ HomeKit: _HMHomeLocationStatusValueKey
__ HomeKit: _HMHomeManagerAddRequestKey
__ HomeKit: _HMHomeManagerAppleTVAccessoryAddedNotification
__ HomeKit: _HMHomeManagerAreAnyAccessoriesConfigured
__ HomeKit: _HMHomeManagerAreAnyAppleTVAccessoriesConfigured
__ HomeKit: _HMHomeManagerAreAnySpeakersConfigured
__ HomeKit: _HMHomeManagerAreAnyTelevisionAccessoriesConfigured
__ HomeKit: _HMHomeManagerCheckForAddAccessoryRequestsMessageKey
__ HomeKit: _HMHomeManagerConnectivityInfoRequestMessage
__ HomeKit: _HMHomeManagerConvertFirewallRulesMessageKey
__ HomeKit: _HMHomeManagerDataSyncStateMessageKey
__ HomeKit: _HMHomeManagerDestinationMessageKey
__ HomeKit: _HMHomeManagerDumpStateDaemonMemoryUsageMessageKey
__ HomeKit: _HMHomeManagerDumpStateMessage
__ HomeKit: _HMHomeManagerDumpStateXPCMessagesCountersMessageKey
__ HomeKit: _HMHomeManagerFetchAddAccessoryRequestsMessageKey
__ HomeKit: _HMHomeManagerGenerationCounterNotification
__ HomeKit: _HMHomeManagerHomePodsConfiguredChangedNotification
__ HomeKit: _HMHomeManagerIdmsAccountUsernameModified
__ HomeKit: _HMHomeManagerJSONDataRequestMessageKey
__ HomeKit: _HMHomeManagerJSONToTLVFileDataMessageKey
__ HomeKit: _HMHomeManagerMediaAccessoryControlRequestMessage
__ HomeKit: _HMHomeManagerMonitorDeviceMessageKey
__ HomeKit: _HMHomeManagerNameValidationOptionsMessageKey
__ HomeKit: _HMHomeManagerOptionsMessageKey
__ HomeKit: _HMHomeManagerOptionsShortDescription
__ HomeKit: _HMHomeManagerOptionsToString
__ HomeKit: _HMHomeManagerPairingIdentityRequestMessage
__ HomeKit: _HMHomeManagerPendingRequestsMessageKey
__ HomeKit: _HMHomeManagerPreferencesChangedNotification
__ HomeKit: _HMHomeManagerQueryHomeNamepaceMessage
__ HomeKit: _HMHomeManagerQueryMetadataMessage
__ HomeKit: _HMHomeManagerQueryNameMessageKey
__ HomeKit: _HMHomeManagerQueryVersionMessage
__ HomeKit: _HMHomeManagerRemoveAccountRequestMessage
__ HomeKit: _HMHomeManagerResolveAccountRequestMessage
__ HomeKit: _HMHomeManagerRuntimeStateUpdateNotificationMessage
__ HomeKit: _HMHomeManagerRuntimeStateUpdateRequestMessage
__ HomeKit: _HMHomeManagerRuntimeStateUpdateRequestMessageKey
__ HomeKit: _HMHomeManagerSecurePingMessageKey
__ HomeKit: _HMHomeManagerSetMetadataMessage
__ HomeKit: _HMHomeManagerShouldFetchMessageKey
__ HomeKit: _HMHomeManagerSpeakersConfiguredChangedNotification
__ HomeKit: _HMHomeManagerStatusMessageKey
__ HomeKit: _HMHomeManagerStatusUpdatedMessage
__ HomeKit: _HMHomeManagerTelevisionAccessoryAddedNotification
__ HomeKit: _HMHomeMediaMinimumUserPrivilegeCodingKey
__ HomeKit: _HMHomeMediaPasswordCodingKey
__ HomeKit: _HMHomeMediaPasswordMessageKey
__ HomeKit: _HMHomeMediaPeerToPeerEnabledCodingKey
__ HomeKit: _HMHomeMultiUserEnabledChangeNotificationKey
__ HomeKit: _HMHomeMultiUserEnabledValueCodingKey
__ HomeKit: _HMHomeNetworkProtectionModeCodingKey
__ HomeKit: _HMHomeNetworkProtectionModeUpdatedNotification
__ HomeKit: _HMHomeNetworkRouterSupportDisableReasonCodingKey
__ HomeKit: _HMHomeNetworkRouterSupportDisableReasonMessageKey
__ HomeKit: _HMHomeNetworkRouterSupportDisableReasonUpdatedNotification
__ HomeKit: _HMHomePersonManagerSettingsCodingKey
__ HomeKit: _HMHomePersonManagerSettingsMessageKey
__ HomeKit: _HMHomePersonManagerUpdateSettingsMessage
__ HomeKit: _HMHomePodsConfiguredStatusKey
__ HomeKit: _HMHomeReplacedAccessoryUUIDMessageKey
__ HomeKit: _HMHomeResidentDevicesListMessageKey
__ HomeKit: _HMHomeSetHasAnyUserAcknowledgedCameraRecordingOnboardingRequestKey
__ HomeKit: _HMHomeUpdateAutomaticSoftwareUpdateMessage
__ HomeKit: _HMHomeUpdateMediaPasswordMessage
__ HomeKit: _HMHomeUpdateMediaPeerToPeerEnabledMessage
__ HomeKit: _HMHomeUpdateMinimumMediaUserPrivilegeMessage
__ HomeKit: _HMHomeUpdateNetworkProtectionModeRequest
__ HomeKit: _HMHomeUpdatePersonManagerSettingsMessage
__ HomeKit: _HMHomeUserConsentForAccessoryReplacementRequestKey
__ HomeKit: _HMHomeUserConsentResponseForAccessoryMessageKey
__ HomeKit: _HMIntentOutcomeFailure
__ HomeKit: _HMIntentOutcomeInProgress
__ HomeKit: _HMIsMotionDetectionAllowedForCameraAccessMode
__ HomeKit: _HMIsRecordingAllowedForCameraAccessMode
__ HomeKit: _HMIsSignificantEventDetectionAllowedForCameraAccessMode
__ HomeKit: _HMIsStreamingAllowedForCameraAccessMode
__ HomeKit: _HMLightProfileBrightnessMessageKey
__ HomeKit: _HMLightProfileColorTemperatureMessageKey
__ HomeKit: _HMLightProfileFetchNaturalLightColorTemperatureForBrightnessMessage
__ HomeKit: _HMLightProfileFetchSettingsMessage
__ HomeKit: _HMLightProfileNaturalLightingEnabledKey
__ HomeKit: _HMLightProfileSetNaturalLightingEnabledMessage
__ HomeKit: _HMLightProfileSetNaturalLightingEnabledMessageKey
__ HomeKit: _HMLightProfileSetNaturalLightingEnabledShouldRetryOnFailureMessageKey
__ HomeKit: _HMLightProfileSettingsCodingKey
__ HomeKit: _HMLightProfileSettingsDidUpdateMessage
__ HomeKit: _HMLightProfileUUIDCodingKey
__ HomeKit: _HMLogEventSessionRootUUIDKey
__ HomeKit: _HMLogEventSessionServiceNameKey
__ HomeKit: _HMMediaPlaybackActionPlaybackArchiveCodingKey
__ HomeKit: _HMMediaPlaybackActionPlaybackArchiveMessageKey
__ HomeKit: _HMMediaPlaybackActionProfilesCodingKey
__ HomeKit: _HMMediaPlaybackActionProfilesMessageKey
__ HomeKit: _HMMediaPlaybackActionStateCodingKey
__ HomeKit: _HMMediaPlaybackActionStateMessageKey
__ HomeKit: _HMMediaPlaybackActionVolumeCodingKey
__ HomeKit: _HMMediaPlaybackActionVolumeMessageKey
__ HomeKit: _HMMediaProfileCapabilitiesCodingKey
__ HomeKit: _HMMediaProfileRouteUIDCodingKey
__ HomeKit: _HMMediaProfileSessionCodingKey
__ HomeKit: _HMMediaProfileSessionUUIDCodingKey
__ HomeKit: _HMMediaSessionAudioControlMutedCodingKey
__ HomeKit: _HMMediaSessionAudioControlMutedMessageKey
__ HomeKit: _HMMediaSessionAudioControlUpdatedMessage
__ HomeKit: _HMMediaSessionAudioControlVolumeCodingKey
__ HomeKit: _HMMediaSessionAudioControlVolumeMessageKey
__ HomeKit: _HMMediaSessionIdentifierKey
__ HomeKit: _HMMediaSessionMediaUniqueIdentifierCodingKey
__ HomeKit: _HMMediaSessionMediaUniqueIdentifierMessageKey
__ HomeKit: _HMMediaSessionMutedMessageKey
__ HomeKit: _HMMediaSessionPlaybackStateCodingKey
__ HomeKit: _HMMediaSessionPlaybackStateMessageKey
__ HomeKit: _HMMediaSessionPlaybackUpdatedMessage
__ HomeKit: _HMMediaSessionPropertyListMessageKey
__ HomeKit: _HMMediaSessionRefreshPlaybackMessage
__ HomeKit: _HMMediaSessionRepeatStateCodingKey
__ HomeKit: _HMMediaSessionRepeatStateMessageKey
__ HomeKit: _HMMediaSessionRequestMessageKey
__ HomeKit: _HMMediaSessionRouteUIDCodingKey
__ HomeKit: _HMMediaSessionSetAudioControlMessage
__ HomeKit: _HMMediaSessionSetPlaybackMessage
__ HomeKit: _HMMediaSessionShuffleStateCodingKey
__ HomeKit: _HMMediaSessionShuffleStateMessageKey
__ HomeKit: _HMMediaSessionUUIDMessageKey
__ HomeKit: _HMMediaSessionVolumeMessageKey
__ HomeKit: _HMMediaSystemRoleTypeAsString
__ HomeKit: _HMNetworkConfigurationProfileAccessViolationMessageKey
__ HomeKit: _HMNetworkConfigurationProfileAccessViolationUpdatedNotification
__ HomeKit: _HMNetworkConfigurationProfileAllowedHostsMessageKey
__ HomeKit: _HMNetworkConfigurationProfileHostsUpdatedNotification
__ HomeKit: _HMNetworkConfigurationProfilePreviewAllowedHostsRequest
__ HomeKit: _HMNetworkConfigurationProfileWiFiCredentialTypeMessageKey
__ HomeKit: _HMNetworkConfigurationProfileWiFiReconfigurationRequest
__ HomeKit: _HMNetworkConfigurationProfileWiFiReconfigurationSupportMessageKey
__ HomeKit: _HMNetworkConfigurationProfileWiFiReconfigurationUpdatedNotification
__ HomeKit: _HMNetworkConfigurationProfileWiFiRotateCredentialMessageKey
__ HomeKit: _HMNetworkProtectionModeAsString
__ HomeKit: _HMNetworkRouterFirewallRuleManagerAddOverridesDataKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerAddOverridesMessageKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerAddOverridesReplaceKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsListOnlyKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsMessageKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsProductGroupKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsProductNumberKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsRawOutputKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsResponseKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpCloudRecordsVerifySignaturesKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpLocalRulesFirmwareVersionKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpLocalRulesIgnoreOverridesKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpLocalRulesMessageKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpLocalRulesProductGroupKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpLocalRulesProductNumberKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpLocalRulesRawOutputKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpLocalRulesResponseKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataFirmwareVersionKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataIgnoreOverridesKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataMessageKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataProductGroupKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataProductNumberKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataRawOutputKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerDumpPairedMetadataResponseKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerFetchCloudChangesForceChangeNotificationsKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerFetchCloudChangesMessageKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerRemoveLocalRulesMessageKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerRemoveOverridesMessageKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerRemoveOverridesProductGroupKey
__ HomeKit: _HMNetworkRouterFirewallRuleManagerRemoveOverridesProductNumberKey
__ HomeKit: _HMNetworkRouterProfileIsSatelliteCodingKey
__ HomeKit: _HMNetworkRouterProfileNetworkStatusCodingKey
__ HomeKit: _HMNetworkRouterProfileNetworkStatusMessageKey
__ HomeKit: _HMNetworkRouterProfileNetworkStatusUpdatedNotification
__ HomeKit: _HMNetworkRouterProfileSatelliteProfilesCodingKey
__ HomeKit: _HMNetworkRouterProfileSatelliteProfilesUpdatedNotification
__ HomeKit: _HMNetworkRouterSatelliteProfileIdentifiersMessageKey
__ HomeKit: _HMNetworkRouterSupportDisableReasonAsString
__ HomeKit: _HMPBMetadataCategoryReadFrom
__ HomeKit: _HMPBMetadataCharacteristicReadFrom
__ HomeKit: _HMPBMetadataServiceReadFrom
__ HomeKit: _HMPerformTCCChecks
__ HomeKit: _HMPersonManagerAddOrUpdateFaceCropsMessage
__ HomeKit: _HMPersonManagerAddOrUpdateFaceprintsMessage
__ HomeKit: _HMPersonManagerAddOrUpdatePersonsMessage
__ HomeKit: _HMPersonManagerAssociateFaceCropsMessage
__ HomeKit: _HMPersonManagerDidChangePersonDataMessage
__ HomeKit: _HMPersonManagerDidUpdateSettingsMessage
__ HomeKit: _HMPersonManagerDisassociateFaceCropsMessage
__ HomeKit: _HMPersonManagerFetchFaceCropsMessage
__ HomeKit: _HMPersonManagerFetchFaceprintsMessage
__ HomeKit: _HMPersonManagerFetchPersonFaceCropsMessage
__ HomeKit: _HMPersonManagerFetchPersonsMessage
__ HomeKit: _HMPersonManagerFetchSettingsMessage
__ HomeKit: _HMPersonManagerFetchUnassociatedFaceCropsMessage
__ HomeKit: _HMPersonManagerMessageKeyFaceCropUUIDs
__ HomeKit: _HMPersonManagerMessageKeyFaceCrops
__ HomeKit: _HMPersonManagerMessageKeyFaceprintUUIDs
__ HomeKit: _HMPersonManagerMessageKeyFaceprints
__ HomeKit: _HMPersonManagerMessageKeyPersonUUIDs
__ HomeKit: _HMPersonManagerMessageKeyPersons
__ HomeKit: _HMPersonManagerMessageKeyRemovedFaceCropUUIDs
__ HomeKit: _HMPersonManagerMessageKeyRemovedFaceprintUUIDs
__ HomeKit: _HMPersonManagerMessageKeyRemovedPersonUUIDs
__ HomeKit: _HMPersonManagerMessageKeySettings
__ HomeKit: _HMPersonManagerMessageKeyUpdatedFaceprints
__ HomeKit: _HMPersonManagerMessageKeyUpdatedPersonFaceCrops
__ HomeKit: _HMPersonManagerMessageKeyUpdatedPersons
__ HomeKit: _HMPersonManagerMessageKeyUpdatedUnassociatedFaceCrops
__ HomeKit: _HMPersonManagerPerformCloudPullMessage
__ HomeKit: _HMPersonManagerRemoveFaceCropsMessage
__ HomeKit: _HMPersonManagerRemoveFaceprintsMessage
__ HomeKit: _HMPersonManagerRemovePersonsMessage
__ HomeKit: _HMPersonManagerSubscribeMessage
__ HomeKit: _HMPersonManagerUnsubscribeMessage
__ HomeKit: _HMPersonSettingsManagerClassificationNotificationsEnabledKey
__ HomeKit: _HMPersonSettingsManagerFetchClassificationNotificationsEnabledForPersonMessage
__ HomeKit: _HMPersonSettingsManagerPersonUUIDKey
__ HomeKit: _HMPersonSettingsManagerSetClassificationNotificationsEnabledForPersonMessage
__ HomeKit: _HMPhotosPersonManagerUpdateSettingsMessage
__ HomeKit: _HMPresenceEventTypeAsString
__ HomeKit: _HMPresenceTypeAnyUserAtHome
__ HomeKit: _HMPresenceTypeCurrentUserAtHome
__ HomeKit: _HMPresenceTypeCurrentUserNotAtHome
__ HomeKit: _HMPresenceTypeNoUserAtHome
__ HomeKit: _HMPresenceTypeUsersAtHome
__ HomeKit: _HMPresenceTypeUsersNotAtHome
__ HomeKit: _HMPrincipalClassKey
__ HomeKit: _HMProcessNameKey
__ HomeKit: _HMRemoteLoginHandlerUpdateLoggedInAccountMessage
__ HomeKit: _HMResidentDeviceCapabilitiesMessageKey
__ HomeKit: _HMResidentDeviceDeviceCodingKey
__ HomeKit: _HMResidentDeviceEnabledMessageKey
__ HomeKit: _HMResidentDeviceStatusMessageKey
__ HomeKit: _HMServiceLastKnownOperatingStateAbnormalReasonsCodingKey
__ HomeKit: _HMServiceLastKnownOperatingStateCodingKey
__ HomeKit: _HMServiceLastKnownSleepDiscoveryModeCodingKey
__ HomeKit: _HMServiceMediaSourceDisplayOrderCodingKey
__ HomeKit: _HMServiceMediaSourceDisplayOrderModifiableCodingKey
__ HomeKit: _HMServiceMediaSourceIdentifierCodingKey
__ HomeKit: _HMServiceMediaSourceIdentifierMessageKey
__ HomeKit: _HMServiceMediaSourceIdentifierUpdatedNotification
__ HomeKit: _HMServiceNameModifiableCodingKey
__ HomeKit: _HMServiceSubtypeGenericValve
__ HomeKit: _HMServiceSubtypeIrrigationValve
__ HomeKit: _HMServiceSubtypeShowerheadValve
__ HomeKit: _HMServiceSubtypeUnknown
__ HomeKit: _HMServiceSubtypeWaterFaucetValve
__ HomeKit: _HMServiceTypeAccessoryInformation
__ HomeKit: _HMServiceTypeAirPurifier
__ HomeKit: _HMServiceTypeAirQualitySensor
__ HomeKit: _HMServiceTypeBattery
__ HomeKit: _HMServiceTypeCameraControl
__ HomeKit: _HMServiceTypeCameraRTPStreamManagement
__ HomeKit: _HMServiceTypeCameraRecordingManagement
__ HomeKit: _HMServiceTypeCarbonDioxideSensor
__ HomeKit: _HMServiceTypeCarbonMonoxideSensor
__ HomeKit: _HMServiceTypeContactSensor
__ HomeKit: _HMServiceTypeDoor
__ HomeKit: _HMServiceTypeDoorbell
__ HomeKit: _HMServiceTypeFan
__ HomeKit: _HMServiceTypeFaucet
__ HomeKit: _HMServiceTypeGarageDoorOpener
__ HomeKit: _HMServiceTypeHeaterCooler
__ HomeKit: _HMServiceTypeHumidifierDehumidifier
__ HomeKit: _HMServiceTypeHumiditySensor
__ HomeKit: _HMServiceTypeInputSource
__ HomeKit: _HMServiceTypeIrrigationSystem
__ HomeKit: _HMServiceTypeLeakSensor
__ HomeKit: _HMServiceTypeLightSensor
__ HomeKit: _HMServiceTypeLightbulb
__ HomeKit: _HMServiceTypeLockMechanism
__ HomeKit: _HMServiceTypeMicrophone
__ HomeKit: _HMServiceTypeMotionSensor
__ HomeKit: _HMServiceTypeOccupancySensor
__ HomeKit: _HMServiceTypeOutlet
__ HomeKit: _HMServiceTypeSecuritySystem
__ HomeKit: _HMServiceTypeSmokeSensor
__ HomeKit: _HMServiceTypeSpeaker
__ HomeKit: _HMServiceTypeStatelessProgrammableSwitch
__ HomeKit: _HMServiceTypeSwitch
__ HomeKit: _HMServiceTypeTargetControl
__ HomeKit: _HMServiceTypeTargetControlManagement
__ HomeKit: _HMServiceTypeTelevision
__ HomeKit: _HMServiceTypeTemperatureSensor
__ HomeKit: _HMServiceTypeThermostat
__ HomeKit: _HMServiceTypeValve
__ HomeKit: _HMServiceTypeVentilationFan
__ HomeKit: _HMServiceTypeWindow
__ HomeKit: _HMServiceTypeWindowCovering
__ HomeKit: _HMSettingConstraintIdentifierCodingKey
__ HomeKit: _HMSettingConstraintTypeCodingKey
__ HomeKit: _HMSettingConstraintTypeToString
__ HomeKit: _HMSettingConstraintValueCodingKey
__ HomeKit: _HMSettingUpdateValueMessage
__ HomeKit: _HMSettingsContainerSettingsInitializedKey
__ HomeKit: _HMSetupAccessoryProgressAsString
__ HomeKit: _HMSoftwareUpdateControllerFetchMessage
__ HomeKit: _HMSoftwareUpdateControllerStartUpdateMessage
__ HomeKit: _HMSoftwareUpdateControllerUpdateMessageKey
__ HomeKit: _HMSoftwareUpdateDocumentationCodingKey
__ HomeKit: _HMSoftwareUpdateDocumentationMessageKey
__ HomeKit: _HMSoftwareUpdateDocumentationMetadataCodingKey
__ HomeKit: _HMSoftwareUpdateDocumentationMetadataMessageKey
__ HomeKit: _HMSoftwareUpdateDocumentationUpdatedMessage
__ HomeKit: _HMSoftwareUpdateDownloadSizeCodingKey
__ HomeKit: _HMSoftwareUpdateIdentifierCodingKey
__ HomeKit: _HMSoftwareUpdateInstallDurationCodingKey
__ HomeKit: _HMSoftwareUpdateManagerFetchMessage
__ HomeKit: _HMSoftwareUpdateManagerIdentifierMessageKey
__ HomeKit: _HMSoftwareUpdateManagerStartMessage
__ HomeKit: _HMSoftwareUpdateManagerStartUpdateMessage
__ HomeKit: _HMSoftwareUpdateManagerStopMessage
__ HomeKit: _HMSoftwareUpdateManagerTargetIdentifierString
__ HomeKit: _HMSoftwareUpdateManagerUpdateAvailableUpdateMessage
__ HomeKit: _HMSoftwareUpdateManagerUpdateMessageKey
__ HomeKit: _HMSoftwareUpdateRequestDocumentationMessage
__ HomeKit: _HMSoftwareUpdateStateCodingKey
__ HomeKit: _HMSoftwareUpdateStateMessageKey
__ HomeKit: _HMSoftwareUpdateStateToString
__ HomeKit: _HMSoftwareUpdateUpdateDocumentationMetadataMessage
__ HomeKit: _HMSoftwareUpdateUpdateStateMessage
__ HomeKit: _HMSoftwareUpdateVersionCodingKey
__ HomeKit: _HMStringFromCameraSignificantEventConfidenceLevel
__ HomeKit: _HMStringFromCameraSignificantEventReason
__ HomeKit: _HMStringFromHomeLocation
__ HomeKit: _HMSupportedStereoPairVersionsCodingKey
__ HomeKit: _HMSymptomsHandlerCodingKey
__ HomeKit: _HMSymptomsHandlerFixErrorMessage
__ HomeKit: _HMSymptomsHandlerSFDeviceIdentifierCodingKey
__ HomeKit: _HMSymptomsHandlerSFDeviceIdentifierMessageKey
__ HomeKit: _HMSymptomsHandlerSFDeviceIdentifierUpdatedMessage
__ HomeKit: _HMSymptomsHandlerSymptomsUpdatedMessage
__ HomeKit: _HMTelevisionAccessoriesConfiguredStatusKey
__ HomeKit: _HMTelevisionProfileSourceDisplayOrderMessageKey
__ HomeKit: _HMTelevisionProfileSourceDisplayOrderUpdateRequest
__ HomeKit: _HMTelevisionProfileSourceDisplayOrderUpdatedNotification
__ HomeKit: _HMUserActionPredictionAddOrUpdateMessage
__ HomeKit: _HMUserActionPredictionControllerSubscribeMessage
__ HomeKit: _HMUserActionPredictionControllerUnsubscribeMessage
__ HomeKit: _HMUserActionPredictionControllerUpdatePredictionsMessage
__ HomeKit: _HMUserActionPredictionMessageKeyPredictionsLimit
__ HomeKit: _HMUserActionPredictionMessageKeySubscriberUUID
__ HomeKit: _HMUserActionPredictionMessageKeyUpdatedPredictions
__ HomeKit: _HMUserActionPredictionRemoveAllMessage
__ HomeKit: _HMUserActionPredictionRemoveMessage
__ HomeKit: _HMUserActionPredictionsCodingKey
__ HomeKit: _HMUserAssistantAccessControlAccessoryIDsMessageKey
__ HomeKit: _HMUserAssistantAccessControlCodingKey
__ HomeKit: _HMUserAssistantAccessControlMessageKey
__ HomeKit: _HMUserAssistantAccessControlUpdateMessage
__ HomeKit: _HMUserCameraAccessLevelAsString
__ HomeKit: _HMUserCloudShareManagerAccountEncodedClientInfoKey
__ HomeKit: _HMUserCloudShareManagerContainerDidAcceptCodingKey
__ HomeKit: _HMUserCloudShareManagerContainerIDsCodingKey
__ HomeKit: _HMUserCloudShareManagerDidReceiveRepairMessage
__ HomeKit: _HMUserCloudShareManagerDidReceiveShareMessage
__ HomeKit: _HMUserCloudShareManagerRegisterMessage
__ HomeKit: _HMUserCloudShareManagerRepairWakePrefix
__ HomeKit: _HMUserCloudShareManagerTargetIdentifierUUIDString
__ HomeKit: _HMUserCloudShareManagerWakePrefix
__ HomeKit: _HMUserCloudShareMultiUserStatusChangedNotification
__ HomeKit: _HMUserDefaultCamerasAccessLevel
__ HomeKit: _HMUserIsRecordingAllowedWithCameraAccessLevel
__ HomeKit: _HMUserIsStreamingAllowedWithCameraAccessLevel
__ HomeKit: _HMUserIsValidCameraAccessLevel
__ HomeKit: _HMUserMediaContentProfileAccessControlAccessoriesCodingKey
__ HomeKit: _HMUserMediaContentProfileAccessControlAccessoryIDsMessageKey
__ HomeKit: _HMUserMediaContentProfileAccessControlUpdateMessage
__ HomeKit: _HMUserNeedsMultiUserItunesRepairCodingKey
__ HomeKit: _HMUserNeedsMultiUseriTunesRepairMessage
__ HomeKit: _HMUserNotificationContentActionURLKey
__ HomeKit: _HMUserPairingIdentityCodingKey
__ HomeKit: _HMUserPairingIdentityRequestMessage
__ HomeKit: _HMUserPhotosPersonManagerSettingsCodingKey
__ HomeKit: _HMUserPhotosPersonManagerSettingsMessageKey
__ HomeKit: _HMUserPrivateSettingsCodingKey
__ HomeKit: _HMUserPrivilegeToString
__ HomeKit: _HMUserSenderCorrelationIdentifierCodingKey
__ HomeKit: _HMUserShareClientInfoCodingKey
__ HomeKit: _HMUserShareClientPayloadRequestMessage
__ HomeKit: _HMUserShareContainerIDCodingKey
__ HomeKit: _HMUserShareFromUserCodingKey
__ HomeKit: _HMUserShareHomeCodingKey
__ HomeKit: _HMUserShareLookupInfoKey
__ HomeKit: _HMUserShareLookupRequestMessage
__ HomeKit: _HMUserShareRepairInfoMessageKey
__ HomeKit: _HMUserShareRepairRequestMessage
__ HomeKit: _HMUserShareToUserCodingKey
__ HomeKit: _HMUserShareTokenCodingKey
__ HomeKit: _HMUserShareURLCodingKey
__ HomeKit: _HMUserSharedSettingsCodingKey
__ HomeKit: _HMUserUpdatePhotosPersonManagerSettingsMessage
__ HomeKit: _HMWorkflowDataKey
__ HomeKit: _HMXPCMachServiceName
__ HomeKit: _OBJC_CLASS_$_HMAccessoryCategory
__ HomeKit: _OBJC_CLASS_$_HMAccessoryCollectionSettingItem
__ HomeKit: _OBJC_CLASS_$_HMAccessoryDiagnosticsMetadata
__ HomeKit: _OBJC_CLASS_$_HMAccessorySelectionSettingItem
__ HomeKit: _OBJC_CLASS_$_HMAccessorySettingConstraint
__ HomeKit: _OBJC_CLASS_$_HMAssistantAccessControl
__ HomeKit: _OBJC_CLASS_$_HMBulletinObjectTuple
__ HomeKit: _OBJC_CLASS_$_HMCameraActivityZone
__ HomeKit: _OBJC_CLASS_$_HMCameraBulletinBoardSmartNotification
__ HomeKit: _OBJC_CLASS_$_HMCameraClip
__ HomeKit: _OBJC_CLASS_$_HMCameraClipAssetContext
__ HomeKit: _OBJC_CLASS_$_HMCameraClipEncryptionContext
__ HomeKit: _OBJC_CLASS_$_HMCameraClipEncryptionManager
__ HomeKit: _OBJC_CLASS_$_HMCameraClipPosterFrame
__ HomeKit: _OBJC_CLASS_$_HMCameraClipSignificantEvent
__ HomeKit: _OBJC_CLASS_$_HMCameraClipVideoDataSegment
__ HomeKit: _OBJC_CLASS_$_HMCameraClipVideoInitSegment
__ HomeKit: _OBJC_CLASS_$_HMCameraObjectFetchServer
__ HomeKit: _OBJC_CLASS_$_HMCameraRecordingReachabilityEvent
__ HomeKit: _OBJC_CLASS_$_HMCameraSignificantEvent
__ HomeKit: _OBJC_CLASS_$_HMCameraStreamPreferences
__ HomeKit: _OBJC_CLASS_$_HMCameraUserNotificationSettings
__ HomeKit: _OBJC_CLASS_$_HMFaceClassification
__ HomeKit: _OBJC_CLASS_$_HMFaceCrop
__ HomeKit: _OBJC_CLASS_$_HMFaceprint
__ HomeKit: _OBJC_CLASS_$_HMHTMLDocument
__ HomeKit: _OBJC_CLASS_$_HMHome
__ HomeKit: _OBJC_CLASS_$_HMHomeInvitationData
__ HomeKit: _OBJC_CLASS_$_HMHomeManager
__ HomeKit: _OBJC_CLASS_$_HMHomePersonManager
__ HomeKit: _OBJC_CLASS_$_HMHomePersonManagerSettings
__ HomeKit: _OBJC_CLASS_$_HMIncomingHomeInvitationData
__ HomeKit: _OBJC_CLASS_$_HMLightProfileSettings
__ HomeKit: _OBJC_CLASS_$_HMMediaSystemRole
__ HomeKit: _OBJC_CLASS_$_HMMutableCameraUserNotificationSettings
__ HomeKit: _OBJC_CLASS_$_HMMutableHomePersonManagerSettings
__ HomeKit: _OBJC_CLASS_$_HMMutablePerson
__ HomeKit: _OBJC_CLASS_$_HMMutablePhotosPersonManagerSettings
__ HomeKit: _OBJC_CLASS_$_HMOutgoingHomeInvitationData
__ HomeKit: _OBJC_CLASS_$_HMPBMetadataCategory
__ HomeKit: _OBJC_CLASS_$_HMPBMetadataCharacteristic
__ HomeKit: _OBJC_CLASS_$_HMPBMetadataService
__ HomeKit: _OBJC_CLASS_$_HMPerson
__ HomeKit: _OBJC_CLASS_$_HMPersonFaceCrop
__ HomeKit: _OBJC_CLASS_$_HMPersonLink
__ HomeKit: _OBJC_CLASS_$_HMPersonSettingsManager
__ HomeKit: _OBJC_CLASS_$_HMPhotosPersonManager
__ HomeKit: _OBJC_CLASS_$_HMPhotosPersonManagerSettings
__ HomeKit: _OBJC_CLASS_$_HMPresenceEventActivation
__ HomeKit: _OBJC_CLASS_$_HMSettingValue
__ HomeKit: _OBJC_CLASS_$_HMSetupAccessoryDescription
__ HomeKit: _OBJC_CLASS_$_HMSetupAccessoryPayload
__ HomeKit: _OBJC_CLASS_$_HMSoftwareUpdateDocumentation
__ HomeKit: _OBJC_CLASS_$_HMSoftwareUpdateDocumentationMetadata
__ HomeKit: _OBJC_CLASS_$_HMSymptom
__ HomeKit: _OBJC_CLASS_$_HMUserActionPrediction
__ HomeKit: _OBJC_CLASS_$_HMUserCloudShareRepairInfo
__ HomeKit: _OBJC_CLASS_$_HMUserPresenceAuthorization
__ HomeKit: _OBJC_CLASS_$_HMUserPresenceCompute
__ HomeKit: _OBJC_CLASS_$__HMAccessorySetting
__ HomeKit: _OBJC_CLASS_$__HMCameraUserSettings
__ HomeKit: _OBJC_CLASS_$__HMMutableCameraUserSettings
__ HomeKit: _OBJC_IVAR_$_HMAccessorySettingConstraint._identifier
__ HomeKit: _VOLUME_MIN_DELTA
__ HomeKit: _allowedCharValueTypes
__ HomeKit: _areAnyHomePodsConfigured
__ HomeKit: _areHomesConfigured
__ HomeKit: _areIncomingInvitesPresent
__ HomeKit: _describeDataSyncState
__ HomeKit: _getAssistantConfigurationSnapshot
__ HomeKit: _getAssistantConfigurationVersion
__ HomeKit: _getLastSyncedAssistantConfigurationVersion
__ HomeKit: _getNumberValueForKey
__ HomeKit: _initializeMappingsAndPaths
__ HomeKit: _isAllowedCharType
__ HomeKit: _isEqualAllowingNil
__ HomeKit: _isEqualDeepCompare
__ HomeKit: _isPresenceAuthorizationValid
__ HomeKit: _isRestoreSupportedForCharacteristic
__ HomeKit: _kAccessoriesConfiguredStatusKey
__ HomeKit: _kAccessoryIsSuspendCapableCodingKey
__ HomeKit: _kAccessoryPairingStateChangedNotification
__ HomeKit: _kAccessoryReachableTransportsCodingKey
__ HomeKit: _kAccessoryReprovisionStateUpdateNotificationKey
__ HomeKit: _kAccessoryReprovisionedNotificationKey
__ HomeKit: _kAccessoryReprovisonStateKey
__ HomeKit: _kAddAccessoryProgressNotificationKey
__ HomeKit: _kAddMediaSystemRequest
__ HomeKit: _kAddServiceGroupRequestKey
__ HomeKit: _kAddServiceRequestKey
__ HomeKit: _kAssistantCurrentHomeIdentifierKey
__ HomeKit: _kAssistantCurrentHomeNameKey
__ HomeKit: _kAudioVolumeSetting
__ HomeKit: _kEnableHomeNotificationsNotificationKey
__ HomeKit: _kEnableHomeNotificationsRequestKey
__ HomeKit: _kHomeNetworkProtectionModeMessageKey
__ HomeKit: _kHomesConfiguredStatusKey
__ HomeKit: _kIncomingInvitesPresentKey
__ HomeKit: _kMediaSystemBuilderSessionIDKey
__ HomeKit: _kMediaSystemCodingKey
__ HomeKit: _kMediaSystemCompatibleCodingKey
__ HomeKit: _kMediaSystemComponentRoleCodingKey
__ HomeKit: _kMediaSystemComponentUUIDCodingKey
__ HomeKit: _kMediaSystemComponentsCodingKey
__ HomeKit: _kMediaSystemConfiguredNameCodingKey
__ HomeKit: _kMediaSystemHandlerCodingKey
__ HomeKit: _kMediaSystemNameCodingKey
__ HomeKit: _kMediaSystemRemovedMessage
__ HomeKit: _kMediaSystemRoleTypeCodingKey
__ HomeKit: _kMediaSystemRootSettingsCodingKey
__ HomeKit: _kMediaSystemSetAppDataRequestKey
__ HomeKit: _kMediaSystemUUIDCodingKey
__ HomeKit: _kMediaSystemUpdatedNotification
__ HomeKit: _kMediaSystemsCodingKey
__ HomeKit: _kRemoveMediaSystemRequest
__ HomeKit: _kRemoveServiceGroupRequestKey
__ HomeKit: _kRemoveServiceRequestKey
__ HomeKit: _kRenameServiceGroupRequestKey
__ HomeKit: _kRenameServiceRequestKey
__ HomeKit: _kReprovisionAccessoryRequestKey
__ HomeKit: _kSearchForAccessoriesNeedingReprovisioningRequestKey
__ HomeKit: _kServiceAddedToGroupNotificationKey
__ HomeKit: _kServiceConfigurationStateCodingKey
__ HomeKit: _kServiceConfigurationStateKey
__ HomeKit: _kServiceConfigurationStateUpdatedNotificationKey
__ HomeKit: _kServiceConfiguredNameCodingKey
__ HomeKit: _kServiceDefaultNameCodingKey
__ HomeKit: _kServiceDefaultNameUpdatedNotificationKey
__ HomeKit: _kServiceGroupAddedNotificationKey
__ HomeKit: _kServiceGroupNameCodingKey
__ HomeKit: _kServiceGroupNameKey
__ HomeKit: _kServiceGroupRemovedNotificationKey
__ HomeKit: _kServiceGroupRenamedNotificationKey
__ HomeKit: _kServiceGroupServiceUUIDsCodingKey
__ HomeKit: _kServiceGroupServicesCodingKey
__ HomeKit: _kServiceGroupUUIDCodingKey
__ HomeKit: _kServiceGroupUUIDKey
__ HomeKit: _kServiceGroupsCodingKey
__ HomeKit: _kServiceLabelIndexCodingKey
__ HomeKit: _kServiceLabelNamespaceCodingKey
__ HomeKit: _kServiceRemovedFromGroupNotificationKey
__ HomeKit: _kServiceSubtypeCodingKey
__ HomeKit: _kServiceSubtypeKey
__ HomeKit: _kServiceSubtypeUpdatedNotificationKey
__ HomeKit: _kSetAudioVolumeRequestKey
__ HomeKit: _kSiriIntentKey
__ HomeKit: _kSiriIntentRequestKey
__ HomeKit: _kSiriIntentRequestTypeKey
__ HomeKit: _kSiriSyncDataValidityKey
__ HomeKit: _kSpeakersConfiguredStatusKey
__ HomeKit: _kSymptomsCodingKey
__ HomeKit: _kUpdateMediaSystemRequest
__ HomeKit: _kUpdateUserCamerasAccessLevelRequestKey
__ HomeKit: _localizationKeyForCharacteristicType
__ HomeKit: _localizedWiFiStringKey
__ HomeKit: _removeHomeKitCacheDirectory
__ HomeKit: _resolveHomeKitCacheDirectory
__ HomeKit: _usersListApplicable
__ HomeKitBackingStore: _HMBCKErrorNoRetryDelay
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBAction
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBCloudDatabase
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBCloudDatabaseConfiguration
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBCloudZone
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBCloudZoneConfiguration
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBCloudZoneID
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBCloudZoneStateModel
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBLocalDatabase
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBMirrorInput
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModel
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModelCloudReference
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModelContainer
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModelCountMatchesQuery
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModelField
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModelFieldOption
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModelInfiniteQuery
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModelQueryArgument
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModelReference
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBModelUnindexedQuery
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBMutableAction
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBMutableCloudDatabaseConfiguration
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBMutableCloudZoneConfiguration
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBMutableModelField
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBProcessingOptions
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBShareInvitation
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBShareInvitationContext
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBShareUserID
__ HomeKitBackingStore: _OBJC_CLASS_$_HMBStreamingAsset
__ HomeKitBackingStore: _OBJC_METACLASS_$_HMBCloudZone
__ HomeKitBackingStore: _OBJC_METACLASS_$_HMBModel
__ HomeKitBackingStore: _kHomeDaemonAPSDelegatePort
__ IDS: _IDSActivityMonitorPresenceSubActivity
__ IDS: _IDSCopyAddressDestinationForDestination
__ IDS: _IDSCopyIDForDevice
__ IDS: _IDSCopyIDForEmailAddress
__ IDS: _IDSCopyIDForPhoneNumber
__ IDS: _IDSCopyIDForTokenWithID
__ IDS: _IDSCopyLocalDeviceUniqueID
__ IDS: _IDSCopyRawAddressForDestination
__ IDS: _IDSErrorDomain
__ IDS: _IDSGetAdminAccessTokensWithCompletionBlock
__ IDS: _IDSGetConsentTokensWithCompletionBlock
__ IDS: _IDSGetServiceUserIDsWithCompletionBlock
__ IDS: _IDSGetUserAccessTokensWithCompletionBlock
__ IDS: _IDSLinkPreferenceOptionInputBytesPerSecondKey
__ IDS: _IDSLinkPreferenceOptionIntent
__ IDS: _IDSLinkPreferenceOptionOutputBytesPerSecondKey
__ IDS: _IDSLinkPreferenceOptionPacketsPerSecondKey
__ IDS: _IDSOpenSocketOptionPriorityKey
__ IDS: _IDSOpenSocketOptionStreamNameKey
__ IDS: _IDSOpenSocketOptionTransportKey
__ IDS: _IDSSendErrorDomain
__ IDS: _IDSSendMessageOptionFireAndForgetKey
__ IDS: _IDSSendMessageOptionFromIDKey
__ IDS: _IDSSendMessageOptionLiveMessageDeliveryKey
__ IDS: _IDSSendMessageOptionNonWakingKey
__ IDS: _IDSSendMessageOptionTimeoutKey
__ IDS: _IDSSessionClientUUIDKey
__ IDS: _IDSSessionConnectionCountHintKey
__ IDS: _IDSSessionPreferredAddressFamilyKey
__ IDS: _IDSSessionSingleChannelDirectModeKey
__ IDS: _IDSSessionTransportTypeKey
__ IDS: _OBJC_CLASS_$_IDSAccount
__ IDS: _OBJC_CLASS_$_IDSActivityMonitor
__ IDS: _OBJC_CLASS_$_IDSDevice
__ IDS: _OBJC_CLASS_$_IDSDeviceConnection
__ IDS: _OBJC_CLASS_$_IDSService
__ IDS: _OBJC_CLASS_$_IDSSession
__ IDS: _OBJC_CLASS_$_IDSURI
__ IDS: _kIDSServiceDefaultsSentinelAlias
__ IDS: _kIDSServiceDefaultsSentinelSelfAlias
__ IOKit: _IOPMAssertionCreateWithDescription
__ IOKit: _IOPMAssertionRelease
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithData
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _kCGImageSourceShouldAllowFloat
__ ImageIO: _kCGImageSourceShouldCache
__ InstallCoordination: _IXStringForAppRemovability
__ InstallCoordination: _OBJC_CLASS_$_IXAppInstallCoordinator
__ Intents: _OBJC_CLASS_$_INControlHomeIntent
__ Intents: _OBJC_CLASS_$_INHomeAction
__ Intents: _OBJC_CLASS_$_INHomeContent
__ Intents: _OBJC_CLASS_$_INHomeFilter
__ Intents: _OBJC_CLASS_$_INInteraction
__ Intents: _OBJC_CLASS_$_INSpeakableString
__ MFAAuthentication: _MFAATokenManagerErrorDomain
__ MFAAuthentication: _OBJC_CLASS_$_MFAACertificateManager
__ MFAAuthentication: _OBJC_CLASS_$_MFAATokenManager
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantCommand
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantConnection
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantDiscovery
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCAssistantMutableRemoteControlDestination
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerPath
__ MediaPlaybackCore: _OBJC_CLASS_$_MPCPlayerRequest
__ MediaPlayer: _OBJC_CLASS_$_MPPlaybackArchive
__ MediaPlayer: _OBJC_CLASS_$_MPRequestResponseController
__ MediaRemote: _MRAVEndpointCopyLocalizedName
__ MediaRemote: _MRAVEndpointCopyOutputDevices
__ MediaRemote: _MRAVEndpointCopyUniqueIdentifier
__ MediaRemote: _MRAVEndpointGetExternalDevice
__ MediaRemote: _MRAVEndpointGetOutputDeviceUIDVolumeControlCapabilities
__ MediaRemote: _MRAVEndpointSetOutputDeviceUIDVolume
__ MediaRemote: _MRAVOutputDeviceCopyModelID
__ MediaRemote: _MRAVOutputDeviceCopyName
__ MediaRemote: _MRAVOutputDeviceCopyUniqueIdentifier
__ MediaRemote: _MRAVOutputDeviceGetAVOutputDevice
__ MediaRemote: _MRAVOutputDeviceGetSubtype
__ MediaRemote: _MRAVOutputDeviceSupportsBufferedAirPlay
__ MediaRemote: _MRAVOutputDeviceSupportsHAP
__ MediaRemote: _MRAVReconnaissanceSessionBeginSearch
__ MediaRemote: _MRAVReconnaissanceSessionCancelSearch
__ MediaRemote: _MRAVReconnaissanceSessionCreateWithEndpointFeatures
__ MediaRemote: _MRAVRoutingDiscoverySessionAddOutputDevicesChangedCallback
__ MediaRemote: _MRAVRoutingDiscoverySessionCopyAvailableOutputDevices
__ MediaRemote: _MRAVRoutingDiscoverySessionCreate
__ MediaRemote: _MRAVRoutingDiscoverySessionRemoveOutputDevicesChangedCallback
__ MediaRemote: _MRAVRoutingDiscoverySessionSetDiscoveryMode
__ MediaRemote: _MRExternalDeviceConnect
__ MediaRemote: _MRExternalDeviceCopyCustomOrigin
__ MediaRemote: _MRExternalDeviceDisconnect
__ MediaRemote: _MRExternalDeviceGetConnectionState
__ MediaRemote: _MRExternalDeviceSetConnectionStateCallback
__ MediaRemote: _MRExternalDeviceSetWantsNowPlayingUpdates
__ MediaRemote: _MRMediaRemoteErrorIsInformational
__ MediaRemote: _MRMediaRemoteGetLocalOrigin
__ MediaRemote: _MRMediaRemoteGetLocalReceiverPairingIdentity
__ MediaRemote: _MRMediaRemoteGetNowPlayingApplicationPlaybackStateForOrigin
__ MediaRemote: _MRMediaRemoteRegisterForNowPlayingNotifications
__ MediaRemote: _MRMediaRemoteSendCommandForOriginWithReply
__ MediaRemote: _MRMediaRemoteUnregisterForNowPlayingNotifications
__ MediaRemote: _MROriginGetUniqueIdentifier
__ MediaRemote: _MROriginIsLocalOrigin
__ MediaRemote: _kMRMediaRemoteOriginNowPlayingApplicationPlaybackStateDidChangeNotification
__ MediaRemote: _kMRMediaRemoteOriginUserInfoKey
__ MediaRemote: _kMRMediaRemotePickedRouteVolumeDidChangeNotification
__ MediaRemote: _kMRMediaRemotePickedRouteVolumeUserInfoKey
__ MediaRemote: _kMRMediaRemotePlaybackStateUserInfoKey
__ MobileAsset: _ASAttributeCompatibilityVersion
__ MobileAsset: _ASAttributeContentVersion
__ MobileAsset: _OBJC_CLASS_$_MAAsset
__ MobileAsset: _OBJC_CLASS_$_MAAssetQuery
__ MobileAsset: _OBJC_CLASS_$_MADownloadOptions
__ MobileKeyBag: _MKBDeviceGetGracePeriod
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _MKBGetDeviceLockState
__ NanoRegistry: _NRWatchOSVersion
__ NetAppsUtilities: _NAEmptyResult
__ NetAppsUtilities: _OBJC_CLASS_$_NAFuture
__ NetAppsUtilities: _OBJC_CLASS_$_NAPromise
__ NetAppsUtilities: _OBJC_CLASS_$_NAScheduler
__ PairedSync: _OBJC_CLASS_$_PSYSyncCoordinator
__ Photos: _OBJC_CLASS_$_PHFace
__ Photos: _OBJC_CLASS_$_PHFaceCrop
__ Photos: _OBJC_CLASS_$_PHFetchResult
__ Photos: _OBJC_CLASS_$_PHPerson
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Photos: _PHInsertedLocalIdentifiersKey
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ QuartzCore: _CARenderServerGetServerPort
__ QuartzCore: _OBJC_CLASS_$_CAContext
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ Rapport: _OBJC_CLASS_$_RPClient
__ Rapport: _OBJC_CLASS_$_RPCompanionLinkClient
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessIdentifier
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessMonitor
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessPredicate
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessStateDescriptor
__ SAObjects: _AceObjectAceIdPlistKey
__ SAObjects: _OBJC_CLASS_$_SAHAAction
__ SAObjects: _OBJC_CLASS_$_SAHAActionRequest
__ SAObjects: _OBJC_CLASS_$_SAHAActionResult
__ SAObjects: _OBJC_CLASS_$_SAHAAttributeValue
__ SAObjects: _OBJC_CLASS_$_SAHABooleanValue
__ SAObjects: _OBJC_CLASS_$_SAHACommand
__ SAObjects: _OBJC_CLASS_$_SAHACommandCompleted
__ SAObjects: _OBJC_CLASS_$_SAHACurrentHome
__ SAObjects: _OBJC_CLASS_$_SAHAEntity
__ SAObjects: _OBJC_CLASS_$_SAHAFilter
__ SAObjects: _OBJC_CLASS_$_SAHAFloatValue
__ SAObjects: _OBJC_CLASS_$_SAHAIdentifierListFilter
__ SAObjects: _OBJC_CLASS_$_SAHAIntegerValue
__ SAObjects: _OBJC_CLASS_$_SAHASceneAction
__ SAObjects: _OBJC_CLASS_$_SAHASearchCriteriaFilter
__ SAObjects: _OBJC_CLASS_$_SAHAStringValue
__ SAObjects: _OBJC_METACLASS_$_SAHACommand
__ SAObjects: _SAHAActionActionTypePListKey
__ SAObjects: _SAHAActionAttributePListKey
__ SAObjects: _SAHAActionOutcomeALREADY_AT_MAX_VALUEValue
__ SAObjects: _SAHAActionOutcomeALREADY_AT_MIN_VALUEValue
__ SAObjects: _SAHAActionOutcomeBLUETOOTH_WAKEUPValue
__ SAObjects: _SAHAActionOutcomeBRIDGED_ACCESSORY_UNREACHABLEValue
__ SAObjects: _SAHAActionOutcomeFAILUREValue
__ SAObjects: _SAHAActionOutcomeFOUND_NO_MATCHING_ENTITIESValue
__ SAObjects: _SAHAActionOutcomeIN_PROGRESSValue
__ SAObjects: _SAHAActionOutcomeLARGER_THAN_MAX_VALUEValue
__ SAObjects: _SAHAActionOutcomeNO_REMOTE_ACCESSValue
__ SAObjects: _SAHAActionOutcomeREAD_ONLYValue
__ SAObjects: _SAHAActionOutcomeREQUIRES_UNLOCKValue
__ SAObjects: _SAHAActionOutcomeSCENE_NOT_SET_UPValue
__ SAObjects: _SAHAActionOutcomeSECURED_ACCESS_DENIEDValue
__ SAObjects: _SAHAActionOutcomeSECURING_FAILUREValue
__ SAObjects: _SAHAActionOutcomeSET_TO_MAX_VALUEValue
__ SAObjects: _SAHAActionOutcomeSET_TO_MIN_VALUEValue
__ SAObjects: _SAHAActionOutcomeSMALLER_THAN_MIN_VALUEValue
__ SAObjects: _SAHAActionOutcomeSUCCESSValue
__ SAObjects: _SAHAActionOutcomeUNREACHABLEValue
__ SAObjects: _SAHAActionOutcomeUNSUPPORTED_ATTRIBUTEValue
__ SAObjects: _SAHAActionRequestActionsPListKey
__ SAObjects: _SAHAActionRequestExecutionOrderPListKey
__ SAObjects: _SAHAActionResultEntityPListKey
__ SAObjects: _SAHAActionResultOutcomePListKey
__ SAObjects: _SAHAActionResultRequestActionIdPListKey
__ SAObjects: _SAHAActionResultResultAttributePListKey
__ SAObjects: _SAHAActionResultResultValuePListKey
__ SAObjects: _SAHAActionTypeDECREASEValue
__ SAObjects: _SAHAActionTypeGETValue
__ SAObjects: _SAHAActionTypeGET_MAXIMUMValue
__ SAObjects: _SAHAActionTypeGET_MINIMUMValue
__ SAObjects: _SAHAActionTypeGET_STEP_VALUEValue
__ SAObjects: _SAHAActionTypeGET_TARGET_VALUEValue
__ SAObjects: _SAHAActionTypeINCREASEValue
__ SAObjects: _SAHAActionTypeSETValue
__ SAObjects: _SAHAActionTypeSET_TO_MAXIMUMValue
__ SAObjects: _SAHAActionTypeSET_TO_MINIMUMValue
__ SAObjects: _SAHAActionTypeTOGGLEValue
__ SAObjects: _SAHAActionValuePListKey
__ SAObjects: _SAHAAttributeADAPTIVE_LIGHTINGValue
__ SAObjects: _SAHAAttributeCOLOR_VALUEValue
__ SAObjects: _SAHAAttributeCOOLINGValue
__ SAObjects: _SAHAAttributeCOOLING_THRESHOLDValue
__ SAObjects: _SAHAAttributeENABLEDValue
__ SAObjects: _SAHAAttributeHEATINGValue
__ SAObjects: _SAHAAttributeHEATING_THRESHOLDValue
__ SAObjects: _SAHAAttributeIN_USEValue
__ SAObjects: _SAHAAttributeMEDIAValue
__ SAObjects: _SAHAAttributePARTICULATE_MATTER_10_DENSITYValue
__ SAObjects: _SAHAAttributePARTICULATE_MATTER_2_5_DENSITYValue
__ SAObjects: _SAHAAttributePOWERValue
__ SAObjects: _SAHAAttributeTEMPERATUREValue
__ SAObjects: _SAHAAttributeValueUnitsPListKey
__ SAObjects: _SAHABooleanValueClassIdentifier
__ SAObjects: _SAHACommandActionRequestsPListKey
__ SAObjects: _SAHACommandActionsPListKey
__ SAObjects: _SAHACommandCommandTimeoutPListKey
__ SAObjects: _SAHACommandCompletedClientValidityPListKey
__ SAObjects: _SAHACommandCompletedCommandOutcomePListKey
__ SAObjects: _SAHACommandCompletedHomeIdentifierPListKey
__ SAObjects: _SAHACommandCompletedServerValidityPListKey
__ SAObjects: _SAHACommandFilterPListKey
__ SAObjects: _SAHACommandOutcomeCOMMAND_FAILUREValue
__ SAObjects: _SAHACommandOutcomeCOMMAND_SUCCESSValue
__ SAObjects: _SAHACommandOutcomeFOUND_NO_MATCHING_ENTITIESValue
__ SAObjects: _SAHACommandOutcomeINCOMPLETE_SYNC_DATAValue
__ SAObjects: _SAHACommandOutcomeREMOTE_ACCESS_NOT_SETUPValue
__ SAObjects: _SAHACommandOutcomeREQUIRES_UNLOCKValue
__ SAObjects: _SAHACommandOutcomeSCENE_IN_PROGRESSValue
__ SAObjects: _SAHACommandOutcomeSCENE_NOT_SET_UPValue
__ SAObjects: _SAHACommandOutcomeSCENE_PARTIAL_FAILUREValue
__ SAObjects: _SAHACommandOutcomeSCENE_SECURING_FAILUREValue
__ SAObjects: _SAHACommandOutcomeSECURED_ACCESS_DENIEDValue
__ SAObjects: _SAHACommandServerValidityPListKey
__ SAObjects: _SAHAEntityAccessoryIdentifierPListKey
__ SAObjects: _SAHAEntityAccessoryPListKey
__ SAObjects: _SAHAEntityAttributesPListKey
__ SAObjects: _SAHAEntityCurrentDevicePListKey
__ SAObjects: _SAHAEntityEntityTypePListKey
__ SAObjects: _SAHAEntityHashedRouteUIDPListKey
__ SAObjects: _SAHAEntityHomeIdentifierPListKey
__ SAObjects: _SAHAEntityHomePListKey
__ SAObjects: _SAHAEntityNamePListKey
__ SAObjects: _SAHAEntityRoomIdentifierPListKey
__ SAObjects: _SAHAEntityRoomPListKey
__ SAObjects: _SAHAEntitySceneTypePListKey
__ SAObjects: _SAHAEntityServiceGroupIdentifiersPListKey
__ SAObjects: _SAHAEntityServiceGroupPListKey
__ SAObjects: _SAHAEntityServiceSubTypePListKey
__ SAObjects: _SAHAEntityServiceTypePListKey
__ SAObjects: _SAHAEntityStatusPListKey
__ SAObjects: _SAHAEntityStatusSCENE_INCLUDES_MUSICValue
__ SAObjects: _SAHAEntityStatusSCENE_INCLUDES_SECURING_ACTIONSValue
__ SAObjects: _SAHAEntityStatusSCENE_INCLUDES_UNSECURING_ACTIONSValue
__ SAObjects: _SAHAEntityStatusSCENE_NOT_SETUPValue
__ SAObjects: _SAHAEntityTargetAttributesPListKey
__ SAObjects: _SAHAEntityTypeACCESSORYValue
__ SAObjects: _SAHAEntityTypeGROUPValue
__ SAObjects: _SAHAEntityTypeHOMEValue
__ SAObjects: _SAHAEntityTypeROOMValue
__ SAObjects: _SAHAEntityTypeSCENEValue
__ SAObjects: _SAHAEntityTypeSERVICEValue
__ SAObjects: _SAHAEntityTypeZONEValue
__ SAObjects: _SAHAEntityZoneIdentifiersPListKey
__ SAObjects: _SAHAEntityZonePListKey
__ SAObjects: _SAHAFloatValueClassIdentifier
__ SAObjects: _SAHAGroupTypeMEDIA_SYSTEMValue
__ SAObjects: _SAHAGroupTypeSERVICE_GROUPValue
__ SAObjects: _SAHAIdentifierListFilterIdentifiersPListKey
__ SAObjects: _SAHAIntegerValueClassIdentifier
__ SAObjects: _SAHASceneTypeGOOD_MORNINGValue
__ SAObjects: _SAHASceneTypeGOOD_NIGHTValue
__ SAObjects: _SAHASceneTypeIM_HOMEValue
__ SAObjects: _SAHASceneTypeIM_LEAVINGValue
__ SAObjects: _SAHASceneTypeUSER_DEFINEDValue
__ SAObjects: _SAHASearchCriteriaFilterAccessoryIdentifierPListKey
__ SAObjects: _SAHASearchCriteriaFilterAccessoryNamePListKey
__ SAObjects: _SAHASearchCriteriaFilterAttributePListKey
__ SAObjects: _SAHASearchCriteriaFilterEntityTypePListKey
__ SAObjects: _SAHASearchCriteriaFilterGroupNamePListKey
__ SAObjects: _SAHASearchCriteriaFilterHomeIdentifierPListKey
__ SAObjects: _SAHASearchCriteriaFilterHomeNamePListKey
__ SAObjects: _SAHASearchCriteriaFilterRoomIdentifierPListKey
__ SAObjects: _SAHASearchCriteriaFilterRoomNamePListKey
__ SAObjects: _SAHASearchCriteriaFilterSceneIdentifierPListKey
__ SAObjects: _SAHASearchCriteriaFilterSceneNamePListKey
__ SAObjects: _SAHASearchCriteriaFilterSceneTypePListKey
__ SAObjects: _SAHASearchCriteriaFilterServiceGroupIdentifierPListKey
__ SAObjects: _SAHASearchCriteriaFilterServiceIdentifierPListKey
__ SAObjects: _SAHASearchCriteriaFilterServiceNamePListKey
__ SAObjects: _SAHASearchCriteriaFilterServiceTypePListKey
__ SAObjects: _SAHASearchCriteriaFilterZoneIdentifierPListKey
__ SAObjects: _SAHASearchCriteriaFilterZoneNamePListKey
__ SAObjects: _SAHAServiceSubTypeAIRPLAY_2Value
__ SAObjects: _SAHAServiceSubTypeAIR_CONDITIONER_FANValue
__ SAObjects: _SAHAServiceSubTypeAIR_PURIFIER_FANValue
__ SAObjects: _SAHAServiceSubTypeCIRCULATION_FANValue
__ SAObjects: _SAHAServiceSubTypeCLIMATE_TEMPERATURE_CONTROLLERValue
__ SAObjects: _SAHAServiceSubTypeDOORValue
__ SAObjects: _SAHAServiceSubTypeGARAGE_DOORValue
__ SAObjects: _SAHAServiceSubTypeGENERIC_FAUCETValue
__ SAObjects: _SAHAServiceSubTypeHORSEMANValue
__ SAObjects: _SAHAServiceSubTypeHORSEMAN_STEREO_PAIRValue
__ SAObjects: _SAHAServiceSubTypeHUMIDIFIER_DEHUMIDIFIER_FANValue
__ SAObjects: _SAHAServiceSubTypeIRRIGATIONValue
__ SAObjects: _SAHAServiceSubTypeLIGHTBULBValue
__ SAObjects: _SAHAServiceSubTypeSHOWER_HEADValue
__ SAObjects: _SAHAServiceSubTypeVENTILATION_FANValue
__ SAObjects: _SAHAServiceSubTypeWATER_FAUCETValue
__ SAObjects: _SAHAServiceSubTypeWATER_TEMPERATURE_CONTROLLERValue
__ SAObjects: _SAHAServiceSubTypeWINDOWValue
__ SAObjects: _SAHAServiceSubTypeWINDOW_COVERINGValue
__ SAObjects: _SAHAServiceTypeAIRPORT_EXRESSValue
__ SAObjects: _SAHAServiceTypeAPPLE_TVValue
__ SAObjects: _SAHAServiceTypeCUSTOMValue
__ SAObjects: _SAHAServiceTypeIP_CAMERAValue
__ SAObjects: _SAHAServiceTypeIRRIGATION_SYSTEMValue
__ SAObjects: _SAHAServiceTypeSPEAKERValue
__ SAObjects: _SAHAServiceTypeVALVEValue
__ SAObjects: _SAHAStringValueClassIdentifier
__ SAObjects: _SAHAValueUnitsFAHRENHEITValue
__ Security: _SOSCCIsHomeKitSyncing
__ Security: _SOSCCIsIcloudKeychainSyncing
__ Security: _SecCertificateCreateWithData
__ Security: _SecKeyVerifySignature
__ Security: _SecPasswordGenerate
__ Security: _SecPolicyCreateAppleHomeKitServerAuth
__ Security: _SecPolicyCreateApplePinned
__ Security: _SecRandomCopyBytes
__ Security: _SecTrustCopyPublicKey
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluate
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _SecTrustGetCertificateCount
__ Security: _kSOSCCCircleChangedNotification
__ Security: _kSOSCCViewMembershipChangedNotification
__ Security: _kSecKeyAlgorithmECDSASignatureDigestX962SHA256
__ Security: _kSecRandomDefault
__ Sharing: _OBJC_CLASS_$_SFClient
__ Sharing: _OBJC_CLASS_$_SFDeviceDiscovery
__ SoftLinking: __sl_dlopen_audited
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertConfigurationContext
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertDefinition
__ SpringBoardServices: _OBJC_CLASS_$_SBSRemoteAlertHandle
__ SpringBoardServices: _SBUserNotificationAlternateButtonPresentationStyleKey
__ SpringBoardServices: _SBUserNotificationDefaultButtonPresentationStyleKey
__ SpringBoardServices: _SBUserNotificationDontDismissOnUnlock
__ StreamingZip: _OBJC_CLASS_$_SZExtractor
__ StreamingZip: _SZExtractorHashTypeMD2
__ StreamingZip: _SZExtractorHashTypeMD4
__ StreamingZip: _SZExtractorHashTypeMD5
__ StreamingZip: _SZExtractorHashTypeSHA1
__ StreamingZip: _SZExtractorHashTypeSHA224
__ StreamingZip: _SZExtractorHashTypeSHA256
__ StreamingZip: _SZExtractorHashTypeSHA384
__ StreamingZip: _SZExtractorHashTypeSHA512
__ StreamingZip: _SZExtractorOptionsDenyInvalidSymlinks
__ StreamingZip: _SZExtractorOptionsHashType
__ StreamingZip: _SZExtractorOptionsHashedChunkSize
__ StreamingZip: _SZExtractorOptionsHashesArray
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureContext
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignaturePID
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureSubTypeContext
__ SymptomDiagnosticReporter: _kSymptomDiagnosticSignatureThresholdValues
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypeFunctional
__ SymptomDiagnosticReporter: _kSymptomDiagnosticTypePerformance
__ SystemConfiguration: _SCDynamicStoreCreate
__ SystemConfiguration: _SCDynamicStoreKeyCreateNetworkInterfaceEntity
__ SystemConfiguration: _SCDynamicStoreSetDispatchQueue
__ SystemConfiguration: _SCDynamicStoreSetNotificationKeys
__ SystemConfiguration: _SCError
__ SystemConfiguration: _SCNetworkReachabilityCreateWithAddress
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ SystemConfiguration: _kSCCompAnyRegex
__ SystemConfiguration: _kSCDynamicStoreDomainState
__ SystemConfiguration: _kSCEntNetLink
__ SystemStatus: _OBJC_CLASS_$_STDynamicActivityAttributionPublisher
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _kTCCServiceMicrophone
__ TCC: _kTCCServiceWillow
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ UserNotifications: _OBJC_CLASS_$_UNMutableNotificationContent
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAction
__ UserNotifications: _OBJC_CLASS_$_UNNotificationAttachment
__ UserNotifications: _OBJC_CLASS_$_UNNotificationCategory
__ UserNotifications: _OBJC_CLASS_$_UNNotificationRequest
__ UserNotifications: _OBJC_CLASS_$_UNNotificationSound
__ UserNotifications: _OBJC_CLASS_$_UNUserNotificationCenter
__ UserNotifications: _UNNotificationDismissActionIdentifier
__ VoiceShortcutClient: _OBJC_CLASS_$_VCVoiceShortcutClient
__ WirelessDiagnostics: _AWDPostMetric
__ WirelessDiagnostics: _OBJC_CLASS_$_AWDServerConnection
__ libMemoryResourceException.dylib: _MREExceptionTypeToString
__ libMemoryResourceException.dylib: _ReportMemoryExceptionFromTask
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: _CC_SHA256_Final
__ libSystem.B.dylib: _CC_SHA256_Init
__ libSystem.B.dylib: _CC_SHA256_Update
__ libSystem.B.dylib: _NDR_record
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_EXPECTED_DURATION
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_TRANSFER_DIRECTION
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_TRANSFER_DIRECTION_DOWNLOAD
__ libSystem.B.dylib: _XPC_ACTIVITY_POWER_NAP
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_SHOULD_WAKE_DEVICE
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_read
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dispatch_source_type_write
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_error_connection_invalid
__ libSystem.B.dylib: __xpc_type_connection
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _atoll
__ libSystem.B.dylib: _bind
__ libSystem.B.dylib: _bootstrap_look_up
__ libSystem.B.dylib: _bootstrap_port
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cchkdf
__ libSystem.B.dylib: _ccsha512_di
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _csops_audittoken
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_data_create_concat
__ libSystem.B.dylib: _dispatch_data_create_map
__ libSystem.B.dylib: _dispatch_data_create_subrange
__ libSystem.B.dylib: _dispatch_data_get_size
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _freeifaddrs
__ libSystem.B.dylib: _getifaddrs
__ libSystem.B.dylib: _getpeername
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getsockname
__ libSystem.B.dylib: _gettimeofday
__ libSystem.B.dylib: _in6addr_any
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_msg
__ libSystem.B.dylib: _mach_msg_destroy
__ libSystem.B.dylib: _mach_port_deallocate
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memorystatus_control
__ libSystem.B.dylib: _memset_s
__ libSystem.B.dylib: _mig_dealloc_reply_port
__ libSystem.B.dylib: _mig_get_reply_port
__ libSystem.B.dylib: _mig_put_reply_port
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _proc_pid_rusage
__ libSystem.B.dylib: _pthread_once
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _recvfrom
__ libSystem.B.dylib: _send
__ libSystem.B.dylib: _setenv
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlcpy
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _task_generate_corpse
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _vm_allocate
__ libSystem.B.dylib: _vm_deallocate
__ libSystem.B.dylib: _voucher_mach_msg_set
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_connection_cancel
__ libSystem.B.dylib: _xpc_connection_copy_entitlement_value
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_suspend
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_fd
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: dyld_stub_binder
__ libnetwork.dylib: _tcp_connection_cancel
__ libnetwork.dylib: _tcp_connection_create
__ libnetwork.dylib: _tcp_connection_read
__ libnetwork.dylib: _tcp_connection_set_event_handler
__ libnetwork.dylib: _tcp_connection_start
__ libnetwork.dylib: _tcp_connection_write
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_removeAssociatedObjects
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libsqlite3.dylib: _sqlite3_bind_blob64
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_parameter_count
__ libsqlite3.dylib: _sqlite3_bind_parameter_name
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_bind_zeroblob
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_config
__ libsqlite3.dylib: _sqlite3_db_handle
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_get_autocommit
__ libsqlite3.dylib: _sqlite3_initialize
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_sql
__ libsqlite3.dylib: _sqlite3_step
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateBound
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
AWDHomeKitRemoteSession : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDeviceType
 @property  unsigned int deviceType
 @property  BOOL hasRole
 @property  unsigned int role
 @property  BOOL hasDuration
 @property  unsigned long duration
 @property  BOOL hasCloseReason
 @property  unsigned int closeReason
 @property  BOOL hasErrorCode
 @property  int errorCode

  // instance methods
  -[AWDHomeKitRemoteSession setErrorCode:]
  -[AWDHomeKitRemoteSession hasRole]
  -[AWDHomeKitRemoteSession copyWithZone:]
  -[AWDHomeKitRemoteSession hasErrorCode]
  -[AWDHomeKitRemoteSession errorCode]
  -[AWDHomeKitRemoteSession setHasErrorCode:]
  -[AWDHomeKitRemoteSession setDeviceType:]
  -[AWDHomeKitRemoteSession deviceType]
  -[AWDHomeKitRemoteSession closeReason]
  -[AWDHomeKitRemoteSession setHasDeviceType:]
  -[AWDHomeKitRemoteSession timestamp]
  -[AWDHomeKitRemoteSession setTimestamp:]
  -[AWDHomeKitRemoteSession setHasRole:]
  -[AWDHomeKitRemoteSession setRole:]
  -[AWDHomeKitRemoteSession setHasDuration:]
  -[AWDHomeKitRemoteSession setHasTimestamp:]
  -[AWDHomeKitRemoteSession readFrom:]
  -[AWDHomeKitRemoteSession writeTo:]
  -[AWDHomeKitRemoteSession isEqual:]
  -[AWDHomeKitRemoteSession setDuration:]
  -[AWDHomeKitRemoteSession role]
  -[AWDHomeKitRemoteSession copyTo:]
  -[AWDHomeKitRemoteSession dictionaryRepresentation]
  -[AWDHomeKitRemoteSession hasDeviceType]
  -[AWDHomeKitRemoteSession hasDuration]
  -[AWDHomeKitRemoteSession mergeFrom:]
  -[AWDHomeKitRemoteSession hasTimestamp]
  -[AWDHomeKitRemoteSession duration]
  -[AWDHomeKitRemoteSession setCloseReason:]
  -[AWDHomeKitRemoteSession setHasCloseReason:]
  -[AWDHomeKitRemoteSession hasCloseReason]


HMDNetworkRouterFirewallRuleLANDynamic : HMDNetworkRouterFirewallRuleLAN
 @property  unsigned char transportProtocol
 @property  unsigned char advertisingProtocol
 @property  BOOL advertisingOnly
 @property  NSString *serviceType

  // class methods
  +[HMDNetworkRouterFirewallRuleLANDynamic __decodeAdvertisingProtocol:advertisingProtocol:error:]
  +[HMDNetworkRouterFirewallRuleLANDynamic __decodeFlags:advertisingOnly:error:]
  +[HMDNetworkRouterFirewallRuleLANDynamic __decodeServiceType:serviceType:error:]
  +[HMDNetworkRouterFirewallRuleLANDynamic __advertisingProtocolToString:]
  +[HMDNetworkRouterFirewallRuleLANDynamic createWithJSONDictionary:name:critical:purpose:allowInterAccessoryConnections:direction:requiredForHAPFunctionality:ruleDictionary:error:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleLANDynamic transportProtocol]
  -[HMDNetworkRouterFirewallRuleLANDynamic attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleLANDynamic .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleLANDynamic serviceType]
  -[HMDNetworkRouterFirewallRuleLANDynamic initWithJSONDictionary:name:critical:purpose:allowInterAccessoryConnections:direction:requiredForHAPFunctionality:transportProtocol:advertisingProtocol:advertisingOnly:serviceType:]
  -[HMDNetworkRouterFirewallRuleLANDynamic advertisingProtocol]
  -[HMDNetworkRouterFirewallRuleLANDynamic isAdvertisingOnly]
  -[HMDNetworkRouterFirewallRuleLANDynamic prettyJSONDictionary]


HMDPendingCloudSyncTransactions : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL uploadInProgress
 @property  NSMutableArray *pendingReasonsSaved
 @property  NSMutableArray *deltaReasonsSaved
 @property  HMDHomeManager *homeManager
 @property  NSArray *reasonsSaved
 @property  NSArray *allReasonsSaved

  // class methods
  +[HMDPendingCloudSyncTransactions convertSaveReasonToTransationReason:]

  // instance methods
  -[HMDPendingCloudSyncTransactions init]
  -[HMDPendingCloudSyncTransactions initWithHomeManager:]
  -[HMDPendingCloudSyncTransactions .cxx_destruct]
  -[HMDPendingCloudSyncTransactions reset]
  -[HMDPendingCloudSyncTransactions homeManager]
  -[HMDPendingCloudSyncTransactions setUploadInProgress:]
  -[HMDPendingCloudSyncTransactions pendingReasonsSaved]
  -[HMDPendingCloudSyncTransactions deltaReasonsSaved]
  -[HMDPendingCloudSyncTransactions _addReasonSaved:information:]
  -[HMDPendingCloudSyncTransactions uploadInProgress]
  -[HMDPendingCloudSyncTransactions startUpload]
  -[HMDPendingCloudSyncTransactions stopUploadAndClean]
  -[HMDPendingCloudSyncTransactions stopUploadAndResume]
  -[HMDPendingCloudSyncTransactions addReasonSaved:information:]
  -[HMDPendingCloudSyncTransactions loadReasonsSaved:]
  -[HMDPendingCloudSyncTransactions reasonsSaved]
  -[HMDPendingCloudSyncTransactions allReasonsSaved]
  -[HMDPendingCloudSyncTransactions setPendingReasonsSaved:]
  -[HMDPendingCloudSyncTransactions setDeltaReasonsSaved:]


AWDHomeKitCameraUserSettings : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasIsSharingFaceClassificationsEnabled
 @property  BOOL isSharingFaceClassificationsEnabled
 @property  BOOL hasIsImportingFromPhotoLibraryEnabled
 @property  BOOL isImportingFromPhotoLibraryEnabled
 @property  BOOL hasIsOwner
 @property  BOOL isOwner

  // instance methods
  -[AWDHomeKitCameraUserSettings copyWithZone:]
  -[AWDHomeKitCameraUserSettings isSharingFaceClassificationsEnabled]
  -[AWDHomeKitCameraUserSettings isImportingFromPhotoLibraryEnabled]
  -[AWDHomeKitCameraUserSettings isOwner]
  -[AWDHomeKitCameraUserSettings setIsOwner:]
  -[AWDHomeKitCameraUserSettings readFrom:]
  -[AWDHomeKitCameraUserSettings writeTo:]
  -[AWDHomeKitCameraUserSettings isEqual:]
  -[AWDHomeKitCameraUserSettings copyTo:]
  -[AWDHomeKitCameraUserSettings dictionaryRepresentation]
  -[AWDHomeKitCameraUserSettings mergeFrom:]
  -[AWDHomeKitCameraUserSettings setIsSharingFaceClassificationsEnabled:]
  -[AWDHomeKitCameraUserSettings setHasIsSharingFaceClassificationsEnabled:]
  -[AWDHomeKitCameraUserSettings hasIsSharingFaceClassificationsEnabled]
  -[AWDHomeKitCameraUserSettings setIsImportingFromPhotoLibraryEnabled:]
  -[AWDHomeKitCameraUserSettings setHasIsImportingFromPhotoLibraryEnabled:]
  -[AWDHomeKitCameraUserSettings hasIsImportingFromPhotoLibraryEnabled]
  -[AWDHomeKitCameraUserSettings setHasIsOwner:]
  -[AWDHomeKitCameraUserSettings hasIsOwner]


HMDSettingValueSelectionItem : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *identifier
 @property  NSString *selection

  // instance methods
  -[HMDSettingValueSelectionItem selection]
  -[HMDSettingValueSelectionItem .cxx_destruct]
  -[HMDSettingValueSelectionItem identifier]
  -[HMDSettingValueSelectionItem isEqual:]
  -[HMDSettingValueSelectionItem initWithIdentifier:selection:]


HMDSetting : NSObject /usr/lib/libc++.1.dylib <HMDSettingBaseProtocol>
 @property  BOOL readOnly
 @property  NSNumber *type
 @property  NSNumber *properties
 @property  HMSettingValue *internalValue
 @property  NSMutableArray *constraints
 @property  NSUUID *parentIdentifier
 @property  NSUUID *identifier
 @property  id value
 @property  NSString *name
 @property  NSString *keyPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSetting supportsSecureCoding]
  +[HMDSetting logCategory]
  +[HMDSetting settingValueWithModel:]

  // instance methods
  -[HMDSetting setReadOnly:]
  -[HMDSetting isReadOnly]
  -[HMDSetting setKeyPath:]
  -[HMDSetting logIdentifier]
  -[HMDSetting setType:]
  -[HMDSetting .cxx_destruct]
  -[HMDSetting name]
  -[HMDSetting setProperties:]
  -[HMDSetting keyPath]
  -[HMDSetting encodeWithCoder:]
  -[HMDSetting identifier]
  -[HMDSetting type]
  -[HMDSetting parentIdentifier]
  -[HMDSetting addConstraint:]
  -[HMDSetting value]
  -[HMDSetting initWithModel:]
  -[HMDSetting properties]
  -[HMDSetting constraints]
  -[HMDSetting internalValue]
  -[HMDSetting initWithCoder:]
  -[HMDSetting setConstraints:]
  -[HMDSetting isValidValue:]
  -[HMDSetting initWithIdentifier:parentIdentifier:name:properties:type:value:constraints:]
  -[HMDSetting wouldValueUpdate:]
  -[HMDSetting setInternalValue:]
  -[HMDSetting updateWithSettingValue:]
  -[HMDSetting constraintsByKeyPathWithCurrentKeyPath:]


HMDSettingConstraint : NSObject /usr/lib/libc++.1.dylib <HMDSettingBaseProtocol>
 @property  NSNumber *numberValue
 @property  NSData *dataValue
 @property  NSUUID *identifier
 @property  NSNumber *type
 @property  id value
 @property  NSString *name
 @property  NSUUID *parentIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSettingConstraint supportsSecureCoding]

  // instance methods
  -[HMDSettingConstraint .cxx_destruct]
  -[HMDSettingConstraint name]
  -[HMDSettingConstraint numberValue]
  -[HMDSettingConstraint encodeWithCoder:]
  -[HMDSettingConstraint identifier]
  -[HMDSettingConstraint type]
  -[HMDSettingConstraint parentIdentifier]
  -[HMDSettingConstraint value]
  -[HMDSettingConstraint dataValue]
  -[HMDSettingConstraint initWithCoder:]
  -[HMDSettingConstraint initWithIdentifier:parentIdentifier:type:numberValue:dataValue:]


HMDRemoteLoginInitiatorProxyAuthentication : HMDRemoteLoginInitiatorAuthentication
 @property  NSDictionary *authResults

  // class methods
  +[HMDRemoteLoginInitiatorProxyAuthentication logCategory]

  // instance methods
  -[HMDRemoteLoginInitiatorProxyAuthentication dealloc]
  -[HMDRemoteLoginInitiatorProxyAuthentication .cxx_destruct]
  -[HMDRemoteLoginInitiatorProxyAuthentication loginType]
  -[HMDRemoteLoginInitiatorProxyAuthentication _authenticate]
  -[HMDRemoteLoginInitiatorProxyAuthentication authResults]
  -[HMDRemoteLoginInitiatorProxyAuthentication initWithSessionID:remoteDevice:workQueue:remoteMessageSender:delegate:authResults:]
  -[HMDRemoteLoginInitiatorProxyAuthentication authenticate]


HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMFActivity *activity
 @property  HMBProcessingOptions *options
 @property  CKOperationGroup *operationGroup
 @property  BOOL shouldRetry
 @property  double retryIntervalSeconds
 @property  unsigned long retryCount
 @property  NSDate *operationStartTime
 @property  BOOL finished
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper logCategory]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper maxRetryCount]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper __integerForPreferenceKey:defaultValue:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper maxOperationDurationSeconds]

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper finishWithResult:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper finishWithResult:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper setRetryCount:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper finishWithError:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper finished]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper operationStartTime]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper activity]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper retryCount]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper dealloc]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper options]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper operationGroup]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper setShouldRetry:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper shouldRetry]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper setOperationStartTime:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper initWithActivity:options:container:useAnonymousRequests:promise:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper setRetryIntervalSeconds:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper retryIntervalSeconds]


HMDFaceCropModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSData *faceBoundingBoxData
 @property  NSData *dataRepresentation
 @property  NSDate *dateCreated
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} faceBoundingBox
 @property  HMBModelCloudReference *person

  // class methods
  +[HMDFaceCropModel hmbQueries]
  +[HMDFaceCropModel hmbProperties]
  +[HMDFaceCropModel faceCropsForPersonQuery]
  +[HMDFaceCropModel faceCropsForAnyPersonQuery]
  +[HMDFaceCropModel faceCropsForNoPersonQuery]
  +[HMDFaceCropModel sentinelParentUUID]

  // instance methods
  -[HMDFaceCropModel faceBoundingBox]
  -[HMDFaceCropModel setFaceBoundingBox:]
  -[HMDFaceCropModel initWithFaceCrop:]
  -[HMDFaceCropModel createFaceCrop]
  -[HMDFaceCropModel createPersonFaceCrop]


HMDAccessoryRelaySetupEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDAccessory *hmdAccessory
 @property  unsigned long actionType

  // class methods
  +[HMDAccessoryRelaySetupEvent initialize]
  +[HMDAccessoryRelaySetupEvent uuid]
  +[HMDAccessoryRelaySetupEvent stringForActionType:]
  +[HMDAccessoryRelaySetupEvent relaySetupEventWithActionType:hmdAccessory:]

  // instance methods
  -[HMDAccessoryRelaySetupEvent actionType]
  -[HMDAccessoryRelaySetupEvent .cxx_destruct]
  -[HMDAccessoryRelaySetupEvent initWithActionType:hmdAccessory:]
  -[HMDAccessoryRelaySetupEvent hmdAccessory]
  -[HMDAccessoryRelaySetupEvent AWDMessageType]
  -[HMDAccessoryRelaySetupEvent metricForAWD]


AWDHomeKitMultiUserSettingsValueByKeyPath : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasHomeKitMultiUserSettingsValueString
 @property  NSString *homeKitMultiUserSettingsValueString
 @property  BOOL hasHomeKitMultiUserSettingsValueInteger
 @property  long long homeKitMultiUserSettingsValueInteger
 @property  BOOL hasHomeKitMultiUserSettingsValueData
 @property  NSData *homeKitMultiUserSettingsValueData

  // instance methods
  -[AWDHomeKitMultiUserSettingsValueByKeyPath copyWithZone:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath typeAsString:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath hasType]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath StringAsType:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath setType:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath .cxx_destruct]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath type]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath readFrom:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath writeTo:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath isEqual:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath copyTo:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath dictionaryRepresentation]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath mergeFrom:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath setHasType:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath setHomeKitMultiUserSettingsValueString:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath setHomeKitMultiUserSettingsValueData:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath hasHomeKitMultiUserSettingsValueString]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath setHomeKitMultiUserSettingsValueInteger:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath setHasHomeKitMultiUserSettingsValueInteger:]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath hasHomeKitMultiUserSettingsValueInteger]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath hasHomeKitMultiUserSettingsValueData]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath homeKitMultiUserSettingsValueString]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath homeKitMultiUserSettingsValueInteger]
  -[AWDHomeKitMultiUserSettingsValueByKeyPath homeKitMultiUserSettingsValueData]


HMDBulletinCharacteristicTuple : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSDate *lastPostingTime
 @property  NSString *serviceContextID
 @property  NSString *currentType
 @property  id targetValue
 @property  NSNumber *targetStateNumber
 @property  BOOL changedByThisDevice

  // class methods
  +[HMDBulletinCharacteristicTuple tupleWithServiceContextID:currentType:targetValue:targetStateNumber:changedByThisDevice:]

  // instance methods
  -[HMDBulletinCharacteristicTuple targetValue]
  -[HMDBulletinCharacteristicTuple .cxx_destruct]
  -[HMDBulletinCharacteristicTuple initWithServiceContextID:currentType:targetValue:targetStateNumber:changedByThisDevice:]
  -[HMDBulletinCharacteristicTuple setLastPostingTime:]
  -[HMDBulletinCharacteristicTuple updatePostingTime]
  -[HMDBulletinCharacteristicTuple serviceContextID]
  -[HMDBulletinCharacteristicTuple currentType]
  -[HMDBulletinCharacteristicTuple lastPostingTime]
  -[HMDBulletinCharacteristicTuple targetStateNumber]
  -[HMDBulletinCharacteristicTuple changedByThisDevice]


HMDTrigger : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBulletinIdentifiers, HMDHomeMessageReceiver, NSSecureCoding, HMFDumpState, HMFLogging, HMDDevicePreferenceDataSource, HMDBackingStoreObjectProtocol>
 @property  NSDictionary *actionContext
 @property  NSDictionary *bulletinContext
 @property  NSString *contextID
 @property  NSUUID *contextSPIUniqueIdentifier
 @property  NSMutableDictionary *actionSetMappings
 @property  NSMutableArray *actionSetUUIDs
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  BOOL active
 @property  BOOL configured
 @property  unsigned long triggerType
 @property  NSDate *mostRecentFireDate
 @property  NSString *name
 @property  NSUUID *uuid
 @property  HMDHome *home
 @property  HMDUser *owner
 @property  HMDDevice *owningDevice
 @property  BOOL ownedByThisDevice
 @property  BOOL requiresDataVersion4
 @property  NSArray *actionSets
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDTrigger supportsSecureCoding]
  +[HMDTrigger logCategory]
  +[HMDTrigger hasMessageReceiverChildren]

  // instance methods
  -[HMDTrigger messageTargetUUID]
  -[HMDTrigger _activateWithCompletion:]
  -[HMDTrigger messageReceiveQueue]
  -[HMDTrigger setOwner:]
  -[HMDTrigger owner]
  -[HMDTrigger isConfigured]
  -[HMDTrigger active]
  -[HMDTrigger setWorkQueue:]
  -[HMDTrigger logIdentifier]
  -[HMDTrigger uuid]
  -[HMDTrigger dealloc]
  -[HMDTrigger .cxx_destruct]
  -[HMDTrigger name]
  -[HMDTrigger workQueue]
  -[HMDTrigger setUuid:]
  -[HMDTrigger setHome:]
  -[HMDTrigger encodeWithCoder:]
  -[HMDTrigger setMsgDispatcher:]
  -[HMDTrigger msgDispatcher]
  -[HMDTrigger timerFired:]
  -[HMDTrigger _registerForMessages]
  -[HMDTrigger initWithName:uuid:]
  -[HMDTrigger bulletinContext]
  -[HMDTrigger setActive:]
  -[HMDTrigger home]
  -[HMDTrigger triggerType]
  -[HMDTrigger actionContext]
  -[HMDTrigger contextID]
  -[HMDTrigger invalidate]
  -[HMDTrigger removeAccessory:]
  -[HMDTrigger activateWithCompletion:]
  -[HMDTrigger removeService:]
  -[HMDTrigger setName:]
  -[HMDTrigger dumpState]
  -[HMDTrigger actionSets]
  -[HMDTrigger setTriggerType:]
  -[HMDTrigger initWithCoder:]
  -[HMDTrigger removeCharacteristic:]
  -[HMDTrigger mostRecentFireDate]
  -[HMDTrigger owningDevice]
  -[HMDTrigger _actionSetsUpdated:message:]
  -[HMDTrigger shouldActivateOnLocalDevice]
  -[HMDTrigger actionSetMappings]
  -[HMDTrigger emptyModelObject]
  -[HMDTrigger _updateActionSetRequest:postUpdate:]
  -[HMDTrigger _checkForNoActions]
  -[HMDTrigger _forceEvaluate]
  -[HMDTrigger setMostRecentFireDate:]
  -[HMDTrigger sendTriggerFiredNotification:]
  -[HMDTrigger _isTriggerFiredNotificationEntitled]
  -[HMDTrigger isAssociatedWithAccessory:]
  -[HMDTrigger removeActionSet:postUpdate:]
  -[HMDTrigger removeAllActionSets]
  -[HMDTrigger actionSetUUIDs]
  -[HMDTrigger hasNoActions]
  -[HMDTrigger markChangedForMessage:triggerModel:]
  -[HMDTrigger modelContainsTriggerFired:]
  -[HMDTrigger updateEventTriggerMessage:message:relay:]
  -[HMDTrigger _renameRequest:]
  -[HMDTrigger _handleAddTriggerOwnedActionSetRequest:]
  -[HMDTrigger _handleRemoveTriggerOwnedActionSetRequest:postUpdate:]
  -[HMDTrigger _handleAddActionSetRequest:]
  -[HMDTrigger _handleRemoveActionSetRequest:postUpdate:]
  -[HMDTrigger actionSetMapKeys]
  -[HMDTrigger setActionSetForKey:value:]
  -[HMDTrigger confirmResident]
  -[HMDTrigger actionSetForKey:]
  -[HMDTrigger removeActionSetForKey:]
  -[HMDTrigger _activateTriggerRequest:]
  -[HMDTrigger setEnabled:message:]
  -[HMDTrigger _executeActionSets:captureCurrentState:completionHandler:]
  -[HMDTrigger _handleRenameRequest:]
  -[HMDTrigger _handleUpdateActionSetRequest:]
  -[HMDTrigger _handleActivateTriggerRequest:]
  -[HMDTrigger setOwningDevice:]
  -[HMDTrigger _recentFireDateUpdated:]
  -[HMDTrigger setActionSetUUIDs:]
  -[HMDTrigger shouldEncodeLastFireDate:]
  -[HMDTrigger _transactionObjectUpdated:newValues:message:]
  -[HMDTrigger _transactionObjectRemoved:message:]
  -[HMDTrigger modelObjectWithChangeType:version:]
  -[HMDTrigger messageReceiverChildren]
  -[HMDTrigger supportsDeviceWithCapabilities:]
  -[HMDTrigger transactionObjectUpdated:newValues:message:]
  -[HMDTrigger transactionObjectRemoved:message:]
  -[HMDTrigger initWithModel:home:message:]
  -[HMDTrigger requiresDataVersion4]
  -[HMDTrigger compatible:user:]
  -[HMDTrigger fixupForReplacementAccessory:]
  -[HMDTrigger reEvaluate:]
  -[HMDTrigger triggerFired]
  -[HMDTrigger configure:messageDispatcher:queue:]
  -[HMDTrigger isOwnedByThisDevice]
  -[HMDTrigger activateAfterResidentChangeWithCompletion:]
  -[HMDTrigger markChangedForMessage:]
  -[HMDTrigger _activate:completionHandler:]
  -[HMDTrigger _handleUpdateActionSetRequest:postUpdate:]
  -[HMDTrigger _executeActionSetsWithCompletionHandler:]
  -[HMDTrigger userDidConfirmExecute:completionHandler:]
  -[HMDTrigger _fillBaseObjectChangeModel:]
  -[HMDTrigger _handleTriggerUpdate:message:]
  -[HMDTrigger modelObjectWithChangeType:]
  -[HMDTrigger backingStoreObjects:]
  -[HMDTrigger _addActionSet:]
  -[HMDTrigger setActionSetMappings:]
  -[HMDTrigger contextSPIUniqueIdentifier]


HMDTriggerModel : HMDBackingStoreModelObject
 @property  NSString *name
 @property  NSArray *currentActionSets
 @property  NSNumber *active
 @property  NSDate *mostRecentFireDate
 @property  HMDUser *owner
 @property  HMDDevice *owningDevice

  // class methods
  +[HMDTriggerModel properties]

  // instance methods
  -[HMDTriggerModel createPayload]
  -[HMDTriggerModel dependentUUIDs]


HMDUserActionPredictionManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMBLocalZoneModelObserver, HMDDatabaseZoneManagerDataSource, HMDDatabaseZoneManagerDelegate, HMDUserActionPredictionDataSource>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDUserActionPredictionDataReceiver> *dataReceiver
 @property  HMDUserActionPredictionContainer *predictionContainer
 @property  HMBLocalZone *localZone
 @property  HMDDatabaseZoneManager *zoneManager
 @property  NSUUID *UUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL dataAvailableForUserActionPredictionDataSource

  // instance methods
  -[HMDUserActionPredictionManager zoneManager]
  -[HMDUserActionPredictionManager .cxx_destruct]
  -[HMDUserActionPredictionManager workQueue]
  -[HMDUserActionPredictionManager localZone]
  -[HMDUserActionPredictionManager UUID]
  -[HMDUserActionPredictionManager initWithHome:]
  -[HMDUserActionPredictionManager localZone:didProcessModelDeletion:]
  -[HMDUserActionPredictionManager localZone:didProcessModelCreation:]
  -[HMDUserActionPredictionManager localZone:didProcessModelUpdate:]
  -[HMDUserActionPredictionManager setLocalZone:]
  -[HMDUserActionPredictionManager initWithUUID:zoneManager:dataReceiver:workQueue:]
  -[HMDUserActionPredictionManager dataReceiver]
  -[HMDUserActionPredictionManager handleAccessoryRemovedNotification:]
  -[HMDUserActionPredictionManager handleActionSetRemovedNotification:]
  -[HMDUserActionPredictionManager handleServiceRemovedNotification:]
  -[HMDUserActionPredictionManager handleServiceGroupRemovedNotification:]
  -[HMDUserActionPredictionManager handleServiceGroupUpdatedNotification:]
  -[HMDUserActionPredictionManager handleMediaSystemAddedNotification:]
  -[HMDUserActionPredictionManager handleMediaSystemRemovedNotification:]
  -[HMDUserActionPredictionManager _removePredictionsWithPredictionTargetUUID:]
  -[HMDUserActionPredictionManager _removePredictionsWithTargetServiceUUID:]
  -[HMDUserActionPredictionManager _removeServiceGroupFromPredictions:]
  -[HMDUserActionPredictionManager _updatePredictionsWithServiceGroup:]
  -[HMDUserActionPredictionManager _updatePredictionsWithMediaSystem:]
  -[HMDUserActionPredictionManager _removeMediaSystemFromPredictions:]
  -[HMDUserActionPredictionManager isDataAvailableForUserActionPredictionDataSource]
  -[HMDUserActionPredictionManager predictionContainer]
  -[HMDUserActionPredictionManager _addOrUpdateUserActionPredictions:]
  -[HMDUserActionPredictionManager _addOrUpdateUserActionPredictionsAndRemoveNonUpdatedPredictions:]
  -[HMDUserActionPredictionManager _removeUserActionPredictions:]
  -[HMDUserActionPredictionManager _removeZones]
  -[HMDUserActionPredictionManager _handleCreatedOrUpdatedModel:]
  -[HMDUserActionPredictionManager _handleDeletedModel:]
  -[HMDUserActionPredictionManager manager:shouldShareWithUser:]
  -[HMDUserActionPredictionManager zoneManagerDidStart:]
  -[HMDUserActionPredictionManager zoneManagerDidStop:]
  -[HMDUserActionPredictionManager fetchPredictionsWithLimitForUserActionPredictionDataSource:]
  -[HMDUserActionPredictionManager addOrUpdateUserActionPredictions:]
  -[HMDUserActionPredictionManager addOrUpdateUserActionPredictionsAndRemoveNonUpdatedPredictions:]
  -[HMDUserActionPredictionManager removeUserActionPredictions:]
  -[HMDUserActionPredictionManager configureWithHome:notificationCenter:]
  -[HMDUserActionPredictionManager encodePredictionsWithCoder:]
  -[HMDUserActionPredictionManager removeZones]


HMDHAPAccessoryAdvertisement : HMDAccessoryAdvertisement
 @property  BOOL pairingPresent
 @property  NSData *setupHash

  // instance methods
  -[HMDHAPAccessoryAdvertisement .cxx_destruct]
  -[HMDHAPAccessoryAdvertisement isEqual:]
  -[HMDHAPAccessoryAdvertisement pairingPresent]
  -[HMDHAPAccessoryAdvertisement setupHash]
  -[HMDHAPAccessoryAdvertisement initWithIdentifier:name:categoryIdentifier:pairingPresent:setupHash:]
  -[HMDHAPAccessoryAdvertisement setSetupHash:]


HMDUserPresenceFeed : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDUser *user
 @property  HMDDevice *residentDevice
 @property  HMUserPresenceAuthorization *presenceAuthStatus
 @property  HMUserPresenceCompute *presenceComputeStatus
 @property  HMDUserPresenceRegion *presenceRegion
 @property  HMDUserPresenceUpdateReason *reason

  // instance methods
  -[HMDUserPresenceFeed user]
  -[HMDUserPresenceFeed .cxx_destruct]
  -[HMDUserPresenceFeed residentDevice]
  -[HMDUserPresenceFeed isEqual:]
  -[HMDUserPresenceFeed presenceAuthStatus]
  -[HMDUserPresenceFeed presenceComputeStatus]
  -[HMDUserPresenceFeed reason]
  -[HMDUserPresenceFeed presenceRegion]
  -[HMDUserPresenceFeed initWithUser:residentDevice:presenceAuthStatus:presenceComputeStatus:presenceRegion:reason:]


HMDMediaSystemSymptomHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, HMFLogging>
 @property  NSUUID *uuid
 @property  HMDMediaSystem *mediaSystem
 @property  NSDictionary *currentSymptoms
 @property  NSSet *mergedSymptoms
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMediaSystemSymptomHandler supportsSecureCoding]
  +[HMDMediaSystemSymptomHandler logCategory]

  // instance methods
  -[HMDMediaSystemSymptomHandler setWorkQueue:]
  -[HMDMediaSystemSymptomHandler logIdentifier]
  -[HMDMediaSystemSymptomHandler uuid]
  -[HMDMediaSystemSymptomHandler .cxx_destruct]
  -[HMDMediaSystemSymptomHandler workQueue]
  -[HMDMediaSystemSymptomHandler encodeWithCoder:]
  -[HMDMediaSystemSymptomHandler setMsgDispatcher:]
  -[HMDMediaSystemSymptomHandler msgDispatcher]
  -[HMDMediaSystemSymptomHandler currentSymptoms]
  -[HMDMediaSystemSymptomHandler initWithCoder:]
  -[HMDMediaSystemSymptomHandler mediaSystem]
  -[HMDMediaSystemSymptomHandler _initializePlaceholderSymptomsDict:]
  -[HMDMediaSystemSymptomHandler refreshCurrentDeviceSymptoms]
  -[HMDMediaSystemSymptomHandler _refreshCurrentDeviceSymptoms]
  -[HMDMediaSystemSymptomHandler _handleNewDiscoveredSymptoms:forAccessory:]
  -[HMDMediaSystemSymptomHandler _updateBackingStoreModelWithNewSymptoms:]
  -[HMDMediaSystemSymptomHandler setCurrentSymptoms:]
  -[HMDMediaSystemSymptomHandler mergedSymptoms]
  -[HMDMediaSystemSymptomHandler initWithMediaSystem:symptoms:]
  -[HMDMediaSystemSymptomHandler configureWithWorkQueue:messageDispatcher:]
  -[HMDMediaSystemSymptomHandler handleNewDiscoveredSymptoms:forAccessory:]
  -[HMDMediaSystemSymptomHandler handleMediaSystemSymptoms:message:]


HMDCameraRecordingManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDCameraRecordingSessionNotificationTriggerDelegate, HMDCameraRecordingSettingsControlDelegate, HMDDevicePreferenceDataSource, HMFLogging, HMDCameraRecordingSessionDelegate, HMDHomeMessageReceiver, HMDCameraClipManagerDelegate, HMFTimerDelegate>
 @property  HMDStreamDataChunkAssembler *dataChunkAssembler
 @property  NSString *logIdentifier
 @property  HMDCameraRecordingResidentElector *recordingResidentElector
 @property  NSDictionary *homePresenceByPairingIdentity
 @property  HMDCameraRecordingBulkSendDataReadEvent *readEvent
 @property  BOOL didShutDown
 @property  NSString *bulkSendSessionOpenReason
 @property  HMDCameraFeaturesDataSource *dataSource
 @property  HMDCameraSignificantEventServer *significantEventServer
 @property  NSUUID *cameraUUID
 @property  long long bulkSendSessionReadTimeoutFactor
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDCameraRecordingSessionNotificationTrigger *notificationTrigger
 @property  HMDCameraRecordingSettingsControl *recordingSettingsControl
 @property  HMDCameraRecordingManagerDependencyFactory *dependencyFactory
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDHAPAccessory *accessory
 @property  HMDCameraProfile *camera
 @property  <HMDDataStreamBulkSendSession> *currentBulkSendSession
 @property  HMDCameraRecordingBulkSendSessionInitiator *bulkSendSessionInitiator
 @property  HMFTimer *readCallbackTimer
 @property  HMFTimer *sessionRetryTimer
 @property  HMDCameraRecordingSessionRetryContext *sessionRetryContext
 @property  BOOL motionActive
 @property  HMDCameraRecordingSession *currentRecordingSession
 @property  NSMutableSet *activeRecordingSessions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDCameraRecordingManager logCategory]
  +[HMDCameraRecordingManager hasMessageReceiverChildren]

  // instance methods
  -[HMDCameraRecordingManager messageTargetUUID]
  -[HMDCameraRecordingManager _start]
  -[HMDCameraRecordingManager messageReceiveQueue]
  -[HMDCameraRecordingManager timerDidFire:]
  -[HMDCameraRecordingManager logIdentifier]
  -[HMDCameraRecordingManager shutDown]
  -[HMDCameraRecordingManager dealloc]
  -[HMDCameraRecordingManager .cxx_destruct]
  -[HMDCameraRecordingManager workQueue]
  -[HMDCameraRecordingManager msgDispatcher]
  -[HMDCameraRecordingManager accessory]
  -[HMDCameraRecordingManager dependencyFactory]
  -[HMDCameraRecordingManager dataSource]
  -[HMDCameraRecordingManager camera]
  -[HMDCameraRecordingManager start]
  -[HMDCameraRecordingManager supportsDeviceWithCapabilities:]
  -[HMDCameraRecordingManager initWithCamera:recordingManagementService:dependencyFactory:]
  -[HMDCameraRecordingManager recordingResidentElector]
  -[HMDCameraRecordingManager _shutDown]
  -[HMDCameraRecordingManager didShutDown]
  -[HMDCameraRecordingManager setMotionActive:]
  -[HMDCameraRecordingManager currentRecordingSession]
  -[HMDCameraRecordingManager _resetRetryContextWithReason:]
  -[HMDCameraRecordingManager _coordinateRecordingSessionForTrigger:]
  -[HMDCameraRecordingManager _clipManagerDidStartUpCloudZone]
  -[HMDCameraRecordingManager cameraUUID]
  -[HMDCameraRecordingManager _closeCurrentSessionsWithReason:]
  -[HMDCameraRecordingManager isMotionActive]
  -[HMDCameraRecordingManager significantEventServer]
  -[HMDCameraRecordingManager recordingSettingsControl]
  -[HMDCameraRecordingManager bulkSendSessionInitiator]
  -[HMDCameraRecordingManager notificationTrigger]
  -[HMDCameraRecordingManager handleStartRecordingSessionRequest:]
  -[HMDCameraRecordingManager handleCameraSettingsDidChangeNotification:]
  -[HMDCameraRecordingManager setDidShutDown:]
  -[HMDCameraRecordingManager bulkSendSessionOpenReason]
  -[HMDCameraRecordingManager homePresenceByPairingIdentity]
  -[HMDCameraRecordingManager _startRecordingSessionForTrigger:homePresenceByPairingIdentity:reason:]
  -[HMDCameraRecordingManager _forwardRecordingSessionForTrigger:withSortedDevices:withRetries:]
  -[HMDCameraRecordingManager setCurrentRecordingSession:]
  -[HMDCameraRecordingManager activeRecordingSessions]
  -[HMDCameraRecordingManager _startRecordingSessionForTrigger:homePresenceByPairingIdentity:reason:completionCallback:]
  -[HMDCameraRecordingManager sessionRetryTimer]
  -[HMDCameraRecordingManager currentBulkSendSession]
  -[HMDCameraRecordingManager _createRecordingSessionForTrigger:homePresenceByPairingIdentity:]
  -[HMDCameraRecordingManager _resetCurrentRecordingSession:]
  -[HMDCameraRecordingManager _handleBulkSendSessionCreated:]
  -[HMDCameraRecordingManager setReadEvent:]
  -[HMDCameraRecordingManager readEvent]
  -[HMDCameraRecordingManager _submitReadEventWithStatus:]
  -[HMDCameraRecordingManager _startBulkSendDataReadEvent]
  -[HMDCameraRecordingManager bulkSendSessionReadTimeoutFactor]
  -[HMDCameraRecordingManager setReadCallbackTimer:]
  -[HMDCameraRecordingManager readCallbackTimer]
  -[HMDCameraRecordingManager setCurrentBulkSendSession:]
  -[HMDCameraRecordingManager _readDataForCurrentSession]
  -[HMDCameraRecordingManager _handleDataReceived:]
  -[HMDCameraRecordingManager setSessionRetryTimer:]
  -[HMDCameraRecordingManager sessionRetryContext]
  -[HMDCameraRecordingManager dataChunkAssembler]
  -[HMDCameraRecordingManager setDataChunkAssembler:]
  -[HMDCameraRecordingManager _bulkSendReadDidReceiveStreamDataChunk:]
  -[HMDCameraRecordingManager setSessionRetryContext:]
  -[HMDCameraRecordingManager _startSessionRetryTimer]
  -[HMDCameraRecordingManager _closeEventReasonForRecordingSessionError:]
  -[HMDCameraRecordingManager notificationTrigger:didObserveTriggerType:changeToActive:]
  -[HMDCameraRecordingManager recordingSettingsControlDidConfigure:]
  -[HMDCameraRecordingManager session:didEndWithError:]
  -[HMDCameraRecordingManager clipManagerDidStartUpCloudZone:]
  -[HMDCameraRecordingManager clipManagerDidStop:]
  -[HMDCameraRecordingManager initWithCamera:recordingManagementService:]


HMDServiceNameComponents : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *rawServiceName
 @property  NSString *serviceName
 @property  NSString *roomName
 @property  NSString *format

  // class methods
  +[HMDServiceNameComponents componentsWithRawServiceName:rawRoomName:localizedFormat:]
  +[HMDServiceNameComponents componentsWithRawServiceName:rawRoomName:]

  // instance methods
  -[HMDServiceNameComponents setFormat:]
  -[HMDServiceNameComponents format]
  -[HMDServiceNameComponents .cxx_destruct]
  -[HMDServiceNameComponents rawServiceName]
  -[HMDServiceNameComponents setRoomName:]
  -[HMDServiceNameComponents setServiceName:]
  -[HMDServiceNameComponents setRawServiceName:]
  -[HMDServiceNameComponents serviceName]
  -[HMDServiceNameComponents roomName]
  -[HMDServiceNameComponents composedName]
  -[HMDServiceNameComponents initWithRawServiceName:rawRoomName:localizedFormat:]


HMDShortcutAction : HMDAction
 @property  WFHomeWorkflow *shortcut
 @property  WFHomeWorkflowController *controller

  // class methods
  +[HMDShortcutAction supportsSecureCoding]
  +[HMDShortcutAction logCategory]
  +[HMDShortcutAction actionWithDictionaryRepresentation:home:actionSet:]
  +[HMDShortcutAction actionWithDictionaryRepresentation:home:]

  // instance methods
  -[HMDShortcutAction copyWithZone:]
  -[HMDShortcutAction dealloc]
  -[HMDShortcutAction .cxx_destruct]
  -[HMDShortcutAction encodeWithCoder:]
  -[HMDShortcutAction type]
  -[HMDShortcutAction modelClass]
  -[HMDShortcutAction shortcut]
  -[HMDShortcutAction controller]
  -[HMDShortcutAction dictionaryRepresentation]
  -[HMDShortcutAction requiresDeviceUnlock]
  -[HMDShortcutAction initWithCoder:]
  -[HMDShortcutAction associatedAccessories]
  -[HMDShortcutAction isAssociatedWithAccessory:]
  -[HMDShortcutAction modelObjectWithChangeType:version:]
  -[HMDShortcutAction transactionObjectUpdated:newValues:message:]
  -[HMDShortcutAction initWithSerializedShortcut:uuid:actionSet:]
  -[HMDShortcutAction stateDump]
  -[HMDShortcutAction entitlementsForNotification]
  -[HMDShortcutAction removeShortcut]
  -[HMDShortcutAction executeWithSource:completionHandler:]
  -[HMDShortcutAction initWithModelObject:parent:error:]


HMDUserCloudShareManagerCreatorDependency : NSObject /usr/lib/libc++.1.dylib <HMDUserCloudShareManagerCreatorDependency>
  // instance methods
  -[HMDUserCloudShareManagerCreatorDependency init]
  -[HMDUserCloudShareManagerCreatorDependency createUserCloudShareControllerWithDelegate:queue:]


HMDUserCloudShareManager : NSObject /usr/lib/libc++.1.dylib <HMFMessageReceiver, HMDUserCloudShareControllerDelegate>
 @property  NSUUID *identifier
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDHomeManager *homeManager
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMDUserCloudShareController *userCloudShareController
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserCloudShareManager logCategory]

  // instance methods
  -[HMDUserCloudShareManager messageTargetUUID]
  -[HMDUserCloudShareManager messageDestination]
  -[HMDUserCloudShareManager messageReceiveQueue]
  -[HMDUserCloudShareManager initWithHomeManager:]
  -[HMDUserCloudShareManager .cxx_destruct]
  -[HMDUserCloudShareManager identifier]
  -[HMDUserCloudShareManager clientQueue]
  -[HMDUserCloudShareManager messageDispatcher]
  -[HMDUserCloudShareManager registerForMessages]
  -[HMDUserCloudShareManager homeManager]
  -[HMDUserCloudShareManager initWithHomeManager:dependency:]
  -[HMDUserCloudShareManager setMessageDispatcher:]
  -[HMDUserCloudShareManager handleHomeChangedNotification:]
  -[HMDUserCloudShareManager handleXPCConnectionInvalidated:]
  -[HMDUserCloudShareManager _handleAccessoryAdded:]
  -[HMDUserCloudShareManager _handleEnableMultiUserChangedNotification:]
  -[HMDUserCloudShareManager _handleUserSettingsUpdatedNotification:]
  -[HMDUserCloudShareManager _handleLocalHomeDataRemovedNotification:]
  -[HMDUserCloudShareManager handleUsersChangedNotification:]
  -[HMDUserCloudShareManager _handleRegisterRequest:]
  -[HMDUserCloudShareManager _postMultiUserStatusChangedNotification]
  -[HMDUserCloudShareManager userCloudShareController]
  -[HMDUserCloudShareManager userCloudShareController:sendShareRequestMessageWithConnection:fromUser:toUser:home:shareURL:shareToken:containerID:completion:]
  -[HMDUserCloudShareManager userCloudShareController:sendRepairInfo:toConnection:home:containerID:]
  -[HMDUserCloudShareManager userCloudShareController:wakeClientWithContainerID:]
  -[HMDUserCloudShareManager userCloudShareController:wakeClientForRepairWithContainerID:]
  -[HMDUserCloudShareManager userCloudShareController:timerWithInterval:]
  -[HMDUserCloudShareManager currentDateForUserCloudShareController:]
  -[HMDUserCloudShareManager configureWithMessageDispatcher:]
  -[HMDUserCloudShareManager handleRemoteUserClientCloudShareRequest:]
  -[HMDUserCloudShareManager handleRemoteUserClientCloudShareRepairRequest:]
  -[HMDUserCloudShareManager _handleDeregisterRequest:]


HMDCameraRecordingSessionSignificantEvent : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSMutableCopying>
 @property  unsigned long reason
 @property  NSDate *dateOfOccurrence
 @property  unsigned long confidenceLevel
 @property  NSUUID *sessionEntityUUID
 @property  NSSet *faceClassifications
 @property  NSData *heroFrameData
 @property  NSData *faceCropData
 @property  double timeOffsetWithinClip
 @property  NSUUID *UUID

  // instance methods
  -[HMDCameraRecordingSessionSignificantEvent copyWithZone:]
  -[HMDCameraRecordingSessionSignificantEvent faceCropData]
  -[HMDCameraRecordingSessionSignificantEvent setReason:]
  -[HMDCameraRecordingSessionSignificantEvent attributeDescriptions]
  -[HMDCameraRecordingSessionSignificantEvent setConfidenceLevel:]
  -[HMDCameraRecordingSessionSignificantEvent .cxx_destruct]
  -[HMDCameraRecordingSessionSignificantEvent initWithUUID:]
  -[HMDCameraRecordingSessionSignificantEvent UUID]
  -[HMDCameraRecordingSessionSignificantEvent confidenceLevel]
  -[HMDCameraRecordingSessionSignificantEvent isEqual:]
  -[HMDCameraRecordingSessionSignificantEvent timeOffsetWithinClip]
  -[HMDCameraRecordingSessionSignificantEvent mutableCopyWithZone:]
  -[HMDCameraRecordingSessionSignificantEvent reason]
  -[HMDCameraRecordingSessionSignificantEvent dateOfOccurrence]
  -[HMDCameraRecordingSessionSignificantEvent sessionEntityUUID]
  -[HMDCameraRecordingSessionSignificantEvent faceClassifications]
  -[HMDCameraRecordingSessionSignificantEvent heroFrameData]
  -[HMDCameraRecordingSessionSignificantEvent setDateOfOccurrence:]
  -[HMDCameraRecordingSessionSignificantEvent setSessionEntityUUID:]
  -[HMDCameraRecordingSessionSignificantEvent setFaceClassifications:]
  -[HMDCameraRecordingSessionSignificantEvent setHeroFrameData:]
  -[HMDCameraRecordingSessionSignificantEvent setFaceCropData:]
  -[HMDCameraRecordingSessionSignificantEvent setTimeOffsetWithinClip:]


HMDMutableCameraRecordingSessionSignificantEvent : HMDCameraRecordingSessionSignificantEvent
 @property  unsigned long reason
 @property  NSDate *dateOfOccurrence
 @property  unsigned long confidenceLevel
 @property  NSUUID *sessionEntityUUID
 @property  NSSet *faceClassifications
 @property  NSData *heroFrameData
 @property  NSData *faceCropData
 @property  double timeOffsetWithinClip

  // instance methods
  -[HMDMutableCameraRecordingSessionSignificantEvent copyWithZone:]


HMDHomeObjectChangeHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDHome *home
 @property  NSObject<OS_dispatch_queue> *workQueue

  // instance methods
  -[HMDHomeObjectChangeHandler .cxx_destruct]
  -[HMDHomeObjectChangeHandler workQueue]
  -[HMDHomeObjectChangeHandler home]
  -[HMDHomeObjectChangeHandler initWithHome:]
  -[HMDHomeObjectChangeHandler handleObjectAdd:message:]
  -[HMDHomeObjectChangeHandler handleObjectRemove:message:]
  -[HMDHomeObjectChangeHandler handleObjectUpdate:newValues:message:]


HMDCameraClipsQuotaDisableCameraResponse : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <CKCodeOperationMessageMutation, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDCameraClipsQuotaDisableCameraResponse copyWithZone:]
  -[HMDCameraClipsQuotaDisableCameraResponse readFrom:]
  -[HMDCameraClipsQuotaDisableCameraResponse writeTo:]
  -[HMDCameraClipsQuotaDisableCameraResponse isEqual:]
  -[HMDCameraClipsQuotaDisableCameraResponse copyTo:]
  -[HMDCameraClipsQuotaDisableCameraResponse dictionaryRepresentation]
  -[HMDCameraClipsQuotaDisableCameraResponse mergeFrom:]


HMDCameraClipsQuotaDisableCameraMessage : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <CKCodeOperationMessageMutation, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasZoneName
 @property  NSString *zoneName

  // instance methods
  -[HMDCameraClipsQuotaDisableCameraMessage copyWithZone:]
  -[HMDCameraClipsQuotaDisableCameraMessage zoneName]
  -[HMDCameraClipsQuotaDisableCameraMessage hasZoneName]
  -[HMDCameraClipsQuotaDisableCameraMessage .cxx_destruct]
  -[HMDCameraClipsQuotaDisableCameraMessage setZoneName:]
  -[HMDCameraClipsQuotaDisableCameraMessage readFrom:]
  -[HMDCameraClipsQuotaDisableCameraMessage writeTo:]
  -[HMDCameraClipsQuotaDisableCameraMessage isEqual:]
  -[HMDCameraClipsQuotaDisableCameraMessage copyTo:]
  -[HMDCameraClipsQuotaDisableCameraMessage dictionaryRepresentation]
  -[HMDCameraClipsQuotaDisableCameraMessage mergeFrom:]


AWDHomeKitSoftwareUpdateFetched : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  BOOL hasResultErrorCode
 @property  unsigned int resultErrorCode
 @property  BOOL hasSource
 @property  int source
 @property  BOOL hasWasNewUpdateFetched
 @property  BOOL wasNewUpdateFetched

  // instance methods
  -[AWDHomeKitSoftwareUpdateFetched copyWithZone:]
  -[AWDHomeKitSoftwareUpdateFetched sourceAsString:]
  -[AWDHomeKitSoftwareUpdateFetched setSource:]
  -[AWDHomeKitSoftwareUpdateFetched StringAsSource:]
  -[AWDHomeKitSoftwareUpdateFetched hasSource]
  -[AWDHomeKitSoftwareUpdateFetched source]
  -[AWDHomeKitSoftwareUpdateFetched setHasSource:]
  -[AWDHomeKitSoftwareUpdateFetched timestamp]
  -[AWDHomeKitSoftwareUpdateFetched setTimestamp:]
  -[AWDHomeKitSoftwareUpdateFetched setHasDuration:]
  -[AWDHomeKitSoftwareUpdateFetched setHasTimestamp:]
  -[AWDHomeKitSoftwareUpdateFetched readFrom:]
  -[AWDHomeKitSoftwareUpdateFetched writeTo:]
  -[AWDHomeKitSoftwareUpdateFetched isEqual:]
  -[AWDHomeKitSoftwareUpdateFetched setDuration:]
  -[AWDHomeKitSoftwareUpdateFetched copyTo:]
  -[AWDHomeKitSoftwareUpdateFetched dictionaryRepresentation]
  -[AWDHomeKitSoftwareUpdateFetched hasDuration]
  -[AWDHomeKitSoftwareUpdateFetched mergeFrom:]
  -[AWDHomeKitSoftwareUpdateFetched hasTimestamp]
  -[AWDHomeKitSoftwareUpdateFetched duration]
  -[AWDHomeKitSoftwareUpdateFetched setResultErrorCode:]
  -[AWDHomeKitSoftwareUpdateFetched setHasResultErrorCode:]
  -[AWDHomeKitSoftwareUpdateFetched hasResultErrorCode]
  -[AWDHomeKitSoftwareUpdateFetched setWasNewUpdateFetched:]
  -[AWDHomeKitSoftwareUpdateFetched setHasWasNewUpdateFetched:]
  -[AWDHomeKitSoftwareUpdateFetched hasWasNewUpdateFetched]
  -[AWDHomeKitSoftwareUpdateFetched resultErrorCode]
  -[AWDHomeKitSoftwareUpdateFetched wasNewUpdateFetched]


AWDHomeKitVideoResolutionCount : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasResolution
 @property  int resolution
 @property  BOOL hasCount
 @property  unsigned int count

  // instance methods
  -[AWDHomeKitVideoResolutionCount copyWithZone:]
  -[AWDHomeKitVideoResolutionCount setCount:]
  -[AWDHomeKitVideoResolutionCount resolution]
  -[AWDHomeKitVideoResolutionCount readFrom:]
  -[AWDHomeKitVideoResolutionCount hasCount]
  -[AWDHomeKitVideoResolutionCount writeTo:]
  -[AWDHomeKitVideoResolutionCount setHasCount:]
  -[AWDHomeKitVideoResolutionCount isEqual:]
  -[AWDHomeKitVideoResolutionCount count]
  -[AWDHomeKitVideoResolutionCount copyTo:]
  -[AWDHomeKitVideoResolutionCount dictionaryRepresentation]
  -[AWDHomeKitVideoResolutionCount mergeFrom:]
  -[AWDHomeKitVideoResolutionCount setResolution:]
  -[AWDHomeKitVideoResolutionCount setHasResolution:]
  -[AWDHomeKitVideoResolutionCount hasResolution]
  -[AWDHomeKitVideoResolutionCount resolutionAsString:]
  -[AWDHomeKitVideoResolutionCount StringAsResolution:]


HMProvisionAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMProvisionAnisetteDataRequest supportsSecureCoding]
  +[HMProvisionAnisetteDataRequest messageName]
  +[HMProvisionAnisetteDataRequest objWithDict:]
  +[HMProvisionAnisetteDataRequest objWithMessage:]
  +[HMProvisionAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMProvisionAnisetteDataRequest messageName]
  -[HMProvisionAnisetteDataRequest messagePayload]
  -[HMProvisionAnisetteDataRequest xpcMessageName]


HMProvisionAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL didSucceed
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMProvisionAnisetteDataResponse supportsSecureCoding]
  +[HMProvisionAnisetteDataResponse messageName]
  +[HMProvisionAnisetteDataResponse objWithDict:]
  +[HMProvisionAnisetteDataResponse objWithMessage:]
  +[HMProvisionAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMProvisionAnisetteDataResponse messageName]
  -[HMProvisionAnisetteDataResponse setDidSucceed:]
  -[HMProvisionAnisetteDataResponse encodeWithCoder:]
  -[HMProvisionAnisetteDataResponse messagePayload]
  -[HMProvisionAnisetteDataResponse didSucceed]
  -[HMProvisionAnisetteDataResponse initWithCoder:]
  -[HMProvisionAnisetteDataResponse xpcMessageName]


HMSyncAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSData *simData
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSyncAnisetteDataRequest supportsSecureCoding]
  +[HMSyncAnisetteDataRequest messageName]
  +[HMSyncAnisetteDataRequest objWithDict:]
  +[HMSyncAnisetteDataRequest objWithMessage:]
  +[HMSyncAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMSyncAnisetteDataRequest .cxx_destruct]
  -[HMSyncAnisetteDataRequest messageName]
  -[HMSyncAnisetteDataRequest encodeWithCoder:]
  -[HMSyncAnisetteDataRequest simData]
  -[HMSyncAnisetteDataRequest messagePayload]
  -[HMSyncAnisetteDataRequest initWithCoder:]
  -[HMSyncAnisetteDataRequest xpcMessageName]
  -[HMSyncAnisetteDataRequest setSimData:]


HMSyncAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL didSucceed
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMSyncAnisetteDataResponse supportsSecureCoding]
  +[HMSyncAnisetteDataResponse messageName]
  +[HMSyncAnisetteDataResponse objWithDict:]
  +[HMSyncAnisetteDataResponse objWithMessage:]
  +[HMSyncAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMSyncAnisetteDataResponse messageName]
  -[HMSyncAnisetteDataResponse setDidSucceed:]
  -[HMSyncAnisetteDataResponse encodeWithCoder:]
  -[HMSyncAnisetteDataResponse messagePayload]
  -[HMSyncAnisetteDataResponse didSucceed]
  -[HMSyncAnisetteDataResponse initWithCoder:]
  -[HMSyncAnisetteDataResponse xpcMessageName]


HMEraseAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMEraseAnisetteDataRequest supportsSecureCoding]
  +[HMEraseAnisetteDataRequest messageName]
  +[HMEraseAnisetteDataRequest objWithDict:]
  +[HMEraseAnisetteDataRequest objWithMessage:]
  +[HMEraseAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMEraseAnisetteDataRequest messageName]
  -[HMEraseAnisetteDataRequest messagePayload]
  -[HMEraseAnisetteDataRequest xpcMessageName]


HMEraseAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL didSucceed
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMEraseAnisetteDataResponse supportsSecureCoding]
  +[HMEraseAnisetteDataResponse messageName]
  +[HMEraseAnisetteDataResponse objWithDict:]
  +[HMEraseAnisetteDataResponse objWithMessage:]
  +[HMEraseAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMEraseAnisetteDataResponse messageName]
  -[HMEraseAnisetteDataResponse setDidSucceed:]
  -[HMEraseAnisetteDataResponse encodeWithCoder:]
  -[HMEraseAnisetteDataResponse messagePayload]
  -[HMEraseAnisetteDataResponse didSucceed]
  -[HMEraseAnisetteDataResponse initWithCoder:]
  -[HMEraseAnisetteDataResponse xpcMessageName]


HMFetchAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  BOOL shouldProvision
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFetchAnisetteDataRequest supportsSecureCoding]
  +[HMFetchAnisetteDataRequest messageName]
  +[HMFetchAnisetteDataRequest objWithDict:]
  +[HMFetchAnisetteDataRequest objWithMessage:]
  +[HMFetchAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMFetchAnisetteDataRequest setShouldProvision:]
  -[HMFetchAnisetteDataRequest messageName]
  -[HMFetchAnisetteDataRequest encodeWithCoder:]
  -[HMFetchAnisetteDataRequest messagePayload]
  -[HMFetchAnisetteDataRequest initWithCoder:]
  -[HMFetchAnisetteDataRequest xpcMessageName]
  -[HMFetchAnisetteDataRequest shouldProvision]


HMFetchAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  AKAnisetteData *anisetteData
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMFetchAnisetteDataResponse supportsSecureCoding]
  +[HMFetchAnisetteDataResponse messageName]
  +[HMFetchAnisetteDataResponse objWithDict:]
  +[HMFetchAnisetteDataResponse objWithMessage:]
  +[HMFetchAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMFetchAnisetteDataResponse anisetteData]
  -[HMFetchAnisetteDataResponse setAnisetteData:]
  -[HMFetchAnisetteDataResponse .cxx_destruct]
  -[HMFetchAnisetteDataResponse messageName]
  -[HMFetchAnisetteDataResponse encodeWithCoder:]
  -[HMFetchAnisetteDataResponse messagePayload]
  -[HMFetchAnisetteDataResponse initWithCoder:]
  -[HMFetchAnisetteDataResponse xpcMessageName]


HMLegacyAnisetteDataRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSString *dsid
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMLegacyAnisetteDataRequest supportsSecureCoding]
  +[HMLegacyAnisetteDataRequest messageName]
  +[HMLegacyAnisetteDataRequest objWithDict:]
  +[HMLegacyAnisetteDataRequest objWithMessage:]
  +[HMLegacyAnisetteDataRequest xpcMessageName]

  // instance methods
  -[HMLegacyAnisetteDataRequest dsid]
  -[HMLegacyAnisetteDataRequest .cxx_destruct]
  -[HMLegacyAnisetteDataRequest messageName]
  -[HMLegacyAnisetteDataRequest encodeWithCoder:]
  -[HMLegacyAnisetteDataRequest messagePayload]
  -[HMLegacyAnisetteDataRequest setDsid:]
  -[HMLegacyAnisetteDataRequest initWithCoder:]
  -[HMLegacyAnisetteDataRequest xpcMessageName]


HMLegacyAnisetteDataResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  AKAnisetteData *anisetteData
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMLegacyAnisetteDataResponse supportsSecureCoding]
  +[HMLegacyAnisetteDataResponse messageName]
  +[HMLegacyAnisetteDataResponse objWithDict:]
  +[HMLegacyAnisetteDataResponse objWithMessage:]
  +[HMLegacyAnisetteDataResponse xpcMessageName]

  // instance methods
  -[HMLegacyAnisetteDataResponse anisetteData]
  -[HMLegacyAnisetteDataResponse setAnisetteData:]
  -[HMLegacyAnisetteDataResponse .cxx_destruct]
  -[HMLegacyAnisetteDataResponse messageName]
  -[HMLegacyAnisetteDataResponse encodeWithCoder:]
  -[HMLegacyAnisetteDataResponse messagePayload]
  -[HMLegacyAnisetteDataResponse initWithCoder:]
  -[HMLegacyAnisetteDataResponse xpcMessageName]


HMDCameraClipUploadPosterFrameOperation : HMDCameraClipAppendStreamingAssetOperation
  // class methods
  +[HMDCameraClipUploadPosterFrameOperation logCategory]
  +[HMDCameraClipUploadPosterFrameOperation shouldRetry]
  +[HMDCameraClipUploadPosterFrameOperation streamingAssetPropertyName]
  +[HMDCameraClipUploadPosterFrameOperation metadataPropertyName]


_HMDIDSProxyLinkPreferenceAssertion : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  IDSService *proxyService

  // instance methods
  -[_HMDIDSProxyLinkPreferenceAssertion dealloc]
  -[_HMDIDSProxyLinkPreferenceAssertion .cxx_destruct]
  -[_HMDIDSProxyLinkPreferenceAssertion proxyService]
  -[_HMDIDSProxyLinkPreferenceAssertion initWithIDSProxyService:]


HMDIDSServiceManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDIDSActivityMonitor *activityMonitor
 @property  _HMDIDSProxyLinkPreferenceAssertion *proxyLinkPreferenceAssertion
 @property  IDSService *service
 @property  IDSService *proxyService
 @property  IDSService *streamService
 @property  HMDIDSActivityMonitorBroadcaster *activityBroadcaster
 @property  HMDIDSActivityMonitorObserver *activityObserver

  // class methods
  +[HMDIDSServiceManager sharedManager]

  // instance methods
  -[HMDIDSServiceManager init]
  -[HMDIDSServiceManager .cxx_destruct]
  -[HMDIDSServiceManager activityMonitor]
  -[HMDIDSServiceManager workQueue]
  -[HMDIDSServiceManager service]
  -[HMDIDSServiceManager proxyService]
  -[HMDIDSServiceManager proxyLinkPreferenceAssertion]
  -[HMDIDSServiceManager setProxyLinkPreferenceAssertion:]
  -[HMDIDSServiceManager setActivityMonitorDataSource:]
  -[HMDIDSServiceManager setProxyServiceLinkPreferences:]
  -[HMDIDSServiceManager streamService]
  -[HMDIDSServiceManager activityBroadcaster]
  -[HMDIDSServiceManager activityObserver]


HMDMobileAssetManager : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL indexDownloaded
 @property  NSBackgroundActivityScheduler *scheduler
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDMobileAssetManagerDelegate> *delegate

  // instance methods
  -[HMDMobileAssetManager _updateMetadata]
  -[HMDMobileAssetManager scheduler]
  -[HMDMobileAssetManager setWorkQueue:]
  -[HMDMobileAssetManager init]
  -[HMDMobileAssetManager .cxx_destruct]
  -[HMDMobileAssetManager workQueue]
  -[HMDMobileAssetManager setDelegate:]
  -[HMDMobileAssetManager delegate]
  -[HMDMobileAssetManager handleMetadataAssetUpdated]
  -[HMDMobileAssetManager _handleMetadataAssetUpdated]
  -[HMDMobileAssetManager setIndexDownloaded:]
  -[HMDMobileAssetManager _downloadNewAsset:availableVersion:newVersion:]
  -[HMDMobileAssetManager _installAvailableAsset:version:]
  -[HMDMobileAssetManager _downloadCatalogAndUpdateMetadataIfAble]
  -[HMDMobileAssetManager indexDownloaded]
  -[HMDMobileAssetManager purgeAllInstalledAssets]


HMDStreamingStatus : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  unsigned long streamingStatus

  // class methods
  +[HMDStreamingStatus supportsSecureCoding]

  // instance methods
  -[HMDStreamingStatus encodeWithCoder:]
  -[HMDStreamingStatus description:indent:]
  -[HMDStreamingStatus tlvData]
  -[HMDStreamingStatus initWithCoder:]
  -[HMDStreamingStatus streamingStatus]
  -[HMDStreamingStatus _parseFromTLVData]


HMDH264Profile : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSSecureCoding>
 @property  unsigned long h264Profile

  // class methods
  +[HMDH264Profile supportsSecureCoding]
  +[HMDH264Profile arrayWithProfiles:]

  // instance methods
  -[HMDH264Profile encodeWithCoder:]
  -[HMDH264Profile description:indent:]
  -[HMDH264Profile isEqual:]
  -[HMDH264Profile initWithCoder:]
  -[HMDH264Profile h264Profile]
  -[HMDH264Profile initWithH264Profile:]
  -[HMDH264Profile initWithTLVData:]


HMDH264Level : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSSecureCoding>
 @property  unsigned long h264Level

  // class methods
  +[HMDH264Level supportsSecureCoding]
  +[HMDH264Level arrayWithLevels:]

  // instance methods
  -[HMDH264Level encodeWithCoder:]
  -[HMDH264Level description:indent:]
  -[HMDH264Level isEqual:]
  -[HMDH264Level initWithCoder:]
  -[HMDH264Level initWithTLVData:]
  -[HMDH264Level h264Level]
  -[HMDH264Level initWithH264Level:]


HMDPacketizationMode : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSSecureCoding>
 @property  unsigned long packetizationMode

  // class methods
  +[HMDPacketizationMode supportsSecureCoding]
  +[HMDPacketizationMode arrayWithModes:]

  // instance methods
  -[HMDPacketizationMode encodeWithCoder:]
  -[HMDPacketizationMode description:indent:]
  -[HMDPacketizationMode isEqual:]
  -[HMDPacketizationMode initWithCoder:]
  -[HMDPacketizationMode initWithTLVData:]
  -[HMDPacketizationMode packetizationMode]
  -[HMDPacketizationMode initWithPacketizationMode:]


HMDVideoCodecParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSArray *h264Profiles
 @property  NSArray *levels
 @property  NSArray *packetizationModes

  // class methods
  +[HMDVideoCodecParameters supportsSecureCoding]

  // instance methods
  -[HMDVideoCodecParameters levels]
  -[HMDVideoCodecParameters .cxx_destruct]
  -[HMDVideoCodecParameters encodeWithCoder:]
  -[HMDVideoCodecParameters description:indent:]
  -[HMDVideoCodecParameters tlvData]
  -[HMDVideoCodecParameters initWithCoder:]
  -[HMDVideoCodecParameters _parseFromTLVData]
  -[HMDVideoCodecParameters h264Profiles]
  -[HMDVideoCodecParameters packetizationModes]
  -[HMDVideoCodecParameters initWithProfiles:levels:packetizationModes:]


HMDVideoResolution : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSSecureCoding, NSCopying>
 @property  NSNumber *imageWidth
 @property  NSNumber *imageHeight
 @property  unsigned long resolutionType

  // class methods
  +[HMDVideoResolution supportsSecureCoding]
  +[HMDVideoResolution arrayWithResolutions:]

  // instance methods
  -[HMDVideoResolution copyWithZone:]
  -[HMDVideoResolution .cxx_destruct]
  -[HMDVideoResolution encodeWithCoder:]
  -[HMDVideoResolution imageHeight]
  -[HMDVideoResolution resolutionType]
  -[HMDVideoResolution description:indent:]
  -[HMDVideoResolution isEqual:]
  -[HMDVideoResolution imageWidth]
  -[HMDVideoResolution initWithCoder:]
  -[HMDVideoResolution initWithTLVData:]
  -[HMDVideoResolution initWithResolution:]
  -[HMDVideoResolution _extractWidthAndHeight]


HMDVideoAttributes : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSNumber *imageWidth
 @property  NSNumber *imageHeight
 @property  HMDVideoResolution *videoResolution
 @property  NSNumber *framerate

  // class methods
  +[HMDVideoAttributes supportsSecureCoding]
  +[HMDVideoAttributes translateImageResolution:imageWidth:imageHeight:]

  // instance methods
  -[HMDVideoAttributes .cxx_destruct]
  -[HMDVideoAttributes encodeWithCoder:]
  -[HMDVideoAttributes framerate]
  -[HMDVideoAttributes videoResolution]
  -[HMDVideoAttributes imageHeight]
  -[HMDVideoAttributes description:indent:]
  -[HMDVideoAttributes tlvData]
  -[HMDVideoAttributes imageWidth]
  -[HMDVideoAttributes initWithCoder:]
  -[HMDVideoAttributes _parseFromTLVData]
  -[HMDVideoAttributes translateImageWidth:imageHeight:]
  -[HMDVideoAttributes initWithResolution:framerate:]


HMDVideoCodec : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSCopying, NSSecureCoding>
 @property  long long codecType

  // class methods
  +[HMDVideoCodec supportsSecureCoding]
  +[HMDVideoCodec arrayWithCodecTypes:]

  // instance methods
  -[HMDVideoCodec copyWithZone:]
  -[HMDVideoCodec encodeWithCoder:]
  -[HMDVideoCodec description:indent:]
  -[HMDVideoCodec isEqual:]
  -[HMDVideoCodec initWithCoder:]
  -[HMDVideoCodec codecType]
  -[HMDVideoCodec initWithTLVData:]
  -[HMDVideoCodec initWithCodec:]


HMDVideoCodecConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDVideoCodec *videoCodec
 @property  HMDVideoCodecParameters *codecParameters
 @property  NSArray *videoAttributes

  // class methods
  +[HMDVideoCodecConfiguration supportsSecureCoding]

  // instance methods
  -[HMDVideoCodecConfiguration .cxx_destruct]
  -[HMDVideoCodecConfiguration encodeWithCoder:]
  -[HMDVideoCodecConfiguration videoCodec]
  -[HMDVideoCodecConfiguration description:indent:]
  -[HMDVideoCodecConfiguration tlvData]
  -[HMDVideoCodecConfiguration initWithCoder:]
  -[HMDVideoCodecConfiguration videoAttributes]
  -[HMDVideoCodecConfiguration _parseFromTLVData]
  -[HMDVideoCodecConfiguration codecParameters]
  -[HMDVideoCodecConfiguration initWithCodec:codecParameters:attributes:]


HMDSupportedVideoStreamConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSDictionary *codecConfigurations

  // class methods
  +[HMDSupportedVideoStreamConfiguration supportsSecureCoding]

  // instance methods
  -[HMDSupportedVideoStreamConfiguration .cxx_destruct]
  -[HMDSupportedVideoStreamConfiguration encodeWithCoder:]
  -[HMDSupportedVideoStreamConfiguration description:indent:]
  -[HMDSupportedVideoStreamConfiguration tlvData]
  -[HMDSupportedVideoStreamConfiguration initWithCoder:]
  -[HMDSupportedVideoStreamConfiguration codecConfigurations]
  -[HMDSupportedVideoStreamConfiguration _parseFromTLVData]
  -[HMDSupportedVideoStreamConfiguration initWithCodecConfigurations:]


HMDBitRateSetting : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSSecureCoding>
 @property  unsigned long bitrateSetting

  // class methods
  +[HMDBitRateSetting supportsSecureCoding]
  +[HMDBitRateSetting arrayWithSettings:]

  // instance methods
  -[HMDBitRateSetting encodeWithCoder:]
  -[HMDBitRateSetting description:indent:]
  -[HMDBitRateSetting isEqual:]
  -[HMDBitRateSetting initWithCoder:]
  -[HMDBitRateSetting initWithTLVData:]
  -[HMDBitRateSetting bitrateSetting]
  -[HMDBitRateSetting initWithBitRateSetting:]


HMDAudioSampleRate : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSSecureCoding>
 @property  unsigned long sampleRate

  // class methods
  +[HMDAudioSampleRate supportsSecureCoding]
  +[HMDAudioSampleRate arrayWithRates:]

  // instance methods
  -[HMDAudioSampleRate encodeWithCoder:]
  -[HMDAudioSampleRate description:indent:]
  -[HMDAudioSampleRate isEqual:]
  -[HMDAudioSampleRate sampleRate]
  -[HMDAudioSampleRate initWithCoder:]
  -[HMDAudioSampleRate initWithSampleRate:]
  -[HMDAudioSampleRate initWithTLVData:]


HMDAudioCodecParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSNumber *audioChannelCount
 @property  NSArray *bitRateSettings
 @property  NSArray *audioSampleRates
 @property  NSNumber *rtpPtime

  // class methods
  +[HMDAudioCodecParameters supportsSecureCoding]

  // instance methods
  -[HMDAudioCodecParameters audioChannelCount]
  -[HMDAudioCodecParameters .cxx_destruct]
  -[HMDAudioCodecParameters encodeWithCoder:]
  -[HMDAudioCodecParameters description:indent:]
  -[HMDAudioCodecParameters tlvData]
  -[HMDAudioCodecParameters initWithCoder:]
  -[HMDAudioCodecParameters _parseFromTLVData]
  -[HMDAudioCodecParameters bitRateSettings]
  -[HMDAudioCodecParameters audioSampleRates]
  -[HMDAudioCodecParameters rtpPtime]
  -[HMDAudioCodecParameters initWithChannelCount:bitRateSetting:audioSampleRate:rtpPtime:]


HMDAudioCodecGroup : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSCopying, NSSecureCoding>
 @property  unsigned long codec

  // class methods
  +[HMDAudioCodecGroup supportsSecureCoding]
  +[HMDAudioCodecGroup arrayWithCodecs:]

  // instance methods
  -[HMDAudioCodecGroup codec]
  -[HMDAudioCodecGroup copyWithZone:]
  -[HMDAudioCodecGroup encodeWithCoder:]
  -[HMDAudioCodecGroup description:indent:]
  -[HMDAudioCodecGroup isEqual:]
  -[HMDAudioCodecGroup initWithCoder:]
  -[HMDAudioCodecGroup initWithTLVData:]
  -[HMDAudioCodecGroup initWithAudioCodecGroup:]


HMDAudioCodecConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDAudioCodecGroup *codecGroup
 @property  HMDAudioCodecParameters *audioCodecParameters

  // class methods
  +[HMDAudioCodecConfiguration supportsSecureCoding]

  // instance methods
  -[HMDAudioCodecConfiguration .cxx_destruct]
  -[HMDAudioCodecConfiguration encodeWithCoder:]
  -[HMDAudioCodecConfiguration description:indent:]
  -[HMDAudioCodecConfiguration tlvData]
  -[HMDAudioCodecConfiguration initWithCoder:]
  -[HMDAudioCodecConfiguration _parseFromTLVData]
  -[HMDAudioCodecConfiguration codecGroup]
  -[HMDAudioCodecConfiguration audioCodecParameters]
  -[HMDAudioCodecConfiguration initWithAudioCodecGroup:codecParameter:]


HMDSupportedAudioStreamConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSNumber *supportsComfortNoise
 @property  NSDictionary *codecConfigurations

  // class methods
  +[HMDSupportedAudioStreamConfiguration supportsSecureCoding]

  // instance methods
  -[HMDSupportedAudioStreamConfiguration .cxx_destruct]
  -[HMDSupportedAudioStreamConfiguration encodeWithCoder:]
  -[HMDSupportedAudioStreamConfiguration description:indent:]
  -[HMDSupportedAudioStreamConfiguration tlvData]
  -[HMDSupportedAudioStreamConfiguration initWithCoder:]
  -[HMDSupportedAudioStreamConfiguration codecConfigurations]
  -[HMDSupportedAudioStreamConfiguration _parseFromTLVData]
  -[HMDSupportedAudioStreamConfiguration supportsComfortNoise]
  -[HMDSupportedAudioStreamConfiguration initWithComfortNoise:CodecConfigurations:]


HMDSRTPCryptoSuite : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSSecureCoding>
 @property  unsigned long srtpCryptoSuite

  // class methods
  +[HMDSRTPCryptoSuite supportsSecureCoding]
  +[HMDSRTPCryptoSuite arrayWithSuites:]

  // instance methods
  -[HMDSRTPCryptoSuite encodeWithCoder:]
  -[HMDSRTPCryptoSuite description:indent:]
  -[HMDSRTPCryptoSuite isEqual:]
  -[HMDSRTPCryptoSuite initWithCoder:]
  -[HMDSRTPCryptoSuite initWithTLVData:]
  -[HMDSRTPCryptoSuite srtpCryptoSuite]
  -[HMDSRTPCryptoSuite initWithCryptoSuite:]


HMDSupportedRTPConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSArray *srtpCryptoSuites

  // class methods
  +[HMDSupportedRTPConfiguration supportsSecureCoding]

  // instance methods
  -[HMDSupportedRTPConfiguration .cxx_destruct]
  -[HMDSupportedRTPConfiguration encodeWithCoder:]
  -[HMDSupportedRTPConfiguration description:indent:]
  -[HMDSupportedRTPConfiguration tlvData]
  -[HMDSupportedRTPConfiguration initWithCoder:]
  -[HMDSupportedRTPConfiguration _parseFromTLVData]
  -[HMDSupportedRTPConfiguration srtpCryptoSuites]
  -[HMDSupportedRTPConfiguration initWithCryptoSuites:]


HMDEndPointAddress : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSString *ipAddress
 @property  BOOL isIPv6Address
 @property  NSNumber *videoRTPPort
 @property  NSNumber *audioRTPPort

  // class methods
  +[HMDEndPointAddress supportsSecureCoding]

  // instance methods
  -[HMDEndPointAddress .cxx_destruct]
  -[HMDEndPointAddress encodeWithCoder:]
  -[HMDEndPointAddress description:indent:]
  -[HMDEndPointAddress tlvData]
  -[HMDEndPointAddress ipAddress]
  -[HMDEndPointAddress initWithCoder:]
  -[HMDEndPointAddress audioRTPPort]
  -[HMDEndPointAddress _parseFromTLVData]
  -[HMDEndPointAddress isIPv6Address]
  -[HMDEndPointAddress videoRTPPort]
  -[HMDEndPointAddress initWithIPAddress:isIPv6Address:videoRTPPort:audioRTPPort:]
  -[HMDEndPointAddress compatibleWithRemoteEndPoint:]


HMDSRTPParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDSRTPCryptoSuite *srtpCryptoSuite
 @property  NSData *srtpMasterKey
 @property  NSData *srtpMasterSalt

  // class methods
  +[HMDSRTPParameters supportsSecureCoding]

  // instance methods
  -[HMDSRTPParameters .cxx_destruct]
  -[HMDSRTPParameters encodeWithCoder:]
  -[HMDSRTPParameters description:indent:]
  -[HMDSRTPParameters tlvData]
  -[HMDSRTPParameters initWithCoder:]
  -[HMDSRTPParameters _parseFromTLVData]
  -[HMDSRTPParameters srtpCryptoSuite]
  -[HMDSRTPParameters compatibleWithRemoteEndPoint:]
  -[HMDSRTPParameters srtpMasterKey]
  -[HMDSRTPParameters srtpMasterSalt]
  -[HMDSRTPParameters initWithCryptoSuite:masterKey:masterSalt:]


HMDSetupEndPointWrite : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSUUID *sessionID
 @property  HMDEndPointAddress *address
 @property  HMDSRTPParameters *videoSrtpParameters
 @property  HMDSRTPParameters *audioSrtpParameters

  // class methods
  +[HMDSetupEndPointWrite supportsSecureCoding]

  // instance methods
  -[HMDSetupEndPointWrite sessionID]
  -[HMDSetupEndPointWrite address]
  -[HMDSetupEndPointWrite .cxx_destruct]
  -[HMDSetupEndPointWrite encodeWithCoder:]
  -[HMDSetupEndPointWrite description:indent:]
  -[HMDSetupEndPointWrite tlvData]
  -[HMDSetupEndPointWrite initWithCoder:]
  -[HMDSetupEndPointWrite _parseFromTLVData]
  -[HMDSetupEndPointWrite videoSrtpParameters]
  -[HMDSetupEndPointWrite audioSrtpParameters]
  -[HMDSetupEndPointWrite _parseFromTLVDataImpl]
  -[HMDSetupEndPointWrite initWithSessionIdentifier:address:videoSrtpParameters:audioSrtpParameters:]
  -[HMDSetupEndPointWrite _parseFromTLVDataOnSuccess]
  -[HMDSetupEndPointWrite _parseFromTLVDataOnFailure]


HMDSetupEndPointRead : HMDSetupEndPointWrite <NSSecureCoding>
 @property  unsigned long responseStatus
 @property  NSNumber *videoSSRC
 @property  NSNumber *audioSSRC

  // class methods
  +[HMDSetupEndPointRead supportsSecureCoding]

  // instance methods
  -[HMDSetupEndPointRead .cxx_destruct]
  -[HMDSetupEndPointRead encodeWithCoder:]
  -[HMDSetupEndPointRead description:indent:]
  -[HMDSetupEndPointRead tlvData]
  -[HMDSetupEndPointRead responseStatus]
  -[HMDSetupEndPointRead initWithCoder:]
  -[HMDSetupEndPointRead videoSSRC]
  -[HMDSetupEndPointRead _parseFromTLVData]
  -[HMDSetupEndPointRead _parseFromTLVDataOnSuccess]
  -[HMDSetupEndPointRead _parseFromTLVDataOnFailure]
  -[HMDSetupEndPointRead audioSSRC]
  -[HMDSetupEndPointRead initWithSessionIdentifier:address:videoSrtpParameters:audioSrtpParameters:responseStatus:videoSSRC:audioSSRC:]


HMDSessionControl : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  unsigned long controlCommand
 @property  NSUUID *sessionID

  // class methods
  +[HMDSessionControl supportsSecureCoding]

  // instance methods
  -[HMDSessionControl sessionID]
  -[HMDSessionControl .cxx_destruct]
  -[HMDSessionControl encodeWithCoder:]
  -[HMDSessionControl description:indent:]
  -[HMDSessionControl tlvData]
  -[HMDSessionControl initWithCoder:]
  -[HMDSessionControl _parseFromTLVData]
  -[HMDSessionControl controlCommand]
  -[HMDSessionControl initWithCommand:sessionIdentifier:]


HMDSelectedRTPParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSNumber *payloadType
 @property  NSNumber *synchronizationSource
 @property  NSNumber *maximumBitrate
 @property  NSNumber *minimumBitrate
 @property  NSNumber *rtcpInterval
 @property  NSNumber *maxMTU
 @property  NSNumber *comfortNoisePayloadType

  // class methods
  +[HMDSelectedRTPParameters supportsSecureCoding]

  // instance methods
  -[HMDSelectedRTPParameters maxMTU]
  -[HMDSelectedRTPParameters .cxx_destruct]
  -[HMDSelectedRTPParameters encodeWithCoder:]
  -[HMDSelectedRTPParameters payloadType]
  -[HMDSelectedRTPParameters description:indent:]
  -[HMDSelectedRTPParameters tlvData]
  -[HMDSelectedRTPParameters initWithCoder:]
  -[HMDSelectedRTPParameters _parseFromTLVData]
  -[HMDSelectedRTPParameters synchronizationSource]
  -[HMDSelectedRTPParameters minimumBitrate]
  -[HMDSelectedRTPParameters rtcpInterval]
  -[HMDSelectedRTPParameters comfortNoisePayloadType]
  -[HMDSelectedRTPParameters maximumBitrate]
  -[HMDSelectedRTPParameters initWithPayloadType:maximumBitrate:minimumBitrate:rtcpInterval:maxMTU:comfortNoisePayloadType:]
  -[HMDSelectedRTPParameters setSynchronizationSource:]
  -[HMDSelectedRTPParameters setMaxMTU:]


HMDSelectedVideoParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDVideoCodec *codec
 @property  HMDVideoCodecParameters *codecParameters
 @property  HMDVideoAttributes *videoAttributes
 @property  HMDSelectedRTPParameters *rtpParameters

  // class methods
  +[HMDSelectedVideoParameters supportsSecureCoding]

  // instance methods
  -[HMDSelectedVideoParameters codec]
  -[HMDSelectedVideoParameters .cxx_destruct]
  -[HMDSelectedVideoParameters encodeWithCoder:]
  -[HMDSelectedVideoParameters description:indent:]
  -[HMDSelectedVideoParameters tlvData]
  -[HMDSelectedVideoParameters initWithCoder:]
  -[HMDSelectedVideoParameters videoAttributes]
  -[HMDSelectedVideoParameters _parseFromTLVData]
  -[HMDSelectedVideoParameters codecParameters]
  -[HMDSelectedVideoParameters rtpParameters]
  -[HMDSelectedVideoParameters initWithCodec:codecParameter:attribute:rtpParameter:]


HMDSelectedAudioParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDAudioCodecGroup *codecGroup
 @property  HMDAudioCodecParameters *codecParameters
 @property  HMDSelectedRTPParameters *rtpParameters
 @property  NSNumber *comfortNoiseEnabled

  // class methods
  +[HMDSelectedAudioParameters supportsSecureCoding]

  // instance methods
  -[HMDSelectedAudioParameters .cxx_destruct]
  -[HMDSelectedAudioParameters encodeWithCoder:]
  -[HMDSelectedAudioParameters description:indent:]
  -[HMDSelectedAudioParameters tlvData]
  -[HMDSelectedAudioParameters initWithCoder:]
  -[HMDSelectedAudioParameters _parseFromTLVData]
  -[HMDSelectedAudioParameters codecParameters]
  -[HMDSelectedAudioParameters codecGroup]
  -[HMDSelectedAudioParameters rtpParameters]
  -[HMDSelectedAudioParameters comfortNoiseEnabled]
  -[HMDSelectedAudioParameters initWithCodecGroup:codecParameter:rtpParameter:comfortNoiseEnabled:]


HMDSelectedStreamConfigurationWrite : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDSessionControl *sessionControl
 @property  HMDSelectedVideoParameters *videoParameters
 @property  HMDSelectedAudioParameters *audioParameters

  // class methods
  +[HMDSelectedStreamConfigurationWrite supportsSecureCoding]

  // instance methods
  -[HMDSelectedStreamConfigurationWrite .cxx_destruct]
  -[HMDSelectedStreamConfigurationWrite encodeWithCoder:]
  -[HMDSelectedStreamConfigurationWrite description:indent:]
  -[HMDSelectedStreamConfigurationWrite tlvData]
  -[HMDSelectedStreamConfigurationWrite audioParameters]
  -[HMDSelectedStreamConfigurationWrite initWithCoder:]
  -[HMDSelectedStreamConfigurationWrite _parseFromTLVData]
  -[HMDSelectedStreamConfigurationWrite sessionControl]
  -[HMDSelectedStreamConfigurationWrite videoParameters]
  -[HMDSelectedStreamConfigurationWrite initWithSessionControl:videoParameters:audioParameters:]
  -[HMDSelectedStreamConfigurationWrite initWithSessionControl:]


HMDReselectedRTPParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSNumber *maximumBitrate
 @property  NSNumber *minimumBitrate
 @property  NSNumber *rtcpInterval

  // class methods
  +[HMDReselectedRTPParameters supportsSecureCoding]

  // instance methods
  -[HMDReselectedRTPParameters .cxx_destruct]
  -[HMDReselectedRTPParameters encodeWithCoder:]
  -[HMDReselectedRTPParameters description:indent:]
  -[HMDReselectedRTPParameters tlvData]
  -[HMDReselectedRTPParameters initWithCoder:]
  -[HMDReselectedRTPParameters _parseFromTLVData]
  -[HMDReselectedRTPParameters minimumBitrate]
  -[HMDReselectedRTPParameters rtcpInterval]
  -[HMDReselectedRTPParameters maximumBitrate]
  -[HMDReselectedRTPParameters initWithMaximumBitrate:minimumBitrate:rtcpInterval:]


HMDReselectedVideoParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDVideoAttributes *videoAttributes
 @property  HMDReselectedRTPParameters *rtpParameters

  // class methods
  +[HMDReselectedVideoParameters supportsSecureCoding]

  // instance methods
  -[HMDReselectedVideoParameters .cxx_destruct]
  -[HMDReselectedVideoParameters encodeWithCoder:]
  -[HMDReselectedVideoParameters description:indent:]
  -[HMDReselectedVideoParameters tlvData]
  -[HMDReselectedVideoParameters initWithCoder:]
  -[HMDReselectedVideoParameters videoAttributes]
  -[HMDReselectedVideoParameters _parseFromTLVData]
  -[HMDReselectedVideoParameters rtpParameters]
  -[HMDReselectedVideoParameters initWithAttribute:rtpParameter:]


HMDReselectedStreamConfigurationWrite : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDSessionControl *sessionControl
 @property  HMDReselectedVideoParameters *videoParameters

  // class methods
  +[HMDReselectedStreamConfigurationWrite supportsSecureCoding]

  // instance methods
  -[HMDReselectedStreamConfigurationWrite .cxx_destruct]
  -[HMDReselectedStreamConfigurationWrite encodeWithCoder:]
  -[HMDReselectedStreamConfigurationWrite description:indent:]
  -[HMDReselectedStreamConfigurationWrite tlvData]
  -[HMDReselectedStreamConfigurationWrite initWithCoder:]
  -[HMDReselectedStreamConfigurationWrite _parseFromTLVData]
  -[HMDReselectedStreamConfigurationWrite sessionControl]
  -[HMDReselectedStreamConfigurationWrite videoParameters]
  -[HMDReselectedStreamConfigurationWrite initWithSessionControl:]
  -[HMDReselectedStreamConfigurationWrite initWithSessionControl:videoParameters:]


AWDHomeKitUserPresenceCompute : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasCompute
 @property  int compute

  // instance methods
  -[AWDHomeKitUserPresenceCompute copyWithZone:]
  -[AWDHomeKitUserPresenceCompute compute]
  -[AWDHomeKitUserPresenceCompute timestamp]
  -[AWDHomeKitUserPresenceCompute setTimestamp:]
  -[AWDHomeKitUserPresenceCompute setHasTimestamp:]
  -[AWDHomeKitUserPresenceCompute readFrom:]
  -[AWDHomeKitUserPresenceCompute writeTo:]
  -[AWDHomeKitUserPresenceCompute isEqual:]
  -[AWDHomeKitUserPresenceCompute copyTo:]
  -[AWDHomeKitUserPresenceCompute dictionaryRepresentation]
  -[AWDHomeKitUserPresenceCompute mergeFrom:]
  -[AWDHomeKitUserPresenceCompute hasTimestamp]
  -[AWDHomeKitUserPresenceCompute setCompute:]
  -[AWDHomeKitUserPresenceCompute setHasCompute:]
  -[AWDHomeKitUserPresenceCompute hasCompute]
  -[AWDHomeKitUserPresenceCompute computeAsString:]
  -[AWDHomeKitUserPresenceCompute StringAsCompute:]


HMDSettingGroupModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore <HMDSettingGroupModelProtocol>
 @property  NSString *name
 @property  NSUUID *hmbModelID
 @property  NSUUID *hmbParentModelID
 @property  NSString *nameForKeyPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSettingGroupModel hmbProperties]

  // instance methods
  -[HMDSettingGroupModel copyWithNewParentModelID:]
  -[HMDSettingGroupModel nameForKeyPath]


HMDFamiliarFacesBulletinLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  long long numberOfKnownPersons
 @property  long long numberOfUnknownPersons
 @property  NSString *bulletinReason
 @property  BOOL doorbellPressed
 @property  double secondsFromDoorbellToFaceClassification

  // class methods
  +[HMDFamiliarFacesBulletinLogEvent identifier]

  // instance methods
  -[HMDFamiliarFacesBulletinLogEvent eventName]
  -[HMDFamiliarFacesBulletinLogEvent .cxx_destruct]
  -[HMDFamiliarFacesBulletinLogEvent initWithNumberOfKnownPersons:numberOfUnknownPersons:bulletinReason:doorbellPressed:secondsFromDoorbellToFaceClassification:]
  -[HMDFamiliarFacesBulletinLogEvent numberOfKnownPersons]
  -[HMDFamiliarFacesBulletinLogEvent numberOfUnknownPersons]
  -[HMDFamiliarFacesBulletinLogEvent bulletinReason]
  -[HMDFamiliarFacesBulletinLogEvent doorbellPressed]
  -[HMDFamiliarFacesBulletinLogEvent secondsFromDoorbellToFaceClassification]
  -[HMDFamiliarFacesBulletinLogEvent serializedEvent]


HMDProximityCardLauncher : NSObject /usr/lib/libc++.1.dylib <SBSRemoteAlertHandleObserver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDAddAccessoryRequestInformation *internal_pendingAddAccessoryRequestInformation
 @property  SBSRemoteAlertHandle *alertHandle
 @property  HMDAddAccessoryRequestInformation *pendingAddAccessoryRequestInformation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDProximityCardLauncher proximityCardServiceBundleIdentifier]

  // instance methods
  -[HMDProximityCardLauncher setWorkQueue:]
  -[HMDProximityCardLauncher remoteAlertHandleDidActivate:]
  -[HMDProximityCardLauncher init]
  -[HMDProximityCardLauncher dealloc]
  -[HMDProximityCardLauncher .cxx_destruct]
  -[HMDProximityCardLauncher workQueue]
  -[HMDProximityCardLauncher remoteAlertHandle:didInvalidateWithError:]
  -[HMDProximityCardLauncher remoteAlertHandleDidDeactivate:]
  -[HMDProximityCardLauncher alertHandle]
  -[HMDProximityCardLauncher handleNfcProxCardPayload:]
  -[HMDProximityCardLauncher _handleNfcProxCardPayload:completionHandler:]
  -[HMDProximityCardLauncher setInternal_pendingAddAccessoryRequestInformation:]
  -[HMDProximityCardLauncher internal_pendingAddAccessoryRequestInformation]
  -[HMDProximityCardLauncher setAlertHandle:]
  -[HMDProximityCardLauncher clearPendingAddAccessoryRequestInformation]
  -[HMDProximityCardLauncher pendingAddAccessoryRequestInformation]


HMDCameraFeaturesDataSource : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL significantEventNotificationsFeatureEnabled
 @property  BOOL tvDoorbellNotificationsFeatureEnabled

  // instance methods
  -[HMDCameraFeaturesDataSource isSignificantEventNotificationsFeatureEnabled]
  -[HMDCameraFeaturesDataSource isTVDoorbellNotificationsFeatureEnabled]


HMDCameraStreamManagerSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  <HMDCameraStreamControlManagerProtocol> *streamControlManager
 @property  HMDCameraStreamSessionID *sessionID
 @property  NSString *destinationID
 @property  HMFTimer *streamSetupTimer
 @property  NSString *streamShowingAppIdentifier
 @property  NSNumber *slotIdentifier
 @property  HMFMessage *currentMessage

  // instance methods
  -[HMDCameraStreamManagerSession sessionID]
  -[HMDCameraStreamManagerSession destinationID]
  -[HMDCameraStreamManagerSession .cxx_destruct]
  -[HMDCameraStreamManagerSession currentMessage]
  -[HMDCameraStreamManagerSession slotIdentifier]
  -[HMDCameraStreamManagerSession initWithSessionID:destinationID:streamShowingAppIdentifier:controlManager:setupWaitPeriod:timerFactory:error:]
  -[HMDCameraStreamManagerSession initWithSessionID:destinationID:streamShowingAppIdentifier:controlManager:setupWaitPeriod:error:]
  -[HMDCameraStreamManagerSession streamControlManager]
  -[HMDCameraStreamManagerSession streamSetupTimer]
  -[HMDCameraStreamManagerSession streamShowingAppIdentifier]
  -[HMDCameraStreamManagerSession setSlotIdentifier:]
  -[HMDCameraStreamManagerSession setCurrentMessage:]


AWDHomeKitMessageLocation : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasLongitude
 @property  double longitude
 @property  BOOL hasLatitude
 @property  double latitude
 @property  BOOL hasAccuracy
 @property  double accuracy
 @property  BOOL hasNumOfReachableIPAcc
 @property  unsigned int numOfReachableIPAcc
 @property  BOOL hasNumOfReachableBTLEAcc
 @property  unsigned int numOfReachableBTLEAcc

  // instance methods
  -[AWDHomeKitMessageLocation copyWithZone:]
  -[AWDHomeKitMessageLocation longitude]
  -[AWDHomeKitMessageLocation accuracy]
  -[AWDHomeKitMessageLocation setHasLatitude:]
  -[AWDHomeKitMessageLocation hasLongitude]
  -[AWDHomeKitMessageLocation setHasLongitude:]
  -[AWDHomeKitMessageLocation hasLatitude]
  -[AWDHomeKitMessageLocation setLongitude:]
  -[AWDHomeKitMessageLocation setLatitude:]
  -[AWDHomeKitMessageLocation latitude]
  -[AWDHomeKitMessageLocation timestamp]
  -[AWDHomeKitMessageLocation setAccuracy:]
  -[AWDHomeKitMessageLocation setTimestamp:]
  -[AWDHomeKitMessageLocation setHasTimestamp:]
  -[AWDHomeKitMessageLocation readFrom:]
  -[AWDHomeKitMessageLocation writeTo:]
  -[AWDHomeKitMessageLocation isEqual:]
  -[AWDHomeKitMessageLocation copyTo:]
  -[AWDHomeKitMessageLocation dictionaryRepresentation]
  -[AWDHomeKitMessageLocation mergeFrom:]
  -[AWDHomeKitMessageLocation hasTimestamp]
  -[AWDHomeKitMessageLocation setHasAccuracy:]
  -[AWDHomeKitMessageLocation hasAccuracy]
  -[AWDHomeKitMessageLocation setNumOfReachableIPAcc:]
  -[AWDHomeKitMessageLocation setHasNumOfReachableIPAcc:]
  -[AWDHomeKitMessageLocation hasNumOfReachableIPAcc]
  -[AWDHomeKitMessageLocation setNumOfReachableBTLEAcc:]
  -[AWDHomeKitMessageLocation setHasNumOfReachableBTLEAcc:]
  -[AWDHomeKitMessageLocation hasNumOfReachableBTLEAcc]
  -[AWDHomeKitMessageLocation numOfReachableIPAcc]
  -[AWDHomeKitMessageLocation numOfReachableBTLEAcc]


HMDNetworkRouterFirewallRuleLANMulticast : HMDNetworkRouterFirewallRuleLAN
 @property  HMFNetAddress *ipAddress
 @property  unsigned short port

  // class methods
  +[HMDNetworkRouterFirewallRuleLANMulticast createWithJSONDictionary:name:critical:purpose:allowInterAccessoryConnections:direction:requiredForHAPFunctionality:ruleDictionary:error:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleLANMulticast attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleLANMulticast .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleLANMulticast port]
  -[HMDNetworkRouterFirewallRuleLANMulticast ipAddress]
  -[HMDNetworkRouterFirewallRuleLANMulticast prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRuleLANMulticast initWithJSONDictionary:name:critical:purpose:allowInterAccessoryConnections:direction:requiredForHAPFunctionality:ipAddress:port:]


HMDMainDriver : NSObject /usr/lib/libc++.1.dylib
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHomeManager *homeManager
 @property  HMDAccessoryBrowser *accessoryBrowser
 @property  HMDCloudManager *cloudDataSyncManager

  // class methods
  +[HMDMainDriver driver]

  // instance methods
  -[HMDMainDriver localeChanged]
  -[HMDMainDriver setWorkQueue:]
  -[HMDMainDriver init]
  -[HMDMainDriver .cxx_destruct]
  -[HMDMainDriver workQueue]
  -[HMDMainDriver setHomeManager:]
  -[HMDMainDriver setAccessoryBrowser:]
  -[HMDMainDriver accessoryBrowser]
  -[HMDMainDriver homeManager]
  -[HMDMainDriver start]
  -[HMDMainDriver executeBTAJob:withXPCDict:]
  -[HMDMainDriver logError:component:]
  -[HMDMainDriver initBackgroundTaskAgent]
  -[HMDMainDriver cloudDataSyncManager]
  -[HMDMainDriver setCloudDataSyncManager:]


HMDUserPresenceFeedRetryTimer : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSUUID *timerID
 @property  double retryTimeInterval
 @property  HMFTimer *retryTimer
 @property  unsigned long retryCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserPresenceFeedRetryTimer logCategory]

  // instance methods
  -[HMDUserPresenceFeedRetryTimer setRetryCount:]
  -[HMDUserPresenceFeedRetryTimer setRetryTimer:]
  -[HMDUserPresenceFeedRetryTimer logIdentifier]
  -[HMDUserPresenceFeedRetryTimer init]
  -[HMDUserPresenceFeedRetryTimer attributeDescriptions]
  -[HMDUserPresenceFeedRetryTimer retryTimer]
  -[HMDUserPresenceFeedRetryTimer retryCount]
  -[HMDUserPresenceFeedRetryTimer .cxx_destruct]
  -[HMDUserPresenceFeedRetryTimer timerID]
  -[HMDUserPresenceFeedRetryTimer cancel]
  -[HMDUserPresenceFeedRetryTimer retryTimeInterval]
  -[HMDUserPresenceFeedRetryTimer shouldRetryImmediately:]
  -[HMDUserPresenceFeedRetryTimer startWithDelegate:delegateQueue:responseTime:]


HMDRemoteMessageLogEvent : HMDLogEvent <HMDAWDLogEvent, HMDDiagnosticReportLogging, HMDCoreAnalyticsLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *diagnosticReportEventType
 @property  NSString *diagnosticReportEventSubType
 @property  HMDRemoteMessage *remoteMessage
 @property  int transportType
 @property  BOOL sending

  // class methods
  +[HMDRemoteMessageLogEvent uuid]
  +[HMDRemoteMessageLogEvent sendingRemoteMessage:transportType:]
  +[HMDRemoteMessageLogEvent receivedRemoteMessage:transportType:]
  +[HMDRemoteMessageLogEvent awdMessageTypeFromHMDMessageType:]

  // instance methods
  -[HMDRemoteMessageLogEvent eventName]
  -[HMDRemoteMessageLogEvent sending]
  -[HMDRemoteMessageLogEvent .cxx_destruct]
  -[HMDRemoteMessageLogEvent transportType]
  -[HMDRemoteMessageLogEvent initWithRemoteMessage:transportType:sending:]
  -[HMDRemoteMessageLogEvent serializedEventForDiagnostics:]
  -[HMDRemoteMessageLogEvent remoteMessage]
  -[HMDRemoteMessageLogEvent serializedEvent]
  -[HMDRemoteMessageLogEvent shouldSubmitEvent]
  -[HMDRemoteMessageLogEvent asCommaSeparateValues]
  -[HMDRemoteMessageLogEvent AWDMessageType]
  -[HMDRemoteMessageLogEvent metricForAWD]
  -[HMDRemoteMessageLogEvent updateDiagnosticReportSignature:]


HMDEventAggregationAnalysisLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging, HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDEventCountersManager *eventCountersManager
 @property  HMDEventFlagsManager *eventFlagsManager
 @property  NSString *dataSyncState
 @property  unsigned long processLaunchCount
 @property  unsigned long jetsamReasonHighwaterCount
 @property  unsigned long jetsamReasonProcessLimitCount
 @property  unsigned long jetsamReasonUnknownKillCount
 @property  unsigned long jetsamReasonOtherCount
 @property  unsigned long processMemoryPressureStateWarningCount
 @property  unsigned long processMemoryPressureStateCriticalCount
 @property  unsigned long sampledAverageProcessMemoryUsage
 @property  unsigned long sampledPeakProcessMemoryUsage
 @property  unsigned long remoteMessagesSentCount
 @property  unsigned long remoteMessagesReceivedCount
 @property  unsigned long cloudSyncPushCount
 @property  unsigned long cloudSyncFetchCount
 @property  unsigned long cloudSyncUploadCount
 @property  unsigned long cloudSyncUploadErrorCount
 @property  unsigned long homeDataBytesFetched
 @property  unsigned long homeDataBytesPushed
 @property  unsigned long legacyHomeDataBytesFetched
 @property  unsigned long legacyHomeDataBytesPushed
 @property  BOOL cloudSyncDecryptionFailed
 @property  BOOL cloudSyncLastDecryptionFailed
 @property  BOOL cloudSyncMaximumDelayReached
 @property  unsigned long numReadSiri
 @property  unsigned long numWriteSiri
 @property  unsigned long numReadFirstPartyApp
 @property  unsigned long numWriteFirstPartyApp
 @property  unsigned long numReadThirdPartyApp
 @property  unsigned long numWriteThirdPartyApp
 @property  unsigned long numReadInternalRequested
 @property  unsigned long numWriteInternalRequested
 @property  unsigned long numReadUnknownSource
 @property  unsigned long numWriteUnknownSource
 @property  unsigned long numReadWriteSuccessIP
 @property  unsigned long numReadWriteFailureIP
 @property  unsigned long numReadWriteSuccessBT
 @property  unsigned long numReadWriteFailureBT
 @property  unsigned long numReadWriteSuccessIDS
 @property  unsigned long numReadWriteFailureIDS
 @property  unsigned long averageLatencyIP
 @property  unsigned long averageLatencyBT
 @property  unsigned long averageLatencyIDS
 @property  unsigned long numAccessoriesAdded
 @property  unsigned long numScenesAdded
 @property  unsigned long numTriggersAdded
 @property  unsigned long numShortcutsAdded
 @property  unsigned long numScenesUserRun
 @property  unsigned long numShortcutsRun
 @property  unsigned long numTriggersFired
 @property  unsigned long hapIPInvalidationCount
 @property  unsigned long hapIPSentHTTPRequestsCount
 @property  unsigned long hapIPReceivedHTTPResponsesCount
 @property  unsigned long hapIPReceivedHTTPEventCount
 @property  unsigned long hapBTLEConnectionsCount
 @property  unsigned long hapBTLEConnectionPerReasonsCount
 @property  unsigned long hapBTLEDiscoveriesCount
 @property  unsigned long cameraStreamStartSuccessCount
 @property  unsigned long cameraStreamStartFailureCount
 @property  unsigned long fetchCameraClipVideoSegmentAssetCount
 @property  unsigned long acceptedXPCRequestsCount
 @property  unsigned long erroredXPCRequestsCount
 @property  unsigned long sentXPCNotificationsCount
 @property  unsigned long filteredXPCNotificationsCount
 @property  unsigned long cameraRecordingReachabilityChangedCount
 @property  unsigned long cameraRecordingReachabilityOfflineDuration
 @property  unsigned long homeHubReachabilityChangedCount
 @property  BOOL activeDay
 @property  unsigned long activeDaysPerMonthCount

  // class methods
  +[HMDEventAggregationAnalysisLogEvent uuid]

  // instance methods
  -[HMDEventAggregationAnalysisLogEvent eventName]
  -[HMDEventAggregationAnalysisLogEvent .cxx_destruct]
  -[HMDEventAggregationAnalysisLogEvent dataSyncState]
  -[HMDEventAggregationAnalysisLogEvent serializedEvent]
  -[HMDEventAggregationAnalysisLogEvent submitEventWithHomeConfigurationCommonDimensions]
  -[HMDEventAggregationAnalysisLogEvent initWithDataSyncStateDescription:eventCountersManager:eventFlagsManager:]
  -[HMDEventAggregationAnalysisLogEvent eventCountersManager]
  -[HMDEventAggregationAnalysisLogEvent numReadWriteSuccessIP]
  -[HMDEventAggregationAnalysisLogEvent numReadWriteFailureIP]
  -[HMDEventAggregationAnalysisLogEvent numReadWriteSuccessBT]
  -[HMDEventAggregationAnalysisLogEvent numReadWriteFailureBT]
  -[HMDEventAggregationAnalysisLogEvent eventFlagsManager]
  -[HMDEventAggregationAnalysisLogEvent submitAtDate:error:]
  -[HMDEventAggregationAnalysisLogEvent processLaunchCount]
  -[HMDEventAggregationAnalysisLogEvent jetsamReasonHighwaterCount]
  -[HMDEventAggregationAnalysisLogEvent jetsamReasonProcessLimitCount]
  -[HMDEventAggregationAnalysisLogEvent jetsamReasonUnknownKillCount]
  -[HMDEventAggregationAnalysisLogEvent jetsamReasonOtherCount]
  -[HMDEventAggregationAnalysisLogEvent processMemoryPressureStateWarningCount]
  -[HMDEventAggregationAnalysisLogEvent processMemoryPressureStateCriticalCount]
  -[HMDEventAggregationAnalysisLogEvent sampledAverageProcessMemoryUsage]
  -[HMDEventAggregationAnalysisLogEvent sampledPeakProcessMemoryUsage]
  -[HMDEventAggregationAnalysisLogEvent remoteMessagesSentCount]
  -[HMDEventAggregationAnalysisLogEvent remoteMessagesReceivedCount]
  -[HMDEventAggregationAnalysisLogEvent cloudSyncPushCount]
  -[HMDEventAggregationAnalysisLogEvent cloudSyncFetchCount]
  -[HMDEventAggregationAnalysisLogEvent cloudSyncUploadCount]
  -[HMDEventAggregationAnalysisLogEvent cloudSyncUploadErrorCount]
  -[HMDEventAggregationAnalysisLogEvent homeDataBytesFetched]
  -[HMDEventAggregationAnalysisLogEvent homeDataBytesPushed]
  -[HMDEventAggregationAnalysisLogEvent legacyHomeDataBytesFetched]
  -[HMDEventAggregationAnalysisLogEvent legacyHomeDataBytesPushed]
  -[HMDEventAggregationAnalysisLogEvent numReadSiri]
  -[HMDEventAggregationAnalysisLogEvent numWriteSiri]
  -[HMDEventAggregationAnalysisLogEvent numReadFirstPartyApp]
  -[HMDEventAggregationAnalysisLogEvent numWriteFirstPartyApp]
  -[HMDEventAggregationAnalysisLogEvent numReadThirdPartyApp]
  -[HMDEventAggregationAnalysisLogEvent numWriteThirdPartyApp]
  -[HMDEventAggregationAnalysisLogEvent averageLatencyIP]
  -[HMDEventAggregationAnalysisLogEvent averageLatencyBT]
  -[HMDEventAggregationAnalysisLogEvent averageLatencyIDS]
  -[HMDEventAggregationAnalysisLogEvent numAccessoriesAdded]
  -[HMDEventAggregationAnalysisLogEvent numScenesAdded]
  -[HMDEventAggregationAnalysisLogEvent numTriggersAdded]
  -[HMDEventAggregationAnalysisLogEvent numShortcutsAdded]
  -[HMDEventAggregationAnalysisLogEvent numScenesUserRun]
  -[HMDEventAggregationAnalysisLogEvent numShortcutsRun]
  -[HMDEventAggregationAnalysisLogEvent numTriggersFired]
  -[HMDEventAggregationAnalysisLogEvent hapIPInvalidationCount]
  -[HMDEventAggregationAnalysisLogEvent hapIPSentHTTPRequestsCount]
  -[HMDEventAggregationAnalysisLogEvent hapIPReceivedHTTPResponsesCount]
  -[HMDEventAggregationAnalysisLogEvent hapIPReceivedHTTPEventCount]
  -[HMDEventAggregationAnalysisLogEvent hapBTLEConnectionsCount]
  -[HMDEventAggregationAnalysisLogEvent hapBTLEConnectionPerReasonsCount]
  -[HMDEventAggregationAnalysisLogEvent hapBTLEDiscoveriesCount]
  -[HMDEventAggregationAnalysisLogEvent cameraStreamStartSuccessCount]
  -[HMDEventAggregationAnalysisLogEvent cameraStreamStartFailureCount]
  -[HMDEventAggregationAnalysisLogEvent fetchCameraClipVideoSegmentAssetCount]
  -[HMDEventAggregationAnalysisLogEvent acceptedXPCRequestsCount]
  -[HMDEventAggregationAnalysisLogEvent erroredXPCRequestsCount]
  -[HMDEventAggregationAnalysisLogEvent sentXPCNotificationsCount]
  -[HMDEventAggregationAnalysisLogEvent filteredXPCNotificationsCount]
  -[HMDEventAggregationAnalysisLogEvent cameraRecordingReachabilityChangedCount]
  -[HMDEventAggregationAnalysisLogEvent cameraRecordingReachabilityOfflineDuration]
  -[HMDEventAggregationAnalysisLogEvent homeHubReachabilityChangedCount]
  -[HMDEventAggregationAnalysisLogEvent isActiveDay]
  -[HMDEventAggregationAnalysisLogEvent activeDaysPerMonthCount]
  -[HMDEventAggregationAnalysisLogEvent initWithDataSyncStateDescription:]
  -[HMDEventAggregationAnalysisLogEvent setEventCountersManager:]
  -[HMDEventAggregationAnalysisLogEvent setEventFlagsManager:]
  -[HMDEventAggregationAnalysisLogEvent cloudSyncDecryptionFailed]
  -[HMDEventAggregationAnalysisLogEvent cloudSyncLastDecryptionFailed]
  -[HMDEventAggregationAnalysisLogEvent cloudSyncMaximumDelayReached]
  -[HMDEventAggregationAnalysisLogEvent numReadInternalRequested]
  -[HMDEventAggregationAnalysisLogEvent numWriteInternalRequested]
  -[HMDEventAggregationAnalysisLogEvent numReadUnknownSource]
  -[HMDEventAggregationAnalysisLogEvent numWriteUnknownSource]
  -[HMDEventAggregationAnalysisLogEvent numReadWriteSuccessIDS]
  -[HMDEventAggregationAnalysisLogEvent numReadWriteFailureIDS]
  -[HMDEventAggregationAnalysisLogEvent AWDMessageType]
  -[HMDEventAggregationAnalysisLogEvent metricForAWD]


HMDCameraAudioParameterSelection : HMDCameraParameterSelectionBase
 @property  HMDSupportedAudioStreamConfiguration *supportedAudioStreamConfiguration
 @property  HMDSupportedRTPConfiguration *rtpConfiguration
 @property  HMDSelectedAudioParameters *selectedAudioParameters
 @property  HMDStreamingCapabilities *streamingCapabilities
 @property  NSArray *audioCodecsPreference
 @property  NSArray *bitrateSettingsPreference
 @property  NSArray *sampleRatesPreference
 @property  NSArray *validAudioParameterCombinations
 @property  HMDAudioCodecGroup *selectedCodecGroupType
 @property  HMDBitRateSetting *selectedBitRateSetting
 @property  HMDAudioSampleRate *selectedSampleRate
 @property  NSNumber *selectedAudioChannelCount
 @property  HMDCameraAudioParameterCombination *selectedAudioParameterCombination
 @property  NSNumber *comfortNoiseSupported

  // class methods
  +[HMDCameraAudioParameterSelection logCategory]

  // instance methods
  -[HMDCameraAudioParameterSelection logIdentifier]
  -[HMDCameraAudioParameterSelection .cxx_destruct]
  -[HMDCameraAudioParameterSelection _generateAllCombinations:]
  -[HMDCameraAudioParameterSelection audioCodecsPreference]
  -[HMDCameraAudioParameterSelection streamingCapabilities]
  -[HMDCameraAudioParameterSelection supportedAudioStreamConfiguration]
  -[HMDCameraAudioParameterSelection bitrateSettingsPreference]
  -[HMDCameraAudioParameterSelection sampleRatesPreference]
  -[HMDCameraAudioParameterSelection _selectParametersFromCodec:bitRateSettings:sampleRates:audioChannelCount:]
  -[HMDCameraAudioParameterSelection setComfortNoiseSupported:]
  -[HMDCameraAudioParameterSelection validAudioParameterCombinations]
  -[HMDCameraAudioParameterSelection setSelectedCodecGroupType:]
  -[HMDCameraAudioParameterSelection setSelectedBitRateSetting:]
  -[HMDCameraAudioParameterSelection setSelectedSampleRate:]
  -[HMDCameraAudioParameterSelection setSelectedAudioChannelCount:]
  -[HMDCameraAudioParameterSelection setSelectedAudioParameterCombination:]
  -[HMDCameraAudioParameterSelection rtpConfiguration]
  -[HMDCameraAudioParameterSelection selectedAudioParameterCombination]
  -[HMDCameraAudioParameterSelection selectedAudioChannelCount]
  -[HMDCameraAudioParameterSelection selectedBitRateSetting]
  -[HMDCameraAudioParameterSelection selectedSampleRate]
  -[HMDCameraAudioParameterSelection selectedCodecGroupType]
  -[HMDCameraAudioParameterSelection comfortNoiseSupported]
  -[HMDCameraAudioParameterSelection initWithSessionID:supportedAudioConfiguration:supportedRTPConfiguration:streamingCapabilities:]
  -[HMDCameraAudioParameterSelection selectAudioParameters]
  -[HMDCameraAudioParameterSelection createSRTPParamters]
  -[HMDCameraAudioParameterSelection createSelectedAudioParameters]
  -[HMDCameraAudioParameterSelection selectedAudioParameters]
  -[HMDCameraAudioParameterSelection setSelectedAudioParameters:]


HMDHomeInvitation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, NSSecureCoding>
 @property  HMDHome *home
 @property  HMHomeInvitationData *invitationData
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  @? resolutionHandler
 @property  @? expirationHandler
 @property  HMFTimer *timer
 @property  NSArray *operations
 @property  NSUUID *identifier
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  long long invitationState
 @property  BOOL expired
 @property  BOOL pending
 @property  BOOL accepted
 @property  BOOL declined
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeInvitation supportsSecureCoding]

  // instance methods
  -[HMDHomeInvitation timerDidFire:]
  -[HMDHomeInvitation operations]
  -[HMDHomeInvitation setEndDate:]
  -[HMDHomeInvitation startDate]
  -[HMDHomeInvitation timer]
  -[HMDHomeInvitation setTimer:]
  -[HMDHomeInvitation .cxx_destruct]
  -[HMDHomeInvitation accept]
  -[HMDHomeInvitation invitationState]
  -[HMDHomeInvitation setHome:]
  -[HMDHomeInvitation invitationData]
  -[HMDHomeInvitation initWithCoder:invitationData:]
  -[HMDHomeInvitation setInvitationData:]
  -[HMDHomeInvitation encodeWithCoder:]
  -[HMDHomeInvitation identifier]
  -[HMDHomeInvitation clientQueue]
  -[HMDHomeInvitation decline]
  -[HMDHomeInvitation isExpired]
  -[HMDHomeInvitation endDate]
  -[HMDHomeInvitation resolutionHandler]
  -[HMDHomeInvitation setResolutionHandler:]
  -[HMDHomeInvitation setInvitationState:]
  -[HMDHomeInvitation isPending]
  -[HMDHomeInvitation expire]
  -[HMDHomeInvitation home]
  -[HMDHomeInvitation setExpirationHandler:]
  -[HMDHomeInvitation expirationHandler]
  -[HMDHomeInvitation setOperations:]
  -[HMDHomeInvitation isDeclined]
  -[HMDHomeInvitation _clearTimer]
  -[HMDHomeInvitation initWithCoder:]
  -[HMDHomeInvitation setClientQueue:]
  -[HMDHomeInvitation isAccepted]
  -[HMDHomeInvitation _configureTimer]
  -[HMDHomeInvitation initWithInvitationData:forHome:]
  -[HMDHomeInvitation _resolve:]
  -[HMDHomeInvitation updateInvitationState:]
  -[HMDHomeInvitation refreshDisplayName]
  -[HMDHomeInvitation notifyStateChangedForMessage:]
  -[HMDHomeInvitation updateTimer:clientQueue:]
  -[HMDHomeInvitation describeWithFormat]


HMDOutgoingHomeInvitation : HMDHomeInvitation <HMDBackingStoreObjectProtocol>
 @property  NSArray *operationIdentifiers
 @property  NSString *inviteeDestinationAddress
 @property  NSArray *accessoryInvitationsInformation
 @property  NSUUID *uuid
 @property  HMDUser *user
 @property  NSArray *operations
 @property  BOOL complete
 @property  BOOL responseReceived
 @property  NSUUID *messageIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDOutgoingHomeInvitation supportsSecureCoding]

  // instance methods
  -[HMDOutgoingHomeInvitation user]
  -[HMDOutgoingHomeInvitation setUser:]
  -[HMDOutgoingHomeInvitation isComplete]
  -[HMDOutgoingHomeInvitation operations]
  -[HMDOutgoingHomeInvitation responseReceived]
  -[HMDOutgoingHomeInvitation uuid]
  -[HMDOutgoingHomeInvitation .cxx_destruct]
  -[HMDOutgoingHomeInvitation setResponseReceived:]
  -[HMDOutgoingHomeInvitation encodeWithCoder:]
  -[HMDOutgoingHomeInvitation messageIdentifier]
  -[HMDOutgoingHomeInvitation cancel]
  -[HMDOutgoingHomeInvitation shortDescription]
  -[HMDOutgoingHomeInvitation initWithCoder:]
  -[HMDOutgoingHomeInvitation modelObjectWithChangeType:version:]
  -[HMDOutgoingHomeInvitation transactionObjectUpdated:newValues:message:]
  -[HMDOutgoingHomeInvitation transactionObjectRemoved:message:]
  -[HMDOutgoingHomeInvitation updateInvitationState:]
  -[HMDOutgoingHomeInvitation refreshDisplayName]
  -[HMDOutgoingHomeInvitation notifyStateChangedForMessage:]
  -[HMDOutgoingHomeInvitation describeWithFormat]
  -[HMDOutgoingHomeInvitation initWithUUID:invitee:invitationState:forHome:expiryDate:messageIdentifier:]
  -[HMDOutgoingHomeInvitation operationIdentifiers]
  -[HMDOutgoingHomeInvitation inviteeDestinationAddress]
  -[HMDOutgoingHomeInvitation accessoryInvitationsInformation]
  -[HMDOutgoingHomeInvitation setOperationIdentifiers:]
  -[HMDOutgoingHomeInvitation _transactionOutgoingInvitiationUpdated:newValues:message:]
  -[HMDOutgoingHomeInvitation updateUser:]
  -[HMDOutgoingHomeInvitation setInviteeDestinationAddress:]
  -[HMDOutgoingHomeInvitation processUserManagementOperationIdentifiers:]
  -[HMDOutgoingHomeInvitation updateUserManagementOperations:]
  -[HMDOutgoingHomeInvitation emptyModelObjectWithChangeType:]
  -[HMDOutgoingHomeInvitation initWithInvitee:invitationState:forHome:expiryDate:messageIdentifier:]


HMDOutgoingHomeInvitationModel : HMDBackingStoreModelObject
 @property  NSDictionary *user
 @property  NSNumber *invitationState
 @property  NSDate *expiryDate
 @property  NSString *messageIdentifier
 @property  NSNumber *responseReceived
 @property  NSString *inviteeDestinationAddress
 @property  NSArray *operations
 @property  NSArray *operationIdentifiers

  // class methods
  +[HMDOutgoingHomeInvitationModel properties]

  // instance methods
  -[HMDOutgoingHomeInvitationModel dependentUUIDs]


HMDIncomingHomeInvitation : HMDHomeInvitation
 @property  NSDictionary *bulletinContext
 @property  NSString *homeName
 @property  NSUUID *homeUUID
 @property  HMDAccount *inviterAccount
 @property  HMFPairingIdentity *inviterIdentity
 @property  NSString *inviterUserID

  // class methods
  +[HMDIncomingHomeInvitation supportsSecureCoding]

  // instance methods
  -[HMDIncomingHomeInvitation .cxx_destruct]
  -[HMDIncomingHomeInvitation inviterUserID]
  -[HMDIncomingHomeInvitation encodeWithCoder:]
  -[HMDIncomingHomeInvitation bulletinContext]
  -[HMDIncomingHomeInvitation homeName]
  -[HMDIncomingHomeInvitation homeUUID]
  -[HMDIncomingHomeInvitation initWithCoder:]
  -[HMDIncomingHomeInvitation refreshDisplayName]
  -[HMDIncomingHomeInvitation describeWithFormat]
  -[HMDIncomingHomeInvitation inviterAccount]
  -[HMDIncomingHomeInvitation inviterIdentity]
  -[HMDIncomingHomeInvitation initWithInviterAccount:invitationIdentifier:invitationState:homeName:homeUUID:inviterIdentity:expiryDate:]


HMDHomeAIPersonDataReceiver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMIPersonManagerDataSource, HMDPersonDataReceiver>
 @property  HMIPersonManager *personManager
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDPersonDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMIHomePersonManager *homePersonManager
 @property  HMIExternalPersonManager *photosPersonManager

  // instance methods
  -[HMDHomeAIPersonDataReceiver setDataSource:]
  -[HMDHomeAIPersonDataReceiver .cxx_destruct]
  -[HMDHomeAIPersonDataReceiver workQueue]
  -[HMDHomeAIPersonDataReceiver personManager]
  -[HMDHomeAIPersonDataReceiver dataSource]
  -[HMDHomeAIPersonDataReceiver performCloudPullWithCompletion:]
  -[HMDHomeAIPersonDataReceiver fetchPersonsWithUUIDs:completion:]
  -[HMDHomeAIPersonDataReceiver fetchAllPersonsWithCompletion:]
  -[HMDHomeAIPersonDataReceiver fetchFaceCropsForPersonsWithUUIDs:completion:]
  -[HMDHomeAIPersonDataReceiver fetchAllPersonFaceCropsWithCompletion:]
  -[HMDHomeAIPersonDataReceiver fetchAllFaceprintsWithCompletion:]
  -[HMDHomeAIPersonDataReceiver fetchFaceprintsForFaceCropsWithUUIDs:completion:]
  -[HMDHomeAIPersonDataReceiver configureWithDataSource:home:]
  -[HMDHomeAIPersonDataReceiver handleUpdatedPerson:mirrorOutputFuture:]
  -[HMDHomeAIPersonDataReceiver handleUpdatedPersonFaceCrop:mirrorOutputFuture:]
  -[HMDHomeAIPersonDataReceiver handleUpdatedFaceprint:mirrorOutputFuture:]
  -[HMDHomeAIPersonDataReceiver handleRemovedPersonWithUUID:mirrorOutputFuture:]
  -[HMDHomeAIPersonDataReceiver handleRemovedFaceCropWithUUID:mirrorOutputFuture:]
  -[HMDHomeAIPersonDataReceiver handleRemovedFaceprintWithUUID:mirrorOutputFuture:]
  -[HMDHomeAIPersonDataReceiver handleUpdatedIsCurrentDeviceAvailableResident:]
  -[HMDHomeAIPersonDataReceiver handleUpdatedIsDataSyncInProgress:]
  -[HMDHomeAIPersonDataReceiver initWithPersonManager:workQueue:]


HMDBulletinBoardNotificationServiceGroup : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, HMFMessageReceiver, HMFLogging, HMFDumpState>
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSHashTable *cameraProfilesTable
 @property  NSHashTable *associatedServicesTable
 @property  NSSet *cameraProfileUUIDs
 @property  NSSet *associatedServiceUUIDs
 @property  HMDBulletinBoardNotification *bulletinBoardNotification
 @property  NSArray *associatedServices
 @property  NSArray *cameraProfiles
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBulletinBoardNotificationServiceGroup supportsSecureCoding]
  +[HMDBulletinBoardNotificationServiceGroup logCategory]

  // instance methods
  -[HMDBulletinBoardNotificationServiceGroup messageTargetUUID]
  -[HMDBulletinBoardNotificationServiceGroup messageReceiveQueue]
  -[HMDBulletinBoardNotificationServiceGroup logIdentifier]
  -[HMDBulletinBoardNotificationServiceGroup init]
  -[HMDBulletinBoardNotificationServiceGroup _registerNotificationHandlers]
  -[HMDBulletinBoardNotificationServiceGroup setCameraProfileUUIDs:]
  -[HMDBulletinBoardNotificationServiceGroup setAssociatedServiceUUIDs:]
  -[HMDBulletinBoardNotificationServiceGroup bulletinBoardNotification]
  -[HMDBulletinBoardNotificationServiceGroup cameraProfiles]
  -[HMDBulletinBoardNotificationServiceGroup cameraProfileUUIDs]
  -[HMDBulletinBoardNotificationServiceGroup associatedServiceUUIDs]
  -[HMDBulletinBoardNotificationServiceGroup setCameraProfiles:]
  -[HMDBulletinBoardNotificationServiceGroup associatedServices]
  -[HMDBulletinBoardNotificationServiceGroup setAssociatedServices:]
  -[HMDBulletinBoardNotificationServiceGroup initWithBulletinBoardNotification:]
  -[HMDBulletinBoardNotificationServiceGroup _sendNotification:]
  -[HMDBulletinBoardNotificationServiceGroup dealloc]
  -[HMDBulletinBoardNotificationServiceGroup .cxx_destruct]
  -[HMDBulletinBoardNotificationServiceGroup encodeWithCoder:]
  -[HMDBulletinBoardNotificationServiceGroup setMsgDispatcher:]
  -[HMDBulletinBoardNotificationServiceGroup msgDispatcher]
  -[HMDBulletinBoardNotificationServiceGroup dumpState]
  -[HMDBulletinBoardNotificationServiceGroup initWithCoder:]
  -[HMDBulletinBoardNotificationServiceGroup _handleBulletinBoardNotificationServiceGroupRequest:]
  -[HMDBulletinBoardNotificationServiceGroup _prepareServiceGroupPayload]
  -[HMDBulletinBoardNotificationServiceGroup _configureServices]
  -[HMDBulletinBoardNotificationServiceGroup _isNotificationGeneratingService:]
  -[HMDBulletinBoardNotificationServiceGroup _isDefaultRoom:ofHome:]
  -[HMDBulletinBoardNotificationServiceGroup _accessoriesInRoom:ofHome:]
  -[HMDBulletinBoardNotificationServiceGroup _cameraNotificationGeneratingServicesForAccessory:]
  -[HMDBulletinBoardNotificationServiceGroup _isSupportedAssociationService:]
  -[HMDBulletinBoardNotificationServiceGroup _isAlarmService:]
  -[HMDBulletinBoardNotificationServiceGroup _updateAssociatedServices:associatedCameras:]
  -[HMDBulletinBoardNotificationServiceGroup _updateAssociatedServicesTable:]
  -[HMDBulletinBoardNotificationServiceGroup associatedServicesTable]
  -[HMDBulletinBoardNotificationServiceGroup setCameraProfilesTable:]
  -[HMDBulletinBoardNotificationServiceGroup cameraProfilesTable]
  -[HMDBulletinBoardNotificationServiceGroup setAssociatedServicesTable:]
  -[HMDBulletinBoardNotificationServiceGroup _cameraProfileWithID:]
  -[HMDBulletinBoardNotificationServiceGroup configureMsgDispatcher:]
  -[HMDBulletinBoardNotificationServiceGroup configureBulletinNotification]
  -[HMDBulletinBoardNotificationServiceGroup actionContextForCameraProfileID:]


HMDCalendarEvent : HMDTimeEvent <NSSecureCoding, HMFDumpState, HMFLogging, HMDHomeMessageReceiver>
 @property  NSDateComponents *fireDateComponents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDCalendarEvent supportsSecureCoding]
  +[HMDCalendarEvent logCategory]

  // instance methods
  -[HMDCalendarEvent .cxx_destruct]
  -[HMDCalendarEvent encodeWithCoder:]
  -[HMDCalendarEvent setFireDateComponents:]
  -[HMDCalendarEvent fireDateComponents]
  -[HMDCalendarEvent initWithCoder:]
  -[HMDCalendarEvent emptyModelObject]
  -[HMDCalendarEvent _transactionObjectUpdated:newValues:message:]
  -[HMDCalendarEvent _transactionObjectRemoved:message:]
  -[HMDCalendarEvent modelObjectWithChangeType:]
  -[HMDCalendarEvent createPayload]
  -[HMDCalendarEvent initWithModel:home:]
  -[HMDCalendarEvent areMonthDayNotMatching:]
  -[HMDCalendarEvent _handleUpdateRequest:]
  -[HMDCalendarEvent _nextTimerDate]
  -[HMDCalendarEvent analyticsTriggerEventData]


HMDCalendarEventModel : HMDEventModel
 @property  NSData *fireDateComponents

  // class methods
  +[HMDCalendarEventModel properties]
  +[HMDCalendarEventModel eventModelWithDictionary:home:eventTriggerUUID:message:]


HMDRemoteLoginInitiatorSignoutSession : HMDRemoteLoginInitiatorSession
  // instance methods
  -[HMDRemoteLoginInitiatorSignoutSession dealloc]
  -[HMDRemoteLoginInitiatorSignoutSession initWithSessionID:home:]


HMDDynamicActivityAttributionPublisher : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // instance methods
  -[HMDDynamicActivityAttributionPublisher setCurrentAttributionKey:andApp:]


HMDPendingResponse : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMFMessage *requestMessage
 @property  NSString *originalRequestIdentifier
 @property  unsigned long pendingResponseCount
 @property  unsigned long totalRequestsCount
 @property  NSMutableArray *allResponses
 @property  NSMutableArray *latestResponses
 @property  @? responseHandler
 @property  double creationTime

  // class methods
  +[HMDPendingResponse tupleForMessage:originalRequestIdentifier:requestCount:withCompletionHandler:]

  // instance methods
  -[HMDPendingResponse creationTime]
  -[HMDPendingResponse setCreationTime:]
  -[HMDPendingResponse .cxx_destruct]
  -[HMDPendingResponse responseHandler]
  -[HMDPendingResponse requestMessage]
  -[HMDPendingResponse setResponseHandler:]
  -[HMDPendingResponse setRequestMessage:]
  -[HMDPendingResponse setOriginalRequestIdentifier:]
  -[HMDPendingResponse setTotalRequestsCount:]
  -[HMDPendingResponse setPendingResponseCount:]
  -[HMDPendingResponse setAllResponses:]
  -[HMDPendingResponse setLatestResponses:]
  -[HMDPendingResponse totalRequestsCount]
  -[HMDPendingResponse pendingResponseCount]
  -[HMDPendingResponse allResponses]
  -[HMDPendingResponse latestResponses]
  -[HMDPendingResponse addToPendingResponses:]
  -[HMDPendingResponse addResponsesToPendingResponse:]
  -[HMDPendingResponse retrieveAndClearAllResponses]
  -[HMDPendingResponse retrieveAndClearLatestResponses]
  -[HMDPendingResponse originalRequestIdentifier]


HMDAccessoryReachabilityTuple : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *accessoryUUID
 @property  BOOL previouslySentReachability
 @property  BOOL currentReachability

  // class methods
  +[HMDAccessoryReachabilityTuple tupleWithAccessoryUUID:reachable:]

  // instance methods
  -[HMDAccessoryReachabilityTuple setAccessoryUUID:]
  -[HMDAccessoryReachabilityTuple accessoryUUID]
  -[HMDAccessoryReachabilityTuple .cxx_destruct]
  -[HMDAccessoryReachabilityTuple isEqual:]
  -[HMDAccessoryReachabilityTuple setCurrentReachability:]
  -[HMDAccessoryReachabilityTuple currentReachability]
  -[HMDAccessoryReachabilityTuple setPreviouslySentReachability:]
  -[HMDAccessoryReachabilityTuple previouslySentReachability]


HMDAccessoryRetrievalCompletionTuple : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  long long linkType
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? completion

  // class methods
  +[HMDAccessoryRetrievalCompletionTuple tupleWithLinkType:queue:completion:]

  // instance methods
  -[HMDAccessoryRetrievalCompletionTuple completion]
  -[HMDAccessoryRetrievalCompletionTuple linkType]
  -[HMDAccessoryRetrievalCompletionTuple setCompletion:]
  -[HMDAccessoryRetrievalCompletionTuple .cxx_destruct]
  -[HMDAccessoryRetrievalCompletionTuple setQueue:]
  -[HMDAccessoryRetrievalCompletionTuple queue]
  -[HMDAccessoryRetrievalCompletionTuple setLinkType:]


HMDDeviceRegistrationEntry : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDDevice *device
 @property  NSArray *accessoryUUIDList

  // instance methods
  -[HMDDeviceRegistrationEntry device]
  -[HMDDeviceRegistrationEntry .cxx_destruct]
  -[HMDDeviceRegistrationEntry isEqual:]
  -[HMDDeviceRegistrationEntry initWithDevice:accessoryList:]
  -[HMDDeviceRegistrationEntry accessoryUUIDList]


HMDHome : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBulletinIdentifiers, HMDResidentDeviceManagerDelegate, HMDHomeMediaSystemHandlerDelegate, HMFLogging, HMDAccessoryBrowserDelegate, HMDHomeMessageReceiver, HMDRelayManagerDelegate, HMFTimerDelegate, HMFDumpState, HMDUserManagementOperationDelegate, HMDMediaActionRouterDataSource, NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  NSString *contextID
 @property  NSUUID *contextSPIUniqueIdentifier
 @property  HMDAccessoryCount *accessoryCount
 @property  NSArray *accessoriesRequiringManualReconfigurationOnRouterRemoval
 @property  long long protectionMode
 @property  unsigned long networkRouterSupport
 @property  HMDNetworkRouterClientManager *routerClientManager
 @property  NSArray *wiFiRouterAccessories
 @property  HMDHAPAccessory *activeNetworkRouterAccessory
 @property  BOOL supportsRouterManagement
 @property  @? currentUserFactory
 @property  NSHashTable *removeAccessoryInProgressForHMDAccessories
 @property  HMDApplicationData *appData
 @property  long long atHomeLevel
 @property  BOOL residentSupported
 @property  unsigned long homeHubState
 @property  <NSObject> *WiFiAssertion
 @property  NSMutableDictionary *newlyConfiguredAccessories
 @property  NSMutableDictionary *addPendingAccessorySetupCodeHandlers
 @property  NSMutableDictionary *addPendingAccessorySetupCodes
 @property  NSMapTable *addPendingAccessories
 @property  NSMutableDictionary *addAccessoryRequestMap
 @property  NSMapTable *retrievalCompletionTuplesForAccessories
 @property  NSMutableDictionary *notificationHandlerMap
 @property  NSArray *mediaSessions
 @property  NSArray *mediaSessionStates
 @property  HMDHomeReprovisionHandler *homeReprovisionHandler
 @property  unsigned long stateHandle
 @property  NSHashTable *connectionsDiscoveringSymptomsForNearbyDevices
 @property  BOOL multiUserEnabled
 @property  BOOL hasAnyUserAcknowledgedCameraRecordingOnboarding
 @property  BOOL doorbellChimeEnabled
 @property  BOOL ownerTrustZoneCapable
 @property  HMDUserActionPredictionManager *userActionPredictionManager
 @property  NSMutableArray *currentTriggers
 @property  long long previousReachableAccessoriesCount
 @property  long long previousReachableAppleMediaAccessoriesCount
 @property  HMDHomePersonDataManager *personDataManager
 @property  HMDHomeNaturalLightingContextUpdater *naturalLightingContextUpdater
 @property  HMDNaturalLightingContext *naturalLightingContext
 @property  HMDHomeMediaSystemHandler *mediaSystemController
 @property  HMDHomeObjectChangeHandler *homeObjectChangeHandler
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  <HMDAccessoryBrowserProtocol> *accessoryBrowser
 @property  HMDBackingStore *backingStore
 @property  HMDRelayManager *relayManager
 @property  NSMutableArray *rooms
 @property  NSMutableArray *zones
 @property  NSMutableArray *discoveredAccessories
 @property  NSMutableArray *services
 @property  NSMutableArray *serviceGroups
 @property  NSMutableArray *actionSets
 @property  NSMutableArray *triggerOwnedActionSets
 @property  NSMutableArray *outgoingInvitations
 @property  NSArray *usersSupportingPresence
 @property  NSMutableArray *pendingUsers
 @property  NSMutableArray *removedUsers
 @property  NSMutableArray *unconfiguredResidentDevices
 @property  HMDRoom *roomForEntireHome
 @property  long long configurationVersion
 @property  long long lastSyncedConfigurationVersion
 @property  long long expectedConfigurationVersion
 @property  NSString *ownerName
 @property  NSDate *creationDate
 @property  NSDate *firstHAPAccessoryAddedDate
 @property  HMDNotificationRegistry *notificationRegistry
 @property  BOOL remoteAccessIsEnabled
 @property  NSMutableSet *heartbeatPingMessagesQueuedWithServer
 @property  NSMutableSet *pendingResponsesForRemoteAccessSetup
 @property  BOOL adminUser
 @property  BOOL sharedAdmin
 @property  BOOL watchSkipVersionCheck
 @property  BOOL registeredNotificationWithRemoteGateway
 @property  BOOL allowsRemoteAccess
 @property  BOOL migratingAfterResidentChange
 @property  NSMutableArray *assistantOperations
 @property  NSMutableDictionary *enableNotificationPayload
 @property  NSMutableDictionary *disableNotificationPayload
 @property  HMFTimer *modifyNotificationsCoalesceTimer
 @property  NSHashTable *unpairedSecondaryHAPAccessories
 @property  HMDResidentDeviceManager *residentDeviceManager
 @property  HMDSharedHomeUpdateHandler *sharedHomeUpdateHandler
 @property  HMDResidentDevice *resident
 @property  BOOL currentRemoteReachabilityRegistration
 @property  BOOL migrationNeeded
 @property  HMFTimer *reachabilityDeregistrationTimer
 @property  NSMutableArray *reachabilityRegisteredDevices
 @property  HMFTimer *reachabilityNotificationTimer
 @property  NSMutableArray *remoteReachabilityNotificationPendingAccessories
 @property  HMFTimer *disableNotificationTimer
 @property  NSMutableDictionary *pendingResponses
 @property  HMFTimer *pendingResponsesTimer
 @property  NSArray *residentCapableDevices
 @property  NSArray *residentEnabledDevices
 @property  NSMutableArray *ownedTriggers
 @property  NSMapTable *uuidToHAPAccessoryConfigTable
 @property  NSArray *accessories
 @property  HMDPredicateUtilities *predicateUtility
 @property  HMDHomeKitVersion *sharedHomeSourceVersion
 @property  NSUUID *spiClientIdentifier
 @property  HMDMediaActionRouter *mediaActionRouter
 @property  long long protectionMode
 @property  unsigned long networkRouterSupportDisableReason
 @property  unsigned long networkRouterSupport
 @property  HMDNetworkRouterClientManager *routerClientManager
 @property  HMDAccessoryNetworkProtectionGroupRegistry *networkProtectionGroupRegistry
 @property  NSUUID *activeNetworkRouterUUID
 @property  BOOL activeNetworkRouterInitialSetupNeeded
 @property  NSUUID *primaryNetworkRouterManagingDeviceUUID
 @property  HMDHomeKitVersion *minimumNetworkRouterSupportHomeKitVersion
 @property  HMDHomeKitVersion *minHomeKitVersionForAccessoryNetworkProtectionChange
 @property  HMFMessageDestination *messageDestination
 @property  HMHomePersonManagerSettings *personManagerSettings
 @property  NSUUID *personManagerZoneUUID
 @property  HMDResidentReachabilityNotificationManager *reachabilityNotificationManager
 @property  HMDAccessory *currentAccessory
 @property  double homepodSetupLatency
 @property  double homepodSettingsCreationTimestamp
 @property  long long reachableAccessoriesCount
 @property  long long reachableAppleMediaAccessoriesCount
 @property  NSArray *mediaSystems
 @property  NSString *name
 @property  HMDHomeObjectLookup *lookup
 @property  HMDHomeManager *homeManager
 @property  NSUUID *uuid
 @property  NSUUID *zoneID
 @property  HMDHomeLocationHandler *homeLocationHandler
 @property  HMUserPresenceAuthorization *presenceAuthStatus
 @property  HMUserPresenceCompute *presenceComputeStatus
 @property  HMDHomeAdministratorHandler *administratorHandler
 @property  NSArray *appleMediaAccessories
 @property  NSArray *hapAccessories
 @property  NSArray *cameraAccessories
 @property  BOOL anyBTLEAccessoryReachable
 @property  NSDate *notificationsUpdatedTime
 @property  NSMutableSet *notificationRegistrations
 @property  NSMutableSet *notificationDeregistrations
 @property  long long homeLocation
 @property  HMDHomeRemoteNotificationHandler *remoteNotificationHandler
 @property  HMDHomePresenceMonitor *presenceMonitor
 @property  HMDUserPresenceFeeder *presenceFeeder
 @property  HMDHomePeriodicReader *periodicReader
 @property  NSArray *enabledResidents
 @property  BOOL currentDevicePrimaryResident
 @property  HMDHomePersonManager *personManager
 @property  NSArray *triggers
 @property  HMDHomeNaturalLightingCurveWriter *naturalLightingCurveWriter
 @property  BOOL currentDeviceAvailableResident
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMDDevice *companionDevice
 @property  BOOL companionReachable
 @property  HMDLogEventDispatcher *logEventDispatcher
 @property  HMDHome *home

  // class methods
  +[HMDHome supportsSecureCoding]
  +[HMDHome logCategory]
  +[HMDHome shortDescription]
  +[HMDHome _initialize]
  +[HMDHome hasMessageReceiverChildren]
  +[HMDHome zoneIDFromHomeUUID:]
  +[HMDHome getBuiltinActionSets]
  +[HMDHome filterUsersSupportingPresence:]
  +[HMDHome notificationPayloadForChangedCharacterisitics:destinationIsXPCTransport:]
  +[HMDHome isCarPlayPaired]
  +[HMDHome appendCharacteristicsToAccessoryList:responseTuples:forMultipleCharacteristicsRemoteWrite:message:]
  +[HMDHome appendCharacteristicsToAccessoryList:responseTuples:forMultipleCharacteristicsRemoteRead:]
  +[HMDHome supportedAccessoryClasses]
  +[HMDHome isObjectContainedInHome:]

  // instance methods
  -[HMDHome messageTargetUUID]
  -[HMDHome messageDestination]
  -[HMDHome services]
  -[HMDHome _registerForNotifications]
  -[HMDHome messageReceiveQueue]
  -[HMDHome timerDidFire:]
  -[HMDHome owner]
  -[HMDHome zoneID]
  -[HMDHome triggerOwnedActionSets]
  -[HMDHome setWorkQueue:]
  -[HMDHome logIdentifier]
  -[HMDHome zones]
  -[HMDHome stateHandle]
  -[HMDHome lookup]
  -[HMDHome companionDevice]
  -[HMDHome rooms]
  -[HMDHome _registerStateHandler]
  -[HMDHome setServices:]
  -[HMDHome creationDate]
  -[HMDHome personManagerSettings]
  -[HMDHome uuid]
  -[HMDHome dealloc]
  -[HMDHome executeActionSet:]
  -[HMDHome .cxx_destruct]
  -[HMDHome removeUser:]
  -[HMDHome name]
  -[HMDHome configurationVersion]
  -[HMDHome triggers]
  -[HMDHome mediaProfileWithUUID:]
  -[HMDHome workQueue]
  -[HMDHome removeTrigger:]
  -[HMDHome encodeWithCoder:]
  -[HMDHome urlString]
  -[HMDHome outgoingInvitations]
  -[HMDHome setOwnerName:]
  -[HMDHome setMsgDispatcher:]
  -[HMDHome msgDispatcher]
  -[HMDHome handleSignificantTimeChange]
  -[HMDHome _registerForMessages]
  -[HMDHome migrationNeeded]
  -[HMDHome mediaSystems]
  -[HMDHome descriptionWithPointer:]
  -[HMDHome accessoryWithIdentifier:]
  -[HMDHome setHomeManager:]
  -[HMDHome accessories]
  -[HMDHome setBackingStore:]
  -[HMDHome homeLocation]
  -[HMDHome currentAccessory]
  -[HMDHome homeHubState]
  -[HMDHome isAdminUser]
  -[HMDHome setMultiUserEnabled:]
  -[HMDHome setDoorbellChimeEnabled:]
  -[HMDHome hasAnyUserAcknowledgedCameraRecordingOnboarding]
  -[HMDHome setAdminUser:]
  -[HMDHome setHasAnyUserAcknowledgedCameraRecordingOnboarding:]
  -[HMDHome isOwnerUser]
  -[HMDHome setOwnerUser:]
  -[HMDHome notificationsUpdatedTime]
  -[HMDHome setNotificationsUpdatedTime:]
  -[HMDHome isAutomaticSoftwareUpdateEnabled]
  -[HMDHome setAutomaticSoftwareUpdateEnabled:]
  -[HMDHome setMinimumMediaUserPrivilege:]
  -[HMDHome setMediaPeerToPeerEnabled:]
  -[HMDHome setMediaPassword:]
  -[HMDHome protectionMode]
  -[HMDHome setProtectionMode:]
  -[HMDHome networkRouterSupportDisableReason]
  -[HMDHome setNetworkRouterSupportDisableReason:]
  -[HMDHome networkRouterSupport]
  -[HMDHome setNetworkRouterSupport:]
  -[HMDHome setPersonManagerSettings:]
  -[HMDHome roomWithUUID:]
  -[HMDHome shortDescription]
  -[HMDHome currentTriggers]
  -[HMDHome triggerOwnedActionSetWithUUID:]
  -[HMDHome actionSetWithUUID:]
  -[HMDHome backingStore]
  -[HMDHome mediaPassword]
  -[HMDHome zoneWithUUID:]
  -[HMDHome evaluatePredicate:]
  -[HMDHome serviceGroupWithUUID:]
  -[HMDHome triggerWithUUID:]
  -[HMDHome removeAccessory:completionHandler:]
  -[HMDHome isDoorbellChimeEnabled]
  -[HMDHome unconfigure]
  -[HMDHome isMultiUserEnabled]
  -[HMDHome roomWithName:]
  -[HMDHome zoneWithName:]
  -[HMDHome serviceGroupWithName:]
  -[HMDHome actionSetWithName:]
  -[HMDHome triggerWithName:]
  -[HMDHome minimumMediaUserPrivilege]
  -[HMDHome personManager]
  -[HMDHome setZones:]
  -[HMDHome home]
  -[HMDHome setCurrentTriggers:]
  -[HMDHome isMediaPeerToPeerEnabled]
  -[HMDHome appData]
  -[HMDHome _removeAccessory:completionHandler:]
  -[HMDHome ownerName]
  -[HMDHome setStateHandle:]
  -[HMDHome users]
  -[HMDHome _removeCharacteristic:]
  -[HMDHome setAccessoryBrowser:]
  -[HMDHome accessoryBrowser]
  -[HMDHome contextID]
  -[HMDHome currentUser]
  -[HMDHome homeManager]
  -[HMDHome accessoryWithUUID:]
  -[HMDHome removeAccessory:]
  -[HMDHome presenceAuthStatus]
  -[HMDHome setPresenceAuthStatus:]
  -[HMDHome presenceComputeStatus]
  -[HMDHome setPresenceComputeStatus:]
  -[HMDHome setAccessories:]
  -[HMDHome setCreationDate:]
  -[HMDHome removeService:]
  -[HMDHome discoveredAccessories]
  -[HMDHome setName:]
  -[HMDHome addName:]
  -[HMDHome dumpState]
  -[HMDHome addAccessory:]
  -[HMDHome roomForEntireHome]
  -[HMDHome actionSets]
  -[HMDHome setConfigurationVersion:]
  -[HMDHome serviceGroups]
  -[HMDHome initWithCoder:]
  -[HMDHome removeCharacteristic:]
  -[HMDHome addUser:]
  -[HMDHome residentDeviceManager]
  -[HMDHome replaceName:withNewName:]
  -[HMDHome modelObjectWithChangeType:version:]
  -[HMDHome isSharedAdmin]
  -[HMDHome administratorHandler]
  -[HMDHome resident]
  -[HMDHome messageReceiverChildren]
  -[HMDHome transactionObjectUpdated:newValues:message:]
  -[HMDHome transactionObjectRemoved:message:]
  -[HMDHome modelObjectWithChangeType:]
  -[HMDHome backingStoreObjects:]
  -[HMDHome contextSPIUniqueIdentifier]
  -[HMDHome firmwareUpdateBulletinContext]
  -[HMDHome homeHubBulletinContext]
  -[HMDHome isCurrentDeviceConfirmedPrimaryResident]
  -[HMDHome presenceMonitor]
  -[HMDHome handleXPCConnectionInvalidated:]
  -[HMDHome _handleAddRoomModel:message:]
  -[HMDHome _handleAddZoneModel:message:]
  -[HMDHome _handleAddServiceGroupModel:message:]
  -[HMDHome _handleAddActionSetModel:message:]
  -[HMDHome _handleAddTimerTriggerModel:message:]
  -[HMDHome _handleAddEventTriggerModel:message:]
  -[HMDHome _handleAddAccessoryModel:message:]
  -[HMDHome _handleAddUserModel:message:]
  -[HMDHome _handleAddOutgoingHomeInvitationModel:message:]
  -[HMDHome mediaSystemController]
  -[HMDHome networkProtectionGroupRegistry]
  -[HMDHome _handleRemoveRoomModel:message:]
  -[HMDHome _handleRemoveZoneModel:message:]
  -[HMDHome _handleRemoveServiceGroupModel:message:]
  -[HMDHome _handleRemoveActionSetModel:message:]
  -[HMDHome _handleRemoveAccessoryModel:message:]
  -[HMDHome _handleRemoveUserModel:message:]
  -[HMDHome _handleRemoveTriggerModel:message:]
  -[HMDHome _handleRemoveOutgoingHomeInvitationModel:message:]
  -[HMDHome _handleRemoveAppDataModel:message:]
  -[HMDHome outgoingInvitationWithUUID:]
  -[HMDHome _handleUpdateAppDataModel:message:]
  -[HMDHome mediaSystemWithUUID:]
  -[HMDHome emptyModelObjectWithChangeType:]
  -[HMDHome saveWithReason:postSyncNotification:]
  -[HMDHome configureBulletinNotification]
  -[HMDHome homeLocationHandler]
  -[HMDHome initWithName:uuid:defaultRoomUUID:owner:homeManager:presenceAuth:currentUserFactory:]
  -[HMDHome _updateCurrentUserForSharedHome]
  -[HMDHome deriveNetworkRouterSupport:]
  -[HMDHome _deregisterStateHandler]
  -[HMDHome spiClientIdentifier]
  -[HMDHome atHomeLevel]
  -[HMDHome removedUsers]
  -[HMDHome unpairedSecondaryHAPAccessories]
  -[HMDHome notificationRegistrations]
  -[HMDHome notificationDeregistrations]
  -[HMDHome pendingResponses]
  -[HMDHome sharedHomeUpdateHandler]
  -[HMDHome sharedHomeSourceVersion]
  -[HMDHome addAccessoryRequestMap]
  -[HMDHome remoteAccessIsEnabled]
  -[HMDHome WiFiAssertion]
  -[HMDHome setWiFiAssertion:]
  -[HMDHome __registerForRemoteAccessoryReachabilityNotifications:]
  -[HMDHome _hasPairedReachableBTLEAccessories]
  -[HMDHome setAnyBTLEAccessoryReachable:]
  -[HMDHome addPendingAccessories]
  -[HMDHome addPendingAccessorySetupCodeHandlers]
  -[HMDHome addPendingAccessorySetupCodes]
  -[HMDHome saveToCurrentAccountWithReason:]
  -[HMDHome disableNotificationTimer]
  -[HMDHome setDisableNotificationTimer:]
  -[HMDHome _cleanAddAccessoryOperations]
  -[HMDHome _startHomeNotificationDeregistrationTimer]
  -[HMDHome _disableNotificationsForClient:]
  -[HMDHome removeAccessoryInProgressForHMDAccessories]
  -[HMDHome setRemoveAccessoryInProgressForHMDAccessories:]
  -[HMDHome retrievalCompletionTuplesForAccessories]
  -[HMDHome setRetrievalCompletionTuplesForAccessories:]
  -[HMDHome setAddPendingAccessories:]
  -[HMDHome setAddPendingAccessorySetupCodeHandlers:]
  -[HMDHome setAppData:]
  -[HMDHome filterBuiltinActionSets:]
  -[HMDHome createActionSetWithName:uuid:type:]
  -[HMDHome addMediaSession:]
  -[HMDHome addMediaSessionState:]
  -[HMDHome __addMediaSession:]
  -[HMDHome mediaSessionStateWithIdentifier:]
  -[HMDHome mediaSessionWithIdentifier:]
  -[HMDHome removeMediaSession:]
  -[HMDHome activeNetworkRouterUUID]
  -[HMDHome _evaluateNetworkProtectionAndRouterManagement]
  -[HMDHome _addTransactionForActiveNetworkRouterAccessory:isReplacement:]
  -[HMDHome periodicReader]
  -[HMDHome presenceFeeder]
  -[HMDHome homeReprovisionHandler]
  -[HMDHome setupBackingStore]
  -[HMDHome updateHomeLocation]
  -[HMDHome _purgeResidentUsers]
  -[HMDHome mediaSessions]
  -[HMDHome _registerPairedAccessory:transports:setupHash:]
  -[HMDHome _createBuiltinActionSets]
  -[HMDHome _addUserToIdentityRegistry:]
  -[HMDHome _removeUser:]
  -[HMDHome configureAfterAccessoriesConfigurationTrackerNotificationsWithCurrentAccessory:accessories:]
  -[HMDHome resubscribeForNotificationsOnResident:]
  -[HMDHome _evaluateShouldRelaunchAndSetRelaunch]
  -[HMDHome reEvaluateHomeHubState]
  -[HMDHome migrateAfterResidentChange]
  -[HMDHome _updateWoWState:]
  -[HMDHome _updateConfigurationVersion]
  -[HMDHome setMediaActionRouter:]
  -[HMDHome configurePersonDataManager]
  -[HMDHome setUserActionPredictionManager:]
  -[HMDHome userActionPredictionManager]
  -[HMDHome reachabilityNotificationManager]
  -[HMDHome configureNaturalLightingWithDemoModeEnabled:]
  -[HMDHome _addMediaSessionForCurrentAccessory:]
  -[HMDHome configureMediaSystems]
  -[HMDHome setNaturalLightingContextUpdater:]
  -[HMDHome naturalLightingContextUpdater]
  -[HMDHome setRelayManager:]
  -[HMDHome relayManager]
  -[HMDHome _updateCloudRelaySupport]
  -[HMDHome _addUserToContainer:]
  -[HMDHome _subscribeForNotificationFromRemoteGateway:]
  -[HMDHome redispatchToResidentMessage:target:responseQueue:viaDevice:]
  -[HMDHome _modifyNotificationOnResident:ignoreDeviceUnlockRequirement:forCharacteristics:]
  -[HMDHome enableNotificationPayload]
  -[HMDHome disableNotificationPayload]
  -[HMDHome modifyNotificationsCoalesceTimer]
  -[HMDHome setModifyNotificationsCoalesceTimer:]
  -[HMDHome _notificationPayloadsForRemoteGateway:]
  -[HMDHome _modifyCharacteristicNotificationsOnResident:mediaNotifications:enableNotification:]
  -[HMDHome registeredNotificationWithRemoteGateway]
  -[HMDHome _subscribeForHomeNotificationsFromRemoteGateway:]
  -[HMDHome setRegisteredNotificationWithRemoteGateway:]
  -[HMDHome _enableMediaNotifications:forMediaAccessory:]
  -[HMDHome _modifyCharacteristicNotifications:mediaNotifications:enableNotification:withDevice:]
  -[HMDHome _characteristicNotificationPayloadsOnDirectTransports:]
  -[HMDHome residentEnabledDevices]
  -[HMDHome _modifyCharacteristicNotificationsOnRemoteGateways:mediaNotifications:enableNotification:]
  -[HMDHome _residentUsers]
  -[HMDHome _enableNotificationsForDevices:]
  -[HMDHome notificationRegistry]
  -[HMDHome _disableNotificationsForDevices:]
  -[HMDHome enableResidentReachabilityNotification:forAccessories:completionHandler:]
  -[HMDHome _enableResidentReachabilityNotification:forAccessories:completionHandler:]
  -[HMDHome _canCurrentDeviceRegisterForReachabilityEventNotification]
  -[HMDHome isCurrentDevicePrimaryResident]
  -[HMDHome redispatchAccessoryReachabilityEventNotificationRegistrationToOtherResidentsWithPayload:withUserID:]
  -[HMDHome _redispatchAccessoryReachabilityEventNotificationRegistrationToOtherResidentsWithPayload:withUserID:]
  -[HMDHome _resubscribeForNotificationsOnResident:]
  -[HMDHome _handleRemoteGatewayNotificationRegistration:enable:]
  -[HMDHome _populateCharacteristicsThatNeedNotificationsFromDictionary:error:]
  -[HMDHome _populatePropertiesThatNeedNotificationsFromDictionary:]
  -[HMDHome homeConfigurationModelObjectWithChangeType:]
  -[HMDHome __saveConfigurationVersionTransaction]
  -[HMDHome expectedConfigurationVersion]
  -[HMDHome setExpectedConfigurationVersion:]
  -[HMDHome _saveSharedHomeToAccountWithReason:postSyncNotification:options:]
  -[HMDHome sharedHomeModel]
  -[HMDHome saveWithReason:information:postSyncNotification:]
  -[HMDHome saveWithReason:information:postSyncNotification:objectChange:]
  -[HMDHome _updateExpectConfigurationVersion]
  -[HMDHome _configureBulletinNotification]
  -[HMDHome _isSharedHomeVersionTrustZoneCapable]
  -[HMDHome setOwnerTrustZoneCapable:]
  -[HMDHome isOwnerTrustZoneCapable]
  -[HMDHome _removeService:]
  -[HMDHome _removeAllHomeContentsAndAccessoryPairings:queue:completionHandler:]
  -[HMDHome validateName:]
  -[HMDHome _reachabilityChangedForAccessory:reachable:]
  -[HMDHome reachabilityRegisteredDevices]
  -[HMDHome _updateReachabilityChangeToRegisteredDevices:]
  -[HMDHome _updateHomeLocation]
  -[HMDHome _writeCharacteristicValues:requestMessage:source:withCompletionHandler:]
  -[HMDHome ownedTriggers]
  -[HMDHome _getRunTimeStateUpdateWithOptions:includeMediaAccessoryState:includeResidentDeviceState:completion:]
  -[HMDHome _residentDeviceForResidentUser:]
  -[HMDHome residentDevicesIncludingRemoteGateways]
  -[HMDHome _readProfileState:viaDevice:message:]
  -[HMDHome redispatchMediaReadRequests:viaDevice:completion:]
  -[HMDHome hapAccessoriesForServer:linkType:]
  -[HMDHome hapAccessoriesForServer:]
  -[HMDHome _discoveredAccessoriesForServer:linkType:]
  -[HMDHome reachabilityDeregistrationTimer]
  -[HMDHome setReachabilityDeregistrationTimer:]
  -[HMDHome _registerForReachabilityChangeNotifications:mode:]
  -[HMDHome currentRemoteReachabilityRegistration]
  -[HMDHome _updateRemoteReachability:accessories:]
  -[HMDHome setCurrentRemoteReachabilityRegistration:]
  -[HMDHome redispatchToResidentMessage:target:responseQueue:]
  -[HMDHome _notifyClientsOfAccessoryInfoUpdatedForAccessories:shouldRefreshBadge:withCompletion:]
  -[HMDHome _handleRename:]
  -[HMDHome _handleAddRoom:]
  -[HMDHome _handleRemoveRoom:]
  -[HMDHome _handleAddZone:]
  -[HMDHome _handleRemoveZone:]
  -[HMDHome _handleAddServiceGroup:]
  -[HMDHome _handleRemoveServiceGroup:]
  -[HMDHome _handleAddActionSet:]
  -[HMDHome _handleRemoveActionSet:]
  -[HMDHome _handleRemoveTrigger:]
  -[HMDHome _handleUpdateUserAccess:]
  -[HMDHome _handleUpdateUserCamerasAccessLevel:]
  -[HMDHome _handleRemoveUser:]
  -[HMDHome _handleSetAppData:]
  -[HMDHome _handleUpdateMinimumMediaUserPrivilege:]
  -[HMDHome _handleUpdateMediaPeerToPeerEnabled:]
  -[HMDHome _handleUpdateMediaPassword:]
  -[HMDHome _handleEnableMultiUserRequest:]
  -[HMDHome _handleSetHasAnyUserAcknowledgedCameraRecordingOnboardingRequest:]
  -[HMDHome _handleUpdateNetworkProtection:]
  -[HMDHome _handleUpdateOutgoingInvitationState:]
  -[HMDHome _handleAddEventTrigger:]
  -[HMDHome _handleAddTimerTrigger:]
  -[HMDHome _handleAddTriggers:]
  -[HMDHome _handleAddAccessory:]
  -[HMDHome _handleAddAccessories:]
  -[HMDHome _handleUserConsentResponseForAccessory:]
  -[HMDHome _handleContinuePairingAccessory:]
  -[HMDHome _handleCancelPairingAccessory:]
  -[HMDHome _handleRemoveAccessory:]
  -[HMDHome _handleUserInvitations:]
  -[HMDHome _handleSetDoorbellChimeEnabledRequest:]
  -[HMDHome _handleOutgoingInvitations:]
  -[HMDHome _handleCreateUniquePSKClientConfiguration:]
  -[HMDHome _handleRemoveClientConfiguration:]
  -[HMDHome _handleHomeLocationUpdateFromSharedAdmin:]
  -[HMDHome _handleSetMinimumNetworkRouterHomeKitVersion:]
  -[HMDHome _handleSetMinHomeKitVersionForAccessoryNetworkProtectionChange:]
  -[HMDHome _handleUpdatePresenceConsent:]
  -[HMDHome _handleExecuteActionSet:]
  -[HMDHome _handleMultipleCharacteristicWrite:]
  -[HMDHome _handleMultipleCharacteristicRead:]
  -[HMDHome _handleCharacteristicEnableNotification:]
  -[HMDHome _handleModifyCharacteristicNotifications:]
  -[HMDHome _handleAccessoryReachabilityRegistrationAndEnable:]
  -[HMDHome _handleAccessoryReachabilityRegistration:]
  -[HMDHome _handleRequestHomeDataSync:]
  -[HMDHome _handleCharacterisiticsChangedNotification:]
  -[HMDHome _handleAddUserToRelayAccessories:]
  -[HMDHome _handleAddRelayAccessTokens:]
  -[HMDHome _handleQueryUserIsAdmin:]
  -[HMDHome _handleAccessoryReachabilityChange:]
  -[HMDHome _handleAccessoryReachabilityEventNotificationsRegistration:]
  -[HMDHome _handleExecuteConfirmationOfTrigger:]
  -[HMDHome handleEvaluatePredicateMessage:]
  -[HMDHome _handleUpdateAutomaticSoftwareUpdate:]
  -[HMDHome _handleFetchAccessories:]
  -[HMDHome executeActionsFromMessage:]
  -[HMDHome _handleUpdateRequestForHomeInvitationFromInvitee:]
  -[HMDHome _handleEnableNotifications:]
  -[HMDHome _handleMediaPropertiesWrite:]
  -[HMDHome _handleMediaPropertiesRead:]
  -[HMDHome _handleStartDiscoveringSymptomsForNearbyDevicesMessage:]
  -[HMDHome _handleStopDiscoveringSymptomsForNearbyDevicesMessage:]
  -[HMDHome _handleAssistantAccessControlUpdate:]
  -[HMDHome _handleMediaContentProfileAccessControlUpdate:]
  -[HMDHome _handleRemoteUserClientCloudShareRequest:]
  -[HMDHome _handleRemoteUserClientCloudShareRepairRequest:]
  -[HMDHome _handleFetchLastModifiedServiceOfType:]
  -[HMDHome handleActive:]
  -[HMDHome handleInactive:]
  -[HMDHome handleNetworkRouterProfileAdded:]
  -[HMDHome handleNetworkRouterProfileRemoved:]
  -[HMDHome handleCurrentUserPrivilegeChanged:]
  -[HMDHome handleActiveAccountChanged:]
  -[HMDHome handleAccountHandlesUpdated:]
  -[HMDHome __handleProcessStateChange:]
  -[HMDHome handleAccessoryReachabilityChangeNotification:]
  -[HMDHome handleRemovedMediaSessions:]
  -[HMDHome _handleDeviceCapabilitiesUpdated:]
  -[HMDHome handleDidReceiveIDSMessageWithNoListener:]
  -[HMDHome removeName:]
  -[HMDHome _notifyRetrievalError:accessoryServer:linkType:accessoryOperationBlock:]
  -[HMDHome _handleAddAccessoryWithDescription:]
  -[HMDHome _handleLegacyAddAccessory:]
  -[HMDHome checkForNetworkRouterSupport:error:]
  -[HMDHome wiFiRouterAccessories]
  -[HMDHome removeAddAccessoryRequestWithIdentifier:]
  -[HMDHome __shouldAllowAddingWiFiRouterAccessoryWithRequestMessage:error:]
  -[HMDHome saveAddAccessoryRequest:]
  -[HMDHome _shouldAllowAddingAccessoryOfCategory:requestMessage:error:]
  -[HMDHome _continuePairingAfterUserConsentWithAccessoryUUID:message:]
  -[HMDHome _setupCodeProviderForMessage:]
  -[HMDHome _removePendingAccessoryAdd:]
  -[HMDHome _pairAccessoryWithAccessoryDescription:unpairedAccessory:configuration:pairingEvent:requestMessage:]
  -[HMDHome _createUniquePSKClientConfigurationWithRequestMessage:pairingEvent:completion:]
  -[HMDHome _primaryAccessoryForServer:]
  -[HMDHome _processAccessoriesToAddForUnpairedAccessory:certificationStatus:accessoryServer:networkCredential:pairingEvent:message:completionHandler:]
  -[HMDHome _setupDescriptionFromData:error:]
  -[HMDHome _shouldAllowAddingAccessoryWithDescription:requestMessage:error:]
  -[HMDHome _continuePairingAfterUserConsentWithAccessoryDescription:message:]
  -[HMDHome _pairAccessoryWithAccessoryDescription:configuration:pairingEvent:progressHandler:requestMessage:]
  -[HMDHome retrieveAndResetNewlyConfiguredAccessoriesForAddSessionIdentifier:]
  -[HMDHome _setupActiveNetworkRouterAccessory:existingRouterAccessories:]
  -[HMDHome _cancelPairingWithAccessoryDescription:]
  -[HMDHome _handleUserConsentForAccessoryReplacement:consent:message:]
  -[HMDHome __handleAddHAPAccessoryModel:message:]
  -[HMDHome __handleAddMediaAccessoryModel:message:]
  -[HMDHome uuidToHAPAccessoryConfigTable]
  -[HMDHome addNewlyConfiguredAccessories:addSessionIdentifier:]
  -[HMDHome _getTunnelAccessoryUpdate:]
  -[HMDHome remoteAccessEnabled:]
  -[HMDHome _addAllUsersToAccessory:]
  -[HMDHome notifyOfNewlyAddedAccessoryByThisOwnerDevice:]
  -[HMDHome notifyOfAddedAccessory:]
  -[HMDHome reevaluateAccessoryInfo]
  -[HMDHome _notifyClientOfNewlyAddedAccessories:requestMessage:]
  -[HMDHome accessoriesRequiringManualReconfigurationOnRouterRemoval]
  -[HMDHome _handleRemoveAccessoryAfterUserConsent:message:]
  -[HMDHome _removeAccessoryWithUUID:message:]
  -[HMDHome _evaluateNetworkRouterManagementForTransaction:]
  -[HMDHome _handleRemovedPairedAccessories:bridgeAccessory:]
  -[HMDHome notifyOfRemovedAccessory:source:]
  -[HMDHome _removeWithMergeSecondaryAccessory:removedFromBridgeAccessory:completionHandler:]
  -[HMDHome _reevaluateAccessoryInfoWithBadgeRefresh:]
  -[HMDHome prepareUserManagementOperationForUser:accessory:type:model:error:]
  -[HMDHome _removeClientConfigurationWithIdentifier:]
  -[HMDHome _removeAccessories:bridgeAccessory:message:]
  -[HMDHome _sendRemoveCompletionStatusForHMDAccessories:withCompletion:error:]
  -[HMDHome _deregisterPairedAccessory:]
  -[HMDHome removeMediaSessionState:]
  -[HMDHome _removeAccessoriesForPrimaryAccessory:error:completionHandler:]
  -[HMDHome _removeAccessoriesFromContainers:]
  -[HMDHome _removeAccessoriesCommon:message:]
  -[HMDHome _removeAllUsersFromAccessory:completionHandler:]
  -[HMDHome _removeCloudData]
  -[HMDHome personDataManager]
  -[HMDHome predicateUtility]
  -[HMDHome dispatchRequestToEvaluateCondition:forCharacteristics:completion:]
  -[HMDHome btleAccessoryReachabilityProbeTimer:]
  -[HMDHome _deregisterDeviceForReachabilityNotification:]
  -[HMDHome remoteReachabilityNotificationPendingAccessories]
  -[HMDHome getReachabilityTupleForAccessoryUUID:]
  -[HMDHome reachabilityNotificationTimer]
  -[HMDHome setReachabilityNotificationTimer:]
  -[HMDHome reachableAccessoriesCount]
  -[HMDHome previousReachableAccessoriesCount]
  -[HMDHome reachableAppleMediaAccessoriesCount]
  -[HMDHome previousReachableAppleMediaAccessoriesCount]
  -[HMDHome setPreviousReachableAccessoriesCount:]
  -[HMDHome setPreviousReachableAppleMediaAccessoriesCount:]
  -[HMDHome getReachableIPAccessories:btleAccessories:mediaAccessories:]
  -[HMDHome _presentPairingPasswordDialogForAccessory:setupCodeAvailable:]
  -[HMDHome _processPairingRequestForMessage:cancelPairing:]
  -[HMDHome _processLegacyPairingRequestForMessage:cancelPairing:]
  -[HMDHome _cancelPairingWithAccessoryUUID:completionHandler:]
  -[HMDHome getTransactionFromHAPAccessory:hmdAccessory:uuid:bridgeUUID:configurationAppIdentifier:objectChangeType:]
  -[HMDHome getUpdateTransactionForAccessory:hapAccessory:accessoryTransaction:addSvcTransactions:updateSvcTransactions:removeSvcTransactions:]
  -[HMDHome _processProductDataForNewlyAddedAccessory:transaction:]
  -[HMDHome firstHAPAccessoryAddedDate]
  -[HMDHome hapAccessories]
  -[HMDHome updateHomeFirstHAPAccessoryAddedDateToNow]
  -[HMDHome _addOwnerToPrimaryAccessory:error:]
  -[HMDHome _notifyOwnerOfAddedAccessories:completion:]
  -[HMDHome _sharedAdminDidFailToAddAccessories:]
  -[HMDHome setFirstHAPAccessoryAddedDate:]
  -[HMDHome _handleAddTriggerOwnedActionSet:]
  -[HMDHome _handleAddHomeOwnedActionSet:]
  -[HMDHome addActionSetName:]
  -[HMDHome notifyOfRemovedActionSet:]
  -[HMDHome _shouldWaitForAccessoriesToBeReachable]
  -[HMDHome _performOperation:completion:]
  -[HMDHome _handleAddEventTrigger:eventTriggerModel:]
  -[HMDHome _validateAddingNewTriggerWithName:message:]
  -[HMDHome _relayAddTriggerToResident:]
  -[HMDHome _addNewTrigger:message:payloadAnnex:triggerModel:]
  -[HMDHome addToCurrentTriggers:]
  -[HMDHome _removeTrigger:message:]
  -[HMDHome removeFromCurrentTriggers:]
  -[HMDHome removeTriggerNoNotification:]
  -[HMDHome _getContainerForAppData:keyName:]
  -[HMDHome currentUserFactory]
  -[HMDHome isResidentSupported]
  -[HMDHome residentCapableDevices]
  -[HMDHome _addUsers:accessory:]
  -[HMDHome _verifyUserManagementPermissionForAccessory:error:]
  -[HMDHome _isUserValid:error:]
  -[HMDHome _addUsersWithIDs:message:]
  -[HMDHome _cleanRemovedUsers:]
  -[HMDHome userWithUUID:]
  -[HMDHome __handleCompletedOutgoingInvitation:]
  -[HMDHome __handleCancelledOutgoingInvitation:]
  -[HMDHome _addOutgoingInvitations:message:]
  -[HMDHome _sendInvitation:message:]
  -[HMDHome _sendAccessTokensToUser:user:error:]
  -[HMDHome _removeUser:message:]
  -[HMDHome prepareUserManagementOperationForUser:accessories:type:error:]
  -[HMDHome _refreshUserDisplayNames]
  -[HMDHome _sendInvitationCancelationRequestToInvitee:]
  -[HMDHome __handleAcceptedOutgoingInvitationResponse:destinationAddress:publicKey:username:presenceAuthStatus:completionHandler:]
  -[HMDHome _updateConfigurationStateForResidentDevice:desiredConfigState:message:]
  -[HMDHome _removeUserFromContainer:]
  -[HMDHome pendingUsers]
  -[HMDHome _sendUserRemovedNotificationForUser:message:response:]
  -[HMDHome _postInternalNotificationForChangedCharacterisitics:modifiedCharacteristics:changedByThisDevice:residentShouldNotifyPeers:message:]
  -[HMDHome _splitCharacteristicChanges:changedAccessories:]
  -[HMDHome _sendClientCharacteristicsChangedNotification:identifier:request:entitledClientsOnly:multiPartResponse:moreMessagesInMultipart:withCompletionHandler:]
  -[HMDHome shouldRelayNotificationToRegisteredDevicesForSource:]
  -[HMDHome notifyRemoteUsersOfChangedCharacteristics:message:]
  -[HMDHome isCurrentDeviceAvailableResident]
  -[HMDHome _shouldSendToDestination:]
  -[HMDHome _notifyChangedCharacteristics:withRequestIdentifier:toUserDeviceAddress:]
  -[HMDHome notificationHandlerMap]
  -[HMDHome remoteNotificationHandler]
  -[HMDHome _notifyRemoteUsersOfChangedProperties:message:]
  -[HMDHome _notifyChangedProperties:withRequestIdentifier:toUserDeviceAddress:]
  -[HMDHome _notifyChangedCharacteristics:message:modifiedCharacteristics:]
  -[HMDHome _shouldRegisterForNotificationsWithDevice:]
  -[HMDHome disableNotificationsForDevices:]
  -[HMDHome _updateBulletinBoardOfChangedCharacteristics:changedByThisDevice:homePresence:]
  -[HMDHome evaluateNotificationConditionForCharacteristics:homePresence:completion:]
  -[HMDHome _notifyRemoteUsersOfChangedCharacteristics:message:]
  -[HMDHome _applyDeviceLockCheck:forSource:message:]
  -[HMDHome isCarPlayAccessAllowedForCharacteristic:withMessage:fromSource:]
  -[HMDHome isAccessAllowedForCharacteristic:withMessage:]
  -[HMDHome applyDeviceLockStatus:]
  -[HMDHome _getLogEventsForOperation:accessories:requestMap:identifier:source:bundleID:]
  -[HMDHome _addResponseTuplesFromDictionary:accessoryRequestMapTable:responseTuples:completedGroup:logEvents:]
  -[HMDHome _notifyChangedCharacteristics:identifier:multiPartResponse:moreMessagesInMultipart:requestMessage:withCompletionHandler:]
  -[HMDHome _addAccessoryToBalancedResidentMap:residentDevice:balancedResidentMap:]
  -[HMDHome __residentDeviceForAccesory:fromMap:]
  -[HMDHome _retrieveStateForTrackedAccessory:withCompletion:]
  -[HMDHome _writeCharacteristicValuesForAccessories:writeRequestMap:responseTuples:requestMessage:viaDevice:source:completionHandler:]
  -[HMDHome _loadBalancedRedispatchForAccessories:source:dispatchGroup:writeRequestMap:requestMessage:responseTuples:]
  -[HMDHome _redispatchWriteForAccessories:dispatchGroup:requestMap:requestMessage:source:responseTuples:]
  -[HMDHome writeRequestTuplesFromMessage:]
  -[HMDHome isCompanionReachable]
  -[HMDHome assistantOperations]
  -[HMDHome setAssistantOperations:]
  -[HMDHome _readCharacteristicValues:requestMessage:source:withCompletionHandler:]
  -[HMDHome _readCharacteristicValuesForAccessories:readRequestMap:responseTuples:requestMessage:viaDevice:completionHandler:]
  -[HMDHome setPendingResponsesTimer:]
  -[HMDHome pendingResponsesTimer]
  -[HMDHome _redispatchReadForAccessories:dispatchGroup:requestMap:requestMessage:responseTuples:errorResponseTuples:]
  -[HMDHome requiresUnlockToAccessCharacteristic:withMessage:]
  -[HMDHome _prepareMultipleCharacteristicRead:]
  -[HMDHome isMigratingAfterResidentChange]
  -[HMDHome setMigratingAfterResidentChange:]
  -[HMDHome _handleResidentChange]
  -[HMDHome _registerReachabilityEventNotifications]
  -[HMDHome _remoteAccessEnabled:]
  -[HMDHome setRemoteAccessIsEnabled:]
  -[HMDHome _notifyClientsOfUpdatedResidentUser:]
  -[HMDHome heartbeatPingMessagesQueuedWithServer]
  -[HMDHome _removeOutgoingInvitationForUser:]
  -[HMDHome allowsRemoteAccess]
  -[HMDHome hapAccessoryUniqueIdentifiers]
  -[HMDHome pendingResponsesForRemoteAccessSetup]
  -[HMDHome _sendResidentInviteWithDestination:]
  -[HMDHome _addResidentWithUsername:publicKey:destination:]
  -[HMDHome unconfiguredResidentDevices]
  -[HMDHome _subscribeForHomeNotificationsOnDirectTransports:]
  -[HMDHome _refreshCharacteristicValuesOnHomeNotificationEnable]
  -[HMDHome _refreshMediaProfilesOnHomeNotificationEnable]
  -[HMDHome setHomeLocation:]
  -[HMDHome setAtHomeLevel:]
  -[HMDHome updateAppData:identifierKey:lookup:]
  -[HMDHome computeBridgedAccessoriesForAllBridges]
  -[HMDHome initWithName:uuid:defaultRoomUUID:owner:homeManager:presenceAuth:]
  -[HMDHome lastSyncedConfigurationVersion]
  -[HMDHome homepodSettingsCreationTimestamp]
  -[HMDHome homepodSetupLatency]
  -[HMDHome _residentUserForResidentDevice:]
  -[HMDHome _encodeObjectsWithAcessoriesWithCoder:]
  -[HMDHome primaryNetworkRouterManagingDeviceUUID]
  -[HMDHome minimumNetworkRouterSupportHomeKitVersion]
  -[HMDHome minHomeKitVersionForAccessoryNetworkProtectionChange]
  -[HMDHome personManagerZoneUUID]
  -[HMDHome naturalLightingContext]
  -[HMDHome __encodeAccessoriesWithCoder:options:]
  -[HMDHome _encodeActionSets:coder:]
  -[HMDHome _updateOwnedTriggers]
  -[HMDHome _retrieveHAPAccessoryForHMDAccessory:linkType:queue:completion:]
  -[HMDHome _isRetrievalInProgressForLinkType:accessory:]
  -[HMDHome _enqueueRetrievalCompletionTuple:forAccessory:]
  -[HMDHome _removeMediaSessionWithIdentifier:]
  -[HMDHome hapAccessoryWithIdentifier:]
  -[HMDHome _isRegisteredForNotificationsWithRemoteGateway:]
  -[HMDHome _isEventTriggerOnRemoteGatewayForAccessory:]
  -[HMDHome _isRegisteredForNotificationsForClients:]
  -[HMDHome _isEventTriggerOnLocalDeviceForAccessory:]
  -[HMDHome _unconfigurePairedAccessoriesForServer:updateReachability:]
  -[HMDHome _dequeueAllRetrievalCompletionTuplesForLinkType:accessory:]
  -[HMDHome _configurePairedAccessoriesForServer:reAddServices:]
  -[HMDHome _createMediaSessionWithEndpoint:]
  -[HMDHome _handleUpdatedCharacteristics:accessoryServer:stateNumber:broadcast:internal:]
  -[HMDHome _hmdCharacteristicsForUpdatedHAPcharacteristics:accessoryServer:]
  -[HMDHome _isSecureClassTriggeredByCharactersitics:]
  -[HMDHome _changedHMDCharacteristicsForHAPCharacteristics:stateNumber:broadcast:accessoryServer:]
  -[HMDHome _auditChangedCharactersitics:]
  -[HMDHome getServiceTransaction:parentUUID:changeType:]
  -[HMDHome __updateServiceTransaction:accessoryTransaction:service:accessory:hapService:]
  -[HMDHome _productDataFromHAPAccessory:]
  -[HMDHome _discoveredAccessoriesForServer:]
  -[HMDHome _processUpdatedProductDataForAccessory:hapAccessory:transaction:]
  -[HMDHome _processUpdatedAccessoryServer:reAddServices:]
  -[HMDHome _evaluateOwnerTrustZoneCapabilityAndNotify]
  -[HMDHome _updateOutgoingInviationsWithCompleteUserManagementOperation:]
  -[HMDHome _handleCoalescedModifyNotifications]
  -[HMDHome _handleDisableNotificationsTimerFired]
  -[HMDHome _handleRemoteReachabilityNotificationTimerFired]
  -[HMDHome _handleRemoteReachabilityDeregistrationTimerFired]
  -[HMDHome _handlePendingResponserTimerFired:]
  -[HMDHome _handleAccessoryReachabilityUpdatesTimerFired]
  -[HMDHome _handleAddActivityRequestTimerFiredForInfo:]
  -[HMDHome _configureUnconfiguredResident:desiredConfigState:]
  -[HMDHome _handleDidReceiveIDSMessageWithNoListenerFromAddress:]
  -[HMDHome _residentDeviceAvailable]
  -[HMDHome _remoteAccessHealthMonitorTimerDidFire]
  -[HMDHome _handleResponseForElectMessageToResident:error:]
  -[HMDHome _isValidEventIdentifier:]
  -[HMDHome mediaSessionStates]
  -[HMDHome keyPathValuesToWhitelistedEnum:]
  -[HMDHome awdPrimaryReportingDevice]
  -[HMDHome _handleNetworkProtectionModeChangeForTransaction:]
  -[HMDHome setNaturalLightingContext:]
  -[HMDHome _handleRenameHomeModel:message:]
  -[HMDHome _handleMultiUserEnabledChange:message:]
  -[HMDHome _handleHasAnyUserAcknowledgedCameraRecordingOnboardingChange:message:]
  -[HMDHome _handleUpdateNetworkProtectionWithHomeModel:message:]
  -[HMDHome _handleReceivedNonCloudSourcedSharedHomeModel]
  -[HMDHome setSharedHomeSourceVersion:]
  -[HMDHome setLastSyncedConfigurationVersion:]
  -[HMDHome setActiveNetworkRouterUUID:]
  -[HMDHome setActiveNetworkRouterInitialSetupNeeded:]
  -[HMDHome _addTransactionForMinimumNetworkRouterHomeKitVersion:message:]
  -[HMDHome setMinimumNetworkRouterSupportHomeKitVersion:]
  -[HMDHome setMinHomeKitVersionForAccessoryNetworkProtectionChange:]
  -[HMDHome setPrimaryNetworkRouterManagingDeviceUUID:]
  -[HMDHome updateHomeWithModel:message:]
  -[HMDHome updateHomeConfigurationWithModel:message:]
  -[HMDHome updateNetworkRouterSettingsWithModel:message:]
  -[HMDHome updateNetworkRouterManagingDeviceSettingsWithModel:message:]
  -[HMDHome homeObjectChangeHandler]
  -[HMDHome homeConfigurationUUID]
  -[HMDHome dropAllChangesWithArrayOfObjectIDs:]
  -[HMDHome cleanChangesIfNoAddChangeObjectID:completion:]
  -[HMDHome _migrateHomeObjectCloudZone:defaultModel:completion:]
  -[HMDHome setMigrationNeeded:]
  -[HMDHome _migrateResidentDevicesCloudZone:migrationQueue:completion:]
  -[HMDHome _migrateHomeSettingsCloudZone:migrationQueue:completion:]
  -[HMDHome _migrateHomeMediaSettingsCloudZone:migrationQueue:completion:]
  -[HMDHome _migrateHomeUsersCloudZone:migrationQueue:completion:]
  -[HMDHome _migrateHomeAllObjectsCloudZone:migrationGroup:migrationQueue:saveModels:runModels:]
  -[HMDHome evaluateIfMediaPlaybackStateChanged:]
  -[HMDHome _handleReadMediaProperties:source:message:completionHandler:]
  -[HMDHome _handleWriteMediaProperties:source:requestMessage:completionHandler:]
  -[HMDHome _ensureDevicesSymptomDiscoveryMessageCanBeHandled:]
  -[HMDHome _removeConnectionFromConnectionsDiscoveringSymptomsForNearbyDevices:]
  -[HMDHome setPersonDataManager:]
  -[HMDHome residentDeviceManager:didUpdateResidentAvailable:]
  -[HMDHome residentDeviceManager:didUpdatePrimaryResident:]
  -[HMDHome residentDeviceManagerDidUpdateResidents:]
  -[HMDHome mediaSystemController:accessoryForUUID:]
  -[HMDHome mediaSystemController:removeAccessories:fromAssistantAccessControl:]
  -[HMDHome accessoryBrowser:didAddAccessoryAdvertisement:]
  -[HMDHome accessoryBrowser:didRemoveAccessoryAdvertisement:]
  -[HMDHome accessoryBrowser:didFindAccessoryServer:stateChanged:stateNumber:completion:]
  -[HMDHome accessoryBrowser:didTombstoneAccessoryServer:]
  -[HMDHome accessoryBrowser:didRemoveAccessoryServer:error:]
  -[HMDHome accessoryBrowser:didFindAccessoryServerNeedingReprovisioning:error:]
  -[HMDHome accessoryBrowser:didFinishWACForAccessoryWithIdentifier:error:]
  -[HMDHome accessoryBrowser:didUpdateReachability:forBTLEAccessoriesWithServerIdentifier:]
  -[HMDHome accessoryBrowser:accessoryServer:didStopPairingWithError:]
  -[HMDHome accessoryBrowser:accessoryServer:didDiscoverAccessories:transaction:error:]
  -[HMDHome accessoryBrowser:identifier:reachable:]
  -[HMDHome accessoryBrowser:accessoryServer:didUpdateValuesForCharacteristics:stateNumber:broadcast:]
  -[HMDHome accessoryBrowser:accessoryServer:didUpdateHasPairings:]
  -[HMDHome accessoryBrowser:accessoryServer:didUpdateCategory:]
  -[HMDHome accessoryBrowser:discoveryFailedWithError:accessoryServer:linkType:]
  -[HMDHome accessoryBrowser:didUpdateEndpoint:]
  -[HMDHome relayManager:didUpdateControllerIdentifier:]
  -[HMDHome userManagementOperationDidFinish:]
  -[HMDHome enabledResidents]
  -[HMDHome appleMediaAccessories]
  -[HMDHome logEventDispatcher]
  -[HMDHome isAnyBTLEAccessoryReachable]
  -[HMDHome allNewlyConfiguredAccessories]
  -[HMDHome routerClientManager]
  -[HMDHome setRouterClientManager:]
  -[HMDHome isActiveNetworkRouterInitialSetupNeeded]
  -[HMDHome takeOwnershipOfAccessories:]
  -[HMDHome takeOwnershipOfAppData:]
  -[HMDHome takeOwnershipOfBuiltinActionSets:]
  -[HMDHome updateActionSetExecutionDates:]
  -[HMDHome _doesResidentExistInMyCircleWithAddress:homeManager:]
  -[HMDHome watchSkipVersionCheck]
  -[HMDHome setWatchSkipVersionCheck:]
  -[HMDHome configureWithHomeManager:accessoriesPresent:source:]
  -[HMDHome configureWithRelayManager:]
  -[HMDHome addCompanionAsResidentUser:]
  -[HMDHome modifyNotificationOnResident:ignoreDeviceUnlockRequirement:forCharacteristics:]
  -[HMDHome subscribeForNotificationsFromRemoteGateway]
  -[HMDHome enableHomeNotificationsForMediaAccessory:]
  -[HMDHome enableNotificationsForDevices:]
  -[HMDHome modifyCharacteristicNotifications:mediaNotifications:enableNotification:withDevice:]
  -[HMDHome auditUsersForNotifications:]
  -[HMDHome saveSharedHomeToAccountWithReason:postSyncNotification:options:]
  -[HMDHome saveWithReason:postSyncNotification:objectChange:]
  -[HMDHome ownerTrustZoneCapable]
  -[HMDHome reEvaluateTriggers]
  -[HMDHome removeAllHomeContentsAndAccessoryPairings:queue:completionHandler:]
  -[HMDHome replaceActionSetName:withNewName:]
  -[HMDHome reachabilityChangedForAccessory:reachable:]
  -[HMDHome regionStateUpdated]
  -[HMDHome writeCharacteristicValues:source:transactionId:withCompletionHandler:]
  -[HMDHome migrateOwnedTriggers]
  -[HMDHome checkTimerTriggers]
  -[HMDHome handleBackgroundTaskAgentJob:]
  -[HMDHome getRunTimeStateUpdateWithOptions:includeMediaAccessoryState:includeResidentDeviceState:completion:]
  -[HMDHome namesOfServicesWithNewFirmwareAvailableInHome]
  -[HMDHome evaluateResidentUpdate]
  -[HMDHome evaluateShouldRelaunchAndSetRelaunch]
  -[HMDHome resetConfiguration]
  -[HMDHome notifyClientOfVendorInfoUpdatedForManufacturers:withCompletion:]
  -[HMDHome assistantAccessCapableAccessoryCount]
  -[HMDHome addAccessoryRequestsForMessage:]
  -[HMDHome _accessoryPairingDidComplete:configuration:pairingEvent:accessoryServer:certificationStatus:requestMessage:]
  -[HMDHome handleRemoveAccessory:]
  -[HMDHome removeWithMergeSecondaryAccessory:removedFromBridgeAccessory:completionHandler:]
  -[HMDHome hapAccessoryWithIdentifier:instanceID:]
  -[HMDHome scheduleRemoval]
  -[HMDHome accessoryCountForRoom:]
  -[HMDHome hapAccessoryServerIdentifiers]
  -[HMDHome removeAccessoriesFromContainers:]
  -[HMDHome notifyClientsOfAccessoryInfoUpdatedForAccessories:]
  -[HMDHome _registerDeviceForReachabilityNotification:accessoryList:]
  -[HMDHome builtInActionSetInfo]
  -[HMDHome usersSupportingPresence]
  -[HMDHome userWithPairingIdentity:]
  -[HMDHome addUserToRelayAccessoriesWithConsentTokens:]
  -[HMDHome sendAccessTokensToUser:user:]
  -[HMDHome removeUserWithUserID:]
  -[HMDHome refreshUserDisplayNames]
  -[HMDHome containsRemovedUser:]
  -[HMDHome notifyRemoteUsersOfChangedProperties:message:]
  -[HMDHome notifyOfChangedCharacteristic:changedByThisDevice:residentShouldNotifyPeers:message:]
  -[HMDHome writeCharacteristicValues:source:identifier:withCompletionHandler:]
  -[HMDHome readCharacteristicValues:identifier:source:withCompletionHandler:]
  -[HMDHome readCharacteristicValues:source:withCompletionHandler:]
  -[HMDHome addResidentCapableDevice:]
  -[HMDHome removeResidentCapableDevice:]
  -[HMDHome updateNetworkConnectivity:companionReachable:]
  -[HMDHome notifyNewRemotePeersFound:remoteUsersRemoved:forceRemoteNotificationRegistration:]
  -[HMDHome _configureConfiguredResident:desiredConfigState:message:]
  -[HMDHome fixupHomeAfterDecoding]
  -[HMDHome _removeCorruptAccessories]
  -[HMDHome retrieveHAPAccessoryForHMDAccessory:linkType:queue:completion:]
  -[HMDHome handleUpdatedCharacteristics:accessoryServer:]
  -[HMDHome notifyClientsOfReachabilityUpdateForAccessory:]
  -[HMDHome addUnconfiguredResidentDevice:]
  -[HMDHome removeUnconfiguredResidentDeviceWithUserID:]
  -[HMDHome remoteAccessHealthMonitorTimerDidFire]
  -[HMDHome validateDuetEventIdentifiers:completion:]
  -[HMDHome dumpUnpairedSecondaryAccessories]
  -[HMDHome dumpActionSetDescription]
  -[HMDHome dumpCharacteristicNotificationRegistry]
  -[HMDHome dumpMediaSessionDescription]
  -[HMDHome getHomeConfigurationForAnalytics]
  -[HMDHome deletedBackingStoreObject]
  -[HMDHome dropAllChangesWithObjectID:]
  -[HMDHome migrateCloudZone:completion:]
  -[HMDHome migrateAfterCloudMerge:]
  -[HMDHome mediaSessionWithUUID:]
  -[HMDHome redispatchMediaWriteRequests:viaDevice:completion:]
  -[HMDHome cameraAccessories]
  -[HMDHome userAssistantAccessControlDidUpdate:accessories:]
  -[HMDHome updatePersonManagerSettings:]
  -[HMDHome configureNaturalLightingForDemoMode]
  -[HMDHome setMediaSessions:]
  -[HMDHome setMediaSessionStates:]
  -[HMDHome setNetworkProtectionGroupRegistry:]
  -[HMDHome newlyConfiguredAccessories]
  -[HMDHome setHomeLocationHandler:]
  -[HMDHome setNotificationRegistrations:]
  -[HMDHome setNotificationDeregistrations:]
  -[HMDHome setMediaSystemController:]
  -[HMDHome naturalLightingCurveWriter]
  -[HMDHome setHomeHubState:]
  -[HMDHome setAddPendingAccessorySetupCodes:]
  -[HMDHome setAddAccessoryRequestMap:]
  -[HMDHome setNotificationHandlerMap:]
  -[HMDHome setHomeReprovisionHandler:]
  -[HMDHome connectionsDiscoveringSymptomsForNearbyDevices]
  -[HMDHome setRooms:]
  -[HMDHome setDiscoveredAccessories:]
  -[HMDHome setServiceGroups:]
  -[HMDHome setActionSets:]
  -[HMDHome setTriggerOwnedActionSets:]
  -[HMDHome setOutgoingInvitations:]
  -[HMDHome setPendingUsers:]
  -[HMDHome setRemovedUsers:]
  -[HMDHome setUnconfiguredResidentDevices:]
  -[HMDHome setRoomForEntireHome:]
  -[HMDHome setNotificationRegistry:]
  -[HMDHome setHeartbeatPingMessagesQueuedWithServer:]
  -[HMDHome setPendingResponsesForRemoteAccessSetup:]
  -[HMDHome setSharedAdmin:]
  -[HMDHome setAllowsRemoteAccess:]
  -[HMDHome setResident:]
  -[HMDHome setReachabilityRegisteredDevices:]
  -[HMDHome setRemoteReachabilityNotificationPendingAccessories:]
  -[HMDHome setPendingResponses:]
  -[HMDHome setOwnedTriggers:]
  -[HMDHome setUuidToHAPAccessoryConfigTable:]
  -[HMDHome mediaActionRouter]
  -[HMDHome setPersonManagerZoneUUID:]
  -[HMDHome setHomepodSetupLatency:]
  -[HMDHome setHomepodSettingsCreationTimestamp:]
  -[HMDHome _updateActiveNetworkRouterAccessory:isReplacement:withTransaction:]
  -[HMDHome _clearAccessoryNetworkProtectionStateWithTransaction:]
  -[HMDHome _reconfigureAccessoriesOnRouterRemovalWithCompletion:]
  -[HMDHome assistantObject]
  -[HMDHome actionWithDictionaryRepresentation:]
  -[HMDHome _auditAndDeregisterCharacteristicsForHAPAccessory:]
  -[HMDHome lightProfileWithUUID:]
  -[HMDHome accessoryCount]
  -[HMDHome activeNetworkRouterAccessory]
  -[HMDHome playbackArchiveWithSessionIdentifier:]
  -[HMDHome supportsRouterManagement]
  -[HMDHome assistantUniqueIdentifier]
  -[HMDHome _isNetworkRouterSupportEnabledForCurrentDevice]
  -[HMDHome _currentDeviceCapabilities]
  -[HMDHome _addTransactionWithProtectionMode:message:]
  -[HMDHome _addTransactionForMinimumHomeKitVersionForAccessoryNetworkProtectionChange:message:]
  -[HMDHome _removeClientConfigurationWithIdentifier:completion:]
  -[HMDHome _scheduleApplyNetworkRouterSettingsAction:]
  -[HMDHome _evaluateNetworkProtectionSupport]
  -[HMDHome _configureNetworkRouterClientManager:]
  -[HMDHome _unconfigureNetworkRouterClientManager]
  -[HMDHome _requestUniquePSKClientConfigurationWithCompletion:]
  -[HMDHome _requestRemoveClientConfigurationWithIdentifier:]


HMDVideoStreamReconfigure : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, HMFLogging>
 @property  NSDictionary *downlinkQualityInfo
 @property  NSMutableArray *reconfigureEvents
 @property  HMFTimer *upgradeDebouceTimer
 @property  HMFTimer *downgradeDebouceTimer
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  HMDCameraStreamSessionID *sessionID
 @property  <HMDVideoStreamReconfigureDelegate> *delegate
 @property  BOOL reconfigurationMode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDVideoStreamReconfigure logCategory]

  // instance methods
  -[HMDVideoStreamReconfigure timerDidFire:]
  -[HMDVideoStreamReconfigure sessionID]
  -[HMDVideoStreamReconfigure logIdentifier]
  -[HMDVideoStreamReconfigure delegateQueue]
  -[HMDVideoStreamReconfigure .cxx_destruct]
  -[HMDVideoStreamReconfigure workQueue]
  -[HMDVideoStreamReconfigure delegate]
  -[HMDVideoStreamReconfigure reconfigurationMode]
  -[HMDVideoStreamReconfigure setReconfigurationMode:]
  -[HMDVideoStreamReconfigure downlinkQualityInfo]
  -[HMDVideoStreamReconfigure _processDownlinkQuality]
  -[HMDVideoStreamReconfigure setDownlinkQualityInfo:]
  -[HMDVideoStreamReconfigure _processDownlinkQualityChanged:]
  -[HMDVideoStreamReconfigure upgradeDebouceTimer]
  -[HMDVideoStreamReconfigure setUpgradeDebouceTimer:]
  -[HMDVideoStreamReconfigure downgradeDebouceTimer]
  -[HMDVideoStreamReconfigure setDowngradeDebouceTimer:]
  -[HMDVideoStreamReconfigure _isReconfigureFlipFlop]
  -[HMDVideoStreamReconfigure _callNetworkImproved]
  -[HMDVideoStreamReconfigure _callNetworkDeteriorated]
  -[HMDVideoStreamReconfigure reconfigureEvents]
  -[HMDVideoStreamReconfigure _addReconfigureEvent:]
  -[HMDVideoStreamReconfigure initWithSessionID:workQueue:delegate:delegateQueue:]
  -[HMDVideoStreamReconfigure updateReconfigurationMode:]
  -[HMDVideoStreamReconfigure downlinkQualityChanged:]


__HMDRegisteredIdentity : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMFPairingIdentity *identity
 @property  NSMutableArray *registeredObjects

  // instance methods
  -[__HMDRegisteredIdentity initWithIdentity:]
  -[__HMDRegisteredIdentity init]
  -[__HMDRegisteredIdentity identity]
  -[__HMDRegisteredIdentity .cxx_destruct]
  -[__HMDRegisteredIdentity registeredObjects]


__HMDRegisteredDeviceIdentity : __HMDRegisteredIdentity
 @property  HMDDevice *device

  // instance methods
  -[__HMDRegisteredDeviceIdentity initWithIdentity:]
  -[__HMDRegisteredDeviceIdentity device]
  -[__HMDRegisteredDeviceIdentity .cxx_destruct]
  -[__HMDRegisteredDeviceIdentity initWithIdentity:device:]


__HMDRegisteredAccountIdentity : __HMDRegisteredIdentity
 @property  HMDAccount *account

  // instance methods
  -[__HMDRegisteredAccountIdentity initWithIdentity:]
  -[__HMDRegisteredAccountIdentity account]
  -[__HMDRegisteredAccountIdentity .cxx_destruct]
  -[__HMDRegisteredAccountIdentity initWithIdentity:account:]


HMDIdentityRegistry : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFDumpState>
 @property  NSRecursiveLock *lock
 @property  NSArray *registeredIdentities
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDIdentityRegistry sharedRegistry]
  +[HMDIdentityRegistry logCategory]

  // instance methods
  -[HMDIdentityRegistry init]
  -[HMDIdentityRegistry attributeDescriptions]
  -[HMDIdentityRegistry .cxx_destruct]
  -[HMDIdentityRegistry lock]
  -[HMDIdentityRegistry identityForIdentifier:]
  -[HMDIdentityRegistry reset]
  -[HMDIdentityRegistry dumpState]
  -[HMDIdentityRegistry registerIdentity:device:object:]
  -[HMDIdentityRegistry registerIdentity:account:object:]
  -[HMDIdentityRegistry registeredIdentities]
  -[HMDIdentityRegistry identitiesForDevice:]
  -[HMDIdentityRegistry identitiesForAccount:]
  -[HMDIdentityRegistry accountsForIdentity:]
  -[HMDIdentityRegistry deregisterIdentity:object:]


HMDCameraSnapshotRemoteStreamSender : HMDCameraSnapshotSender <HMDCameraGetSnapshotProtocol, HMDCameraSnapshotSenderProtocol, HMDCameraSnapshotLocalDelegate, HMDCameraSnapshotIDSStreamInitiatorDelegate, HMFLogging>
 @property  HMDCameraSnapshotLocal *snapshotLocal
 @property  <HMDCameraSnapshotRemoteStreamSenderDelegate> *delegate
 @property  HMDCameraSnapshotIDSStreamInitiator *streamInitiator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotRemoteStreamSender logCategory]

  // instance methods
  -[HMDCameraSnapshotRemoteStreamSender logIdentifier]
  -[HMDCameraSnapshotRemoteStreamSender dealloc]
  -[HMDCameraSnapshotRemoteStreamSender .cxx_destruct]
  -[HMDCameraSnapshotRemoteStreamSender delegate]
  -[HMDCameraSnapshotRemoteStreamSender snapshotLocal]
  -[HMDCameraSnapshotRemoteStreamSender getSnapshot:]
  -[HMDCameraSnapshotRemoteStreamSender _callDidStartCaptureImageDelegate:]
  -[HMDCameraSnapshotRemoteStreamSender streamInitiator]
  -[HMDCameraSnapshotRemoteStreamSender _callDidCompleteSendImageDelegate:]
  -[HMDCameraSnapshotRemoteStreamSender snapShotTransferComplete]
  -[HMDCameraSnapshotRemoteStreamSender snapshotLocal:didSaveSnapshotFile:error:sessionID:]
  -[HMDCameraSnapshotRemoteStreamSender streamInitiator:didFailToSendFile:]
  -[HMDCameraSnapshotRemoteStreamSender initWithSessionID:workQueue:options:device:accessory:delegate:delegateQueue:uniqueIdentifier:snapshotRequestHandler:]
  -[HMDCameraSnapshotRemoteStreamSender sendSnapshotAtPath:]


HMDApplicationData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, NSCopying, HMFDumpState>
 @property  NSUUID *uuid
 @property  NSMutableDictionary *appDataDictionary
 @property  NSUUID *parentUUID
 @property  BOOL empty
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDApplicationData supportsSecureCoding]

  // instance methods
  -[HMDApplicationData copyWithZone:]
  -[HMDApplicationData uuid]
  -[HMDApplicationData .cxx_destruct]
  -[HMDApplicationData updateWithModel:]
  -[HMDApplicationData setUuid:]
  -[HMDApplicationData dictionary]
  -[HMDApplicationData removeApplicationDataForIdentifier:]
  -[HMDApplicationData encodeWithCoder:]
  -[HMDApplicationData isEmpty]
  -[HMDApplicationData dumpState]
  -[HMDApplicationData initWithCoder:]
  -[HMDApplicationData parentUUID]
  -[HMDApplicationData setParentUUID:]
  -[HMDApplicationData modelObjectWithChangeType:]
  -[HMDApplicationData initWithParentUUID:]
  -[HMDApplicationData setApplicationData:forIdentifier:]
  -[HMDApplicationData appDataDictionary]
  -[HMDApplicationData initWithDictionary:parentUUID:]
  -[HMDApplicationData updateParentUUIDIfNil:]
  -[HMDApplicationData applicationDataForIdentifier:]
  -[HMDApplicationData setAppDataDictionary:]


HMDApplicationDataModel : HMDBackingStoreModelObject
 @property  NSDictionary *appDataDictionary

  // class methods
  +[HMDApplicationDataModel properties]
  +[HMDApplicationDataModel schemaHashRoot]


HMDPhotosPersonManager : HMDPersonManager <HMFLogging, HMDDatabaseZoneManagerDataSource>
 @property  HMPhotosPersonManagerSettings *dataUnavailableExternalSettings
 @property  HMDUser *user
 @property  HMIExternalPersonManager *hmiPersonManager
 @property  HMPhotosPersonManagerSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDPhotosPersonManager logCategory]

  // instance methods
  -[HMDPhotosPersonManager user]
  -[HMDPhotosPersonManager setUser:]
  -[HMDPhotosPersonManager logIdentifier]
  -[HMDPhotosPersonManager .cxx_destruct]
  -[HMDPhotosPersonManager settings]
  -[HMDPhotosPersonManager manager:shouldShareWithUser:]
  -[HMDPhotosPersonManager zoneManager:shouldRequestShareInvitationFromUser:]
  -[HMDPhotosPersonManager initWithUUID:zoneManager:dataReceivers:workQueue:user:]
  -[HMDPhotosPersonManager initWithUser:zoneUUID:workQueue:]
  -[HMDPhotosPersonManager sharesFaceClassifications]
  -[HMDPhotosPersonManager hmiPersonManager]
  -[HMDPhotosPersonManager handleUpdatedSettings:]
  -[HMDPhotosPersonManager updateSettingsUsingMessagePayload:]
  -[HMDPhotosPersonManager dataUnavailableExternalSettings]


HMDSiriAccessoryInfo : NSObject /usr/lib/libc++.1.dylib
 @property  id targetsAccessory
 @property  BOOL supportsDragonSiri

  // class methods
  +[HMDSiriAccessoryInfo infoWithTargetableAccessory:]

  // instance methods
  -[HMDSiriAccessoryInfo .cxx_destruct]
  -[HMDSiriAccessoryInfo setTargetsAccessory:]
  -[HMDSiriAccessoryInfo targetsAccessory]
  -[HMDSiriAccessoryInfo supportsDragonSiri]
  -[HMDSiriAccessoryInfo isActiveAndSupportsDragonSiri]
  -[HMDSiriAccessoryInfo setSupportsDragonSiri:]


HMDSiriAccessoryMonitor : NSObject /usr/lib/libc++.1.dylib
 @property  <HMDSiriAccessoryMonitorDelegate> *delegate
 @property  NSMapTable *accessories

  // instance methods
  -[HMDSiriAccessoryMonitor initWithDelegate:]
  -[HMDSiriAccessoryMonitor .cxx_destruct]
  -[HMDSiriAccessoryMonitor accessories]
  -[HMDSiriAccessoryMonitor _removeAccessory:]
  -[HMDSiriAccessoryMonitor setAccessories:]
  -[HMDSiriAccessoryMonitor delegate]
  -[HMDSiriAccessoryMonitor _getInfoForAccessory:]
  -[HMDSiriAccessoryMonitor hasAnyActiveTargetingAccessories]
  -[HMDSiriAccessoryMonitor _accessoriesTargetingAccessory:]
  -[HMDSiriAccessoryMonitor _addAccessory:withTarget:]
  -[HMDSiriAccessoryMonitor setTargetableAccessory:withControllers:]
  -[HMDSiriAccessoryMonitor accessory:setSupportsDragonSiri:]


HMDNaturalLightingActiveTransitionContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying>
 @property  NSDate *startDate
 @property  unsigned long millisecondsElapsedSinceStartDate

  // instance methods
  -[HMDNaturalLightingActiveTransitionContext copyWithZone:]
  -[HMDNaturalLightingActiveTransitionContext attributeDescriptions]
  -[HMDNaturalLightingActiveTransitionContext startDate]
  -[HMDNaturalLightingActiveTransitionContext .cxx_destruct]
  -[HMDNaturalLightingActiveTransitionContext isEqual:]
  -[HMDNaturalLightingActiveTransitionContext millisecondsElapsedSinceStartDate]
  -[HMDNaturalLightingActiveTransitionContext initWithStartDate:millisecondsElapsedSinceStartDate:]


AWDHomeKitPresenceReport : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasAuthStatus
 @property  int authStatus
 @property  BOOL hasComputeStatus
 @property  int computeStatus
 @property  BOOL hasReason
 @property  int reason
 @property  BOOL hasDirection
 @property  int direction
 @property  BOOL hasResultErrorCode
 @property  int resultErrorCode

  // instance methods
  -[AWDHomeKitPresenceReport copyWithZone:]
  -[AWDHomeKitPresenceReport setReason:]
  -[AWDHomeKitPresenceReport setHasReason:]
  -[AWDHomeKitPresenceReport direction]
  -[AWDHomeKitPresenceReport setDirection:]
  -[AWDHomeKitPresenceReport timestamp]
  -[AWDHomeKitPresenceReport setTimestamp:]
  -[AWDHomeKitPresenceReport setHasTimestamp:]
  -[AWDHomeKitPresenceReport hasReason]
  -[AWDHomeKitPresenceReport readFrom:]
  -[AWDHomeKitPresenceReport writeTo:]
  -[AWDHomeKitPresenceReport isEqual:]
  -[AWDHomeKitPresenceReport reasonAsString:]
  -[AWDHomeKitPresenceReport StringAsReason:]
  -[AWDHomeKitPresenceReport hasDirection]
  -[AWDHomeKitPresenceReport copyTo:]
  -[AWDHomeKitPresenceReport dictionaryRepresentation]
  -[AWDHomeKitPresenceReport mergeFrom:]
  -[AWDHomeKitPresenceReport reason]
  -[AWDHomeKitPresenceReport hasTimestamp]
  -[AWDHomeKitPresenceReport authStatus]
  -[AWDHomeKitPresenceReport setAuthStatus:]
  -[AWDHomeKitPresenceReport setHasAuthStatus:]
  -[AWDHomeKitPresenceReport hasAuthStatus]
  -[AWDHomeKitPresenceReport authStatusAsString:]
  -[AWDHomeKitPresenceReport StringAsAuthStatus:]
  -[AWDHomeKitPresenceReport setResultErrorCode:]
  -[AWDHomeKitPresenceReport setHasResultErrorCode:]
  -[AWDHomeKitPresenceReport hasResultErrorCode]
  -[AWDHomeKitPresenceReport resultErrorCode]
  -[AWDHomeKitPresenceReport computeStatus]
  -[AWDHomeKitPresenceReport setComputeStatus:]
  -[AWDHomeKitPresenceReport setHasComputeStatus:]
  -[AWDHomeKitPresenceReport hasComputeStatus]
  -[AWDHomeKitPresenceReport computeStatusAsString:]
  -[AWDHomeKitPresenceReport StringAsComputeStatus:]
  -[AWDHomeKitPresenceReport setHasDirection:]
  -[AWDHomeKitPresenceReport directionAsString:]
  -[AWDHomeKitPresenceReport StringAsDirection:]


HMDNetworkRouterFirewallRuleManagerOverrideParser : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRuleManagerOverrideParser logCategory]
  +[HMDNetworkRouterFirewallRuleManagerOverrideParser _parseOverrideNetworkDeclarationsWithProductGroup:productNumber:productNumberDictionary:accessoryIdentifier:]
  +[HMDNetworkRouterFirewallRuleManagerOverrideParser _parseOverridePairedMetadataWithProductGroup:productNumber:productNumberDictionary:accessoryIdentifier:]
  +[HMDNetworkRouterFirewallRuleManagerOverrideParser parseFromData:]


HMDProcessJetsamInfoLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  NSString *jetsamReason

  // class methods
  +[HMDProcessJetsamInfoLogEvent uuid]

  // instance methods
  -[HMDProcessJetsamInfoLogEvent eventName]
  -[HMDProcessJetsamInfoLogEvent .cxx_destruct]
  -[HMDProcessJetsamInfoLogEvent serializedEvent]
  -[HMDProcessJetsamInfoLogEvent initWithJetsamReason:]
  -[HMDProcessJetsamInfoLogEvent jetsamReason]


HMDHomePresenceMonitor : HMDHomePresenceBase <HMFLogging, NSSecureCoding>
 @property  NSMutableDictionary *presenceMap
 @property  HMDHomePresence *currentHomePresence
 @property  HMDHomePresenceUpdate *homePresenceUpdate
 @property  HMDBackgroundTaskAgentTimer *btaAuditTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomePresenceMonitor supportsSecureCoding]
  +[HMDHomePresenceMonitor logCategory]

  // instance methods
  -[HMDHomePresenceMonitor init]
  -[HMDHomePresenceMonitor dealloc]
  -[HMDHomePresenceMonitor .cxx_destruct]
  -[HMDHomePresenceMonitor removeUser:]
  -[HMDHomePresenceMonitor encodeWithCoder:]
  -[HMDHomePresenceMonitor timerFired:]
  -[HMDHomePresenceMonitor _registerForMessages]
  -[HMDHomePresenceMonitor initWithCoder:]
  -[HMDHomePresenceMonitor currentHomePresence]
  -[HMDHomePresenceMonitor configure:messageDispatcher:]
  -[HMDHomePresenceMonitor addNewUser:]
  -[HMDHomePresenceMonitor residentChanged]
  -[HMDHomePresenceMonitor _preparePresenceMap]
  -[HMDHomePresenceMonitor registerQueriableAwdMetrics]
  -[HMDHomePresenceMonitor handleUserPresenceUpdate:]
  -[HMDHomePresenceMonitor handleUserPresenceUpdateNotification:]
  -[HMDHomePresenceMonitor _submitHomePresenceMetric]
  -[HMDHomePresenceMonitor presenceMap]
  -[HMDHomePresenceMonitor _evaluatePresence:newUserPresence:presenceStatusUpdateReason:]
  -[HMDHomePresenceMonitor btaAuditTimer]
  -[HMDHomePresenceMonitor _removeNonExistingUsers]
  -[HMDHomePresenceMonitor _addUser:]
  -[HMDHomePresenceMonitor _submitPresenceReportMetricWithPayload:error:]
  -[HMDHomePresenceMonitor handleUserHomePresencePayload:device:remoteUserPairingIdentity:completion:]
  -[HMDHomePresenceMonitor _updateUserPresence:presenceAuth:completion:]
  -[HMDHomePresenceMonitor _auditPresenceMap]
  -[HMDHomePresenceMonitor setCurrentHomePresence:]
  -[HMDHomePresenceMonitor _startAuditTimer]
  -[HMDHomePresenceMonitor handleHomeDataLoadedNotification:]
  -[HMDHomePresenceMonitor homePresenceUpdate]
  -[HMDHomePresenceMonitor setHomePresenceUpdate:]


HMDLocationEvent : HMDEvent <HMDLocationDelegate, NSSecureCoding>
 @property  CLRegion *region
 @property  CLRegion *uniqueRegion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDLocationEvent supportsSecureCoding]
  +[HMDLocationEvent logCategory]

  // instance methods
  -[HMDLocationEvent .cxx_destruct]
  -[HMDLocationEvent encodeWithCoder:]
  -[HMDLocationEvent _registerForMessages]
  -[HMDLocationEvent isActive]
  -[HMDLocationEvent setRegion:]
  -[HMDLocationEvent dumpState]
  -[HMDLocationEvent initWithCoder:]
  -[HMDLocationEvent region]
  -[HMDLocationEvent emptyModelObject]
  -[HMDLocationEvent _transactionObjectUpdated:newValues:message:]
  -[HMDLocationEvent _transactionObjectRemoved:message:]
  -[HMDLocationEvent _activate:completionHandler:]
  -[HMDLocationEvent modelObjectWithChangeType:]
  -[HMDLocationEvent createPayload]
  -[HMDLocationEvent initWithModel:home:]
  -[HMDLocationEvent _handleUpdateRequest:]
  -[HMDLocationEvent analyticsTriggerEventData]
  -[HMDLocationEvent _handleRetrieveLocationEventForEventTrigger:]
  -[HMDLocationEvent _handleLocationEventOccured:]
  -[HMDLocationEvent fmfStatusUpdateNotification:]
  -[HMDLocationEvent checkFMFStatus:]
  -[HMDLocationEvent uniqueRegion]
  -[HMDLocationEvent informLocationEventOccuranceToResident]
  -[HMDLocationEvent locationEventOccured]
  -[HMDLocationEvent didEnterRegion:]
  -[HMDLocationEvent didExitRegion:]


HMDLocationEventModel : HMDEventModel
 @property  NSData *region

  // class methods
  +[HMDLocationEventModel properties]
  +[HMDLocationEventModel eventModelWithDictionary:home:eventTriggerUUID:message:]


AWDHomeKitAccessoryNetworkProtectionReport : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasStatus
 @property  int status
 @property  BOOL hasHadViolationsInLast24h
 @property  BOOL hadViolationsInLast24h

  // instance methods
  -[AWDHomeKitAccessoryNetworkProtectionReport copyWithZone:]
  -[AWDHomeKitAccessoryNetworkProtectionReport hasStatus]
  -[AWDHomeKitAccessoryNetworkProtectionReport statusAsString:]
  -[AWDHomeKitAccessoryNetworkProtectionReport setHasStatus:]
  -[AWDHomeKitAccessoryNetworkProtectionReport StringAsStatus:]
  -[AWDHomeKitAccessoryNetworkProtectionReport .cxx_destruct]
  -[AWDHomeKitAccessoryNetworkProtectionReport timestamp]
  -[AWDHomeKitAccessoryNetworkProtectionReport setTimestamp:]
  -[AWDHomeKitAccessoryNetworkProtectionReport setHasTimestamp:]
  -[AWDHomeKitAccessoryNetworkProtectionReport readFrom:]
  -[AWDHomeKitAccessoryNetworkProtectionReport writeTo:]
  -[AWDHomeKitAccessoryNetworkProtectionReport isEqual:]
  -[AWDHomeKitAccessoryNetworkProtectionReport copyTo:]
  -[AWDHomeKitAccessoryNetworkProtectionReport dictionaryRepresentation]
  -[AWDHomeKitAccessoryNetworkProtectionReport setStatus:]
  -[AWDHomeKitAccessoryNetworkProtectionReport mergeFrom:]
  -[AWDHomeKitAccessoryNetworkProtectionReport hasTimestamp]
  -[AWDHomeKitAccessoryNetworkProtectionReport status]
  -[AWDHomeKitAccessoryNetworkProtectionReport vendorDetails]
  -[AWDHomeKitAccessoryNetworkProtectionReport setVendorDetails:]
  -[AWDHomeKitAccessoryNetworkProtectionReport hasVendorDetails]
  -[AWDHomeKitAccessoryNetworkProtectionReport setHadViolationsInLast24h:]
  -[AWDHomeKitAccessoryNetworkProtectionReport setHasHadViolationsInLast24h:]
  -[AWDHomeKitAccessoryNetworkProtectionReport hasHadViolationsInLast24h]
  -[AWDHomeKitAccessoryNetworkProtectionReport hadViolationsInLast24h]


HMDAssistantColorCharacteristic : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *readCharacteristicType
 @property  NSString *writeCharacteristicType
 @property  NSString *format
 @property  BOOL mandatory

  // instance methods
  -[HMDAssistantColorCharacteristic format]
  -[HMDAssistantColorCharacteristic .cxx_destruct]
  -[HMDAssistantColorCharacteristic initWithReadCharacteristicType:writeCharacteristicType:format:mandatory:]
  -[HMDAssistantColorCharacteristic readCharacteristicType]
  -[HMDAssistantColorCharacteristic writeCharacteristicType]
  -[HMDAssistantColorCharacteristic mandatory]


HMDAssistantCommand : SAHACommand /System/Library/Frameworks/Security.framework/Security <AFServiceCommand, HMFLogging>
 @property  HMDAssistantGather *gather
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSArray *homeKitObjects
 @property  long long numberOfHomes
 @property  NSString *primaryHomeName
 @property  NSUUID *primaryHomeUUID
 @property  NSString *currentHomeName
 @property  NSUUID *currentHomeUUID
 @property  HMDAssistantCommandHelper *assistantCommandHelper
 @property  BOOL completionHandlerCalled
 @property  HMDHome *home
 @property  unsigned long startTime
 @property  HMDHomeManager *homeManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAssistantCommand initialize]
  +[HMDAssistantCommand logCategory]

  // instance methods
  -[HMDAssistantCommand setStartTime:]
  -[HMDAssistantCommand .cxx_destruct]
  -[HMDAssistantCommand _logEvent:]
  -[HMDAssistantCommand setHome:]
  -[HMDAssistantCommand gather]
  -[HMDAssistantCommand setQueue:]
  -[HMDAssistantCommand completionHandlerCalled]
  -[HMDAssistantCommand setCompletionHandlerCalled:]
  -[HMDAssistantCommand setHomeManager:]
  -[HMDAssistantCommand queue]
  -[HMDAssistantCommand home]
  -[HMDAssistantCommand currentHomeName]
  -[HMDAssistantCommand homeManager]
  -[HMDAssistantCommand setCurrentHomeName:]
  -[HMDAssistantCommand startTime]
  -[HMDAssistantCommand isAttributeValue:equalTo:]
  -[HMDAssistantCommand serviceFromObject:]
  -[HMDAssistantCommand populateResult:withService:serviceType:characteristic:resultAttribute:action:]
  -[HMDAssistantCommand homeKitObjects]
  -[HMDAssistantCommand actionResultForMediaProfile:action:objects:error:]
  -[HMDAssistantCommand actionResultForCharacteristic:actionSet:action:objects:error:]
  -[HMDAssistantCommand actionOutcomeFromError:]
  -[HMDAssistantCommand currentHomeUUID]
  -[HMDAssistantCommand primaryHomeName]
  -[HMDAssistantCommand primaryHomeUUID]
  -[HMDAssistantCommand getoverridingHomeUUIDFromName:]
  -[HMDAssistantCommand reportOutcome:results:handler:]
  -[HMDAssistantCommand filteredObjectsFromObjects:forHomeName:roomName:zoneName:]
  -[HMDAssistantCommand filteredObjectsFromObjects:forGroup:]
  -[HMDAssistantCommand filteredObjectsFromObjects:byAttribute:forActionType:]
  -[HMDAssistantCommand populateResult:withObject:serviceType:action:]
  -[HMDAssistantCommand reportResults:handler:]
  -[HMDAssistantCommand getValueOfType:action:]
  -[HMDAssistantCommand assistantCommandHelper]
  -[HMDAssistantCommand reportUnlockRequired:]
  -[HMDAssistantCommand entityFromActionSet:]
  -[HMDAssistantCommand populateResultWithEntity:action:entity:]
  -[HMDAssistantCommand failedActionResultsFromResponse:inActionSet:withAction:]
  -[HMDAssistantCommand returnResults:serviceType:forAction:completionHandler:]
  -[HMDAssistantCommand filterObjects:forCharacteristicTypes:]
  -[HMDAssistantCommand compareForBoundary:withMetadata:]
  -[HMDAssistantCommand mediaProfileFromObject:]
  -[HMDAssistantCommand handleMediaReadWriteResponse:forAction:inServiceType:inHome:requestProperty:results:forObjects:]
  -[HMDAssistantCommand handleGetColor:forObjects:serviceType:completionHandler:]
  -[HMDAssistantCommand handleGetNaturalLightingAction:forObjects:serviceType:completionHandler:]
  -[HMDAssistantCommand addCharacteristicsFromRelatedServicesFor:assistantObjects:]
  -[HMDAssistantCommand addStatusCharacteristicsIfNeeded:]
  -[HMDAssistantCommand readRequestsForCharacteristic:]
  -[HMDAssistantCommand handleReadWriteResponses:error:forAction:inServiceType:results:forObjects:]
  -[HMDAssistantCommand executeActionSet:action:withCompletionHandler:]
  -[HMDAssistantCommand handleSetColor:forObjects:service:completionHandler:]
  -[HMDAssistantCommand handleSetNaturalLightingAction:serviceType:forObjects:completionHandler:]
  -[HMDAssistantCommand adjustSetValue:type:units:attribute:]
  -[HMDAssistantCommand updateValueToBoundary:valueType:fudgeMinimum:metadata:]
  -[HMDAssistantCommand addActivationCharacteristicsIfNeeded:forCharacteristic:]
  -[HMDAssistantCommand adjustGetValue:type:units:attribute:]
  -[HMDAssistantCommand populateResult:fromResponse:responses:forAction:serviceType:forObjects:]
  -[HMDAssistantCommand updateValue:forAction:]
  -[HMDAssistantCommand compareCurrentValue:newValue:withMetadata:]
  -[HMDAssistantCommand handleMediaAccessorySetActionType:forObjects:withServiceType:completionHandler:]
  -[HMDAssistantCommand handleGetActionTypes:serviceType:forObjects:completionHandler:]
  -[HMDAssistantCommand handleGetMetadataActionTypes:serviceType:forObjects:completionHandler:]
  -[HMDAssistantCommand handleSetActionTypes:serviceType:forObjects:completionHandler:]
  -[HMDAssistantCommand handleUpdateActionTypes:serviceType:forObjects:completionHandler:]
  -[HMDAssistantCommand numberOfHomes]
  -[HMDAssistantCommand objectsWithSearchFilter:inHome:serviceTypeIsATV:overrideServiceTypeIfNeeded:]
  -[HMDAssistantCommand objectsWithIdentifierList:error:]
  -[HMDAssistantCommand _handleCommandForMediaAccessoryAction:objects:serviceType:completionHandler:]
  -[HMDAssistantCommand _handleCommandForHAPAction:serviceType:objects:completionHandler:]
  -[HMDAssistantCommand populateColorResult:serviceType:service:action:responses:forObjects:]
  -[HMDAssistantCommand populateMediaProfileWriteResult:withValue:serviceType:action:]
  -[HMDAssistantCommand addIfNeededActivationCharacteristic:fromService:toCollection:]
  -[HMDAssistantCommand addBridgedAcessoryCharacteristicsFor:toCollection:assistantObjects:]
  -[HMDAssistantCommand addLinkedServiceCharacteristicsFor:toCollection:assistantObjects:]
  -[HMDAssistantCommand addCharacteristicWithType:fromService:toCollection:assistantObjects:]
  -[HMDAssistantCommand parseColorEncoding:]
  -[HMDAssistantCommand filterObjects:forCharacteristics:]
  -[HMDAssistantCommand filteredObjectsFromObjects:byCharacteristicType:]
  -[HMDAssistantCommand setGather:]
  -[HMDAssistantCommand setNumberOfHomes:]
  -[HMDAssistantCommand setPrimaryHomeName:]
  -[HMDAssistantCommand setPrimaryHomeUUID:]
  -[HMDAssistantCommand setCurrentHomeUUID:]
  -[HMDAssistantCommand setHomeKitObjects:]
  -[HMDAssistantCommand setAssistantCommandHelper:]
  -[HMDAssistantCommand handleCommandWithCompletionHandler:]
  -[HMDAssistantCommand timeoutAndReportResults]
  -[HMDAssistantCommand getLocaleUnits:]
  -[HMDAssistantCommand performWithGather:queue:msgDispatcher:completion:]


HMDDeviceNotificationHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate>
 @property  NSString *destination
 @property  NSString *requestIdentifier
 @property  HMDHome *home
 @property  NSMutableSet *updatedCharacteristics
 @property  NSMutableDictionary *updatedMediaPropertiesByMediaProfile
 @property  HMFTimer *coalesceTimer
 @property  HMFTimer *delayTimer
 @property  BOOL delaySupported
 @property  NSUUID *notificationUpdateIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDDeviceNotificationHandler timerDidFire:]
  -[HMDDeviceNotificationHandler setRequestIdentifier:]
  -[HMDDeviceNotificationHandler delayTimer]
  -[HMDDeviceNotificationHandler requestIdentifier]
  -[HMDDeviceNotificationHandler setDelayTimer:]
  -[HMDDeviceNotificationHandler destination]
  -[HMDDeviceNotificationHandler .cxx_destruct]
  -[HMDDeviceNotificationHandler setHome:]
  -[HMDDeviceNotificationHandler home]
  -[HMDDeviceNotificationHandler setDestination:]
  -[HMDDeviceNotificationHandler initWithDestination:watchDevice:withRequestIdentifier:home:]
  -[HMDDeviceNotificationHandler sendNotificationForCharacteristicChanges:withRequestIdentifier:]
  -[HMDDeviceNotificationHandler sendNotificationForMediaProperties:withRequestIdentifier:]
  -[HMDDeviceNotificationHandler updatedCharacteristics]
  -[HMDDeviceNotificationHandler _beginCoalesce:]
  -[HMDDeviceNotificationHandler _dispatchNotification]
  -[HMDDeviceNotificationHandler coalesceTimer]
  -[HMDDeviceNotificationHandler setCoalesceTimer:]
  -[HMDDeviceNotificationHandler delaySupported]
  -[HMDDeviceNotificationHandler notificationUpdateIdentifier]
  -[HMDDeviceNotificationHandler setNotificationUpdateIdentifier:]
  -[HMDDeviceNotificationHandler setUpdatedCharacteristics:]
  -[HMDDeviceNotificationHandler updatedMediaPropertiesByMediaProfile]
  -[HMDDeviceNotificationHandler setUpdatedMediaPropertiesByMediaProfile:]
  -[HMDDeviceNotificationHandler setDelaySupported:]


HMDCameraRecordingReachabilityLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  BOOL reachable
 @property  BOOL didCreateEventModel
 @property  unsigned long reachabilityChangeDebounceCount
 @property  double offlineDuration
 @property  HMDAccessoryVersion *firmwareVersion
 @property  NSString *manufacturer
 @property  NSString *model

  // class methods
  +[HMDCameraRecordingReachabilityLogEvent uuid]

  // instance methods
  -[HMDCameraRecordingReachabilityLogEvent firmwareVersion]
  -[HMDCameraRecordingReachabilityLogEvent eventName]
  -[HMDCameraRecordingReachabilityLogEvent manufacturer]
  -[HMDCameraRecordingReachabilityLogEvent .cxx_destruct]
  -[HMDCameraRecordingReachabilityLogEvent model]
  -[HMDCameraRecordingReachabilityLogEvent reachable]
  -[HMDCameraRecordingReachabilityLogEvent serializedEvent]
  -[HMDCameraRecordingReachabilityLogEvent initWithReachability:didCreateEventModel:reachabilityChangeDebounceCount:offlineDuration:hapAccessory:]
  -[HMDCameraRecordingReachabilityLogEvent didCreateEventModel]
  -[HMDCameraRecordingReachabilityLogEvent reachabilityChangeDebounceCount]
  -[HMDCameraRecordingReachabilityLogEvent offlineDuration]


HMDRelayActivationClient : HAPRelayActivationClient /System/Library/Frameworks/CoreImage.framework/CoreImage <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *challengeIdentifier
 @property  HMDAccessory *accessory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRelayActivationClient logCategory]

  // instance methods
  -[HMDRelayActivationClient initWithAccessory:]
  -[HMDRelayActivationClient .cxx_destruct]
  -[HMDRelayActivationClient close]
  -[HMDRelayActivationClient workQueue]
  -[HMDRelayActivationClient open]
  -[HMDRelayActivationClient accessory]
  -[HMDRelayActivationClient _closeWithError:]
  -[HMDRelayActivationClient setChallengeIdentifier:]
  -[HMDRelayActivationClient challengeIdentifier]
  -[HMDRelayActivationClient requestChallenge]
  -[HMDRelayActivationClient requestCertificateWithPublicKey:challengeCertificate:challengeResponse:]


HMDDAccessoryServerBrowserDemo : HAPAccessoryServerBrowser /System/Library/Frameworks/CoreImage.framework/CoreImage
 @property  <HAPAccessoryServerBrowserDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSMutableArray *servers
 @property  NSDictionary *demoData
 @property  BOOL accessoryPaired

  // instance methods
  -[HMDDAccessoryServerBrowserDemo discoverAccessoryServerWithIdentifier:]
  -[HMDDAccessoryServerBrowserDemo startDiscoveringAccessoryServers]
  -[HMDDAccessoryServerBrowserDemo setDelegateQueue:]
  -[HMDDAccessoryServerBrowserDemo linkType]
  -[HMDDAccessoryServerBrowserDemo delegateQueue]
  -[HMDDAccessoryServerBrowserDemo stopDiscoveringAccessoryServers]
  -[HMDDAccessoryServerBrowserDemo setDelegate:queue:]
  -[HMDDAccessoryServerBrowserDemo .cxx_destruct]
  -[HMDDAccessoryServerBrowserDemo servers]
  -[HMDDAccessoryServerBrowserDemo setDelegate:]
  -[HMDDAccessoryServerBrowserDemo _delegateRespondsToSelector:]
  -[HMDDAccessoryServerBrowserDemo delegate]
  -[HMDDAccessoryServerBrowserDemo discoverServer]
  -[HMDDAccessoryServerBrowserDemo accessoryPaired]
  -[HMDDAccessoryServerBrowserDemo loadDemoData:finalized:]
  -[HMDDAccessoryServerBrowserDemo appendDemoData:]
  -[HMDDAccessoryServerBrowserDemo resetDemoAccessory:]
  -[HMDDAccessoryServerBrowserDemo setServers:]
  -[HMDDAccessoryServerBrowserDemo demoData]
  -[HMDDAccessoryServerBrowserDemo setDemoData:]
  -[HMDDAccessoryServerBrowserDemo setAccessoryPaired:]


HMDSettingTransaction : NSObject /usr/lib/libc++.1.dylib <HMDSettingTransaction>
 @property  NSString *transactionLabel
 @property  NSMutableSet *updateModels
 @property  NSMutableSet *removeUUIDs
 @property  BOOL initialCreation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDSettingTransaction .cxx_destruct]
  -[HMDSettingTransaction transactionLabel]
  -[HMDSettingTransaction updateModels]
  -[HMDSettingTransaction removeUUIDs]
  -[HMDSettingTransaction addSettingModel:]
  -[HMDSettingTransaction addModel:]
  -[HMDSettingTransaction removeModelWithIdentifier:]
  -[HMDSettingTransaction initWithTransactionLabel:]
  -[HMDSettingTransaction initForInitialCreationWithTransactionLabel:]
  -[HMDSettingTransaction addModelToBeUpdated:]
  -[HMDSettingTransaction initialCreation]


HMDUserSettingsBackingStoreController : NSObject /usr/lib/libc++.1.dylib <HMBLocalZoneModelObserver, HMFLogging, HMDCloudShareParticipantsManagerDataSource, HMDCloudShareParticipantsManagerDelegate, HMDCloudShareMessengerDelegate, HMDDatabaseDelegate, HMDSettingsBackingStoreController>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *zoneName
 @property  <HMDDatabase> *database
 @property  HMDLogEventDispatcher *logEventDispatcher
 @property  HMDCloudShareMessenger *shareMessenger
 @property  HMDCloudShareParticipantsManager *participantsManager
 @property  HMBCloudZone *cloudZone
 @property  HMBLocalZone *localZone
 @property  long long runState
 @property  <HMDSettingTransactionReceiverProtocol> *transactionReceiver
 @property  <HMDAssistantAccessControlModelUpdateReceiver> *assistantAccessControlModelUpdateReceiver
 @property  NSUUID *assistantAccessControlModelID
 @property  <HMDMediaContentProfileAccessControlModelUpdateReceiver> *mediaContentProfileAccessControlModelUpdateReceiver
 @property  NSUUID *mediaContentProfileAccessControlModelID
 @property  <HMDUserSettingsBackingStoreControllerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserSettingsBackingStoreController logCategory]

  // instance methods
  -[HMDUserSettingsBackingStoreController runState]
  -[HMDUserSettingsBackingStoreController zoneName]
  -[HMDUserSettingsBackingStoreController logIdentifier]
  -[HMDUserSettingsBackingStoreController .cxx_destruct]
  -[HMDUserSettingsBackingStoreController workQueue]
  -[HMDUserSettingsBackingStoreController clearParticipants]
  -[HMDUserSettingsBackingStoreController database]
  -[HMDUserSettingsBackingStoreController setRunState:]
  -[HMDUserSettingsBackingStoreController _invalidate]
  -[HMDUserSettingsBackingStoreController localZone]
  -[HMDUserSettingsBackingStoreController updateParticipants]
  -[HMDUserSettingsBackingStoreController delegate]
  -[HMDUserSettingsBackingStoreController start]
  -[HMDUserSettingsBackingStoreController cloudZone]
  -[HMDUserSettingsBackingStoreController setCloudZone:]
  -[HMDUserSettingsBackingStoreController localZone:didProcessModelDeletion:]
  -[HMDUserSettingsBackingStoreController localZone:didProcessModelCreation:]
  -[HMDUserSettingsBackingStoreController localZone:didProcessModelUpdate:]
  -[HMDUserSettingsBackingStoreController setLocalZone:]
  -[HMDUserSettingsBackingStoreController manager:shouldShareWithUser:]
  -[HMDUserSettingsBackingStoreController logEventDispatcher]
  -[HMDUserSettingsBackingStoreController _updateRunState:]
  -[HMDUserSettingsBackingStoreController _startWithOwnedZone]
  -[HMDUserSettingsBackingStoreController _startWithSharedZone]
  -[HMDUserSettingsBackingStoreController setAssistantAccessControlModelUpdateReceiver:]
  -[HMDUserSettingsBackingStoreController setAssistantAccessControlModelID:]
  -[HMDUserSettingsBackingStoreController setMediaContentProfileAccessControlModelUpdateReceiver:]
  -[HMDUserSettingsBackingStoreController setMediaContentProfileAccessControlModelID:]
  -[HMDUserSettingsBackingStoreController participantsManager]
  -[HMDUserSettingsBackingStoreController _didFetchZonesWithResult:isOwnedZone:error:]
  -[HMDUserSettingsBackingStoreController shareMessenger]
  -[HMDUserSettingsBackingStoreController setParticipantsManager:]
  -[HMDUserSettingsBackingStoreController _localZone:updatedModel:previousModel:options:result:]
  -[HMDUserSettingsBackingStoreController transactionReceiver]
  -[HMDUserSettingsBackingStoreController assistantAccessControlModelID]
  -[HMDUserSettingsBackingStoreController assistantAccessControlModelUpdateReceiver]
  -[HMDUserSettingsBackingStoreController mediaContentProfileAccessControlModelID]
  -[HMDUserSettingsBackingStoreController mediaContentProfileAccessControlModelUpdateReceiver]
  -[HMDUserSettingsBackingStoreController setTransactionReceiver:]
  -[HMDUserSettingsBackingStoreController runTransaction:waitForCloudPush:completion:]
  -[HMDUserSettingsBackingStoreController manager:didRequestSendForInvitation:toUser:]
  -[HMDUserSettingsBackingStoreController messenger:didReceiveInvitationData:completion:]
  -[HMDUserSettingsBackingStoreController messengerDidReceiveInvitationRequest:]
  -[HMDUserSettingsBackingStoreController database:didCreateZoneWithName:isPrivate:]
  -[HMDUserSettingsBackingStoreController database:didRemoveZoneWithName:isPrivate:]
  -[HMDUserSettingsBackingStoreController registerForSettingsTransactions:]
  -[HMDUserSettingsBackingStoreController settingTransactionWithName:]
  -[HMDUserSettingsBackingStoreController runSettingTransaction:completion:]
  -[HMDUserSettingsBackingStoreController runSettingTransaction:waitForCloudPush:completion:]
  -[HMDUserSettingsBackingStoreController initWithDelegate:queue:zoneName:database:home:shareMessenger:]
  -[HMDUserSettingsBackingStoreController loadPrivateUserDataModelWithError:]
  -[HMDUserSettingsBackingStoreController loadSharedUserDataModelWithError:]
  -[HMDUserSettingsBackingStoreController loadAssistantAccessControlModelWithModelID:error:]
  -[HMDUserSettingsBackingStoreController registerForAssistantAccessControlModelUpdates:modelID:]
  -[HMDUserSettingsBackingStoreController loadMediaContentAccessControlModelWithModelID:error:]
  -[HMDUserSettingsBackingStoreController registerForMediaContentAccessControlModelUpdates:modelID:]
  -[HMDUserSettingsBackingStoreController destroyZone]
  -[HMDUserSettingsBackingStoreController registerObserverDeviceIdentifier:observerPushToken:subActivity:subjectDeviceIdentifier:]
  -[HMDUserSettingsBackingStoreController updateObserverDeviceIdentifier:observerPushToken:]
  -[HMDUserSettingsBackingStoreController deregisterObserverDeviceIdentifier:observerPushToken:subActivity:subjectDeviceIdentifier:]
  -[HMDUserSettingsBackingStoreController deregisterObserverDeviceIdentifier:]
  -[HMDUserSettingsBackingStoreController queryPushTokensForDevicesObservingSubjectDevice:subActivity:]
  -[HMDUserSettingsBackingStoreController loadUserSettings]


HMDHTTPMessageTransport : HMDRemoteMessageTransport <HMDHTTPServerMessageTransportDelegate, HMFNetServiceBrowserDelegate, HMDHTTPClientMessageTransportDelegate>
 @property  HMDHTTPServerMessageTransport *serverTransport
 @property  HMFNetServiceBrowser *clientBrowser
 @property  NSArray *clientTransports
 @property  HMDHTTPDevice *currentDevice
 @property  BOOL serverEnabled
 @property  NSDictionary *TXTRecord
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHTTPMessageTransport protocolVersion]
  +[HMDHTTPMessageTransport logCategory]
  +[HMDHTTPMessageTransport shortDescription]
  +[HMDHTTPMessageTransport restriction]
  +[HMDHTTPMessageTransport shouldHostMessageServer]
  +[HMDHTTPMessageTransport protocolVersionSupportsExtendedMessages:]

  // instance methods
  -[HMDHTTPMessageTransport sendMessage:completionHandler:]
  -[HMDHTTPMessageTransport logIdentifier]
  -[HMDHTTPMessageTransport .cxx_destruct]
  -[HMDHTTPMessageTransport _stopServer]
  -[HMDHTTPMessageTransport descriptionWithPointer:]
  -[HMDHTTPMessageTransport shortDescription]
  -[HMDHTTPMessageTransport currentDevice]
  -[HMDHTTPMessageTransport setCurrentDevice:]
  -[HMDHTTPMessageTransport qualityOfService]
  -[HMDHTTPMessageTransport canSendMessage:]
  -[HMDHTTPMessageTransport initWithAccountRegistry:clientBrowser:]
  -[HMDHTTPMessageTransport initWithAccountRegistry:]
  -[HMDHTTPMessageTransport clientTransportForDevice:]
  -[HMDHTTPMessageTransport _serviceForDevice:]
  -[HMDHTTPMessageTransport serverTransport]
  -[HMDHTTPMessageTransport isDeviceConnected:]
  -[HMDHTTPMessageTransport _sendMessage:destination:timeout:responseHandler:]
  -[HMDHTTPMessageTransport _connectToDevice:completionHandler:]
  -[HMDHTTPMessageTransport deviceForHTTPDevice:]
  -[HMDHTTPMessageTransport handleServerEnabled:]
  -[HMDHTTPMessageTransport _startServerWithDevice:]
  -[HMDHTTPMessageTransport setTXTRecordValue:forKey:]
  -[HMDHTTPMessageTransport removeTXTRecordValueForKey:]
  -[HMDHTTPMessageTransport clientBrowser]
  -[HMDHTTPMessageTransport clientTransports]
  -[HMDHTTPMessageTransport removeAllClientTransports]
  -[HMDHTTPMessageTransport isServerEnabled]
  -[HMDHTTPMessageTransport setServerTransport:]
  -[HMDHTTPMessageTransport TXTRecord]
  -[HMDHTTPMessageTransport addClientTransport:]
  -[HMDHTTPMessageTransport _handleReceivedRequestMessage:fromDevice:completionHandler:]
  -[HMDHTTPMessageTransport clientTransportForService:]
  -[HMDHTTPMessageTransport removeClientTransport:]
  -[HMDHTTPMessageTransport startObservingIsPublishingForService:]
  -[HMDHTTPMessageTransport server:didStopWithError:]
  -[HMDHTTPMessageTransport server:didAddDevice:]
  -[HMDHTTPMessageTransport server:didRemoveDevice:]
  -[HMDHTTPMessageTransport server:didReceiveMessage:fromDevice:completionHandler:]
  -[HMDHTTPMessageTransport netServiceBrowser:didAddService:]
  -[HMDHTTPMessageTransport netServiceBrowser:didStopBrowsingWithError:]
  -[HMDHTTPMessageTransport netServiceBrowser:didRemoveService:]
  -[HMDHTTPMessageTransport client:didStopWithError:]
  -[HMDHTTPMessageTransport client:didReceiveMessage:completionHandler:]
  -[HMDHTTPMessageTransport setServerEnabled:]
  -[HMDHTTPMessageTransport configureWithDevice:]


HMDAccessorySymptomHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDAccessorySymptomsDelegate, NSSecureCoding, HMFLogging, HMDHomeMessageReceiver>
 @property  HMDSymptomManager *symptomManager
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSSet *symptoms
 @property  NSSet *syncedSymptoms
 @property  NSSet *localSymptoms
 @property  NSUUID *sfDeviceIdentifier
 @property  NSUUID *uuid
 @property  HMDAccessory *accessory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDAccessorySymptomHandler supportsSecureCoding]
  +[HMDAccessorySymptomHandler logCategory]
  +[HMDAccessorySymptomHandler hasMessageReceiverChildren]

  // instance methods
  -[HMDAccessorySymptomHandler messageTargetUUID]
  -[HMDAccessorySymptomHandler messageReceiveQueue]
  -[HMDAccessorySymptomHandler setWorkQueue:]
  -[HMDAccessorySymptomHandler logIdentifier]
  -[HMDAccessorySymptomHandler uuid]
  -[HMDAccessorySymptomHandler .cxx_destruct]
  -[HMDAccessorySymptomHandler workQueue]
  -[HMDAccessorySymptomHandler encodeWithCoder:]
  -[HMDAccessorySymptomHandler setMsgDispatcher:]
  -[HMDAccessorySymptomHandler msgDispatcher]
  -[HMDAccessorySymptomHandler sfDeviceIdentifier]
  -[HMDAccessorySymptomHandler symptoms]
  -[HMDAccessorySymptomHandler accessory]
  -[HMDAccessorySymptomHandler initWithCoder:]
  -[HMDAccessorySymptomHandler refreshCurrentDeviceSymptoms]
  -[HMDAccessorySymptomHandler _refreshCurrentDeviceSymptoms]
  -[HMDAccessorySymptomHandler configureWithWorkQueue:messageDispatcher:]
  -[HMDAccessorySymptomHandler initWithAccessory:syncedSymptoms:symptomManager:]
  -[HMDAccessorySymptomHandler syncedSymptoms]
  -[HMDAccessorySymptomHandler localSymptoms]
  -[HMDAccessorySymptomHandler handleCurrentDeviceSymptomsChangedNotification:]
  -[HMDAccessorySymptomHandler symptomManager]
  -[HMDAccessorySymptomHandler _registerMessages]
  -[HMDAccessorySymptomHandler _handleFixErrorMessage:]
  -[HMDAccessorySymptomHandler _updateBackingStoreModelWithNewSyncedSymptoms:]
  -[HMDAccessorySymptomHandler _filteredAccessorySymptomsForSymptoms:]
  -[HMDAccessorySymptomHandler _filteredMediaSystemSymptomsForSymptoms:]
  -[HMDAccessorySymptomHandler setLocalSymptoms:]
  -[HMDAccessorySymptomHandler _sendStatusUpdate]
  -[HMDAccessorySymptomHandler setSfDeviceIdentifier:]
  -[HMDAccessorySymptomHandler setSyncedSymptoms:]
  -[HMDAccessorySymptomHandler _updateStateWithNewBroadcastedSymptoms:]
  -[HMDAccessorySymptomHandler _updateStateWithNewLocalSymptoms:]
  -[HMDAccessorySymptomHandler _updateStateWithNewSFDeviceIdentifier:]
  -[HMDAccessorySymptomHandler initWithAccessory:syncedSymptoms:]
  -[HMDAccessorySymptomHandler symptomManager:didChangeBroadcastedSymptoms:]
  -[HMDAccessorySymptomHandler symptomManager:didChangeLocalSymptoms:]
  -[HMDAccessorySymptomHandler symptomManager:didChangeSFDeviceIdentifier:]
  -[HMDAccessorySymptomHandler handleAccessoryDeviceUpdated]
  -[HMDAccessorySymptomHandler handleNewSyncedSymptoms:message:]


HMDSettingMessageMapper : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFMessageReceiver>
 @property  NSUUID *identifier
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDSettingMessageMapper messageTargetUUID]
  -[HMDSettingMessageMapper messageReceiveQueue]
  -[HMDSettingMessageMapper .cxx_destruct]
  -[HMDSettingMessageMapper initWithIdentifier:queue:]
  -[HMDSettingMessageMapper identifier]
  -[HMDSettingMessageMapper queue]
  -[HMDSettingMessageMapper messageDispatcher]
  -[HMDSettingMessageMapper setMessageDispatcher:]
  -[HMDSettingMessageMapper registerForMessage:policies:messageDispatcher:messageHandler:]
  -[HMDSettingMessageMapper deregisterFromAllMessages]


HMDVideoStreamInterface : HMDStreamInterface <AVCVideoStreamDelegate, HMDVideoStreamReconfigureDelegate>
 @property  BOOL rtcpEnabled
 @property  BOOL rtpTimeOutEnabled
 @property  BOOL rtcpTimeOutEnabled
 @property  double rtpTimeOutIntervalSec
 @property  double rtcpTimeOutIntervalSec
 @property  double rtcpSendIntervalSec
 @property  NSNumber *syncSource
 @property  NSNumber *streamToken
 @property  HMDVideoStreamReconfigure *videoStreamReconfigure
 @property  AVCVideoStream *videoStream
 @property  <HMDVideoStreamInterfaceDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *lastFrameDelegateQueue
 @property  <HMDVideoStreamLastDecodedFrameDelegate> *lastFrameDelegate
 @property  HMFOSTransaction *snapshotDataTrasaction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDVideoStreamInterface logCategory]

  // instance methods
  -[HMDVideoStreamInterface logIdentifier]
  -[HMDVideoStreamInterface streamToken]
  -[HMDVideoStreamInterface dealloc]
  -[HMDVideoStreamInterface captureSnapshot]
  -[HMDVideoStreamInterface .cxx_destruct]
  -[HMDVideoStreamInterface streamDidStop:]
  -[HMDVideoStreamInterface stopStream]
  -[HMDVideoStreamInterface delegate]
  -[HMDVideoStreamInterface stream:didStart:error:]
  -[HMDVideoStreamInterface streamDidRTPTimeOut:]
  -[HMDVideoStreamInterface streamDidRTCPTimeOut:]
  -[HMDVideoStreamInterface streamDidServerDie:]
  -[HMDVideoStreamInterface setRtpTimeOutEnabled:]
  -[HMDVideoStreamInterface setRtcpTimeOutEnabled:]
  -[HMDVideoStreamInterface setRtcpEnabled:]
  -[HMDVideoStreamInterface setRtcpSendInterval:]
  -[HMDVideoStreamInterface isRTPTimeOutEnabled]
  -[HMDVideoStreamInterface setRtpTimeOutIntervalSec:]
  -[HMDVideoStreamInterface setRtcpTimeOutIntervalSec:]
  -[HMDVideoStreamInterface setRtcpSendIntervalSec:]
  -[HMDVideoStreamInterface syncSource]
  -[HMDVideoStreamInterface isRTCPEnabled]
  -[HMDVideoStreamInterface isRTCPTimeOutEnabled]
  -[HMDVideoStreamInterface rtpTimeOutIntervalSec]
  -[HMDVideoStreamInterface rtcpTimeOutIntervalSec]
  -[HMDVideoStreamInterface rtcpSendIntervalSec]
  -[HMDVideoStreamInterface stream:didUpdateVideoConfiguration:error:]
  -[HMDVideoStreamInterface stream:didGetLastDecodedFrame:]
  -[HMDVideoStreamInterface stream:downlinkQualityDidChange:]
  -[HMDVideoStreamInterface startStream:]
  -[HMDVideoStreamInterface _callNetworkImproved]
  -[HMDVideoStreamInterface _callNetworkDeteriorated]
  -[HMDVideoStreamInterface videoStreamReconfigureDidNetworkImprove:]
  -[HMDVideoStreamInterface videoStreamReconfigureDidNetworkDeteriorate:]
  -[HMDVideoStreamInterface updateReconfigurationMode:]
  -[HMDVideoStreamInterface _createLocalSocket]
  -[HMDVideoStreamInterface setSnapshotDataTrasaction:]
  -[HMDVideoStreamInterface videoStream]
  -[HMDVideoStreamInterface _initializeStreamRemoteSender:]
  -[HMDVideoStreamInterface _initializeStreamRemoteDestinationReceiver:]
  -[HMDVideoStreamInterface _initializeStreamRemoteSocketReceiver:]
  -[HMDVideoStreamInterface _initializeStreamRemoteLocal]
  -[HMDVideoStreamInterface setVideoStream:]
  -[HMDVideoStreamInterface _startStream:]
  -[HMDVideoStreamInterface _callStarted:]
  -[HMDVideoStreamInterface videoStreamReconfigure]
  -[HMDVideoStreamInterface setLastFrameDelegate:]
  -[HMDVideoStreamInterface setLastFrameDelegateQueue:]
  -[HMDVideoStreamInterface lastFrameDelegate]
  -[HMDVideoStreamInterface snapshotDataTrasaction]
  -[HMDVideoStreamInterface _callDidUpdateConfiguration]
  -[HMDVideoStreamInterface _callDidGetLastDecodedFrame:]
  -[HMDVideoStreamInterface _callStopped:]
  -[HMDVideoStreamInterface initWithSessionID:workQueue:delegate:delegateQueue:sessionHandler:localNetworkConfig:]
  -[HMDVideoStreamInterface updateStreamConfiguration:]
  -[HMDVideoStreamInterface setSnapshotDelegate:delegateQueue:]
  -[HMDVideoStreamInterface lastFrameDelegateQueue]


HMDBackingStoreModelObjectStorageInfoDeprecatedField : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI

HMDBackingStoreModelObjectStorageInfo : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMFVersion *readOnly
 @property  HMFVersion *unavailable
 @property  Class classObj
 @property  unsigned long logging
 @property  id defaultValue
 @property  BOOL defaultValueSet

  // class methods
  +[HMDBackingStoreModelObjectStorageInfo deprecatedField]
  +[HMDBackingStoreModelObjectStorageInfo infoWithClass:]
  +[HMDBackingStoreModelObjectStorageInfo infoWithClass:logging:]
  +[HMDBackingStoreModelObjectStorageInfo infoWithClass:logging:readOnly:]
  +[HMDBackingStoreModelObjectStorageInfo infoWithClass:logging:readOnly:unavailable:]
  +[HMDBackingStoreModelObjectStorageInfo infoWithClass:defaultValue:]
  +[HMDBackingStoreModelObjectStorageInfo infoWithClass:defaultValue:logging:]
  +[HMDBackingStoreModelObjectStorageInfo infoWithClass:defaultValue:logging:readOnly:]
  +[HMDBackingStoreModelObjectStorageInfo infoWithClass:defaultValue:logging:readOnly:unavailable:]

  // instance methods
  -[HMDBackingStoreModelObjectStorageInfo defaultValue]
  -[HMDBackingStoreModelObjectStorageInfo setReadOnly:]
  -[HMDBackingStoreModelObjectStorageInfo logging]
  -[HMDBackingStoreModelObjectStorageInfo readOnly]
  -[HMDBackingStoreModelObjectStorageInfo setUnavailable:]
  -[HMDBackingStoreModelObjectStorageInfo .cxx_destruct]
  -[HMDBackingStoreModelObjectStorageInfo classObj]
  -[HMDBackingStoreModelObjectStorageInfo unavailable]
  -[HMDBackingStoreModelObjectStorageInfo initWithClass:logging:readOnly:unavailable:defaultSet:defaultValue:]
  -[HMDBackingStoreModelObjectStorageInfo defaultValueSet]


HMDStreamingManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDVideoStreamInterfaceDelegate, HMDAudioStreamInterfaceDelegate, AVCRemoteVideoClientDelegate, HMFLogging>
 @property  HMDCameraStreamSessionID *sessionID
 @property  NSNumber *slotIdentifier
 @property  AVCRemoteVideoClient *avcRemoteVideo
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDStreamingManagerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  HMDCameraStreamSnapshotHandler *streamSnapshotHandler
 @property  HMDVideoStreamInterface *videoStreamInterface
 @property  HMDAudioStreamInterface *audioStreamInterface
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDStreamingManager logCategory]

  // instance methods
  -[HMDStreamingManager setSessionID:]
  -[HMDStreamingManager sessionID]
  -[HMDStreamingManager setWorkQueue:]
  -[HMDStreamingManager logIdentifier]
  -[HMDStreamingManager setDelegateQueue:]
  -[HMDStreamingManager delegateQueue]
  -[HMDStreamingManager _stopStream]
  -[HMDStreamingManager dealloc]
  -[HMDStreamingManager .cxx_destruct]
  -[HMDStreamingManager workQueue]
  -[HMDStreamingManager remoteVideoClientDidReceiveFirstFrame:]
  -[HMDStreamingManager remoteVideoClientDidReceiveLastFrame:]
  -[HMDStreamingManager remoteVideoServerDidDie:]
  -[HMDStreamingManager remoteVideoClient:remoteVideoAttributesDidChange:]
  -[HMDStreamingManager setDelegate:]
  -[HMDStreamingManager delegate]
  -[HMDStreamingManager slotIdentifier]
  -[HMDStreamingManager setSlotIdentifier:]
  -[HMDStreamingManager _callNetworkImproved]
  -[HMDStreamingManager _callNetworkDeteriorated]
  -[HMDStreamingManager updateReconfigurationMode:]
  -[HMDStreamingManager videoStream:didStart:]
  -[HMDStreamingManager videoStream:didStop:]
  -[HMDStreamingManager videoStreamDidNetworkImprove:]
  -[HMDStreamingManager videoStreamDidNetworkDeteriorate:]
  -[HMDStreamingManager videoStreamDidUpdateConfiguration:]
  -[HMDStreamingManager updateStreamConfiguration:]
  -[HMDStreamingManager _startStreamWithVideoConfig:audioConfig:]
  -[HMDStreamingManager videoStreamInterface]
  -[HMDStreamingManager audioStreamInterface]
  -[HMDStreamingManager _callRelayStarted]
  -[HMDStreamingManager streamSnapshotHandler]
  -[HMDStreamingManager updateAudioSetting:]
  -[HMDStreamingManager updateAudioVolume:callback:]
  -[HMDStreamingManager _callStreamStopped:]
  -[HMDStreamingManager setAvcRemoteVideo:]
  -[HMDStreamingManager avcRemoteVideo]
  -[HMDStreamingManager _callStreamStarted:]
  -[HMDStreamingManager _callConfigurationUpdated]
  -[HMDStreamingManager _callReceivedFirstFrame:]
  -[HMDStreamingManager audioStream:didStart:]
  -[HMDStreamingManager audioStream:didPause:]
  -[HMDStreamingManager audioStream:didResume:]
  -[HMDStreamingManager audioStream:didStop:]
  -[HMDStreamingManager initWithSessionID:streamSnapshotHandler:workQueue:delegate:delegateQueue:localVideoNetworkConfig:localAudioNetworkConfig:sessionHandler:]
  -[HMDStreamingManager startStreamWithVideoConfig:audioConfig:]
  -[HMDStreamingManager setVideoStreamInterface:]
  -[HMDStreamingManager setAudioStreamInterface:]


HMDUserPhotosPersonDataManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *userUUID
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMBLocalZone *localZone
 @property  BOOL supportsFaceClassification
 @property  HMDUser *user
 @property  HMPhotosPersonManagerSettings *settings
 @property  HMDPhotosPersonManager *personManager
 @property  HMDCloudPhotosSettingObserver *cloudPhotosSettingObserver
 @property  @? personManagerFactory
 @property  NSUUID *zoneUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDUserPhotosPersonDataManager defaultSettings]
  +[HMDUserPhotosPersonDataManager logCategory]
  +[HMDUserPhotosPersonDataManager settingsModelUUIDWithUUID:]

  // instance methods
  -[HMDUserPhotosPersonDataManager messageTargetUUID]
  -[HMDUserPhotosPersonDataManager user]
  -[HMDUserPhotosPersonDataManager setUser:]
  -[HMDUserPhotosPersonDataManager messageReceiveQueue]
  -[HMDUserPhotosPersonDataManager configure]
  -[HMDUserPhotosPersonDataManager logIdentifier]
  -[HMDUserPhotosPersonDataManager userUUID]
  -[HMDUserPhotosPersonDataManager .cxx_destruct]
  -[HMDUserPhotosPersonDataManager workQueue]
  -[HMDUserPhotosPersonDataManager localZone]
  -[HMDUserPhotosPersonDataManager settings]
  -[HMDUserPhotosPersonDataManager personManager]
  -[HMDUserPhotosPersonDataManager setPersonManager:]
  -[HMDUserPhotosPersonDataManager messageDispatcher]
  -[HMDUserPhotosPersonDataManager setSettings:]
  -[HMDUserPhotosPersonDataManager supportsFaceClassification]
  -[HMDUserPhotosPersonDataManager removeCloudData]
  -[HMDUserPhotosPersonDataManager updateSettingsModelWithSettings:]
  -[HMDUserPhotosPersonDataManager initWithUser:messageDispatcher:localZone:workQueue:supportsFaceClassification:cloudPhotosSettingObserver:]
  -[HMDUserPhotosPersonDataManager settingsModel]
  -[HMDUserPhotosPersonDataManager zoneUUID]
  -[HMDUserPhotosPersonDataManager updateSettingsForCurrentCameraClipsAccess]
  -[HMDUserPhotosPersonDataManager handleUpdatePersonManagerSettingsMessage:]
  -[HMDUserPhotosPersonDataManager handleFetchSettingsMessage:]
  -[HMDUserPhotosPersonDataManager handleUserCamerasAccessLevelDidChangeNotification:]
  -[HMDUserPhotosPersonDataManager handleUserRemoteAccessDidChangeNotification:]
  -[HMDUserPhotosPersonDataManager handleHomePersonManagerSettingsDidChangeNotification:]
  -[HMDUserPhotosPersonDataManager configurePhotosPersonManagerWithSettingsModel:]
  -[HMDUserPhotosPersonDataManager settingsModelUUID]
  -[HMDUserPhotosPersonDataManager removeCloudDataForZoneUUID:]
  -[HMDUserPhotosPersonDataManager photosPersonManagerZoneUUIDForAnyOtherHomeCurrentUser]
  -[HMDUserPhotosPersonDataManager personManagerFactory]
  -[HMDUserPhotosPersonDataManager cloudPhotosSettingObserver]
  -[HMDUserPhotosPersonDataManager initWithUser:messageDispatcher:localZone:workQueue:]
  -[HMDUserPhotosPersonDataManager recoverDueToUUIDChangeFromOldUUID:]
  -[HMDUserPhotosPersonDataManager handleUpdatedSettingsModel:previousSettingsModel:]
  -[HMDUserPhotosPersonDataManager setPersonManagerFactory:]


HMDBackingStoreCacheZone : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableArray *actualGroups
 @property  long long zoneID
 @property  NSString *zoneName
 @property  NSArray *groups

  // instance methods
  -[HMDBackingStoreCacheZone groups]
  -[HMDBackingStoreCacheZone zoneName]
  -[HMDBackingStoreCacheZone zoneID]
  -[HMDBackingStoreCacheZone .cxx_destruct]
  -[HMDBackingStoreCacheZone dumpDebug]
  -[HMDBackingStoreCacheZone actualGroups]
  -[HMDBackingStoreCacheZone initWithZoneID:name:]
  -[HMDBackingStoreCacheZone setActualGroups:]


HMDBackingStoreCacheCreateZoneOperation : HMDBackingStoreOperation
 @property  NSString *zoneName
 @property  @? creationBlock

  // instance methods
  -[HMDBackingStoreCacheCreateZoneOperation setCreationBlock:]
  -[HMDBackingStoreCacheCreateZoneOperation zoneName]
  -[HMDBackingStoreCacheCreateZoneOperation .cxx_destruct]
  -[HMDBackingStoreCacheCreateZoneOperation setZoneName:]
  -[HMDBackingStoreCacheCreateZoneOperation creationBlock]
  -[HMDBackingStoreCacheCreateZoneOperation initWithZoneName:creationBlock:]
  -[HMDBackingStoreCacheCreateZoneOperation mainReturningError]


HMDBackingStoreCacheFetchZonesOperation : HMDBackingStoreOperation
 @property  @? fetchResult

  // instance methods
  -[HMDBackingStoreCacheFetchZonesOperation setFetchResult:]
  -[HMDBackingStoreCacheFetchZonesOperation .cxx_destruct]
  -[HMDBackingStoreCacheFetchZonesOperation initWithFetchResult:]
  -[HMDBackingStoreCacheFetchZonesOperation fetchResult]
  -[HMDBackingStoreCacheFetchZonesOperation mainReturningError]


HMDBackingStoreCacheDeleteZoneOperation : HMDBackingStoreOperation
 @property  @? creationBlock
 @property  HMDBackingStoreCacheZone *zone

  // instance methods
  -[HMDBackingStoreCacheDeleteZoneOperation zone]
  -[HMDBackingStoreCacheDeleteZoneOperation setCreationBlock:]
  -[HMDBackingStoreCacheDeleteZoneOperation .cxx_destruct]
  -[HMDBackingStoreCacheDeleteZoneOperation setZone:]
  -[HMDBackingStoreCacheDeleteZoneOperation creationBlock]
  -[HMDBackingStoreCacheDeleteZoneOperation mainReturningError]
  -[HMDBackingStoreCacheDeleteZoneOperation initWithZone:resultBlock:]


HMDBackingStoreCacheGroup : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  long long groupID
 @property  CKServerChangeToken *serverChangeToken
 @property  CKRecordZoneSubscription *subscription
 @property  HMDBackingStoreCacheZone *zone
 @property  NSString *rootRecordName
 @property  NSString *subscriptionName
 @property  NSString *owner

  // instance methods
  -[HMDBackingStoreCacheGroup zone]
  -[HMDBackingStoreCacheGroup owner]
  -[HMDBackingStoreCacheGroup subscription]
  -[HMDBackingStoreCacheGroup setGroupID:]
  -[HMDBackingStoreCacheGroup .cxx_destruct]
  -[HMDBackingStoreCacheGroup setSubscription:]
  -[HMDBackingStoreCacheGroup groupID]
  -[HMDBackingStoreCacheGroup serverChangeToken]
  -[HMDBackingStoreCacheGroup setServerChangeToken:]
  -[HMDBackingStoreCacheGroup dumpDebug]
  -[HMDBackingStoreCacheGroup rootRecordName]
  -[HMDBackingStoreCacheGroup subscriptionName]
  -[HMDBackingStoreCacheGroup initWithGroupID:zone:rootRecord:serverChangeToken:subscriptionName:owner:subscription:]


HMDBackingStoreCacheCreateGroupOperation : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *record
 @property  @? creationBlock

  // instance methods
  -[HMDBackingStoreCacheCreateGroupOperation setCreationBlock:]
  -[HMDBackingStoreCacheCreateGroupOperation .cxx_destruct]
  -[HMDBackingStoreCacheCreateGroupOperation setRecord:]
  -[HMDBackingStoreCacheCreateGroupOperation record]
  -[HMDBackingStoreCacheCreateGroupOperation creationBlock]
  -[HMDBackingStoreCacheCreateGroupOperation mainReturningError]
  -[HMDBackingStoreCacheCreateGroupOperation initWithZone:owner:rootRecord:subscriptionName:subscription:creationBlock:]


HMDBackingStoreCacheUpdateGroupTokenOperation : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *record
 @property  CKServerChangeToken *serverChangeToken

  // instance methods
  -[HMDBackingStoreCacheUpdateGroupTokenOperation .cxx_destruct]
  -[HMDBackingStoreCacheUpdateGroupTokenOperation setRecord:]
  -[HMDBackingStoreCacheUpdateGroupTokenOperation serverChangeToken]
  -[HMDBackingStoreCacheUpdateGroupTokenOperation setServerChangeToken:]
  -[HMDBackingStoreCacheUpdateGroupTokenOperation record]
  -[HMDBackingStoreCacheUpdateGroupTokenOperation mainReturningError]
  -[HMDBackingStoreCacheUpdateGroupTokenOperation initWithGroup:serverChangeToken:resultBlock:]


HMDBackingStoreCacheUpdateGroupSubscriptionOperation : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *record
 @property  CKRecordZoneSubscription *subscription

  // instance methods
  -[HMDBackingStoreCacheUpdateGroupSubscriptionOperation subscription]
  -[HMDBackingStoreCacheUpdateGroupSubscriptionOperation .cxx_destruct]
  -[HMDBackingStoreCacheUpdateGroupSubscriptionOperation setSubscription:]
  -[HMDBackingStoreCacheUpdateGroupSubscriptionOperation setRecord:]
  -[HMDBackingStoreCacheUpdateGroupSubscriptionOperation record]
  -[HMDBackingStoreCacheUpdateGroupSubscriptionOperation mainReturningError]
  -[HMDBackingStoreCacheUpdateGroupSubscriptionOperation initWithGroup:subscription:resultBlock:]


HMDBackingStoreCacheUpdateRecordOperation : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *group
 @property  NSString *recordName
 @property  CKRecord *record
 @property  NSData *data
 @property  HMDBackingStoreModelObject *model
 @property  unsigned long encoding

  // instance methods
  -[HMDBackingStoreCacheUpdateRecordOperation group]
  -[HMDBackingStoreCacheUpdateRecordOperation .cxx_destruct]
  -[HMDBackingStoreCacheUpdateRecordOperation encoding]
  -[HMDBackingStoreCacheUpdateRecordOperation data]
  -[HMDBackingStoreCacheUpdateRecordOperation record]
  -[HMDBackingStoreCacheUpdateRecordOperation recordName]
  -[HMDBackingStoreCacheUpdateRecordOperation model]
  -[HMDBackingStoreCacheUpdateRecordOperation mainReturningError]
  -[HMDBackingStoreCacheUpdateRecordOperation initWithGroup:name:record:data:encoding:model:resultBlock:]
  -[HMDBackingStoreCacheUpdateRecordOperation initWithGroup:record:data:encoding:resultBlock:]
  -[HMDBackingStoreCacheUpdateRecordOperation initWithGroup:record:resultBlock:]
  -[HMDBackingStoreCacheUpdateRecordOperation initWithGroup:name:model:resultBlock:]


HMDBackingStoreCacheDeleteRecordOperation : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *group
 @property  NSArray *recordNames

  // instance methods
  -[HMDBackingStoreCacheDeleteRecordOperation group]
  -[HMDBackingStoreCacheDeleteRecordOperation setGroup:]
  -[HMDBackingStoreCacheDeleteRecordOperation .cxx_destruct]
  -[HMDBackingStoreCacheDeleteRecordOperation recordNames]
  -[HMDBackingStoreCacheDeleteRecordOperation mainReturningError]
  -[HMDBackingStoreCacheDeleteRecordOperation initWithGroup:recordNames:resultBlock:]
  -[HMDBackingStoreCacheDeleteRecordOperation setRecordNames:]


HMDBackingStoreCacheFetchRecordResult : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDBackingStoreCacheGroup *group
 @property  NSData *data
 @property  CKRecord *record
 @property  unsigned long encoding
 @property  NSUUID *uuid

  // instance methods
  -[HMDBackingStoreCacheFetchRecordResult group]
  -[HMDBackingStoreCacheFetchRecordResult uuid]
  -[HMDBackingStoreCacheFetchRecordResult .cxx_destruct]
  -[HMDBackingStoreCacheFetchRecordResult encoding]
  -[HMDBackingStoreCacheFetchRecordResult data]
  -[HMDBackingStoreCacheFetchRecordResult record]
  -[HMDBackingStoreCacheFetchRecordResult initWithGroup:record:data:encoding:uuid:]


HMDBackingStoreCacheFetchGroupInformation : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *group
 @property  @? fetchResult

  // instance methods
  -[HMDBackingStoreCacheFetchGroupInformation group]
  -[HMDBackingStoreCacheFetchGroupInformation setGroup:]
  -[HMDBackingStoreCacheFetchGroupInformation setFetchResult:]
  -[HMDBackingStoreCacheFetchGroupInformation .cxx_destruct]
  -[HMDBackingStoreCacheFetchGroupInformation fetchResult]
  -[HMDBackingStoreCacheFetchGroupInformation mainReturningError]
  -[HMDBackingStoreCacheFetchGroupInformation initWithGroup:fetchResult:]


HMDBackingStoreCacheFetchRecords : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *group
 @property  @? fetchResult
 @property  NSArray *recordNames
 @property  NSArray *uuids
 @property  NSArray *parentUuids
 @property  BOOL recursive

  // instance methods
  -[HMDBackingStoreCacheFetchRecords group]
  -[HMDBackingStoreCacheFetchRecords setGroup:]
  -[HMDBackingStoreCacheFetchRecords uuids]
  -[HMDBackingStoreCacheFetchRecords setFetchResult:]
  -[HMDBackingStoreCacheFetchRecords .cxx_destruct]
  -[HMDBackingStoreCacheFetchRecords setUuids:]
  -[HMDBackingStoreCacheFetchRecords fetchResult]
  -[HMDBackingStoreCacheFetchRecords recordNames]
  -[HMDBackingStoreCacheFetchRecords mainReturningError]
  -[HMDBackingStoreCacheFetchRecords setRecordNames:]
  -[HMDBackingStoreCacheFetchRecords parentUuids]
  -[HMDBackingStoreCacheFetchRecords recursive]
  -[HMDBackingStoreCacheFetchRecords initWithGroup:uuids:fetchResult:]
  -[HMDBackingStoreCacheFetchRecords initWithGroup:parentUuids:fetchResult:]
  -[HMDBackingStoreCacheFetchRecords initWithGroup:records:fetchResult:]
  -[HMDBackingStoreCacheFetchRecords setRecursive:]
  -[HMDBackingStoreCacheFetchRecords setParentUuids:]


HMDBackingStoreCacheFetchModelObjectResult : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  CKRecord *record
 @property  HMDBackingStoreModelObject *object

  // instance methods
  -[HMDBackingStoreCacheFetchModelObjectResult object]
  -[HMDBackingStoreCacheFetchModelObjectResult .cxx_destruct]
  -[HMDBackingStoreCacheFetchModelObjectResult record]
  -[HMDBackingStoreCacheFetchModelObjectResult initWithRecord:data:encoding:error:]


HMDBackingStoreCacheFetchModelObjects : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *group
 @property  @? fetchResult
 @property  NSArray *uuids
 @property  NSArray *names
 @property  NSUUID *parent
 @property  NSString *type

  // instance methods
  -[HMDBackingStoreCacheFetchModelObjects group]
  -[HMDBackingStoreCacheFetchModelObjects parent]
  -[HMDBackingStoreCacheFetchModelObjects setParent:]
  -[HMDBackingStoreCacheFetchModelObjects setGroup:]
  -[HMDBackingStoreCacheFetchModelObjects uuids]
  -[HMDBackingStoreCacheFetchModelObjects setFetchResult:]
  -[HMDBackingStoreCacheFetchModelObjects names]
  -[HMDBackingStoreCacheFetchModelObjects setType:]
  -[HMDBackingStoreCacheFetchModelObjects .cxx_destruct]
  -[HMDBackingStoreCacheFetchModelObjects type]
  -[HMDBackingStoreCacheFetchModelObjects setUuids:]
  -[HMDBackingStoreCacheFetchModelObjects setNames:]
  -[HMDBackingStoreCacheFetchModelObjects fetchResult]
  -[HMDBackingStoreCacheFetchModelObjects mainReturningError]
  -[HMDBackingStoreCacheFetchModelObjects initWithGroup:uuids:fetchResult:]
  -[HMDBackingStoreCacheFetchModelObjects initWithUUIDs:fetchResult:]
  -[HMDBackingStoreCacheFetchModelObjects initWithNames:fetchResult:]
  -[HMDBackingStoreCacheFetchModelObjects initWithGroup:names:fetchResult:]
  -[HMDBackingStoreCacheFetchModelObjects initWithParent:type:fetchResult:]
  -[HMDBackingStoreCacheFetchModelObjects initWithGroup:parent:type:fetchResult:]


HMDBackingStoreCacheFetchRecordMappingResult : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBackingStoreRecordMapping>
 @property  HMDBackingStoreCacheGroup *group
 @property  NSString *recordName
 @property  NSUUID *uuid
 @property  NSUUID *parentUuid
 @property  NSString *type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDBackingStoreCacheFetchRecordMappingResult group]
  -[HMDBackingStoreCacheFetchRecordMappingResult uuid]
  -[HMDBackingStoreCacheFetchRecordMappingResult .cxx_destruct]
  -[HMDBackingStoreCacheFetchRecordMappingResult type]
  -[HMDBackingStoreCacheFetchRecordMappingResult recordName]
  -[HMDBackingStoreCacheFetchRecordMappingResult parentUuid]
  -[HMDBackingStoreCacheFetchRecordMappingResult initWithGroup:recordName:uuid:parentUuid:type:]


HMDBackingStoreCacheFetchRecordMappings : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *group
 @property  @? fetchResult

  // instance methods
  -[HMDBackingStoreCacheFetchRecordMappings group]
  -[HMDBackingStoreCacheFetchRecordMappings setGroup:]
  -[HMDBackingStoreCacheFetchRecordMappings setFetchResult:]
  -[HMDBackingStoreCacheFetchRecordMappings .cxx_destruct]
  -[HMDBackingStoreCacheFetchRecordMappings fetchResult]
  -[HMDBackingStoreCacheFetchRecordMappings mainReturningError]
  -[HMDBackingStoreCacheFetchRecordMappings initWithGroup:fetchResult:]


HMDBackingStoreCacheFetchMigratedResult : HMDBackingStoreOperation
 @property  HMDBackingStoreCacheGroup *group
 @property  BOOL update
 @property  BOOL migration
 @property  @? fetchResult

  // instance methods
  -[HMDBackingStoreCacheFetchMigratedResult group]
  -[HMDBackingStoreCacheFetchMigratedResult update]
  -[HMDBackingStoreCacheFetchMigratedResult setGroup:]
  -[HMDBackingStoreCacheFetchMigratedResult setFetchResult:]
  -[HMDBackingStoreCacheFetchMigratedResult .cxx_destruct]
  -[HMDBackingStoreCacheFetchMigratedResult migration]
  -[HMDBackingStoreCacheFetchMigratedResult fetchResult]
  -[HMDBackingStoreCacheFetchMigratedResult mainReturningError]
  -[HMDBackingStoreCacheFetchMigratedResult initWithGroup:update:migration:fetchResult:]


HMObjectCacheHMDConfigurationMessagePolicy : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMObjectCacheHMDConfigurationMessagePolicy enabled]
  +[HMObjectCacheHMDConfigurationMessagePolicy cachedInstanceForConfigurationMessagePolicy:]


HMDConfigurationMessagePolicy : HMFMessagePolicy /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long operationTypes

  // class methods
  +[HMDConfigurationMessagePolicy policyWithOperationTypes:]

  // instance methods
  -[HMDConfigurationMessagePolicy copyWithZone:]
  -[HMDConfigurationMessagePolicy init]
  -[HMDConfigurationMessagePolicy isEqual:]
  -[HMDConfigurationMessagePolicy __initWithOperationTypes:]
  -[HMDConfigurationMessagePolicy operationTypes]


AWDHomeKitPresenceEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasPresenceEventType
 @property  int presenceEventType
 @property  BOOL hasPresenceEventGranularity
 @property  int presenceEventGranularity

  // instance methods
  -[AWDHomeKitPresenceEvent copyWithZone:]
  -[AWDHomeKitPresenceEvent readFrom:]
  -[AWDHomeKitPresenceEvent writeTo:]
  -[AWDHomeKitPresenceEvent isEqual:]
  -[AWDHomeKitPresenceEvent copyTo:]
  -[AWDHomeKitPresenceEvent dictionaryRepresentation]
  -[AWDHomeKitPresenceEvent mergeFrom:]
  -[AWDHomeKitPresenceEvent presenceEventType]
  -[AWDHomeKitPresenceEvent setPresenceEventType:]
  -[AWDHomeKitPresenceEvent setHasPresenceEventType:]
  -[AWDHomeKitPresenceEvent hasPresenceEventType]
  -[AWDHomeKitPresenceEvent presenceEventTypeAsString:]
  -[AWDHomeKitPresenceEvent StringAsPresenceEventType:]
  -[AWDHomeKitPresenceEvent presenceEventGranularity]
  -[AWDHomeKitPresenceEvent setPresenceEventGranularity:]
  -[AWDHomeKitPresenceEvent setHasPresenceEventGranularity:]
  -[AWDHomeKitPresenceEvent hasPresenceEventGranularity]
  -[AWDHomeKitPresenceEvent presenceEventGranularityAsString:]
  -[AWDHomeKitPresenceEvent StringAsPresenceEventGranularity:]


AWDHomeKitPresenceRegion : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNumUsers
 @property  unsigned int numUsers
 @property  BOOL hasNumPresenceAuthUsers
 @property  unsigned int numPresenceAuthUsers
 @property  BOOL hasNumPresenceRegionValidUsers
 @property  unsigned int numPresenceRegionValidUsers
 @property  BOOL hasPrimaryResident
 @property  BOOL primaryResident

  // instance methods
  -[AWDHomeKitPresenceRegion copyWithZone:]
  -[AWDHomeKitPresenceRegion timestamp]
  -[AWDHomeKitPresenceRegion setTimestamp:]
  -[AWDHomeKitPresenceRegion setHasTimestamp:]
  -[AWDHomeKitPresenceRegion readFrom:]
  -[AWDHomeKitPresenceRegion writeTo:]
  -[AWDHomeKitPresenceRegion isEqual:]
  -[AWDHomeKitPresenceRegion copyTo:]
  -[AWDHomeKitPresenceRegion dictionaryRepresentation]
  -[AWDHomeKitPresenceRegion mergeFrom:]
  -[AWDHomeKitPresenceRegion hasTimestamp]
  -[AWDHomeKitPresenceRegion setNumUsers:]
  -[AWDHomeKitPresenceRegion setNumPresenceAuthUsers:]
  -[AWDHomeKitPresenceRegion setNumPresenceRegionValidUsers:]
  -[AWDHomeKitPresenceRegion numPresenceAuthUsers]
  -[AWDHomeKitPresenceRegion numPresenceRegionValidUsers]
  -[AWDHomeKitPresenceRegion setPrimaryResident:]
  -[AWDHomeKitPresenceRegion setHasNumUsers:]
  -[AWDHomeKitPresenceRegion hasNumUsers]
  -[AWDHomeKitPresenceRegion setHasNumPresenceAuthUsers:]
  -[AWDHomeKitPresenceRegion hasNumPresenceAuthUsers]
  -[AWDHomeKitPresenceRegion setHasNumPresenceRegionValidUsers:]
  -[AWDHomeKitPresenceRegion hasNumPresenceRegionValidUsers]
  -[AWDHomeKitPresenceRegion setHasPrimaryResident:]
  -[AWDHomeKitPresenceRegion hasPrimaryResident]
  -[AWDHomeKitPresenceRegion numUsers]
  -[AWDHomeKitPresenceRegion primaryResident]


HMDAccountIdentifier : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject, NSCopying, NSSecureCoding>
 @property  _HMDAccountIdentifier *internal
 @property  BOOL authenticated
 @property  NSString *senderCorrelationIdentifier
 @property  NSUUID *identifier
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccountIdentifier supportsSecureCoding]
  +[HMDAccountIdentifier accountIdentifierForAccountHandle:]
  +[HMDAccountIdentifier accountIdentifierForAppleAccountContext:]
  +[HMDAccountIdentifier accountIdentifierForMessageContext:]

  // instance methods
  -[HMDAccountIdentifier isAuthenticated]
  -[HMDAccountIdentifier copyWithZone:]
  -[HMDAccountIdentifier init]
  -[HMDAccountIdentifier attributeDescriptions]
  -[HMDAccountIdentifier internal]
  -[HMDAccountIdentifier .cxx_destruct]
  -[HMDAccountIdentifier initWithInternal:]
  -[HMDAccountIdentifier encodeWithCoder:]
  -[HMDAccountIdentifier identifier]
  -[HMDAccountIdentifier senderCorrelationIdentifier]
  -[HMDAccountIdentifier shortDescription]
  -[HMDAccountIdentifier isEqual:]
  -[HMDAccountIdentifier initWithCoder:]


_HMDAccountIdentifier : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  BOOL authenticated
 @property  NSString *senderCorrelationIdentifier

  // class methods
  +[_HMDAccountIdentifier supportsSecureCoding]

  // instance methods
  -[_HMDAccountIdentifier isAuthenticated]
  -[_HMDAccountIdentifier copyWithZone:]
  -[_HMDAccountIdentifier init]
  -[_HMDAccountIdentifier .cxx_destruct]
  -[_HMDAccountIdentifier initWithIdentifier:]
  -[_HMDAccountIdentifier encodeWithCoder:]
  -[_HMDAccountIdentifier identifier]
  -[_HMDAccountIdentifier senderCorrelationIdentifier]
  -[_HMDAccountIdentifier isEqual:]
  -[_HMDAccountIdentifier initWithCoder:]


_HMDAccountHandleIdentifer : _HMDAccountIdentifier
 @property  HMDAccountHandle *accountHandle

  // class methods
  +[_HMDAccountHandleIdentifer supportsSecureCoding]

  // instance methods
  -[_HMDAccountHandleIdentifer .cxx_destruct]
  -[_HMDAccountHandleIdentifer initWithIdentifier:]
  -[_HMDAccountHandleIdentifer encodeWithCoder:]
  -[_HMDAccountHandleIdentifer identifier]
  -[_HMDAccountHandleIdentifer isEqual:]
  -[_HMDAccountHandleIdentifer initWithCoder:]
  -[_HMDAccountHandleIdentifer accountHandle]
  -[_HMDAccountHandleIdentifer initWithAccountHandle:]


_HMDAppleAccountIdentifier : _HMDAccountIdentifier
 @property  NSString *identifierString

  // class methods
  +[_HMDAppleAccountIdentifier supportsSecureCoding]
  +[_HMDAppleAccountIdentifier namespace]

  // instance methods
  -[_HMDAppleAccountIdentifier isAuthenticated]
  -[_HMDAppleAccountIdentifier .cxx_destruct]
  -[_HMDAppleAccountIdentifier identifierString]
  -[_HMDAppleAccountIdentifier initWithIdentifier:]
  -[_HMDAppleAccountIdentifier encodeWithCoder:]
  -[_HMDAppleAccountIdentifier isEqual:]
  -[_HMDAppleAccountIdentifier initWithCoder:]
  -[_HMDAppleAccountIdentifier initWithIdentifierString:]


_HMDIDSAccountIdentifier : _HMDAccountIdentifier
 @property  NSString *identifierString

  // class methods
  +[_HMDIDSAccountIdentifier supportsSecureCoding]
  +[_HMDIDSAccountIdentifier namespace]

  // instance methods
  -[_HMDIDSAccountIdentifier isAuthenticated]
  -[_HMDIDSAccountIdentifier .cxx_destruct]
  -[_HMDIDSAccountIdentifier identifierString]
  -[_HMDIDSAccountIdentifier initWithIdentifier:]
  -[_HMDIDSAccountIdentifier encodeWithCoder:]
  -[_HMDIDSAccountIdentifier senderCorrelationIdentifier]
  -[_HMDIDSAccountIdentifier isEqual:]
  -[_HMDIDSAccountIdentifier initWithCoder:]
  -[_HMDIDSAccountIdentifier initWithIdentifierString:]


HMDStreamDataChunkAssembler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *type
 @property  NSMutableData *data
 @property  NSNumber *currentSequenceNumber
 @property  HMDStreamData *assembledData
 @property  HMDStreamDataSequenceNumber *dataSequenceNumber

  // instance methods
  -[HMDStreamDataChunkAssembler attributeDescriptions]
  -[HMDStreamDataChunkAssembler .cxx_destruct]
  -[HMDStreamDataChunkAssembler data]
  -[HMDStreamDataChunkAssembler type]
  -[HMDStreamDataChunkAssembler dataSequenceNumber]
  -[HMDStreamDataChunkAssembler addDataChunk:error:]
  -[HMDStreamDataChunkAssembler initWithDataSequenceNumber:initialStreamDataChunk:]
  -[HMDStreamDataChunkAssembler assembledData]
  -[HMDStreamDataChunkAssembler createAssembledDataIfNecessaryForDataChunk:]
  -[HMDStreamDataChunkAssembler currentSequenceNumber]
  -[HMDStreamDataChunkAssembler setCurrentSequenceNumber:]
  -[HMDStreamDataChunkAssembler setAssembledData:]


AWDHomeKitAccessoryReadWrite : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  BOOL hasErrorCode
 @property  int errorCode
 @property  BOOL hasIsWrite
 @property  BOOL isWrite
 @property  BOOL hasIsRemote
 @property  BOOL isRemote
 @property  NSMutableArray *characteristics
 @property  BOOL hasTransportType
 @property  int transportType
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasTransaction
 @property  NSString *transaction
 @property  BOOL hasIsTimedWrite
 @property  BOOL isTimedWrite
 @property  BOOL hasTransportProtocolVersion
 @property  NSString *transportProtocolVersion
 @property  BOOL hasSource
 @property  int source
 @property  BOOL hasCertified
 @property  int certified
 @property  BOOL hasIsCached
 @property  BOOL isCached
 @property  BOOL hasUnderlyingErrorDomain
 @property  NSString *underlyingErrorDomain
 @property  BOOL hasUnderlyingErrorCode
 @property  unsigned int underlyingErrorCode
 @property  BOOL hasPrimaryServiceType
 @property  NSString *primaryServiceType
 @property  BOOL hasIsResidentAvailable
 @property  BOOL isResidentAvailable
 @property  BOOL hasIsRemoteAccessAllowed
 @property  BOOL isRemoteAccessAllowed
 @property  BOOL hasIsRemotelyReachable
 @property  BOOL isRemotelyReachable
 @property  BOOL hasConsecutiveFailureCount
 @property  unsigned int consecutiveFailureCount
 @property  BOOL hasTimeElapsedSinceFirstFailure
 @property  unsigned int timeElapsedSinceFirstFailure
 @property  BOOL hasIsNoeAccessory
 @property  BOOL isNoeAccessory
 @property  BOOL hasIsSentOverNoe
 @property  BOOL isSentOverNoe
 @property  BOOL hasAppIdentifier
 @property  NSString *appIdentifier

  // class methods
  +[AWDHomeKitAccessoryReadWrite characteristicsType]

  // instance methods
  -[AWDHomeKitAccessoryReadWrite setErrorCode:]
  -[AWDHomeKitAccessoryReadWrite copyWithZone:]
  -[AWDHomeKitAccessoryReadWrite hasErrorCode]
  -[AWDHomeKitAccessoryReadWrite setAppIdentifier:]
  -[AWDHomeKitAccessoryReadWrite appIdentifier]
  -[AWDHomeKitAccessoryReadWrite hasAppIdentifier]
  -[AWDHomeKitAccessoryReadWrite transportTypeAsString:]
  -[AWDHomeKitAccessoryReadWrite sourceAsString:]
  -[AWDHomeKitAccessoryReadWrite setTransaction:]
  -[AWDHomeKitAccessoryReadWrite errorCode]
  -[AWDHomeKitAccessoryReadWrite setHasErrorCode:]
  -[AWDHomeKitAccessoryReadWrite setSource:]
  -[AWDHomeKitAccessoryReadWrite StringAsSource:]
  -[AWDHomeKitAccessoryReadWrite isCached]
  -[AWDHomeKitAccessoryReadWrite transaction]
  -[AWDHomeKitAccessoryReadWrite hasSource]
  -[AWDHomeKitAccessoryReadWrite source]
  -[AWDHomeKitAccessoryReadWrite isRemote]
  -[AWDHomeKitAccessoryReadWrite setUnderlyingErrorDomain:]
  -[AWDHomeKitAccessoryReadWrite setHasSource:]
  -[AWDHomeKitAccessoryReadWrite addCharacteristics:]
  -[AWDHomeKitAccessoryReadWrite characteristicsCount]
  -[AWDHomeKitAccessoryReadWrite clearCharacteristics]
  -[AWDHomeKitAccessoryReadWrite characteristicsAtIndex:]
  -[AWDHomeKitAccessoryReadWrite .cxx_destruct]
  -[AWDHomeKitAccessoryReadWrite characteristics]
  -[AWDHomeKitAccessoryReadWrite setCharacteristics:]
  -[AWDHomeKitAccessoryReadWrite setHasTransportType:]
  -[AWDHomeKitAccessoryReadWrite timestamp]
  -[AWDHomeKitAccessoryReadWrite setTimestamp:]
  -[AWDHomeKitAccessoryReadWrite transportType]
  -[AWDHomeKitAccessoryReadWrite setHasDuration:]
  -[AWDHomeKitAccessoryReadWrite setHasTimestamp:]
  -[AWDHomeKitAccessoryReadWrite readFrom:]
  -[AWDHomeKitAccessoryReadWrite writeTo:]
  -[AWDHomeKitAccessoryReadWrite isWrite]
  -[AWDHomeKitAccessoryReadWrite isEqual:]
  -[AWDHomeKitAccessoryReadWrite StringAsTransportType:]
  -[AWDHomeKitAccessoryReadWrite setDuration:]
  -[AWDHomeKitAccessoryReadWrite hasTransportType]
  -[AWDHomeKitAccessoryReadWrite primaryServiceType]
  -[AWDHomeKitAccessoryReadWrite copyTo:]
  -[AWDHomeKitAccessoryReadWrite dictionaryRepresentation]
  -[AWDHomeKitAccessoryReadWrite hasUnderlyingErrorDomain]
  -[AWDHomeKitAccessoryReadWrite setUnderlyingErrorCode:]
  -[AWDHomeKitAccessoryReadWrite setHasUnderlyingErrorCode:]
  -[AWDHomeKitAccessoryReadWrite hasUnderlyingErrorCode]
  -[AWDHomeKitAccessoryReadWrite underlyingErrorDomain]
  -[AWDHomeKitAccessoryReadWrite underlyingErrorCode]
  -[AWDHomeKitAccessoryReadWrite hasDuration]
  -[AWDHomeKitAccessoryReadWrite mergeFrom:]
  -[AWDHomeKitAccessoryReadWrite isRemoteAccessAllowed]
  -[AWDHomeKitAccessoryReadWrite hasTimestamp]
  -[AWDHomeKitAccessoryReadWrite setTransportType:]
  -[AWDHomeKitAccessoryReadWrite setIsCached:]
  -[AWDHomeKitAccessoryReadWrite duration]
  -[AWDHomeKitAccessoryReadWrite isResidentAvailable]
  -[AWDHomeKitAccessoryReadWrite vendorDetails]
  -[AWDHomeKitAccessoryReadWrite setVendorDetails:]
  -[AWDHomeKitAccessoryReadWrite hasVendorDetails]
  -[AWDHomeKitAccessoryReadWrite setTransportProtocolVersion:]
  -[AWDHomeKitAccessoryReadWrite setPrimaryServiceType:]
  -[AWDHomeKitAccessoryReadWrite setIsWrite:]
  -[AWDHomeKitAccessoryReadWrite setHasIsWrite:]
  -[AWDHomeKitAccessoryReadWrite hasIsWrite]
  -[AWDHomeKitAccessoryReadWrite setIsRemote:]
  -[AWDHomeKitAccessoryReadWrite setHasIsRemote:]
  -[AWDHomeKitAccessoryReadWrite hasIsRemote]
  -[AWDHomeKitAccessoryReadWrite hasTransaction]
  -[AWDHomeKitAccessoryReadWrite setIsTimedWrite:]
  -[AWDHomeKitAccessoryReadWrite setHasIsTimedWrite:]
  -[AWDHomeKitAccessoryReadWrite hasIsTimedWrite]
  -[AWDHomeKitAccessoryReadWrite hasTransportProtocolVersion]
  -[AWDHomeKitAccessoryReadWrite certified]
  -[AWDHomeKitAccessoryReadWrite setCertified:]
  -[AWDHomeKitAccessoryReadWrite setHasCertified:]
  -[AWDHomeKitAccessoryReadWrite hasCertified]
  -[AWDHomeKitAccessoryReadWrite certifiedAsString:]
  -[AWDHomeKitAccessoryReadWrite StringAsCertified:]
  -[AWDHomeKitAccessoryReadWrite setHasIsCached:]
  -[AWDHomeKitAccessoryReadWrite hasIsCached]
  -[AWDHomeKitAccessoryReadWrite hasPrimaryServiceType]
  -[AWDHomeKitAccessoryReadWrite setIsResidentAvailable:]
  -[AWDHomeKitAccessoryReadWrite setHasIsResidentAvailable:]
  -[AWDHomeKitAccessoryReadWrite hasIsResidentAvailable]
  -[AWDHomeKitAccessoryReadWrite setIsRemoteAccessAllowed:]
  -[AWDHomeKitAccessoryReadWrite setHasIsRemoteAccessAllowed:]
  -[AWDHomeKitAccessoryReadWrite hasIsRemoteAccessAllowed]
  -[AWDHomeKitAccessoryReadWrite setIsRemotelyReachable:]
  -[AWDHomeKitAccessoryReadWrite setHasIsRemotelyReachable:]
  -[AWDHomeKitAccessoryReadWrite hasIsRemotelyReachable]
  -[AWDHomeKitAccessoryReadWrite setConsecutiveFailureCount:]
  -[AWDHomeKitAccessoryReadWrite setHasConsecutiveFailureCount:]
  -[AWDHomeKitAccessoryReadWrite hasConsecutiveFailureCount]
  -[AWDHomeKitAccessoryReadWrite setTimeElapsedSinceFirstFailure:]
  -[AWDHomeKitAccessoryReadWrite setHasTimeElapsedSinceFirstFailure:]
  -[AWDHomeKitAccessoryReadWrite hasTimeElapsedSinceFirstFailure]
  -[AWDHomeKitAccessoryReadWrite setIsNoeAccessory:]
  -[AWDHomeKitAccessoryReadWrite setHasIsNoeAccessory:]
  -[AWDHomeKitAccessoryReadWrite hasIsNoeAccessory]
  -[AWDHomeKitAccessoryReadWrite setIsSentOverNoe:]
  -[AWDHomeKitAccessoryReadWrite setHasIsSentOverNoe:]
  -[AWDHomeKitAccessoryReadWrite hasIsSentOverNoe]
  -[AWDHomeKitAccessoryReadWrite isTimedWrite]
  -[AWDHomeKitAccessoryReadWrite transportProtocolVersion]
  -[AWDHomeKitAccessoryReadWrite isRemotelyReachable]
  -[AWDHomeKitAccessoryReadWrite consecutiveFailureCount]
  -[AWDHomeKitAccessoryReadWrite timeElapsedSinceFirstFailure]
  -[AWDHomeKitAccessoryReadWrite isNoeAccessory]
  -[AWDHomeKitAccessoryReadWrite isSentOverNoe]


HMDPendingBulkSendListener : NSObject /usr/lib/libc++.1.dylib
 @property  <HMDDataStreamBulkSendListener> *listener
 @property  NSString *fileType

  // instance methods
  -[HMDPendingBulkSendListener listener]
  -[HMDPendingBulkSendListener setListener:]
  -[HMDPendingBulkSendListener .cxx_destruct]
  -[HMDPendingBulkSendListener fileType]
  -[HMDPendingBulkSendListener setFileType:]
  -[HMDPendingBulkSendListener initWithListener:fileType:]


HMDDataStreamSetupOperation : NSObject /usr/lib/libc++.1.dylib
 @property  HMDHAPAccessory *accessory
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *logIdentifier
 @property  HMDService *transferManagementService
 @property  NSMutableSet *pendingBulkSendListeners
 @property  <HMDDataStreamSetupOperationDelegate> *delegate

  // class methods
  +[HMDDataStreamSetupOperation tcpSetupOperationWithAccessory:queue:logIdentifier:transferManagementService:]
  +[HMDDataStreamSetupOperation hapSetupOperationWithAccessory:queue:logIdentifier:transferManagementService:maxControllerTransportMTU:setupOperationReadRequired:]

  // instance methods
  -[HMDDataStreamSetupOperation logIdentifier]
  -[HMDDataStreamSetupOperation startSetup]
  -[HMDDataStreamSetupOperation dealloc]
  -[HMDDataStreamSetupOperation .cxx_destruct]
  -[HMDDataStreamSetupOperation accessory]
  -[HMDDataStreamSetupOperation queue]
  -[HMDDataStreamSetupOperation setDelegate:]
  -[HMDDataStreamSetupOperation delegate]
  -[HMDDataStreamSetupOperation initWithAccessory:queue:logIdentifier:transferManagementService:]
  -[HMDDataStreamSetupOperation _clearPendingBulkSendListeners]
  -[HMDDataStreamSetupOperation postDidFailWithError:]
  -[HMDDataStreamSetupOperation processTransportSetupResponse:]
  -[HMDDataStreamSetupOperation pendingBulkSendListeners]
  -[HMDDataStreamSetupOperation postDidSucceedWithTransport:sessionEncryption:]
  -[HMDDataStreamSetupOperation continueStreamSetupWithResponse:]
  -[HMDDataStreamSetupOperation cancelSetup]
  -[HMDDataStreamSetupOperation addBulkSendListener:fileType:]
  -[HMDDataStreamSetupOperation removeBulkSendListener:]
  -[HMDDataStreamSetupOperation movePendingBulkSendListenersToBulkSendProtocol:]
  -[HMDDataStreamSetupOperation transferManagementService]


HMDDataStreamTCPSetupOperation : HMDDataStreamSetupOperation
 @property  HMFNetAddress *remoteNetAddress
 @property  NSData *controllerKeySalt
 @property  NSData *accessoryKeySalt
 @property  long long remoteTcpPort
 @property  HAPSecuritySessionEncryption *sessionEncryption

  // class methods
  +[HMDDataStreamTCPSetupOperation logCategory]

  // instance methods
  -[HMDDataStreamTCPSetupOperation startSetup]
  -[HMDDataStreamTCPSetupOperation .cxx_destruct]
  -[HMDDataStreamTCPSetupOperation _isComplete]
  -[HMDDataStreamTCPSetupOperation initWithAccessory:queue:logIdentifier:transferManagementService:]
  -[HMDDataStreamTCPSetupOperation processTransportSetupResponse:]
  -[HMDDataStreamTCPSetupOperation remoteNetAddress]
  -[HMDDataStreamTCPSetupOperation remoteTcpPort]
  -[HMDDataStreamTCPSetupOperation sessionEncryption]
  -[HMDDataStreamTCPSetupOperation controllerKeySalt]
  -[HMDDataStreamTCPSetupOperation accessoryKeySalt]
  -[HMDDataStreamTCPSetupOperation setRemoteNetAddress:]
  -[HMDDataStreamTCPSetupOperation _finishStreamTransport]
  -[HMDDataStreamTCPSetupOperation setRemoteTcpPort:]
  -[HMDDataStreamTCPSetupOperation setAccessoryKeySalt:]
  -[HMDDataStreamTCPSetupOperation _generateStreamKeys]
  -[HMDDataStreamTCPSetupOperation _fullKeySalt]
  -[HMDDataStreamTCPSetupOperation setSessionEncryption:]


HMDDataStreamHAPSetupOperation : HMDDataStreamSetupOperation <HMDDataStreamSetupOperationMTU>
 @property  unsigned long maxControllerTransportMTU
 @property  long long sessionIdentifier

  // class methods
  +[HMDDataStreamHAPSetupOperation logCategory]

  // instance methods
  -[HMDDataStreamHAPSetupOperation startSetup]
  -[HMDDataStreamHAPSetupOperation sessionIdentifier]
  -[HMDDataStreamHAPSetupOperation setSessionIdentifier:]
  -[HMDDataStreamHAPSetupOperation initWithAccessory:queue:logIdentifier:transferManagementService:maxControllerTransportMTU:setupOperationReadRequired:]
  -[HMDDataStreamHAPSetupOperation processTransportSetupResponse:]
  -[HMDDataStreamHAPSetupOperation _readRequiredTransportCharacteristics]
  -[HMDDataStreamHAPSetupOperation maxControllerTransportMTU]
  -[HMDDataStreamHAPSetupOperation setMaxControllerTransportMTU:]


HMDHAPMetadataAssistantCharacteristic : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *name
 @property  NSString *readHAPCharacteristicName
 @property  NSString *writeHAPCharacteristicName
 @property  NSString *format
 @property  BOOL supportsLocalization
 @property  NSDictionary *values
 @property  NSDictionary *outValues

  // instance methods
  -[HMDHAPMetadataAssistantCharacteristic setFormat:]
  -[HMDHAPMetadataAssistantCharacteristic format]
  -[HMDHAPMetadataAssistantCharacteristic setValues:]
  -[HMDHAPMetadataAssistantCharacteristic init]
  -[HMDHAPMetadataAssistantCharacteristic values]
  -[HMDHAPMetadataAssistantCharacteristic .cxx_destruct]
  -[HMDHAPMetadataAssistantCharacteristic name]
  -[HMDHAPMetadataAssistantCharacteristic setName:]
  -[HMDHAPMetadataAssistantCharacteristic supportsLocalization]
  -[HMDHAPMetadataAssistantCharacteristic readHAPCharacteristicName]
  -[HMDHAPMetadataAssistantCharacteristic writeHAPCharacteristicName]
  -[HMDHAPMetadataAssistantCharacteristic initWithName:readHAPCharacteristic:writeHAPCharacteristic:format:]
  -[HMDHAPMetadataAssistantCharacteristic setReadHAPCharacteristicName:]
  -[HMDHAPMetadataAssistantCharacteristic setWriteHAPCharacteristicName:]
  -[HMDHAPMetadataAssistantCharacteristic setSupportsLocalization:]
  -[HMDHAPMetadataAssistantCharacteristic outValues]
  -[HMDHAPMetadataAssistantCharacteristic setOutValues:]


HMDHAPMetadataCategory : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSNumber *identifier
 @property  NSString *uuidStr
 @property  NSString *name
 @property  NSString *catDescription

  // instance methods
  -[HMDHAPMetadataCategory uuidStr]
  -[HMDHAPMetadataCategory init]
  -[HMDHAPMetadataCategory .cxx_destruct]
  -[HMDHAPMetadataCategory name]
  -[HMDHAPMetadataCategory setIdentifier:]
  -[HMDHAPMetadataCategory identifier]
  -[HMDHAPMetadataCategory setUuidStr:]
  -[HMDHAPMetadataCategory setName:]
  -[HMDHAPMetadataCategory catDescription]
  -[HMDHAPMetadataCategory initWithIdentifier:uuid:name:description:]
  -[HMDHAPMetadataCategory setCatDescription:]


HMDHAPMetadata : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMProtoBufEncode>
 @property  HAPMetadata *hapMetadata
 @property  NSNumber *version
 @property  NSNumber *schemaVersion
 @property  BOOL incomplete
 @property  NSSet *hmRequiresDeviceUnlockTuples
 @property  NSDictionary *hmAllowableSecuringWrites
 @property  NSDictionary *hmPowerOnWriteFilter
 @property  NSDictionary *hmAccessoryCategories
 @property  NSSet *hmBlacklistedServices
 @property  NSSet *hmBlacklistedCharacteristics
 @property  NSSet *hmBlacklistedServicesFromApp
 @property  NSSet *hmBlacklistedCharacteristicsFromApp
 @property  NSSet *hmNotificationAutoEnabledTuples
 @property  NSSet *hmBulletinBoardEnabledTuples
 @property  NSSet *hmCoalesceNotificationsTuples
 @property  NSDictionary *assistantServiceNameHAPTypeMap
 @property  NSDictionary *assistantServiceHAPTypeNameMap
 @property  NSDictionary *assistantCharacteristics
 @property  NSDictionary *assistantChrHAPTypeNameMap
 @property  NSDictionary *assistantUnits
 @property  NSDictionary *rawPlist
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHAPMetadata getBuiltinInstance]
  +[HMDHAPMetadata setSharedInstance:]
  +[HMDHAPMetadata initWithDictionary:error:]
  +[HMDHAPMetadata initWithURL:error:]
  +[HMDHAPMetadata getSharedInstance]
  +[HMDHAPMetadata prepareMetadata]
  +[HMDHAPMetadata dataFromMetadataDictionaryWithKey:]
  +[HMDHAPMetadata isServiceType:compatibleWithAccessoryCategoryType:]
  +[HMDHAPMetadata legacyV3DataForIDS]
  +[HMDHAPMetadata legacyV3DataForCloud]
  +[HMDHAPMetadata shouldUploadToCloudAfterHomedReady]
  +[HMDHAPMetadata resetShouldUploadToCloudAfterHomedReady]
  +[HMDHAPMetadata isHomedVersionSupported:]

  // instance methods
  -[HMDHAPMetadata rawPlist]
  -[HMDHAPMetadata .cxx_destruct]
  -[HMDHAPMetadata setVersion:]
  -[HMDHAPMetadata schemaVersion]
  -[HMDHAPMetadata setSchemaVersion:]
  -[HMDHAPMetadata categoryForType:]
  -[HMDHAPMetadata categoryForIdentifier:]
  -[HMDHAPMetadata version]
  -[HMDHAPMetadata shouldNotCacheCharacteristicOfType:]
  -[HMDHAPMetadata categoryForOther]
  -[HMDHAPMetadata shouldFilterEnableNotificationsForCharacteristicType:serviceType:]
  -[HMDHAPMetadata shouldAutoEnableNotificationForCharacteristic:ofService:]
  -[HMDHAPMetadata shouldEnableHomeNotificationForCharacteristicType:serviceType:]
  -[HMDHAPMetadata requiresDeviceUnlock:forService:]
  -[HMDHAPMetadata shouldFilterChangeNotificationsForCharacteristicType:serviceType:]
  -[HMDHAPMetadata shouldFilterCharacteristicOfTypeFromApp:]
  -[HMDHAPMetadata shouldFilterServiceOfTypeFromApp:]
  -[HMDHAPMetadata allowsSecuringWriteFor:withValue:]
  -[HMDHAPMetadata shouldRefreshValueForCharacteristicWithType:serviceType:]
  -[HMDHAPMetadata shouldFilterCharacteristicOfType:]
  -[HMDHAPMetadata shouldFilterServiceOfType:]
  -[HMDHAPMetadata mapToAssistantCharacteristicName:]
  -[HMDHAPMetadata mapReadCharacteristicFromAssistantName:]
  -[HMDHAPMetadata mapWriteCharacteristicFromAssistantName:]
  -[HMDHAPMetadata getCharacteristicTypeAlias:]
  -[HMDHAPMetadata mapFromAssistantUnitName:]
  -[HMDHAPMetadata supportsLocalization:]
  -[HMDHAPMetadata mapFromAssistantCharacteristicValue:name:]
  -[HMDHAPMetadata mapToAssistantCharacteristicValue:name:getActionType:]
  -[HMDHAPMetadata getAliasedCharacteristicTypes:]
  -[HMDHAPMetadata mapFromAssistantServiceName:]
  -[HMDHAPMetadata getAliasedServiceType:]
  -[HMDHAPMetadata mapCharacteristicValueType:]
  -[HMDHAPMetadata getStatusCharacteristicTypes:forServiceType:]
  -[HMDHAPMetadata shouldCoalesceCharacteristicNotifications:forService:]
  -[HMDHAPMetadata initWithDictionary:hapMetadata:error:]
  -[HMDHAPMetadata hapMetadata]
  -[HMDHAPMetadata parseAndSetRawPlist:]
  -[HMDHAPMetadata protoBufObjectWithEncodingOption:]
  -[HMDHAPMetadata hmAllowableSecuringWrites]
  -[HMDHAPMetadata hmPowerOnWriteFilter]
  -[HMDHAPMetadata hmRequiresDeviceUnlockTuples]
  -[HMDHAPMetadata checkTupleExistsInSet:forChrType:svcType:]
  -[HMDHAPMetadata hmCoalesceNotificationsTuples]
  -[HMDHAPMetadata hmBlacklistedServices]
  -[HMDHAPMetadata hmBlacklistedCharacteristics]
  -[HMDHAPMetadata hmBlacklistedServicesFromApp]
  -[HMDHAPMetadata hmBlacklistedCharacteristicsFromApp]
  -[HMDHAPMetadata hmNotificationAutoEnabledTuples]
  -[HMDHAPMetadata hmAccessoryCategories]
  -[HMDHAPMetadata audioAccessoryCategory]
  -[HMDHAPMetadata assistantCharacteristics]
  -[HMDHAPMetadata aliasedHAPServiceTypes]
  -[HMDHAPMetadata assistantServiceHAPTypeNameMap]
  -[HMDHAPMetadata assistantServiceNameHAPTypeMap]
  -[HMDHAPMetadata aliasedHAPCharacteristicTypes]
  -[HMDHAPMetadata assistantChrHAPTypeNameMap]
  -[HMDHAPMetadata statusHAPCharacteristicTypesForServiceType]
  -[HMDHAPMetadata assistantUnits]
  -[HMDHAPMetadata parseAndSetHMMetadataWithHMPlist:]
  -[HMDHAPMetadata parseAndSetAssistantMetadataWithAssistantPlist:]
  -[HMDHAPMetadata parseMetadataTupleSetFromPlist:]
  -[HMDHAPMetadata setHmRequiresDeviceUnlockTuples:]
  -[HMDHAPMetadata parseAndSetAllowableSecuringWrites:]
  -[HMDHAPMetadata parseAndSetPowerOnWriteFilter:]
  -[HMDHAPMetadata parseAndSetHMCategories:]
  -[HMDHAPMetadata parseServiceArray:]
  -[HMDHAPMetadata setHmBlacklistedServices:]
  -[HMDHAPMetadata parseCharacteristicArray:]
  -[HMDHAPMetadata setHmBlacklistedCharacteristics:]
  -[HMDHAPMetadata setHmBlacklistedServicesFromApp:]
  -[HMDHAPMetadata setHmBlacklistedCharacteristicsFromApp:]
  -[HMDHAPMetadata setHmNotificationAutoEnabledTuples:]
  -[HMDHAPMetadata setHmBulletinBoardEnabledTuples:]
  -[HMDHAPMetadata setHmCoalesceNotificationsTuples:]
  -[HMDHAPMetadata hmBulletinBoardEnabledTuples]
  -[HMDHAPMetadata parseAndSetAssistantServices:]
  -[HMDHAPMetadata parseAndSetAssistantCharacteristics:]
  -[HMDHAPMetadata parseAndSetAssistantUnits:]
  -[HMDHAPMetadata setHmAllowableSecuringWrites:]
  -[HMDHAPMetadata serviceTypeFromName:]
  -[HMDHAPMetadata characteristicTypeFromName:]
  -[HMDHAPMetadata setHmPowerOnWriteFilter:]
  -[HMDHAPMetadata setHmAccessoryCategories:]
  -[HMDHAPMetadata setAssistantServiceNameHAPTypeMap:]
  -[HMDHAPMetadata setAssistantServiceHAPTypeNameMap:]
  -[HMDHAPMetadata setAssistantCharacteristics:]
  -[HMDHAPMetadata setAssistantChrHAPTypeNameMap:]
  -[HMDHAPMetadata setAssistantUnits:]
  -[HMDHAPMetadata xpcData:]
  -[HMDHAPMetadata characteristicNameFromType:]
  -[HMDHAPMetadata serviceNameFromType:]
  -[HMDHAPMetadata isStandardCharacteristicType:]
  -[HMDHAPMetadata isStandardServiceType:]
  -[HMDHAPMetadata supportsAuthorizationData:forService:]
  -[HMDHAPMetadata validateAssociatedServiceType:forService:]
  -[HMDHAPMetadata descriptionForServiceType:]
  -[HMDHAPMetadata descriptionForCharacteristicType:]
  -[HMDHAPMetadata shouldAllowWriteToWakeSuspendedAccessoryForService:characteristicType:value:]
  -[HMDHAPMetadata requiresTimedWrite:forService:]
  -[HMDHAPMetadata isTargetCharacteristic:]
  -[HMDHAPMetadata generateNotificationOnConfigurationForCharacteristicType:serviceType:]
  -[HMDHAPMetadata isSecondsDownCounterCharacteristicType:]
  -[HMDHAPMetadata shouldHomeAppShowTileForServiceType:]
  -[HMDHAPMetadata categoryTypeFromName:]
  -[HMDHAPMetadata serviceSubtypeForValue:forServiceType:]
  -[HMDHAPMetadata mapToAssistantServiceName:]
  -[HMDHAPMetadata mapToAssistantServiceSubtypeName:]
  -[HMDHAPMetadata mapToAssistantServiceSubtypeName:accessoryCategory:]
  -[HMDHAPMetadata getServiceTypeAlias:]
  -[HMDHAPMetadata characteristicValueUnit:]
  -[HMDHAPMetadata mapToAssistantUnitName:]
  -[HMDHAPMetadata incomplete]
  -[HMDHAPMetadata setIncomplete:]
  -[HMDHAPMetadata setHapMetadata:]


HMDHAPMetadataModel : HMDBackingStoreModelObject
 @property  NSNumber *metadataVersion
 @property  NSNumber *schemaVersion
 @property  NSDictionary *rawPlist
 @property  NSData *legacyIDSData
 @property  NSData *legacyCloudData

  // class methods
  +[HMDHAPMetadataModel properties]
  +[HMDHAPMetadataModel allowedTypes]
  +[HMDHAPMetadataModel metadataModelObjectUUID]
  +[HMDHAPMetadataModel modelWithDictionary:]

  // instance methods
  -[HMDHAPMetadataModel metadataDictionary]


HMDCameraIDSSessionInitiator : HMDCameraIDSSessionHandler <AVCPacketRelayDelegate, IDSServiceDelegate, IDSSessionDelegate, HMDCameraRemoteStreamSenderProtocol>
 @property  <HMDCameraIDSSessionInitiatorDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  HMDDevice *device
 @property  HMDCameraNetworkConfig *localNetworkConfig
 @property  AVCPacketRelay *packetRelay
 @property  HMFOSTransaction *packetRelayTransaction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSNumber *mtu

  // class methods
  +[HMDCameraIDSSessionInitiator logCategory]

  // instance methods
  -[HMDCameraIDSSessionInitiator device]
  -[HMDCameraIDSSessionInitiator logIdentifier]
  -[HMDCameraIDSSessionInitiator delegateQueue]
  -[HMDCameraIDSSessionInitiator dealloc]
  -[HMDCameraIDSSessionInitiator .cxx_destruct]
  -[HMDCameraIDSSessionInitiator session:receivedInvitationAcceptFromID:]
  -[HMDCameraIDSSessionInitiator session:receivedInvitationDeclineFromID:]
  -[HMDCameraIDSSessionInitiator session:receivedInvitationCancelFromID:]
  -[HMDCameraIDSSessionInitiator mtu]
  -[HMDCameraIDSSessionInitiator sessionStarted:]
  -[HMDCameraIDSSessionInitiator sessionEnded:withReason:error:]
  -[HMDCameraIDSSessionInitiator delegate]
  -[HMDCameraIDSSessionInitiator packetRelay:didStart:error:]
  -[HMDCameraIDSSessionInitiator packetRelay:didStop:error:]
  -[HMDCameraIDSSessionInitiator openRelaySession]
  -[HMDCameraIDSSessionInitiator startPacketRelayWithVideoSocket:videoNetworkConfig:cameraVideoSSRC:audioSocket:audioNetworkConfig:cameraAudioSSRC:]
  -[HMDCameraIDSSessionInitiator localNetworkConfig]
  -[HMDCameraIDSSessionInitiator packetRelay]
  -[HMDCameraIDSSessionInitiator setPacketRelay:]
  -[HMDCameraIDSSessionInitiator _sendInvitation]
  -[HMDCameraIDSSessionInitiator _callSessionEnded:]
  -[HMDCameraIDSSessionInitiator _startPacketRelayWithVideoSocket:videoNetworkConfig:cameraVideoSSRC:audioSocket:audioNetworkConfig:cameraAudioSSRC:]
  -[HMDCameraIDSSessionInitiator setPacketRelayTransaction:]
  -[HMDCameraIDSSessionInitiator _callSessionStarted:]
  -[HMDCameraIDSSessionInitiator initWithSessionID:workQueue:device:localNetworkConfig:delegate:delegateQueue:]
  -[HMDCameraIDSSessionInitiator packetRelayTransaction]


HMDSettingsMessageHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDSettingsMessageHandlerProtocol, HMFLogging>
 @property  NSMapTable *settingMessageMap
 @property  NSMapTable *settingGroupMessageMap
 @property  <HMDSettingsMessageController> *messageController
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSObject<OS_dispatch_queue> *queue
 @property  HMDUserMessagePolicy *anyUserAllowedPolicy
 @property  BOOL isCurrentUser
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSettingsMessageHandler logCategory]

  // instance methods
  -[HMDSettingsMessageHandler .cxx_destruct]
  -[HMDSettingsMessageHandler initWithQueue:]
  -[HMDSettingsMessageHandler setQueue:]
  -[HMDSettingsMessageHandler isCurrentUser]
  -[HMDSettingsMessageHandler queue]
  -[HMDSettingsMessageHandler setIsCurrentUser:]
  -[HMDSettingsMessageHandler messageDispatcher]
  -[HMDSettingsMessageHandler registerForMessages]
  -[HMDSettingsMessageHandler setMessageDispatcher:]
  -[HMDSettingsMessageHandler settingMessageMap]
  -[HMDSettingsMessageHandler settingGroupMessageMap]
  -[HMDSettingsMessageHandler messageMapperForSetting:]
  -[HMDSettingsMessageHandler registerForSettingMessages:]
  -[HMDSettingsMessageHandler messageMapperForSettingGroup:]
  -[HMDSettingsMessageHandler registerForSettingGroupMessages:]
  -[HMDSettingsMessageHandler _checkIsCurrentUser:]
  -[HMDSettingsMessageHandler anyUserAllowedPolicy]
  -[HMDSettingsMessageHandler _applyOnlyCurrentUserAllowedPolicy:]
  -[HMDSettingsMessageHandler _handleUpdateValue:setting:]
  -[HMDSettingsMessageHandler setAnyUserAllowedPolicy:]
  -[HMDSettingsMessageHandler messageController]
  -[HMDSettingsMessageHandler setMessageController:]
  -[HMDSettingsMessageHandler configureForSetting:]
  -[HMDSettingsMessageHandler unconfigureFromSetting:]
  -[HMDSettingsMessageHandler configureForSettingGroup:]
  -[HMDSettingsMessageHandler unconfigureFromSettingGroup:]
  -[HMDSettingsMessageHandler configureWithMessageDispatcher:home:isCurrentUser:]
  -[HMDSettingsMessageHandler _handleAddConstraint:setting:]
  -[HMDSettingsMessageHandler _handleRemoveConstraint:setting:]
  -[HMDSettingsMessageHandler _handleReplaceConstraints:setting:]
  -[HMDSettingsMessageHandler _handleUpdatedConstraints:setting:]
  -[HMDSettingsMessageHandler setSettingMessageMap:]
  -[HMDSettingsMessageHandler setSettingGroupMessageMap:]


AWDHomeKitCameraSnapshotMessaging : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasReceivedSnapshotRequest
 @property  unsigned int receivedSnapshotRequest
 @property  BOOL hasSentSnapshotRequest
 @property  unsigned int sentSnapshotRequest
 @property  BOOL hasSentSnapshotResponse
 @property  unsigned int sentSnapshotResponse

  // instance methods
  -[AWDHomeKitCameraSnapshotMessaging copyWithZone:]
  -[AWDHomeKitCameraSnapshotMessaging readFrom:]
  -[AWDHomeKitCameraSnapshotMessaging writeTo:]
  -[AWDHomeKitCameraSnapshotMessaging isEqual:]
  -[AWDHomeKitCameraSnapshotMessaging copyTo:]
  -[AWDHomeKitCameraSnapshotMessaging dictionaryRepresentation]
  -[AWDHomeKitCameraSnapshotMessaging mergeFrom:]
  -[AWDHomeKitCameraSnapshotMessaging setReceivedSnapshotRequest:]
  -[AWDHomeKitCameraSnapshotMessaging setHasReceivedSnapshotRequest:]
  -[AWDHomeKitCameraSnapshotMessaging hasReceivedSnapshotRequest]
  -[AWDHomeKitCameraSnapshotMessaging setSentSnapshotRequest:]
  -[AWDHomeKitCameraSnapshotMessaging setHasSentSnapshotRequest:]
  -[AWDHomeKitCameraSnapshotMessaging hasSentSnapshotRequest]
  -[AWDHomeKitCameraSnapshotMessaging setSentSnapshotResponse:]
  -[AWDHomeKitCameraSnapshotMessaging setHasSentSnapshotResponse:]
  -[AWDHomeKitCameraSnapshotMessaging hasSentSnapshotResponse]
  -[AWDHomeKitCameraSnapshotMessaging receivedSnapshotRequest]
  -[AWDHomeKitCameraSnapshotMessaging sentSnapshotRequest]
  -[AWDHomeKitCameraSnapshotMessaging sentSnapshotResponse]


HMDCameraSnapshotLocal : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDCameraGetSnapshotProtocol, HMFLogging>
 @property  HMDCameraSnapshotSessionID *sessionID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDAccessory *accessory
 @property  NSDictionary *options
 @property  <HMDCameraSnapshotLocalDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  HMDSnapshotFile *snapshotFile
 @property  <HMDSnapshotRequestHandlerProtocol> *snapshotRequestHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotLocal logCategory]

  // instance methods
  -[HMDCameraSnapshotLocal sessionID]
  -[HMDCameraSnapshotLocal logIdentifier]
  -[HMDCameraSnapshotLocal delegateQueue]
  -[HMDCameraSnapshotLocal dealloc]
  -[HMDCameraSnapshotLocal .cxx_destruct]
  -[HMDCameraSnapshotLocal options]
  -[HMDCameraSnapshotLocal workQueue]
  -[HMDCameraSnapshotLocal accessory]
  -[HMDCameraSnapshotLocal delegate]
  -[HMDCameraSnapshotLocal _callDelegate:error:]
  -[HMDCameraSnapshotLocal initWithSessionID:workQueue:options:accessory:delegate:delegateQueue:snapshotRequestHandler:]
  -[HMDCameraSnapshotLocal getSnapshot:]
  -[HMDCameraSnapshotLocal _getSnapshot:]
  -[HMDCameraSnapshotLocal snapshotRequestHandler]
  -[HMDCameraSnapshotLocal _handleSnapshotFile:error:]
  -[HMDCameraSnapshotLocal setSnapshotFile:]
  -[HMDCameraSnapshotLocal snapshotFile]


AWDHomeKitCameraSnapshotIDSTransfer : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasSentImage
 @property  unsigned int sentImage
 @property  BOOL hasReceivedImage
 @property  unsigned int receivedImage

  // instance methods
  -[AWDHomeKitCameraSnapshotIDSTransfer copyWithZone:]
  -[AWDHomeKitCameraSnapshotIDSTransfer readFrom:]
  -[AWDHomeKitCameraSnapshotIDSTransfer writeTo:]
  -[AWDHomeKitCameraSnapshotIDSTransfer isEqual:]
  -[AWDHomeKitCameraSnapshotIDSTransfer copyTo:]
  -[AWDHomeKitCameraSnapshotIDSTransfer dictionaryRepresentation]
  -[AWDHomeKitCameraSnapshotIDSTransfer mergeFrom:]
  -[AWDHomeKitCameraSnapshotIDSTransfer setSentImage:]
  -[AWDHomeKitCameraSnapshotIDSTransfer setHasSentImage:]
  -[AWDHomeKitCameraSnapshotIDSTransfer hasSentImage]
  -[AWDHomeKitCameraSnapshotIDSTransfer setReceivedImage:]
  -[AWDHomeKitCameraSnapshotIDSTransfer setHasReceivedImage:]
  -[AWDHomeKitCameraSnapshotIDSTransfer hasReceivedImage]
  -[AWDHomeKitCameraSnapshotIDSTransfer sentImage]
  -[AWDHomeKitCameraSnapshotIDSTransfer receivedImage]


HMDLogEventMessageEventsAnalyzer : HMDLogEventAnalyzer
  // instance methods
  -[HMDLogEventMessageEventsAnalyzer _handleRemoteMessageLogEvent:]
  -[HMDLogEventMessageEventsAnalyzer processLogEvent:]


HMDPendingCharacteristic : NSObject /usr/lib/libc++.1.dylib
 @property  HMDCharacteristicWriteRequest *writeRequest
 @property  NSObject<OS_dispatch_queue> *queue
 @property  @? handler

  // instance methods
  -[HMDPendingCharacteristic .cxx_destruct]
  -[HMDPendingCharacteristic handler]
  -[HMDPendingCharacteristic queue]
  -[HMDPendingCharacteristic initWithCharacteristic:queue:handler:]
  -[HMDPendingCharacteristic writeRequest]


HMDNotificationRegistry : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, NSSecureCoding>
 @property  NSMutableDictionary *notificationRegistry
 @property  NSHashTable *delegates
 @property  HMDHome *home
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNotificationRegistry supportsSecureCoding]
  +[HMDNotificationRegistry logCategory]
  +[HMDNotificationRegistry keyForCharacteristic:]
  +[HMDNotificationRegistry _createCharacteristicsMapForCharacteristics:]
  +[HMDNotificationRegistry keyForProperty:mediaProfile:]
  +[HMDNotificationRegistry doesKey:matchMediaProfile:]
  +[HMDNotificationRegistry _reachabilityEventNotificationRegistryKeyForAccessoryUUID:]
  +[HMDNotificationRegistry _reachabilityEventNotificationRegistryKeysForAccessoryUUIDs:]

  // instance methods
  -[HMDNotificationRegistry delegates]
  -[HMDNotificationRegistry addDelegate:]
  -[HMDNotificationRegistry setDelegates:]
  -[HMDNotificationRegistry setWorkQueue:]
  -[HMDNotificationRegistry init]
  -[HMDNotificationRegistry .cxx_destruct]
  -[HMDNotificationRegistry workQueue]
  -[HMDNotificationRegistry encodeWithCoder:]
  -[HMDNotificationRegistry shortDescription]
  -[HMDNotificationRegistry home]
  -[HMDNotificationRegistry initWithCoder:]
  -[HMDNotificationRegistry configureWithHome:]
  -[HMDNotificationRegistry notificationRegistry]
  -[HMDNotificationRegistry usersRegisteredForNotificationsForCharacteristics:]
  -[HMDNotificationRegistry auditUsersForNotifications:forHome:]
  -[HMDNotificationRegistry enableReachabilityEventNotificationForAccessoryUUIDs:forUserID:]
  -[HMDNotificationRegistry disableReachabilityEventNotificationForAccessoryUUIDs:forUserID:]
  -[HMDNotificationRegistry enableNotificationForCharacteristics:forUser:]
  -[HMDNotificationRegistry disableNotificationForCharacteristics:forUser:characteristicsToDisableEvents:]
  -[HMDNotificationRegistry enableNotificationForProperties:forUser:]
  -[HMDNotificationRegistry disableNotificationForProperties:forUser:]
  -[HMDNotificationRegistry removeRegistrationsForMediaProfile:]
  -[HMDNotificationRegistry filterCharacteristics:forUser:]
  -[HMDNotificationRegistry usersRegisteredForNotificationsForProperties:]
  -[HMDNotificationRegistry filterProperties:forUser:]
  -[HMDNotificationRegistry clearAllRegistrations]
  -[HMDNotificationRegistry notifyDelegatesOfRegistryUpdates]
  -[HMDNotificationRegistry disableNotification:user:ignoreLockReq:home:]
  -[HMDNotificationRegistry _delayedBlocksCollectedWhileDeregisteringUsers:forHome:isiOS:isResident:]
  -[HMDNotificationRegistry removeRegistrationsForCharacteristic:]
  -[HMDNotificationRegistry allCharacteristicIdentifiers]
  -[HMDNotificationRegistry deregisterUsers:forHome:]
  -[HMDNotificationRegistry userIDsRegisteredForReachabilityEventNotificationsForAccessoryUUIDs:]
  -[HMDNotificationRegistry removeAllReachabilityEventNotificationRegistrations]


HMDLogEventDailyScheduler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSString *xpcActivityIdentifier
 @property  NSHashTable *logEventDailyProviders
 @property  <HMDXPCActivityInterfacing> *xpcActivityInterface
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDLogEventDailyScheduler sharedInstance]
  +[HMDLogEventDailyScheduler logCategory]

  // instance methods
  -[HMDLogEventDailyScheduler init]
  -[HMDLogEventDailyScheduler .cxx_destruct]
  -[HMDLogEventDailyScheduler initWithIdentifier:xpcActivityInterface:]
  -[HMDLogEventDailyScheduler _registerActivity]
  -[HMDLogEventDailyScheduler xpcActivityIdentifier]
  -[HMDLogEventDailyScheduler xpcActivityInterface]
  -[HMDLogEventDailyScheduler _handleCheckInForActivity:]
  -[HMDLogEventDailyScheduler _runActivity:]
  -[HMDLogEventDailyScheduler _criteriaForActivity]
  -[HMDLogEventDailyScheduler logEventDailyProviders]
  -[HMDLogEventDailyScheduler registerLogEventDailyProvider:]
  -[HMDLogEventDailyScheduler setLogEventDailyProviders:]
  -[HMDLogEventDailyScheduler setXpcActivityInterface:]


HMDCharacteristicMonitorEvent : HMDCharacteristicEvent
  // class methods
  +[HMDCharacteristicMonitorEvent logCategory]

  // instance methods
  -[HMDCharacteristicMonitorEvent _compareEventValue:]
  -[HMDCharacteristicMonitorEvent _evaluateNewValue:]


HMDServiceGroup : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDHomeMessageReceiver, HMFDumpState, NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableArray *serviceUUIDs
 @property  NSMutableDictionary *serviceMapping
 @property  HMDHome *home
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDApplicationData *appData
 @property  NSString *name
 @property  NSUUID *uuid
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDServiceGroup supportsSecureCoding]
  +[HMDServiceGroup hasMessageReceiverChildren]

  // instance methods
  -[HMDServiceGroup messageTargetUUID]
  -[HMDServiceGroup messageReceiveQueue]
  -[HMDServiceGroup setWorkQueue:]
  -[HMDServiceGroup uuid]
  -[HMDServiceGroup dealloc]
  -[HMDServiceGroup .cxx_destruct]
  -[HMDServiceGroup name]
  -[HMDServiceGroup workQueue]
  -[HMDServiceGroup setHome:]
  -[HMDServiceGroup encodeWithCoder:]
  -[HMDServiceGroup urlString]
  -[HMDServiceGroup setMsgDispatcher:]
  -[HMDServiceGroup msgDispatcher]
  -[HMDServiceGroup _registerForMessages]
  -[HMDServiceGroup home]
  -[HMDServiceGroup appData]
  -[HMDServiceGroup serviceUUIDs]
  -[HMDServiceGroup removeService:]
  -[HMDServiceGroup setName:]
  -[HMDServiceGroup dumpState]
  -[HMDServiceGroup initWithCoder:]
  -[HMDServiceGroup _handleRenameRequest:]
  -[HMDServiceGroup transactionObjectUpdated:newValues:message:]
  -[HMDServiceGroup transactionObjectRemoved:message:]
  -[HMDServiceGroup modelObjectWithChangeType:]
  -[HMDServiceGroup backingStoreObjects:]
  -[HMDServiceGroup _handleRemoveAppDataModel:message:]
  -[HMDServiceGroup _handleUpdateAppDataModel:message:]
  -[HMDServiceGroup setAppData:]
  -[HMDServiceGroup configure:queue:]
  -[HMDServiceGroup initWithName:uuid:home:queue:]
  -[HMDServiceGroup fixupServicesForReplacementAccessory:]
  -[HMDServiceGroup removeServicesForAccessory:]
  -[HMDServiceGroup updateServiceGroupWithModel:message:]
  -[HMDServiceGroup fixupServiceGroup]
  -[HMDServiceGroup assistantObject]
  -[HMDServiceGroup serviceMapping]
  -[HMDServiceGroup setServiceIfPresent:]
  -[HMDServiceGroup _handleUpdateServicesTransaction:requestMessage:]
  -[HMDServiceGroup _handleAddServiceRequest:]
  -[HMDServiceGroup _handleRemoveServiceRequest:]
  -[HMDServiceGroup _transactionServiceGroupUpdated:newValues:message:]
  -[HMDServiceGroup _handleUpdateNameTransaction:requestMessage:]
  -[HMDServiceGroup setServiceUUIDs:]
  -[HMDServiceGroup setServiceMapping:]


HMDServiceGroupModel : HMDBackingStoreModelObject
 @property  NSString *name
 @property  NSArray *services

  // class methods
  +[HMDServiceGroupModel properties]

  // instance methods
  -[HMDServiceGroupModel dependentUUIDs]


HMDCameraStreamMetrics : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDCameraMetricsStreamLogEvent *cameraStreamMetricsLogEvent
 @property  NSError *error

  // instance methods
  -[HMDCameraStreamMetrics dealloc]
  -[HMDCameraStreamMetrics setError:]
  -[HMDCameraStreamMetrics .cxx_destruct]
  -[HMDCameraStreamMetrics error]
  -[HMDCameraStreamMetrics initWithSessionID:cameraAccessory:isLocal:]
  -[HMDCameraStreamMetrics cameraStreamMetricsLogEvent]


HMDRemoteLoginReceiverSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *sessionID
 @property  HMDRemoteLoginAuthentication *remoteAuthentication
 @property  @? completion

  // instance methods
  -[HMDRemoteLoginReceiverSession sessionID]
  -[HMDRemoteLoginReceiverSession completion]
  -[HMDRemoteLoginReceiverSession dealloc]
  -[HMDRemoteLoginReceiverSession .cxx_destruct]
  -[HMDRemoteLoginReceiverSession remoteAuthentication]
  -[HMDRemoteLoginReceiverSession initWithSessionID:remoteAuthentication:completion:]


HMDActionSet : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate, HMDHomeMessageReceiver, NSSecureCoding, HMFDumpState, HMDBackingStoreObjectProtocol>
 @property  NSString *serializedIdentifier
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDHome *home
 @property  NSMutableArray *currentActions
 @property  NSDate *lastExecutionDate
 @property  HMFTimer *executionTimeout
 @property  NSDate *executionStart
 @property  HMFMessage *executionMessage
 @property  NSDictionary *executionInitialStates
 @property  HMDActionSetEvent *executionActionSetEvent
 @property  HMDApplicationData *appData
 @property  NSUUID *spiClientIdentifier
 @property  BOOL containsMediaPlaybackActions
 @property  BOOL containsShortcutActions
 @property  NSString *name
 @property  NSString *type
 @property  NSUUID *uuid
 @property  NSArray *actions
 @property  NSArray *associatedAccessories
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDActionSet supportsSecureCoding]
  +[HMDActionSet allowedActionClasses]
  +[HMDActionSet logCategory]
  +[HMDActionSet hasMessageReceiverChildren]
  +[HMDActionSet isBuiltinActionSetType:]

  // instance methods
  -[HMDActionSet messageTargetUUID]
  -[HMDActionSet messageDestination]
  -[HMDActionSet messageReceiveQueue]
  -[HMDActionSet timerDidFire:]
  -[HMDActionSet actions]
  -[HMDActionSet setWorkQueue:]
  -[HMDActionSet logIdentifier]
  -[HMDActionSet lastExecutionDate]
  -[HMDActionSet uuid]
  -[HMDActionSet dealloc]
  -[HMDActionSet setType:]
  -[HMDActionSet .cxx_destruct]
  -[HMDActionSet removeAllActions]
  -[HMDActionSet name]
  -[HMDActionSet workQueue]
  -[HMDActionSet setHome:]
  -[HMDActionSet addAction:]
  -[HMDActionSet encodeWithCoder:]
  -[HMDActionSet urlString]
  -[HMDActionSet setMsgDispatcher:]
  -[HMDActionSet msgDispatcher]
  -[HMDActionSet _registerForMessages]
  -[HMDActionSet type]
  -[HMDActionSet home]
  -[HMDActionSet currentActions]
  -[HMDActionSet setCurrentActions:]
  -[HMDActionSet appData]
  -[HMDActionSet removeAction:]
  -[HMDActionSet invalidate]
  -[HMDActionSet execute:]
  -[HMDActionSet removeAccessory:]
  -[HMDActionSet removeService:]
  -[HMDActionSet setName:]
  -[HMDActionSet dumpState]
  -[HMDActionSet initWithCoder:]
  -[HMDActionSet setLastExecutionDate:]
  -[HMDActionSet associatedAccessories]
  -[HMDActionSet isAssociatedWithAccessory:]
  -[HMDActionSet containsShortcutActions]
  -[HMDActionSet containsMediaPlaybackActions]
  -[HMDActionSet executeWithTriggerSource:captureCurrentState:completionHandler:]
  -[HMDActionSet _handleRenameRequest:]
  -[HMDActionSet transactionObjectUpdated:newValues:message:]
  -[HMDActionSet transactionObjectRemoved:message:]
  -[HMDActionSet configure:messageDispatcher:queue:]
  -[HMDActionSet modelObjectWithChangeType:]
  -[HMDActionSet backingStoreObjects:]
  -[HMDActionSet _handleRemoveAppDataModel:message:]
  -[HMDActionSet _handleUpdateAppDataModel:message:]
  -[HMDActionSet spiClientIdentifier]
  -[HMDActionSet setAppData:]
  -[HMDActionSet initWithName:uuid:type:home:queue:]
  -[HMDActionSet removeActionForCharacteristic:]
  -[HMDActionSet containsSecureCharacteristic]
  -[HMDActionSet assistantObject]
  -[HMDActionSet containsUnsecuringAction]
  -[HMDActionSet isAccessValidForExecutionWithMessage:]
  -[HMDActionSet _execute:captureCurrentState:writeRequestTuples:]
  -[HMDActionSet _handleRemoveAction:message:]
  -[HMDActionSet _fixupActions]
  -[HMDActionSet _removeDonatedIntent]
  -[HMDActionSet __handleActionsUpdated]
  -[HMDActionSet executionMessage]
  -[HMDActionSet _handleAddActionRequest:]
  -[HMDActionSet _handleRemoveActionRequest:]
  -[HMDActionSet _handleUpdateActionRequest:]
  -[HMDActionSet _addCharacteristicWriteActionModelWithUUID:message:]
  -[HMDActionSet _addMediaPlaybackActionModelWithUUID:message:]
  -[HMDActionSet _addLightProfileNaturalLightingModelWithUUID:message:]
  -[HMDActionSet sendNotificationWithAction:message:requiresSPIEntitlement:]
  -[HMDActionSet _handleAddNewAction:message:]
  -[HMDActionSet actionWithUUID:]
  -[HMDActionSet _removeAction:message:]
  -[HMDActionSet _updateWriteAction:forMessage:]
  -[HMDActionSet _updatePlaybackAction:forMessage:]
  -[HMDActionSet _updateNaturalLightingAction:forMessage:]
  -[HMDActionSet executionTimeout]
  -[HMDActionSet executionInitialStates]
  -[HMDActionSet executionActionSetEvent]
  -[HMDActionSet setExecutionActionSetEvent:]
  -[HMDActionSet setExecutionMessage:]
  -[HMDActionSet setExecutionStart:]
  -[HMDActionSet setExecutionTimeout:]
  -[HMDActionSet setExecutionInitialStates:]
  -[HMDActionSet _generateOverallError:forSource:]
  -[HMDActionSet _logRoomEvent:]
  -[HMDActionSet handleExecutionCompletedWithOverallError:response:]
  -[HMDActionSet _createActionExecutionLogEvent:]
  -[HMDActionSet _issueReadRequests]
  -[HMDActionSet _issueWriteRequests:]
  -[HMDActionSet _executeMediaPlaybackActions:source:completionHandler:]
  -[HMDActionSet _executeGenericActions:source:completionHandler:]
  -[HMDActionSet _handleRemoveActionTransaction:message:]
  -[HMDActionSet _processActionSetModelUpdated:message:]
  -[HMDActionSet _handleAddCharactersiticWriteActionTransaction:message:]
  -[HMDActionSet _handleAddMediaPlaybackActionTransaction:message:]
  -[HMDActionSet _handleAddShortcutActionTransaction:message:]
  -[HMDActionSet _handleAddLightProfileNaturalLightingActionTransaction:message:]
  -[HMDActionSet _handleRenameActionSetTransaction:message:]
  -[HMDActionSet serializedIdentifier]
  -[HMDActionSet executionStart]
  -[HMDActionSet _getActionsForActionSetObject]


HMDActionSetModel : HMDBackingStoreModelObject
 @property  NSString *name
 @property  NSString *type
 @property  NSDate *lastExecutionDate

  // class methods
  +[HMDActionSetModel properties]


HMDAssertionLogEvent : HMDLogEvent <HMDDiagnosticReportLogging>
 @property  NSString *diagnosticReportEventType
 @property  NSString *diagnosticReportEventSubType
 @property  NSString *reason

  // class methods
  +[HMDAssertionLogEvent identifier]

  // instance methods
  -[HMDAssertionLogEvent initWithReason:]
  -[HMDAssertionLogEvent .cxx_destruct]
  -[HMDAssertionLogEvent reason]
  -[HMDAssertionLogEvent updateDiagnosticReportSignature:]


HMDCameraClipUploadVideoSegmentOperation : HMDCameraClipAppendStreamingAssetOperation
  // class methods
  +[HMDCameraClipUploadVideoSegmentOperation logCategory]
  +[HMDCameraClipUploadVideoSegmentOperation shouldRetry]
  +[HMDCameraClipUploadVideoSegmentOperation streamingAssetPropertyName]
  +[HMDCameraClipUploadVideoSegmentOperation metadataPropertyName]


HMDRemoteReadRequestMessage : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMFMessage *readMessage
 @property  NSUUID *accessoryUUID
 @property  NSObject<OS_dispatch_queue> *responseQueue
 @property  HMFActivity *activity

  // instance methods
  -[HMDRemoteReadRequestMessage activity]
  -[HMDRemoteReadRequestMessage accessoryUUID]
  -[HMDRemoteReadRequestMessage .cxx_destruct]
  -[HMDRemoteReadRequestMessage responseQueue]
  -[HMDRemoteReadRequestMessage readMessage]
  -[HMDRemoteReadRequestMessage initWithReadMessage:accessoryUUID:responseQueue:activity:]


HMDResidentCommunicationHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMapTable *deviceMapping
 @property  NSMutableArray *pendingReadRequests
 @property  NSMapTable *dispatchedReadRequests
 @property  HMFTimer *multiReadCoalesceTimer
 @property  NSUUID *homeUUID
 @property  BOOL ownerUser
 @property  HMDMessageDispatcher *remoteDispatcher
 @property  HMDDevice *preferredDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDResidentCommunicationHandler logCategory]
  +[HMDResidentCommunicationHandler _clearAllGeneratedRequests:error:]
  +[HMDResidentCommunicationHandler _clearAllPendingRequests:error:]
  +[HMDResidentCommunicationHandler _processResponseForMultireadRequest:overallError:response:]
  +[HMDResidentCommunicationHandler createResponseSubset:overallError:readRequest:error:]

  // instance methods
  -[HMDResidentCommunicationHandler timerDidFire:]
  -[HMDResidentCommunicationHandler dealloc]
  -[HMDResidentCommunicationHandler .cxx_destruct]
  -[HMDResidentCommunicationHandler deviceForType:]
  -[HMDResidentCommunicationHandler workQueue]
  -[HMDResidentCommunicationHandler isOwnerUser]
  -[HMDResidentCommunicationHandler preferredDevice]
  -[HMDResidentCommunicationHandler homeUUID]
  -[HMDResidentCommunicationHandler redispatchMessage:target:responseQueue:]
  -[HMDResidentCommunicationHandler pendingReadRequests]
  -[HMDResidentCommunicationHandler dispatchedReadRequests]
  -[HMDResidentCommunicationHandler _removeDeviceForType:]
  -[HMDResidentCommunicationHandler deviceMapping]
  -[HMDResidentCommunicationHandler preferredDeviceType]
  -[HMDResidentCommunicationHandler remoteDispatcher]
  -[HMDResidentCommunicationHandler multiReadCoalesceTimer]
  -[HMDResidentCommunicationHandler setMultiReadCoalesceTimer:]
  -[HMDResidentCommunicationHandler _sendMultipleCharacteristicRead]
  -[HMDResidentCommunicationHandler _processResponse:overallError:messageIdentifier:]
  -[HMDResidentCommunicationHandler initWithHome:remoteDispatcher:]
  -[HMDResidentCommunicationHandler setDevice:forType:]
  -[HMDResidentCommunicationHandler removeDeviceForType:]
  -[HMDResidentCommunicationHandler containsDevice:]
  -[HMDResidentCommunicationHandler setDeviceMapping:]


HMDCameraIDSDeviceConnectionReceiver : HMDCameraIDSDeviceConnection <HMDCameraRemoteStreamReceiverSocketProtocol>
 @property  <HMDCameraIDSDeviceConnectionReceiverDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  int remoteAudioSocket
 @property  int remoteVideoSocket
 @property  IDSSession *session
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraIDSDeviceConnectionReceiver logCategory]

  // instance methods
  -[HMDCameraIDSDeviceConnectionReceiver logIdentifier]
  -[HMDCameraIDSDeviceConnectionReceiver setDelegateQueue:]
  -[HMDCameraIDSDeviceConnectionReceiver session]
  -[HMDCameraIDSDeviceConnectionReceiver delegateQueue]
  -[HMDCameraIDSDeviceConnectionReceiver dealloc]
  -[HMDCameraIDSDeviceConnectionReceiver .cxx_destruct]
  -[HMDCameraIDSDeviceConnectionReceiver setDelegate:]
  -[HMDCameraIDSDeviceConnectionReceiver delegate]
  -[HMDCameraIDSDeviceConnectionReceiver initWithSessionID:workQueue:delegate:delegateQueue:]
  -[HMDCameraIDSDeviceConnectionReceiver setupReceiver:]
  -[HMDCameraIDSDeviceConnectionReceiver remoteAudioSocket]
  -[HMDCameraIDSDeviceConnectionReceiver remoteVideoSocket]
  -[HMDCameraIDSDeviceConnectionReceiver _callSessionEnded:]
  -[HMDCameraIDSDeviceConnectionReceiver _socketOpened:]


HMDCloudChangeNode : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *recordName
 @property  NSUUID *uuid
 @property  NSUUID *parentUuid
 @property  NSString *type
 @property  BOOL forceDelete
 @property  BOOL orphaned
 @property  HMDCloudChangeNode *parent
 @property  HMDCloudChange *change
 @property  NSMapTable *children

  // class methods
  +[HMDCloudChangeNode shortDescription]

  // instance methods
  -[HMDCloudChangeNode parent]
  -[HMDCloudChangeNode setParent:]
  -[HMDCloudChangeNode init]
  -[HMDCloudChangeNode change]
  -[HMDCloudChangeNode children]
  -[HMDCloudChangeNode addChild:]
  -[HMDCloudChangeNode uuid]
  -[HMDCloudChangeNode setType:]
  -[HMDCloudChangeNode .cxx_destruct]
  -[HMDCloudChangeNode setUuid:]
  -[HMDCloudChangeNode type]
  -[HMDCloudChangeNode shortDescription]
  -[HMDCloudChangeNode setChildren:]
  -[HMDCloudChangeNode setRecordName:]
  -[HMDCloudChangeNode removeChild:]
  -[HMDCloudChangeNode recordName]
  -[HMDCloudChangeNode initWithModel:]
  -[HMDCloudChangeNode setChange:]
  -[HMDCloudChangeNode parentUuid]
  -[HMDCloudChangeNode _initWithUUID:parentUUID:recordName:type:change:]
  -[HMDCloudChangeNode initWithChange:]
  -[HMDCloudChangeNode forceDelete]
  -[HMDCloudChangeNode logChangeTreeWithIndent:]
  -[HMDCloudChangeNode setParentUuid:]
  -[HMDCloudChangeNode deleteChildren]
  -[HMDCloudChangeNode _allNodesInBranch]
  -[HMDCloudChangeNode _markBranchOrphaned]
  -[HMDCloudChangeNode initWithRecordMapping:]
  -[HMDCloudChangeNode initWithCloudRecord:]
  -[HMDCloudChangeNode updateRecordMapping:]
  -[HMDCloudChangeNode _updateWithModel:]
  -[HMDCloudChangeNode _updateWithChange:]
  -[HMDCloudChangeNode _updateWithCloudRecord:]
  -[HMDCloudChangeNode orphaned]


HMDCloudChangeTree : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableArray *objects
 @property  NSMapTable *objectMap
 @property  NSMapTable *recordMap
 @property  NSMapTable *branchMap
 @property  NSSet *validRootUUIDs
 @property  NSArray *objectsWithPotentialChanges
 @property  NSArray *allTransactionStoreRowIDs
 @property  NSArray *orphans
 @property  NSMutableArray *cloudChanges
 @property  NSMutableArray *invalidCloudChanges
 @property  BOOL hasValidChanges

  // class methods
  +[HMDCloudChangeTree logCategory]
  +[HMDCloudChangeTree shortDescription]
  +[HMDCloudChangeTree modelTypeCanBeOrphaned:]

  // instance methods
  -[HMDCloudChangeTree objects]
  -[HMDCloudChangeTree setObjects:]
  -[HMDCloudChangeTree init]
  -[HMDCloudChangeTree _addNode:]
  -[HMDCloudChangeTree .cxx_destruct]
  -[HMDCloudChangeTree orphans]
  -[HMDCloudChangeTree shortDescription]
  -[HMDCloudChangeTree recordMap]
  -[HMDCloudChangeTree removeNode:]
  -[HMDCloudChangeTree objectMap]
  -[HMDCloudChangeTree setObjectMap:]
  -[HMDCloudChangeTree logChangeTreeWithIndent:]
  -[HMDCloudChangeTree updateRecordMapping:]
  -[HMDCloudChangeTree branchMap]
  -[HMDCloudChangeTree _objectForUUID:]
  -[HMDCloudChangeTree _objectForRecordName:]
  -[HMDCloudChangeTree _updateNode:oldRecordName:]
  -[HMDCloudChangeTree _findNodeWithRecordMapping:]
  -[HMDCloudChangeTree validRootUUIDs]
  -[HMDCloudChangeTree initWithRootUUIDs:]
  -[HMDCloudChangeTree objectForUUID:]
  -[HMDCloudChangeTree objectForRecordName:]
  -[HMDCloudChangeTree updateModel:]
  -[HMDCloudChangeTree updateChange:]
  -[HMDCloudChangeTree updateNode:withCloudRecord:]
  -[HMDCloudChangeTree findAndDeletedChildren]
  -[HMDCloudChangeTree findAndMarkOrphanedBranches]
  -[HMDCloudChangeTree objectsWithPotentialChanges]
  -[HMDCloudChangeTree allTransactionStoreRowIDs]
  -[HMDCloudChangeTree cloudChanges]
  -[HMDCloudChangeTree invalidCloudChanges]
  -[HMDCloudChangeTree recordMapWithFilter:]
  -[HMDCloudChangeTree hasValidChanges]
  -[HMDCloudChangeTree setRecordMap:]
  -[HMDCloudChangeTree setBranchMap:]
  -[HMDCloudChangeTree setValidRootUUIDs:]


HMDMediaPreference : HMFPreference /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  HMFPreference *appleMediaPreference
 @property  HMFPreference *airPlay2Preference
 @property  HMFSystemPreference *homeKitPreference
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMediaPreference load]

  // instance methods
  -[HMDMediaPreference initWithKey:options:defaultValue:]
  -[HMDMediaPreference .cxx_destruct]
  -[HMDMediaPreference numberValue]
  -[HMDMediaPreference propertyDescription]
  -[HMDMediaPreference boolValue]
  -[HMDMediaPreference stringValue]
  -[HMDMediaPreference homeKitPreference]
  -[HMDMediaPreference appleMediaPreference]
  -[HMDMediaPreference airPlay2Preference]


HMDAirPlay2Preference : HMFPreference /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  HMFSystemPreference *airPlayPreference
 @property  HMFSystemPreference *homeKitPreference
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAirPlay2Preference load]

  // instance methods
  -[HMDAirPlay2Preference initWithKey:options:defaultValue:]
  -[HMDAirPlay2Preference .cxx_destruct]
  -[HMDAirPlay2Preference numberValue]
  -[HMDAirPlay2Preference propertyDescription]
  -[HMDAirPlay2Preference boolValue]
  -[HMDAirPlay2Preference stringValue]
  -[HMDAirPlay2Preference homeKitPreference]
  -[HMDAirPlay2Preference airPlayPreference]


HMDMROutputDeviceStatus : NSObject /usr/lib/libc++.1.dylib
 @property  HMDMRAVEndpoint *outputEndpoint
 @property  NSString *outputUID
 @property  NSError *error

  // instance methods
  -[HMDMROutputDeviceStatus .cxx_destruct]
  -[HMDMROutputDeviceStatus error]
  -[HMDMROutputDeviceStatus isEqual:]
  -[HMDMROutputDeviceStatus initWithOutputUID:error:]
  -[HMDMROutputDeviceStatus initWithOutputEndpoint:error:]
  -[HMDMROutputDeviceStatus outputUID]
  -[HMDMROutputDeviceStatus outputEndpoint]
  -[HMDMROutputDeviceStatus initWithOutputUID:]
  -[HMDMROutputDeviceStatus initWithOutputEndpoint:]


HMDMRSetEndpointVolumeOperationDefaultExternalObjectInterface : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDMRSetEndpointVolumeOperationExternalObjectInterface>
  // instance methods
  -[HMDMRSetEndpointVolumeOperationDefaultExternalObjectInterface createMPCAssistantDiscovery]
  -[HMDMRSetEndpointVolumeOperationDefaultExternalObjectInterface createMPCAssistantConnection]
  -[HMDMRSetEndpointVolumeOperationDefaultExternalObjectInterface copyMRAVEndpointOutputDevices:]
  -[HMDMRSetEndpointVolumeOperationDefaultExternalObjectInterface copyMRAVOutputDeviceUniqueIdentifier:]
  -[HMDMRSetEndpointVolumeOperationDefaultExternalObjectInterface setMRAVOutputDeviceVolume:endpoint:outputDeviceUID:queue:]
  -[HMDMRSetEndpointVolumeOperationDefaultExternalObjectInterface getMRAVEndpointOutputDeviceUIDVolumeControlCapabilitiesForEndpoint:outputDeviceUID:queue:]


HMDMRSetEndpointVolumeOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  MPCAssistantDiscovery *discovery
 @property  NSError *partialExecutionError
 @property  <HMDMRSetEndpointVolumeOperationExternalObjectInterface> *externalObjectInterface
 @property  NSNumber *volume
 @property  NSArray *routeIDs
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMRSetEndpointVolumeOperation shortDescription]

  // instance methods
  -[HMDMRSetEndpointVolumeOperation volume]
  -[HMDMRSetEndpointVolumeOperation main]
  -[HMDMRSetEndpointVolumeOperation attributeDescriptions]
  -[HMDMRSetEndpointVolumeOperation privateDescription]
  -[HMDMRSetEndpointVolumeOperation .cxx_destruct]
  -[HMDMRSetEndpointVolumeOperation shortDescription]
  -[HMDMRSetEndpointVolumeOperation discovery]
  -[HMDMRSetEndpointVolumeOperation setDiscovery:]
  -[HMDMRSetEndpointVolumeOperation cancelOnSetup]
  -[HMDMRSetEndpointVolumeOperation externalObjectInterface]
  -[HMDMRSetEndpointVolumeOperation routeIDs]
  -[HMDMRSetEndpointVolumeOperation discoverRemoteControlEndpointsForUIDs:]
  -[HMDMRSetEndpointVolumeOperation generateOverallResultAndFinishWithDeviceStatuses:]
  -[HMDMRSetEndpointVolumeOperation connectToEndpoint:connection:]
  -[HMDMRSetEndpointVolumeOperation getVolumeCapabilitiesForEndpoint:outputDeviceUID:]
  -[HMDMRSetEndpointVolumeOperation setVolumeOnEndpoint:outputDeviceUID:]
  -[HMDMRSetEndpointVolumeOperation setPartialExecutionError:]
  -[HMDMRSetEndpointVolumeOperation initWithRouteIDs:volume:]
  -[HMDMRSetEndpointVolumeOperation partialExecutionError]
  -[HMDMRSetEndpointVolumeOperation setExternalObjectInterface:]


HMDCameraSignificantEventFetchHeroFrameContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMCameraSignificantEvent *significantEvent
 @property  HMDCameraSnapshotIDSRelayReceiver *relayReceiver

  // instance methods
  -[HMDCameraSignificantEventFetchHeroFrameContext significantEvent]
  -[HMDCameraSignificantEventFetchHeroFrameContext .cxx_destruct]
  -[HMDCameraSignificantEventFetchHeroFrameContext initWithSignificantEvent:relayReceiver:]
  -[HMDCameraSignificantEventFetchHeroFrameContext relayReceiver]


HMDCameraSignificantEventListener : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFMessageReceiver, HMFLogging, HMDCameraSnapshotIDSRelayReceiverDelegate>
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableDictionary *fetchHeroFrameContextBySessionUUID
 @property  NSString *logIdentifier
 @property  @? idsRelayReceiverFactory
 @property  <HMDCameraSignificantEventListenerDelegate> *delegate
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSignificantEventListener logCategory]

  // instance methods
  -[HMDCameraSignificantEventListener messageTargetUUID]
  -[HMDCameraSignificantEventListener messageReceiveQueue]
  -[HMDCameraSignificantEventListener logIdentifier]
  -[HMDCameraSignificantEventListener .cxx_destruct]
  -[HMDCameraSignificantEventListener workQueue]
  -[HMDCameraSignificantEventListener messageDispatcher]
  -[HMDCameraSignificantEventListener setDelegate:]
  -[HMDCameraSignificantEventListener delegate]
  -[HMDCameraSignificantEventListener start]
  -[HMDCameraSignificantEventListener initWithMessageTargetUUID:messageDispatcher:workQueue:logIdentifier:]
  -[HMDCameraSignificantEventListener handleCameraSignificantEventDidOccurMessage:]
  -[HMDCameraSignificantEventListener idsRelayReceiverFactory]
  -[HMDCameraSignificantEventListener relayReceiver:didReceiveData:error:]
  -[HMDCameraSignificantEventListener fetchHeroFrameContextBySessionUUID]
  -[HMDCameraSignificantEventListener relayReceiverDidAcceptIDSInvitation:]
  -[HMDCameraSignificantEventListener relayReceiverIDSSessionDidStart:]
  -[HMDCameraSignificantEventListener initWithCamera:]
  -[HMDCameraSignificantEventListener setIdsRelayReceiverFactory:]


HMDStreamDataSequenceNumber : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying>
 @property  unsigned long value
 @property  BOOL initial

  // instance methods
  -[HMDStreamDataSequenceNumber copyWithZone:]
  -[HMDStreamDataSequenceNumber attributeDescriptions]
  -[HMDStreamDataSequenceNumber initWithValue:]
  -[HMDStreamDataSequenceNumber isInitial]
  -[HMDStreamDataSequenceNumber isEqual:]
  -[HMDStreamDataSequenceNumber value]
  -[HMDStreamDataSequenceNumber initWithStreamDataDictionary:]


HMDStreamData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDStreamDataSequenceNumber *sequenceNumber
 @property  NSData *data
 @property  NSString *type

  // instance methods
  -[HMDStreamData copyWithZone:]
  -[HMDStreamData attributeDescriptions]
  -[HMDStreamData sequenceNumber]
  -[HMDStreamData .cxx_destruct]
  -[HMDStreamData data]
  -[HMDStreamData type]
  -[HMDStreamData isEqual:]
  -[HMDStreamData initWithSequenceNumber:data:type:]


HMDStreamDataChunk : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSNumber *sequenceNumber
 @property  BOOL isLast
 @property  NSData *data

  // instance methods
  -[HMDStreamDataChunk isLast]
  -[HMDStreamDataChunk attributeDescriptions]
  -[HMDStreamDataChunk sequenceNumber]
  -[HMDStreamDataChunk .cxx_destruct]
  -[HMDStreamDataChunk data]
  -[HMDStreamDataChunk isEqual:]
  -[HMDStreamDataChunk initWithStreamDataDictionary:]
  -[HMDStreamDataChunk initWithSequenceNumber:data:isLast:]


HMDInitialStreamDataChunk : HMDStreamDataChunk
 @property  NSString *type

  // instance methods
  -[HMDInitialStreamDataChunk attributeDescriptions]
  -[HMDInitialStreamDataChunk .cxx_destruct]
  -[HMDInitialStreamDataChunk type]
  -[HMDInitialStreamDataChunk isEqual:]
  -[HMDInitialStreamDataChunk initWithStreamDataDictionary:]
  -[HMDInitialStreamDataChunk initWithData:isLast:type:]


HMDBulletinBoardNotification : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, HMFMessageReceiver, HMFLogging, HMFDumpState>
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDService *service
 @property  BOOL enabled
 @property  NSPredicate *condition
 @property  HMDBulletinBoardNotificationServiceGroup *notificationServiceGroup
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBulletinBoardNotification supportsSecureCoding]
  +[HMDBulletinBoardNotification logCategory]
  +[HMDBulletinBoardNotification supportsBulletinNotificationGroup:]

  // instance methods
  -[HMDBulletinBoardNotification initWithService:]
  -[HMDBulletinBoardNotification condition]
  -[HMDBulletinBoardNotification messageTargetUUID]
  -[HMDBulletinBoardNotification messageReceiveQueue]
  -[HMDBulletinBoardNotification logIdentifier]
  -[HMDBulletinBoardNotification init]
  -[HMDBulletinBoardNotification attributeDescriptions]
  -[HMDBulletinBoardNotification notificationServiceGroup]
  -[HMDBulletinBoardNotification dealloc]
  -[HMDBulletinBoardNotification .cxx_destruct]
  -[HMDBulletinBoardNotification setCondition:]
  -[HMDBulletinBoardNotification encodeWithCoder:]
  -[HMDBulletinBoardNotification setMsgDispatcher:]
  -[HMDBulletinBoardNotification msgDispatcher]
  -[HMDBulletinBoardNotification isEnabled]
  -[HMDBulletinBoardNotification service]
  -[HMDBulletinBoardNotification setEnabled:]
  -[HMDBulletinBoardNotification dumpState]
  -[HMDBulletinBoardNotification initWithCoder:]
  -[HMDBulletinBoardNotification registerForCharacteristicNotifications]
  -[HMDBulletinBoardNotification configureMsgDispatcher:]
  -[HMDBulletinBoardNotification configureBulletinNotification]
  -[HMDBulletinBoardNotification registerNotificationHandlers]
  -[HMDBulletinBoardNotification _handleBulletinBoardNotificationCommitRequest:]
  -[HMDBulletinBoardNotification setNotificationServiceGroup:]


HMDHomeConfigurationLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *homeConfigurations
 @property  unsigned long version

  // class methods
  +[HMDHomeConfigurationLogEvent initialize]
  +[HMDHomeConfigurationLogEvent uuid]
  +[HMDHomeConfigurationLogEvent identifier]

  // instance methods
  -[HMDHomeConfigurationLogEvent init]
  -[HMDHomeConfigurationLogEvent .cxx_destruct]
  -[HMDHomeConfigurationLogEvent setVersion:]
  -[HMDHomeConfigurationLogEvent version]
  -[HMDHomeConfigurationLogEvent AWDMessageType]
  -[HMDHomeConfigurationLogEvent metricForAWD]
  -[HMDHomeConfigurationLogEvent initWithHomes:]
  -[HMDHomeConfigurationLogEvent logAWDEventDescription]
  -[HMDHomeConfigurationLogEvent homeConfigurations]
  -[HMDHomeConfigurationLogEvent generateAWDHomeConfiguration:]
  -[HMDHomeConfigurationLogEvent getHomeConfiguration:]
  -[HMDHomeConfigurationLogEvent convertToAWDHAPServiceList:]
  -[HMDHomeConfigurationLogEvent convertToAWDMultiUserSettingsList:]
  -[HMDHomeConfigurationLogEvent convertToAWDNetworkProtectionStatus:]
  -[HMDHomeConfigurationLogEvent convertToAWDHAPService:]
  -[HMDHomeConfigurationLogEvent convertToAWDMultiUserSettings:]
  -[HMDHomeConfigurationLogEvent convertToAWDMultiUserValueType:]


HMDHomeConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // instance methods
  -[HMDHomeConfiguration .cxx_destruct]


HMDAnalyticsMultiUserSettingsValueByKeyPath : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // instance methods
  -[HMDAnalyticsMultiUserSettingsValueByKeyPath .cxx_destruct]


HMDAnalyticsMultiUserSettings : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // instance methods
  -[HMDAnalyticsMultiUserSettings .cxx_destruct]


HMDAnalyticsHAPServiceData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // instance methods
  -[HMDAnalyticsHAPServiceData .cxx_destruct]


_HMDDeviceHandle : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  BOOL local
 @property  BOOL global
 @property  HMDAccountHandle *accountHandle
 @property  NSString *destination

  // class methods
  +[_HMDDeviceHandle supportsSecureCoding]
  +[_HMDDeviceHandle isValidDestination:]
  +[_HMDDeviceHandle identifierNamespace]

  // instance methods
  -[_HMDDeviceHandle copyWithZone:]
  -[_HMDDeviceHandle destination]
  -[_HMDDeviceHandle init]
  -[_HMDDeviceHandle initWithDestination:]
  -[_HMDDeviceHandle .cxx_destruct]
  -[_HMDDeviceHandle initWithIdentifier:]
  -[_HMDDeviceHandle encodeWithCoder:]
  -[_HMDDeviceHandle identifier]
  -[_HMDDeviceHandle isLocal]
  -[_HMDDeviceHandle initWithCoder:]
  -[_HMDDeviceHandle isGlobal]
  -[_HMDDeviceHandle accountHandle]


_HMDGlobalDeviceHandle : _HMDDeviceHandle
 @property  HMDAccountHandle *accountHandle
 @property  NSData *pushToken

  // class methods
  +[_HMDGlobalDeviceHandle supportsSecureCoding]
  +[_HMDGlobalDeviceHandle isValidDestination:]

  // instance methods
  -[_HMDGlobalDeviceHandle destination]
  -[_HMDGlobalDeviceHandle pushToken]
  -[_HMDGlobalDeviceHandle initWithDestination:]
  -[_HMDGlobalDeviceHandle privateDescription]
  -[_HMDGlobalDeviceHandle .cxx_destruct]
  -[_HMDGlobalDeviceHandle encodeWithCoder:]
  -[_HMDGlobalDeviceHandle isEqual:]
  -[_HMDGlobalDeviceHandle initWithCoder:]
  -[_HMDGlobalDeviceHandle isGlobal]
  -[_HMDGlobalDeviceHandle accountHandle]
  -[_HMDGlobalDeviceHandle initWithPushToken:accountHandle:]


_HMDLocalDeviceHandle : _HMDDeviceHandle
 @property  NSUUID *deviceIdentifier

  // class methods
  +[_HMDLocalDeviceHandle supportsSecureCoding]
  +[_HMDLocalDeviceHandle isValidDestination:]

  // instance methods
  -[_HMDLocalDeviceHandle destination]
  -[_HMDLocalDeviceHandle deviceIdentifier]
  -[_HMDLocalDeviceHandle initWithDestination:]
  -[_HMDLocalDeviceHandle privateDescription]
  -[_HMDLocalDeviceHandle .cxx_destruct]
  -[_HMDLocalDeviceHandle initWithDeviceIdentifier:]
  -[_HMDLocalDeviceHandle encodeWithCoder:]
  -[_HMDLocalDeviceHandle isEqual:]
  -[_HMDLocalDeviceHandle isLocal]
  -[_HMDLocalDeviceHandle initWithCoder:]


HMDDeviceHandle : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSSecureCoding>
 @property  _HMDDeviceHandle *internal
 @property  HMDAccountHandle *accountHandle
 @property  NSString *destination
 @property  NSData *pushToken
 @property  BOOL local
 @property  BOOL global
 @property  NSUUID *identifier

  // class methods
  +[HMDDeviceHandle supportsSecureCoding]
  +[HMDDeviceHandle deviceHandleForDestination:]

  // instance methods
  -[HMDDeviceHandle copyWithZone:]
  -[HMDDeviceHandle destination]
  -[HMDDeviceHandle init]
  -[HMDDeviceHandle attributeDescriptions]
  -[HMDDeviceHandle internal]
  -[HMDDeviceHandle pushToken]
  -[HMDDeviceHandle .cxx_destruct]
  -[HMDDeviceHandle initWithInternal:]
  -[HMDDeviceHandle encodeWithCoder:]
  -[HMDDeviceHandle identifier]
  -[HMDDeviceHandle shortDescription]
  -[HMDDeviceHandle isEqual:]
  -[HMDDeviceHandle isLocal]
  -[HMDDeviceHandle initWithCoder:]
  -[HMDDeviceHandle isGlobal]
  -[HMDDeviceHandle accountHandle]
  -[HMDDeviceHandle matchesPushToken:]


HMDXPCMessageFilter : HMFMessageFilter /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDXPCClientConnection *connection

  // class methods
  +[HMDXPCMessageFilter policyClasses]
  +[HMDXPCMessageFilter canInitWithMessage:]

  // instance methods
  -[HMDXPCMessageFilter initWithMessage:]
  -[HMDXPCMessageFilter .cxx_destruct]
  -[HMDXPCMessageFilter connection]


HMDCloudShareTrustManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMBCloudZoneDelegate, HMBLocalZoneDelegate, HMDCloudShareMessengerDelegate, HMDCloudShareParticipantsManagerDataSource, HMDCloudShareParticipantsManagerDelegate, HMDDatabaseDelegate, HMFLogging, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  <HMDDatabase> *database
 @property  HMDCloudShareMessenger *cloudShareMessenger
 @property  BOOL ownedTrust
 @property  long long configureState
 @property  HMBCloudZone *cloudZone
 @property  HMBLocalZone *localZone
 @property  HMDCloudShareParticipantsManager *cloudShareParticipantManager
 @property  HMFTimer *requestInviteTimer
 @property  HMBShareUserID *ownerCloudShareID
 @property  @? participantsManagerFactory
 @property  @? requestInviteTimerFactory
 @property  <HMDCloudShareTrustManagerDataSource> *dataSource
 @property  <HMDCloudShareTrustManagerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCloudShareTrustManager logCategory]

  // instance methods
  -[HMDCloudShareTrustManager _configure]
  -[HMDCloudShareTrustManager timerDidFire:]
  -[HMDCloudShareTrustManager configure]
  -[HMDCloudShareTrustManager logIdentifier]
  -[HMDCloudShareTrustManager setDataSource:]
  -[HMDCloudShareTrustManager attributeDescriptions]
  -[HMDCloudShareTrustManager .cxx_destruct]
  -[HMDCloudShareTrustManager database]
  -[HMDCloudShareTrustManager localZone]
  -[HMDCloudShareTrustManager queue]
  -[HMDCloudShareTrustManager dataSource]
  -[HMDCloudShareTrustManager setDelegate:]
  -[HMDCloudShareTrustManager delegate]
  -[HMDCloudShareTrustManager cloudZone]
  -[HMDCloudShareTrustManager setCloudZone:]
  -[HMDCloudShareTrustManager localZone:didProcessModelDeletion:]
  -[HMDCloudShareTrustManager localZone:didProcessModelCreation:]
  -[HMDCloudShareTrustManager localZone:didProcessModelUpdate:]
  -[HMDCloudShareTrustManager setLocalZone:]
  -[HMDCloudShareTrustManager cloudZone:didRemoveParticipantWithClientIdentifier:]
  -[HMDCloudShareTrustManager manager:shouldShareWithUser:]
  -[HMDCloudShareTrustManager canUseUntrustedAccountHandlesForParticipantManager:]
  -[HMDCloudShareTrustManager manager:didRequestSendForInvitation:toUser:]
  -[HMDCloudShareTrustManager messenger:didReceiveInvitationData:completion:]
  -[HMDCloudShareTrustManager messengerDidReceiveInvitationRequest:]
  -[HMDCloudShareTrustManager database:didCreateZoneWithName:isPrivate:]
  -[HMDCloudShareTrustManager database:didRemoveZoneWithName:isPrivate:]
  -[HMDCloudShareTrustManager initWithDatabase:isOwnedTrust:messageTargetUUID:queue:shareMessenger:ownerCloudShareID:]
  -[HMDCloudShareTrustManager homeDidBecomeTrustZoneCapable:]
  -[HMDCloudShareTrustManager configureState]
  -[HMDCloudShareTrustManager setConfigureState:]
  -[HMDCloudShareTrustManager cloudShareMessenger]
  -[HMDCloudShareTrustManager isOwnedTrust]
  -[HMDCloudShareTrustManager _configureWithOwnedZone]
  -[HMDCloudShareTrustManager _configureWithSharedZone]
  -[HMDCloudShareTrustManager _configureWithFetchZoneResult:error:]
  -[HMDCloudShareTrustManager _requestShareInvitationForSharedZone]
  -[HMDCloudShareTrustManager ownerCloudShareID]
  -[HMDCloudShareTrustManager _startRequestInviteTimer]
  -[HMDCloudShareTrustManager participantsManagerFactory]
  -[HMDCloudShareTrustManager setCloudShareParticipantManager:]
  -[HMDCloudShareTrustManager cloudShareParticipantManager]
  -[HMDCloudShareTrustManager _configureOwnerCloudShareIDWithCloudZone:]
  -[HMDCloudShareTrustManager setOwnerCloudShareID:]
  -[HMDCloudShareTrustManager _finishConfigure]
  -[HMDCloudShareTrustManager updateCurrentUserCloudShareID]
  -[HMDCloudShareTrustManager updateSharedUsersCloudShareIDs]
  -[HMDCloudShareTrustManager discoverUntrustedUsers]
  -[HMDCloudShareTrustManager _homeDidBecomeTrustZoneCapable:]
  -[HMDCloudShareTrustManager requestInviteTimer]
  -[HMDCloudShareTrustManager _didCreateZone]
  -[HMDCloudShareTrustManager _didRemoveZone]
  -[HMDCloudShareTrustManager requestInviteTimerFactory]
  -[HMDCloudShareTrustManager setRequestInviteTimer:]
  -[HMDCloudShareTrustManager _cancelRequestInviteTimer]
  -[HMDCloudShareTrustManager initWithDatabase:isOwnedTrust:messageTargetUUID:queue:ownerCloudShareID:]
  -[HMDCloudShareTrustManager removeTrust]
  -[HMDCloudShareTrustManager setParticipantsManagerFactory:]
  -[HMDCloudShareTrustManager setRequestInviteTimerFactory:]


AWDHomeKitHAPService : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasServiceType
 @property  NSString *serviceType

  // instance methods
  -[AWDHomeKitHAPService copyWithZone:]
  -[AWDHomeKitHAPService hasServiceType]
  -[AWDHomeKitHAPService setServiceType:]
  -[AWDHomeKitHAPService .cxx_destruct]
  -[AWDHomeKitHAPService serviceType]
  -[AWDHomeKitHAPService readFrom:]
  -[AWDHomeKitHAPService writeTo:]
  -[AWDHomeKitHAPService isEqual:]
  -[AWDHomeKitHAPService copyTo:]
  -[AWDHomeKitHAPService dictionaryRepresentation]
  -[AWDHomeKitHAPService mergeFrom:]


HMDDeviceSetupSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDDeviceSetupSessionInternal *internal
 @property  BOOL open
 @property  <HMDDeviceSetupSessionDelegate> *delegate
 @property  NSUUID *identifier
 @property  long long role
 @property  HMDHomeManager *homeManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDDeviceSetupSession logCategory]
  +[HMDDeviceSetupSession isRoleSupported:]

  // instance methods
  -[HMDDeviceSetupSession messageTargetUUID]
  -[HMDDeviceSetupSession messageDestination]
  -[HMDDeviceSetupSession messageReceiveQueue]
  -[HMDDeviceSetupSession logIdentifier]
  -[HMDDeviceSetupSession init]
  -[HMDDeviceSetupSession internal]
  -[HMDDeviceSetupSession .cxx_destruct]
  -[HMDDeviceSetupSession isOpen]
  -[HMDDeviceSetupSession identifier]
  -[HMDDeviceSetupSession clientQueue]
  -[HMDDeviceSetupSession open]
  -[HMDDeviceSetupSession __registerForMessages]
  -[HMDDeviceSetupSession messageDispatcher]
  -[HMDDeviceSetupSession isEqual:]
  -[HMDDeviceSetupSession role]
  -[HMDDeviceSetupSession setDelegate:]
  -[HMDDeviceSetupSession homeManager]
  -[HMDDeviceSetupSession setOpen:]
  -[HMDDeviceSetupSession delegate]
  -[HMDDeviceSetupSession _closeWithError:]
  -[HMDDeviceSetupSession _handleClose:]
  -[HMDDeviceSetupSession _handleReceiveData:]
  -[HMDDeviceSetupSession _sendRequestData:]
  -[HMDDeviceSetupSession initWithIdentifier:role:homeManager:]


HMDDeviceSetupSessionInternal : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long state
 @property  HMDHomeManager *homeManager
 @property  NSData *sessionData
 @property  NSDictionary *userInfo

  // class methods
  +[HMDDeviceSetupSessionInternal isSupported]
  +[HMDDeviceSetupSessionInternal allowedClasses]
  +[HMDDeviceSetupSessionInternal role]

  // instance methods
  -[HMDDeviceSetupSessionInternal setUserInfo:]
  -[HMDDeviceSetupSessionInternal initWithHomeManager:]
  -[HMDDeviceSetupSessionInternal setState:]
  -[HMDDeviceSetupSessionInternal .cxx_destruct]
  -[HMDDeviceSetupSessionInternal setSessionData:]
  -[HMDDeviceSetupSessionInternal userInfo]
  -[HMDDeviceSetupSessionInternal sessionData]
  -[HMDDeviceSetupSessionInternal state]
  -[HMDDeviceSetupSessionInternal homeManager]
  -[HMDDeviceSetupSessionInternal processSessionData:error:]


HMDDeviceSetupClientSession : HMDDeviceSetupSessionInternal <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDeviceSetupClientSession isSupported]
  +[HMDDeviceSetupClientSession allowedClasses]
  +[HMDDeviceSetupClientSession logCategory]
  +[HMDDeviceSetupClientSession role]

  // instance methods
  -[HMDDeviceSetupClientSession processSessionData:error:]


HMDDeviceSetupServerSession : HMDDeviceSetupSessionInternal <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDeviceSetupServerSession isSupported]
  +[HMDDeviceSetupServerSession allowedClasses]
  +[HMDDeviceSetupServerSession logCategory]
  +[HMDDeviceSetupServerSession role]

  // instance methods
  -[HMDDeviceSetupServerSession processSessionData:error:]


HMDAppleAccountSettings : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL educationMode
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  BOOL migrated
 @property  int circleChangedNotificationToken
 @property  int viewMembershipChangedNotificationToken
 @property  BOOL homeEnabled
 @property  BOOL keychainSyncEnabled
 @property  BOOL managed
 @property  BOOL ephemeral

  // class methods
  +[HMDAppleAccountSettings logCategory]
  +[HMDAppleAccountSettings sharedSettings]
  +[HMDAppleAccountSettings supportsCloudSettings]

  // instance methods
  -[HMDAppleAccountSettings isManaged]
  -[HMDAppleAccountSettings synchronize]
  -[HMDAppleAccountSettings init]
  -[HMDAppleAccountSettings isEphemeral]
  -[HMDAppleAccountSettings attributeDescriptions]
  -[HMDAppleAccountSettings dealloc]
  -[HMDAppleAccountSettings .cxx_destruct]
  -[HMDAppleAccountSettings clientQueue]
  -[HMDAppleAccountSettings __synchronize]
  -[HMDAppleAccountSettings isHomeEnabled]
  -[HMDAppleAccountSettings isKeychainSyncEnabled]
  -[HMDAppleAccountSettings isEducationMode]
  -[HMDAppleAccountSettings circleChangedNotificationToken]
  -[HMDAppleAccountSettings viewMembershipChangedNotificationToken]
  -[HMDAppleAccountSettings _notifyClientsOfUpdatedHomeState:userInitiated:]
  -[HMDAppleAccountSettings migrated]
  -[HMDAppleAccountSettings __migrateHomePreferences]
  -[HMDAppleAccountSettings __registerForKeychainChangeNotifications]
  -[HMDAppleAccountSettings _notifyClientsOfUpdatedKeychainSyncState:]
  -[HMDAppleAccountSettings __updateHomeEnabled:userInitiated:completionHandler:]
  -[HMDAppleAccountSettings setMigrated:]
  -[HMDAppleAccountSettings enableHome:userInitiated:]
  -[HMDAppleAccountSettings updateHomeEnabled:completionHandler:]
  -[HMDAppleAccountSettings setCircleChangedNotificationToken:]
  -[HMDAppleAccountSettings setViewMembershipChangedNotificationToken:]


HMDCloudShareMessenger : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *messageDispatcher
 @property  @? shareInvitationRetryHandler
 @property  <HMDCloudShareMessengerDelegate> *delegate
 @property  NSUUID *messageTargetUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDCloudShareMessenger logCategory]

  // instance methods
  -[HMDCloudShareMessenger messageTargetUUID]
  -[HMDCloudShareMessenger messageReceiveQueue]
  -[HMDCloudShareMessenger logIdentifier]
  -[HMDCloudShareMessenger .cxx_destruct]
  -[HMDCloudShareMessenger workQueue]
  -[HMDCloudShareMessenger unconfigure]
  -[HMDCloudShareMessenger messageDispatcher]
  -[HMDCloudShareMessenger setDelegate:]
  -[HMDCloudShareMessenger delegate]
  -[HMDCloudShareMessenger configureWithHome:]
  -[HMDCloudShareMessenger requestShareInvitationDataFromUser:]
  -[HMDCloudShareMessenger sendShareInvitationData:toUser:minimumHomeKitVersion:requiredSupportedFeatures:completion:]
  -[HMDCloudShareMessenger initWithMessageTargetUUID:workQueue:]
  -[HMDCloudShareMessenger initWithMessageTargetUUID:workQueue:messageDispatcher:]
  -[HMDCloudShareMessenger handleInviteMessage:]
  -[HMDCloudShareMessenger handleRequestInviteMessage:]
  -[HMDCloudShareMessenger _sendShareInvitationData:toUser:minimumHomeKitVersion:requiredSupportedFeatures:retryCount:completion:]
  -[HMDCloudShareMessenger shareInvitationRetryHandler]
  -[HMDCloudShareMessenger setShareInvitationRetryHandler:]


HMDUserNotificationCenter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, UNUserNotificationCenterDelegate>
 @property  HMDHomeManager *homeManager
 @property  UNUserNotificationCenter *userNotificationCenter
 @property  NSMutableDictionary *notificationRequests
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserNotificationCenter supportsSecureCoding]

  // instance methods
  -[HMDUserNotificationCenter init]
  -[HMDUserNotificationCenter .cxx_destruct]
  -[HMDUserNotificationCenter encodeWithCoder:]
  -[HMDUserNotificationCenter userNotificationCenter]
  -[HMDUserNotificationCenter initWithUserNotificationCenter:]
  -[HMDUserNotificationCenter setHomeManager:]
  -[HMDUserNotificationCenter sortDescriptors]
  -[HMDUserNotificationCenter setBadgeNumber:]
  -[HMDUserNotificationCenter notificationCategories]
  -[HMDUserNotificationCenter homeManager]
  -[HMDUserNotificationCenter userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:]
  -[HMDUserNotificationCenter initWithCoder:]
  -[HMDUserNotificationCenter notificationRequests]
  -[HMDUserNotificationCenter configureHomeManager:]
  -[HMDUserNotificationCenter sortedRequestsByDate]
  -[HMDUserNotificationCenter _removeRequestWithIdentifiersFromNotificationCenter:]
  -[HMDUserNotificationCenter _removeRequestWithIdentifier:]
  -[HMDUserNotificationCenter _showNotification:]
  -[HMDUserNotificationCenter createNotificationAttachmentWithIdentifier:forFileAtPath:]
  -[HMDUserNotificationCenter showNotificationWithTitle:body:threadIdentifier:categoryIdentifier:requestIdentifier:date:attachments:userInfo:shouldIgnoreDoNotDisturb:]
  -[HMDUserNotificationCenter updateContent:forNotificationWithRequestIdentifier:]
  -[HMDUserNotificationCenter cullBulletinsToCount:]
  -[HMDUserNotificationCenter removeRequestWithIdentifier:]
  -[HMDUserNotificationCenter registerNotificationCategories]
  -[HMDUserNotificationCenter insertRequestWithTitle:snapshotData:message:requestIdentifier:date:bulletinType:actionURL:bulletinContext:actionContext:]


HMDBulletinBoard : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, NSSecureCoding, HMDCameraBulletinBoard>
 @property  <HMDFileManager> *fileManager
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDUserNotificationCenter *notificationCenter
 @property  NSMutableDictionary *characteristicTuples
 @property  HMDHomeManager *homeManager
 @property  Class persistentStoreClass
 @property  Class doorbellBulletinUtilitiesClass
 @property  HMDLogEventDispatcher *logEventDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBulletinBoard supportsSecureCoding]
  +[HMDBulletinBoard logCategory]
  +[HMDBulletinBoard sharedBulletinBoard]
  +[HMDBulletinBoard isBulletinSupportedForNonSecureCharacteristicType:serviceType:]
  +[HMDBulletinBoard isCriticalNonSecureServiceType:]
  +[HMDBulletinBoard bulletinSupportedCharacteristicsForService:]
  +[HMDBulletinBoard _targetCurrentCharacteristicTypeMap]
  +[HMDBulletinBoard _supportedSecureServices]
  +[HMDBulletinBoard _supportedNonSecureServices]
  +[HMDBulletinBoard isBulletinSupportedForCharacteristicType:serviceType:]
  +[HMDBulletinBoard characteristicTupleKeyFromServiceContextID:currentType:]
  +[HMDBulletinBoard presentationValueOfCharacteristic:equalTo:]

  // instance methods
  -[HMDBulletinBoard fileManager]
  -[HMDBulletinBoard notificationCenter]
  -[HMDBulletinBoard setWorkQueue:]
  -[HMDBulletinBoard init]
  -[HMDBulletinBoard archive]
  -[HMDBulletinBoard .cxx_destruct]
  -[HMDBulletinBoard workQueue]
  -[HMDBulletinBoard setNotificationCenter:]
  -[HMDBulletinBoard encodeWithCoder:]
  -[HMDBulletinBoard setHomeManager:]
  -[HMDBulletinBoard persistentStoreClass]
  -[HMDBulletinBoard homeManager]
  -[HMDBulletinBoard initWithCoder:]
  -[HMDBulletinBoard configureHomeManager:]
  -[HMDBulletinBoard refreshHomeBadgeNumber]
  -[HMDBulletinBoard removeBulletinsForAccessory:]
  -[HMDBulletinBoard updateBulletinForFirmwareUpdateInHome:]
  -[HMDBulletinBoard insertBulletinsForChangedCharacteristics:changedByThisDevice:completion:]
  -[HMDBulletinBoard logEventDispatcher]
  -[HMDBulletinBoard initWithNotificationCenter:fileManager:workQueue:]
  -[HMDBulletinBoard _insertImageBulletinsForChangedCharacteristics:snapshotData:completion:]
  -[HMDBulletinBoard _updateCharacteristicTupleFor:withCurrentType:changedByThisDevice:]
  -[HMDBulletinBoard _shouldPostBulletinOnCurrentValueChangeForCharacteristic:]
  -[HMDBulletinBoard _hasDuplicateBulletinForCharacteristic:]
  -[HMDBulletinBoard _insertRequestWithTitle:snapshotData:message:requestIdentifier:date:bulletinType:actionURL:bulletinContext:actionContext:]
  -[HMDBulletinBoard removeBulletinWithRecordID:]
  -[HMDBulletinBoard _requestWithRecordID:]
  -[HMDBulletinBoard _removeBulletinsUsingPredicate:]
  -[HMDBulletinBoard _doorbellPressNotificationsNearDate:forCameraProfile:]
  -[HMDBulletinBoard doorbellBulletinUtilitiesClass]
  -[HMDBulletinBoard notificationRequestsForCameraClipUUIDs:]
  -[HMDBulletinBoard bulletinReasonForChangedCharacteristic:]
  -[HMDBulletinBoard updateMessageForDoorbellPressNotificationRequestWithIdentifier:cameraProfile:]
  -[HMDBulletinBoard _submitLogEventForDoorbellPressedBulletinWithDate:significantEvents:]
  -[HMDBulletinBoard removeRedundantSignificantEventNotificationsForSignificantEvents:]
  -[HMDBulletinBoard _updateDoorbellUserInfo:withSignificantEventUserInfo:]
  -[HMDBulletinBoard messageForChangedCharacteristic:withSignificantEvents:]
  -[HMDBulletinBoard characteristicTuples]
  -[HMDBulletinBoard updateDoorbellNotificationsNearDate:forBulletin:]
  -[HMDBulletinBoard _copyItemAtURL:toDirectory:]
  -[HMDBulletinBoard attachmentsWithFileURL:]
  -[HMDBulletinBoard _submitLogEventForSignificantEventBulletin:]
  -[HMDBulletinBoard insertImageBulletinsForChangedCharacteristics:snapshotData:completion:]
  -[HMDBulletinBoard insertCameraClipSignificantEventBulletin:]
  -[HMDBulletinBoard doorbellPressNotificationsNearDate:forCameraProfile:]
  -[HMDBulletinBoard insertBulletinForIncomingInvitation:]
  -[HMDBulletinBoard insertBulletinForSecureTrigger:]
  -[HMDBulletinBoard insertReachabilityEventBulletinForAccessory:reachable:date:]
  -[HMDBulletinBoard insertHomeHubReachabilityBulletinForHome:reachable:]
  -[HMDBulletinBoard removeBulletinsForHome:]
  -[HMDBulletinBoard removeBulletinsForService:]
  -[HMDBulletinBoard removeBulletinsForTrigger:]
  -[HMDBulletinBoard removeAllBulletins]
  -[HMDBulletinBoard isTargetCharacteristic:matchCurrentCharacteristic:]
  -[HMDBulletinBoard insertCameraAccessModeChangedBulletin:]
  -[HMDBulletinBoard setCharacteristicTuples:]
  -[HMDBulletinBoard setPersistentStoreClass:]
  -[HMDBulletinBoard setDoorbellBulletinUtilitiesClass:]
  -[HMDBulletinBoard setLogEventDispatcher:]


HMDTimerTrigger : HMDTrigger
 @property  NSDate *fireDate
 @property  NSTimeZone *fireDateTimeZone
 @property  NSString *significantEvent
 @property  NSDateComponents *significantEventOffset
 @property  NSDateComponents *fireRepeatInterval
 @property  NSArray *recurrences
 @property  NSString *timerID
 @property  NSTimer *timer
 @property  NSDate *currentFireDate

  // class methods
  +[HMDTimerTrigger supportsSecureCoding]
  +[HMDTimerTrigger logCategory]
  +[HMDTimerTrigger validateTriggerModel:message:currentFireDate:]
  +[HMDTimerTrigger validateWholeMinuteDate:onCalendar:]
  +[HMDTimerTrigger getCalendar:]
  +[HMDTimerTrigger validateRecurrence:calendar:fireDate:]
  +[HMDTimerTrigger validateRecurrences:]
  +[HMDTimerTrigger validateSignificantOffset:]

  // instance methods
  -[HMDTimerTrigger _activateWithCompletion:]
  -[HMDTimerTrigger timer]
  -[HMDTimerTrigger _timerTriggered]
  -[HMDTimerTrigger _startTimer:]
  -[HMDTimerTrigger dealloc]
  -[HMDTimerTrigger setRecurrences:]
  -[HMDTimerTrigger setTimer:]
  -[HMDTimerTrigger significantEvent]
  -[HMDTimerTrigger recurrences]
  -[HMDTimerTrigger .cxx_destruct]
  -[HMDTimerTrigger fireDate]
  -[HMDTimerTrigger _stopTimer]
  -[HMDTimerTrigger encodeWithCoder:]
  -[HMDTimerTrigger timerID]
  -[HMDTimerTrigger timerFired:]
  -[HMDTimerTrigger setFireDate:]
  -[HMDTimerTrigger _registerForMessages]
  -[HMDTimerTrigger initWithName:uuid:]
  -[HMDTimerTrigger significantEventOffset]
  -[HMDTimerTrigger setSignificantEvent:]
  -[HMDTimerTrigger setSignificantEventOffset:]
  -[HMDTimerTrigger _startTimerWithFireDate:]
  -[HMDTimerTrigger triggerType]
  -[HMDTimerTrigger _nextFireDate]
  -[HMDTimerTrigger _serializeForAdd]
  -[HMDTimerTrigger dumpState]
  -[HMDTimerTrigger setTimerID:]
  -[HMDTimerTrigger initWithCoder:]
  -[HMDTimerTrigger shouldActivateOnLocalDevice]
  -[HMDTimerTrigger emptyModelObject]
  -[HMDTimerTrigger _transactionObjectUpdated:newValues:message:]
  -[HMDTimerTrigger _transactionObjectRemoved:message:]
  -[HMDTimerTrigger initWithModel:home:message:]
  -[HMDTimerTrigger configure:messageDispatcher:queue:]
  -[HMDTimerTrigger modelObjectWithChangeType:]
  -[HMDTimerTrigger backingStoreObjects:]
  -[HMDTimerTrigger completeConfiguration]
  -[HMDTimerTrigger fireDateTimeZone]
  -[HMDTimerTrigger fireRepeatInterval]
  -[HMDTimerTrigger getCalendar]
  -[HMDTimerTrigger getFireInterval]
  -[HMDTimerTrigger setCurrentFireDate:]
  -[HMDTimerTrigger _handleUpdateTimerTriggerPropertiesRequest:]
  -[HMDTimerTrigger setFireDateTimeZone:]
  -[HMDTimerTrigger setFireRepeatInterval:]
  -[HMDTimerTrigger _handleUpdateTimerTriggerPropertiesModel:message:]
  -[HMDTimerTrigger _reactivateFireDateTrigger]
  -[HMDTimerTrigger _reactivateSignificantEventTrigger]
  -[HMDTimerTrigger _disableTimerOffReactivationFailure]
  -[HMDTimerTrigger _nextSignificantEventFireDate]
  -[HMDTimerTrigger _startTimerWithSignificantEventDate:]
  -[HMDTimerTrigger _reactiveTriggerAfterDelay]
  -[HMDTimerTrigger _closestDatesForStartDate:earliestDate:timeZone:deliveryRepeatInterval:returnDateBefore:returnDateAfter:]
  -[HMDTimerTrigger _shouldExecuteActionSet]
  -[HMDTimerTrigger _reactivateTrigger]
  -[HMDTimerTrigger _handleTimerTriggerUpdate:message:]
  -[HMDTimerTrigger timerTriggered]
  -[HMDTimerTrigger currentFireDate]
  -[HMDTimerTrigger nsTimerTriggered:]


HMDTimerTriggerModel : HMDTriggerModel
 @property  NSDate *fireDate
 @property  NSData *fireDateTimeZone
 @property  NSString *significantEvent
 @property  NSData *significantEventOffset
 @property  NSData *fireRepeatInterval
 @property  NSData *recurrences

  // class methods
  +[HMDTimerTriggerModel properties]

  // instance methods
  -[HMDTimerTriggerModel createPayload]


HMDCameraSignificantEventNotificationModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSNumber *significantEvent
 @property  NSNumber *confidenceLevel
 @property  NSDate *dateOfOccurrence
 @property  NSNumber *timeOffsetWithinClip
 @property  HMBModelCloudReference *associatedClip
 @property  CKAsset *heroFrameAsset
 @property  CKAsset *faceCropAsset
 @property  NSDictionary *homePresenceByPairingIdentity

  // class methods
  +[HMDCameraSignificantEventNotificationModel hmbQueries]
  +[HMDCameraSignificantEventNotificationModel hmbExternalRecordType]
  +[HMDCameraSignificantEventNotificationModel hmbProperties]
  +[HMDCameraSignificantEventNotificationModel significantEventsBetweenDatesQueryWithIsAscending:]

  // instance methods
  -[HMDCameraSignificantEventNotificationModel createClipSignificantEventWithCameraProfileUUID:faceClassification:]


HMDTargetConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *uuid
 @property  NSNumber *identifier
 @property  NSString *name
 @property  long long category
 @property  NSArray *buttonConfiguration

  // instance methods
  -[HMDTargetConfiguration category]
  -[HMDTargetConfiguration init]
  -[HMDTargetConfiguration uuid]
  -[HMDTargetConfiguration .cxx_destruct]
  -[HMDTargetConfiguration name]
  -[HMDTargetConfiguration identifier]
  -[HMDTargetConfiguration isEqual:]
  -[HMDTargetConfiguration setName:]
  -[HMDTargetConfiguration buttonConfiguration]
  -[HMDTargetConfiguration initWithIdentifier:name:category:buttonConfiguration:]
  -[HMDTargetConfiguration initWithAccessory:buttonConfiguration:]
  -[HMDTargetConfiguration setButtonConfiguration:]


AWDHomeKitBroadcastEventReceived : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasIsExpectedGSN
 @property  BOOL isExpectedGSN
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasCertified
 @property  int certified

  // instance methods
  -[AWDHomeKitBroadcastEventReceived copyWithZone:]
  -[AWDHomeKitBroadcastEventReceived .cxx_destruct]
  -[AWDHomeKitBroadcastEventReceived timestamp]
  -[AWDHomeKitBroadcastEventReceived setTimestamp:]
  -[AWDHomeKitBroadcastEventReceived setHasTimestamp:]
  -[AWDHomeKitBroadcastEventReceived readFrom:]
  -[AWDHomeKitBroadcastEventReceived writeTo:]
  -[AWDHomeKitBroadcastEventReceived isEqual:]
  -[AWDHomeKitBroadcastEventReceived copyTo:]
  -[AWDHomeKitBroadcastEventReceived dictionaryRepresentation]
  -[AWDHomeKitBroadcastEventReceived mergeFrom:]
  -[AWDHomeKitBroadcastEventReceived hasTimestamp]
  -[AWDHomeKitBroadcastEventReceived vendorDetails]
  -[AWDHomeKitBroadcastEventReceived setVendorDetails:]
  -[AWDHomeKitBroadcastEventReceived hasVendorDetails]
  -[AWDHomeKitBroadcastEventReceived certified]
  -[AWDHomeKitBroadcastEventReceived setCertified:]
  -[AWDHomeKitBroadcastEventReceived setHasCertified:]
  -[AWDHomeKitBroadcastEventReceived hasCertified]
  -[AWDHomeKitBroadcastEventReceived certifiedAsString:]
  -[AWDHomeKitBroadcastEventReceived StringAsCertified:]
  -[AWDHomeKitBroadcastEventReceived setIsExpectedGSN:]
  -[AWDHomeKitBroadcastEventReceived setHasIsExpectedGSN:]
  -[AWDHomeKitBroadcastEventReceived hasIsExpectedGSN]
  -[AWDHomeKitBroadcastEventReceived isExpectedGSN]


HMDAccessoryDataStreamAdapter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDDataStreamBulkSendListener>
 @property  BOOL sessionOpenInProgress
 @property  BOOL bulkSendActive
 @property  <HMDDataStreamBulkSendSession> *currentBulkSendSession
 @property  @? pendingOpenSessionCallback
 @property  BOOL transportReady
 @property  BOOL didBulkSendFail
 @property  BOOL didBulkSendComplete
 @property  <HMDAccessoryDataStreamAdapterDelegate> *delegate
 @property  HMDHAPAccessory *accessory
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *fileType
 @property  NSString *reason
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessoryDataStreamAdapter logCategory]

  // instance methods
  -[HMDAccessoryDataStreamAdapter logIdentifier]
  -[HMDAccessoryDataStreamAdapter shutDown]
  -[HMDAccessoryDataStreamAdapter attributeDescriptions]
  -[HMDAccessoryDataStreamAdapter readData]
  -[HMDAccessoryDataStreamAdapter dealloc]
  -[HMDAccessoryDataStreamAdapter .cxx_destruct]
  -[HMDAccessoryDataStreamAdapter workQueue]
  -[HMDAccessoryDataStreamAdapter accessory]
  -[HMDAccessoryDataStreamAdapter fileType]
  -[HMDAccessoryDataStreamAdapter setDelegate:]
  -[HMDAccessoryDataStreamAdapter reason]
  -[HMDAccessoryDataStreamAdapter delegate]
  -[HMDAccessoryDataStreamAdapter _openSession]
  -[HMDAccessoryDataStreamAdapter currentBulkSendSession]
  -[HMDAccessoryDataStreamAdapter isSessionOpenInProgress]
  -[HMDAccessoryDataStreamAdapter setCurrentBulkSendSession:]
  -[HMDAccessoryDataStreamAdapter accessoryDidCloseDataStream:]
  -[HMDAccessoryDataStreamAdapter transportReady]
  -[HMDAccessoryDataStreamAdapter didBulkSendFail]
  -[HMDAccessoryDataStreamAdapter didBulkSendComplete]
  -[HMDAccessoryDataStreamAdapter pendingOpenSessionCallback]
  -[HMDAccessoryDataStreamAdapter _callPendingOpenSessionCallbackWithResult:error:]
  -[HMDAccessoryDataStreamAdapter setTransportReady:]
  -[HMDAccessoryDataStreamAdapter _setUpTransport]
  -[HMDAccessoryDataStreamAdapter setPendingOpenSessionCallback:]
  -[HMDAccessoryDataStreamAdapter _bulkSendDidFail]
  -[HMDAccessoryDataStreamAdapter _handleFrame:]
  -[HMDAccessoryDataStreamAdapter _bulkSendDidComplete]
  -[HMDAccessoryDataStreamAdapter callPendingOpenSessionCallbackWithResult:error:]
  -[HMDAccessoryDataStreamAdapter isBulkSendActive]
  -[HMDAccessoryDataStreamAdapter setDidBulkSendFail:]
  -[HMDAccessoryDataStreamAdapter setDidBulkSendComplete:]
  -[HMDAccessoryDataStreamAdapter _handleAccessoryDidClose]
  -[HMDAccessoryDataStreamAdapter accessory:didReceiveBulkSessionCandidate:]
  -[HMDAccessoryDataStreamAdapter accessoryDidStartListening:]
  -[HMDAccessoryDataStreamAdapter initWithAccessory:workQueue:fileType:reason:]
  -[HMDAccessoryDataStreamAdapter setUpWithCallback:]


AWDHomeKitCharacteristicEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasContainsValue
 @property  BOOL containsValue

  // instance methods
  -[AWDHomeKitCharacteristicEvent copyWithZone:]
  -[AWDHomeKitCharacteristicEvent readFrom:]
  -[AWDHomeKitCharacteristicEvent writeTo:]
  -[AWDHomeKitCharacteristicEvent isEqual:]
  -[AWDHomeKitCharacteristicEvent copyTo:]
  -[AWDHomeKitCharacteristicEvent dictionaryRepresentation]
  -[AWDHomeKitCharacteristicEvent mergeFrom:]
  -[AWDHomeKitCharacteristicEvent setContainsValue:]
  -[AWDHomeKitCharacteristicEvent setHasContainsValue:]
  -[AWDHomeKitCharacteristicEvent hasContainsValue]
  -[AWDHomeKitCharacteristicEvent containsValue]


HMDBackgroundTaskAgentTimer : NSObject /usr/lib/libc++.1.dylib <HMFLogging>
 @property  NSString *timerID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBackgroundTaskAgentTimer logCategory]

  // instance methods
  -[HMDBackgroundTaskAgentTimer logIdentifier]
  -[HMDBackgroundTaskAgentTimer .cxx_destruct]
  -[HMDBackgroundTaskAgentTimer timerID]
  -[HMDBackgroundTaskAgentTimer initWithTimerID:]
  -[HMDBackgroundTaskAgentTimer _stopTimer:]
  -[HMDBackgroundTaskAgentTimer _startTimer:home:completionHandler:]


AWDHomeKitTargetControllerCommand : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasCommand
 @property  int command
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasTransportType
 @property  int transportType
 @property  BOOL hasCertified
 @property  int certified

  // instance methods
  -[AWDHomeKitTargetControllerCommand copyWithZone:]
  -[AWDHomeKitTargetControllerCommand transportTypeAsString:]
  -[AWDHomeKitTargetControllerCommand command]
  -[AWDHomeKitTargetControllerCommand .cxx_destruct]
  -[AWDHomeKitTargetControllerCommand setHasTransportType:]
  -[AWDHomeKitTargetControllerCommand timestamp]
  -[AWDHomeKitTargetControllerCommand setTimestamp:]
  -[AWDHomeKitTargetControllerCommand hasCommand]
  -[AWDHomeKitTargetControllerCommand setHasCommand:]
  -[AWDHomeKitTargetControllerCommand commandAsString:]
  -[AWDHomeKitTargetControllerCommand StringAsCommand:]
  -[AWDHomeKitTargetControllerCommand transportType]
  -[AWDHomeKitTargetControllerCommand setHasTimestamp:]
  -[AWDHomeKitTargetControllerCommand readFrom:]
  -[AWDHomeKitTargetControllerCommand writeTo:]
  -[AWDHomeKitTargetControllerCommand setCommand:]
  -[AWDHomeKitTargetControllerCommand isEqual:]
  -[AWDHomeKitTargetControllerCommand StringAsTransportType:]
  -[AWDHomeKitTargetControllerCommand hasTransportType]
  -[AWDHomeKitTargetControllerCommand copyTo:]
  -[AWDHomeKitTargetControllerCommand dictionaryRepresentation]
  -[AWDHomeKitTargetControllerCommand mergeFrom:]
  -[AWDHomeKitTargetControllerCommand hasTimestamp]
  -[AWDHomeKitTargetControllerCommand setTransportType:]
  -[AWDHomeKitTargetControllerCommand vendorDetails]
  -[AWDHomeKitTargetControllerCommand setVendorDetails:]
  -[AWDHomeKitTargetControllerCommand hasVendorDetails]
  -[AWDHomeKitTargetControllerCommand certified]
  -[AWDHomeKitTargetControllerCommand setCertified:]
  -[AWDHomeKitTargetControllerCommand setHasCertified:]
  -[AWDHomeKitTargetControllerCommand hasCertified]
  -[AWDHomeKitTargetControllerCommand certifiedAsString:]
  -[AWDHomeKitTargetControllerCommand StringAsCertified:]


HMDAccessoryAllowedHostsPreviewHelper : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDNetworkRouterFirewallRuleManagerClient>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessoryAllowedHostsPreviewHelper helperForHome:]

  // instance methods
  -[HMDAccessoryAllowedHostsPreviewHelper attributeDescriptions]
  -[HMDAccessoryAllowedHostsPreviewHelper .cxx_destruct]
  -[HMDAccessoryAllowedHostsPreviewHelper fetchAllowedHostsForAccessory:completion:]
  -[HMDAccessoryAllowedHostsPreviewHelper watchedAccessoryIdentifiersForFirewallRuleManager:]


HMDAssistantCharacteristicTuple : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *attribute
 @property  SAHAAttributeValue *value

  // instance methods
  -[HMDAssistantCharacteristicTuple init]
  -[HMDAssistantCharacteristicTuple .cxx_destruct]
  -[HMDAssistantCharacteristicTuple attribute]
  -[HMDAssistantCharacteristicTuple value]
  -[HMDAssistantCharacteristicTuple initWithAttribute:value:]


HMDPresenceEvent : HMDEvent <NSSecureCoding, HMFDumpState, HMFLogging, HMDHomeMessageReceiver, HMDTriggerEventProtocol>
 @property  NSString *presenceType
 @property  HMPresenceEventActivation *activation
 @property  NSMutableDictionary *users
 @property  NSMutableArray *userUUIDs
 @property  BOOL currentStatus
 @property  HMDEventTriggerExecutionSession *executionSession
 @property  unsigned long activationGranularity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDPresenceEvent supportsSecureCoding]
  +[HMDPresenceEvent logCategory]

  // instance methods
  -[HMDPresenceEvent dealloc]
  -[HMDPresenceEvent .cxx_destruct]
  -[HMDPresenceEvent removeUser:]
  -[HMDPresenceEvent encodeWithCoder:]
  -[HMDPresenceEvent _registerForMessages]
  -[HMDPresenceEvent isActive]
  -[HMDPresenceEvent currentStatus]
  -[HMDPresenceEvent users]
  -[HMDPresenceEvent setCurrentStatus:]
  -[HMDPresenceEvent initWithCoder:]
  -[HMDPresenceEvent presenceType]
  -[HMDPresenceEvent activation]
  -[HMDPresenceEvent activationGranularity]
  -[HMDPresenceEvent setPresenceType:]
  -[HMDPresenceEvent emptyModelObject]
  -[HMDPresenceEvent _transactionObjectUpdated:newValues:message:]
  -[HMDPresenceEvent _transactionObjectRemoved:message:]
  -[HMDPresenceEvent _activate:completionHandler:]
  -[HMDPresenceEvent modelObjectWithChangeType:]
  -[HMDPresenceEvent createPayload]
  -[HMDPresenceEvent initWithModel:home:]
  -[HMDPresenceEvent _handleUpdateRequest:]
  -[HMDPresenceEvent analyticsTriggerEventData]
  -[HMDPresenceEvent _addUser:]
  -[HMDPresenceEvent userUUIDs]
  -[HMDPresenceEvent _updateUsers:payload:home:]
  -[HMDPresenceEvent configure:messageDispatcher:queue:delegate:]
  -[HMDPresenceEvent createClientPayload]
  -[HMDPresenceEvent createDaemonPayload]
  -[HMDPresenceEvent presenceTypeForClient]
  -[HMDPresenceEvent _handleHomePresenceUpdate:]
  -[HMDPresenceEvent setExecutionSession:]
  -[HMDPresenceEvent _evaluatePresenceEventForHomePresenceUpdate:]
  -[HMDPresenceEvent evaluateWithHomePresenceUpdate:]
  -[HMDPresenceEvent executionSession]
  -[HMDPresenceEvent evaluateWithUserPresence:]
  -[HMDPresenceEvent evaluateWithHomePresence:]
  -[HMDPresenceEvent thisUser]
  -[HMDPresenceEvent _removeAllUsers]
  -[HMDPresenceEvent _updatePresenceType:payload:]
  -[HMDPresenceEvent analyticsPresenceEventData]
  -[HMDPresenceEvent didEndExecutionSession:]
  -[HMDPresenceEvent createPresenceEventPayload:]
  -[HMDPresenceEvent compatibleWithUser:]


HMDPresenceEventModel : HMDEventModel
 @property  NSString *presenceType
 @property  NSNumber *activation
 @property  NSArray *users

  // class methods
  +[HMDPresenceEventModel properties]
  +[HMDPresenceEventModel eventModelWithDictionary:home:eventTriggerUUID:message:]


HMDDeviceDiscoveryOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <IDSServiceDelegate>
 @property  IDSService *service
 @property  HMDAccount *account
 @property  NSSet *devices
 @property  @? discoveryBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDeviceDiscoveryOperation timeout]
  +[HMDDeviceDiscoveryOperation logCategory]

  // instance methods
  -[HMDDeviceDiscoveryOperation service:account:incomingMessage:fromID:context:]
  -[HMDDeviceDiscoveryOperation main]
  -[HMDDeviceDiscoveryOperation setQualityOfService:]
  -[HMDDeviceDiscoveryOperation account]
  -[HMDDeviceDiscoveryOperation .cxx_destruct]
  -[HMDDeviceDiscoveryOperation devices]
  -[HMDDeviceDiscoveryOperation cancelWithError:]
  -[HMDDeviceDiscoveryOperation service]
  -[HMDDeviceDiscoveryOperation initWithAccount:]
  -[HMDDeviceDiscoveryOperation initWithAccount:timeout:]
  -[HMDDeviceDiscoveryOperation initWithAccount:service:timeout:]
  -[HMDDeviceDiscoveryOperation discoveryBlock]
  -[HMDDeviceDiscoveryOperation setDiscoveryBlock:]


HMDDatabaseCKOperationCompletionEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *containerIdentifier
 @property  NSError *error

  // class methods
  +[HMDDatabaseCKOperationCompletionEvent uuid]

  // instance methods
  -[HMDDatabaseCKOperationCompletionEvent containerIdentifier]
  -[HMDDatabaseCKOperationCompletionEvent .cxx_destruct]
  -[HMDDatabaseCKOperationCompletionEvent initWithContainerIdentifier:error:]
  -[HMDDatabaseCKOperationCompletionEvent error]
  -[HMDDatabaseCKOperationCompletionEvent AWDMessageType]
  -[HMDDatabaseCKOperationCompletionEvent metricForAWD]


HMDEventTrigger : HMDTrigger <HMDEventDelegate, HMFLogging>
 @property  NSMutableArray *currentEvents
 @property  NSArray *characteristicEvents
 @property  NSArray *characteristicBaseEvents
 @property  NSArray *locationEvents
 @property  NSArray *calendarEvents
 @property  NSArray *significantTimeEvents
 @property  NSArray *durationEvents
 @property  NSArray *charThresholdEvents
 @property  NSArray *presenceEvents
 @property  NSArray *triggerEvents
 @property  NSArray *endEvents
 @property  NSArray *events
 @property  NSPredicate *evaluationCondition
 @property  NSArray *recurrences
 @property  BOOL executeOnce
 @property  HMDPredicateUtilities *predicateUtilities
 @property  HMDEventTriggerExecutionSession *executionSession
 @property  HMDEventTriggerUserConfirmationSession *userConfirmationSession
 @property  unsigned long activationType
 @property  unsigned long activationState
 @property  BOOL computedActive
 @property  BOOL migratedEventsToRecords
 @property  NSArray *timeEvents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDEventTrigger supportsSecureCoding]
  +[HMDEventTrigger __validateRecurrences:]
  +[HMDEventTrigger logCategory]
  +[HMDEventTrigger hasMessageReceiverChildren]

  // instance methods
  -[HMDEventTrigger addEvent:]
  -[HMDEventTrigger events]
  -[HMDEventTrigger _activateWithCompletion:]
  -[HMDEventTrigger currentEvents]
  -[HMDEventTrigger dealloc]
  -[HMDEventTrigger setExecuteOnce:]
  -[HMDEventTrigger setActivationState:]
  -[HMDEventTrigger recurrences]
  -[HMDEventTrigger executeOnce]
  -[HMDEventTrigger endEvents]
  -[HMDEventTrigger setCurrentEvents:]
  -[HMDEventTrigger .cxx_destruct]
  -[HMDEventTrigger removeUser:]
  -[HMDEventTrigger encodeWithCoder:]
  -[HMDEventTrigger _removeEvents:]
  -[HMDEventTrigger timerFired:]
  -[HMDEventTrigger _registerForMessages]
  -[HMDEventTrigger triggerType]
  -[HMDEventTrigger removeEvent:]
  -[HMDEventTrigger invalidate]
  -[HMDEventTrigger removeAccessory:]
  -[HMDEventTrigger removeService:]
  -[HMDEventTrigger activationState]
  -[HMDEventTrigger dumpState]
  -[HMDEventTrigger activationType]
  -[HMDEventTrigger setActivationType:]
  -[HMDEventTrigger initWithCoder:]
  -[HMDEventTrigger triggerEvents]
  -[HMDEventTrigger removeCharacteristic:]
  -[HMDEventTrigger shouldActivateOnLocalDevice]
  -[HMDEventTrigger emptyModelObject]
  -[HMDEventTrigger sendTriggerFiredNotification:]
  -[HMDEventTrigger _isTriggerFiredNotificationEntitled]
  -[HMDEventTrigger shouldEncodeLastFireDate:]
  -[HMDEventTrigger _transactionObjectUpdated:newValues:message:]
  -[HMDEventTrigger _transactionObjectRemoved:message:]
  -[HMDEventTrigger modelObjectWithChangeType:version:]
  -[HMDEventTrigger messageReceiverChildren]
  -[HMDEventTrigger initWithModel:home:message:]
  -[HMDEventTrigger requiresDataVersion4]
  -[HMDEventTrigger compatible:user:]
  -[HMDEventTrigger fixupForReplacementAccessory:]
  -[HMDEventTrigger configure:messageDispatcher:queue:]
  -[HMDEventTrigger userDidConfirmExecute:completionHandler:]
  -[HMDEventTrigger backingStoreObjects:]
  -[HMDEventTrigger characteristicEvents]
  -[HMDEventTrigger setEvaluationCondition:]
  -[HMDEventTrigger addEventsFromMessage:]
  -[HMDEventTrigger generateAnalyticsDataDueToTriggerAddition:]
  -[HMDEventTrigger checkSharedEventTriggerActivationResidentRequirement:]
  -[HMDEventTrigger isEventTriggerOnRemoteGatewayForAccessory:]
  -[HMDEventTrigger isEventTriggerOnLocalDeviceForAccessory:]
  -[HMDEventTrigger characteristicBaseEvents]
  -[HMDEventTrigger takeOverOwnershipOfTrigger]
  -[HMDEventTrigger processEventRecords:message:]
  -[HMDEventTrigger didOccurEvent:causingDevice:]
  -[HMDEventTrigger setExecutionSession:]
  -[HMDEventTrigger executionSession]
  -[HMDEventTrigger evaluationCondition]
  -[HMDEventTrigger predicateUtilities]
  -[HMDEventTrigger calendarEvents]
  -[HMDEventTrigger significantTimeEvents]
  -[HMDEventTrigger presenceEvents]
  -[HMDEventTrigger charThresholdEvents]
  -[HMDEventTrigger locationEvents]
  -[HMDEventTrigger computedActive]
  -[HMDEventTrigger _reevaluateIfRelaunchRequired]
  -[HMDEventTrigger _computeActivation]
  -[HMDEventTrigger _activateEvents:]
  -[HMDEventTrigger _migrateEventsToRecords]
  -[HMDEventTrigger migratedEventsToRecords]
  -[HMDEventTrigger setMigratedEventsToRecords:]
  -[HMDEventTrigger _handleLocationAuthorizationChangedNotification:]
  -[HMDEventTrigger _handleUpdateEventTriggerCondition:]
  -[HMDEventTrigger _handleUpdateEventTriggerRecurrences:]
  -[HMDEventTrigger _handleUpdateEventTriggerExecuteOnce:]
  -[HMDEventTrigger _handleAddEventToEventTrigger:]
  -[HMDEventTrigger _handleRemoveEventsFromEventTrigger:]
  -[HMDEventTrigger _handleUpdateEventsOnEventTrigger:]
  -[HMDEventTrigger _handleUserPermissionRequest:]
  -[HMDEventTrigger _handleUpdateOwningDevice:]
  -[HMDEventTrigger _handleCharacteristicRemove:eventsToRemove:]
  -[HMDEventTrigger _updateCondition:]
  -[HMDEventTrigger _handleRemoveEventsFromEventTrigger:relay:]
  -[HMDEventTrigger _addEventToEventTrigger:]
  -[HMDEventTrigger createEventModel:endEvent:message:checkForSupport:error:]
  -[HMDEventTrigger _checkAddEventModel:message:]
  -[HMDEventTrigger _removeEventsFromEventTrigger:]
  -[HMDEventTrigger _updateEventsOnEventTrigger:]
  -[HMDEventTrigger _updateEventTriggerRecurrences:]
  -[HMDEventTrigger _updateEventTriggerCondition:]
  -[HMDEventTrigger _updateOwningDevice:]
  -[HMDEventTrigger _updateEventTriggerExecuteOnce:]
  -[HMDEventTrigger _resetExecutionState]
  -[HMDEventTrigger userConfirmationSession]
  -[HMDEventTrigger setUserConfirmationSession:]
  -[HMDEventTrigger _userDidConfirmExecute:completionHandler:]
  -[HMDEventTrigger _handleEventTriggerUpdate:message:]
  -[HMDEventTrigger _handleAddEventModel:message:]
  -[HMDEventTrigger _handleRemoveEventModel:message:]
  -[HMDEventTrigger _evaluationConditionUpdated:message:]
  -[HMDEventTrigger _eventTriggerRecurrencesUpdated:message:]
  -[HMDEventTrigger _executeOnceUpdated:message:]
  -[HMDEventTrigger timeEvents]
  -[HMDEventTrigger containsRecurrences]
  -[HMDEventTrigger durationEvents]
  -[HMDEventTrigger executionComplete:error:]
  -[HMDEventTrigger resetExecutionState]
  -[HMDEventTrigger setPredicateUtilities:]


HMDEventTriggerModel : HMDTriggerModel
 @property  NSData *evaluationCondition
 @property  NSData *recurrences
 @property  NSNumber *executeOnce

  // class methods
  +[HMDEventTriggerModel properties]

  // instance methods
  -[HMDEventTriggerModel createPayload]


HMDRemoteLoginInitiator : HMDRemoteLoginBase <HMDRemoteLoginInitiatorAuthenticationDelegate>
 @property  HMDRemoteLoginInitiatorSession *loginSession
 @property  HMDRemoteLoginAnisetteDataProviderBridge *anisetteProviderBridge
 @property  HMDRemoteLoginMessageSender *remoteMessageSender
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginInitiator logCategory]
  +[HMDRemoteLoginInitiator hasMessageReceiverChildren]

  // instance methods
  -[HMDRemoteLoginInitiator .cxx_destruct]
  -[HMDRemoteLoginInitiator registerForMessages]
  -[HMDRemoteLoginInitiator setLoginSession:]
  -[HMDRemoteLoginInitiator remoteMessageSender]
  -[HMDRemoteLoginInitiator messageReceiverChildren]
  -[HMDRemoteLoginInitiator configureWithWorkQueue:messageDispatcher:]
  -[HMDRemoteLoginInitiator initWithUUID:accessory:remoteLoginHandler:]
  -[HMDRemoteLoginInitiator setRemoteMessageSender:]
  -[HMDRemoteLoginInitiator anisetteProviderBridge]
  -[HMDRemoteLoginInitiator _handleRemoteLoginCompanionAuthentication:]
  -[HMDRemoteLoginInitiator _handleRemoteLoginProxiedDevice:]
  -[HMDRemoteLoginInitiator _handleRemoteLoginProxyAuthentication:]
  -[HMDRemoteLoginInitiator _handleRemoteLoginSignout:]
  -[HMDRemoteLoginInitiator _companionLoginWithSessionID:account:remoteDevice:completion:]
  -[HMDRemoteLoginInitiator _handleProxyDeviceResponse:error:message:]
  -[HMDRemoteLoginInitiator _resetCurrentSession:]
  -[HMDRemoteLoginInitiator _proxyLoginWithSessionID:authResults:remoteDevice:completion:]
  -[HMDRemoteLoginInitiator _handleSignoutResponse:error:message:]
  -[HMDRemoteLoginInitiator loginSession]
  -[HMDRemoteLoginInitiator _callCompletion:loggedInAccount:authSession:]
  -[HMDRemoteLoginInitiator didCompleteAuthentication:error:loggedInAccount:]
  -[HMDRemoteLoginInitiator setAnisetteProviderBridge:]


HMDMessageHandlerFailureMetricEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  NSString *messageName
 @property  NSString *type

  // class methods
  +[HMDMessageHandlerFailureMetricEvent identifier]

  // instance methods
  -[HMDMessageHandlerFailureMetricEvent eventName]
  -[HMDMessageHandlerFailureMetricEvent .cxx_destruct]
  -[HMDMessageHandlerFailureMetricEvent messageName]
  -[HMDMessageHandlerFailureMetricEvent type]
  -[HMDMessageHandlerFailureMetricEvent serializedEvent]
  -[HMDMessageHandlerFailureMetricEvent initWithFailureType:messageName:]


AWDHomeKitSignificantTimeEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasSignificantEvent
 @property  NSString *significantEvent
 @property  BOOL hasOffsetPresent
 @property  BOOL offsetPresent

  // instance methods
  -[AWDHomeKitSignificantTimeEvent copyWithZone:]
  -[AWDHomeKitSignificantTimeEvent significantEvent]
  -[AWDHomeKitSignificantTimeEvent .cxx_destruct]
  -[AWDHomeKitSignificantTimeEvent setSignificantEvent:]
  -[AWDHomeKitSignificantTimeEvent readFrom:]
  -[AWDHomeKitSignificantTimeEvent writeTo:]
  -[AWDHomeKitSignificantTimeEvent isEqual:]
  -[AWDHomeKitSignificantTimeEvent copyTo:]
  -[AWDHomeKitSignificantTimeEvent dictionaryRepresentation]
  -[AWDHomeKitSignificantTimeEvent mergeFrom:]
  -[AWDHomeKitSignificantTimeEvent hasSignificantEvent]
  -[AWDHomeKitSignificantTimeEvent setOffsetPresent:]
  -[AWDHomeKitSignificantTimeEvent setHasOffsetPresent:]
  -[AWDHomeKitSignificantTimeEvent hasOffsetPresent]
  -[AWDHomeKitSignificantTimeEvent offsetPresent]


HMDCameraClipOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject, HMFLogging>
 @property  NSDate *creationDate
 @property  NSString *logIdentifier
 @property  double executionDuration
 @property  NSDate *startDate
 @property  NSDate *endDate
 @property  <HMDCameraClipOperationDataSource> *dataSource
 @property  NSUUID *clipModelID
 @property  HMBLocalZone *localZone
 @property  HMDCameraRecordingUploadOperationEvent *uploadOperationEvent
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraClipOperation logCategory]
  +[HMDCameraClipOperation shortDescription]

  // instance methods
  -[HMDCameraClipOperation logIdentifier]
  -[HMDCameraClipOperation main]
  -[HMDCameraClipOperation setEndDate:]
  -[HMDCameraClipOperation attributeDescriptions]
  -[HMDCameraClipOperation startDate]
  -[HMDCameraClipOperation creationDate]
  -[HMDCameraClipOperation privateDescription]
  -[HMDCameraClipOperation .cxx_destruct]
  -[HMDCameraClipOperation cancelWithError:]
  -[HMDCameraClipOperation endDate]
  -[HMDCameraClipOperation localZone]
  -[HMDCameraClipOperation shortDescription]
  -[HMDCameraClipOperation dataSource]
  -[HMDCameraClipOperation finish]
  -[HMDCameraClipOperation setStartDate:]
  -[HMDCameraClipOperation initWithClipModelID:localZone:dataSource:]
  -[HMDCameraClipOperation clipModelID]
  -[HMDCameraClipOperation _markEndDateAndSubmitUploadOperationEvent]
  -[HMDCameraClipOperation executionDuration]
  -[HMDCameraClipOperation updateClipModel:shouldPerformDelegateCallbacks:]
  -[HMDCameraClipOperation uploadOperationEvent]
  -[HMDCameraClipOperation queuedDuration]
  -[HMDCameraClipOperation initWithClipModelID:localZone:]
  -[HMDCameraClipOperation fetchClipModel]
  -[HMDCameraClipOperation updateClipModel:]


HMDCameraRemoteStreamControlManager : HMDCameraStreamControlManager <HMDStreamingManagerDelegate, HMDCameraIDSSessionReceiverDelegate, HMDCameraIDSDeviceConnectionReceiverDelegate, HMDCameraIDSDeviceConnectionSenderDelegate, HMDCameraStreamControlManagerProtocol>
 @property  NSUUID *profileUniqueIdentifier
 @property  HMDCameraResidentMessageHandler *residentMessageHandler
 @property  HMDCameraRemoteStreamSession *streamSession
 @property  HMDCameraMediaConfigGenerator *configGenerator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDCameraStreamMetrics *streamMetrics

  // class methods
  +[HMDCameraRemoteStreamControlManager logCategory]

  // instance methods
  -[HMDCameraRemoteStreamControlManager dealloc]
  -[HMDCameraRemoteStreamControlManager .cxx_destruct]
  -[HMDCameraRemoteStreamControlManager _streamStarted]
  -[HMDCameraRemoteStreamControlManager profileUniqueIdentifier]
  -[HMDCameraRemoteStreamControlManager startStream:]
  -[HMDCameraRemoteStreamControlManager _startStream:]
  -[HMDCameraRemoteStreamControlManager updateAudioSetting:]
  -[HMDCameraRemoteStreamControlManager updateAudioVolume:callback:]
  -[HMDCameraRemoteStreamControlManager streamingManager:didStartStream:slotIdentifier:]
  -[HMDCameraRemoteStreamControlManager streamingManagerDidReceiveFirstFrame:audioStreamSetting:aspectRatio:slotIdentifier:]
  -[HMDCameraRemoteStreamControlManager streamingManagerDidStopStream:error:]
  -[HMDCameraRemoteStreamControlManager streamingManagerDidNetworkImprove:]
  -[HMDCameraRemoteStreamControlManager streamingManagerDidNetworkDeteriorate:]
  -[HMDCameraRemoteStreamControlManager streamingManagerDidUpdateConfiguration:]
  -[HMDCameraRemoteStreamControlManager deviceConnectionReceiver:didSetup:]
  -[HMDCameraRemoteStreamControlManager deviceConnectionReceiver:didEndSession:]
  -[HMDCameraRemoteStreamControlManager setStreamSession:]
  -[HMDCameraRemoteStreamControlManager _stopCurrentStreamSession:]
  -[HMDCameraRemoteStreamControlManager streamSession]
  -[HMDCameraRemoteStreamControlManager _negotiateStream]
  -[HMDCameraRemoteStreamControlManager residentMessageHandler]
  -[HMDCameraRemoteStreamControlManager _setParametersSelected:]
  -[HMDCameraRemoteStreamControlManager _idsSessionCreatedAndConfigNegotiated]
  -[HMDCameraRemoteStreamControlManager _cleanUpStreamSession:]
  -[HMDCameraRemoteStreamControlManager _dispatchStartRequestToResidentWithVideoSSRC:audioSSRC:]
  -[HMDCameraRemoteStreamControlManager configGenerator]
  -[HMDCameraRemoteStreamControlManager _reconfigureStream:]
  -[HMDCameraRemoteStreamControlManager _dispatchReconfigureToResident:]
  -[HMDCameraRemoteStreamControlManager _remoteSetup:]
  -[HMDCameraRemoteStreamControlManager _sendStopMessageToResident]
  -[HMDCameraRemoteStreamControlManager _relaySessionStarted:]
  -[HMDCameraRemoteStreamControlManager stopStreamAsIDSHasStopped:]
  -[HMDCameraRemoteStreamControlManager _reconfigureStreams]
  -[HMDCameraRemoteStreamControlManager _sendUpdatedConfiguration]
  -[HMDCameraRemoteStreamControlManager sessionReceiver:didSetup:]
  -[HMDCameraRemoteStreamControlManager sessionReceiver:didEndSession:]
  -[HMDCameraRemoteStreamControlManager deviceConnectionSender:didSetup:]
  -[HMDCameraRemoteStreamControlManager deviceConnectionSender:didEndSession:]
  -[HMDCameraRemoteStreamControlManager negotiateStream]
  -[HMDCameraRemoteStreamControlManager reconfigureStream:]
  -[HMDCameraRemoteStreamControlManager stopStream:]
  -[HMDCameraRemoteStreamControlManager remoteSetup:]
  -[HMDCameraRemoteStreamControlManager initWithSessionID:workQueue:streamSnapshotHandler:reachabilityPath:destinationID:delegate:delegateQueue:accessory:streamManagementService:remoteCapabilities:profileUniqueIdentifier:residentMessageHandler:streamPreference:]
  -[HMDCameraRemoteStreamControlManager setConfigGenerator:]


AWDHomeKitAccessoryRelaySetup : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  BOOL hasErrorCode
 @property  int errorCode
 @property  BOOL hasReason
 @property  NSString *reason
 @property  BOOL hasActionType
 @property  int actionType
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasCertified
 @property  int certified

  // instance methods
  -[AWDHomeKitAccessoryRelaySetup setErrorCode:]
  -[AWDHomeKitAccessoryRelaySetup copyWithZone:]
  -[AWDHomeKitAccessoryRelaySetup hasErrorCode]
  -[AWDHomeKitAccessoryRelaySetup actionType]
  -[AWDHomeKitAccessoryRelaySetup setReason:]
  -[AWDHomeKitAccessoryRelaySetup errorCode]
  -[AWDHomeKitAccessoryRelaySetup setHasErrorCode:]
  -[AWDHomeKitAccessoryRelaySetup .cxx_destruct]
  -[AWDHomeKitAccessoryRelaySetup timestamp]
  -[AWDHomeKitAccessoryRelaySetup setTimestamp:]
  -[AWDHomeKitAccessoryRelaySetup setHasDuration:]
  -[AWDHomeKitAccessoryRelaySetup setHasTimestamp:]
  -[AWDHomeKitAccessoryRelaySetup hasReason]
  -[AWDHomeKitAccessoryRelaySetup readFrom:]
  -[AWDHomeKitAccessoryRelaySetup writeTo:]
  -[AWDHomeKitAccessoryRelaySetup isEqual:]
  -[AWDHomeKitAccessoryRelaySetup setDuration:]
  -[AWDHomeKitAccessoryRelaySetup copyTo:]
  -[AWDHomeKitAccessoryRelaySetup dictionaryRepresentation]
  -[AWDHomeKitAccessoryRelaySetup hasDuration]
  -[AWDHomeKitAccessoryRelaySetup mergeFrom:]
  -[AWDHomeKitAccessoryRelaySetup reason]
  -[AWDHomeKitAccessoryRelaySetup hasTimestamp]
  -[AWDHomeKitAccessoryRelaySetup setActionType:]
  -[AWDHomeKitAccessoryRelaySetup setHasActionType:]
  -[AWDHomeKitAccessoryRelaySetup hasActionType]
  -[AWDHomeKitAccessoryRelaySetup actionTypeAsString:]
  -[AWDHomeKitAccessoryRelaySetup StringAsActionType:]
  -[AWDHomeKitAccessoryRelaySetup duration]
  -[AWDHomeKitAccessoryRelaySetup vendorDetails]
  -[AWDHomeKitAccessoryRelaySetup setVendorDetails:]
  -[AWDHomeKitAccessoryRelaySetup hasVendorDetails]
  -[AWDHomeKitAccessoryRelaySetup certified]
  -[AWDHomeKitAccessoryRelaySetup setCertified:]
  -[AWDHomeKitAccessoryRelaySetup setHasCertified:]
  -[AWDHomeKitAccessoryRelaySetup hasCertified]
  -[AWDHomeKitAccessoryRelaySetup certifiedAsString:]
  -[AWDHomeKitAccessoryRelaySetup StringAsCertified:]


HMDIDSMessageTransport : HMDRemoteMessageTransport <IDSServiceDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableArray *messageContexts
 @property  HMFOperationBudget *sendMessageBudget
 @property  NSMutableDictionary *pendingResponses
 @property  NSMutableDictionary *receivedResponses
 @property  NSMutableDictionary *requestedCapabilities
 @property  NSMutableDictionary *destinationAddress
 @property  NSMutableDictionary *pendingResponseTimers
 @property  int awdTransportType
 @property  IDSService *service
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDIDSMessageTransport restriction]
  +[HMDIDSMessageTransport sendMessageLimit]
  +[HMDIDSMessageTransport sendMessageRate]
  +[HMDIDSMessageTransport priorityForMessage:]

  // instance methods
  -[HMDIDSMessageTransport sendMessage:completionHandler:]
  -[HMDIDSMessageTransport service:account:incomingMessage:fromID:context:]
  -[HMDIDSMessageTransport .cxx_destruct]
  -[HMDIDSMessageTransport workQueue]
  -[HMDIDSMessageTransport service:account:identifier:didSendWithSuccess:error:context:]
  -[HMDIDSMessageTransport destinationAddress]
  -[HMDIDSMessageTransport service]
  -[HMDIDSMessageTransport qualityOfService]
  -[HMDIDSMessageTransport start]
  -[HMDIDSMessageTransport canSendMessage:]
  -[HMDIDSMessageTransport requestedCapabilities]
  -[HMDIDSMessageTransport pendingResponses]
  -[HMDIDSMessageTransport initWithAccountRegistry:]
  -[HMDIDSMessageTransport deviceForSenderContext:]
  -[HMDIDSMessageTransport awdTransportType]
  -[HMDIDSMessageTransport sendMessage:fromHandle:destination:priority:timeout:options:error:]
  -[HMDIDSMessageTransport _startPendingResponseTimer:responseTimeout:identifier:]
  -[HMDIDSMessageTransport messageContexts]
  -[HMDIDSMessageTransport sendMessageBudget]
  -[HMDIDSMessageTransport pendingResponseTimers]
  -[HMDIDSMessageTransport receivedResponses]
  -[HMDIDSMessageTransport _removePendingResponseTransaction:]
  -[HMDIDSMessageTransport _pendingResponseTimeoutFor:]
  -[HMDIDSMessageTransport _removePendingResponseTimerForTransaction:]
  -[HMDIDSMessageTransport _restartPendingResponseTimerFor:withReducedFactor:]


HMDUnassociatedAppleMediaAccessory : HMDUnassociatedMediaAccessory <HMFLogging>
 @property  HMDCapabilityFlags *requiredPairingCapbilities
 @property  HMDHomeKitVersion *minimumRequiredPairingSoftwareVersion
 @property  HMDDevice *device
 @property  NSString *model
 @property  NSString *serialNumber
 @property  HMFSoftwareVersion *softwareVersion
 @property  BOOL currentAccessory
 @property  unsigned long supportedStereoPairVersions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUnassociatedAppleMediaAccessory supportsSecureCoding]
  +[HMDUnassociatedAppleMediaAccessory namespace]
  +[HMDUnassociatedAppleMediaAccessory logCategory]
  +[HMDUnassociatedAppleMediaAccessory modelForChangeType:uuid:parentUUID:]

  // instance methods
  -[HMDUnassociatedAppleMediaAccessory serialNumber]
  -[HMDUnassociatedAppleMediaAccessory device]
  -[HMDUnassociatedAppleMediaAccessory logIdentifier]
  -[HMDUnassociatedAppleMediaAccessory .cxx_destruct]
  -[HMDUnassociatedAppleMediaAccessory setModel:]
  -[HMDUnassociatedAppleMediaAccessory encodeWithCoder:]
  -[HMDUnassociatedAppleMediaAccessory setDevice:]
  -[HMDUnassociatedAppleMediaAccessory setSupportedStereoPairVersions:]
  -[HMDUnassociatedAppleMediaAccessory isCurrentAccessory]
  -[HMDUnassociatedAppleMediaAccessory setCurrentAccessory:]
  -[HMDUnassociatedAppleMediaAccessory setSoftwareVersion:]
  -[HMDUnassociatedAppleMediaAccessory model]
  -[HMDUnassociatedAppleMediaAccessory setSerialNumber:]
  -[HMDUnassociatedAppleMediaAccessory supportedStereoPairVersions]
  -[HMDUnassociatedAppleMediaAccessory initWithCoder:]
  -[HMDUnassociatedAppleMediaAccessory softwareVersion]
  -[HMDUnassociatedAppleMediaAccessory addTransactionForHome:configurationAppIdentifier:]
  -[HMDUnassociatedAppleMediaAccessory minimumRequiredPairingSoftwareVersion]
  -[HMDUnassociatedAppleMediaAccessory canPairGivenCapabilities:]
  -[HMDUnassociatedAppleMediaAccessory initWithIdentifier:name:category:requiredPairingCapabilities:messageDispatcher:]
  -[HMDUnassociatedAppleMediaAccessory initWithIdentifier:name:category:messageDispatcher:]
  -[HMDUnassociatedAppleMediaAccessory requiredPairingCapbilities]
  -[HMDUnassociatedAppleMediaAccessory descriptionWithPointer:additionalDescription:]
  -[HMDUnassociatedAppleMediaAccessory dumpDescription]
  -[HMDUnassociatedAppleMediaAccessory setMinimumRequiredPairingSoftwareVersion:]


HMDAccessorySettingsMetadata : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  HMDAccessorySettingGroupMetadata *rootGroup
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDAccessorySettingsMetadata init]
  -[HMDAccessorySettingsMetadata initWithURL:]
  -[HMDAccessorySettingsMetadata .cxx_destruct]
  -[HMDAccessorySettingsMetadata propertyDescription]
  -[HMDAccessorySettingsMetadata rootGroup]


HMDAccessorySettingGroupMetadata : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  NSString *name
 @property  NSString *keyPath
 @property  NSArray *groups
 @property  NSArray *settings
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessorySettingGroupMetadata groupsWithArrayRepresenation:parentKeyPath:]
  +[HMDAccessorySettingGroupMetadata groupWithDictonaryRepresentation:parentKeyPath:]

  // instance methods
  -[HMDAccessorySettingGroupMetadata groups]
  -[HMDAccessorySettingGroupMetadata .cxx_destruct]
  -[HMDAccessorySettingGroupMetadata name]
  -[HMDAccessorySettingGroupMetadata keyPath]
  -[HMDAccessorySettingGroupMetadata propertyDescription]
  -[HMDAccessorySettingGroupMetadata settings]
  -[HMDAccessorySettingGroupMetadata initWithName:settings:groups:]
  -[HMDAccessorySettingGroupMetadata initWithName:settings:groups:parentKeyPath:]
  -[HMDAccessorySettingGroupMetadata modelsWithParentIdentifier:]


HMDAccessorySettingMetadata : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  NSString *name
 @property  NSString *keyPath
 @property  long long type
 @property  unsigned long properties
 @property  HMDAccessorySettingMergeStrategy *mergeStrategy
 @property  NSArray *constraints
 @property  id value
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessorySettingMetadata settingsWithArrayRepresenation:parentKeyPath:]
  +[HMDAccessorySettingMetadata settingWithDictonaryRepresentation:parentKeyPath:]
  +[HMDAccessorySettingMetadata valueWithType:constraints:representation:]

  // instance methods
  -[HMDAccessorySettingMetadata mergeStrategy]
  -[HMDAccessorySettingMetadata .cxx_destruct]
  -[HMDAccessorySettingMetadata name]
  -[HMDAccessorySettingMetadata keyPath]
  -[HMDAccessorySettingMetadata propertyDescription]
  -[HMDAccessorySettingMetadata type]
  -[HMDAccessorySettingMetadata value]
  -[HMDAccessorySettingMetadata properties]
  -[HMDAccessorySettingMetadata constraints]
  -[HMDAccessorySettingMetadata modelsWithParentIdentifier:]
  -[HMDAccessorySettingMetadata initWithName:type:properties:constraints:mergeStrategy:value:parentKeyPath:]
  -[HMDAccessorySettingMetadata modelWithParentIdentifier:]


HMDUserPresenceFeeder : HMDHomePresenceBase <HMDUserPresenceFeedSessionDelegate, HMFLogging>
 @property  unsigned long presenceRegionStatus
 @property  HMDBackgroundTaskAgentTimer *btaUpdateTimer
 @property  HMDUserPresenceFeedSession *currentFeedSession
 @property  HMDUserPresenceFeed *lastSentFeed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserPresenceFeeder logCategory]
  +[HMDUserPresenceFeeder submitPresenceReportMetricWithPresenceAuth:presenceCompute:reason:error:]

  // instance methods
  -[HMDUserPresenceFeeder init]
  -[HMDUserPresenceFeeder .cxx_destruct]
  -[HMDUserPresenceFeeder timerFired:]
  -[HMDUserPresenceFeeder _registerForMessages]
  -[HMDUserPresenceFeeder _startRefreshTimer]
  -[HMDUserPresenceFeeder configure:messageDispatcher:]
  -[HMDUserPresenceFeeder notifyDidLeaveHomeRegion]
  -[HMDUserPresenceFeeder notifyDidEnterHomeRegion]
  -[HMDUserPresenceFeeder residentChanged]
  -[HMDUserPresenceFeeder notifyDidArriveHome]
  -[HMDUserPresenceFeeder notifyDidLeaveHome]
  -[HMDUserPresenceFeeder presenceAuthChanged]
  -[HMDUserPresenceFeeder presenceAuthStatusChangedForUser:presenceAuthStatus:]
  -[HMDUserPresenceFeeder registerQueriableAwdMetrics]
  -[HMDUserPresenceFeeder presenceRegionStatus]
  -[HMDUserPresenceFeeder setPresenceRegionStatus:]
  -[HMDUserPresenceFeeder handleHomeDataLoadedNotification:]
  -[HMDUserPresenceFeeder fmfStatusUpdateNotification:]
  -[HMDUserPresenceFeeder _handleLocationAuthorizationChangedNotification:]
  -[HMDUserPresenceFeeder accountAvailabilityChanged:]
  -[HMDUserPresenceFeeder _sendPresenceReport:]
  -[HMDUserPresenceFeeder _submitPresenceAuthMetric:]
  -[HMDUserPresenceFeeder _submitPresenceComputeMetric:]
  -[HMDUserPresenceFeeder _sendPresenceUpdateToResident:]
  -[HMDUserPresenceFeeder btaUpdateTimer]
  -[HMDUserPresenceFeeder _sendPresenceUpdateToResidentForUser:presenceAuthStatus:authChanging:reason:]
  -[HMDUserPresenceFeeder _sendPresenceUpdateToResidentForUser:presenceAuthStatus:authChanging:reason:fmfStatus:]
  -[HMDUserPresenceFeeder _updatePresenceToResidentForUser:presenceAuthStatus:authChanging:reason:fmfStatus:]
  -[HMDUserPresenceFeeder setCurrentFeedSession:]
  -[HMDUserPresenceFeeder _upgradePresenceAuth]
  -[HMDUserPresenceFeeder _sendPresenceAuthStatusForUser:presenceAuthStatus:presenceRegionStatus:presenceComputeStatus:reason:]
  -[HMDUserPresenceFeeder _updatePresenceComputeStatus:]
  -[HMDUserPresenceFeeder currentFeedSession]
  -[HMDUserPresenceFeeder lastSentFeed]
  -[HMDUserPresenceFeeder setLastSentFeed:]
  -[HMDUserPresenceFeeder didEndFeedSession:]
  -[HMDUserPresenceFeeder homeDataProcessed]


HMDDataStreamFrameReader : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMDDataStreamFrameReader logCategory]

  // instance methods
  -[HMDDataStreamFrameReader init]
  -[HMDDataStreamFrameReader .cxx_destruct]
  -[HMDDataStreamFrameReader hasFailed]
  -[HMDDataStreamFrameReader reset]
  -[HMDDataStreamFrameReader bytesNeededForCurrentFrame]
  -[HMDDataStreamFrameReader _getCurrentFrameSize]
  -[HMDDataStreamFrameReader _readFrameHeaderIfPossible]
  -[HMDDataStreamFrameReader hasCompleteFrame]
  -[HMDDataStreamFrameReader pushFrameData:]
  -[HMDDataStreamFrameReader hasPartialData]
  -[HMDDataStreamFrameReader popRawFrame]


HMDXPCMessageCountersLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  NSString *type
 @property  NSString *identifier
 @property  NSNumber *count

  // class methods
  +[HMDXPCMessageCountersLogEvent identifier]
  +[HMDXPCMessageCountersLogEvent XPCMessageCountersLogEventWithType:identifier:count:]

  // instance methods
  -[HMDXPCMessageCountersLogEvent eventName]
  -[HMDXPCMessageCountersLogEvent init]
  -[HMDXPCMessageCountersLogEvent .cxx_destruct]
  -[HMDXPCMessageCountersLogEvent identifier]
  -[HMDXPCMessageCountersLogEvent type]
  -[HMDXPCMessageCountersLogEvent count]
  -[HMDXPCMessageCountersLogEvent serializedEvent]
  -[HMDXPCMessageCountersLogEvent shouldSubmitEvent]
  -[HMDXPCMessageCountersLogEvent __initWithType:identifier:count:]


HMDAssistantCommandHelper : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFMessageReceiver, HMFLogging>
 @property  @? responseHandler
 @property  @? mediaResponseHandler
 @property  NSUUID *messageId
 @property  HMDHome *home
 @property  NSObject<OS_dispatch_queue> *queue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSUUID *uuid
 @property  NSMutableArray *responses
 @property  unsigned long numErrors
 @property  BOOL executingActionSet
 @property  NSArray *requests
 @property  NSArray *mediaRequests
 @property  NSMutableArray *mediaResponses
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAssistantCommandHelper logCategory]

  // instance methods
  -[HMDAssistantCommandHelper messageTargetUUID]
  -[HMDAssistantCommandHelper messageReceiveQueue]
  -[HMDAssistantCommandHelper setMessageId:]
  -[HMDAssistantCommandHelper _register]
  -[HMDAssistantCommandHelper responses]
  -[HMDAssistantCommandHelper uuid]
  -[HMDAssistantCommandHelper dealloc]
  -[HMDAssistantCommandHelper .cxx_destruct]
  -[HMDAssistantCommandHelper setUuid:]
  -[HMDAssistantCommandHelper setHome:]
  -[HMDAssistantCommandHelper setMsgDispatcher:]
  -[HMDAssistantCommandHelper msgDispatcher]
  -[HMDAssistantCommandHelper setQueue:]
  -[HMDAssistantCommandHelper responseHandler]
  -[HMDAssistantCommandHelper queue]
  -[HMDAssistantCommandHelper requests]
  -[HMDAssistantCommandHelper home]
  -[HMDAssistantCommandHelper setResponses:]
  -[HMDAssistantCommandHelper messageId]
  -[HMDAssistantCommandHelper setRequests:]
  -[HMDAssistantCommandHelper setResponseHandler:]
  -[HMDAssistantCommandHelper addActionSetRequest:actionSet:completionHandler:]
  -[HMDAssistantCommandHelper addMediaWriteRequests:withRequestProperty:completion:]
  -[HMDAssistantCommandHelper addReadRequests:home:completion:]
  -[HMDAssistantCommandHelper addWriteRequests:home:completion:]
  -[HMDAssistantCommandHelper removeResponses:]
  -[HMDAssistantCommandHelper initWithQueue:msgDispatcher:]
  -[HMDAssistantCommandHelper timeoutAndReportResults]
  -[HMDAssistantCommandHelper reportOperationStartedForAccessory:]
  -[HMDAssistantCommandHelper handleAccessoryCharacteristicsChangedNotification:]
  -[HMDAssistantCommandHelper mediaRequests]
  -[HMDAssistantCommandHelper _reportResponsesForMediaRequests]
  -[HMDAssistantCommandHelper _reportResponses]
  -[HMDAssistantCommandHelper mediaResponseHandler]
  -[HMDAssistantCommandHelper setMediaResponseHandler:]
  -[HMDAssistantCommandHelper mediaResponses]
  -[HMDAssistantCommandHelper executingActionSet]
  -[HMDAssistantCommandHelper numErrors]
  -[HMDAssistantCommandHelper setNumErrors:]
  -[HMDAssistantCommandHelper _reportOperationStartedForAccessory:]
  -[HMDAssistantCommandHelper __handleAccessoryCharacteristicsChanged:]
  -[HMDAssistantCommandHelper setMediaRequests:]
  -[HMDAssistantCommandHelper setMediaResponses:]
  -[HMDAssistantCommandHelper setExecutingActionSet:]


HMDPhotoLibrary : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, PHPhotoLibraryChangeObserver>
 @property  PHPhotoLibrary *photoLibrary
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  PHFetchResult *suggestedPersonsFetchResult
 @property  NSSet *persons
 @property  <HMDPhotoLibraryChangeDelegate> *photoLibraryChangeDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDPhotoLibrary logCategory]
  +[HMDPhotoLibrary _phPersonWithUUID:fromSuggestedPersonsFetchResult:]

  // instance methods
  -[HMDPhotoLibrary photoLibrary]
  -[HMDPhotoLibrary .cxx_destruct]
  -[HMDPhotoLibrary photoLibraryDidChange:]
  -[HMDPhotoLibrary workQueue]
  -[HMDPhotoLibrary persons]
  -[HMDPhotoLibrary releaseCachedResources]
  -[HMDPhotoLibrary suggestedPersonsFetchResult]
  -[HMDPhotoLibrary setSuggestedPersonsFetchResult:]
  -[HMDPhotoLibrary photoLibraryChangeDelegate]
  -[HMDPhotoLibrary initWithWorkQueue:]
  -[HMDPhotoLibrary setPhotoLibraryChangeDelegate:]
  -[HMDPhotoLibrary fetchPersons]
  -[HMDPhotoLibrary fetchFaceCropDataByUUIDForPersonUUID:]
  -[HMDPhotoLibrary numberOfFaceCropsForPersonWithUUID:]
  -[HMDPhotoLibrary faceCropFromFaceCropData:]


HMDCloudGroupChange : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDCloudGroup *cloudGroup
 @property  BOOL decryptionFailed
 @property  BOOL encryptionFailed
 @property  BOOL controllerIdentifierChanged
 @property  HMDCloudChangeTree *cloudChangeTree
 @property  NSMutableArray *cloudChanges
 @property  NSMutableArray *processingCloudChanges
 @property  NSMutableArray *processedCloudChanges
 @property  BOOL rootRecordRequired
 @property  NSArray *allTransactionStoreRowIDs
 @property  NSArray *processedTransactionStoreRowIDs
 @property  BOOL temporaryCache
 @property  BOOL hasValidChanges
 @property  BOOL doRecordsExistInCache
 @property  NSArray *objectChanges

  // class methods
  +[HMDCloudGroupChange shortDescription]

  // instance methods
  -[HMDCloudGroupChange init]
  -[HMDCloudGroupChange .cxx_destruct]
  -[HMDCloudGroupChange shortDescription]
  -[HMDCloudGroupChange allTransactionStoreRowIDs]
  -[HMDCloudGroupChange cloudChanges]
  -[HMDCloudGroupChange hasValidChanges]
  -[HMDCloudGroupChange decryptionFailed]
  -[HMDCloudGroupChange cloudGroup]
  -[HMDCloudGroupChange processingCloudChanges]
  -[HMDCloudGroupChange processedCloudChanges]
  -[HMDCloudGroupChange cloudChangeTree]
  -[HMDCloudGroupChange changeWithObjectID:]
  -[HMDCloudGroupChange cachedCloudRecordWithObjectID:]
  -[HMDCloudGroupChange cloudRecordWithObjectID:]
  -[HMDCloudGroupChange doRecordsExistInCache]
  -[HMDCloudGroupChange changeWithRecordName:]
  -[HMDCloudGroupChange cloudRecordWithName:]
  -[HMDCloudGroupChange isTemporaryCache]
  -[HMDCloudGroupChange isRootRecord:]
  -[HMDCloudGroupChange setDecryptionFailed:]
  -[HMDCloudGroupChange _addChangeWithDeletedCloudRecord:]
  -[HMDCloudGroupChange _loadTreeWithRecordMapping:]
  -[HMDCloudGroupChange setCloudChanges:]
  -[HMDCloudGroupChange setProcessedCloudChanges:]
  -[HMDCloudGroupChange _initializeCloudChanges]
  -[HMDCloudGroupChange loadCloudRecordsFromCache:]
  -[HMDCloudGroupChange loadCloudChangeTreeFromCache:]
  -[HMDCloudGroupChange rootRecordModelObject]
  -[HMDCloudGroupChange addChange:setAsProcessing:]
  -[HMDCloudGroupChange isRootRecordRequired]
  -[HMDCloudGroupChange addRootRecordChange]
  -[HMDCloudGroupChange _removeChange:]
  -[HMDCloudGroupChange collectRecordsForBatch]
  -[HMDCloudGroupChange encryptionFailed]
  -[HMDCloudGroupChange setEncryptionFailed:]
  -[HMDCloudGroupChange setAsProcessedChange:]
  -[HMDCloudGroupChange isRootRecordName:]
  -[HMDCloudGroupChange initWithGroup:temporaryCache:]
  -[HMDCloudGroupChange processedTransactionStoreRowIDs]
  -[HMDCloudGroupChange cachedCloudRecordWithObjectID:completionHandler:]
  -[HMDCloudGroupChange addChangeWithObjectChange:]
  -[HMDCloudGroupChange addChangeWithRecord:]
  -[HMDCloudGroupChange addChangeWithDeletedRecordID:]
  -[HMDCloudGroupChange loadCloudRecordsAndDetermineDeletesFromCache:]
  -[HMDCloudGroupChange moreChangesToProcess]
  -[HMDCloudGroupChange setAllChangedAsProcessed]
  -[HMDCloudGroupChange removeChangeWithObjectID:]
  -[HMDCloudGroupChange fetchBatchToUpload:]
  -[HMDCloudGroupChange setSaveAsProcessedWithRecord:]
  -[HMDCloudGroupChange resetRecordWithRecordID:]
  -[HMDCloudGroupChange setDeleteAsProcessedWithRecordID:]
  -[HMDCloudGroupChange flushAllChangesToCache]
  -[HMDCloudGroupChange objectChanges]
  -[HMDCloudGroupChange controllerIdentifierChanged]
  -[HMDCloudGroupChange setControllerIdentifierChanged:]
  -[HMDCloudGroupChange setCloudChangeTree:]
  -[HMDCloudGroupChange setProcessingCloudChanges:]


HMDDataStreamPendingRequest : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *identifier
 @property  NSString *topic
 @property  NSString *protocol
 @property  @? callback
 @property  NSDictionary *payload

  // instance methods
  -[HMDDataStreamPendingRequest protocol]
  -[HMDDataStreamPendingRequest callback]
  -[HMDDataStreamPendingRequest topic]
  -[HMDDataStreamPendingRequest payload]
  -[HMDDataStreamPendingRequest .cxx_destruct]
  -[HMDDataStreamPendingRequest identifier]
  -[HMDDataStreamPendingRequest isEqual:]
  -[HMDDataStreamPendingRequest initWithIdentifier:protocol:topic:payload:callback:]
  -[HMDDataStreamPendingRequest matchesResponseHeader:]


HMDDataStream : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMFTimerDelegate>
 @property  NSString *logIdentifier
 @property  BOOL active
 @property  <HMDDataStreamTransport> *transport
 @property  HAPSecuritySessionEncryption *sessionEncryption
 @property  NSMapTable *protocols
 @property  HMDDataStreamControlProtocol *controlProtocol
 @property  BOOL firstMessageReceived
 @property  HMFTimer *helloMessageResponseTimer
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long nextRequestIdentifier
 @property  NSMutableSet *pendingRequests
 @property  <HMDDataStreamDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDataStream logCategory]

  // instance methods
  -[HMDDataStream timerDidFire:]
  -[HMDDataStream connect]
  -[HMDDataStream setTransport:]
  -[HMDDataStream transport]
  -[HMDDataStream logIdentifier]
  -[HMDDataStream pendingRequests]
  -[HMDDataStream .cxx_destruct]
  -[HMDDataStream close]
  -[HMDDataStream setProtocols:]
  -[HMDDataStream workQueue]
  -[HMDDataStream protocols]
  -[HMDDataStream setActive:]
  -[HMDDataStream isActive]
  -[HMDDataStream setDelegate:]
  -[HMDDataStream delegate]
  -[HMDDataStream sessionEncryption]
  -[HMDDataStream setSessionEncryption:]
  -[HMDDataStream _evaluateActiveStatusChange]
  -[HMDDataStream nextRequestIdentifier]
  -[HMDDataStream setNextRequestIdentifier:]
  -[HMDDataStream _sendMessageWithHeader:payload:completion:]
  -[HMDDataStream createRequestIdentifier]
  -[HMDDataStream firstMessageReceived]
  -[HMDDataStream controlProtocol]
  -[HMDDataStream sendRequestForProtocol:topic:payload:completion:]
  -[HMDDataStream handleFirstMessageReceivedOnDataStream:payload:]
  -[HMDDataStream setFirstMessageReceived:]
  -[HMDDataStream helloMessageResponseTimer]
  -[HMDDataStream handlePendingRequests]
  -[HMDDataStream fulfillPendingRequestWithResponseHeader:payload:]
  -[HMDDataStream startHelloMessageResponseTimer]
  -[HMDDataStream setHelloMessageResponseTimer:]
  -[HMDDataStream initWithTransport:sessionEncryption:workQueue:logIdentifier:]
  -[HMDDataStream addProtocol:name:]
  -[HMDDataStream protocolWithName:]
  -[HMDDataStream protocolDelegateHandle]
  -[HMDDataStream sendEventForProtocol:topic:payload:completion:]
  -[HMDDataStream sendResponseForRequestHeader:payload:status:completion:]
  -[HMDDataStream sendRequestForProtocol:topic:identifier:payload:completion:]
  -[HMDDataStream protocolDidUpdateActiveStatus:]
  -[HMDDataStream transport:didFailWithError:]
  -[HMDDataStream transport:didReceiveRawFrame:]
  -[HMDDataStream transportDidClose:]
  -[HMDDataStream transportDidOpen:]
  -[HMDDataStream setControlProtocol:]


HMDCloudZone : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDBackingStoreCacheZone *backingStoreZone
 @property  HMDCloudCache *cache
 @property  NSString *zoneRootRecordName
 @property  CKRecordZone *zone
 @property  HMDCloudGroup *rootGroup
 @property  CKRecordID *privateZoneRootRecordID
 @property  BOOL processChangeEvenIfDecryptionFails
 @property  BOOL recordsAvailable
 @property  BOOL serverTokenAvaliable
 @property  BOOL decrypted
 @property  NSString *owner
 @property  NSString *subscriptionName
 @property  CKRecordZoneSubscription *subscription
 @property  CKServerChangeToken *serverChangeToken

  // class methods
  +[HMDCloudZone shortDescription]
  +[HMDCloudZone zoneRootRecordName]
  +[HMDCloudZone zoneSubscriptionName:]
  +[HMDCloudZone createZoneWithName:rootRecordName:subscriptionName:owner:cacheZone:cloudCache:completion:]

  // instance methods
  -[HMDCloudZone zone]
  -[HMDCloudZone setCache:]
  -[HMDCloudZone owner]
  -[HMDCloudZone subscription]
  -[HMDCloudZone init]
  -[HMDCloudZone setRootGroup:]
  -[HMDCloudZone .cxx_destruct]
  -[HMDCloudZone cache]
  -[HMDCloudZone setSubscription:]
  -[HMDCloudZone setZone:]
  -[HMDCloudZone shortDescription]
  -[HMDCloudZone serverChangeToken]
  -[HMDCloudZone setServerChangeToken:]
  -[HMDCloudZone setDecrypted:]
  -[HMDCloudZone rootGroup]
  -[HMDCloudZone cloudRecordWithObjectID:completionHandler:]
  -[HMDCloudZone markMigratedObjectsAsMigrated]
  -[HMDCloudZone fetchMigratedObjects:]
  -[HMDCloudZone subscriptionName]
  -[HMDCloudZone updateCloudRecord:]
  -[HMDCloudZone cloudRecordWithObjectID:]
  -[HMDCloudZone cloudRecordWithName:]
  -[HMDCloudZone createCloudRecordWithObjectID:recordName:]
  -[HMDCloudZone doesProcessChangeEvenIfDecryptionFails]
  -[HMDCloudZone isRootRecord:]
  -[HMDCloudZone cloudRecordWithObjectIDs:completionHandler:]
  -[HMDCloudZone zoneRootRecordName]
  -[HMDCloudZone deleteCloudRecord:]
  -[HMDCloudZone initWithBackingStoreCacheZone:cloudCache:]
  -[HMDCloudZone _initializeSubscription:]
  -[HMDCloudZone _initializeServerChangeToken:]
  -[HMDCloudZone setRecordsAvailable:]
  -[HMDCloudZone backingStoreZone]
  -[HMDCloudZone cloudRecordWithNames:completionHandler:]
  -[HMDCloudZone cloudRecordWithName:completionHandler:]
  -[HMDCloudZone __cloudRecordWithObjectID:]
  -[HMDCloudZone cloudRecordsForParentID:completionHandler:]
  -[HMDCloudZone allDescendentsCloudRecordsForParentID:completionHandler:]
  -[HMDCloudZone privateZoneRootRecordID]
  -[HMDCloudZone updateCloudRecord:completionHandler:]
  -[HMDCloudZone deleteCloudRecordNames:]
  -[HMDCloudZone updateCurrentServerChangeToken]
  -[HMDCloudZone createCloudRecordWithFetchResult:]
  -[HMDCloudZone addCloudRecord:ownerID:]
  -[HMDCloudZone isRootCloudRecord:]
  -[HMDCloudZone createCloudZoneChangeTemporaryCache:]
  -[HMDCloudZone hasServerTokenAvaliable]
  -[HMDCloudZone deleteZone]
  -[HMDCloudZone updateServerChangeToken:]
  -[HMDCloudZone hasRecordsAvaliable]
  -[HMDCloudZone hasDecrypted]
  -[HMDCloudZone setSubscriptionName:]
  -[HMDCloudZone setBackingStoreZone:]


HMDCloudLegacyZone : HMDCloudZone
 @property  NSUUID *metadataObjectID
 @property  CKRecordID *metadataRecordID
 @property  BOOL metadataRecordAvailable
 @property  NSUUID *homeDataObjectID
 @property  CKRecordID *homeDataRecordID
 @property  BOOL homeDataRecordAvailable
 @property  NSUUID *homeDataV3ObjectID
 @property  CKRecordID *homeDataV3RecordID
 @property  BOOL homeDataV3RecordAvailable

  // class methods
  +[HMDCloudLegacyZone zoneRootRecordName]
  +[HMDCloudLegacyZone zoneSubscriptionName:]
  +[HMDCloudLegacyZone createLegacyZoneWithName:owner:cacheZone:cloudCache:completion:]

  // instance methods
  -[HMDCloudLegacyZone .cxx_destruct]
  -[HMDCloudLegacyZone setServerChangeToken:]
  -[HMDCloudLegacyZone createCloudRecordWithObjectID:recordName:]
  -[HMDCloudLegacyZone doesProcessChangeEvenIfDecryptionFails]
  -[HMDCloudLegacyZone createCloudZoneChangeTemporaryCache:]
  -[HMDCloudLegacyZone metadataObjectID]
  -[HMDCloudLegacyZone homeDataObjectID]
  -[HMDCloudLegacyZone homeDataV3ObjectID]
  -[HMDCloudLegacyZone metadataRecordID]
  -[HMDCloudLegacyZone isMetadataRecordAvailable]
  -[HMDCloudLegacyZone homeDataRecordID]
  -[HMDCloudLegacyZone isHomeDataRecordAvailable]
  -[HMDCloudLegacyZone homeDataV3RecordID]
  -[HMDCloudLegacyZone isHomeDataV3RecordAvailable]
  -[HMDCloudLegacyZone metadataModelWithPushDataPush:]
  -[HMDCloudLegacyZone homeDataModelWithPushDataPush:]
  -[HMDCloudLegacyZone homeDataV3ModelWithPushDataPush:]
  -[HMDCloudLegacyZone dropCachedRecords]


HMDCloudMetadataZone : HMDCloudZone
 @property  HMDCloudRecord *metadataRecord

  // class methods
  +[HMDCloudMetadataZone zoneRootRecordName]
  +[HMDCloudMetadataZone zoneSubscriptionName:]
  +[HMDCloudMetadataZone createMetadataZoneWithName:owner:cacheZone:cloudCache:completion:]

  // instance methods
  -[HMDCloudMetadataZone .cxx_destruct]
  -[HMDCloudMetadataZone setServerChangeToken:]
  -[HMDCloudMetadataZone metadataRecord]
  -[HMDCloudMetadataZone setMetadataRecord:]


HMDCloudHomeManagerZone : HMDCloudZone
  // class methods
  +[HMDCloudHomeManagerZone zoneRootRecordName]
  +[HMDCloudHomeManagerZone zoneSubscriptionName:]
  +[HMDCloudHomeManagerZone createHomeManagerZoneWithName:owner:cacheZone:cloudCache:completion:]

  // instance methods
  -[HMDCloudHomeManagerZone setServerChangeToken:]
  -[HMDCloudHomeManagerZone createCloudZoneChangeTemporaryCache:]


HMDCloudHomeZone : HMDCloudZone
 @property  BOOL sharedHome

  // class methods
  +[HMDCloudHomeZone zoneRootRecordName]
  +[HMDCloudHomeZone zoneSubscriptionName:]
  +[HMDCloudHomeZone zoneSharedRootRecordName]
  +[HMDCloudHomeZone createHomeZoneWithName:owner:cacheZone:cloudCache:completion:]

  // instance methods
  -[HMDCloudHomeZone setServerChangeToken:]
  -[HMDCloudHomeZone createCloudZoneChangeTemporaryCache:]
  -[HMDCloudHomeZone isSharedHome]


AWDHomeKitWHAAccessControl : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasIsP2PEnabled
 @property  BOOL isP2PEnabled
 @property  BOOL hasPrivilegeLevel
 @property  int privilegeLevel
 @property  BOOL hasIsPasswordSet
 @property  BOOL isPasswordSet

  // instance methods
  -[AWDHomeKitWHAAccessControl copyWithZone:]
  -[AWDHomeKitWHAAccessControl timestamp]
  -[AWDHomeKitWHAAccessControl setTimestamp:]
  -[AWDHomeKitWHAAccessControl setHasTimestamp:]
  -[AWDHomeKitWHAAccessControl readFrom:]
  -[AWDHomeKitWHAAccessControl writeTo:]
  -[AWDHomeKitWHAAccessControl isEqual:]
  -[AWDHomeKitWHAAccessControl copyTo:]
  -[AWDHomeKitWHAAccessControl dictionaryRepresentation]
  -[AWDHomeKitWHAAccessControl mergeFrom:]
  -[AWDHomeKitWHAAccessControl hasTimestamp]
  -[AWDHomeKitWHAAccessControl setIsP2PEnabled:]
  -[AWDHomeKitWHAAccessControl setHasIsP2PEnabled:]
  -[AWDHomeKitWHAAccessControl hasIsP2PEnabled]
  -[AWDHomeKitWHAAccessControl privilegeLevel]
  -[AWDHomeKitWHAAccessControl setPrivilegeLevel:]
  -[AWDHomeKitWHAAccessControl setHasPrivilegeLevel:]
  -[AWDHomeKitWHAAccessControl hasPrivilegeLevel]
  -[AWDHomeKitWHAAccessControl privilegeLevelAsString:]
  -[AWDHomeKitWHAAccessControl StringAsPrivilegeLevel:]
  -[AWDHomeKitWHAAccessControl setIsPasswordSet:]
  -[AWDHomeKitWHAAccessControl setHasIsPasswordSet:]
  -[AWDHomeKitWHAAccessControl hasIsPasswordSet]
  -[AWDHomeKitWHAAccessControl isP2PEnabled]
  -[AWDHomeKitWHAAccessControl isPasswordSet]


HMDCameraAudioParameterCombination : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDAudioCodecGroup *codecGroupType
 @property  HMDBitRateSetting *bitrateSetting
 @property  HMDAudioSampleRate *sampleRate
 @property  NSNumber *maximumBitrate
 @property  NSNumber *minimumBitrate
 @property  NSNumber *rtcpInterval
 @property  NSNumber *rtpPTime

  // instance methods
  -[HMDCameraAudioParameterCombination .cxx_destruct]
  -[HMDCameraAudioParameterCombination isEqual:]
  -[HMDCameraAudioParameterCombination sampleRate]
  -[HMDCameraAudioParameterCombination bitrateSetting]
  -[HMDCameraAudioParameterCombination minimumBitrate]
  -[HMDCameraAudioParameterCombination rtcpInterval]
  -[HMDCameraAudioParameterCombination maximumBitrate]
  -[HMDCameraAudioParameterCombination initWithCodecGroup:bitrateSetting:sampleRate:]
  -[HMDCameraAudioParameterCombination rtpPTime]
  -[HMDCameraAudioParameterCombination initWithCodecGroup:bitrateSetting:sampleRate:maximumBitrate:minimumBitrate:rtcpInterval:rtpPtime:]
  -[HMDCameraAudioParameterCombination codecGroupType]


HMDRemoteKeyedArchiver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSKeyedArchiver *archiver
 @property  NSString *transportType

  // instance methods
  -[HMDRemoteKeyedArchiver archiver]
  -[HMDRemoteKeyedArchiver finishEncoding]
  -[HMDRemoteKeyedArchiver encodeObject:forKey:]
  -[HMDRemoteKeyedArchiver dealloc]
  -[HMDRemoteKeyedArchiver .cxx_destruct]
  -[HMDRemoteKeyedArchiver encodedData]
  -[HMDRemoteKeyedArchiver transportType]
  -[HMDRemoteKeyedArchiver setArchiver:]
  -[HMDRemoteKeyedArchiver setTransportType:]
  -[HMDRemoteKeyedArchiver __configure]
  -[HMDRemoteKeyedArchiver initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:dataVersion:supportedFeatures:]
  -[HMDRemoteKeyedArchiver initForWritingWithRemoteDeviceIsOnSameAccount:remoteGateway:remoteUserIsAdministrator:user:supportedFeatures:]


HMDUnassociatedAirPlayAccessory : HMDUnassociatedMediaAccessory <HMFLogging, HMDAccessoryAssociation>
 @property  HMFPairingIdentity *pairingIdentity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL supportsAssociation

  // class methods
  +[HMDUnassociatedAirPlayAccessory logCategory]
  +[HMDUnassociatedAirPlayAccessory modelForChangeType:uuid:parentUUID:]

  // instance methods
  -[HMDUnassociatedAirPlayAccessory logIdentifier]
  -[HMDUnassociatedAirPlayAccessory .cxx_destruct]
  -[HMDUnassociatedAirPlayAccessory pairingIdentity]
  -[HMDUnassociatedAirPlayAccessory setPairingIdentity:]
  -[HMDUnassociatedAirPlayAccessory addTransactionForHome:configurationAppIdentifier:]
  -[HMDUnassociatedAirPlayAccessory associateToHome:completionHandler:]
  -[HMDUnassociatedAirPlayAccessory supportsAssociation]


AWDHomeKitCharacteristicThresholdEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasMinPresent
 @property  BOOL minPresent
 @property  BOOL hasMaxPresent
 @property  BOOL maxPresent

  // instance methods
  -[AWDHomeKitCharacteristicThresholdEvent copyWithZone:]
  -[AWDHomeKitCharacteristicThresholdEvent readFrom:]
  -[AWDHomeKitCharacteristicThresholdEvent writeTo:]
  -[AWDHomeKitCharacteristicThresholdEvent isEqual:]
  -[AWDHomeKitCharacteristicThresholdEvent copyTo:]
  -[AWDHomeKitCharacteristicThresholdEvent dictionaryRepresentation]
  -[AWDHomeKitCharacteristicThresholdEvent mergeFrom:]
  -[AWDHomeKitCharacteristicThresholdEvent setMinPresent:]
  -[AWDHomeKitCharacteristicThresholdEvent setHasMinPresent:]
  -[AWDHomeKitCharacteristicThresholdEvent hasMinPresent]
  -[AWDHomeKitCharacteristicThresholdEvent setMaxPresent:]
  -[AWDHomeKitCharacteristicThresholdEvent setHasMaxPresent:]
  -[AWDHomeKitCharacteristicThresholdEvent hasMaxPresent]
  -[AWDHomeKitCharacteristicThresholdEvent minPresent]
  -[AWDHomeKitCharacteristicThresholdEvent maxPresent]


HMDXPCRequest : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSDate *startTime
 @property  NSString *messageName
 @property  long long qualityOfService
 @property  @? responseHandler

  // instance methods
  -[HMDXPCRequest .cxx_destruct]
  -[HMDXPCRequest messageName]
  -[HMDXPCRequest responseHandler]
  -[HMDXPCRequest qualityOfService]
  -[HMDXPCRequest startTime]
  -[HMDXPCRequest initWithMessageName:qualityOfService:responseHandler:]


HMDXPCRequestTracker : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate>
 @property  NSSet *requestIdentifiers
 @property  NSMutableDictionary *pendingRequests
 @property  NSString *clientName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDXPCRequestTracker timerDidFire:]
  -[HMDXPCRequestTracker clear]
  -[HMDXPCRequestTracker init]
  -[HMDXPCRequestTracker pendingRequests]
  -[HMDXPCRequestTracker clientName]
  -[HMDXPCRequestTracker .cxx_destruct]
  -[HMDXPCRequestTracker initWithQueue:]
  -[HMDXPCRequestTracker setClientName:]
  -[HMDXPCRequestTracker __sendReponseForRequest:response:error:]
  -[HMDXPCRequestTracker addRequestWithIdentifier:messageName:qualityOfService:responseHandler:]
  -[HMDXPCRequestTracker removeRequestWithIdentifier:response:error:]
  -[HMDXPCRequestTracker containsMessageWithIdentifier:]
  -[HMDXPCRequestTracker requestIdentifiers]


HMDXPCClientConnection : HMFMessageTransport /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMXPCMessageTransport, HMFLogging>
 @property  id remoteProxy
 @property  NSString *clientName
 @property  NSXPCConnection *xpcConnection
 @property  HMDXPCRequestTracker *requestTracker
 @property  BOOL activated
 @property  NSDictionary *privateAccessEntitlement
 @property  HMDXPCMessageSendPolicyParameters *sendPolicyParameters
 @property  HMDProcessInfo *processInfo
 @property  NSString *name
 @property  NSDictionary *userInfo
 @property  Class principalClass
 @property  int clientPid
 @property  NSSet *activeRequests
 @property  BOOL authorizedForHomeDataAccess
 @property  BOOL authorizedForMicrophoneAccess
 @property  unsigned long entitlements
 @property  BOOL entitledForAPIAccess
 @property  BOOL entitledForSPIAccess
 @property  BOOL authorizedForLocationAccess
 @property  BOOL entitledForBackgroundMode
 @property  BOOL entitledForHomeLocationAccess
 @property  BOOL entitledForCameraClipsAccess
 @property  BOOL entitledForMultiUserSetupAccess
 @property  BOOL entitledForShortcutsAutomationAccess
 @property  BOOL entitledToProvideAccessorySetupPayload
 @property  BOOL entitledForPersonManagerAccess
 @property  BOOL entitledForSecureAccess
 @property  BOOL platformBinary
 @property  NSString *applicationBundleIdentifier
 @property  NSString *companionAppBundleIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDXPCClientConnection logCategory]
  +[HMDXPCClientConnection entitlementsForConnection:]

  // instance methods
  -[HMDXPCClientConnection setXpcConnection:]
  -[HMDXPCClientConnection _displayName]
  -[HMDXPCClientConnection handleMessage:]
  -[HMDXPCClientConnection isActivated]
  -[HMDXPCClientConnection sendMessage:completionHandler:]
  -[HMDXPCClientConnection setActivated:]
  -[HMDXPCClientConnection isPlatformBinary]
  -[HMDXPCClientConnection logIdentifier]
  -[HMDXPCClientConnection xpcConnection]
  -[HMDXPCClientConnection attributeDescriptions]
  -[HMDXPCClientConnection clientName]
  -[HMDXPCClientConnection processInfo]
  -[HMDXPCClientConnection dealloc]
  -[HMDXPCClientConnection .cxx_destruct]
  -[HMDXPCClientConnection name]
  -[HMDXPCClientConnection setProcessInfo:]
  -[HMDXPCClientConnection applicationBundleIdentifier]
  -[HMDXPCClientConnection deactivate]
  -[HMDXPCClientConnection entitlements]
  -[HMDXPCClientConnection clientPid]
  -[HMDXPCClientConnection userInfo]
  -[HMDXPCClientConnection shortDescription]
  -[HMDXPCClientConnection principalClass]
  -[HMDXPCClientConnection activeRequests]
  -[HMDXPCClientConnection setClientName:]
  -[HMDXPCClientConnection activateWithCompletion:]
  -[HMDXPCClientConnection updateUserInfo:]
  -[HMDXPCClientConnection handleMessage:responseHandler:]
  -[HMDXPCClientConnection canSendMessage:]
  -[HMDXPCClientConnection remoteProxy]
  -[HMDXPCClientConnection isEntitledForSPIAccess]
  -[HMDXPCClientConnection sendPolicyParameters]
  -[HMDXPCClientConnection updateSendPolicyParameters:]
  -[HMDXPCClientConnection isEntitledToProvideAccessorySetupPayload]
  -[HMDXPCClientConnection isAuthorizedForLocationAccess]
  -[HMDXPCClientConnection isEntitledForSecureAccess]
  -[HMDXPCClientConnection isEntitledForHomeLocationAccess]
  -[HMDXPCClientConnection isEntitledForShortcutsAutomationAccess]
  -[HMDXPCClientConnection isEntitledForAPIAccess]
  -[HMDXPCClientConnection isAuthorizedForHomeDataAccess]
  -[HMDXPCClientConnection isAuthorizedForMicrophoneAccess]
  -[HMDXPCClientConnection isEntitledForBackgroundMode]
  -[HMDXPCClientConnection companionAppBundleIdentifier]
  -[HMDXPCClientConnection homeManagerOptions]
  -[HMDXPCClientConnection requestTracker]
  -[HMDXPCClientConnection __handleApplicationStateChange:]
  -[HMDXPCClientConnection initiateRefresh]
  -[HMDXPCClientConnection setSendPolicyParameters:]
  -[HMDXPCClientConnection isEntitledForCameraClipsAccess]
  -[HMDXPCClientConnection isEntitledForMultiUserSetupAccess]
  -[HMDXPCClientConnection isEntitledForPersonManagerAccess]
  -[HMDXPCClientConnection shouldSendResponseForMessageIdentifier:]
  -[HMDXPCClientConnection counterIdentifierForMessage:]
  -[HMDXPCClientConnection _notifyOfNewIncomingClientMessage]
  -[HMDXPCClientConnection initWithConnection:counterTracker:]
  -[HMDXPCClientConnection privateAccessEntitlement]
  -[HMDXPCClientConnection setPrivateAccessEntitlement:]


AWDHomeKitCameraIDSSessionSetup : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasIdsSessionInvitationSent
 @property  unsigned int idsSessionInvitationSent
 @property  BOOL hasIdsSessionInvitationReceived
 @property  unsigned int idsSessionInvitationReceived
 @property  BOOL hasIdsSessionStartedOnResident
 @property  unsigned int idsSessionStartedOnResident
 @property  BOOL hasIdsSessionStartedOnReceiver
 @property  unsigned int idsSessionStartedOnReceiver

  // instance methods
  -[AWDHomeKitCameraIDSSessionSetup copyWithZone:]
  -[AWDHomeKitCameraIDSSessionSetup readFrom:]
  -[AWDHomeKitCameraIDSSessionSetup writeTo:]
  -[AWDHomeKitCameraIDSSessionSetup isEqual:]
  -[AWDHomeKitCameraIDSSessionSetup copyTo:]
  -[AWDHomeKitCameraIDSSessionSetup dictionaryRepresentation]
  -[AWDHomeKitCameraIDSSessionSetup mergeFrom:]
  -[AWDHomeKitCameraIDSSessionSetup setIdsSessionInvitationSent:]
  -[AWDHomeKitCameraIDSSessionSetup setHasIdsSessionInvitationSent:]
  -[AWDHomeKitCameraIDSSessionSetup hasIdsSessionInvitationSent]
  -[AWDHomeKitCameraIDSSessionSetup setIdsSessionInvitationReceived:]
  -[AWDHomeKitCameraIDSSessionSetup setHasIdsSessionInvitationReceived:]
  -[AWDHomeKitCameraIDSSessionSetup hasIdsSessionInvitationReceived]
  -[AWDHomeKitCameraIDSSessionSetup setIdsSessionStartedOnResident:]
  -[AWDHomeKitCameraIDSSessionSetup setHasIdsSessionStartedOnResident:]
  -[AWDHomeKitCameraIDSSessionSetup hasIdsSessionStartedOnResident]
  -[AWDHomeKitCameraIDSSessionSetup setIdsSessionStartedOnReceiver:]
  -[AWDHomeKitCameraIDSSessionSetup setHasIdsSessionStartedOnReceiver:]
  -[AWDHomeKitCameraIDSSessionSetup hasIdsSessionStartedOnReceiver]
  -[AWDHomeKitCameraIDSSessionSetup idsSessionInvitationSent]
  -[AWDHomeKitCameraIDSSessionSetup idsSessionInvitationReceived]
  -[AWDHomeKitCameraIDSSessionSetup idsSessionStartedOnResident]
  -[AWDHomeKitCameraIDSSessionSetup idsSessionStartedOnReceiver]


HMDLogEventHAPMetricsEventAnalyzer : HMDLogEventAnalyzer
  // instance methods
  -[HMDLogEventHAPMetricsEventAnalyzer processLogEvent:]


AWDHomeKitLocationEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasNotifyOnEntry
 @property  BOOL notifyOnEntry
 @property  BOOL hasNotifyOnExit
 @property  BOOL notifyOnExit

  // instance methods
  -[AWDHomeKitLocationEvent setNotifyOnExit:]
  -[AWDHomeKitLocationEvent copyWithZone:]
  -[AWDHomeKitLocationEvent notifyOnEntry]
  -[AWDHomeKitLocationEvent notifyOnExit]
  -[AWDHomeKitLocationEvent setNotifyOnEntry:]
  -[AWDHomeKitLocationEvent readFrom:]
  -[AWDHomeKitLocationEvent writeTo:]
  -[AWDHomeKitLocationEvent isEqual:]
  -[AWDHomeKitLocationEvent copyTo:]
  -[AWDHomeKitLocationEvent dictionaryRepresentation]
  -[AWDHomeKitLocationEvent mergeFrom:]
  -[AWDHomeKitLocationEvent setHasNotifyOnEntry:]
  -[AWDHomeKitLocationEvent hasNotifyOnEntry]
  -[AWDHomeKitLocationEvent setHasNotifyOnExit:]
  -[AWDHomeKitLocationEvent hasNotifyOnExit]


HMDAccessorySettingsBackingStoreTransactionReceiver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBackingStoreObjectProtocol>
 @property  <HMDAccessorySettingsBackingStoreTransactionReceiverDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDAccessorySettingsBackingStoreTransactionReceiver initWithDelegate:]
  -[HMDAccessorySettingsBackingStoreTransactionReceiver .cxx_destruct]
  -[HMDAccessorySettingsBackingStoreTransactionReceiver setDelegate:]
  -[HMDAccessorySettingsBackingStoreTransactionReceiver delegate]
  -[HMDAccessorySettingsBackingStoreTransactionReceiver transactionObjectUpdated:newValues:message:]
  -[HMDAccessorySettingsBackingStoreTransactionReceiver transactionObjectRemoved:message:]


HMDNetworkRouterFirewallRuleManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDNetworkRouterFirewallRuleManagerInternal, HMFLogging, HMDNetworkRouterFirewallRuleManager, HMDNetworkRouterFirewallRuleManagerDebug>
 @property  HMBLocalDatabase *localDatabase
 @property  NSNotificationCenter *notificationCenter
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinatorFactory> *coordinatorFactory
 @property  HMFUnfairLock *propertyLock
 @property  <HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator> *coordinator
 @property  long long state
 @property  NSMutableArray *clients
 @property  unsigned long operationsInProgressCount
 @property  NSArray *activeClients
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRuleManager sharedInstance]
  +[HMDNetworkRouterFirewallRuleManager logCategory]
  +[HMDNetworkRouterFirewallRuleManager defaultCloudFetchInterval]
  +[HMDNetworkRouterFirewallRuleManager defaultCloudFetchRetryInterval]

  // instance methods
  -[HMDNetworkRouterFirewallRuleManager notificationCenter]
  -[HMDNetworkRouterFirewallRuleManager clients]
  -[HMDNetworkRouterFirewallRuleManager localDatabase]
  -[HMDNetworkRouterFirewallRuleManager dumpAllLocalRulesIgnoringOverrides:rawOutput:completion:]
  -[HMDNetworkRouterFirewallRuleManager propertyLock]
  -[HMDNetworkRouterFirewallRuleManager removeAllLocalRulesWithCompletion:]
  -[HMDNetworkRouterFirewallRuleManager init]
  -[HMDNetworkRouterFirewallRuleManager callbackQueue]
  -[HMDNetworkRouterFirewallRuleManager coordinator]
  -[HMDNetworkRouterFirewallRuleManager dealloc]
  -[HMDNetworkRouterFirewallRuleManager dumpLocalRulesForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:completion:]
  -[HMDNetworkRouterFirewallRuleManager setState:]
  -[HMDNetworkRouterFirewallRuleManager dumpLocalRulesForProductGroup:ignoreOverrides:rawOutput:completion:]
  -[HMDNetworkRouterFirewallRuleManager removeOverridesForProductGroup:productNumber:completion:]
  -[HMDNetworkRouterFirewallRuleManager .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManager setCoordinator:]
  -[HMDNetworkRouterFirewallRuleManager workQueue]
  -[HMDNetworkRouterFirewallRuleManager removeAllOverridesWithCompletion:]
  -[HMDNetworkRouterFirewallRuleManager setOverrides:completion:]
  -[HMDNetworkRouterFirewallRuleManager dumpPairedMetadataForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:completion:]
  -[HMDNetworkRouterFirewallRuleManager dumpCloudRecordsForProductGroup:productNumber:rawOutput:verifySignatures:completion:]
  -[HMDNetworkRouterFirewallRuleManager listCloudRecordsForProductGroup:rawOutput:completion:]
  -[HMDNetworkRouterFirewallRuleManager state]
  -[HMDNetworkRouterFirewallRuleManager addOverrides:completion:]
  -[HMDNetworkRouterFirewallRuleManager fetchCloudChangesWithCompletion:]
  -[HMDNetworkRouterFirewallRuleManager fetchRulesForAccessories:completion:]
  -[HMDNetworkRouterFirewallRuleManager startupForClient:completion:]
  -[HMDNetworkRouterFirewallRuleManager initWithLocalDatabase:]
  -[HMDNetworkRouterFirewallRuleManager initWithLocalDatabase:coordinatorFactory:]
  -[HMDNetworkRouterFirewallRuleManager initWithLocalDatabase:notificationCenter:workQueue:coordinatorFactory:]
  -[HMDNetworkRouterFirewallRuleManager coordinatorFactory]
  -[HMDNetworkRouterFirewallRuleManager operationsInProgressCount]
  -[HMDNetworkRouterFirewallRuleManager setOperationsInProgressCount:]
  -[HMDNetworkRouterFirewallRuleManager _fetchCloudChangesIgnoringLastFetchedAccessories:forceChangeNotifications:completion:]
  -[HMDNetworkRouterFirewallRuleManager shutdownForClient:]
  -[HMDNetworkRouterFirewallRuleManager fetchPairedMetadataVersionConfigurationsForAccessories:completion:]
  -[HMDNetworkRouterFirewallRuleManager didCompleteScheduledCloudFetch]
  -[HMDNetworkRouterFirewallRuleManager activeClients]
  -[HMDNetworkRouterFirewallRuleManager forceFetchCloudChangesAndForceChangeNotifications:completion:]


HMDTransientRuleManagerClient : NSObject /usr/lib/libc++.1.dylib <HMDNetworkRouterFirewallRuleManagerClient>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDTransientRuleManagerClient initWithDescription:]
  -[HMDTransientRuleManagerClient .cxx_destruct]


HMDNetworkRouterFirewallRuleManagerClientState : NSObject /usr/lib/libc++.1.dylib
 @property  <HMDNetworkRouterFirewallRuleManagerClient> *client
 @property  @? startupCompletion

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerClientState setClient:]
  -[HMDNetworkRouterFirewallRuleManagerClientState client]
  -[HMDNetworkRouterFirewallRuleManagerClientState .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerClientState startupCompletion]
  -[HMDNetworkRouterFirewallRuleManagerClientState setStartupCompletion:]


HMDHomeMediaSystemControllerMessageHandler : NSObject /usr/lib/libc++.1.dylib <HMFMessageReceiver>
 @property  HMDHome *home
 @property  <HMDHomeMediaSystemMessageHandlerDelegate> *delegate
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDHomeMediaSystemControllerMessageHandler messageTargetUUID]
  -[HMDHomeMediaSystemControllerMessageHandler messageDestination]
  -[HMDHomeMediaSystemControllerMessageHandler messageReceiveQueue]
  -[HMDHomeMediaSystemControllerMessageHandler .cxx_destruct]
  -[HMDHomeMediaSystemControllerMessageHandler _registerForMessages]
  -[HMDHomeMediaSystemControllerMessageHandler queue]
  -[HMDHomeMediaSystemControllerMessageHandler home]
  -[HMDHomeMediaSystemControllerMessageHandler messageDispatcher]
  -[HMDHomeMediaSystemControllerMessageHandler delegate]
  -[HMDHomeMediaSystemControllerMessageHandler _handleAddMediaSystem:]
  -[HMDHomeMediaSystemControllerMessageHandler _handleRemoveMediaSystem:]
  -[HMDHomeMediaSystemControllerMessageHandler preProcessMediaSystemMessage:]
  -[HMDHomeMediaSystemControllerMessageHandler _handleAddMediaSystemWithPreProcessedMessage:]
  -[HMDHomeMediaSystemControllerMessageHandler initWithQueue:home:messageDispatcher:delegate:]
  -[HMDHomeMediaSystemControllerMessageHandler handleUpdateMediaSystem:]


HMDCameraStreamSnapshotHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDCameraStreamSnapshotCaptureDelegate, HMDCameraGetSnapshotProtocol>
 @property  NSMutableSet *streamSnapshotCaptures
 @property  NSMutableSet *retiredStreamSnapshotCaptures
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *propertyQueue
 @property  NSString *logID
 @property  NSMutableDictionary *serviceInstanceStreamStatus
 @property  NSMapTable *delegateTable
 @property  BOOL streamAvailable
 @property  BOOL streamSetupInProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraStreamSnapshotHandler logCategory]

  // instance methods
  -[HMDCameraStreamSnapshotHandler removeDelegate:]
  -[HMDCameraStreamSnapshotHandler logID]
  -[HMDCameraStreamSnapshotHandler logIdentifier]
  -[HMDCameraStreamSnapshotHandler .cxx_destruct]
  -[HMDCameraStreamSnapshotHandler workQueue]
  -[HMDCameraStreamSnapshotHandler propertyQueue]
  -[HMDCameraStreamSnapshotHandler getSnapshot:]
  -[HMDCameraStreamSnapshotHandler removeVideoStreamInterface:]
  -[HMDCameraStreamSnapshotHandler addVideoStreamInterface:]
  -[HMDCameraStreamSnapshotHandler delegateTable]
  -[HMDCameraStreamSnapshotHandler callStreamSetupInProgress:]
  -[HMDCameraStreamSnapshotHandler serviceInstanceStreamStatus]
  -[HMDCameraStreamSnapshotHandler setStreamSetupInProgress:]
  -[HMDCameraStreamSnapshotHandler streamSnapshotCaptures]
  -[HMDCameraStreamSnapshotHandler setStreamAvailable:]
  -[HMDCameraStreamSnapshotHandler retiredStreamSnapshotCaptures]
  -[HMDCameraStreamSnapshotHandler _callDidGetNewSnapshot:]
  -[HMDCameraStreamSnapshotHandler _callDidGetLastSnapshot:]
  -[HMDCameraStreamSnapshotHandler _callStreamSetupInProgress:]
  -[HMDCameraStreamSnapshotHandler streamSnapshotCapture:didGetNewSnapshot:]
  -[HMDCameraStreamSnapshotHandler streamSnapshotCapture:didGetLastSnapshot:]
  -[HMDCameraStreamSnapshotHandler initWithWorkQueue:services:logID:]
  -[HMDCameraStreamSnapshotHandler addDelegate:delegateQueue:]
  -[HMDCameraStreamSnapshotHandler isStreamAvailable]
  -[HMDCameraStreamSnapshotHandler isStreamSetupInProgress]
  -[HMDCameraStreamSnapshotHandler setStreamSetupStatusForService:inProgress:]


HMDSettingModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore <HMDSettingModelProtocol>
 @property  NSNumber *type
 @property  NSNumber *properties
 @property  NSString *name
 @property  NSNumber *numberValue
 @property  NSString *stringValue
 @property  NSData *dataValue
 @property  NSUUID *selectionIdentifier
 @property  NSString *selectionValue
 @property  NSUUID *hmbModelID
 @property  NSUUID *hmbParentModelID
 @property  NSString *nameForKeyPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSettingModel hmbProperties]

  // instance methods
  -[HMDSettingModel copyWithNewParentModelID:]
  -[HMDSettingModel nameForKeyPath]
  -[HMDSettingModel setSettingValue:]


AWDHomeKitTargetControllerError : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasError
 @property  int error
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasTransportType
 @property  int transportType
 @property  BOOL hasCertified
 @property  int certified

  // instance methods
  -[AWDHomeKitTargetControllerError hasError]
  -[AWDHomeKitTargetControllerError copyWithZone:]
  -[AWDHomeKitTargetControllerError transportTypeAsString:]
  -[AWDHomeKitTargetControllerError setError:]
  -[AWDHomeKitTargetControllerError .cxx_destruct]
  -[AWDHomeKitTargetControllerError setHasTransportType:]
  -[AWDHomeKitTargetControllerError timestamp]
  -[AWDHomeKitTargetControllerError setTimestamp:]
  -[AWDHomeKitTargetControllerError transportType]
  -[AWDHomeKitTargetControllerError setHasTimestamp:]
  -[AWDHomeKitTargetControllerError error]
  -[AWDHomeKitTargetControllerError readFrom:]
  -[AWDHomeKitTargetControllerError writeTo:]
  -[AWDHomeKitTargetControllerError isEqual:]
  -[AWDHomeKitTargetControllerError StringAsTransportType:]
  -[AWDHomeKitTargetControllerError hasTransportType]
  -[AWDHomeKitTargetControllerError copyTo:]
  -[AWDHomeKitTargetControllerError dictionaryRepresentation]
  -[AWDHomeKitTargetControllerError mergeFrom:]
  -[AWDHomeKitTargetControllerError setHasError:]
  -[AWDHomeKitTargetControllerError hasTimestamp]
  -[AWDHomeKitTargetControllerError setTransportType:]
  -[AWDHomeKitTargetControllerError errorAsString:]
  -[AWDHomeKitTargetControllerError StringAsError:]
  -[AWDHomeKitTargetControllerError vendorDetails]
  -[AWDHomeKitTargetControllerError setVendorDetails:]
  -[AWDHomeKitTargetControllerError hasVendorDetails]
  -[AWDHomeKitTargetControllerError certified]
  -[AWDHomeKitTargetControllerError setCertified:]
  -[AWDHomeKitTargetControllerError setHasCertified:]
  -[AWDHomeKitTargetControllerError hasCertified]
  -[AWDHomeKitTargetControllerError certifiedAsString:]
  -[AWDHomeKitTargetControllerError StringAsCertified:]


HMDAudioStreamInterface : HMDStreamInterface <AVCAudioStreamDelegate>
 @property  BOOL muted
 @property  BOOL rtcpEnabled
 @property  BOOL rtpTimeOutEnabled
 @property  BOOL rtcpTimeOutEnabled
 @property  double rtpTimeOutIntervalSec
 @property  double rtcpTimeOutIntervalSec
 @property  double rtcpSendIntervalSec
 @property  NSNumber *syncSource
 @property  AVCAudioStream *audioStream
 @property  <HMDAudioStreamInterfaceDelegate> *delegate
 @property  BOOL streamStarted
 @property  unsigned long audioStreamSetting
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAudioStreamInterface logCategory]

  // instance methods
  -[HMDAudioStreamInterface setMuted:]
  -[HMDAudioStreamInterface logIdentifier]
  -[HMDAudioStreamInterface dealloc]
  -[HMDAudioStreamInterface isMuted]
  -[HMDAudioStreamInterface .cxx_destruct]
  -[HMDAudioStreamInterface streamDidStop:]
  -[HMDAudioStreamInterface setAudioStream:]
  -[HMDAudioStreamInterface audioStream]
  -[HMDAudioStreamInterface stopStream]
  -[HMDAudioStreamInterface setAudioStreamSetting:]
  -[HMDAudioStreamInterface audioStreamSetting]
  -[HMDAudioStreamInterface delegate]
  -[HMDAudioStreamInterface stream:didStart:error:]
  -[HMDAudioStreamInterface stream:didPause:error:]
  -[HMDAudioStreamInterface stream:didResume:error:]
  -[HMDAudioStreamInterface streamDidRTPTimeOut:]
  -[HMDAudioStreamInterface streamDidRTCPTimeOut:]
  -[HMDAudioStreamInterface streamDidServerDie:]
  -[HMDAudioStreamInterface setRtpTimeOutEnabled:]
  -[HMDAudioStreamInterface setRtcpTimeOutEnabled:]
  -[HMDAudioStreamInterface setRtcpEnabled:]
  -[HMDAudioStreamInterface setRtcpSendInterval:]
  -[HMDAudioStreamInterface isRTPTimeOutEnabled]
  -[HMDAudioStreamInterface setRtpTimeOutIntervalSec:]
  -[HMDAudioStreamInterface setRtcpTimeOutIntervalSec:]
  -[HMDAudioStreamInterface setRtcpSendIntervalSec:]
  -[HMDAudioStreamInterface syncSource]
  -[HMDAudioStreamInterface isRTCPEnabled]
  -[HMDAudioStreamInterface isRTCPTimeOutEnabled]
  -[HMDAudioStreamInterface rtpTimeOutIntervalSec]
  -[HMDAudioStreamInterface rtcpTimeOutIntervalSec]
  -[HMDAudioStreamInterface rtcpSendIntervalSec]
  -[HMDAudioStreamInterface startStream:]
  -[HMDAudioStreamInterface _createLocalSocket]
  -[HMDAudioStreamInterface _initializeStreamRemoteSender:]
  -[HMDAudioStreamInterface _initializeStreamRemoteDestinationReceiver:]
  -[HMDAudioStreamInterface _initializeStreamRemoteSocketReceiver:]
  -[HMDAudioStreamInterface _initializeStreamRemoteLocal]
  -[HMDAudioStreamInterface _startStream:]
  -[HMDAudioStreamInterface _callStarted:]
  -[HMDAudioStreamInterface _callStopped:]
  -[HMDAudioStreamInterface initWithSessionID:workQueue:delegate:delegateQueue:sessionHandler:localNetworkConfig:]
  -[HMDAudioStreamInterface updateAudioSetting:]
  -[HMDAudioStreamInterface updateAudioVolume:callback:]
  -[HMDAudioStreamInterface _updateAudioSetting:]
  -[HMDAudioStreamInterface _pauseStream]
  -[HMDAudioStreamInterface _resumeStream]
  -[HMDAudioStreamInterface streamStarted]
  -[HMDAudioStreamInterface setStreamStarted:]
  -[HMDAudioStreamInterface _callPaused:]
  -[HMDAudioStreamInterface _callResumed:]


HMDAccessorySettingMergeStrategy : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSNumber *conflictValue
 @property  long long strategy

  // instance methods
  -[HMDAccessorySettingMergeStrategy strategy]
  -[HMDAccessorySettingMergeStrategy .cxx_destruct]
  -[HMDAccessorySettingMergeStrategy initWithMergeStrategy:]
  -[HMDAccessorySettingMergeStrategy conflictValue]


HMDLogEvent : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL submitted
 @property  NSDate *endDate
 @property  NSUUID *eventType
 @property  NSError *eventError
 @property  double durationInMilliseconds
 @property  NSDate *startDate

  // class methods
  +[HMDLogEvent stringForSource:]

  // instance methods
  -[HMDLogEvent initWithEventType:]
  -[HMDLogEvent init]
  -[HMDLogEvent setEndDate:]
  -[HMDLogEvent startDate]
  -[HMDLogEvent .cxx_destruct]
  -[HMDLogEvent eventType]
  -[HMDLogEvent endDate]
  -[HMDLogEvent durationInMilliseconds]
  -[HMDLogEvent setStartDate:]
  -[HMDLogEvent setSubmitted:]
  -[HMDLogEvent submitAtDate:error:]
  -[HMDLogEvent isSubmitted]
  -[HMDLogEvent setEventError:]
  -[HMDLogEvent eventError]
  -[HMDLogEvent bucketedDurationWithRoundInterval:]
  -[HMDLogEvent populateErrorDetails:]


HMDCloudManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, APSConnectionDelegate>
 @property  <HMDCloudManagerDelegate> *delegate
 @property  <HMDCloudManagerDataSource> *dataSource
 @property  CKContainer *container
 @property  CKDatabase *database
 @property  HMDCloudCache *cloudCache
 @property  HMDCloudLegacyZone *legacyZone
 @property  HMDCloudMetadataZone *metadataZone
 @property  HMDCloudHomeManagerZone *homeManagerZone
 @property  HMFMessageDispatcher *configSyncDispatcher
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  BOOL accountActive
 @property  @? fetchCompletionHandler
 @property  NSObject<OS_dispatch_queue> *clientCallbackQueue
 @property  BOOL cloudHomeDataRecordExists
 @property  BOOL keychainSyncEnabled
 @property  BOOL decryptionFailed
 @property  NSObject<OS_dispatch_source> *retryTimer
 @property  NSObject<OS_dispatch_source> *pollTimer
 @property  NSObject<OS_dispatch_source> *controllerKeyPollTimer
 @property  NSObject<OS_dispatch_source> *watchdogControllerKeyPollTimer
 @property  APSConnection *pushConnection
 @property  @? cloudDataDeletedNotificationHandler
 @property  @? cloudMetadataDeletedNotificationHandler
 @property  @? controllerKeyAvailableNotificationHandler
 @property  HMDCloudDataSyncStateFilter *cloudDataSyncStateFilter
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDSyncOperationManager *syncManager
 @property  NSMutableArray *currentBackoffTimerValuesInMinutes
 @property  @? dataDecryptionFailedHandler
 @property  @? accountActiveUpdateHandler
 @property  BOOL firstV3FetchRun
 @property  BOOL firstDBQueryRun
 @property  NSData *serverTokenData
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCloudManager logCategory]

  // instance methods
  -[HMDCloudManager setDatabase:]
  -[HMDCloudManager connection:didReceiveIncomingMessage:]
  -[HMDCloudManager connection:didReceiveToken:forTopic:identifier:]
  -[HMDCloudManager setRetryTimer:]
  -[HMDCloudManager connection:didReceivePublicToken:]
  -[HMDCloudManager setWorkQueue:]
  -[HMDCloudManager setClientCallbackQueue:]
  -[HMDCloudManager callbackQueue]
  -[HMDCloudManager fetchCompletionHandler]
  -[HMDCloudManager setPushConnection:]
  -[HMDCloudManager retryTimer]
  -[HMDCloudManager dealloc]
  -[HMDCloudManager setCallbackQueue:]
  -[HMDCloudManager .cxx_destruct]
  -[HMDCloudManager setFetchCompletionHandler:]
  -[HMDCloudManager workQueue]
  -[HMDCloudManager container]
  -[HMDCloudManager database]
  -[HMDCloudManager setMsgDispatcher:]
  -[HMDCloudManager msgDispatcher]
  -[HMDCloudManager setContainer:]
  -[HMDCloudManager syncManager]
  -[HMDCloudManager setSyncManager:]
  -[HMDCloudManager dataSource]
  -[HMDCloudManager pushConnection]
  -[HMDCloudManager keychainSyncEnabled]
  -[HMDCloudManager clientCallbackQueue]
  -[HMDCloudManager delegate]
  -[HMDCloudManager cloudCache]
  -[HMDCloudManager accountActive]
  -[HMDCloudManager cloudDataSyncStateFilter]
  -[HMDCloudManager decryptionFailed]
  -[HMDCloudManager initWithMessageDispatcher:cloudDataSyncStateFilter:cloudCache:delegate:dataSource:syncManager:callbackQueue:container:workQueue:]
  -[HMDCloudManager resetCloudServerTokenData:]
  -[HMDCloudManager handleKeychainStateChangedNotification:]
  -[HMDCloudManager _registerForProxSetupNotifications]
  -[HMDCloudManager __addCKDatabaseOperation:]
  -[HMDCloudManager __deleteRecordZonesWithIDs:completionHandler:]
  -[HMDCloudManager legacyZone]
  -[HMDCloudManager metadataZone]
  -[HMDCloudManager homeManagerZone]
  -[HMDCloudManager _addHomeZoneName:owner:]
  -[HMDCloudManager _setupSubscriptionForZone:]
  -[HMDCloudManager _removeHomeZoneName:]
  -[HMDCloudManager _fetchTransaction:completionHandler:]
  -[HMDCloudManager _checkZoneAndUploadTransaction:completionHandler:]
  -[HMDCloudManager _uploadTransaction:completionHandler:]
  -[HMDCloudManager __saveRecordZone:completionHandler:]
  -[HMDCloudManager __deleteRecordZoneWithID:completionHandler:]
  -[HMDCloudManager _createZoneAndUploadTransaction:completionHandler:]
  -[HMDCloudManager __fetchRecordZoneWithID:completionHandler:]
  -[HMDCloudManager _verifyZoneHasBeenDeletedTransaction:completionHandler:]
  -[HMDCloudManager _removeZonesTransactions:completionHandler:]
  -[HMDCloudManager _uploadLegacyTransaction:completionHandler:]
  -[HMDCloudManager setCloudHomeDataRecordExists:]
  -[HMDCloudManager _resetCloudDataAndDeleteMetadataForCurrentAccount:completionHandler:]
  -[HMDCloudManager _resetCloudZonesIgnoreHomeManager:completionHandler:]
  -[HMDCloudManager _fetchAndVerifyZoneRootRecord:completionHandler:]
  -[HMDCloudManager _verifyAndRemoveZone:completionHandler:]
  -[HMDCloudManager __fetchAllRecordZonesWithCompletionHandler:]
  -[HMDCloudManager _resetCloudServerTokenData]
  -[HMDCloudManager _stopFetchRetryTimer]
  -[HMDCloudManager _updateServerTokenStatusOnCloudFilter]
  -[HMDCloudManager _resetCloudCache:]
  -[HMDCloudManager updateServerTokenStatusOnCloudFilter]
  -[HMDCloudManager _serverTokenData]
  -[HMDCloudManager _handleAccountStatus:completionHandler:]
  -[HMDCloudManager setCloudDataDeletedNotificationHandler:]
  -[HMDCloudManager setCloudMetadataDeletedNotificationHandler:]
  -[HMDCloudManager setControllerKeyAvailableNotificationHandler:]
  -[HMDCloudManager setDataDecryptionFailedHandler:]
  -[HMDCloudManager setAccountActiveUpdateHandler:]
  -[HMDCloudManager _fetchLegacyTransaction:forceFetch:accountCompletionHandler:dataCompletionHandler:]
  -[HMDCloudManager cloudMetadataDeletedNotificationHandler]
  -[HMDCloudManager _forceCleanCloud:fetchTransaction:completionHandler:]
  -[HMDCloudManager _resetHomeDataRecordState]
  -[HMDCloudManager _startControllerKeyPollTimer]
  -[HMDCloudManager cloudHomeDataRecordExists]
  -[HMDCloudManager _processFetchedTransaction:]
  -[HMDCloudManager _processFetchCompletedWithError:serverToken:fetchTransaction:migrationOptions:completionHandler:moreRecordsComing:emptyRecord:]
  -[HMDCloudManager setFirstV3FetchRun:]
  -[HMDCloudManager setFirstDBQueryRun:]
  -[HMDCloudManager isFirstV3FetchRun]
  -[HMDCloudManager watchdogControllerKeyPollTimer]
  -[HMDCloudManager currentBackoffTimerValuesInMinutes]
  -[HMDCloudManager setCurrentBackoffTimerValuesInMinutes:]
  -[HMDCloudManager _startControllerKeyPollTimerWithBackoff]
  -[HMDCloudManager dataDecryptionFailedHandler]
  -[HMDCloudManager _removeAllHomeZonesCompletionHandler:]
  -[HMDCloudManager _verifyAndRemoveAllHomeZonesCompletionHandler:]
  -[HMDCloudManager _validFetchRetryCKErrorCode:]
  -[HMDCloudManager _startFetchRetryTimer]
  -[HMDCloudManager fetchCurrentAccountStateWithCompletionHandler:]
  -[HMDCloudManager _createZoneAndFetchChanges:]
  -[HMDCloudManager _registerForPushNotifications]
  -[HMDCloudManager setAccountActive:]
  -[HMDCloudManager _stopFetchPollTimer]
  -[HMDCloudManager _stopControllerKeyPollTimer]
  -[HMDCloudManager setKeychainSyncEnabled:]
  -[HMDCloudManager _accountIsActive]
  -[HMDCloudManager _verifyZonesExist:zoneIndex:completion:]
  -[HMDCloudManager _handleKeychainSyncStateChanged:]
  -[HMDCloudManager _startFetchPollTimer]
  -[HMDCloudManager fetchDatabaseZoneChanges]
  -[HMDCloudManager accountActiveUpdateHandler]
  -[HMDCloudManager cloudDataDeletedNotificationHandler]
  -[HMDCloudManager __deleteRecordWithID:completionHandler:]
  -[HMDCloudManager setPollTimer:]
  -[HMDCloudManager pollTimer]
  -[HMDCloudManager _handleControllerKeyAvailable]
  -[HMDCloudManager controllerKeyAvailableNotificationHandler]
  -[HMDCloudManager _stopWatchdogControllerKeyPollTimer]
  -[HMDCloudManager setWatchdogControllerKeyPollTimer:]
  -[HMDCloudManager _startControllerKeyPollTimerWithValue:]
  -[HMDCloudManager setControllerKeyPollTimer:]
  -[HMDCloudManager controllerKeyPollTimer]
  -[HMDCloudManager _startWatchdogControllerKeyPollTimer]
  -[HMDCloudManager _auditProxSetupNotification:]
  -[HMDCloudManager __saveSubscription:completionHandler:]
  -[HMDCloudManager __fetchSubscriptionWithID:completionHandler:]
  -[HMDCloudManager _fetchDatabaseZoneChangesCompletion:]
  -[HMDCloudManager _scheduleZoneFetch:]
  -[HMDCloudManager isFirstDBQueryRun]
  -[HMDCloudManager initWithMessageDispatcher:cloudDataSyncStateFilter:cloudCache:delegate:dataSource:syncManager:callbackQueue:]
  -[HMDCloudManager legacyZoneHasRecordsAvaliable]
  -[HMDCloudManager addHomeZoneName:owner:]
  -[HMDCloudManager removeHomeZoneName:]
  -[HMDCloudManager fetchTransaction:completionHandler:]
  -[HMDCloudManager uploadTransaction:completionHandler:]
  -[HMDCloudManager removeZonesTransactions:completionHandler:]
  -[HMDCloudManager uploadLegacyTransaction:completionHandler:]
  -[HMDCloudManager resetCloudDataAndDeleteMetadataForCurrentAccount:completionHandler:]
  -[HMDCloudManager resetCloudCache:]
  -[HMDCloudManager serverTokenData]
  -[HMDCloudManager setDataAvailableFromCloudCompletionBlock:]
  -[HMDCloudManager setCloudDataDeletedNotificationBlock:]
  -[HMDCloudManager setCloudMetadataDeletedNotificationBlock:]
  -[HMDCloudManager setControllerKeyAvailableNotificationBlock:]
  -[HMDCloudManager setDataDecryptionFailedCompletionBlock:]
  -[HMDCloudManager setAccountActiveUpdateCallback:]
  -[HMDCloudManager fetchLegacyTransaction:forceFetch:accountCompletionHandler:dataCompletionHandler:]
  -[HMDCloudManager updateAccountStatusChanged:completionHandler:]
  -[HMDCloudManager _changeTokenFromData:]
  -[HMDCloudManager updateCloudDataSyncFilterState:]
  -[HMDCloudManager initializeServerTokenStatusOnCloudFilter]
  -[HMDCloudManager cacheDatabaseServerToken]
  -[HMDCloudManager setCloudCache:]
  -[HMDCloudManager configSyncDispatcher]
  -[HMDCloudManager setConfigSyncDispatcher:]
  -[HMDCloudManager setCloudDataSyncStateFilter:]


AWDHomeKitCharacteristic : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasServiceType
 @property  NSString *serviceType
 @property  BOOL hasCharacteristicType
 @property  NSString *characteristicType

  // instance methods
  -[AWDHomeKitCharacteristic characteristicType]
  -[AWDHomeKitCharacteristic copyWithZone:]
  -[AWDHomeKitCharacteristic hasServiceType]
  -[AWDHomeKitCharacteristic setServiceType:]
  -[AWDHomeKitCharacteristic .cxx_destruct]
  -[AWDHomeKitCharacteristic serviceType]
  -[AWDHomeKitCharacteristic readFrom:]
  -[AWDHomeKitCharacteristic writeTo:]
  -[AWDHomeKitCharacteristic isEqual:]
  -[AWDHomeKitCharacteristic copyTo:]
  -[AWDHomeKitCharacteristic dictionaryRepresentation]
  -[AWDHomeKitCharacteristic setCharacteristicType:]
  -[AWDHomeKitCharacteristic mergeFrom:]
  -[AWDHomeKitCharacteristic hasCharacteristicType]


HMDUserActionPredictionModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSUUID *predictionTargetUUID
 @property  NSUUID *targetServiceUUID
 @property  NSUUID *targetServiceGroupUUID
 @property  NSUUID *targetGroupUUID
 @property  NSNumber *type
 @property  NSNumber *groupType
 @property  NSNumber *predictionScore

  // class methods
  +[HMDUserActionPredictionModel hmbExcludeFromCloudStorage]
  +[HMDUserActionPredictionModel hmbProperties]

  // instance methods
  -[HMDUserActionPredictionModel userActionPrediction]
  -[HMDUserActionPredictionModel initWithUserActionPrediction:]


HMDTargetControllerCommandEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long commandType
 @property  HMDHAPAccessory *accessory

  // class methods
  +[HMDTargetControllerCommandEvent uuid]
  +[HMDTargetControllerCommandEvent commandEventWithCommandType:accessory:]

  // instance methods
  -[HMDTargetControllerCommandEvent .cxx_destruct]
  -[HMDTargetControllerCommandEvent commandType]
  -[HMDTargetControllerCommandEvent accessory]
  -[HMDTargetControllerCommandEvent AWDMessageType]
  -[HMDTargetControllerCommandEvent metricForAWD]
  -[HMDTargetControllerCommandEvent initWithCommandType:accessory:]


AWDHomeKitWHASetting : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasKeyPath
 @property  NSString *keyPath
 @property  BOOL hasValue
 @property  AWDHomeKitValue *value

  // instance methods
  -[AWDHomeKitWHASetting copyWithZone:]
  -[AWDHomeKitWHASetting setKeyPath:]
  -[AWDHomeKitWHASetting hasValue]
  -[AWDHomeKitWHASetting .cxx_destruct]
  -[AWDHomeKitWHASetting timestamp]
  -[AWDHomeKitWHASetting setTimestamp:]
  -[AWDHomeKitWHASetting keyPath]
  -[AWDHomeKitWHASetting setHasTimestamp:]
  -[AWDHomeKitWHASetting readFrom:]
  -[AWDHomeKitWHASetting writeTo:]
  -[AWDHomeKitWHASetting setValue:]
  -[AWDHomeKitWHASetting isEqual:]
  -[AWDHomeKitWHASetting value]
  -[AWDHomeKitWHASetting copyTo:]
  -[AWDHomeKitWHASetting dictionaryRepresentation]
  -[AWDHomeKitWHASetting hasKeyPath]
  -[AWDHomeKitWHASetting mergeFrom:]
  -[AWDHomeKitWHASetting hasTimestamp]


HMDUIDialogPresenter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  ^{__CFUserNotification=} currentNotification
 @property  id currentContext
 @property  NSMutableArray *pendingContexts
 @property  BOOL selectedByPeerDevice
 @property  BOOL peerDeviceAcceptedSelection
 @property  NSObject<OS_dispatch_semaphore> *notificationSem

  // class methods
  +[HMDUIDialogPresenter sharedUIDialogPresenter]

  // instance methods
  -[HMDUIDialogPresenter setWorkQueue:]
  -[HMDUIDialogPresenter setPendingContexts:]
  -[HMDUIDialogPresenter init]
  -[HMDUIDialogPresenter dealloc]
  -[HMDUIDialogPresenter .cxx_destruct]
  -[HMDUIDialogPresenter currentContext]
  -[HMDUIDialogPresenter workQueue]
  -[HMDUIDialogPresenter pendingContexts]
  -[HMDUIDialogPresenter setCurrentContext:]
  -[HMDUIDialogPresenter requestUserPermissionForRemovalOfRouter:accessoriesRequiringManualReconfiguration:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter requestPairingPasswordForAccessory:home:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter notificationSem]
  -[HMDUIDialogPresenter currentNotification]
  -[HMDUIDialogPresenter setSelectedByPeerDevice:]
  -[HMDUIDialogPresenter setPeerDeviceAcceptedSelection:]
  -[HMDUIDialogPresenter setCurrentNotification:]
  -[HMDUIDialogPresenter selectedByPeerDevice]
  -[HMDUIDialogPresenter peerDeviceAcceptedSelection]
  -[HMDUIDialogPresenter _addToPendingContext:]
  -[HMDUIDialogPresenter _requestPairingPasswordForAccessory:home:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _presentDialogWithInfo:options:textField:withContext:]
  -[HMDUIDialogPresenter _requestUserPermissionForUnauthenticatedAccessory:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _requestUserPermissionForLegacyWACAccessory:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _requestUserPermissionWithAccessoryPPIDInfo:name:category:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _requestUserPermissionForDeletionOfHomeWithName:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _requestUserPermissionForRemovalOfRouter:accessoriesRequiringManualReconfiguration:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _showUserDialogForIncompatibleAccessory:name:category:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _displayKeychainSyncForHome:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _displayiCloudSwitchWithContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _displayUpgradeNeededWithContext:queue:completionHandler:]
  -[HMDUIDialogPresenter _displayInternalErrorWithContext:message:]
  -[HMDUIDialogPresenter _presentDialogWithInfo:options:targetResponse:textField:withContext:]
  -[HMDUIDialogPresenter _addCurrentNotification:withContext:]
  -[HMDUIDialogPresenter _removeCurrentNotification:currentSelection:selectedByPeerDevice:andContext:]
  -[HMDUIDialogPresenter _presentDialogWithInfo:options:targetResponse:textField:withContext:selectedByPeerDevice:timeout:]
  -[HMDUIDialogPresenter dismissPendingDialogWithContext:queue:completionHandler:]
  -[HMDUIDialogPresenter dismissPendingDialogDueToPeerDeviceSelection:context:queue:completionHandler:]
  -[HMDUIDialogPresenter _isPendingContext:]
  -[HMDUIDialogPresenter requestUserPermissionForUnauthenticatedAccessory:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter requestUserPermissionForLegacyWACAccessory:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter requestUserPermissionWithAccessoryPPIDInfo:name:category:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter requestUserPermissionForDeletionOfHomeWithName:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter showUserDialogForIncompatibleAccessory:name:category:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter displayKeychainSyncForHome:withContext:queue:completionHandler:]
  -[HMDUIDialogPresenter displayiCloudSwitchWithContext:queue:completionHandler:]
  -[HMDUIDialogPresenter displayUpgradeNeededWithContext:queue:completionHandler:]
  -[HMDUIDialogPresenter displayInternalErrorWithContext:message:]
  -[HMDUIDialogPresenter confirmReportAccessory:context:completionQueue:completionHandler:]
  -[HMDUIDialogPresenter displayExecutionErrorOfTrigger:partialSuccess:context:completionQueue:completionHandler:]
  -[HMDUIDialogPresenter setNotificationSem:]


HMDMediaContentProfileAccessControlModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSArray *accessories

  // class methods
  +[HMDMediaContentProfileAccessControlModel hmbProperties]


HMDWakeConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSData *reserved
 @property  HMDWakeConfigurationParameters *custom1
 @property  HMDWakeConfigurationParameters *custom2
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDWakeConfiguration parsedFromData:error:]

  // instance methods
  -[HMDWakeConfiguration copyWithZone:]
  -[HMDWakeConfiguration init]
  -[HMDWakeConfiguration .cxx_destruct]
  -[HMDWakeConfiguration reserved]
  -[HMDWakeConfiguration setReserved:]
  -[HMDWakeConfiguration custom1]
  -[HMDWakeConfiguration custom2]
  -[HMDWakeConfiguration isEqual:]
  -[HMDWakeConfiguration parseFromData:error:]
  -[HMDWakeConfiguration serializeWithError:]
  -[HMDWakeConfiguration setCustom1:]
  -[HMDWakeConfiguration setCustom2:]
  -[HMDWakeConfiguration initWithReserved:custom1:custom2:]


HMDWakeConfigurationParameters : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSData *delimiter
 @property  NSData *primaryIdentifier
 @property  NSMutableArray *secondaryIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDWakeConfigurationParameters parsedFromData:error:]

  // instance methods
  -[HMDWakeConfigurationParameters copyWithZone:]
  -[HMDWakeConfigurationParameters init]
  -[HMDWakeConfigurationParameters .cxx_destruct]
  -[HMDWakeConfigurationParameters isEqual:]
  -[HMDWakeConfigurationParameters delimiter]
  -[HMDWakeConfigurationParameters setDelimiter:]
  -[HMDWakeConfigurationParameters primaryIdentifier]
  -[HMDWakeConfigurationParameters parseFromData:error:]
  -[HMDWakeConfigurationParameters secondaryIdentifier]
  -[HMDWakeConfigurationParameters setSecondaryIdentifier:]
  -[HMDWakeConfigurationParameters serializeWithError:]
  -[HMDWakeConfigurationParameters setPrimaryIdentifier:]
  -[HMDWakeConfigurationParameters initWithDelimiter:primaryIdentifier:secondaryIdentifier:]


AWDHomeKitEventTriggerExecutionSession : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasSessionID
 @property  NSString *sessionID
 @property  NSMutableArray *triggerEvents
 @property  NSMutableArray *endEvents
 @property  BOOL hasExecutionState
 @property  int executionState
 @property  BOOL hasResultErrorCode
 @property  int resultErrorCode

  // class methods
  +[AWDHomeKitEventTriggerExecutionSession triggerEventsType]
  +[AWDHomeKitEventTriggerExecutionSession endEventsType]

  // instance methods
  -[AWDHomeKitEventTriggerExecutionSession hasSessionID]
  -[AWDHomeKitEventTriggerExecutionSession copyWithZone:]
  -[AWDHomeKitEventTriggerExecutionSession setSessionID:]
  -[AWDHomeKitEventTriggerExecutionSession sessionID]
  -[AWDHomeKitEventTriggerExecutionSession endEvents]
  -[AWDHomeKitEventTriggerExecutionSession .cxx_destruct]
  -[AWDHomeKitEventTriggerExecutionSession timestamp]
  -[AWDHomeKitEventTriggerExecutionSession setTimestamp:]
  -[AWDHomeKitEventTriggerExecutionSession setHasTimestamp:]
  -[AWDHomeKitEventTriggerExecutionSession readFrom:]
  -[AWDHomeKitEventTriggerExecutionSession writeTo:]
  -[AWDHomeKitEventTriggerExecutionSession isEqual:]
  -[AWDHomeKitEventTriggerExecutionSession copyTo:]
  -[AWDHomeKitEventTriggerExecutionSession dictionaryRepresentation]
  -[AWDHomeKitEventTriggerExecutionSession mergeFrom:]
  -[AWDHomeKitEventTriggerExecutionSession hasTimestamp]
  -[AWDHomeKitEventTriggerExecutionSession setTriggerEvents:]
  -[AWDHomeKitEventTriggerExecutionSession triggerEvents]
  -[AWDHomeKitEventTriggerExecutionSession setResultErrorCode:]
  -[AWDHomeKitEventTriggerExecutionSession setHasResultErrorCode:]
  -[AWDHomeKitEventTriggerExecutionSession hasResultErrorCode]
  -[AWDHomeKitEventTriggerExecutionSession resultErrorCode]
  -[AWDHomeKitEventTriggerExecutionSession addTriggerEvents:]
  -[AWDHomeKitEventTriggerExecutionSession addEndEvents:]
  -[AWDHomeKitEventTriggerExecutionSession triggerEventsCount]
  -[AWDHomeKitEventTriggerExecutionSession clearTriggerEvents]
  -[AWDHomeKitEventTriggerExecutionSession triggerEventsAtIndex:]
  -[AWDHomeKitEventTriggerExecutionSession endEventsCount]
  -[AWDHomeKitEventTriggerExecutionSession clearEndEvents]
  -[AWDHomeKitEventTriggerExecutionSession endEventsAtIndex:]
  -[AWDHomeKitEventTriggerExecutionSession executionState]
  -[AWDHomeKitEventTriggerExecutionSession setExecutionState:]
  -[AWDHomeKitEventTriggerExecutionSession setHasExecutionState:]
  -[AWDHomeKitEventTriggerExecutionSession hasExecutionState]
  -[AWDHomeKitEventTriggerExecutionSession executionStateAsString:]
  -[AWDHomeKitEventTriggerExecutionSession StringAsExecutionState:]
  -[AWDHomeKitEventTriggerExecutionSession setEndEvents:]


HMDCameraClipsQuotaManager : NSObject /usr/lib/libc++.1.dylib <HMDDatabaseDelegate, HMFLogging>
 @property  HMBCloudDatabase *cloudDatabase
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraClipsQuotaManager logCategory]
  +[HMDCameraClipsQuotaManager defaultManager]
  +[HMDCameraClipsQuotaManager _quotaErrorFromServerError:]
  +[HMDCameraClipsQuotaManager _quotaServerErrorFromServerError:]

  // instance methods
  -[HMDCameraClipsQuotaManager logIdentifier]
  -[HMDCameraClipsQuotaManager .cxx_destruct]
  -[HMDCameraClipsQuotaManager initWithDatabase:]
  -[HMDCameraClipsQuotaManager cloudDatabase]
  -[HMDCameraClipsQuotaManager database:willRemoveZoneWithName:isPrivate:]
  -[HMDCameraClipsQuotaManager _addCodeOperationWithFunctionName:request:responseClass:]
  -[HMDCameraClipsQuotaManager disableCloudStorageForZoneWithName:]
  -[HMDCameraClipsQuotaManager enableCloudStorageForZoneWithName:]


HMDAccountRegistry : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, NSFastEnumeration>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDAppleAccountManager *appleAccountManager
 @property  HMDRemoteAccountManager *remoteAccountManager
 @property  BOOL started
 @property  NSArray *accounts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccountRegistry sharedRegistry]
  +[HMDAccountRegistry logCategory]
  +[HMDAccountRegistry automaticallyNotifiesObserversForKey:]

  // instance methods
  -[HMDAccountRegistry accounts]
  -[HMDAccountRegistry started]
  -[HMDAccountRegistry init]
  -[HMDAccountRegistry attributeDescriptions]
  -[HMDAccountRegistry .cxx_destruct]
  -[HMDAccountRegistry clientQueue]
  -[HMDAccountRegistry stop]
  -[HMDAccountRegistry countByEnumeratingWithState:objects:count:]
  -[HMDAccountRegistry accountForHandle:]
  -[HMDAccountRegistry reset]
  -[HMDAccountRegistry start]
  -[HMDAccountRegistry deviceForHandle:]
  -[HMDAccountRegistry _resolveAccountForHandle:completionHandler:]
  -[HMDAccountRegistry initWithAppleAccountManager:remoteAccountManager:]
  -[HMDAccountRegistry __handleAppleAccountUpdate:]
  -[HMDAccountRegistry __handleAddedRemoteAccount:]
  -[HMDAccountRegistry __handleRemovedRemoteAccount:]
  -[HMDAccountRegistry appleAccountManager]
  -[HMDAccountRegistry remoteAccountManager]
  -[HMDAccountRegistry accountForHandle:exists:]
  -[HMDAccountRegistry deviceForIdentifier:]
  -[HMDAccountRegistry deviceForHandle:exists:]
  -[HMDAccountRegistry deviceForDevice:exists:]
  -[HMDAccountRegistry accountExistsForHandle:]
  -[HMDAccountRegistry deviceExistsForHandle:]
  -[HMDAccountRegistry deviceExistsForDevice:]
  -[HMDAccountRegistry deviceForDevice:]
  -[HMDAccountRegistry deviceForPushToken:]
  -[HMDAccountRegistry __handleAppleAccountHandlesUpdated:]
  -[HMDAccountRegistry __handleAppleAccountDeviceAdded:]


HMDHomePresenceUpdate : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDHomePresence *homePresence
 @property  HMDUserPresence *userPresence
 @property  BOOL update
 @property  HMDDevice *causingDevice

  // instance methods
  -[HMDHomePresenceUpdate isUpdate]
  -[HMDHomePresenceUpdate .cxx_destruct]
  -[HMDHomePresenceUpdate initWithHomePresence:userPresence:update:causingDevice:]
  -[HMDHomePresenceUpdate homePresence]
  -[HMDHomePresenceUpdate userPresence]
  -[HMDHomePresenceUpdate causingDevice]


HMDBTLEAdvertiser : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HAPBTLECentralManagerDelegate, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFUnfairLock *lock
 @property  CUBLEAdvertiser *leAdvertiser
 @property  HMFTimer *advertisementTimer
 @property  HMDHAPAccessory *accessory
 @property  HAPBTLECentralManager *centralManager
 @property  HMDAccessoryQueues *powerOnQueues
 @property  BOOL isReady
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBTLEAdvertiser sharedAdvertiser]
  +[HMDBTLEAdvertiser initializeAdvertiser]

  // instance methods
  -[HMDBTLEAdvertiser timerDidFire:]
  -[HMDBTLEAdvertiser setLock:]
  -[HMDBTLEAdvertiser isReady]
  -[HMDBTLEAdvertiser setWorkQueue:]
  -[HMDBTLEAdvertiser init]
  -[HMDBTLEAdvertiser centralManager]
  -[HMDBTLEAdvertiser .cxx_destruct]
  -[HMDBTLEAdvertiser powerOn:]
  -[HMDBTLEAdvertiser workQueue]
  -[HMDBTLEAdvertiser lock]
  -[HMDBTLEAdvertiser setCentralManager:]
  -[HMDBTLEAdvertiser accessory]
  -[HMDBTLEAdvertiser setAccessory:]
  -[HMDBTLEAdvertiser powerOnQueues]
  -[HMDBTLEAdvertiser _completePendingPowerOnRequest:]
  -[HMDBTLEAdvertiser _flushQueue:]
  -[HMDBTLEAdvertiser stopAdvertisement:]
  -[HMDBTLEAdvertiser _flushQueues]
  -[HMDBTLEAdvertiser leAdvertiser]
  -[HMDBTLEAdvertiser setLeAdvertiser:]
  -[HMDBTLEAdvertiser _clearAdvertiser]
  -[HMDBTLEAdvertiser _stopAdvertisement:]
  -[HMDBTLEAdvertiser advertisementTimer]
  -[HMDBTLEAdvertiser setAdvertisementTimer:]
  -[HMDBTLEAdvertiser _startAdvertising]
  -[HMDBTLEAdvertiser _cancelOn:]
  -[HMDBTLEAdvertiser _advertisementTimeout]
  -[HMDBTLEAdvertiser didUpdateBTLEState:]
  -[HMDBTLEAdvertiser cancelOn:]
  -[HMDBTLEAdvertiser isAdvertisingForAccessory:]
  -[HMDBTLEAdvertiser setPowerOnQueues:]


HMDTargetButtonConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned char identifier
 @property  long long type
 @property  NSString *name

  // instance methods
  -[HMDTargetButtonConfiguration init]
  -[HMDTargetButtonConfiguration setType:]
  -[HMDTargetButtonConfiguration .cxx_destruct]
  -[HMDTargetButtonConfiguration name]
  -[HMDTargetButtonConfiguration initWithType:identifier:name:]
  -[HMDTargetButtonConfiguration identifier]
  -[HMDTargetButtonConfiguration type]
  -[HMDTargetButtonConfiguration shortDescription]
  -[HMDTargetButtonConfiguration isEqual:]
  -[HMDTargetButtonConfiguration setName:]
  -[HMDTargetButtonConfiguration buttonName]


HMDResidentReachabilityContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSNumber *mostRecentReachability

  // class methods
  +[HMDResidentReachabilityContext supportsSecureCoding]

  // instance methods
  -[HMDResidentReachabilityContext init]
  -[HMDResidentReachabilityContext .cxx_destruct]
  -[HMDResidentReachabilityContext encodeWithCoder:]
  -[HMDResidentReachabilityContext isEqual:]
  -[HMDResidentReachabilityContext initWithCoder:]
  -[HMDResidentReachabilityContext initWithMostRecentReachability:]
  -[HMDResidentReachabilityContext mostRecentReachability]


HMDAccessorySettingConstraintModel : HMDBackingStoreModelObject
 @property  NSNumber *type
 @property  NSData *value

  // class methods
  +[HMDAccessorySettingConstraintModel properties]
  +[HMDAccessorySettingConstraintModel schemaHashRoot]


HMDRemoteLoginAuthenticationRequest : HMRemoteLoginMessage
 @property  unsigned long targetedAccountType

  // class methods
  +[HMDRemoteLoginAuthenticationRequest supportsSecureCoding]
  +[HMDRemoteLoginAuthenticationRequest messageName]
  +[HMDRemoteLoginAuthenticationRequest objWithDict:]
  +[HMDRemoteLoginAuthenticationRequest objWithMessage:]
  +[HMDRemoteLoginAuthenticationRequest xpcMessageName]

  // instance methods
  -[HMDRemoteLoginAuthenticationRequest messageName]
  -[HMDRemoteLoginAuthenticationRequest encodeWithCoder:]
  -[HMDRemoteLoginAuthenticationRequest messagePayload]
  -[HMDRemoteLoginAuthenticationRequest initWithCoder:]
  -[HMDRemoteLoginAuthenticationRequest xpcMessageName]
  -[HMDRemoteLoginAuthenticationRequest setTargetedAccountType:]
  -[HMDRemoteLoginAuthenticationRequest targetedAccountType]


HMDRemoteLoginCompanionAuthenticationRequest : HMDRemoteLoginAuthenticationRequest <HMRemoteLoginMessageProtocol>
 @property  ACAccount *account
 @property  AKDevice *companionDevice
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginCompanionAuthenticationRequest supportsSecureCoding]
  +[HMDRemoteLoginCompanionAuthenticationRequest messageName]
  +[HMDRemoteLoginCompanionAuthenticationRequest objWithDict:]
  +[HMDRemoteLoginCompanionAuthenticationRequest objWithMessage:]
  +[HMDRemoteLoginCompanionAuthenticationRequest xpcMessageName]

  // instance methods
  -[HMDRemoteLoginCompanionAuthenticationRequest setCompanionDevice:]
  -[HMDRemoteLoginCompanionAuthenticationRequest companionDevice]
  -[HMDRemoteLoginCompanionAuthenticationRequest setAccount:]
  -[HMDRemoteLoginCompanionAuthenticationRequest account]
  -[HMDRemoteLoginCompanionAuthenticationRequest .cxx_destruct]
  -[HMDRemoteLoginCompanionAuthenticationRequest messageName]
  -[HMDRemoteLoginCompanionAuthenticationRequest encodeWithCoder:]
  -[HMDRemoteLoginCompanionAuthenticationRequest messagePayload]
  -[HMDRemoteLoginCompanionAuthenticationRequest initWithCoder:]
  -[HMDRemoteLoginCompanionAuthenticationRequest xpcMessageName]


HMDRemoteLoginProxyAuthenticationRequest : HMDRemoteLoginAuthenticationRequest <HMRemoteLoginMessageProtocol>
 @property  NSString *username
 @property  NSString *rawPassword
 @property  NSString *passwordToken
 @property  NSString *altDSID
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginProxyAuthenticationRequest supportsSecureCoding]
  +[HMDRemoteLoginProxyAuthenticationRequest messageName]
  +[HMDRemoteLoginProxyAuthenticationRequest objWithDict:]
  +[HMDRemoteLoginProxyAuthenticationRequest objWithMessage:]
  +[HMDRemoteLoginProxyAuthenticationRequest xpcMessageName]

  // instance methods
  -[HMDRemoteLoginProxyAuthenticationRequest setUsername:]
  -[HMDRemoteLoginProxyAuthenticationRequest altDSID]
  -[HMDRemoteLoginProxyAuthenticationRequest setAltDSID:]
  -[HMDRemoteLoginProxyAuthenticationRequest username]
  -[HMDRemoteLoginProxyAuthenticationRequest .cxx_destruct]
  -[HMDRemoteLoginProxyAuthenticationRequest messageName]
  -[HMDRemoteLoginProxyAuthenticationRequest encodeWithCoder:]
  -[HMDRemoteLoginProxyAuthenticationRequest rawPassword]
  -[HMDRemoteLoginProxyAuthenticationRequest messagePayload]
  -[HMDRemoteLoginProxyAuthenticationRequest setRawPassword:]
  -[HMDRemoteLoginProxyAuthenticationRequest initWithCoder:]
  -[HMDRemoteLoginProxyAuthenticationRequest xpcMessageName]
  -[HMDRemoteLoginProxyAuthenticationRequest setPasswordToken:]
  -[HMDRemoteLoginProxyAuthenticationRequest passwordToken]


HMDRemoteLoginAuthenticationResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  ACAccount *loggedInAccount
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginAuthenticationResponse supportsSecureCoding]
  +[HMDRemoteLoginAuthenticationResponse messageName]
  +[HMDRemoteLoginAuthenticationResponse objWithDict:]
  +[HMDRemoteLoginAuthenticationResponse objWithMessage:]
  +[HMDRemoteLoginAuthenticationResponse xpcMessageName]

  // instance methods
  -[HMDRemoteLoginAuthenticationResponse .cxx_destruct]
  -[HMDRemoteLoginAuthenticationResponse messageName]
  -[HMDRemoteLoginAuthenticationResponse encodeWithCoder:]
  -[HMDRemoteLoginAuthenticationResponse messagePayload]
  -[HMDRemoteLoginAuthenticationResponse setLoggedInAccount:]
  -[HMDRemoteLoginAuthenticationResponse loggedInAccount]
  -[HMDRemoteLoginAuthenticationResponse initWithCoder:]
  -[HMDRemoteLoginAuthenticationResponse xpcMessageName]


HMDRemoteLoginProxyDeviceRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginProxyDeviceRequest supportsSecureCoding]
  +[HMDRemoteLoginProxyDeviceRequest messageName]
  +[HMDRemoteLoginProxyDeviceRequest objWithDict:]
  +[HMDRemoteLoginProxyDeviceRequest objWithMessage:]
  +[HMDRemoteLoginProxyDeviceRequest xpcMessageName]

  // instance methods
  -[HMDRemoteLoginProxyDeviceRequest messageName]
  -[HMDRemoteLoginProxyDeviceRequest messagePayload]
  -[HMDRemoteLoginProxyDeviceRequest xpcMessageName]


HMDRemoteLoginProxyDeviceResponse : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  AKDevice *proxyDevice
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginProxyDeviceResponse supportsSecureCoding]
  +[HMDRemoteLoginProxyDeviceResponse messageName]
  +[HMDRemoteLoginProxyDeviceResponse objWithDict:]
  +[HMDRemoteLoginProxyDeviceResponse objWithMessage:]
  +[HMDRemoteLoginProxyDeviceResponse xpcMessageName]

  // instance methods
  -[HMDRemoteLoginProxyDeviceResponse .cxx_destruct]
  -[HMDRemoteLoginProxyDeviceResponse messageName]
  -[HMDRemoteLoginProxyDeviceResponse setProxyDevice:]
  -[HMDRemoteLoginProxyDeviceResponse encodeWithCoder:]
  -[HMDRemoteLoginProxyDeviceResponse messagePayload]
  -[HMDRemoteLoginProxyDeviceResponse initWithCoder:]
  -[HMDRemoteLoginProxyDeviceResponse xpcMessageName]
  -[HMDRemoteLoginProxyDeviceResponse proxyDevice]


HMDRemoteLoginSignoutRequest : HMRemoteLoginMessage <HMRemoteLoginMessageProtocol>
 @property  ACAccount *account
 @property  NSString *messageName
 @property  NSString *xpcMessageName
 @property  NSDictionary *messagePayload
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginSignoutRequest supportsSecureCoding]
  +[HMDRemoteLoginSignoutRequest messageName]
  +[HMDRemoteLoginSignoutRequest objWithDict:]
  +[HMDRemoteLoginSignoutRequest objWithMessage:]
  +[HMDRemoteLoginSignoutRequest xpcMessageName]

  // instance methods
  -[HMDRemoteLoginSignoutRequest setAccount:]
  -[HMDRemoteLoginSignoutRequest account]
  -[HMDRemoteLoginSignoutRequest .cxx_destruct]
  -[HMDRemoteLoginSignoutRequest messageName]
  -[HMDRemoteLoginSignoutRequest encodeWithCoder:]
  -[HMDRemoteLoginSignoutRequest messagePayload]
  -[HMDRemoteLoginSignoutRequest initWithCoder:]
  -[HMDRemoteLoginSignoutRequest xpcMessageName]


HMDHTTPDevice : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSUUID *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHTTPDevice logCategory]
  +[HMDHTTPDevice shortDescription]

  // instance methods
  -[HMDHTTPDevice logIdentifier]
  -[HMDHTTPDevice init]
  -[HMDHTTPDevice .cxx_destruct]
  -[HMDHTTPDevice initWithIdentifier:]
  -[HMDHTTPDevice identifier]
  -[HMDHTTPDevice descriptionWithPointer:]
  -[HMDHTTPDevice shortDescription]
  -[HMDHTTPDevice isEqual:]


HMDSnapshotCATransactionHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  CAContext *snapshotContext
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  BSPortDeathWatcher *backboardServicesWatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSnapshotCATransactionHandler logCategory]
  +[HMDSnapshotCATransactionHandler sharedHandler]

  // instance methods
  -[HMDSnapshotCATransactionHandler init]
  -[HMDSnapshotCATransactionHandler .cxx_destruct]
  -[HMDSnapshotCATransactionHandler clientQueue]
  -[HMDSnapshotCATransactionHandler snapshotContext]
  -[HMDSnapshotCATransactionHandler _createSnapshotContext]
  -[HMDSnapshotCATransactionHandler setSnapshotContext:]
  -[HMDSnapshotCATransactionHandler _createSlot:snapshotCATransaction:]
  -[HMDSnapshotCATransactionHandler createSnapshotCGImageRef:]
  -[HMDSnapshotCATransactionHandler _deleteSlot:filePath:snapshotCATransaction:]
  -[HMDSnapshotCATransactionHandler _backboardServicesRelaunched]
  -[HMDSnapshotCATransactionHandler createSlot:]
  -[HMDSnapshotCATransactionHandler deleteSlot:filePath:]
  -[HMDSnapshotCATransactionHandler backboardServicesWatcher]
  -[HMDSnapshotCATransactionHandler setBackboardServicesWatcher:]


HMDIDSSendMessageOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFObject, IDSServiceDelegate>
 @property  IDSService *service
 @property  HMFMessage *message
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMDIDSSendMessageOperation timeout]
  +[HMDIDSSendMessageOperation logCategory]
  +[HMDIDSSendMessageOperation shortDescription]

  // instance methods
  -[HMDIDSSendMessageOperation initWithMessage:]
  -[HMDIDSSendMessageOperation message]
  -[HMDIDSSendMessageOperation logIdentifier]
  -[HMDIDSSendMessageOperation main]
  -[HMDIDSSendMessageOperation attributeDescriptions]
  -[HMDIDSSendMessageOperation privateDescription]
  -[HMDIDSSendMessageOperation .cxx_destruct]
  -[HMDIDSSendMessageOperation service:account:identifier:didSendWithSuccess:error:context:]
  -[HMDIDSSendMessageOperation service]
  -[HMDIDSSendMessageOperation shortDescription]
  -[HMDIDSSendMessageOperation initWithMessage:service:]


HMDCameraIDSDeviceConnection : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <IDSServiceDelegate, HMDCameraRemoteStreamProtocol, HMFTimerDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *highPriorityQueue
 @property  HMDCameraStreamSessionID *sessionID
 @property  IDSService *idsProxyStreamService
 @property  IDSDevice *device
 @property  IDSDeviceConnection *watchVideoConnection
 @property  IDSDeviceConnection *watchAudioConnection
 @property  IDSDeviceConnection *keepAliveConnection
 @property  HMFTimer *keepAliveByteSendTimer
 @property  HMFTimer *keepAliveByteReceiveTimeoutTimer
 @property  NSObject<OS_dispatch_source> *socketReceiveSource
 @property  unsigned char keepAliveCounter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraIDSDeviceConnection logCategory]

  // instance methods
  -[HMDCameraIDSDeviceConnection timerDidFire:]
  -[HMDCameraIDSDeviceConnection sessionID]
  -[HMDCameraIDSDeviceConnection device]
  -[HMDCameraIDSDeviceConnection logIdentifier]
  -[HMDCameraIDSDeviceConnection dealloc]
  -[HMDCameraIDSDeviceConnection .cxx_destruct]
  -[HMDCameraIDSDeviceConnection workQueue]
  -[HMDCameraIDSDeviceConnection setDevice:]
  -[HMDCameraIDSDeviceConnection startKeepAlive]
  -[HMDCameraIDSDeviceConnection initWithSessionID:workQueue:]
  -[HMDCameraIDSDeviceConnection _callSessionEnded:]
  -[HMDCameraIDSDeviceConnection _createStreamSocket:]
  -[HMDCameraIDSDeviceConnection watchVideoConnection]
  -[HMDCameraIDSDeviceConnection watchAudioConnection]
  -[HMDCameraIDSDeviceConnection _socketOpened:]
  -[HMDCameraIDSDeviceConnection idsProxyStreamService]
  -[HMDCameraIDSDeviceConnection setWatchAudioConnection:]
  -[HMDCameraIDSDeviceConnection setWatchVideoConnection:]
  -[HMDCameraIDSDeviceConnection keepAliveConnection]
  -[HMDCameraIDSDeviceConnection setKeepAliveConnection:]
  -[HMDCameraIDSDeviceConnection socketReceiveSource]
  -[HMDCameraIDSDeviceConnection setSocketReceiveSource:]
  -[HMDCameraIDSDeviceConnection highPriorityQueue]
  -[HMDCameraIDSDeviceConnection _startKeepAliveByteSendTimer]
  -[HMDCameraIDSDeviceConnection _startKeepAliveTimeoutTimer]
  -[HMDCameraIDSDeviceConnection _setReceiveByteHandler]
  -[HMDCameraIDSDeviceConnection setKeepAliveByteSendTimer:]
  -[HMDCameraIDSDeviceConnection keepAliveByteSendTimer]
  -[HMDCameraIDSDeviceConnection setKeepAliveByteReceiveTimeoutTimer:]
  -[HMDCameraIDSDeviceConnection keepAliveByteReceiveTimeoutTimer]
  -[HMDCameraIDSDeviceConnection _sendTimerFired]
  -[HMDCameraIDSDeviceConnection _receiveByteCheckTimerFired]
  -[HMDCameraIDSDeviceConnection keepAliveCounter]
  -[HMDCameraIDSDeviceConnection setKeepAliveCounter:]
  -[HMDCameraIDSDeviceConnection callSessionEnded:]


HMDHomeMediaSystemHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDDevicePreferenceDataSource, HMDHomeMediaSystemMessageHandlerDelegate, NSSecureCoding, HMFLogging>
 @property  <HMDHomeMediaSystemHandlerDelegate> *delegate
 @property  NSUUID *parentUUID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *messsageDispatcher
 @property  NSNotificationCenter *notificationCenter
 @property  HMDHome *home
 @property  HMDHomeMediaSystemControllerMessageHandler *messageHandler
 @property  NSArray *mediaSystems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeMediaSystemHandler supportsSecureCoding]
  +[HMDHomeMediaSystemHandler logCategory]

  // instance methods
  -[HMDHomeMediaSystemHandler notificationCenter]
  -[HMDHomeMediaSystemHandler setMessageHandler:]
  -[HMDHomeMediaSystemHandler messageHandler]
  -[HMDHomeMediaSystemHandler setWorkQueue:]
  -[HMDHomeMediaSystemHandler logIdentifier]
  -[HMDHomeMediaSystemHandler attributeDescriptions]
  -[HMDHomeMediaSystemHandler privateDescription]
  -[HMDHomeMediaSystemHandler .cxx_destruct]
  -[HMDHomeMediaSystemHandler workQueue]
  -[HMDHomeMediaSystemHandler setHome:]
  -[HMDHomeMediaSystemHandler setNotificationCenter:]
  -[HMDHomeMediaSystemHandler encodeWithCoder:]
  -[HMDHomeMediaSystemHandler mediaSystems]
  -[HMDHomeMediaSystemHandler home]
  -[HMDHomeMediaSystemHandler setDelegate:]
  -[HMDHomeMediaSystemHandler delegate]
  -[HMDHomeMediaSystemHandler initWithCoder:]
  -[HMDHomeMediaSystemHandler parentUUID]
  -[HMDHomeMediaSystemHandler setParentUUID:]
  -[HMDHomeMediaSystemHandler supportsDeviceWithCapabilities:]
  -[HMDHomeMediaSystemHandler _handleAddMediaSystemModel:message:]
  -[HMDHomeMediaSystemHandler _handleRemoveMediaSystemModel:message:]
  -[HMDHomeMediaSystemHandler mediaSystemWithUUID:]
  -[HMDHomeMediaSystemHandler initWithMediaSystems:]
  -[HMDHomeMediaSystemHandler configure:delegate:queue:messageDispatcher:notificationCenter:]
  -[HMDHomeMediaSystemHandler backingStoreObjectsForVersion:]
  -[HMDHomeMediaSystemHandler _userAssistantAccessControlDidUpdate:accessories:]
  -[HMDHomeMediaSystemHandler messageHandlerAddMediaSystem:configuredName:leftUUID:leftAccessoryUUID:rightUUID:rightAccessoryUUID:builderSession:completion:]
  -[HMDHomeMediaSystemHandler messageHandlerRemoveMediaSystem:builderSession:completion:]
  -[HMDHomeMediaSystemHandler messageHandlerUpdateMediaSystem:configuredName:leftUUID:leftAccessoryUUID:rightUUID:rightAccessoryUUID:builderSession:completion:]
  -[HMDHomeMediaSystemHandler setMesssageDispatcher:]
  -[HMDHomeMediaSystemHandler messsageDispatcher]
  -[HMDHomeMediaSystemHandler updateMediaSystem:]
  -[HMDHomeMediaSystemHandler removeMediaSystem:]
  -[HMDHomeMediaSystemHandler _currentMediaSystemIfPrimary]
  -[HMDHomeMediaSystemHandler mediaSystemForAccessory:]
  -[HMDHomeMediaSystemHandler processedMediaSystemBuilderMessageFor:]
  -[HMDHomeMediaSystemHandler updateMediaSystemWithMessage:]
  -[HMDHomeMediaSystemHandler _handleUpdateMediaSystemModel:message:]


HMDAccessorySettingTransform : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMDAccessorySettingTransform modelForGroup:]
  +[HMDAccessorySettingTransform modelsForSetting:]
  +[HMDAccessorySettingTransform modelsForGroup:]
  +[HMDAccessorySettingTransform modelsForGroupDiff:fromGroup:]
  +[HMDAccessorySettingTransform modelsForSettingDiff:fromGroup:]
  +[HMDAccessorySettingTransform modelForSetting:identifier:parentIdentifier:]
  +[HMDAccessorySettingTransform modelForSetting:]
  +[HMDAccessorySettingTransform mergeWithGroupMetadata:group:]
  +[HMDAccessorySettingTransform modelsForChangedConstraints:fromSetting:]
  +[HMDAccessorySettingTransform changeAccessorySettingType:home:]


HMDUserCloudShareRequest : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *identifier
 @property  NSDate *startDate
 @property  NSString *containerID
 @property  HMDHome *home

  // instance methods
  -[HMDUserCloudShareRequest containerID]
  -[HMDUserCloudShareRequest startDate]
  -[HMDUserCloudShareRequest .cxx_destruct]
  -[HMDUserCloudShareRequest identifier]
  -[HMDUserCloudShareRequest home]
  -[HMDUserCloudShareRequest initWithStartDate:containerID:home:]


HMDUserCloudShareRepairRequest : HMDUserCloudShareRequest
 @property  HMUserCloudShareRepairInfo *repairInfo

  // instance methods
  -[HMDUserCloudShareRepairRequest .cxx_destruct]
  -[HMDUserCloudShareRepairRequest initWithStartDate:containerID:home:repairInfo:]
  -[HMDUserCloudShareRepairRequest repairInfo]


HMDUserCloudShareEstablishShareRequest : HMDUserCloudShareRequest
 @property  HMDUser *fromUser
 @property  HMDUser *toUser
 @property  NSData *encodedShareURL
 @property  NSData *shareToken
 @property  @? completion

  // instance methods
  -[HMDUserCloudShareEstablishShareRequest completion]
  -[HMDUserCloudShareEstablishShareRequest fromUser]
  -[HMDUserCloudShareEstablishShareRequest shareToken]
  -[HMDUserCloudShareEstablishShareRequest .cxx_destruct]
  -[HMDUserCloudShareEstablishShareRequest toUser]
  -[HMDUserCloudShareEstablishShareRequest initWithHome:fromUser:toUser:encodedShareURL:shareToken:containerID:currentDate:completion:]
  -[HMDUserCloudShareEstablishShareRequest encodedShareURL]


HMDUserCloudShareController : NSObject /usr/lib/libc++.1.dylib <HMFTimerDelegate, HMFLogging>
 @property  <HMDUserCloudShareControllerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSHashTable *connectedClients
 @property  NSMutableDictionary *containerIdToConnectionIdentifierMap
 @property  NSMutableArray *pendingRequests
 @property  double pendingRequestTimeoutInterval
 @property  HMFTimer *pendingRequestTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserCloudShareController logCategory]
  +[HMDUserCloudShareController identifierForConnection:]

  // instance methods
  -[HMDUserCloudShareController timerDidFire:]
  -[HMDUserCloudShareController configure]
  -[HMDUserCloudShareController connectedClients]
  -[HMDUserCloudShareController pendingRequests]
  -[HMDUserCloudShareController .cxx_destruct]
  -[HMDUserCloudShareController clientQueue]
  -[HMDUserCloudShareController setDelegate:]
  -[HMDUserCloudShareController delegate]
  -[HMDUserCloudShareController initWithDelegate:queue:pendingRequestTimeoutInterval:]
  -[HMDUserCloudShareController registerWithXpcClient:containerIDs:]
  -[HMDUserCloudShareController handleShareForRemoteClientRequest:home:completionHandler:]
  -[HMDUserCloudShareController handleShareRepairForRemoteClientRequest:home:completion:]
  -[HMDUserCloudShareController deregisterXpcClient:]
  -[HMDUserCloudShareController invalidateXpcClient:]
  -[HMDUserCloudShareController containerIdToConnectionIdentifierMap]
  -[HMDUserCloudShareController pendingRequestTimer]
  -[HMDUserCloudShareController pendingRequestTimeoutInterval]
  -[HMDUserCloudShareController setPendingRequestTimer:]
  -[HMDUserCloudShareController _startTimerIfNeeded]
  -[HMDUserCloudShareController _sendShareRequest:toConnection:]
  -[HMDUserCloudShareController _sendRepairRequest:toConnection:]
  -[HMDUserCloudShareController _removeTimerIfNotNeeded]
  -[HMDUserCloudShareController _connectionForContainerID:]
  -[HMDUserCloudShareController _addRequestToPending:]
  -[HMDUserCloudShareController _handleShareForRemoteClientRequest:]
  -[HMDUserCloudShareController _handlePendingRequestTimeouts]
  -[HMDUserCloudShareController _resumeRequestsForContainerID:connection:]
  -[HMDUserCloudShareController _registerWithXpcClient:containerIDs:]
  -[HMDUserCloudShareController _deregisterXpcClient:]
  -[HMDUserCloudShareController _invalidateXpcClient:]
  -[HMDUserCloudShareController setContainerIdToConnectionIdentifierMap:]


HMDLogEventContextProvider : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDLogEventObserver>
 @property  BOOL active
 @property  unsigned long activeXPCConnections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDLogEventContextProvider supportedEventTypes]
  +[HMDLogEventContextProvider isSupportedEvent:]

  // instance methods
  -[HMDLogEventContextProvider init]
  -[HMDLogEventContextProvider isActive]
  -[HMDLogEventContextProvider _processLogEvent:]
  -[HMDLogEventContextProvider activeXPCConnections]
  -[HMDLogEventContextProvider _processActiveXPCConnectionLogEvent:]
  -[HMDLogEventContextProvider didReceiveEventFromDispatcher:withLogContext:]


HMDMediaAccessoryBrowseOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSString *accessoryIdentifier
 @property  unsigned int endpointFeatures
 @property  HMDMediaEndpoint *endpoint
 @property  NSArray *outputDevices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMediaAccessoryBrowseOperation logCategory]
  +[HMDMediaAccessoryBrowseOperation defaultTimeout]

  // instance methods
  -[HMDMediaAccessoryBrowseOperation main]
  -[HMDMediaAccessoryBrowseOperation endpoint]
  -[HMDMediaAccessoryBrowseOperation dealloc]
  -[HMDMediaAccessoryBrowseOperation accessoryIdentifier]
  -[HMDMediaAccessoryBrowseOperation .cxx_destruct]
  -[HMDMediaAccessoryBrowseOperation setEndpointFeatures:]
  -[HMDMediaAccessoryBrowseOperation endpointFeatures]
  -[HMDMediaAccessoryBrowseOperation outputDevices]
  -[HMDMediaAccessoryBrowseOperation cancel]
  -[HMDMediaAccessoryBrowseOperation initWithAccessoryIdentifier:]
  -[HMDMediaAccessoryBrowseOperation initWithAccessoryIdentifier:timeout:]


HMDCameraSignificantEventFaceClassification : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSMutableCopying>
 @property  NSUUID *personUUID
 @property  NSString *personName
 @property  NSUUID *unassociatedFaceCropUUID
 @property  NSUUID *UUID
 @property  NSUUID *personManagerUUID

  // class methods
  +[HMDCameraSignificantEventFaceClassification faceClassificationWithHMIFaceClassification:person:]

  // instance methods
  -[HMDCameraSignificantEventFaceClassification copyWithZone:]
  -[HMDCameraSignificantEventFaceClassification attributeDescriptions]
  -[HMDCameraSignificantEventFaceClassification setPersonName:]
  -[HMDCameraSignificantEventFaceClassification .cxx_destruct]
  -[HMDCameraSignificantEventFaceClassification UUID]
  -[HMDCameraSignificantEventFaceClassification isEqual:]
  -[HMDCameraSignificantEventFaceClassification personName]
  -[HMDCameraSignificantEventFaceClassification mutableCopyWithZone:]
  -[HMDCameraSignificantEventFaceClassification personUUID]
  -[HMDCameraSignificantEventFaceClassification setPersonUUID:]
  -[HMDCameraSignificantEventFaceClassification personManagerUUID]
  -[HMDCameraSignificantEventFaceClassification initWithUUID:personManagerUUID:]
  -[HMDCameraSignificantEventFaceClassification setUnassociatedFaceCropUUID:]
  -[HMDCameraSignificantEventFaceClassification unassociatedFaceCropUUID]


HMDMutableCameraSignificantEventFaceClassification : HMDCameraSignificantEventFaceClassification
 @property  NSUUID *personUUID
 @property  NSString *personName
 @property  NSUUID *unassociatedFaceCropUUID

  // instance methods
  -[HMDMutableCameraSignificantEventFaceClassification copyWithZone:]


HMDAccessory : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBulletinIdentifiers, NSSecureCoding, HMDHomeMessageReceiver, HMDBackingStoreObjectProtocol, HMFDumpState, HMFLogging>
 @property  NSString *contextID
 @property  NSUUID *contextSPIUniqueIdentifier
 @property  HMDNetworkRouterFirewallRuleAccessoryIdentifier *metadataIdentifier
 @property  BOOL primary
 @property  BOOL suspendCapable
 @property  NSNumber *networkClientIdentifier
 @property  NSUUID *networkRouterUUID
 @property  long long currentNetworkProtectionMode
 @property  long long networkClientLAN
 @property  NSUUID *networkClientProfileFingerprint
 @property  long long wiFiCredentialType
 @property  NSArray *allowedHosts
 @property  NSData *wiFiUniquePreSharedKey
 @property  HMDAccessoryNetworkAccessViolation *networkAccessViolation
 @property  NSUUID *configuredNetworkProtectionGroupUUID
 @property  NSUUID *defaultNetworkProtectionGroupUUID
 @property  NSUUID *uuid
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  long long reachableTransports
 @property  BOOL remoteAccessEnabled
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMAccessoryCategory *category
 @property  NSNumber *categoryIdentifier
 @property  HMDRoom *room
 @property  NSString *configuredName
 @property  unsigned long configNumber
 @property  BOOL reachable
 @property  unsigned long accessoryReprovisionState
 @property  HMDHome *home
 @property  BOOL custom1WoBLE
 @property  BOOL custom1WoWLAN
 @property  double lastPairingFailureTime
 @property  HMDSoftwareUpdate *softwareUpdate
 @property  HMDUserManagementOperationTimestamp *sharedAdminAddedTimestamp
 @property  HMDUserManagementOperationTimestamp *pairingsAuditedTimestamp
 @property  BOOL currentAccessory
 @property  NSString *identifier
 @property  NSNumber *initialCategoryIdentifier
 @property  NSString *name
 @property  NSString *providedName
 @property  NSString *model
 @property  NSString *initialModel
 @property  NSString *manufacturer
 @property  NSString *initialManufacturer
 @property  HMDAccessoryVersion *firmwareVersion
 @property  NSString *serialNumber
 @property  HMDVendorModelEntry *vendorInfo
 @property  NSString *productData
 @property  NSString *productGroup
 @property  BOOL suspended
 @property  BOOL remotelyReachable
 @property  BOOL supportsUserManagement
 @property  BOOL requiresHomeAppForManagement
 @property  BOOL supportsMediaContentProfile
 @property  BOOL supportsPersonalRequests
 @property  NSString *configurationAppIdentifier
 @property  BOOL supportsTargetControl
 @property  BOOL supportsTargetController
 @property  BOOL supportsMultiUser
 @property  BOOL supportsCompanionInitiatedRestart
 @property  BOOL supportsThirdPartyMusic
 @property  HMFVersion *primaryProfileVersion
 @property  NSArray *accessoryProfiles
 @property  HMDApplicationData *appData
 @property  BOOL reachabilityPingEnabled
 @property  BOOL reachablilityPingNotificationEnabled
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessory supportsSecureCoding]
  +[HMDAccessory logCategory]
  +[HMDAccessory hasMessageReceiverChildren]
  +[HMDAccessory validateProductData:]
  +[HMDAccessory splitProductDataIntoProductGroupAndProductNumber:productGroup:productNumber:]

  // instance methods
  -[HMDAccessory setCategoryIdentifier:]
  -[HMDAccessory messageTargetUUID]
  -[HMDAccessory messageDestination]
  -[HMDAccessory messageReceiveQueue]
  -[HMDAccessory room]
  -[HMDAccessory firmwareVersion]
  -[HMDAccessory category]
  -[HMDAccessory setSuspended:]
  -[HMDAccessory categoryIdentifier]
  -[HMDAccessory serialNumber]
  -[HMDAccessory setFirmwareVersion:]
  -[HMDAccessory logIdentifier]
  -[HMDAccessory init]
  -[HMDAccessory manufacturer]
  -[HMDAccessory attributeDescriptions]
  -[HMDAccessory isSuspended]
  -[HMDAccessory setProductData:]
  -[HMDAccessory productData]
  -[HMDAccessory uuid]
  -[HMDAccessory dealloc]
  -[HMDAccessory privateDescription]
  -[HMDAccessory .cxx_destruct]
  -[HMDAccessory name]
  -[HMDAccessory setModel:]
  -[HMDAccessory workQueue]
  -[HMDAccessory accessoryProfiles]
  -[HMDAccessory setManufacturer:]
  -[HMDAccessory supportsMultiUser]
  -[HMDAccessory isPrimary]
  -[HMDAccessory setUuid:]
  -[HMDAccessory setReachable:]
  -[HMDAccessory setConfiguredName:]
  -[HMDAccessory setHome:]
  -[HMDAccessory setIdentifier:]
  -[HMDAccessory encodeWithCoder:]
  -[HMDAccessory setRoom:]
  -[HMDAccessory urlString]
  -[HMDAccessory identifier]
  -[HMDAccessory setMsgDispatcher:]
  -[HMDAccessory msgDispatcher]
  -[HMDAccessory _registerForMessages]
  -[HMDAccessory allowedHosts]
  -[HMDAccessory setAllowedHosts:]
  -[HMDAccessory supportsWiFiReconfiguration]
  -[HMDAccessory isReachable]
  -[HMDAccessory didEncounterError:]
  -[HMDAccessory supportsTargetControl]
  -[HMDAccessory supportsTargetController]
  -[HMDAccessory setAccessoryReprovisionState:]
  -[HMDAccessory unconfigure]
  -[HMDAccessory home]
  -[HMDAccessory appData]
  -[HMDAccessory isCurrentAccessory]
  -[HMDAccessory setSuspendCapable:]
  -[HMDAccessory reachableTransports]
  -[HMDAccessory setAccessoryProfiles:]
  -[HMDAccessory supportsCompanionInitiatedRestart]
  -[HMDAccessory supportsDiagnosticsTransfer]
  -[HMDAccessory supportsThirdPartyMusic]
  -[HMDAccessory accessoryReprovisionState]
  -[HMDAccessory networkProtectionGroupUUID]
  -[HMDAccessory isSuspendCapable]
  -[HMDAccessory vendorInfo]
  -[HMDAccessory contextID]
  -[HMDAccessory model]
  -[HMDAccessory setCategory:]
  -[HMDAccessory configuredName]
  -[HMDAccessory setSerialNumber:]
  -[HMDAccessory dumpState]
  -[HMDAccessory setPrimary:]
  -[HMDAccessory initWithCoder:]
  -[HMDAccessory softwareUpdate]
  -[HMDAccessory messageReceiverChildren]
  -[HMDAccessory transactionObjectUpdated:newValues:message:]
  -[HMDAccessory transactionObjectRemoved:message:]
  -[HMDAccessory backingStoreObjects:]
  -[HMDAccessory contextSPIUniqueIdentifier]
  -[HMDAccessory accessoryBulletinContext]
  -[HMDAccessory setAppData:]
  -[HMDAccessory updateMediaSession:]
  -[HMDAccessory configureWithHome:msgDispatcher:configurationTracker:initialConfiguration:]
  -[HMDAccessory supportedTransports]
  -[HMDAccessory runtimeState]
  -[HMDAccessory setRemotelyReachable:]
  -[HMDAccessory transactionWithObjectChangeType:]
  -[HMDAccessory setProvidedName:]
  -[HMDAccessory providedName]
  -[HMDAccessory setConfigurationAppIdentifier:]
  -[HMDAccessory shouldEnableDaemonRelaunch]
  -[HMDAccessory modelWithUpdatedRoom:]
  -[HMDAccessory updateRoom:]
  -[HMDAccessory vendorDetailsForAWD]
  -[HMDAccessory setSharedAdminAddedTimestamp:]
  -[HMDAccessory sharedAdminAddedTimestamp]
  -[HMDAccessory initWithTransaction:home:]
  -[HMDAccessory remoteAccessEnabled:]
  -[HMDAccessory addAdvertisement:]
  -[HMDAccessory autoConfigureTargetControllers]
  -[HMDAccessory networkClientIdentifier]
  -[HMDAccessory getConfiguredName]
  -[HMDAccessory removeCloudData]
  -[HMDAccessory setNetworkClientIdentifier:]
  -[HMDAccessory setNetworkClientLAN:]
  -[HMDAccessory networkRouterUUID]
  -[HMDAccessory setNetworkRouterUUID:]
  -[HMDAccessory setWiFiUniquePreSharedKey:]
  -[HMDAccessory setWiFiCredentialType:]
  -[HMDAccessory supportsUserManagement]
  -[HMDAccessory logRoomEvent:]
  -[HMDAccessory custom1WoBLE]
  -[HMDAccessory _remoteAccessEnabled:]
  -[HMDAccessory supportsMinimumUserPrivilege]
  -[HMDAccessory removeAdvertisement:]
  -[HMDAccessory lastPairingFailureTime]
  -[HMDAccessory setLastPairingFailureTime:]
  -[HMDAccessory updateCategory:]
  -[HMDAccessory setPairingsAuditedTimestamp:]
  -[HMDAccessory pairingsAuditedTimestamp]
  -[HMDAccessory isReachableForXPCClients]
  -[HMDAccessory messageSendPolicy]
  -[HMDAccessory wiFiCredentialType]
  -[HMDAccessory networkProtectionStatusForAnalytics]
  -[HMDAccessory takeOwnershipOfAppData:]
  -[HMDAccessory assistantObject]
  -[HMDAccessory isRemotelyReachable]
  -[HMDAccessory _handlePreviewAllowedHosts:]
  -[HMDAccessory supportsNetworkProtection]
  -[HMDAccessory metadataIdentifier]
  -[HMDAccessory initialModel]
  -[HMDAccessory initialManufacturer]
  -[HMDAccessory initialCategoryIdentifier]
  -[HMDAccessory configurationAppIdentifier]
  -[HMDAccessory _updateCategory:notifyClients:]
  -[HMDAccessory currentNetworkProtectionMode]
  -[HMDAccessory wiFiUniquePreSharedKey]
  -[HMDAccessory primaryProfileVersion]
  -[HMDAccessory setCurrentNetworkProtectionMode:]
  -[HMDAccessory networkAccessViolation]
  -[HMDAccessory configuredNetworkProtectionGroupUUID]
  -[HMDAccessory networkClientLAN]
  -[HMDAccessory networkClientProfileFingerprint]
  -[HMDAccessory setNetworkClientProfileFingerprint:]
  -[HMDAccessory __handleUpdateRoom:]
  -[HMDAccessory __handleRename:]
  -[HMDAccessory __handleSetAppData:]
  -[HMDAccessory __handleGetAccessoryAdvertisingParams:]
  -[HMDAccessory __handleListPairings:]
  -[HMDAccessory __handleAuditPairings:]
  -[HMDAccessory __handlePairingIdentityRequest:]
  -[HMDAccessory __handleIdentify:]
  -[HMDAccessory _handleWiFiReconfiguration:]
  -[HMDAccessory isRemoteAccessEnabled]
  -[HMDAccessory _relayIdentifyAccessorytoResidentForMessage:]
  -[HMDAccessory _updateRoom:]
  -[HMDAccessory _renameAccessory:resetName:message:]
  -[HMDAccessory _handleUpdatedName:]
  -[HMDAccessory startReachabilityCheck]
  -[HMDAccessory stopReachabilityCheck]
  -[HMDAccessory _notifyConnectivityChangedWithReachabilityState:remoteAccessChanged:]
  -[HMDAccessory reachabilityPingEnabled]
  -[HMDAccessory updateReachabilityPingNotification]
  -[HMDAccessory setRemoteAccessEnabled:]
  -[HMDAccessory defaultNetworkProtectionGroupUUID]
  -[HMDAccessory appDataUpdated:message:]
  -[HMDAccessory handleUpdatedSoftwareUpdateModel:newValues:message:]
  -[HMDAccessory handleAddedSoftwareUpdateModel:message:]
  -[HMDAccessory handleRemovedSoftwareUpdateModel:message:]
  -[HMDAccessory appDataRemoved:message:]
  -[HMDAccessory targetNetworkProtectionMode]
  -[HMDAccessory supportsSoftwareUpdate]
  -[HMDAccessory _shouldFilterAccessoryProfile:]
  -[HMDAccessory providesHashRouteID]
  -[HMDAccessory _applySoftwareUpdateModel:completion:]
  -[HMDAccessory _allowSoftwareUpdateChangeFromSource:]
  -[HMDAccessory setSoftwareUpdate:]
  -[HMDAccessory populateModelObject:version:]
  -[HMDAccessory registerForMessagesWithNewUUID:]
  -[HMDAccessory setInitialCategoryIdentifier:]
  -[HMDAccessory setInitialModel:]
  -[HMDAccessory setInitialManufacturer:]
  -[HMDAccessory productGroup]
  -[HMDAccessory notifyAccessoryNameChanged:]
  -[HMDAccessory requiresHomeAppForManagement]
  -[HMDAccessory supportsMediaContentProfile]
  -[HMDAccessory supportsPersonalRequests]
  -[HMDAccessory setSuspendedCapable:]
  -[HMDAccessory setReachabilityPingEnabled:]
  -[HMDAccessory reachablilityPingNotificationEnabled]
  -[HMDAccessory setReachablilityPingNotificationEnabled:]
  -[HMDAccessory configNumber]
  -[HMDAccessory setConfigNumber:]
  -[HMDAccessory addAccessoryProfile:]
  -[HMDAccessory removeAccessoryProfile:]
  -[HMDAccessory setPrimaryProfileVersion:]
  -[HMDAccessory saveNetworkClientIdentifier:networkRouterUUID:clearProfileFingerprint:]
  -[HMDAccessory saveCurrentNetworkProtectionMode:assignedLAN:allowedWANHosts:profileFingerprint:]
  -[HMDAccessory setWifiCredentialType:]
  -[HMDAccessory saveWiFiUniquePreSharedKey:credentialType:]
  -[HMDAccessory saveNetworkAccessViolation:]
  -[HMDAccessory setConfiguredNetworkProtectionGroupUUID:]
  -[HMDAccessory didUpdateCurrentNetworkProtection]
  -[HMDAccessory dumpSimpleState]
  -[HMDAccessory hashRouteID]
  -[HMDAccessory updateSoftwareUpdate:completionHandler:]
  -[HMDAccessory setNetworkAccessViolation:]
  -[HMDAccessory setCustom1WoBLE:]
  -[HMDAccessory custom1WoWLAN]
  -[HMDAccessory setCustom1WoWLAN:]
  -[HMDAccessory populateVendorDetailsForCoreAnalytics:keyPrefix:]
  -[HMDAccessory assistantUniqueIdentifier]
  -[HMDAccessory networkProtectionReportForAWD]


HMDAccessoryTransaction : HMDBackingStoreModelObject
 @property  NSString *name
 @property  NSString *configuredName
 @property  NSString *providedName
 @property  NSNumber *accessoryCategory
 @property  NSString *identifier
 @property  NSString *roomUUID
 @property  NSString *model
 @property  NSString *manufacturer
 @property  NSString *firmwareVersion
 @property  NSString *serialNumber
 @property  NSString *configurationAppIdentifier
 @property  NSNumber *networkClientIdentifier
 @property  NSString *networkRouterUUID
 @property  NSNumber *currentNetworkProtectionMode
 @property  NSNumber *networkClientLAN
 @property  NSString *networkClientProfileFingerprint
 @property  NSData *wiFiUniquePreSharedKey
 @property  NSNumber *wiFiCredentialType
 @property  NSArray *appliedFirewallWANRules
 @property  NSNumber *lastNetworkAccessViolationOccurrenceSince1970
 @property  NSNumber *lastNetworkAccessViolationResetSince1970
 @property  NSString *configuredNetworkProtectionGroupUUIDString
 @property  NSObject<OS_dispatch_group> *configurationTracker
 @property  NSNumber *suspendCapable
 @property  NSString *primaryProfileVersion
 @property  NSString *productData
 @property  NSString *productDataV2
 @property  NSString *initialManufacturer
 @property  NSString *initialModel
 @property  NSNumber *initialCategoryIdentifier
 @property  HMDUserManagementOperationTimestamp *sharedAdminAddedTimestamp
 @property  HMDUserManagementOperationTimestamp *pairingsAuditedTimestamp

  // class methods
  +[HMDAccessoryTransaction properties]

  // instance methods
  -[HMDAccessoryTransaction .cxx_destruct]
  -[HMDAccessoryTransaction dependentUUIDs]
  -[HMDAccessoryTransaction setConfigurationTracker:]
  -[HMDAccessoryTransaction configurationTracker]
  -[HMDAccessoryTransaction setConfiguredNetworkProtectionGroupUUIDString:]
  -[HMDAccessoryTransaction configuredNetworkProtectionGroupUUIDString]


HMDRemoteMessageExceedBudgetLogEvent : HMDLogEvent <HMDDiagnosticReportLogging>
 @property  NSString *diagnosticReportEventType
 @property  NSString *diagnosticReportEventSubType
 @property  {_HMFRate=Qd} budgetRate

  // class methods
  +[HMDRemoteMessageExceedBudgetLogEvent identifier]
  +[HMDRemoteMessageExceedBudgetLogEvent eventWithBudgetRate:]

  // instance methods
  -[HMDRemoteMessageExceedBudgetLogEvent initWithBudgetRate:]
  -[HMDRemoteMessageExceedBudgetLogEvent budgetRate]
  -[HMDRemoteMessageExceedBudgetLogEvent updateDiagnosticReportSignature:]


HMDBackingStoreTransactionOptions : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, NSSecureCoding>
 @property  unsigned long destination
 @property  unsigned long source
 @property  NSDate *committed
 @property  NSString *label
 @property  BOOL mustReplay
 @property  BOOL mustPush
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBackingStoreTransactionOptions supportsSecureCoding]
  +[HMDBackingStoreTransactionOptions defaultIDSOptions]
  +[HMDBackingStoreTransactionOptions logCategory]
  +[HMDBackingStoreTransactionOptions defaultXPCOptions]
  +[HMDBackingStoreTransactionOptions defaultLocalOptions]
  +[HMDBackingStoreTransactionOptions defaultPreferencesOptions]
  +[HMDBackingStoreTransactionOptions defaultCloudOptions]
  +[HMDBackingStoreTransactionOptions optionsWithSource:destination:mustReplay:mustPush:]
  +[HMDBackingStoreTransactionOptions defaultResidenceOptions]
  +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreTransactionSource:]
  +[HMDBackingStoreTransactionOptions stringForHMDBackingStoreDestination:]
  +[HMDBackingStoreTransactionOptions cloudRequiresPushOptions]
  +[HMDBackingStoreTransactionOptions localPushBackOptions]
  +[HMDBackingStoreTransactionOptions defaultLegacyCloudOptions]
  +[HMDBackingStoreTransactionOptions defaultMetadataCloudOptions]

  // instance methods
  -[HMDBackingStoreTransactionOptions logIdentifier]
  -[HMDBackingStoreTransactionOptions destination]
  -[HMDBackingStoreTransactionOptions source]
  -[HMDBackingStoreTransactionOptions .cxx_destruct]
  -[HMDBackingStoreTransactionOptions label]
  -[HMDBackingStoreTransactionOptions initWithSource:destination:]
  -[HMDBackingStoreTransactionOptions encodeWithCoder:]
  -[HMDBackingStoreTransactionOptions committed]
  -[HMDBackingStoreTransactionOptions setLabel:]
  -[HMDBackingStoreTransactionOptions debugString:]
  -[HMDBackingStoreTransactionOptions _description]
  -[HMDBackingStoreTransactionOptions initWithCoder:]
  -[HMDBackingStoreTransactionOptions initWithSource:destination:label:mustReplay:mustPush:]
  -[HMDBackingStoreTransactionOptions mustReplay]
  -[HMDBackingStoreTransactionOptions mustPush]


HMDBackingStoreTransactionActions : HMDBackingStoreTransactionOptions
 @property  BOOL local
 @property  BOOL changed
 @property  BOOL saveToAssistant
 @property  BOOL saveToSharedUserAccount
 @property  HMDBackingStore *backingStore
 @property  NSMutableDictionary *userInfo

  // class methods
  +[HMDBackingStoreTransactionActions logCategory]

  // instance methods
  -[HMDBackingStoreTransactionActions changed]
  -[HMDBackingStoreTransactionActions logIdentifier]
  -[HMDBackingStoreTransactionActions .cxx_destruct]
  -[HMDBackingStoreTransactionActions userInfo]
  -[HMDBackingStoreTransactionActions backingStore]
  -[HMDBackingStoreTransactionActions local]
  -[HMDBackingStoreTransactionActions markChanged]
  -[HMDBackingStoreTransactionActions markLocalChanged]
  -[HMDBackingStoreTransactionActions markSaveToAssistant]
  -[HMDBackingStoreTransactionActions markSaveToSharedUserAccount]
  -[HMDBackingStoreTransactionActions addPostApplyActionUsingBlock:]
  -[HMDBackingStoreTransactionActions initWithBackingStore:options:]
  -[HMDBackingStoreTransactionActions addPostApplyActionIfNotPresent:usingBlock:]
  -[HMDBackingStoreTransactionActions invokePostApplyActions]
  -[HMDBackingStoreTransactionActions saveToAssistant]
  -[HMDBackingStoreTransactionActions saveToSharedUserAccount]


HMDEventTriggerDevice : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDDevice *device
 @property  BOOL currentDevice

  // instance methods
  -[HMDEventTriggerDevice device]
  -[HMDEventTriggerDevice .cxx_destruct]
  -[HMDEventTriggerDevice isEqual:]
  -[HMDEventTriggerDevice isCurrentDevice]
  -[HMDEventTriggerDevice initWithCurrentDeviceForHome:]
  -[HMDEventTriggerDevice initWithDevice:forHome:]


HMDCameraMediaConfigGenerator : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // instance methods
  -[HMDCameraMediaConfigGenerator extractSelectedConfigFromProtocolParameters:videoStreamConfig:audioStreamConfig:]
  -[HMDCameraMediaConfigGenerator extractReselectedConfigFromVideoTier:videoStreamConfig:]
  -[HMDCameraMediaConfigGenerator _loadAVCVideoStreamConfig:protocolParameters:]
  -[HMDCameraMediaConfigGenerator _loadAVCAudioStreamConfig:protocolParameters:]
  -[HMDCameraMediaConfigGenerator _loadConfig:cipherCuite:]
  -[HMDCameraMediaConfigGenerator _loadConfig:sendSrtpParameters:receiveSrtpParameters:]
  -[HMDCameraMediaConfigGenerator _loadMiscConfig:]


HMDSnapshotCompletionTimer : HMFTimer /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDSnapshotSession *snapshotSession

  // instance methods
  -[HMDSnapshotCompletionTimer .cxx_destruct]
  -[HMDSnapshotCompletionTimer initWithSnapshotSession:timer:]
  -[HMDSnapshotCompletionTimer snapshotSession]


HMDAddActionSetLogEvent : HMDLogEvent
 @property  NSString *actionSetType

  // class methods
  +[HMDAddActionSetLogEvent uuid]

  // instance methods
  -[HMDAddActionSetLogEvent actionSetType]
  -[HMDAddActionSetLogEvent .cxx_destruct]
  -[HMDAddActionSetLogEvent initWithActionSetType:]


HMDHomeManagerObjectLookup : HMDObjectLookup
 @property  HMDHomeManager *homeManager

  // class methods
  +[HMDHomeManagerObjectLookup logCategory]

  // instance methods
  -[HMDHomeManagerObjectLookup initWithHomeManager:]
  -[HMDHomeManagerObjectLookup .cxx_destruct]
  -[HMDHomeManagerObjectLookup setHomeManager:]
  -[HMDHomeManagerObjectLookup homeManager]
  -[HMDHomeManagerObjectLookup scanObjects]
  -[HMDHomeManagerObjectLookup _scanHomes]
  -[HMDHomeManagerObjectLookup _scanCloudZones]
  -[HMDHomeManagerObjectLookup _scanAccounts]


HMDUserPresenceFeedSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate>
 @property  <HMDUserPresenceFeedSessionDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *targetUUID
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMDDevice *residentDevice
 @property  HMDUser *user
 @property  HMUserPresenceAuthorization *presenceAuthStatus
 @property  HMUserPresenceCompute *presenceComputeStatus
 @property  HMDUserPresenceRegion *presenceRegionStatus
 @property  HMDUserPresenceUpdateReason *reason
 @property  NSDate *statusChangeDate
 @property  NSUUID *sessionID
 @property  HMDUserPresenceFeedRetryTimer *statusUpdateRetryTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserPresenceFeedSession logCategory]

  // instance methods
  -[HMDUserPresenceFeedSession user]
  -[HMDUserPresenceFeedSession timerDidFire:]
  -[HMDUserPresenceFeedSession sessionID]
  -[HMDUserPresenceFeedSession logIdentifier]
  -[HMDUserPresenceFeedSession setReason:]
  -[HMDUserPresenceFeedSession attributeDescriptions]
  -[HMDUserPresenceFeedSession targetUUID]
  -[HMDUserPresenceFeedSession _send]
  -[HMDUserPresenceFeedSession dealloc]
  -[HMDUserPresenceFeedSession .cxx_destruct]
  -[HMDUserPresenceFeedSession workQueue]
  -[HMDUserPresenceFeedSession send]
  -[HMDUserPresenceFeedSession residentDevice]
  -[HMDUserPresenceFeedSession messageDispatcher]
  -[HMDUserPresenceFeedSession presenceAuthStatus]
  -[HMDUserPresenceFeedSession presenceComputeStatus]
  -[HMDUserPresenceFeedSession reason]
  -[HMDUserPresenceFeedSession delegate]
  -[HMDUserPresenceFeedSession presenceRegionStatus]
  -[HMDUserPresenceFeedSession initWithDelegate:workQueue:targetUUID:messageDispatcher:residentDevice:user:presenceAuthStatus:presenceComputeStatus:presenceRegionStatus:reason:]
  -[HMDUserPresenceFeedSession statusUpdateRetryTimer]
  -[HMDUserPresenceFeedSession _handleStatusUpdateMessageError:responseTime:]
  -[HMDUserPresenceFeedSession statusChangeDate]
  -[HMDUserPresenceFeedSession _callDelegate]
  -[HMDUserPresenceFeedSession setStatusUpdateRetryTimer:]


HMDDoorbellBulletinUtilities : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDDoorbellBulletinUtilities>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDoorbellBulletinUtilities logCategory]
  +[HMDDoorbellBulletinUtilities localizedDoorbellMessageForSignificantEvents:]
  +[HMDDoorbellBulletinUtilities clipUUIDsForCoalesceableSignificantEvents:]
  +[HMDDoorbellBulletinUtilities significantEventsRelevantToDoorbellPress:forCameraProfile:]
  +[HMDDoorbellBulletinUtilities _localizedDoorbellMessageForSignificantEvents:forAudioAccessory:]
  +[HMDDoorbellBulletinUtilities _significantEventsWithinTimeWindowOfDoorbellPress:forCameraProfile:]
  +[HMDDoorbellBulletinUtilities localizedAudioAccessoryAnnounceMessageForSignificantEvents:]
  +[HMDDoorbellBulletinUtilities localizedMessageForCharacteristic:]
  +[HMDDoorbellBulletinUtilities faceClassificationsNearDateOfDoorbellPress:forCameraProfile:]


HMDLogEventUserActivityAnalyzer : HMDLogEventAnalyzer
 @property  HMDEventFlagsManager *eventFlagsManager
 @property  HMDEventCountersManager *eventCountersManager

  // instance methods
  -[HMDLogEventUserActivityAnalyzer .cxx_destruct]
  -[HMDLogEventUserActivityAnalyzer eventCountersManager]
  -[HMDLogEventUserActivityAnalyzer eventFlagsManager]
  -[HMDLogEventUserActivityAnalyzer setEventCountersManager:]
  -[HMDLogEventUserActivityAnalyzer setEventFlagsManager:]
  -[HMDLogEventUserActivityAnalyzer processLogEvent:]
  -[HMDLogEventUserActivityAnalyzer initWithSupportedEventTypes:context:eventCountersManager:eventFlagsManager:]
  -[HMDLogEventUserActivityAnalyzer initWithSupportedEventTypes:context:]
  -[HMDLogEventUserActivityAnalyzer _handleReadWriteLogEvent:]
  -[HMDLogEventUserActivityAnalyzer _handleAccessoryPairingLogEvent:]
  -[HMDLogEventUserActivityAnalyzer _handleAddActionSetLogEvent:]
  -[HMDLogEventUserActivityAnalyzer _handleAddTriggerLogEvent:]
  -[HMDLogEventUserActivityAnalyzer _handleActionSetRunLogEvent:]
  -[HMDLogEventUserActivityAnalyzer _handleCameraStreamLogEvent:]
  -[HMDLogEventUserActivityAnalyzer _handleCameraClipRequestLogEvent:]
  -[HMDLogEventUserActivityAnalyzer _markUserActivityEventForEventName:]
  -[HMDLogEventUserActivityAnalyzer _isUserSource:]
  -[HMDLogEventUserActivityAnalyzer _isTriggerSource:]


HMDUnassociatedMediaAccessory : HMDUnassociatedAccessory <HMFLogging>
 @property  HMDAccessoryAdvertisement *advertisement
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUnassociatedMediaAccessory logCategory]
  +[HMDUnassociatedMediaAccessory modelForChangeType:uuid:parentUUID:]

  // instance methods
  -[HMDUnassociatedMediaAccessory logIdentifier]
  -[HMDUnassociatedMediaAccessory .cxx_destruct]
  -[HMDUnassociatedMediaAccessory isEqual:]
  -[HMDUnassociatedMediaAccessory associationOptions]
  -[HMDUnassociatedMediaAccessory transportTypes]
  -[HMDUnassociatedMediaAccessory advertisement]
  -[HMDUnassociatedMediaAccessory setAdvertisement:]
  -[HMDUnassociatedMediaAccessory addTransactionForHome:configurationAppIdentifier:]
  -[HMDUnassociatedMediaAccessory initWithIdentifier:name:category:messageDispatcher:]
  -[HMDUnassociatedMediaAccessory dumpDescription]
  -[HMDUnassociatedMediaAccessory initWithAdvertisement:messageDispatcher:]
  -[HMDUnassociatedMediaAccessory updateAdvertisementData:]
  -[HMDUnassociatedMediaAccessory isHAPAirPlay2Accessory]


HMObjectCacheHMDRemoteMessagePolicy : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMObjectCacheHMDRemoteMessagePolicy enabled]
  +[HMObjectCacheHMDRemoteMessagePolicy cachedInstanceForRemoteMessagePolicy:]


HMDRemoteMessagePolicy : HMFMessagePolicy /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSMutableCopying>
 @property  BOOL requiresSecureMessage
 @property  BOOL allowsAnonymousMessage
 @property  BOOL requiresAccountMessage
 @property  unsigned long transportRestriction
 @property  unsigned long roles

  // class methods
  +[HMDRemoteMessagePolicy defaultPolicy]
  +[HMDRemoteMessagePolicy defaultSecurePolicy]
  +[HMDRemoteMessagePolicy remoteMessagePolicyWithRequiresSecureMessage:allowsAnonymousMessage:requiresAccountMessage:transportRestriction:roles:]

  // instance methods
  -[HMDRemoteMessagePolicy copyWithZone:]
  -[HMDRemoteMessagePolicy init]
  -[HMDRemoteMessagePolicy isEqual:]
  -[HMDRemoteMessagePolicy roles]
  -[HMDRemoteMessagePolicy mutableCopyWithZone:]
  -[HMDRemoteMessagePolicy __initWithRequiresSecureMessage:allowsAnonymousMessage:requiresAccountMessage:transportRestriction:roles:]
  -[HMDRemoteMessagePolicy requiresSecureMessage]
  -[HMDRemoteMessagePolicy allowsAnonymousMessage]
  -[HMDRemoteMessagePolicy requiresAccountMessage]
  -[HMDRemoteMessagePolicy transportRestriction]


HMDMutableRemoteMessagePolicy : HMDRemoteMessagePolicy
 @property  BOOL requiresSecureMessage
 @property  BOOL allowsAnonymousMessage
 @property  BOOL requiresAccountMessage
 @property  unsigned long transportRestriction
 @property  unsigned long roles

  // class methods
  +[HMDMutableRemoteMessagePolicy remoteMessagePolicyWithRequiresSecureMessage:allowsAnonymousMessage:requiresAccountMessage:transportRestriction:roles:]

  // instance methods
  -[HMDMutableRemoteMessagePolicy copyWithZone:]
  -[HMDMutableRemoteMessagePolicy setRoles:]
  -[HMDMutableRemoteMessagePolicy setRequiresSecureMessage:]
  -[HMDMutableRemoteMessagePolicy setRequiresAccountMessage:]
  -[HMDMutableRemoteMessagePolicy setTransportRestriction:]
  -[HMDMutableRemoteMessagePolicy setAllowsAnonymousMessage:]


HMDPendingSocketRequest : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *applicationProtocolName
 @property  @? completion

  // instance methods
  -[HMDPendingSocketRequest completion]
  -[HMDPendingSocketRequest .cxx_destruct]
  -[HMDPendingSocketRequest initWithApplicationProtocolName:completion:]
  -[HMDPendingSocketRequest applicationProtocolName]


HMDDataStreamController : NSObject /usr/lib/libc++.1.dylib <HMDDataStreamHAPSetupOperationDelegate, HMFLogging, HMFTimerDelegate, HMDDataStreamDelegate, HMDDataStreamSocketController>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHAPAccessory *accessory
 @property  HMDService *transferManagementService
 @property  HMDDataStream *defaultDataStream
 @property  NSMutableArray *pendingSocketRequests
 @property  HMDDataStreamSetupOperation *setupInProgress
 @property  @? dataStreamFactory
 @property  NSString *logIdentifier
 @property  BOOL supportsDataStreamOverTCP
 @property  BOOL supportsDataStreamOverHAP
 @property  unsigned long maxControllerTransportMTU
 @property  HMFTimer *idleTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDataStreamController logCategory]

  // instance methods
  -[HMDDataStreamController setIdleTimer:]
  -[HMDDataStreamController timerDidFire:]
  -[HMDDataStreamController setWorkQueue:]
  -[HMDDataStreamController logIdentifier]
  -[HMDDataStreamController idleTimer]
  -[HMDDataStreamController .cxx_destruct]
  -[HMDDataStreamController workQueue]
  -[HMDDataStreamController accessory]
  -[HMDDataStreamController registerForMessages]
  -[HMDDataStreamController setAccessory:]
  -[HMDDataStreamController invalidate]
  -[HMDDataStreamController _stopIdleTimer]
  -[HMDDataStreamController _startIdleTimer]
  -[HMDDataStreamController setupInProgress]
  -[HMDDataStreamController setSetupInProgress:]
  -[HMDDataStreamController dataStreamSetupOperation:didFailWithError:]
  -[HMDDataStreamController dataStreamSetupOperation:didSucceedWithTransport:sessionEncryption:]
  -[HMDDataStreamController addBulkSendListener:fileType:]
  -[HMDDataStreamController removeBulkSendListener:]
  -[HMDDataStreamController transferManagementService]
  -[HMDDataStreamController dataStreamInitializationSetupOperation:didCompleteSupportReadWithStatus:]
  -[HMDDataStreamController maxControllerTransportMTU]
  -[HMDDataStreamController setMaxControllerTransportMTU:]
  -[HMDDataStreamController openBulkSendSessionForFileType:reason:queue:callback:]
  -[HMDDataStreamController dataStreamDidUpdateActiveStatus:]
  -[HMDDataStreamController dataStream:didFailWithError:]
  -[HMDDataStreamController dataStreamDidReceiveRawFrame:]
  -[HMDDataStreamController dataStreamDidClose:]
  -[HMDDataStreamController dataStreamDidOpen:]
  -[HMDDataStreamController initWithAccessory:service:workQueue:dataStreamFactory:]
  -[HMDDataStreamController handleAccessoryConnected:]
  -[HMDDataStreamController handleAccessoryDisconnected:]
  -[HMDDataStreamController handleAccessoryConnected]
  -[HMDDataStreamController setSupportsDataStreamOverTCP:]
  -[HMDDataStreamController setSupportsDataStreamOverHAP:]
  -[HMDDataStreamController _handleAccessoryConnected]
  -[HMDDataStreamController _resetTransportInfo]
  -[HMDDataStreamController supportsDataStreamOverHAP]
  -[HMDDataStreamController canAcceptBulkSendListeners]
  -[HMDDataStreamController _cancelStreamTransportWithError:]
  -[HMDDataStreamController defaultDataStream]
  -[HMDDataStreamController _isDataStreamCapable]
  -[HMDDataStreamController _initiateStreamSetup]
  -[HMDDataStreamController _getActiveProtocolWithName:]
  -[HMDDataStreamController pendingSocketRequests]
  -[HMDDataStreamController _processPendingSocketRequests]
  -[HMDDataStreamController _getStreamProtocol]
  -[HMDDataStreamController _createStreamSocketWithStreamProtocol:applicationProtocolName:completion:]
  -[HMDDataStreamController supportsDataStreamOverTCP]
  -[HMDDataStreamController _failPendingSocketRequestsWithError:]
  -[HMDDataStreamController dataStreamFactory]
  -[HMDDataStreamController setDefaultDataStream:]
  -[HMDDataStreamController _createBulkStreamProtocol]
  -[HMDDataStreamController _resetDefaultDataStream]
  -[HMDDataStreamController openStreamSocketWithApplicationProtocol:completion:]
  -[HMDDataStreamController initWithAccessory:service:workQueue:]
  -[HMDDataStreamController sendTargetControlWhoAmIWithIdentifier:]
  -[HMDDataStreamController setTransferManagementService:]
  -[HMDDataStreamController setPendingSocketRequests:]


_HMDSecureRemoteQueuedMessage : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  HMDRemoteMessage *message
 @property  HMFTimer *timer
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_HMDSecureRemoteQueuedMessage initWithMessage:]
  -[_HMDSecureRemoteQueuedMessage message]
  -[_HMDSecureRemoteQueuedMessage init]
  -[_HMDSecureRemoteQueuedMessage timer]
  -[_HMDSecureRemoteQueuedMessage .cxx_destruct]
  -[_HMDSecureRemoteQueuedMessage propertyDescription]
  -[_HMDSecureRemoteQueuedMessage shortDescription]


HMDSecureRemoteSession : HMFMessageTransport /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDSecureRemoteStreamDelegate, HMFLogging, HMFTimerDelegate, HMFDumpState>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDRemoteDeviceMonitor *deviceMonitor
 @property  HMDAccountRegistry *accountRegistry
 @property  unsigned long maximumRemoteStreams
 @property  NSMutableArray *pendingMessages
 @property  NSMutableArray *clientStreams
 @property  NSMutableArray *serverStreams
 @property  long long state
 @property  BOOL reachable
 @property  HMDDevice *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSecureRemoteSession initialize]
  +[HMDSecureRemoteSession logCategory]
  +[HMDSecureRemoteSession isSecureRemoteSessionMessage:]

  // instance methods
  -[HMDSecureRemoteSession timerDidFire:]
  -[HMDSecureRemoteSession sendMessage:completionHandler:]
  -[HMDSecureRemoteSession device]
  -[HMDSecureRemoteSession messageTransport:didReceiveMessage:]
  -[HMDSecureRemoteSession openWithCompletionHandler:]
  -[HMDSecureRemoteSession logIdentifier]
  -[HMDSecureRemoteSession init]
  -[HMDSecureRemoteSession dealloc]
  -[HMDSecureRemoteSession setState:]
  -[HMDSecureRemoteSession .cxx_destruct]
  -[HMDSecureRemoteSession close]
  -[HMDSecureRemoteSession setReachable:]
  -[HMDSecureRemoteSession clientQueue]
  -[HMDSecureRemoteSession isReachable]
  -[HMDSecureRemoteSession state]
  -[HMDSecureRemoteSession dumpState]
  -[HMDSecureRemoteSession pendingMessages]
  -[HMDSecureRemoteSession _closeWithError:]
  -[HMDSecureRemoteSession deviceMonitor]
  -[HMDSecureRemoteSession accountRegistry]
  -[HMDSecureRemoteSession maximumRemoteStreams]
  -[HMDSecureRemoteSession handleDeviceIsReachable:]
  -[HMDSecureRemoteSession handleDeviceIsNotReachable:]
  -[HMDSecureRemoteSession setMaximumRemoteStreams:]
  -[HMDSecureRemoteSession _openClientStreamWithCompletionHandler:]
  -[HMDSecureRemoteSession clientStreams]
  -[HMDSecureRemoteSession serverStreams]
  -[HMDSecureRemoteSession _clientStreamForMessage:]
  -[HMDSecureRemoteSession _queueMessage:]
  -[HMDSecureRemoteSession _handleSecureClientMessage:transport:]
  -[HMDSecureRemoteSession _handleSecureServerMessage:transport:]
  -[HMDSecureRemoteSession _handleStreamInvalidationMessage:]
  -[HMDSecureRemoteSession _serverStreamWithIdentifier:]
  -[HMDSecureRemoteSession _openServerStreamWithIdentifier:completionHandler:]
  -[HMDSecureRemoteSession _clientStreamWithIdentiifer:]
  -[HMDSecureRemoteSession _dequeMessage]
  -[HMDSecureRemoteSession _closeClientStream:error:]
  -[HMDSecureRemoteSession _closeServerStream:error:]
  -[HMDSecureRemoteSession secureRemoteStream:receivedRequestToSendMessage:]
  -[HMDSecureRemoteSession secureRemoteStreamIsIdle:]
  -[HMDSecureRemoteSession secureRemoteStream:didCloseWithError:]
  -[HMDSecureRemoteSession initWithDevice:deviceMonitor:accountRegistry:]
  -[HMDSecureRemoteSession receivedSecureMessage:fromTransport:]


AWDHomeKitCameraStreamMessaging : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasReceivedNegotiationRequest
 @property  unsigned int receivedNegotiationRequest
 @property  BOOL hasSentNegotiationRequest
 @property  unsigned int sentNegotiationRequest
 @property  BOOL hasSentNegotiationResponse
 @property  unsigned int sentNegotiationResponse
 @property  BOOL hasReceivedStartRequest
 @property  unsigned int receivedStartRequest
 @property  BOOL hasSentStartRequest
 @property  unsigned int sentStartRequest
 @property  BOOL hasSentStartResponse
 @property  unsigned int sentStartResponse
 @property  BOOL hasSentConnSetup
 @property  unsigned int sentConnSetup
 @property  BOOL hasReceivedConnSetup
 @property  unsigned int receivedConnSetup

  // instance methods
  -[AWDHomeKitCameraStreamMessaging copyWithZone:]
  -[AWDHomeKitCameraStreamMessaging readFrom:]
  -[AWDHomeKitCameraStreamMessaging writeTo:]
  -[AWDHomeKitCameraStreamMessaging isEqual:]
  -[AWDHomeKitCameraStreamMessaging copyTo:]
  -[AWDHomeKitCameraStreamMessaging dictionaryRepresentation]
  -[AWDHomeKitCameraStreamMessaging mergeFrom:]
  -[AWDHomeKitCameraStreamMessaging setReceivedNegotiationRequest:]
  -[AWDHomeKitCameraStreamMessaging setHasReceivedNegotiationRequest:]
  -[AWDHomeKitCameraStreamMessaging hasReceivedNegotiationRequest]
  -[AWDHomeKitCameraStreamMessaging setSentNegotiationRequest:]
  -[AWDHomeKitCameraStreamMessaging setHasSentNegotiationRequest:]
  -[AWDHomeKitCameraStreamMessaging hasSentNegotiationRequest]
  -[AWDHomeKitCameraStreamMessaging setSentNegotiationResponse:]
  -[AWDHomeKitCameraStreamMessaging setHasSentNegotiationResponse:]
  -[AWDHomeKitCameraStreamMessaging hasSentNegotiationResponse]
  -[AWDHomeKitCameraStreamMessaging setReceivedStartRequest:]
  -[AWDHomeKitCameraStreamMessaging setHasReceivedStartRequest:]
  -[AWDHomeKitCameraStreamMessaging hasReceivedStartRequest]
  -[AWDHomeKitCameraStreamMessaging setSentStartRequest:]
  -[AWDHomeKitCameraStreamMessaging setHasSentStartRequest:]
  -[AWDHomeKitCameraStreamMessaging hasSentStartRequest]
  -[AWDHomeKitCameraStreamMessaging setSentStartResponse:]
  -[AWDHomeKitCameraStreamMessaging setHasSentStartResponse:]
  -[AWDHomeKitCameraStreamMessaging hasSentStartResponse]
  -[AWDHomeKitCameraStreamMessaging setSentConnSetup:]
  -[AWDHomeKitCameraStreamMessaging setHasSentConnSetup:]
  -[AWDHomeKitCameraStreamMessaging hasSentConnSetup]
  -[AWDHomeKitCameraStreamMessaging setReceivedConnSetup:]
  -[AWDHomeKitCameraStreamMessaging setHasReceivedConnSetup:]
  -[AWDHomeKitCameraStreamMessaging hasReceivedConnSetup]
  -[AWDHomeKitCameraStreamMessaging receivedNegotiationRequest]
  -[AWDHomeKitCameraStreamMessaging sentNegotiationRequest]
  -[AWDHomeKitCameraStreamMessaging sentNegotiationResponse]
  -[AWDHomeKitCameraStreamMessaging receivedStartRequest]
  -[AWDHomeKitCameraStreamMessaging sentStartRequest]
  -[AWDHomeKitCameraStreamMessaging sentStartResponse]
  -[AWDHomeKitCameraStreamMessaging sentConnSetup]
  -[AWDHomeKitCameraStreamMessaging receivedConnSetup]


AWDHomeKitResetConfiguration : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasErrorCode
 @property  int errorCode

  // instance methods
  -[AWDHomeKitResetConfiguration setErrorCode:]
  -[AWDHomeKitResetConfiguration copyWithZone:]
  -[AWDHomeKitResetConfiguration hasErrorCode]
  -[AWDHomeKitResetConfiguration errorCode]
  -[AWDHomeKitResetConfiguration setHasErrorCode:]
  -[AWDHomeKitResetConfiguration timestamp]
  -[AWDHomeKitResetConfiguration setTimestamp:]
  -[AWDHomeKitResetConfiguration setHasTimestamp:]
  -[AWDHomeKitResetConfiguration readFrom:]
  -[AWDHomeKitResetConfiguration writeTo:]
  -[AWDHomeKitResetConfiguration isEqual:]
  -[AWDHomeKitResetConfiguration copyTo:]
  -[AWDHomeKitResetConfiguration dictionaryRepresentation]
  -[AWDHomeKitResetConfiguration mergeFrom:]
  -[AWDHomeKitResetConfiguration hasTimestamp]


ScanContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  double timeout

  // instance methods
  -[ScanContext timeout]
  -[ScanContext setTimeout:]


BTLEScanner : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, HAPBTLECentralManagerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFTimer *scanTimer
 @property  CUBLEScanner *cubleScanner
 @property  HAPBTLECentralManager *centralManager
 @property  HMDAccessoryQueues *scanQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[BTLEScanner sharedScanLock]
  +[BTLEScanner initializeScanner]

  // instance methods
  -[BTLEScanner timerDidFire:]
  -[BTLEScanner setWorkQueue:]
  -[BTLEScanner init]
  -[BTLEScanner centralManager]
  -[BTLEScanner .cxx_destruct]
  -[BTLEScanner workQueue]
  -[BTLEScanner _stopTimer]
  -[BTLEScanner setScanQueue:]
  -[BTLEScanner setCentralManager:]
  -[BTLEScanner _flushQueue]
  -[BTLEScanner scanQueue]
  -[BTLEScanner didUpdateBTLEState:]
  -[BTLEScanner _stopScan]
  -[BTLEScanner scanTimer]
  -[BTLEScanner setScanTimer:]
  -[BTLEScanner setCubleScanner:]
  -[BTLEScanner cubleScanner]
  -[BTLEScanner _checkCanScan]
  -[BTLEScanner startScan:timeout:]


HMDHAPAccessory : HMDAccessory <HMDAccessoryMinimumUserPrivilegeCapable, HMDServiceOwner, HAPRelayAccessoryDelegate, HMDTimeInformationMonitorDelegate, HMFTimerDelegate, HAPAccessoryServerNotification, HMDAccessoryIdentify, HMDAccessoryUserManagement>
 @property  HMDWiFiManagementController *wiFiManagementController
 @property  HMDAccessoryDiagnosticsManager *diagnosticsManager
 @property  HMDNetworkRouterController *networkRouterController
 @property  HMDNetworkRouterProfile *networkRouterProfile
 @property  HMDNetworkRouterSatelliteProfile *networkRouterSatelliteProfile
 @property  NSSet *lightProfiles
 @property  HMCameraUserNotificationSettings *cameraProfileNotificationSettings
 @property  BOOL supportsSiri
 @property  BOOL hasTelevisionService
 @property  HMDMediaProfile *mediaProfile
 @property  BOOL hasSmartSpeakerService
 @property  <HMDDataStreamSocketController> *dataStreamSocketController
 @property  NSString *uniqueIdentifier
 @property  BOOL supportsRelay
 @property  BOOL paired
 @property  unsigned long activationAttempts
 @property  unsigned long pairingAttempts
 @property  NSNumber *accessoryFlags
 @property  long long certificationStatus
 @property  NSNumber *backedOffStateNumber
 @property  HMFTimer *accessoryDiscoveryBackoffTimer
 @property  HMFTimer *accessoryKeyRefreshTimer
 @property  NSData *broadcastKey
 @property  NSNumber *keyUpdatedStateNumber
 @property  NSDate *keyUpdatedTime
 @property  unsigned char keyGenerationType
 @property  BOOL keyGenerationInProgress
 @property  NSSet *identifiersForBridgedAccessories
 @property  HMDAccessoryAdvertisement *accessoryAdvertisement
 @property  NSNumber *hasOnboardedForNaturalLighting
 @property  NSArray *targetUUIDs
 @property  BOOL hardwareSupport
 @property  HMDTargetControllerManager *targetControllerManager
 @property  HMDAccessorySymptomHandler *symptomsHandler
 @property  NSNumber *sleepInterval
 @property  NSString *serializedIdentifier
 @property  NSMutableArray *discoveredServices
 @property  HMDHAPAccessory *bridge
 @property  NSData *publicKey
 @property  NSString *pairingUsername
 @property  BOOL timeInformationServiceExists
 @property  HMDCharacteristic *timeUpdateCharacteristic
 @property  HMDCharacteristic *currentTimeCharacteristic
 @property  HMDCharacteristic *dayOfTheWeekCharacteristic
 @property  HMFTimer *timeInformationTimer
 @property  HMFTimer *systemTimeInformationTimer
 @property  BOOL systemTimeNeedsUpdate
 @property  NSString *relayIdentifier
 @property  HMDDataStreamController *dataStreamController
 @property  HMDNetworkRouterController *networkRouterController
 @property  NSData *setupHash
 @property  NSNumber *wiFiTransportCapabilities
 @property  HMDWiFiManagementController *wiFiManagementController
 @property  HMDPendingCharacteristic *pendingPowerOn
 @property  HMDAccessoryDiagnosticsManager *diagnosticsManager
 @property  HMDDoorbellChimeController *doorbellChimeController
 @property  BOOL relayEnabled
 @property  unsigned long currentRelayAccessoryState
 @property  BOOL supportsCameraRecordingFeature
 @property  NSMutableArray *powerOnCompletionRoutines
 @property  NSMutableArray *pendingReads
 @property  HMCameraUserNotificationSettings *cameraProfileNotificationSettings
 @property  NSArray *services
 @property  NSSet *serviceTypeUUIDs
 @property  NSSet *initialServiceTypeUUIDs
 @property  HMDService *primaryService
 @property  BOOL clientRegisteredForNotifications
 @property  NSNumber *hapInstanceId
 @property  HMFConnectivityInfo *connectivityInfo
 @property  HMDCameraProfileSettingsManager *cameraProfileSettingsManager
 @property  NSSet *cameraProfiles
 @property  BOOL hasCameraStreamService
 @property  HMDAnalyticsHAPServiceData *primaryHAPServiceForAnalytics
 @property  NSArray *hapServicesListForAnalytics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  BOOL supportsIdentify
 @property  BOOL supportsUserManagement
 @property  HMFPairingIdentity *pairingIdentity

  // class methods
  +[HMDHAPAccessory supportsSecureCoding]
  +[HMDHAPAccessory hasMessageReceiverChildren]
  +[HMDHAPAccessory transactionClass]
  +[HMDHAPAccessory getAWDTransportTypeWithLinkType:]

  // instance methods
  -[HMDHAPAccessory setUniqueIdentifier:]
  -[HMDHAPAccessory services]
  -[HMDHAPAccessory supportsRelay]
  -[HMDHAPAccessory timerDidFire:]
  -[HMDHAPAccessory publicKey]
  -[HMDHAPAccessory certificationStatus]
  -[HMDHAPAccessory setCertificationStatus:]
  -[HMDHAPAccessory init]
  -[HMDHAPAccessory attributeDescriptions]
  -[HMDHAPAccessory setBridge:]
  -[HMDHAPAccessory bridge]
  -[HMDHAPAccessory cameraProfiles]
  -[HMDHAPAccessory lightProfiles]
  -[HMDHAPAccessory isPaired]
  -[HMDHAPAccessory stopScan]
  -[HMDHAPAccessory isNotificationEnabled]
  -[HMDHAPAccessory dealloc]
  -[HMDHAPAccessory .cxx_destruct]
  -[HMDHAPAccessory name]
  -[HMDHAPAccessory symptomsHandler]
  -[HMDHAPAccessory isPrimary]
  -[HMDHAPAccessory sleepInterval]
  -[HMDHAPAccessory networkRouterProfile]
  -[HMDHAPAccessory encodeWithCoder:]
  -[HMDHAPAccessory removeTarget:]
  -[HMDHAPAccessory urlString]
  -[HMDHAPAccessory uniqueIdentifier]
  -[HMDHAPAccessory mediaProfile]
  -[HMDHAPAccessory _registerForMessages]
  -[HMDHAPAccessory supportsWiFiReconfiguration]
  -[HMDHAPAccessory indicateNotificationFromServer:notifyType:withDictionary:]
  -[HMDHAPAccessory supportsTargetController]
  -[HMDHAPAccessory unconfigure]
  -[HMDHAPAccessory supportsSiri]
  -[HMDHAPAccessory setSleepInterval:]
  -[HMDHAPAccessory isEqual:]
  -[HMDHAPAccessory removeUser:completionHandler:]
  -[HMDHAPAccessory _updateReachability]
  -[HMDHAPAccessory reachableTransports]
  -[HMDHAPAccessory accessoryFlags]
  -[HMDHAPAccessory setAccessoryFlags:]
  -[HMDHAPAccessory setSymptomsHandler:]
  -[HMDHAPAccessory supportsDiagnosticsTransfer]
  -[HMDHAPAccessory _notifyClientsOfTargetControlSupportUpdate]
  -[HMDHAPAccessory hasOnboardedForNaturalLighting]
  -[HMDHAPAccessory setHasOnboardedForNaturalLighting:]
  -[HMDHAPAccessory supportsIdentify]
  -[HMDHAPAccessory _handleUpdateAssociatedServiceType:]
  -[HMDHAPAccessory pairingIdentity]
  -[HMDHAPAccessory identifiersForBridgedAccessories]
  -[HMDHAPAccessory _supportsMediaAccessControl]
  -[HMDHAPAccessory setSupportsRelay:]
  -[HMDHAPAccessory dumpState]
  -[HMDHAPAccessory setPublicKey:]
  -[HMDHAPAccessory initWithCoder:]
  -[HMDHAPAccessory reachabilityDidChange:]
  -[HMDHAPAccessory discoveredServices]
  -[HMDHAPAccessory setDiscoveredServices:]
  -[HMDHAPAccessory isRelayEnabled]
  -[HMDHAPAccessory modelObjectWithChangeType:version:]
  -[HMDHAPAccessory messageReceiverChildren]
  -[HMDHAPAccessory transactionObjectUpdated:newValues:message:]
  -[HMDHAPAccessory transactionObjectRemoved:message:]
  -[HMDHAPAccessory modelObjectWithChangeType:]
  -[HMDHAPAccessory backingStoreObjects:]
  -[HMDHAPAccessory setupHash]
  -[HMDHAPAccessory setSetupHash:]
  -[HMDHAPAccessory pairingUsername]
  -[HMDHAPAccessory wiFiManagementController]
  -[HMDHAPAccessory findServiceWithServiceType:]
  -[HMDHAPAccessory setWiFiManagementController:]
  -[HMDHAPAccessory _handleUpdatedServicesForWiFiManagementController]
  -[HMDHAPAccessory configureBulletinNotification]
  -[HMDHAPAccessory disableNotificationsForBundleID:completionHandler:]
  -[HMDHAPAccessory setIdentifiersForBridgedAccessories:]
  -[HMDHAPAccessory configureWithHome:msgDispatcher:configurationTracker:initialConfiguration:]
  -[HMDHAPAccessory supportedTransports]
  -[HMDHAPAccessory handleRemoteGatewayNotificationRegistration:enable:enableTime:]
  -[HMDHAPAccessory enableNotification:forCharacteristics:message:clientIdentifier:]
  -[HMDHAPAccessory updateNotificationEnabled:forCharacteristics:onBehalfOf:]
  -[HMDHAPAccessory cameraProfileSettingsManager]
  -[HMDHAPAccessory characteristicsPassingTest:]
  -[HMDHAPAccessory enableNotification:ignoreDeviceUnlockRequirement:clientIdentifier:forCharacteristics:]
  -[HMDHAPAccessory _removeService:]
  -[HMDHAPAccessory hasTelevisionService]
  -[HMDHAPAccessory runtimeState]
  -[HMDHAPAccessory matchesHAPAccessoryWithServerIdentifier:linkType:]
  -[HMDHAPAccessory hasBTLELink]
  -[HMDHAPAccessory namesOfServicesShowingTilesInHomeApp]
  -[HMDHAPAccessory transactionWithObjectChangeType:]
  -[HMDHAPAccessory setPairingUsername:]
  -[HMDHAPAccessory retrieveUpdatedTransportInfoArray:]
  -[HMDHAPAccessory shouldEnableDaemonRelaunch]
  -[HMDHAPAccessory matchingHAPAccessoryWithServerIdentifier:linkType:]
  -[HMDHAPAccessory isNonClientNotificationEnabled]
  -[HMDHAPAccessory preferredHAPAccessoryForOperation:linkType:]
  -[HMDHAPAccessory writeTimeInformationCharacteristicsForAccessory:]
  -[HMDHAPAccessory setupTapToken]
  -[HMDHAPAccessory autoConfigureTargetController]
  -[HMDHAPAccessory initWithTransaction:home:]
  -[HMDHAPAccessory configureWithAccessory:homeNotificationsEnabled:queue:completion:]
  -[HMDHAPAccessory savePublicKeyToKeychain]
  -[HMDHAPAccessory enableNotificationsWithHAPAccessory:homeNotificationsEnabled:]
  -[HMDHAPAccessory addAdvertisement:]
  -[HMDHAPAccessory removeBridgedAccessory:]
  -[HMDHAPAccessory hapInstanceId]
  -[HMDHAPAccessory matchingHAPAccessoryWithLinkType:]
  -[HMDHAPAccessory getPrimaryHAPAccessories]
  -[HMDHAPAccessory removeHAPAccessoryWithServerIdentifier:linkType:completion:completionQueue:]
  -[HMDHAPAccessory tunneledHAPAccessories]
  -[HMDHAPAccessory getConfiguredName]
  -[HMDHAPAccessory serviceWithUUID:]
  -[HMDHAPAccessory readInitialRequiredCharacteristicsForAccessory:]
  -[HMDHAPAccessory supportsUserManagement]
  -[HMDHAPAccessory relayIdentifier]
  -[HMDHAPAccessory updateTrackedAccessoryStateNumber:]
  -[HMDHAPAccessory findCharacteristic:forService:]
  -[HMDHAPAccessory handleMultipleCharacteristicsUpdated:message:completionQueue:completionHandler:]
  -[HMDHAPAccessory _retrieveStateForTrackedAccessory:withCompletion:]
  -[HMDHAPAccessory writeCharacteristicValues:source:message:queue:completionHandler:]
  -[HMDHAPAccessory linkSpeed]
  -[HMDHAPAccessory readCharacteristicValues:source:message:queue:completionHandler:]
  -[HMDHAPAccessory findService:]
  -[HMDHAPAccessory findCharacteristic:]
  -[HMDHAPAccessory enableNotification:forCharacteristicIDs:message:clientIdentifier:]
  -[HMDHAPAccessory supportsMinimumUserPrivilege]
  -[HMDHAPAccessory handleUpdatedMinimumUserPrivilege:]
  -[HMDHAPAccessory handleUpdatedPassword:]
  -[HMDHAPAccessory hasSmartSpeakerService]
  -[HMDHAPAccessory matchingHAPAccessoryServerIdentifierWithLinkType:]
  -[HMDHAPAccessory isClientRegisteredForNotifications]
  -[HMDHAPAccessory removeAdvertisement:]
  -[HMDHAPAccessory backOffAccessoryForStateNumber:]
  -[HMDHAPAccessory setReachability:serverIdentifier:linkType:]
  -[HMDHAPAccessory matchesHAPAccessory:]
  -[HMDHAPAccessory hmdCharacteristicForInstanceId:]
  -[HMDHAPAccessory notifyingCharacteristicStateNumberUpdated:]
  -[HMDHAPAccessory matchesHAPAccessoryWithServerIdentifier:instanceID:]
  -[HMDHAPAccessory unconfigureAccessoryWithServerIdentifier:linkType:updateReachability:]
  -[HMDHAPAccessory messageSendPolicy]
  -[HMDHAPAccessory hapServicesListForAnalytics]
  -[HMDHAPAccessory primaryHAPServiceForAnalytics]
  -[HMDHAPAccessory hasIPLink]
  -[HMDHAPAccessory hasCameraStreamService]
  -[HMDHAPAccessory isCameraRecordingFeatureSupported]
  -[HMDHAPAccessory takeOwnershipOfAppData:]
  -[HMDHAPAccessory addUser:completionHandler:]
  -[HMDHAPAccessory pairingsWithCompletionHandler:]
  -[HMDHAPAccessory assistantObject]
  -[HMDHAPAccessory anyIPServer]
  -[HMDHAPAccessory writeCharacteristicValues:source:queue:completionHandler:]
  -[HMDHAPAccessory readCharacteristicValues:source:queue:completionHandler:]
  -[HMDHAPAccessory supportsNetworkProtection]
  -[HMDHAPAccessory serializedIdentifier]
  -[HMDHAPAccessory removeDataStreamBulkSendListener:]
  -[HMDHAPAccessory addDataStreamBulkSendListener:fileType:]
  -[HMDHAPAccessory openBulkSendSessionForFileType:reason:queue:callback:]
  -[HMDHAPAccessory canWakeBasedOnCharacteristic:]
  -[HMDHAPAccessory initializeTap]
  -[HMDHAPAccessory powerOnComplete:]
  -[HMDHAPAccessory identifyAccessory:]
  -[HMDHAPAccessory _renameAccessory:resetName:message:]
  -[HMDHAPAccessory _handleUpdatedName:]
  -[HMDHAPAccessory startReachabilityCheck]
  -[HMDHAPAccessory stopReachabilityCheck]
  -[HMDHAPAccessory updateReachabilityPingNotification]
  -[HMDHAPAccessory _shouldFilterAccessoryProfile:]
  -[HMDHAPAccessory providesHashRouteID]
  -[HMDHAPAccessory populateModelObject:version:]
  -[HMDHAPAccessory dumpSimpleState]
  -[HMDHAPAccessory updatePrimaryServiceIfNeeded]
  -[HMDHAPAccessory dataStreamController]
  -[HMDHAPAccessory diagnosticsManager]
  -[HMDHAPAccessory _destroyDiagnosticsManager]
  -[HMDHAPAccessory _createDiagnosticsManager:]
  -[HMDHAPAccessory setDiagnosticsManager:]
  -[HMDHAPAccessory _handleUpdatedServicesForDiagnosticsManager:]
  -[HMDHAPAccessory canAcceptBulkSendListeners]
  -[HMDHAPAccessory primaryIPServer]
  -[HMDHAPAccessory sendTargetControlWhoAmIWithIdentifier:]
  -[HMDHAPAccessory _stopScan]
  -[HMDHAPAccessory scanningCompleteWithAccessoryFound:suspended:]
  -[HMDHAPAccessory connectivityInfo]
  -[HMDHAPAccessory pendingReads]
  -[HMDHAPAccessory setPendingReads:]
  -[HMDHAPAccessory initializeBTLEScan]
  -[HMDHAPAccessory initiateScan:]
  -[HMDHAPAccessory broadcastKey]
  -[HMDHAPAccessory keyUpdatedTime]
  -[HMDHAPAccessory keyUpdatedStateNumber]
  -[HMDHAPAccessory _updateBridge:]
  -[HMDHAPAccessory updateTransportInformation:]
  -[HMDHAPAccessory wiFiTransportCapabilities]
  -[HMDHAPAccessory targetUUIDs]
  -[HMDHAPAccessory hardwareSupport]
  -[HMDHAPAccessory initialServiceTypeUUIDs]
  -[HMDHAPAccessory _setWakeType]
  -[HMDHAPAccessory wirelessResumeInit]
  -[HMDHAPAccessory _handleCharacteristicWrite:]
  -[HMDHAPAccessory _handleCharacteristicRead:]
  -[HMDHAPAccessory _handleRenameService:]
  -[HMDHAPAccessory _handleUpdateAuthorizationData:]
  -[HMDHAPAccessory _handleConfigureTargets:]
  -[HMDHAPAccessory _handleUpdateMediaSourceDisplayOrder:]
  -[HMDHAPAccessory handleSetHasOnboardedForNaturalLighting:]
  -[HMDHAPAccessory handleCharacteristicsChangedNotification:]
  -[HMDHAPAccessory handleRoomChanged:]
  -[HMDHAPAccessory handleRoomNameChanged:]
  -[HMDHAPAccessory handleConnectedChanged:]
  -[HMDHAPAccessory _handleUpdatedServicesForProfilesAndControllers:]
  -[HMDHAPAccessory _configureTargetControllerWithCompletion:]
  -[HMDHAPAccessory _checkResidentDeviceForReachabilityPing]
  -[HMDHAPAccessory _checkRegisterForServerNotification]
  -[HMDHAPAccessory handleResidentDeviceUpdated:]
  -[HMDHAPAccessory handlePrimaryResidentUpdateNotification:]
  -[HMDHAPAccessory updateAccessoryFlags:]
  -[HMDHAPAccessory setBroadcastKey:]
  -[HMDHAPAccessory setKeyUpdatedStateNumber:]
  -[HMDHAPAccessory setKeyUpdatedTime:]
  -[HMDHAPAccessory accessoryKeyRefreshTimer]
  -[HMDHAPAccessory shouldConfigureTargetController]
  -[HMDHAPAccessory _getSymptomHandler]
  -[HMDHAPAccessory evaluateSymptomHandler]
  -[HMDHAPAccessory _saveHardwareSupport:]
  -[HMDHAPAccessory setHardwareSupport:]
  -[HMDHAPAccessory _saveTargetUUIDs:]
  -[HMDHAPAccessory setTargetUUIDs:]
  -[HMDHAPAccessory targetControllerManager]
  -[HMDHAPAccessory _renameService:name:message:completionBlock:]
  -[HMDHAPAccessory _messagesForUpdatedRoom:]
  -[HMDHAPAccessory _handleRoomChangedFromOldRoomName:]
  -[HMDHAPAccessory _currentTimeCharacteristic]
  -[HMDHAPAccessory _setCurrentTimeCharacteristic:]
  -[HMDHAPAccessory hmdCharacteristicFromHapCharacteristic:]
  -[HMDHAPAccessory _dayOfTheWeekCharacteristic]
  -[HMDHAPAccessory _setDayOfTheWeekCharacteristic:]
  -[HMDHAPAccessory _timeUpdateCharacteristic]
  -[HMDHAPAccessory _setTimeUpdateCharacteristic:]
  -[HMDHAPAccessory _timeInformationServiceExists]
  -[HMDHAPAccessory _setTimeInformationServiceExists:]
  -[HMDHAPAccessory _setSystemTimeNeedsUpdate:]
  -[HMDHAPAccessory _startWriteTimeInformationTimer]
  -[HMDHAPAccessory _stopWriteTimeInformationTimer]
  -[HMDHAPAccessory getOrCreateServiceUpdateTransactionForKey:fromDictionary:]
  -[HMDHAPAccessory __handleCharacteristicsChangedPayload:]
  -[HMDHAPAccessory timeInformationTimer]
  -[HMDHAPAccessory setTimeInformationTimer:]
  -[HMDHAPAccessory systemTimeInformationTimer]
  -[HMDHAPAccessory setSystemTimeInformationTimer:]
  -[HMDHAPAccessory systemTimeNeedsUpdate]
  -[HMDHAPAccessory _writeTimeInformationCharacteristicsForAccessory]
  -[HMDHAPAccessory _stopSystemTimeWriteTimeInformationTimer]
  -[HMDHAPAccessory _readAndWriteTimeInformationCharacteristic:]
  -[HMDHAPAccessory accessoryDiscoveryBackoffTimer]
  -[HMDHAPAccessory _handleDiscoveryBackoffTimerFired]
  -[HMDHAPAccessory _handleKeyRefreshTimerFired]
  -[HMDHAPAccessory _readCharacteristicValues:localOperationRequired:source:message:queue:completionHandler:errorBlock:]
  -[HMDHAPAccessory _readandWriteToCurrentTime:errorBlock:]
  -[HMDHAPAccessory _writeCharacteristicValues:localOperationRequired:source:queue:completionHandler:errorBlock:]
  -[HMDHAPAccessory setTimeUpdateCharacteristic:]
  -[HMDHAPAccessory setCurrentTimeCharacteristic:]
  -[HMDHAPAccessory setDayOfTheWeekCharacteristic:]
  -[HMDHAPAccessory deRegisterForTimeMonitor]
  -[HMDHAPAccessory registerForTimeMonitor]
  -[HMDHAPAccessory timeInformationServiceExists]
  -[HMDHAPAccessory setTimeInformationServiceExists:]
  -[HMDHAPAccessory _startSystemTimeWriteTimeInformationTimer]
  -[HMDHAPAccessory updateTimeInformationCharacteristicsForAccessory:]
  -[HMDHAPAccessory _deRegisterForTimeMonitor]
  -[HMDHAPAccessory _registerForTimeMonitor]
  -[HMDHAPAccessory findCharacteristicType:forServiceType:]
  -[HMDHAPAccessory _performOperation:linkType:operationBlock:errorBlock:]
  -[HMDHAPAccessory transportInformationInstances]
  -[HMDHAPAccessory isSecuritySessionOpen]
  -[HMDHAPAccessory _handleUpdatedServicesForDataStreamController:]
  -[HMDHAPAccessory _handleUpdatedServicesForCameraProfiles:]
  -[HMDHAPAccessory _handleUpdatedServicesForNetworkRouterProfileAndController:]
  -[HMDHAPAccessory _handleUpdatedServicesForMediaProfile:]
  -[HMDHAPAccessory _handleUpdatedServicesForLightProfiles:]
  -[HMDHAPAccessory _handleUpdatedServicesForDoorbellController]
  -[HMDHAPAccessory _addService:]
  -[HMDHAPAccessory primaryService]
  -[HMDHAPAccessory _serviceSupportsMinimumUserPrivilege:]
  -[HMDHAPAccessory _reconcileAccessControlSetting]
  -[HMDHAPAccessory registerForActiveIdentifierNotifications]
  -[HMDHAPAccessory setTargetControllerManager:]
  -[HMDHAPAccessory _autoConfigureTargetController]
  -[HMDHAPAccessory acknowledgeTargetControlService:active:]
  -[HMDHAPAccessory updateButtonConfigurationForTarget:]
  -[HMDHAPAccessory addTransportInformationInstances:]
  -[HMDHAPAccessory resetNotificationEnabledTime]
  -[HMDHAPAccessory _setRelayEnabled:]
  -[HMDHAPAccessory relayAccessory]
  -[HMDHAPAccessory setRelayEnabled:]
  -[HMDHAPAccessory _currentRelayAccessoryState]
  -[HMDHAPAccessory activationAttempts]
  -[HMDHAPAccessory startRelayActivationWithActivationClient:]
  -[HMDHAPAccessory setActivationAttempts:]
  -[HMDHAPAccessory _setCurrentRelayAccessoryState:]
  -[HMDHAPAccessory pairingAttempts]
  -[HMDHAPAccessory startRelayPairingWithPairingClient:]
  -[HMDHAPAccessory setPairingAttempts:]
  -[HMDHAPAccessory _removeHAPAccessoryWithServerIdentifier:linkType:completion:completionQueue:]
  -[HMDHAPAccessory removeTransportInformationInstance:]
  -[HMDHAPAccessory matchingTransportInformation:]
  -[HMDHAPAccessory _updateRelayEnabled:notifyRelayManager:]
  -[HMDHAPAccessory _enableNotification:matchingHAPAccessory:ignoreDeviceUnlockRequirement:clientIdentifier:forCharacteristics:]
  -[HMDHAPAccessory _addHAPAccessory:]
  -[HMDHAPAccessory _updateAccessoryTracking]
  -[HMDHAPAccessory cleanupNotificationCenterObservers]
  -[HMDHAPAccessory unregisterFromAccessoryServer]
  -[HMDHAPAccessory cancelPowerOn]
  -[HMDHAPAccessory matchingTransportInformationWithServerIdentifier:linkType:]
  -[HMDHAPAccessory matchingTransportInformationWithServerIdentifier:]
  -[HMDHAPAccessory _getResponseTuple:error:source:suspended:]
  -[HMDHAPAccessory isPoweringOn]
  -[HMDHAPAccessory _writeCharacteristicValues:localOperationRequired:source:message:queue:completionHandler:errorBlock:]
  -[HMDHAPAccessory wirelessPowerOn:]
  -[HMDHAPAccessory _writeCharacteristicValues:hapAccessory:source:message:queue:completionHandler:]
  -[HMDHAPAccessory _evaluateLocalOperation:state:completion:]
  -[HMDHAPAccessory getFullError:source:suspended:]
  -[HMDHAPAccessory autoUpdateCachedCountDownCharacteristics:]
  -[HMDHAPAccessory _readCharacteristicValues:hapAccessory:source:message:queue:completionHandler:]
  -[HMDHAPAccessory saveBluetoothAddress:]
  -[HMDHAPAccessory cameraProfileNotificationSettingsFromCoder:]
  -[HMDHAPAccessory getBluetoothAddress]
  -[HMDHAPAccessory encodeCameraProfileNotificationSettingsWithCoder:]
  -[HMDHAPAccessory hapCharacteristicWriteRequests:hapAccessory:hmdResponses:mapping:]
  -[HMDHAPAccessory populateHMDCharacteristicResponses:hapResponses:mapping:overallError:requests:]
  -[HMDHAPAccessory notifyValue:previousValue:error:forCharacteristic:requestMessage:]
  -[HMDHAPAccessory _relayReadFromCharacteristic:toResidentForMessage:viaDevice:]
  -[HMDHAPAccessory _relayWriteToCharacteristic:toResidentForMessage:viaDevice:]
  -[HMDHAPAccessory _writeValue:forCharacteristic:hapAccessory:authorizationData:message:]
  -[HMDHAPAccessory _handleCharacteristicError:read:characteristic:didRelayMessage:]
  -[HMDHAPAccessory submitCharacteristicWriteErrorLogEvent:startDate:message:error:]
  -[HMDHAPAccessory _prepareMessagePayloadForCharacteristicRemoteWrite:]
  -[HMDHAPAccessory _parseResponseFromRemotePeer:message:forCharacteristic:]
  -[HMDHAPAccessory __updateNotifyingCharacteristicStateNumber:]
  -[HMDHAPAccessory _readValueForCharacteristic:hapAccessory:requestMessage:]
  -[HMDHAPAccessory submitCharacteristicReadErrorLogEvent:message:error:]
  -[HMDHAPAccessory _notifyNotificationChangesForCharacteristics:errors:enableNotification:message:]
  -[HMDHAPAccessory _disableNotificationsForBundleID:completionHandler:]
  -[HMDHAPAccessory _enableBroadcastNotifications:hapAccessory:forCharacteristics:]
  -[HMDHAPAccessory _notifyCharacteristicNotificationChanges:enableNotification:message:clientIdentifier:]
  -[HMDHAPAccessory isNotificationEnabledForClientIdentifier:]
  -[HMDHAPAccessory _enableNotification:forCharacteristics:message:clientIdentifier:]
  -[HMDHAPAccessory _enableNotification:forCharacteristics:hapAccessory:completion:]
  -[HMDHAPAccessory _enableNotificationOnResident:characteristic:clientIdentifier:ignoreDeviceUnlockRequirement:]
  -[HMDHAPAccessory keyGenerationType]
  -[HMDHAPAccessory setKeyGenerationType:]
  -[HMDHAPAccessory keyGenerationInProgress]
  -[HMDHAPAccessory setKeyGenerationInProgress:]
  -[HMDHAPAccessory _updateBroadcastKey:keyUpdatedStateNumber:keyUpdatedTime:]
  -[HMDHAPAccessory _doPrimaryResidentUpdated]
  -[HMDHAPAccessory _reenableNotificationsOnWatch]
  -[HMDHAPAccessory _shouldTrackAccessoryWithPriority:]
  -[HMDHAPAccessory _containsSecureCharacteristic]
  -[HMDHAPAccessory _updateStateForTrackedAccessory:stateNumber:]
  -[HMDHAPAccessory hasBLELinkConnected]
  -[HMDHAPAccessory getHAPAccessoryMatchingInstanceId]
  -[HMDHAPAccessory _doReachabilityUpdateForServer:]
  -[HMDHAPAccessory backedOffStateNumber]
  -[HMDHAPAccessory setAccessoryDiscoveryBackoffTimer:]
  -[HMDHAPAccessory setBackedOffStateNumber:]
  -[HMDHAPAccessory associateWithAccessoryAdvertisement:]
  -[HMDHAPAccessory _handleMultipleCharacteristicsUpdated:message:completionQueue:completionHandler:]
  -[HMDHAPAccessory _removeBackedoffAccessoryForStateNumber:]
  -[HMDHAPAccessory setRelayIdentifier:]
  -[HMDHAPAccessory requestResource:queue:completionHandler:]
  -[HMDHAPAccessory _handleAddServiceTransaction:message:]
  -[HMDHAPAccessory addTransportInformationInstance:]
  -[HMDHAPAccessory _handleServiceRemovedTransaction:message:]
  -[HMDHAPAccessory addBridgedAccessory:]
  -[HMDHAPAccessory currentRelayAccessoryState]
  -[HMDHAPAccessory setWiFiTransportCapabilities:]
  -[HMDHAPAccessory getTransportInformationArray]
  -[HMDHAPAccessory writeValue:toCharacteristic:queue:completion:]
  -[HMDHAPAccessory matchingHAPAccessoryWithServerIdentifier:]
  -[HMDHAPAccessory makeServiceNameConsistent:withName:completionHandler:]
  -[HMDHAPAccessory createUpdateServiceTransationWithServiceUUID:]
  -[HMDHAPAccessory backingStoreTransactionWithName:]
  -[HMDHAPAccessory accessoryDidBecomeReachable:]
  -[HMDHAPAccessory accessoryDidBecomeUnreachable:]
  -[HMDHAPAccessory accessory:didUpdateRelayEnabled:]
  -[HMDHAPAccessory accessory:didUpdateRelayState:]
  -[HMDHAPAccessory accessory:didActivateRelayWithError:]
  -[HMDHAPAccessory accessory:didPairRelayWithError:]
  -[HMDHAPAccessory accessory:didUpdateAccessoryIdentifier:]
  -[HMDHAPAccessory accessory:didUpdateAccessoryAccessToken:]
  -[HMDHAPAccessory timeInformationMonitorDidChangeTime]
  -[HMDHAPAccessory setBroadcastKey:keyUpdatedStateNumber:keyUpdatedTime:]
  -[HMDHAPAccessory setConnectivityInfo:]
  -[HMDHAPAccessory saveHardwareSupport:]
  -[HMDHAPAccessory saveTargetUUIDs:]
  -[HMDHAPAccessory updateTargetUUIDs:]
  -[HMDHAPAccessory currentTimeCharacteristic]
  -[HMDHAPAccessory dayOfTheWeekCharacteristic]
  -[HMDHAPAccessory timeUpdateCharacteristic]
  -[HMDHAPAccessory setSystemTimeNeedsUpdate:]
  -[HMDHAPAccessory isReadingRequiredForBTLEAccessoryCharacteristic:forceReadFWVersion:]
  -[HMDHAPAccessory updateAccessoryInformationWithCharacteristicType:value:accessoryTransaction:]
  -[HMDHAPAccessory updateAccessoryFlagsAndNotifyClients:]
  -[HMDHAPAccessory handlePairedStateChange:]
  -[HMDHAPAccessory setPairingUsername:publicKey:]
  -[HMDHAPAccessory verifyPairingWithCompletionHandler:]
  -[HMDHAPAccessory serviceTypeUUIDs]
  -[HMDHAPAccessory setInitialServiceTypeUUIDs:]
  -[HMDHAPAccessory _updatePrimaryServiceIfNeededWithService:]
  -[HMDHAPAccessory addTarget:buttonConfiguration:]
  -[HMDHAPAccessory updateTarget:name:buttonConfiguration:]
  -[HMDHAPAccessory targetControllerButtonConfiguration]
  -[HMDHAPAccessory targetControllerTicksPerSecond]
  -[HMDHAPAccessory notifyClientsOfTargetControlSupportUpdate]
  -[HMDHAPAccessory networkRouterController]
  -[HMDHAPAccessory setNetworkRouterController:]
  -[HMDHAPAccessory _setSupportsRelay:]
  -[HMDHAPAccessory _setRelayIdentifier:]
  -[HMDHAPAccessory addRelayUser:accessToken:queue:completionHandler:]
  -[HMDHAPAccessory removeRelayUser:queue:completionHandler:]
  -[HMDHAPAccessory configureService:]
  -[HMDHAPAccessory performOperation:linkType:operationBlock:errorBlock:]
  -[HMDHAPAccessory writeCharacteristicValues:localOperationRequired:source:queue:completionHandler:errorBlock:]
  -[HMDHAPAccessory cameraProfileNotificationSettings]
  -[HMDHAPAccessory setCameraProfileNotificationSettings:]
  -[HMDHAPAccessory getLinkQualityWithCompletion:]
  -[HMDHAPAccessory findCharacteristicsByType:forServiceType:]
  -[HMDHAPAccessory findCharacteristicsByTypes:forServiceType:]
  -[HMDHAPAccessory accessoryAdvertisement]
  -[HMDHAPAccessory doorbellChimeController]
  -[HMDHAPAccessory setDoorbellChimeController:]
  -[HMDHAPAccessory cameraClipCloudZoneUUIDForRecordingService:]
  -[HMDHAPAccessory pendingPowerOn]
  -[HMDHAPAccessory setPendingPowerOn:]
  -[HMDHAPAccessory powerOnCompletionRoutines]
  -[HMDHAPAccessory setPowerOnCompletionRoutines:]
  -[HMDHAPAccessory setAccessoryAdvertisement:]
  -[HMDHAPAccessory setAccessoryKeyRefreshTimer:]
  -[HMDHAPAccessory setDataStreamController:]
  -[HMDHAPAccessory __createNetworkRouterController:]
  -[HMDHAPAccessory postNetworkRouterProfileNotification:object:]
  -[HMDHAPAccessory __createNetworkRouterProfileAndController:]
  -[HMDHAPAccessory __createSatelliteNetworkRouterProfile:]
  -[HMDHAPAccessory networkRouterSatelliteProfile]
  -[HMDHAPAccessory __removeNetworkRouterController]
  -[HMDHAPAccessory canAcceptBulkSendListenersSync]
  -[HMDHAPAccessory hasAnyServiceWithTypes:]
  -[HMDHAPAccessory updateCameraProfileNotificationSettings:]
  -[HMDHAPAccessory getSupportedSiriAudioConfiguration:]
  -[HMDHAPAccessory setSelectedSiriAudioConfiguration:]
  -[HMDHAPAccessory _resolveSupportedSiriInputType:]
  -[HMDHAPAccessory _resolveAudioAbility:]
  -[HMDHAPAccessory _updateSiriAudioFormat:]
  -[HMDHAPAccessory dataStreamSocketController]
  -[HMDHAPAccessory _wirelessPowerOn:]
  -[HMDHAPAccessory _cancelPowerOn]


HMDHAPAccessoryTransaction : HMDAccessoryTransaction
 @property  NSString *uniqueIdentifier
 @property  NSString *bridgeUUID
 @property  NSNumber *supportsRelay
 @property  NSNumber *accessoryFlags
 @property  NSNumber *certificationStatus
 @property  NSData *broadcastKey
 @property  NSNumber *keyUpdatedStateNumber
 @property  NSDate *keyUpdatedTime
 @property  NSString *pairingUsername
 @property  NSData *publicKey
 @property  NSNumber *relayState
 @property  NSString *relayIdentifier
 @property  NSData *relayAccessToken
 @property  NSArray *transportInformation
 @property  NSData *accessorySetupHash
 @property  NSNumber *wiFiTransportCapabilities
 @property  NSArray *targetUUIDs
 @property  NSNumber *hardwareSupport
 @property  HMFConnectivityInfo *connectivityInfo
 @property  HAPAccessory *hapAccessoryLocal
 @property  NSNumber *sleepInterval
 @property  NSNumber *hasOnboardedForNaturalLighting
 @property  NSSet *initialServiceTypeUUIDs

  // class methods
  +[HMDHAPAccessoryTransaction properties]

  // instance methods
  -[HMDHAPAccessoryTransaction .cxx_destruct]
  -[HMDHAPAccessoryTransaction dependentUUIDs]
  -[HMDHAPAccessoryTransaction setHapAccessoryLocal:]
  -[HMDHAPAccessoryTransaction hapAccessoryLocal]


HMDWiFiManagementController : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSNotificationCenter *notificationCenter
 @property  long long reconfigurationState
 @property  unsigned short reconfigurationCookie
 @property  HMFTimer *reconfigurationTimeoutTimer
 @property  @? reconfigurationVerificationCallback
 @property  @? reconfigurationCompletion
 @property  HMDWiFiReconfigurationLogEvent *reconfigurationLogEvent
 @property  HMDHAPAccessory *accessory
 @property  HMDService *service
 @property  BOOL supportsStationConfiguration
 @property  long long capabilities
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDWiFiManagementController logCategory]
  +[HMDWiFiManagementController sharedPSKForNetworkWithSSID:]

  // instance methods
  -[HMDWiFiManagementController notificationCenter]
  -[HMDWiFiManagementController timerDidFire:]
  -[HMDWiFiManagementController logIdentifier]
  -[HMDWiFiManagementController .cxx_destruct]
  -[HMDWiFiManagementController workQueue]
  -[HMDWiFiManagementController capabilities]
  -[HMDWiFiManagementController service]
  -[HMDWiFiManagementController accessory]
  -[HMDWiFiManagementController initWithAccessory:wiFiTransportService:workQueue:]
  -[HMDWiFiManagementController supportsStationConfiguration]
  -[HMDWiFiManagementController reconfigurationState]
  -[HMDWiFiManagementController setReconfigurationState:]
  -[HMDWiFiManagementController _performWiFiConfigurationControlRequest:withDescription:completion:]
  -[HMDWiFiManagementController setReconfigurationVerificationCallback:]
  -[HMDWiFiManagementController setReconfigurationCompletion:]
  -[HMDWiFiManagementController setReconfigurationLogEvent:]
  -[HMDWiFiManagementController _reconfigurationCompletedWithSuccess:error:]
  -[HMDWiFiManagementController setReconfigurationCookie:]
  -[HMDWiFiManagementController reconfigurationCookie]
  -[HMDWiFiManagementController _accessoryDidBecomeReachable:]
  -[HMDWiFiManagementController setReconfigurationTimeoutTimer:]
  -[HMDWiFiManagementController reconfigurationTimeoutTimer]
  -[HMDWiFiManagementController reconfigurationVerificationCallback]
  -[HMDWiFiManagementController _commitConfigurationUpdate]
  -[HMDWiFiManagementController reconfigurationLogEvent]
  -[HMDWiFiManagementController reconfigurationCompletion]
  -[HMDWiFiManagementController reconfigureWithSSID:PSK:logEvent:completion:]
  -[HMDWiFiManagementController safelyReconfigureWithSSID:PSK:verificationCallback:logEvent:completion:]


HMDAccessoryTransportInformation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  HAPAccessory *hapAccessory
 @property  NSString *serverIdentifier
 @property  NSString *protocolVersion
 @property  NSNumber *instanceID
 @property  long long linkType
 @property  BOOL reachable

  // class methods
  +[HMDAccessoryTransportInformation supportsSecureCoding]

  // instance methods
  -[HMDAccessoryTransportInformation setServerIdentifier:]
  -[HMDAccessoryTransportInformation instanceID]
  -[HMDAccessoryTransportInformation linkType]
  -[HMDAccessoryTransportInformation protocolVersion]
  -[HMDAccessoryTransportInformation setProtocolVersion:]
  -[HMDAccessoryTransportInformation setInstanceID:]
  -[HMDAccessoryTransportInformation .cxx_destruct]
  -[HMDAccessoryTransportInformation setReachable:]
  -[HMDAccessoryTransportInformation encodeWithCoder:]
  -[HMDAccessoryTransportInformation setLinkType:]
  -[HMDAccessoryTransportInformation serverIdentifier]
  -[HMDAccessoryTransportInformation initWithCoder:]
  -[HMDAccessoryTransportInformation reachable]
  -[HMDAccessoryTransportInformation hapAccessory]
  -[HMDAccessoryTransportInformation setHapAccessory:]
  -[HMDAccessoryTransportInformation initWithServerIdentifier:instanceID:linkType:reachable:]
  -[HMDAccessoryTransportInformation initWithHAPAccessory:]


HMDActionModel : HMDBackingStoreModelObject
  // class methods
  +[HMDActionModel properties]

  // instance methods
  -[HMDActionModel loadModelWithActionInformation:]


HMDAccountHandleResolveOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, IDSServiceDelegate>
 @property  IDSService *service
 @property  HMDIDSMessageContext *messageContext
 @property  NSMutableArray *resolveBlocks
 @property  HMDAccountHandle *handle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccountHandleResolveOperation timeout]
  +[HMDAccountHandleResolveOperation logCategory]

  // instance methods
  -[HMDAccountHandleResolveOperation service:account:incomingMessage:fromID:context:]
  -[HMDAccountHandleResolveOperation init]
  -[HMDAccountHandleResolveOperation main]
  -[HMDAccountHandleResolveOperation messageContext]
  -[HMDAccountHandleResolveOperation setMessageContext:]
  -[HMDAccountHandleResolveOperation .cxx_destruct]
  -[HMDAccountHandleResolveOperation initWithHandle:]
  -[HMDAccountHandleResolveOperation service:account:identifier:didSendWithSuccess:error:context:]
  -[HMDAccountHandleResolveOperation handle]
  -[HMDAccountHandleResolveOperation service]
  -[HMDAccountHandleResolveOperation initWithTimeout:]
  -[HMDAccountHandleResolveOperation resolveBlocks]
  -[HMDAccountHandleResolveOperation addResolveBlock:]


HMDCameraVideoParameterCombination : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDH264Profile *profile
 @property  HMDH264Level *level
 @property  HMDCameraVideoTier *videoTier

  // instance methods
  -[HMDCameraVideoParameterCombination level]
  -[HMDCameraVideoParameterCombination .cxx_destruct]
  -[HMDCameraVideoParameterCombination isEqual:]
  -[HMDCameraVideoParameterCombination profile]
  -[HMDCameraVideoParameterCombination videoTier]
  -[HMDCameraVideoParameterCombination initWithProfile:level:videoTier:]


HMDNetworkRouterFirewallRuleAccessoryIdentifier : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying>
 @property  NSString *cloudKitZoneName
 @property  NSString *cloudKitRecordName
 @property  NSString *productGroup
 @property  NSString *productNumber
 @property  HMFVersion *firmwareVersion

  // class methods
  +[HMDNetworkRouterFirewallRuleAccessoryIdentifier createWithProductData:firmwareVersion:]
  +[HMDNetworkRouterFirewallRuleAccessoryIdentifier identifierFromRecordID:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier copyWithZone:]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier firmwareVersion]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier productNumber]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier isEqual:]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier cloudKitRecordID]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier initWithProductGroup:productNumber:firmwareVersion:]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier cloudKitZoneName]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier cloudKitRecordName]
  -[HMDNetworkRouterFirewallRuleAccessoryIdentifier productGroup]


HMDRemoteLoginReceiverCompanionAuthentication : HMDRemoteLoginReceiverAuthentication
 @property  HMDRemoteLoginCompanionAuthenticationRequest *request

  // class methods
  +[HMDRemoteLoginReceiverCompanionAuthentication logCategory]

  // instance methods
  -[HMDRemoteLoginReceiverCompanionAuthentication dealloc]
  -[HMDRemoteLoginReceiverCompanionAuthentication .cxx_destruct]
  -[HMDRemoteLoginReceiverCompanionAuthentication request]
  -[HMDRemoteLoginReceiverCompanionAuthentication _authenticate]
  -[HMDRemoteLoginReceiverCompanionAuthentication authenticate]
  -[HMDRemoteLoginReceiverCompanionAuthentication _authenticateAccount:alreadyExists:withCompanionDevice:]
  -[HMDRemoteLoginReceiverCompanionAuthentication initWithSessionID:remoteDevice:workQueue:remoteMessageSender:delegate:request:]


HMDHomeAIPhotosPersonDataReceiver : HMDHomeAIPersonDataReceiver <HMFLogging, HMIExternalPersonManagerDataSource>
 @property  HMIExternalPersonManager *photosPersonManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeAIPhotosPersonDataReceiver logCategory]

  // instance methods
  -[HMDHomeAIPhotosPersonDataReceiver logIdentifier]
  -[HMDHomeAIPhotosPersonDataReceiver fetchSettingsWithCompletion:]
  -[HMDHomeAIPhotosPersonDataReceiver photosPersonManager]
  -[HMDHomeAIPhotosPersonDataReceiver .cxx_destruct]
  -[HMDHomeAIPhotosPersonDataReceiver handleUpdatedSettings:mirrorOutputFuture:]
  -[HMDHomeAIPhotosPersonDataReceiver initWithPersonManagerUUID:homeUUID:workQueue:]
  -[HMDHomeAIPhotosPersonDataReceiver initWithPhotosPersonManager:workQueue:]


HMDAssistantAccessControlModifiedEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isEnabled
 @property  unsigned long options
 @property  unsigned long numEnabledAccessories
 @property  unsigned long numCapableAccessories

  // class methods
  +[HMDAssistantAccessControlModifiedEvent initialize]
  +[HMDAssistantAccessControlModifiedEvent uuid]
  +[HMDAssistantAccessControlModifiedEvent eventWithIsEnabled:options:numEnabledAccessories:numCapableAccessories:]

  // instance methods
  -[HMDAssistantAccessControlModifiedEvent setIsEnabled:]
  -[HMDAssistantAccessControlModifiedEvent options]
  -[HMDAssistantAccessControlModifiedEvent setOptions:]
  -[HMDAssistantAccessControlModifiedEvent isEnabled]
  -[HMDAssistantAccessControlModifiedEvent AWDMessageType]
  -[HMDAssistantAccessControlModifiedEvent metricForAWD]
  -[HMDAssistantAccessControlModifiedEvent setNumEnabledAccessories:]
  -[HMDAssistantAccessControlModifiedEvent setNumCapableAccessories:]
  -[HMDAssistantAccessControlModifiedEvent numEnabledAccessories]
  -[HMDAssistantAccessControlModifiedEvent numCapableAccessories]


AWDHomeKitConfigurationData : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDatabaseSize
 @property  unsigned int databaseSize
 @property  BOOL hasMetadataVersion
 @property  unsigned int metadataVersion
 @property  BOOL hasIsResidentCapable
 @property  BOOL isResidentCapable
 @property  BOOL hasIsResidentEnabled
 @property  BOOL isResidentEnabled
 @property  NSMutableArray *homeConfigurations
 @property  BOOL hasIsDemoConfiguration
 @property  BOOL isDemoConfiguration
 @property  BOOL hasHasWatchDevice
 @property  BOOL hasWatchDevice
 @property  BOOL hasHasActiveWatchDevice
 @property  BOOL hasActiveWatchDevice

  // class methods
  +[AWDHomeKitConfigurationData homeConfigurationsType]

  // instance methods
  -[AWDHomeKitConfigurationData copyWithZone:]
  -[AWDHomeKitConfigurationData .cxx_destruct]
  -[AWDHomeKitConfigurationData timestamp]
  -[AWDHomeKitConfigurationData setTimestamp:]
  -[AWDHomeKitConfigurationData hasMetadataVersion]
  -[AWDHomeKitConfigurationData setHasTimestamp:]
  -[AWDHomeKitConfigurationData readFrom:]
  -[AWDHomeKitConfigurationData writeTo:]
  -[AWDHomeKitConfigurationData isEqual:]
  -[AWDHomeKitConfigurationData copyTo:]
  -[AWDHomeKitConfigurationData dictionaryRepresentation]
  -[AWDHomeKitConfigurationData mergeFrom:]
  -[AWDHomeKitConfigurationData databaseSize]
  -[AWDHomeKitConfigurationData hasTimestamp]
  -[AWDHomeKitConfigurationData setMetadataVersion:]
  -[AWDHomeKitConfigurationData metadataVersion]
  -[AWDHomeKitConfigurationData isResidentCapable]
  -[AWDHomeKitConfigurationData homeConfigurations]
  -[AWDHomeKitConfigurationData addHomeConfigurations:]
  -[AWDHomeKitConfigurationData homeConfigurationsCount]
  -[AWDHomeKitConfigurationData clearHomeConfigurations]
  -[AWDHomeKitConfigurationData homeConfigurationsAtIndex:]
  -[AWDHomeKitConfigurationData setDatabaseSize:]
  -[AWDHomeKitConfigurationData setHasDatabaseSize:]
  -[AWDHomeKitConfigurationData hasDatabaseSize]
  -[AWDHomeKitConfigurationData setHasMetadataVersion:]
  -[AWDHomeKitConfigurationData setIsResidentCapable:]
  -[AWDHomeKitConfigurationData setHasIsResidentCapable:]
  -[AWDHomeKitConfigurationData hasIsResidentCapable]
  -[AWDHomeKitConfigurationData setIsResidentEnabled:]
  -[AWDHomeKitConfigurationData setHasIsResidentEnabled:]
  -[AWDHomeKitConfigurationData hasIsResidentEnabled]
  -[AWDHomeKitConfigurationData setIsDemoConfiguration:]
  -[AWDHomeKitConfigurationData setHasIsDemoConfiguration:]
  -[AWDHomeKitConfigurationData hasIsDemoConfiguration]
  -[AWDHomeKitConfigurationData setHasWatchDevice:]
  -[AWDHomeKitConfigurationData setHasHasWatchDevice:]
  -[AWDHomeKitConfigurationData hasHasWatchDevice]
  -[AWDHomeKitConfigurationData setHasActiveWatchDevice:]
  -[AWDHomeKitConfigurationData setHasHasActiveWatchDevice:]
  -[AWDHomeKitConfigurationData hasHasActiveWatchDevice]
  -[AWDHomeKitConfigurationData isResidentEnabled]
  -[AWDHomeKitConfigurationData setHomeConfigurations:]
  -[AWDHomeKitConfigurationData isDemoConfiguration]
  -[AWDHomeKitConfigurationData hasWatchDevice]
  -[AWDHomeKitConfigurationData hasActiveWatchDevice]


HMDPowerManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL networkAccessRequired

  // instance methods
  -[HMDPowerManager init]
  -[HMDPowerManager dealloc]
  -[HMDPowerManager .cxx_destruct]
  -[HMDPowerManager stop]
  -[HMDPowerManager _update]
  -[HMDPowerManager start]
  -[HMDPowerManager _ensureNetworkInterfaceMonitorStarted]
  -[HMDPowerManager _ensureNetworkInterfaceMonitorStopped]
  -[HMDPowerManager setNetworkAccessRequired:]
  -[HMDPowerManager isNetworkAccessRequired]


HMDRelayPairingClient : HAPRelayPairingClient /System/Library/Frameworks/CoreImage.framework/CoreImage <HMDRelayManagerDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDRelayManager *relayManager
 @property  HMDAccessory *accessory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRelayPairingClient logCategory]
  +[HMDRelayPairingClient accessoryBagURL]

  // instance methods
  -[HMDRelayPairingClient logIdentifier]
  -[HMDRelayPairingClient .cxx_destruct]
  -[HMDRelayPairingClient close]
  -[HMDRelayPairingClient clientQueue]
  -[HMDRelayPairingClient open]
  -[HMDRelayPairingClient accessory]
  -[HMDRelayPairingClient _closeWithError:]
  -[HMDRelayPairingClient relayManager]
  -[HMDRelayPairingClient relayManager:didUpdateControllerIdentifier:]
  -[HMDRelayPairingClient accessoryBagURL]
  -[HMDRelayPairingClient initWithRelayManager:accessory:]
  -[HMDRelayPairingClient requestControllerIdentifier]
  -[HMDRelayPairingClient requestAccessTokenForAccessoryIdentifier:pairingToken:]


HMDSettingConstraintModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore <HMDSettingConstraintModelProtocol>
 @property  NSNumber *type
 @property  NSNumber *numberValue
 @property  NSString *stringValue
 @property  NSData *dataValue
 @property  NSUUID *hmbModelID
 @property  NSUUID *hmbParentModelID
 @property  NSString *nameForKeyPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSettingConstraintModel hmbProperties]

  // instance methods
  -[HMDSettingConstraintModel copyWithNewParentModelID:]
  -[HMDSettingConstraintModel nameForKeyPath]


AWDHomeKitCameraStream : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasCertified
 @property  int certified
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasSessionID
 @property  NSString *sessionID
 @property  BOOL hasDuration
 @property  unsigned long duration
 @property  BOOL hasErrorCode
 @property  unsigned int errorCode
 @property  BOOL hasIsLocal
 @property  BOOL isLocal
 @property  BOOL hasInitialConfiguration
 @property  AWDHomeKitCameraStreamConfigure *initialConfiguration
 @property  NSMutableArray *reconfigurations
 @property  BOOL hasWatchIDSConnectionSetup
 @property  AWDHomeKitCameraStreamIDSConnSetup *watchIDSConnectionSetup
 @property  BOOL hasPhoneIDSConnectionSetup
 @property  AWDHomeKitCameraStreamIDSConnSetup *phoneIDSConnectionSetup
 @property  BOOL hasIdsSessionSetup
 @property  AWDHomeKitCameraIDSSessionSetup *idsSessionSetup
 @property  BOOL hasWatchMessaging
 @property  AWDHomeKitCameraStreamMessaging *watchMessaging
 @property  BOOL hasControllerMessaging
 @property  AWDHomeKitCameraStreamMessaging *controllerMessaging
 @property  BOOL hasResidentMessaging
 @property  AWDHomeKitCameraStreamMessaging *residentMessaging
 @property  BOOL hasReceivedFirstFrame
 @property  unsigned int receivedFirstFrame
 @property  BOOL hasUnderlyingErrorDomain
 @property  NSString *underlyingErrorDomain
 @property  BOOL hasUnderlyingErrorCode
 @property  unsigned int underlyingErrorCode
 @property  BOOL hasStartupDelay
 @property  unsigned long startupDelay
 @property  BOOL hasIsStreamStarted
 @property  BOOL isStreamStarted
 @property  BOOL hasResolutionOnClose
 @property  int resolutionOnClose
 @property  NSMutableArray *resolutionCounts

  // class methods
  +[AWDHomeKitCameraStream reconfigurationsType]
  +[AWDHomeKitCameraStream resolutionCountType]

  // instance methods
  -[AWDHomeKitCameraStream setErrorCode:]
  -[AWDHomeKitCameraStream hasSessionID]
  -[AWDHomeKitCameraStream copyWithZone:]
  -[AWDHomeKitCameraStream hasErrorCode]
  -[AWDHomeKitCameraStream setSessionID:]
  -[AWDHomeKitCameraStream sessionID]
  -[AWDHomeKitCameraStream errorCode]
  -[AWDHomeKitCameraStream setHasErrorCode:]
  -[AWDHomeKitCameraStream setUnderlyingErrorDomain:]
  -[AWDHomeKitCameraStream .cxx_destruct]
  -[AWDHomeKitCameraStream timestamp]
  -[AWDHomeKitCameraStream setTimestamp:]
  -[AWDHomeKitCameraStream setHasDuration:]
  -[AWDHomeKitCameraStream setHasTimestamp:]
  -[AWDHomeKitCameraStream readFrom:]
  -[AWDHomeKitCameraStream writeTo:]
  -[AWDHomeKitCameraStream isEqual:]
  -[AWDHomeKitCameraStream initialConfiguration]
  -[AWDHomeKitCameraStream setDuration:]
  -[AWDHomeKitCameraStream setInitialConfiguration:]
  -[AWDHomeKitCameraStream copyTo:]
  -[AWDHomeKitCameraStream dictionaryRepresentation]
  -[AWDHomeKitCameraStream hasUnderlyingErrorDomain]
  -[AWDHomeKitCameraStream setUnderlyingErrorCode:]
  -[AWDHomeKitCameraStream setHasUnderlyingErrorCode:]
  -[AWDHomeKitCameraStream hasUnderlyingErrorCode]
  -[AWDHomeKitCameraStream underlyingErrorDomain]
  -[AWDHomeKitCameraStream underlyingErrorCode]
  -[AWDHomeKitCameraStream isLocal]
  -[AWDHomeKitCameraStream hasDuration]
  -[AWDHomeKitCameraStream setIsLocal:]
  -[AWDHomeKitCameraStream mergeFrom:]
  -[AWDHomeKitCameraStream hasTimestamp]
  -[AWDHomeKitCameraStream duration]
  -[AWDHomeKitCameraStream setHasIsLocal:]
  -[AWDHomeKitCameraStream hasIsLocal]
  -[AWDHomeKitCameraStream hasReceivedFirstFrame]
  -[AWDHomeKitCameraStream setHasReceivedFirstFrame:]
  -[AWDHomeKitCameraStream vendorDetails]
  -[AWDHomeKitCameraStream setVendorDetails:]
  -[AWDHomeKitCameraStream hasVendorDetails]
  -[AWDHomeKitCameraStream certified]
  -[AWDHomeKitCameraStream setCertified:]
  -[AWDHomeKitCameraStream setHasCertified:]
  -[AWDHomeKitCameraStream hasCertified]
  -[AWDHomeKitCameraStream certifiedAsString:]
  -[AWDHomeKitCameraStream StringAsCertified:]
  -[AWDHomeKitCameraStream addResolutionCount:]
  -[AWDHomeKitCameraStream addReconfigurations:]
  -[AWDHomeKitCameraStream resolutionCountsCount]
  -[AWDHomeKitCameraStream clearResolutionCounts]
  -[AWDHomeKitCameraStream resolutionCountAtIndex:]
  -[AWDHomeKitCameraStream reconfigurationsCount]
  -[AWDHomeKitCameraStream clearReconfigurations]
  -[AWDHomeKitCameraStream reconfigurationsAtIndex:]
  -[AWDHomeKitCameraStream setWatchIDSConnectionSetup:]
  -[AWDHomeKitCameraStream setPhoneIDSConnectionSetup:]
  -[AWDHomeKitCameraStream setIdsSessionSetup:]
  -[AWDHomeKitCameraStream setWatchMessaging:]
  -[AWDHomeKitCameraStream setControllerMessaging:]
  -[AWDHomeKitCameraStream setResidentMessaging:]
  -[AWDHomeKitCameraStream hasInitialConfiguration]
  -[AWDHomeKitCameraStream hasWatchIDSConnectionSetup]
  -[AWDHomeKitCameraStream hasPhoneIDSConnectionSetup]
  -[AWDHomeKitCameraStream hasIdsSessionSetup]
  -[AWDHomeKitCameraStream hasWatchMessaging]
  -[AWDHomeKitCameraStream hasControllerMessaging]
  -[AWDHomeKitCameraStream hasResidentMessaging]
  -[AWDHomeKitCameraStream setReceivedFirstFrame:]
  -[AWDHomeKitCameraStream setStartupDelay:]
  -[AWDHomeKitCameraStream setHasStartupDelay:]
  -[AWDHomeKitCameraStream hasStartupDelay]
  -[AWDHomeKitCameraStream setIsStreamStarted:]
  -[AWDHomeKitCameraStream setHasIsStreamStarted:]
  -[AWDHomeKitCameraStream hasIsStreamStarted]
  -[AWDHomeKitCameraStream resolutionOnClose]
  -[AWDHomeKitCameraStream setResolutionOnClose:]
  -[AWDHomeKitCameraStream setHasResolutionOnClose:]
  -[AWDHomeKitCameraStream hasResolutionOnClose]
  -[AWDHomeKitCameraStream resolutionOnCloseAsString:]
  -[AWDHomeKitCameraStream StringAsResolutionOnClose:]
  -[AWDHomeKitCameraStream reconfigurations]
  -[AWDHomeKitCameraStream setReconfigurations:]
  -[AWDHomeKitCameraStream watchIDSConnectionSetup]
  -[AWDHomeKitCameraStream phoneIDSConnectionSetup]
  -[AWDHomeKitCameraStream idsSessionSetup]
  -[AWDHomeKitCameraStream watchMessaging]
  -[AWDHomeKitCameraStream controllerMessaging]
  -[AWDHomeKitCameraStream residentMessaging]
  -[AWDHomeKitCameraStream receivedFirstFrame]
  -[AWDHomeKitCameraStream startupDelay]
  -[AWDHomeKitCameraStream isStreamStarted]
  -[AWDHomeKitCameraStream resolutionCounts]
  -[AWDHomeKitCameraStream setResolutionCounts:]


AWDHomeKitCameraStreamIDSConnSetupParameters : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasConnectionRequested
 @property  unsigned int connectionRequested
 @property  BOOL hasConnectionComplete
 @property  unsigned int connectionComplete

  // instance methods
  -[AWDHomeKitCameraStreamIDSConnSetupParameters copyWithZone:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters readFrom:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters writeTo:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters isEqual:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters copyTo:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters dictionaryRepresentation]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters mergeFrom:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters setConnectionRequested:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters setHasConnectionRequested:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters hasConnectionRequested]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters setConnectionComplete:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters setHasConnectionComplete:]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters hasConnectionComplete]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters connectionRequested]
  -[AWDHomeKitCameraStreamIDSConnSetupParameters connectionComplete]


HMDTargetControllerManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logID
 @property  unsigned char maximumTargets
 @property  unsigned long ticksPerSecond
 @property  NSArray *buttonConfiguration
 @property  NSMutableSet *configuredTargets
 @property  BOOL configurationRefreshed
 @property  HMDHAPAccessory *controller
 @property  NSArray *targetUUIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDTargetControllerManager logCategory]

  // instance methods
  -[HMDTargetControllerManager logID]
  -[HMDTargetControllerManager logIdentifier]
  -[HMDTargetControllerManager init]
  -[HMDTargetControllerManager .cxx_destruct]
  -[HMDTargetControllerManager workQueue]
  -[HMDTargetControllerManager controller]
  -[HMDTargetControllerManager invalidate]
  -[HMDTargetControllerManager buttonConfiguration]
  -[HMDTargetControllerManager setButtonConfiguration:]
  -[HMDTargetControllerManager targetUUIDs]
  -[HMDTargetControllerManager updateTargets:]
  -[HMDTargetControllerManager addTargetAccessory:buttonConfiguration:]
  -[HMDTargetControllerManager removeTargetAccessory:]
  -[HMDTargetControllerManager updateTargetAccessory:name:buttonConfiguration:]
  -[HMDTargetControllerManager registerForActiveIdentifierNotifications]
  -[HMDTargetControllerManager ticksPerSecond]
  -[HMDTargetControllerManager initWithTargetControllerAccessory:targets:]
  -[HMDTargetControllerManager refreshConfigurationWithCompletion:]
  -[HMDTargetControllerManager autoConfigureTargets]
  -[HMDTargetControllerManager acknowledgeTargetControlService:active:]
  -[HMDTargetControllerManager updateButtonConfigurationForTarget:]
  -[HMDTargetControllerManager handleConfigureTargets:responseHandler:]
  -[HMDTargetControllerManager __accessoryNameUpdated:]
  -[HMDTargetControllerManager __accessoryConnected:]
  -[HMDTargetControllerManager __accessoryDisconnected:]
  -[HMDTargetControllerManager __accessoryRemoved:]
  -[HMDTargetControllerManager configuredTargets]
  -[HMDTargetControllerManager setConfigurationRefreshed:]
  -[HMDTargetControllerManager _refreshConfigurationWithCompletion:]
  -[HMDTargetControllerManager _updateName:buttonConfiguration:target:]
  -[HMDTargetControllerManager _removeTargets:]
  -[HMDTargetControllerManager _saveTargetUUIDs]
  -[HMDTargetControllerManager setMaximumTargets:]
  -[HMDTargetControllerManager setTicksPerSecond:]
  -[HMDTargetControllerManager configurationRefreshed]
  -[HMDTargetControllerManager _auditTargets:]
  -[HMDTargetControllerManager __refreshedConfiguration:]
  -[HMDTargetControllerManager _parseSupportedTargetConfiguration:]
  -[HMDTargetControllerManager maximumTargets]
  -[HMDTargetControllerManager _readSupportedConfigurationWithCompletion:]
  -[HMDTargetControllerManager _listTargetsWithCompletionHandler:]
  -[HMDTargetControllerManager _notifyConfigurationRefresh:]
  -[HMDTargetControllerManager _dataForListTargetsWithOutError:]
  -[HMDTargetControllerManager _addTargets:]
  -[HMDTargetControllerManager _dataForUpdateTarget:name:buttonConfiguration:outError:]
  -[HMDTargetControllerManager targetConfigurationMatchingAccessory:]
  -[HMDTargetControllerManager _dataForAddTargets:outError:]
  -[HMDTargetControllerManager addConfiguredTarget:]
  -[HMDTargetControllerManager _dataForRemoveTargets:outError:]
  -[HMDTargetControllerManager removeConfiguredTarget:]
  -[HMDTargetControllerManager _dataForResetTargetsWithOutError:]
  -[HMDTargetControllerManager targetConfigurationMatchingIdentifier:]
  -[HMDTargetControllerManager _postSelectionChangeNotification:object:userInfo:]
  -[HMDTargetControllerManager __handleActiveIdentifierChange:forCharacteristic:]
  -[HMDTargetControllerManager __characteristicEventsReceived:]
  -[HMDTargetControllerManager _handleActiveIdentifierReadResponses:]
  -[HMDTargetControllerManager _registerForActiveIdentifierNotifications]
  -[HMDTargetControllerManager _handleConfigureTargets:responseHandler:]
  -[HMDTargetControllerManager _configureTargetAccessories:reason:targetAccessories:responseHandler:]
  -[HMDTargetControllerManager resetConfiguredTargets]
  -[HMDTargetControllerManager _resetTargets]
  -[HMDTargetControllerManager setConfiguredTargets:]


HMDCameraRecordingSessionSignificantEventManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logIdentifier
 @property  HMDCameraSignificantEventFaceClassificationResolver *faceClassificationResolver
 @property  NSMutableArray *significantEvents
 @property  @? significantEventUUIDFactory
 @property  @? faceClassificationUUIDFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraRecordingSessionSignificantEventManager logCategory]

  // instance methods
  -[HMDCameraRecordingSessionSignificantEventManager logIdentifier]
  -[HMDCameraRecordingSessionSignificantEventManager .cxx_destruct]
  -[HMDCameraRecordingSessionSignificantEventManager workQueue]
  -[HMDCameraRecordingSessionSignificantEventManager resetState]
  -[HMDCameraRecordingSessionSignificantEventManager significantEvents]
  -[HMDCameraRecordingSessionSignificantEventManager _significantEventsForFrameResult:dateOfOccurrence:timeOffsetWithinClip:recordingEventTriggers:]
  -[HMDCameraRecordingSessionSignificantEventManager _significantEventsForEmptyAnalyzerResult:dateOfOccurrence:timeOffsetWithinClip:]
  -[HMDCameraRecordingSessionSignificantEventManager _significantEventsForAnalyzerEvent:dateOfOccurrence:heroFrameData:timeOffsetWithinClip:recordingEventTriggers:]
  -[HMDCameraRecordingSessionSignificantEventManager _filteredAndUpdatedSignificantEventsFromSignificantEvents:]
  -[HMDCameraRecordingSessionSignificantEventManager _faceRecognitionSignificantEventsForAnalyzerEvent:dateOfOccurrence:heroFrameData:timeOffsetWithinClip:confidenceLevel:]
  -[HMDCameraRecordingSessionSignificantEventManager significantEventUUIDFactory]
  -[HMDCameraRecordingSessionSignificantEventManager faceClassificationResolver]
  -[HMDCameraRecordingSessionSignificantEventManager _filteredFaceClassificationsFromFaceClassifications:]
  -[HMDCameraRecordingSessionSignificantEventManager faceClassificationUUIDFactory]
  -[HMDCameraRecordingSessionSignificantEventManager initWithWorkQueue:faceClassificationResolver:logIdentifier:]
  -[HMDCameraRecordingSessionSignificantEventManager isAnyEventInAnalyzerResult:includedInRecordingEventTriggers:]
  -[HMDCameraRecordingSessionSignificantEventManager significantEventsForAnalyzerResult:dateOfOccurrence:timeOffsetWithinClip:recordingEventTriggers:]
  -[HMDCameraRecordingSessionSignificantEventManager setSignificantEventUUIDFactory:]
  -[HMDCameraRecordingSessionSignificantEventManager setFaceClassificationUUIDFactory:]


HMDCameraRecordingSessionFaceClassificationContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSData *faceCropData
 @property  NSMutableSet *faceClassifications

  // instance methods
  -[HMDCameraRecordingSessionFaceClassificationContext faceCropData]
  -[HMDCameraRecordingSessionFaceClassificationContext attributeDescriptions]
  -[HMDCameraRecordingSessionFaceClassificationContext .cxx_destruct]
  -[HMDCameraRecordingSessionFaceClassificationContext faceClassifications]
  -[HMDCameraRecordingSessionFaceClassificationContext initWithFaceCropData:]


AWDHomeKitCloudSync : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasPushCount
 @property  unsigned int pushCount
 @property  BOOL hasFetchCount
 @property  unsigned int fetchCount
 @property  BOOL hasUploadCount
 @property  unsigned int uploadCount
 @property  BOOL hasUploadErrorCount
 @property  unsigned int uploadErrorCount
 @property  NSMutableArray *topReasons
 @property  NSMutableArray *topErrors
 @property  BOOL hasUploadMaximumDelayReached
 @property  BOOL uploadMaximumDelayReached
 @property  BOOL hasHasDecryptionFailed
 @property  BOOL hasDecryptionFailed
 @property  BOOL hasLastDecryptionFailed
 @property  BOOL lastDecryptionFailed
 @property  BOOL hasDataSyncState
 @property  int dataSyncState
 @property  BOOL hasHomeManagerFetchCount
 @property  unsigned int homeManagerFetchCount
 @property  BOOL hasHomeZoneFetchCount
 @property  unsigned int homeZoneFetchCount
 @property  BOOL hasHomeManagerUploadCount
 @property  unsigned int homeManagerUploadCount
 @property  BOOL hasHomeZoneUploadCount
 @property  unsigned int homeZoneUploadCount
 @property  BOOL hasHomeDataMegabytesFetched
 @property  unsigned int homeDataMegabytesFetched
 @property  BOOL hasHomeDataMegabytesPushed
 @property  unsigned int homeDataMegabytesPushed
 @property  BOOL hasLegacyHomeDataMegabytesFetched
 @property  unsigned int legacyHomeDataMegabytesFetched
 @property  BOOL hasLegacyHomeDataMegabytesPushed
 @property  unsigned int legacyHomeDataMegabytesPushed

  // class methods
  +[AWDHomeKitCloudSync topReasonsType]
  +[AWDHomeKitCloudSync topErrorsType]

  // instance methods
  -[AWDHomeKitCloudSync copyWithZone:]
  -[AWDHomeKitCloudSync .cxx_destruct]
  -[AWDHomeKitCloudSync timestamp]
  -[AWDHomeKitCloudSync setTimestamp:]
  -[AWDHomeKitCloudSync pushCount]
  -[AWDHomeKitCloudSync setPushCount:]
  -[AWDHomeKitCloudSync setHasTimestamp:]
  -[AWDHomeKitCloudSync readFrom:]
  -[AWDHomeKitCloudSync writeTo:]
  -[AWDHomeKitCloudSync isEqual:]
  -[AWDHomeKitCloudSync dataSyncState]
  -[AWDHomeKitCloudSync setDataSyncState:]
  -[AWDHomeKitCloudSync copyTo:]
  -[AWDHomeKitCloudSync dictionaryRepresentation]
  -[AWDHomeKitCloudSync mergeFrom:]
  -[AWDHomeKitCloudSync hasTimestamp]
  -[AWDHomeKitCloudSync hasPushCount]
  -[AWDHomeKitCloudSync setHasPushCount:]
  -[AWDHomeKitCloudSync fetchCount]
  -[AWDHomeKitCloudSync setFetchCount:]
  -[AWDHomeKitCloudSync addTopReasons:]
  -[AWDHomeKitCloudSync addTopErrors:]
  -[AWDHomeKitCloudSync topReasonsCount]
  -[AWDHomeKitCloudSync clearTopReasons]
  -[AWDHomeKitCloudSync topReasonsAtIndex:]
  -[AWDHomeKitCloudSync topErrorsCount]
  -[AWDHomeKitCloudSync clearTopErrors]
  -[AWDHomeKitCloudSync topErrorsAtIndex:]
  -[AWDHomeKitCloudSync setHasFetchCount:]
  -[AWDHomeKitCloudSync hasFetchCount]
  -[AWDHomeKitCloudSync setUploadCount:]
  -[AWDHomeKitCloudSync setHasUploadCount:]
  -[AWDHomeKitCloudSync hasUploadCount]
  -[AWDHomeKitCloudSync setUploadErrorCount:]
  -[AWDHomeKitCloudSync setHasUploadErrorCount:]
  -[AWDHomeKitCloudSync hasUploadErrorCount]
  -[AWDHomeKitCloudSync setUploadMaximumDelayReached:]
  -[AWDHomeKitCloudSync setHasUploadMaximumDelayReached:]
  -[AWDHomeKitCloudSync hasUploadMaximumDelayReached]
  -[AWDHomeKitCloudSync setHasDecryptionFailed:]
  -[AWDHomeKitCloudSync setHasHasDecryptionFailed:]
  -[AWDHomeKitCloudSync hasHasDecryptionFailed]
  -[AWDHomeKitCloudSync setLastDecryptionFailed:]
  -[AWDHomeKitCloudSync setHasLastDecryptionFailed:]
  -[AWDHomeKitCloudSync hasLastDecryptionFailed]
  -[AWDHomeKitCloudSync setHasDataSyncState:]
  -[AWDHomeKitCloudSync hasDataSyncState]
  -[AWDHomeKitCloudSync dataSyncStateAsString:]
  -[AWDHomeKitCloudSync StringAsDataSyncState:]
  -[AWDHomeKitCloudSync setHomeManagerFetchCount:]
  -[AWDHomeKitCloudSync setHasHomeManagerFetchCount:]
  -[AWDHomeKitCloudSync hasHomeManagerFetchCount]
  -[AWDHomeKitCloudSync setHomeZoneFetchCount:]
  -[AWDHomeKitCloudSync setHasHomeZoneFetchCount:]
  -[AWDHomeKitCloudSync hasHomeZoneFetchCount]
  -[AWDHomeKitCloudSync setHomeManagerUploadCount:]
  -[AWDHomeKitCloudSync setHasHomeManagerUploadCount:]
  -[AWDHomeKitCloudSync hasHomeManagerUploadCount]
  -[AWDHomeKitCloudSync setHomeZoneUploadCount:]
  -[AWDHomeKitCloudSync setHasHomeZoneUploadCount:]
  -[AWDHomeKitCloudSync hasHomeZoneUploadCount]
  -[AWDHomeKitCloudSync setHomeDataMegabytesFetched:]
  -[AWDHomeKitCloudSync setHasHomeDataMegabytesFetched:]
  -[AWDHomeKitCloudSync hasHomeDataMegabytesFetched]
  -[AWDHomeKitCloudSync setHomeDataMegabytesPushed:]
  -[AWDHomeKitCloudSync setHasHomeDataMegabytesPushed:]
  -[AWDHomeKitCloudSync hasHomeDataMegabytesPushed]
  -[AWDHomeKitCloudSync setLegacyHomeDataMegabytesFetched:]
  -[AWDHomeKitCloudSync setHasLegacyHomeDataMegabytesFetched:]
  -[AWDHomeKitCloudSync hasLegacyHomeDataMegabytesFetched]
  -[AWDHomeKitCloudSync setLegacyHomeDataMegabytesPushed:]
  -[AWDHomeKitCloudSync setHasLegacyHomeDataMegabytesPushed:]
  -[AWDHomeKitCloudSync hasLegacyHomeDataMegabytesPushed]
  -[AWDHomeKitCloudSync uploadCount]
  -[AWDHomeKitCloudSync uploadErrorCount]
  -[AWDHomeKitCloudSync topReasons]
  -[AWDHomeKitCloudSync setTopReasons:]
  -[AWDHomeKitCloudSync topErrors]
  -[AWDHomeKitCloudSync setTopErrors:]
  -[AWDHomeKitCloudSync uploadMaximumDelayReached]
  -[AWDHomeKitCloudSync hasDecryptionFailed]
  -[AWDHomeKitCloudSync lastDecryptionFailed]
  -[AWDHomeKitCloudSync homeManagerFetchCount]
  -[AWDHomeKitCloudSync homeZoneFetchCount]
  -[AWDHomeKitCloudSync homeManagerUploadCount]
  -[AWDHomeKitCloudSync homeZoneUploadCount]
  -[AWDHomeKitCloudSync homeDataMegabytesFetched]
  -[AWDHomeKitCloudSync homeDataMegabytesPushed]
  -[AWDHomeKitCloudSync legacyHomeDataMegabytesFetched]
  -[AWDHomeKitCloudSync legacyHomeDataMegabytesPushed]


HMDSiriRemoteInputServer : NSObject /usr/lib/libc++.1.dylib <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_xpc_object> *xpcServer
 @property  NSObject<OS_xpc_object> *xpcConnection
 @property  NSHashTable *siriSessions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSiriRemoteInputServer logCategory]

  // instance methods
  -[HMDSiriRemoteInputServer setXpcConnection:]
  -[HMDSiriRemoteInputServer sendMsg:args:]
  -[HMDSiriRemoteInputServer xpcConnection]
  -[HMDSiriRemoteInputServer xpcServer]
  -[HMDSiriRemoteInputServer handleDisconnection]
  -[HMDSiriRemoteInputServer dealloc]
  -[HMDSiriRemoteInputServer .cxx_destruct]
  -[HMDSiriRemoteInputServer initWithQueue:]
  -[HMDSiriRemoteInputServer setQueue:]
  -[HMDSiriRemoteInputServer queue]
  -[HMDSiriRemoteInputServer sessionForIdentifier:]
  -[HMDSiriRemoteInputServer handleConnection:]
  -[HMDSiriRemoteInputServer invalidate]
  -[HMDSiriRemoteInputServer handleServerEvent:]
  -[HMDSiriRemoteInputServer siriSessions]
  -[HMDSiriRemoteInputServer setSiriSessions:]
  -[HMDSiriRemoteInputServer deregisterSiriSession:]
  -[HMDSiriRemoteInputServer handleConnectionEvent:]
  -[HMDSiriRemoteInputServer handleMsg:]
  -[HMDSiriRemoteInputServer handleCheckInMsg:]
  -[HMDSiriRemoteInputServer handleStartStreamMsg:]
  -[HMDSiriRemoteInputServer handleStopStreamMsg:]
  -[HMDSiriRemoteInputServer registerSiriSession:]
  -[HMDSiriRemoteInputServer sendMsgIfCheckedIn:args:]
  -[HMDSiriRemoteInputServer setXpcServer:]


HMDCameraSnapshotSender : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSUUID *uniqueIdentifier
 @property  HMDDevice *device
 @property  HMDAccessory *accessory
 @property  HMDCameraSnapshotSessionID *sessionID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotSender logCategory]

  // instance methods
  -[HMDCameraSnapshotSender sessionID]
  -[HMDCameraSnapshotSender device]
  -[HMDCameraSnapshotSender logIdentifier]
  -[HMDCameraSnapshotSender delegateQueue]
  -[HMDCameraSnapshotSender .cxx_destruct]
  -[HMDCameraSnapshotSender workQueue]
  -[HMDCameraSnapshotSender uniqueIdentifier]
  -[HMDCameraSnapshotSender accessory]
  -[HMDCameraSnapshotSender initWithSessionID:workQueue:device:accessory:delegateQueue:uniqueIdentifier:]
  -[HMDCameraSnapshotSender _sendImageSendFailure:]


HMDCameraSnapshotSessionID : HMDCameraSessionID <NSCopying>
 @property  NSString *snapshotCharacteristicEventUUID
 @property  unsigned long snapshotReason
 @property  BOOL snapshotRequestForBulletin
 @property  NSNumber *streamingTier

  // instance methods
  -[HMDCameraSnapshotSessionID copyWithZone:]
  -[HMDCameraSnapshotSessionID .cxx_destruct]
  -[HMDCameraSnapshotSessionID snapshotReason]
  -[HMDCameraSnapshotSessionID initWithSessionID:remoteDevice:cameraSessionAppID:descriptionString:spiClient:snapshotReason:snapshotRequestForBulletin:snapshotCharacteristicEventUUID:streamingTier:]
  -[HMDCameraSnapshotSessionID isSnapshotRequestForBulletin]
  -[HMDCameraSnapshotSessionID snapshotCharacteristicEventUUID]
  -[HMDCameraSnapshotSessionID streamingTier]
  -[HMDCameraSnapshotSessionID initWithAccessory:message:]


HMDCameraClipFinalizeClipOperation : HMDCameraClipOperation
  // class methods
  +[HMDCameraClipFinalizeClipOperation logCategory]

  // instance methods
  -[HMDCameraClipFinalizeClipOperation main]


HMDWatchConnectivityLogEventManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate>
 @property  BOOL hasCompleteReport
 @property  unsigned long watchAddedNotificationCountForCurrentIncompleteReport
 @property  unsigned long watchRemovedNotificationCountForCurrentIncompleteReport
 @property  unsigned long watchAddedNotificationCountForLastCompleteReport
 @property  unsigned long watchRemovedNotificationCountForLastCompleteReport
 @property  HMFTimer *watchConnectivityLogEventManagerTimer
 @property  HMFUnfairLock *lock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDWatchConnectivityLogEventManager sharedInstance]

  // instance methods
  -[HMDWatchConnectivityLogEventManager timerDidFire:]
  -[HMDWatchConnectivityLogEventManager init]
  -[HMDWatchConnectivityLogEventManager .cxx_destruct]
  -[HMDWatchConnectivityLogEventManager lock]
  -[HMDWatchConnectivityLogEventManager watchConnectivityLogEventManagerTimer]
  -[HMDWatchConnectivityLogEventManager completeCurrentReport]
  -[HMDWatchConnectivityLogEventManager incrementWatchAddedNotificationCount]
  -[HMDWatchConnectivityLogEventManager incrementWatchRemovedNotificationCount]
  -[HMDWatchConnectivityLogEventManager currentWatchConnectivitySnapshot]
  -[HMDWatchConnectivityLogEventManager hasCompleteReport]
  -[HMDWatchConnectivityLogEventManager setHasCompleteReport:]
  -[HMDWatchConnectivityLogEventManager watchAddedNotificationCountForCurrentIncompleteReport]
  -[HMDWatchConnectivityLogEventManager setWatchAddedNotificationCountForCurrentIncompleteReport:]
  -[HMDWatchConnectivityLogEventManager watchRemovedNotificationCountForCurrentIncompleteReport]
  -[HMDWatchConnectivityLogEventManager setWatchRemovedNotificationCountForCurrentIncompleteReport:]
  -[HMDWatchConnectivityLogEventManager watchAddedNotificationCountForLastCompleteReport]
  -[HMDWatchConnectivityLogEventManager setWatchAddedNotificationCountForLastCompleteReport:]
  -[HMDWatchConnectivityLogEventManager watchRemovedNotificationCountForLastCompleteReport]
  -[HMDWatchConnectivityLogEventManager setWatchRemovedNotificationCountForLastCompleteReport:]
  -[HMDWatchConnectivityLogEventManager setWatchConnectivityLogEventManagerTimer:]


HMDWatchConnectivityLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long watchAddedNotificationCount
 @property  unsigned long watchRemovedNotificationCount
 @property  BOOL reportComplete

  // class methods
  +[HMDWatchConnectivityLogEvent initialize]
  +[HMDWatchConnectivityLogEvent uuid]

  // instance methods
  -[HMDWatchConnectivityLogEvent init]
  -[HMDWatchConnectivityLogEvent AWDMessageType]
  -[HMDWatchConnectivityLogEvent metricForAWD]
  -[HMDWatchConnectivityLogEvent watchAddedNotificationCount]
  -[HMDWatchConnectivityLogEvent setWatchAddedNotificationCount:]
  -[HMDWatchConnectivityLogEvent watchRemovedNotificationCount]
  -[HMDWatchConnectivityLogEvent setWatchRemovedNotificationCount:]
  -[HMDWatchConnectivityLogEvent isReportComplete]
  -[HMDWatchConnectivityLogEvent setReportComplete:]


HMDStreamInterface : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDCameraNetworkConfig *localNetworkConfig
 @property  HMDCameraStreamSessionID *sessionID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  <HMDCameraRemoteStreamProtocol> *sessionHandler
 @property  int localRTPSocket
 @property  unsigned long streamInterfaceState
 @property  NSObject<OS_dispatch_queue> *propertyQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDStreamInterface logCategory]

  // instance methods
  -[HMDStreamInterface sessionID]
  -[HMDStreamInterface logIdentifier]
  -[HMDStreamInterface delegateQueue]
  -[HMDStreamInterface dealloc]
  -[HMDStreamInterface .cxx_destruct]
  -[HMDStreamInterface workQueue]
  -[HMDStreamInterface propertyQueue]
  -[HMDStreamInterface sessionHandler]
  -[HMDStreamInterface initWithSessionID:workQueue:delegateQueue:localNetworkConfig:sessionHandler:]
  -[HMDStreamInterface openSocket]
  -[HMDStreamInterface localNetworkConfig]
  -[HMDStreamInterface setLocalRTPSocket:]
  -[HMDStreamInterface loadMiscFields:]
  -[HMDStreamInterface setStreamInterfaceState:]
  -[HMDStreamInterface localRTPSocket]
  -[HMDStreamInterface streamInterfaceState]
  -[HMDStreamInterface extractNetworkConfig:peerNameExtractor:]


HMDAccessoryDiagnosticsSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDAccessoryDataStreamAdapterDelegate>
 @property  HMDHAPAccessory *accessory
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *reason
 @property  HMDAccessoryDiagnosticsSettings *settings
 @property  HMDAccessoryDataStreamAdapter *dataStream
 @property  @? pendingCompletionHandler
 @property  NSString *filePath
 @property  NSDictionary *urlParameters
 @property  NSNumber *expectedDataSequenceNumber
 @property  NSFileHandle *fileHandle
 @property  BOOL readyForDataTransfer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessoryDiagnosticsSession logCategory]

  // instance methods
  -[HMDAccessoryDiagnosticsSession logIdentifier]
  -[HMDAccessoryDiagnosticsSession shutDown]
  -[HMDAccessoryDiagnosticsSession attributeDescriptions]
  -[HMDAccessoryDiagnosticsSession dataStream]
  -[HMDAccessoryDiagnosticsSession setFileHandle:]
  -[HMDAccessoryDiagnosticsSession dealloc]
  -[HMDAccessoryDiagnosticsSession .cxx_destruct]
  -[HMDAccessoryDiagnosticsSession workQueue]
  -[HMDAccessoryDiagnosticsSession setFilePath:]
  -[HMDAccessoryDiagnosticsSession fileHandle]
  -[HMDAccessoryDiagnosticsSession fileExtension]
  -[HMDAccessoryDiagnosticsSession accessory]
  -[HMDAccessoryDiagnosticsSession setDataStream:]
  -[HMDAccessoryDiagnosticsSession settings]
  -[HMDAccessoryDiagnosticsSession filePath]
  -[HMDAccessoryDiagnosticsSession readyForDataTransfer]
  -[HMDAccessoryDiagnosticsSession reason]
  -[HMDAccessoryDiagnosticsSession urlParameters]
  -[HMDAccessoryDiagnosticsSession dataStreamAdapter:didReceiveData:]
  -[HMDAccessoryDiagnosticsSession dataStreamAdapterDidFailDataRead:]
  -[HMDAccessoryDiagnosticsSession dataStreamAdapterDidCompleteDataRead:]
  -[HMDAccessoryDiagnosticsSession pendingCompletionHandler]
  -[HMDAccessoryDiagnosticsSession _callCompletionHandlerWithError:]
  -[HMDAccessoryDiagnosticsSession setReadyForDataTransfer:]
  -[HMDAccessoryDiagnosticsSession setExpectedDataSequenceNumber:]
  -[HMDAccessoryDiagnosticsSession setPendingCompletionHandler:]
  -[HMDAccessoryDiagnosticsSession setUrlParameters:]
  -[HMDAccessoryDiagnosticsSession _validDataSequenceNumber:]
  -[HMDAccessoryDiagnosticsSession _handleReceivedData:]
  -[HMDAccessoryDiagnosticsSession _createLogFile]
  -[HMDAccessoryDiagnosticsSession expectedDataSequenceNumber]
  -[HMDAccessoryDiagnosticsSession initWithAccessory:workQueue:settings:]
  -[HMDAccessoryDiagnosticsSession setUpWithCompletion:]
  -[HMDAccessoryDiagnosticsSession readDataWithCompletion:]


HMDMediaPlaybackActionAsCharacteristicWriteRequests : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDMediaPlaybackAction *residualAction
 @property  NSArray *characteristicWriteRequests

  // instance methods
  -[HMDMediaPlaybackActionAsCharacteristicWriteRequests init]
  -[HMDMediaPlaybackActionAsCharacteristicWriteRequests .cxx_destruct]
  -[HMDMediaPlaybackActionAsCharacteristicWriteRequests characteristicWriteRequests]
  -[HMDMediaPlaybackActionAsCharacteristicWriteRequests residualAction]
  -[HMDMediaPlaybackActionAsCharacteristicWriteRequests initWithAction:characteristicWriteRequests:]


HMDRemoteLoginInitiatorAuthenticationSession : HMDRemoteLoginInitiatorSession
 @property  HMDRemoteLoginInitiatorAuthentication *remoteAuthentication
 @property  @? completion

  // instance methods
  -[HMDRemoteLoginInitiatorAuthenticationSession completion]
  -[HMDRemoteLoginInitiatorAuthenticationSession dealloc]
  -[HMDRemoteLoginInitiatorAuthenticationSession .cxx_destruct]
  -[HMDRemoteLoginInitiatorAuthenticationSession remoteAuthentication]
  -[HMDRemoteLoginInitiatorAuthenticationSession initWithSessionID:remoteAuthentication:completion:home:]


HMDDatabaseZoneManagerConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSMutableCopying>
 @property  BOOL zoneOwner
 @property  BOOL shouldCreateZone
 @property  NSSet *externalRecordTypesForSubscriptions
 @property  HMDHomeKitVersion *minimumHomeKitVersion
 @property  NSSet *requiredSupportedFeatures
 @property  HMBCloudZoneConfiguration *cloudZoneConfiguration

  // instance methods
  -[HMDDatabaseZoneManagerConfiguration copyWithZone:]
  -[HMDDatabaseZoneManagerConfiguration init]
  -[HMDDatabaseZoneManagerConfiguration attributeDescriptions]
  -[HMDDatabaseZoneManagerConfiguration .cxx_destruct]
  -[HMDDatabaseZoneManagerConfiguration isEqual:]
  -[HMDDatabaseZoneManagerConfiguration mutableCopyWithZone:]
  -[HMDDatabaseZoneManagerConfiguration setZoneOwner:]
  -[HMDDatabaseZoneManagerConfiguration setMinimumHomeKitVersion:]
  -[HMDDatabaseZoneManagerConfiguration setRequiredSupportedFeatures:]
  -[HMDDatabaseZoneManagerConfiguration shouldCreateZone]
  -[HMDDatabaseZoneManagerConfiguration isZoneOwner]
  -[HMDDatabaseZoneManagerConfiguration externalRecordTypesForSubscriptions]
  -[HMDDatabaseZoneManagerConfiguration minimumHomeKitVersion]
  -[HMDDatabaseZoneManagerConfiguration requiredSupportedFeatures]
  -[HMDDatabaseZoneManagerConfiguration cloudZoneConfiguration]
  -[HMDDatabaseZoneManagerConfiguration setShouldCreateZone:]
  -[HMDDatabaseZoneManagerConfiguration setExternalRecordTypesForSubscriptions:]
  -[HMDDatabaseZoneManagerConfiguration setCloudZoneConfiguration:]


HMDMutableDatabaseZoneManagerConfiguration : HMDDatabaseZoneManagerConfiguration
 @property  BOOL zoneOwner
 @property  BOOL shouldCreateZone
 @property  NSSet *externalRecordTypesForSubscriptions
 @property  HMDHomeKitVersion *minimumHomeKitVersion
 @property  NSSet *requiredSupportedFeatures
 @property  HMBCloudZoneConfiguration *cloudZoneConfiguration

  // instance methods
  -[HMDMutableDatabaseZoneManagerConfiguration copyWithZone:]


HMDPersonManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMBLocalZoneModelObserver, HMDDatabaseZoneManagerDataSource, HMDDatabaseZoneManagerDelegate, HMDPersonDataSource>
 @property  HMBCloudZone *cloudZone
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDDatabaseZoneManager *zoneManager
 @property  NSSet *dataReceivers
 @property  HMBLocalZone *localZone
 @property  NSUUID *UUID
 @property  BOOL syncsPersonData
 @property  BOOL sharesFaceClassifications
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL dataAvailable
 @property  BOOL currentDeviceAvailableResident
 @property  <HMDPersonManagerSettings> *settings

  // instance methods
  -[HMDPersonManager zoneManager]
  -[HMDPersonManager attributeDescriptions]
  -[HMDPersonManager isDataAvailable]
  -[HMDPersonManager .cxx_destruct]
  -[HMDPersonManager workQueue]
  -[HMDPersonManager localZone]
  -[HMDPersonManager settings]
  -[HMDPersonManager UUID]
  -[HMDPersonManager isDataSyncInProgress]
  -[HMDPersonManager remove]
  -[HMDPersonManager cloudZone]
  -[HMDPersonManager setCloudZone:]
  -[HMDPersonManager localZone:didProcessModelDeletion:]
  -[HMDPersonManager localZone:didProcessModelCreation:]
  -[HMDPersonManager localZone:didProcessModelUpdate:]
  -[HMDPersonManager setLocalZone:]
  -[HMDPersonManager _removeZones]
  -[HMDPersonManager manager:shouldShareWithUser:]
  -[HMDPersonManager zoneManagerDidStart:]
  -[HMDPersonManager zoneManagerDidStop:]
  -[HMDPersonManager enumeratePersonsUsingBlock:]
  -[HMDPersonManager personsWithUUIDs:]
  -[HMDPersonManager enumeratePersonFaceCropsUsingBlock:]
  -[HMDPersonManager faceCropsForPersonsWithUUIDs:]
  -[HMDPersonManager enumerateFaceprintsUsingBlock:]
  -[HMDPersonManager faceprintsForFaceCropsWithUUIDs:]
  -[HMDPersonManager performCloudPull]
  -[HMDPersonManager handleFaceMisclassificationForFaceCropData:personUUID:]
  -[HMDPersonManager configureWithHome:]
  -[HMDPersonManager isCurrentDeviceAvailableResident]
  -[HMDPersonManager initWithUUID:zoneManager:dataReceivers:workQueue:]
  -[HMDPersonManager dataReceivers]
  -[HMDPersonManager _createOrRemoveZonesForSettings:]
  -[HMDPersonManager sharesFaceClassifications]
  -[HMDPersonManager updateSettingsUsingMessagePayload:]
  -[HMDPersonManager syncsPersonData]
  -[HMDPersonManager personWithUUID:]
  -[HMDPersonManager handleUserPrivilegeDidChangeNotification:]
  -[HMDPersonManager handleResidentWasAddedNotification:]
  -[HMDPersonManager handleResidentWasUpdatedNotification:]
  -[HMDPersonManager handleResidentWasRemovedNotification:]
  -[HMDPersonManager handleDataSyncInProgressChangedNotification:]
  -[HMDPersonManager _notifyDataReceiversOfCurrentIsCurrentDeviceAvailableResident]
  -[HMDPersonManager _notifyDataReceiversOfCurrentIsDataSyncInProgress]
  -[HMDPersonManager addOrUpdateFaceCrops:]
  -[HMDPersonManager faceCropUUIDsForPersonWithUUID:]
  -[HMDPersonManager _createZones]
  -[HMDPersonManager removeFaceprintsWithUUIDs:]
  -[HMDPersonManager _removeFaceprintsForFaceCropsWithUUIDs:]
  -[HMDPersonManager _handleCreatedOrUpdatedModel:mirrorOutputFuture:]
  -[HMDPersonManager _handleDeletedModel:mirrorOutputFuture:]
  -[HMDPersonManager _faceCropsModelsWithUUIDs:]
  -[HMDPersonManager enumerateFaceCropsUsingBlock:]
  -[HMDPersonManager enumerateUnassociatedFaceCropsUsingBlock:]
  -[HMDPersonManager faceCropsWithUUIDs:]
  -[HMDPersonManager addOrUpdatePersons:]
  -[HMDPersonManager addOrUpdateFaceprints:]
  -[HMDPersonManager associateFaceCropsWithUUIDs:toPersonWithUUID:]
  -[HMDPersonManager disassociateFaceCropsWithUUIDs:]
  -[HMDPersonManager removePersonsWithUUIDs:]
  -[HMDPersonManager removeFaceCropsWithUUIDs:]
  -[HMDPersonManager syncsDataToAllUsers]
  -[HMDPersonManager faceCropWithUUID:]
  -[HMDPersonManager faceCropsForPersonWithUUID:]
  -[HMDPersonManager addUnassociatedFaceCropWithData:]


HMDBackingStoreHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBackingStoreObjectProtocol, HMFLogging>
 @property  NSUUID *identifier
 @property  HMDBackingStore *backingStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBackingStoreHandler logCategory]

  // instance methods
  -[HMDBackingStoreHandler logIdentifier]
  -[HMDBackingStoreHandler attributeDescriptions]
  -[HMDBackingStoreHandler privateDescription]
  -[HMDBackingStoreHandler .cxx_destruct]
  -[HMDBackingStoreHandler initWithIdentifier:backingStore:]
  -[HMDBackingStoreHandler identifier]
  -[HMDBackingStoreHandler backingStore]
  -[HMDBackingStoreHandler transactionObjectUpdated:newValues:message:]
  -[HMDBackingStoreHandler transactionObjectRemoved:message:]
  -[HMDBackingStoreHandler backingStoreObjectsForVersion:]
  -[HMDBackingStoreHandler runTransactionWithModels:completion:]
  -[HMDBackingStoreHandler runTransactionWithModel:completion:]


HMDSettingsMetadataParser : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDSettingsMetadataParserProtocol>
 @property  <HMDSettingsControllerDependency> *dependency
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSettingsMetadataParser logCategory]

  // instance methods
  -[HMDSettingsMetadataParser logIdentifier]
  -[HMDSettingsMetadataParser .cxx_destruct]
  -[HMDSettingsMetadataParser dependency]
  -[HMDSettingsMetadataParser modelsFromMetadata:]
  -[HMDSettingsMetadataParser initWithDependency:]


HMDHomeNaturalLightingCurveWriter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDHome *home
 @property  <HMDLightProfileDataSource> *dataSource
 @property  NSString *logIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeNaturalLightingCurveWriter logCategory]

  // instance methods
  -[HMDHomeNaturalLightingCurveWriter logIdentifier]
  -[HMDHomeNaturalLightingCurveWriter .cxx_destruct]
  -[HMDHomeNaturalLightingCurveWriter home]
  -[HMDHomeNaturalLightingCurveWriter dataSource]
  -[HMDHomeNaturalLightingCurveWriter initWithHome:]
  -[HMDHomeNaturalLightingCurveWriter setNaturalLightingEnabled:forLightProfiles:completion:]
  -[HMDHomeNaturalLightingCurveWriter initWithHome:dataSource:]


HMDAccessoryNetworkProtectionGroupRecord : NSObject /usr/lib/libc++.1.dylib
 @property  BOOL active
 @property  BOOL persisted
 @property  HMDAccessoryNetworkProtectionGroup *group

  // class methods
  +[HMDAccessoryNetworkProtectionGroupRecord recordWithGroup:active:persisted:]

  // instance methods
  -[HMDAccessoryNetworkProtectionGroupRecord group]
  -[HMDAccessoryNetworkProtectionGroupRecord setPersisted:]
  -[HMDAccessoryNetworkProtectionGroupRecord .cxx_destruct]
  -[HMDAccessoryNetworkProtectionGroupRecord setActive:]
  -[HMDAccessoryNetworkProtectionGroupRecord isActive]
  -[HMDAccessoryNetworkProtectionGroupRecord isPersisted]
  -[HMDAccessoryNetworkProtectionGroupRecord initWithGroup:active:persisted:]


HMDAccessoryNetworkProtectionGroupRegistry : NSObject /usr/lib/libc++.1.dylib <HMFMessageReceiver, HMFLogging>
 @property  HMDHome *home
 @property  NSNotificationCenter *notificationCenter
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSSet *activeGroups
 @property  NSSet *persistedGroups
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessoryNetworkProtectionGroupRegistry logCategory]

  // instance methods
  -[HMDAccessoryNetworkProtectionGroupRegistry messageTargetUUID]
  -[HMDAccessoryNetworkProtectionGroupRegistry notificationCenter]
  -[HMDAccessoryNetworkProtectionGroupRegistry messageReceiveQueue]
  -[HMDAccessoryNetworkProtectionGroupRegistry configure]
  -[HMDAccessoryNetworkProtectionGroupRegistry logIdentifier]
  -[HMDAccessoryNetworkProtectionGroupRegistry .cxx_destruct]
  -[HMDAccessoryNetworkProtectionGroupRegistry workQueue]
  -[HMDAccessoryNetworkProtectionGroupRegistry _registerForMessages]
  -[HMDAccessoryNetworkProtectionGroupRegistry home]
  -[HMDAccessoryNetworkProtectionGroupRegistry handleAddOrUpdateAccessoryNetworkProtectionGroupModel:message:]
  -[HMDAccessoryNetworkProtectionGroupRegistry handleRemoveAccessoryNetworkProtectionGroupModel:message:]
  -[HMDAccessoryNetworkProtectionGroupRegistry initWithHome:notificationCenter:]
  -[HMDAccessoryNetworkProtectionGroupRegistry handleAddedAccessory:]
  -[HMDAccessoryNetworkProtectionGroupRegistry handleRemovedAccessory:]
  -[HMDAccessoryNetworkProtectionGroupRegistry initWithHome:notificationCenter:persistedGroups:]
  -[HMDAccessoryNetworkProtectionGroupRegistry persistedGroups]
  -[HMDAccessoryNetworkProtectionGroupRegistry activeGroups]
  -[HMDAccessoryNetworkProtectionGroupRegistry targetProtectionModeForGroupWithUUID:]
  -[HMDAccessoryNetworkProtectionGroupRegistry groupRecordWithUUID:]
  -[HMDAccessoryNetworkProtectionGroupRegistry handleUpdateAccessoryNetworkProtectionGroupProtectionMode:]
  -[HMDAccessoryNetworkProtectionGroupRegistry updateTargetProtectionModeForGroupWithUUID:protectionMode:error:requestMessage:]
  -[HMDAccessoryNetworkProtectionGroupRegistry addActiveSurrogateGroupForAccessory:shouldNotifyChange:]
  -[HMDAccessoryNetworkProtectionGroupRegistry _evaluateActiveStatusForGroupWithUUID:]
  -[HMDAccessoryNetworkProtectionGroupRegistry _setupProtectionGroupForAccessory:shouldNotifyChange:]
  -[HMDAccessoryNetworkProtectionGroupRegistry handleUpdatedAccessoryInitialManufacturerOrCategory:]
  -[HMDAccessoryNetworkProtectionGroupRegistry handleUpdatedAccessoryConfiguredNetworkProtectionGroup:]
  -[HMDAccessoryNetworkProtectionGroupRegistry _registerForAccessoryChanges:]
  -[HMDAccessoryNetworkProtectionGroupRegistry _updateGroupWithUUID:active:]
  -[HMDAccessoryNetworkProtectionGroupRegistry groupWithUUID:]
  -[HMDAccessoryNetworkProtectionGroupRegistry markGroupWithUUID:active:]
  -[HMDAccessoryNetworkProtectionGroupRegistry notifyClientsOfAddedGroup:]
  -[HMDAccessoryNetworkProtectionGroupRegistry notifyClientsOfRemovedGroup:]
  -[HMDAccessoryNetworkProtectionGroupRegistry addActiveSurrogateGroup:]
  -[HMDAccessoryNetworkProtectionGroupRegistry _setupActiveGroupsForHome]
  -[HMDAccessoryNetworkProtectionGroupRegistry removeGroupWithUUID:]
  -[HMDAccessoryNetworkProtectionGroupRegistry updateTargetProtectionModeForGroupWithUUID:protectionMode:error:]
  -[HMDAccessoryNetworkProtectionGroupRegistry accessoriesForGroupWithUUID:]


HMDAccount : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMerging, HMDBackingStoreObjectProtocol, HMDBackingStoreModelBackedObjectProtocol, NSFastEnumeration, NSSecureCoding>
 @property  BOOL currentAccount
 @property  HMDDevice *currentDevice
 @property  NSArray *identities
 @property  <HMDAccountManager> *manager
 @property  NSString *destination
 @property  HMDAccountHandle *primaryHandle
 @property  NSString *senderCorrelationIdentifier
 @property  BOOL authenticated
 @property  BOOL shouldCache
 @property  HMDAccountIdentifier *identifier
 @property  NSString *name
 @property  CNContact *contact
 @property  NSArray *handles
 @property  NSArray *devices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class modelClass
 @property  NSUUID *modelIdentifier
 @property  NSUUID *modelParentIdentifier

  // class methods
  +[HMDAccount supportsSecureCoding]
  +[HMDAccount logCategory]
  +[HMDAccount accountWithHandle:]
  +[HMDAccount accountWithDestination:]

  // instance methods
  -[HMDAccount isAuthenticated]
  -[HMDAccount setHandles:]
  -[HMDAccount handles]
  -[HMDAccount isEqualToAccount:]
  -[HMDAccount logIdentifier]
  -[HMDAccount destination]
  -[HMDAccount modelIdentifier]
  -[HMDAccount init]
  -[HMDAccount contact]
  -[HMDAccount attributeDescriptions]
  -[HMDAccount addHandle:]
  -[HMDAccount addDevice:]
  -[HMDAccount shouldCache]
  -[HMDAccount .cxx_destruct]
  -[HMDAccount devices]
  -[HMDAccount name]
  -[HMDAccount mergeObject:]
  -[HMDAccount encodeWithCoder:]
  -[HMDAccount identifier]
  -[HMDAccount identities]
  -[HMDAccount senderCorrelationIdentifier]
  -[HMDAccount countByEnumeratingWithState:objects:count:]
  -[HMDAccount manager]
  -[HMDAccount modelClass]
  -[HMDAccount shortDescription]
  -[HMDAccount setManager:]
  -[HMDAccount isEqual:]
  -[HMDAccount currentDevice]
  -[HMDAccount removeHandle:]
  -[HMDAccount shouldMergeObject:]
  -[HMDAccount initWithObjectModel:]
  -[HMDAccount initWithCoder:]
  -[HMDAccount removeDevice:]
  -[HMDAccount modelObjectWithChangeType:version:]
  -[HMDAccount transactionObjectUpdated:newValues:message:]
  -[HMDAccount transactionObjectRemoved:message:]
  -[HMDAccount isCurrentAccount]
  -[HMDAccount deviceForHandle:]
  -[HMDAccount primaryHandle]
  -[HMDAccount initWithIdentifier:handles:devices:]
  -[HMDAccount deviceForIdentifier:]
  -[HMDAccount isRelatedToAccount:]
  -[HMDAccount modelBackedObjects]
  -[HMDAccount modelParentIdentifier]
  -[HMDAccount backingStoreObjectsWithChangeType:version:]
  -[HMDAccount accountHandleWithModelIdentifier:]
  -[HMDAccount deviceWithModelIdentifier:]
  -[HMDAccount currentDeviceModelsWithChangeType:version:]


HMDAccountModel : HMDBackingStoreModelObject
 @property  HMDAccountIdentifier *identifier

  // class methods
  +[HMDAccountModel properties]
  +[HMDAccountModel schemaHashRoot]


HMDCloudGroupRootRecordModelObject : HMDBackingStoreModelObject
 @property  NSDictionary *objectIDToRecordNameMap

  // class methods
  +[HMDCloudGroupRootRecordModelObject properties]


HMDCloudSharedGroupRootRecordModelObject : HMDBackingStoreModelObject
 @property  NSArray *recordNames

  // class methods
  +[HMDCloudSharedGroupRootRecordModelObject properties]


HMDCloudGroup : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSString *rootRecordName
 @property  HMDBackingStoreCacheGroup *backingStoreGroup
 @property  NSUUID *parentIdentifier
 @property  NSUUID *rootRecordObjectID
 @property  NSMutableDictionary *objectIDToRecordNameMap
 @property  HMDCloudRecord *rootRecord
 @property  HMDCloudCache *cache
 @property  HMDCloudZone *cloudZone
 @property  CKRecordID *privateZoneRootRecordID
 @property  NSUUID *ownerID
 @property  NSUUID *identifier
 @property  BOOL doRecordsExistInCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCloudGroup logCategory]
  +[HMDCloudGroup shortDescription]
  +[HMDCloudGroup createGroupWithRootRecordName:owner:subscriptionName:cloudZone:completion:]

  // instance methods
  -[HMDCloudGroup setCache:]
  -[HMDCloudGroup logIdentifier]
  -[HMDCloudGroup init]
  -[HMDCloudGroup .cxx_destruct]
  -[HMDCloudGroup cache]
  -[HMDCloudGroup ownerID]
  -[HMDCloudGroup identifier]
  -[HMDCloudGroup addCloudRecord:]
  -[HMDCloudGroup shortDescription]
  -[HMDCloudGroup parentIdentifier]
  -[HMDCloudGroup rootRecord]
  -[HMDCloudGroup cloudZone]
  -[HMDCloudGroup setCloudZone:]
  -[HMDCloudGroup cloudRecordWithObjectID:completionHandler:]
  -[HMDCloudGroup rootRecordName]
  -[HMDCloudGroup updateCloudRecord:]
  -[HMDCloudGroup cloudRecordWithObjectID:]
  -[HMDCloudGroup doRecordsExistInCache]
  -[HMDCloudGroup cloudRecordWithName:]
  -[HMDCloudGroup isRootRecord:]
  -[HMDCloudGroup fetchCloudRecordMap:]
  -[HMDCloudGroup cloudRecordWithObjectIDs:completionHandler:]
  -[HMDCloudGroup rootRecordModelObject]
  -[HMDCloudGroup deleteCloudRecord:]
  -[HMDCloudGroup isRootRecordName:]
  -[HMDCloudGroup initWithBackingStoreCacheGroup:cloudZone:]
  -[HMDCloudGroup rootRecordCompletionHandler:]
  -[HMDCloudGroup cloudRecordWithNames:completionHandler:]
  -[HMDCloudGroup cloudRecordWithName:completionHandler:]
  -[HMDCloudGroup __cloudRecordWithObjectID:]
  -[HMDCloudGroup cloudRecordsForParentID:completionHandler:]
  -[HMDCloudGroup allDescendentsCloudRecordsForParentID:completionHandler:]
  -[HMDCloudGroup backingStoreGroup]
  -[HMDCloudGroup privateZoneRootRecordID]
  -[HMDCloudGroup updateCloudRecord:completionHandler:]
  -[HMDCloudGroup deleteCloudRecordNames:]
  -[HMDCloudGroup rootRecordObjectID]
  -[HMDCloudGroup _cloudRecordsForParentIDs:recursive:completionHandler:]
  -[HMDCloudGroup setBackingStoreGroup:]
  -[HMDCloudGroup objectIDToRecordNameMap]


HMDAppleMediaProfile : HMDMediaProfile <MPRequestResponseControllerDelegate>
 @property  HMDAppleMediaAccessory *mediaAccessory
 @property  MPRequestResponseController *controller
 @property  HMDMediaSystem *mediaSystem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDAppleMediaProfile didFinishLoadingRequestForController:]
  -[HMDAppleMediaProfile .cxx_destruct]
  -[HMDAppleMediaProfile setMediaSystem:]
  -[HMDAppleMediaProfile controller]
  -[HMDAppleMediaProfile registerForMessages]
  -[HMDAppleMediaProfile setMediaSession:]
  -[HMDAppleMediaProfile mediaSystem]
  -[HMDAppleMediaProfile configureWithMessageDispatcher:configurationTracker:]
  -[HMDAppleMediaProfile initWithAccessory:uniqueIdentifier:services:workQueue:]
  -[HMDAppleMediaProfile _handleSetPower:]
  -[HMDAppleMediaProfile _updatePlayback:]
  -[HMDAppleMediaProfile _updateRefreshPlayback:]
  -[HMDAppleMediaProfile mediaAccessory]
  -[HMDAppleMediaProfile sessionAudioControlUpdated:]
  -[HMDAppleMediaProfile _handleSetValue:withRequestProperty:withCompletionHandler:]


HMDHomeManagerXPCMessageSendPolicyParameters : HMDXPCMessageSendPolicyParameters <NSCopying, NSMutableCopying>
 @property  unsigned long options
 @property  BOOL active

  // instance methods
  -[HMDHomeManagerXPCMessageSendPolicyParameters copyWithZone:]
  -[HMDHomeManagerXPCMessageSendPolicyParameters signature]
  -[HMDHomeManagerXPCMessageSendPolicyParameters options]
  -[HMDHomeManagerXPCMessageSendPolicyParameters isActive]
  -[HMDHomeManagerXPCMessageSendPolicyParameters isEqual:]
  -[HMDHomeManagerXPCMessageSendPolicyParameters mutableCopyWithZone:]
  -[HMDHomeManagerXPCMessageSendPolicyParameters initWithEntitlements:options:]


HMDMutableHomeManagerXPCMessageSendPolicyParameters : HMDHomeManagerXPCMessageSendPolicyParameters
 @property  BOOL active

  // instance methods
  -[HMDMutableHomeManagerXPCMessageSendPolicyParameters copyWithZone:]
  -[HMDMutableHomeManagerXPCMessageSendPolicyParameters setActive:]
  -[HMDMutableHomeManagerXPCMessageSendPolicyParameters isActive]


AWDHomeKitMessageTransported : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasPayloadSize
 @property  unsigned long payloadSize
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasTransactionID
 @property  NSString *transactionID
 @property  BOOL hasIsSecure
 @property  BOOL isSecure
 @property  BOOL hasMessageType
 @property  int messageType
 @property  BOOL hasTransport
 @property  int transport
 @property  BOOL hasDirection
 @property  int direction
 @property  BOOL hasMessageName
 @property  NSString *messageName

  // instance methods
  -[AWDHomeKitMessageTransported copyWithZone:]
  -[AWDHomeKitMessageTransported messageType]
  -[AWDHomeKitMessageTransported setTransport:]
  -[AWDHomeKitMessageTransported transport]
  -[AWDHomeKitMessageTransported isSecure]
  -[AWDHomeKitMessageTransported setMessageType:]
  -[AWDHomeKitMessageTransported setTransactionID:]
  -[AWDHomeKitMessageTransported direction]
  -[AWDHomeKitMessageTransported setHasMessageType:]
  -[AWDHomeKitMessageTransported hasMessageType]
  -[AWDHomeKitMessageTransported messageTypeAsString:]
  -[AWDHomeKitMessageTransported StringAsMessageType:]
  -[AWDHomeKitMessageTransported .cxx_destruct]
  -[AWDHomeKitMessageTransported setDirection:]
  -[AWDHomeKitMessageTransported timestamp]
  -[AWDHomeKitMessageTransported hasIdentifier]
  -[AWDHomeKitMessageTransported setTimestamp:]
  -[AWDHomeKitMessageTransported messageName]
  -[AWDHomeKitMessageTransported setIdentifier:]
  -[AWDHomeKitMessageTransported identifier]
  -[AWDHomeKitMessageTransported setHasTimestamp:]
  -[AWDHomeKitMessageTransported readFrom:]
  -[AWDHomeKitMessageTransported setMessageName:]
  -[AWDHomeKitMessageTransported payloadSize]
  -[AWDHomeKitMessageTransported writeTo:]
  -[AWDHomeKitMessageTransported isEqual:]
  -[AWDHomeKitMessageTransported transactionID]
  -[AWDHomeKitMessageTransported hasDirection]
  -[AWDHomeKitMessageTransported copyTo:]
  -[AWDHomeKitMessageTransported dictionaryRepresentation]
  -[AWDHomeKitMessageTransported hasMessageName]
  -[AWDHomeKitMessageTransported hasTransport]
  -[AWDHomeKitMessageTransported mergeFrom:]
  -[AWDHomeKitMessageTransported hasTimestamp]
  -[AWDHomeKitMessageTransported setPayloadSize:]
  -[AWDHomeKitMessageTransported setIsSecure:]
  -[AWDHomeKitMessageTransported transportAsString:]
  -[AWDHomeKitMessageTransported StringAsTransport:]
  -[AWDHomeKitMessageTransported setHasDirection:]
  -[AWDHomeKitMessageTransported directionAsString:]
  -[AWDHomeKitMessageTransported StringAsDirection:]
  -[AWDHomeKitMessageTransported setHasPayloadSize:]
  -[AWDHomeKitMessageTransported hasPayloadSize]
  -[AWDHomeKitMessageTransported hasTransactionID]
  -[AWDHomeKitMessageTransported setHasIsSecure:]
  -[AWDHomeKitMessageTransported hasIsSecure]
  -[AWDHomeKitMessageTransported setHasTransport:]


HMDRelayAccessToken : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFDumpState, HMDBackingStoreObjectProtocol, NSSecureCoding>
 @property  HMDHAPAccessory *accessory
 @property  HMDUser *user
 @property  NSUUID *accessoryIdentifier
 @property  NSUUID *userIdentifier
 @property  HMDRelayAccessTokenModel *model
 @property  NSUUID *identifier
 @property  NSData *accessToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRelayAccessToken supportsSecureCoding]

  // instance methods
  -[HMDRelayAccessToken user]
  -[HMDRelayAccessToken setUser:]
  -[HMDRelayAccessToken userIdentifier]
  -[HMDRelayAccessToken init]
  -[HMDRelayAccessToken accessoryIdentifier]
  -[HMDRelayAccessToken .cxx_destruct]
  -[HMDRelayAccessToken encodeWithCoder:]
  -[HMDRelayAccessToken identifier]
  -[HMDRelayAccessToken accessory]
  -[HMDRelayAccessToken accessToken]
  -[HMDRelayAccessToken isEqual:]
  -[HMDRelayAccessToken setUserIdentifier:]
  -[HMDRelayAccessToken model]
  -[HMDRelayAccessToken setAccessory:]
  -[HMDRelayAccessToken dumpState]
  -[HMDRelayAccessToken initWithCoder:]
  -[HMDRelayAccessToken transactionObjectUpdated:newValues:message:]
  -[HMDRelayAccessToken transactionObjectRemoved:message:]
  -[HMDRelayAccessToken configureWithHome:]
  -[HMDRelayAccessToken transactionWithObjectChangeType:]
  -[HMDRelayAccessToken initWithAccessToken:consentToken:]
  -[HMDRelayAccessToken migrateCloudZone:migrationQueue:completion:]
  -[HMDRelayAccessToken initWithUser:model:]
  -[HMDRelayAccessToken fixupUserIdentifier]
  -[HMDRelayAccessToken deleteTokenInAccessoryModel]


HMDRemoteLoginAnisetteDataProvider : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <AKAnisetteServiceProtocol, HMFLogging>
 @property  NSString *sessionID
 @property  HMDRemoteLoginMessageSender *remoteMessageSender
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginAnisetteDataProvider logCategory]

  // instance methods
  -[HMDRemoteLoginAnisetteDataProvider copyWithZone:]
  -[HMDRemoteLoginAnisetteDataProvider sessionID]
  -[HMDRemoteLoginAnisetteDataProvider logIdentifier]
  -[HMDRemoteLoginAnisetteDataProvider .cxx_destruct]
  -[HMDRemoteLoginAnisetteDataProvider provisionAnisetteWithCompletion:]
  -[HMDRemoteLoginAnisetteDataProvider eraseAnisetteWithCompletion:]
  -[HMDRemoteLoginAnisetteDataProvider syncAnisetteWithSIMData:completion:]
  -[HMDRemoteLoginAnisetteDataProvider legacyAnisetteDataForDSID:withCompletion:]
  -[HMDRemoteLoginAnisetteDataProvider fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
  -[HMDRemoteLoginAnisetteDataProvider remoteMessageSender]
  -[HMDRemoteLoginAnisetteDataProvider setRemoteMessageSender:]
  -[HMDRemoteLoginAnisetteDataProvider initWithSessionID:remoteMessageSender:]


HMDCameraStreamControlMessageHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, HMDCameraStreamControlManagerDelegate, HMFLogging>
 @property  HMDPhoneCallObserver *phoneCallObserver
 @property  HMDCameraResidentMessageHandler *residentMessageHandler
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHAPAccessory *accessory
 @property  NSUUID *uniqueIdentifier
 @property  NSUUID *profileUniqueIdentifier
 @property  HMDCameraStreamManagerSession *streamSession
 @property  HMDCameraSupportedConfigurationCache *supportedConfigCache
 @property  HMDCameraStreamSnapshotHandler *streamSnapshotHandler
 @property  HMFNetMonitor *networkMonitor
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMDDynamicActivityAttributionPublisher *dynamicActivityAttributionPublisher
 @property  <HMDCameraStreamControlMessageHandlerDataSource> *dataSource
 @property  HMDDeviceCapabilities *deviceCapabilities
 @property  BOOL streamingSessionInProgress
 @property  HMDService *streamManagementService
 @property  NSString *streamSessionID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraStreamControlMessageHandler logCategory]

  // instance methods
  -[HMDCameraStreamControlMessageHandler timerDidFire:]
  -[HMDCameraStreamControlMessageHandler handleMessage:]
  -[HMDCameraStreamControlMessageHandler logIdentifier]
  -[HMDCameraStreamControlMessageHandler streamSessionID]
  -[HMDCameraStreamControlMessageHandler dealloc]
  -[HMDCameraStreamControlMessageHandler .cxx_destruct]
  -[HMDCameraStreamControlMessageHandler workQueue]
  -[HMDCameraStreamControlMessageHandler uniqueIdentifier]
  -[HMDCameraStreamControlMessageHandler deviceCapabilities]
  -[HMDCameraStreamControlMessageHandler accessory]
  -[HMDCameraStreamControlMessageHandler dataSource]
  -[HMDCameraStreamControlMessageHandler messageDispatcher]
  -[HMDCameraStreamControlMessageHandler isEqual:]
  -[HMDCameraStreamControlMessageHandler networkMonitor]
  -[HMDCameraStreamControlMessageHandler profileUniqueIdentifier]
  -[HMDCameraStreamControlMessageHandler handleCameraSettingsDidChangeNotification:]
  -[HMDCameraStreamControlMessageHandler setMessageDispatcher:]
  -[HMDCameraStreamControlMessageHandler configureWithMessageDispatcher:]
  -[HMDCameraStreamControlMessageHandler streamSnapshotHandler]
  -[HMDCameraStreamControlMessageHandler setStreamSession:]
  -[HMDCameraStreamControlMessageHandler streamSession]
  -[HMDCameraStreamControlMessageHandler residentMessageHandler]
  -[HMDCameraStreamControlMessageHandler handleAccessoryDisconnected:]
  -[HMDCameraStreamControlMessageHandler initWithWorkQueue:streamSnapshotHandler:accessory:streamManagementService:profileUniqueIdentifier:networkMonitor:residentMessageHandler:phoneCallObserver:deviceCapabilities:dataSource:]
  -[HMDCameraStreamControlMessageHandler streamManagementService]
  -[HMDCameraStreamControlMessageHandler handleProcessStateChange:]
  -[HMDCameraStreamControlMessageHandler handleActivePhoneCallEstablishedNotification:]
  -[HMDCameraStreamControlMessageHandler _stopStreamWithError:]
  -[HMDCameraStreamControlMessageHandler _handleStopMessage:]
  -[HMDCameraStreamControlMessageHandler _isStopMessage:]
  -[HMDCameraStreamControlMessageHandler _isSetAudioStreamSettingMessage:]
  -[HMDCameraStreamControlMessageHandler _handleSetAudioState:]
  -[HMDCameraStreamControlMessageHandler _isSetAudioVolumeMessage:]
  -[HMDCameraStreamControlMessageHandler _handleSetAudioVolume:]
  -[HMDCameraStreamControlMessageHandler _isRemoteSetupMessage:]
  -[HMDCameraStreamControlMessageHandler _handleRemoteSetupMessage:]
  -[HMDCameraStreamControlMessageHandler _isNegotiateMessage:]
  -[HMDCameraStreamControlMessageHandler _handleNegotiateMessage:]
  -[HMDCameraStreamControlMessageHandler _isStartMessage:]
  -[HMDCameraStreamControlMessageHandler _handleStartMessage:]
  -[HMDCameraStreamControlMessageHandler _isReconfigureMessage:]
  -[HMDCameraStreamControlMessageHandler _handleReconfigureMessage:]
  -[HMDCameraStreamControlMessageHandler _shouldHandleNegotiateMessage:accessoryReachable:]
  -[HMDCameraStreamControlMessageHandler supportedConfigCache]
  -[HMDCameraStreamControlMessageHandler phoneCallObserver]
  -[HMDCameraStreamControlMessageHandler dynamicActivityAttributionPublisher]
  -[HMDCameraStreamControlMessageHandler setAudioVolume:callback:]
  -[HMDCameraStreamControlMessageHandler _resetStreamSession:]
  -[HMDCameraStreamControlMessageHandler _sendStreamStoppedNotification:]
  -[HMDCameraStreamControlMessageHandler _shouldStopStreamSessionForProcessInfo:]
  -[HMDCameraStreamControlMessageHandler streamControlManagerDidNegotiateStream:selectedParameters:]
  -[HMDCameraStreamControlMessageHandler streamControlManagerDidSetupRemoteConnection:]
  -[HMDCameraStreamControlMessageHandler streamControlManagerDidStartStream:slotIdentifier:]
  -[HMDCameraStreamControlMessageHandler streamControlManagerDidReceiveFirstFrame:audioStreamSetting:aspectRatio:slotIdentifier:]
  -[HMDCameraStreamControlMessageHandler streamControlManagerDidReconfigureStream:]
  -[HMDCameraStreamControlMessageHandler streamControlManagerDidStopStreamForSessionID:error:]
  -[HMDCameraStreamControlMessageHandler streamControlManager:didFail:]
  -[HMDCameraStreamControlMessageHandler initWithWorkQueue:streamSnapshotHandler:accessory:streamManagementService:profileUniqueIdentifier:networkMonitor:residentMessageHandler:]
  -[HMDCameraStreamControlMessageHandler isStreamingSessionInProgress]


HMDCameraProtocolParameters : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  HMDSupportedVideoStreamConfiguration *supportedVideoStreamConfiguration
 @property  HMDSupportedAudioStreamConfiguration *supportedAudioStreamConfiguration
 @property  HMDSupportedRTPConfiguration *supportedRTPConfiguration
 @property  HMDSetupEndPointRead *setupEndPointRead
 @property  HMDSetupEndPointWrite *setupEndPointWrite
 @property  HMDSelectedStreamConfigurationWrite *selectedStreamConfigurationWrite
 @property  HMDReselectedStreamConfigurationWrite *reselectedStreamConfigurationWrite

  // class methods
  +[HMDCameraProtocolParameters supportsSecureCoding]

  // instance methods
  -[HMDCameraProtocolParameters .cxx_destruct]
  -[HMDCameraProtocolParameters encodeWithCoder:]
  -[HMDCameraProtocolParameters initWithCoder:]
  -[HMDCameraProtocolParameters supportedAudioStreamConfiguration]
  -[HMDCameraProtocolParameters selectedStreamConfigurationWrite]
  -[HMDCameraProtocolParameters setupEndPointWrite]
  -[HMDCameraProtocolParameters setupEndPointRead]
  -[HMDCameraProtocolParameters reselectedStreamConfigurationWrite]
  -[HMDCameraProtocolParameters supportedVideoStreamConfiguration]
  -[HMDCameraProtocolParameters setSupportedVideoStreamConfiguration:]
  -[HMDCameraProtocolParameters setSupportedAudioStreamConfiguration:]
  -[HMDCameraProtocolParameters supportedRTPConfiguration]
  -[HMDCameraProtocolParameters setSupportedRTPConfiguration:]
  -[HMDCameraProtocolParameters setSetupEndPointRead:]
  -[HMDCameraProtocolParameters setSetupEndPointWrite:]
  -[HMDCameraProtocolParameters setSelectedStreamConfigurationWrite:]
  -[HMDCameraProtocolParameters setReselectedStreamConfigurationWrite:]


HMDRemoteDeviceReachabilityChangeLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  unsigned long reason
 @property  BOOL reachable
 @property  BOOL targetSupportsIDSPresence

  // class methods
  +[HMDRemoteDeviceReachabilityChangeLogEvent uuid]

  // instance methods
  -[HMDRemoteDeviceReachabilityChangeLogEvent eventName]
  -[HMDRemoteDeviceReachabilityChangeLogEvent reason]
  -[HMDRemoteDeviceReachabilityChangeLogEvent reachable]
  -[HMDRemoteDeviceReachabilityChangeLogEvent serializedEvent]
  -[HMDRemoteDeviceReachabilityChangeLogEvent initWithReason:reachable:targetSupportsIDSPresence:]
  -[HMDRemoteDeviceReachabilityChangeLogEvent targetSupportsIDSPresence]


HMDCameraClipsQuotaEnableCameraResponse : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <CKCodeOperationMessageMutation, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDCameraClipsQuotaEnableCameraResponse copyWithZone:]
  -[HMDCameraClipsQuotaEnableCameraResponse readFrom:]
  -[HMDCameraClipsQuotaEnableCameraResponse writeTo:]
  -[HMDCameraClipsQuotaEnableCameraResponse isEqual:]
  -[HMDCameraClipsQuotaEnableCameraResponse copyTo:]
  -[HMDCameraClipsQuotaEnableCameraResponse dictionaryRepresentation]
  -[HMDCameraClipsQuotaEnableCameraResponse mergeFrom:]


HMDAccessoryCount : NSObject /usr/lib/libc++.1.dylib
 @property  HMDHome *home
 @property  unsigned long numHAPAccessories
 @property  unsigned long numCameraAccessories
 @property  unsigned long numCameraAccessoriesRecordingEnabled
 @property  unsigned long numSecurityClassAccessories
 @property  unsigned long numCriticalSensorAccessories

  // instance methods
  -[HMDAccessoryCount .cxx_destruct]
  -[HMDAccessoryCount setHome:]
  -[HMDAccessoryCount home]
  -[HMDAccessoryCount initWithHome:]
  -[HMDAccessoryCount numHAPAccessoriesWithAnyServiceWithTypes:]
  -[HMDAccessoryCount numHAPAccessories]
  -[HMDAccessoryCount numCameraAccessories]
  -[HMDAccessoryCount numCameraAccessoriesRecordingEnabled]
  -[HMDAccessoryCount numSecurityClassAccessories]
  -[HMDAccessoryCount numCriticalSensorAccessories]


HMDHomeData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSMutableCopying>
 @property  long long dataVersion
 @property  NSArray *homes
 @property  NSArray *accessories
 @property  NSUUID *primaryHomeUUID
 @property  NSUUID *lastCurrentHomeUUID
 @property  long long schemaVersion
 @property  NSUUID *dataTag
 @property  NSArray *UUIDsOfRemovedHomes
 @property  NSArray *cloudZones
 @property  NSArray *incomingInvitations
 @property  NSString *currentDevice
 @property  NSArray *pendingReasonSaved
 @property  NSArray *pendingUserManagementOperations
 @property  NSArray *unprocessedOperationIdentifiers
 @property  HMDApplicationData *applicationData
 @property  long long residentEnabledState
 @property  HMDAccount *account
 @property  NSArray *remoteAccounts
 @property  BOOL accessAllowedWhenLocked
 @property  NSDictionary *demoAccessories
 @property  BOOL demoFinalized

  // instance methods
  -[HMDHomeData copyWithZone:]
  -[HMDHomeData dataVersion]
  -[HMDHomeData account]
  -[HMDHomeData .cxx_destruct]
  -[HMDHomeData applicationData]
  -[HMDHomeData accessories]
  -[HMDHomeData remoteAccounts]
  -[HMDHomeData demoAccessories]
  -[HMDHomeData incomingInvitations]
  -[HMDHomeData schemaVersion]
  -[HMDHomeData dataTag]
  -[HMDHomeData currentDevice]
  -[HMDHomeData homes]
  -[HMDHomeData mutableCopyWithZone:]
  -[HMDHomeData setDataVersion:]
  -[HMDHomeData demoFinalized]
  -[HMDHomeData pendingUserManagementOperations]
  -[HMDHomeData primaryHomeUUID]
  -[HMDHomeData cloudZones]
  -[HMDHomeData lastCurrentHomeUUID]
  -[HMDHomeData UUIDsOfRemovedHomes]
  -[HMDHomeData pendingReasonSaved]
  -[HMDHomeData unprocessedOperationIdentifiers]
  -[HMDHomeData residentEnabledState]
  -[HMDHomeData accessAllowedWhenLocked]


HMDMutableHomeData : HMDHomeData <NSCopying, NSMutableCopying>
 @property  NSArray *homes
 @property  NSArray *accessories
 @property  NSUUID *primaryHomeUUID
 @property  NSUUID *lastCurrentHomeUUID
 @property  long long dataVersion
 @property  long long schemaVersion
 @property  NSUUID *dataTag
 @property  NSArray *UUIDsOfRemovedHomes
 @property  NSArray *cloudZones
 @property  NSArray *incomingInvitations
 @property  NSString *currentDevice
 @property  NSArray *pendingReasonSaved
 @property  NSArray *pendingUserManagementOperations
 @property  NSArray *unprocessedOperationIdentifiers
 @property  HMDApplicationData *applicationData
 @property  long long residentEnabledState
 @property  HMDAccount *account
 @property  NSArray *remoteAccounts
 @property  BOOL accessAllowedWhenLocked
 @property  NSDictionary *demoAccessories
 @property  BOOL demoFinalized

  // instance methods
  -[HMDMutableHomeData copyWithZone:]
  -[HMDMutableHomeData setAccessAllowedWhenLocked:]
  -[HMDMutableHomeData setApplicationData:]
  -[HMDMutableHomeData setAccount:]
  -[HMDMutableHomeData setDemoAccessories:]
  -[HMDMutableHomeData setSchemaVersion:]
  -[HMDMutableHomeData setCurrentDevice:]
  -[HMDMutableHomeData setAccessories:]
  -[HMDMutableHomeData setDataVersion:]
  -[HMDMutableHomeData setPrimaryHomeUUID:]
  -[HMDMutableHomeData setHomes:]
  -[HMDMutableHomeData setLastCurrentHomeUUID:]
  -[HMDMutableHomeData setDataTag:]
  -[HMDMutableHomeData setUUIDsOfRemovedHomes:]
  -[HMDMutableHomeData setCloudZones:]
  -[HMDMutableHomeData setIncomingInvitations:]
  -[HMDMutableHomeData setPendingReasonSaved:]
  -[HMDMutableHomeData setPendingUserManagementOperations:]
  -[HMDMutableHomeData setUnprocessedOperationIdentifiers:]
  -[HMDMutableHomeData setResidentEnabledState:]
  -[HMDMutableHomeData setRemoteAccounts:]
  -[HMDMutableHomeData setDemoFinalized:]


HMDPersistentStore : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDPersistentStore>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDPersistentStore removeTransactionJournal]
  +[HMDPersistentStore unarchiveHomeData:decryptionFailed:]
  +[HMDPersistentStore resetConfiguration]
  +[HMDPersistentStore loadBuiltinPlainMetadataDictionary]
  +[HMDPersistentStore loadPlainMetadataDictionary]
  +[HMDPersistentStore archiveMetadata:]
  +[HMDPersistentStore unarchiveBulletinBoard]
  +[HMDPersistentStore archiveBulletinBoard:]
  +[HMDPersistentStore writeData:toStorePath:dataLabel:]
  +[HMDPersistentStore _writeData:toStorePath:dataLabel:]
  +[HMDPersistentStore decryptDataWithControllerKey:totalKeysFound:deleteExtraKeys:allowControllerIdentifierToChange:controllerIdentifierChanged:successfulKeyUserName:error:]
  +[HMDPersistentStore archiveCloudServerTokenData:]
  +[HMDPersistentStore deserializeHomeData:localStorage:fromData:]
  +[HMDPersistentStore serializeHomeData:localStorage:remoteDeviceOnSameAccount:]
  +[HMDPersistentStore encryptDataWithControllerKey:error:]
  +[HMDPersistentStore decryptDataWithMetadataKey:error:]
  +[HMDPersistentStore encryptDataWithMetadataKey:error:]
  +[HMDPersistentStore writeDictionary:toStorePath:]
  +[HMDPersistentStore _encryptData:withKey:error:]
  +[HMDPersistentStore _decryptData:withKey:error:]
  +[HMDPersistentStore cleanupKeysInStore]
  +[HMDPersistentStore resetMetadata]
  +[HMDPersistentStore archiveHomeData:]
  +[HMDPersistentStore archiveVendorStore:]
  +[HMDPersistentStore unarchiveVendorStore]
  +[HMDPersistentStore decryptUsingLocalKeyAndUnarchiveFromPath:error:]
  +[HMDPersistentStore encryptUsingLocalKeyAndArchiveData:storePath:dataLabel:]
  +[HMDPersistentStore removeServerTokenDataFile]
  +[HMDPersistentStore archiveIDSDataSyncJournal:]
  +[HMDPersistentStore unarchiveIDSDataSyncJournal]
  +[HMDPersistentStore archiveDataStoreWithPath:serializedData:forKey:]
  +[HMDPersistentStore unarchiveDataStoreWithPath:forKey:]


HMDRemoteLoginReceiverProxyAuthentication : HMDRemoteLoginReceiverAuthentication
 @property  HMDRemoteLoginProxyAuthenticationRequest *request

  // class methods
  +[HMDRemoteLoginReceiverProxyAuthentication logCategory]

  // instance methods
  -[HMDRemoteLoginReceiverProxyAuthentication dealloc]
  -[HMDRemoteLoginReceiverProxyAuthentication .cxx_destruct]
  -[HMDRemoteLoginReceiverProxyAuthentication request]
  -[HMDRemoteLoginReceiverProxyAuthentication _authenticate]
  -[HMDRemoteLoginReceiverProxyAuthentication authenticate]
  -[HMDRemoteLoginReceiverProxyAuthentication initWithSessionID:remoteDevice:workQueue:remoteMessageSender:delegate:request:]


HMDMediaAccessory : HMDAccessory <HMFLogging>
 @property  HMDMediaAccessoryAdvertisement *advertisement
 @property  HMDMediaProfile *mediaProfile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMediaAccessory supportsSecureCoding]

  // instance methods
  -[HMDMediaAccessory init]
  -[HMDMediaAccessory .cxx_destruct]
  -[HMDMediaAccessory name]
  -[HMDMediaAccessory encodeWithCoder:]
  -[HMDMediaAccessory urlString]
  -[HMDMediaAccessory mediaProfile]
  -[HMDMediaAccessory _registerForMessages]
  -[HMDMediaAccessory reachableTransports]
  -[HMDMediaAccessory dumpState]
  -[HMDMediaAccessory initWithCoder:]
  -[HMDMediaAccessory advertisement]
  -[HMDMediaAccessory setAdvertisement:]
  -[HMDMediaAccessory transactionObjectUpdated:newValues:message:]
  -[HMDMediaAccessory configureWithHome:msgDispatcher:configurationTracker:initialConfiguration:]
  -[HMDMediaAccessory supportedTransports]
  -[HMDMediaAccessory setRemotelyReachable:]
  -[HMDMediaAccessory transactionWithObjectChangeType:]
  -[HMDMediaAccessory initWithTransaction:home:]
  -[HMDMediaAccessory addAdvertisement:]
  -[HMDMediaAccessory handleUpdatedMinimumUserPrivilege:]
  -[HMDMediaAccessory handleUpdatedPassword:]
  -[HMDMediaAccessory removeAdvertisement:]
  -[HMDMediaAccessory assistantObject]
  -[HMDMediaAccessory _shouldFilterAccessoryProfile:]
  -[HMDMediaAccessory providesHashRouteID]
  -[HMDMediaAccessory dumpSimpleState]
  -[HMDMediaAccessory handleRoomChanged:]
  -[HMDMediaAccessory handleRoomNameChanged:]
  -[HMDMediaAccessory _createMediaProfile]
  -[HMDMediaAccessory handleUpdatedAdvertisement:]
  -[HMDMediaAccessory notifyConnectivityChangedWithReachabilityState:]


HMDMediaAccessoryModel : HMDAccessoryTransaction
  // class methods
  +[HMDMediaAccessoryModel properties]


HMDDatabaseZoneManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDDatabaseDelegate, HMDCloudShareMessengerDelegate, HMDCloudShareParticipantsManagerDelegate>
 @property  long long state
 @property  <HMDDatabase> *database
 @property  HMDCloudShareMessenger *shareMessenger
 @property  <HMBLocalZoneDelegate><HMBCloudZoneDelegate> *zoneDelegate
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDCloudShareParticipantsManager *participantsManager
 @property  HMBLocalZone *localZone
 @property  HMBCloudZone *cloudZone
 @property  @? participantsManagerFactory
 @property  <HMDDatabaseZoneManagerDataSource> *dataSource
 @property  <HMDDatabaseZoneManagerDelegate> *delegate
 @property  NSString *containerIdentifier
 @property  NSString *zoneName
 @property  HMDHome *home
 @property  NSUUID *messageTargetUUID
 @property  HMDDatabaseZoneManagerConfiguration *defaultConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDatabaseZoneManager logCategory]

  // instance methods
  -[HMDDatabaseZoneManager messageTargetUUID]
  -[HMDDatabaseZoneManager containerIdentifier]
  -[HMDDatabaseZoneManager zoneName]
  -[HMDDatabaseZoneManager configure]
  -[HMDDatabaseZoneManager logIdentifier]
  -[HMDDatabaseZoneManager setDataSource:]
  -[HMDDatabaseZoneManager setState:]
  -[HMDDatabaseZoneManager .cxx_destruct]
  -[HMDDatabaseZoneManager setDefaultConfiguration:]
  -[HMDDatabaseZoneManager workQueue]
  -[HMDDatabaseZoneManager database]
  -[HMDDatabaseZoneManager localZone]
  -[HMDDatabaseZoneManager defaultConfiguration]
  -[HMDDatabaseZoneManager home]
  -[HMDDatabaseZoneManager dataSource]
  -[HMDDatabaseZoneManager setDelegate:]
  -[HMDDatabaseZoneManager state]
  -[HMDDatabaseZoneManager delegate]
  -[HMDDatabaseZoneManager remove]
  -[HMDDatabaseZoneManager start]
  -[HMDDatabaseZoneManager cloudZone]
  -[HMDDatabaseZoneManager setCloudZone:]
  -[HMDDatabaseZoneManager setLocalZone:]
  -[HMDDatabaseZoneManager initWithDatabase:zoneName:home:messageTargetUUID:zoneDelegate:workQueue:]
  -[HMDDatabaseZoneManager participantsManager]
  -[HMDDatabaseZoneManager updateShareParticipants]
  -[HMDDatabaseZoneManager shareMessenger]
  -[HMDDatabaseZoneManager setParticipantsManager:]
  -[HMDDatabaseZoneManager manager:didRequestSendForInvitation:toUser:]
  -[HMDDatabaseZoneManager messenger:didReceiveInvitationData:completion:]
  -[HMDDatabaseZoneManager messengerDidReceiveInvitationRequest:]
  -[HMDDatabaseZoneManager database:didCreateZoneWithName:isPrivate:]
  -[HMDDatabaseZoneManager database:didRemoveZoneWithName:isPrivate:]
  -[HMDDatabaseZoneManager database:didReceiveMessageWithUserInfo:]
  -[HMDDatabaseZoneManager participantsManagerFactory]
  -[HMDDatabaseZoneManager setParticipantsManagerFactory:]
  -[HMDDatabaseZoneManager startWithConfiguration:]
  -[HMDDatabaseZoneManager initWithDatabase:zoneName:home:shareMessenger:zoneDelegate:workQueue:]
  -[HMDDatabaseZoneManager _fetchPrivateZonesWithConfiguration:]
  -[HMDDatabaseZoneManager _fetchExistingPrivateZonesWithConfiguration:]
  -[HMDDatabaseZoneManager _fetchSharedZonesWithConfiguration:]
  -[HMDDatabaseZoneManager _tearDownState]
  -[HMDDatabaseZoneManager zoneDelegate]
  -[HMDDatabaseZoneManager _handleFetchZonesResult:configuration:]
  -[HMDDatabaseZoneManager setZoneDelegate:]


AWDHomeKitEventsAggregationReport : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDataSyncState
 @property  NSString *dataSyncState
 @property  BOOL hasProcessLaunchCount
 @property  unsigned int processLaunchCount
 @property  BOOL hasJetsamReasonHighwaterCount
 @property  unsigned int jetsamReasonHighwaterCount
 @property  BOOL hasJetsamReasonProcessLimitCount
 @property  unsigned int jetsamReasonProcessLimitCount
 @property  BOOL hasJetsamReasonUnknownKillCount
 @property  unsigned int jetsamReasonUnknownKillCount
 @property  BOOL hasJetsamReasonOtherCount
 @property  unsigned int jetsamReasonOtherCount
 @property  BOOL hasProcessMemoryPressureStateWarningCount
 @property  unsigned int processMemoryPressureStateWarningCount
 @property  BOOL hasProcessMemoryPressureStateCriticalCount
 @property  unsigned int processMemoryPressureStateCriticalCount
 @property  BOOL hasAverageSampledProcessMemoryUsage
 @property  unsigned int averageSampledProcessMemoryUsage
 @property  BOOL hasPeakSampledProcessMemoryUsage
 @property  unsigned int peakSampledProcessMemoryUsage
 @property  BOOL hasRemoteMessagesSentCount
 @property  unsigned int remoteMessagesSentCount
 @property  BOOL hasRemoteMessagesReceivedCount
 @property  unsigned int remoteMessagesReceivedCount
 @property  BOOL hasAcceptedXPCRequestsCount
 @property  unsigned int acceptedXPCRequestsCount
 @property  BOOL hasErroredXPCRequestsCount
 @property  unsigned int erroredXPCRequestsCount
 @property  BOOL hasSentXPCNotificationsCount
 @property  unsigned int sentXPCNotificationsCount
 @property  BOOL hasFilteredXPCNotificationsCount
 @property  unsigned int filteredXPCNotificationsCount
 @property  BOOL hasHapIPInvalidationCount
 @property  unsigned int hapIPInvalidationCount
 @property  BOOL hasHapIPSentHTTPRequestsCount
 @property  unsigned int hapIPSentHTTPRequestsCount
 @property  BOOL hasHapIPReceivedHTTPResponsesCount
 @property  unsigned int hapIPReceivedHTTPResponsesCount
 @property  BOOL hasHapIPReceivedHTTPEventCount
 @property  unsigned int hapIPReceivedHTTPEventCount
 @property  BOOL hasHapBTLEConnectionsCount
 @property  unsigned int hapBTLEConnectionsCount
 @property  BOOL hasHapBTLEConnectionPerReasonsCount
 @property  unsigned int hapBTLEConnectionPerReasonsCount
 @property  BOOL hasHapBTLEDiscoveriesCount
 @property  unsigned int hapBTLEDiscoveriesCount
 @property  BOOL hasActiveDay
 @property  unsigned int activeDay
 @property  BOOL hasActiveDaysPerMonthCount
 @property  unsigned int activeDaysPerMonthCount

  // instance methods
  -[AWDHomeKitEventsAggregationReport copyWithZone:]
  -[AWDHomeKitEventsAggregationReport .cxx_destruct]
  -[AWDHomeKitEventsAggregationReport timestamp]
  -[AWDHomeKitEventsAggregationReport setTimestamp:]
  -[AWDHomeKitEventsAggregationReport setHasTimestamp:]
  -[AWDHomeKitEventsAggregationReport readFrom:]
  -[AWDHomeKitEventsAggregationReport writeTo:]
  -[AWDHomeKitEventsAggregationReport isEqual:]
  -[AWDHomeKitEventsAggregationReport dataSyncState]
  -[AWDHomeKitEventsAggregationReport setDataSyncState:]
  -[AWDHomeKitEventsAggregationReport copyTo:]
  -[AWDHomeKitEventsAggregationReport dictionaryRepresentation]
  -[AWDHomeKitEventsAggregationReport mergeFrom:]
  -[AWDHomeKitEventsAggregationReport hasTimestamp]
  -[AWDHomeKitEventsAggregationReport processLaunchCount]
  -[AWDHomeKitEventsAggregationReport jetsamReasonHighwaterCount]
  -[AWDHomeKitEventsAggregationReport jetsamReasonProcessLimitCount]
  -[AWDHomeKitEventsAggregationReport jetsamReasonUnknownKillCount]
  -[AWDHomeKitEventsAggregationReport jetsamReasonOtherCount]
  -[AWDHomeKitEventsAggregationReport processMemoryPressureStateWarningCount]
  -[AWDHomeKitEventsAggregationReport processMemoryPressureStateCriticalCount]
  -[AWDHomeKitEventsAggregationReport remoteMessagesSentCount]
  -[AWDHomeKitEventsAggregationReport remoteMessagesReceivedCount]
  -[AWDHomeKitEventsAggregationReport hapIPInvalidationCount]
  -[AWDHomeKitEventsAggregationReport hapIPSentHTTPRequestsCount]
  -[AWDHomeKitEventsAggregationReport hapIPReceivedHTTPResponsesCount]
  -[AWDHomeKitEventsAggregationReport hapIPReceivedHTTPEventCount]
  -[AWDHomeKitEventsAggregationReport hapBTLEConnectionsCount]
  -[AWDHomeKitEventsAggregationReport hapBTLEConnectionPerReasonsCount]
  -[AWDHomeKitEventsAggregationReport hapBTLEDiscoveriesCount]
  -[AWDHomeKitEventsAggregationReport acceptedXPCRequestsCount]
  -[AWDHomeKitEventsAggregationReport erroredXPCRequestsCount]
  -[AWDHomeKitEventsAggregationReport sentXPCNotificationsCount]
  -[AWDHomeKitEventsAggregationReport filteredXPCNotificationsCount]
  -[AWDHomeKitEventsAggregationReport activeDaysPerMonthCount]
  -[AWDHomeKitEventsAggregationReport hasDataSyncState]
  -[AWDHomeKitEventsAggregationReport setProcessLaunchCount:]
  -[AWDHomeKitEventsAggregationReport setHasProcessLaunchCount:]
  -[AWDHomeKitEventsAggregationReport hasProcessLaunchCount]
  -[AWDHomeKitEventsAggregationReport setJetsamReasonHighwaterCount:]
  -[AWDHomeKitEventsAggregationReport setHasJetsamReasonHighwaterCount:]
  -[AWDHomeKitEventsAggregationReport hasJetsamReasonHighwaterCount]
  -[AWDHomeKitEventsAggregationReport setJetsamReasonProcessLimitCount:]
  -[AWDHomeKitEventsAggregationReport setHasJetsamReasonProcessLimitCount:]
  -[AWDHomeKitEventsAggregationReport hasJetsamReasonProcessLimitCount]
  -[AWDHomeKitEventsAggregationReport setJetsamReasonUnknownKillCount:]
  -[AWDHomeKitEventsAggregationReport setHasJetsamReasonUnknownKillCount:]
  -[AWDHomeKitEventsAggregationReport hasJetsamReasonUnknownKillCount]
  -[AWDHomeKitEventsAggregationReport setJetsamReasonOtherCount:]
  -[AWDHomeKitEventsAggregationReport setHasJetsamReasonOtherCount:]
  -[AWDHomeKitEventsAggregationReport hasJetsamReasonOtherCount]
  -[AWDHomeKitEventsAggregationReport setProcessMemoryPressureStateWarningCount:]
  -[AWDHomeKitEventsAggregationReport setHasProcessMemoryPressureStateWarningCount:]
  -[AWDHomeKitEventsAggregationReport hasProcessMemoryPressureStateWarningCount]
  -[AWDHomeKitEventsAggregationReport setProcessMemoryPressureStateCriticalCount:]
  -[AWDHomeKitEventsAggregationReport setHasProcessMemoryPressureStateCriticalCount:]
  -[AWDHomeKitEventsAggregationReport hasProcessMemoryPressureStateCriticalCount]
  -[AWDHomeKitEventsAggregationReport setAverageSampledProcessMemoryUsage:]
  -[AWDHomeKitEventsAggregationReport setHasAverageSampledProcessMemoryUsage:]
  -[AWDHomeKitEventsAggregationReport hasAverageSampledProcessMemoryUsage]
  -[AWDHomeKitEventsAggregationReport setPeakSampledProcessMemoryUsage:]
  -[AWDHomeKitEventsAggregationReport setHasPeakSampledProcessMemoryUsage:]
  -[AWDHomeKitEventsAggregationReport hasPeakSampledProcessMemoryUsage]
  -[AWDHomeKitEventsAggregationReport setRemoteMessagesSentCount:]
  -[AWDHomeKitEventsAggregationReport setHasRemoteMessagesSentCount:]
  -[AWDHomeKitEventsAggregationReport hasRemoteMessagesSentCount]
  -[AWDHomeKitEventsAggregationReport setRemoteMessagesReceivedCount:]
  -[AWDHomeKitEventsAggregationReport setHasRemoteMessagesReceivedCount:]
  -[AWDHomeKitEventsAggregationReport hasRemoteMessagesReceivedCount]
  -[AWDHomeKitEventsAggregationReport setAcceptedXPCRequestsCount:]
  -[AWDHomeKitEventsAggregationReport setHasAcceptedXPCRequestsCount:]
  -[AWDHomeKitEventsAggregationReport hasAcceptedXPCRequestsCount]
  -[AWDHomeKitEventsAggregationReport setErroredXPCRequestsCount:]
  -[AWDHomeKitEventsAggregationReport setHasErroredXPCRequestsCount:]
  -[AWDHomeKitEventsAggregationReport hasErroredXPCRequestsCount]
  -[AWDHomeKitEventsAggregationReport setSentXPCNotificationsCount:]
  -[AWDHomeKitEventsAggregationReport setHasSentXPCNotificationsCount:]
  -[AWDHomeKitEventsAggregationReport hasSentXPCNotificationsCount]
  -[AWDHomeKitEventsAggregationReport setFilteredXPCNotificationsCount:]
  -[AWDHomeKitEventsAggregationReport setHasFilteredXPCNotificationsCount:]
  -[AWDHomeKitEventsAggregationReport hasFilteredXPCNotificationsCount]
  -[AWDHomeKitEventsAggregationReport setHapIPInvalidationCount:]
  -[AWDHomeKitEventsAggregationReport setHasHapIPInvalidationCount:]
  -[AWDHomeKitEventsAggregationReport hasHapIPInvalidationCount]
  -[AWDHomeKitEventsAggregationReport setHapIPSentHTTPRequestsCount:]
  -[AWDHomeKitEventsAggregationReport setHasHapIPSentHTTPRequestsCount:]
  -[AWDHomeKitEventsAggregationReport hasHapIPSentHTTPRequestsCount]
  -[AWDHomeKitEventsAggregationReport setHapIPReceivedHTTPResponsesCount:]
  -[AWDHomeKitEventsAggregationReport setHasHapIPReceivedHTTPResponsesCount:]
  -[AWDHomeKitEventsAggregationReport hasHapIPReceivedHTTPResponsesCount]
  -[AWDHomeKitEventsAggregationReport setHapIPReceivedHTTPEventCount:]
  -[AWDHomeKitEventsAggregationReport setHasHapIPReceivedHTTPEventCount:]
  -[AWDHomeKitEventsAggregationReport hasHapIPReceivedHTTPEventCount]
  -[AWDHomeKitEventsAggregationReport setHapBTLEConnectionsCount:]
  -[AWDHomeKitEventsAggregationReport setHasHapBTLEConnectionsCount:]
  -[AWDHomeKitEventsAggregationReport hasHapBTLEConnectionsCount]
  -[AWDHomeKitEventsAggregationReport setHapBTLEConnectionPerReasonsCount:]
  -[AWDHomeKitEventsAggregationReport setHasHapBTLEConnectionPerReasonsCount:]
  -[AWDHomeKitEventsAggregationReport hasHapBTLEConnectionPerReasonsCount]
  -[AWDHomeKitEventsAggregationReport setHapBTLEDiscoveriesCount:]
  -[AWDHomeKitEventsAggregationReport setHasHapBTLEDiscoveriesCount:]
  -[AWDHomeKitEventsAggregationReport hasHapBTLEDiscoveriesCount]
  -[AWDHomeKitEventsAggregationReport setActiveDay:]
  -[AWDHomeKitEventsAggregationReport setHasActiveDay:]
  -[AWDHomeKitEventsAggregationReport hasActiveDay]
  -[AWDHomeKitEventsAggregationReport setActiveDaysPerMonthCount:]
  -[AWDHomeKitEventsAggregationReport setHasActiveDaysPerMonthCount:]
  -[AWDHomeKitEventsAggregationReport hasActiveDaysPerMonthCount]
  -[AWDHomeKitEventsAggregationReport averageSampledProcessMemoryUsage]
  -[AWDHomeKitEventsAggregationReport peakSampledProcessMemoryUsage]
  -[AWDHomeKitEventsAggregationReport activeDay]


HMDDataStreamSocket : NSObject /usr/lib/libc++.1.dylib <HMDDataStreamSocketPrivate>
 @property  HMDDataStreamStreamProtocol *streamProtocol
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFUnfairLock *lock
 @property  BOOL closed
 @property  NSMutableArray *pendingReads
 @property  <HMDDataStreamSocketDelegate> *delegate
 @property  NSString *applicationProtocolName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDDataStreamSocket isClosed]
  -[HMDDataStreamSocket readData]
  -[HMDDataStreamSocket .cxx_destruct]
  -[HMDDataStreamSocket close]
  -[HMDDataStreamSocket workQueue]
  -[HMDDataStreamSocket closeWithError:]
  -[HMDDataStreamSocket lock]
  -[HMDDataStreamSocket writeData:error:]
  -[HMDDataStreamSocket setClosed:]
  -[HMDDataStreamSocket setDelegate:]
  -[HMDDataStreamSocket delegate]
  -[HMDDataStreamSocket streamProtocol]
  -[HMDDataStreamSocket applicationProtocolName]
  -[HMDDataStreamSocket initWithStreamProtocol:applicationProtocolName:workQueue:]
  -[HMDDataStreamSocket pendingReads]
  -[HMDDataStreamSocket handleIncomingData:]


HMDCameraIDSSessionInviterDeviceVerifier : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *sessionID
 @property  HMDDevice *expectedInviter

  // instance methods
  -[HMDCameraIDSSessionInviterDeviceVerifier sessionID]
  -[HMDCameraIDSSessionInviterDeviceVerifier .cxx_destruct]
  -[HMDCameraIDSSessionInviterDeviceVerifier initWithSessionID:expectedInviter:]
  -[HMDCameraIDSSessionInviterDeviceVerifier expectedInviter]
  -[HMDCameraIDSSessionInviterDeviceVerifier canAcceptInvitationFromDeviceWithHandle:forSessionWithIdentifier:]


HMDStreamingCapabilities : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSDictionary *supportedAudioCodecs
 @property  NSSet *supportedVideoCodecs
 @property  NSSet *supportedVideoResolutions
 @property  NSSet *supportedH264Profiles
 @property  NSSet *supportedH264Levels
 @property  NSSet *supportedPacketizationModes
 @property  NSSet *supportedBitRateSettings
 @property  NSSet *supportedAudioSampleRates
 @property  unsigned long streamingTierType
 @property  BOOL supportsComfortNoise

  // class methods
  +[HMDStreamingCapabilities supportsSecureCoding]
  +[HMDStreamingCapabilities translateCapabilities:]
  +[HMDStreamingCapabilities aspectRatioOfResolution:]

  // instance methods
  -[HMDStreamingCapabilities .cxx_destruct]
  -[HMDStreamingCapabilities encodeWithCoder:]
  -[HMDStreamingCapabilities initWithCoder:]
  -[HMDStreamingCapabilities supportedVideoCodecs]
  -[HMDStreamingCapabilities supportsComfortNoise]
  -[HMDStreamingCapabilities supportedAudioCodecs]
  -[HMDStreamingCapabilities streamingTierType]
  -[HMDStreamingCapabilities supportedVideoResolutions]
  -[HMDStreamingCapabilities _supportedResolutionsWithOverrides]
  -[HMDStreamingCapabilities _updateWithStreamPreference:]
  -[HMDStreamingCapabilities supportedH264Profiles]
  -[HMDStreamingCapabilities supportedH264Levels]
  -[HMDStreamingCapabilities supportedPacketizationModes]
  -[HMDStreamingCapabilities supportedBitRateSettings]
  -[HMDStreamingCapabilities supportedAudioSampleRates]
  -[HMDStreamingCapabilities setStreamingTierType:]
  -[HMDStreamingCapabilities setSupportsComfortNoise:]
  -[HMDStreamingCapabilities initWithStreamPreference:]
  -[HMDStreamingCapabilities updateWithRemoteSettings:]


AWDHomeKitCameraSnapshot : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasCertified
 @property  int certified
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasSessionID
 @property  NSString *sessionID
 @property  BOOL hasErrorCode
 @property  unsigned int errorCode
 @property  BOOL hasIsLocal
 @property  BOOL isLocal
 @property  BOOL hasForNotification
 @property  BOOL forNotification
 @property  BOOL hasIdsSessionSetup
 @property  AWDHomeKitCameraIDSSessionSetup *idsSessionSetup
 @property  BOOL hasSentSnapshotRequestToAccessory
 @property  unsigned int sentSnapshotRequestToAccessory
 @property  BOOL hasReceivedSnapshotFromAccessory
 @property  unsigned int receivedSnapshotFromAccessory
 @property  BOOL hasWatchMessaging
 @property  AWDHomeKitCameraSnapshotMessaging *watchMessaging
 @property  BOOL hasControllerMessaging
 @property  AWDHomeKitCameraSnapshotMessaging *controllerMessaging
 @property  BOOL hasResidentMessaging
 @property  AWDHomeKitCameraSnapshotMessaging *residentMessaging
 @property  BOOL hasResidentToPhone
 @property  AWDHomeKitCameraSnapshotIDSTransfer *residentToPhone
 @property  BOOL hasPhoneToWatch
 @property  AWDHomeKitCameraSnapshotIDSTransfer *phoneToWatch
 @property  BOOL hasUnderlyingErrorDomain
 @property  NSString *underlyingErrorDomain
 @property  BOOL hasUnderlyingErrorCode
 @property  unsigned int underlyingErrorCode

  // instance methods
  -[AWDHomeKitCameraSnapshot setErrorCode:]
  -[AWDHomeKitCameraSnapshot hasSessionID]
  -[AWDHomeKitCameraSnapshot copyWithZone:]
  -[AWDHomeKitCameraSnapshot hasErrorCode]
  -[AWDHomeKitCameraSnapshot setSessionID:]
  -[AWDHomeKitCameraSnapshot sessionID]
  -[AWDHomeKitCameraSnapshot errorCode]
  -[AWDHomeKitCameraSnapshot setHasErrorCode:]
  -[AWDHomeKitCameraSnapshot setUnderlyingErrorDomain:]
  -[AWDHomeKitCameraSnapshot .cxx_destruct]
  -[AWDHomeKitCameraSnapshot timestamp]
  -[AWDHomeKitCameraSnapshot forNotification]
  -[AWDHomeKitCameraSnapshot setTimestamp:]
  -[AWDHomeKitCameraSnapshot setHasTimestamp:]
  -[AWDHomeKitCameraSnapshot readFrom:]
  -[AWDHomeKitCameraSnapshot setForNotification:]
  -[AWDHomeKitCameraSnapshot writeTo:]
  -[AWDHomeKitCameraSnapshot isEqual:]
  -[AWDHomeKitCameraSnapshot copyTo:]
  -[AWDHomeKitCameraSnapshot dictionaryRepresentation]
  -[AWDHomeKitCameraSnapshot hasUnderlyingErrorDomain]
  -[AWDHomeKitCameraSnapshot setUnderlyingErrorCode:]
  -[AWDHomeKitCameraSnapshot setHasUnderlyingErrorCode:]
  -[AWDHomeKitCameraSnapshot hasUnderlyingErrorCode]
  -[AWDHomeKitCameraSnapshot underlyingErrorDomain]
  -[AWDHomeKitCameraSnapshot underlyingErrorCode]
  -[AWDHomeKitCameraSnapshot isLocal]
  -[AWDHomeKitCameraSnapshot setIsLocal:]
  -[AWDHomeKitCameraSnapshot mergeFrom:]
  -[AWDHomeKitCameraSnapshot hasTimestamp]
  -[AWDHomeKitCameraSnapshot setHasIsLocal:]
  -[AWDHomeKitCameraSnapshot hasIsLocal]
  -[AWDHomeKitCameraSnapshot vendorDetails]
  -[AWDHomeKitCameraSnapshot setVendorDetails:]
  -[AWDHomeKitCameraSnapshot hasVendorDetails]
  -[AWDHomeKitCameraSnapshot certified]
  -[AWDHomeKitCameraSnapshot setCertified:]
  -[AWDHomeKitCameraSnapshot setHasCertified:]
  -[AWDHomeKitCameraSnapshot hasCertified]
  -[AWDHomeKitCameraSnapshot certifiedAsString:]
  -[AWDHomeKitCameraSnapshot StringAsCertified:]
  -[AWDHomeKitCameraSnapshot setIdsSessionSetup:]
  -[AWDHomeKitCameraSnapshot setWatchMessaging:]
  -[AWDHomeKitCameraSnapshot setControllerMessaging:]
  -[AWDHomeKitCameraSnapshot setResidentMessaging:]
  -[AWDHomeKitCameraSnapshot hasIdsSessionSetup]
  -[AWDHomeKitCameraSnapshot hasWatchMessaging]
  -[AWDHomeKitCameraSnapshot hasControllerMessaging]
  -[AWDHomeKitCameraSnapshot hasResidentMessaging]
  -[AWDHomeKitCameraSnapshot idsSessionSetup]
  -[AWDHomeKitCameraSnapshot watchMessaging]
  -[AWDHomeKitCameraSnapshot controllerMessaging]
  -[AWDHomeKitCameraSnapshot residentMessaging]
  -[AWDHomeKitCameraSnapshot setResidentToPhone:]
  -[AWDHomeKitCameraSnapshot setPhoneToWatch:]
  -[AWDHomeKitCameraSnapshot setHasForNotification:]
  -[AWDHomeKitCameraSnapshot hasForNotification]
  -[AWDHomeKitCameraSnapshot setSentSnapshotRequestToAccessory:]
  -[AWDHomeKitCameraSnapshot setHasSentSnapshotRequestToAccessory:]
  -[AWDHomeKitCameraSnapshot hasSentSnapshotRequestToAccessory]
  -[AWDHomeKitCameraSnapshot setReceivedSnapshotFromAccessory:]
  -[AWDHomeKitCameraSnapshot setHasReceivedSnapshotFromAccessory:]
  -[AWDHomeKitCameraSnapshot hasReceivedSnapshotFromAccessory]
  -[AWDHomeKitCameraSnapshot hasResidentToPhone]
  -[AWDHomeKitCameraSnapshot hasPhoneToWatch]
  -[AWDHomeKitCameraSnapshot sentSnapshotRequestToAccessory]
  -[AWDHomeKitCameraSnapshot receivedSnapshotFromAccessory]
  -[AWDHomeKitCameraSnapshot residentToPhone]
  -[AWDHomeKitCameraSnapshot phoneToWatch]


HMDCameraRecordingSessionTimelineManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  double fragmentDuration
 @property  NSDate *fragmentCreationReferenceDate
 @property  NSMutableArray *motionActiveDateIntervals
 @property  NSMutableArray *doorbellActiveDateIntervals
 @property  NSString *logIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraRecordingSessionTimelineManager logCategory]

  // instance methods
  -[HMDCameraRecordingSessionTimelineManager logIdentifier]
  -[HMDCameraRecordingSessionTimelineManager attributeDescriptions]
  -[HMDCameraRecordingSessionTimelineManager .cxx_destruct]
  -[HMDCameraRecordingSessionTimelineManager workQueue]
  -[HMDCameraRecordingSessionTimelineManager handleMotionActive:didChangeAtDate:]
  -[HMDCameraRecordingSessionTimelineManager handleDoorbellDidActivateAtDate:]
  -[HMDCameraRecordingSessionTimelineManager initWithWorkQueue:fragmentDuration:fragmentCreationReferenceDate:logIdentifier:]
  -[HMDCameraRecordingSessionTimelineManager fragmentCreationReferenceDate]
  -[HMDCameraRecordingSessionTimelineManager creationDateForFragmentAtTimeOffset:]
  -[HMDCameraRecordingSessionTimelineManager motionActiveDateIntervals]
  -[HMDCameraRecordingSessionTimelineManager doorbellActiveDateIntervals]
  -[HMDCameraRecordingSessionTimelineManager fragmentDuration]
  -[HMDCameraRecordingSessionTimelineManager isMotionTriggerActiveAtAnyTimeAfterOffset:forDuration:]
  -[HMDCameraRecordingSessionTimelineManager isDoorbellTriggerActiveAtAnyTimeAfterOffset:forDuration:]
  -[HMDCameraRecordingSessionTimelineManager isDoorbellTriggerActiveAtAnyTimeAfterOffset:]
  -[HMDCameraRecordingSessionTimelineManager isMotionTriggerActiveAtAnyTimeAfterOffset:]


AWDHomeKitNetworkProtectionReport : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp

  // instance methods
  -[AWDHomeKitNetworkProtectionReport copyWithZone:]
  -[AWDHomeKitNetworkProtectionReport timestamp]
  -[AWDHomeKitNetworkProtectionReport setTimestamp:]
  -[AWDHomeKitNetworkProtectionReport setHasTimestamp:]
  -[AWDHomeKitNetworkProtectionReport readFrom:]
  -[AWDHomeKitNetworkProtectionReport writeTo:]
  -[AWDHomeKitNetworkProtectionReport isEqual:]
  -[AWDHomeKitNetworkProtectionReport copyTo:]
  -[AWDHomeKitNetworkProtectionReport dictionaryRepresentation]
  -[AWDHomeKitNetworkProtectionReport mergeFrom:]
  -[AWDHomeKitNetworkProtectionReport hasTimestamp]


HMDNetworkRouterAccessViolationControlOperation : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long operation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterAccessViolationControlOperation parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterAccessViolationControlOperation copyWithZone:]
  -[HMDNetworkRouterAccessViolationControlOperation setOperation:]
  -[HMDNetworkRouterAccessViolationControlOperation operation]
  -[HMDNetworkRouterAccessViolationControlOperation init]
  -[HMDNetworkRouterAccessViolationControlOperation initWithOperation:]
  -[HMDNetworkRouterAccessViolationControlOperation isEqual:]
  -[HMDNetworkRouterAccessViolationControlOperation parseFromData:error:]
  -[HMDNetworkRouterAccessViolationControlOperation serializeWithError:]


HMDNetworkRouterAdvertisementProtocol : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long advertisementProtocol
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterAdvertisementProtocol parsedFromData:error:]
  +[HMDNetworkRouterAdvertisementProtocol protocolFromFirewallRuleAdvertisingProtocol:]

  // instance methods
  -[HMDNetworkRouterAdvertisementProtocol copyWithZone:]
  -[HMDNetworkRouterAdvertisementProtocol init]
  -[HMDNetworkRouterAdvertisementProtocol isEqual:]
  -[HMDNetworkRouterAdvertisementProtocol parseFromData:error:]
  -[HMDNetworkRouterAdvertisementProtocol serializeWithError:]
  -[HMDNetworkRouterAdvertisementProtocol initWithAdvertisementProtocol:]
  -[HMDNetworkRouterAdvertisementProtocol setAdvertisementProtocol:]
  -[HMDNetworkRouterAdvertisementProtocol advertisementProtocol]


HMDNetworkRouterClientStatusControlOperation : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long operation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientStatusControlOperation parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientStatusControlOperation copyWithZone:]
  -[HMDNetworkRouterClientStatusControlOperation setOperation:]
  -[HMDNetworkRouterClientStatusControlOperation operation]
  -[HMDNetworkRouterClientStatusControlOperation init]
  -[HMDNetworkRouterClientStatusControlOperation initWithOperation:]
  -[HMDNetworkRouterClientStatusControlOperation isEqual:]
  -[HMDNetworkRouterClientStatusControlOperation parseFromData:error:]
  -[HMDNetworkRouterClientStatusControlOperation serializeWithError:]


HMDNetworkRouterControlOperationStatus : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long status
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterControlOperationStatus parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterControlOperationStatus copyWithZone:]
  -[HMDNetworkRouterControlOperationStatus initWithStatus:]
  -[HMDNetworkRouterControlOperationStatus init]
  -[HMDNetworkRouterControlOperationStatus isEqual:]
  -[HMDNetworkRouterControlOperationStatus setStatus:]
  -[HMDNetworkRouterControlOperationStatus status]
  -[HMDNetworkRouterControlOperationStatus parseFromData:error:]
  -[HMDNetworkRouterControlOperationStatus serializeWithError:]


HMDNetworkRouterControlOperation : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long operation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterControlOperation parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterControlOperation copyWithZone:]
  -[HMDNetworkRouterControlOperation setOperation:]
  -[HMDNetworkRouterControlOperation operation]
  -[HMDNetworkRouterControlOperation init]
  -[HMDNetworkRouterControlOperation initWithOperation:]
  -[HMDNetworkRouterControlOperation isEqual:]
  -[HMDNetworkRouterControlOperation parseFromData:error:]
  -[HMDNetworkRouterControlOperation serializeWithError:]


HMDNetworkRouterIPProtocolVersion : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long protocol
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterIPProtocolVersion parsedFromData:error:]
  +[HMDNetworkRouterIPProtocolVersion protocolFromIPProtocolVersion:]

  // instance methods
  -[HMDNetworkRouterIPProtocolVersion protocol]
  -[HMDNetworkRouterIPProtocolVersion copyWithZone:]
  -[HMDNetworkRouterIPProtocolVersion init]
  -[HMDNetworkRouterIPProtocolVersion setProtocol:]
  -[HMDNetworkRouterIPProtocolVersion initWithProtocol:]
  -[HMDNetworkRouterIPProtocolVersion isEqual:]
  -[HMDNetworkRouterIPProtocolVersion parseFromData:error:]
  -[HMDNetworkRouterIPProtocolVersion serializeWithError:]


HMDNetworkRouterLANFirewall : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterLANFirewall parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterLANFirewall copyWithZone:]
  -[HMDNetworkRouterLANFirewall init]
  -[HMDNetworkRouterLANFirewall setType:]
  -[HMDNetworkRouterLANFirewall initWithType:]
  -[HMDNetworkRouterLANFirewall type]
  -[HMDNetworkRouterLANFirewall isEqual:]
  -[HMDNetworkRouterLANFirewall parseFromData:error:]
  -[HMDNetworkRouterLANFirewall serializeWithError:]


HMDNetworkRouterProtocol : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long protocol
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterProtocol parsedFromData:error:]
  +[HMDNetworkRouterProtocol protocolFromTransportProtocol:]

  // instance methods
  -[HMDNetworkRouterProtocol protocol]
  -[HMDNetworkRouterProtocol copyWithZone:]
  -[HMDNetworkRouterProtocol init]
  -[HMDNetworkRouterProtocol setProtocol:]
  -[HMDNetworkRouterProtocol initWithProtocol:]
  -[HMDNetworkRouterProtocol isEqual:]
  -[HMDNetworkRouterProtocol parseFromData:error:]
  -[HMDNetworkRouterProtocol serializeWithError:]


HMDNetworkRouterRuleDirection : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long direction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterRuleDirection parsedFromData:error:]
  +[HMDNetworkRouterRuleDirection directionFromLANDirection:]

  // instance methods
  -[HMDNetworkRouterRuleDirection copyWithZone:]
  -[HMDNetworkRouterRuleDirection init]
  -[HMDNetworkRouterRuleDirection direction]
  -[HMDNetworkRouterRuleDirection initWithDirection:]
  -[HMDNetworkRouterRuleDirection setDirection:]
  -[HMDNetworkRouterRuleDirection isEqual:]
  -[HMDNetworkRouterRuleDirection parseFromData:error:]
  -[HMDNetworkRouterRuleDirection serializeWithError:]


HMDNetworkRouterWANFirewall : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long type
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterWANFirewall parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterWANFirewall copyWithZone:]
  -[HMDNetworkRouterWANFirewall init]
  -[HMDNetworkRouterWANFirewall setType:]
  -[HMDNetworkRouterWANFirewall initWithType:]
  -[HMDNetworkRouterWANFirewall type]
  -[HMDNetworkRouterWANFirewall isEqual:]
  -[HMDNetworkRouterWANFirewall parseFromData:error:]
  -[HMDNetworkRouterWANFirewall serializeWithError:]


HMDNetworkRouterAccessViolation : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *clientIdentifier
 @property  HAPTLVUnsignedNumberValue *lastViolationTimestamp
 @property  HAPTLVUnsignedNumberValue *lastResetTimestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterAccessViolation parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterAccessViolation copyWithZone:]
  -[HMDNetworkRouterAccessViolation init]
  -[HMDNetworkRouterAccessViolation clientIdentifier]
  -[HMDNetworkRouterAccessViolation .cxx_destruct]
  -[HMDNetworkRouterAccessViolation isEqual:]
  -[HMDNetworkRouterAccessViolation setClientIdentifier:]
  -[HMDNetworkRouterAccessViolation parseFromData:error:]
  -[HMDNetworkRouterAccessViolation serializeWithError:]
  -[HMDNetworkRouterAccessViolation setLastViolationTimestamp:]
  -[HMDNetworkRouterAccessViolation setLastResetTimestamp:]
  -[HMDNetworkRouterAccessViolation lastViolationTimestamp]
  -[HMDNetworkRouterAccessViolation lastResetTimestamp]
  -[HMDNetworkRouterAccessViolation initWithClientIdentifier:lastViolationTimestamp:lastResetTimestamp:]


HMDNetworkRouterAccessViolationControl : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HMDNetworkRouterAccessViolationControlOperation *operation
 @property  HMDNetworkRouterClientIdentifierList *clientIdentifierList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterAccessViolationControl parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterAccessViolationControl copyWithZone:]
  -[HMDNetworkRouterAccessViolationControl setOperation:]
  -[HMDNetworkRouterAccessViolationControl operation]
  -[HMDNetworkRouterAccessViolationControl init]
  -[HMDNetworkRouterAccessViolationControl .cxx_destruct]
  -[HMDNetworkRouterAccessViolationControl isEqual:]
  -[HMDNetworkRouterAccessViolationControl parseFromData:error:]
  -[HMDNetworkRouterAccessViolationControl serializeWithError:]
  -[HMDNetworkRouterAccessViolationControl setClientIdentifierList:]
  -[HMDNetworkRouterAccessViolationControl clientIdentifierList]
  -[HMDNetworkRouterAccessViolationControl initWithOperation:clientIdentifierList:]


HMDNetworkRouterAccessViolationControlResponse : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *violations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterAccessViolationControlResponse parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterAccessViolationControlResponse copyWithZone:]
  -[HMDNetworkRouterAccessViolationControlResponse init]
  -[HMDNetworkRouterAccessViolationControlResponse .cxx_destruct]
  -[HMDNetworkRouterAccessViolationControlResponse isEqual:]
  -[HMDNetworkRouterAccessViolationControlResponse parseFromData:error:]
  -[HMDNetworkRouterAccessViolationControlResponse serializeWithError:]
  -[HMDNetworkRouterAccessViolationControlResponse setViolations:]
  -[HMDNetworkRouterAccessViolationControlResponse violations]
  -[HMDNetworkRouterAccessViolationControlResponse initWithViolations:]


HMDNetworkRouterClientConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSUUID *fingerprint
 @property  HAPTLVUnsignedNumberValue *clientIdentifier
 @property  HAPTLVUnsignedNumberValue *lanIdentifier
 @property  HMDNetworkRouterCredential *credential
 @property  HMDNetworkRouterWANFirewallConfiguration *wanFirewallConfiguration
 @property  HMDNetworkRouterLANFirewallConfiguration *lanFirewallConfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientConfiguration parsedFromData:error:]
  +[HMDNetworkRouterClientConfiguration configurationWithClientIdentifier:lanIdentifier:]
  +[HMDNetworkRouterClientConfiguration configurationForOpenProtectionWithClientIdentifier:]
  +[HMDNetworkRouterClientConfiguration configurationForFirewallConfiguration:hapAccessory:withClientIdentifier:]

  // instance methods
  -[HMDNetworkRouterClientConfiguration copyWithZone:]
  -[HMDNetworkRouterClientConfiguration credential]
  -[HMDNetworkRouterClientConfiguration init]
  -[HMDNetworkRouterClientConfiguration clientIdentifier]
  -[HMDNetworkRouterClientConfiguration fingerprint]
  -[HMDNetworkRouterClientConfiguration .cxx_destruct]
  -[HMDNetworkRouterClientConfiguration setCredential:]
  -[HMDNetworkRouterClientConfiguration isEqual:]
  -[HMDNetworkRouterClientConfiguration setClientIdentifier:]
  -[HMDNetworkRouterClientConfiguration parseFromData:error:]
  -[HMDNetworkRouterClientConfiguration serializeWithError:]
  -[HMDNetworkRouterClientConfiguration setLanIdentifier:]
  -[HMDNetworkRouterClientConfiguration setLanFirewallConfiguration:]
  -[HMDNetworkRouterClientConfiguration setWanFirewallConfiguration:]
  -[HMDNetworkRouterClientConfiguration lanFirewallConfiguration]
  -[HMDNetworkRouterClientConfiguration lanIdentifier]
  -[HMDNetworkRouterClientConfiguration wanFirewallConfiguration]
  -[HMDNetworkRouterClientConfiguration initWithClientIdentifier:lanIdentifier:credential:wanFirewallConfiguration:lanFirewallConfiguration:]


HMDNetworkRouterClientControl : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *operations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientControl parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientControl copyWithZone:]
  -[HMDNetworkRouterClientControl operations]
  -[HMDNetworkRouterClientControl init]
  -[HMDNetworkRouterClientControl .cxx_destruct]
  -[HMDNetworkRouterClientControl isEqual:]
  -[HMDNetworkRouterClientControl setOperations:]
  -[HMDNetworkRouterClientControl parseFromData:error:]
  -[HMDNetworkRouterClientControl initWithOperations:]
  -[HMDNetworkRouterClientControl serializeWithError:]


HMDNetworkRouterClientControlOperation : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HMDNetworkRouterControlOperation *operation
 @property  HMDNetworkRouterClientConfiguration *configuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientControlOperation parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientControlOperation copyWithZone:]
  -[HMDNetworkRouterClientControlOperation setOperation:]
  -[HMDNetworkRouterClientControlOperation operation]
  -[HMDNetworkRouterClientControlOperation init]
  -[HMDNetworkRouterClientControlOperation .cxx_destruct]
  -[HMDNetworkRouterClientControlOperation configuration]
  -[HMDNetworkRouterClientControlOperation isEqual:]
  -[HMDNetworkRouterClientControlOperation parseFromData:error:]
  -[HMDNetworkRouterClientControlOperation setConfiguration:]
  -[HMDNetworkRouterClientControlOperation serializeWithError:]
  -[HMDNetworkRouterClientControlOperation initWithOperation:configuration:]


HMDNetworkRouterClientControlOperationResponse : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HMDNetworkRouterControlOperationStatus *status
 @property  HMDNetworkRouterClientConfiguration *configuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientControlOperationResponse parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientControlOperationResponse copyWithZone:]
  -[HMDNetworkRouterClientControlOperationResponse init]
  -[HMDNetworkRouterClientControlOperationResponse .cxx_destruct]
  -[HMDNetworkRouterClientControlOperationResponse configuration]
  -[HMDNetworkRouterClientControlOperationResponse isEqual:]
  -[HMDNetworkRouterClientControlOperationResponse setStatus:]
  -[HMDNetworkRouterClientControlOperationResponse status]
  -[HMDNetworkRouterClientControlOperationResponse parseFromData:error:]
  -[HMDNetworkRouterClientControlOperationResponse setConfiguration:]
  -[HMDNetworkRouterClientControlOperationResponse serializeWithError:]
  -[HMDNetworkRouterClientControlOperationResponse initWithStatus:configuration:]


HMDNetworkRouterClientControlResponse : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *operationResponses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientControlResponse parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientControlResponse copyWithZone:]
  -[HMDNetworkRouterClientControlResponse init]
  -[HMDNetworkRouterClientControlResponse .cxx_destruct]
  -[HMDNetworkRouterClientControlResponse isEqual:]
  -[HMDNetworkRouterClientControlResponse parseFromData:error:]
  -[HMDNetworkRouterClientControlResponse serializeWithError:]
  -[HMDNetworkRouterClientControlResponse setOperationResponses:]
  -[HMDNetworkRouterClientControlResponse operationResponses]
  -[HMDNetworkRouterClientControlResponse initWithOperationResponses:]


HMDNetworkRouterClientIdentifierList : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *clientIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientIdentifierList parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientIdentifierList copyWithZone:]
  -[HMDNetworkRouterClientIdentifierList init]
  -[HMDNetworkRouterClientIdentifierList .cxx_destruct]
  -[HMDNetworkRouterClientIdentifierList clientIdentifiers]
  -[HMDNetworkRouterClientIdentifierList setClientIdentifiers:]
  -[HMDNetworkRouterClientIdentifierList isEqual:]
  -[HMDNetworkRouterClientIdentifierList parseFromData:error:]
  -[HMDNetworkRouterClientIdentifierList serializeWithError:]
  -[HMDNetworkRouterClientIdentifierList initWithClientIdentifiers:]


HMDNetworkRouterClientStatus : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *clientIdentifier
 @property  NSData *macAddress
 @property  HMDNetworkRouterIPAddressList *ipAddressList
 @property  HAPTLVUnsignedNumberValue *lanIdentifier
 @property  NSString *name
 @property  HAPTLVSignedNumberValue *rssi
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientStatus parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientStatus copyWithZone:]
  -[HMDNetworkRouterClientStatus init]
  -[HMDNetworkRouterClientStatus clientIdentifier]
  -[HMDNetworkRouterClientStatus macAddress]
  -[HMDNetworkRouterClientStatus .cxx_destruct]
  -[HMDNetworkRouterClientStatus name]
  -[HMDNetworkRouterClientStatus rssi]
  -[HMDNetworkRouterClientStatus setRssi:]
  -[HMDNetworkRouterClientStatus isEqual:]
  -[HMDNetworkRouterClientStatus setClientIdentifier:]
  -[HMDNetworkRouterClientStatus setName:]
  -[HMDNetworkRouterClientStatus parseFromData:error:]
  -[HMDNetworkRouterClientStatus setMacAddress:]
  -[HMDNetworkRouterClientStatus serializeWithError:]
  -[HMDNetworkRouterClientStatus setLanIdentifier:]
  -[HMDNetworkRouterClientStatus lanIdentifier]
  -[HMDNetworkRouterClientStatus setIpAddressList:]
  -[HMDNetworkRouterClientStatus ipAddressList]
  -[HMDNetworkRouterClientStatus initWithClientIdentifier:macAddress:ipAddressList:lanIdentifier:name:rssi:]


HMDNetworkRouterClientStatusControl : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HMDNetworkRouterClientStatusControlOperation *operation
 @property  HMDNetworkRouterClientStatusIdentifierList *clientStatusIdentifierList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientStatusControl parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientStatusControl copyWithZone:]
  -[HMDNetworkRouterClientStatusControl setOperation:]
  -[HMDNetworkRouterClientStatusControl operation]
  -[HMDNetworkRouterClientStatusControl init]
  -[HMDNetworkRouterClientStatusControl .cxx_destruct]
  -[HMDNetworkRouterClientStatusControl isEqual:]
  -[HMDNetworkRouterClientStatusControl parseFromData:error:]
  -[HMDNetworkRouterClientStatusControl serializeWithError:]
  -[HMDNetworkRouterClientStatusControl setClientStatusIdentifierList:]
  -[HMDNetworkRouterClientStatusControl clientStatusIdentifierList]
  -[HMDNetworkRouterClientStatusControl initWithOperation:clientStatusIdentifierList:]


HMDNetworkRouterClientStatusIdentifier : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *clientIdentifier
 @property  NSData *macAddress
 @property  HMDNetworkRouterIPAddress *ipAddress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientStatusIdentifier parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientStatusIdentifier copyWithZone:]
  -[HMDNetworkRouterClientStatusIdentifier init]
  -[HMDNetworkRouterClientStatusIdentifier clientIdentifier]
  -[HMDNetworkRouterClientStatusIdentifier macAddress]
  -[HMDNetworkRouterClientStatusIdentifier .cxx_destruct]
  -[HMDNetworkRouterClientStatusIdentifier isEqual:]
  -[HMDNetworkRouterClientStatusIdentifier ipAddress]
  -[HMDNetworkRouterClientStatusIdentifier setClientIdentifier:]
  -[HMDNetworkRouterClientStatusIdentifier setIpAddress:]
  -[HMDNetworkRouterClientStatusIdentifier parseFromData:error:]
  -[HMDNetworkRouterClientStatusIdentifier setMacAddress:]
  -[HMDNetworkRouterClientStatusIdentifier serializeWithError:]
  -[HMDNetworkRouterClientStatusIdentifier initWithClientIdentifier:macAddress:ipAddress:]


HMDNetworkRouterClientStatusIdentifierList : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *clientStatusIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientStatusIdentifierList parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientStatusIdentifierList copyWithZone:]
  -[HMDNetworkRouterClientStatusIdentifierList init]
  -[HMDNetworkRouterClientStatusIdentifierList .cxx_destruct]
  -[HMDNetworkRouterClientStatusIdentifierList isEqual:]
  -[HMDNetworkRouterClientStatusIdentifierList parseFromData:error:]
  -[HMDNetworkRouterClientStatusIdentifierList serializeWithError:]
  -[HMDNetworkRouterClientStatusIdentifierList setClientStatusIdentifiers:]
  -[HMDNetworkRouterClientStatusIdentifierList clientStatusIdentifiers]
  -[HMDNetworkRouterClientStatusIdentifierList initWithClientStatusIdentifiers:]


HMDNetworkRouterClientStatusList : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *clientStatuses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientStatusList parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterClientStatusList copyWithZone:]
  -[HMDNetworkRouterClientStatusList init]
  -[HMDNetworkRouterClientStatusList .cxx_destruct]
  -[HMDNetworkRouterClientStatusList isEqual:]
  -[HMDNetworkRouterClientStatusList parseFromData:error:]
  -[HMDNetworkRouterClientStatusList serializeWithError:]
  -[HMDNetworkRouterClientStatusList setClientStatuses:]
  -[HMDNetworkRouterClientStatusList clientStatuses]
  -[HMDNetworkRouterClientStatusList initWithClientStatuses:]


HMDNetworkRouterCredential : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSData *macAddress
 @property  NSData *psk
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterCredential parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterCredential psk]
  -[HMDNetworkRouterCredential copyWithZone:]
  -[HMDNetworkRouterCredential init]
  -[HMDNetworkRouterCredential setPsk:]
  -[HMDNetworkRouterCredential macAddress]
  -[HMDNetworkRouterCredential .cxx_destruct]
  -[HMDNetworkRouterCredential isEqual:]
  -[HMDNetworkRouterCredential parseFromData:error:]
  -[HMDNetworkRouterCredential setMacAddress:]
  -[HMDNetworkRouterCredential serializeWithError:]
  -[HMDNetworkRouterCredential initWithMacAddress:psk:]


HMDNetworkRouterDynamicPortRule : NSObject /usr/lib/libc++.1.dylib <HMDNetworkRouterLANRule, NSCopying, HAPTLVProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDNetworkRouterRuleDirection *direction
 @property  HMDNetworkRouterLANIdentifierList *lanIdentifierList
 @property  HMDNetworkRouterProtocol *protocol
 @property  HMDNetworkRouterAdvertisementProtocol *advertisementProtocol
 @property  HAPTLVUnsignedNumberValue *flags
 @property  HMDNetworkRouterServiceType *serviceType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterDynamicPortRule parsedFromData:error:]
  +[HMDNetworkRouterDynamicPortRule ruleFromFirewallRuleLAN:]
  +[HMDNetworkRouterDynamicPortRule ruleForHAP]

  // instance methods
  -[HMDNetworkRouterDynamicPortRule protocol]
  -[HMDNetworkRouterDynamicPortRule copyWithZone:]
  -[HMDNetworkRouterDynamicPortRule init]
  -[HMDNetworkRouterDynamicPortRule direction]
  -[HMDNetworkRouterDynamicPortRule setFlags:]
  -[HMDNetworkRouterDynamicPortRule setProtocol:]
  -[HMDNetworkRouterDynamicPortRule setServiceType:]
  -[HMDNetworkRouterDynamicPortRule .cxx_destruct]
  -[HMDNetworkRouterDynamicPortRule setDirection:]
  -[HMDNetworkRouterDynamicPortRule serviceType]
  -[HMDNetworkRouterDynamicPortRule addTo:]
  -[HMDNetworkRouterDynamicPortRule isEqual:]
  -[HMDNetworkRouterDynamicPortRule flags]
  -[HMDNetworkRouterDynamicPortRule parseFromData:error:]
  -[HMDNetworkRouterDynamicPortRule serializeWithError:]
  -[HMDNetworkRouterDynamicPortRule initWithDirection:lanIdentifierList:protocol:advertisementProtocol:flags:serviceType:]
  -[HMDNetworkRouterDynamicPortRule setAdvertisementProtocol:]
  -[HMDNetworkRouterDynamicPortRule advertisementProtocol]
  -[HMDNetworkRouterDynamicPortRule setLanIdentifierList:]
  -[HMDNetworkRouterDynamicPortRule lanIdentifierList]


HMDNetworkRouterICMPType : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HMDNetworkRouterIPProtocolVersion *protocol
 @property  HAPTLVUnsignedNumberValue *typeValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterICMPType parsedFromData:error:]
  +[HMDNetworkRouterICMPType typeFromICMPType:]

  // instance methods
  -[HMDNetworkRouterICMPType protocol]
  -[HMDNetworkRouterICMPType copyWithZone:]
  -[HMDNetworkRouterICMPType init]
  -[HMDNetworkRouterICMPType setProtocol:]
  -[HMDNetworkRouterICMPType .cxx_destruct]
  -[HMDNetworkRouterICMPType typeValue]
  -[HMDNetworkRouterICMPType isEqual:]
  -[HMDNetworkRouterICMPType parseFromData:error:]
  -[HMDNetworkRouterICMPType serializeWithError:]
  -[HMDNetworkRouterICMPType initWithProtocol:typeValue:]
  -[HMDNetworkRouterICMPType setTypeValue:]


HMDNetworkRouterICMPTypeList : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *types
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterICMPTypeList parsedFromData:error:]
  +[HMDNetworkRouterICMPTypeList typeListFromICMPTypes:]

  // instance methods
  -[HMDNetworkRouterICMPTypeList setTypes:]
  -[HMDNetworkRouterICMPTypeList copyWithZone:]
  -[HMDNetworkRouterICMPTypeList types]
  -[HMDNetworkRouterICMPTypeList init]
  -[HMDNetworkRouterICMPTypeList initWithTypes:]
  -[HMDNetworkRouterICMPTypeList .cxx_destruct]
  -[HMDNetworkRouterICMPTypeList isEqual:]
  -[HMDNetworkRouterICMPTypeList parseFromData:error:]
  -[HMDNetworkRouterICMPTypeList serializeWithError:]


HMDNetworkRouterIPAddress : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSData *v4
 @property  NSData *v6
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterIPAddress parsedFromData:error:]
  +[HMDNetworkRouterIPAddress ipAddressFromNetAddress:error:]
  +[HMDNetworkRouterIPAddress ipAddressFromRuleAddress:allowWildcard:]

  // instance methods
  -[HMDNetworkRouterIPAddress v4]
  -[HMDNetworkRouterIPAddress v6]
  -[HMDNetworkRouterIPAddress copyWithZone:]
  -[HMDNetworkRouterIPAddress init]
  -[HMDNetworkRouterIPAddress setV4:]
  -[HMDNetworkRouterIPAddress .cxx_destruct]
  -[HMDNetworkRouterIPAddress setV6:]
  -[HMDNetworkRouterIPAddress isEqual:]
  -[HMDNetworkRouterIPAddress parseFromData:error:]
  -[HMDNetworkRouterIPAddress serializeWithError:]
  -[HMDNetworkRouterIPAddress initWithV4:v6:]


HMDNetworkRouterIPAddressList : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *addresses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterIPAddressList parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterIPAddressList copyWithZone:]
  -[HMDNetworkRouterIPAddressList addresses]
  -[HMDNetworkRouterIPAddressList init]
  -[HMDNetworkRouterIPAddressList initWithAddresses:]
  -[HMDNetworkRouterIPAddressList .cxx_destruct]
  -[HMDNetworkRouterIPAddressList isEqual:]
  -[HMDNetworkRouterIPAddressList setAddresses:]
  -[HMDNetworkRouterIPAddressList parseFromData:error:]
  -[HMDNetworkRouterIPAddressList serializeWithError:]


HMDNetworkRouterLANFirewallConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HMDNetworkRouterLANFirewall *type
 @property  HMDNetworkRouterLANFirewallRuleList *ruleList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterLANFirewallConfiguration parsedFromData:error:]
  +[HMDNetworkRouterLANFirewallConfiguration configurationWithFullAccess]
  +[HMDNetworkRouterLANFirewallConfiguration configurationFromFirewallRuleConfiguration:]

  // instance methods
  -[HMDNetworkRouterLANFirewallConfiguration copyWithZone:]
  -[HMDNetworkRouterLANFirewallConfiguration init]
  -[HMDNetworkRouterLANFirewallConfiguration setType:]
  -[HMDNetworkRouterLANFirewallConfiguration .cxx_destruct]
  -[HMDNetworkRouterLANFirewallConfiguration type]
  -[HMDNetworkRouterLANFirewallConfiguration isEqual:]
  -[HMDNetworkRouterLANFirewallConfiguration parseFromData:error:]
  -[HMDNetworkRouterLANFirewallConfiguration ruleList]
  -[HMDNetworkRouterLANFirewallConfiguration setRuleList:]
  -[HMDNetworkRouterLANFirewallConfiguration serializeWithError:]
  -[HMDNetworkRouterLANFirewallConfiguration initWithType:ruleList:]


HMDNetworkRouterLANFirewallRuleList : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *multicastBridgingRules
 @property  NSMutableArray *staticPortRules
 @property  NSMutableArray *dynamicPortRules
 @property  NSMutableArray *staticICMPRules
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterLANFirewallRuleList parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterLANFirewallRuleList copyWithZone:]
  -[HMDNetworkRouterLANFirewallRuleList init]
  -[HMDNetworkRouterLANFirewallRuleList .cxx_destruct]
  -[HMDNetworkRouterLANFirewallRuleList isEqual:]
  -[HMDNetworkRouterLANFirewallRuleList parseFromData:error:]
  -[HMDNetworkRouterLANFirewallRuleList serializeWithError:]
  -[HMDNetworkRouterLANFirewallRuleList dynamicPortRules]
  -[HMDNetworkRouterLANFirewallRuleList setDynamicPortRules:]
  -[HMDNetworkRouterLANFirewallRuleList multicastBridgingRules]
  -[HMDNetworkRouterLANFirewallRuleList setMulticastBridgingRules:]
  -[HMDNetworkRouterLANFirewallRuleList staticPortRules]
  -[HMDNetworkRouterLANFirewallRuleList setStaticPortRules:]
  -[HMDNetworkRouterLANFirewallRuleList staticICMPRules]
  -[HMDNetworkRouterLANFirewallRuleList setStaticICMPRules:]
  -[HMDNetworkRouterLANFirewallRuleList initWithMulticastBridgingRules:staticPortRules:dynamicPortRules:staticICMPRules:]


HMDNetworkRouterLANIdentifierList : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *identifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterLANIdentifierList parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterLANIdentifierList copyWithZone:]
  -[HMDNetworkRouterLANIdentifierList identifiers]
  -[HMDNetworkRouterLANIdentifierList setIdentifiers:]
  -[HMDNetworkRouterLANIdentifierList init]
  -[HMDNetworkRouterLANIdentifierList .cxx_destruct]
  -[HMDNetworkRouterLANIdentifierList isEqual:]
  -[HMDNetworkRouterLANIdentifierList initWithIdentifiers:]
  -[HMDNetworkRouterLANIdentifierList parseFromData:error:]
  -[HMDNetworkRouterLANIdentifierList serializeWithError:]


HMDNetworkRouterMulticastBridgingRule : NSObject /usr/lib/libc++.1.dylib <HMDNetworkRouterLANRule, NSCopying, HAPTLVProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDNetworkRouterRuleDirection *direction
 @property  HMDNetworkRouterLANIdentifierList *lanIdentifierList
 @property  HMDNetworkRouterIPAddress *destinationIPAddress
 @property  HAPTLVUnsignedNumberValue *destinationPort
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterMulticastBridgingRule parsedFromData:error:]
  +[HMDNetworkRouterMulticastBridgingRule ruleFromFirewallRuleLAN:]

  // instance methods
  -[HMDNetworkRouterMulticastBridgingRule copyWithZone:]
  -[HMDNetworkRouterMulticastBridgingRule init]
  -[HMDNetworkRouterMulticastBridgingRule direction]
  -[HMDNetworkRouterMulticastBridgingRule .cxx_destruct]
  -[HMDNetworkRouterMulticastBridgingRule setDirection:]
  -[HMDNetworkRouterMulticastBridgingRule addTo:]
  -[HMDNetworkRouterMulticastBridgingRule isEqual:]
  -[HMDNetworkRouterMulticastBridgingRule parseFromData:error:]
  -[HMDNetworkRouterMulticastBridgingRule serializeWithError:]
  -[HMDNetworkRouterMulticastBridgingRule initWithDirection:lanIdentifierList:destinationIPAddress:destinationPort:]
  -[HMDNetworkRouterMulticastBridgingRule setLanIdentifierList:]
  -[HMDNetworkRouterMulticastBridgingRule lanIdentifierList]
  -[HMDNetworkRouterMulticastBridgingRule setDestinationIPAddress:]
  -[HMDNetworkRouterMulticastBridgingRule setDestinationPort:]
  -[HMDNetworkRouterMulticastBridgingRule destinationIPAddress]
  -[HMDNetworkRouterMulticastBridgingRule destinationPort]


HMDNetworkRouterServiceType : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSString *name
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterServiceType parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterServiceType copyWithZone:]
  -[HMDNetworkRouterServiceType initWithName:]
  -[HMDNetworkRouterServiceType init]
  -[HMDNetworkRouterServiceType .cxx_destruct]
  -[HMDNetworkRouterServiceType name]
  -[HMDNetworkRouterServiceType isEqual:]
  -[HMDNetworkRouterServiceType setName:]
  -[HMDNetworkRouterServiceType parseFromData:error:]
  -[HMDNetworkRouterServiceType serializeWithError:]


HMDNetworkRouterStaticICMPRule : NSObject /usr/lib/libc++.1.dylib <HMDNetworkRouterLANRule, NSCopying, HAPTLVProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDNetworkRouterRuleDirection *direction
 @property  HMDNetworkRouterLANIdentifierList *lanIdentifierList
 @property  HMDNetworkRouterIPAddress *destinationIPAddress
 @property  HMDNetworkRouterICMPTypeList *icmpTypeList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterStaticICMPRule parsedFromData:error:]
  +[HMDNetworkRouterStaticICMPRule ruleFromFirewallRuleLAN:]

  // instance methods
  -[HMDNetworkRouterStaticICMPRule copyWithZone:]
  -[HMDNetworkRouterStaticICMPRule init]
  -[HMDNetworkRouterStaticICMPRule direction]
  -[HMDNetworkRouterStaticICMPRule .cxx_destruct]
  -[HMDNetworkRouterStaticICMPRule setDirection:]
  -[HMDNetworkRouterStaticICMPRule addTo:]
  -[HMDNetworkRouterStaticICMPRule isEqual:]
  -[HMDNetworkRouterStaticICMPRule parseFromData:error:]
  -[HMDNetworkRouterStaticICMPRule serializeWithError:]
  -[HMDNetworkRouterStaticICMPRule initWithDirection:lanIdentifierList:destinationIPAddress:icmpTypeList:]
  -[HMDNetworkRouterStaticICMPRule setLanIdentifierList:]
  -[HMDNetworkRouterStaticICMPRule lanIdentifierList]
  -[HMDNetworkRouterStaticICMPRule setDestinationIPAddress:]
  -[HMDNetworkRouterStaticICMPRule destinationIPAddress]
  -[HMDNetworkRouterStaticICMPRule setIcmpTypeList:]
  -[HMDNetworkRouterStaticICMPRule icmpTypeList]


HMDNetworkRouterStaticPortRule : NSObject /usr/lib/libc++.1.dylib <HMDNetworkRouterLANRule, NSCopying, HAPTLVProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDNetworkRouterRuleDirection *direction
 @property  HMDNetworkRouterLANIdentifierList *lanIdentifierList
 @property  HMDNetworkRouterProtocol *protocol
 @property  HMDNetworkRouterIPAddress *destinationIPAddress
 @property  HAPTLVUnsignedNumberValue *destinationPortStart
 @property  HAPTLVUnsignedNumberValue *destinationPortEnd
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterStaticPortRule parsedFromData:error:]
  +[HMDNetworkRouterStaticPortRule ruleFromFirewallRuleLAN:]

  // instance methods
  -[HMDNetworkRouterStaticPortRule protocol]
  -[HMDNetworkRouterStaticPortRule copyWithZone:]
  -[HMDNetworkRouterStaticPortRule init]
  -[HMDNetworkRouterStaticPortRule direction]
  -[HMDNetworkRouterStaticPortRule setProtocol:]
  -[HMDNetworkRouterStaticPortRule .cxx_destruct]
  -[HMDNetworkRouterStaticPortRule setDirection:]
  -[HMDNetworkRouterStaticPortRule addTo:]
  -[HMDNetworkRouterStaticPortRule isEqual:]
  -[HMDNetworkRouterStaticPortRule parseFromData:error:]
  -[HMDNetworkRouterStaticPortRule serializeWithError:]
  -[HMDNetworkRouterStaticPortRule initWithDirection:lanIdentifierList:protocol:destinationIPAddress:destinationPortStart:destinationPortEnd:]
  -[HMDNetworkRouterStaticPortRule setLanIdentifierList:]
  -[HMDNetworkRouterStaticPortRule lanIdentifierList]
  -[HMDNetworkRouterStaticPortRule setDestinationIPAddress:]
  -[HMDNetworkRouterStaticPortRule destinationIPAddress]
  -[HMDNetworkRouterStaticPortRule setDestinationPortStart:]
  -[HMDNetworkRouterStaticPortRule setDestinationPortEnd:]
  -[HMDNetworkRouterStaticPortRule destinationPortStart]
  -[HMDNetworkRouterStaticPortRule destinationPortEnd]


HMDNetworkRouterWANFirewallConfiguration : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HMDNetworkRouterWANFirewall *type
 @property  HMDNetworkRouterWANFirewallRuleList *ruleList
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterWANFirewallConfiguration parsedFromData:error:]
  +[HMDNetworkRouterWANFirewallConfiguration configurationWithFullAccess]
  +[HMDNetworkRouterWANFirewallConfiguration configurationFromFirewallRuleConfiguration:]

  // instance methods
  -[HMDNetworkRouterWANFirewallConfiguration copyWithZone:]
  -[HMDNetworkRouterWANFirewallConfiguration init]
  -[HMDNetworkRouterWANFirewallConfiguration setType:]
  -[HMDNetworkRouterWANFirewallConfiguration .cxx_destruct]
  -[HMDNetworkRouterWANFirewallConfiguration type]
  -[HMDNetworkRouterWANFirewallConfiguration isEqual:]
  -[HMDNetworkRouterWANFirewallConfiguration parseFromData:error:]
  -[HMDNetworkRouterWANFirewallConfiguration ruleList]
  -[HMDNetworkRouterWANFirewallConfiguration setRuleList:]
  -[HMDNetworkRouterWANFirewallConfiguration serializeWithError:]
  -[HMDNetworkRouterWANFirewallConfiguration initWithType:ruleList:]


HMDNetworkRouterWANFirewallRuleList : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *portRules
 @property  NSMutableArray *icmpRules
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterWANFirewallRuleList parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterWANFirewallRuleList copyWithZone:]
  -[HMDNetworkRouterWANFirewallRuleList init]
  -[HMDNetworkRouterWANFirewallRuleList .cxx_destruct]
  -[HMDNetworkRouterWANFirewallRuleList isEqual:]
  -[HMDNetworkRouterWANFirewallRuleList parseFromData:error:]
  -[HMDNetworkRouterWANFirewallRuleList serializeWithError:]
  -[HMDNetworkRouterWANFirewallRuleList portRules]
  -[HMDNetworkRouterWANFirewallRuleList setPortRules:]
  -[HMDNetworkRouterWANFirewallRuleList icmpRules]
  -[HMDNetworkRouterWANFirewallRuleList setIcmpRules:]
  -[HMDNetworkRouterWANFirewallRuleList initWithPortRules:icmpRules:]


HMDNetworkRouterWANICMPRule : NSObject /usr/lib/libc++.1.dylib <HMDNetworkRouterWANRule, NSCopying, HAPTLVProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *hostDNSName
 @property  HMDNetworkRouterIPAddress *hostIPStart
 @property  HMDNetworkRouterIPAddress *hostIPEnd
 @property  HMDNetworkRouterICMPTypeList *icmpTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterWANICMPRule parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterWANICMPRule copyWithZone:]
  -[HMDNetworkRouterWANICMPRule init]
  -[HMDNetworkRouterWANICMPRule .cxx_destruct]
  -[HMDNetworkRouterWANICMPRule addTo:]
  -[HMDNetworkRouterWANICMPRule isEqual:]
  -[HMDNetworkRouterWANICMPRule parseFromData:error:]
  -[HMDNetworkRouterWANICMPRule serializeWithError:]
  -[HMDNetworkRouterWANICMPRule icmpTypes]
  -[HMDNetworkRouterWANICMPRule initWithHostDNSName:hostIPStart:hostIPEnd:icmpTypes:]
  -[HMDNetworkRouterWANICMPRule setHostDNSName:]
  -[HMDNetworkRouterWANICMPRule setHostIPStart:]
  -[HMDNetworkRouterWANICMPRule setHostIPEnd:]
  -[HMDNetworkRouterWANICMPRule setIcmpTypes:]
  -[HMDNetworkRouterWANICMPRule hostDNSName]
  -[HMDNetworkRouterWANICMPRule hostIPStart]
  -[HMDNetworkRouterWANICMPRule hostIPEnd]


HMDNetworkRouterWANPortRule : NSObject /usr/lib/libc++.1.dylib <HMDNetworkRouterWANRule, NSCopying, HAPTLVProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDNetworkRouterProtocol *protocol
 @property  NSString *hostDNSName
 @property  HMDNetworkRouterIPAddress *hostIPStart
 @property  HMDNetworkRouterIPAddress *hostIPEnd
 @property  HAPTLVUnsignedNumberValue *hostPortStart
 @property  HAPTLVUnsignedNumberValue *hostPortEnd
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterWANPortRule parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterWANPortRule protocol]
  -[HMDNetworkRouterWANPortRule copyWithZone:]
  -[HMDNetworkRouterWANPortRule init]
  -[HMDNetworkRouterWANPortRule setProtocol:]
  -[HMDNetworkRouterWANPortRule .cxx_destruct]
  -[HMDNetworkRouterWANPortRule addTo:]
  -[HMDNetworkRouterWANPortRule isEqual:]
  -[HMDNetworkRouterWANPortRule parseFromData:error:]
  -[HMDNetworkRouterWANPortRule serializeWithError:]
  -[HMDNetworkRouterWANPortRule initWithProtocol:hostDNSName:hostIPStart:hostIPEnd:hostPortStart:hostPortEnd:]
  -[HMDNetworkRouterWANPortRule setHostDNSName:]
  -[HMDNetworkRouterWANPortRule setHostIPStart:]
  -[HMDNetworkRouterWANPortRule setHostIPEnd:]
  -[HMDNetworkRouterWANPortRule hostDNSName]
  -[HMDNetworkRouterWANPortRule hostIPStart]
  -[HMDNetworkRouterWANPortRule hostIPEnd]
  -[HMDNetworkRouterWANPortRule setHostPortStart:]
  -[HMDNetworkRouterWANPortRule setHostPortEnd:]
  -[HMDNetworkRouterWANPortRule hostPortStart]
  -[HMDNetworkRouterWANPortRule hostPortEnd]


HMDNetworkRouterWANStatus : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HAPTLVUnsignedNumberValue *identifier
 @property  HAPTLVUnsignedNumberValue *status
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterWANStatus parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterWANStatus copyWithZone:]
  -[HMDNetworkRouterWANStatus init]
  -[HMDNetworkRouterWANStatus .cxx_destruct]
  -[HMDNetworkRouterWANStatus setIdentifier:]
  -[HMDNetworkRouterWANStatus identifier]
  -[HMDNetworkRouterWANStatus isEqual:]
  -[HMDNetworkRouterWANStatus setStatus:]
  -[HMDNetworkRouterWANStatus status]
  -[HMDNetworkRouterWANStatus parseFromData:error:]
  -[HMDNetworkRouterWANStatus serializeWithError:]
  -[HMDNetworkRouterWANStatus initWithIdentifier:status:]


HMDNetworkRouterWANStatusList : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  NSMutableArray *statuses
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterWANStatusList parsedFromData:error:]

  // instance methods
  -[HMDNetworkRouterWANStatusList copyWithZone:]
  -[HMDNetworkRouterWANStatusList init]
  -[HMDNetworkRouterWANStatusList .cxx_destruct]
  -[HMDNetworkRouterWANStatusList isEqual:]
  -[HMDNetworkRouterWANStatusList parseFromData:error:]
  -[HMDNetworkRouterWANStatusList serializeWithError:]
  -[HMDNetworkRouterWANStatusList setStatuses:]
  -[HMDNetworkRouterWANStatusList statuses]
  -[HMDNetworkRouterWANStatusList initWithStatuses:]


AWDHomeKitCameraStreamIDSConnSetup : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasVideoConnection
 @property  AWDHomeKitCameraStreamIDSConnSetupParameters *videoConnection
 @property  BOOL hasAudioConnection
 @property  AWDHomeKitCameraStreamIDSConnSetupParameters *audioConnection
 @property  BOOL hasKeepaliveConnection
 @property  AWDHomeKitCameraStreamIDSConnSetupParameters *keepaliveConnection

  // instance methods
  -[AWDHomeKitCameraStreamIDSConnSetup copyWithZone:]
  -[AWDHomeKitCameraStreamIDSConnSetup .cxx_destruct]
  -[AWDHomeKitCameraStreamIDSConnSetup readFrom:]
  -[AWDHomeKitCameraStreamIDSConnSetup writeTo:]
  -[AWDHomeKitCameraStreamIDSConnSetup isEqual:]
  -[AWDHomeKitCameraStreamIDSConnSetup copyTo:]
  -[AWDHomeKitCameraStreamIDSConnSetup dictionaryRepresentation]
  -[AWDHomeKitCameraStreamIDSConnSetup mergeFrom:]
  -[AWDHomeKitCameraStreamIDSConnSetup setVideoConnection:]
  -[AWDHomeKitCameraStreamIDSConnSetup setAudioConnection:]
  -[AWDHomeKitCameraStreamIDSConnSetup setKeepaliveConnection:]
  -[AWDHomeKitCameraStreamIDSConnSetup hasVideoConnection]
  -[AWDHomeKitCameraStreamIDSConnSetup hasAudioConnection]
  -[AWDHomeKitCameraStreamIDSConnSetup hasKeepaliveConnection]
  -[AWDHomeKitCameraStreamIDSConnSetup videoConnection]
  -[AWDHomeKitCameraStreamIDSConnSetup audioConnection]
  -[AWDHomeKitCameraStreamIDSConnSetup keepaliveConnection]


HMDDataMigrationEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  AWDHomeKitDataModelMigration *metric
 @property  unsigned long migrationStart
 @property  unsigned long migrationEnd
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDataMigrationEvent uuid]

  // instance methods
  -[HMDDataMigrationEvent init]
  -[HMDDataMigrationEvent .cxx_destruct]
  -[HMDDataMigrationEvent metric]
  -[HMDDataMigrationEvent AWDMessageType]
  -[HMDDataMigrationEvent metricForAWD]
  -[HMDDataMigrationEvent migrationCompleted]
  -[HMDDataMigrationEvent migrationDurationInMilliseconds]
  -[HMDDataMigrationEvent migrationStart]
  -[HMDDataMigrationEvent migrationEnd]


HMDKeyTransferAgentClient : HMDKeyTransferAgent <HMFNetServiceDelegate, HMFTimerDelegate, HMFNetMonitorDelegate, HMFNetServiceBrowserDelegate>
 @property  HMFNetServiceBrowser *serviceBrowser
 @property  NSMutableDictionary *idsKeys
 @property  NSMutableDictionary *bonjourKeys
 @property  NSMutableSet *targetsToProcess
 @property  BOOL resolutionInProgress
 @property  NSString *pairingWithUUID
 @property  HMFExponentialBackoffTimer *atHomeRetryTimer
 @property  unsigned long residentProvisioningStatus
 @property  HMFNetMonitor *netMonitor
 @property  BOOL haveCulledPlist
 @property  long long tfaState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDKeyTransferAgentClient logCategory]
  +[HMDKeyTransferAgentClient twoFactorAuthenticationEnabledForAccount:altDSID:completionHandler:]

  // instance methods
  -[HMDKeyTransferAgentClient timerDidFire:]
  -[HMDKeyTransferAgentClient logIdentifier]
  -[HMDKeyTransferAgentClient dealloc]
  -[HMDKeyTransferAgentClient initWithHomeManager:]
  -[HMDKeyTransferAgentClient .cxx_destruct]
  -[HMDKeyTransferAgentClient _handleResidentProvisioningStatusChanged:]
  -[HMDKeyTransferAgentClient residentProvisioningStatus]
  -[HMDKeyTransferAgentClient idsKeys]
  -[HMDKeyTransferAgentClient setResidentProvisioningStatus:]
  -[HMDKeyTransferAgentClient netServiceBrowser:didAddService:]
  -[HMDKeyTransferAgentClient netServiceBrowser:didStopBrowsingWithError:]
  -[HMDKeyTransferAgentClient _handleKeyTransferAgentMessage:]
  -[HMDKeyTransferAgentClient _startBrowser]
  -[HMDKeyTransferAgentClient __accessoryIsReachable:]
  -[HMDKeyTransferAgentClient __deviceAddedToAccount:]
  -[HMDKeyTransferAgentClient __deviceUpdated:]
  -[HMDKeyTransferAgentClient __deviceRemovedFromAccount:]
  -[HMDKeyTransferAgentClient __accountChanged:]
  -[HMDKeyTransferAgentClient queryPlistDevices]
  -[HMDKeyTransferAgentClient atHomeRetryTimer]
  -[HMDKeyTransferAgentClient pairingWithUUID]
  -[HMDKeyTransferAgentClient _restartKeyTransfer:]
  -[HMDKeyTransferAgentClient haveCulledPlist]
  -[HMDKeyTransferAgentClient setHaveCulledPlist:]
  -[HMDKeyTransferAgentClient _stopBrowser]
  -[HMDKeyTransferAgentClient _deviceWithUUID:]
  -[HMDKeyTransferAgentClient _saveKeyPlist]
  -[HMDKeyTransferAgentClient setPairingWithUUID:]
  -[HMDKeyTransferAgentClient serviceBrowser]
  -[HMDKeyTransferAgentClient setServiceBrowser:]
  -[HMDKeyTransferAgentClient setResolutionInProgress:]
  -[HMDKeyTransferAgentClient _beginBonjourResolution:]
  -[HMDKeyTransferAgentClient resolutionInProgress]
  -[HMDKeyTransferAgentClient _reallyBeginBonjourResolution]
  -[HMDKeyTransferAgentClient bonjourKeys]
  -[HMDKeyTransferAgentClient targetsToProcess]
  -[HMDKeyTransferAgentClient _newDeviceSeen:]
  -[HMDKeyTransferAgentClient tfaState]
  -[HMDKeyTransferAgentClient _tfaVerificationCompleteForKeyUUID:forTarget:]
  -[HMDKeyTransferAgentClient setTfaState:]
  -[HMDKeyTransferAgentClient _haveVerifiedTwoFactorAuthenticationWithKeyUUID:forTarget:]
  -[HMDKeyTransferAgentClient _endPairingWithError:suspendingTimer:]
  -[HMDKeyTransferAgentClient _tryPairingWithAccessories:completionHandler:]
  -[HMDKeyTransferAgentClient _havePairVerifiedAccessoryWithKeyUUID:forDevice:]
  -[HMDKeyTransferAgentClient _sendIOSPublicKey:withDevice:]
  -[HMDKeyTransferAgentClient _sendATVPrivateKey:withDevice:retry:]
  -[HMDKeyTransferAgentClient _startPairingWithKeyUUID:forTarget:]
  -[HMDKeyTransferAgentClient _device:addedToAccount:]
  -[HMDKeyTransferAgentClient _device:removedFromAccount:]
  -[HMDKeyTransferAgentClient receivedBonjourTXTFrom:withUUIDData:]
  -[HMDKeyTransferAgentClient netService:didUpdateTXTRecord:]
  -[HMDKeyTransferAgentClient networkMonitorIsReachable:]
  -[HMDKeyTransferAgentClient resetConfig]
  -[HMDKeyTransferAgentClient setIdsKeys:]
  -[HMDKeyTransferAgentClient setBonjourKeys:]
  -[HMDKeyTransferAgentClient setTargetsToProcess:]
  -[HMDKeyTransferAgentClient setAtHomeRetryTimer:]
  -[HMDKeyTransferAgentClient netMonitor]
  -[HMDKeyTransferAgentClient setNetMonitor:]


HMDSignificantTimeEvent : HMDTimeEvent <NSSecureCoding, HMFDumpState, HMFLogging, HMDHomeMessageReceiver>
 @property  NSString *significantEvent
 @property  NSDateComponents *offset
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDSignificantTimeEvent supportsSecureCoding]
  +[HMDSignificantTimeEvent logCategory]

  // instance methods
  -[HMDSignificantTimeEvent significantEvent]
  -[HMDSignificantTimeEvent .cxx_destruct]
  -[HMDSignificantTimeEvent setOffset:]
  -[HMDSignificantTimeEvent encodeWithCoder:]
  -[HMDSignificantTimeEvent setSignificantEvent:]
  -[HMDSignificantTimeEvent offset]
  -[HMDSignificantTimeEvent initWithCoder:]
  -[HMDSignificantTimeEvent emptyModelObject]
  -[HMDSignificantTimeEvent _transactionObjectUpdated:newValues:message:]
  -[HMDSignificantTimeEvent _transactionObjectRemoved:message:]
  -[HMDSignificantTimeEvent modelObjectWithChangeType:]
  -[HMDSignificantTimeEvent createPayload]
  -[HMDSignificantTimeEvent initWithModel:home:]
  -[HMDSignificantTimeEvent _handleUpdateRequest:]
  -[HMDSignificantTimeEvent _nextTimerDate]
  -[HMDSignificantTimeEvent analyticsTriggerEventData]


HMDSignificantTimeEventModel : HMDEventModel
 @property  NSString *significantEvent
 @property  NSData *offset

  // class methods
  +[HMDSignificantTimeEventModel properties]
  +[HMDSignificantTimeEventModel eventModelWithDictionary:home:eventTriggerUUID:message:]


HMDCharacteristicMetadata : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, NSCopying, HMFDumpState>
 @property  NSNumber *minimumValue
 @property  NSNumber *maximumValue
 @property  NSNumber *stepValue
 @property  NSNumber *maxLength
 @property  NSString *format
 @property  NSString *units
 @property  NSString *manufacturerDescription
 @property  NSArray *validValues
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCharacteristicMetadata supportsSecureCoding]
  +[HMDCharacteristicMetadata characteristicMetadataWithDictionary:]

  // instance methods
  -[HMDCharacteristicMetadata copyWithZone:]
  -[HMDCharacteristicMetadata stepValue]
  -[HMDCharacteristicMetadata format]
  -[HMDCharacteristicMetadata units]
  -[HMDCharacteristicMetadata init]
  -[HMDCharacteristicMetadata manufacturerDescription]
  -[HMDCharacteristicMetadata .cxx_destruct]
  -[HMDCharacteristicMetadata encodeWithCoder:]
  -[HMDCharacteristicMetadata maximumValue]
  -[HMDCharacteristicMetadata validValues]
  -[HMDCharacteristicMetadata maxLength]
  -[HMDCharacteristicMetadata isEqual:]
  -[HMDCharacteristicMetadata minimumValue]
  -[HMDCharacteristicMetadata dictionaryRepresentation]
  -[HMDCharacteristicMetadata dumpState]
  -[HMDCharacteristicMetadata initWithCoder:]
  -[HMDCharacteristicMetadata initWithMinimumValue:maximumValue:stepValue:maxLength:validValues:format:units:manufacturerDescription:]
  -[HMDCharacteristicMetadata _descriptionDetails]


HMDXPCActivityInterface : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDXPCActivityInterfacing>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDXPCActivityInterface stateForXPCActivity:]
  -[HMDXPCActivityInterface registerXPCActivityWithActivityIdentifier:criteria:activityBlock:]
  -[HMDXPCActivityInterface criteriaForXPCActivity:]
  -[HMDXPCActivityInterface setCriteria:forXPCActivity:]
  -[HMDXPCActivityInterface setState:forXPCActivity:]
  -[HMDXPCActivityInterface unregisterXPCActivityWithActivityIdentifier:]


HMDNaturalLightingCurve : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, NSSecureCoding, NSCopying>
 @property  unsigned long colorTemperatureNotifyIntervalThresholdInMilliseconds
 @property  unsigned long colorTemperatureUpdateIntervalInMilliseconds
 @property  unsigned long colorTemperatureNotifyValueChangeThreshold
 @property  unsigned long version
 @property  NSArray *transitionPoints
 @property  long long minimumBrightness
 @property  long long maximumBrightness
 @property  long long minimumColorTemperature
 @property  long long maximumColorTemperature
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNaturalLightingCurve supportsSecureCoding]
  +[HMDNaturalLightingCurve logCategory]
  +[HMDNaturalLightingCurve colorTemperatureMiredsFromKelvins:]

  // instance methods
  -[HMDNaturalLightingCurve copyWithZone:]
  -[HMDNaturalLightingCurve attributeDescriptions]
  -[HMDNaturalLightingCurve .cxx_destruct]
  -[HMDNaturalLightingCurve encodeWithCoder:]
  -[HMDNaturalLightingCurve isEqual:]
  -[HMDNaturalLightingCurve maximumBrightness]
  -[HMDNaturalLightingCurve version]
  -[HMDNaturalLightingCurve mutableCopyWithZone:]
  -[HMDNaturalLightingCurve initWithCoder:]
  -[HMDNaturalLightingCurve transitionPoints]
  -[HMDNaturalLightingCurve minimumBrightness]
  -[HMDNaturalLightingCurve initWithVersion:transitionPoints:minimumBrightness:maximumBrightness:minimumColorTemperature:maximumColorTemperature:]
  -[HMDNaturalLightingCurve colorTemperatureNotifyIntervalThresholdInMilliseconds]
  -[HMDNaturalLightingCurve setColorTemperatureNotifyIntervalThresholdInMilliseconds:]
  -[HMDNaturalLightingCurve colorTemperatureNotifyValueChangeThreshold]
  -[HMDNaturalLightingCurve setColorTemperatureNotifyValueChangeThreshold:]
  -[HMDNaturalLightingCurve colorTemperatureUpdateIntervalInMilliseconds]
  -[HMDNaturalLightingCurve setColorTemperatureUpdateIntervalInMilliseconds:]
  -[HMDNaturalLightingCurve minimumColorTemperature]
  -[HMDNaturalLightingCurve maximumColorTemperature]
  -[HMDNaturalLightingCurve transitionPointsWithmillisecondsElapsedSinceStartOfDay:]
  -[HMDNaturalLightingCurve initWithCurve:minimumColorTemperature:maximumColorTemperature:]
  -[HMDNaturalLightingCurve colorTemperatureForBrightness:millisecondsElapsedSinceStartOfDay:]


HMDMutableNaturalLightingCurve : HMDNaturalLightingCurve
 @property  unsigned long colorTemperatureNotifyValueChangeThreshold
 @property  unsigned long colorTemperatureNotifyIntervalThresholdInMilliseconds
 @property  unsigned long colorTemperatureUpdateIntervalInMilliseconds

  // instance methods
  -[HMDMutableNaturalLightingCurve copyWithZone:]


HMDXPCMessageTransport : HMFMessageTransport /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSXPCListenerDelegate, HMFLogging, HMFMessageTransportDelegate>
 @property  NSXPCListener *listener
 @property  HMDProcessMonitor *processMonitor
 @property  HMDApplicationRegistry *applicationRegistry
 @property  NSArray *connections
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDXPCMessageTransport logCategory]
  +[HMDXPCMessageTransport defaultTransport]

  // instance methods
  -[HMDXPCMessageTransport connections]
  -[HMDXPCMessageTransport sendMessage:completionHandler:]
  -[HMDXPCMessageTransport listener]
  -[HMDXPCMessageTransport messageTransport:didReceiveMessage:]
  -[HMDXPCMessageTransport init]
  -[HMDXPCMessageTransport .cxx_destruct]
  -[HMDXPCMessageTransport processMonitor]
  -[HMDXPCMessageTransport listener:shouldAcceptNewConnection:]
  -[HMDXPCMessageTransport stop]
  -[HMDXPCMessageTransport activeRequests]
  -[HMDXPCMessageTransport dumpState]
  -[HMDXPCMessageTransport start]
  -[HMDXPCMessageTransport submitCounters]
  -[HMDXPCMessageTransport resetCounters]
  -[HMDXPCMessageTransport applicationRegistry]


HMDActiveSiriSessionInfo : NSObject /usr/lib/libc++.1.dylib <HMFLogging>
 @property  <HMDActiveSiriSessionInfoDelegate> *delegate
 @property  <HMDDataStreamBulkSendSession> *bulkSendSession
 @property  BOOL didBulkSendSessionFail
 @property  BOOL didBulkSendSessionComplete
 @property  BOOL didSiriSessionStart
 @property  BOOL didSiriSessionStop
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDActiveSiriSessionInfo logCategory]

  // instance methods
  -[HMDActiveSiriSessionInfo initWithIdentifier:delegate:]
  -[HMDActiveSiriSessionInfo .cxx_destruct]
  -[HMDActiveSiriSessionInfo identifier]
  -[HMDActiveSiriSessionInfo setDelegate:]
  -[HMDActiveSiriSessionInfo invalidate]
  -[HMDActiveSiriSessionInfo delegate]
  -[HMDActiveSiriSessionInfo _bulkSendDidFail]
  -[HMDActiveSiriSessionInfo _handleFrame:]
  -[HMDActiveSiriSessionInfo _bulkSendDidComplete]
  -[HMDActiveSiriSessionInfo isBulkSendActive]
  -[HMDActiveSiriSessionInfo didBulkSendSessionFail]
  -[HMDActiveSiriSessionInfo didBulkSendSessionComplete]
  -[HMDActiveSiriSessionInfo didSiriSessionStart]
  -[HMDActiveSiriSessionInfo didSiriSessionStop]
  -[HMDActiveSiriSessionInfo bulkSendSession]
  -[HMDActiveSiriSessionInfo setDidSiriSessionStart:]
  -[HMDActiveSiriSessionInfo _doReadAudioFrames]
  -[HMDActiveSiriSessionInfo setBulkSendSession:]
  -[HMDActiveSiriSessionInfo isSiriSessionActive]
  -[HMDActiveSiriSessionInfo setDidBulkSendSessionFail:]
  -[HMDActiveSiriSessionInfo setDidBulkSendSessionComplete:]
  -[HMDActiveSiriSessionInfo markSiriPluginReady]
  -[HMDActiveSiriSessionInfo markSiriPluginStopped]
  -[HMDActiveSiriSessionInfo setActiveBulkSendSession:]
  -[HMDActiveSiriSessionInfo setDidSiriSessionStop:]


HMDCompanionManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, IDSServiceDelegate>
 @property  IDSService *service
 @property  HMDDevice *companion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCompanionManager logCategory]
  +[HMDCompanionManager shortDescription]
  +[HMDCompanionManager sharedManager]
  +[HMDCompanionManager isCompatibleCompanionDevice:]

  // instance methods
  -[HMDCompanionManager init]
  -[HMDCompanionManager attributeDescriptions]
  -[HMDCompanionManager .cxx_destruct]
  -[HMDCompanionManager service:connectedDevicesChanged:]
  -[HMDCompanionManager service:devicesChanged:]
  -[HMDCompanionManager service]
  -[HMDCompanionManager companion]
  -[HMDCompanionManager __initializeConnectedDevices]


HMDEventTriggerSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFDumpState, HMFLogging, HMDHomeMessageReceiver>
 @property  NSUUID *sessionID
 @property  NSString *logString
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDEventTrigger *eventTrigger
 @property  NSUUID *eventTriggerUUID
 @property  HMDDevice *currentDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDEventTriggerSession logCategory]
  +[HMDEventTriggerSession hasMessageReceiverChildren]

  // instance methods
  -[HMDEventTriggerSession logString]
  -[HMDEventTriggerSession messageTargetUUID]
  -[HMDEventTriggerSession messageReceiveQueue]
  -[HMDEventTriggerSession sessionID]
  -[HMDEventTriggerSession logIdentifier]
  -[HMDEventTriggerSession setEventTrigger:]
  -[HMDEventTriggerSession dealloc]
  -[HMDEventTriggerSession .cxx_destruct]
  -[HMDEventTriggerSession workQueue]
  -[HMDEventTriggerSession msgDispatcher]
  -[HMDEventTriggerSession _registerForMessages]
  -[HMDEventTriggerSession currentDevice]
  -[HMDEventTriggerSession eventTrigger]
  -[HMDEventTriggerSession dumpState]
  -[HMDEventTriggerSession eventTriggerUUID]
  -[HMDEventTriggerSession sendMessage:payload:device:responseHandler:]
  -[HMDEventTriggerSession sendMessage:payload:device:target:responseHandler:]
  -[HMDEventTriggerSession initWithSessionID:eventTrigger:workQueue:msgDispatcher:]
  -[HMDEventTriggerSession sendResidentMessage:payload:responseHandler:]


HMDZone : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDHomeMessageReceiver, HMFDumpState, NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHome *home
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSString *name
 @property  NSUUID *uuid
 @property  NSMutableDictionary *currentRooms
 @property  NSMutableArray *roomUUIDs
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDZone supportsSecureCoding]
  +[HMDZone hasMessageReceiverChildren]

  // instance methods
  -[HMDZone messageTargetUUID]
  -[HMDZone messageReceiveQueue]
  -[HMDZone setWorkQueue:]
  -[HMDZone rooms]
  -[HMDZone uuid]
  -[HMDZone dealloc]
  -[HMDZone .cxx_destruct]
  -[HMDZone name]
  -[HMDZone workQueue]
  -[HMDZone setHome:]
  -[HMDZone encodeWithCoder:]
  -[HMDZone urlString]
  -[HMDZone setMsgDispatcher:]
  -[HMDZone msgDispatcher]
  -[HMDZone _registerForMessages]
  -[HMDZone roomUUIDs]
  -[HMDZone setRoomUUIDs:]
  -[HMDZone removeRoom:]
  -[HMDZone currentRooms]
  -[HMDZone roomWithUUID:]
  -[HMDZone setCurrentRooms:]
  -[HMDZone roomWithName:]
  -[HMDZone home]
  -[HMDZone setName:]
  -[HMDZone dumpState]
  -[HMDZone initWithCoder:]
  -[HMDZone transactionObjectUpdated:newValues:message:]
  -[HMDZone transactionObjectRemoved:message:]
  -[HMDZone modelObjectWithChangeType:]
  -[HMDZone backingStoreObjects:]
  -[HMDZone configure:queue:]
  -[HMDZone _handleRename:]
  -[HMDZone _handleAddRoom:]
  -[HMDZone _handleRemoveRoom:]
  -[HMDZone initWithName:uuid:home:queue:]
  -[HMDZone updateZoneWithModel:message:]
  -[HMDZone assistantObject]
  -[HMDZone _handleSetRoomsZoneTransaction:error:]
  -[HMDZone _checkForAddValidity:room:]
  -[HMDZone _handleRenameZoneTransaction:error:]


HMDZoneModel : HMDBackingStoreModelObject
 @property  NSString *name
 @property  NSArray *roomUUIDs

  // class methods
  +[HMDZoneModel properties]

  // instance methods
  -[HMDZoneModel dependentUUIDs]


HMDUnassociatedWACAccessory : HMDUnassociatedAccessory <HMFLogging, HMFTimerDelegate>
 @property  <HMDWACDevice> *wacDevice
 @property  <HMDWACAccessoryConfigurationDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSString *wacDeviceID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUnassociatedWACAccessory logCategory]

  // instance methods
  -[HMDUnassociatedWACAccessory timerDidFire:]
  -[HMDUnassociatedWACAccessory logIdentifier]
  -[HMDUnassociatedWACAccessory delegateQueue]
  -[HMDUnassociatedWACAccessory .cxx_destruct]
  -[HMDUnassociatedWACAccessory startConfigurationWithCompletionHandler:]
  -[HMDUnassociatedWACAccessory _abort:]
  -[HMDUnassociatedWACAccessory delegate]
  -[HMDUnassociatedWACAccessory wacDevice]
  -[HMDUnassociatedWACAccessory transportTypes]
  -[HMDUnassociatedWACAccessory cancelConfigurationWithCompletionHandler:]
  -[HMDUnassociatedWACAccessory _postWACMatchingAccessoryFound:]
  -[HMDUnassociatedWACAccessory _userPermissionResponse:]
  -[HMDUnassociatedWACAccessory _configureDeviceCompleted:]
  -[HMDUnassociatedWACAccessory setDelegate:withQueue:]
  -[HMDUnassociatedWACAccessory initWithIdentifier:name:category:messageDispatcher:wacDevice:]
  -[HMDUnassociatedWACAccessory setWACDevice:]
  -[HMDUnassociatedWACAccessory wacDeviceID]
  -[HMDUnassociatedWACAccessory updateWithMatchingUnassociatedAccessory:]
  -[HMDUnassociatedWACAccessory _requestUserPermission]
  -[HMDUnassociatedWACAccessory _configureDevice]
  -[HMDUnassociatedWACAccessory _waitForPostWACMatch]
  -[HMDUnassociatedWACAccessory _postWACMatchTimeout]


HMDActiveXPCConnectionLogEvent : HMDLogEvent
 @property  NSString *name
 @property  BOOL activated
 @property  BOOL added

  // class methods
  +[HMDActiveXPCConnectionLogEvent identifier]
  +[HMDActiveXPCConnectionLogEvent initWithNewXPCConnectionAdded:]
  +[HMDActiveXPCConnectionLogEvent initWithXPCConnectionRemoved:]

  // instance methods
  -[HMDActiveXPCConnectionLogEvent isActivated]
  -[HMDActiveXPCConnectionLogEvent .cxx_destruct]
  -[HMDActiveXPCConnectionLogEvent name]
  -[HMDActiveXPCConnectionLogEvent added]
  -[HMDActiveXPCConnectionLogEvent initWithXPCConnection:added:]


HMDRemoteMessageFilter : HMFMessageFilter /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // class methods
  +[HMDRemoteMessageFilter policyClasses]
  +[HMDRemoteMessageFilter canInitWithMessage:]

  // instance methods
  -[HMDRemoteMessageFilter acceptWithPolicies:error:]


HMDXPCMessageCountTracker : NSObject /usr/lib/libc++.1.dylib <HMFLogging>
 @property  NSDate *lastResetDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDXPCMessageCountTracker logCategory]
  +[HMDXPCMessageCountTracker xpcCounterTracker]

  // instance methods
  -[HMDXPCMessageCountTracker init]
  -[HMDXPCMessageCountTracker log]
  -[HMDXPCMessageCountTracker lastResetDate]
  -[HMDXPCMessageCountTracker .cxx_destruct]
  -[HMDXPCMessageCountTracker __init]
  -[HMDXPCMessageCountTracker dumpState]
  -[HMDXPCMessageCountTracker incrementCounterOfType:identifier:]
  -[HMDXPCMessageCountTracker submitCounters]
  -[HMDXPCMessageCountTracker resetCounters]
  -[HMDXPCMessageCountTracker _countersOfType:]
  -[HMDXPCMessageCountTracker _incrementCounterOfType:identifier:]
  -[HMDXPCMessageCountTracker countersOfType:]
  -[HMDXPCMessageCountTracker setLastResetDate:]


HMDSnapshotLocalSession : HMDSnapshotSession
  // instance methods
  -[HMDSnapshotLocalSession addMessage:]
  -[HMDSnapshotLocalSession initWithSessionID:accessory:snapshotGetter:message:waitPeriod:reachabilityPath:cameraLocallyReachable:snapshotForNotification:]


HMDAccessoryNetworkProtectionGroup : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  HMDHome *home
 @property  long long targetProtectionMode
 @property  NSString *manufacturer
 @property  NSNumber *category
 @property  NSUUID *uuid
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessoryNetworkProtectionGroup supportsSecureCoding]

  // instance methods
  -[HMDAccessoryNetworkProtectionGroup category]
  -[HMDAccessoryNetworkProtectionGroup manufacturer]
  -[HMDAccessoryNetworkProtectionGroup uuid]
  -[HMDAccessoryNetworkProtectionGroup .cxx_destruct]
  -[HMDAccessoryNetworkProtectionGroup setManufacturer:]
  -[HMDAccessoryNetworkProtectionGroup setHome:]
  -[HMDAccessoryNetworkProtectionGroup encodeWithCoder:]
  -[HMDAccessoryNetworkProtectionGroup targetProtectionMode]
  -[HMDAccessoryNetworkProtectionGroup setTargetProtectionMode:]
  -[HMDAccessoryNetworkProtectionGroup home]
  -[HMDAccessoryNetworkProtectionGroup isEqual:]
  -[HMDAccessoryNetworkProtectionGroup initWithModel:]
  -[HMDAccessoryNetworkProtectionGroup setCategory:]
  -[HMDAccessoryNetworkProtectionGroup initWithCoder:]
  -[HMDAccessoryNetworkProtectionGroup transactionObjectUpdated:newValues:message:]
  -[HMDAccessoryNetworkProtectionGroup transactionObjectRemoved:message:]
  -[HMDAccessoryNetworkProtectionGroup configureWithHome:]
  -[HMDAccessoryNetworkProtectionGroup modelForVersion:]
  -[HMDAccessoryNetworkProtectionGroup modelWithObjectChangeType:]
  -[HMDAccessoryNetworkProtectionGroup initWithUUID:manufacturer:category:targetProtectionMode:]


HMDAuthServer : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  MFAATokenManager *tokenManager
 @property  HMFTimer *retryTimer
 @property  long long retryCount
 @property  NSLocale *locale
 @property  NSString *model
 @property  id context
 @property  NSData *token
 @property  NSUUID *uuid
 @property  unsigned long authFeatures
 @property  unsigned long currentOperation
 @property  <HMDAuthServerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAuthServer logCategory]

  // instance methods
  -[HMDAuthServer setRetryCount:]
  -[HMDAuthServer context]
  -[HMDAuthServer timerDidFire:]
  -[HMDAuthServer initWithDelegate:]
  -[HMDAuthServer setRetryTimer:]
  -[HMDAuthServer setLocale:]
  -[HMDAuthServer retryTimer]
  -[HMDAuthServer retryCount]
  -[HMDAuthServer locale]
  -[HMDAuthServer uuid]
  -[HMDAuthServer .cxx_destruct]
  -[HMDAuthServer setModel:]
  -[HMDAuthServer workQueue]
  -[HMDAuthServer setUuid:]
  -[HMDAuthServer setContext:]
  -[HMDAuthServer token]
  -[HMDAuthServer setToken:]
  -[HMDAuthServer currentOperation]
  -[HMDAuthServer model]
  -[HMDAuthServer delegate]
  -[HMDAuthServer resumeRetryIfPending]
  -[HMDAuthServer _reportFailureWithContext:error:]
  -[HMDAuthServer resetRetryOperation]
  -[HMDAuthServer retryOrReportFailure:context:]
  -[HMDAuthServer setAuthFeatures:]
  -[HMDAuthServer setCurrentOperation:]
  -[HMDAuthServer authFeatures]
  -[HMDAuthServer sendPPIDInfoRequest:model:token:authFeatures:uuid:context:]
  -[HMDAuthServer sendActivationRequest:uuid:context:]
  -[HMDAuthServer sendActivationConfirmation:uuid:context:]
  -[HMDAuthServer _handleResponseMetadata:ppid:locale:context:error:]
  -[HMDAuthServer saveRetryOperation:token:authFeatures:uuid:context:locale:model:]
  -[HMDAuthServer tokenManager]
  -[HMDAuthServer getPPIDInfo:model:cert:context:]


HMDLightProfileNaturalLightingAction : HMDAction
 @property  HMFUnfairLock *lock
 @property  BOOL naturalLightingEnabled
 @property  NSNotificationCenter *notificationCenter
 @property  NSUUID *lightProfileUUID
 @property  HMDLightProfile *lightProfile

  // class methods
  +[HMDLightProfileNaturalLightingAction supportsSecureCoding]
  +[HMDLightProfileNaturalLightingAction logCategory]
  +[HMDLightProfileNaturalLightingAction actionWithDictionaryRepresentation:home:]
  +[HMDLightProfileNaturalLightingAction actionWithDictionaryRepresentation:actionSet:]

  // instance methods
  -[HMDLightProfileNaturalLightingAction notificationCenter]
  -[HMDLightProfileNaturalLightingAction attributeDescriptions]
  -[HMDLightProfileNaturalLightingAction lightProfile]
  -[HMDLightProfileNaturalLightingAction .cxx_destruct]
  -[HMDLightProfileNaturalLightingAction lock]
  -[HMDLightProfileNaturalLightingAction encodeWithCoder:]
  -[HMDLightProfileNaturalLightingAction type]
  -[HMDLightProfileNaturalLightingAction setLightProfile:]
  -[HMDLightProfileNaturalLightingAction modelClass]
  -[HMDLightProfileNaturalLightingAction dictionaryRepresentation]
  -[HMDLightProfileNaturalLightingAction isNaturalLightingEnabled]
  -[HMDLightProfileNaturalLightingAction initWithCoder:]
  -[HMDLightProfileNaturalLightingAction setNaturalLightingEnabled:]
  -[HMDLightProfileNaturalLightingAction lightProfileUUID]
  -[HMDLightProfileNaturalLightingAction associatedAccessories]
  -[HMDLightProfileNaturalLightingAction isAssociatedWithAccessory:]
  -[HMDLightProfileNaturalLightingAction modelObjectWithChangeType:version:]
  -[HMDLightProfileNaturalLightingAction transactionObjectUpdated:newValues:message:]
  -[HMDLightProfileNaturalLightingAction stateDump]
  -[HMDLightProfileNaturalLightingAction initWithModelObject:parent:error:]
  -[HMDLightProfileNaturalLightingAction configureWithHome:]
  -[HMDLightProfileNaturalLightingAction initWithUUID:lightProfileUUID:naturalLightingEnabled:actionSet:notificationCenter:]
  -[HMDLightProfileNaturalLightingAction initWithUUID:lightProfileUUID:naturalLightingEnabled:actionSet:]
  -[HMDLightProfileNaturalLightingAction handleAccessoryProfileAddedNotification:]


HMDIncomingCloudPushLogEvent : HMDLogEvent
 @property  NSString *topic

  // class methods
  +[HMDIncomingCloudPushLogEvent uuid]
  +[HMDIncomingCloudPushLogEvent incomingCloudPush:]

  // instance methods
  -[HMDIncomingCloudPushLogEvent topic]
  -[HMDIncomingCloudPushLogEvent .cxx_destruct]
  -[HMDIncomingCloudPushLogEvent initWithTopic:]


HMDCloudFetchLogEvent : HMDLogEvent
  // class methods
  +[HMDCloudFetchLogEvent uuid]
  +[HMDCloudFetchLogEvent fetchFromCloud]


HMDUploadStartingLogEvent : HMDLogEvent
 @property  NSString *saveReason

  // class methods
  +[HMDUploadStartingLogEvent uuid]
  +[HMDUploadStartingLogEvent uploadReason:]

  // instance methods
  -[HMDUploadStartingLogEvent .cxx_destruct]
  -[HMDUploadStartingLogEvent initUploadReason:]
  -[HMDUploadStartingLogEvent saveReason]


HMDUploadCompletedLogEvent : HMDLogEvent
 @property  NSError *error

  // class methods
  +[HMDUploadCompletedLogEvent uuid]
  +[HMDUploadCompletedLogEvent uploadCompletedWithError:]

  // instance methods
  -[HMDUploadCompletedLogEvent .cxx_destruct]
  -[HMDUploadCompletedLogEvent error]
  -[HMDUploadCompletedLogEvent initUploadWithError:]


HMDUploadMaximumDelayEvent : HMDLogEvent
  // class methods
  +[HMDUploadMaximumDelayEvent uuid]
  +[HMDUploadMaximumDelayEvent uploadMaximumDelay]


HMDDecryptionCompletedEvent : HMDLogEvent
 @property  BOOL didDecryptionFail

  // class methods
  +[HMDDecryptionCompletedEvent uuid]
  +[HMDDecryptionCompletedEvent decryptionCompletedWithFailure:]

  // instance methods
  -[HMDDecryptionCompletedEvent initWithFailure:]
  -[HMDDecryptionCompletedEvent didDecryptionFail]
  -[HMDDecryptionCompletedEvent setDidDecryptionFail:]


HMDDataSyncStateEvent : HMDLogEvent
 @property  unsigned long dataSyncState

  // class methods
  +[HMDDataSyncStateEvent uuid]
  +[HMDDataSyncStateEvent dataSyncStateEstablished:]

  // instance methods
  -[HMDDataSyncStateEvent dataSyncState]
  -[HMDDataSyncStateEvent setDataSyncState:]
  -[HMDDataSyncStateEvent initWithDataSyncState:]


HMDHomeManagerFetchLogEvent : HMDLogEvent
  // class methods
  +[HMDHomeManagerFetchLogEvent uuid]
  +[HMDHomeManagerFetchLogEvent fetchFromHomeManager]


HMDHomeZoneFetchLogEvent : HMDLogEvent
  // class methods
  +[HMDHomeZoneFetchLogEvent uuid]
  +[HMDHomeZoneFetchLogEvent fetchFromHomeZone]


HMDHomeManagerUploadLogEvent : HMDLogEvent
  // class methods
  +[HMDHomeManagerUploadLogEvent uuid]
  +[HMDHomeManagerUploadLogEvent uploadToHomeManager]


HMDHomeZoneUploadLogEvent : HMDLogEvent
  // class methods
  +[HMDHomeZoneUploadLogEvent uuid]
  +[HMDHomeZoneUploadLogEvent uploadToHomeZone]


HMDRecordsSavedLogEvent : HMDLogEvent
 @property  unsigned long size
 @property  BOOL legacy

  // class methods
  +[HMDRecordsSavedLogEvent uuid]

  // instance methods
  -[HMDRecordsSavedLogEvent size]
  -[HMDRecordsSavedLogEvent isLegacy]
  -[HMDRecordsSavedLogEvent initWithSavedRecords:isLegacy:]


HMDRecordChangedLogEvent : HMDLogEvent
 @property  unsigned long size
 @property  BOOL legacy

  // class methods
  +[HMDRecordChangedLogEvent uuid]

  // instance methods
  -[HMDRecordChangedLogEvent size]
  -[HMDRecordChangedLogEvent isLegacy]
  -[HMDRecordChangedLogEvent initWithChangedRecord:isLegacy:]


HMDCameraConfigurationsLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *homeSettingsConfigurations

  // class methods
  +[HMDCameraConfigurationsLogEvent uuid]

  // instance methods
  -[HMDCameraConfigurationsLogEvent .cxx_destruct]
  -[HMDCameraConfigurationsLogEvent AWDMessageType]
  -[HMDCameraConfigurationsLogEvent metricForAWD]
  -[HMDCameraConfigurationsLogEvent initWithHomes:]
  -[HMDCameraConfigurationsLogEvent homeSettingsConfigurations]


HMDCameraHomeSettingsConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSArray *cameraSettings
 @property  NSArray *userSettings
 @property  unsigned long enabledResidentsDeviceCapabilities
 @property  BOOL faceClassificationEnabled
 @property  BOOL owner

  // instance methods
  -[HMDCameraHomeSettingsConfiguration userSettings]
  -[HMDCameraHomeSettingsConfiguration isOwner]
  -[HMDCameraHomeSettingsConfiguration .cxx_destruct]
  -[HMDCameraHomeSettingsConfiguration isFaceClassificationEnabled]
  -[HMDCameraHomeSettingsConfiguration initWithHome:]
  -[HMDCameraHomeSettingsConfiguration cameraSettings]
  -[HMDCameraHomeSettingsConfiguration enabledResidentsDeviceCapabilities]


HMDCameraAccessorySettingsConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableArray *numPointsInActivityZones
 @property  BOOL isRecordingCapable
 @property  BOOL isRecordingEnabled
 @property  BOOL isRecordingAudioEnabled
 @property  unsigned long recordingEventTriggers
 @property  unsigned long numActivityZones
 @property  BOOL inclusionZone
 @property  BOOL smartBulletinBoardNotificationEnabled
 @property  BOOL reachabilityNotificationEnabled

  // instance methods
  -[HMDCameraAccessorySettingsConfiguration .cxx_destruct]
  -[HMDCameraAccessorySettingsConfiguration recordingEventTriggers]
  -[HMDCameraAccessorySettingsConfiguration isRecordingAudioEnabled]
  -[HMDCameraAccessorySettingsConfiguration isRecordingEnabled]
  -[HMDCameraAccessorySettingsConfiguration initWithCameraAccessory:]
  -[HMDCameraAccessorySettingsConfiguration numActivityZones]
  -[HMDCameraAccessorySettingsConfiguration isRecordingCapable]
  -[HMDCameraAccessorySettingsConfiguration numPointsInActivityZones]
  -[HMDCameraAccessorySettingsConfiguration setNumPointsInActivityZones:]
  -[HMDCameraAccessorySettingsConfiguration inclusionZone]
  -[HMDCameraAccessorySettingsConfiguration smartBulletinBoardNotificationEnabled]
  -[HMDCameraAccessorySettingsConfiguration reachabilityNotificationEnabled]


HMDCameraUserSettingsConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL sharingFaceClassificationsEnabled
 @property  BOOL importingFromPhotoLibraryEnabled
 @property  BOOL owner

  // instance methods
  -[HMDCameraUserSettingsConfiguration isSharingFaceClassificationsEnabled]
  -[HMDCameraUserSettingsConfiguration isImportingFromPhotoLibraryEnabled]
  -[HMDCameraUserSettingsConfiguration isOwner]
  -[HMDCameraUserSettingsConfiguration initWithUser:]


HMDAccessoryNetworkAccessViolation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSDate *lastViolationDate
 @property  NSDate *lastResetDate
 @property  BOOL currentViolation

  // class methods
  +[HMDAccessoryNetworkAccessViolation supportsSecureCoding]
  +[HMDAccessoryNetworkAccessViolation noViolation]

  // instance methods
  -[HMDAccessoryNetworkAccessViolation attributeDescriptions]
  -[HMDAccessoryNetworkAccessViolation lastViolationDate]
  -[HMDAccessoryNetworkAccessViolation lastResetDate]
  -[HMDAccessoryNetworkAccessViolation initWithLastViolationDate:lastViolationResetDate:]
  -[HMDAccessoryNetworkAccessViolation hasCurrentViolation]
  -[HMDAccessoryNetworkAccessViolation .cxx_destruct]
  -[HMDAccessoryNetworkAccessViolation encodeWithCoder:]
  -[HMDAccessoryNetworkAccessViolation isEqual:]
  -[HMDAccessoryNetworkAccessViolation initWithCoder:]
  -[HMDAccessoryNetworkAccessViolation initWithLastViolationTimeInterval:lastViolationResetTimeInterval:]


HMDAccessoryInvitation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSUUID *identifier
 @property  HMDAccessory *accessory
 @property  long long state

  // class methods
  +[HMDAccessoryInvitation supportsSecureCoding]

  // instance methods
  -[HMDAccessoryInvitation .cxx_destruct]
  -[HMDAccessoryInvitation encodeWithCoder:]
  -[HMDAccessoryInvitation identifier]
  -[HMDAccessoryInvitation initWithAccessory:identifier:state:]
  -[HMDAccessoryInvitation accessory]
  -[HMDAccessoryInvitation state]
  -[HMDAccessoryInvitation initWithCoder:]


HMDSiriSession : NSObject /usr/lib/libc++.1.dylib <HMDActiveSiriSessionInfoDelegate, HMFLogging>
 @property  HMDSiriRemoteInputServer *server
 @property  HMDActiveSiriSessionInfo *activeSessionInfo
 @property  NSString *identifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSiriSession logCategory]
  +[HMDSiriSession siriSessionForUI]

  // instance methods
  -[HMDSiriSession sendMsg:args:]
  -[HMDSiriSession _stopStream]
  -[HMDSiriSession .cxx_destruct]
  -[HMDSiriSession initWithIdentifier:]
  -[HMDSiriSession publish]
  -[HMDSiriSession server]
  -[HMDSiriSession deactivate]
  -[HMDSiriSession identifier]
  -[HMDSiriSession setServer:]
  -[HMDSiriSession invalidate]
  -[HMDSiriSession handleResetStream]
  -[HMDSiriSession handleStartStream]
  -[HMDSiriSession handleStopStream]
  -[HMDSiriSession activeSiriSessionDidStop:]
  -[HMDSiriSession activeSiriSession:didCreateAudioFrame:sequenceNumber:gain:]
  -[HMDSiriSession setActiveBulkSendSession:]
  -[HMDSiriSession activeSessionInfo]
  -[HMDSiriSession _startStream]
  -[HMDSiriSession _createArgsDictionaryWithError:]
  -[HMDSiriSession setActiveSessionInfo:]
  -[HMDSiriSession activateWithAccessory:]
  -[HMDSiriSession activeSessionToken]


HMDAccessoryPairingEventRetryMap : NSObject /usr/lib/libc++.1.dylib
 @property  NSMutableDictionary *retryCountMap
 @property  HMFUnfairLock *accessoryPairingRetryMapLock

  // class methods
  +[HMDAccessoryPairingEventRetryMap sharedInstance]

  // instance methods
  -[HMDAccessoryPairingEventRetryMap init]
  -[HMDAccessoryPairingEventRetryMap .cxx_destruct]
  -[HMDAccessoryPairingEventRetryMap retryCountForIdentifier:]
  -[HMDAccessoryPairingEventRetryMap accessoryPairingRetryMapLock]
  -[HMDAccessoryPairingEventRetryMap retryCountMap]
  -[HMDAccessoryPairingEventRetryMap clearRetryCountMap]
  -[HMDAccessoryPairingEventRetryMap incrementRetryCount:]


HMDAccessoryPairingEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDAccessory *pairedAccessory
 @property  long long linkType
 @property  BOOL addOperation
 @property  BOOL addViaWAC
 @property  BOOL wacLegacy
 @property  long long certificationStatus
 @property  unsigned long authMethod
 @property  BOOL usedWiFiPPSK
 @property  BOOL usedOwnershipProof
 @property  BOOL networkRouterAdd
 @property  BOOL networkRouterReplace
 @property  NSString *identifier
 @property  HMDHome *home
 @property  NSUUID *accessoryUUID
 @property  NSString *appIdentifier
 @property  NSString *accessoryModel
 @property  NSString *accessoryManufacturer
 @property  NSString *accessoryCategory
 @property  NSString *primaryServiceType
 @property  BOOL firstHAPAccessoryInHome
 @property  BOOL firstHAPAccessoryInAnyHome

  // class methods
  +[HMDAccessoryPairingEvent initialize]
  +[HMDAccessoryPairingEvent uuid]
  +[HMDAccessoryPairingEvent pairingAccessory:home:]
  +[HMDAccessoryPairingEvent pairingAccessoryWithDescription:home:]
  +[HMDAccessoryPairingEvent removingAccessory:hapAccessory:]

  // instance methods
  -[HMDAccessoryPairingEvent setAppIdentifier:]
  -[HMDAccessoryPairingEvent appIdentifier]
  -[HMDAccessoryPairingEvent setAccessoryUUID:]
  -[HMDAccessoryPairingEvent certificationStatus]
  -[HMDAccessoryPairingEvent setCertificationStatus:]
  -[HMDAccessoryPairingEvent linkType]
  -[HMDAccessoryPairingEvent setAccessoryCategory:]
  -[HMDAccessoryPairingEvent accessoryUUID]
  -[HMDAccessoryPairingEvent .cxx_destruct]
  -[HMDAccessoryPairingEvent setHome:]
  -[HMDAccessoryPairingEvent setIdentifier:]
  -[HMDAccessoryPairingEvent identifier]
  -[HMDAccessoryPairingEvent home]
  -[HMDAccessoryPairingEvent setAuthenticationMethod:]
  -[HMDAccessoryPairingEvent accessoryCategory]
  -[HMDAccessoryPairingEvent primaryServiceType]
  -[HMDAccessoryPairingEvent setLinkType:]
  -[HMDAccessoryPairingEvent setUsedWiFiPPSK:]
  -[HMDAccessoryPairingEvent pairedAccessory:]
  -[HMDAccessoryPairingEvent setFirstHAPAccessoryInHome:]
  -[HMDAccessoryPairingEvent setFirstHAPAccessoryInAnyHome:]
  -[HMDAccessoryPairingEvent pairedToServer:certificationStatus:addedViaWAC:legacyWAC:]
  -[HMDAccessoryPairingEvent authMethod]
  -[HMDAccessoryPairingEvent vendorDetails]
  -[HMDAccessoryPairingEvent setPrimaryServiceType:]
  -[HMDAccessoryPairingEvent AWDMessageType]
  -[HMDAccessoryPairingEvent metricForAWD]
  -[HMDAccessoryPairingEvent isAddOperation]
  -[HMDAccessoryPairingEvent initWithAccessoryDescription:home:]
  -[HMDAccessoryPairingEvent initWithUnpairedAccessory:pairedAccessory:hapAccessory:home:isAddOperation:]
  -[HMDAccessoryPairingEvent setAddViaWAC:]
  -[HMDAccessoryPairingEvent setAuthMethod:]
  -[HMDAccessoryPairingEvent accessoryModel]
  -[HMDAccessoryPairingEvent setAccessoryModel:]
  -[HMDAccessoryPairingEvent setAccessoryManufacturer:]
  -[HMDAccessoryPairingEvent isAddViaWAC]
  -[HMDAccessoryPairingEvent setWacLegacy:]
  -[HMDAccessoryPairingEvent setPairedAccessory:]
  -[HMDAccessoryPairingEvent setAddedViaWAC:]
  -[HMDAccessoryPairingEvent pairedAccessory]
  -[HMDAccessoryPairingEvent isWacLegacy]
  -[HMDAccessoryPairingEvent isUsedWiFiPPSK]
  -[HMDAccessoryPairingEvent isUsedOwnershipProof]
  -[HMDAccessoryPairingEvent setUsedOwnershipProof:]
  -[HMDAccessoryPairingEvent isNetworkRouterAdd]
  -[HMDAccessoryPairingEvent setNetworkRouterAdd:]
  -[HMDAccessoryPairingEvent isNetworkRouterReplace]
  -[HMDAccessoryPairingEvent setNetworkRouterReplace:]
  -[HMDAccessoryPairingEvent accessoryManufacturer]
  -[HMDAccessoryPairingEvent isFirstHAPAccessoryInHome]
  -[HMDAccessoryPairingEvent isFirstHAPAccessoryInAnyHome]


HMDConfigurationMessageFilter : HMFMessageFilter /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // class methods
  +[HMDConfigurationMessageFilter policyClasses]
  +[HMDConfigurationMessageFilter canInitWithMessage:]

  // instance methods
  -[HMDConfigurationMessageFilter acceptWithPolicies:error:]


HMDMRAVEndpoint : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  ^v mravEndpoint

  // instance methods
  -[HMDMRAVEndpoint attributeDescriptions]
  -[HMDMRAVEndpoint dealloc]
  -[HMDMRAVEndpoint isEqual:]
  -[HMDMRAVEndpoint initWithMRAVEndpoint:]
  -[HMDMRAVEndpoint mravEndpoint]


HMDXPCMessageSendPolicy : NSObject /usr/lib/libc++.1.dylib <NSCopying>
  // instance methods
  -[HMDXPCMessageSendPolicy copyWithZone:]
  -[HMDXPCMessageSendPolicy init]
  -[HMDXPCMessageSendPolicy _init]
  -[HMDXPCMessageSendPolicy isEqual:]
  -[HMDXPCMessageSendPolicy canSendWithPolicyParameters:]


HMDResidentDeviceManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, HMFLogging, HMDHomeMessageReceiver, NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  HMFTimer *residentMonitorTimer
 @property  BOOL confirming
 @property  long long lastAtHomeLevel
 @property  HMDMessageDispatcher *messageDispatcher
 @property  BOOL residentSupported
 @property  NSArray *availableResidentDevices
 @property  NSUUID *primaryResidentUUID
 @property  BOOL firstLegacyFetch
 @property  BOOL firstHomeZoneFetch
 @property  <HMDResidentDeviceManagerDelegate> *delegate
 @property  NSUUID *uuid
 @property  HMDHome *home
 @property  HMDResidentDevice *primaryResidentDevice
 @property  NSArray *residentDevices
 @property  BOOL residentAvailable
 @property  BOOL currentDeviceAvailableResident
 @property  BOOL currentDevicePrimaryResident
 @property  BOOL currentDeviceConfirmedPrimaryResident
 @property  BOOL hasTrustZoneCapableResident
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDResidentDeviceManager supportsSecureCoding]
  +[HMDResidentDeviceManager logCategory]
  +[HMDResidentDeviceManager shortDescription]
  +[HMDResidentDeviceManager hasMessageReceiverChildren]
  +[HMDResidentDeviceManager compareElectionVersions:otherVersion:]

  // instance methods
  -[HMDResidentDeviceManager messageTargetUUID]
  -[HMDResidentDeviceManager _run]
  -[HMDResidentDeviceManager messageReceiveQueue]
  -[HMDResidentDeviceManager timerDidFire:]
  -[HMDResidentDeviceManager run]
  -[HMDResidentDeviceManager logIdentifier]
  -[HMDResidentDeviceManager init]
  -[HMDResidentDeviceManager residentDevices]
  -[HMDResidentDeviceManager uuid]
  -[HMDResidentDeviceManager dealloc]
  -[HMDResidentDeviceManager .cxx_destruct]
  -[HMDResidentDeviceManager setHome:]
  -[HMDResidentDeviceManager removeDataSource:]
  -[HMDResidentDeviceManager encodeWithCoder:]
  -[HMDResidentDeviceManager _registerForMessages]
  -[HMDResidentDeviceManager descriptionWithPointer:]
  -[HMDResidentDeviceManager addDataSource:]
  -[HMDResidentDeviceManager shortDescription]
  -[HMDResidentDeviceManager home]
  -[HMDResidentDeviceManager messageDispatcher]
  -[HMDResidentDeviceManager ourSelf]
  -[HMDResidentDeviceManager setDelegate:]
  -[HMDResidentDeviceManager dumpState]
  -[HMDResidentDeviceManager delegate]
  -[HMDResidentDeviceManager initWithCoder:]
  -[HMDResidentDeviceManager confirmWithCompletionHandler:]
  -[HMDResidentDeviceManager transactionObjectUpdated:newValues:message:]
  -[HMDResidentDeviceManager transactionObjectRemoved:message:]
  -[HMDResidentDeviceManager isCurrentDeviceConfirmedPrimaryResident]
  -[HMDResidentDeviceManager configureWithHome:messageDispatcher:]
  -[HMDResidentDeviceManager availableResidentDevices]
  -[HMDResidentDeviceManager isCurrentDevicePrimaryResident]
  -[HMDResidentDeviceManager hasTrustZoneCapableResident]
  -[HMDResidentDeviceManager primaryResidentDevice]
  -[HMDResidentDeviceManager isResidentSupported]
  -[HMDResidentDeviceManager isCurrentDeviceAvailableResident]
  -[HMDResidentDeviceManager isResidentAvailable]
  -[HMDResidentDeviceManager removeResidentDevice:]
  -[HMDResidentDeviceManager atHomeLevelChanged:]
  -[HMDResidentDeviceManager primaryResidentUUID]
  -[HMDResidentDeviceManager updatePrimaryResidentWithUUID:actions:]
  -[HMDResidentDeviceManager electResidentDevice]
  -[HMDResidentDeviceManager residentMonitorTimer]
  -[HMDResidentDeviceManager handleBatteryStateChange:]
  -[HMDResidentDeviceManager handleBatteryLevelChange:]
  -[HMDResidentDeviceManager _handleCloudZoneReadyNotification:]
  -[HMDResidentDeviceManager __handleAppleAccountResolved:]
  -[HMDResidentDeviceManager handleCurrentDeviceChanged:]
  -[HMDResidentDeviceManager handleResidentDeviceIsReachable:]
  -[HMDResidentDeviceManager handleResidentDeviceIsNotReachable:]
  -[HMDResidentDeviceManager isConfirming]
  -[HMDResidentDeviceManager setResidentSupported:]
  -[HMDResidentDeviceManager handleCurrentDeviceUpdated:]
  -[HMDResidentDeviceManager __currentDeviceUpdated:completion:]
  -[HMDResidentDeviceManager _handleResidentElectionParameters:]
  -[HMDResidentDeviceManager __handleConfirmationRequest:]
  -[HMDResidentDeviceManager _handleConfirmResidentDevice:]
  -[HMDResidentDeviceManager _handleResidentDeviceUpdateEnabled:]
  -[HMDResidentDeviceManager _electResidentDevice]
  -[HMDResidentDeviceManager _setupSessionWithPrimaryResidentDevice]
  -[HMDResidentDeviceManager _startMonitoringResident]
  -[HMDResidentDeviceManager confirmAsResident]
  -[HMDResidentDeviceManager _stopMonitoringResident]
  -[HMDResidentDeviceManager _teardownSessionWithPrimaryResidentDevice]
  -[HMDResidentDeviceManager _sendResidentDeviceNotificationWithName:forResidentDevice:]
  -[HMDResidentDeviceManager _updateResidentAvailability]
  -[HMDResidentDeviceManager setResidentAvailable:]
  -[HMDResidentDeviceManager notifyResidentAvailable:]
  -[HMDResidentDeviceManager residentWithUUID:]
  -[HMDResidentDeviceManager notifyUpdatedPrimaryResident:]
  -[HMDResidentDeviceManager compareResidentDeviceA:electionParametersA:residentDeviceB:electionParametersB:]
  -[HMDResidentDeviceManager _electionParameters:]
  -[HMDResidentDeviceManager setConfirming:]
  -[HMDResidentDeviceManager _electionParameters]
  -[HMDResidentDeviceManager _confirmResidentDevice:electionParameters:againstDevices:completionBlock:]
  -[HMDResidentDeviceManager lastAtHomeLevel]
  -[HMDResidentDeviceManager _isAtHome]
  -[HMDResidentDeviceManager residentDeviceForDevice:]
  -[HMDResidentDeviceManager _updateReachability:forResidentDevice:]
  -[HMDResidentDeviceManager notifyClientsOfUpdatedResidentDevice:]
  -[HMDResidentDeviceManager _updateDischargingTimer:]
  -[HMDResidentDeviceManager _updateChargingTimer]
  -[HMDResidentDeviceManager _pingResident]
  -[HMDResidentDeviceManager setLastAtHomeLevel:]
  -[HMDResidentDeviceManager setResidentMonitorTimer:]
  -[HMDResidentDeviceManager setFirstLegacyFetch:]
  -[HMDResidentDeviceManager hasFirstHomeZoneFetch]
  -[HMDResidentDeviceManager setFirstHomeZoneFetch:]
  -[HMDResidentDeviceManager hasFirstLegacyFetch]
  -[HMDResidentDeviceManager confirmPrimaryResident]
  -[HMDResidentDeviceManager _addResidentDeviceWithModel:message:]
  -[HMDResidentDeviceManager _removeResidentDeviceWithModel:message:]
  -[HMDResidentDeviceManager _addResidentDevice:]
  -[HMDResidentDeviceManager _removeResidentDevice:]
  -[HMDResidentDeviceManager updateResidentAvailability]
  -[HMDResidentDeviceManager confirmOnAvailability]


HMDCameraSnapshotRemoteRelayStream : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDCameraGetSnapshotProtocol, HMDCameraSnapshotSenderProtocol, HMDCameraSnapshotReceiverProtocol, HMDCameraSnapshotRemoteStreamSenderDelegate, HMDCameraSnapshotRemoteRelayReceiverDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDCameraSnapshotRemoteStreamSender *streamSender
 @property  HMDCameraSnapshotRemoteRelayReceiver *relayReceiver
 @property  <HMDCameraSnapshotRemoteRelayStreamDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotRemoteRelayStream logCategory]

  // instance methods
  -[HMDCameraSnapshotRemoteRelayStream logIdentifier]
  -[HMDCameraSnapshotRemoteRelayStream delegateQueue]
  -[HMDCameraSnapshotRemoteRelayStream dealloc]
  -[HMDCameraSnapshotRemoteRelayStream .cxx_destruct]
  -[HMDCameraSnapshotRemoteRelayStream workQueue]
  -[HMDCameraSnapshotRemoteRelayStream delegate]
  -[HMDCameraSnapshotRemoteRelayStream getSnapshot:]
  -[HMDCameraSnapshotRemoteRelayStream _callDidStartCaptureImageDelegate:]
  -[HMDCameraSnapshotRemoteRelayStream _callDidCompleteSendImageDelegate:]
  -[HMDCameraSnapshotRemoteRelayStream snapshotStreamSender:didStartCaptureImage:sessionID:]
  -[HMDCameraSnapshotRemoteRelayStream snapshotStreamSender:didCompleteSendImage:sessionID:]
  -[HMDCameraSnapshotRemoteRelayStream _sendImageSendFailure:]
  -[HMDCameraSnapshotRemoteRelayStream snapShotTransferComplete]
  -[HMDCameraSnapshotRemoteRelayStream relayReceiver]
  -[HMDCameraSnapshotRemoteRelayStream streamSender]
  -[HMDCameraSnapshotRemoteRelayStream snapShotSendFailed:]
  -[HMDCameraSnapshotRemoteRelayStream snapshotRelayReceiver:didStartGettingImage:sessionID:]
  -[HMDCameraSnapshotRemoteRelayStream snapshotRelayReceiver:didSaveSnapshotFile:error:sessionID:]
  -[HMDCameraSnapshotRemoteRelayStream initWithSessionID:workQueue:options:device:accessory:delegate:delegateQueue:uniqueIdentifier:snapshotRequestHandler:residentMessageHandler:]


HMDCameraProfileSettingsModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSNumber *accessModeAtHomeField
 @property  NSNumber *accessModeNotAtHomeField
 @property  NSNumber *recordingEventTriggersField
 @property  NSNumber *accessModeIndicatorEnabledField
 @property  NSNumber *nightVisionModeEnabledField
 @property  NSNumber *snapshotsAllowedField
 @property  NSNumber *periodicSnapshotsAllowedField
 @property  NSNumber *recordingAudioEnabledField
 @property  NSNumber *accessModeChangeNotificationEnabledField
 @property  NSNumber *reachabilityEventNotificationEnabledField
 @property  NSData *smartBulletinBoardNotificationDataField
 @property  NSData *activityZonesField
 @property  NSNumber *activityZonesIncludedForSignificantEventDetectionField
 @property  unsigned long currentAccessMode
 @property  unsigned long accessModeAtHome
 @property  unsigned long accessModeNotAtHome
 @property  unsigned long recordingEventTriggers
 @property  BOOL accessModeIndicatorEnabled
 @property  BOOL nightVisionModeEnabled
 @property  BOOL snapshotsAllowed
 @property  BOOL periodicSnapshotsAllowed
 @property  BOOL recordingAudioEnabled
 @property  BOOL cameraManuallyDisabled
 @property  NSSet *activityZones
 @property  BOOL activityZonesIncludedForSignificantEventDetection
 @property  BOOL accessModeChangeNotificationEnabled
 @property  HMDBulletinBoardNotification *smartBulletinBoardNotification
 @property  BOOL reachabilityEventNotificationEnabled

  // class methods
  +[HMDCameraProfileSettingsModel hmbProperties]

  // instance methods
  -[HMDCameraProfileSettingsModel activityZones]
  -[HMDCameraProfileSettingsModel accessModeAtHome]
  -[HMDCameraProfileSettingsModel accessModeNotAtHome]
  -[HMDCameraProfileSettingsModel currentAccessMode]
  -[HMDCameraProfileSettingsModel recordingEventTriggers]
  -[HMDCameraProfileSettingsModel setAccessModeAtHome:]
  -[HMDCameraProfileSettingsModel setAccessModeNotAtHome:]
  -[HMDCameraProfileSettingsModel setCurrentAccessMode:]
  -[HMDCameraProfileSettingsModel setRecordingEventTriggers:]
  -[HMDCameraProfileSettingsModel setSnapshotsAllowed:]
  -[HMDCameraProfileSettingsModel setPeriodicSnapshotsAllowed:]
  -[HMDCameraProfileSettingsModel setAccessModeIndicatorEnabled:]
  -[HMDCameraProfileSettingsModel setNightVisionModeEnabled:]
  -[HMDCameraProfileSettingsModel setActivityZones:]
  -[HMDCameraProfileSettingsModel setRecordingAudioEnabled:]
  -[HMDCameraProfileSettingsModel setCameraManuallyDisabled:]
  -[HMDCameraProfileSettingsModel setActivityZonesIncludedForSignificantEventDetection:]
  -[HMDCameraProfileSettingsModel accessModeIndicatorEnabled]
  -[HMDCameraProfileSettingsModel nightVisionModeEnabled]
  -[HMDCameraProfileSettingsModel snapshotsAllowed]
  -[HMDCameraProfileSettingsModel periodicSnapshotsAllowed]
  -[HMDCameraProfileSettingsModel recordingAudioEnabled]
  -[HMDCameraProfileSettingsModel accessModeChangeNotificationEnabled]
  -[HMDCameraProfileSettingsModel smartBulletinBoardNotification]
  -[HMDCameraProfileSettingsModel activityZonesIncludedForSignificantEventDetection]
  -[HMDCameraProfileSettingsModel reachabilityEventNotificationEnabled]
  -[HMDCameraProfileSettingsModel cameraManuallyDisabled]


HMDCameraProfileSettingsDerivedPropertiesModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSNumber *currentAccessModeField
 @property  NSNumber *currentAccessModeChangeReasonField
 @property  NSDate *currentAccessModeChangeDate
 @property  unsigned long currentAccessMode
 @property  unsigned long currentAccessModeChangeReason

  // class methods
  +[HMDCameraProfileSettingsDerivedPropertiesModel hmbProperties]

  // instance methods
  -[HMDCameraProfileSettingsDerivedPropertiesModel currentAccessMode]
  -[HMDCameraProfileSettingsDerivedPropertiesModel setCurrentAccessMode:]
  -[HMDCameraProfileSettingsDerivedPropertiesModel setCurrentAccessModeChangeReason:]
  -[HMDCameraProfileSettingsDerivedPropertiesModel currentAccessModeChangeReason]


HMDCameraSupportedConfigurationCache : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL valid
 @property  HMDSupportedVideoStreamConfiguration *supportedVideoStreamConfiguration
 @property  HMDSupportedAudioStreamConfiguration *supportedAudioStreamConfiguration
 @property  HMDSupportedRTPConfiguration *supportedRTPConfiguration

  // instance methods
  -[HMDCameraSupportedConfigurationCache .cxx_destruct]
  -[HMDCameraSupportedConfigurationCache isValid]
  -[HMDCameraSupportedConfigurationCache supportedAudioStreamConfiguration]
  -[HMDCameraSupportedConfigurationCache supportedVideoStreamConfiguration]
  -[HMDCameraSupportedConfigurationCache setSupportedVideoStreamConfiguration:]
  -[HMDCameraSupportedConfigurationCache setSupportedAudioStreamConfiguration:]
  -[HMDCameraSupportedConfigurationCache supportedRTPConfiguration]
  -[HMDCameraSupportedConfigurationCache setSupportedRTPConfiguration:]


HMDLightProfileNaturalLightingActionModel : HMDActionModel
 @property  NSNumber *naturalLightingEnabledField
 @property  NSUUID *lightProfileUUID
 @property  BOOL naturalLightingEnabled
 @property  NSUUID *accessoryUUID
 @property  NSSet *serviceUUIDs

  // class methods
  +[HMDLightProfileNaturalLightingActionModel properties]

  // instance methods
  -[HMDLightProfileNaturalLightingActionModel isNaturalLightingEnabled]
  -[HMDLightProfileNaturalLightingActionModel setNaturalLightingEnabled:]
  -[HMDLightProfileNaturalLightingActionModel dependentUUIDs]


HMDSiriSyncEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long duration
 @property  NSArray *notificationReasons
 @property  unsigned long lastSyncedConfigurationVersion
 @property  unsigned long configurationVersion
 @property  unsigned long serverConfigurationVersion

  // class methods
  +[HMDSiriSyncEvent initialize]
  +[HMDSiriSyncEvent uuid]
  +[HMDSiriSyncEvent syncRequestWithDuration:serverConfigurationVersion:configurationVersion:lastSyncedConfigurationVersion:notificationReasons:]

  // instance methods
  -[HMDSiriSyncEvent .cxx_destruct]
  -[HMDSiriSyncEvent configurationVersion]
  -[HMDSiriSyncEvent duration]
  -[HMDSiriSyncEvent lastSyncedConfigurationVersion]
  -[HMDSiriSyncEvent AWDMessageType]
  -[HMDSiriSyncEvent metricForAWD]
  -[HMDSiriSyncEvent initWithDuration:serverConfigurationVersion:configurationVersion:lastSyncedConfigurationVersion:notificationReasons:]
  -[HMDSiriSyncEvent notificationReasons]
  -[HMDSiriSyncEvent serverConfigurationVersion]


HMDSharedHomeUpdateHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDSharedHomeUpdateSessionDelegate, HMFLogging, HMFDumpState>
 @property  HMDHome *home
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  BOOL firstFetchComplete
 @property  BOOL suspended
 @property  BOOL pendingRequestDataFromResident
 @property  HMDSharedHomeUpdateSession *pendingRequestDataFromResidentSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSharedHomeUpdateHandler logCategory]

  // instance methods
  -[HMDSharedHomeUpdateHandler setSuspended:]
  -[HMDSharedHomeUpdateHandler pause]
  -[HMDSharedHomeUpdateHandler setWorkQueue:]
  -[HMDSharedHomeUpdateHandler logIdentifier]
  -[HMDSharedHomeUpdateHandler init]
  -[HMDSharedHomeUpdateHandler isSuspended]
  -[HMDSharedHomeUpdateHandler resume]
  -[HMDSharedHomeUpdateHandler .cxx_destruct]
  -[HMDSharedHomeUpdateHandler workQueue]
  -[HMDSharedHomeUpdateHandler setHome:]
  -[HMDSharedHomeUpdateHandler home]
  -[HMDSharedHomeUpdateHandler registerForMessages]
  -[HMDSharedHomeUpdateHandler dumpState]
  -[HMDSharedHomeUpdateHandler configureWithHome:]
  -[HMDSharedHomeUpdateHandler residentsChanged:]
  -[HMDSharedHomeUpdateHandler handleHomeCloudZoneReadyNotification:]
  -[HMDSharedHomeUpdateHandler setPendingRequestDataFromResidentSession:]
  -[HMDSharedHomeUpdateHandler _evaluateNeedForSync]
  -[HMDSharedHomeUpdateHandler setFirstFetchComplete:]
  -[HMDSharedHomeUpdateHandler pendingRequestDataFromResidentSession]
  -[HMDSharedHomeUpdateHandler firstFetchComplete]
  -[HMDSharedHomeUpdateHandler _receivedHomeDataFromSourceVersion:forceUpdateVersion:completion:]
  -[HMDSharedHomeUpdateHandler didCompleteHomeUpdateSession:withError:]
  -[HMDSharedHomeUpdateHandler requestHomeDataSync]
  -[HMDSharedHomeUpdateHandler receivedHomeDataFromSourceVersion:forceUpdateVersion:completion:]
  -[HMDSharedHomeUpdateHandler pendingRequestDataFromResident]
  -[HMDSharedHomeUpdateHandler setPendingRequestDataFromResident:]


AWDHomeKitHomeSharing : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasErrorCode
 @property  int errorCode
 @property  BOOL hasResponseType
 @property  int responseType
 @property  BOOL hasStage
 @property  int stage

  // instance methods
  -[AWDHomeKitHomeSharing setErrorCode:]
  -[AWDHomeKitHomeSharing copyWithZone:]
  -[AWDHomeKitHomeSharing hasErrorCode]
  -[AWDHomeKitHomeSharing errorCode]
  -[AWDHomeKitHomeSharing setHasErrorCode:]
  -[AWDHomeKitHomeSharing timestamp]
  -[AWDHomeKitHomeSharing stage]
  -[AWDHomeKitHomeSharing setTimestamp:]
  -[AWDHomeKitHomeSharing setStage:]
  -[AWDHomeKitHomeSharing setHasTimestamp:]
  -[AWDHomeKitHomeSharing readFrom:]
  -[AWDHomeKitHomeSharing writeTo:]
  -[AWDHomeKitHomeSharing isEqual:]
  -[AWDHomeKitHomeSharing copyTo:]
  -[AWDHomeKitHomeSharing dictionaryRepresentation]
  -[AWDHomeKitHomeSharing responseType]
  -[AWDHomeKitHomeSharing setResponseType:]
  -[AWDHomeKitHomeSharing mergeFrom:]
  -[AWDHomeKitHomeSharing hasTimestamp]
  -[AWDHomeKitHomeSharing hasStage]
  -[AWDHomeKitHomeSharing setHasStage:]
  -[AWDHomeKitHomeSharing stageAsString:]
  -[AWDHomeKitHomeSharing StringAsStage:]
  -[AWDHomeKitHomeSharing setHasResponseType:]
  -[AWDHomeKitHomeSharing hasResponseType]
  -[AWDHomeKitHomeSharing responseTypeAsString:]
  -[AWDHomeKitHomeSharing StringAsResponseType:]


HMDService : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBulletinIdentifiers, NSSecureCoding, HMFDumpState, HMDBackingStoreObjectProtocol, HMDHomeMessageReceiver>
 @property  NSString *contextID
 @property  NSUUID *contextSPIUniqueIdentifier
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSNumber *instanceID
 @property  BOOL hidden
 @property  BOOL noNameCharacteristic
 @property  BOOL primary
 @property  unsigned long serviceProperties
 @property  NSArray *linkedServices
 @property  NSArray *characteristics
 @property  NSUUID *cachedAccessoryUUID
 @property  <HMDServiceOwner> *owner
 @property  NSString *serviceSubtype
 @property  NSNumber *configurationState
 @property  NSNumber *labelIndex
 @property  NSNumber *labelNamespace
 @property  NSString *configuredName
 @property  NSString *defaultName
 @property  NSString *expectedConfiguredName
 @property  NSString *lastSeenConfiguredName
 @property  NSNumber *lastKnownDiscoveryMode
 @property  NSNumber *lastKnownOperatingState
 @property  NSNumber *lastKnownOperatingStateAbnormalReasons
 @property  NSNumber *mediaSourceIdentifier
 @property  NSArray *mediaSourceDisplayOrder
 @property  NSMutableDictionary *deviceLastRequestPresenceDateMap
 @property  NSString *logID
 @property  NSString *providedName
 @property  HMDHAPAccessory *accessory
 @property  NSString *name
 @property  NSUUID *uuid
 @property  NSString *type
 @property  NSString *associatedServiceType
 @property  NSString *serviceType
 @property  HMDApplicationData *appData
 @property  HMDBulletinBoardNotification *bulletinBoardNotification
 @property  NSString *serviceIdentifier
 @property  BOOL custom
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDService supportsSecureCoding]
  +[HMDService logCategory]
  +[HMDService hasMessageReceiverChildren]
  +[HMDService generateUUIDWithAccessoryUUID:serviceID:]
  +[HMDService processUpdateForCharacteristicType:value:serviceType:service:serviceTransactionGetter:accessory:accessoryTransaction:accessoryTransactionChanged:]
  +[HMDService validateProvidedName:]

  // instance methods
  -[HMDService messageTargetUUID]
  -[HMDService serviceProperties]
  -[HMDService messageReceiveQueue]
  -[HMDService setServiceProperties:]
  -[HMDService setOwner:]
  -[HMDService owner]
  -[HMDService logID]
  -[HMDService serviceIdentifier]
  -[HMDService logIdentifier]
  -[HMDService init]
  -[HMDService instanceID]
  -[HMDService mediaSourceDisplayOrder]
  -[HMDService setMediaSourceDisplayOrder:]
  -[HMDService bulletinBoardNotification]
  -[HMDService lastKnownDiscoveryMode]
  -[HMDService associatedServiceType]
  -[HMDService setDefaultName:]
  -[HMDService serviceSubtype]
  -[HMDService setServiceSubtype:]
  -[HMDService setConfigurationState:]
  -[HMDService setLastKnownDiscoveryMode:]
  -[HMDService mediaSourceIdentifier]
  -[HMDService setMediaSourceIdentifier:]
  -[HMDService lastKnownOperatingState]
  -[HMDService lastKnownOperatingStateAbnormalReasons]
  -[HMDService setInstanceID:]
  -[HMDService uuid]
  -[HMDService dealloc]
  -[HMDService setServiceType:]
  -[HMDService .cxx_destruct]
  -[HMDService characteristics]
  -[HMDService setCharacteristics:]
  -[HMDService name]
  -[HMDService setLinkedServices:]
  -[HMDService isPrimary]
  -[HMDService setConfiguredName:]
  -[HMDService serviceType]
  -[HMDService encodeWithCoder:]
  -[HMDService urlString]
  -[HMDService configurationState]
  -[HMDService _registerForMessages]
  -[HMDService linkedServices]
  -[HMDService type]
  -[HMDService isCustom]
  -[HMDService accessory]
  -[HMDService home]
  -[HMDService messageDispatcher]
  -[HMDService appData]
  -[HMDService defaultName]
  -[HMDService contextID]
  -[HMDService configuredName]
  -[HMDService setName:]
  -[HMDService dumpState]
  -[HMDService setPrimary:]
  -[HMDService setHidden:]
  -[HMDService initWithCoder:]
  -[HMDService isHidden]
  -[HMDService transactionObjectUpdated:newValues:message:]
  -[HMDService transactionObjectRemoved:message:]
  -[HMDService modelObjectWithChangeType:]
  -[HMDService backingStoreObjects:]
  -[HMDService contextSPIUniqueIdentifier]
  -[HMDService findCharacteristicWithType:]
  -[HMDService configureMsgDispatcher:]
  -[HMDService configureBulletinNotification]
  -[HMDService setAppData:]
  -[HMDService transactionWithObjectChangeType:]
  -[HMDService setProvidedName:]
  -[HMDService providedName]
  -[HMDService shouldEnableDaemonRelaunch]
  -[HMDService _handleSetAppData:]
  -[HMDService getConfiguredName]
  -[HMDService updatePresenceRequestTimeForDeviceWithDestination:]
  -[HMDService findCharacteristic:]
  -[HMDService _recalculateUUID]
  -[HMDService assistantObject]
  -[HMDService shouldIncludePresenceForDeviceWithDestination:]
  -[HMDService appDataUpdated:message:]
  -[HMDService appDataRemoved:message:]
  -[HMDService messagesForUpdatedRoom:]
  -[HMDService initWithTransaction:accessory:owner:]
  -[HMDService configureWithService:accessory:shouldRead:added:]
  -[HMDService updateLastKnownValues]
  -[HMDService configureWithService:accessory:]
  -[HMDService setExpectedConfiguredName:]
  -[HMDService gatherRequiredReadRequestsForceReadFWVersion:]
  -[HMDService initWithAccessory:owner:instance:uuid:]
  -[HMDService labelIndex]
  -[HMDService labelNamespace]
  -[HMDService expectedConfiguredName]
  -[HMDService _updateDefaultName]
  -[HMDService _createNotification]
  -[HMDService lastSeenConfiguredName]
  -[HMDService _readRequiredCharacteristicValuesForceReadFWVersion:]
  -[HMDService shouldUpdateLastSeenConfiguredName:]
  -[HMDService _saveLastSeenAndExpectedConfiguredName:]
  -[HMDService _saveCurrentNameAsExpectedAndLastSeen:]
  -[HMDService _sanitizeNameToWriteToAccessory:]
  -[HMDService _writeConfiguredNameToAccessory:]
  -[HMDService _updateAndCacheDiscoveryModeState]
  -[HMDService _updateAndCacheOperatingStateAndResponse]
  -[HMDService _supportsBulletinNotification]
  -[HMDService setNoNameCharacteristic:]
  -[HMDService nameChangedMessage]
  -[HMDService getLastSeenConfiguredName]
  -[HMDService isReadingRequiredForBTLEServiceCharacteristic:]
  -[HMDService _validateAndUpdateLastKnownDiscoveryMode:]
  -[HMDService _updateLastKnownOperatingStateWithValue:]
  -[HMDService setLastKnownOperatingState:]
  -[HMDService setLastKnownOperatingStateAbnormalReasons:]
  -[HMDService setLabelIndex:]
  -[HMDService setLabelNamespace:]
  -[HMDService _deriveDefaultName]
  -[HMDService getConfiguredNameForXPCClients]
  -[HMDService _checkIfDefaultNameChanged]
  -[HMDService _messagesForConfiguredNameChange]
  -[HMDService _shouldServiceBeHidden]
  -[HMDService deviceLastRequestPresenceDateMap]
  -[HMDService setDeviceLastRequestPresenceDateMap:]
  -[HMDService noNameCharacteristic]
  -[HMDService _transactionServiceUpdated:newValues:message:]
  -[HMDService _saveForExpectedConfiguredNameUpdate]
  -[HMDService _updateProvidedName:]
  -[HMDService _processTransactionForNameComponents:messagesToSendToAcccessory:result:]
  -[HMDService listsEqual:to:]
  -[HMDService updateCharacteristics:]
  -[HMDService _validateLastKnownDiscoveryMode:]
  -[HMDService _updateLastKnownDiscoveryMode:]
  -[HMDService _createAndRunTransactionWithName:transaction:message:]
  -[HMDService persistLastKnownDiscoveryMode]
  -[HMDService _updateLastKnownOperatingStateResponse:]
  -[HMDService persistLastKnownOperatingStateResponse]
  -[HMDService persistMediaSourceDisplayOrder:requestMessage:]
  -[HMDService populateModelObjectWithChangeType:version:]
  -[HMDService setLastSeenConfiguredName:]
  -[HMDService _saveForLastSeenConfiguredNameUpdate]
  -[HMDService updateAssociatedServiceType:error:]
  -[HMDService isEmptyConfiguredNameAllowed]
  -[HMDService updateMediaSourceDisplayOrder:requestMessage:]
  -[HMDService setBulletinBoardNotification:]
  -[HMDService cachedAccessoryUUID]
  -[HMDService setCachedAccessoryUUID:]
  -[HMDService _serviceSubtypeFromLinkedServicesForServiceType:accessoryCategory:]


HMDServiceTransaction : HMDBackingStoreModelObject
 @property  NSNumber *instanceID
 @property  NSString *lastSeenConfiguredNameLocal
 @property  NSString *name
 @property  NSString *providedName
 @property  NSString *expectedConfiguredName
 @property  NSString *serviceType
 @property  NSString *associatedServiceType
 @property  NSString *serviceSubtype
 @property  NSNumber *labelIndex
 @property  NSNumber *labelNamespace
 @property  NSNumber *configurationState
 @property  NSArray *linkedServices
 @property  NSNumber *lastKnownDiscoveryMode
 @property  NSNumber *lastKnownOperatingState
 @property  NSNumber *lastKnownOperatingStateAbnormalReasons
 @property  NSNumber *mediaSourceIdentifier
 @property  NSArray *mediaSourceDisplayOrder
 @property  NSNumber *serviceProperties
 @property  NSArray *characteristics
 @property  NSObject<OS_dispatch_group> *configurationTracker
 @property  NSNumber *hidden
 @property  NSNumber *primary

  // class methods
  +[HMDServiceTransaction properties]

  // instance methods
  -[HMDServiceTransaction .cxx_destruct]
  -[HMDServiceTransaction setConfigurationTracker:]
  -[HMDServiceTransaction configurationTracker]
  -[HMDServiceTransaction lastSeenConfiguredNameLocal]
  -[HMDServiceTransaction setLastSeenConfiguredNameLocal:]


HMDVideoStreamReconfigureEvent : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long eventType
 @property  NSDate *timestamp

  // instance methods
  -[HMDVideoStreamReconfigureEvent initWithEventType:]
  -[HMDVideoStreamReconfigureEvent compare:]
  -[HMDVideoStreamReconfigureEvent .cxx_destruct]
  -[HMDVideoStreamReconfigureEvent timestamp]
  -[HMDVideoStreamReconfigureEvent eventType]
  -[HMDVideoStreamReconfigureEvent isEqual:]


HMDServerBag : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSURLSessionDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSURLSession *urlSession
 @property  BOOL refreshing
 @property  NSDictionary *dictionaryRepresentation
 @property  unsigned long environment
 @property  NSURL *url
 @property  NSURL *activationHostnameURL
 @property  NSURL *activationCertificateHostnameURL
 @property  NSURL *accessoryReportURL
 @property  double accessoryReportTimeout
 @property  BOOL controlCenterEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDServerBag initialize]
  +[HMDServerBag serverBagURLForEnvironment:]
  +[HMDServerBag activationHostnameURLOverride]
  +[HMDServerBag activationCertificateHostnameURLOverride]
  +[HMDServerBag defaultServerBag]

  // instance methods
  -[HMDServerBag urlSession]
  -[HMDServerBag init]
  -[HMDServerBag url]
  -[HMDServerBag .cxx_destruct]
  -[HMDServerBag workQueue]
  -[HMDServerBag setDictionaryRepresentation:]
  -[HMDServerBag URLSession:task:didReceiveChallenge:completionHandler:]
  -[HMDServerBag refreshing]
  -[HMDServerBag initWithEnvironment:]
  -[HMDServerBag setRefreshing:]
  -[HMDServerBag dictionaryRepresentation]
  -[HMDServerBag environment]
  -[HMDServerBag _loadDefaultBag]
  -[HMDServerBag _synchronizeWithCompletion:]
  -[HMDServerBag _handleServerBagResponseData:response:error:completionHandler:]
  -[HMDServerBag activationHostnameURL]
  -[HMDServerBag activationCertificateHostnameURL]
  -[HMDServerBag accessoryReportURL]
  -[HMDServerBag accessoryReportTimeout]
  -[HMDServerBag isControlCenterEnabled]


HMDCameraRecordingLogEvent : HMDLogEvent
 @property  NSUUID *cameraID
 @property  NSUUID *sessionID
 @property  unsigned long sequenceNumber
 @property  NSUUID *ephemeralCameraID
 @property  unsigned long startTimestamp
 @property  unsigned long endTimestamp

  // instance methods
  -[HMDCameraRecordingLogEvent setSequenceNumber:]
  -[HMDCameraRecordingLogEvent sessionID]
  -[HMDCameraRecordingLogEvent attributeDescriptions]
  -[HMDCameraRecordingLogEvent sequenceNumber]
  -[HMDCameraRecordingLogEvent .cxx_destruct]
  -[HMDCameraRecordingLogEvent startTimestamp]
  -[HMDCameraRecordingLogEvent cameraID]
  -[HMDCameraRecordingLogEvent endTimestamp]
  -[HMDCameraRecordingLogEvent initWithEventType:sessionID:cameraID:sequenceNumber:]
  -[HMDCameraRecordingLogEvent ephemeralCameraID]


HMDCameraRecordingBulkSendDataReadEvent : HMDCameraRecordingLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long byteCount
 @property  unsigned short status
 @property  unsigned long chunkSequenceNumber
 @property  unsigned long bitRate
 @property  unsigned long iFrameInterval
 @property  unsigned long imageWidth
 @property  unsigned long imageHeight

  // class methods
  +[HMDCameraRecordingBulkSendDataReadEvent uuid]

  // instance methods
  -[HMDCameraRecordingBulkSendDataReadEvent attributeDescriptions]
  -[HMDCameraRecordingBulkSendDataReadEvent byteCount]
  -[HMDCameraRecordingBulkSendDataReadEvent setByteCount:]
  -[HMDCameraRecordingBulkSendDataReadEvent bitRate]
  -[HMDCameraRecordingBulkSendDataReadEvent imageHeight]
  -[HMDCameraRecordingBulkSendDataReadEvent setStatus:]
  -[HMDCameraRecordingBulkSendDataReadEvent imageWidth]
  -[HMDCameraRecordingBulkSendDataReadEvent status]
  -[HMDCameraRecordingBulkSendDataReadEvent initWithSessionID:cameraID:bitRate:iFrameInterval:imageWidth:imageHeight:]
  -[HMDCameraRecordingBulkSendDataReadEvent setChunkSequenceNumber:]
  -[HMDCameraRecordingBulkSendDataReadEvent AWDMessageType]
  -[HMDCameraRecordingBulkSendDataReadEvent metricForAWD]
  -[HMDCameraRecordingBulkSendDataReadEvent iFrameInterval]
  -[HMDCameraRecordingBulkSendDataReadEvent chunkSequenceNumber]


HMDCameraRecordingFragmentAnalyzedEvent : HMDCameraRecordingLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long analysisResultCode
 @property  NSUUID *clipModelID
 @property  int recordingReason

  // class methods
  +[HMDCameraRecordingFragmentAnalyzedEvent uuid]

  // instance methods
  -[HMDCameraRecordingFragmentAnalyzedEvent attributeDescriptions]
  -[HMDCameraRecordingFragmentAnalyzedEvent .cxx_destruct]
  -[HMDCameraRecordingFragmentAnalyzedEvent AWDMessageType]
  -[HMDCameraRecordingFragmentAnalyzedEvent metricForAWD]
  -[HMDCameraRecordingFragmentAnalyzedEvent clipModelID]
  -[HMDCameraRecordingFragmentAnalyzedEvent analysisResultCode]
  -[HMDCameraRecordingFragmentAnalyzedEvent recordingReason]
  -[HMDCameraRecordingFragmentAnalyzedEvent initWithSessionID:cameraID:sequenceNumber:]
  -[HMDCameraRecordingFragmentAnalyzedEvent setAnalysisResultCode:]
  -[HMDCameraRecordingFragmentAnalyzedEvent setClipModelID:]
  -[HMDCameraRecordingFragmentAnalyzedEvent setRecordingReason:]


HMDCameraRecordingClipNotificationEvent : HMDCameraRecordingLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long recordingEventTriggers

  // class methods
  +[HMDCameraRecordingClipNotificationEvent uuid]

  // instance methods
  -[HMDCameraRecordingClipNotificationEvent attributeDescriptions]
  -[HMDCameraRecordingClipNotificationEvent recordingEventTriggers]
  -[HMDCameraRecordingClipNotificationEvent AWDMessageType]
  -[HMDCameraRecordingClipNotificationEvent metricForAWD]
  -[HMDCameraRecordingClipNotificationEvent initWithSessionID:cameraID:sequenceNumber:recordingEventTriggers:]


HMDSharingDeviceDiscovery : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDSharingDeviceDiscovery>
 @property  SFDeviceDiscovery *deviceDiscovery
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  unsigned long discoveryFlags
 @property  @? deviceFoundHandler
 @property  @? deviceLostHandler
 @property  @? deviceChangedHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDSharingDeviceDiscovery deviceFoundHandler]
  -[HMDSharingDeviceDiscovery setDeviceChangedHandler:]
  -[HMDSharingDeviceDiscovery dealloc]
  -[HMDSharingDeviceDiscovery .cxx_destruct]
  -[HMDSharingDeviceDiscovery deviceChangedHandler]
  -[HMDSharingDeviceDiscovery dispatchQueue]
  -[HMDSharingDeviceDiscovery setDeviceFoundHandler:]
  -[HMDSharingDeviceDiscovery setDeviceLostHandler:]
  -[HMDSharingDeviceDiscovery setDispatchQueue:]
  -[HMDSharingDeviceDiscovery deviceLostHandler]
  -[HMDSharingDeviceDiscovery stop]
  -[HMDSharingDeviceDiscovery repairDevice:flags:completion:]
  -[HMDSharingDeviceDiscovery setDeviceDiscovery:]
  -[HMDSharingDeviceDiscovery deviceDiscovery]
  -[HMDSharingDeviceDiscovery discoveryFlags]
  -[HMDSharingDeviceDiscovery setDiscoveryFlags:]
  -[HMDSharingDeviceDiscovery start]


HMDAppleAccountContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  NSString *identifier
 @property  NSString *username
 @property  NSString *alternateDSID
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDAppleAccountContext init]
  -[HMDAppleAccountContext attributeDescriptions]
  -[HMDAppleAccountContext username]
  -[HMDAppleAccountContext .cxx_destruct]
  -[HMDAppleAccountContext alternateDSID]
  -[HMDAppleAccountContext identifier]
  -[HMDAppleAccountContext initWithAccount:]
  -[HMDAppleAccountContext isEqual:]


HMDSettingAlgorithm : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMDSettingAlgorithm allSettingsFromRootGroup:]
  +[HMDSettingAlgorithm allGroupsFromRootGroup:]
  +[HMDSettingAlgorithm findChangedSettingsWithRootGroup:currentGroups:currentSettings:completion:]


HMDSnapshotFile : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSNumber *slotIdentifier
 @property  HMFOSTransaction *snapshotCATransaction
 @property  NSString *directory
 @property  NSString *filePath
 @property  NSDate *snapshotTimestamp
 @property  NSNumber *aspectRatio
 @property  BOOL externalFilePath
 @property  NSData *encodedDataForIDSSend
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSnapshotFile logCategory]

  // instance methods
  -[HMDSnapshotFile logIdentifier]
  -[HMDSnapshotFile attributeDescriptions]
  -[HMDSnapshotFile dealloc]
  -[HMDSnapshotFile .cxx_destruct]
  -[HMDSnapshotFile aspectRatio]
  -[HMDSnapshotFile isEqual:]
  -[HMDSnapshotFile directory]
  -[HMDSnapshotFile filePath]
  -[HMDSnapshotFile slotIdentifier]
  -[HMDSnapshotFile setSlotIdentifier:]
  -[HMDSnapshotFile initWithImageDirectory:]
  -[HMDSnapshotFile prepareParametersWithFilePath:snapshotData:directory:snapshotTimestamp:resize:writeBack:]
  -[HMDSnapshotFile initWithImageDirectory:filePath:snapshotTimestamp:]
  -[HMDSnapshotFile externalFilePath]
  -[HMDSnapshotFile snapshotTimestamp]
  -[HMDSnapshotFile initWithImageDirectory:snapshotData:]
  -[HMDSnapshotFile initWithImageDirectory:externalFilePath:snapshotTimestamp:]
  -[HMDSnapshotFile copyFileAtPath:snapshotTimestamp:]
  -[HMDSnapshotFile updateSlotIdentifier]
  -[HMDSnapshotFile encodedDataForIDSSend]
  -[HMDSnapshotFile decodeIDSDataReceived:snapshotDataTransaction:]
  -[HMDSnapshotFile snapshotCATransaction]
  -[HMDSnapshotFile setSnapshotCATransaction:]


HMDAccountHandle : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDBackingStoreObjectProtocol, HMDBackingStoreModelBackedObjectProtocol, HMDRemoteAddressable, NSCopying, NSSecureCoding>
 @property  IDSURI *URI
 @property  NSUUID *modelParentIdentifier
 @property  BOOL locallyTracked
 @property  long long type
 @property  NSString *value
 @property  NSUUID *identifier
 @property  BOOL local
 @property  CNContact *contact
 @property  CKUserIdentityLookupInfo *cloudKitLookupInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class modelClass
 @property  NSUUID *modelIdentifier

  // class methods
  +[HMDAccountHandle supportsSecureCoding]
  +[HMDAccountHandle logCategory]
  +[HMDAccountHandle accountHandleForDestination:]

  // instance methods
  -[HMDAccountHandle copyWithZone:]
  -[HMDAccountHandle URI]
  -[HMDAccountHandle logIdentifier]
  -[HMDAccountHandle modelIdentifier]
  -[HMDAccountHandle init]
  -[HMDAccountHandle contact]
  -[HMDAccountHandle attributeDescriptions]
  -[HMDAccountHandle .cxx_destruct]
  -[HMDAccountHandle initWithURI:]
  -[HMDAccountHandle encodeWithCoder:]
  -[HMDAccountHandle identifier]
  -[HMDAccountHandle isBackingStorageEqual:]
  -[HMDAccountHandle type]
  -[HMDAccountHandle modelClass]
  -[HMDAccountHandle shortDescription]
  -[HMDAccountHandle isEqual:]
  -[HMDAccountHandle value]
  -[HMDAccountHandle isLocal]
  -[HMDAccountHandle initWithObjectModel:]
  -[HMDAccountHandle initWithCoder:]
  -[HMDAccountHandle modelObjectWithChangeType:version:]
  -[HMDAccountHandle transactionObjectUpdated:newValues:message:]
  -[HMDAccountHandle transactionObjectRemoved:message:]
  -[HMDAccountHandle initWithURI:local:]
  -[HMDAccountHandle remoteDestinationString]
  -[HMDAccountHandle modelBackedObjects]
  -[HMDAccountHandle modelParentIdentifier]
  -[HMDAccountHandle setModelParentIdentifier:]
  -[HMDAccountHandle backingStoreObjectsWithChangeType:version:]
  -[HMDAccountHandle isLocallyTracked]
  -[HMDAccountHandle setLocallyTracked:]
  -[HMDAccountHandle cloudKitLookupInfo]


HMDAccountHandleModel : HMDBackingStoreModelObject
 @property  IDSURI *idsURI
 @property  NSNumber *local

  // class methods
  +[HMDAccountHandleModel properties]
  +[HMDAccountHandleModel schemaHashRoot]


HMDCameraProfileSettingsManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMBLocalZoneDelegate, HMBCloudZoneDelegate, HMBLocalZoneModelObserver, HMDCharacteristicsAvailabilityListenerDelegate, HMDDatabaseZoneManagerDataSource, HMDDatabaseZoneManagerDelegate, HMFTimerDelegate, HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHAPAccessory *hapAccessory
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDDatabaseZoneManager *zoneManager
 @property  NSNotificationCenter *notificationCenter
 @property  HMDCameraProfileSettingsModel *defaultSettingsModel
 @property  HMDCameraProfileSettingsDerivedPropertiesModel *derivedPropertiesModel
 @property  HMDBulletinBoard *bulletinBoard
 @property  HMDCharacteristicsAvailabilityListener *characteristicsAvailabilityListener
 @property  BOOL cameraManuallyDisabled
 @property  NSString *clientIdentifier
 @property  HMDCameraFeaturesDataSource *featuresDataSource
 @property  NSNumber *anyUserAtHome
 @property  BOOL currentDeviceConfirmedPrimaryResident
 @property  NSUUID *uniqueIdentifier
 @property  NSUUID *derivedPropertiesModelID
 @property  @? timerFactory
 @property  HMFTimer *safeModeTimer
 @property  NSString *zoneName
 @property  _HMCameraUserSettings *currentSettings
 @property  unsigned long supportedFeatures
 @property  <HMDCameraProfileSettingsManagerDelegate> *delegate
 @property  BOOL recordingEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDCameraProfileSettingsManager logCategory]
  +[HMDCameraProfileSettingsManager zoneNameForHome:]

  // instance methods
  -[HMDCameraProfileSettingsManager messageTargetUUID]
  -[HMDCameraProfileSettingsManager zoneManager]
  -[HMDCameraProfileSettingsManager notificationCenter]
  -[HMDCameraProfileSettingsManager messageDestination]
  -[HMDCameraProfileSettingsManager messageReceiveQueue]
  -[HMDCameraProfileSettingsManager timerDidFire:]
  -[HMDCameraProfileSettingsManager zoneName]
  -[HMDCameraProfileSettingsManager logIdentifier]
  -[HMDCameraProfileSettingsManager clientIdentifier]
  -[HMDCameraProfileSettingsManager dealloc]
  -[HMDCameraProfileSettingsManager .cxx_destruct]
  -[HMDCameraProfileSettingsManager workQueue]
  -[HMDCameraProfileSettingsManager uniqueIdentifier]
  -[HMDCameraProfileSettingsManager setMsgDispatcher:]
  -[HMDCameraProfileSettingsManager msgDispatcher]
  -[HMDCameraProfileSettingsManager supportedFeatures]
  -[HMDCameraProfileSettingsManager currentSettings]
  -[HMDCameraProfileSettingsManager setDelegate:]
  -[HMDCameraProfileSettingsManager isCameraManuallyDisabled]
  -[HMDCameraProfileSettingsManager delegate]
  -[HMDCameraProfileSettingsManager remove]
  -[HMDCameraProfileSettingsManager start]
  -[HMDCameraProfileSettingsManager localZone:didProcessModelDeletion:]
  -[HMDCameraProfileSettingsManager localZone:didProcessModelCreation:]
  -[HMDCameraProfileSettingsManager localZone:didProcessModelUpdate:]
  -[HMDCameraProfileSettingsManager manager:shouldShareWithUser:]
  -[HMDCameraProfileSettingsManager zoneManager:shouldRequestShareInvitationFromUser:]
  -[HMDCameraProfileSettingsManager zoneManagerDidStart:]
  -[HMDCameraProfileSettingsManager zoneManagerDidStop:]
  -[HMDCameraProfileSettingsManager hapAccessory]
  -[HMDCameraProfileSettingsManager isCurrentDeviceConfirmedPrimaryResident]
  -[HMDCameraProfileSettingsManager isRecordingEnabled]
  -[HMDCameraProfileSettingsManager isAnyUserAtHome]
  -[HMDCameraProfileSettingsManager handlePrimaryResidentUpdateNotification:]
  -[HMDCameraProfileSettingsManager setHapAccessory:]
  -[HMDCameraProfileSettingsManager initWithHAPAccessory:workQueue:]
  -[HMDCameraProfileSettingsManager initWithIdentifier:hapAccessory:workQueue:zoneManager:notificationCenter:bulletinBoard:characteristicsAvailabilityListener:featuresDataSource:]
  -[HMDCameraProfileSettingsManager _handleUpdateAccessMode:]
  -[HMDCameraProfileSettingsManager _handleUpdateRecordingTriggerEvents:]
  -[HMDCameraProfileSettingsManager _handleAccessModeIndicatorEnabled:]
  -[HMDCameraProfileSettingsManager _handleUpdateSnapshotsAllowed:]
  -[HMDCameraProfileSettingsManager _handleUpdateNightVisionModeEnabled:]
  -[HMDCameraProfileSettingsManager _handleRecordingAudioEnabled:]
  -[HMDCameraProfileSettingsManager _handleUpdateActivityZones:]
  -[HMDCameraProfileSettingsManager _handleBulletinBoardNotificationCommit:]
  -[HMDCameraProfileSettingsManager _handleAccessModeChangeNotificationEnabled:]
  -[HMDCameraProfileSettingsManager _handleUpdateReachabilityEventNotificationEnabled:]
  -[HMDCameraProfileSettingsManager handleAccessoryServiceAddedNotification:]
  -[HMDCameraProfileSettingsManager handleHomePresenceEvaluatedNotification:]
  -[HMDCameraProfileSettingsManager handleAccessoryConnectedNotification:]
  -[HMDCameraProfileSettingsManager handleRecordingManagementServiceDidUpdateNotification:]
  -[HMDCameraProfileSettingsManager handleCharacteristicsValueUpdatedNotification:]
  -[HMDCameraProfileSettingsManager manuallyDisabledCharacteristic]
  -[HMDCameraProfileSettingsManager setAnyUserAtHome:]
  -[HMDCameraProfileSettingsManager derivedPropertiesModelID]
  -[HMDCameraProfileSettingsManager currentSettingsModel]
  -[HMDCameraProfileSettingsManager _settingsFromSettingsModel:]
  -[HMDCameraProfileSettingsManager defaultSettingsModel]
  -[HMDCameraProfileSettingsManager _updateSettingsWithDerivedProperties:]
  -[HMDCameraProfileSettingsManager _settingsModelForUpdate]
  -[HMDCameraProfileSettingsManager featuresDataSource]
  -[HMDCameraProfileSettingsManager _localZoneUpdateCompletionForMessage:]
  -[HMDCameraProfileSettingsManager _shouldQueryCanEnableRecordingForAccessMode:currentSettings:]
  -[HMDCameraProfileSettingsManager _shouldQueryCanDisableRecordingForAccessMode:isAtHome:currentSettings:]
  -[HMDCameraProfileSettingsManager currentNotificationSettings]
  -[HMDCameraProfileSettingsManager _updateNotificationSettings:forMessage:]
  -[HMDCameraProfileSettingsManager _evaluateHomePresence]
  -[HMDCameraProfileSettingsManager _synchronizeAllSettingsToCamera]
  -[HMDCameraProfileSettingsManager setSafeModeTimer:]
  -[HMDCameraProfileSettingsManager _startSafeModeTimer]
  -[HMDCameraProfileSettingsManager _updateCurrentAccessModeForSettings:userInitiated:reason:]
  -[HMDCameraProfileSettingsManager derivedPropertiesModel]
  -[HMDCameraProfileSettingsManager _populateCurrentAccessModeFieldForDerivedProperties:currentSettings:userInitiated:didUpdateField:]
  -[HMDCameraProfileSettingsManager _handleConnectedToAccessory]
  -[HMDCameraProfileSettingsManager _notifyClientsOfCurrentSettings]
  -[HMDCameraProfileSettingsManager _coordinateSmartBulletinNotificationWithServiceBulletinNotification:]
  -[HMDCameraProfileSettingsManager _payloadForSettingsModel:]
  -[HMDCameraProfileSettingsManager _addAccessModeCharacteristicWriteRequestsToArray:currentAccessMode:]
  -[HMDCameraProfileSettingsManager _addHomeKitCameraActiveCharacteristicWriteRequestToArray:currentAccessMode:]
  -[HMDCameraProfileSettingsManager _addNightVisionCharacteristicWriteRequestToArray:nightVisionEnabled:]
  -[HMDCameraProfileSettingsManager _addSnapshotsActiveCharacteristicWriteRequestToArray:snapshotsAllowed:]
  -[HMDCameraProfileSettingsManager _addOperatingModeIndicatorCharacteristicWriteRequestToArray:accessModeIndicatorEnabled:]
  -[HMDCameraProfileSettingsManager _addPeriodicSnapshotsActiveCharacteristicWriteRequestToArray:periodicSnapshotsAllowed:]
  -[HMDCameraProfileSettingsManager _addRecordingAudioEnabledWriteRequestToArray:recordingAudioEnabled:]
  -[HMDCameraProfileSettingsManager _addVideoAnalysisActiveWriteRequestToArray:currentAccessMode:]
  -[HMDCameraProfileSettingsManager _handleCharacteristicWriteRequests:]
  -[HMDCameraProfileSettingsManager _notifyClientsOfChangedSettings:isInitialSettingsUpdate:]
  -[HMDCameraProfileSettingsManager _addWriteRequestToArray:forCharacteristicWithType:ofServiceWithType:value:]
  -[HMDCameraProfileSettingsManager safeModeTimer]
  -[HMDCameraProfileSettingsManager timerFactory]
  -[HMDCameraProfileSettingsManager _handleModelUpdate:previousModel:]
  -[HMDCameraProfileSettingsManager _handleUpdatedSettings:previousSettings:]
  -[HMDCameraProfileSettingsManager _handleUpdatedDerivedProperties:previousProperties:]
  -[HMDCameraProfileSettingsManager bulletinBoard]
  -[HMDCameraProfileSettingsManager _notifyClientsOfChangedSettingsModel:isInitialSettingsUpdate:]
  -[HMDCameraProfileSettingsManager handleBulletinNotificationEnableStateDidChange:]
  -[HMDCameraProfileSettingsManager _createNotificationSettingsUsingSettingsModel:]
  -[HMDCameraProfileSettingsManager characteristicsAvailabilityListener]
  -[HMDCameraProfileSettingsManager listener:didUpdateAvailableCharacteristics:]
  -[HMDCameraProfileSettingsManager configureWithMessageDispatcher:adminMessageDispatcher:deviceIsResidentCapable:]
  -[HMDCameraProfileSettingsManager disableRecordingAccessModes]
  -[HMDCameraProfileSettingsManager localZone:processingDidComplete:mirrorOutputFuture:actions:]
  -[HMDCameraProfileSettingsManager setTimerFactory:]


HMDRPIdentity : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSSecureCoding>
 @property  HMFKey *deviceIRK

  // class methods
  +[HMDRPIdentity supportsSecureCoding]
  +[HMDRPIdentity logCategory]
  +[HMDRPIdentity identityWithRPIdentity:]

  // instance methods
  -[HMDRPIdentity copyWithZone:]
  -[HMDRPIdentity logIdentifier]
  -[HMDRPIdentity init]
  -[HMDRPIdentity .cxx_destruct]
  -[HMDRPIdentity encodeWithCoder:]
  -[HMDRPIdentity shortDescription]
  -[HMDRPIdentity isEqual:]
  -[HMDRPIdentity deviceIRK]
  -[HMDRPIdentity initWithCoder:]
  -[HMDRPIdentity initWithDeviceIRK:]
  -[HMDRPIdentity isEqualToRPIndentity:]


HMObjectCacheHMDCharacteristicMetadata : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMObjectCacheHMDCharacteristicMetadata enabled]
  +[HMObjectCacheHMDCharacteristicMetadata cachedInstanceForCharacteristicMetadata:]


HAPCharacteristicTuple : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HAPCharacteristic *hapCharacteristic
 @property  NSString *serverIdentifier
 @property  long long linkType

  // instance methods
  -[HAPCharacteristicTuple setServerIdentifier:]
  -[HAPCharacteristicTuple linkType]
  -[HAPCharacteristicTuple .cxx_destruct]
  -[HAPCharacteristicTuple setLinkType:]
  -[HAPCharacteristicTuple serverIdentifier]
  -[HAPCharacteristicTuple initWithHAPCharacteristic:serverIdentifier:linkType:]
  -[HAPCharacteristicTuple hapCharacteristic]
  -[HAPCharacteristicTuple setHapCharacteristic:]


HMDCharacteristic : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBulletinIdentifiers, NSSecureCoding, HMFDumpState>
 @property  NSDictionary *bulletinContext
 @property  NSString *contextID
 @property  NSUUID *contextSPIUniqueIdentifier
 @property  NSSet *hapCharacteristicTuples
 @property  NSString *serializedIdentifier
 @property  NSString *characteristicType
 @property  id lastKnownValue
 @property  NSDate *lastKnownValueUpdateTime
 @property  NSNumber *characteristicInstanceID
 @property  long long characteristicProperties
 @property  NSSet *notificationRegistrations
 @property  NSDate *notificationEnabledTime
 @property  BOOL notificationRegisteredWithRemoteGateway
 @property  HMDHAPAccessory *accessory
 @property  HMDService *service
 @property  NSString *type
 @property  NSNumber *instanceID
 @property  long long properties
 @property  id value
 @property  NSNumber *stateNumber
 @property  HMDCharacteristicMetadata *metadata
 @property  NSData *authorizationData
 @property  BOOL broadcastNotificationEnabled
 @property  BOOL shouldIgnoreCacheValueForRead
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCharacteristic supportsSecureCoding]
  +[HMDCharacteristic value:differentThan:]
  +[HMDCharacteristic sortComparatorForCharacteristicDictionary]

  // instance methods
  -[HMDCharacteristic characteristicType]
  -[HMDCharacteristic init]
  -[HMDCharacteristic instanceID]
  -[HMDCharacteristic updateWithDictionary:]
  -[HMDCharacteristic isNotificationEnabled]
  -[HMDCharacteristic .cxx_destruct]
  -[HMDCharacteristic encodeWithCoder:]
  -[HMDCharacteristic bulletinContext]
  -[HMDCharacteristic type]
  -[HMDCharacteristic service]
  -[HMDCharacteristic accessory]
  -[HMDCharacteristic unconfigure]
  -[HMDCharacteristic value]
  -[HMDCharacteristic contextID]
  -[HMDCharacteristic shortTypeDescription]
  -[HMDCharacteristic properties]
  -[HMDCharacteristic setCharacteristicType:]
  -[HMDCharacteristic notificationEnabledTime]
  -[HMDCharacteristic setNotificationEnabledTime:]
  -[HMDCharacteristic metadata]
  -[HMDCharacteristic dumpState]
  -[HMDCharacteristic initWithCoder:]
  -[HMDCharacteristic contextSPIUniqueIdentifier]
  -[HMDCharacteristic stateNumber]
  -[HMDCharacteristic notificationRegistrations]
  -[HMDCharacteristic supportsNotification]
  -[HMDCharacteristic isNonHomeNotificationsEnabled]
  -[HMDCharacteristic isClientNotificationEnabled]
  -[HMDCharacteristic isNonClientNotificationEnabled]
  -[HMDCharacteristic lastKnownValueUpdateTime]
  -[HMDCharacteristic authorizationData]
  -[HMDCharacteristic notificationRegisteredWithRemoteGateway]
  -[HMDCharacteristic isValueUpdatedFromHAPCharacteristic:]
  -[HMDCharacteristic lastKnownValue]
  -[HMDCharacteristic setStateNumber:]
  -[HMDCharacteristic updateValue:updatedTime:stateNumber:]
  -[HMDCharacteristic shouldIgnoreCacheValueForRead]
  -[HMDCharacteristic validateValueForWrite:outValue:]
  -[HMDCharacteristic supportsRead]
  -[HMDCharacteristic serializedIdentifier]
  -[HMDCharacteristic characteristicInstanceID]
  -[HMDCharacteristic setNotificationEnabled:forClientIdentifier:]
  -[HMDCharacteristic characteristicForHAPAccessory:]
  -[HMDCharacteristic unconfigureForServerIdentifier:linkType:]
  -[HMDCharacteristic setNotificationRegisteredWithRemoteGateway:]
  -[HMDCharacteristic deregisterNotificationForClientIdentifier:]
  -[HMDCharacteristic isNotificationEnabledForClientIdentifier:]
  -[HMDCharacteristic setBroadcastNotificationEnabled:]
  -[HMDCharacteristic supportsWrite]
  -[HMDCharacteristic setAuthorizationData:]
  -[HMDCharacteristic initWithCharacteristic:service:accessory:]
  -[HMDCharacteristic configureWithCharacteristic:]
  -[HMDCharacteristic updateLastKnownValue]
  -[HMDCharacteristic getCharacteristicDictionary]
  -[HMDCharacteristic broadcastNotificationEnabled]
  -[HMDCharacteristic characteristicProperties]
  -[HMDCharacteristic characteristicTypeDescription]
  -[HMDCharacteristic hapCharacteristicTuples]
  -[HMDCharacteristic setLastKnownValue:]
  -[HMDCharacteristic setLastKnownValueUpdateTime:]
  -[HMDCharacteristic hapCharacteristicTupleWithIdentifier:linkType:]
  -[HMDCharacteristic setHapCharacteristicTuples:]
  -[HMDCharacteristic validateValue:outValue:]
  -[HMDCharacteristic validateValueForNotify:outValue:]
  -[HMDCharacteristic isNotificationEnabledForClientIdentifierPrefix:]
  -[HMDCharacteristic updateService:accessory:]
  -[HMDCharacteristic setCharacteristicInstanceID:]
  -[HMDCharacteristic setCharacteristicProperties:]


HMDHomePersonManager : HMDPersonManager <HMFLogging, HMDDatabaseZoneManagerDataSource>
 @property  HMHomePersonManagerSettings *dataUnavailableHomeSettings
 @property  HMDHome *home
 @property  HMIHomePersonManager *hmiPersonManager
 @property  HMHomePersonManagerSettings *settings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomePersonManager logCategory]

  // instance methods
  -[HMDHomePersonManager logIdentifier]
  -[HMDHomePersonManager .cxx_destruct]
  -[HMDHomePersonManager setHome:]
  -[HMDHomePersonManager settings]
  -[HMDHomePersonManager home]
  -[HMDHomePersonManager manager:shouldShareWithUser:]
  -[HMDHomePersonManager manager:shouldGrantWriteAccessToUser:]
  -[HMDHomePersonManager zoneManager:shouldRequestShareInvitationFromUser:]
  -[HMDHomePersonManager configureWithHome:]
  -[HMDHomePersonManager sharesFaceClassifications]
  -[HMDHomePersonManager hmiPersonManager]
  -[HMDHomePersonManager handleUpdatedSettings:]
  -[HMDHomePersonManager updateSettingsUsingMessagePayload:]
  -[HMDHomePersonManager handleUserCamerasAccessLevelDidChangeNotification:]
  -[HMDHomePersonManager handleUserRemoteAccessDidChangeNotification:]
  -[HMDHomePersonManager syncsPersonData]
  -[HMDHomePersonManager initWithUUID:zoneManager:dataReceivers:workQueue:home:]
  -[HMDHomePersonManager initWithHome:zoneUUID:workQueue:]
  -[HMDHomePersonManager dataUnavailableHomeSettings]


HMDCameraSnapshotMetrics : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDCameraMetricsSnapshotLogEvent *cameraSnapshotMetricsLogEvent
 @property  NSError *error

  // instance methods
  -[HMDCameraSnapshotMetrics dealloc]
  -[HMDCameraSnapshotMetrics setError:]
  -[HMDCameraSnapshotMetrics .cxx_destruct]
  -[HMDCameraSnapshotMetrics error]
  -[HMDCameraSnapshotMetrics initWithSessionID:cameraAccessory:isLocal:snapshotForNotification:]
  -[HMDCameraSnapshotMetrics cameraSnapshotMetricsLogEvent]


HMDSiriServer : NSObject /usr/lib/libc++.1.dylib <HMDDataStreamBulkSendListener, HMDSiriAccessoryMonitorDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  HMDNotificationRegistration *notificationRegistration
 @property  HMDSiriRemoteInputServer *siriInputServer
 @property  HMDSiriAccessoryMonitor *siriAccessoryMonitor
 @property  HMDSiriSession *siriUISession
 @property  unsigned int targetControlIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSiriServer logCategory]
  +[HMDSiriServer sharedSiriServer]

  // instance methods
  -[HMDSiriServer init]
  -[HMDSiriServer .cxx_destruct]
  -[HMDSiriServer setQueue:]
  -[HMDSiriServer queue]
  -[HMDSiriServer registerForMessages]
  -[HMDSiriServer monitor:needsSiriCapabilityForAccessory:]
  -[HMDSiriServer monitor:willNotAllowAccessoryForDragonSiri:]
  -[HMDSiriServer monitorHasNoAccessoriesForDragonSiri:]
  -[HMDSiriServer monitor:willAllowAccessoryForDragonSiri:]
  -[HMDSiriServer setTargetableAccessory:withControllers:]
  -[HMDSiriServer accessoryDidCloseDataStream:]
  -[HMDSiriServer accessory:didReceiveBulkSessionCandidate:]
  -[HMDSiriServer accessoryDidStartListening:]
  -[HMDSiriServer handleAccessoryConnected:]
  -[HMDSiriServer handleAccessoryDisconnected:]
  -[HMDSiriServer siriAccessoryMonitor]
  -[HMDSiriServer targetControlIdentifier]
  -[HMDSiriServer setTargetControlIdentifier:]
  -[HMDSiriServer notificationRegistration]
  -[HMDSiriServer handleAccessoryHasBulkSendDataStream:]
  -[HMDSiriServer handleAccessoryRemoved:]
  -[HMDSiriServer _checkSiriSupportByAccessory:]
  -[HMDSiriServer siriInputServer]
  -[HMDSiriServer setSiriInputServer:]
  -[HMDSiriServer siriUISession]
  -[HMDSiriServer setSiriUISession:]
  -[HMDSiriServer _maybeTearDownSiriPlugin]
  -[HMDSiriServer _isSiriInputType:supportedOnAccessory:siriAudioConfiguration:]
  -[HMDSiriServer _getBestAudioCodecConfiguration:]
  -[HMDSiriServer _isAudioCodecSupported:]
  -[HMDSiriServer _setupSiriUIContext]
  -[HMDSiriServer _setupSiriPlugin]
  -[HMDSiriServer _removeDataStreamListenerForAccessory:]
  -[HMDSiriServer _tearDownSiriUIContext]
  -[HMDSiriServer _getSiriSessionForAccessory:]
  -[HMDSiriServer setSiriAccessoryMonitor:]


HMDBLEBroadcastEventReceived : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDAccessory *accessory
 @property  BOOL hasExpectedGSN

  // class methods
  +[HMDBLEBroadcastEventReceived initialize]
  +[HMDBLEBroadcastEventReceived uuid]
  +[HMDBLEBroadcastEventReceived broadcastEventFromAccessory:withExpectedGSN:]

  // instance methods
  -[HMDBLEBroadcastEventReceived .cxx_destruct]
  -[HMDBLEBroadcastEventReceived accessory]
  -[HMDBLEBroadcastEventReceived AWDMessageType]
  -[HMDBLEBroadcastEventReceived metricForAWD]
  -[HMDBLEBroadcastEventReceived initBroadcastEventFromAccessory:withExpectedGSN:]
  -[HMDBLEBroadcastEventReceived hasExpectedGSN]


HMDCameraResidentMessageContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMFMessage *message
 @property  NSObject<OS_dispatch_queue> *responseQueue
 @property  @? responseHandler

  // instance methods
  -[HMDCameraResidentMessageContext message]
  -[HMDCameraResidentMessageContext .cxx_destruct]
  -[HMDCameraResidentMessageContext responseHandler]
  -[HMDCameraResidentMessageContext responseQueue]
  -[HMDCameraResidentMessageContext initWithMessage:responseQueue:responseHandler:]


HMDCameraResidentMessageHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSString *logIdentifier
 @property  NSMutableDictionary *messageContextsBySessionID
 @property  HMFUnfairLock *lock
 @property  HMDAccessory *accessory
 @property  HMDMessageDispatcher *messageDispatcher
 @property  BOOL companionIsResident
 @property  HMDDevice *residentDeviceForCamera
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraResidentMessageHandler logCategory]

  // instance methods
  -[HMDCameraResidentMessageHandler logIdentifier]
  -[HMDCameraResidentMessageHandler .cxx_destruct]
  -[HMDCameraResidentMessageHandler lock]
  -[HMDCameraResidentMessageHandler accessory]
  -[HMDCameraResidentMessageHandler messageDispatcher]
  -[HMDCameraResidentMessageHandler setMessageDispatcher:]
  -[HMDCameraResidentMessageHandler residentDeviceForCamera]
  -[HMDCameraResidentMessageHandler companionIsResident]
  -[HMDCameraResidentMessageHandler sendMessageWithName:cameraSessionID:payload:target:responseQueue:responseHandler:]
  -[HMDCameraResidentMessageHandler messageContextsBySessionID]
  -[HMDCameraResidentMessageHandler sendMessageForCameraWithSessionID:]
  -[HMDCameraResidentMessageHandler enqueueMessageContext:forCameraSessionID:]
  -[HMDCameraResidentMessageHandler dequeueMessageContextForCameraSessionID:]
  -[HMDCameraResidentMessageHandler sendRemoteMessageWithName:cameraSessionID:payload:target:device:responseQueue:responseHandler:]
  -[HMDCameraResidentMessageHandler initWithAccessory:logID:]
  -[HMDCameraResidentMessageHandler sendMessageWithName:cameraSessionID:payload:target:device:responseQueue:responseHandler:]


AWDHomeKitCameraStreamConfigure : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasResolution
 @property  int resolution
 @property  BOOL hasFramerate
 @property  unsigned int framerate
 @property  BOOL hasAudioCodec
 @property  int audioCodec
 @property  BOOL hasSampleRate
 @property  int sampleRate
 @property  BOOL hasCryptoSuite
 @property  int cryptoSuite

  // instance methods
  -[AWDHomeKitCameraStreamConfigure copyWithZone:]
  -[AWDHomeKitCameraStreamConfigure audioCodec]
  -[AWDHomeKitCameraStreamConfigure setHasSampleRate:]
  -[AWDHomeKitCameraStreamConfigure hasSampleRate]
  -[AWDHomeKitCameraStreamConfigure framerate]
  -[AWDHomeKitCameraStreamConfigure setFramerate:]
  -[AWDHomeKitCameraStreamConfigure resolution]
  -[AWDHomeKitCameraStreamConfigure readFrom:]
  -[AWDHomeKitCameraStreamConfigure writeTo:]
  -[AWDHomeKitCameraStreamConfigure isEqual:]
  -[AWDHomeKitCameraStreamConfigure setSampleRate:]
  -[AWDHomeKitCameraStreamConfigure copyTo:]
  -[AWDHomeKitCameraStreamConfigure dictionaryRepresentation]
  -[AWDHomeKitCameraStreamConfigure sampleRate]
  -[AWDHomeKitCameraStreamConfigure mergeFrom:]
  -[AWDHomeKitCameraStreamConfigure setResolution:]
  -[AWDHomeKitCameraStreamConfigure setHasResolution:]
  -[AWDHomeKitCameraStreamConfigure hasResolution]
  -[AWDHomeKitCameraStreamConfigure resolutionAsString:]
  -[AWDHomeKitCameraStreamConfigure StringAsResolution:]
  -[AWDHomeKitCameraStreamConfigure setHasFramerate:]
  -[AWDHomeKitCameraStreamConfigure hasFramerate]
  -[AWDHomeKitCameraStreamConfigure setAudioCodec:]
  -[AWDHomeKitCameraStreamConfigure setHasAudioCodec:]
  -[AWDHomeKitCameraStreamConfigure hasAudioCodec]
  -[AWDHomeKitCameraStreamConfigure audioCodecAsString:]
  -[AWDHomeKitCameraStreamConfigure StringAsAudioCodec:]
  -[AWDHomeKitCameraStreamConfigure sampleRateAsString:]
  -[AWDHomeKitCameraStreamConfigure StringAsSampleRate:]
  -[AWDHomeKitCameraStreamConfigure cryptoSuite]
  -[AWDHomeKitCameraStreamConfigure setCryptoSuite:]
  -[AWDHomeKitCameraStreamConfigure setHasCryptoSuite:]
  -[AWDHomeKitCameraStreamConfigure hasCryptoSuite]
  -[AWDHomeKitCameraStreamConfigure cryptoSuiteAsString:]
  -[AWDHomeKitCameraStreamConfigure StringAsCryptoSuite:]


HMDMessageDispatcher : HMFMessageDispatcher /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableDictionary *remoteGateways
 @property  HMDSecureRemoteMessageFilter *secureRemoteMessageFilter
 @property  HMDHomeManager *homeManager
 @property  HMDXPCMessageTransport *XPCTransport
 @property  HMDSecureRemoteMessageTransport *secureRemoteTransport
 @property  HMDMessageFilterChain *messageFilterChain

  // class methods
  +[HMDMessageDispatcher defaultDispatcher]
  +[HMDMessageDispatcher destinationWithTarget:userID:destination:multicast:]

  // instance methods
  -[HMDMessageDispatcher sendMessage:completionHandler:]
  -[HMDMessageDispatcher dealloc]
  -[HMDMessageDispatcher .cxx_destruct]
  -[HMDMessageDispatcher dispatchMessage:]
  -[HMDMessageDispatcher setHomeManager:]
  -[HMDMessageDispatcher reset]
  -[HMDMessageDispatcher filterClasses]
  -[HMDMessageDispatcher homeManager]
  -[HMDMessageDispatcher messageFilterChain]
  -[HMDMessageDispatcher configureHomeManager:]
  -[HMDMessageDispatcher secureRemoteTransport]
  -[HMDMessageDispatcher residentCommunicationHandlerForHome:]
  -[HMDMessageDispatcher sendSecureMessage:target:userID:destination:responseQueue:responseHandler:]
  -[HMDMessageDispatcher remoteAccessDeviceForHome:]
  -[HMDMessageDispatcher electDeviceForUser:destination:deviceCapabilities:responseTimeout:responseQueue:responseHandler:]
  -[HMDMessageDispatcher setRemoteAccessDevice:forHome:]
  -[HMDMessageDispatcher initWithXPCTransport:secureRemoteTransport:messageFilterChain:]
  -[HMDMessageDispatcher handleSecureSessionError:]
  -[HMDMessageDispatcher httpMessageTransport]
  -[HMDMessageDispatcher XPCTransport]
  -[HMDMessageDispatcher enableMessageServer]
  -[HMDMessageDispatcher disableMessageServer]
  -[HMDMessageDispatcher configureHTTPTransport:]
  -[HMDMessageDispatcher remoteGateways]
  -[HMDMessageDispatcher setRemoteGateways:]
  -[HMDMessageDispatcher secureRemoteMessageFilter]
  -[HMDMessageDispatcher setSecureRemoteMessageFilter:]
  -[HMDMessageDispatcher _setRemoteAccessDevice:forHome:sendNotification:]
  -[HMDMessageDispatcher updateHome:configurationVersion:]
  -[HMDMessageDispatcher removeHome:]
  -[HMDMessageDispatcher prepareAnswerForRequestedCapabilities:]
  -[HMDMessageDispatcher setCompanionDevice:forHome:]


HMDRemoteLoginInitiatorCompanionAuthentication : HMDRemoteLoginInitiatorAuthentication
 @property  ACAccount *account

  // class methods
  +[HMDRemoteLoginInitiatorCompanionAuthentication logCategory]

  // instance methods
  -[HMDRemoteLoginInitiatorCompanionAuthentication dealloc]
  -[HMDRemoteLoginInitiatorCompanionAuthentication account]
  -[HMDRemoteLoginInitiatorCompanionAuthentication .cxx_destruct]
  -[HMDRemoteLoginInitiatorCompanionAuthentication loginType]
  -[HMDRemoteLoginInitiatorCompanionAuthentication _authenticate]
  -[HMDRemoteLoginInitiatorCompanionAuthentication authenticate]
  -[HMDRemoteLoginInitiatorCompanionAuthentication initWithSessionID:remoteDevice:workQueue:remoteMessageSender:delegate:account:]


HMDObjectLookup : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSMapTable *uuidToObjectMapping
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDObjectLookup logCategory]

  // instance methods
  -[HMDObjectLookup .cxx_destruct]
  -[HMDObjectLookup workQueue]
  -[HMDObjectLookup initWithWorkQueue:]
  -[HMDObjectLookup scanObjects]
  -[HMDObjectLookup uuidToObjectMapping]
  -[HMDObjectLookup _lookUpObjectWithUUID:applyObjectChange:previous:result:completionHandler:]
  -[HMDObjectLookup applyChange:previous:onObject:result:completionHandler:]
  -[HMDObjectLookup resetObjects]
  -[HMDObjectLookup lookUpAndApplyObjectChange:previous:result:completionHandler:]


HMObjectCacheHMDXPCMessagePolicy : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMObjectCacheHMDXPCMessagePolicy enabled]
  +[HMObjectCacheHMDXPCMessagePolicy cachedInstanceForXPCMessagePolicy:]


HMDXPCMessagePolicy : HMFMessagePolicy /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long entitlements

  // class methods
  +[HMDXPCMessagePolicy defaultPolicy]
  +[HMDXPCMessagePolicy policyWithEntitlements:]

  // instance methods
  -[HMDXPCMessagePolicy copyWithZone:]
  -[HMDXPCMessagePolicy init]
  -[HMDXPCMessagePolicy entitlements]
  -[HMDXPCMessagePolicy isEqual:]
  -[HMDXPCMessagePolicy __initWithEntitlements:]


HMDSnapshotRemoteSession : HMDSnapshotSession
  // instance methods
  -[HMDSnapshotRemoteSession initWithSessionID:accessory:snapshotGetter:message:waitPeriod:streamingTierType:cameraLocallyReachable:]


HMFConnectivityInfo : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  HMFWoBLEInfo *woBLEInfo
 @property  HMFWoWLANInfo *woWLANInfo
 @property  NSString *accessoryIdentifier

  // class methods
  +[HMFConnectivityInfo supportsSecureCoding]
  +[HMFConnectivityInfo shortDescription]

  // instance methods
  -[HMFConnectivityInfo accessoryIdentifier]
  -[HMFConnectivityInfo .cxx_destruct]
  -[HMFConnectivityInfo encodeWithCoder:]
  -[HMFConnectivityInfo isEqual:]
  -[HMFConnectivityInfo initWithCoder:]
  -[HMFConnectivityInfo woBLEInfo]
  -[HMFConnectivityInfo woWLANInfo]
  -[HMFConnectivityInfo initWithAccessory:woBLEInfo:]
  -[HMFConnectivityInfo initWithAccessory:woWLANInfo:]
  -[HMFConnectivityInfo updateWithWoWLANInfo:]
  -[HMFConnectivityInfo setWoBLEInfo:]
  -[HMFConnectivityInfo setWoWLANInfo:]
  -[HMFConnectivityInfo updateWithWoBLEInfo:]


HMFWoBLEInfo : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSData *bleIdentifier

  // class methods
  +[HMFWoBLEInfo supportsSecureCoding]
  +[HMFWoBLEInfo shortDescription]

  // instance methods
  -[HMFWoBLEInfo .cxx_destruct]
  -[HMFWoBLEInfo encodeWithCoder:]
  -[HMFWoBLEInfo isEqual:]
  -[HMFWoBLEInfo initWithCoder:]
  -[HMFWoBLEInfo bleIdentifier]
  -[HMFWoBLEInfo initWithBLEIdentifier:]


HMFWoWLANInfo : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSData *primaryMACAddress
 @property  NSArray *additionalMACAddresses

  // class methods
  +[HMFWoWLANInfo supportsSecureCoding]
  +[HMFWoWLANInfo shortDescription]

  // instance methods
  -[HMFWoWLANInfo .cxx_destruct]
  -[HMFWoWLANInfo encodeWithCoder:]
  -[HMFWoWLANInfo isEqual:]
  -[HMFWoWLANInfo initWithCoder:]
  -[HMFWoWLANInfo primaryMACAddress]
  -[HMFWoWLANInfo initWithPrimaryIdentifier:wifiIdentifiers:]
  -[HMFWoWLANInfo additionalMACAddresses]


HMDSnapshotSessionApplicationID : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying>
 @property  HMDCameraSnapshotSessionID *sessionID
 @property  HMDProcessInfo *processInfo

  // instance methods
  -[HMDSnapshotSessionApplicationID copyWithZone:]
  -[HMDSnapshotSessionApplicationID sessionID]
  -[HMDSnapshotSessionApplicationID processInfo]
  -[HMDSnapshotSessionApplicationID .cxx_destruct]
  -[HMDSnapshotSessionApplicationID isEqual:]
  -[HMDSnapshotSessionApplicationID initWithSessionID:processInfo:]


HMDSettingAttachedSettingUpdate : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *keyPath
 @property  HMSettingValue *settingValue

  // instance methods
  -[HMDSettingAttachedSettingUpdate .cxx_destruct]
  -[HMDSettingAttachedSettingUpdate keyPath]
  -[HMDSettingAttachedSettingUpdate initWithKeyPath:settingValue:]
  -[HMDSettingAttachedSettingUpdate settingValue]


HMDSettingOnChangeAttachedUpdatesResult : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSArray *settingsToUpdate
 @property  NSArray *modelsToUpdate
 @property  @? onCommitCompletion

  // instance methods
  -[HMDSettingOnChangeAttachedUpdatesResult .cxx_destruct]
  -[HMDSettingOnChangeAttachedUpdatesResult initWithSettingsToUpdate:models:onCommitCompletion:]
  -[HMDSettingOnChangeAttachedUpdatesResult settingsToUpdate]
  -[HMDSettingOnChangeAttachedUpdatesResult modelsToUpdate]
  -[HMDSettingOnChangeAttachedUpdatesResult onCommitCompletion]


HMDSettingsController : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDSettingsControllerProtocol, HMDSettingsMessageController, HMDSettingTransactionReceiverProtocol>
 @property  <HMDSettingsMessageHandlerProtocol> *messageHandler
 @property  <HMDSettingsControllerDependency> *dependency
 @property  <HMDSettingsControllerDelegate> *delegate
 @property  HMDSettingGroup *rootGroup
 @property  NSMapTable *groupsMap
 @property  NSMapTable *settingsMap
 @property  NSArray *allObjectIdentifiers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMDSettingsController logCategory]

  // instance methods
  -[HMDSettingsController configure]
  -[HMDSettingsController messageHandler]
  -[HMDSettingsController logIdentifier]
  -[HMDSettingsController groupsMap]
  -[HMDSettingsController settingsMap]
  -[HMDSettingsController setRootGroup:]
  -[HMDSettingsController settingForIdentifier:]
  -[HMDSettingsController settingGroupForIdentifier:]
  -[HMDSettingsController setGroupsMap:]
  -[HMDSettingsController setSettingsMap:]
  -[HMDSettingsController .cxx_destruct]
  -[HMDSettingsController encodeWithCoder:]
  -[HMDSettingsController dependency]
  -[HMDSettingsController settingForKeyPath:]
  -[HMDSettingsController delegate]
  -[HMDSettingsController rootGroup]
  -[HMDSettingsController transactionSettingGroupModelUpdated:previousModel:completion:]
  -[HMDSettingsController transactionSettingModelUpdated:previousModel:completion:]
  -[HMDSettingsController transactionSettingConstraintModelUpdated:previousModel:completion:]
  -[HMDSettingsController updateWithEncodedValue:onSettingIdentifier:completion:]
  -[HMDSettingsController updateWithValue:onSetting:completion:]
  -[HMDSettingsController _updateRootGroup:]
  -[HMDSettingsController handleAddedGroupModel:shouldNotify:completion:]
  -[HMDSettingsController _handleAddedRootGroup:]
  -[HMDSettingsController settingsHierarchyDidChange]
  -[HMDSettingsController handleAddedSettingModel:shouldNotify:completion:]
  -[HMDSettingsController _flattenedSettingControllerRoot:withCurrentPath:andReturnDictionary:]
  -[HMDSettingsController handleAddedConstraintModel:shouldNotify:completion:]
  -[HMDSettingsController resetupMessageHandlersWithAddedGroups:removedGroups:addedSettings:removedSettings:]
  -[HMDSettingsController keyPathsInModels:]
  -[HMDSettingsController keyPathsInExistingSettings]
  -[HMDSettingsController updateParentsInKeyPathToModel:usingKeyPathToSetting:]
  -[HMDSettingsController _keyPathsToModelInModelIDToModelLookup:parentIDToModelIDsLookup:currentID:currentPath:]
  -[HMDSettingsController _keyPathsFromGroup:currentPath:]
  -[HMDSettingsController modelsToMigrateSettings]
  -[HMDSettingsController updateRootGroup:]
  -[HMDSettingsController handleAddedGroupModel:completion:]
  -[HMDSettingsController handleAddedSettingModel:completion:]
  -[HMDSettingsController handleAddedConstraintModel:completion:]
  -[HMDSettingsController settingValuesByKeyPathWithPrefix:]
  -[HMDSettingsController migrateSettingsWithCompletion:]
  -[HMDSettingsController modelsToMakeSettings]
  -[HMDSettingsController loadWithModels:]
  -[HMDSettingsController allObjectIdentifiers]
  -[HMDSettingsController transactionSettingGroupModelRemoved:completion:]
  -[HMDSettingsController transactionSettingModelRemoved:completion:]
  -[HMDSettingsController transactionSettingConstraintModelRemoved:completion:]
  -[HMDSettingsController initWithDependency:delegate:]
  -[HMDSettingsController updateWithValue:onSettingIdentifier:completion:]


HMDHomeModel : HMDBackingStoreModelObject
 @property  NSData *encodedNaturalLightingContext
 @property  NSString *name
 @property  NSString *ownerName
 @property  NSString *ownerUserID
 @property  NSString *ownerUUID
 @property  NSDate *creationDate
 @property  NSDate *firstHAPAccessoryAddedDate
 @property  NSString *defaultRoomUUID
 @property  NSNumber *presenceAuthorizationStatus
 @property  NSNumber *presenceComputeStatus
 @property  NSData *ownerPublicKey
 @property  NSData *homeLocationData
 @property  NSString *primaryResidentUUID
 @property  HMDHomeKitVersion *sharedHomeSourceVersion
 @property  NSNumber *networkProtectionMode
 @property  NSNumber *multiUserEnabled
 @property  NSNumber *hasAnyUserAcknowledgedCameraRecordingOnboarding
 @property  NSNumber *doorbellChimeEnabled
 @property  HMDNaturalLightingContext *naturalLightingContext

  // class methods
  +[HMDHomeModel properties]

  // instance methods
  -[HMDHomeModel naturalLightingContext]
  -[HMDHomeModel setNaturalLightingContext:]


HMDHomeConfigurationModel : HMDBackingStoreModelObject
 @property  NSNumber *configurationVersion
 @property  BOOL homeHasLocalChanges

  // class methods
  +[HMDHomeConfigurationModel properties]

  // instance methods
  -[HMDHomeConfigurationModel homeHasLocalChanges]
  -[HMDHomeConfigurationModel setHomeHasLocalChanges:]


HMDSharedHomeModel : HMDBackingStoreModelObject
 @property  NSData *homeData
 @property  NSNumber *configurationVersion

  // class methods
  +[HMDSharedHomeModel properties]

  // instance methods
  -[HMDSharedHomeModel isReplayable]


HMDHomeSettingsModel : HMDBackingStoreModelObject
 @property  NSNumber *automaticSoftwareUpdateEnabled

  // class methods
  +[HMDHomeSettingsModel properties]
  +[HMDHomeSettingsModel modelIDForHome:]
  +[HMDHomeSettingsModel defaultModelForHome:]
  +[HMDHomeSettingsModel modelNamespace]


HMDHomeMediaSettingsModel : HMDBackingStoreModelObject
 @property  NSNumber *minimumMediaUserPrivilege
 @property  NSNumber *mediaPeerToPeerEnabled
 @property  NSString *mediaPassword

  // class methods
  +[HMDHomeMediaSettingsModel properties]
  +[HMDHomeMediaSettingsModel modelIDForHome:]
  +[HMDHomeMediaSettingsModel defaultModelForHome:]
  +[HMDHomeMediaSettingsModel modelNamespace]


HMDHomeNetworkRouterManagingDeviceSettingsModel : HMDBackingStoreModelObject
 @property  NSString *primaryNetworkRouterManagingDeviceUUID

  // class methods
  +[HMDHomeNetworkRouterManagingDeviceSettingsModel properties]
  +[HMDHomeNetworkRouterManagingDeviceSettingsModel modelIDForHome:]
  +[HMDHomeNetworkRouterManagingDeviceSettingsModel defaultModelForHome:]
  +[HMDHomeNetworkRouterManagingDeviceSettingsModel modelNamespace]

  // instance methods
  -[HMDHomeNetworkRouterManagingDeviceSettingsModel dependentUUIDs]


HMDHomeNetworkRouterSettingsModel : HMDBackingStoreModelObject
 @property  NSString *activeNetworkRouterAccessoryUUID
 @property  NSString *activeNetworkRouterInitialSetupNeededUUID
 @property  NSString *minimumNetworkRouterSupportHomeKitVersion
 @property  NSString *minHomeKitVersionForAccessoryNetworkProtectionChange

  // class methods
  +[HMDHomeNetworkRouterSettingsModel properties]
  +[HMDHomeNetworkRouterSettingsModel modelIDForHome:]
  +[HMDHomeNetworkRouterSettingsModel defaultModelForHome:]
  +[HMDHomeNetworkRouterSettingsModel modelNamespace]

  // instance methods
  -[HMDHomeNetworkRouterSettingsModel dependentUUIDs]


HMDRemoteLoginAuthentication : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSString *sessionID
 @property  HMDDevice *remoteDevice
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDRemoteLoginMessageSender *remoteMessageSender
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginAuthentication logCategory]

  // instance methods
  -[HMDRemoteLoginAuthentication sessionID]
  -[HMDRemoteLoginAuthentication logIdentifier]
  -[HMDRemoteLoginAuthentication .cxx_destruct]
  -[HMDRemoteLoginAuthentication workQueue]
  -[HMDRemoteLoginAuthentication remoteDevice]
  -[HMDRemoteLoginAuthentication remoteMessageSender]
  -[HMDRemoteLoginAuthentication authenticate]
  -[HMDRemoteLoginAuthentication initWithSessionID:remoteDevice:workQueue:remoteMessageSender:]


AWDHomeKitVendorInformation : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasManufacturer
 @property  NSString *manufacturer
 @property  BOOL hasModel
 @property  NSString *model
 @property  BOOL hasFirmwareVersion
 @property  NSString *firmwareVersion
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasProductData
 @property  NSString *productData
 @property  BOOL hasCategory
 @property  NSString *category

  // instance methods
  -[AWDHomeKitVendorInformation copyWithZone:]
  -[AWDHomeKitVendorInformation firmwareVersion]
  -[AWDHomeKitVendorInformation category]
  -[AWDHomeKitVendorInformation setFirmwareVersion:]
  -[AWDHomeKitVendorInformation manufacturer]
  -[AWDHomeKitVendorInformation setProductData:]
  -[AWDHomeKitVendorInformation productData]
  -[AWDHomeKitVendorInformation hasName]
  -[AWDHomeKitVendorInformation .cxx_destruct]
  -[AWDHomeKitVendorInformation name]
  -[AWDHomeKitVendorInformation hasModel]
  -[AWDHomeKitVendorInformation setModel:]
  -[AWDHomeKitVendorInformation setManufacturer:]
  -[AWDHomeKitVendorInformation hasManufacturer]
  -[AWDHomeKitVendorInformation hasCategory]
  -[AWDHomeKitVendorInformation hasFirmwareVersion]
  -[AWDHomeKitVendorInformation readFrom:]
  -[AWDHomeKitVendorInformation writeTo:]
  -[AWDHomeKitVendorInformation isEqual:]
  -[AWDHomeKitVendorInformation copyTo:]
  -[AWDHomeKitVendorInformation dictionaryRepresentation]
  -[AWDHomeKitVendorInformation model]
  -[AWDHomeKitVendorInformation setCategory:]
  -[AWDHomeKitVendorInformation mergeFrom:]
  -[AWDHomeKitVendorInformation setName:]
  -[AWDHomeKitVendorInformation hasProductData]


HMDCameraRecordingSessionRetryContext : NSObject /usr/lib/libc++.1.dylib
 @property  double maxRetryInterval
 @property  double retryInterval
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSDictionary *homePresenceByPairingIdentity

  // instance methods
  -[HMDCameraRecordingSessionRetryContext retryInterval]
  -[HMDCameraRecordingSessionRetryContext .cxx_destruct]
  -[HMDCameraRecordingSessionRetryContext workQueue]
  -[HMDCameraRecordingSessionRetryContext homePresenceByPairingIdentity]
  -[HMDCameraRecordingSessionRetryContext computeNextRetryInterval]
  -[HMDCameraRecordingSessionRetryContext initWithWorkQueue:homePresenceByPairingIdentity:preferences:]
  -[HMDCameraRecordingSessionRetryContext maxRetryInterval]
  -[HMDCameraRecordingSessionRetryContext setRetryInterval:]
  -[HMDCameraRecordingSessionRetryContext initWithWorkQueue:homePresenceByPairingIdentity:]


AWDHomeKitCloudSyncInfoTuple : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasValue
 @property  NSString *value
 @property  BOOL hasCount
 @property  unsigned int count

  // instance methods
  -[AWDHomeKitCloudSyncInfoTuple copyWithZone:]
  -[AWDHomeKitCloudSyncInfoTuple setCount:]
  -[AWDHomeKitCloudSyncInfoTuple hasValue]
  -[AWDHomeKitCloudSyncInfoTuple .cxx_destruct]
  -[AWDHomeKitCloudSyncInfoTuple readFrom:]
  -[AWDHomeKitCloudSyncInfoTuple hasCount]
  -[AWDHomeKitCloudSyncInfoTuple writeTo:]
  -[AWDHomeKitCloudSyncInfoTuple setValue:]
  -[AWDHomeKitCloudSyncInfoTuple setHasCount:]
  -[AWDHomeKitCloudSyncInfoTuple isEqual:]
  -[AWDHomeKitCloudSyncInfoTuple count]
  -[AWDHomeKitCloudSyncInfoTuple value]
  -[AWDHomeKitCloudSyncInfoTuple copyTo:]
  -[AWDHomeKitCloudSyncInfoTuple dictionaryRepresentation]
  -[AWDHomeKitCloudSyncInfoTuple mergeFrom:]


HMObjectCacheNSUUID : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMObjectCacheNSUUID enabled]
  +[HMObjectCacheNSUUID cachedInstanceForNSString:]
  +[HMObjectCacheNSUUID cachedInstanceForNSUUID:]


HMDSettingSelectionItem : NSObject /usr/lib/libc++.1.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSString *title

  // class methods
  +[HMDSettingSelectionItem supportsSecureCoding]

  // instance methods
  -[HMDSettingSelectionItem copyWithZone:]
  -[HMDSettingSelectionItem initWithTitle:]
  -[HMDSettingSelectionItem .cxx_destruct]
  -[HMDSettingSelectionItem encodeWithCoder:]
  -[HMDSettingSelectionItem identifier]
  -[HMDSettingSelectionItem title]
  -[HMDSettingSelectionItem isEqual:]
  -[HMDSettingSelectionItem initWithCoder:]


HMDAssistantAccessControlModelV2 : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSArray *accessoryUUIDs
 @property  NSNumber *requiresAuthenticationForSecureRequests

  // class methods
  +[HMDAssistantAccessControlModelV2 hmbProperties]


HMDMediaOutputDevice : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  AVOutputDevice *av_OutputDevice
 @property  ^v outputDevice
 @property  NSString *uniqueIdentifier
 @property  NSString *name
 @property  NSString *modelID
 @property  unsigned int deviceSubtype
 @property  BOOL supportsWHA
 @property  BOOL supportsHAP

  // instance methods
  -[HMDMediaOutputDevice initWithOutputDevice:]
  -[HMDMediaOutputDevice supportsHAP]
  -[HMDMediaOutputDevice dealloc]
  -[HMDMediaOutputDevice .cxx_destruct]
  -[HMDMediaOutputDevice name]
  -[HMDMediaOutputDevice outputDevice]
  -[HMDMediaOutputDevice uniqueIdentifier]
  -[HMDMediaOutputDevice deviceSubtype]
  -[HMDMediaOutputDevice modelID]
  -[HMDMediaOutputDevice isEqual:]
  -[HMDMediaOutputDevice setOutputDevice:]
  -[HMDMediaOutputDevice av_OutputDevice]
  -[HMDMediaOutputDevice supportsWHA]
  -[HMDMediaOutputDevice shouldCreateAppleMediaAccessory]


HMDShortcutActionModel : HMDActionModel
 @property  NSData *data

  // class methods
  +[HMDShortcutActionModel properties]
  +[HMDShortcutActionModel backedObjectClass]

  // instance methods
  -[HMDShortcutActionModel loadModelWithActionInformation:]


HMDMediaEndpoint : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  ^v retainedEndpoint
 @property  ^v externalDevice
 @property  NSString *localizedName
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSSet *outputDeviceIdentifiers
 @property  unsigned int connectionState
 @property  NSMutableArray *pendingBlocks
 @property  NSString *logID
 @property  HMDMediaBrowser *browser
 @property  NSString *sessionIdentifier
 @property  NSArray *advertisements
 @property  BOOL connected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMediaEndpoint logCategory]

  // instance methods
  -[HMDMediaEndpoint connectionState]
  -[HMDMediaEndpoint externalDevice]
  -[HMDMediaEndpoint isConnected]
  -[HMDMediaEndpoint setConnectionState:]
  -[HMDMediaEndpoint logID]
  -[HMDMediaEndpoint logIdentifier]
  -[HMDMediaEndpoint setPlaybackState:completionHandler:]
  -[HMDMediaEndpoint dealloc]
  -[HMDMediaEndpoint .cxx_destruct]
  -[HMDMediaEndpoint localizedName]
  -[HMDMediaEndpoint workQueue]
  -[HMDMediaEndpoint initWithEndpoint:]
  -[HMDMediaEndpoint browser]
  -[HMDMediaEndpoint pendingBlocks]
  -[HMDMediaEndpoint setPendingBlocks:]
  -[HMDMediaEndpoint sessionIdentifier]
  -[HMDMediaEndpoint isEqualToEndpoint:]
  -[HMDMediaEndpoint isEqual:]
  -[HMDMediaEndpoint setBrowser:]
  -[HMDMediaEndpoint updateWithEndpoint:]
  -[HMDMediaEndpoint disconnectWithCompletionHandler:]
  -[HMDMediaEndpoint advertisements]
  -[HMDMediaEndpoint updateOutputDevicesAndConnectWithCompletionHandler:]
  -[HMDMediaEndpoint retainedEndpoint]
  -[HMDMediaEndpoint setOutputDeviceIdentifiers:]
  -[HMDMediaEndpoint setRetainedEndpoint:]
  -[HMDMediaEndpoint _updateOutputDevicesAndConnectWithCompletionHandler:]
  -[HMDMediaEndpoint _notifyPendingBlocksOfError:]
  -[HMDMediaEndpoint _updateOutputDeviceIdentifiers]
  -[HMDMediaEndpoint _connectWithCompletionHandler:]
  -[HMDMediaEndpoint outputDeviceIdentifiers]
  -[HMDMediaEndpoint copyOrigin]
  -[HMDMediaEndpoint _getPlaybackStateWithCompletionHandler:]
  -[HMDMediaEndpoint _setPlaybackState:completionHandler:]
  -[HMDMediaEndpoint disconnectFromEndpoint:]
  -[HMDMediaEndpoint registerForNowPlayingUpdates:]
  -[HMDMediaEndpoint doesContainAnyAccessory:]
  -[HMDMediaEndpoint evaluateIfMediaPlaybackStateChanged:withCompletion:]
  -[HMDMediaEndpoint getPlaybackStateWithCompletionHandler:]


HMDBulletinUIManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // class methods
  +[HMDBulletinUIManager presentExecutionErrorDialogForTrigger:partialSuccess:]
  +[HMDBulletinUIManager openHomeAppWithURL:]


HMDCameraRecordingMetricUUIDUtilities : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // class methods
  +[HMDCameraRecordingMetricUUIDUtilities currentEphemeralUUIDWithUUID:rotationScheduleDays:]
  +[HMDCameraRecordingMetricUUIDUtilities UUIDRotationSalt]
  +[HMDCameraRecordingMetricUUIDUtilities ephemeralUUIDWithUUID:forTimestamp:rotationScheduleDays:]
  +[HMDCameraRecordingMetricUUIDUtilities ephemeralUUIDWithUUID:forTimestamp:rotationSchedule:]


AWDHomeKitAddEventTrigger : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasResultErrorCode
 @property  unsigned int resultErrorCode
 @property  BOOL hasEventTrigger
 @property  AWDHomeKitEventTrigger *eventTrigger
 @property  BOOL hasRequestOrigin
 @property  int requestOrigin

  // instance methods
  -[AWDHomeKitAddEventTrigger copyWithZone:]
  -[AWDHomeKitAddEventTrigger setEventTrigger:]
  -[AWDHomeKitAddEventTrigger .cxx_destruct]
  -[AWDHomeKitAddEventTrigger timestamp]
  -[AWDHomeKitAddEventTrigger setTimestamp:]
  -[AWDHomeKitAddEventTrigger setHasTimestamp:]
  -[AWDHomeKitAddEventTrigger readFrom:]
  -[AWDHomeKitAddEventTrigger writeTo:]
  -[AWDHomeKitAddEventTrigger isEqual:]
  -[AWDHomeKitAddEventTrigger copyTo:]
  -[AWDHomeKitAddEventTrigger dictionaryRepresentation]
  -[AWDHomeKitAddEventTrigger eventTrigger]
  -[AWDHomeKitAddEventTrigger mergeFrom:]
  -[AWDHomeKitAddEventTrigger hasTimestamp]
  -[AWDHomeKitAddEventTrigger setRequestOrigin:]
  -[AWDHomeKitAddEventTrigger setResultErrorCode:]
  -[AWDHomeKitAddEventTrigger setHasResultErrorCode:]
  -[AWDHomeKitAddEventTrigger hasResultErrorCode]
  -[AWDHomeKitAddEventTrigger resultErrorCode]
  -[AWDHomeKitAddEventTrigger hasEventTrigger]
  -[AWDHomeKitAddEventTrigger requestOrigin]
  -[AWDHomeKitAddEventTrigger setHasRequestOrigin:]
  -[AWDHomeKitAddEventTrigger hasRequestOrigin]
  -[AWDHomeKitAddEventTrigger requestOriginAsString:]
  -[AWDHomeKitAddEventTrigger StringAsRequestOrigin:]


HMDProcessRelaunchThresholdLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  NSNumber *timeSincePreviousProcessLaunch

  // class methods
  +[HMDProcessRelaunchThresholdLogEvent uuid]

  // instance methods
  -[HMDProcessRelaunchThresholdLogEvent eventName]
  -[HMDProcessRelaunchThresholdLogEvent .cxx_destruct]
  -[HMDProcessRelaunchThresholdLogEvent serializedEvent]
  -[HMDProcessRelaunchThresholdLogEvent initWithTimeSincePreviousLaunch:]
  -[HMDProcessRelaunchThresholdLogEvent timeSincePreviousProcessLaunch]


HMDHomePeriodicReader : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDHome *home
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDBackgroundTaskAgentTimer *btaReadTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomePeriodicReader logCategory]

  // instance methods
  -[HMDHomePeriodicReader configure:]
  -[HMDHomePeriodicReader setWorkQueue:]
  -[HMDHomePeriodicReader logIdentifier]
  -[HMDHomePeriodicReader dealloc]
  -[HMDHomePeriodicReader _characteristicsToRead]
  -[HMDHomePeriodicReader .cxx_destruct]
  -[HMDHomePeriodicReader workQueue]
  -[HMDHomePeriodicReader setHome:]
  -[HMDHomePeriodicReader timerFired:]
  -[HMDHomePeriodicReader home]
  -[HMDHomePeriodicReader _startTimer]
  -[HMDHomePeriodicReader residentUpdated]
  -[HMDHomePeriodicReader handleCharacteristicBasedEventAdded:]
  -[HMDHomePeriodicReader startReadTimer]
  -[HMDHomePeriodicReader btaReadTimer]
  -[HMDHomePeriodicReader checkToIssueRead]
  -[HMDHomePeriodicReader _checkToIssueRead]
  -[HMDHomePeriodicReader _issueCharacteristicRequests:]


HMDActionSetEvent : HMDLogEvent <HMDCoreDuetLogEvent, HMDAWDLogEvent>
 @property  unsigned long duetEventType
 @property  NSArray *eventDataToLog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long triggerSource
 @property  NSUUID *actionSetUUID
 @property  NSString *bundleId
 @property  NSUUID *transactionId
 @property  unsigned int numAccessoriesModified
 @property  unsigned int numAccessoriesInHome
 @property  unsigned int numNonEmptyScenesInHome
 @property  NSString *serializedIdentifier
 @property  NSString *actionSetName
 @property  NSString *actionSetType
 @property  HMDHome *home
 @property  NSArray *accessoryUUIDs

  // class methods
  +[HMDActionSetEvent uuid]

  // instance methods
  -[HMDActionSetEvent actionSetType]
  -[HMDActionSetEvent actionSetName]
  -[HMDActionSetEvent .cxx_destruct]
  -[HMDActionSetEvent home]
  -[HMDActionSetEvent actionSetUUID]
  -[HMDActionSetEvent value]
  -[HMDActionSetEvent bundleId]
  -[HMDActionSetEvent metadata]
  -[HMDActionSetEvent accessoryUUIDs]
  -[HMDActionSetEvent transactionId]
  -[HMDActionSetEvent initWithActionSet:source:numAccessories:bundleId:transactionId:]
  -[HMDActionSetEvent serializedIdentifier]
  -[HMDActionSetEvent AWDMessageType]
  -[HMDActionSetEvent metricForAWD]
  -[HMDActionSetEvent triggerSource]
  -[HMDActionSetEvent numAccessoriesModified]
  -[HMDActionSetEvent numAccessoriesInHome]
  -[HMDActionSetEvent numNonEmptyScenesInHome]
  -[HMDActionSetEvent duetEventType]
  -[HMDActionSetEvent eventDataToLog]


HMDApplicationInfo : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  BOOL independent
 @property  HMDApplicationInfo *companionApplicationInfo
 @property  NSData *vendorIdentifier
 @property  BOOL installed
 @property  BOOL entitledForAPIAccess
 @property  BOOL entitledForSPIAccess
 @property  NSString *bundleIdentifier
 @property  NSURL *bundleURL
 @property  HMDApplicationInfo *hostApplicationInfo
 @property  NSArray *processes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDApplicationInfo logCategory]
  +[HMDApplicationInfo applicationInfoForBundleIdentifier:]
  +[HMDApplicationInfo privateVendorIdentifier]
  +[HMDApplicationInfo applicationInfoForBundleURL:]

  // instance methods
  -[HMDApplicationInfo initWithBundleIdentifier:]
  -[HMDApplicationInfo isInstalled]
  -[HMDApplicationInfo logIdentifier]
  -[HMDApplicationInfo init]
  -[HMDApplicationInfo attributeDescriptions]
  -[HMDApplicationInfo .cxx_destruct]
  -[HMDApplicationInfo bundleURL]
  -[HMDApplicationInfo removeProcess:]
  -[HMDApplicationInfo vendorIdentifier]
  -[HMDApplicationInfo processes]
  -[HMDApplicationInfo shortDescription]
  -[HMDApplicationInfo isEqual:]
  -[HMDApplicationInfo bundleIdentifier]
  -[HMDApplicationInfo addProcess:]
  -[HMDApplicationInfo isEntitledForSPIAccess]
  -[HMDApplicationInfo isEntitledForAPIAccess]
  -[HMDApplicationInfo hostApplicationInfo]
  -[HMDApplicationInfo clientIdentifierSalt:]
  -[HMDApplicationInfo isIndependent]
  -[HMDApplicationInfo companionApplicationInfo]


__HMDBundleApplicationInfo : HMDApplicationInfo
  // instance methods
  -[__HMDBundleApplicationInfo initWithBundleIdentifier:]
  -[__HMDBundleApplicationInfo .cxx_destruct]
  -[__HMDBundleApplicationInfo initWithRecord:]
  -[__HMDBundleApplicationInfo isEntitledForSPIAccess]
  -[__HMDBundleApplicationInfo isEntitledForAPIAccess]


__HMDApplicationInfo : __HMDBundleApplicationInfo
  // instance methods
  -[__HMDApplicationInfo isInstalled]
  -[__HMDApplicationInfo .cxx_destruct]
  -[__HMDApplicationInfo vendorIdentifier]
  -[__HMDApplicationInfo initWithRecord:]
  -[__HMDApplicationInfo isEqual:]


__HMDExtensionApplicationInfo : __HMDBundleApplicationInfo
  // instance methods
  -[__HMDExtensionApplicationInfo isInstalled]
  -[__HMDExtensionApplicationInfo attributeDescriptions]
  -[__HMDExtensionApplicationInfo .cxx_destruct]
  -[__HMDExtensionApplicationInfo vendorIdentifier]
  -[__HMDExtensionApplicationInfo initWithRecord:]
  -[__HMDExtensionApplicationInfo isEqual:]
  -[__HMDExtensionApplicationInfo hostApplicationInfo]


HMDHomeInviteLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int stage
 @property  int responseType

  // class methods
  +[HMDHomeInviteLogEvent uuid]
  +[HMDHomeInviteLogEvent homeInvitationWithStage:]
  +[HMDHomeInviteLogEvent homeInvitationWithStage:responseType:]

  // instance methods
  -[HMDHomeInviteLogEvent stage]
  -[HMDHomeInviteLogEvent responseType]
  -[HMDHomeInviteLogEvent AWDMessageType]
  -[HMDHomeInviteLogEvent metricForAWD]
  -[HMDHomeInviteLogEvent initInvitationWithStage:responseType:]


HMDSoftwareUpdate : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFObject, HMDBackingStoreObjectProtocol, HMDHomeMessageReceiver, NSSecureCoding>
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSUUID *identifier
 @property  HMDSoftwareUpdateModel *model
 @property  HMDAccessory *accessory
 @property  HMFSoftwareVersion *version
 @property  long long state
 @property  unsigned long downloadSize
 @property  double installDuration
 @property  HMSoftwareUpdateDocumentationMetadata *documentationMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDSoftwareUpdate supportsSecureCoding]
  +[HMDSoftwareUpdate logCategory]
  +[HMDSoftwareUpdate hasMessageReceiverChildren]
  +[HMDSoftwareUpdate modelNamespace]

  // instance methods
  -[HMDSoftwareUpdate messageTargetUUID]
  -[HMDSoftwareUpdate messageDestination]
  -[HMDSoftwareUpdate messageReceiveQueue]
  -[HMDSoftwareUpdate logIdentifier]
  -[HMDSoftwareUpdate dealloc]
  -[HMDSoftwareUpdate setState:]
  -[HMDSoftwareUpdate .cxx_destruct]
  -[HMDSoftwareUpdate initWithVersion:downloadSize:state:installDuration:documentationMetadata:]
  -[HMDSoftwareUpdate documentationMetadata]
  -[HMDSoftwareUpdate setDocumentationMetadata:]
  -[HMDSoftwareUpdate installDuration]
  -[HMDSoftwareUpdate downloadSize]
  -[HMDSoftwareUpdate setIdentifier:]
  -[HMDSoftwareUpdate encodeWithCoder:]
  -[HMDSoftwareUpdate identifier]
  -[HMDSoftwareUpdate propertyDescription]
  -[HMDSoftwareUpdate accessory]
  -[HMDSoftwareUpdate messageDispatcher]
  -[HMDSoftwareUpdate isEqual:]
  -[HMDSoftwareUpdate version]
  -[HMDSoftwareUpdate registerForMessages]
  -[HMDSoftwareUpdate initWithModel:]
  -[HMDSoftwareUpdate state]
  -[HMDSoftwareUpdate model]
  -[HMDSoftwareUpdate setAccessory:]
  -[HMDSoftwareUpdate invalidate]
  -[HMDSoftwareUpdate initWithCoder:]
  -[HMDSoftwareUpdate transactionObjectUpdated:newValues:message:]
  -[HMDSoftwareUpdate transactionObjectRemoved:message:]
  -[HMDSoftwareUpdate setMessageDispatcher:]
  -[HMDSoftwareUpdate transactionWithObjectChangeType:]
  -[HMDSoftwareUpdate configureWithAccessory:messageDispatcher:]
  -[HMDSoftwareUpdate _handleUpdateState:]
  -[HMDSoftwareUpdate _handleUpdateDocumentationMetadata:]
  -[HMDSoftwareUpdate _handleDocumentationRequest:]
  -[HMDSoftwareUpdate _updateState:message:options:]
  -[HMDSoftwareUpdate updateLocalState:]
  -[HMDSoftwareUpdate _handleDocumentationStateNotification:]


HMDSoftwareUpdateModel : HMDBackingStoreModelObject
 @property  HMFSoftwareVersion *softwareVersion
 @property  NSNumber *state
 @property  NSNumber *downloadSize
 @property  NSNumber *installDuration
 @property  HMSoftwareUpdateDocumentationMetadata *documentationMetadata

  // class methods
  +[HMDSoftwareUpdateModel properties]


HMDHomeReprovisioningPendingInformation : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *messageIdentifier
 @property  HMDAccessoryNetworkCredential *networkCredential

  // instance methods
  -[HMDHomeReprovisioningPendingInformation .cxx_destruct]
  -[HMDHomeReprovisioningPendingInformation messageIdentifier]
  -[HMDHomeReprovisioningPendingInformation networkCredential]
  -[HMDHomeReprovisioningPendingInformation initWithMessageUUID:networkCredential:]


HMDHomeReprovisionHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, HMFLogging, HMDHomeMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDHome *home
 @property  <HMDAccessoryBrowserProtocol> *accessoryBrowser
 @property  BOOL reprovisionBrowsingAllowed
 @property  BOOL reprovisionBrowsingPending
 @property  HMFTimer *disableReprovisionBrowsingTimer
 @property  NSMutableDictionary *pendingReprovisionRequests
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDHomeReprovisionHandler logCategory]
  +[HMDHomeReprovisionHandler hasMessageReceiverChildren]

  // instance methods
  -[HMDHomeReprovisionHandler messageTargetUUID]
  -[HMDHomeReprovisionHandler messageDestination]
  -[HMDHomeReprovisionHandler messageReceiveQueue]
  -[HMDHomeReprovisionHandler timerDidFire:]
  -[HMDHomeReprovisionHandler setWorkQueue:]
  -[HMDHomeReprovisionHandler logIdentifier]
  -[HMDHomeReprovisionHandler init]
  -[HMDHomeReprovisionHandler dealloc]
  -[HMDHomeReprovisionHandler .cxx_destruct]
  -[HMDHomeReprovisionHandler workQueue]
  -[HMDHomeReprovisionHandler setHome:]
  -[HMDHomeReprovisionHandler setMsgDispatcher:]
  -[HMDHomeReprovisionHandler msgDispatcher]
  -[HMDHomeReprovisionHandler _registerForMessages]
  -[HMDHomeReprovisionHandler home]
  -[HMDHomeReprovisionHandler setAccessoryBrowser:]
  -[HMDHomeReprovisionHandler accessoryBrowser]
  -[HMDHomeReprovisionHandler configure:queue:messageDispatcher:]
  -[HMDHomeReprovisionHandler handleFoundAccessoryNeedingReprovisioning:error:]
  -[HMDHomeReprovisionHandler handleReprovionedAccessory:identifier:error:]
  -[HMDHomeReprovisionHandler _handleRequestSearchForAccessoriesNeedingReprovisioning:]
  -[HMDHomeReprovisionHandler _handleReprovisionAccessory:]
  -[HMDHomeReprovisionHandler isReprovisionBrowsingAllowed]
  -[HMDHomeReprovisionHandler setReprovisionBrowsingPending:]
  -[HMDHomeReprovisionHandler disableReprovisionBrowsingTimer]
  -[HMDHomeReprovisionHandler setReprovisionBrowsingAllowed:]
  -[HMDHomeReprovisionHandler setDisableReprovisionBrowsingTimer:]
  -[HMDHomeReprovisionHandler _reportAccessoryNeedingReprovision:error:]
  -[HMDHomeReprovisionHandler _reprovisionAccessory:networkCredential:requestMessage:]
  -[HMDHomeReprovisionHandler pendingReprovisionRequests]
  -[HMDHomeReprovisionHandler isReprovisionBrowsingPending]
  -[HMDHomeReprovisionHandler _handleDisableReprovisionBrowsingTimerFired]
  -[HMDHomeReprovisionHandler setPendingReprovisionRequests:]


HMDProcessMemoryPressureNotificationLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging, HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *processMemoryState
 @property  NSString *dataSyncState

  // class methods
  +[HMDProcessMemoryPressureNotificationLogEvent initialize]
  +[HMDProcessMemoryPressureNotificationLogEvent uuid]
  +[HMDProcessMemoryPressureNotificationLogEvent createEventWithProcessMemoryState:dataSyncState:]

  // instance methods
  -[HMDProcessMemoryPressureNotificationLogEvent eventName]
  -[HMDProcessMemoryPressureNotificationLogEvent .cxx_destruct]
  -[HMDProcessMemoryPressureNotificationLogEvent dataSyncState]
  -[HMDProcessMemoryPressureNotificationLogEvent serializedEvent]
  -[HMDProcessMemoryPressureNotificationLogEvent AWDMessageType]
  -[HMDProcessMemoryPressureNotificationLogEvent metricForAWD]
  -[HMDProcessMemoryPressureNotificationLogEvent initWithProcessMemoryState:dataSyncState:]
  -[HMDProcessMemoryPressureNotificationLogEvent processMemoryState]


AWDHomeKitActionSetTriggered : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  BOOL hasErrorCode
 @property  int errorCode
 @property  BOOL hasTransaction
 @property  NSString *transaction
 @property  BOOL hasTriggerSource
 @property  int triggerSource
 @property  BOOL hasNumAccessories
 @property  unsigned int numAccessories

  // instance methods
  -[AWDHomeKitActionSetTriggered setErrorCode:]
  -[AWDHomeKitActionSetTriggered copyWithZone:]
  -[AWDHomeKitActionSetTriggered hasErrorCode]
  -[AWDHomeKitActionSetTriggered setTransaction:]
  -[AWDHomeKitActionSetTriggered errorCode]
  -[AWDHomeKitActionSetTriggered setHasErrorCode:]
  -[AWDHomeKitActionSetTriggered transaction]
  -[AWDHomeKitActionSetTriggered .cxx_destruct]
  -[AWDHomeKitActionSetTriggered timestamp]
  -[AWDHomeKitActionSetTriggered setTimestamp:]
  -[AWDHomeKitActionSetTriggered setHasDuration:]
  -[AWDHomeKitActionSetTriggered setHasTimestamp:]
  -[AWDHomeKitActionSetTriggered readFrom:]
  -[AWDHomeKitActionSetTriggered writeTo:]
  -[AWDHomeKitActionSetTriggered isEqual:]
  -[AWDHomeKitActionSetTriggered setDuration:]
  -[AWDHomeKitActionSetTriggered copyTo:]
  -[AWDHomeKitActionSetTriggered dictionaryRepresentation]
  -[AWDHomeKitActionSetTriggered hasDuration]
  -[AWDHomeKitActionSetTriggered mergeFrom:]
  -[AWDHomeKitActionSetTriggered hasTimestamp]
  -[AWDHomeKitActionSetTriggered duration]
  -[AWDHomeKitActionSetTriggered hasTransaction]
  -[AWDHomeKitActionSetTriggered triggerSource]
  -[AWDHomeKitActionSetTriggered setTriggerSource:]
  -[AWDHomeKitActionSetTriggered setHasTriggerSource:]
  -[AWDHomeKitActionSetTriggered hasTriggerSource]
  -[AWDHomeKitActionSetTriggered triggerSourceAsString:]
  -[AWDHomeKitActionSetTriggered StringAsTriggerSource:]
  -[AWDHomeKitActionSetTriggered setNumAccessories:]
  -[AWDHomeKitActionSetTriggered setHasNumAccessories:]
  -[AWDHomeKitActionSetTriggered hasNumAccessories]
  -[AWDHomeKitActionSetTriggered numAccessories]


HMDDAccessoryServerDemo : HAPAccessoryServer /System/Library/Frameworks/CoreImage.framework/CoreImage
 @property  HMDDAccessoryServerBrowserDemo *browser
 @property  BOOL _paired
 @property  BOOL _hasPairings
 @property  NSDictionary *accessoryInfo

  // instance methods
  -[HMDDAccessoryServerDemo category]
  -[HMDDAccessoryServerDemo linkType]
  -[HMDDAccessoryServerDemo isPaired]
  -[HMDDAccessoryServerDemo .cxx_destruct]
  -[HMDDAccessoryServerDemo _paired]
  -[HMDDAccessoryServerDemo browser]
  -[HMDDAccessoryServerDemo setBrowser:]
  -[HMDDAccessoryServerDemo _delegateRespondsToSelector:]
  -[HMDDAccessoryServerDemo setCategory:]
  -[HMDDAccessoryServerDemo initWithName:identifier:deviceInfo:paired:keyStore:browser:]
  -[HMDDAccessoryServerDemo accessoryInfo]
  -[HMDDAccessoryServerDemo listPairingsWithCompletionQueue:completionHandler:]
  -[HMDDAccessoryServerDemo writeCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HMDDAccessoryServerDemo readCharacteristicValues:timeout:completionQueue:completionHandler:]
  -[HMDDAccessoryServerDemo enableEvents:forCharacteristics:withCompletionHandler:queue:]
  -[HMDDAccessoryServerDemo identifyWithCompletion:]
  -[HMDDAccessoryServerDemo initCommon:browser:]
  -[HMDDAccessoryServerDemo _parseAttributeDatabase:]
  -[HMDDAccessoryServerDemo processCharacteristicWrite:value:]
  -[HMDDAccessoryServerDemo hasPairings]
  -[HMDDAccessoryServerDemo discoverAccessories]
  -[HMDDAccessoryServerDemo startPairingWithConsentRequired:config:ownershipToken:]
  -[HMDDAccessoryServerDemo continuePairingAfterAuthPrompt]
  -[HMDDAccessoryServerDemo stopPairingWithError:]
  -[HMDDAccessoryServerDemo tryPairingPassword:error:]
  -[HMDDAccessoryServerDemo addPairing:completionQueue:completionHandler:]
  -[HMDDAccessoryServerDemo removePairing:completionQueue:completionHandler:]
  -[HMDDAccessoryServerDemo removePairingForCurrentControllerOnQueue:completion:]
  -[HMDDAccessoryServerDemo handleUpdatesForCharacteristics:]
  -[HMDDAccessoryServerDemo setAccessoryInfo:]
  -[HMDDAccessoryServerDemo set_paired:]
  -[HMDDAccessoryServerDemo _hasPairings]
  -[HMDDAccessoryServerDemo set_hasPairings:]


HMDLogEventAnalyzerContext : NSObject /usr/lib/libc++.1.dylib <HMDLogEventAnalyzerContext>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDLogEventDispatcher *logEventDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDLogEventAnalyzerContext .cxx_destruct]
  -[HMDLogEventAnalyzerContext workQueue]
  -[HMDLogEventAnalyzerContext submitLogEvent:]
  -[HMDLogEventAnalyzerContext logEventDispatcher]
  -[HMDLogEventAnalyzerContext initWithWorkQueue:]


HMDLogEventAnalyzer : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDLogEventObserver>
 @property  <HMDLogEventAnalyzerContext> *context
 @property  NSArray *supportedEventTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDLogEventAnalyzer logCategory]

  // instance methods
  -[HMDLogEventAnalyzer context]
  -[HMDLogEventAnalyzer .cxx_destruct]
  -[HMDLogEventAnalyzer processLogEvent:]
  -[HMDLogEventAnalyzer supportedEventTypes]
  -[HMDLogEventAnalyzer isSupportedEvent:]
  -[HMDLogEventAnalyzer didReceiveEventFromDispatcher:withLogContext:]
  -[HMDLogEventAnalyzer initWithSupportedEventTypes:context:]


HMDMessageFilter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *name
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[HMDMessageFilter initWithName:]
  -[HMDMessageFilter setWorkQueue:]
  -[HMDMessageFilter .cxx_destruct]
  -[HMDMessageFilter name]
  -[HMDMessageFilter workQueue]
  -[HMDMessageFilter queue]
  -[HMDMessageFilter resetConfiguration]
  -[HMDMessageFilter acceptMessage:target:errorReason:]
  -[HMDMessageFilter shouldCloudSyncData]


HMDMessageFilterChain : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSArray *filters

  // instance methods
  -[HMDMessageFilterChain init]
  -[HMDMessageFilterChain .cxx_destruct]
  -[HMDMessageFilterChain filters]
  -[HMDMessageFilterChain addMessageFilter:]
  -[HMDMessageFilterChain acceptMessage:error:]
  -[HMDMessageFilterChain shouldCloudSyncData]
  -[HMDMessageFilterChain removeMessageFilter:]
  -[HMDMessageFilterChain resetConfiguration:completionHandler:]


HMDCloudDataSyncStateFilter : HMDMessageFilter <HMFMessageReceiver, HMFTimerDelegate>
 @property  NSUUID *uuid
 @property  BOOL keychainSyncEnabled
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSObject<OS_dispatch_source> *popupTimer
 @property  NSObject<OS_dispatch_source> *iCloudSwitchPopupTimer
 @property  BOOL keychainSyncRequiredPopShown
 @property  BOOL iCloudSwitchRequiredPopShown
 @property  BOOL iCloudAccountActive
 @property  BOOL cloudDataSyncCompleted
 @property  BOOL serverTokenAvailable
 @property  BOOL iCloudSwitchStateEnabled
 @property  BOOL localDataDecryptionFailed
 @property  long long totalHomes
 @property  BOOL networkConnectivityAvailable
 @property  HMFTimer *cloudDataSyncInProgressTimer
 @property  double remainingDataSyncPeriod
 @property  NSDate *dataSyncTimerStartTimestamp
 @property  HMFTimer *resetConfigDisplayTimer
 @property  double remainingResetConfigDisplayPeriod
 @property  NSDate *resetConfigDisplayTimerStartTimestamp
 @property  BOOL resetConfigDisplayTimeHasElapsed
 @property  HMDHomeManager *homeManager
 @property  BOOL keychainSyncPeerAvailable
 @property  BOOL cloudDataSyncPeerAvailable
 @property  BOOL decryptionFailed
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCloudDataSyncStateFilter isWhitelistedMessage:]

  // instance methods
  -[HMDCloudDataSyncStateFilter messageTargetUUID]
  -[HMDCloudDataSyncStateFilter messageReceiveQueue]
  -[HMDCloudDataSyncStateFilter timerDidFire:]
  -[HMDCloudDataSyncStateFilter uuid]
  -[HMDCloudDataSyncStateFilter dealloc]
  -[HMDCloudDataSyncStateFilter .cxx_destruct]
  -[HMDCloudDataSyncStateFilter setUuid:]
  -[HMDCloudDataSyncStateFilter setMsgDispatcher:]
  -[HMDCloudDataSyncStateFilter msgDispatcher]
  -[HMDCloudDataSyncStateFilter _registerForMessages]
  -[HMDCloudDataSyncStateFilter setHomeManager:]
  -[HMDCloudDataSyncStateFilter keychainSyncEnabled]
  -[HMDCloudDataSyncStateFilter homeManager]
  -[HMDCloudDataSyncStateFilter resetConfiguration]
  -[HMDCloudDataSyncStateFilter decryptionFailed]
  -[HMDCloudDataSyncStateFilter setDecryptionFailed:]
  -[HMDCloudDataSyncStateFilter isiCloudSwitchEnabled]
  -[HMDCloudDataSyncStateFilter setICloudSwitchStateEnabled:]
  -[HMDCloudDataSyncStateFilter iCloudSwitchStateEnabled]
  -[HMDCloudDataSyncStateFilter isLocalDataDecryptionFailed]
  -[HMDCloudDataSyncStateFilter startDataConfigResetTimers]
  -[HMDCloudDataSyncStateFilter setKeychainSyncEnabled:]
  -[HMDCloudDataSyncStateFilter updateCloudDataSyncState:]
  -[HMDCloudDataSyncStateFilter updateWithoutDataSynCheckServerTokenAvailable:]
  -[HMDCloudDataSyncStateFilter updateServerTokenAvailable:]
  -[HMDCloudDataSyncStateFilter kickResetConfigDisplayTimer]
  -[HMDCloudDataSyncStateFilter acceptMessage:target:errorReason:]
  -[HMDCloudDataSyncStateFilter shouldCloudSyncData]
  -[HMDCloudDataSyncStateFilter _updateCurrentAccount:]
  -[HMDCloudDataSyncStateFilter handleKeychainSyncStateChangedNotification:]
  -[HMDCloudDataSyncStateFilter _handleAccountStatusChanged:]
  -[HMDCloudDataSyncStateFilter _startDataConfigResetTimers]
  -[HMDCloudDataSyncStateFilter _stopDataConfigResetTimers]
  -[HMDCloudDataSyncStateFilter _cloudSyncinProgressCheck:supressPopup:sendCanceledError:dataSyncState:]
  -[HMDCloudDataSyncStateFilter _updateKeychainSyncEnabled:]
  -[HMDCloudDataSyncStateFilter _postNotificationForDataSyncInProgress:dataSyncState:forcePost:]
  -[HMDCloudDataSyncStateFilter _startCloudDataSyncTimer]
  -[HMDCloudDataSyncStateFilter resetConfigDisplayTimeHasElapsed]
  -[HMDCloudDataSyncStateFilter _startResetConfigDisplayTimer]
  -[HMDCloudDataSyncStateFilter _stopCloudDataSyncTimer]
  -[HMDCloudDataSyncStateFilter _stopResetConfigDisplayTimer]
  -[HMDCloudDataSyncStateFilter setNetworkConnectivityAvailable:]
  -[HMDCloudDataSyncStateFilter _stallCloudDataSyncTimer]
  -[HMDCloudDataSyncStateFilter _stallResetConfigDisplayTimer]
  -[HMDCloudDataSyncStateFilter cloudDataSyncInProgressTimer]
  -[HMDCloudDataSyncStateFilter _resetCloudDataSyncTimer]
  -[HMDCloudDataSyncStateFilter resetConfigDisplayTimer]
  -[HMDCloudDataSyncStateFilter _clearResetConfigDisplayTimer]
  -[HMDCloudDataSyncStateFilter setResetConfigDisplayTimeHasElapsed:]
  -[HMDCloudDataSyncStateFilter remainingDataSyncPeriod]
  -[HMDCloudDataSyncStateFilter setRemainingDataSyncPeriod:]
  -[HMDCloudDataSyncStateFilter setCloudDataSyncInProgressTimer:]
  -[HMDCloudDataSyncStateFilter setDataSyncTimerStartTimestamp:]
  -[HMDCloudDataSyncStateFilter dataSyncTimerStartTimestamp]
  -[HMDCloudDataSyncStateFilter resetConfigDisplayTimerStartTimestamp]
  -[HMDCloudDataSyncStateFilter remainingResetConfigDisplayPeriod]
  -[HMDCloudDataSyncStateFilter setRemainingResetConfigDisplayPeriod:]
  -[HMDCloudDataSyncStateFilter setResetConfigDisplayTimer:]
  -[HMDCloudDataSyncStateFilter setResetConfigDisplayTimerStartTimestamp:]
  -[HMDCloudDataSyncStateFilter iCloudAccountActive]
  -[HMDCloudDataSyncStateFilter setICloudAccountActive:]
  -[HMDCloudDataSyncStateFilter cloudDataSyncCompleted]
  -[HMDCloudDataSyncStateFilter _updateCloudDataSyncState:]
  -[HMDCloudDataSyncStateFilter setPopupTimer:]
  -[HMDCloudDataSyncStateFilter popupTimer]
  -[HMDCloudDataSyncStateFilter _stopPopupTimer]
  -[HMDCloudDataSyncStateFilter setKeychainSyncRequiredPopShown:]
  -[HMDCloudDataSyncStateFilter setICloudSwitchPopupTimer:]
  -[HMDCloudDataSyncStateFilter iCloudSwitchPopupTimer]
  -[HMDCloudDataSyncStateFilter _stopiCloudSwitchPopupTimer]
  -[HMDCloudDataSyncStateFilter setICloudSwitchRequiredPopShown:]
  -[HMDCloudDataSyncStateFilter setTotalHomes:]
  -[HMDCloudDataSyncStateFilter isKeychainSyncPeerAvailable]
  -[HMDCloudDataSyncStateFilter setKeychainSyncPeerAvailable:]
  -[HMDCloudDataSyncStateFilter isCloudDataSyncPeerAvailable]
  -[HMDCloudDataSyncStateFilter setCloudDataSyncPeerAvailable:]
  -[HMDCloudDataSyncStateFilter totalHomes]
  -[HMDCloudDataSyncStateFilter keychainSyncRequiredPopShown]
  -[HMDCloudDataSyncStateFilter _startPopupTimer]
  -[HMDCloudDataSyncStateFilter serverTokenAvailable]
  -[HMDCloudDataSyncStateFilter networkConnectivityAvailable]
  -[HMDCloudDataSyncStateFilter iCloudSwitchRequiredPopShown]
  -[HMDCloudDataSyncStateFilter _startiCloudSwitchPopupTimer]
  -[HMDCloudDataSyncStateFilter localDataDecryptionFailed]
  -[HMDCloudDataSyncStateFilter setCloudDataSyncCompleted:]
  -[HMDCloudDataSyncStateFilter setServerTokenAvailable:]
  -[HMDCloudDataSyncStateFilter setLocalDataDecryptionFailed:]
  -[HMDCloudDataSyncStateFilter initWithName:homeManager:messageDispatcher:serverTokenAvailable:homeDataHasBeenDecrypted:homeManagerServerTokenAvailable:localDataDecryptionFailed:totalHomes:currentAccount:]
  -[HMDCloudDataSyncStateFilter updateNetworkConnectivity:]
  -[HMDCloudDataSyncStateFilter updateTotalHomes:]
  -[HMDCloudDataSyncStateFilter updateCurrentAccount:]
  -[HMDCloudDataSyncStateFilter dataSyncInProgressWithState:withMessage:]
  -[HMDCloudDataSyncStateFilter updateiCloudSwitchState:]
  -[HMDCloudDataSyncStateFilter updateLocalDataDecryptionFailed:]


HMDRemoteAccountMessageFilter : HMDMessageFilter
 @property  HMFMessageDestination *target
 @property  NSArray *whitelistedMessages

  // class methods
  +[HMDRemoteAccountMessageFilter logCategory]

  // instance methods
  -[HMDRemoteAccountMessageFilter initWithTarget:]
  -[HMDRemoteAccountMessageFilter initWithName:]
  -[HMDRemoteAccountMessageFilter logIdentifier]
  -[HMDRemoteAccountMessageFilter target]
  -[HMDRemoteAccountMessageFilter .cxx_destruct]
  -[HMDRemoteAccountMessageFilter acceptMessage:target:errorReason:]
  -[HMDRemoteAccountMessageFilter initWithTarget:whitelistedMessages:]
  -[HMDRemoteAccountMessageFilter __shouldCheckMessage:]
  -[HMDRemoteAccountMessageFilter whitelistedMessages]


HMDSecureRemoteMessageFilter : HMDMessageFilter
  // class methods
  +[HMDSecureRemoteMessageFilter logCategory]
  +[HMDSecureRemoteMessageFilter isWhitelistedMessage:]

  // instance methods
  -[HMDSecureRemoteMessageFilter logIdentifier]
  -[HMDSecureRemoteMessageFilter acceptMessage:target:errorReason:]


HomeKitEventRemoteLoginEvent : HMDLogEvent <HMDAWDLogEvent, HomeKitEventRemoteLoginMetricProtocol>
 @property  AWDHomeKitRemoteLogin *metric
 @property  NSDate *startTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitEventRemoteLoginEvent initialize]
  +[HomeKitEventRemoteLoginEvent uuid]

  // instance methods
  -[HomeKitEventRemoteLoginEvent setError:]
  -[HomeKitEventRemoteLoginEvent .cxx_destruct]
  -[HomeKitEventRemoteLoginEvent metric]
  -[HomeKitEventRemoteLoginEvent initWithSessionID:]
  -[HomeKitEventRemoteLoginEvent startTime]
  -[HomeKitEventRemoteLoginEvent AWDMessageType]
  -[HomeKitEventRemoteLoginEvent metricForAWD]


HomeKitEventRemoteLogoutEvent : HMDLogEvent <HMDAWDLogEvent, HomeKitEventRemoteLoginMetricProtocol>
 @property  AWDHomeKitRemoteLogout *metric
 @property  NSDate *startTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitEventRemoteLogoutEvent initialize]
  +[HomeKitEventRemoteLogoutEvent uuid]

  // instance methods
  -[HomeKitEventRemoteLogoutEvent setError:]
  -[HomeKitEventRemoteLogoutEvent .cxx_destruct]
  -[HomeKitEventRemoteLogoutEvent metric]
  -[HomeKitEventRemoteLogoutEvent initWithSessionID:]
  -[HomeKitEventRemoteLogoutEvent startTime]
  -[HomeKitEventRemoteLogoutEvent AWDMessageType]
  -[HomeKitEventRemoteLogoutEvent metricForAWD]


HMDPersonSettingsManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFMessageReceiver, HMFLogging>
 @property  HMDHome *home
 @property  HMBLocalZone *localZone
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSUUID *UUID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDPersonSettingsManager logCategory]

  // instance methods
  -[HMDPersonSettingsManager messageTargetUUID]
  -[HMDPersonSettingsManager messageReceiveQueue]
  -[HMDPersonSettingsManager configure]
  -[HMDPersonSettingsManager logIdentifier]
  -[HMDPersonSettingsManager .cxx_destruct]
  -[HMDPersonSettingsManager workQueue]
  -[HMDPersonSettingsManager _registerForMessages]
  -[HMDPersonSettingsManager localZone]
  -[HMDPersonSettingsManager home]
  -[HMDPersonSettingsManager messageDispatcher]
  -[HMDPersonSettingsManager UUID]
  -[HMDPersonSettingsManager remove]
  -[HMDPersonSettingsManager areClassificationNotificationsEnabledForPersonUUID:]
  -[HMDPersonSettingsManager _setClassificationNotificationsEnabled:forPersonUUID:]
  -[HMDPersonSettingsManager _handleFetchClassificationNotificationsEnabledForPersonMessage:]
  -[HMDPersonSettingsManager _handleSetClassificationNotificationsEnabledForPersonMessage:]
  -[HMDPersonSettingsManager initWithHome:localZone:workQueue:]


HMDActiveXPCClientConnectionsPeriodicTimer : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logIdentifier
 @property  NSHashTable *mutableClientConnections
 @property  HMFTimer *timer
 @property  @? timerFactory
 @property  double timeInterval
 @property  NSSet *clientConnections
 @property  <HMDActiveXPCClientConnectionsPeriodicTimerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDActiveXPCClientConnectionsPeriodicTimer logCategory]

  // instance methods
  -[HMDActiveXPCClientConnectionsPeriodicTimer removeClientConnection:]
  -[HMDActiveXPCClientConnectionsPeriodicTimer timerDidFire:]
  -[HMDActiveXPCClientConnectionsPeriodicTimer logIdentifier]
  -[HMDActiveXPCClientConnectionsPeriodicTimer timeInterval]
  -[HMDActiveXPCClientConnectionsPeriodicTimer timer]
  -[HMDActiveXPCClientConnectionsPeriodicTimer setTimer:]
  -[HMDActiveXPCClientConnectionsPeriodicTimer .cxx_destruct]
  -[HMDActiveXPCClientConnectionsPeriodicTimer workQueue]
  -[HMDActiveXPCClientConnectionsPeriodicTimer _updateTimer]
  -[HMDActiveXPCClientConnectionsPeriodicTimer clientConnections]
  -[HMDActiveXPCClientConnectionsPeriodicTimer setDelegate:]
  -[HMDActiveXPCClientConnectionsPeriodicTimer delegate]
  -[HMDActiveXPCClientConnectionsPeriodicTimer timerFactory]
  -[HMDActiveXPCClientConnectionsPeriodicTimer setTimerFactory:]
  -[HMDActiveXPCClientConnectionsPeriodicTimer mutableClientConnections]
  -[HMDActiveXPCClientConnectionsPeriodicTimer handleClientConnectionDidActivate:]
  -[HMDActiveXPCClientConnectionsPeriodicTimer handleClientConnectionDidDeactivate:]
  -[HMDActiveXPCClientConnectionsPeriodicTimer initWithTimeInterval:logIdentifier:workQueue:]
  -[HMDActiveXPCClientConnectionsPeriodicTimer addClientConnection:]


AWDHomeKitSiriCommand : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasActionType
 @property  int actionType
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  BOOL hasOutcome
 @property  int outcome
 @property  BOOL hasNumEntities
 @property  unsigned int numEntities
 @property  BOOL hasNumFailures
 @property  unsigned int numFailures
 @property  BOOL hasNumIncompleteOperations
 @property  unsigned int numIncompleteOperations
 @property  BOOL hasCurrentConfigurationVersion
 @property  unsigned int currentConfigurationVersion
 @property  BOOL hasLastSyncedConfigurationVersion
 @property  unsigned int lastSyncedConfigurationVersion
 @property  BOOL hasServerConfigurationVersion
 @property  unsigned int serverConfigurationVersion

  // instance methods
  -[AWDHomeKitSiriCommand copyWithZone:]
  -[AWDHomeKitSiriCommand actionType]
  -[AWDHomeKitSiriCommand timestamp]
  -[AWDHomeKitSiriCommand outcome]
  -[AWDHomeKitSiriCommand setTimestamp:]
  -[AWDHomeKitSiriCommand setOutcome:]
  -[AWDHomeKitSiriCommand setHasDuration:]
  -[AWDHomeKitSiriCommand setHasTimestamp:]
  -[AWDHomeKitSiriCommand readFrom:]
  -[AWDHomeKitSiriCommand writeTo:]
  -[AWDHomeKitSiriCommand isEqual:]
  -[AWDHomeKitSiriCommand setDuration:]
  -[AWDHomeKitSiriCommand copyTo:]
  -[AWDHomeKitSiriCommand dictionaryRepresentation]
  -[AWDHomeKitSiriCommand hasDuration]
  -[AWDHomeKitSiriCommand mergeFrom:]
  -[AWDHomeKitSiriCommand hasTimestamp]
  -[AWDHomeKitSiriCommand setActionType:]
  -[AWDHomeKitSiriCommand setHasActionType:]
  -[AWDHomeKitSiriCommand hasActionType]
  -[AWDHomeKitSiriCommand actionTypeAsString:]
  -[AWDHomeKitSiriCommand StringAsActionType:]
  -[AWDHomeKitSiriCommand setHasOutcome:]
  -[AWDHomeKitSiriCommand hasOutcome]
  -[AWDHomeKitSiriCommand outcomeAsString:]
  -[AWDHomeKitSiriCommand StringAsOutcome:]
  -[AWDHomeKitSiriCommand duration]
  -[AWDHomeKitSiriCommand lastSyncedConfigurationVersion]
  -[AWDHomeKitSiriCommand setLastSyncedConfigurationVersion:]
  -[AWDHomeKitSiriCommand serverConfigurationVersion]
  -[AWDHomeKitSiriCommand setNumEntities:]
  -[AWDHomeKitSiriCommand setHasNumEntities:]
  -[AWDHomeKitSiriCommand hasNumEntities]
  -[AWDHomeKitSiriCommand setNumFailures:]
  -[AWDHomeKitSiriCommand setHasNumFailures:]
  -[AWDHomeKitSiriCommand hasNumFailures]
  -[AWDHomeKitSiriCommand setNumIncompleteOperations:]
  -[AWDHomeKitSiriCommand setHasNumIncompleteOperations:]
  -[AWDHomeKitSiriCommand hasNumIncompleteOperations]
  -[AWDHomeKitSiriCommand setCurrentConfigurationVersion:]
  -[AWDHomeKitSiriCommand setHasCurrentConfigurationVersion:]
  -[AWDHomeKitSiriCommand hasCurrentConfigurationVersion]
  -[AWDHomeKitSiriCommand setHasLastSyncedConfigurationVersion:]
  -[AWDHomeKitSiriCommand hasLastSyncedConfigurationVersion]
  -[AWDHomeKitSiriCommand setServerConfigurationVersion:]
  -[AWDHomeKitSiriCommand setHasServerConfigurationVersion:]
  -[AWDHomeKitSiriCommand hasServerConfigurationVersion]
  -[AWDHomeKitSiriCommand numEntities]
  -[AWDHomeKitSiriCommand numFailures]
  -[AWDHomeKitSiriCommand numIncompleteOperations]
  -[AWDHomeKitSiriCommand currentConfigurationVersion]


HMDXPCMessageSendPolicyParameters : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned long entitlements

  // instance methods
  -[HMDXPCMessageSendPolicyParameters copyWithZone:]
  -[HMDXPCMessageSendPolicyParameters signature]
  -[HMDXPCMessageSendPolicyParameters init]
  -[HMDXPCMessageSendPolicyParameters entitlements]
  -[HMDXPCMessageSendPolicyParameters initWithEntitlements:]
  -[HMDXPCMessageSendPolicyParameters isEqual:]


HMDCharacteristicValueUpdate : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  id value
 @property  NSString *updateIdentifier
 @property  NSError *error
 @property  HMDDevice *remoteDevice
 @property  NSDate *valueUpatedTime
 @property  NSNumber *valueUpdatedStateNumber

  // instance methods
  -[HMDCharacteristicValueUpdate .cxx_destruct]
  -[HMDCharacteristicValueUpdate error]
  -[HMDCharacteristicValueUpdate initWithError:]
  -[HMDCharacteristicValueUpdate value]
  -[HMDCharacteristicValueUpdate updateIdentifier]
  -[HMDCharacteristicValueUpdate remoteDevice]
  -[HMDCharacteristicValueUpdate valueUpatedTime]
  -[HMDCharacteristicValueUpdate valueUpdatedStateNumber]
  -[HMDCharacteristicValueUpdate initWithValue:updateIdentifier:remoteDevice:]
  -[HMDCharacteristicValueUpdate setValueUpdatedTime:stateNumber:]


HMDCloudZoneInformation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  NSUUID *uuid
 @property  NSString *ownerName
 @property  BOOL fetchFailed
 @property  BOOL firstFetch
 @property  BOOL zoneCreated
 @property  long long schemaVersion
 @property  BOOL handlesCloudRecord
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCloudZoneInformation supportsSecureCoding]
  +[HMDCloudZoneInformation shortDescription]
  +[HMDCloudZoneInformation cloudZonesWithDictionary:]
  +[HMDCloudZoneInformation cloudZoneInformationWithCloudZones:]
  +[HMDCloudZoneInformation cloudZonesArrayWithCloudZones:]

  // instance methods
  -[HMDCloudZoneInformation init]
  -[HMDCloudZoneInformation uuid]
  -[HMDCloudZoneInformation .cxx_destruct]
  -[HMDCloudZoneInformation encodeWithCoder:]
  -[HMDCloudZoneInformation setOwnerName:]
  -[HMDCloudZoneInformation descriptionWithPointer:]
  -[HMDCloudZoneInformation shortDescription]
  -[HMDCloudZoneInformation schemaVersion]
  -[HMDCloudZoneInformation setSchemaVersion:]
  -[HMDCloudZoneInformation isEqual:]
  -[HMDCloudZoneInformation ownerName]
  -[HMDCloudZoneInformation initWithCoder:]
  -[HMDCloudZoneInformation transactionObjectUpdated:newValues:message:]
  -[HMDCloudZoneInformation transactionObjectRemoved:message:]
  -[HMDCloudZoneInformation initWithOwnerName:uuid:]
  -[HMDCloudZoneInformation setFetchFailed:]
  -[HMDCloudZoneInformation setHandlesCloudRecord:]
  -[HMDCloudZoneInformation didFetchFailed]
  -[HMDCloudZoneInformation isZoneCreated]
  -[HMDCloudZoneInformation setZoneCreated:]
  -[HMDCloudZoneInformation updateCloudZoneInformationWithModel:message:]
  -[HMDCloudZoneInformation modelObjectWithChangeType:version:parent:]
  -[HMDCloudZoneInformation emptyModelObjectWithChangeType:parent:]
  -[HMDCloudZoneInformation modelObjectWithChangeType:parent:]
  -[HMDCloudZoneInformation isFirstFetch]
  -[HMDCloudZoneInformation setFirstFetch:]
  -[HMDCloudZoneInformation doesHandlesCloudRecord]


HMDCloudZoneInformationModel : HMDBackingStoreModelObject
 @property  NSString *ownerName
 @property  BOOL requiresHomeManagerUpdate

  // class methods
  +[HMDCloudZoneInformationModel properties]

  // instance methods
  -[HMDCloudZoneInformationModel dependentUUIDs]
  -[HMDCloudZoneInformationModel requiresHomeManagerUpdate]
  -[HMDCloudZoneInformationModel setRequiresHomeManagerUpdate:]


HMDCameraSignificantEventFaceClassificationResolver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDHome *home
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSignificantEventFaceClassificationResolver logCategory]

  // instance methods
  -[HMDCameraSignificantEventFaceClassificationResolver logIdentifier]
  -[HMDCameraSignificantEventFaceClassificationResolver .cxx_destruct]
  -[HMDCameraSignificantEventFaceClassificationResolver setHome:]
  -[HMDCameraSignificantEventFaceClassificationResolver home]
  -[HMDCameraSignificantEventFaceClassificationResolver initWithHome:]
  -[HMDCameraSignificantEventFaceClassificationResolver personManagerWithUUID:]
  -[HMDCameraSignificantEventFaceClassificationResolver faceClassificationForSignificantEventFaceClassifications:]


HMDCameraNetworkConfig : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying>
 @property  NSString *ipAddress
 @property  BOOL ipv6
 @property  NSNumber *rtpPort

  // class methods
  +[HMDCameraNetworkConfig localIPAddress]

  // instance methods
  -[HMDCameraNetworkConfig copyWithZone:]
  -[HMDCameraNetworkConfig ipv6]
  -[HMDCameraNetworkConfig init]
  -[HMDCameraNetworkConfig .cxx_destruct]
  -[HMDCameraNetworkConfig rtpPort]
  -[HMDCameraNetworkConfig ipAddress]
  -[HMDCameraNetworkConfig setIpv6:]
  -[HMDCameraNetworkConfig setIpAddress:]
  -[HMDCameraNetworkConfig initWithAddress:ipv6:rtpPort:]
  -[HMDCameraNetworkConfig setRtpPort:]


HMDMediaSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, HMDHomeMessageReceiver, HMFDumpState, HMFLogging, NSSecureCoding>
 @property  HMDMediaEndpoint *endpoint
 @property  HMDMediaSessionState *state
 @property  NSMutableArray *setPlaybackStateCompletionHandlers
 @property  BOOL connected
 @property  BOOL currentAccessorySession
 @property  NSString *logID
 @property  HMFTimer *setPlaybackStateTimer
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *uuid
 @property  NSString *sessionIdentifier
 @property  NSArray *mediaProfiles
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDMediaSession supportsSecureCoding]
  +[HMDMediaSession logCategory]
  +[HMDMediaSession hasMessageReceiverChildren]
  +[HMDMediaSession sessionForCurrentAccessory:]
  +[HMDMediaSession mediaPropertyMessageKeys]
  +[HMDMediaSession mediaPropertyValueTypeWithMessageKey:]

  // instance methods
  -[HMDMediaSession messageTargetUUID]
  -[HMDMediaSession messageReceiveQueue]
  -[HMDMediaSession setEndpoint:]
  -[HMDMediaSession timerDidFire:]
  -[HMDMediaSession isConnected]
  -[HMDMediaSession setConnected:]
  -[HMDMediaSession logID]
  -[HMDMediaSession logIdentifier]
  -[HMDMediaSession endpoint]
  -[HMDMediaSession uuid]
  -[HMDMediaSession dealloc]
  -[HMDMediaSession setState:]
  -[HMDMediaSession .cxx_destruct]
  -[HMDMediaSession mediaProfiles]
  -[HMDMediaSession workQueue]
  -[HMDMediaSession encodeWithCoder:]
  -[HMDMediaSession sessionIdentifier]
  -[HMDMediaSession isEqual:]
  -[HMDMediaSession state]
  -[HMDMediaSession dumpState]
  -[HMDMediaSession initWithCoder:]
  -[HMDMediaSession registerForSessionUpdates:]
  -[HMDMediaSession initWithEndpoint:mediaProfiles:state:]
  -[HMDMediaSession updateWithResponses:message:]
  -[HMDMediaSession evaluateIfMediaPlaybackStateChanged:]
  -[HMDMediaSession readProperties:completion:]
  -[HMDMediaSession writeProperties:completion:]
  -[HMDMediaSession _initWithEndpoint:mediaProfiles:state:]
  -[HMDMediaSession _initWithMediaProfiles:state:]
  -[HMDMediaSession setPlaybackStateTimer]
  -[HMDMediaSession setSetPlaybackStateTimer:]
  -[HMDMediaSession isCurrentAccessorySession]
  -[HMDMediaSession _postNotificationOfMediaStateUpdateWithError:inResponseToMessage:]
  -[HMDMediaSession _getPlaybackStateWithCompletion:]
  -[HMDMediaSession _handleGetPlaybackState:]
  -[HMDMediaSession _invokePendingSetPlaybackStateBlocksOfError:]
  -[HMDMediaSession _postNotificationOfMediaStateUpdateWithPayload:]
  -[HMDMediaSession handleMediaPlaybackStateNotification:]
  -[HMDMediaSession setPlaybackStateCompletionHandlers]
  -[HMDMediaSession _queueSetPlaybackStateCompletion:]
  -[HMDMediaSession _setPlaybackState:completion:]
  -[HMDMediaSession _handleSetPlayback:]
  -[HMDMediaSession _handleMediaSessionSetAudioControl:]
  -[HMDMediaSession _handleMediaUpdateVolume:]
  -[HMDMediaSession _handleMediaUpdateMuted:]
  -[HMDMediaSession _registerForSessionUpdates:]
  -[HMDMediaSession handleRefreshPlayback:]
  -[HMDMediaSession handleSetPlayback:]
  -[HMDMediaSession _notifyClientsOfUpdatedVolume:muted:inResponseToMessage:]
  -[HMDMediaSession handleMediaSessionSetAudioControl:]
  -[HMDMediaSession updateEndpoint:]
  -[HMDMediaSession addMediaProfile:]
  -[HMDMediaSession removeMediaProfile:]
  -[HMDMediaSession setCurrentAccessorySession:]
  -[HMDMediaSession setLogID:]
  -[HMDMediaSession setSetPlaybackStateCompletionHandlers:]


HMDNetworkRouterFirewallRule : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSString *name
 @property  BOOL critical
 @property  NSDictionary *prettyJSONDictionary
 @property  NSDictionary *jsonDictionary
 @property  NSString *jsonString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRule logCategory]
  +[HMDNetworkRouterFirewallRule __transportProtocolToString:]

  // instance methods
  -[HMDNetworkRouterFirewallRule attributeDescriptions]
  -[HMDNetworkRouterFirewallRule isCritical]
  -[HMDNetworkRouterFirewallRule .cxx_destruct]
  -[HMDNetworkRouterFirewallRule name]
  -[HMDNetworkRouterFirewallRule jsonString]
  -[HMDNetworkRouterFirewallRule jsonDictionary]
  -[HMDNetworkRouterFirewallRule prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRule initWithJSONDictionary:name:critical:]
  -[HMDNetworkRouterFirewallRule initWithJSONDictionary:critical:]


HMDCameraSnapshotIDSStream : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <IDSServiceDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDCameraSnapshotSessionID *sessionID
 @property  IDSService *idsProxyService
 @property  HMFOSTransaction *snapshotStreamTransaction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotIDSStream logCategory]

  // instance methods
  -[HMDCameraSnapshotIDSStream sessionID]
  -[HMDCameraSnapshotIDSStream logIdentifier]
  -[HMDCameraSnapshotIDSStream dealloc]
  -[HMDCameraSnapshotIDSStream .cxx_destruct]
  -[HMDCameraSnapshotIDSStream workQueue]
  -[HMDCameraSnapshotIDSStream initWithSessionID:workQueue:]
  -[HMDCameraSnapshotIDSStream idsProxyService]
  -[HMDCameraSnapshotIDSStream snapshotStreamTransaction]
  -[HMDCameraSnapshotIDSStream setSnapshotStreamTransaction:]


HMDMediaActionRouter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDMPCSessionDataMediaProfileSource, HMFMessageReceiver>
 @property  <HMDMediaActionRouterDataSource> *dataSource
 @property  BOOL shouldExecuteOnCurrentDevice
 @property  HMDResidentDevice *targetResidentDeviceOverride
 @property  HMDMPCSessionController *mpcSessionController
 @property  HMDHome *home
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDMediaActionRouter messageTargetUUID]
  -[HMDMediaActionRouter messageReceiveQueue]
  -[HMDMediaActionRouter initWithDataSource:]
  -[HMDMediaActionRouter init]
  -[HMDMediaActionRouter dealloc]
  -[HMDMediaActionRouter .cxx_destruct]
  -[HMDMediaActionRouter mediaProfileWithUUID:]
  -[HMDMediaActionRouter _registerForMessages]
  -[HMDMediaActionRouter home]
  -[HMDMediaActionRouter dataSource]
  -[HMDMediaActionRouter routeMessage:]
  -[HMDMediaActionRouter routeSessionDataForExecution:encodePlaybackArchive:completion:]
  -[HMDMediaActionRouter targetResidentDeviceForExecutingMediaActionWithProfiles:]
  -[HMDMediaActionRouter handleNonResidentMediaActionExecutionWithSessionData:encodePlaybackArchive:completion:]
  -[HMDMediaActionRouter sendMediaActionMessageToResident:sessionData:encodePlaybackArchive:completion:]
  -[HMDMediaActionRouter executeMediaActionWithSessionData:completion:]
  -[HMDMediaActionRouter sendMediaActionMessageToCompanionWithSessionData:encodePlaybackArchive:completion:]
  -[HMDMediaActionRouter sendMediaActionMessageToDevice:sessionData:encodePlaybackArchive:canForwardMessage:completion:]
  -[HMDMediaActionRouter targetResidentDeviceOverride]
  -[HMDMediaActionRouter mpcSessionController]
  -[HMDMediaActionRouter routeMediaActionForExecution:source:completion:]
  -[HMDMediaActionRouter shouldExecuteOnCurrentDevice]
  -[HMDMediaActionRouter setTargetResidentDeviceOverride:]


HMDCameraSettingProactiveReader : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDCameraSettingProactiveReaderDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSSet *streamControlMessageHandlers
 @property  NSString *logIdentifier
 @property  HMDAccessory *accessory
 @property  HMFMessage *pendingMessage
 @property  NSString *sessionID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSettingProactiveReader logCategory]

  // instance methods
  -[HMDCameraSettingProactiveReader handleMessage:]
  -[HMDCameraSettingProactiveReader sessionID]
  -[HMDCameraSettingProactiveReader logIdentifier]
  -[HMDCameraSettingProactiveReader delegateQueue]
  -[HMDCameraSettingProactiveReader .cxx_destruct]
  -[HMDCameraSettingProactiveReader workQueue]
  -[HMDCameraSettingProactiveReader accessory]
  -[HMDCameraSettingProactiveReader delegate]
  -[HMDCameraSettingProactiveReader pendingMessage]
  -[HMDCameraSettingProactiveReader setPendingMessage:]
  -[HMDCameraSettingProactiveReader _callDidCompleteReadDelegateCallback]
  -[HMDCameraSettingProactiveReader streamControlMessageHandlers]
  -[HMDCameraSettingProactiveReader _handleStreamStatusMultireadResponse:]
  -[HMDCameraSettingProactiveReader _availableStreamControlMessageHandlersForReadResponses:]
  -[HMDCameraSettingProactiveReader _inUseStreamControlMessageHandlersForReadResponses:]
  -[HMDCameraSettingProactiveReader _streamingStatusForResponse:]
  -[HMDCameraSettingProactiveReader initWithWorkQueue:accessory:delegate:delegateQueue:message:streamMessageHandlers:logID:]
  -[HMDCameraSettingProactiveReader hasPendingNegotiateMessageForSessionWithIdentifier:]
  -[HMDCameraSettingProactiveReader readSetting]


HMDSiriCommandEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long duration
 @property  NSString *actionType
 @property  NSString *outcome
 @property  unsigned long numberOfEntities
 @property  unsigned long numberOfFailures
 @property  unsigned long numberOfIncompletions
 @property  unsigned long configurationVersion
 @property  unsigned long lastSyncedConfigurationVersion
 @property  unsigned long serverConfigurationVersion

  // class methods
  +[HMDSiriCommandEvent initialize]
  +[HMDSiriCommandEvent uuid]
  +[HMDSiriCommandEvent commandEventWithDuration:actionType:outcome:numberOfEntities:numberOfFailures:numberOfIncompletions:serverConfigurationVersion:configurationVersion:lastSyncedConfigurationVersion:]

  // instance methods
  -[HMDSiriCommandEvent actionType]
  -[HMDSiriCommandEvent .cxx_destruct]
  -[HMDSiriCommandEvent configurationVersion]
  -[HMDSiriCommandEvent outcome]
  -[HMDSiriCommandEvent duration]
  -[HMDSiriCommandEvent lastSyncedConfigurationVersion]
  -[HMDSiriCommandEvent AWDMessageType]
  -[HMDSiriCommandEvent metricForAWD]
  -[HMDSiriCommandEvent serverConfigurationVersion]
  -[HMDSiriCommandEvent initWithDuration:actionType:outcome:numberOfEntities:numberOfFailures:numberOfIncompletions:serverConfigurationVersion:configurationVersion:lastSyncedConfigurationVersion:]
  -[HMDSiriCommandEvent numberOfEntities]
  -[HMDSiriCommandEvent numberOfFailures]
  -[HMDSiriCommandEvent numberOfIncompletions]


AWDHomeKitRemoteLogout : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasResultErrorCode
 @property  int resultErrorCode
 @property  BOOL hasDelay
 @property  unsigned long delay
 @property  BOOL hasRequester
 @property  int requester

  // instance methods
  -[AWDHomeKitRemoteLogout copyWithZone:]
  -[AWDHomeKitRemoteLogout setDelay:]
  -[AWDHomeKitRemoteLogout delay]
  -[AWDHomeKitRemoteLogout timestamp]
  -[AWDHomeKitRemoteLogout setTimestamp:]
  -[AWDHomeKitRemoteLogout hasDelay]
  -[AWDHomeKitRemoteLogout requester]
  -[AWDHomeKitRemoteLogout setHasTimestamp:]
  -[AWDHomeKitRemoteLogout readFrom:]
  -[AWDHomeKitRemoteLogout writeTo:]
  -[AWDHomeKitRemoteLogout isEqual:]
  -[AWDHomeKitRemoteLogout setRequester:]
  -[AWDHomeKitRemoteLogout copyTo:]
  -[AWDHomeKitRemoteLogout dictionaryRepresentation]
  -[AWDHomeKitRemoteLogout setHasDelay:]
  -[AWDHomeKitRemoteLogout mergeFrom:]
  -[AWDHomeKitRemoteLogout hasTimestamp]
  -[AWDHomeKitRemoteLogout setResultErrorCode:]
  -[AWDHomeKitRemoteLogout setHasResultErrorCode:]
  -[AWDHomeKitRemoteLogout hasResultErrorCode]
  -[AWDHomeKitRemoteLogout resultErrorCode]
  -[AWDHomeKitRemoteLogout setHasRequester:]
  -[AWDHomeKitRemoteLogout hasRequester]
  -[AWDHomeKitRemoteLogout requesterAsString:]
  -[AWDHomeKitRemoteLogout StringAsRequester:]


HMDAssistantCommandExecutor : NSObject /usr/lib/libc++.1.dylib <HMFTimerDelegate>
 @property  HMDAssistantCommand *initialCommand
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableArray *actionResults
 @property  NSMutableDictionary *pendingCommands
 @property  NSString *clientValidity
 @property  HMFTimer *executionTimer
 @property  @? completionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAssistantCommandExecutor executorWithCommand:workQueue:messageDispatcher:]

  // instance methods
  -[HMDAssistantCommandExecutor timerDidFire:]
  -[HMDAssistantCommandExecutor _isValid]
  -[HMDAssistantCommandExecutor setWorkQueue:]
  -[HMDAssistantCommandExecutor actionResults]
  -[HMDAssistantCommandExecutor clientValidity]
  -[HMDAssistantCommandExecutor setClientValidity:]
  -[HMDAssistantCommandExecutor .cxx_destruct]
  -[HMDAssistantCommandExecutor workQueue]
  -[HMDAssistantCommandExecutor _command]
  -[HMDAssistantCommandExecutor _reportResults:]
  -[HMDAssistantCommandExecutor setMsgDispatcher:]
  -[HMDAssistantCommandExecutor msgDispatcher]
  -[HMDAssistantCommandExecutor _sendResponse:]
  -[HMDAssistantCommandExecutor performWithCompletion:]
  -[HMDAssistantCommandExecutor pendingCommands]
  -[HMDAssistantCommandExecutor completionHandler]
  -[HMDAssistantCommandExecutor setPendingCommands:]
  -[HMDAssistantCommandExecutor setCompletionHandler:]
  -[HMDAssistantCommandExecutor setActionResults:]
  -[HMDAssistantCommandExecutor initWithCommand:workQueue:messageDispatcher:]
  -[HMDAssistantCommandExecutor executionTimer]
  -[HMDAssistantCommandExecutor _startExecutionTimer]
  -[HMDAssistantCommandExecutor _reportFailure]
  -[HMDAssistantCommandExecutor _initialCommandIsMultipleActions]
  -[HMDAssistantCommandExecutor initialCommand]
  -[HMDAssistantCommandExecutor _executeCommand:]
  -[HMDAssistantCommandExecutor _accumulateActionResultsFromResponse:command:]
  -[HMDAssistantCommandExecutor setExecutionTimer:]
  -[HMDAssistantCommandExecutor setInitialCommand:]


HMDUserActionPredictionContainer : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableArray *sortedPredictionGroups
 @property  NSArray *sortedPredictionsByServiceGroup
 @property  NSArray *allPredictions

  // instance methods
  -[HMDUserActionPredictionContainer init]
  -[HMDUserActionPredictionContainer .cxx_destruct]
  -[HMDUserActionPredictionContainer sortedPredictionsByServiceGroup]
  -[HMDUserActionPredictionContainer addOrUpdatePrediction:]
  -[HMDUserActionPredictionContainer removePrediction:]
  -[HMDUserActionPredictionContainer allPredictions]
  -[HMDUserActionPredictionContainer sortedPredictionGroups]
  -[HMDUserActionPredictionContainer createPredictionGroupForPrediction:]
  -[HMDUserActionPredictionContainer _movePrediction:fromGroup:intoGroup:]
  -[HMDUserActionPredictionContainer _insertPredictionGroup:]
  -[HMDUserActionPredictionContainer setSortedPredictionsByServiceGroup:]
  -[HMDUserActionPredictionContainer setSortedPredictionGroups:]


HMDUserActionPredictionSingleItemGroup : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDUserActionPredictionGroup>
 @property  HMUserActionPrediction *prediction
 @property  NSUUID *groupUUID
 @property  double predictionScore
 @property  NSArray *predictions
 @property  HMUserActionPrediction *userActionRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDUserActionPredictionSingleItemGroup predictionScore]
  -[HMDUserActionPredictionSingleItemGroup prediction]
  -[HMDUserActionPredictionSingleItemGroup .cxx_destruct]
  -[HMDUserActionPredictionSingleItemGroup setPrediction:]
  -[HMDUserActionPredictionSingleItemGroup predictions]
  -[HMDUserActionPredictionSingleItemGroup groupUUID]
  -[HMDUserActionPredictionSingleItemGroup userActionRepresentation]
  -[HMDUserActionPredictionSingleItemGroup initWithPrediction:]
  -[HMDUserActionPredictionSingleItemGroup updateWithPrediction:]
  -[HMDUserActionPredictionSingleItemGroup containsPrediction:]
  -[HMDUserActionPredictionSingleItemGroup shouldContainPrediction:]


HMDUserActionPredictionGroup : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDUserActionPredictionGroup>
 @property  NSMutableArray *mutablePredictions
 @property  NSUUID *groupUUID
 @property  double predictionScore
 @property  NSArray *predictions
 @property  HMUserActionPrediction *userActionRepresentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDUserActionPredictionGroup predictionScore]
  -[HMDUserActionPredictionGroup targetGroupType]
  -[HMDUserActionPredictionGroup .cxx_destruct]
  -[HMDUserActionPredictionGroup predictions]
  -[HMDUserActionPredictionGroup groupUUID]
  -[HMDUserActionPredictionGroup userActionRepresentation]
  -[HMDUserActionPredictionGroup initWithPredictions:]
  -[HMDUserActionPredictionGroup updateWithPrediction:]
  -[HMDUserActionPredictionGroup containsPrediction:]
  -[HMDUserActionPredictionGroup shouldContainPrediction:]
  -[HMDUserActionPredictionGroup _updateMaxScore]
  -[HMDUserActionPredictionGroup mutablePredictions]
  -[HMDUserActionPredictionGroup frameworkPredictionTypeForGroup]


HMDAirPlayAccessory : HMDMediaAccessory <HMDAccessoryMinimumUserPrivilegeCapable, HMDDevicePreferenceDataSource, HMFTimerDelegate, HMDAccessoryDisassociation, HMDAccessoryUserManagement, HMFLogging>
 @property  HMFExponentialBackoffTimer *configurationRetryTimer
 @property  NSString *password
 @property  long long minimumUserPriviledge
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL supportsDisassociation
 @property  BOOL supportsUserManagement
 @property  HMFPairingIdentity *pairingIdentity

  // class methods
  +[HMDAirPlayAccessory initialize]
  +[HMDAirPlayAccessory supportsSecureCoding]

  // instance methods
  -[HMDAirPlayAccessory timerDidFire:]
  -[HMDAirPlayAccessory password]
  -[HMDAirPlayAccessory setPassword:]
  -[HMDAirPlayAccessory .cxx_destruct]
  -[HMDAirPlayAccessory setReachable:]
  -[HMDAirPlayAccessory encodeWithCoder:]
  -[HMDAirPlayAccessory removeUser:completionHandler:]
  -[HMDAirPlayAccessory pairingIdentity]
  -[HMDAirPlayAccessory setPairingIdentity:]
  -[HMDAirPlayAccessory initWithCoder:]
  -[HMDAirPlayAccessory advertisement]
  -[HMDAirPlayAccessory setAdvertisement:]
  -[HMDAirPlayAccessory supportsDeviceWithCapabilities:]
  -[HMDAirPlayAccessory transactionObjectUpdated:newValues:message:]
  -[HMDAirPlayAccessory backingStoreObjects:]
  -[HMDAirPlayAccessory configureWithHome:msgDispatcher:configurationTracker:initialConfiguration:]
  -[HMDAirPlayAccessory transactionWithObjectChangeType:]
  -[HMDAirPlayAccessory initWithTransaction:home:]
  -[HMDAirPlayAccessory disassociateWithCompletionHandler:]
  -[HMDAirPlayAccessory supportsDisassociation]
  -[HMDAirPlayAccessory supportsUserManagement]
  -[HMDAirPlayAccessory supportsMinimumUserPrivilege]
  -[HMDAirPlayAccessory handleUpdatedMinimumUserPrivilege:]
  -[HMDAirPlayAccessory handleUpdatedPassword:]
  -[HMDAirPlayAccessory messageSendPolicy]
  -[HMDAirPlayAccessory addUser:completionHandler:]
  -[HMDAirPlayAccessory pairingsWithCompletionHandler:]
  -[HMDAirPlayAccessory _handleUpdatedName:]
  -[HMDAirPlayAccessory populateModelObject:version:]
  -[HMDAirPlayAccessory handleUpdatedAdvertisement:]
  -[HMDAirPlayAccessory configurationRetryTimer]
  -[HMDAirPlayAccessory minimumUserPriviledge]
  -[HMDAirPlayAccessory setMinimumUserPriviledge:]
  -[HMDAirPlayAccessory disassociateUser:completionHandler:]


HMDAirPlayAccessoryModel : HMDMediaAccessoryModel
 @property  HMFPairingIdentity *pairingIdentity
 @property  NSString *password
 @property  NSNumber *minimumUserPriviledge

  // class methods
  +[HMDAirPlayAccessoryModel properties]


AWDHomeKitCalendarEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
  // instance methods
  -[AWDHomeKitCalendarEvent copyWithZone:]
  -[AWDHomeKitCalendarEvent readFrom:]
  -[AWDHomeKitCalendarEvent writeTo:]
  -[AWDHomeKitCalendarEvent isEqual:]
  -[AWDHomeKitCalendarEvent copyTo:]
  -[AWDHomeKitCalendarEvent dictionaryRepresentation]
  -[AWDHomeKitCalendarEvent mergeFrom:]


HomeKitUserPresenceAuthorizationEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  AWDHomeKitUserPresenceAuthorization *metric
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitUserPresenceAuthorizationEvent initialize]
  +[HomeKitUserPresenceAuthorizationEvent uuid]

  // instance methods
  -[HomeKitUserPresenceAuthorizationEvent init]
  -[HomeKitUserPresenceAuthorizationEvent .cxx_destruct]
  -[HomeKitUserPresenceAuthorizationEvent metric]
  -[HomeKitUserPresenceAuthorizationEvent AWDMessageType]
  -[HomeKitUserPresenceAuthorizationEvent metricForAWD]


HomeKitUserPresenceComputeEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  AWDHomeKitUserPresenceCompute *metric
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitUserPresenceComputeEvent initialize]
  +[HomeKitUserPresenceComputeEvent uuid]

  // instance methods
  -[HomeKitUserPresenceComputeEvent init]
  -[HomeKitUserPresenceComputeEvent .cxx_destruct]
  -[HomeKitUserPresenceComputeEvent metric]
  -[HomeKitUserPresenceComputeEvent AWDMessageType]
  -[HomeKitUserPresenceComputeEvent metricForAWD]


HomeKitPresenceReportEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  AWDHomeKitPresenceReport *metric
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitPresenceReportEvent initialize]
  +[HomeKitPresenceReportEvent uuid]

  // instance methods
  -[HomeKitPresenceReportEvent init]
  -[HomeKitPresenceReportEvent .cxx_destruct]
  -[HomeKitPresenceReportEvent metric]
  -[HomeKitPresenceReportEvent AWDMessageType]
  -[HomeKitPresenceReportEvent metricForAWD]


HomeKitPresenceRegionEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  AWDHomeKitPresenceRegion *metric
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitPresenceRegionEvent initialize]
  +[HomeKitPresenceRegionEvent uuid]

  // instance methods
  -[HomeKitPresenceRegionEvent init]
  -[HomeKitPresenceRegionEvent .cxx_destruct]
  -[HomeKitPresenceRegionEvent metric]
  -[HomeKitPresenceRegionEvent AWDMessageType]
  -[HomeKitPresenceRegionEvent metricForAWD]


HMDCameraRecordingMediaContainer : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSCopying, NSSecureCoding>
 @property  long long type

  // class methods
  +[HMDCameraRecordingMediaContainer supportsSecureCoding]
  +[HMDCameraRecordingMediaContainer arrayWithContainerTypes:]

  // instance methods
  -[HMDCameraRecordingMediaContainer copyWithZone:]
  -[HMDCameraRecordingMediaContainer encodeWithCoder:]
  -[HMDCameraRecordingMediaContainer type]
  -[HMDCameraRecordingMediaContainer description:indent:]
  -[HMDCameraRecordingMediaContainer isEqual:]
  -[HMDCameraRecordingMediaContainer initWithContainer:]
  -[HMDCameraRecordingMediaContainer initWithCoder:]


HMDCameraRecordingMediaContainerParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSNumber *fragmentLength

  // class methods
  +[HMDCameraRecordingMediaContainerParameters supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingMediaContainerParameters .cxx_destruct]
  -[HMDCameraRecordingMediaContainerParameters encodeWithCoder:]
  -[HMDCameraRecordingMediaContainerParameters description:indent:]
  -[HMDCameraRecordingMediaContainerParameters tlvData]
  -[HMDCameraRecordingMediaContainerParameters initWithCoder:]
  -[HMDCameraRecordingMediaContainerParameters _parseFromTLVData]
  -[HMDCameraRecordingMediaContainerParameters fragmentLength]
  -[HMDCameraRecordingMediaContainerParameters initWithFragmentLength:]


HMDCameraRecordingMediaContainerConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDCameraRecordingMediaContainer *container
 @property  HMDCameraRecordingMediaContainerParameters *parameters

  // class methods
  +[HMDCameraRecordingMediaContainerConfiguration supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingMediaContainerConfiguration parameters]
  -[HMDCameraRecordingMediaContainerConfiguration .cxx_destruct]
  -[HMDCameraRecordingMediaContainerConfiguration container]
  -[HMDCameraRecordingMediaContainerConfiguration encodeWithCoder:]
  -[HMDCameraRecordingMediaContainerConfiguration description:indent:]
  -[HMDCameraRecordingMediaContainerConfiguration tlvData]
  -[HMDCameraRecordingMediaContainerConfiguration initWithCoder:]
  -[HMDCameraRecordingMediaContainerConfiguration _parseFromTLVData]
  -[HMDCameraRecordingMediaContainerConfiguration initWithMediaContainer:containerParameters:]


HMDCameraRecordingGeneralConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSNumber *prebufferLength
 @property  unsigned long eventTriggerOptions
 @property  NSArray *mediaContainerConfigurations

  // class methods
  +[HMDCameraRecordingGeneralConfiguration supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingGeneralConfiguration .cxx_destruct]
  -[HMDCameraRecordingGeneralConfiguration encodeWithCoder:]
  -[HMDCameraRecordingGeneralConfiguration description:indent:]
  -[HMDCameraRecordingGeneralConfiguration tlvData]
  -[HMDCameraRecordingGeneralConfiguration initWithCoder:]
  -[HMDCameraRecordingGeneralConfiguration _parseFromTLVData]
  -[HMDCameraRecordingGeneralConfiguration prebufferLength]
  -[HMDCameraRecordingGeneralConfiguration eventTriggerOptions]
  -[HMDCameraRecordingGeneralConfiguration mediaContainerConfigurations]
  -[HMDCameraRecordingGeneralConfiguration initWithPrebufferLength:eventTriggerOptions:mediaContainerConfigurations:]


HMDCameraRecordingSelectedConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDCameraRecordingGeneralConfiguration *generalConfiguration
 @property  HMDCameraRecordingVideoCodecConfiguration *videoConfiguration
 @property  HMDCameraRecordingAudioCodecConfiguration *audioConfiguration

  // class methods
  +[HMDCameraRecordingSelectedConfiguration supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingSelectedConfiguration videoConfiguration]
  -[HMDCameraRecordingSelectedConfiguration audioConfiguration]
  -[HMDCameraRecordingSelectedConfiguration .cxx_destruct]
  -[HMDCameraRecordingSelectedConfiguration encodeWithCoder:]
  -[HMDCameraRecordingSelectedConfiguration description:indent:]
  -[HMDCameraRecordingSelectedConfiguration tlvData]
  -[HMDCameraRecordingSelectedConfiguration initWithCoder:]
  -[HMDCameraRecordingSelectedConfiguration _parseFromTLVData]
  -[HMDCameraRecordingSelectedConfiguration generalConfiguration]
  -[HMDCameraRecordingSelectedConfiguration initWithGeneralConfiguration:videoCodecConfiguration:audioCodecConfiguration:]


HMDTargetControlManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSMutableArray *activeControlServices
 @property  NSMutableArray *eventReceivers
 @property  NSString *logID
 @property  HMDSiriServer *siriServer
 @property  HMDAccessory *targetAccessory
 @property  NSMutableArray *configuredControllers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDTargetControlManager logCategory]

  // instance methods
  -[HMDTargetControlManager logID]
  -[HMDTargetControlManager logIdentifier]
  -[HMDTargetControlManager init]
  -[HMDTargetControlManager .cxx_destruct]
  -[HMDTargetControlManager addReceiver:]
  -[HMDTargetControlManager removeReceiver:]
  -[HMDTargetControlManager workQueue]
  -[HMDTargetControlManager invalidate]
  -[HMDTargetControlManager targetAccessory]
  -[HMDTargetControlManager __accessoryNameUpdated:]
  -[HMDTargetControlManager __accessoryConnected:]
  -[HMDTargetControlManager __accessoryDisconnected:]
  -[HMDTargetControlManager __accessoryRemoved:]
  -[HMDTargetControlManager __targetAccessoryConfiguredForControl:]
  -[HMDTargetControlManager __targetAccessoryUnconfiguredForControl:]
  -[HMDTargetControlManager __controllerRefreshedConfiguration:]
  -[HMDTargetControlManager __activeSelectionChanged:]
  -[HMDTargetControlManager __activeSelectionReset:]
  -[HMDTargetControlManager __characteristicsEventsReceived:]
  -[HMDTargetControlManager __accessoryAdded:]
  -[HMDTargetControlManager __serviceRemoved:]
  -[HMDTargetControlManager _addController:]
  -[HMDTargetControlManager __getOrCreateEventReceiver:]
  -[HMDTargetControlManager siriServer]
  -[HMDTargetControlManager setSiriServer:]
  -[HMDTargetControlManager activeControlServices]
  -[HMDTargetControlManager _handleTargetControlServiceDeselection:]
  -[HMDTargetControlManager configuredControllers]
  -[HMDTargetControlManager _targetAccessoryUnconfiguredWithController:]
  -[HMDTargetControlManager __selectButtonConfiguration:receiver:]
  -[HMDTargetControlManager _targetAccessoryConfiguredWithController:]
  -[HMDTargetControlManager _targetAccessoryRefreshConfigurationWithController:userInfo:]
  -[HMDTargetControlManager _handleControllerDisconnected:]
  -[HMDTargetControlManager _removeController:]
  -[HMDTargetControlManager eventReceivers]
  -[HMDTargetControlManager _handleButtonEvent:fromControlService:]
  -[HMDTargetControlManager removeControlService:]
  -[HMDTargetControlManager addControlService:]
  -[HMDTargetControlManager _handleTargetControlServiceSelection:]
  -[HMDTargetControlManager initWithTargetAccessory:controllers:]
  -[HMDTargetControlManager addTargetControllers:]


HomeKitEventTriggerExecutionSessionLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  HMDAnalyticsEventTriggerExecutionSessionData *analyticsData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitEventTriggerExecutionSessionLogEvent initialize]
  +[HomeKitEventTriggerExecutionSessionLogEvent uuid]

  // instance methods
  -[HomeKitEventTriggerExecutionSessionLogEvent .cxx_destruct]
  -[HomeKitEventTriggerExecutionSessionLogEvent analyticsData]
  -[HomeKitEventTriggerExecutionSessionLogEvent initWithSessionID:]
  -[HomeKitEventTriggerExecutionSessionLogEvent AWDMessageType]
  -[HomeKitEventTriggerExecutionSessionLogEvent metricForAWD]
  -[HomeKitEventTriggerExecutionSessionLogEvent toAWDExecutionState:]


HomeKitEventTriggerUserConfirmationSendLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  HMDAnalyticsEventTriggerUserConfirmationSendData *analyticsData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitEventTriggerUserConfirmationSendLogEvent initialize]
  +[HomeKitEventTriggerUserConfirmationSendLogEvent uuid]

  // instance methods
  -[HomeKitEventTriggerUserConfirmationSendLogEvent .cxx_destruct]
  -[HomeKitEventTriggerUserConfirmationSendLogEvent analyticsData]
  -[HomeKitEventTriggerUserConfirmationSendLogEvent initWithSessionID:]
  -[HomeKitEventTriggerUserConfirmationSendLogEvent AWDMessageType]
  -[HomeKitEventTriggerUserConfirmationSendLogEvent metricForAWD]


HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData *analyticsData
 @property  NSDate *startTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent initialize]
  +[HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent uuid]

  // instance methods
  -[HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent .cxx_destruct]
  -[HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent analyticsData]
  -[HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent initWithSessionID:]
  -[HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent startTime]
  -[HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent AWDMessageType]
  -[HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent metricForAWD]


HomeKitEventTriggerAddLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  HMDAnalyticsAddEventTriggerData *analyticsData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitEventTriggerAddLogEvent initialize]
  +[HomeKitEventTriggerAddLogEvent uuid]

  // instance methods
  -[HomeKitEventTriggerAddLogEvent init]
  -[HomeKitEventTriggerAddLogEvent .cxx_destruct]
  -[HomeKitEventTriggerAddLogEvent analyticsData]
  -[HomeKitEventTriggerAddLogEvent AWDMessageType]
  -[HomeKitEventTriggerAddLogEvent metricForAWD]


HomeKitEventTriggerUpdateLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  HMDAnalyticsUpdateEventTriggerData *analyticsData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HomeKitEventTriggerUpdateLogEvent initialize]
  +[HomeKitEventTriggerUpdateLogEvent uuid]

  // instance methods
  -[HomeKitEventTriggerUpdateLogEvent init]
  -[HomeKitEventTriggerUpdateLogEvent .cxx_destruct]
  -[HomeKitEventTriggerUpdateLogEvent analyticsData]
  -[HomeKitEventTriggerUpdateLogEvent AWDMessageType]
  -[HomeKitEventTriggerUpdateLogEvent metricForAWD]


HMDAnalyticsLocationEventData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL notifyOnEntry
 @property  BOOL notifyOnExit

  // instance methods
  -[HMDAnalyticsLocationEventData setNotifyOnExit:]
  -[HMDAnalyticsLocationEventData notifyOnEntry]
  -[HMDAnalyticsLocationEventData notifyOnExit]
  -[HMDAnalyticsLocationEventData setNotifyOnEntry:]


HMDAnalyticsPredicateData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // instance methods
  -[HMDAnalyticsPredicateData init]
  -[HMDAnalyticsPredicateData .cxx_destruct]


HMDAnalyticsPresenceEventData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  int presenceEventGranularity
 @property  int presenceEventType

  // instance methods
  -[HMDAnalyticsPresenceEventData presenceEventType]
  -[HMDAnalyticsPresenceEventData setPresenceEventType:]
  -[HMDAnalyticsPresenceEventData presenceEventGranularity]
  -[HMDAnalyticsPresenceEventData setPresenceEventGranularity:]


HMDAnalyticsSignificantTimeEventData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *significantEvent
 @property  BOOL offsetPresent

  // instance methods
  -[HMDAnalyticsSignificantTimeEventData significantEvent]
  -[HMDAnalyticsSignificantTimeEventData .cxx_destruct]
  -[HMDAnalyticsSignificantTimeEventData setSignificantEvent:]
  -[HMDAnalyticsSignificantTimeEventData setOffsetPresent:]
  -[HMDAnalyticsSignificantTimeEventData offsetPresent]


HMDAnalyticsCalendarEventData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI

HMDAnalyticsCharacteristicEventData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL containsValue

  // instance methods
  -[HMDAnalyticsCharacteristicEventData setContainsValue:]
  -[HMDAnalyticsCharacteristicEventData containsValue]


HMDAnalyticsCharacteristicThresholdEventData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL maxPresent
 @property  BOOL minPresent

  // instance methods
  -[HMDAnalyticsCharacteristicThresholdEventData setMinPresent:]
  -[HMDAnalyticsCharacteristicThresholdEventData setMaxPresent:]
  -[HMDAnalyticsCharacteristicThresholdEventData minPresent]
  -[HMDAnalyticsCharacteristicThresholdEventData maxPresent]


HMDAnalyticsDurationEventData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI

HMDAnalyticsEventTriggerData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  int activationState
 @property  int activationType
 @property  NSArray *events
 @property  HMDAnalyticsPredicateData *predicate
 @property  BOOL containsRecurrences
 @property  BOOL executeOnce

  // instance methods
  -[HMDAnalyticsEventTriggerData events]
  -[HMDAnalyticsEventTriggerData setExecuteOnce:]
  -[HMDAnalyticsEventTriggerData setActivationState:]
  -[HMDAnalyticsEventTriggerData executeOnce]
  -[HMDAnalyticsEventTriggerData .cxx_destruct]
  -[HMDAnalyticsEventTriggerData setEvents:]
  -[HMDAnalyticsEventTriggerData predicate]
  -[HMDAnalyticsEventTriggerData setPredicate:]
  -[HMDAnalyticsEventTriggerData activationState]
  -[HMDAnalyticsEventTriggerData activationType]
  -[HMDAnalyticsEventTriggerData setActivationType:]
  -[HMDAnalyticsEventTriggerData containsRecurrences]
  -[HMDAnalyticsEventTriggerData setContainsRecurrences:]


HMDAnalyticsTriggerEventData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDAnalyticsCalendarEventData *calendarEvent
 @property  HMDAnalyticsCharacteristicEventData *charEvent
 @property  HMDAnalyticsCharacteristicThresholdEventData *charThresholdEvent
 @property  HMDAnalyticsDurationEventData *durationEvent
 @property  HMDAnalyticsLocationEventData *locationEvent
 @property  HMDAnalyticsPresenceEventData *presenceEvent
 @property  HMDAnalyticsSignificantTimeEventData *significantTimeEvent
 @property  HMDAnalyticsCharacteristicThresholdEventData *thresholdEvent
 @property  BOOL endEvent

  // instance methods
  -[HMDAnalyticsTriggerEventData .cxx_destruct]
  -[HMDAnalyticsTriggerEventData endEvent]
  -[HMDAnalyticsTriggerEventData presenceEvent]
  -[HMDAnalyticsTriggerEventData setPresenceEvent:]
  -[HMDAnalyticsTriggerEventData setLocationEvent:]
  -[HMDAnalyticsTriggerEventData locationEvent]
  -[HMDAnalyticsTriggerEventData setEndEvent:]
  -[HMDAnalyticsTriggerEventData setCalendarEvent:]
  -[HMDAnalyticsTriggerEventData calendarEvent]
  -[HMDAnalyticsTriggerEventData setSignificantTimeEvent:]
  -[HMDAnalyticsTriggerEventData setCharEvent:]
  -[HMDAnalyticsTriggerEventData setCharThresholdEvent:]
  -[HMDAnalyticsTriggerEventData setDurationEvent:]
  -[HMDAnalyticsTriggerEventData setThresholdEvent:]
  -[HMDAnalyticsTriggerEventData charEvent]
  -[HMDAnalyticsTriggerEventData charThresholdEvent]
  -[HMDAnalyticsTriggerEventData significantTimeEvent]
  -[HMDAnalyticsTriggerEventData thresholdEvent]
  -[HMDAnalyticsTriggerEventData durationEvent]


HMDAnalyticsAddEventTriggerData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long timestamp
 @property  HMDAnalyticsEventTriggerData *eventTrigger
 @property  int requestOrigin
 @property  unsigned int resultErrorCode

  // instance methods
  -[HMDAnalyticsAddEventTriggerData setEventTrigger:]
  -[HMDAnalyticsAddEventTriggerData .cxx_destruct]
  -[HMDAnalyticsAddEventTriggerData timestamp]
  -[HMDAnalyticsAddEventTriggerData setTimestamp:]
  -[HMDAnalyticsAddEventTriggerData eventTrigger]
  -[HMDAnalyticsAddEventTriggerData setRequestOrigin:]
  -[HMDAnalyticsAddEventTriggerData setResultErrorCode:]
  -[HMDAnalyticsAddEventTriggerData resultErrorCode]
  -[HMDAnalyticsAddEventTriggerData requestOrigin]


HMDAnalyticsEventTriggerExecutionSessionData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long timestamp
 @property  int executionState
 @property  int resultErrorCode
 @property  NSString *sessionID
 @property  NSArray *triggerEvents
 @property  NSArray *endEvents

  // instance methods
  -[HMDAnalyticsEventTriggerExecutionSessionData setSessionID:]
  -[HMDAnalyticsEventTriggerExecutionSessionData sessionID]
  -[HMDAnalyticsEventTriggerExecutionSessionData endEvents]
  -[HMDAnalyticsEventTriggerExecutionSessionData .cxx_destruct]
  -[HMDAnalyticsEventTriggerExecutionSessionData timestamp]
  -[HMDAnalyticsEventTriggerExecutionSessionData setTimestamp:]
  -[HMDAnalyticsEventTriggerExecutionSessionData setTriggerEvents:]
  -[HMDAnalyticsEventTriggerExecutionSessionData triggerEvents]
  -[HMDAnalyticsEventTriggerExecutionSessionData setResultErrorCode:]
  -[HMDAnalyticsEventTriggerExecutionSessionData resultErrorCode]
  -[HMDAnalyticsEventTriggerExecutionSessionData executionState]
  -[HMDAnalyticsEventTriggerExecutionSessionData setExecutionState:]
  -[HMDAnalyticsEventTriggerExecutionSessionData setEndEvents:]


HMDAnalyticsUpdateEventTriggerData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long timestamp
 @property  int requestOrigin
 @property  unsigned int resultErrorCode
 @property  int updateType

  // instance methods
  -[HMDAnalyticsUpdateEventTriggerData timestamp]
  -[HMDAnalyticsUpdateEventTriggerData updateType]
  -[HMDAnalyticsUpdateEventTriggerData setTimestamp:]
  -[HMDAnalyticsUpdateEventTriggerData setUpdateType:]
  -[HMDAnalyticsUpdateEventTriggerData setRequestOrigin:]
  -[HMDAnalyticsUpdateEventTriggerData setResultErrorCode:]
  -[HMDAnalyticsUpdateEventTriggerData resultErrorCode]
  -[HMDAnalyticsUpdateEventTriggerData requestOrigin]


HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long timestamp
 @property  unsigned long userResponseDelay
 @property  int resultErrorCode
 @property  NSString *sessionID

  // instance methods
  -[HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData setSessionID:]
  -[HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData sessionID]
  -[HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData .cxx_destruct]
  -[HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData timestamp]
  -[HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData setTimestamp:]
  -[HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData setResultErrorCode:]
  -[HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData resultErrorCode]
  -[HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData userResponseDelay]
  -[HMDAnalyticsEventTriggerUserConfirmationReceiverSessionData setUserResponseDelay:]


HMDAnalyticsEventTriggerUserConfirmationSendData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long timestamp
 @property  int resultErrorCode
 @property  NSString *sessionID

  // instance methods
  -[HMDAnalyticsEventTriggerUserConfirmationSendData setSessionID:]
  -[HMDAnalyticsEventTriggerUserConfirmationSendData sessionID]
  -[HMDAnalyticsEventTriggerUserConfirmationSendData .cxx_destruct]
  -[HMDAnalyticsEventTriggerUserConfirmationSendData timestamp]
  -[HMDAnalyticsEventTriggerUserConfirmationSendData setTimestamp:]
  -[HMDAnalyticsEventTriggerUserConfirmationSendData setResultErrorCode:]
  -[HMDAnalyticsEventTriggerUserConfirmationSendData resultErrorCode]


AWDHomeKitHomeConfiguration : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasNumAccessories
 @property  unsigned int numAccessories
 @property  BOOL hasNumServices
 @property  unsigned int numServices
 @property  BOOL hasNumUsers
 @property  unsigned int numUsers
 @property  BOOL hasNumAdmins
 @property  unsigned int numAdmins
 @property  BOOL hasNumScenes
 @property  unsigned int numScenes
 @property  BOOL hasNumTriggers
 @property  unsigned int numTriggers
 @property  BOOL hasNumEventTriggers
 @property  unsigned int numEventTriggers
 @property  BOOL hasNumTimerTriggers
 @property  unsigned int numTimerTriggers
 @property  BOOL hasNumAccessoryServiceGroups
 @property  unsigned int numAccessoryServiceGroups
 @property  BOOL hasNumRooms
 @property  unsigned int numRooms
 @property  BOOL hasNumZones
 @property  unsigned int numZones
 @property  BOOL hasIsResidentAvailable
 @property  BOOL isResidentAvailable
 @property  BOOL hasIsPrimaryResident
 @property  BOOL isPrimaryResident
 @property  BOOL hasNumBridgedAccessories
 @property  unsigned int numBridgedAccessories
 @property  BOOL hasNumNotCertifiedAccessories
 @property  unsigned int numNotCertifiedAccessories
 @property  BOOL hasNumCertifiedAccessories
 @property  unsigned int numCertifiedAccessories
 @property  NSMutableArray *eventTriggers
 @property  BOOL hasNumHAPAccessories
 @property  unsigned int numHAPAccessories
 @property  BOOL hasNumAppleMediaAccessories
 @property  unsigned int numAppleMediaAccessories
 @property  BOOL hasNumWholeHouseAudioAccessories
 @property  unsigned int numWholeHouseAudioAccessories
 @property  BOOL hasNumAppleAudioAccessories
 @property  unsigned int numAppleAudioAccessories
 @property  BOOL hasNumAppleTVAccessories
 @property  unsigned int numAppleTVAccessories
 @property  BOOL hasNumCameraAccessories
 @property  unsigned int numCameraAccessories
 @property  BOOL hasNumMediaSystems
 @property  unsigned int numMediaSystems
 @property  BOOL hasNumTargetControllers
 @property  unsigned int numTargetControllers
 @property  BOOL hasNumCertifiedTargetControllers
 @property  unsigned int numCertifiedTargetControllers
 @property  BOOL hasNumBridgedTargetControllers
 @property  unsigned int numBridgedTargetControllers
 @property  BOOL hasNumCertifiedBridgedTargetControllers
 @property  unsigned int numCertifiedBridgedTargetControllers
 @property  BOOL hasNumConfiguredScenes
 @property  unsigned int numConfiguredScenes
 @property  BOOL hasIsOwner
 @property  BOOL isOwner
 @property  BOOL hasNumResidentsEnabled
 @property  unsigned int numResidentsEnabled
 @property  BOOL hasPrimaryReportingDevice
 @property  BOOL primaryReportingDevice
 @property  BOOL hasNumTelevisionAccessories
 @property  unsigned int numTelevisionAccessories
 @property  BOOL hasNetworkProtectionStatus
 @property  int networkProtectionStatus
 @property  BOOL hasNumAccessoriesWiFiPPSKCredential
 @property  unsigned int numAccessoriesWiFiPPSKCredential
 @property  BOOL hasNumAccessoriesNetworkProtectionAutoFullAccess
 @property  unsigned int numAccessoriesNetworkProtectionAutoFullAccess
 @property  BOOL hasNumAccessoriesNetworkProtectionAutoProtectedMainLAN
 @property  unsigned int numAccessoriesNetworkProtectionAutoProtectedMainLAN
 @property  BOOL hasNumAccessoriesNetworkProtectionAutoProtectedHomeKitLAN
 @property  unsigned int numAccessoriesNetworkProtectionAutoProtectedHomeKitLAN
 @property  BOOL hasNumAccessoriesNetworkProtectionFullAccess
 @property  unsigned int numAccessoriesNetworkProtectionFullAccess
 @property  BOOL hasNumAccessoriesNetworkProtectionHomeKitOnly
 @property  unsigned int numAccessoriesNetworkProtectionHomeKitOnly
 @property  BOOL hasNumAccessoriesNetworkProtectionUnprotected
 @property  unsigned int numAccessoriesNetworkProtectionUnprotected
 @property  BOOL hasNumShortcuts
 @property  unsigned int numShortcuts
 @property  NSMutableArray *homeKitMultiUserSettings
 @property  BOOL hasNumHAPIPAccessories
 @property  unsigned int numHAPIPAccessories
 @property  BOOL hasNumHAPBTAccessories
 @property  unsigned int numHAPBTAccessories
 @property  BOOL hasNumHAPBatteryServiceAccessories
 @property  unsigned int numHAPBatteryServiceAccessories
 @property  BOOL hasNumCameraAccessoriesSupportRecording
 @property  unsigned int numCameraAccessoriesSupportRecording
 @property  NSMutableArray *hapServicesLists
 @property  NSMutableArray *primaryHAPServicesLists
 @property  NSMutableArray *hapServicesListCertifieds
 @property  NSMutableArray *primaryHAPServicesListCertifieds
 @property  BOOL hasNumHAPSpeakerServiceAccessories
 @property  unsigned int numHAPSpeakerServiceAccessories
 @property  BOOL hasNumPrimaryHAPSpeakerServiceAccessories
 @property  unsigned int numPrimaryHAPSpeakerServiceAccessories
 @property  BOOL hasNumTriggerOwnedConfiguredScenes
 @property  unsigned int numTriggerOwnedConfiguredScenes
 @property  BOOL hasNumCameraAccessoriesRecordingEnabled
 @property  unsigned int numCameraAccessoriesRecordingEnabled
 @property  BOOL hasNumCameraAccessoriesRecordingAudioEnabled
 @property  unsigned int numCameraAccessoriesRecordingAudioEnabled
 @property  BOOL hasNumCameraAccessoriesSmartBulletinNotificationEnabled
 @property  unsigned int numCameraAccessoriesSmartBulletinNotificationEnabled
 @property  BOOL hasNumCameraAccessoriesReachabilityNotificationEnabled
 @property  unsigned int numCameraAccessoriesReachabilityNotificationEnabled
 @property  BOOL hasNumCameraAccessoriesWithActivityZonesEnabled
 @property  unsigned int numCameraAccessoriesWithActivityZonesEnabled
 @property  BOOL hasEnabledResidentsDeviceCapabilities
 @property  unsigned int enabledResidentsDeviceCapabilities
 @property  BOOL hasNumLightProfilesWithNaturalLightingSupported
 @property  unsigned int numLightProfilesWithNaturalLightingSupported
 @property  BOOL hasNumLightProfilesWithNaturalLightingEnabled
 @property  unsigned int numLightProfilesWithNaturalLightingEnabled
 @property  BOOL hasNumLightProfilesWithNaturalLightingUsed
 @property  unsigned int numLightProfilesWithNaturalLightingUsed
 @property  BOOL hasNumNoeBRs
 @property  unsigned int numNoeBRs
 @property  BOOL hasNumNoeAccessories
 @property  unsigned int numNoeAccessories
 @property  BOOL hasNumNoeFullCap
 @property  unsigned int numNoeFullCap
 @property  BOOL hasNumNoeSleepCap
 @property  unsigned int numNoeSleepCap
 @property  BOOL hasNumNoeMinCap
 @property  unsigned int numNoeMinCap
 @property  BOOL hasNumNoeRoutCap
 @property  unsigned int numNoeRoutCap
 @property  BOOL hasNumNoeBRCap
 @property  unsigned int numNoeBRCap
 @property  BOOL hasAutoThirdPartyJetEnable
 @property  BOOL autoThirdPartyJetEnable
 @property  BOOL hasNumHAPBLEAccessoriesSupportJet
 @property  unsigned int numHAPBLEAccessoriesSupportJet
 @property  BOOL hasNumHAPIPAccessoriesSupportJet
 @property  unsigned int numHAPIPAccessoriesSupportJet
 @property  BOOL hasNumHAPNoeAccessoriesSupportJet
 @property  unsigned int numHAPNoeAccessoriesSupportJet
 @property  BOOL hasHomeCreationCohortWeek
 @property  int homeCreationCohortWeek
 @property  BOOL hasFirstHAPAccessoryAddedCohortWeek
 @property  int firstHAPAccessoryAddedCohortWeek
 @property  BOOL hasCurrentMediaAccessoryFallbackMediaUserType
 @property  int currentMediaAccessoryFallbackMediaUserType
 @property  BOOL hasNumPoeCount
 @property  int numPoeCount
 @property  BOOL hasNumPoe2Count
 @property  int numPoe2Count
 @property  BOOL hasNumMoe1Accessories
 @property  unsigned int numMoe1Accessories
 @property  BOOL hasNumMoe2Accessories
 @property  unsigned int numMoe2Accessories
 @property  BOOL hasHomepodSynchLatency
 @property  unsigned int homepodSynchLatency

  // class methods
  +[AWDHomeKitHomeConfiguration eventTriggersType]
  +[AWDHomeKitHomeConfiguration homeKitMultiUserSettingsType]
  +[AWDHomeKitHomeConfiguration hapServicesListType]
  +[AWDHomeKitHomeConfiguration primaryHAPServicesListType]
  +[AWDHomeKitHomeConfiguration hapServicesListCertifiedType]
  +[AWDHomeKitHomeConfiguration primaryHAPServicesListCertifiedType]

  // instance methods
  -[AWDHomeKitHomeConfiguration copyWithZone:]
  -[AWDHomeKitHomeConfiguration isOwner]
  -[AWDHomeKitHomeConfiguration .cxx_destruct]
  -[AWDHomeKitHomeConfiguration setIsOwner:]
  -[AWDHomeKitHomeConfiguration readFrom:]
  -[AWDHomeKitHomeConfiguration writeTo:]
  -[AWDHomeKitHomeConfiguration isEqual:]
  -[AWDHomeKitHomeConfiguration copyTo:]
  -[AWDHomeKitHomeConfiguration dictionaryRepresentation]
  -[AWDHomeKitHomeConfiguration mergeFrom:]
  -[AWDHomeKitHomeConfiguration setHasIsOwner:]
  -[AWDHomeKitHomeConfiguration hasIsOwner]
  -[AWDHomeKitHomeConfiguration isResidentAvailable]
  -[AWDHomeKitHomeConfiguration setNumUsers:]
  -[AWDHomeKitHomeConfiguration setHasNumUsers:]
  -[AWDHomeKitHomeConfiguration hasNumUsers]
  -[AWDHomeKitHomeConfiguration numUsers]
  -[AWDHomeKitHomeConfiguration setIsResidentAvailable:]
  -[AWDHomeKitHomeConfiguration setHasIsResidentAvailable:]
  -[AWDHomeKitHomeConfiguration hasIsResidentAvailable]
  -[AWDHomeKitHomeConfiguration numHAPAccessories]
  -[AWDHomeKitHomeConfiguration numCameraAccessories]
  -[AWDHomeKitHomeConfiguration numCameraAccessoriesRecordingEnabled]
  -[AWDHomeKitHomeConfiguration enabledResidentsDeviceCapabilities]
  -[AWDHomeKitHomeConfiguration setNumAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumAccessories]
  -[AWDHomeKitHomeConfiguration numAccessories]
  -[AWDHomeKitHomeConfiguration addEventTriggers:]
  -[AWDHomeKitHomeConfiguration addHomeKitMultiUserSettings:]
  -[AWDHomeKitHomeConfiguration addHapServicesList:]
  -[AWDHomeKitHomeConfiguration addPrimaryHAPServicesList:]
  -[AWDHomeKitHomeConfiguration addHapServicesListCertified:]
  -[AWDHomeKitHomeConfiguration addPrimaryHAPServicesListCertified:]
  -[AWDHomeKitHomeConfiguration eventTriggersCount]
  -[AWDHomeKitHomeConfiguration clearEventTriggers]
  -[AWDHomeKitHomeConfiguration eventTriggersAtIndex:]
  -[AWDHomeKitHomeConfiguration homeKitMultiUserSettingsCount]
  -[AWDHomeKitHomeConfiguration clearHomeKitMultiUserSettings]
  -[AWDHomeKitHomeConfiguration homeKitMultiUserSettingsAtIndex:]
  -[AWDHomeKitHomeConfiguration hapServicesListsCount]
  -[AWDHomeKitHomeConfiguration clearHapServicesLists]
  -[AWDHomeKitHomeConfiguration hapServicesListAtIndex:]
  -[AWDHomeKitHomeConfiguration primaryHAPServicesListsCount]
  -[AWDHomeKitHomeConfiguration clearPrimaryHAPServicesLists]
  -[AWDHomeKitHomeConfiguration primaryHAPServicesListAtIndex:]
  -[AWDHomeKitHomeConfiguration hapServicesListCertifiedsCount]
  -[AWDHomeKitHomeConfiguration clearHapServicesListCertifieds]
  -[AWDHomeKitHomeConfiguration hapServicesListCertifiedAtIndex:]
  -[AWDHomeKitHomeConfiguration primaryHAPServicesListCertifiedsCount]
  -[AWDHomeKitHomeConfiguration clearPrimaryHAPServicesListCertifieds]
  -[AWDHomeKitHomeConfiguration primaryHAPServicesListCertifiedAtIndex:]
  -[AWDHomeKitHomeConfiguration setNumServices:]
  -[AWDHomeKitHomeConfiguration setHasNumServices:]
  -[AWDHomeKitHomeConfiguration hasNumServices]
  -[AWDHomeKitHomeConfiguration setNumAdmins:]
  -[AWDHomeKitHomeConfiguration setHasNumAdmins:]
  -[AWDHomeKitHomeConfiguration hasNumAdmins]
  -[AWDHomeKitHomeConfiguration setNumScenes:]
  -[AWDHomeKitHomeConfiguration setHasNumScenes:]
  -[AWDHomeKitHomeConfiguration hasNumScenes]
  -[AWDHomeKitHomeConfiguration setNumTriggers:]
  -[AWDHomeKitHomeConfiguration setHasNumTriggers:]
  -[AWDHomeKitHomeConfiguration hasNumTriggers]
  -[AWDHomeKitHomeConfiguration setNumEventTriggers:]
  -[AWDHomeKitHomeConfiguration setHasNumEventTriggers:]
  -[AWDHomeKitHomeConfiguration hasNumEventTriggers]
  -[AWDHomeKitHomeConfiguration setNumTimerTriggers:]
  -[AWDHomeKitHomeConfiguration setHasNumTimerTriggers:]
  -[AWDHomeKitHomeConfiguration hasNumTimerTriggers]
  -[AWDHomeKitHomeConfiguration setNumAccessoryServiceGroups:]
  -[AWDHomeKitHomeConfiguration setHasNumAccessoryServiceGroups:]
  -[AWDHomeKitHomeConfiguration hasNumAccessoryServiceGroups]
  -[AWDHomeKitHomeConfiguration setNumRooms:]
  -[AWDHomeKitHomeConfiguration setHasNumRooms:]
  -[AWDHomeKitHomeConfiguration hasNumRooms]
  -[AWDHomeKitHomeConfiguration setNumZones:]
  -[AWDHomeKitHomeConfiguration setHasNumZones:]
  -[AWDHomeKitHomeConfiguration hasNumZones]
  -[AWDHomeKitHomeConfiguration setIsPrimaryResident:]
  -[AWDHomeKitHomeConfiguration setHasIsPrimaryResident:]
  -[AWDHomeKitHomeConfiguration hasIsPrimaryResident]
  -[AWDHomeKitHomeConfiguration setNumBridgedAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumBridgedAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumBridgedAccessories]
  -[AWDHomeKitHomeConfiguration setNumNotCertifiedAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumNotCertifiedAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumNotCertifiedAccessories]
  -[AWDHomeKitHomeConfiguration setNumCertifiedAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumCertifiedAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumCertifiedAccessories]
  -[AWDHomeKitHomeConfiguration setNumHAPAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumHAPAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumHAPAccessories]
  -[AWDHomeKitHomeConfiguration setNumAppleMediaAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumAppleMediaAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumAppleMediaAccessories]
  -[AWDHomeKitHomeConfiguration setNumWholeHouseAudioAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumWholeHouseAudioAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumWholeHouseAudioAccessories]
  -[AWDHomeKitHomeConfiguration setNumAppleAudioAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumAppleAudioAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumAppleAudioAccessories]
  -[AWDHomeKitHomeConfiguration setNumAppleTVAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumAppleTVAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumAppleTVAccessories]
  -[AWDHomeKitHomeConfiguration setNumCameraAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumCameraAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumCameraAccessories]
  -[AWDHomeKitHomeConfiguration setNumMediaSystems:]
  -[AWDHomeKitHomeConfiguration setHasNumMediaSystems:]
  -[AWDHomeKitHomeConfiguration hasNumMediaSystems]
  -[AWDHomeKitHomeConfiguration setNumTargetControllers:]
  -[AWDHomeKitHomeConfiguration setHasNumTargetControllers:]
  -[AWDHomeKitHomeConfiguration hasNumTargetControllers]
  -[AWDHomeKitHomeConfiguration setNumCertifiedTargetControllers:]
  -[AWDHomeKitHomeConfiguration setHasNumCertifiedTargetControllers:]
  -[AWDHomeKitHomeConfiguration hasNumCertifiedTargetControllers]
  -[AWDHomeKitHomeConfiguration setNumBridgedTargetControllers:]
  -[AWDHomeKitHomeConfiguration setHasNumBridgedTargetControllers:]
  -[AWDHomeKitHomeConfiguration hasNumBridgedTargetControllers]
  -[AWDHomeKitHomeConfiguration setNumCertifiedBridgedTargetControllers:]
  -[AWDHomeKitHomeConfiguration setHasNumCertifiedBridgedTargetControllers:]
  -[AWDHomeKitHomeConfiguration hasNumCertifiedBridgedTargetControllers]
  -[AWDHomeKitHomeConfiguration setNumConfiguredScenes:]
  -[AWDHomeKitHomeConfiguration setHasNumConfiguredScenes:]
  -[AWDHomeKitHomeConfiguration hasNumConfiguredScenes]
  -[AWDHomeKitHomeConfiguration setNumResidentsEnabled:]
  -[AWDHomeKitHomeConfiguration setHasNumResidentsEnabled:]
  -[AWDHomeKitHomeConfiguration hasNumResidentsEnabled]
  -[AWDHomeKitHomeConfiguration setPrimaryReportingDevice:]
  -[AWDHomeKitHomeConfiguration setHasPrimaryReportingDevice:]
  -[AWDHomeKitHomeConfiguration hasPrimaryReportingDevice]
  -[AWDHomeKitHomeConfiguration setNumTelevisionAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumTelevisionAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumTelevisionAccessories]
  -[AWDHomeKitHomeConfiguration networkProtectionStatus]
  -[AWDHomeKitHomeConfiguration setNetworkProtectionStatus:]
  -[AWDHomeKitHomeConfiguration setHasNetworkProtectionStatus:]
  -[AWDHomeKitHomeConfiguration hasNetworkProtectionStatus]
  -[AWDHomeKitHomeConfiguration networkProtectionStatusAsString:]
  -[AWDHomeKitHomeConfiguration StringAsNetworkProtectionStatus:]
  -[AWDHomeKitHomeConfiguration setNumAccessoriesWiFiPPSKCredential:]
  -[AWDHomeKitHomeConfiguration setHasNumAccessoriesWiFiPPSKCredential:]
  -[AWDHomeKitHomeConfiguration hasNumAccessoriesWiFiPPSKCredential]
  -[AWDHomeKitHomeConfiguration setNumAccessoriesNetworkProtectionAutoFullAccess:]
  -[AWDHomeKitHomeConfiguration setHasNumAccessoriesNetworkProtectionAutoFullAccess:]
  -[AWDHomeKitHomeConfiguration hasNumAccessoriesNetworkProtectionAutoFullAccess]
  -[AWDHomeKitHomeConfiguration setNumAccessoriesNetworkProtectionAutoProtectedMainLAN:]
  -[AWDHomeKitHomeConfiguration setHasNumAccessoriesNetworkProtectionAutoProtectedMainLAN:]
  -[AWDHomeKitHomeConfiguration hasNumAccessoriesNetworkProtectionAutoProtectedMainLAN]
  -[AWDHomeKitHomeConfiguration setNumAccessoriesNetworkProtectionAutoProtectedHomeKitLAN:]
  -[AWDHomeKitHomeConfiguration setHasNumAccessoriesNetworkProtectionAutoProtectedHomeKitLAN:]
  -[AWDHomeKitHomeConfiguration hasNumAccessoriesNetworkProtectionAutoProtectedHomeKitLAN]
  -[AWDHomeKitHomeConfiguration setNumAccessoriesNetworkProtectionFullAccess:]
  -[AWDHomeKitHomeConfiguration setHasNumAccessoriesNetworkProtectionFullAccess:]
  -[AWDHomeKitHomeConfiguration hasNumAccessoriesNetworkProtectionFullAccess]
  -[AWDHomeKitHomeConfiguration setNumAccessoriesNetworkProtectionHomeKitOnly:]
  -[AWDHomeKitHomeConfiguration setHasNumAccessoriesNetworkProtectionHomeKitOnly:]
  -[AWDHomeKitHomeConfiguration hasNumAccessoriesNetworkProtectionHomeKitOnly]
  -[AWDHomeKitHomeConfiguration setNumAccessoriesNetworkProtectionUnprotected:]
  -[AWDHomeKitHomeConfiguration setHasNumAccessoriesNetworkProtectionUnprotected:]
  -[AWDHomeKitHomeConfiguration hasNumAccessoriesNetworkProtectionUnprotected]
  -[AWDHomeKitHomeConfiguration setNumShortcuts:]
  -[AWDHomeKitHomeConfiguration setHasNumShortcuts:]
  -[AWDHomeKitHomeConfiguration hasNumShortcuts]
  -[AWDHomeKitHomeConfiguration setNumHAPIPAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumHAPIPAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumHAPIPAccessories]
  -[AWDHomeKitHomeConfiguration setNumHAPBTAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumHAPBTAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumHAPBTAccessories]
  -[AWDHomeKitHomeConfiguration setNumHAPBatteryServiceAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumHAPBatteryServiceAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumHAPBatteryServiceAccessories]
  -[AWDHomeKitHomeConfiguration setNumCameraAccessoriesSupportRecording:]
  -[AWDHomeKitHomeConfiguration setHasNumCameraAccessoriesSupportRecording:]
  -[AWDHomeKitHomeConfiguration hasNumCameraAccessoriesSupportRecording]
  -[AWDHomeKitHomeConfiguration setNumHAPSpeakerServiceAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumHAPSpeakerServiceAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumHAPSpeakerServiceAccessories]
  -[AWDHomeKitHomeConfiguration setNumPrimaryHAPSpeakerServiceAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumPrimaryHAPSpeakerServiceAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumPrimaryHAPSpeakerServiceAccessories]
  -[AWDHomeKitHomeConfiguration setNumTriggerOwnedConfiguredScenes:]
  -[AWDHomeKitHomeConfiguration setHasNumTriggerOwnedConfiguredScenes:]
  -[AWDHomeKitHomeConfiguration hasNumTriggerOwnedConfiguredScenes]
  -[AWDHomeKitHomeConfiguration setNumCameraAccessoriesRecordingEnabled:]
  -[AWDHomeKitHomeConfiguration setHasNumCameraAccessoriesRecordingEnabled:]
  -[AWDHomeKitHomeConfiguration hasNumCameraAccessoriesRecordingEnabled]
  -[AWDHomeKitHomeConfiguration setNumCameraAccessoriesRecordingAudioEnabled:]
  -[AWDHomeKitHomeConfiguration setHasNumCameraAccessoriesRecordingAudioEnabled:]
  -[AWDHomeKitHomeConfiguration hasNumCameraAccessoriesRecordingAudioEnabled]
  -[AWDHomeKitHomeConfiguration setNumCameraAccessoriesSmartBulletinNotificationEnabled:]
  -[AWDHomeKitHomeConfiguration setHasNumCameraAccessoriesSmartBulletinNotificationEnabled:]
  -[AWDHomeKitHomeConfiguration hasNumCameraAccessoriesSmartBulletinNotificationEnabled]
  -[AWDHomeKitHomeConfiguration setNumCameraAccessoriesReachabilityNotificationEnabled:]
  -[AWDHomeKitHomeConfiguration setHasNumCameraAccessoriesReachabilityNotificationEnabled:]
  -[AWDHomeKitHomeConfiguration hasNumCameraAccessoriesReachabilityNotificationEnabled]
  -[AWDHomeKitHomeConfiguration setNumCameraAccessoriesWithActivityZonesEnabled:]
  -[AWDHomeKitHomeConfiguration setHasNumCameraAccessoriesWithActivityZonesEnabled:]
  -[AWDHomeKitHomeConfiguration hasNumCameraAccessoriesWithActivityZonesEnabled]
  -[AWDHomeKitHomeConfiguration setEnabledResidentsDeviceCapabilities:]
  -[AWDHomeKitHomeConfiguration setHasEnabledResidentsDeviceCapabilities:]
  -[AWDHomeKitHomeConfiguration hasEnabledResidentsDeviceCapabilities]
  -[AWDHomeKitHomeConfiguration setNumLightProfilesWithNaturalLightingSupported:]
  -[AWDHomeKitHomeConfiguration setHasNumLightProfilesWithNaturalLightingSupported:]
  -[AWDHomeKitHomeConfiguration hasNumLightProfilesWithNaturalLightingSupported]
  -[AWDHomeKitHomeConfiguration setNumLightProfilesWithNaturalLightingEnabled:]
  -[AWDHomeKitHomeConfiguration setHasNumLightProfilesWithNaturalLightingEnabled:]
  -[AWDHomeKitHomeConfiguration hasNumLightProfilesWithNaturalLightingEnabled]
  -[AWDHomeKitHomeConfiguration setNumLightProfilesWithNaturalLightingUsed:]
  -[AWDHomeKitHomeConfiguration setHasNumLightProfilesWithNaturalLightingUsed:]
  -[AWDHomeKitHomeConfiguration hasNumLightProfilesWithNaturalLightingUsed]
  -[AWDHomeKitHomeConfiguration setNumNoeBRs:]
  -[AWDHomeKitHomeConfiguration setHasNumNoeBRs:]
  -[AWDHomeKitHomeConfiguration hasNumNoeBRs]
  -[AWDHomeKitHomeConfiguration setNumNoeAccessories:]
  -[AWDHomeKitHomeConfiguration setHasNumNoeAccessories:]
  -[AWDHomeKitHomeConfiguration hasNumNoeAccessories]
  -[AWDHomeKitHomeConfiguration setNumNoeFullCap:]
  -[AWDHomeKitHomeConfiguration setHasNumNoeFullCap:]
  -[AWDHomeKitHomeConfiguration hasNumNoeFullCap]
  -[AWDHomeKitHomeConfiguration setNumNoeSleepCap:]
  -[AWDHomeKitHomeConfiguration setHasNumNoeSleepCap:]
  -[AWDHomeKitHomeConfiguration hasNumNoeSleepCap]
  -[AWDHomeKitHomeConfiguration setNumNoeMinCap:]
  -[AWDHomeKitHomeConfiguration setHasNumNoeMinCap:]
  -[AWDHomeKitHomeConfiguration hasNumNoeMinCap]
  -[AWDHomeKitHomeConfiguration setNumNoeRoutCap:]
  -[AWDHomeKitHomeConfiguration setHasNumNoeRoutCap:]
  -[AWDHomeKitHomeConfiguration hasNumNoeRoutCap]
  -[AWDHomeKitHomeConfiguration setNumNoeBRCap:]
  -[AWDHomeKitHomeConfiguration setHasNumNoeBRCap:]
  -[AWDHomeKitHomeConfiguration hasNumNoeBRCap]
  -[AWDHomeKitHomeConfiguration setAutoThirdPartyJetEnable:]
  -[AWDHomeKitHomeConfiguration setHasAutoThirdPartyJetEnable:]
  -[AWDHomeKitHomeConfiguration hasAutoThirdPartyJetEnable]
  -[AWDHomeKitHomeConfiguration setNumHAPBLEAccessoriesSupportJet:]
  -[AWDHomeKitHomeConfiguration setHasNumHAPBLEAccessoriesSupportJet:]
  -[AWDHomeKitHomeConfiguration hasNumHAPBLEAccessoriesSupportJet]
  -[AWDHomeKitHomeConfiguration setNumHAPIPAccessoriesSupportJet:]
  -[AWDHomeKitHomeConfiguration setHasNumHAPIPAccessoriesSupportJet:]
  -[AWDHomeKitHomeConfiguration hasNumHAPIPAccessoriesSupportJet]
  -[AWDHomeKitHomeConfiguration setNumHAPNoeAccessoriesSupportJet:]
  -[AWDHomeKitHomeConfiguration setHasNumHAPNoeAccessoriesSupportJet:]
  -[AWDHomeKitHomeConfiguration hasNumHAPNoeAccessoriesSupportJet]
  -[AWDHomeKitHomeConfiguration setHomeCreationCohortWeek:]
  -[AWDHomeKitHomeConfiguration setHasHomeCreationCohortWeek:]
  -[AWDHomeKitHomeConfiguration hasHomeCreationCohortWeek]
  -[AWDHomeKitHomeConfiguration setFirstHAPAccessoryAddedCohortWeek:]
  -[AWDHomeKitHomeConfiguration setHasFirstHAPAccessoryAddedCohortWeek:]
  -[AWDHomeKitHomeConfiguration hasFirstHAPAccessoryAddedCohortWeek]
  -[AWDHomeKitHomeConfiguration currentMediaAccessoryFallbackMediaUserType]
  -[AWDHomeKitHomeConfiguration setCurrentMediaAccessoryFallbackMediaUserType:]
  -[AWDHomeKitHomeConfiguration setHasCurrentMediaAccessoryFallbackMediaUserType:]
  -[AWDHomeKitHomeConfiguration hasCurrentMediaAccessoryFallbackMediaUserType]
  -[AWDHomeKitHomeConfiguration currentMediaAccessoryFallbackMediaUserTypeAsString:]
  -[AWDHomeKitHomeConfiguration StringAsCurrentMediaAccessoryFallbackMediaUserType:]
  -[AWDHomeKitHomeConfiguration setNumPoeCount:]
  -[AWDHomeKitHomeConfiguration setHasNumPoeCount:]
  -[AWDHomeKitHomeConfiguration hasNumPoeCount]
  -[AWDHomeKitHomeConfiguration setNumPoe2Count:]
  -[AWDHomeKitHomeConfiguration setHasNumPoe2Count:]
  -[AWDHomeKitHomeConfiguration hasNumPoe2Count]
  -[AWDHomeKitHomeConfiguration setNumMoe1Accessories:]
  -[AWDHomeKitHomeConfiguration setHasNumMoe1Accessories:]
  -[AWDHomeKitHomeConfiguration hasNumMoe1Accessories]
  -[AWDHomeKitHomeConfiguration setNumMoe2Accessories:]
  -[AWDHomeKitHomeConfiguration setHasNumMoe2Accessories:]
  -[AWDHomeKitHomeConfiguration hasNumMoe2Accessories]
  -[AWDHomeKitHomeConfiguration setHomepodSynchLatency:]
  -[AWDHomeKitHomeConfiguration setHasHomepodSynchLatency:]
  -[AWDHomeKitHomeConfiguration hasHomepodSynchLatency]
  -[AWDHomeKitHomeConfiguration numServices]
  -[AWDHomeKitHomeConfiguration numAdmins]
  -[AWDHomeKitHomeConfiguration numScenes]
  -[AWDHomeKitHomeConfiguration numTriggers]
  -[AWDHomeKitHomeConfiguration numEventTriggers]
  -[AWDHomeKitHomeConfiguration numTimerTriggers]
  -[AWDHomeKitHomeConfiguration numAccessoryServiceGroups]
  -[AWDHomeKitHomeConfiguration numRooms]
  -[AWDHomeKitHomeConfiguration numZones]
  -[AWDHomeKitHomeConfiguration isPrimaryResident]
  -[AWDHomeKitHomeConfiguration numBridgedAccessories]
  -[AWDHomeKitHomeConfiguration numNotCertifiedAccessories]
  -[AWDHomeKitHomeConfiguration numCertifiedAccessories]
  -[AWDHomeKitHomeConfiguration eventTriggers]
  -[AWDHomeKitHomeConfiguration setEventTriggers:]
  -[AWDHomeKitHomeConfiguration numAppleMediaAccessories]
  -[AWDHomeKitHomeConfiguration numWholeHouseAudioAccessories]
  -[AWDHomeKitHomeConfiguration numAppleAudioAccessories]
  -[AWDHomeKitHomeConfiguration numAppleTVAccessories]
  -[AWDHomeKitHomeConfiguration numMediaSystems]
  -[AWDHomeKitHomeConfiguration numTargetControllers]
  -[AWDHomeKitHomeConfiguration numCertifiedTargetControllers]
  -[AWDHomeKitHomeConfiguration numBridgedTargetControllers]
  -[AWDHomeKitHomeConfiguration numCertifiedBridgedTargetControllers]
  -[AWDHomeKitHomeConfiguration numConfiguredScenes]
  -[AWDHomeKitHomeConfiguration numResidentsEnabled]
  -[AWDHomeKitHomeConfiguration primaryReportingDevice]
  -[AWDHomeKitHomeConfiguration numTelevisionAccessories]
  -[AWDHomeKitHomeConfiguration numAccessoriesWiFiPPSKCredential]
  -[AWDHomeKitHomeConfiguration numAccessoriesNetworkProtectionAutoFullAccess]
  -[AWDHomeKitHomeConfiguration numAccessoriesNetworkProtectionAutoProtectedMainLAN]
  -[AWDHomeKitHomeConfiguration numAccessoriesNetworkProtectionAutoProtectedHomeKitLAN]
  -[AWDHomeKitHomeConfiguration numAccessoriesNetworkProtectionFullAccess]
  -[AWDHomeKitHomeConfiguration numAccessoriesNetworkProtectionHomeKitOnly]
  -[AWDHomeKitHomeConfiguration numAccessoriesNetworkProtectionUnprotected]
  -[AWDHomeKitHomeConfiguration numShortcuts]
  -[AWDHomeKitHomeConfiguration homeKitMultiUserSettings]
  -[AWDHomeKitHomeConfiguration setHomeKitMultiUserSettings:]
  -[AWDHomeKitHomeConfiguration numHAPIPAccessories]
  -[AWDHomeKitHomeConfiguration numHAPBTAccessories]
  -[AWDHomeKitHomeConfiguration numHAPBatteryServiceAccessories]
  -[AWDHomeKitHomeConfiguration numCameraAccessoriesSupportRecording]
  -[AWDHomeKitHomeConfiguration hapServicesLists]
  -[AWDHomeKitHomeConfiguration setHapServicesLists:]
  -[AWDHomeKitHomeConfiguration primaryHAPServicesLists]
  -[AWDHomeKitHomeConfiguration setPrimaryHAPServicesLists:]
  -[AWDHomeKitHomeConfiguration hapServicesListCertifieds]
  -[AWDHomeKitHomeConfiguration setHapServicesListCertifieds:]
  -[AWDHomeKitHomeConfiguration primaryHAPServicesListCertifieds]
  -[AWDHomeKitHomeConfiguration setPrimaryHAPServicesListCertifieds:]
  -[AWDHomeKitHomeConfiguration numHAPSpeakerServiceAccessories]
  -[AWDHomeKitHomeConfiguration numPrimaryHAPSpeakerServiceAccessories]
  -[AWDHomeKitHomeConfiguration numTriggerOwnedConfiguredScenes]
  -[AWDHomeKitHomeConfiguration numCameraAccessoriesRecordingAudioEnabled]
  -[AWDHomeKitHomeConfiguration numCameraAccessoriesSmartBulletinNotificationEnabled]
  -[AWDHomeKitHomeConfiguration numCameraAccessoriesReachabilityNotificationEnabled]
  -[AWDHomeKitHomeConfiguration numCameraAccessoriesWithActivityZonesEnabled]
  -[AWDHomeKitHomeConfiguration numLightProfilesWithNaturalLightingSupported]
  -[AWDHomeKitHomeConfiguration numLightProfilesWithNaturalLightingEnabled]
  -[AWDHomeKitHomeConfiguration numLightProfilesWithNaturalLightingUsed]
  -[AWDHomeKitHomeConfiguration numNoeBRs]
  -[AWDHomeKitHomeConfiguration numNoeAccessories]
  -[AWDHomeKitHomeConfiguration numNoeFullCap]
  -[AWDHomeKitHomeConfiguration numNoeSleepCap]
  -[AWDHomeKitHomeConfiguration numNoeMinCap]
  -[AWDHomeKitHomeConfiguration numNoeRoutCap]
  -[AWDHomeKitHomeConfiguration numNoeBRCap]
  -[AWDHomeKitHomeConfiguration autoThirdPartyJetEnable]
  -[AWDHomeKitHomeConfiguration numHAPBLEAccessoriesSupportJet]
  -[AWDHomeKitHomeConfiguration numHAPIPAccessoriesSupportJet]
  -[AWDHomeKitHomeConfiguration numHAPNoeAccessoriesSupportJet]
  -[AWDHomeKitHomeConfiguration homeCreationCohortWeek]
  -[AWDHomeKitHomeConfiguration firstHAPAccessoryAddedCohortWeek]
  -[AWDHomeKitHomeConfiguration numPoeCount]
  -[AWDHomeKitHomeConfiguration numPoe2Count]
  -[AWDHomeKitHomeConfiguration numMoe1Accessories]
  -[AWDHomeKitHomeConfiguration numMoe2Accessories]
  -[AWDHomeKitHomeConfiguration homepodSynchLatency]


HMDApplicationVendorIDStoreValue : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSData *vendorIdSha1
 @property  NSString *applicationBundleId
 @property  NSString *companionAppBundleId
 @property  BOOL spiClient

  // class methods
  +[HMDApplicationVendorIDStoreValue supportsSecureCoding]

  // instance methods
  -[HMDApplicationVendorIDStoreValue .cxx_destruct]
  -[HMDApplicationVendorIDStoreValue encodeWithCoder:]
  -[HMDApplicationVendorIDStoreValue initWithCoder:]
  -[HMDApplicationVendorIDStoreValue vendorIdSha1]
  -[HMDApplicationVendorIDStoreValue applicationBundleId]
  -[HMDApplicationVendorIDStoreValue companionAppBundleId]
  -[HMDApplicationVendorIDStoreValue spiClient]
  -[HMDApplicationVendorIDStoreValue initWithVendorIDSha1:applicationBundleId:companionAppBundleId:spiClient:]


HMDApplicationVendorIDStore : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSMutableDictionary *applicationVendorIdMapping
 @property  NSMutableDictionary *applicationMachUUIDMapping
 @property  NSObject<OS_dispatch_queue> *clientQueue

  // class methods
  +[HMDApplicationVendorIDStore supportsSecureCoding]
  +[HMDApplicationVendorIDStore sharedStore]

  // instance methods
  -[HMDApplicationVendorIDStore _save]
  -[HMDApplicationVendorIDStore init]
  -[HMDApplicationVendorIDStore .cxx_destruct]
  -[HMDApplicationVendorIDStore encodeWithCoder:]
  -[HMDApplicationVendorIDStore clientQueue]
  -[HMDApplicationVendorIDStore initWithCoder:]
  -[HMDApplicationVendorIDStore vendorIDForApplication:]
  -[HMDApplicationVendorIDStore checkCorrectness]
  -[HMDApplicationVendorIDStore __handleUninstalledApplication:]
  -[HMDApplicationVendorIDStore applicationVendorIdMapping]
  -[HMDApplicationVendorIDStore _vendorIDForApplication:]
  -[HMDApplicationVendorIDStore _extractVendorIDForApplication:]
  -[HMDApplicationVendorIDStore _setAndSaveVendorID:applicationBundleId:companionAppBundleId:spiClient:]
  -[HMDApplicationVendorIDStore _addVendorID:forApplication:companionAppBundleId:spiClient:]
  -[HMDApplicationVendorIDStore _machUUIDsForApplication:]
  -[HMDApplicationVendorIDStore applicationMachUUIDMapping]
  -[HMDApplicationVendorIDStore removeVendorIDForApplicationBundleId:]
  -[HMDApplicationVendorIDStore addVendorID:applicationBundleId:spiClient:]
  -[HMDApplicationVendorIDStore addVendorID:applicationBundleId:]
  -[HMDApplicationVendorIDStore addVendorID:applicationBundleId:companionAppBundleId:]
  -[HMDApplicationVendorIDStore machUUIDsForApplication:]


HMDNameValidator : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableDictionary *namespaceList
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *homeManagerUUID
 @property  NSPredicate *nonZeroLengthPredicate

  // instance methods
  -[HMDNameValidator setWorkQueue:]
  -[HMDNameValidator .cxx_destruct]
  -[HMDNameValidator initWithUUID:]
  -[HMDNameValidator workQueue]
  -[HMDNameValidator _validateName:]
  -[HMDNameValidator addNamespace:]
  -[HMDNameValidator validateName:]
  -[HMDNameValidator addName:namespace:]
  -[HMDNameValidator addActionSetName:namespace:]
  -[HMDNameValidator removeName:namespace:]
  -[HMDNameValidator replaceName:withNewName:inNamespaces:]
  -[HMDNameValidator replaceActionSetName:withNewName:inNamespaces:]
  -[HMDNameValidator _addNamespace:]
  -[HMDNameValidator namespaceList]
  -[HMDNameValidator nonZeroLengthPredicate]
  -[HMDNameValidator despaceName:]
  -[HMDNameValidator _removeName:namespace:]
  -[HMDNameValidator _addName:namespace:]
  -[HMDNameValidator _removeNamespace:]
  -[HMDNameValidator _checkForConflict:namespace:]
  -[HMDNameValidator addName:namespace:voiceShortcutCheck:]
  -[HMDNameValidator replaceName:withNewName:inNamespaces:voiceShortcutCheck:]
  -[HMDNameValidator _replaceName:withNewName:inNamespaces:]
  -[HMDNameValidator removeNamespace:]
  -[HMDNameValidator checkForConflict:namespace:]
  -[HMDNameValidator setNamespaceList:]
  -[HMDNameValidator homeManagerUUID]
  -[HMDNameValidator setHomeManagerUUID:]
  -[HMDNameValidator setNonZeroLengthPredicate:]


HMDWACScanner : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HAPAirPlayAccessoryBrowserDelegate, HMDWACScanner>
 @property  <HMDWACScannerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDWACScanner logCategory]

  // instance methods
  -[HMDWACScanner init]
  -[HMDWACScanner setDelegateQueue:]
  -[HMDWACScanner resume]
  -[HMDWACScanner delegateQueue]
  -[HMDWACScanner setDelegate:queue:]
  -[HMDWACScanner .cxx_destruct]
  -[HMDWACScanner stop]
  -[HMDWACScanner backoff]
  -[HMDWACScanner setDelegate:]
  -[HMDWACScanner delegate]
  -[HMDWACScanner start]
  -[HMDWACScanner wacBrowser:didFindAirPlayDevice:]
  -[HMDWACScanner wacBrowser:didRemoveAirPlayDevice:]
  -[HMDWACScanner wacBrowser:didUpdateAirPlayDevice:]
  -[HMDWACScanner startDiscoveringAirPlayAccessoriesWithBrowser:]


HMDCUWiFiDeviceWrapper : NSObject /usr/lib/libc++.1.dylib <HMDWACDevice, HMFLogging>
 @property  NSUUID *identifier
 @property  NSString *deviceID
 @property  NSString *ssid
 @property  NSString *name
 @property  BOOL isConfigured
 @property  BOOL supportsAirPlay2
 @property  id underlyingDevice
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCUWiFiDeviceWrapper logCategory]

  // instance methods
  -[HMDCUWiFiDeviceWrapper ssid]
  -[HMDCUWiFiDeviceWrapper isConfigured]
  -[HMDCUWiFiDeviceWrapper logIdentifier]
  -[HMDCUWiFiDeviceWrapper .cxx_destruct]
  -[HMDCUWiFiDeviceWrapper name]
  -[HMDCUWiFiDeviceWrapper supportsAirPlay2]
  -[HMDCUWiFiDeviceWrapper identifier]
  -[HMDCUWiFiDeviceWrapper deviceID]
  -[HMDCUWiFiDeviceWrapper startConfigurationWithCompletionHandler:]
  -[HMDCUWiFiDeviceWrapper cancelConfigurationWithCompletionHandler:]
  -[HMDCUWiFiDeviceWrapper underlyingDevice]
  -[HMDCUWiFiDeviceWrapper initWithCUWiFiDevice:dispatchQueue:]


HMDCoreAnalyticsLogObserver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDLogEventObserver, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSDictionary *homeConfigurationCommonDimensions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCoreAnalyticsLogObserver sharedObserver]
  +[HMDCoreAnalyticsLogObserver logCategory]
  +[HMDCoreAnalyticsLogObserver supportedEventTypes]
  +[HMDCoreAnalyticsLogObserver isSupportedEvent:]

  // instance methods
  -[HMDCoreAnalyticsLogObserver init]
  -[HMDCoreAnalyticsLogObserver .cxx_destruct]
  -[HMDCoreAnalyticsLogObserver clientQueue]
  -[HMDCoreAnalyticsLogObserver stop]
  -[HMDCoreAnalyticsLogObserver start]
  -[HMDCoreAnalyticsLogObserver didReceiveEventFromDispatcher:withLogContext:]
  -[HMDCoreAnalyticsLogObserver shouldSubmitEvent:]
  -[HMDCoreAnalyticsLogObserver updateHomeConfigurationCommonDimensions]
  -[HMDCoreAnalyticsLogObserver homeConfigurationCommonDimensions]
  -[HMDCoreAnalyticsLogObserver setHomeConfigurationCommonDimensions:]
  -[HMDCoreAnalyticsLogObserver addHomeConfigurationCommonDimensionsToEventDictionary:]


HMDDatabase : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMBLocalDatabaseDelegate, HMBCloudDatabaseDelegate, HMDDatabaseZoneDelegate, HMFLogging, HMDDatabase>
 @property  HMFUnfairLock *lock
 @property  NSHashTable *delegates
 @property  NSMapTable *zoneDelegatesByLocalZone
 @property  HMDLogEventDispatcher *logEventDispatcher
 @property  BOOL hasStarted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMBCloudDatabase *cloudDatabase
 @property  HMBLocalDatabase *localDatabase

  // class methods
  +[HMDDatabase defaultDatabase]
  +[HMDDatabase logCategory]
  +[HMDDatabase cameraClipsDatabase]
  +[HMDDatabase defaultLocalDatabaseFileURL]

  // instance methods
  -[HMDDatabase delegates]
  -[HMDDatabase removeDelegate:]
  -[HMDDatabase addDelegate:]
  -[HMDDatabase hasStarted]
  -[HMDDatabase localDatabase]
  -[HMDDatabase logIdentifier]
  -[HMDDatabase setHasStarted:]
  -[HMDDatabase registerSharedSubscriptionForExternalRecordType:]
  -[HMDDatabase .cxx_destruct]
  -[HMDDatabase lock]
  -[HMDDatabase performDelegateCallback:]
  -[HMDDatabase declineInvitation:]
  -[HMDDatabase acceptInvitation:]
  -[HMDDatabase unregisterSharedSubscriptionForExternalRecordType:]
  -[HMDDatabase start]
  -[HMDDatabase cloudDatabase]
  -[HMDDatabase localZone:didCompleteProcessingWithResult:]
  -[HMDDatabase cloudDatabase:encounteredError:withOperation:onZone:]
  -[HMDDatabase cloudZone:didChangeRebuildStatus:]
  -[HMDDatabase localDatabase:willRemoveZoneWithID:]
  -[HMDDatabase cloudDatabase:didReceiveMessageWithUserInfo:]
  -[HMDDatabase cloudDatabase:didCreateZoneWithID:]
  -[HMDDatabase cloudDatabase:didRemoveZoneWithID:]
  -[HMDDatabase cloudDatabase:willRemoveZoneWithID:]
  -[HMDDatabase cloudDatabase:encounteredError:withOperation:onContainer:]
  -[HMDDatabase localDatabaseShouldLogPrivateInformation:]
  -[HMDDatabase localDatabase:detectedLocalCorruptionWithInfo:]
  -[HMDDatabase cloudZone:didRemoveParticipantWithClientIdentifier:]
  -[HMDDatabase removePrivateZonesWithName:]
  -[HMDDatabase logEventDispatcher]
  -[HMDDatabase removeSharedZonesWithName:]
  -[HMDDatabase privateZonesWithName:configuration:delegate:error:]
  -[HMDDatabase existingSharedZoneIDWithName:]
  -[HMDDatabase sharedZonesWithID:configuration:delegate:error:]
  -[HMDDatabase removeLocalAndCloudDataForLocalZone:]
  -[HMDDatabase existingPrivateZonesWithName:configuration:delegate:error:]
  -[HMDDatabase initWithFileURL:cloudContainerIdentifier:cloudContainerSourceApplicationBundleIdentifier:]
  -[HMDDatabase initWithLocalDatabase:cloudDatabase:logEventDispatcher:]
  -[HMDDatabase zonesWithID:isPrivate:shouldCreate:configuration:delegate:error:]
  -[HMDDatabase removeZonesWithID:isPrivate:]
  -[HMDDatabase addZoneDelegate:forLocalZone:]
  -[HMDDatabase zoneDelegatesByLocalZone]
  -[HMDDatabase performZoneDelegateCallback:forLocalZone:]
  -[HMDDatabase removeZoneDelegate:forLocalZone:]
  -[HMDDatabase mergedActionFutureForActionFutures:]


HMDDatabaseFetchZonesResult : NSObject /usr/lib/libc++.1.dylib
 @property  HMBLocalZone *localZone
 @property  HMBCloudZone *cloudZone

  // instance methods
  -[HMDDatabaseFetchZonesResult .cxx_destruct]
  -[HMDDatabaseFetchZonesResult localZone]
  -[HMDDatabaseFetchZonesResult cloudZone]
  -[HMDDatabaseFetchZonesResult initWithLocalZone:cloudZone:]


HMDBulletinCategory : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // class methods
  +[HMDBulletinCategory isSensorDetectedCharacteristic:]
  +[HMDBulletinCategory localizedStateForCharacteristic:]
  +[HMDBulletinCategory presentationValueForValue:type:]
  +[HMDBulletinCategory trimLeadingAndTailingSpacesInName:]
  +[HMDBulletinCategory _sensorMap]
  +[HMDBulletinCategory _presentationTypeForType:]
  +[HMDBulletinCategory _localizedStateForValue:characteristicType:]
  +[HMDBulletinCategory _enumerationValueLocalizationKeys]
  +[HMDBulletinCategory _secureStateMap]
  +[HMDBulletinCategory localizedStringForItems:]


HMDMessageHandlerQueuedMessage : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate>
 @property  HMFTimer *timer
 @property  <HMDMessageHandlerQueuedMessageDelegate> *delegate
 @property  NSUUID *identifier
 @property  NSString *name
 @property  HMFMessage *message
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMessageHandlerQueuedMessage logCategory]

  // instance methods
  -[HMDMessageHandlerQueuedMessage timerDidFire:]
  -[HMDMessageHandlerQueuedMessage initWithMessage:]
  -[HMDMessageHandlerQueuedMessage message]
  -[HMDMessageHandlerQueuedMessage logIdentifier]
  -[HMDMessageHandlerQueuedMessage attributeDescriptions]
  -[HMDMessageHandlerQueuedMessage timer]
  -[HMDMessageHandlerQueuedMessage privateDescription]
  -[HMDMessageHandlerQueuedMessage .cxx_destruct]
  -[HMDMessageHandlerQueuedMessage name]
  -[HMDMessageHandlerQueuedMessage identifier]
  -[HMDMessageHandlerQueuedMessage setDelegate:]
  -[HMDMessageHandlerQueuedMessage delegate]
  -[HMDMessageHandlerQueuedMessage initWithMessage:timeInterval:]


HMDCameraClipAddSignificantEventOperation : HMDCameraClipOperation <HMBLocalZoneMirrorOutputObserver>
 @property  HMDCameraRecordingSessionSignificantEvent *significantEvent
 @property  NSDictionary *homePresenceByPairingIdentity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraClipAddSignificantEventOperation logCategory]

  // instance methods
  -[HMDCameraClipAddSignificantEventOperation main]
  -[HMDCameraClipAddSignificantEventOperation attributeDescriptions]
  -[HMDCameraClipAddSignificantEventOperation significantEvent]
  -[HMDCameraClipAddSignificantEventOperation .cxx_destruct]
  -[HMDCameraClipAddSignificantEventOperation localZone:willPerformMirrorOutputForModel:]
  -[HMDCameraClipAddSignificantEventOperation homePresenceByPairingIdentity]
  -[HMDCameraClipAddSignificantEventOperation modelsToUpdate]
  -[HMDCameraClipAddSignificantEventOperation initWithClipModelID:localZone:significantEvent:homePresenceByPairingIdentity:dataSource:]
  -[HMDCameraClipAddSignificantEventOperation initWithClipModelID:localZone:significantEvent:homePresenceByPairingIdentity:]


HMDDataStreamStreamProtocol : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDDataStreamProtocol>
 @property  NSMapTable *sockets
 @property  <HMDDataStreamProtocolDelegate> *dataStream
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL active

  // class methods
  +[HMDDataStreamStreamProtocol logCategory]
  +[HMDDataStreamStreamProtocol protocolName]

  // instance methods
  -[HMDDataStreamStreamProtocol dataStream]
  -[HMDDataStreamStreamProtocol .cxx_destruct]
  -[HMDDataStreamStreamProtocol isActive]
  -[HMDDataStreamStreamProtocol sockets]
  -[HMDDataStreamStreamProtocol dataStream:didFailWithError:]
  -[HMDDataStreamStreamProtocol dataStream:didReceiveResponse:header:payload:]
  -[HMDDataStreamStreamProtocol dataStream:didReceiveEvent:header:payload:]
  -[HMDDataStreamStreamProtocol dataStream:didReceiveRequest:header:payload:]
  -[HMDDataStreamStreamProtocol dataStreamDidClose:]
  -[HMDDataStreamStreamProtocol dataStreamDidOpen:]
  -[HMDDataStreamStreamProtocol initWithDataStream:]
  -[HMDDataStreamStreamProtocol registerSocket:]
  -[HMDDataStreamStreamProtocol sendData:socket:]
  -[HMDDataStreamStreamProtocol unregisterSocket:]
  -[HMDDataStreamStreamProtocol _notifyActiveStatusChangedFromPreviousValue:]
  -[HMDDataStreamStreamProtocol _closeAllSocketsWithError:]


HMDDuetPredictionSubscriber : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  <HMDDuetSuggestionProvider> *duetPredictionSuggester
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDDuetPredictionSubscriberDataSource> *dataSource
 @property  int duetPredictionsChangedNotificationToken

  // instance methods
  -[HMDDuetPredictionSubscriber _registerForNotifications]
  -[HMDDuetPredictionSubscriber setDataSource:]
  -[HMDDuetPredictionSubscriber _unregisterForNotifications]
  -[HMDDuetPredictionSubscriber dealloc]
  -[HMDDuetPredictionSubscriber .cxx_destruct]
  -[HMDDuetPredictionSubscriber workQueue]
  -[HMDDuetPredictionSubscriber dataSource]
  -[HMDDuetPredictionSubscriber _fetchPredictionsFromDuetAndUpdateHomes]
  -[HMDDuetPredictionSubscriber initWithWorkQueue:dataSource:duetSuggestionProvider:]
  -[HMDDuetPredictionSubscriber duetPredictionsChangedNotificationToken]
  -[HMDDuetPredictionSubscriber duetPredictionSuggester]
  -[HMDDuetPredictionSubscriber initWithWorkQueue:dataSource:]
  -[HMDDuetPredictionSubscriber setDuetPredictionsChangedNotificationToken:]


HMDUserDataModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSUUID *settingsRootUUID

  // class methods
  +[HMDUserDataModel hmbProperties]


HMDSharedUserDataModel : HMDUserDataModel
 @property  NSUUID *assistantAccessControlModelUUID
 @property  NSUUID *mediaContentProfileAccessControlModelUUID

  // class methods
  +[HMDSharedUserDataModel hmbProperties]


HMDPrivateUserDataModel : HMDUserDataModel
  // class methods
  +[HMDPrivateUserDataModel hmbProperties]


HMDCoreDuetLogEventData : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *metadata
 @property  NSString *value

  // instance methods
  -[HMDCoreDuetLogEventData .cxx_destruct]
  -[HMDCoreDuetLogEventData value]
  -[HMDCoreDuetLogEventData metadata]
  -[HMDCoreDuetLogEventData initWithMetadata:value:]


HMDAppleMediaAccessory : HMDMediaAccessory <HMDAccessorySettingsControllerDataSource, HMDAccessorySettingsControllerDelegate, HMDDeviceControllerDelegate, HMDAccessoryUserManagement, HMFLogging>
 @property  HMDTargetControlManager *targetControlManager
 @property  BOOL fixedPairingIdentityInCloud
 @property  HMFPairingIdentity *lastCreatedPairingIdentity
 @property  NSArray *supportedMultiUserLanguageCodes
 @property  HMDAccessorySettingsController *settingsController
 @property  unsigned long supportedStereoPairVersions
 @property  <HMDAppleMediaAccessoryModelDataSource> *modelDataSource
 @property  @? deviceMediaRouteIdentifierFactory
 @property  HMFWiFiNetworkInfo *lastStagedWifiNetworkInfo
 @property  HMFWiFiManager *wifiManager
 @property  NSNotificationCenter *notificationCenter
 @property  @? settingsConnectionFactory
 @property  HMDDevice *device
 @property  HMFPairingIdentity *pairingIdentity
 @property  HMDRemoteLoginHandler *remoteLoginHandler
 @property  HMDAccessorySymptomHandler *symptomsHandler
 @property  BOOL deviceReachable
 @property  HMFSoftwareVersion *softwareVersion
 @property  HMFWiFiNetworkInfo *wifiNetworkInfo
 @property  HMDBackingStore *backingStore
 @property  HMFActivity *setupActivity
 @property  double setupStartTimestamp
 @property  double homepodSetupLatency
 @property  double homepodSettingsCreationTimestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL supportsUserManagement

  // class methods
  +[HMDAppleMediaAccessory supportsSecureCoding]
  +[HMDAppleMediaAccessory logCategory]
  +[HMDAppleMediaAccessory hasMessageReceiverChildren]
  +[HMDAppleMediaAccessory shouldAcceptMessage:home:privilege:]

  // instance methods
  -[HMDAppleMediaAccessory notificationCenter]
  -[HMDAppleMediaAccessory device]
  -[HMDAppleMediaAccessory logIdentifier]
  -[HMDAppleMediaAccessory wifiManager]
  -[HMDAppleMediaAccessory init]
  -[HMDAppleMediaAccessory setWifiManager:]
  -[HMDAppleMediaAccessory dealloc]
  -[HMDAppleMediaAccessory .cxx_destruct]
  -[HMDAppleMediaAccessory symptomsHandler]
  -[HMDAppleMediaAccessory supportsMultiUser]
  -[HMDAppleMediaAccessory setNotificationCenter:]
  -[HMDAppleMediaAccessory encodeWithCoder:]
  -[HMDAppleMediaAccessory _registerForMessages]
  -[HMDAppleMediaAccessory setSupportedStereoPairVersions:]
  -[HMDAppleMediaAccessory supportsTargetControl]
  -[HMDAppleMediaAccessory backingStore]
  -[HMDAppleMediaAccessory settingsController]
  -[HMDAppleMediaAccessory removeUser:completionHandler:]
  -[HMDAppleMediaAccessory isCurrentAccessory]
  -[HMDAppleMediaAccessory reachableTransports]
  -[HMDAppleMediaAccessory setSoftwareVersion:]
  -[HMDAppleMediaAccessory wifiNetworkInfo]
  -[HMDAppleMediaAccessory setWifiNetworkInfo:]
  -[HMDAppleMediaAccessory supportsCompanionInitiatedRestart]
  -[HMDAppleMediaAccessory supportsThirdPartyMusic]
  -[HMDAppleMediaAccessory supportsDoorbellChime]
  -[HMDAppleMediaAccessory pairingIdentity]
  -[HMDAppleMediaAccessory dumpState]
  -[HMDAppleMediaAccessory setPairingIdentity:]
  -[HMDAppleMediaAccessory supportedStereoPairVersions]
  -[HMDAppleMediaAccessory remoteLoginHandler]
  -[HMDAppleMediaAccessory initWithCoder:]
  -[HMDAppleMediaAccessory softwareVersion]
  -[HMDAppleMediaAccessory messageReceiverChildren]
  -[HMDAppleMediaAccessory transactionObjectUpdated:newValues:message:]
  -[HMDAppleMediaAccessory transactionObjectRemoved:message:]
  -[HMDAppleMediaAccessory modelObjectWithChangeType:]
  -[HMDAppleMediaAccessory backingStoreObjects:]
  -[HMDAppleMediaAccessory configureWithHome:msgDispatcher:configurationTracker:initialConfiguration:]
  -[HMDAppleMediaAccessory deviceMonitor]
  -[HMDAppleMediaAccessory runtimeState]
  -[HMDAppleMediaAccessory setRemotelyReachable:]
  -[HMDAppleMediaAccessory transactionWithObjectChangeType:]
  -[HMDAppleMediaAccessory initWithTransaction:home:]
  -[HMDAppleMediaAccessory addAdvertisement:]
  -[HMDAppleMediaAccessory autoConfigureTargetControllers]
  -[HMDAppleMediaAccessory supportsUserManagement]
  -[HMDAppleMediaAccessory homepodSettingsCreationTimestamp]
  -[HMDAppleMediaAccessory homepodSetupLatency]
  -[HMDAppleMediaAccessory removeAdvertisement:]
  -[HMDAppleMediaAccessory messageSendPolicy]
  -[HMDAppleMediaAccessory setHomepodSetupLatency:]
  -[HMDAppleMediaAccessory setHomepodSettingsCreationTimestamp:]
  -[HMDAppleMediaAccessory addUser:completionHandler:]
  -[HMDAppleMediaAccessory pairingsWithCompletionHandler:]
  -[HMDAppleMediaAccessory assistantObject]
  -[HMDAppleMediaAccessory isRemotelyReachable]
  -[HMDAppleMediaAccessory setupActivity]
  -[HMDAppleMediaAccessory _handleUpdatedName:]
  -[HMDAppleMediaAccessory supportsSoftwareUpdate]
  -[HMDAppleMediaAccessory _shouldFilterAccessoryProfile:]
  -[HMDAppleMediaAccessory _applySoftwareUpdateModel:completion:]
  -[HMDAppleMediaAccessory _allowSoftwareUpdateChangeFromSource:]
  -[HMDAppleMediaAccessory populateModelObject:version:]
  -[HMDAppleMediaAccessory requiresHomeAppForManagement]
  -[HMDAppleMediaAccessory supportsMediaContentProfile]
  -[HMDAppleMediaAccessory supportsPersonalRequests]
  -[HMDAppleMediaAccessory dumpSimpleState]
  -[HMDAppleMediaAccessory handleDeviceIsReachable:]
  -[HMDAppleMediaAccessory handleDeviceIsNotReachable:]
  -[HMDAppleMediaAccessory runTransactionWithModels:completion:]
  -[HMDAppleMediaAccessory runTransactionWithModel:completion:]
  -[HMDAppleMediaAccessory isDeviceReachable]
  -[HMDAppleMediaAccessory _createMediaProfile]
  -[HMDAppleMediaAccessory handleCurrentDeviceUpdated:]
  -[HMDAppleMediaAccessory targetControlManager]
  -[HMDAppleMediaAccessory setTargetControlManager:]
  -[HMDAppleMediaAccessory _fetchAvailableUpdate:]
  -[HMDAppleMediaAccessory _startUpdate:]
  -[HMDAppleMediaAccessory handleDeleteSiriHistoryRequest:]
  -[HMDAppleMediaAccessory setSettingsController:]
  -[HMDAppleMediaAccessory deviceMediaRouteIdentifierFactory]
  -[HMDAppleMediaAccessory shouldUpdateWithDevice:]
  -[HMDAppleMediaAccessory updateWithDevice:]
  -[HMDAppleMediaAccessory createPairingIdentity]
  -[HMDAppleMediaAccessory _fixCloudKeyIfNeeded]
  -[HMDAppleMediaAccessory _updateSupportedStereoPairVersions:]
  -[HMDAppleMediaAccessory _updateSoftwareVersion:]
  -[HMDAppleMediaAccessory handleCurrentNetworkChangedNotification:]
  -[HMDAppleMediaAccessory updateWiFiNetworkInfo]
  -[HMDAppleMediaAccessory _fetchMultiUserLanguages]
  -[HMDAppleMediaAccessory startMonitoringReachability]
  -[HMDAppleMediaAccessory registerForPublishingNotifications]
  -[HMDAppleMediaAccessory setSupportedMultiUserLanguageCodes:]
  -[HMDAppleMediaAccessory fixedPairingIdentityInCloud]
  -[HMDAppleMediaAccessory updateRechabilityFromDevicePublishingState]
  -[HMDAppleMediaAccessory notifyClientsOfUpdatedAccessoryControllableValue:]
  -[HMDAppleMediaAccessory setDeviceReachable:]
  -[HMDAppleMediaAccessory setLastCreatedPairingIdentity:]
  -[HMDAppleMediaAccessory lastCreatedPairingIdentity]
  -[HMDAppleMediaAccessory _relayRequestMessage:responseHandler:]
  -[HMDAppleMediaAccessory settingsConnectionFactory]
  -[HMDAppleMediaAccessory lastStagedWifiNetworkInfo]
  -[HMDAppleMediaAccessory setLastStagedWifiNetworkInfo:]
  -[HMDAppleMediaAccessory remoteMessageDestination]
  -[HMDAppleMediaAccessory modelDataSource]
  -[HMDAppleMediaAccessory setSetupActivity:]
  -[HMDAppleMediaAccessory setSetupStartTimestamp:]
  -[HMDAppleMediaAccessory setupStartTimestamp]
  -[HMDAppleMediaAccessory supportedMultiUserLanguageCodes]
  -[HMDAppleMediaAccessory modelsToMakeSettingsForController:parentUUID:]
  -[HMDAppleMediaAccessory modelsToMigrateSettingsForController:]
  -[HMDAppleMediaAccessory accessorySettingsController:saveWithReason:]
  -[HMDAppleMediaAccessory accessorySettingsController:saveWithReason:model:]
  -[HMDAppleMediaAccessory remoteMessageDestinationForAccessorySettingsController:target:]
  -[HMDAppleMediaAccessory supportedMultiUserLanguageCodesForAccessorySettingsController:]
  -[HMDAppleMediaAccessory isMultiUserEnabledForAccessorySettingsController:]
  -[HMDAppleMediaAccessory assistantAccessControlModelWithRemovedAccessoriesForAccessorySettingsController:]
  -[HMDAppleMediaAccessory deviceController:didUpdateDevice:]
  -[HMDAppleMediaAccessory initWithDeviceController:deviceIdentifierFactory:]
  -[HMDAppleMediaAccessory handleDeviceIsPublishingChangedNotification:]
  -[HMDAppleMediaAccessory supportsSettings]
  -[HMDAppleMediaAccessory setFixedPairingIdentityInCloud:]
  -[HMDAppleMediaAccessory setSettingsConnectionFactory:]


HMDAppleMediaAccessoryModelDataSource : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDAppleMediaAccessoryModelDataSource>
  // class methods
  +[HMDAppleMediaAccessoryModelDataSource shortDescription]

  // instance methods
  -[HMDAppleMediaAccessoryModelDataSource modelforAccessory:changeType:uuid:parentUUID:]


HMDAppleMediaAccessoryModel : HMDMediaAccessoryModel
 @property  NSString *deviceUUID
 @property  HMDDevice *device
 @property  HMFPairingIdentity *pairingIdentity
 @property  NSData *loggedInAccount
 @property  NSData *symptoms
 @property  HMFSoftwareVersion *softwareVersion
 @property  HMFWiFiNetworkInfo *wifiNetworkInfo
 @property  NSString *appleMediaAccessoryChangeTag
 @property  NSNumber *supportedStereoPairVersions

  // class methods
  +[HMDAppleMediaAccessoryModel properties]
  +[HMDAppleMediaAccessoryModel appleMediaAccessoryModelWithChangeType:uuid:parentUUID:]
  +[HMDAppleMediaAccessoryModel homePodAccessoryModelWithChangeType:uuid:parentUUID:]

  // instance methods
  -[HMDAppleMediaAccessoryModel _initWithObjectChangeType:uuid:parentUUID:]


HMDHomeObjectLookup : HMDObjectLookup
 @property  HMDHome *home

  // class methods
  +[HMDHomeObjectLookup logCategory]

  // instance methods
  -[HMDHomeObjectLookup logIdentifier]
  -[HMDHomeObjectLookup .cxx_destruct]
  -[HMDHomeObjectLookup setHome:]
  -[HMDHomeObjectLookup home]
  -[HMDHomeObjectLookup initWithHome:]
  -[HMDHomeObjectLookup scanObjects]
  -[HMDHomeObjectLookup _scanAccessoriesAndServices]
  -[HMDHomeObjectLookup _scanRooms]
  -[HMDHomeObjectLookup _scanZones]
  -[HMDHomeObjectLookup _scanActionSets]
  -[HMDHomeObjectLookup _scanServiceGroups]
  -[HMDHomeObjectLookup _scanTriggers]
  -[HMDHomeObjectLookup _scanResidentDevices]
  -[HMDHomeObjectLookup _scanMediaSystems]
  -[HMDHomeObjectLookup _scanUsers]
  -[HMDHomeObjectLookup _scanSettings:]


HMDAccessoryAllowedHost : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  HMDNetworkRouterFirewallRuleWAN *wanRule
 @property  NSString *name
 @property  NSSet *addresses
 @property  unsigned long purpose
 @property  NSString *jsonWANRule

  // class methods
  +[HMDAccessoryAllowedHost supportsSecureCoding]
  +[HMDAccessoryAllowedHost allowedHostsFromFirewallRuleConfiguration:]
  +[HMDAccessoryAllowedHost allowedHostsFromJSONFirewallWANRules:]
  +[HMDAccessoryAllowedHost allowedHostForFullWANAccess]

  // instance methods
  -[HMDAccessoryAllowedHost addresses]
  -[HMDAccessoryAllowedHost attributeDescriptions]
  -[HMDAccessoryAllowedHost purpose]
  -[HMDAccessoryAllowedHost .cxx_destruct]
  -[HMDAccessoryAllowedHost name]
  -[HMDAccessoryAllowedHost encodeWithCoder:]
  -[HMDAccessoryAllowedHost wanRule]
  -[HMDAccessoryAllowedHost isEqual:]
  -[HMDAccessoryAllowedHost initWithCoder:]
  -[HMDAccessoryAllowedHost jsonWANRule]
  -[HMDAccessoryAllowedHost initWithJSONFirewallWANRule:]
  -[HMDAccessoryAllowedHost initWithWANRule:]
  -[HMDAccessoryAllowedHost _encodeForSPIEntitledXPCTransportWithCoder:]


HMDCameraRemoteStreamSession : HMDCameraStreamSession <HMFLogging>
 @property  <HMDCameraRemoteStreamSenderProtocol> *streamSender
 @property  <HMDCameraRemoteStreamReceiverProtocol> *streamReceiver
 @property  unsigned long streamState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraRemoteStreamSession logCategory]

  // instance methods
  -[HMDCameraRemoteStreamSession logIdentifier]
  -[HMDCameraRemoteStreamSession streamState]
  -[HMDCameraRemoteStreamSession setStreamState:]
  -[HMDCameraRemoteStreamSession dealloc]
  -[HMDCameraRemoteStreamSession .cxx_destruct]
  -[HMDCameraRemoteStreamSession stateAsString]
  -[HMDCameraRemoteStreamSession updateState:]
  -[HMDCameraRemoteStreamSession initWithSessionID:reachabilityPath:streamSender:streamReceiver:remoteCapabilities:streamPreference:]
  -[HMDCameraRemoteStreamSession streamSender]
  -[HMDCameraRemoteStreamSession containsState:]
  -[HMDCameraRemoteStreamSession streamReceiver]


HMDIdentifierSaltStore : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *identifierSalt
 @property  NSData *assistantIdentifierSalt

  // instance methods
  -[HMDIdentifierSaltStore init]
  -[HMDIdentifierSaltStore identifierSalt]
  -[HMDIdentifierSaltStore setIdentifierSalt:]
  -[HMDIdentifierSaltStore assistantIdentifierSalt]
  -[HMDIdentifierSaltStore setAssistantIdentifierSalt:]
  -[HMDIdentifierSaltStore .cxx_destruct]


HMDNetworkRouterHomeKitOnlyFirewallConfiguration : HMDNetworkRouterFirewallRuleConfiguration
  // class methods
  +[HMDNetworkRouterHomeKitOnlyFirewallConfiguration fallbackIdentifier]
  +[HMDNetworkRouterHomeKitOnlyFirewallConfiguration fallbackConfigurationForRuleset:]

  // instance methods
  -[HMDNetworkRouterHomeKitOnlyFirewallConfiguration initWithAccessory:sourceConfiguration:]


HMDPhotoLibraryPersonImporter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDPhotoLibraryChangeDelegate, HMFTimerDelegate, HMFLogging, HMDPersonDataReceiver>
 @property  NSUUID *UUID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDPhotoLibrary *photoLibrary
 @property  <HMDPersonDataSource> *dataSource
 @property  HMFTimer *frequentUpdateTimer
 @property  HMFTimer *infrequentUpdateTimer
 @property  HMDCloudPhotosSettingObserver *cloudPhotosSettingObserver
 @property  @? frequentUpdateTimerFactory
 @property  @? infrequentUpdateTimerFactory
 @property  HMDLogEventDispatcher *logEventDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMIHomePersonManager *homePersonManager
 @property  HMIExternalPersonManager *photosPersonManager

  // class methods
  +[HMDPhotoLibraryPersonImporter logCategory]

  // instance methods
  -[HMDPhotoLibraryPersonImporter _configure]
  -[HMDPhotoLibraryPersonImporter _registerForNotifications]
  -[HMDPhotoLibraryPersonImporter timerDidFire:]
  -[HMDPhotoLibraryPersonImporter logIdentifier]
  -[HMDPhotoLibraryPersonImporter setDataSource:]
  -[HMDPhotoLibraryPersonImporter photoLibrary]
  -[HMDPhotoLibraryPersonImporter .cxx_destruct]
  -[HMDPhotoLibraryPersonImporter initWithUUID:]
  -[HMDPhotoLibraryPersonImporter workQueue]
  -[HMDPhotoLibraryPersonImporter dataSource]
  -[HMDPhotoLibraryPersonImporter UUID]
  -[HMDPhotoLibraryPersonImporter _unconfigure]
  -[HMDPhotoLibraryPersonImporter configureWithDataSource:home:]
  -[HMDPhotoLibraryPersonImporter logEventDispatcher]
  -[HMDPhotoLibraryPersonImporter cloudPhotosSettingObserver]
  -[HMDPhotoLibraryPersonImporter setLogEventDispatcher:]
  -[HMDPhotoLibraryPersonImporter photoLibraryPersonsDidChange]
  -[HMDPhotoLibraryPersonImporter initWithUUID:photoLibrary:workQueue:cloudPhotosSettingObserver:]
  -[HMDPhotoLibraryPersonImporter _updatePersons]
  -[HMDPhotoLibraryPersonImporter _updateFaceCropsForAllPersons]
  -[HMDPhotoLibraryPersonImporter _updateFaceCropsForPersonsWithUpdatedPhotosFaceCrops]
  -[HMDPhotoLibraryPersonImporter _submitLogEventsForUpdatedPersonsWithCurrentPersons:previousPersons:]
  -[HMDPhotoLibraryPersonImporter _removedPersonUUIDsWithCurrentPersons:previousPersons:]
  -[HMDPhotoLibraryPersonImporter _updateFaceCropsForPersons:]
  -[HMDPhotoLibraryPersonImporter _updateFaceCropsWithCurrentPhotoLibraryFaceCrops:forPersonWithUUID:]
  -[HMDPhotoLibraryPersonImporter _submitLogEventForFaceCrops:]
  -[HMDPhotoLibraryPersonImporter frequentUpdateTimerFactory]
  -[HMDPhotoLibraryPersonImporter setFrequentUpdateTimer:]
  -[HMDPhotoLibraryPersonImporter frequentUpdateTimer]
  -[HMDPhotoLibraryPersonImporter infrequentUpdateTimerFactory]
  -[HMDPhotoLibraryPersonImporter setInfrequentUpdateTimer:]
  -[HMDPhotoLibraryPersonImporter infrequentUpdateTimer]
  -[HMDPhotoLibraryPersonImporter handleCloudPhotosEnabledDidChangeNotification:]
  -[HMDPhotoLibraryPersonImporter _updatePersonsAndFaceCrops:]
  -[HMDPhotoLibraryPersonImporter _setUpAndStartUpdateTimers]
  -[HMDPhotoLibraryPersonImporter _handleUpdatedCloudPhotosSetting]
  -[HMDPhotoLibraryPersonImporter setFrequentUpdateTimerFactory:]
  -[HMDPhotoLibraryPersonImporter setInfrequentUpdateTimerFactory:]


HMDLogEventAnalyzerManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // class methods
  +[HMDLogEventAnalyzerManager sharedInstance]

  // instance methods
  -[HMDLogEventAnalyzerManager init]
  -[HMDLogEventAnalyzerManager .cxx_destruct]
  -[HMDLogEventAnalyzerManager startAnalyzers]


HMPBEncodeOption : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasIsXPC
 @property  BOOL isXPC
 @property  BOOL hasIsSPI
 @property  BOOL isSPI

  // instance methods
  -[HMPBEncodeOption copyWithZone:]
  -[HMPBEncodeOption isXPC]
  -[HMPBEncodeOption isSPI]
  -[HMPBEncodeOption hasIsXPC]
  -[HMPBEncodeOption setHasIsXPC:]
  -[HMPBEncodeOption setHasIsSPI:]
  -[HMPBEncodeOption hasIsSPI]
  -[HMPBEncodeOption readFrom:]
  -[HMPBEncodeOption writeTo:]
  -[HMPBEncodeOption setIsXPC:]
  -[HMPBEncodeOption isEqual:]
  -[HMPBEncodeOption setIsSPI:]
  -[HMPBEncodeOption copyTo:]
  -[HMPBEncodeOption dictionaryRepresentation]
  -[HMPBEncodeOption mergeFrom:]


HMDSyncOperationQueue : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDSyncOperationManager *manager
 @property  NSArray *stagedOperations
 @property  NSArray *waitingOperations
 @property  double initialDelay
 @property  double initialBackoff
 @property  BOOL hasExponentialBackoff
 @property  HMFExponentialBackoffTimer *backoffTimer
 @property  NSString *name
 @property  long long count
 @property  long long countTotal
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSyncOperationQueue logCategory]

  // instance methods
  -[HMDSyncOperationQueue initialDelay]
  -[HMDSyncOperationQueue setInitialDelay:]
  -[HMDSyncOperationQueue .cxx_destruct]
  -[HMDSyncOperationQueue name]
  -[HMDSyncOperationQueue backoffTimer]
  -[HMDSyncOperationQueue manager]
  -[HMDSyncOperationQueue setManager:]
  -[HMDSyncOperationQueue count]
  -[HMDSyncOperationQueue allOperations]
  -[HMDSyncOperationQueue _addOperation:]
  -[HMDSyncOperationQueue setBackoffTimer:]
  -[HMDSyncOperationQueue stagedOperations]
  -[HMDSyncOperationQueue hasExponentialBackoff]
  -[HMDSyncOperationQueue initialBackoff]
  -[HMDSyncOperationQueue _removeStagedOperation:]
  -[HMDSyncOperationQueue waitingOperations]
  -[HMDSyncOperationQueue _removeWaitingOperation:]
  -[HMDSyncOperationQueue _addWaitingOperation:]
  -[HMDSyncOperationQueue _addStagedOperation:]
  -[HMDSyncOperationQueue _createBackoffTimer]
  -[HMDSyncOperationQueue countTotal]
  -[HMDSyncOperationQueue initName:syncManager:initialDelay:initialBackoff:hasBackoff:]
  -[HMDSyncOperationQueue resetBackoffTimer]
  -[HMDSyncOperationQueue addOperation:withDelay:]
  -[HMDSyncOperationQueue stageOperation:]
  -[HMDSyncOperationQueue dropOperation:]
  -[HMDSyncOperationQueue dropAllOperations]
  -[HMDSyncOperationQueue processFiredTimer:]
  -[HMDSyncOperationQueue isInMaximumTimeInterval]
  -[HMDSyncOperationQueue nextOperation]
  -[HMDSyncOperationQueue operationsToCancel]
  -[HMDSyncOperationQueue setInitialBackoff:]
  -[HMDSyncOperationQueue setHasExponentialBackoff:]


HMDSyncOperationManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDSyncOperationQueue *cloudPushOperations
 @property  NSArray *cloudVerifyAccountOperations
 @property  HMDSyncOperationQueue *cloudFetchOperations
 @property  NSArray *cloudZonePushOperationQueues
 @property  NSArray *cloudZoneFetchOperationQueues
 @property  NSArray *cloudCancelPauseOperations
 @property  NSArray *cloudQueryDatabaseOperations
 @property  NSArray *cloudPostFetchOperations
 @property  BOOL pauseQueue
 @property  long long pauseCloudPushLevel
 @property  HMFExponentialBackoffTimer *cloudPushDelayTimer
 @property  BOOL syncLoopDialogDisplayed
 @property  HMDSyncOperation *currentOperation
 @property  <HMDSyncOperationManagerDataSource> *dataSource
 @property  @? timerFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSyncOperationManager logCategory]

  // instance methods
  -[HMDSyncOperationManager timerDidFire:]
  -[HMDSyncOperationManager kick]
  -[HMDSyncOperationManager pause]
  -[HMDSyncOperationManager addOperation:]
  -[HMDSyncOperationManager resume]
  -[HMDSyncOperationManager .cxx_destruct]
  -[HMDSyncOperationManager workQueue]
  -[HMDSyncOperationManager clientQueue]
  -[HMDSyncOperationManager currentOperation]
  -[HMDSyncOperationManager dataSource]
  -[HMDSyncOperationManager dumpState]
  -[HMDSyncOperationManager cancelOperations]
  -[HMDSyncOperationManager setCurrentOperation:]
  -[HMDSyncOperationManager timerFactory]
  -[HMDSyncOperationManager addOperation:withDelay:]
  -[HMDSyncOperationManager initWithClientQueue:dataSource:timerFactory:]
  -[HMDSyncOperationManager wasSyncLoopDialogDisplayed]
  -[HMDSyncOperationManager setSyncLoopDialogDisplayed:]
  -[HMDSyncOperationManager addOperationRespectingOptions:withDelay:]
  -[HMDSyncOperationManager cloudPushOperations]
  -[HMDSyncOperationManager _reportPossibleSyncLoop]
  -[HMDSyncOperationManager addCloudVerifyAccountOperation:]
  -[HMDSyncOperationManager cloudFetchOperations]
  -[HMDSyncOperationManager addCloudZonePushOperation:delay:]
  -[HMDSyncOperationManager addCloudZoneFetchOperation:delay:]
  -[HMDSyncOperationManager addCloudCancelPauseOperation:]
  -[HMDSyncOperationManager addCloudQueryDatabaseOperationIfNonePresent:]
  -[HMDSyncOperationManager dropCloudPostFetchOperationsIfPresent]
  -[HMDSyncOperationManager cloudPostFetchOperations]
  -[HMDSyncOperationManager addCloudPostFetchOperationIfNonePresent:]
  -[HMDSyncOperationManager _handleNextOperation]
  -[HMDSyncOperationManager cloudPushDelayTimer]
  -[HMDSyncOperationManager setCloudPushDelayTimer:]
  -[HMDSyncOperationManager setPauseCloudPushLevel:]
  -[HMDSyncOperationManager _handleCancelledOperations:]
  -[HMDSyncOperationManager pauseQueue]
  -[HMDSyncOperationManager popCloudCancelPauseOperation]
  -[HMDSyncOperationManager popCloudQueryDatabaseOperation]
  -[HMDSyncOperationManager popCloudVerifyAccountOperation]
  -[HMDSyncOperationManager popCloudZoneFetchOperationAndMoveQueueToEnd:]
  -[HMDSyncOperationManager popCloudPostFetchOperation]
  -[HMDSyncOperationManager pauseCloudPushLevel]
  -[HMDSyncOperationManager popCloudZonePushOperationAndMoveQueueToEnd]
  -[HMDSyncOperationManager _dequeueNextOperation]
  -[HMDSyncOperationManager setPauseQueue:]
  -[HMDSyncOperationManager cloudZonePushOperationQueues]
  -[HMDSyncOperationManager cloudZoneFetchOperations]
  -[HMDSyncOperationManager removeCloudZoneFetchOperationQueue:]
  -[HMDSyncOperationManager removeCloudZonePushOperationQueue:]
  -[HMDSyncOperationManager initWithClientQueue:dataSource:]
  -[HMDSyncOperationManager cloudVerifyAccountOperations]
  -[HMDSyncOperationManager cloudCancelPauseOperations]
  -[HMDSyncOperationManager cloudQueryDatabaseOperations]
  -[HMDSyncOperationManager pauseAndWaitForCurrentOperationCompletion:]
  -[HMDSyncOperationManager pauseCloudPush]
  -[HMDSyncOperationManager resumeCloudPush]
  -[HMDSyncOperationManager killCloudPushAndResume]
  -[HMDSyncOperationManager resetCloudPushTimer:]
  -[HMDSyncOperationManager cloudZoneFetchOperationQueues]


HMDSyncOperationOptions : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long operationType
 @property  NSString *zoneName
 @property  BOOL cloudConflict
 @property  BOOL delayRespected

  // instance methods
  -[HMDSyncOperationOptions zoneName]
  -[HMDSyncOperationOptions .cxx_destruct]
  -[HMDSyncOperationOptions operationType]
  -[HMDSyncOperationOptions isDelayRespected]
  -[HMDSyncOperationOptions isCloudConflict]
  -[HMDSyncOperationOptions setCloudConflict:]
  -[HMDSyncOperationOptions setDelayRespected:]
  -[HMDSyncOperationOptions initWithOperationType:zoneName:cloudConflict:delayRespected:]
  -[HMDSyncOperationOptions initWithOperationType:zoneName:delayRespected:]


HMDSyncOperation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *identifier
 @property  NSString *zoneName
 @property  unsigned long operationType
 @property  HMFTimer *delayTimer
 @property  @? operationBlock
 @property  HMDSyncOperationOptions *options

  // class methods
  +[HMDSyncOperation queryDatabaseOperationWithBlock:]
  +[HMDSyncOperation cancelOperationWithBlock:]
  +[HMDSyncOperation postFetchOperationWithBlock:]
  +[HMDSyncOperation cloudPushSyncOperationWithBlock:]
  +[HMDSyncOperation cloudForcePushSyncOperationWithBlock:]
  +[HMDSyncOperation cloudVerifyAccountSyncOperationWithBlock:]
  +[HMDSyncOperation cloudFetchSyncOperationWithCloudConflict:block:]
  +[HMDSyncOperation cloudZonePushSyncOperation:block:]
  +[HMDSyncOperation cloudZoneFetchSyncOperation:cloudConflict:block:]
  +[HMDSyncOperation cloudOperation:withBlock:]

  // instance methods
  -[HMDSyncOperation zoneName]
  -[HMDSyncOperation delayTimer]
  -[HMDSyncOperation setDelayTimer:]
  -[HMDSyncOperation .cxx_destruct]
  -[HMDSyncOperation options]
  -[HMDSyncOperation identifier]
  -[HMDSyncOperation operationType]
  -[HMDSyncOperation operationBlock]
  -[HMDSyncOperation setOperationBlock:]
  -[HMDSyncOperation _initWithOptions:syncBlock:]


HMDKeyTransferAgent : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHomeManager *homeManager
 @property  NSUUID *uuid
 @property  NSString *progressState
 @property  HMFMessageDestination *messageDestination
 @property  unsigned long residentProvisioningStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDKeyTransferAgent logCategory]

  // instance methods
  -[HMDKeyTransferAgent messageTargetUUID]
  -[HMDKeyTransferAgent messageDestination]
  -[HMDKeyTransferAgent messageReceiveQueue]
  -[HMDKeyTransferAgent setWorkQueue:]
  -[HMDKeyTransferAgent logIdentifier]
  -[HMDKeyTransferAgent progressState]
  -[HMDKeyTransferAgent uuid]
  -[HMDKeyTransferAgent initWithHomeManager:]
  -[HMDKeyTransferAgent .cxx_destruct]
  -[HMDKeyTransferAgent workQueue]
  -[HMDKeyTransferAgent residentProvisioningStatus]
  -[HMDKeyTransferAgent setUuid:]
  -[HMDKeyTransferAgent setHomeManager:]
  -[HMDKeyTransferAgent homeManager]
  -[HMDKeyTransferAgent beginPairingWithCompletionHandler:]
  -[HMDKeyTransferAgent resetConfig]
  -[HMDKeyTransferAgent setProgressState:]


HMDMediaSystem : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDAccessorySettingsControllerDataSource, HMDAccessorySettingsControllerDelegate, NSSecureCoding, HMFDumpState, HMFLogging, HMDBackingStoreObjectProtocol, HMDHomeMessageReceiver>
 @property  NSString *configuredName
 @property  NSNotificationCenter *notificationCenter
 @property  NSUUID *uuid
 @property  NSString *name
 @property  HMDHome *home
 @property  HMDRoom *room
 @property  NSArray *components
 @property  NSArray *accessories
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDMediaSession *mediaSession
 @property  HMDApplicationData *appData
 @property  HMDAppleMediaAccessory *targetAccessory
 @property  HMDMediaSystemSymptomHandler *symptomsHandler
 @property  HMDAccessorySettingsController *settingsController
 @property  HMDBackingStore *backingStore
 @property  HMFActivity *setupActivity
 @property  double setupStartTimestamp
 @property  double homepodSetupLatency
 @property  double homepodSettingsCreationTimestamp
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDMediaSystem supportsSecureCoding]
  +[HMDMediaSystem logCategory]
  +[HMDMediaSystem hasMessageReceiverChildren]
  +[HMDMediaSystem _configureMediaSystemComponents:mediaSystem:]
  +[HMDMediaSystem sortMediaComponents:]

  // instance methods
  -[HMDMediaSystem serialize]
  -[HMDMediaSystem messageTargetUUID]
  -[HMDMediaSystem notificationCenter]
  -[HMDMediaSystem messageDestination]
  -[HMDMediaSystem _registerForNotifications]
  -[HMDMediaSystem messageReceiveQueue]
  -[HMDMediaSystem room]
  -[HMDMediaSystem setWorkQueue:]
  -[HMDMediaSystem logIdentifier]
  -[HMDMediaSystem attributeDescriptions]
  -[HMDMediaSystem uuid]
  -[HMDMediaSystem dealloc]
  -[HMDMediaSystem components]
  -[HMDMediaSystem privateDescription]
  -[HMDMediaSystem .cxx_destruct]
  -[HMDMediaSystem name]
  -[HMDMediaSystem setComponents:]
  -[HMDMediaSystem workQueue]
  -[HMDMediaSystem symptomsHandler]
  -[HMDMediaSystem setConfiguredName:]
  -[HMDMediaSystem setNotificationCenter:]
  -[HMDMediaSystem _updateAppData:]
  -[HMDMediaSystem encodeWithCoder:]
  -[HMDMediaSystem urlString]
  -[HMDMediaSystem setMsgDispatcher:]
  -[HMDMediaSystem msgDispatcher]
  -[HMDMediaSystem _registerForMessages]
  -[HMDMediaSystem isValid]
  -[HMDMediaSystem accessories]
  -[HMDMediaSystem backingStore]
  -[HMDMediaSystem home]
  -[HMDMediaSystem settingsController]
  -[HMDMediaSystem appData]
  -[HMDMediaSystem configuredName]
  -[HMDMediaSystem setName:]
  -[HMDMediaSystem dumpState]
  -[HMDMediaSystem initWithCoder:]
  -[HMDMediaSystem mediaSession]
  -[HMDMediaSystem setMediaSession:]
  -[HMDMediaSystem messageReceiverChildren]
  -[HMDMediaSystem transactionObjectUpdated:newValues:message:]
  -[HMDMediaSystem transactionObjectRemoved:message:]
  -[HMDMediaSystem modelObjectWithChangeType:]
  -[HMDMediaSystem modelForMediaSystem]
  -[HMDMediaSystem configureWithMessageDispatcher:]
  -[HMDMediaSystem setAppData:]
  -[HMDMediaSystem handleRemovedAccessory:]
  -[HMDMediaSystem homepodSettingsCreationTimestamp]
  -[HMDMediaSystem homepodSetupLatency]
  -[HMDMediaSystem backingStoreObjectsForVersion:]
  -[HMDMediaSystem setHomepodSetupLatency:]
  -[HMDMediaSystem setHomepodSettingsCreationTimestamp:]
  -[HMDMediaSystem assistantObject]
  -[HMDMediaSystem setupActivity]
  -[HMDMediaSystem initWithMediaSystemModel:home:]
  -[HMDMediaSystem unconfigureMediaSystemComponents]
  -[HMDMediaSystem targetAccessory]
  -[HMDMediaSystem handleHomeCloudZoneReadyNotification:]
  -[HMDMediaSystem setSetupActivity:]
  -[HMDMediaSystem setSetupStartTimestamp:]
  -[HMDMediaSystem setupStartTimestamp]
  -[HMDMediaSystem modelsToMakeSettingsForController:parentUUID:]
  -[HMDMediaSystem modelsToMigrateSettingsForController:]
  -[HMDMediaSystem accessorySettingsController:saveWithReason:]
  -[HMDMediaSystem accessorySettingsController:saveWithReason:model:]
  -[HMDMediaSystem remoteMessageDestinationForAccessorySettingsController:target:]
  -[HMDMediaSystem supportedMultiUserLanguageCodesForAccessorySettingsController:]
  -[HMDMediaSystem isMultiUserEnabledForAccessorySettingsController:]
  -[HMDMediaSystem assistantAccessControlModelWithRemovedAccessoriesForAccessorySettingsController:]
  -[HMDMediaSystem initWithUUID:configuredName:home:components:settingsControllerCreator:]
  -[HMDMediaSystem initWithUUID:configuredName:home:components:]
  -[HMDMediaSystem targetAccessoryBySerial]
  -[HMDMediaSystem auditMediaComponents]
  -[HMDMediaSystem _handleUpdateMediaSystem:]
  -[HMDMediaSystem _handleAppData:]
  -[HMDMediaSystem handleAccessorySoftwareUpdated:]
  -[HMDMediaSystem unconfigureMediaSystemComponents:]
  -[HMDMediaSystem configureMediaSystemComponents:]
  -[HMDMediaSystem _transactionMediaSystemUpdated:message:]
  -[HMDMediaSystem _appDataUpdated:message:]
  -[HMDMediaSystem _appDataRemoved:message:]
  -[HMDMediaSystem relayMessage:]


HMDMediaSystemModel : HMDBackingStoreModelObject
 @property  NSString *name
 @property  NSString *configuredName
 @property  NSArray *mediaSystemComponents
 @property  NSData *symptoms

  // class methods
  +[HMDMediaSystemModel properties]
  +[HMDMediaSystemModel schemaHashRoot]

  // instance methods
  -[HMDMediaSystemModel dependentUUIDs]


HMDMediaSystemModelExtended : HMDMediaSystemModel

HMDDoorbellChimeControllerContext : NSObject /usr/lib/libc++.1.dylib <HMDDoorbellChimeControllerContext>
 @property  HMDHAPAccessory *accessory
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSNotificationCenter *notificationCenter
 @property  HMDCharacteristicsAvailabilityListener *listener
 @property  BOOL featureEnabled
 @property  BOOL currentDevicePrimaryResident
 @property  Class doorbellBulletinUtilitiesClass
 @property  BOOL doorbellEnabledForHome
 @property  double doorbellChimeMaximumAnnounceDelay
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDDoorbellChimeControllerContext notificationCenter]
  -[HMDDoorbellChimeControllerContext listener]
  -[HMDDoorbellChimeControllerContext .cxx_destruct]
  -[HMDDoorbellChimeControllerContext workQueue]
  -[HMDDoorbellChimeControllerContext accessory]
  -[HMDDoorbellChimeControllerContext isFeatureEnabled]
  -[HMDDoorbellChimeControllerContext isCurrentDevicePrimaryResident]
  -[HMDDoorbellChimeControllerContext doorbellBulletinUtilitiesClass]
  -[HMDDoorbellChimeControllerContext postCULiveAction:]
  -[HMDDoorbellChimeControllerContext isDoorbellEnabledForHome]
  -[HMDDoorbellChimeControllerContext doorbellChimeMaximumAnnounceDelay]
  -[HMDDoorbellChimeControllerContext initWithWorkQueue:accessory:]


HMDDoorbellChimeController : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDCharacteristicsAvailabilityListenerDelegate>
 @property  NSSet *availableCharacteristics
 @property  NSDate *lastUnidentifiedChimeDate
 @property  <HMDDoorbellChimeControllerContext> *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDoorbellChimeController logCategory]

  // instance methods
  -[HMDDoorbellChimeController context]
  -[HMDDoorbellChimeController logIdentifier]
  -[HMDDoorbellChimeController init]
  -[HMDDoorbellChimeController clientIdentifier]
  -[HMDDoorbellChimeController configureWithContext:]
  -[HMDDoorbellChimeController dealloc]
  -[HMDDoorbellChimeController .cxx_destruct]
  -[HMDDoorbellChimeController setContext:]
  -[HMDDoorbellChimeController listener:didUpdateAvailableCharacteristics:]
  -[HMDDoorbellChimeController _handleCharacteristicsValueUpdated:]
  -[HMDDoorbellChimeController _notifyAllAccessoriesForDoorbellPressAndPlayChimeSound:attemptCloudPullIfNoPersonsFound:]
  -[HMDDoorbellChimeController handleCharacteristicsValueUpdated:]
  -[HMDDoorbellChimeController setLastUnidentifiedChimeDate:]
  -[HMDDoorbellChimeController lastUnidentifiedChimeDate]
  -[HMDDoorbellChimeController setAvailableCharacteristics:]
  -[HMDDoorbellChimeController availableCharacteristics]
  -[HMDDoorbellChimeController handleUpdatedPersonIdentificationInformation]


HMDDeviceController : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  <HMDDeviceControllerDelegate> *delegate
 @property  NSUUID *identifier
 @property  HMDDevice *device
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDeviceController logCategory]
  +[HMDDeviceController allocWithZone:]

  // instance methods
  -[HMDDeviceController device]
  -[HMDDeviceController logIdentifier]
  -[HMDDeviceController init]
  -[HMDDeviceController attributeDescriptions]
  -[HMDDeviceController dealloc]
  -[HMDDeviceController .cxx_destruct]
  -[HMDDeviceController initWithIdentifier:]
  -[HMDDeviceController identifier]
  -[HMDDeviceController initWithDevice:]
  -[HMDDeviceController setDelegate:]
  -[HMDDeviceController delegate]
  -[HMDDeviceController updateWithDevice:completionHandler:]


__HMDPlaceholderDeviceController : HMDDeviceController
  // class methods
  +[__HMDPlaceholderDeviceController sharedPlaceholder]

  // instance methods
  -[__HMDPlaceholderDeviceController init]
  -[__HMDPlaceholderDeviceController initWithDevice:]
  -[__HMDPlaceholderDeviceController updateWithDevice:completionHandler:]


__HMDDeviceController : HMDDeviceController
  // instance methods
  -[__HMDDeviceController init]
  -[__HMDDeviceController dealloc]
  -[__HMDDeviceController observeValueForKeyPath:ofObject:change:context:]
  -[__HMDDeviceController initWithDevice:]
  -[__HMDDeviceController updateWithDevice:completionHandler:]
  -[__HMDDeviceController __handleAddedAccount:]
  -[__HMDDeviceController __handleAddedDevice:]


__HMDCurrentDeviceController : HMDDeviceController
  // instance methods
  -[__HMDCurrentDeviceController init]
  -[__HMDCurrentDeviceController initWithIdentifier:]
  -[__HMDCurrentDeviceController initWithDevice:]
  -[__HMDCurrentDeviceController updateWithDevice:completionHandler:]
  -[__HMDCurrentDeviceController __handleDeviceUpdated:]


HMDHAPMetricsLogEvent : HMDLogEvent
 @property  unsigned long sentHTTPRequests
 @property  unsigned long receivedHTTPResponses
 @property  unsigned long receivedHTTPEvents
 @property  unsigned long accessoryServerInvalidations
 @property  unsigned long btleConnections
 @property  unsigned long btleDiscoveries
 @property  unsigned long btleConnectionPerReasons

  // class methods
  +[HMDHAPMetricsLogEvent uuid]

  // instance methods
  -[HMDHAPMetricsLogEvent initWithEventType:]
  -[HMDHAPMetricsLogEvent init]
  -[HMDHAPMetricsLogEvent .cxx_destruct]
  -[HMDHAPMetricsLogEvent updateWithHAPAccessoryServer:]
  -[HMDHAPMetricsLogEvent accessoryServerInvalidations]
  -[HMDHAPMetricsLogEvent sentHTTPRequests]
  -[HMDHAPMetricsLogEvent receivedHTTPResponses]
  -[HMDHAPMetricsLogEvent receivedHTTPEvents]
  -[HMDHAPMetricsLogEvent btleConnections]
  -[HMDHAPMetricsLogEvent btleDiscoveries]
  -[HMDHAPMetricsLogEvent btleConnectionPerReasons]


AWDHomeKitBroadcastEventKeyGeneration : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasReason
 @property  int reason
 @property  BOOL hasCertified
 @property  int certified

  // instance methods
  -[AWDHomeKitBroadcastEventKeyGeneration copyWithZone:]
  -[AWDHomeKitBroadcastEventKeyGeneration setReason:]
  -[AWDHomeKitBroadcastEventKeyGeneration setHasReason:]
  -[AWDHomeKitBroadcastEventKeyGeneration .cxx_destruct]
  -[AWDHomeKitBroadcastEventKeyGeneration timestamp]
  -[AWDHomeKitBroadcastEventKeyGeneration setTimestamp:]
  -[AWDHomeKitBroadcastEventKeyGeneration setHasTimestamp:]
  -[AWDHomeKitBroadcastEventKeyGeneration hasReason]
  -[AWDHomeKitBroadcastEventKeyGeneration readFrom:]
  -[AWDHomeKitBroadcastEventKeyGeneration writeTo:]
  -[AWDHomeKitBroadcastEventKeyGeneration isEqual:]
  -[AWDHomeKitBroadcastEventKeyGeneration reasonAsString:]
  -[AWDHomeKitBroadcastEventKeyGeneration StringAsReason:]
  -[AWDHomeKitBroadcastEventKeyGeneration copyTo:]
  -[AWDHomeKitBroadcastEventKeyGeneration dictionaryRepresentation]
  -[AWDHomeKitBroadcastEventKeyGeneration mergeFrom:]
  -[AWDHomeKitBroadcastEventKeyGeneration reason]
  -[AWDHomeKitBroadcastEventKeyGeneration hasTimestamp]
  -[AWDHomeKitBroadcastEventKeyGeneration vendorDetails]
  -[AWDHomeKitBroadcastEventKeyGeneration setVendorDetails:]
  -[AWDHomeKitBroadcastEventKeyGeneration hasVendorDetails]
  -[AWDHomeKitBroadcastEventKeyGeneration certified]
  -[AWDHomeKitBroadcastEventKeyGeneration setCertified:]
  -[AWDHomeKitBroadcastEventKeyGeneration setHasCertified:]
  -[AWDHomeKitBroadcastEventKeyGeneration hasCertified]
  -[AWDHomeKitBroadcastEventKeyGeneration certifiedAsString:]
  -[AWDHomeKitBroadcastEventKeyGeneration StringAsCertified:]


HMDMediaSessionState : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFDumpState>
 @property  long long playbackState
 @property  long long shuffleState
 @property  long long repeatState
 @property  NSNumber *volume
 @property  NSNumber *muted
 @property  NSString *mediaUniqueIdentifier
 @property  NSString *sessionIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDMediaSessionState playbackState]
  -[HMDMediaSessionState muted]
  -[HMDMediaSessionState setMuted:]
  -[HMDMediaSessionState volume]
  -[HMDMediaSessionState setVolume:]
  -[HMDMediaSessionState shuffleState]
  -[HMDMediaSessionState repeatState]
  -[HMDMediaSessionState mediaUniqueIdentifier]
  -[HMDMediaSessionState setShuffleState:]
  -[HMDMediaSessionState setRepeatState:]
  -[HMDMediaSessionState setMediaUniqueIdentifier:]
  -[HMDMediaSessionState .cxx_destruct]
  -[HMDMediaSessionState sessionIdentifier]
  -[HMDMediaSessionState isEqual:]
  -[HMDMediaSessionState initWithSessionIdentifier:]
  -[HMDMediaSessionState setPlaybackState:]
  -[HMDMediaSessionState dumpState]


HMDHomeManagerModel : HMDBackingStoreModelObject
 @property  NSString *controllerKeyIdentifier
 @property  NSString *primaryHomeUUID
 @property  NSDictionary *cloudZoneInformation

  // class methods
  +[HMDHomeManagerModel properties]


HMDProcessLaunchInfoLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  NSString *dataSyncState
 @property  double timeSincePreviousProcessLaunch
 @property  double timeSinceLaunchToDataSyncStateGood

  // class methods
  +[HMDProcessLaunchInfoLogEvent uuid]

  // instance methods
  -[HMDProcessLaunchInfoLogEvent eventName]
  -[HMDProcessLaunchInfoLogEvent .cxx_destruct]
  -[HMDProcessLaunchInfoLogEvent dataSyncState]
  -[HMDProcessLaunchInfoLogEvent serializedEvent]
  -[HMDProcessLaunchInfoLogEvent timeSincePreviousProcessLaunch]
  -[HMDProcessLaunchInfoLogEvent timeSinceLaunchToDataSyncStateGood]
  -[HMDProcessLaunchInfoLogEvent initWithDataSyncState:timeSincePreviousProcessLaunch:timeSinceLaunchToDataSyncStateGood:]


AWDHomeKitUpdateEventTrigger : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasResultErrorCode
 @property  unsigned int resultErrorCode
 @property  BOOL hasUpdateType
 @property  int updateType
 @property  BOOL hasRequestOrigin
 @property  int requestOrigin

  // instance methods
  -[AWDHomeKitUpdateEventTrigger copyWithZone:]
  -[AWDHomeKitUpdateEventTrigger timestamp]
  -[AWDHomeKitUpdateEventTrigger updateType]
  -[AWDHomeKitUpdateEventTrigger setTimestamp:]
  -[AWDHomeKitUpdateEventTrigger setHasTimestamp:]
  -[AWDHomeKitUpdateEventTrigger readFrom:]
  -[AWDHomeKitUpdateEventTrigger writeTo:]
  -[AWDHomeKitUpdateEventTrigger isEqual:]
  -[AWDHomeKitUpdateEventTrigger copyTo:]
  -[AWDHomeKitUpdateEventTrigger dictionaryRepresentation]
  -[AWDHomeKitUpdateEventTrigger mergeFrom:]
  -[AWDHomeKitUpdateEventTrigger hasTimestamp]
  -[AWDHomeKitUpdateEventTrigger setUpdateType:]
  -[AWDHomeKitUpdateEventTrigger setRequestOrigin:]
  -[AWDHomeKitUpdateEventTrigger setResultErrorCode:]
  -[AWDHomeKitUpdateEventTrigger setHasResultErrorCode:]
  -[AWDHomeKitUpdateEventTrigger hasResultErrorCode]
  -[AWDHomeKitUpdateEventTrigger resultErrorCode]
  -[AWDHomeKitUpdateEventTrigger requestOrigin]
  -[AWDHomeKitUpdateEventTrigger setHasRequestOrigin:]
  -[AWDHomeKitUpdateEventTrigger hasRequestOrigin]
  -[AWDHomeKitUpdateEventTrigger requestOriginAsString:]
  -[AWDHomeKitUpdateEventTrigger StringAsRequestOrigin:]
  -[AWDHomeKitUpdateEventTrigger setHasUpdateType:]
  -[AWDHomeKitUpdateEventTrigger hasUpdateType]
  -[AWDHomeKitUpdateEventTrigger updateTypeAsString:]
  -[AWDHomeKitUpdateEventTrigger StringAsUpdateType:]


HMObjectCacheNSString : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMObjectCacheNSString enabled]
  +[HMObjectCacheNSString cachedInstanceForString:]
  +[HMObjectCacheNSString setOfCachedInstancesForStrings:]


HMDCameraVideoParameterSelection : HMDCameraParameterSelectionBase
 @property  HMDSupportedVideoStreamConfiguration *supportedVideoStreamConfiguration
 @property  HMDSupportedRTPConfiguration *rtpConfiguration
 @property  NSNumber *syncSource
 @property  HMDSelectedVideoParameters *selectedVideoParameters
 @property  HMDStreamingCapabilities *streamingCapabilities
 @property  NSArray *videoCodecsPreference
 @property  NSArray *h264ProfilesPreference
 @property  NSArray *h264LevelsPreference
 @property  NSArray *h264PacketizationPreference
 @property  NSArray *videoResolutionsPreference
 @property  NSArray *validVideoParameterCombinations
 @property  HMDCameraVideoTierParameters *videoTierParameters
 @property  HMDH264Profile *selectedProfile
 @property  HMDH264Level *selectedLevel
 @property  HMDPacketizationMode *selectedPacketizationMode
 @property  NSNumber *selectedFramerate
 @property  HMDCameraVideoTier *selectedVideoTier
 @property  HMDVideoCodec *selectedCodecType

  // class methods
  +[HMDCameraVideoParameterSelection logCategory]

  // instance methods
  -[HMDCameraVideoParameterSelection logIdentifier]
  -[HMDCameraVideoParameterSelection .cxx_destruct]
  -[HMDCameraVideoParameterSelection syncSource]
  -[HMDCameraVideoParameterSelection streamingCapabilities]
  -[HMDCameraVideoParameterSelection rtpConfiguration]
  -[HMDCameraVideoParameterSelection createSRTPParamters]
  -[HMDCameraVideoParameterSelection videoTierParameters]
  -[HMDCameraVideoParameterSelection supportedVideoStreamConfiguration]
  -[HMDCameraVideoParameterSelection _generateAllCombinations]
  -[HMDCameraVideoParameterSelection _setVideoResolutionPreference]
  -[HMDCameraVideoParameterSelection videoCodecsPreference]
  -[HMDCameraVideoParameterSelection h264ProfilesPreference]
  -[HMDCameraVideoParameterSelection h264LevelsPreference]
  -[HMDCameraVideoParameterSelection h264PacketizationPreference]
  -[HMDCameraVideoParameterSelection videoResolutionsPreference]
  -[HMDCameraVideoParameterSelection _selectParametersFromCodec:profiles:levels:packetizationModes:videoAttributes:]
  -[HMDCameraVideoParameterSelection validVideoParameterCombinations]
  -[HMDCameraVideoParameterSelection setSelectedCodecType:]
  -[HMDCameraVideoParameterSelection setSelectedProfile:]
  -[HMDCameraVideoParameterSelection setSelectedLevel:]
  -[HMDCameraVideoParameterSelection setSelectedVideoTier:]
  -[HMDCameraVideoParameterSelection setSelectedFramerate:]
  -[HMDCameraVideoParameterSelection setSelectedPacketizationMode:]
  -[HMDCameraVideoParameterSelection selectedVideoTier]
  -[HMDCameraVideoParameterSelection selectedProfile]
  -[HMDCameraVideoParameterSelection selectedLevel]
  -[HMDCameraVideoParameterSelection selectedPacketizationMode]
  -[HMDCameraVideoParameterSelection selectedCodecType]
  -[HMDCameraVideoParameterSelection initWithSessionID:videoTierParameters:supportedVideoConfiguration:supportedRTPConfiguration:streamingCapabilities:]
  -[HMDCameraVideoParameterSelection selectVideoParameters]
  -[HMDCameraVideoParameterSelection createSelectedVideoParameters]
  -[HMDCameraVideoParameterSelection createReselectedVideoParameters:]
  -[HMDCameraVideoParameterSelection selectedVideoParameters]
  -[HMDCameraVideoParameterSelection setSelectedVideoParameters:]
  -[HMDCameraVideoParameterSelection selectedFramerate]


HMDCameraRecordingReachabilityEventModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSNumber *reachableField
 @property  NSDate *dateOfOccurrence
 @property  BOOL reachable

  // class methods
  +[HMDCameraRecordingReachabilityEventModel hmbExternalRecordType]
  +[HMDCameraRecordingReachabilityEventModel hmbProperties]

  // instance methods
  -[HMDCameraRecordingReachabilityEventModel setReachable:]
  -[HMDCameraRecordingReachabilityEventModel createEvent]
  -[HMDCameraRecordingReachabilityEventModel reachable]


HMDMediaPlaybackActionEvent : HMDLogEvent <HMDCoreAnalyticsLogging, HMDCoreDuetLogEvent>
 @property  unsigned long duetEventType
 @property  NSArray *eventDataToLog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isPlaybackArchivePresent
 @property  NSNumber *playbackStateNumber
 @property  NSNumber *volumeNumber
 @property  NSNumber *sourceNumber
 @property  unsigned long numberOfMediaProfiles
 @property  NSArray *accessories
 @property  unsigned long numAccessoriesInHome
 @property  unsigned long numNonEmptyScenesInHome
 @property  NSString *playbackStateString
 @property  NSString *sourceString

  // class methods
  +[HMDMediaPlaybackActionEvent identifier]

  // instance methods
  -[HMDMediaPlaybackActionEvent eventName]
  -[HMDMediaPlaybackActionEvent sourceString]
  -[HMDMediaPlaybackActionEvent .cxx_destruct]
  -[HMDMediaPlaybackActionEvent accessories]
  -[HMDMediaPlaybackActionEvent serializedEvent]
  -[HMDMediaPlaybackActionEvent numAccessoriesInHome]
  -[HMDMediaPlaybackActionEvent numNonEmptyScenesInHome]
  -[HMDMediaPlaybackActionEvent initWithIsPlaybackArchivePresent:playbackStateNumber:volumeNumber:sourceNumber:accessories:]
  -[HMDMediaPlaybackActionEvent isPlaybackArchivePresent]
  -[HMDMediaPlaybackActionEvent numberOfMediaProfiles]
  -[HMDMediaPlaybackActionEvent volumeNumber]
  -[HMDMediaPlaybackActionEvent playbackStateString]
  -[HMDMediaPlaybackActionEvent playbackStateNumber]
  -[HMDMediaPlaybackActionEvent sourceNumber]
  -[HMDMediaPlaybackActionEvent duetEventType]
  -[HMDMediaPlaybackActionEvent eventDataToLog]
  -[HMDMediaPlaybackActionEvent metadataForAccessoryAtIndex:]
  -[HMDMediaPlaybackActionEvent valueForAccessoryAtIndex:]


HMDCameraSignificantEventFaceClassificationModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSUUID *personManagerUUID
 @property  NSUUID *personUUID
 @property  NSString *personName
 @property  NSUUID *unassociatedFaceCropUUID

  // class methods
  +[HMDCameraSignificantEventFaceClassificationModel hmbExternalRecordType]
  +[HMDCameraSignificantEventFaceClassificationModel hmbProperties]

  // instance methods
  -[HMDCameraSignificantEventFaceClassificationModel createFaceClassification]


HMDCloudPhotosSettingObserver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  BOOL cloudPhotosEnabled
 @property  @? accountFactory
 @property  NSNotificationCenter *notificationCenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCloudPhotosSettingObserver sharedInstance]
  +[HMDCloudPhotosSettingObserver logCategory]

  // instance methods
  -[HMDCloudPhotosSettingObserver notificationCenter]
  -[HMDCloudPhotosSettingObserver init]
  -[HMDCloudPhotosSettingObserver .cxx_destruct]
  -[HMDCloudPhotosSettingObserver accountFactory]
  -[HMDCloudPhotosSettingObserver isCloudPhotosEnabled]
  -[HMDCloudPhotosSettingObserver initWithAccountFactory:notificationCenter:]
  -[HMDCloudPhotosSettingObserver handleAccountStoreDidChangeNotification:]
  -[HMDCloudPhotosSettingObserver fetchCloudPhotosEnabled]
  -[HMDCloudPhotosSettingObserver setCloudPhotosEnabled:]


AWDHomeKitValue : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasStringVal
 @property  NSString *stringVal
 @property  BOOL hasIntVal
 @property  long long intVal
 @property  BOOL hasFloatVal
 @property  float floatVal
 @property  BOOL hasDoubleVal
 @property  double doubleVal
 @property  BOOL hasBoolVal
 @property  BOOL boolVal
 @property  BOOL hasDataVal
 @property  NSData *dataVal

  // instance methods
  -[AWDHomeKitValue copyWithZone:]
  -[AWDHomeKitValue .cxx_destruct]
  -[AWDHomeKitValue intVal]
  -[AWDHomeKitValue readFrom:]
  -[AWDHomeKitValue writeTo:]
  -[AWDHomeKitValue boolVal]
  -[AWDHomeKitValue dataVal]
  -[AWDHomeKitValue isEqual:]
  -[AWDHomeKitValue copyTo:]
  -[AWDHomeKitValue dictionaryRepresentation]
  -[AWDHomeKitValue mergeFrom:]
  -[AWDHomeKitValue setStringVal:]
  -[AWDHomeKitValue setDataVal:]
  -[AWDHomeKitValue setIntVal:]
  -[AWDHomeKitValue setFloatVal:]
  -[AWDHomeKitValue setDoubleVal:]
  -[AWDHomeKitValue setBoolVal:]
  -[AWDHomeKitValue hasStringVal]
  -[AWDHomeKitValue setHasIntVal:]
  -[AWDHomeKitValue hasIntVal]
  -[AWDHomeKitValue setHasFloatVal:]
  -[AWDHomeKitValue hasFloatVal]
  -[AWDHomeKitValue setHasDoubleVal:]
  -[AWDHomeKitValue hasDoubleVal]
  -[AWDHomeKitValue setHasBoolVal:]
  -[AWDHomeKitValue hasBoolVal]
  -[AWDHomeKitValue hasDataVal]
  -[AWDHomeKitValue stringVal]
  -[AWDHomeKitValue floatVal]
  -[AWDHomeKitValue doubleVal]


HMDCameraClipsQuotaServerNotification : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *containerIdentifier
 @property  long long reason
 @property  NSString *requestID
 @property  NSString *userDSID
 @property  NSDictionary *dictionaryRepresentation

  // instance methods
  -[HMDCameraClipsQuotaServerNotification requestID]
  -[HMDCameraClipsQuotaServerNotification containerIdentifier]
  -[HMDCameraClipsQuotaServerNotification initWithDictionaryRepresentation:]
  -[HMDCameraClipsQuotaServerNotification .cxx_destruct]
  -[HMDCameraClipsQuotaServerNotification userDSID]
  -[HMDCameraClipsQuotaServerNotification dictionaryRepresentation]
  -[HMDCameraClipsQuotaServerNotification reason]
  -[HMDCameraClipsQuotaServerNotification initWithContainerIdentifier:reason:requestID:userDSID:]


HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMBLocalZoneID>
 @property  NSData *token
 @property  NSString *name
 @property  NSArray *labels
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID sharedInstance]

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID initWithToken:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID copyWithZone:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID labels]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID name]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorLocalZoneID token]


HMDMPCResolveDestinationOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  @? resolveDestinationCompletionBlock
 @property  MPCAssistantMutableRemoteControlDestination *resolvedDestination
 @property  long long mediaApplicationDestination
 @property  BOOL forceSingleGroup
 @property  NSArray *hashedRouteIDs
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMPCResolveDestinationOperation shortDescription]

  // instance methods
  -[HMDMPCResolveDestinationOperation main]
  -[HMDMPCResolveDestinationOperation attributeDescriptions]
  -[HMDMPCResolveDestinationOperation privateDescription]
  -[HMDMPCResolveDestinationOperation .cxx_destruct]
  -[HMDMPCResolveDestinationOperation setCompletionBlock:]
  -[HMDMPCResolveDestinationOperation shortDescription]
  -[HMDMPCResolveDestinationOperation mediaApplicationDestination]
  -[HMDMPCResolveDestinationOperation hashedRouteIDs]
  -[HMDMPCResolveDestinationOperation resolveDestinationCompletionBlock]
  -[HMDMPCResolveDestinationOperation resolvedDestination]
  -[HMDMPCResolveDestinationOperation initWithHashedRouteIDs:mediaApplicationDestination:forceSingleGroup:completion:]
  -[HMDMPCResolveDestinationOperation setResolvedDestination:]
  -[HMDMPCResolveDestinationOperation setResolveDestinationCompletionBlock:]
  -[HMDMPCResolveDestinationOperation forceSingleGroup]


HMDAccessoryDiagnosticsSettings : NSObject /usr/lib/libc++.1.dylib
 @property  HMDService *diagnosticsService
 @property  HAPSupportedDiagnosticsSnapshot *currentSnapshot
 @property  NSString *transport

  // instance methods
  -[HMDAccessoryDiagnosticsSettings initWithService:]
  -[HMDAccessoryDiagnosticsSettings transport]
  -[HMDAccessoryDiagnosticsSettings attributeDescriptions]
  -[HMDAccessoryDiagnosticsSettings .cxx_destruct]
  -[HMDAccessoryDiagnosticsSettings setCurrentSnapshot:]
  -[HMDAccessoryDiagnosticsSettings currentSnapshot]
  -[HMDAccessoryDiagnosticsSettings diagnosticsService]


HMDRemoteLoginMessageSender : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSUUID *target
 @property  HMDDevice *device
 @property  HMDAppleMediaAccessory *accessory
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *messageDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginMessageSender logCategory]

  // instance methods
  -[HMDRemoteLoginMessageSender device]
  -[HMDRemoteLoginMessageSender logIdentifier]
  -[HMDRemoteLoginMessageSender target]
  -[HMDRemoteLoginMessageSender .cxx_destruct]
  -[HMDRemoteLoginMessageSender workQueue]
  -[HMDRemoteLoginMessageSender accessory]
  -[HMDRemoteLoginMessageSender messageDispatcher]
  -[HMDRemoteLoginMessageSender sendRemoteMessageWithName:payload:responseHandler:]
  -[HMDRemoteLoginMessageSender initWithTarget:accessory:device:workQueue:messageDispatcher:]


HMDHomePresenceBase : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDHomeMessageReceiver>
 @property  HMDHome *home
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logString
 @property  NSUUID *uuid
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDNotificationRegistration *notificationRegistration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDHomePresenceBase logCategory]
  +[HMDHomePresenceBase hasMessageReceiverChildren]

  // instance methods
  -[HMDHomePresenceBase logString]
  -[HMDHomePresenceBase messageTargetUUID]
  -[HMDHomePresenceBase messageReceiveQueue]
  -[HMDHomePresenceBase setWorkQueue:]
  -[HMDHomePresenceBase logIdentifier]
  -[HMDHomePresenceBase uuid]
  -[HMDHomePresenceBase .cxx_destruct]
  -[HMDHomePresenceBase workQueue]
  -[HMDHomePresenceBase setUuid:]
  -[HMDHomePresenceBase setHome:]
  -[HMDHomePresenceBase setMsgDispatcher:]
  -[HMDHomePresenceBase msgDispatcher]
  -[HMDHomePresenceBase timerFired:]
  -[HMDHomePresenceBase _registerForMessages]
  -[HMDHomePresenceBase home]
  -[HMDHomePresenceBase configure:messageDispatcher:]
  -[HMDHomePresenceBase residentChanged]
  -[HMDHomePresenceBase handleHomeDataLoadedNotification:]
  -[HMDHomePresenceBase notificationRegistration]
  -[HMDHomePresenceBase _initialize:]
  -[HMDHomePresenceBase setLogString:]


_HMDCameraStreamTrackerAssertion : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDCameraStreamTracker *streamTracker
 @property  HMDCameraStreamSessionID *streamSessionID

  // instance methods
  -[_HMDCameraStreamTrackerAssertion streamSessionID]
  -[_HMDCameraStreamTrackerAssertion dealloc]
  -[_HMDCameraStreamTrackerAssertion .cxx_destruct]
  -[_HMDCameraStreamTrackerAssertion streamTracker]
  -[_HMDCameraStreamTrackerAssertion initWithStreamTracker:streamIdentifier:]


HMDCameraStreamTracker : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSMutableSet *currentStreamIdentifiers
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraStreamTracker logCategory]
  +[HMDCameraStreamTracker sharedTracker]

  // instance methods
  -[HMDCameraStreamTracker init]
  -[HMDCameraStreamTracker .cxx_destruct]
  -[HMDCameraStreamTracker workQueue]
  -[HMDCameraStreamTracker startStream:]
  -[HMDCameraStreamTracker endStream:]
  -[HMDCameraStreamTracker currentStreamIdentifiers]
  -[HMDCameraStreamTracker setCurrentStreamIdentifiers:]


HMDSettingsControllerDependency : NSObject /usr/lib/libc++.1.dylib <HMDSettingsControllerDependency>
 @property  <HMDSettingsBackingStoreController> *backingStoreController
 @property  <HMDSettingsMetadataParserProtocol> *metadataParser
 @property  NSString *metadataFileName
 @property  NSObject<OS_dispatch_queue> *queue
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMDSettingsMessageHandler<HMDSettingsMessageHandlerProtocol> *internalMessageHandler
 @property  <HMDSettingsMessageHandlerProtocol> *messageHandler
 @property  <HMDSettingTransactionReceiverProtocol> *transactionReceiver
 @property  NSString *codingKey
 @property  NSUUID *parentIdentifier
 @property  NSString *logIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDSettingsControllerDependency messageHandler]
  -[HMDSettingsControllerDependency logIdentifier]
  -[HMDSettingsControllerDependency codingKey]
  -[HMDSettingsControllerDependency .cxx_destruct]
  -[HMDSettingsControllerDependency queue]
  -[HMDSettingsControllerDependency loadMetadata]
  -[HMDSettingsControllerDependency parentIdentifier]
  -[HMDSettingsControllerDependency messageDispatcher]
  -[HMDSettingsControllerDependency setMessageDispatcher:]
  -[HMDSettingsControllerDependency transactionReceiver]
  -[HMDSettingsControllerDependency setTransactionReceiver:]
  -[HMDSettingsControllerDependency createSettingRootGroupModelWithParentModelID:]
  -[HMDSettingsControllerDependency createSettingGroupModelWithName:parent:]
  -[HMDSettingsControllerDependency createSettingModelWithName:parent:type:properties:]
  -[HMDSettingsControllerDependency settingValueForValue:type:constraintModels:error:]
  -[HMDSettingsControllerDependency backingStoreController]
  -[HMDSettingsControllerDependency settingModelForUpdateWithIdentifier:parentIdentifier:value:]
  -[HMDSettingsControllerDependency metadataParser]
  -[HMDSettingsControllerDependency setBackingStoreController:]
  -[HMDSettingsControllerDependency internalMessageHandler]
  -[HMDSettingsControllerDependency metadataFileName]
  -[HMDSettingsControllerDependency initWithParentUUID:logName:queue:metadataFileName:codingKey:]
  -[HMDSettingsControllerDependency configureWithHome:messageDispatcher:backingStoreController:isCurrentUser:]
  -[HMDSettingsControllerDependency setInternalMessageHandler:]


HMDCameraSnapshotMonitorEvents : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDHomeMessageReceiver, HMFLogging, HMFTimerDelegate, HMDCharacteristicsAvailabilityListenerDelegate>
 @property  _HMCameraUserSettings *currentCameraSettings
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSUUID *uniqueIdentifier
 @property  HMDCameraSnapshotManager *snapshotManager
 @property  NSMutableSet *snapShotNotificationResponseTimers
 @property  HMDHAPAccessory *accessory
 @property  NSString *bulletinImagesDirectory
 @property  NSString *logID
 @property  <HMDCameraBulletinBoard> *bulletinBoard
 @property  HMDNotificationRegistration *notificationRegistration
 @property  NSSet *bulletinSnapshotCharacteristics
 @property  NSSet *proactiveSnapshotCharacterisitics
 @property  HMDCharacteristicsAvailabilityListener *characteristicsAvailabilityListener
 @property  NSString *clientIdentifier
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotMonitorEvents logCategory]
  +[HMDCameraSnapshotMonitorEvents hasMessageReceiverChildren]
  +[HMDCameraSnapshotMonitorEvents isDoorbellServiceInputCharacteristic:]
  +[HMDCameraSnapshotMonitorEvents isMotionServiceDetectedCharacteristic:]

  // instance methods
  -[HMDCameraSnapshotMonitorEvents messageTargetUUID]
  -[HMDCameraSnapshotMonitorEvents messageReceiveQueue]
  -[HMDCameraSnapshotMonitorEvents timerDidFire:]
  -[HMDCameraSnapshotMonitorEvents logID]
  -[HMDCameraSnapshotMonitorEvents logIdentifier]
  -[HMDCameraSnapshotMonitorEvents clientIdentifier]
  -[HMDCameraSnapshotMonitorEvents dealloc]
  -[HMDCameraSnapshotMonitorEvents .cxx_destruct]
  -[HMDCameraSnapshotMonitorEvents workQueue]
  -[HMDCameraSnapshotMonitorEvents snapshotManager]
  -[HMDCameraSnapshotMonitorEvents uniqueIdentifier]
  -[HMDCameraSnapshotMonitorEvents msgDispatcher]
  -[HMDCameraSnapshotMonitorEvents accessory]
  -[HMDCameraSnapshotMonitorEvents registerForMessages]
  -[HMDCameraSnapshotMonitorEvents handleCharacteristicsChangedNotification:]
  -[HMDCameraSnapshotMonitorEvents __handleCharacteristicsChangedPayload:]
  -[HMDCameraSnapshotMonitorEvents bulletinBoard]
  -[HMDCameraSnapshotMonitorEvents handleBulletinNotificationEnableStateDidChange:]
  -[HMDCameraSnapshotMonitorEvents characteristicsAvailabilityListener]
  -[HMDCameraSnapshotMonitorEvents listener:didUpdateAvailableCharacteristics:]
  -[HMDCameraSnapshotMonitorEvents notificationRegistration]
  -[HMDCameraSnapshotMonitorEvents handleRemoteNotificationGenerated:]
  -[HMDCameraSnapshotMonitorEvents handleCameraSettingsDidUpdateNotification:]
  -[HMDCameraSnapshotMonitorEvents currentCameraSettings]
  -[HMDCameraSnapshotMonitorEvents _enableNotificationsForCharacteristics:cameraSettings:]
  -[HMDCameraSnapshotMonitorEvents _canEnableNotificationForCharacteristic:cameraSettings:]
  -[HMDCameraSnapshotMonitorEvents proactiveSnapshotCharacterisitics]
  -[HMDCameraSnapshotMonitorEvents bulletinSnapshotCharacteristics]
  -[HMDCameraSnapshotMonitorEvents _handleUpdatedBulletinSnapshotCharacteristics:]
  -[HMDCameraSnapshotMonitorEvents _handleUpdatedProactiveSnapshotCharacteristics:]
  -[HMDCameraSnapshotMonitorEvents _handleHomedRelaunchRegistration:updatedCharacteristics:]
  -[HMDCameraSnapshotMonitorEvents _handleBulletinNotificationEnableStateDidChange:]
  -[HMDCameraSnapshotMonitorEvents setBulletinSnapshotCharacteristics:]
  -[HMDCameraSnapshotMonitorEvents setProactiveSnapshotCharacterisitics:]
  -[HMDCameraSnapshotMonitorEvents _characteristicsUpdated:modifiedCharacteristics:]
  -[HMDCameraSnapshotMonitorEvents _handleSnapshotResponse:cameraSessionID:changedCharacteristics:response:responseTimer:]
  -[HMDCameraSnapshotMonitorEvents snapShotNotificationResponseTimers]
  -[HMDCameraSnapshotMonitorEvents _insertUpdateOrRemoveBulletins:forChangedCharacteristics:snapshotData:]
  -[HMDCameraSnapshotMonitorEvents bulletinImagesDirectory]
  -[HMDCameraSnapshotMonitorEvents _sendReleaseSnapshot:]
  -[HMDCameraSnapshotMonitorEvents processPostedBulletin:responseTimer:]
  -[HMDCameraSnapshotMonitorEvents _removeBulletins:sessionID:]
  -[HMDCameraSnapshotMonitorEvents _handleRemoteNotification:]
  -[HMDCameraSnapshotMonitorEvents initWithSnapshotManager:accessory:workQueue:msgDispatcher:]
  -[HMDCameraSnapshotMonitorEvents setSnapShotNotificationResponseTimers:]
  -[HMDCameraSnapshotMonitorEvents setCharacteristicsAvailabilityListener:]


HMDRoom : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDHomeMessageReceiver, HMFDumpState, NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  NSString *name
 @property  NSString *serializedIdentifier
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDApplicationData *appData
 @property  NSUUID *uuid
 @property  HMDHome *home
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDRoom supportsSecureCoding]
  +[HMDRoom logCategory]
  +[HMDRoom hasMessageReceiverChildren]

  // instance methods
  -[HMDRoom messageTargetUUID]
  -[HMDRoom messageDestination]
  -[HMDRoom messageReceiveQueue]
  -[HMDRoom setWorkQueue:]
  -[HMDRoom logIdentifier]
  -[HMDRoom attributeDescriptions]
  -[HMDRoom uuid]
  -[HMDRoom dealloc]
  -[HMDRoom privateDescription]
  -[HMDRoom .cxx_destruct]
  -[HMDRoom name]
  -[HMDRoom workQueue]
  -[HMDRoom setHome:]
  -[HMDRoom encodeWithCoder:]
  -[HMDRoom urlString]
  -[HMDRoom setMsgDispatcher:]
  -[HMDRoom msgDispatcher]
  -[HMDRoom _registerForMessages]
  -[HMDRoom home]
  -[HMDRoom appData]
  -[HMDRoom logEvent:]
  -[HMDRoom setName:]
  -[HMDRoom dumpState]
  -[HMDRoom initWithCoder:]
  -[HMDRoom _handleRenameRequest:]
  -[HMDRoom transactionObjectUpdated:newValues:message:]
  -[HMDRoom transactionObjectRemoved:message:]
  -[HMDRoom backingStoreObjects:]
  -[HMDRoom _handleRemoveAppDataModel:message:]
  -[HMDRoom _handleUpdateAppDataModel:message:]
  -[HMDRoom initWithName:uuid:home:]
  -[HMDRoom setAppData:]
  -[HMDRoom configure:queue:]
  -[HMDRoom assistantObject]
  -[HMDRoom serializedIdentifier]
  -[HMDRoom _logEventWithViewInformation:source:]
  -[HMDRoom _handleUpdateRoomModel:message:]


HMDRoomModel : HMDBackingStoreModelObject
 @property  NSString *name

  // class methods
  +[HMDRoomModel properties]


HMDDataStreamHAPPendingWrite : NSObject /usr/lib/libc++.1.dylib
 @property  NSData *data
 @property  @? completion
 @property  unsigned long bytesWritten

  // instance methods
  -[HMDDataStreamHAPPendingWrite isComplete]
  -[HMDDataStreamHAPPendingWrite bytesWritten]
  -[HMDDataStreamHAPPendingWrite completion]
  -[HMDDataStreamHAPPendingWrite .cxx_destruct]
  -[HMDDataStreamHAPPendingWrite data]
  -[HMDDataStreamHAPPendingWrite setBytesWritten:]
  -[HMDDataStreamHAPPendingWrite initWithData:completion:]
  -[HMDDataStreamHAPPendingWrite popNextFrameUpToMaxLength:]


HMDDataStreamHAPTransport : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDDataStreamTransport>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHAPAccessory *accessory
 @property  HMDCharacteristic *transportCharacteristic
 @property  HMDCharacteristic *interruptCharacteristic
 @property  NSNumber *sessionIdentifier
 @property  unsigned long maxControllerTransportMTU
 @property  HMDDataStreamFrameReader *byteReader
 @property  NSString *logIdentifier
 @property  NSString *notificationClientIdentifier
 @property  NSMutableArray *pendingWrites
 @property  BOOL isWriteInProgress
 @property  BOOL lastAccessoryRequestToSendFlag
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HMDDataStreamTransportDelegate> *delegate

  // class methods
  +[HMDDataStreamHAPTransport logCategory]

  // instance methods
  -[HMDDataStreamHAPTransport connect]
  -[HMDDataStreamHAPTransport logIdentifier]
  -[HMDDataStreamHAPTransport dealloc]
  -[HMDDataStreamHAPTransport .cxx_destruct]
  -[HMDDataStreamHAPTransport close]
  -[HMDDataStreamHAPTransport workQueue]
  -[HMDDataStreamHAPTransport _registerForMessages]
  -[HMDDataStreamHAPTransport sessionIdentifier]
  -[HMDDataStreamHAPTransport accessory]
  -[HMDDataStreamHAPTransport setDelegate:]
  -[HMDDataStreamHAPTransport _isRunning]
  -[HMDDataStreamHAPTransport pendingWrites]
  -[HMDDataStreamHAPTransport delegate]
  -[HMDDataStreamHAPTransport maxControllerTransportMTU]
  -[HMDDataStreamHAPTransport initWithAccessory:sessionIdentifier:maxControllerTransportMTU:workQueue:logIdentifier:]
  -[HMDDataStreamHAPTransport sendRawFrame:completion:]
  -[HMDDataStreamHAPTransport _handleReceivedData:]
  -[HMDDataStreamHAPTransport _handleCharacteristicsValueUpdated:]
  -[HMDDataStreamHAPTransport transportCharacteristic]
  -[HMDDataStreamHAPTransport _teardownSessionWithError:]
  -[HMDDataStreamHAPTransport setTransportCharacteristic:]
  -[HMDDataStreamHAPTransport setInterruptCharacteristic:]
  -[HMDDataStreamHAPTransport _notifyDelegateDidOpen]
  -[HMDDataStreamHAPTransport _deregisterForMessages]
  -[HMDDataStreamHAPTransport _cancelAllPendingWritesWithError:]
  -[HMDDataStreamHAPTransport setIsWriteInProgress:]
  -[HMDDataStreamHAPTransport _notifyDelegateDidClose]
  -[HMDDataStreamHAPTransport _notifyDelegateDidFailWithError:]
  -[HMDDataStreamHAPTransport _stopWithError:]
  -[HMDDataStreamHAPTransport _buildWriteRequestWithError:shouldForceClose:]
  -[HMDDataStreamHAPTransport notificationClientIdentifier]
  -[HMDDataStreamHAPTransport interruptCharacteristic]
  -[HMDDataStreamHAPTransport _doNextWriteOperation]
  -[HMDDataStreamHAPTransport _getPendingWritesUpToLength:]
  -[HMDDataStreamHAPTransport lastAccessoryRequestToSendFlag]
  -[HMDDataStreamHAPTransport isWriteInProgress]
  -[HMDDataStreamHAPTransport _stopTransportForWriteFailureError:]
  -[HMDDataStreamHAPTransport _removeAndMarkCompleteAllCompletedWrites]
  -[HMDDataStreamHAPTransport _handleCompletionWithResponseTuples:]
  -[HMDDataStreamHAPTransport setLastAccessoryRequestToSendFlag:]
  -[HMDDataStreamHAPTransport _notifyWriteOperation:didCompleteWithError:]
  -[HMDDataStreamHAPTransport byteReader]
  -[HMDDataStreamHAPTransport _notifyDelegateDidReceiveFrame:]
  -[HMDDataStreamHAPTransport _handleInterruptCharacteristicValue:]


_HMDHTTPServerClientConnection : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDHTTPDevice *device
 @property  HMFHTTPClientConnection *connection
 @property  NSOperationQueue *requestOperationQueue
 @property  NSMutableArray *receiveMessageRequests
 @property  NSOperationQueue *transactionOperationQueue
 @property  BOOL connected
 @property  HMFTimer *lostConnectionTimer

  // class methods
  +[_HMDHTTPServerClientConnection shortDescription]

  // instance methods
  -[_HMDHTTPServerClientConnection isConnected]
  -[_HMDHTTPServerClientConnection device]
  -[_HMDHTTPServerClientConnection init]
  -[_HMDHTTPServerClientConnection .cxx_destruct]
  -[_HMDHTTPServerClientConnection requestOperationQueue]
  -[_HMDHTTPServerClientConnection setConnection:]
  -[_HMDHTTPServerClientConnection descriptionWithPointer:]
  -[_HMDHTTPServerClientConnection shortDescription]
  -[_HMDHTTPServerClientConnection initWithDevice:]
  -[_HMDHTTPServerClientConnection connection]
  -[_HMDHTTPServerClientConnection invalidate]
  -[_HMDHTTPServerClientConnection sendMessage:timeout:completionHandler:]
  -[_HMDHTTPServerClientConnection receiveMessageRequests]
  -[_HMDHTTPServerClientConnection lostConnectionTimer]
  -[_HMDHTTPServerClientConnection _reallySendMessage:timeout:completionHandler:]
  -[_HMDHTTPServerClientConnection dequeueRequest]
  -[_HMDHTTPServerClientConnection addCompletionHandler:forTransactionIdentifier:]
  -[_HMDHTTPServerClientConnection transactionOperationQueue]
  -[_HMDHTTPServerClientConnection removeCompletionHandlerForTransactionIdentifier:]
  -[_HMDHTTPServerClientConnection queueRequest:]


HMDHTTPServerMessageTransport : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFHTTPServerDelegate, HMFTimerDelegate>
 @property  HMFHTTPServer *server
 @property  NSArray *clientConnections
 @property  <HMDHTTPServerMessageTransportDelegate> *delegate
 @property  NSUUID *identifier
 @property  NSArray *devices
 @property  NSDictionary *TXTRecord
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHTTPServerMessageTransport shortDescription]
  +[HMDHTTPServerMessageTransport maximumSupportedProtocolVersion]

  // instance methods
  -[HMDHTTPServerMessageTransport removeClientConnection:]
  -[HMDHTTPServerMessageTransport timerDidFire:]
  -[HMDHTTPServerMessageTransport init]
  -[HMDHTTPServerMessageTransport .cxx_destruct]
  -[HMDHTTPServerMessageTransport devices]
  -[HMDHTTPServerMessageTransport server]
  -[HMDHTTPServerMessageTransport identifier]
  -[HMDHTTPServerMessageTransport stop]
  -[HMDHTTPServerMessageTransport startWithCompletionHandler:]
  -[HMDHTTPServerMessageTransport descriptionWithPointer:]
  -[HMDHTTPServerMessageTransport shortDescription]
  -[HMDHTTPServerMessageTransport clientConnections]
  -[HMDHTTPServerMessageTransport setDelegate:]
  -[HMDHTTPServerMessageTransport delegate]
  -[HMDHTTPServerMessageTransport sendMessage:toDevices:timeout:completionHandler:]
  -[HMDHTTPServerMessageTransport setTXTRecordValue:forKey:]
  -[HMDHTTPServerMessageTransport removeTXTRecordValueForKey:]
  -[HMDHTTPServerMessageTransport initWithServerIdentifier:]
  -[HMDHTTPServerMessageTransport TXTRecord]
  -[HMDHTTPServerMessageTransport confirmDevice:completionHandler:]
  -[HMDHTTPServerMessageTransport server:didStopWithError:]
  -[HMDHTTPServerMessageTransport addClientConnection:]
  -[HMDHTTPServerMessageTransport _stopWithError:]
  -[HMDHTTPServerMessageTransport __registerReceiveMessageHandler]
  -[HMDHTTPServerMessageTransport __registerSendResponseHandler]
  -[HMDHTTPServerMessageTransport __registerSendMessageHandler]
  -[HMDHTTPServerMessageTransport __registerPingHandler]
  -[HMDHTTPServerMessageTransport removeAllClientConnections]
  -[HMDHTTPServerMessageTransport _clientConnectionForDevice:]
  -[HMDHTTPServerMessageTransport server:shouldAcceptConnection:]
  -[HMDHTTPServerMessageTransport server:didOpenConnection:]
  -[HMDHTTPServerMessageTransport server:didCloseConnection:]


HMDPersonModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSData *personLinksData
 @property  NSString *name
 @property  NSSet *personLinks

  // class methods
  +[HMDPersonModel hmbProperties]
  +[HMDPersonModel sentinelParentUUID]

  // instance methods
  -[HMDPersonModel initWithPerson:]
  -[HMDPersonModel personLinks]
  -[HMDPersonModel setPersonLinks:]
  -[HMDPersonModel createPerson]


HMDResidentDevice : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDDeviceControllerDelegate, HMDBackingStoreObjectProtocol, HMFDumpState, HMFLogging, NSSecureCoding>
 @property  unsigned long status
 @property  BOOL blocked
 @property  unsigned long capabilities
 @property  NSUUID *identifier
 @property  HMDDevice *device
 @property  BOOL enabled
 @property  BOOL reachable
 @property  long long batteryState
 @property  BOOL lowBattery
 @property  HMDHome *home
 @property  HMDResidentDeviceManager *residentDeviceManager
 @property  BOOL confirmed
 @property  BOOL supportsSharedEventTriggerActivation
 @property  BOOL supportsMediaSystem
 @property  BOOL supportsMediaActions
 @property  BOOL supportsShortcutActions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDResidentDevice supportsSecureCoding]
  +[HMDResidentDevice logCategory]
  +[HMDResidentDevice shortDescription]
  +[HMDResidentDevice batteryStateAsString:]

  // instance methods
  -[HMDResidentDevice isBlocked]
  -[HMDResidentDevice device]
  -[HMDResidentDevice logIdentifier]
  -[HMDResidentDevice init]
  -[HMDResidentDevice dealloc]
  -[HMDResidentDevice .cxx_destruct]
  -[HMDResidentDevice setReachable:]
  -[HMDResidentDevice setHome:]
  -[HMDResidentDevice setIdentifier:]
  -[HMDResidentDevice encodeWithCoder:]
  -[HMDResidentDevice identifier]
  -[HMDResidentDevice capabilities]
  -[HMDResidentDevice isReachable]
  -[HMDResidentDevice isConfirmed]
  -[HMDResidentDevice descriptionWithPointer:]
  -[HMDResidentDevice isEnabled]
  -[HMDResidentDevice setDevice:]
  -[HMDResidentDevice shortDescription]
  -[HMDResidentDevice home]
  -[HMDResidentDevice setLowBattery:]
  -[HMDResidentDevice isEqual:]
  -[HMDResidentDevice setEnabled:]
  -[HMDResidentDevice initWithDevice:]
  -[HMDResidentDevice setBatteryState:]
  -[HMDResidentDevice initWithModel:]
  -[HMDResidentDevice batteryState]
  -[HMDResidentDevice dumpState]
  -[HMDResidentDevice status]
  -[HMDResidentDevice initWithCoder:]
  -[HMDResidentDevice isLowBattery]
  -[HMDResidentDevice residentDeviceManager]
  -[HMDResidentDevice modelObjectWithChangeType:version:]
  -[HMDResidentDevice supportsShortcutActions]
  -[HMDResidentDevice supportsMediaActions]
  -[HMDResidentDevice transactionObjectUpdated:newValues:message:]
  -[HMDResidentDevice transactionObjectRemoved:message:]
  -[HMDResidentDevice configureWithHome:]
  -[HMDResidentDevice runtimeState]
  -[HMDResidentDevice supportsSharedEventTriggerActivation]
  -[HMDResidentDevice supportsMediaSystem]
  -[HMDResidentDevice __deviceUpdated:]
  -[HMDResidentDevice _handleResidentDeviceUpdateEnabled:]
  -[HMDResidentDevice deviceController:didUpdateDevice:]
  -[HMDResidentDevice __initWithDeviceController:]
  -[HMDResidentDevice deviceController]
  -[HMDResidentDevice _residentDeviceModelUpdated:newValues:message:]
  -[HMDResidentDevice _handleResidentDeviceUpdateConfirmed:]
  -[HMDResidentDevice setResidentDeviceManager:]


HMDResidentDeviceModel : HMDBackingStoreModelObject
 @property  NSString *deviceUUID
 @property  NSNumber *enabled
 @property  NSNumber *confirmed
 @property  HMDDevice *device

  // class methods
  +[HMDResidentDeviceModel properties]


HMDAccessoryBundle : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDHAPAccessory *accessory
 @property  HMFObject *context

  // instance methods
  -[HMDAccessoryBundle context]
  -[HMDAccessoryBundle .cxx_destruct]
  -[HMDAccessoryBundle setContext:]
  -[HMDAccessoryBundle accessory]
  -[HMDAccessoryBundle setAccessory:]
  -[HMDAccessoryBundle initWithAccessory:context:]


HMDAccessoryQueues : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableDictionary *queues

  // instance methods
  -[HMDAccessoryQueues init]
  -[HMDAccessoryQueues setQueues:]
  -[HMDAccessoryQueues .cxx_destruct]
  -[HMDAccessoryQueues queues]
  -[HMDAccessoryQueues removeAccessory:]
  -[HMDAccessoryQueues createQueue:]
  -[HMDAccessoryQueues popAccessoryFromQueue:]
  -[HMDAccessoryQueues getContextForAccessory:]
  -[HMDAccessoryQueues countForQueue:]
  -[HMDAccessoryQueues addAccessory:toQueue:context:]
  -[HMDAccessoryQueues getAccessoryForContext:fromQueue:]
  -[HMDAccessoryQueues whichQueueForAccessory:]
  -[HMDAccessoryQueues enumerateQueue:enumerateAccessory:]
  -[HMDAccessoryQueues _inQueue:queue:]


HMDCameraStreamControlMessageHandlerDataSource : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDCameraStreamControlMessageHandlerDataSource>
 @property  BOOL supportsReceivingRemoteCameraStream
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDCameraStreamControlMessageHandlerDataSource supportsReceivingRemoteCameraStream]
  -[HMDCameraStreamControlMessageHandlerDataSource createDynamicActivityAttributionPublisher]
  -[HMDCameraStreamControlMessageHandlerDataSource createLocalStreamControlManagerWithSessionID:workQueue:streamSnapshotHandler:reachabilityPath:device:delegate:delegateQueue:accessory:streamManagementService:remoteCapabilities:supportedConfigCache:streamPreference:]
  -[HMDCameraStreamControlMessageHandlerDataSource createRemoteStreamControlManagerWithSessionID:workQueue:streamSnapshotHandler:reachabilityPath:destinationID:delegate:delegateQueue:accessory:streamManagementService:remoteCapabilities:profileUniqueIdentifier:residentMessageHandler:streamPreference:]
  -[HMDCameraStreamControlMessageHandlerDataSource createStreamManagerSessionWithSessionID:destinationID:streamShowingAppIdentifier:controlManager:setupWaitPeriod:error:]


HMDCameraSnapshotRemoteRelayReceiver : HMDCameraSnapshotReceiver <HMDCameraGetSnapshotProtocol, HMDCameraSnapshotReceiverProtocol, HMDCameraSnapshotIDSRelayReceiverDelegate, HMFLogging>
 @property  <HMDCameraSnapshotRemoteRelayReceiverDelegate> *delegate
 @property  HMDCameraSnapshotIDSRelayReceiver *relayReceiver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotRemoteRelayReceiver logCategory]

  // instance methods
  -[HMDCameraSnapshotRemoteRelayReceiver logIdentifier]
  -[HMDCameraSnapshotRemoteRelayReceiver dealloc]
  -[HMDCameraSnapshotRemoteRelayReceiver .cxx_destruct]
  -[HMDCameraSnapshotRemoteRelayReceiver setDelegate:]
  -[HMDCameraSnapshotRemoteRelayReceiver delegate]
  -[HMDCameraSnapshotRemoteRelayReceiver getSnapshot:]
  -[HMDCameraSnapshotRemoteRelayReceiver _getSnapshot:]
  -[HMDCameraSnapshotRemoteRelayReceiver relayReceiver]
  -[HMDCameraSnapshotRemoteRelayReceiver relayReceiver:didReceiveData:error:]
  -[HMDCameraSnapshotRemoteRelayReceiver relayReceiverDidAcceptIDSInvitation:]
  -[HMDCameraSnapshotRemoteRelayReceiver relayReceiverIDSSessionDidStart:]
  -[HMDCameraSnapshotRemoteRelayReceiver initWithSessionID:workQueue:options:accessory:delegate:delegateQueue:uniqueIdentifier:snapshotRequestHandler:residentMessageHandler:]
  -[HMDCameraSnapshotRemoteRelayReceiver snapShotSendFailed:]
  -[HMDCameraSnapshotRemoteRelayReceiver _callDidSaveImageDelegateWithError:]
  -[HMDCameraSnapshotRemoteRelayReceiver _callGettingImageDelegate:]
  -[HMDCameraSnapshotRemoteRelayReceiver setRelayReceiver:]


HMDCameraIDSSessionHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, IDSServiceDelegate, HMDCameraRemoteStreamProtocol>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDCameraStreamSessionID *sessionID
 @property  IDSService *idsStreamService
 @property  IDSSession *idsSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraIDSSessionHandler logCategory]

  // instance methods
  -[HMDCameraIDSSessionHandler sessionID]
  -[HMDCameraIDSSessionHandler logIdentifier]
  -[HMDCameraIDSSessionHandler dealloc]
  -[HMDCameraIDSSessionHandler .cxx_destruct]
  -[HMDCameraIDSSessionHandler workQueue]
  -[HMDCameraIDSSessionHandler startKeepAlive]
  -[HMDCameraIDSSessionHandler initWithSessionID:workQueue:]
  -[HMDCameraIDSSessionHandler idsSession]
  -[HMDCameraIDSSessionHandler setIdsSession:]
  -[HMDCameraIDSSessionHandler idsStreamService]


HMDCameraSnapshotData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSData *snapshotData
 @property  HMFOSTransaction *snapshotDataTrasaction
 @property  HMDVideoResolution *videoResolution

  // instance methods
  -[HMDCameraSnapshotData dealloc]
  -[HMDCameraSnapshotData .cxx_destruct]
  -[HMDCameraSnapshotData videoResolution]
  -[HMDCameraSnapshotData snapshotDataTrasaction]
  -[HMDCameraSnapshotData initWithSnapshotData:videoResolution:snapshotDataTrasaction:]
  -[HMDCameraSnapshotData snapshotData]
  -[HMDCameraSnapshotData initWithSnapshotFile:videoResolution:]


HMDKeyTransferAgentServer : HMDKeyTransferAgent <HMFTimerDelegate>
 @property  NSUUID *currentKeyUUID
 @property  NSObject<OS_dispatch_group> *broadcastGroup
 @property  NSMutableSet *broadcastNotifiedDevices
 @property  HMFExponentialBackoffTimer *broadcastUUIDTimer
 @property  BOOL broadcastFailure
 @property  @? finalCompletionHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDKeyTransferAgentServer logCategory]
  +[HMDKeyTransferAgentServer isPeerAvailable]

  // instance methods
  -[HMDKeyTransferAgentServer timerDidFire:]
  -[HMDKeyTransferAgentServer logIdentifier]
  -[HMDKeyTransferAgentServer dealloc]
  -[HMDKeyTransferAgentServer initWithHomeManager:]
  -[HMDKeyTransferAgentServer .cxx_destruct]
  -[HMDKeyTransferAgentServer beginPairingWithCompletionHandler:]
  -[HMDKeyTransferAgentServer _handleKeyTransferAgentMessage:]
  -[HMDKeyTransferAgentServer __deviceAddedToAccount:]
  -[HMDKeyTransferAgentServer __deviceUpdated:]
  -[HMDKeyTransferAgentServer __deviceRemovedFromAccount:]
  -[HMDKeyTransferAgentServer _device:addedToAccount:]
  -[HMDKeyTransferAgentServer _device:removedFromAccount:]
  -[HMDKeyTransferAgentServer resetConfig]
  -[HMDKeyTransferAgentServer __resetTimer:]
  -[HMDKeyTransferAgentServer broadcastNotifiedDevices]
  -[HMDKeyTransferAgentServer _httpMessageTransport]
  -[HMDKeyTransferAgentServer currentKeyUUID]
  -[HMDKeyTransferAgentServer broadcastUUIDTimer]
  -[HMDKeyTransferAgentServer setBroadcastFailure:]
  -[HMDKeyTransferAgentServer broadcastGroup]
  -[HMDKeyTransferAgentServer broadcastFailure]
  -[HMDKeyTransferAgentServer _endAdvertiseUUIDWithError:]
  -[HMDKeyTransferAgentServer _startAdvertiseUUIDWithError:]
  -[HMDKeyTransferAgentServer setFinalCompletionHandler:]
  -[HMDKeyTransferAgentServer finalCompletionHandler]
  -[HMDKeyTransferAgentServer _endPairingWithError:]
  -[HMDKeyTransferAgentServer setCurrentKeyUUID:]
  -[HMDKeyTransferAgentServer setBroadcastGroup:]
  -[HMDKeyTransferAgentServer setBroadcastNotifiedDevices:]
  -[HMDKeyTransferAgentServer setBroadcastUUIDTimer:]


HMDAppleMediaAccessoryDeleteSiriHistoryOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  AFSettingsConnection *settingsConnection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAppleMediaAccessoryDeleteSiriHistoryOperation logCategory]

  // instance methods
  -[HMDAppleMediaAccessoryDeleteSiriHistoryOperation main]
  -[HMDAppleMediaAccessoryDeleteSiriHistoryOperation .cxx_destruct]
  -[HMDAppleMediaAccessoryDeleteSiriHistoryOperation initWithSettingsConnection:]
  -[HMDAppleMediaAccessoryDeleteSiriHistoryOperation settingsConnection]


HMDCameraSnapshotManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDCameraSnapshotLocalDelegate, HMDCameraSnapshotRemoteRelaySenderDelegate, HMDCameraSnapshotRemoteRelayReceiverDelegate, HMDCameraSnapshotRemoteStreamSenderDelegate, HMDCameraSnapshotRemoteStreamReceiverDelegate, HMDCameraSnapshotRemoteRelayStreamDelegate, HMFTimerDelegate, HMFLogging, HMDCameraStreamSnapshotHandlerDelegate, HMDHomeMessageReceiver>
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDSnapshotLocalSession *currentLocalSession
 @property  NSMutableDictionary *currentRemoteSessions
 @property  HMDHAPAccessory *accessory
 @property  NSUUID *uniqueIdentifier
 @property  NSString *imageCacheDirectory
 @property  NSString *logID
 @property  HMDCameraSnapshotMonitorEvents *monitorServicesManager
 @property  HMDSnapshotRequestHandler *snapshotRequestHandler
 @property  HMDSnapshotCacheRequestHandler *snapshotCacheRequestHandler
 @property  HMDSnapshotSlotManager *snapshotSlotManager
 @property  HMDCameraStreamSnapshotHandler *streamSnapshotHandler
 @property  NSMutableArray *pendingSnapshotRequestDuringStreamSetup
 @property  NSMutableArray *pendingRemoteSnapshotRequestDuringStreamSetup
 @property  HMDNotificationRegistration *notificationRegistration
 @property  HMFNetMonitor *networkMonitor
 @property  HMDCameraResidentMessageHandler *residentMessageHandler
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSDictionary *encodedMostRecentSnapshot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDCameraSnapshotManager logCategory]
  +[HMDCameraSnapshotManager hasMessageReceiverChildren]
  +[HMDCameraSnapshotManager auditSnapshotDirectories:]

  // instance methods
  -[HMDCameraSnapshotManager messageTargetUUID]
  -[HMDCameraSnapshotManager messageReceiveQueue]
  -[HMDCameraSnapshotManager timerDidFire:]
  -[HMDCameraSnapshotManager logID]
  -[HMDCameraSnapshotManager logIdentifier]
  -[HMDCameraSnapshotManager dealloc]
  -[HMDCameraSnapshotManager .cxx_destruct]
  -[HMDCameraSnapshotManager workQueue]
  -[HMDCameraSnapshotManager setNetworkMonitor:]
  -[HMDCameraSnapshotManager uniqueIdentifier]
  -[HMDCameraSnapshotManager setMsgDispatcher:]
  -[HMDCameraSnapshotManager msgDispatcher]
  -[HMDCameraSnapshotManager accessory]
  -[HMDCameraSnapshotManager networkMonitor]
  -[HMDCameraSnapshotManager registerForMessages]
  -[HMDCameraSnapshotManager messageReceiverChildren]
  -[HMDCameraSnapshotManager handleCameraSettingsDidChangeNotification:]
  -[HMDCameraSnapshotManager snapshotStreamSender:didStartCaptureImage:sessionID:]
  -[HMDCameraSnapshotManager snapshotStreamSender:didCompleteSendImage:sessionID:]
  -[HMDCameraSnapshotManager snapshotLocal:didSaveSnapshotFile:error:sessionID:]
  -[HMDCameraSnapshotManager streamSnapshotHandler]
  -[HMDCameraSnapshotManager snapshotRequestHandler]
  -[HMDCameraSnapshotManager residentMessageHandler]
  -[HMDCameraSnapshotManager streamSnapshotHandler:didGetNewSnapshot:]
  -[HMDCameraSnapshotManager streamSnapshotHandler:didGetLastSnapshot:]
  -[HMDCameraSnapshotManager streamSnapshotHandler:didChangeStreamSetupInProgress:]
  -[HMDCameraSnapshotManager handleAccessoryDisconnected:]
  -[HMDCameraSnapshotManager snapshotRelayStream:didStartCaptureImage:sessionID:]
  -[HMDCameraSnapshotManager snapshotRelayStream:didCompleteSendImage:sessionID:]
  -[HMDCameraSnapshotManager snapshotRelayReceiver:didStartGettingImage:sessionID:]
  -[HMDCameraSnapshotManager snapshotRelayReceiver:didSaveSnapshotFile:error:sessionID:]
  -[HMDCameraSnapshotManager notificationRegistration]
  -[HMDCameraSnapshotManager takeSnapshot:]
  -[HMDCameraSnapshotManager releaseSnapshot:]
  -[HMDCameraSnapshotManager _removeAllPendingRequests:]
  -[HMDCameraSnapshotManager _handleSnapshotRequest:]
  -[HMDCameraSnapshotManager _handleSnapshotRemoteRequest:]
  -[HMDCameraSnapshotManager _handleSnapshotReceived:]
  -[HMDCameraSnapshotManager _handleSnapshotSendFailure:]
  -[HMDCameraSnapshotManager _handleReleaseSnapshot:]
  -[HMDCameraSnapshotManager _handleCreateSnapshotFromBulletinContext:]
  -[HMDCameraSnapshotManager monitorServicesManager]
  -[HMDCameraSnapshotManager snapshotSlotManager]
  -[HMDCameraSnapshotManager currentLocalSession]
  -[HMDCameraSnapshotManager currentRemoteSessions]
  -[HMDCameraSnapshotManager setCurrentLocalSession:]
  -[HMDCameraSnapshotManager pendingSnapshotRequestDuringStreamSetup]
  -[HMDCameraSnapshotManager pendingRemoteSnapshotRequestDuringStreamSetup]
  -[HMDCameraSnapshotManager imageCacheDirectory]
  -[HMDCameraSnapshotManager encodedMostRecentSnapshot]
  -[HMDCameraSnapshotManager _createSnapshotSessionIDWithMessage:error:]
  -[HMDCameraSnapshotManager snapshotCacheRequestHandler]
  -[HMDCameraSnapshotManager _sendStreamSnapshotRequest:snapshotSessionID:]
  -[HMDCameraSnapshotManager _sendSnapshotRequestLocal:snapshotSessionID:]
  -[HMDCameraSnapshotManager _sendSnapshotRequestStreamReceiver:snapshotSessionID:]
  -[HMDCameraSnapshotManager _sendSnapshotRequestRelayReceiver:snapshotSessionID:]
  -[HMDCameraSnapshotManager _sendSnapshotRequestRelayInitiator:snapshotSessionID:]
  -[HMDCameraSnapshotManager _sendSnapshotRequestStreamInitiator:snapshotSessionID:]
  -[HMDCameraSnapshotManager _sendSnapshotRequestRelayStream:snapshotSessionID:]
  -[HMDCameraSnapshotManager _issueGetSnapshot:]
  -[HMDCameraSnapshotManager _sendResponse:error:sessionID:]
  -[HMDCameraSnapshotManager _findSessionWithID:]
  -[HMDCameraSnapshotManager _endSession:error:]
  -[HMDCameraSnapshotManager _sendRemoteResponse:sessionID:]
  -[HMDCameraSnapshotManager snapshotRelaySender:didStartCaptureImage:sessionID:]
  -[HMDCameraSnapshotManager snapshotRelaySender:didCompleteSendImage:sessionID:]
  -[HMDCameraSnapshotManager snapshotStreamReceiver:didStartGettingImage:sessionID:]
  -[HMDCameraSnapshotManager snapshotStreamReceiver:didSaveSnapshotFile:error:sessionID:]
  -[HMDCameraSnapshotManager initWithAccessory:workQueue:streamSnapshotHandler:uniqueIdentifier:logID:msgDispatcher:networkMonitor:residentMessageHandler:]
  -[HMDCameraSnapshotManager setCurrentRemoteSessions:]


HMDMediaSystemComponent : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, HMFDumpState, HMFLogging>
 @property  HMDMediaProfile *mediaProfile
 @property  NSUUID *uuid
 @property  HMDAccessory *accessory
 @property  HMMediaSystemRole *role
 @property  NSObject<OS_dispatch_queue> *propertyQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMediaSystemComponent supportsSecureCoding]
  +[HMDMediaSystemComponent mediaSystemComponentWithDictionary:home:]
  +[HMDMediaSystemComponent logCategory]
  +[HMDMediaSystemComponent decodeComponents:leftUUID:leftAccessory:rightUUID:rightAccessory:]
  +[HMDMediaSystemComponent componentsWithLeftComponent:leftAccessory:rightComponent:rightAccessory:]
  +[HMDMediaSystemComponent accessoryForMediaSystemComponentWithDictionary:home:]

  // instance methods
  -[HMDMediaSystemComponent serialize]
  -[HMDMediaSystemComponent logIdentifier]
  -[HMDMediaSystemComponent attributeDescriptions]
  -[HMDMediaSystemComponent uuid]
  -[HMDMediaSystemComponent dealloc]
  -[HMDMediaSystemComponent privateDescription]
  -[HMDMediaSystemComponent .cxx_destruct]
  -[HMDMediaSystemComponent setRole:]
  -[HMDMediaSystemComponent encodeWithCoder:]
  -[HMDMediaSystemComponent mediaProfile]
  -[HMDMediaSystemComponent accessory]
  -[HMDMediaSystemComponent propertyQueue]
  -[HMDMediaSystemComponent role]
  -[HMDMediaSystemComponent dumpState]
  -[HMDMediaSystemComponent initWithCoder:]
  -[HMDMediaSystemComponent initWithUUID:accessory:role:]


HMDResidentMeshMeshStorage : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDResidentMesh *owner
 @property  NSDictionary *metrics
 @property  NSMutableSet *accessoryUUIDs
 @property  unsigned long generationCount
 @property  BOOL enabled
 @property  NSMutableDictionary *accessoryListWithLinkQuality
 @property  HMDDevice *device

  // instance methods
  -[HMDResidentMeshMeshStorage metrics]
  -[HMDResidentMeshMeshStorage setMetrics:]
  -[HMDResidentMeshMeshStorage setOwner:]
  -[HMDResidentMeshMeshStorage owner]
  -[HMDResidentMeshMeshStorage device]
  -[HMDResidentMeshMeshStorage enabled]
  -[HMDResidentMeshMeshStorage .cxx_destruct]
  -[HMDResidentMeshMeshStorage _requestStatus]
  -[HMDResidentMeshMeshStorage generationCount]
  -[HMDResidentMeshMeshStorage setGenerationCount:]
  -[HMDResidentMeshMeshStorage setEnabled:]
  -[HMDResidentMeshMeshStorage accessoryUUIDs]
  -[HMDResidentMeshMeshStorage setAccessoryUUIDs:]
  -[HMDResidentMeshMeshStorage setAccessoryListWithLinkQuality:]
  -[HMDResidentMeshMeshStorage initWithDevice:owner:]
  -[HMDResidentMeshMeshStorage accessoryListWithLinkQuality]


HMDResidentMeshResidentStorage : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate>
 @property  HMDResidentMesh *owner
 @property  HMDDevice *resident
 @property  NSMutableSet *accessoryUUIDs
 @property  NSSet *lastSentAccessoryUUIDs
 @property  NSMutableDictionary *metrics
 @property  NSDictionary *lastSentMetrics
 @property  HMFTimer *transmitTimer
 @property  NSMutableDictionary *accessoryListWithLinkQuality
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDResidentMeshResidentStorage metrics]
  -[HMDResidentMeshResidentStorage setMetrics:]
  -[HMDResidentMeshResidentStorage timerDidFire:]
  -[HMDResidentMeshResidentStorage setOwner:]
  -[HMDResidentMeshResidentStorage owner]
  -[HMDResidentMeshResidentStorage .cxx_destruct]
  -[HMDResidentMeshResidentStorage accessoryUUIDs]
  -[HMDResidentMeshResidentStorage setAccessoryUUIDs:]
  -[HMDResidentMeshResidentStorage resident]
  -[HMDResidentMeshResidentStorage setResident:]
  -[HMDResidentMeshResidentStorage setAccessoryListWithLinkQuality:]
  -[HMDResidentMeshResidentStorage accessoryListWithLinkQuality]
  -[HMDResidentMeshResidentStorage _transmitStatus:]
  -[HMDResidentMeshResidentStorage setTransmitTimer:]
  -[HMDResidentMeshResidentStorage _addAccessoryWithLinkQuality:toList:completion:]
  -[HMDResidentMeshResidentStorage _transmitAfter:]
  -[HMDResidentMeshResidentStorage lastSentAccessoryUUIDs]
  -[HMDResidentMeshResidentStorage lastSentMetrics]
  -[HMDResidentMeshResidentStorage transmitTimer]
  -[HMDResidentMeshResidentStorage _residentDidChange]
  -[HMDResidentMeshResidentStorage setLastSentMetrics:]
  -[HMDResidentMeshResidentStorage setLastSentAccessoryUUIDs:]
  -[HMDResidentMeshResidentStorage _buildPayload]
  -[HMDResidentMeshResidentStorage initWithResident:owner:]
  -[HMDResidentMeshResidentStorage _addAccessory:activateTimer:]
  -[HMDResidentMeshResidentStorage _removeAccessory:activateTimer:]


HMDResidentMesh : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, HMFMessageReceiver, HMFLogging>
 @property  HMDHomeManager *homeManager
 @property  HMDMessageDispatcher *messageDispatcher
 @property  NSMutableArray *residents
 @property  HMDResidentMeshMeshStorage *resident
 @property  NSMutableArray *reachableAccessories
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFTimer *startupTimer
 @property  long long startupTickCount
 @property  HMFTimer *devicesChangedTimer
 @property  NSSet *primaryResidentForHomes
 @property  HMFTimer *linkQualityMonitorTimer
 @property  NSMutableDictionary *loadMetrics
 @property  NSUUID *uuid
 @property  unsigned long broadcastRate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDResidentMesh logCategory]

  // instance methods
  -[HMDResidentMesh messageTargetUUID]
  -[HMDResidentMesh messageDestination]
  -[HMDResidentMesh messageReceiveQueue]
  -[HMDResidentMesh _dumpState]
  -[HMDResidentMesh timerDidFire:]
  -[HMDResidentMesh setWorkQueue:]
  -[HMDResidentMesh logIdentifier]
  -[HMDResidentMesh uuid]
  -[HMDResidentMesh dealloc]
  -[HMDResidentMesh .cxx_destruct]
  -[HMDResidentMesh workQueue]
  -[HMDResidentMesh setUuid:]
  -[HMDResidentMesh setHomeManager:]
  -[HMDResidentMesh messageDispatcher]
  -[HMDResidentMesh homeManager]
  -[HMDResidentMesh dumpState]
  -[HMDResidentMesh startupTimer]
  -[HMDResidentMesh dumpDebug]
  -[HMDResidentMesh resident]
  -[HMDResidentMesh setMessageDispatcher:]
  -[HMDResidentMesh deviceForAccessory:residentOrder:reachableResidents:]
  -[HMDResidentMesh balancedResidentMapForAccessories:]
  -[HMDResidentMesh bestResidentForAccessory:]
  -[HMDResidentMesh setResident:]
  -[HMDResidentMesh __accessoryIsReachable:]
  -[HMDResidentMesh _sendMessage:payload:target:force:responseHandler:]
  -[HMDResidentMesh loadMetrics]
  -[HMDResidentMesh _findDeviceInMesh:]
  -[HMDResidentMesh _buildResidentsWithElection:device:]
  -[HMDResidentMesh __accessoryIsNotReachable:]
  -[HMDResidentMesh __rebuildResidentsViaElection:]
  -[HMDResidentMesh __rebuildResidents:]
  -[HMDResidentMesh __deviceResidentChanged:]
  -[HMDResidentMesh __deviceIsNotReachable:]
  -[HMDResidentMesh __deviceIsReachable:]
  -[HMDResidentMesh _handleMeshUpdateRequestMessage:]
  -[HMDResidentMesh _handleMeshUpdateMessage:]
  -[HMDResidentMesh _addConnectivityFromDeviceToAccessory:activateTimer:]
  -[HMDResidentMesh _removeConnectivityFromDeviceToAccessory:activateTimer:]
  -[HMDResidentMesh _deviceIsReachable:]
  -[HMDResidentMesh _deviceIsNotReachable:]
  -[HMDResidentMesh _checkReachabilityWithTimerActivation:]
  -[HMDResidentMesh reachableAccessories]
  -[HMDResidentMesh startupTickCount]
  -[HMDResidentMesh setStartupTickCount:]
  -[HMDResidentMesh devicesChangedTimer]
  -[HMDResidentMesh linkQualityMonitorTimer]
  -[HMDResidentMesh _updateAccessoryLinkQuality]
  -[HMDResidentMesh _addDeviceInResidents:]
  -[HMDResidentMesh residents]
  -[HMDResidentMesh setPrimaryResidentForHomes:]
  -[HMDResidentMesh _addDeviceInMesh:]
  -[HMDResidentMesh primaryResidentForHomes]
  -[HMDResidentMesh _findDeviceInResidents:]
  -[HMDResidentMesh _findDeviceInMeshByUUID:]
  -[HMDResidentMesh _availableResidentsForHome:]
  -[HMDResidentMesh _residentMapForAccessories:]
  -[HMDResidentMesh initWithHomeManager:residentEnabled:]
  -[HMDResidentMesh residentsForCameraAccessory:excludeResident:sortedBy:]
  -[HMDResidentMesh _flushWorkQueue]
  -[HMDResidentMesh setMetricForCurrentDevice:withValue:isUrgent:]
  -[HMDResidentMesh _dumpDebug]
  -[HMDResidentMesh broadcastRate]
  -[HMDResidentMesh setBroadcastRate:]
  -[HMDResidentMesh setResidents:]
  -[HMDResidentMesh setReachableAccessories:]


HMDDataStreamTCPTransport : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDDataStreamTransport>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFNetAddress *remoteAddress
 @property  NSObject<OS_tcp_connection> *tcpConnection
 @property  HMDDataStreamFrameReader *byteReader
 @property  NSString *logIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HMDDataStreamTransportDelegate> *delegate

  // class methods
  +[HMDDataStreamTCPTransport logCategory]

  // instance methods
  -[HMDDataStreamTCPTransport _start]
  -[HMDDataStreamTCPTransport connect]
  -[HMDDataStreamTCPTransport logIdentifier]
  -[HMDDataStreamTCPTransport dealloc]
  -[HMDDataStreamTCPTransport .cxx_destruct]
  -[HMDDataStreamTCPTransport remoteAddress]
  -[HMDDataStreamTCPTransport close]
  -[HMDDataStreamTCPTransport _stop]
  -[HMDDataStreamTCPTransport workQueue]
  -[HMDDataStreamTCPTransport setDelegate:]
  -[HMDDataStreamTCPTransport delegate]
  -[HMDDataStreamTCPTransport tcpConnection]
  -[HMDDataStreamTCPTransport setTcpConnection:]
  -[HMDDataStreamTCPTransport initWithAddress:port:workQueue:logIdentifier:]
  -[HMDDataStreamTCPTransport sendRawFrame:completion:]
  -[HMDDataStreamTCPTransport byteReader]
  -[HMDDataStreamTCPTransport _doReceive]
  -[HMDDataStreamTCPTransport _consumeReceivedData:]


HMDRemoteLoginBase : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDHomeMessageReceiver>
 @property  NSUUID *uuid
 @property  HMDAppleMediaAccessory *accessory
 @property  HMDRemoteLoginHandler *remoteLoginHandler
 @property  NSString *logString
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDRemoteLoginBase logCategory]
  +[HMDRemoteLoginBase hasMessageReceiverChildren]

  // instance methods
  -[HMDRemoteLoginBase logString]
  -[HMDRemoteLoginBase messageTargetUUID]
  -[HMDRemoteLoginBase messageReceiveQueue]
  -[HMDRemoteLoginBase setWorkQueue:]
  -[HMDRemoteLoginBase logIdentifier]
  -[HMDRemoteLoginBase uuid]
  -[HMDRemoteLoginBase .cxx_destruct]
  -[HMDRemoteLoginBase workQueue]
  -[HMDRemoteLoginBase setMsgDispatcher:]
  -[HMDRemoteLoginBase msgDispatcher]
  -[HMDRemoteLoginBase accessory]
  -[HMDRemoteLoginBase registerForMessages]
  -[HMDRemoteLoginBase remoteLoginHandler]
  -[HMDRemoteLoginBase configureWithWorkQueue:messageDispatcher:]
  -[HMDRemoteLoginBase initWithUUID:accessory:remoteLoginHandler:]


HMDLogEventDispatcher : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMapTable *logEventObserversByEventType
 @property  unsigned long cachedHomeConfigurationVersion
 @property  HMDLogEventContextProvider *logEventContextProvider
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMDHomeConfigurationLogEvent *cachedHomeConfiguration

  // class methods
  +[HMDLogEventDispatcher sharedInstance]
  +[HMDLogEventDispatcher initialize]

  // instance methods
  -[HMDLogEventDispatcher init]
  -[HMDLogEventDispatcher .cxx_destruct]
  -[HMDLogEventDispatcher clientQueue]
  -[HMDLogEventDispatcher submitLogEvent:]
  -[HMDLogEventDispatcher submitLogEvent:error:]
  -[HMDLogEventDispatcher addObserver:forEventTypes:]
  -[HMDLogEventDispatcher removeObserver:forEventType:]
  -[HMDLogEventDispatcher cachedHomeConfiguration]
  -[HMDLogEventDispatcher logEventObserversByEventType]
  -[HMDLogEventDispatcher logEventContextProvider]
  -[HMDLogEventDispatcher setCachedHomeConfiguration:]
  -[HMDLogEventDispatcher addObserver:forEventType:]
  -[HMDLogEventDispatcher cachedHomeConfigurationVersion]
  -[HMDLogEventDispatcher setCachedHomeConfigurationVersion:]


HMDCameraIDSDeviceConnectionSender : HMDCameraIDSDeviceConnection <HMDCameraRemoteStreamSenderProtocol>
 @property  <HMDCameraIDSDeviceConnectionSenderDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSString *destinationID
 @property  AVCPacketRelay *videoPacketRelay
 @property  AVCPacketRelay *audioPacketRelay
 @property  HMFOSTransaction *packetRelayTransaction
 @property  NSNumber *mtu
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraIDSDeviceConnectionSender logCategory]

  // instance methods
  -[HMDCameraIDSDeviceConnectionSender logIdentifier]
  -[HMDCameraIDSDeviceConnectionSender delegateQueue]
  -[HMDCameraIDSDeviceConnectionSender dealloc]
  -[HMDCameraIDSDeviceConnectionSender destinationID]
  -[HMDCameraIDSDeviceConnectionSender .cxx_destruct]
  -[HMDCameraIDSDeviceConnectionSender mtu]
  -[HMDCameraIDSDeviceConnectionSender delegate]
  -[HMDCameraIDSDeviceConnectionSender initWithSessionID:workQueue:destinationID:delegate:delegateQueue:]
  -[HMDCameraIDSDeviceConnectionSender openRelaySession]
  -[HMDCameraIDSDeviceConnectionSender startPacketRelayWithVideoSocket:videoNetworkConfig:cameraVideoSSRC:audioSocket:audioNetworkConfig:cameraAudioSSRC:]
  -[HMDCameraIDSDeviceConnectionSender startPacketRelayWithIDSDeviceSession:cameraVideoSSRC:cameraAudioSSRC:]
  -[HMDCameraIDSDeviceConnectionSender _callSessionEnded:]
  -[HMDCameraIDSDeviceConnectionSender _startPacketRelayWithVideoSocket:videoNetworkConfig:cameraVideoSSRC:audioSocket:audioNetworkConfig:cameraAudioSSRC:]
  -[HMDCameraIDSDeviceConnectionSender setPacketRelayTransaction:]
  -[HMDCameraIDSDeviceConnectionSender packetRelayTransaction]
  -[HMDCameraIDSDeviceConnectionSender _socketOpened:]
  -[HMDCameraIDSDeviceConnectionSender videoPacketRelay]
  -[HMDCameraIDSDeviceConnectionSender setVideoPacketRelay:]
  -[HMDCameraIDSDeviceConnectionSender audioPacketRelay]
  -[HMDCameraIDSDeviceConnectionSender setAudioPacketRelay:]
  -[HMDCameraIDSDeviceConnectionSender _startPacketRelayWithIDSDeviceSession:cameraVideoSSRC:cameraAudioSSRC:]
  -[HMDCameraIDSDeviceConnectionSender _startVideoPacketRelay:ipAddress:port:]
  -[HMDCameraIDSDeviceConnectionSender _startAudioPacketRelay:ipAddress:port:]


HAPOperatingStateResponse : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  HAPOperatingStateWrapper *state
 @property  HAPOperatingStateAbnormalReasonsWrapper *abnormalReasons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPOperatingStateResponse parsedFromData:error:]

  // instance methods
  -[HAPOperatingStateResponse copyWithZone:]
  -[HAPOperatingStateResponse init]
  -[HAPOperatingStateResponse setState:]
  -[HAPOperatingStateResponse .cxx_destruct]
  -[HAPOperatingStateResponse isEqual:]
  -[HAPOperatingStateResponse state]
  -[HAPOperatingStateResponse parseFromData:error:]
  -[HAPOperatingStateResponse serializeWithError:]
  -[HAPOperatingStateResponse abnormalReasons]
  -[HAPOperatingStateResponse setAbnormalReasons:]
  -[HAPOperatingStateResponse initWithState:abnormalReasons:]


HMDConfigurationResetLogEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDConfigurationResetLogEvent uuid]
  +[HMDConfigurationResetLogEvent configurationReset]

  // instance methods
  -[HMDConfigurationResetLogEvent AWDMessageType]
  -[HMDConfigurationResetLogEvent metricForAWD]


HMDCloudShareParticipantsManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMBCloudZone *cloudZone
 @property  HMDHome *home
 @property  <HMDCloudShareParticipantsManagerDataSource> *dataSource
 @property  <HMDCloudShareParticipantsManagerDelegate> *delegate
 @property  NSSet *participatingUsers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCloudShareParticipantsManager logCategory]

  // instance methods
  -[HMDCloudShareParticipantsManager configure]
  -[HMDCloudShareParticipantsManager logIdentifier]
  -[HMDCloudShareParticipantsManager setDataSource:]
  -[HMDCloudShareParticipantsManager .cxx_destruct]
  -[HMDCloudShareParticipantsManager workQueue]
  -[HMDCloudShareParticipantsManager setHome:]
  -[HMDCloudShareParticipantsManager clearParticipants]
  -[HMDCloudShareParticipantsManager home]
  -[HMDCloudShareParticipantsManager dataSource]
  -[HMDCloudShareParticipantsManager setDelegate:]
  -[HMDCloudShareParticipantsManager delegate]
  -[HMDCloudShareParticipantsManager cloudZone]
  -[HMDCloudShareParticipantsManager updateShareParticipants]
  -[HMDCloudShareParticipantsManager initWithQueue:cloudZone:home:]
  -[HMDCloudShareParticipantsManager handleHomeUserAddedNotification:]
  -[HMDCloudShareParticipantsManager handleHomeUserRemovedNotification:]
  -[HMDCloudShareParticipantsManager fetchInvitationToUser:shouldGrantWriteAccess:]
  -[HMDCloudShareParticipantsManager fetchInvitationContextForUser:shouldGrantWriteAccess:]
  -[HMDCloudShareParticipantsManager _untrustedInvitationContextForUser:shouldGrantWriteAccess:]
  -[HMDCloudShareParticipantsManager participatingUsers]


HMDVendorModelCollection : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableSet *entries
 @property  HMDVendorModelEntry *defaultEntry

  // instance methods
  -[HMDVendorModelCollection init]
  -[HMDVendorModelCollection attributeDescriptions]
  -[HMDVendorModelCollection addEntry:]
  -[HMDVendorModelCollection .cxx_destruct]
  -[HMDVendorModelCollection entries]
  -[HMDVendorModelCollection isEqual:]
  -[HMDVendorModelCollection defaultEntry]
  -[HMDVendorModelCollection lookupModel:]
  -[HMDVendorModelCollection lookupProductData:]
  -[HMDVendorModelCollection setDefaultEntry:]


HMDCharacteristicThresholdRangeEvent : HMDCharacteristicEventBase <NSSecureCoding, HMFDumpState, HMFLogging, HMDHomeMessageReceiver>
 @property  NSNumber *min
 @property  NSNumber *max
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDCharacteristicThresholdRangeEvent supportsSecureCoding]
  +[HMDCharacteristicThresholdRangeEvent logCategory]

  // instance methods
  -[HMDCharacteristicThresholdRangeEvent setMin:]
  -[HMDCharacteristicThresholdRangeEvent .cxx_destruct]
  -[HMDCharacteristicThresholdRangeEvent max]
  -[HMDCharacteristicThresholdRangeEvent encodeWithCoder:]
  -[HMDCharacteristicThresholdRangeEvent min]
  -[HMDCharacteristicThresholdRangeEvent setMax:]
  -[HMDCharacteristicThresholdRangeEvent initWithCoder:]
  -[HMDCharacteristicThresholdRangeEvent emptyModelObject]
  -[HMDCharacteristicThresholdRangeEvent _transactionObjectUpdated:newValues:message:]
  -[HMDCharacteristicThresholdRangeEvent _transactionObjectRemoved:message:]
  -[HMDCharacteristicThresholdRangeEvent modelObjectWithChangeType:]
  -[HMDCharacteristicThresholdRangeEvent createPayload]
  -[HMDCharacteristicThresholdRangeEvent initWithModel:home:]
  -[HMDCharacteristicThresholdRangeEvent _handleUpdateRequest:]
  -[HMDCharacteristicThresholdRangeEvent analyticsTriggerEventData]
  -[HMDCharacteristicThresholdRangeEvent _evaluateNewValue:]
  -[HMDCharacteristicThresholdRangeEvent _isValueInRange:]


HMDCharacteristicThresholdRangeEventModel : HMDCharacteristicEventBaseModel
 @property  NSNumber *min
 @property  NSNumber *max

  // class methods
  +[HMDCharacteristicThresholdRangeEventModel properties]
  +[HMDCharacteristicThresholdRangeEventModel eventModelWithDictionary:home:eventTriggerUUID:message:checkForSupport:]


HMDRemoteLoginAnisetteDataProviderBridge : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDHomeMessageReceiver, NSSecureCoding>
 @property  NSUUID *uuid
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDRemoteLoginMessageSender *remoteMessageSender
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDRemoteLoginAnisetteDataProviderBridge supportsSecureCoding]
  +[HMDRemoteLoginAnisetteDataProviderBridge logCategory]
  +[HMDRemoteLoginAnisetteDataProviderBridge hasMessageReceiverChildren]

  // instance methods
  -[HMDRemoteLoginAnisetteDataProviderBridge messageTargetUUID]
  -[HMDRemoteLoginAnisetteDataProviderBridge messageReceiveQueue]
  -[HMDRemoteLoginAnisetteDataProviderBridge setWorkQueue:]
  -[HMDRemoteLoginAnisetteDataProviderBridge logIdentifier]
  -[HMDRemoteLoginAnisetteDataProviderBridge uuid]
  -[HMDRemoteLoginAnisetteDataProviderBridge .cxx_destruct]
  -[HMDRemoteLoginAnisetteDataProviderBridge initWithUUID:]
  -[HMDRemoteLoginAnisetteDataProviderBridge workQueue]
  -[HMDRemoteLoginAnisetteDataProviderBridge encodeWithCoder:]
  -[HMDRemoteLoginAnisetteDataProviderBridge setMsgDispatcher:]
  -[HMDRemoteLoginAnisetteDataProviderBridge msgDispatcher]
  -[HMDRemoteLoginAnisetteDataProviderBridge registerForMessages]
  -[HMDRemoteLoginAnisetteDataProviderBridge initWithCoder:]
  -[HMDRemoteLoginAnisetteDataProviderBridge remoteMessageSender]
  -[HMDRemoteLoginAnisetteDataProviderBridge setRemoteMessageSender:]
  -[HMDRemoteLoginAnisetteDataProviderBridge configureWithWorkQueue:messageDispatcher:remoteMessageSender:]


HMDAppleAccountManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <APSConnectionDelegate, HMDAccountManager, HMFLogging, HMFMessageReceiver, HMFTimerDelegate, IDSAccountDelegate, IDSAccountRegistrationDelegate, IDSServiceDelegate>
 @property  APSConnection *pushConnection
 @property  HMFExponentialBackoffTimer *accountChangeBackoffTimer
 @property  HMFTimer *devicesChangeBackoffTimer
 @property  BOOL monitoring
 @property  int rapportIdentitiesChangedNotificationToken
 @property  BOOL rapportIdentitiesChangedNotificationTokenValid
 @property  IDSService *service
 @property  HMDIDSActivityMonitorBroadcaster *activityBroadcaster
 @property  HMDAccount *account
 @property  HMDAppleAccountContext *accountContext
 @property  HMDBackingStore *backingStore
 @property  HMDCloudCache *cloudCache
 @property  HMDDevice *device
 @property  HMDAppleAccountSettings *settings
 @property  ACAccountStore *accountStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDAppleAccountManager logCategory]
  +[HMDAppleAccountManager sharedManager]

  // instance methods
  -[HMDAppleAccountManager messageTargetUUID]
  -[HMDAppleAccountManager messageReceiveQueue]
  -[HMDAppleAccountManager timerDidFire:]
  -[HMDAppleAccountManager isMonitoring]
  -[HMDAppleAccountManager connection:didReceivePublicToken:]
  -[HMDAppleAccountManager device]
  -[HMDAppleAccountManager init]
  -[HMDAppleAccountManager setAccount:]
  -[HMDAppleAccountManager account]
  -[HMDAppleAccountManager .cxx_destruct]
  -[HMDAppleAccountManager service:devicesChanged:]
  -[HMDAppleAccountManager stop]
  -[HMDAppleAccountManager setBackingStore:]
  -[HMDAppleAccountManager service]
  -[HMDAppleAccountManager backingStore]
  -[HMDAppleAccountManager settings]
  -[HMDAppleAccountManager accountStore]
  -[HMDAppleAccountManager account:isActiveChanged:]
  -[HMDAppleAccountManager pushConnection]
  -[HMDAppleAccountManager account:aliasesChanged:]
  -[HMDAppleAccountManager setMonitoring:]
  -[HMDAppleAccountManager service:activeAccountsChanged:]
  -[HMDAppleAccountManager start]
  -[HMDAppleAccountManager cloudCache]
  -[HMDAppleAccountManager activityBroadcaster]
  -[HMDAppleAccountManager accountContext]
  -[HMDAppleAccountManager setCloudCache:]
  -[HMDAppleAccountManager shouldCacheAccount:]
  -[HMDAppleAccountManager primaryHandleForAccount:]
  -[HMDAppleAccountManager shouldSyncAccount:]
  -[HMDAppleAccountManager shouldSyncDevice:]
  -[HMDAppleAccountManager shouldAccount:pushbackModel:actions:]
  -[HMDAppleAccountManager initWithIDSService:activityBroadcaster:]
  -[HMDAppleAccountManager accountChangeBackoffTimer]
  -[HMDAppleAccountManager devicesChangeBackoffTimer]
  -[HMDAppleAccountManager isRapportIdentitiesChangedNotificationTokenValid]
  -[HMDAppleAccountManager setRapportIdentitiesChangedNotificationTokenValid:]
  -[HMDAppleAccountManager rapportIdentitiesChangedNotificationToken]
  -[HMDAppleAccountManager _registerForRapportNotifications]
  -[HMDAppleAccountManager _deregisterForRapportNotifications]
  -[HMDAppleAccountManager shouldDevice:processModel:actions:]
  -[HMDAppleAccountManager __localDataReset:]
  -[HMDAppleAccountManager __handleModifiedAccount:]
  -[HMDAppleAccountManager __handleRemovedAccount:]
  -[HMDAppleAccountManager __handleUpdatedName:]
  -[HMDAppleAccountManager __handleMigrationUpdated:]
  -[HMDAppleAccountManager __deviceAddedToCurrentAccount:]
  -[HMDAppleAccountManager __deviceRemovedFromCurrentAccount:]
  -[HMDAppleAccountManager isModelCurrentAccount:]
  -[HMDAppleAccountManager processAccountModel:message:]
  -[HMDAppleAccountManager processAccountModelRemove:message:]
  -[HMDAppleAccountManager setRapportIdentitiesChangedNotificationToken:]


HMDCameraRecordingBulkSendSessionInitiator : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDDataStreamBulkSendListener>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHAPAccessory *accessory
 @property  BOOL hasRegisteredBulkSendListener
 @property  BOOL canOpenBulkSendSession
 @property  @? pendingOpenSessionCallback
 @property  NSString *pendingOpenSessionReason
 @property  BOOL sessionOpenInProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraRecordingBulkSendSessionInitiator logCategory]

  // instance methods
  -[HMDCameraRecordingBulkSendSessionInitiator logIdentifier]
  -[HMDCameraRecordingBulkSendSessionInitiator shutDown]
  -[HMDCameraRecordingBulkSendSessionInitiator dealloc]
  -[HMDCameraRecordingBulkSendSessionInitiator .cxx_destruct]
  -[HMDCameraRecordingBulkSendSessionInitiator workQueue]
  -[HMDCameraRecordingBulkSendSessionInitiator accessory]
  -[HMDCameraRecordingBulkSendSessionInitiator start]
  -[HMDCameraRecordingBulkSendSessionInitiator isSessionOpenInProgress]
  -[HMDCameraRecordingBulkSendSessionInitiator openNewSessionWithReason:completion:]
  -[HMDCameraRecordingBulkSendSessionInitiator accessoryDidCloseDataStream:]
  -[HMDCameraRecordingBulkSendSessionInitiator pendingOpenSessionCallback]
  -[HMDCameraRecordingBulkSendSessionInitiator _callPendingOpenSessionCallbackWithResult:error:]
  -[HMDCameraRecordingBulkSendSessionInitiator setPendingOpenSessionCallback:]
  -[HMDCameraRecordingBulkSendSessionInitiator callPendingOpenSessionCallbackWithResult:error:]
  -[HMDCameraRecordingBulkSendSessionInitiator accessory:didReceiveBulkSessionCandidate:]
  -[HMDCameraRecordingBulkSendSessionInitiator accessoryDidStartListening:]
  -[HMDCameraRecordingBulkSendSessionInitiator initWithWorkQueue:accessory:]
  -[HMDCameraRecordingBulkSendSessionInitiator handleAccessoryDoesSupportBulkSendDataStream:]
  -[HMDCameraRecordingBulkSendSessionInitiator _registerAsBulkSendListener]
  -[HMDCameraRecordingBulkSendSessionInitiator hasRegisteredBulkSendListener]
  -[HMDCameraRecordingBulkSendSessionInitiator setHasRegisteredBulkSendListener:]
  -[HMDCameraRecordingBulkSendSessionInitiator setCanOpenBulkSendSession:]
  -[HMDCameraRecordingBulkSendSessionInitiator pendingOpenSessionReason]
  -[HMDCameraRecordingBulkSendSessionInitiator _openBulkSendSessionWithReason:]
  -[HMDCameraRecordingBulkSendSessionInitiator setPendingOpenSessionReason:]
  -[HMDCameraRecordingBulkSendSessionInitiator canOpenBulkSendSession]


HMDCameraClipOperationDataSource : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDCameraClipOperationDataSource>
 @property  double operationTimeout
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDCameraClipOperationDataSource operationTimeout]
  -[HMDCameraClipOperationDataSource submitOperationEvent:]
  -[HMDCameraClipOperationDataSource appendData:toStreamingAssetAppendContext:completion:]
  -[HMDCameraClipOperationDataSource timerWithTimeInterval:options:]


HMDAssistantIntent : NSObject /usr/lib/libc++.1.dylib <HMFLogging>
 @property  NSArray *homeKitObjects
 @property  INControlHomeIntent *intent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAssistantIntent logCategory]

  // instance methods
  -[HMDAssistantIntent setIntent:]
  -[HMDAssistantIntent intent]
  -[HMDAssistantIntent .cxx_destruct]
  -[HMDAssistantIntent initWithIntent:]
  -[HMDAssistantIntent homeKitObjects]
  -[HMDAssistantIntent setHomeKitObjects:]
  -[HMDAssistantIntent _handleIntentRequestMessage:]
  -[HMDAssistantIntent _getObjectsWithUUID]
  -[HMDAssistantIntent _handleActionSetForConfirmation:message:]
  -[HMDAssistantIntent _handleActionSetForExecution:message:]
  -[HMDAssistantIntent performWithGather:message:]


HMObjectCacheHMDUserMessagePolicy : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMObjectCacheHMDUserMessagePolicy enabled]
  +[HMObjectCacheHMDUserMessagePolicy cachedInstanceForUserMessagePolicy:]


HMDUserMessagePolicy : HMFMessagePolicy /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSMutableCopying>
 @property  HMDHome *home
 @property  unsigned long userPrivilege
 @property  BOOL requiresRemoteAccess
 @property  BOOL requiresCameraStreamingAccess

  // class methods
  +[HMDUserMessagePolicy userMessagePolicyWithHome:userPrivilege:remoteAccessRequired:]
  +[HMDUserMessagePolicy userMessagePolicyWithHome:userPrivilege:remoteAccessRequired:requiresCameraStreamingAccess:]

  // instance methods
  -[HMDUserMessagePolicy copyWithZone:]
  -[HMDUserMessagePolicy init]
  -[HMDUserMessagePolicy .cxx_destruct]
  -[HMDUserMessagePolicy home]
  -[HMDUserMessagePolicy isEqual:]
  -[HMDUserMessagePolicy mutableCopyWithZone:]
  -[HMDUserMessagePolicy __initWithHome:userPrivilege:remoteAccessRequired:requiresCameraStreamingAccess:]
  -[HMDUserMessagePolicy requiresRemoteAccess]
  -[HMDUserMessagePolicy userPrivilege]
  -[HMDUserMessagePolicy requiresCameraStreamingAccess]


HMDMutableUserMessagePolicy : HMDUserMessagePolicy
 @property  unsigned long userPrivilege
 @property  BOOL requiresRemoteAccess
 @property  BOOL requiresCameraStreamingAccess

  // class methods
  +[HMDMutableUserMessagePolicy userMessagePolicyWithHome:userPrivilege:remoteAccessRequired:]
  +[HMDMutableUserMessagePolicy userMessagePolicyWithHome:userPrivilege:remoteAccessRequired:requiresCameraStreamingAccess:]

  // instance methods
  -[HMDMutableUserMessagePolicy copyWithZone:]
  -[HMDMutableUserMessagePolicy setUserPrivilege:]
  -[HMDMutableUserMessagePolicy setRequiresRemoteAccess:]
  -[HMDMutableUserMessagePolicy setRequiresCameraStreamingAccess:]


HMDPhotosPersonManagerSettingsModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSNumber *sharingFaceClassificationsEnabled
 @property  NSUUID *zoneUUID

  // class methods
  +[HMDPhotosPersonManagerSettingsModel hmbProperties]
  +[HMDPhotosPersonManagerSettingsModel sentinelParentUUID]

  // instance methods
  -[HMDPhotosPersonManagerSettingsModel createSettings]
  -[HMDPhotosPersonManagerSettingsModel initWithModelID:settings:]


HMDExternalPersonManagerSettingsModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSNumber *importingFromPhotoLibraryEnabled
 @property  NSNumber *sharingFaceClassificationsEnabled
 @property  NSUUID *zoneUUID

  // class methods
  +[HMDExternalPersonManagerSettingsModel hmbProperties]

  // instance methods
  -[HMDExternalPersonManagerSettingsModel createSettings]


HMDCameraLocalStreamControlManager : HMDCameraStreamControlManager <HMDStreamingManagerDelegate, HMDCameraIDSSessionInitiatorDelegate, HMDCameraIDSDeviceConnectionSenderDelegate, HMDCameraStreamControlManagerProtocol>
 @property  HMDCameraLocalStreamSession *streamSession
 @property  HMDCameraMediaConfigGenerator *configGenerator
 @property  HMDCameraSupportedConfigurationCache *supportedConfigCache
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDCameraStreamMetrics *streamMetrics

  // class methods
  +[HMDCameraLocalStreamControlManager logCategory]

  // instance methods
  -[HMDCameraLocalStreamControlManager dealloc]
  -[HMDCameraLocalStreamControlManager .cxx_destruct]
  -[HMDCameraLocalStreamControlManager _streamStarted]
  -[HMDCameraLocalStreamControlManager startStream:]
  -[HMDCameraLocalStreamControlManager _startStream:]
  -[HMDCameraLocalStreamControlManager updateAudioSetting:]
  -[HMDCameraLocalStreamControlManager updateAudioVolume:callback:]
  -[HMDCameraLocalStreamControlManager streamingManager:didStartStream:slotIdentifier:]
  -[HMDCameraLocalStreamControlManager streamingManagerDidReceiveFirstFrame:audioStreamSetting:aspectRatio:slotIdentifier:]
  -[HMDCameraLocalStreamControlManager streamingManagerDidStartRelay:]
  -[HMDCameraLocalStreamControlManager streamingManagerDidStopStream:error:]
  -[HMDCameraLocalStreamControlManager streamingManagerDidNetworkImprove:]
  -[HMDCameraLocalStreamControlManager streamingManagerDidNetworkDeteriorate:]
  -[HMDCameraLocalStreamControlManager streamingManagerDidUpdateConfiguration:]
  -[HMDCameraLocalStreamControlManager sessionInitiator:didSetup:]
  -[HMDCameraLocalStreamControlManager sessionInitiator:didEndSession:]
  -[HMDCameraLocalStreamControlManager setStreamSession:]
  -[HMDCameraLocalStreamControlManager _stopCurrentStreamSession:]
  -[HMDCameraLocalStreamControlManager streamSession]
  -[HMDCameraLocalStreamControlManager _negotiateStream]
  -[HMDCameraLocalStreamControlManager _cleanUpStreamSession:]
  -[HMDCameraLocalStreamControlManager configGenerator]
  -[HMDCameraLocalStreamControlManager _reconfigureStream:]
  -[HMDCameraLocalStreamControlManager _reconfigureStreams]
  -[HMDCameraLocalStreamControlManager _sendUpdatedConfiguration]
  -[HMDCameraLocalStreamControlManager deviceConnectionSender:didSetup:]
  -[HMDCameraLocalStreamControlManager deviceConnectionSender:didEndSession:]
  -[HMDCameraLocalStreamControlManager negotiateStream]
  -[HMDCameraLocalStreamControlManager reconfigureStream:]
  -[HMDCameraLocalStreamControlManager stopStream:]
  -[HMDCameraLocalStreamControlManager remoteSetup:]
  -[HMDCameraLocalStreamControlManager setConfigGenerator:]
  -[HMDCameraLocalStreamControlManager supportedConfigCache]
  -[HMDCameraLocalStreamControlManager initWithSessionID:workQueue:streamSnapshotHandler:reachabilityPath:device:delegate:delegateQueue:accessory:streamManagementService:remoteCapabilities:supportedConfigCache:streamPreference:]
  -[HMDCameraLocalStreamControlManager _writeSetupEndPoint]
  -[HMDCameraLocalStreamControlManager _getSupportedConfigurations]
  -[HMDCameraLocalStreamControlManager _handleSupportedParameters:]
  -[HMDCameraLocalStreamControlManager _sendSetupEndPointRead]
  -[HMDCameraLocalStreamControlManager _handleSetupEndPointRead:]
  -[HMDCameraLocalStreamControlManager _validateSetupEndPointReadWithWrite]
  -[HMDCameraLocalStreamControlManager _calculateMTU]
  -[HMDCameraLocalStreamControlManager _startStreamingManager]
  -[HMDCameraLocalStreamControlManager _writeStopConfig:]
  -[HMDCameraLocalStreamControlManager _writeSelectConfig:reconfigure:]
  -[HMDCameraLocalStreamControlManager _writeStartConfig]
  -[HMDCameraLocalStreamControlManager _writeReselectConfig]
  -[HMDCameraLocalStreamControlManager setSupportedConfigCache:]


HMDNetworkRouterFirewallRuleManagerUtils : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMDNetworkRouterFirewallRuleManagerUtils dumpTLVsFromJSONData:error:]


HMDTimeInformationMonitor : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate>
 @property  HMFTimer *expirationTimer
 @property  NSHashTable *delegates
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDTimeInformationMonitor delegates]
  -[HMDTimeInformationMonitor removeDelegate:]
  -[HMDTimeInformationMonitor timerDidFire:]
  -[HMDTimeInformationMonitor addDelegate:]
  -[HMDTimeInformationMonitor setDelegates:]
  -[HMDTimeInformationMonitor init]
  -[HMDTimeInformationMonitor dealloc]
  -[HMDTimeInformationMonitor .cxx_destruct]
  -[HMDTimeInformationMonitor clientQueue]
  -[HMDTimeInformationMonitor expirationTimer]
  -[HMDTimeInformationMonitor systemTimeChanged:]
  -[HMDTimeInformationMonitor _updateWithTimerInterval]
  -[HMDTimeInformationMonitor _handleExpiration]


HMDCloudManagerDataSource : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDHomeManager *homeManager

  // instance methods
  -[HMDCloudManagerDataSource initWithHomeManager:]
  -[HMDCloudManagerDataSource .cxx_destruct]
  -[HMDCloudManagerDataSource homeManager]
  -[HMDCloudManagerDataSource isKeychainSyncEnabled]
  -[HMDCloudManagerDataSource supportsKeyTransferServer]
  -[HMDCloudManagerDataSource keyTransferAgent]
  -[HMDCloudManagerDataSource isControllerKeyAvailable]
  -[HMDCloudManagerDataSource dataMigrationOptions]
  -[HMDCloudManagerDataSource queryDatabaseOperationWithBlock:]


HMDRelayManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFNetMonitorDelegate, IDSServiceDelegateHomeKit, NSURLSessionDelegate, HMFLogging>
 @property  NSString *controllerIdentifier
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  IDSService *idsService
 @property  NSHashTable *delegates
 @property  NSHashTable *relayAccessories
 @property  NSMutableArray *relayStreams
 @property  unsigned long currentState
 @property  NSURLSession *urlSession
 @property  HMFNetMonitor *networkMonitor
 @property  HMDHome *home
 @property  BOOL supported
 @property  BOOL enabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRelayManager logCategory]

  // instance methods
  -[HMDRelayManager delegates]
  -[HMDRelayManager removeDelegate:]
  -[HMDRelayManager addDelegate:]
  -[HMDRelayManager isSupported]
  -[HMDRelayManager setCurrentState:]
  -[HMDRelayManager urlSession]
  -[HMDRelayManager currentState]
  -[HMDRelayManager logIdentifier]
  -[HMDRelayManager init]
  -[HMDRelayManager service:account:incomingAccessoryData:fromAccessoryID:context:]
  -[HMDRelayManager service:account:incomingAccessoryReportMessage:controllerID:accessoryID:context:]
  -[HMDRelayManager setSupported:]
  -[HMDRelayManager .cxx_destruct]
  -[HMDRelayManager URLSession:task:didReceiveChallenge:completionHandler:]
  -[HMDRelayManager setHome:]
  -[HMDRelayManager _updateCurrentState]
  -[HMDRelayManager clientQueue]
  -[HMDRelayManager isEnabled]
  -[HMDRelayManager home]
  -[HMDRelayManager idsService]
  -[HMDRelayManager setEnabled:]
  -[HMDRelayManager networkMonitor]
  -[HMDRelayManager initWithHome:]
  -[HMDRelayManager addRelayAccessory:]
  -[HMDRelayManager removeRelayAccessory:]
  -[HMDRelayManager addUserToRelayAccessories:consentTokens:completionQueue:completionHandler:]
  -[HMDRelayManager startAccessories:]
  -[HMDRelayManager accessory:didUpdateEnabledState:]
  -[HMDRelayManager accessoryDidActivate:]
  -[HMDRelayManager accessoryDidPair:]
  -[HMDRelayManager controllerIdentifier]
  -[HMDRelayManager networkMonitorIsReachable:]
  -[HMDRelayManager networkMonitorIsUnreachable:]
  -[HMDRelayManager _handleRelayManagerUnsupported]
  -[HMDRelayManager _handleRelayManagerEnabling]
  -[HMDRelayManager _handleRelayManagerEnabled]
  -[HMDRelayManager _handleRelayManagerDisabled]
  -[HMDRelayManager _updateControllerIdentifier]
  -[HMDRelayManager _setupRelayForAccessory:]
  -[HMDRelayManager _handleAccessoryEnabled:]
  -[HMDRelayManager requestPairingWithRelayAccessories:]
  -[HMDRelayManager _disableRelayForAccessory:]
  -[HMDRelayManager _tearDownRelayForAccessory:]
  -[HMDRelayManager _handleNotifyingDelegatesOfControllerIdentifierUpdate:]
  -[HMDRelayManager setControllerIdentifier:]
  -[HMDRelayManager relayStreams]
  -[HMDRelayManager relayAccessories]
  -[HMDRelayManager _requestPairingWithAccessories:]
  -[HMDRelayManager _requestConsentTokensForAccessoryIdentifiers:administratorIdentifier:]
  -[HMDRelayManager _consentTokenForConsentTokenAttributes:matchedAccessory:error:]
  -[HMDRelayManager _accessTokensForConsentTokens:user:completionHandler:]
  -[HMDRelayManager _accessTokenForAccessTokenAttributes:consentTokens:matchedConsentToken:error:]
  -[HMDRelayManager _enableRelayForAccessory:]
  -[HMDRelayManager _activateAccessory:]
  -[HMDRelayManager _pairAccessory:]
  -[HMDRelayManager _relayStreamForAccessory:]
  -[HMDRelayManager _sendAccessoryReport:reportIdentifier:]
  -[HMDRelayManager __resumeAllStreams]
  -[HMDRelayManager __suspendAllStreams]
  -[HMDRelayManager _requestUserReportAccessory:reportIdentifier:]


HMDEvent : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, HMFDumpState, HMDHomeMessageReceiver, HMFLogging, HMDBackingStoreObjectProtocol>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  <HMDEventDelegate> *delegate
 @property  HMDHome *home
 @property  HMDEventTrigger *eventTrigger
 @property  NSUUID *uuid
 @property  NSString *triggerType
 @property  NSString *logString
 @property  BOOL endEvent
 @property  unsigned long activationType
 @property  BOOL active
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDEvent supportsSecureCoding]
  +[HMDEvent logCategory]
  +[HMDEvent hasMessageReceiverChildren]

  // instance methods
  -[HMDEvent logString]
  -[HMDEvent messageTargetUUID]
  -[HMDEvent messageReceiveQueue]
  -[HMDEvent setWorkQueue:]
  -[HMDEvent logIdentifier]
  -[HMDEvent _updateTriggerType]
  -[HMDEvent setEventTrigger:]
  -[HMDEvent isEndEvent]
  -[HMDEvent uuid]
  -[HMDEvent _setup]
  -[HMDEvent .cxx_destruct]
  -[HMDEvent workQueue]
  -[HMDEvent setHome:]
  -[HMDEvent encodeWithCoder:]
  -[HMDEvent setMsgDispatcher:]
  -[HMDEvent msgDispatcher]
  -[HMDEvent _registerForMessages]
  -[HMDEvent isActive]
  -[HMDEvent home]
  -[HMDEvent triggerType]
  -[HMDEvent isEqual:]
  -[HMDEvent setDelegate:]
  -[HMDEvent eventTrigger]
  -[HMDEvent invalidate]
  -[HMDEvent dumpState]
  -[HMDEvent delegate]
  -[HMDEvent activationType]
  -[HMDEvent setActivationType:]
  -[HMDEvent initWithCoder:]
  -[HMDEvent emptyModelObject]
  -[HMDEvent _transactionObjectUpdated:newValues:message:]
  -[HMDEvent _transactionObjectRemoved:message:]
  -[HMDEvent transactionObjectUpdated:newValues:message:]
  -[HMDEvent transactionObjectRemoved:message:]
  -[HMDEvent _activate:completionHandler:]
  -[HMDEvent modelObjectWithChangeType:]
  -[HMDEvent createPayload]
  -[HMDEvent initWithModel:home:]
  -[HMDEvent _handleUpdateRequest:]
  -[HMDEvent analyticsTriggerEventData]
  -[HMDEvent configure:messageDispatcher:queue:delegate:]
  -[HMDEvent setLogString:]


HMDEventModel : HMDBackingStoreModelObject
 @property  NSNumber *endEvent

  // class methods
  +[HMDEventModel properties]
  +[HMDEventModel eventModelWithDictionary:home:eventTriggerUUID:className:message:]
  +[HMDEventModel eventModelWithDictionary:home:eventTriggerUUID:message:]


HMDProcessMonitor : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *xpcListenerQueue
 @property  HMFTimer *spiClientTerminationDelayTimer
 @property  NSMutableSet *pendingTerminatedApplications
 @property  NSArray *processes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDProcessMonitor logCategory]

  // instance methods
  -[HMDProcessMonitor timerDidFire:]
  -[HMDProcessMonitor init]
  -[HMDProcessMonitor dealloc]
  -[HMDProcessMonitor .cxx_destruct]
  -[HMDProcessMonitor removeProcess:]
  -[HMDProcessMonitor processes]
  -[HMDProcessMonitor _removeProcess:]
  -[HMDProcessMonitor initWithXpcListenerQueue:]
  -[HMDProcessMonitor processInfoForConnection:]
  -[HMDProcessMonitor xpcListenerQueue]
  -[HMDProcessMonitor updateApplicationMonitor]
  -[HMDProcessMonitor pendingTerminatedApplications]
  -[HMDProcessMonitor spiClientTerminationDelayTimer]
  -[HMDProcessMonitor setSpiClientTerminationDelayTimer:]
  -[HMDProcessMonitor _processAppStateChange:]
  -[HMDProcessMonitor processInfoForPID:]
  -[HMDProcessMonitor removeFromPendingTerminated:]


HMDSymptomManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFUnfairLock *lock
 @property  <HMDSharingDeviceDiscovery> *deviceDiscovery
 @property  <HMDCompanionLinkClient> *companionLinkClient
 @property  HMFWiFiManager *wifiManager
 @property  NSMapTable *symptomContainerByRegisteredAccessory
 @property  NSMapTable *nearbySFDevices
 @property  NSMapTable *networkReachableRPCompanionLinkDevices
 @property  unsigned long deviceDiscoveryFlags
 @property  int deviceProblemNotificationToken
 @property  BOOL deviceProblemNotificationTokenValid
 @property  BOOL supportsRegisteringAccessories
 @property  NSSet *currentDeviceSymptoms
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSymptomManager logCategory]
  +[HMDSymptomManager sharedManager]

  // instance methods
  -[HMDSymptomManager _start]
  -[HMDSymptomManager wifiManager]
  -[HMDSymptomManager init]
  -[HMDSymptomManager dealloc]
  -[HMDSymptomManager .cxx_destruct]
  -[HMDSymptomManager _stop]
  -[HMDSymptomManager workQueue]
  -[HMDSymptomManager lock]
  -[HMDSymptomManager deviceDiscovery]
  -[HMDSymptomManager handleAccessoryRemovedNotification:]
  -[HMDSymptomManager startDiscoveringSymptomsRequiringNearbyInfo]
  -[HMDSymptomManager stopDiscoveringSymptomsRequiringNearbyInfo]
  -[HMDSymptomManager registerAccessory:delegate:]
  -[HMDSymptomManager currentDeviceSymptoms]
  -[HMDSymptomManager initiateFixForAccessory:completion:]
  -[HMDSymptomManager initWithQueue:deviceDiscovery:companionLinkClient:wifiManager:]
  -[HMDSymptomManager handleAccessoryWiFiNetworkInfoUpdatedNotification:]
  -[HMDSymptomManager handleCurrentNetworkDidChangeNotification:]
  -[HMDSymptomManager companionLinkClient]
  -[HMDSymptomManager isDeviceProblemNotificationTokenValid]
  -[HMDSymptomManager deviceProblemNotificationToken]
  -[HMDSymptomManager _currentDeviceSymptoms]
  -[HMDSymptomManager supportsRegisteringAccessories]
  -[HMDSymptomManager symptomContainerByRegisteredAccessory]
  -[HMDSymptomManager _updateSymptomsForRegisteredAccessory:]
  -[HMDSymptomManager nearbySFDevices]
  -[HMDSymptomManager setDeviceDiscoveryFlags:]
  -[HMDSymptomManager _initiateFixForAccessory:completion:]
  -[HMDSymptomManager _sfDeviceLostHandler:]
  -[HMDSymptomManager _stopDeviceDiscovery]
  -[HMDSymptomManager _startDeviceDiscovery]
  -[HMDSymptomManager _startCompanionLinkClient]
  -[HMDSymptomManager deviceDiscoveryFlags]
  -[HMDSymptomManager _sfDeviceFoundHandler:]
  -[HMDSymptomManager _sfDeviceChangedHandler:]
  -[HMDSymptomManager _rpDeviceFoundHandler:]
  -[HMDSymptomManager _rpDeviceChangedHandler:]
  -[HMDSymptomManager _rpDeviceLostHandler:]
  -[HMDSymptomManager _stopCompanionLinkClient]
  -[HMDSymptomManager networkReachableRPCompanionLinkDevices]
  -[HMDSymptomManager setDeviceProblemNotificationTokenValid:]
  -[HMDSymptomManager _localSymptomsForRegisteredAccessory:]
  -[HMDSymptomManager _registeredAccessoryWithIDSIdentifier:]
  -[HMDSymptomManager _updateSymptomsForRegisteredAccessoryWithIDSIdentifier:]
  -[HMDSymptomManager deregisterAccessory:]
  -[HMDSymptomManager _updateSymptomsForAllRegisteredAccessories]
  -[HMDSymptomManager setDeviceProblemNotificationToken:]
  -[HMDSymptomManager setSupportsRegisteringAccessories:]


HMDSymptomContainer : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *idsIdentifier
 @property  <HMDAccessorySymptomsDelegate> *delegate
 @property  NSSet *broadcastedSymptoms
 @property  NSSet *localSymptoms

  // instance methods
  -[HMDSymptomContainer .cxx_destruct]
  -[HMDSymptomContainer setDelegate:]
  -[HMDSymptomContainer idsIdentifier]
  -[HMDSymptomContainer delegate]
  -[HMDSymptomContainer localSymptoms]
  -[HMDSymptomContainer setLocalSymptoms:]
  -[HMDSymptomContainer initWithIDSIdentifier:]
  -[HMDSymptomContainer broadcastedSymptoms]
  -[HMDSymptomContainer setBroadcastedSymptoms:]


HMDUserManagementOperationManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMFTimer *saveTimer
 @property  NSHashTable *observedAccessories
 @property  NSArray *operations
 @property  HMDHomeManager *homeManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserManagementOperationManager initialize]
  +[HMDUserManagementOperationManager sharedManager]
  +[HMDUserManagementOperationManager setSharedManager:]

  // instance methods
  -[HMDUserManagementOperationManager timerDidFire:]
  -[HMDUserManagementOperationManager operations]
  -[HMDUserManagementOperationManager cancelAllOperations]
  -[HMDUserManagementOperationManager init]
  -[HMDUserManagementOperationManager addOperation:]
  -[HMDUserManagementOperationManager dealloc]
  -[HMDUserManagementOperationManager .cxx_destruct]
  -[HMDUserManagementOperationManager __save]
  -[HMDUserManagementOperationManager clientQueue]
  -[HMDUserManagementOperationManager setHomeManager:]
  -[HMDUserManagementOperationManager shortDescription]
  -[HMDUserManagementOperationManager removeOperation:]
  -[HMDUserManagementOperationManager homeManager]
  -[HMDUserManagementOperationManager initWithOperations:]
  -[HMDUserManagementOperationManager removeOperationWithIdentifier:]
  -[HMDUserManagementOperationManager saveTimer]
  -[HMDUserManagementOperationManager __registerIfNeededForReachablityChangeNotifications]
  -[HMDUserManagementOperationManager _handleRemovedOperation:]
  -[HMDUserManagementOperationManager _cleanPriorOperations:]
  -[HMDUserManagementOperationManager _handleAddedOperation:]
  -[HMDUserManagementOperationManager __registerIfNeededForReachablityChangeNotificationsForAccessory:]
  -[HMDUserManagementOperationManager __executeOperation:]
  -[HMDUserManagementOperationManager __deregisterIfNeededForReachablityChangeNotificationsForAccessory:]
  -[HMDUserManagementOperationManager __removeOperationAndProcessDependantOperations:]
  -[HMDUserManagementOperationManager _filteredOperationsWithDependency:]
  -[HMDUserManagementOperationManager _filteredOperationsForAccessory:]
  -[HMDUserManagementOperationManager observedAccessories]
  -[HMDUserManagementOperationManager _handleAccessoryIsReachable:]
  -[HMDUserManagementOperationManager _reallySave]
  -[HMDUserManagementOperationManager operationCancelled:]
  -[HMDUserManagementOperationManager operationStoppedBackingOff:]


HMDUserManagementOperation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, NSSecureCoding>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  BOOL executing
 @property  HMFTimer *expirationTimer
 @property  HMDUserManagementOperationManager *operationManager
 @property  double backoffInterval
 @property  HMFTimer *backoffTimer
 @property  BOOL backingOff
 @property  unsigned long state
 @property  HMDAccessory *accessory
 @property  BOOL addOperation
 @property  BOOL removeOperation
 @property  BOOL auditOperation
 @property  NSArray *auditUsersToBeAdded
 @property  BOOL lastOperationFailed
 @property  HMDAccessoryInvitation *accessoryInvitation
 @property  NSDictionary *accessoryInvitationInformation
 @property  <HMDUserManagementOperationDelegate> *delegate
 @property  NSUUID *identifier
 @property  unsigned long operationType
 @property  HMDUser *user
 @property  BOOL finished
 @property  BOOL cancelled
 @property  BOOL ready
 @property  BOOL expired
 @property  NSDate *expirationDate
 @property  NSArray *dependencies
 @property  HAPPairingIdentity *ownerPairingIdentity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserManagementOperation initialize]
  +[HMDUserManagementOperation supportsSecureCoding]
  +[HMDUserManagementOperation shortDescription]
  +[HMDUserManagementOperation operationWithDictionary:home:]
  +[HMDUserManagementOperation auditUserManagementOperationAccessory:model:]
  +[HMDUserManagementOperation addUserManagementOperationForUser:accessory:model:]
  +[HMDUserManagementOperation removeUserManagementOperationForUser:accessory:model:]

  // instance methods
  -[HMDUserManagementOperation user]
  -[HMDUserManagementOperation isCancelled]
  -[HMDUserManagementOperation timerDidFire:]
  -[HMDUserManagementOperation _isFinished]
  -[HMDUserManagementOperation isReady]
  -[HMDUserManagementOperation init]
  -[HMDUserManagementOperation setState:]
  -[HMDUserManagementOperation .cxx_destruct]
  -[HMDUserManagementOperation dependencies]
  -[HMDUserManagementOperation backoffTimer]
  -[HMDUserManagementOperation isExecuting]
  -[HMDUserManagementOperation encodeWithCoder:]
  -[HMDUserManagementOperation identifier]
  -[HMDUserManagementOperation clientQueue]
  -[HMDUserManagementOperation isFinished]
  -[HMDUserManagementOperation isExpired]
  -[HMDUserManagementOperation isValid]
  -[HMDUserManagementOperation addDependency:]
  -[HMDUserManagementOperation descriptionWithPointer:]
  -[HMDUserManagementOperation cancel]
  -[HMDUserManagementOperation accessory]
  -[HMDUserManagementOperation shortDescription]
  -[HMDUserManagementOperation setExecuting:]
  -[HMDUserManagementOperation expirationDate]
  -[HMDUserManagementOperation setDelegate:]
  -[HMDUserManagementOperation state]
  -[HMDUserManagementOperation setAccessory:]
  -[HMDUserManagementOperation operationType]
  -[HMDUserManagementOperation delegate]
  -[HMDUserManagementOperation initWithCoder:]
  -[HMDUserManagementOperation setOperationManager:]
  -[HMDUserManagementOperation operationManager]
  -[HMDUserManagementOperation setBackoffTimer:]
  -[HMDUserManagementOperation expirationTimer]
  -[HMDUserManagementOperation modelObjectWithChangeType:]
  -[HMDUserManagementOperation accessoryInvitationInformation]
  -[HMDUserManagementOperation accessoryInvitation]
  -[HMDUserManagementOperation dictionaryEncoding]
  -[HMDUserManagementOperation modelObjectWithChangeType:parentUUID:]
  -[HMDUserManagementOperation executeWithCompletionQueue:completionHandler:]
  -[HMDUserManagementOperation setOwnerPairingIdentity:]
  -[HMDUserManagementOperation isAuditOperation]
  -[HMDUserManagementOperation auditUsersToBeAdded]
  -[HMDUserManagementOperation isAddOperation]
  -[HMDUserManagementOperation populateModelObjectWithChangeType:version:]
  -[HMDUserManagementOperation initWithOperationType:identifier:user:accessory:expiration:]
  -[HMDUserManagementOperation _setupExpirationTimer]
  -[HMDUserManagementOperation isBackingOff]
  -[HMDUserManagementOperation backoffInterval]
  -[HMDUserManagementOperation nextBackoffInterval]
  -[HMDUserManagementOperation setBackingOff:]
  -[HMDUserManagementOperation setLastOperationFailed:]
  -[HMDUserManagementOperation _startBackoffTimer]
  -[HMDUserManagementOperation _addPairingToHAPAccessory:completionHandler:]
  -[HMDUserManagementOperation _removePairingFromHAPAccessory:completionHandler:]
  -[HMDUserManagementOperation _auditPairingsForHAPAccessory:completionHandler:]
  -[HMDUserManagementOperation _findConflictingAccessory:]
  -[HMDUserManagementOperation setAuditUsersToBeAdded:]
  -[HMDUserManagementOperation lastOperationFailed]
  -[HMDUserManagementOperation _accessoryInvitationState]
  -[HMDUserManagementOperation ownerPairingIdentity]
  -[HMDUserManagementOperation _endBackoffTimer]
  -[HMDUserManagementOperation transactionWithObjectChangeType:parentUUID:]
  -[HMDUserManagementOperation isRemoveOperation]
  -[HMDUserManagementOperation updateDelegate:]
  -[HMDUserManagementOperation mergeWithOperation:]


HMDUserManagementOperationModel : HMDBackingStoreModelObject
 @property  NSNumber *operationType
 @property  HAPPairingIdentity *userPairingIdentity
 @property  HMFPairingIdentity *accessoryPairingIdentity
 @property  HAPPairingIdentity *ownerPairingIdentity
 @property  NSDate *expirationDate
 @property  NSArray *dependencies

  // class methods
  +[HMDUserManagementOperationModel properties]

  // instance methods
  -[HMDUserManagementOperationModel dependentUUIDs]


HMDWACBrowser : NSObject /usr/lib/libc++.1.dylib <HMDWACScannerDelegate, HMFLogging>
 @property  <HMDWACBrowserDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  BOOL scanIsActive
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDWACBrowser logCategory]

  // instance methods
  -[HMDWACBrowser setDelegateQueue:]
  -[HMDWACBrowser delegateQueue]
  -[HMDWACBrowser setDelegate:queue:]
  -[HMDWACBrowser .cxx_destruct]
  -[HMDWACBrowser setDelegate:]
  -[HMDWACBrowser delegate]
  -[HMDWACBrowser scanner:didAddDevice:]
  -[HMDWACBrowser scanner:didRemoveDevice:]
  -[HMDWACBrowser scanner:didUpdateDevice:]
  -[HMDWACBrowser scanner:didError:]
  -[HMDWACBrowser scannerDidStop:]
  -[HMDWACBrowser scanIsActive]
  -[HMDWACBrowser setScanIsActive:]
  -[HMDWACBrowser initWithWACScanner:messageDispatcher:]
  -[HMDWACBrowser startBrowsingForAccessories]
  -[HMDWACBrowser startBrowsingForAirPlayWACAccessoriesWithBrowser:]
  -[HMDWACBrowser stopBrowsingForAccessories]
  -[HMDWACBrowser requestBackoff]
  -[HMDWACBrowser clearBackoff]


HMDHomeAssistantOperation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  @? completionHandler
 @property  HMFTimer *accessoryConnectivityWaitTimer
 @property  NSSet *accessoriesToOperateOn
 @property  NSMutableSet *reachableAccessoriesToOperateOn
 @property  BOOL completionHandlerCalled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeAssistantOperation homeAssistantOperationWithActionSet:queue:]
  +[HMDHomeAssistantOperation homeAssistantOperationWithWriteRequests:queue:]
  +[HMDHomeAssistantOperation homeAssistantOperationWithReadRequests:queue:]

  // instance methods
  -[HMDHomeAssistantOperation timerDidFire:]
  -[HMDHomeAssistantOperation startWithCompletion:]
  -[HMDHomeAssistantOperation dealloc]
  -[HMDHomeAssistantOperation .cxx_destruct]
  -[HMDHomeAssistantOperation workQueue]
  -[HMDHomeAssistantOperation completionHandlerCalled]
  -[HMDHomeAssistantOperation setCompletionHandlerCalled:]
  -[HMDHomeAssistantOperation _callCompletion]
  -[HMDHomeAssistantOperation completionHandler]
  -[HMDHomeAssistantOperation setCompletionHandler:]
  -[HMDHomeAssistantOperation handleAccessoryIsReachable:]
  -[HMDHomeAssistantOperation initWithAccessories:queue:]
  -[HMDHomeAssistantOperation reachableAccessoriesToOperateOn]
  -[HMDHomeAssistantOperation _testForReachability]
  -[HMDHomeAssistantOperation accessoryConnectivityWaitTimer]
  -[HMDHomeAssistantOperation accessoriesToOperateOn]


HMDUserPresenceRegion : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMDUserPresenceRegion regionWithDict:]
  +[HMDUserPresenceRegion regionWithValue:]
  +[HMDUserPresenceRegion regionWithNumber:]
  +[HMDUserPresenceRegion regionWithMessage:]
  +[HMDUserPresenceRegion regionWithCoder:]

  // instance methods
  -[HMDUserPresenceRegion number]
  -[HMDUserPresenceRegion addToCoder:]
  -[HMDUserPresenceRegion addToPayload:]
  -[HMDUserPresenceRegion isEqual:]
  -[HMDUserPresenceRegion value]
  -[HMDUserPresenceRegion initWithNumber:]


HMDRemoteLoginAnisetteDataHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDHomeMessageReceiver>
 @property  HMDAppleMediaAccessory *accessory
 @property  NSUUID *uuid
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  AKAnisetteProvisioningController *provisioningController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDRemoteLoginAnisetteDataHandler logCategory]
  +[HMDRemoteLoginAnisetteDataHandler hasMessageReceiverChildren]

  // instance methods
  -[HMDRemoteLoginAnisetteDataHandler messageTargetUUID]
  -[HMDRemoteLoginAnisetteDataHandler messageReceiveQueue]
  -[HMDRemoteLoginAnisetteDataHandler setWorkQueue:]
  -[HMDRemoteLoginAnisetteDataHandler logIdentifier]
  -[HMDRemoteLoginAnisetteDataHandler uuid]
  -[HMDRemoteLoginAnisetteDataHandler .cxx_destruct]
  -[HMDRemoteLoginAnisetteDataHandler workQueue]
  -[HMDRemoteLoginAnisetteDataHandler setMsgDispatcher:]
  -[HMDRemoteLoginAnisetteDataHandler msgDispatcher]
  -[HMDRemoteLoginAnisetteDataHandler accessory]
  -[HMDRemoteLoginAnisetteDataHandler provisioningController]
  -[HMDRemoteLoginAnisetteDataHandler registerForMessages]
  -[HMDRemoteLoginAnisetteDataHandler configureWithWorkQueue:messageDispatcher:]
  -[HMDRemoteLoginAnisetteDataHandler _handleProvisionAnisetteDataRequestMessage:]
  -[HMDRemoteLoginAnisetteDataHandler _handleSyncAnisetteDataRequestMessage:]
  -[HMDRemoteLoginAnisetteDataHandler _handleEraseAnisetteDataRequestMessage:]
  -[HMDRemoteLoginAnisetteDataHandler _handleFetchAnisetteDataRequestMessage:]
  -[HMDRemoteLoginAnisetteDataHandler _handleLegacyAnisetteDataRequestMessage:]
  -[HMDRemoteLoginAnisetteDataHandler initWithUUID:accessory:]


HMDUserDataZoneControllerShareLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  unsigned long result
 @property  BOOL didAccept

  // class methods
  +[HMDUserDataZoneControllerShareLogEvent uuid]

  // instance methods
  -[HMDUserDataZoneControllerShareLogEvent eventName]
  -[HMDUserDataZoneControllerShareLogEvent result]
  -[HMDUserDataZoneControllerShareLogEvent serializedEvent]
  -[HMDUserDataZoneControllerShareLogEvent initWithResult:didAccept:]
  -[HMDUserDataZoneControllerShareLogEvent didAccept]


HMDCameraSnapshotIDSRelay : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, IDSServiceDelegate>
 @property  NSString *logIdentifier
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *sessionID
 @property  IDSService *idsStreamService
 @property  HMFOSTransaction *snapshotRelayTransaction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotIDSRelay logCategory]

  // instance methods
  -[HMDCameraSnapshotIDSRelay sessionID]
  -[HMDCameraSnapshotIDSRelay logIdentifier]
  -[HMDCameraSnapshotIDSRelay dealloc]
  -[HMDCameraSnapshotIDSRelay .cxx_destruct]
  -[HMDCameraSnapshotIDSRelay workQueue]
  -[HMDCameraSnapshotIDSRelay idsStreamService]
  -[HMDCameraSnapshotIDSRelay snapshotRelayTransaction]
  -[HMDCameraSnapshotIDSRelay initWithSessionID:logIdentifier:workQueue:]


HMDHomeAIHomePersonDataReceiver : HMDHomeAIPersonDataReceiver <HMFLogging, HMIHomePersonManagerDataSource>
 @property  HMIHomePersonManager *homePersonManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeAIHomePersonDataReceiver logCategory]

  // instance methods
  -[HMDHomeAIHomePersonDataReceiver logIdentifier]
  -[HMDHomeAIHomePersonDataReceiver fetchSettingsWithCompletion:]
  -[HMDHomeAIHomePersonDataReceiver .cxx_destruct]
  -[HMDHomeAIHomePersonDataReceiver fetchAllUnassociatedFaceCropsWithCompletion:]
  -[HMDHomeAIHomePersonDataReceiver removePersonsWithUUIDs:completion:]
  -[HMDHomeAIHomePersonDataReceiver removeFaceCropsWithUUIDs:completion:]
  -[HMDHomeAIHomePersonDataReceiver removeFaceprintsWithUUIDs:completion:]
  -[HMDHomeAIHomePersonDataReceiver homePersonManager]
  -[HMDHomeAIHomePersonDataReceiver addFaceprints:completion:]
  -[HMDHomeAIHomePersonDataReceiver handleUpdatedUnassociatedFaceCrop:mirrorOutputFuture:]
  -[HMDHomeAIHomePersonDataReceiver handleUpdatedSettings:mirrorOutputFuture:]
  -[HMDHomeAIHomePersonDataReceiver handleFaceMisclassificationForFaceCropData:personUUID:]
  -[HMDHomeAIHomePersonDataReceiver initWithPersonManagerUUID:homeUUID:workQueue:]
  -[HMDHomeAIHomePersonDataReceiver initWithHomePersonManager:workQueue:]
  -[HMDHomeAIHomePersonDataReceiver addFaceCrops:completion:]
  -[HMDHomeAIHomePersonDataReceiver addPersons:completion:]
  -[HMDHomeAIHomePersonDataReceiver addPersonFaceCrops:completion:]


HMDCameraMetricsLogEvent : HMDLogEvent
 @property  HMDCameraSessionID *sessionID
 @property  HMDAccessory *accessory
 @property  BOOL isLocal

  // instance methods
  -[HMDCameraMetricsLogEvent sessionID]
  -[HMDCameraMetricsLogEvent .cxx_destruct]
  -[HMDCameraMetricsLogEvent accessory]
  -[HMDCameraMetricsLogEvent isLocal]
  -[HMDCameraMetricsLogEvent initWithMetricUUID:sessionID:cameraAccessory:isLocal:]


HMDCameraMetricsStreamLogEvent : HMDCameraMetricsLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSNumber *referenceTimestamp

  // class methods
  +[HMDCameraMetricsStreamLogEvent initialize]
  +[HMDCameraMetricsStreamLogEvent uuid]

  // instance methods
  -[HMDCameraMetricsStreamLogEvent .cxx_destruct]
  -[HMDCameraMetricsStreamLogEvent initWithSessionID:cameraAccessory:isLocal:]
  -[HMDCameraMetricsStreamLogEvent AWDMessageType]
  -[HMDCameraMetricsStreamLogEvent metricForAWD]
  -[HMDCameraMetricsStreamLogEvent referenceTimestamp]
  -[HMDCameraMetricsStreamLogEvent setReferenceTimestamp:]
  -[HMDCameraMetricsStreamLogEvent timeSinceReference:]
  -[HMDCameraMetricsStreamLogEvent addInitialConfiguration:]
  -[HMDCameraMetricsStreamLogEvent addReconfiguration:]
  -[HMDCameraMetricsStreamLogEvent addIDSSession:]
  -[HMDCameraMetricsStreamLogEvent addIDSConnectionSetup:]
  -[HMDCameraMetricsStreamLogEvent addStreamMessaging:]


HMDCameraMetricsSnapshotLogEvent : HMDCameraMetricsLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL snapshotForNotification
 @property  NSNumber *referenceTimestamp

  // class methods
  +[HMDCameraMetricsSnapshotLogEvent initialize]
  +[HMDCameraMetricsSnapshotLogEvent uuid]

  // instance methods
  -[HMDCameraMetricsSnapshotLogEvent .cxx_destruct]
  -[HMDCameraMetricsSnapshotLogEvent AWDMessageType]
  -[HMDCameraMetricsSnapshotLogEvent metricForAWD]
  -[HMDCameraMetricsSnapshotLogEvent initWithSessionID:cameraAccessory:isLocal:snapshotForNotification:]
  -[HMDCameraMetricsSnapshotLogEvent referenceTimestamp]
  -[HMDCameraMetricsSnapshotLogEvent setReferenceTimestamp:]
  -[HMDCameraMetricsSnapshotLogEvent snapshotForNotification]
  -[HMDCameraMetricsSnapshotLogEvent timeSinceReference:]
  -[HMDCameraMetricsSnapshotLogEvent addIDSSession:]
  -[HMDCameraMetricsSnapshotLogEvent addIDSTransfer:]
  -[HMDCameraMetricsSnapshotLogEvent addSnapshotMessaging:]


HMDEducationModeMessageFilter : HMFMessageFilter /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // class methods
  +[HMDEducationModeMessageFilter policyClasses]
  +[HMDEducationModeMessageFilter canInitWithMessage:]

  // instance methods
  -[HMDEducationModeMessageFilter acceptWithPolicies:error:]


HMDHomeAdministratorConfigurationOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMFMessage *message
 @property  HMDHome *home
 @property  BOOL shouldSuspendSyncing
 @property  @? sendCompletionBlock
 @property  @? responseHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeAdministratorConfigurationOperation timeout]
  +[HMDHomeAdministratorConfigurationOperation logCategory]

  // instance methods
  -[HMDHomeAdministratorConfigurationOperation message]
  -[HMDHomeAdministratorConfigurationOperation logIdentifier]
  -[HMDHomeAdministratorConfigurationOperation main]
  -[HMDHomeAdministratorConfigurationOperation .cxx_destruct]
  -[HMDHomeAdministratorConfigurationOperation responseHandler]
  -[HMDHomeAdministratorConfigurationOperation home]
  -[HMDHomeAdministratorConfigurationOperation messageDispatcher]
  -[HMDHomeAdministratorConfigurationOperation setResponseHandler:]
  -[HMDHomeAdministratorConfigurationOperation sendCompletionBlock]
  -[HMDHomeAdministratorConfigurationOperation setSendCompletionBlock:]
  -[HMDHomeAdministratorConfigurationOperation initWithMessage:home:]
  -[HMDHomeAdministratorConfigurationOperation shouldSuspendSyncing]
  -[HMDHomeAdministratorConfigurationOperation setShouldSuspendSyncing:]


HMDApplicationRegistry : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, LSApplicationWorkspaceObserverProtocol>
 @property  NSArray *applications
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDApplicationRegistry sharedRegistry]
  +[HMDApplicationRegistry logCategory]

  // instance methods
  -[HMDApplicationRegistry init]
  -[HMDApplicationRegistry dealloc]
  -[HMDApplicationRegistry .cxx_destruct]
  -[HMDApplicationRegistry applications]
  -[HMDApplicationRegistry applicationInfoForBundleIdentifier:]
  -[HMDApplicationRegistry applicationsDidUninstall:]
  -[HMDApplicationRegistry applicationInfoForBundleURL:]


HMDRemovedUser : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  HMDUser *user
 @property  NSDate *expirationDate
 @property  BOOL removalInProgress

  // class methods
  +[HMDRemovedUser supportsSecureCoding]
  +[HMDRemovedUser removedUserWithUser:]

  // instance methods
  -[HMDRemovedUser user]
  -[HMDRemovedUser .cxx_destruct]
  -[HMDRemovedUser encodeWithCoder:]
  -[HMDRemovedUser isExpired]
  -[HMDRemovedUser expirationDate]
  -[HMDRemovedUser isEqualToUser:]
  -[HMDRemovedUser initWithCoder:]
  -[HMDRemovedUser isEqualToUserID:]
  -[HMDRemovedUser setRemovalInProgress:]
  -[HMDRemovedUser initWithUser:expiration:]
  -[HMDRemovedUser isRemovalInProgress]


HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler>
 @property  BOOL running
 @property  NSObject<OS_xpc_object> *runningActivity
 @property  NSObject<OS_xpc_object> *overrideCriteria
 @property  double currentInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  double interval
 @property  double retryInterval
 @property  <HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchSchedulerDelegate> *delegate

  // class methods
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler logCategory]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler __unregisterActivity:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler retryInterval]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler interval]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler dealloc]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler currentInterval]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler identifier]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler stop]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler isRunning]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler setRunning:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler delegate]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler start]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler runningActivity]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler __checkInActivity:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler __runActivity:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler __initialCriteria]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler overrideCriteria]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler __transitionActivity:state:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler setRunningActivity:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler __registerActivity]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler __unregisterActivity]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler initWithIdentifier:interval:retryInterval:delegate:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler setOverrideCriteria:]


THAButton : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned char identifier
 @property  unsigned long type

  // instance methods
  -[THAButton setType:]
  -[THAButton setIdentifier:]
  -[THAButton identifier]
  -[THAButton type]
  -[THAButton initWithType:identifier:]
  -[THAButton isEqual:]


THAButtonEvent : NSObject /usr/lib/libc++.1.dylib
 @property  THAButton *button
 @property  unsigned long state
 @property  double timestamp

  // instance methods
  -[THAButtonEvent serialize]
  -[THAButtonEvent setState:]
  -[THAButtonEvent .cxx_destruct]
  -[THAButtonEvent timestamp]
  -[THAButtonEvent setTimestamp:]
  -[THAButtonEvent state]
  -[THAButtonEvent button]
  -[THAButtonEvent setButton:]


THAController : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *selectedButtons
 @property  NSString *name
 @property  unsigned int identifier
 @property  unsigned long ticksPerSecond
 @property  BOOL supportsSiri
 @property  BOOL connected
 @property  BOOL selected

  // class methods
  +[THAController selectButtonConfiguration:supportsSiri:]

  // instance methods
  -[THAController setConnected:]
  -[THAController setSelected:]
  -[THAController .cxx_destruct]
  -[THAController name]
  -[THAController connected]
  -[THAController identifier]
  -[THAController supportsSiri]
  -[THAController setName:]
  -[THAController selected]
  -[THAController ticksPerSecond]
  -[THAController setTicksPerSecond:]
  -[THAController updateSelectedButtons:]
  -[THAController setSupportsSiri:]
  -[THAController initWithName:identifier:ticksPerSecond:supportedButtons:supportsSiri:]
  -[THAController dispatchButtonEvent:]
  -[THAController selectedButtons]
  -[THAController setSelectedButtons:]


HMDMessageHandlerMetricsDispatcher : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *identifier
 @property  HMDLogEventDispatcher *logEventDispatcher

  // class methods
  +[HMDMessageHandlerMetricsDispatcher logCategory]

  // instance methods
  -[HMDMessageHandlerMetricsDispatcher logIdentifier]
  -[HMDMessageHandlerMetricsDispatcher attributeDescriptions]
  -[HMDMessageHandlerMetricsDispatcher privateDescription]
  -[HMDMessageHandlerMetricsDispatcher .cxx_destruct]
  -[HMDMessageHandlerMetricsDispatcher identifier]
  -[HMDMessageHandlerMetricsDispatcher logEventDispatcher]
  -[HMDMessageHandlerMetricsDispatcher initWithIdentifier:logEventDispatcher:]
  -[HMDMessageHandlerMetricsDispatcher submitFailureEventOfType:message:]


HMDNetworkRouterFirewallRuleLAN : HMDNetworkRouterFirewallRule
 @property  unsigned long purpose
 @property  BOOL allowInterAccessoryConnections
 @property  unsigned char direction
 @property  BOOL requiredForHAPFunctionality

  // class methods
  +[HMDNetworkRouterFirewallRuleLAN __decodeTransportProtocolFromJSONDictionary:key:transportProtocol:error:]
  +[HMDNetworkRouterFirewallRuleLAN createWithJSONDictionary:name:critical:purpose:allowInterAccessoryConnections:direction:requiredForHAPFunctionality:ruleDictionary:error:]
  +[HMDNetworkRouterFirewallRuleLAN createWithJSONDictionary:error:]
  +[HMDNetworkRouterFirewallRuleLAN __decodeType:type:error:]
  +[HMDNetworkRouterFirewallRuleLAN __decodeFlags:critical:allowInterAccessoryConnections:requiredForHAPFunctionality:error:]
  +[HMDNetworkRouterFirewallRuleLAN __decodePurpose:purpose:error:]
  +[HMDNetworkRouterFirewallRuleLAN __decodeDirection:direction:error:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleLAN attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleLAN direction]
  -[HMDNetworkRouterFirewallRuleLAN purpose]
  -[HMDNetworkRouterFirewallRuleLAN initWithJSONDictionary:name:critical:purpose:allowInterAccessoryConnections:direction:requiredForHAPFunctionality:]
  -[HMDNetworkRouterFirewallRuleLAN prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRuleLAN areConnectionsWithOtherAccessoriesAllowed]
  -[HMDNetworkRouterFirewallRuleLAN isRequiredForHAPFunctionality]


HMDDevice : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject, HMFLogging, HMDBackingStoreObjectProtocol, HMDBackingStoreModelBackedObjectProtocol, HMDRemoteAddressable, HMFMerging, NSSecureCoding>
 @property  NSArray *identities
 @property  BOOL currentDevice
 @property  HMFProductInfo *productInfo
 @property  NSUUID *idsIdentifierHash
 @property  HMDAccount *account
 @property  BOOL dirty
 @property  BOOL locallyTracked
 @property  BOOL cloudTracked
 @property  HMDDeviceCapabilities *capabilities
 @property  NSData *pushToken
 @property  NSUUID *idsIdentifier
 @property  NSUUID *identifier
 @property  NSString *name
 @property  HMDHomeKitVersion *version
 @property  HMDRPIdentity *rpIdentity
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class modelClass
 @property  NSUUID *modelIdentifier
 @property  NSUUID *modelParentIdentifier

  // class methods
  +[HMDDevice supportsSecureCoding]
  +[HMDDevice logCategory]
  +[HMDDevice destinationForDevice:service:]
  +[HMDDevice deviceWithDestination:]
  +[HMDDevice deviceWithHandle:]

  // instance methods
  -[HMDDevice setHandles:]
  -[HMDDevice handles]
  -[HMDDevice logIdentifier]
  -[HMDDevice modelIdentifier]
  -[HMDDevice init]
  -[HMDDevice attributeDescriptions]
  -[HMDDevice pushToken]
  -[HMDDevice setAccount:]
  -[HMDDevice dealloc]
  -[HMDDevice account]
  -[HMDDevice .cxx_destruct]
  -[HMDDevice name]
  -[HMDDevice mergeObject:]
  -[HMDDevice rpIdentity]
  -[HMDDevice setVersion:]
  -[HMDDevice encodeWithCoder:]
  -[HMDDevice identifier]
  -[HMDDevice identities]
  -[HMDDevice isBackingStorageEqual:]
  -[HMDDevice capabilities]
  -[HMDDevice productInfo]
  -[HMDDevice modelClass]
  -[HMDDevice shortDescription]
  -[HMDDevice setDirty:]
  -[HMDDevice isDirty]
  -[HMDDevice isEqual:]
  -[HMDDevice setRpIdentity:]
  -[HMDDevice setCapabilities:]
  -[HMDDevice version]
  -[HMDDevice idsIdentifier]
  -[HMDDevice initWithObjectModel:]
  -[HMDDevice setName:]
  -[HMDDevice isCurrentDevice]
  -[HMDDevice initWithCoder:]
  -[HMDDevice initWithIdentifier:handles:name:productInfo:version:capabilities:]
  -[HMDDevice localHandles]
  -[HMDDevice initWithService:device:]
  -[HMDDevice deviceForIDSService:]
  -[HMDDevice modelObjectWithChangeType:version:]
  -[HMDDevice transactionObjectUpdated:newValues:message:]
  -[HMDDevice transactionObjectRemoved:message:]
  -[HMDDevice remoteDestinationString]
  -[HMDDevice startObservingIsPublishingForService:]
  -[HMDDevice globalHandles]
  -[HMDDevice isRelatedToDevice:]
  -[HMDDevice modelBackedObjects]
  -[HMDDevice modelParentIdentifier]
  -[HMDDevice backingStoreObjectsWithChangeType:version:]
  -[HMDDevice isLocallyTracked]
  -[HMDDevice setLocallyTracked:]
  -[HMDDevice __updateDeviceWithActions:]
  -[HMDDevice isCloudTracked]
  -[HMDDevice setCloudTracked:]
  -[HMDDevice updateWithDevice:]
  -[HMDDevice isPublishingOnObservedNetService]
  -[HMDDevice updateVersion:]
  -[HMDDevice swapToNetServiceKVOCancellation:swapToObservedNetService:]
  -[HMDDevice idsIdentifierHash]
  -[HMDDevice setIDSIdentifierHash:]
  -[HMDDevice setProductInfo:]
  -[HMDDevice __handleAccountHandleUpdated:]


HMDDeviceModel : HMDBackingStoreModelObject
 @property  NSUUID *identifier
 @property  NSArray *handles
 @property  NSString *name
 @property  HMDHomeKitVersion *version
 @property  HMFProductInfo *productInfo
 @property  HMDRPIdentity *rpIdentity
 @property  NSArray *deviceHandles

  // class methods
  +[HMDDeviceModel properties]
  +[HMDDeviceModel schemaHashRoot]

  // instance methods
  -[HMDDeviceModel diff:differingFields:]
  -[HMDDeviceModel deviceHandles]


HMDSnapshotSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDCameraSnapshotMetrics *snapshotMetrics
 @property  HMDCameraSnapshotSessionID *sessionID
 @property  <HMDCameraGetSnapshotProtocol> *snapshotGetter
 @property  HMDSnapshotCompletionTimer *snapshotCompletionTimer
 @property  NSMutableArray *sessionMessages
 @property  unsigned long streamingTierType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSnapshotSession logCategory]

  // instance methods
  -[HMDSnapshotSession sessionID]
  -[HMDSnapshotSession logIdentifier]
  -[HMDSnapshotSession dealloc]
  -[HMDSnapshotSession .cxx_destruct]
  -[HMDSnapshotSession streamingTierType]
  -[HMDSnapshotSession initWithSessionID:accessory:snapshotGetter:message:waitPeriod:streamingTierType:cameraLocallyReachable:snapshotForNotification:]
  -[HMDSnapshotSession sessionMessages]
  -[HMDSnapshotSession respond:payload:]
  -[HMDSnapshotSession snapshotGetter]
  -[HMDSnapshotSession snapshotCompletionTimer]
  -[HMDSnapshotSession snapshotMetrics]
  -[HMDSnapshotSession setSnapshotCompletionTimer:]


HMDSoftwareUpdateStartedEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL automaticUpdateEnabled

  // class methods
  +[HMDSoftwareUpdateStartedEvent initialize]
  +[HMDSoftwareUpdateStartedEvent uuid]
  +[HMDSoftwareUpdateStartedEvent eventUpdateStartedWithAutomaticUpdateEnabled:]

  // instance methods
  -[HMDSoftwareUpdateStartedEvent AWDMessageType]
  -[HMDSoftwareUpdateStartedEvent metricForAWD]
  -[HMDSoftwareUpdateStartedEvent setAutomaticUpdateEnabled:]
  -[HMDSoftwareUpdateStartedEvent isAutomaticUpdateEnabled]


HMDCoreDuetLogEventObserver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDLogEventObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCoreDuetLogEventObserver mapHMDSourceToDKHomeKitSource:]

  // instance methods
  -[HMDCoreDuetLogEventObserver didReceiveEventFromDispatcher:withLogContext:]


HMDAccessoryProfile : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBulletinIdentifiers, HMDHomeMessageReceiver, HMFDumpState, HMFLogging, NSSecureCoding>
 @property  NSString *contextID
 @property  NSUUID *contextSPIUniqueIdentifier
 @property  NSString *logIdentifier
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSUUID *uniqueIdentifier
 @property  HMDAccessory *accessory
 @property  NSArray *services
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessoryProfile supportsSecureCoding]
  +[HMDAccessoryProfile logCategory]
  +[HMDAccessoryProfile hasMessageReceiverChildren]

  // instance methods
  -[HMDAccessoryProfile messageTargetUUID]
  -[HMDAccessoryProfile services]
  -[HMDAccessoryProfile messageReceiveQueue]
  -[HMDAccessoryProfile logIdentifier]
  -[HMDAccessoryProfile .cxx_destruct]
  -[HMDAccessoryProfile workQueue]
  -[HMDAccessoryProfile encodeWithCoder:]
  -[HMDAccessoryProfile uniqueIdentifier]
  -[HMDAccessoryProfile msgDispatcher]
  -[HMDAccessoryProfile accessory]
  -[HMDAccessoryProfile unconfigure]
  -[HMDAccessoryProfile isEqual:]
  -[HMDAccessoryProfile registerForMessages]
  -[HMDAccessoryProfile contextID]
  -[HMDAccessoryProfile dumpState]
  -[HMDAccessoryProfile initWithCoder:]
  -[HMDAccessoryProfile contextSPIUniqueIdentifier]
  -[HMDAccessoryProfile runtimeState]
  -[HMDAccessoryProfile removeCloudData]
  -[HMDAccessoryProfile configureWithMessageDispatcher:configurationTracker:]
  -[HMDAccessoryProfile initWithAccessory:uniqueIdentifier:services:workQueue:]
  -[HMDAccessoryProfile handleInitialState]
  -[HMDAccessoryProfile initWithAccessory:uniqueIdentifier:services:]
  -[HMDAccessoryProfile findServiceWithType:]


HMDBackingStoreLocal : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSMutableArray *zoneCache
 @property  NSMutableDictionary *storeCache
 @property  NSString *datastoreFile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBackingStoreLocal logCategory]
  +[HMDBackingStoreLocal cleanDatastoreFilesAt:everything:]

  // instance methods
  -[HMDBackingStoreLocal _commit]
  -[HMDBackingStoreLocal logIdentifier]
  -[HMDBackingStoreLocal initWithDatastore:]
  -[HMDBackingStoreLocal dealloc]
  -[HMDBackingStoreLocal _begin]
  -[HMDBackingStoreLocal .cxx_destruct]
  -[HMDBackingStoreLocal flush:]
  -[HMDBackingStoreLocal setStoreCache:]
  -[HMDBackingStoreLocal storeCache]
  -[HMDBackingStoreLocal _rollback]
  -[HMDBackingStoreLocal _insertZoneWithName:error:]
  -[HMDBackingStoreLocal zoneCache]
  -[HMDBackingStoreLocal _fetchRecordsWithGroupID:callback:]
  -[HMDBackingStoreLocal _deleteRecordWithGroupID:recordName:]
  -[HMDBackingStoreLocal _deleteGroupWithID:]
  -[HMDBackingStoreLocal _deleteZoneWithID:]
  -[HMDBackingStoreLocal _insertGroupWithZoneID:root:owner:subscription:error:]
  -[HMDBackingStoreLocal _updateGroupWithID:serverChangeToken:]
  -[HMDBackingStoreLocal _updateGroupWithID:subscription:]
  -[HMDBackingStoreLocal _fetchIDForStore:error:]
  -[HMDBackingStoreLocal _updateRecordWithGroupID:store:record:data:encoding:]
  -[HMDBackingStoreLocal _updateRecordWithGroupID:store:name:model:]
  -[HMDBackingStoreLocal _fetchRecordCountWithGroupID:callback:]
  -[HMDBackingStoreLocal _fetchRecordsWithGroupID:uuids:callback:]
  -[HMDBackingStoreLocal _fetchRecordsWithGroupID:names:callback:]
  -[HMDBackingStoreLocal _fetchRecordsWithGroupID:parentUuids:callback:]
  -[HMDBackingStoreLocal _fetchRecordsWithGroupID:parent:type:callback:]
  -[HMDBackingStoreLocal _fetchRecordMapWithGroupID:callback:]
  -[HMDBackingStoreLocal _updateRecordWithGroupID:name:schema:]
  -[HMDBackingStoreLocal _instanceResources:migrate:]
  -[HMDBackingStoreLocal initWithDB:migrate:error:]
  -[HMDBackingStoreLocal _freeResources]
  -[HMDBackingStoreLocal datastoreFile]
  -[HMDBackingStoreLocal _createNewDatastore:]
  -[HMDBackingStoreLocal _fillZoneCache]
  -[HMDBackingStoreLocal _fillStoreCache]
  -[HMDBackingStoreLocal _fetchZonesWithError:]
  -[HMDBackingStoreLocal _fetchGroupsForZone:withError:]
  -[HMDBackingStoreLocal setZoneCache:]
  -[HMDBackingStoreLocal _updateRecordWithGroupID:store:name:record:uuid:parentUUID:type:data:encoding:schema:]
  -[HMDBackingStoreLocal _insertLogOptionsWithID:options:]
  -[HMDBackingStoreLocal _runSQLite3:bind:error:]
  -[HMDBackingStoreLocal _updateRecordWithGroupID:store:record:]
  -[HMDBackingStoreLocal _fetchRecordWithUUID:root:error:]
  -[HMDBackingStoreLocal _selectAllRecords:]
  -[HMDBackingStoreLocal _insertLogWithRoot:transaction:set:error:]
  -[HMDBackingStoreLocal _selectLogWithRoot:after:mask:compare:callback:]
  -[HMDBackingStoreLocal _selectLogWithMask:compare:callback:]
  -[HMDBackingStoreLocal _selectLogOptionsWithID:]
  -[HMDBackingStoreLocal _selectAllLog:]
  -[HMDBackingStoreLocal _updateLog:mask:set:]
  -[HMDBackingStoreLocal _deleteLog:]


HMDBackingStoreLocalFlushOperation : NSOperation /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 @property  HMDBackingStoreLocal *store
 @property  @? resultHandler
 @property  BOOL clearCloud

  // instance methods
  -[HMDBackingStoreLocalFlushOperation setStore:]
  -[HMDBackingStoreLocalFlushOperation store]
  -[HMDBackingStoreLocalFlushOperation main]
  -[HMDBackingStoreLocalFlushOperation .cxx_destruct]
  -[HMDBackingStoreLocalFlushOperation setResultHandler:]
  -[HMDBackingStoreLocalFlushOperation resultHandler]
  -[HMDBackingStoreLocalFlushOperation initWithStore:clearCloud:resultHandler:]
  -[HMDBackingStoreLocalFlushOperation clearCloud]
  -[HMDBackingStoreLocalFlushOperation setClearCloud:]


HMDHomeRemoteNotification : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSString *accessoryUUID
 @property  NSString *serviceInstanceID
 @property  NSString *characteristicInstanceID
 @property  NSString *updateIdentifier
 @property  id value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeRemoteNotification logCategory]

  // instance methods
  -[HMDHomeRemoteNotification logIdentifier]
  -[HMDHomeRemoteNotification accessoryUUID]
  -[HMDHomeRemoteNotification .cxx_destruct]
  -[HMDHomeRemoteNotification value]
  -[HMDHomeRemoteNotification updateIdentifier]
  -[HMDHomeRemoteNotification characteristicInstanceID]
  -[HMDHomeRemoteNotification serviceInstanceID]
  -[HMDHomeRemoteNotification matchesCharacterisitic:]
  -[HMDHomeRemoteNotification matchesAccessoryUUID:serviceInstanceID:characteristicInstanceID:]
  -[HMDHomeRemoteNotification initWithAccessoryUUID:serviceInstanceID:characteristicInstanceID:updateIdentifier:value:]


AWDHomeKitHomeCameraConfigurations : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  NSMutableArray *homeKitCameraUserSettings
 @property  NSMutableArray *homeKitCameraSettings
 @property  BOOL hasEnabledResidentsDeviceCapabilities
 @property  unsigned int enabledResidentsDeviceCapabilities
 @property  BOOL hasIsFaceClassificationEnabled
 @property  BOOL isFaceClassificationEnabled
 @property  BOOL hasIsOwner
 @property  BOOL isOwner

  // class methods
  +[AWDHomeKitHomeCameraConfigurations homeKitCameraUserSettingsType]
  +[AWDHomeKitHomeCameraConfigurations homeKitCameraSettingsType]

  // instance methods
  -[AWDHomeKitHomeCameraConfigurations copyWithZone:]
  -[AWDHomeKitHomeCameraConfigurations isOwner]
  -[AWDHomeKitHomeCameraConfigurations .cxx_destruct]
  -[AWDHomeKitHomeCameraConfigurations setIsOwner:]
  -[AWDHomeKitHomeCameraConfigurations readFrom:]
  -[AWDHomeKitHomeCameraConfigurations writeTo:]
  -[AWDHomeKitHomeCameraConfigurations isEqual:]
  -[AWDHomeKitHomeCameraConfigurations copyTo:]
  -[AWDHomeKitHomeCameraConfigurations dictionaryRepresentation]
  -[AWDHomeKitHomeCameraConfigurations mergeFrom:]
  -[AWDHomeKitHomeCameraConfigurations isFaceClassificationEnabled]
  -[AWDHomeKitHomeCameraConfigurations setHasIsOwner:]
  -[AWDHomeKitHomeCameraConfigurations hasIsOwner]
  -[AWDHomeKitHomeCameraConfigurations enabledResidentsDeviceCapabilities]
  -[AWDHomeKitHomeCameraConfigurations setEnabledResidentsDeviceCapabilities:]
  -[AWDHomeKitHomeCameraConfigurations setHasEnabledResidentsDeviceCapabilities:]
  -[AWDHomeKitHomeCameraConfigurations hasEnabledResidentsDeviceCapabilities]
  -[AWDHomeKitHomeCameraConfigurations addHomeKitCameraUserSettings:]
  -[AWDHomeKitHomeCameraConfigurations addHomeKitCameraSettings:]
  -[AWDHomeKitHomeCameraConfigurations homeKitCameraUserSettingsCount]
  -[AWDHomeKitHomeCameraConfigurations clearHomeKitCameraUserSettings]
  -[AWDHomeKitHomeCameraConfigurations homeKitCameraUserSettingsAtIndex:]
  -[AWDHomeKitHomeCameraConfigurations homeKitCameraSettingsCount]
  -[AWDHomeKitHomeCameraConfigurations clearHomeKitCameraSettings]
  -[AWDHomeKitHomeCameraConfigurations homeKitCameraSettingsAtIndex:]
  -[AWDHomeKitHomeCameraConfigurations setIsFaceClassificationEnabled:]
  -[AWDHomeKitHomeCameraConfigurations setHasIsFaceClassificationEnabled:]
  -[AWDHomeKitHomeCameraConfigurations hasIsFaceClassificationEnabled]
  -[AWDHomeKitHomeCameraConfigurations homeKitCameraUserSettings]
  -[AWDHomeKitHomeCameraConfigurations setHomeKitCameraUserSettings:]
  -[AWDHomeKitHomeCameraConfigurations homeKitCameraSettings]
  -[AWDHomeKitHomeCameraConfigurations setHomeKitCameraSettings:]


HMDFMFQuery : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *queryID
 @property  NSObject<OS_dispatch_queue> *responseQueue
 @property  @? completion

  // instance methods
  -[HMDFMFQuery completion]
  -[HMDFMFQuery .cxx_destruct]
  -[HMDFMFQuery queryID]
  -[HMDFMFQuery responseQueue]
  -[HMDFMFQuery initWithResponseQueue:completion:]


HMDFMFRequest : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *requestID
 @property  FMFSession *fmfSession
 @property  HMFTimer *fmfSessionResponseTimer

  // instance methods
  -[HMDFMFRequest requestID]
  -[HMDFMFRequest .cxx_destruct]
  -[HMDFMFRequest fmfSession]
  -[HMDFMFRequest initWithResponseTimerDelegate:]
  -[HMDFMFRequest fmfSessionResponseTimer]


HMDFMFHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <FMFSessionDelegate, HMFLogging, HMFTimerDelegate>
 @property  HMDFMF *fmfStatus
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDFMFRequest *currentFMFRequest
 @property  NSMutableArray *queries
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDFMFHandler logCategory]
  +[HMDFMFHandler sharedHandler]

  // instance methods
  -[HMDFMFHandler timerDidFire:]
  -[HMDFMFHandler init]
  -[HMDFMFHandler .cxx_destruct]
  -[HMDFMFHandler workQueue]
  -[HMDFMFHandler sendNotification]
  -[HMDFMFHandler queries]
  -[HMDFMFHandler setQueries:]
  -[HMDFMFHandler queryFMFStatusWithQueue:completion:]
  -[HMDFMFHandler homeDataLoaded:]
  -[HMDFMFHandler _initiateFMFRequest]
  -[HMDFMFHandler currentFMFRequest]
  -[HMDFMFHandler processDevices:error:]
  -[HMDFMFHandler setCurrentFMFRequest:]
  -[HMDFMFHandler _processDevices:error:]
  -[HMDFMFHandler fmfStatus]
  -[HMDFMFHandler _respondToPendingRequests:]
  -[HMDFMFHandler _computeFMFStatus:]
  -[HMDFMFHandler setFmfStatus:]
  -[HMDFMFHandler meDeviceChanged]
  -[HMDFMFHandler fmfDevicesChanged]


HMDUnassociatedAccessory : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver, HMFLocking, NSSecureCoding>
 @property  HMDAccessoryAdvertisement *accessoryAdvertisement
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSString *name
 @property  HMAccessoryCategory *category
 @property  NSUUID *uuid
 @property  NSString *identifier
 @property  BOOL reachable
 @property  long long associationOptions
 @property  unsigned long transportTypes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDUnassociatedAccessory supportsSecureCoding]
  +[HMDUnassociatedAccessory logCategory]
  +[HMDUnassociatedAccessory shortDescription]
  +[HMDUnassociatedAccessory otherAccessoryCategory]

  // instance methods
  -[HMDUnassociatedAccessory messageTargetUUID]
  -[HMDUnassociatedAccessory messageDestination]
  -[HMDUnassociatedAccessory category]
  -[HMDUnassociatedAccessory performBlock:]
  -[HMDUnassociatedAccessory logIdentifier]
  -[HMDUnassociatedAccessory init]
  -[HMDUnassociatedAccessory uuid]
  -[HMDUnassociatedAccessory dealloc]
  -[HMDUnassociatedAccessory .cxx_destruct]
  -[HMDUnassociatedAccessory name]
  -[HMDUnassociatedAccessory lock]
  -[HMDUnassociatedAccessory encodeWithCoder:]
  -[HMDUnassociatedAccessory identifier]
  -[HMDUnassociatedAccessory _registerForMessages]
  -[HMDUnassociatedAccessory isReachable]
  -[HMDUnassociatedAccessory unlock]
  -[HMDUnassociatedAccessory shortDescription]
  -[HMDUnassociatedAccessory setUUID:]
  -[HMDUnassociatedAccessory messageDispatcher]
  -[HMDUnassociatedAccessory isEqual:]
  -[HMDUnassociatedAccessory associationOptions]
  -[HMDUnassociatedAccessory identifyWithCompletionHandler:]
  -[HMDUnassociatedAccessory setCategory:]
  -[HMDUnassociatedAccessory setName:]
  -[HMDUnassociatedAccessory transportTypes]
  -[HMDUnassociatedAccessory initWithCoder:]
  -[HMDUnassociatedAccessory initWithIdentifier:name:category:messageDispatcher:]
  -[HMDUnassociatedAccessory descriptionWithPointer:additionalDescription:]
  -[HMDUnassociatedAccessory dumpDescription]
  -[HMDUnassociatedAccessory associateWithAccessoryAdvertisement:]
  -[HMDUnassociatedAccessory accessoryAdvertisement]
  -[HMDUnassociatedAccessory setAccessoryAdvertisement:]
  -[HMDUnassociatedAccessory _handleIdentify:]
  -[HMDUnassociatedAccessory updateCategoryWithCategoryIdentifier:]


HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchSchedulerDelegate, HMFLogging, HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator>
 @property  BOOL running
 @property  NSNotificationCenter *notificationCenter
 @property  <HMDNetworkRouterFirewallRuleManagerBackingStoreCloudFetchScheduler> *cloudFetchScheduler
 @property  NSObject<OS_dispatch_queue> *ownerQueue
 @property  HMBLocalZone *mirroredLocalZone
 @property  <HMDNetworkRouterFirewallRuleManagerBackingStoreMirror> *mirror
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HMDNetworkRouterFirewallRuleManagerInternal> *firewallRuleManager

  // class methods
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator logCategory]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator ckContainerIdentifier]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __jsonValueForCKRecordValue:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __jsonStringFromDictionary:rawOutput:error:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __networkDeclarationsFromRecord:recordKey:identifier:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __pairedMetadataFromRecord:recordKey:identifier:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __createProcessingOptionsWithLabel:qualityOfService:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator ckContainerEnvironment]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator ckUseAnonymousAccount]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __networkDeclarationDataDictionaryFromOverrideObjectDictionary:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __pairedMetadataDictionaryFromOverrideObjectDictionary:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __createProcessingOptionsWithLabel:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __jsonFromRecords:rawOutput:error:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __networkDeclarationDataDictionaryFromRecordDictionary:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __jsonFromDeclarations:rawOutput:error:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __pairedMetadataDataDictionaryFromRecordDictionary:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __jsonFromPairedMetadata:rawOutput:error:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator mirror]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator notificationCenter]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator isRunning]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator firewallRuleManager]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator firewallRuleManagerClientsDidChange]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator initWithFirewallRuleManager:notificationCenter:cloudFetchInterval:cloudFetchRetryInterval:ownerQueue:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator startupWithLocalDatabase:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator shutdownWithCompletion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator fetchCloudChangesWithQualityOfService:ignoreLastFetchedAccessories:forceChangeNotifications:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator fetchRulesForAccessories:qualityOfService:ignoreOverrides:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator fetchPairedMetadataVersionConfigurationsForAccessories:qualityOfService:ignoreOverrides:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator dumpCloudRecordsForProductGroup:productNumber:rawOutput:listOnly:verifySignatures:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator dumpLocalRulesForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator removeAllLocalRulesWithError:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator dumpPairedMetadataForProductGroup:productNumber:firmwareVersion:ignoreOverrides:rawOutput:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator addOverrides:replace:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator removeOverridesForProductGroup:productNumber:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator removeAllOverridesWithError:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator cloudFetchSchedulerFired:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator initWithFirewallRuleManager:notificationCenter:ownerQueue:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator ownerQueue]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __maybeStartOrStopCloudFetchScheduler]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __stopCloudFetchScheduler]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __startupWithMirroredLocalZone:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator mirroredLocalZone]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator setMirroredLocalZone:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __startupWithMirror:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator setMirror:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator _fetchCloudChangesWithQualityOfService:ignoreLastFetchedAccessories:forceChangeNotifications:requiredRecordIDs:schedulerXpcActivity:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator _fetchPairedMetadataForAccessories:options:ignoreOverrides:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator pairedMetadataVersionConfigurationForAccessory:pairedMetadata:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator _fetchNetworkDeclarationsForRecordIDs:options:ignoreOverrides:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator ruleConfigurationForAccessory:declarations:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator _fetchCloudChangesIfNeededForRecordIDs:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator _listCloudRecordsForProductGroup:rawOutput:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator _dumpCloudRecordsForProductGroup:productNumber:rawOutput:verifySignatures:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator _fetchAllDataForProductGroup:productNumber:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator _fetchAllOverridesForProductGroup:productNumber:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator cloudFetchScheduler]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator __cloudFetchSchedulerFired:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCoordinator initWithFirewallRuleManager:notificationCenter:cloudFetchScheduler:ownerQueue:]


HMDRemoteMessageDestination : HMFMessageDestination /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDRemoteAddressable>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteMessageDestination allMessageDestinations]
  +[HMDRemoteMessageDestination allocWithZone:]

  // instance methods
  -[HMDRemoteMessageDestination remoteDestinationString]


HMDRemoteAccountHandleMessageDestination : HMDRemoteMessageDestination
 @property  HMDAccountHandle *handle
 @property  BOOL multicast
 @property  NSDictionary *deviceCapabilities

  // class methods
  +[HMDRemoteAccountHandleMessageDestination shortDescription]

  // instance methods
  -[HMDRemoteAccountHandleMessageDestination initWithTarget:]
  -[HMDRemoteAccountHandleMessageDestination .cxx_destruct]
  -[HMDRemoteAccountHandleMessageDestination deviceCapabilities]
  -[HMDRemoteAccountHandleMessageDestination handle]
  -[HMDRemoteAccountHandleMessageDestination descriptionWithPointer:]
  -[HMDRemoteAccountHandleMessageDestination shortDescription]
  -[HMDRemoteAccountHandleMessageDestination isEqual:]
  -[HMDRemoteAccountHandleMessageDestination remoteDestinationString]
  -[HMDRemoteAccountHandleMessageDestination initWithTarget:handle:multicast:]
  -[HMDRemoteAccountHandleMessageDestination initWithTarget:handle:multicast:deviceCapabilities:]
  -[HMDRemoteAccountHandleMessageDestination isMulticast]


HMDRemoteAccountMessageDestination : HMDRemoteAccountHandleMessageDestination
 @property  HMDAccount *account

  // class methods
  +[HMDRemoteAccountMessageDestination shortDescription]

  // instance methods
  -[HMDRemoteAccountMessageDestination account]
  -[HMDRemoteAccountMessageDestination .cxx_destruct]
  -[HMDRemoteAccountMessageDestination descriptionWithPointer:]
  -[HMDRemoteAccountMessageDestination shortDescription]
  -[HMDRemoteAccountMessageDestination isEqual:]
  -[HMDRemoteAccountMessageDestination remoteDestinationString]
  -[HMDRemoteAccountMessageDestination initWithTarget:handle:multicast:deviceCapabilities:]
  -[HMDRemoteAccountMessageDestination initWithTarget:account:multicast:]
  -[HMDRemoteAccountMessageDestination initWithTarget:account:multicast:deviceCapabilities:]


HMDRemoteDeviceMessageDestination : HMDRemoteMessageDestination
 @property  HMDDeviceHandle *preferredHandle
 @property  HMDDevice *device

  // class methods
  +[HMDRemoteDeviceMessageDestination shortDescription]

  // instance methods
  -[HMDRemoteDeviceMessageDestination initWithTarget:]
  -[HMDRemoteDeviceMessageDestination device]
  -[HMDRemoteDeviceMessageDestination setPreferredHandle:]
  -[HMDRemoteDeviceMessageDestination .cxx_destruct]
  -[HMDRemoteDeviceMessageDestination descriptionWithPointer:]
  -[HMDRemoteDeviceMessageDestination preferredHandle]
  -[HMDRemoteDeviceMessageDestination shortDescription]
  -[HMDRemoteDeviceMessageDestination isEqual:]
  -[HMDRemoteDeviceMessageDestination initWithTarget:device:]
  -[HMDRemoteDeviceMessageDestination remoteDestinationString]


HMDSoftwareUpdateDocumentationAsset : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFObject, NSURLSessionDownloadDelegate, SZExtractorDelegate, NSSecureCoding>
 @property  NSURLSession *URLSession
 @property  SZExtractor *extrator
 @property  NSInputStream *archivedFileStream
 @property  BOOL shouldAutomaticallyCache
 @property  NSUUID *identifier
 @property  HMSoftwareUpdateDocumentationMetadata *metadata
 @property  long long state
 @property  NSURL *URL
 @property  HMSoftwareUpdateDocumentation *documentation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMDSoftwareUpdateDocumentationAsset supportsSecureCoding]
  +[HMDSoftwareUpdateDocumentationAsset assetWithURL:]
  +[HMDSoftwareUpdateDocumentationAsset logCategory]
  +[HMDSoftwareUpdateDocumentationAsset assetDirectoryURL]

  // instance methods
  -[HMDSoftwareUpdateDocumentationAsset URLSession]
  -[HMDSoftwareUpdateDocumentationAsset URLSession:downloadTask:didFinishDownloadingToURL:]
  -[HMDSoftwareUpdateDocumentationAsset logIdentifier]
  -[HMDSoftwareUpdateDocumentationAsset init]
  -[HMDSoftwareUpdateDocumentationAsset URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:]
  -[HMDSoftwareUpdateDocumentationAsset documentation]
  -[HMDSoftwareUpdateDocumentationAsset setState:]
  -[HMDSoftwareUpdateDocumentationAsset .cxx_destruct]
  -[HMDSoftwareUpdateDocumentationAsset bundleURL]
  -[HMDSoftwareUpdateDocumentationAsset metadataURL]
  -[HMDSoftwareUpdateDocumentationAsset setURLSession:]
  -[HMDSoftwareUpdateDocumentationAsset URLSession:task:didCompleteWithError:]
  -[HMDSoftwareUpdateDocumentationAsset encodeWithCoder:]
  -[HMDSoftwareUpdateDocumentationAsset identifier]
  -[HMDSoftwareUpdateDocumentationAsset propertyDescription]
  -[HMDSoftwareUpdateDocumentationAsset shortDescription]
  -[HMDSoftwareUpdateDocumentationAsset archiveURL]
  -[HMDSoftwareUpdateDocumentationAsset purgeWithError:]
  -[HMDSoftwareUpdateDocumentationAsset cancelDownload]
  -[HMDSoftwareUpdateDocumentationAsset isEqual:]
  -[HMDSoftwareUpdateDocumentationAsset saveWithError:]
  -[HMDSoftwareUpdateDocumentationAsset URL]
  -[HMDSoftwareUpdateDocumentationAsset state]
  -[HMDSoftwareUpdateDocumentationAsset metadata]
  -[HMDSoftwareUpdateDocumentationAsset initWithCoder:]
  -[HMDSoftwareUpdateDocumentationAsset setExtractionProgress:]
  -[HMDSoftwareUpdateDocumentationAsset startCaching]
  -[HMDSoftwareUpdateDocumentationAsset setShouldAutomaticallyCache:]
  -[HMDSoftwareUpdateDocumentationAsset startDownload]
  -[HMDSoftwareUpdateDocumentationAsset startUnarchive]
  -[HMDSoftwareUpdateDocumentationAsset setArchivedFileStream:]
  -[HMDSoftwareUpdateDocumentationAsset setExtrator:]
  -[HMDSoftwareUpdateDocumentationAsset archivedFileStream]
  -[HMDSoftwareUpdateDocumentationAsset extrator]
  -[HMDSoftwareUpdateDocumentationAsset initWithDocumentationMetadata:]
  -[HMDSoftwareUpdateDocumentationAsset shouldAutomaticallyCache]
  -[HMDSoftwareUpdateDocumentationAsset finishDownload]
  -[HMDSoftwareUpdateDocumentationAsset cancelUnarchive]
  -[HMDSoftwareUpdateDocumentationAsset finishUnarchive]


HMDLocation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate, HMDCLLocationManagerDelegate>
 @property  NSObject<OS_dispatch_queue> *handlerQueue
 @property  <HMDCLLocationManager> *locationManager
 @property  int authStatus
 @property  int locationAuthorized
 @property  NSHashTable *singleLocationDelegates
 @property  NSHashTable *batchLocationDelegates
 @property  NSMapTable *regionStateDelegatesByRegionIdentifier
 @property  NSMapTable *pendingRegionMonitoringRequests
 @property  NSMapTable *pendingRegionCallbacks
 @property  NSMapTable *regionStates
 @property  BOOL beingConfigured
 @property  NSMutableArray *batchLocationTuples
 @property  HMFTimer *extractBatchLocationsTimer
 @property  NSDate *lastFetchBatchLocationsTime
 @property  double batchLocationsFetchInterval
 @property  HMFMessageDispatcher *msgDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDLocation logCategory]
  +[HMDLocation sharedManager]
  +[HMDLocation sunriseTimeForLocation:]
  +[HMDLocation sunsetTimeForLocation:]
  +[HMDLocation nextSunriseTimeForLocation:date:]
  +[HMDLocation nextSunsetTimeForLocation:date:]
  +[HMDLocation bundleForLocationManager]
  +[HMDLocation isValidLocation:]
  +[HMDLocation _getAlmanacWithLocation:]
  +[HMDLocation findEvent:withGeo:]
  +[HMDLocation _getAlmanacWithLocation:date:]
  +[HMDLocation timeZoneISOCountryCodeForCLLocationAsync:withCompletion:]

  // instance methods
  -[HMDLocation timerDidFire:]
  -[HMDLocation locationManager]
  -[HMDLocation handlerQueue]
  -[HMDLocation init]
  -[HMDLocation locationManager:didFailWithError:]
  -[HMDLocation dealloc]
  -[HMDLocation .cxx_destruct]
  -[HMDLocation setMsgDispatcher:]
  -[HMDLocation msgDispatcher]
  -[HMDLocation locationManagerDidChangeAuthorization:]
  -[HMDLocation locationManager:didDetermineState:forRegion:]
  -[HMDLocation locationManager:didUpdateLocations:]
  -[HMDLocation initWithLocationManager:]
  -[HMDLocation authStatus]
  -[HMDLocation setAuthStatus:]
  -[HMDLocation registerForRegionUpdate:withDelegate:completionHandler:]
  -[HMDLocation deregisterForRegionUpdate:completionHandler:]
  -[HMDLocation locationAuthorized]
  -[HMDLocation lastFetchBatchLocationsTime]
  -[HMDLocation batchLocationsFetchInterval]
  -[HMDLocation _extractBatchLocationsWithDelegate:]
  -[HMDLocation batchLocationDelegates]
  -[HMDLocation setExtractBatchLocationsTimer:]
  -[HMDLocation batchLocationTuples]
  -[HMDLocation _notifyBatchLocationDelegatesWithLocation:]
  -[HMDLocation _extractSingleLocationWithDelegate:]
  -[HMDLocation _canLocationBeExtracted]
  -[HMDLocation _notifySingleLocationDelegate:withLocation:]
  -[HMDLocation singleLocationDelegates]
  -[HMDLocation _notifyBatchLocationDelegate:withLocation:]
  -[HMDLocation extractBatchLocationsTimer]
  -[HMDLocation setLastFetchBatchLocationsTime:]
  -[HMDLocation beingConfigured]
  -[HMDLocation pendingRegionMonitoringRequests]
  -[HMDLocation regionStateDelegatesByRegionIdentifier]
  -[HMDLocation regionStates]
  -[HMDLocation stopExtractingBatchLocations]
  -[HMDLocation _notifySingleLocationDelegatesWithLocation:]
  -[HMDLocation setLocationAuthorized:]
  -[HMDLocation _delegateforRegion:]
  -[HMDLocation pendingRegionCallbacks]
  -[HMDLocation setBeingConfigured:]
  -[HMDLocation _updateExitForRegion:]
  -[HMDLocation _updateEntryForRegion:]
  -[HMDLocation _notifyAllLocationDelegatesWithLocation:]
  -[HMDLocation _updateWithLocationAuthorizationStatus:]
  -[HMDLocation _updateRegionState:forRegion:]
  -[HMDLocation startExtractingBatchLocationsWithDelegate:]
  -[HMDLocation startExtractingSingleLocationWithDelegate:]
  -[HMDLocation beingConfigured:completionHandler:]
  -[HMDLocation setBatchLocationsFetchInterval:]


HMDBonjourBrowserHelper : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSNetServiceBrowserDelegate, HMFTimerDelegate>
 @property  double browsingInterval
 @property  double browsingPeriodicity
 @property  NSString *serviceType
 @property  HMFUnfairLock *lock
 @property  HMFTimer *browsingTimer
 @property  HMFTimer *periodicityTimer
 @property  NSNetServiceBrowser *browser
 @property  NSMutableSet *discoveredServices
 @property  unsigned long discoveredServicesCount
 @property  BOOL started
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDBonjourBrowserHelper timerDidFire:]
  -[HMDBonjourBrowserHelper setLock:]
  -[HMDBonjourBrowserHelper netServiceBrowser:didFindService:moreComing:]
  -[HMDBonjourBrowserHelper isStarted]
  -[HMDBonjourBrowserHelper netServiceBrowserWillSearch:]
  -[HMDBonjourBrowserHelper setStarted:]
  -[HMDBonjourBrowserHelper netServiceBrowser:didRemoveService:moreComing:]
  -[HMDBonjourBrowserHelper setServiceType:]
  -[HMDBonjourBrowserHelper .cxx_destruct]
  -[HMDBonjourBrowserHelper lock]
  -[HMDBonjourBrowserHelper serviceType]
  -[HMDBonjourBrowserHelper browser]
  -[HMDBonjourBrowserHelper stop]
  -[HMDBonjourBrowserHelper setBrowser:]
  -[HMDBonjourBrowserHelper netServiceBrowserDidStopSearch:]
  -[HMDBonjourBrowserHelper start]
  -[HMDBonjourBrowserHelper discoveredServices]
  -[HMDBonjourBrowserHelper setDiscoveredServices:]
  -[HMDBonjourBrowserHelper periodicityTimer]
  -[HMDBonjourBrowserHelper browsingPeriodicity]
  -[HMDBonjourBrowserHelper setPeriodicityTimer:]
  -[HMDBonjourBrowserHelper browsingTimer]
  -[HMDBonjourBrowserHelper browsingInterval]
  -[HMDBonjourBrowserHelper setBrowsingTimer:]
  -[HMDBonjourBrowserHelper initWithServicesOfType:browsingTimeInterval:browsingPeriodicity:]
  -[HMDBonjourBrowserHelper discoveredServicesCount]
  -[HMDBonjourBrowserHelper setBrowsingInterval:]
  -[HMDBonjourBrowserHelper setBrowsingPeriodicity:]


HMDCloudPairedMetadataDiagnostics : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDNetworkRouterFirewallRuleAccessoryIdentifier *accessoryIdentifier
 @property  NSURL *privacyPolicyURL
 @property  NSURL *uploadDestination
 @property  unsigned long consentVersion
 @property  unsigned long uploadType
 @property  NSDictionary *prettyJSONDictionary

  // class methods
  +[HMDCloudPairedMetadataDiagnostics logCategory]

  // instance methods
  -[HMDCloudPairedMetadataDiagnostics attributeDescriptions]
  -[HMDCloudPairedMetadataDiagnostics accessoryIdentifier]
  -[HMDCloudPairedMetadataDiagnostics .cxx_destruct]
  -[HMDCloudPairedMetadataDiagnostics privacyPolicyURL]
  -[HMDCloudPairedMetadataDiagnostics uploadType]
  -[HMDCloudPairedMetadataDiagnostics uploadDestination]
  -[HMDCloudPairedMetadataDiagnostics consentVersion]
  -[HMDCloudPairedMetadataDiagnostics prettyJSONDictionary]
  -[HMDCloudPairedMetadataDiagnostics initWithAccessoryIdentifier:jsonDictionary:]
  -[HMDCloudPairedMetadataDiagnostics initWithAccessoryIdentifier:privacyPolicyURL:uploadDestination:consentVersion:uploadType:]


HMDCharacteristicWriteAction : HMDAction <NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  HMDCharacteristic *characteristic
 @property  id targetValue
 @property  NSDictionary *actionInformation
 @property  NSString *dumpState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCharacteristicWriteAction supportsSecureCoding]
  +[HMDCharacteristicWriteAction logCategory]
  +[HMDCharacteristicWriteAction actionWithDictionaryRepresentation:home:]

  // instance methods
  -[HMDCharacteristicWriteAction setTargetValue:]
  -[HMDCharacteristicWriteAction targetValue]
  -[HMDCharacteristicWriteAction init]
  -[HMDCharacteristicWriteAction .cxx_destruct]
  -[HMDCharacteristicWriteAction encodeWithCoder:]
  -[HMDCharacteristicWriteAction type]
  -[HMDCharacteristicWriteAction dictionaryRepresentation]
  -[HMDCharacteristicWriteAction requiresDeviceUnlock]
  -[HMDCharacteristicWriteAction dumpState]
  -[HMDCharacteristicWriteAction characteristic]
  -[HMDCharacteristicWriteAction initWithCoder:]
  -[HMDCharacteristicWriteAction associatedAccessories]
  -[HMDCharacteristicWriteAction isAssociatedWithAccessory:]
  -[HMDCharacteristicWriteAction transactionObjectUpdated:newValues:message:]
  -[HMDCharacteristicWriteAction transactionObjectRemoved:message:]
  -[HMDCharacteristicWriteAction modelObjectWithChangeType:]
  -[HMDCharacteristicWriteAction stateDump]
  -[HMDCharacteristicWriteAction entitlementsForNotification]
  -[HMDCharacteristicWriteAction isActionForCharacteristic:]
  -[HMDCharacteristicWriteAction initWithUUID:characteristic:targetValue:actionSet:]
  -[HMDCharacteristicWriteAction replaceCharacteristic:]
  -[HMDCharacteristicWriteAction _processWriteActionModelUpdated:message:]
  -[HMDCharacteristicWriteAction isSecureAction]
  -[HMDCharacteristicWriteAction actionInformation]


HMDCharacteristicWriteActionModel : HMDActionModel
 @property  NSString *accessory
 @property  NSNumber *serviceID
 @property  NSNumber *characteristicID
 @property  id targetValue

  // class methods
  +[HMDCharacteristicWriteActionModel properties]

  // instance methods
  -[HMDCharacteristicWriteActionModel dependentUUIDs]
  -[HMDCharacteristicWriteActionModel loadModelWithActionInformation:]


HMDCameraSnapshotReceiver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSUUID *uniqueIdentifier
 @property  HMDCameraSnapshotSessionID *sessionID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDAccessory *accessory
 @property  NSDictionary *options
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  HMDSnapshotFile *snapshotFile
 @property  HMDSnapshotRequestHandler *snapshotRequestHandler
 @property  HMDCameraResidentMessageHandler *residentMessageHandler
 @property  HMDCameraSnapshotMetrics *snapshotMetrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotReceiver logCategory]

  // instance methods
  -[HMDCameraSnapshotReceiver sessionID]
  -[HMDCameraSnapshotReceiver logIdentifier]
  -[HMDCameraSnapshotReceiver delegateQueue]
  -[HMDCameraSnapshotReceiver .cxx_destruct]
  -[HMDCameraSnapshotReceiver options]
  -[HMDCameraSnapshotReceiver workQueue]
  -[HMDCameraSnapshotReceiver uniqueIdentifier]
  -[HMDCameraSnapshotReceiver _sendMessageWithName:payload:responseHandler:]
  -[HMDCameraSnapshotReceiver accessory]
  -[HMDCameraSnapshotReceiver snapshotRequestHandler]
  -[HMDCameraSnapshotReceiver setSnapshotFile:]
  -[HMDCameraSnapshotReceiver snapshotFile]
  -[HMDCameraSnapshotReceiver residentMessageHandler]
  -[HMDCameraSnapshotReceiver initWithSessionID:workQueue:options:accessory:delegateQueue:uniqueIdentifier:snapshotRequestHandler:residentMessageHandler:]
  -[HMDCameraSnapshotReceiver _sendRequestWithTierType:toResident:]
  -[HMDCameraSnapshotReceiver _sendConfirmationToResident:]
  -[HMDCameraSnapshotReceiver snapshotMetrics]
  -[HMDCameraSnapshotReceiver setSnapshotMetrics:]


HMDUserPresence : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  HMDUser *user
 @property  HMDUserPresenceRegion *presenceRegionStatus
 @property  NSDate *updateTimestamp
 @property  BOOL atHome
 @property  BOOL notAtHome

  // class methods
  +[HMDUserPresence supportsSecureCoding]

  // instance methods
  -[HMDUserPresence user]
  -[HMDUserPresence attributeDescriptions]
  -[HMDUserPresence .cxx_destruct]
  -[HMDUserPresence encodeWithCoder:]
  -[HMDUserPresence initWithCoder:]
  -[HMDUserPresence presenceRegionStatus]
  -[HMDUserPresence updateTimestamp]
  -[HMDUserPresence setPresenceRegionStatus:]
  -[HMDUserPresence initWithUser:presenceRegionStatus:]
  -[HMDUserPresence isAtHome]
  -[HMDUserPresence isNotAtHome]


HMDCameraRecordingSessionFactory : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDCameraRecordingSessionFactory>
 @property  double maximumClipDuration
 @property  double recordingExtensionDuration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDCameraRecordingSessionFactory maximumClipDuration]
  -[HMDCameraRecordingSessionFactory createVideoAnalyzerWithConfiguration:identifier:]
  -[HMDCameraRecordingSessionFactory createSignificantEventManagerWithWorkQueue:faceClassificationResolver:logIdentifier:]
  -[HMDCameraRecordingSessionFactory createUploaderWithClipUUID:startDate:targetFragmentDuration:localZone:workQueue:logIdentifier:]
  -[HMDCameraRecordingSessionFactory isVideoInitData:combinableWithVideoInitData:]
  -[HMDCameraRecordingSessionFactory recordingExtensionDuration]


HMDXPCEntitlementMessageFilter : HMDXPCMessageFilter <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDXPCEntitlementMessageFilter logCategory]

  // instance methods
  -[HMDXPCEntitlementMessageFilter acceptWithPolicies:error:]


HMDFileManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDFileManager>
 @property  NSURL *heroFrameStoreDirectoryURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDFileManager createDirectoryAtURL:withIntermediateDirectories:attributes:error:]
  -[HMDFileManager dataWithContentsOfURL:options:error:]
  -[HMDFileManager fileExistsAtURL:]
  -[HMDFileManager copyItemAtURL:toURL:error:]
  -[HMDFileManager heroFrameStoreDirectoryURL]
  -[HMDFileManager writeData:toURL:options:error:]


HMDAction : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, HMDBackingStoreModelBackedObjectProtocol, HMDBackingStoreObjectProtocol, HMFLogging>
 @property  HMDActionSet *actionSet
 @property  NSUUID *uuid
 @property  unsigned long type
 @property  NSDictionary *dictionaryRepresentation
 @property  NSString *stateDump
 @property  BOOL requiresDeviceUnlock
 @property  unsigned long entitlementsForNotification
 @property  NSArray *associatedAccessories
 @property  Class modelClass
 @property  NSUUID *modelIdentifier
 @property  NSUUID *modelParentIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAction supportsSecureCoding]
  +[HMDAction logCategory]
  +[HMDAction actionWithDictionaryRepresentation:home:]

  // instance methods
  -[HMDAction logIdentifier]
  -[HMDAction modelIdentifier]
  -[HMDAction init]
  -[HMDAction attributeDescriptions]
  -[HMDAction uuid]
  -[HMDAction .cxx_destruct]
  -[HMDAction actionSet]
  -[HMDAction setActionSet:]
  -[HMDAction encodeWithCoder:]
  -[HMDAction type]
  -[HMDAction modelClass]
  -[HMDAction dictionaryRepresentation]
  -[HMDAction requiresDeviceUnlock]
  -[HMDAction initWithCoder:]
  -[HMDAction associatedAccessories]
  -[HMDAction isAssociatedWithAccessory:]
  -[HMDAction modelObjectWithChangeType:version:]
  -[HMDAction transactionObjectUpdated:newValues:message:]
  -[HMDAction transactionObjectRemoved:message:]
  -[HMDAction modelObjectWithChangeType:]
  -[HMDAction initWithUUID:actionSet:]
  -[HMDAction stateDump]
  -[HMDAction entitlementsForNotification]
  -[HMDAction executeWithSource:completionHandler:]
  -[HMDAction configureWithHome:]
  -[HMDAction updateActionSetIfNil:]
  -[HMDAction modelBackedObjects]
  -[HMDAction modelParentIdentifier]
  -[HMDAction backingStoreObjectsWithChangeType:version:]


HMDCloudChange : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBackingStoreChangeObject, HMDBackingStoreRecordMapping>
 @property  HMDBackingStoreModelObject *objectChange
 @property  unsigned long changeType
 @property  unsigned long applyType
 @property  NSMutableSet *rowIDsSet
 @property  NSUUID *parentObjectID
 @property  NSUUID *objectID
 @property  NSString *recordName
 @property  BOOL addChange
 @property  BOOL updateChange
 @property  BOOL deleteChange
 @property  BOOL invalidChange
 @property  BOOL dropAndDoNotApply
 @property  BOOL dropAfterApply
 @property  BOOL dropStagedAfterApply
 @property  BOOL pushAfterApply
 @property  NSArray *rowIDs
 @property  HMDCloudRecord *cloudRecord
 @property  HMDCloudRecord *deletedCloudRecord
 @property  CKRecord *record
 @property  CKRecordID *recordID
 @property  HMDBackingStoreModelObject *change
 @property  NSSet *dependentUUIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uuid
 @property  NSUUID *parentUuid
 @property  NSString *type

  // class methods
  +[HMDCloudChange shortDescription]

  // instance methods
  -[HMDCloudChange isInvalid]
  -[HMDCloudChange init]
  -[HMDCloudChange change]
  -[HMDCloudChange isAdded]
  -[HMDCloudChange uuid]
  -[HMDCloudChange isDeleted]
  -[HMDCloudChange .cxx_destruct]
  -[HMDCloudChange rowIDs]
  -[HMDCloudChange type]
  -[HMDCloudChange shortDescription]
  -[HMDCloudChange isUpdated]
  -[HMDCloudChange recordID]
  -[HMDCloudChange changeType]
  -[HMDCloudChange record]
  -[HMDCloudChange recordName]
  -[HMDCloudChange setChangeType:]
  -[HMDCloudChange objectID]
  -[HMDCloudChange parentObjectID]
  -[HMDCloudChange cloudRecord]
  -[HMDCloudChange dependentUUIDs]
  -[HMDCloudChange parentUuid]
  -[HMDCloudChange initWithObjectChange:]
  -[HMDCloudChange objectChange]
  -[HMDCloudChange initWithCloudObjectRecord:]
  -[HMDCloudChange updateWithObjectChange:]
  -[HMDCloudChange forceChangeToDelete]
  -[HMDCloudChange updateCloudRecord:]
  -[HMDCloudChange updateDeletedCloudRecord:]
  -[HMDCloudChange forceChangeToInvalid]
  -[HMDCloudChange updateChangeWithRecord:]
  -[HMDCloudChange resetRecord]
  -[HMDCloudChange deletedCloudRecord]
  -[HMDCloudChange rowIDsSet]
  -[HMDCloudChange _initWithObjectChange:cloudObjectRecord:]
  -[HMDCloudChange applyType]
  -[HMDCloudChange setObjectChange:]
  -[HMDCloudChange setApplyType:]
  -[HMDCloudChange isDropAndDoNotApply]
  -[HMDCloudChange isDropAfterApply]
  -[HMDCloudChange isDropStagedAfterApply]
  -[HMDCloudChange isPushAfterApply]
  -[HMDCloudChange replayChange:stagedChange:]


HMDCameraClipAppendStreamingAssetOperation : HMDCameraClipOperation <HMFTimerDelegate>
 @property  HMFTimer *retryTimer
 @property  NSData *data
 @property  HMDCameraClipSegmentMetadata *metadata
 @property  HMCameraClipEncryptionManager *encryptionManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraClipAppendStreamingAssetOperation logCategory]
  +[HMDCameraClipAppendStreamingAssetOperation shouldRetry]
  +[HMDCameraClipAppendStreamingAssetOperation streamingAssetPropertyName]
  +[HMDCameraClipAppendStreamingAssetOperation metadataPropertyName]

  // instance methods
  -[HMDCameraClipAppendStreamingAssetOperation timerDidFire:]
  -[HMDCameraClipAppendStreamingAssetOperation setRetryTimer:]
  -[HMDCameraClipAppendStreamingAssetOperation main]
  -[HMDCameraClipAppendStreamingAssetOperation attributeDescriptions]
  -[HMDCameraClipAppendStreamingAssetOperation retryTimer]
  -[HMDCameraClipAppendStreamingAssetOperation .cxx_destruct]
  -[HMDCameraClipAppendStreamingAssetOperation cancelWithError:]
  -[HMDCameraClipAppendStreamingAssetOperation data]
  -[HMDCameraClipAppendStreamingAssetOperation finish]
  -[HMDCameraClipAppendStreamingAssetOperation metadata]
  -[HMDCameraClipAppendStreamingAssetOperation initWithClipModelID:localZone:data:metadata:encryptionManager:dataSource:]
  -[HMDCameraClipAppendStreamingAssetOperation encryptionManager]
  -[HMDCameraClipAppendStreamingAssetOperation _updateClipModel:usingStreamingAsset:]
  -[HMDCameraClipAppendStreamingAssetOperation _retryDelayForError:]
  -[HMDCameraClipAppendStreamingAssetOperation initWithClipModelID:localZone:data:metadata:encryptionManager:]


HMDClientConnection : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDHomeManager *homeManager
 @property  NSMutableArray *commandsBeingExecuted
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDClientConnection messageTargetUUID]
  -[HMDClientConnection messageReceiveQueue]
  -[HMDClientConnection setWorkQueue:]
  -[HMDClientConnection dealloc]
  -[HMDClientConnection .cxx_destruct]
  -[HMDClientConnection workQueue]
  -[HMDClientConnection setMsgDispatcher:]
  -[HMDClientConnection msgDispatcher]
  -[HMDClientConnection _registerForMessages]
  -[HMDClientConnection setHomeManager:]
  -[HMDClientConnection homeManager]
  -[HMDClientConnection _handleSiriIntentRequest:]
  -[HMDClientConnection _handleSiriCommand:]
  -[HMDClientConnection _handleDaemonRequest:]
  -[HMDClientConnection _handleSiriSyncDataRequest:]
  -[HMDClientConnection commandsBeingExecuted]
  -[HMDClientConnection initWithHomeManager:queue:messageDispatcher:]
  -[HMDClientConnection setCommandsBeingExecuted:]


HMDHomeRemoteNotificationHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeRemoteNotificationHandler logCategory]

  // instance methods
  -[HMDHomeRemoteNotificationHandler logID]
  -[HMDHomeRemoteNotificationHandler logIdentifier]
  -[HMDHomeRemoteNotificationHandler .cxx_destruct]
  -[HMDHomeRemoteNotificationHandler workQueue]
  -[HMDHomeRemoteNotificationHandler initWithHome:]
  -[HMDHomeRemoteNotificationHandler sendNotifications:notificationUpdateIdentifier:]
  -[HMDHomeRemoteNotificationHandler _sendNotifications:notificationUpdateIdentifier:]
  -[HMDHomeRemoteNotificationHandler sendConfigureBulletinNotification:]


HMDLostModeManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL lost

  // class methods
  +[HMDLostModeManager logCategory]
  +[HMDLostModeManager sharedManager]

  // instance methods
  -[HMDLostModeManager init]
  -[HMDLostModeManager attributeDescriptions]
  -[HMDLostModeManager .cxx_destruct]
  -[HMDLostModeManager isLost]


HMDDataStreamBulkSendPendingSessionContext : NSObject /usr/lib/libc++.1.dylib
 @property  @? sessionStartCallback
 @property  HMFTimer *handleOpenRequestResponseTimer
 @property  HMFTimer *sendCloseEventTimer
 @property  BOOL shouldCloseSessionWithTimeoutReason

  // instance methods
  -[HMDDataStreamBulkSendPendingSessionContext .cxx_destruct]
  -[HMDDataStreamBulkSendPendingSessionContext handleOpenRequestResponseTimer]
  -[HMDDataStreamBulkSendPendingSessionContext sendCloseEventTimer]
  -[HMDDataStreamBulkSendPendingSessionContext initWithSessionStartCallback:handleOpenRequestResponseTimer:sendCloseEventTimer:]
  -[HMDDataStreamBulkSendPendingSessionContext shouldCloseSessionWithTimeoutReason]
  -[HMDDataStreamBulkSendPendingSessionContext sessionStartCallback]
  -[HMDDataStreamBulkSendPendingSessionContext setHandleOpenRequestResponseTimer:]
  -[HMDDataStreamBulkSendPendingSessionContext setSendCloseEventTimer:]


HMDDataStreamBulkSendProtocol : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDDataStreamProtocol, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  id accessory
 @property  NSMapTable *listeners
 @property  BOOL isConnected
 @property  NSString *logIdentifier
 @property  unsigned int nextSessionIdentifier
 @property  NSMapTable *activeBulkSendSessions
 @property  NSMutableDictionary *pendingBulkSendSessionContextBySessionIdentifier
 @property  @? bulkSendSessionContextFactory
 @property  <HMDDataStreamProtocolDelegate> *dataStream
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL active

  // class methods
  +[HMDDataStreamBulkSendProtocol logCategory]
  +[HMDDataStreamBulkSendProtocol protocolName]

  // instance methods
  -[HMDDataStreamBulkSendProtocol timerDidFire:]
  -[HMDDataStreamBulkSendProtocol isConnected]
  -[HMDDataStreamBulkSendProtocol logIdentifier]
  -[HMDDataStreamBulkSendProtocol dataStream]
  -[HMDDataStreamBulkSendProtocol .cxx_destruct]
  -[HMDDataStreamBulkSendProtocol setQueue:]
  -[HMDDataStreamBulkSendProtocol setListeners:]
  -[HMDDataStreamBulkSendProtocol isActive]
  -[HMDDataStreamBulkSendProtocol accessory]
  -[HMDDataStreamBulkSendProtocol setDataStream:]
  -[HMDDataStreamBulkSendProtocol queue]
  -[HMDDataStreamBulkSendProtocol listeners]
  -[HMDDataStreamBulkSendProtocol setIsConnected:]
  -[HMDDataStreamBulkSendProtocol nextSessionIdentifier]
  -[HMDDataStreamBulkSendProtocol setNextSessionIdentifier:]
  -[HMDDataStreamBulkSendProtocol setAccessory:]
  -[HMDDataStreamBulkSendProtocol removeListener:]
  -[HMDDataStreamBulkSendProtocol addListener:fileType:]
  -[HMDDataStreamBulkSendProtocol dataStream:didFailWithError:]
  -[HMDDataStreamBulkSendProtocol dataStream:didReceiveResponse:header:payload:]
  -[HMDDataStreamBulkSendProtocol dataStream:didReceiveEvent:header:payload:]
  -[HMDDataStreamBulkSendProtocol dataStream:didReceiveRequest:header:payload:]
  -[HMDDataStreamBulkSendProtocol dataStreamDidClose:]
  -[HMDDataStreamBulkSendProtocol dataStreamDidOpen:]
  -[HMDDataStreamBulkSendProtocol initWithQueue:accessory:logIdentifier:]
  -[HMDDataStreamBulkSendProtocol openSessionForFileType:reason:queue:callback:]
  -[HMDDataStreamBulkSendProtocol _notifyActiveStatusChangedFromPreviousValue:]
  -[HMDDataStreamBulkSendProtocol initWithQueue:accessory:logIdentifier:bulkSendSessionContextFactory:]
  -[HMDDataStreamBulkSendProtocol activeBulkSendSessions]
  -[HMDDataStreamBulkSendProtocol _closeAllSessionsWithError:]
  -[HMDDataStreamBulkSendProtocol _handleDataMessage:]
  -[HMDDataStreamBulkSendProtocol _handleCloseMessage:]
  -[HMDDataStreamBulkSendProtocol _handleOpenWithRequestHeader:payload:]
  -[HMDDataStreamBulkSendProtocol _startSessionCandidate:queue:callback:]
  -[HMDDataStreamBulkSendProtocol _rejectSessionCandidate:status:]
  -[HMDDataStreamBulkSendProtocol _cancelSessionWithIdentifier:reason:hadReceivedEof:]
  -[HMDDataStreamBulkSendProtocol _createSessionIdentifier]
  -[HMDDataStreamBulkSendProtocol _sendOpenResponseWithRequestHeader:streamIdentifier:]
  -[HMDDataStreamBulkSendProtocol _createSessionFromCandidate:queue:]
  -[HMDDataStreamBulkSendProtocol _pumpMessage:session:]
  -[HMDDataStreamBulkSendProtocol _pumpReceiveFailure:session:]
  -[HMDDataStreamBulkSendProtocol _sendOpenResponseWithRequestHeader:bulkSendStatus:]
  -[HMDDataStreamBulkSendProtocol _sendOpenResponseWithRequestHeader:status:]
  -[HMDDataStreamBulkSendProtocol _createSessionCandidateWithRequestHeader:]
  -[HMDDataStreamBulkSendProtocol _getBulkSendSessionForSessionIdentifier:]
  -[HMDDataStreamBulkSendProtocol _removeBulkSendSessionForSessionIdentifier:]
  -[HMDDataStreamBulkSendProtocol _sendAckMessageWithIdentifier:]
  -[HMDDataStreamBulkSendProtocol _sendCloseMessageWithIdentifier:reason:]
  -[HMDDataStreamBulkSendProtocol _openSessionForFileType:reason:queue:callback:]
  -[HMDDataStreamBulkSendProtocol bulkSendSessionContextFactory]
  -[HMDDataStreamBulkSendProtocol pendingBulkSendSessionContextBySessionIdentifier]
  -[HMDDataStreamBulkSendProtocol asyncBulkSendSessionCandidate:didAcceptOnQueue:callback:]
  -[HMDDataStreamBulkSendProtocol asyncBulkSendSessionCandidate:didRejectWithStatus:]
  -[HMDDataStreamBulkSendProtocol asyncBulkSendSessionDidCancelSessionWithIdentifier:reason:hadReceivedEof:]


HMDRemoteAccountManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDAccountManager, HMFLogging, HMFObject, IDSServiceDelegate, NSFastEnumeration>
 @property  IDSService *service
 @property  BOOL monitoring
 @property  NSMutableArray *resolveOperations
 @property  NSArray *accounts
 @property  HMDBackingStore *backingStore
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMDRemoteAccountManager logCategory]
  +[HMDRemoteAccountManager sharedManager]

  // instance methods
  -[HMDRemoteAccountManager addAccount:]
  -[HMDRemoteAccountManager accounts]
  -[HMDRemoteAccountManager isMonitoring]
  -[HMDRemoteAccountManager accountForIdentifier:]
  -[HMDRemoteAccountManager init]
  -[HMDRemoteAccountManager attributeDescriptions]
  -[HMDRemoteAccountManager .cxx_destruct]
  -[HMDRemoteAccountManager removeAccount:]
  -[HMDRemoteAccountManager service:account:identifier:didSendWithSuccess:error:context:]
  -[HMDRemoteAccountManager stop]
  -[HMDRemoteAccountManager countByEnumeratingWithState:objects:count:]
  -[HMDRemoteAccountManager setBackingStore:]
  -[HMDRemoteAccountManager service]
  -[HMDRemoteAccountManager accountForHandle:]
  -[HMDRemoteAccountManager backingStore]
  -[HMDRemoteAccountManager initWithIDSService:]
  -[HMDRemoteAccountManager reset]
  -[HMDRemoteAccountManager setMonitoring:]
  -[HMDRemoteAccountManager setAccounts:]
  -[HMDRemoteAccountManager start]
  -[HMDRemoteAccountManager _resolveAccountForHandle:completionHandler:]
  -[HMDRemoteAccountManager deviceForSenderContext:]
  -[HMDRemoteAccountManager __handleSendMessageFailureWithError:destination:]
  -[HMDRemoteAccountManager accountForSenderContext:]
  -[HMDRemoteAccountManager shouldCacheAccount:]
  -[HMDRemoteAccountManager shouldSyncAccount:]
  -[HMDRemoteAccountManager shouldSyncDevice:]
  -[HMDRemoteAccountManager shouldAccount:pushbackModel:actions:]
  -[HMDRemoteAccountManager shouldDevice:processModel:actions:]
  -[HMDRemoteAccountManager processAccountModel:message:]
  -[HMDRemoteAccountManager processAccountModelRemove:message:]
  -[HMDRemoteAccountManager resolveOperations]
  -[HMDRemoteAccountManager accountForModelIdentifier:]


HMDRemoteMessageNotifications : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMapTable *sessionNotificationPayloads

  // class methods
  +[HMDRemoteMessageNotifications initialize]
  +[HMDRemoteMessageNotifications messagesWithNotificationResponses]
  +[HMDRemoteMessageNotifications messageExpectsNotificationResponse:]

  // instance methods
  -[HMDRemoteMessageNotifications init]
  -[HMDRemoteMessageNotifications .cxx_destruct]
  -[HMDRemoteMessageNotifications sessionNotificationPayloads]
  -[HMDRemoteMessageNotifications _notificationPayloadsForDevice:]
  -[HMDRemoteMessageNotifications addNotificationPayload:identifier:device:]
  -[HMDRemoteMessageNotifications removeNotificationPayloadWithIdentifier:device:]
  -[HMDRemoteMessageNotifications notificationPayloadWithIdentifier:device:]
  -[HMDRemoteMessageNotifications clearNotificationsForDevice:]
  -[HMDRemoteMessageNotifications setSessionNotificationPayloads:]


HMDSecureRemoteMessageTransport : HMFMessageTransport /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDSecureRemoteSessionDelegate, HMFLogging, HMFMessageTransportDelegate, HMFDumpState>
 @property  NSMutableSet *secureRemoteSessions
 @property  HMDRemoteMessageNotifications *sessionNotifications
 @property  NSMutableDictionary *currentHomeConfigurations
 @property  NSArray *transports
 @property  HMDRemoteDeviceMonitor *deviceMonitor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSecureRemoteMessageTransport logCategory]
  +[HMDSecureRemoteMessageTransport shortDescription]
  +[HMDSecureRemoteMessageTransport defaultTransport]

  // instance methods
  -[HMDSecureRemoteMessageTransport sendMessage:completionHandler:]
  -[HMDSecureRemoteMessageTransport messageTransport:didReceiveMessage:]
  -[HMDSecureRemoteMessageTransport dealloc]
  -[HMDSecureRemoteMessageTransport .cxx_destruct]
  -[HMDSecureRemoteMessageTransport descriptionWithPointer:]
  -[HMDSecureRemoteMessageTransport shortDescription]
  -[HMDSecureRemoteMessageTransport _handleNotificationMessage:]
  -[HMDSecureRemoteMessageTransport reset]
  -[HMDSecureRemoteMessageTransport transports]
  -[HMDSecureRemoteMessageTransport dumpState]
  -[HMDSecureRemoteMessageTransport start]
  -[HMDSecureRemoteMessageTransport deviceMonitor]
  -[HMDSecureRemoteMessageTransport electDeviceForUser:destination:deviceCapabilities:responseTimeout:responseQueue:responseHandler:]
  -[HMDSecureRemoteMessageTransport accountRegistry]
  -[HMDSecureRemoteMessageTransport secureRemoteSession:receivedRequestToSendMessage:]
  -[HMDSecureRemoteMessageTransport secureRemoteSession:didCloseWithError:]
  -[HMDSecureRemoteMessageTransport pingDevice:completionHandler:]
  -[HMDSecureRemoteMessageTransport updateHome:configurationVersion:]
  -[HMDSecureRemoteMessageTransport removeHome:]
  -[HMDSecureRemoteMessageTransport prepareAnswerForRequestedCapabilities:]
  -[HMDSecureRemoteMessageTransport initWithTransports:]
  -[HMDSecureRemoteMessageTransport secureRemoteSessions]
  -[HMDSecureRemoteMessageTransport _handleNotificationResponseForMessage:responsePayload:responseError:responseHandler:]
  -[HMDSecureRemoteMessageTransport _preferredTransportForMessage:]
  -[HMDSecureRemoteMessageTransport _electDeviceForAccountDestination:completionHandler:]
  -[HMDSecureRemoteMessageTransport _sendSecureMessage:completionHandler:]
  -[HMDSecureRemoteMessageTransport _handlePingMessage:]
  -[HMDSecureRemoteMessageTransport _handleSecureMessage:fromDevice:transport:]
  -[HMDSecureRemoteMessageTransport _handleElectDeviceForIDSSession:]
  -[HMDSecureRemoteMessageTransport currentHomeConfigurations]
  -[HMDSecureRemoteMessageTransport _handleElectDeviceForUserResponse:error:responseQueue:completion:]
  -[HMDSecureRemoteMessageTransport _haveAllCapabilities:]
  -[HMDSecureRemoteMessageTransport _pingDevice:completionHandler:]
  -[HMDSecureRemoteMessageTransport _sendPingToDevice:timeout:restriction:responseHandler:]
  -[HMDSecureRemoteMessageTransport sessionNotifications]
  -[HMDSecureRemoteMessageTransport _secureRemoteSessionForDevice:]
  -[HMDSecureRemoteMessageTransport _openSecureSessionToDevice:completionHandler:]
  -[HMDSecureRemoteMessageTransport _updateDeviceInformationFromMessage:]
  -[HMDSecureRemoteMessageTransport _handleReceivedMessage:transport:]
  -[HMDSecureRemoteMessageTransport openSecureSessionToDevice:completionHandler:]
  -[HMDSecureRemoteMessageTransport setSessionNotifications:]
  -[HMDSecureRemoteMessageTransport setCurrentHomeConfigurations:]


_HMDCameraPowerAssertion : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDCameraPowerAssertionHandler *assertionHandler
 @property  HMDCameraSessionID *remoteRequestHandlerSessionID

  // instance methods
  -[_HMDCameraPowerAssertion dealloc]
  -[_HMDCameraPowerAssertion .cxx_destruct]
  -[_HMDCameraPowerAssertion assertionHandler]
  -[_HMDCameraPowerAssertion remoteRequestHandlerSessionID]
  -[_HMDCameraPowerAssertion initWithPowerAssertionHandler:remoteRequestHandlerSessionID:]


HMDCameraPowerAssertionHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSMutableSet *currentRequestHandlerSessionIDs
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned int powerAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraPowerAssertionHandler logCategory]
  +[HMDCameraPowerAssertionHandler sharedHandler]

  // instance methods
  -[HMDCameraPowerAssertionHandler powerAssertion]
  -[HMDCameraPowerAssertionHandler setPowerAssertion:]
  -[HMDCameraPowerAssertionHandler init]
  -[HMDCameraPowerAssertionHandler .cxx_destruct]
  -[HMDCameraPowerAssertionHandler workQueue]
  -[HMDCameraPowerAssertionHandler registerRemoteRequestHandler:forSessionID:]
  -[HMDCameraPowerAssertionHandler deregisterRemoteRequestHandler:]
  -[HMDCameraPowerAssertionHandler currentRequestHandlerSessionIDs]


AWDHomeKitEventTriggerEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasEndEvent
 @property  BOOL endEvent
 @property  BOOL hasCharEvent
 @property  AWDHomeKitCharacteristicEvent *charEvent
 @property  BOOL hasLocationEvent
 @property  AWDHomeKitLocationEvent *locationEvent
 @property  BOOL hasCharThresholdEvent
 @property  AWDHomeKitCharacteristicThresholdEvent *charThresholdEvent
 @property  BOOL hasCalendarEvent
 @property  AWDHomeKitCalendarEvent *calendarEvent
 @property  BOOL hasSignificantTimeEvent
 @property  AWDHomeKitSignificantTimeEvent *significantTimeEvent
 @property  BOOL hasThresholdEvent
 @property  AWDHomeKitCharacteristicThresholdEvent *thresholdEvent
 @property  BOOL hasPresenceEvent
 @property  AWDHomeKitPresenceEvent *presenceEvent
 @property  BOOL hasDurationEvent
 @property  AWDHomeKitDurationEvent *durationEvent

  // instance methods
  -[AWDHomeKitEventTriggerEvent copyWithZone:]
  -[AWDHomeKitEventTriggerEvent hasLocationEvent]
  -[AWDHomeKitEventTriggerEvent .cxx_destruct]
  -[AWDHomeKitEventTriggerEvent endEvent]
  -[AWDHomeKitEventTriggerEvent readFrom:]
  -[AWDHomeKitEventTriggerEvent presenceEvent]
  -[AWDHomeKitEventTriggerEvent writeTo:]
  -[AWDHomeKitEventTriggerEvent isEqual:]
  -[AWDHomeKitEventTriggerEvent setPresenceEvent:]
  -[AWDHomeKitEventTriggerEvent setLocationEvent:]
  -[AWDHomeKitEventTriggerEvent copyTo:]
  -[AWDHomeKitEventTriggerEvent dictionaryRepresentation]
  -[AWDHomeKitEventTriggerEvent locationEvent]
  -[AWDHomeKitEventTriggerEvent mergeFrom:]
  -[AWDHomeKitEventTriggerEvent setEndEvent:]
  -[AWDHomeKitEventTriggerEvent setCalendarEvent:]
  -[AWDHomeKitEventTriggerEvent calendarEvent]
  -[AWDHomeKitEventTriggerEvent setSignificantTimeEvent:]
  -[AWDHomeKitEventTriggerEvent setCharEvent:]
  -[AWDHomeKitEventTriggerEvent setCharThresholdEvent:]
  -[AWDHomeKitEventTriggerEvent setDurationEvent:]
  -[AWDHomeKitEventTriggerEvent setThresholdEvent:]
  -[AWDHomeKitEventTriggerEvent charEvent]
  -[AWDHomeKitEventTriggerEvent charThresholdEvent]
  -[AWDHomeKitEventTriggerEvent significantTimeEvent]
  -[AWDHomeKitEventTriggerEvent thresholdEvent]
  -[AWDHomeKitEventTriggerEvent durationEvent]
  -[AWDHomeKitEventTriggerEvent setHasEndEvent:]
  -[AWDHomeKitEventTriggerEvent hasEndEvent]
  -[AWDHomeKitEventTriggerEvent hasCharEvent]
  -[AWDHomeKitEventTriggerEvent hasCharThresholdEvent]
  -[AWDHomeKitEventTriggerEvent hasCalendarEvent]
  -[AWDHomeKitEventTriggerEvent hasSignificantTimeEvent]
  -[AWDHomeKitEventTriggerEvent hasThresholdEvent]
  -[AWDHomeKitEventTriggerEvent hasPresenceEvent]
  -[AWDHomeKitEventTriggerEvent hasDurationEvent]


HMDRemoteLoginReceiverAuthentication : HMDRemoteLoginAuthentication
 @property  <HMDRemoteLoginReceiverAuthenticationDelegate> *delegate

  // class methods
  +[HMDRemoteLoginReceiverAuthentication logCategory]

  // instance methods
  -[HMDRemoteLoginReceiverAuthentication .cxx_destruct]
  -[HMDRemoteLoginReceiverAuthentication _saveRemoteVerifiedAccount:completion:]
  -[HMDRemoteLoginReceiverAuthentication delegate]
  -[HMDRemoteLoginReceiverAuthentication initWithSessionID:remoteDevice:workQueue:remoteMessageSender:delegate:]
  -[HMDRemoteLoginReceiverAuthentication _completedAuthenticationRequest:loggedInAccount:]
  -[HMDRemoteLoginReceiverAuthentication _authenticateAccount:targetedAccountType:]
  -[HMDRemoteLoginReceiverAuthentication _authenticateStoreWithAuthenticationResults:completionHandler:]
  -[HMDRemoteLoginReceiverAuthentication _handleAuthenticationResults:error:targetedAccountType:]
  -[HMDRemoteLoginReceiverAuthentication _authenticateForAccountType:usingAuthenticationResults:completionHandler:]


HMDCameraStreamSessionID : HMDCameraSessionID
  // instance methods
  -[HMDCameraStreamSessionID initWithAccessory:service:sessionID:message:]


HMDBLEBroadcastEventKeyGeneration : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDAccessory *accessory
 @property  int reason

  // class methods
  +[HMDBLEBroadcastEventKeyGeneration initialize]
  +[HMDBLEBroadcastEventKeyGeneration uuid]
  +[HMDBLEBroadcastEventKeyGeneration broadcastKeyGenerationEventForAccessory:reason:]

  // instance methods
  -[HMDBLEBroadcastEventKeyGeneration .cxx_destruct]
  -[HMDBLEBroadcastEventKeyGeneration accessory]
  -[HMDBLEBroadcastEventKeyGeneration reason]
  -[HMDBLEBroadcastEventKeyGeneration AWDMessageType]
  -[HMDBLEBroadcastEventKeyGeneration metricForAWD]
  -[HMDBLEBroadcastEventKeyGeneration initBroadcastKeyGenerationEventForAccessory:reason:]


HMDSoftwareUpdateAutomaticUpdateToggledEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL enabled

  // class methods
  +[HMDSoftwareUpdateAutomaticUpdateToggledEvent initialize]
  +[HMDSoftwareUpdateAutomaticUpdateToggledEvent uuid]
  +[HMDSoftwareUpdateAutomaticUpdateToggledEvent eventWithAutomaticUpdateEnabled:]

  // instance methods
  -[HMDSoftwareUpdateAutomaticUpdateToggledEvent isEnabled]
  -[HMDSoftwareUpdateAutomaticUpdateToggledEvent setEnabled:]
  -[HMDSoftwareUpdateAutomaticUpdateToggledEvent AWDMessageType]
  -[HMDSoftwareUpdateAutomaticUpdateToggledEvent metricForAWD]


HMDCloudPairedMetadata : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDNetworkRouterFirewallRuleAccessoryIdentifier *baseAccessoryIdentifier
 @property  NSArray *versionConfigurations
 @property  NSDictionary *prettyJSONDictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCloudPairedMetadata logCategory]
  +[HMDCloudPairedMetadata __decodeVersionConfigurationWithVersionString:versionConfigurationValue:baseAccessoryIdentifier:]
  +[HMDCloudPairedMetadata _decodeVersionConfigurationsFromJSONDictionary:baseAccessoryIdentifier:allowUnzippedData:]

  // instance methods
  -[HMDCloudPairedMetadata attributeDescriptions]
  -[HMDCloudPairedMetadata .cxx_destruct]
  -[HMDCloudPairedMetadata prettyJSONDictionary]
  -[HMDCloudPairedMetadata initWithBaseAccessoryIdentifier:data:]
  -[HMDCloudPairedMetadata initWithBaseAccessoryIdentifier:data:allowUnzippedData:]
  -[HMDCloudPairedMetadata baseAccessoryIdentifier]
  -[HMDCloudPairedMetadata versionConfigurations]
  -[HMDCloudPairedMetadata initWithBaseAccessoryIdentifier:versionConfigurations:]


AWDHomeKitBackingStoreCKOperationZoneCompletionEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDidSucceed
 @property  BOOL didSucceed
 @property  BOOL hasErrorCode
 @property  long long errorCode
 @property  BOOL hasContainerType
 @property  int containerType
 @property  BOOL hasZoneType
 @property  int zoneType
 @property  BOOL hasErrorDomain
 @property  NSString *errorDomain

  // instance methods
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setErrorCode:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent copyWithZone:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent hasErrorCode]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent containerType]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setContainerType:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent errorCode]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setHasErrorCode:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setErrorDomain:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent errorDomain]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent hasErrorDomain]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent .cxx_destruct]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setHasContainerType:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent containerTypeAsString:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent StringAsContainerType:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent timestamp]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setTimestamp:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setDidSucceed:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setHasTimestamp:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent readFrom:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent writeTo:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent isEqual:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent copyTo:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent dictionaryRepresentation]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent mergeFrom:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent hasTimestamp]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent didSucceed]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent hasContainerType]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent zoneType]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setHasDidSucceed:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent hasDidSucceed]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setZoneType:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent setHasZoneType:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent hasZoneType]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent zoneTypeAsString:]
  -[AWDHomeKitBackingStoreCKOperationZoneCompletionEvent StringAsZoneType:]


HMDVendorDataManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSURLSession *urlSession
 @property  HMFTimer *fetchTimer
 @property  NSURL *urlForBundledPlist
 @property  NSURL *urlForBundledInternalPlist
 @property  long long dataVersion
 @property  NSDictionary *collectionsByManufacturer
 @property  NSDictionary *entriesByProductData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDVendorDataManager dbURL]
  +[HMDVendorDataManager logCategory]
  +[HMDVendorDataManager sharedVendorDataManager]

  // instance methods
  -[HMDVendorDataManager _start]
  -[HMDVendorDataManager timerDidFire:]
  -[HMDVendorDataManager urlSession]
  -[HMDVendorDataManager dataVersion]
  -[HMDVendorDataManager init]
  -[HMDVendorDataManager .cxx_destruct]
  -[HMDVendorDataManager workQueue]
  -[HMDVendorDataManager initWithDefaults]
  -[HMDVendorDataManager setDataVersion:]
  -[HMDVendorDataManager vendorModelEntryForProductData:]
  -[HMDVendorDataManager vendorModelEntryForManufacturer:model:]
  -[HMDVendorDataManager initWithWorkQueue:urlSession:fetchTimer:]
  -[HMDVendorDataManager _loadDatabaseFromLocalFiles]
  -[HMDVendorDataManager collectionsByManufacturer]
  -[HMDVendorDataManager entriesByProductData]
  -[HMDVendorDataManager _parseDatabaseFromDictionary:dataVersion:collectionsByManufacturer:entriesByProductData:]
  -[HMDVendorDataManager setCollectionsByManufacturer:]
  -[HMDVendorDataManager setEntriesByProductData:]
  -[HMDVendorDataManager _loadDatabaseFromDictionary:]
  -[HMDVendorDataManager _loadDatabaseFromFileURL:fileDescription:]
  -[HMDVendorDataManager _loadDatabaseFromFilePath:fileDescription:]
  -[HMDVendorDataManager urlForBundledInternalPlist]
  -[HMDVendorDataManager urlForBundledPlist]
  -[HMDVendorDataManager fetchTimer]
  -[HMDVendorDataManager _fetchDataFromServer]
  -[HMDVendorDataManager _handleServerResponse:withData:error:]
  -[HMDVendorDataManager _handleDataFromServer:]
  -[HMDVendorDataManager _parseManufacturersList:collectionsByManufacturer:entriesByProductData:]
  -[HMDVendorDataManager _modelsStringForManufacturer:model:dictionary:key:]
  -[HMDVendorDataManager _parseVendorModelEntryForManufacturer:model:dictionary:]


HMDTimeEvent : HMDEvent <NSSecureCoding, HMFDumpState, HMFLogging, HMDHomeMessageReceiver>
 @property  BOOL repetitive
 @property  HMDBackgroundTaskAgentTimer *btaTimer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDTimeEvent supportsSecureCoding]
  +[HMDTimeEvent isValidAbsoluteDateComponents:]
  +[HMDTimeEvent isValidOffsetDateComponents:]

  // instance methods
  -[HMDTimeEvent .cxx_destruct]
  -[HMDTimeEvent encodeWithCoder:]
  -[HMDTimeEvent timerFired:]
  -[HMDTimeEvent isActive]
  -[HMDTimeEvent initWithCoder:]
  -[HMDTimeEvent _initialize]
  -[HMDTimeEvent _activate:completionHandler:]
  -[HMDTimeEvent initWithModel:home:]
  -[HMDTimeEvent _nextTimerDate]
  -[HMDTimeEvent _updateRepetitive]
  -[HMDTimeEvent btaTimer]
  -[HMDTimeEvent repetitive]
  -[HMDTimeEvent _reactivateTriggerAfterDelay]


HMDWatchSystemState : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSHashTable *watchSystemStateDelegates
 @property  BOOL companionReachable

  // class methods
  +[HMDWatchSystemState sharedState]

  // instance methods
  -[HMDWatchSystemState init]
  -[HMDWatchSystemState .cxx_destruct]
  -[HMDWatchSystemState registerDelegate:]
  -[HMDWatchSystemState isCompanionReachable]
  -[HMDWatchSystemState newIncomingMessageFromClient]
  -[HMDWatchSystemState _callDidUpdateReachabilityChangeForCompanion:forDelegate:]
  -[HMDWatchSystemState watchSystemStateDelegates]
  -[HMDWatchSystemState _callDidReceiveNewIncomingMessageForDelegate:]
  -[HMDWatchSystemState setCompanionReachable:]


AWDHomeKitAccessoryPairing : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  BOOL hasErrorCode
 @property  int errorCode
 @property  BOOL hasIsAdd
 @property  BOOL isAdd
 @property  BOOL hasIsAddedViaWAC
 @property  BOOL isAddedViaWAC
 @property  BOOL hasTransportType
 @property  int transportType
 @property  BOOL hasVendorDetails
 @property  AWDHomeKitVendorInformation *vendorDetails
 @property  BOOL hasCertified
 @property  int certified
 @property  BOOL hasIsSecureWAC
 @property  BOOL isSecureWAC
 @property  BOOL hasRetryCount
 @property  unsigned int retryCount
 @property  BOOL hasCredentialType
 @property  int credentialType
 @property  BOOL hasIsAddWithOwnershipProof
 @property  BOOL isAddWithOwnershipProof
 @property  BOOL hasIsNetworkRouterAdd
 @property  BOOL isNetworkRouterAdd
 @property  BOOL hasIsNetworkRouterReplace
 @property  BOOL isNetworkRouterReplace
 @property  BOOL hasAppIdentifier
 @property  NSString *appIdentifier
 @property  BOOL hasIsFirstHAPAccessoryInAnyHome
 @property  BOOL isFirstHAPAccessoryInAnyHome
 @property  BOOL hasIsFirstHAPAccessoryInHome
 @property  BOOL isFirstHAPAccessoryInHome
 @property  BOOL hasIsNoeAccessory
 @property  BOOL isNoeAccessory
 @property  BOOL hasNoeCapabilities
 @property  unsigned int noeCapabilities
 @property  BOOL hasNoeStatus
 @property  unsigned int noeStatus
 @property  BOOL hasIsBTOnboard
 @property  BOOL isBTOnboard
 @property  BOOL hasIsNoeOnboard
 @property  BOOL isNoeOnboard
 @property  BOOL hasNoeOnboardDuration
 @property  unsigned int noeOnboardDuration
 @property  BOOL hasNoeOnboardErrorCode
 @property  int noeOnboardErrorCode
 @property  BOOL hasNoeOnboardErrorDomain
 @property  NSString *noeOnboardErrorDomain
 @property  BOOL hasErrorDomain
 @property  NSString *errorDomain

  // instance methods
  -[AWDHomeKitAccessoryPairing setErrorCode:]
  -[AWDHomeKitAccessoryPairing setRetryCount:]
  -[AWDHomeKitAccessoryPairing copyWithZone:]
  -[AWDHomeKitAccessoryPairing hasErrorCode]
  -[AWDHomeKitAccessoryPairing setAppIdentifier:]
  -[AWDHomeKitAccessoryPairing appIdentifier]
  -[AWDHomeKitAccessoryPairing hasAppIdentifier]
  -[AWDHomeKitAccessoryPairing transportTypeAsString:]
  -[AWDHomeKitAccessoryPairing isAdd]
  -[AWDHomeKitAccessoryPairing errorCode]
  -[AWDHomeKitAccessoryPairing setHasErrorCode:]
  -[AWDHomeKitAccessoryPairing retryCount]
  -[AWDHomeKitAccessoryPairing setErrorDomain:]
  -[AWDHomeKitAccessoryPairing errorDomain]
  -[AWDHomeKitAccessoryPairing hasErrorDomain]
  -[AWDHomeKitAccessoryPairing .cxx_destruct]
  -[AWDHomeKitAccessoryPairing setHasTransportType:]
  -[AWDHomeKitAccessoryPairing timestamp]
  -[AWDHomeKitAccessoryPairing setTimestamp:]
  -[AWDHomeKitAccessoryPairing credentialType]
  -[AWDHomeKitAccessoryPairing transportType]
  -[AWDHomeKitAccessoryPairing hasCredentialType]
  -[AWDHomeKitAccessoryPairing setHasDuration:]
  -[AWDHomeKitAccessoryPairing setHasTimestamp:]
  -[AWDHomeKitAccessoryPairing setCredentialType:]
  -[AWDHomeKitAccessoryPairing readFrom:]
  -[AWDHomeKitAccessoryPairing writeTo:]
  -[AWDHomeKitAccessoryPairing isEqual:]
  -[AWDHomeKitAccessoryPairing StringAsTransportType:]
  -[AWDHomeKitAccessoryPairing setDuration:]
  -[AWDHomeKitAccessoryPairing hasTransportType]
  -[AWDHomeKitAccessoryPairing copyTo:]
  -[AWDHomeKitAccessoryPairing dictionaryRepresentation]
  -[AWDHomeKitAccessoryPairing hasDuration]
  -[AWDHomeKitAccessoryPairing mergeFrom:]
  -[AWDHomeKitAccessoryPairing hasTimestamp]
  -[AWDHomeKitAccessoryPairing setTransportType:]
  -[AWDHomeKitAccessoryPairing setHasRetryCount:]
  -[AWDHomeKitAccessoryPairing hasRetryCount]
  -[AWDHomeKitAccessoryPairing duration]
  -[AWDHomeKitAccessoryPairing vendorDetails]
  -[AWDHomeKitAccessoryPairing setVendorDetails:]
  -[AWDHomeKitAccessoryPairing hasVendorDetails]
  -[AWDHomeKitAccessoryPairing certified]
  -[AWDHomeKitAccessoryPairing setCertified:]
  -[AWDHomeKitAccessoryPairing setHasCertified:]
  -[AWDHomeKitAccessoryPairing hasCertified]
  -[AWDHomeKitAccessoryPairing certifiedAsString:]
  -[AWDHomeKitAccessoryPairing StringAsCertified:]
  -[AWDHomeKitAccessoryPairing setIsNoeAccessory:]
  -[AWDHomeKitAccessoryPairing setHasIsNoeAccessory:]
  -[AWDHomeKitAccessoryPairing hasIsNoeAccessory]
  -[AWDHomeKitAccessoryPairing isNoeAccessory]
  -[AWDHomeKitAccessoryPairing isNetworkRouterAdd]
  -[AWDHomeKitAccessoryPairing isNetworkRouterReplace]
  -[AWDHomeKitAccessoryPairing isFirstHAPAccessoryInHome]
  -[AWDHomeKitAccessoryPairing isFirstHAPAccessoryInAnyHome]
  -[AWDHomeKitAccessoryPairing setNoeOnboardErrorDomain:]
  -[AWDHomeKitAccessoryPairing setIsAdd:]
  -[AWDHomeKitAccessoryPairing setHasIsAdd:]
  -[AWDHomeKitAccessoryPairing hasIsAdd]
  -[AWDHomeKitAccessoryPairing setIsAddedViaWAC:]
  -[AWDHomeKitAccessoryPairing setHasIsAddedViaWAC:]
  -[AWDHomeKitAccessoryPairing hasIsAddedViaWAC]
  -[AWDHomeKitAccessoryPairing setIsSecureWAC:]
  -[AWDHomeKitAccessoryPairing setHasIsSecureWAC:]
  -[AWDHomeKitAccessoryPairing hasIsSecureWAC]
  -[AWDHomeKitAccessoryPairing setHasCredentialType:]
  -[AWDHomeKitAccessoryPairing credentialTypeAsString:]
  -[AWDHomeKitAccessoryPairing StringAsCredentialType:]
  -[AWDHomeKitAccessoryPairing setIsAddWithOwnershipProof:]
  -[AWDHomeKitAccessoryPairing setHasIsAddWithOwnershipProof:]
  -[AWDHomeKitAccessoryPairing hasIsAddWithOwnershipProof]
  -[AWDHomeKitAccessoryPairing setIsNetworkRouterAdd:]
  -[AWDHomeKitAccessoryPairing setHasIsNetworkRouterAdd:]
  -[AWDHomeKitAccessoryPairing hasIsNetworkRouterAdd]
  -[AWDHomeKitAccessoryPairing setIsNetworkRouterReplace:]
  -[AWDHomeKitAccessoryPairing setHasIsNetworkRouterReplace:]
  -[AWDHomeKitAccessoryPairing hasIsNetworkRouterReplace]
  -[AWDHomeKitAccessoryPairing setIsFirstHAPAccessoryInAnyHome:]
  -[AWDHomeKitAccessoryPairing setHasIsFirstHAPAccessoryInAnyHome:]
  -[AWDHomeKitAccessoryPairing hasIsFirstHAPAccessoryInAnyHome]
  -[AWDHomeKitAccessoryPairing setIsFirstHAPAccessoryInHome:]
  -[AWDHomeKitAccessoryPairing setHasIsFirstHAPAccessoryInHome:]
  -[AWDHomeKitAccessoryPairing hasIsFirstHAPAccessoryInHome]
  -[AWDHomeKitAccessoryPairing setNoeCapabilities:]
  -[AWDHomeKitAccessoryPairing setHasNoeCapabilities:]
  -[AWDHomeKitAccessoryPairing hasNoeCapabilities]
  -[AWDHomeKitAccessoryPairing setNoeStatus:]
  -[AWDHomeKitAccessoryPairing setHasNoeStatus:]
  -[AWDHomeKitAccessoryPairing hasNoeStatus]
  -[AWDHomeKitAccessoryPairing setIsBTOnboard:]
  -[AWDHomeKitAccessoryPairing setHasIsBTOnboard:]
  -[AWDHomeKitAccessoryPairing hasIsBTOnboard]
  -[AWDHomeKitAccessoryPairing setIsNoeOnboard:]
  -[AWDHomeKitAccessoryPairing setHasIsNoeOnboard:]
  -[AWDHomeKitAccessoryPairing hasIsNoeOnboard]
  -[AWDHomeKitAccessoryPairing setNoeOnboardDuration:]
  -[AWDHomeKitAccessoryPairing setHasNoeOnboardDuration:]
  -[AWDHomeKitAccessoryPairing hasNoeOnboardDuration]
  -[AWDHomeKitAccessoryPairing setNoeOnboardErrorCode:]
  -[AWDHomeKitAccessoryPairing setHasNoeOnboardErrorCode:]
  -[AWDHomeKitAccessoryPairing hasNoeOnboardErrorCode]
  -[AWDHomeKitAccessoryPairing hasNoeOnboardErrorDomain]
  -[AWDHomeKitAccessoryPairing isAddedViaWAC]
  -[AWDHomeKitAccessoryPairing isSecureWAC]
  -[AWDHomeKitAccessoryPairing isAddWithOwnershipProof]
  -[AWDHomeKitAccessoryPairing noeCapabilities]
  -[AWDHomeKitAccessoryPairing noeStatus]
  -[AWDHomeKitAccessoryPairing isBTOnboard]
  -[AWDHomeKitAccessoryPairing isNoeOnboard]
  -[AWDHomeKitAccessoryPairing noeOnboardDuration]
  -[AWDHomeKitAccessoryPairing noeOnboardErrorCode]
  -[AWDHomeKitAccessoryPairing noeOnboardErrorDomain]


HMDNetworkRouterController : NSObject /usr/lib/libc++.1.dylib <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHAPAccessory *accessory
 @property  HMDService *routerService
 @property  NSString *wiFiSSID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterController logCategory]

  // instance methods
  -[HMDNetworkRouterController setWorkQueue:]
  -[HMDNetworkRouterController .cxx_destruct]
  -[HMDNetworkRouterController workQueue]
  -[HMDNetworkRouterController accessory]
  -[HMDNetworkRouterController isEqual:]
  -[HMDNetworkRouterController setAccessory:]
  -[HMDNetworkRouterController initWithAccessory:service:workQueue:]
  -[HMDNetworkRouterController wiFiSSID]
  -[HMDNetworkRouterController removeClientConfigurationWithClientIdentifier:completion:]
  -[HMDNetworkRouterController routerService]
  -[HMDNetworkRouterController _writeValueIfDifferent:characteristicType:operationName:completion:]
  -[HMDNetworkRouterController _writeTLVWithValueInResponse:characteristicType:operationName:completion:]
  -[HMDNetworkRouterController getClientStatusWithIdentifiers:completion:]
  -[HMDNetworkRouterController _writeClientConfigurationControlRequest:operationName:completion:]
  -[HMDNetworkRouterController _writeValue:forCharacteristic:completion:]
  -[HMDNetworkRouterController writeManagedNetworkEnable:completion:]
  -[HMDNetworkRouterController getClientStatusWithIdentifier:completion:]
  -[HMDNetworkRouterController addClientConfiguration:completion:]
  -[HMDNetworkRouterController readClientConfigurationWithClientIdentifier:completion:]
  -[HMDNetworkRouterController updateClientConfiguration:completion:]
  -[HMDNetworkRouterController getAccessViolationList:]
  -[HMDNetworkRouterController resetAccessViolationForClientIdentifier:completion:]
  -[HMDNetworkRouterController setRouterService:]


HMDCharacteristicEventBase : HMDEvent
 @property  HMDCharacteristic *characteristic
 @property  NSUUID *accessoryUUID
 @property  NSNumber *serviceID
 @property  NSNumber *characteristicInstanceID
 @property  id previousValue

  // class methods
  +[HMDCharacteristicEventBase supportsSecureCoding]
  +[HMDCharacteristicEventBase logCategory]
  +[HMDCharacteristicEventBase compareValueOfCharacteristic:againstValue:operatorType:]
  +[HMDCharacteristicEventBase lookForCharacteristicByAccessoryUUID:serviceID:characteristicID:inHome:checkForSupport:outError:]

  // instance methods
  -[HMDCharacteristicEventBase serviceID]
  -[HMDCharacteristicEventBase previousValue]
  -[HMDCharacteristicEventBase accessoryUUID]
  -[HMDCharacteristicEventBase .cxx_destruct]
  -[HMDCharacteristicEventBase setPreviousValue:]
  -[HMDCharacteristicEventBase encodeWithCoder:]
  -[HMDCharacteristicEventBase _registerForMessages]
  -[HMDCharacteristicEventBase isActive]
  -[HMDCharacteristicEventBase characteristic]
  -[HMDCharacteristicEventBase setCharacteristic:]
  -[HMDCharacteristicEventBase initWithCoder:]
  -[HMDCharacteristicEventBase _activate:completionHandler:]
  -[HMDCharacteristicEventBase createPayload]
  -[HMDCharacteristicEventBase initWithModel:home:]
  -[HMDCharacteristicEventBase _evaluateNewValue:]
  -[HMDCharacteristicEventBase characteristicInstanceID]
  -[HMDCharacteristicEventBase replaceCharacteristic:]
  -[HMDCharacteristicEventBase handleCharacteristicsChangedNotification:]
  -[HMDCharacteristicEventBase __handleCharacteristicsChangedPayload:]
  -[HMDCharacteristicEventBase fixCharacteristicInHome:]


HMDCharacteristicEventBaseModel : HMDEventModel
 @property  NSString *accessory
 @property  NSNumber *serviceID
 @property  NSNumber *characteristicID

  // class methods
  +[HMDCharacteristicEventBaseModel properties]
  +[HMDCharacteristicEventBaseModel eventModelWithDictionary:home:eventTriggerUUID:className:message:checkForSupport:outCharateristic:]

  // instance methods
  -[HMDCharacteristicEventBaseModel dependentUUIDs]


HMDCameraRecordingPreferredVideoConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSDictionary *bitRateByFrameRate
 @property  NSNumber *keyFrameInterval
 @property  long long resolution
 @property  long long h264Level

  // instance methods
  -[HMDCameraRecordingPreferredVideoConfiguration .cxx_destruct]
  -[HMDCameraRecordingPreferredVideoConfiguration resolution]
  -[HMDCameraRecordingPreferredVideoConfiguration keyFrameInterval]
  -[HMDCameraRecordingPreferredVideoConfiguration h264Level]
  -[HMDCameraRecordingPreferredVideoConfiguration bitRateByFrameRate]
  -[HMDCameraRecordingPreferredVideoConfiguration initWithResolution:bitRateByFrameRate:keyFrameInterval:h264Level:]


HMDCameraRecordingPreferredAudioConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *bitRate
 @property  long long sampleRate

  // instance methods
  -[HMDCameraRecordingPreferredAudioConfiguration .cxx_destruct]
  -[HMDCameraRecordingPreferredAudioConfiguration bitRate]
  -[HMDCameraRecordingPreferredAudioConfiguration sampleRate]
  -[HMDCameraRecordingPreferredAudioConfiguration initWithSampleRate:bitRate:]


HMDCameraRecordingSettingsControl : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHAPAccessory *accessory
 @property  HMDService *recordingService
 @property  NSDictionary *recordingConfigurationOverrides
 @property  HMDCameraRecordingGeneralConfiguration *supportedRecordingConfiguration
 @property  HMDCameraRecordingSupportedVideoConfiguration *supportedVideoConfiguration
 @property  HMDCameraRecordingSupportedAudioConfiguration *supportedAudioConfiguration
 @property  NSArray *videoConfigurationsByPreferenceOrder
 @property  NSDictionary *characteristicByType
 @property  BOOL configureCameraInProgress
 @property  BOOL canConfigureCameraForRecording
 @property  HMDCameraRecordingSelectedConfiguration *currentSelectedConfiguration
 @property  NSString *clientIdentifier
 @property  NSDate *configureStartDate
 @property  BOOL didTriggerABCForConfigure
 @property  NSNumber *configuredBitRate
 @property  NSNumber *configuredIFrameInterval
 @property  NSNumber *configuredImageWidth
 @property  NSNumber *configuredImageHeight
 @property  double configuredFragmentDuration
 @property  double configuredPrebufferDuration
 @property  BOOL cameraConfiguredForRecording
 @property  <HMDCameraRecordingSettingsControlDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraRecordingSettingsControl logCategory]
  +[HMDCameraRecordingSettingsControl isSupportedH264Profile:]
  +[HMDCameraRecordingSettingsControl isSupportedVideoCodec:]
  +[HMDCameraRecordingSettingsControl videoCodecForCodecConfiguration:]
  +[HMDCameraRecordingSettingsControl h264ProfileForCodecConfiguration:]
  +[HMDCameraRecordingSettingsControl isSupportedAudioCodec:]
  +[HMDCameraRecordingSettingsControl audioConfigurationsByPreferenceOrder]
  +[HMDCameraRecordingSettingsControl audioCodecForCodecConfiguration:]
  +[HMDCameraRecordingSettingsControl audioBitRateForCodecConfiguration:]

  // instance methods
  -[HMDCameraRecordingSettingsControl logIdentifier]
  -[HMDCameraRecordingSettingsControl clientIdentifier]
  -[HMDCameraRecordingSettingsControl handleCharacteristicValueUpdated:]
  -[HMDCameraRecordingSettingsControl dealloc]
  -[HMDCameraRecordingSettingsControl .cxx_destruct]
  -[HMDCameraRecordingSettingsControl workQueue]
  -[HMDCameraRecordingSettingsControl accessory]
  -[HMDCameraRecordingSettingsControl setDelegate:]
  -[HMDCameraRecordingSettingsControl delegate]
  -[HMDCameraRecordingSettingsControl start]
  -[HMDCameraRecordingSettingsControl handleAccessoryIsNotConfiguredError]
  -[HMDCameraRecordingSettingsControl configuredFragmentDuration]
  -[HMDCameraRecordingSettingsControl configuredPrebufferDuration]
  -[HMDCameraRecordingSettingsControl isCameraConfiguredForRecording]
  -[HMDCameraRecordingSettingsControl configureCameraRecordingSettings]
  -[HMDCameraRecordingSettingsControl configuredBitRate]
  -[HMDCameraRecordingSettingsControl configuredIFrameInterval]
  -[HMDCameraRecordingSettingsControl configuredImageWidth]
  -[HMDCameraRecordingSettingsControl configuredImageHeight]
  -[HMDCameraRecordingSettingsControl handleHomePersonManagerSettingsDidChangeNotification:]
  -[HMDCameraRecordingSettingsControl handleAccessoryConnected:]
  -[HMDCameraRecordingSettingsControl handleAccessoryDisconnected:]
  -[HMDCameraRecordingSettingsControl currentSelectedConfiguration]
  -[HMDCameraRecordingSettingsControl handleCharacteristicsUpdated:]
  -[HMDCameraRecordingSettingsControl handleCameraProfileSettingsDidWriteToAccessory:]
  -[HMDCameraRecordingSettingsControl updateCanConfigureCameraForRecording]
  -[HMDCameraRecordingSettingsControl setRecordingConfigurationOverrides:]
  -[HMDCameraRecordingSettingsControl recordingConfigurationOverrides]
  -[HMDCameraRecordingSettingsControl characteristicByType]
  -[HMDCameraRecordingSettingsControl reconfigureCameraRecordingSettingsWithReason:]
  -[HMDCameraRecordingSettingsControl supportedRecordingConfiguration]
  -[HMDCameraRecordingSettingsControl _preferredVideoConfigurationOverride]
  -[HMDCameraRecordingSettingsControl videoConfigurationsByPreferenceOrder]
  -[HMDCameraRecordingSettingsControl supportedVideoConfiguration]
  -[HMDCameraRecordingSettingsControl _preferredAudioConfigurationOverride]
  -[HMDCameraRecordingSettingsControl supportedAudioConfiguration]
  -[HMDCameraRecordingSettingsControl setCanConfigureCameraForRecording:]
  -[HMDCameraRecordingSettingsControl setCurrentSelectedConfiguration:]
  -[HMDCameraRecordingSettingsControl recordingService]
  -[HMDCameraRecordingSettingsControl setCharacteristicByType:]
  -[HMDCameraRecordingSettingsControl didTriggerABCForConfigure]
  -[HMDCameraRecordingSettingsControl configureStartDate]
  -[HMDCameraRecordingSettingsControl setDidTriggerABCForConfigure:]
  -[HMDCameraRecordingSettingsControl configureCameraInProgress]
  -[HMDCameraRecordingSettingsControl triggerABCForConfigure]
  -[HMDCameraRecordingSettingsControl setConfigureStartDate:]
  -[HMDCameraRecordingSettingsControl _configureCameraRecordingSettings]
  -[HMDCameraRecordingSettingsControl _readCameraRecordingSettings]
  -[HMDCameraRecordingSettingsControl canConfigureCameraForRecording]
  -[HMDCameraRecordingSettingsControl setConfigureCameraInProgress:]
  -[HMDCameraRecordingSettingsControl _readSupportedCameraRecordingConfiguration]
  -[HMDCameraRecordingSettingsControl _selectedConfigurationDidUpdateTo:]
  -[HMDCameraRecordingSettingsControl _readSelectedCameraRecordingConfiguration]
  -[HMDCameraRecordingSettingsControl _handleSelectedCameraRecordingConfigurationReadResponse:]
  -[HMDCameraRecordingSettingsControl _parseSelectedRecordingConfiguration:]
  -[HMDCameraRecordingSettingsControl _handleSupportedConfigurationCharacteristicsReadResponse:]
  -[HMDCameraRecordingSettingsControl _parseSupportedRecordingConfiguration:]
  -[HMDCameraRecordingSettingsControl setSupportedRecordingConfiguration:]
  -[HMDCameraRecordingSettingsControl _parseSupportedVideoConfiguration:]
  -[HMDCameraRecordingSettingsControl setSupportedVideoConfiguration:]
  -[HMDCameraRecordingSettingsControl _parseSupportedAudioConfiguration:]
  -[HMDCameraRecordingSettingsControl setSupportedAudioConfiguration:]
  -[HMDCameraRecordingSettingsControl _recordingGeneralConfiguration]
  -[HMDCameraRecordingSettingsControl _recordingVideoConfiguration]
  -[HMDCameraRecordingSettingsControl _recordingAudioConfiguration]
  -[HMDCameraRecordingSettingsControl _setSelectedRecordingConfiguration:]
  -[HMDCameraRecordingSettingsControl _parseResponse:forCharacteristicType:]
  -[HMDCameraRecordingSettingsControl initWithWorkQueue:accessory:recordingManagementService:]


HMDMPCSessionData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSSet *mediaProfiles
 @property  NSNumber *playbackStateNumber
 @property  NSNumber *playbackVolumeNumber
 @property  MPPlaybackArchive *playbackArchive
 @property  NSNumber *source

  // instance methods
  -[HMDMPCSessionData source]
  -[HMDMPCSessionData .cxx_destruct]
  -[HMDMPCSessionData mediaProfiles]
  -[HMDMPCSessionData playbackArchive]
  -[HMDMPCSessionData initWithMediaAction:source:]
  -[HMDMPCSessionData dictionaryRepresentation:]
  -[HMDMPCSessionData initWithDictionaryRepresentation:profileSource:]
  -[HMDMPCSessionData playbackStateNumber]
  -[HMDMPCSessionData initWithMediaProfiles:playbackState:playbackVolume:playbackArchive:source:]
  -[HMDMPCSessionData playbackVolumeNumber]


HMDLaunchHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *handlerQueue
 @property  NSMutableSet *registeredRelaunchClients
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDLaunchHandler logCategory]
  +[HMDLaunchHandler sharedHandler]
  +[HMDLaunchHandler _fileExistsAtPath:]
  +[HMDLaunchHandler relaunchPlistPath]
  +[HMDLaunchHandler _removeFileAtPath:error:]
  +[HMDLaunchHandler _writeDictionary:toFileURL:error:]
  +[HMDLaunchHandler _setJetsamPriorityUsingCommand:]

  // instance methods
  -[HMDLaunchHandler handlerQueue]
  -[HMDLaunchHandler init]
  -[HMDLaunchHandler .cxx_destruct]
  -[HMDLaunchHandler registerForRelaunch:]
  -[HMDLaunchHandler deregisterForRelaunch:]
  -[HMDLaunchHandler registeredRelaunchClients]
  -[HMDLaunchHandler _updateOrRemoveRelaunchPlist]
  -[HMDLaunchHandler _setJetsamPriorityElevated:]
  -[HMDLaunchHandler removePersistentRelaunchRegistrationsIfNecessary]


HMDXPCAccessMessageFilter : HMDXPCMessageFilter
  // class methods
  +[HMDXPCAccessMessageFilter policyClasses]

  // instance methods
  -[HMDXPCAccessMessageFilter acceptWithPolicies:error:]


HMDCameraRecordingReachabilityEventManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMBLocalZoneModelObserver, HMFTimerDelegate, HMFMessageReceiver, HMFLogging, HMDCameraClipManagerDelegate, HMFNetMonitorDelegate>
 @property  HMDHAPAccessory *hapAccessory
 @property  NSUUID *uniqueIdentifier
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDBulletinBoard *bulletinBoard
 @property  double initialReachabilityTimeout
 @property  double reachabilityChangeReachableDebounceTimeout
 @property  double reachabilityChangeUnreachableDebounceTimeout
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSHashTable *clientConnections
 @property  HMDLogEventDispatcher *logEventDispatcher
 @property  BOOL lastKnownCameraReachability
 @property  BOOL currentCameraReachability
 @property  BOOL currentDeviceConfirmedPrimaryResident
 @property  BOOL currentDeviceConnectedToNetwork
 @property  unsigned long reachabilityChangeDebounceCount
 @property  _HMCameraUserSettings *currentSettings
 @property  HMDCameraRecordingReachabilityEventModel *mostRecentReachabilityEventModel
 @property  HMBLocalZone *localZone
 @property  HMBCloudZone *cloudZone
 @property  HMFTimer *initialReachabilityTimer
 @property  HMFTimer *reachabilityChangeDebounceTimer
 @property  NSDate *reachabilityChangeDebounceStartDate
 @property  @? initialReachabilityTimerFactory
 @property  @? reachabilityChangeDebounceTimerFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDCameraRecordingReachabilityEventManager logCategory]

  // instance methods
  -[HMDCameraRecordingReachabilityEventManager messageTargetUUID]
  -[HMDCameraRecordingReachabilityEventManager messageReceiveQueue]
  -[HMDCameraRecordingReachabilityEventManager timerDidFire:]
  -[HMDCameraRecordingReachabilityEventManager logIdentifier]
  -[HMDCameraRecordingReachabilityEventManager setClientConnections:]
  -[HMDCameraRecordingReachabilityEventManager .cxx_destruct]
  -[HMDCameraRecordingReachabilityEventManager workQueue]
  -[HMDCameraRecordingReachabilityEventManager uniqueIdentifier]
  -[HMDCameraRecordingReachabilityEventManager localZone]
  -[HMDCameraRecordingReachabilityEventManager messageDispatcher]
  -[HMDCameraRecordingReachabilityEventManager currentSettings]
  -[HMDCameraRecordingReachabilityEventManager clientConnections]
  -[HMDCameraRecordingReachabilityEventManager cloudZone]
  -[HMDCameraRecordingReachabilityEventManager setCloudZone:]
  -[HMDCameraRecordingReachabilityEventManager localZone:didProcessModelDeletion:]
  -[HMDCameraRecordingReachabilityEventManager localZone:didProcessModelCreation:]
  -[HMDCameraRecordingReachabilityEventManager localZone:didProcessModelUpdate:]
  -[HMDCameraRecordingReachabilityEventManager setLocalZone:]
  -[HMDCameraRecordingReachabilityEventManager hapAccessory]
  -[HMDCameraRecordingReachabilityEventManager isCurrentDeviceConfirmedPrimaryResident]
  -[HMDCameraRecordingReachabilityEventManager clipManagerDidStart:]
  -[HMDCameraRecordingReachabilityEventManager clipManagerDidStop:]
  -[HMDCameraRecordingReachabilityEventManager setMessageDispatcher:]
  -[HMDCameraRecordingReachabilityEventManager logEventDispatcher]
  -[HMDCameraRecordingReachabilityEventManager reachabilityChangeDebounceCount]
  -[HMDCameraRecordingReachabilityEventManager setLogEventDispatcher:]
  -[HMDCameraRecordingReachabilityEventManager handleAccessoryConnected:]
  -[HMDCameraRecordingReachabilityEventManager handleAccessoryDisconnected:]
  -[HMDCameraRecordingReachabilityEventManager handleResidentDeviceUpdated:]
  -[HMDCameraRecordingReachabilityEventManager initWithHAPAccessory:workQueue:]
  -[HMDCameraRecordingReachabilityEventManager networkMonitorIsReachable:]
  -[HMDCameraRecordingReachabilityEventManager networkMonitorIsUnreachable:]
  -[HMDCameraRecordingReachabilityEventManager bulletinBoard]
  -[HMDCameraRecordingReachabilityEventManager initWithAccessory:workQueue:identifier:bulletinBoard:logEventDispatcher:]
  -[HMDCameraRecordingReachabilityEventManager setCurrentDeviceConfirmedPrimaryResident:]
  -[HMDCameraRecordingReachabilityEventManager handleRemoteCameraReachabilityChange:]
  -[HMDCameraRecordingReachabilityEventManager handleFetchEventsMessage:]
  -[HMDCameraRecordingReachabilityEventManager handleFetchCountOfEventsMessage:]
  -[HMDCameraRecordingReachabilityEventManager handleSubscribeMessage:]
  -[HMDCameraRecordingReachabilityEventManager handleUnsubscribeMessage:]
  -[HMDCameraRecordingReachabilityEventManager handlePerformCloudPullMessage:]
  -[HMDCameraRecordingReachabilityEventManager handleDeleteAllEventsMessage:]
  -[HMDCameraRecordingReachabilityEventManager handleCameraProfileSettingsDidChange:]
  -[HMDCameraRecordingReachabilityEventManager fetchReachabilityEventsWithDateInterval:]
  -[HMDCameraRecordingReachabilityEventManager handleHAPNotificationPingSucceededAccessoryReachable:]
  -[HMDCameraRecordingReachabilityEventManager handleHAPNotificationPingFailedAccessoryNotReachable:]
  -[HMDCameraRecordingReachabilityEventManager startInitialReachabilityTimer]
  -[HMDCameraRecordingReachabilityEventManager setInitialReachabilityTimer:]
  -[HMDCameraRecordingReachabilityEventManager setReachabilityChangeDebounceTimer:]
  -[HMDCameraRecordingReachabilityEventManager initialReachabilityTimer]
  -[HMDCameraRecordingReachabilityEventManager isCurrentDeviceConnectedToNetwork]
  -[HMDCameraRecordingReachabilityEventManager setCurrentCameraReachability:]
  -[HMDCameraRecordingReachabilityEventManager setReachabilityChangeDebounceCount:]
  -[HMDCameraRecordingReachabilityEventManager reachabilityChangeDebounceTimer]
  -[HMDCameraRecordingReachabilityEventManager startReachabilityChangeDebounceTimerWithReachability:]
  -[HMDCameraRecordingReachabilityEventManager currentCameraReachability]
  -[HMDCameraRecordingReachabilityEventManager performCloudPullWithLabel:]
  -[HMDCameraRecordingReachabilityEventManager shouldAddInitialReachabilityEventForCurrentCameraReachability:]
  -[HMDCameraRecordingReachabilityEventManager addCameraReachabilityEventForCurrentCameraReachability:dateOfOccurrence:]
  -[HMDCameraRecordingReachabilityEventManager setMostRecentReachabilityEventModel:]
  -[HMDCameraRecordingReachabilityEventManager reachabilityEventModelForCurrentCameraReachability:dateOfOccurrence:]
  -[HMDCameraRecordingReachabilityEventManager notifySubscribersOfRemoteCameraReachabilityEvent]
  -[HMDCameraRecordingReachabilityEventManager submitLogEventWithCurrentModel:]
  -[HMDCameraRecordingReachabilityEventManager mostRecentReachabilityEventModel]
  -[HMDCameraRecordingReachabilityEventManager initialReachabilityTimerFactory]
  -[HMDCameraRecordingReachabilityEventManager initialReachabilityTimeout]
  -[HMDCameraRecordingReachabilityEventManager reachabilityChangeDebounceTimerFactory]
  -[HMDCameraRecordingReachabilityEventManager reachabilityChangeReachableDebounceTimeout]
  -[HMDCameraRecordingReachabilityEventManager reachabilityChangeUnreachableDebounceTimeout]
  -[HMDCameraRecordingReachabilityEventManager setReachabilityChangeDebounceStartDate:]
  -[HMDCameraRecordingReachabilityEventManager setCurrentSettings:]
  -[HMDCameraRecordingReachabilityEventManager setLastKnownCameraReachability:]
  -[HMDCameraRecordingReachabilityEventManager handleUpdatedCameraReachability:]
  -[HMDCameraRecordingReachabilityEventManager notifyTransportOfUpdatedEvents:removedEventUUIDs:]
  -[HMDCameraRecordingReachabilityEventManager cleanUpEvents]
  -[HMDCameraRecordingReachabilityEventManager setCurrentDeviceConnectedToNetwork:]
  -[HMDCameraRecordingReachabilityEventManager handleInitialCameraReachability]
  -[HMDCameraRecordingReachabilityEventManager lastKnownCameraReachability]
  -[HMDCameraRecordingReachabilityEventManager reachabilityChangeDebounceStartDate]
  -[HMDCameraRecordingReachabilityEventManager configureWithMessageDispatcher:isCurrentDeviceConfirmedPrimaryResident:]
  -[HMDCameraRecordingReachabilityEventManager setInitialReachabilityTimerFactory:]
  -[HMDCameraRecordingReachabilityEventManager setReachabilityChangeDebounceTimerFactory:]


HMDLogEventProcessLaunchAnalyzerContext : HMDLogEventAnalyzerContext <HMDLogEventProcessLaunchAnalyzerContext>
 @property  HMFTimer *submitProcessLaunchInfoTimer
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDLogEventDispatcher *logEventDispatcher
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDLogEventProcessLaunchAnalyzerContext .cxx_destruct]
  -[HMDLogEventProcessLaunchAnalyzerContext initWithWorkQueue:processLaunchInfoTimer:]
  -[HMDLogEventProcessLaunchAnalyzerContext fetchJetsamSnapshot]
  -[HMDLogEventProcessLaunchAnalyzerContext submitProcessLaunchInfoTimer]


HMDLogEventProcessLaunchAnalyzer : HMDLogEventAnalyzer <HMFTimerDelegate>
 @property  double processRelaunchEventTimeIntervalThreshold
 @property  <HMDLogEventProcessLaunchAnalyzerContext> *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDLogEventProcessLaunchAnalyzer timerDidFire:]
  -[HMDLogEventProcessLaunchAnalyzer .cxx_destruct]
  -[HMDLogEventProcessLaunchAnalyzer processLogEvent:]
  -[HMDLogEventProcessLaunchAnalyzer initWithSupportedEventTypes:context:]
  -[HMDLogEventProcessLaunchAnalyzer _handleDataSyncStateUpdateLogEvent:]
  -[HMDLogEventProcessLaunchAnalyzer _handleProcessLaunchLogEvent:]
  -[HMDLogEventProcessLaunchAnalyzer _updateProcessLaunchInfoFromDisk]
  -[HMDLogEventProcessLaunchAnalyzer _readJetsamSnapshotEntryForHomed]
  -[HMDLogEventProcessLaunchAnalyzer processRelaunchEventTimeIntervalThreshold]


HMDAsset : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSString *identifier
 @property  NSDictionary *metadata
 @property  NSURL *resourceURL
 @property  NSDictionary *dictionaryRepresentation

  // class methods
  +[HMDAsset supportsSecureCoding]

  // instance methods
  -[HMDAsset initWithIdentifier:metadata:resourceURL:]
  -[HMDAsset .cxx_destruct]
  -[HMDAsset encodeWithCoder:]
  -[HMDAsset identifier]
  -[HMDAsset resourceURL]
  -[HMDAsset isEqual:]
  -[HMDAsset dictionaryRepresentation]
  -[HMDAsset metadata]
  -[HMDAsset initWithCoder:]


HMDRemoteDestinationFormatter : NSFormatter /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
  // class methods
  +[HMDRemoteDestinationFormatter defaultFormatter]

  // instance methods
  -[HMDRemoteDestinationFormatter stringForObjectValue:]
  -[HMDRemoteDestinationFormatter getObjectValue:forString:errorDescription:]


HMDHomePersonDataManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *homeUUID
 @property  HMDHome *home
 @property  HMDHomePersonManager *personManager
 @property  @? personManagerFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDHomePersonDataManager logCategory]

  // instance methods
  -[HMDHomePersonDataManager messageTargetUUID]
  -[HMDHomePersonDataManager messageReceiveQueue]
  -[HMDHomePersonDataManager configure]
  -[HMDHomePersonDataManager logIdentifier]
  -[HMDHomePersonDataManager .cxx_destruct]
  -[HMDHomePersonDataManager workQueue]
  -[HMDHomePersonDataManager setHome:]
  -[HMDHomePersonDataManager personManager]
  -[HMDHomePersonDataManager setPersonManager:]
  -[HMDHomePersonDataManager home]
  -[HMDHomePersonDataManager homeUUID]
  -[HMDHomePersonDataManager removeCloudData]
  -[HMDHomePersonDataManager handleUpdatedSettingsModel:previousSettingsModel:message:]
  -[HMDHomePersonDataManager initWithHome:workQueue:]
  -[HMDHomePersonDataManager updateSettingsModelWithSettings:]
  -[HMDHomePersonDataManager handleFetchSettingsMessage:]
  -[HMDHomePersonDataManager personManagerFactory]
  -[HMDHomePersonDataManager setPersonManagerFactory:]
  -[HMDHomePersonDataManager handleUpdateSettingsMessage:]
  -[HMDHomePersonDataManager configurePersonManager]


HMDEventTriggerUserConfirmationSession : HMDEventTriggerSession <HMFDumpState, HMFLogging, HMFTimerDelegate, HMDHomeMessageReceiver>
 @property  HMDEventTriggerExecutionSession *executionSession
 @property  HMDEventTriggerDevice *requestingDevice
 @property  HMDTriggerConfirmationTimer *userResponseTimer
 @property  HomeKitEventTriggerUserConfirmationReceiverSessionLogEvent *analyticsEvent
 @property  NSMutableArray *analyticsSendEvents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDEventTriggerUserConfirmationSession logCategory]

  // instance methods
  -[HMDEventTriggerUserConfirmationSession timerDidFire:]
  -[HMDEventTriggerUserConfirmationSession dealloc]
  -[HMDEventTriggerUserConfirmationSession .cxx_destruct]
  -[HMDEventTriggerUserConfirmationSession _registerForMessages]
  -[HMDEventTriggerUserConfirmationSession setAnalyticsEvent:]
  -[HMDEventTriggerUserConfirmationSession analyticsEvent]
  -[HMDEventTriggerUserConfirmationSession _sessionComplete]
  -[HMDEventTriggerUserConfirmationSession userDidConfirmExecute:completionHandler:]
  -[HMDEventTriggerUserConfirmationSession setExecutionSession:]
  -[HMDEventTriggerUserConfirmationSession executionSession]
  -[HMDEventTriggerUserConfirmationSession initWithSessionID:eventTrigger:workQueue:msgDispatcher:requestingDevice:]
  -[HMDEventTriggerUserConfirmationSession createBulletinNotification]
  -[HMDEventTriggerUserConfirmationSession analyticsSendEvents]
  -[HMDEventTriggerUserConfirmationSession _handleUserPermissionRemoveDialogRequest:]
  -[HMDEventTriggerUserConfirmationSession _handleUserPermissionRemoteResponse:]
  -[HMDEventTriggerUserConfirmationSession _createBulletinNotification]
  -[HMDEventTriggerUserConfirmationSession _askForUserPermissionFromDevice:executionSessionID:]
  -[HMDEventTriggerUserConfirmationSession setUserResponseTimer:]
  -[HMDEventTriggerUserConfirmationSession userResponseTimer]
  -[HMDEventTriggerUserConfirmationSession _userResponse:completionHandler:]
  -[HMDEventTriggerUserConfirmationSession requestingDevice]
  -[HMDEventTriggerUserConfirmationSession askForUserPermission:]
  -[HMDEventTriggerUserConfirmationSession _removeUserDialog:]
  -[HMDEventTriggerUserConfirmationSession setAnalyticsSendEvents:]


HMDNetworkRouterFirewallRuleICMPType : NSObject /usr/lib/libc++.1.dylib
 @property  unsigned char protocol
 @property  NSNumber *typeValue
 @property  NSDictionary *prettyJSONDictionary
 @property  NSDictionary *jsonDictionary

  // class methods
  +[HMDNetworkRouterFirewallRuleICMPType createWithJSONDictionary:]
  +[HMDNetworkRouterFirewallRuleICMPType createListWithJSONDictionary:key:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleICMPType protocol]
  -[HMDNetworkRouterFirewallRuleICMPType .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleICMPType typeValue]
  -[HMDNetworkRouterFirewallRuleICMPType jsonDictionary]
  -[HMDNetworkRouterFirewallRuleICMPType prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRuleICMPType initWithJSONDictionary:protocol:typeValue:]


HMDRelayAccessTokenModel : HMDBackingStoreModelObject
 @property  NSString *accessoryIdentifier
 @property  NSData *accessToken

  // class methods
  +[HMDRelayAccessTokenModel properties]

  // instance methods
  -[HMDRelayAccessTokenModel dependentUUIDs]


HMDBackingStoreOperation : NSOperation /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 @property  HMDBackingStore *store
 @property  @? resultBlock
 @property  NSUUID *operationUUID

  // instance methods
  -[HMDBackingStoreOperation setStore:]
  -[HMDBackingStoreOperation init]
  -[HMDBackingStoreOperation store]
  -[HMDBackingStoreOperation main]
  -[HMDBackingStoreOperation .cxx_destruct]
  -[HMDBackingStoreOperation resultBlock]
  -[HMDBackingStoreOperation setResultBlock:]
  -[HMDBackingStoreOperation operationUUID]
  -[HMDBackingStoreOperation initWithResultBlock:]
  -[HMDBackingStoreOperation mainReturningError]


HMDBackingStoreLogAddTransactionOperation : HMDBackingStoreOperation
 @property  HMDBackingStoreTransactionBlock *transaction
 @property  long long pushFlags

  // instance methods
  -[HMDBackingStoreLogAddTransactionOperation initWithTransaction:]
  -[HMDBackingStoreLogAddTransactionOperation setTransaction:]
  -[HMDBackingStoreLogAddTransactionOperation transaction]
  -[HMDBackingStoreLogAddTransactionOperation .cxx_destruct]
  -[HMDBackingStoreLogAddTransactionOperation pushFlags]
  -[HMDBackingStoreLogAddTransactionOperation setPushFlags:]
  -[HMDBackingStoreLogAddTransactionOperation mainReturningError]


HMDBackingStoreLogFetchOperation : HMDBackingStoreOperation
 @property  @? fetchBlock
 @property  id sentinal
 @property  long long maskValue
 @property  long long compareValue

  // instance methods
  -[HMDBackingStoreLogFetchOperation .cxx_destruct]
  -[HMDBackingStoreLogFetchOperation fetchBlock]
  -[HMDBackingStoreLogFetchOperation initWithNeedsPushTo:result:]
  -[HMDBackingStoreLogFetchOperation mainReturningError]
  -[HMDBackingStoreLogFetchOperation initWithSentinal:needsPushTo:fetchResult:]
  -[HMDBackingStoreLogFetchOperation initWithSentinal:mask:compare:fetchResult:]
  -[HMDBackingStoreLogFetchOperation initWithSentinal:alreadyPushedTo:fetchResult:]
  -[HMDBackingStoreLogFetchOperation sentinal]
  -[HMDBackingStoreLogFetchOperation maskValue]
  -[HMDBackingStoreLogFetchOperation compareValue]
  -[HMDBackingStoreLogFetchOperation initWithAlreadyPushedTo:result:]
  -[HMDBackingStoreLogFetchOperation setFetchBlock:]
  -[HMDBackingStoreLogFetchOperation setSentinal:]
  -[HMDBackingStoreLogFetchOperation setMaskValue:]
  -[HMDBackingStoreLogFetchOperation setCompareValue:]


HMDBackingStoreLogChangesExistFetchOperation : HMDBackingStoreOperation
 @property  @? fetchBlock
 @property  long long maskValue
 @property  long long compareValue

  // instance methods
  -[HMDBackingStoreLogChangesExistFetchOperation .cxx_destruct]
  -[HMDBackingStoreLogChangesExistFetchOperation fetchBlock]
  -[HMDBackingStoreLogChangesExistFetchOperation initWithNeedsPushTo:result:]
  -[HMDBackingStoreLogChangesExistFetchOperation mainReturningError]
  -[HMDBackingStoreLogChangesExistFetchOperation maskValue]
  -[HMDBackingStoreLogChangesExistFetchOperation compareValue]
  -[HMDBackingStoreLogChangesExistFetchOperation setFetchBlock:]
  -[HMDBackingStoreLogChangesExistFetchOperation setMaskValue:]
  -[HMDBackingStoreLogChangesExistFetchOperation setCompareValue:]


HMDBackingStoreLogUpdateOperation : HMDBackingStoreOperation
 @property  NSArray *values
 @property  long long maskValue
 @property  long long setValue

  // instance methods
  -[HMDBackingStoreLogUpdateOperation setValue]
  -[HMDBackingStoreLogUpdateOperation setValues:]
  -[HMDBackingStoreLogUpdateOperation values]
  -[HMDBackingStoreLogUpdateOperation setSetValue:]
  -[HMDBackingStoreLogUpdateOperation .cxx_destruct]
  -[HMDBackingStoreLogUpdateOperation initWithRowIDs:successfullyPushedTo:]
  -[HMDBackingStoreLogUpdateOperation mainReturningError]
  -[HMDBackingStoreLogUpdateOperation maskValue]
  -[HMDBackingStoreLogUpdateOperation setMaskValue:]
  -[HMDBackingStoreLogUpdateOperation initWithRowIDs:mask:set:]
  -[HMDBackingStoreLogUpdateOperation initWithRowIDs:failedPushedTo:]


HMDBackingStoreLogPrunePushedOperation : HMDBackingStoreOperation
  // instance methods
  -[HMDBackingStoreLogPrunePushedOperation init]
  -[HMDBackingStoreLogPrunePushedOperation main]


HMDBackingStoreLogDropOperationsWithUUID : HMDBackingStoreOperation
 @property  NSUUID *uuid
 @property  long long maskValue
 @property  long long compareValue

  // instance methods
  -[HMDBackingStoreLogDropOperationsWithUUID uuid]
  -[HMDBackingStoreLogDropOperationsWithUUID .cxx_destruct]
  -[HMDBackingStoreLogDropOperationsWithUUID setUuid:]
  -[HMDBackingStoreLogDropOperationsWithUUID mainReturningError]
  -[HMDBackingStoreLogDropOperationsWithUUID maskValue]
  -[HMDBackingStoreLogDropOperationsWithUUID compareValue]
  -[HMDBackingStoreLogDropOperationsWithUUID setMaskValue:]
  -[HMDBackingStoreLogDropOperationsWithUUID setCompareValue:]
  -[HMDBackingStoreLogDropOperationsWithUUID initWithUUID:pushingTo:resultBlock:]


HMDSoftwareUpdateDocumentationManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFNetMonitorDelegate>
 @property  NSMutableSet *registeredMetadata
 @property  NSArray *assets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSoftwareUpdateDocumentationManager logCategory]
  +[HMDSoftwareUpdateDocumentationManager sharedManager]

  // instance methods
  -[HMDSoftwareUpdateDocumentationManager assets]
  -[HMDSoftwareUpdateDocumentationManager addAsset:]
  -[HMDSoftwareUpdateDocumentationManager init]
  -[HMDSoftwareUpdateDocumentationManager .cxx_destruct]
  -[HMDSoftwareUpdateDocumentationManager removeAsset:]
  -[HMDSoftwareUpdateDocumentationManager networkMonitorIsReachable:]
  -[HMDSoftwareUpdateDocumentationManager unregisterDocumentationMetadata:]
  -[HMDSoftwareUpdateDocumentationManager assetForDocumentationMetadata:]
  -[HMDSoftwareUpdateDocumentationManager registerDocumentationMetadata:]
  -[HMDSoftwareUpdateDocumentationManager parseCachedAssets]
  -[HMDSoftwareUpdateDocumentationManager auditAsset:]
  -[HMDSoftwareUpdateDocumentationManager registeredMetadata]


HMDAssistantGather : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDHomeManager *manager
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSArray *currentHomekitObjects
 @property  NSArray *homeKitObjects
 @property  long long homeCount
 @property  NSString *primaryHomeName
 @property  NSUUID *primaryHomeUUID
 @property  NSString *currentHomeName
 @property  NSUUID *currentHomeUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAssistantGather logCategory]

  // instance methods
  -[HMDAssistantGather setWorkQueue:]
  -[HMDAssistantGather .cxx_destruct]
  -[HMDAssistantGather workQueue]
  -[HMDAssistantGather manager]
  -[HMDAssistantGather setManager:]
  -[HMDAssistantGather currentHomeName]
  -[HMDAssistantGather homeKitObjects]
  -[HMDAssistantGather currentHomeUUID]
  -[HMDAssistantGather primaryHomeName]
  -[HMDAssistantGather primaryHomeUUID]
  -[HMDAssistantGather homeCount]
  -[HMDAssistantGather gatherHomeKitObjectsWithCompletion:]
  -[HMDAssistantGather getSyncEntityObjectsWithCompletionHandler:]
  -[HMDAssistantGather _getPrimaryHome]
  -[HMDAssistantGather _getCurrentHome]
  -[HMDAssistantGather setCurrentHomekitObjects:]
  -[HMDAssistantGather currentHomekitObjects]
  -[HMDAssistantGather initWithHomeManager:queue:]


HMDFairPlaySAPSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  ^{FPSAPContextOpaque_=} session
 @property  {FairPlayHWInfo_=I[20C]} hardwareInfo
 @property  unsigned long state
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  <HMDFairPlaySAPSessionDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  NSUUID *sessionIdentifier

  // instance methods
  -[HMDFairPlaySAPSession session]
  -[HMDFairPlaySAPSession delegateQueue]
  -[HMDFairPlaySAPSession dealloc]
  -[HMDFairPlaySAPSession setState:]
  -[HMDFairPlaySAPSession .cxx_destruct]
  -[HMDFairPlaySAPSession close]
  -[HMDFairPlaySAPSession clientQueue]
  -[HMDFairPlaySAPSession sessionIdentifier]
  -[HMDFairPlaySAPSession _teardown]
  -[HMDFairPlaySAPSession initWithDelegate:delegateQueue:]
  -[HMDFairPlaySAPSession state]
  -[HMDFairPlaySAPSession delegate]
  -[HMDFairPlaySAPSession _closeWithError:]
  -[HMDFairPlaySAPSession _setupSAPSessionWithCompletionQueue:completionHandler:]
  -[HMDFairPlaySAPSession _handleServerCertificate:error:completionQueue:completionHandler:]
  -[HMDFairPlaySAPSession _handleServerSAPExchangeData:error:completionQueue:completionHandler:]
  -[HMDFairPlaySAPSession openWithCompletionQueue:completionHandler:]
  -[HMDFairPlaySAPSession signatureForData:completionQueue:completionHandler:]
  -[HMDFairPlaySAPSession verifySignedData:signature:completionQueue:completionHandler:]
  -[HMDFairPlaySAPSession hardwareInfo]


HMDSoftwareUpdateFetchedEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL userInitiated
 @property  BOOL newUpdateFetched

  // class methods
  +[HMDSoftwareUpdateFetchedEvent initialize]
  +[HMDSoftwareUpdateFetchedEvent uuid]
  +[HMDSoftwareUpdateFetchedEvent eventWasUserInitiated:wasNewUpdateFetched:]

  // instance methods
  -[HMDSoftwareUpdateFetchedEvent setUserInitiated:]
  -[HMDSoftwareUpdateFetchedEvent wasUserInitiated]
  -[HMDSoftwareUpdateFetchedEvent wasNewUpdateFetched]
  -[HMDSoftwareUpdateFetchedEvent AWDMessageType]
  -[HMDSoftwareUpdateFetchedEvent metricForAWD]
  -[HMDSoftwareUpdateFetchedEvent setNewUpdateFetched:]


HMDAccessoryNetworkProtectionGroupModel : HMDBackingStoreModelObject
 @property  NSString *manufacturer
 @property  NSNumber *category
 @property  NSNumber *targetProtectionMode

  // class methods
  +[HMDAccessoryNetworkProtectionGroupModel properties]
  +[HMDAccessoryNetworkProtectionGroupModel modelIDForHome:manufacturer:category:]
  +[HMDAccessoryNetworkProtectionGroupModel modelNamespace]


AWDHomeKitCameraConfigurationData : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  NSMutableArray *homeConfigurations
 @property  BOOL hasIsDemoConfiguration
 @property  BOOL isDemoConfiguration

  // class methods
  +[AWDHomeKitCameraConfigurationData homeConfigurationsType]

  // instance methods
  -[AWDHomeKitCameraConfigurationData copyWithZone:]
  -[AWDHomeKitCameraConfigurationData .cxx_destruct]
  -[AWDHomeKitCameraConfigurationData timestamp]
  -[AWDHomeKitCameraConfigurationData setTimestamp:]
  -[AWDHomeKitCameraConfigurationData setHasTimestamp:]
  -[AWDHomeKitCameraConfigurationData readFrom:]
  -[AWDHomeKitCameraConfigurationData writeTo:]
  -[AWDHomeKitCameraConfigurationData isEqual:]
  -[AWDHomeKitCameraConfigurationData copyTo:]
  -[AWDHomeKitCameraConfigurationData dictionaryRepresentation]
  -[AWDHomeKitCameraConfigurationData mergeFrom:]
  -[AWDHomeKitCameraConfigurationData hasTimestamp]
  -[AWDHomeKitCameraConfigurationData homeConfigurations]
  -[AWDHomeKitCameraConfigurationData addHomeConfigurations:]
  -[AWDHomeKitCameraConfigurationData homeConfigurationsCount]
  -[AWDHomeKitCameraConfigurationData clearHomeConfigurations]
  -[AWDHomeKitCameraConfigurationData homeConfigurationsAtIndex:]
  -[AWDHomeKitCameraConfigurationData setIsDemoConfiguration:]
  -[AWDHomeKitCameraConfigurationData setHasIsDemoConfiguration:]
  -[AWDHomeKitCameraConfigurationData hasIsDemoConfiguration]
  -[AWDHomeKitCameraConfigurationData setHomeConfigurations:]
  -[AWDHomeKitCameraConfigurationData isDemoConfiguration]


HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  CKRecordZoneID *zoneID
 @property  NSMutableSet *recordIDs
 @property  BOOL zoneHasChanged
 @property  BOOL zoneWasDeleted
 @property  BOOL ignoreChangeToken
 @property  HMDNetworkRouterFirewallRuleCloudZone *cloudZone
 @property  HMBLocalZone *mirroredLocalZone

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo zoneID]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo initWithZoneID:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo forceRefresh]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo recordIDs]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo cloudZone]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo setCloudZone:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo markChanged]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo mirroredLocalZone]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo setMirroredLocalZone:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo zoneWasDeleted]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo markDeleted]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo zoneHasChanged]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorZoneInfo ignoreChangeToken]


HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo : HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper
 @property  NSSet *requestedRecordIDs
 @property  NSDictionary *zoneInfoMap
 @property  CKServerChangeToken *databaseChangeToken
 @property  CKServerChangeToken *originalDatabaseChangeToken
 @property  NSMutableSet *modifiedRecordIDs
 @property  BOOL zonesHaveChanged
 @property  BOOL zonesWereDeleted
 @property  NSArray *signatureVerificationPublicKeys

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo finishWithResult:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo signatureVerificationPublicKeys]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo setSignatureVerificationPublicKeys:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo originalDatabaseChangeToken]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo databaseChangeToken]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo requestedRecordIDs]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo modifiedRecordIDs]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo zoneInfoMap]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo __cleanupMirroredZones:cloudZones:result:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo initWithActivity:options:databaseChangeToken:promise:xpcActivity:database:useAnonymousRequests:recordIDs:lastSynchronizedRecordIDs:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo markZonesChanged]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo markZonesDeleted]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo setDatabaseChangeToken:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo setOriginalDatabaseChangeToken:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo zonesHaveChanged]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchChangesInfo zonesWereDeleted]


HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchRecordsInfo : HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper
 @property  CKRecordZoneID *zoneID
 @property  CKRecordID *recordID
 @property  NSArray *desiredKeys
 @property  NSMutableSet *records

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchRecordsInfo desiredKeys]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchRecordsInfo zoneID]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchRecordsInfo records]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchRecordsInfo .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchRecordsInfo recordID]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorFetchRecordsInfo initWithActivity:options:promise:database:useAnonymousRequests:zoneID:recordID:desiredKeys:]


HMDNetworkRouterFirewallRuleManagerBackingStoreMirror : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDNetworkRouterFirewallRuleManagerBackingStoreMirror, HMBMirrorProtocol>
 @property  HMBCloudDatabase *cloudDatabase
 @property  HMBLocalDatabase *localDatabase
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  BOOL useAnonymousRequests
 @property  NAPromise *startupPromise
 @property  NAPromise *shutdownPromise
 @property  <NAScheduler> *workQueueScheduler
 @property  BOOL running
 @property  BOOL shuttingDown
 @property  HMBLocalZone *localZone
 @property  NAFuture *lastAsyncFuture
 @property  HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel *internalState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NAFuture *startupFuture
 @property  NAFuture *shutdownFuture
 @property  <HMBLocalZoneID> *zoneID
 @property  NAFuture *startUp

  // class methods
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror logCategory]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __maxSizeForCKRecordSignatureVerificationCertificateChain]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __createSignatureVerificationPolicy]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __recordKeyCertificatePrefix:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __publicKeyFromCertificateRecord:dataKey:assetKey:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __certificatesRecordID]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror publicKeysFromCertificateRecord:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __errorIsNotFound:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __overrideParentModelID]

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror desiredKeys]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror zoneID]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror localDatabase]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror shutdown]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror isShuttingDown]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror flush]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror destroy]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror workQueue]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror setInternalState:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror internalState]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror localZone]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror isRunning]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror shutdownFuture]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror startUp]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror cloudDatabase]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror triggerOutputForOutputRow:options:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror setLocalZone:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror startUpWithLocalZone:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchRecordByID:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchRecordsByQuery:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __shouldFailCloudRecordFetchError:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __startQueryOperation:operation:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchCloudRecordsWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror startupPromise]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __loadOrCreateInternalStateModelWithLocalZone:activity:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror setShuttingDown:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror shutdownPromise]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __startupWithLocalZone:activity:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __shutdownWithActivity:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchVerificationCertificatesCompleted:record:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchVerificationCertificatesRecordWithOperationGroup:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchZoneChangesWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __canRecoverFromVerificationCertificatesError:fetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __retryFetchVerificationCertificatesWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchVerificationCertificatesWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __createCloudZoneIDForZoneID:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __openLocalZoneForCloudZoneID:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __shutdownLocalZones:activity:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __localZonesForRecordIDs:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchAllDataForZoneID:options:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __removeAllOverridesWithOptions:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __removeOverridesForRecordIDs:options:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __removeOverridesForZoneName:options:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchAllDataForRecordIDs:options:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchAllDataForZoneName:options:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __removeAllLocalRulesWithOptions:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchOverridesForRecordIDs:options:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchOverridesForZoneName:options:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __addOverrides:replace:options:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __removeOverridesForZoneName:recordName:options:activity:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __saveInternalStateWithActivity:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __updateChangeTokenWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror initWithLocalDatabase:cloudDatabase:useAnonymousRequests:ownerQueue:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror cloudFetchNeededForRecordIDs:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchCloudChangesForRecordIDs:options:ignoreLastSynchronizedRecords:xpcActivity:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchCloudRecordIDsForZoneID:options:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchCloudRecordsForZoneID:recordID:options:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchAllDataForRecordIDs:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchAllDataWithOptions:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchAllDataForZoneName:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror removeAllLocalRulesWithOptions:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchOverridesForRecordIDs:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchAllOverridesWithOptions:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror fetchOverridesForZoneName:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror addOverrides:replace:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror removeOverridesForRecordIDs:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror removeAllOverridesWithOptions:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror removeOverridesForZoneName:recordName:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror startupFuture]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __removeDeletedZonesWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror lastAsyncFuture]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror setLastAsyncFuture:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __asyncFutureWithActivity:ignoreErrors:block:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror useAnonymousRequests]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchDatabaseChangesWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror _fetchCloudRecordsForZoneID:recordID:options:desiredKeys:completion:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror _fetchAllDataForZoneName:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror _fetchOverridesForZoneName:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror _removeOverridesForZoneName:recordName:options:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror workQueueScheduler]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __fetchDatabaseChangesCompleted:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __canRecoverFromFetchDatabaseChangesError:fetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __retryFetchDatabaseChangesWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __performCloudZonePullsWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __createCloudZonesForFetchInfo:error:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirror __startUpCloudZonesWithFetchInfo:]


HMDHomeKitPersonDataReceiver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver, HMDActiveXPCClientConnectionsPeriodicTimerDelegate, HMDPersonDataReceiver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *UUID
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMDActiveXPCClientConnectionsPeriodicTimer *clientConnectionsTimer
 @property  <HMDPersonDataSource> *dataSource
 @property  @? fetchServerFactory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMIHomePersonManager *homePersonManager
 @property  HMIExternalPersonManager *photosPersonManager

  // class methods
  +[HMDHomeKitPersonDataReceiver logCategory]

  // instance methods
  -[HMDHomeKitPersonDataReceiver messageTargetUUID]
  -[HMDHomeKitPersonDataReceiver messageReceiveQueue]
  -[HMDHomeKitPersonDataReceiver logIdentifier]
  -[HMDHomeKitPersonDataReceiver setDataSource:]
  -[HMDHomeKitPersonDataReceiver .cxx_destruct]
  -[HMDHomeKitPersonDataReceiver workQueue]
  -[HMDHomeKitPersonDataReceiver dataSource]
  -[HMDHomeKitPersonDataReceiver messageDispatcher]
  -[HMDHomeKitPersonDataReceiver UUID]
  -[HMDHomeKitPersonDataReceiver initWithUUID:messageDispatcher:workQueue:]
  -[HMDHomeKitPersonDataReceiver configureWithDataSource:home:]
  -[HMDHomeKitPersonDataReceiver handleUpdatedPerson:mirrorOutputFuture:]
  -[HMDHomeKitPersonDataReceiver handleUpdatedUnassociatedFaceCrop:mirrorOutputFuture:]
  -[HMDHomeKitPersonDataReceiver handleUpdatedPersonFaceCrop:mirrorOutputFuture:]
  -[HMDHomeKitPersonDataReceiver handleUpdatedFaceprint:mirrorOutputFuture:]
  -[HMDHomeKitPersonDataReceiver handleRemovedPersonWithUUID:mirrorOutputFuture:]
  -[HMDHomeKitPersonDataReceiver handleRemovedFaceCropWithUUID:mirrorOutputFuture:]
  -[HMDHomeKitPersonDataReceiver handleRemovedFaceprintWithUUID:mirrorOutputFuture:]
  -[HMDHomeKitPersonDataReceiver handleUpdatedSettings:mirrorOutputFuture:]
  -[HMDHomeKitPersonDataReceiver handleFetchSettingsMessage:]
  -[HMDHomeKitPersonDataReceiver clientConnectionsTimerDidFire:]
  -[HMDHomeKitPersonDataReceiver handleSubscribeMessage:]
  -[HMDHomeKitPersonDataReceiver handleUnsubscribeMessage:]
  -[HMDHomeKitPersonDataReceiver handlePerformCloudPullMessage:]
  -[HMDHomeKitPersonDataReceiver handleUpdateSettingsMessage:]
  -[HMDHomeKitPersonDataReceiver initWithUUID:messageDispatcher:workQueue:clientConnectionsTimer:]
  -[HMDHomeKitPersonDataReceiver clientConnectionsTimer]
  -[HMDHomeKitPersonDataReceiver fetchServerFactory]
  -[HMDHomeKitPersonDataReceiver handleFetchPersonsMessage:]
  -[HMDHomeKitPersonDataReceiver handleFetchFaceCropsMessage:]
  -[HMDHomeKitPersonDataReceiver handleFetchPersonFaceCropsMessage:]
  -[HMDHomeKitPersonDataReceiver handleFetchUnassociatedFaceCropsMessage:]
  -[HMDHomeKitPersonDataReceiver handleFetchFaceprintsMessage:]
  -[HMDHomeKitPersonDataReceiver handleAddOrUpdatePersonsMessage:]
  -[HMDHomeKitPersonDataReceiver handleAddOrUpdateFaceCropsMessage:]
  -[HMDHomeKitPersonDataReceiver handleAddOrUpdateFaceprintsMessage:]
  -[HMDHomeKitPersonDataReceiver handleAssociateFaceCropsMessage:]
  -[HMDHomeKitPersonDataReceiver handleDisassociateFaceCropsMessage:]
  -[HMDHomeKitPersonDataReceiver handleRemovePersonsMessage:]
  -[HMDHomeKitPersonDataReceiver handleRemoveFaceCropsMessage:]
  -[HMDHomeKitPersonDataReceiver handleRemoveFaceprintsMessage:]
  -[HMDHomeKitPersonDataReceiver _notifySubscribersOfMessageWithName:payload:]
  -[HMDHomeKitPersonDataReceiver _performCloudPull]
  -[HMDHomeKitPersonDataReceiver setFetchServerFactory:]


HMDCameraIDSSessionReceiver : HMDCameraIDSSessionHandler <IDSSessionDelegate, HMDCameraRemoteStreamReceiverDestinationProtocol>
 @property  HMDCameraIDSSessionInviterDeviceVerifier *sessionInviterDeviceVerifier
 @property  <HMDCameraIDSSessionReceiverDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *remoteDestination
 @property  IDSSession *session

  // class methods
  +[HMDCameraIDSSessionReceiver logCategory]

  // instance methods
  -[HMDCameraIDSSessionReceiver logIdentifier]
  -[HMDCameraIDSSessionReceiver setDelegateQueue:]
  -[HMDCameraIDSSessionReceiver session]
  -[HMDCameraIDSSessionReceiver delegateQueue]
  -[HMDCameraIDSSessionReceiver service:account:inviteReceivedForSession:fromID:withContext:]
  -[HMDCameraIDSSessionReceiver dealloc]
  -[HMDCameraIDSSessionReceiver .cxx_destruct]
  -[HMDCameraIDSSessionReceiver setDelegate:]
  -[HMDCameraIDSSessionReceiver sessionStarted:]
  -[HMDCameraIDSSessionReceiver sessionEnded:withReason:error:]
  -[HMDCameraIDSSessionReceiver delegate]
  -[HMDCameraIDSSessionReceiver setupReceiver:]
  -[HMDCameraIDSSessionReceiver remoteDestination]
  -[HMDCameraIDSSessionReceiver _callSessionEnded:]
  -[HMDCameraIDSSessionReceiver initWithSessionID:workQueue:sessionInviterDeviceVerifier:delegate:delegateQueue:]
  -[HMDCameraIDSSessionReceiver sessionInviterDeviceVerifier]
  -[HMDCameraIDSSessionReceiver _receivedIDSSession:]
  -[HMDCameraIDSSessionReceiver _callSessionSetup:]


HMDRoomLogEvent : HMDLogEvent <HMDCoreDuetLogEvent>
 @property  unsigned long duetEventType
 @property  NSArray *eventDataToLog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long triggerSource
 @property  NSUUID *roomUUID
 @property  NSUUID *homeUUID
 @property  NSString *serializedIdentifier
 @property  NSString *roomName
 @property  NSString *viewInformation

  // class methods
  +[HMDRoomLogEvent uuid]

  // instance methods
  -[HMDRoomLogEvent viewInformation]
  -[HMDRoomLogEvent .cxx_destruct]
  -[HMDRoomLogEvent value]
  -[HMDRoomLogEvent homeUUID]
  -[HMDRoomLogEvent metadata]
  -[HMDRoomLogEvent roomName]
  -[HMDRoomLogEvent serializedIdentifier]
  -[HMDRoomLogEvent roomUUID]
  -[HMDRoomLogEvent triggerSource]
  -[HMDRoomLogEvent initWithRoom:source:viewInformation:]
  -[HMDRoomLogEvent duetEventType]
  -[HMDRoomLogEvent eventDataToLog]
  -[HMDRoomLogEvent initWithRoomUUID:roomName:source:serializedIdentifier:homeUUID:viewInformation:]


HMDAccessoryDiagnosticsManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDNetworkRouterFirewallRuleManagerClient, HMFLogging, HMFMessageReceiver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  HMDHAPAccessory *accessory
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDService *diagnosticsService
 @property  HMDAccessoryDiagnosticsSettings *diagnosticsSettings
 @property  HMDAccessoryDiagnosticsSession *currentDiagnosticsSession
 @property  NSString *clientIdentifier
 @property  BOOL didShutDown
 @property  BOOL cloudFetchInProgress
 @property  BOOL cloudFetchCompleted
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDAccessoryDiagnosticsManager logCategory]

  // instance methods
  -[HMDAccessoryDiagnosticsManager messageTargetUUID]
  -[HMDAccessoryDiagnosticsManager _start]
  -[HMDAccessoryDiagnosticsManager messageReceiveQueue]
  -[HMDAccessoryDiagnosticsManager logIdentifier]
  -[HMDAccessoryDiagnosticsManager shutDown]
  -[HMDAccessoryDiagnosticsManager attributeDescriptions]
  -[HMDAccessoryDiagnosticsManager clientIdentifier]
  -[HMDAccessoryDiagnosticsManager dealloc]
  -[HMDAccessoryDiagnosticsManager .cxx_destruct]
  -[HMDAccessoryDiagnosticsManager workQueue]
  -[HMDAccessoryDiagnosticsManager msgDispatcher]
  -[HMDAccessoryDiagnosticsManager accessory]
  -[HMDAccessoryDiagnosticsManager start]
  -[HMDAccessoryDiagnosticsManager _shutDown]
  -[HMDAccessoryDiagnosticsManager didShutDown]
  -[HMDAccessoryDiagnosticsManager setDidShutDown:]
  -[HMDAccessoryDiagnosticsManager watchedAccessoryIdentifiersForFirewallRuleManager:]
  -[HMDAccessoryDiagnosticsManager initWithAccessory:service:msgDispatcher:workQueue:]
  -[HMDAccessoryDiagnosticsManager diagnosticsService]
  -[HMDAccessoryDiagnosticsManager diagnosticsSettings]
  -[HMDAccessoryDiagnosticsManager currentDiagnosticsSession]
  -[HMDAccessoryDiagnosticsManager _updateDiagnosticSettings]
  -[HMDAccessoryDiagnosticsManager _handleDiagnosticsTransferRequestWithCompletion:]
  -[HMDAccessoryDiagnosticsManager _registerForMessagesAndNotifications]
  -[HMDAccessoryDiagnosticsManager setDiagnosticsSettings:]
  -[HMDAccessoryDiagnosticsManager _fetchCloudDiagnosticsMetadata]
  -[HMDAccessoryDiagnosticsManager _clearCurrentDiagnosticsSession:]
  -[HMDAccessoryDiagnosticsManager _notifyClientsOfDiagnosticsTransferSupportUpdated]
  -[HMDAccessoryDiagnosticsManager _invalidateCloudDiagnosticsMetadata]
  -[HMDAccessoryDiagnosticsManager _handleDiagnosticsTransferRequest:]
  -[HMDAccessoryDiagnosticsManager handleCharacteristicsUpdatedNotification:]
  -[HMDAccessoryDiagnosticsManager handleCharacteristicValueUpdatedNotification:]
  -[HMDAccessoryDiagnosticsManager cloudFetchCompleted]
  -[HMDAccessoryDiagnosticsManager cloudFetchInProgress]
  -[HMDAccessoryDiagnosticsManager setCurrentDiagnosticsSession:]
  -[HMDAccessoryDiagnosticsManager _readDiagnosticsDataWithCompletion:]
  -[HMDAccessoryDiagnosticsManager _fetchModelDiagnosticsMetadataForAccessory:withCompletion:]
  -[HMDAccessoryDiagnosticsManager setCloudFetchInProgress:]
  -[HMDAccessoryDiagnosticsManager setCloudFetchCompleted:]
  -[HMDAccessoryDiagnosticsManager __fetchCloudDiagnosticsMetadataForAccessory:completion:]
  -[HMDAccessoryDiagnosticsManager _callCompletionHandler:diagnostics:error:]


HMDPredicateUtilities : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSString *logIdentifier
 @property  unsigned long cameraSignificantEvent
 @property  unsigned long personFamiliarityOptions
 @property  HMDHome *home
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDPredicateUtilities logCategory]

  // instance methods
  -[HMDPredicateUtilities sunset]
  -[HMDPredicateUtilities logIdentifier]
  -[HMDPredicateUtilities personFamiliarityOptions]
  -[HMDPredicateUtilities sunrise]
  -[HMDPredicateUtilities .cxx_destruct]
  -[HMDPredicateUtilities setHome:]
  -[HMDPredicateUtilities setPersonFamiliarityOptions:]
  -[HMDPredicateUtilities home]
  -[HMDPredicateUtilities containsPresenceEvents:]
  -[HMDPredicateUtilities initWithHome:logIdentifier:]
  -[HMDPredicateUtilities rewritePredicate:currentCharacteristicInPredicate:characteristicsToRead:homePresence:]
  -[HMDPredicateUtilities rewritePredicateForDaemon:message:]
  -[HMDPredicateUtilities compareValueOfCharacteristic:againstValue:operatorType:]
  -[HMDPredicateUtilities updatePredicate:currentCharacteristicInPredicate:conditionModified:removedCharacteristic:underService:underAccessory:]
  -[HMDPredicateUtilities updatePredicate:removedUser:conditionModified:]
  -[HMDPredicateUtilities rewritePredicateForClient:]
  -[HMDPredicateUtilities generateAnalyticsData:]
  -[HMDPredicateUtilities rewriteNowAdjustedForHomeTimeZone:]
  -[HMDPredicateUtilities rewritePredicate:forDaemon:message:]
  -[HMDPredicateUtilities fillAnalyticsData:forPredicate:]
  -[HMDPredicateUtilities comparePresence:operatorType:homePresence:]
  -[HMDPredicateUtilities addDeltaToNow:]
  -[HMDPredicateUtilities dateTodayMatchingComponents:]
  -[HMDPredicateUtilities cameraSignificantEvent]
  -[HMDPredicateUtilities setCameraSignificantEvent:]


HMDAWDLogEventObserver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDLogEventObserver>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAWDLogEventObserver initialize]
  +[HMDAWDLogEventObserver sharedAWDServerConnection]
  +[HMDAWDLogEventObserver stringForAWDMetricType:]
  +[HMDAWDLogEventObserver _submitAWDMetric:type:]

  // instance methods
  -[HMDAWDLogEventObserver init]
  -[HMDAWDLogEventObserver didReceiveEventFromDispatcher:withLogContext:]


HMDCameraParameterSelection : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDCameraStreamSessionID *sessionID
 @property  HMDCameraVideoParameterSelection *videoParameterSelection
 @property  HMDCameraAudioParameterSelection *audioParameterSelection
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraParameterSelection logCategory]

  // instance methods
  -[HMDCameraParameterSelection sessionID]
  -[HMDCameraParameterSelection logIdentifier]
  -[HMDCameraParameterSelection .cxx_destruct]
  -[HMDCameraParameterSelection initWithSessionID:]
  -[HMDCameraParameterSelection findBestMatchWithProtocolParameters:streamingCapabilities:videoTierParameters:]
  -[HMDCameraParameterSelection setSelectedEndPointSetupParameters:videoNetworkConfig:audioNetworkConfig:]
  -[HMDCameraParameterSelection setSelectedConfigParameters:]
  -[HMDCameraParameterSelection setReselectedConfigParameters:videoTier:]
  -[HMDCameraParameterSelection setVideoParameterSelection:]
  -[HMDCameraParameterSelection setAudioParameterSelection:]
  -[HMDCameraParameterSelection videoParameterSelection]
  -[HMDCameraParameterSelection audioParameterSelection]


HMDCameraParameterSelectionBase : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDCameraStreamSessionID *sessionID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraParameterSelectionBase logCategory]

  // instance methods
  -[HMDCameraParameterSelectionBase sessionID]
  -[HMDCameraParameterSelectionBase .cxx_destruct]
  -[HMDCameraParameterSelectionBase initWithSessionID:]
  -[HMDCameraParameterSelectionBase _filterFor:preferenceList:deviceSupportedTypes:cameraSupportedTypes:localPreferences:]
  -[HMDCameraParameterSelectionBase _selectSRTPParameters:]
  -[HMDCameraParameterSelectionBase _selectCryptoSuite:]


HMDCloudPairedMetadataVersionConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDNetworkRouterFirewallRuleAccessoryIdentifier *accessoryIdentifier
 @property  HMDCloudPairedMetadataDiagnostics *diagnostics
 @property  NSDictionary *prettyJSONDictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCloudPairedMetadataVersionConfiguration logCategory]

  // instance methods
  -[HMDCloudPairedMetadataVersionConfiguration attributeDescriptions]
  -[HMDCloudPairedMetadataVersionConfiguration diagnostics]
  -[HMDCloudPairedMetadataVersionConfiguration accessoryIdentifier]
  -[HMDCloudPairedMetadataVersionConfiguration .cxx_destruct]
  -[HMDCloudPairedMetadataVersionConfiguration prettyJSONDictionary]
  -[HMDCloudPairedMetadataVersionConfiguration initWithAccessoryIdentifier:jsonDictionary:]
  -[HMDCloudPairedMetadataVersionConfiguration initWithAccessoryIdentifier:diagnostics:]


HMDAWDRemoteSessionMetric : HMDLogEvent <HMDAWDLogEvent>
 @property  BOOL submitted
 @property  NSDate *creation
 @property  int role
 @property  BOOL authenticated
 @property  int closeReason
 @property  NSUUID *sessionID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAWDRemoteSessionMetric initialize]
  +[HMDAWDRemoteSessionMetric uuid]
  +[HMDAWDRemoteSessionMetric closeReasonFromError:]

  // instance methods
  -[HMDAWDRemoteSessionMetric isAuthenticated]
  -[HMDAWDRemoteSessionMetric sessionID]
  -[HMDAWDRemoteSessionMetric closeReason]
  -[HMDAWDRemoteSessionMetric .cxx_destruct]
  -[HMDAWDRemoteSessionMetric open]
  -[HMDAWDRemoteSessionMetric setAuthenticated:]
  -[HMDAWDRemoteSessionMetric role]
  -[HMDAWDRemoteSessionMetric creation]
  -[HMDAWDRemoteSessionMetric setCreation:]
  -[HMDAWDRemoteSessionMetric submitted]
  -[HMDAWDRemoteSessionMetric setSubmitted:]
  -[HMDAWDRemoteSessionMetric AWDMessageType]
  -[HMDAWDRemoteSessionMetric metricForAWD]
  -[HMDAWDRemoteSessionMetric initWithClientMode:sessionID:]


HMDCameraRecordingVideoCodec : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSCopying, NSSecureCoding>
 @property  long long type

  // class methods
  +[HMDCameraRecordingVideoCodec supportsSecureCoding]
  +[HMDCameraRecordingVideoCodec arrayWithCodecTypes:]

  // instance methods
  -[HMDCameraRecordingVideoCodec copyWithZone:]
  -[HMDCameraRecordingVideoCodec encodeWithCoder:]
  -[HMDCameraRecordingVideoCodec type]
  -[HMDCameraRecordingVideoCodec description:indent:]
  -[HMDCameraRecordingVideoCodec isEqual:]
  -[HMDCameraRecordingVideoCodec initWithCoder:]
  -[HMDCameraRecordingVideoCodec initWithTLVData:]
  -[HMDCameraRecordingVideoCodec initWithCodec:]


HMDCameraRecordingH264Profile : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSSecureCoding>
 @property  long long h264Profile

  // class methods
  +[HMDCameraRecordingH264Profile supportsSecureCoding]
  +[HMDCameraRecordingH264Profile arrayWithProfiles:]

  // instance methods
  -[HMDCameraRecordingH264Profile encodeWithCoder:]
  -[HMDCameraRecordingH264Profile description:indent:]
  -[HMDCameraRecordingH264Profile isEqual:]
  -[HMDCameraRecordingH264Profile initWithCoder:]
  -[HMDCameraRecordingH264Profile h264Profile]
  -[HMDCameraRecordingH264Profile initWithH264Profile:]
  -[HMDCameraRecordingH264Profile initWithTLVData:]


HMDCameraRecordingH264Level : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSSecureCoding>
 @property  long long h264Level

  // class methods
  +[HMDCameraRecordingH264Level supportsSecureCoding]
  +[HMDCameraRecordingH264Level arrayWithLevels:]

  // instance methods
  -[HMDCameraRecordingH264Level encodeWithCoder:]
  -[HMDCameraRecordingH264Level description:indent:]
  -[HMDCameraRecordingH264Level isEqual:]
  -[HMDCameraRecordingH264Level initWithCoder:]
  -[HMDCameraRecordingH264Level initWithTLVData:]
  -[HMDCameraRecordingH264Level h264Level]
  -[HMDCameraRecordingH264Level initWithH264Level:]


HMDCameraRecordingVideoCodecParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSArray *profiles
 @property  NSArray *levels
 @property  NSNumber *bitRate
 @property  NSNumber *iFrameInterval

  // class methods
  +[HMDCameraRecordingVideoCodecParameters supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingVideoCodecParameters profiles]
  -[HMDCameraRecordingVideoCodecParameters levels]
  -[HMDCameraRecordingVideoCodecParameters .cxx_destruct]
  -[HMDCameraRecordingVideoCodecParameters bitRate]
  -[HMDCameraRecordingVideoCodecParameters encodeWithCoder:]
  -[HMDCameraRecordingVideoCodecParameters description:indent:]
  -[HMDCameraRecordingVideoCodecParameters tlvData]
  -[HMDCameraRecordingVideoCodecParameters initWithCoder:]
  -[HMDCameraRecordingVideoCodecParameters _parseFromTLVData]
  -[HMDCameraRecordingVideoCodecParameters iFrameInterval]
  -[HMDCameraRecordingVideoCodecParameters initWithProfiles:levels:bitRate:iFrameInterval:]


HMDCameraRecordingVideoAttributes : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSNumber *imageWidth
 @property  NSNumber *imageHeight
 @property  long long resolution
 @property  NSNumber *frameRate

  // class methods
  +[HMDCameraRecordingVideoAttributes supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingVideoAttributes .cxx_destruct]
  -[HMDCameraRecordingVideoAttributes frameRate]
  -[HMDCameraRecordingVideoAttributes encodeWithCoder:]
  -[HMDCameraRecordingVideoAttributes resolution]
  -[HMDCameraRecordingVideoAttributes imageHeight]
  -[HMDCameraRecordingVideoAttributes description:indent:]
  -[HMDCameraRecordingVideoAttributes tlvData]
  -[HMDCameraRecordingVideoAttributes imageWidth]
  -[HMDCameraRecordingVideoAttributes initWithCoder:]
  -[HMDCameraRecordingVideoAttributes _parseFromTLVData]
  -[HMDCameraRecordingVideoAttributes initWithImageWidth:imageHeight:frameRate:]
  -[HMDCameraRecordingVideoAttributes initWithResolution:frameRate:]


HMDCameraRecordingVideoCodecConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDCameraRecordingVideoCodec *codec
 @property  HMDCameraRecordingVideoCodecParameters *parameters
 @property  NSArray *videoAttributes

  // class methods
  +[HMDCameraRecordingVideoCodecConfiguration supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingVideoCodecConfiguration codec]
  -[HMDCameraRecordingVideoCodecConfiguration parameters]
  -[HMDCameraRecordingVideoCodecConfiguration .cxx_destruct]
  -[HMDCameraRecordingVideoCodecConfiguration encodeWithCoder:]
  -[HMDCameraRecordingVideoCodecConfiguration description:indent:]
  -[HMDCameraRecordingVideoCodecConfiguration tlvData]
  -[HMDCameraRecordingVideoCodecConfiguration initWithCoder:]
  -[HMDCameraRecordingVideoCodecConfiguration videoAttributes]
  -[HMDCameraRecordingVideoCodecConfiguration _parseFromTLVData]
  -[HMDCameraRecordingVideoCodecConfiguration initWithCodec:codecParameters:videoAttributes:]


HMDCameraRecordingSupportedVideoConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSArray *codecConfigurations

  // class methods
  +[HMDCameraRecordingSupportedVideoConfiguration supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingSupportedVideoConfiguration .cxx_destruct]
  -[HMDCameraRecordingSupportedVideoConfiguration encodeWithCoder:]
  -[HMDCameraRecordingSupportedVideoConfiguration description:indent:]
  -[HMDCameraRecordingSupportedVideoConfiguration tlvData]
  -[HMDCameraRecordingSupportedVideoConfiguration initWithCoder:]
  -[HMDCameraRecordingSupportedVideoConfiguration codecConfigurations]
  -[HMDCameraRecordingSupportedVideoConfiguration _parseFromTLVData]
  -[HMDCameraRecordingSupportedVideoConfiguration initWithCodecConfigurations:]


HMDCameraRecordingManagerDependencyFactory : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMFPreferences *preferences

  // instance methods
  -[HMDCameraRecordingManagerDependencyFactory preferences]
  -[HMDCameraRecordingManagerDependencyFactory createSessionNotificationTrigger:workQueue:]
  -[HMDCameraRecordingManagerDependencyFactory createSettingsControl:accessory:managementService:]
  -[HMDCameraRecordingManagerDependencyFactory createBulkSendSessionInitiatorWithWorkQueue:accessory:]
  -[HMDCameraRecordingManagerDependencyFactory createDataSource]
  -[HMDCameraRecordingManagerDependencyFactory createSignificantEventServerWithWorkQueue:camera:]
  -[HMDCameraRecordingManagerDependencyFactory createRecordingSessionWithWorkQueue:camera:configuredFragmentDuration:timelineManager:significantEventServer:homePresenceByPairingIdentity:]
  -[HMDCameraRecordingManagerDependencyFactory createTimerWithTimeInterval:]
  -[HMDCameraRecordingManagerDependencyFactory createRecordingSessionRetryContextWithWorkQueue:homePresenceByPairingIdentity:]


HMDIDSActivityMonitor : NSObject /usr/lib/libc++.1.dylib <HMFLogging>
 @property  IDSActivityMonitor *activityMonitor
 @property  <HMDIDSActivityMonitorDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDIDSActivityMonitor logCategory]

  // instance methods
  -[HMDIDSActivityMonitor logIdentifier]
  -[HMDIDSActivityMonitor setDataSource:]
  -[HMDIDSActivityMonitor .cxx_destruct]
  -[HMDIDSActivityMonitor activityMonitor]
  -[HMDIDSActivityMonitor initWithActivity:serviceIdentifier:]
  -[HMDIDSActivityMonitor dataSource]
  -[HMDIDSActivityMonitor listenWithDelegate:]
  -[HMDIDSActivityMonitor broadcastSubActivity:toPushTokens:]
  -[HMDIDSActivityMonitor stopBroadcastingSubActivity:]


HMDIDSActivityMonitorBroadcaster : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMFTimerDelegate, HMDIDSActivityMonitorBroadcasterPushTokenDataSourceDelegate>
 @property  HMDIDSActivityMonitor *activityMonitor
 @property  <HMDIDSActivityMonitorBroadcasterPushTokenDataSource> *dataSource
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDIDSActivityMonitorBroadcaster logCategory]

  // instance methods
  -[HMDIDSActivityMonitorBroadcaster timerDidFire:]
  -[HMDIDSActivityMonitorBroadcaster logIdentifier]
  -[HMDIDSActivityMonitorBroadcaster setDataSource:]
  -[HMDIDSActivityMonitorBroadcaster .cxx_destruct]
  -[HMDIDSActivityMonitorBroadcaster activityMonitor]
  -[HMDIDSActivityMonitorBroadcaster setQueue:]
  -[HMDIDSActivityMonitorBroadcaster queue]
  -[HMDIDSActivityMonitorBroadcaster dataSource]
  -[HMDIDSActivityMonitorBroadcaster initWithActivityMonitor:]
  -[HMDIDSActivityMonitorBroadcaster configureWithQueue:]
  -[HMDIDSActivityMonitorBroadcaster initWithActivityMonitor:timer:]
  -[HMDIDSActivityMonitorBroadcaster dataSourceDidUpdate:]


HMDIDSActivityMonitorObserver : NSObject /usr/lib/libc++.1.dylib <IDSActivityMonitorListenerDelegate, HMFLogging>
 @property  HMDIDSActivityMonitor *activityMonitor
 @property  NSMutableDictionary *subactivityToDelegatesMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDIDSActivityMonitorObserver logCategory]

  // instance methods
  -[HMDIDSActivityMonitorObserver logIdentifier]
  -[HMDIDSActivityMonitorObserver .cxx_destruct]
  -[HMDIDSActivityMonitorObserver activityMonitor]
  -[HMDIDSActivityMonitorObserver initWithActivityMonitor:]
  -[HMDIDSActivityMonitorObserver activityMonitor:didReceiveActivityUpdate:]
  -[HMDIDSActivityMonitorObserver addObserver:forSubActivity:]
  -[HMDIDSActivityMonitorObserver removeObserver:forSubActivity:]
  -[HMDIDSActivityMonitorObserver startObservingPresenceForDevice:]
  -[HMDIDSActivityMonitorObserver stopObservingPresenceForDevice:]
  -[HMDIDSActivityMonitorObserver subactivityToDelegatesMap]


HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore <HMFLogging>
 @property  NSData *networkDeclarationsData
 @property  NSData *pairedMetadataData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel logCategory]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel hmbProperties]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel modelIDForRecordID:]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel namespaceID]

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel initWithCloudZoneID:recordID:networkDeclarationsData:pairedMetadataData:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel initWithModelID:parentModelID:networkDeclarationsData:pairedMetadataData:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel initWithModelID:parentModelID:networkDeclarationsData:]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreCloudAccessoryModel initWithCloudZoneID:recordID:networkDeclarationsData:]


HMDNetworkRouterClientManager : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDDevicePreferenceDataSource, HMDNetworkRouterFirewallRuleManagerClient>
 @property  HMFUnfairLock *lock
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSNotificationCenter *notificationCenter
 @property  <HMDNetworkRouterFirewallRuleManager> *firewallRuleManager
 @property  HMDHAPAccessory *networkRouterAccessory
 @property  HMDHome *home
 @property  HMDNetworkRouterController *routerController
 @property  BOOL started
 @property  BOOL managedNetworkEnabled
 @property  BOOL staleClientIdentifiersResetNeeded
 @property  BOOL staleClientIdentifiersResetInProgress
 @property  BOOL startPending
 @property  NSMutableSet *accessoriesInReconfiguration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterClientManager logCategory]

  // instance methods
  -[HMDNetworkRouterClientManager _start]
  -[HMDNetworkRouterClientManager notificationCenter]
  -[HMDNetworkRouterClientManager started]
  -[HMDNetworkRouterClientManager setStarted:]
  -[HMDNetworkRouterClientManager .cxx_destruct]
  -[HMDNetworkRouterClientManager _stop]
  -[HMDNetworkRouterClientManager workQueue]
  -[HMDNetworkRouterClientManager lock]
  -[HMDNetworkRouterClientManager stop]
  -[HMDNetworkRouterClientManager home]
  -[HMDNetworkRouterClientManager firewallRuleManager]
  -[HMDNetworkRouterClientManager supportsDeviceWithCapabilities:]
  -[HMDNetworkRouterClientManager watchedAccessoryIdentifiersForFirewallRuleManager:]
  -[HMDNetworkRouterClientManager migrateAccessory:toCredentialType:rotate:completion:]
  -[HMDNetworkRouterClientManager handleAccessoryConnected:]
  -[HMDNetworkRouterClientManager handleAccessoryRemoved:]
  -[HMDNetworkRouterClientManager initWithNetworkRouterAccessory:workQueue:firewallRuleManager:notificationCenter:]
  -[HMDNetworkRouterClientManager evaluateManagement]
  -[HMDNetworkRouterClientManager replaceActiveNetworkRouterAccessory:]
  -[HMDNetworkRouterClientManager _evaluateManagement]
  -[HMDNetworkRouterClientManager networkRouterAccessory]
  -[HMDNetworkRouterClientManager setNetworkRouterAccessory:]
  -[HMDNetworkRouterClientManager setManagedNetworkEnabled:]
  -[HMDNetworkRouterClientManager staleClientIdentifiersResetInProgress]
  -[HMDNetworkRouterClientManager setStaleClientIdentifiersResetNeeded:]
  -[HMDNetworkRouterClientManager _migrateAccessory:withConfiguration:clientStatus:fromCredentialType:toCredentialType:rotate:completion:]
  -[HMDNetworkRouterClientManager _getNetworkConfigurationForAccessory:targetProtectionMode:completion:]
  -[HMDNetworkRouterClientManager handleRouterAccessoryReachable:]
  -[HMDNetworkRouterClientManager _resetStaleClientIdentifiersBeforeStart]
  -[HMDNetworkRouterClientManager setStartPending:]
  -[HMDNetworkRouterClientManager setStaleClientIdentifiersResetInProgress:]
  -[HMDNetworkRouterClientManager _transactionBlockForAccessoriesWithStaleClientIdentifier]
  -[HMDNetworkRouterClientManager staleClientIdentifiersResetNeeded]
  -[HMDNetworkRouterClientManager startPending]
  -[HMDNetworkRouterClientManager __registerForNetworkRouterAccessoryReachable:]
  -[HMDNetworkRouterClientManager handleAccessoryAdded:]
  -[HMDNetworkRouterClientManager handleHomeNetworkProtectionChanged:]
  -[HMDNetworkRouterClientManager handleFirewallRulesUpdated:]
  -[HMDNetworkRouterClientManager handleNetworkProtectionGroupActivated:]
  -[HMDNetworkRouterClientManager handleNetworkProtectionGroupDeactivated:]
  -[HMDNetworkRouterClientManager _registerForNetworkProtectionChangesToGroup:]
  -[HMDNetworkRouterClientManager _handleRouterAccessoryReachable:]
  -[HMDNetworkRouterClientManager managedNetworkEnabled]
  -[HMDNetworkRouterClientManager _updateClientConfigurationForAllAccessoriesWithClientReconfigurationAllowed:]
  -[HMDNetworkRouterClientManager routerController]
  -[HMDNetworkRouterClientManager _startManagingAccessory:initialHomeSetup:]
  -[HMDNetworkRouterClientManager _deregisterForChangesToManagedAccessory:]
  -[HMDNetworkRouterClientManager _updateClientConfigurationForAccessory:clientReconfigurationAllowed:]
  -[HMDNetworkRouterClientManager accessoriesInReconfiguration]
  -[HMDNetworkRouterClientManager _reconcileClientConfigurationForReachableAccessory:clientReconfigurationAllowed:]
  -[HMDNetworkRouterClientManager _unregisterForNetworkProtectionChangesToGroup:]
  -[HMDNetworkRouterClientManager _registerForChangesToManagedAccessory:]
  -[HMDNetworkRouterClientManager _updateExistingClientConfiguration:forAccessory:clientStatus:clientReconfigurationAllowed:]
  -[HMDNetworkRouterClientManager _createClientConfigurationForAccessory:credential:clientStatus:clientReconfigurationAllowed:]
  -[HMDNetworkRouterClientManager _reconcileClientConfigurationForAccessory:clientStatus:networkRouterUUID:clientReconfigurationAllowed:]
  -[HMDNetworkRouterClientManager _replaceNetworkClientIdentifierForAccessory:networkClientIdentifier:networkRouterUUID:clientStatus:clientReconfigurationAllowed:]
  -[HMDNetworkRouterClientManager _updateClientConfiguration:forAccessory:protectionMode:clientStatus:skipIfFingerprintMatches:clientReconfigurationAllowed:]
  -[HMDNetworkRouterClientManager _replaceClientConfigurationForAccessory:credential:clientStatus:clientReconfigurationAllowed:]
  -[HMDNetworkRouterClientManager _fetchFirewallRulesForAccessory:completion:]
  -[HMDNetworkRouterClientManager handleAccessoryFirmwareVersionUpdated:]
  -[HMDNetworkRouterClientManager handleNetworkProtectionGroupProtectionChanged:]
  -[HMDNetworkRouterClientManager __deregisterForNetworkRouterAccessoryReachable:]


HMDLogEventReachabilityEventsAnalyzer : HMDLogEventAnalyzer
 @property  HMDEventCountersManager *eventCountersManager

  // instance methods
  -[HMDLogEventReachabilityEventsAnalyzer .cxx_destruct]
  -[HMDLogEventReachabilityEventsAnalyzer eventCountersManager]
  -[HMDLogEventReachabilityEventsAnalyzer processLogEvent:]
  -[HMDLogEventReachabilityEventsAnalyzer initWithSupportedEventTypes:context:]
  -[HMDLogEventReachabilityEventsAnalyzer initWithSupportedEventTypes:context:eventCountersManager:]
  -[HMDLogEventReachabilityEventsAnalyzer _handleRemoteDeviceReachabilityChangedLogEvent:]
  -[HMDLogEventReachabilityEventsAnalyzer _handleCameraRecordingReachabilityLogEvent:]


HMDResidentReachabilityNotificationManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate>
 @property  HMDHome *home
 @property  HMDRemoteDeviceMonitor *deviceMonitor
 @property  BOOL hasReachableResidentSupportingCameraRecording
 @property  BOOL hasCameraConfiguredForRecording
 @property  BOOL anyEnabledResidentSupportsCameraRecordingReachabilityNotifications
 @property  BOOL isCameraReachabilityNotificationDisabledForAllSettings
 @property  @? timerFactory
 @property  HMDBulletinBoard *bulletinBoard
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFTimer *notificationDebounceTimer
 @property  HMDResidentReachabilityContext *reachabilityContext
 @property  BOOL notificationEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDResidentReachabilityNotificationManager logCategory]

  // instance methods
  -[HMDResidentReachabilityNotificationManager timerDidFire:]
  -[HMDResidentReachabilityNotificationManager logIdentifier]
  -[HMDResidentReachabilityNotificationManager .cxx_destruct]
  -[HMDResidentReachabilityNotificationManager workQueue]
  -[HMDResidentReachabilityNotificationManager home]
  -[HMDResidentReachabilityNotificationManager setNotificationEnabled:]
  -[HMDResidentReachabilityNotificationManager initWithResidentReachabilityContext:workQueue:]
  -[HMDResidentReachabilityNotificationManager deviceMonitor]
  -[HMDResidentReachabilityNotificationManager configureWithHome:deviceMonitor:]
  -[HMDResidentReachabilityNotificationManager reachabilityContext]
  -[HMDResidentReachabilityNotificationManager timerFactory]
  -[HMDResidentReachabilityNotificationManager bulletinBoard]
  -[HMDResidentReachabilityNotificationManager initWithResidentReachabilityContext:workQueue:timerFactory:bulletinBoard:]
  -[HMDResidentReachabilityNotificationManager configureWithHome:deviceMonitor:notificationCenter:completionHandler:]
  -[HMDResidentReachabilityNotificationManager _startDebounceTimer]
  -[HMDResidentReachabilityNotificationManager _handleCameraProfileSettingsDidChange:]
  -[HMDResidentReachabilityNotificationManager _handleCameraProfileUnconfigured:]
  -[HMDResidentReachabilityNotificationManager _handleResidentUpdated:]
  -[HMDResidentReachabilityNotificationManager _handleResidentAdded:]
  -[HMDResidentReachabilityNotificationManager _handleResidentRemoved:]
  -[HMDResidentReachabilityNotificationManager _handleNetworkReachabilityChange:]
  -[HMDResidentReachabilityNotificationManager isCameraReachabilityNotificationDisabledForAllSettings]
  -[HMDResidentReachabilityNotificationManager updateNotificationEnabled]
  -[HMDResidentReachabilityNotificationManager setNotificationDebounceTimer:]
  -[HMDResidentReachabilityNotificationManager notificationDebounceTimer]
  -[HMDResidentReachabilityNotificationManager anyEnabledResidentSupportsCameraRecordingReachabilityNotifications]
  -[HMDResidentReachabilityNotificationManager setReachabilityContext:]
  -[HMDResidentReachabilityNotificationManager _evaluateReachabilityBulletin]
  -[HMDResidentReachabilityNotificationManager notificationEnabled]
  -[HMDResidentReachabilityNotificationManager hasReachableResidentSupportingCameraRecording]
  -[HMDResidentReachabilityNotificationManager shouldPostReachableNotification]
  -[HMDResidentReachabilityNotificationManager shouldPostUnreachableNotification]
  -[HMDResidentReachabilityNotificationManager hasCameraConfiguredForRecording]


AWDHomeKitWatchCompanionConnectivityReport : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasNumWatchAddEvents
 @property  unsigned int numWatchAddEvents
 @property  BOOL hasNumWatchRemoveEvents
 @property  unsigned int numWatchRemoveEvents
 @property  BOOL hasReportComplete
 @property  BOOL reportComplete

  // instance methods
  -[AWDHomeKitWatchCompanionConnectivityReport copyWithZone:]
  -[AWDHomeKitWatchCompanionConnectivityReport timestamp]
  -[AWDHomeKitWatchCompanionConnectivityReport setTimestamp:]
  -[AWDHomeKitWatchCompanionConnectivityReport setHasTimestamp:]
  -[AWDHomeKitWatchCompanionConnectivityReport readFrom:]
  -[AWDHomeKitWatchCompanionConnectivityReport writeTo:]
  -[AWDHomeKitWatchCompanionConnectivityReport isEqual:]
  -[AWDHomeKitWatchCompanionConnectivityReport copyTo:]
  -[AWDHomeKitWatchCompanionConnectivityReport dictionaryRepresentation]
  -[AWDHomeKitWatchCompanionConnectivityReport mergeFrom:]
  -[AWDHomeKitWatchCompanionConnectivityReport hasTimestamp]
  -[AWDHomeKitWatchCompanionConnectivityReport setReportComplete:]
  -[AWDHomeKitWatchCompanionConnectivityReport setNumWatchAddEvents:]
  -[AWDHomeKitWatchCompanionConnectivityReport setNumWatchRemoveEvents:]
  -[AWDHomeKitWatchCompanionConnectivityReport reportComplete]
  -[AWDHomeKitWatchCompanionConnectivityReport setHasNumWatchAddEvents:]
  -[AWDHomeKitWatchCompanionConnectivityReport hasNumWatchAddEvents]
  -[AWDHomeKitWatchCompanionConnectivityReport setHasNumWatchRemoveEvents:]
  -[AWDHomeKitWatchCompanionConnectivityReport hasNumWatchRemoveEvents]
  -[AWDHomeKitWatchCompanionConnectivityReport setHasReportComplete:]
  -[AWDHomeKitWatchCompanionConnectivityReport hasReportComplete]
  -[AWDHomeKitWatchCompanionConnectivityReport numWatchAddEvents]
  -[AWDHomeKitWatchCompanionConnectivityReport numWatchRemoveEvents]


AWDHomeKitEventTrigger : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  NSMutableArray *events
 @property  BOOL hasExecuteOnce
 @property  BOOL executeOnce
 @property  BOOL hasContainsRecurrences
 @property  BOOL containsRecurrences
 @property  BOOL hasPredicate
 @property  AWDHomeKitPredicate *predicate
 @property  BOOL hasActivationState
 @property  int activationState
 @property  BOOL hasActivationType
 @property  int activationType

  // class methods
  +[AWDHomeKitEventTrigger eventsType]

  // instance methods
  -[AWDHomeKitEventTrigger events]
  -[AWDHomeKitEventTrigger copyWithZone:]
  -[AWDHomeKitEventTrigger clearEvents]
  -[AWDHomeKitEventTrigger setExecuteOnce:]
  -[AWDHomeKitEventTrigger setActivationState:]
  -[AWDHomeKitEventTrigger executeOnce]
  -[AWDHomeKitEventTrigger .cxx_destruct]
  -[AWDHomeKitEventTrigger setEvents:]
  -[AWDHomeKitEventTrigger predicate]
  -[AWDHomeKitEventTrigger setPredicate:]
  -[AWDHomeKitEventTrigger readFrom:]
  -[AWDHomeKitEventTrigger writeTo:]
  -[AWDHomeKitEventTrigger isEqual:]
  -[AWDHomeKitEventTrigger eventsAtIndex:]
  -[AWDHomeKitEventTrigger addEvents:]
  -[AWDHomeKitEventTrigger copyTo:]
  -[AWDHomeKitEventTrigger dictionaryRepresentation]
  -[AWDHomeKitEventTrigger mergeFrom:]
  -[AWDHomeKitEventTrigger activationState]
  -[AWDHomeKitEventTrigger activationType]
  -[AWDHomeKitEventTrigger setActivationType:]
  -[AWDHomeKitEventTrigger eventsCount]
  -[AWDHomeKitEventTrigger hasPredicate]
  -[AWDHomeKitEventTrigger containsRecurrences]
  -[AWDHomeKitEventTrigger setContainsRecurrences:]
  -[AWDHomeKitEventTrigger setHasExecuteOnce:]
  -[AWDHomeKitEventTrigger hasExecuteOnce]
  -[AWDHomeKitEventTrigger setHasContainsRecurrences:]
  -[AWDHomeKitEventTrigger hasContainsRecurrences]
  -[AWDHomeKitEventTrigger setHasActivationState:]
  -[AWDHomeKitEventTrigger hasActivationState]
  -[AWDHomeKitEventTrigger activationStateAsString:]
  -[AWDHomeKitEventTrigger StringAsActivationState:]
  -[AWDHomeKitEventTrigger setHasActivationType:]
  -[AWDHomeKitEventTrigger hasActivationType]
  -[AWDHomeKitEventTrigger activationTypeAsString:]
  -[AWDHomeKitEventTrigger StringAsActivationType:]


AWDHomeKitRemoteLogin : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasLoginType
 @property  int loginType
 @property  BOOL hasResultErrorCode
 @property  int resultErrorCode
 @property  BOOL hasDelay
 @property  unsigned long delay
 @property  BOOL hasRequester
 @property  int requester

  // instance methods
  -[AWDHomeKitRemoteLogin copyWithZone:]
  -[AWDHomeKitRemoteLogin setDelay:]
  -[AWDHomeKitRemoteLogin delay]
  -[AWDHomeKitRemoteLogin timestamp]
  -[AWDHomeKitRemoteLogin setTimestamp:]
  -[AWDHomeKitRemoteLogin hasDelay]
  -[AWDHomeKitRemoteLogin requester]
  -[AWDHomeKitRemoteLogin setHasTimestamp:]
  -[AWDHomeKitRemoteLogin readFrom:]
  -[AWDHomeKitRemoteLogin writeTo:]
  -[AWDHomeKitRemoteLogin isEqual:]
  -[AWDHomeKitRemoteLogin loginType]
  -[AWDHomeKitRemoteLogin setLoginType:]
  -[AWDHomeKitRemoteLogin setRequester:]
  -[AWDHomeKitRemoteLogin copyTo:]
  -[AWDHomeKitRemoteLogin dictionaryRepresentation]
  -[AWDHomeKitRemoteLogin setHasDelay:]
  -[AWDHomeKitRemoteLogin mergeFrom:]
  -[AWDHomeKitRemoteLogin hasTimestamp]
  -[AWDHomeKitRemoteLogin setResultErrorCode:]
  -[AWDHomeKitRemoteLogin setHasResultErrorCode:]
  -[AWDHomeKitRemoteLogin hasResultErrorCode]
  -[AWDHomeKitRemoteLogin resultErrorCode]
  -[AWDHomeKitRemoteLogin setHasRequester:]
  -[AWDHomeKitRemoteLogin hasRequester]
  -[AWDHomeKitRemoteLogin requesterAsString:]
  -[AWDHomeKitRemoteLogin StringAsRequester:]
  -[AWDHomeKitRemoteLogin setHasLoginType:]
  -[AWDHomeKitRemoteLogin hasLoginType]
  -[AWDHomeKitRemoteLogin loginTypeAsString:]
  -[AWDHomeKitRemoteLogin StringAsLoginType:]


HMDBackingStoreModelObject : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, NSCopying>
 @property  NSUUID *uuid
 @property  NSUUID *parentUUID
 @property  NSString *bsoType
 @property  CKRecord *bsoRecord
 @property  BOOL bsoDataVersionOverride
 @property  unsigned long objectChangeType
 @property  NSSet *dependentUUIDs
 @property  <HMDBackingStoreObjectProtocol> *bsoDelegate
 @property  unsigned long bsoLogRowID
 @property  HMFVersion *bsoDataVersion
 @property  BOOL isReadOnly
 @property  BOOL isGenericRepresentation
 @property  BOOL replayable
 @property  HMFVersion *bsoIgnoredBefore
 @property  BOOL bsoIgnoreModel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBackingStoreModelObject resolveInstanceMethod:]
  +[HMDBackingStoreModelObject logCategory]
  +[HMDBackingStoreModelObject properties]
  +[HMDBackingStoreModelObject schemaHashRoot]
  +[HMDBackingStoreModelObject objectFromData:encoding:error:]
  +[HMDBackingStoreModelObject objectFromData:encoding:record:error:]
  +[HMDBackingStoreModelObject backedObjectClass]
  +[HMDBackingStoreModelObject objectFromData:encoding:rowID:error:]
  +[HMDBackingStoreModelObject objectFromDictionaryData:type:error:]
  +[HMDBackingStoreModelObject genericRepresentation]
  +[HMDBackingStoreModelObject readonlyBefore]
  +[HMDBackingStoreModelObject formatValue:]
  +[HMDBackingStoreModelObject bsoSchemaHash]
  +[HMDBackingStoreModelObject objectFromDictionaryData:error:]
  +[HMDBackingStoreModelObject objectFromCloud:error:]

  // instance methods
  -[HMDBackingStoreModelObject isReadOnly]
  -[HMDBackingStoreModelObject copyWithZone:]
  -[HMDBackingStoreModelObject encodeWithError:]
  -[HMDBackingStoreModelObject logIdentifier]
  -[HMDBackingStoreModelObject uuid]
  -[HMDBackingStoreModelObject .cxx_destruct]
  -[HMDBackingStoreModelObject initWithUUID:]
  -[HMDBackingStoreModelObject setUuid:]
  -[HMDBackingStoreModelObject bsoType]
  -[HMDBackingStoreModelObject isEqual:]
  -[HMDBackingStoreModelObject isReplayable]
  -[HMDBackingStoreModelObject debugString:]
  -[HMDBackingStoreModelObject setProperties]
  -[HMDBackingStoreModelObject merge:]
  -[HMDBackingStoreModelObject parentUUID]
  -[HMDBackingStoreModelObject setParentUUID:]
  -[HMDBackingStoreModelObject _validateType:error:]
  -[HMDBackingStoreModelObject validateType:path:]
  -[HMDBackingStoreModelObject dumpDebug:]
  -[HMDBackingStoreModelObject dumpDebug]
  -[HMDBackingStoreModelObject initWithObjectChangeType:uuid:parentUUID:]
  -[HMDBackingStoreModelObject dependentUUIDs]
  -[HMDBackingStoreModelObject setObjectChangeType:]
  -[HMDBackingStoreModelObject diff:differingFields:]
  -[HMDBackingStoreModelObject bsoLogRowID]
  -[HMDBackingStoreModelObject objectChangeType]
  -[HMDBackingStoreModelObject backedObjectWithParent:error:]
  -[HMDBackingStoreModelObject setPropertyIfNotNil:named:]
  -[HMDBackingStoreModelObject propertyWasSet:]
  -[HMDBackingStoreModelObject initWithUUID:parentUUID:]
  -[HMDBackingStoreModelObject encodeWithEncoding:error:]
  -[HMDBackingStoreModelObject initWithVersion:changeType:uuid:parentUUID:]
  -[HMDBackingStoreModelObject clearVersionOverride]
  -[HMDBackingStoreModelObject bsoIgnoredBefore]
  -[HMDBackingStoreModelObject prepareFor:]
  -[HMDBackingStoreModelObject bsoDataVersion]
  -[HMDBackingStoreModelObject encodeFor:error:]
  -[HMDBackingStoreModelObject encodeWithEncoding:for:error:]
  -[HMDBackingStoreModelObject encodeAsNSDictionaryFor:error:]
  -[HMDBackingStoreModelObject isGenericRepresentation]
  -[HMDBackingStoreModelObject propertyIsAvailable:]
  -[HMDBackingStoreModelObject bsoDataVersionOverride]
  -[HMDBackingStoreModelObject bsoIgnoreModel]
  -[HMDBackingStoreModelObject propertyIsReadOnly:]
  -[HMDBackingStoreModelObject merge:from:]
  -[HMDBackingStoreModelObject typeNameForDebug]
  -[HMDBackingStoreModelObject setBsoDataVersionOverride:]
  -[HMDBackingStoreModelObject setBsoIgnoredBefore:]
  -[HMDBackingStoreModelObject encodeForCloud:]
  -[HMDBackingStoreModelObject setParentUUIDIfNotNil:]
  -[HMDBackingStoreModelObject validForStorage]
  -[HMDBackingStoreModelObject merge:error:]
  -[HMDBackingStoreModelObject defaultValueForPropertyNamed:isSet:]
  -[HMDBackingStoreModelObject bsoDelegate]
  -[HMDBackingStoreModelObject setBsoDelegate:]
  -[HMDBackingStoreModelObject setBsoType:]
  -[HMDBackingStoreModelObject bsoRecord]
  -[HMDBackingStoreModelObject setBsoRecord:]


HMDBackingStoreModelObjectUnsupported : HMDBackingStoreModelObject
  // instance methods
  -[HMDBackingStoreModelObjectUnsupported debugString:]
  -[HMDBackingStoreModelObjectUnsupported dumpDebug:]
  -[HMDBackingStoreModelObjectUnsupported dumpDebug]


HMDFaceprintModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSData *data
 @property  NSUUID *modelUUID
 @property  HMBModelReference *faceCrop

  // class methods
  +[HMDFaceprintModel hmbExcludeFromCloudStorage]
  +[HMDFaceprintModel hmbProperties]

  // instance methods
  -[HMDFaceprintModel createFaceprint]
  -[HMDFaceprintModel initWithFaceprint:]


HMDHomePresence : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDHomePresenceCheck>
 @property  HMDHome *home
 @property  NSDictionary *userPresenceMap
 @property  NSArray *authorizedUsers
 @property  HMDDevice *lastUpdateByDevice
 @property  BOOL hasPresenceRegionForAllUsers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomePresence logCategory]

  // instance methods
  -[HMDHomePresence logIdentifier]
  -[HMDHomePresence attributeDescriptions]
  -[HMDHomePresence .cxx_destruct]
  -[HMDHomePresence home]
  -[HMDHomePresence isEqual:]
  -[HMDHomePresence serializedIdentifierDictionary]
  -[HMDHomePresence initWithHome:userPresenceMap:lastUpdateByDevice:]
  -[HMDHomePresence serializedUUIDDictionary]
  -[HMDHomePresence isUserAtHome:]
  -[HMDHomePresence isUserNotAtHome:]
  -[HMDHomePresence isAnyUserAtHome]
  -[HMDHomePresence isNoUserAtHome]
  -[HMDHomePresence areUsersAtHome:]
  -[HMDHomePresence areUsersNotAtHome:]
  -[HMDHomePresence hasPresenceRegionForAllUsers]
  -[HMDHomePresence userPresenceMap]
  -[HMDHomePresence authorizedUsers]
  -[HMDHomePresence isPresenceRegionKnownForUser:]
  -[HMDHomePresence lastUpdateByDevice]


HMDHomePresenceRemote : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDHomePresenceCheck>
 @property  NSDictionary *userPresenceMap

  // instance methods
  -[HMDHomePresenceRemote .cxx_destruct]
  -[HMDHomePresenceRemote isEqual:]
  -[HMDHomePresenceRemote initWithPresenceByPairingIdentity:]
  -[HMDHomePresenceRemote initWithPresenceByUserId:]
  -[HMDHomePresenceRemote isUserAtHome:]
  -[HMDHomePresenceRemote isUserNotAtHome:]
  -[HMDHomePresenceRemote isAnyUserAtHome]
  -[HMDHomePresenceRemote isNoUserAtHome]
  -[HMDHomePresenceRemote areUsersAtHome:]
  -[HMDHomePresenceRemote areUsersNotAtHome:]
  -[HMDHomePresenceRemote userPresenceMap]
  -[HMDHomePresenceRemote regionForUser:]


HMDLogEventCloudSyncEventsAnalyzer : HMDLogEventAnalyzer
 @property  unsigned int pushCount
 @property  unsigned int fetchCount
 @property  unsigned int uploadCount
 @property  BOOL uploadMaximumDelayReached
 @property  unsigned int uploadErrorCount
 @property  BOOL hasDecryptionFailed
 @property  BOOL lastDecryptionFailed
 @property  unsigned long dataSyncState
 @property  unsigned int homeManagerFetchCount
 @property  unsigned int homeZoneFetchCount
 @property  unsigned int homeManagerUploadCount
 @property  unsigned int homeZoneUploadCount
 @property  NSMutableDictionary *reasonToCountMap
 @property  NSMutableDictionary *errorToCountMap
 @property  unsigned int homeDataBytesFetched
 @property  unsigned int homeDataBytesPushed
 @property  unsigned int legacyHomeDataBytesFetched
 @property  unsigned int legacyHomeDataBytesPushed
 @property  HMDEventFlagsManager *eventFlagsManager
 @property  HMDEventCountersManager *eventCountersManager
 @property  AWDHomeKitCloudSync *cloudSyncMetricForAWD

  // class methods
  +[HMDLogEventCloudSyncEventsAnalyzer sharedAWDServerConnection]

  // instance methods
  -[HMDLogEventCloudSyncEventsAnalyzer .cxx_destruct]
  -[HMDLogEventCloudSyncEventsAnalyzer pushCount]
  -[HMDLogEventCloudSyncEventsAnalyzer setPushCount:]
  -[HMDLogEventCloudSyncEventsAnalyzer dataSyncState]
  -[HMDLogEventCloudSyncEventsAnalyzer setDataSyncState:]
  -[HMDLogEventCloudSyncEventsAnalyzer fetchCount]
  -[HMDLogEventCloudSyncEventsAnalyzer setFetchCount:]
  -[HMDLogEventCloudSyncEventsAnalyzer eventCountersManager]
  -[HMDLogEventCloudSyncEventsAnalyzer eventFlagsManager]
  -[HMDLogEventCloudSyncEventsAnalyzer homeDataBytesFetched]
  -[HMDLogEventCloudSyncEventsAnalyzer homeDataBytesPushed]
  -[HMDLogEventCloudSyncEventsAnalyzer legacyHomeDataBytesFetched]
  -[HMDLogEventCloudSyncEventsAnalyzer legacyHomeDataBytesPushed]
  -[HMDLogEventCloudSyncEventsAnalyzer setEventCountersManager:]
  -[HMDLogEventCloudSyncEventsAnalyzer setEventFlagsManager:]
  -[HMDLogEventCloudSyncEventsAnalyzer processLogEvent:]
  -[HMDLogEventCloudSyncEventsAnalyzer initWithSupportedEventTypes:context:eventCountersManager:eventFlagsManager:]
  -[HMDLogEventCloudSyncEventsAnalyzer initWithSupportedEventTypes:context:]
  -[HMDLogEventCloudSyncEventsAnalyzer setUploadCount:]
  -[HMDLogEventCloudSyncEventsAnalyzer setUploadErrorCount:]
  -[HMDLogEventCloudSyncEventsAnalyzer setUploadMaximumDelayReached:]
  -[HMDLogEventCloudSyncEventsAnalyzer setHasDecryptionFailed:]
  -[HMDLogEventCloudSyncEventsAnalyzer setLastDecryptionFailed:]
  -[HMDLogEventCloudSyncEventsAnalyzer setHomeManagerFetchCount:]
  -[HMDLogEventCloudSyncEventsAnalyzer setHomeZoneFetchCount:]
  -[HMDLogEventCloudSyncEventsAnalyzer setHomeManagerUploadCount:]
  -[HMDLogEventCloudSyncEventsAnalyzer setHomeZoneUploadCount:]
  -[HMDLogEventCloudSyncEventsAnalyzer uploadCount]
  -[HMDLogEventCloudSyncEventsAnalyzer uploadErrorCount]
  -[HMDLogEventCloudSyncEventsAnalyzer uploadMaximumDelayReached]
  -[HMDLogEventCloudSyncEventsAnalyzer hasDecryptionFailed]
  -[HMDLogEventCloudSyncEventsAnalyzer lastDecryptionFailed]
  -[HMDLogEventCloudSyncEventsAnalyzer homeManagerFetchCount]
  -[HMDLogEventCloudSyncEventsAnalyzer homeZoneFetchCount]
  -[HMDLogEventCloudSyncEventsAnalyzer homeManagerUploadCount]
  -[HMDLogEventCloudSyncEventsAnalyzer homeZoneUploadCount]
  -[HMDLogEventCloudSyncEventsAnalyzer cloudSyncMetricForAWD]
  -[HMDLogEventCloudSyncEventsAnalyzer submitAWDCloudSyncMetric:]
  -[HMDLogEventCloudSyncEventsAnalyzer clearCloudSyncMetrics]
  -[HMDLogEventCloudSyncEventsAnalyzer reasonToCountMap]
  -[HMDLogEventCloudSyncEventsAnalyzer getTop:dictionary:]
  -[HMDLogEventCloudSyncEventsAnalyzer errorToCountMap]
  -[HMDLogEventCloudSyncEventsAnalyzer setLegacyHomeDataBytesPushed:]
  -[HMDLogEventCloudSyncEventsAnalyzer setHomeDataBytesPushed:]
  -[HMDLogEventCloudSyncEventsAnalyzer setLegacyHomeDataBytesFetched:]
  -[HMDLogEventCloudSyncEventsAnalyzer setHomeDataBytesFetched:]
  -[HMDLogEventCloudSyncEventsAnalyzer setReasonToCountMap:]
  -[HMDLogEventCloudSyncEventsAnalyzer setErrorToCountMap:]


HMDHomeDataPushDestination : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *username
 @property  HMDUser *user
 @property  NSString *destination
 @property  NSString *pushDestination
 @property  BOOL ignoreConfigCompare

  // instance methods
  -[HMDHomeDataPushDestination user]
  -[HMDHomeDataPushDestination destination]
  -[HMDHomeDataPushDestination username]
  -[HMDHomeDataPushDestination .cxx_destruct]
  -[HMDHomeDataPushDestination ignoreConfigCompare]
  -[HMDHomeDataPushDestination initWithUser:destination:]
  -[HMDHomeDataPushDestination pushDestination]
  -[HMDHomeDataPushDestination setIgnoreConfigCompare:]


HMDCharacteristicReadWriteLogEventManager : NSObject /usr/lib/libc++.1.dylib
 @property  HMFUnfairLock *lock
 @property  NSMutableDictionary *consecutiveFailureCountByHMDAccessoryUUID
 @property  NSMutableDictionary *timeOfFirstFailureByHMDAccessoryUUID

  // class methods
  +[HMDCharacteristicReadWriteLogEventManager sharedInstance]

  // instance methods
  -[HMDCharacteristicReadWriteLogEventManager init]
  -[HMDCharacteristicReadWriteLogEventManager .cxx_destruct]
  -[HMDCharacteristicReadWriteLogEventManager lock]
  -[HMDCharacteristicReadWriteLogEventManager timeOfFirstFailureByHMDAccessoryUUID]
  -[HMDCharacteristicReadWriteLogEventManager consecutiveFailureCountByHMDAccessoryUUID]
  -[HMDCharacteristicReadWriteLogEventManager handleSubmittedErrorCode:forAccessory:]
  -[HMDCharacteristicReadWriteLogEventManager consecutiveFailureCountForAccessory:]
  -[HMDCharacteristicReadWriteLogEventManager timeIntervalSinceFirstFailureForAccessory:]


HMDCharacteristicReadWriteLogEvent : HMDLogEvent <HMDCoreDuetLogEvent, HMDAWDLogEvent>
 @property  unsigned long duetEventType
 @property  NSArray *eventDataToLog
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *characteristicsToRead
 @property  HAPAccessory *hapAccessory
 @property  HMDAccessory *hmdAccessory
 @property  BOOL isWriteOperation
 @property  BOOL isTimedWrite
 @property  BOOL isLocal
 @property  long long linkType
 @property  NSUUID *transactionId
 @property  unsigned long triggerSource
 @property  BOOL isCached
 @property  NSString *primaryServiceType
 @property  BOOL isResidentAvailable
 @property  BOOL isRemoteAccessAllowed
 @property  BOOL isRemotelyReachable
 @property  unsigned long consecutiveFailureCount
 @property  double timeIntervalSinceFirstFailure
 @property  NSString *bundleId
 @property  unsigned int numAccessoriesInHome
 @property  unsigned int numNonEmptyScenesInHome
 @property  NSArray *writtenValues
 @property  NSString *transportProtocolVersion

  // class methods
  +[HMDCharacteristicReadWriteLogEvent uuid]
  +[HMDCharacteristicReadWriteLogEvent characteristicReadLogEvent:hmdAccessory:hapAccessory:source:isLocal:transactionId:isCached:bundleId:]
  +[HMDCharacteristicReadWriteLogEvent characteristicWriteLogEvent:hmdAccessory:hapAccessory:source:isTimedWrite:isLocal:transactionId:bundleId:writtenValues:]

  // instance methods
  -[HMDCharacteristicReadWriteLogEvent setLocal:]
  -[HMDCharacteristicReadWriteLogEvent linkType]
  -[HMDCharacteristicReadWriteLogEvent isCached]
  -[HMDCharacteristicReadWriteLogEvent .cxx_destruct]
  -[HMDCharacteristicReadWriteLogEvent primaryServiceType]
  -[HMDCharacteristicReadWriteLogEvent bundleId]
  -[HMDCharacteristicReadWriteLogEvent isLocal]
  -[HMDCharacteristicReadWriteLogEvent setIsLocal:]
  -[HMDCharacteristicReadWriteLogEvent isRemoteAccessAllowed]
  -[HMDCharacteristicReadWriteLogEvent characteristicsToRead]
  -[HMDCharacteristicReadWriteLogEvent transactionId]
  -[HMDCharacteristicReadWriteLogEvent hmdAccessory]
  -[HMDCharacteristicReadWriteLogEvent hapAccessory]
  -[HMDCharacteristicReadWriteLogEvent submitAtDate:error:]
  -[HMDCharacteristicReadWriteLogEvent initReadWriteLogEvent:hmdAccessory:hapAccessory:source:isWriteOperation:isTimedWrite:isLocal:transactionId:isCached:bundleId:writtenValues:]
  -[HMDCharacteristicReadWriteLogEvent isResidentAvailable]
  -[HMDCharacteristicReadWriteLogEvent setConsecutiveFailureCount:]
  -[HMDCharacteristicReadWriteLogEvent isTimedWrite]
  -[HMDCharacteristicReadWriteLogEvent transportProtocolVersion]
  -[HMDCharacteristicReadWriteLogEvent isRemotelyReachable]
  -[HMDCharacteristicReadWriteLogEvent consecutiveFailureCount]
  -[HMDCharacteristicReadWriteLogEvent AWDMessageType]
  -[HMDCharacteristicReadWriteLogEvent metricForAWD]
  -[HMDCharacteristicReadWriteLogEvent triggerSource]
  -[HMDCharacteristicReadWriteLogEvent isWriteOperation]
  -[HMDCharacteristicReadWriteLogEvent numAccessoriesInHome]
  -[HMDCharacteristicReadWriteLogEvent numNonEmptyScenesInHome]
  -[HMDCharacteristicReadWriteLogEvent duetEventType]
  -[HMDCharacteristicReadWriteLogEvent eventDataToLog]
  -[HMDCharacteristicReadWriteLogEvent writtenValues]
  -[HMDCharacteristicReadWriteLogEvent metadataForCharacteristicAtIndex:]
  -[HMDCharacteristicReadWriteLogEvent valueForCharacteristicAtIndex:]
  -[HMDCharacteristicReadWriteLogEvent timeIntervalSinceFirstFailure]
  -[HMDCharacteristicReadWriteLogEvent setTimeIntervalSinceFirstFailure:]


HMDSnapshotRequest : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  @? completion

  // instance methods
  -[HMDSnapshotRequest completion]
  -[HMDSnapshotRequest .cxx_destruct]
  -[HMDSnapshotRequest initWithCompletion:]


HMDNetworkRouterFirewallRuleCloudZoneFetchInfo : HMDNetworkRouterFirewallRuleManagerBackingStoreFetchHelper <HMFLogging>
 @property  NSSet *interestedRecordIDs
 @property  CKServerChangeToken *changeToken
 @property  CKServerChangeToken *originalChangeToken
 @property  HMBMirrorInput *mirrorInput
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo logCategory]

  // instance methods
  -[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo finishWithError:]
  -[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo changeToken]
  -[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo setChangeToken:]
  -[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo mirrorInput]
  -[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo initWithOptions:changeToken:promise:database:useAnonymousRequests:interestedRecordIDs:mirrorInput:]
  -[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo interestedRecordIDs]
  -[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo originalChangeToken]
  -[HMDNetworkRouterFirewallRuleCloudZoneFetchInfo setMirrorInput:]


HMDNetworkRouterFirewallRuleCloudZone : HMBCloudZone /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  BOOL useAnonymousRequests
 @property  NSSet *watchedRecordIDs
 @property  NSArray *signatureVerificationPublicKeys
 @property  NSSet *modifiedRecordIDsFromLastPull
 @property  NSMutableSet *uncommittedModifiedRecordIDsFromLastPull

  // class methods
  +[HMDNetworkRouterFirewallRuleCloudZone __maxSizeFromPreferenceWithKey:defaultValue:]
  +[HMDNetworkRouterFirewallRuleCloudZone __maxSizeForCKRecordString]
  +[HMDNetworkRouterFirewallRuleCloudZone __createBaseAccessoryIdentifierFromRecord:error:]
  +[HMDNetworkRouterFirewallRuleCloudZone __calculateDigestDataFromRecord:dataKey:dataAssetKey:maxDataSize:error:]
  +[HMDNetworkRouterFirewallRuleCloudZone __getSignatureDataFromRecord:signatureKey:signatureAssetKey:maxSignatureSize:error:]
  +[HMDNetworkRouterFirewallRuleCloudZone __verifyDigestDataAgainstSignatureFromRecord:digestData:signatureData:signatureVerificationPublicKeys:error:]
  +[HMDNetworkRouterFirewallRuleCloudZone __getDataFromRecord:dataKey:dataAssetKey:maxDataSize:error:]
  +[HMDNetworkRouterFirewallRuleCloudZone __maxSizeForCKRecordNetworkDeclarations]
  +[HMDNetworkRouterFirewallRuleCloudZone __maxSizeForCKRecordNetworkDeclarationsSignature]
  +[HMDNetworkRouterFirewallRuleCloudZone __verifyDataFromRecord:signatureVerificationPublicKeys:dataKey:dataAssetKey:maxDataSize:signatureKey:signatureAssetKey:maxSignatureSize:baseAccessoryIdentifier:data:error:]
  +[HMDNetworkRouterFirewallRuleCloudZone verifyNetworkDeclarationsFromRecord:signatureVerificationPublicKeys:baseAccessoryIdentifier:data:error:]
  +[HMDNetworkRouterFirewallRuleCloudZone __maxSizeForCKRecordPairedMetadata]
  +[HMDNetworkRouterFirewallRuleCloudZone __maxSizeForCKRecordPairedMetadataSignature]
  +[HMDNetworkRouterFirewallRuleCloudZone verifyNetworkDeclarationsFromRecord:signatureVerificationPublicKeys:error:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleCloudZone attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleCloudZone .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleCloudZone performCloudPullWithFetchToken:options:]
  -[HMDNetworkRouterFirewallRuleCloudZone startUpWithLocalZone:]
  -[HMDNetworkRouterFirewallRuleCloudZone signatureVerificationPublicKeys]
  -[HMDNetworkRouterFirewallRuleCloudZone decodeModelFrom:recordSource:error:]
  -[HMDNetworkRouterFirewallRuleCloudZone __fetchZoneChangesWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleCloudZone useAnonymousRequests]
  -[HMDNetworkRouterFirewallRuleCloudZone uncommittedModifiedRecordIDsFromLastPull]
  -[HMDNetworkRouterFirewallRuleCloudZone watchedRecordIDs]
  -[HMDNetworkRouterFirewallRuleCloudZone modifiedRecordIDsFromLastPull]
  -[HMDNetworkRouterFirewallRuleCloudZone setModifiedRecordIDsFromLastPull:]
  -[HMDNetworkRouterFirewallRuleCloudZone setUncommittedModifiedRecordIDsFromLastPull:]
  -[HMDNetworkRouterFirewallRuleCloudZone __recordChanged:fetchInfo:]
  -[HMDNetworkRouterFirewallRuleCloudZone __recordDeleted:recordType:fetchInfo:]
  -[HMDNetworkRouterFirewallRuleCloudZone __zoneChangeTokensUpdated:fetchInfo:]
  -[HMDNetworkRouterFirewallRuleCloudZone __zoneFetchCompletedWithChangeToken:error:moreComing:fetchInfo:]
  -[HMDNetworkRouterFirewallRuleCloudZone __zoneChangesCompleted:fetchInfo:]
  -[HMDNetworkRouterFirewallRuleCloudZone __noteUpdatedRecordID:]
  -[HMDNetworkRouterFirewallRuleCloudZone __commitLocalChanges:error:]
  -[HMDNetworkRouterFirewallRuleCloudZone __finalizeUpdatedRecordIDs]
  -[HMDNetworkRouterFirewallRuleCloudZone __canRecoverFromError:fetchInfo:]
  -[HMDNetworkRouterFirewallRuleCloudZone __retryFetchWithFetchInfo:]
  -[HMDNetworkRouterFirewallRuleCloudZone initWithCloudDatabase:state:useAnonymousRequests:watchedRecordIDs:signatureVerificationPublicKeys:]


HMDUserDataControllerTimerCreator : NSObject /usr/lib/libc++.1.dylib <HMDUserDataControllerTimerCreator>
  // instance methods
  -[HMDUserDataControllerTimerCreator createExponentialBackoffTimerForZoneFetch]


HMDUserDataController : NSObject /usr/lib/libc++.1.dylib <HMDAssistantAccessControlModelUpdateReceiver, HMDMediaContentProfileAccessControlModelUpdateReceiver, HMFLogging, HMFTimerDelegate>
 @property  HMFUnfairLock *lock
 @property  NSUUID *homeUUID
 @property  NSUUID *userUUID
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  <HMDUserDataControllerDelegate> *delegate
 @property  <HMDUserDataControllerTimerCreator> *timerCreator
 @property  <HMDSettingsControllerProtocol> *sharedSettingsController
 @property  <HMDSettingsControllerProtocol> *privateSettingsController
 @property  NSUUID *sharedSettingsRootUUID
 @property  NSUUID *assistantAccessControlModelUUID
 @property  NSMutableSet *assistantAccessControlAccessoryUUIDs
 @property  BOOL assistantAccessControlRequiresAuthenticationForSecureRequests
 @property  NSUUID *mediaContentProfileAccessControlModelUUID
 @property  NSMutableSet *mediaContentProfileAccessControlAccessories
 @property  NSUUID *privateSettingsRootUUID
 @property  unsigned long state
 @property  HMFTimer *sharedZoneFirstLoadTimer
 @property  HMFTimer *privateZoneFirstLoadTimer
 @property  NSArray *assistantAccessControlAccessoriesToEncode
 @property  NSArray *mediaContentProfileAccessControlAccessoriesToEncode
 @property  NSDictionary *sharedSettingValuesByKeyPathForAWD
 @property  NSDictionary *privateSettingValuesByKeyPathForAWD
 @property  HMBModel *assistantAccessControlModelToReset
 @property  BOOL isInitialized
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserDataController logCategory]

  // instance methods
  -[HMDUserDataController timerDidFire:]
  -[HMDUserDataController configure]
  -[HMDUserDataController logIdentifier]
  -[HMDUserDataController userUUID]
  -[HMDUserDataController setState:]
  -[HMDUserDataController .cxx_destruct]
  -[HMDUserDataController isInitialized]
  -[HMDUserDataController lock]
  -[HMDUserDataController encodeWithCoder:]
  -[HMDUserDataController clientQueue]
  -[HMDUserDataController state]
  -[HMDUserDataController homeUUID]
  -[HMDUserDataController delegate]
  -[HMDUserDataController privateSettingsController]
  -[HMDUserDataController handleRemovedAccessory:]
  -[HMDUserDataController privateSettingValuesByKeyPathForAWD]
  -[HMDUserDataController sharedSettingValuesByKeyPathForAWD]
  -[HMDUserDataController assistantAccessControlModelUpdated:previousModel:completion:]
  -[HMDUserDataController mediaContentProfileAccessControlModelUpdated:previousModel:completion:]
  -[HMDUserDataController assistantAccessControlModelUUID]
  -[HMDUserDataController initWithDelegate:queue:userID:homeID:sharedSettingsController:privateSettingsController:timerCreator:]
  -[HMDUserDataController assistantAccessControlAccessoryUUIDs]
  -[HMDUserDataController mediaContentProfileAccessControlAccessories]
  -[HMDUserDataController sharedSettingsController]
  -[HMDUserDataController setAssistantAccessControlModelUUID:]
  -[HMDUserDataController mediaContentProfileAccessControlModelUUID]
  -[HMDUserDataController setMediaContentProfileAccessControlModelUUID:]
  -[HMDUserDataController setSharedSettingsRootUUID:]
  -[HMDUserDataController setAssistantAccessControlAccessoryUUIDs:]
  -[HMDUserDataController setAssistantAccessControlRequiresAuthenticationForSecureRequests:]
  -[HMDUserDataController setMediaContentProfileAccessControlAccessories:]
  -[HMDUserDataController eventDidInitializeSharedZone]
  -[HMDUserDataController setPrivateSettingsRootUUID:]
  -[HMDUserDataController eventDidInitializePrivateZone]
  -[HMDUserDataController initializeSharedZoneController:userDataModel:]
  -[HMDUserDataController _invalidateSharedZoneFirstLoadTimer]
  -[HMDUserDataController _startSharedZoneFirstLoadTimer]
  -[HMDUserDataController sharedZoneFirstLoadTimer]
  -[HMDUserDataController timerCreator]
  -[HMDUserDataController setSharedZoneFirstLoadTimer:]
  -[HMDUserDataController initializePrivateZoneController:userDataModel:]
  -[HMDUserDataController _invalidatePrivateZoneFirstLoadTimer]
  -[HMDUserDataController _startPrivateZoneFirstLoadTimer]
  -[HMDUserDataController privateZoneFirstLoadTimer]
  -[HMDUserDataController setPrivateZoneFirstLoadTimer:]
  -[HMDUserDataController performFirstRunOperationsOnSharedZoneController:]
  -[HMDUserDataController performFirstRunOperationsOnPrivateZoneController:]
  -[HMDUserDataController _startupSharedZone]
  -[HMDUserDataController _startupPrivateZone]
  -[HMDUserDataController assistantAccessControlRequiresAuthenticationForSecureRequests]
  -[HMDUserDataController assistantAccessControlModelRemoved:completion:]
  -[HMDUserDataController mediaContentProfileAccessControlModelRemoved:completion:]
  -[HMDUserDataController initWithDelegate:queue:userID:homeID:sharedSettingsController:privateSettingsController:]
  -[HMDUserDataController assistantAccessControlAccessoriesToEncode]
  -[HMDUserDataController mediaContentProfileAccessControlAccessoriesToEncode]
  -[HMDUserDataController handleStartForZoneController:]
  -[HMDUserDataController handleAssistantAccessControlAccessoryUUIDsUpdated:requireAuthenticationForSecureRequests:completion:]
  -[HMDUserDataController handleMediaContentProfileAccessControlUpdatedAccessoryUUIDs:completion:]
  -[HMDUserDataController assistantAccessControlModelToReset]
  -[HMDUserDataController sharedSettingsRootUUID]
  -[HMDUserDataController privateSettingsRootUUID]


HMDIDSMessageContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *identifier
 @property  HMFMessageDestination *destination
 @property  NSDictionary *userInfo

  // instance methods
  -[HMDIDSMessageContext destination]
  -[HMDIDSMessageContext init]
  -[HMDIDSMessageContext .cxx_destruct]
  -[HMDIDSMessageContext identifier]
  -[HMDIDSMessageContext userInfo]
  -[HMDIDSMessageContext initWithIdentifier:destination:userInfo:]


HMDHomeKitVersion : HMFVersion /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSSecureCoding>
  // class methods
  +[HMDHomeKitVersion version]


HMDNetworkRouterFirewallRuleWANAddressRange : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMFNetAddress *addressStart
 @property  HMFNetAddress *addressEnd

  // instance methods
  -[HMDNetworkRouterFirewallRuleWANAddressRange attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleWANAddressRange .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleWANAddressRange prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRuleWANAddressRange addressStart]
  -[HMDNetworkRouterFirewallRuleWANAddressRange addressEnd]
  -[HMDNetworkRouterFirewallRuleWANAddressRange initWithAddressStart:addressEnd:]


HMDNetworkRouterFirewallRuleWANSubject : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSArray *hostnames
 @property  NSArray *addresses
 @property  HMDNetworkRouterFirewallRuleWANAddressRange *addressRange

  // instance methods
  -[HMDNetworkRouterFirewallRuleWANSubject addresses]
  -[HMDNetworkRouterFirewallRuleWANSubject attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleWANSubject .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleWANSubject prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRuleWANSubject hostnames]
  -[HMDNetworkRouterFirewallRuleWANSubject addressRange]
  -[HMDNetworkRouterFirewallRuleWANSubject initWithHostnames:addresses:addressRange:]


HMDNetworkRouterFirewallRuleWAN : HMDNetworkRouterFirewallRule
 @property  unsigned long purpose
 @property  unsigned char transportProtocol
 @property  HMDNetworkRouterFirewallRuleWANSubject *subject
 @property  unsigned short portStart
 @property  unsigned short portEnd
 @property  NSArray *icmpTypes

  // class methods
  +[HMDNetworkRouterFirewallRuleWAN ipAddressAny]
  +[HMDNetworkRouterFirewallRuleWAN createWithJSONDictionary:error:]
  +[HMDNetworkRouterFirewallRuleWAN __decodeAddresses:subject:]
  +[HMDNetworkRouterFirewallRuleWAN ipAddressAnyIPv4]
  +[HMDNetworkRouterFirewallRuleWAN ipAddressAnyIPv6]
  +[HMDNetworkRouterFirewallRuleWAN __nonWildcardAddressFrom:key:]
  +[HMDNetworkRouterFirewallRuleWAN __decodeHostnames:subject:]
  +[HMDNetworkRouterFirewallRuleWAN __decodeAddress:subject:]
  +[HMDNetworkRouterFirewallRuleWAN __decodeAddressRange:endValue:subject:]
  +[HMDNetworkRouterFirewallRuleWAN __decodeType:transportProtocol:error:]
  +[HMDNetworkRouterFirewallRuleWAN __decodeFlags:critical:]
  +[HMDNetworkRouterFirewallRuleWAN __decodePurpose:purpose:]
  +[HMDNetworkRouterFirewallRuleWAN __decodeSubject:subject:]
  +[HMDNetworkRouterFirewallRuleWAN __decodePorts:portStart:portEnd:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleWAN transportProtocol]
  -[HMDNetworkRouterFirewallRuleWAN attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleWAN purpose]
  -[HMDNetworkRouterFirewallRuleWAN .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleWAN subject]
  -[HMDNetworkRouterFirewallRuleWAN portEnd]
  -[HMDNetworkRouterFirewallRuleWAN prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRuleWAN icmpTypes]
  -[HMDNetworkRouterFirewallRuleWAN portStart]
  -[HMDNetworkRouterFirewallRuleWAN initWithJSONDictionary:name:critical:purpose:transportProtocol:subject:portStart:portEnd:icmpTypes:]


HMDCloudZoneChange : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *identifier
 @property  HMDCloudZone *cloudZone
 @property  HMDCloudGroupChange *rootGroupChange
 @property  CKRecordID *privateZoneRootRecordID
 @property  NSArray *allTransactionStoreRowIDs
 @property  NSArray *processedTransactionStoreRowIDs
 @property  BOOL temporaryCache
 @property  BOOL decryptionFailed
 @property  BOOL encryptionFailed
 @property  BOOL controllerIdentifierChanged
 @property  NSArray *objectChanges
 @property  BOOL hasValidChanges
 @property  BOOL doRecordsExistInCache

  // class methods
  +[HMDCloudZoneChange shortDescription]

  // instance methods
  -[HMDCloudZoneChange init]
  -[HMDCloudZoneChange .cxx_destruct]
  -[HMDCloudZoneChange identifier]
  -[HMDCloudZoneChange shortDescription]
  -[HMDCloudZoneChange cloudZone]
  -[HMDCloudZoneChange setCloudZone:]
  -[HMDCloudZoneChange allTransactionStoreRowIDs]
  -[HMDCloudZoneChange hasValidChanges]
  -[HMDCloudZoneChange decryptionFailed]
  -[HMDCloudZoneChange changeWithObjectID:]
  -[HMDCloudZoneChange cachedCloudRecordWithObjectID:]
  -[HMDCloudZoneChange doRecordsExistInCache]
  -[HMDCloudZoneChange changeWithRecordName:]
  -[HMDCloudZoneChange isTemporaryCache]
  -[HMDCloudZoneChange encryptionFailed]
  -[HMDCloudZoneChange processedTransactionStoreRowIDs]
  -[HMDCloudZoneChange cachedCloudRecordWithObjectID:completionHandler:]
  -[HMDCloudZoneChange addChangeWithObjectChange:]
  -[HMDCloudZoneChange addChangeWithRecord:]
  -[HMDCloudZoneChange addChangeWithDeletedRecordID:]
  -[HMDCloudZoneChange loadCloudRecordsAndDetermineDeletesFromCache:]
  -[HMDCloudZoneChange moreChangesToProcess]
  -[HMDCloudZoneChange setAllChangedAsProcessed]
  -[HMDCloudZoneChange removeChangeWithObjectID:]
  -[HMDCloudZoneChange fetchBatchToUpload:]
  -[HMDCloudZoneChange setSaveAsProcessedWithRecord:]
  -[HMDCloudZoneChange resetRecordWithRecordID:]
  -[HMDCloudZoneChange setDeleteAsProcessedWithRecordID:]
  -[HMDCloudZoneChange flushAllChangesToCache]
  -[HMDCloudZoneChange objectChanges]
  -[HMDCloudZoneChange controllerIdentifierChanged]
  -[HMDCloudZoneChange privateZoneRootRecordID]
  -[HMDCloudZoneChange initWithZone:temporaryCache:]
  -[HMDCloudZoneChange doesRecordExistInCacheWithObjectID:]
  -[HMDCloudZoneChange doesRecordExistWithObjectID:]
  -[HMDCloudZoneChange rootGroupChange]
  -[HMDCloudZoneChange setRootGroupChange:]


HMDCloudLegacyZoneChange : HMDCloudZoneChange
  // instance methods
  -[HMDCloudLegacyZoneChange decryptionFailed]
  -[HMDCloudLegacyZoneChange controllerIdentifierChanged]
  -[HMDCloudLegacyZoneChange initWithZone:temporaryCache:]


HMDCloudMetadataZoneChange : HMDCloudZoneChange
  // instance methods
  -[HMDCloudMetadataZoneChange initWithZone:temporaryCache:]


HMDCloudHomeManagerZoneChange : HMDCloudZoneChange
  // instance methods
  -[HMDCloudHomeManagerZoneChange initWithZone:temporaryCache:]


HMDCloudHomeZoneChange : HMDCloudZoneChange
  // instance methods
  -[HMDCloudHomeZoneChange initWithZone:temporaryCache:]


HMDRelaySessionEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long actionType
 @property  long long statusCode

  // class methods
  +[HMDRelaySessionEvent initialize]
  +[HMDRelaySessionEvent uuid]
  +[HMDRelaySessionEvent stringForActionType:]
  +[HMDRelaySessionEvent relaySessionEventWithActionType:]

  // instance methods
  -[HMDRelaySessionEvent actionType]
  -[HMDRelaySessionEvent initWithActionType:]
  -[HMDRelaySessionEvent setStatusCode:]
  -[HMDRelaySessionEvent statusCode]
  -[HMDRelaySessionEvent AWDMessageType]
  -[HMDRelaySessionEvent metricForAWD]


HMDCameraStreamControlManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  <HMDCameraStreamControlManagerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  HMDAccessory *accessory
 @property  HMDService *streamManagementService
 @property  NSNumber *slotIdentifier
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDCameraStreamSessionID *sessionID
 @property  HMDCameraStreamSnapshotHandler *streamSnapshotHandler
 @property  HMDCameraStreamMetrics *streamMetrics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraStreamControlManager logCategory]

  // instance methods
  -[HMDCameraStreamControlManager sessionID]
  -[HMDCameraStreamControlManager logIdentifier]
  -[HMDCameraStreamControlManager delegateQueue]
  -[HMDCameraStreamControlManager .cxx_destruct]
  -[HMDCameraStreamControlManager workQueue]
  -[HMDCameraStreamControlManager managerProtocol]
  -[HMDCameraStreamControlManager _reportError:]
  -[HMDCameraStreamControlManager accessory]
  -[HMDCameraStreamControlManager delegate]
  -[HMDCameraStreamControlManager slotIdentifier]
  -[HMDCameraStreamControlManager setSlotIdentifier:]
  -[HMDCameraStreamControlManager streamSnapshotHandler]
  -[HMDCameraStreamControlManager _callStreamStopped:]
  -[HMDCameraStreamControlManager initWithSessionID:workQueue:streamSnapshotHandler:delegate:delegateQueue:accessory:streamManagementService:isLocal:]
  -[HMDCameraStreamControlManager _reportInternalErrorCode:]
  -[HMDCameraStreamControlManager _reportErrorCode:]
  -[HMDCameraStreamControlManager _callStreamNegotiated:]
  -[HMDCameraStreamControlManager _cleanUpStreamSession:]
  -[HMDCameraStreamControlManager _callStreamStarted]
  -[HMDCameraStreamControlManager _callStreamRemoteConnectionSetup]
  -[HMDCameraStreamControlManager _callStreamFirstFrameReceived:aspectRatio:slotIdentifier:]
  -[HMDCameraStreamControlManager _callStreamReconfigured]
  -[HMDCameraStreamControlManager streamMetrics]
  -[HMDCameraStreamControlManager streamManagementService]


HMDRelayCertificateRequest : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSData *publicKey
 @property  NSString *challengeIdentifier
 @property  NSData *challengeResponse
 @property  NSData *challengeCertificate

  // class methods
  +[HMDRelayCertificateRequest shortDescription]

  // instance methods
  -[HMDRelayCertificateRequest publicKey]
  -[HMDRelayCertificateRequest init]
  -[HMDRelayCertificateRequest challengeResponse]
  -[HMDRelayCertificateRequest .cxx_destruct]
  -[HMDRelayCertificateRequest descriptionWithPointer:]
  -[HMDRelayCertificateRequest shortDescription]
  -[HMDRelayCertificateRequest challengeIdentifier]
  -[HMDRelayCertificateRequest initWithPublicKey:challengeIdentifier:challengeResponse:challengeCertificate:]
  -[HMDRelayCertificateRequest serializeWithError:]
  -[HMDRelayCertificateRequest challengeCertificate]


HMDRelayActivationSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDFairPlaySAPSessionDelegate, HMFTimerDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long state
 @property  HMDFairPlaySAPSession *fairPlaySAPSession
 @property  HMFTimer *fairPlaySessionTimer
 @property  NSURLSession *urlSession
 @property  NSOperationQueue *requestOperationQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRelayActivationSession sharedSession]
  +[HMDRelayActivationSession logCategory]

  // instance methods
  -[HMDRelayActivationSession timerDidFire:]
  -[HMDRelayActivationSession urlSession]
  -[HMDRelayActivationSession init]
  -[HMDRelayActivationSession setState:]
  -[HMDRelayActivationSession .cxx_destruct]
  -[HMDRelayActivationSession workQueue]
  -[HMDRelayActivationSession requestOperationQueue]
  -[HMDRelayActivationSession state]
  -[HMDRelayActivationSession requestChallengeWithCompletionQueue:completionHandler:]
  -[HMDRelayActivationSession requestCertificateWithCertificateRequest:completionQueue:completionHandler:]
  -[HMDRelayActivationSession session:didCloseWithError:]
  -[HMDRelayActivationSession session:didReceiveServerCertificateRequestWithCompletionHandler:]
  -[HMDRelayActivationSession session:didReceiveClientExchangeData:completionHandler:]
  -[HMDRelayActivationSession _setupFairPlaySession]
  -[HMDRelayActivationSession _teardownFairPlaySession]
  -[HMDRelayActivationSession setFairPlaySAPSession:]
  -[HMDRelayActivationSession fairPlaySAPSession]
  -[HMDRelayActivationSession _cancelAllPendingRequestOperations]
  -[HMDRelayActivationSession fairPlaySessionTimer]
  -[HMDRelayActivationSession _resumeRequestOperations]
  -[HMDRelayActivationSession _suspendRequestOperations]
  -[HMDRelayActivationSession setFairPlaySessionTimer:]
  -[HMDRelayActivationSession _handleFairPlayCertificateResponseData:response:error:completionHandler:]
  -[HMDRelayActivationSession _handleFairPlaySetupExchangeResponseData:response:error:completionHandler:]
  -[HMDRelayActivationSession _handleChallengeResponseData:response:error:fairPlaySession:completionQueue:completionHandler:]
  -[HMDRelayActivationSession _addRequestOperation:]
  -[HMDRelayActivationSession _verifyURLResponse:responseData:fairPlaySession:completionHandler:]
  -[HMDRelayActivationSession _handleCertificateResponseData:response:error:fairPlaySession:completionQueue:completionHandler:]
  -[HMDRelayActivationSession _requestFairPlayCertificateWithCompletionHandler:]
  -[HMDRelayActivationSession _requestFairPlaySetupExchangeWithExchangeData:completionHandler:]


HMDAccessoryVersion : HMFSoftwareVersion /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying, NSSecureCoding>
 @property  NSString *rawVersionString

  // class methods
  +[HMDAccessoryVersion supportsSecureCoding]

  // instance methods
  -[HMDAccessoryVersion .cxx_destruct]
  -[HMDAccessoryVersion encodeWithCoder:]
  -[HMDAccessoryVersion initWithVersionString:]
  -[HMDAccessoryVersion initWithCoder:]
  -[HMDAccessoryVersion rawVersionString]


HMDCameraSnapshotIDSStreamReceiver : HMDCameraSnapshotIDSStream <IDSServiceDelegate, IDSSessionDelegate, HMFLogging>
 @property  IDSSession *idsSession
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  <HMDCameraSnapshotIDSStreamReceiverDelegate> *delegate
 @property  HMDSnapshotFile *snapshotFile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotIDSStreamReceiver logCategory]

  // instance methods
  -[HMDCameraSnapshotIDSStreamReceiver logIdentifier]
  -[HMDCameraSnapshotIDSStreamReceiver setDelegateQueue:]
  -[HMDCameraSnapshotIDSStreamReceiver delegateQueue]
  -[HMDCameraSnapshotIDSStreamReceiver dealloc]
  -[HMDCameraSnapshotIDSStreamReceiver .cxx_destruct]
  -[HMDCameraSnapshotIDSStreamReceiver setDelegate:]
  -[HMDCameraSnapshotIDSStreamReceiver delegate]
  -[HMDCameraSnapshotIDSStreamReceiver service:account:incomingResourceAtURL:metadata:fromID:context:]
  -[HMDCameraSnapshotIDSStreamReceiver idsSession]
  -[HMDCameraSnapshotIDSStreamReceiver setIdsSession:]
  -[HMDCameraSnapshotIDSStreamReceiver snapshotFile]
  -[HMDCameraSnapshotIDSStreamReceiver _callFileReceived:]
  -[HMDCameraSnapshotIDSStreamReceiver initWithSessionID:workQueue:snapshotFile:delegate:queue:]


HMDCameraClipManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMBLocalZoneModelObserver, HMFLogging, HMFMessageReceiver, HMDDatabaseZoneManagerDataSource, HMDDatabaseZoneManagerDelegate, HMDActiveXPCClientConnectionsPeriodicTimerDelegate, HMDLogEventSubmitting>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDDatabaseZoneManager *zoneManager
 @property  HMDCameraClipsQuotaManager *quotaManager
 @property  HMDCameraSignificantEventFaceClassificationResolver *faceClassificationResolver
 @property  HMDActiveXPCClientConnectionsPeriodicTimer *clientConnectionsTimer
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSUUID *cameraProfileUUID
 @property  <HMDFileManager> *fileManager
 @property  HMBLocalZone *localZone
 @property  HMBCloudZone *cloudZone
 @property  HMDCameraClipFeedbackManager *feedbackManager
 @property  unsigned long fetchBatchLimit
 @property  @? fetchServerFactory
 @property  <HMDCameraClipManagerDelegate> *delegate
 @property  BOOL hasWriteAccess
 @property  BOOL hasStartedUpCloudZone
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMDLogEventDispatcher *logEventDispatcher

  // class methods
  +[HMDCameraClipManager logCategory]
  +[HMDCameraClipManager maximumClipDuration]

  // instance methods
  -[HMDCameraClipManager fileManager]
  -[HMDCameraClipManager messageTargetUUID]
  -[HMDCameraClipManager zoneManager]
  -[HMDCameraClipManager messageReceiveQueue]
  -[HMDCameraClipManager logIdentifier]
  -[HMDCameraClipManager .cxx_destruct]
  -[HMDCameraClipManager workQueue]
  -[HMDCameraClipManager initWithCameraProfile:]
  -[HMDCameraClipManager localZone]
  -[HMDCameraClipManager home]
  -[HMDCameraClipManager messageDispatcher]
  -[HMDCameraClipManager cameraProfileUUID]
  -[HMDCameraClipManager setDelegate:]
  -[HMDCameraClipManager delegate]
  -[HMDCameraClipManager remove]
  -[HMDCameraClipManager cloudZone]
  -[HMDCameraClipManager setCloudZone:]
  -[HMDCameraClipManager localZone:didProcessModelDeletion:]
  -[HMDCameraClipManager localZone:didProcessModelCreation:]
  -[HMDCameraClipManager localZone:didProcessModelUpdate:]
  -[HMDCameraClipManager setLocalZone:]
  -[HMDCameraClipManager hasWriteAccess]
  -[HMDCameraClipManager manager:shouldShareWithUser:]
  -[HMDCameraClipManager manager:shouldGrantWriteAccessToUser:]
  -[HMDCameraClipManager areShareModificationsEnabledForManager:]
  -[HMDCameraClipManager zoneManager:shouldRequestShareInvitationFromUser:]
  -[HMDCameraClipManager zoneManagerDidStart:]
  -[HMDCameraClipManager zoneManagerDidStop:]
  -[HMDCameraClipManager zoneManager:didReceiveMessageWithUserInfo:]
  -[HMDCameraClipManager hasStartedUpCloudZone]
  -[HMDCameraClipManager performCloudPull]
  -[HMDCameraClipManager configureWithHome:]
  -[HMDCameraClipManager submitLogEvent:error:]
  -[HMDCameraClipManager logEventDispatcher]
  -[HMDCameraClipManager handleUserCamerasAccessLevelDidChangeNotification:]
  -[HMDCameraClipManager handleUserRemoteAccessDidChangeNotification:]
  -[HMDCameraClipManager handleHomePersonManagerSettingsDidChangeNotification:]
  -[HMDCameraClipManager significantEventsWithDateInterval:]
  -[HMDCameraClipManager significantEventsForClipContainingDate:]
  -[HMDCameraClipManager faceClassificationResolver]
  -[HMDCameraClipManager handleUserPrivilegeDidChangeNotification:]
  -[HMDCameraClipManager clientConnectionsTimerDidFire:]
  -[HMDCameraClipManager handleSubscribeMessage:]
  -[HMDCameraClipManager handleUnsubscribeMessage:]
  -[HMDCameraClipManager handlePerformCloudPullMessage:]
  -[HMDCameraClipManager clientConnectionsTimer]
  -[HMDCameraClipManager fetchServerFactory]
  -[HMDCameraClipManager _performCloudPull]
  -[HMDCameraClipManager setFetchServerFactory:]
  -[HMDCameraClipManager initWithZoneManager:quotaManager:faceClassificationResolver:clientConnectionsTimer:messageDispatcher:workQueue:cameraProfileUUID:fileManager:]
  -[HMDCameraClipManager _significantEventModelsForClipWithUUID:]
  -[HMDCameraClipManager _significantEventFromSignificantEventModel:]
  -[HMDCameraClipManager _fetchSignificantEventsWithDateInterval:isAscending:error:handler:]
  -[HMDCameraClipManager handleFetchPosterFramesAssetContextMessage:]
  -[HMDCameraClipManager handleFetchVideoSegmentsAssetContextMessage:]
  -[HMDCameraClipManager handleFetchClipMessage:]
  -[HMDCameraClipManager handleFetchClipsMessage:]
  -[HMDCameraClipManager handleFetchClipForSignificantEventMessage:]
  -[HMDCameraClipManager handleFetchCountOfClipsMessage:]
  -[HMDCameraClipManager handleFetchHeroFrameDataRepresentationMessage:]
  -[HMDCameraClipManager handleFetchHeroFrameURLMessage:]
  -[HMDCameraClipManager handleFetchFaceCropDataRepresentationMessage:]
  -[HMDCameraClipManager handleFetchFaceCropURLMessage:]
  -[HMDCameraClipManager handleFetchSignificantEventsMessage:]
  -[HMDCameraClipManager handleDeleteClipMessage:]
  -[HMDCameraClipManager handleDeleteAllClipsMessage:]
  -[HMDCameraClipManager handleHandleFaceMisclassificationMessage:]
  -[HMDCameraClipManager handleRemoteHandleFaceMisclassificationMessage:]
  -[HMDCameraClipManager handleImportClipsMessage:]
  -[HMDCameraClipManager _fetchHeroFrameURLForSignificantEventModel:]
  -[HMDCameraClipManager quotaManager]
  -[HMDCameraClipManager _cleanUpClipsAndSignificantEventsForInitialStartup:]
  -[HMDCameraClipManager _fetchClipsWithDateInterval:isAscending:error:handler:]
  -[HMDCameraClipManager _faceClassificationsForSignificantEventWithUUID:]
  -[HMDCameraClipManager _significantEventModelsWithUUIDs:]
  -[HMDCameraClipManager significantEventsForClipWithUUID:]
  -[HMDCameraClipManager _cleanUpIncompleteClipsForInitialStartup:]
  -[HMDCameraClipManager _cleanUpExpiredClips]
  -[HMDCameraClipManager _cleanUpOrphanedSignficantEvents]
  -[HMDCameraClipManager fetchBatchLimit]
  -[HMDCameraClipManager _removeClipsWithUUIDs:options:]
  -[HMDCameraClipManager _fetchAssetContextForProperty:forClipModel:]
  -[HMDCameraClipManager _notifyForChangedSignificantEventModel:mirrorOutputFuture:]
  -[HMDCameraClipManager _notifyTransportsOfUpdatedClips:removedClipUUIDs:]
  -[HMDCameraClipManager _handleChangedClipModel:wasCreated:mirrorOutputFuture:]
  -[HMDCameraClipManager _notifyTransportsOfUpdatedSignificantEvents:removedSignificantEventUUIDs:]
  -[HMDCameraClipManager _notifyPrimaryResidentAboutFaceMisclassificationForFaceCropData:personUUID:personManagerUUID:]
  -[HMDCameraClipManager _fetchAssetContextForMessage:propertyName:]
  -[HMDCameraClipManager _fetchCanonicalHeroFrameURLForClipModel:]
  -[HMDCameraClipManager _fetchFaceCropURLForSignificantEventModel:]
  -[HMDCameraClipManager _significantEventsWithUUIDs:]
  -[HMDCameraClipManager _handleFaceMisclassificationForFaceCropURL:personUUID:personManagerUUID:significantEventModel:]
  -[HMDCameraClipManager _removeAllFaceClassificationModels]
  -[HMDCameraClipManager _handleChangedSignificantEventNotificationModel:mirrorOutputFuture:]
  -[HMDCameraClipManager _handleChangedFaceClassificationModel:]
  -[HMDCameraClipManager setFeedbackManager:]
  -[HMDCameraClipManager feedbackManager]
  -[HMDCameraClipManager setHasWriteAccess:]
  -[HMDCameraClipManager heroFrameURLForSignificantEventWithUUID:]
  -[HMDCameraClipManager fetchHeroFrameURLForSignificantEventWithUUID:]
  -[HMDCameraClipManager enableCloudStorage]
  -[HMDCameraClipManager disableCloudStorage]
  -[HMDCameraClipManager cleanUpClipsAndSignificantEvents]
  -[HMDCameraClipManager setFetchBatchLimit:]


HMDSettingGroup : NSObject /usr/lib/libc++.1.dylib <HMDSettingGroup>
 @property  NSMutableSet *settingsInternal
 @property  NSMutableSet *groupsInternal
 @property  NSUUID *identifier
 @property  NSUUID *parentIdentifier
 @property  NSString *name
 @property  NSArray *settings
 @property  NSArray *groups
 @property  NSString *keyPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSettingGroup supportsSecureCoding]

  // instance methods
  -[HMDSettingGroup groups]
  -[HMDSettingGroup setKeyPath:]
  -[HMDSettingGroup addGroup:]
  -[HMDSettingGroup addSetting:]
  -[HMDSettingGroup .cxx_destruct]
  -[HMDSettingGroup name]
  -[HMDSettingGroup keyPath]
  -[HMDSettingGroup encodeWithCoder:]
  -[HMDSettingGroup identifier]
  -[HMDSettingGroup settings]
  -[HMDSettingGroup parentIdentifier]
  -[HMDSettingGroup initWithModel:]
  -[HMDSettingGroup initWithCoder:]
  -[HMDSettingGroup initWithIdentifier:parentIdentifier:name:groups:settings:]
  -[HMDSettingGroup settingsInternal]
  -[HMDSettingGroup groupsInternal]
  -[HMDSettingGroup setSettingsInternal:]
  -[HMDSettingGroup setGroupsInternal:]


HMDUnpairedHAPAccessoryProgressHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *accessoryUUID
 @property  @? progressHandler

  // instance methods
  -[HMDUnpairedHAPAccessoryProgressHandler setAccessoryUUID:]
  -[HMDUnpairedHAPAccessoryProgressHandler accessoryUUID]
  -[HMDUnpairedHAPAccessoryProgressHandler .cxx_destruct]
  -[HMDUnpairedHAPAccessoryProgressHandler setProgressHandler:]
  -[HMDUnpairedHAPAccessoryProgressHandler progressHandler]
  -[HMDUnpairedHAPAccessoryProgressHandler initWithAccessoryUUID:progressHandler:]


HMDUnpairedHAPAccessoryPairingInformation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  long long linkType
 @property  HMFTimer *pairingInterruptionTimer
 @property  @? addAccessoryCompletionHandler
 @property  @? addAccessoryProgressHandler
 @property  @? setupCodeProviderCompletionHandler
 @property  HMFTimer *pairingRetryTimer
 @property  HMFTimer *reconfirmTimer
 @property  BOOL allowAddUnauthenticatedAccessory
 @property  BOOL provideNetworkCredentialsToAccessory
 @property  BOOL setupCodeProvided
 @property  BOOL needsUserConsent
 @property  HMFActivity *pairingActivity
 @property  HAPAccessoryConfiguration *hapAccessoryConfiguration
 @property  NSString *accessoryName
 @property  NSUUID *accessoryUUID
 @property  NSString *accessoryServerIdentifier
 @property  NSString *homeName
 @property  NSString *setupCode
 @property  NSString *setupID
 @property  NSData *ownershipToken
 @property  BOOL wacAccessory
 @property  BOOL legacyWAC

  // instance methods
  -[HMDUnpairedHAPAccessoryPairingInformation setupID]
  -[HMDUnpairedHAPAccessoryPairingInformation setAccessoryUUID:]
  -[HMDUnpairedHAPAccessoryPairingInformation setAccessoryName:]
  -[HMDUnpairedHAPAccessoryPairingInformation setupCode]
  -[HMDUnpairedHAPAccessoryPairingInformation setSetupCode:]
  -[HMDUnpairedHAPAccessoryPairingInformation accessoryServerIdentifier]
  -[HMDUnpairedHAPAccessoryPairingInformation setAccessoryServerIdentifier:]
  -[HMDUnpairedHAPAccessoryPairingInformation setHomeName:]
  -[HMDUnpairedHAPAccessoryPairingInformation linkType]
  -[HMDUnpairedHAPAccessoryPairingInformation setSetupID:]
  -[HMDUnpairedHAPAccessoryPairingInformation accessoryUUID]
  -[HMDUnpairedHAPAccessoryPairingInformation .cxx_destruct]
  -[HMDUnpairedHAPAccessoryPairingInformation accessoryName]
  -[HMDUnpairedHAPAccessoryPairingInformation homeName]
  -[HMDUnpairedHAPAccessoryPairingInformation ownershipToken]
  -[HMDUnpairedHAPAccessoryPairingInformation setOwnershipToken:]
  -[HMDUnpairedHAPAccessoryPairingInformation setLinkType:]
  -[HMDUnpairedHAPAccessoryPairingInformation matchesAccessoryServer:]
  -[HMDUnpairedHAPAccessoryPairingInformation wacAccessory]
  -[HMDUnpairedHAPAccessoryPairingInformation legacyWAC]
  -[HMDUnpairedHAPAccessoryPairingInformation initWithAccessoryUUID:accessoryName:linkType:homeName:setupCode:completionHandler:setupCodeProvider:wiFiPSK:country:]
  -[HMDUnpairedHAPAccessoryPairingInformation initWithAccessoryDescription:linkType:needsUserConsent:completionHandler:progressHandler:wiFiPSK:country:]
  -[HMDUnpairedHAPAccessoryPairingInformation matchesUnpairedAccessory:]
  -[HMDUnpairedHAPAccessoryPairingInformation pairingInterruptionTimer]
  -[HMDUnpairedHAPAccessoryPairingInformation setPairingInterruptionTimer:]
  -[HMDUnpairedHAPAccessoryPairingInformation addAccessoryCompletionHandler]
  -[HMDUnpairedHAPAccessoryPairingInformation setAddAccessoryCompletionHandler:]
  -[HMDUnpairedHAPAccessoryPairingInformation addAccessoryProgressHandler]
  -[HMDUnpairedHAPAccessoryPairingInformation setAddAccessoryProgressHandler:]
  -[HMDUnpairedHAPAccessoryPairingInformation setupCodeProviderCompletionHandler]
  -[HMDUnpairedHAPAccessoryPairingInformation setSetupCodeProviderCompletionHandler:]
  -[HMDUnpairedHAPAccessoryPairingInformation pairingRetryTimer]
  -[HMDUnpairedHAPAccessoryPairingInformation setPairingRetryTimer:]
  -[HMDUnpairedHAPAccessoryPairingInformation reconfirmTimer]
  -[HMDUnpairedHAPAccessoryPairingInformation setReconfirmTimer:]
  -[HMDUnpairedHAPAccessoryPairingInformation allowAddUnauthenticatedAccessory]
  -[HMDUnpairedHAPAccessoryPairingInformation setAllowAddUnauthenticatedAccessory:]
  -[HMDUnpairedHAPAccessoryPairingInformation provideNetworkCredentialsToAccessory]
  -[HMDUnpairedHAPAccessoryPairingInformation setProvideNetworkCredentialsToAccessory:]
  -[HMDUnpairedHAPAccessoryPairingInformation setupCodeProvided]
  -[HMDUnpairedHAPAccessoryPairingInformation setSetupCodeProvided:]
  -[HMDUnpairedHAPAccessoryPairingInformation needsUserConsent]
  -[HMDUnpairedHAPAccessoryPairingInformation setNeedsUserConsent:]
  -[HMDUnpairedHAPAccessoryPairingInformation pairingActivity]
  -[HMDUnpairedHAPAccessoryPairingInformation setPairingActivity:]
  -[HMDUnpairedHAPAccessoryPairingInformation hapAccessoryConfiguration]
  -[HMDUnpairedHAPAccessoryPairingInformation setWacAccessory:]
  -[HMDUnpairedHAPAccessoryPairingInformation setLegacyWAC:]


HMDAddAccessoryProgressState : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *accessoryUUID
 @property  NSString *accessoryName
 @property  NSString *manufacturerName
 @property  HMAccessoryCategory *category
 @property  unsigned long certificationStatus
 @property  NSString *productData

  // instance methods
  -[HMDAddAccessoryProgressState category]
  -[HMDAddAccessoryProgressState certificationStatus]
  -[HMDAddAccessoryProgressState productData]
  -[HMDAddAccessoryProgressState accessoryUUID]
  -[HMDAddAccessoryProgressState .cxx_destruct]
  -[HMDAddAccessoryProgressState accessoryName]
  -[HMDAddAccessoryProgressState manufacturerName]
  -[HMDAddAccessoryProgressState initWithUUID:accessoryName:manufacturerName:category:certificationStatus:productData:]


HMDAccessoryBrowserInjectedSettingsDevice : NSObject /usr/lib/libc++.1.dylib <HMDAccessoryBrowserInjectedSettings>
  // instance methods
  -[HMDAccessoryBrowserInjectedSettingsDevice init]
  -[HMDAccessoryBrowserInjectedSettingsDevice .cxx_destruct]
  -[HMDAccessoryBrowserInjectedSettingsDevice workQueue]
  -[HMDAccessoryBrowserInjectedSettingsDevice createIpAccessoryBrowser]
  -[HMDAccessoryBrowserInjectedSettingsDevice createBtleAccessoryBrowser]
  -[HMDAccessoryBrowserInjectedSettingsDevice createRelayAccessoryBrowser]
  -[HMDAccessoryBrowserInjectedSettingsDevice createHap2AccessoryBrowserWithStorage:]
  -[HMDAccessoryBrowserInjectedSettingsDevice createAuthServerWithDelegate:]


HMDPairedAccessoryInformation : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *identifier
 @property  NSData *setupHash
 @property  unsigned long transports
 @property  <HMDAccessoryBrowserDelegate> *delegate

  // instance methods
  -[HMDPairedAccessoryInformation init]
  -[HMDPairedAccessoryInformation .cxx_destruct]
  -[HMDPairedAccessoryInformation identifier]
  -[HMDPairedAccessoryInformation isEqual:]
  -[HMDPairedAccessoryInformation transports]
  -[HMDPairedAccessoryInformation delegate]
  -[HMDPairedAccessoryInformation setupHash]
  -[HMDPairedAccessoryInformation initWithIdentifier:transports:setupHash:delegate:]


HMDAccessoryBrowser : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HAPAccessoryServerBrowserDelegate, HAPAccessoryServerDelegate, HMFMessageReceiver, HMFTimerDelegate, HMDMediaBrowserDelegate, HMDWACBrowserDelegate, HMDWACAccessoryConfigurationDelegate, HMDWatchSystemStateDelegate, HMDAuthServerDelegate, HMFLogging, HMDAccessoryBrowserProtocol, HMDAccessoryBrowserHapProtocol>
 @property  BOOL internalDiscoveryRequest
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *uuid
 @property  HMFMessageDispatcher *messageDispatcher
 @property  unsigned long generationCounter
 @property  HMDHomeManager *homeManager
 @property  <HMDAccessoryBrowserManagerDelegate> *managerDelegate
 @property  NSMutableArray *accessoryServerBrowsers
 @property  HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser
 @property  HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser
 @property  HAPWACAccessoryBrowser *wacAccessoryBrowser
 @property  HAPAccessoryServerBrowser *hap2AccessoryServerBrowser
 @property  HMDHAP2Storage *hap2Storage
 @property  HMDMediaBrowser *mediaBrowser
 @property  HMDWACBrowser *wacBrowser
 @property  HMDUnassociatedWACAccessory *accessoryPerformingWAC
 @property  HMDAuthServer *authServer
 @property  HMDDAccessoryServerBrowserDemo *demoAccessoryServerBrowser
 @property  HMFTimer *stopReprovisioningTimer
 @property  HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer
 @property  NSString *identifierOfAccessoryBeingReprovisioned
 @property  NSData *wiFiPSKForAccessoryReprovisioning
 @property  NSString *countrycodeForAccessoryReprovisioning
 @property  BOOL active
 @property  NSMutableArray *pairedAccessories
 @property  NSObject<OS_dispatch_source> *reachabilityTimerForBTLE
 @property  NSArray *unpairedHAPAccessories
 @property  NSArray *unassociatedMediaAccessories
 @property  NSArray *deviceSetupMediaAccessories
 @property  NSMutableArray *currentlyPairingAccessories
 @property  NSMutableArray *currentlyPairingProgressHandlers
 @property  NSHashTable *tombstonedHAPAccessoryServers
 @property  NSHashTable *discoveringBLEAccessoryServerIdentifiers
 @property  NSMutableSet *discoveredAccessoryServerIdentifiers
 @property  BOOL btlePowerState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  NSArray *unassociatedAccessories
 @property  HAPAccessoryServerBrowserRelay *relayAccessoryServerBrowser

  // class methods
  +[HMDAccessoryBrowser logCategory]

  // instance methods
  -[HMDAccessoryBrowser messageTargetUUID]
  -[HMDAccessoryBrowser messageDestination]
  -[HMDAccessoryBrowser _registerForNotifications]
  -[HMDAccessoryBrowser messageReceiveQueue]
  -[HMDAccessoryBrowser setGenerationCounter:]
  -[HMDAccessoryBrowser timerDidFire:]
  -[HMDAccessoryBrowser active]
  -[HMDAccessoryBrowser setWorkQueue:]
  -[HMDAccessoryBrowser wacBrowser]
  -[HMDAccessoryBrowser discoveredAccessoryServers]
  -[HMDAccessoryBrowser uuid]
  -[HMDAccessoryBrowser dealloc]
  -[HMDAccessoryBrowser activate:]
  -[HMDAccessoryBrowser .cxx_destruct]
  -[HMDAccessoryBrowser workQueue]
  -[HMDAccessoryBrowser setUuid:]
  -[HMDAccessoryBrowser stopTrackingBTLEAccessoriesWithIdentifiers:]
  -[HMDAccessoryBrowser _registerForMessages]
  -[HMDAccessoryBrowser setHomeManager:]
  -[HMDAccessoryBrowser setActive:]
  -[HMDAccessoryBrowser updateBroadcastKeyForIdentifer:key:keyUpdatedStateNumber:keyUpdatedTime:]
  -[HMDAccessoryBrowser messageDispatcher]
  -[HMDAccessoryBrowser setQOS:]
  -[HMDAccessoryBrowser retrieveCurrentStateForIdentifer:onQueue:withCompletion:]
  -[HMDAccessoryBrowser resetPairedAccessories]
  -[HMDAccessoryBrowser updateStateForIdentifier:stateNumber:]
  -[HMDAccessoryBrowser homeManager]
  -[HMDAccessoryBrowser generationCounter]
  -[HMDAccessoryBrowser setPairedAccessories:]
  -[HMDAccessoryBrowser pairedAccessories]
  -[HMDAccessoryBrowser setMessageDispatcher:]
  -[HMDAccessoryBrowser handleXPCConnectionInvalidated:]
  -[HMDAccessoryBrowser initWithMessageDispatcher:]
  -[HMDAccessoryBrowser configureDemoBrowserWithDemoAccessories:finalized:]
  -[HMDAccessoryBrowser configureWithHomeManager:]
  -[HMDAccessoryBrowser endActiveAssertion:]
  -[HMDAccessoryBrowser __handleProcessStateChange:]
  -[HMDAccessoryBrowser unassociatedAccessories]
  -[HMDAccessoryBrowser registerProgressHandler:unpairedAccessoryUUID:]
  -[HMDAccessoryBrowser pairAccessory:configuration:completionHandler:]
  -[HMDAccessoryBrowser unpairedHAPAccessoryWithAccessoryDescription:]
  -[HMDAccessoryBrowser pairAccessoryWithDescription:configuration:progressHandler:completionHandler:]
  -[HMDAccessoryBrowser didReceiveUserConsentResponseForSetupAccessoryDetail:consent:]
  -[HMDAccessoryBrowser handleNewlyPairedAccessory:linkType:]
  -[HMDAccessoryBrowser startDiscoveringPairedAccessories]
  -[HMDAccessoryBrowser removeUnassociatedAccessoryWithIdentifier:]
  -[HMDAccessoryBrowser handleAddedAccessory:]
  -[HMDAccessoryBrowser registerPairedAccessory:transports:setupHash:delegate:]
  -[HMDAccessoryBrowser mediaBrowser]
  -[HMDAccessoryBrowser handleRemovedAccessory:]
  -[HMDAccessoryBrowser deregisterPairedAccessory:]
  -[HMDAccessoryBrowser addUnpairedAccessoryServer:identifier:]
  -[HMDAccessoryBrowser btleAccessoryReachabilityProbeTimer:]
  -[HMDAccessoryBrowser acessoryBrowserHapProtocol]
  -[HMDAccessoryBrowser cancelPairingWithAccessoryDescription:error:]
  -[HMDAccessoryBrowser unpairedAccessoryWithUUID:]
  -[HMDAccessoryBrowser cancelPairingWithAccessory:error:]
  -[HMDAccessoryBrowser handleSetupCodeAvailable:]
  -[HMDAccessoryBrowser isBrowsingAllowed]
  -[HMDAccessoryBrowser discoverAccessoryServer:linkType:errorHandler:]
  -[HMDAccessoryBrowser discoverAccessories:]
  -[HMDAccessoryBrowser probeReachabilityForBTLEAccessoryServersWithIdentifiers:onQueue:withCompletion:]
  -[HMDAccessoryBrowser tombstoneAccessoryServer:]
  -[HMDAccessoryBrowser resurrectAccessoryServer:]
  -[HMDAccessoryBrowser resetConfiguration]
  -[HMDAccessoryBrowser removePairingInformationForAccessoryServer:]
  -[HMDAccessoryBrowser accessoryServerBrowser:didStartDiscoveringWithError:]
  -[HMDAccessoryBrowser accessoryServerBrowser:didFindAccessoryServer:stateChanged:stateNumber:]
  -[HMDAccessoryBrowser accessoryServerBrowser:didRemoveAccessoryServer:error:]
  -[HMDAccessoryBrowser accessoryServerBrowser:didFailToDiscoverAccessoryServerWithIdentifier:]
  -[HMDAccessoryBrowser addUnassociatedAccessory:forDeviceSetup:]
  -[HMDAccessoryBrowser configureAccessory:trackState:connectionPriority:]
  -[HMDAccessoryBrowser requestPermissionToAssociateWACAccessory:completionHandler:]
  -[HMDAccessoryBrowser unassociatedWACAccessoryDidStartAssociation:]
  -[HMDAccessoryBrowser unassociatedWACAccessoryDidFinishAssociation:withError:]
  -[HMDAccessoryBrowser handlePPIDInfoResponse:context:error:]
  -[HMDAccessoryBrowser handleActivationResponse:context:]
  -[HMDAccessoryBrowser didFinishActivation:context:]
  -[HMDAccessoryBrowser startDiscoveringAccessoriesNeedingReprovisioning]
  -[HMDAccessoryBrowser stopDiscoveringAccessories]
  -[HMDAccessoryBrowser reprovisionAccessoryWithIdentifier:wiFiPSK:countryCode:withCompletion:]
  -[HMDAccessoryBrowser accessoryServer:didDiscoverAccessories:transaction:error:]
  -[HMDAccessoryBrowser accessoryServer:didUpdateValuesForCharacteristics:stateNumber:broadcast:]
  -[HMDAccessoryBrowser accessoryServer:didStopPairingWithError:]
  -[HMDAccessoryBrowser relayAccessoryServerBrowser]
  -[HMDAccessoryBrowser addUnassociatedWACAccessory:]
  -[HMDAccessoryBrowser updateUnassociatedWACAccessory:]
  -[HMDAccessoryBrowser removeUnassociatedWACAccessory:]
  -[HMDAccessoryBrowser beginActiveAssertionWithReason:]
  -[HMDAccessoryBrowser initWithMessageDispatcher:workQueue:injectedSettings:]
  -[HMDAccessoryBrowser hap2Storage]
  -[HMDAccessoryBrowser demoAccessoryServerBrowser]
  -[HMDAccessoryBrowser setDemoAccessoryServerBrowser:]
  -[HMDAccessoryBrowser accessoryServerBrowsers]
  -[HMDAccessoryBrowser setMediaBrowser:]
  -[HMDAccessoryBrowser identifiersOfAssociatedMediaAccessories]
  -[HMDAccessoryBrowser btleAccessoryServerBrowser]
  -[HMDAccessoryBrowser addUnassociatedMediaAccessory:forDeviceSetup:]
  -[HMDAccessoryBrowser addUnpairedHAPAccessory:]
  -[HMDAccessoryBrowser removeUnassociatedAccessory:]
  -[HMDAccessoryBrowser removeUnassociatedMediaAccessory:]
  -[HMDAccessoryBrowser removeUnpairedHAPAccessory:]
  -[HMDAccessoryBrowser unassociatedMediaAccessories]
  -[HMDAccessoryBrowser _handleAddedAccessory:]
  -[HMDAccessoryBrowser _sendNewAccessoryData:messageName:]
  -[HMDAccessoryBrowser _notifyManagerOfNewAccessory]
  -[HMDAccessoryBrowser _handleRemovedAccessory:]
  -[HMDAccessoryBrowser __isAccessoryBrowsingRequested]
  -[HMDAccessoryBrowser mediaAccessoryControlConnections]
  -[HMDAccessoryBrowser browsingConnections]
  -[HMDAccessoryBrowser __removeMediaAccessoryControlObserver:]
  -[HMDAccessoryBrowser _stopDiscoveringAccessoriesWithForce:error:]
  -[HMDAccessoryBrowser _stopDiscoveringMediaAccessories]
  -[HMDAccessoryBrowser __removeBrowsingObserver:error:]
  -[HMDAccessoryBrowser _startDiscoveringAccessories]
  -[HMDAccessoryBrowser _startDiscoveringMediaAccessories]
  -[HMDAccessoryBrowser __identifiersOfPairedAccessoriesWithTransports:]
  -[HMDAccessoryBrowser identifiersOfPairedBTLEAccessories]
  -[HMDAccessoryBrowser _startOrStopAccessoryDiscovery]
  -[HMDAccessoryBrowser areThereAnyPairedBTLEAccessories]
  -[HMDAccessoryBrowser hap2AccessoryServerBrowser]
  -[HMDAccessoryBrowser ipAccessoryServerBrowser]
  -[HMDAccessoryBrowser pairedAccessoryInformationWithIdentifier:]
  -[HMDAccessoryBrowser __isMediaAccessoryBrowsingRequested]
  -[HMDAccessoryBrowser _associate:hapAccessoryWithAdvertisement:]
  -[HMDAccessoryBrowser _notifyDelegateOfReachabilityChange:forAccessoryWithIdentifier:]
  -[HMDAccessoryBrowser _unassociatedMediaAccessoryWithIdentifier:]
  -[HMDAccessoryBrowser getActiveWACSession]
  -[HMDAccessoryBrowser setActiveWACSession:]
  -[HMDAccessoryBrowser _cancelCurrentlyPairingAccessories:]
  -[HMDAccessoryBrowser unpairedHAPAccessories]
  -[HMDAccessoryBrowser _startDiscoveringPairedAccessories]
  -[HMDAccessoryBrowser _isBrowsingAllowed]
  -[HMDAccessoryBrowser _btleAccessoryReachabilityProbeTimer:]
  -[HMDAccessoryBrowser _discoverAccessoryServer:linkType:errorHandler:]
  -[HMDAccessoryBrowser homeLocationChangeNotification:]
  -[HMDAccessoryBrowser handleConnectionDeactivation:]
  -[HMDAccessoryBrowser _setBTLEPowerChangeCompletionHandler]
  -[HMDAccessoryBrowser _reprovisionAccessoryWithIdentifier:wiFiPSK:countryCode:withCompletion:]
  -[HMDAccessoryBrowser identifierOfAccessoryBeingReprovisioned]
  -[HMDAccessoryBrowser currentlyPairingAccessories]
  -[HMDAccessoryBrowser setIdentifierOfAccessoryBeingReprovisioned:]
  -[HMDAccessoryBrowser setWiFiPSKForAccessoryReprovisioning:]
  -[HMDAccessoryBrowser setCountrycodeForAccessoryReprovisioning:]
  -[HMDAccessoryBrowser stopReprovisioningTimer]
  -[HMDAccessoryBrowser _removeBrowsingConnection:error:]
  -[HMDAccessoryBrowser _removeMediaAccessoryControlObserverMatchingConnection:]
  -[HMDAccessoryBrowser unpairedAccessoryWithServerIdentifier:]
  -[HMDAccessoryBrowser _discoverAccessories:]
  -[HMDAccessoryBrowser currentlyPairingProgressHandlers]
  -[HMDAccessoryBrowser _handleRemovedUnpairedHAPAccessory:]
  -[HMDAccessoryBrowser _removePairingInformationForUnpairedAccessory:]
  -[HMDAccessoryBrowser _pairingInformationForUnpairedAccessory:]
  -[HMDAccessoryBrowser _progressHandlerForUnpairedAccessory:]
  -[HMDAccessoryBrowser _associateMediaAccessoryForServer:]
  -[HMDAccessoryBrowser _handleWACAccessoryFound]
  -[HMDAccessoryBrowser addPairedAccessory:]
  -[HMDAccessoryBrowser removePairedAccessoryInfoWithIdentifier:]
  -[HMDAccessoryBrowser _tombstonedAccessoryServerWithServerIdentifier:]
  -[HMDAccessoryBrowser _isAccessoryServerTombstoned:]
  -[HMDAccessoryBrowser _shouldAccessoryServerBeTombstoned:]
  -[HMDAccessoryBrowser _resurrectAccessoryServer:]
  -[HMDAccessoryBrowser _addUnpairedAccessoryForServer:]
  -[HMDAccessoryBrowser discoveredAccessoryServerIdentifiers]
  -[HMDAccessoryBrowser _pairAccessory:configuration:completionHandler:]
  -[HMDAccessoryBrowser _pairAccessoryWithDescription:configuration:progressHandler:completionHandler:]
  -[HMDAccessoryBrowser findAccessoryServerForAccessoryDescription:]
  -[HMDAccessoryBrowser unpairedAccessoryForServer:]
  -[HMDAccessoryBrowser _continueAfterPPIDValidation:server:]
  -[HMDAccessoryBrowser _handleSetupCodeAvailable:]
  -[HMDAccessoryBrowser _cancelPairingWithAccessory:error:]
  -[HMDAccessoryBrowser reachabilityTimerForBTLE]
  -[HMDAccessoryBrowser setReachabilityTimerForBTLE:]
  -[HMDAccessoryBrowser _notifyDelegateOfReachabilityChangeChange:forBTLEAccessories:]
  -[HMDAccessoryBrowser _notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:error:]
  -[HMDAccessoryBrowser _stopReprovisioningTimerHandler]
  -[HMDAccessoryBrowser stopBrowsingAccessoriesNeedingReprovisioningTimer]
  -[HMDAccessoryBrowser _unpairedAccessoryMatchingPairingInfo:]
  -[HMDAccessoryBrowser _handlePairingInterruptedTimeout:error:]
  -[HMDAccessoryBrowser _promptForPairingPasswordForServer:reason:]
  -[HMDAccessoryBrowser discoveringBLEAccessoryServerIdentifiers]
  -[HMDAccessoryBrowser areThereAnyPairedAccessories]
  -[HMDAccessoryBrowser __addMediaAccessoryControlObserver:]
  -[HMDAccessoryBrowser wacAccessoryBrowser]
  -[HMDAccessoryBrowser __resetBrowsingConnections]
  -[HMDAccessoryBrowser _startDiscoveringAccessoriesNeedingReprovisioning]
  -[HMDAccessoryBrowser _tombstoneAccessoryServer:]
  -[HMDAccessoryBrowser _handleRequestFetchNewAccessories:]
  -[HMDAccessoryBrowser _handleRequestSearchForNewAccessories:]
  -[HMDAccessoryBrowser _removePairingInformation:error:]
  -[HMDAccessoryBrowser unassociatedAccessoriesForClientRequest:]
  -[HMDAccessoryBrowser __addBrowsingConnection:]
  -[HMDAccessoryBrowser setBtlePowerState:]
  -[HMDAccessoryBrowser managerDelegate]
  -[HMDAccessoryBrowser tombstonedHAPAccessoryServers]
  -[HMDAccessoryBrowser pairedAccessoryInformationWithSetupID:]
  -[HMDAccessoryBrowser _sendPairingCompletionStatusForServer:error:completionHandler:]
  -[HMDAccessoryBrowser _notifyDelegateOfTombstonedAccessoryServer:]
  -[HMDAccessoryBrowser _notifyDelegateOfAccessoryServer:didUpdateValuesForCharacteristics:stateNumber:broadcast:]
  -[HMDAccessoryBrowser _checkIfPairingWithPairedAccessoryServer:errorCode:]
  -[HMDAccessoryBrowser _notifyDelegateOfNewPairedAccessoryServer:stateChanged:stateNumber:]
  -[HMDAccessoryBrowser _notifyDelegateOfDiscoveryFailure:accessoryServer:linkType:]
  -[HMDAccessoryBrowser countrycodeForAccessoryReprovisioning]
  -[HMDAccessoryBrowser wiFiPSKForAccessoryReprovisioning]
  -[HMDAccessoryBrowser _notifyDelegateOfAccessoryServerNeedingReprovisioning:error:]
  -[HMDAccessoryBrowser _notifyDelegateOfRemovedAccessoryServer:error:]
  -[HMDAccessoryBrowser _stopReconfirmTimer:]
  -[HMDAccessoryBrowser _startPairingInterruptionTimer:]
  -[HMDAccessoryBrowser _pairingInformationForAccessoryIdentifier:]
  -[HMDAccessoryBrowser saveAccessoryCache:forIdentifier:]
  -[HMDAccessoryBrowser removeAccessoryCacheForIdentifier:]
  -[HMDAccessoryBrowser accessoryServerBrowser:saveCache:serverIdentifier:]
  -[HMDAccessoryBrowser accessoryServerBrowser:getCacheForAccessoryWithIdentifier:withCompletion:]
  -[HMDAccessoryBrowser accessoryServerBrowser:removeCacheForAccessoryWithIdentifier:]
  -[HMDAccessoryBrowser vendorModel:vendorManufacturer:accessoryInfo:]
  -[HMDAccessoryBrowser _callProgressOrErrorOut:pairingInfo:accessoryInfo:unpairedAccessory:progress:certStatus:]
  -[HMDAccessoryBrowser accessoryServer:promtDialog:forNotCertifiedAccessory:completion:]
  -[HMDAccessoryBrowser _updatePairingRetryTimerForAccessory:delay:]
  -[HMDAccessoryBrowser _addReconfirmTimer:accessoryServer:]
  -[HMDAccessoryBrowser _notifyDelegateOfAccessoryServer:didStopPairingWithError:]
  -[HMDAccessoryBrowser _notifyDelegateOfAccessoryServer:didDiscoverAccessories:transaction:error:]
  -[HMDAccessoryBrowser _notifyDelegateOfAccessoryServer:didUpdateHasPairings:]
  -[HMDAccessoryBrowser _notifyDelegateOfAccessoryServer:didUpdateCategory:]
  -[HMDAccessoryBrowser continueAddingAccessoryToHomeAfterUserConfirmation:withError:]
  -[HMDAccessoryBrowser accessoryServer:updatePairingProgress:]
  -[HMDAccessoryBrowser authServer]
  -[HMDAccessoryBrowser _handleAddedAccessoryAdvertisements:]
  -[HMDAccessoryBrowser _handleRemovedAccessoryAdvertisements:]
  -[HMDAccessoryBrowser accessoryServer:didFinishAuth:]
  -[HMDAccessoryBrowser accessoryServer:didUpdateName:]
  -[HMDAccessoryBrowser accessoryServer:requestUserPermission:accessoryInfo:error:]
  -[HMDAccessoryBrowser accessoryServerBrowser:didFindAccessoryServerForReprovisioning:]
  -[HMDAccessoryBrowser accessoryServerBrowser:didFindAccessoryServerNeedingReprovisioning:error:]
  -[HMDAccessoryBrowser accessoryServerBrowser:didFinishWACForAccessoryWithIdentifier:error:]
  -[HMDAccessoryBrowser accessoryServerBrowser:didStopDiscoveringWithError:]
  -[HMDAccessoryBrowser accessoryServerBrowser:didChangeReachability:forAccessoryServerWithIdentifier:]
  -[HMDAccessoryBrowser accessoryServerBrowser:accessoryServer:didUpdateValuesForCharacteristics:stateNumber:broadcast:]
  -[HMDAccessoryBrowser accessoryServer:promptUserForPasswordWithType:]
  -[HMDAccessoryBrowser accessoryServer:didReceiveBadPasswordThrottleAttemptsWithDelay:]
  -[HMDAccessoryBrowser accessoryServer:isBlockedWithCompletionHandler:]
  -[HMDAccessoryBrowser accessoryServer:didUpdateHasPairings:]
  -[HMDAccessoryBrowser accessoryServerDidUpdateStateNumber:]
  -[HMDAccessoryBrowser accessoryServer:didUpdateCategory:]
  -[HMDAccessoryBrowser accessoryServer:validateUUID:token:model:]
  -[HMDAccessoryBrowser accessoryServer:validateCert:model:]
  -[HMDAccessoryBrowser accessoryServer:authenticateUUID:token:]
  -[HMDAccessoryBrowser accessoryServer:confirmUUID:token:]
  -[HMDAccessoryBrowser accessoryServerNeedsOwnershipToken:]
  -[HMDAccessoryBrowser shouldEnableReachabilityForAccessoryServer:]
  -[HMDAccessoryBrowser browser:didAddAdvertisements:]
  -[HMDAccessoryBrowser browser:didRemoveAdvertisements:]
  -[HMDAccessoryBrowser browser:didRemoveSessions:]
  -[HMDAccessoryBrowser browser:didUpdateEndpoints:]
  -[HMDAccessoryBrowser startDiscoveringAccessories]
  -[HMDAccessoryBrowser dumpUnassociatedAccessories]
  -[HMDAccessoryBrowser dumpRegisteredPairedAccessories]
  -[HMDAccessoryBrowser dumpBrowsingConnections]
  -[HMDAccessoryBrowser hasClientRequestedMediaAccessoryControl:]
  -[HMDAccessoryBrowser handleStartDiscoveringAssociatedMediaAccessories:forTransport:completionHandler:]
  -[HMDAccessoryBrowser configureDemoBrowserWithTestAccessories:]
  -[HMDAccessoryBrowser deviceSetupMediaAccessories]
  -[HMDAccessoryBrowser resetMediaAccessoryControlConnections]
  -[HMDAccessoryBrowser internalDiscoveryRequest]
  -[HMDAccessoryBrowser setInternalDiscoveryRequest:]
  -[HMDAccessoryBrowser removePairedAccessory:]
  -[HMDAccessoryBrowser areThereAnyAssociatedAirPlayAccessories]
  -[HMDAccessoryBrowser numPairedIPAccessories]
  -[HMDAccessoryBrowser __activate]
  -[HMDAccessoryBrowser __inactivate]
  -[HMDAccessoryBrowser startDiscoveringMediaAccessories]
  -[HMDAccessoryBrowser stopDiscoveringMediaAccessories]
  -[HMDAccessoryBrowser __isCurrentDevicePrimaryResident]
  -[HMDAccessoryBrowser _stopBtleAccessoryReachabilityProbeTimer]
  -[HMDAccessoryBrowser setManagerDelegate:]
  -[HMDAccessoryBrowser fetchAccessoryCacheForIdentifier:completion:]
  -[HMDAccessoryBrowser btlePowerState]
  -[HMDAccessoryBrowser setAccessoryServerBrowsers:]
  -[HMDAccessoryBrowser setIpAccessoryServerBrowser:]
  -[HMDAccessoryBrowser setBtleAccessoryServerBrowser:]
  -[HMDAccessoryBrowser setWacAccessoryBrowser:]
  -[HMDAccessoryBrowser setHap2AccessoryServerBrowser:]
  -[HMDAccessoryBrowser setHap2Storage:]
  -[HMDAccessoryBrowser setWacBrowser:]
  -[HMDAccessoryBrowser setAuthServer:]
  -[HMDAccessoryBrowser setStopReprovisioningTimer:]
  -[HMDAccessoryBrowser setStopBrowsingAccessoriesNeedingReprovisioningTimer:]
  -[HMDAccessoryBrowser setCurrentlyPairingAccessories:]
  -[HMDAccessoryBrowser setCurrentlyPairingProgressHandlers:]
  -[HMDAccessoryBrowser setDiscoveredAccessoryServerIdentifiers:]


__HMDPairedAccessoryBrowseAssertion : HMFAssertion /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDAccessoryBrowser *accessoryBrowser

  // instance methods
  -[__HMDPairedAccessoryBrowseAssertion initWithName:]
  -[__HMDPairedAccessoryBrowseAssertion .cxx_destruct]
  -[__HMDPairedAccessoryBrowseAssertion accessoryBrowser]
  -[__HMDPairedAccessoryBrowseAssertion invalidate]
  -[__HMDPairedAccessoryBrowseAssertion initWithAccessoryBrowser:reason:]


HMDDonationHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDonationHandler logCategory]
  +[HMDDonationHandler sharedDonationHandler]

  // instance methods
  -[HMDDonationHandler setWorkQueue:]
  -[HMDDonationHandler init]
  -[HMDDonationHandler .cxx_destruct]
  -[HMDDonationHandler workQueue]
  -[HMDDonationHandler _init]
  -[HMDDonationHandler donateActionSet:withMessage:]
  -[HMDDonationHandler removeIntentForActionSet:]
  -[HMDDonationHandler _donateActionSet:withMessage:]
  -[HMDDonationHandler _removeIntentForActionSet:]
  -[HMDDonationHandler _donateIntent:withActionSet:]


AWDHomeKitPredicate : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  NSMutableArray *presenceEvents
 @property  BOOL hasContainsCharacteristicValue
 @property  BOOL containsCharacteristicValue
 @property  BOOL hasContainsSignificantTime
 @property  BOOL containsSignificantTime
 @property  BOOL hasContainsSignificantTimeOffset
 @property  BOOL containsSignificantTimeOffset
 @property  BOOL hasContainsCalendarTime
 @property  BOOL containsCalendarTime

  // class methods
  +[AWDHomeKitPredicate presenceEventsType]

  // instance methods
  -[AWDHomeKitPredicate copyWithZone:]
  -[AWDHomeKitPredicate .cxx_destruct]
  -[AWDHomeKitPredicate readFrom:]
  -[AWDHomeKitPredicate writeTo:]
  -[AWDHomeKitPredicate isEqual:]
  -[AWDHomeKitPredicate copyTo:]
  -[AWDHomeKitPredicate dictionaryRepresentation]
  -[AWDHomeKitPredicate mergeFrom:]
  -[AWDHomeKitPredicate presenceEvents]
  -[AWDHomeKitPredicate setPresenceEvents:]
  -[AWDHomeKitPredicate setContainsCalendarTime:]
  -[AWDHomeKitPredicate setContainsCharacteristicValue:]
  -[AWDHomeKitPredicate setContainsSignificantTime:]
  -[AWDHomeKitPredicate setContainsSignificantTimeOffset:]
  -[AWDHomeKitPredicate addPresenceEvents:]
  -[AWDHomeKitPredicate presenceEventsCount]
  -[AWDHomeKitPredicate clearPresenceEvents]
  -[AWDHomeKitPredicate presenceEventsAtIndex:]
  -[AWDHomeKitPredicate setHasContainsCharacteristicValue:]
  -[AWDHomeKitPredicate hasContainsCharacteristicValue]
  -[AWDHomeKitPredicate setHasContainsSignificantTime:]
  -[AWDHomeKitPredicate hasContainsSignificantTime]
  -[AWDHomeKitPredicate setHasContainsSignificantTimeOffset:]
  -[AWDHomeKitPredicate hasContainsSignificantTimeOffset]
  -[AWDHomeKitPredicate setHasContainsCalendarTime:]
  -[AWDHomeKitPredicate hasContainsCalendarTime]
  -[AWDHomeKitPredicate containsCharacteristicValue]
  -[AWDHomeKitPredicate containsSignificantTime]
  -[AWDHomeKitPredicate containsSignificantTimeOffset]
  -[AWDHomeKitPredicate containsCalendarTime]


HMDAccessorySettingGroup : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, NSSecureCoding, HMDSettingGroup>
 @property  NSUUID *parentIdentifier
 @property  NSUUID *identifier
 @property  NSString *name
 @property  NSArray *settings
 @property  NSArray *groups
 @property  HMDAccessorySettingGroup *mediaSystemSettingGroup
 @property  NSString *keyPath
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessorySettingGroup supportsSecureCoding]
  +[HMDAccessorySettingGroup logCategory]
  +[HMDAccessorySettingGroup supportedSettingsClasses]
  +[HMDAccessorySettingGroup supportedGroupsClasses]

  // instance methods
  -[HMDAccessorySettingGroup groups]
  -[HMDAccessorySettingGroup copyWithZone:]
  -[HMDAccessorySettingGroup logIdentifier]
  -[HMDAccessorySettingGroup init]
  -[HMDAccessorySettingGroup addGroup:]
  -[HMDAccessorySettingGroup addSetting:]
  -[HMDAccessorySettingGroup .cxx_destruct]
  -[HMDAccessorySettingGroup name]
  -[HMDAccessorySettingGroup keyPath]
  -[HMDAccessorySettingGroup encodeWithCoder:]
  -[HMDAccessorySettingGroup identifier]
  -[HMDAccessorySettingGroup fullDescription]
  -[HMDAccessorySettingGroup settings]
  -[HMDAccessorySettingGroup parentIdentifier]
  -[HMDAccessorySettingGroup description:indent:]
  -[HMDAccessorySettingGroup isEqual:]
  -[HMDAccessorySettingGroup initWithModel:]
  -[HMDAccessorySettingGroup removeSetting:]
  -[HMDAccessorySettingGroup removeGroup:]
  -[HMDAccessorySettingGroup settingWithIdentifier:]
  -[HMDAccessorySettingGroup groupWithIdentifier:]
  -[HMDAccessorySettingGroup setParentIdentifier:]
  -[HMDAccessorySettingGroup initWithCoder:]
  -[HMDAccessorySettingGroup mediaSystemSettingGroup]
  -[HMDAccessorySettingGroup compareSettingsTree:]
  -[HMDAccessorySettingGroup copyReplica]
  -[HMDAccessorySettingGroup intersectSettingGroup:groupMetadata:shouldAddMissingItems:]
  -[HMDAccessorySettingGroup copyIdentical]
  -[HMDAccessorySettingGroup initWithName:identifier:parentIdentifier:]
  -[HMDAccessorySettingGroup _setParentGroup:]
  -[HMDAccessorySettingGroup _reevaluateParentGroup:]
  -[HMDAccessorySettingGroup shouldEncodeForCoder:]
  -[HMDAccessorySettingGroup isPrivateToDevice]
  -[HMDAccessorySettingGroup setMediaSystemSettingGroup:]


HMDAccessorySettingGroupModel : HMDBackingStoreModelObject
 @property  NSString *name

  // class methods
  +[HMDAccessorySettingGroupModel properties]
  +[HMDAccessorySettingGroupModel schemaHashRoot]


AWDHomeKitCameraRecordingUploadOperation : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasClipModelUUID
 @property  NSString *clipModelUUID
 @property  BOOL hasDidCausePreviousClipToFinalizeBecauseMaxDurationExceeded
 @property  BOOL didCausePreviousClipToFinalizeBecauseMaxDurationExceeded
 @property  BOOL hasErrorCode
 @property  long long errorCode
 @property  BOOL hasTotalClipDuration
 @property  unsigned long totalClipDuration
 @property  BOOL hasRunTime
 @property  unsigned long runTime
 @property  BOOL hasRetryCount
 @property  unsigned long retryCount
 @property  BOOL hasOperationType
 @property  int operationType
 @property  BOOL hasErrorDomain
 @property  NSString *errorDomain
 @property  BOOL hasOperationStartTime
 @property  unsigned long operationStartTime

  // instance methods
  -[AWDHomeKitCameraRecordingUploadOperation setErrorCode:]
  -[AWDHomeKitCameraRecordingUploadOperation setRetryCount:]
  -[AWDHomeKitCameraRecordingUploadOperation copyWithZone:]
  -[AWDHomeKitCameraRecordingUploadOperation hasErrorCode]
  -[AWDHomeKitCameraRecordingUploadOperation operationStartTime]
  -[AWDHomeKitCameraRecordingUploadOperation errorCode]
  -[AWDHomeKitCameraRecordingUploadOperation setHasErrorCode:]
  -[AWDHomeKitCameraRecordingUploadOperation runTime]
  -[AWDHomeKitCameraRecordingUploadOperation retryCount]
  -[AWDHomeKitCameraRecordingUploadOperation setErrorDomain:]
  -[AWDHomeKitCameraRecordingUploadOperation errorDomain]
  -[AWDHomeKitCameraRecordingUploadOperation hasErrorDomain]
  -[AWDHomeKitCameraRecordingUploadOperation .cxx_destruct]
  -[AWDHomeKitCameraRecordingUploadOperation setRunTime:]
  -[AWDHomeKitCameraRecordingUploadOperation timestamp]
  -[AWDHomeKitCameraRecordingUploadOperation setTimestamp:]
  -[AWDHomeKitCameraRecordingUploadOperation setHasTimestamp:]
  -[AWDHomeKitCameraRecordingUploadOperation readFrom:]
  -[AWDHomeKitCameraRecordingUploadOperation writeTo:]
  -[AWDHomeKitCameraRecordingUploadOperation isEqual:]
  -[AWDHomeKitCameraRecordingUploadOperation setOperationStartTime:]
  -[AWDHomeKitCameraRecordingUploadOperation copyTo:]
  -[AWDHomeKitCameraRecordingUploadOperation dictionaryRepresentation]
  -[AWDHomeKitCameraRecordingUploadOperation mergeFrom:]
  -[AWDHomeKitCameraRecordingUploadOperation operationType]
  -[AWDHomeKitCameraRecordingUploadOperation hasTimestamp]
  -[AWDHomeKitCameraRecordingUploadOperation setHasRetryCount:]
  -[AWDHomeKitCameraRecordingUploadOperation hasRetryCount]
  -[AWDHomeKitCameraRecordingUploadOperation setOperationType:]
  -[AWDHomeKitCameraRecordingUploadOperation setHasOperationType:]
  -[AWDHomeKitCameraRecordingUploadOperation hasOperationType]
  -[AWDHomeKitCameraRecordingUploadOperation operationTypeAsString:]
  -[AWDHomeKitCameraRecordingUploadOperation StringAsOperationType:]
  -[AWDHomeKitCameraRecordingUploadOperation setTotalClipDuration:]
  -[AWDHomeKitCameraRecordingUploadOperation setClipModelUUID:]
  -[AWDHomeKitCameraRecordingUploadOperation setDidCausePreviousClipToFinalizeBecauseMaxDurationExceeded:]
  -[AWDHomeKitCameraRecordingUploadOperation hasClipModelUUID]
  -[AWDHomeKitCameraRecordingUploadOperation setHasDidCausePreviousClipToFinalizeBecauseMaxDurationExceeded:]
  -[AWDHomeKitCameraRecordingUploadOperation hasDidCausePreviousClipToFinalizeBecauseMaxDurationExceeded]
  -[AWDHomeKitCameraRecordingUploadOperation setHasTotalClipDuration:]
  -[AWDHomeKitCameraRecordingUploadOperation hasTotalClipDuration]
  -[AWDHomeKitCameraRecordingUploadOperation setHasRunTime:]
  -[AWDHomeKitCameraRecordingUploadOperation hasRunTime]
  -[AWDHomeKitCameraRecordingUploadOperation setHasOperationStartTime:]
  -[AWDHomeKitCameraRecordingUploadOperation hasOperationStartTime]
  -[AWDHomeKitCameraRecordingUploadOperation clipModelUUID]
  -[AWDHomeKitCameraRecordingUploadOperation didCausePreviousClipToFinalizeBecauseMaxDurationExceeded]
  -[AWDHomeKitCameraRecordingUploadOperation totalClipDuration]


HMDCameraClipSegmentMetadata : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasByteOffset
 @property  unsigned long byteOffset
 @property  BOOL hasByteLength
 @property  unsigned long byteLength
 @property  BOOL hasTimeOffset
 @property  double timeOffset
 @property  BOOL hasDuration
 @property  double duration
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasWidth
 @property  unsigned int width
 @property  BOOL hasHeight
 @property  unsigned int height

  // instance methods
  -[HMDCameraClipSegmentMetadata timeOffset]
  -[HMDCameraClipSegmentMetadata setHeight:]
  -[HMDCameraClipSegmentMetadata copyWithZone:]
  -[HMDCameraClipSegmentMetadata typeAsString:]
  -[HMDCameraClipSegmentMetadata hasType]
  -[HMDCameraClipSegmentMetadata StringAsType:]
  -[HMDCameraClipSegmentMetadata setWidth:]
  -[HMDCameraClipSegmentMetadata setHasHeight:]
  -[HMDCameraClipSegmentMetadata setHasWidth:]
  -[HMDCameraClipSegmentMetadata setType:]
  -[HMDCameraClipSegmentMetadata width]
  -[HMDCameraClipSegmentMetadata setHasDuration:]
  -[HMDCameraClipSegmentMetadata type]
  -[HMDCameraClipSegmentMetadata readFrom:]
  -[HMDCameraClipSegmentMetadata height]
  -[HMDCameraClipSegmentMetadata writeTo:]
  -[HMDCameraClipSegmentMetadata isEqual:]
  -[HMDCameraClipSegmentMetadata setDuration:]
  -[HMDCameraClipSegmentMetadata byteOffset]
  -[HMDCameraClipSegmentMetadata hasWidth]
  -[HMDCameraClipSegmentMetadata copyTo:]
  -[HMDCameraClipSegmentMetadata dictionaryRepresentation]
  -[HMDCameraClipSegmentMetadata byteLength]
  -[HMDCameraClipSegmentMetadata setByteLength:]
  -[HMDCameraClipSegmentMetadata hasDuration]
  -[HMDCameraClipSegmentMetadata mergeFrom:]
  -[HMDCameraClipSegmentMetadata setTimeOffset:]
  -[HMDCameraClipSegmentMetadata hasHeight]
  -[HMDCameraClipSegmentMetadata duration]
  -[HMDCameraClipSegmentMetadata setHasType:]
  -[HMDCameraClipSegmentMetadata setByteOffset:]
  -[HMDCameraClipSegmentMetadata setHasByteOffset:]
  -[HMDCameraClipSegmentMetadata hasByteOffset]
  -[HMDCameraClipSegmentMetadata setHasByteLength:]
  -[HMDCameraClipSegmentMetadata hasByteLength]
  -[HMDCameraClipSegmentMetadata setHasTimeOffset:]
  -[HMDCameraClipSegmentMetadata hasTimeOffset]


HMDWHASettingEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *keyPath
 @property  AWDHomeKitValue *value

  // class methods
  +[HMDWHASettingEvent initialize]
  +[HMDWHASettingEvent uuid]
  +[HMDWHASettingEvent eventWithKeyPath:value:]

  // instance methods
  -[HMDWHASettingEvent setKeyPath:]
  -[HMDWHASettingEvent .cxx_destruct]
  -[HMDWHASettingEvent keyPath]
  -[HMDWHASettingEvent setValue:]
  -[HMDWHASettingEvent value]
  -[HMDWHASettingEvent AWDMessageType]
  -[HMDWHASettingEvent metricForAWD]


HMDCameraStreamSnapshotCapture : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDVideoStreamLastDecodedFrameDelegate, HMFTimerDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDCameraStreamSnapshotCaptureDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  HMDCameraStreamSessionID *streamSessionID
 @property  HMFTimer *lastDecodedFrameTimer
 @property  BOOL capturingLastFrame
 @property  BOOL capturingCurrentFrame
 @property  HMDVideoStreamInterface *videoStreamInterface
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraStreamSnapshotCapture logCategory]

  // instance methods
  -[HMDCameraStreamSnapshotCapture timerDidFire:]
  -[HMDCameraStreamSnapshotCapture logIdentifier]
  -[HMDCameraStreamSnapshotCapture delegateQueue]
  -[HMDCameraStreamSnapshotCapture streamSessionID]
  -[HMDCameraStreamSnapshotCapture .cxx_destruct]
  -[HMDCameraStreamSnapshotCapture workQueue]
  -[HMDCameraStreamSnapshotCapture delegate]
  -[HMDCameraStreamSnapshotCapture videoStream:didGetLastDecodedFrame:]
  -[HMDCameraStreamSnapshotCapture videoStreamInterface]
  -[HMDCameraStreamSnapshotCapture initWithWorkQueue:videoStreamInterface:delegate:delegateQueue:]
  -[HMDCameraStreamSnapshotCapture captureLastFrame]
  -[HMDCameraStreamSnapshotCapture captureCurrentFrame]
  -[HMDCameraStreamSnapshotCapture _callDidGetNewSnapshot:]
  -[HMDCameraStreamSnapshotCapture _callDidGetLastSnapshot:]
  -[HMDCameraStreamSnapshotCapture setCapturingCurrentFrame:]
  -[HMDCameraStreamSnapshotCapture _captureFrame]
  -[HMDCameraStreamSnapshotCapture setCapturingLastFrame:]
  -[HMDCameraStreamSnapshotCapture lastDecodedFrameTimer]
  -[HMDCameraStreamSnapshotCapture setLastDecodedFrameTimer:]
  -[HMDCameraStreamSnapshotCapture _callSnapshotDelegate:]
  -[HMDCameraStreamSnapshotCapture capturingLastFrame]
  -[HMDCameraStreamSnapshotCapture capturingCurrentFrame]


HMDXPCBackgroundMessageFilter : HMDXPCMessageFilter
  // class methods
  +[HMDXPCBackgroundMessageFilter policyClasses]
  +[HMDXPCBackgroundMessageFilter canInitWithMessage:]

  // instance methods
  -[HMDXPCBackgroundMessageFilter acceptWithPolicies:error:]


HMDSupportedSiriAudioConfigurations : NSObject /usr/lib/libc++.1.dylib
 @property  long long siriInputType
 @property  NSArray *supportedConfigurations
 @property  HAPAudioStreamCodecConfiguration *selectedConfiguration

  // instance methods
  -[HMDSupportedSiriAudioConfigurations .cxx_destruct]
  -[HMDSupportedSiriAudioConfigurations supportedConfigurations]
  -[HMDSupportedSiriAudioConfigurations setSupportedConfigurations:]
  -[HMDSupportedSiriAudioConfigurations siriInputType]
  -[HMDSupportedSiriAudioConfigurations selectedConfiguration]
  -[HMDSupportedSiriAudioConfigurations setSiriInputType:]
  -[HMDSupportedSiriAudioConfigurations setSelectedConfiguration:]


HMDRelayConsentToken : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  HMDHAPAccessory *accessory
 @property  HMDUser *user
 @property  NSUUID *accessoryIdentifier
 @property  NSUUID *userIdentifier
 @property  NSUUID *identifier
 @property  NSData *consentToken
 @property  NSDate *expirationDate

  // class methods
  +[HMDRelayConsentToken supportsSecureCoding]

  // instance methods
  -[HMDRelayConsentToken user]
  -[HMDRelayConsentToken setUser:]
  -[HMDRelayConsentToken userIdentifier]
  -[HMDRelayConsentToken init]
  -[HMDRelayConsentToken accessoryIdentifier]
  -[HMDRelayConsentToken .cxx_destruct]
  -[HMDRelayConsentToken encodeWithCoder:]
  -[HMDRelayConsentToken identifier]
  -[HMDRelayConsentToken accessory]
  -[HMDRelayConsentToken isEqual:]
  -[HMDRelayConsentToken expirationDate]
  -[HMDRelayConsentToken setUserIdentifier:]
  -[HMDRelayConsentToken setAccessory:]
  -[HMDRelayConsentToken initWithCoder:]
  -[HMDRelayConsentToken configureWithHome:]
  -[HMDRelayConsentToken initWithConsentToken:expiration:accessory:user:]
  -[HMDRelayConsentToken consentToken]


HAPOperatingStateWrapper : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  long long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPOperatingStateWrapper parsedFromData:error:]

  // instance methods
  -[HAPOperatingStateWrapper copyWithZone:]
  -[HAPOperatingStateWrapper init]
  -[HAPOperatingStateWrapper initWithValue:]
  -[HAPOperatingStateWrapper setValue:]
  -[HAPOperatingStateWrapper isEqual:]
  -[HAPOperatingStateWrapper value]
  -[HAPOperatingStateWrapper parseFromData:error:]
  -[HAPOperatingStateWrapper serializeWithError:]


AWDHomeKitCameraRecordingFragmentAnalyzed : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned long duration
 @property  BOOL hasCameraUUID
 @property  NSString *cameraUUID
 @property  BOOL hasSessionUUID
 @property  NSString *sessionUUID
 @property  BOOL hasSequenceNumber
 @property  unsigned long sequenceNumber
 @property  BOOL hasAnalysisResultCode
 @property  unsigned long analysisResultCode
 @property  BOOL hasClipModelID
 @property  NSString *clipModelID
 @property  BOOL hasRecordingReason
 @property  int recordingReason

  // instance methods
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setHasSequenceNumber:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed copyWithZone:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setSessionUUID:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed hasSequenceNumber]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setSequenceNumber:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed sessionUUID]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed sequenceNumber]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed .cxx_destruct]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed timestamp]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setTimestamp:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setHasDuration:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setHasTimestamp:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed readFrom:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed writeTo:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed isEqual:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setDuration:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed copyTo:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed dictionaryRepresentation]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed hasDuration]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed mergeFrom:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed hasTimestamp]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed duration]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed hasSessionUUID]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed cameraUUID]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed clipModelID]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed analysisResultCode]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed recordingReason]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setAnalysisResultCode:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setClipModelID:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setRecordingReason:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setCameraUUID:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed hasCameraUUID]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setHasAnalysisResultCode:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed hasAnalysisResultCode]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed hasClipModelID]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed setHasRecordingReason:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed hasRecordingReason]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed recordingReasonAsString:]
  -[AWDHomeKitCameraRecordingFragmentAnalyzed StringAsRecordingReason:]


HMDCharacteristicEvent : HMDCharacteristicEventBase <NSSecureCoding>
 @property  id eventValue

  // class methods
  +[HMDCharacteristicEvent supportsSecureCoding]
  +[HMDCharacteristicEvent logCategory]

  // instance methods
  -[HMDCharacteristicEvent .cxx_destruct]
  -[HMDCharacteristicEvent encodeWithCoder:]
  -[HMDCharacteristicEvent setEventValue:]
  -[HMDCharacteristicEvent eventValue]
  -[HMDCharacteristicEvent dumpState]
  -[HMDCharacteristicEvent initWithCoder:]
  -[HMDCharacteristicEvent emptyModelObject]
  -[HMDCharacteristicEvent _transactionObjectUpdated:newValues:message:]
  -[HMDCharacteristicEvent _transactionObjectRemoved:message:]
  -[HMDCharacteristicEvent modelObjectWithChangeType:]
  -[HMDCharacteristicEvent createPayload]
  -[HMDCharacteristicEvent initWithModel:home:]
  -[HMDCharacteristicEvent _handleUpdateRequest:]
  -[HMDCharacteristicEvent analyticsTriggerEventData]
  -[HMDCharacteristicEvent _compareEventValue:]
  -[HMDCharacteristicEvent _evaluateNewValue:]


HMDCharacteristicEventModel : HMDCharacteristicEventBaseModel
 @property  id eventValue

  // class methods
  +[HMDCharacteristicEventModel properties]
  +[HMDCharacteristicEventModel eventModelWithDictionary:home:eventTriggerUUID:message:checkForSupport:error:]


HMDPhoneCallObserver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <CXCallObserverDelegate>
 @property  CXCallObserver *observer
 @property  HMFUnfairLock *lock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDPhoneCallObserver sharedPhoneCallObserver]

  // instance methods
  -[HMDPhoneCallObserver init]
  -[HMDPhoneCallObserver .cxx_destruct]
  -[HMDPhoneCallObserver lock]
  -[HMDPhoneCallObserver startObserving]
  -[HMDPhoneCallObserver callObserver:callChanged:]
  -[HMDPhoneCallObserver observer]
  -[HMDPhoneCallObserver hasActiveCalls]
  -[HMDPhoneCallObserver isActiveCall:]


AWDHomeKitDatabaseCKOperationCompletionEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDidSucceed
 @property  BOOL didSucceed
 @property  BOOL hasErrorCode
 @property  long long errorCode
 @property  BOOL hasContainerType
 @property  int containerType
 @property  BOOL hasErrorDomain
 @property  NSString *errorDomain

  // instance methods
  -[AWDHomeKitDatabaseCKOperationCompletionEvent setErrorCode:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent copyWithZone:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent hasErrorCode]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent containerType]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent setContainerType:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent errorCode]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent setHasErrorCode:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent setErrorDomain:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent errorDomain]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent hasErrorDomain]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent .cxx_destruct]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent setHasContainerType:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent containerTypeAsString:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent StringAsContainerType:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent timestamp]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent setTimestamp:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent setDidSucceed:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent setHasTimestamp:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent readFrom:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent writeTo:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent isEqual:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent copyTo:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent dictionaryRepresentation]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent mergeFrom:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent hasTimestamp]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent didSucceed]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent hasContainerType]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent setHasDidSucceed:]
  -[AWDHomeKitDatabaseCKOperationCompletionEvent hasDidSucceed]


HMDHomeSaveRequest : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDHome *home
 @property  NSString *reason
 @property  NSDictionary *information
 @property  unsigned long saveOptions
 @property  BOOL objectChange
 @property  BOOL incrementGeneration

  // instance methods
  -[HMDHomeSaveRequest information]
  -[HMDHomeSaveRequest .cxx_destruct]
  -[HMDHomeSaveRequest home]
  -[HMDHomeSaveRequest reason]
  -[HMDHomeSaveRequest initWithHome:reason:information:postSyncNotification:objectChange:]
  -[HMDHomeSaveRequest objectChange]
  -[HMDHomeSaveRequest initWithReason:information:saveOptions:]
  -[HMDHomeSaveRequest initWithReason:information:postSyncNotification:]
  -[HMDHomeSaveRequest _initWithHome:reason:information:postSyncNotification:objectChange:saveOptions:]
  -[HMDHomeSaveRequest _updateSaveOptions:reason:]
  -[HMDHomeSaveRequest saveOptions]
  -[HMDHomeSaveRequest incrementGeneration]


HMDLostModeMessageFilter : HMFMessageFilter /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // class methods
  +[HMDLostModeMessageFilter policyClasses]
  +[HMDLostModeMessageFilter canInitWithMessage:]

  // instance methods
  -[HMDLostModeMessageFilter acceptWithPolicies:error:]


HMDNetworkRouterSatelliteProfile : HMDAccessoryProfile
 @property  long long satelliteStatus
 @property  unsigned long networkStatus

  // class methods
  +[HMDNetworkRouterSatelliteProfile supportsSecureCoding]
  +[HMDNetworkRouterSatelliteProfile logCategory]

  // instance methods
  -[HMDNetworkRouterSatelliteProfile _registerForNotifications]
  -[HMDNetworkRouterSatelliteProfile dealloc]
  -[HMDNetworkRouterSatelliteProfile encodeWithCoder:]
  -[HMDNetworkRouterSatelliteProfile unconfigure]
  -[HMDNetworkRouterSatelliteProfile isEqual:]
  -[HMDNetworkRouterSatelliteProfile setNetworkStatus:]
  -[HMDNetworkRouterSatelliteProfile networkStatus]
  -[HMDNetworkRouterSatelliteProfile registerForMessages]
  -[HMDNetworkRouterSatelliteProfile _updateNetworkStatus]
  -[HMDNetworkRouterSatelliteProfile runtimeState]
  -[HMDNetworkRouterSatelliteProfile handleAccessoryConnected:]
  -[HMDNetworkRouterSatelliteProfile handleCharacteristicsChangedNotification:]
  -[HMDNetworkRouterSatelliteProfile initWithRouterSatelliteService:msgDispatcher:]
  -[HMDNetworkRouterSatelliteProfile handleInitialState]
  -[HMDNetworkRouterSatelliteProfile __handleAccessoryConnected]
  -[HMDNetworkRouterSatelliteProfile satelliteStatus]
  -[HMDNetworkRouterSatelliteProfile __notifyClientsOfNetworkStatusUpdate:]
  -[HMDNetworkRouterSatelliteProfile setSatelliteStatus:]
  -[HMDNetworkRouterSatelliteProfile __updateSatelliteStatus:]
  -[HMDNetworkRouterSatelliteProfile _handleCharacteristicChanges:]
  -[HMDNetworkRouterSatelliteProfile _handleCharacteristicsChangedPayload:]


HMDCameraSnapshotRemoteStreamReceiver : HMDCameraSnapshotReceiver <HMDCameraGetSnapshotProtocol, HMDCameraSnapshotReceiverProtocol, HMDCameraSnapshotIDSStreamReceiverDelegate, HMFLogging>
 @property  <HMDCameraSnapshotRemoteStreamReceiverDelegate> *delegate
 @property  HMDCameraSnapshotIDSStreamReceiver *relayReceiver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotRemoteStreamReceiver logCategory]

  // instance methods
  -[HMDCameraSnapshotRemoteStreamReceiver logIdentifier]
  -[HMDCameraSnapshotRemoteStreamReceiver dealloc]
  -[HMDCameraSnapshotRemoteStreamReceiver .cxx_destruct]
  -[HMDCameraSnapshotRemoteStreamReceiver delegate]
  -[HMDCameraSnapshotRemoteStreamReceiver getSnapshot:]
  -[HMDCameraSnapshotRemoteStreamReceiver _getSnapshot:]
  -[HMDCameraSnapshotRemoteStreamReceiver relayReceiver]
  -[HMDCameraSnapshotRemoteStreamReceiver initWithSessionID:workQueue:options:accessory:delegate:delegateQueue:uniqueIdentifier:snapshotRequestHandler:residentMessageHandler:]
  -[HMDCameraSnapshotRemoteStreamReceiver snapShotSendFailed:]
  -[HMDCameraSnapshotRemoteStreamReceiver _callDidSaveImageDelegateWithError:]
  -[HMDCameraSnapshotRemoteStreamReceiver _callGettingImageDelegate:]
  -[HMDCameraSnapshotRemoteStreamReceiver setRelayReceiver:]
  -[HMDCameraSnapshotRemoteStreamReceiver relayReceiver:didReceiveFile:]


AWDHomeKitCameraRecordingBulkSendDataRead : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned long duration
 @property  BOOL hasCameraUUID
 @property  NSString *cameraUUID
 @property  BOOL hasSessionUUID
 @property  NSString *sessionUUID
 @property  BOOL hasSequenceNumber
 @property  unsigned long sequenceNumber
 @property  BOOL hasChunkSequenceNumber
 @property  unsigned long chunkSequenceNumber
 @property  BOOL hasBytesRead
 @property  unsigned long bytesRead
 @property  BOOL hasStatus
 @property  unsigned int status
 @property  BOOL hasBitRate
 @property  unsigned long bitRate
 @property  BOOL hasImageHeight
 @property  unsigned long imageHeight
 @property  BOOL hasImageWidth
 @property  unsigned long imageWidth
 @property  BOOL hasIFrameInterval
 @property  unsigned long iFrameInterval

  // instance methods
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasSequenceNumber:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead copyWithZone:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setSessionUUID:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasSequenceNumber]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setSequenceNumber:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasStatus]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasStatus:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead sessionUUID]
  -[AWDHomeKitCameraRecordingBulkSendDataRead sequenceNumber]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setBitRate:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasImageHeight:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead .cxx_destruct]
  -[AWDHomeKitCameraRecordingBulkSendDataRead timestamp]
  -[AWDHomeKitCameraRecordingBulkSendDataRead bitRate]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setTimestamp:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasDuration:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead imageHeight]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasTimestamp:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasImageWidth:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setImageWidth:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead readFrom:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setImageHeight:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasImageWidth]
  -[AWDHomeKitCameraRecordingBulkSendDataRead writeTo:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead isEqual:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasImageHeight]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setDuration:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead bytesRead]
  -[AWDHomeKitCameraRecordingBulkSendDataRead copyTo:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead dictionaryRepresentation]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setStatus:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasDuration]
  -[AWDHomeKitCameraRecordingBulkSendDataRead mergeFrom:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasTimestamp]
  -[AWDHomeKitCameraRecordingBulkSendDataRead imageWidth]
  -[AWDHomeKitCameraRecordingBulkSendDataRead status]
  -[AWDHomeKitCameraRecordingBulkSendDataRead duration]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasBitRate]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasBitRate:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasSessionUUID]
  -[AWDHomeKitCameraRecordingBulkSendDataRead cameraUUID]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setChunkSequenceNumber:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead iFrameInterval]
  -[AWDHomeKitCameraRecordingBulkSendDataRead chunkSequenceNumber]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setCameraUUID:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setBytesRead:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setIFrameInterval:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasCameraUUID]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasChunkSequenceNumber:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasChunkSequenceNumber]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasBytesRead:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasBytesRead]
  -[AWDHomeKitCameraRecordingBulkSendDataRead setHasIFrameInterval:]
  -[AWDHomeKitCameraRecordingBulkSendDataRead hasIFrameInterval]


HMDFMF : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMDFMF fmfStatusWithDict:]
  +[HMDFMF fmfStatusWithValue:]
  +[HMDFMF fmfStatusWithNumber:]
  +[HMDFMF fmfStatusWithMessage:]
  +[HMDFMF fmfStatusWithCoder:]

  // instance methods
  -[HMDFMF number]
  -[HMDFMF addToCoder:]
  -[HMDFMF addToPayload:]
  -[HMDFMF isEqual:]
  -[HMDFMF value]
  -[HMDFMF initWithNumber:]


HMDBackingStoreTransactionItem : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBackingStoreChangeObject>
 @property  HMFMessage *message
 @property  HMDBackingStoreModelObject *change
 @property  NSSet *dependentUUIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDBackingStoreTransactionItem message]
  -[HMDBackingStoreTransactionItem change]
  -[HMDBackingStoreTransactionItem .cxx_destruct]
  -[HMDBackingStoreTransactionItem dependentUUIDs]
  -[HMDBackingStoreTransactionItem initWithChange:message:]


HMDBackingStoreTransactionBlock : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDBackingStore *backingStore
 @property  NSMutableArray *objects
 @property  BOOL committed
 @property  HMDBackingStoreTransactionOptions *options
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBackingStoreTransactionBlock logCategory]
  +[HMDBackingStoreTransactionBlock sort:]

  // instance methods
  -[HMDBackingStoreTransactionBlock save:]
  -[HMDBackingStoreTransactionBlock run]
  -[HMDBackingStoreTransactionBlock objects]
  -[HMDBackingStoreTransactionBlock setObjects:]
  -[HMDBackingStoreTransactionBlock save]
  -[HMDBackingStoreTransactionBlock logIdentifier]
  -[HMDBackingStoreTransactionBlock .cxx_destruct]
  -[HMDBackingStoreTransactionBlock run:]
  -[HMDBackingStoreTransactionBlock options]
  -[HMDBackingStoreTransactionBlock addObjects:]
  -[HMDBackingStoreTransactionBlock setBackingStore:]
  -[HMDBackingStoreTransactionBlock backingStore]
  -[HMDBackingStoreTransactionBlock setCommitted:]
  -[HMDBackingStoreTransactionBlock committed]
  -[HMDBackingStoreTransactionBlock debugString:]
  -[HMDBackingStoreTransactionBlock add:]
  -[HMDBackingStoreTransactionBlock dumpDebug:]
  -[HMDBackingStoreTransactionBlock dumpDebug]
  -[HMDBackingStoreTransactionBlock add:withMessage:]
  -[HMDBackingStoreTransactionBlock initWithBackingStore:options:label:]
  -[HMDBackingStoreTransactionBlock runWithoutSave:]


HMDDeviceCapabilities : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBackingStoreObjectProtocol, HMDBackingStoreModelBackedObjectProtocol, NSCopying, NSSecureCoding>
 @property  HMDDeviceCapabilitiesModel *objectModel
 @property  NSUUID *modelParentIdentifier
 @property  BOOL supportsKeychainSync
 @property  BOOL supportsDeviceSetup
 @property  BOOL supportsKeyTransferClient
 @property  BOOL supportsKeyTransferServer
 @property  BOOL supportsStandaloneMode
 @property  BOOL supportsCloudDataSync
 @property  BOOL supportsWholeHouseAudio
 @property  BOOL supportsAssistantAccessControl
 @property  BOOL residentCapable
 @property  BOOL remoteGatewayCapable
 @property  BOOL supportsHomeInvitation
 @property  BOOL supportsTargetControl
 @property  BOOL supportsMultiUser
 @property  BOOL supportsCompanionInitiatedRestart
 @property  BOOL supportsCameraRecording
 @property  BOOL supportsRouterManagement
 @property  BOOL supportsShortcutActions
 @property  BOOL supportsMediaActions
 @property  BOOL supportsCameraSignificantEventNotifications
 @property  BOOL supportsCameraActivityZones
 @property  BOOL supportsFaceClassification
 @property  BOOL supportsNaturalLighting
 @property  BOOL supportsIDSActivityMonitorPresence
 @property  BOOL supportsCameraRecordingReachabilityNotifications
 @property  BOOL supportsThirdPartyMusic
 @property  BOOL supportsDoorbellChime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class modelClass
 @property  NSUUID *modelIdentifier

  // class methods
  +[HMDDeviceCapabilities supportsSecureCoding]
  +[HMDDeviceCapabilities deviceCapabilities]
  +[HMDDeviceCapabilities isCompanionCapable]
  +[HMDDeviceCapabilities supportsLocalization]
  +[HMDDeviceCapabilities supportsRemoteAccess]
  +[HMDDeviceCapabilities supportsAddingAccessory]
  +[HMDDeviceCapabilities supportsBulletinBoard]
  +[HMDDeviceCapabilities supportsDeviceLock]
  +[HMDDeviceCapabilities supportedPairingCapabilities]
  +[HMDDeviceCapabilities supportsUserNotifications]
  +[HMDDeviceCapabilities supportsReceivingRemoteCameraStream]
  +[HMDDeviceCapabilities supportsBackboard]
  +[HMDDeviceCapabilities isAppleMediaAccessory]
  +[HMDDeviceCapabilities supportsSymptomsHandler]
  +[HMDDeviceCapabilities supportsTargetControllerAutoConfigure]
  +[HMDDeviceCapabilities supportsCustomerReset]
  +[HMDDeviceCapabilities supportsStereoPairingV1]
  +[HMDDeviceCapabilities supportsStereoPairingV2]
  +[HMDDeviceCapabilities supportsCameraSnapshotRequestViaRelay]
  +[HMDDeviceCapabilities deviceCapabilitiesModelIdentifierWithParentIdentifier:]
  +[HMDDeviceCapabilities supportsIntentDonation]
  +[HMDDeviceCapabilities supportsHomeApp]
  +[HMDDeviceCapabilities supportsDismissUserNotificationAndDialog]
  +[HMDDeviceCapabilities supportsSyncingToSharedUsers]
  +[HMDDeviceCapabilities supportsHomeKitDataStream]

  // instance methods
  -[HMDDeviceCapabilities copyWithZone:]
  -[HMDDeviceCapabilities modelIdentifier]
  -[HMDDeviceCapabilities init]
  -[HMDDeviceCapabilities attributeDescriptions]
  -[HMDDeviceCapabilities .cxx_destruct]
  -[HMDDeviceCapabilities supportsMultiUser]
  -[HMDDeviceCapabilities objectModel]
  -[HMDDeviceCapabilities encodeWithCoder:]
  -[HMDDeviceCapabilities supportsTargetControl]
  -[HMDDeviceCapabilities modelClass]
  -[HMDDeviceCapabilities isEqual:]
  -[HMDDeviceCapabilities supportsNaturalLighting]
  -[HMDDeviceCapabilities supportsCompanionInitiatedRestart]
  -[HMDDeviceCapabilities supportsThirdPartyMusic]
  -[HMDDeviceCapabilities supportsDoorbellChime]
  -[HMDDeviceCapabilities initWithObjectModel:]
  -[HMDDeviceCapabilities initWithCoder:]
  -[HMDDeviceCapabilities setObjectModel:]
  -[HMDDeviceCapabilities modelObjectWithChangeType:version:]
  -[HMDDeviceCapabilities supportsShortcutActions]
  -[HMDDeviceCapabilities supportsMediaActions]
  -[HMDDeviceCapabilities transactionObjectUpdated:newValues:message:]
  -[HMDDeviceCapabilities transactionObjectRemoved:message:]
  -[HMDDeviceCapabilities supportsCameraActivityZones]
  -[HMDDeviceCapabilities supportsFaceClassification]
  -[HMDDeviceCapabilities supportsCameraRecording]
  -[HMDDeviceCapabilities isResidentCapable]
  -[HMDDeviceCapabilities isRemoteGatewayCapable]
  -[HMDDeviceCapabilities supportsCameraRecordingReachabilityNotifications]
  -[HMDDeviceCapabilities supportsKeyTransferServer]
  -[HMDDeviceCapabilities supportsKeychainSync]
  -[HMDDeviceCapabilities supportsDeviceSetup]
  -[HMDDeviceCapabilities supportsWholeHouseAudio]
  -[HMDDeviceCapabilities modelBackedObjects]
  -[HMDDeviceCapabilities modelParentIdentifier]
  -[HMDDeviceCapabilities setModelParentIdentifier:]
  -[HMDDeviceCapabilities backingStoreObjectsWithChangeType:version:]
  -[HMDDeviceCapabilities supportsCloudDataSync]
  -[HMDDeviceCapabilities supportsStandaloneMode]
  -[HMDDeviceCapabilities supportsRouterManagement]
  -[HMDDeviceCapabilities supportsCameraSignificantEventNotifications]
  -[HMDDeviceCapabilities supportsKeyTransferClient]
  -[HMDDeviceCapabilities initWithProductInfo:homekitVersion:]
  -[HMDDeviceCapabilities supportsAssistantAccessControl]
  -[HMDDeviceCapabilities supportsHomeInvitation]
  -[HMDDeviceCapabilities supportsIDSActivityMonitorPresence]
  -[HMDDeviceCapabilities initWithProductInfo:]


HMDDeviceCapabilitiesModel : HMDBackingStoreModelObject
 @property  NSNumber *supportsKeychainSync
 @property  NSNumber *supportsDeviceSetup
 @property  NSNumber *supportsKeyTransferClient
 @property  NSNumber *supportsKeyTransferServer
 @property  NSNumber *supportsStandaloneMode
 @property  NSNumber *supportsCloudDataSync
 @property  NSNumber *supportsWholeHouseAudio
 @property  NSNumber *supportsAssistantAccessControl
 @property  NSNumber *residentCapable
 @property  NSNumber *remoteGatewayCapable
 @property  NSNumber *supportsHomeInvitation
 @property  NSNumber *supportsTargetControl
 @property  NSNumber *supportsMultiUser
 @property  NSNumber *supportsCompanionInitiatedRestart
 @property  NSNumber *supportsCameraRecording
 @property  NSNumber *supportsRouterManagement
 @property  NSNumber *supportsShortcutActions
 @property  NSNumber *supportsMediaActions
 @property  NSNumber *supportsCameraSignificantEventNotifications
 @property  NSNumber *supportsCameraActivityZones
 @property  NSNumber *supportsFaceClassification
 @property  NSNumber *supportsNaturalLighting
 @property  NSNumber *supportsIDSActivityMonitorPresence
 @property  NSNumber *supportsCameraRecordingReachabilityNotifications
 @property  NSNumber *supportsThirdPartyMusic
 @property  NSNumber *supportsDoorbellChime
 @property  NSNumber *supportsStereoPairingV1
 @property  NSNumber *supportsStereoPairingV2

  // class methods
  +[HMDDeviceCapabilitiesModel properties]
  +[HMDDeviceCapabilitiesModel schemaHashRoot]

  // instance methods
  -[HMDDeviceCapabilitiesModel .cxx_destruct]
  -[HMDDeviceCapabilitiesModel supportsDoorbellChime]
  -[HMDDeviceCapabilitiesModel setSupportsDoorbellChime:]
  -[HMDDeviceCapabilitiesModel supportsStereoPairingV1]
  -[HMDDeviceCapabilitiesModel supportsStereoPairingV2]
  -[HMDDeviceCapabilitiesModel setSupportsStereoPairingV1:]
  -[HMDDeviceCapabilitiesModel setSupportsStereoPairingV2:]


AWDHomeKitMessageHomeLocationReport : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  NSMutableArray *rawLocations
 @property  BOOL hasSelectedHomeLocation
 @property  AWDHomeKitMessageLocation *selectedHomeLocation
 @property  BOOL hasNumIterationToConverge
 @property  unsigned int numIterationToConverge
 @property  BOOL hasNearestLOI
 @property  AWDHomeKitMessageLocation *nearestLOI

  // class methods
  +[AWDHomeKitMessageHomeLocationReport rawLocationsType]

  // instance methods
  -[AWDHomeKitMessageHomeLocationReport copyWithZone:]
  -[AWDHomeKitMessageHomeLocationReport .cxx_destruct]
  -[AWDHomeKitMessageHomeLocationReport timestamp]
  -[AWDHomeKitMessageHomeLocationReport setTimestamp:]
  -[AWDHomeKitMessageHomeLocationReport setHasTimestamp:]
  -[AWDHomeKitMessageHomeLocationReport readFrom:]
  -[AWDHomeKitMessageHomeLocationReport writeTo:]
  -[AWDHomeKitMessageHomeLocationReport isEqual:]
  -[AWDHomeKitMessageHomeLocationReport copyTo:]
  -[AWDHomeKitMessageHomeLocationReport dictionaryRepresentation]
  -[AWDHomeKitMessageHomeLocationReport mergeFrom:]
  -[AWDHomeKitMessageHomeLocationReport hasTimestamp]
  -[AWDHomeKitMessageHomeLocationReport selectedHomeLocation]
  -[AWDHomeKitMessageHomeLocationReport setSelectedHomeLocation:]
  -[AWDHomeKitMessageHomeLocationReport addRawLocations:]
  -[AWDHomeKitMessageHomeLocationReport rawLocationsCount]
  -[AWDHomeKitMessageHomeLocationReport clearRawLocations]
  -[AWDHomeKitMessageHomeLocationReport rawLocationsAtIndex:]
  -[AWDHomeKitMessageHomeLocationReport setNearestLOI:]
  -[AWDHomeKitMessageHomeLocationReport hasSelectedHomeLocation]
  -[AWDHomeKitMessageHomeLocationReport setNumIterationToConverge:]
  -[AWDHomeKitMessageHomeLocationReport setHasNumIterationToConverge:]
  -[AWDHomeKitMessageHomeLocationReport hasNumIterationToConverge]
  -[AWDHomeKitMessageHomeLocationReport hasNearestLOI]
  -[AWDHomeKitMessageHomeLocationReport rawLocations]
  -[AWDHomeKitMessageHomeLocationReport setRawLocations:]
  -[AWDHomeKitMessageHomeLocationReport numIterationToConverge]
  -[AWDHomeKitMessageHomeLocationReport nearestLOI]


HMDWatchManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, IDSServiceDelegate>
 @property  IDSService *service
 @property  NSArray *watches
 @property  NSArray *connectedWatches
 @property  BOOL pairedWithWatch
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDWatchManager logCategory]
  +[HMDWatchManager shortDescription]
  +[HMDWatchManager sharedManager]
  +[HMDWatchManager isCompatibleWatchDevice:]

  // instance methods
  -[HMDWatchManager init]
  -[HMDWatchManager attributeDescriptions]
  -[HMDWatchManager .cxx_destruct]
  -[HMDWatchManager service:connectedDevicesChanged:]
  -[HMDWatchManager service:devicesChanged:]
  -[HMDWatchManager service]
  -[HMDWatchManager watches]
  -[HMDWatchManager isPairedWithWatch]
  -[HMDWatchManager connectedWatches]
  -[HMDWatchManager __initializeConnectedDevices]
  -[HMDWatchManager connectedWatchFromDeviceID:]


HMDAccessorySettingsControllerDependencyFactory : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDAccessorySettingsControllerDependencyFactory>
  // instance methods
  -[HMDAccessorySettingsControllerDependencyFactory timerWithReason:interval:]
  -[HMDAccessorySettingsControllerDependencyFactory settingModelForUpdateWithIdentifier:parent:value:configNumber:]
  -[HMDAccessorySettingsControllerDependencyFactory createMessageHandlerWithQueue:delegate:]
  -[HMDAccessorySettingsControllerDependencyFactory assertWithCondition:message:]


HMDAccessorySettingsController : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate, HMDAccessorySettingsBackingStoreTransactionReceiverDelegate, HMDAccessorySettingsMessageController, NSSecureCoding>
 @property  <HMDAccessorySettingsControllerDependencyFactory> *factory
 @property  NSMutableArray *allChildrenIdentifiers
 @property  <HMDAccessorySettingsControllerDataSource> *dataSource
 @property  <HMDAccessorySettingsControllerDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *parentUUID
 @property  NSString *codingKey
 @property  NSMutableSet *dependantControllers
 @property  NSMapTable *groupsMap
 @property  NSMapTable *settingsMap
 @property  HMDAccessorySettingsController *ownerController
 @property  BOOL isSettingOwner
 @property  BOOL isMigrationOwner
 @property  HMFTimer *fixupSettingsTimer
 @property  HMFTimer *auditSettingsTimer
 @property  NSMutableSet *constraintItemsMarkedForRemoval
 @property  BOOL didInitiateSettingsCreationForOlderSoftwareCounterpart
 @property  <HMDAccessorySettingsMessageHandler> *messageHandler
 @property  <HMDBackingStoreObjectProtocol> *transactionReceiver
 @property  NSArray *childrenIdentifiers
 @property  HMDAccessorySettingGroup *rootGroup
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessorySettingsController supportsSecureCoding]
  +[HMDAccessorySettingsController logCategory]

  // instance methods
  -[HMDAccessorySettingsController factory]
  -[HMDAccessorySettingsController timerDidFire:]
  -[HMDAccessorySettingsController messageHandler]
  -[HMDAccessorySettingsController logIdentifier]
  -[HMDAccessorySettingsController isProxy]
  -[HMDAccessorySettingsController groupsMap]
  -[HMDAccessorySettingsController settingsMap]
  -[HMDAccessorySettingsController codingKey]
  -[HMDAccessorySettingsController setRootGroup:]
  -[HMDAccessorySettingsController setGroupsMap:]
  -[HMDAccessorySettingsController setSettingsMap:]
  -[HMDAccessorySettingsController .cxx_destruct]
  -[HMDAccessorySettingsController workQueue]
  -[HMDAccessorySettingsController encodeWithCoder:]
  -[HMDAccessorySettingsController dataSource]
  -[HMDAccessorySettingsController settingForKeyPath:]
  -[HMDAccessorySettingsController delegate]
  -[HMDAccessorySettingsController decodeWithCoder:]
  -[HMDAccessorySettingsController initWithCoder:]
  -[HMDAccessorySettingsController parentUUID]
  -[HMDAccessorySettingsController rootGroup]
  -[HMDAccessorySettingsController transactionReceiver]
  -[HMDAccessorySettingsController handleUpdatedGroupModel:completion:]
  -[HMDAccessorySettingsController handleUpdatedSettingModel:completion:]
  -[HMDAccessorySettingsController handleUpdatedSettingConstraintModel:completion:]
  -[HMDAccessorySettingsController handleRemovedSettingModel:completion:]
  -[HMDAccessorySettingsController handleRemovedGroupModel:completion:]
  -[HMDAccessorySettingsController handleRemovedSettingConstraintModel:completion:]
  -[HMDAccessorySettingsController settingsHierarchyDidChange]
  -[HMDAccessorySettingsController initWithQueue:delegate:dataSource:parentUUID:codingKey:]
  -[HMDAccessorySettingsController configureIsSettingOwner:home:]
  -[HMDAccessorySettingsController modelObjectsForSettings]
  -[HMDAccessorySettingsController mergeWithSettingsMetadata:]
  -[HMDAccessorySettingsController childrenIdentifiers]
  -[HMDAccessorySettingsController configureIsSettingOwner:migrationOwner:home:]
  -[HMDAccessorySettingsController didDetectCounterpartUsesSoftwareVersionBasedMigrationOwner]
  -[HMDAccessorySettingsController addDependant:]
  -[HMDAccessorySettingsController removeAllDependants]
  -[HMDAccessorySettingsController auditOnFirstFetch]
  -[HMDAccessorySettingsController isSettingOwner]
  -[HMDAccessorySettingsController updateSettingOwner:]
  -[HMDAccessorySettingsController initWithQueue:delegate:dataSource:parentUUID:codingKey:settingOwner:migrationOwner:factory:]
  -[HMDAccessorySettingsController isMigrationOwner]
  -[HMDAccessorySettingsController dependantControllers]
  -[HMDAccessorySettingsController _didAddSetting:]
  -[HMDAccessorySettingsController _didRemoveSetting:]
  -[HMDAccessorySettingsController _didAddGroup:]
  -[HMDAccessorySettingsController _didRemoveGroup:]
  -[HMDAccessorySettingsController auditSettingsTimer]
  -[HMDAccessorySettingsController setAuditSettingsTimer:]
  -[HMDAccessorySettingsController ownerController]
  -[HMDAccessorySettingsController scheduleAuditWithReason:from:]
  -[HMDAccessorySettingsController _scheduleAuditWithReason:]
  -[HMDAccessorySettingsController hasDependants]
  -[HMDAccessorySettingsController _reevaluateDependantSettings]
  -[HMDAccessorySettingsController _migrateSettingsWithCompletion:]
  -[HMDAccessorySettingsController scheduleDependantFixup]
  -[HMDAccessorySettingsController _keyPathsForSettings]
  -[HMDAccessorySettingsController didChangeDependantSettings:ownerSettingsKeyPaths:]
  -[HMDAccessorySettingsController fixupSettingsTimer]
  -[HMDAccessorySettingsController _performDependantFixup]
  -[HMDAccessorySettingsController setFixupSettingsTimer:]
  -[HMDAccessorySettingsController _performSettingsAudit]
  -[HMDAccessorySettingsController didBecomeIndependantOwner]
  -[HMDAccessorySettingsController owner:didUpdateSettings:]
  -[HMDAccessorySettingsController _updateValue:forSetting:senderVersion:senderProductClass:completion:]
  -[HMDAccessorySettingsController _onMessageUpdateValue:settingKeyPath:senderVersion:senderProductClass:completion:]
  -[HMDAccessorySettingsController _replaceConstraintsOnMessageToChildWithAdditions:removedChildConstraints:settingKeyPath:senderProductClass:completion:]
  -[HMDAccessorySettingsController _cacheConstraintAdditions:removals:setting:]
  -[HMDAccessorySettingsController _replaceConstraintsOnSetting:additions:removals:completion:]
  -[HMDAccessorySettingsController constraintItemsMarkedForRemoval]
  -[HMDAccessorySettingsController updatedSetting:model:completion:]
  -[HMDAccessorySettingsController addedSettingModel:completion:]
  -[HMDAccessorySettingsController didChangeSetting:]
  -[HMDAccessorySettingsController didUpdateSettingConstraints:]
  -[HMDAccessorySettingsController setOwnerController:]
  -[HMDAccessorySettingsController setIsSettingOwner:]
  -[HMDAccessorySettingsController setIsMigrationOwner:]
  -[HMDAccessorySettingsController _createSettings]
  -[HMDAccessorySettingsController _removeDependant:]
  -[HMDAccessorySettingsController didInitiateSettingsCreationForOlderSoftwareCounterpart]
  -[HMDAccessorySettingsController setDidInitiateSettingsCreationForOlderSoftwareCounterpart:]
  -[HMDAccessorySettingsController onMessageUpdateValue:settingIdentifier:senderVersion:senderProductClass:completion:]
  -[HMDAccessorySettingsController onMessageAddConstraint:settingIdentifier:completion:]
  -[HMDAccessorySettingsController onMessageRemoveConstraint:settingIdentifier:completion:]
  -[HMDAccessorySettingsController onMessageUpdateConstraints:settingIdentifier:completion:]
  -[HMDAccessorySettingsController onMessageReplaceConstraintsWithAdditions:constraintIdsToRemove:settingIdentifier:senderProductClass:completion:]
  -[HMDAccessorySettingsController haveGroupWithUUID:]
  -[HMDAccessorySettingsController groupForKeyPath:]
  -[HMDAccessorySettingsController removeDependant:]
  -[HMDAccessorySettingsController allChildrenIdentifiers]
  -[HMDAccessorySettingsController setConstraintItemsMarkedForRemoval:]


HMDCameraClipImporter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMBLocalZone *localZone
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logIdentifier
 @property  NSUUID *cameraProfileUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraClipImporter logCategory]

  // instance methods
  -[HMDCameraClipImporter logIdentifier]
  -[HMDCameraClipImporter .cxx_destruct]
  -[HMDCameraClipImporter workQueue]
  -[HMDCameraClipImporter localZone]
  -[HMDCameraClipImporter cameraProfileUUID]
  -[HMDCameraClipImporter initWithLocalZone:cameraProfileUUID:]
  -[HMDCameraClipImporter importClipsWithImportData:]


HMDCameraClipImportMetadata : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *startDate
 @property  double targetFragmentDuration
 @property  NSArray *videoSegments
 @property  NSArray *posterFrames

  // instance methods
  -[HMDCameraClipImportMetadata startDate]
  -[HMDCameraClipImportMetadata .cxx_destruct]
  -[HMDCameraClipImportMetadata posterFrames]
  -[HMDCameraClipImportMetadata targetFragmentDuration]
  -[HMDCameraClipImportMetadata videoSegments]
  -[HMDCameraClipImportMetadata initClipData:]


HMDCameraClipImportVideoSegmentMetadata : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *resourcePath
 @property  BOOL header
 @property  double duration

  // instance methods
  -[HMDCameraClipImportVideoSegmentMetadata resourcePath]
  -[HMDCameraClipImportVideoSegmentMetadata .cxx_destruct]
  -[HMDCameraClipImportVideoSegmentMetadata isHeader]
  -[HMDCameraClipImportVideoSegmentMetadata duration]
  -[HMDCameraClipImportVideoSegmentMetadata initWithVideoSegmentMetadata:]


HMDCameraClipImportPosterFrameMetadata : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *resourcePath
 @property  double offset
 @property  unsigned long width
 @property  unsigned long height

  // instance methods
  -[HMDCameraClipImportPosterFrameMetadata resourcePath]
  -[HMDCameraClipImportPosterFrameMetadata width]
  -[HMDCameraClipImportPosterFrameMetadata .cxx_destruct]
  -[HMDCameraClipImportPosterFrameMetadata height]
  -[HMDCameraClipImportPosterFrameMetadata offset]
  -[HMDCameraClipImportPosterFrameMetadata initWithPosterFrameMetadata:]


HMDPairedSync : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <PSYSyncCoordinatorDelegate>
 @property  <HMDPairedSyncDelegate> *delegate
 @property  PSYSyncCoordinator *coordinator
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  unsigned long currentOperationCount
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDPairedSync initWithDelegate:queue:]
  -[HMDPairedSync syncCoordinator:didInvalidateSyncSession:]
  -[HMDPairedSync coordinator]
  -[HMDPairedSync .cxx_destruct]
  -[HMDPairedSync syncCoordinatorDidChangeSyncRestriction:]
  -[HMDPairedSync workQueue]
  -[HMDPairedSync syncCoordinator:beginSyncSession:]
  -[HMDPairedSync delegate]
  -[HMDPairedSync currentOperationCount]
  -[HMDPairedSync setCurrentOperationCount:]
  -[HMDPairedSync restrictionAsString:]
  -[HMDPairedSync _callStartSync]
  -[HMDPairedSync needToSync]
  -[HMDPairedSync syncComplete]
  -[HMDPairedSync syncPartiallyComplete]


HMDCameraRecordingUploadOperationEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double runTime
 @property  unsigned long runTimeInMilliseconds
 @property  int operationType
 @property  BOOL didCausePreviousClipToFinalizeDueToDurationLimit
 @property  NSError *error
 @property  unsigned long totalClipDurationMilliseconds
 @property  double totalClipDuration
 @property  unsigned long retryCount
 @property  unsigned long operationStartTime
 @property  NSDate *operationStartDate
 @property  NSUUID *clipModelID
 @property  unsigned long startTimestamp

  // class methods
  +[HMDCameraRecordingUploadOperationEvent uuid]
  +[HMDCameraRecordingUploadOperationEvent operationTypeFromOperation:]

  // instance methods
  -[HMDCameraRecordingUploadOperationEvent setRetryCount:]
  -[HMDCameraRecordingUploadOperationEvent operationStartTime]
  -[HMDCameraRecordingUploadOperationEvent attributeDescriptions]
  -[HMDCameraRecordingUploadOperationEvent runTime]
  -[HMDCameraRecordingUploadOperationEvent retryCount]
  -[HMDCameraRecordingUploadOperationEvent setError:]
  -[HMDCameraRecordingUploadOperationEvent .cxx_destruct]
  -[HMDCameraRecordingUploadOperationEvent runTimeInMilliseconds]
  -[HMDCameraRecordingUploadOperationEvent setRunTime:]
  -[HMDCameraRecordingUploadOperationEvent error]
  -[HMDCameraRecordingUploadOperationEvent startTimestamp]
  -[HMDCameraRecordingUploadOperationEvent operationType]
  -[HMDCameraRecordingUploadOperationEvent setOperationType:]
  -[HMDCameraRecordingUploadOperationEvent AWDMessageType]
  -[HMDCameraRecordingUploadOperationEvent metricForAWD]
  -[HMDCameraRecordingUploadOperationEvent initWithClipModelID:operation:]
  -[HMDCameraRecordingUploadOperationEvent clipModelID]
  -[HMDCameraRecordingUploadOperationEvent setOperationStartDate:]
  -[HMDCameraRecordingUploadOperationEvent setTotalClipDuration:]
  -[HMDCameraRecordingUploadOperationEvent didCausePreviousClipToFinalizeDueToDurationLimit]
  -[HMDCameraRecordingUploadOperationEvent totalClipDurationMilliseconds]
  -[HMDCameraRecordingUploadOperationEvent totalClipDuration]
  -[HMDCameraRecordingUploadOperationEvent operationStartDate]
  -[HMDCameraRecordingUploadOperationEvent setDidCausePreviousClipToFinalizeDueToDurationLimit:]


HMDCameraSnapshotRemoteRelaySender : HMDCameraSnapshotSender <HMDCameraGetSnapshotProtocol, HMDCameraSnapshotSenderProtocol, HMDCameraSnapshotLocalDelegate, HMDCameraSnapshotIDSRelayInitiatorDelegate, HMFLogging>
 @property  HMDCameraSnapshotLocal *snapshotLocal
 @property  <HMDCameraSnapshotRemoteRelaySenderDelegate> *delegate
 @property  HMDCameraSnapshotIDSRelayInitiator *relayInitiator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotRemoteRelaySender logCategory]

  // instance methods
  -[HMDCameraSnapshotRemoteRelaySender logIdentifier]
  -[HMDCameraSnapshotRemoteRelaySender dealloc]
  -[HMDCameraSnapshotRemoteRelaySender .cxx_destruct]
  -[HMDCameraSnapshotRemoteRelaySender delegate]
  -[HMDCameraSnapshotRemoteRelaySender snapshotLocal]
  -[HMDCameraSnapshotRemoteRelaySender getSnapshot:]
  -[HMDCameraSnapshotRemoteRelaySender _callDidStartCaptureImageDelegate:]
  -[HMDCameraSnapshotRemoteRelaySender _callDidCompleteSendImageDelegate:]
  -[HMDCameraSnapshotRemoteRelaySender snapShotTransferComplete]
  -[HMDCameraSnapshotRemoteRelaySender snapshotLocal:didSaveSnapshotFile:error:sessionID:]
  -[HMDCameraSnapshotRemoteRelaySender initWithSessionID:workQueue:options:device:accessory:delegate:delegateQueue:uniqueIdentifier:snapshotRequestHandler:]
  -[HMDCameraSnapshotRemoteRelaySender relayInitiator]
  -[HMDCameraSnapshotRemoteRelaySender relayInitiatorIDSSessionDidStart:]
  -[HMDCameraSnapshotRemoteRelaySender relayInitiatorDidSendIDSInvitation:]
  -[HMDCameraSnapshotRemoteRelaySender relayInitiator:didEndIDSSessionWithError:]
  -[HMDCameraSnapshotRemoteRelaySender relayInitiatorDidSendDataSuccessfully:]
  -[HMDCameraSnapshotRemoteRelaySender relayInitiatorDidStartDataSend:]
  -[HMDCameraSnapshotRemoteRelaySender relayInitiator:didSendData:]


HMDCloudRecord : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *objectID
 @property  BOOL decryptionFailed
 @property  BOOL encryptionFailed
 @property  BOOL controllerIdentifierChanged
 @property  NSString *recordType
 @property  NSString *recordName
 @property  HMDCloudZone *cloudZone
 @property  CKRecordID *recordID
 @property  NSData *cachedData
 @property  NSData *data
 @property  CKRecord *record
 @property  BOOL recordCreated
 @property  BOOL recordCached
 @property  unsigned long objectEncoding

  // class methods
  +[HMDCloudRecord logCategory]
  +[HMDCloudRecord shortDescription]

  // instance methods
  -[HMDCloudRecord setData:]
  -[HMDCloudRecord setObjectID:]
  -[HMDCloudRecord init]
  -[HMDCloudRecord clearData]
  -[HMDCloudRecord setRecordID:]
  -[HMDCloudRecord .cxx_destruct]
  -[HMDCloudRecord setCachedData:]
  -[HMDCloudRecord data]
  -[HMDCloudRecord setRecord:]
  -[HMDCloudRecord shortDescription]
  -[HMDCloudRecord recordID]
  -[HMDCloudRecord record]
  -[HMDCloudRecord recordName]
  -[HMDCloudRecord recordType]
  -[HMDCloudRecord objectID]
  -[HMDCloudRecord cachedData]
  -[HMDCloudRecord cloudZone]
  -[HMDCloudRecord setCloudZone:]
  -[HMDCloudRecord decryptionFailed]
  -[HMDCloudRecord setDecryptionFailed:]
  -[HMDCloudRecord encryptionFailed]
  -[HMDCloudRecord setEncryptionFailed:]
  -[HMDCloudRecord controllerIdentifierChanged]
  -[HMDCloudRecord setControllerIdentifierChanged:]
  -[HMDCloudRecord initWithObjectID:recordName:cloudZone:]
  -[HMDCloudRecord isRecordCreated]
  -[HMDCloudRecord extractObjectChange]
  -[HMDCloudRecord objectEncoding]
  -[HMDCloudRecord encodeObjectChange:]
  -[HMDCloudRecord isRecordCached]


HMDCloudLegacyModelObject : HMDBackingStoreModelObject
 @property  NSNumber *legacyRecordType
 @property  NSData *data1
 @property  NSData *data2

  // class methods
  +[HMDCloudLegacyModelObject properties]


HMDCloudLegacyMetadataRecord : HMDCloudRecord
  // class methods
  +[HMDCloudLegacyMetadataRecord legacyModelWithMetadata:]

  // instance methods
  -[HMDCloudLegacyMetadataRecord setData:]
  -[HMDCloudLegacyMetadataRecord clearData]
  -[HMDCloudLegacyMetadataRecord data]
  -[HMDCloudLegacyMetadataRecord recordType]
  -[HMDCloudLegacyMetadataRecord extractObjectChange]
  -[HMDCloudLegacyMetadataRecord objectEncoding]
  -[HMDCloudLegacyMetadataRecord encodeObjectChange:]


HMDCloudLegacyHomeDataRecord : HMDCloudRecord
 @property  NSData *dataVersion2

  // class methods
  +[HMDCloudLegacyHomeDataRecord legacyModelWithHomeDataV0:homeDataV2:]

  // instance methods
  -[HMDCloudLegacyHomeDataRecord setData:]
  -[HMDCloudLegacyHomeDataRecord clearData]
  -[HMDCloudLegacyHomeDataRecord data]
  -[HMDCloudLegacyHomeDataRecord recordType]
  -[HMDCloudLegacyHomeDataRecord extractObjectChange]
  -[HMDCloudLegacyHomeDataRecord objectEncoding]
  -[HMDCloudLegacyHomeDataRecord encodeObjectChange:]
  -[HMDCloudLegacyHomeDataRecord dataVersion2]
  -[HMDCloudLegacyHomeDataRecord setDataVersion2:]


HMDCloudLegacyHomeDataVersion3Record : HMDCloudRecord
  // class methods
  +[HMDCloudLegacyHomeDataVersion3Record legacyModelWithHomeDataV3:]

  // instance methods
  -[HMDCloudLegacyHomeDataVersion3Record setData:]
  -[HMDCloudLegacyHomeDataVersion3Record clearData]
  -[HMDCloudLegacyHomeDataVersion3Record data]
  -[HMDCloudLegacyHomeDataVersion3Record recordType]
  -[HMDCloudLegacyHomeDataVersion3Record extractObjectChange]
  -[HMDCloudLegacyHomeDataVersion3Record objectEncoding]
  -[HMDCloudLegacyHomeDataVersion3Record encodeObjectChange:]


HMDAccessorySettingMergeHandler : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMDAccessorySettingMergeHandler mergeFirst:second:mergeStrategy:shouldAddMissing:]
  +[HMDAccessorySettingMergeHandler _mergeValidValueConstraintsFirst:second:]
  +[HMDAccessorySettingMergeHandler _mergeRangeConstraintsFirst:second:shouldAddMissing:]
  +[HMDAccessorySettingMergeHandler _mergeFirst:second:mergedConstraints:mergeStrategy:]
  +[HMDAccessorySettingMergeHandler _extractMinMaxStep:minConstraint:maxConstraint:stepConstraint:first:]
  +[HMDAccessorySettingMergeHandler _isNumber:betweenStart:andEnd:first:]


HMDUserManagementOperationTimestamp : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  HMDDevice *device
 @property  NSDate *timestamp
 @property  NSNumber *state

  // class methods
  +[HMDUserManagementOperationTimestamp supportsSecureCoding]

  // instance methods
  -[HMDUserManagementOperationTimestamp device]
  -[HMDUserManagementOperationTimestamp attributeDescriptions]
  -[HMDUserManagementOperationTimestamp .cxx_destruct]
  -[HMDUserManagementOperationTimestamp timestamp]
  -[HMDUserManagementOperationTimestamp encodeWithCoder:]
  -[HMDUserManagementOperationTimestamp shortDescription]
  -[HMDUserManagementOperationTimestamp isEqual:]
  -[HMDUserManagementOperationTimestamp state]
  -[HMDUserManagementOperationTimestamp initWithCoder:]
  -[HMDUserManagementOperationTimestamp initWithDevice:state:]


AWDHomeKitDurationEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
  // instance methods
  -[AWDHomeKitDurationEvent copyWithZone:]
  -[AWDHomeKitDurationEvent readFrom:]
  -[AWDHomeKitDurationEvent writeTo:]
  -[AWDHomeKitDurationEvent isEqual:]
  -[AWDHomeKitDurationEvent copyTo:]
  -[AWDHomeKitDurationEvent dictionaryRepresentation]
  -[AWDHomeKitDurationEvent mergeFrom:]


HMDUserMessageFilter : HMFMessageFilter /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDUserMessageFilter logCategory]
  +[HMDUserMessageFilter canInitWithMessage:]

  // instance methods
  -[HMDUserMessageFilter acceptWithPolicies:error:]


HMDCameraProfile : HMDAccessoryProfile <HMDCameraSettingProactiveReaderDelegate, HMDCameraProfileSettingsManagerDelegate, HMDCameraSignificantEventListenerDelegate, HMFNetMonitorDelegate, HMFTimerDelegate, HMDCameraClipManagerDelegate>
 @property  NSSet *cameraStreamManagers
 @property  HMDCameraSnapshotManager *snapshotManager
 @property  HMDCameraStreamSnapshotHandler *streamSnapshotHandler
 @property  NSMutableArray *settingProactiveReaders
 @property  HMFNetMonitor *networkMonitor
 @property  HMDCameraResidentMessageHandler *residentMessageHandler
 @property  HMDCameraProfileSettingsManager *cameraSettingsManager
 @property  HMDCameraRecordingReachabilityEventManager *reachabilityEventManager
 @property  NSUUID *cloudZoneUUID
 @property  HMFTimer *recordingEventsCleanupTimer
 @property  HMDCameraClipUserNotificationCenter *clipUserNotificationCenter
 @property  HMDCameraClipManager *clipManager
 @property  HMDPredicateUtilities *predicateUtilities
 @property  HMDCameraRecordingManager *cameraRecordingManager
 @property  @? recordingEventsCleanupTimerFactory
 @property  @? recordingManagerFactory
 @property  BOOL microphonePresent
 @property  BOOL speakerPresent
 @property  _HMCameraUserSettings *currentSettings
 @property  HMDService *recordingManagementService
 @property  HMDCameraSignificantEventListener *significantEventListener
 @property  HMDHAPAccessory *hapAccessory
 @property  BOOL supportsCameraRecordingFeature
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraProfile supportsSecureCoding]
  +[HMDCameraProfile logCategory]
  +[HMDCameraProfile hasMessageReceiverChildren]
  +[HMDCameraProfile bulletinBoard]
  +[HMDCameraProfile setBulletinBoard:]

  // instance methods
  -[HMDCameraProfile timerDidFire:]
  -[HMDCameraProfile clipManager]
  -[HMDCameraProfile reachabilityEventManager]
  -[HMDCameraProfile dealloc]
  -[HMDCameraProfile setUp]
  -[HMDCameraProfile .cxx_destruct]
  -[HMDCameraProfile snapshotManager]
  -[HMDCameraProfile encodeWithCoder:]
  -[HMDCameraProfile urlString]
  -[HMDCameraProfile setClipManager:]
  -[HMDCameraProfile unconfigure]
  -[HMDCameraProfile isEqual:]
  -[HMDCameraProfile networkMonitor]
  -[HMDCameraProfile currentSettings]
  -[HMDCameraProfile registerForMessages]
  -[HMDCameraProfile dumpState]
  -[HMDCameraProfile messageReceiverChildren]
  -[HMDCameraProfile hapAccessory]
  -[HMDCameraProfile clipManagerDidStart:]
  -[HMDCameraProfile clipManagerDidStartUpCloudZone:]
  -[HMDCameraProfile clipManagerDidStop:]
  -[HMDCameraProfile clipManager:didUpdateSignificantEvent:withHomePresence:]
  -[HMDCameraProfile clipManager:didDeleteClipWithUUID:]
  -[HMDCameraProfile clipManagerDidDisableCloudStorage:]
  -[HMDCameraProfile isMicrophonePresent]
  -[HMDCameraProfile removeCloudData]
  -[HMDCameraProfile isCameraRecordingFeatureSupported]
  -[HMDCameraProfile assistantObject]
  -[HMDCameraProfile streamSnapshotHandler]
  -[HMDCameraProfile listener:didReceiveSignificantEvent:heroFrameData:]
  -[HMDCameraProfile predicateUtilities]
  -[HMDCameraProfile setPredicateUtilities:]
  -[HMDCameraProfile residentMessageHandler]
  -[HMDCameraProfile networkMonitorIsReachable:]
  -[HMDCameraProfile networkMonitorIsUnreachable:]
  -[HMDCameraProfile cameraProfileSettingsManager:canEnableRecordingWithCompletion:]
  -[HMDCameraProfile cameraProfileSettingsManager:canDisableRecordingWithCompletion:]
  -[HMDCameraProfile cameraSettingProactiveReaderDidCompleteRead:]
  -[HMDCameraProfile cloudZoneUUID]
  -[HMDCameraProfile initWithAccessory:services:msgDispatcher:settingsManager:workQueue:]
  -[HMDCameraProfile tearDownWithReplacementCameraProfile:]
  -[HMDCameraProfile initWithAccessory:services:msgDispatcher:settingsManager:workQueue:reachabilityEventManager:]
  -[HMDCameraProfile _createCameraManagers:]
  -[HMDCameraProfile _setControlSupport]
  -[HMDCameraProfile recordingManagementService]
  -[HMDCameraProfile createCameraClipUserNotificationCenter]
  -[HMDCameraProfile cameraSettingsManager]
  -[HMDCameraProfile setClipUserNotificationCenter:]
  -[HMDCameraProfile cameraRecordingManager]
  -[HMDCameraProfile setCameraRecordingManager:]
  -[HMDCameraProfile recordingManagerFactory]
  -[HMDCameraProfile _handleNegotiateStreamRequest:]
  -[HMDCameraProfile _handleStreamControlRequest:]
  -[HMDCameraProfile cameraStreamManagers]
  -[HMDCameraProfile handleCameraProfileSettingsDidChangeNotification:]
  -[HMDCameraProfile handleResidentsChanged:]
  -[HMDCameraProfile _createCameraRecordingManager]
  -[HMDCameraProfile _createSignificantEventListener]
  -[HMDCameraProfile clipUserNotificationCenter]
  -[HMDCameraProfile settingProactiveReaders]
  -[HMDCameraProfile _shouldNotifyForSignificantEvent:homePresence:]
  -[HMDCameraProfile recordingEventsCleanupTimerFactory]
  -[HMDCameraProfile setRecordingEventsCleanupTimer:]
  -[HMDCameraProfile recordingEventsCleanupTimer]
  -[HMDCameraProfile isSpeakerPresent]
  -[HMDCameraProfile setCloudZoneUUID:]
  -[HMDCameraProfile significantEventListener]
  -[HMDCameraProfile setSignificantEventListener:]
  -[HMDCameraProfile setRecordingEventsCleanupTimerFactory:]
  -[HMDCameraProfile setRecordingManagerFactory:]


HMDDeviceSetupManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL running

  // class methods
  +[HMDDeviceSetupManager sharedManager]

  // instance methods
  -[HMDDeviceSetupManager stopAdvertising]
  -[HMDDeviceSetupManager followUpController]
  -[HMDDeviceSetupManager init]
  -[HMDDeviceSetupManager dealloc]
  -[HMDDeviceSetupManager .cxx_destruct]
  -[HMDDeviceSetupManager isRunning]
  -[HMDDeviceSetupManager startAdvertising]


HMDBackingStoreCKOperationZoneCompletionEvent : HMDHMBLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSError *error

  // class methods
  +[HMDBackingStoreCKOperationZoneCompletionEvent uuid]

  // instance methods
  -[HMDBackingStoreCKOperationZoneCompletionEvent .cxx_destruct]
  -[HMDBackingStoreCKOperationZoneCompletionEvent error]
  -[HMDBackingStoreCKOperationZoneCompletionEvent AWDMessageType]
  -[HMDBackingStoreCKOperationZoneCompletionEvent metricForAWD]
  -[HMDBackingStoreCKOperationZoneCompletionEvent initWithCloudZoneID:error:]


AWDHomeKitEventTriggerUserConfirmationSend : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasSessionID
 @property  NSString *sessionID
 @property  BOOL hasResultErrorCode
 @property  int resultErrorCode

  // instance methods
  -[AWDHomeKitEventTriggerUserConfirmationSend hasSessionID]
  -[AWDHomeKitEventTriggerUserConfirmationSend copyWithZone:]
  -[AWDHomeKitEventTriggerUserConfirmationSend setSessionID:]
  -[AWDHomeKitEventTriggerUserConfirmationSend sessionID]
  -[AWDHomeKitEventTriggerUserConfirmationSend .cxx_destruct]
  -[AWDHomeKitEventTriggerUserConfirmationSend timestamp]
  -[AWDHomeKitEventTriggerUserConfirmationSend setTimestamp:]
  -[AWDHomeKitEventTriggerUserConfirmationSend setHasTimestamp:]
  -[AWDHomeKitEventTriggerUserConfirmationSend readFrom:]
  -[AWDHomeKitEventTriggerUserConfirmationSend writeTo:]
  -[AWDHomeKitEventTriggerUserConfirmationSend isEqual:]
  -[AWDHomeKitEventTriggerUserConfirmationSend copyTo:]
  -[AWDHomeKitEventTriggerUserConfirmationSend dictionaryRepresentation]
  -[AWDHomeKitEventTriggerUserConfirmationSend mergeFrom:]
  -[AWDHomeKitEventTriggerUserConfirmationSend hasTimestamp]
  -[AWDHomeKitEventTriggerUserConfirmationSend setResultErrorCode:]
  -[AWDHomeKitEventTriggerUserConfirmationSend setHasResultErrorCode:]
  -[AWDHomeKitEventTriggerUserConfirmationSend hasResultErrorCode]
  -[AWDHomeKitEventTriggerUserConfirmationSend resultErrorCode]


HMDAppleMediaAccessoryAdvertisement : HMDMediaAccessoryAdvertisement
 @property  HMDDevice *device

  // instance methods
  -[HMDAppleMediaAccessoryAdvertisement device]
  -[HMDAppleMediaAccessoryAdvertisement .cxx_destruct]
  -[HMDAppleMediaAccessoryAdvertisement initWithOutputDevice:device:]
  -[HMDAppleMediaAccessoryAdvertisement initWithIdentifier:name:category:device:]


HMDHomeLocationEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *tuples
 @property  CLLocation *selectedHomeLocation
 @property  unsigned long numOfIterations
 @property  CLLocation *nearestLOI

  // class methods
  +[HMDHomeLocationEvent initialize]
  +[HMDHomeLocationEvent uuid]
  +[HMDHomeLocationEvent eventWithLocationTuples:selectedHomeLocation:numberOfIterations:nearestLOI:]

  // instance methods
  -[HMDHomeLocationEvent tuples]
  -[HMDHomeLocationEvent .cxx_destruct]
  -[HMDHomeLocationEvent setTuples:]
  -[HMDHomeLocationEvent AWDMessageType]
  -[HMDHomeLocationEvent metricForAWD]
  -[HMDHomeLocationEvent selectedHomeLocation]
  -[HMDHomeLocationEvent setSelectedHomeLocation:]
  -[HMDHomeLocationEvent awdLocationFromLocationTuple:]
  -[HMDHomeLocationEvent setNearestLOI:]
  -[HMDHomeLocationEvent nearestLOI]
  -[HMDHomeLocationEvent setNumOfIterations:]
  -[HMDHomeLocationEvent numOfIterations]


HMDCameraVideoTier : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  HMDVideoResolution *videoResolution
 @property  NSNumber *maxBitRate
 @property  NSNumber *minBitRate
 @property  NSNumber *rtcpInterval
 @property  NSNumber *framerate

  // class methods
  +[HMDCameraVideoTier supportsSecureCoding]

  // instance methods
  -[HMDCameraVideoTier .cxx_destruct]
  -[HMDCameraVideoTier encodeWithCoder:]
  -[HMDCameraVideoTier framerate]
  -[HMDCameraVideoTier setFramerate:]
  -[HMDCameraVideoTier videoResolution]
  -[HMDCameraVideoTier isEqual:]
  -[HMDCameraVideoTier initWithCoder:]
  -[HMDCameraVideoTier rtcpInterval]
  -[HMDCameraVideoTier initWithVideoResolution:framerate:minBitRate:maxBitRate:rtcpInterval:]
  -[HMDCameraVideoTier maxBitRate]
  -[HMDCameraVideoTier minBitRate]


HMDPhotoLibraryImportingPersonsImportedLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  long long totalNumberOfImportedPersons
 @property  long long numberOfNamedImportedPersons

  // class methods
  +[HMDPhotoLibraryImportingPersonsImportedLogEvent identifier]

  // instance methods
  -[HMDPhotoLibraryImportingPersonsImportedLogEvent eventName]
  -[HMDPhotoLibraryImportingPersonsImportedLogEvent serializedEvent]
  -[HMDPhotoLibraryImportingPersonsImportedLogEvent totalNumberOfImportedPersons]
  -[HMDPhotoLibraryImportingPersonsImportedLogEvent numberOfNamedImportedPersons]
  -[HMDPhotoLibraryImportingPersonsImportedLogEvent initWithTotalNumberOfImportedPersons:numberOfNamedImportedPersons:]


HMDPhotoLibraryImportingFaceCropsImportedLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  long long numberOfImportedFaceCrops

  // class methods
  +[HMDPhotoLibraryImportingFaceCropsImportedLogEvent identifier]

  // instance methods
  -[HMDPhotoLibraryImportingFaceCropsImportedLogEvent eventName]
  -[HMDPhotoLibraryImportingFaceCropsImportedLogEvent serializedEvent]
  -[HMDPhotoLibraryImportingFaceCropsImportedLogEvent numberOfImportedFaceCrops]
  -[HMDPhotoLibraryImportingFaceCropsImportedLogEvent initWithNumberOfImportedFaceCrops:]


HMDPhotoLibraryImportingPhotoLibraryRenamedPersonsLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  long long numberOfRenamedPersons

  // class methods
  +[HMDPhotoLibraryImportingPhotoLibraryRenamedPersonsLogEvent identifier]

  // instance methods
  -[HMDPhotoLibraryImportingPhotoLibraryRenamedPersonsLogEvent eventName]
  -[HMDPhotoLibraryImportingPhotoLibraryRenamedPersonsLogEvent serializedEvent]
  -[HMDPhotoLibraryImportingPhotoLibraryRenamedPersonsLogEvent numberOfRenamedPersons]
  -[HMDPhotoLibraryImportingPhotoLibraryRenamedPersonsLogEvent initWithNumberOfRenamedPersons:]


HMDLaunchEvent : HMDLogEvent <HMDDiagnosticReportLogging, HMDCoreAnalyticsLogging>
 @property  double diagnosticReportThreshold
 @property  NSString *diagnosticReportEventType
 @property  NSString *diagnosticReportEventSubType
 @property  HMFActivity *activity

  // class methods
  +[HMDLaunchEvent identifier]

  // instance methods
  -[HMDLaunchEvent setActivity:]
  -[HMDLaunchEvent eventName]
  -[HMDLaunchEvent activity]
  -[HMDLaunchEvent init]
  -[HMDLaunchEvent .cxx_destruct]
  -[HMDLaunchEvent markXPCMessageTransportStarted]
  -[HMDLaunchEvent serializedEvent]
  -[HMDLaunchEvent updateDiagnosticReportSignature:]
  -[HMDLaunchEvent diagnosticReportEventType]
  -[HMDLaunchEvent diagnosticReportEventSubType]
  -[HMDLaunchEvent diagnosticReportThreshold]


HMDBackingStoreCKRebuildEvent : HMDHMBLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  int rebuildStatus

  // class methods
  +[HMDBackingStoreCKRebuildEvent uuid]

  // instance methods
  -[HMDBackingStoreCKRebuildEvent AWDMessageType]
  -[HMDBackingStoreCKRebuildEvent metricForAWD]
  -[HMDBackingStoreCKRebuildEvent initWithCloudZoneID:rebuildStatus:]
  -[HMDBackingStoreCKRebuildEvent rebuildStatus]


HMDLightProfileDataSource : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDLightProfileDataSource>
 @property  NSDate *date
 @property  NSTimeZone *localTimeZone
 @property  NSDictionary *naturalLightingCurveResourceFileContent
 @property  double naturalLightingCurveUpdateInterval
 @property  double naturalLightingCurveUpdateAccessoryTimeDifferenceThreshold
 @property  long long naturalLightingEnabledMaxRetryCount
 @property  double naturalLightingEnabledRetryInterval
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDLightProfileDataSource date]
  -[HMDLightProfileDataSource localTimeZone]
  -[HMDLightProfileDataSource millisecondsElapsedSinceStartOfDayWithDate:timeZone:]
  -[HMDLightProfileDataSource dispatchAfterTimeInterval:queue:block:]
  -[HMDLightProfileDataSource naturalLightingCurveResourceFileContent]
  -[HMDLightProfileDataSource naturalLightingCurveUpdateInterval]
  -[HMDLightProfileDataSource naturalLightingCurveUpdateAccessoryTimeDifferenceThreshold]
  -[HMDLightProfileDataSource naturalLightingEnabledMaxRetryCount]
  -[HMDLightProfileDataSource naturalLightingEnabledRetryInterval]


HMDCameraVideoTierParameters : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding, HMFLogging>
 @property  HMDCameraVideoTier *firstPickedTier
 @property  NSArray *tierOrder
 @property  NSDictionary *videoTierCombinations
 @property  HMDCameraStreamSessionID *sessionID
 @property  HMDCameraVideoTier *currentPickedTier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraVideoTierParameters supportsSecureCoding]
  +[HMDCameraVideoTierParameters logCategory]

  // instance methods
  -[HMDCameraVideoTierParameters sessionID]
  -[HMDCameraVideoTierParameters logIdentifier]
  -[HMDCameraVideoTierParameters .cxx_destruct]
  -[HMDCameraVideoTierParameters encodeWithCoder:]
  -[HMDCameraVideoTierParameters initWithCoder:]
  -[HMDCameraVideoTierParameters updateTierParameters:firstPickedParameter:]
  -[HMDCameraVideoTierParameters pickHigherTier]
  -[HMDCameraVideoTierParameters pickLowerTier]
  -[HMDCameraVideoTierParameters currentPickedTier]
  -[HMDCameraVideoTierParameters videoTierCombinations]
  -[HMDCameraVideoTierParameters updateTierOrder:]
  -[HMDCameraVideoTierParameters updateFirstPickedTier:]
  -[HMDCameraVideoTierParameters setCurrentPickedTier:]
  -[HMDCameraVideoTierParameters _generateAllVideoTiers:]
  -[HMDCameraVideoTierParameters tierOrder]
  -[HMDCameraVideoTierParameters setTierOrder:]
  -[HMDCameraVideoTierParameters setFirstPickedTier:]
  -[HMDCameraVideoTierParameters initWithSessionID:streamingCapabilities:]
  -[HMDCameraVideoTierParameters firstPickedTier]


HMDHomePersonManagerSettingsModel : HMDBackingStoreModelObject
 @property  NSString *zoneUUIDString
 @property  NSUUID *zoneUUID

  // class methods
  +[HMDHomePersonManagerSettingsModel properties]
  +[HMDHomePersonManagerSettingsModel modelUUIDWithUUID:]

  // instance methods
  -[HMDHomePersonManagerSettingsModel initWithHomeUUID:]
  -[HMDHomePersonManagerSettingsModel setZoneUUID:]
  -[HMDHomePersonManagerSettingsModel zoneUUID]
  -[HMDHomePersonManagerSettingsModel createSettings]


AWDHomeKitRelaySession : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  BOOL hasErrorCode
 @property  int errorCode
 @property  BOOL hasStatusCode
 @property  int statusCode
 @property  BOOL hasActionType
 @property  int actionType

  // instance methods
  -[AWDHomeKitRelaySession setErrorCode:]
  -[AWDHomeKitRelaySession copyWithZone:]
  -[AWDHomeKitRelaySession hasErrorCode]
  -[AWDHomeKitRelaySession actionType]
  -[AWDHomeKitRelaySession setHasStatusCode:]
  -[AWDHomeKitRelaySession errorCode]
  -[AWDHomeKitRelaySession setHasErrorCode:]
  -[AWDHomeKitRelaySession hasStatusCode]
  -[AWDHomeKitRelaySession timestamp]
  -[AWDHomeKitRelaySession setTimestamp:]
  -[AWDHomeKitRelaySession setStatusCode:]
  -[AWDHomeKitRelaySession statusCode]
  -[AWDHomeKitRelaySession setHasDuration:]
  -[AWDHomeKitRelaySession setHasTimestamp:]
  -[AWDHomeKitRelaySession readFrom:]
  -[AWDHomeKitRelaySession writeTo:]
  -[AWDHomeKitRelaySession isEqual:]
  -[AWDHomeKitRelaySession setDuration:]
  -[AWDHomeKitRelaySession copyTo:]
  -[AWDHomeKitRelaySession dictionaryRepresentation]
  -[AWDHomeKitRelaySession hasDuration]
  -[AWDHomeKitRelaySession mergeFrom:]
  -[AWDHomeKitRelaySession hasTimestamp]
  -[AWDHomeKitRelaySession setActionType:]
  -[AWDHomeKitRelaySession setHasActionType:]
  -[AWDHomeKitRelaySession hasActionType]
  -[AWDHomeKitRelaySession actionTypeAsString:]
  -[AWDHomeKitRelaySession StringAsActionType:]
  -[AWDHomeKitRelaySession duration]


HMDAppleMediaAccessoryMessageHandler : HMDMessageHandler
  // instance methods
  -[HMDAppleMediaAccessoryMessageHandler initWithMessageTargetUUID:messageDispatcher:notificationCenter:ownerPrivateRemoteMessages:adminPrivateRemoteMessages:internalMessages:notifications:notificationsToObject:]
  -[HMDAppleMediaAccessoryMessageHandler handleAppleMediaAccessoryDeviceUpdatedNotification:]
  -[HMDAppleMediaAccessoryMessageHandler handleAppleMediaAccessoryDeviceIsReachableNotification:]


HMPBMetadata : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasVersion
 @property  int version
 @property  NSMutableArray *hapCharacteristics
 @property  NSMutableArray *hapServices
 @property  NSMutableArray *hapCategories

  // class methods
  +[HMPBMetadata hapCharacteristicsType]
  +[HMPBMetadata hapServicesType]
  +[HMPBMetadata hapCategoriesType]

  // instance methods
  -[HMPBMetadata copyWithZone:]
  -[HMPBMetadata addHapCharacteristics:]
  -[HMPBMetadata addHapServices:]
  -[HMPBMetadata addHapCategories:]
  -[HMPBMetadata clearHapCharacteristics]
  -[HMPBMetadata hapCharacteristicsAtIndex:]
  -[HMPBMetadata clearHapServices]
  -[HMPBMetadata hapServicesAtIndex:]
  -[HMPBMetadata clearHapCategories]
  -[HMPBMetadata hapCategoriesAtIndex:]
  -[HMPBMetadata setHapCharacteristics:]
  -[HMPBMetadata setHapServices:]
  -[HMPBMetadata setHapCategories:]
  -[HMPBMetadata hapServices]
  -[HMPBMetadata setHasVersion:]
  -[HMPBMetadata hapCharacteristics]
  -[HMPBMetadata .cxx_destruct]
  -[HMPBMetadata setVersion:]
  -[HMPBMetadata readFrom:]
  -[HMPBMetadata writeTo:]
  -[HMPBMetadata isEqual:]
  -[HMPBMetadata hapCategories]
  -[HMPBMetadata hapCharacteristicsCount]
  -[HMPBMetadata hapServicesCount]
  -[HMPBMetadata hapCategoriesCount]
  -[HMPBMetadata version]
  -[HMPBMetadata copyTo:]
  -[HMPBMetadata dictionaryRepresentation]
  -[HMPBMetadata hasVersion]
  -[HMPBMetadata mergeFrom:]


HMDCompanionLinkClient : NSObject /usr/lib/libc++.1.dylib <HMDCompanionLinkClient>
 @property  RPCompanionLinkClient *client
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? deviceFoundHandler
 @property  @? deviceLostHandler
 @property  @? deviceChangedHandler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDCompanionLinkClient setClient:]
  -[HMDCompanionLinkClient client]
  -[HMDCompanionLinkClient deviceFoundHandler]
  -[HMDCompanionLinkClient setDeviceChangedHandler:]
  -[HMDCompanionLinkClient dealloc]
  -[HMDCompanionLinkClient .cxx_destruct]
  -[HMDCompanionLinkClient deviceChangedHandler]
  -[HMDCompanionLinkClient dispatchQueue]
  -[HMDCompanionLinkClient setDeviceFoundHandler:]
  -[HMDCompanionLinkClient setDeviceLostHandler:]
  -[HMDCompanionLinkClient setDispatchQueue:]
  -[HMDCompanionLinkClient deviceLostHandler]
  -[HMDCompanionLinkClient stop]
  -[HMDCompanionLinkClient start]


HMDWHAAccessControlEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isP2PEnabled
 @property  int privilegeLevel
 @property  BOOL isPasswordSet

  // class methods
  +[HMDWHAAccessControlEvent initialize]
  +[HMDWHAAccessControlEvent uuid]
  +[HMDWHAAccessControlEvent eventWithP2PEnabled:privilegeLevel:passwordSet:]
  +[HMDWHAAccessControlEvent awdUserPrivilegeFromHMUserPrivilege:]

  // instance methods
  -[HMDWHAAccessControlEvent AWDMessageType]
  -[HMDWHAAccessControlEvent metricForAWD]
  -[HMDWHAAccessControlEvent setIsP2PEnabled:]
  -[HMDWHAAccessControlEvent privilegeLevel]
  -[HMDWHAAccessControlEvent setPrivilegeLevel:]
  -[HMDWHAAccessControlEvent setIsPasswordSet:]
  -[HMDWHAAccessControlEvent isP2PEnabled]
  -[HMDWHAAccessControlEvent isPasswordSet]


HMDHomeManagerXPCMessageSendAnyOptionsPolicy : HMDXPCMessageSendPolicy
 @property  unsigned long options
 @property  unsigned long entitlements
 @property  BOOL active

  // instance methods
  -[HMDHomeManagerXPCMessageSendAnyOptionsPolicy copyWithZone:]
  -[HMDHomeManagerXPCMessageSendAnyOptionsPolicy options]
  -[HMDHomeManagerXPCMessageSendAnyOptionsPolicy entitlements]
  -[HMDHomeManagerXPCMessageSendAnyOptionsPolicy isActive]
  -[HMDHomeManagerXPCMessageSendAnyOptionsPolicy isEqual:]
  -[HMDHomeManagerXPCMessageSendAnyOptionsPolicy initWithEntitlements:options:active:]
  -[HMDHomeManagerXPCMessageSendAnyOptionsPolicy initWithEntitlements:options:]
  -[HMDHomeManagerXPCMessageSendAnyOptionsPolicy canSendWithPolicyParameters:]


HMDRemoteDeviceInformation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  HMDDevice *device
 @property  long long state
 @property  BOOL reachable
 @property  HMFTimer *retryTimer
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDRemoteDeviceInformation setRetryTimer:]
  -[HMDRemoteDeviceInformation device]
  -[HMDRemoteDeviceInformation init]
  -[HMDRemoteDeviceInformation attributeDescriptions]
  -[HMDRemoteDeviceInformation retryTimer]
  -[HMDRemoteDeviceInformation setState:]
  -[HMDRemoteDeviceInformation .cxx_destruct]
  -[HMDRemoteDeviceInformation clearState:]
  -[HMDRemoteDeviceInformation isReachable]
  -[HMDRemoteDeviceInformation initWithDevice:]
  -[HMDRemoteDeviceInformation state]
  -[HMDRemoteDeviceInformation setReachable:reason:]
  -[HMDRemoteDeviceInformation queueConfirmationHandler:timeout:]
  -[HMDRemoteDeviceInformation completeConfirmationsWithError:]


HMDRemoteDeviceMonitor : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate, IDSServiceDelegate, HMDIDSActivityMonitorObserverDelegate, HMFNetMonitorDelegate>
 @property  IDSService *service
 @property  HMDIDSActivityMonitorObserver *activityObserver
 @property  BOOL started
 @property  HMFNetMonitor *netMonitor
 @property  HMFTimer *deviceHealthTimer
 @property  HMDAccountRegistry *accountRegistry
 @property  BOOL reachable
 @property  NSArray *unreachableDevices
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteDeviceMonitor logCategory]
  +[HMDRemoteDeviceMonitor pingMessageForDevice:timeout:restriction:]

  // instance methods
  -[HMDRemoteDeviceMonitor timerDidFire:]
  -[HMDRemoteDeviceMonitor isStarted]
  -[HMDRemoteDeviceMonitor setStarted:]
  -[HMDRemoteDeviceMonitor service:account:incomingMessage:fromID:context:]
  -[HMDRemoteDeviceMonitor init]
  -[HMDRemoteDeviceMonitor dealloc]
  -[HMDRemoteDeviceMonitor .cxx_destruct]
  -[HMDRemoteDeviceMonitor devices]
  -[HMDRemoteDeviceMonitor setReachable:]
  -[HMDRemoteDeviceMonitor isReachable]
  -[HMDRemoteDeviceMonitor service]
  -[HMDRemoteDeviceMonitor service:activeAccountsChanged:]
  -[HMDRemoteDeviceMonitor dumpState]
  -[HMDRemoteDeviceMonitor start]
  -[HMDRemoteDeviceMonitor activityObserver]
  -[HMDRemoteDeviceMonitor accountRegistry]
  -[HMDRemoteDeviceMonitor unreachableDevices]
  -[HMDRemoteDeviceMonitor confirmDevice:timeout:completionHandler:]
  -[HMDRemoteDeviceMonitor networkMonitorIsReachable:]
  -[HMDRemoteDeviceMonitor networkMonitorIsUnreachable:]
  -[HMDRemoteDeviceMonitor netMonitor]
  -[HMDRemoteDeviceMonitor startMonitoringDevice:]
  -[HMDRemoteDeviceMonitor initWithAccountRegistry:activityObserver:]
  -[HMDRemoteDeviceMonitor observer:didUpdateDevice:isOnline:]
  -[HMDRemoteDeviceMonitor handleCurrentDeviceUpdate:]
  -[HMDRemoteDeviceMonitor handleAccountRemoved:]
  -[HMDRemoteDeviceMonitor notifyDeviceReachabilityChange:forDevice:]
  -[HMDRemoteDeviceMonitor _startMonitoringDevice:]
  -[HMDRemoteDeviceMonitor handleAddedDeviceInformation:]
  -[HMDRemoteDeviceMonitor handleDeviceRemovedFromAccount:]
  -[HMDRemoteDeviceMonitor handleRemovedDeviceInformation:]
  -[HMDRemoteDeviceMonitor _deviceInformationForDevice:]
  -[HMDRemoteDeviceMonitor _sendPingToDevice:]
  -[HMDRemoteDeviceMonitor _startActivelyMonitoringDevice:]
  -[HMDRemoteDeviceMonitor stopMonitoringDevice:]
  -[HMDRemoteDeviceMonitor _handleGlobalReachabilityChange]
  -[HMDRemoteDeviceMonitor deviceHealthTimer]
  -[HMDRemoteDeviceMonitor _stopActivelyMonitoringDevice:]


HMDSnapshotCacheEntry : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDSnapshotFile *snapshotFile
 @property  NSString *proactiveSessionID
 @property  HMFTimer *timer
 @property  @? snapshotRequestCompletion

  // instance methods
  -[HMDSnapshotCacheEntry timer]
  -[HMDSnapshotCacheEntry .cxx_destruct]
  -[HMDSnapshotCacheEntry snapshotFile]
  -[HMDSnapshotCacheEntry proactiveSessionID]
  -[HMDSnapshotCacheEntry initWithProactiveSessionID:snapshotFile:timer:]
  -[HMDSnapshotCacheEntry snapshotRequestCompletion]
  -[HMDSnapshotCacheEntry setSnapshotRequestCompletion:]


AWDHomeKitAssistantAccessControl : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasIsEnabled
 @property  BOOL isEnabled
 @property  BOOL hasOptions
 @property  unsigned long options
 @property  BOOL hasNumEnabledAccessories
 @property  unsigned long numEnabledAccessories
 @property  BOOL hasNumCapableAccessories
 @property  unsigned long numCapableAccessories

  // instance methods
  -[AWDHomeKitAssistantAccessControl copyWithZone:]
  -[AWDHomeKitAssistantAccessControl setHasOptions:]
  -[AWDHomeKitAssistantAccessControl setIsEnabled:]
  -[AWDHomeKitAssistantAccessControl timestamp]
  -[AWDHomeKitAssistantAccessControl options]
  -[AWDHomeKitAssistantAccessControl setTimestamp:]
  -[AWDHomeKitAssistantAccessControl setHasIsEnabled:]
  -[AWDHomeKitAssistantAccessControl setHasTimestamp:]
  -[AWDHomeKitAssistantAccessControl hasOptions]
  -[AWDHomeKitAssistantAccessControl setOptions:]
  -[AWDHomeKitAssistantAccessControl isEnabled]
  -[AWDHomeKitAssistantAccessControl readFrom:]
  -[AWDHomeKitAssistantAccessControl writeTo:]
  -[AWDHomeKitAssistantAccessControl isEqual:]
  -[AWDHomeKitAssistantAccessControl hasIsEnabled]
  -[AWDHomeKitAssistantAccessControl copyTo:]
  -[AWDHomeKitAssistantAccessControl dictionaryRepresentation]
  -[AWDHomeKitAssistantAccessControl mergeFrom:]
  -[AWDHomeKitAssistantAccessControl hasTimestamp]
  -[AWDHomeKitAssistantAccessControl setNumEnabledAccessories:]
  -[AWDHomeKitAssistantAccessControl setNumCapableAccessories:]
  -[AWDHomeKitAssistantAccessControl numEnabledAccessories]
  -[AWDHomeKitAssistantAccessControl numCapableAccessories]
  -[AWDHomeKitAssistantAccessControl setHasNumEnabledAccessories:]
  -[AWDHomeKitAssistantAccessControl hasNumEnabledAccessories]
  -[AWDHomeKitAssistantAccessControl setHasNumCapableAccessories:]
  -[AWDHomeKitAssistantAccessControl hasNumCapableAccessories]


HMDCameraRecordingSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDCameraRecordingSessionVideoAnalyzerDelegate, HMDCameraClipUploaderDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDCameraProfile *camera
 @property  NSString *logIdentifier
 @property  <HMDCameraRecordingSessionFactory> *factory
 @property  <HMDCameraRecordingSessionVideoAnalyzer> *videoAnalyzer
 @property  HMFActivity *sessionActivity
 @property  HMDCameraSignificantEventServer *significantEventServer
 @property  HMDCameraRecordingSessionSignificantEventManager *significantEventManager
 @property  unsigned long recordingEventTriggers
 @property  BOOL noMoreFragmentsAvailable
 @property  BOOL active
 @property  unsigned long currentFragmentNumber
 @property  unsigned long pendingFragmentsCount
 @property  double cumulativeFragmentDuration
 @property  double currentClipDuration
 @property  HMDCameraClipUploader *clipUploader
 @property  HMDStreamData *cameraVideoInitFragment
 @property  HMICameraVideoFragment *introFragment
 @property  HMICameraVideoAnalyzerResult *introAnalyzerResult
 @property  NSData *analysisVideoInitData
 @property  NSNumber *remainingRecordingExtensionDuration
 @property  NSString *fragmentDirectoryPath
 @property  NSUUID *identifier
 @property  double configuredFragmentDuration
 @property  NSDictionary *homePresenceByPairingIdentity
 @property  HMDCameraRecordingSessionTimelineManager *timelineManager
 @property  <HMDCameraRecordingSessionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraRecordingSession logCategory]

  // instance methods
  -[HMDCameraRecordingSession factory]
  -[HMDCameraRecordingSession configure]
  -[HMDCameraRecordingSession logIdentifier]
  -[HMDCameraRecordingSession attributeDescriptions]
  -[HMDCameraRecordingSession .cxx_destruct]
  -[HMDCameraRecordingSession workQueue]
  -[HMDCameraRecordingSession identifier]
  -[HMDCameraRecordingSession setActive:]
  -[HMDCameraRecordingSession isActive]
  -[HMDCameraRecordingSession setDelegate:]
  -[HMDCameraRecordingSession activityZones]
  -[HMDCameraRecordingSession recordingEventTriggers]
  -[HMDCameraRecordingSession delegate]
  -[HMDCameraRecordingSession camera]
  -[HMDCameraRecordingSession sessionActivity]
  -[HMDCameraRecordingSession timelineManager]
  -[HMDCameraRecordingSession significantEventServer]
  -[HMDCameraRecordingSession homePresenceByPairingIdentity]
  -[HMDCameraRecordingSession configuredFragmentDuration]
  -[HMDCameraRecordingSession currentFragmentNumber]
  -[HMDCameraRecordingSession handleFragment:]
  -[HMDCameraRecordingSession handleNoMoreFragmentsAvailable]
  -[HMDCameraRecordingSession activityZonesIncludedForSignificantEventDetection]
  -[HMDCameraRecordingSession initWithWorkQueue:camera:configuredFragmentDuration:timelineManager:significantEventServer:homePresenceByPairingIdentity:]
  -[HMDCameraRecordingSession initWithWorkQueue:camera:configuredFragmentDuration:timelineManager:significantEventServer:homePresenceByPairingIdentity:factory:]
  -[HMDCameraRecordingSession videoAnalyzer]
  -[HMDCameraRecordingSession cameraVideoInitFragment]
  -[HMDCameraRecordingSession _isValidFirstSessionFragment:]
  -[HMDCameraRecordingSession setCameraVideoInitFragment:]
  -[HMDCameraRecordingSession _writeFragment:]
  -[HMDCameraRecordingSession _isValidNonFirstSessionFragment:]
  -[HMDCameraRecordingSession setCurrentFragmentNumber:]
  -[HMDCameraRecordingSession pendingFragmentsCount]
  -[HMDCameraRecordingSession setPendingFragmentsCount:]
  -[HMDCameraRecordingSession setNoMoreFragmentsAvailable:]
  -[HMDCameraRecordingSession _endSessionWithError:]
  -[HMDCameraRecordingSession _handleFragment:withResult:]
  -[HMDCameraRecordingSession _handleDidFailAnalysisForFragment:withError:]
  -[HMDCameraRecordingSession _shouldRecordFragmentWithAnalyzerResult:sequenceNumber:recordingEventTriggers:fragmentAnalyzedEvent:]
  -[HMDCameraRecordingSession setRemainingRecordingExtensionDuration:]
  -[HMDCameraRecordingSession remainingRecordingExtensionDuration]
  -[HMDCameraRecordingSession cumulativeFragmentDuration]
  -[HMDCameraRecordingSession currentClipDuration]
  -[HMDCameraRecordingSession introFragment]
  -[HMDCameraRecordingSession introAnalyzerResult]
  -[HMDCameraRecordingSession _finishCurrentClipUploader]
  -[HMDCameraRecordingSession clipUploader]
  -[HMDCameraRecordingSession setClipUploader:]
  -[HMDCameraRecordingSession _notifyForAnalyzerResult:fragment:dateOfOccurrence:timeOffsetWithinClip:recordingEventTriggers:]
  -[HMDCameraRecordingSession _uploadFragment:withDuration:posterFrames:clipFinalizedBecauseMaxDurationExceeded:]
  -[HMDCameraRecordingSession setIntroFragment:]
  -[HMDCameraRecordingSession setIntroAnalyzerResult:]
  -[HMDCameraRecordingSession setCumulativeFragmentDuration:]
  -[HMDCameraRecordingSession _shouldEndSession]
  -[HMDCameraRecordingSession analysisVideoInitData]
  -[HMDCameraRecordingSession setAnalysisVideoInitData:]
  -[HMDCameraRecordingSession setCurrentClipDuration:]
  -[HMDCameraRecordingSession significantEventManager]
  -[HMDCameraRecordingSession _notifyForSignificantEvent:recordingEventTriggers:fragmentNumber:]
  -[HMDCameraRecordingSession _submitNotificationSuccessMetricWithRecordingEventTriggers:fragmentNumber:]
  -[HMDCameraRecordingSession noMoreFragmentsAvailable]
  -[HMDCameraRecordingSession fragmentDirectoryPath]
  -[HMDCameraRecordingSession setFragmentDirectoryPath:]
  -[HMDCameraRecordingSession analyzer:didAnalyzeFragment:withResult:]
  -[HMDCameraRecordingSession analyzer:didNotAnalyzeFragment:withResult:]
  -[HMDCameraRecordingSession analyzer:didFailAnalysisForFragment:withError:]
  -[HMDCameraRecordingSession uploaderDidFailUpload:]


HMDMediaAccessoryAdvertisement : HMDAccessoryAdvertisement <HMDWACAccessoryAssociation>
 @property  HMDMediaOutputDevice *outputDevice
 @property  BOOL associated

  // class methods
  +[HMDMediaAccessoryAdvertisement canAirPortExpressSupportMediaAccessory:]

  // instance methods
  -[HMDMediaAccessoryAdvertisement setAssociated:]
  -[HMDMediaAccessoryAdvertisement initWithOutputDevice:]
  -[HMDMediaAccessoryAdvertisement .cxx_destruct]
  -[HMDMediaAccessoryAdvertisement outputDevice]
  -[HMDMediaAccessoryAdvertisement isAssociated]
  -[HMDMediaAccessoryAdvertisement associationOptions]
  -[HMDMediaAccessoryAdvertisement setOutputDevice:]
  -[HMDMediaAccessoryAdvertisement initWithIdentifier:name:category:]
  -[HMDMediaAccessoryAdvertisement matchesWACDeviceID:]


HMDFragmentationStreamTuple : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HAPFragmentationStream *fragmentationStream
 @property  NSString *objectUUID
 @property  HMFMessage *lastMessage
 @property  NSDate *expirationDate
 @property  BOOL expired

  // class methods
  +[HMDFragmentationStreamTuple tupleWithFragmentationStreamForObject:delegate:]

  // instance methods
  -[HMDFragmentationStreamTuple lastMessage]
  -[HMDFragmentationStreamTuple setLastMessage:]
  -[HMDFragmentationStreamTuple .cxx_destruct]
  -[HMDFragmentationStreamTuple close]
  -[HMDFragmentationStreamTuple isExpired]
  -[HMDFragmentationStreamTuple expirationDate]
  -[HMDFragmentationStreamTuple objectUUID]
  -[HMDFragmentationStreamTuple initWithFragmentationStreamForObject:delegate:]
  -[HMDFragmentationStreamTuple fragmentationStream]


HMDObsoleteUserModel : HMDBackingStoreModelObject
 @property  NSString *changeTag

  // class methods
  +[HMDObsoleteUserModel properties]


HMDUser : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDSettingsControllerDelegate, HMDCloudShareTrustManagerDataSource, HMDCloudShareTrustManagerDelegate, HMDUserDataControllerDelegate, HMDUserSettingsBackingStoreControllerDelegate, HMFLogging, HMFDumpState, HMDBackingStoreObjectProtocol, HMDHomeMessageReceiver, NSSecureCoding>
 @property  AVOutputDeviceAuthorizedPeer *av_authorizedPeer
 @property  BOOL hasCameraClipsAccess
 @property  NSString *encodingRemoteDisplayName
 @property  HMDAssistantAccessControl *assistantAccessControl
 @property  HMDSettingsControllerDependency *sharedSettingsControllerDependency
 @property  HMDCloudShareMessenger *shareMessenger
 @property  HMDSettingsControllerDependency *privateSettingsControllerDependency
 @property  HMDUserSettingsBackingStoreController *privateBackingStoreController
 @property  HMDUserDataController *userDataController
 @property  HMDUserPhotosPersonDataManager *photosPersonDataManager
 @property  HMDPersonSettingsManager *personSettingsManager
 @property  BOOL needsiTunesMultiUserRepair
 @property  NSUUID *uuid
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMBShareUserID *cloudShareID
 @property  HMDHome *home
 @property  HMUserPresenceAuthorization *presenceAuthStatus
 @property  unsigned long privilege
 @property  BOOL remoteAccessAllowed
 @property  NSNumber *camerasAccessLevelValue
 @property  HAPPairingIdentity *pairingIdentity
 @property  HMDAccountIdentifier *accountIdentifier
 @property  HMDCloudShareTrustManager *cloudShareTrustManager
 @property  HMDUserSettingsBackingStoreController *sharedBackingStoreController
 @property  NSString *relayIdentifier
 @property  NSString *userID
 @property  NAFuture *cloudShareIDFuture
 @property  NSString *displayName
 @property  BOOL administrator
 @property  BOOL owner
 @property  BOOL remoteGateway
 @property  BOOL currentUser
 @property  BOOL valid
 @property  NSUUID *assistantAccessControlModelUUID
 @property  HMPhotosPersonManagerSettings *photosPersonManagerSettings
 @property  HMDPhotosPersonManager *photosPersonManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isUserSettingsPrefEnabled
 @property  NSUUID *userUUID
 @property  BOOL isRunningOnHomeOwnersDevice
 @property  BOOL isCurrentUser
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDUser supportsSecureCoding]
  +[HMDUser logCategory]
  +[HMDUser hasMessageReceiverChildren]
  +[HMDUser currentUserWithPrivilege:forHome:]
  +[HMDUser userWithDictionary:forHome:]
  +[HMDUser userIDForAccountHandle:]
  +[HMDUser UUIDWithUserID:forHomeIdentifier:uuid:pairingIdentity:]
  +[HMDUser ownerWithUserID:home:pairingIdentity:homeManager:]

  // instance methods
  -[HMDUser messageTargetUUID]
  -[HMDUser messageDestination]
  -[HMDUser messageReceiveQueue]
  -[HMDUser setUserID:]
  -[HMDUser publicKey]
  -[HMDUser logIdentifier]
  -[HMDUser attributeDescriptions]
  -[HMDUser accountIdentifier]
  -[HMDUser userUUID]
  -[HMDUser photosPersonManager]
  -[HMDUser photosPersonManagerSettings]
  -[HMDUser uuid]
  -[HMDUser dealloc]
  -[HMDUser account]
  -[HMDUser isOwner]
  -[HMDUser .cxx_destruct]
  -[HMDUser setHome:]
  -[HMDUser encodeWithCoder:]
  -[HMDUser isAdministrator]
  -[HMDUser isValid]
  -[HMDUser isCurrentUser]
  -[HMDUser shortDescription]
  -[HMDUser setUUID:]
  -[HMDUser setDisplayName:]
  -[HMDUser unconfigure]
  -[HMDUser initWithModelObject:]
  -[HMDUser home]
  -[HMDUser personSettingsManager]
  -[HMDUser messageDispatcher]
  -[HMDUser isEqual:]
  -[HMDUser pairingIdentity]
  -[HMDUser userID]
  -[HMDUser registerForMessages]
  -[HMDUser isRemoteAccessAllowed]
  -[HMDUser setRemoteAccessAllowed:]
  -[HMDUser presenceAuthStatus]
  -[HMDUser setPresenceAuthStatus:]
  -[HMDUser camerasAccessLevel]
  -[HMDUser displayName]
  -[HMDUser dumpState]
  -[HMDUser setAssistantAccessControl:]
  -[HMDUser assistantAccessControl]
  -[HMDUser setPairingIdentity:]
  -[HMDUser needsiTunesMultiUserRepair]
  -[HMDUser setNeedsiTunesMultiUserRepair:]
  -[HMDUser setAccountIdentifier:]
  -[HMDUser initWithCoder:]
  -[HMDUser cloudShareID]
  -[HMDUser modelObjectWithChangeType:version:]
  -[HMDUser transactionObjectUpdated:newValues:message:]
  -[HMDUser transactionObjectRemoved:message:]
  -[HMDUser modelObjectWithChangeType:]
  -[HMDUser backingStoreObjects:]
  -[HMDUser setMessageDispatcher:]
  -[HMDUser pairingUsername]
  -[HMDUser refreshDisplayName]
  -[HMDUser isRemoteGateway]
  -[HMDUser dictionaryEncoding]
  -[HMDUser configureWithHome:]
  -[HMDUser relayAccessTokenForAccessory:]
  -[HMDUser _handleAssistantAccessControlUpdate:]
  -[HMDUser _handleMediaContentProfileAccessControlUpdate:]
  -[HMDUser handleAssistantAccessControlUpdate:]
  -[HMDUser handleMediaContentProfileAccessControlUpdate:]
  -[HMDUser addRelayAccessToken:]
  -[HMDUser handleRemovedAccessory:]
  -[HMDUser removeCloudData]
  -[HMDUser privilege]
  -[HMDUser initWithAccountHandle:home:pairingIdentity:privilege:]
  -[HMDUser setCamerasAccessLevelValue:]
  -[HMDUser setPrivilege:]
  -[HMDUser relayIdentifier]
  -[HMDUser updateRelayIdentifier:]
  -[HMDUser updateAdministrator:]
  -[HMDUser requiresMakoSupport]
  -[HMDUser privateSettingValuesByKeyPathForAWD]
  -[HMDUser sharedSettingValuesByKeyPathForAWD]
  -[HMDUser migrateCloudZone:migrationQueue:completion:]
  -[HMDUser removeAccessoriesFromAssistantAccessControlList:]
  -[HMDUser accountHandle]
  -[HMDUser setAccountHandle:]
  -[HMDUser updatePhotosPersonManagerSettings:]
  -[HMDUser isRunningOnHomeOwnersDevice]
  -[HMDUser ownerForUserSettingsBackingStoreController:]
  -[HMDUser shareMessenger]
  -[HMDUser didStartLocalZoneForBackingStoreController:]
  -[HMDUser backingStoreController:createParticipantManagerForCloudZone:]
  -[HMDUser didStartBackingStoreController:]
  -[HMDUser backingStoreController:didUpdatePhotosPersonManagerSettingsModel:previousPhotosPersonManagerSettingsModel:]
  -[HMDUser didStopBackingStoreController:]
  -[HMDUser photosPersonDataManager]
  -[HMDUser hasCameraClipsAccess]
  -[HMDUser homeForCloudShareTrustManager:]
  -[HMDUser zoneNameForCloudShareTrustManager:]
  -[HMDUser isOwnerCapableForTrustManager:]
  -[HMDUser ownerForCloudShareTrustManager:]
  -[HMDUser cloudShareTrustManager:didFetchOwnerCloudShareID:]
  -[HMDUser didFinishConfiguringForCloudShareTrustManager:]
  -[HMDUser didRemoveTrustZoneInCloudShareTrustManager:]
  -[HMDUser updateCloudShareID:]
  -[HMDUser cloudShareTrustManager:didRemoveUserWithUUID:]
  -[HMDUser cloudShareTrustManager:shouldShareTrustWithUser:]
  -[HMDUser av_authorizedPeer]
  -[HMDUser setRelayIdentifier:]
  -[HMDUser settingsController:willUpdateSettingAtKeyPath:withValue:]
  -[HMDUser settingsController:didUpdateWithCompletion:]
  -[HMDUser assistantAccessControlModelUUID]
  -[HMDUser __handleAddedAccount:]
  -[HMDUser cloudShareIDFuture]
  -[HMDUser __handleRemovedAccount:]
  -[HMDUser removeRelayAccessToken:]
  -[HMDUser pushTokensForDevicesObservingSubjectDevice:subActivity:]
  -[HMDUser sharedZoneControllerForUserDataController:]
  -[HMDUser privateZoneControllerForUserDataController:]
  -[HMDUser isUserSettingsPrefEnabled]
  -[HMDUser userDataController:isPersonalRequestCapableAccessoryID:]
  -[HMDUser userDataController:isMediaContentProfileCapableAccessoryID:]
  -[HMDUser userDataControllerDidUpdateAssistantAccessControl:]
  -[HMDUser userDataControllerDidUpdateMediaContentProfile:]
  -[HMDUser userDataController]
  -[HMDUser relayAccessTokens]
  -[HMDUser configureCloudShareTrustManager]
  -[HMDUser initializeUserSettingsWithHome:]
  -[HMDUser registerIdentity]
  -[HMDUser setPrivateBackingStoreController:]
  -[HMDUser setPrivateSettingsControllerDependency:]
  -[HMDUser privateSettingsControllerDependency]
  -[HMDUser privateBackingStoreController]
  -[HMDUser setShareMessenger:]
  -[HMDUser setSharedBackingStoreController:]
  -[HMDUser setSharedSettingsControllerDependency:]
  -[HMDUser sharedSettingsControllerDependency]
  -[HMDUser sharedBackingStoreController]
  -[HMDUser setUserDataController:]
  -[HMDUser recoverUserSettingsDueToUUIDChange]
  -[HMDUser recoverTrustManagerDueToUUIDChange]
  -[HMDUser cloudShareTrustManager]
  -[HMDUser setCloudShareTrustManager:]
  -[HMDUser deregisterForMessages]
  -[HMDUser _handlePairingIdentityRequest:]
  -[HMDUser _handleShareLookupInfoRequest:]
  -[HMDUser _handleMultiUserSharePayloadRequest:]
  -[HMDUser _handleShareClientRepairRequest:]
  -[HMDUser _handleNeedsiTunesMultiUserRepair:]
  -[HMDUser _sendSecureShareClientPayloadToMostEligibleDevice:completion:]
  -[HMDUser _sendAccountMessage:payload:deviceCapabilities:multicast:completion:]
  -[HMDUser camerasAccessLevelValue]
  -[HMDUser isCurrentUserAndOwner]
  -[HMDUser setPhotosPersonDataManager:]
  -[HMDUser setPersonSettingsManager:]
  -[HMDUser _compatiblePrivilege]
  -[HMDUser encodingRemoteDisplayName]
  -[HMDUser _transactionUserUpdated:newValues:message:]
  -[HMDUser _relayAccessTokenForIdentifier:]
  -[HMDUser _addRelayAccessToken:]
  -[HMDUser recoverUserCloudDataDueToUUIDChangeFromOldUUID:]
  -[HMDUser _removeRelayAccessToken:]
  -[HMDUser _fixupRelayAccessTokens]
  -[HMDUser postUserSettingsUpdatedNotificationWithReason:]
  -[HMDUser configurePersonSettingsManager]
  -[HMDUser configurePhotosPersonDataManager]
  -[HMDUser setCloudShareID:]
  -[HMDUser trustTargetUUID]
  -[HMDUser deregisterIdentity]
  -[HMDUser containsRelayAccessToken:]
  -[HMDUser _migrateRelayAccessTokensCloudZone:migrationQueue:completion:]
  -[HMDUser removeCloudShareID]
  -[HMDUser registerIDSActivityObserver:subActivity:subjectDevice:]
  -[HMDUser updateIDSActivityObserver:]
  -[HMDUser deregisterIDSActivityObserver:subActivity:subjectDevice:]
  -[HMDUser deregisterIDSActivityObserver:]


HMDUserModel : HMDBackingStoreModelObject
 @property  HMDAccountHandle *accountHandle
 @property  HMDAccountIdentifier *accountIdentifier
 @property  NSDictionary *pairingIdentity
 @property  NSNumber *privilege
 @property  NSNumber *remoteAccessAllowed
 @property  NSNumber *presenceAuthorizationStatus
 @property  NSString *relayIdentifier
 @property  NSArray *relayAccessTokens
 @property  NSString *changeTag
 @property  NSString *userID
 @property  NSNumber *camerasAccessLevel

  // class methods
  +[HMDUserModel properties]


HMDResidentUser : HMDUser
 @property  unsigned long configurationState
 @property  HMDDevice *device
 @property  BOOL blocked

  // class methods
  +[HMDResidentUser supportsSecureCoding]

  // instance methods
  -[HMDResidentUser isBlocked]
  -[HMDResidentUser device]
  -[HMDResidentUser deviceIdentifier]
  -[HMDResidentUser setConfigurationState:]
  -[HMDResidentUser .cxx_destruct]
  -[HMDResidentUser encodeWithCoder:]
  -[HMDResidentUser configurationState]
  -[HMDResidentUser setDevice:]
  -[HMDResidentUser initWithModelObject:]
  -[HMDResidentUser userID]
  -[HMDResidentUser displayName]
  -[HMDResidentUser initWithCoder:]
  -[HMDResidentUser modelObjectWithChangeType:version:]
  -[HMDResidentUser transactionObjectUpdated:newValues:message:]
  -[HMDResidentUser refreshDisplayName]
  -[HMDResidentUser configureWithHome:]
  -[HMDResidentUser initWithDevice:home:pairingIdentity:configurationState:]
  -[HMDResidentUser requiresMakoSupport]
  -[HMDResidentUser legacyUser]
  -[HMDResidentUser updateWithDevice:]
  -[HMDResidentUser registerIdentity]
  -[HMDResidentUser encodingRemoteDisplayName]


__HMDLegacyResidentUser : HMDUser
 @property  HMDResidentUser *residentUser

  // class methods
  +[__HMDLegacyResidentUser initialize]
  +[__HMDLegacyResidentUser supportsSecureCoding]

  // instance methods
  -[__HMDLegacyResidentUser .cxx_destruct]
  -[__HMDLegacyResidentUser encodeWithCoder:]
  -[__HMDLegacyResidentUser initWithCoder:]
  -[__HMDLegacyResidentUser isRemoteGateway]
  -[__HMDLegacyResidentUser initWithResidentUser:]
  -[__HMDLegacyResidentUser residentUser]


HMDResidentUserModel : HMDUserModel
 @property  HMDDevice *device
 @property  NSNumber *configState
 @property  NSString *displayName
 @property  NSString *deviceIdentifier

  // class methods
  +[HMDResidentUserModel properties]

  // instance methods
  -[HMDResidentUserModel .cxx_destruct]
  -[HMDResidentUserModel setDisplayName:]
  -[HMDResidentUserModel displayName]


AWDHomeKitProcessMemoryPressureEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasProcessMemoryState
 @property  NSString *processMemoryState
 @property  BOOL hasDataSyncState
 @property  NSString *dataSyncState

  // instance methods
  -[AWDHomeKitProcessMemoryPressureEvent copyWithZone:]
  -[AWDHomeKitProcessMemoryPressureEvent .cxx_destruct]
  -[AWDHomeKitProcessMemoryPressureEvent timestamp]
  -[AWDHomeKitProcessMemoryPressureEvent setTimestamp:]
  -[AWDHomeKitProcessMemoryPressureEvent setHasTimestamp:]
  -[AWDHomeKitProcessMemoryPressureEvent readFrom:]
  -[AWDHomeKitProcessMemoryPressureEvent writeTo:]
  -[AWDHomeKitProcessMemoryPressureEvent isEqual:]
  -[AWDHomeKitProcessMemoryPressureEvent dataSyncState]
  -[AWDHomeKitProcessMemoryPressureEvent setDataSyncState:]
  -[AWDHomeKitProcessMemoryPressureEvent copyTo:]
  -[AWDHomeKitProcessMemoryPressureEvent dictionaryRepresentation]
  -[AWDHomeKitProcessMemoryPressureEvent mergeFrom:]
  -[AWDHomeKitProcessMemoryPressureEvent hasTimestamp]
  -[AWDHomeKitProcessMemoryPressureEvent hasDataSyncState]
  -[AWDHomeKitProcessMemoryPressureEvent processMemoryState]
  -[AWDHomeKitProcessMemoryPressureEvent setProcessMemoryState:]
  -[AWDHomeKitProcessMemoryPressureEvent hasProcessMemoryState]


AWDHomeKitSoftwareUpdateStarted : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  BOOL hasResultErrorCode
 @property  unsigned int resultErrorCode
 @property  BOOL hasIsAutomaticUpdateEnabled
 @property  BOOL isAutomaticUpdateEnabled

  // instance methods
  -[AWDHomeKitSoftwareUpdateStarted copyWithZone:]
  -[AWDHomeKitSoftwareUpdateStarted timestamp]
  -[AWDHomeKitSoftwareUpdateStarted setTimestamp:]
  -[AWDHomeKitSoftwareUpdateStarted setHasDuration:]
  -[AWDHomeKitSoftwareUpdateStarted setHasTimestamp:]
  -[AWDHomeKitSoftwareUpdateStarted readFrom:]
  -[AWDHomeKitSoftwareUpdateStarted writeTo:]
  -[AWDHomeKitSoftwareUpdateStarted isEqual:]
  -[AWDHomeKitSoftwareUpdateStarted setDuration:]
  -[AWDHomeKitSoftwareUpdateStarted copyTo:]
  -[AWDHomeKitSoftwareUpdateStarted dictionaryRepresentation]
  -[AWDHomeKitSoftwareUpdateStarted hasDuration]
  -[AWDHomeKitSoftwareUpdateStarted mergeFrom:]
  -[AWDHomeKitSoftwareUpdateStarted hasTimestamp]
  -[AWDHomeKitSoftwareUpdateStarted duration]
  -[AWDHomeKitSoftwareUpdateStarted setResultErrorCode:]
  -[AWDHomeKitSoftwareUpdateStarted setHasResultErrorCode:]
  -[AWDHomeKitSoftwareUpdateStarted hasResultErrorCode]
  -[AWDHomeKitSoftwareUpdateStarted resultErrorCode]
  -[AWDHomeKitSoftwareUpdateStarted isAutomaticUpdateEnabled]
  -[AWDHomeKitSoftwareUpdateStarted setIsAutomaticUpdateEnabled:]
  -[AWDHomeKitSoftwareUpdateStarted setHasIsAutomaticUpdateEnabled:]
  -[AWDHomeKitSoftwareUpdateStarted hasIsAutomaticUpdateEnabled]


HMDCameraClipUploader : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSDate *startDate
 @property  double targetFragmentDuration
 @property  HMBLocalZone *localZone
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logIdentifier
 @property  HMCameraClipEncryptionManager *encryptionManager
 @property  <HMDCameraClipUploaderFactory> *factory
 @property  NSMutableArray *operations
 @property  NAFuture *didCreateClipFuture
 @property  NSUUID *clipUUID
 @property  <HMDCameraClipUploaderDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraClipUploader logCategory]

  // instance methods
  -[HMDCameraClipUploader factory]
  -[HMDCameraClipUploader operations]
  -[HMDCameraClipUploader logIdentifier]
  -[HMDCameraClipUploader attributeDescriptions]
  -[HMDCameraClipUploader startDate]
  -[HMDCameraClipUploader .cxx_destruct]
  -[HMDCameraClipUploader clipUUID]
  -[HMDCameraClipUploader workQueue]
  -[HMDCameraClipUploader localZone]
  -[HMDCameraClipUploader finish]
  -[HMDCameraClipUploader setDelegate:]
  -[HMDCameraClipUploader delegate]
  -[HMDCameraClipUploader targetFragmentDuration]
  -[HMDCameraClipUploader initWithClipUUID:startDate:targetFragmentDuration:localZone:workQueue:logIdentifier:]
  -[HMDCameraClipUploader encryptionManager]
  -[HMDCameraClipUploader addNotificationForSignificantEvent:homePresenceByPairingIdentity:]
  -[HMDCameraClipUploader addVideoInitData:]
  -[HMDCameraClipUploader addVideoSegmentData:duration:timeOffsetWithinClip:clipFinalizedBecauseMaxDurationExceeded:]
  -[HMDCameraClipUploader addPosterFrameData:timeOffsetWithinClip:width:height:]
  -[HMDCameraClipUploader initWithClipUUID:startDate:targetFragmentDuration:localZone:workQueue:logIdentifier:encryptionManager:factory:]
  -[HMDCameraClipUploader didCreateClipFuture]
  -[HMDCameraClipUploader _createClipWithSignificantEvent:homePresenceByPairingIdentity:]
  -[HMDCameraClipUploader setDidCreateClipFuture:]
  -[HMDCameraClipUploader hasAddedCreateClipOperation]
  -[HMDCameraClipUploader _addOperation:finalizeClipOnError:]
  -[HMDCameraClipUploader _operationCompleted:finalizeOnError:future:]
  -[HMDCameraClipUploader _startNextOperation]
  -[HMDCameraClipUploader _isCancelledError:]
  -[HMDCameraClipUploader _handleFatalOperationFailure]


HMDCameraClipUploaderFactory : NSObject /usr/lib/libc++.1.dylib <HMDCameraClipUploaderFactory>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDCameraClipUploaderFactory createAddSignificantEventOperationForClipModelID:localZone:significantEvent:homePresenceByPairingIdentity:]
  -[HMDCameraClipUploaderFactory createUploadVideoSegmentOperationForModelID:localZone:data:metadata:encryptionManager:]
  -[HMDCameraClipUploaderFactory createUploadPosterFrameOperationForModelID:localZone:data:metadata:encryptionManager:]
  -[HMDCameraClipUploaderFactory createFinalizeClipOperationForModelID:localZone:]
  -[HMDCameraClipUploaderFactory createCreateClipOperationForClipModelID:localZone:significantEvent:homePresenceByPairingIdentity:targetFragmentDuration:clipStartDate:encryptionManager:]


HMDMPCSendMRCommandOperationDefaultExternalObjectInterface : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDMPCSendMRCommandOperationExternalObjectInterface>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDMPCSendMRCommandOperationDefaultExternalObjectInterface createMPCAssistantCommand]


HMDMPCSendMRCommandOperation : HMFOperation /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject>
 @property  <HMDMPCSendMRCommandOperationExternalObjectInterface> *externalObjectInterface
 @property  MPCAssistantRemoteControlDestination *destination
 @property  MPPlaybackArchive *playbackArchive
 @property  NSDictionary *options
 @property  NSNumber *mediaRemoteCommand
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMPCSendMRCommandOperation shortDescription]

  // instance methods
  -[HMDMPCSendMRCommandOperation destination]
  -[HMDMPCSendMRCommandOperation main]
  -[HMDMPCSendMRCommandOperation attributeDescriptions]
  -[HMDMPCSendMRCommandOperation privateDescription]
  -[HMDMPCSendMRCommandOperation .cxx_destruct]
  -[HMDMPCSendMRCommandOperation options]
  -[HMDMPCSendMRCommandOperation shortDescription]
  -[HMDMPCSendMRCommandOperation playbackArchive]
  -[HMDMPCSendMRCommandOperation externalObjectInterface]
  -[HMDMPCSendMRCommandOperation setExternalObjectInterface:]
  -[HMDMPCSendMRCommandOperation mediaRemoteCommand]
  -[HMDMPCSendMRCommandOperation initWithCommand:options:destination:]
  -[HMDMPCSendMRCommandOperation initWithPlaybackArchive:destination:]


HMDBackingStoreUpdateObjectReference : NSOperation /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 @property  id object
 @property  NSUUID *uuid

  // instance methods
  -[HMDBackingStoreUpdateObjectReference object]
  -[HMDBackingStoreUpdateObjectReference main]
  -[HMDBackingStoreUpdateObjectReference uuid]
  -[HMDBackingStoreUpdateObjectReference .cxx_destruct]
  -[HMDBackingStoreUpdateObjectReference setObject:]
  -[HMDBackingStoreUpdateObjectReference setUuid:]
  -[HMDBackingStoreUpdateObjectReference initWithObject:uuid:]


HMDBackingStoreDispatchModelChange : NSOperation /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 @property  HMDBackingStoreModelObject *modelChange

  // instance methods
  -[HMDBackingStoreDispatchModelChange main]
  -[HMDBackingStoreDispatchModelChange .cxx_destruct]
  -[HMDBackingStoreDispatchModelChange modelChange]
  -[HMDBackingStoreDispatchModelChange initWithModelChange:]
  -[HMDBackingStoreDispatchModelChange setModelChange:]


HMDBackingStoreSaveToPersistentStore : NSOperation /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 @property  HMDHomeManager *homeManager
 @property  NSString *reason
 @property  BOOL incrementGeneration

  // instance methods
  -[HMDBackingStoreSaveToPersistentStore main]
  -[HMDBackingStoreSaveToPersistentStore .cxx_destruct]
  -[HMDBackingStoreSaveToPersistentStore homeManager]
  -[HMDBackingStoreSaveToPersistentStore reason]
  -[HMDBackingStoreSaveToPersistentStore incrementGeneration]
  -[HMDBackingStoreSaveToPersistentStore initWithHomeManager:reason:incrementGeneration:]


HMDBackingStore : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  CKRecordID *root
 @property  HMDBackingStoreLocal *local
 @property  HMDHomeManager *homeManager
 @property  HMDHome *home
 @property  NSUUID *uuid
 @property  HMDObjectLookup *lookup
 @property  <HMDBackingStoreObjectProtocol> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBackingStore logCategory]
  +[HMDBackingStore currentDevice]
  +[HMDBackingStore start]
  +[HMDBackingStore internalAllowedTypes]
  +[HMDBackingStore allowedTypes]
  +[HMDBackingStore deeplyProblematicObjectTypes]
  +[HMDBackingStore flushBackingStore]
  +[HMDBackingStore resetBackingStore]

  // instance methods
  -[HMDBackingStore root]
  -[HMDBackingStore setLocal:]
  -[HMDBackingStore logIdentifier]
  -[HMDBackingStore lookup]
  -[HMDBackingStore uuid]
  -[HMDBackingStore .cxx_destruct]
  -[HMDBackingStore initWithUUID:]
  -[HMDBackingStore setUuid:]
  -[HMDBackingStore setHome:]
  -[HMDBackingStore submit:]
  -[HMDBackingStore setHomeManager:]
  -[HMDBackingStore home]
  -[HMDBackingStore submitBlock:]
  -[HMDBackingStore setDelegate:]
  -[HMDBackingStore homeManager]
  -[HMDBackingStore dumpState]
  -[HMDBackingStore delegate]
  -[HMDBackingStore local]
  -[HMDBackingStore transaction:options:]
  -[HMDBackingStore initWithUUID:home:]
  -[HMDBackingStore saveToPersistentStoreWithReason:incrementGeneration:]
  -[HMDBackingStore updateModelObjects:destination:]
  -[HMDBackingStore deleteModelObjects:destination:]
  -[HMDBackingStore __fetchWithGroup:uuids:error:]
  -[HMDBackingStore commit:run:save:completionHandler:]
  -[HMDBackingStore initWithUUID:homeManager:home:]
  -[HMDBackingStore initWithUUID:homeManager:]
  -[HMDBackingStore transactionWithOptions:]
  -[HMDBackingStore setLookup:]


HMDBackingStoreSingleton : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMFVersion *dataVersion
 @property  HMDBackingStoreLocal *local
 @property  NSMapTable *objectLookup
 @property  NSMapTable *classToNameTransform
 @property  NSMapTable *nameToClassTransform
 @property  NSMapTable *objectPropertyHashLookup
 @property  HMDHomeManager *homeManager
 @property  NSOperationQueue *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDBackingStoreSingleton sharedInstance]
  +[HMDBackingStoreSingleton setClass:forClassName:]
  +[HMDBackingStoreSingleton logCategory]
  +[HMDBackingStoreSingleton start]
  +[HMDBackingStoreSingleton resetClassMappings]
  +[HMDBackingStoreSingleton resetSchemaHash]

  // instance methods
  -[HMDBackingStoreSingleton dataVersion]
  -[HMDBackingStoreSingleton setLocal:]
  -[HMDBackingStoreSingleton classToNameTransform]
  -[HMDBackingStoreSingleton logIdentifier]
  -[HMDBackingStoreSingleton init]
  -[HMDBackingStoreSingleton .cxx_destruct]
  -[HMDBackingStoreSingleton nameToClassTransform]
  -[HMDBackingStoreSingleton setHomeManager:]
  -[HMDBackingStoreSingleton queue]
  -[HMDBackingStoreSingleton homeManager]
  -[HMDBackingStoreSingleton local]
  -[HMDBackingStoreSingleton setDataVersion:]
  -[HMDBackingStoreSingleton objectPropertyHashLookup]
  -[HMDBackingStoreSingleton schemaHashForObject:]
  -[HMDBackingStoreSingleton flushBackingStore]
  -[HMDBackingStoreSingleton objectLookup]
  -[HMDBackingStoreSingleton resetBackingStore]


AWDHomeKitBackingStoreCKRebuildEvent : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasRebuildStatus
 @property  int rebuildStatus
 @property  BOOL hasContainerType
 @property  int containerType
 @property  BOOL hasZoneType
 @property  int zoneType

  // instance methods
  -[AWDHomeKitBackingStoreCKRebuildEvent copyWithZone:]
  -[AWDHomeKitBackingStoreCKRebuildEvent containerType]
  -[AWDHomeKitBackingStoreCKRebuildEvent setContainerType:]
  -[AWDHomeKitBackingStoreCKRebuildEvent setHasContainerType:]
  -[AWDHomeKitBackingStoreCKRebuildEvent containerTypeAsString:]
  -[AWDHomeKitBackingStoreCKRebuildEvent StringAsContainerType:]
  -[AWDHomeKitBackingStoreCKRebuildEvent timestamp]
  -[AWDHomeKitBackingStoreCKRebuildEvent setTimestamp:]
  -[AWDHomeKitBackingStoreCKRebuildEvent setHasTimestamp:]
  -[AWDHomeKitBackingStoreCKRebuildEvent readFrom:]
  -[AWDHomeKitBackingStoreCKRebuildEvent writeTo:]
  -[AWDHomeKitBackingStoreCKRebuildEvent isEqual:]
  -[AWDHomeKitBackingStoreCKRebuildEvent copyTo:]
  -[AWDHomeKitBackingStoreCKRebuildEvent dictionaryRepresentation]
  -[AWDHomeKitBackingStoreCKRebuildEvent mergeFrom:]
  -[AWDHomeKitBackingStoreCKRebuildEvent hasTimestamp]
  -[AWDHomeKitBackingStoreCKRebuildEvent hasContainerType]
  -[AWDHomeKitBackingStoreCKRebuildEvent zoneType]
  -[AWDHomeKitBackingStoreCKRebuildEvent setZoneType:]
  -[AWDHomeKitBackingStoreCKRebuildEvent setHasZoneType:]
  -[AWDHomeKitBackingStoreCKRebuildEvent hasZoneType]
  -[AWDHomeKitBackingStoreCKRebuildEvent zoneTypeAsString:]
  -[AWDHomeKitBackingStoreCKRebuildEvent StringAsZoneType:]
  -[AWDHomeKitBackingStoreCKRebuildEvent rebuildStatus]
  -[AWDHomeKitBackingStoreCKRebuildEvent setRebuildStatus:]
  -[AWDHomeKitBackingStoreCKRebuildEvent setHasRebuildStatus:]
  -[AWDHomeKitBackingStoreCKRebuildEvent hasRebuildStatus]
  -[AWDHomeKitBackingStoreCKRebuildEvent rebuildStatusAsString:]
  -[AWDHomeKitBackingStoreCKRebuildEvent StringAsRebuildStatus:]


HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore <HMFLogging>
 @property  NSData *archivedLastSynchronizedRecordIDs
 @property  NSSet *lastSynchronizedRecordIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel modelID]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel logCategory]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel hmbProperties]
  +[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel parentModelID]

  // instance methods
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel init]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel lastSynchronizedRecordIDs]
  -[HMDNetworkRouterFirewallRuleManagerBackingStoreMirrorInternalStateModel setLastSynchronizedRecordIDs:]


HMDHelperExternalProtocolImpl : NSObject /usr/lib/libc++.1.dylib <HMDHelperExternalProtocol>
  // instance methods
  -[HMDHelperExternalProtocolImpl init]
  -[HMDHelperExternalProtocolImpl createAFSecurityConnection]


HMDHelper : NSObject /usr/lib/libc++.1.dylib
 @property  <HMDHelperExternalProtocol> *externalProtocol

  // class methods
  +[HMDHelper sharedHelper]
  +[HMDHelper setSharedHelper:]

  // instance methods
  -[HMDHelper .cxx_destruct]
  -[HMDHelper initWithExternalProtocol:]
  -[HMDHelper hashedRouteIDForIdentifier:]
  -[HMDHelper externalProtocol]
  -[HMDHelper setExternalProtocol:]


HMDNetworkRouterFirewallRuleCloudNetworkDeclarations : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDNetworkRouterFirewallRuleAccessoryIdentifier *baseAccessoryIdentifier
 @property  NSString *name
 @property  NSDate *lastModifiedTime
 @property  NSArray *ruleConfigurations
 @property  NSDictionary *prettyJSONDictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations logCategory]
  +[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations __decodeRuleConfigurationWithVersionString:ruleConfigurationValue:baseAccessoryIdentifier:]
  +[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations __decodeRuleConfigurationsFromJSONDictionary:baseAccessoryIdentifier:allowUnzippedData:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations name]
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations initWithBaseAccessoryIdentifier:data:]
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations initWithBaseAccessoryIdentifier:data:allowUnzippedData:]
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations lastModifiedTime]
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations ruleConfigurations]
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations baseAccessoryIdentifier]
  -[HMDNetworkRouterFirewallRuleCloudNetworkDeclarations initWithBaseAccessoryIdentifier:name:lastModifiedTime:ruleConfigurations:]


HMDUnpairedHAPAccessoryConfiguration : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *homeName
 @property  NSString *setupCode
 @property  @? setupCodeProvider
 @property  BOOL requiresUserConsent
 @property  HMDAccessoryNetworkCredential *networkCredential
 @property  NSString *isoCountryCode

  // instance methods
  -[HMDUnpairedHAPAccessoryConfiguration setupCode]
  -[HMDUnpairedHAPAccessoryConfiguration .cxx_destruct]
  -[HMDUnpairedHAPAccessoryConfiguration homeName]
  -[HMDUnpairedHAPAccessoryConfiguration isoCountryCode]
  -[HMDUnpairedHAPAccessoryConfiguration initWithHomeName:setupCode:setupCodeProvider:requiresUserConsent:networkCredential:country:]
  -[HMDUnpairedHAPAccessoryConfiguration requiresUserConsent]
  -[HMDUnpairedHAPAccessoryConfiguration networkCredential]
  -[HMDUnpairedHAPAccessoryConfiguration setupCodeProvider]


HMDUnpairedHAPAccessory : HMDUnassociatedAccessory
 @property  NSArray *accessoryServers
 @property  unsigned long transportTypes
 @property  long long certificationStatus
 @property  NSData *setupHash
 @property  long long awd_linkType

  // instance methods
  -[HMDUnpairedHAPAccessory certificationStatus]
  -[HMDUnpairedHAPAccessory setCertificationStatus:]
  -[HMDUnpairedHAPAccessory .cxx_destruct]
  -[HMDUnpairedHAPAccessory isReachable]
  -[HMDUnpairedHAPAccessory associationOptions]
  -[HMDUnpairedHAPAccessory identifyWithCompletionHandler:]
  -[HMDUnpairedHAPAccessory transportTypes]
  -[HMDUnpairedHAPAccessory setupHash]
  -[HMDUnpairedHAPAccessory setSetupHash:]
  -[HMDUnpairedHAPAccessory hasBTLELink]
  -[HMDUnpairedHAPAccessory preferredAccessoryServer]
  -[HMDUnpairedHAPAccessory hasIPLink]
  -[HMDUnpairedHAPAccessory initWithIdentifier:name:category:messageDispatcher:]
  -[HMDUnpairedHAPAccessory descriptionWithPointer:additionalDescription:]
  -[HMDUnpairedHAPAccessory dumpDescription]
  -[HMDUnpairedHAPAccessory awd_linkType]
  -[HMDUnpairedHAPAccessory accessoryServers]
  -[HMDUnpairedHAPAccessory initWithAccessoryServer:messageDispatcher:]
  -[HMDUnpairedHAPAccessory addAccessoryServer:]
  -[HMDUnpairedHAPAccessory removeAccessoryServer:]


HMDCameraClipSignificantEventBulletin : NSObject /usr/lib/libc++.1.dylib
 @property  NSSet *significantEvents
 @property  NSUUID *previewImageNotificationUUID
 @property  NSURL *previewImageFilePathURL
 @property  NSDate *dateOfOccurrence
 @property  HMDCameraProfile *camera
 @property  HMDHome *home
 @property  HMDAccessory *accessory
 @property  HMDService *service
 @property  NSUUID *clipUUID
 @property  BOOL shouldShowProvideFeedbackButton
 @property  NSDictionary *userInfo
 @property  NSString *title
 @property  NSString *body
 @property  NSString *threadIdentifier
 @property  NSString *requestIdentifier

  // class methods
  +[HMDCameraClipSignificantEventBulletin localizedMessageForSignificantEvents:cameraName:]
  +[HMDCameraClipSignificantEventBulletin actionURLForHomeUUID:cameraUUID:]
  +[HMDCameraClipSignificantEventBulletin effectiveReasonForSignificantEvent:]

  // instance methods
  -[HMDCameraClipSignificantEventBulletin requestIdentifier]
  -[HMDCameraClipSignificantEventBulletin .cxx_destruct]
  -[HMDCameraClipSignificantEventBulletin clipUUID]
  -[HMDCameraClipSignificantEventBulletin title]
  -[HMDCameraClipSignificantEventBulletin body]
  -[HMDCameraClipSignificantEventBulletin threadIdentifier]
  -[HMDCameraClipSignificantEventBulletin service]
  -[HMDCameraClipSignificantEventBulletin accessory]
  -[HMDCameraClipSignificantEventBulletin userInfo]
  -[HMDCameraClipSignificantEventBulletin home]
  -[HMDCameraClipSignificantEventBulletin camera]
  -[HMDCameraClipSignificantEventBulletin significantEvents]
  -[HMDCameraClipSignificantEventBulletin dateOfOccurrence]
  -[HMDCameraClipSignificantEventBulletin previewImageFilePathURL]
  -[HMDCameraClipSignificantEventBulletin shouldShowProvideFeedbackButton]
  -[HMDCameraClipSignificantEventBulletin initWithSignificantEvents:previewImageNotificationUUID:previewImageFilePathURL:dateOfOccurrence:camera:home:accessory:recordingService:requestIdentifier:clipUUID:shouldShowProvideFeedbackButton:]
  -[HMDCameraClipSignificantEventBulletin previewImageNotificationUUID]
  -[HMDCameraClipSignificantEventBulletin initWithSignificantEvents:previewImageNotificationUUID:previewImageFilePathURL:dateOfOccurrence:camera:home:accessory:recordingService:clipUUID:shouldShowProvideFeedbackButton:]
  -[HMDCameraClipSignificantEventBulletin initWithSignificantEvent:previewImageFilePathURL:dateOfOccurrence:camera:home:accessory:recordingService:shouldShowProvideFeedbackButton:]


HMDCameraClipManagerRequestLogEvent : HMDLogEvent
 @property  NSString *requestName

  // class methods
  +[HMDCameraClipManagerRequestLogEvent uuid]

  // instance methods
  -[HMDCameraClipManagerRequestLogEvent requestName]
  -[HMDCameraClipManagerRequestLogEvent .cxx_destruct]
  -[HMDCameraClipManagerRequestLogEvent initWithRequestName:]


HAPOperatingStateAbnormalReasonsWrapper : NSObject /usr/lib/libc++.1.dylib <NSCopying, HAPTLVProtocol>
 @property  unsigned long value
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HAPOperatingStateAbnormalReasonsWrapper parsedFromData:error:]

  // instance methods
  -[HAPOperatingStateAbnormalReasonsWrapper copyWithZone:]
  -[HAPOperatingStateAbnormalReasonsWrapper init]
  -[HAPOperatingStateAbnormalReasonsWrapper initWithValue:]
  -[HAPOperatingStateAbnormalReasonsWrapper setValue:]
  -[HAPOperatingStateAbnormalReasonsWrapper isEqual:]
  -[HAPOperatingStateAbnormalReasonsWrapper value]
  -[HAPOperatingStateAbnormalReasonsWrapper parseFromData:error:]
  -[HAPOperatingStateAbnormalReasonsWrapper serializeWithError:]


HMDLogEventProcessMemoryEventsAnalyzer : HMDLogEventAnalyzer
  // instance methods
  -[HMDLogEventProcessMemoryEventsAnalyzer processLogEvent:]
  -[HMDLogEventProcessMemoryEventsAnalyzer _handleMemoryPressureNotificationLogEvent:]
  -[HMDLogEventProcessMemoryEventsAnalyzer _handleMemorySampleLogEvent:]


HMDIDSActivityMonitorHomeManagerDataSource : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDIDSActivityMonitorDataSource>
 @property  HMDHomeManager *homeManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <HMDIDSActivityMonitorBroadcasterPushTokenDataSourceDelegate> *delegate

  // class methods
  +[HMDIDSActivityMonitorHomeManagerDataSource logCategory]

  // instance methods
  -[HMDIDSActivityMonitorHomeManagerDataSource initWithHomeManager:]
  -[HMDIDSActivityMonitorHomeManagerDataSource .cxx_destruct]
  -[HMDIDSActivityMonitorHomeManagerDataSource currentDevice]
  -[HMDIDSActivityMonitorHomeManagerDataSource setDelegate:]
  -[HMDIDSActivityMonitorHomeManagerDataSource homeManager]
  -[HMDIDSActivityMonitorHomeManagerDataSource delegate]
  -[HMDIDSActivityMonitorHomeManagerDataSource start]
  -[HMDIDSActivityMonitorHomeManagerDataSource pushTokensForDevicesObservingSubjectDevice:subActivity:]
  -[HMDIDSActivityMonitorHomeManagerDataSource startObservingDevice:subActivity:]
  -[HMDIDSActivityMonitorHomeManagerDataSource stopObservingDevice:subActivity:]
  -[HMDIDSActivityMonitorHomeManagerDataSource startWithNotificationCenter:]
  -[HMDIDSActivityMonitorHomeManagerDataSource handleDeviceAdded:]
  -[HMDIDSActivityMonitorHomeManagerDataSource handleDeviceRemoved:]
  -[HMDIDSActivityMonitorHomeManagerDataSource handleRegistrationUpdated:]
  -[HMDIDSActivityMonitorHomeManagerDataSource homeHasCamera:]


HMDLocationTuple : NSObject /usr/lib/libc++.1.dylib
 @property  CLLocation *location
 @property  unsigned long numberOfReachableIPAccessory
 @property  unsigned long numberOfReachableBTLEAccessory
 @property  unsigned long numberOfreachableMediaAccessory
 @property  NSDate *date

  // class methods
  +[HMDLocationTuple tupleWithLocation:reachableIPAccessory:reachableBTLEAccessory:reachableMediaAccessory:date:]

  // instance methods
  -[HMDLocationTuple .cxx_destruct]
  -[HMDLocationTuple date]
  -[HMDLocationTuple setDate:]
  -[HMDLocationTuple setLocation:]
  -[HMDLocationTuple location]
  -[HMDLocationTuple numberOfReachableIPAccessory]
  -[HMDLocationTuple numberOfReachableBTLEAccessory]
  -[HMDLocationTuple setNumberOfReachableIPAccessory:]
  -[HMDLocationTuple setNumberOfReachableBTLEAccessory:]
  -[HMDLocationTuple setNumberOfreachableMediaAccessory:]
  -[HMDLocationTuple numberOfreachableMediaAccessory]


HMDLocationClusterGroup : NSObject /usr/lib/libc++.1.dylib
 @property  CLLocation *center
 @property  NSMutableArray *locations

  // class methods
  +[HMDLocationClusterGroup groupWithCenter:]

  // instance methods
  -[HMDLocationClusterGroup locations]
  -[HMDLocationClusterGroup setLocations:]
  -[HMDLocationClusterGroup .cxx_destruct]
  -[HMDLocationClusterGroup setCenter:]
  -[HMDLocationClusterGroup center]


HMDLocationCluster : NSObject /usr/lib/libc++.1.dylib
 @property  NSArray *locations
 @property  unsigned long numOfClusters
 @property  NSArray *groups
 @property  CLLocation *homeLocation

  // instance methods
  -[HMDLocationCluster groups]
  -[HMDLocationCluster locations]
  -[HMDLocationCluster setLocations:]
  -[HMDLocationCluster .cxx_destruct]
  -[HMDLocationCluster initWithLocations:]
  -[HMDLocationCluster homeLocation]
  -[HMDLocationCluster startGrouping]
  -[HMDLocationCluster setNumOfClusters:]
  -[HMDLocationCluster startKMeans]
  -[HMDLocationCluster calculateHomeLocationFromGroups]
  -[HMDLocationCluster numOfClusters]
  -[HMDLocationCluster clusterWithGroups:]
  -[HMDLocationCluster generateNewGroupsFromGroups:]
  -[HMDLocationCluster printGroups:]


HMDCameraLocalStreamSession : HMDCameraStreamSession <HMFLogging>
 @property  <HMDCameraRemoteStreamSenderProtocol> *streamSender
 @property  HMDCameraParameterSelection *parameterSelection
 @property  unsigned long streamState
 @property  HMDCameraNetworkConfig *localNetworkConfig
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraLocalStreamSession logCategory]

  // instance methods
  -[HMDCameraLocalStreamSession logIdentifier]
  -[HMDCameraLocalStreamSession streamState]
  -[HMDCameraLocalStreamSession setStreamState:]
  -[HMDCameraLocalStreamSession dealloc]
  -[HMDCameraLocalStreamSession .cxx_destruct]
  -[HMDCameraLocalStreamSession stateAsString]
  -[HMDCameraLocalStreamSession updateState:]
  -[HMDCameraLocalStreamSession localNetworkConfig]
  -[HMDCameraLocalStreamSession streamSender]
  -[HMDCameraLocalStreamSession containsState:]
  -[HMDCameraLocalStreamSession initWithSessionID:reachabilityPath:streamSender:remoteCapabilities:localNetworkConfig:streamPreference:]
  -[HMDCameraLocalStreamSession parameterSelection]
  -[HMDCameraLocalStreamSession setParameterSelection:]


HMDMediaProfile : HMDAccessoryProfile <HMFLogging, HMFLocking>
 @property  HMDMediaSession *mediaSession
 @property  unsigned long capability
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMediaProfile supportsSecureCoding]
  +[HMDMediaProfile namespace]
  +[HMDMediaProfile logCategory]
  +[HMDMediaProfile hasMessageReceiverChildren]
  +[HMDMediaProfile uniqueIdentifierFromAccessory:]
  +[HMDMediaProfile sessionNamespace]

  // instance methods
  -[HMDMediaProfile registerForNotifications]
  -[HMDMediaProfile performBlock:]
  -[HMDMediaProfile initWithAccessory:]
  -[HMDMediaProfile .cxx_destruct]
  -[HMDMediaProfile lock]
  -[HMDMediaProfile encodeWithCoder:]
  -[HMDMediaProfile urlString]
  -[HMDMediaProfile unlock]
  -[HMDMediaProfile unregisterForNotifications]
  -[HMDMediaProfile registerForMessages]
  -[HMDMediaProfile capability]
  -[HMDMediaProfile mediaSession]
  -[HMDMediaProfile setMediaSession:]
  -[HMDMediaProfile messageReceiverChildren]
  -[HMDMediaProfile updateWithResponses:message:]
  -[HMDMediaProfile assistantObject]
  -[HMDMediaProfile handleSetValue:withRequestProperty:withCompletionHandler:]
  -[HMDMediaProfile configureWithMessageDispatcher:configurationTracker:]
  -[HMDMediaProfile initWithAccessory:uniqueIdentifier:services:workQueue:]
  -[HMDMediaProfile _handleSetPower:]
  -[HMDMediaProfile _updatePlayback:]
  -[HMDMediaProfile _handleMediaResponses:message:]
  -[HMDMediaProfile _updateRefreshPlayback:]
  -[HMDMediaProfile sessionAudioControlUpdated:]
  -[HMDMediaProfile handleSessionUpdatedNotification:]
  -[HMDMediaProfile _handleSetValue:withRequestProperty:withCompletionHandler:]
  -[HMDMediaProfile _handleSetPlayback:]
  -[HMDMediaProfile _handleMediaSessionSetAudioControl:]
  -[HMDMediaProfile _handleRefreshPlayback:]
  -[HMDMediaProfile handleSessionPlaybackStateUpdatedNotification:]
  -[HMDMediaProfile handleSessionVolumeUpdatedNotification:]
  -[HMDMediaProfile _updateAudioControl:]
  -[HMDMediaProfile _sessionPlaybackStateUpdated:notifyXPCClients:]


HMDProcessInfo : HMFProcessInfo /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  unsigned long state
 @property  RBSProcessState *processState
 @property  RBSProcessHandle *processHandle
 @property  NSArray *connections
 @property  NSString *bundleIdentifier
 @property  BOOL active
 @property  BOOL entitledForAPIAccess
 @property  BOOL entitledForSPIAccess
 @property  BOOL foreground
 @property  BOOL backgroundUpgradedToForeground
 @property  BOOL background
 @property  BOOL suspended
 @property  BOOL terminated
 @property  BOOL shouldMonitor
 @property  HMDApplicationInfo *applicationInfo
 @property  HMFLocationAuthorization *locationAuthorization
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDProcessInfo logCategory]
  +[HMDProcessInfo automaticallyNotifiesObserversForKey:]
  +[HMDProcessInfo privateClientIdentifierSalt]
  +[HMDProcessInfo processInfoWithConnection:]

  // instance methods
  -[HMDProcessInfo connections]
  -[HMDProcessInfo processState]
  -[HMDProcessInfo processHandle]
  -[HMDProcessInfo init]
  -[HMDProcessInfo initWithAuditToken:]
  -[HMDProcessInfo attributeDescriptions]
  -[HMDProcessInfo isSuspended]
  -[HMDProcessInfo setState:]
  -[HMDProcessInfo .cxx_destruct]
  -[HMDProcessInfo initWithIdentifier:]
  -[HMDProcessInfo isActive]
  -[HMDProcessInfo addConnection:]
  -[HMDProcessInfo isEqual:]
  -[HMDProcessInfo state]
  -[HMDProcessInfo bundleIdentifier]
  -[HMDProcessInfo locationAuthorization]
  -[HMDProcessInfo removeConnection:]
  -[HMDProcessInfo isBackgrounded]
  -[HMDProcessInfo applicationInfo]
  -[HMDProcessInfo isEntitledForSPIAccess]
  -[HMDProcessInfo isEntitledForAPIAccess]
  -[HMDProcessInfo shouldMonitor]
  -[HMDProcessInfo clientIdentifierSalt:]
  -[HMDProcessInfo _updateProcessState:]
  -[HMDProcessInfo isTerminated]
  -[HMDProcessInfo isForegrounded]
  -[HMDProcessInfo isBackgroundUpgradedToForeground]


AWDHomeKitSoftwareUpdateAutomaticUpdateToggled : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasIsEnabled
 @property  BOOL isEnabled

  // instance methods
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled copyWithZone:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled setIsEnabled:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled timestamp]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled setTimestamp:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled setHasIsEnabled:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled setHasTimestamp:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled isEnabled]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled readFrom:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled writeTo:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled isEqual:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled hasIsEnabled]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled copyTo:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled dictionaryRepresentation]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled mergeFrom:]
  -[AWDHomeKitSoftwareUpdateAutomaticUpdateToggled hasTimestamp]


HMDSnapshotSlotManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDSnapshotFile *mostRecentSnapshot
 @property  NSMapTable *snapshotSlots
 @property  HMDAccessory *accessory
 @property  NSString *logID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *propertyQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSString *imageCacheDirectory
 @property  NSMutableArray *filesToCleanup
 @property  HMDNotificationRegistration *notificationRegistration
 @property  NSUUID *uniqueIdentifier
 @property  NSDictionary *encodedMostRecentSnapshot
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSnapshotSlotManager logCategory]

  // instance methods
  -[HMDSnapshotSlotManager logID]
  -[HMDSnapshotSlotManager logIdentifier]
  -[HMDSnapshotSlotManager .cxx_destruct]
  -[HMDSnapshotSlotManager workQueue]
  -[HMDSnapshotSlotManager uniqueIdentifier]
  -[HMDSnapshotSlotManager setMsgDispatcher:]
  -[HMDSnapshotSlotManager msgDispatcher]
  -[HMDSnapshotSlotManager _handleProcessStateChange:]
  -[HMDSnapshotSlotManager accessory]
  -[HMDSnapshotSlotManager propertyQueue]
  -[HMDSnapshotSlotManager registerForMessages]
  -[HMDSnapshotSlotManager mostRecentSnapshot]
  -[HMDSnapshotSlotManager setMostRecentSnapshot:]
  -[HMDSnapshotSlotManager handleProcessStateChange:]
  -[HMDSnapshotSlotManager notificationRegistration]
  -[HMDSnapshotSlotManager initWithAccessory:workQueue:imageCacheDirectory:logID:uniqueIdentifier:msgDispatcher:]
  -[HMDSnapshotSlotManager handleReleaseSnapshot:]
  -[HMDSnapshotSlotManager imageCacheDirectory]
  -[HMDSnapshotSlotManager createSlotForSnapshotFile:requestMessages:updateGenerationCounter:]
  -[HMDSnapshotSlotManager encodedMostRecentSnapshot]
  -[HMDSnapshotSlotManager encodedMostRecentSnapshotForMessage:]
  -[HMDSnapshotSlotManager backboardServicesRelaunched:]
  -[HMDSnapshotSlotManager setupMostRecentSnapshot]
  -[HMDSnapshotSlotManager filesToCleanup]
  -[HMDSnapshotSlotManager findMostRecentSnapshot]
  -[HMDSnapshotSlotManager snapshotSlots]
  -[HMDSnapshotSlotManager _updateMostRecentSnapshot:updateGenerationCounter:]
  -[HMDSnapshotSlotManager shouldUpdateMostRecentSnapshotWithSnapshot:]


HMDHAPMediaProfile : HMDMediaProfile
  // class methods
  +[HMDHAPMediaProfile supportsSecureCoding]

  // instance methods
  -[HMDHAPMediaProfile registerForNotifications]
  -[HMDHAPMediaProfile encodeWithCoder:]
  -[HMDHAPMediaProfile capability]
  -[HMDHAPMediaProfile handleAccessoryConnected:]
  -[HMDHAPMediaProfile _updatePlayback:]
  -[HMDHAPMediaProfile _updateRefreshPlayback:]
  -[HMDHAPMediaProfile handleCharacteristicsUpdated:]
  -[HMDHAPMediaProfile _handleCharacteristicChanges:]
  -[HMDHAPMediaProfile _updateAudioControl:]
  -[HMDHAPMediaProfile handleHomeCharacteristicValuesChanged:]
  -[HMDHAPMediaProfile _smartSpeakerService]
  -[HMDHAPMediaProfile _smartSpeakerTargetMediaStateWriteRequestWithPlaybackState:]
  -[HMDHAPMediaProfile _smartSpeakerTargetMediaStateCharacteristic]
  -[HMDHAPMediaProfile _smartSpeakerCurrentMediaStateCharacteristic]
  -[HMDHAPMediaProfile _smartSpeakerVolumeCharacteristic]
  -[HMDHAPMediaProfile _smartSpeakerVolumeWriteRequestWithVolumePercentage:]
  -[HMDHAPMediaProfile _smartSpeakerMutedCharacteristic]
  -[HMDHAPMediaProfile _smartSpeakerCurrentMediaStateReadRequest]
  -[HMDHAPMediaProfile _smartSpeakerVolumeReadRequest]
  -[HMDHAPMediaProfile _smartSpeakerMutedReadRequest]
  -[HMDHAPMediaProfile _updateCurrentMediaState:volumePercentage:muted:message:]
  -[HMDHAPMediaProfile _updateCharacteristicChanges]
  -[HMDHAPMediaProfile _smartSpeakerMutedWriteRequestWithMuted:]
  -[HMDHAPMediaProfile _mediaSessionStateFromProfile]
  -[HMDHAPMediaProfile initWithMediaServices:]
  -[HMDHAPMediaProfile playStateWriteRequestWithPlaybackState:]
  -[HMDHAPMediaProfile volumeWriteRequestWithVolumePercentage:]


HMDCloudCache : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDCloudZone *homeDataInformation
 @property  HMDCloudLegacyZone *legacyZone
 @property  HMDCloudMetadataZone *metadataZone
 @property  HMDCloudHomeManagerZone *homeManagerZone
 @property  NSMutableDictionary *homeZones
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDBackingStore *backingStore
 @property  CKServerChangeToken *databaseServerChangeToken

  // instance methods
  -[HMDCloudCache setWorkQueue:]
  -[HMDCloudCache init]
  -[HMDCloudCache .cxx_destruct]
  -[HMDCloudCache workQueue]
  -[HMDCloudCache setBackingStore:]
  -[HMDCloudCache backingStore]
  -[HMDCloudCache _createZones:completion:]
  -[HMDCloudCache deleteAllZones]
  -[HMDCloudCache legacyZone]
  -[HMDCloudCache metadataZone]
  -[HMDCloudCache homeManagerZone]
  -[HMDCloudCache homeZoneWithName:owner:completion:]
  -[HMDCloudCache deleteHomeZoneWithName:]
  -[HMDCloudCache setDatabaseServerChangeToken:]
  -[HMDCloudCache persistDatabaseServerChangeToken]
  -[HMDCloudCache allHomeZones]
  -[HMDCloudCache createAndFetchZonesFromBackingStore:]
  -[HMDCloudCache homeZoneExists:]
  -[HMDCloudCache databaseServerChangeToken]
  -[HMDCloudCache _findStoreCacheZone:byName:]
  -[HMDCloudCache setHomeDataInformation:]
  -[HMDCloudCache setLegacyZone:]
  -[HMDCloudCache setMetadataZone:]
  -[HMDCloudCache setHomeManagerZone:]
  -[HMDCloudCache homeZones]
  -[HMDCloudCache homeDataInformation]
  -[HMDCloudCache setHomeZones:]
  -[HMDCloudCache initWithBackingStore:workQueue:]


HMDEventCountersManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableDictionary *eventCounters
 @property  NSDate *lastSaveTime
 @property  unsigned long saveCount
 @property  BOOL saving
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDPersistentStore *persistentStore

  // class methods
  +[HMDEventCountersManager sharedEventCountersManager]

  // instance methods
  -[HMDEventCountersManager persistentStore]
  -[HMDEventCountersManager _save]
  -[HMDEventCountersManager init]
  -[HMDEventCountersManager .cxx_destruct]
  -[HMDEventCountersManager workQueue]
  -[HMDEventCountersManager initWithPersistentStore:]
  -[HMDEventCountersManager isSaving]
  -[HMDEventCountersManager setSaving:]
  -[HMDEventCountersManager fetchEventCounterForEventName:requestGroup:]
  -[HMDEventCountersManager resetEventCountersForRequestGroup:]
  -[HMDEventCountersManager forceSave]
  -[HMDEventCountersManager incrementEventCounterForEventName:requestGroup:]
  -[HMDEventCountersManager incrementEventCounterForEventName:requestGroup:withValue:]
  -[HMDEventCountersManager resetEventCounterForEventName:requestGroup:]
  -[HMDEventCountersManager unarchivedEventCounters]
  -[HMDEventCountersManager _incrementEventCounterForEventName:requestGroup:withValue:]
  -[HMDEventCountersManager logDiskWriteState]
  -[HMDEventCountersManager _fetchEventCounterForEventName:requestGroup:]
  -[HMDEventCountersManager _fetchEventCountersForRequestGroup:]
  -[HMDEventCountersManager _fetchAllEventCounters]
  -[HMDEventCountersManager _resetEventCounterForEventName:requestGroup:]
  -[HMDEventCountersManager setLastSaveTime:]
  -[HMDEventCountersManager _performOnUpdate]
  -[HMDEventCountersManager lastSaveTime]
  -[HMDEventCountersManager setSaveCount:]
  -[HMDEventCountersManager saveCount]
  -[HMDEventCountersManager archiveEventCountersWithEventCountersSnapshot:completionHandler:]
  -[HMDEventCountersManager fetchEventCountersForRequestGroup:]
  -[HMDEventCountersManager fetchAllEventCounters]
  -[HMDEventCountersManager eventCounters]
  -[HMDEventCountersManager setEventCounters:]


HMDCameraSnapshotNotificationTimer : HMFTimer /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSSet *changedCharacteristics
 @property  NSString *sessionID
 @property  NSArray *postedBulletins

  // instance methods
  -[HMDCameraSnapshotNotificationTimer sessionID]
  -[HMDCameraSnapshotNotificationTimer .cxx_destruct]
  -[HMDCameraSnapshotNotificationTimer changedCharacteristics]
  -[HMDCameraSnapshotNotificationTimer initWithCameraSessionID:changedCharacteristics:timeInterval:]
  -[HMDCameraSnapshotNotificationTimer postedBulletins]
  -[HMDCameraSnapshotNotificationTimer setPostedBulletins:]


HMDCameraRecordingSessionNotificationTrigger : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDCharacteristicsAvailabilityListenerDelegate, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHAPAccessory *cameraAccessory
 @property  HMDCharacteristicsAvailabilityListener *availabilityListener
 @property  NSNotificationCenter *notificationCenter
 @property  NSSet *availableCharacteristics
 @property  NSString *clientIdentifier
 @property  <HMDCameraRecordingSessionNotificationTriggerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraRecordingSessionNotificationTrigger logCategory]

  // instance methods
  -[HMDCameraRecordingSessionNotificationTrigger notificationCenter]
  -[HMDCameraRecordingSessionNotificationTrigger logIdentifier]
  -[HMDCameraRecordingSessionNotificationTrigger clientIdentifier]
  -[HMDCameraRecordingSessionNotificationTrigger dealloc]
  -[HMDCameraRecordingSessionNotificationTrigger .cxx_destruct]
  -[HMDCameraRecordingSessionNotificationTrigger workQueue]
  -[HMDCameraRecordingSessionNotificationTrigger setDelegate:]
  -[HMDCameraRecordingSessionNotificationTrigger delegate]
  -[HMDCameraRecordingSessionNotificationTrigger start]
  -[HMDCameraRecordingSessionNotificationTrigger handleAccessoryConnected:]
  -[HMDCameraRecordingSessionNotificationTrigger listener:didUpdateAvailableCharacteristics:]
  -[HMDCameraRecordingSessionNotificationTrigger handleCharacteristicsValueUpdated:]
  -[HMDCameraRecordingSessionNotificationTrigger setAvailableCharacteristics:]
  -[HMDCameraRecordingSessionNotificationTrigger availableCharacteristics]
  -[HMDCameraRecordingSessionNotificationTrigger initWithCamera:workQueue:]
  -[HMDCameraRecordingSessionNotificationTrigger initWithCamera:workQueue:availabilityListener:notificationCenter:]
  -[HMDCameraRecordingSessionNotificationTrigger cameraAccessory]
  -[HMDCameraRecordingSessionNotificationTrigger availabilityListener]
  -[HMDCameraRecordingSessionNotificationTrigger _handleObservedCharacteristicsValueUpdate:]


HMDSettingRootGroupModel : HMDSettingGroupModel <HMDConflictResolutionModel>
 @property  NSUUID *conflictResolutionToken

  // class methods
  +[HMDSettingRootGroupModel hmbProperties]

  // instance methods
  -[HMDSettingRootGroupModel initWithModelID:parentModelID:]
  -[HMDSettingRootGroupModel copyWithNewParentModelID:]
  -[HMDSettingRootGroupModel nameForKeyPath]


HMDHomeLocationHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDBatchLocationDelegate, HMDHomeMessageReceiver, NSSecureCoding>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  HMDHome *home
 @property  NSDate *locationUpdateTimestamp
 @property  int locationAuthorization
 @property  CLRegion *regionAtHome
 @property  CLRegion *regionNearbyHome
 @property  int regionStateAtHome
 @property  int regionStateNearbyHome
 @property  NSString *isoCountryCode
 @property  CLLocation *location
 @property  NSTimeZone *timeZone
 @property  HMDHomeLocationData *locationData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDHomeLocationHandler supportsSecureCoding]
  +[HMDHomeLocationHandler hasMessageReceiverChildren]
  +[HMDHomeLocationHandler mergeLocationDataForLocalHome:withCloudHome:]

  // instance methods
  -[HMDHomeLocationHandler messageTargetUUID]
  -[HMDHomeLocationHandler messageDestination]
  -[HMDHomeLocationHandler messageReceiveQueue]
  -[HMDHomeLocationHandler timeZone]
  -[HMDHomeLocationHandler setWorkQueue:]
  -[HMDHomeLocationHandler init]
  -[HMDHomeLocationHandler setLocationAuthorization:]
  -[HMDHomeLocationHandler dealloc]
  -[HMDHomeLocationHandler setTimeZone:]
  -[HMDHomeLocationHandler .cxx_destruct]
  -[HMDHomeLocationHandler workQueue]
  -[HMDHomeLocationHandler setHome:]
  -[HMDHomeLocationHandler setLocation:]
  -[HMDHomeLocationHandler encodeWithCoder:]
  -[HMDHomeLocationHandler setMsgDispatcher:]
  -[HMDHomeLocationHandler msgDispatcher]
  -[HMDHomeLocationHandler setIsoCountryCode:]
  -[HMDHomeLocationHandler _registerForMessages]
  -[HMDHomeLocationHandler home]
  -[HMDHomeLocationHandler locationData]
  -[HMDHomeLocationHandler location]
  -[HMDHomeLocationHandler locationAuthorization]
  -[HMDHomeLocationHandler isoCountryCode]
  -[HMDHomeLocationHandler initWithCoder:]
  -[HMDHomeLocationHandler regionStateAtHome]
  -[HMDHomeLocationHandler regionStateNearbyHome]
  -[HMDHomeLocationHandler configure:queue:messageDispatcher:]
  -[HMDHomeLocationHandler updateHomeLocation]
  -[HMDHomeLocationHandler accessoriesBecomeReachable]
  -[HMDHomeLocationHandler accessoriesBecomeUnreachable]
  -[HMDHomeLocationHandler runTransactionWithLocation:updateTime:]
  -[HMDHomeLocationHandler _handleHomeLocationData:message:]
  -[HMDHomeLocationHandler didDetermineState:forRegion:]
  -[HMDHomeLocationHandler didDetermineLocation:]
  -[HMDHomeLocationHandler _handleLocationAuthorizationChangedNotification:]
  -[HMDHomeLocationHandler didDetermineBatchLocation:]
  -[HMDHomeLocationHandler getReachableIPAccessory:btleAccessory:mediaAccessory:]
  -[HMDHomeLocationHandler locationUpdateTimestamp]
  -[HMDHomeLocationHandler setLocationUpdateTimestamp:]
  -[HMDHomeLocationHandler _updateTimeZone:]
  -[HMDHomeLocationHandler _handleLocationAuthorization:]
  -[HMDHomeLocationHandler _handleRetrieveLocation:]
  -[HMDHomeLocationHandler regionAtHome]
  -[HMDHomeLocationHandler regionNearbyHome]
  -[HMDHomeLocationHandler setRegionAtHome:]
  -[HMDHomeLocationHandler setRegionNearbyHome:]
  -[HMDHomeLocationHandler _registerForRegionUpdate]
  -[HMDHomeLocationHandler _canExtractBatchLocations]
  -[HMDHomeLocationHandler _needToExtractBatchLocations]
  -[HMDHomeLocationHandler setRegionStateAtHome:]
  -[HMDHomeLocationHandler setRegionStateNearbyHome:]
  -[HMDHomeLocationHandler isDate:laterThanDate:]
  -[HMDHomeLocationHandler isLocation:closeToLocation:]
  -[HMDHomeLocationHandler _sendLocationUpdate]
  -[HMDHomeLocationHandler _evaluateHomeRegionStateForCurrentDeviceLocation:]


HMDHomeLocationData : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  CLLocation *location
 @property  NSDate *locationUpdateTimestamp

  // class methods
  +[HMDHomeLocationData supportsSecureCoding]

  // instance methods
  -[HMDHomeLocationData .cxx_destruct]
  -[HMDHomeLocationData encodeWithCoder:]
  -[HMDHomeLocationData location]
  -[HMDHomeLocationData initWithCoder:]
  -[HMDHomeLocationData locationUpdateTimestamp]
  -[HMDHomeLocationData initWithLocation:locationUpdateTimestamp:]


HMDHomeAdministratorHandler : HMFMessageDispatcher /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMFMessageDispatcher *dispatcher
 @property  HMDHome *home
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeAdministratorHandler logCategory]

  // instance methods
  -[HMDHomeAdministratorHandler dispatcher]
  -[HMDHomeAdministratorHandler logIdentifier]
  -[HMDHomeAdministratorHandler addOperation:]
  -[HMDHomeAdministratorHandler registerForMessage:receiver:policies:selector:]
  -[HMDHomeAdministratorHandler .cxx_destruct]
  -[HMDHomeAdministratorHandler registerForMessage:receiver:policies:messageHandler:]
  -[HMDHomeAdministratorHandler home]
  -[HMDHomeAdministratorHandler observeValueForKeyPath:ofObject:change:context:]
  -[HMDHomeAdministratorHandler deregisterReceiver:]
  -[HMDHomeAdministratorHandler initWithTransport:]
  -[HMDHomeAdministratorHandler initWithHome:]
  -[HMDHomeAdministratorHandler operationForMessage:error:]
  -[HMDHomeAdministratorHandler syncOperationManager]


__HMDHomeAdministratorReceiver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver>
 @property  <HMFMessageReceiver> *receiver
 @property  HMDHomeAdministratorHandler *handler
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[__HMDHomeAdministratorReceiver logCategory]

  // instance methods
  -[__HMDHomeAdministratorReceiver messageTargetUUID]
  -[__HMDHomeAdministratorReceiver messageReceiveQueue]
  -[__HMDHomeAdministratorReceiver logIdentifier]
  -[__HMDHomeAdministratorReceiver receiver]
  -[__HMDHomeAdministratorReceiver dealloc]
  -[__HMDHomeAdministratorReceiver .cxx_destruct]
  -[__HMDHomeAdministratorReceiver handler]
  -[__HMDHomeAdministratorReceiver shortDescription]
  -[__HMDHomeAdministratorReceiver __handleMessage:]
  -[__HMDHomeAdministratorReceiver initWithReceiver:handler:]
  -[__HMDHomeAdministratorReceiver registerForMessage:policies:]


__HMDHomeAdministratorRemoteRelay : __HMDHomeAdministratorReceiver
  // class methods
  +[__HMDHomeAdministratorRemoteRelay logCategory]

  // instance methods
  -[__HMDHomeAdministratorRemoteRelay __handleMessage:]
  -[__HMDHomeAdministratorRemoteRelay registerForMessage:policies:]


__HMDHomeAdministratorRemoteReceiver : __HMDHomeAdministratorReceiver
  // class methods
  +[__HMDHomeAdministratorRemoteReceiver logCategory]

  // instance methods
  -[__HMDHomeAdministratorRemoteReceiver registerForMessage:policies:]
  -[__HMDHomeAdministratorRemoteReceiver __handleRemoteMessage:]


HMDCameraSnapshotIDSRelayInitiator : HMDCameraSnapshotIDSRelay <IDSSessionDelegate>
 @property  IDSSession *idsSession
 @property  <HMDCameraSnapshotIDSRelayInitiatorDelegate> *delegate
 @property  BOOL idsSessionStarted
 @property  HMDDevice *device
 @property  NSMutableData *data
 @property  NSObject<OS_dispatch_source> *socketSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotIDSRelayInitiator logCategory]

  // instance methods
  -[HMDCameraSnapshotIDSRelayInitiator setData:]
  -[HMDCameraSnapshotIDSRelayInitiator device]
  -[HMDCameraSnapshotIDSRelayInitiator sendData:]
  -[HMDCameraSnapshotIDSRelayInitiator dealloc]
  -[HMDCameraSnapshotIDSRelayInitiator .cxx_destruct]
  -[HMDCameraSnapshotIDSRelayInitiator session:receivedInvitationAcceptFromID:]
  -[HMDCameraSnapshotIDSRelayInitiator session:receivedInvitationDeclineFromID:]
  -[HMDCameraSnapshotIDSRelayInitiator session:receivedInvitationCancelFromID:]
  -[HMDCameraSnapshotIDSRelayInitiator data]
  -[HMDCameraSnapshotIDSRelayInitiator sessionStarted:]
  -[HMDCameraSnapshotIDSRelayInitiator sessionEnded:withReason:error:]
  -[HMDCameraSnapshotIDSRelayInitiator delegate]
  -[HMDCameraSnapshotIDSRelayInitiator idsSession]
  -[HMDCameraSnapshotIDSRelayInitiator setIdsSession:]
  -[HMDCameraSnapshotIDSRelayInitiator initWithSessionID:logIdentifier:workQueue:device:delegate:]
  -[HMDCameraSnapshotIDSRelayInitiator sendIDSInvitation]
  -[HMDCameraSnapshotIDSRelayInitiator _sendData]
  -[HMDCameraSnapshotIDSRelayInitiator idsSessionStarted]
  -[HMDCameraSnapshotIDSRelayInitiator _startDataTransfer]
  -[HMDCameraSnapshotIDSRelayInitiator _callFileTransferFailed:]
  -[HMDCameraSnapshotIDSRelayInitiator setSocketSource:]
  -[HMDCameraSnapshotIDSRelayInitiator socketSource]
  -[HMDCameraSnapshotIDSRelayInitiator setIdsSessionStarted:]


HMDCameraClipUserNotificationCenter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  <HMDCameraBulletinBoard> *bulletinBoard
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDFileManager> *fileManager
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraClipUserNotificationCenter logCategory]

  // instance methods
  -[HMDCameraClipUserNotificationCenter fileManager]
  -[HMDCameraClipUserNotificationCenter .cxx_destruct]
  -[HMDCameraClipUserNotificationCenter workQueue]
  -[HMDCameraClipUserNotificationCenter bulletinBoard]
  -[HMDCameraClipUserNotificationCenter initWithBulletinBoard:workQueue:]
  -[HMDCameraClipUserNotificationCenter postNotificationForClipSignificantEvent:cameraProfile:]
  -[HMDCameraClipUserNotificationCenter removeEventNotificationForClipWithUUID:]
  -[HMDCameraClipUserNotificationCenter initWithBulletinBoard:workQueue:fileManager:]
  -[HMDCameraClipUserNotificationCenter _writeHeroFrameData:]
  -[HMDCameraClipUserNotificationCenter _postNotificationForClipSignificantEvent:cameraProfile:canFetchHeroFrame:]
  -[HMDCameraClipUserNotificationCenter _firstAvailableHeroFrameURLForSignificantEvents:cameraProfile:]
  -[HMDCameraClipUserNotificationCenter _postNotificationForSignificantEvents:cameraProfile:heroFrameURL:]
  -[HMDCameraClipUserNotificationCenter postNotificationForSignificantEvent:heroFrameData:cameraProfile:]


HMDMemoryLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging, HMDDiagnosticReportLogging>
 @property  NSString *diagnosticReportEventType
 @property  NSString *diagnosticReportEventSubType
 @property  NSString *reason
 @property  NSNumber *memoryUsage
 @property  NSNumber *maxMemoryUsage

  // class methods
  +[HMDMemoryLogEvent identifier]
  +[HMDMemoryLogEvent memoryLogEventWithReason:memoryUsage:maxMemoryUsage:]

  // instance methods
  -[HMDMemoryLogEvent eventName]
  -[HMDMemoryLogEvent init]
  -[HMDMemoryLogEvent .cxx_destruct]
  -[HMDMemoryLogEvent reason]
  -[HMDMemoryLogEvent serializedEvent]
  -[HMDMemoryLogEvent shouldSubmitEvent]
  -[HMDMemoryLogEvent memoryUsage]
  -[HMDMemoryLogEvent maxMemoryUsage]
  -[HMDMemoryLogEvent __initWithReason:memoryUsage:maxMemoryUsage:]
  -[HMDMemoryLogEvent updateDiagnosticReportSignature:]


HMDRemoteMessageSenderContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFObject, NSCopying>
 @property  HMDDeviceHandle *deviceHandle
 @property  HMDAccountIdentifier *accountIdentifier
 @property  HMDAccountHandle *accountHandle
 @property  HMDHomeKitVersion *deviceVersion
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[HMDRemoteMessageSenderContext copyWithZone:]
  -[HMDRemoteMessageSenderContext deviceVersion]
  -[HMDRemoteMessageSenderContext accountIdentifier]
  -[HMDRemoteMessageSenderContext .cxx_destruct]
  -[HMDRemoteMessageSenderContext propertyDescription]
  -[HMDRemoteMessageSenderContext deviceHandle]
  -[HMDRemoteMessageSenderContext accountHandle]
  -[HMDRemoteMessageSenderContext initWithDeviceHandle:accountHandle:accountIdentifier:deviceVersion:]


HMDRemoteLoginReceiver : HMDRemoteLoginBase <HMDRemoteLoginReceiverAuthenticationDelegate>
 @property  HMDRemoteLoginReceiverSession *loginSession
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginReceiver logCategory]

  // instance methods
  -[HMDRemoteLoginReceiver .cxx_destruct]
  -[HMDRemoteLoginReceiver registerForMessages]
  -[HMDRemoteLoginReceiver setLoginSession:]
  -[HMDRemoteLoginReceiver configureWithWorkQueue:messageDispatcher:]
  -[HMDRemoteLoginReceiver loginSession]
  -[HMDRemoteLoginReceiver didCompleteAuthentication:response:]
  -[HMDRemoteLoginReceiver auditLoggedInAccount]
  -[HMDRemoteLoginReceiver _handleCompanionAuthenticationRequest:]
  -[HMDRemoteLoginReceiver _handleProxyDeviceRequest:]
  -[HMDRemoteLoginReceiver _handleProxyAuthenticationRequest:]
  -[HMDRemoteLoginReceiver _handleSignoutRequest:]
  -[HMDRemoteLoginReceiver _authenticate:message:]
  -[HMDRemoteLoginReceiver auditLoggedInAccountFor:]
  -[HMDRemoteLoginReceiver _auditLoggedInAccountFor:]
  -[HMDRemoteLoginReceiver _callCompletion:]


HMDWatchConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *uniqueId
 @property  NSDictionary *metadataConfig
 @property  NSDictionary *homeConfig
 @property  NSUUID *primaryHome

  // instance methods
  -[HMDWatchConfiguration .cxx_destruct]
  -[HMDWatchConfiguration setPrimaryHome:]
  -[HMDWatchConfiguration initWithUniqueID:]
  -[HMDWatchConfiguration primaryHome]
  -[HMDWatchConfiguration uniqueId]
  -[HMDWatchConfiguration setUniqueId:]
  -[HMDWatchConfiguration metadataConfig]
  -[HMDWatchConfiguration homeConfig]
  -[HMDWatchConfiguration setHomeConfig:]
  -[HMDWatchConfiguration setHomeConfiguration:]
  -[HMDWatchConfiguration setConfigVersion:forHome:]
  -[HMDWatchConfiguration setMetadataConfig:]


HMDWatchSync : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long syncOption
 @property  NSUUID *syncIdentifier
 @property  BOOL inProgress

  // instance methods
  -[HMDWatchSync inProgress]
  -[HMDWatchSync .cxx_destruct]
  -[HMDWatchSync setInProgress:]
  -[HMDWatchSync syncIdentifier]
  -[HMDWatchSync syncOption]
  -[HMDWatchSync initWithSyncOption:]
  -[HMDWatchSync setSyncOption:]


HMDWatchSyncState : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *deviceId
 @property  NSString *identifier
 @property  HMDWatchSync *currentSync
 @property  HMDPairedSync *pairedSync

  // class methods
  +[HMDWatchSyncState resultAsString:]
  +[HMDWatchSyncState optionAsString:]
  +[HMDWatchSyncState isNewBetter:present:]

  // instance methods
  -[HMDWatchSyncState deviceId]
  -[HMDWatchSyncState dealloc]
  -[HMDWatchSyncState .cxx_destruct]
  -[HMDWatchSyncState identifier]
  -[HMDWatchSyncState pairedSync]
  -[HMDWatchSyncState removeSync]
  -[HMDWatchSyncState initWithDeviceId:pairedSync:]
  -[HMDWatchSyncState currentSync]
  -[HMDWatchSyncState addNewSync:]


HMDUserPushCache : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDDevice *device
 @property  NSDate *expirationDate
 @property  BOOL expired

  // instance methods
  -[HMDUserPushCache device]
  -[HMDUserPushCache init]
  -[HMDUserPushCache setExpirationDate:]
  -[HMDUserPushCache .cxx_destruct]
  -[HMDUserPushCache isExpired]
  -[HMDUserPushCache expirationDate]
  -[HMDUserPushCache initWithDevice:]


HMDHomeManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDCloudManagerDelegate, HMDDeviceSetupSessionDelegate, HMDDuetPredictionSubscriberDataSource, HMDMobileAssetManagerDelegate, HMDLogEventDailyProvider, HMDSyncOperationManagerDataSource, HMFMessageReceiver, HMFLogging, HMDAccessoryBrowserManagerDelegate, HMFTimerDelegate, HAPFragmentationStreamDelegate, HMDPairedSyncDelegate, HMDUserManagementOperationDelegate, HMDBackingStoreObjectProtocol>
 @property  HMFTimer *debounceHomesUpdateTimer
 @property  HMFTimer *periodicMobileCatalogUpdateTimer
 @property  HMFTimer *memoryMonitorLogEventTimer
 @property  HMFTimer *periodicCounterLoggingTimer
 @property  unsigned long generationCounter
 @property  unsigned long stateHandle
 @property  NSMutableSet *pendingHomesBeingRemoved
 @property  HMDCompanionManager *companionManager
 @property  BOOL residentEnabled
 @property  long long residentEnabledState
 @property  BOOL accessAllowedWhenLocked
 @property  BOOL cacheUseAllowed
 @property  NSMutableDictionary *userPushCacheMap
 @property  NSMutableArray *deviceSetupSessions
 @property  NSDictionary *demoAccessories
 @property  BOOL demoFinalized
 @property  BOOL speakersAreConfigured
 @property  BOOL speakersAreConfiguredInOwnedHomes
 @property  NSMutableSet *unprocessedOperationModelIdentifiers
 @property  HMDAccessoryBrowser *accessoryBrowserInternal
 @property  HMDAssistantGather *gatherer
 @property  HMDMobileAssetManager *mobileAssetManager
 @property  HMDProximityCardLauncher *proximityCardLauncher
 @property  HMDUserCloudShareManager *userCloudShareManager
 @property  HMDCloudManagerDataSource *cloudDataSource
 @property  HMDCameraRecordingResidentElector *recordingResidentElector
 @property  HMDDuetPredictionSubscriber *duetSubscriber
 @property  HMDAWDLogEventObserver *awdLogEventObserver
 @property  HMDCoreDuetLogEventObserver *coreDuetLogEventObserver
 @property  NSMutableSet *activeConnections
 @property  id browseAssertion
 @property  NSDate *hapMetricsLastSubmissionDate
 @property  NSDate *eventAggregationAnalysisLogDate
 @property  NSDate *homeConfigurationLogDate
 @property  HMDHomeManagerObjectChangeHandler *homeManagerObjectChangeHandler
 @property  NSUUID *uuid
 @property  NSMutableArray *homes
 @property  NSMutableArray *cloudZones
 @property  NSMutableArray *uuidsOfRemovedHomes
 @property  NSUUID *primaryHomeUUID
 @property  NSUUID *currentHomeUUID
 @property  NSUUID *lastCurrentHomeUUID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSObject<OS_dispatch_queue> *sysdiagnoseQueue
 @property  HMDMessageDispatcher *messageDispatcher
 @property  <HMDAccessoryBrowserProtocol> *accessoryBrowser
 @property  NSMutableSet *unassociatedRemotePeers
 @property  NSMutableDictionary *associatedRemotePeers
 @property  NSMutableSet *fullSyncedWatchPeers
 @property  NSMutableDictionary *associatedWatchPeers
 @property  NSMutableDictionary *watchSyncStateMap
 @property  HMDPairedSync *pairedSync
 @property  int generationCounterToken
 @property  unsigned long assistantGenerationCounter
 @property  HMDNameValidator *nameValidator
 @property  NSObject<OS_dispatch_source> *accessoryFinderTimer
 @property  NSMutableArray *pendingResponsesForAccessoryFinder
 @property  HMDPendingCloudSyncTransactions *pendingTransactions
 @property  HMDPowerManager *powerManager
 @property  HMDCloudManager *cloudDataSyncManager
 @property  HMFActivity *setupActivity
 @property  double setupStartTimestamp
 @property  HMDWatchManager *watchManager
 @property  HMDBackingStore *backingStore
 @property  NSUUID *dataTag
 @property  ^{__SCNetworkReachability=} reachability
 @property  long long networkConnectionAvailable
 @property  NSMutableDictionary *pendingDataSyncAcks
 @property  NSMutableDictionary *pendingRemoteSessions
 @property  NSMutableSet *pendingResidentSetupSessions
 @property  HMDMessageFilterChain *msgFilterChain
 @property  NSMutableSet *dialogCancelationContexts
 @property  HMDIdentityRegistry *identityRegistry
 @property  BOOL accountActive
 @property  BOOL accountStatusFailedDueToNetworkFailure
 @property  BOOL backOffOperationInProgress
 @property  unsigned long cloudOperationRetryCount
 @property  BOOL uploadToCloudIsPending
 @property  BOOL uploadHomeDataToCloud
 @property  BOOL forceFetchHomeManagerZone
 @property  BOOL lastAnswerForShouldCloudSyncData
 @property  NSObject<OS_dispatch_source> *cloudOperationRetryTimer
 @property  unsigned long homeDatabaseSize
 @property  HMDCloudDataSyncStateFilter *cloudDataSyncStateFilter
 @property  BOOL uploadMetadataToCloud
 @property  HMDLocation *locationHandler
 @property  HMDFMFHandler *fmfHandler
 @property  HMDAccountRegistry *accountRegistry
 @property  HMFDumpCategory *dumpCategory
 @property  NSMutableArray *incomingInvitations
 @property  BOOL ignoreFirstTimeReachabilityChanged
 @property  HMDDevice *companionDevice
 @property  BOOL companionReachable
 @property  HMDClientConnection *clientConnection
 @property  NSObject<OS_dispatch_queue> *clientConnectionQueue
 @property  BOOL accountStatusIsAuthenticated
 @property  HMFTimer *remoteAccessHealthMonitorTimer
 @property  unsigned short nextRequestTransactionIdentifier
 @property  NSMutableDictionary *pendingFragmentationStream
 @property  BOOL homeDataLoadedFromArchive
 @property  HMFTimer *watchPushDelayTimer
 @property  HMFTimer *sharedHomesPushDelayTimer
 @property  BOOL cloudkitAccountStatusDetermined
 @property  HMDTimeInformationMonitor *timeInformationMonitor
 @property  BOOL needToCleanUpKeys
 @property  BOOL zoneFetchFailed
 @property  HMDApplicationData *appData
 @property  HMDResidentMesh *residentMesh
 @property  HMDKeyTransferAgent *keyTransferAgent
 @property  HMDSyncOperationManager *syncManager
 @property  HMDCloudAccount *cloudAccount
 @property  unsigned long siriSyncNotificationTime
 @property  NSMutableArray *siriSyncNotificationReasons
 @property  HMFTimer *debounceRegenerateAssistantSyncDataTimer
 @property  HMDSoftwareUpdateManager *softwareUpdateManager
 @property  unsigned long status
 @property  BOOL active
 @property  HMDHomeManagerObjectLookup *lookup
 @property  BOOL dataSyncInProgress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *logEventProviderDailySubmissionBlocks
 @property  BOOL legacyZoneHasRecordsAvaliable
 @property  BOOL isCloudAccountActive
 @property  BOOL isNetworkConnectionAvailable
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDHomeManager logCategory]
  +[HMDHomeManager isThisDeviceAdminOfHome:]
  +[HMDHomeManager doesSaveReasonAffectOnlyLocalData:]
  +[HMDHomeManager shouldIgnoreExpectedConfigurationVersionUpdateForReason:]
  +[HMDHomeManager shouldIncrementGenerationCounterForReason:]
  +[HMDHomeManager getCurrentAltDSID]
  +[HMDHomeManager createIdentifierSalt:deviceSpecific:]
  +[HMDHomeManager deriveIntentGroupIdentifierFromBaseUUID:]
  +[HMDHomeManager doesSaveReasonNotAffectLocalData:]
  +[HMDHomeManager doesSaveReasonAffectHomeManager:]
  +[HMDHomeManager _getIntentGroupClientIdentifierSalt]
  +[HMDHomeManager activeAccountIdentifier]
  +[HMDHomeManager getUniqueDeviceIdSalt]
  +[HMDHomeManager saltForDeviceSpecificIdentifier]
  +[HMDHomeManager remotePeerDeviceAddress:]
  +[HMDHomeManager idsDeviceForDevice:]

  // instance methods
  -[HMDHomeManager messageTargetUUID]
  -[HMDHomeManager messageDestination]
  -[HMDHomeManager messageReceiveQueue]
  -[HMDHomeManager setGenerationCounter:]
  -[HMDHomeManager timerDidFire:]
  -[HMDHomeManager setClientConnection:]
  -[HMDHomeManager _homeWithUUID:]
  -[HMDHomeManager setAccessAllowedWhenLocked:]
  -[HMDHomeManager clientConnection]
  -[HMDHomeManager reachability]
  -[HMDHomeManager setReachability:]
  -[HMDHomeManager setWorkQueue:]
  -[HMDHomeManager init]
  -[HMDHomeManager stateHandle]
  -[HMDHomeManager lookup]
  -[HMDHomeManager companionDevice]
  -[HMDHomeManager activeConnections]
  -[HMDHomeManager uuid]
  -[HMDHomeManager dealloc]
  -[HMDHomeManager pendingTransactions]
  -[HMDHomeManager .cxx_destruct]
  -[HMDHomeManager getOrCreateLocalPairingIdentity:]
  -[HMDHomeManager workQueue]
  -[HMDHomeManager setUuid:]
  -[HMDHomeManager setMobileAssetManager:]
  -[HMDHomeManager syncManager]
  -[HMDHomeManager _registerForMessages]
  -[HMDHomeManager startWithCompletionHandler:]
  -[HMDHomeManager setBackingStore:]
  -[HMDHomeManager isActive]
  -[HMDHomeManager backingStore]
  -[HMDHomeManager setPendingTransactions:]
  -[HMDHomeManager demoAccessories]
  -[HMDHomeManager incomingInvitations]
  -[HMDHomeManager setDemoAccessories:]
  -[HMDHomeManager messageDispatcher]
  -[HMDHomeManager isAccessAllowedWhenLocked]
  -[HMDHomeManager appData]
  -[HMDHomeManager dataTag]
  -[HMDHomeManager _currentHome]
  -[HMDHomeManager setStateHandle:]
  -[HMDHomeManager homes]
  -[HMDHomeManager accessoryBrowser]
  -[HMDHomeManager _handleSignificantTimeChange]
  -[HMDHomeManager userCloudShareManager]
  -[HMDHomeManager isDataSyncInProgress]
  -[HMDHomeManager cloudAccount]
  -[HMDHomeManager accessoryWithUUID:]
  -[HMDHomeManager generationCounter]
  -[HMDHomeManager registerStateHandler]
  -[HMDHomeManager status]
  -[HMDHomeManager mobileAssetManager]
  -[HMDHomeManager setupSession:didCloseWithError:]
  -[HMDHomeManager pairedAccessories]
  -[HMDHomeManager registerForSignificantTimeChangeNotification]
  -[HMDHomeManager deregisterForSignificantTimeChangeNotification]
  -[HMDHomeManager accountActive]
  -[HMDHomeManager modelObjectWithChangeType:version:]
  -[HMDHomeManager transactionObjectUpdated:newValues:message:]
  -[HMDHomeManager transactionObjectRemoved:message:]
  -[HMDHomeManager modelObjectWithChangeType:]
  -[HMDHomeManager backingStoreObjects:]
  -[HMDHomeManager recordingResidentElector]
  -[HMDHomeManager setMessageDispatcher:]
  -[HMDHomeManager handleRemoteUserClientCloudShareRequest:]
  -[HMDHomeManager handleRemoteUserClientCloudShareRepairRequest:]
  -[HMDHomeManager mobileAssetManager:didReceiveMetadata:]
  -[HMDHomeManager isResidentCapable]
  -[HMDHomeManager handleBackgroundTaskAgentJob:forHomeWithUUID:]
  -[HMDHomeManager demoFinalized]
  -[HMDHomeManager initWithMessageDispatcher:accessoryBrowser:messageFilterChain:homeData:localDataDecryptionFailed:identityRegistry:accountRegistry:]
  -[HMDHomeManager cloudDataSyncManager]
  -[HMDHomeManager setCloudDataSyncManager:]
  -[HMDHomeManager operationsWithIdentifiers:outOperations:]
  -[HMDHomeManager emptyModelObjectWithChangeType:]
  -[HMDHomeManager setAppData:]
  -[HMDHomeManager companionReachable]
  -[HMDHomeManager electDeviceForUser:destination:deviceCapabilities:queue:completionHandler:]
  -[HMDHomeManager saveWithRequest:]
  -[HMDHomeManager saveWithReason:information:postSyncNotification:]
  -[HMDHomeManager nameValidator]
  -[HMDHomeManager addName:namespace:]
  -[HMDHomeManager removeName:namespace:]
  -[HMDHomeManager replaceName:withNewName:inNamespaces:]
  -[HMDHomeManager _handleSetAppData:]
  -[HMDHomeManager notifyAboutAddAccessoryRequest]
  -[HMDHomeManager cleanupOperationsForAccessory:user:completion:]
  -[HMDHomeManager scheduleRemovalForHome:message:options:]
  -[HMDHomeManager residentMesh]
  -[HMDHomeManager sendSecureMessage:target:userID:destination:responseQueue:responseHandler:]
  -[HMDHomeManager accessoriesAreLocallyReachableOnTransientDevice:forHome:]
  -[HMDHomeManager notifyClientsOfConfigurationChangeWithReason:source:shouldFetch:]
  -[HMDHomeManager processAnyPendingRequestsForRemoteAccess]
  -[HMDHomeManager identityRegistry]
  -[HMDHomeManager reprocessUserManagementModels]
  -[HMDHomeManager removeFromUnassociatedPeers:home:]
  -[HMDHomeManager sendUserRemoved:fromHome:pairingUsername:pushToCloud:completionHandler:]
  -[HMDHomeManager sendUserAdded:destination:toHome:]
  -[HMDHomeManager sendUnsecureMessage:target:userID:responseQueue:responseHandler:]
  -[HMDHomeManager isPairedWithWatch]
  -[HMDHomeManager watchManager]
  -[HMDHomeManager electRemoteAccessPeerForHome:]
  -[HMDHomeManager getControllerKey:controllerUsername:error:]
  -[HMDHomeManager teardownRemoteAccessForHome:]
  -[HMDHomeManager checkForRemotePeers]
  -[HMDHomeManager atHomeLevelChanged:formerLevel:home:]
  -[HMDHomeManager generateDataForSharedHomeModel:]
  -[HMDHomeManager uploadHomeToCloudZone:withDelay:]
  -[HMDHomeManager evaluateIfMediaPlaybackStateChanged:]
  -[HMDHomeManager userManagementOperationDidFinish:]
  -[HMDHomeManager registerQueriableAwdMetrics]
  -[HMDHomeManager currentHomeUUID]
  -[HMDHomeManager primaryHomeUUID]
  -[HMDHomeManager _homeWithName:]
  -[HMDHomeManager assistantGenerationCounter]
  -[HMDHomeManager assistantSyncDataChanged:]
  -[HMDHomeManager setPrimaryHomeUUID:]
  -[HMDHomeManager setCurrentHomeUUID:]
  -[HMDHomeManager accountRegistry]
  -[HMDHomeManager logEventProviderDailySubmissionBlocks]
  -[HMDHomeManager setupActivity]
  -[HMDHomeManager cloudDataSyncStateFilter]
  -[HMDHomeManager setLocalPairingIdentity:error:]
  -[HMDHomeManager numberOfPendingIncomingInvitation]
  -[HMDHomeManager numberOfAccessoryWithNewFirmwareAvailable]
  -[HMDHomeManager homeUserFromMessage:home:]
  -[HMDHomeManager accountAvailabilityChanged:]
  -[HMDHomeManager fetchHomeFromCloudZone:cloudConflict:withDelay:]
  -[HMDHomeManager fetchHomeManagerCloudConflict:withDelay:]
  -[HMDHomeManager uploadHomeConfigToCloud:withDelay:]
  -[HMDHomeManager fetchHomeDataFromCloudWithCloudConflict:withDelay:]
  -[HMDHomeManager keyTransferAgent]
  -[HMDHomeManager archiveServerToken:]
  -[HMDHomeManager eraseLocalHomeData]
  -[HMDHomeManager reloadHomeDataFromLocalStore:]
  -[HMDHomeManager fetchAllZones]
  -[HMDHomeManager setAccountActive:]
  -[HMDHomeManager verifyHomeDataFromCloud:]
  -[HMDHomeManager _handleControllerKeyAvailable]
  -[HMDHomeManager schedulePostFetch]
  -[HMDHomeManager notifyZonesCloudZoneReady:]
  -[HMDHomeManager kickAccountAvailabilityCheck]
  -[HMDHomeManager legacyZoneHasRecordsAvaliable]
  -[HMDHomeManager setCloudDataSyncStateFilter:]
  -[HMDHomeManager sendPairingIdentity:includePrivateKey:requestMessage:]
  -[HMDHomeManager softwareUpdateManager]
  -[HMDHomeManager cloudZones]
  -[HMDHomeManager timeInformationMonitor]
  -[HMDHomeManager isResidentEnabled]
  -[HMDHomeManager lastCurrentHomeUUID]
  -[HMDHomeManager residentEnabledState]
  -[HMDHomeManager setHomes:]
  -[HMDHomeManager setLastCurrentHomeUUID:]
  -[HMDHomeManager setDataTag:]
  -[HMDHomeManager setCloudZones:]
  -[HMDHomeManager setIncomingInvitations:]
  -[HMDHomeManager setResidentEnabledState:]
  -[HMDHomeManager setDemoFinalized:]
  -[HMDHomeManager msgFilterChain]
  -[HMDHomeManager startLocalTransport]
  -[HMDHomeManager notifyClientsOfConfigurationChange]
  -[HMDHomeManager determineLocalChangesAndSchedulePush]
  -[HMDHomeManager gatherer]
  -[HMDHomeManager homesForDuetPredictionSubscriber:]
  -[HMDHomeManager setSetupActivity:]
  -[HMDHomeManager setSetupStartTimestamp:]
  -[HMDHomeManager setupStartTimestamp]
  -[HMDHomeManager isCloudAccountActive]
  -[HMDHomeManager zoneFetchFailed]
  -[HMDHomeManager isNetworkConnectionAvailable]
  -[HMDHomeManager forceCloudFetch]
  -[HMDHomeManager _removeAndAddKeyPair:userName:]
  -[HMDHomeManager _updateCloudDataSyncWithAccountState:]
  -[HMDHomeManager accessoriesMatchingIdentifier:]
  -[HMDHomeManager isDataSyncInProgressWithMessage:]
  -[HMDHomeManager handleSiriSyncDataRequest:]
  -[HMDHomeManager _saveAssistantHashingData:]
  -[HMDHomeManager __generateAssistantTeamIdentifier]
  -[HMDHomeManager _setHomeConfigurationKey:value:applicationIdentifier:]
  -[HMDHomeManager _setAssistantHashingData:]
  -[HMDHomeManager _setHomeConfigurationKey:value:]
  -[HMDHomeManager setAssistantGenerationCounter:]
  -[HMDHomeManager _setHomekitAssistantConfigurationVersion:]
  -[HMDHomeManager _incrementAssistantGenerationCounter]
  -[HMDHomeManager writeAssistantCurrentHome:]
  -[HMDHomeManager _setHomekitAssistantNumEntities:]
  -[HMDHomeManager siriSyncNotificationReasons]
  -[HMDHomeManager _setAssistantSyncRequest:]
  -[HMDHomeManager debounceRegenerateAssistantSyncDataTimer]
  -[HMDHomeManager siriSyncNotificationTime]
  -[HMDHomeManager setSiriSyncNotificationTime:]
  -[HMDHomeManager _assistantSyncDataChanged:]
  -[HMDHomeManager __setLastSyncedAssistantConfigurationVersion:]
  -[HMDHomeManager _getAssistantHashingData]
  -[HMDHomeManager _resetSiriSyncNotification]
  -[HMDHomeManager _sendAssistantTeamIdentifierToWatches:]
  -[HMDHomeManager _generateAssistantSyncDataAndIncrementVersion:requestSync:completion:]
  -[HMDHomeManager _handleAssistantTeamIdentifierChanged:]
  -[HMDHomeManager _handleAssistantSyncDataRequest:]
  -[HMDHomeManager setCompanionReachable:]
  -[HMDHomeManager accessoryBrowserDidFindNewAccessory]
  -[HMDHomeManager saveAccessoryCache:forIdentifier:]
  -[HMDHomeManager getAccessoryCacheForIdentifer:]
  -[HMDHomeManager removeAccessoryCacheForIdentifier:]
  -[HMDHomeManager pairedSyncDidStart:]
  -[HMDHomeManager _nextTransactionIdentifier]
  -[HMDHomeManager _sendFragmentedMessage:messageIndex:messageIdentity:userID:destination:completionHandler:]
  -[HMDHomeManager pendingFragmentationStream]
  -[HMDHomeManager _handleMetadataSync:]
  -[HMDHomeManager _handleHomeDataSync:]
  -[HMDHomeManager sendFragmentedMessageForData:objectUUID:withMessageName:toUser:destination:completionHandler:]
  -[HMDHomeManager handleDataFragmentedSync:]
  -[HMDHomeManager _fragmentationStream:didCloseWithError:]
  -[HMDHomeManager _fragmentationStream:didReceiveData:transactionIdentifier:error:]
  -[HMDHomeManager _handlePairingIdentityRequest:]
  -[HMDHomeManager _saveToPersistentStore:reason:]
  -[HMDHomeManager pairedSync]
  -[HMDHomeManager setRecordingResidentElector:]
  -[HMDHomeManager _loadMessageDispatcher:accessoryBrowser:messageFilterChain:homeData:localDataDecryptionFailed:identityRegistry:accountRegistry:reloadData:]
  -[HMDHomeManager cloudHomeSettingsUpdated:]
  -[HMDHomeManager __handleUpdatedCurrentDevice:]
  -[HMDHomeManager __handleRefreshedServerBagContents:]
  -[HMDHomeManager periodicCounterLoggingTimer]
  -[HMDHomeManager _migrateUniqueIdentifierPrefsIfNeeded]
  -[HMDHomeManager _associateAccessories:withHomes:]
  -[HMDHomeManager _auditKeychainEntries]
  -[HMDHomeManager _updateAccessoriesConfigured]
  -[HMDHomeManager __registerIncomingInvitations:]
  -[HMDHomeManager _updateGenerationCounterWithReason:source:]
  -[HMDHomeManager cloudDataSource]
  -[HMDHomeManager _registerForLogging]
  -[HMDHomeManager _configureHomes:]
  -[HMDHomeManager migrateModelObjectsToCloud:schemaVersion:]
  -[HMDHomeManager _updateHomeKitInUsePreferences]
  -[HMDHomeManager accessoryBrowserInternal]
  -[HMDHomeManager _monitorReachability]
  -[HMDHomeManager _checkForAccountChanged]
  -[HMDHomeManager _fetchDataFromCloud]
  -[HMDHomeManager handleAccountSettingsUpdate:]
  -[HMDHomeManager __handleAddedXPCConnection:]
  -[HMDHomeManager __handleRemovedXPCConnection:]
  -[HMDHomeManager _saveWithReason:information:postSyncNotification:]
  -[HMDHomeManager _handleContactStoreChanged]
  -[HMDHomeManager _saveWithReason:information:saveOptions:]
  -[HMDHomeManager evaluateToPushMetadataWhenHomeKitInUse]
  -[HMDHomeManager setMemoryMonitorLogEventTimer:]
  -[HMDHomeManager memoryMonitorLogEventTimer]
  -[HMDHomeManager setPeriodicCounterLoggingTimer:]
  -[HMDHomeManager setDuetSubscriber:]
  -[HMDHomeManager _generateAndCacheHomeConfigurationLogEvent]
  -[HMDHomeManager _reloadHomeDataFromLocalStore:]
  -[HMDHomeManager homeDataLoadedFromArchive]
  -[HMDHomeManager _eraseLocalHomeData]
  -[HMDHomeManager _checkForRemotePeers]
  -[HMDHomeManager setForceFetchHomeManagerZone:]
  -[HMDHomeManager _updateResidentEnabledOnThisDevice:forceNotify:message:]
  -[HMDHomeManager __handleWatchConnected:]
  -[HMDHomeManager __handleWatchDisconnected:]
  -[HMDHomeManager _checkAndAddWatchDevicesWithResend:]
  -[HMDHomeManager __handleCompanionUpdated:]
  -[HMDHomeManager _checkAndInformCompanionDevice]
  -[HMDHomeManager cloudkitAccountStatusDetermined]
  -[HMDHomeManager cloudOperationRetryCount]
  -[HMDHomeManager setCloudOperationRetryCount:]
  -[HMDHomeManager _setAccountAvailabilityChanged]
  -[HMDHomeManager _accountAvailabilityChanged:]
  -[HMDHomeManager _handleAccountAvailabilityChanged:]
  -[HMDHomeManager _eraseLocalHomeConfiguration]
  -[HMDHomeManager __addActiveConnection:]
  -[HMDHomeManager __removeActiveConnection:]
  -[HMDHomeManager __handleXPCConnectionStateChange:]
  -[HMDHomeManager browseAssertion]
  -[HMDHomeManager setBrowseAssertion:]
  -[HMDHomeManager uuidsOfRemovedHomes]
  -[HMDHomeManager unprocessedOperationModelIdentifiers]
  -[HMDHomeManager setHomeDatabaseSize:]
  -[HMDHomeManager powerManager]
  -[HMDHomeManager setHomeDataLoadedFromArchive:]
  -[HMDHomeManager homeDatabaseSize]
  -[HMDHomeManager _saveWithRequest:]
  -[HMDHomeManager setUploadHomeDataToCloud:]
  -[HMDHomeManager setUploadMetadataToCloud:]
  -[HMDHomeManager _pushChangesToCloud:withDelay:]
  -[HMDHomeManager _uploadHomeToCloud:withDelay:]
  -[HMDHomeManager _uploadHomeManagerToCloudWithDelay:]
  -[HMDHomeManager _updateUserPushCachedForUser:device:]
  -[HMDHomeManager userPushCacheMap]
  -[HMDHomeManager sharedHomesPushDelayTimer]
  -[HMDHomeManager _scheduleSendHomeDataToAllWatches]
  -[HMDHomeManager pendingDataSyncAcks]
  -[HMDHomeManager _pushChangesToUsers:forHome:]
  -[HMDHomeManager _pushUserRemovedForHome:]
  -[HMDHomeManager _userPushCachedGetDeviceForUser:]
  -[HMDHomeManager _pushChangesForHome:toRemoteDevicesOnSameAccount:addedUser:]
  -[HMDHomeManager _pushChangesForHome:toRegularUsersOfHome:adminUsersOfHome:]
  -[HMDHomeManager _prepareDataForDevicesOnSameAccountForHome:remoteGateway:isAtLeastV4:]
  -[HMDHomeManager checkAndPushMetadataToUser:destination:userInfo:]
  -[HMDHomeManager _addPendingDataSyncAcksForUser:forHome:]
  -[HMDHomeManager _removePendingDataSyncAcksForUser:forHome:]
  -[HMDHomeManager _checkForRemotePeersAndRegisterForRemoteNotifications:]
  -[HMDHomeManager associatedWatchPeers]
  -[HMDHomeManager _getListOfUsersToPushMetadataChangesTo]
  -[HMDHomeManager generatePayloadFromHome:forAdmin:user:supportedFeatures:]
  -[HMDHomeManager _compressHomeData:]
  -[HMDHomeManager setBackOffOperationInProgress:]
  -[HMDHomeManager lastAnswerForShouldCloudSyncData]
  -[HMDHomeManager setLastAnswerForShouldCloudSyncData:]
  -[HMDHomeManager uploadMetadataToCloud]
  -[HMDHomeManager _pushMetadataChangesToUsers]
  -[HMDHomeManager _schedulePushChangesToAllUsersOfAllHomes]
  -[HMDHomeManager networkConnectionAvailable]
  -[HMDHomeManager accountStatusFailedDueToNetworkFailure]
  -[HMDHomeManager _uploadHomeConfigToCloud:withDelay:]
  -[HMDHomeManager hasiCloudAndControllerKey]
  -[HMDHomeManager _runUploadHomeConfigToCloudForcePush:syncCompletion:]
  -[HMDHomeManager _runUploadHomeConfigToCloud:rowIDs:forcePush:syncCompletion:]
  -[HMDHomeManager _determineLegacyLocalChanges:]
  -[HMDHomeManager uploadHomeDataToCloud]
  -[HMDHomeManager backOffOperationInProgress]
  -[HMDHomeManager _resetCloudOperationRetryCounters]
  -[HMDHomeManager setUploadToCloudIsPending:]
  -[HMDHomeManager _updateHomeManagerModelChangesAsPushed:legacyPush:]
  -[HMDHomeManager needToCleanUpKeys]
  -[HMDHomeManager setNeedToCleanUpKeys:]
  -[HMDHomeManager _stopCloudOperationRetryTimer]
  -[HMDHomeManager setCloudOperationRetryTimer:]
  -[HMDHomeManager cloudOperationRetryTimer]
  -[HMDHomeManager _notifyClientsOfUpdatedStatus]
  -[HMDHomeManager setAccountStatusFailedDueToNetworkFailure:]
  -[HMDHomeManager setCloudkitAccountStatusDetermined:]
  -[HMDHomeManager _determineLocalChangesAndSchedulePush]
  -[HMDHomeManager _pushMetadataToCloud]
  -[HMDHomeManager _postCloudSyncNotificationWithSuccess:]
  -[HMDHomeManager _retryCloudOperationWithName:completionHandler:]
  -[HMDHomeManager debounceHomesUpdateTimer]
  -[HMDHomeManager _sendUserAdded:destination:toHome:]
  -[HMDHomeManager _sendUserRemoved:fromHome:pairingUsername:pushToCloud:completionHandler:]
  -[HMDHomeManager _uploadHomeManagerToCloudSyncCompletion:]
  -[HMDHomeManager _processRemoveHomeModels:processIndex:completion:]
  -[HMDHomeManager _removeCloudZone:updateHomeManager:]
  -[HMDHomeManager _loadHomeManagerTransactionsToPush:mustReplay:forLegacyPush:includeAllChanges:completion:]
  -[HMDHomeManager _fetchHomeManagerCloundConflict:withDelay:]
  -[HMDHomeManager _runFetchHomeManagerCloudConflict:syncCompletion:]
  -[HMDHomeManager forceFetchHomeManagerZone]
  -[HMDHomeManager _handleHomeManagerTransactionsFetched:stagedTransaction:mustReplay:cloudConflict:transactionError:syncCompletion:]
  -[HMDHomeManager _zonesFetched]
  -[HMDHomeManager _postMergeWatchPush]
  -[HMDHomeManager _updateHomeManagerModelChangesAsPushed:pushMask:completion:]
  -[HMDHomeManager _homeWithZoneID:]
  -[HMDHomeManager _runUploadHomeToCloud:syncCompletion:]
  -[HMDHomeManager _loadHomeManagerHomeModelChanges:mustReplay:legacyPush:home:completion:]
  -[HMDHomeManager _zoneInformationWithUUID:]
  -[HMDHomeManager _addCloudZone:ownerName:]
  -[HMDHomeManager addTransactionAfterPush:]
  -[HMDHomeManager _cleanChangesIfNoAddChangeObjectID:completion:]
  -[HMDHomeManager _pushZoneInfromationForHome:]
  -[HMDHomeManager _updateModelChangesAsPushed:home:pushMask:completion:]
  -[HMDHomeManager pendingHomesBeingRemoved]
  -[HMDHomeManager _uploadTransaction:home:completion:]
  -[HMDHomeManager _loadHomeModelChanges:mustReplay:legacyPush:home:completion:]
  -[HMDHomeManager _fetchHomeFromCloudZone:cloudConflict:withDelay:]
  -[HMDHomeManager _schedulePostFetch]
  -[HMDHomeManager _runFetchHomeFromCloudZone:cloudConflict:syncCompletion:]
  -[HMDHomeManager _handleTransactionsFetched:stagedTransaction:mustReplay:zoneID:cloudConflict:transactionError:syncCompletion:]
  -[HMDHomeManager _findHomeModelChange:]
  -[HMDHomeManager _findHomeOwnerModelChange:]
  -[HMDHomeManager _findHomeSharedUserModelChange:]
  -[HMDHomeManager _findHomeConfigurationModelChange:]
  -[HMDHomeManager _handleFetchObjectChange:home:isLegacyTransaction:completion:]
  -[HMDHomeManager _handleFetchModifyHome:isLegacyTransaction:completion:]
  -[HMDHomeManager checkConflictInHomeNamespaceWithName:options:namespaceUUID:]
  -[HMDHomeManager _checkNameConflict:withNamespaceUUIDs:]
  -[HMDHomeManager _checkActionSetNameConflict:withNamespaceUUIDs:]
  -[HMDHomeManager _updateIncomingInvitesPresent]
  -[HMDHomeManager _updateHomesConfigured]
  -[HMDHomeManager speakersAreConfigured]
  -[HMDHomeManager setSpeakersAreConfigured:]
  -[HMDHomeManager registerForMediaPlaybackStateChangeNotifications:]
  -[HMDHomeManager speakersAreConfiguredInOwnedHomes]
  -[HMDHomeManager setSpeakersAreConfiguredInOwnedHomes:]
  -[HMDHomeManager setMediaAccessoriesPresent:homePodsPresent:inOwnedHomes:]
  -[HMDHomeManager _accessoriesAreLocallyReachableOnTransientDevice:forHome:]
  -[HMDHomeManager _configureHomesImpl:]
  -[HMDHomeManager setNameValidator:]
  -[HMDHomeManager handleHomeLocationChanged:]
  -[HMDHomeManager watchPushDelayTimer]
  -[HMDHomeManager _sendHomeDataToWatch:completionHandler:]
  -[HMDHomeManager _checkAndAddWatchDevices:resend:requestFromWatch:]
  -[HMDHomeManager _postiCloudSigninState:]
  -[HMDHomeManager updateAccountAvailabilityChanged]
  -[HMDHomeManager _eraseLocalHomeConfigurationAndDeleteMetadata:completionQueue:completion:]
  -[HMDHomeManager _eraseLocalMetadata]
  -[HMDHomeManager _fetchHomeDataFromCloudWithCloudConflict:forceFetch:withDelay:accountCompletion:]
  -[HMDHomeManager _runFetchHomeDataFromCloudWithCloudConflict:forceFetch:accountCompletion:syncCompletion:]
  -[HMDHomeManager _transactionalizeAndApplyCloudHomeData:cachedHomeData:version:migrationOptions:dataWasMerged:syncCompletion:]
  -[HMDHomeManager _setDataMigrationOptions:]
  -[HMDHomeManager _requestHomeDataSync]
  -[HMDHomeManager _updateCloudDataSyncWithAccountState:completion:]
  -[HMDHomeManager _handleAccountStatusDeterminedWithError:homeDataRecordExists:metadataRecordExists:completion:]
  -[HMDHomeManager identifiersOfAccessories:]
  -[HMDHomeManager _preferLocalHomesOverCloudHomes:migrationOptions:]
  -[HMDHomeManager _deviceForIdentifier:]
  -[HMDHomeManager _transactionalizeAndApplyHomeData:cachedHomeData:syncCompletion:]
  -[HMDHomeManager _loadCloudTransactionForRemoteHome:localHome:cachedHome:version:cloudTransaction:stagedTransaction:mustReplayTransaction:]
  -[HMDHomeManager _postIncomingInvitationStateChangedNotification:newInvitationState:]
  -[HMDHomeManager uploadHomeManagerToCloudWithDelay:]
  -[HMDHomeManager _nominateCurrentHomeUUID]
  -[HMDHomeManager awdLogEventObserver]
  -[HMDHomeManager coreDuetLogEventObserver]
  -[HMDHomeManager handleContactStoreChanged:]
  -[HMDHomeManager __handleActiveAssertion:]
  -[HMDHomeManager _handleRequestFetchHomeConfiguration:]
  -[HMDHomeManager _handleRequestRemoveHome:]
  -[HMDHomeManager _handleRequestAddHome:]
  -[HMDHomeManager _handleRequestSetPrimaryHome:]
  -[HMDHomeManager _handleRequestIsUserUsingHomeKit:]
  -[HMDHomeManager _handleAccessHomeInvite:]
  -[HMDHomeManager _handleAddRemoteAccessRequest:]
  -[HMDHomeManager _handleDoYouSeeUnpairedAccessories:]
  -[HMDHomeManager _handleAreYouAtHome:]
  -[HMDHomeManager _handleEnableResidentForThisDeviceRequest:]
  -[HMDHomeManager _handleDismissBulletinRequest:]
  -[HMDHomeManager _handleDismissDialogRequest:]
  -[HMDHomeManager _handleAccessAllowedWhenLockedRequest:]
  -[HMDHomeManager _handleUserRemoved:]
  -[HMDHomeManager _handleResetHome:]
  -[HMDHomeManager _handleCompanionKeysSync:]
  -[HMDHomeManager _handleHomesConfigSync:]
  -[HMDHomeManager _handleCurrentHomeChanged:]
  -[HMDHomeManager _handleRequestForCompanionKeysSync:]
  -[HMDHomeManager _handleRetrieveVendorIdentifier:]
  -[HMDHomeManager _handleShouldDisplayiCloudSwitch:]
  -[HMDHomeManager _handleQueryiCloudSwitchState:]
  -[HMDHomeManager _handleUpdateiCloudSwitchState:]
  -[HMDHomeManager _handleQueryHomeNamespace:]
  -[HMDHomeManager _handleResetConfiguration:]
  -[HMDHomeManager _handleRemoteSessionTornDown:]
  -[HMDHomeManager _handleIdmsAccountUsernameModified:]
  -[HMDHomeManager _handleQueryMetadata:]
  -[HMDHomeManager _handleSetMetadata:]
  -[HMDHomeManager _handleQueryVersionInformation:]
  -[HMDHomeManager _handleDumpState:]
  -[HMDHomeManager _handleDeleteDuetEvent:]
  -[HMDHomeManager _handleRequestToUpdateHomeInvitationFromLocalUser:]
  -[HMDHomeManager _handleRequestToUpdateHomeInvitationFromInviter:]
  -[HMDHomeManager _handleEventIdentifierValidation:]
  -[HMDHomeManager _handleLogAppViewEvent:]
  -[HMDHomeManager _handleFetchAddAccessoryRequests:]
  -[HMDHomeManager _handleSysdiagnoseRequest:]
  -[HMDHomeManager _handleDeviceSetupSessionOpen:]
  -[HMDHomeManager _handleRetailModeConfigRequest:]
  -[HMDHomeManager _handleResolveAccount:]
  -[HMDHomeManager _handleRemoveAccount:]
  -[HMDHomeManager _handlePing:]
  -[HMDHomeManager _handleTestModeConfigRequest:]
  -[HMDHomeManager _handleRequestRuntimeStateUpdate:]
  -[HMDHomeManager _handleRequestMediaAccessoryControl:]
  -[HMDHomeManager _handleNetworkFirewallDumpCloudRecordsRequest:]
  -[HMDHomeManager _handleNetworkFirewallAddOverridesRequest:]
  -[HMDHomeManager _handleNetworkFirewallRemoveOverridesRequest:]
  -[HMDHomeManager _handleNetworkFirewallDumpLocalRulesRequest:]
  -[HMDHomeManager _handleNetworkFirewallDumpPairedMetadataRequest:]
  -[HMDHomeManager _handleNetworkFirewallRemoveLocalRulesRequest:]
  -[HMDHomeManager _handleNetworkFirewallFetchCloudChangesRequest:]
  -[HMDHomeManager _handleGetTLVForJSON:]
  -[HMDHomeManager _handleConnectivityInfoRequest:]
  -[HMDHomeManager controllerKeyPairGenerated:]
  -[HMDHomeManager forcePushLocalDataToCloud:]
  -[HMDHomeManager dataSyncInProgressUpdatedNotification:]
  -[HMDHomeManager _handleSaveRequest:]
  -[HMDHomeManager handleVendorInfoUpdated:]
  -[HMDHomeManager auditDuplicatePreviouslyAddedAccessory:]
  -[HMDHomeManager __handleInitialFetch:]
  -[HMDHomeManager __handleAppleAccountUpdated:]
  -[HMDHomeManager __accountRegistryAddedAccount:]
  -[HMDHomeManager __accountRegistryRemovedAccount:]
  -[HMDHomeManager __accountAddedDevice:]
  -[HMDHomeManager __accountRemovedDevice:]
  -[HMDHomeManager __handleProcessMemoryPressureEvent:]
  -[HMDHomeManager _getHomeConfigurationLogEvent]
  -[HMDHomeManager _submitAccessoryNetworkProtectionReportsToAWD:]
  -[HMDHomeManager _startCloudOperationRetryWithTimeout:completionHandler:]
  -[HMDHomeManager _startTimerToResetCloudOperationRetryCounter]
  -[HMDHomeManager _statusPayloadForMessage:]
  -[HMDHomeManager cacheUseAllowed]
  -[HMDHomeManager setCacheUseAllowed:]
  -[HMDHomeManager _addAccessoryRequestsForMessage:]
  -[HMDHomeManager proximityCardLauncher]
  -[HMDHomeManager _runtimeState]
  -[HMDHomeManager _getRuntimeStateUpdateForHomeManager:includeMediaAccessoryState:options:includeResidentDeviceState:completion:]
  -[HMDHomeManager _notifyCurrentHomeUpdated]
  -[HMDHomeManager _notifyCurrentHomeUpdated:isLocalUpdate:]
  -[HMDHomeManager _sendCurrentHomeToWatch:]
  -[HMDHomeManager notifyPrimaryHomeUpdated]
  -[HMDHomeManager _changePrimaryHome:]
  -[HMDHomeManager _removeAllUsersOfHome:]
  -[HMDHomeManager _saveWithReason:postSyncNotification:]
  -[HMDHomeManager _removeHome:withMessage:saveToStore:notifyUsers:shouldRemovePairings:]
  -[HMDHomeManager _updatePrimaryHome:message:]
  -[HMDHomeManager setAccessoryFinderTimer:]
  -[HMDHomeManager accessoryFinderTimer]
  -[HMDHomeManager _startAccessoryFinderTimerExpired]
  -[HMDHomeManager _processAnyPendingRequestsForRemoteAccess:]
  -[HMDHomeManager pendingResponsesForAccessoryFinder]
  -[HMDHomeManager _findAnyAccessoryWithIdentities:inAccessoryServers:]
  -[HMDHomeManager _cancelAccessoryFinderTimer]
  -[HMDHomeManager _startAccessoryFinderTimer]
  -[HMDHomeManager _startScanningForAccessories:]
  -[HMDHomeManager _acceptHomeInviteFromAccount:message:trackInvite:]
  -[HMDHomeManager _trackIncomingInvitationFromAccount:message:invitationState:error:]
  -[HMDHomeManager _removeFromUnassociatedPeers:home:]
  -[HMDHomeManager _removeFromAssociatedPeers:home:]
  -[HMDHomeManager _shouldHandleHomeDataSync:remoteHome:sourceDeviceVersion:]
  -[HMDHomeManager _processSharedHomeModel:message:]
  -[HMDHomeManager processTransactionsFromHomeDataSync:accessories:version:completion:]
  -[HMDHomeManager _findHomeModel:]
  -[HMDHomeManager _prepareHomesVersionDict]
  -[HMDHomeManager _setUniqueDeviceIdSalt:]
  -[HMDHomeManager _eraseLocalHomeConfigurationAfterSignout]
  -[HMDHomeManager _auditDuplicatePreviouslyAddedAccessory:]
  -[HMDHomeManager _eraseConfiguration:completionHandler:]
  -[HMDHomeManager _updateAccountAvailabilityChanged:]
  -[HMDHomeManager associatedRemotePeers]
  -[HMDHomeManager unassociatedRemotePeers]
  -[HMDHomeManager pendingRemoteSessions]
  -[HMDHomeManager pendingResidentSetupSessions]
  -[HMDHomeManager _eraseLocalHomeConfigurationCommon]
  -[HMDHomeManager _notifyXPCClientsOfHomeConfigurationChange]
  -[HMDHomeManager watchSyncStateMap]
  -[HMDHomeManager _addSyncOperation:]
  -[HMDHomeManager _pairedSyncDidStart]
  -[HMDHomeManager _sendKeysToWatch:completionHandler:]
  -[HMDHomeManager _addWatch:completionHandler:]
  -[HMDHomeManager fullSyncedWatchPeers]
  -[HMDHomeManager _addWatch:toAssociatedList:]
  -[HMDHomeManager _pushChangesToWatch:paylod:group:completionHandler:]
  -[HMDHomeManager companionManager]
  -[HMDHomeManager _teardownRemoteAccessForHomeThroughCompanion:]
  -[HMDHomeManager _remotePeers]
  -[HMDHomeManager identifiersOfAccessoriesForHome:]
  -[HMDHomeManager _findRemotePeerContainingAccessories:forHome:]
  -[HMDHomeManager _teardownRemoteAccessForHome:]
  -[HMDHomeManager _electRemoteAccessPeerForHome:]
  -[HMDHomeManager _electRemoteAccessPeerForHome:retryCount:]
  -[HMDHomeManager _electCompanionForRemoteAccess:]
  -[HMDHomeManager _electRemoteAccessDeviceForHome:retryCount:]
  -[HMDHomeManager handleMetadataDictionary:message:]
  -[HMDHomeManager pushMetadataToAllWatches]
  -[HMDHomeManager _notifyMetadata:limitToSPIClients:message:invokeResponseHandler:]
  -[HMDHomeManager saveWithReason:information:saveOptions:]
  -[HMDHomeManager _homeFromEventIdentifier:]
  -[HMDHomeManager _getRequestedState:activity:]
  -[HMDHomeManager _dumpHomeManagerData]
  -[HMDHomeManager _dumpToLog:withState:]
  -[HMDHomeManager _logState:key:indent:]
  -[HMDHomeManager dumpCategory]
  -[HMDHomeManager __startupFirewallRuleManagerForMessage:completion:]
  -[HMDHomeManager dismissBulletinOnAllMyTransientDevicesWithContext:]
  -[HMDHomeManager _sendUpdateRequestToAdminForInvitation:homeUUID:invitationState:authStatus:]
  -[HMDHomeManager _teardownRemoteAccessForHomeCommon:isCompanion:]
  -[HMDHomeManager _addCurrentResidentDeviceToHomes:]
  -[HMDHomeManager _removeCurrentResidentDeviceFromHomes:]
  -[HMDHomeManager pingDevice:secure:completionHandler:]
  -[HMDHomeManager __pingDestination:secure:completionHandler:]
  -[HMDHomeManager deviceSetupSessions]
  -[HMDHomeManager statusForMessage:]
  -[HMDHomeManager _updateAccessAllowedWhenLocked:message:]
  -[HMDHomeManager stopLocalTransport]
  -[HMDHomeManager notifyClientsResidentCapable:]
  -[HMDHomeManager remoteAccessHealthMonitorTimer]
  -[HMDHomeManager _remoteAccessHealthMonitorTimerDidFire:]
  -[HMDHomeManager _sendHomeDataToAllWatches]
  -[HMDHomeManager _pushChangesToAllUsersOfAllHomes]
  -[HMDHomeManager _monitorMemoryUsage]
  -[HMDHomeManager _submitHAPMetricsCounters]
  -[HMDHomeManager _logEventAggregationAnalysisLogEvent]
  -[HMDHomeManager _logCachedHomeKitConfigurationDataLogEvent]
  -[HMDHomeManager _submitCounters]
  -[HMDHomeManager processHomeModelAdd:message:]
  -[HMDHomeManager processSharedHomeModelUpdate:message:]
  -[HMDHomeManager processHomeManagerModelUpdate:message:]
  -[HMDHomeManager _processUserManagementOperationModel:message:]
  -[HMDHomeManager processCloudZoneModelAdd:message:]
  -[HMDHomeManager processAppDataModelUpdate:message:]
  -[HMDHomeManager processMetadataModel:message:]
  -[HMDHomeManager processHomeModelRemoved:message:]
  -[HMDHomeManager processSharedHomeModelRemoved:message:]
  -[HMDHomeManager _processRemoveUserManagementOperationModel:message:]
  -[HMDHomeManager processCloudZoneModelRemoved:message:]
  -[HMDHomeManager processAppDataModelRemove:message:]
  -[HMDHomeManager fragmentationStream:didCloseWithError:]
  -[HMDHomeManager fragmentationStream:didReceiveData:transactionIdentifier:error:]
  -[HMDHomeManager updateUserPushCachedForUser:device:]
  -[HMDHomeManager _pushChangesToUsersThatHaveNotAcknowledged]
  -[HMDHomeManager _filterAccessories:withIdentifiers:]
  -[HMDHomeManager _filterAccessories:inHome:]
  -[HMDHomeManager _suspendXPCWithCompletionHanlder:]
  -[HMDHomeManager _resumeXPCWithCompletionHanlder:]
  -[HMDHomeManager _setPrimaryHome:idsDataSync:]
  -[HMDHomeManager _detectGuestHomesAddedAndRemovedWithCloudHomes:]
  -[HMDHomeManager dismissDialogOnAllMyTransientDevicesWithContext:selection:]
  -[HMDHomeManager _updateHomesAboutNetworkConnectivity:]
  -[HMDHomeManager _electRemoteGatewayForHomesAfterReachabilityChanges]
  -[HMDHomeManager pushMetadataToCloud]
  -[HMDHomeManager remoteGatewayCapableDevices]
  -[HMDHomeManager setGatherer:]
  -[HMDHomeManager setDebounceHomesUpdateTimer:]
  -[HMDHomeManager periodicMobileCatalogUpdateTimer]
  -[HMDHomeManager setPeriodicMobileCatalogUpdateTimer:]
  -[HMDHomeManager setPendingHomesBeingRemoved:]
  -[HMDHomeManager setUnprocessedOperationModelIdentifiers:]
  -[HMDHomeManager setAccessoryBrowserInternal:]
  -[HMDHomeManager setProximityCardLauncher:]
  -[HMDHomeManager duetSubscriber]
  -[HMDHomeManager setAwdLogEventObserver:]
  -[HMDHomeManager setCoreDuetLogEventObserver:]
  -[HMDHomeManager hapMetricsLastSubmissionDate]
  -[HMDHomeManager setHapMetricsLastSubmissionDate:]
  -[HMDHomeManager eventAggregationAnalysisLogDate]
  -[HMDHomeManager setEventAggregationAnalysisLogDate:]
  -[HMDHomeManager homeConfigurationLogDate]
  -[HMDHomeManager setHomeConfigurationLogDate:]
  -[HMDHomeManager homeManagerObjectChangeHandler]
  -[HMDHomeManager setUuidsOfRemovedHomes:]
  -[HMDHomeManager sysdiagnoseQueue]
  -[HMDHomeManager setSysdiagnoseQueue:]
  -[HMDHomeManager setUnassociatedRemotePeers:]
  -[HMDHomeManager setAssociatedRemotePeers:]
  -[HMDHomeManager setFullSyncedWatchPeers:]
  -[HMDHomeManager setAssociatedWatchPeers:]
  -[HMDHomeManager setWatchSyncStateMap:]
  -[HMDHomeManager generationCounterToken]
  -[HMDHomeManager setGenerationCounterToken:]
  -[HMDHomeManager setPendingResponsesForAccessoryFinder:]
  -[HMDHomeManager setPowerManager:]
  -[HMDHomeManager setNetworkConnectionAvailable:]
  -[HMDHomeManager setPendingDataSyncAcks:]
  -[HMDHomeManager setPendingRemoteSessions:]
  -[HMDHomeManager setPendingResidentSetupSessions:]
  -[HMDHomeManager setMsgFilterChain:]
  -[HMDHomeManager dialogCancelationContexts]
  -[HMDHomeManager setDialogCancelationContexts:]
  -[HMDHomeManager setIdentityRegistry:]
  -[HMDHomeManager uploadToCloudIsPending]
  -[HMDHomeManager locationHandler]
  -[HMDHomeManager setLocationHandler:]
  -[HMDHomeManager fmfHandler]
  -[HMDHomeManager setFmfHandler:]
  -[HMDHomeManager ignoreFirstTimeReachabilityChanged]
  -[HMDHomeManager setIgnoreFirstTimeReachabilityChanged:]
  -[HMDHomeManager clientConnectionQueue]
  -[HMDHomeManager setClientConnectionQueue:]
  -[HMDHomeManager accountStatusIsAuthenticated]
  -[HMDHomeManager setAccountStatusIsAuthenticated:]
  -[HMDHomeManager setRemoteAccessHealthMonitorTimer:]
  -[HMDHomeManager nextRequestTransactionIdentifier]
  -[HMDHomeManager setPendingFragmentationStream:]
  -[HMDHomeManager setTimeInformationMonitor:]
  -[HMDHomeManager setResidentMesh:]
  -[HMDHomeManager setSiriSyncNotificationReasons:]


HMDAccessoryReachabilityElectionParameter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *identifier
 @property  BOOL reachable

  // instance methods
  -[HMDAccessoryReachabilityElectionParameter initWithDictionaryRepresentation:]
  -[HMDAccessoryReachabilityElectionParameter init]
  -[HMDAccessoryReachabilityElectionParameter .cxx_destruct]
  -[HMDAccessoryReachabilityElectionParameter identifier]
  -[HMDAccessoryReachabilityElectionParameter isReachable]
  -[HMDAccessoryReachabilityElectionParameter isEqual:]
  -[HMDAccessoryReachabilityElectionParameter dictionaryRepresentation]


HMDResidentDeviceElectionParameters : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDResidentDevice *resident
 @property  HMFBoolean *enabled
 @property  long long location
 @property  NSArray *accessories

  // instance methods
  -[HMDResidentDeviceElectionParameters init]
  -[HMDResidentDeviceElectionParameters compare:]
  -[HMDResidentDeviceElectionParameters .cxx_destruct]
  -[HMDResidentDeviceElectionParameters accessories]
  -[HMDResidentDeviceElectionParameters isEnabled]
  -[HMDResidentDeviceElectionParameters isEqual:]
  -[HMDResidentDeviceElectionParameters location]
  -[HMDResidentDeviceElectionParameters resident]
  -[HMDResidentDeviceElectionParameters initWithResident:serializedPayload:]
  -[HMDResidentDeviceElectionParameters initWithResident:enabled:location:accessories:]
  -[HMDResidentDeviceElectionParameters serializedPayload]


HMDBulletinBoardCameraNotificationAssociation : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDCameraProfile *cameraProfile
 @property  NSMutableSet *notificationGeneratingServicesWithCamera

  // instance methods
  -[HMDBulletinBoardCameraNotificationAssociation .cxx_destruct]
  -[HMDBulletinBoardCameraNotificationAssociation cameraProfile]
  -[HMDBulletinBoardCameraNotificationAssociation initWithCameraProfile:]
  -[HMDBulletinBoardCameraNotificationAssociation notificationGeneratingServicesWithCamera]


HMDCameraClipCreateClipOperation : HMDCameraClipAddSignificantEventOperation
 @property  double targetFragmentDuration
 @property  NSDate *clipStartDate
 @property  HMCameraClipEncryptionManager *encryptionManager

  // class methods
  +[HMDCameraClipCreateClipOperation logCategory]

  // instance methods
  -[HMDCameraClipCreateClipOperation attributeDescriptions]
  -[HMDCameraClipCreateClipOperation .cxx_destruct]
  -[HMDCameraClipCreateClipOperation clipStartDate]
  -[HMDCameraClipCreateClipOperation targetFragmentDuration]
  -[HMDCameraClipCreateClipOperation modelsToUpdate]
  -[HMDCameraClipCreateClipOperation encryptionManager]
  -[HMDCameraClipCreateClipOperation initWithClipModelID:localZone:significantEvent:homePresenceByPairingIdentity:targetFragmentDuration:clipStartDate:encryptionManager:]
  -[HMDCameraClipCreateClipOperation initWithClipModelID:localZone:significantEvent:homePresenceByPairingIdentity:targetFragmentDuration:clipStartDate:encryptionManager:dataSource:]


HMDCameraSessionID : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying>
 @property  NSString *sessionID
 @property  NSString *descriptionString
 @property  NSString *cameraSessionAppID
 @property  HMDDevice *remoteDevice
 @property  BOOL spiClient
 @property  NSMutableDictionary *milestones
 @property  NSString *deviceSectionName
 @property  NSMutableDictionary *deviceMilestones

  // class methods
  +[HMDCameraSessionID millisecondsSince1970]
  +[HMDCameraSessionID applicationIdentiferForMessage:]

  // instance methods
  -[HMDCameraSessionID copyWithZone:]
  -[HMDCameraSessionID sessionID]
  -[HMDCameraSessionID .cxx_destruct]
  -[HMDCameraSessionID isEqual:]
  -[HMDCameraSessionID remoteDevice]
  -[HMDCameraSessionID milestones]
  -[HMDCameraSessionID descriptionString]
  -[HMDCameraSessionID setParameterFor:value:]
  -[HMDCameraSessionID addParameterFor:value:]
  -[HMDCameraSessionID markMilestoneFor:]
  -[HMDCameraSessionID cameraSessionAppID]
  -[HMDCameraSessionID markMilestoneForPath:]
  -[HMDCameraSessionID initWithSessionID:remoteDevice:cameraSessionAppID:descriptionString:spiClient:]
  -[HMDCameraSessionID isSPIClient]
  -[HMDCameraSessionID deviceSectionName]
  -[HMDCameraSessionID _prepareDeviceMilestones]
  -[HMDCameraSessionID deviceMilestones]
  -[HMDCameraSessionID setParameterForPath:value:]


HMDHMBLogEvent : HMDLogEvent
 @property  int containerType
 @property  int zoneType

  // instance methods
  -[HMDHMBLogEvent containerType]
  -[HMDHMBLogEvent zoneType]
  -[HMDHMBLogEvent initWithEventType:cloudZoneID:]


AWDHomeKitCameraSettings : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasIsRecordingEnabled
 @property  BOOL isRecordingEnabled
 @property  BOOL hasIsRecordingAudioEnabled
 @property  BOOL isRecordingAudioEnabled
 @property  BOOL hasRecordingEventTriggers
 @property  unsigned int recordingEventTriggers
 @property  BOOL hasIsSmartBulletinBoardNotificationEnabled
 @property  BOOL isSmartBulletinBoardNotificationEnabled
 @property  BOOL hasIsInclusionZone
 @property  BOOL isInclusionZone
 @property  BOOL hasIsReachabilityNotificationEnabled
 @property  BOOL isReachabilityNotificationEnabled
 @property  BOOL hasIsRecordingCapable
 @property  BOOL isRecordingCapable
 @property  BOOL hasNumActivityZonesBinString
 @property  NSString *numActivityZonesBinString
 @property  NSMutableArray *numPointsInActivityZonesBinStrings

  // class methods
  +[AWDHomeKitCameraSettings numPointsInActivityZonesBinStringsType]

  // instance methods
  -[AWDHomeKitCameraSettings copyWithZone:]
  -[AWDHomeKitCameraSettings .cxx_destruct]
  -[AWDHomeKitCameraSettings isSmartBulletinBoardNotificationEnabled]
  -[AWDHomeKitCameraSettings readFrom:]
  -[AWDHomeKitCameraSettings writeTo:]
  -[AWDHomeKitCameraSettings isEqual:]
  -[AWDHomeKitCameraSettings copyTo:]
  -[AWDHomeKitCameraSettings dictionaryRepresentation]
  -[AWDHomeKitCameraSettings recordingEventTriggers]
  -[AWDHomeKitCameraSettings isRecordingAudioEnabled]
  -[AWDHomeKitCameraSettings mergeFrom:]
  -[AWDHomeKitCameraSettings setRecordingEventTriggers:]
  -[AWDHomeKitCameraSettings isRecordingEnabled]
  -[AWDHomeKitCameraSettings isRecordingCapable]
  -[AWDHomeKitCameraSettings setIsRecordingCapable:]
  -[AWDHomeKitCameraSettings setIsRecordingEnabled:]
  -[AWDHomeKitCameraSettings setIsRecordingAudioEnabled:]
  -[AWDHomeKitCameraSettings setIsSmartBulletinBoardNotificationEnabled:]
  -[AWDHomeKitCameraSettings setNumActivityZonesBinString:]
  -[AWDHomeKitCameraSettings setIsInclusionZone:]
  -[AWDHomeKitCameraSettings setIsReachabilityNotificationEnabled:]
  -[AWDHomeKitCameraSettings numPointsInActivityZonesBinStrings]
  -[AWDHomeKitCameraSettings addNumPointsInActivityZonesBinStrings:]
  -[AWDHomeKitCameraSettings numPointsInActivityZonesBinStringsCount]
  -[AWDHomeKitCameraSettings clearNumPointsInActivityZonesBinStrings]
  -[AWDHomeKitCameraSettings numPointsInActivityZonesBinStringsAtIndex:]
  -[AWDHomeKitCameraSettings setHasIsRecordingEnabled:]
  -[AWDHomeKitCameraSettings hasIsRecordingEnabled]
  -[AWDHomeKitCameraSettings setHasIsRecordingAudioEnabled:]
  -[AWDHomeKitCameraSettings hasIsRecordingAudioEnabled]
  -[AWDHomeKitCameraSettings setHasRecordingEventTriggers:]
  -[AWDHomeKitCameraSettings hasRecordingEventTriggers]
  -[AWDHomeKitCameraSettings setHasIsSmartBulletinBoardNotificationEnabled:]
  -[AWDHomeKitCameraSettings hasIsSmartBulletinBoardNotificationEnabled]
  -[AWDHomeKitCameraSettings setHasIsInclusionZone:]
  -[AWDHomeKitCameraSettings hasIsInclusionZone]
  -[AWDHomeKitCameraSettings setHasIsReachabilityNotificationEnabled:]
  -[AWDHomeKitCameraSettings hasIsReachabilityNotificationEnabled]
  -[AWDHomeKitCameraSettings setHasIsRecordingCapable:]
  -[AWDHomeKitCameraSettings hasIsRecordingCapable]
  -[AWDHomeKitCameraSettings hasNumActivityZonesBinString]
  -[AWDHomeKitCameraSettings isInclusionZone]
  -[AWDHomeKitCameraSettings isReachabilityNotificationEnabled]
  -[AWDHomeKitCameraSettings numActivityZonesBinString]
  -[AWDHomeKitCameraSettings setNumPointsInActivityZonesBinStrings:]


HMDCloudAccount : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSOperationQueue *queue

  // instance methods
  -[HMDCloudAccount .cxx_destruct]
  -[HMDCloudAccount clientQueue]
  -[HMDCloudAccount queue]
  -[HMDCloudAccount initWithClientQueue:]
  -[HMDCloudAccount addAccountOperation:]


HMDCloudAccountOperation : NSOperation /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  @? operationBlock
 @property  NSUUID *identifier

  // instance methods
  -[HMDCloudAccountOperation main]
  -[HMDCloudAccountOperation .cxx_destruct]
  -[HMDCloudAccountOperation identifier]
  -[HMDCloudAccountOperation clientQueue]
  -[HMDCloudAccountOperation operationBlock]
  -[HMDCloudAccountOperation setOperationBlock:]
  -[HMDCloudAccountOperation initWithBlock:clientQueue:]


AWDHomeKitEventTriggerUserConfirmationReceiverSession : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasSessionID
 @property  NSString *sessionID
 @property  BOOL hasResultErrorCode
 @property  int resultErrorCode
 @property  BOOL hasUserResponseDelay
 @property  unsigned long userResponseDelay

  // instance methods
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession hasSessionID]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession copyWithZone:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession setSessionID:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession sessionID]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession .cxx_destruct]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession timestamp]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession setTimestamp:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession setHasTimestamp:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession readFrom:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession writeTo:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession isEqual:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession copyTo:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession dictionaryRepresentation]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession mergeFrom:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession hasTimestamp]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession setResultErrorCode:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession setHasResultErrorCode:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession hasResultErrorCode]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession resultErrorCode]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession userResponseDelay]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession setUserResponseDelay:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession setHasUserResponseDelay:]
  -[AWDHomeKitEventTriggerUserConfirmationReceiverSession hasUserResponseDelay]


HMDCameraSnapshotIDSRelayReceiver : HMDCameraSnapshotIDSRelay <IDSServiceDelegate, IDSSessionDelegate, HMFLogging>
 @property  IDSSession *idsSession
 @property  <HMDCameraSnapshotIDSRelayReceiverDelegate> *delegate
 @property  HMDCameraIDSSessionInviterDeviceVerifier *sessionInviterDeviceVerifier
 @property  NSUUID *machOUUID
 @property  NSMutableData *relayData
 @property  unsigned long bytesToReceive
 @property  unsigned long bytesSoFar
 @property  NSObject<OS_dispatch_source> *socketSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotIDSRelayReceiver logCategory]

  // instance methods
  -[HMDCameraSnapshotIDSRelayReceiver logIdentifier]
  -[HMDCameraSnapshotIDSRelayReceiver service:account:inviteReceivedForSession:fromID:withContext:]
  -[HMDCameraSnapshotIDSRelayReceiver dealloc]
  -[HMDCameraSnapshotIDSRelayReceiver .cxx_destruct]
  -[HMDCameraSnapshotIDSRelayReceiver sessionStarted:]
  -[HMDCameraSnapshotIDSRelayReceiver sessionEnded:withReason:error:]
  -[HMDCameraSnapshotIDSRelayReceiver delegate]
  -[HMDCameraSnapshotIDSRelayReceiver idsSession]
  -[HMDCameraSnapshotIDSRelayReceiver setIdsSession:]
  -[HMDCameraSnapshotIDSRelayReceiver initWithSessionID:logIdentifier:machOUUID:workQueue:sessionInviterDeviceVerifier:delegate:]
  -[HMDCameraSnapshotIDSRelayReceiver sessionInviterDeviceVerifier]
  -[HMDCameraSnapshotIDSRelayReceiver setSocketSource:]
  -[HMDCameraSnapshotIDSRelayReceiver socketSource]
  -[HMDCameraSnapshotIDSRelayReceiver _handleDataFromSocket:]
  -[HMDCameraSnapshotIDSRelayReceiver _didReceiveData:error:]
  -[HMDCameraSnapshotIDSRelayReceiver bytesToReceive]
  -[HMDCameraSnapshotIDSRelayReceiver setBytesToReceive:]
  -[HMDCameraSnapshotIDSRelayReceiver relayData]
  -[HMDCameraSnapshotIDSRelayReceiver bytesSoFar]
  -[HMDCameraSnapshotIDSRelayReceiver setBytesSoFar:]
  -[HMDCameraSnapshotIDSRelayReceiver machOUUID]
  -[HMDCameraSnapshotIDSRelayReceiver _startDataReceive]
  -[HMDCameraSnapshotIDSRelayReceiver setRelayData:]


HMDCloudTransaction : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  unsigned long transactionType
 @property  HMDCloudZoneChange *cloudZoneChange
 @property  NSArray *objectChanges
 @property  HMDCloudChange *homeDataChange
 @property  NSUUID *identifier
 @property  HMDCloudZone *cloudZone
 @property  HMFOSTransaction *osTransaction
 @property  CKRecordID *privateZoneRootRecordID
 @property  NSArray *allTransactionStoreRowIDs
 @property  NSArray *processedTransactionStoreRowIDs
 @property  BOOL decryptionFailed
 @property  BOOL encryptionFailed
 @property  BOOL controllerIdentifierChanged
 @property  BOOL needConflictResolution
 @property  BOOL iCloudSwitchStateEnabled
 @property  BOOL legacyTransaction
 @property  BOOL metadataTransaction
 @property  BOOL homeManagerTransaction
 @property  BOOL homeTransaction
 @property  CKServerChangeToken *updatedServerChangeToken
 @property  BOOL temporaryCache
 @property  BOOL zoneHasNoLocalData
 @property  BOOL createZone
 @property  BOOL zoneWasCreated
 @property  BOOL deleteZone
 @property  BOOL zoneWasDeleted
 @property  NSArray *recordsToSave
 @property  NSArray *recordsToDelete
 @property  BOOL hasValidChanges
 @property  BOOL doRecordsExistInCache

  // class methods
  +[HMDCloudTransaction shortDescription]

  // instance methods
  -[HMDCloudTransaction transactionType]
  -[HMDCloudTransaction init]
  -[HMDCloudTransaction .cxx_destruct]
  -[HMDCloudTransaction identifier]
  -[HMDCloudTransaction shortDescription]
  -[HMDCloudTransaction setTransactionType:]
  -[HMDCloudTransaction recordsToSave]
  -[HMDCloudTransaction cloudZone]
  -[HMDCloudTransaction setCloudZone:]
  -[HMDCloudTransaction allTransactionStoreRowIDs]
  -[HMDCloudTransaction hasValidChanges]
  -[HMDCloudTransaction decryptionFailed]
  -[HMDCloudTransaction changeWithObjectID:]
  -[HMDCloudTransaction cachedCloudRecordWithObjectID:]
  -[HMDCloudTransaction doRecordsExistInCache]
  -[HMDCloudTransaction changeWithRecordName:]
  -[HMDCloudTransaction isTemporaryCache]
  -[HMDCloudTransaction encryptionFailed]
  -[HMDCloudTransaction processedTransactionStoreRowIDs]
  -[HMDCloudTransaction cachedCloudRecordWithObjectID:completionHandler:]
  -[HMDCloudTransaction addChangeWithObjectChange:]
  -[HMDCloudTransaction addChangeWithRecord:]
  -[HMDCloudTransaction addChangeWithDeletedRecordID:]
  -[HMDCloudTransaction loadCloudRecordsAndDetermineDeletesFromCache:]
  -[HMDCloudTransaction moreChangesToProcess]
  -[HMDCloudTransaction setAllChangedAsProcessed]
  -[HMDCloudTransaction removeChangeWithObjectID:]
  -[HMDCloudTransaction fetchBatchToUpload:]
  -[HMDCloudTransaction setSaveAsProcessedWithRecord:]
  -[HMDCloudTransaction resetRecordWithRecordID:]
  -[HMDCloudTransaction setDeleteAsProcessedWithRecordID:]
  -[HMDCloudTransaction objectChanges]
  -[HMDCloudTransaction controllerIdentifierChanged]
  -[HMDCloudTransaction privateZoneRootRecordID]
  -[HMDCloudTransaction zoneHasNoLocalData]
  -[HMDCloudTransaction isHomeManagerTransaction]
  -[HMDCloudTransaction isHomeTransaction]
  -[HMDCloudTransaction setZoneWasDeleted:]
  -[HMDCloudTransaction setUpdatedServerChangeToken:]
  -[HMDCloudTransaction setZoneWasCreated:]
  -[HMDCloudTransaction shouldDeleteZone]
  -[HMDCloudTransaction shouldCreateZone]
  -[HMDCloudTransaction setNeedConflictResolution:]
  -[HMDCloudTransaction wasZoneCreated]
  -[HMDCloudTransaction needConflictResolution]
  -[HMDCloudTransaction initWithType:temporaryCache:]
  -[HMDCloudTransaction updateCloudZone:]
  -[HMDCloudTransaction setICloudSwitchStateEnabled:]
  -[HMDCloudTransaction iCloudSwitchStateEnabled]
  -[HMDCloudTransaction doesRecordExistInCacheWithObjectID:]
  -[HMDCloudTransaction doesRecordExistWithObjectID:]
  -[HMDCloudTransaction setOsTransaction:]
  -[HMDCloudTransaction setDeleteZone:]
  -[HMDCloudTransaction updateCloudCache]
  -[HMDCloudTransaction replayTransaction:stagedTransaction:]
  -[HMDCloudTransaction isLegacyTransaction]
  -[HMDCloudTransaction setCreateZone:]
  -[HMDCloudTransaction wasZoneDeleted]
  -[HMDCloudTransaction initWithType:temporaryCache:noLocalData:]
  -[HMDCloudTransaction loadObjectChanges]
  -[HMDCloudTransaction cloudZoneChange]
  -[HMDCloudTransaction setCloudZoneChange:]
  -[HMDCloudTransaction updatedServerChangeToken]
  -[HMDCloudTransaction osTransaction]
  -[HMDCloudTransaction isMetadataTransaction]
  -[HMDCloudTransaction recordsToDelete]
  -[HMDCloudTransaction homeDataChange]
  -[HMDCloudTransaction setHomeDataChange:]


HMDHomeNaturalLightingContextUpdater : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDHome *home
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDLightProfileDataSource> *dataSource
 @property  long long curveMinimumBrightness
 @property  long long curveMaximumBrightness
 @property  NSString *logIdentifier
 @property  NSNotificationCenter *notificationCenter
 @property  HMDNaturalLightingCurve *curve
 @property  BOOL demoModeEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHomeNaturalLightingContextUpdater logCategory]

  // instance methods
  -[HMDHomeNaturalLightingContextUpdater notificationCenter]
  -[HMDHomeNaturalLightingContextUpdater curve]
  -[HMDHomeNaturalLightingContextUpdater configure]
  -[HMDHomeNaturalLightingContextUpdater setCurve:]
  -[HMDHomeNaturalLightingContextUpdater logIdentifier]
  -[HMDHomeNaturalLightingContextUpdater .cxx_destruct]
  -[HMDHomeNaturalLightingContextUpdater workQueue]
  -[HMDHomeNaturalLightingContextUpdater home]
  -[HMDHomeNaturalLightingContextUpdater dataSource]
  -[HMDHomeNaturalLightingContextUpdater isDemoModeEnabled]
  -[HMDHomeNaturalLightingContextUpdater initWithHome:demoModeEnabled:]
  -[HMDHomeNaturalLightingContextUpdater handleResidentDeviceUpdated:]
  -[HMDHomeNaturalLightingContextUpdater initWithHome:workQueue:demoModeEnabled:logIdentifier:notificationCenter:dataSource:]
  -[HMDHomeNaturalLightingContextUpdater initalizeCurve]
  -[HMDHomeNaturalLightingContextUpdater updateNaturalLightingContext]
  -[HMDHomeNaturalLightingContextUpdater colorTemperatureTransitionPointsForMaximumBrightnessWithEncodeNaturalLightingCurve:]
  -[HMDHomeNaturalLightingContextUpdater colorTemperatureTransitionPointsForMinimumBrightnessWithEncodeNaturalLightingCurve:]
  -[HMDHomeNaturalLightingContextUpdater timeOfDayForMinimumBrightnessTransitionPoint:maximumBrighnessTransitionPoint:]
  -[HMDHomeNaturalLightingContextUpdater colorTemperatureForTransitionPoint:]
  -[HMDHomeNaturalLightingContextUpdater curveMinimumBrightness]
  -[HMDHomeNaturalLightingContextUpdater curveMaximumBrightness]
  -[HMDHomeNaturalLightingContextUpdater setCurveMaximumBrightness:]
  -[HMDHomeNaturalLightingContextUpdater areEncodedBrightnessLevelTransitionPointsValid:]
  -[HMDHomeNaturalLightingContextUpdater setCurveMinimumBrightness:]


HMDAddAccessoryRequestInformation : NSObject /usr/lib/libc++.1.dylib <NSSecureCoding>
 @property  NSString *bundleID
 @property  NSString *accessoryName
 @property  HMAccessoryCategory *accessoryCategory
 @property  HMDAccessory *accessory
 @property  HMSetupAccessoryDescription *accessoryDescription
 @property  NSUUID *identifier
 @property  HMFTimer *cleanupTimer

  // class methods
  +[HMDAddAccessoryRequestInformation supportsSecureCoding]

  // instance methods
  -[HMDAddAccessoryRequestInformation .cxx_destruct]
  -[HMDAddAccessoryRequestInformation accessoryName]
  -[HMDAddAccessoryRequestInformation encodeWithCoder:]
  -[HMDAddAccessoryRequestInformation accessoryDescription]
  -[HMDAddAccessoryRequestInformation identifier]
  -[HMDAddAccessoryRequestInformation accessory]
  -[HMDAddAccessoryRequestInformation accessoryCategory]
  -[HMDAddAccessoryRequestInformation bundleID]
  -[HMDAddAccessoryRequestInformation initWithCoder:]
  -[HMDAddAccessoryRequestInformation initWithAccessoryName:category:bundleID:accessoryDescription:]
  -[HMDAddAccessoryRequestInformation cancelCleanupTimer]
  -[HMDAddAccessoryRequestInformation storeIdentifierFromUnassociatedAccessory:setupCode:]
  -[HMDAddAccessoryRequestInformation startCleanupTimerForDelegate:delegateQueue:]
  -[HMDAddAccessoryRequestInformation cleanupTimer]


HMDCameraStreamSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDCameraStreamSessionID *sessionID
 @property  HMDStreamingManager *streamingManager
 @property  HMDStreamingCapabilities *streamingCapabilities
 @property  HMDCameraProtocolParameters *protocolParameters
 @property  HMDCameraVideoTierParameters *videoTierParameters
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraStreamSession logCategory]

  // instance methods
  -[HMDCameraStreamSession sessionID]
  -[HMDCameraStreamSession logIdentifier]
  -[HMDCameraStreamSession .cxx_destruct]
  -[HMDCameraStreamSession streamingCapabilities]
  -[HMDCameraStreamSession streamingManager]
  -[HMDCameraStreamSession setProtocolParameters:]
  -[HMDCameraStreamSession videoTierParameters]
  -[HMDCameraStreamSession negotiatedParameters]
  -[HMDCameraStreamSession protocolParameters]
  -[HMDCameraStreamSession setStreamingManager:]
  -[HMDCameraStreamSession initWithSessionID:streamingTierType:remoteCapabilities:streamPreference:]
  -[HMDCameraStreamSession setVideoTierParameters:]


AWDHomeKitMultiUserSettings : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasIsOwner
 @property  BOOL isOwner
 @property  NSMutableArray *homeKitMultiUserSettingsValuesByKeyPaths

  // class methods
  +[AWDHomeKitMultiUserSettings homeKitMultiUserSettingsValuesByKeyPathType]

  // instance methods
  -[AWDHomeKitMultiUserSettings copyWithZone:]
  -[AWDHomeKitMultiUserSettings isOwner]
  -[AWDHomeKitMultiUserSettings .cxx_destruct]
  -[AWDHomeKitMultiUserSettings setIsOwner:]
  -[AWDHomeKitMultiUserSettings readFrom:]
  -[AWDHomeKitMultiUserSettings writeTo:]
  -[AWDHomeKitMultiUserSettings isEqual:]
  -[AWDHomeKitMultiUserSettings copyTo:]
  -[AWDHomeKitMultiUserSettings dictionaryRepresentation]
  -[AWDHomeKitMultiUserSettings mergeFrom:]
  -[AWDHomeKitMultiUserSettings setHasIsOwner:]
  -[AWDHomeKitMultiUserSettings hasIsOwner]
  -[AWDHomeKitMultiUserSettings setHomeKitMultiUserSettingsValuesByKeyPaths:]
  -[AWDHomeKitMultiUserSettings homeKitMultiUserSettingsValuesByKeyPaths]
  -[AWDHomeKitMultiUserSettings addHomeKitMultiUserSettingsValuesByKeyPath:]
  -[AWDHomeKitMultiUserSettings homeKitMultiUserSettingsValuesByKeyPathsCount]
  -[AWDHomeKitMultiUserSettings clearHomeKitMultiUserSettingsValuesByKeyPaths]
  -[AWDHomeKitMultiUserSettings homeKitMultiUserSettingsValuesByKeyPathAtIndex:]


HMDNotificationRegistration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  NSMutableSet *registeredNotifications
 @property  <HMFLogging> *registerer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNotificationRegistration logCategory]

  // instance methods
  -[HMDNotificationRegistration registeredNotifications]
  -[HMDNotificationRegistration logIdentifier]
  -[HMDNotificationRegistration .cxx_destruct]
  -[HMDNotificationRegistration initWithRegisterer:]
  -[HMDNotificationRegistration addObserver:name:object:]
  -[HMDNotificationRegistration registerer]


HMDCameraClipFeedbackUploader : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // instance methods
  -[HMDCameraClipFeedbackUploader uploadFeedbackWithCameraProfileUUID:clipModel:completionHandler:]


HMDCameraClipFeedbackManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMBLocalZone *localZone
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMDCameraClipFeedbackUploader *feedbackUploader
 @property  NSUUID *cameraProfileUUID
 @property  HMDHome *home
 @property  NSNotificationCenter *notificationCenter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDCameraClipFeedbackManager logCategory]

  // instance methods
  -[HMDCameraClipFeedbackManager messageTargetUUID]
  -[HMDCameraClipFeedbackManager notificationCenter]
  -[HMDCameraClipFeedbackManager messageReceiveQueue]
  -[HMDCameraClipFeedbackManager logIdentifier]
  -[HMDCameraClipFeedbackManager .cxx_destruct]
  -[HMDCameraClipFeedbackManager workQueue]
  -[HMDCameraClipFeedbackManager localZone]
  -[HMDCameraClipFeedbackManager home]
  -[HMDCameraClipFeedbackManager messageDispatcher]
  -[HMDCameraClipFeedbackManager cameraProfileUUID]
  -[HMDCameraClipFeedbackManager isCurrentDeviceConfirmedPrimaryResident]
  -[HMDCameraClipFeedbackManager handlePrimaryResidentUpdateNotification:]
  -[HMDCameraClipFeedbackManager initWithLocalZone:home:messageDispatcher:cameraProfileUUID:messageTargetUUID:feedbackUploader:workQueue:]
  -[HMDCameraClipFeedbackManager configureWithHome:deviceIsResidentCapable:]
  -[HMDCameraClipFeedbackManager _handleSubmitClipsMessage:]
  -[HMDCameraClipFeedbackManager _handleFindAndUploadSubmittedClipsMessage:]
  -[HMDCameraClipFeedbackManager findAndUploadSubmittedClips]
  -[HMDCameraClipFeedbackManager _uploadNextClipFromQueryResult:]
  -[HMDCameraClipFeedbackManager feedbackUploader]
  -[HMDCameraClipFeedbackManager _notifyPrimaryResidentThatClipsWereSubmitted]


HMDMediaPlaybackAction : HMDAction <NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  HMDHome *home
 @property  NSSet *mediaProfiles
 @property  NSNumber *volume
 @property  MPPlaybackArchive *playbackArchive
 @property  long long state
 @property  NSSet *profileUUIDs
 @property  HMDMediaPlaybackActionAsCharacteristicWriteRequests *convertedCharacteristicWriteRequests
 @property  BOOL encodePlaybackArchiveForExecution
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMediaPlaybackAction supportsSecureCoding]
  +[HMDMediaPlaybackAction logCategory]
  +[HMDMediaPlaybackAction actionWithDictionaryRepresentation:home:]
  +[HMDMediaPlaybackAction isPlaybackActionValidWithProfiles:state:volume:]

  // instance methods
  -[HMDMediaPlaybackAction validate]
  -[HMDMediaPlaybackAction volume]
  -[HMDMediaPlaybackAction setVolume:]
  -[HMDMediaPlaybackAction setState:]
  -[HMDMediaPlaybackAction .cxx_destruct]
  -[HMDMediaPlaybackAction mediaProfiles]
  -[HMDMediaPlaybackAction setMediaProfiles:]
  -[HMDMediaPlaybackAction setPlaybackArchive:]
  -[HMDMediaPlaybackAction setHome:]
  -[HMDMediaPlaybackAction encodeWithCoder:]
  -[HMDMediaPlaybackAction type]
  -[HMDMediaPlaybackAction modelClass]
  -[HMDMediaPlaybackAction home]
  -[HMDMediaPlaybackAction playbackArchive]
  -[HMDMediaPlaybackAction dictionaryRepresentation]
  -[HMDMediaPlaybackAction state]
  -[HMDMediaPlaybackAction initWithCoder:]
  -[HMDMediaPlaybackAction associatedAccessories]
  -[HMDMediaPlaybackAction isAssociatedWithAccessory:]
  -[HMDMediaPlaybackAction modelObjectWithChangeType:version:]
  -[HMDMediaPlaybackAction transactionObjectUpdated:newValues:message:]
  -[HMDMediaPlaybackAction transactionObjectRemoved:message:]
  -[HMDMediaPlaybackAction stateDump]
  -[HMDMediaPlaybackAction executeWithSource:completionHandler:]
  -[HMDMediaPlaybackAction initWithModelObject:parent:error:]
  -[HMDMediaPlaybackAction configureWithHome:]
  -[HMDMediaPlaybackAction modelObjectWithUpdatedMediaProfiles:]
  -[HMDMediaPlaybackAction convertedCharacteristicWriteRequests]
  -[HMDMediaPlaybackAction encodePlaybackArchiveForExecution]
  -[HMDMediaPlaybackAction initWithUUID:mediaProfiles:playbackState:volume:playbackArchive:actionSet:]
  -[HMDMediaPlaybackAction profileUUIDs]
  -[HMDMediaPlaybackAction _processPlaybackActionModelUpdated:message:]
  -[HMDMediaPlaybackAction setProfileUUIDs:]
  -[HMDMediaPlaybackAction setEncodePlaybackArchiveForExecution:]


HMDMediaPlaybackActionModel : HMDActionModel
 @property  NSSet *profiles
 @property  NSSet *accessories
 @property  NSSet *services
 @property  NSNumber *volume
 @property  MPPlaybackArchive *encodedPlaybackArchive
 @property  NSNumber *state

  // class methods
  +[HMDMediaPlaybackActionModel properties]
  +[HMDMediaPlaybackActionModel schemaHashRoot]

  // instance methods
  -[HMDMediaPlaybackActionModel validate]
  -[HMDMediaPlaybackActionModel dependentUUIDs]
  -[HMDMediaPlaybackActionModel loadModelWithActionInformation:]
  -[HMDMediaPlaybackActionModel validForStorage]


HMDMessageHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDMessageHandlerQueuedMessageDelegate, HMFLogging, HMFMessageReceiver>
 @property  HMDMessageHandlerMetricsDispatcher *metricsDispatcher
 @property  <HMDMessageHandlerDataSource> *dataSource
 @property  NSArray *ownerPrivateRemoteMessages
 @property  NSArray *adminPrivateRemoteMessages
 @property  NSArray *internalMessages
 @property  NSArray *notifications
 @property  NSDictionary *notificationsToObject
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSNotificationCenter *notificationCenter
 @property  BOOL hasQueuedIncomingMessages
 @property  BOOL hasQueuedOutgoingMessages
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDMessageHandler logCategory]

  // instance methods
  -[HMDMessageHandler messageTargetUUID]
  -[HMDMessageHandler registerForNotifications]
  -[HMDMessageHandler notificationCenter]
  -[HMDMessageHandler logIdentifier]
  -[HMDMessageHandler setDataSource:]
  -[HMDMessageHandler attributeDescriptions]
  -[HMDMessageHandler privateDescription]
  -[HMDMessageHandler .cxx_destruct]
  -[HMDMessageHandler dataSource]
  -[HMDMessageHandler messageDispatcher]
  -[HMDMessageHandler notifications]
  -[HMDMessageHandler configureWithHome:]
  -[HMDMessageHandler routeMessage:]
  -[HMDMessageHandler didTriggerMessageHandlerQueuedMessage:]
  -[HMDMessageHandler relayMessage:]
  -[HMDMessageHandler initWithMessageTargetUUID:messageDispatcher:notificationCenter:ownerPrivateRemoteMessages:adminPrivateRemoteMessages:internalMessages:notifications:notificationsToObject:]
  -[HMDMessageHandler hasQueuedOutgoingMessages]
  -[HMDMessageHandler sendQueuedOutgoingMessages]
  -[HMDMessageHandler hasQueuedOutgoingMessagesForDevice:]
  -[HMDMessageHandler sendQueuedOutgoingMessagesForDevice:]
  -[HMDMessageHandler initWithMessageTargetUUID:messageDispatcher:notificationCenter:ownerPrivateRemoteMessages:adminPrivateRemoteMessages:internalMessages:notifications:notificationsToObject:metricsDispatcher:]
  -[HMDMessageHandler registerForMessagesWithHome:]
  -[HMDMessageHandler ownerPrivateRemoteMessages]
  -[HMDMessageHandler adminPrivateRemoteMessages]
  -[HMDMessageHandler internalMessages]
  -[HMDMessageHandler registerForSPIRemoteMessages:home:userPrivilege:internalBuildOnly:]
  -[HMDMessageHandler selectorForName:]
  -[HMDMessageHandler notificationsToObject]
  -[HMDMessageHandler queuedIncomingMessages]
  -[HMDMessageHandler routeMessage:shouldQueue:]
  -[HMDMessageHandler queueIncomingMessage:]
  -[HMDMessageHandler isReadyForIncomingMessage:error:]
  -[HMDMessageHandler dequeueIncomingMessage:]
  -[HMDMessageHandler shouldRelayIncomingMessage:error:]
  -[HMDMessageHandler relayMessage:shouldQueue:]
  -[HMDMessageHandler metricsDispatcher]
  -[HMDMessageHandler queueOutgoingMessage:]
  -[HMDMessageHandler deviceForMessage:]
  -[HMDMessageHandler associateDevice:withOutgoingMessage:]
  -[HMDMessageHandler reachableForMessage:]
  -[HMDMessageHandler dequeueOutgoingMessage:]
  -[HMDMessageHandler queuedOutgoingMessages]
  -[HMDMessageHandler sendQueuedOutgoingMessages:]
  -[HMDMessageHandler queuedOutgoingMessagesForDevice:]
  -[HMDMessageHandler dequeueQueuedIncomingMessages]
  -[HMDMessageHandler queuedIncomingMessageWithIdentifier:]
  -[HMDMessageHandler didTriggerQueuedIncomingMessage:]
  -[HMDMessageHandler didTriggerQueuedOutgoingMessage:]
  -[HMDMessageHandler hasQueuedIncomingMessages]
  -[HMDMessageHandler routeQueuedIncomingMessages]
  -[HMDMessageHandler triggerQueuedOutgoingMessagesTimeouts]
  -[HMDMessageHandler triggerQueuedIncomingMessagesTimeouts]


HMDXPCKeyedArchiver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSKeyedArchiver *archiver

  // instance methods
  -[HMDXPCKeyedArchiver _configure]
  -[HMDXPCKeyedArchiver archiver]
  -[HMDXPCKeyedArchiver finishEncoding]
  -[HMDXPCKeyedArchiver encodeObject:forKey:]
  -[HMDXPCKeyedArchiver dealloc]
  -[HMDXPCKeyedArchiver .cxx_destruct]
  -[HMDXPCKeyedArchiver encodedData]
  -[HMDXPCKeyedArchiver initForWritingWithMessage:]


HMDSoftwareUpdateManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFMessageReceiver>
 @property  NSUUID *identifier
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  NSHashTable *activeClients
 @property  HMDAppleMediaAccessory *accessory
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSoftwareUpdateManager isSupported]

  // instance methods
  -[HMDSoftwareUpdateManager messageTargetUUID]
  -[HMDSoftwareUpdateManager messageDestination]
  -[HMDSoftwareUpdateManager messageReceiveQueue]
  -[HMDSoftwareUpdateManager init]
  -[HMDSoftwareUpdateManager fetchAvailableUpdateWithCompletionHandler:]
  -[HMDSoftwareUpdateManager startUpdate:completionHandler:]
  -[HMDSoftwareUpdateManager .cxx_destruct]
  -[HMDSoftwareUpdateManager identifier]
  -[HMDSoftwareUpdateManager clientQueue]
  -[HMDSoftwareUpdateManager accessory]
  -[HMDSoftwareUpdateManager messageDispatcher]
  -[HMDSoftwareUpdateManager registerForMessages]
  -[HMDSoftwareUpdateManager setAccessory:]
  -[HMDSoftwareUpdateManager activeClients]
  -[HMDSoftwareUpdateManager updateAvailableUpdate:]
  -[HMDSoftwareUpdateManager _handleStart:]
  -[HMDSoftwareUpdateManager _handleStop:]
  -[HMDSoftwareUpdateManager _handleUpdateAvailableUpdate:]


HMDIDSProxyMessageTransport : HMDIDSMessageTransport
 @property  HMDWatchManager *watchManager
 @property  HMDCompanionManager *companionManager

  // class methods
  +[HMDIDSProxyMessageTransport restriction]
  +[HMDIDSProxyMessageTransport priorityForMessage:]
  +[HMDIDSProxyMessageTransport transportSupportsDevice:]

  // instance methods
  -[HMDIDSProxyMessageTransport isSecure]
  -[HMDIDSProxyMessageTransport service:account:incomingMessage:fromID:context:]
  -[HMDIDSProxyMessageTransport .cxx_destruct]
  -[HMDIDSProxyMessageTransport qualityOfService]
  -[HMDIDSProxyMessageTransport canSendMessage:]
  -[HMDIDSProxyMessageTransport deviceForHandle:]
  -[HMDIDSProxyMessageTransport watchManager]
  -[HMDIDSProxyMessageTransport initWithAccountRegistry:]
  -[HMDIDSProxyMessageTransport isDeviceConnected:]
  -[HMDIDSProxyMessageTransport remoteMessageFromMessage:]
  -[HMDIDSProxyMessageTransport deviceForSenderContext:]
  -[HMDIDSProxyMessageTransport awdTransportType]
  -[HMDIDSProxyMessageTransport sendMessage:fromHandle:destination:priority:timeout:options:error:]
  -[HMDIDSProxyMessageTransport companionManager]
  -[HMDIDSProxyMessageTransport watchDeviceForDevice:]


HMDSnapshotCacheRequestHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate, HMDSnapshotRequestHandlerProtocol>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logString
 @property  NSMutableDictionary *snapshotCacheMap
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSnapshotCacheRequestHandler logCategory]

  // instance methods
  -[HMDSnapshotCacheRequestHandler logString]
  -[HMDSnapshotCacheRequestHandler timerDidFire:]
  -[HMDSnapshotCacheRequestHandler logIdentifier]
  -[HMDSnapshotCacheRequestHandler .cxx_destruct]
  -[HMDSnapshotCacheRequestHandler workQueue]
  -[HMDSnapshotCacheRequestHandler requestSnapshot:streamingTierType:completionHandler:]
  -[HMDSnapshotCacheRequestHandler initWithWorkQueue:logID:]
  -[HMDSnapshotCacheRequestHandler addSnapshotFileToCache:]
  -[HMDSnapshotCacheRequestHandler removeSnapshotFileToCache:error:]
  -[HMDSnapshotCacheRequestHandler setSnapshotFileToCache:proactiveSessionID:]
  -[HMDSnapshotCacheRequestHandler snapshotCacheMap]


HMDVendorModelEntry : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *model
 @property  NSString *manufacturer
 @property  NSString *appBundleID
 @property  NSString *appStoreID
 @property  HMDAccessoryVersion *firmwareVersion
 @property  NSString *productData
 @property  NSArray *productDataAlternates

  // instance methods
  -[HMDVendorModelEntry firmwareVersion]
  -[HMDVendorModelEntry manufacturer]
  -[HMDVendorModelEntry attributeDescriptions]
  -[HMDVendorModelEntry compare:]
  -[HMDVendorModelEntry productData]
  -[HMDVendorModelEntry .cxx_destruct]
  -[HMDVendorModelEntry appBundleID]
  -[HMDVendorModelEntry isEqual:]
  -[HMDVendorModelEntry model]
  -[HMDVendorModelEntry appStoreID]
  -[HMDVendorModelEntry productDataAlternates]
  -[HMDVendorModelEntry initWithManufacturer:model:appBundleID:appStoreID:firmwareVersion:productData:productDataAlternates:]


HMDCameraSignificantEventServerDataSource : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // instance methods
  -[HMDCameraSignificantEventServerDataSource deviceWithDestination:]


HMDCameraSignificantEventServer : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFMessageReceiver, HMFLogging, HMDCameraSnapshotIDSRelayInitiatorDelegate, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSMutableDictionary *heroFrameDataByNotificationUUID
 @property  NSMutableDictionary *relayInitiatorBySessionUUID
 @property  NSMapTable *notificationUUIDByHeroFrameExpiryTimer
 @property  HMDCharacteristic *motionCharacteristic
 @property  HMDNotificationRegistry *notificationRegistry
 @property  HMDCameraSignificantEventServerDataSource *dataSource
 @property  NSString *logIdentifier
 @property  @? heroFrameExpiryTimerFactory
 @property  @? idsRelayInitiatorFactory
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSignificantEventServer logCategory]

  // instance methods
  -[HMDCameraSignificantEventServer messageTargetUUID]
  -[HMDCameraSignificantEventServer messageReceiveQueue]
  -[HMDCameraSignificantEventServer timerDidFire:]
  -[HMDCameraSignificantEventServer logIdentifier]
  -[HMDCameraSignificantEventServer .cxx_destruct]
  -[HMDCameraSignificantEventServer workQueue]
  -[HMDCameraSignificantEventServer dataSource]
  -[HMDCameraSignificantEventServer messageDispatcher]
  -[HMDCameraSignificantEventServer start]
  -[HMDCameraSignificantEventServer notificationRegistry]
  -[HMDCameraSignificantEventServer initWithWorkQueue:camera:]
  -[HMDCameraSignificantEventServer relayInitiatorIDSSessionDidStart:]
  -[HMDCameraSignificantEventServer relayInitiatorDidSendIDSInvitation:]
  -[HMDCameraSignificantEventServer relayInitiator:didEndIDSSessionWithError:]
  -[HMDCameraSignificantEventServer relayInitiatorDidSendDataSuccessfully:]
  -[HMDCameraSignificantEventServer relayInitiatorDidStartDataSend:]
  -[HMDCameraSignificantEventServer notifyListenersAboutEvent:]
  -[HMDCameraSignificantEventServer initWithWorkQueue:logIdentifier:messageDispatcher:messageTargetUUID:motionCharacteristic:notificationRegistry:dataSource:]
  -[HMDCameraSignificantEventServer handleCameraSignificantEventFetchHeroFrameMessage:]
  -[HMDCameraSignificantEventServer motionCharacteristic]
  -[HMDCameraSignificantEventServer _notifyDevice:aboutEvent:]
  -[HMDCameraSignificantEventServer heroFrameExpiryTimerFactory]
  -[HMDCameraSignificantEventServer heroFrameDataByNotificationUUID]
  -[HMDCameraSignificantEventServer notificationUUIDByHeroFrameExpiryTimer]
  -[HMDCameraSignificantEventServer relayInitiatorBySessionUUID]
  -[HMDCameraSignificantEventServer idsRelayInitiatorFactory]
  -[HMDCameraSignificantEventServer setHeroFrameExpiryTimerFactory:]
  -[HMDCameraSignificantEventServer setIdsRelayInitiatorFactory:]


HMDAssistantAccessControl : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFObject, NSSecureCoding, HMDBackingStoreObjectProtocol>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  unsigned long cachedHash
 @property  NSUUID *modelID
 @property  HMDAssistantAccessControlModel *model
 @property  unsigned long options
 @property  HMDUser *user
 @property  BOOL enabled
 @property  NSArray *accessories
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMDAssistantAccessControl supportsSecureCoding]
  +[HMDAssistantAccessControl logCategory]
  +[HMDAssistantAccessControl isAccessorySupported:]
  +[HMDAssistantAccessControl accessControlWithMessage:user:error:]
  +[HMDAssistantAccessControl modelIDNamespace]

  // instance methods
  -[HMDAssistantAccessControl user]
  -[HMDAssistantAccessControl setUser:]
  -[HMDAssistantAccessControl configure]
  -[HMDAssistantAccessControl logIdentifier]
  -[HMDAssistantAccessControl init]
  -[HMDAssistantAccessControl dealloc]
  -[HMDAssistantAccessControl .cxx_destruct]
  -[HMDAssistantAccessControl options]
  -[HMDAssistantAccessControl encodeWithCoder:]
  -[HMDAssistantAccessControl clientQueue]
  -[HMDAssistantAccessControl modelID]
  -[HMDAssistantAccessControl accessories]
  -[HMDAssistantAccessControl propertyDescription]
  -[HMDAssistantAccessControl setOptions:]
  -[HMDAssistantAccessControl isEnabled]
  -[HMDAssistantAccessControl isEqual:]
  -[HMDAssistantAccessControl setEnabled:]
  -[HMDAssistantAccessControl model]
  -[HMDAssistantAccessControl initWithUser:]
  -[HMDAssistantAccessControl cachedHash]
  -[HMDAssistantAccessControl removeAccessory:]
  -[HMDAssistantAccessControl setAccessories:]
  -[HMDAssistantAccessControl addAccessory:]
  -[HMDAssistantAccessControl initWithCoder:]
  -[HMDAssistantAccessControl transactionObjectUpdated:newValues:message:]
  -[HMDAssistantAccessControl transactionObjectRemoved:message:]
  -[HMDAssistantAccessControl transactionWithObjectChangeType:]
  -[HMDAssistantAccessControl handleRemovedAccessory:]
  -[HMDAssistantAccessControl initWithUser:model:]
  -[HMDAssistantAccessControl assistantAccessControlModelWithRemovedAccessories:]
  -[HMDAssistantAccessControl initWithUser:accessories:enabled:]
  -[HMDAssistantAccessControl removeAccessoriesAddedByOldController:]
  -[HMDAssistantAccessControl notifyClientOfUpdateWithMessage:]


HMDAssistantAccessControlModel : HMDBackingStoreModelObject
 @property  NSNumber *enabled
 @property  NSNumber *options
 @property  NSArray *accessoryModelIDs
 @property  NSString *changeTag

  // class methods
  +[HMDAssistantAccessControlModel properties]

  // instance methods
  -[HMDAssistantAccessControlModel dependentUUIDs]


HMDAccessorySetting : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMDAccessorySettingUpdateProtocol, HMDAccessorySettingProtocol, NSSecureCoding, HMDSettingBaseProtocol>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMDAccessorySettingModel *model
 @property  NSArray *models
 @property  unsigned long configurationVersion
 @property  BOOL isCollectionType
 @property  NSUUID *identifier
 @property  unsigned long properties
 @property  NSString *keyPath
 @property  BOOL reflected
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long type
 @property  NSString *name
 @property  NSArray *constraints
 @property  id value
 @property  NSUUID *parentIdentifier

  // class methods
  +[HMDAccessorySetting supportsSecureCoding]
  +[HMDAccessorySetting supportedConstraintClasses]
  +[HMDAccessorySetting logCategory]
  +[HMDAccessorySetting supportedValueClasses]
  +[HMDAccessorySetting decodedValue:error:]

  // instance methods
  -[HMDAccessorySetting copyWithZone:]
  -[HMDAccessorySetting setGroup:]
  -[HMDAccessorySetting logIdentifier]
  -[HMDAccessorySetting init]
  -[HMDAccessorySetting setReflected:]
  -[HMDAccessorySetting initWithIdentifier:name:]
  -[HMDAccessorySetting .cxx_destruct]
  -[HMDAccessorySetting name]
  -[HMDAccessorySetting configurationVersion]
  -[HMDAccessorySetting keyPath]
  -[HMDAccessorySetting encodeWithCoder:]
  -[HMDAccessorySetting isCollectionType]
  -[HMDAccessorySetting identifier]
  -[HMDAccessorySetting clientQueue]
  -[HMDAccessorySetting type]
  -[HMDAccessorySetting _setType:]
  -[HMDAccessorySetting parentIdentifier]
  -[HMDAccessorySetting description:indent:]
  -[HMDAccessorySetting messageDispatcher]
  -[HMDAccessorySetting setValue:]
  -[HMDAccessorySetting isEqual:]
  -[HMDAccessorySetting models]
  -[HMDAccessorySetting addConstraint:]
  -[HMDAccessorySetting value]
  -[HMDAccessorySetting isReflected]
  -[HMDAccessorySetting initWithModel:]
  -[HMDAccessorySetting properties]
  -[HMDAccessorySetting model]
  -[HMDAccessorySetting constraints]
  -[HMDAccessorySetting removeConstraint:]
  -[HMDAccessorySetting setConfigurationVersion:]
  -[HMDAccessorySetting isValid:]
  -[HMDAccessorySetting initWithCoder:]
  -[HMDAccessorySetting setConstraints:]
  -[HMDAccessorySetting setMessageDispatcher:]
  -[HMDAccessorySetting isConstraintMergeStrategyReflection]
  -[HMDAccessorySetting modelsForConstraintsUpdate:]
  -[HMDAccessorySetting copyReplica]
  -[HMDAccessorySetting copyIdentical]
  -[HMDAccessorySetting shouldEncodeForCoder:]
  -[HMDAccessorySetting compareConstraints:]
  -[HMDAccessorySetting shouldBlockSettingUpdateFromVersion:isMultiUserEnabled:]
  -[HMDAccessorySetting shouldTurnOffPersonalRequestsOnLanguageChangeTo:supportedMultiUserLanguageCodes:isMultiUserEnabled:]
  -[HMDAccessorySetting canAddConstraint:error:]
  -[HMDAccessorySetting canRemoveConstraint:]
  -[HMDAccessorySetting addConstraintsInMemory:]
  -[HMDAccessorySetting removeConstraintsInMemory:]
  -[HMDAccessorySetting constraintWithIdentifier:]
  -[HMDAccessorySetting inMemoryConstraintWithIdentifier:]
  -[HMDAccessorySetting counterpartConstraintFor:]
  -[HMDAccessorySetting mergeConstraintsFromOther:]
  -[HMDAccessorySetting _modelsForMergeStrategyConstraintsUpdate:]
  -[HMDAccessorySetting constraintsForCodingXPC]
  -[HMDAccessorySetting replicatedMissingConstraintsFrom:]
  -[HMDAccessorySetting _mergeConstraintsLocallyWithAdditions:removals:]


HMDAccessorySettingModel : HMDBackingStoreModelObject
 @property  NSNumber *type
 @property  NSNumber *properties
 @property  NSString *name
 @property  NSData *value
 @property  NSNumber *configurationVersion

  // class methods
  +[HMDAccessorySettingModel properties]
  +[HMDAccessorySettingModel schemaHashRoot]


HMDMediaBrowserDataSource : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDMediaBrowserDataSource>
 @property  NSString *currentAccessoryMediaRouteIdentifier
 @property  BOOL isAppleMediaAccessory
 @property  HMFSystemInfo *systemInfo

  // class methods
  +[HMDMediaBrowserDataSource shortDescription]

  // instance methods
  -[HMDMediaBrowserDataSource systemInfo]
  -[HMDMediaBrowserDataSource isAppleMediaAccessory]
  -[HMDMediaBrowserDataSource createUnassociatedAppleMediaAccessory:name:category:messageDispatcher:]
  -[HMDMediaBrowserDataSource currentAccessoryMediaRouteIdentifier]


HMDMediaBrowser : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  ^v discoverySession
 @property  ^v discoverySessionCallbackToken
 @property  HMFTimer *discoveryPollTimer
 @property  BOOL updateAvailableOutputDevices
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSMutableSet *identifiersOfAssociatedMediaAccessories
 @property  NSMutableSet *mediaEndpoints
 @property  <HMDMediaBrowserDataSource> *dataSource
 @property  <HMDMediaBrowserDelegate> *delegate
 @property  HMDHomeManager *homeManager
 @property  HMDUnassociatedMediaAccessory *currentAccessory
 @property  NSArray *accessoryAdvertisements
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMediaBrowser logCategory]
  +[HMDMediaBrowser shortDescription]
  +[HMDMediaBrowser advertisementsFromOutputDevices:]

  // instance methods
  -[HMDMediaBrowser timerDidFire:]
  -[HMDMediaBrowser dealloc]
  -[HMDMediaBrowser initWithHomeManager:]
  -[HMDMediaBrowser .cxx_destruct]
  -[HMDMediaBrowser clientQueue]
  -[HMDMediaBrowser setHomeManager:]
  -[HMDMediaBrowser currentAccessory]
  -[HMDMediaBrowser shortDescription]
  -[HMDMediaBrowser dataSource]
  -[HMDMediaBrowser messageDispatcher]
  -[HMDMediaBrowser setDelegate:]
  -[HMDMediaBrowser homeManager]
  -[HMDMediaBrowser delegate]
  -[HMDMediaBrowser discoverySession]
  -[HMDMediaBrowser accessoryAdvertisements]
  -[HMDMediaBrowser descriptionWithPointer:additionalDescription:]
  -[HMDMediaBrowser dumpDescription]
  -[HMDMediaBrowser updateSessionsForAccessories:]
  -[HMDMediaBrowser identifiersOfAssociatedMediaAccessories]
  -[HMDMediaBrowser registerAccessories:]
  -[HMDMediaBrowser stopDiscoveringAssociatedAccessories]
  -[HMDMediaBrowser startDiscoveringAssociatedAccessories]
  -[HMDMediaBrowser _startDiscoveringAccessories]
  -[HMDMediaBrowser unassociatedAccessoryFromAdvertisementData:]
  -[HMDMediaBrowser deregisterAccessories:]
  -[HMDMediaBrowser startDiscoveringUnassociatedAccessories]
  -[HMDMediaBrowser stopDiscoveringUnassociatedAccessories]
  -[HMDMediaBrowser initWithHomeManager:dataSource:]
  -[HMDMediaBrowser _notifyDelegateOfAddedAdvertisements:]
  -[HMDMediaBrowser _notifyDelegateOfRemovedAdvertisements:]
  -[HMDMediaBrowser checkForUpdatedAvailableOutputDevices:]
  -[HMDMediaBrowser _handleAvailableOutputDevices:]
  -[HMDMediaBrowser _removeAdvertisements:]
  -[HMDMediaBrowser _stopDiscoveringAccessories]
  -[HMDMediaBrowser _addAdvertisements:]
  -[HMDMediaBrowser setUpdateAvailableOutputDevices:]
  -[HMDMediaBrowser mediaEndpoints]
  -[HMDMediaBrowser _notifyDelegateOfUpdatedEndpoints:]
  -[HMDMediaBrowser _updateSessionsForAccessories:]
  -[HMDMediaBrowser _updateSessionForAccessory:]
  -[HMDMediaBrowser discoveryPollTimer]
  -[HMDMediaBrowser updateAvailableOutputDevices]
  -[HMDMediaBrowser discoverySessionCallbackToken]
  -[HMDMediaBrowser setDiscoverySessionCallbackToken:]
  -[HMDMediaBrowser setDiscoveryPollTimer:]
  -[HMDMediaBrowser setIdentifiersOfAssociatedMediaAccessories:]
  -[HMDMediaBrowser setMediaEndpoints:]


HMDTargetControllerErrorEvent : HMDLogEvent <HMDAWDLogEvent>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long errorType
 @property  HMDHAPAccessory *accessory

  // class methods
  +[HMDTargetControllerErrorEvent uuid]
  +[HMDTargetControllerErrorEvent errorEventWithErrorType:accessory:]

  // instance methods
  -[HMDTargetControllerErrorEvent .cxx_destruct]
  -[HMDTargetControllerErrorEvent accessory]
  -[HMDTargetControllerErrorEvent errorType]
  -[HMDTargetControllerErrorEvent AWDMessageType]
  -[HMDTargetControllerErrorEvent metricForAWD]
  -[HMDTargetControllerErrorEvent initWithErrorType:accessory:]


HMDRemoteLoginInitiatorAuthentication : HMDRemoteLoginAuthentication
 @property  <HMDRemoteLoginInitiatorAuthenticationDelegate> *delegate

  // class methods
  +[HMDRemoteLoginInitiatorAuthentication logCategory]

  // instance methods
  -[HMDRemoteLoginInitiatorAuthentication .cxx_destruct]
  -[HMDRemoteLoginInitiatorAuthentication loginType]
  -[HMDRemoteLoginInitiatorAuthentication delegate]
  -[HMDRemoteLoginInitiatorAuthentication initWithSessionID:remoteDevice:workQueue:remoteMessageSender:delegate:]
  -[HMDRemoteLoginInitiatorAuthentication _handleAuthenticationResponse:error:]
  -[HMDRemoteLoginInitiatorAuthentication authenticate]


HMDDurationEvent : HMDTimeEvent <NSSecureCoding, HMFDumpState, HMFLogging, HMDHomeMessageReceiver>
 @property  NSNumber *duration
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDDurationEvent supportsSecureCoding]
  +[HMDDurationEvent logCategory]

  // instance methods
  -[HMDDurationEvent .cxx_destruct]
  -[HMDDurationEvent encodeWithCoder:]
  -[HMDDurationEvent setDuration:]
  -[HMDDurationEvent initWithCoder:]
  -[HMDDurationEvent duration]
  -[HMDDurationEvent emptyModelObject]
  -[HMDDurationEvent _transactionObjectUpdated:newValues:message:]
  -[HMDDurationEvent _transactionObjectRemoved:message:]
  -[HMDDurationEvent modelObjectWithChangeType:]
  -[HMDDurationEvent createPayload]
  -[HMDDurationEvent initWithModel:home:]
  -[HMDDurationEvent _handleUpdateRequest:]
  -[HMDDurationEvent _nextTimerDate]
  -[HMDDurationEvent analyticsTriggerEventData]


HMDDurationEventModel : HMDEventModel
 @property  NSNumber *duration

  // class methods
  +[HMDDurationEventModel properties]
  +[HMDDurationEventModel eventModelWithDictionary:home:eventTriggerUUID:message:]


HMDDataStreamMessageCoder : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMDDataStreamMessageCoder readHeaderFromPartialData:frameType:payloadLength:]
  +[HMDDataStreamMessageCoder encryptEncryptedOPACKHeader:payload:sessionEncryption:error:]
  +[HMDDataStreamMessageCoder buildUnencryptedOPACKHeader:payload:error:]
  +[HMDDataStreamMessageCoder eventHeaderForProtocol:topic:]
  +[HMDDataStreamMessageCoder responseHeaderForRequestHeader:status:]
  +[HMDDataStreamMessageCoder requestHeaderForProtocol:topic:identifier:]
  +[HMDDataStreamMessageCoder decryptEncryptedOPACKFrame:sessionEncryption:receivedHeader:receivedPayload:error:]
  +[HMDDataStreamMessageCoder unpackUnencryptedOPACKFrame:receivedHeader:receivedPayload:error:]
  +[HMDDataStreamMessageCoder _decodeOPACKFrame:receivedHeader:receivedPayload:error:]
  +[HMDDataStreamMessageCoder _encodeOPACKHeader:payload:error:]
  +[HMDDataStreamMessageCoder _decryptEncryptedOPACKFrame:sessionEncryption:receivedHeader:receivedPayload:error:]
  +[HMDDataStreamMessageCoder _encryptEncryptedOPACKHeader:payload:sessionEncryption:error:]
  +[HMDDataStreamMessageCoder _unpackUnencryptedOPACKFrame:receivedHeader:receivedPayload:error:]
  +[HMDDataStreamMessageCoder _buildUnencryptedOPACKHeader:payload:error:]
  +[HMDDataStreamMessageCoder readHeaderFromPartialData:length:frameType:payloadLength:]


HMDAccessoryBrowserXPCMessageSendPolicyParameters : HMDXPCMessageSendPolicyParameters
 @property  BOOL browsing

  // instance methods
  -[HMDAccessoryBrowserXPCMessageSendPolicyParameters copyWithZone:]
  -[HMDAccessoryBrowserXPCMessageSendPolicyParameters signature]
  -[HMDAccessoryBrowserXPCMessageSendPolicyParameters setBrowsing:]
  -[HMDAccessoryBrowserXPCMessageSendPolicyParameters isBrowsing]
  -[HMDAccessoryBrowserXPCMessageSendPolicyParameters isEqual:]
  -[HMDAccessoryBrowserXPCMessageSendPolicyParameters initWithEntitlements:browsing:]


HMDRemoteLoginUtilities : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMDRemoteLoginUtilities serviceTypeForAccountService:]
  +[HMDRemoteLoginUtilities primaryITunesAccount]
  +[HMDRemoteLoginUtilities idmsAccountForAccountWithUsername:altDSID:DSID:]


HMDEventTriggerExecutionSession : HMDEventTriggerSession <HMFDumpState, HMFLogging, HMDEventDelegate, HMFTimerDelegate>
 @property  NSMapTable *writeRequests
 @property  NSMutableSet *mediaProfiles
 @property  NSMutableArray *triggerEvents
 @property  NSMutableArray *causingDevices
 @property  NSArray *endEvents
 @property  NSArray *monitorEvents
 @property  unsigned long executionState
 @property  HMDPredicateUtilities *predicateUtilities
 @property  NSArray *actionSets
 @property  NSPredicate *evaluationCondition
 @property  NSArray *recurrences
 @property  HMDEventTriggerUserConfirmationSession *userConfirmationSession
 @property  HMDTriggerConfirmationTimer *secureTriggerConfirmationTimer
 @property  HMFTimer *startCharacteristicsMonitorTimer
 @property  BOOL actionSetExecutionInProgress
 @property  BOOL restoreInProgress
 @property  BOOL needsUserConfirmation
 @property  BOOL executionCompleteCalled
 @property  HomeKitEventTriggerExecutionSessionLogEvent *analyticsEvent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDEventTriggerExecutionSession logCategory]

  // instance methods
  -[HMDEventTriggerExecutionSession timerDidFire:]
  -[HMDEventTriggerExecutionSession logIdentifier]
  -[HMDEventTriggerExecutionSession dealloc]
  -[HMDEventTriggerExecutionSession recurrences]
  -[HMDEventTriggerExecutionSession endEvents]
  -[HMDEventTriggerExecutionSession .cxx_destruct]
  -[HMDEventTriggerExecutionSession mediaProfiles]
  -[HMDEventTriggerExecutionSession setRestoreInProgress:]
  -[HMDEventTriggerExecutionSession analyticsEvent]
  -[HMDEventTriggerExecutionSession writeRequests]
  -[HMDEventTriggerExecutionSession restoreInProgress]
  -[HMDEventTriggerExecutionSession dumpState]
  -[HMDEventTriggerExecutionSession actionSets]
  -[HMDEventTriggerExecutionSession triggerEvents]
  -[HMDEventTriggerExecutionSession _restoreState]
  -[HMDEventTriggerExecutionSession didOccurEvent:causingDevice:]
  -[HMDEventTriggerExecutionSession cancelSessionIfWaitingForUserResponse]
  -[HMDEventTriggerExecutionSession evaluationCondition]
  -[HMDEventTriggerExecutionSession predicateUtilities]
  -[HMDEventTriggerExecutionSession _activateEvents:]
  -[HMDEventTriggerExecutionSession initWithEventTrigger:predicateUtilities:triggerEvent:causingDevice:workQueue:actionSets:evaluationCondition:recurrences:endEvents:msgDispatcher:]
  -[HMDEventTriggerExecutionSession evaluateFiringTrigger]
  -[HMDEventTriggerExecutionSession postponeRestoreIfWaitingForEndEvent]
  -[HMDEventTriggerExecutionSession needsUserConfirmation]
  -[HMDEventTriggerExecutionSession addEvent:causingDevice:]
  -[HMDEventTriggerExecutionSession userConfirmationSession]
  -[HMDEventTriggerExecutionSession executionState]
  -[HMDEventTriggerExecutionSession setExecutionState:]
  -[HMDEventTriggerExecutionSession userResponse:device:completionHandler:]
  -[HMDEventTriggerExecutionSession handleSessionPlaybackStateUpdatedNotification:]
  -[HMDEventTriggerExecutionSession _callExecutionComplete:callDelegate:]
  -[HMDEventTriggerExecutionSession causingDevices]
  -[HMDEventTriggerExecutionSession monitorEvents]
  -[HMDEventTriggerExecutionSession secureTriggerConfirmationTimer]
  -[HMDEventTriggerExecutionSession _evaluateFiringTrigger]
  -[HMDEventTriggerExecutionSession _callExecutionComplete:]
  -[HMDEventTriggerExecutionSession _executeTriggerAfterEvaluatingCondition:]
  -[HMDEventTriggerExecutionSession containsSecureActionSet]
  -[HMDEventTriggerExecutionSession setSecureTriggerConfirmationTimer:]
  -[HMDEventTriggerExecutionSession _directlyExecuteActionSetsWithCompletionHandler:]
  -[HMDEventTriggerExecutionSession _activateDurationEvents]
  -[HMDEventTriggerExecutionSession _userResponse:device:completionHandler:]
  -[HMDEventTriggerExecutionSession actionSetExecutionInProgress]
  -[HMDEventTriggerExecutionSession _removeUserDialog]
  -[HMDEventTriggerExecutionSession _addEvent:causingDevice:]
  -[HMDEventTriggerExecutionSession setActionSetExecutionInProgress:]
  -[HMDEventTriggerExecutionSession _handleActionSetExecutionResponse:actionSetError:completion:]
  -[HMDEventTriggerExecutionSession _createMonitoringEvents:]
  -[HMDEventTriggerExecutionSession setMonitorEvents:]
  -[HMDEventTriggerExecutionSession setStartCharacteristicsMonitorTimer:]
  -[HMDEventTriggerExecutionSession startCharacteristicsMonitorTimer]
  -[HMDEventTriggerExecutionSession durationEndEvents]
  -[HMDEventTriggerExecutionSession valueInActionSetWriteResponse:actionSetUUID:accUUID:serviceID:characteristicID:]
  -[HMDEventTriggerExecutionSession executionCompleteCalled]
  -[HMDEventTriggerExecutionSession setExecutionCompleteCalled:]
  -[HMDEventTriggerExecutionSession _submitAnalyticsData:]
  -[HMDEventTriggerExecutionSession _callExecutionCompleteIfNoMoreOutstandingRequests]
  -[HMDEventTriggerExecutionSession _handleMonitoringEvent:]
  -[HMDEventTriggerExecutionSession _activateMonitoringEvents]


HMDRemoteLoginInitiatorSession : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *sessionID
 @property  HMDLogEvent<HomeKitEventRemoteLoginMetricProtocol> *metric

  // instance methods
  -[HMDRemoteLoginInitiatorSession sessionID]
  -[HMDRemoteLoginInitiatorSession dealloc]
  -[HMDRemoteLoginInitiatorSession .cxx_destruct]
  -[HMDRemoteLoginInitiatorSession setMetric:]
  -[HMDRemoteLoginInitiatorSession metric]
  -[HMDRemoteLoginInitiatorSession initWithSessionID:]


AWDHomeKitSiriSync : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned int duration
 @property  NSMutableArray *reasons
 @property  BOOL hasCurrentConfigurationVersion
 @property  unsigned int currentConfigurationVersion
 @property  BOOL hasLastSyncedConfigurationVersion
 @property  unsigned int lastSyncedConfigurationVersion
 @property  BOOL hasServerConfigurationVersion
 @property  unsigned int serverConfigurationVersion

  // class methods
  +[AWDHomeKitSiriSync reasonsType]

  // instance methods
  -[AWDHomeKitSiriSync copyWithZone:]
  -[AWDHomeKitSiriSync .cxx_destruct]
  -[AWDHomeKitSiriSync timestamp]
  -[AWDHomeKitSiriSync setTimestamp:]
  -[AWDHomeKitSiriSync reasonsCount]
  -[AWDHomeKitSiriSync clearReasons]
  -[AWDHomeKitSiriSync setHasDuration:]
  -[AWDHomeKitSiriSync setHasTimestamp:]
  -[AWDHomeKitSiriSync reasons]
  -[AWDHomeKitSiriSync readFrom:]
  -[AWDHomeKitSiriSync writeTo:]
  -[AWDHomeKitSiriSync isEqual:]
  -[AWDHomeKitSiriSync setDuration:]
  -[AWDHomeKitSiriSync setReasons:]
  -[AWDHomeKitSiriSync addReasons:]
  -[AWDHomeKitSiriSync copyTo:]
  -[AWDHomeKitSiriSync dictionaryRepresentation]
  -[AWDHomeKitSiriSync hasDuration]
  -[AWDHomeKitSiriSync mergeFrom:]
  -[AWDHomeKitSiriSync hasTimestamp]
  -[AWDHomeKitSiriSync duration]
  -[AWDHomeKitSiriSync lastSyncedConfigurationVersion]
  -[AWDHomeKitSiriSync setLastSyncedConfigurationVersion:]
  -[AWDHomeKitSiriSync serverConfigurationVersion]
  -[AWDHomeKitSiriSync setCurrentConfigurationVersion:]
  -[AWDHomeKitSiriSync setHasCurrentConfigurationVersion:]
  -[AWDHomeKitSiriSync hasCurrentConfigurationVersion]
  -[AWDHomeKitSiriSync setHasLastSyncedConfigurationVersion:]
  -[AWDHomeKitSiriSync hasLastSyncedConfigurationVersion]
  -[AWDHomeKitSiriSync setServerConfigurationVersion:]
  -[AWDHomeKitSiriSync setHasServerConfigurationVersion:]
  -[AWDHomeKitSiriSync hasServerConfigurationVersion]
  -[AWDHomeKitSiriSync currentConfigurationVersion]
  -[AWDHomeKitSiriSync reasonsAtIndex:]


HMDSharedHomeUpdateSession : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMFTimerDelegate, HMFDumpState>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDHome *home
 @property  NSDictionary *messagePayload
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMFTimer *timer
 @property  unsigned long retryCount
 @property  double currentTimerValue
 @property  NSString *homeIdentifier
 @property  NSUUID *sessionID
 @property  <HMDSharedHomeUpdateSessionDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSharedHomeUpdateSession logCategory]

  // instance methods
  -[HMDSharedHomeUpdateSession setRetryCount:]
  -[HMDSharedHomeUpdateSession timerDidFire:]
  -[HMDSharedHomeUpdateSession sessionID]
  -[HMDSharedHomeUpdateSession logIdentifier]
  -[HMDSharedHomeUpdateSession timer]
  -[HMDSharedHomeUpdateSession retryCount]
  -[HMDSharedHomeUpdateSession dealloc]
  -[HMDSharedHomeUpdateSession setTimer:]
  -[HMDSharedHomeUpdateSession startTimer]
  -[HMDSharedHomeUpdateSession .cxx_destruct]
  -[HMDSharedHomeUpdateSession workQueue]
  -[HMDSharedHomeUpdateSession home]
  -[HMDSharedHomeUpdateSession messageDispatcher]
  -[HMDSharedHomeUpdateSession messagePayload]
  -[HMDSharedHomeUpdateSession homeIdentifier]
  -[HMDSharedHomeUpdateSession dumpState]
  -[HMDSharedHomeUpdateSession delegate]
  -[HMDSharedHomeUpdateSession _callDelegate]
  -[HMDSharedHomeUpdateSession initWithHome:delegate:workQueue:messagePayload:messageDispatcher:]
  -[HMDSharedHomeUpdateSession requestDataSync]
  -[HMDSharedHomeUpdateSession _requestDataSync]
  -[HMDSharedHomeUpdateSession _selectResident]
  -[HMDSharedHomeUpdateSession currentTimerValue]
  -[HMDSharedHomeUpdateSession setCurrentTimerValue:]


HMDRemotePersonDataMessenger : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFMessageReceiver, HMFTimerDelegate, HMDPersonDataReceiver>
 @property  HMFMessageDispatcher *messageDispatcher
 @property  HMDResidentDeviceManager *residentDeviceManager
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <HMDPersonDataSource> *dataSource
 @property  HMFTimer *notifyResidentsOfUpdatedDataDebounceTimer
 @property  @? notifyResidentsOfUpdatedDataDebounceTimerFactory
 @property  NSUUID *UUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  HMIHomePersonManager *homePersonManager
 @property  HMIExternalPersonManager *photosPersonManager

  // class methods
  +[HMDRemotePersonDataMessenger logCategory]

  // instance methods
  -[HMDRemotePersonDataMessenger messageTargetUUID]
  -[HMDRemotePersonDataMessenger messageReceiveQueue]
  -[HMDRemotePersonDataMessenger timerDidFire:]
  -[HMDRemotePersonDataMessenger logIdentifier]
  -[HMDRemotePersonDataMessenger setDataSource:]
  -[HMDRemotePersonDataMessenger .cxx_destruct]
  -[HMDRemotePersonDataMessenger workQueue]
  -[HMDRemotePersonDataMessenger dataSource]
  -[HMDRemotePersonDataMessenger messageDispatcher]
  -[HMDRemotePersonDataMessenger UUID]
  -[HMDRemotePersonDataMessenger residentDeviceManager]
  -[HMDRemotePersonDataMessenger configureWithDataSource:home:]
  -[HMDRemotePersonDataMessenger handleUpdatedPerson:mirrorOutputFuture:]
  -[HMDRemotePersonDataMessenger handleUpdatedPersonFaceCrop:mirrorOutputFuture:]
  -[HMDRemotePersonDataMessenger handleRemovedPersonWithUUID:mirrorOutputFuture:]
  -[HMDRemotePersonDataMessenger handleRemovedFaceCropWithUUID:mirrorOutputFuture:]
  -[HMDRemotePersonDataMessenger handleUpdatedSettings:mirrorOutputFuture:]
  -[HMDRemotePersonDataMessenger initWithUUID:home:workQueue:]
  -[HMDRemotePersonDataMessenger handlePerformCloudPullMessage:]
  -[HMDRemotePersonDataMessenger initWithUUID:messageDispatcher:residentDeviceManager:workQueue:]
  -[HMDRemotePersonDataMessenger notifyResidentsOfUpdatedDataDebounceTimer]
  -[HMDRemotePersonDataMessenger notifyResidentsOfUpdatedDataDebounceTimerFactory]
  -[HMDRemotePersonDataMessenger setNotifyResidentsOfUpdatedDataDebounceTimer:]
  -[HMDRemotePersonDataMessenger _sendMessagesToNotifyResidentsOfUpdatedFaceClassificationDependentData]
  -[HMDRemotePersonDataMessenger _notifyResidentsOfUpdatedFaceClassificationDependentData]
  -[HMDRemotePersonDataMessenger setNotifyResidentsOfUpdatedDataDebounceTimerFactory:]


HMDNaturalLightingContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, NSSecureCoding, NSCopying>
 @property  HMDNaturalLightingCurve *curve
 @property  NSTimeZone *timeZone
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNaturalLightingContext supportsSecureCoding]
  +[HMDNaturalLightingContext logCategory]

  // instance methods
  -[HMDNaturalLightingContext copyWithZone:]
  -[HMDNaturalLightingContext curve]
  -[HMDNaturalLightingContext timeZone]
  -[HMDNaturalLightingContext attributeDescriptions]
  -[HMDNaturalLightingContext .cxx_destruct]
  -[HMDNaturalLightingContext encodeWithCoder:]
  -[HMDNaturalLightingContext isEqual:]
  -[HMDNaturalLightingContext initWithCoder:]
  -[HMDNaturalLightingContext initWithCurve:timeZone:]


HMDNaturalLightingEnabledRetryContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSCopying>
 @property  unsigned long retryCount
 @property  BOOL naturalLightingEnabled
 @property  @? completion

  // instance methods
  -[HMDNaturalLightingEnabledRetryContext setRetryCount:]
  -[HMDNaturalLightingEnabledRetryContext copyWithZone:]
  -[HMDNaturalLightingEnabledRetryContext completion]
  -[HMDNaturalLightingEnabledRetryContext attributeDescriptions]
  -[HMDNaturalLightingEnabledRetryContext retryCount]
  -[HMDNaturalLightingEnabledRetryContext .cxx_destruct]
  -[HMDNaturalLightingEnabledRetryContext naturalLightingEnabled]
  -[HMDNaturalLightingEnabledRetryContext initWithNaturalLightingEnabled:completion:retryCount:]


HMDLightProfile : HMDAccessoryProfile <HMDCharacteristicsAvailabilityListenerDelegate>
 @property  unsigned long supportedFeatures
 @property  HMDCharacteristicsAvailabilityListener *characteristicsAvailabilityListener
 @property  NSSet *notificationEnabledCharacteristics
 @property  HMDHAPAccessory *hapAccessory
 @property  NSString *clientIdentifier
 @property  HMDNaturalLightingCurveWriter *naturalLightingCurveWriter
 @property  NSDate *lastNaturalLightingEnabledDate
 @property  NSDate *lastNaturalLightingUsedDate
 @property  BOOL usingNaturalLighting
 @property  <HMDLightProfileDataSource> *dataSource
 @property  HMDCharacteristic *brightnessCharacteristic
 @property  HMDCharacteristic *colorTemperatureCharacteristic
 @property  NSDate *lastNaturalLightingCurveUpdateDate
 @property  HMDNaturalLightingCurve *naturalLightingCurve
 @property  HMDNaturalLightingActiveTransitionContext *naturalLightingActiveTransitionContext
 @property  BOOL didCharacteristicReadSucceed
 @property  BOOL shouldEnableCharacteristicNotifications
 @property  HMDNaturalLightingEnabledRetryContext *naturalLightingEnabledRetryContext
 @property  unsigned char activeTransitionsCount
 @property  BOOL naturalLightingEnabled
 @property  HMLightProfileSettings *settings
 @property  NSDate *mostRecentNaturalLightingEnabledDate
 @property  NSDate *mostRecentNaturalLightingUsedDate
 @property  HMDService *service

  // class methods
  +[HMDLightProfile logCategory]

  // instance methods
  -[HMDLightProfile clientIdentifier]
  -[HMDLightProfile setNaturalLightingEnabled:shouldRetryOnFailure:completion:]
  -[HMDLightProfile dealloc]
  -[HMDLightProfile .cxx_destruct]
  -[HMDLightProfile encodeWithCoder:]
  -[HMDLightProfile setSupportedFeatures:]
  -[HMDLightProfile service]
  -[HMDLightProfile settings]
  -[HMDLightProfile supportedFeatures]
  -[HMDLightProfile dataSource]
  -[HMDLightProfile registerForMessages]
  -[HMDLightProfile isNaturalLightingEnabled]
  -[HMDLightProfile setNaturalLightingEnabled:]
  -[HMDLightProfile hapAccessory]
  -[HMDLightProfile mostRecentNaturalLightingEnabledDate]
  -[HMDLightProfile mostRecentNaturalLightingUsedDate]
  -[HMDLightProfile naturalLightingCurveWriter]
  -[HMDLightProfile handleHomeDataLoadedNotification:]
  -[HMDLightProfile handleFetchSettingsMessage:]
  -[HMDLightProfile handleAccessoryConnected:]
  -[HMDLightProfile setHapAccessory:]
  -[HMDLightProfile characteristicsAvailabilityListener]
  -[HMDLightProfile listener:didUpdateAvailableCharacteristics:]
  -[HMDLightProfile initWithWorkQueue:lightService:accessory:]
  -[HMDLightProfile initWithUUID:workQueue:lightService:accessory:characteristicsAvailabilityListener:naturalLightingCurveWriter:dataSource:]
  -[HMDLightProfile handleSetNaturalLightingEnabledMessage:]
  -[HMDLightProfile handleFetchNaturalLightColorTemperatureForBrightnessMessage:]
  -[HMDLightProfile handleAccessoryCharacteristicsChanged:]
  -[HMDLightProfile handleHomeNaturalLightingContextUpdated:]
  -[HMDLightProfile handleHomeDidEnableCharacteristicNotification:]
  -[HMDLightProfile handleHomeDidDisableCharacteristicNotification:]
  -[HMDLightProfile naturalLightingCurve]
  -[HMDLightProfile naturalLightingEnabledRetryContext]
  -[HMDLightProfile setNaturalLightingEnabledRetryContext:]
  -[HMDLightProfile notifyClientsOfUpdatedSettingsWithPreviousSettings:]
  -[HMDLightProfile lastNaturalLightingEnabledDate]
  -[HMDLightProfile setLastNaturalLightingEnabledDate:]
  -[HMDLightProfile updateLastNaturalLightingUsedState]
  -[HMDLightProfile synchronizeCurveToAccessory]
  -[HMDLightProfile colorTemperatureCharacteristic]
  -[HMDLightProfile setNaturalLightingActiveTransitionContext:]
  -[HMDLightProfile naturalLightingActiveTransitionContext]
  -[HMDLightProfile availableCharacteristicWithType:fromChangedObjects:]
  -[HMDLightProfile updateSupportedFeaturesWithCharacteristics:]
  -[HMDLightProfile updateNaturalLightingEnabledForCharacteristic:]
  -[HMDLightProfile updateActiveTransitionCountWithCharacteristic:]
  -[HMDLightProfile readNaturalLightingCharacteristicsWithReason:]
  -[HMDLightProfile brightnessCharacteristic]
  -[HMDLightProfile isUsingNaturalLighting]
  -[HMDLightProfile lastNaturalLightingUsedDate]
  -[HMDLightProfile setLastNaturalLightingUsedDate:]
  -[HMDLightProfile setNaturalLightingCurve:]
  -[HMDLightProfile updateSettingsWithCharacteristics:]
  -[HMDLightProfile setDidCharacteristicReadSucceed:]
  -[HMDLightProfile activeTransitionsCount]
  -[HMDLightProfile setActiveTransitionsCount:]
  -[HMDLightProfile shouldEnableCharacteristicNotifications]
  -[HMDLightProfile setNotificationEnabledCharacteristics:]
  -[HMDLightProfile notificationEnabledCharacteristics]
  -[HMDLightProfile setShouldEnableCharacteristicNotifications:]
  -[HMDLightProfile updateEnabledNaturalLightingCharacteristicsNotifications]
  -[HMDLightProfile didCharacteristicReadSucceed]
  -[HMDLightProfile resetNaturalLightingEnabledRetryContext]
  -[HMDLightProfile setNaturalLightingEnabled:completion:retryContext:]
  -[HMDLightProfile callSetNaturalLightingEnabledCompletion:error:]
  -[HMDLightProfile handleSetNaturalLightingEnabled:]
  -[HMDLightProfile shouldRetrySetNaturalLightingEnabledWithError:]
  -[HMDLightProfile retrySetNaturalLightingEnabledWithContext:error:]
  -[HMDLightProfile setBrightnessCharacteristic:]
  -[HMDLightProfile setColorTemperatureCharacteristic:]
  -[HMDLightProfile updateNaturalLightingCurve]
  -[HMDLightProfile enableNaturalLightingCharacteristicNotifications]
  -[HMDLightProfile disableNaturalLightingCharacteristicNotifications]
  -[HMDLightProfile _handleAccessoryCharacteristicsChanged:]
  -[HMDLightProfile setNaturalLightingEnabled:completion:]
  -[HMDLightProfile setNaturalLightingCharacteristicsNotificationEnabled:]
  -[HMDLightProfile lastNaturalLightingCurveUpdateDate]
  -[HMDLightProfile setLastNaturalLightingCurveUpdateDate:]


HMDMemoryUseSnapshot : NSObject /usr/lib/libc++.1.dylib
 @property  NSDate *date
 @property  NSString *reason
 @property  NSNumber *memoryUsage
 @property  NSNumber *maxMemoryUsage

  // class methods
  +[HMDMemoryUseSnapshot memoryUseSnapshotWithReason:]

  // instance methods
  -[HMDMemoryUseSnapshot init]
  -[HMDMemoryUseSnapshot .cxx_destruct]
  -[HMDMemoryUseSnapshot date]
  -[HMDMemoryUseSnapshot reason]
  -[HMDMemoryUseSnapshot memoryUsage]
  -[HMDMemoryUseSnapshot maxMemoryUsage]
  -[HMDMemoryUseSnapshot __initWithReason:memoryUsage:maxMemoryUsage:]


HMDMemoryUtilizationTracker : NSObject /usr/lib/libc++.1.dylib <HMFLogging>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDMemoryUtilizationTracker logCategory]
  +[HMDMemoryUtilizationTracker memoryTracker]

  // instance methods
  -[HMDMemoryUtilizationTracker init]
  -[HMDMemoryUtilizationTracker log]
  -[HMDMemoryUtilizationTracker .cxx_destruct]
  -[HMDMemoryUtilizationTracker snapshots]
  -[HMDMemoryUtilizationTracker __init]
  -[HMDMemoryUtilizationTracker reset]
  -[HMDMemoryUtilizationTracker dumpState]
  -[HMDMemoryUtilizationTracker trackMemoryUsageWithReason:]


HMDNetworkRouterFirewallRuleConfiguration : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDNetworkRouterFirewallRuleAccessoryIdentifier *accessoryIdentifier
 @property  NSDate *lastModifiedTime
 @property  NSArray *lanRules
 @property  BOOL fullAccessLAN
 @property  NSArray *wanRules
 @property  BOOL fullAccessWAN
 @property  NSDictionary *prettyJSONDictionary
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNetworkRouterFirewallRuleConfiguration logCategory]
  +[HMDNetworkRouterFirewallRuleConfiguration __decodeNetworkDeclarationsFromJSONDictionary:networkDeclarations:]
  +[HMDNetworkRouterFirewallRuleConfiguration __decodeFullAccessFromNetworkDeclarations:key:fullAccess:]
  +[HMDNetworkRouterFirewallRuleConfiguration __decodeRulesFromNetworkDeclarations:key:class:required:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleConfiguration attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleConfiguration accessoryIdentifier]
  -[HMDNetworkRouterFirewallRuleConfiguration .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleConfiguration prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRuleConfiguration hasFullAccessToLAN]
  -[HMDNetworkRouterFirewallRuleConfiguration lanRules]
  -[HMDNetworkRouterFirewallRuleConfiguration hasFullAccessToWAN]
  -[HMDNetworkRouterFirewallRuleConfiguration wanRules]
  -[HMDNetworkRouterFirewallRuleConfiguration initWithAccessoryIdentifier:jsonDictionary:]
  -[HMDNetworkRouterFirewallRuleConfiguration lastModifiedTime]
  -[HMDNetworkRouterFirewallRuleConfiguration initWithAccessoryIdentifier:lastModifiedTime:fullAccessLAN:lanRules:fullAccessWAN:wanRules:]


HMDEventFlagsManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSMutableDictionary *eventFlags
 @property  NSMutableDictionary *definedEventPeriods
 @property  NSDate *lastSaveTime
 @property  unsigned long saveCount
 @property  BOOL saving
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDPersistentStore *persistentStore

  // class methods
  +[HMDEventFlagsManager sharedEventFlagsManager]

  // instance methods
  -[HMDEventFlagsManager persistentStore]
  -[HMDEventFlagsManager _save]
  -[HMDEventFlagsManager eventFlags]
  -[HMDEventFlagsManager init]
  -[HMDEventFlagsManager .cxx_destruct]
  -[HMDEventFlagsManager workQueue]
  -[HMDEventFlagsManager initWithPersistentStore:]
  -[HMDEventFlagsManager isSaving]
  -[HMDEventFlagsManager setSaving:]
  -[HMDEventFlagsManager fetchEventFlagForEventName:requestGroup:]
  -[HMDEventFlagsManager shiftEventFlagsForRequestGroup:]
  -[HMDEventFlagsManager forceSave]
  -[HMDEventFlagsManager defineEventPeriod:forEventName:requestGroup:]
  -[HMDEventFlagsManager setEventFlagForEventName:requestGroup:]
  -[HMDEventFlagsManager defineEventPeriod:forEventNames:requestGroup:]
  -[HMDEventFlagsManager logDiskWriteState]
  -[HMDEventFlagsManager setLastSaveTime:]
  -[HMDEventFlagsManager _performOnUpdate]
  -[HMDEventFlagsManager lastSaveTime]
  -[HMDEventFlagsManager setSaveCount:]
  -[HMDEventFlagsManager saveCount]
  -[HMDEventFlagsManager unarchivedEventFlags]
  -[HMDEventFlagsManager _setEventFlagForEventName:requestGroup:]
  -[HMDEventFlagsManager _defineEventPeriod:forEventName:requestGroup:]
  -[HMDEventFlagsManager _fetchEventFlagForEventName:requestGroup:]
  -[HMDEventFlagsManager _fetchEventFlagsForRequestGroup:]
  -[HMDEventFlagsManager _fetchAllEventFlags]
  -[HMDEventFlagsManager _fetchAllDefinedEventPeriods]
  -[HMDEventFlagsManager _shiftEventFlagForEventName:requestGroup:]
  -[HMDEventFlagsManager _resetEventFlagForEventName:requestGroup:]
  -[HMDEventFlagsManager archiveEventFlagsWithEventFlagsSnapshot:definedEventPeriodsSnapshot:completionHandler:]
  -[HMDEventFlagsManager setEventFlagsForEventNames:requestGroup:]
  -[HMDEventFlagsManager fetchEventFlagsForRequestGroup:]
  -[HMDEventFlagsManager fetchAllEventFlags]
  -[HMDEventFlagsManager fetchAllEventPeriodsDefinedForEventFlags]
  -[HMDEventFlagsManager shiftEventFlagForEventName:requestGroup:]
  -[HMDEventFlagsManager resetEventFlagForEventName:requestGroup:]
  -[HMDEventFlagsManager resetEventFlagsForRequestGroup:]
  -[HMDEventFlagsManager setEventFlags:]
  -[HMDEventFlagsManager definedEventPeriods]
  -[HMDEventFlagsManager setDefinedEventPeriods:]


HMDRelayStream : HAPRelayStream /System/Library/Frameworks/CoreImage.framework/CoreImage <HMDRelayManagerDelegate, HMFLogging, IDSServiceDelegateHomeKit>
 @property  NSString *controllerIdentifier
 @property  IDSService *idsService
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  BOOL opened
 @property  NSMutableArray *pendingSentMessageIdentifiers
 @property  BOOL suspended
 @property  HMDRelayManager *relayManger
 @property  NSString *accessoryIdentifier
 @property  NSData *accessToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRelayStream logCategory]

  // instance methods
  -[HMDRelayStream suspend]
  -[HMDRelayStream setSuspended:]
  -[HMDRelayStream logIdentifier]
  -[HMDRelayStream isSuspended]
  -[HMDRelayStream resume]
  -[HMDRelayStream service:account:incomingAccessoryData:fromAccessoryID:context:]
  -[HMDRelayStream accessoryIdentifier]
  -[HMDRelayStream .cxx_destruct]
  -[HMDRelayStream close]
  -[HMDRelayStream clientQueue]
  -[HMDRelayStream open]
  -[HMDRelayStream setIdsService:]
  -[HMDRelayStream mtu]
  -[HMDRelayStream writeData:error:]
  -[HMDRelayStream accessToken]
  -[HMDRelayStream idsService]
  -[HMDRelayStream isOpened]
  -[HMDRelayStream service:account:identifier:didSendWithSuccess:error:]
  -[HMDRelayStream setClientQueue:]
  -[HMDRelayStream _closeWithError:]
  -[HMDRelayStream relayManager:didUpdateControllerIdentifier:]
  -[HMDRelayStream controllerIdentifier]
  -[HMDRelayStream initWithRelayManager:idsService:accessoryIdentifier:accessToken:]
  -[HMDRelayStream setOpened:]
  -[HMDRelayStream pendingSentMessageIdentifiers]
  -[HMDRelayStream relayManger]


HMDIDSActivityObserverModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSData *pushToken

  // class methods
  +[HMDIDSActivityObserverModel hmbProperties]
  +[HMDIDSActivityObserverModel sentinelParentUUID]

  // instance methods
  -[HMDIDSActivityObserverModel initWithModelID:]


HMDIDSActivityRegistrationModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSUUID *subjectDeviceIdentifier
 @property  NSArray *subActivities

  // class methods
  +[HMDIDSActivityRegistrationModel hmbQueries]
  +[HMDIDSActivityRegistrationModel hmbProperties]
  +[HMDIDSActivityRegistrationModel registeredDevicesQuery]


HMDCharacteristicResponseNotificationContext : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *requestIdentifier
 @property  BOOL pendingMultiPartResponses
 @property  NSSet *changedCharacteristics
 @property  NSDictionary *notificationPayloadByAccessoryUUID
 @property  NSSet *responseCharacteristics

  // instance methods
  -[HMDCharacteristicResponseNotificationContext requestIdentifier]
  -[HMDCharacteristicResponseNotificationContext .cxx_destruct]
  -[HMDCharacteristicResponseNotificationContext initWithRequestIdentifier:responses:pendingMultiPartResponses:]
  -[HMDCharacteristicResponseNotificationContext changedCharacteristics]
  -[HMDCharacteristicResponseNotificationContext notificationWithHome:]
  -[HMDCharacteristicResponseNotificationContext notificationPayloadByAccessoryUUID]
  -[HMDCharacteristicResponseNotificationContext responseCharacteristics]
  -[HMDCharacteristicResponseNotificationContext hasPendingMultiPartResponses]


AWDHomeKitUserPresenceAuthorization : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasAuth
 @property  int auth

  // instance methods
  -[AWDHomeKitUserPresenceAuthorization copyWithZone:]
  -[AWDHomeKitUserPresenceAuthorization auth]
  -[AWDHomeKitUserPresenceAuthorization timestamp]
  -[AWDHomeKitUserPresenceAuthorization setTimestamp:]
  -[AWDHomeKitUserPresenceAuthorization setHasTimestamp:]
  -[AWDHomeKitUserPresenceAuthorization readFrom:]
  -[AWDHomeKitUserPresenceAuthorization writeTo:]
  -[AWDHomeKitUserPresenceAuthorization hasAuth]
  -[AWDHomeKitUserPresenceAuthorization isEqual:]
  -[AWDHomeKitUserPresenceAuthorization setAuth:]
  -[AWDHomeKitUserPresenceAuthorization copyTo:]
  -[AWDHomeKitUserPresenceAuthorization dictionaryRepresentation]
  -[AWDHomeKitUserPresenceAuthorization mergeFrom:]
  -[AWDHomeKitUserPresenceAuthorization hasTimestamp]
  -[AWDHomeKitUserPresenceAuthorization setHasAuth:]
  -[AWDHomeKitUserPresenceAuthorization authAsString:]
  -[AWDHomeKitUserPresenceAuthorization StringAsAuth:]


HMDNetworkRouterProfile : HMDAccessoryProfile
 @property  unsigned long networkStatus
 @property  unsigned long wanStatus
 @property  long long routerStatus

  // class methods
  +[HMDNetworkRouterProfile supportsSecureCoding]
  +[HMDNetworkRouterProfile logCategory]

  // instance methods
  -[HMDNetworkRouterProfile dealloc]
  -[HMDNetworkRouterProfile encodeWithCoder:]
  -[HMDNetworkRouterProfile unconfigure]
  -[HMDNetworkRouterProfile isEqual:]
  -[HMDNetworkRouterProfile setNetworkStatus:]
  -[HMDNetworkRouterProfile networkStatus]
  -[HMDNetworkRouterProfile registerForMessages]
  -[HMDNetworkRouterProfile runtimeState]
  -[HMDNetworkRouterProfile handleAccessoryConnected:]
  -[HMDNetworkRouterProfile handleCharacteristicsChangedNotification:]
  -[HMDNetworkRouterProfile initWithRouterService:msgDispatcher:]
  -[HMDNetworkRouterProfile handleInitialState]
  -[HMDNetworkRouterProfile handleNetworkRouterSatelliteAddedOrRemoved:]
  -[HMDNetworkRouterProfile routerStatus]
  -[HMDNetworkRouterProfile wanStatus]
  -[HMDNetworkRouterProfile __notifyClientsOfNetworkStatus:]
  -[HMDNetworkRouterProfile setRouterStatus:]
  -[HMDNetworkRouterProfile setWanStatus:]
  -[HMDNetworkRouterProfile _updateWANStatus:]
  -[HMDNetworkRouterProfile _updateRouterStatus:]
  -[HMDNetworkRouterProfile __handleNetworkAccessViolationUpdate:]


HMDAccountHandleFormatter : NSFormatter /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices <HMFPrivateDescriptionFormatter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccountHandleFormatter defaultFormatter]

  // instance methods
  -[HMDAccountHandleFormatter stringForObjectValue:]
  -[HMDAccountHandleFormatter getObjectValue:forString:errorDescription:]
  -[HMDAccountHandleFormatter accountHandleFromString:]
  -[HMDAccountHandleFormatter privateStringForObjectValue:]


HMDWiFiReconfigurationLogEvent : HMDLogEvent <HMDCoreAnalyticsLogging>
 @property  HMDAccessory *accessory
 @property  BOOL usingFailSafeUpdate
 @property  long long credentialType
 @property  HMDAccessory *routerAccessory

  // class methods
  +[HMDWiFiReconfigurationLogEvent uuid]

  // instance methods
  -[HMDWiFiReconfigurationLogEvent eventName]
  -[HMDWiFiReconfigurationLogEvent init]
  -[HMDWiFiReconfigurationLogEvent .cxx_destruct]
  -[HMDWiFiReconfigurationLogEvent credentialType]
  -[HMDWiFiReconfigurationLogEvent accessory]
  -[HMDWiFiReconfigurationLogEvent setCredentialType:]
  -[HMDWiFiReconfigurationLogEvent setAccessory:]
  -[HMDWiFiReconfigurationLogEvent serializedEvent]
  -[HMDWiFiReconfigurationLogEvent setUsingFailSafeUpdate:]
  -[HMDWiFiReconfigurationLogEvent isUsingFailSafeUpdate]
  -[HMDWiFiReconfigurationLogEvent routerAccessory]
  -[HMDWiFiReconfigurationLogEvent setRouterAccessory:]


HMDSecureRemoteStreamInternal : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  double requestTimeout
 @property  @? internalRequestHandler
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? getLocalIdentityHandler
 @property  @? findPeerHandler
 @property  @? startedHandler
 @property  @? stoppedHandler
 @property  @? requestHandler
 @property  @? transportSendMessage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSecureRemoteStreamInternal logCategory]

  // instance methods
  -[HMDSecureRemoteStreamInternal _start]
  -[HMDSecureRemoteStreamInternal logIdentifier]
  -[HMDSecureRemoteStreamInternal init]
  -[HMDSecureRemoteStreamInternal dealloc]
  -[HMDSecureRemoteStreamInternal .cxx_destruct]
  -[HMDSecureRemoteStreamInternal dispatchQueue]
  -[HMDSecureRemoteStreamInternal requestTimeout]
  -[HMDSecureRemoteStreamInternal _stop:]
  -[HMDSecureRemoteStreamInternal setDispatchQueue:]
  -[HMDSecureRemoteStreamInternal stop]
  -[HMDSecureRemoteStreamInternal stoppedHandler]
  -[HMDSecureRemoteStreamInternal setRequestHandler:]
  -[HMDSecureRemoteStreamInternal setStoppedHandler:]
  -[HMDSecureRemoteStreamInternal requestHandler]
  -[HMDSecureRemoteStreamInternal start]
  -[HMDSecureRemoteStreamInternal _updateIdleTimer]
  -[HMDSecureRemoteStreamInternal _runStateMachine]
  -[HMDSecureRemoteStreamInternal _serverCompletePrepareRequest:]
  -[HMDSecureRemoteStreamInternal _completeTransaction:response:status:]
  -[HMDSecureRemoteStreamInternal _completeUserTransaction:response:status:]
  -[HMDSecureRemoteStreamInternal _clientRunStateMachine]
  -[HMDSecureRemoteStreamInternal _serverRunStateMachine]
  -[HMDSecureRemoteStreamInternal _sendUserRequest:options:responseHandler:]
  -[HMDSecureRemoteStreamInternal _transportReceivedMessage:options:]
  -[HMDSecureRemoteStreamInternal _clientPairVerifyExchange:]
  -[HMDSecureRemoteStreamInternal _setupEncryption]
  -[HMDSecureRemoteStreamInternal _clientSendPrepareRequest:]
  -[HMDSecureRemoteStreamInternal _clientSendCommitRequest:]
  -[HMDSecureRemoteStreamInternal _sendRequest:options:responseHandler:]
  -[HMDSecureRemoteStreamInternal _clientHandlePrepareResponse:]
  -[HMDSecureRemoteStreamInternal _clientHandleCommitResponse:]
  -[HMDSecureRemoteStreamInternal _serverPairVerifyExchange:options:]
  -[HMDSecureRemoteStreamInternal setInternalRequestHandler:]
  -[HMDSecureRemoteStreamInternal _serverHandleEncryptedRequest:options:]
  -[HMDSecureRemoteStreamInternal _serverHandleDecryptedRequest:options:responseHandler:]
  -[HMDSecureRemoteStreamInternal _serverHandlePrepareRequest:responseHandler:]
  -[HMDSecureRemoteStreamInternal _serverHandleCommitRequest:options:responseHandler:]
  -[HMDSecureRemoteStreamInternal initWithType:commitTimeout:clientIdleTimeout:serverIdleTimeout:sendInternalTimeout:sendUserTimeout:]
  -[HMDSecureRemoteStreamInternal sendRequest:options:responseHandler:]
  -[HMDSecureRemoteStreamInternal transportReceivedMessage:options:]
  -[HMDSecureRemoteStreamInternal internalRequestHandler]
  -[HMDSecureRemoteStreamInternal getLocalIdentityHandler]
  -[HMDSecureRemoteStreamInternal setGetLocalIdentityHandler:]
  -[HMDSecureRemoteStreamInternal findPeerHandler]
  -[HMDSecureRemoteStreamInternal setFindPeerHandler:]
  -[HMDSecureRemoteStreamInternal startedHandler]
  -[HMDSecureRemoteStreamInternal setStartedHandler:]
  -[HMDSecureRemoteStreamInternal transportSendMessage]
  -[HMDSecureRemoteStreamInternal setTransportSendMessage:]


HMDSecureRemoteStream : HMFMessageTransport /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFObject>
 @property  HMDDevice *peerDevice
 @property  HMDUser *peer
 @property  HMFPairingIdentity *peerIdentity
 @property  HMDSecureRemoteStreamInternal *remoteSession
 @property  HMDDevice *currentDevice
 @property  BOOL supportsSharedIdentities
 @property  HMDAWDRemoteSessionMetric *metric
 @property  long long role
 @property  NSNumber *maximumRemoteStreams
 @property  long long qualityOfService
 @property  BOOL open
 @property  BOOL authenticated
 @property  BOOL idle
 @property  NSDate *lastActivity
 @property  NSUUID *sessionID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *shortDescription
 @property  NSString *privateDescription
 @property  NSString *propertyDescription
 @property  NSArray *attributeDescriptions

  // class methods
  +[HMDSecureRemoteStream logCategory]

  // instance methods
  -[HMDSecureRemoteStream isAuthenticated]
  -[HMDSecureRemoteStream setPeer:]
  -[HMDSecureRemoteStream sessionID]
  -[HMDSecureRemoteStream sendMessage:completionHandler:]
  -[HMDSecureRemoteStream peer]
  -[HMDSecureRemoteStream logIdentifier]
  -[HMDSecureRemoteStream setQualityOfService:]
  -[HMDSecureRemoteStream setPeerDevice:]
  -[HMDSecureRemoteStream dealloc]
  -[HMDSecureRemoteStream .cxx_destruct]
  -[HMDSecureRemoteStream isOpen]
  -[HMDSecureRemoteStream metric]
  -[HMDSecureRemoteStream stop]
  -[HMDSecureRemoteStream propertyDescription]
  -[HMDSecureRemoteStream shortDescription]
  -[HMDSecureRemoteStream currentDevice]
  -[HMDSecureRemoteStream peerDevice]
  -[HMDSecureRemoteStream role]
  -[HMDSecureRemoteStream isIdle]
  -[HMDSecureRemoteStream qualityOfService]
  -[HMDSecureRemoteStream setOpen:]
  -[HMDSecureRemoteStream _closeWithError:]
  -[HMDSecureRemoteStream setRemoteSession:]
  -[HMDSecureRemoteStream remoteSession]
  -[HMDSecureRemoteStream maximumRemoteStreams]
  -[HMDSecureRemoteStream setMaximumRemoteStreams:]
  -[HMDSecureRemoteStream handleSecureMessage:fromTransport:]
  -[HMDSecureRemoteStream initWithCurrentDevice:peerDevice:clientMode:sessionID:]
  -[HMDSecureRemoteStream startAndInvokeOnQueue:completionHandler:]
  -[HMDSecureRemoteStream lastActivity]
  -[HMDSecureRemoteStream __handleAccountRemovedFromRegistry:]
  -[HMDSecureRemoteStream __handleDeviceRemovedFromAccount:]
  -[HMDSecureRemoteStream _configureWithCompletionQueue:completionHandler:]
  -[HMDSecureRemoteStream closedWithError:]
  -[HMDSecureRemoteStream supportsSharedIdentities]
  -[HMDSecureRemoteStream setPeerIdentity:]
  -[HMDSecureRemoteStream __handleRemovedIdentity:]
  -[HMDSecureRemoteStream setIdle:]
  -[HMDSecureRemoteStream handleCompletedMessage:options:responsePayload:error:completionHandler:]
  -[HMDSecureRemoteStream setSupportsSharedIdentities:]
  -[HMDSecureRemoteStream peerIdentity]


HMDDataStreamBulkSendSessionCandidate : NSObject /usr/lib/libc++.1.dylib <HMDDataStreamBulkSendSessionCandidate>
 @property  HMDDataStreamBulkSendProtocol *bulkSendProtocol
 @property  NSDictionary *requestHeader
 @property  NSMutableArray *pendingReads
 @property  NSError *receivedFailure

  // instance methods
  -[HMDDataStreamBulkSendSessionCandidate .cxx_destruct]
  -[HMDDataStreamBulkSendSessionCandidate rejectBulkSendSessionWithStatus:]
  -[HMDDataStreamBulkSendSessionCandidate pendingReads]
  -[HMDDataStreamBulkSendSessionCandidate setPendingReads:]
  -[HMDDataStreamBulkSendSessionCandidate acceptBulkSendSessionOnQueue:callback:]
  -[HMDDataStreamBulkSendSessionCandidate initWithProtocol:requestHeader:]
  -[HMDDataStreamBulkSendSessionCandidate requestHeader]
  -[HMDDataStreamBulkSendSessionCandidate receivedFailure]
  -[HMDDataStreamBulkSendSessionCandidate bulkSendProtocol]
  -[HMDDataStreamBulkSendSessionCandidate setReceivedFailure:]


HMDDataStreamBulkSendSession : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDDataStreamBulkSendSession>
 @property  @? activeReadHandler
 @property  NSMutableArray *pendingReads
 @property  NSError *pendingError
 @property  NSString *logIdentifier
 @property  HMDDataStreamBulkSendProtocol *bulkSendProtocol
 @property  NSNumber *sessionIdentifier
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL active

  // class methods
  +[HMDDataStreamBulkSendSession logCategory]

  // instance methods
  -[HMDDataStreamBulkSendSession logIdentifier]
  -[HMDDataStreamBulkSendSession read:]
  -[HMDDataStreamBulkSendSession dealloc]
  -[HMDDataStreamBulkSendSession .cxx_destruct]
  -[HMDDataStreamBulkSendSession sessionIdentifier]
  -[HMDDataStreamBulkSendSession isActive]
  -[HMDDataStreamBulkSendSession queue]
  -[HMDDataStreamBulkSendSession cancelWithReason:]
  -[HMDDataStreamBulkSendSession pendingReads]
  -[HMDDataStreamBulkSendSession setPendingReads:]
  -[HMDDataStreamBulkSendSession asyncHandleRemoteCloseWithError:]
  -[HMDDataStreamBulkSendSession initWithProtocol:sessionIdentifier:queue:logIdentifier:]
  -[HMDDataStreamBulkSendSession asyncHandleIncomingPackets:isEof:]
  -[HMDDataStreamBulkSendSession bulkSendProtocol]
  -[HMDDataStreamBulkSendSession pendingError]
  -[HMDDataStreamBulkSendSession _closeSession]
  -[HMDDataStreamBulkSendSession activeReadHandler]
  -[HMDDataStreamBulkSendSession setActiveReadHandler:]
  -[HMDDataStreamBulkSendSession _pumpReadDataIfPossible]
  -[HMDDataStreamBulkSendSession setPendingError:]


HMDCameraRecordingResidentElector : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMISystemResourceUsageMonitorDelegate>
 @property  unsigned long totalNumberOfStreams
 @property  HMISystemResourceUsageMonitor *systemResourceUsageMonitor
 @property  HMDHomeManager *homeManager
 @property  NSMutableDictionary *readyToRecordByCameraUUIDString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraRecordingResidentElector logCategory]

  // instance methods
  -[HMDCameraRecordingResidentElector .cxx_destruct]
  -[HMDCameraRecordingResidentElector homeManager]
  -[HMDCameraRecordingResidentElector start]
  -[HMDCameraRecordingResidentElector removeDataForCameraWithUUID:]
  -[HMDCameraRecordingResidentElector setReadyToRecord:forCameraWithUUID:]
  -[HMDCameraRecordingResidentElector preferredResidentDevicesForCamera:deviceFilter:]
  -[HMDCameraRecordingResidentElector recordingDidStartForCameraWithUUID:]
  -[HMDCameraRecordingResidentElector isReadyToRecordForCameraWithUUID:]
  -[HMDCameraRecordingResidentElector recordingDidEndForCameraWithUUID:]
  -[HMDCameraRecordingResidentElector initWithHomeManager:resourceUsageMonitor:]
  -[HMDCameraRecordingResidentElector handleResidentMeshInitialized:]
  -[HMDCameraRecordingResidentElector systemResourceUsageMonitor]
  -[HMDCameraRecordingResidentElector totalNumberOfStreams]
  -[HMDCameraRecordingResidentElector setTotalNumberOfStreams:]
  -[HMDCameraRecordingResidentElector readyToRecordByCameraUUIDString]
  -[HMDCameraRecordingResidentElector _updateReadyToRecordMetric]
  -[HMDCameraRecordingResidentElector systemResourceUsageDidChangeTo:]


HMDAccessoryNetworkCredential : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *networkRouterUUID
 @property  NSNumber *clientIdentifier
 @property  NSData *wiFiPSK

  // instance methods
  -[HMDAccessoryNetworkCredential clientIdentifier]
  -[HMDAccessoryNetworkCredential .cxx_destruct]
  -[HMDAccessoryNetworkCredential wiFiPSK]
  -[HMDAccessoryNetworkCredential networkRouterUUID]
  -[HMDAccessoryNetworkCredential initWithNetworkRouterUUID:clientIdentifier:wiFiPSK:]


HMDCameraClipsQuotaEnableCameraMessage : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <CKCodeOperationMessageMutation, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL hasZoneName
 @property  NSString *zoneName

  // instance methods
  -[HMDCameraClipsQuotaEnableCameraMessage copyWithZone:]
  -[HMDCameraClipsQuotaEnableCameraMessage zoneName]
  -[HMDCameraClipsQuotaEnableCameraMessage hasZoneName]
  -[HMDCameraClipsQuotaEnableCameraMessage .cxx_destruct]
  -[HMDCameraClipsQuotaEnableCameraMessage setZoneName:]
  -[HMDCameraClipsQuotaEnableCameraMessage readFrom:]
  -[HMDCameraClipsQuotaEnableCameraMessage writeTo:]
  -[HMDCameraClipsQuotaEnableCameraMessage isEqual:]
  -[HMDCameraClipsQuotaEnableCameraMessage copyTo:]
  -[HMDCameraClipsQuotaEnableCameraMessage dictionaryRepresentation]
  -[HMDCameraClipsQuotaEnableCameraMessage mergeFrom:]


HMRemoteLoginMessage : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSString *sessionID
 @property  NSError *error

  // class methods
  +[HMRemoteLoginMessage supportsSecureCoding]

  // instance methods
  -[HMRemoteLoginMessage sessionID]
  -[HMRemoteLoginMessage setError:]
  -[HMRemoteLoginMessage .cxx_destruct]
  -[HMRemoteLoginMessage encodeWithCoder:]
  -[HMRemoteLoginMessage initNewMessage]
  -[HMRemoteLoginMessage error]
  -[HMRemoteLoginMessage initWithSessionID:]
  -[HMRemoteLoginMessage initWithCoder:]


HMDMPCSessionControllerExecutionEvent : HMDMediaPlaybackActionEvent <HMDCoreAnalyticsLogging>
 @property  BOOL didPartiallySucceed
 @property  NSString *resultString

  // class methods
  +[HMDMPCSessionControllerExecutionEvent identifier]

  // instance methods
  -[HMDMPCSessionControllerExecutionEvent eventName]
  -[HMDMPCSessionControllerExecutionEvent resultString]
  -[HMDMPCSessionControllerExecutionEvent serializedEvent]
  -[HMDMPCSessionControllerExecutionEvent didPartiallySucceed]
  -[HMDMPCSessionControllerExecutionEvent setDidPartiallySucceed:]


HMDCameraAccessModeChangedBulletin : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *title
 @property  NSString *body
 @property  NSString *threadIdentifier
 @property  NSDate *dateOfOccurrence

  // class methods
  +[HMDCameraAccessModeChangedBulletin bulletinForAccessMode:camera:home:changeReason:changeDate:]
  +[HMDCameraAccessModeChangedBulletin localizedMessageForCameraAccessModeChange:changeReason:camera:]

  // instance methods
  -[HMDCameraAccessModeChangedBulletin .cxx_destruct]
  -[HMDCameraAccessModeChangedBulletin title]
  -[HMDCameraAccessModeChangedBulletin body]
  -[HMDCameraAccessModeChangedBulletin threadIdentifier]
  -[HMDCameraAccessModeChangedBulletin dateOfOccurrence]
  -[HMDCameraAccessModeChangedBulletin initWithTitle:body:threadIdentifier:dateOfOccurrence:]


HMDAccessoryAdvertisement : NSObject /usr/lib/libc++.1.dylib
 @property  NSString *identifier
 @property  NSString *name
 @property  long long associationOptions
 @property  HMAccessoryCategory *category

  // instance methods
  -[HMDAccessoryAdvertisement category]
  -[HMDAccessoryAdvertisement .cxx_destruct]
  -[HMDAccessoryAdvertisement name]
  -[HMDAccessoryAdvertisement identifier]
  -[HMDAccessoryAdvertisement isEqual:]
  -[HMDAccessoryAdvertisement associationOptions]
  -[HMDAccessoryAdvertisement initWithIdentifier:name:category:]


AWDHomeKitCameraStreamReconfigure : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasReconfigurationTimestamp
 @property  unsigned int reconfigurationTimestamp
 @property  BOOL hasResolution
 @property  int resolution

  // instance methods
  -[AWDHomeKitCameraStreamReconfigure copyWithZone:]
  -[AWDHomeKitCameraStreamReconfigure resolution]
  -[AWDHomeKitCameraStreamReconfigure readFrom:]
  -[AWDHomeKitCameraStreamReconfigure writeTo:]
  -[AWDHomeKitCameraStreamReconfigure isEqual:]
  -[AWDHomeKitCameraStreamReconfigure copyTo:]
  -[AWDHomeKitCameraStreamReconfigure dictionaryRepresentation]
  -[AWDHomeKitCameraStreamReconfigure mergeFrom:]
  -[AWDHomeKitCameraStreamReconfigure setResolution:]
  -[AWDHomeKitCameraStreamReconfigure setHasResolution:]
  -[AWDHomeKitCameraStreamReconfigure hasResolution]
  -[AWDHomeKitCameraStreamReconfigure resolutionAsString:]
  -[AWDHomeKitCameraStreamReconfigure StringAsResolution:]
  -[AWDHomeKitCameraStreamReconfigure setReconfigurationTimestamp:]
  -[AWDHomeKitCameraStreamReconfigure setHasReconfigurationTimestamp:]
  -[AWDHomeKitCameraStreamReconfigure hasReconfigurationTimestamp]
  -[AWDHomeKitCameraStreamReconfigure reconfigurationTimestamp]


HMDCameraRecordingAudioCodec : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSCopying, NSSecureCoding>
 @property  long long type

  // class methods
  +[HMDCameraRecordingAudioCodec supportsSecureCoding]
  +[HMDCameraRecordingAudioCodec arrayWithCodecTypes:]

  // instance methods
  -[HMDCameraRecordingAudioCodec copyWithZone:]
  -[HMDCameraRecordingAudioCodec encodeWithCoder:]
  -[HMDCameraRecordingAudioCodec type]
  -[HMDCameraRecordingAudioCodec description:indent:]
  -[HMDCameraRecordingAudioCodec isEqual:]
  -[HMDCameraRecordingAudioCodec initWithCoder:]
  -[HMDCameraRecordingAudioCodec initWithTLVData:]
  -[HMDCameraRecordingAudioCodec initWithCodec:]


HMDCameraRecordingAudioBitRateMode : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSCopying, NSSecureCoding>
 @property  long long type

  // class methods
  +[HMDCameraRecordingAudioBitRateMode supportsSecureCoding]
  +[HMDCameraRecordingAudioBitRateMode arrayWithBitRateModes:]

  // instance methods
  -[HMDCameraRecordingAudioBitRateMode copyWithZone:]
  -[HMDCameraRecordingAudioBitRateMode encodeWithCoder:]
  -[HMDCameraRecordingAudioBitRateMode type]
  -[HMDCameraRecordingAudioBitRateMode description:indent:]
  -[HMDCameraRecordingAudioBitRateMode isEqual:]
  -[HMDCameraRecordingAudioBitRateMode initWithCoder:]
  -[HMDCameraRecordingAudioBitRateMode initWithTLVData:]
  -[HMDCameraRecordingAudioBitRateMode initWithBitRateMode:]


HMDCameraRecordingAudioSampleRate : HAPNumberParser /System/Library/Frameworks/CoreImage.framework/CoreImage <NSCopying, NSSecureCoding>
 @property  long long type

  // class methods
  +[HMDCameraRecordingAudioSampleRate supportsSecureCoding]
  +[HMDCameraRecordingAudioSampleRate arrayWithAudioSampleRates:]

  // instance methods
  -[HMDCameraRecordingAudioSampleRate copyWithZone:]
  -[HMDCameraRecordingAudioSampleRate encodeWithCoder:]
  -[HMDCameraRecordingAudioSampleRate type]
  -[HMDCameraRecordingAudioSampleRate description:indent:]
  -[HMDCameraRecordingAudioSampleRate isEqual:]
  -[HMDCameraRecordingAudioSampleRate initWithCoder:]
  -[HMDCameraRecordingAudioSampleRate initWithSampleRate:]
  -[HMDCameraRecordingAudioSampleRate initWithTLVData:]


HMDCameraRecordingAudioCodecParameters : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSNumber *audioChannelCount
 @property  NSArray *bitRateModes
 @property  NSArray *audioSampleRates
 @property  NSNumber *maxAudioBitRate

  // class methods
  +[HMDCameraRecordingAudioCodecParameters supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingAudioCodecParameters audioChannelCount]
  -[HMDCameraRecordingAudioCodecParameters .cxx_destruct]
  -[HMDCameraRecordingAudioCodecParameters encodeWithCoder:]
  -[HMDCameraRecordingAudioCodecParameters description:indent:]
  -[HMDCameraRecordingAudioCodecParameters tlvData]
  -[HMDCameraRecordingAudioCodecParameters initWithCoder:]
  -[HMDCameraRecordingAudioCodecParameters _parseFromTLVData]
  -[HMDCameraRecordingAudioCodecParameters audioSampleRates]
  -[HMDCameraRecordingAudioCodecParameters bitRateModes]
  -[HMDCameraRecordingAudioCodecParameters initWithChannelCount:bitRateModes:audioSampleRates:maxAudioBitRate:]
  -[HMDCameraRecordingAudioCodecParameters maxAudioBitRate]


HMDCameraRecordingAudioCodecConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  HMDCameraRecordingAudioCodec *codec
 @property  HMDCameraRecordingAudioCodecParameters *parameters

  // class methods
  +[HMDCameraRecordingAudioCodecConfiguration supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingAudioCodecConfiguration codec]
  -[HMDCameraRecordingAudioCodecConfiguration parameters]
  -[HMDCameraRecordingAudioCodecConfiguration .cxx_destruct]
  -[HMDCameraRecordingAudioCodecConfiguration encodeWithCoder:]
  -[HMDCameraRecordingAudioCodecConfiguration description:indent:]
  -[HMDCameraRecordingAudioCodecConfiguration tlvData]
  -[HMDCameraRecordingAudioCodecConfiguration initWithCoder:]
  -[HMDCameraRecordingAudioCodecConfiguration _parseFromTLVData]
  -[HMDCameraRecordingAudioCodecConfiguration initWithAudioCodec:codecParameters:]


HMDCameraRecordingSupportedAudioConfiguration : HAPTLVBase /System/Library/Frameworks/CoreImage.framework/CoreImage <HAPTLVCreateParse, NSSecureCoding>
 @property  NSArray *codecConfigurations

  // class methods
  +[HMDCameraRecordingSupportedAudioConfiguration supportsSecureCoding]

  // instance methods
  -[HMDCameraRecordingSupportedAudioConfiguration .cxx_destruct]
  -[HMDCameraRecordingSupportedAudioConfiguration encodeWithCoder:]
  -[HMDCameraRecordingSupportedAudioConfiguration description:indent:]
  -[HMDCameraRecordingSupportedAudioConfiguration tlvData]
  -[HMDCameraRecordingSupportedAudioConfiguration initWithCoder:]
  -[HMDCameraRecordingSupportedAudioConfiguration codecConfigurations]
  -[HMDCameraRecordingSupportedAudioConfiguration _parseFromTLVData]
  -[HMDCameraRecordingSupportedAudioConfiguration initWithCodecConfigurations:]


HMDDataStreamTargetControlProtocol : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMDDataStreamTargetControlProtocol sendTargetControlWhoAmIWithIdentifier:dataStreamProtocolDelegate:]


HMDMediaStreamConfig : AVCMediaStreamConfig /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 @property  unsigned int deviceLocalSSRC

  // instance methods
  -[HMDMediaStreamConfig deviceLocalSSRC]
  -[HMDMediaStreamConfig setDeviceLocalSSRC:]
  -[HMDMediaStreamConfig addToDescription:]


HMDVideoStreamConfig : HMDMediaStreamConfig
  // instance methods


HMDAudioStreamConfig : HMDMediaStreamConfig
  // instance methods


HMDUserActionPredictionSubscriber : NSObject /usr/lib/libc++.1.dylib
 @property  NSUUID *uuid
 @property  unsigned long predictionLimit

  // instance methods
  -[HMDUserActionPredictionSubscriber uuid]
  -[HMDUserActionPredictionSubscriber .cxx_destruct]
  -[HMDUserActionPredictionSubscriber isEqual:]
  -[HMDUserActionPredictionSubscriber predictionLimit]
  -[HMDUserActionPredictionSubscriber initWithUUID:predictionLimit:]


HMDHomeKitUserActionPredictionDataReceiver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFTimerDelegate, HMFLogging, HMFMessageReceiver, HMDUserActionPredictionDataReceiver>
 @property  NSMapTable *subscribedClientConnections
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSUUID *UUID
 @property  HMFMessageDispatcher *messageDispatcher
 @property  <HMDUserActionPredictionDataSource> *dataSource
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue

  // class methods
  +[HMDHomeKitUserActionPredictionDataReceiver logCategory]

  // instance methods
  -[HMDHomeKitUserActionPredictionDataReceiver messageTargetUUID]
  -[HMDHomeKitUserActionPredictionDataReceiver messageReceiveQueue]
  -[HMDHomeKitUserActionPredictionDataReceiver timerDidFire:]
  -[HMDHomeKitUserActionPredictionDataReceiver logIdentifier]
  -[HMDHomeKitUserActionPredictionDataReceiver setDataSource:]
  -[HMDHomeKitUserActionPredictionDataReceiver .cxx_destruct]
  -[HMDHomeKitUserActionPredictionDataReceiver workQueue]
  -[HMDHomeKitUserActionPredictionDataReceiver dataSource]
  -[HMDHomeKitUserActionPredictionDataReceiver messageDispatcher]
  -[HMDHomeKitUserActionPredictionDataReceiver UUID]
  -[HMDHomeKitUserActionPredictionDataReceiver initWithUUID:messageDispatcher:workQueue:]
  -[HMDHomeKitUserActionPredictionDataReceiver configureWithDataSource:]
  -[HMDHomeKitUserActionPredictionDataReceiver updatedUserActionPrediction:atSortedIndex:]
  -[HMDHomeKitUserActionPredictionDataReceiver removedUserActionPrediction:atSortedIndex:]
  -[HMDHomeKitUserActionPredictionDataReceiver initWithUUID:messageDispatcher:workQueue:timerFactory:]
  -[HMDHomeKitUserActionPredictionDataReceiver _notifySubscribersOfUpdateBelowLimit:]
  -[HMDHomeKitUserActionPredictionDataReceiver _handleSubscribeMessage:]
  -[HMDHomeKitUserActionPredictionDataReceiver _handleUnsubscribeMessage:]
  -[HMDHomeKitUserActionPredictionDataReceiver _handleUpdatePredictionMessage:]
  -[HMDHomeKitUserActionPredictionDataReceiver _handleRemovePredictionMessage:]
  -[HMDHomeKitUserActionPredictionDataReceiver _handleRemoveAllPredictionsMessage:]
  -[HMDHomeKitUserActionPredictionDataReceiver _debounceNotifySubscribersOfUpdateBelowLimit:]
  -[HMDHomeKitUserActionPredictionDataReceiver subscribedClientConnections]
  -[HMDHomeKitUserActionPredictionDataReceiver _notifySubscriber:clientConnection:messageName:payload:]
  -[HMDHomeKitUserActionPredictionDataReceiver decodeUserActionPredictionsFromMessage:error:]
  -[HMDHomeKitUserActionPredictionDataReceiver _addOrUpdateSubcriber:clientConnection:]
  -[HMDHomeKitUserActionPredictionDataReceiver _removeSubcriberWithUUID:clientConnection:]


HMDHTTPClientMessageTransport : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFHTTPClientDelegate, HMFLogging, HMFNetServiceDelegate>
 @property  HMFHTTPClient *client
 @property  BOOL running
 @property  <HMDHTTPClientMessageTransportDelegate> *delegate
 @property  NSUUID *identifier
 @property  HMFNetService *netService
 @property  HMDHTTPDevice *remoteDevice
 @property  NSUUID *sessionIdentifier
 @property  BOOL reachable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDHTTPClientMessageTransport logCategory]
  +[HMDHTTPClientMessageTransport shortDescription]

  // instance methods
  -[HMDHTTPClientMessageTransport client]
  -[HMDHTTPClientMessageTransport logIdentifier]
  -[HMDHTTPClientMessageTransport init]
  -[HMDHTTPClientMessageTransport dealloc]
  -[HMDHTTPClientMessageTransport netService]
  -[HMDHTTPClientMessageTransport .cxx_destruct]
  -[HMDHTTPClientMessageTransport identifier]
  -[HMDHTTPClientMessageTransport stop]
  -[HMDHTTPClientMessageTransport isReachable]
  -[HMDHTTPClientMessageTransport startWithCompletionHandler:]
  -[HMDHTTPClientMessageTransport descriptionWithPointer:]
  -[HMDHTTPClientMessageTransport sessionIdentifier]
  -[HMDHTTPClientMessageTransport shortDescription]
  -[HMDHTTPClientMessageTransport observeValueForKeyPath:ofObject:change:context:]
  -[HMDHTTPClientMessageTransport isRunning]
  -[HMDHTTPClientMessageTransport remoteDevice]
  -[HMDHTTPClientMessageTransport setDelegate:]
  -[HMDHTTPClientMessageTransport setRunning:]
  -[HMDHTTPClientMessageTransport delegate]
  -[HMDHTTPClientMessageTransport sendMessage:timeout:completionHandler:]
  -[HMDHTTPClientMessageTransport initWithIdentifier:netService:]
  -[HMDHTTPClientMessageTransport netService:didUpdateTXTRecord:]
  -[HMDHTTPClientMessageTransport _stopWithError:]
  -[HMDHTTPClientMessageTransport _receiveMessage]
  -[HMDHTTPClientMessageTransport _sendResponseMessage:forTransactionIdentifier:]
  -[HMDHTTPClientMessageTransport sendPingWithCompletionHandler:]
  -[HMDHTTPClientMessageTransport client:didRequestPingWithCompletionHandler:]
  -[HMDHTTPClientMessageTransport clientDidBecomeUnreachable:]


HMDAccessorySettingMessageMapper : HMDSettingMessageMapper
 @property  BOOL shouldAllowSharedAdminToEditConstraints

  // instance methods
  -[HMDAccessorySettingMessageMapper initWithIdentifier:queue:allowSharedAdminEditConstraints:]
  -[HMDAccessorySettingMessageMapper shouldAllowSharedAdminToEditConstraints]
  -[HMDAccessorySettingMessageMapper setShouldAllowSharedAdminToEditConstraints:]


HMDAccessorySettingsMessageHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  <HMDAccessorySettingsMessageController> *messageController
 @property  NSMapTable *settingMessageMap
 @property  HMFMessageDispatcher *messageDispatcher
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDUserMessagePolicy *onlyOwnerAllowedUserPolicy
 @property  HMDUserMessagePolicy *sharedAdminAllowedUserPolicy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDAccessorySettingsMessageHandler logCategory]

  // instance methods
  -[HMDAccessorySettingsMessageHandler .cxx_destruct]
  -[HMDAccessorySettingsMessageHandler workQueue]
  -[HMDAccessorySettingsMessageHandler messageDispatcher]
  -[HMDAccessorySettingsMessageHandler registerForMessages]
  -[HMDAccessorySettingsMessageHandler initWithQueue:delegate:]
  -[HMDAccessorySettingsMessageHandler setMessageDispatcher:]
  -[HMDAccessorySettingsMessageHandler settingMessageMap]
  -[HMDAccessorySettingsMessageHandler messageMapperForSetting:]
  -[HMDAccessorySettingsMessageHandler registerForSettingMessages:]
  -[HMDAccessorySettingsMessageHandler messageController]
  -[HMDAccessorySettingsMessageHandler unconfigureFromSetting:]
  -[HMDAccessorySettingsMessageHandler configureWithMessageDispatcher:home:]
  -[HMDAccessorySettingsMessageHandler configureForSetting:allowSharedAdminEditConstraints:]
  -[HMDAccessorySettingsMessageHandler relayUpdateValue:destination:completion:]
  -[HMDAccessorySettingsMessageHandler relayReplaceConstraints:constraintIdsToRemove:destination:completion:]
  -[HMDAccessorySettingsMessageHandler notifyOfUpdatedValue:setting:]
  -[HMDAccessorySettingsMessageHandler setOnlyOwnerAllowedUserPolicy:]
  -[HMDAccessorySettingsMessageHandler setSharedAdminAllowedUserPolicy:]
  -[HMDAccessorySettingsMessageHandler sharedAdminAllowedUserPolicy]
  -[HMDAccessorySettingsMessageHandler _handleSettingUpdateValue:]
  -[HMDAccessorySettingsMessageHandler _handleAddConstraint:]
  -[HMDAccessorySettingsMessageHandler _handleRemoveConstraint:]
  -[HMDAccessorySettingsMessageHandler _handleUpdatedConstraints:]
  -[HMDAccessorySettingsMessageHandler onlyOwnerAllowedUserPolicy]
  -[HMDAccessorySettingsMessageHandler _handleReplaceConstraints:]
  -[HMDAccessorySettingsMessageHandler _decodeUpdateValueMessagePayload:outValue:]


HMDRemoteMessageSerialization : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
  // class methods
  +[HMDRemoteMessageSerialization dictionaryForMessage:error:]
  +[HMDRemoteMessageSerialization remoteMessageWithDictonary:error:]
  +[HMDRemoteMessageSerialization remoteActivityFromDictionary:withName:]
  +[HMDRemoteMessageSerialization legacyNotificationMessage:]


HMDRemoteMessage : HMFMessage /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDHomeKitVersion *sourceVersion
 @property  long long type
 @property  NSUUID *transactionIdentifier
 @property  BOOL secure
 @property  unsigned long restriction
 @property  double timeout

  // class methods
  +[HMDRemoteMessage secureMessageWithName:destination:messagePayload:]
  +[HMDRemoteMessage secureMessageWithName:qualityOfService:destination:messagePayload:]

  // instance methods
  -[HMDRemoteMessage setSourceVersion:]
  -[HMDRemoteMessage isSecure]
  -[HMDRemoteMessage timeout]
  -[HMDRemoteMessage setSecure:]
  -[HMDRemoteMessage setTransactionIdentifier:]
  -[HMDRemoteMessage isRemote]
  -[HMDRemoteMessage setType:]
  -[HMDRemoteMessage .cxx_destruct]
  -[HMDRemoteMessage transactionIdentifier]
  -[HMDRemoteMessage descriptionWithPointer:]
  -[HMDRemoteMessage type]
  -[HMDRemoteMessage initWithName:destination:payload:]
  -[HMDRemoteMessage initWithName:qualityOfService:destination:payload:]
  -[HMDRemoteMessage sourceVersion]
  -[HMDRemoteMessage setResponseHandler:]
  -[HMDRemoteMessage initWithName:destination:payload:type:timeout:secure:]
  -[HMDRemoteMessage restriction]
  -[HMDRemoteMessage setRestriction:]
  -[HMDRemoteMessage setInternalResponseHandler:]
  -[HMDRemoteMessage initWithName:qualityOfService:destination:payload:type:timeout:secure:]
  -[HMDRemoteMessage initWithName:qualityOfService:destination:userInfo:headers:payload:]
  -[HMDRemoteMessage initWithName:destination:payload:type:timeout:secure:restriction:]
  -[HMDRemoteMessage initWithName:qualityOfService:destination:payload:type:timeout:secure:restriction:]


HMDRemoteMessageTransport : HMFMessageTransport /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDAccountRegistry *accountRegistry
 @property  BOOL secure
 @property  long long qualityOfService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteMessageTransport logCategory]
  +[HMDRemoteMessageTransport restriction]
  +[HMDRemoteMessageTransport remoteMessageFromMessage:secure:accountRegistry:]
  +[HMDRemoteMessageTransport remoteMessageTransportsForProductInfo:]

  // instance methods
  -[HMDRemoteMessageTransport isSecure]
  -[HMDRemoteMessageTransport init]
  -[HMDRemoteMessageTransport .cxx_destruct]
  -[HMDRemoteMessageTransport qualityOfService]
  -[HMDRemoteMessageTransport start]
  -[HMDRemoteMessageTransport canSendMessage:]
  -[HMDRemoteMessageTransport initWithAccountRegistry:]
  -[HMDRemoteMessageTransport remoteMessageFromMessage:]
  -[HMDRemoteMessageTransport accountRegistry]
  -[HMDRemoteMessageTransport matchResponse:requestedCapabilities:]
  -[HMDRemoteMessageTransport doesResponse:matchAllCapabilities:]
  -[HMDRemoteMessageTransport postDidReceiveRemoteMessageWithNoListenerFromDevice:]
  -[HMDRemoteMessageTransport compareCapability:key:withCapability:]


HMDDataStreamControlProtocol : NSObject /usr/lib/libc++.1.dylib <HMFLogging, HMDDataStreamProtocol>
 @property  NSString *logIdentifier
 @property  NSNumber *pendingHelloMessageIdentifier
 @property  BOOL helloMessageResponseReceived
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL active

  // class methods
  +[HMDDataStreamControlProtocol logCategory]

  // instance methods
  -[HMDDataStreamControlProtocol logIdentifier]
  -[HMDDataStreamControlProtocol .cxx_destruct]
  -[HMDDataStreamControlProtocol isActive]
  -[HMDDataStreamControlProtocol initWithLogIdentifier:]
  -[HMDDataStreamControlProtocol helloMessageResponseReceived]
  -[HMDDataStreamControlProtocol dataStream:didFailWithError:]
  -[HMDDataStreamControlProtocol dataStream:didReceiveResponse:header:payload:]
  -[HMDDataStreamControlProtocol dataStream:didReceiveEvent:header:payload:]
  -[HMDDataStreamControlProtocol dataStream:didReceiveRequest:header:payload:]
  -[HMDDataStreamControlProtocol dataStreamDidClose:]
  -[HMDDataStreamControlProtocol dataStreamDidOpen:]
  -[HMDDataStreamControlProtocol setPendingHelloMessageIdentifier:]
  -[HMDDataStreamControlProtocol pendingHelloMessageIdentifier]
  -[HMDDataStreamControlProtocol isExpectedHelloControlMessage:header:]
  -[HMDDataStreamControlProtocol setHelloMessageResponseReceived:]


HMDNaturalLightingCurveWriter : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFMessageReceiver, HMFLogging, HMDDevicePreferenceDataSource, HMFTimerDelegate>
 @property  NSUUID *UUID
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logIdentifier
 @property  @? timerFactory
 @property  HMDLightProfile *lightProfile
 @property  HMFTimer *periodicCharacteristicWriteTimer
 @property  double naturalLightingCurveUpdateInterval
 @property  double naturalLightingCurveUpdateAccessoryTimeDifferenceThreshold
 @property  <HMDLightProfileDataSource> *dataSource
 @property  NSNotificationCenter *notificationCenter
 @property  BOOL currentDevicePrimaryResident
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDNaturalLightingCurveWriter logCategory]

  // instance methods
  -[HMDNaturalLightingCurveWriter messageTargetUUID]
  -[HMDNaturalLightingCurveWriter notificationCenter]
  -[HMDNaturalLightingCurveWriter messageReceiveQueue]
  -[HMDNaturalLightingCurveWriter timerDidFire:]
  -[HMDNaturalLightingCurveWriter logIdentifier]
  -[HMDNaturalLightingCurveWriter lightProfile]
  -[HMDNaturalLightingCurveWriter .cxx_destruct]
  -[HMDNaturalLightingCurveWriter workQueue]
  -[HMDNaturalLightingCurveWriter setLightProfile:]
  -[HMDNaturalLightingCurveWriter dataSource]
  -[HMDNaturalLightingCurveWriter UUID]
  -[HMDNaturalLightingCurveWriter supportsDeviceWithCapabilities:]
  -[HMDNaturalLightingCurveWriter isCurrentDevicePrimaryResident]
  -[HMDNaturalLightingCurveWriter handlePrimaryResidentUpdateNotification:]
  -[HMDNaturalLightingCurveWriter timerFactory]
  -[HMDNaturalLightingCurveWriter naturalLightingCurveUpdateInterval]
  -[HMDNaturalLightingCurveWriter naturalLightingCurveUpdateAccessoryTimeDifferenceThreshold]
  -[HMDNaturalLightingCurveWriter initWithUUID:workQueue:logIdentifier:]
  -[HMDNaturalLightingCurveWriter configureWithLightProfile:]
  -[HMDNaturalLightingCurveWriter synchronizeCurveToAccessory]
  -[HMDNaturalLightingCurveWriter handleActiveTransitionContextUpdated:]
  -[HMDNaturalLightingCurveWriter initWithUUID:workQueue:logIdentifier:dataSource:notificationCenter:timerFactory:]
  -[HMDNaturalLightingCurveWriter setCurrentDevicePrimaryResident:]
  -[HMDNaturalLightingCurveWriter handleCurrentDevicePrimaryResidentChangedWithReason:]
  -[HMDNaturalLightingCurveWriter setPeriodicCharacteristicWriteTimer:]
  -[HMDNaturalLightingCurveWriter writeForNaturalLightingEnabledWithReason:]
  -[HMDNaturalLightingCurveWriter periodicCharacteristicWriteTimer]
  -[HMDNaturalLightingCurveWriter writeWithNaturalLightingEnabled:reason:completion:]


AWDHomeKitDataModelMigration : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned long duration

  // instance methods
  -[AWDHomeKitDataModelMigration copyWithZone:]
  -[AWDHomeKitDataModelMigration timestamp]
  -[AWDHomeKitDataModelMigration setTimestamp:]
  -[AWDHomeKitDataModelMigration setHasDuration:]
  -[AWDHomeKitDataModelMigration setHasTimestamp:]
  -[AWDHomeKitDataModelMigration readFrom:]
  -[AWDHomeKitDataModelMigration writeTo:]
  -[AWDHomeKitDataModelMigration isEqual:]
  -[AWDHomeKitDataModelMigration setDuration:]
  -[AWDHomeKitDataModelMigration copyTo:]
  -[AWDHomeKitDataModelMigration dictionaryRepresentation]
  -[AWDHomeKitDataModelMigration hasDuration]
  -[AWDHomeKitDataModelMigration mergeFrom:]
  -[AWDHomeKitDataModelMigration hasTimestamp]
  -[AWDHomeKitDataModelMigration duration]


HMDCameraClipModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSNumber *feedbackStatusField
 @property  NSDate *startDate
 @property  NSNumber *isComplete
 @property  unsigned long feedbackStatus
 @property  NSNumber *duration
 @property  NSNumber *targetFragmentDuration
 @property  NSNumber *maximumClipDuration
 @property  NSNumber *recordedLocally
 @property  NSString *streamingAssetVersion
 @property  NSData *encryptionKey
 @property  NSNumber *encryptionScheme
 @property  HMBStreamingAsset *videoStreamingAsset
 @property  NSArray *videoMetadata
 @property  NSArray *videoMetadataArray
 @property  HMBStreamingAsset *posterFramesStreamingAsset
 @property  NSArray *posterFramesMetadata
 @property  NSArray *posterFramesMetadataArray

  // class methods
  +[HMDCameraClipModel hmbQueries]
  +[HMDCameraClipModel hmbExternalRecordType]
  +[HMDCameraClipModel hmbProperties]
  +[HMDCameraClipModel sentinelParentUUID]
  +[HMDCameraClipModel clipsBetweenDatesQueryWithIsAscending:]
  +[HMDCameraClipModel incompleteClipsQuery]
  +[HMDCameraClipModel countOfClipsBetweenDatesQuery]
  +[HMDCameraClipModel clipsWithNeedsUploadFeedbackStatusQuery]

  // instance methods
  -[HMDCameraClipModel createClipWithSignificantEvents:]
  -[HMDCameraClipModel feedbackStatus]
  -[HMDCameraClipModel setFeedbackStatus:]


HMDCharacteristicRequest : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDCharacteristic *characteristic
 @property  id previousValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCharacteristicRequest logCategory]
  +[HMDCharacteristicRequest requestWithCharacteristic:]

  // instance methods
  -[HMDCharacteristicRequest previousValue]
  -[HMDCharacteristicRequest attributeDescriptions]
  -[HMDCharacteristicRequest initWithCharacteristic:]
  -[HMDCharacteristicRequest .cxx_destruct]
  -[HMDCharacteristicRequest isEqual:]
  -[HMDCharacteristicRequest characteristic]


HMDCharacteristicWriteRequest : HMDCharacteristicRequest
 @property  id value
 @property  NSData *authorizationData
 @property  NSUUID *identifier
 @property  unsigned long requestType
 @property  BOOL includeResponseValue

  // class methods
  +[HMDCharacteristicWriteRequest logCategory]
  +[HMDCharacteristicWriteRequest writeRequestWithCharacteristic:value:authorizationData:type:]
  +[HMDCharacteristicWriteRequest writeRequestWithCharacteristic:value:authorizationData:identifier:type:includeResponseValue:]
  +[HMDCharacteristicWriteRequest writeRequestForTransitionStartWithLightProfile:naturalLightingEnabled:startDate:type:dataSource:]
  +[HMDCharacteristicWriteRequest writeRequestForTransitionStartWithLightProfile:naturalLightingEnabled:startDate:type:]
  +[HMDCharacteristicWriteRequest writeRequestForTransitionFetchWithLightProfile:]
  +[HMDCharacteristicWriteRequest writeRequestWithCharacteristic:value:authorizationData:identifier:type:]

  // instance methods
  -[HMDCharacteristicWriteRequest attributeDescriptions]
  -[HMDCharacteristicWriteRequest requestType]
  -[HMDCharacteristicWriteRequest .cxx_destruct]
  -[HMDCharacteristicWriteRequest identifier]
  -[HMDCharacteristicWriteRequest value]
  -[HMDCharacteristicWriteRequest authorizationData]
  -[HMDCharacteristicWriteRequest includeResponseValue]
  -[HMDCharacteristicWriteRequest initWithCharacteristic:value:authorizationData:identifier:type:includeResponseValue:]


HMDCharacteristicResponse : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDCharacteristicRequest *request
 @property  id value
 @property  NSError *error
 @property  NSNumber *stateNumber
 @property  NSDate *valueUpdatedTime

  // class methods
  +[HMDCharacteristicResponse responseWithRequest:error:]
  +[HMDCharacteristicResponse responsesWithRequests:error:]

  // instance methods
  -[HMDCharacteristicResponse attributeDescriptions]
  -[HMDCharacteristicResponse initWithRequest:error:]
  -[HMDCharacteristicResponse .cxx_destruct]
  -[HMDCharacteristicResponse error]
  -[HMDCharacteristicResponse setValue:]
  -[HMDCharacteristicResponse value]
  -[HMDCharacteristicResponse valueUpdatedTime]
  -[HMDCharacteristicResponse request]
  -[HMDCharacteristicResponse stateNumber]
  -[HMDCharacteristicResponse setValue:updatedTime:stateNumber:]


HMObjectCacheHMDXPCBackgroundMessagePolicy : NSObject /usr/lib/libc++.1.dylib
  // class methods
  +[HMObjectCacheHMDXPCBackgroundMessagePolicy enabled]
  +[HMObjectCacheHMDXPCBackgroundMessagePolicy cachedInstanceForXPCBackgroundMessagePolicy:]


HMDXPCBackgroundMessagePolicy : HMFMessagePolicy /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  BOOL requiresEntitlement

  // class methods
  +[HMDXPCBackgroundMessagePolicy defaultPolicy]
  +[HMDXPCBackgroundMessagePolicy policyWithEntitlementRequirement:]

  // instance methods
  -[HMDXPCBackgroundMessagePolicy copyWithZone:]
  -[HMDXPCBackgroundMessagePolicy init]
  -[HMDXPCBackgroundMessagePolicy isEqual:]
  -[HMDXPCBackgroundMessagePolicy requiresEntitlement]
  -[HMDXPCBackgroundMessagePolicy __initWithEntitlementRequirement:]


HMDDiagnosticReporterLogObserver : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDLogEventObserver, HMFLogging>
 @property  NSObject<OS_dispatch_queue> *clientQueue
 @property  SDRDiagnosticReporter *reporter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDDiagnosticReporterLogObserver sharedObserver]
  +[HMDDiagnosticReporterLogObserver logCategory]
  +[HMDDiagnosticReporterLogObserver supportedEventTypes]
  +[HMDDiagnosticReporterLogObserver isSupportedEvent:]
  +[HMDDiagnosticReporterLogObserver domainForEvent:]
  +[HMDDiagnosticReporterLogObserver typeForEvent:]
  +[HMDDiagnosticReporterLogObserver subTypeForEvent:]

  // instance methods
  -[HMDDiagnosticReporterLogObserver init]
  -[HMDDiagnosticReporterLogObserver reporter]
  -[HMDDiagnosticReporterLogObserver .cxx_destruct]
  -[HMDDiagnosticReporterLogObserver clientQueue]
  -[HMDDiagnosticReporterLogObserver stop]
  -[HMDDiagnosticReporterLogObserver start]
  -[HMDDiagnosticReporterLogObserver didReceiveEventFromDispatcher:withLogContext:]
  -[HMDDiagnosticReporterLogObserver shouldSubmitEvent:withLogContext:]


HMDTriggerConfirmationTimer : HMFTimer /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSUUID *executionSessionID

  // instance methods
  -[HMDTriggerConfirmationTimer .cxx_destruct]
  -[HMDTriggerConfirmationTimer initWithExecutionSessionID:timeoutInterval:]
  -[HMDTriggerConfirmationTimer executionSessionID]


HMDAccessoryBrowserXPCMessageSendPolicy : HMDXPCMessageSendPolicy
 @property  unsigned long requiredEntitlements

  // instance methods
  -[HMDAccessoryBrowserXPCMessageSendPolicy copyWithZone:]
  -[HMDAccessoryBrowserXPCMessageSendPolicy init]
  -[HMDAccessoryBrowserXPCMessageSendPolicy requiredEntitlements]
  -[HMDAccessoryBrowserXPCMessageSendPolicy isEqual:]
  -[HMDAccessoryBrowserXPCMessageSendPolicy canSendWithPolicyParameters:]
  -[HMDAccessoryBrowserXPCMessageSendPolicy initWithRequiredEntitlements:]


HMDUserPresenceUpdateReason : NSObject /usr/lib/libc++.1.dylib
 @property  NSNumber *number
 @property  unsigned long value

  // class methods
  +[HMDUserPresenceUpdateReason reasonWithDict:]
  +[HMDUserPresenceUpdateReason reasonWithValue:]
  +[HMDUserPresenceUpdateReason reasonWithNumber:]
  +[HMDUserPresenceUpdateReason reasonWithMessage:]
  +[HMDUserPresenceUpdateReason reasonWithCoder:]

  // instance methods
  -[HMDUserPresenceUpdateReason number]
  -[HMDUserPresenceUpdateReason addToCoder:]
  -[HMDUserPresenceUpdateReason addToPayload:]
  -[HMDUserPresenceUpdateReason isEqual:]
  -[HMDUserPresenceUpdateReason value]
  -[HMDUserPresenceUpdateReason initWithNumber:]


HMDCameraSnapshotIDSStreamInitiator : HMDCameraSnapshotIDSStream <IDSServiceDelegate, HMFLogging>
 @property  NSString *destinationID
 @property  NSString *sendFileIdentifier
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  <HMDCameraSnapshotIDSStreamInitiatorDelegate> *delegate
 @property  HMDSnapshotFile *snapshotFile
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCameraSnapshotIDSStreamInitiator logCategory]

  // instance methods
  -[HMDCameraSnapshotIDSStreamInitiator logIdentifier]
  -[HMDCameraSnapshotIDSStreamInitiator delegateQueue]
  -[HMDCameraSnapshotIDSStreamInitiator dealloc]
  -[HMDCameraSnapshotIDSStreamInitiator destinationID]
  -[HMDCameraSnapshotIDSStreamInitiator setDestinationID:]
  -[HMDCameraSnapshotIDSStreamInitiator .cxx_destruct]
  -[HMDCameraSnapshotIDSStreamInitiator service:account:identifier:didSendWithSuccess:error:]
  -[HMDCameraSnapshotIDSStreamInitiator delegate]
  -[HMDCameraSnapshotIDSStreamInitiator sendFile:]
  -[HMDCameraSnapshotIDSStreamInitiator initWithSessionID:workQueue:destinationID:delegate:delegateQueue:]
  -[HMDCameraSnapshotIDSStreamInitiator setSnapshotFile:]
  -[HMDCameraSnapshotIDSStreamInitiator snapshotFile]
  -[HMDCameraSnapshotIDSStreamInitiator _callFileTransferFailed:]
  -[HMDCameraSnapshotIDSStreamInitiator _sendFile:]
  -[HMDCameraSnapshotIDSStreamInitiator setSendFileIdentifier:]
  -[HMDCameraSnapshotIDSStreamInitiator sendFileIdentifier]


HMDPersonSettingsModel : HMBModel /System/Library/PrivateFrameworks/HomeKitCore.framework/HomeKitCore
 @property  NSData *classificationNotificationSettingsData

  // class methods
  +[HMDPersonSettingsModel hmbExcludeFromCloudStorage]
  +[HMDPersonSettingsModel hmbProperties]
  +[HMDPersonSettingsModel sentinelParentUUID]
  +[HMDPersonSettingsModel sentinelModelUUID]

  // instance methods
  -[HMDPersonSettingsModel init]
  -[HMDPersonSettingsModel classificationNotificationsEnabledForPersonUUID:]
  -[HMDPersonSettingsModel setClassificationNotificationsEnabled:forPersonUUID:]
  -[HMDPersonSettingsModel unarchivedClassificationNotificationsEnabledForPersonUUID]
  -[HMDPersonSettingsModel archiveClassificationNotificationsEnabledForPersonUUID:]


HMDRemoteLoginHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMDHomeMessageReceiver, HMFLogging, NSSecureCoding>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMFMessageDispatcher *msgDispatcher
 @property  NSUUID *uuid
 @property  HMDRemoteLoginInitiator *initiator
 @property  HMDRemoteLoginReceiver *receiver
 @property  HMDAppleMediaAccessory *accessory
 @property  HMDRemoteLoginAnisetteDataHandler *anisetteDataHandler
 @property  ACAccount *loggedInAccount
 @property  NSSet *messageReceiverChildren
 @property  NSUUID *messageTargetUUID
 @property  NSObject<OS_dispatch_queue> *messageReceiveQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDRemoteLoginHandler supportsSecureCoding]
  +[HMDRemoteLoginHandler logCategory]
  +[HMDRemoteLoginHandler hasMessageReceiverChildren]
  +[HMDRemoteLoginHandler remoteMessages]

  // instance methods
  -[HMDRemoteLoginHandler messageTargetUUID]
  -[HMDRemoteLoginHandler messageReceiveQueue]
  -[HMDRemoteLoginHandler setWorkQueue:]
  -[HMDRemoteLoginHandler logIdentifier]
  -[HMDRemoteLoginHandler receiver]
  -[HMDRemoteLoginHandler uuid]
  -[HMDRemoteLoginHandler .cxx_destruct]
  -[HMDRemoteLoginHandler workQueue]
  -[HMDRemoteLoginHandler encodeWithCoder:]
  -[HMDRemoteLoginHandler setMsgDispatcher:]
  -[HMDRemoteLoginHandler msgDispatcher]
  -[HMDRemoteLoginHandler accessory]
  -[HMDRemoteLoginHandler registerForMessages]
  -[HMDRemoteLoginHandler initiator]
  -[HMDRemoteLoginHandler setLoggedInAccount:]
  -[HMDRemoteLoginHandler loggedInAccount]
  -[HMDRemoteLoginHandler initWithCoder:]
  -[HMDRemoteLoginHandler _initialize]
  -[HMDRemoteLoginHandler messageReceiverChildren]
  -[HMDRemoteLoginHandler configureWithWorkQueue:messageDispatcher:]
  -[HMDRemoteLoginHandler _updateLoggedInAccount:]
  -[HMDRemoteLoginHandler initWithAccessory:loggedInAccountData:]
  -[HMDRemoteLoginHandler _registerForUsernameUpdates]
  -[HMDRemoteLoginHandler _handleRemoteLoginAccount:message:]
  -[HMDRemoteLoginHandler anisetteDataHandler]
  -[HMDRemoteLoginHandler __handleUpdateLoggedInAccount:]
  -[HMDRemoteLoginHandler _sendAccountUpdateNotification:]
  -[HMDRemoteLoginHandler handleAccountUsernameUpdatedOnCurrentDevice:]


HMDNetworkRouterFirewallRuleLANStatic : HMDNetworkRouterFirewallRuleLAN
 @property  unsigned char transportProtocol
 @property  HMFNetAddress *ipAddress
 @property  unsigned short portStart
 @property  unsigned short portEnd
 @property  NSArray *icmpTypes

  // class methods
  +[HMDNetworkRouterFirewallRuleLANStatic createWithJSONDictionary:name:critical:purpose:allowInterAccessoryConnections:direction:requiredForHAPFunctionality:ruleDictionary:error:]

  // instance methods
  -[HMDNetworkRouterFirewallRuleLANStatic transportProtocol]
  -[HMDNetworkRouterFirewallRuleLANStatic attributeDescriptions]
  -[HMDNetworkRouterFirewallRuleLANStatic .cxx_destruct]
  -[HMDNetworkRouterFirewallRuleLANStatic portEnd]
  -[HMDNetworkRouterFirewallRuleLANStatic ipAddress]
  -[HMDNetworkRouterFirewallRuleLANStatic prettyJSONDictionary]
  -[HMDNetworkRouterFirewallRuleLANStatic icmpTypes]
  -[HMDNetworkRouterFirewallRuleLANStatic portStart]
  -[HMDNetworkRouterFirewallRuleLANStatic initWithJSONDictionary:name:critical:purpose:allowInterAccessoryConnections:direction:requiredForHAPFunctionality:transportProtocol:ipAddress:portStart:portEnd:icmpTypes:]


HMDCapabilityFlags : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <NSSecureCoding>
 @property  NSData *bytesData

  // class methods
  +[HMDCapabilityFlags supportsSecureCoding]
  +[HMDCapabilityFlags shortDescription]

  // instance methods
  -[HMDCapabilityFlags initWithCapabilities:]
  -[HMDCapabilityFlags .cxx_destruct]
  -[HMDCapabilityFlags initWithData:]
  -[HMDCapabilityFlags encodeWithCoder:]
  -[HMDCapabilityFlags hasCapabilities:]
  -[HMDCapabilityFlags initWithCoder:]
  -[HMDCapabilityFlags initWithCapabilityOptions:]
  -[HMDCapabilityFlags bytesData]


HMDSnapshotRequestHandler : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging, HMFTimerDelegate, HMDCameraStreamSnapshotHandlerDelegate, HMDSnapshotRequestHandlerProtocol>
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  NSString *logString
 @property  HMDAccessory *accessory
 @property  NSMutableArray *pendingRequests
 @property  HMFTimer *mostRecentSnapshotInvalidationTimer
 @property  HMDSnapshotFile *mostRecentSnapshot
 @property  HMDCameraStreamSnapshotHandler *streamSnapshotHandler
 @property  NSSet *supportedResolutions
 @property  NSString *imageCacheDirectory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDSnapshotRequestHandler logCategory]

  // instance methods
  -[HMDSnapshotRequestHandler logString]
  -[HMDSnapshotRequestHandler timerDidFire:]
  -[HMDSnapshotRequestHandler logIdentifier]
  -[HMDSnapshotRequestHandler pendingRequests]
  -[HMDSnapshotRequestHandler .cxx_destruct]
  -[HMDSnapshotRequestHandler workQueue]
  -[HMDSnapshotRequestHandler accessory]
  -[HMDSnapshotRequestHandler mostRecentSnapshot]
  -[HMDSnapshotRequestHandler setMostRecentSnapshot:]
  -[HMDSnapshotRequestHandler streamSnapshotHandler]
  -[HMDSnapshotRequestHandler requestSnapshot:streamingTierType:completionHandler:]
  -[HMDSnapshotRequestHandler streamSnapshotHandler:didGetNewSnapshot:]
  -[HMDSnapshotRequestHandler streamSnapshotHandler:didGetLastSnapshot:]
  -[HMDSnapshotRequestHandler initWithAccessory:workQueue:streamSnapshotHandler:imageCacheDirectory:logID:]
  -[HMDSnapshotRequestHandler imageCacheDirectory]
  -[HMDSnapshotRequestHandler mostRecentSnapshotInvalidationTimer]
  -[HMDSnapshotRequestHandler setMostRecentSnapshotInvalidationTimer:]
  -[HMDSnapshotRequestHandler supportedResolutions]
  -[HMDSnapshotRequestHandler _getSupportedVideoResolutions:streamingTierType:]
  -[HMDSnapshotRequestHandler _sendSnapshotRequest:streamingTierType:]
  -[HMDSnapshotRequestHandler _updateSnapshotOptions:withAccessory:snapshotReason:]
  -[HMDSnapshotRequestHandler _handleImageResourceData:error:requestedResolution:snapshotDataTrasaction:]
  -[HMDSnapshotRequestHandler _resolutionToRequest:]
  -[HMDSnapshotRequestHandler _snapshotRequestOptions:resolution:accessory:]
  -[HMDSnapshotRequestHandler _supportedResolutionWithType:]
  -[HMDSnapshotRequestHandler _handleSupportedParameters:sessionID:streamingTierType:]
  -[HMDSnapshotRequestHandler _prepareSupportedResolutionsWithVideoConfiguration:]
  -[HMDSnapshotRequestHandler setSupportedResolutions:]
  -[HMDSnapshotRequestHandler _saveSnapshotFile:]


HMDDataStreamBulkSendOpenSessionResult : NSObject /usr/lib/libc++.1.dylib
 @property  <HMDDataStreamBulkSendSession> *session
 @property  NSDictionary *payload

  // instance methods
  -[HMDDataStreamBulkSendOpenSessionResult payload]
  -[HMDDataStreamBulkSendOpenSessionResult attributeDescriptions]
  -[HMDDataStreamBulkSendOpenSessionResult session]
  -[HMDDataStreamBulkSendOpenSessionResult .cxx_destruct]
  -[HMDDataStreamBulkSendOpenSessionResult initWithSession:payload:]


HMDDuetEventManager : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  _CDClientContext *context
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  <_DKKnowledgeSaving> *saveStore
 @property  _DKKnowledgeStore *deleteStore
 @property  <_DKKnowledgeQuerying> *queryStore

  // class methods
  +[HMDDuetEventManager sharedInstance]
  +[HMDDuetEventManager eventTypeAsString:]
  +[HMDDuetEventManager identifierForType:eventValue:]
  +[HMDDuetEventManager eventStreamForType:]

  // instance methods
  -[HMDDuetEventManager context]
  -[HMDDuetEventManager setWorkQueue:]
  -[HMDDuetEventManager init]
  -[HMDDuetEventManager _handleHomeRemovedNotification:]
  -[HMDDuetEventManager .cxx_destruct]
  -[HMDDuetEventManager workQueue]
  -[HMDDuetEventManager setContext:]
  -[HMDDuetEventManager _handleServiceRemovedNotification:]
  -[HMDDuetEventManager _handleAccessoryRemovedNotification:]
  -[HMDDuetEventManager deleteStore]
  -[HMDDuetEventManager _handleRoomRemovedNotification:]
  -[HMDDuetEventManager _handleActionSetRemovedNotification:]
  -[HMDDuetEventManager saveStore]
  -[HMDDuetEventManager _logToCoreDuetStoreEventWithType:metadata:]
  -[HMDDuetEventManager _logEventWithType:startDate:endDate:typeIdentifier:metadata:]
  -[HMDDuetEventManager queryStore]
  -[HMDDuetEventManager _queryEventsOfType:fromDate:offset:limit:]
  -[HMDDuetEventManager _deleteEventsForHomeUUID:]
  -[HMDDuetEventManager _deleteEventsForAccessoryUUID:]
  -[HMDDuetEventManager _deleteEventsForServiceUUID:]
  -[HMDDuetEventManager _deleteEventsForRoomUUID:]
  -[HMDDuetEventManager _deleteEventsForActionSetUUID:]
  -[HMDDuetEventManager _deleteEventsOfType:fromDate:offset:limit:]
  -[HMDDuetEventManager _dumpEventsOfType:fromDate:offset:limit:]
  -[HMDDuetEventManager logEventWithType:startDate:endDate:typeIdentifier:metadata:]
  -[HMDDuetEventManager queryEventsOfType:fromDate:offset:limit:]
  -[HMDDuetEventManager deleteEventsOfType:fromDate:offset:limit:]
  -[HMDDuetEventManager resetAllEvents]
  -[HMDDuetEventManager dumpEventsOfType:fromDate:offset:limit:]
  -[HMDDuetEventManager dumpAllEvents]
  -[HMDDuetEventManager queryMostRecentEventWithCharacteristicType:serviceType:homeUUID:]
  -[HMDDuetEventManager setSaveStore:]
  -[HMDDuetEventManager setDeleteStore:]
  -[HMDDuetEventManager setQueryStore:]


HMDMPCSessionController : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSOperationQueue *speakerGroupCommandOperationQueue
 @property  HMDLogEventDispatcher *logEventDispatcher

  // instance methods
  -[HMDMPCSessionController .cxx_destruct]
  -[HMDMPCSessionController logEventDispatcher]
  -[HMDMPCSessionController initWithLogEventDispatcher:]
  -[HMDMPCSessionController executeSessionWithSessionData:completion:]
  -[HMDMPCSessionController speakerGroupCommandOperationQueue]


HMDCharacteristicsAvailabilityListener : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI <HMFLogging>
 @property  HMDHAPAccessory *accessory
 @property  NSObject<OS_dispatch_queue> *workQueue
 @property  HMDNotificationRegistration *notificationRegistration
 @property  NSSet *availableCharacteristics
 @property  NSString *logIdentifier
 @property  NSDictionary *interestedCharacteristicTypesByServiceType
 @property  <HMDCharacteristicsAvailabilityListenerDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[HMDCharacteristicsAvailabilityListener logCategory]

  // instance methods
  -[HMDCharacteristicsAvailabilityListener _registerForNotifications]
  -[HMDCharacteristicsAvailabilityListener logIdentifier]
  -[HMDCharacteristicsAvailabilityListener .cxx_destruct]
  -[HMDCharacteristicsAvailabilityListener workQueue]
  -[HMDCharacteristicsAvailabilityListener accessory]
  -[HMDCharacteristicsAvailabilityListener setDelegate:]
  -[HMDCharacteristicsAvailabilityListener _notifyDelegate]
  -[HMDCharacteristicsAvailabilityListener delegate]
  -[HMDCharacteristicsAvailabilityListener start]
  -[HMDCharacteristicsAvailabilityListener initWithAccessory:workQueue:interestedCharacteristicTypesByServiceType:]
  -[HMDCharacteristicsAvailabilityListener notificationRegistration]
  -[HMDCharacteristicsAvailabilityListener setAvailableCharacteristics:]
  -[HMDCharacteristicsAvailabilityListener availableCharacteristics]
  -[HMDCharacteristicsAvailabilityListener handleCharacteristicsUpdated:]
  -[HMDCharacteristicsAvailabilityListener handleServicesUpdated:]
  -[HMDCharacteristicsAvailabilityListener interestedCharacteristicTypesByServiceType]
  -[HMDCharacteristicsAvailabilityListener _accessoryCharacteristicsToObserve]


AWDHomeKitCameraRecordingClipNotification : PBCodable /System/Library/Frameworks/QuartzCore.framework/QuartzCore <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasDuration
 @property  unsigned long duration
 @property  BOOL hasCameraUUID
 @property  NSString *cameraUUID
 @property  BOOL hasSessionUUID
 @property  NSString *sessionUUID
 @property  BOOL hasRecordingEventTriggers
 @property  unsigned long recordingEventTriggers
 @property  BOOL hasSequenceNumber
 @property  unsigned long sequenceNumber

  // instance methods
  -[AWDHomeKitCameraRecordingClipNotification setHasSequenceNumber:]
  -[AWDHomeKitCameraRecordingClipNotification copyWithZone:]
  -[AWDHomeKitCameraRecordingClipNotification setSessionUUID:]
  -[AWDHomeKitCameraRecordingClipNotification hasSequenceNumber]
  -[AWDHomeKitCameraRecordingClipNotification setSequenceNumber:]
  -[AWDHomeKitCameraRecordingClipNotification sessionUUID]
  -[AWDHomeKitCameraRecordingClipNotification sequenceNumber]
  -[AWDHomeKitCameraRecordingClipNotification .cxx_destruct]
  -[AWDHomeKitCameraRecordingClipNotification timestamp]
  -[AWDHomeKitCameraRecordingClipNotification setTimestamp:]
  -[AWDHomeKitCameraRecordingClipNotification setHasDuration:]
  -[AWDHomeKitCameraRecordingClipNotification setHasTimestamp:]
  -[AWDHomeKitCameraRecordingClipNotification readFrom:]
  -[AWDHomeKitCameraRecordingClipNotification writeTo:]
  -[AWDHomeKitCameraRecordingClipNotification isEqual:]
  -[AWDHomeKitCameraRecordingClipNotification setDuration:]
  -[AWDHomeKitCameraRecordingClipNotification copyTo:]
  -[AWDHomeKitCameraRecordingClipNotification dictionaryRepresentation]
  -[AWDHomeKitCameraRecordingClipNotification recordingEventTriggers]
  -[AWDHomeKitCameraRecordingClipNotification hasDuration]
  -[AWDHomeKitCameraRecordingClipNotification mergeFrom:]
  -[AWDHomeKitCameraRecordingClipNotification hasTimestamp]
  -[AWDHomeKitCameraRecordingClipNotification setRecordingEventTriggers:]
  -[AWDHomeKitCameraRecordingClipNotification duration]
  -[AWDHomeKitCameraRecordingClipNotification hasSessionUUID]
  -[AWDHomeKitCameraRecordingClipNotification cameraUUID]
  -[AWDHomeKitCameraRecordingClipNotification setCameraUUID:]
  -[AWDHomeKitCameraRecordingClipNotification hasCameraUUID]
  -[AWDHomeKitCameraRecordingClipNotification setHasRecordingEventTriggers:]
  -[AWDHomeKitCameraRecordingClipNotification hasRecordingEventTriggers]


HMDMediaPropertyRequest : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  NSString *property
 @property  HMDMediaProfile *mediaProfile
 @property  id previousValue

  // class methods
  +[HMDMediaPropertyRequest requestWithProperty:mediaProfile:]
  +[HMDMediaPropertyRequest serializeReadRequests:]
  +[HMDMediaPropertyRequest deserializeReadRequests:mediaProfile:]

  // instance methods
  -[HMDMediaPropertyRequest previousValue]
  -[HMDMediaPropertyRequest .cxx_destruct]
  -[HMDMediaPropertyRequest property]
  -[HMDMediaPropertyRequest mediaProfile]
  -[HMDMediaPropertyRequest initWithProperty:mediaProfile:]


HMDMediaPropertyWriteRequest : HMDMediaPropertyRequest
 @property  id value
 @property  NSUUID *identifier

  // class methods
  +[HMDMediaPropertyWriteRequest requestWithProperty:mediaProfile:]
  +[HMDMediaPropertyWriteRequest serializeWriteRequests:]
  +[HMDMediaPropertyWriteRequest deserializeWriteRequests:mediaProfile:]
  +[HMDMediaPropertyWriteRequest writeRequestWithProperty:value:mediaProfile:]
  +[HMDMediaPropertyWriteRequest writeRequestWithProperty:value:mediaProfile:identifier:]

  // instance methods
  -[HMDMediaPropertyWriteRequest .cxx_destruct]
  -[HMDMediaPropertyWriteRequest identifier]
  -[HMDMediaPropertyWriteRequest value]
  -[HMDMediaPropertyWriteRequest initWithProperty:value:mediaProfile:identifier:]


HMDMediaPropertyResponse : HMFObject /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI
 @property  HMDMediaPropertyRequest *request
 @property  id value
 @property  NSError *error
 @property  NSNumber *stateNumber
 @property  NSDate *valueUpdatedTime

  // class methods
  +[HMDMediaPropertyResponse responsesFromSerializedResponse:requests:home:]
  +[HMDMediaPropertyResponse responseWithRequest:error:]
  +[HMDMediaPropertyResponse propertyResponsesFromRequests:error:]
  +[HMDMediaPropertyResponse serializeResponses:]
  +[HMDMediaPropertyResponse responseWithRequest:value:updatedTime:stateNumber:]
  +[HMDMediaPropertyResponse groupedProfileResponses:]

  // instance methods
  -[HMDMediaPropertyResponse initWithRequest:error:]
  -[HMDMediaPropertyResponse .cxx_destruct]
  -[HMDMediaPropertyResponse error]
  -[HMDMediaPropertyResponse setValue:]
  -[HMDMediaPropertyResponse value]
  -[HMDMediaPropertyResponse valueUpdatedTime]
  -[HMDMediaPropertyResponse request]
  -[HMDMediaPropertyResponse stateNumber]
  -[HMDMediaPropertyResponse initWithRequest:value:updatedTime:stateNumber:]


IDSAccount(HMDAccounts)
	// instance methods
	-[IDSAccount(HMDAccounts) hmd_handles]

HMFaceCrop(HMI)
	// instance methods
	-[HMFaceCrop(HMI) initWithHMIFaceCrop:]
	-[HMFaceCrop(HMI) createHMIFaceCrop]

HAPCharacteristicValueTransitionControllerContext(NaturalLighting)
	// instance methods
	-[HAPCharacteristicValueTransitionControllerContext(NaturalLighting) activeTransitionContext]
	-[HAPCharacteristicValueTransitionControllerContext(NaturalLighting) isNaturalLightingEnabled]

HAPCharacteristicValueTransitionState(NaturalLighting)
	// instance methods
	-[HAPCharacteristicValueTransitionState(NaturalLighting) isValid]
	-[HAPCharacteristicValueTransitionState(NaturalLighting) isNaturalLightingEnabledForCharacteristic:]
	-[HAPCharacteristicValueTransitionState(NaturalLighting) naturalLightingActiveTransitionContextForCharacteristic:]

HMFPreferences(MediaAccessories)
	// class methods
	+[HMFPreferences(MediaAccessories) load]

NAFuture(FirewallRuleManager)
	// instance methods
	-[NAFuture(FirewallRuleManager) blockAndWaitForCompletionWithError:]

IDSSession(HMDDevice)
	// class methods
	+[IDSSession(HMDDevice) hmd_sessionWithAccount:device:options:]

HMFActivity(FirewallRuleManager)
	// instance methods
	-[HMFActivity(FirewallRuleManager) logDefaultAndMarkWithObject:format:]
	-[HMFActivity(FirewallRuleManager) logErrorAndMarkWithObject:format:]
	-[HMFActivity(FirewallRuleManager) logInfoAndMarkWithObject:format:]
	-[HMFActivity(FirewallRuleManager) logDefaultAndMarkWithObject:reason:]
	-[HMFActivity(FirewallRuleManager) logInfoAndMarkWithObject:reason:]
	-[HMFActivity(FirewallRuleManager) logErrorAndMarkWithObject:reason:]
	-[HMFActivity(FirewallRuleManager) logDebugAndMarkWithObject:reason:]
	-[HMFActivity(FirewallRuleManager) logDebugAndMarkWithObject:format:]

HMAccessorySettingConstraint(Metadata)
	// class methods
	+[HMAccessorySettingConstraint(Metadata) constraintsWithArrayRepresenation:]
	+[HMAccessorySettingConstraint(Metadata) constraintWithDictonaryRepresentation:]
	+[HMAccessorySettingConstraint(Metadata) valueWithType:representation:]

	// instance methods
	-[HMAccessorySettingConstraint(Metadata) initWithModel:]
	-[HMAccessorySettingConstraint(Metadata) modelWithParentIdentifier:]

PHPerson(HMDPhotoLibrary)
	// instance methods
	-[PHPerson(HMDPhotoLibrary) createHMPerson]

PHFetchResult(HMDPhotoLibrary)
	// instance methods
	-[PHFetchResult(HMDPhotoLibrary) objects]
	-[PHFetchResult(HMDPhotoLibrary) faceCropDataByUUID]

NSCoder(RemoteTransport)
	// instance methods
	-[NSCoder(RemoteTransport) user]
	-[NSCoder(RemoteTransport) dataVersion]
	-[NSCoder(RemoteTransport) encodeArrayOfConditionalObjects:forKey:]
	-[NSCoder(RemoteTransport) encodeSetOfConditionalObjects:forKey:]
	-[NSCoder(RemoteTransport) decodeSetOfConditionalObjects:forKey:]
	-[NSCoder(RemoteTransport) applicationBundleIdentifier]
	-[NSCoder(RemoteTransport) isLocalStore]
	-[NSCoder(RemoteTransport) decodeArrayOfConditionalObjects:forKey:]
	-[NSCoder(RemoteTransport) supportedFeatures]
	-[NSCoder(RemoteTransport) isXPCTransport]
	-[NSCoder(RemoteTransport) isEntitledForSPIAccess]
	-[NSCoder(RemoteTransport) isRemoteTransport]
	-[NSCoder(RemoteTransport) isForNonAdminSharedUser]
	-[NSCoder(RemoteTransport) isRemoteTransportOnSameAccount]
	-[NSCoder(RemoteTransport) isEntitledToProvideAccessorySetupPayload]
	-[NSCoder(RemoteTransport) isAuthorizedForLocationAccess]
	-[NSCoder(RemoteTransport) hmd_homeManagerOptions]
	-[NSCoder(RemoteTransport) isRemoteGatewayCoder]
	-[NSCoder(RemoteTransport) isEntitledForHomeLocationAccess]
	-[NSCoder(RemoteTransport) isRemoteUserAdministrator]
	-[NSCoder(RemoteTransport) isSharedUser]
	-[NSCoder(RemoteTransport) isAtLeastDataVersion4]
	-[NSCoder(RemoteTransport) hmd_entitlements]
	-[NSCoder(RemoteTransport) hmd_message]

AVOutputDevice(HomeKit)
	// class methods
	+[AVOutputDevice(HomeKit) shouldRestrictConnectionWithUserPrivilege:]

HMFMessage(HMDXPCClientConnection)
	// class methods
	+[HMFMessage(HMDXPCClientConnection) entitledMessageWithName:messagePayload:]
	+[HMFMessage(HMDXPCClientConnection) entitledMessageWithName:identifier:messagePayload:]
	+[HMFMessage(HMDXPCClientConnection) nonSPIEntitledMessageWithName:messagePayload:]
	+[HMFMessage(HMDXPCClientConnection) internalMessageWithName:messagePayload:]
	+[HMFMessage(HMDXPCClientConnection) internalMessageWithName:destination:messagePayload:]
	+[HMFMessage(HMDXPCClientConnection) homeLocationAuthorizedAndEntitledMessageWithName:target:messagePayload:]
	+[HMFMessage(HMDXPCClientConnection) locationAuthorizedMessageWithName:messagePayload:]
	+[HMFMessage(HMDXPCClientConnection) internalMessageWithName:messagePayload:responseHandler:]

	// instance methods
	-[HMFMessage(HMDXPCClientConnection) isInternal]
	-[HMFMessage(HMDXPCClientConnection) clientName]
	-[HMFMessage(HMDXPCClientConnection) isBackground]
	-[HMFMessage(HMDXPCClientConnection) isRemote]
	-[HMFMessage(HMDXPCClientConnection) proxyConnection]
	-[HMFMessage(HMDXPCClientConnection) applicationBundleIdentifier]
	-[HMFMessage(HMDXPCClientConnection) entitlements]
	-[HMFMessage(HMDXPCClientConnection) transactionResult]
	-[HMFMessage(HMDXPCClientConnection) isEntitledForSPIAccess]
	-[HMFMessage(HMDXPCClientConnection) remoteSourceID]
	-[HMFMessage(HMDXPCClientConnection) isSecureRemote]
	-[HMFMessage(HMDXPCClientConnection) isEntitledToProvideAccessorySetupPayload]
	-[HMFMessage(HMDXPCClientConnection) remoteSourceDevice]
	-[HMFMessage(HMDXPCClientConnection) isAuthorizedForLocationAccess]
	-[HMFMessage(HMDXPCClientConnection) remoteUserPairingIdentity]
	-[HMFMessage(HMDXPCClientConnection) isEntitledForSecureAccess]
	-[HMFMessage(HMDXPCClientConnection) isEntitledForHomeLocationAccess]
	-[HMFMessage(HMDXPCClientConnection) isEntitledForShortcutsAutomationAccess]
	-[HMFMessage(HMDXPCClientConnection) isEntitledForAPIAccess]
	-[HMFMessage(HMDXPCClientConnection) isAuthorizedForHomeDataAccess]
	-[HMFMessage(HMDXPCClientConnection) isAuthorizedForMicrophoneAccess]
	-[HMFMessage(HMDXPCClientConnection) isEntitledForBackgroundMode]
	-[HMFMessage(HMDXPCClientConnection) companionAppBundleIdentifier]
	-[HMFMessage(HMDXPCClientConnection) homeManagerOptions]
	-[HMFMessage(HMDXPCClientConnection) requiresSPIEntitlement]
	-[HMFMessage(HMDXPCClientConnection) requiresNoSPIEntitlement]
	-[HMFMessage(HMDXPCClientConnection) requiresSetupPayloadEntitlement]
	-[HMFMessage(HMDXPCClientConnection) requiresCameraClipsEntitlement]
	-[HMFMessage(HMDXPCClientConnection) requiresMultiUserSetupEntitlement]
	-[HMFMessage(HMDXPCClientConnection) requiresPersonManagerEntitlement]
	-[HMFMessage(HMDXPCClientConnection) sourcePid]
	-[HMFMessage(HMDXPCClientConnection) sendPolicy]
	-[HMFMessage(HMDXPCClientConnection) isLocationAuthorized]
	-[HMFMessage(HMDXPCClientConnection) requiresHomeLocationEntitlement]
	-[HMFMessage(HMDXPCClientConnection) _supportsFeature:forCapabilitiesKey:]
	-[HMFMessage(HMDXPCClientConnection) supportsRequiredFeature:]
	-[HMFMessage(HMDXPCClientConnection) supportsRequestedFeature:]
	-[HMFMessage(HMDXPCClientConnection) remoteRestriction]
	-[HMFMessage(HMDXPCClientConnection) userForHome:]
	-[HMFMessage(HMDXPCClientConnection) hmd_safeUserInfo]

HMFMutableMessage(HMDXPCClientConnection)
	// class methods
	+[HMFMutableMessage(HMDXPCClientConnection) internalMessageWithName:messagePayload:]
	+[HMFMutableMessage(HMDXPCClientConnection) internalMessageWithName:destination:messagePayload:]
	+[HMFMutableMessage(HMDXPCClientConnection) internalMessageWithName:messagePayload:responseHandler:]

	// instance methods
	-[HMFMutableMessage(HMDXPCClientConnection) setInternal:]
	-[HMFMutableMessage(HMDXPCClientConnection) setRemote:]
	-[HMFMutableMessage(HMDXPCClientConnection) setSecureRemote:]
	-[HMFMutableMessage(HMDXPCClientConnection) setSendPolicy:]
	-[HMFMutableMessage(HMDXPCClientConnection) setRequiresSPIEntitlement]
	-[HMFMutableMessage(HMDXPCClientConnection) setRequiresSPIEntitlement:]
	-[HMFMutableMessage(HMDXPCClientConnection) setRequiresNoSPIEntitlement:]
	-[HMFMutableMessage(HMDXPCClientConnection) setRequiresNoSPIEntitlement]
	-[HMFMutableMessage(HMDXPCClientConnection) setRequiresSetupPayloadEntitlement]
	-[HMFMutableMessage(HMDXPCClientConnection) setRequiresCameraClipsEntitlement]
	-[HMFMutableMessage(HMDXPCClientConnection) setRequiresMultiUserSetupEntitlement]
	-[HMFMutableMessage(HMDXPCClientConnection) setRequiresPersonManagerEntitlement]
	-[HMFMutableMessage(HMDXPCClientConnection) setRemoteRestriction:]
	-[HMFMutableMessage(HMDXPCClientConnection) setRemoteSourceID:]

SAHAEntity(Logging)
	// instance methods
	-[SAHAEntity(Logging) shortDescription]

SAHABooleanValue(Logging)
	// instance methods
	-[SAHABooleanValue(Logging) shortDescription]

SAHAIntegerValue(Logging)
	// instance methods
	-[SAHAIntegerValue(Logging) shortDescription]

SAHAFloatValue(Logging)
	// instance methods
	-[SAHAFloatValue(Logging) shortDescription]

SAHAStringValue(Logging)
	// instance methods
	-[SAHAStringValue(Logging) shortDescription]

SAHAAttributeValue(Logging)
	// instance methods
	-[SAHAAttributeValue(Logging) shortDescription]

SAHAFilter(Logging)
	// instance methods
	-[SAHAFilter(Logging) shortDescription]

SAHAIdentifierListFilter(Logging)
	// instance methods
	-[SAHAIdentifierListFilter(Logging) shortDescription]

SAHASearchCriteriaFilter(Logging)
	// instance methods
	-[SAHASearchCriteriaFilter(Logging) shortDescription]

SAHAAction(Logging)
	// instance methods
	-[SAHAAction(Logging) shortDescription]

SAHAActionRequest(Logging)
	// instance methods
	-[SAHAActionRequest(Logging) shortDescription]

SAHAActionResult(Logging)
	// instance methods
	-[SAHAActionResult(Logging) shortDescription]

SAHACommand(Logging)
	// instance methods
	-[SAHACommand(Logging) shortDescription]

SAHACommandCompleted(Logging)
	// instance methods
	-[SAHACommandCompleted(Logging) contentDescription]
	-[SAHACommandCompleted(Logging) shortDescription]
	-[SAHACommandCompleted(Logging) headerDescription]

SAHACurrentHome(Logging)
	// instance methods
	-[SAHACurrentHome(Logging) shortDescription]

ACAccount(HMDRemoteLoginMessages)
	// instance methods
	-[ACAccount(HMDRemoteLoginMessages) description]
	-[ACAccount(HMDRemoteLoginMessages) messagePayload]

HMPerson(HMI)
	// instance methods
	-[HMPerson(HMI) createHMIPerson]
	-[HMPerson(HMI) initWithHMIPerson:]

CLLocationManager(HomeLocation)
	// class methods
	+[CLLocationManager(HomeLocation) regionDescription:]
	+[CLLocationManager(HomeLocation) referenceFrameDescription:]
	+[CLLocationManager(HomeLocation) convertAuthStatusToBool:]
	+[CLLocationManager(HomeLocation) locationAuthorizationDescription:]
	+[CLLocationManager(HomeLocation) regionStateDescription:]
	+[CLLocationManager(HomeLocation) convertToHMDLocationAuthorization:]
	+[CLLocationManager(HomeLocation) hmdLocationAuthorizationAsString:]
	+[CLLocationManager(HomeLocation) convertToHMDRegionState:]
	+[CLLocationManager(HomeLocation) hmdRegionStateAsString:]

(HomeLocation)
	// class methods
	+[(HomeLocation) dictionaryWithActionExecutionError:]

	// instance methods
	-[(HomeLocation) locationFromDataForKey:]
	-[(HomeLocation) regionFromDataForKey:]
	-[(HomeLocation) valueOfCharacteristic:error:]
	-[(HomeLocation) isValidResponseForWriteRequest:naturalLightingEnabled:error:]
	-[(HomeLocation) responseByRemovingEntriesForCharacteristics:]

(HomeKitCKError)
	// class methods
	+[(HomeKitCKError) hmErrorWithCode:userInfo:]
	+[(HomeKitCKError) hmInternalErrorWithCode:underlyingError:]
	+[(HomeKitCKError) hmErrorWithCode:description:reason:suggestion:]
	+[(HomeKitCKError) hmInternalErrorWithCode:]
	+[(HomeKitCKError) hmPrivateErrorWithCode:]
	+[(HomeKitCKError) hmInternalErrorWithCode:userInfo:]
	+[(HomeKitCKError) hmPrivateErrorWithCode:underlyingError:]
	+[(HomeKitCKError) hmErrorWithCode:]
	+[(HomeKitCKError) hmErrorWithCode:description:reason:suggestion:underlyingError:]
	+[(HomeKitCKError) hmd_HTTPMessageTransportErrorWithCode:]
	+[(HomeKitCKError) errorWithSQLite3Context:]
	+[(HomeKitCKError) errorWithSQLite3Context:statement:]
	+[(HomeKitCKError) errorWithSQLite3Statement:]

	// instance methods
	-[(HomeKitCKError) isHMError]
	-[(HomeKitCKError) actualCKErrorFromCKErrorPartialFailure:]
	-[(HomeKitCKError) conciseCKError]
	-[(HomeKitCKError) hmErrorFromCKError]
	-[(HomeKitCKError) isCKError]
	-[(HomeKitCKError) isNonRecoverableCKError]
	-[(HomeKitCKError) convertToCKError]

(Compression)
	// class methods
	+[(Compression) dataWithSQLite3ColumnNoCopy:column:]
	+[(Compression) dataWithSQLite3Column:column:]

	// instance methods
	-[(Compression) compress]
	-[(Compression) stringInHexFormat]
	-[(Compression) generateSHA1]
	-[(Compression) uncompress]

HMHomePersonManagerSettings(HMD)
	// instance methods
	-[HMHomePersonManagerSettings(HMD) createHMIExternalPersonManagerSettings]
	-[HMHomePersonManagerSettings(HMD) requiresPersistentStorage]
	-[HMHomePersonManagerSettings(HMD) createHMIHomePersonManagerSettings]
	-[HMHomePersonManagerSettings(HMD) createHMPhotosPersonManagerSettings]
	-[HMHomePersonManagerSettings(HMD) createHMHomePersonManagerSettings]

CLRegion(HMFObject)
	// class methods
	+[CLRegion(HMFObject) shortDescription]

	// instance methods
	-[CLRegion(HMFObject) description]
	-[CLRegion(HMFObject) privateDescription]
	-[CLRegion(HMFObject) shortDescription]

CLCircularRegion(HMFObject)
	// instance methods
	-[CLCircularRegion(HMFObject) attributeDescriptions]
	-[CLCircularRegion(HMFObject) description]

CLBeaconRegion(HMFObject)
	// instance methods
	-[CLBeaconRegion(HMFObject) attributeDescriptions]
	-[CLBeaconRegion(HMFObject) description]

HMAccessoryCategory(HMDHAPMetadata)
	// class methods
	+[HMAccessoryCategory(HMDHAPMetadata) categoryWithIdentifier:]
	+[HMAccessoryCategory(HMDHAPMetadata) categoryWithCategoryIdentifier:]
	+[HMAccessoryCategory(HMDHAPMetadata) categoryForProductInfo:]
	+[HMAccessoryCategory(HMDHAPMetadata) categoryIdentifierForCategory:]
	+[HMAccessoryCategory(HMDHAPMetadata) categoryForProductClass:]

(StringToURL)
HMPhotosPersonManagerSettings(HMD)
	// instance methods
	-[HMPhotosPersonManagerSettings(HMD) createHMIExternalPersonManagerSettings]
	-[HMPhotosPersonManagerSettings(HMD) requiresPersistentStorage]
	-[HMPhotosPersonManagerSettings(HMD) createHMIHomePersonManagerSettings]
	-[HMPhotosPersonManagerSettings(HMD) createHMPhotosPersonManagerSettings]
	-[HMPhotosPersonManagerSettings(HMD) createHMHomePersonManagerSettings]

AVOutputDeviceAuthorizedPeer(HAPPairingIdentity)
	// instance methods
	-[AVOutputDeviceAuthorizedPeer(HAPPairingIdentity) hmd_pairingIdentity]

HAPCharacteristicValueTransitionControlResponse(NaturalLighting)
	// instance methods
	-[HAPCharacteristicValueTransitionControlResponse(NaturalLighting) isNaturalLightingEnabledForCharacteristic:]

(HomeKit)
	// class methods
	+[(HomeKit) stringWithSQLite3Column:column:]

	// instance methods
	-[(HomeKit) generateSHA1]

(HomeKit)
	// class methods
	+[(HomeKit) dayOfTheWeek]
	+[(HomeKit) iso8601dateFromString:]

NSMapTable(HomeKit)
	// instance methods
	-[NSMapTable(HomeKit) allKeys]

NSUUID(HomeKitClient)
	// class methods
	+[NSUUID(HomeKitClient) deriveUUIDFromBaseUUID:identifierSalt:withSalts:]
	+[NSUUID(HomeKitClient) uuid:identifierSalt:withSalts:]
	+[NSUUID(HomeKitClient) deriveUUIDFromBaseUUID:identifierSalt:]
	+[NSUUID(HomeKitClient) deriveUUIDForAssistantFromBaseUUID:]
	+[NSUUID(HomeKitClient) deriveUUIDForAssistantFromBaseUUID:withSalts:]
	+[NSUUID(HomeKitClient) setIdentifierSalt:assistantSalt:]
	+[NSUUID(HomeKitClient) deriveUUIDFromBaseUUID:withSalts:]
	+[NSUUID(HomeKitClient) deriveUUIDFromBaseUUID:]

	// instance methods
	-[NSUUID(HomeKitClient) convertToData]

IDSService(HMDAccounts)
	// instance methods
	-[IDSService(HMDAccounts) hmd_handles]
	-[IDSService(HMDAccounts) hmd_isActive]
	-[IDSService(HMDAccounts) hmd_preferredHandle]
	-[IDSService(HMDAccounts) hmd_localDeviceHandle]

CKRecordID(HMDBackingStoreLocal)
	// class methods
	+[CKRecordID(HMDBackingStoreLocal) parseFromString:]

	// instance methods
	-[CKRecordID(HMDBackingStoreLocal) encodeForKey]

SZExtractor(HMFDigest)
	// class methods
	+[SZExtractor(HMFDigest) optionsForArchiveURL:digest:]

HMSoftwareUpdateDocumentation(NSBundle)
	// class methods
	+[HMSoftwareUpdateDocumentation(NSBundle) localizationsForBundle:]

	// instance methods
	-[HMSoftwareUpdateDocumentation(NSBundle) initWithBundle:]

HMICameraVideoAnalyzer(HMDCameraRecordingSessionFactory)
HMBMirrorInput(FirewallRuleManager)
	// class methods
	+[HMBMirrorInput(FirewallRuleManager) frmSyncCommitWithMirrorInput:options:error:]

	// instance methods
	-[HMBMirrorInput(FirewallRuleManager) frmSyncCommitWithOptions:error:]

HAPCharacteristicValueLinearDerivedTransitionPoint(NaturalLighting)
	// class methods
	+[HAPCharacteristicValueLinearDerivedTransitionPoint(NaturalLighting) transitionPointWithMinimumBrightness:minimumBrightnessColorTemperature:maximumBrightness:maximumBrightnessColorTemperature:targetCompletionDuration:]
	+[HAPCharacteristicValueLinearDerivedTransitionPoint(NaturalLighting) transitionPointWithPreviousTransitionPoint:nextTransitionPoint:timeElapsedSincePreviousTransitionPoint:minimumBrightness:maximumBrightness:]

	// instance methods
	-[HAPCharacteristicValueLinearDerivedTransitionPoint(NaturalLighting) colorTemperatureForBrightness:]

HMFVersion(HMDBackingStoreLocal)
	// instance methods
	-[HMFVersion(HMDBackingStoreLocal) isLessThan:]
	-[HMFVersion(HMDBackingStoreLocal) isGreaterThan:]
	-[HMFVersion(HMDBackingStoreLocal) isGreaterThanOrEqualTo:]
	-[HMFVersion(HMDBackingStoreLocal) isLessThanOrEqualTo:]

HAPCharacteristicValueTransitionControl(NaturalLighting)
	// instance methods
	-[HAPCharacteristicValueTransitionControl(NaturalLighting) naturalLightingActiveTransitionContextForCharacteristic:]
	-[HAPCharacteristicValueTransitionControl(NaturalLighting) naturalLightingEnabledForCharacteristic:]

HMSetupAccessoryPayload(Internal)
	// instance methods
	-[HMSetupAccessoryPayload(Internal) debugDescription]
	-[HMSetupAccessoryPayload(Internal) flagsDescription]

HMSetupAccessoryDescription(Internal)
	// instance methods
	-[HMSetupAccessoryDescription(Internal) debugDescription]
	-[HMSetupAccessoryDescription(Internal) matchesSetupID:serverIdentifier:]
	-[HMSetupAccessoryDescription(Internal) matchesAccessoryServer:]

HMFaceprint(HMI)
	// instance methods
	-[HMFaceprint(HMI) createHMIFaceprint]
	-[HMFaceprint(HMI) initWithHMIFaceprint:]

HAPPairingIdentity(HMDUser)
	// class methods
	+[HAPPairingIdentity(HMDUser) hmd_pairingIdentityWithDictionary:]

	// instance methods
	-[HAPPairingIdentity(HMDUser) hmd_dictionaryEncoding]

HAPCharacteristicValueActiveTransitionContext(Validator)
	// instance methods
	-[HAPCharacteristicValueActiveTransitionContext(Validator) isValid]

HMPersonFaceCrop(HMI)
	// instance methods
	-[HMPersonFaceCrop(HMI) createHMIPersonFaceCrop]
	-[HMPersonFaceCrop(HMI) initWithHMIPersonFaceCrop:]

HMCameraActivityZone(HMI)
	// instance methods
	-[HMCameraActivityZone(HMI) createHMIActivityZoneWithIsInclusion:]

IDSDevice(HMDAccounts)
	// instance methods
	-[IDSDevice(HMDAccounts) hmd_handlesForService:]
	-[IDSDevice(HMDAccounts) hmd_productInfo]
	-[IDSDevice(HMDAccounts) hmd_version]
	-[IDSDevice(HMDAccounts) hmd_capabilities]
	-[IDSDevice(HMDAccounts) hmd_preferredHandleForService:]

HAPCharacteristicValueTransition(NaturalLighting)
	// class methods
	+[HAPCharacteristicValueTransition(NaturalLighting) naturalLightingValueTransitionWithLightProfile:naturalLightingEnabled:startDate:dataSource:]
	+[HAPCharacteristicValueTransition(NaturalLighting) updateTransition:withCurve:brightnessCharacteristic:millisecondsElapsedSinceStartOfDay:transitionStartTimeInMilliseconds:]

	// instance methods
	-[HAPCharacteristicValueTransition(NaturalLighting) naturalLightingActiveTransitionContextForCharacteristic:]
	-[HAPCharacteristicValueTransition(NaturalLighting) naturalLightingActiveTransitionContextLightProfile:]

CLLocation(HMFObject)
	// class methods
	+[CLLocation(HMFObject) shortDescription]

	// instance methods
	-[CLLocation(HMFObject) attributeDescriptions]
	-[CLLocation(HMFObject) description]
	-[CLLocation(HMFObject) privateDescription]
	-[CLLocation(HMFObject) shortDescription]

HMFNetService(HMDHTTPClientMessageTransport)
	// instance methods
	-[HMFNetService(HMDHTTPClientMessageTransport) hmd_sessionIdentifier]

_DKEventStream(Logging)
	// instance methods
	-[_DKEventStream(Logging) shortDescription]

_DKEvent(Logging)
	// instance methods
	-[_DKEvent(Logging) shortDescription]

01 00 1e00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 1e00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 2100 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFSecurityConnection 
01 00 2100 /System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices: AFSettingsConnection 
01 00 2400 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAccountManager 
01 00 2400 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAnisetteData 
01 00 2400 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAnisetteProvisioningController 
01 00 2400 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationContext 
01 00 2400 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 2400 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKDevice 
01 00 1d00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthenticateOptions 
01 00 1d00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthenticateRequest 
01 00 1d00 /System/Library/PrivateFrameworks/AppleMediaServices.framework/AppleMediaServices: AMSAuthenticateTask 
01 00 1f00 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 1900 /System/Library/PrivateFrameworks/AirPlayRoutePrediction.framework/AirPlayRoutePrediction: ARPHomeControlSuggester 
01 00 2200 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVAudioClient 
01 00 2200 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCAudioStream 
01 00 2200 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCMediaStreamConfig 
01 00 2200 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCNetworkAddress 
01 00 2200 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCPacketFilterRTP 
01 00 2200 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCPacketRelay 
01 00 2200 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCPacketRelayConnection 
01 00 2200 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCRemoteVideoClient 
01 00 2200 /System/Library/PrivateFrameworks/AVConference.framework/AVConference: AVCVideoStream 
01 00 2300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVOutputDevice 
01 00 2300 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVOutputDeviceAuthorizedPeer 
01 00 1c00 /System/Library/PrivateFrameworks/Celestial.framework/Celestial: AVSystemController 
01 00 4e00 /System/Library/PrivateFrameworks/WirelessDiagnostics.framework/WirelessDiagnostics: AWDServerConnection 
01 00 0a00 /System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard: BSPortDeathWatcher 
01 00 4400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAContext 
01 00 1600 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CARSessionStatus 
01 00 4400 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAsset 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerID 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchDatabaseChangesOperation 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesConfiguration 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperation 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZonesOperation 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordsOperation 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchSubscriptionsOperation 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperation 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperation 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifySubscriptionsOperation 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationGroup 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQuery 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQueryOperation 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneSubscription 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKStreamingAssetAppendContext 
01 00 2600 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKUserIdentityLookupInfo 
01 00 2d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLBeaconRegion 
01 00 2d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLCircularRegion 
01 00 2d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLGeocoder 
01 00 2d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 2d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocationManager 
01 00 2d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLRegion 
01 00 2700 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 2700 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 2700 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 2700 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 1200 /System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight: CSSearchableIndex 
01 00 3100 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUBLEAdvertiser 
01 00 3100 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUBLEScanner 
01 00 3100 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CULiveAction 
01 00 3100 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUWACSession 
01 00 3100 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUWiFiScanner 
01 00 0700 /System/Library/Frameworks/CallKit.framework/CallKit: CXCallObserver 
01 00 0900 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpController 
01 00 0900 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpItem 
01 00 3200 /System/Library/PrivateFrameworks/FindMyDevice.framework/FindMyDevice: FMDFMIPManager 
01 00 0600 /System/Library/PrivateFrameworks/FMF.framework/FMF: FMFSession 
01 00 3400 /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices: GEOAlmanac 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessory 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryInfo 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryServer 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryServerBTLE 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryServerBrowser 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryServerBrowserBTLE 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryServerBrowserIP 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryServerBrowserRelay 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryServerIP 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPAccessoryWiFiConfiguration 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPArrayWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPBTLECentralManager 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristic 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicConfigurationRequestTuple 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicResponseTuple 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueActiveTransitionContext 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueLinearDerivedTransition 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueLinearDerivedTransitionPoint 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueRange 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueTransition 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueTransitionControl 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueTransitionControlResponse 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueTransitionControllerContext 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueTransitionEndBehaviorWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueTransitionFetch 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueTransitionStart 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicValueTransitionState 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPCharacteristicWriteRequestTuple 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDataStreamHAPAccessoryPayload 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDataStreamHAPControllerPayload 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDataStreamTransportCommandWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDataStreamTransportInterruptPayload 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDataStreamTransportProtocolWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDataStreamTransportSetup 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDataStreamTransportSetupResponse 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDataStreamTransportSupportedConfiguration 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPDataWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPFragmentationPacket 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPFragmentationStream 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPMetadata 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPMetadataTuple 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPNFCReaderNotification 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPNotification 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPNumberParser 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPNumberWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPPairSetupSession 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPPairingIdentity 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPRelayAccessory 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPRelayActivationClient 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPRelayPairingClient 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPRelayStream 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPSelectedAudioStreamConfiguration 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPStringWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPSupportedAudioStreamConfigurations 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPSupportedCharacteristicValueTransitionConfiguration 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPSupportedDiagnosticsSnapshot 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPSystemKeychainStore 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPTLVBase 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPTLVCreator 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPTLVFloatNumberValue 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPTLVSignedNumberValue 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPTLVUnsignedNumberValue 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPTunneledAccessoryBTLE 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPUUIDWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPWiFiConfigurationControl 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPWiFiConfigurationOperationTypeWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPWiFiSecurityModeWrapper 
01 00 2b00 /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP: HAPWiFiStationConfiguration 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMAccessoryCategory 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMAccessoryCollectionSettingItem 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMAccessoryDiagnosticsMetadata 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMAccessorySelectionSettingItem 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMAccessorySettingConstraint 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMAssistantAccessControl 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBAction 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBCloudDatabase 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBCloudDatabaseConfiguration 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBCloudZone 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBCloudZoneConfiguration 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBCloudZoneID 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBCloudZoneStateModel 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBLocalDatabase 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBMirrorInput 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModel 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModelCloudReference 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModelContainer 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModelCountMatchesQuery 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModelField 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModelFieldOption 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModelInfiniteQuery 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModelQueryArgument 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModelReference 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBModelUnindexedQuery 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBMutableAction 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBMutableCloudDatabaseConfiguration 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBMutableCloudZoneConfiguration 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBMutableModelField 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBProcessingOptions 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBShareInvitation 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBShareInvitationContext 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBShareUserID 
01 00 3700 /System/Library/PrivateFrameworks/HomeKitBackingStore.framework/HomeKitBackingStore: HMBStreamingAsset 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMBulletinObjectTuple 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraActivityZone 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraBulletinBoardSmartNotification 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraClip 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraClipAssetContext 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraClipEncryptionContext 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraClipEncryptionManager 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraClipPosterFrame 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraClipSignificantEvent 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraClipVideoDataSegment 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraClipVideoInitSegment 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraObjectFetchServer 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraRecordingReachabilityEvent 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraSignificantEvent 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraStreamPreferences 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMCameraUserNotificationSettings 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFActivity 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFAssertion 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFAttributeDescription 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFBlockOperation 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFBoolean 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFCache 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFDumpCategory 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFExponentialBackoffTimer 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFHTTPClient 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFHTTPClientConfiguration 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFHTTPRequestHandler 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFHTTPServer 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFKey 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFLocationAuthorization 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFLogCategory 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFLogEventSessionVoucher 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMACAddress 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMemoryMonitor 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessage 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageDestination 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageDispatcher 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageFilter 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessagePolicy 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMessageTransport 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMutableHTTPRequest 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFMutableMessage 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetAddress 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetManager 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetMonitor 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetService 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFNetServiceBrowser 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFOSTransaction 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObject 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFObjectObserver 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFOperation 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFOperationBudget 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPairingIdentity 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPairingKey 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPowerLogger 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPowerManager 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPreference 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPreferences 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFPrivateObjectFormatter 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFProcessInfo 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFProductInfo 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFScheduler 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFSoftwareVersion 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFStringIndentation 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFSystemInfo 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFSystemPreference 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFTimer 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFUnfairLock 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFVersion 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFWiFiManager 
01 00 3500 /System/Library/PrivateFrameworks/HMFoundation.framework/HMFoundation: HMFWiFiNetworkInfo 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMFaceClassification 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMFaceCrop 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMFaceprint 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHTMLDocument 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHome 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHomeInvitationData 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHomeManager 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHomePersonManager 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMHomePersonManagerSettings 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMICamera 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMICameraActivityZone 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMICameraVideoAnalyzer 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMICameraVideoAnalyzerConfiguration 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMICameraVideoFragment 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIExternalPersonManager 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIFaceCrop 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIFaceDetectorVision 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIFaceprint 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIFeedback 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIHomePersonManager 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIMutableExternalPersonManagerSettings 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIMutableHomePersonManagerSettings 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIPerson 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIPersonFaceCrop 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIPoint 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMISystemResourceUsageMonitor 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIVideoAnalyzerEventFace 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIVideoAnalyzerEventPerson 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIVideoAnalyzerEventPet 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIVideoAnalyzerEventVehicle 
01 00 3600 /System/Library/PrivateFrameworks/HomeAI.framework/HomeAI: HMIVideoFragment 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMIncomingHomeInvitationData 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMLightProfileSettings 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMMediaSystemRole 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMMutableCameraUserNotificationSettings 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMMutableHomePersonManagerSettings 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMMutablePerson 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMMutablePhotosPersonManagerSettings 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMOutgoingHomeInvitationData 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPBMetadataCategory 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPBMetadataCharacteristic 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPBMetadataService 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPerson 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPersonFaceCrop 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPersonLink 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPersonSettingsManager 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPhotosPersonManager 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPhotosPersonManagerSettings 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMPresenceEventActivation 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMSettingValue 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMSetupAccessoryDescription 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMSetupAccessoryPayload 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMSoftwareUpdateDocumentation 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMSoftwareUpdateDocumentationMetadata 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMSymptom 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMUserActionPrediction 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMUserCloudShareRepairInfo 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMUserPresenceAuthorization 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: HMUserPresenceCompute 
01 00 3900 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSAccount 
01 00 3900 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSActivityMonitor 
01 00 3900 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSDevice 
01 00 3900 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSDeviceConnection 
01 00 3900 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSService 
01 00 3900 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSSession 
01 00 3900 /System/Library/PrivateFrameworks/IDS.framework/IDS: IDSURI 
01 00 1100 /System/Library/Frameworks/Intents.framework/Intents: INControlHomeIntent 
01 00 1100 /System/Library/Frameworks/Intents.framework/Intents: INHomeAction 
01 00 1100 /System/Library/Frameworks/Intents.framework/Intents: INHomeContent 
01 00 1100 /System/Library/Frameworks/Intents.framework/Intents: INHomeFilter 
01 00 1100 /System/Library/Frameworks/Intents.framework/Intents: INInteraction 
01 00 1100 /System/Library/Frameworks/Intents.framework/Intents: INSpeakableString 
01 00 0f00 /System/Library/PrivateFrameworks/InstallCoordination.framework/InstallCoordination: IXAppInstallCoordinator 
01 00 3000 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 3000 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 3000 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 3000 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 4100 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAsset 
01 00 4100 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MAAssetQuery 
01 00 4100 /System/Library/PrivateFrameworks/MobileAsset.framework/MobileAsset: MADownloadOptions 
01 00 1000 /System/Library/PrivateFrameworks/MFAAuthentication.framework/MFAAuthentication: MFAACertificateManager 
01 00 1000 /System/Library/PrivateFrameworks/MFAAuthentication.framework/MFAAuthentication: MFAATokenManager 
01 00 1500 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantCommand 
01 00 1500 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantConnection 
01 00 1500 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantDiscovery 
01 00 1500 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCAssistantMutableRemoteControlDestination 
01 00 1500 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerPath 
01 00 1500 /System/Library/PrivateFrameworks/MediaPlaybackCore.framework/MediaPlaybackCore: MPCPlayerRequest 
01 00 3d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPPlaybackArchive 
01 00 3d00 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPRequestResponseController 
01 00 3f00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAFuture 
01 00 3f00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAPromise 
01 00 3f00 /System/Library/PrivateFrameworks/NetAppsUtilities.framework/NetAppsUtilities: NAScheduler 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBackgroundActivityScheduler 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantFloatNumber 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSCountedSet 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFormatter 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSListFormatter 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNetServiceBrowser 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 5200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLCredential 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSession 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLSessionConfiguration 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 5500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 3300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 4300 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 4200 /System/Library/Frameworks/Photos.framework/Photos: PHFace 
01 00 4200 /System/Library/Frameworks/Photos.framework/Photos: PHFaceCrop 
01 00 4200 /System/Library/Frameworks/Photos.framework/Photos: PHFetchResult 
01 00 4200 /System/Library/Frameworks/Photos.framework/Photos: PHPerson 
01 00 4200 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 0800 /System/Library/PrivateFrameworks/PairedSync.framework/PairedSync: PSYSyncCoordinator 
01 00 5100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
01 00 5100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessIdentifier 
01 00 5100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessMonitor 
01 00 5100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessPredicate 
01 00 5100 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessStateDescriptor 
01 00 4500 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPClient 
01 00 4500 /System/Library/PrivateFrameworks/Rapport.framework/Rapport: RPCompanionLinkClient 
01 00 2f00 /System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine: RTRoutineManager 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAAction 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAActionRequest 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAActionResult 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAAttributeValue 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHABooleanValue 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHACommand 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHACommandCompleted 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHACurrentHome 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAEntity 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAFilter 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAFloatValue 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAIdentifierListFilter 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAIntegerValue 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHASceneAction 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHASearchCriteriaFilter 
01 00 4600 /System/Library/PrivateFrameworks/SAObjects.framework/SAObjects: SAHAStringValue 
01 00 1700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertConfigurationContext 
01 00 1700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertDefinition 
01 00 1700 /System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices: SBSRemoteAlertHandle 
01 00 0200 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
01 00 4800 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFClient 
01 00 4800 /System/Library/PrivateFrameworks/Sharing.framework/Sharing: SFDeviceDiscovery 
01 00 1a00 /System/Library/PrivateFrameworks/SystemStatus.framework/SystemStatus: STDynamicActivityAttributionPublisher 
01 00 4a00 /System/Library/PrivateFrameworks/StreamingZip.framework/StreamingZip: SZExtractor 
01 00 0500 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 4d00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNMutableNotificationContent 
01 00 4d00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAction 
01 00 4d00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationAttachment 
01 00 4d00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationCategory 
01 00 4d00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationRequest 
01 00 4d00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNNotificationSound 
01 00 4d00 /System/Library/Frameworks/UserNotifications.framework/UserNotifications: UNUserNotificationCenter 
01 00 1300 /System/Library/PrivateFrameworks/VoiceShortcutClient.framework/VoiceShortcutClient: VCVoiceShortcutClient 
01 00 2900 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDClientContext 
01 00 2900 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextQueries 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEvent 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventQuery 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventStream 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKHomeKitAccessoryControlIdentifier 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKHomeKitHomeAppViewIdentifier 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKHomeKitSceneIdentifier 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKKnowledgeStore 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKMetadataHomeAppView 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKMetadataHomeKitAccessoryControl 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKMetadataHomeKitScene 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKQuery 
01 00 2800 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKSystemEventStreams 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: _HMAccessorySetting 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: _HMCameraUserSettings 
01 00 5600 /System/Library/Frameworks/HomeKit.framework/HomeKit: _HMMutableCameraUserSettings 
