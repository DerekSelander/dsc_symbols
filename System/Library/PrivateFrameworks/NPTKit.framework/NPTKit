|| __DATA.__objc_data _OBJC_CLASS_$_AWDNetworkPerformanceMetric
|| __DATA.__objc_data _OBJC_CLASS_$_AWDNetworkPerformanceMetricInitializer
|| __DATA.__objc_data _OBJC_CLASS_$_NPTAWDLCollector
|| __DATA.__objc_data _OBJC_CLASS_$_NPTBTCollector
|| __DATA.__objc_data _OBJC_CLASS_$_NPTCDNDebugCollector
|| __DATA.__objc_data _OBJC_CLASS_$_NPTNetworkCollector
|| __DATA.__objc_data _OBJC_CLASS_$_NPTSystemCollector
|| __DATA.__objc_data _OBJC_CLASS_$_NPTUploadDataStream
|| __DATA.__objc_data _OBJC_CLASS_$_NPTVPNCollector
|| __DATA.__objc_data _OBJC_CLASS_$_NPTWiFiCollector
|| __DATA.__objc_data _OBJC_CLASS_$_Ping
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDNetworkPerformanceMetric
|| __DATA.__objc_data _OBJC_METACLASS_$_AWDNetworkPerformanceMetricInitializer
|| __DATA.__objc_data _OBJC_METACLASS_$_NPTAWDLCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_NPTBTCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_NPTCDNDebugCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_NPTNetworkCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_NPTSystemCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_NPTUploadDataStream
|| __DATA.__objc_data _OBJC_METACLASS_$_NPTVPNCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_NPTWiFiCollector
|| __DATA.__objc_data _OBJC_METACLASS_$_Ping
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._acceptablePerformanceResult
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._awdlElectionParameters
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._awdlMasterChannel
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._awdlOpMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._awdlPowerState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._awdlSchedule
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._awdlSecondaryMasterChannel
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._awdlSyncChannelSequence
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._awdlSyncState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._btConnectedDevicesCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._btIsConnectable
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._btIsDiscoverable
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._btIsPowerOn
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._btIsScanning
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._callingClient
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularActiveContexts
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularAggregatedDLBW
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularAggregatedULBW
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularAllowsVoip
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularAttached
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularBandinfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularBandwidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularCarrierName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularCellid
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularDataBearerSoMask
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularDataBearerTechnology
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularDataIsEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularDataPlanSignalingReductionOverride
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularDataPossible
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularInHomeCountry
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularIndicator
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularIndicatorOverride
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularIsoCountryCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularIssa
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularLac
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularLqm
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularLteMaxScheduledLayers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularLteNrConfiguredBw
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularMaxDlMod
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularMaxNwMimoLyr
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularMaxSchdMimoLyr
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularMaxUeRank
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularMaxUlMod
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularMobileCountryCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularMobileNetworkCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNewRadioCoverage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNewRadioDataBearer
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNewRadioMmwaveDataBearer
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNewRadioNsaCoverage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNewRadioNsaDataBearer
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNewRadioSaCoverage
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNewRadioSaDataBearer
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNewRadioSub6DataBearer
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNrConfiguredBw
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNrLayers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNrModulation
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNrRsrp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNrRsrq
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNrSinr
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNrSnr
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularNrarfcn
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularPid
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularRadioAccessTechnology
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularRadioAccessTechnologyCtDataStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularRadioFrequency
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularRnMobileCountryCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularRnMobileNetworkCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularRoamAllowed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularRsrp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularSnr
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularTac
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularTotalActiveContexts
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularTotalBw
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularTotalCcs
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularTotalDlMimoLayers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularTotalLayers
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularTotalNumCcs
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._cellularUarfcn
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadCdnPop
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadCdnUuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadConnectionTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadDomainLookupTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadEndCellularEstimate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadEndDataBearerTechnology
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadEndPrimaryIpv4Interface
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadEndRadioFrequency
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadEndRat
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadError
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadErrorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadFileSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadInterfaceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadInterfaceServiceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadIsCellular
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadIsConstrained
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadIsExpensive
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadIsMultipath
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadIsProxyConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadIsReusedConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadMaxCellularEstimate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadMaxSpeedObserved
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadNumberOfStreams
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadProtocolName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadRemoteAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadRemotePort
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadRequestTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadRequestToResponseTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadResponseTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadSecureConnectionTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadServer
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadSpeed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadStableSpeed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadStartCellularEstimate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadStartDataBearerTechnology
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadStartPrimaryIpv4Interface
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadStartRadioFrequency
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._downloadStartRat
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkIsAppleReachable
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkPrimaryIpv4InterfaceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkPrimaryIpv4ServiceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkPrimaryIpv6InterfaceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkPrimaryIpv6ServiceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkQualityDownloadSpeed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkQualityError
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkQualityErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkQualityErrorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkQualityRating
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkQualityResponsiveness
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._networkQualityUploadSpeed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._nptkitFrameworkVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._performanceTestStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._pingAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._pingError
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._pingErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._pingErrorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._pingLossPercent
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._pingMaxLatency
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._pingMeanLatency
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._pingMinLatency
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._pingStandardDeviation
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._powerBatteryWarningLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._powerSourceType
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._powerStateCaps
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemActiveProcessorCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemBatteryLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemBatteryState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemDeviceClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemDeviceModel
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemLowPowerModeEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemOsVariant
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemPhysicalMemory
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemPowersourceConnected
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemProcessorCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._systemVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadCdnPop
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadCdnUuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadConnectionTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadDomainLookupTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadEndCellularEstimate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadEndDataBearerTechnology
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadEndPrimaryIpv4Interface
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadEndRadioFrequency
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadEndRat
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadError
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadErrorCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadErrorDomain
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadFileSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadInterfaceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadInterfaceServiceName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadIsCellular
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadIsConstrained
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadIsExpensive
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadIsMultipath
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadIsProxyConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadIsReusedConnection
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadMaxCellularEstimate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadMaxSpeedObserved
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadNumberOfStreams
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadProtocolName
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadRemoteAddress
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadRemotePort
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadRequestTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadRequestToResponseTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadResponseTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadSecureConnectionTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadServer
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadSpeed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadStableSpeed
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadStartCellularEstimate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadStartDataBearerTechnology
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadStartPrimaryIpv4Interface
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadStartRadioFrequency
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._uploadStartRat
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._useWifiWasSpecified
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._vpnConnectionState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiAveragePhyRateRx
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiAverageRssi
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiAverageSnr
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiAverageTcpRtt
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiBtcMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiCca
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiChannel
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiCwfCca
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiEapolControlMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiEapolSupplicantState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiGuardInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiHiddenState
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiIsCaptive
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiMcsIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiNoise
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiNumberOfSpatialStreams
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiOpMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiPhyMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiRssi
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiSecurity
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wifiTxRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_AWDNetworkPerformanceMetric._wrmChannelType
|| __DATA_CONST.__const _BASE_URL
|| __DATA_CONST.__const _CDN_JSON_ENDPOINT
|| __DATA_CONST.__const _DATE_FORMAT
|| __DATA_CONST.__const _ERRORS_KEY
|| __DATA_CONST.__const _EVENTS_KEY
|| __DATA_CONST.__const _GET_URL
|| __DATA_CONST.__const _GET_URL_FORMAT_STRING
|| __DATA_CONST.__const _INITIAL_STATE_KEY
|| __DATA_CONST.__const _NEVPNConfigurationChangeNotification
|| __DATA_CONST.__const _NEVPNErrorDomain
|| __DATA_CONST.__const _NEVPNStatusDidChangeNotification
|| __DATA_CONST.__const _PING_URL
|| __DATA_CONST.__const _POST_URL
|| __DATA_CONST.__const _POST_URL_EXTENSION
|| __DATA_CONST.__const _TEMP_FILE_NAME
|| __DATA_CONST.__const _UNIQUE_QUERY_PARAM
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTCellularCollector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTDownload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTFileSizeConverter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTLogger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTMetadataCollector
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTMetadataEvent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTMetadataEventTypeConverter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTMetricResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTPerformanceTest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTPerformanceTestConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTPing
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTPingResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTResults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTSpeedMetric
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTTaskMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NPTUpload
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SimplePing
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTCellularCollector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTDownload
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTFileSizeConverter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTMetadataCollector
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTMetadataEvent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTMetadataEventTypeConverter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTMetricResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTPerformanceTest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTPerformanceTestConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTPing
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTPingResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTResults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTSpeedMetric
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTTaskMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NPTUpload
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SimplePing
|| __TEXT.__const _NPTKitVersionNumber
|| __TEXT.__const _NPTKitVersionString
|| __TEXT.__text _AWDNetworkPerformanceMetricReadFrom
|| __TEXT.__text _ctReasonToString
|| __TEXT.__text _dataBearerTechnologyToString
|| __TEXT.__text _indicatorToString
|| __TEXT.__text _wirelessAccessTechnologyToString
__ CFNetwork: _CFHostCreateWithName
__ CFNetwork: _CFHostGetAddressing
__ CFNetwork: _CFHostScheduleWithRunLoop
__ CFNetwork: _CFHostSetClient
__ CFNetwork: _CFHostStartInfoResolution
__ CFNetwork: _CFHostUnscheduleFromRunLoop
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CFNetwork: _OBJC_CLASS_$_NSURLSession
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionConfiguration
__ CFNetwork: _OBJC_CLASS_$_NSURLSessionTaskTransactionMetrics
__ CFNetwork: _kCFErrorDomainCFNetwork
__ CFNetwork: _kCFGetAddrInfoFailureKey
__ CFNetwork: _kCFStreamErrorDomainNetDB
__ CFNetwork: _kCFURLConnectionSuspensionThreshold
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFSocketCreateRunLoopSource
__ CoreFoundation: _CFSocketCreateWithNative
__ CoreFoundation: _CFSocketGetNative
__ CoreFoundation: _CFSocketGetSocketFlags
__ CoreFoundation: _CFSocketInvalidate
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_METACLASS_$_NSInputStream
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreTelephony: _OBJC_CLASS_$_CTBundle
__ CoreTelephony: _OBJC_CLASS_$_CTDataStatus
__ CoreTelephony: _OBJC_CLASS_$_CTServiceDescriptor
__ CoreTelephony: _OBJC_CLASS_$_CTTelephonyNetworkInfo
__ CoreTelephony: _OBJC_CLASS_$_CTXPCServiceSubscriptionContext
__ CoreTelephony: _OBJC_CLASS_$_CoreTelephonyClient
__ CoreTelephony: __CTServerConnectionCreate
__ CoreTelephony: __CTServerConnectionGetCellularDataIsEnabled
__ CoreTelephony: _kCTCellMonitorCellType
__ CoreTelephony: _kCTCellMonitorCellTypeNeighbor
__ CoreTelephony: _kCTCellMonitorCellTypeServing
__ CoreWiFi: _OBJC_CLASS_$_CWFAutoJoinStatus
__ CoreWiFi: _OBJC_CLASS_$_CWFInterface
__ CoreWiFi: _OBJC_CLASS_$_CWFJoinStatus
__ CoreWiFi: _OBJC_CLASS_$_CWFLinkQualityMetric
__ CoreWiFi: _OBJC_CLASS_$_CWFNetworkProfile
__ CoreWiFi: _OBJC_CLASS_$_CWFRoamStatus
__ CoreWiFi: _OBJC_CLASS_$_CWFScanResult
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDecimalNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ IOKit: _IOPSDrawingUnlimitedPower
__ IOKit: _IOPSGetPercentRemaining
__ Network: _OBJC_CLASS_$_NWParameters
__ Network: _OBJC_CLASS_$_NWPathEvaluator
__ Network: _nw_activity_activate
__ Network: _nw_activity_complete_with_reason
__ Network: _nw_activity_create
__ Network: _nw_activity_set_parent_activity
__ Network: _nw_interface_get_type
__ Network: _nw_path_enumerate_interfaces
__ Network: _nw_path_get_estimated_download_throughput
__ Network: _nw_path_get_estimated_upload_throughput
__ Network: _nw_path_get_status
__ Network: _nw_path_monitor_create_with_type
__ Network: _nw_path_monitor_set_queue
__ Network: _nw_path_monitor_set_update_handler
__ Network: _nw_path_monitor_start
__ NetworkExtension: _OBJC_CLASS_$_NEConfigurationManager
__ NetworkExtension: _OBJC_CLASS_$_NEVPNManager
__ NetworkExtension: _OBJC_CLASS_$_NEVPNProtocol
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ Security: _SecRandomCopyBytes
__ Security: _kSecRandomDefault
__ WiFiVelocity: _OBJC_CLASS_$_W5AWDLStatus
__ WiFiVelocity: _OBJC_CLASS_$_W5BluetoothStatus
__ WiFiVelocity: _OBJC_CLASS_$_W5Client
__ WiFiVelocity: _OBJC_CLASS_$_W5NetworkStatus
__ WiFiVelocity: _OBJC_CLASS_$_W5PowerStatus
__ WiFiVelocity: _OBJC_CLASS_$_W5WiFiStatus
__ WiFiVelocity: _W5DescriptionForAWDLScheduleState
__ WiFiVelocity: _W5DescriptionForAWDLSyncChannelSequence
__ WiFiVelocity: _W5DescriptionForAWDLSyncState
__ WiFiVelocity: _W5DescriptionForBTCMode
__ WiFiVelocity: _W5DescriptionForBatteryWarningLevel
__ WiFiVelocity: _W5DescriptionForChainAck
__ WiFiVelocity: _W5DescriptionForDesense
__ WiFiVelocity: _W5DescriptionForEAPOLControlMode
__ WiFiVelocity: _W5DescriptionForEAPOLSupplicantState
__ WiFiVelocity: _W5DescriptionForOpMode
__ WiFiVelocity: _W5DescriptionForPHYMode
__ WiFiVelocity: _W5DescriptionForPower
__ WiFiVelocity: _W5DescriptionForPowerSourceType
__ WiFiVelocity: _W5DescriptionForPowerStateCaps
__ WiFiVelocity: _W5DescriptionForSecurity
__ WirelessCoexManager: _OBJC_CLASS_$_WRMBasebandMetricsInterface
__ WirelessDiagnostics: _AWDPostMetric
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_source_testcancel
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _ne_session_create
__ libSystem.B.dylib: _ne_session_get_info
__ libSystem.B.dylib: _ne_session_get_status
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _recvfrom
__ libSystem.B.dylib: _sendto
__ libSystem.B.dylib: _setsockopt
__ libSystem.B.dylib: _socket
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libnetquality.dylib: _OBJC_CLASS_$_NetworkQualityAssessment
__ libnetquality.dylib: _OBJC_CLASS_$_NetworkQualityConfiguration
__ libnetquality.dylib: _OBJC_CLASS_$_NetworkQualityExecutions
__ libnetquality.dylib: _OBJC_CLASS_$_NetworkQualityResult
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
NPTTaskMetrics : NSObject
 @property  NSURLSessionDataTask *task
 @property  NPTMetricResult *results
 @property  NSURLSessionTaskMetrics *taskMetrics

  // instance methods
  -[NPTTaskMetrics setTaskMetrics:]
  -[NPTTaskMetrics taskMetrics]
  -[NPTTaskMetrics setTask:]
  -[NPTTaskMetrics .cxx_destruct]
  -[NPTTaskMetrics results]
  -[NPTTaskMetrics setResults:]
  -[NPTTaskMetrics task]
  -[NPTTaskMetrics init]


Ping : NSObject <NSSecureCoding, NSCopying>
 @property  NSDate *startTime
 @property  NSDate *endTime
 @property  double latency
 @property  BOOL wasSuccessful
 @property  NSDictionary *dictionary

  // class methods
  +[Ping supportsSecureCoding]

  // instance methods
  -[Ping latency]
  -[Ping setEndTime:]
  -[Ping startTime]
  -[Ping endTime]
  -[Ping wasSuccessful]
  -[Ping encodeWithCoder:]
  -[Ping setStartTime:]
  -[Ping .cxx_destruct]
  -[Ping copyWithZone:]
  -[Ping setWasSuccessful:]
  -[Ping init]
  -[Ping initWithCoder:]
  -[Ping dictionary]


NPTCellularCollector : NSObject <CoreTelephonyClientRegistrationDelegate, CoreTelephonyClientDataDelegate, NPTMetadataCollection>
 @property  CoreTelephonyClient *ctClient
 @property  CTXPCServiceSubscriptionContext *context
 @property  NSNumber *slotID
 @property  CTDataStatus *dataStatus
 @property  NSMutableArray *mutableCellChanges
 @property  NSMutableArray *mutableDataStatusChanges
 @property  NSMutableDictionary *servingCellInfo
 @property  NSMutableDictionary *mutableMetadata
 @property  CTTelephonyNetworkInfo *networkInfo
 @property  BOOL stopCollectingMetadata
 @property  NSObject<OS_nw_path_monitor> *pathMonitor
 @property  NSDictionary *metadata
 @property  NSArray *cellChanges
 @property  NSArray *dataStatusChanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? metadataDidChangeHandler
 @property  NSMutableDictionary *cachedMetadata

  // class methods
  +[NPTCellularCollector getPreferredDataSlot]
  +[NPTCellularCollector collectorName]
  +[NPTCellularCollector calculateMaxCellularTPutEstimates:]

  // instance methods
  -[NPTCellularCollector pathMonitor]
  -[NPTCellularCollector ctClient]
  -[NPTCellularCollector cellChanged:cell:]
  -[NPTCellularCollector setNetworkInfo:]
  -[NPTCellularCollector dataStatus:dataStatusInfo:]
  -[NPTCellularCollector wrmBasebandMetrics]
  -[NPTCellularCollector setDataStatusChanges:]
  -[NPTCellularCollector servingCellInfo]
  -[NPTCellularCollector stopCollecting]
  -[NPTCellularCollector setServingCellInfo:]
  -[NPTCellularCollector dualSimStatus]
  -[NPTCellularCollector networkInfo]
  -[NPTCellularCollector setCellChanges:]
  -[NPTCellularCollector setStopCollectingMetadata:]
  -[NPTCellularCollector .cxx_destruct]
  -[NPTCellularCollector setDataStatus:]
  -[NPTCellularCollector setCtClient:]
  -[NPTCellularCollector setMutableDataStatusChanges:]
  -[NPTCellularCollector getEstimateFromPath:]
  -[NPTCellularCollector setSlotID:]
  -[NPTCellularCollector stopCollectingMetadata]
  -[NPTCellularCollector setMetadata:]
  -[NPTCellularCollector mutableDataStatusChanges]
  -[NPTCellularCollector cellChanges]
  -[NPTCellularCollector fetchCellularTPutEstimates]
  -[NPTCellularCollector mutableCellChanges]
  -[NPTCellularCollector setCachedMetadata:]
  -[NPTCellularCollector cachedMetadata]
  -[NPTCellularCollector signalStrengthMeasurements]
  -[NPTCellularCollector setPathMonitor:]
  -[NPTCellularCollector setContext:]
  -[NPTCellularCollector dataStatusChanges]
  -[NPTCellularCollector slotID]
  -[NPTCellularCollector mutableMetadata]
  -[NPTCellularCollector startCollectingWithCompletion:]
  -[NPTCellularCollector setMetadataDidChangeHandler:]
  -[NPTCellularCollector context]
  -[NPTCellularCollector metadata]
  -[NPTCellularCollector metadataDidChangeHandler]
  -[NPTCellularCollector setUpPathMonitor:]
  -[NPTCellularCollector getCellInfoForSlot:]
  -[NPTCellularCollector initWithSlotID:]
  -[NPTCellularCollector dataStatus]
  -[NPTCellularCollector getCellularMNCMCCDE]
  -[NPTCellularCollector estimateDidChange:]
  -[NPTCellularCollector init]
  -[NPTCellularCollector setMutableCellChanges:]
  -[NPTCellularCollector setMutableMetadata:]


NPTUpload : NSObject <NSSecureCoding, NetworkQualityDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDelegate, NSCopying>
 @property  @? completion
 @property  id delegate
 @property  NPTMetricResult *results
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTUpload supportsSecureCoding]

  // instance methods
  -[NPTUpload URLSession:task:didCompleteWithError:]
  -[NPTUpload cancelDispatchTimerAndSession]
  -[NPTUpload completion]
  -[NPTUpload finishedAllTasks]
  -[NPTUpload startNQUploadWithCompletion:]
  -[NPTUpload setDelegate:]
  -[NPTUpload createTempFileWithData:named:]
  -[NPTUpload isTimerCancelledError:]
  -[NPTUpload encodeWithCoder:]
  -[NPTUpload startTasks]
  -[NPTUpload determineSuspensionThreshold]
  -[NPTUpload delegate]
  -[NPTUpload minNonZeroValue:comparisonValue:]
  -[NPTUpload kickOffNewUpload:suspensionThresholdEnum:]
  -[NPTUpload setCompletion:]
  -[NPTUpload .cxx_destruct]
  -[NPTUpload createRandomDataOfSize:]
  -[NPTUpload startUploadWithCompletion:]
  -[NPTUpload removeTempFileNamed:]
  -[NPTUpload inTimedMode]
  -[NPTUpload aggregateResults]
  -[NPTUpload startLegacyUploadWithCompletion:]
  -[NPTUpload realTimeSpeedMetricOverall]
  -[NPTUpload setupNewUploadTask:suspensionThresholdEnum:]
  -[NPTUpload checkInterfaceSpecified]
  -[NPTUpload progress:]
  -[NPTUpload copyWithZone:]
  -[NPTUpload cleanUp]
  -[NPTUpload URLSession:task:needNewBodyStream:]
  -[NPTUpload createHTTPBodyWithBoundary:usingData:withMimeType:withFileName:]
  -[NPTUpload results]
  -[NPTUpload setupTimer]
  -[NPTUpload processNQResult:]
  -[NPTUpload URLSession:didBecomeInvalidWithError:]
  -[NPTUpload isLastTask]
  -[NPTUpload checkAndReturnSpeedStablized:]
  -[NPTUpload setResults:]
  -[NPTUpload initWithNetworkActivityParent:testConfiguration:]
  -[NPTUpload URLSession:task:didFinishCollectingMetrics:]
  -[NPTUpload cancelDispatchTimer]
  -[NPTUpload cancel]
  -[NPTUpload URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[NPTUpload initWithCoder:]


NPTResults : NSObject <NSSecureCoding, NSCopying>
 @property  NPTMetricResult *downloadResults
 @property  NPTMetricResult *uploadResults
 @property  NPTPingResult *pingResults
 @property  NSDictionary *networkQualityResults
 @property  NSDictionary *metadata
 @property  NSDictionary *asDictionary

  // class methods
  +[NPTResults supportsSecureCoding]

  // instance methods
  -[NPTResults networkQualityResults]
  -[NPTResults encodeWithCoder:]
  -[NPTResults setUploadResults:]
  -[NPTResults .cxx_destruct]
  -[NPTResults asDictionary]
  -[NPTResults pingResults]
  -[NPTResults setPingResults:]
  -[NPTResults setMetadata:]
  -[NPTResults setNetworkQualityResults:]
  -[NPTResults copyWithZone:]
  -[NPTResults uploadResults]
  -[NPTResults metadata]
  -[NPTResults initWithCoder:]
  -[NPTResults setDownloadResults:]
  -[NPTResults downloadResults]


NPTMetadataEvent : NSObject
 @property  Class collectorType
 @property  int eventType
 @property  NSDate *timeStamp
 @property  double timeSinceStart
 @property  NSDictionary *data
 @property  NSDictionary *asDictionary

  // instance methods
  -[NPTMetadataEvent setEventType:]
  -[NPTMetadataEvent .cxx_destruct]
  -[NPTMetadataEvent eventType]
  -[NPTMetadataEvent asDictionary]
  -[NPTMetadataEvent setTimeSinceStart:]
  -[NPTMetadataEvent setData:]
  -[NPTMetadataEvent timeStamp]
  -[NPTMetadataEvent timeSinceStart]
  -[NPTMetadataEvent data]
  -[NPTMetadataEvent setTimeStamp:]
  -[NPTMetadataEvent initWithType:eventType:timeStamp:data:]
  -[NPTMetadataEvent collectorType]
  -[NPTMetadataEvent setCollectorType:]


NPTPerformanceTest : NSObject <NPTPingDelegate, NPTDownloadDelegate, NPTUploadDelegate, NSSecureCoding, NSCopying>
 @property  NPTResults *results
 @property  BOOL inTimedMode
 @property  NetworkQualityExecutions *networkQualityExecution
 @property  @? _metadataDidChangeHandler
 @property  id delegate
 @property  NPTPerformanceTestConfiguration *configuration
 @property  NSDictionary *dictionary
 @property  NSDictionary *metadata
 @property  @? metadataDidChangeHandler
 @property  NSDictionary *_additionalMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTPerformanceTest supportsSecureCoding]
  +[NPTPerformanceTest performanceTestWithDefaultConfiguration]
  +[NPTPerformanceTest performanceTestWithConfiguration:]

  // instance methods
  -[NPTPerformanceTest setConfiguration:]
  -[NPTPerformanceTest getFlattenedMetadataDictionary:]
  -[NPTPerformanceTest NQRatingFromEnum:]
  -[NPTPerformanceTest pingDidFinishWithResults:]
  -[NPTPerformanceTest saveToAWD]
  -[NPTPerformanceTest convertDateToISO8601String:]
  -[NPTPerformanceTest setDelegate:]
  -[NPTPerformanceTest getDataForCoreAnalytics]
  -[NPTPerformanceTest encodeWithCoder:]
  -[NPTPerformanceTest _metadataDidChangeHandler]
  -[NPTPerformanceTest delegate]
  -[NPTPerformanceTest configuration]
  -[NPTPerformanceTest dealloc]
  -[NPTPerformanceTest pingWillStartPinging]
  -[NPTPerformanceTest startDownloadWithCompletion:]
  -[NPTPerformanceTest _additionalMetadata]
  -[NPTPerformanceTest .cxx_destruct]
  -[NPTPerformanceTest setInTimedMode:]
  -[NPTPerformanceTest downloadWillStart]
  -[NPTPerformanceTest pingDidFinishWithError:]
  -[NPTPerformanceTest startUploadWithCompletion:]
  -[NPTPerformanceTest set_metadataDidChangeHandler:]
  -[NPTPerformanceTest inTimedMode]
  -[NPTPerformanceTest startPingWithCompletion:]
  -[NPTPerformanceTest timestampMaskedString]
  -[NPTPerformanceTest fetchAWDMetric]
  -[NPTPerformanceTest activateActivity]
  -[NPTPerformanceTest upload:didFinishWithResults:]
  -[NPTPerformanceTest download:didFinishWithResults:]
  -[NPTPerformanceTest set_additionalMetadata:]
  -[NPTPerformanceTest startMetadataCollectionWithCompletion:]
  -[NPTPerformanceTest download:didReceiveSpeedMetric:]
  -[NPTPerformanceTest setNetworkQualityExecution:]
  -[NPTPerformanceTest fetchAndSaveWRMMetrics]
  -[NPTPerformanceTest download:didFinishWithError:]
  -[NPTPerformanceTest collectorsWithoutCDNDebug]
  -[NPTPerformanceTest copyWithZone:]
  -[NPTPerformanceTest initWithConfiguration:]
  -[NPTPerformanceTest getTransformedDataForCoreAnalytics]
  -[NPTPerformanceTest upload:didFinishWithError:]
  -[NPTPerformanceTest cancelAllNetworking]
  -[NPTPerformanceTest results]
  -[NPTPerformanceTest logFrameworkUsage:]
  -[NPTPerformanceTest setMetadataDidChangeHandler:]
  -[NPTPerformanceTest metadata]
  -[NPTPerformanceTest metadataDidChangeHandler]
  -[NPTPerformanceTest getFlattenedDictionary]
  -[NPTPerformanceTest timestampMasked]
  -[NPTPerformanceTest setResults:]
  -[NPTPerformanceTest networkQualityExecution]
  -[NPTPerformanceTest stopMetadataCollection]
  -[NPTPerformanceTest completeActivityWithReason:]
  -[NPTPerformanceTest save]
  -[NPTPerformanceTest startTestWithCompletion:]
  -[NPTPerformanceTest startNetworkQualityWithCompletionHandler:]
  -[NPTPerformanceTest uploadWillStart]
  -[NPTPerformanceTest init]
  -[NPTPerformanceTest upload:didReceiveSpeedMetric:]
  -[NPTPerformanceTest initWithCoder:]
  -[NPTPerformanceTest dictionary]


NPTVPNCollector : NSObject <NPTMetadataCollection>
 @property  NEVPNManager *manager
 @property  NEConfigurationManager *configManager
 @property  NEConfiguration *config
 @property  NSObject<OS_dispatch_queue> *backgroundQueue
 @property  NSArray *eventsToMonitor
 @property  @? metadataDidChangeHandler
 @property  NSMutableDictionary *cachedMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTVPNCollector collectorName]

  // instance methods
  -[NPTVPNCollector setConfig:]
  -[NPTVPNCollector setManager:]
  -[NPTVPNCollector config]
  -[NPTVPNCollector stopCollecting]
  -[NPTVPNCollector .cxx_destruct]
  -[NPTVPNCollector setCachedMetadata:]
  -[NPTVPNCollector cachedMetadata]
  -[NPTVPNCollector manager]
  -[NPTVPNCollector backgroundQueue]
  -[NPTVPNCollector startCollectingWithCompletion:]
  -[NPTVPNCollector setMetadataDidChangeHandler:]
  -[NPTVPNCollector metadataDidChangeHandler]
  -[NPTVPNCollector configManager]
  -[NPTVPNCollector setBackgroundQueue:]
  -[NPTVPNCollector vpnNotificationReceived:]
  -[NPTVPNCollector collectVPNAddressesWithCompletion:]
  -[NPTVPNCollector getExtendedStatus:session:completionHandler:]
  -[NPTVPNCollector getVPNStatusAsString:]
  -[NPTVPNCollector setConfigManager:]
  -[NPTVPNCollector eventsToMonitor]
  -[NPTVPNCollector setEventsToMonitor:]


NPTUploadDataStream : NSInputStream
  // instance methods
  -[NPTUploadDataStream initWithLength:]
  -[NPTUploadDataStream propertyForKey:]
  -[NPTUploadDataStream scheduleInRunLoop:forMode:]
  -[NPTUploadDataStream setDelegate:]
  -[NPTUploadDataStream removeFromRunLoop:forMode:]
  -[NPTUploadDataStream delegate]
  -[NPTUploadDataStream read:maxLength:]
  -[NPTUploadDataStream close]
  -[NPTUploadDataStream setProperty:forKey:]
  -[NPTUploadDataStream .cxx_destruct]
  -[NPTUploadDataStream getBuffer:length:]
  -[NPTUploadDataStream streamStatus]
  -[NPTUploadDataStream open]
  -[NPTUploadDataStream hasBytesAvailable]
  -[NPTUploadDataStream streamError]


NPTSpeedMetric : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *pointInTime
 @property  double timeSinceStart
 @property  long long bytesTransferred
 @property  long long totalBytesExpected

  // class methods
  +[NPTSpeedMetric supportsSecureCoding]

  // instance methods
  -[NPTSpeedMetric setTotalBytesExpected:]
  -[NPTSpeedMetric encodeWithCoder:]
  -[NPTSpeedMetric totalBytesExpected]
  -[NPTSpeedMetric initWithPointInTime:timeSinceStart:bytesTransferred:totalBytesExpected:]
  -[NPTSpeedMetric bytesTransferred]
  -[NPTSpeedMetric .cxx_destruct]
  -[NPTSpeedMetric speed]
  -[NPTSpeedMetric setTimeSinceStart:]
  -[NPTSpeedMetric setBytesTransferred:]
  -[NPTSpeedMetric setPointInTime:]
  -[NPTSpeedMetric copyWithZone:]
  -[NPTSpeedMetric initWithPointInTime:timeSinceStart:bytesTransferred:totalBytesExpected:speed:]
  -[NPTSpeedMetric timeSinceStart]
  -[NPTSpeedMetric initWithCoder:]
  -[NPTSpeedMetric pointInTime]


NPTAWDLCollector : NSObject <NPTMetadataCollection>
 @property  CWFInterface *interface
 @property  @? metadataDidChangeHandler
 @property  NSMutableDictionary *cachedMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTAWDLCollector collectorName]

  // instance methods
  -[NPTAWDLCollector interface]
  -[NPTAWDLCollector stopCollecting]
  -[NPTAWDLCollector .cxx_destruct]
  -[NPTAWDLCollector setInterface:]
  -[NPTAWDLCollector setCachedMetadata:]
  -[NPTAWDLCollector cachedMetadata]
  -[NPTAWDLCollector startCollectingWithCompletion:]
  -[NPTAWDLCollector setMetadataDidChangeHandler:]
  -[NPTAWDLCollector metadataDidChangeHandler]
  -[NPTAWDLCollector fetchAWDLData]
  -[NPTAWDLCollector awdlOpModeString]


NPTDownload : NSObject <NSSecureCoding, NetworkQualityDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDelegate, NSCopying>
 @property  @? completion
 @property  id delegate
 @property  NPTMetricResult *results
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTDownload supportsSecureCoding]

  // instance methods
  -[NPTDownload URLSession:task:didCompleteWithError:]
  -[NPTDownload setupNewDownloadTask]
  -[NPTDownload cancelDispatchTimerAndSession]
  -[NPTDownload completion]
  -[NPTDownload kickOffNewDownload]
  -[NPTDownload URLSession:dataTask:didReceiveData:]
  -[NPTDownload finishedAllTasks]
  -[NPTDownload setDelegate:]
  -[NPTDownload isTimerCancelledError:]
  -[NPTDownload startLegacyDownloadWithCompletion:]
  -[NPTDownload encodeWithCoder:]
  -[NPTDownload startTasks]
  -[NPTDownload startNQDownloadWithCompletion:]
  -[NPTDownload delegate]
  -[NPTDownload minNonZeroValue:comparisonValue:]
  -[NPTDownload startDownloadWithCompletion:]
  -[NPTDownload setCompletion:]
  -[NPTDownload .cxx_destruct]
  -[NPTDownload inTimedMode]
  -[NPTDownload aggregateResults]
  -[NPTDownload realTimeSpeedMetric:]
  -[NPTDownload realTimeSpeedMetricOverall]
  -[NPTDownload checkInterfaceSpecified]
  -[NPTDownload progress:]
  -[NPTDownload copyWithZone:]
  -[NPTDownload overAllResultByTask:]
  -[NPTDownload results]
  -[NPTDownload setupTimer]
  -[NPTDownload processNQResult:]
  -[NPTDownload isLastTask]
  -[NPTDownload checkAndReturnSpeedStablized:]
  -[NPTDownload setResults:]
  -[NPTDownload initWithNetworkActivityParent:testConfiguration:]
  -[NPTDownload URLSession:task:didFinishCollectingMetrics:]
  -[NPTDownload cancelDispatchTimer]
  -[NPTDownload cancel]
  -[NPTDownload initWithCoder:]


NPTPingResult : NSObject <NSSecureCoding, NSCopying>
 @property  NSArray *pings
 @property  double minLatency
 @property  double maxLatency
 @property  double meanLatency
 @property  double standardDeviation
 @property  double percentLost
 @property  NSString *address
 @property  NSError *error
 @property  NSDictionary *asDictionary

  // class methods
  +[NPTPingResult supportsSecureCoding]

  // instance methods
  -[NPTPingResult encodeWithCoder:]
  -[NPTPingResult meanLatency]
  -[NPTPingResult error]
  -[NPTPingResult setAddress:]
  -[NPTPingResult setPings:]
  -[NPTPingResult .cxx_destruct]
  -[NPTPingResult setError:]
  -[NPTPingResult asDictionary]
  -[NPTPingResult setMaxLatency:]
  -[NPTPingResult setStandardDeviation:]
  -[NPTPingResult minLatency]
  -[NPTPingResult address]
  -[NPTPingResult percentLost]
  -[NPTPingResult copyWithZone:]
  -[NPTPingResult calculateStandardDeviation]
  -[NPTPingResult maxLatency]
  -[NPTPingResult initWithPings:usingAddress:]
  -[NPTPingResult standardDeviation]
  -[NPTPingResult setPercentLost:]
  -[NPTPingResult pings]
  -[NPTPingResult setMeanLatency:]
  -[NPTPingResult populateFields]
  -[NPTPingResult init]
  -[NPTPingResult setMinLatency:]
  -[NPTPingResult initWithCoder:]


NPTLogger : NSObject
  // class methods
  +[NPTLogger network]
  +[NPTLogger wifiVelocity]
  +[NPTLogger metadata]
  +[NPTLogger cellular]
  +[NPTLogger fileSystem]


NPTMetadataEventTypeConverter : NSObject
  // class methods
  +[NPTMetadataEventTypeConverter getTypeAsString:]


NPTPerformanceTestConfiguration : NSObject <NSCopying>
 @property  NetworkQualityConfiguration *NQConfiguration
 @property  NetworkQualityConfiguration *NQDownloadConfiguration
 @property  NetworkQualityConfiguration *NQUploadConfiguration
 @property  NSString *interfaceName
 @property  BOOL forceWiFi
 @property  BOOL useSecureConnection
 @property  int downloadSize
 @property  int uploadSize
 @property  unsigned long pingCount
 @property  int pingAddressStyle
 @property  BOOL collectMetadata
 @property  long long concurrentStreams
 @property  NSURL *downloadURL
 @property  NSURL *uploadURL
 @property  NSString *pingHost
 @property  int interfaceType
 @property  NSString *clientName
 @property  NSString *uuid
 @property  unsigned long testDuration
 @property  BOOL endWhenStable
 @property  BOOL stopAtFileSize
 @property  BOOL collectWRMMetrics
 @property  BOOL legacyMode
 @property  BOOL multiStream
 @property  NSDictionary *asDictionary

  // class methods
  +[NPTPerformanceTestConfiguration fileSizeConfigurationWithTimeout:timeout:downloadFileSize:uploadFileSize:]
  +[NPTPerformanceTestConfiguration defaultConfigurationWiFi]
  +[NPTPerformanceTestConfiguration evaluateInterfaceName:]
  +[NPTPerformanceTestConfiguration defaultConfigurationCellular]
  +[NPTPerformanceTestConfiguration defaultConfigurationWiredEthernet]
  +[NPTPerformanceTestConfiguration interfaceServiceName:]
  +[NPTPerformanceTestConfiguration defaultConfiguration]

  // instance methods
  -[NPTPerformanceTestConfiguration interfaceType]
  -[NPTPerformanceTestConfiguration useSecureConnection]
  -[NPTPerformanceTestConfiguration endWhenStable]
  -[NPTPerformanceTestConfiguration setMultiStream:]
  -[NPTPerformanceTestConfiguration setEndWhenStable:]
  -[NPTPerformanceTestConfiguration testDuration]
  -[NPTPerformanceTestConfiguration customURLSet]
  -[NPTPerformanceTestConfiguration NQUploadConfiguration]
  -[NPTPerformanceTestConfiguration setConcurrentStreams:]
  -[NPTPerformanceTestConfiguration setClientName:]
  -[NPTPerformanceTestConfiguration setUseSecureConnection:]
  -[NPTPerformanceTestConfiguration concurrentStreams]
  -[NPTPerformanceTestConfiguration setPingCount:]
  -[NPTPerformanceTestConfiguration setPingAddressStyle:]
  -[NPTPerformanceTestConfiguration interfaceName]
  -[NPTPerformanceTestConfiguration collectMetadata]
  -[NPTPerformanceTestConfiguration uuid]
  -[NPTPerformanceTestConfiguration pingCount]
  -[NPTPerformanceTestConfiguration setInterfaceName:]
  -[NPTPerformanceTestConfiguration setDownloadSize:]
  -[NPTPerformanceTestConfiguration .cxx_destruct]
  -[NPTPerformanceTestConfiguration setUuid:]
  -[NPTPerformanceTestConfiguration setCollectMetadata:]
  -[NPTPerformanceTestConfiguration asDictionary]
  -[NPTPerformanceTestConfiguration setCollectWRMMetrics:]
  -[NPTPerformanceTestConfiguration forceWiFi]
  -[NPTPerformanceTestConfiguration setForceWiFi:]
  -[NPTPerformanceTestConfiguration setTestDuration:]
  -[NPTPerformanceTestConfiguration downloadURL]
  -[NPTPerformanceTestConfiguration pingAddressStyle]
  -[NPTPerformanceTestConfiguration NQDownloadConfiguration]
  -[NPTPerformanceTestConfiguration setUploadSize:]
  -[NPTPerformanceTestConfiguration legacyMode]
  -[NPTPerformanceTestConfiguration cdnDownloadURL]
  -[NPTPerformanceTestConfiguration setDownloadURL:]
  -[NPTPerformanceTestConfiguration setInterfaceType:]
  -[NPTPerformanceTestConfiguration copyWithZone:]
  -[NPTPerformanceTestConfiguration stopAtFileSize]
  -[NPTPerformanceTestConfiguration collectWRMMetrics]
  -[NPTPerformanceTestConfiguration setLegacyMode:]
  -[NPTPerformanceTestConfiguration setPingHost:]
  -[NPTPerformanceTestConfiguration clientName]
  -[NPTPerformanceTestConfiguration downloadSize]
  -[NPTPerformanceTestConfiguration cdnUploadURL]
  -[NPTPerformanceTestConfiguration multiStream]
  -[NPTPerformanceTestConfiguration setStopAtFileSize:]
  -[NPTPerformanceTestConfiguration uploadSize]
  -[NPTPerformanceTestConfiguration NQConfiguration]
  -[NPTPerformanceTestConfiguration pingHost]
  -[NPTPerformanceTestConfiguration init]
  -[NPTPerformanceTestConfiguration setUploadURL:]
  -[NPTPerformanceTestConfiguration uploadURL]


NPTCDNDebugCollector : NSObject <NPTMetadataCollection>
 @property  NSURLSession *session
 @property  @? metadataDidChangeHandler
 @property  NSMutableDictionary *cachedMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTCDNDebugCollector collectorName]

  // instance methods
  -[NPTCDNDebugCollector session]
  -[NPTCDNDebugCollector setSession:]
  -[NPTCDNDebugCollector stopCollecting]
  -[NPTCDNDebugCollector .cxx_destruct]
  -[NPTCDNDebugCollector setCachedMetadata:]
  -[NPTCDNDebugCollector cachedMetadata]
  -[NPTCDNDebugCollector startCollectingWithCompletion:]
  -[NPTCDNDebugCollector setMetadataDidChangeHandler:]
  -[NPTCDNDebugCollector metadataDidChangeHandler]


NPTMetricResult : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *cdnpop
 @property  NSString *server
 @property  NSString *cdnuuid
 @property  NSString *appleClientASNCompany
 @property  NSNumber *appleClientASN
 @property  unsigned long fileSize
 @property  NSString *fetchDate
 @property  NSString *protocolName
 @property  NSString *isReusedConnection
 @property  NSString *isProxyConnection
 @property  double domainLookupTime
 @property  double connectionTime
 @property  double secureConnectionTime
 @property  double requestTime
 @property  double requestToResponseTime
 @property  double responseTime
 @property  double speed
 @property  double maxSpeedObserved
 @property  double stableSpeed
 @property  NSNumber *speedRating
 @property  NSNumber *speedConfidence
 @property  NSNumber *responsiveness
 @property  NSNumber *responsivenessRating
 @property  NSNumber *responsivenessConfidence
 @property  NSString *isCellular
 @property  NSString *isExpensive
 @property  NSString *isConstrained
 @property  NSString *isMultipath
 @property  NSString *localAddress
 @property  NSString *remoteAddress
 @property  NSNumber *negotiatedTLSCipherSuite
 @property  NSNumber *negotiatedTLSProtocolVersion
 @property  NSNumber *localPort
 @property  NSNumber *remotePort
 @property  NSString *interfaceServiceName
 @property  NSString *interfaceName
 @property  NSNumber *concurrentStreams
 @property  NSError *error
 @property  NSDictionary *asDictionary

  // class methods
  +[NPTMetricResult supportsSecureCoding]

  // instance methods
  -[NPTMetricResult requestTime]
  -[NPTMetricResult isConstrained]
  -[NPTMetricResult setResponsiveness:]
  -[NPTMetricResult setRequestTime:]
  -[NPTMetricResult setRemotePort:]
  -[NPTMetricResult setDomainLookupTime:]
  -[NPTMetricResult negotiatedTLSProtocolVersion]
  -[NPTMetricResult isReusedConnection]
  -[NPTMetricResult fileSize]
  -[NPTMetricResult setFileSize:]
  -[NPTMetricResult setIsCellular:]
  -[NPTMetricResult setNegotiatedTLSCipherSuite:]
  -[NPTMetricResult domainLookupTime]
  -[NPTMetricResult setConcurrentStreams:]
  -[NPTMetricResult encodeWithCoder:]
  -[NPTMetricResult populateWithMetrics:]
  -[NPTMetricResult concurrentStreams]
  -[NPTMetricResult populateWithURLResponse:]
  -[NPTMetricResult error]
  -[NPTMetricResult setCdnuuid:]
  -[NPTMetricResult setNegotiatedTLSProtocolVersion:]
  -[NPTMetricResult setSpeed:]
  -[NPTMetricResult responsiveness]
  -[NPTMetricResult remoteAddress]
  -[NPTMetricResult interfaceName]
  -[NPTMetricResult setResponsivenessRating:]
  -[NPTMetricResult setInterfaceName:]
  -[NPTMetricResult interfaceServiceName]
  -[NPTMetricResult .cxx_destruct]
  -[NPTMetricResult responseTime]
  -[NPTMetricResult isEqualToMetricResult:]
  -[NPTMetricResult setError:]
  -[NPTMetricResult isExpensive]
  -[NPTMetricResult speed]
  -[NPTMetricResult asDictionary]
  -[NPTMetricResult fetchDate]
  -[NPTMetricResult setProtocolName:]
  -[NPTMetricResult isProxyConnection]
  -[NPTMetricResult cdnpop]
  -[NPTMetricResult setConnectionTime:]
  -[NPTMetricResult setLocalPort:]
  -[NPTMetricResult setIsProxyConnection:]
  -[NPTMetricResult setIsMultipath:]
  -[NPTMetricResult server]
  -[NPTMetricResult maxSpeedObserved]
  -[NPTMetricResult setCdnpop:]
  -[NPTMetricResult negotiatedTLSCipherSuite]
  -[NPTMetricResult connectionTime]
  -[NPTMetricResult remotePort]
  -[NPTMetricResult cdnuuid]
  -[NPTMetricResult secureConnectionTime]
  -[NPTMetricResult setSpeedConfidence:]
  -[NPTMetricResult setInterfaceServiceName:]
  -[NPTMetricResult setMaxSpeedObserved:]
  -[NPTMetricResult requestToResponseTime]
  -[NPTMetricResult setResponsivenessConfidence:]
  -[NPTMetricResult copyWithZone:]
  -[NPTMetricResult responsivenessConfidence]
  -[NPTMetricResult setRequestToResponseTime:]
  -[NPTMetricResult localAddress]
  -[NPTMetricResult isMultipath]
  -[NPTMetricResult setAppleClientASN:]
  -[NPTMetricResult timeIntervalSinceDateWithLogging:startDate:nameToLog:]
  -[NPTMetricResult setIsExpensive:]
  -[NPTMetricResult setLocalAddress:]
  -[NPTMetricResult isCellular]
  -[NPTMetricResult appleClientASNCompany]
  -[NPTMetricResult responsivenessRating]
  -[NPTMetricResult setAppleClientASNCompany:]
  -[NPTMetricResult setServer:]
  -[NPTMetricResult speedRating]
  -[NPTMetricResult setStableSpeed:]
  -[NPTMetricResult localPort]
  -[NPTMetricResult setRemoteAddress:]
  -[NPTMetricResult setIsConstrained:]
  -[NPTMetricResult setIsReusedConnection:]
  -[NPTMetricResult protocolName]
  -[NPTMetricResult appleClientASN]
  -[NPTMetricResult setSpeedRating:]
  -[NPTMetricResult setSecureConnectionTime:]
  -[NPTMetricResult isEqual:]
  -[NPTMetricResult setResponseTime:]
  -[NPTMetricResult speedConfidence]
  -[NPTMetricResult setFetchDate:]
  -[NPTMetricResult initWithCoder:]
  -[NPTMetricResult stableSpeed]


AWDNetworkPerformanceMetric : PBCodable <NSCopying>
 @property  BOOL hasTimestamp
 @property  unsigned long timestamp
 @property  BOOL hasAcceptablePerformanceResult
 @property  BOOL acceptablePerformanceResult
 @property  BOOL hasAwdlElectionParameters
 @property  NSString *awdlElectionParameters
 @property  BOOL hasAwdlMasterChannel
 @property  NSString *awdlMasterChannel
 @property  BOOL hasAwdlOpMode
 @property  NSString *awdlOpMode
 @property  BOOL hasAwdlPowerState
 @property  BOOL awdlPowerState
 @property  BOOL hasAwdlSchedule
 @property  NSString *awdlSchedule
 @property  BOOL hasAwdlSecondaryMasterChannel
 @property  NSString *awdlSecondaryMasterChannel
 @property  BOOL hasAwdlSyncChannelSequence
 @property  NSString *awdlSyncChannelSequence
 @property  BOOL hasAwdlSyncState
 @property  NSString *awdlSyncState
 @property  BOOL hasBtConnectedDevicesCount
 @property  NSString *btConnectedDevicesCount
 @property  BOOL hasBtIsConnectable
 @property  BOOL btIsConnectable
 @property  BOOL hasBtIsDiscoverable
 @property  BOOL btIsDiscoverable
 @property  BOOL hasBtIsPowerOn
 @property  BOOL btIsPowerOn
 @property  BOOL hasBtIsScanning
 @property  BOOL btIsScanning
 @property  BOOL hasCallingClient
 @property  NSString *callingClient
 @property  BOOL hasCellularActiveContexts
 @property  NSString *cellularActiveContexts
 @property  BOOL hasCellularAllowsVoip
 @property  BOOL cellularAllowsVoip
 @property  BOOL hasCellularAttached
 @property  NSString *cellularAttached
 @property  BOOL hasCellularBandinfo
 @property  NSString *cellularBandinfo
 @property  BOOL hasCellularBandwidth
 @property  NSString *cellularBandwidth
 @property  BOOL hasCellularCarrierName
 @property  NSString *cellularCarrierName
 @property  BOOL hasCellularDataBearerSoMask
 @property  NSString *cellularDataBearerSoMask
 @property  BOOL hasCellularDataBearerTechnology
 @property  NSString *cellularDataBearerTechnology
 @property  BOOL hasCellularDataPlanSignalingReductionOverride
 @property  NSString *cellularDataPlanSignalingReductionOverride
 @property  BOOL hasCellularDataPossible
 @property  NSString *cellularDataPossible
 @property  BOOL hasCellularInHomeCountry
 @property  NSString *cellularInHomeCountry
 @property  BOOL hasCellularIndicator
 @property  NSString *cellularIndicator
 @property  BOOL hasCellularIndicatorOverride
 @property  NSString *cellularIndicatorOverride
 @property  BOOL hasCellularIsoCountryCode
 @property  NSString *cellularIsoCountryCode
 @property  BOOL hasCellularLqm
 @property  NSString *cellularLqm
 @property  BOOL hasCellularLteMaxScheduledLayers
 @property  NSString *cellularLteMaxScheduledLayers
 @property  BOOL hasCellularMobileCountryCode
 @property  NSString *cellularMobileCountryCode
 @property  BOOL hasCellularMobileNetworkCode
 @property  NSString *cellularMobileNetworkCode
 @property  BOOL hasCellularNewRadioCoverage
 @property  NSString *cellularNewRadioCoverage
 @property  BOOL hasCellularNewRadioDataBearer
 @property  NSString *cellularNewRadioDataBearer
 @property  BOOL hasCellularNewRadioMmwaveDataBearer
 @property  NSString *cellularNewRadioMmwaveDataBearer
 @property  BOOL hasCellularNewRadioNsaCoverage
 @property  NSString *cellularNewRadioNsaCoverage
 @property  BOOL hasCellularNewRadioNsaDataBearer
 @property  NSString *cellularNewRadioNsaDataBearer
 @property  BOOL hasCellularNewRadioSaCoverage
 @property  NSString *cellularNewRadioSaCoverage
 @property  BOOL hasCellularNewRadioSaDataBearer
 @property  NSString *cellularNewRadioSaDataBearer
 @property  BOOL hasCellularNewRadioSub6DataBearer
 @property  NSString *cellularNewRadioSub6DataBearer
 @property  BOOL hasCellularNrConfiguredBw
 @property  NSString *cellularNrConfiguredBw
 @property  BOOL hasCellularNrLayers
 @property  NSString *cellularNrLayers
 @property  BOOL hasCellularNrModulation
 @property  NSString *cellularNrModulation
 @property  BOOL hasCellularNrRsrp
 @property  NSString *cellularNrRsrp
 @property  BOOL hasCellularNrRsrq
 @property  NSString *cellularNrRsrq
 @property  BOOL hasCellularNrSnr
 @property  NSString *cellularNrSnr
 @property  BOOL hasCellularPid
 @property  NSString *cellularPid
 @property  BOOL hasCellularRadioAccessTechnology
 @property  NSString *cellularRadioAccessTechnology
 @property  BOOL hasCellularRadioAccessTechnologyCtDataStatus
 @property  NSString *cellularRadioAccessTechnologyCtDataStatus
 @property  BOOL hasCellularRoamAllowed
 @property  NSString *cellularRoamAllowed
 @property  BOOL hasCellularRsrp
 @property  NSString *cellularRsrp
 @property  BOOL hasCellularSnr
 @property  NSString *cellularSnr
 @property  BOOL hasCellularTac
 @property  NSString *cellularTac
 @property  BOOL hasCellularTotalActiveContexts
 @property  NSString *cellularTotalActiveContexts
 @property  BOOL hasCellularTotalBw
 @property  NSString *cellularTotalBw
 @property  BOOL hasCellularTotalCcs
 @property  NSString *cellularTotalCcs
 @property  BOOL hasCellularTotalLayers
 @property  NSString *cellularTotalLayers
 @property  BOOL hasCellularUarfcn
 @property  NSString *cellularUarfcn
 @property  BOOL hasDownloadCdnPop
 @property  NSString *downloadCdnPop
 @property  BOOL hasDownloadCdnUuid
 @property  NSString *downloadCdnUuid
 @property  BOOL hasDownloadConnectionTime
 @property  NSString *downloadConnectionTime
 @property  BOOL hasDownloadDomainLookupTime
 @property  NSString *downloadDomainLookupTime
 @property  BOOL hasDownloadEndDataBearerTechnology
 @property  NSString *downloadEndDataBearerTechnology
 @property  BOOL hasDownloadEndPrimaryIpv4Interface
 @property  NSString *downloadEndPrimaryIpv4Interface
 @property  BOOL hasDownloadEndRat
 @property  NSString *downloadEndRat
 @property  BOOL hasDownloadFileSize
 @property  NSString *downloadFileSize
 @property  BOOL hasDownloadInterfaceName
 @property  NSString *downloadInterfaceName
 @property  BOOL hasDownloadInterfaceServiceName
 @property  NSString *downloadInterfaceServiceName
 @property  BOOL hasDownloadIsCellular
 @property  BOOL downloadIsCellular
 @property  BOOL hasDownloadIsConstrained
 @property  BOOL downloadIsConstrained
 @property  BOOL hasDownloadIsExpensive
 @property  BOOL downloadIsExpensive
 @property  BOOL hasDownloadIsMultipath
 @property  BOOL downloadIsMultipath
 @property  BOOL hasDownloadIsProxyConnection
 @property  BOOL downloadIsProxyConnection
 @property  BOOL hasDownloadIsReusedConnection
 @property  BOOL downloadIsReusedConnection
 @property  BOOL hasDownloadMaxSpeedObserved
 @property  NSString *downloadMaxSpeedObserved
 @property  BOOL hasDownloadNumberOfStreams
 @property  NSString *downloadNumberOfStreams
 @property  BOOL hasDownloadProtocolName
 @property  NSString *downloadProtocolName
 @property  BOOL hasDownloadRemoteAddress
 @property  NSString *downloadRemoteAddress
 @property  BOOL hasDownloadRemotePort
 @property  NSString *downloadRemotePort
 @property  BOOL hasDownloadRequestTime
 @property  NSString *downloadRequestTime
 @property  BOOL hasDownloadRequestToResponseTime
 @property  NSString *downloadRequestToResponseTime
 @property  BOOL hasDownloadResponseTime
 @property  NSString *downloadResponseTime
 @property  BOOL hasDownloadSecureConnectionTime
 @property  NSString *downloadSecureConnectionTime
 @property  BOOL hasDownloadServer
 @property  NSString *downloadServer
 @property  BOOL hasDownloadSpeed
 @property  NSString *downloadSpeed
 @property  BOOL hasDownloadStableSpeed
 @property  NSString *downloadStableSpeed
 @property  BOOL hasDownloadStartDataBearerTechnology
 @property  NSString *downloadStartDataBearerTechnology
 @property  BOOL hasDownloadStartPrimaryIpv4Interface
 @property  NSString *downloadStartPrimaryIpv4Interface
 @property  BOOL hasDownloadStartRat
 @property  NSString *downloadStartRat
 @property  BOOL hasNetworkIsAppleReachable
 @property  BOOL networkIsAppleReachable
 @property  BOOL hasNetworkPrimaryIpv4InterfaceName
 @property  NSString *networkPrimaryIpv4InterfaceName
 @property  BOOL hasNetworkPrimaryIpv4ServiceName
 @property  NSString *networkPrimaryIpv4ServiceName
 @property  BOOL hasNptkitFrameworkVersion
 @property  NSString *nptkitFrameworkVersion
 @property  BOOL hasPerformanceTestStartTime
 @property  NSString *performanceTestStartTime
 @property  BOOL hasPingAddress
 @property  NSString *pingAddress
 @property  BOOL hasPingLossPercent
 @property  NSString *pingLossPercent
 @property  BOOL hasPingMaxLatency
 @property  NSString *pingMaxLatency
 @property  BOOL hasPingMeanLatency
 @property  NSString *pingMeanLatency
 @property  BOOL hasPingMinLatency
 @property  NSString *pingMinLatency
 @property  BOOL hasPingStandardDeviation
 @property  NSString *pingStandardDeviation
 @property  BOOL hasPowerBatteryWarningLevel
 @property  NSString *powerBatteryWarningLevel
 @property  BOOL hasPowerSourceType
 @property  NSString *powerSourceType
 @property  BOOL hasPowerStateCaps
 @property  NSString *powerStateCaps
 @property  BOOL hasSystemActiveProcessorCount
 @property  NSString *systemActiveProcessorCount
 @property  BOOL hasSystemBatteryLevel
 @property  NSString *systemBatteryLevel
 @property  BOOL hasSystemBatteryState
 @property  NSString *systemBatteryState
 @property  BOOL hasSystemDeviceClass
 @property  NSString *systemDeviceClass
 @property  BOOL hasSystemDeviceModel
 @property  NSString *systemDeviceModel
 @property  BOOL hasSystemLowPowerModeEnabled
 @property  BOOL systemLowPowerModeEnabled
 @property  BOOL hasSystemName
 @property  NSString *systemName
 @property  BOOL hasSystemOsVariant
 @property  NSString *systemOsVariant
 @property  BOOL hasSystemPhysicalMemory
 @property  NSString *systemPhysicalMemory
 @property  BOOL hasSystemPowersourceConnected
 @property  BOOL systemPowersourceConnected
 @property  BOOL hasSystemProcessorCount
 @property  NSString *systemProcessorCount
 @property  BOOL hasSystemVersion
 @property  NSString *systemVersion
 @property  BOOL hasUploadCdnPop
 @property  NSString *uploadCdnPop
 @property  BOOL hasUploadCdnUuid
 @property  NSString *uploadCdnUuid
 @property  BOOL hasUploadConnectionTime
 @property  NSString *uploadConnectionTime
 @property  BOOL hasUploadDomainLookupTime
 @property  NSString *uploadDomainLookupTime
 @property  BOOL hasUploadEndDataBearerTechnology
 @property  NSString *uploadEndDataBearerTechnology
 @property  BOOL hasUploadEndPrimaryIpv4Interface
 @property  NSString *uploadEndPrimaryIpv4Interface
 @property  BOOL hasUploadEndRat
 @property  NSString *uploadEndRat
 @property  BOOL hasUploadFileSize
 @property  NSString *uploadFileSize
 @property  BOOL hasUploadInterfaceName
 @property  NSString *uploadInterfaceName
 @property  BOOL hasUploadInterfaceServiceName
 @property  NSString *uploadInterfaceServiceName
 @property  BOOL hasUploadIsCellular
 @property  BOOL uploadIsCellular
 @property  BOOL hasUploadIsConstrained
 @property  BOOL uploadIsConstrained
 @property  BOOL hasUploadIsExpensive
 @property  BOOL uploadIsExpensive
 @property  BOOL hasUploadIsMultipath
 @property  BOOL uploadIsMultipath
 @property  BOOL hasUploadIsProxyConnection
 @property  BOOL uploadIsProxyConnection
 @property  BOOL hasUploadIsReusedConnection
 @property  BOOL uploadIsReusedConnection
 @property  BOOL hasUploadMaxSpeedObserved
 @property  NSString *uploadMaxSpeedObserved
 @property  BOOL hasUploadNumberOfStreams
 @property  NSString *uploadNumberOfStreams
 @property  BOOL hasUploadProtocolName
 @property  NSString *uploadProtocolName
 @property  BOOL hasUploadRemoteAddress
 @property  NSString *uploadRemoteAddress
 @property  BOOL hasUploadRemotePort
 @property  NSString *uploadRemotePort
 @property  BOOL hasUploadRequestTime
 @property  NSString *uploadRequestTime
 @property  BOOL hasUploadRequestToResponseTime
 @property  NSString *uploadRequestToResponseTime
 @property  BOOL hasUploadResponseTime
 @property  NSString *uploadResponseTime
 @property  BOOL hasUploadSecureConnectionTime
 @property  NSString *uploadSecureConnectionTime
 @property  BOOL hasUploadServer
 @property  NSString *uploadServer
 @property  BOOL hasUploadSpeed
 @property  NSString *uploadSpeed
 @property  BOOL hasUploadStableSpeed
 @property  NSString *uploadStableSpeed
 @property  BOOL hasUploadStartDataBearerTechnology
 @property  NSString *uploadStartDataBearerTechnology
 @property  BOOL hasUploadStartPrimaryIpv4Interface
 @property  NSString *uploadStartPrimaryIpv4Interface
 @property  BOOL hasUploadStartRat
 @property  NSString *uploadStartRat
 @property  BOOL hasUseWifiWasSpecified
 @property  BOOL useWifiWasSpecified
 @property  BOOL hasWifiAveragePhyRateRx
 @property  NSString *wifiAveragePhyRateRx
 @property  BOOL hasWifiAverageRssi
 @property  NSString *wifiAverageRssi
 @property  BOOL hasWifiAverageSnr
 @property  NSString *wifiAverageSnr
 @property  BOOL hasWifiAverageTcpRtt
 @property  NSString *wifiAverageTcpRtt
 @property  BOOL hasWifiBtcMode
 @property  NSString *wifiBtcMode
 @property  BOOL hasWifiCca
 @property  NSString *wifiCca
 @property  BOOL hasWifiChannel
 @property  NSString *wifiChannel
 @property  BOOL hasWifiCwfCca
 @property  NSString *wifiCwfCca
 @property  BOOL hasWifiEapolControlMode
 @property  NSString *wifiEapolControlMode
 @property  BOOL hasWifiEapolSupplicantState
 @property  NSString *wifiEapolSupplicantState
 @property  BOOL hasWifiGuardInterval
 @property  NSString *wifiGuardInterval
 @property  BOOL hasWifiHiddenState
 @property  NSString *wifiHiddenState
 @property  BOOL hasWifiIsCaptive
 @property  BOOL wifiIsCaptive
 @property  BOOL hasWifiMcsIndex
 @property  NSString *wifiMcsIndex
 @property  BOOL hasWifiNoise
 @property  NSString *wifiNoise
 @property  BOOL hasWifiNumberOfSpatialStreams
 @property  NSString *wifiNumberOfSpatialStreams
 @property  BOOL hasWifiOpMode
 @property  NSString *wifiOpMode
 @property  BOOL hasWifiPhyMode
 @property  NSString *wifiPhyMode
 @property  BOOL hasWifiRssi
 @property  NSString *wifiRssi
 @property  BOOL hasWifiSecurity
 @property  NSString *wifiSecurity
 @property  BOOL hasWifiTxRate
 @property  NSString *wifiTxRate
 @property  BOOL hasWrmChannelType
 @property  NSString *wrmChannelType
 @property  BOOL hasCellularCellid
 @property  NSString *cellularCellid
 @property  BOOL hasNetworkQualityResponsiveness
 @property  NSString *networkQualityResponsiveness
 @property  BOOL hasCellularAggregatedDLBW
 @property  NSString *cellularAggregatedDLBW
 @property  BOOL hasCellularAggregatedULBW
 @property  NSString *cellularAggregatedULBW
 @property  BOOL hasCellularIssa
 @property  NSString *cellularIssa
 @property  BOOL hasCellularLac
 @property  NSString *cellularLac
 @property  BOOL hasCellularLteNrConfiguredBw
 @property  NSString *cellularLteNrConfiguredBw
 @property  BOOL hasCellularMaxDlMod
 @property  NSString *cellularMaxDlMod
 @property  BOOL hasCellularMaxNwMimoLyr
 @property  NSString *cellularMaxNwMimoLyr
 @property  BOOL hasCellularMaxSchdMimoLyr
 @property  NSString *cellularMaxSchdMimoLyr
 @property  BOOL hasCellularMaxUeRank
 @property  NSString *cellularMaxUeRank
 @property  BOOL hasCellularMaxUlMod
 @property  NSString *cellularMaxUlMod
 @property  BOOL hasCellularNrSinr
 @property  NSString *cellularNrSinr
 @property  BOOL hasCellularNrarfcn
 @property  NSString *cellularNrarfcn
 @property  BOOL hasCellularRadioFrequency
 @property  NSString *cellularRadioFrequency
 @property  BOOL hasCellularTotalDlMimoLayers
 @property  NSString *cellularTotalDlMimoLayers
 @property  BOOL hasCellularTotalNumCcs
 @property  NSString *cellularTotalNumCcs
 @property  BOOL hasDownloadStartRadioFrequency
 @property  NSString *downloadStartRadioFrequency
 @property  BOOL hasDownloadEndRadioFrequency
 @property  NSString *downloadEndRadioFrequency
 @property  BOOL hasNetworkPrimaryIpv6InterfaceName
 @property  NSString *networkPrimaryIpv6InterfaceName
 @property  BOOL hasNetworkPrimaryIpv6ServiceName
 @property  NSString *networkPrimaryIpv6ServiceName
 @property  BOOL hasUploadStartRadioFrequency
 @property  NSString *uploadStartRadioFrequency
 @property  BOOL hasUploadEndRadioFrequency
 @property  NSString *uploadEndRadioFrequency
 @property  BOOL hasDownloadError
 @property  NSString *downloadError
 @property  BOOL hasNetworkQualityError
 @property  NSString *networkQualityError
 @property  BOOL hasNetworkQualityDownloadSpeed
 @property  NSString *networkQualityDownloadSpeed
 @property  BOOL hasNetworkQualityUploadSpeed
 @property  NSString *networkQualityUploadSpeed
 @property  BOOL hasNetworkQualityRating
 @property  NSString *networkQualityRating
 @property  BOOL hasVpnConnectionState
 @property  NSString *vpnConnectionState
 @property  BOOL hasUploadError
 @property  NSString *uploadError
 @property  BOOL hasUploadErrorDomain
 @property  NSString *uploadErrorDomain
 @property  BOOL hasUploadErrorCode
 @property  NSString *uploadErrorCode
 @property  BOOL hasDownloadErrorDomain
 @property  NSString *downloadErrorDomain
 @property  BOOL hasDownloadErrorCode
 @property  NSString *downloadErrorCode
 @property  BOOL hasPingError
 @property  NSString *pingError
 @property  BOOL hasPingErrorDomain
 @property  NSString *pingErrorDomain
 @property  BOOL hasPingErrorCode
 @property  NSString *pingErrorCode
 @property  BOOL hasNetworkQualityErrorDomain
 @property  NSString *networkQualityErrorDomain
 @property  BOOL hasNetworkQualityErrorCode
 @property  NSString *networkQualityErrorCode
 @property  BOOL hasCellularRnMobileCountryCode
 @property  NSString *cellularRnMobileCountryCode
 @property  BOOL hasCellularRnMobileNetworkCode
 @property  NSString *cellularRnMobileNetworkCode
 @property  BOOL hasCellularDataIsEnabled
 @property  BOOL cellularDataIsEnabled
 @property  BOOL hasDownloadStartCellularEstimate
 @property  NSString *downloadStartCellularEstimate
 @property  BOOL hasDownloadEndCellularEstimate
 @property  NSString *downloadEndCellularEstimate
 @property  BOOL hasDownloadMaxCellularEstimate
 @property  NSString *downloadMaxCellularEstimate
 @property  BOOL hasUploadStartCellularEstimate
 @property  NSString *uploadStartCellularEstimate
 @property  BOOL hasUploadEndCellularEstimate
 @property  NSString *uploadEndCellularEstimate
 @property  BOOL hasUploadMaxCellularEstimate
 @property  NSString *uploadMaxCellularEstimate

  // instance methods
  -[AWDNetworkPerformanceMetric setCellularDataPossible:]
  -[AWDNetworkPerformanceMetric cellularDataPossible]
  -[AWDNetworkPerformanceMetric setWifiRssi:]
  -[AWDNetworkPerformanceMetric setTimestamp:]
  -[AWDNetworkPerformanceMetric copyTo:]
  -[AWDNetworkPerformanceMetric systemVersion]
  -[AWDNetworkPerformanceMetric downloadError]
  -[AWDNetworkPerformanceMetric hasWifiRssi]
  -[AWDNetworkPerformanceMetric setCellularRadioAccessTechnology:]
  -[AWDNetworkPerformanceMetric cellularDataBearerTechnology]
  -[AWDNetworkPerformanceMetric setCellularDataBearerTechnology:]
  -[AWDNetworkPerformanceMetric .cxx_destruct]
  -[AWDNetworkPerformanceMetric mergeFrom:]
  -[AWDNetworkPerformanceMetric setHasTimestamp:]
  -[AWDNetworkPerformanceMetric dictionaryRepresentation]
  -[AWDNetworkPerformanceMetric hasTimestamp]
  -[AWDNetworkPerformanceMetric copyWithZone:]
  -[AWDNetworkPerformanceMetric systemName]
  -[AWDNetworkPerformanceMetric timestamp]
  -[AWDNetworkPerformanceMetric cellularRadioAccessTechnology]
  -[AWDNetworkPerformanceMetric readFrom:]
  -[AWDNetworkPerformanceMetric wifiRssi]
  -[AWDNetworkPerformanceMetric writeTo:]
  -[AWDNetworkPerformanceMetric isEqual:]
  -[AWDNetworkPerformanceMetric setDownloadError:]
  -[AWDNetworkPerformanceMetric setCellularLqm:]
  -[AWDNetworkPerformanceMetric hasCellularLqm]
  -[AWDNetworkPerformanceMetric setCellularUarfcn:]
  -[AWDNetworkPerformanceMetric hasCellularUarfcn]
  -[AWDNetworkPerformanceMetric setCellularPid:]
  -[AWDNetworkPerformanceMetric hasCellularPid]
  -[AWDNetworkPerformanceMetric setCellularBandwidth:]
  -[AWDNetworkPerformanceMetric hasCellularBandwidth]
  -[AWDNetworkPerformanceMetric setCellularTac:]
  -[AWDNetworkPerformanceMetric hasCellularTac]
  -[AWDNetworkPerformanceMetric cellularLqm]
  -[AWDNetworkPerformanceMetric cellularUarfcn]
  -[AWDNetworkPerformanceMetric cellularPid]
  -[AWDNetworkPerformanceMetric cellularBandwidth]
  -[AWDNetworkPerformanceMetric cellularTac]
  -[AWDNetworkPerformanceMetric wifiCca]
  -[AWDNetworkPerformanceMetric setWifiCca:]
  -[AWDNetworkPerformanceMetric hasWifiCca]
  -[AWDNetworkPerformanceMetric wifiChannel]
  -[AWDNetworkPerformanceMetric setWifiChannel:]
  -[AWDNetworkPerformanceMetric hasWifiChannel]
  -[AWDNetworkPerformanceMetric wifiPhyMode]
  -[AWDNetworkPerformanceMetric setWifiPhyMode:]
  -[AWDNetworkPerformanceMetric hasWifiPhyMode]
  -[AWDNetworkPerformanceMetric setSystemName:]
  -[AWDNetworkPerformanceMetric setUploadError:]
  -[AWDNetworkPerformanceMetric uploadError]
  -[AWDNetworkPerformanceMetric setSystemVersion:]
  -[AWDNetworkPerformanceMetric downloadSpeed]
  -[AWDNetworkPerformanceMetric setDownloadSpeed:]
  -[AWDNetworkPerformanceMetric powerSourceType]
  -[AWDNetworkPerformanceMetric setPowerSourceType:]
  -[AWDNetworkPerformanceMetric powerStateCaps]
  -[AWDNetworkPerformanceMetric setPowerStateCaps:]
  -[AWDNetworkPerformanceMetric awdlSyncState]
  -[AWDNetworkPerformanceMetric setAwdlSyncState:]
  -[AWDNetworkPerformanceMetric awdlSyncChannelSequence]
  -[AWDNetworkPerformanceMetric setAwdlSyncChannelSequence:]
  -[AWDNetworkPerformanceMetric awdlElectionParameters]
  -[AWDNetworkPerformanceMetric setAwdlElectionParameters:]
  -[AWDNetworkPerformanceMetric awdlMasterChannel]
  -[AWDNetworkPerformanceMetric setAwdlMasterChannel:]
  -[AWDNetworkPerformanceMetric awdlSecondaryMasterChannel]
  -[AWDNetworkPerformanceMetric setAwdlSecondaryMasterChannel:]
  -[AWDNetworkPerformanceMetric awdlOpMode]
  -[AWDNetworkPerformanceMetric setAwdlOpMode:]
  -[AWDNetworkPerformanceMetric uploadFileSize]
  -[AWDNetworkPerformanceMetric callingClient]
  -[AWDNetworkPerformanceMetric setAcceptablePerformanceResult:]
  -[AWDNetworkPerformanceMetric setHasAcceptablePerformanceResult:]
  -[AWDNetworkPerformanceMetric hasAcceptablePerformanceResult]
  -[AWDNetworkPerformanceMetric hasAwdlElectionParameters]
  -[AWDNetworkPerformanceMetric hasAwdlMasterChannel]
  -[AWDNetworkPerformanceMetric hasAwdlOpMode]
  -[AWDNetworkPerformanceMetric setAwdlPowerState:]
  -[AWDNetworkPerformanceMetric setHasAwdlPowerState:]
  -[AWDNetworkPerformanceMetric hasAwdlPowerState]
  -[AWDNetworkPerformanceMetric hasAwdlSchedule]
  -[AWDNetworkPerformanceMetric hasAwdlSecondaryMasterChannel]
  -[AWDNetworkPerformanceMetric hasAwdlSyncChannelSequence]
  -[AWDNetworkPerformanceMetric hasAwdlSyncState]
  -[AWDNetworkPerformanceMetric hasBtConnectedDevicesCount]
  -[AWDNetworkPerformanceMetric setBtIsConnectable:]
  -[AWDNetworkPerformanceMetric setHasBtIsConnectable:]
  -[AWDNetworkPerformanceMetric hasBtIsConnectable]
  -[AWDNetworkPerformanceMetric setBtIsDiscoverable:]
  -[AWDNetworkPerformanceMetric setHasBtIsDiscoverable:]
  -[AWDNetworkPerformanceMetric hasBtIsDiscoverable]
  -[AWDNetworkPerformanceMetric setBtIsPowerOn:]
  -[AWDNetworkPerformanceMetric setHasBtIsPowerOn:]
  -[AWDNetworkPerformanceMetric hasBtIsPowerOn]
  -[AWDNetworkPerformanceMetric setBtIsScanning:]
  -[AWDNetworkPerformanceMetric setHasBtIsScanning:]
  -[AWDNetworkPerformanceMetric hasBtIsScanning]
  -[AWDNetworkPerformanceMetric hasCallingClient]
  -[AWDNetworkPerformanceMetric hasCellularActiveContexts]
  -[AWDNetworkPerformanceMetric setCellularAllowsVoip:]
  -[AWDNetworkPerformanceMetric setHasCellularAllowsVoip:]
  -[AWDNetworkPerformanceMetric hasCellularAllowsVoip]
  -[AWDNetworkPerformanceMetric hasCellularAttached]
  -[AWDNetworkPerformanceMetric hasCellularBandinfo]
  -[AWDNetworkPerformanceMetric hasCellularCarrierName]
  -[AWDNetworkPerformanceMetric hasCellularDataBearerSoMask]
  -[AWDNetworkPerformanceMetric hasCellularDataBearerTechnology]
  -[AWDNetworkPerformanceMetric hasCellularDataPlanSignalingReductionOverride]
  -[AWDNetworkPerformanceMetric hasCellularDataPossible]
  -[AWDNetworkPerformanceMetric hasCellularInHomeCountry]
  -[AWDNetworkPerformanceMetric hasCellularIndicator]
  -[AWDNetworkPerformanceMetric hasCellularIndicatorOverride]
  -[AWDNetworkPerformanceMetric hasCellularIsoCountryCode]
  -[AWDNetworkPerformanceMetric hasCellularLteMaxScheduledLayers]
  -[AWDNetworkPerformanceMetric hasCellularMobileCountryCode]
  -[AWDNetworkPerformanceMetric hasCellularMobileNetworkCode]
  -[AWDNetworkPerformanceMetric hasCellularNewRadioCoverage]
  -[AWDNetworkPerformanceMetric hasCellularNewRadioDataBearer]
  -[AWDNetworkPerformanceMetric hasCellularNewRadioMmwaveDataBearer]
  -[AWDNetworkPerformanceMetric hasCellularNewRadioNsaCoverage]
  -[AWDNetworkPerformanceMetric hasCellularNewRadioNsaDataBearer]
  -[AWDNetworkPerformanceMetric hasCellularNewRadioSaCoverage]
  -[AWDNetworkPerformanceMetric hasCellularNewRadioSaDataBearer]
  -[AWDNetworkPerformanceMetric hasCellularNewRadioSub6DataBearer]
  -[AWDNetworkPerformanceMetric hasCellularNrConfiguredBw]
  -[AWDNetworkPerformanceMetric hasCellularNrLayers]
  -[AWDNetworkPerformanceMetric hasCellularNrModulation]
  -[AWDNetworkPerformanceMetric hasCellularNrRsrp]
  -[AWDNetworkPerformanceMetric hasCellularNrRsrq]
  -[AWDNetworkPerformanceMetric hasCellularNrSnr]
  -[AWDNetworkPerformanceMetric hasCellularRadioAccessTechnology]
  -[AWDNetworkPerformanceMetric hasCellularRadioAccessTechnologyCtDataStatus]
  -[AWDNetworkPerformanceMetric hasCellularRoamAllowed]
  -[AWDNetworkPerformanceMetric hasCellularRsrp]
  -[AWDNetworkPerformanceMetric hasCellularSnr]
  -[AWDNetworkPerformanceMetric hasCellularTotalActiveContexts]
  -[AWDNetworkPerformanceMetric hasCellularTotalBw]
  -[AWDNetworkPerformanceMetric hasCellularTotalCcs]
  -[AWDNetworkPerformanceMetric hasCellularTotalLayers]
  -[AWDNetworkPerformanceMetric hasDownloadCdnPop]
  -[AWDNetworkPerformanceMetric hasDownloadCdnUuid]
  -[AWDNetworkPerformanceMetric hasDownloadConnectionTime]
  -[AWDNetworkPerformanceMetric hasDownloadDomainLookupTime]
  -[AWDNetworkPerformanceMetric hasDownloadEndDataBearerTechnology]
  -[AWDNetworkPerformanceMetric hasDownloadEndPrimaryIpv4Interface]
  -[AWDNetworkPerformanceMetric hasDownloadEndRat]
  -[AWDNetworkPerformanceMetric hasDownloadFileSize]
  -[AWDNetworkPerformanceMetric hasDownloadInterfaceName]
  -[AWDNetworkPerformanceMetric hasDownloadInterfaceServiceName]
  -[AWDNetworkPerformanceMetric setDownloadIsCellular:]
  -[AWDNetworkPerformanceMetric setHasDownloadIsCellular:]
  -[AWDNetworkPerformanceMetric hasDownloadIsCellular]
  -[AWDNetworkPerformanceMetric setDownloadIsConstrained:]
  -[AWDNetworkPerformanceMetric setHasDownloadIsConstrained:]
  -[AWDNetworkPerformanceMetric hasDownloadIsConstrained]
  -[AWDNetworkPerformanceMetric setDownloadIsExpensive:]
  -[AWDNetworkPerformanceMetric setHasDownloadIsExpensive:]
  -[AWDNetworkPerformanceMetric hasDownloadIsExpensive]
  -[AWDNetworkPerformanceMetric setDownloadIsMultipath:]
  -[AWDNetworkPerformanceMetric setHasDownloadIsMultipath:]
  -[AWDNetworkPerformanceMetric hasDownloadIsMultipath]
  -[AWDNetworkPerformanceMetric setDownloadIsProxyConnection:]
  -[AWDNetworkPerformanceMetric setHasDownloadIsProxyConnection:]
  -[AWDNetworkPerformanceMetric hasDownloadIsProxyConnection]
  -[AWDNetworkPerformanceMetric setDownloadIsReusedConnection:]
  -[AWDNetworkPerformanceMetric setHasDownloadIsReusedConnection:]
  -[AWDNetworkPerformanceMetric hasDownloadIsReusedConnection]
  -[AWDNetworkPerformanceMetric hasDownloadMaxSpeedObserved]
  -[AWDNetworkPerformanceMetric hasDownloadNumberOfStreams]
  -[AWDNetworkPerformanceMetric hasDownloadProtocolName]
  -[AWDNetworkPerformanceMetric hasDownloadRemoteAddress]
  -[AWDNetworkPerformanceMetric hasDownloadRemotePort]
  -[AWDNetworkPerformanceMetric hasDownloadRequestTime]
  -[AWDNetworkPerformanceMetric hasDownloadRequestToResponseTime]
  -[AWDNetworkPerformanceMetric hasDownloadResponseTime]
  -[AWDNetworkPerformanceMetric hasDownloadSecureConnectionTime]
  -[AWDNetworkPerformanceMetric hasDownloadServer]
  -[AWDNetworkPerformanceMetric hasDownloadSpeed]
  -[AWDNetworkPerformanceMetric hasDownloadStableSpeed]
  -[AWDNetworkPerformanceMetric hasDownloadStartDataBearerTechnology]
  -[AWDNetworkPerformanceMetric hasDownloadStartPrimaryIpv4Interface]
  -[AWDNetworkPerformanceMetric hasDownloadStartRat]
  -[AWDNetworkPerformanceMetric setNetworkIsAppleReachable:]
  -[AWDNetworkPerformanceMetric setHasNetworkIsAppleReachable:]
  -[AWDNetworkPerformanceMetric hasNetworkIsAppleReachable]
  -[AWDNetworkPerformanceMetric hasNetworkPrimaryIpv4InterfaceName]
  -[AWDNetworkPerformanceMetric hasNetworkPrimaryIpv4ServiceName]
  -[AWDNetworkPerformanceMetric hasNptkitFrameworkVersion]
  -[AWDNetworkPerformanceMetric hasPerformanceTestStartTime]
  -[AWDNetworkPerformanceMetric hasPingAddress]
  -[AWDNetworkPerformanceMetric hasPingLossPercent]
  -[AWDNetworkPerformanceMetric hasPingMaxLatency]
  -[AWDNetworkPerformanceMetric hasPingMeanLatency]
  -[AWDNetworkPerformanceMetric hasPingMinLatency]
  -[AWDNetworkPerformanceMetric hasPingStandardDeviation]
  -[AWDNetworkPerformanceMetric hasPowerBatteryWarningLevel]
  -[AWDNetworkPerformanceMetric hasPowerSourceType]
  -[AWDNetworkPerformanceMetric hasPowerStateCaps]
  -[AWDNetworkPerformanceMetric hasSystemActiveProcessorCount]
  -[AWDNetworkPerformanceMetric hasSystemBatteryLevel]
  -[AWDNetworkPerformanceMetric hasSystemBatteryState]
  -[AWDNetworkPerformanceMetric hasSystemDeviceClass]
  -[AWDNetworkPerformanceMetric hasSystemDeviceModel]
  -[AWDNetworkPerformanceMetric setSystemLowPowerModeEnabled:]
  -[AWDNetworkPerformanceMetric setHasSystemLowPowerModeEnabled:]
  -[AWDNetworkPerformanceMetric hasSystemLowPowerModeEnabled]
  -[AWDNetworkPerformanceMetric hasSystemName]
  -[AWDNetworkPerformanceMetric hasSystemOsVariant]
  -[AWDNetworkPerformanceMetric hasSystemPhysicalMemory]
  -[AWDNetworkPerformanceMetric setSystemPowersourceConnected:]
  -[AWDNetworkPerformanceMetric setHasSystemPowersourceConnected:]
  -[AWDNetworkPerformanceMetric hasSystemPowersourceConnected]
  -[AWDNetworkPerformanceMetric hasSystemProcessorCount]
  -[AWDNetworkPerformanceMetric hasSystemVersion]
  -[AWDNetworkPerformanceMetric hasUploadCdnPop]
  -[AWDNetworkPerformanceMetric hasUploadCdnUuid]
  -[AWDNetworkPerformanceMetric hasUploadConnectionTime]
  -[AWDNetworkPerformanceMetric hasUploadDomainLookupTime]
  -[AWDNetworkPerformanceMetric hasUploadEndDataBearerTechnology]
  -[AWDNetworkPerformanceMetric hasUploadEndPrimaryIpv4Interface]
  -[AWDNetworkPerformanceMetric hasUploadEndRat]
  -[AWDNetworkPerformanceMetric hasUploadFileSize]
  -[AWDNetworkPerformanceMetric hasUploadInterfaceName]
  -[AWDNetworkPerformanceMetric hasUploadInterfaceServiceName]
  -[AWDNetworkPerformanceMetric setUploadIsCellular:]
  -[AWDNetworkPerformanceMetric setHasUploadIsCellular:]
  -[AWDNetworkPerformanceMetric hasUploadIsCellular]
  -[AWDNetworkPerformanceMetric setUploadIsConstrained:]
  -[AWDNetworkPerformanceMetric setHasUploadIsConstrained:]
  -[AWDNetworkPerformanceMetric hasUploadIsConstrained]
  -[AWDNetworkPerformanceMetric setUploadIsExpensive:]
  -[AWDNetworkPerformanceMetric setHasUploadIsExpensive:]
  -[AWDNetworkPerformanceMetric hasUploadIsExpensive]
  -[AWDNetworkPerformanceMetric setUploadIsMultipath:]
  -[AWDNetworkPerformanceMetric setHasUploadIsMultipath:]
  -[AWDNetworkPerformanceMetric hasUploadIsMultipath]
  -[AWDNetworkPerformanceMetric setUploadIsProxyConnection:]
  -[AWDNetworkPerformanceMetric setHasUploadIsProxyConnection:]
  -[AWDNetworkPerformanceMetric hasUploadIsProxyConnection]
  -[AWDNetworkPerformanceMetric setUploadIsReusedConnection:]
  -[AWDNetworkPerformanceMetric setHasUploadIsReusedConnection:]
  -[AWDNetworkPerformanceMetric hasUploadIsReusedConnection]
  -[AWDNetworkPerformanceMetric hasUploadMaxSpeedObserved]
  -[AWDNetworkPerformanceMetric hasUploadNumberOfStreams]
  -[AWDNetworkPerformanceMetric hasUploadProtocolName]
  -[AWDNetworkPerformanceMetric hasUploadRemoteAddress]
  -[AWDNetworkPerformanceMetric hasUploadRemotePort]
  -[AWDNetworkPerformanceMetric hasUploadRequestTime]
  -[AWDNetworkPerformanceMetric hasUploadRequestToResponseTime]
  -[AWDNetworkPerformanceMetric hasUploadResponseTime]
  -[AWDNetworkPerformanceMetric hasUploadSecureConnectionTime]
  -[AWDNetworkPerformanceMetric hasUploadServer]
  -[AWDNetworkPerformanceMetric hasUploadSpeed]
  -[AWDNetworkPerformanceMetric hasUploadStableSpeed]
  -[AWDNetworkPerformanceMetric hasUploadStartDataBearerTechnology]
  -[AWDNetworkPerformanceMetric hasUploadStartPrimaryIpv4Interface]
  -[AWDNetworkPerformanceMetric hasUploadStartRat]
  -[AWDNetworkPerformanceMetric setUseWifiWasSpecified:]
  -[AWDNetworkPerformanceMetric setHasUseWifiWasSpecified:]
  -[AWDNetworkPerformanceMetric hasUseWifiWasSpecified]
  -[AWDNetworkPerformanceMetric hasWifiAveragePhyRateRx]
  -[AWDNetworkPerformanceMetric hasWifiAverageRssi]
  -[AWDNetworkPerformanceMetric hasWifiAverageSnr]
  -[AWDNetworkPerformanceMetric hasWifiAverageTcpRtt]
  -[AWDNetworkPerformanceMetric hasWifiBtcMode]
  -[AWDNetworkPerformanceMetric hasWifiCwfCca]
  -[AWDNetworkPerformanceMetric hasWifiEapolControlMode]
  -[AWDNetworkPerformanceMetric hasWifiEapolSupplicantState]
  -[AWDNetworkPerformanceMetric hasWifiGuardInterval]
  -[AWDNetworkPerformanceMetric hasWifiHiddenState]
  -[AWDNetworkPerformanceMetric setWifiIsCaptive:]
  -[AWDNetworkPerformanceMetric setHasWifiIsCaptive:]
  -[AWDNetworkPerformanceMetric hasWifiIsCaptive]
  -[AWDNetworkPerformanceMetric hasWifiMcsIndex]
  -[AWDNetworkPerformanceMetric hasWifiNoise]
  -[AWDNetworkPerformanceMetric hasWifiNumberOfSpatialStreams]
  -[AWDNetworkPerformanceMetric hasWifiOpMode]
  -[AWDNetworkPerformanceMetric hasWifiSecurity]
  -[AWDNetworkPerformanceMetric hasWifiTxRate]
  -[AWDNetworkPerformanceMetric hasWrmChannelType]
  -[AWDNetworkPerformanceMetric hasCellularCellid]
  -[AWDNetworkPerformanceMetric hasNetworkQualityResponsiveness]
  -[AWDNetworkPerformanceMetric hasCellularAggregatedDLBW]
  -[AWDNetworkPerformanceMetric hasCellularAggregatedULBW]
  -[AWDNetworkPerformanceMetric hasCellularIssa]
  -[AWDNetworkPerformanceMetric hasCellularLac]
  -[AWDNetworkPerformanceMetric hasCellularLteNrConfiguredBw]
  -[AWDNetworkPerformanceMetric hasCellularMaxDlMod]
  -[AWDNetworkPerformanceMetric hasCellularMaxNwMimoLyr]
  -[AWDNetworkPerformanceMetric hasCellularMaxSchdMimoLyr]
  -[AWDNetworkPerformanceMetric hasCellularMaxUeRank]
  -[AWDNetworkPerformanceMetric hasCellularMaxUlMod]
  -[AWDNetworkPerformanceMetric hasCellularNrSinr]
  -[AWDNetworkPerformanceMetric hasCellularNrarfcn]
  -[AWDNetworkPerformanceMetric hasCellularRadioFrequency]
  -[AWDNetworkPerformanceMetric hasCellularTotalDlMimoLayers]
  -[AWDNetworkPerformanceMetric hasCellularTotalNumCcs]
  -[AWDNetworkPerformanceMetric hasDownloadStartRadioFrequency]
  -[AWDNetworkPerformanceMetric hasDownloadEndRadioFrequency]
  -[AWDNetworkPerformanceMetric hasNetworkPrimaryIpv6InterfaceName]
  -[AWDNetworkPerformanceMetric hasNetworkPrimaryIpv6ServiceName]
  -[AWDNetworkPerformanceMetric hasUploadStartRadioFrequency]
  -[AWDNetworkPerformanceMetric hasUploadEndRadioFrequency]
  -[AWDNetworkPerformanceMetric hasDownloadError]
  -[AWDNetworkPerformanceMetric hasNetworkQualityError]
  -[AWDNetworkPerformanceMetric hasNetworkQualityDownloadSpeed]
  -[AWDNetworkPerformanceMetric hasNetworkQualityUploadSpeed]
  -[AWDNetworkPerformanceMetric hasNetworkQualityRating]
  -[AWDNetworkPerformanceMetric hasVpnConnectionState]
  -[AWDNetworkPerformanceMetric hasUploadError]
  -[AWDNetworkPerformanceMetric hasUploadErrorDomain]
  -[AWDNetworkPerformanceMetric hasUploadErrorCode]
  -[AWDNetworkPerformanceMetric hasDownloadErrorDomain]
  -[AWDNetworkPerformanceMetric hasDownloadErrorCode]
  -[AWDNetworkPerformanceMetric hasPingError]
  -[AWDNetworkPerformanceMetric hasPingErrorDomain]
  -[AWDNetworkPerformanceMetric hasPingErrorCode]
  -[AWDNetworkPerformanceMetric hasNetworkQualityErrorDomain]
  -[AWDNetworkPerformanceMetric hasNetworkQualityErrorCode]
  -[AWDNetworkPerformanceMetric hasCellularRnMobileCountryCode]
  -[AWDNetworkPerformanceMetric hasCellularRnMobileNetworkCode]
  -[AWDNetworkPerformanceMetric setCellularDataIsEnabled:]
  -[AWDNetworkPerformanceMetric setHasCellularDataIsEnabled:]
  -[AWDNetworkPerformanceMetric hasCellularDataIsEnabled]
  -[AWDNetworkPerformanceMetric hasDownloadStartCellularEstimate]
  -[AWDNetworkPerformanceMetric hasDownloadEndCellularEstimate]
  -[AWDNetworkPerformanceMetric hasDownloadMaxCellularEstimate]
  -[AWDNetworkPerformanceMetric hasUploadStartCellularEstimate]
  -[AWDNetworkPerformanceMetric hasUploadEndCellularEstimate]
  -[AWDNetworkPerformanceMetric hasUploadMaxCellularEstimate]
  -[AWDNetworkPerformanceMetric acceptablePerformanceResult]
  -[AWDNetworkPerformanceMetric awdlPowerState]
  -[AWDNetworkPerformanceMetric awdlSchedule]
  -[AWDNetworkPerformanceMetric setAwdlSchedule:]
  -[AWDNetworkPerformanceMetric btConnectedDevicesCount]
  -[AWDNetworkPerformanceMetric setBtConnectedDevicesCount:]
  -[AWDNetworkPerformanceMetric btIsConnectable]
  -[AWDNetworkPerformanceMetric btIsDiscoverable]
  -[AWDNetworkPerformanceMetric btIsPowerOn]
  -[AWDNetworkPerformanceMetric btIsScanning]
  -[AWDNetworkPerformanceMetric setCallingClient:]
  -[AWDNetworkPerformanceMetric cellularActiveContexts]
  -[AWDNetworkPerformanceMetric setCellularActiveContexts:]
  -[AWDNetworkPerformanceMetric cellularAllowsVoip]
  -[AWDNetworkPerformanceMetric cellularAttached]
  -[AWDNetworkPerformanceMetric setCellularAttached:]
  -[AWDNetworkPerformanceMetric cellularBandinfo]
  -[AWDNetworkPerformanceMetric setCellularBandinfo:]
  -[AWDNetworkPerformanceMetric cellularCarrierName]
  -[AWDNetworkPerformanceMetric setCellularCarrierName:]
  -[AWDNetworkPerformanceMetric cellularDataBearerSoMask]
  -[AWDNetworkPerformanceMetric setCellularDataBearerSoMask:]
  -[AWDNetworkPerformanceMetric cellularDataPlanSignalingReductionOverride]
  -[AWDNetworkPerformanceMetric setCellularDataPlanSignalingReductionOverride:]
  -[AWDNetworkPerformanceMetric cellularInHomeCountry]
  -[AWDNetworkPerformanceMetric setCellularInHomeCountry:]
  -[AWDNetworkPerformanceMetric cellularIndicator]
  -[AWDNetworkPerformanceMetric setCellularIndicator:]
  -[AWDNetworkPerformanceMetric cellularIndicatorOverride]
  -[AWDNetworkPerformanceMetric setCellularIndicatorOverride:]
  -[AWDNetworkPerformanceMetric cellularIsoCountryCode]
  -[AWDNetworkPerformanceMetric setCellularIsoCountryCode:]
  -[AWDNetworkPerformanceMetric cellularLteMaxScheduledLayers]
  -[AWDNetworkPerformanceMetric setCellularLteMaxScheduledLayers:]
  -[AWDNetworkPerformanceMetric cellularMobileCountryCode]
  -[AWDNetworkPerformanceMetric setCellularMobileCountryCode:]
  -[AWDNetworkPerformanceMetric cellularMobileNetworkCode]
  -[AWDNetworkPerformanceMetric setCellularMobileNetworkCode:]
  -[AWDNetworkPerformanceMetric cellularNewRadioCoverage]
  -[AWDNetworkPerformanceMetric setCellularNewRadioCoverage:]
  -[AWDNetworkPerformanceMetric cellularNewRadioDataBearer]
  -[AWDNetworkPerformanceMetric setCellularNewRadioDataBearer:]
  -[AWDNetworkPerformanceMetric cellularNewRadioMmwaveDataBearer]
  -[AWDNetworkPerformanceMetric setCellularNewRadioMmwaveDataBearer:]
  -[AWDNetworkPerformanceMetric cellularNewRadioNsaCoverage]
  -[AWDNetworkPerformanceMetric setCellularNewRadioNsaCoverage:]
  -[AWDNetworkPerformanceMetric cellularNewRadioNsaDataBearer]
  -[AWDNetworkPerformanceMetric setCellularNewRadioNsaDataBearer:]
  -[AWDNetworkPerformanceMetric cellularNewRadioSaCoverage]
  -[AWDNetworkPerformanceMetric setCellularNewRadioSaCoverage:]
  -[AWDNetworkPerformanceMetric cellularNewRadioSaDataBearer]
  -[AWDNetworkPerformanceMetric setCellularNewRadioSaDataBearer:]
  -[AWDNetworkPerformanceMetric cellularNewRadioSub6DataBearer]
  -[AWDNetworkPerformanceMetric setCellularNewRadioSub6DataBearer:]
  -[AWDNetworkPerformanceMetric cellularNrConfiguredBw]
  -[AWDNetworkPerformanceMetric setCellularNrConfiguredBw:]
  -[AWDNetworkPerformanceMetric cellularNrLayers]
  -[AWDNetworkPerformanceMetric setCellularNrLayers:]
  -[AWDNetworkPerformanceMetric cellularNrModulation]
  -[AWDNetworkPerformanceMetric setCellularNrModulation:]
  -[AWDNetworkPerformanceMetric cellularNrRsrp]
  -[AWDNetworkPerformanceMetric setCellularNrRsrp:]
  -[AWDNetworkPerformanceMetric cellularNrRsrq]
  -[AWDNetworkPerformanceMetric setCellularNrRsrq:]
  -[AWDNetworkPerformanceMetric cellularNrSnr]
  -[AWDNetworkPerformanceMetric setCellularNrSnr:]
  -[AWDNetworkPerformanceMetric cellularRadioAccessTechnologyCtDataStatus]
  -[AWDNetworkPerformanceMetric setCellularRadioAccessTechnologyCtDataStatus:]
  -[AWDNetworkPerformanceMetric cellularRoamAllowed]
  -[AWDNetworkPerformanceMetric setCellularRoamAllowed:]
  -[AWDNetworkPerformanceMetric cellularRsrp]
  -[AWDNetworkPerformanceMetric setCellularRsrp:]
  -[AWDNetworkPerformanceMetric cellularSnr]
  -[AWDNetworkPerformanceMetric setCellularSnr:]
  -[AWDNetworkPerformanceMetric cellularTotalActiveContexts]
  -[AWDNetworkPerformanceMetric setCellularTotalActiveContexts:]
  -[AWDNetworkPerformanceMetric cellularTotalBw]
  -[AWDNetworkPerformanceMetric setCellularTotalBw:]
  -[AWDNetworkPerformanceMetric cellularTotalCcs]
  -[AWDNetworkPerformanceMetric setCellularTotalCcs:]
  -[AWDNetworkPerformanceMetric cellularTotalLayers]
  -[AWDNetworkPerformanceMetric setCellularTotalLayers:]
  -[AWDNetworkPerformanceMetric downloadCdnPop]
  -[AWDNetworkPerformanceMetric setDownloadCdnPop:]
  -[AWDNetworkPerformanceMetric downloadCdnUuid]
  -[AWDNetworkPerformanceMetric setDownloadCdnUuid:]
  -[AWDNetworkPerformanceMetric downloadConnectionTime]
  -[AWDNetworkPerformanceMetric setDownloadConnectionTime:]
  -[AWDNetworkPerformanceMetric downloadDomainLookupTime]
  -[AWDNetworkPerformanceMetric setDownloadDomainLookupTime:]
  -[AWDNetworkPerformanceMetric downloadEndDataBearerTechnology]
  -[AWDNetworkPerformanceMetric setDownloadEndDataBearerTechnology:]
  -[AWDNetworkPerformanceMetric downloadEndPrimaryIpv4Interface]
  -[AWDNetworkPerformanceMetric setDownloadEndPrimaryIpv4Interface:]
  -[AWDNetworkPerformanceMetric downloadEndRat]
  -[AWDNetworkPerformanceMetric setDownloadEndRat:]
  -[AWDNetworkPerformanceMetric downloadFileSize]
  -[AWDNetworkPerformanceMetric setDownloadFileSize:]
  -[AWDNetworkPerformanceMetric downloadInterfaceName]
  -[AWDNetworkPerformanceMetric setDownloadInterfaceName:]
  -[AWDNetworkPerformanceMetric downloadInterfaceServiceName]
  -[AWDNetworkPerformanceMetric setDownloadInterfaceServiceName:]
  -[AWDNetworkPerformanceMetric downloadIsCellular]
  -[AWDNetworkPerformanceMetric downloadIsConstrained]
  -[AWDNetworkPerformanceMetric downloadIsExpensive]
  -[AWDNetworkPerformanceMetric downloadIsMultipath]
  -[AWDNetworkPerformanceMetric downloadIsProxyConnection]
  -[AWDNetworkPerformanceMetric downloadIsReusedConnection]
  -[AWDNetworkPerformanceMetric downloadMaxSpeedObserved]
  -[AWDNetworkPerformanceMetric setDownloadMaxSpeedObserved:]
  -[AWDNetworkPerformanceMetric downloadNumberOfStreams]
  -[AWDNetworkPerformanceMetric setDownloadNumberOfStreams:]
  -[AWDNetworkPerformanceMetric downloadProtocolName]
  -[AWDNetworkPerformanceMetric setDownloadProtocolName:]
  -[AWDNetworkPerformanceMetric downloadRemoteAddress]
  -[AWDNetworkPerformanceMetric setDownloadRemoteAddress:]
  -[AWDNetworkPerformanceMetric downloadRemotePort]
  -[AWDNetworkPerformanceMetric setDownloadRemotePort:]
  -[AWDNetworkPerformanceMetric downloadRequestTime]
  -[AWDNetworkPerformanceMetric setDownloadRequestTime:]
  -[AWDNetworkPerformanceMetric downloadRequestToResponseTime]
  -[AWDNetworkPerformanceMetric setDownloadRequestToResponseTime:]
  -[AWDNetworkPerformanceMetric downloadResponseTime]
  -[AWDNetworkPerformanceMetric setDownloadResponseTime:]
  -[AWDNetworkPerformanceMetric downloadSecureConnectionTime]
  -[AWDNetworkPerformanceMetric setDownloadSecureConnectionTime:]
  -[AWDNetworkPerformanceMetric downloadServer]
  -[AWDNetworkPerformanceMetric setDownloadServer:]
  -[AWDNetworkPerformanceMetric downloadStableSpeed]
  -[AWDNetworkPerformanceMetric setDownloadStableSpeed:]
  -[AWDNetworkPerformanceMetric downloadStartDataBearerTechnology]
  -[AWDNetworkPerformanceMetric setDownloadStartDataBearerTechnology:]
  -[AWDNetworkPerformanceMetric downloadStartPrimaryIpv4Interface]
  -[AWDNetworkPerformanceMetric setDownloadStartPrimaryIpv4Interface:]
  -[AWDNetworkPerformanceMetric downloadStartRat]
  -[AWDNetworkPerformanceMetric setDownloadStartRat:]
  -[AWDNetworkPerformanceMetric networkIsAppleReachable]
  -[AWDNetworkPerformanceMetric networkPrimaryIpv4InterfaceName]
  -[AWDNetworkPerformanceMetric setNetworkPrimaryIpv4InterfaceName:]
  -[AWDNetworkPerformanceMetric networkPrimaryIpv4ServiceName]
  -[AWDNetworkPerformanceMetric setNetworkPrimaryIpv4ServiceName:]
  -[AWDNetworkPerformanceMetric nptkitFrameworkVersion]
  -[AWDNetworkPerformanceMetric setNptkitFrameworkVersion:]
  -[AWDNetworkPerformanceMetric performanceTestStartTime]
  -[AWDNetworkPerformanceMetric setPerformanceTestStartTime:]
  -[AWDNetworkPerformanceMetric pingAddress]
  -[AWDNetworkPerformanceMetric setPingAddress:]
  -[AWDNetworkPerformanceMetric pingLossPercent]
  -[AWDNetworkPerformanceMetric setPingLossPercent:]
  -[AWDNetworkPerformanceMetric pingMaxLatency]
  -[AWDNetworkPerformanceMetric setPingMaxLatency:]
  -[AWDNetworkPerformanceMetric pingMeanLatency]
  -[AWDNetworkPerformanceMetric setPingMeanLatency:]
  -[AWDNetworkPerformanceMetric pingMinLatency]
  -[AWDNetworkPerformanceMetric setPingMinLatency:]
  -[AWDNetworkPerformanceMetric pingStandardDeviation]
  -[AWDNetworkPerformanceMetric setPingStandardDeviation:]
  -[AWDNetworkPerformanceMetric powerBatteryWarningLevel]
  -[AWDNetworkPerformanceMetric setPowerBatteryWarningLevel:]
  -[AWDNetworkPerformanceMetric systemActiveProcessorCount]
  -[AWDNetworkPerformanceMetric setSystemActiveProcessorCount:]
  -[AWDNetworkPerformanceMetric systemBatteryLevel]
  -[AWDNetworkPerformanceMetric setSystemBatteryLevel:]
  -[AWDNetworkPerformanceMetric systemBatteryState]
  -[AWDNetworkPerformanceMetric setSystemBatteryState:]
  -[AWDNetworkPerformanceMetric systemDeviceClass]
  -[AWDNetworkPerformanceMetric setSystemDeviceClass:]
  -[AWDNetworkPerformanceMetric systemDeviceModel]
  -[AWDNetworkPerformanceMetric setSystemDeviceModel:]
  -[AWDNetworkPerformanceMetric systemLowPowerModeEnabled]
  -[AWDNetworkPerformanceMetric systemOsVariant]
  -[AWDNetworkPerformanceMetric setSystemOsVariant:]
  -[AWDNetworkPerformanceMetric systemPhysicalMemory]
  -[AWDNetworkPerformanceMetric setSystemPhysicalMemory:]
  -[AWDNetworkPerformanceMetric systemPowersourceConnected]
  -[AWDNetworkPerformanceMetric systemProcessorCount]
  -[AWDNetworkPerformanceMetric setSystemProcessorCount:]
  -[AWDNetworkPerformanceMetric uploadCdnPop]
  -[AWDNetworkPerformanceMetric setUploadCdnPop:]
  -[AWDNetworkPerformanceMetric uploadCdnUuid]
  -[AWDNetworkPerformanceMetric setUploadCdnUuid:]
  -[AWDNetworkPerformanceMetric uploadConnectionTime]
  -[AWDNetworkPerformanceMetric setUploadConnectionTime:]
  -[AWDNetworkPerformanceMetric uploadDomainLookupTime]
  -[AWDNetworkPerformanceMetric setUploadDomainLookupTime:]
  -[AWDNetworkPerformanceMetric uploadEndDataBearerTechnology]
  -[AWDNetworkPerformanceMetric setUploadEndDataBearerTechnology:]
  -[AWDNetworkPerformanceMetric uploadEndPrimaryIpv4Interface]
  -[AWDNetworkPerformanceMetric setUploadEndPrimaryIpv4Interface:]
  -[AWDNetworkPerformanceMetric uploadEndRat]
  -[AWDNetworkPerformanceMetric setUploadEndRat:]
  -[AWDNetworkPerformanceMetric setUploadFileSize:]
  -[AWDNetworkPerformanceMetric uploadInterfaceName]
  -[AWDNetworkPerformanceMetric setUploadInterfaceName:]
  -[AWDNetworkPerformanceMetric uploadInterfaceServiceName]
  -[AWDNetworkPerformanceMetric setUploadInterfaceServiceName:]
  -[AWDNetworkPerformanceMetric uploadIsCellular]
  -[AWDNetworkPerformanceMetric uploadIsConstrained]
  -[AWDNetworkPerformanceMetric uploadIsExpensive]
  -[AWDNetworkPerformanceMetric uploadIsMultipath]
  -[AWDNetworkPerformanceMetric uploadIsProxyConnection]
  -[AWDNetworkPerformanceMetric uploadIsReusedConnection]
  -[AWDNetworkPerformanceMetric uploadMaxSpeedObserved]
  -[AWDNetworkPerformanceMetric setUploadMaxSpeedObserved:]
  -[AWDNetworkPerformanceMetric uploadNumberOfStreams]
  -[AWDNetworkPerformanceMetric setUploadNumberOfStreams:]
  -[AWDNetworkPerformanceMetric uploadProtocolName]
  -[AWDNetworkPerformanceMetric setUploadProtocolName:]
  -[AWDNetworkPerformanceMetric uploadRemoteAddress]
  -[AWDNetworkPerformanceMetric setUploadRemoteAddress:]
  -[AWDNetworkPerformanceMetric uploadRemotePort]
  -[AWDNetworkPerformanceMetric setUploadRemotePort:]
  -[AWDNetworkPerformanceMetric uploadRequestTime]
  -[AWDNetworkPerformanceMetric setUploadRequestTime:]
  -[AWDNetworkPerformanceMetric uploadRequestToResponseTime]
  -[AWDNetworkPerformanceMetric setUploadRequestToResponseTime:]
  -[AWDNetworkPerformanceMetric uploadResponseTime]
  -[AWDNetworkPerformanceMetric setUploadResponseTime:]
  -[AWDNetworkPerformanceMetric uploadSecureConnectionTime]
  -[AWDNetworkPerformanceMetric setUploadSecureConnectionTime:]
  -[AWDNetworkPerformanceMetric uploadServer]
  -[AWDNetworkPerformanceMetric setUploadServer:]
  -[AWDNetworkPerformanceMetric uploadSpeed]
  -[AWDNetworkPerformanceMetric setUploadSpeed:]
  -[AWDNetworkPerformanceMetric uploadStableSpeed]
  -[AWDNetworkPerformanceMetric setUploadStableSpeed:]
  -[AWDNetworkPerformanceMetric uploadStartDataBearerTechnology]
  -[AWDNetworkPerformanceMetric setUploadStartDataBearerTechnology:]
  -[AWDNetworkPerformanceMetric uploadStartPrimaryIpv4Interface]
  -[AWDNetworkPerformanceMetric setUploadStartPrimaryIpv4Interface:]
  -[AWDNetworkPerformanceMetric uploadStartRat]
  -[AWDNetworkPerformanceMetric setUploadStartRat:]
  -[AWDNetworkPerformanceMetric useWifiWasSpecified]
  -[AWDNetworkPerformanceMetric wifiAveragePhyRateRx]
  -[AWDNetworkPerformanceMetric setWifiAveragePhyRateRx:]
  -[AWDNetworkPerformanceMetric wifiAverageRssi]
  -[AWDNetworkPerformanceMetric setWifiAverageRssi:]
  -[AWDNetworkPerformanceMetric wifiAverageSnr]
  -[AWDNetworkPerformanceMetric setWifiAverageSnr:]
  -[AWDNetworkPerformanceMetric wifiAverageTcpRtt]
  -[AWDNetworkPerformanceMetric setWifiAverageTcpRtt:]
  -[AWDNetworkPerformanceMetric wifiBtcMode]
  -[AWDNetworkPerformanceMetric setWifiBtcMode:]
  -[AWDNetworkPerformanceMetric wifiCwfCca]
  -[AWDNetworkPerformanceMetric setWifiCwfCca:]
  -[AWDNetworkPerformanceMetric wifiEapolControlMode]
  -[AWDNetworkPerformanceMetric setWifiEapolControlMode:]
  -[AWDNetworkPerformanceMetric wifiEapolSupplicantState]
  -[AWDNetworkPerformanceMetric setWifiEapolSupplicantState:]
  -[AWDNetworkPerformanceMetric wifiGuardInterval]
  -[AWDNetworkPerformanceMetric setWifiGuardInterval:]
  -[AWDNetworkPerformanceMetric wifiHiddenState]
  -[AWDNetworkPerformanceMetric setWifiHiddenState:]
  -[AWDNetworkPerformanceMetric wifiIsCaptive]
  -[AWDNetworkPerformanceMetric wifiMcsIndex]
  -[AWDNetworkPerformanceMetric setWifiMcsIndex:]
  -[AWDNetworkPerformanceMetric wifiNoise]
  -[AWDNetworkPerformanceMetric setWifiNoise:]
  -[AWDNetworkPerformanceMetric wifiNumberOfSpatialStreams]
  -[AWDNetworkPerformanceMetric setWifiNumberOfSpatialStreams:]
  -[AWDNetworkPerformanceMetric wifiOpMode]
  -[AWDNetworkPerformanceMetric setWifiOpMode:]
  -[AWDNetworkPerformanceMetric wifiSecurity]
  -[AWDNetworkPerformanceMetric setWifiSecurity:]
  -[AWDNetworkPerformanceMetric wifiTxRate]
  -[AWDNetworkPerformanceMetric setWifiTxRate:]
  -[AWDNetworkPerformanceMetric wrmChannelType]
  -[AWDNetworkPerformanceMetric setWrmChannelType:]
  -[AWDNetworkPerformanceMetric cellularCellid]
  -[AWDNetworkPerformanceMetric setCellularCellid:]
  -[AWDNetworkPerformanceMetric networkQualityResponsiveness]
  -[AWDNetworkPerformanceMetric setNetworkQualityResponsiveness:]
  -[AWDNetworkPerformanceMetric cellularAggregatedDLBW]
  -[AWDNetworkPerformanceMetric setCellularAggregatedDLBW:]
  -[AWDNetworkPerformanceMetric cellularAggregatedULBW]
  -[AWDNetworkPerformanceMetric setCellularAggregatedULBW:]
  -[AWDNetworkPerformanceMetric cellularIssa]
  -[AWDNetworkPerformanceMetric setCellularIssa:]
  -[AWDNetworkPerformanceMetric cellularLac]
  -[AWDNetworkPerformanceMetric setCellularLac:]
  -[AWDNetworkPerformanceMetric cellularLteNrConfiguredBw]
  -[AWDNetworkPerformanceMetric setCellularLteNrConfiguredBw:]
  -[AWDNetworkPerformanceMetric cellularMaxDlMod]
  -[AWDNetworkPerformanceMetric setCellularMaxDlMod:]
  -[AWDNetworkPerformanceMetric cellularMaxNwMimoLyr]
  -[AWDNetworkPerformanceMetric setCellularMaxNwMimoLyr:]
  -[AWDNetworkPerformanceMetric cellularMaxSchdMimoLyr]
  -[AWDNetworkPerformanceMetric setCellularMaxSchdMimoLyr:]
  -[AWDNetworkPerformanceMetric cellularMaxUeRank]
  -[AWDNetworkPerformanceMetric setCellularMaxUeRank:]
  -[AWDNetworkPerformanceMetric cellularMaxUlMod]
  -[AWDNetworkPerformanceMetric setCellularMaxUlMod:]
  -[AWDNetworkPerformanceMetric cellularNrSinr]
  -[AWDNetworkPerformanceMetric setCellularNrSinr:]
  -[AWDNetworkPerformanceMetric cellularNrarfcn]
  -[AWDNetworkPerformanceMetric setCellularNrarfcn:]
  -[AWDNetworkPerformanceMetric cellularRadioFrequency]
  -[AWDNetworkPerformanceMetric setCellularRadioFrequency:]
  -[AWDNetworkPerformanceMetric cellularTotalDlMimoLayers]
  -[AWDNetworkPerformanceMetric setCellularTotalDlMimoLayers:]
  -[AWDNetworkPerformanceMetric cellularTotalNumCcs]
  -[AWDNetworkPerformanceMetric setCellularTotalNumCcs:]
  -[AWDNetworkPerformanceMetric downloadStartRadioFrequency]
  -[AWDNetworkPerformanceMetric setDownloadStartRadioFrequency:]
  -[AWDNetworkPerformanceMetric downloadEndRadioFrequency]
  -[AWDNetworkPerformanceMetric setDownloadEndRadioFrequency:]
  -[AWDNetworkPerformanceMetric networkPrimaryIpv6InterfaceName]
  -[AWDNetworkPerformanceMetric setNetworkPrimaryIpv6InterfaceName:]
  -[AWDNetworkPerformanceMetric networkPrimaryIpv6ServiceName]
  -[AWDNetworkPerformanceMetric setNetworkPrimaryIpv6ServiceName:]
  -[AWDNetworkPerformanceMetric uploadStartRadioFrequency]
  -[AWDNetworkPerformanceMetric setUploadStartRadioFrequency:]
  -[AWDNetworkPerformanceMetric uploadEndRadioFrequency]
  -[AWDNetworkPerformanceMetric setUploadEndRadioFrequency:]
  -[AWDNetworkPerformanceMetric networkQualityError]
  -[AWDNetworkPerformanceMetric setNetworkQualityError:]
  -[AWDNetworkPerformanceMetric networkQualityDownloadSpeed]
  -[AWDNetworkPerformanceMetric setNetworkQualityDownloadSpeed:]
  -[AWDNetworkPerformanceMetric networkQualityUploadSpeed]
  -[AWDNetworkPerformanceMetric setNetworkQualityUploadSpeed:]
  -[AWDNetworkPerformanceMetric networkQualityRating]
  -[AWDNetworkPerformanceMetric setNetworkQualityRating:]
  -[AWDNetworkPerformanceMetric vpnConnectionState]
  -[AWDNetworkPerformanceMetric setVpnConnectionState:]
  -[AWDNetworkPerformanceMetric uploadErrorDomain]
  -[AWDNetworkPerformanceMetric setUploadErrorDomain:]
  -[AWDNetworkPerformanceMetric uploadErrorCode]
  -[AWDNetworkPerformanceMetric setUploadErrorCode:]
  -[AWDNetworkPerformanceMetric downloadErrorDomain]
  -[AWDNetworkPerformanceMetric setDownloadErrorDomain:]
  -[AWDNetworkPerformanceMetric downloadErrorCode]
  -[AWDNetworkPerformanceMetric setDownloadErrorCode:]
  -[AWDNetworkPerformanceMetric pingError]
  -[AWDNetworkPerformanceMetric setPingError:]
  -[AWDNetworkPerformanceMetric pingErrorDomain]
  -[AWDNetworkPerformanceMetric setPingErrorDomain:]
  -[AWDNetworkPerformanceMetric pingErrorCode]
  -[AWDNetworkPerformanceMetric setPingErrorCode:]
  -[AWDNetworkPerformanceMetric networkQualityErrorDomain]
  -[AWDNetworkPerformanceMetric setNetworkQualityErrorDomain:]
  -[AWDNetworkPerformanceMetric networkQualityErrorCode]
  -[AWDNetworkPerformanceMetric setNetworkQualityErrorCode:]
  -[AWDNetworkPerformanceMetric cellularRnMobileCountryCode]
  -[AWDNetworkPerformanceMetric setCellularRnMobileCountryCode:]
  -[AWDNetworkPerformanceMetric cellularRnMobileNetworkCode]
  -[AWDNetworkPerformanceMetric setCellularRnMobileNetworkCode:]
  -[AWDNetworkPerformanceMetric cellularDataIsEnabled]
  -[AWDNetworkPerformanceMetric downloadStartCellularEstimate]
  -[AWDNetworkPerformanceMetric setDownloadStartCellularEstimate:]
  -[AWDNetworkPerformanceMetric downloadEndCellularEstimate]
  -[AWDNetworkPerformanceMetric setDownloadEndCellularEstimate:]
  -[AWDNetworkPerformanceMetric downloadMaxCellularEstimate]
  -[AWDNetworkPerformanceMetric setDownloadMaxCellularEstimate:]
  -[AWDNetworkPerformanceMetric uploadStartCellularEstimate]
  -[AWDNetworkPerformanceMetric setUploadStartCellularEstimate:]
  -[AWDNetworkPerformanceMetric uploadEndCellularEstimate]
  -[AWDNetworkPerformanceMetric setUploadEndCellularEstimate:]
  -[AWDNetworkPerformanceMetric uploadMaxCellularEstimate]
  -[AWDNetworkPerformanceMetric setUploadMaxCellularEstimate:]


NPTNetworkCollector : NSObject <NPTMetadataCollection>
 @property  W5Client *client
 @property  NSArray *eventsToMonitor
 @property  @? metadataDidChangeHandler
 @property  NSMutableDictionary *cachedMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTNetworkCollector collectorName]

  // instance methods
  -[NPTNetworkCollector stopCollecting]
  -[NPTNetworkCollector .cxx_destruct]
  -[NPTNetworkCollector setClient:]
  -[NPTNetworkCollector client]
  -[NPTNetworkCollector setCachedMetadata:]
  -[NPTNetworkCollector cachedMetadata]
  -[NPTNetworkCollector startCollectingWithCompletion:]
  -[NPTNetworkCollector setMetadataDidChangeHandler:]
  -[NPTNetworkCollector metadataDidChangeHandler]
  -[NPTNetworkCollector eventsToMonitor]
  -[NPTNetworkCollector setEventsToMonitor:]


NPTPing : NSObject <NSSecureCoding, SimplePingDelegate, NSCopying>
 @property  @? completion
 @property  id delegate
 @property  NPTPingResult *results
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTPing supportsSecureCoding]

  // instance methods
  -[NPTPing startWithNumberOfPings:forcingIPv4:forcingIPv6:completion:]
  -[NPTPing completion]
  -[NPTPing setDelegate:]
  -[NPTPing initWithNetworkActivityParent:pingTarget:]
  -[NPTPing sendPing]
  -[NPTPing encodeWithCoder:]
  -[NPTPing delegate]
  -[NPTPing setCompletion:]
  -[NPTPing .cxx_destruct]
  -[NPTPing simplePing:didFailWithError:]
  -[NPTPing stop]
  -[NPTPing simplePing:didStartWithAddress:]
  -[NPTPing simplePing:didReceivePingResponsePacket:sequenceNumber:]
  -[NPTPing initWithNetworkActivityParent:]
  -[NPTPing simplePing:didSendPacket:sequenceNumber:]
  -[NPTPing copyWithZone:]
  -[NPTPing simplePing:didTimeOut:sequenceNumber:error:]
  -[NPTPing results]
  -[NPTPing startWithNumberOfPings:forcingIPv4:forcingIPv6:]
  -[NPTPing setResults:]
  -[NPTPing simplePing:didReceiveUnexpectedPacket:]
  -[NPTPing cancel]
  -[NPTPing simplePing:didFailToSendPacket:sequenceNumber:error:]
  -[NPTPing initWithCoder:]


NPTFileSizeConverter : NSObject
  // class methods
  +[NPTFileSizeConverter getFileSizeInBytes:]
  +[NPTFileSizeConverter getFileSizeAsString:]
  +[NPTFileSizeConverter fileSizeFromInt:]


SimplePing : NSObject <NSCopying>
 @property  NSData *hostAddress
 @property  unsigned short nextSequenceNumber
 @property  BOOL nextSequenceNumberHasWrapped
 @property  ^{__CFHost=} host
 @property  ^{__CFSocket=} socket
 @property  NSString *hostName
 @property  <SimplePingDelegate> *delegate
 @property  long long addressStyle
 @property  unsigned char hostAddressFamily
 @property  unsigned short identifier

  // class methods
  +[SimplePing icmpHeaderOffsetInIPv4Packet:]

  // instance methods
  -[SimplePing readData]
  -[SimplePing validateSequenceNumber:]
  -[SimplePing identifier]
  -[SimplePing setHostAddress:]
  -[SimplePing setHost:]
  -[SimplePing setDelegate:]
  -[SimplePing delegate]
  -[SimplePing hostName]
  -[SimplePing nextSequenceNumberHasWrapped]
  -[SimplePing initWithHostName:]
  -[SimplePing dealloc]
  -[SimplePing hostAddressFamily]
  -[SimplePing nextSequenceNumber]
  -[SimplePing socket]
  -[SimplePing .cxx_destruct]
  -[SimplePing sendPingWithData:]
  -[SimplePing timeOutHandler:sequenceNumber:]
  -[SimplePing didFailWithHostStreamError:]
  -[SimplePing host]
  -[SimplePing stop]
  -[SimplePing hostResolutionDone]
  -[SimplePing hostAddress]
  -[SimplePing setNextSequenceNumber:]
  -[SimplePing stopSocket]
  -[SimplePing setSocket:]
  -[SimplePing validatePing6ResponsePacket:sequenceNumber:]
  -[SimplePing pingPacketWithType:payload:requiresChecksum:]
  -[SimplePing copyWithZone:]
  -[SimplePing didFailWithError:]
  -[SimplePing validatePing4ResponsePacket:sequenceNumber:]
  -[SimplePing addressStyle]
  -[SimplePing setupTimer:currentSequenceNumber:]
  -[SimplePing start]
  -[SimplePing startWithHostAddress]
  -[SimplePing stopHostResolution]
  -[SimplePing setAddressStyle:]
  -[SimplePing setNextSequenceNumberHasWrapped:]
  -[SimplePing validatePingResponsePacket:sequenceNumber:]


NPTWiFiCollector : NSObject <NPTMetadataCollection>
 @property  CWFInterface *interface
 @property  @? metadataDidChangeHandler
 @property  NSMutableDictionary *cachedMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTWiFiCollector collectorName]
  +[NPTWiFiCollector fetchWiFiData:]
  +[NPTWiFiCollector convertBSSIDToOUI:]
  +[NPTWiFiCollector SecurityTypeToString:]
  +[NPTWiFiCollector BTCModeToString:]
  +[NPTWiFiCollector ControlModeToString:]
  +[NPTWiFiCollector OpModeToString:]
  +[NPTWiFiCollector PhyModeToString:]
  +[NPTWiFiCollector convertPowerStateToString:]
  +[NPTWiFiCollector channelBandToInt:]

  // instance methods
  -[NPTWiFiCollector interface]
  -[NPTWiFiCollector stopCollecting]
  -[NPTWiFiCollector .cxx_destruct]
  -[NPTWiFiCollector setInterface:]
  -[NPTWiFiCollector setCachedMetadata:]
  -[NPTWiFiCollector cachedMetadata]
  -[NPTWiFiCollector startCollectingWithCompletion:]
  -[NPTWiFiCollector setMetadataDidChangeHandler:]
  -[NPTWiFiCollector metadataDidChangeHandler]


NPTMetadataCollector : NSObject <NPTMetadataCollection>
 @property  CWFInterface *interface
 @property  NSMutableArray *collectors
 @property  NSDate *startDate
 @property  NSObject<OS_dispatch_queue> *backgroundQueue
 @property  @? metadataDidChangeHandlerForCollectors
 @property  @? metadataDidChangeHandler
 @property  NSMutableDictionary *cachedMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTMetadataCollector fetch]
  +[NPTMetadataCollector collectorName]
  +[NPTMetadataCollector fetchWRMMetrics]
  +[NPTMetadataCollector fetchDeviceData]
  +[NPTMetadataCollector fetchCellularData]

  // instance methods
  -[NPTMetadataCollector interface]
  -[NPTMetadataCollector stopCollecting]
  -[NPTMetadataCollector .cxx_destruct]
  -[NPTMetadataCollector setStartDate:]
  -[NPTMetadataCollector setInterface:]
  -[NPTMetadataCollector setCachedMetadata:]
  -[NPTMetadataCollector cachedMetadata]
  -[NPTMetadataCollector backgroundQueue]
  -[NPTMetadataCollector startCollectingWithCompletion:]
  -[NPTMetadataCollector setMetadataDidChangeHandler:]
  -[NPTMetadataCollector metadataDidChangeHandler]
  -[NPTMetadataCollector startDate]
  -[NPTMetadataCollector setBackgroundQueue:]
  -[NPTMetadataCollector init]
  -[NPTMetadataCollector collectors]
  -[NPTMetadataCollector initWithCollectorTypes:]
  -[NPTMetadataCollector knownCollectionType:]
  -[NPTMetadataCollector setCollectors:]
  -[NPTMetadataCollector metadataDidChangeHandlerForCollectors]
  -[NPTMetadataCollector setMetadataDidChangeHandlerForCollectors:]


NPTBTCollector : NSObject <NPTMetadataCollection>
 @property  W5Client *client
 @property  NSArray *eventsToMonitor
 @property  @? metadataDidChangeHandler
 @property  NSMutableDictionary *cachedMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTBTCollector collectorName]

  // instance methods
  -[NPTBTCollector stopCollecting]
  -[NPTBTCollector .cxx_destruct]
  -[NPTBTCollector setClient:]
  -[NPTBTCollector client]
  -[NPTBTCollector setCachedMetadata:]
  -[NPTBTCollector cachedMetadata]
  -[NPTBTCollector startCollectingWithCompletion:]
  -[NPTBTCollector setMetadataDidChangeHandler:]
  -[NPTBTCollector metadataDidChangeHandler]
  -[NPTBTCollector eventsToMonitor]
  -[NPTBTCollector setEventsToMonitor:]


AWDNetworkPerformanceMetricInitializer : NSObject
  // class methods
  +[AWDNetworkPerformanceMetricInitializer createPerformanceMetricFromDictionary:]


NPTSystemCollector : NSObject <NPTMetadataCollection>
 @property  W5Client *client
 @property  NSArray *eventsToMonitor
 @property  @? metadataDidChangeHandler
 @property  NSMutableDictionary *cachedMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NPTSystemCollector collectorName]

  // instance methods
  -[NPTSystemCollector stopCollecting]
  -[NPTSystemCollector .cxx_destruct]
  -[NPTSystemCollector setClient:]
  -[NPTSystemCollector client]
  -[NPTSystemCollector setCachedMetadata:]
  -[NPTSystemCollector cachedMetadata]
  -[NPTSystemCollector startCollectingWithCompletion:]
  -[NPTSystemCollector setMetadataDidChangeHandler:]
  -[NPTSystemCollector metadataDidChangeHandler]
  -[NPTSystemCollector fetchDeviceData]
  -[NPTSystemCollector eventsToMonitor]
  -[NPTSystemCollector setEventsToMonitor:]


W5NetworkStatus(Strings)
	// instance methods
	-[W5NetworkStatus(Strings) dictionary]
	-[W5NetworkStatus(Strings) isAppleReachableBool]

CWFNetworkProfile(Strings)
	// instance methods
	-[CWFNetworkProfile(Strings) dictionary]
	-[CWFNetworkProfile(Strings) __descriptionForLowDataMode]
	-[CWFNetworkProfile(Strings) __descriptionForHiddenState]

NEVPNProtocol(Dictionary)
	// instance methods
	-[NEVPNProtocol(Dictionary) dictionary]

CWFRoamStatus(Dictionary)
	// instance methods
	-[CWFRoamStatus(Dictionary) dictionary]

CWFAutoJoinStatus(Dictionary)
	// instance methods
	-[CWFAutoJoinStatus(Dictionary) dictionary]

W5BluetoothStatus(Strings)
	// instance methods
	-[W5BluetoothStatus(Strings) dictionary]

CTDataStatus(Strings)
	// instance methods
	-[CTDataStatus(Strings) dictionary]
	-[CTDataStatus(Strings) radioTechnologyString]
	-[CTDataStatus(Strings) dataBearerTechnologyString]
	-[CTDataStatus(Strings) indicatorString]
	-[CTDataStatus(Strings) indicatorOverrideString]
	-[CTDataStatus(Strings) radioFrequencyString]
	-[CTDataStatus(Strings) radioCoverageString]

W5WiFiStatus(Strings)
	// instance methods
	-[W5WiFiStatus(Strings) dictionary]
	-[W5WiFiStatus(Strings) powerString]
	-[W5WiFiStatus(Strings) desenseString]
	-[W5WiFiStatus(Strings) chainAckString]

NSURLSessionTaskTransactionMetrics(InterfaceServiceName)
	// instance methods
	-[NSURLSessionTaskTransactionMetrics(InterfaceServiceName) interfaceName]
	-[NSURLSessionTaskTransactionMetrics(InterfaceServiceName) interfaceServiceName]

W5PowerStatus(Strings)
	// instance methods
	-[W5PowerStatus(Strings) dictionary]

CWFJoinStatus(Dictionary)
	// instance methods
	-[CWFJoinStatus(Dictionary) dictionary]

CWFLinkQualityMetric(Dictionary)
	// instance methods
	-[CWFLinkQualityMetric(Dictionary) dictionary]

CWFScanResult(Dictionary)
	// instance methods
	-[CWFScanResult(Dictionary) dictionary]

W5AWDLStatus(Strings)
	// instance methods
	-[W5AWDLStatus(Strings) dictionary]
	-[W5AWDLStatus(Strings) awdlOpModeString]
	-[W5AWDLStatus(Strings) awdlScheduleString]
	-[W5AWDLStatus(Strings) awdlSyncChannelSequenceString]
	-[W5AWDLStatus(Strings) awdlMasterChannelString]
	-[W5AWDLStatus(Strings) awdlSecondaryMasterChannelString]
	-[W5AWDLStatus(Strings) awdlSyncStateString]
	-[W5AWDLStatus(Strings) awdlElectionParametersString]

01 00 0900 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTBundle 
01 00 0900 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTDataStatus 
01 00 0900 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTServiceDescriptor 
01 00 0900 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTTelephonyNetworkInfo 
01 00 0900 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CTXPCServiceSubscriptionContext 
01 00 0b00 /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi: CWFAutoJoinStatus 
01 00 0b00 /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi: CWFInterface 
01 00 0b00 /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi: CWFJoinStatus 
01 00 0b00 /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi: CWFLinkQualityMetric 
01 00 0b00 /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi: CWFNetworkProfile 
01 00 0b00 /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi: CWFRoamStatus 
01 00 0b00 /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi: CWFScanResult 
01 00 0900 /System/Library/Frameworks/CoreTelephony.framework/CoreTelephony: CoreTelephonyClient 
01 00 0300 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEConfigurationManager 
01 00 0300 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEVPNManager 
01 00 0300 /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension: NEVPNProtocol 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDecimalNumber 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0f00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSession 
01 00 0f00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionConfiguration 
01 00 0f00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSURLSessionTaskTransactionMetrics 
01 00 1100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0800 /System/Library/Frameworks/Network.framework/Network: NWParameters 
01 00 0800 /System/Library/Frameworks/Network.framework/Network: NWPathEvaluator 
01 00 0240 /usr/lib/libnetquality.dylib: NetworkQualityAssessment 
01 00 0240 /usr/lib/libnetquality.dylib: NetworkQualityConfiguration 
01 00 0240 /usr/lib/libnetquality.dylib: NetworkQualityExecutions 
01 00 0240 /usr/lib/libnetquality.dylib: NetworkQualityResult 
01 00 1300 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1000 /System/Library/PrivateFrameworks/WiFiVelocity.framework/WiFiVelocity: W5AWDLStatus 
01 00 1000 /System/Library/PrivateFrameworks/WiFiVelocity.framework/WiFiVelocity: W5BluetoothStatus 
01 00 1000 /System/Library/PrivateFrameworks/WiFiVelocity.framework/WiFiVelocity: W5Client 
01 00 1000 /System/Library/PrivateFrameworks/WiFiVelocity.framework/WiFiVelocity: W5NetworkStatus 
01 00 1000 /System/Library/PrivateFrameworks/WiFiVelocity.framework/WiFiVelocity: W5PowerStatus 
01 00 1000 /System/Library/PrivateFrameworks/WiFiVelocity.framework/WiFiVelocity: W5WiFiStatus 
01 00 0400 /System/Library/PrivateFrameworks/WirelessCoexManager.framework/WirelessCoexManager: WRMBasebandMetricsInterface 
