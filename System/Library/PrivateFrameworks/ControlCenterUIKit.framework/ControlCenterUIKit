|| __DATA.__objc_data _OBJC_CLASS_$_CCUIContentModuleDetailAnimationController
|| __DATA.__objc_data _OBJC_CLASS_$_CCUIContentModuleDetailClickPresentationTransition
|| __DATA.__objc_data _OBJC_CLASS_$_CCUIContentModuleDetailPresentationController
|| __DATA.__objc_data _OBJC_CLASS_$_CCUIModuleSliderView
|| __DATA.__objc_data _OBJC_METACLASS_$_CCUIContentModuleDetailAnimationController
|| __DATA.__objc_data _OBJC_METACLASS_$_CCUIContentModuleDetailClickPresentationTransition
|| __DATA.__objc_data _OBJC_METACLASS_$_CCUIContentModuleDetailPresentationController
|| __DATA.__objc_data _OBJC_METACLASS_$_CCUIModuleSliderView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CCUIAppLauncherViewController._assetProvider
|| __DATA.__objc_ivar _OBJC_IVAR_$_CCUIAppLauncherViewController._fetchedMenuItems
|| __DATA.__objc_ivar _OBJC_IVAR_$_CCUIAppLauncherViewController._menuItemsFetchQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CCUIToggleViewController._glyphImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_CCUIToggleViewController._glyphImageView
|| __DATA.__objc_ivar _OBJC_IVAR_$_CCUIToggleViewController._glyphPackageDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$_CCUIToggleViewController._glyphState
|| __DATA.__objc_ivar _OBJC_IVAR_$_CCUIToggleViewController._selectedColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_CCUIToggleViewController._selectedGlyphImage
|| __DATA_CONST.__const _CCUIAppLaunchOriginControlCenter
|| __DATA_CONST.__const _CCUICoreSpeechBundleIdentifier
|| __DATA_CONST.__const _CCUICoreTelephonyBundleIdentifier
|| __DATA_CONST.__const _CCUIFaceTimeBundleIdentifier
|| __DATA_CONST.__const _CCUIPhoneBundleIdentifier
|| __DATA_CONST.__const _CCUISafariBundleIdentifier
|| __DATA_CONST.__const _CCUISafariViewControllerBundleIdentifier
|| __DATA_CONST.__const _CCUISiriAndDictationBundleIdentifier
|| __DATA_CONST.__const _CCUIWalletBundleIdentifier
|| __DATA_CONST.__const _kCCUIGlyphPackageViewStateDefault
|| __DATA_DIRTY.__common _CCUILogAnimationRunner
|| __DATA_DIRTY.__common _CCUILogIconLookup
|| __DATA_DIRTY.__common _CCUILogModuleInstance
|| __DATA_DIRTY.__common _CCUILogUserInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIAppLauncherModule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIAppLauncherViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIAppShortcutMenuModuleItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIBaseSliderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIButtonModuleView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIButtonModuleViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUICAPackageDescription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUICAPackageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIContentModuleContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIContentModuleDetailClickPresentationInteractionManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIContentModuleDetailTransitioningDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIContentModulePresentationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIContinuousSliderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIControlCenterMaterialView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUICustomContentModuleBackgroundViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUILabeledRoundButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUILabeledRoundButtonViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIMenuModuleItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIMenuModuleItemView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIMenuModuleStackView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIMenuModuleViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIRoundButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUISensorActivityData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUISensorAttributionEntity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUISliderModuleBackgroundViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIStatusUpdate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUISteppedSliderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIToggleModule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CCUIToggleViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIAppLauncherModule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIAppLauncherViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIAppShortcutMenuModuleItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIBaseSliderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIButtonModuleView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIButtonModuleViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUICAPackageDescription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUICAPackageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIContentModuleContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIContentModuleDetailClickPresentationInteractionManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIContentModuleDetailTransitioningDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIContentModulePresentationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIContinuousSliderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIControlCenterMaterialView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUICustomContentModuleBackgroundViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUILabeledRoundButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUILabeledRoundButtonViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIMenuModuleItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIMenuModuleItemView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIMenuModuleStackView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIMenuModuleViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIRoundButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUISensorActivityData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUISensorAttributionEntity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUISliderModuleBackgroundViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIStatusUpdate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUISteppedSliderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIToggleModule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CCUIToggleViewController
|| __TEXT.__const _ControlCenterUIKitVersionNumber
|| __TEXT.__const _ControlCenterUIKitVersionString
|| __TEXT.__text _CCUIAffineTransformBetweenInterfaceOrientations
|| __TEXT.__text _CCUIAlertCompactPresentationMargin
|| __TEXT.__text _CCUIAlertCompactPresentationTopMarginForOrientation
|| __TEXT.__text _CCUICompactModuleColumns
|| __TEXT.__text _CCUICompactModuleContinuousCornerRadius
|| __TEXT.__text _CCUIDefaultExpandedContentModuleFullWidth
|| __TEXT.__text _CCUIDefaultExpandedContentModuleWidth
|| __TEXT.__text _CCUIEdgeInsetsRTLSwap
|| __TEXT.__text _CCUIExpandedModuleContinuousCornerRadius
|| __TEXT.__text _CCUIExpandedModuleEdgeInsets
|| __TEXT.__text _CCUIIsPortrait
|| __TEXT.__text _CCUIItemEdgeSize
|| __TEXT.__text _CCUILayoutEdgeInsets
|| __TEXT.__text _CCUILayoutEdgeInsetsForcePortrait
|| __TEXT.__text _CCUILayoutGutter
|| __TEXT.__text _CCUILayoutShouldBePortrait
|| __TEXT.__text _CCUIMaximumExpandedContentModuleHeight
|| __TEXT.__text _CCUIReferenceScreenBounds
|| __TEXT.__text _CCUIRegisterControlCenterLogging
|| __TEXT.__text _CCUIScreenBounds
|| __TEXT.__text _CCUIScreenSafeAreaInsets
|| __TEXT.__text _CCUISliderExpandedContentModuleHeight
|| __TEXT.__text _CCUISliderExpandedContentModuleWidth
|| __TEXT.__text _CCUISliderExpandedModuleContinuousCornerRadius
__ BaseBoardUI: _OBJC_CLASS_$_BSUIEmojiLabelView
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: _kCFBundleExecutableKey
__ CoreFoundation: _kCFBundleNameKey
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGFloatIsValid
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ Foundation: _NSClassFromString
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ FrontBoardServices: _BSDispatchMain
__ FrontBoardServices: _BSDispatchQueueAssert
__ FrontBoardServices: _BSDispatchQueueAssertMain
__ FrontBoardServices: _BSDispatchQueueCreateSerialWithQoS
__ FrontBoardServices: _BSEqualBools
__ FrontBoardServices: _BSEqualObjects
__ FrontBoardServices: _BSEqualStrings
__ FrontBoardServices: _BSFloatIsOne
__ FrontBoardServices: _BSFloatIsZero
__ FrontBoardServices: _BSRectWithSize
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActions
__ FrontBoardServices: _FBSOpenApplicationOptionKeyActivateSuspended
__ FrontBoardServices: _FBSOpenApplicationOptionKeyLaunchOrigin
__ FrontBoardServices: _FBSOpenApplicationOptionKeyPromptUnlockDevice
__ FrontBoardServices: _FBSOpenApplicationOptionKeyUnlockDevice
__ FrontBoardServices: _OBJC_CLASS_$_BSDescriptionBuilder
__ FrontBoardServices: _OBJC_CLASS_$_BSEqualsBuilder
__ FrontBoardServices: _OBJC_CLASS_$_BSHashBuilder
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationOptions
__ FrontBoardServices: _OBJC_CLASS_$_FBSOpenApplicationService
__ FrontBoardServices: __BSSafeCast
__ MaterialKit: _OBJC_CLASS_$_MTMaterialView
__ MaterialKit: _OBJC_CLASS_$_MTVisualStylingProvider
__ MaterialKit: __MTCoreMaterialRecipeNameForMaterialRecipeAndUserInterfaceStyle
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAPackage
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CAStateController
__ QuartzCore: _kCAFilterDestOut
__ QuartzCore: _kCAPackageTypeCAMLBundle
__ ShortcutUIKit: _OBJC_CLASS_$_SCUIAssetProvider
__ SpringBoardFoundation: _OBJC_CLASS_$_SBFApplication
__ SpringBoardFoundation: _SBFEffectiveHomeButtonType
__ SpringBoardServices: _SBSRequestPasscodeUnlockAlertUI
__ UIKit: _NSDirectionalEdgeInsetsZero
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRenderer
__ UIKit: _OBJC_CLASS_$_UIGraphicsImageRendererFormat
__ UIKit: _OBJC_CLASS_$_UIHandleApplicationShortcutAction
__ UIKit: _OBJC_CLASS_$_UIHoverGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UILongPressGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIPointerEffect
__ UIKit: _OBJC_CLASS_$_UIPointerInteraction
__ UIKit: _OBJC_CLASS_$_UIPointerLiftEffect
__ UIKit: _OBJC_CLASS_$_UIPointerStyle
__ UIKit: _OBJC_CLASS_$_UIPresentationController
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UISelectionFeedbackGenerator
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITargetedPreview
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIVibrancyEffect
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIViewPropertyAnimator
__ UIKit: _OBJC_CLASS_$__UIClickPresentation
__ UIKit: _OBJC_CLASS_$__UIClickPresentationInteraction
__ UIKit: _OBJC_CLASS_$__UIEdgeFeedbackGenerator
__ UIKit: _OBJC_CLASS_$__UIEdgeFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UISelectionFeedbackGeneratorConfiguration
__ UIKit: _OBJC_CLASS_$__UITargetedPreview
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIPresentationController
__ UIKit: _OBJC_METACLASS_$_UIStackView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIApp
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryCompareToCategory
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryExtraLarge
__ UIKit: _UIContentSizeCategoryIsAccessibilityCategory
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleHeadline
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIFontTextStyleTitle1
__ UIKit: _UIFontTextStyleTitle3
__ UIKit: _UIPointIntegral
__ UIKit: _UIPointRoundToViewScale
__ UIKit: _UIRectCenteredAboutPoint
__ UIKit: _UIRectCenteredAboutPointScale
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredXInRectScale
__ UIKit: _UIRectCenteredYInRect
__ UIKit: _UIRectContainsPointInYAxis
__ UIKit: _UIRectGetCenter
__ UIKit: _UIRectIntegralWithScale
__ UIKit: _UIRoundToScale
__ UIKit: _UIRoundToViewScale
__ UIKit: _UISizeRoundToScale
__ UIKit: _UITransitionContextFromViewControllerKey
__ UIKit: _UITransitionContextToViewControllerKey
__ UIKit: _UITransitionContextToViewKey
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
CCUILabeledRoundButtonViewController : UIViewController
 @property  UIColor *highlightColor
 @property  UIColor *highlightTintColor
 @property  BOOL useLightStyle
 @property  CCUILabeledRoundButton *buttonContainer
 @property  UIControl *button
 @property  CCUICAPackageDescription *glyphPackageDescription
 @property  NSString *glyphState
 @property  UIImage *glyphImage
 @property  NSString *title
 @property  NSString *subtitle
 @property  BOOL labelsVisible
 @property  BOOL toggleStateOnTap
 @property  BOOL useAlternateBackground
 @property  NSString *contentSizeCategoryThreshold
 @property  BOOL dynamicLayoutEnabled
 @property  BOOL enabled
 @property  BOOL inoperative

  // instance methods
  -[CCUILabeledRoundButtonViewController setInoperative:]
  -[CCUILabeledRoundButtonViewController setDynamicLayoutEnabled:]
  -[CCUILabeledRoundButtonViewController buttonContainer]
  -[CCUILabeledRoundButtonViewController setContentSizeCategoryThreshold:]
  -[CCUILabeledRoundButtonViewController toggleStateOnTap]
  -[CCUILabeledRoundButtonViewController isInoperative]
  -[CCUILabeledRoundButtonViewController labelsVisible]
  -[CCUILabeledRoundButtonViewController useLightStyle]
  -[CCUILabeledRoundButtonViewController setUseLightStyle:]
  -[CCUILabeledRoundButtonViewController highlightTintColor]
  -[CCUILabeledRoundButtonViewController setLabelsVisible:]
  -[CCUILabeledRoundButtonViewController contentSizeCategoryThreshold]
  -[CCUILabeledRoundButtonViewController isDynamicLayoutEnabled]
  -[CCUILabeledRoundButtonViewController buttonTapped:]
  -[CCUILabeledRoundButtonViewController _canShowWhileLocked]
  -[CCUILabeledRoundButtonViewController subtitle]
  -[CCUILabeledRoundButtonViewController glyphPackageDescription]
  -[CCUILabeledRoundButtonViewController setHighlightTintColor:]
  -[CCUILabeledRoundButtonViewController setSubtitle:]
  -[CCUILabeledRoundButtonViewController initWithGlyphPackageDescription:highlightColor:]
  -[CCUILabeledRoundButtonViewController initWithGlyphImage:highlightColor:highlightTintColor:]
  -[CCUILabeledRoundButtonViewController initWithGlyphPackageDescription:highlightColor:useLightStyle:]
  -[CCUILabeledRoundButtonViewController useAlternateBackground]
  -[CCUILabeledRoundButtonViewController initWithGlyphImage:highlightColor:]
  -[CCUILabeledRoundButtonViewController button]
  -[CCUILabeledRoundButtonViewController glyphImage]
  -[CCUILabeledRoundButtonViewController setUseAlternateBackground:]
  -[CCUILabeledRoundButtonViewController initWithGlyphImage:highlightColor:useLightStyle:]
  -[CCUILabeledRoundButtonViewController setGlyphImage:]
  -[CCUILabeledRoundButtonViewController setGlyphPackageDescription:]
  -[CCUILabeledRoundButtonViewController initWithGlyphImage:highlightColor:highlightTintColor:useLightStyle:]
  -[CCUILabeledRoundButtonViewController setVisualStylingProvider:forCategory:]
  -[CCUILabeledRoundButtonViewController requiredVisualStyleCategories]
  -[CCUILabeledRoundButtonViewController .cxx_destruct]
  -[CCUILabeledRoundButtonViewController highlightColor]
  -[CCUILabeledRoundButtonViewController setEnabled:]
  -[CCUILabeledRoundButtonViewController setToggleStateOnTap:]
  -[CCUILabeledRoundButtonViewController glyphState]
  -[CCUILabeledRoundButtonViewController loadView]
  -[CCUILabeledRoundButtonViewController setHighlightColor:]
  -[CCUILabeledRoundButtonViewController setGlyphState:]
  -[CCUILabeledRoundButtonViewController setButton:]
  -[CCUILabeledRoundButtonViewController setButtonContainer:]
  -[CCUILabeledRoundButtonViewController setTitle:]
  -[CCUILabeledRoundButtonViewController isEnabled]


CCUIContinuousSliderView : CCUIBaseSliderView <UIGestureRecognizerDelegate>
 @property  double continuousSliderCornerRadius
 @property  unsigned long axis
 @property  UIView *valueIndicatorClippingView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIContinuousSliderView setAxis:]
  -[CCUIContinuousSliderView setContinuousSliderCornerRadius:]
  -[CCUIContinuousSliderView .cxx_destruct]
  -[CCUIContinuousSliderView _endTrackingWithGestureRecognizer:]
  -[CCUIContinuousSliderView axis]
  -[CCUIContinuousSliderView layoutSubviews]
  -[CCUIContinuousSliderView _valueForTouchTranslation:]
  -[CCUIContinuousSliderView initWithFrame:]
  -[CCUIContinuousSliderView glyphCenter]
  -[CCUIContinuousSliderView _beginTrackingWithGestureRecognizer:]
  -[CCUIContinuousSliderView _continueTrackingWithGestureRecognizer:]
  -[CCUIContinuousSliderView topLevelBlockingGestureRecognizers]
  -[CCUIContinuousSliderView _handleValueChangeGestureRecognizer:]
  -[CCUIContinuousSliderView filteredValueForValue:]
  -[CCUIContinuousSliderView sliderLengthForValue:]
  -[CCUIContinuousSliderView _updateValueForPanGestureRecognizer:forContinuedGesture:]
  -[CCUIContinuousSliderView continuousSliderCornerRadius]
  -[CCUIContinuousSliderView valueIndicatorClippingView]


CCUICAPackageDescription : NSObject
 @property  NSURL *packageURL
 @property  BOOL flipsForRightToLeftLayoutDirection
 @property  BOOL honorsUIViewAnimationState

  // class methods
  +[CCUICAPackageDescription descriptionForPackageNamed:inBundle:]

  // instance methods
  -[CCUICAPackageDescription setFlipsForRightToLeftLayoutDirection:]
  -[CCUICAPackageDescription .cxx_destruct]
  -[CCUICAPackageDescription setHonorsUIViewAnimationState:]
  -[CCUICAPackageDescription packageURL]
  -[CCUICAPackageDescription initWithPackageName:inBundle:]
  -[CCUICAPackageDescription flipsForRightToLeftLayoutDirection]
  -[CCUICAPackageDescription honorsUIViewAnimationState]


CCUIButtonModuleViewController : UIViewController <CCUIContentModuleContentViewController>
 @property  UIImage *glyphImage
 @property  UIColor *glyphColor
 @property  UIImage *selectedGlyphImage
 @property  UIColor *selectedGlyphColor
 @property  CCUICAPackageDescription *glyphPackageDescription
 @property  NSString *glyphState
 @property  double glyphScale
 @property  BOOL selected
 @property  BOOL expanded
 @property  CCUIButtonModuleView *buttonView
 @property  BOOL hasGlyph
 @property  double preferredExpandedContentHeight
 @property  double preferredExpandedContentWidth
 @property  double preferredExpandedContinuousCornerRadius
 @property  BOOL providesOwnPlatter
 @property  UIViewPropertyAnimator *customAnimator
 @property  BOOL shouldPerformHoverInteraction
 @property  BOOL shouldPerformClickInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIButtonModuleViewController buttonTapped:forEvent:]
  -[CCUIButtonModuleViewController willTransitionToExpandedContentMode:]
  -[CCUIButtonModuleViewController preferredExpandedContentHeight]
  -[CCUIButtonModuleViewController glyphPackageDescription]
  -[CCUIButtonModuleViewController didTransitionToExpandedContentMode:]
  -[CCUIButtonModuleViewController glyphScale]
  -[CCUIButtonModuleViewController glyphImage]
  -[CCUIButtonModuleViewController setSelectedGlyphImage:]
  -[CCUIButtonModuleViewController setGlyphImage:]
  -[CCUIButtonModuleViewController setGlyphPackageDescription:]
  -[CCUIButtonModuleViewController viewWillLayoutSubviews]
  -[CCUIButtonModuleViewController setSelected:]
  -[CCUIButtonModuleViewController .cxx_destruct]
  -[CCUIButtonModuleViewController setSelectedGlyphColor:]
  -[CCUIButtonModuleViewController viewDidLoad]
  -[CCUIButtonModuleViewController glyphState]
  -[CCUIButtonModuleViewController setGlyphColor:]
  -[CCUIButtonModuleViewController setGlyphState:]
  -[CCUIButtonModuleViewController selectedGlyphImage]
  -[CCUIButtonModuleViewController buttonView]
  -[CCUIButtonModuleViewController buttonTouchDown:forEvent:]
  -[CCUIButtonModuleViewController isExpanded]
  -[CCUIButtonModuleViewController setExpanded:]
  -[CCUIButtonModuleViewController selectedGlyphColor]
  -[CCUIButtonModuleViewController isSelected]
  -[CCUIButtonModuleViewController setGlyphScale:]
  -[CCUIButtonModuleViewController glyphColor]
  -[CCUIButtonModuleViewController _buttonTouchDown:forEvent:]
  -[CCUIButtonModuleViewController _buttonTapped:forEvent:]
  -[CCUIButtonModuleViewController hasGlyph]


CCUIRoundButton : UIControl <UIGestureRecognizerDelegate, UIPointerInteractionDelegate, MTVisualStylingRequiring>
 @property  UIColor *highlightColor
 @property  UIColor *highlightTintColor
 @property  UIView *normalStateBackgroundView
 @property  UIView *selectedStateBackgroundView
 @property  UIView *alternateSelectedStateBackgroundView
 @property  UIImageView *glyphImageView
 @property  UIImageView *selectedGlyphView
 @property  UIView *glyphPackageContainerView
 @property  CCUICAPackageView *glyphPackageView
 @property  CCUICAPackageDescription *glyphPackageDescription
 @property  UIImage *glyphImage
 @property  NSString *glyphState
 @property  BOOL useAlternateBackground
 @property  BOOL dynamicLayoutEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *requiredVisualStyleCategories

  // instance methods
  -[CCUIRoundButton setDynamicLayoutEnabled:]
  -[CCUIRoundButton highlightTintColor]
  -[CCUIRoundButton isDynamicLayoutEnabled]
  -[CCUIRoundButton setGlyphImageView:]
  -[CCUIRoundButton alternateSelectedStateBackgroundView]
  -[CCUIRoundButton selectedGlyphView]
  -[CCUIRoundButton glyphPackageDescription]
  -[CCUIRoundButton setHighlightTintColor:]
  -[CCUIRoundButton initWithGlyphPackageDescription:highlightColor:]
  -[CCUIRoundButton initWithGlyphImage:highlightColor:highlightTintColor:]
  -[CCUIRoundButton initWithGlyphPackageDescription:highlightColor:useLightStyle:]
  -[CCUIRoundButton useAlternateBackground]
  -[CCUIRoundButton initWithGlyphImage:highlightColor:]
  -[CCUIRoundButton gestureRecognizerShouldBegin:]
  -[CCUIRoundButton glyphImage]
  -[CCUIRoundButton setUseAlternateBackground:]
  -[CCUIRoundButton initWithGlyphImage:highlightColor:useLightStyle:]
  -[CCUIRoundButton setGlyphImage:]
  -[CCUIRoundButton setGlyphPackageDescription:]
  -[CCUIRoundButton setAlternateSelectedStateBackgroundView:]
  -[CCUIRoundButton glyphImageView]
  -[CCUIRoundButton initWithGlyphImage:highlightColor:highlightTintColor:useLightStyle:]
  -[CCUIRoundButton dealloc]
  -[CCUIRoundButton _updateForStateChange]
  -[CCUIRoundButton setVisualStylingProvider:forCategory:]
  -[CCUIRoundButton requiredVisualStyleCategories]
  -[CCUIRoundButton _initWithHighlightColor:useLightStyle:]
  -[CCUIRoundButton .cxx_destruct]
  -[CCUIRoundButton setGlyphPackageView:]
  -[CCUIRoundButton highlightColor]
  -[CCUIRoundButton glyphState]
  -[CCUIRoundButton selectedStateBackgroundView]
  -[CCUIRoundButton setHighlightColor:]
  -[CCUIRoundButton setGlyphState:]
  -[CCUIRoundButton _deactivateReachability:]
  -[CCUIRoundButton _cornerRadius]
  -[CCUIRoundButton visualStylingProviderForCategory:]
  -[CCUIRoundButton layoutSubviews]
  -[CCUIRoundButton observeValueForKeyPath:ofObject:change:context:]
  -[CCUIRoundButton glyphPackageContainerView]
  -[CCUIRoundButton _primaryActionPerformed:]
  -[CCUIRoundButton normalStateBackgroundView]
  -[CCUIRoundButton _updateForStateChangeIfNecessary]
  -[CCUIRoundButton sizeThatFits:]
  -[CCUIRoundButton _setCornerRadius:]
  -[CCUIRoundButton _setNeedsStateChangeUpdate]
  -[CCUIRoundButton _visualStylingProvider:didChangeWithOutgoingVisualStylingProvider:]
  -[CCUIRoundButton setSelectedStateBackgroundView:]
  -[CCUIRoundButton setGlyphPackageContainerView:]
  -[CCUIRoundButton intrinsicContentSize]
  -[CCUIRoundButton pointerInteraction:styleForRegion:]
  -[CCUIRoundButton pointerInteraction:regionForRequest:defaultRegion:]
  -[CCUIRoundButton didMoveToWindow]
  -[CCUIRoundButton setNormalStateBackgroundView:]
  -[CCUIRoundButton setSelectedGlyphView:]
  -[CCUIRoundButton _updateVisualStylingOfView:style:visualStylingProvider:outgoingProvider:]
  -[CCUIRoundButton glyphPackageView]


CCUISteppedSliderView : CCUIBaseSliderView <UIGestureRecognizerDelegate, CCUIContentModuleExpandedStateListener, CCUIContentClipping>
 @property  unsigned long numberOfSteps
 @property  BOOL firstStepIsDisabled
 @property  BOOL firstStepIsOff
 @property  unsigned long step
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL contentClippingRequired

  // instance methods
  -[CCUISteppedSliderView step]
  -[CCUISteppedSliderView _layoutStepViews]
  -[CCUISteppedSliderView _updateValueForPanGestureRecognizer:withAbsolutePosition:forContinuedGesture:]
  -[CCUISteppedSliderView _handleValueTapGestureRecognizer:]
  -[CCUISteppedSliderView setValue:andUpdateStep:]
  -[CCUISteppedSliderView _updateStepFromValue:playHaptic:]
  -[CCUISteppedSliderView _valueForPanGestureRecognizer:withAbsoluteReference:]
  -[CCUISteppedSliderView contentModuleWillTransitionToExpandedContentMode:]
  -[CCUISteppedSliderView _createSeparatorView]
  -[CCUISteppedSliderView .cxx_destruct]
  -[CCUISteppedSliderView _createBackgroundViewForStep:]
  -[CCUISteppedSliderView _endTrackingWithGestureRecognizer:]
  -[CCUISteppedSliderView _stepFromValue:]
  -[CCUISteppedSliderView isContentClippingRequired]
  -[CCUISteppedSliderView _updateStepViewVisibility]
  -[CCUISteppedSliderView layoutSubviews]
  -[CCUISteppedSliderView setValue:]
  -[CCUISteppedSliderView _stepFromValue:avoidCurrentStep:]
  -[CCUISteppedSliderView _valueFromStep:]
  -[CCUISteppedSliderView _valueForTouchTranslation:]
  -[CCUISteppedSliderView _valueForTouchLocation:]
  -[CCUISteppedSliderView _createSeparatorViewsForNumberOfSteps:]
  -[CCUISteppedSliderView _createStepViewsForNumberOfSteps:]
  -[CCUISteppedSliderView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CCUISteppedSliderView firstStepIsDisabled]
  -[CCUISteppedSliderView setFirstStepIsDisabled:]
  -[CCUISteppedSliderView numberOfSteps]
  -[CCUISteppedSliderView setNumberOfSteps:]
  -[CCUISteppedSliderView initWithFrame:]
  -[CCUISteppedSliderView _beginTrackingWithGestureRecognizer:]
  -[CCUISteppedSliderView setStep:]
  -[CCUISteppedSliderView _continueTrackingWithGestureRecognizer:]
  -[CCUISteppedSliderView didMoveToWindow]
  -[CCUISteppedSliderView setFirstStepIsOff:]
  -[CCUISteppedSliderView firstStepIsOff]
  -[CCUISteppedSliderView topLevelBlockingGestureRecognizers]
  -[CCUISteppedSliderView _updateStepFromValue:playHaptic:toggleCurrentStep:]
  -[CCUISteppedSliderView _handleHoverGestureRecognizer:]
  -[CCUISteppedSliderView _handleValueChangeGestureRecognizer:]


CCUIMenuModuleViewController : CCUIButtonModuleViewController <UIGestureRecognizerDelegate, CCUIContentModuleContentViewController>
 @property  NSString *title
 @property  NSString *subtitle
 @property  unsigned long actionsCount
 @property  unsigned long menuItemCount
 @property  double headerHeight
 @property  UIView *contentView
 @property  BOOL hasFooterButton
 @property  unsigned long minimumMenuItems
 @property  double visibleMenuItems
 @property  unsigned long indentation
 @property  BOOL busy
 @property  BOOL shouldProvideOwnPlatter
 @property  BOOL useTrailingCheckmarkLayout
 @property  BOOL useTrailingInset
 @property  BOOL useTallLayout
 @property  CCUIContentModuleContext *contentModuleContext
 @property  BOOL hideGlyphInHeader
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double preferredExpandedContentHeight
 @property  double preferredExpandedContentWidth
 @property  double preferredExpandedContinuousCornerRadius
 @property  BOOL providesOwnPlatter
 @property  UIViewPropertyAnimator *customAnimator
 @property  BOOL shouldPerformHoverInteraction
 @property  BOOL shouldPerformClickInteraction

  // class methods
  +[CCUIMenuModuleViewController checkmarkImageForPreferredContentSizeCategory:]

  // instance methods
  -[CCUIMenuModuleViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[CCUIMenuModuleViewController isBusy]
  -[CCUIMenuModuleViewController setIndentation:]
  -[CCUIMenuModuleViewController _handlePressGesture:]
  -[CCUIMenuModuleViewController contentView]
  -[CCUIMenuModuleViewController contentModuleContext]
  -[CCUIMenuModuleViewController willTransitionToExpandedContentMode:]
  -[CCUIMenuModuleViewController headerHeight]
  -[CCUIMenuModuleViewController preferredExpandedContentWidth]
  -[CCUIMenuModuleViewController preferredExpandedContentHeight]
  -[CCUIMenuModuleViewController _canShowWhileLocked]
  -[CCUIMenuModuleViewController subtitle]
  -[CCUIMenuModuleViewController _updatePreferredContentSize]
  -[CCUIMenuModuleViewController setUseTrailingInset:]
  -[CCUIMenuModuleViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[CCUIMenuModuleViewController didTransitionToExpandedContentMode:]
  -[CCUIMenuModuleViewController setSubtitle:]
  -[CCUIMenuModuleViewController setGlyphImage:]
  -[CCUIMenuModuleViewController contentModuleWillTransitionToExpandedContentMode:]
  -[CCUIMenuModuleViewController setGlyphPackageDescription:]
  -[CCUIMenuModuleViewController initWithNibName:bundle:]
  -[CCUIMenuModuleViewController viewWillLayoutSubviews]
  -[CCUIMenuModuleViewController _separatorHeight]
  -[CCUIMenuModuleViewController .cxx_destruct]
  -[CCUIMenuModuleViewController viewDidLoad]
  -[CCUIMenuModuleViewController _subtitleFont]
  -[CCUIMenuModuleViewController removeAllActions]
  -[CCUIMenuModuleViewController _titleFont]
  -[CCUIMenuModuleViewController _updateTitleFont]
  -[CCUIMenuModuleViewController _contentSizeCategoryDidChange]
  -[CCUIMenuModuleViewController setContentModuleContext:]
  -[CCUIMenuModuleViewController useTrailingCheckmarkLayout]
  -[CCUIMenuModuleViewController gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CCUIMenuModuleViewController setMenuItems:]
  -[CCUIMenuModuleViewController _desiredExpandedHeight]
  -[CCUIMenuModuleViewController setUseTallLayout:]
  -[CCUIMenuModuleViewController setCustomContentView:]
  -[CCUIMenuModuleViewController setUseTrailingCheckmarkLayout:]
  -[CCUIMenuModuleViewController useTrailingInset]
  -[CCUIMenuModuleViewController leadingImageForMenuItem:]
  -[CCUIMenuModuleViewController actionsCount]
  -[CCUIMenuModuleViewController useTallLayout]
  -[CCUIMenuModuleViewController viewForTouchContinuation]
  -[CCUIMenuModuleViewController traitCollectionDidChange:]
  -[CCUIMenuModuleViewController setTitle:]
  -[CCUIMenuModuleViewController indentation]
  -[CCUIMenuModuleViewController shouldBeginTransitionToExpandedContentModule]
  -[CCUIMenuModuleViewController _footerHeight]
  -[CCUIMenuModuleViewController _maximumHeight]
  -[CCUIMenuModuleViewController _setupTitleLabel]
  -[CCUIMenuModuleViewController _setupSubtitleLabel]
  -[CCUIMenuModuleViewController setBusy:]
  -[CCUIMenuModuleViewController setVisibleMenuItems:]
  -[CCUIMenuModuleViewController setMinimumMenuItems:]
  -[CCUIMenuModuleViewController setFooterButtonTitle:handler:]
  -[CCUIMenuModuleViewController removeFooterButton]
  -[CCUIMenuModuleViewController hasGlyph]
  -[CCUIMenuModuleViewController _busyIndicatorView]
  -[CCUIMenuModuleViewController addActionWithTitle:glyph:handler:]
  -[CCUIMenuModuleViewController addActionWithTitle:subtitle:glyph:handler:]
  -[CCUIMenuModuleViewController _menuItemFromPlaceholderIndex:]
  -[CCUIMenuModuleViewController _setMenuItems:]
  -[CCUIMenuModuleViewController menuItemForIdentifier:]
  -[CCUIMenuModuleViewController setUseIndentedLayout:]
  -[CCUIMenuModuleViewController leadingViewForMenuItem:]
  -[CCUIMenuModuleViewController _leadingViewForMenuItem:]
  -[CCUIMenuModuleViewController trailingImageForMenuItem:]
  -[CCUIMenuModuleViewController trailingViewForMenuItem:]
  -[CCUIMenuModuleViewController _trailingViewForMenuItem:]
  -[CCUIMenuModuleViewController menuItemCount]
  -[CCUIMenuModuleViewController headerHeightForWidth:]
  -[CCUIMenuModuleViewController hasFooterButton]
  -[CCUIMenuModuleViewController _layoutViewSubviews]
  -[CCUIMenuModuleViewController scrollToTop:]
  -[CCUIMenuModuleViewController preferredExpandedContentHeightWithWidth:]
  -[CCUIMenuModuleViewController _handleActionTapped:]
  -[CCUIMenuModuleViewController _fadeViewsForExpandedState:]
  -[CCUIMenuModuleViewController _layoutTransformViewForSize:]
  -[CCUIMenuModuleViewController _layoutGlyphViewForSize:]
  -[CCUIMenuModuleViewController _layoutTitleLabelForSize:]
  -[CCUIMenuModuleViewController _layoutSubtitleLabelForSize:]
  -[CCUIMenuModuleViewController _layoutFooterButtonForSize:]
  -[CCUIMenuModuleViewController _layoutBusyIndicatorForSize:]
  -[CCUIMenuModuleViewController _layoutHeaderSeparatorForSize:]
  -[CCUIMenuModuleViewController _layoutFooterSeparatorForSize:]
  -[CCUIMenuModuleViewController _titleWidthForContainerWidth:]
  -[CCUIMenuModuleViewController _contentScaleForSize:]
  -[CCUIMenuModuleViewController _setView:clipsToBounds:]
  -[CCUIMenuModuleViewController _setRootViewClipsToBounds:]
  -[CCUIMenuModuleViewController _setTransformViewClipsToBounds:]
  -[CCUIMenuModuleViewController _layoutContentViewForSize:]
  -[CCUIMenuModuleViewController _updateMenuItemsSeparatorVisiblity]
  -[CCUIMenuModuleViewController _toggleSelectionForMenuItem:]
  -[CCUIMenuModuleViewController _shouldLimitContentSizeCategory]
  -[CCUIMenuModuleViewController _shouldHideGlyphForLimitedContentSizeCategory]
  -[CCUIMenuModuleViewController _preferredFontForTextStyle:hiFontStyle:]
  -[CCUIMenuModuleViewController _defaultMenuItemHeight]
  -[CCUIMenuModuleViewController scrollViewContentHeightForWidth:]
  -[CCUIMenuModuleViewController _menuItemsHeightForWidth:]
  -[CCUIMenuModuleViewController _setForceLimitContentSizeCategory:]
  -[CCUIMenuModuleViewController _updateSubtitleFont]
  -[CCUIMenuModuleViewController _updateLeadingAndTrailingViews]
  -[CCUIMenuModuleViewController _aggregateModuleHeight]
  -[CCUIMenuModuleViewController _shouldShowFooterSeparator]
  -[CCUIMenuModuleViewController _shouldShowFooterChin]
  -[CCUIMenuModuleViewController minimumMenuItems]
  -[CCUIMenuModuleViewController visibleMenuItems]
  -[CCUIMenuModuleViewController shouldProvideOwnPlatter]
  -[CCUIMenuModuleViewController setShouldProvideOwnPlatter:]
  -[CCUIMenuModuleViewController hideGlyphInHeader]
  -[CCUIMenuModuleViewController setHideGlyphInHeader:]


CCUIContentModulePresentationContext : NSObject <NSCopying>
 @property  long long environment

  // class methods
  +[CCUIContentModulePresentationContext defaultControlCenterPresentationContext]
  +[CCUIContentModulePresentationContext defaultAlertPresentationContext]

  // instance methods
  -[CCUIContentModulePresentationContext initWithEnvironment:]
  -[CCUIContentModulePresentationContext copyWithZone:]
  -[CCUIContentModulePresentationContext environment]


CCUIMenuModuleItem : NSObject
 @property  NSString *identifier
 @property  NSString *title
 @property  @? handler
 @property  BOOL placeholder
 @property  NSString *subtitle
 @property  BOOL busy
 @property  BOOL selected

  // instance methods
  -[CCUIMenuModuleItem isBusy]
  -[CCUIMenuModuleItem performAction]
  -[CCUIMenuModuleItem identifier]
  -[CCUIMenuModuleItem subtitle]
  -[CCUIMenuModuleItem setHandler:]
  -[CCUIMenuModuleItem setSubtitle:]
  -[CCUIMenuModuleItem isPlaceholder]
  -[CCUIMenuModuleItem setSelected:]
  -[CCUIMenuModuleItem .cxx_destruct]
  -[CCUIMenuModuleItem title]
  -[CCUIMenuModuleItem setIdentifier:]
  -[CCUIMenuModuleItem handler]
  -[CCUIMenuModuleItem isSelected]
  -[CCUIMenuModuleItem setPlaceholder:]
  -[CCUIMenuModuleItem setTitle:]
  -[CCUIMenuModuleItem isEqual:]
  -[CCUIMenuModuleItem setBusy:]
  -[CCUIMenuModuleItem initWithTitle:identifier:handler:]


CCUISensorActivityData : NSObject <NSCopying>
 @property  unsigned long sensorType
 @property  NSString *displayName
 @property  NSString *executableDisplayName
 @property  NSString *bundleIdentifier
 @property  NSString *attributionGroup
 @property  NSString *website
 @property  BOOL isSystemService
 @property  BOOL usedRecently
 @property  UIColor *sensorIndicatorColor
 @property  BOOL launchToSettings

  // class methods
  +[CCUISensorActivityData _genericLocationSystemServiceActivity]

  // instance methods
  -[CCUISensorActivityData usedRecently]
  -[CCUISensorActivityData website]
  -[CCUISensorActivityData executableDisplayName]
  -[CCUISensorActivityData attributionGroup]
  -[CCUISensorActivityData isSystemService]
  -[CCUISensorActivityData setIsSystemService:]
  -[CCUISensorActivityData setLaunchToSettings:]
  -[CCUISensorActivityData setSensorType:]
  -[CCUISensorActivityData .cxx_destruct]
  -[CCUISensorActivityData setDisplayName:]
  -[CCUISensorActivityData setBundleIdentifier:]
  -[CCUISensorActivityData setAttributionGroup:]
  -[CCUISensorActivityData bundleIdentifier]
  -[CCUISensorActivityData copyWithZone:]
  -[CCUISensorActivityData sensorIndicatorColor]
  -[CCUISensorActivityData displayName]
  -[CCUISensorActivityData setUsedRecently:]
  -[CCUISensorActivityData sensorType]
  -[CCUISensorActivityData launchToSettings]
  -[CCUISensorActivityData setSensorIndicatorColor:]
  -[CCUISensorActivityData isEqual:]
  -[CCUISensorActivityData setWebsite:]
  -[CCUISensorActivityData setExecutableDisplayName:]


CCUICAPackageView : UIView <CCUIPunchOutRendering, CCUIPunchOutCompensating, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double ccui_compensationAlpha
 @property  CAPackage *package
 @property  CCUICAPackageDescription *packageDescription
 @property  double scale

  // instance methods
  -[CCUICAPackageView packageDescription]
  -[CCUICAPackageView setStateName:]
  -[CCUICAPackageView package]
  -[CCUICAPackageView setPackageDescription:]
  -[CCUICAPackageView ccui_setCompensationAlpha:]
  -[CCUICAPackageView .cxx_destruct]
  -[CCUICAPackageView ccui_punchOutCompensatingCopy]
  -[CCUICAPackageView _setPackage:]
  -[CCUICAPackageView layoutSubviews]
  -[CCUICAPackageView scale]
  -[CCUICAPackageView ccui_configureForPunchOutRendering:]
  -[CCUICAPackageView copyWithZone:]
  -[CCUICAPackageView initWithFrame:]
  -[CCUICAPackageView ccui_updatePunchOutCompensationIfNecessary]
  -[CCUICAPackageView setPackage:]
  -[CCUICAPackageView setScale:]
  -[CCUICAPackageView ccui_compensationAlpha]


CCUISliderModuleBackgroundViewController : CCUICustomContentModuleBackgroundViewController
  // instance methods
  -[CCUISliderModuleBackgroundViewController expandedContentModuleWidth]
  -[CCUISliderModuleBackgroundViewController expandedContentModuleHeight]


CCUIModuleSliderView : CCUISteppedSliderView

CCUIButtonModuleView : UIControl <UIGestureRecognizerDelegate>
 @property  UIImage *glyphImage
 @property  UIColor *glyphColor
 @property  UIImage *selectedGlyphImage
 @property  UIColor *selectedGlyphColor
 @property  double glyphAlpha
 @property  double glyphScale
 @property  CCUICAPackageDescription *glyphPackageDescription
 @property  NSString *glyphState
 @property  {NSDirectionalEdgeInsets=dddd} contentEdgeInsets
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIButtonModuleView _handlePressGesture:]
  -[CCUIButtonModuleView setContentEdgeInsets:]
  -[CCUIButtonModuleView _setGlyphAlpha:]
  -[CCUIButtonModuleView _setGlyphScale:]
  -[CCUIButtonModuleView glyphPackageDescription]
  -[CCUIButtonModuleView contentEdgeInsets]
  -[CCUIButtonModuleView glyphScale]
  -[CCUIButtonModuleView glyphImage]
  -[CCUIButtonModuleView setSelectedGlyphImage:]
  -[CCUIButtonModuleView setGlyphImage:]
  -[CCUIButtonModuleView setGlyphPackageDescription:]
  -[CCUIButtonModuleView _updateForStateChange]
  -[CCUIButtonModuleView setSelected:]
  -[CCUIButtonModuleView .cxx_destruct]
  -[CCUIButtonModuleView setSelectedGlyphColor:]
  -[CCUIButtonModuleView setEnabled:]
  -[CCUIButtonModuleView glyphState]
  -[CCUIButtonModuleView setGlyphAlpha:]
  -[CCUIButtonModuleView _setGlyphImage:]
  -[CCUIButtonModuleView setGlyphColor:]
  -[CCUIButtonModuleView setGlyphState:]
  -[CCUIButtonModuleView setHighlighted:]
  -[CCUIButtonModuleView layoutSubviews]
  -[CCUIButtonModuleView _setGlyphPackageDescription:]
  -[CCUIButtonModuleView _setGlyphState:]
  -[CCUIButtonModuleView selectedGlyphImage]
  -[CCUIButtonModuleView _tintColorForSelectedState:]
  -[CCUIButtonModuleView gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:]
  -[CCUIButtonModuleView glyphAlpha]
  -[CCUIButtonModuleView selectedGlyphColor]
  -[CCUIButtonModuleView initWithFrame:]
  -[CCUIButtonModuleView _updateGlyphImageViewVisualStyling]
  -[CCUIButtonModuleView setGlyphScale:]
  -[CCUIButtonModuleView didMoveToWindow]
  -[CCUIButtonModuleView glyphColor]


CCUILabeledRoundButton : UIView <MTVisualStylingRequiring>
 @property  UIColor *highlightColor
 @property  UIColor *highlightTintColor
 @property  CCUIRoundButton *buttonView
 @property  UILabel *titleLabel
 @property  UILabel *subtitleLabel
 @property  UIImage *glyphImage
 @property  CCUICAPackageDescription *glyphPackageDescription
 @property  NSString *glyphState
 @property  NSString *title
 @property  NSString *subtitle
 @property  BOOL labelsVisible
 @property  BOOL useAlternateBackground
 @property  NSString *contentSizeCategoryThreshold
 @property  BOOL dynamicLayoutEnabled
 @property  NSArray *requiredVisualStyleCategories
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUILabeledRoundButton setDynamicLayoutEnabled:]
  -[CCUILabeledRoundButton setContentSizeCategoryThreshold:]
  -[CCUILabeledRoundButton labelsVisible]
  -[CCUILabeledRoundButton setSubtitleLabel:]
  -[CCUILabeledRoundButton highlightTintColor]
  -[CCUILabeledRoundButton subtitleLabel]
  -[CCUILabeledRoundButton setLabelsVisible:]
  -[CCUILabeledRoundButton contentSizeCategoryThreshold]
  -[CCUILabeledRoundButton isDynamicLayoutEnabled]
  -[CCUILabeledRoundButton buttonTapped:]
  -[CCUILabeledRoundButton subtitle]
  -[CCUILabeledRoundButton setTitleLabel:]
  -[CCUILabeledRoundButton _updateFonts]
  -[CCUILabeledRoundButton _shouldUseLargeTextLayout]
  -[CCUILabeledRoundButton glyphPackageDescription]
  -[CCUILabeledRoundButton setHighlightTintColor:]
  -[CCUILabeledRoundButton setSubtitle:]
  -[CCUILabeledRoundButton initWithGlyphPackageDescription:highlightColor:]
  -[CCUILabeledRoundButton initWithGlyphImage:highlightColor:highlightTintColor:]
  -[CCUILabeledRoundButton initWithGlyphPackageDescription:highlightColor:useLightStyle:]
  -[CCUILabeledRoundButton useAlternateBackground]
  -[CCUILabeledRoundButton initWithGlyphImage:highlightColor:]
  -[CCUILabeledRoundButton glyphImage]
  -[CCUILabeledRoundButton setUseAlternateBackground:]
  -[CCUILabeledRoundButton initWithGlyphImage:highlightColor:useLightStyle:]
  -[CCUILabeledRoundButton setGlyphImage:]
  -[CCUILabeledRoundButton setButtonView:]
  -[CCUILabeledRoundButton setGlyphPackageDescription:]
  -[CCUILabeledRoundButton initWithGlyphImage:highlightColor:highlightTintColor:useLightStyle:]
  -[CCUILabeledRoundButton setVisualStylingProvider:forCategory:]
  -[CCUILabeledRoundButton requiredVisualStyleCategories]
  -[CCUILabeledRoundButton .cxx_destruct]
  -[CCUILabeledRoundButton highlightColor]
  -[CCUILabeledRoundButton glyphState]
  -[CCUILabeledRoundButton _layoutLabels]
  -[CCUILabeledRoundButton setHighlightColor:]
  -[CCUILabeledRoundButton setGlyphState:]
  -[CCUILabeledRoundButton visualStylingProviderForCategory:]
  -[CCUILabeledRoundButton layoutSubviews]
  -[CCUILabeledRoundButton title]
  -[CCUILabeledRoundButton _visualStylingProvider:didChangeForCategory:outgoingVisualStylingProvider:]
  -[CCUILabeledRoundButton buttonView]
  -[CCUILabeledRoundButton _contentSizeCategoryDidChange]
  -[CCUILabeledRoundButton sizeThatFits:]
  -[CCUILabeledRoundButton initWithHighlightColor:useLightStyle:]
  -[CCUILabeledRoundButton intrinsicContentSize]
  -[CCUILabeledRoundButton traitCollectionDidChange:]
  -[CCUILabeledRoundButton setTitle:]
  -[CCUILabeledRoundButton didMoveToWindow]
  -[CCUILabeledRoundButton titleLabel]
  -[CCUILabeledRoundButton _setupLabelsBounds]


CCUIToggleModule : NSObject <CCUIContentModule>
 @property  CCUIContentModuleContext *contentModuleContext
 @property  BOOL selected
 @property  UIImage *iconGlyph
 @property  UIImage *selectedIconGlyph
 @property  UIColor *selectedColor
 @property  CCUICAPackageDescription *glyphPackageDescription
 @property  NSString *glyphState
 @property  double glyphScale
 @property  UIViewController<CCUIContentModuleContentViewController> *contentViewController
 @property  UIViewController<CCUIContentModuleBackgroundViewController> *backgroundViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIToggleModule contentModuleContext]
  -[CCUIToggleModule contentViewControllerForContext:]
  -[CCUIToggleModule glyphPackageDescription]
  -[CCUIToggleModule glyphScale]
  -[CCUIToggleModule setSelected:]
  -[CCUIToggleModule .cxx_destruct]
  -[CCUIToggleModule glyphState]
  -[CCUIToggleModule iconGlyph]
  -[CCUIToggleModule reconfigureView]
  -[CCUIToggleModule setContentModuleContext:]
  -[CCUIToggleModule isSelected]
  -[CCUIToggleModule selectedColor]
  -[CCUIToggleModule refreshState]
  -[CCUIToggleModule selectedIconGlyph]
  -[CCUIToggleModule glyphPackage]


CCUIToggleViewController : CCUIButtonModuleViewController <CCUIContentModuleContentViewController>
 @property  CCUIToggleModule *module
 @property  double preferredExpandedContentHeight
 @property  double preferredExpandedContentWidth
 @property  double preferredExpandedContinuousCornerRadius
 @property  BOOL providesOwnPlatter
 @property  UIViewPropertyAnimator *customAnimator
 @property  BOOL shouldPerformHoverInteraction
 @property  BOOL shouldPerformClickInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIToggleViewController buttonTapped:forEvent:]
  -[CCUIToggleViewController preferredExpandedContentHeight]
  -[CCUIToggleViewController _canShowWhileLocked]
  -[CCUIToggleViewController shouldFinishTransitionToExpandedContentModule]
  -[CCUIToggleViewController .cxx_destruct]
  -[CCUIToggleViewController viewDidLoad]
  -[CCUIToggleViewController viewWillAppear:]
  -[CCUIToggleViewController reconfigureView]
  -[CCUIToggleViewController module]
  -[CCUIToggleViewController setModule:]
  -[CCUIToggleViewController refreshState]


CCUIMenuModuleStackView : UIStackView
  // instance methods
  -[CCUIMenuModuleStackView layoutSubviews]


CCUIContentModuleDetailPresentationController : UIPresentationController <UIGestureRecognizerDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIContentModuleDetailPresentationController _shouldRespectDefinesPresentationContext]
  -[CCUIContentModuleDetailPresentationController shouldPresentInFullscreen]
  -[CCUIContentModuleDetailPresentationController preferredContentSizeDidChangeForChildContentContainer:]
  -[CCUIContentModuleDetailPresentationController presentationTransitionWillBegin]
  -[CCUIContentModuleDetailPresentationController containerViewWillLayoutSubviews]
  -[CCUIContentModuleDetailPresentationController .cxx_destruct]
  -[CCUIContentModuleDetailPresentationController gestureRecognizer:shouldReceiveTouch:]
  -[CCUIContentModuleDetailPresentationController _handleBackgroundTap:]
  -[CCUIContentModuleDetailPresentationController initWithPresentedViewController:presentingViewController:anchoringViewController:]
  -[CCUIContentModuleDetailPresentationController _preferredExpandedContentWidthForViewController:]
  -[CCUIContentModuleDetailPresentationController _preferredExpandedContentHeightForViewController:]


CCUIContentModuleContext : NSObject
 @property  NSString *moduleIdentifier
 @property  <CCUIContentModuleContextDelegate> *delegate

  // class methods
  +[CCUIContentModuleContext initialize]
  +[CCUIContentModuleContext _sharedOpenAppService]
  +[CCUIContentModuleContext areAnimationsPermittedInWindow:]
  +[CCUIContentModuleContext setAnimationsPermitted:inWindow:]
  +[CCUIContentModuleContext performWithoutAnimationWhileHiddenInWindow:actions:]
  +[CCUIContentModuleContext _sharedOpenApplicationOptions]
  +[CCUIContentModuleContext performWithoutAnimationWhileHidden:]

  // instance methods
  -[CCUIContentModuleContext moduleIdentifier]
  -[CCUIContentModuleContext dismissModule]
  -[CCUIContentModuleContext openApplication:withOptions:completionHandler:]
  -[CCUIContentModuleContext openURL:completionHandler:]
  -[CCUIContentModuleContext setHomeGestureDismissalAllowed:]
  -[CCUIContentModuleContext setDelegate:]
  -[CCUIContentModuleContext requestAuthenticationWithCompletionHandler:]
  -[CCUIContentModuleContext openApplication:completionHandler:]
  -[CCUIContentModuleContext delegate]
  -[CCUIContentModuleContext requestLayoutSizeUpdate]
  -[CCUIContentModuleContext .cxx_destruct]
  -[CCUIContentModuleContext sensorActivityDataForActiveSensorType:]
  -[CCUIContentModuleContext moduleLayoutSizeForOrientation:]
  -[CCUIContentModuleContext requestExpandModule]
  -[CCUIContentModuleContext enqueueStatusUpdate:]
  -[CCUIContentModuleContext initWithModuleIdentifier:]
  -[CCUIContentModuleContext dismissControlCenter]


CCUIAppLauncherModule : NSObject <CCUIContentModule>
 @property  NSString *applicationIdentifier
 @property  NSString *launchApplicationIdentifier
 @property  NSURL *launchURL
 @property  NSString *displayName
 @property  BOOL supportsApplicationShortcuts
 @property  SBFApplication *application
 @property  UIImage *iconGlyph
 @property  CCUIContentModuleContext *contentModuleContext
 @property  UIViewController<CCUIContentModuleContentViewController> *contentViewController
 @property  UIViewController<CCUIContentModuleBackgroundViewController> *backgroundViewController
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIAppLauncherModule contentModuleContext]
  -[CCUIAppLauncherModule _application]
  -[CCUIAppLauncherModule contentViewControllerForContext:]
  -[CCUIAppLauncherModule launchURL]
  -[CCUIAppLauncherModule applicationIdentifier]
  -[CCUIAppLauncherModule setLaunchApplicationIdentifier:]
  -[CCUIAppLauncherModule setApplicationIdentifier:]
  -[CCUIAppLauncherModule setSupportsApplicationShortcuts:]
  -[CCUIAppLauncherModule launchURLForTouchType:]
  -[CCUIAppLauncherModule setLaunchURL:]
  -[CCUIAppLauncherModule .cxx_destruct]
  -[CCUIAppLauncherModule setDisplayName:]
  -[CCUIAppLauncherModule iconGlyph]
  -[CCUIAppLauncherModule launchApplicationIdentifier]
  -[CCUIAppLauncherModule supportsApplicationShortcuts]
  -[CCUIAppLauncherModule handleTouchDownWithTouchType:]
  -[CCUIAppLauncherModule handleTapWithTouchType:]
  -[CCUIAppLauncherModule _fetchApplicationIfNeeded]
  -[CCUIAppLauncherModule setContentModuleContext:]
  -[CCUIAppLauncherModule displayName]
  -[CCUIAppLauncherModule init]


CCUIAppShortcutMenuModuleItem : CCUIMenuModuleItem
 @property  UIImage *icon

  // instance methods
  -[CCUIAppShortcutMenuModuleItem setIcon:]
  -[CCUIAppShortcutMenuModuleItem .cxx_destruct]
  -[CCUIAppShortcutMenuModuleItem icon]


CCUIAppLauncherViewController : CCUIMenuModuleViewController <CCUIContentModuleContentViewControllerInternal>
 @property  CCUIAppLauncherModule *module
 @property  double preferredExpandedContentHeight
 @property  double preferredExpandedContentWidth
 @property  double preferredExpandedContinuousCornerRadius
 @property  BOOL providesOwnPlatter
 @property  UIViewPropertyAnimator *customAnimator
 @property  BOOL shouldPerformHoverInteraction
 @property  BOOL shouldPerformClickInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIAppLauncherViewController willResignActive]
  -[CCUIAppLauncherViewController buttonTapped:forEvent:]
  -[CCUIAppLauncherViewController _canShowWhileLocked]
  -[CCUIAppLauncherViewController _updateWithFetchedMenuItemsIfNecessary]
  -[CCUIAppLauncherViewController didTransitionToExpandedContentMode:]
  -[CCUIAppLauncherViewController viewDidAppear:]
  -[CCUIAppLauncherViewController _assetProvider]
  -[CCUIAppLauncherViewController _activateApplicationForShortcutItem:]
  -[CCUIAppLauncherViewController .cxx_destruct]
  -[CCUIAppLauncherViewController viewDidLoad]
  -[CCUIAppLauncherViewController _queue_setFetchedMenuItems:]
  -[CCUIAppLauncherViewController _queue_updateApplicationShortcutsActions]
  -[CCUIAppLauncherViewController buttonTouchDown:forEvent:]
  -[CCUIAppLauncherViewController _menuItemForShortcutItem:]
  -[CCUIAppLauncherViewController leadingImageForMenuItem:]
  -[CCUIAppLauncherViewController _updateApplicationShortcutsActionsIfNecessary]
  -[CCUIAppLauncherViewController module]
  -[CCUIAppLauncherViewController setModule:]
  -[CCUIAppLauncherViewController shouldBeginTransitionToExpandedContentModule]


CCUIStatusUpdate : NSObject
 @property  NSString *message
 @property  unsigned long type

  // class methods
  +[CCUIStatusUpdate statusUpdateWithMessage:type:]

  // instance methods
  -[CCUIStatusUpdate type]
  -[CCUIStatusUpdate .cxx_destruct]
  -[CCUIStatusUpdate message]
  -[CCUIStatusUpdate _initWithMessage:type:]


CCUIMenuModuleItemView : UIControl <UIPointerInteractionDelegate>
 @property  BOOL separatorVisible
 @property  double preferredMaxLayoutWidth
 @property  BOOL useTallLayout
 @property  BOOL useTrailingCheckmarkLayout
 @property  BOOL useTrailingInset
 @property  unsigned long indentation
 @property  CCUIMenuModuleItem *menuItem
 @property  UIView *leadingView
 @property  UIView *trailingView
 @property  BOOL shouldLimitContentSizeCategory
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CCUIMenuModuleItemView _titleFontForContentSizeCategory:]
  +[CCUIMenuModuleItemView _shouldLimitContentSizeCategory:forceLimitContentSizeCategory:]
  +[CCUIMenuModuleItemView _preferredFontForTextStyle:hiFontStyle:contentSizeCategory:shouldLimitContentSizeCategory:]
  +[CCUIMenuModuleItemView _titleFontForContentSizeCategory:shouldLimitContentSizeCategory:]
  +[CCUIMenuModuleItemView _subtitleFontForContentSizeCategory:shouldLimitContentSizeCategory:]
  +[CCUIMenuModuleItemView _subtitleFontForContentSizeCategory:]
  +[CCUIMenuModuleItemView defaultMenuItemHeightForContentSizeCategory:]

  // instance methods
  -[CCUIMenuModuleItemView setIndentation:]
  -[CCUIMenuModuleItemView _setSubtitle:]
  -[CCUIMenuModuleItemView subtitle]
  -[CCUIMenuModuleItemView _labelInsets]
  -[CCUIMenuModuleItemView setUseTrailingInset:]
  -[CCUIMenuModuleItemView _trailingWidthForCustomViews]
  -[CCUIMenuModuleItemView _layoutLeadingCustomView]
  -[CCUIMenuModuleItemView leadingView]
  -[CCUIMenuModuleItemView _stopAutomaticallyUpdatingView:recursivelyIfNeeded:]
  -[CCUIMenuModuleItemView trailingView]
  -[CCUIMenuModuleItemView _layoutTrailingCustomViews]
  -[CCUIMenuModuleItemView _setContinuousCornerRadius:]
  -[CCUIMenuModuleItemView _labelLeadingInset]
  -[CCUIMenuModuleItemView _updateForStateChange]
  -[CCUIMenuModuleItemView _separatorHeight]
  -[CCUIMenuModuleItemView setSelected:]
  -[CCUIMenuModuleItemView .cxx_destruct]
  -[CCUIMenuModuleItemView _updateVisualStyleOfView:withStyle:recursivelyIfNeeded:]
  -[CCUIMenuModuleItemView setEnabled:]
  -[CCUIMenuModuleItemView preferredMaxLayoutWidth]
  -[CCUIMenuModuleItemView _subtitleFont]
  -[CCUIMenuModuleItemView continueTrackingWithTouch:withEvent:]
  -[CCUIMenuModuleItemView initWithMenuItem:]
  -[CCUIMenuModuleItemView setHighlighted:]
  -[CCUIMenuModuleItemView setShouldLimitContentSizeCategory:]
  -[CCUIMenuModuleItemView layoutSubviews]
  -[CCUIMenuModuleItemView title]
  -[CCUIMenuModuleItemView _titleFont]
  -[CCUIMenuModuleItemView menuItem]
  -[CCUIMenuModuleItemView setPreferredMaxLayoutWidth:]
  -[CCUIMenuModuleItemView setMenuItem:]
  -[CCUIMenuModuleItemView _contentSizeCategoryDidChange]
  -[CCUIMenuModuleItemView updateSubviewsAlpha:]
  -[CCUIMenuModuleItemView useTrailingCheckmarkLayout]
  -[CCUIMenuModuleItemView separatorVisible]
  -[CCUIMenuModuleItemView sizeThatFits:]
  -[CCUIMenuModuleItemView _textHeightForEmojiLabel:width:]
  -[CCUIMenuModuleItemView _labelTrailingInset]
  -[CCUIMenuModuleItemView _shouldHorizontallyCenterText]
  -[CCUIMenuModuleItemView setUseTallLayout:]
  -[CCUIMenuModuleItemView setUseTrailingCheckmarkLayout:]
  -[CCUIMenuModuleItemView useTrailingInset]
  -[CCUIMenuModuleItemView _titleBaselineToTop]
  -[CCUIMenuModuleItemView intrinsicContentSize]
  -[CCUIMenuModuleItemView _titleBaselineToBottom]
  -[CCUIMenuModuleItemView setSeparatorVisible:]
  -[CCUIMenuModuleItemView _setTitle:]
  -[CCUIMenuModuleItemView pointerInteraction:styleForRegion:]
  -[CCUIMenuModuleItemView pointerInteraction:regionForRequest:defaultRegion:]
  -[CCUIMenuModuleItemView useTallLayout]
  -[CCUIMenuModuleItemView traitCollectionDidChange:]
  -[CCUIMenuModuleItemView didMoveToWindow]
  -[CCUIMenuModuleItemView setTrailingView:]
  -[CCUIMenuModuleItemView isEqual:]
  -[CCUIMenuModuleItemView setLeadingView:]
  -[CCUIMenuModuleItemView indentation]
  -[CCUIMenuModuleItemView shouldLimitContentSizeCategory]


CCUIControlCenterMaterialView : UIView
  // class methods
  +[CCUIControlCenterMaterialView controlCenterModuleBackgroundMaterial]
  +[CCUIControlCenterMaterialView _darkMaterialView]
  +[CCUIControlCenterMaterialView _lightFillMaterialView]
  +[CCUIControlCenterMaterialView _lightFillView]
  +[CCUIControlCenterMaterialView _tertiaryView]
  +[CCUIControlCenterMaterialView controlCenterDarkMaterial]
  +[CCUIControlCenterMaterialView _tertiaryMaterialView]
  +[CCUIControlCenterMaterialView _auxiliaryMaterialView]
  +[CCUIControlCenterMaterialView _controlCenterBackgroundRecipe]
  +[CCUIControlCenterMaterialView _controlCenterModulesRecipe]
  +[CCUIControlCenterMaterialView _moduleBackgroundMaterialView]
  +[CCUIControlCenterMaterialView controlCenterLightFill]
  +[CCUIControlCenterMaterialView controlCenterTertiaryCapturingMaterial]
  +[CCUIControlCenterMaterialView secondaryMaterialView]
  +[CCUIControlCenterMaterialView controlCenterTertiaryMaterial]


CCUIContentModuleDetailClickPresentationInteractionManager : NSObject <_UIClickPresentationInteractionDelegate>
 @property  UIViewController *presentingViewController
 @property  <CCUIContentModuleDetailClickPresentationInteractionManagerDelegate> *delegate
 @property  UIView *viewForInteraction
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIContentModuleDetailClickPresentationInteractionManager setDelegate:]
  -[CCUIContentModuleDetailClickPresentationInteractionManager delegate]
  -[CCUIContentModuleDetailClickPresentationInteractionManager clickPresentationInteractionShouldPresent:]
  -[CCUIContentModuleDetailClickPresentationInteractionManager presentingViewController]
  -[CCUIContentModuleDetailClickPresentationInteractionManager .cxx_destruct]
  -[CCUIContentModuleDetailClickPresentationInteractionManager activationStyleForClickPresentationInteraction:]
  -[CCUIContentModuleDetailClickPresentationInteractionManager initWithPresentingViewController:delegate:]
  -[CCUIContentModuleDetailClickPresentationInteractionManager clickPresentationInteractionShouldBegin:]
  -[CCUIContentModuleDetailClickPresentationInteractionManager clickPresentationInteraction:presentationForPresentingViewController:]
  -[CCUIContentModuleDetailClickPresentationInteractionManager clickPresentationInteractionEnded:wasCancelled:]
  -[CCUIContentModuleDetailClickPresentationInteractionManager clickPresentationInteraction:previewForHighlightingAtLocation:]
  -[CCUIContentModuleDetailClickPresentationInteractionManager setViewForInteraction:]
  -[CCUIContentModuleDetailClickPresentationInteractionManager viewForInteraction]


CCUIContentModuleDetailClickPresentationTransition : NSObject <_UIClickPresentationTransition>
 @property  UIViewController *presentedViewController
 @property  CCUIContentModuleDetailAnimationController *animationController
 @property  UITargetedPreview *sourcePreview
 @property  UIViewPropertyAnimator *customAnimator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIContentModuleDetailClickPresentationTransition animationController]
  -[CCUIContentModuleDetailClickPresentationTransition .cxx_destruct]
  -[CCUIContentModuleDetailClickPresentationTransition presentedViewController]
  -[CCUIContentModuleDetailClickPresentationTransition performTransitionFromView:toView:containerView:]
  -[CCUIContentModuleDetailClickPresentationTransition transitionDidEnd:]
  -[CCUIContentModuleDetailClickPresentationTransition customAnimator]
  -[CCUIContentModuleDetailClickPresentationTransition initWithPresentedViewController:animationController:]


CCUISensorAttributionEntity : NSObject <NSCopying>
 @property  NSString *executableDisplayName
 @property  NSString *bundleIdentifier
 @property  BOOL isSystemService
 @property  NSString *displayNameForCompactView

  // class methods
  +[CCUISensorAttributionEntity genericLocationSystemServiceEntity]
  +[CCUISensorAttributionEntity attributionEntityFromSensorActivityData:]

  // instance methods
  -[CCUISensorAttributionEntity executableDisplayName]
  -[CCUISensorAttributionEntity isSystemService]
  -[CCUISensorAttributionEntity setIsSystemService:]
  -[CCUISensorAttributionEntity isContinuityCaptureExtension]
  -[CCUISensorAttributionEntity isGenericLocationSystemServiceEntity]
  -[CCUISensorAttributionEntity .cxx_destruct]
  -[CCUISensorAttributionEntity isKeyboardCameraEntity]
  -[CCUISensorAttributionEntity isSetupApp]
  -[CCUISensorAttributionEntity isSiriAndDictationEntity]
  -[CCUISensorAttributionEntity setBundleIdentifier:]
  -[CCUISensorAttributionEntity isWalletSpecialEntity]
  -[CCUISensorAttributionEntity bundleIdentifier]
  -[CCUISensorAttributionEntity copyWithZone:]
  -[CCUISensorAttributionEntity displayNameForCompactView]
  -[CCUISensorAttributionEntity isEqual:]
  -[CCUISensorAttributionEntity setExecutableDisplayName:]


CCUICustomContentModuleBackgroundViewController : UIViewController <CCUIContentModuleBackgroundViewController>
 @property  double expandedContentModuleHeight
 @property  double expandedContentModuleWidth
 @property  BOOL positionHeaderToRightInLandscapeRight
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUICustomContentModuleBackgroundViewController viewDidMoveToWindow:shouldAppearOrDisappear:]
  -[CCUICustomContentModuleBackgroundViewController setHeaderTitle:]
  -[CCUICustomContentModuleBackgroundViewController setGlyphImage:]
  -[CCUICustomContentModuleBackgroundViewController effectiveContentFrameForContainerFrame:]
  -[CCUICustomContentModuleBackgroundViewController setGlyphPackageDescription:]
  -[CCUICustomContentModuleBackgroundViewController viewWillLayoutSubviews]
  -[CCUICustomContentModuleBackgroundViewController setVisualStylingProvider:forCategory:]
  -[CCUICustomContentModuleBackgroundViewController requiredVisualStyleCategories]
  -[CCUICustomContentModuleBackgroundViewController .cxx_destruct]
  -[CCUICustomContentModuleBackgroundViewController setGlyphState:]
  -[CCUICustomContentModuleBackgroundViewController visualStylingProviderForCategory:]
  -[CCUICustomContentModuleBackgroundViewController _titleFont]
  -[CCUICustomContentModuleBackgroundViewController _visualStylingProvider:didChangeForCategory:outgoingVisualStylingProvider:]
  -[CCUICustomContentModuleBackgroundViewController _updateTitleFont]
  -[CCUICustomContentModuleBackgroundViewController _contentSizeCategoryDidChange]
  -[CCUICustomContentModuleBackgroundViewController traitCollectionDidChange:]
  -[CCUICustomContentModuleBackgroundViewController setCustomHeaderView:]
  -[CCUICustomContentModuleBackgroundViewController setFooterButtons:]
  -[CCUICustomContentModuleBackgroundViewController expandedContentModuleWidth]
  -[CCUICustomContentModuleBackgroundViewController expandedContentModuleHeight]
  -[CCUICustomContentModuleBackgroundViewController _shouldLimitContentSizeCategory]
  -[CCUICustomContentModuleBackgroundViewController setHeaderGlyphImage:]
  -[CCUICustomContentModuleBackgroundViewController setHeaderGlyphPackageDescription:]
  -[CCUICustomContentModuleBackgroundViewController setHeaderGlyphState:]
  -[CCUICustomContentModuleBackgroundViewController setCustomFooterView:]
  -[CCUICustomContentModuleBackgroundViewController _updateHeaderLayoutIfNecessary]
  -[CCUICustomContentModuleBackgroundViewController _updateCustomHeaderViewLayoutIfNecessary]
  -[CCUICustomContentModuleBackgroundViewController _headerCenterForBounds:]
  -[CCUICustomContentModuleBackgroundViewController _updateHeaderGlyphVisualStylingWithProvider:]
  -[CCUICustomContentModuleBackgroundViewController _updateFooterButtonsLayoutIfNecessary]
  -[CCUICustomContentModuleBackgroundViewController _updateCustomFooterViewLayoutIfNecessary]
  -[CCUICustomContentModuleBackgroundViewController _footerCenterForBounds:]
  -[CCUICustomContentModuleBackgroundViewController setExpandedContentModuleHeight:]
  -[CCUICustomContentModuleBackgroundViewController setExpandedContentModuleWidth:]
  -[CCUICustomContentModuleBackgroundViewController positionHeaderToRightInLandscapeRight]
  -[CCUICustomContentModuleBackgroundViewController setPositionHeaderToRightInLandscapeRight:]


CCUIContentModuleDetailAnimationController : NSObject <UIViewControllerAnimatedTransitioning>
 @property  BOOL presenting
 @property  UIViewPropertyAnimator *propertyAnimator
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIContentModuleDetailAnimationController animationEnded:]
  -[CCUIContentModuleDetailAnimationController propertyAnimator]
  -[CCUIContentModuleDetailAnimationController animateTransition:]
  -[CCUIContentModuleDetailAnimationController transitionDuration:]
  -[CCUIContentModuleDetailAnimationController isPresenting]
  -[CCUIContentModuleDetailAnimationController .cxx_destruct]
  -[CCUIContentModuleDetailAnimationController performTransition:]
  -[CCUIContentModuleDetailAnimationController initForPresenting:anchoringViewController:]
  -[CCUIContentModuleDetailAnimationController _newPropertyAnimator]
  -[CCUIContentModuleDetailAnimationController _contentModuleContainingViewController]


CCUIBaseSliderView : UIControl <CCUIGroupRendering, CCUITouchContinuationProviding, CCUIContentModuleTopLevelGestureProvider>
 @property  {CGPoint=dd} glyphCenter
 @property  double glyphScale
 @property  float value
 @property  UIImage *glyphImage
 @property  CCUICAPackageDescription *glyphPackageDescription
 @property  NSString *glyphState
 @property  BOOL glyphVisible
 @property  BOOL interactiveWhenUnexpanded
 @property  BOOL groupRenderingRequired
 @property  NSArray *punchOutRenderingViews
 @property  NSArray *punchOutRootLayers
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *topLevelBlockingGestureRecognizers

  // instance methods
  -[CCUIBaseSliderView punchOutRenderingViews]
  -[CCUIBaseSliderView isGroupRenderingRequired]
  -[CCUIBaseSliderView glyphPackageDescription]
  -[CCUIBaseSliderView glyphScale]
  -[CCUIBaseSliderView glyphImage]
  -[CCUIBaseSliderView setGlyphImage:]
  -[CCUIBaseSliderView setGlyphPackageDescription:]
  -[CCUIBaseSliderView .cxx_destruct]
  -[CCUIBaseSliderView glyphState]
  -[CCUIBaseSliderView setGlyphState:]
  -[CCUIBaseSliderView layoutSubviews]
  -[CCUIBaseSliderView setValue:]
  -[CCUIBaseSliderView _setGlyphState:]
  -[CCUIBaseSliderView punchOutRootLayers]
  -[CCUIBaseSliderView value]
  -[CCUIBaseSliderView initWithFrame:]
  -[CCUIBaseSliderView glyphCenter]
  -[CCUIBaseSliderView setGlyphScale:]
  -[CCUIBaseSliderView viewForTouchContinuation]
  -[CCUIBaseSliderView topLevelBlockingGestureRecognizers]
  -[CCUIBaseSliderView setInteractiveWhenUnexpanded:]
  -[CCUIBaseSliderView setGlyphVisible:]
  -[CCUIBaseSliderView sliderLengthForValue:]
  -[CCUIBaseSliderView sliderHeightForValue:]
  -[CCUIBaseSliderView _setActiveGlyphView:]
  -[CCUIBaseSliderView _applyGlyphState:performConfiguration:]
  -[CCUIBaseSliderView isGlyphVisible]
  -[CCUIBaseSliderView isInteractiveWhenUnexpanded]


CCUIContentModuleDetailTransitioningDelegate : NSObject <UIViewControllerTransitioningDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CCUIContentModuleDetailTransitioningDelegate animationControllerForPresentedController:presentingController:sourceController:]
  -[CCUIContentModuleDetailTransitioningDelegate animationControllerForDismissedController:]
  -[CCUIContentModuleDetailTransitioningDelegate .cxx_destruct]
  -[CCUIContentModuleDetailTransitioningDelegate presentationControllerForPresentedViewController:presentingViewController:sourceViewController:]
  -[CCUIContentModuleDetailTransitioningDelegate initWithAnchoringViewController:]


(CCUIGroupRenderingSupport)
	// instance methods
	-[(CCUIGroupRenderingSupport) _ccui_punchOutRenderingViews]
	-[(CCUIGroupRenderingSupport) ccui_configureForGroupRenderingMode:]

UIImageView(CCUIGroupRenderingSupport)
	// instance methods
	-[UIImageView(CCUIGroupRenderingSupport) ccui_setCompensationAlpha:]
	-[UIImageView(CCUIGroupRenderingSupport) ccui_punchOutCompensatingCopy]
	-[UIImageView(CCUIGroupRenderingSupport) ccui_configureForPunchOutRendering:]
	-[UIImageView(CCUIGroupRenderingSupport) ccui_updatePunchOutCompensationIfNecessary]
	-[UIImageView(CCUIGroupRenderingSupport) ccui_compensationAlpha]

NSBundle(ControlCenterUIKit)
	// class methods
	+[NSBundle(ControlCenterUIKit) ccui_bundleForModuleInstance:]

	// instance methods
	-[NSBundle(ControlCenterUIKit) ccui_associateWithModuleInstance:]
	-[NSBundle(ControlCenterUIKit) ccui_displayName]

UIVibrancyEffect(CCUIAdditions)
	// class methods
	+[UIVibrancyEffect(CCUIAdditions) controlCenterKeyLineOnDarkVibrancyEffect]
	+[UIVibrancyEffect(CCUIAdditions) controlCenterKeyLineOnLightVibrancyEffect]
	+[UIVibrancyEffect(CCUIAdditions) controlCenterPrimaryVibrancyEffect]
	+[UIVibrancyEffect(CCUIAdditions) controlCenterSecondaryVibrancyEffect]
	+[UIVibrancyEffect(CCUIAdditions) controlCenterScrollViewDarkeningVibrancyEffect]

UIView(CCUIAdditions_Private)
	// instance methods
	-[UIView(CCUIAdditions_Private) controlCenterApplyPrimaryContentShadow]
	-[UIView(CCUIAdditions_Private) _controlCenterApplyPrimaryContentShadow]

MTVisualStylingProvider(ControlCenterAdditionsPrivate)
	// instance methods
	-[MTVisualStylingProvider(ControlCenterAdditionsPrivate) _controlCenterScrollViewDarkeningVisualStyling]
	-[MTVisualStylingProvider(ControlCenterAdditionsPrivate) _controlCenterKeyLineOnLightVisualStyling]

UIImage(ControlCenterAdditions)
	// instance methods
	-[UIImage(ControlCenterAdditions) ccuiAlphaOnlyImageForMaskImage]

CALayer(ControlCenterAdditions)
	// instance methods
	-[CALayer(ControlCenterAdditions) _ccuiEnumerateSubtreeUsingBlock:stop:]
	-[CALayer(ControlCenterAdditions) ccuiEnumerateSubtreeUsingBlock:]

UIDevice(ControlCenterAdditions)
	// class methods
	+[UIDevice(ControlCenterAdditions) _ccuiDevicesIncapableOfGroupRendering]

	// instance methods
	-[UIDevice(ControlCenterAdditions) ccuiSupportsGroupRendering]

CAPackage(ControlCenterUIKit)
	// class methods
	+[CAPackage(ControlCenterUIKit) ccuiPackageFromDescription:]

01 00 0300 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSDescriptionBuilder 
01 00 0300 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSEqualsBuilder 
01 00 0300 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: BSHashBuilder 
01 00 0500 /System/Library/PrivateFrameworks/BaseBoardUI.framework/BaseBoardUI: BSUIEmojiLabelView 
01 00 0800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 0800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAPackage 
01 00 0800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAStateController 
01 00 0300 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationOptions 
01 00 0300 /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices: FBSOpenApplicationService 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0700 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTMaterialView 
01 00 0700 /System/Library/PrivateFrameworks/MaterialKit.framework/MaterialKit: MTVisualStylingProvider 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0f00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0900 /System/Library/PrivateFrameworks/SpringBoardFoundation.framework/SpringBoardFoundation: SBFApplication 
01 00 0100 /System/Library/PrivateFrameworks/ShortcutUIKit.framework/ShortcutUIKit: SCUIAssetProvider 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRenderer 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIGraphicsImageRendererFormat 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIHandleApplicationShortcutAction 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIHoverGestureRecognizer 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UILongPressGestureRecognizer 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerEffect 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerInteraction 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerLiftEffect 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPointerStyle 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPresentationController 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UISelectionFeedbackGenerator 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITargetedPreview 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIVibrancyEffect 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewPropertyAnimator 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIClickPresentation 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIClickPresentationInteraction 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIEdgeFeedbackGenerator 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UIEdgeFeedbackGeneratorConfiguration 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UISelectionFeedbackGeneratorConfiguration 
01 00 0a00 /System/Library/Frameworks/UIKit.framework/UIKit: _UITargetedPreview 
