|| __DATA_CONST.__const _PKAllowedPlugInsEntitlement
|| __DATA_CONST.__const _PKAnnotationElectionKey
|| __DATA_CONST.__const _PKAnnotationExtensionKey
|| __DATA_CONST.__const _PKAnnotationsFormKey
|| __DATA_CONST.__const _PKAppleLanguagesPref
|| __DATA_CONST.__const _PKAttributesInfoKey
|| __DATA_CONST.__const _PKAttributesInfoKey_L
|| __DATA_CONST.__const _PKAutoElectEntitlement
|| __DATA_CONST.__const _PKBookmarkFormKey
|| __DATA_CONST.__const _PKBundleInfoFormKey
|| __DATA_CONST.__const _PKCleanTimeoutInfoKey
|| __DATA_CONST.__const _PKContainingAppAttribute
|| __DATA_CONST.__const _PKContainingBundleIdentitiferFormKey
|| __DATA_CONST.__const _PKContainingPathFormKey
|| __DATA_CONST.__const _PKDataAnnotationsKey
|| __DATA_CONST.__const _PKDataProtocol
|| __DATA_CONST.__const _PKDedicatedInfoKey
|| __DATA_CONST.__const _PKDelegateInfoKey
|| __DATA_CONST.__const _PKDiscoveryInstanceUUIDFormKey
|| __DATA_CONST.__const _PKEmbeddedCodeInfoKey
|| __DATA_CONST.__const _PKEmbeddedProtocolInfoKey
|| __DATA_CONST.__const _PKEntitlementsFormKey
|| __DATA_CONST.__const _PKEnvironmentProvisionEntitlement
|| __DATA_CONST.__const _PKErrorKeyBusyPlugIns
|| __DATA_CONST.__const _PKExclusionsPreferenceKey
|| __DATA_CONST.__const _PKExtensionsFormKey
|| __DATA_CONST.__const _PKHashFormKey
|| __DATA_CONST.__const _PKHostEntitlementInfoKey
|| __DATA_CONST.__const _PKHubProtocolVersionFormKey
|| __DATA_CONST.__const _PKHubProtocolVersionInfoKey
|| __DATA_CONST.__const _PKIdentifierAttribute
|| __DATA_CONST.__const _PKIdentifierAttribute_L
|| __DATA_CONST.__const _PKIdentifierFormKey
|| __DATA_CONST.__const _PKLastModifiedFormKey
|| __DATA_CONST.__const _PKLocalizedContainingNameFormKey
|| __DATA_CONST.__const _PKManagerContainingIdentifierKey
|| __DATA_CONST.__const _PKManagerContainingPathKey
|| __DATA_CONST.__const _PKManagerEntitlement
|| __DATA_CONST.__const _PKManagerHostBundleIdentifierKey
|| __DATA_CONST.__const _PKManagerHostPathKey
|| __DATA_CONST.__const _PKManagerHostPidKey
|| __DATA_CONST.__const _PKManagerPlugInBundleIdentifierKey
|| __DATA_CONST.__const _PKManagerPlugInPathKey
|| __DATA_CONST.__const _PKManagerPlugInVersionKey
|| __DATA_CONST.__const _PKMultipleInfoKey
|| __DATA_CONST.__const _PKOriginalIdentifierFormKey
|| __DATA_CONST.__const _PKOverrideEntitlement
|| __DATA_CONST.__const _PKOverriderFormKey
|| __DATA_CONST.__const _PKOverridingFormKey
|| __DATA_CONST.__const _PKPassProxyInfoKey
|| __DATA_CONST.__const _PKPathFormKey
|| __DATA_CONST.__const _PKPersonaEntitlement
|| __DATA_CONST.__const _PKPersonaEntitlementNoneValue
|| __DATA_CONST.__const _PKPersonaEntitlementPersonalValue
|| __DATA_CONST.__const _PKPersonaEntitlementSystemValue
|| __DATA_CONST.__const _PKPlugInKitErrorDomain
|| __DATA_CONST.__const _PKPlugInKitHostInfoKey
|| __DATA_CONST.__const _PKPlugInKitInfoKey
|| __DATA_CONST.__const _PKPlugInKitInfoKey_L
|| __DATA_CONST.__const _PKPlugInsFormKey
|| __DATA_CONST.__const _PKPreferenceDomain
|| __DATA_CONST.__const _PKPrincipalClassInfoKey
|| __DATA_CONST.__const _PKProtocolAttribute
|| __DATA_CONST.__const _PKProtocolAttribute_L
|| __DATA_CONST.__const _PKProtocolInfoKey
|| __DATA_CONST.__const _PKProtocolInfoKey_L
|| __DATA_CONST.__const _PKRequirementFormKey
|| __DATA_CONST.__const _PKSDKInfoKey
|| __DATA_CONST.__const _PKSDKInfoKey_L
|| __DATA_CONST.__const _PKSDKSpecInfoKey
|| __DATA_CONST.__const _PKSandboxProfileKey
|| __DATA_CONST.__const _PKServiceExtensionFormKey
|| __DATA_CONST.__const _PKSharedResourcesInfoKey
|| __DATA_CONST.__const _PKSubsystemsInfoKey
|| __DATA_CONST.__const _PKSystemResidentFormKey
|| __DATA_CONST.__const _PKURLFormKey
|| __DATA_CONST.__const _PKUUIDAttribute
|| __DATA_CONST.__const _PKUUIDFormKey
|| __DATA_CONST.__const _PKUserElectionAttribute
|| __DATA_CONST.__const _PKUsesEmbeddedInfoKey
|| __DATA_CONST.__const _PKVersionAnnotationsKey
|| __DATA_CONST.__const _PKVersionAttribute
|| __DATA_CONST.__const _PKVersionAttribute_L
|| __DATA_CONST.__const _PKVersionFormKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PKHost
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PKManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PKService
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PKHost
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PKManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PKService
|| __TEXT.__const _PKDAccessRequest
|| __TEXT.__const _PKDAddRequest
|| __TEXT.__const _PKDAnnotateRequest
|| __TEXT.__const _PKDAnnotationsKey
|| __TEXT.__const _PKDBulkAnnotateRequest
|| __TEXT.__const _PKDBulkRequest
|| __TEXT.__const _PKDConflictsKey
|| __TEXT.__const _PKDDataKey
|| __TEXT.__const _PKDEnvironmentKey
|| __TEXT.__const _PKDErrorCodeKey
|| __TEXT.__const _PKDErrorKey
|| __TEXT.__const _PKDExtensionsKey
|| __TEXT.__const _PKDFindRequest
|| __TEXT.__const _PKDFlagsKey
|| __TEXT.__const _PKDIdentifierKey
|| __TEXT.__const _PKDLockdownRequest
|| __TEXT.__const _PKDMatchRequest
|| __TEXT.__const _PKDMatchesKey
|| __TEXT.__const _PKDPathsKey
|| __TEXT.__const _PKDReadyRequest
|| __TEXT.__const _PKDReceiptRequest
|| __TEXT.__const _PKDRemoveRequest
|| __TEXT.__const _PKDRequestKey
|| __TEXT.__const _PKDRulesKey
|| __TEXT.__const _PKDSynchronousRequestKey
|| __TEXT.__const _PKDUUIDKey
|| __TEXT.__const _PKDVersionKey
|| __TEXT.__const _PKNotifyAnnotationChange
|| __TEXT.__const _PKXPCBootstrapAppSpecificLanguages
|| __TEXT.__const _PKXPCBootstrapSubsystemOptions
|| __TEXT.__text ___PLUGINKIT_CALLING_OUT_TO_CLIENT_SUBSYSTEM_FOR_BEGINUSING__
|| __TEXT.__text ___PLUGINKIT_CALLING_OUT_TO_CLIENT_SUBSYSTEM_FOR_INIT__
|| __TEXT.__text ___PLUGINKIT_HANDING_CONTROL_TO_CLIENT__
|| __TEXT.__text ___PLUGINKIT_HANDING_CONTROL_TO_MAIN_SERVICE_LISTENER__
|| __TEXT.__text _pklog_get_persona_type_and_name
|| __TEXT.__text _pklog_handle_for_category
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_METACLASS_$_NSUserDefaults
__ CoreFoundation: __CFBundleCreateWithExecutableURLIfLooksLikeBundle
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCMessage
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: __CFXPCCreateXPCMessageWithCFObject
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSExtensionPoint
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ Foundation: _NSArgumentDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: __NSXPCConnectionInvocationReplyUserInfoKey
__ RunningBoardServices: _OBJC_CLASS_$_RBSProcessHandle
__ libSystem.B.dylib: _APP_SANDBOX_READ
__ libSystem.B.dylib: _SANDBOX_EXTENSION_CANONICAL
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __xpc_error_key_description
__ libSystem.B.dylib: __xpc_type_array
__ libSystem.B.dylib: __xpc_type_error
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_current_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _kpersona_info
__ libSystem.B.dylib: _launch_copy_extension_properties
__ libSystem.B.dylib: _launch_copy_extension_properties_for_pid
__ libSystem.B.dylib: _launch_extension_property_host_pid
__ libSystem.B.dylib: _launch_extension_property_path
__ libSystem.B.dylib: _memorystatus_control
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_signpost_id_make_with_pointer
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _proc_pidpath
__ libSystem.B.dylib: _sandbox_check
__ libSystem.B.dylib: _sandbox_container_path_for_pid
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_issue_file
__ libSystem.B.dylib: _sandbox_extension_issue_mach
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _voucher_get_current_persona
__ libSystem.B.dylib: _xpc_array_create
__ libSystem.B.dylib: _xpc_array_set_string
__ libSystem.B.dylib: _xpc_array_set_uuid
__ libSystem.B.dylib: _xpc_bundle_create
__ libSystem.B.dylib: _xpc_bundle_create_main
__ libSystem.B.dylib: _xpc_bundle_get_info_dictionary
__ libSystem.B.dylib: _xpc_bundle_get_property
__ libSystem.B.dylib: _xpc_connection_create_mach_service
__ libSystem.B.dylib: _xpc_connection_resume
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply
__ libSystem.B.dylib: _xpc_connection_send_message_with_reply_sync
__ libSystem.B.dylib: _xpc_connection_set_bootstrap
__ libSystem.B.dylib: _xpc_connection_set_event_handler
__ libSystem.B.dylib: _xpc_connection_set_oneshot_instance
__ libSystem.B.dylib: _xpc_connection_set_target_uid
__ libSystem.B.dylib: _xpc_copy_bootstrap
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_get_array
__ libSystem.B.dylib: _xpc_dictionary_get_count
__ libSystem.B.dylib: _xpc_dictionary_get_data
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_uint64
__ libSystem.B.dylib: _xpc_dictionary_get_uuid
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_uint64
__ libSystem.B.dylib: _xpc_dictionary_set_uuid
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_init_services
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libSystem.B.dylib: _xpc_transaction_interrupt_clean_exit
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocateProtocol
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_getProtocol
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_lookUpClass
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_registerProtocol
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_addProtocol
__ libobjc.A.dylib: _protocol_getName
PKHostPlugIn : PKPlugInCore <PKPlugInPrivate, NSXPCConnectionDelegate>
 @property  NSXPCConnection *pluginConnection
 @property  NSObject<OS_dispatch_queue> *_replyQueue
 @property  NSObject<OS_dispatch_queue> *_syncQueue
 @property  NSObject<OS_dispatch_queue> *_startQueue
 @property  <PKCorePlugInProtocol> *service
 @property  <PKCorePlugInProtocol> *syncService
 @property  NSUUID *supersedingUUID
 @property  <PKPlugIn> *supersededBy
 @property  NSUUID *multipleInstanceUUID
 @property  NSUUID *effectiveUUID
 @property  NSString *serviceExtension
 @property  NSDictionary *discoveryExtensions
 @property  NSArray *sandboxExtensions
 @property  id queuedHostPrincipal
 @property  Protocol *queuedHostProtocol
 @property  unsigned long state
 @property  unsigned int useCount
 @property  id plugInPrincipal
 @property  id embeddedPrincipal
 @property  NSBundle *embeddedBundle
 @property  NSUserDefaults *defaults
 @property  BOOL terminating
 @property  NSDate *beganUsingAt
 @property  NSDictionary *sourceForm
 @property  NSDictionary *environment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  NSString *version
 @property  NSURL *url
 @property  NSURL *containingUrl
 @property  BOOL onSystemVolume
 @property  NSDictionary *bundleInfoDictionary
 @property  NSDictionary *plugInDictionary
 @property  NSDictionary *attributes
 @property  NSDictionary *entitlements
 @property  NSString *localizedName
 @property  NSString *localizedShortName
 @property  NSString *localizedContainingName
 @property  NSDictionary *localizedFileProviderActionNames
 @property  long long userElection
 @property  BOOL spent
 @property  BOOL active
 @property  @? notificationBlock
 @property  NSUUID *uuid
 @property  NSDate *timestamp
 @property  NSDictionary *extensionState

  // instance methods
  -[PKHostPlugIn .cxx_destruct]
  -[PKHostPlugIn resume]
  -[PKHostPlugIn extensionState]
  -[PKHostPlugIn setExtensionState:]
  -[PKHostPlugIn userElection]
  -[PKHostPlugIn state]
  -[PKHostPlugIn environment]
  -[PKHostPlugIn createInstanceWithUUID:]
  -[PKHostPlugIn setUserElection:]
  -[PKHostPlugIn useBundle:error:]
  -[PKHostPlugIn pluginConnection]
  -[PKHostPlugIn spent]
  -[PKHostPlugIn beginUsingWithError:]
  -[PKHostPlugIn beginUsing:]
  -[PKHostPlugIn endUsing:]
  -[PKHostPlugIn setEnvironment:]
  -[PKHostPlugIn suspend]
  -[PKHostPlugIn connection:handleInvocation:isReply:]
  -[PKHostPlugIn setState:]
  -[PKHostPlugIn defaults]
  -[PKHostPlugIn service]
  -[PKHostPlugIn _syncQueue]
  -[PKHostPlugIn _replyQueue]
  -[PKHostPlugIn active]
  -[PKHostPlugIn multipleInstanceUUID]
  -[PKHostPlugIn setService:]
  -[PKHostPlugIn setReplyQueue:]
  -[PKHostPlugIn useCount]
  -[PKHostPlugIn setUseCount:]
  -[PKHostPlugIn notificationBlock]
  -[PKHostPlugIn setNotificationBlock:]
  -[PKHostPlugIn supersededBy]
  -[PKHostPlugIn serviceExtension]
  -[PKHostPlugIn initWithForm:]
  -[PKHostPlugIn setSourceForm:]
  -[PKHostPlugIn setSupersedingUUID:]
  -[PKHostPlugIn set_syncQueue:]
  -[PKHostPlugIn set_startQueue:]
  -[PKHostPlugIn setDiscoveryExtensions:]
  -[PKHostPlugIn setServiceExtension:]
  -[PKHostPlugIn updateFromForm:]
  -[PKHostPlugIn sourceForm]
  -[PKHostPlugIn set_replyQueue:]
  -[PKHostPlugIn plugInPrincipal]
  -[PKHostPlugIn setQueuedHostPrincipal:]
  -[PKHostPlugIn setQueuedHostProtocol:]
  -[PKHostPlugIn setMultipleInstanceUUID:]
  -[PKHostPlugIn beginUsingWithSubsystemOptions:completion:]
  -[PKHostPlugIn _startQueue]
  -[PKHostPlugIn startPlugInSynchronously:subsystemOptions:completion:]
  -[PKHostPlugIn beginUsingWithSubsystemOptions:error:]
  -[PKHostPlugIn setTerminating:]
  -[PKHostPlugIn changeState:]
  -[PKHostPlugIn loadExtensions:error:]
  -[PKHostPlugIn setBeganUsingAt:]
  -[PKHostPlugIn setSyncService:]
  -[PKHostPlugIn syncService]
  -[PKHostPlugIn terminating]
  -[PKHostPlugIn unwind:force:]
  -[PKHostPlugIn setPluginConnection:]
  -[PKHostPlugIn setBootstrapWithSubsystemOptions:]
  -[PKHostPlugIn queuedHostPrincipal]
  -[PKHostPlugIn setPlugInPrincipal:]
  -[PKHostPlugIn setEmbeddedPrincipal:]
  -[PKHostPlugIn preparePlugInUsingService:completion:]
  -[PKHostPlugIn queuedHostProtocol]
  -[PKHostPlugIn sandboxExtensions]
  -[PKHostPlugIn setSandboxExtensions:]
  -[PKHostPlugIn isSandboxed]
  -[PKHostPlugIn discoveryExtensions]
  -[PKHostPlugIn messageTraceUsage]
  -[PKHostPlugIn endUsingWithError:]
  -[PKHostPlugIn setHostPrincipal:withProtocol:]
  -[PKHostPlugIn embeddedPrincipal]
  -[PKHostPlugIn embeddedBundle]
  -[PKHostPlugIn effectiveUUID]
  -[PKHostPlugIn supersedingUUID]
  -[PKHostPlugIn setSupersededBy:]
  -[PKHostPlugIn setEmbeddedBundle:]
  -[PKHostPlugIn beganUsingAt]


PKDiscoveryDriver : NSObject /usr/lib/libSystem.B.dylib <LSApplicationWorkspaceObserverProtocol>
 @property  NSDictionary *attributes
 @property  unsigned long flags
 @property  @? report
 @property  NSObject<OS_os_activity> *relatedActivity
 @property  NSSet *lastResults
 @property  int annotationNotifyToken
 @property  id mcNotificationToken
 @property  PKDiscoveryLSWatcher *lsWatcher
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *sync
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PKDiscoveryDriver dealloc]
  -[PKDiscoveryDriver setQueue:]
  -[PKDiscoveryDriver queue]
  -[PKDiscoveryDriver .cxx_destruct]
  -[PKDiscoveryDriver flags]
  -[PKDiscoveryDriver cancel]
  -[PKDiscoveryDriver attributes]
  -[PKDiscoveryDriver setAttributes:]
  -[PKDiscoveryDriver sync]
  -[PKDiscoveryDriver setSync:]
  -[PKDiscoveryDriver report]
  -[PKDiscoveryDriver setFlags:]
  -[PKDiscoveryDriver setReport:]
  -[PKDiscoveryDriver setRelatedActivity:]
  -[PKDiscoveryDriver relatedActivity]
  -[PKDiscoveryDriver removeWatchers]
  -[PKDiscoveryDriver setLastResults:]
  -[PKDiscoveryDriver annotationNotifyToken]
  -[PKDiscoveryDriver installWatchers]
  -[PKDiscoveryDriver lastResults]
  -[PKDiscoveryDriver setLsWatcher:]
  -[PKDiscoveryDriver performWithPreviousResults:forceNotify:]
  -[PKDiscoveryDriver setAnnotationNotifyToken:]
  -[PKDiscoveryDriver setMcNotificationToken:]
  -[PKDiscoveryDriver lsWatcher]
  -[PKDiscoveryDriver mcNotificationToken]
  -[PKDiscoveryDriver initWithAttributes:flags:report:]


PKDiscoveryLSWatcher : NSObject /usr/lib/libSystem.B.dylib <LSApplicationWorkspaceObserverProtocol>
 @property  PKDiscoveryDriver *wdriver
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PKDiscoveryLSWatcher .cxx_destruct]
  -[PKDiscoveryLSWatcher pluginsDidInstall:]
  -[PKDiscoveryLSWatcher pluginsDidUninstall:]
  -[PKDiscoveryLSWatcher update]
  -[PKDiscoveryLSWatcher initWithDriver:]
  -[PKDiscoveryLSWatcher stopUpdates]
  -[PKDiscoveryLSWatcher setWdriver:]
  -[PKDiscoveryLSWatcher wdriver]


PKCapabilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[PKCapabilities _mainExecutableSDKVersion]
  +[PKCapabilities supportsAutoreleasePoolDuringPlugInLaunch]


PKHost : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *activePlugIns
 @property  NSMutableDictionary *activeOneShots
 @property  NSMapTable *discoveryMap
 @property  NSObject<OS_dispatch_queue> *hostQueue
 @property  PKDaemonClient *daemon
 @property  NSDictionary *hostInfoPlist

  // class methods
  +[PKHost defaultHost]

  // instance methods
  -[PKHost init]
  -[PKHost .cxx_destruct]
  -[PKHost discoverPlugInsForAttributes:flags:found:]
  -[PKHost findPlugInByUUID:reply:]
  -[PKHost findPlugInByPathURL:reply:]
  -[PKHost continuouslyDiscoverPlugInsForAttributes:flags:found:]
  -[PKHost cancelPlugInDiscovery:]
  -[PKHost daemon]
  -[PKHost setDaemon:]
  -[PKHost setElection:forPlugIn:]
  -[PKHost setExtensionState:forPlugIn:]
  -[PKHost deactivatePlugIn:]
  -[PKHost activatePlugIn:]
  -[PKHost accessPlugIns:synchronously:flags:extensions:]
  -[PKHost readyPlugIns:synchronously:environment:ready:]
  -[PKHost setHostQueue:]
  -[PKHost setActivePlugIns:]
  -[PKHost setActiveOneShots:]
  -[PKHost setDiscoveryMap:]
  -[PKHost hostQueue]
  -[PKHost discoveryMap]
  -[PKHost rewriteDiscoveryAttributes:flags:]
  -[PKHost activePlugIns]
  -[PKHost activeOneShots]
  -[PKHost activePlugInForIdentifier:]
  -[PKHost hostInfoPlist]


PKPlugInCore : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSString *originalIdentifier
 @property  NSURL *url
 @property  NSDictionary *bundleInfoDictionary
 @property  NSDictionary *plugInDictionary
 @property  NSDictionary *entitlements
 @property  NSDictionary *annotations
 @property  NSURL *containingUrl
 @property  NSString *containingBundleIdentifier
 @property  BOOL oldStyle
 @property  NSString *path
 @property  NSString *containingPath
 @property  BOOL onSystemVolume
 @property  NSUUID *discoveryInstanceUUID
 @property  NSDictionary *attributes
 @property  NSString *version
 @property  id protocolSpec
 @property  NSString *principalSpec
 @property  unsigned long hubProtocolVersion
 @property  NSString *sdkSpec
 @property  NSString *localizedName
 @property  NSString *localizedShortName
 @property  NSString *localizedContainingName
 @property  NSDictionary *localizedFileProviderActionNames
 @property  long long lastModified
 @property  NSDate *timestamp
 @property  NSUUID *uuid
 @property  NSData *cdhash
 @property  NSString *requirement
 @property  BOOL isAppExtension
 @property  BOOL isMultiplexed
 @property  BOOL isHybrid
 @property  BOOL isDedicated
 @property  BOOL isData
 @property  NSURL *dataContainerURL

  // class methods
  +[PKPlugInCore readSDKDictionary:]

  // instance methods
  -[PKPlugInCore init]
  -[PKPlugInCore isEqual:]
  -[PKPlugInCore .cxx_destruct]
  -[PKPlugInCore identifier]
  -[PKPlugInCore attributes]
  -[PKPlugInCore path]
  -[PKPlugInCore setIdentifier:]
  -[PKPlugInCore version]
  -[PKPlugInCore url]
  -[PKPlugInCore bundleInfoDictionary]
  -[PKPlugInCore localizedName]
  -[PKPlugInCore localizedShortName]
  -[PKPlugInCore uuid]
  -[PKPlugInCore useBundle:error:]
  -[PKPlugInCore localizedInfoDictionaryForKeys:completion:]
  -[PKPlugInCore timestamp]
  -[PKPlugInCore setUuid:]
  -[PKPlugInCore originalIdentifier]
  -[PKPlugInCore dataContainerURL]
  -[PKPlugInCore entitlements]
  -[PKPlugInCore requirement]
  -[PKPlugInCore setUrl:]
  -[PKPlugInCore containingUrl]
  -[PKPlugInCore localizedContainingName]
  -[PKPlugInCore setRequirement:]
  -[PKPlugInCore isData]
  -[PKPlugInCore annotations]
  -[PKPlugInCore containingBundleIdentifier]
  -[PKPlugInCore lastModified]
  -[PKPlugInCore initWithForm:]
  -[PKPlugInCore setAnnotation:value:]
  -[PKPlugInCore updateFromForm:]
  -[PKPlugInCore diagnose]
  -[PKPlugInCore infoKey:]
  -[PKPlugInCore protocolSpec]
  -[PKPlugInCore augmentInterface:]
  -[PKPlugInCore hubProtocolVersion]
  -[PKPlugInCore onSystemVolume]
  -[PKPlugInCore plugInDictionary]
  -[PKPlugInCore localizedFileProviderActionNames]
  -[PKPlugInCore setupWithName:url:bundleInfo:uuid:discoveryInstanceUUID:extensionPointCache:]
  -[PKPlugInCore setupWithForm:]
  -[PKPlugInCore normalizeInfoDictionary:]
  -[PKPlugInCore resolveSDKWithInfoPlist:extensionPointCache:]
  -[PKPlugInCore setDictionaries:]
  -[PKPlugInCore canonicalize]
  -[PKPlugInCore discoveryInstanceUUID]
  -[PKPlugInCore setHubProtocolVersion:]
  -[PKPlugInCore setOriginalIdentifier:]
  -[PKPlugInCore setCdhash:]
  -[PKPlugInCore setLastModified:]
  -[PKPlugInCore setEntitlements:]
  -[PKPlugInCore setContainingUrl:]
  -[PKPlugInCore setContainingBundleIdentifier:]
  -[PKPlugInCore setOnSystemVolume:]
  -[PKPlugInCore setAnnotations:]
  -[PKPlugInCore setLocalizedContainingName:]
  -[PKPlugInCore setPlugInDictionary:]
  -[PKPlugInCore attribute:]
  -[PKPlugInCore sdkDictionaryWithInfoPlist:extensionPointCache:]
  -[PKPlugInCore mergeSDKDictionary:intoExtensionDictionary:]
  -[PKPlugInCore sdkOnlyKeyPaths]
  -[PKPlugInCore mergeSharedResources:into:]
  -[PKPlugInCore containingPath]
  -[PKPlugInCore isAppExtension]
  -[PKPlugInCore principalSpec]
  -[PKPlugInCore pluginKey:]
  -[PKPlugInCore isHybrid]
  -[PKPlugInCore _loadLocalizedNames]
  -[PKPlugInCore _localizedFileProviderActionNamesForPKDict:fromBundle:]
  -[PKPlugInCore initWithName:url:bundleInfo:uuid:discoveryInstanceUUID:extensionPointCache:]
  -[PKPlugInCore export:]
  -[PKPlugInCore oldStyle]
  -[PKPlugInCore sdkSpec]
  -[PKPlugInCore embeddedCodePath]
  -[PKPlugInCore embeddedProtocolSpec]
  -[PKPlugInCore isMultiplexed]
  -[PKPlugInCore isDedicated]
  -[PKPlugInCore setBundleInfoDictionary:]
  -[PKPlugInCore cdhash]


PKServicePersonality : PKPlugInCore <PKCorePlugInProtocol, PKSubsystemServicePersonality>
 @property  id plugInPrincipal
 @property  id hostPrincipal
 @property  id embeddedPrincipal
 @property  NSXPCConnection *connection
 @property  NSUserDefaults *preferences
 @property  NSDictionary *_userInfo
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *identifier
 @property  NSString *version
 @property  NSURL *url
 @property  NSUUID *uuid
 @property  NSDictionary *bundleInfoDictionary
 @property  NSDictionary *plugInDictionary

  // instance methods
  -[PKServicePersonality .cxx_destruct]
  -[PKServicePersonality connection]
  -[PKServicePersonality setConnection:]
  -[PKServicePersonality initWithConnection:]
  -[PKServicePersonality setPreferences:]
  -[PKServicePersonality preferences]
  -[PKServicePersonality plugInPrincipal]
  -[PKServicePersonality prepareUsingPlugIn:hostProtocol:reply:]
  -[PKServicePersonality prepareUsing:reply:]
  -[PKServicePersonality beginUsingPlugIn:ready:]
  -[PKServicePersonality hostHasControl]
  -[PKServicePersonality shutdownPlugIn]
  -[PKServicePersonality prefsObjectForKey:inPlugIn:result:]
  -[PKServicePersonality prefsSetObject:forKey:inPlugIn:result:]
  -[PKServicePersonality setPlugInPrincipal:]
  -[PKServicePersonality setEmbeddedPrincipal:]
  -[PKServicePersonality embeddedPrincipal]
  -[PKServicePersonality setupWithIdentifier:]
  -[PKServicePersonality defaultPrincipalObject]
  -[PKServicePersonality findProtocol:]
  -[PKServicePersonality setHostPrincipal:]
  -[PKServicePersonality hostPrincipal]


PKService : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate>
 @property  NSXPCListener *serviceListener
 @property  NSMutableDictionary *personalities
 @property  PKServicePersonality *solePersonality
 @property  NSObject<OS_dispatch_queue> *_sync
 @property  NSArray *subsystems
 @property  BOOL shared
 @property  BOOL isSystemService
 @property  NSObject<OS_dispatch_source> *terminationTimer
 @property  NSObject<OS_dispatch_source> *firstHostRequestTimer
 @property  <PKServiceDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PKService defaultService]
  +[PKService main]
  +[PKService _defaultRun:arguments:]

  // instance methods
  -[PKService init]
  -[PKService run]
  -[PKService delegate]
  -[PKService setDelegate:]
  -[PKService checkIn]
  -[PKService .cxx_destruct]
  -[PKService listener:shouldAcceptNewConnection:]
  -[PKService _sync]
  -[PKService serviceListener]
  -[PKService shared]
  -[PKService setShared:]
  -[PKService subsystems]
  -[PKService registerPersonality:]
  -[PKService beganUsingServicePersonality:]
  -[PKService unregisterPersonality:]
  -[PKService firstHostRequestTimer]
  -[PKService setFirstHostRequestTimer:]
  -[PKService setPersonalities:]
  -[PKService set_sync:]
  -[PKService _prepareToRun]
  -[PKService checkEnvironment:]
  -[PKService setServiceListener:]
  -[PKService discoverSubsystems]
  -[PKService configuredSubsystemList]
  -[PKService isSystemService]
  -[PKService discoverSubsystemNamed:options:logMissing:]
  -[PKService _processDefaultSubsystemName:]
  -[PKService setSubsystems:]
  -[PKService mergeSubsystems:from:]
  -[PKService mergeSubsystemList:from:]
  -[PKService setIsSystemService:]
  -[PKService personalityNamed:]
  -[PKService personalities]
  -[PKService solePersonality]
  -[PKService setSolePersonality:]
  -[PKService terminationTimer]
  -[PKService setTerminationTimer:]
  -[PKService launchContainingApplicationForPlugInNamed:]
  -[PKService copyAppStoreReceipt:]
  -[PKService defaultsForPlugInNamed:]
  -[PKService plugInPrincipalForPlugInNamed:]
  -[PKService hostPrincipalForPlugInNamed:]
  -[PKService embeddedPrincipalForPlugInNamed:]
  -[PKService connectionForPlugInNamed:]
  -[PKService personalityNamed:forHostPid:]
  -[PKService scheduleTermination:]
  -[PKService cancelTermination]


PKHostDefaults : NSUserDefaults /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  PKHostPlugIn *plugin
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[PKHostDefaults setQueue:]
  -[PKHostDefaults queue]
  -[PKHostDefaults synchronize]
  -[PKHostDefaults objectForKey:]
  -[PKHostDefaults setObject:forKey:]
  -[PKHostDefaults .cxx_destruct]
  -[PKHostDefaults registerDefaults:]
  -[PKHostDefaults plugin]
  -[PKHostDefaults setPlugin:]
  -[PKHostDefaults initWithPlugIn:]


PKServiceDefaults : NSUserDefaults /System/Library/Frameworks/CoreServices.framework/CoreServices
 @property  PKServicePersonality *personality

  // instance methods
  -[PKServiceDefaults synchronize]
  -[PKServiceDefaults objectForKey:]
  -[PKServiceDefaults setObject:forKey:]
  -[PKServiceDefaults .cxx_destruct]
  -[PKServiceDefaults initWithPersonality:]
  -[PKServiceDefaults setPersonality:]
  -[PKServiceDefaults personality]


PKDaemonClient : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_xpc_object> *pkd
 @property  NSObject<OS_dispatch_queue> *replyQueue
 @property  long long protocolVersion

  // class methods
  +[PKDaemonClient convertToXPC:version:]

  // instance methods
  -[PKDaemonClient .cxx_destruct]
  -[PKDaemonClient findPlugInByUUID:reply:]
  -[PKDaemonClient findPlugInByPathURL:reply:]
  -[PKDaemonClient initWithServiceName:]
  -[PKDaemonClient request:]
  -[PKDaemonClient setReplyQueue:]
  -[PKDaemonClient replyQueue]
  -[PKDaemonClient protocolVersion]
  -[PKDaemonClient setProtocolVersion:]
  -[PKDaemonClient errorInReply:]
  -[PKDaemonClient convertFromXPC:]
  -[PKDaemonClient matchPlugIns:flags:uuid:reply:]
  -[PKDaemonClient accessPlugIns:synchronously:flags:reply:]
  -[PKDaemonClient readyPlugIns:synchronously:flags:environment:reply:]
  -[PKDaemonClient setPluginAnnotations:annotations:reply:]
  -[PKDaemonClient copyReceipt:]
  -[PKDaemonClient initWithServiceName:user:]
  -[PKDaemonClient setPkd:]
  -[PKDaemonClient request:paths:]
  -[PKDaemonClient send:reply:]
  -[PKDaemonClient set:plugins:]
  -[PKDaemonClient sendSynchronously:request:reply:]
  -[PKDaemonClient set:uuids:]
  -[PKDaemonClient addPlugIns:reply:]
  -[PKDaemonClient removePlugIns:reply:]
  -[PKDaemonClient bulkPlugins:reply:]
  -[PKDaemonClient bulkSetPluginAnnotations:reply:]
  -[PKDaemonClient holdPlugins:flags:reply:]
  -[PKDaemonClient releaseHold:flags:reply:]
  -[PKDaemonClient pkd]


PKBundle : NSObject /usr/lib/libSystem.B.dylib
 @property  NSObject<OS_xpc_object> *_bundle
 @property  NSURL *url
 @property  NSString *path
 @property  NSDictionary *infoDictionary
 @property  NSString *bundleIdentifier
 @property  NSString *supportPath
 @property  NSString *executablePath
 @property  NSString *plugInsPath

  // instance methods
  -[PKBundle initWithURL:]
  -[PKBundle .cxx_destruct]
  -[PKBundle path]
  -[PKBundle bundleIdentifier]
  -[PKBundle initWithPath:]
  -[PKBundle infoDictionary]
  -[PKBundle executablePath]
  -[PKBundle url]
  -[PKBundle _bundle]
  -[PKBundle initWithXPCBundle:]
  -[PKBundle initWithExecutablePath:]
  -[PKBundle set_bundle:]
  -[PKBundle stringProperty:]
  -[PKBundle supportPath]
  -[PKBundle bundleDirectory:]
  -[PKBundle initForMainBundle]
  -[PKBundle initWithExecutableURL:]
  -[PKBundle plugInsPath]


PKSandboxExtension : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *token
 @property  long long handle

  // instance methods
  -[PKSandboxExtension dealloc]
  -[PKSandboxExtension isEqual:]
  -[PKSandboxExtension token]
  -[PKSandboxExtension .cxx_destruct]
  -[PKSandboxExtension handle]
  -[PKSandboxExtension setHandle:]
  -[PKSandboxExtension setToken:]
  -[PKSandboxExtension consume]
  -[PKSandboxExtension initWithExtension:]
  -[PKSandboxExtension expel]


PKXPCObject : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSObject<OS_xpc_object> *object

  // class methods
  +[PKXPCObject supportsSecureCoding]
  +[PKXPCObject object:]

  // instance methods
  -[PKXPCObject object]
  -[PKXPCObject initWithObject:]
  -[PKXPCObject encodeWithCoder:]
  -[PKXPCObject initWithCoder:]
  -[PKXPCObject setObject:]
  -[PKXPCObject .cxx_destruct]


PKManager : NSObject /usr/lib/libSystem.B.dylib
 @property  PKDaemonClient *client

  // class methods
  +[PKManager defaultManager]
  +[PKManager managerForUser:]

  // instance methods
  -[PKManager .cxx_destruct]
  -[PKManager client]
  -[PKManager setClient:]
  -[PKManager initForService:]
  -[PKManager initForUser:]
  -[PKManager containingAppForExtensionProperties:]
  -[PKManager holdRequest:flags:result:]
  -[PKManager registerPlugInAtURL:result:]
  -[PKManager unregisterPlugInAtURL:result:]
  -[PKManager registerPlugInsInBundle:result:]
  -[PKManager unregisterPlugInsInBundle:result:]
  -[PKManager informationForPlugInWithPid:]
  -[PKManager containingAppForPlugInConnectedTo:]
  -[PKManager containingAppForPlugInWithPid:]
  -[PKManager holdPlugInsInApplication:result:]
  -[PKManager forceHoldPlugIn:result:]
  -[PKManager terminatePlugInsInApplication:options:result:]
  -[PKManager holdPlugInsInApplication:withError:]
  -[PKManager forceHoldPlugIn:withError:]
  -[PKManager terminatePlugInsInApplication:options:withError:]
  -[PKManager releaseHold:]
  -[PKManager releaseHold:reply:]
  -[PKManager releaseHold:withError:]
  -[PKManager updateExtensionStatesForPlugIns:result:]


NSMutableDictionary(PKMerge)
	// instance methods
	-[NSMutableDictionary(PKMerge) _mutableDictionaryAtKeyPath:]
	-[NSMutableDictionary(PKMerge) _overlayCustomValueAtKeyPath:intoTargetDictionary:fromSourceDictionary:handler:]
	-[NSMutableDictionary(PKMerge) _overlayValueAtKey:intoTargetDictionary:fromSourceDictionary:targetTakePrecedent:nestedDictionaryHandler:]
	-[NSMutableDictionary(PKMerge) _createOrConvertToMutableDictionaryFromDictionary:]
	-[NSMutableDictionary(PKMerge) pk_overlayDictionary:existingValuesTakePrecedent:exceptKeyPaths:exemptionHandler:]
	-[NSMutableDictionary(PKMerge) pk_removeItemsAtKeyPaths:]

NSArray(NSArrayBlockComprehension)
	// class methods
	+[NSArray(NSArrayBlockComprehension) arrayWithValues:inBlock:]

NSDictionary(SmallDictionaryChanges)
	// instance methods
	-[NSDictionary(SmallDictionaryChanges) dictionaryChanging:to:]

NSString(PKVersionComparison)
	// instance methods
	-[NSString(PKVersionComparison) compareVersionString:]

01 00 0700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSExtensionPoint 
01 00 0700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0400 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0300 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 0140 /System/Library/PrivateFrameworks/RunningBoardServices.framework/RunningBoardServices: RBSProcessHandle 
