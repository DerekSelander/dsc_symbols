|| __DATA.__objc_data _OBJC_CLASS_$_WFAdditionalSetupTableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_WFAirportViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFAssociationStateView
|| __DATA.__objc_data _OBJC_CLASS_$_WFBuddyNetworkListCell
|| __DATA.__objc_data _OBJC_CLASS_$_WFBuddyViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFCarPlayAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_WFChooseNetworkHeaderViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFDNSConfigViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFDiagnosticsContext
|| __DATA.__objc_data _OBJC_CLASS_$_WFDiagnosticsTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFDiagnosticsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFErrorAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_WFHealthIssue
|| __DATA.__objc_data _OBJC_CLASS_$_WFHotspotAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_WFHotspotDetails
|| __DATA.__objc_data _OBJC_CLASS_$_WFHotspotDetailsView
|| __DATA.__objc_data _OBJC_CLASS_$_WFHyperlinkFooterView
|| __DATA.__objc_data _OBJC_CLASS_$_WFIPConfigViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFIPViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFImageCache
|| __DATA.__objc_data _OBJC_CLASS_$_WFInsetTableViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFInsetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFKnownNetworkDetailsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFKnownNetworkGeoTagViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFKnownNetworkScoreViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFKnownNetworksStyle1TableViewCell
|| __DATA.__objc_data _OBJC_CLASS_$_WFKnownNetworksViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFNetworkSettingsCellFactory
|| __DATA.__objc_data _OBJC_CLASS_$_WFNetworkSettingsConfig
|| __DATA.__objc_data _OBJC_CLASS_$_WFNetworkSettingsViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFOtherNetworkViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFPickerViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFPrivacyIssue
|| __DATA.__objc_data _OBJC_CLASS_$_WFPromptAlertController
|| __DATA.__objc_data _OBJC_CLASS_$_WFProxyConfigViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFRecommendationCell
|| __DATA.__objc_data _OBJC_CLASS_$_WFRemoteWebSheetViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFRemoteWebSheetViewControllerErrorContext
|| __DATA.__objc_data _OBJC_CLASS_$_WFSegmentedCell
|| __DATA.__objc_data _OBJC_CLASS_$_WFTextFieldCell
|| __DATA.__objc_data _OBJC_CLASS_$_WFTrustCertificateViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFValueListViewController
|| __DATA.__objc_data _OBJC_CLASS_$_WFWebSheetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAdditionalSetupTableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAirportViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFAssociationStateView
|| __DATA.__objc_data _OBJC_METACLASS_$_WFBuddyNetworkListCell
|| __DATA.__objc_data _OBJC_METACLASS_$_WFBuddyViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFCarPlayAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFChooseNetworkHeaderViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFDNSConfigViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFDiagnosticsContext
|| __DATA.__objc_data _OBJC_METACLASS_$_WFDiagnosticsTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFDiagnosticsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFErrorAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFHealthIssue
|| __DATA.__objc_data _OBJC_METACLASS_$_WFHotspotAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFHotspotDetails
|| __DATA.__objc_data _OBJC_METACLASS_$_WFHotspotDetailsView
|| __DATA.__objc_data _OBJC_METACLASS_$_WFHyperlinkFooterView
|| __DATA.__objc_data _OBJC_METACLASS_$_WFIPConfigViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFIPViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFImageCache
|| __DATA.__objc_data _OBJC_METACLASS_$_WFInsetTableViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFInsetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFKnownNetworkDetailsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFKnownNetworkGeoTagViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFKnownNetworkScoreViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFKnownNetworksStyle1TableViewCell
|| __DATA.__objc_data _OBJC_METACLASS_$_WFKnownNetworksViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFNetworkSettingsCellFactory
|| __DATA.__objc_data _OBJC_METACLASS_$_WFNetworkSettingsConfig
|| __DATA.__objc_data _OBJC_METACLASS_$_WFNetworkSettingsViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFOtherNetworkViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFPickerViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFPrivacyIssue
|| __DATA.__objc_data _OBJC_METACLASS_$_WFPromptAlertController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFProxyConfigViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFRecommendationCell
|| __DATA.__objc_data _OBJC_METACLASS_$_WFRemoteWebSheetViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFRemoteWebSheetViewControllerErrorContext
|| __DATA.__objc_data _OBJC_METACLASS_$_WFSegmentedCell
|| __DATA.__objc_data _OBJC_METACLASS_$_WFTextFieldCell
|| __DATA.__objc_data _OBJC_METACLASS_$_WFTrustCertificateViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFValueListViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_WFWebSheetViewController
|| __DATA_CONST.__const _kWFAutoJoinCellIdentifier
|| __DATA_CONST.__const _kWFAutoLoginCellIdentifier
|| __DATA_CONST.__const _kWFCredentialsURLPath
|| __DATA_CONST.__const _kWFDNSCellIdentifier
|| __DATA_CONST.__const _kWFDNSChangesKey
|| __DATA_CONST.__const _kWFEnterpriseNetworkArchivePath
|| __DATA_CONST.__const _kWFForgetCellIdentifier
|| __DATA_CONST.__const _kWFIPv4ChangesKey
|| __DATA_CONST.__const _kWFIPv6ChangesKey
|| __DATA_CONST.__const _kWFImageBlueCheckmark
|| __DATA_CONST.__const _kWFImageCellularBars0
|| __DATA_CONST.__const _kWFImageCellularBars1
|| __DATA_CONST.__const _kWFImageCellularBars2
|| __DATA_CONST.__const _kWFImageCellularBars3
|| __DATA_CONST.__const _kWFImageCellularBars4
|| __DATA_CONST.__const _kWFImageLock
|| __DATA_CONST.__const _kWFImagePersonalHotspot
|| __DATA_CONST.__const _kWFImageWiFiBars0
|| __DATA_CONST.__const _kWFImageWiFiBars1
|| __DATA_CONST.__const _kWFImageWiFiBars2
|| __DATA_CONST.__const _kWFImageWiFiBars3
|| __DATA_CONST.__const _kWFImageWiFiBarsError
|| __DATA_CONST.__const _kWFJoinCellIdentifier
|| __DATA_CONST.__const _kWFJoinEnterprisePath
|| __DATA_CONST.__const _kWFKnownNetworkCellIdentifier
|| __DATA_CONST.__const _kWFKnownNetworkDetailScoreCellIdentifier
|| __DATA_CONST.__const _kWFKnownNetworkDetailsCellIdentifier
|| __DATA_CONST.__const _kWFKnownNetworkDetailsGeoTagMapPinIdentifier
|| __DATA_CONST.__const _kWFManageCellIdentifier
|| __DATA_CONST.__const _kWFNetworkPriorityChangesKeys
|| __DATA_CONST.__const _kWFPriorityCellIdentifier
|| __DATA_CONST.__const _kWFProxyChangesKey
|| __DATA_CONST.__const _kWFRandomMACInfoCellIdentifier
|| __DATA_CONST.__const _kWFRandomMACSwitchCellIdentifier
|| __DATA_CONST.__const _kWFRecommendationCellIdentifier
|| __DATA_CONST.__const _kWFSaveDataModeCellIdentifier
|| __DATA_CONST.__const _kWFSegmentedCellIdentifier
|| __DATA_CONST.__const _kWFTextFieldCellIdentifier
|| __DATA_CONST.__const _kWFTrustEnterpriseURLPath
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFHotspotCell
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_WFNetworkListCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFHotspotCell
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_WFNetworkListCell
|| __TEXT.__const _WiFiKitUIVersionNumber
|| __TEXT.__const _WiFiKitUIVersionString
|| __TEXT.__text _OSLogForWFLogLevel
|| __TEXT.__text _WFAllIdentities
|| __TEXT.__text _WFBase64Encode
|| __TEXT.__text _WFCapabilityIsChinaDevice
|| __TEXT.__text _WFCompareSecurityModeExt
|| __TEXT.__text _WFConvertEthernetNetworkAddressToString
|| __TEXT.__text _WFCopyProcessIdentifier
|| __TEXT.__text _WFCreateSecTrustFromCertificateChain
|| __TEXT.__text _WFCurrentDeviceCapability
|| __TEXT.__text _WFCurrentLogLevel
|| __TEXT.__text _WFDescriptionFromIdentity
|| __TEXT.__text _WFDetermineNetworkCipherTypeObsolete
|| __TEXT.__text _WFGetCarNameFromCarPlayNetworkUUID
|| __TEXT.__text _WFHasWAPICapability
|| __TEXT.__text _WFIsGreenTeaDevice
|| __TEXT.__text _WFIsSecurityModeMatch
|| __TEXT.__text _WFIsValidIPv4Address
|| __TEXT.__text _WFIsValidIPv6Address
|| __TEXT.__text _WFIsWAPINotAvailable
|| __TEXT.__text _WFLogForCategory
|| __TEXT.__text _WFManagedConfigurationUIClassFromString
|| __TEXT.__text _WFOpenSettingsURLWithType
|| __TEXT.__text _WFSSIDIsValid
|| __TEXT.__text _WFScaleRSSI
|| __TEXT.__text _WFScanRecordAlphaSortCompartor
|| __TEXT.__text _WFScanRecordArchiveToEnterprisePath
|| __TEXT.__text _WFScanRecordDefaultSortCompartor
|| __TEXT.__text _WFSecurityModeExtIsWPAEnterprise
|| __TEXT.__text _WFSecurityModeExtIsWPAPersonal
|| __TEXT.__text _WFSecurityModeFromScanDictionary
|| __TEXT.__text _WFSecurityModeIsEnterprise
|| __TEXT.__text _WFSecurityModeIsEquivalentEAPEncryption
|| __TEXT.__text _WFSecurityModeIsEquivalentWPA
|| __TEXT.__text _WFSecurityModeIsWPAEnterprise
|| __TEXT.__text _WFSecurityModeIsWPAPersonal
|| __TEXT.__text _WFSecurityModeRequiresPasswordOnly
|| __TEXT.__text _WFSecurityTypeRequiresPassword
|| __TEXT.__text _WFSecurityTypeRequiresUsername
|| __TEXT.__text _WFSetExtraLoggingEnabled
|| __TEXT.__text _WFSettingsURLPathForType
|| __TEXT.__text _WFSignalBarsFromScaledRSSI
|| __TEXT.__text _WFStringFromDeviceCapability
|| __TEXT.__text _WFStringFromWFSecurityMode
|| __TEXT.__text _WFStringFromWFSecurityModeExt
|| __TEXT.__text _WFUserNameFromEnterpriseProfile
|| __TEXT.__text _WFValidPasswordForSecurityMode
|| __TEXT.__text _WFWAPICertificateBlobString
|| __TEXT.__text _WFWAPIIdentityListCreate
|| __TEXT.__text _WFWAPIRootCertificateListCreate
|| __TEXT.__text _WFWiFiSecurityModeFromOtherSecurityMode
|| __TEXT.__text _WFWiFiTitleString
|| __TEXT.__text __WFNetworkUsesSecurityCiphers
|| __TEXT.__text __WFOpenSettingsPathWithPathType
__ CarKit: _OBJC_CLASS_$_CRPairedVehicleManager
__ CertInfo: _OBJC_CLASS_$_TrustCertificateViewController
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFPropertyListCreateWithData
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFStringCreateWithFormat
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFRunLoopDefaultMode
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ Foundation: _NSClassFromString
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantDoubleNumber
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: __NSDictionaryOfVariableBindings
__ MapKit: _OBJC_CLASS_$_MKMapView
__ MapKit: _OBJC_CLASS_$_MKPinAnnotationView
__ MapKit: _OBJC_CLASS_$_MKPointAnnotation
__ MobileWiFi: _WiFiDeviceClientCopyCurrentNetwork
__ MobileWiFi: _WiFiDeviceClientRegisterDiagnosticsCallback
__ MobileWiFi: _WiFiManagerClientCopyDevices
__ MobileWiFi: _WiFiManagerClientCreate
__ MobileWiFi: _WiFiManagerClientScheduleWithRunLoop
__ MobileWiFi: _WiFiManagerClientUnscheduleFromRunLoop
__ MobileWiFi: _WiFiNetworkArchiveToPath
__ MobileWiFi: _WiFiNetworkCreate
__ MobileWiFi: _WiFiNetworkGetAPEnv
__ MobileWiFi: _WiFiNetworkGetChannelWidthInMHz
__ MobileWiFi: _WiFiNetworkGetProperty
__ MobileWiFi: _kWiFiDeviceScanRequestClientName
__ MobileWiFi: _kWiFiDeviceScanRequestReceiptTimestamp
__ MobileWiFi: _kWiFiDiagnosticsKeyAWDL
__ MobileWiFi: _kWiFiDiagnosticsKeyBluetooth
__ MobileWiFi: _kWiFiDiagnosticsKeyLQM
__ MobileWiFi: _kWiFiDiagnosticsKeyMotion
__ MobileWiFi: _kWiFiDiagnosticsKeyProbeGateway
__ MobileWiFi: _kWiFiDiagnosticsKeyProbeInternet
__ MobileWiFi: _kWiFiDiagnosticsKeyScan
__ MobileWiFi: _kWiFiDiagnosticsKeyScanDone
__ OnBoardingKit: _OBJC_CLASS_$_OBAnimationController
__ OnBoardingKit: _OBJC_CLASS_$_OBAnimationState
__ OnBoardingKit: _OBJC_CLASS_$_OBTableWelcomeController
__ OnBoardingKit: _OBJC_METACLASS_$_OBTableWelcomeController
__ Preferences: _OBJC_CLASS_$_PSSpecifier
__ Security: _SecCertificateCopyData
__ Security: _SecCertificateCopySubjectSummary
__ Security: _SecCertificateCreateWithData
__ Security: _SecCertificateGetTypeID
__ Security: _SecIdentityCopyCertificate
__ Security: _SecIdentityGetTypeID
__ Security: _SecItemCopyMatching
__ Security: _SecTrustCreateWithCertificates
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrService
__ Security: _kSecClass
__ Security: _kSecClassCertificate
__ Security: _kSecClassGenericPassword
__ Security: _kSecClassIdentity
__ Security: _kSecMatchLimit
__ Security: _kSecMatchLimitAll
__ Security: _kSecReturnData
__ Security: _kSecReturnRef
__ Security: _kSecUseSystemKeychain
__ SetupAssistantUI: _OBJC_CLASS_$_BFFStyle
__ UIKit: _NSFontAttributeName
__ UIKit: _NSForegroundColorAttributeName
__ UIKit: _NSKernAttributeName
__ UIKit: _NSLinkAttributeName
__ UIKit: _NSStringFromUIEdgeInsets
__ UIKit: _NSUnderlineStyleAttributeName
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageSymbolConfiguration
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UIKeyboard
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UINib
__ UIKit: _OBJC_CLASS_$_UIPasteboard
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIStackView
__ UIKit: _OBJC_CLASS_$_UISwitch
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITableViewCell
__ UIKit: _OBJC_CLASS_$_UITableViewController
__ UIKit: _OBJC_CLASS_$_UITableViewHeaderFooterView
__ UIKit: _OBJC_CLASS_$_UITextView
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$__UIBatteryView
__ UIKit: _OBJC_CLASS_$__UIRemoteViewController
__ UIKit: _OBJC_METACLASS_$_UIAlertController
__ UIKit: _OBJC_METACLASS_$_UIStackView
__ UIKit: _OBJC_METACLASS_$_UITableViewCell
__ UIKit: _OBJC_METACLASS_$_UITableViewController
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$__UIRemoteViewController
__ UIKit: _UIApp
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityExtraLarge
__ UIKit: _UIContentSizeCategoryAccessibilityLarge
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIContentSizeCategoryExtraExtraExtraLarge
__ UIKit: _UIDeviceOrientationDidChangeNotification
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleFootnote
__ UIKit: _UIFontWeightMedium
__ UIKit: _UIFontWeightRegular
__ UIKit: _UIFontWeightTrait
__ UIKit: _UIKeyboardDidShowNotification
__ UIKit: _UIKeyboardWillShowNotification
__ UIKit: _UILayoutFittingCompressedSize
__ UIKit: _UITableViewAutomaticDimension
__ UIKit: _UITextContentTypePassword
__ UIKit: _UITextContentTypeUsername
__ UIKit: __UIViewServiceErrorDomain
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _MGGetProductType
__ libMobileGestalt.dylib: _MGGetStringAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _inet_pton
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
WFDiagnosticsContext : NSObject /usr/lib/libSystem.B.dylib <WFDiagnosticsProviderContext>
 @property  WFNetworkScanRecord *network
 @property  WFNetworkProfile *profile
 @property  ^{__WiFiManagerClient=} manager
 @property  ^{__WiFiDeviceClient=} device
 @property  @? refreshHandler
 @property  NSString *security
 @property  NSString *securityAdvice
 @property  NSString *BSSID
 @property  NSNumber *channel
 @property  NSString *channelString
 @property  NSString *channelWidth
 @property  NSString *channelPerformance
 @property  NSString *rssi
 @property  NSString *cca
 @property  NSString *adviceString
 @property  NSString *beaconPER
 @property  NSString *transmitPER
 @property  NSString *recvFrames
 @property  NSString *rssiPerformance
 @property  BOOL captive
 @property  BOOL managed
 @property  BOOL multiAP
 @property  NSString *deployment
 @property  NSString *motion
 @property  NSString *gateway
 @property  NSString *internet
 @property  NSString *probeFooter
 @property  NSString *awdl
 @property  NSString *bluetooth
 @property  NSString *scan
 @property  NSString *coexFooter
 @property  long long requestedFields
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFDiagnosticsContext managed]
  -[WFDiagnosticsContext cca]
  -[WFDiagnosticsContext BSSID]
  -[WFDiagnosticsContext network]
  -[WFDiagnosticsContext motion]
  -[WFDiagnosticsContext gateway]
  -[WFDiagnosticsContext device]
  -[WFDiagnosticsContext setNetwork:]
  -[WFDiagnosticsContext channel]
  -[WFDiagnosticsContext scan]
  -[WFDiagnosticsContext refreshHandler]
  -[WFDiagnosticsContext .cxx_destruct]
  -[WFDiagnosticsContext requestedFields]
  -[WFDiagnosticsContext rssi]
  -[WFDiagnosticsContext cancel]
  -[WFDiagnosticsContext manager]
  -[WFDiagnosticsContext setDevice:]
  -[WFDiagnosticsContext security]
  -[WFDiagnosticsContext setRefreshHandler:]
  -[WFDiagnosticsContext setManager:]
  -[WFDiagnosticsContext channelWidth]
  -[WFDiagnosticsContext captive]
  -[WFDiagnosticsContext multiAP]
  -[WFDiagnosticsContext profile]
  -[WFDiagnosticsContext bluetooth]
  -[WFDiagnosticsContext setProfile:]
  -[WFDiagnosticsContext awdl]
  -[WFDiagnosticsContext securityAdvice]
  -[WFDiagnosticsContext channelString]
  -[WFDiagnosticsContext channelPerformance]
  -[WFDiagnosticsContext adviceString]
  -[WFDiagnosticsContext beaconPER]
  -[WFDiagnosticsContext transmitPER]
  -[WFDiagnosticsContext recvFrames]
  -[WFDiagnosticsContext rssiPerformance]
  -[WFDiagnosticsContext deployment]
  -[WFDiagnosticsContext internet]
  -[WFDiagnosticsContext probeFooter]
  -[WFDiagnosticsContext coexFooter]
  -[WFDiagnosticsContext initWithNetwork:profile:]
  -[WFDiagnosticsContext updateInfo:]


WFPromptAlertController : UIAlertController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  @? completionHandler

  // class methods
  +[WFPromptAlertController promptAlertControllerWithTitle:message:cancelTitle:successTitle:completionHandler:]

  // instance methods
  -[WFPromptAlertController .cxx_destruct]
  -[WFPromptAlertController completionHandler]
  -[WFPromptAlertController setCompletionHandler:]


WFHotspotAlertController : WFPromptAlertController
  // class methods
  +[WFHotspotAlertController hotspotAlertControllerWithNetworkName:completionHandler:]


WFCarPlayAlertController : WFPromptAlertController
  // class methods
  +[WFCarPlayAlertController carPlayAlertControllerWithNetworkName:carName:completionHandler:]


WFErrorAlertController : UIAlertController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <WFNetworkView>
 @property  <WFErrorProviderContext> *context
 @property  BOOL wantsModalPresentation

  // class methods
  +[WFErrorAlertController errorAlertControllerWithContext:]

  // instance methods
  -[WFErrorAlertController context]
  -[WFErrorAlertController .cxx_destruct]
  -[WFErrorAlertController setContext:]
  -[WFErrorAlertController _canShowWhileLocked]


WFAirportViewController : WFInsetViewController <UITableViewDataSource, UITableViewDelegate, WFNetworkListing>
 @property  NSString *powerOffLocationWarning
 @property  NSString *userAutoJoinDisabledWarning
 @property  BOOL showDiagnostics
 @property  BOOL showKnownNetworks
 @property  NSOrderedSet *sections
 @property  NSSet *allNetworks
 @property  NSArray *infraNetworks
 @property  NSArray *popularNetworks
 @property  NSArray *knownNetworks
 @property  NSArray *adhocNetworks
 @property  NSArray *unconfiguredNetworks
 @property  WFChooseNetworkHeaderViewController *chooseNetworkHeader
 @property  WFChooseNetworkHeaderViewController *knownNetworkHeader
 @property  WFChooseNetworkHeaderViewController *publicNetworkHeader
 @property  <WFAirportViewControllerDelegate> *listDelegate
 @property  NSObject<OS_dispatch_queue> *internalQueue
 @property  <WFNetworkListRecord> *joiningHotspot
 @property  <WFNetworkListRecord> *joiningNetwork
 @property  BOOL askToJoinShown
 @property  BOOL disablePowerModification
 @property  BOOL isManagedAppleID
 @property  BOOL tableViewIsUpdating
 @property  BOOL networkResultsChangedWhileUIUpdates
 @property  NSSet *pendingNetworks
 @property  NSString *currentKnownHeaderText
 @property  NSString *currentInfraHeaderText
 @property  UITableView *tableView
 @property  BOOL coreWiFiEnabled
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL showOtherNetwork
 @property  float currentNetworkScaledRSSI
 @property  <WFNetworkListRecord> *currentNetwork
 @property  long long currentNetworkState
 @property  unsigned long currentNetworkSignalBars
 @property  long long deviceCapability
 @property  NSString *currentNetworkSubtitle
 @property  BOOL disabled
 @property  BOOL userAutoJoinEnabled

  // instance methods
  -[WFAirportViewController viewDidLoad]
  -[WFAirportViewController refresh]
  -[WFAirportViewController tableView:viewForHeaderInSection:]
  -[WFAirportViewController tableView:heightForHeaderInSection:]
  -[WFAirportViewController internalQueue]
  -[WFAirportViewController setInternalQueue:]
  -[WFAirportViewController disabled]
  -[WFAirportViewController setDisabled:]
  -[WFAirportViewController setSections:]
  -[WFAirportViewController setNetworks:]
  -[WFAirportViewController init]
  -[WFAirportViewController setScanning:]
  -[WFAirportViewController tableView:numberOfRowsInSection:]
  -[WFAirportViewController tableView:didSelectRowAtIndexPath:]
  -[WFAirportViewController powered]
  -[WFAirportViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[WFAirportViewController .cxx_destruct]
  -[WFAirportViewController setCoreWiFiEnabled:]
  -[WFAirportViewController setCurrentNetwork:]
  -[WFAirportViewController tableView:titleForHeaderInSection:]
  -[WFAirportViewController tableView:cellForRowAtIndexPath:]
  -[WFAirportViewController setAskToJoinMode:]
  -[WFAirportViewController numberOfSectionsInTableView:]
  -[WFAirportViewController setAutoInstantHotspotJoinOption:]
  -[WFAirportViewController listDelegate]
  -[WFAirportViewController setListDelegate:]
  -[WFAirportViewController sections]
  -[WFAirportViewController isManagedAppleID]
  -[WFAirportViewController viewWillAppear:]
  -[WFAirportViewController tableView:titleForFooterInSection:]
  -[WFAirportViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[WFAirportViewController viewDidDisappear:]
  -[WFAirportViewController currentNetwork]
  -[WFAirportViewController loadView]
  -[WFAirportViewController knownNetworks]
  -[WFAirportViewController powerStateDidChange:]
  -[WFAirportViewController setKnownNetworks:]
  -[WFAirportViewController deviceCapability]
  -[WFAirportViewController setDeviceCapability:]
  -[WFAirportViewController setShowOtherNetwork:]
  -[WFAirportViewController currentNetworkSubtitle]
  -[WFAirportViewController powerModificationStateDidChange:]
  -[WFAirportViewController managedAppleIDStateChange:]
  -[WFAirportViewController setCurrentNetwork:previousNetwork:reason:]
  -[WFAirportViewController setCurrentNetworkSubtitle:]
  -[WFAirportViewController setCurrentNetworkScaledRSSI:]
  -[WFAirportViewController setCurrentNetworkState:]
  -[WFAirportViewController supportsWiFiPasswordSharing]
  -[WFAirportViewController shouldPromptWhenPersonalHotspotIsEnabled]
  -[WFAirportViewController shouldPromptWhenCarPlaySessionIsActive]
  -[WFAirportViewController supportsHealthRecommendations]
  -[WFAirportViewController coreWiFiEnabled]
  -[WFAirportViewController currentNetworkState]
  -[WFAirportViewController setEnableCoreWiFi:]
  -[WFAirportViewController updateViewsForNetworks:]
  -[WFAirportViewController reloadCellsForNetworkNames:]
  -[WFAirportViewController setUserAutoJoinEnabled:]
  -[WFAirportViewController _askToJoinMode]
  -[WFAirportViewController popularNetworks]
  -[WFAirportViewController adhocNetworks]
  -[WFAirportViewController unconfiguredNetworks]
  -[WFAirportViewController _askToJoinShouldBeVisible]
  -[WFAirportViewController _defaultSectionsForPowerState:]
  -[WFAirportViewController setShowDiagnostics:]
  -[WFAirportViewController setShowKnownNetworks:]
  -[WFAirportViewController showKnownNetworks]
  -[WFAirportViewController _updateNetworkRestrictionHeader]
  -[WFAirportViewController joiningHotspot]
  -[WFAirportViewController _reloadSectionForHotspotChange]
  -[WFAirportViewController _currentNetworkCell]
  -[WFAirportViewController setJoiningHotspot:]
  -[WFAirportViewController _refreshATJShownStateIfChanged]
  -[WFAirportViewController infraNetworks]
  -[WFAirportViewController _nameOfSection:]
  -[WFAirportViewController pendingNetworks]
  -[WFAirportViewController _updateCellsWithNewData:oldData:inSection:insertSection:datasourceSection:]
  -[WFAirportViewController _dumpSections]
  -[WFAirportViewController showDiagnostics]
  -[WFAirportViewController askToJoinShown]
  -[WFAirportViewController chooseNetworkHeader]
  -[WFAirportViewController setAllNetworks:]
  -[WFAirportViewController _sectionNameAtIndex:]
  -[WFAirportViewController _shouldContinueUpdateNetworkList]
  -[WFAirportViewController _reloadPowerSection]
  -[WFAirportViewController _indexPathForNetworkName:]
  -[WFAirportViewController setInfraNetworks:]
  -[WFAirportViewController _askToJoinStateStringForATJMode:]
  -[WFAirportViewController _getAutoHotspotOptionText:]
  -[WFAirportViewController _sectionTypeAtSection:]
  -[WFAirportViewController _isChinaDevice]
  -[WFAirportViewController _powerSwitchChanged:]
  -[WFAirportViewController disablePowerModification]
  -[WFAirportViewController _cellLayoutMargins]
  -[WFAirportViewController _tableCellForNetwork:tableView:indexPath:]
  -[WFAirportViewController _enableWAPISwitchChanged:]
  -[WFAirportViewController _coreWiFiSwitchChanged:]
  -[WFAirportViewController powerOffLocationWarning]
  -[WFAirportViewController userAutoJoinEnabled]
  -[WFAirportViewController userAutoJoinDisabledWarning]
  -[WFAirportViewController _askToJoinFooterString]
  -[WFAirportViewController knownNetworkHeader]
  -[WFAirportViewController publicNetworkHeader]
  -[WFAirportViewController _promptToJoinAdhoc:]
  -[WFAirportViewController updateAutoInstantHotspotSetting:]
  -[WFAirportViewController _askToJoinModeFromString:]
  -[WFAirportViewController _updateAskToJoinMode:]
  -[WFAirportViewController _askToJoinFooterStringForMode:]
  -[WFAirportViewController _currentNetworkCellIndexPath]
  -[WFAirportViewController showOtherNetwork]
  -[WFAirportViewController currentNetworkScaledRSSI]
  -[WFAirportViewController setAskToJoinShown:]
  -[WFAirportViewController setDisablePowerModification:]
  -[WFAirportViewController setIsManagedAppleID:]
  -[WFAirportViewController setPowerOffLocationWarning:]
  -[WFAirportViewController setUserAutoJoinDisabledWarning:]
  -[WFAirportViewController allNetworks]
  -[WFAirportViewController setPopularNetworks:]
  -[WFAirportViewController setAdhocNetworks:]
  -[WFAirportViewController setUnconfiguredNetworks:]
  -[WFAirportViewController setChooseNetworkHeader:]
  -[WFAirportViewController setKnownNetworkHeader:]
  -[WFAirportViewController setPublicNetworkHeader:]
  -[WFAirportViewController joiningNetwork]
  -[WFAirportViewController setJoiningNetwork:]
  -[WFAirportViewController tableViewIsUpdating]
  -[WFAirportViewController setTableViewIsUpdating:]
  -[WFAirportViewController networkResultsChangedWhileUIUpdates]
  -[WFAirportViewController setNetworkResultsChangedWhileUIUpdates:]
  -[WFAirportViewController setPendingNetworks:]
  -[WFAirportViewController currentKnownHeaderText]
  -[WFAirportViewController setCurrentKnownHeaderText:]
  -[WFAirportViewController currentInfraHeaderText]
  -[WFAirportViewController setCurrentInfraHeaderText:]


WFHealthIssue : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *issueShortTitle
 @property  NSString *issueTitle
 @property  NSString *issueDescription
 @property  NSString *issueRecommendation
 @property  unsigned long type
 @property  unsigned long category
 @property  BOOL chinaDevice
 @property  NSString *issueDetailText
 @property  BOOL overrideIssue

  // class methods
  +[WFHealthIssue issueWithType:]

  // instance methods
  -[WFHealthIssue category]
  -[WFHealthIssue setType:]
  -[WFHealthIssue initWithType:]
  -[WFHealthIssue .cxx_destruct]
  -[WFHealthIssue setIssueDescription:]
  -[WFHealthIssue type]
  -[WFHealthIssue descriptionForType:]
  -[WFHealthIssue isEqual:]
  -[WFHealthIssue categoryForType:]
  -[WFHealthIssue setCategory:]
  -[WFHealthIssue issueDescription]
  -[WFHealthIssue setOverrideIssue:]
  -[WFHealthIssue issueShortTitle]
  -[WFHealthIssue issueRecommendation]
  -[WFHealthIssue titleForType:]
  -[WFHealthIssue shortTitleForType:]
  -[WFHealthIssue recommendationForType:]
  -[WFHealthIssue isEqualToHealthIssue:]
  -[WFHealthIssue overrideIssue]
  -[WFHealthIssue issueTitle]
  -[WFHealthIssue issueDetailText]
  -[WFHealthIssue setIssueShortTitle:]
  -[WFHealthIssue setIssueTitle:]
  -[WFHealthIssue setIssueRecommendation:]
  -[WFHealthIssue chinaDevice]
  -[WFHealthIssue setChinaDevice:]


WFDiagnosticsTableViewController : WFInsetTableViewController
 @property  <WFDiagnosticsProviderContext> *context
 @property  NSOrderedSet *sections
 @property  WFNetworkSettingsCellFactory *cellFactory
 @property  WFHyperlinkFooterView *linkFooterView
 @property  BOOL useInsetGroupedTableView

  // instance methods
  -[WFDiagnosticsTableViewController viewDidLoad]
  -[WFDiagnosticsTableViewController context]
  -[WFDiagnosticsTableViewController setSections:]
  -[WFDiagnosticsTableViewController _refresh]
  -[WFDiagnosticsTableViewController tableView:numberOfRowsInSection:]
  -[WFDiagnosticsTableViewController tableView:viewForFooterInSection:]
  -[WFDiagnosticsTableViewController .cxx_destruct]
  -[WFDiagnosticsTableViewController tableView:titleForHeaderInSection:]
  -[WFDiagnosticsTableViewController linkFooterView]
  -[WFDiagnosticsTableViewController tableView:cellForRowAtIndexPath:]
  -[WFDiagnosticsTableViewController setContext:]
  -[WFDiagnosticsTableViewController numberOfSectionsInTableView:]
  -[WFDiagnosticsTableViewController sections]
  -[WFDiagnosticsTableViewController tableView:titleForFooterInSection:]
  -[WFDiagnosticsTableViewController viewDidDisappear:]
  -[WFDiagnosticsTableViewController initWithDiagnosticsContext:useInsetGroupedTableView:]
  -[WFDiagnosticsTableViewController _defaultSections]
  -[WFDiagnosticsTableViewController setCellFactory:]
  -[WFDiagnosticsTableViewController cellFactory]
  -[WFDiagnosticsTableViewController useInsetGroupedTableView]
  -[WFDiagnosticsTableViewController initWithDiagnosticsContext:]
  -[WFDiagnosticsTableViewController setLinkFooterView:]
  -[WFDiagnosticsTableViewController setUseInsetGroupedTableView:]


WFKnownNetworkScoreViewController : UITableViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  NSDictionary *score

  // instance methods
  -[WFKnownNetworkScoreViewController viewDidLoad]
  -[WFKnownNetworkScoreViewController setScore:]
  -[WFKnownNetworkScoreViewController tableView:numberOfRowsInSection:]
  -[WFKnownNetworkScoreViewController .cxx_destruct]
  -[WFKnownNetworkScoreViewController tableView:cellForRowAtIndexPath:]
  -[WFKnownNetworkScoreViewController numberOfSectionsInTableView:]
  -[WFKnownNetworkScoreViewController score]


WFNetworkSettingsCellFactory : NSObject /usr/lib/libSystem.B.dylib
 @property  UITableView *tableView

  // instance methods
  -[WFNetworkSettingsCellFactory initWithTableView:]
  -[WFNetworkSettingsCellFactory setTableView:]
  -[WFNetworkSettingsCellFactory tableView]
  -[WFNetworkSettingsCellFactory .cxx_destruct]
  -[WFNetworkSettingsCellFactory _registerCells]
  -[WFNetworkSettingsCellFactory segmentedCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory recommendationCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory joinCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory forgetCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory manageCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory priorityCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory autoJoinCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory autoLoginCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory saveDataModeCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory randomMACCellAtIndexPath:shouldShowSwitch:]
  -[WFNetworkSettingsCellFactory ipv4AddressConfigCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory ipv4AddressCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory ipv4SubnetMaskCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory ipv4RouterCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory dhcpClientIDCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory renewLeaseCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory ipv6AddressConfigCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory ipv6AddressCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory ipv6RouterCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory dnsConfigureCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory httpProxyConfigCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory dnsSearchDomainsCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory dnsServerAddressesCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory ipv4AddressTextCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory ipv4SubnetMaskTextCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory ipv4RouterTextCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory dhcpClientIDTextCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory httpProxyURLTextCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory httpProxyServerTextCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory httpProxyPortTextCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory httpProxyUserTextCellAtIndexPath:]
  -[WFNetworkSettingsCellFactory httpProxyPasswordTextCellAtIndexPath:]


WFNetworkSettingsConfig : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *ssid
 @property  BOOL current
 @property  BOOL forgetable
 @property  BOOL joinable
 @property  BOOL manageable
 @property  BOOL cloudSyncable
 @property  BOOL canRenewLease
 @property  BOOL diagnosable
 @property  BOOL autoJoinConfigurable
 @property  BOOL autoJoinEnabled
 @property  BOOL autoLoginConfigurable
 @property  BOOL autoLoginEnabled
 @property  BOOL saveDataModeConfigurable
 @property  BOOL isInSaveDataMode
 @property  NSArray *healthRecommendations
 @property  long long ipv4Config
 @property  NSString *ipv4Address
 @property  NSString *ipv4AddressManual
 @property  NSString *ipv4SubnetMask
 @property  NSString *ipv4SubnetMaskManual
 @property  NSString *ipv4RouterAddress
 @property  NSString *ipv4RouterAddressManual
 @property  NSString *dhcpClientID
 @property  NSDate *dhcpLeaseExpirationDate
 @property  long long ipv6Config
 @property  NSArray *ipv6Addresses
 @property  NSArray *ipv6PrefixLengths
 @property  NSString *ipv6AddressManual
 @property  NSString *ipv6RouterAddress
 @property  NSString *ipv6RouterAddressManual
 @property  NSString *ipv6PrefixLengthManual
 @property  long long dnsConfig
 @property  NSArray *dnsServerAddresses
 @property  NSArray *dnsSeverAddresses
 @property  NSArray *dnsSearchDomains
 @property  BOOL httpProxyConfigurable
 @property  long long httpProxyConfig
 @property  NSString *httpProxyServerAddress
 @property  NSString *httpProxyServerPort
 @property  BOOL httpProxyAuthenticationRequired
 @property  NSString *httpProxyUsername
 @property  NSString *httpProxyPassword
 @property  NSString *httpProxyConfigPAC

  // instance methods
  -[WFNetworkSettingsConfig copyWithZone:]
  -[WFNetworkSettingsConfig httpProxyUsername]
  -[WFNetworkSettingsConfig setSsid:]
  -[WFNetworkSettingsConfig ssid]
  -[WFNetworkSettingsConfig init]
  -[WFNetworkSettingsConfig setAutoJoinEnabled:]
  -[WFNetworkSettingsConfig .cxx_destruct]
  -[WFNetworkSettingsConfig dnsServerAddresses]
  -[WFNetworkSettingsConfig setDnsServerAddresses:]
  -[WFNetworkSettingsConfig ipv6Addresses]
  -[WFNetworkSettingsConfig dnsSearchDomains]
  -[WFNetworkSettingsConfig setIpv4SubnetMask:]
  -[WFNetworkSettingsConfig ipv4SubnetMask]
  -[WFNetworkSettingsConfig isEqual:]
  -[WFNetworkSettingsConfig ipv6PrefixLengths]
  -[WFNetworkSettingsConfig ipv4Address]
  -[WFNetworkSettingsConfig current]
  -[WFNetworkSettingsConfig setCurrent:]
  -[WFNetworkSettingsConfig setIpv6Addresses:]
  -[WFNetworkSettingsConfig setIpv4Address:]
  -[WFNetworkSettingsConfig setIpv4Config:]
  -[WFNetworkSettingsConfig setIpv4AddressManual:]
  -[WFNetworkSettingsConfig setIpv4SubnetMaskManual:]
  -[WFNetworkSettingsConfig setIpv4RouterAddressManual:]
  -[WFNetworkSettingsConfig setIpv4RouterAddress:]
  -[WFNetworkSettingsConfig dhcpClientID]
  -[WFNetworkSettingsConfig setDhcpClientID:]
  -[WFNetworkSettingsConfig setIpv6Config:]
  -[WFNetworkSettingsConfig setIpv6RouterAddress:]
  -[WFNetworkSettingsConfig setDnsSearchDomains:]
  -[WFNetworkSettingsConfig setHttpProxyServerAddress:]
  -[WFNetworkSettingsConfig setHttpProxyServerPort:]
  -[WFNetworkSettingsConfig setHttpProxyUsername:]
  -[WFNetworkSettingsConfig setHttpProxyPassword:]
  -[WFNetworkSettingsConfig setHttpProxyAuthenticationRequired:]
  -[WFNetworkSettingsConfig setHttpProxyConfigPAC:]
  -[WFNetworkSettingsConfig setAutoLoginEnabled:]
  -[WFNetworkSettingsConfig isInSaveDataMode]
  -[WFNetworkSettingsConfig setIsInSaveDataMode:]
  -[WFNetworkSettingsConfig forgetable]
  -[WFNetworkSettingsConfig autoLoginConfigurable]
  -[WFNetworkSettingsConfig autoJoinConfigurable]
  -[WFNetworkSettingsConfig saveDataModeConfigurable]
  -[WFNetworkSettingsConfig healthRecommendations]
  -[WFNetworkSettingsConfig setDiagnosable:]
  -[WFNetworkSettingsConfig diagnosable]
  -[WFNetworkSettingsConfig autoJoinEnabled]
  -[WFNetworkSettingsConfig autoLoginEnabled]
  -[WFNetworkSettingsConfig setHttpProxyConfigurable:]
  -[WFNetworkSettingsConfig setHealthRecommendations:]
  -[WFNetworkSettingsConfig setForgetable:]
  -[WFNetworkSettingsConfig setJoinable:]
  -[WFNetworkSettingsConfig setCanRenewLease:]
  -[WFNetworkSettingsConfig setAutoJoinConfigurable:]
  -[WFNetworkSettingsConfig setAutoLoginConfigurable:]
  -[WFNetworkSettingsConfig setSaveDataModeConfigurable:]
  -[WFNetworkSettingsConfig setManageable:]
  -[WFNetworkSettingsConfig manageable]
  -[WFNetworkSettingsConfig setCloudSyncable:]
  -[WFNetworkSettingsConfig cloudSyncable]
  -[WFNetworkSettingsConfig ipv4RouterAddress]
  -[WFNetworkSettingsConfig setDhcpLeaseExpirationDate:]
  -[WFNetworkSettingsConfig setIpv6AddressManual:]
  -[WFNetworkSettingsConfig setIpv6RouterAddressManual:]
  -[WFNetworkSettingsConfig setIpv6PrefixLengthManual:]
  -[WFNetworkSettingsConfig setIpv6PrefixLengths:]
  -[WFNetworkSettingsConfig ipv6RouterAddress]
  -[WFNetworkSettingsConfig dnsConfig]
  -[WFNetworkSettingsConfig setDnsConfig:]
  -[WFNetworkSettingsConfig httpProxyAuthenticationRequired]
  -[WFNetworkSettingsConfig httpProxyPassword]
  -[WFNetworkSettingsConfig setHttpProxyConfig:]
  -[WFNetworkSettingsConfig changesBetweenConfig:]
  -[WFNetworkSettingsConfig validIPv4Configuration]
  -[WFNetworkSettingsConfig ipv4Config]
  -[WFNetworkSettingsConfig ipv4AddressManual]
  -[WFNetworkSettingsConfig ipv4SubnetMaskManual]
  -[WFNetworkSettingsConfig ipv4RouterAddressManual]
  -[WFNetworkSettingsConfig validIPv6Configuration]
  -[WFNetworkSettingsConfig ipv6Config]
  -[WFNetworkSettingsConfig ipv6AddressManual]
  -[WFNetworkSettingsConfig ipv6PrefixLengthManual]
  -[WFNetworkSettingsConfig ipv6RouterAddressManual]
  -[WFNetworkSettingsConfig validProxyConfiguration]
  -[WFNetworkSettingsConfig httpProxyConfig]
  -[WFNetworkSettingsConfig httpProxyServerAddress]
  -[WFNetworkSettingsConfig httpProxyServerPort]
  -[WFNetworkSettingsConfig joinable]
  -[WFNetworkSettingsConfig canRenewLease]
  -[WFNetworkSettingsConfig dhcpLeaseExpirationDate]
  -[WFNetworkSettingsConfig httpProxyConfigurable]
  -[WFNetworkSettingsConfig httpProxyConfigPAC]
  -[WFNetworkSettingsConfig isEqualToNetworkSettingsConfig:]
  -[WFNetworkSettingsConfig setDnsSeverAddresses:]
  -[WFNetworkSettingsConfig dnsSeverAddresses]


WFBuddyNetworkListCell : WFNetworkListCell
 @property  NSLayoutConstraint *trailingImageViewConstraint
 @property  NSLayoutConstraint *topLabelConstraint
 @property  NSLayoutConstraint *bottomLabelConstraint

  // instance methods
  -[WFBuddyNetworkListCell awakeFromNib]
  -[WFBuddyNetworkListCell setSubtitle:]
  -[WFBuddyNetworkListCell .cxx_destruct]
  -[WFBuddyNetworkListCell layoutSubviews]
  -[WFBuddyNetworkListCell bottomLabelConstraint]
  -[WFBuddyNetworkListCell setBottomLabelConstraint:]
  -[WFBuddyNetworkListCell topLabelConstraint]
  -[WFBuddyNetworkListCell setTopLabelConstraint:]
  -[WFBuddyNetworkListCell trailingImageViewConstraint]
  -[WFBuddyNetworkListCell setTrailingImageViewConstraint:]


WFRecommendationCell : UITableViewCell /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  UILabel *titleLabel
 @property  UILabel *descriptionLabel

  // instance methods
  -[WFRecommendationCell setTitleLabel:]
  -[WFRecommendationCell titleLabel]
  -[WFRecommendationCell .cxx_destruct]
  -[WFRecommendationCell descriptionLabel]
  -[WFRecommendationCell setDescriptionLabel:]


WFInsetTableViewController : UITableViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
  // instance methods
  -[WFInsetTableViewController _isRegularWidth]
  -[WFInsetTableViewController _updateSectionContentInsetWithAnimation:]
  -[WFInsetTableViewController viewDidLayoutSubviews]
  -[WFInsetTableViewController loadView]


WFNetworkListCell : UITableViewCell /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <WFNetworkCell>
 @property  UIImageView *signalImageView
 @property  UIImageView *lockImageView
 @property  UILabel *nameLabel
 @property  UILabel *subtitleLabel
 @property  UIStackView *stackView
 @property  NSLayoutConstraint *stackViewTopConstraint
 @property  NSLayoutConstraint *stackViewBottomConstraint
 @property  WFAssociationStateView *associationStateView
 @property  NSLayoutConstraint *signalImageViewCenterConstraint
 @property  NSString *title
 @property  NSString *subtitle
 @property  BOOL secure
 @property  long long state
 @property  unsigned long bars
 @property  BOOL personalHotspot
 @property  WFHotspotDetails *hotspotDetails
 @property  BOOL connectionError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFNetworkListCell awakeFromNib]
  -[WFNetworkListCell bars]
  -[WFNetworkListCell stackViewBottomConstraint]
  -[WFNetworkListCell secure]
  -[WFNetworkListCell setSubtitle:]
  -[WFNetworkListCell stackView]
  -[WFNetworkListCell setSecure:]
  -[WFNetworkListCell setState:]
  -[WFNetworkListCell setBars:]
  -[WFNetworkListCell .cxx_destruct]
  -[WFNetworkListCell setConnectionError:]
  -[WFNetworkListCell connectionError]
  -[WFNetworkListCell setTitle:]
  -[WFNetworkListCell prepareForReuse]
  -[WFNetworkListCell title]
  -[WFNetworkListCell nameLabel]
  -[WFNetworkListCell traitCollectionDidChange:]
  -[WFNetworkListCell setPersonalHotspot:]
  -[WFNetworkListCell setStackView:]
  -[WFNetworkListCell subtitle]
  -[WFNetworkListCell subtitleLabel]
  -[WFNetworkListCell _verticalPadding]
  -[WFNetworkListCell setSubtitleLabel:]
  -[WFNetworkListCell setNameLabel:]
  -[WFNetworkListCell stackViewTopConstraint]
  -[WFNetworkListCell setStackViewTopConstraint:]
  -[WFNetworkListCell setStackViewBottomConstraint:]
  -[WFNetworkListCell _adjustStackViewPadding]
  -[WFNetworkListCell setHotspotDetails:]
  -[WFNetworkListCell lockImageView]
  -[WFNetworkListCell signalImageView]
  -[WFNetworkListCell imageFromSignalBars:]
  -[WFNetworkListCell associationStateView]
  -[WFNetworkListCell _updateSignalImage]
  -[WFNetworkListCell personalHotspot]
  -[WFNetworkListCell signalImageViewCenterConstraint]
  -[WFNetworkListCell setSignalImageView:]
  -[WFNetworkListCell setLockImageView:]
  -[WFNetworkListCell setAssociationStateView:]
  -[WFNetworkListCell setSignalImageViewCenterConstraint:]


WFHotspotCell : UITableViewCell /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <WFNetworkCell>
 @property  UIStackView *stackView
 @property  UILabel *nameLabel
 @property  WFHotspotDetailsView *hotspotDetailsView
 @property  NSLayoutConstraint *stackViewTopConstraint
 @property  NSLayoutConstraint *stackViewBottomConstraint
 @property  WFAssociationStateView *associationStateView
 @property  NSString *title
 @property  NSString *subtitle
 @property  BOOL secure
 @property  long long state
 @property  unsigned long bars
 @property  BOOL personalHotspot
 @property  WFHotspotDetails *hotspotDetails
 @property  BOOL connectionError
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFHotspotCell awakeFromNib]
  -[WFHotspotCell bars]
  -[WFHotspotCell stackViewBottomConstraint]
  -[WFHotspotCell secure]
  -[WFHotspotCell setSubtitle:]
  -[WFHotspotCell stackView]
  -[WFHotspotCell setSecure:]
  -[WFHotspotCell setState:]
  -[WFHotspotCell setBars:]
  -[WFHotspotCell .cxx_destruct]
  -[WFHotspotCell setConnectionError:]
  -[WFHotspotCell setTitle:]
  -[WFHotspotCell prepareForReuse]
  -[WFHotspotCell title]
  -[WFHotspotCell nameLabel]
  -[WFHotspotCell traitCollectionDidChange:]
  -[WFHotspotCell setPersonalHotspot:]
  -[WFHotspotCell setStackView:]
  -[WFHotspotCell state]
  -[WFHotspotCell _verticalPadding]
  -[WFHotspotCell setNameLabel:]
  -[WFHotspotCell stackViewTopConstraint]
  -[WFHotspotCell setStackViewTopConstraint:]
  -[WFHotspotCell setStackViewBottomConstraint:]
  -[WFHotspotCell _adjustStackViewPadding]
  -[WFHotspotCell hotspotDetails]
  -[WFHotspotCell setHotspotDetails:]
  -[WFHotspotCell associationStateView]
  -[WFHotspotCell personalHotspot]
  -[WFHotspotCell setAssociationStateView:]
  -[WFHotspotCell hotspotDetailsView]
  -[WFHotspotCell setHotspotDetailsView:]


WFTrustCertificateViewController : UIViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <TrustCertificateViewControllerDelegate, WFNetworkView>
 @property  TrustCertificateViewController *certViewController
 @property  <WFCertificateProviderContext> *credentialsContext
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL wantsModalPresentation

  // instance methods
  -[WFTrustCertificateViewController .cxx_destruct]
  -[WFTrustCertificateViewController wantsModalPresentation]
  -[WFTrustCertificateViewController loadView]
  -[WFTrustCertificateViewController credentialsContext]
  -[WFTrustCertificateViewController setCredentialsContext:]
  -[WFTrustCertificateViewController initWithCertificateProviderContext:]
  -[WFTrustCertificateViewController trustCertificateViewController:finishedWithReturnCode:]
  -[WFTrustCertificateViewController certViewController]
  -[WFTrustCertificateViewController setCertViewController:]


WFPickerViewController : UIViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <UITableViewDelegate, UITableViewDataSource, WFNetworkListing>
 @property  UITableView *tableView
 @property  NSArray *sortedNetworks
 @property  <WFNetworkListDelegate> *listDelegate
 @property  BOOL showCurrentNetworkTop
 @property  BOOL dismissed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL showOtherNetwork
 @property  float currentNetworkScaledRSSI
 @property  <WFNetworkListRecord> *currentNetwork
 @property  long long currentNetworkState
 @property  unsigned long currentNetworkSignalBars
 @property  long long deviceCapability
 @property  NSString *currentNetworkSubtitle
 @property  BOOL disabled
 @property  BOOL userAutoJoinEnabled

  // instance methods
  -[WFPickerViewController viewDidLoad]
  -[WFPickerViewController refresh]
  -[WFPickerViewController setNetworks:]
  -[WFPickerViewController init]
  -[WFPickerViewController setDismissed:]
  -[WFPickerViewController dismissed]
  -[WFPickerViewController setTableView:]
  -[WFPickerViewController tableView:numberOfRowsInSection:]
  -[WFPickerViewController tableView:didSelectRowAtIndexPath:]
  -[WFPickerViewController tableView]
  -[WFPickerViewController .cxx_destruct]
  -[WFPickerViewController setCurrentNetwork:]
  -[WFPickerViewController tableView:cellForRowAtIndexPath:]
  -[WFPickerViewController numberOfSectionsInTableView:]
  -[WFPickerViewController listDelegate]
  -[WFPickerViewController setListDelegate:]
  -[WFPickerViewController viewWillAppear:]
  -[WFPickerViewController viewDidDisappear:]
  -[WFPickerViewController currentNetwork]
  -[WFPickerViewController loadView]
  -[WFPickerViewController didReceiveMemoryWarning]
  -[WFPickerViewController powerStateDidChange:]
  -[WFPickerViewController deviceCapability]
  -[WFPickerViewController setDeviceCapability:]
  -[WFPickerViewController setShowOtherNetwork:]
  -[WFPickerViewController setCurrentNetworkScaledRSSI:]
  -[WFPickerViewController setCurrentNetworkState:]
  -[WFPickerViewController shouldPromptWhenPersonalHotspotIsEnabled]
  -[WFPickerViewController shouldPromptWhenCarPlaySessionIsActive]
  -[WFPickerViewController currentNetworkState]
  -[WFPickerViewController showOtherNetwork]
  -[WFPickerViewController currentNetworkScaledRSSI]
  -[WFPickerViewController sortedNetworks]
  -[WFPickerViewController _cellForNetworkRecord:tableView:indexPath:]
  -[WFPickerViewController setSortedNetworks:]
  -[WFPickerViewController showCurrentNetworkTop]
  -[WFPickerViewController setShowCurrentNetworkTop:]


WFHotspotDetails : NSObject /usr/lib/libSystem.B.dylib
 @property  NSNumber *batteryLife
 @property  NSString *cellularProtocolString
 @property  NSNumber *signalStrength

  // instance methods
  -[WFHotspotDetails setSignalStrength:]
  -[WFHotspotDetails .cxx_destruct]
  -[WFHotspotDetails batteryLife]
  -[WFHotspotDetails setBatteryLife:]
  -[WFHotspotDetails isEqual:]
  -[WFHotspotDetails signalStrength]
  -[WFHotspotDetails cellularProtocolString]
  -[WFHotspotDetails setCellularProtocolString:]
  -[WFHotspotDetails isEqualHotspotDetails:]


WFDiagnosticsViewController : WFInsetTableViewController
 @property  NSString *comment
 @property  @? saveHandler
 @property  BOOL saving

  // instance methods
  -[WFDiagnosticsViewController viewDidLoad]
  -[WFDiagnosticsViewController setComment:]
  -[WFDiagnosticsViewController comment]
  -[WFDiagnosticsViewController init]
  -[WFDiagnosticsViewController saving]
  -[WFDiagnosticsViewController tableView:numberOfRowsInSection:]
  -[WFDiagnosticsViewController tableView:didSelectRowAtIndexPath:]
  -[WFDiagnosticsViewController .cxx_destruct]
  -[WFDiagnosticsViewController tableView:cellForRowAtIndexPath:]
  -[WFDiagnosticsViewController numberOfSectionsInTableView:]
  -[WFDiagnosticsViewController tableView:titleForFooterInSection:]
  -[WFDiagnosticsViewController setSaving:]
  -[WFDiagnosticsViewController setSaveHandler:]
  -[WFDiagnosticsViewController saveHandler]


WFInsetViewController : UIViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  UITableView *tableView

  // instance methods
  -[WFInsetViewController setTableView:]
  -[WFInsetViewController tableView]
  -[WFInsetViewController _isRegularWidth]
  -[WFInsetViewController _updateSectionContentInsetWithAnimation:]
  -[WFInsetViewController .cxx_destruct]
  -[WFInsetViewController viewDidLayoutSubviews]
  -[WFInsetViewController loadView]


WFPrivacyIssue : WFHealthIssue
  // class methods
  +[WFPrivacyIssue carrierNetworkIssue]
  +[WFPrivacyIssue dnsFilteredNetworkIssue]
  +[WFPrivacyIssue privateAddressDisabledBySystemIssue]
  +[WFPrivacyIssue privateAddressDisabledByCarrierIssueWithCarrierName:]
  +[WFPrivacyIssue privateAddressDisabledByProfileIssueWithOrganizationName:profileName:profileUUID:]
  +[WFPrivacyIssue privateAddressDisabledByUserIssue]

  // instance methods
  -[WFPrivacyIssue .cxx_destruct]
  -[WFPrivacyIssue issueDescription]
  -[WFPrivacyIssue issueShortTitle]
  -[WFPrivacyIssue issueRecommendation]
  -[WFPrivacyIssue issueTitle]
  -[WFPrivacyIssue initWithPrivacyType:organizationName:profileName:profileUUID:]
  -[WFPrivacyIssue _titleForSubType:]
  -[WFPrivacyIssue _descriptionForSubType:organizationName:profileName:]
  -[WFPrivacyIssue _recommendationForSubType:organizationName:]
  -[WFPrivacyIssue _healthIssueTypeForSubType:]


WFDNSConfigViewController : WFInsetTableViewController
 @property  long long originalDNSConfig
 @property  long long dnsConfig
 @property  NSArray *originalServers
 @property  NSMutableArray *servers
 @property  NSArray *originalDomains
 @property  NSMutableArray *domains
 @property  UIBarButtonItem *saveButton
 @property  BOOL useInsetGroupedTableView
 @property  @? saveHandler

  // instance methods
  -[WFDNSConfigViewController viewDidLoad]
  -[WFDNSConfigViewController save:]
  -[WFDNSConfigViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[WFDNSConfigViewController tableView:shouldIndentWhileEditingRowAtIndexPath:]
  -[WFDNSConfigViewController tableView:numberOfRowsInSection:]
  -[WFDNSConfigViewController tableView:didSelectRowAtIndexPath:]
  -[WFDNSConfigViewController .cxx_destruct]
  -[WFDNSConfigViewController initWithConfig:]
  -[WFDNSConfigViewController tableView:titleForHeaderInSection:]
  -[WFDNSConfigViewController setDomains:]
  -[WFDNSConfigViewController servers]
  -[WFDNSConfigViewController domains]
  -[WFDNSConfigViewController tableView:cellForRowAtIndexPath:]
  -[WFDNSConfigViewController saveButton]
  -[WFDNSConfigViewController numberOfSectionsInTableView:]
  -[WFDNSConfigViewController tableView:editingStyleForRowAtIndexPath:]
  -[WFDNSConfigViewController setSaveButton:]
  -[WFDNSConfigViewController _canShowWhileLocked]
  -[WFDNSConfigViewController setServers:]
  -[WFDNSConfigViewController setSaveHandler:]
  -[WFDNSConfigViewController dnsConfig]
  -[WFDNSConfigViewController setDnsConfig:]
  -[WFDNSConfigViewController useInsetGroupedTableView]
  -[WFDNSConfigViewController setUseInsetGroupedTableView:]
  -[WFDNSConfigViewController saveHandler]
  -[WFDNSConfigViewController initWithConfig:useInsetGroupedTableView:]
  -[WFDNSConfigViewController originalServers]
  -[WFDNSConfigViewController originalDNSConfig]
  -[WFDNSConfigViewController originalDomains]
  -[WFDNSConfigViewController _updateSaveEnabled]
  -[WFDNSConfigViewController _addServerAtIndexPath:]
  -[WFDNSConfigViewController _addDomainAtIndexPath:]
  -[WFDNSConfigViewController setOriginalDNSConfig:]
  -[WFDNSConfigViewController setOriginalServers:]
  -[WFDNSConfigViewController setOriginalDomains:]


WFIPViewController : WFInsetTableViewController <UITableViewDelegate, UITableViewDataSource>
 @property  NSArray *addresses
 @property  NSArray *prefixes
 @property  BOOL useInsetGroupedTableView
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFIPViewController viewDidLoad]
  -[WFIPViewController addresses]
  -[WFIPViewController tableView:numberOfRowsInSection:]
  -[WFIPViewController .cxx_destruct]
  -[WFIPViewController tableView:cellForRowAtIndexPath:]
  -[WFIPViewController numberOfSectionsInTableView:]
  -[WFIPViewController prefixes]
  -[WFIPViewController setPrefixes:]
  -[WFIPViewController setAddresses:]
  -[WFIPViewController useInsetGroupedTableView]
  -[WFIPViewController setUseInsetGroupedTableView:]
  -[WFIPViewController initWithAddresses:prefixLengths:useInsetGroupedTableView:]
  -[WFIPViewController initWithAddresses:prefixLengths:]


WFHotspotDetailsView : UIStackView /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  _UIBatteryView *batteryView
 @property  UIImageView *signalImageView
 @property  UILabel *networkTypeLabel
 @property  unsigned long batteryCharge
 @property  NSString *cellularProtocolString
 @property  unsigned long signalBars

  // instance methods
  -[WFHotspotDetailsView setSignalBars:]
  -[WFHotspotDetailsView signalBars]
  -[WFHotspotDetailsView initWithFrame:]
  -[WFHotspotDetailsView .cxx_destruct]
  -[WFHotspotDetailsView intrinsicContentSize]
  -[WFHotspotDetailsView batteryView]
  -[WFHotspotDetailsView setupSubviews]
  -[WFHotspotDetailsView setBatteryView:]
  -[WFHotspotDetailsView initWithCoder:]
  -[WFHotspotDetailsView batteryCharge]
  -[WFHotspotDetailsView cellularProtocolString]
  -[WFHotspotDetailsView setCellularProtocolString:]
  -[WFHotspotDetailsView signalImageView]
  -[WFHotspotDetailsView setSignalImageView:]
  -[WFHotspotDetailsView setBatteryCharge:]
  -[WFHotspotDetailsView updateSignalBars]
  -[WFHotspotDetailsView setNetworkTypeLabel:]
  -[WFHotspotDetailsView updateCellularProtocolLabel]
  -[WFHotspotDetailsView networkTypeLabel]
  -[WFHotspotDetailsView attributedStringFromCellularProtocol:]


WFHyperlinkFooterView : UIView /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <UITextViewDelegate>
 @property  NSString *text
 @property  {_NSRange=QQ} linkRange
 @property  id target
 @property  SEL action
 @property  NSURL *URL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFHyperlinkFooterView init]
  -[WFHyperlinkFooterView setLinkRange:]
  -[WFHyperlinkFooterView target]
  -[WFHyperlinkFooterView setAction:]
  -[WFHyperlinkFooterView text]
  -[WFHyperlinkFooterView preferredHeightForWidth:]
  -[WFHyperlinkFooterView .cxx_destruct]
  -[WFHyperlinkFooterView action]
  -[WFHyperlinkFooterView setTarget:]
  -[WFHyperlinkFooterView _linkify]
  -[WFHyperlinkFooterView textView:shouldInteractWithURL:inRange:interaction:]
  -[WFHyperlinkFooterView sizeThatFits:]
  -[WFHyperlinkFooterView linkRange]
  -[WFHyperlinkFooterView URL]
  -[WFHyperlinkFooterView setURL:]
  -[WFHyperlinkFooterView textInsets]
  -[WFHyperlinkFooterView setText:]
  -[WFHyperlinkFooterView layoutSubviews]


WFValueListViewController : WFInsetTableViewController
 @property  NSArray *titles
 @property  BOOL hasSwitch
 @property  UISwitch *configSwitch
 @property  NSMutableArray *sections
 @property  NSString *switchTitle
 @property  NSString *selectedTitle
 @property  @? completionHandler
 @property  @? footerHandler
 @property  BOOL switchOn

  // instance methods
  -[WFValueListViewController viewDidLoad]
  -[WFValueListViewController setSections:]
  -[WFValueListViewController titles]
  -[WFValueListViewController tableView:numberOfRowsInSection:]
  -[WFValueListViewController tableView:didSelectRowAtIndexPath:]
  -[WFValueListViewController .cxx_destruct]
  -[WFValueListViewController setTitles:]
  -[WFValueListViewController tableView:cellForRowAtIndexPath:]
  -[WFValueListViewController numberOfSectionsInTableView:]
  -[WFValueListViewController setSwitchOn:]
  -[WFValueListViewController sections]
  -[WFValueListViewController tableView:titleForFooterInSection:]
  -[WFValueListViewController completionHandler]
  -[WFValueListViewController viewWillDisappear:]
  -[WFValueListViewController setCompletionHandler:]
  -[WFValueListViewController selectedTitle]
  -[WFValueListViewController initWithTitles:switchTitle:]
  -[WFValueListViewController setSelectedTitle:]
  -[WFValueListViewController setFooterHandler:]
  -[WFValueListViewController configSwitch]
  -[WFValueListViewController switchTitle]
  -[WFValueListViewController cellForTitleAtIndexPath:]
  -[WFValueListViewController footerHandler]
  -[WFValueListViewController switchOn]
  -[WFValueListViewController hasSwitch]
  -[WFValueListViewController setHasSwitch:]
  -[WFValueListViewController setConfigSwitch:]
  -[WFValueListViewController setSwitchTitle:]


WFKnownNetworkGeoTagViewController : UIViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <MKMapViewDelegate>
 @property  MKMapView *mapView
 @property  NSMutableArray *annotations
 @property  NSDateFormatter *dateFormatter
 @property  NSArray *geoTags
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFKnownNetworkGeoTagViewController viewDidLoad]
  -[WFKnownNetworkGeoTagViewController dateFormatter]
  -[WFKnownNetworkGeoTagViewController setMapView:]
  -[WFKnownNetworkGeoTagViewController mapView]
  -[WFKnownNetworkGeoTagViewController annotations]
  -[WFKnownNetworkGeoTagViewController setAnnotations:]
  -[WFKnownNetworkGeoTagViewController .cxx_destruct]
  -[WFKnownNetworkGeoTagViewController viewDidAppear:]
  -[WFKnownNetworkGeoTagViewController addMap]
  -[WFKnownNetworkGeoTagViewController setDateFormatter:]
  -[WFKnownNetworkGeoTagViewController mapView:viewForAnnotation:]
  -[WFKnownNetworkGeoTagViewController geoTags]
  -[WFKnownNetworkGeoTagViewController setGeoTags:]
  -[WFKnownNetworkGeoTagViewController addAnnotations]
  -[WFKnownNetworkGeoTagViewController setVisibleMapRegion]
  -[WFKnownNetworkGeoTagViewController showPinsOnMap]
  -[WFKnownNetworkGeoTagViewController addAnnotationForGeotag:]


WFOtherNetworkViewController : UITableViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <UITableViewDelegate, UITableViewDataSource, WFAccessoryViewController, UITextFieldDelegate, WFOtherNetworkProvider, WFNetworkView>
 @property  long long style
 @property  BOOL joinable
 @property  NSOrderedSet *sections
 @property  NSOrderedSet *securityRows
 @property  WFTextFieldCell *nameCell
 @property  WFTextFieldCell *usernameCell
 @property  WFTextFieldCell *passwordCell
 @property  UIColor *backgroundColor
 @property  long long firstResponderCell
 @property  WFTextFieldCell *mostRecentFirstResponder
 @property  NSString *defaultActivityString
 @property  BOOL overrideDefaultSecurity
 @property  <WFCredentialsProviderContext> *context
 @property  long long deviceCapability
 @property  WFValueListViewController *securityTitlesValueVC
 @property  WFValueListViewController *profileModeTitlesValueVC
 @property  BOOL shouldCancelContextWhenViewDisappear
 @property  BOOL isUsingRandomAddress
 @property  NSString *randomMACAddress
 @property  NSString *hardwareMACAddress
 @property  <WFOtherNetworkViewControllerDelegate> *delegate
 @property  NSString *networkName
 @property  long long securityMode
 @property  NSString *username
 @property  NSString *password
 @property  long long profileMode
 @property  BOOL WAPIEnabled
 @property  ^{__SecIdentity=} TLSIdentity
 @property  NSArray *TLSIdentities
 @property  NSArray *WAPIRootCertificates
 @property  id WAPIRootCertificate
 @property  NSArray *WAPIIdentities
 @property  id WAPIIdentity
 @property  BOOL joining
 @property  BOOL supportsWiFiPasswordSharing
 @property  NSString *details
 @property  BOOL passwordRequired
 @property  BOOL WPA3PersonalEnabled
 @property  BOOL WPA3EnterpriseEnabled
 @property  BOOL WPA2EnterpriseEnabledMFPCapable
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *SSID
 @property  NSString *activityString
 @property  BOOL wantsModalPresentation

  // instance methods
  -[WFOtherNetworkViewController viewDidLoad]
  -[WFOtherNetworkViewController context]
  -[WFOtherNetworkViewController SSID]
  -[WFOtherNetworkViewController details]
  -[WFOtherNetworkViewController setUsername:]
  -[WFOtherNetworkViewController setSections:]
  -[WFOtherNetworkViewController setBackgroundColor:]
  -[WFOtherNetworkViewController password]
  -[WFOtherNetworkViewController networkName]
  -[WFOtherNetworkViewController setPassword:]
  -[WFOtherNetworkViewController username]
  -[WFOtherNetworkViewController hardwareMACAddress]
  -[WFOtherNetworkViewController tableView:numberOfRowsInSection:]
  -[WFOtherNetworkViewController tableView:didSelectRowAtIndexPath:]
  -[WFOtherNetworkViewController setWPA3PersonalEnabled:]
  -[WFOtherNetworkViewController dealloc]
  -[WFOtherNetworkViewController backgroundColor]
  -[WFOtherNetworkViewController tableView:willDisplayCell:forRowAtIndexPath:]
  -[WFOtherNetworkViewController .cxx_destruct]
  -[WFOtherNetworkViewController _join:]
  -[WFOtherNetworkViewController randomMACAddress]
  -[WFOtherNetworkViewController passwordRequired]
  -[WFOtherNetworkViewController setPasswordRequired:]
  -[WFOtherNetworkViewController _dismiss:]
  -[WFOtherNetworkViewController tableView:cellForRowAtIndexPath:]
  -[WFOtherNetworkViewController setContext:]
  -[WFOtherNetworkViewController numberOfSectionsInTableView:]
  -[WFOtherNetworkViewController setWAPIEnabled:]
  -[WFOtherNetworkViewController setNetworkName:]
  -[WFOtherNetworkViewController wantsModalPresentation]
  -[WFOtherNetworkViewController orientationChanged:]
  -[WFOtherNetworkViewController viewDidAppear:]
  -[WFOtherNetworkViewController sections]
  -[WFOtherNetworkViewController setSecurityMode:]
  -[WFOtherNetworkViewController firstResponderCell]
  -[WFOtherNetworkViewController setWPA3EnterpriseEnabled:]
  -[WFOtherNetworkViewController textFieldDidBeginEditing:]
  -[WFOtherNetworkViewController securityMode]
  -[WFOtherNetworkViewController keyboardWillShow:]
  -[WFOtherNetworkViewController viewWillAppear:]
  -[WFOtherNetworkViewController joining]
  -[WFOtherNetworkViewController setDetails:]
  -[WFOtherNetworkViewController tableView:titleForFooterInSection:]
  -[WFOtherNetworkViewController _canShowWhileLocked]
  -[WFOtherNetworkViewController setRandomMACAddress:]
  -[WFOtherNetworkViewController setDelegate:]
  -[WFOtherNetworkViewController viewDidDisappear:]
  -[WFOtherNetworkViewController nameCell]
  -[WFOtherNetworkViewController viewWillDisappear:]
  -[WFOtherNetworkViewController setStyle:]
  -[WFOtherNetworkViewController delegate]
  -[WFOtherNetworkViewController style]
  -[WFOtherNetworkViewController _returnKeyType]
  -[WFOtherNetworkViewController _updateSections]
  -[WFOtherNetworkViewController setNameCell:]
  -[WFOtherNetworkViewController activityString]
  -[WFOtherNetworkViewController setActivityString:]
  -[WFOtherNetworkViewController setTLSIdentity:]
  -[WFOtherNetworkViewController TLSIdentity]
  -[WFOtherNetworkViewController resetFirstResponder]
  -[WFOtherNetworkViewController receiveSharedPassword:]
  -[WFOtherNetworkViewController deviceCapability]
  -[WFOtherNetworkViewController setDeviceCapability:]
  -[WFOtherNetworkViewController setJoining:]
  -[WFOtherNetworkViewController supportsWiFiPasswordSharing]
  -[WFOtherNetworkViewController WAPIRootCertificate]
  -[WFOtherNetworkViewController initWithOtherNetworkProviderContext:deviceCapability:]
  -[WFOtherNetworkViewController WAPIIdentity]
  -[WFOtherNetworkViewController WAPIRootCertificates]
  -[WFOtherNetworkViewController WAPIEnabled]
  -[WFOtherNetworkViewController WAPIIdentities]
  -[WFOtherNetworkViewController setHardwareMACAddress:]
  -[WFOtherNetworkViewController setWAPIRootCertificates:]
  -[WFOtherNetworkViewController setWAPIIdentities:]
  -[WFOtherNetworkViewController initWithCredentialsProviderContext:deviceCapability:]
  -[WFOtherNetworkViewController initWithOtherNetworkStyle:]
  -[WFOtherNetworkViewController setWAPIRootCertificate:]
  -[WFOtherNetworkViewController setJoinable:]
  -[WFOtherNetworkViewController usernameCell]
  -[WFOtherNetworkViewController setUsernameCell:]
  -[WFOtherNetworkViewController passwordCell]
  -[WFOtherNetworkViewController setPasswordCell:]
  -[WFOtherNetworkViewController joinable]
  -[WFOtherNetworkViewController _sectionsForStyle:]
  -[WFOtherNetworkViewController _securityRowsForStyle:]
  -[WFOtherNetworkViewController _updateJoinable]
  -[WFOtherNetworkViewController WPA3PersonalEnabled]
  -[WFOtherNetworkViewController setFirstResponderCell:]
  -[WFOtherNetworkViewController setDefaultActivityString:]
  -[WFOtherNetworkViewController keyboardShown:]
  -[WFOtherNetworkViewController _scrollToCellAndBecomeFirstResponder:]
  -[WFOtherNetworkViewController isUsingRandomAddress]
  -[WFOtherNetworkViewController profileMode]
  -[WFOtherNetworkViewController _canShowModes]
  -[WFOtherNetworkViewController setSecurityRows:]
  -[WFOtherNetworkViewController securityRows]
  -[WFOtherNetworkViewController setWAPIIdentity:]
  -[WFOtherNetworkViewController securityTitlesValueVC]
  -[WFOtherNetworkViewController _availableSecurityTitles]
  -[WFOtherNetworkViewController _securityStringFromType:]
  -[WFOtherNetworkViewController _securityModeFromTitle:]
  -[WFOtherNetworkViewController setIsUsingRandomAddress:]
  -[WFOtherNetworkViewController setSecurityTitlesValueVC:]
  -[WFOtherNetworkViewController _setTLSIdentity:specifier:]
  -[WFOtherNetworkViewController _getTLSIdentity:]
  -[WFOtherNetworkViewController TLSIdentities]
  -[WFOtherNetworkViewController _setWAPIIdentity:specifier:]
  -[WFOtherNetworkViewController _getWAPIIdentity:]
  -[WFOtherNetworkViewController _setWAPIRootCertificate:specifier:]
  -[WFOtherNetworkViewController _getWAPIRootCertificate:]
  -[WFOtherNetworkViewController profileModeTitlesValueVC]
  -[WFOtherNetworkViewController _availableProfileModeTitles]
  -[WFOtherNetworkViewController _profileModeStringFromType:]
  -[WFOtherNetworkViewController _profileModeFromTitle:]
  -[WFOtherNetworkViewController setProfileMode:]
  -[WFOtherNetworkViewController setProfileModeTitlesValueVC:]
  -[WFOtherNetworkViewController _setFirstResponderAfterCell:]
  -[WFOtherNetworkViewController _TLSIdentityDescription]
  -[WFOtherNetworkViewController _WAPIIdentityDescription]
  -[WFOtherNetworkViewController _WAPIRootCertificateDescription]
  -[WFOtherNetworkViewController _availableProfileModes]
  -[WFOtherNetworkViewController WPA3EnterpriseEnabled]
  -[WFOtherNetworkViewController WPA2EnterpriseEnabledMFPCapable]
  -[WFOtherNetworkViewController _availableSecurityModes]
  -[WFOtherNetworkViewController setTLSIdentities:]
  -[WFOtherNetworkViewController setSupportsWiFiPasswordSharing:]
  -[WFOtherNetworkViewController setWPA2EnterpriseEnabledMFPCapable:]
  -[WFOtherNetworkViewController mostRecentFirstResponder]
  -[WFOtherNetworkViewController setMostRecentFirstResponder:]
  -[WFOtherNetworkViewController defaultActivityString]
  -[WFOtherNetworkViewController overrideDefaultSecurity]
  -[WFOtherNetworkViewController setOverrideDefaultSecurity:]
  -[WFOtherNetworkViewController shouldCancelContextWhenViewDisappear]
  -[WFOtherNetworkViewController setShouldCancelContextWhenViewDisappear:]


WFKnownNetworksViewController : UITableViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  NSMutableArray *knownNetworksArray
 @property  <WFKnownNetworksViewControllerDelegate> *knownNetworksDelegate

  // instance methods
  -[WFKnownNetworksViewController viewDidLoad]
  -[WFKnownNetworksViewController tableView:commitEditingStyle:forRowAtIndexPath:]
  -[WFKnownNetworksViewController tableView:numberOfRowsInSection:]
  -[WFKnownNetworksViewController tableView:didSelectRowAtIndexPath:]
  -[WFKnownNetworksViewController .cxx_destruct]
  -[WFKnownNetworksViewController tableView:cellForRowAtIndexPath:]
  -[WFKnownNetworksViewController numberOfSectionsInTableView:]
  -[WFKnownNetworksViewController tableView:editingStyleForRowAtIndexPath:]
  -[WFKnownNetworksViewController tableView:willBeginEditingRowAtIndexPath:]
  -[WFKnownNetworksViewController viewWillAppear:]
  -[WFKnownNetworksViewController tableView:canMoveRowAtIndexPath:]
  -[WFKnownNetworksViewController setKnownNetworksDelegate:]
  -[WFKnownNetworksViewController knownNetworksDelegate]
  -[WFKnownNetworksViewController setKnownNetworksArray:]
  -[WFKnownNetworksViewController knownNetworksArray]


WFIPConfigViewController : WFInsetTableViewController
 @property  WFNetworkSettingsConfig *originalConfig
 @property  WFNetworkSettingsConfig *modifiedConfig
 @property  long long type
 @property  WFTextFieldCell *ipAddressCell
 @property  WFTextFieldCell *subnetMaskCell
 @property  WFTextFieldCell *routerCell
 @property  WFTextFieldCell *prefixCell
 @property  WFTextFieldCell *clientIDCell
 @property  BOOL useInsetGroupedTableView
 @property  @? saveHandler

  // instance methods
  -[WFIPConfigViewController viewDidLoad]
  -[WFIPConfigViewController save:]
  -[WFIPConfigViewController tableView:numberOfRowsInSection:]
  -[WFIPConfigViewController tableView:didSelectRowAtIndexPath:]
  -[WFIPConfigViewController setType:]
  -[WFIPConfigViewController .cxx_destruct]
  -[WFIPConfigViewController tableView:titleForHeaderInSection:]
  -[WFIPConfigViewController tableView:cellForRowAtIndexPath:]
  -[WFIPConfigViewController numberOfSectionsInTableView:]
  -[WFIPConfigViewController type]
  -[WFIPConfigViewController _canShowWhileLocked]
  -[WFIPConfigViewController didReceiveMemoryWarning]
  -[WFIPConfigViewController setSaveHandler:]
  -[WFIPConfigViewController useInsetGroupedTableView]
  -[WFIPConfigViewController setUseInsetGroupedTableView:]
  -[WFIPConfigViewController saveHandler]
  -[WFIPConfigViewController _updateSaveEnabled]
  -[WFIPConfigViewController _setFirstResponderAfterCell:]
  -[WFIPConfigViewController initWithConfig:ipType:useInsetGroupedTableView:]
  -[WFIPConfigViewController modifiedConfig]
  -[WFIPConfigViewController originalConfig]
  -[WFIPConfigViewController clientIDCell]
  -[WFIPConfigViewController ipAddressCell]
  -[WFIPConfigViewController subnetMaskCell]
  -[WFIPConfigViewController routerCell]
  -[WFIPConfigViewController prefixCell]
  -[WFIPConfigViewController initWithConfig:ipType:]
  -[WFIPConfigViewController setOriginalConfig:]
  -[WFIPConfigViewController setModifiedConfig:]
  -[WFIPConfigViewController setIpAddressCell:]
  -[WFIPConfigViewController setSubnetMaskCell:]
  -[WFIPConfigViewController setRouterCell:]
  -[WFIPConfigViewController setPrefixCell:]
  -[WFIPConfigViewController setClientIDCell:]


WFProxyConfigViewController : WFInsetTableViewController
 @property  WFNetworkSettingsConfig *originalConfig
 @property  WFNetworkSettingsConfig *modifiedConfig
 @property  UISwitch *authSwitch
 @property  WFTextFieldCell *serverCell
 @property  WFTextFieldCell *portCell
 @property  WFTextFieldCell *userCell
 @property  WFTextFieldCell *passwordCell
 @property  WFTextFieldCell *urlCell
 @property  BOOL useInsetGroupedTableView
 @property  @? saveHandler

  // instance methods
  -[WFProxyConfigViewController viewDidLoad]
  -[WFProxyConfigViewController save:]
  -[WFProxyConfigViewController tableView:numberOfRowsInSection:]
  -[WFProxyConfigViewController tableView:didSelectRowAtIndexPath:]
  -[WFProxyConfigViewController .cxx_destruct]
  -[WFProxyConfigViewController initWithConfig:]
  -[WFProxyConfigViewController tableView:cellForRowAtIndexPath:]
  -[WFProxyConfigViewController numberOfSectionsInTableView:]
  -[WFProxyConfigViewController tableView:titleForFooterInSection:]
  -[WFProxyConfigViewController _canShowWhileLocked]
  -[WFProxyConfigViewController urlCell]
  -[WFProxyConfigViewController setSaveHandler:]
  -[WFProxyConfigViewController useInsetGroupedTableView]
  -[WFProxyConfigViewController setUseInsetGroupedTableView:]
  -[WFProxyConfigViewController saveHandler]
  -[WFProxyConfigViewController passwordCell]
  -[WFProxyConfigViewController setPasswordCell:]
  -[WFProxyConfigViewController initWithConfig:useInsetGroupedTableView:]
  -[WFProxyConfigViewController _updateSaveEnabled]
  -[WFProxyConfigViewController _setFirstResponderAfterCell:]
  -[WFProxyConfigViewController modifiedConfig]
  -[WFProxyConfigViewController originalConfig]
  -[WFProxyConfigViewController setOriginalConfig:]
  -[WFProxyConfigViewController setModifiedConfig:]
  -[WFProxyConfigViewController serverCell]
  -[WFProxyConfigViewController portCell]
  -[WFProxyConfigViewController _changeProxyAuthentication:]
  -[WFProxyConfigViewController userCell]
  -[WFProxyConfigViewController authSwitch]
  -[WFProxyConfigViewController setAuthSwitch:]
  -[WFProxyConfigViewController setServerCell:]
  -[WFProxyConfigViewController setPortCell:]
  -[WFProxyConfigViewController setUserCell:]
  -[WFProxyConfigViewController setUrlCell:]


WFImageCache : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *imageCache

  // class methods
  +[WFImageCache sharedImageCache]

  // instance methods
  -[WFImageCache init]
  -[WFImageCache setImageCache:]
  -[WFImageCache .cxx_destruct]
  -[WFImageCache clearCache]
  -[WFImageCache imageCache]
  -[WFImageCache imageNamed:]
  -[WFImageCache _isUIKitImageName:]


WFSegmentedCell : UITableViewCell /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  UISegmentedControl *segmentedControl
 @property  @? handler

  // instance methods
  -[WFSegmentedCell awakeFromNib]
  -[WFSegmentedCell addSubview:]
  -[WFSegmentedCell .cxx_destruct]
  -[WFSegmentedCell handler]
  -[WFSegmentedCell setHandler:]
  -[WFSegmentedCell segmentedControl]
  -[WFSegmentedCell setSegmentedControl:]
  -[WFSegmentedCell _segmentedControlDidChange:]


WFNetworkSettingsViewController : WFInsetTableViewController <UITableViewDelegate, UITableViewDataSource, WFNetworkView>
 @property  NSArray *sections
 @property  WFNetworkSettingsCellFactory *cellFactory
 @property  WFNetworkSettingsConfig *config
 @property  NSAttributedString *recommendationLinkAttributedString
 @property  WFHyperlinkFooterView *linkFooterView
 @property  UISwitch *autoJoinSwitch
 @property  UISwitch *autoLoginSwitch
 @property  UISwitch *saveDataModeSwitch
 @property  UISwitch *randomMACSwitch
 @property  UIColor *backgroundColor
 @property  <WFDetailsProviderContext> *context
 @property  UIAlertController *alert
 @property  NSString *hardwareMACAddress
 @property  NSString *randomMACAddress
 @property  BOOL randomMACSwitchOn
 @property  BOOL isUsingRandomMac
 @property  BOOL randomFeatureEnabled
 @property  BOOL useInsetGroupedTableView
 @property  <WFNetworkSettingsViewControllerDataCoordinator> *dataCoordinator
 @property  <WFNetworkSettingsViewControllerDelegate> *delegate
 @property  long long deviceCapability
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL wantsModalPresentation

  // instance methods
  -[WFNetworkSettingsViewController viewDidLoad]
  -[WFNetworkSettingsViewController context]
  -[WFNetworkSettingsViewController setSections:]
  -[WFNetworkSettingsViewController setBackgroundColor:]
  -[WFNetworkSettingsViewController _contentSizeCategoryDidChange:]
  -[WFNetworkSettingsViewController hardwareMACAddress]
  -[WFNetworkSettingsViewController tableView:canPerformAction:forRowAtIndexPath:withSender:]
  -[WFNetworkSettingsViewController tableView:numberOfRowsInSection:]
  -[WFNetworkSettingsViewController tableView:didSelectRowAtIndexPath:]
  -[WFNetworkSettingsViewController tableView:performAction:forRowAtIndexPath:withSender:]
  -[WFNetworkSettingsViewController dealloc]
  -[WFNetworkSettingsViewController tableView:viewForFooterInSection:]
  -[WFNetworkSettingsViewController backgroundColor]
  -[WFNetworkSettingsViewController .cxx_destruct]
  -[WFNetworkSettingsViewController config]
  -[WFNetworkSettingsViewController initWithConfig:]
  -[WFNetworkSettingsViewController tableView:titleForHeaderInSection:]
  -[WFNetworkSettingsViewController linkFooterView]
  -[WFNetworkSettingsViewController randomMACAddress]
  -[WFNetworkSettingsViewController alert]
  -[WFNetworkSettingsViewController tableView:cellForRowAtIndexPath:]
  -[WFNetworkSettingsViewController setContext:]
  -[WFNetworkSettingsViewController numberOfSectionsInTableView:]
  -[WFNetworkSettingsViewController tableView:estimatedHeightForFooterInSection:]
  -[WFNetworkSettingsViewController tableView:shouldShowMenuForRowAtIndexPath:]
  -[WFNetworkSettingsViewController sections]
  -[WFNetworkSettingsViewController setAlert:]
  -[WFNetworkSettingsViewController _canShowWhileLocked]
  -[WFNetworkSettingsViewController setRandomMACAddress:]
  -[WFNetworkSettingsViewController setDelegate:]
  -[WFNetworkSettingsViewController setConfig:]
  -[WFNetworkSettingsViewController viewWillDisappear:]
  -[WFNetworkSettingsViewController delegate]
  -[WFNetworkSettingsViewController deviceCapability]
  -[WFNetworkSettingsViewController setDeviceCapability:]
  -[WFNetworkSettingsViewController setHardwareMACAddress:]
  -[WFNetworkSettingsViewController setRandomMACSwitchOn:]
  -[WFNetworkSettingsViewController initWithConfig:detailsContext:hardwareMACAddress:useInsetGroupedTableView:]
  -[WFNetworkSettingsViewController setDataCoordinator:]
  -[WFNetworkSettingsViewController refreshConfig:]
  -[WFNetworkSettingsViewController setCellFactory:]
  -[WFNetworkSettingsViewController cellFactory]
  -[WFNetworkSettingsViewController useInsetGroupedTableView]
  -[WFNetworkSettingsViewController setLinkFooterView:]
  -[WFNetworkSettingsViewController setUseInsetGroupedTableView:]
  -[WFNetworkSettingsViewController dataCoordinator]
  -[WFNetworkSettingsViewController _sectionTypeAtSection:]
  -[WFNetworkSettingsViewController _isChinaDevice]
  -[WFNetworkSettingsViewController initWithConfig:detailsContext:hardwareMACAddress:]
  -[WFNetworkSettingsViewController _sectionsFromConfig:]
  -[WFNetworkSettingsViewController _logSections:]
  -[WFNetworkSettingsViewController _shouldShowIPv6ForConfig:]
  -[WFNetworkSettingsViewController randomMACSwitch]
  -[WFNetworkSettingsViewController _updateRandomMACValueChanged:]
  -[WFNetworkSettingsViewController _shouldShowRandomConfigSwith]
  -[WFNetworkSettingsViewController autoJoinSwitch]
  -[WFNetworkSettingsViewController autoLoginSwitch]
  -[WFNetworkSettingsViewController saveDataModeSwitch]
  -[WFNetworkSettingsViewController _macAddressToDisplay]
  -[WFNetworkSettingsViewController randomMACSwitchOn]
  -[WFNetworkSettingsViewController _isIPv4ConfigAuto]
  -[WFNetworkSettingsViewController _promptForgetNetwork]
  -[WFNetworkSettingsViewController _saveConfig:]
  -[WFNetworkSettingsViewController _presentDetailViewController:]
  -[WFNetworkSettingsViewController _presentRenewLeaseAlertWithSourceRect:]
  -[WFNetworkSettingsViewController _showRecommendationSupportLink]
  -[WFNetworkSettingsViewController _lowDataModeFooterView]
  -[WFNetworkSettingsViewController _randomMACFooterView]
  -[WFNetworkSettingsViewController recommendationLinkAttributedString]
  -[WFNetworkSettingsViewController _saveAutoJoinEnabledChanged:]
  -[WFNetworkSettingsViewController _saveAutoLoginEnabledChanged:]
  -[WFNetworkSettingsViewController _saveSaveDataModeChanged:]
  -[WFNetworkSettingsViewController _promptChangePrivateAddress]
  -[WFNetworkSettingsViewController setIsUsingRandomMac:]
  -[WFNetworkSettingsViewController _autoJoinSwitchChanged:]
  -[WFNetworkSettingsViewController _autoLoginSwitchChanged:]
  -[WFNetworkSettingsViewController _saveDataModeSwitchChanged:]
  -[WFNetworkSettingsViewController _usingRandomMACSwitchChanged:]
  -[WFNetworkSettingsViewController _openRecommendationsLink:]
  -[WFNetworkSettingsViewController _stringForSettingsSection:]
  -[WFNetworkSettingsViewController isUsingRandomMac]
  -[WFNetworkSettingsViewController _randomAddressToDisplay]
  -[WFNetworkSettingsViewController _randomMACFooterTextToDisplay]
  -[WFNetworkSettingsViewController _httpProxyConfigChanged:]
  -[WFNetworkSettingsViewController _httpProxyAuthChanged:]
  -[WFNetworkSettingsViewController setRecommendationLinkAttributedString:]
  -[WFNetworkSettingsViewController setAutoJoinSwitch:]
  -[WFNetworkSettingsViewController setAutoLoginSwitch:]
  -[WFNetworkSettingsViewController setSaveDataModeSwitch:]
  -[WFNetworkSettingsViewController setRandomMACSwitch:]
  -[WFNetworkSettingsViewController randomFeatureEnabled]
  -[WFNetworkSettingsViewController setRandomFeatureEnabled:]


WFRemoteWebSheetViewControllerErrorContext : NSObject /usr/lib/libSystem.B.dylib <WFRemoteWebSheetViewControllerEventContext>
 @property  NSError *error
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFRemoteWebSheetViewControllerErrorContext setError:]
  -[WFRemoteWebSheetViewControllerErrorContext .cxx_destruct]
  -[WFRemoteWebSheetViewControllerErrorContext error]


WFRemoteWebSheetViewController : _UIRemoteViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  <WFRemoteWebSheetViewControllerDelegate> *delegate

  // class methods
  +[WFRemoteWebSheetViewController exportedInterface]
  +[WFRemoteWebSheetViewController requestViewControllerWithConnectionHandler:]
  +[WFRemoteWebSheetViewController serviceViewControllerInterface]

  // instance methods
  -[WFRemoteWebSheetViewController _wheelChangedWithEvent:]
  -[WFRemoteWebSheetViewController viewDidLoad]
  -[WFRemoteWebSheetViewController .cxx_destruct]
  -[WFRemoteWebSheetViewController viewDidAppear:]
  -[WFRemoteWebSheetViewController setDelegate:]
  -[WFRemoteWebSheetViewController delegate]
  -[WFRemoteWebSheetViewController viewServiceDidTerminateWithError:]
  -[WFRemoteWebSheetViewController webSheetViewControllerContentDidStartLoading]
  -[WFRemoteWebSheetViewController webSheetViewControllerContentReadyForPresentation]
  -[WFRemoteWebSheetViewController webSheetViewControllerContentDidFinishLoading]
  -[WFRemoteWebSheetViewController _setupButtonListener]


WFAdditionalSetupTableViewCell : UITableViewCell /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  UILabel *label

  // instance methods
  -[WFAdditionalSetupTableViewCell awakeFromNib]
  -[WFAdditionalSetupTableViewCell .cxx_destruct]
  -[WFAdditionalSetupTableViewCell label]
  -[WFAdditionalSetupTableViewCell setLabel:]


WFKnownNetworkDetailsViewController : UITableViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  BOOL isHidden
 @property  NSString *securityType
 @property  NSString *password
 @property  NSDate *dateAdded
 @property  NSDate *dateLastJoined
 @property  NSDictionary *scoreDict
 @property  NSArray *geoTagsArray
 @property  NSDateFormatter *dateFormatter
 @property  NSString *ssid
 @property  <WFKnownNetworksViewControllerDelegate> *knownNetworksDelegate

  // instance methods
  -[WFKnownNetworkDetailsViewController viewDidLoad]
  -[WFKnownNetworkDetailsViewController securityType]
  -[WFKnownNetworkDetailsViewController dateFormatter]
  -[WFKnownNetworkDetailsViewController setSecurityType:]
  -[WFKnownNetworkDetailsViewController setSsid:]
  -[WFKnownNetworkDetailsViewController ssid]
  -[WFKnownNetworkDetailsViewController setIsHidden:]
  -[WFKnownNetworkDetailsViewController password]
  -[WFKnownNetworkDetailsViewController setPassword:]
  -[WFKnownNetworkDetailsViewController tableView:numberOfRowsInSection:]
  -[WFKnownNetworkDetailsViewController tableView:didSelectRowAtIndexPath:]
  -[WFKnownNetworkDetailsViewController .cxx_destruct]
  -[WFKnownNetworkDetailsViewController tableView:cellForRowAtIndexPath:]
  -[WFKnownNetworkDetailsViewController numberOfSectionsInTableView:]
  -[WFKnownNetworkDetailsViewController dateAdded]
  -[WFKnownNetworkDetailsViewController setDateAdded:]
  -[WFKnownNetworkDetailsViewController setDateFormatter:]
  -[WFKnownNetworkDetailsViewController isHidden]
  -[WFKnownNetworkDetailsViewController setKnownNetworksDelegate:]
  -[WFKnownNetworkDetailsViewController knownNetworksDelegate]
  -[WFKnownNetworkDetailsViewController setDateLastJoined:]
  -[WFKnownNetworkDetailsViewController setScoreDict:]
  -[WFKnownNetworkDetailsViewController setGeoTagsArray:]
  -[WFKnownNetworkDetailsViewController dateLastJoined]
  -[WFKnownNetworkDetailsViewController scoreDict]
  -[WFKnownNetworkDetailsViewController geoTagsArray]


WFTextFieldCell : UITableViewCell /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <UITextFieldDelegate>
 @property  NSLayoutConstraint *trailingMarginConstraint
 @property  NSLayoutConstraint *labelWidthConstraint
 @property  UIStackView *stackView
 @property  NSLayoutConstraint *stackViewTopConstraint
 @property  NSLayoutConstraint *stackViewBottomConstraint
 @property  NSLayoutConstraint *stackViewLeadingConstraint
 @property  UILabel *label
 @property  UITextField *textField
 @property  @? textChangeHandler
 @property  @? returnKeyHandler
 @property  BOOL editable
 @property  BOOL hideLabel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[WFTextFieldCell awakeFromNib]
  -[WFTextFieldCell copy:]
  -[WFTextFieldCell textField]
  -[WFTextFieldCell stackViewBottomConstraint]
  -[WFTextFieldCell becomeFirstResponder]
  -[WFTextFieldCell canPerformAction:withSender:]
  -[WFTextFieldCell setSelected:animated:]
  -[WFTextFieldCell textFieldDidChange:]
  -[WFTextFieldCell stackView]
  -[WFTextFieldCell dealloc]
  -[WFTextFieldCell .cxx_destruct]
  -[WFTextFieldCell label]
  -[WFTextFieldCell canBecomeFirstResponder]
  -[WFTextFieldCell setAccessoryType:]
  -[WFTextFieldCell prepareForReuse]
  -[WFTextFieldCell editable]
  -[WFTextFieldCell setTextField:]
  -[WFTextFieldCell textFieldShouldBeginEditing:]
  -[WFTextFieldCell traitCollectionDidChange:]
  -[WFTextFieldCell setEditable:]
  -[WFTextFieldCell setLabel:]
  -[WFTextFieldCell setStackView:]
  -[WFTextFieldCell _verticalPadding]
  -[WFTextFieldCell setEditing:animated:]
  -[WFTextFieldCell trailingMarginConstraint]
  -[WFTextFieldCell setTrailingMarginConstraint:]
  -[WFTextFieldCell stackViewTopConstraint]
  -[WFTextFieldCell setStackViewTopConstraint:]
  -[WFTextFieldCell setStackViewBottomConstraint:]
  -[WFTextFieldCell returnKeyHandler]
  -[WFTextFieldCell setReturnKeyHandler:]
  -[WFTextFieldCell textFieldDidEndEditingExit:]
  -[WFTextFieldCell _adjustStackViewPadding]
  -[WFTextFieldCell _updateStackViewForTraitCollection]
  -[WFTextFieldCell labelWidthConstraint]
  -[WFTextFieldCell textChangeHandler]
  -[WFTextFieldCell stackViewLeadingConstraint]
  -[WFTextFieldCell setHideLabel:]
  -[WFTextFieldCell setTextChangeHandler:]
  -[WFTextFieldCell hideLabel]
  -[WFTextFieldCell setLabelWidthConstraint:]
  -[WFTextFieldCell setStackViewLeadingConstraint:]


WFWebSheetViewController : UIViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo <WFRemoteWebSheetViewControllerDelegate, WFNetworkView>
 @property  _UIAsyncInvocation *cancelServiceInvocation
 @property  WFRemoteWebSheetViewController *remoteViewController
 @property  <WFWebSheetViewControllerDelegate> *delegate
 @property  BOOL wantsModalPresentation

  // instance methods
  -[WFWebSheetViewController initWithDelegate:]
  -[WFWebSheetViewController dealloc]
  -[WFWebSheetViewController .cxx_destruct]
  -[WFWebSheetViewController _requestRemoteViewController]
  -[WFWebSheetViewController setCancelServiceInvocation:]
  -[WFWebSheetViewController cancelServiceInvocation]
  -[WFWebSheetViewController _finishSetupWithError:]
  -[WFWebSheetViewController wantsModalPresentation]
  -[WFWebSheetViewController setRemoteViewController:]
  -[WFWebSheetViewController setDelegate:]
  -[WFWebSheetViewController delegate]
  -[WFWebSheetViewController remoteViewController]
  -[WFWebSheetViewController remoteWebSheetViewController:handleEvent:context:]
  -[WFWebSheetViewController _showRemoteViewController]
  -[WFWebSheetViewController webSheetViewControllerServiceShouldTerminate]


WFChooseNetworkHeaderViewController : UIViewController /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  UIActivityIndicatorView *activityIndicatorView
 @property  NSString *title
 @property  BOOL animating
 @property  UILabel *label

  // instance methods
  -[WFChooseNetworkHeaderViewController viewDidLoad]
  -[WFChooseNetworkHeaderViewController init]
  -[WFChooseNetworkHeaderViewController animating]
  -[WFChooseNetworkHeaderViewController .cxx_destruct]
  -[WFChooseNetworkHeaderViewController label]
  -[WFChooseNetworkHeaderViewController setTitle:]
  -[WFChooseNetworkHeaderViewController setAnimating:]
  -[WFChooseNetworkHeaderViewController title]
  -[WFChooseNetworkHeaderViewController traitCollectionDidChange:]
  -[WFChooseNetworkHeaderViewController setLabel:]
  -[WFChooseNetworkHeaderViewController activityIndicatorView]
  -[WFChooseNetworkHeaderViewController setActivityIndicatorView:]


WFKnownNetworksStyle1TableViewCell : UITableViewCell /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
  // instance methods
  -[WFKnownNetworksStyle1TableViewCell initWithStyle:reuseIdentifier:]


WFAssociationStateView : UIView /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo
 @property  UIActivityIndicatorView *activityIndicator
 @property  UIImageView *imageView
 @property  long long state

  // instance methods
  -[WFAssociationStateView imageView]
  -[WFAssociationStateView setImageView:]
  -[WFAssociationStateView setState:]
  -[WFAssociationStateView .cxx_destruct]
  -[WFAssociationStateView state]
  -[WFAssociationStateView activityIndicator]
  -[WFAssociationStateView setActivityIndicator:]
  -[WFAssociationStateView layoutSubviews]


WFBuddyViewController : OBTableWelcomeController /usr/lib/libMobileGestalt.dylib <UITableViewDelegate, UITableViewDataSource, WFNetworkListing>
 @property  NSArray *sortedNetworks
 @property  <WFNetworkListDelegate> *listDelegate
 @property  NSString *alternateSetupTitle
 @property  NSString *alternateSetupFooter
 @property  UIView *buddyIPadContainerView
 @property  NSOrderedSet *sections
 @property  UISwitch *enableWAPISwitch
 @property  BOOL tableViewIsUpdating
 @property  BOOL networkResultsChangedWhileUIUpdates
 @property  BOOL tableReloadRequestQueued
 @property  NSArray *pendingNetworks
 @property  OBAnimationController *animationController
 @property  BOOL showNetworkSettings
 @property  BOOL showAdditionalSetupInfo
 @property  BOOL supportsCellularActivation
 @property  <WFBuddyViewControllerDelegate> *buddyDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL showOtherNetwork
 @property  float currentNetworkScaledRSSI
 @property  <WFNetworkListRecord> *currentNetwork
 @property  long long currentNetworkState
 @property  unsigned long currentNetworkSignalBars
 @property  long long deviceCapability
 @property  NSString *currentNetworkSubtitle
 @property  BOOL disabled
 @property  BOOL userAutoJoinEnabled

  // instance methods
  -[WFBuddyViewController viewDidLoad]
  -[WFBuddyViewController refresh]
  -[WFBuddyViewController tableView:heightForRowAtIndexPath:]
  -[WFBuddyViewController tableView:heightForHeaderInSection:]
  -[WFBuddyViewController setSections:]
  -[WFBuddyViewController setNetworks:]
  -[WFBuddyViewController init]
  -[WFBuddyViewController tableView:heightForFooterInSection:]
  -[WFBuddyViewController tableView:numberOfRowsInSection:]
  -[WFBuddyViewController tableView:didSelectRowAtIndexPath:]
  -[WFBuddyViewController setAnimationController:]
  -[WFBuddyViewController tableView:accessoryButtonTappedForRowWithIndexPath:]
  -[WFBuddyViewController .cxx_destruct]
  -[WFBuddyViewController setCurrentNetwork:]
  -[WFBuddyViewController tableView:cellForRowAtIndexPath:]
  -[WFBuddyViewController tableView:willDisplayFooterView:forSection:]
  -[WFBuddyViewController numberOfSectionsInTableView:]
  -[WFBuddyViewController listDelegate]
  -[WFBuddyViewController setListDelegate:]
  -[WFBuddyViewController viewDidAppear:]
  -[WFBuddyViewController sections]
  -[WFBuddyViewController viewWillAppear:]
  -[WFBuddyViewController tableView:titleForFooterInSection:]
  -[WFBuddyViewController _canShowWhileLocked]
  -[WFBuddyViewController viewDidDisappear:]
  -[WFBuddyViewController currentNetwork]
  -[WFBuddyViewController animationController]
  -[WFBuddyViewController powerStateDidChange:]
  -[WFBuddyViewController deviceCapability]
  -[WFBuddyViewController setDeviceCapability:]
  -[WFBuddyViewController setShowOtherNetwork:]
  -[WFBuddyViewController setCurrentNetworkScaledRSSI:]
  -[WFBuddyViewController setCurrentNetworkState:]
  -[WFBuddyViewController currentNetworkState]
  -[WFBuddyViewController _nameOfSection:]
  -[WFBuddyViewController pendingNetworks]
  -[WFBuddyViewController _enableWAPISwitchChanged:]
  -[WFBuddyViewController showOtherNetwork]
  -[WFBuddyViewController currentNetworkScaledRSSI]
  -[WFBuddyViewController networkListDelegateWillPresentAccessoryViewController:]
  -[WFBuddyViewController tableViewIsUpdating]
  -[WFBuddyViewController setTableViewIsUpdating:]
  -[WFBuddyViewController networkResultsChangedWhileUIUpdates]
  -[WFBuddyViewController setNetworkResultsChangedWhileUIUpdates:]
  -[WFBuddyViewController setPendingNetworks:]
  -[WFBuddyViewController sortedNetworks]
  -[WFBuddyViewController _cellForNetworkRecord:tableView:indexPath:]
  -[WFBuddyViewController setSortedNetworks:]
  -[WFBuddyViewController setSupportsCellularActivation:]
  -[WFBuddyViewController _refreshSections]
  -[WFBuddyViewController _notifyBuddyWiFiPickerIsVisble:]
  -[WFBuddyViewController setAlternateSetupTitle:]
  -[WFBuddyViewController setAlternateSetupFooter:]
  -[WFBuddyViewController _updateCellsWithNewData:oldData:inSection:]
  -[WFBuddyViewController showAdditionalSetupInfo]
  -[WFBuddyViewController _debugSectionStringFromSections:]
  -[WFBuddyViewController showNetworkSettings]
  -[WFBuddyViewController alternateSetupTitle]
  -[WFBuddyViewController enableWAPISwitch]
  -[WFBuddyViewController alternateSetupFooter]
  -[WFBuddyViewController _chooseOtherNetworkTapped:]
  -[WFBuddyViewController buddyDelegate]
  -[WFBuddyViewController setShowNetworkSettings:]
  -[WFBuddyViewController setShowAdditionalSetupInfo:]
  -[WFBuddyViewController supportsCellularActivation]
  -[WFBuddyViewController setBuddyDelegate:]
  -[WFBuddyViewController buddyIPadContainerView]
  -[WFBuddyViewController setBuddyIPadContainerView:]
  -[WFBuddyViewController setEnableWAPISwitch:]
  -[WFBuddyViewController tableReloadRequestQueued]
  -[WFBuddyViewController setTableReloadRequestQueued:]


UIDevice(WiFiKitUI)
	// class methods
	+[UIDevice(WiFiKitUI) currentIsIPad]

(WiFiKitUI)
	// instance methods
	-[(WiFiKitUI) isEmpty]
	-[(WiFiKitUI) formattedWiFiAddress]
	-[(WiFiKitUI) isValidIPv4Address]
	-[(WiFiKitUI) isValidSubnetMask]

(WiFiKitUI)
	// instance methods
	-[(WiFiKitUI) knownNetworks]
	-[(WiFiKitUI) infrastructureNetworks]
	-[(WiFiKitUI) instantHotspotNetworks]
	-[(WiFiKitUI) popularNetworks]
	-[(WiFiKitUI) adhocNetworks]
	-[(WiFiKitUI) unconfiguredNetworks]

(WiFiKitUI)
	// instance methods
	-[(WiFiKitUI) arrayAfterFilteringOutEmptyStrings]
	-[(WiFiKitUI) stringFromContentsOfArrayWithDelimiter:]
	-[(WiFiKitUI) stringFromContentsOfArray]

UITraitCollection(WiFiKitUI)
	// instance methods
	-[UITraitCollection(WiFiKitUI) isLargeTextTraitCollection]

UIFont(WiFiKitUI)
	// class methods
	+[UIFont(WiFiKitUI) preferredFontForStyle:weight:]

(WiFiKitUI)
	// instance methods
	-[(WiFiKitUI) stringFromDHCPLeaseExpirationDateWithFormatString:]
	-[(WiFiKitUI) isTodayWithCalendar:]

01 00 0100 /System/Library/PrivateFrameworks/SetupAssistantUI.framework/SetupAssistantUI: BFFStyle 
01 00 0200 /System/Library/PrivateFrameworks/CarKit.framework/CarKit: CRPairedVehicleManager 
01 00 1200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0a00 /System/Library/Frameworks/MapKit.framework/MapKit: MKMapView 
01 00 0a00 /System/Library/Frameworks/MapKit.framework/MapKit: MKPinAnnotationView 
01 00 0a00 /System/Library/Frameworks/MapKit.framework/MapKit: MKPointAnnotation 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantDoubleNumber 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0f00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1100 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0e00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0300 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBAnimationController 
01 00 0300 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBAnimationState 
01 00 0300 /System/Library/PrivateFrameworks/OnBoardingKit.framework/OnBoardingKit: OBTableWelcomeController 
01 00 0d00 /System/Library/PrivateFrameworks/Preferences.framework/Preferences: PSSpecifier 
01 00 0800 /System/Library/PrivateFrameworks/CertInfo.framework/CertInfo: TrustCertificateViewController 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageSymbolConfiguration 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIKeyboard 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UINib 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIPasteboard 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIStackView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UISwitch 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewCell 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewController 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UITableViewHeaderFooterView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UITextView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBatteryView 
01 00 0700 /System/Library/Frameworks/UIKit.framework/UIKit: _UIRemoteViewController 
