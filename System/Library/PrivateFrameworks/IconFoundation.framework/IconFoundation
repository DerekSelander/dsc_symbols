|| __DATA_CONST.__const _IFImageSpecificationTagAll
|| __DATA_CONST.__const _IFImageSpecificationTagAppStore
|| __DATA_CONST.__const _IFImageSpecificationTagHomeScreen
|| __DATA_CONST.__const _IFImageSpecificationTagInternal
|| __DATA_CONST.__const _IFImageSpecificationTagOptional
|| __DATA_CONST.__const _IFImageSpecificationTagPrivate
|| __DATA_CONST.__const _IFImageSpecificationTagRecomended
|| __DATA_CONST.__const _IFImageSpecificationTagRequired
|| __DATA_CONST.__const _IFImageSpecificationTagiPad
|| __DATA_CONST.__const _IFImageSpecificationTagiPhone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFBundle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFCacheImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFColor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFConcreteImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFGraphicSymbolDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFGraphicSymbolDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFGraphicsContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFIconSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFImageBag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFImageSpecification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFPDFDocument
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFPDFPage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFPlaceholderImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFResourceMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFSymbol
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFSymbolImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IFSymbolImageDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ISCGImageBlockSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ISImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ISPlaceholderImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ISSymbolImage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_ISVariantIconSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFBundle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFCacheImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFColor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFConcreteImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFGraphicSymbolDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFGraphicSymbolDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFGraphicsContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFIconSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFImageBag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFImageSpecification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFPDFDocument
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFPDFPage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFPlaceholderImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFResourceMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFSymbol
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFSymbolImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IFSymbolImageDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ISCGImageBlockSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ISImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ISPlaceholderImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ISSymbolImage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_ISVariantIconSpecification
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBundleCopyBundleURL
__ CoreFoundation: _CFBundleCopyLocalizedString
__ CoreFoundation: _CFBundleCopyResourceURL
__ CoreFoundation: _CFBundleCopyResourceURLsOfType
__ CoreFoundation: _CFBundleGetIdentifier
__ CoreFoundation: _CFBundleGetInfoDictionary
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFURLCopyResourcePropertyForKey
__ CoreFoundation: _NSURLAttributeModificationDateKey
__ CoreFoundation: _NSURLContentModificationDateKey
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsAliasFileKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLIsSymbolicLinkKey
__ CoreFoundation: _NSURLIsVolumeKey
__ CoreFoundation: _NSURLTypeIdentifierKey
__ CoreFoundation: _NSURLVolumeIsRootFileSystemKey
__ CoreFoundation: _NSURLVolumeURLKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: __CFBundleCreateUnique
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: _kCFBooleanTrue
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGBitmapContextGetBytesPerRow
__ CoreGraphics: _CGBitmapContextGetData
__ CoreGraphics: _CGBitmapContextGetHeight
__ CoreGraphics: _CGBitmapContextGetWidth
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorCreateCopyWithAlpha
__ CoreGraphics: _CGColorGetAlpha
__ CoreGraphics: _CGColorSpaceCreateDeviceGray
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextClear
__ CoreGraphics: _CGContextClearRect
__ CoreGraphics: _CGContextClipToMask
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextDrawImage
__ CoreGraphics: _CGContextDrawPDFPage
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextFlush
__ CoreGraphics: _CGContextGetBlendMode
__ CoreGraphics: _CGContextGetCTM
__ CoreGraphics: _CGContextGetClipBoundingBox
__ CoreGraphics: _CGContextGetFillColorAsColor
__ CoreGraphics: _CGContextGetLineWidth
__ CoreGraphics: _CGContextGetStrokeColorAsColor
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBlendMode
__ CoreGraphics: _CGContextSetCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetShouldAntialias
__ CoreGraphics: _CGContextSetShouldSmoothFonts
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextSetTextDrawingMode
__ CoreGraphics: _CGContextSetTextMatrix
__ CoreGraphics: _CGContextSetTextPosition
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextStrokeRect
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithData
__ CoreGraphics: _CGImageBlockCreate
__ CoreGraphics: _CGImageBlockSetCreate
__ CoreGraphics: _CGImageBlockSetRelease
__ CoreGraphics: _CGImageBlockSetRetain
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageCreateWithImageProvider
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetImageProvider
__ CoreGraphics: _CGImageGetProperty
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageProviderCopyImageBlockSet
__ CoreGraphics: _CGImageProviderCreate
__ CoreGraphics: _CGImageProviderGetColorSpace
__ CoreGraphics: _CGImageProviderGetComponentType
__ CoreGraphics: _CGImageProviderGetSize
__ CoreGraphics: _CGImageSetProperty
__ CoreGraphics: _CGPDFDocumentCreateWithURL
__ CoreGraphics: _CGPDFDocumentGetNumberOfPages
__ CoreGraphics: _CGPDFDocumentGetPage
__ CoreGraphics: _CGPDFPageGetBoxRect
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreGraphics: _kCGImageProviderAlphaIsPremultiplied
__ CoreImage: _OBJC_CLASS_$_CIColor
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _kUTTypeData
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypePNG
__ CoreText: _CTFontCreateUIFontForLanguage
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineDraw
__ CoreText: _CTLineGetImageBounds
__ CoreText: _CTLineGetTypographicBounds
__ CoreText: _kCTFontAttributeName
__ CoreText: _kCTForegroundColorAttributeName
__ CoreUI: _OBJC_CLASS_$_CUICatalog
__ CoreUI: _OBJC_CLASS_$_CUIDesignLibrary
__ CoreUI: _OBJC_CLASS_$_CUIVectorGlyphGraphicVariantOptions
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCopyPropertiesAtIndex
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithURL
__ ImageIO: _CGImageSourceGetCount
__ ImageIO: _kCGImagePropertyDPIHeight
__ ImageIO: _kCGImagePropertyDPIWidth
__ libMobileGestalt.dylib: _MGGetFloat32Answer
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _getxattr
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _removexattr
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _uuid_clear
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
ISVariantIconSpecification : IFIconSpecification

IFIconSpecification : NSObject
 @property  NSArray *imageSpecifications
 @property  NSString *name
 @property  {CGSize=dd} maxSize
 @property  {CGSize=dd} minSize
 @property  double maxScale
 @property  double minScale
 @property  NSArray *allImageSpecifications
 @property  NSArray *variants
 @property  NSArray *allVariants

  // class methods
  +[IFIconSpecification macosDocumentIconSpecification]
  +[IFIconSpecification iosAppIconSpecification]
  +[IFIconSpecification iosDocumentIconSpecification]
  +[IFIconSpecification defaultIconSpecification]
  +[IFIconSpecification iosMessagesAppIconSpecification]
  +[IFIconSpecification macosIconSpecification]
  +[IFIconSpecification macosTemplateIconSpecification]
  +[IFIconSpecification iosDocumentGlyphSpecification]
  +[IFIconSpecification watchAppIconSpecification]

  // instance methods
  -[IFIconSpecification maxScale]
  -[IFIconSpecification imageSpecificationForSize:scale:]
  -[IFIconSpecification maxSize]
  -[IFIconSpecification imageSpecificationsMatchingPredicate:]
  -[IFIconSpecification allVariants]
  -[IFIconSpecification minSize]
  -[IFIconSpecification variants]
  -[IFIconSpecification .cxx_destruct]
  -[IFIconSpecification _initWithName:imageSpecifiactions:variants:]
  -[IFIconSpecification imageSpecifications]
  -[IFIconSpecification allImageSpecifications]
  -[IFIconSpecification name]
  -[IFIconSpecification minScale]
  -[IFIconSpecification init]
  -[IFIconSpecification imageSpecificationsWithTags:withoutTags:]


ISImage : IFImage

ISPlaceholderImage : IFPlaceholderImage

ISSymbolImage : IFSymbolImage

IFImageSpecification : NSObject
 @property  IFImageSpecification *smallerSpecification
 @property  IFImageSpecification *largerSpecification
 @property  {CGSize=dd} size
 @property  double scale
 @property  {CGSize=dd} pixelsSize
 @property  NSSet *tags

  // instance methods
  -[IFImageSpecification dimension]
  -[IFImageSpecification pixelSize]
  -[IFImageSpecification pixelsSize]
  -[IFImageSpecification minimumSize]
  -[IFImageSpecification setLargerSpecification:]
  -[IFImageSpecification tags]
  -[IFImageSpecification setSmallerSpecification:]
  -[IFImageSpecification .cxx_destruct]
  -[IFImageSpecification size]
  -[IFImageSpecification scale]
  -[IFImageSpecification initWithSize:scale:tags:]
  -[IFImageSpecification largerSpecification]
  -[IFImageSpecification isEqualToImageSpecification:]
  -[IFImageSpecification smallerSpecification]
  -[IFImageSpecification isEqual:]


IFGraphicSymbolDefaults : NSObject
 @property  NSString *symbolName
 @property  long long shape
 @property  long long renderingMode
 @property  long long symbolColor
 @property  long long symbolColorAlternate
 @property  long long enclosureColor
 @property  long long enclosureColorAlternate
 @property  long long fill
 @property  double enclosureSizeMultiplier

  // class methods
  +[IFGraphicSymbolDefaults sharedInstance]

  // instance methods
  -[IFGraphicSymbolDefaults enclosureColor]
  -[IFGraphicSymbolDefaults renderingMode]
  -[IFGraphicSymbolDefaults shape]
  -[IFGraphicSymbolDefaults .cxx_destruct]
  -[IFGraphicSymbolDefaults symbolName]
  -[IFGraphicSymbolDefaults symbolColor]
  -[IFGraphicSymbolDefaults init]
  -[IFGraphicSymbolDefaults fill]
  -[IFGraphicSymbolDefaults symbolColorAlternate]
  -[IFGraphicSymbolDefaults enclosureColorAlternate]
  -[IFGraphicSymbolDefaults enclosureSizeMultiplier]


IFGraphicSymbolDescriptor : IFSymbolImageDescriptor <NSCopying>
 @property  NSString *name
 @property  long long appearance
 @property  long long contrast
 @property  long long vibrancy
 @property  {CGSize=dd} symbolOffset
 @property  long long symbolEffect
 @property  long long enclosureEffect
 @property  BOOL debugColourSet
 @property  long long shape
 @property  long long fill
 @property  long long resolvedShape
 @property  long long resolvedSymbolEffect
 @property  long long resolvedEnclosureEffect
 @property  long long resolvedFill
 @property  NSArray *resolvedSymbolColors
 @property  NSArray *resolvedEnclosureColors
 @property  NSDictionary *symbolOverrides
 @property  BOOL flipXOffsetOverride
 @property  NSString *resolvedName
 @property  {CGSize=dd} size
 @property  NSArray *enclosureColors
 @property  NSArray *symbolColors
 @property  long long renderingMode

  // class methods
  +[IFGraphicSymbolDescriptor overrides]

  // instance methods
  -[IFGraphicSymbolDescriptor setShape:]
  -[IFGraphicSymbolDescriptor setAppearance:]
  -[IFGraphicSymbolDescriptor appearance]
  -[IFGraphicSymbolDescriptor setRenderingMode:]
  -[IFGraphicSymbolDescriptor pointSize]
  -[IFGraphicSymbolDescriptor setVibrancy:]
  -[IFGraphicSymbolDescriptor renderingMode]
  -[IFGraphicSymbolDescriptor shape]
  -[IFGraphicSymbolDescriptor contrast]
  -[IFGraphicSymbolDescriptor setContrast:]
  -[IFGraphicSymbolDescriptor .cxx_destruct]
  -[IFGraphicSymbolDescriptor size]
  -[IFGraphicSymbolDescriptor symbolSize]
  -[IFGraphicSymbolDescriptor setName:]
  -[IFGraphicSymbolDescriptor copyWithZone:]
  -[IFGraphicSymbolDescriptor name]
  -[IFGraphicSymbolDescriptor setSize:]
  -[IFGraphicSymbolDescriptor vibrancy]
  -[IFGraphicSymbolDescriptor init]
  -[IFGraphicSymbolDescriptor fill]
  -[IFGraphicSymbolDescriptor setFill:]
  -[IFGraphicSymbolDescriptor setDebugColourSet:]
  -[IFGraphicSymbolDescriptor setEnclosureColors:]
  -[IFGraphicSymbolDescriptor enclosureColors]
  -[IFGraphicSymbolDescriptor setSymbolColors:]
  -[IFGraphicSymbolDescriptor symbolColors]
  -[IFGraphicSymbolDescriptor symbolWeight]
  -[IFGraphicSymbolDescriptor _isDebugGraphicIconColourEnabled]
  -[IFGraphicSymbolDescriptor _debugDynamicGraphicIconColor]
  -[IFGraphicSymbolDescriptor _colorForIFSystemColor:]
  -[IFGraphicSymbolDescriptor _resolvedColorsForColors:defaultColor:]
  -[IFGraphicSymbolDescriptor _defaultSymbolColor]
  -[IFGraphicSymbolDescriptor _defaultEnclosureColor]
  -[IFGraphicSymbolDescriptor resolvedSymbolColors]
  -[IFGraphicSymbolDescriptor resolvedEnclosureColors]
  -[IFGraphicSymbolDescriptor resolvedRenderingModeFromSuggestedMode:]
  -[IFGraphicSymbolDescriptor resolvedShape]
  -[IFGraphicSymbolDescriptor resolvedFill]
  -[IFGraphicSymbolDescriptor resolvedSymbolEffect]
  -[IFGraphicSymbolDescriptor resolvedEnclosureEffect]
  -[IFGraphicSymbolDescriptor resolvedName]
  -[IFGraphicSymbolDescriptor symbolOverrides]
  -[IFGraphicSymbolDescriptor _overridesShapeStringForShape]
  -[IFGraphicSymbolDescriptor _overridesPointSizeToShapeMultiplier]
  -[IFGraphicSymbolDescriptor symbolOffset]
  -[IFGraphicSymbolDescriptor setSymbolOffset:]
  -[IFGraphicSymbolDescriptor symbolEffect]
  -[IFGraphicSymbolDescriptor setSymbolEffect:]
  -[IFGraphicSymbolDescriptor enclosureEffect]
  -[IFGraphicSymbolDescriptor setEnclosureEffect:]
  -[IFGraphicSymbolDescriptor debugColourSet]
  -[IFGraphicSymbolDescriptor setResolvedShape:]
  -[IFGraphicSymbolDescriptor setResolvedSymbolEffect:]
  -[IFGraphicSymbolDescriptor setResolvedEnclosureEffect:]
  -[IFGraphicSymbolDescriptor setResolvedFill:]
  -[IFGraphicSymbolDescriptor setResolvedSymbolColors:]
  -[IFGraphicSymbolDescriptor setResolvedEnclosureColors:]
  -[IFGraphicSymbolDescriptor flipXOffsetOverride]
  -[IFGraphicSymbolDescriptor setFlipXOffsetOverride:]
  -[IFGraphicSymbolDescriptor setResolvedName:]


IFBundle : NSObject
 @property  ^{__CFBundle=} bundle
 @property  NSDictionary *infoDictionary
 @property  NSURL *bundleURL
 @property  NSString *bundleID
 @property  NSURL *assetCatalogURL
 @property  NSDictionary *iconDictionary
 @property  BOOL coreTypes

  // class methods
  +[IFBundle mainBundle]
  +[IFBundle frameworkBundle]
  +[IFBundle bundleWithURL:]
  +[IFBundle iconFoundationFrameworkBundle]
  +[IFBundle iconsetResourceBundle]
  +[IFBundle mobileIconsFrameworkBundle]
  +[IFBundle coreTypesBundle]
  +[IFBundle coreGlyphsBundle]
  +[IFBundle coreGlyphsPrivateBundle]
  +[IFBundle appIconOverrideBundle]
  +[IFBundle iconsetResourceAssetsCatalogURL]
  +[IFBundle frameworkLocalizedString:]

  // instance methods
  -[IFBundle bundle]
  -[IFBundle infoDictionary]
  -[IFBundle initWithURL:]
  -[IFBundle bundleURL]
  -[IFBundle setBundle:]
  -[IFBundle dealloc]
  -[IFBundle bundleID]
  -[IFBundle localizedStringForKey:value:table:]
  -[IFBundle URLForResource:withExtension:]
  -[IFBundle URLForResource:withExtension:subdirectory:]
  -[IFBundle URLsForResourcesWithExtension:subdirectory:]
  -[IFBundle iconDictionary]
  -[IFBundle URLForResource:]
  -[IFBundle assetCatalogURL]
  -[IFBundle initWithCFBundle:]
  -[IFBundle isCoreTypes]


IFSymbolImage : IFImage
 @property  CUINamedVectorGlyph *vectorGlyph
 @property  double pointSize
 @property  unsigned long symbolSize
 @property  long long symbolWeight
 @property  double referencePointSize
 @property  double fontMatchingScaleFactor
 @property  double baselineOffset
 @property  double capHeight
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} alignmentRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contentBounds
 @property  BOOL flippable
 @property  long long layoutDirection

  // instance methods
  -[IFSymbolImage pointSize]
  -[IFSymbolImage dealloc]
  -[IFSymbolImage .cxx_destruct]
  -[IFSymbolImage layoutDirection]
  -[IFSymbolImage vectorGlyph]
  -[IFSymbolImage size]
  -[IFSymbolImage scale]
  -[IFSymbolImage symbolSize]
  -[IFSymbolImage contentBounds]
  -[IFSymbolImage CGImage]
  -[IFSymbolImage referencePointSize]
  -[IFSymbolImage baselineOffset]
  -[IFSymbolImage alignmentRect]
  -[IFSymbolImage capHeight]
  -[IFSymbolImage isFlippable]
  -[IFSymbolImage fontMatchingScaleFactor]
  -[IFSymbolImage initWithNamedVectorGlyph:]
  -[IFSymbolImage symbolWeight]
  -[IFSymbolImage setVectorGlyph:]


IFResourceMetadata : NSObject <IFResourceMetadata>
 @property  NSString *name
 @property  NSNumber *dimension
 @property  NSNumber *scale
 @property  BOOL selectedVariant
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[IFResourceMetadata metadataWithFileName:]

  // instance methods
  -[IFResourceMetadata dimension]
  -[IFResourceMetadata .cxx_destruct]
  -[IFResourceMetadata setDimension:]
  -[IFResourceMetadata scale]
  -[IFResourceMetadata setName:]
  -[IFResourceMetadata name]
  -[IFResourceMetadata setSelectedVariant:]
  -[IFResourceMetadata setScale:]
  -[IFResourceMetadata selectedVariant]


IFSymbol : NSObject <NSSecureCoding>
 @property  CUICatalog *catalog
 @property  {os_unfair_lock_s=I} lock
 @property  NSURL *bundleURL
 @property  NSString *name

  // class methods
  +[IFSymbol supportsSecureCoding]
  +[IFSymbol coreGlyphsCatalog]
  +[IFSymbol coreGlyphsPrivateCatalog]

  // instance methods
  -[IFSymbol catalog]
  -[IFSymbol imageForSize:scale:]
  -[IFSymbol bundleURL]
  -[IFSymbol imageForDescriptor:]
  -[IFSymbol encodeWithCoder:]
  -[IFSymbol .cxx_destruct]
  -[IFSymbol name]
  -[IFSymbol setLock:]
  -[IFSymbol lock]
  -[IFSymbol initWithCoder:]
  -[IFSymbol initWithSymbolName:bundleURL:]
  -[IFSymbol imageForGraphicSymbolDescriptor:]
  -[IFSymbol _lookupResolvedName:]
  -[IFSymbol _shouldFlipFromSymbolImage:desiredDirection:]


IFSymbolImageDescriptor : NSObject <NSCopying>
 @property  double pointSize
 @property  double scale
 @property  unsigned long symbolSize
 @property  long long symbolWeight
 @property  long long layoutDirection

  // instance methods
  -[IFSymbolImageDescriptor digest]
  -[IFSymbolImageDescriptor weight]
  -[IFSymbolImageDescriptor setWeight:]
  -[IFSymbolImageDescriptor pointSize]
  -[IFSymbolImageDescriptor setPointSize:]
  -[IFSymbolImageDescriptor setLayoutDirection:]
  -[IFSymbolImageDescriptor layoutDirection]
  -[IFSymbolImageDescriptor size]
  -[IFSymbolImageDescriptor setSymbolSize:]
  -[IFSymbolImageDescriptor scale]
  -[IFSymbolImageDescriptor symbolSize]
  -[IFSymbolImageDescriptor copyWithZone:]
  -[IFSymbolImageDescriptor setSize:]
  -[IFSymbolImageDescriptor setScale:]
  -[IFSymbolImageDescriptor init]
  -[IFSymbolImageDescriptor symbolWeight]
  -[IFSymbolImageDescriptor setSymbolWeight:]


IFColor : NSObject <NSSecureCoding>
 @property  ^{CGColor=} cgColor
 @property  CIColor *ciColor
 @property  NSUUID *digest

  // class methods
  +[IFColor supportsSecureCoding]
  +[IFColor white]
  +[IFColor deviceGreyColorSpace]
  +[IFColor black]
  +[IFColor deviceRGBColorSpace]

  // instance methods
  -[IFColor digest]
  -[IFColor initWithCGColor:]
  -[IFColor initWithSystemColor:]
  -[IFColor initWithWhite:alpha:]
  -[IFColor initWithSystemColor:appearance:contrast:vibrancy:]
  -[IFColor initWithRed:green:blue:alpha:]
  -[IFColor encodeWithCoder:]
  -[IFColor .cxx_destruct]
  -[IFColor cgColor]
  -[IFColor ciColor]
  -[IFColor initWithCIColor:]
  -[IFColor initWithCoder:]


ISCGImageBlockSet : NSObject
 @property  ^{CGImageBlockSet=} blockSet

  // instance methods
  -[ISCGImageBlockSet dealloc]
  -[ISCGImageBlockSet blockSet]
  -[ISCGImageBlockSet setBlockSet:]
  -[ISCGImageBlockSet initWithBlockSet:]


IFImage : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL placeholder
 @property  NSUUID *uuid
 @property  NSData *validationToken
 @property  NSData *bitmapData
 @property  BOOL largest
 @property  double dimension
 @property  {CGSize=dd} minimumSize
 @property  BOOL placeholder
 @property  unsigned long validationFlags
 @property  {CGSize=dd} size
 @property  double scale
 @property  {CGSize=dd} pixelSize
 @property  ^{CGImage=} CGImage
 @property  ^{CGImage=} cgImage

  // class methods
  +[IFImage allocWithZone:]
  +[IFImage supportsSecureCoding]
  +[IFImage escapingCGImageWithCGImage:]
  +[IFImage createCGImageWithBitmapData:imageHeader:]
  +[IFImage imageWithContentsOfURL:]
  +[IFImage createCGImageWithBitmapData:]
  +[IFImage defaultCGColorSpace]

  // instance methods
  -[IFImage bitmapData]
  -[IFImage dimension]
  -[IFImage pixelSize]
  -[IFImage digest]
  -[IFImage validationToken]
  -[IFImage initWithData:uuid:validationToken:]
  -[IFImage writeToURL:]
  -[IFImage initWithContentsOfURL:]
  -[IFImage encodeWithCoder:]
  -[IFImage initWithCGImage:scale:]
  -[IFImage uuid]
  -[IFImage placeholder]
  -[IFImage cgImage]
  -[IFImage initWithCGImage:scale:minimumSize:placeholder:]
  -[IFImage _init]
  -[IFImage initWithCGImage:scale:placeholder:]
  -[IFImage initWithCoder:]
  -[IFImage setLargest:]
  -[IFImage initWithContentsOfURL:scale:]
  -[IFImage largest]
  -[IFImage initWithData:uuid:]


IFConcreteImage : IFImage
  // instance methods
  -[IFConcreteImage minimumSize]
  -[IFConcreteImage validationFlags]
  -[IFConcreteImage setMinimumSize:]
  -[IFConcreteImage dealloc]
  -[IFConcreteImage setValidationFlags:]
  -[IFConcreteImage placeholder]
  -[IFConcreteImage size]
  -[IFConcreteImage scale]
  -[IFConcreteImage copyWithZone:]
  -[IFConcreteImage _CGImage]
  -[IFConcreteImage CGImage]
  -[IFConcreteImage initWithCGImage:scale:minimumSize:placeholder:]
  -[IFConcreteImage setPlaceholder:]
  -[IFConcreteImage _init]
  -[IFConcreteImage initWithCGImage:scale:placeholder:]


IFCacheImage : IFConcreteImage <NSSecureCoding>
 @property  NSUUID *uuid
 @property  NSData *validationToken

  // class methods
  +[IFCacheImage supportsSecureCoding]

  // instance methods
  -[IFCacheImage validationToken]
  -[IFCacheImage initWithData:uuid:validationToken:]
  -[IFCacheImage encodeWithCoder:]
  -[IFCacheImage uuid]
  -[IFCacheImage .cxx_destruct]
  -[IFCacheImage initWithCGImage:scale:minimumSize:placeholder:]
  -[IFCacheImage initWithCoder:]


IFPlaceholderImage : IFImage
 @property  IFImage *image

  // instance methods
  -[IFPlaceholderImage validationToken]
  -[IFPlaceholderImage minimumSize]
  -[IFPlaceholderImage validationFlags]
  -[IFPlaceholderImage initWithImage:]
  -[IFPlaceholderImage .cxx_destruct]
  -[IFPlaceholderImage setValidationFlags:]
  -[IFPlaceholderImage placeholder]
  -[IFPlaceholderImage size]
  -[IFPlaceholderImage scale]
  -[IFPlaceholderImage image]
  -[IFPlaceholderImage CGImage]
  -[IFPlaceholderImage setPlaceholder:]


IFGraphicsContext : NSObject
 @property  unsigned long preset
 @property  ^{CGContext=} cgContext
 @property  double scale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  IFImage *image
 @property  NSData *data
 @property  IFColor *fillColor
 @property  IFColor *strokeColor
 @property  double lineWidth
 @property  {CGAffineTransform=dddddd} transform
 @property  int blendMode

  // class methods
  +[IFGraphicsContext bitmapContextWithSize:scale:preset:]

  // instance methods
  -[IFGraphicsContext setLineWidth:]
  -[IFGraphicsContext lineWidth]
  -[IFGraphicsContext imageFromRect:]
  -[IFGraphicsContext setFillColor:]
  -[IFGraphicsContext fillColor]
  -[IFGraphicsContext fillRect:]
  -[IFGraphicsContext fillPath:]
  -[IFGraphicsContext strokeRect:]
  -[IFGraphicsContext clipToMaskCGImage:inRect:]
  -[IFGraphicsContext clear]
  -[IFGraphicsContext preset]
  -[IFGraphicsContext dealloc]
  -[IFGraphicsContext blendMode]
  -[IFGraphicsContext strokePath:]
  -[IFGraphicsContext setStrokeColor:]
  -[IFGraphicsContext drawSymbolImage:centeredInRect:]
  -[IFGraphicsContext size]
  -[IFGraphicsContext setTransform:]
  -[IFGraphicsContext pushState]
  -[IFGraphicsContext drawText:fontName:fontSize:inRect:]
  -[IFGraphicsContext scale]
  -[IFGraphicsContext image]
  -[IFGraphicsContext setBlendMode:]
  -[IFGraphicsContext cgContext]
  -[IFGraphicsContext strokeColor]
  -[IFGraphicsContext bounds]
  -[IFGraphicsContext popState]
  -[IFGraphicsContext initWithCGContext:preset:]
  -[IFGraphicsContext drawCGImage:centeredInRect:]
  -[IFGraphicsContext drawCGImage:inRect:]
  -[IFGraphicsContext transform]
  -[IFGraphicsContext data]


IFImageBag : NSObject
 @property  NSMutableDictionary *imagesByScale
 @property  {os_unfair_lock_s=I} lock
 @property  NSArray *images

  // class methods
  +[IFImageBag imageBagWithResourcesNamed:fromBundle:]
  +[IFImageBag imageBagWithResourcesNames:fromBundle:]
  +[IFImageBag imageBagWithResourcesNamed:fromBundle:subdirectory:]
  +[IFImageBag imageBagWithResourcesNamed:directory:]

  // instance methods
  -[IFImageBag images]
  -[IFImageBag initWithImages:]
  -[IFImageBag imageForSize:scale:]
  -[IFImageBag imagesForScale:]
  -[IFImageBag setImagesByScale:]
  -[IFImageBag .cxx_destruct]
  -[IFImageBag imagesByScale]
  -[IFImageBag setLock:]
  -[IFImageBag lock]
  -[IFImageBag insertImage:]
  -[IFImageBag init]


IFPDFDocument : NSObject
 @property  ^{CGPDFDocument=} pdfDocument
 @property  NSURL *url
 @property  unsigned long numberOfPages

  // instance methods
  -[IFPDFDocument initWithURL:]
  -[IFPDFDocument dealloc]
  -[IFPDFDocument .cxx_destruct]
  -[IFPDFDocument pdfDocument]
  -[IFPDFDocument url]
  -[IFPDFDocument numberOfPages]
  -[IFPDFDocument pageAtIndex:]
  -[IFPDFDocument firstPage]
  -[IFPDFDocument setPdfDocument:]


IFPDFPage : NSObject
 @property  ^{CGPDFPage=} pdfPage

  // instance methods
  -[IFPDFPage imageForSize:scale:]
  -[IFPDFPage dealloc]
  -[IFPDFPage initWithCGPDFPage:]
  -[IFPDFPage pdfPage]
  -[IFPDFPage setPdfPage:]


(ISImage)
	// instance methods
	-[(ISImage) __IS_imageHeader]
	-[(ISImage) __IS_getImageBuffer:size:]
	-[(ISImage) __IS_copyCGImageBlockSetWithProvider:]

NSUUID(IconFoundationAdditions)
	// class methods
	+[NSUUID(IconFoundationAdditions) _IF_UUIDWithInt64:]
	+[NSUUID(IconFoundationAdditions) _IF_UUIDWithData:]
	+[NSUUID(IconFoundationAdditions) _IF_UUIDWithDouble:]
	+[NSUUID(IconFoundationAdditions) _IF_UUIDWithBytes:size:]
	+[NSUUID(IconFoundationAdditions) _IF_UUIDWithOSType:]
	+[NSUUID(IconFoundationAdditions) _IF_UUIDWithString:]
	+[NSUUID(IconFoundationAdditions) _IF_UUIDByXORingUUIDs:]
	+[NSUUID(IconFoundationAdditions) _IF_nullUUID]

	// instance methods
	-[NSUUID(IconFoundationAdditions) _IF_getUUIDBytes:hash64:]

(IconFoundationAdditions)
	// instance methods
	-[(IconFoundationAdditions) _IF_isOnBootVolume]
	-[(IconFoundationAdditions) _IF_extendedAttributeForName:]
	-[(IconFoundationAdditions) _IF_setExtendedAttribute:forName:error:]
	-[(IconFoundationAdditions) _IF_contentModifiedDate]
	-[(IconFoundationAdditions) _IF_getResourceValue:forKey:error:]
	-[(IconFoundationAdditions) _IF_attributeModifiedDate]
	-[(IconFoundationAdditions) _IF_modifiedDate]
	-[(IconFoundationAdditions) _IF_fileSize]
	-[(IconFoundationAdditions) _IF_isVolume]
	-[(IconFoundationAdditions) _IF_volumeURL]
	-[(IconFoundationAdditions) _IF_isBootVolume]
	-[(IconFoundationAdditions) _IF_isSymLink]
	-[(IconFoundationAdditions) _IF_isAliasFile]
	-[(IconFoundationAdditions) _IF_typeIdentifier]
	-[(IconFoundationAdditions) _IF_conformsToUTI:]
	-[(IconFoundationAdditions) _IF_isDirectory]

NSCoder(IconFoundationAdditions)
	// instance methods
	-[NSCoder(IconFoundationAdditions) _IF_decodeObjectOfClass:forKey:]

(IconFoundationAdditions)
	// instance methods
	-[(IconFoundationAdditions) _IF_arrayForKey:]
	-[(IconFoundationAdditions) _IF_boolForKey:]
	-[(IconFoundationAdditions) _IF_boolForKeys:defaultValue:]
	-[(IconFoundationAdditions) _IF_dictionaryAddingEntriesFromDictionary:]
	-[(IconFoundationAdditions) _IF_dictionaryForKey:]
	-[(IconFoundationAdditions) _IF_objectOfClass:forKey:]
	-[(IconFoundationAdditions) _IF_stringForKey:]
	-[(IconFoundationAdditions) _IF_stringForKeys:]
	-[(IconFoundationAdditions) _IF_numberForKey:]
	-[(IconFoundationAdditions) _IF_dataForKey:]
	-[(IconFoundationAdditions) _IF_boolForKey:defaultValue:]
	-[(IconFoundationAdditions) _IF_objectOfClass:forKeys:]
	-[(IconFoundationAdditions) _IF_numberForKeys:]
	-[(IconFoundationAdditions) _IF_arrayForKeys:]
	-[(IconFoundationAdditions) _IF_dictionaryForKeys:]
	-[(IconFoundationAdditions) _IF_boolForKeys:]

01 00 0700 /System/Library/Frameworks/CoreImage.framework/CoreImage: CIColor 
01 00 0600 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUICatalog 
01 00 0600 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUIDesignLibrary 
01 00 0600 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUIVectorGlyphGraphicVariantOptions 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0800 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
