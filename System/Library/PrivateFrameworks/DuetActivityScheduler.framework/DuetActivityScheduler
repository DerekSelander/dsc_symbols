|| __DATA.__common __DASActivityTransferSizeZero
|| __DATA.__common __DASMotionStateAny
|| __DATA.__data __DASActivityDurationInterminable
|| __DATA.__data __DASActivityDurationLong
|| __DATA.__data __DASActivityDurationModerate
|| __DATA.__data __DASActivityDurationShort
|| __DATA.__data __DASActivityDurationVeryLong
|| __DATA.__data __DASActivityDurationVeryShort
|| __DATA.__data __DASActivityTransferSizeGigantic
|| __DATA.__data __DASActivityTransferSizeLarge
|| __DATA.__data __DASActivityTransferSizeModerate
|| __DATA.__data __DASActivityTransferSizeSmall
|| __DATA.__data __DASActivityTransferSizeVeryLarge
|| __DATA.__data __DASActivityTransferSizeVerySmall
|| __DATA.__data __DASDefaultGroupName
|| __DATA.__data __DASDefaultNetworkGroupName
|| __DATA.__data __DASMotionStateAutomotive
|| __DATA.__data __DASMotionStateAutomotiveMoving
|| __DATA.__data __DASMotionStateAutomotiveStationary
|| __DATA.__data __DASMotionStateCycling
|| __DATA.__data __DASMotionStateRunning
|| __DATA.__data __DASMotionStateStationary
|| __DATA.__data __DASMotionStateWalking
|| __DATA.__data __DASSchedulingPriorityBackground
|| __DATA.__data __DASSchedulingPriorityDefault
|| __DATA.__data __DASSchedulingPriorityMaintenance
|| __DATA.__data __DASSchedulingPriorityUserInitiated
|| __DATA.__data __DASSchedulingPriorityUserInitiatedOvercommit
|| __DATA.__data __DASSchedulingPriorityUtility
|| __DATA.__data _kDASSystemContextKeyBypassDataBudget
|| __DATA.__data _kDASSystemContextKeyBypassEnergyBudget
|| __DATA.__data _kDASSystemContextKeyNetworkTask
|| __DATA.__data _kDASSystemContextKeyPushTask
|| __DATA_CONST.__const __DASActivitySchedulerErrorDomain
|| __DATA_CONST.__const __DASBudgetDictionaryKey
|| __DATA_CONST.__const __DASCTSBeforeApplicationLaunchKey
|| __DATA_CONST.__const __DASCTSBypassBatteryAgingProtectionKey
|| __DATA_CONST.__const __DASCTSBypassPeakPowerPressureKey
|| __DATA_CONST.__const __DASCTSClientDataBudgetKey
|| __DATA_CONST.__const __DASCTSMagneticInterferenceSensitivityKey
|| __DATA_CONST.__const __DASCTSMailFetchKey
|| __DATA_CONST.__const __DASCTSMinBatteryLevelKey
|| __DATA_CONST.__const __DASCTSMotionStateKey
|| __DATA_CONST.__const __DASCTSUserRequestedBackupActivityKey
|| __DATA_CONST.__const __DASDaemonServiceName
|| __DATA_CONST.__const __DASExtensionLaunchReasonMLCompute
|| __DATA_CONST.__const __DASLaunchOptionsNSURLSession
|| __DATA_CONST.__const __DASLaunchOptionsSignificantLocationChange
|| __DATA_CONST.__const __DASLaunchReasonApplicationSnapshot
|| __DATA_CONST.__const __DASLaunchReasonBackgroundFetch
|| __DATA_CONST.__const __DASLaunchReasonBackgroundNewsstand
|| __DATA_CONST.__const __DASLaunchReasonBackgroundProcessing
|| __DATA_CONST.__const __DASLaunchReasonBackgroundRefresh
|| __DATA_CONST.__const __DASLaunchReasonBackgroundRemoteNotification
|| __DATA_CONST.__const __DASLaunchReasonHealthKit
|| __DATA_CONST.__const __DASLaunchReasonNSURLSessionAuthorizationRequired
|| __DATA_CONST.__const __DASLaunchReasonNSURLSessionComplete
|| __DATA_CONST.__const __DASLaunchReasonSignificantLocationChange
|| __DATA_CONST.__const __DASLaunchReasonWatchConnectivityPendingData
|| __DATA_CONST.__const __DASNonRateLimitedLaunchKey
|| __DATA_CONST.__const __DASRemoteNotificationPayloadKey
|| __DATA_CONST.__const __DASRequiresSignificantUserInactivityKey
|| __DATA_CONST.__const __DASUpdateActivityDownloadedOnCellKey
|| __DATA_CONST.__const __DASUpdateActivityDownloadedOnWifiKey
|| __DATA_CONST.__const __DASUpdateActivityErrorKey
|| __DATA_CONST.__const __DASUpdateActivityPercentCompletedKey
|| __DATA_CONST.__const __DASUpdateActivityUploadedOnCellKey
|| __DATA_CONST.__const __DASUpdateActivityUploadedOnWifiKey
|| __DATA_CONST.__const __DASUpdateActivityXPCActivityClientStringKey
|| __DATA_CONST.__const __DASUpdateActivityXPCActivityNameKey
|| __DATA_CONST.__const _kDASBudgetKeyBundleIDs
|| __DATA_CONST.__const _kDASBudgetKeyDeviceWake
|| __DATA_CONST.__const _kDASBudgetKeyEffectiveDate
|| __DATA_CONST.__const _kDASBudgetKeyPIDs
|| __DATA_CONST.__const _kDASBudgetKeyProcessNames
|| __DATA_CONST.__const _kNWEndpointKey
|| __DATA_CONST.__const _kNWParametersKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASActivityGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASBudget
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASBudgetModulator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASExtension
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASExtensionRemoteContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASFileProtection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASPairedSystemContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASPriorityQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASSharedMemoryBudgetPersistence
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASStrings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASSubmissionRateLimiter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__DASSystemContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASActivityGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASBudget
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASBudgetModulator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASExtension
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASExtensionRemoteContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASFileProtection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASPairedSystemContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASPriorityQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASSharedMemoryBudgetPersistence
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASStrings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASSubmissionRateLimiter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__DASSystemContext
__ AppConduit: _ACXWatchKitVersion
__ AppConduit: _OBJC_CLASS_$_ACXDeviceConnection
__ CoreDuet: _OBJC_CLASS_$__DKAnyStringIdentifier
__ CoreDuet: _OBJC_CLASS_$__DKEventStream
__ CoreDuet: _OBJC_CLASS_$__DKHistogramQuery
__ CoreDuet: _OBJC_CLASS_$__DKKnowledgeStore
__ CoreDuet: _OBJC_CLASS_$__DKPredictionTimeline
__ CoreDuet: _OBJC_CLASS_$__DKPredictor
__ CoreDuetContext: _OBJC_CLASS_$__CDClientContext
__ CoreDuetContext: _OBJC_CLASS_$__CDContextQueries
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualChangeRegistration
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualKeyPath
__ CoreDuetContext: _OBJC_CLASS_$__CDContextualPredicate
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ Foundation: _NSClassFromString
__ Foundation: _NSFileProtectionComplete
__ Foundation: _NSFileProtectionCompleteUnlessOpen
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionNone
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ NanoRegistry: _OBJC_CLASS_$_NRPairedDeviceRegistry
__ Network: _OBJC_CLASS_$_NWEndpoint
__ Network: _OBJC_CLASS_$_NWParameters
__ Network: _OBJC_CLASS_$_NWPathEvaluator
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strcpy_chk
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _ftruncate
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _shm_open
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _xpc_bool_get_value
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_int64_get_value
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
_DASPairedSystemContext : NSObject /usr/lib/libSystem.B.dylib
 @property  <_CDContext> *context
 @property  NSObject<OS_dispatch_queue> *handlerQueue
 @property  <_DKKnowledgeQuerying> *knowledgeStore
 @property  NSString *identifier
 @property  NSUserDefaults *persistence
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  @? onConditionsChange
 @property  @? onApplicationStateChange
 @property  int previousMaxThermalPressure
 @property  double previousDefaultThreshold
 @property  double previousSyncThreshold
 @property  double previousBatteryLevel
 @property  BOOL previousPluginStatus
 @property  NSMutableDictionary *watchKitAppStatus
 @property  int recentTrafficSyncRequests
 @property  NSString *foregroundWatchApp
 @property  NSMutableDictionary *recentlyBackgroundedApps
 @property  NSArray *previousExclusiveIdentifiers
 @property  NSMutableSet *previousForegroundApps
 @property  NSDictionary *remoteAppLaunchCount
 @property  NSMutableDictionary *launchedAppCount
 @property  NSObject<OS_dispatch_source> *appUsageRefreshTimer
 @property  NSObject<OS_os_log> *log
 @property  int remoteForecastDeletionToken

  // class methods
  +[_DASPairedSystemContext initialize]
  +[_DASPairedSystemContext stringForPriority:]
  +[_DASPairedSystemContext stringForThermalLevel:]
  +[_DASPairedSystemContext contextWithClientIdentifier:callbackQueue:systemConditionChangeCallback:trafficCancelationHandler:]

  // instance methods
  -[_DASPairedSystemContext .cxx_destruct]
  -[_DASPairedSystemContext identifier]
  -[_DASPairedSystemContext setIdentifier:]
  -[_DASPairedSystemContext context]
  -[_DASPairedSystemContext callbackQueue]
  -[_DASPairedSystemContext setContext:]
  -[_DASPairedSystemContext knowledgeStore]
  -[_DASPairedSystemContext setKnowledgeStore:]
  -[_DASPairedSystemContext log]
  -[_DASPairedSystemContext setCallbackQueue:]
  -[_DASPairedSystemContext setLog:]
  -[_DASPairedSystemContext persistence]
  -[_DASPairedSystemContext setHandlerQueue:]
  -[_DASPairedSystemContext handlerQueue]
  -[_DASPairedSystemContext setPersistence:]
  -[_DASPairedSystemContext readBudgetForRecentlyBackgroundedAppSyncTraffic]
  -[_DASPairedSystemContext updateAppUsageHistory]
  -[_DASPairedSystemContext registerForContextChanges]
  -[_DASPairedSystemContext deleteRemoteHistogram]
  -[_DASPairedSystemContext initWithClientIdentifier:context:knowledgeStore:callbackQueue:systemConditionChangeCallback:trafficCancelationHander:]
  -[_DASPairedSystemContext handleConditionChange]
  -[_DASPairedSystemContext isWatchPluggedIn]
  -[_DASPairedSystemContext watchBatteryLevel]
  -[_DASPairedSystemContext handleAppStateChange]
  -[_DASPairedSystemContext usageThresholdForPriority:batteryLevel:isPluggedIn:]
  -[_DASPairedSystemContext onConditionsChange]
  -[_DASPairedSystemContext resetBudgetForRecentlyBackgroundedAppSyncTraffic]
  -[_DASPairedSystemContext foregroundWatchApp]
  -[_DASPairedSystemContext setForegroundWatchApp:]
  -[_DASPairedSystemContext previousExclusiveIdentifiers]
  -[_DASPairedSystemContext onApplicationStateChange]
  -[_DASPairedSystemContext setPreviousExclusiveIdentifiers:]
  -[_DASPairedSystemContext handleWatchAppBackgrounded]
  -[_DASPairedSystemContext didHandleExclusiveAppChange]
  -[_DASPairedSystemContext foregroundApplicationsAllowSendingTrafficForServiceIdentifiers:atPriorityLevel:furtherChecksNecessary:]
  -[_DASPairedSystemContext thermalLevelsAllowSendingTrafficeForServiceIdentifiers:atPriorityLevel:]
  -[_DASPairedSystemContext thirdPartyAppPolicyAllowsSendingTrafficForServiceIdentifiers:atPriorityLevel:furtherChecksNecessary:]
  -[_DASPairedSystemContext batteryLevelsAllowSendingTrafficeForServiceIdentifiers:atPriorityLevel:]
  -[_DASPairedSystemContext watchKitAppStatus]
  -[_DASPairedSystemContext isAnyThirdPartyApp:]
  -[_DASPairedSystemContext allowSyncTrafficForRecentlyBackgroundedApp]
  -[_DASPairedSystemContext pairedDeviceStream]
  -[_DASPairedSystemContext setRemoteAppLaunchCount:]
  -[_DASPairedSystemContext remoteAppLaunchCount]
  -[_DASPairedSystemContext shouldBypassApplicationUsage:]
  -[_DASPairedSystemContext usageLikelihoodForApplication:]
  -[_DASPairedSystemContext allowsSendingTrafficeForServiceIdentifiers:atPriorityLevel:isReunionOrInitialSync:responseValidityDuration:]
  -[_DASPairedSystemContext setWatchKitStatus:forApplication:]
  -[_DASPairedSystemContext setOnConditionsChange:]
  -[_DASPairedSystemContext setOnApplicationStateChange:]
  -[_DASPairedSystemContext previousMaxThermalPressure]
  -[_DASPairedSystemContext setPreviousMaxThermalPressure:]
  -[_DASPairedSystemContext previousDefaultThreshold]
  -[_DASPairedSystemContext setPreviousDefaultThreshold:]
  -[_DASPairedSystemContext previousSyncThreshold]
  -[_DASPairedSystemContext setPreviousSyncThreshold:]
  -[_DASPairedSystemContext previousBatteryLevel]
  -[_DASPairedSystemContext setPreviousBatteryLevel:]
  -[_DASPairedSystemContext previousPluginStatus]
  -[_DASPairedSystemContext setPreviousPluginStatus:]
  -[_DASPairedSystemContext setWatchKitAppStatus:]
  -[_DASPairedSystemContext recentTrafficSyncRequests]
  -[_DASPairedSystemContext setRecentTrafficSyncRequests:]
  -[_DASPairedSystemContext recentlyBackgroundedApps]
  -[_DASPairedSystemContext setRecentlyBackgroundedApps:]
  -[_DASPairedSystemContext previousForegroundApps]
  -[_DASPairedSystemContext setPreviousForegroundApps:]
  -[_DASPairedSystemContext launchedAppCount]
  -[_DASPairedSystemContext setLaunchedAppCount:]
  -[_DASPairedSystemContext appUsageRefreshTimer]
  -[_DASPairedSystemContext setAppUsageRefreshTimer:]
  -[_DASPairedSystemContext remoteForecastDeletionToken]
  -[_DASPairedSystemContext setRemoteForecastDeletionToken:]


_DASExtension : NSObject /usr/lib/libSystem.B.dylib <NSExtensionRequestHandling>
 @property  _DASExtensionRemoteContext *context
 @property  <_DASExtensionRunner> *runner
 @property  _DASActivity *activity
 @property  NSObject<OS_os_transaction> *transaction
 @property  NSObject<OS_os_log> *log
 @property  NSDate *startTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_DASExtension init]
  -[_DASExtension .cxx_destruct]
  -[_DASExtension beginRequestWithExtensionContext:]
  -[_DASExtension activity]
  -[_DASExtension setActivity:]
  -[_DASExtension context]
  -[_DASExtension suspend]
  -[_DASExtension setContext:]
  -[_DASExtension log]
  -[_DASExtension transaction]
  -[_DASExtension setTransaction:]
  -[_DASExtension setLog:]
  -[_DASExtension startTime]
  -[_DASExtension setStartTime:]
  -[_DASExtension setRunner:]
  -[_DASExtension runner]
  -[_DASExtension _activityCompletedWithStatus:]
  -[_DASExtension runner:performActivity:]


_DASActivity : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  BOOL darkWakeEligible
 @property  BOOL beforeDaysFirstActivity
 @property  BOOL beforeApplicationLaunch
 @property  double interval
 @property  NSString *groupName
 @property  NSArray *schedulerRecommendedApplications
 @property  NSString *launchReason
 @property  NSString *extensionIdentifier
 @property  BOOL supportsAnyApplication
 @property  BOOL requestsApplicationLaunch
 @property  BOOL requestsExtensionLaunch
 @property  BOOL shouldBePersisted
 @property  BOOL requestsNewsstandLaunch
 @property  BOOL requiresSignificantUserInactivity
 @property  BOOL hasMagneticSensitivity
 @property  BOOL allowsCompanionExpensiveNetworking
 @property  BOOL isMLBackgroundActivity
 @property  BOOL deferred
 @property  BOOL userRequestedBackupTask
 @property  double predictedOptimalScore
 @property  NSDate *predictedOptimalStartDate
 @property  double lastComputedScore
 @property  NSDate *lastScored
 @property  NSDate *submitDate
 @property  NSDate *startDate
 @property  BOOL suspendable
 @property  BOOL suspendRequested
 @property  BOOL bypassesPredictions
 @property  double percentCompleted
 @property  NSMutableDictionary *policyScores
 @property  NSMutableDictionary *policyReasons
 @property  unsigned long lastDenialValue
 @property  BOOL wasForceRun
 @property  int pid
 @property  NSString *clientName
 @property  long long completionStatus
 @property  NSString *clientProvidedIdentifier
 @property  NSDate *clientProvidedStartDate
 @property  @? completionHandler
 @property  BOOL budgeted
 @property  NSString *clientDataBudgetName
 @property  unsigned long budgetingToken
 @property  _DASAssertion *assertion
 @property  long long preClearedMode
 @property  BOOL requiresBuddyComplete
 @property  unsigned int userIdentifier
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSObject<OS_dispatch_queue> *handlerQueue
 @property  @? startHandler
 @property  @? suspendHandler
 @property  _DASFileProtection *fileProtection
 @property  unsigned long schedulingPriority
 @property  NSDate *startAfter
 @property  NSDate *startBefore
 @property  BOOL cancelAfterDeadline
 @property  unsigned long duration
 @property  BOOL requiresNetwork
 @property  unsigned long transferSize
 @property  unsigned long uploadSize
 @property  unsigned long downloadSize
 @property  BOOL isUpload
 @property  BOOL requiresInexpensiveNetworking
 @property  BOOL requiresUnconstrainedNetworking
 @property  BOOL cpuIntensive
 @property  BOOL memoryIntensive
 @property  BOOL diskIntensive
 @property  BOOL requiresDeviceInactivity
 @property  BOOL requiresPlugin
 @property  BOOL afterUserIsInactive
 @property  BOOL beforeUserIsActive
 @property  BOOL triggersRestart
 @property  long long targetDevice
 @property  NSArray *relatedApplications
 @property  long long relevancy
 @property  long long motionState
 @property  NSDictionary *userInfo
 @property  NSString *bundleId
 @property  BOOL delayedStart

  // class methods
  +[_DASActivity supportsSecureCoding]
  +[_DASActivity extensionLaunchActivityWithName:priority:forApplication:withReason:duration:startingAfter:startingBefore:]
  +[_DASActivity activityWithName:priority:duration:startingAfter:startingBefore:]
  +[_DASActivity sharedDateFormatter]
  +[_DASActivity cleanSchedulingPriority:]
  +[_DASActivity cleanDuration:]
  +[_DASActivity extensionLaunchActivityWithName:priority:forApplication:forExtensionIdentifier:withReason:duration:startingAfter:startingBefore:]
  +[_DASActivity applicationLaunchActivityWithName:priority:forApplication:withReason:duration:startingAfter:startingBefore:]
  +[_DASActivity launchWithTopic:forReason:withPayload:highPriority:]
  +[_DASActivity cleanTransferSize:]
  +[_DASActivity validClassesForUserInfoSerialization]
  +[_DASActivity prettySchedulingPriorityDescription:]
  +[_DASActivity networkingActivityWithName:priority:transferSize:isUpload:expensiveNetworkingAllowed:startingAfter:startingBefore:]
  +[_DASActivity networkingActivityWithName:priority:downloadSize:uploadSize:expensiveNetworkingAllowed:startingAfter:startingBefore:]
  +[_DASActivity anyApplicationActivityWithName:priority:duration:startingAfter:startingBefore:limitedToApplications:]
  +[_DASActivity extensionLaunchActivityWithName:priority:forExtensionIdentifier:withReason:duration:startingAfter:startingBefore:]
  +[_DASActivity launchForRemoteNotificationWithTopic:withPayload:highPriority:]
  +[_DASActivity validateBGTaskRequestWithActivity:]

  // instance methods
  -[_DASActivity isEqual:]
  -[_DASActivity name]
  -[_DASActivity copyWithZone:]
  -[_DASActivity setUserIdentifier:]
  -[_DASActivity userIdentifier]
  -[_DASActivity userInfo]
  -[_DASActivity encodeWithCoder:]
  -[_DASActivity initWithCoder:]
  -[_DASActivity .cxx_destruct]
  -[_DASActivity setName:]
  -[_DASActivity interval]
  -[_DASActivity setInterval:]
  -[_DASActivity startDate]
  -[_DASActivity setUserInfo:]
  -[_DASActivity uuid]
  -[_DASActivity duration]
  -[_DASActivity setUuid:]
  -[_DASActivity launchReason]
  -[_DASActivity clientName]
  -[_DASActivity assertion]
  -[_DASActivity setAssertion:]
  -[_DASActivity setStartDate:]
  -[_DASActivity bundleId]
  -[_DASActivity setBundleId:]
  -[_DASActivity groupName]
  -[_DASActivity setGroupName:]
  -[_DASActivity setPid:]
  -[_DASActivity pid]
  -[_DASActivity setMemoryIntensive:]
  -[_DASActivity setRequiresPlugin:]
  -[_DASActivity setCpuIntensive:]
  -[_DASActivity setAfterUserIsInactive:]
  -[_DASActivity completionHandler]
  -[_DASActivity setCompletionHandler:]
  -[_DASActivity shortDescription]
  -[_DASActivity setDuration:]
  -[_DASActivity setHandlerQueue:]
  -[_DASActivity setStartHandler:]
  -[_DASActivity setSuspendHandler:]
  -[_DASActivity setRequiresNetwork:]
  -[_DASActivity setPreClearedMode:]
  -[_DASActivity setTransferSize:]
  -[_DASActivity setRequiresInexpensiveNetworking:]
  -[_DASActivity setAllowsCompanionExpensiveNetworking:]
  -[_DASActivity setSchedulingPriority:]
  -[_DASActivity setIsUpload:]
  -[_DASActivity setTargetDevice:]
  -[_DASActivity setRelatedApplications:]
  -[_DASActivity setDeferred:]
  -[_DASActivity extensionIdentifier]
  -[_DASActivity setStartAfter:]
  -[_DASActivity setExtensionIdentifier:]
  -[_DASActivity handlerQueue]
  -[_DASActivity setClientName:]
  -[_DASActivity targetDevice]
  -[_DASActivity completionStatus]
  -[_DASActivity setCompletionStatus:]
  -[_DASActivity setStartBefore:]
  -[_DASActivity requiresNetwork]
  -[_DASActivity downloadSize]
  -[_DASActivity startHandler]
  -[_DASActivity updateGroupIfNecessary]
  -[_DASActivity initWithName:priority:duration:startingAfter:startingBefore:]
  -[_DASActivity setDownloadSize:]
  -[_DASActivity setUploadSize:]
  -[_DASActivity setSupportsAnyApplication:]
  -[_DASActivity setRequestsApplicationLaunch:]
  -[_DASActivity setLaunchReason:]
  -[_DASActivity setRequestsExtensionLaunch:]
  -[_DASActivity clientProvidedIdentifier]
  -[_DASActivity startAfter]
  -[_DASActivity startBefore]
  -[_DASActivity clientProvidedStartDate]
  -[_DASActivity requiresPlugin]
  -[_DASActivity setClientProvidedIdentifier:]
  -[_DASActivity setClientProvidedStartDate:]
  -[_DASActivity setRequiresDeviceInactivity:]
  -[_DASActivity schedulingPriority]
  -[_DASActivity requestsApplicationLaunch]
  -[_DASActivity requiresSignificantUserInactivity]
  -[_DASActivity hasMagneticSensitivity]
  -[_DASActivity allowsCompanionExpensiveNetworking]
  -[_DASActivity requestsNewsstandLaunch]
  -[_DASActivity setObject:forUserInfoKey:]
  -[_DASActivity beforeApplicationLaunch]
  -[_DASActivity setMotionState:]
  -[_DASActivity setFileProtection:]
  -[_DASActivity setClientDataBudgetName:]
  -[_DASActivity isIntensive]
  -[_DASActivity triggersRestart]
  -[_DASActivity relevancy]
  -[_DASActivity relatedApplications]
  -[_DASActivity uploadSize]
  -[_DASActivity userRequestedBackupTask]
  -[_DASActivity percentCompleted]
  -[_DASActivity setPercentCompleted:]
  -[_DASActivity submitDate]
  -[_DASActivity setSubmitDate:]
  -[_DASActivity predictedOptimalScore]
  -[_DASActivity setPredictedOptimalScore:]
  -[_DASActivity predictedOptimalStartDate]
  -[_DASActivity setPredictedOptimalStartDate:]
  -[_DASActivity lastComputedScore]
  -[_DASActivity setLastComputedScore:]
  -[_DASActivity lastScored]
  -[_DASActivity setLastScored:]
  -[_DASActivity policyScores]
  -[_DASActivity setPolicyScores:]
  -[_DASActivity policyReasons]
  -[_DASActivity setPolicyReasons:]
  -[_DASActivity lastDenialValue]
  -[_DASActivity setLastDenialValue:]
  -[_DASActivity wasForceRun]
  -[_DASActivity setWasForceRun:]
  -[_DASActivity nameString]
  -[_DASActivity budgeted]
  -[_DASActivity clientDataBudgetName]
  -[_DASActivity transferSize]
  -[_DASActivity setDiskIntensive:]
  -[_DASActivity setBeforeDaysFirstActivity:]
  -[_DASActivity setDarkWakeEligible:]
  -[_DASActivity setTriggersRestart:]
  -[_DASActivity setIsMLBackgroundActivity:]
  -[_DASActivity setRequiresSignificantUserInactivity:]
  -[_DASActivity setHasMagneticSensitivity:]
  -[_DASActivity setUserRequestedBackupTask:]
  -[_DASActivity isSilentPush]
  -[_DASActivity setRequestsNewsstandLaunch:]
  -[_DASActivity setBeforeApplicationLaunch:]
  -[_DASActivity setConstraintsWithXPCDictionary:]
  -[_DASActivity compatibilityWith:]
  -[_DASActivity hasManyConstraints]
  -[_DASActivity timewiseEligibleAtDate:]
  -[_DASActivity overdueAtDate:]
  -[_DASActivity significantlyOverdueAtDate:]
  -[_DASActivity isIdenticalLaunchTo:]
  -[_DASActivity keepsPrevious]
  -[_DASActivity overwritesPrevious]
  -[_DASActivity isBackgroundTaskActivity]
  -[_DASActivity shouldReplaceActivity:andKeepsSubmitted:]
  -[_DASActivity reconcileWithActivity:]
  -[_DASActivity suspendHandler]
  -[_DASActivity fileProtection]
  -[_DASActivity cancelAfterDeadline]
  -[_DASActivity setCancelAfterDeadline:]
  -[_DASActivity isUpload]
  -[_DASActivity requiresInexpensiveNetworking]
  -[_DASActivity requiresUnconstrainedNetworking]
  -[_DASActivity setRequiresUnconstrainedNetworking:]
  -[_DASActivity cpuIntensive]
  -[_DASActivity memoryIntensive]
  -[_DASActivity diskIntensive]
  -[_DASActivity requiresDeviceInactivity]
  -[_DASActivity afterUserIsInactive]
  -[_DASActivity beforeUserIsActive]
  -[_DASActivity setBeforeUserIsActive:]
  -[_DASActivity supportsAnyApplication]
  -[_DASActivity requestsExtensionLaunch]
  -[_DASActivity setRelevancy:]
  -[_DASActivity schedulerRecommendedApplications]
  -[_DASActivity setSchedulerRecommendedApplications:]
  -[_DASActivity motionState]
  -[_DASActivity delayedStart]
  -[_DASActivity setDelayedStart:]
  -[_DASActivity darkWakeEligible]
  -[_DASActivity beforeDaysFirstActivity]
  -[_DASActivity shouldBePersisted]
  -[_DASActivity setShouldBePersisted:]
  -[_DASActivity isMLBackgroundActivity]
  -[_DASActivity deferred]
  -[_DASActivity suspendable]
  -[_DASActivity setSuspendable:]
  -[_DASActivity suspendRequested]
  -[_DASActivity setSuspendRequested:]
  -[_DASActivity bypassesPredictions]
  -[_DASActivity setBypassesPredictions:]
  -[_DASActivity setBudgeted:]
  -[_DASActivity budgetingToken]
  -[_DASActivity setBudgetingToken:]
  -[_DASActivity preClearedMode]
  -[_DASActivity requiresBuddyComplete]
  -[_DASActivity setRequiresBuddyComplete:]


_DASSystemContext : NSObject /usr/lib/libSystem.B.dylib
 @property  <_CDLocalContext> *context
 @property  NSObject<OS_os_log> *dasSystemContextLog
 @property  long long networkPathStatus
 @property  long long inexpensiveNetworkPathStatus

  // class methods
  +[_DASSystemContext sharedInstance]
  +[_DASSystemContext initWithContext:]

  // instance methods
  -[_DASSystemContext init]
  -[_DASSystemContext .cxx_destruct]
  -[_DASSystemContext context]
  -[_DASSystemContext setContext:]
  -[_DASSystemContext allowsDiscretionaryWorkForTask:withPriority:withParameters:]
  -[_DASSystemContext allowDiscretionaryWorkForBackgroundTask:withParameters:]
  -[_DASSystemContext allowDiscretionaryWorkForUtilityTask:withParameters:]
  -[_DASSystemContext isNetworkAvailable]
  -[_DASSystemContext isApplicationFocalForPushTask:]
  -[_DASSystemContext dasSystemContextLog]
  -[_DASSystemContext isInexpensiveNetworkAvailable]
  -[_DASSystemContext setDasSystemContextLog:]
  -[_DASSystemContext networkPathStatus]
  -[_DASSystemContext setNetworkPathStatus:]
  -[_DASSystemContext inexpensiveNetworkPathStatus]
  -[_DASSystemContext setInexpensiveNetworkPathStatus:]


_DASSubmissionRateLimiter : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *penaltyBox
 @property  NSObject<OS_dispatch_queue> *delayedSubmissionQueue
 @property  NSObject<OS_os_log> *log
 @property  NSMutableDictionary *activityGroupQueue
 @property  NSMutableDictionary *submittedActivities
 @property  NSMutableDictionary *activityGroups
 @property  int dastoolToken

  // class methods
  +[_DASSubmissionRateLimiter groupNameForActivity:]
  +[_DASSubmissionRateLimiter pluginGroupNameForGroupName:]

  // instance methods
  -[_DASSubmissionRateLimiter init]
  -[_DASSubmissionRateLimiter dealloc]
  -[_DASSubmissionRateLimiter removeAllObjects]
  -[_DASSubmissionRateLimiter .cxx_destruct]
  -[_DASSubmissionRateLimiter log]
  -[_DASSubmissionRateLimiter setLog:]
  -[_DASSubmissionRateLimiter activityGroupQueue]
  -[_DASSubmissionRateLimiter handleCanceledActivity:withGroupName:]
  -[_DASSubmissionRateLimiter removeFromPenaltyBox:]
  -[_DASSubmissionRateLimiter addToPenaltyBox:atDate:]
  -[_DASSubmissionRateLimiter capacityForGroupName:]
  -[_DASSubmissionRateLimiter shouldQueueActivity:]
  -[_DASSubmissionRateLimiter updateCapacity:forGroupName:]
  -[_DASSubmissionRateLimiter shouldDelaySubmissionOfActivity:]
  -[_DASSubmissionRateLimiter shouldDelayGroupSubmissionOfActivity:]
  -[_DASSubmissionRateLimiter handleCanceledActivity:]
  -[_DASSubmissionRateLimiter admitNextActivityAfterCompletionOf:withScheduler:]
  -[_DASSubmissionRateLimiter createActivityGroup:]
  -[_DASSubmissionRateLimiter submitActivity:withScheduler:]
  -[_DASSubmissionRateLimiter submitActivities:withScheduler:]
  -[_DASSubmissionRateLimiter submitActivity:inGroup:withScheduler:]
  -[_DASSubmissionRateLimiter activityCanceled:withScheduler:]
  -[_DASSubmissionRateLimiter activityCompleted:withScheduler:]
  -[_DASSubmissionRateLimiter penaltyBox]
  -[_DASSubmissionRateLimiter setPenaltyBox:]
  -[_DASSubmissionRateLimiter delayedSubmissionQueue]
  -[_DASSubmissionRateLimiter setDelayedSubmissionQueue:]
  -[_DASSubmissionRateLimiter setActivityGroupQueue:]
  -[_DASSubmissionRateLimiter submittedActivities]
  -[_DASSubmissionRateLimiter setSubmittedActivities:]
  -[_DASSubmissionRateLimiter activityGroups]
  -[_DASSubmissionRateLimiter setActivityGroups:]
  -[_DASSubmissionRateLimiter dastoolToken]
  -[_DASSubmissionRateLimiter setDastoolToken:]


_DASBudget : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  @? callback
 @property  double maxBudgetValue
 @property  double minBudgetValue
 @property  {os_unfair_lock_s=I} lock
 @property  NSString *name
 @property  double capacity
 @property  unsigned char allocationType
 @property  double balance

  // class methods
  +[_DASBudget supportsSecureCoding]
  +[_DASBudget budgetWithName:capacity:balance:allocationType:]
  +[_DASBudget budgetWithName:capacity:allocationType:]

  // instance methods
  -[_DASBudget isEqual:]
  -[_DASBudget name]
  -[_DASBudget copyWithZone:]
  -[_DASBudget encodeWithCoder:]
  -[_DASBudget initWithCoder:]
  -[_DASBudget lock]
  -[_DASBudget .cxx_destruct]
  -[_DASBudget capacity]
  -[_DASBudget setCapacity:]
  -[_DASBudget callback]
  -[_DASBudget setCallback:]
  -[_DASBudget setLock:]
  -[_DASBudget allocationType]
  -[_DASBudget balance]
  -[_DASBudget setBalance:]
  -[_DASBudget initWithName:capacity:balance:allocationType:]
  -[_DASBudget unlockedDecrementBy:]
  -[_DASBudget decrementBy:]
  -[_DASBudget registerSignificantBudgetChangeCallback:]
  -[_DASBudget isPositive]
  -[_DASBudget incrementBy:]
  -[_DASBudget maxBudgetValue]
  -[_DASBudget setMaxBudgetValue:]
  -[_DASBudget minBudgetValue]
  -[_DASBudget setMinBudgetValue:]


_DASSharedMemoryBudgetPersistence : NSObject /usr/lib/libSystem.B.dylib <_DASBudgetPersisting>
 @property  NSMutableDictionary *budgetToIndex
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_DASSharedMemoryBudgetPersistence initialize]
  +[_DASSharedMemoryBudgetPersistence log]
  +[_DASSharedMemoryBudgetPersistence persistence]

  // instance methods
  -[_DASSharedMemoryBudgetPersistence init]
  -[_DASSharedMemoryBudgetPersistence .cxx_destruct]
  -[_DASSharedMemoryBudgetPersistence budgetToIndex]
  -[_DASSharedMemoryBudgetPersistence validatedStringFromStoredValue:withAllowedNames:]
  -[_DASSharedMemoryBudgetPersistence loadBudgetsWithExpectedNames:]
  -[_DASSharedMemoryBudgetPersistence saveBudgets:]
  -[_DASSharedMemoryBudgetPersistence updateBudget:]
  -[_DASSharedMemoryBudgetPersistence saveModulationDate:]
  -[_DASSharedMemoryBudgetPersistence lastModulationDate]
  -[_DASSharedMemoryBudgetPersistence setBudgetToIndex:]


_DASBudgetModulator : NSObject /usr/lib/libSystem.B.dylib
 @property  <_DASBudgetPersisting> *persistence
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSDate *lastModulationDate
 @property  NSDate *lastUsageTimelineUpdate
 @property  NSArray *budgets
 @property  NSObject<OS_dispatch_source> *timer
 @property  _DKPredictionTimeline *usage
 @property  NSObject<OS_os_log> *log

  // class methods
  +[_DASBudgetModulator modulatorWithBudgets:persistence:]

  // instance methods
  -[_DASBudgetModulator setQueue:]
  -[_DASBudgetModulator queue]
  -[_DASBudgetModulator .cxx_destruct]
  -[_DASBudgetModulator timer]
  -[_DASBudgetModulator setTimer:]
  -[_DASBudgetModulator setUsage:]
  -[_DASBudgetModulator usage]
  -[_DASBudgetModulator log]
  -[_DASBudgetModulator setLog:]
  -[_DASBudgetModulator persistence]
  -[_DASBudgetModulator setPersistence:]
  -[_DASBudgetModulator budgets]
  -[_DASBudgetModulator lastModulationDate]
  -[_DASBudgetModulator _queue_modulateBudgets]
  -[_DASBudgetModulator initWithBudgets:persistence:]
  -[_DASBudgetModulator numberOfModulationFromDate:toDate:]
  -[_DASBudgetModulator usageTimeline]
  -[_DASBudgetModulator relativeUsageAtDate:withTimeline:]
  -[_DASBudgetModulator updateCapacity:forBudgetWithName:]
  -[_DASBudgetModulator setLastModulationDate:]
  -[_DASBudgetModulator lastUsageTimelineUpdate]
  -[_DASBudgetModulator setLastUsageTimelineUpdate:]
  -[_DASBudgetModulator setBudgets:]


_DASScheduler : NSObject /usr/lib/libSystem.B.dylib <NSXPCListenerDelegate, _DASActivityGroupScheduler, _DASActivitySchedulerIntrospecting, _DASActivityBackgroundLaunchScheduler, _DASActivityMetering, _DASActivityBackgroundTasksScheduler>
 @property  NSXPCConnection *xpcConnection
 @property  NSXPCListenerEndpoint *endpoint
 @property  BOOL interrupted
 @property  int resubmitToken
 @property  NSMutableDictionary *submittedActivities
 @property  NSMutableDictionary *delayedStartTasks
 @property  NSMutableDictionary *startedActivities
 @property  NSMutableDictionary *activityToDataMap
 @property  _DASSubmissionRateLimiter *rateLimiter
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *connectionCreationQueue
 @property  NSObject<OS_dispatch_queue> *runQueue
 @property  NSObject<OS_os_log> *dasFrameworkLog
 @property  <_DASActivityBackgroundTasksSchedulerDelegate> *backgroundTaskSchedulerDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_DASScheduler log]
  +[_DASScheduler sharedScheduler]
  +[_DASScheduler scheduler]
  +[_DASScheduler schedulerWithEndpoint:]

  // instance methods
  -[_DASScheduler init]
  -[_DASScheduler dealloc]
  -[_DASScheduler setQueue:]
  -[_DASScheduler queue]
  -[_DASScheduler .cxx_destruct]
  -[_DASScheduler currentConnection]
  -[_DASScheduler listener:shouldAcceptNewConnection:]
  -[_DASScheduler initWithListenerEndpoint:]
  -[_DASScheduler endpoint]
  -[_DASScheduler xpcConnection]
  -[_DASScheduler setXpcConnection:]
  -[_DASScheduler setEndpoint:]
  -[_DASScheduler rateLimiter]
  -[_DASScheduler setRateLimiter:]
  -[_DASScheduler policies]
  -[_DASScheduler submitActivity:inGroup:]
  -[_DASScheduler submitActivity:inGroupWithName:]
  -[_DASScheduler submitActivity:]
  -[_DASScheduler activityCanceled:]
  -[_DASScheduler activityCompleted:]
  -[_DASScheduler updateActivity:withParameters:]
  -[_DASScheduler interrupted]
  -[_DASScheduler setMinimumBackgroundFetchInterval:forApp:]
  -[_DASScheduler setInterrupted:]
  -[_DASScheduler submitActivities:]
  -[_DASScheduler createActivityGroup:]
  -[_DASScheduler submittedActivities]
  -[_DASScheduler setSubmittedActivities:]
  -[_DASScheduler handleEligibleActivities:]
  -[_DASScheduler activityStarted:]
  -[_DASScheduler runActivitiesWithDelayedStart:]
  -[_DASScheduler runActivities:]
  -[_DASScheduler suspendActivities:]
  -[_DASScheduler cancelActivities:]
  -[_DASScheduler activity:runWithoutHonoringPolicies:]
  -[_DASScheduler activity:blockedOnPolicies:]
  -[_DASScheduler handleLaunchFromDaemonForActivities:]
  -[_DASScheduler willExpireBGTaskActivities:]
  -[_DASScheduler forceRunActivities:]
  -[_DASScheduler setBalance:forBudgetWithName:]
  -[_DASScheduler setCapacity:forBudgetWithName:]
  -[_DASScheduler enterTestModeWithParameters:]
  -[_DASScheduler activityStartedWithParameters:]
  -[_DASScheduler activityStoppedWithParameters:]
  -[_DASScheduler getPendingTaskRequestsWithCompletionHandler:]
  -[_DASScheduler dasFrameworkLog]
  -[_DASScheduler setupXPCConnectionWithEndpoint:]
  -[_DASScheduler backgroundTaskSchedulerDelegate]
  -[_DASScheduler connectionCreationQueue]
  -[_DASScheduler unprotectedEstablishDaemonConnectionIfInterrupted]
  -[_DASScheduler resubmitRunningActivities]
  -[_DASScheduler resubmitPendingStartActivities]
  -[_DASScheduler resubmitPendingActivities]
  -[_DASScheduler connectToDaemon:]
  -[_DASScheduler submitActivityInternal:]
  -[_DASScheduler submitActivitiesInternal:]
  -[_DASScheduler handleRescindedActivity:]
  -[_DASScheduler handleNoLongerRunningActivities:]
  -[_DASScheduler updateBytesConsumedForActivity:downloadedOnWifi:downloadedOnCell:uploadedOnWifi:uploadedOnCell:]
  -[_DASScheduler runQueue]
  -[_DASScheduler runningActivities]
  -[_DASScheduler delayedRunningActivities]
  -[_DASScheduler runningGroupActivities]
  -[_DASScheduler deferActivities:]
  -[_DASScheduler scoresForActivityWithName:]
  -[_DASScheduler activityRunStatistics]
  -[_DASScheduler currentPredictions]
  -[_DASScheduler remainingBalanceForBudgetWithName:]
  -[_DASScheduler blockingPoliciesWithParameters:]
  -[_DASScheduler pauseWithParameters:]
  -[_DASScheduler setBackgroundTasksSchedulerDelegate:]
  -[_DASScheduler submitTaskRequest:]
  -[_DASScheduler cancelTaskRequestWithIdentifier:]
  -[_DASScheduler cancelAllTaskRequests]
  -[_DASScheduler completeTaskRequest:]
  -[_DASScheduler submittedTaskState]
  -[_DASScheduler resubmitToken]
  -[_DASScheduler setResubmitToken:]
  -[_DASScheduler delayedStartTasks]
  -[_DASScheduler setDelayedStartTasks:]
  -[_DASScheduler startedActivities]
  -[_DASScheduler setStartedActivities:]
  -[_DASScheduler activityToDataMap]
  -[_DASScheduler setActivityToDataMap:]
  -[_DASScheduler setConnectionCreationQueue:]
  -[_DASScheduler setRunQueue:]
  -[_DASScheduler setDasFrameworkLog:]
  -[_DASScheduler setBackgroundTaskSchedulerDelegate:]


_DASActivityGroup : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  unsigned long maxConcurrent

  // class methods
  +[_DASActivityGroup supportsSecureCoding]
  +[_DASActivityGroup groupWithName:maxConcurrent:]

  // instance methods
  -[_DASActivityGroup isEqual:]
  -[_DASActivityGroup name]
  -[_DASActivityGroup copyWithZone:]
  -[_DASActivityGroup encodeWithCoder:]
  -[_DASActivityGroup initWithCoder:]
  -[_DASActivityGroup .cxx_destruct]
  -[_DASActivityGroup setName:]
  -[_DASActivityGroup maxConcurrent]
  -[_DASActivityGroup initWithName:maxConcurrent:]
  -[_DASActivityGroup setMaxConcurrent:]


_DASPriorityQueue : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableDictionary *objects
 @property  unsigned long count
 @property  NSNumber *lowestPriority
 @property  NSNumber *highestPriority

  // class methods
  +[_DASPriorityQueue priorityQueue]

  // instance methods
  -[_DASPriorityQueue init]
  -[_DASPriorityQueue count]
  -[_DASPriorityQueue allObjects]
  -[_DASPriorityQueue .cxx_destruct]
  -[_DASPriorityQueue setCount:]
  -[_DASPriorityQueue objects]
  -[_DASPriorityQueue setObjects:]
  -[_DASPriorityQueue highestPriority]
  -[_DASPriorityQueue addObject:withPriority:]
  -[_DASPriorityQueue removeObject:atPriority:]
  -[_DASPriorityQueue popFirst]
  -[_DASPriorityQueue popLast]
  -[_DASPriorityQueue lowestPriority]
  -[_DASPriorityQueue setLowestPriority:]
  -[_DASPriorityQueue setHighestPriority:]


_DASStrings : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[_DASStrings fileProtectionStringNone]


_DASExtensionRemoteContext : NSExtensionContext /usr/lib/libobjc.A.dylib <_DASRemoteExtensionContextProtocol>
 @property  NSObject<OS_os_log> *log
 @property  _DASExtension *extension
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_DASExtensionRemoteContext _extensionAuxiliaryHostProtocol]
  +[_DASExtensionRemoteContext _extensionAuxiliaryVendorProtocol]
  +[_DASExtensionRemoteContext extensionRunnerClassWhitelist]

  // instance methods
  -[_DASExtensionRemoteContext init]
  -[_DASExtensionRemoteContext .cxx_destruct]
  -[_DASExtensionRemoteContext suspend]
  -[_DASExtensionRemoteContext log]
  -[_DASExtensionRemoteContext setLog:]
  -[_DASExtensionRemoteContext extension]
  -[_DASExtensionRemoteContext hostContextWithError:]
  -[_DASExtensionRemoteContext performActivity:]
  -[_DASExtensionRemoteContext createExtensionRunnerWithClassName:]


_DASFileProtection : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *fileProtection

  // class methods
  +[_DASFileProtection supportsSecureCoding]
  +[_DASFileProtection complete]
  +[_DASFileProtection none]
  +[_DASFileProtection completeUnlessOpen]
  +[_DASFileProtection completeUntilFirstUserAuthentication]

  // instance methods
  -[_DASFileProtection isEqual:]
  -[_DASFileProtection copyWithZone:]
  -[_DASFileProtection encodeWithCoder:]
  -[_DASFileProtection initWithCoder:]
  -[_DASFileProtection .cxx_destruct]
  -[_DASFileProtection setFileProtection:]
  -[_DASFileProtection indicatesProtection]
  -[_DASFileProtection fileProtection]
  -[_DASFileProtection initWithProtection:]


NSMutableSet(_DASAdditions)
	// instance methods
	-[NSMutableSet(_DASAdditions) _DAS_addOrReplaceObject:]
	-[NSMutableSet(_DASAdditions) _DAS_unionSetOverridingExisting:]
	-[NSMutableSet(_DASAdditions) _DAS_addOrReplaceObjectsFromArray:]

NSArray(_DASAdditions)
	// class methods
	+[NSArray(_DASAdditions) array:withItemsIn:]
	+[NSArray(_DASAdditions) arrayWithIntersectionOf:and:]
	+[NSArray(_DASAdditions) arrayWithUnionOf:and:]

	// instance methods
	-[NSArray(_DASAdditions) standardDeviation]
	-[NSArray(_DASAdditions) anyItemsIntersectArray:]
	-[NSArray(_DASAdditions) mean]
	-[NSArray(_DASAdditions) standardDeviationWithMean:]
	-[NSArray(_DASAdditions) cooccurrencesWith:]
	-[NSArray(_DASAdditions) correlationWith:]

01 00 0540 /System/Library/PrivateFrameworks/AppConduit.framework/AppConduit: ACXDeviceConnection 
01 00 0640 /System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry: NRPairedDeviceRegistry 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0900 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0700 /System/Library/Frameworks/Network.framework/Network: NWEndpoint 
01 00 0700 /System/Library/Frameworks/Network.framework/Network: NWParameters 
01 00 0700 /System/Library/Frameworks/Network.framework/Network: NWPathEvaluator 
01 00 0440 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDClientContext 
01 00 0440 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextQueries 
01 00 0440 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualChangeRegistration 
01 00 0440 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualKeyPath 
01 00 0440 /System/Library/PrivateFrameworks/CoreDuetContext.framework/CoreDuetContext: _CDContextualPredicate 
01 00 0340 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKAnyStringIdentifier 
01 00 0340 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKEventStream 
01 00 0340 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKHistogramQuery 
01 00 0340 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKKnowledgeStore 
01 00 0340 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKPredictionTimeline 
01 00 0340 /System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet: _DKPredictor 
