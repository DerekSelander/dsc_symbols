|| __DATA.__objc_data _OBJC_CLASS_$_IMAVChatParticipant
|| __DATA.__objc_data _OBJC_CLASS_$_IMAVDaemonController
|| __DATA.__objc_data _OBJC_CLASS_$_IMAVDaemonListener
|| __DATA.__objc_data _OBJC_CLASS_$_IMAVLocalPreviewClient
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAVChatParticipant
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAVDaemonController
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAVDaemonListener
|| __DATA.__objc_data _OBJC_METACLASS_$_IMAVLocalPreviewClient
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMAVDaemonListener._handlers
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMAVDaemonListener._postedSetupComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_IMAVDaemonListener._setupComplete
|| __DATA_CONST.__const _IMAVCallManagerCallStateChangedNotification
|| __DATA_CONST.__const _IMAVCallManagerCallStateKey
|| __DATA_CONST.__const _IMAVCallManagerPreviousCallStateKey
|| __DATA_CONST.__const _IMAVChatCameraAspectRatioKey
|| __DATA_CONST.__const _IMAVChatCameraContentRectKey
|| __DATA_CONST.__const _IMAVChatCameraOrientationKey
|| __DATA_CONST.__const _IMAVChatCameraTypeKey
|| __DATA_CONST.__const _IMAVChatCameraWillChangeKey
|| __DATA_CONST.__const _IMAVChatConferenceIDChangedNotification
|| __DATA_CONST.__const _IMAVChatConferenceMetadataUpdatedNotification
|| __DATA_CONST.__const _IMAVChatIsMutedChangedNotification
|| __DATA_CONST.__const _IMAVChatMayRequireBreakBeforeMakeChangedNotification
|| __DATA_CONST.__const _IMAVChatMediaPropertiesChangedNotification
|| __DATA_CONST.__const _IMAVChatMediaStalledKey
|| __DATA_CONST.__const _IMAVChatMuteStateKey
|| __DATA_CONST.__const _IMAVChatNetworkStalledKey
|| __DATA_CONST.__const _IMAVChatParticipantAddedNotification
|| __DATA_CONST.__const _IMAVChatParticipantAspectRatioChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantCallInfoChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantCameraDidChangeNotification
|| __DATA_CONST.__const _IMAVChatParticipantCameraOrientationChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantCameraWillChangeNotification
|| __DATA_CONST.__const _IMAVChatParticipantContentRectChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantInFrequencyChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantInvitationDeliveredNotification
|| __DATA_CONST.__const _IMAVChatParticipantKey
|| __DATA_CONST.__const _IMAVChatParticipantMediaPropertiesChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantMediaStalledChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantMuteChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantNetworkStalledNotification
|| __DATA_CONST.__const _IMAVChatParticipantOutFrequencyChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantPauseChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantPreviousStateKey
|| __DATA_CONST.__const _IMAVChatParticipantReceivedFirstFrameNotification
|| __DATA_CONST.__const _IMAVChatParticipantScreenPropertiesChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantStateChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantStateKey
|| __DATA_CONST.__const _IMAVChatParticipantVideoQualityChangedNotification
|| __DATA_CONST.__const _IMAVChatParticipantWasRemovedNotification
|| __DATA_CONST.__const _IMAVChatParticipantsToBeRemovedKey
|| __DATA_CONST.__const _IMAVChatParticipantsWillBeRemovedNotification
|| __DATA_CONST.__const _IMAVChatPauseStateKey
|| __DATA_CONST.__const _IMAVChatSendingAudioChangedNotification
|| __DATA_CONST.__const _IMAVChatStateChangedNotification
|| __DATA_CONST.__const _IMAVChatStateKey
|| __DATA_CONST.__const _IMAVChatVideoDegradedKey
|| __DATA_CONST.__const _IMAVControllerAudioClientBundleIdentifier
|| __DATA_CONST.__const _IMAVControllerPendingACInvitationRequestComplete
|| __DATA_CONST.__const _IMAVControllerPendingAVInvitationRequestComplete
|| __DATA_CONST.__const _IMAVControllerVideoClientBundleIdentifier
|| __DATA_CONST.__const _IMAVDaemonDidConnectNotification
|| __DATA_CONST.__const _IMAVLocalIPChangeNewBlobKey
|| __DATA_CONST.__const _IMAVVideoCapabilitesChangedNotification
|| __DATA_CONST.__const __IMAVCallManagerCallStateChangedNotification
|| __DATA_CONST.__const __IMAVCallManagerCallTypeKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMAVCallManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMAVChat
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMAVController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMAVInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_IMAVTelephonyManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMAVCallManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMAVChat
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMAVController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMAVInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_IMAVTelephonyManager
|| __TEXT.__text _IsIMAVChatEndedReasonACallFailure
|| __TEXT.__text _ShouldAutoAcceptInvitations
|| __TEXT.__text __NSStringDescriptionForIMAVChatEndedReason
|| __TEXT.__text __NSStringDescriptionForIMAVChatError
|| __TEXT.__text __NSStringDescriptionForIMAVChatParticipantState
|| __TEXT.__text __NSStringDescriptionForIMAVChatState
|| __TEXT.__text __NSStringDescriptionForIMAVResponse
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopGetMain
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ FTAWD: _FTAWDLogCallConnected
__ FTAWD: _FTAWDLogCallEnded
__ FTAWD: _FTAWDLogCallEndedViceroy
__ FTAWD: _FTAWDLogCallFailed
__ FTAWD: _FTAWDLogCallInterruptionBegan
__ FTAWD: _FTAWDLogCallInterruptionEnded
__ FTAWD: _FTAWDLogCallStarted
__ FTAWD: _FTAWDSetSubmissionDate
__ FTServices: _FTEntitlementStatusChangedNotification
__ FTServices: _FaceTimeDeviceCapabilityChangedNotification
__ FTServices: _OBJC_CLASS_$_FTDeviceSupport
__ FTServices: _OBJC_CLASS_$_FTEntitlementSupport
__ FTServices: _OBJC_CLASS_$_FTNetworkSupport
__ FTServices: _OBJC_CLASS_$_FTServerBag
__ FTServices: _OBJC_CLASS_$_FTUserConfiguration
__ FTServices: __FTAreIDsEquivalent
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _NSStringFromSize
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSZeroSize
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ IMCore: _FZAVErrorDomain
__ IMCore: _FZRelayParameter_ConnectionID
__ IMCore: _FZRelayParameter_PeerBlob
__ IMCore: _FZRelayParameter_PeerID
__ IMCore: _FZRelayParameter_PeerNatIP
__ IMCore: _FZRelayParameter_PeerNatType
__ IMCore: _FZRelayParameter_PeerRelayIP
__ IMCore: _FZRelayParameter_PeerRelayNatIP
__ IMCore: _FZRelayParameter_PeerRelayNatPort
__ IMCore: _FZRelayParameter_PeerRelayPort
__ IMCore: _FZRelayParameter_RelayBlob
__ IMCore: _FZRelayParameter_RemotePrimaryId
__ IMCore: _FZRelayParameter_SelfBlob
__ IMCore: _FZRelayParameter_SelfNatIP
__ IMCore: _FZRelayParameter_SelfNatType
__ IMCore: _FZRelayParameter_SelfRelayIP
__ IMCore: _FZRelayParameter_SelfRelayNatIP
__ IMCore: _FZRelayParameter_SelfRelayNatPort
__ IMCore: _FZRelayParameter_SelfRelayPort
__ IMCore: _FZRelayParameter_Token
__ IMCore: _FZRelayParameter_TransactionID
__ IMCore: _FZRelayType
__ IMCore: _IMGetAppBoolForKey
__ IMCore: _IMGetDomainBoolForKey
__ IMCore: _IMGetDomainIntForKey
__ IMCore: _IMGetDomainValueForKey
__ IMCore: _IMGetMainBundleIdentifier
__ IMCore: _IMHandleInfoChangedNotification
__ IMCore: _IMLocalObjectDidDisconnectNotification
__ IMCore: _IMLogBacktrace
__ IMCore: _IMLogSimulateCrashForException
__ IMCore: _IMMobileNetworkManagerAirplaneModeChangedNotification
__ IMCore: _IMOperationalAccountForService
__ IMCore: _IMPerformPingTest
__ IMCore: _IMRemoteObjectDidDisconnectNotification
__ IMCore: _IMRemoteObjectsRunLoopMode
__ IMCore: _IMRemoteObjectsRunLoopModes
__ IMCore: _IMSingleObjectArray
__ IMCore: _IMStringIsEmail
__ IMCore: _IMTimeOfDay
__ IMCore: _IMWeakLinkClass
__ IMCore: _IMWeakLinkSymbol
__ IMCore: _OBJC_CLASS_$_IMAccount
__ IMCore: _OBJC_CLASS_$_IMAccountController
__ IMCore: _OBJC_CLASS_$_IMDaemonController
__ IMCore: _OBJC_CLASS_$_IMHandle
__ IMCore: _OBJC_CLASS_$_IMLocalObject
__ IMCore: _OBJC_CLASS_$_IMLockdownManager
__ IMCore: _OBJC_CLASS_$_IMMobileNetworkManager
__ IMCore: _OBJC_CLASS_$_IMNetworkAvailability
__ IMCore: _OBJC_CLASS_$_IMParentalControls
__ IMCore: _OBJC_CLASS_$_IMPowerAssertion
__ IMCore: _OBJC_CLASS_$_IMRemoteObjectBroadcaster
__ IMCore: _OBJC_CLASS_$_IMService
__ IMCore: _OBJC_CLASS_$_IMServiceImpl
__ IMCore: _OBJC_CLASS_$_IMSystemMonitor
__ IMCore: _OBJC_CLASS_$_IMTimingCollection
__ IMCore: _OBJC_CLASS_$_IMWeakReference
__ IMCore: _OBJC_CLASS_$_NetworkChangeNotifier
__ IMCore: _SecureRandomUInt
__ IMCore: __IMGetAVAgentRemoteObject
__ IMCore: __IMLoggingSetFailureReason
__ IMCore: __IMWillLog
__ IMCore: _im_dispatch_after
__ IMCore: _im_main_thread
__ IMCore: _im_notify_register_dispatch
__ IMCore: _kFZListenerCapAVObserver
__ IMCore: _kFZListenerCapAppleAC
__ IMCore: _kFZListenerCapAppleVC
__ IMCore: _kFZPersonPictureData
__ IMCore: _kFZVCPropertyAudioOnly
__ IMCore: _kFZVCPropertyCN
__ IMCore: _kFZVCPropertyCallIsReinitiate
__ IMCore: _kFZVCPropertyConferenceData
__ IMCore: _kFZVCPropertyHasReinitiateCapability
__ IMCore: _kFZVCPropertyICEData
__ IMCore: _kFZVCPropertyInlineRelayInitiate
__ IMCore: _kFZVCPropertyInviteesList
__ IMCore: _kFZVCPropertyNATIP
__ IMCore: _kFZVCPropertyNATType
__ IMCore: _kFZVCPropertyOngoingConferenceID
__ IMCore: _kFZVCPropertyPeerICEData
__ IMCore: _kFZVCPropertyPeerMayRequireCTBreak
__ IMCore: _kFZVCPropertyPeerNATIP
__ IMCore: _kFZVCPropertyPeerNATType
__ IMCore: _kFZVCPropertyPeerProtocolVersion
__ IMCore: _kFZVCPropertyPresentity
__ IMCore: _kFZVCPropertyResponse
__ IMCore: _kFZVCPropertyResponseData
__ IMCore: _kFZVCPropertySKEData
__ IMCore: _kFZVCPropertySessionID
__ IMCore: _kFZVCPropertyTargetAddress
__ Marco: _MarcoLogCallInfo
__ Marco: _MarcoShouldLog
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_set_state
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _protocol_getMethodDescription
IMAVHandler : NSObject
  // class methods
  +[IMAVHandler initialize]
  +[IMAVHandler ensureHandlerSetup]

  // instance methods
  -[IMAVHandler vcCapabilitiesChanged:]
  -[IMAVHandler account:conference:receivedAVMessage:from:sessionID:userInfo:]
  -[IMAVHandler persistentProperty:changedTo:from:]
  -[IMAVHandler account:relay:handleUpdate:fromPerson:]
  -[IMAVHandler account:conference:peerIDChangedFromID:toID:]
  -[IMAVHandler account:relay:handleCancel:fromPerson:]
  -[IMAVHandler account:conference:invitationSentSuccessfully:]
  -[IMAVHandler property:changedTo:from:]
  -[IMAVHandler account:conference:receivedResponseToInvitationFrom:properties:]
  -[IMAVHandler _handleIncomingWithAccount:fromHandle:conference:properites:]
  -[IMAVHandler .cxx_destruct]
  -[IMAVHandler pendingVCRequestComplete]
  -[IMAVHandler account:postedError:]
  -[IMAVHandler setupComplete]
  -[IMAVHandler _notifyOfIncomingInvitationFor:notifyInvitationListeners:]
  -[IMAVHandler _handleIncomingAVChatForNotification:]
  -[IMAVHandler account:conference:peerID:propertiesUpdated:]
  -[IMAVHandler _enqueueIMAVChatForNetworkActivation:]
  -[IMAVHandler account:conference:changedToNewConferenceID:]
  -[IMAVHandler pendingACRequestComplete]
  -[IMAVHandler account:avAction:withArguments:toAVChat:isVideo:]
  -[IMAVHandler account:conference:receivedCancelInvitationFrom:properties:]
  -[IMAVHandler account:conference:receivedInvitationFrom:properties:]
  -[IMAVHandler account:relay:handleInitate:fromPerson:]


IMAVChat : NSObject <IMSystemMonitorListener>
 @property  ^v localVideoLayer
 @property  ^v localVideoBackLayer
 @property  unsigned int cameraOrientation
 @property  unsigned int cameraType
 @property  double invitationTimeoutTime
 @property  double connectionTimeoutTime
 @property  BOOL isMute
 @property  BOOL isRemoteMute
 @property  BOOL isSendingAudio
 @property  BOOL didRemoteMute
 @property  BOOL isPaused
 @property  BOOL hasReceivedFirstFrame
 @property  BOOL isSendingVideo
 @property  BOOL didRemotePause
 @property  BOOL _allParticipantsUsingICE
 @property  NSDictionary *_extraServerContext
 @property  NSString *conferenceID
 @property  NSString *_callStatisticsGUID
 @property  id _conferenceController
 @property  NSString *GUID
 @property  NSNumber *_natType
 @property  NSNumber *_remoteNatType
 @property  NSNumber *_currentNatType
 @property  int _connectionType
 @property  long long _bustedCallID
 @property  NSNumber *_connectDuration
 @property  NSNumber *_callDuration
 @property  NSNumber *_relayConnectDuration
 @property  BOOL _usesRelay
 @property  BOOL _isProxy
 @property  NSData *_relayRemotePrimaryIdentifier
 @property  NSDate *_interruptionBegan
 @property  NSNumber *_frontCameraCaptureTime
 @property  NSNumber *_backCameraCaptureTime
 @property  NSNumber *dataRate
 @property  NSNumber *dataUploaded
 @property  NSNumber *dataDownloaded
 @property  BOOL _isVideoInterrupted
 @property  BOOL _isAudioInterrupted
 @property  unsigned long _localNetworkConnectionType
 @property  unsigned long _remoteNetworkConnectionType
 @property  BOOL _needsAudioRestart
 @property  BOOL _needsVideoRestart
 @property  NSObject<OS_dispatch_queue> *_conferenceQueue
 @property  NSDictionary *_pingTestResults
 @property  long long _pingTestResult
 @property  long long _networkCheckResult
 @property  NSDictionary *callerProperties
 @property  BOOL _connectionStarted
 @property  NSArray *_imHandles
 @property  BOOL mayRequireBreakBeforeMake
 @property  NSTimer *inviteTimeoutTimer
 @property  NSDate *inviteTimeoutTimerStart
 @property  NSTimer *firstFrameTimeoutTimer
 @property  NSTimer *connectionTimeoutTimer
 @property  {CGSize=dd} portraitAspectRatios
 @property  {CGSize=dd} landscapeAspectRatios
 @property  BOOL terminating
 @property  BOOL didRemoteMute
 @property  BOOL didRemotePause
 @property  BOOL airplaneModeEnabled
 @property  BOOL metadataFinalized
 @property  unsigned int sessionID
 @property  IMHandle *initiatorIMHandle
 @property  IMHandle *otherIMHandle
 @property  IMAccount *account
 @property  IMAVChatParticipant *initiatorParticipant
 @property  IMAVChatParticipant *localParticipant
 @property  NSArray *participants
 @property  NSArray *remoteParticipants
 @property  unsigned int state
 @property  BOOL isActive
 @property  BOOL isStateFinal
 @property  int endedError
 @property  unsigned int endedReason
 @property  NSDate *dateCreated
 @property  NSDate *dateConnected
 @property  NSDate *dateEnded
 @property  BOOL isCaller
 @property  BOOL isVideo
 @property  BOOL isUsingWifi
 @property  BOOL relayed

  // class methods
  +[IMAVChat _connectingChats]
  +[IMAVChat _avChatArray]
  +[IMAVChat _avChatWithConferenceID:]
  +[IMAVChat chatList]
  +[IMAVChat _avChatWithGUID:]
  +[IMAVChat outgoingInvitations]
  +[IMAVChat _chatListLock]
  +[IMAVChat _chatWithSessionID:]
  +[IMAVChat _bestGuessAVChatWithIMHandle:conferenceID:sessionID:properties:]
  +[IMAVChat nonFinalChat]
  +[IMAVChat connectedChat]
  +[IMAVChat avChatWithGUID:]
  +[IMAVChat _proxyRepresentationForIMHandle:]
  +[IMAVChat _avChatWaitingForReplyFromIMHandle:orConferenceID:]
  +[IMAVChat incomingInvitations]
  +[IMAVChat _activeChat]
  +[IMAVChat _chatsWithIMAVChatState:]
  +[IMAVChat _incomingInvitations]
  +[IMAVChat systemSupportsNewOutgoingConferenceTo:isVideo:]
  +[IMAVChat _avChatConnectingFromIMHandle:]
  +[IMAVChat _avChatWithMatchingIMHandles:video:]
  +[IMAVChat _connectedChat]
  +[IMAVChat _acceptedChats]
  +[IMAVChat setDefaultInvitationTimeoutTime:]
  +[IMAVChat _connectedChats]
  +[IMAVChat _chatList]
  +[IMAVChat acceptedChats]
  +[IMAVChat connectingChats]
  +[IMAVChat _outgoingInvitations]
  +[IMAVChat defaultInvitationTimeoutTime]
  +[IMAVChat activeChat]
  +[IMAVChat chatsWithIMAVChatState:]
  +[IMAVChat defaultConnectionTimeoutTime]
  +[IMAVChat _nonFinalChat]
  +[IMAVChat _imHandleFromProxyRepresentation:]
  +[IMAVChat connectedChats]
  +[IMAVChat setDefaultConnectionTimeoutTime:]
  +[IMAVChat _avChatInvitedByIMHandle:orConferenceID:]

  // instance methods
  -[IMAVChat participants]
  -[IMAVChat account]
  -[IMAVChat systemApplicationDidResume]
  -[IMAVChat isVideo]
  -[IMAVChat isTerminating]
  -[IMAVChat GUID]
  -[IMAVChat sessionID]
  -[IMAVChat setPaused:]
  -[IMAVChat state]
  -[IMAVChat isPaused]
  -[IMAVChat dealloc]
  -[IMAVChat dateCreated]
  -[IMAVChat isActive]
  -[IMAVChat .cxx_destruct]
  -[IMAVChat cameraOrientation]
  -[IMAVChat setMute:]
  -[IMAVChat _applicationWillTerminate:]
  -[IMAVChat toggleMute]
  -[IMAVChat cameraType]
  -[IMAVChat _setAirplaneModeEnabled:]
  -[IMAVChat localParticipant]
  -[IMAVChat systemApplicationDidBecomeActive]
  -[IMAVChat setCameraOrientation:]
  -[IMAVChat systemApplicationDidEnterBackground]
  -[IMAVChat systemApplicationWillEnterForeground]
  -[IMAVChat systemApplicationDidSuspend]
  -[IMAVChat _postNotificationName:userInfo:]
  -[IMAVChat airplaneModeEnabled]
  -[IMAVChat _connectionType]
  -[IMAVChat setCameraType:]
  -[IMAVChat _callDuration]
  -[IMAVChat systemWillShutdown]
  -[IMAVChat systemApplicationDidResumeForEventsOnly]
  -[IMAVChat notificationCenterWillAppear]
  -[IMAVChat notificationCenterDidDisappear]
  -[IMAVChat systemDidFastUserSwitchOut]
  -[IMAVChat stopPreview]
  -[IMAVChat _timings]
  -[IMAVChat cancelInvitation]
  -[IMAVChat acceptInvitation]
  -[IMAVChat declineInvitation]
  -[IMAVChat _isProxy]
  -[IMAVChat isSendingVideo]
  -[IMAVChat setIsSendingVideo:]
  -[IMAVChat setRemoteVideoPresentationSize:]
  -[IMAVChat setRemoteVideoPresentationState:]
  -[IMAVChat isSendingAudio]
  -[IMAVChat setIsSendingAudio:]
  -[IMAVChat dateConnected]
  -[IMAVChat dateEnded]
  -[IMAVChat _clearCache]
  -[IMAVChat endedReason]
  -[IMAVChat dataRate]
  -[IMAVChat _usesRelay]
  -[IMAVChat _networkCheckResult]
  -[IMAVChat _connectDuration]
  -[IMAVChat _relayConnectDuration]
  -[IMAVChat _imHandles]
  -[IMAVChat _setGUID:]
  -[IMAVChat mayRequireBreakBeforeMake]
  -[IMAVChat setMayRequireBreakBeforeMake:]
  -[IMAVChat hasReceivedFirstFrame]
  -[IMAVChat isMute]
  -[IMAVChat conferenceID]
  -[IMAVChat isCaller]
  -[IMAVChat remoteParticipants]
  -[IMAVChat setDataRate:]
  -[IMAVChat _currentNatType]
  -[IMAVChat _remoteNatType]
  -[IMAVChat _isAudioInterrupted]
  -[IMAVChat _isVideoInterrupted]
  -[IMAVChat isRelayed]
  -[IMAVChat setLocalVideoLayer:]
  -[IMAVChat localVideoLayer]
  -[IMAVChat _airplaneModeChanged:]
  -[IMAVChat _entitlementsChanged:]
  -[IMAVChat _vccInitDidFinish:]
  -[IMAVChat _setConferenceID:]
  -[IMAVChat _initWith:invitedBy:sessionID:GUID:video:extraProperties:]
  -[IMAVChat _initWith:invitedBy:sessionID:isRelayed:GUID:video:extraProperties:]
  -[IMAVChat initIncomingFrom:isVideo:callerProperties:]
  -[IMAVChat _initOutgoingTo:isVideo:isRelayed:GUID:]
  -[IMAVChat initOutgoingTo:isVideo:]
  -[IMAVChat initOutgoingTo:isVideo:isRelayed:]
  -[IMAVChat initOutgoingTo:isVideo:isRelayed:GUID:]
  -[IMAVChat beginChat]
  -[IMAVChat endChat]
  -[IMAVChat endChatWithReason:]
  -[IMAVChat endChatWithError:]
  -[IMAVChat endChatWithReason:error:]
  -[IMAVChat _endChatWithReason:andError:]
  -[IMAVChat inviteesInfo]
  -[IMAVChat _isCallUpgradeTo:]
  -[IMAVChat _isVideoUpgradeTo:]
  -[IMAVChat inviteAll]
  -[IMAVChat _cancelInvitationWithReason:error:]
  -[IMAVChat invite:additionalPeers:excludingPushTokens:]
  -[IMAVChat invite:additionalPeers:]
  -[IMAVChat invite:]
  -[IMAVChat declineInvitationWithResponse:]
  -[IMAVChat _setStateDisconnected]
  -[IMAVChat _processVCResponseDict:]
  -[IMAVChat __responseToVCInvite:]
  -[IMAVChat _responseToVCInvite:]
  -[IMAVChat _handleGenericAVMessageFromParticipant:type:userInfo:handled:]
  -[IMAVChat handleGenericAVMessageFromParticipant:type:userInfo:]
  -[IMAVChat participantWithAVConferenceCallID:]
  -[IMAVChat participantWithID:]
  -[IMAVChat vcPartyIDForIMHandle:]
  -[IMAVChat participantMatchingIMHandle:]
  -[IMAVChat _setCallerProperties:]
  -[IMAVChat otherIMHandle]
  -[IMAVChat endedError]
  -[IMAVChat _setCreationDate]
  -[IMAVChat _setDateConnected]
  -[IMAVChat _bustedCallID]
  -[IMAVChat isConferenceSilent]
  -[IMAVChat _natType]
  -[IMAVChat isUsingWifi]
  -[IMAVChat setRelayed:]
  -[IMAVChat _localNetworkConnectionType]
  -[IMAVChat _handleAVError:]
  -[IMAVChat _postNotificationName:participant:userInfo:]
  -[IMAVChat _noteFirstFrame]
  -[IMAVChat _cacheBool:forKey:]
  -[IMAVChat _hasCachedBoolForKey:]
  -[IMAVChat _cachedBoolForKey:]
  -[IMAVChat _conferenceQueue]
  -[IMAVChat set_conferenceQueue:]
  -[IMAVChat _setConnectionType:]
  -[IMAVChat _callStatisticsGUID]
  -[IMAVChat _setCallStatisticsGUID:]
  -[IMAVChat callerProperties]
  -[IMAVChat initiatorIMHandle]
  -[IMAVChat _setNatType:]
  -[IMAVChat _setLocalNetworkConnectionType:]
  -[IMAVChat _remoteNetworkConnectionType]
  -[IMAVChat _setRemoteNetworkConnectionType:]
  -[IMAVChat _needsAudioRestart]
  -[IMAVChat _setNeedsAudioRestart:]
  -[IMAVChat _needsVideoRestart]
  -[IMAVChat _setNeedsVideoRestart:]
  -[IMAVChat _interruptionBegan]
  -[IMAVChat _setInterruptionBegan:]
  -[IMAVChat _frontCameraCaptureTime]
  -[IMAVChat _setFrontCameraCaptureTime:]
  -[IMAVChat _backCameraCaptureTime]
  -[IMAVChat _setBackCameraCaptureTime:]
  -[IMAVChat dataUploaded]
  -[IMAVChat setDataUploaded:]
  -[IMAVChat dataDownloaded]
  -[IMAVChat setDataDownloaded:]
  -[IMAVChat _setIsVideoInterrupted:]
  -[IMAVChat _setIsAudioInterrupted:]
  -[IMAVChat _connectionStarted]
  -[IMAVChat _setConnectionStarted:]
  -[IMAVChat _relayRemotePrimaryIdentifier]
  -[IMAVChat _setRelayRemotePrimaryIdentifier:]
  -[IMAVChat _conferenceController]
  -[IMAVChat _setConferenceController:]
  -[IMAVChat _extraServerContext]
  -[IMAVChat _pingTestResults]
  -[IMAVChat _setPingTestResults:]
  -[IMAVChat _pingTestResult]
  -[IMAVChat _setPingTestResult:]
  -[IMAVChat _setNetworkCheckResult:]
  -[IMAVChat inviteTimeoutTimer]
  -[IMAVChat _setInviteTimeoutTimer:]
  -[IMAVChat inviteTimeoutTimerStart]
  -[IMAVChat _setInviteTimeoutTimerStart:]
  -[IMAVChat firstFrameTimeoutTimer]
  -[IMAVChat _setFirstFrameTimeoutTimer:]
  -[IMAVChat connectionTimeoutTimer]
  -[IMAVChat _setConnectionTimeoutTimer:]
  -[IMAVChat portraitAspectRatios]
  -[IMAVChat _setPortraitAspectRatios:]
  -[IMAVChat landscapeAspectRatios]
  -[IMAVChat _setLandscapeAspectRatios:]
  -[IMAVChat _setTerminating:]
  -[IMAVChat didRemoteMute]
  -[IMAVChat _setDidRemoteMute:]
  -[IMAVChat didRemotePause]
  -[IMAVChat _setDidRemotePause:]
  -[IMAVChat metadataFinalized]
  -[IMAVChat _setMetadataFinalized:]
  -[IMAVChat initiatorParticipant]
  -[IMAVChat isStateFinal]
  -[IMAVChat localAspectRatioForCameraOrientation:cameraType:]
  -[IMAVChat startPreviewWithError:]
  -[IMAVChat localVideoBackLayer]
  -[IMAVChat setLocalVideoBackLayer:]
  -[IMAVChat setLocalAspectRatio:cameraOrientation:cameraType:]
  -[IMAVChat invitationTimeoutTime]
  -[IMAVChat setInvitationTimeoutTime:]
  -[IMAVChat connectionTimeoutTime]
  -[IMAVChat setConnectionTimeoutTime:]
  -[IMAVChat _postParticipantMediaChangeNotification:cameraChanged:orientationChanged:aspectChanged:cameraWillSwitch:camera:orientation:aspect:]
  -[IMAVChat _connectionTimeout:]
  -[IMAVChat _invitationTimeout:]
  -[IMAVChat _firstFrameTimeout:]
  -[IMAVChat _clearConnectionTimeoutTimer]
  -[IMAVChat _setConnectionTimeoutTimer]
  -[IMAVChat _clearInvitationTimeoutTimer]
  -[IMAVChat _setInvitationTimeoutTimer]
  -[IMAVChat _reduceInvitationTimeoutTime]
  -[IMAVChat _clearFirstFrameTimeoutTimer]
  -[IMAVChat _setFirstFrameTimeoutTimer]
  -[IMAVChat conferenceDidStopWithCallID:error:]
  -[IMAVChat conferenceDidPauseAudioWithCallID:didPauseAudio:]
  -[IMAVChat conferenceAVConferenceCallID:didConnect:]
  -[IMAVChat _conferenceOtherParticipant:didConnect:]
  -[IMAVChat conferencePersonWithID:didMute:]
  -[IMAVChat conferencePersonWithID:didPause:]
  -[IMAVChat conferencePersonWithID:didDegrade:]
  -[IMAVChat conferencePersonWithID:mediaDidStall:]
  -[IMAVChat conferencePersonWithID:sendRelayRequest:]
  -[IMAVChat conferencePersonWithID:sendRelayUpdate:]
  -[IMAVChat conferencePersonWithID:sendRelayCancel:]
  -[IMAVChat conferencePersonWithID:localIPDidChange:]
  -[IMAVChat setRemoteMute:]
  -[IMAVChat isRemoteMute]
  -[IMAVChat togglePaused]
  -[IMAVChat _handleRelayInitate:fromParticipant:]
  -[IMAVChat _handleRelayUpdate:fromParticipant:]
  -[IMAVChat _handleRelayCancel:fromParticipant:]
  -[IMAVChat _setActiveConference]
  -[IMAVChat participant:changedFromState:toState:]
  -[IMAVChat _postStateToDelegateIfNecessary]
  -[IMAVChat _saveAudioRestartState]
  -[IMAVChat _saveVideoRestartState]
  -[IMAVChat _resumeAudioState]
  -[IMAVChat _resumeVideoState]
  -[IMAVChat _peerID:changedTo:]
  -[IMAVChat _updateIMHandleInBuddyList:]
  -[IMAVChat _insertRemoteParticipant:atIndex:]
  -[IMAVChat _moveVCPartyID:toIndex:inCount:]
  -[IMAVChat _initParticipantsWithIMHandles:]
  -[IMAVChat _participantsCheckOut]
  -[IMAVChat _allParticipantsUsingICE]
  -[IMAVChat _participantMatchingVCPartyID:]
  -[IMAVChat _proxyRepresentationForIMAVChatParticipant:]
  -[IMAVChat _proxyRepresentation]
  -[IMAVChat setMetadataFinalized]
  -[IMAVChat _submitCallStartedLoggingWithRecipientID:isCaller:isVideo:]
  -[IMAVChat _submitCallConnectedLogging]
  -[IMAVChat _submitCallInterruptionBeganLogging]
  -[IMAVChat _submitCallInterruptionEndedLogging]
  -[IMAVChat __sendEndCallMetricToViceroyWithReason:andError:]
  -[IMAVChat __sendEndCallMetricToAWDWithReason:andError:]
  -[IMAVChat _submitCallEndedLoggingWithReason:andError:]


IMAVChatParticipant : NSObject
 @property  ^v videoLayer
 @property  ^v videoBackLayer
 @property  BOOL isAudioMuted
 @property  BOOL isVideoPaused
 @property  BOOL isSendingAudio
 @property  BOOL isSendingVideo
 @property  BOOL isVideoDegraded
 @property  BOOL isMediaStalled
 @property  BOOL isAudioMuted
 @property  BOOL isVideoPaused
 @property  BOOL isSendingAudio
 @property  BOOL isSendingVideo
 @property  NSMutableArray *_participantsCallInfo
 @property  BOOL _inviteDelivered
 @property  int error
 @property  NSTimer *_connectTimeoutTimer
 @property  NSString *_conferenceID
 @property  NSDictionary *properties
 @property  {CGSize=dd} _remoteLandscapeOrientation
 @property  {CGSize=dd} _remotePortraitOrientation
 @property  {CGSize=dd} _remotePIPLandscapeOrientation
 @property  {CGSize=dd} _remotePIPPortraitOrientation
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _remotePortraitContentRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} _remoteLandscapeContentRect
 @property  BOOL hasReinitiateCapability
 @property  BOOL hasUnfinishedSessions
 @property  BOOL hasConnectingSessions
 @property  unsigned int cameraType
 @property  unsigned int cameraOrientation
 @property  unsigned int _screenOrientation
 @property  IMAVChat *avChat
 @property  BOOL isVideoDegraded
 @property  BOOL isMediaStalled
 @property  NSString *vcPartyID
 @property  long long _activeCallID
 @property  IMHandle *imHandle
 @property  IMHandle *invitedBy
 @property  NSString *name
 @property  BOOL isInitiator
 @property  BOOL isLocalParticipant
 @property  NSArray *additionalPeers
 @property  NSArray *excludingPushTokens
 @property  unsigned int reasonChatEnded
 @property  unsigned int state
 @property  NSData *inFrequencyLevel
 @property  NSData *outFrequencyLevel

  // instance methods
  -[IMAVChatParticipant setProperties:]
  -[IMAVChatParticipant videoLayer]
  -[IMAVChatParticipant properties]
  -[IMAVChatParticipant setVideoLayer:]
  -[IMAVChatParticipant error]
  -[IMAVChatParticipant state]
  -[IMAVChatParticipant dealloc]
  -[IMAVChatParticipant .cxx_destruct]
  -[IMAVChatParticipant cameraOrientation]
  -[IMAVChatParticipant cameraType]
  -[IMAVChatParticipant sendResponse:]
  -[IMAVChatParticipant name]
  -[IMAVChatParticipant init]
  -[IMAVChatParticipant setState:]
  -[IMAVChatParticipant isInitiator]
  -[IMAVChatParticipant sendInvitation]
  -[IMAVChatParticipant cancelInvitation]
  -[IMAVChatParticipant isVideoPaused]
  -[IMAVChatParticipant setVideoPaused:]
  -[IMAVChatParticipant isSendingVideo]
  -[IMAVChatParticipant setMediaStalled:]
  -[IMAVChatParticipant setVideoDegraded:]
  -[IMAVChatParticipant isSendingAudio]
  -[IMAVChatParticipant isMediaStalled]
  -[IMAVChatParticipant isVideoDegraded]
  -[IMAVChatParticipant invitedBy]
  -[IMAVChatParticipant _connectTimeoutTimer]
  -[IMAVChatParticipant setAudioMuted:]
  -[IMAVChatParticipant isAudioMuted]
  -[IMAVChatParticipant _conferenceID]
  -[IMAVChatParticipant disconnectFromAVChat]
  -[IMAVChatParticipant _setConferenceID:]
  -[IMAVChatParticipant _natType]
  -[IMAVChatParticipant _initAs:invitedBy:sendingAudio:sendingVideo:usingICE:toChat:inState:withError:andReason:andVCPartyID:account:]
  -[IMAVChatParticipant _registerCallInfo:]
  -[IMAVChatParticipant callInfoBeingHandedOff]
  -[IMAVChatParticipant matchesAVConferenceCallID:]
  -[IMAVChatParticipant hasUnfinishedSessions]
  -[IMAVChatParticipant hasConnectingSessions]
  -[IMAVChatParticipant hasReinitiateCapability]
  -[IMAVChatParticipant _activeCallID]
  -[IMAVChatParticipant bestCallID]
  -[IMAVChatParticipant _callInfoForCallID:]
  -[IMAVChatParticipant initAs:invitedBy:toChat:account:]
  -[IMAVChatParticipant isLocalParticipant]
  -[IMAVChatParticipant requestIconIfNecessary]
  -[IMAVChatParticipant _callInfoWithState:]
  -[IMAVChatParticipant _callInfosWaitingForAcceptAction]
  -[IMAVChatParticipant _callInfosWaitingForResponse]
  -[IMAVChatParticipant _processIncomingCallProperties:]
  -[IMAVChatParticipant _processResponseDictionary:allowSecondConnection:]
  -[IMAVChatParticipant _generateCallInfo:]
  -[IMAVChatParticipant _handleIMAVResponse:]
  -[IMAVChatParticipant _noteInviteDelivered:]
  -[IMAVChatParticipant _cleanupOrphanedCallInfos]
  -[IMAVChatParticipant _hangupCallLaterIfReinitiateFailsForCallInfo:]
  -[IMAVChatParticipant _callInfoForReinitiate]
  -[IMAVChatParticipant reinitializeCallForCallID:]
  -[IMAVChatParticipant setStateToEndedWithReason:andError:]
  -[IMAVChatParticipant _setState:withReason:andError:]
  -[IMAVChatParticipant _processPropertyUpdate:]
  -[IMAVChatParticipant _updateProperties:]
  -[IMAVChatParticipant setInFrequencyLevel:]
  -[IMAVChatParticipant setOutFrequencyLevel:]
  -[IMAVChatParticipant _switchToUseNewIMHandle:]
  -[IMAVChatParticipant sendAVMessage:userInfo:]
  -[IMAVChatParticipant contentRectForCameraOrientation:cameraType:]
  -[IMAVChatParticipant aspectRatioForCameraOrientation:cameraType:]
  -[IMAVChatParticipant localAspectRatioForCameraOrientation:cameraType:]
  -[IMAVChatParticipant additionalPeers]
  -[IMAVChatParticipant setAdditionalPeers:]
  -[IMAVChatParticipant excludingPushTokens]
  -[IMAVChatParticipant setExcludingPushTokens:]
  -[IMAVChatParticipant vcPartyID]
  -[IMAVChatParticipant setVCPartyID:]
  -[IMAVChatParticipant _setCameraType:]
  -[IMAVChatParticipant _setCameraOrientation:]
  -[IMAVChatParticipant imHandle]
  -[IMAVChatParticipant avChat]
  -[IMAVChatParticipant setAVChat:]
  -[IMAVChatParticipant reasonChatEnded]
  -[IMAVChatParticipant _setChatError:]
  -[IMAVChatParticipant _remotePortraitOrientation]
  -[IMAVChatParticipant _setRemotePortraitOrientation:]
  -[IMAVChatParticipant _remoteLandscapeOrientation]
  -[IMAVChatParticipant _setRemoteLandscapeOrientation:]
  -[IMAVChatParticipant _inviteDelivered]
  -[IMAVChatParticipant _setInviteDelivered:]
  -[IMAVChatParticipant _setConnectTimeoutTimer:]
  -[IMAVChatParticipant _remotePIPPortraitOrientation]
  -[IMAVChatParticipant _setRemotePIPPortraitOrientation:]
  -[IMAVChatParticipant _remotePIPLandscapeOrientation]
  -[IMAVChatParticipant _setRemotePIPLandscapeOrientation:]
  -[IMAVChatParticipant _remotePortraitContentRect]
  -[IMAVChatParticipant _setRemotePortraitContentRect:]
  -[IMAVChatParticipant _remoteLandscapeContentRect]
  -[IMAVChatParticipant _setRemoteLandscapeContentRect:]
  -[IMAVChatParticipant _screenOrientation]
  -[IMAVChatParticipant _setScreenOrientation:]
  -[IMAVChatParticipant _participantsCallInfo]
  -[IMAVChatParticipant set_participantsCallInfo:]
  -[IMAVChatParticipant setHasReinitiateCapability:]
  -[IMAVChatParticipant inFrequencyLevel]
  -[IMAVChatParticipant outFrequencyLevel]
  -[IMAVChatParticipant _connectTimeout:]
  -[IMAVChatParticipant _reInitiateWithCallInfo:]
  -[IMAVChatParticipant cancelInvitationWithResponse:]
  -[IMAVChatParticipant cancelInvitationWithReason:]
  -[IMAVChatParticipant _cancelInvitationWithReason:response:]
  -[IMAVChatParticipant _sendResponse:callInfo:]
  -[IMAVChatParticipant setWaitingToConnect:]
  -[IMAVChatParticipant resetWaitingToConnectTimer]
  -[IMAVChatParticipant videoBackLayer]
  -[IMAVChatParticipant setVideoBackLayer:]
  -[IMAVChatParticipant _proxyRepresentation]


IMAVInterface : NSObject
 @property  unsigned int overallChatState
 @property  BOOL supportsRelay
 @property  id delegate
 @property  BOOL supportsLayers
 @property  BOOL isAVInterfaceReady
 @property  unsigned long capabilities
 @property  unsigned long capabilitiesOfNetwork
 @property  unsigned long capabilitiesOfCPU
 @property  id _controller
 @property  unsigned int maxBitrate
 @property  id controller
 @property  BOOL systemCanVideoChat
 @property  BOOL systemCanAudioChat
 @property  BOOL systemSupportsFrontFacingCamera
 @property  BOOL systemSupportsBackFacingCamera
 @property  ^v localVideoBackLayer
 @property  ^v localVideoLayer
 @property  BOOL shouldKeepCameraRunning

  // class methods
  +[IMAVInterface sharedInstance]

  // instance methods
  -[IMAVInterface persistentProperty:changedTo:from:]
  -[IMAVInterface setDelegate:]
  -[IMAVInterface supportsRelay]
  -[IMAVInterface delegate]
  -[IMAVInterface _runPingTestForChat:]
  -[IMAVInterface dealloc]
  -[IMAVInterface .cxx_destruct]
  -[IMAVInterface capabilities]
  -[IMAVInterface chatStateUpdated]
  -[IMAVInterface _controller]
  -[IMAVInterface controller]
  -[IMAVInterface _conferenceWillStart:]
  -[IMAVInterface _conferenceEnded:]
  -[IMAVInterface _checkNetworkForChat:requiresWifi:]
  -[IMAVInterface overallChatState]
  -[IMAVInterface stopPreview]
  -[IMAVInterface maxBitrate]
  -[IMAVInterface setMaxBitrate:]
  -[IMAVInterface setLocalVideoLayer:]
  -[IMAVInterface localVideoLayer]
  -[IMAVInterface _avChatDealloc:]
  -[IMAVInterface initAVInterface]
  -[IMAVInterface cleanupAVInterface]
  -[IMAVInterface _notifyAboutPotentialCallForChat:]
  -[IMAVInterface chatRelayedStatusChanged:]
  -[IMAVInterface isAVInterfaceReady]
  -[IMAVInterface unsetDelegate:]
  -[IMAVInterface systemCanVideoChat]
  -[IMAVInterface systemCanAudioChat]
  -[IMAVInterface systemSupportsFrontFacingCamera]
  -[IMAVInterface systemSupportsBackFacingCamera]
  -[IMAVInterface isMuteForAVChat:]
  -[IMAVInterface avChat:setMute:]
  -[IMAVInterface isPausedForAVChat:]
  -[IMAVInterface avChat:setPaused:]
  -[IMAVInterface isRemoteMuteForAVChat:]
  -[IMAVInterface avChat:setRemoteMute:]
  -[IMAVInterface isSendingAudioForAVChat:]
  -[IMAVInterface avChat:setSendingAudio:]
  -[IMAVInterface isSendingVideoForAVChat:]
  -[IMAVInterface avChat:setSendingVideo:]
  -[IMAVInterface avChat:setValidatedIdentity:]
  -[IMAVInterface capabilitiesOfNetwork]
  -[IMAVInterface capabilitiesOfCPU]
  -[IMAVInterface startPreviewWithError:]
  -[IMAVInterface endConferenceForAVChat:]
  -[IMAVInterface endAVConferenceWithChat:callID:]
  -[IMAVInterface avChat:endConferenceForUserID:]
  -[IMAVInterface cancelConferenceForAVChat:]
  -[IMAVInterface avChat:prepareConnectionWithCallInfo:]
  -[IMAVInterface avChat:generateCallInfoForID:service:usingRelay:callInfo:]
  -[IMAVInterface getNatIPFromICEData:]
  -[IMAVInterface natTypeForAVChat:]
  -[IMAVInterface avChat:IPAndPortDataWithCallerIPAndPortData:shouldFindExternalIP:]
  -[IMAVInterface avChat:IPAndPortDataWithCallerIP:callerSIPPort:shouldFindExternalIP:]
  -[IMAVInterface supportsLayers]
  -[IMAVInterface localVideoBackLayer]
  -[IMAVInterface setLocalVideoBackLayer:]
  -[IMAVInterface setRemoteVideoPresentationSize:forChat:]
  -[IMAVInterface setRemoteVideoPresentationState:forChat:]
  -[IMAVInterface handleRelayInitate:fromParticipant:callInfo:]
  -[IMAVInterface handleRelayUpdate:fromParticipant:callInfo:]
  -[IMAVInterface handleRelayCancel:fromParticipant:callInfo:]
  -[IMAVInterface processRemoteIPChanged:fromParticipant:]
  -[IMAVInterface setShouldKeepCameraRunning:]
  -[IMAVInterface shouldKeepCameraRunning]
  -[IMAVInterface avChat:setLocalLandscapeAspectRatio:localPortraitAspectRatio:]
  -[IMAVInterface _submitLoggingInformation:forChat:]
  -[IMAVInterface _submitEndCallMetric:forCallID:]
  -[IMAVInterface updateAVChat:withCallMetadata:isFinalUpdate:]


IMAVController : NSObject
 @property  NSMutableArray *_delegates
 @property  BOOL _ready
 @property  BOOL hasActiveConference
 @property  BOOL hasRunningConference
 @property  unsigned int overallChatState
 @property  BOOL cameraCapable
 @property  BOOL microphoneCapable
 @property  BOOL cameraConnected
 @property  BOOL microphoneConnected
 @property  BOOL blockMultipleIncomingInvitations
 @property  BOOL blockIncomingInvitationsDuringCall
 @property  BOOL blockOutgoingInvitationsDuringCall
 @property  NSArray *delegates
 @property  <IMAVControllerDelegate> *delegate

  // class methods
  +[IMAVController sharedInstance]

  // instance methods
  -[IMAVController vcCapabilitiesChanged:]
  -[IMAVController delegates]
  -[IMAVController addDelegate:queue:]
  -[IMAVController hasRunningConference]
  -[IMAVController microphoneConnected]
  -[IMAVController _dumpCaps]
  -[IMAVController blockMultipleIncomingInvitations]
  -[IMAVController setDelegate:]
  -[IMAVController pushCachedVCCapsToDaemon]
  -[IMAVController blockOnPendingVCInvitationsWithCapabilities:]
  -[IMAVController delegate]
  -[IMAVController setBlockOutgoingInvitationsDuringCall:]
  -[IMAVController _shouldRunConferences]
  -[IMAVController .cxx_destruct]
  -[IMAVController setupIMAVController]
  -[IMAVController vcResponseInfoWithSessionID:]
  -[IMAVController requestPendingACInvitations]
  -[IMAVController _shouldObserveConferences]
  -[IMAVController declineVCRequestWithBuddy:response:vcProps:conferenceID:]
  -[IMAVController setHasActiveConference:]
  -[IMAVController _ready]
  -[IMAVController setHasRunningConference:]
  -[IMAVController set_delegates:]
  -[IMAVController removeDelegate:]
  -[IMAVController cameraConnected]
  -[IMAVController updateActiveConference]
  -[IMAVController setIMAVCapabilities:toCaps:]
  -[IMAVController hasActiveConference]
  -[IMAVController blockIncomingInvitationsDuringCall]
  -[IMAVController _delegates]
  -[IMAVController blockOutgoingInvitationsDuringCall]
  -[IMAVController _shouldRunACConferences]
  -[IMAVController setBlockIncomingInvitationsDuringCall:]
  -[IMAVController setBlockMultipleIncomingInvitations:]
  -[IMAVController declineVCRequestWithBuddy:response:vcProps:forAccount:conferenceID:]
  -[IMAVController _receivedPendingVCRequests]
  -[IMAVController microphoneCapable]
  -[IMAVController _receivedPendingACRequests]
  -[IMAVController cancelVCRequestWithBuddy:vcProps:forAccount:conferenceID:reason:]
  -[IMAVController _setServiceVCCaps:toCaps:]
  -[IMAVController overallChatState]
  -[IMAVController cameraCapable]
  -[IMAVController requestPendingVCInvitations]
  -[IMAVController init]


IMAVEmbeddedInterface : IMAVConferenceInterface
  // class methods
  +[IMAVEmbeddedInterface updateCriticalState]

  // instance methods
  -[IMAVEmbeddedInterface _runPingTestForChat:]
  -[IMAVEmbeddedInterface chatStateUpdated]
  -[IMAVEmbeddedInterface _conferenceWillStart:]
  -[IMAVEmbeddedInterface _conferenceEnded:]
  -[IMAVEmbeddedInterface _checkNetworkForChat:requiresWifi:]


IMAVChatProxy : NSObject
 @property  NSString *GUID
 @property  unsigned int sessionID
 @property  NSString *conferenceID
 @property  unsigned int state
 @property  NSDate *dateConnected
 @property  NSDate *dateEnded
 @property  NSArray *remoteParticipants
 @property  IMHandle *initiatorIMHandle
 @property  IMHandle *otherIMHandle
 @property  unsigned int endedReason
 @property  int endedError
 @property  BOOL isCaller
 @property  BOOL isVideo
 @property  BOOL isActive
 @property  BOOL isStateFinal
 @property  BOOL isSendingAudio
 @property  BOOL isSendingVideo
 @property  BOOL hasReceivedFirstFrame
 @property  BOOL isMute
 @property  NSNumber *dataUploaded
 @property  NSNumber *dataDownloaded
 @property  double invitationTimeoutTime
 @property  double connectionTimeoutTime
 @property  BOOL relayed

  // instance methods
  -[IMAVChatProxy account]
  -[IMAVChatProxy isVideo]
  -[IMAVChatProxy GUID]
  -[IMAVChatProxy methodSignatureForSelector:]
  -[IMAVChatProxy sessionID]
  -[IMAVChatProxy state]
  -[IMAVChatProxy isActive]
  -[IMAVChatProxy .cxx_destruct]
  -[IMAVChatProxy setMute:]
  -[IMAVChatProxy forwardInvocation:]
  -[IMAVChatProxy cancelInvitation]
  -[IMAVChatProxy acceptInvitation]
  -[IMAVChatProxy declineInvitation]
  -[IMAVChatProxy _isProxy]
  -[IMAVChatProxy isSendingVideo]
  -[IMAVChatProxy setIsSendingVideo:]
  -[IMAVChatProxy isSendingAudio]
  -[IMAVChatProxy setIsSendingAudio:]
  -[IMAVChatProxy dateConnected]
  -[IMAVChatProxy dateEnded]
  -[IMAVChatProxy endedReason]
  -[IMAVChatProxy hasReceivedFirstFrame]
  -[IMAVChatProxy isMute]
  -[IMAVChatProxy conferenceID]
  -[IMAVChatProxy isCaller]
  -[IMAVChatProxy remoteParticipants]
  -[IMAVChatProxy isRelayed]
  -[IMAVChatProxy endChat]
  -[IMAVChatProxy endChatWithReason:]
  -[IMAVChatProxy _isCallUpgradeTo:]
  -[IMAVChatProxy inviteAll]
  -[IMAVChatProxy invite:additionalPeers:excludingPushTokens:]
  -[IMAVChatProxy invite:additionalPeers:]
  -[IMAVChatProxy otherIMHandle]
  -[IMAVChatProxy endedError]
  -[IMAVChatProxy setRelayed:]
  -[IMAVChatProxy initiatorIMHandle]
  -[IMAVChatProxy dataUploaded]
  -[IMAVChatProxy dataDownloaded]
  -[IMAVChatProxy isStateFinal]
  -[IMAVChatProxy setLocalAspectRatio:cameraOrientation:cameraType:]
  -[IMAVChatProxy invitationTimeoutTime]
  -[IMAVChatProxy setInvitationTimeoutTime:]
  -[IMAVChatProxy connectionTimeoutTime]
  -[IMAVChatProxy setConnectionTimeoutTime:]
  -[IMAVChatProxy finalUpdate]
  -[IMAVChatProxy updateWithInfo:]


IMAVTelephonyManager : NSObject
  // class methods
  +[IMAVTelephonyManager sharedInstance]

  // instance methods
  -[IMAVTelephonyManager dealloc]
  -[IMAVTelephonyManager _chatStateChanged:]
  -[IMAVTelephonyManager init]


IMAVCallManager : NSObject
 @property  NSArray *_FTCalls
 @property  unsigned int callState
 @property  BOOL hasActiveCall
 @property  NSArray *calls

  // class methods
  +[IMAVCallManager sharedInstance]

  // instance methods
  -[IMAVCallManager _updateAVChatProxyWithInfo:]
  -[IMAVCallManager _updateACCallState]
  -[IMAVCallManager _updateAVCallState]
  -[IMAVCallManager _FTCalls]
  -[IMAVCallManager _addAVChatProxy:]
  -[IMAVCallManager _updateOverallChatState]
  -[IMAVCallManager calls]
  -[IMAVCallManager callState]
  -[IMAVCallManager _mutableFTCalls]
  -[IMAVCallManager hasActiveCall]
  -[IMAVCallManager .cxx_destruct]
  -[IMAVCallManager _addIMAVChatToChatList:]
  -[IMAVCallManager _setAVCallState:]
  -[IMAVCallManager _activeFaceTimeCall]
  -[IMAVCallManager _setACCallState:quietly:]
  -[IMAVCallManager _activeAudioCall]
  -[IMAVCallManager _postStateChangeNamed:fromState:toState:postType:type:]
  -[IMAVCallManager _copyMutableFTCalls]
  -[IMAVCallManager _nonRetainingChatList]
  -[IMAVCallManager _hasActiveAudioCall]
  -[IMAVCallManager _addACChatProxy:]
  -[IMAVCallManager _setACCallState:]
  -[IMAVCallManager _callStateForType:]
  -[IMAVCallManager _hasActiveFaceTimeCall]
  -[IMAVCallManager _updateACChatProxyWithInfo:]
  -[IMAVCallManager _sendProxyUpdate]
  -[IMAVCallManager _callState]
  -[IMAVCallManager _calls]
  -[IMAVCallManager _postStateChangeIfNecessary]
  -[IMAVCallManager init]
  -[IMAVCallManager _setAVCallState:quietly:]
  -[IMAVCallManager _removeIMAVChatFromChatList:]


IMAVChatParticipantCallInfo : NSObject
 @property  unsigned int callID
 @property  long long state
 @property  NSData *remoteNATIP
 @property  NSData *localNATIP
 @property  NSData *localSKEData
 @property  NSData *remoteSKEData
 @property  NSData *remoteICEData
 @property  NSData *localICEData
 @property  NSNumber *remoteNATType
 @property  NSNumber *localNATType
 @property  NSString *peerCN
 @property  NSNumber *peerProtocolVersion
 @property  BOOL isFinished
 @property  BOOL isBeingHandedOff
 @property  BOOL isReinitiate
 @property  BOOL inviteNeedsDelivery
 @property  BOOL isAudioPaused
 @property  BOOL isVideoPaused
 @property  NSDictionary *relayInitiate
 @property  NSDictionary *relayUpdate
 @property  NSDictionary *relayCancel
 @property  unsigned long localConnectionType
 @property  unsigned long remoteConnectionType

  // instance methods
  -[IMAVChatParticipantCallInfo isFinished]
  -[IMAVChatParticipantCallInfo state]
  -[IMAVChatParticipantCallInfo dealloc]
  -[IMAVChatParticipantCallInfo .cxx_destruct]
  -[IMAVChatParticipantCallInfo init]
  -[IMAVChatParticipantCallInfo setState:]
  -[IMAVChatParticipantCallInfo callID]
  -[IMAVChatParticipantCallInfo setCallID:]
  -[IMAVChatParticipantCallInfo remoteConnectionType]
  -[IMAVChatParticipantCallInfo isAudioPaused]
  -[IMAVChatParticipantCallInfo isVideoPaused]
  -[IMAVChatParticipantCallInfo remoteNATType]
  -[IMAVChatParticipantCallInfo setIsVideoPaused:]
  -[IMAVChatParticipantCallInfo localConnectionType]
  -[IMAVChatParticipantCallInfo setPeerProtocolVersion:]
  -[IMAVChatParticipantCallInfo peerCN]
  -[IMAVChatParticipantCallInfo setPeerCN:]
  -[IMAVChatParticipantCallInfo relayInitiate]
  -[IMAVChatParticipantCallInfo setRelayInitiate:]
  -[IMAVChatParticipantCallInfo relayUpdate]
  -[IMAVChatParticipantCallInfo setRelayUpdate:]
  -[IMAVChatParticipantCallInfo relayCancel]
  -[IMAVChatParticipantCallInfo setRelayCancel:]
  -[IMAVChatParticipantCallInfo isBeingHandedOff]
  -[IMAVChatParticipantCallInfo setIsBeingHandedOff:]
  -[IMAVChatParticipantCallInfo remoteICEData]
  -[IMAVChatParticipantCallInfo setRemoteICEData:]
  -[IMAVChatParticipantCallInfo localICEData]
  -[IMAVChatParticipantCallInfo setLocalICEData:]
  -[IMAVChatParticipantCallInfo localSKEData]
  -[IMAVChatParticipantCallInfo setLocalSKEData:]
  -[IMAVChatParticipantCallInfo remoteSKEData]
  -[IMAVChatParticipantCallInfo setRemoteSKEData:]
  -[IMAVChatParticipantCallInfo peerProtocolVersion]
  -[IMAVChatParticipantCallInfo localNATType]
  -[IMAVChatParticipantCallInfo setLocalNATType:]
  -[IMAVChatParticipantCallInfo setRemoteNATType:]
  -[IMAVChatParticipantCallInfo localNATIP]
  -[IMAVChatParticipantCallInfo setLocalNATIP:]
  -[IMAVChatParticipantCallInfo remoteNATIP]
  -[IMAVChatParticipantCallInfo setRemoteNATIP:]
  -[IMAVChatParticipantCallInfo isReinitiate]
  -[IMAVChatParticipantCallInfo setIsReinitiate:]
  -[IMAVChatParticipantCallInfo setLocalConnectionType:]
  -[IMAVChatParticipantCallInfo setRemoteConnectionType:]
  -[IMAVChatParticipantCallInfo inviteNeedsDelivery]
  -[IMAVChatParticipantCallInfo setInviteNeedsDelivery:]


IMAVConferenceInterface : IMAVInterface <AVConferenceDelegate>
 @property  NSNumber *sendingVideoExpected
 @property  AVConference *controller

  // class methods
  +[IMAVConferenceInterface _useMultipleAVConference]
  +[IMAVConferenceInterface _postParticipantMediaChangeNotification:cameraChanged:orientationChanged:aspectChanged:contentRectChanged:cameraWillSwitch:camera:orentation:aspect:contentRect:]
  +[IMAVConferenceInterface _postParticipantScreenAttributesChangeNotification:cameraChanged:orientationChanged:aspectChanged:cameraWillSwitch:camera:orentation:aspect:]

  // instance methods
  -[IMAVConferenceInterface supportsRelay]
  -[IMAVConferenceInterface dealloc]
  -[IMAVConferenceInterface .cxx_destruct]
  -[IMAVConferenceInterface capabilities]
  -[IMAVConferenceInterface chatStateUpdated]
  -[IMAVConferenceInterface _controller]
  -[IMAVConferenceInterface controller]
  -[IMAVConferenceInterface _conferenceEnded:]
  -[IMAVConferenceInterface init]
  -[IMAVConferenceInterface stopPreview]
  -[IMAVConferenceInterface conference:didStartSession:withUserInfo:]
  -[IMAVConferenceInterface conference:didStopWithCallID:error:]
  -[IMAVConferenceInterface conference:withCallID:didPauseAudio:error:]
  -[IMAVConferenceInterface conference:didStopWithCallID:error:callMetadata:]
  -[IMAVConferenceInterface conference:localIPChange:withCallID:]
  -[IMAVConferenceInterface conference:withCallID:remoteMediaStalled:]
  -[IMAVConferenceInterface conference:receivedFirstRemoteFrameForCallID:]
  -[IMAVConferenceInterface conference:remoteVideoAttributesChanged:callID:]
  -[IMAVConferenceInterface conference:remoteAudioPaused:callID:]
  -[IMAVConferenceInterface conference:remoteVideoPaused:callID:]
  -[IMAVConferenceInterface conference:remoteScreenAttributesChanged:callID:]
  -[IMAVConferenceInterface conference:updateInputFrequencyLevel:]
  -[IMAVConferenceInterface conference:updateOutputFrequencyLevel:]
  -[IMAVConferenceInterface conference:inititiateRelayRequest:requestDict:]
  -[IMAVConferenceInterface conference:sendRelayUpdate:updateDict:]
  -[IMAVConferenceInterface conference:cancelRelayRequest:requestDict:]
  -[IMAVConferenceInterface conference:videoQualityNotificationForCallID:isDegraded:isRemote:]
  -[IMAVConferenceInterface conference:withCallID:networkHint:]
  -[IMAVConferenceInterface conference:didChangeLocalVariablesForCallID:]
  -[IMAVConferenceInterface conference:reinitializeCallForCallID:]
  -[IMAVConferenceInterface serverDiedForConference:]
  -[IMAVConferenceInterface setLocalVideoLayer:]
  -[IMAVConferenceInterface localVideoLayer]
  -[IMAVConferenceInterface _avChatDealloc:]
  -[IMAVConferenceInterface initAVInterface]
  -[IMAVConferenceInterface _notifyAboutPotentialCallForChat:]
  -[IMAVConferenceInterface chatRelayedStatusChanged:]
  -[IMAVConferenceInterface isAVInterfaceReady]
  -[IMAVConferenceInterface isMuteForAVChat:]
  -[IMAVConferenceInterface avChat:setMute:]
  -[IMAVConferenceInterface isPausedForAVChat:]
  -[IMAVConferenceInterface avChat:setPaused:]
  -[IMAVConferenceInterface isSendingAudioForAVChat:]
  -[IMAVConferenceInterface avChat:setSendingAudio:]
  -[IMAVConferenceInterface isSendingVideoForAVChat:]
  -[IMAVConferenceInterface avChat:setSendingVideo:]
  -[IMAVConferenceInterface capabilitiesOfNetwork]
  -[IMAVConferenceInterface capabilitiesOfCPU]
  -[IMAVConferenceInterface startPreviewWithError:]
  -[IMAVConferenceInterface endConferenceForAVChat:]
  -[IMAVConferenceInterface endAVConferenceWithChat:callID:]
  -[IMAVConferenceInterface avChat:endConferenceForUserID:]
  -[IMAVConferenceInterface cancelConferenceForAVChat:]
  -[IMAVConferenceInterface avChat:prepareConnectionWithCallInfo:]
  -[IMAVConferenceInterface avChat:generateCallInfoForID:service:usingRelay:callInfo:]
  -[IMAVConferenceInterface getNatIPFromICEData:]
  -[IMAVConferenceInterface natTypeForAVChat:]
  -[IMAVConferenceInterface supportsLayers]
  -[IMAVConferenceInterface localVideoBackLayer]
  -[IMAVConferenceInterface setLocalVideoBackLayer:]
  -[IMAVConferenceInterface setRemoteVideoPresentationSize:forChat:]
  -[IMAVConferenceInterface setRemoteVideoPresentationState:forChat:]
  -[IMAVConferenceInterface handleRelayInitate:fromParticipant:callInfo:]
  -[IMAVConferenceInterface handleRelayUpdate:fromParticipant:callInfo:]
  -[IMAVConferenceInterface handleRelayCancel:fromParticipant:callInfo:]
  -[IMAVConferenceInterface processRemoteIPChanged:fromParticipant:]
  -[IMAVConferenceInterface avChat:setLocalLandscapeAspectRatio:localPortraitAspectRatio:]
  -[IMAVConferenceInterface _submitLoggingInformation:forChat:]
  -[IMAVConferenceInterface _submitEndCallMetric:forCallID:]
  -[IMAVConferenceInterface updateAVChat:withCallMetadata:isFinalUpdate:]
  -[IMAVConferenceInterface _cleanupAVInterface]
  -[IMAVConferenceInterface _faceTimeUUID]
  -[IMAVConferenceInterface _configureAVConference:forChat:]
  -[IMAVConferenceInterface _hasAVConferenceObjectsForChatsOtherThan:]
  -[IMAVConferenceInterface _existingConferenceForAVChat:]
  -[IMAVConferenceInterface _existingConferenceForAVChatGUID:]
  -[IMAVConferenceInterface _conferenceForAVChat:]
  -[IMAVConferenceInterface _avChatForConference:]
  -[IMAVConferenceInterface _imAVChatParticipantForConference:callID:errorString:]
  -[IMAVConferenceInterface _avChatForConference:callID:errorString:]
  -[IMAVConferenceInterface _deviceRoleForAVChat:]
  -[IMAVConferenceInterface _queueAVConferenceForCleanup:]
  -[IMAVConferenceInterface conference:callID:setPauseVideo:]
  -[IMAVConferenceInterface isSendingVideoExpected]
  -[IMAVConferenceInterface setSendingVideoExpected:]


IMAVChatParticipantProxy : NSObject
 @property  NSString *name
 @property  BOOL _inviteDelivered
 @property  IMAVChat *avChat

  // instance methods
  -[IMAVChatParticipantProxy .cxx_destruct]
  -[IMAVChatParticipantProxy forwardInvocation:]
  -[IMAVChatParticipantProxy name]
  -[IMAVChatParticipantProxy isLocalParticipant]
  -[IMAVChatParticipantProxy avChat]
  -[IMAVChatParticipantProxy _inviteDelivered]
  -[IMAVChatParticipantProxy initWithDictionary:chat:]


IMAVLocalPreviewClient : NSObject <AVConferencePreviewClientDelegate, IMSystemMonitorListener>
 @property  AVConferencePreview *conferencePreview
 @property  BOOL isPreviewRunning
 @property  unsigned int cameraType
 @property  unsigned int cameraOrientation
 @property  ^v localVideoLayer
 @property  ^v localVideoBackLayer

  // class methods
  +[IMAVLocalPreviewClient sharedInstance]
  +[IMAVLocalPreviewClient localPortraitAspectRatio]

  // instance methods
  -[IMAVLocalPreviewClient dealloc]
  -[IMAVLocalPreviewClient .cxx_destruct]
  -[IMAVLocalPreviewClient cameraOrientation]
  -[IMAVLocalPreviewClient didStartPreview]
  -[IMAVLocalPreviewClient cameraType]
  -[IMAVLocalPreviewClient setCameraOrientation:]
  -[IMAVLocalPreviewClient systemApplicationDidEnterBackground]
  -[IMAVLocalPreviewClient systemApplicationWillEnterForeground]
  -[IMAVLocalPreviewClient init]
  -[IMAVLocalPreviewClient setCameraType:]
  -[IMAVLocalPreviewClient systemScreenDidPowerUp]
  -[IMAVLocalPreviewClient systemScreenDidPowerDown]
  -[IMAVLocalPreviewClient startPreview]
  -[IMAVLocalPreviewClient stopPreview]
  -[IMAVLocalPreviewClient didPausePreview]
  -[IMAVLocalPreviewClient didStopPreview]
  -[IMAVLocalPreviewClient didReceiveFirstPreviewFrameFromCameraUniqueID:]
  -[IMAVLocalPreviewClient didChangeLocalVideoAttributes:]
  -[IMAVLocalPreviewClient didChangeLocalScreenAttributes:]
  -[IMAVLocalPreviewClient didReceiveErrorFromCameraUniqueID:error:]
  -[IMAVLocalPreviewClient cameraDidBecomeAvailableForUniqueID:]
  -[IMAVLocalPreviewClient isPreviewRunning]
  -[IMAVLocalPreviewClient pausePreview]
  -[IMAVLocalPreviewClient localScreenAttributesForVideoAttributes:]
  -[IMAVLocalPreviewClient setLocalScreenAttributes:]
  -[IMAVLocalPreviewClient setLocalVideoLayer:]
  -[IMAVLocalPreviewClient localVideoLayer]
  -[IMAVLocalPreviewClient localVideoBackLayer]
  -[IMAVLocalPreviewClient setLocalVideoBackLayer:]
  -[IMAVLocalPreviewClient _avDaemonConnected]
  -[IMAVLocalPreviewClient avChat:setLocalPortraitRatio:localLandscapeRatio:]
  -[IMAVLocalPreviewClient updateLocalScreenAtrributes]
  -[IMAVLocalPreviewClient _shouldPreviewBeRunning]
  -[IMAVLocalPreviewClient _updatePreviewState]
  -[IMAVLocalPreviewClient unpausePreview]
  -[IMAVLocalPreviewClient beginAnimationToPIP]
  -[IMAVLocalPreviewClient endAnimationToPIP]
  -[IMAVLocalPreviewClient beginAnimationToPreview]
  -[IMAVLocalPreviewClient endAnimationToPreview]
  -[IMAVLocalPreviewClient conferencePreview]
  -[IMAVLocalPreviewClient setConferencePreview:]


IMAVDaemonController : NSObject
 @property  IMAVDaemonListener *listener

  // class methods
  +[IMAVDaemonController sharedInstance]

  // instance methods
  -[IMAVDaemonController removeListenerID:]
  -[IMAVDaemonController _noteSetupComplete]
  -[IMAVDaemonController hasListenerForID:]
  -[IMAVDaemonController isConnecting]
  -[IMAVDaemonController isConnected]
  -[IMAVDaemonController methodSignatureForSelector:]
  -[IMAVDaemonController localObjectExists]
  -[IMAVDaemonController dealloc]
  -[IMAVDaemonController localObjectDiedNotification:]
  -[IMAVDaemonController _listenerSetUpdated]
  -[IMAVDaemonController .cxx_destruct]
  -[IMAVDaemonController _remoteObjectCleanup]
  -[IMAVDaemonController remoteObjectExists]
  -[IMAVDaemonController forwardInvocation:]
  -[IMAVDaemonController _localObjectCleanup]
  -[IMAVDaemonController _disconnectFromDaemon]
  -[IMAVDaemonController _connectToDaemon]
  -[IMAVDaemonController remoteObjectDiedNotification:]
  -[IMAVDaemonController listener]
  -[IMAVDaemonController init]
  -[IMAVDaemonController addListenerID:]
  -[IMAVDaemonController _cleanUpConnection]
  -[IMAVDaemonController __isLocalObjectValidOnQueue:]
  -[IMAVDaemonController _localObjectDiedNotification:]
  -[IMAVDaemonController _remoteObjectDiedNotification:]
  -[IMAVDaemonController __isRemoteObjectValidOnQueue:]
  -[IMAVDaemonController _makeConnectionWithCompletionBlock:]


IMAVDaemonListener : NSObject
 @property  BOOL isSetupComplete

  // instance methods
  -[IMAVDaemonListener methodSignatureForSelector:]
  -[IMAVDaemonListener _noteDisconnected]
  -[IMAVDaemonListener removeHandler:]
  -[IMAVDaemonListener .cxx_destruct]
  -[IMAVDaemonListener isSetupComplete]
  -[IMAVDaemonListener forwardInvocation:]
  -[IMAVDaemonListener addHandler:]
  -[IMAVDaemonListener setupComplete:info:]
  -[IMAVDaemonListener init]


IMHandle(AVChatExtensions)
	// instance methods
	-[IMHandle(AVChatExtensions) hasNoConferencingCaps]

(IMAVChatExtensions)
	// instance methods
	-[(IMAVChatExtensions) componentsJoinedIntoListWithMaxItems:]

01 00 0400 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTDeviceSupport 
01 00 0400 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTEntitlementSupport 
01 00 0400 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTNetworkSupport 
01 00 0400 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTServerBag 
01 00 0400 /System/Library/PrivateFrameworks/FTServices.framework/FTServices: FTUserConfiguration 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAccount 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMAccountController 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMDaemonController 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMHandle 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMLocalObject 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMLockdownManager 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMMobileNetworkManager 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMNetworkAvailability 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMParentalControls 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMPowerAssertion 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMRemoteObjectBroadcaster 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMService 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMServiceImpl 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMSystemMonitor 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMTimingCollection 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMWeakReference 
01 00 0200 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 0900 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0500 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: NetworkChangeNotifier 
