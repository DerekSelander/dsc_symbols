|| __DATA.__data _SPOwnerBeaconsChangedLocalNotification
|| __DATA.__objc_data _OBJC_CLASS_$_SPBeaconDescription
|| __DATA.__objc_data _OBJC_CLASS_$_SPBeaconRole
|| __DATA.__objc_data _OBJC_CLASS_$_SPBeaconShare
|| __DATA.__objc_data _OBJC_CLASS_$_SPBeaconTaskInformation
|| __DATA.__objc_data _OBJC_CLASS_$_SPLocationAddress
|| __DATA.__objc_data _OBJC_CLASS_$_SPLocationProvider
|| __DATA.__objc_data _OBJC_CLASS_$_SPSettingsConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_SPBeaconDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_SPBeaconRole
|| __DATA.__objc_data _OBJC_METACLASS_$_SPBeaconShare
|| __DATA.__objc_data _OBJC_METACLASS_$_SPBeaconTaskInformation
|| __DATA.__objc_data _OBJC_METACLASS_$_SPLocationAddress
|| __DATA.__objc_data _OBJC_METACLASS_$_SPLocationProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_SPSettingsConfiguration
|| __DATA_CONST.__const _SPBeaconEstimatedLocationChangedNotification
|| __DATA_CONST.__const _SPBeaconLocationSourceConnection
|| __DATA_CONST.__const _SPBeaconLocationSourceConnectionMaintenance
|| __DATA_CONST.__const _SPBeaconLocationSourceDisconnection
|| __DATA_CONST.__const _SPBeaconLocationSourceHarvesterNetwork
|| __DATA_CONST.__const _SPBeaconLocationSourceHarvesterOnDiskNearOwner
|| __DATA_CONST.__const _SPBeaconLocationSourceHarvesterOnDiskWild
|| __DATA_CONST.__const _SPBeaconLocationSourceIntentLocationUpdate
|| __DATA_CONST.__const _SPBeaconLocationSourceIntentResponse
|| __DATA_CONST.__const _SPBeaconLocationSourceLocalReductiveFilter
|| __DATA_CONST.__const _SPBeaconLocationSourcePairingLocationManager
|| __DATA_CONST.__const _SPBeaconLocationSourceSelfPublish
|| __DATA_CONST.__const _SPBeaconLocationSourceUnknown
|| __DATA_CONST.__const _SPBeaconTaskNameDisableNotifyWhenFound
|| __DATA_CONST.__const _SPBeaconTaskNameEnableNotifyWhenFound
|| __DATA_CONST.__const _SPBeaconTaskNameLocating
|| __DATA_CONST.__const _SPBeaconZoneCreationDateKey
|| __DATA_CONST.__const _SPBeaconZoneCreationErrorCodeKey
|| __DATA_CONST.__const _SPBeaconingStateChangedNotification
|| __DATA_CONST.__const _SPBeaconsChangedNotification
|| __DATA_CONST.__const _SPCommandErrorDomain
|| __DATA_CONST.__const _SPDisabledReasonLowAccountSecurity
|| __DATA_CONST.__const _SPDisabledReasonNone
|| __DATA_CONST.__const _SPDisabledReasonUserOptOut
|| __DATA_CONST.__const _SPDisabledReasoniCloudSignedOut
|| __DATA_CONST.__const _SPEvaluateLocalBeaconingNotification
|| __DATA_CONST.__const _SPKeyReconcilerFilesUpdatedNotification
|| __DATA_CONST.__const _SPLastKeyRollDateKey
|| __DATA_CONST.__const _SPOwnerSessionErrorDomain
|| __DATA_CONST.__const _SPPairingSessionErrorDomain
|| __DATA_CONST.__const _SPSelfBeaconUUIDKeyBase
|| __DATA_CONST.__const _SPSelfBeaconingChangedNotification
|| __DATA_CONST.__const _SPServiceSettingsChangedNotification
|| __DATA_CONST.__const _SPServiceStateDisabled
|| __DATA_CONST.__const _SPServiceStateEnabled
|| __DATA_CONST.__const _SPSettingsServiceDisabledReasonsKey
|| __DATA_CONST.__const _SPSettingsServiceStateKey
|| __DATA_CONST.__const _SPSettingsSharedSuiteName
|| __DATA_CONST.__const _SPUnknownBeaconsChangedNotification
|| __DATA_CONST.__const _SPUnpairErrorDomain
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPBeacon
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPBeaconLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPBeaconManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPBeaconObservation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPBeaconUpdates
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPBeaconingKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPCommand
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPCommandKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPCommandKeys
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPCommandKeysCriteria
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPKeyReconciler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPLostModeInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPMacBeaconConfig
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPObservationLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPOwnerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPOwnerSession
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPPairingManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPRawSearchResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPSafeLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPUnauthorizedTrackingAdvertisement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPUnauthorizedTrackingObservation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_SPUnknownBeacon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPBeacon
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPBeaconLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPBeaconManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPBeaconObservation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPBeaconUpdates
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPBeaconingKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPCommand
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPCommandKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPCommandKeys
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPCommandKeysCriteria
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPKeyReconciler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPLostModeInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPMacBeaconConfig
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPObservationLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPOwnerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPOwnerSession
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPPairingManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPRawSearchResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPSafeLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPUnauthorizedTrackingAdvertisement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPUnauthorizedTrackingObservation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_SPUnknownBeacon
|| __TEXT.__const _SPBeaconRoleIdOther
|| __TEXT.__const _SPBeaconRoleIdUndefined
|| __TEXT.__text _sp_IDS_supportsIDSRegistrationPropertySupportsFMDV2
|| __TEXT.__text _sp_key_index_map_contains_key
|| __TEXT.__text _sp_key_index_map_contains_key_prefix
|| __TEXT.__text _sp_key_index_map_create_handle_from_file
|| __TEXT.__text _sp_key_index_map_create_handle_from_file_descriptor
|| __TEXT.__text _sp_key_index_map_destroy
|| __TEXT.__text _sp_key_index_map_get_first_index
|| __TEXT.__text _sp_key_index_map_get_last_index
|| __TEXT.__text _sp_key_index_map_get_version
|| __TEXT.__text _sp_key_index_map_print_description
|| __TEXT.__text _sp_key_index_map_print_records_description
|| __TEXT.__text _sp_key_index_map_print_toc
|| __TEXT.__text _sp_key_record_copy_intermediate_key
|| __TEXT.__text _sp_key_record_copy_private_key
|| __TEXT.__text _sp_key_record_copy_public_key
|| __TEXT.__text _sp_key_subsequence_create_from_file
|| __TEXT.__text _sp_key_subsequence_create_from_file_descriptor
|| __TEXT.__text _sp_key_subsequence_destroy
|| __TEXT.__text _sp_key_subsequence_get_record_for_index
|| __TEXT.__text _sp_key_subsequence_map_get_first_index
|| __TEXT.__text _sp_key_subsequence_map_get_last_index
|| __TEXT.__text _sp_key_subsequence_print_description
|| __TEXT.__text _sp_key_subsequence_print_records_description
__ CoreBluetooth: _OBJC_CLASS_$_CBCentralManager
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ FMCoreLite: _OBJC_CLASS_$_FMFuture
__ FMCoreLite: _OBJC_CLASS_$_FMPreferencesUtil
__ FMCoreLite: _OBJC_CLASS_$_FMXPCServiceDescription
__ FMCoreLite: _OBJC_CLASS_$_FMXPCSession
__ FMCoreLite: _OBJC_CLASS_$_FMXPCTimer
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromSelector
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateInterval
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ IOKit: _IOPMAssertionCreateWithProperties
__ IOKit: _IOPMAssertionRelease
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ Network: _OBJC_CLASS_$_NWPathEvaluator
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_activity_initiate
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_walltime
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _sprintf
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SPLocationAddress : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *formattedAddressLines
 @property  NSString *country
 @property  NSString *countryCode
 @property  NSString *streetName
 @property  NSString *streetAddress
 @property  NSString *locality
 @property  NSString *stateCode
 @property  NSString *administrativeArea
 @property  NSString *placemark

  // class methods
  +[SPLocationAddress supportsSecureCoding]

  // instance methods
  -[SPLocationAddress setLocality:]
  -[SPLocationAddress copyWithZone:]
  -[SPLocationAddress administrativeArea]
  -[SPLocationAddress locality]
  -[SPLocationAddress country]
  -[SPLocationAddress setFormattedAddressLines:]
  -[SPLocationAddress formattedAddressLines]
  -[SPLocationAddress .cxx_destruct]
  -[SPLocationAddress encodeWithCoder:]
  -[SPLocationAddress countryCode]
  -[SPLocationAddress streetAddress]
  -[SPLocationAddress setStreetAddress:]
  -[SPLocationAddress isEqual:]
  -[SPLocationAddress placemark]
  -[SPLocationAddress setPlacemark:]
  -[SPLocationAddress setCountryCode:]
  -[SPLocationAddress setAdministrativeArea:]
  -[SPLocationAddress setCountry:]
  -[SPLocationAddress streetName]
  -[SPLocationAddress stateCode]
  -[SPLocationAddress setStreetName:]
  -[SPLocationAddress setStateCode:]
  -[SPLocationAddress initWithFormattedAddressLines:country:countryCode:streetName:streetAddress:locality:stateCode:administrativeArea:placemark:]
  -[SPLocationAddress initWithFormattedAddressLines:country:countryCode:streetName:streetAddress:locality:stateCode:administrativeArea:]
  -[SPLocationAddress initWithCoder:]


SPLostModeInfo : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSDate *timestamp
 @property  NSString *message
 @property  NSString *phoneNumber

  // class methods
  +[SPLostModeInfo supportsSecureCoding]

  // instance methods
  -[SPLostModeInfo copyWithZone:]
  -[SPLostModeInfo message]
  -[SPLostModeInfo phoneNumber]
  -[SPLostModeInfo setPhoneNumber:]
  -[SPLostModeInfo setMessage:]
  -[SPLostModeInfo .cxx_destruct]
  -[SPLostModeInfo timestamp]
  -[SPLostModeInfo setTimestamp:]
  -[SPLostModeInfo encodeWithCoder:]
  -[SPLostModeInfo initWithMessage:phoneNumber:timestamp:]
  -[SPLostModeInfo initWithCoder:]


SPBeaconTaskInformation : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  NSDate *lastUpdated
 @property  NSError *error
 @property  long long state
 @property  NSUUID *commandIdentifier

  // class methods
  +[SPBeaconTaskInformation supportsSecureCoding]

  // instance methods
  -[SPBeaconTaskInformation copyWithZone:]
  -[SPBeaconTaskInformation lastUpdated]
  -[SPBeaconTaskInformation setError:]
  -[SPBeaconTaskInformation setState:]
  -[SPBeaconTaskInformation .cxx_destruct]
  -[SPBeaconTaskInformation name]
  -[SPBeaconTaskInformation encodeWithCoder:]
  -[SPBeaconTaskInformation setLastUpdated:]
  -[SPBeaconTaskInformation error]
  -[SPBeaconTaskInformation isEqual:]
  -[SPBeaconTaskInformation state]
  -[SPBeaconTaskInformation setName:]
  -[SPBeaconTaskInformation setCommandIdentifier:]
  -[SPBeaconTaskInformation initWithName:lastUpdated:error:state:]
  -[SPBeaconTaskInformation commandIdentifier]
  -[SPBeaconTaskInformation initWithCoder:]


SPCommandKey : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding, SPNearbyToken, SPConnectionMaterial>
 @property  SPBeaconingKey *beaconingKey
 @property  NSData *commandKey
 @property  NSData *connectionToken
 @property  NSData *nearbyToken
 @property  long long type
 @property  NSNumber *primaryIndex
 @property  NSNumber *secondaryIndex
 @property  NSData *address
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDateInterval *dateInterval

  // class methods
  +[SPCommandKey supportsSecureCoding]

  // instance methods
  -[SPCommandKey copyWithZone:]
  -[SPCommandKey address]
  -[SPCommandKey dateInterval]
  -[SPCommandKey setType:]
  -[SPCommandKey .cxx_destruct]
  -[SPCommandKey commandKey]
  -[SPCommandKey encodeWithCoder:]
  -[SPCommandKey type]
  -[SPCommandKey beaconingKey]
  -[SPCommandKey connectionToken]
  -[SPCommandKey nearbyToken]
  -[SPCommandKey primaryIndex]
  -[SPCommandKey secondaryIndex]
  -[SPCommandKey setBeaconingKey:]
  -[SPCommandKey setConnectionToken:]
  -[SPCommandKey initWithBeaconingKey:commandKey:connectionToken:nearbyToken:primaryIndex:secondaryIndex:type:]
  -[SPCommandKey setNearbyToken:]
  -[SPCommandKey setPrimaryIndex:]
  -[SPCommandKey setSecondaryIndex:]
  -[SPCommandKey setCommandKey:]
  -[SPCommandKey initWithCoder:]


SPHandle : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  long long type
 @property  NSString *destination

  // class methods
  +[SPHandle supportsSecureCoding]
  +[SPHandle handleWithString:]
  +[SPHandle handleWithPhoneNumber:]
  +[SPHandle handleWithEmailAddress:]

  // instance methods
  -[SPHandle copyWithZone:]
  -[SPHandle destination]
  -[SPHandle setType:]
  -[SPHandle .cxx_destruct]
  -[SPHandle encodeWithCoder:]
  -[SPHandle type]
  -[SPHandle isEqual:]
  -[SPHandle setDestination:]
  -[SPHandle initWithType:destination:]
  -[SPHandle initWithCoder:]


SPLocationProvider : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSDate *timestamp
 @property  SPHandle *provider

  // class methods
  +[SPLocationProvider supportsSecureCoding]

  // instance methods
  -[SPLocationProvider copyWithZone:]
  -[SPLocationProvider provider]
  -[SPLocationProvider .cxx_destruct]
  -[SPLocationProvider timestamp]
  -[SPLocationProvider setTimestamp:]
  -[SPLocationProvider encodeWithCoder:]
  -[SPLocationProvider setProvider:]
  -[SPLocationProvider isEqual:]
  -[SPLocationProvider initWithTimestamp:provider:]
  -[SPLocationProvider initWithCoder:]


SPBeaconLocation : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSDate *timestamp
 @property  double latitude
 @property  double longitude
 @property  NSString *source
 @property  double horizontalAccuracy

  // class methods
  +[SPBeaconLocation supportsSecureCoding]

  // instance methods
  -[SPBeaconLocation copyWithZone:]
  -[SPBeaconLocation longitude]
  -[SPBeaconLocation setLongitude:]
  -[SPBeaconLocation setSource:]
  -[SPBeaconLocation setLatitude:]
  -[SPBeaconLocation latitude]
  -[SPBeaconLocation source]
  -[SPBeaconLocation .cxx_destruct]
  -[SPBeaconLocation timestamp]
  -[SPBeaconLocation setTimestamp:]
  -[SPBeaconLocation encodeWithCoder:]
  -[SPBeaconLocation horizontalAccuracy]
  -[SPBeaconLocation initWithTimestamp:latitude:longitude:horizontalAccuracy:source:]
  -[SPBeaconLocation initWithCoder:]


SPMonitorsWrapper : NSObject /usr/lib/libSystem.B.dylib <SPPowerMonitorDelegate>
 @property  <SPMonitorsWrapperDelegate> *delegate
 @property  NSObject<OS_dispatch_queue> *delegateQueue
 @property  SPNetworkMonitor *networkMonitor
 @property  NSDate *lastStateChangeDate
 @property  NSDate *nextStateChangeDate
 @property  BOOL isRunning
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SPMonitorsWrapper setIsRunning:]
  -[SPMonitorsWrapper powerState]
  -[SPMonitorsWrapper pause]
  -[SPMonitorsWrapper setDelegateQueue:]
  -[SPMonitorsWrapper isNetworkUp]
  -[SPMonitorsWrapper resume]
  -[SPMonitorsWrapper delegateQueue]
  -[SPMonitorsWrapper setLastStateChangeDate:]
  -[SPMonitorsWrapper .cxx_destruct]
  -[SPMonitorsWrapper setNetworkMonitor:]
  -[SPMonitorsWrapper stop]
  -[SPMonitorsWrapper setNextStateChangeDate:]
  -[SPMonitorsWrapper nextStateChangeDate]
  -[SPMonitorsWrapper networkMonitor]
  -[SPMonitorsWrapper isRunning]
  -[SPMonitorsWrapper initWithBeaconManager:delegateQueueu:]
  -[SPMonitorsWrapper setDelegate:]
  -[SPMonitorsWrapper lastStateChangeDate]
  -[SPMonitorsWrapper delegate]
  -[SPMonitorsWrapper start]


SPBeaconShare : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  SPHandle *handle
 @property  BOOL accepted
 @property  NSDate *expiration
 @property  NSString *correlationIdentifier
 @property  NSDate *shareDate
 @property  unsigned long sharePrimaryIndex

  // class methods
  +[SPBeaconShare supportsSecureCoding]

  // instance methods
  -[SPBeaconShare copyWithZone:]
  -[SPBeaconShare .cxx_destruct]
  -[SPBeaconShare setIdentifier:]
  -[SPBeaconShare encodeWithCoder:]
  -[SPBeaconShare identifier]
  -[SPBeaconShare handle]
  -[SPBeaconShare setHandle:]
  -[SPBeaconShare isEqual:]
  -[SPBeaconShare accepted]
  -[SPBeaconShare expiration]
  -[SPBeaconShare setExpiration:]
  -[SPBeaconShare shareDate]
  -[SPBeaconShare correlationIdentifier]
  -[SPBeaconShare sharePrimaryIndex]
  -[SPBeaconShare setAccepted:]
  -[SPBeaconShare initWithIdentifier:handle:accepted:expiration:correlationIdentifier:shareDate:sharePrimaryIndex:]
  -[SPBeaconShare setCorrelationIdentifier:]
  -[SPBeaconShare initWithCoder:]


SPBeacon : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSString *stableIdentifier
 @property  SPHandle *owner
 @property  BOOL accepted
 @property  NSDate *pairingDate
 @property  NSString *name
 @property  NSString *model
 @property  SPBeaconRole *role
 @property  SPLostModeInfo *lostModeInfo
 @property  NSSet *shares
 @property  NSDictionary *taskInformation
 @property  NSString *correlationIdentifier
 @property  NSString *systemVersion
 @property  long long vendorId
 @property  long long productId

  // class methods
  +[SPBeacon supportsSecureCoding]
  +[SPBeacon SPOwner]

  // instance methods
  -[SPBeacon copyWithZone:]
  -[SPBeacon setOwner:]
  -[SPBeacon owner]
  -[SPBeacon vendorId]
  -[SPBeacon lostModeInfo]
  -[SPBeacon shares]
  -[SPBeacon .cxx_destruct]
  -[SPBeacon systemVersion]
  -[SPBeacon name]
  -[SPBeacon setModel:]
  -[SPBeacon setRole:]
  -[SPBeacon setIdentifier:]
  -[SPBeacon encodeWithCoder:]
  -[SPBeacon identifier]
  -[SPBeacon productId]
  -[SPBeacon isEqual:]
  -[SPBeacon accepted]
  -[SPBeacon role]
  -[SPBeacon model]
  -[SPBeacon setName:]
  -[SPBeacon setVendorId:]
  -[SPBeacon correlationIdentifier]
  -[SPBeacon setAccepted:]
  -[SPBeacon setCorrelationIdentifier:]
  -[SPBeacon stableIdentifier]
  -[SPBeacon setStableIdentifier:]
  -[SPBeacon pairingDate]
  -[SPBeacon setPairingDate:]
  -[SPBeacon setLostModeInfo:]
  -[SPBeacon setShares:]
  -[SPBeacon taskInformation]
  -[SPBeacon setTaskInformation:]
  -[SPBeacon setProductId:]
  -[SPBeacon initWithCoder:]
  -[SPBeacon setSystemVersion:]


SPUnauthorizedTrackingObservation : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  SPUnauthorizedTrackingAdvertisement *trackingIdentifier
 @property  NSArray *observedLocations
 @property  NSDate *observedAt

  // class methods
  +[SPUnauthorizedTrackingObservation supportsSecureCoding]

  // instance methods
  -[SPUnauthorizedTrackingObservation .cxx_destruct]
  -[SPUnauthorizedTrackingObservation encodeWithCoder:]
  -[SPUnauthorizedTrackingObservation isEqual:]
  -[SPUnauthorizedTrackingObservation setTrackingIdentifier:]
  -[SPUnauthorizedTrackingObservation setObservedLocations:]
  -[SPUnauthorizedTrackingObservation setObservedAt:]
  -[SPUnauthorizedTrackingObservation trackingIdentifier]
  -[SPUnauthorizedTrackingObservation observedLocations]
  -[SPUnauthorizedTrackingObservation observedAt]
  -[SPUnauthorizedTrackingObservation initWithCurrentAdvertisementAndLocationHistory:observedLocations:]
  -[SPUnauthorizedTrackingObservation initWithCoder:]


SPCommand : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSUUID *beaconIdentifier
 @property  long long type
 @property  NSDate *expiration
 @property  NSNumber *duration
 @property  SPHandle *handle
 @property  NSString *lostModeMessage
 @property  NSString *lostModePhoneNumber
 @property  NSString *obfuscatedIdentifier
 @property  BOOL enableLostMode
 @property  NSString *taskName

  // class methods
  +[SPCommand supportsSecureCoding]
  +[SPCommand disableNotifyWhenFound:]
  +[SPCommand locate:]
  +[SPCommand enableNotifyWhenFound:]
  +[SPCommand stopNotifyWhenFound:]
  +[SPCommand startNotifyWhenFound:]

  // instance methods
  -[SPCommand copyWithZone:]
  -[SPCommand setType:]
  -[SPCommand .cxx_destruct]
  -[SPCommand setIdentifier:]
  -[SPCommand encodeWithCoder:]
  -[SPCommand identifier]
  -[SPCommand handle]
  -[SPCommand setHandle:]
  -[SPCommand type]
  -[SPCommand taskName]
  -[SPCommand setDuration:]
  -[SPCommand expiration]
  -[SPCommand setExpiration:]
  -[SPCommand initWithBeaconUUID:type:expiration:duration:handle:lostModeMessage:lostModePhoneNumber:obfuscatedIdentifier:]
  -[SPCommand initWithBeaconUUID:type:expiration:duration:handle:lostModeMessage:lostModePhoneNumber:obfuscatedIdentifier:identifier:]
  -[SPCommand setBeaconIdentifier:]
  -[SPCommand setLostModeMessage:]
  -[SPCommand setLostModePhoneNumber:]
  -[SPCommand setObfuscatedIdentifier:]
  -[SPCommand lostModeMessage]
  -[SPCommand initWithCoder:]
  -[SPCommand lostModePhoneNumber]
  -[SPCommand obfuscatedIdentifier]
  -[SPCommand beaconIdentifier]
  -[SPCommand enableLostMode]
  -[SPCommand setEnableLostMode:]
  -[SPCommand duration]


SPBeaconObservation : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSUUID *beaconIdentifier
 @property  long long type
 @property  NSDate *date
 @property  SPObservationLocation *location

  // class methods
  +[SPBeaconObservation supportsSecureCoding]

  // instance methods
  -[SPBeaconObservation init]
  -[SPBeaconObservation .cxx_destruct]
  -[SPBeaconObservation date]
  -[SPBeaconObservation encodeWithCoder:]
  -[SPBeaconObservation type]
  -[SPBeaconObservation location]
  -[SPBeaconObservation initWithCoder:]
  -[SPBeaconObservation beaconIdentifier]
  -[SPBeaconObservation initWithBeaconIdentifier:type:date:location:]


SPSafeLocation : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  double latitude
 @property  double longitude
 @property  double horizontalAccuracy
 @property  double altitude
 @property  double verticalAccuracy
 @property  double speed
 @property  double speedAccuracy
 @property  double course
 @property  double courseAccuracy
 @property  NSNumber *floorLevel
 @property  SPLocationAddress *address

  // class methods
  +[SPSafeLocation supportsSecureCoding]

  // instance methods
  -[SPSafeLocation setCourse:]
  -[SPSafeLocation copyWithZone:]
  -[SPSafeLocation longitude]
  -[SPSafeLocation course]
  -[SPSafeLocation setSpeed:]
  -[SPSafeLocation altitude]
  -[SPSafeLocation speed]
  -[SPSafeLocation setAltitude:]
  -[SPSafeLocation setLongitude:]
  -[SPSafeLocation setAddress:]
  -[SPSafeLocation setLatitude:]
  -[SPSafeLocation address]
  -[SPSafeLocation latitude]
  -[SPSafeLocation .cxx_destruct]
  -[SPSafeLocation speedAccuracy]
  -[SPSafeLocation setHorizontalAccuracy:]
  -[SPSafeLocation setIdentifier:]
  -[SPSafeLocation encodeWithCoder:]
  -[SPSafeLocation identifier]
  -[SPSafeLocation horizontalAccuracy]
  -[SPSafeLocation courseAccuracy]
  -[SPSafeLocation setVerticalAccuracy:]
  -[SPSafeLocation isEqual:]
  -[SPSafeLocation verticalAccuracy]
  -[SPSafeLocation setCourseAccuracy:]
  -[SPSafeLocation setSpeedAccuracy:]
  -[SPSafeLocation initWithCoder:]
  -[SPSafeLocation floorLevel]
  -[SPSafeLocation initWithLatitude:longitude:horizontalAccuracy:altitude:verticalAccuracy:speed:speedAccuracy:course:courseAccuracy:floorLevel:address:]
  -[SPSafeLocation initWithLatitude:longitude:horizontalAccuracy:altitude:verticalAccuracy:speed:speedAccuracy:course:courseAccuracy:floorLevel:address:identifier:]
  -[SPSafeLocation setFloorLevel:]
  -[SPSafeLocation initWithLatitude:longitude:horizontalAcuracy:altitude:verticalAccuracy:speed:speedAccuracy:course:courseAccuracy:floorLevel:address:]


SPBeaconingKey : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSDateInterval *dateInterval
 @property  NSData *key
 @property  NSData *secondaryKey
 @property  unsigned long primaryIndex
 @property  unsigned long secondaryIndex

  // class methods
  +[SPBeaconingKey supportsSecureCoding]

  // instance methods
  -[SPBeaconingKey copyWithZone:]
  -[SPBeaconingKey dateInterval]
  -[SPBeaconingKey .cxx_destruct]
  -[SPBeaconingKey setKey:]
  -[SPBeaconingKey encodeWithCoder:]
  -[SPBeaconingKey key]
  -[SPBeaconingKey setDateInterval:]
  -[SPBeaconingKey primaryIndex]
  -[SPBeaconingKey secondaryIndex]
  -[SPBeaconingKey setPrimaryIndex:]
  -[SPBeaconingKey setSecondaryIndex:]
  -[SPBeaconingKey initWithCoder:]
  -[SPBeaconingKey initWithDateInterval:key:secondaryKey:primaryIndex:secondaryIndex:]
  -[SPBeaconingKey initWithDateInterval:key:]
  -[SPBeaconingKey secondaryKey]
  -[SPBeaconingKey setSecondaryKey:]


SPUnknownBeacon : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSUUID *identifier
 @property  NSUUID *beaconIdentifier
 @property  NSArray *beaconLocations
 @property  NSData *advertisement
 @property  SPHandle *handle
 @property  BOOL isIgnored
 @property  NSDate *triggerDate
 @property  NSDate *ignoresUntilDate

  // class methods
  +[SPUnknownBeacon supportsSecureCoding]

  // instance methods
  -[SPUnknownBeacon copyWithZone:]
  -[SPUnknownBeacon isIgnored]
  -[SPUnknownBeacon triggerDate]
  -[SPUnknownBeacon .cxx_destruct]
  -[SPUnknownBeacon setIdentifier:]
  -[SPUnknownBeacon encodeWithCoder:]
  -[SPUnknownBeacon identifier]
  -[SPUnknownBeacon handle]
  -[SPUnknownBeacon setHandle:]
  -[SPUnknownBeacon setTriggerDate:]
  -[SPUnknownBeacon isEqual:]
  -[SPUnknownBeacon setBeaconIdentifier:]
  -[SPUnknownBeacon initWithCoder:]
  -[SPUnknownBeacon beaconIdentifier]
  -[SPUnknownBeacon setIgnoresUntilDate:]
  -[SPUnknownBeacon beaconLocations]
  -[SPUnknownBeacon setBeaconLocations:]
  -[SPUnknownBeacon advertisement]
  -[SPUnknownBeacon setAdvertisement:]
  -[SPUnknownBeacon setIsIgnored:]
  -[SPUnknownBeacon ignoresUntilDate]


SPPairingManager : NSObject /usr/lib/libSystem.B.dylib
 @property  FMXPCServiceDescription *serviceDescription
 @property  FMXPCSession *session
 @property  <SPPairingManagerXPCProtocol> *proxy
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[SPPairingManager serviceDescription]
  -[SPPairingManager setServiceDescription:]
  -[SPPairingManager userAgentProxy]
  -[SPPairingManager setProxy:]
  -[SPPairingManager remoteInterface]
  -[SPPairingManager setSession:]
  -[SPPairingManager init]
  -[SPPairingManager proxy]
  -[SPPairingManager session]
  -[SPPairingManager dealloc]
  -[SPPairingManager .cxx_destruct]
  -[SPPairingManager setQueue:]
  -[SPPairingManager queue]
  -[SPPairingManager currentBeaconingKeyWithCompletion:]
  -[SPPairingManager alwaysBeaconStateWithCompletion:]
  -[SPPairingManager setAlwaysBeaconState:completion:]
  -[SPPairingManager getLocalPairingDataWithCompletion:]


SPCommandKeys : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding, SPNearbyToken, SPConnectionToken>
 @property  SPBeaconingKey *beaconingKey
 @property  NSData *commandKey
 @property  NSData *connectionToken
 @property  NSData *nearbyToken
 @property  NSData *address
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDateInterval *dateInterval

  // class methods
  +[SPCommandKeys supportsSecureCoding]

  // instance methods
  -[SPCommandKeys copyWithZone:]
  -[SPCommandKeys address]
  -[SPCommandKeys dateInterval]
  -[SPCommandKeys .cxx_destruct]
  -[SPCommandKeys commandKey]
  -[SPCommandKeys encodeWithCoder:]
  -[SPCommandKeys beaconingKey]
  -[SPCommandKeys connectionToken]
  -[SPCommandKeys nearbyToken]
  -[SPCommandKeys setBeaconingKey:]
  -[SPCommandKeys setConnectionToken:]
  -[SPCommandKeys setNearbyToken:]
  -[SPCommandKeys setCommandKey:]
  -[SPCommandKeys initWithCoder:]
  -[SPCommandKeys initWithBeaconingKey:commandKey:connectionToken:nearbyToken:]


SPNetworkMonitor : NSObject /usr/lib/libSystem.B.dylib
 @property  NWPathEvaluator *evaluator
 @property  @? block
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  BOOL cachedIsNetworkUp

  // instance methods
  -[SPNetworkMonitor isMonitoring]
  -[SPNetworkMonitor stopMonitoring]
  -[SPNetworkMonitor evaluator]
  -[SPNetworkMonitor setCachedIsNetworkUp:]
  -[SPNetworkMonitor callbackQueue]
  -[SPNetworkMonitor isNetworkUp]
  -[SPNetworkMonitor setEvaluator:]
  -[SPNetworkMonitor setCallbackQueue:]
  -[SPNetworkMonitor .cxx_destruct]
  -[SPNetworkMonitor block]
  -[SPNetworkMonitor setBlock:]
  -[SPNetworkMonitor observeValueForKeyPath:ofObject:change:context:]
  -[SPNetworkMonitor notifyNetworkStateChange]
  -[SPNetworkMonitor startMonitoringWithCallback:]
  -[SPNetworkMonitor cachedIsNetworkUp]


SPOwnerSession : NSObject /usr/lib/libSystem.B.dylib <SPTrackingAvoidanceServiceProtocol, SPOwnerSessionPrivateProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  FMXPCServiceDescription *serviceDescription
 @property  FMXPCSession *session
 @property  <SPOwnerSessionXPCProtocol> *proxy
 @property  <SPOwnerSessionXPCProtocol> *userAgentProxy
 @property  NSSet *allBeaconsCache
 @property  NSSet *clientObservedBeacons
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSOperationQueue *notificationQueue
 @property  id beaconsChangedNotificationToken
 @property  id tagSeparationBeaconsChangedNotificationToken
 @property  id persistentConnectionBeaconsChangedNotificationToken
 @property  id beaconEstimatedLocationChangedNotificationToken
 @property  NSDictionary *locationCache
 @property  NSObject<OS_dispatch_source> *locationFetchDispatchTimer
 @property  NSObject<OS_dispatch_source> *connectionExpiryDispatchTimer
 @property  NSDate *fetchLimit
 @property  NSMutableDictionary *batteryStatusCache
 @property  NSSet *locationSources
 @property  @? beaconsChangedBlock
 @property  @? beaconAddedBlock
 @property  @? beaconRemovedBlock
 @property  @? latestLocationsUpdatedBlock
 @property  NSSet *allBeacons
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SPOwnerSession serviceDescription]
  -[SPOwnerSession locationFetchTimerFired]
  -[SPOwnerSession notificationQueue]
  -[SPOwnerSession setLocationFetchDispatchTimer:]
  -[SPOwnerSession setServiceDescription:]
  -[SPOwnerSession addBeaconChangedListener:beaconUUID:taskName:commandIdentifier:commandIssueDate:]
  -[SPOwnerSession fetchLimit]
  -[SPOwnerSession userAgentProxy]
  -[SPOwnerSession setProxy:]
  -[SPOwnerSession remoteInterface]
  -[SPOwnerSession setFetchLimit:]
  -[SPOwnerSession setSession:]
  -[SPOwnerSession init]
  -[SPOwnerSession beaconAddedBlock]
  -[SPOwnerSession proxy]
  -[SPOwnerSession setLocationFetchDispatchTimerWithInterval:]
  -[SPOwnerSession finishBeaconFuture:beaconUUID:]
  -[SPOwnerSession setClientObservedBeacons:]
  -[SPOwnerSession startRefreshing]
  -[SPOwnerSession beaconEstimatedLocationChangedNotificationToken]
  -[SPOwnerSession persistentConnectionBeaconsChangedNotificationToken]
  -[SPOwnerSession setAllBeaconsCache:]
  -[SPOwnerSession session]
  -[SPOwnerSession allBeaconsCache]
  -[SPOwnerSession updateAllBeacons]
  -[SPOwnerSession dealloc]
  -[SPOwnerSession beaconRemovedBlock]
  -[SPOwnerSession executeCommand:completion:]
  -[SPOwnerSession setBeaconEstimatedLocationChangedNotificationToken:]
  -[SPOwnerSession beaconsChangedNotificationToken]
  -[SPOwnerSession setLocationCache:]
  -[SPOwnerSession .cxx_destruct]
  -[SPOwnerSession connectionExpiryTimerFired]
  -[SPOwnerSession rawSearchResultsForBeacon:dateInterval:completion:]
  -[SPOwnerSession locationCache]
  -[SPOwnerSession allBeacons]
  -[SPOwnerSession locationsForBeacons:completion:]
  -[SPOwnerSession setConnectionExpiryDispatchTimerWithInterval:]
  -[SPOwnerSession setBatteryStatusCache:]
  -[SPOwnerSession setBeaconsChangedNotificationToken:]
  -[SPOwnerSession locationSources]
  -[SPOwnerSession setBeaconAddedBlock:]
  -[SPOwnerSession unacceptedBeaconsWithCompletion:]
  -[SPOwnerSession locationFetchDispatchTimer]
  -[SPOwnerSession batteryStatusCache]
  -[SPOwnerSession _invalidate]
  -[SPOwnerSession setQueue:]
  -[SPOwnerSession setBeaconRemovedBlock:]
  -[SPOwnerSession setLocationSources:]
  -[SPOwnerSession setTagSeparationBeaconsChangedNotificationToken:]
  -[SPOwnerSession setNotificationQueue:]
  -[SPOwnerSession beaconsChangedBlock]
  -[SPOwnerSession forceUpdateKeyMapsForUUID:completion:]
  -[SPOwnerSession queue]
  -[SPOwnerSession setBeaconsChangedBlock:]
  -[SPOwnerSession beaconStoreStatusWithCompletion:]
  -[SPOwnerSession setConnectionExpiryDispatchTimer:]
  -[SPOwnerSession removeBeacon:completion:]
  -[SPOwnerSession waitForBeaconStoreAvailableWithCompletion:]
  -[SPOwnerSession forceUpdateKeyAlignmentRecordForUUID:completion:]
  -[SPOwnerSession setPersistentConnectionBeaconsChangedNotificationToken:]
  -[SPOwnerSession connectionExpiryDispatchTimer]
  -[SPOwnerSession tagSeparationBeaconsChangedNotificationToken]
  -[SPOwnerSession clientObservedBeacons]
  -[SPOwnerSession executeCommand:]
  -[SPOwnerSession forceDistributeKeysWithCompletion:]
  -[SPOwnerSession stopRefreshing]
  -[SPOwnerSession beaconForUUID:completion:]
  -[SPOwnerSession setUserAgentProxy:]
  -[SPOwnerSession updateConnectionExpiryDispatchTimerWithBeacons:]
  -[SPOwnerSession latestLocationsUpdatedBlock]
  -[SPOwnerSession startRefreshingBeacons:]
  -[SPOwnerSession allBeaconsWithCompletion:]
  -[SPOwnerSession setLatestLocationsUpdatedBlock:]
  -[SPOwnerSession updateAllBeaconLocations]


SPPowerAssertion : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *reason
 @property  double timeout
 @property  unsigned long type
 @property  unsigned int powerAssertionId
 @property  NSObject<OS_dispatch_queue> *queue

  // instance methods
  -[SPPowerAssertion assertionName]
  -[SPPowerAssertion setReason:]
  -[SPPowerAssertion timeout]
  -[SPPowerAssertion setTimeout:]
  -[SPPowerAssertion dealloc]
  -[SPPowerAssertion setType:]
  -[SPPowerAssertion .cxx_destruct]
  -[SPPowerAssertion setQueue:]
  -[SPPowerAssertion powerAssertionId]
  -[SPPowerAssertion powerAssertionOption]
  -[SPPowerAssertion type]
  -[SPPowerAssertion drop]
  -[SPPowerAssertion queue]
  -[SPPowerAssertion hold]
  -[SPPowerAssertion assertionType]
  -[SPPowerAssertion _drop]
  -[SPPowerAssertion reason]
  -[SPPowerAssertion setPowerAssertionId:]
  -[SPPowerAssertion initWithReason:type:timeout:]


SPKeyIndexMap : NSObject /usr/lib/libSystem.B.dylib
 @property  NSUUID *beaconIdentifier
 @property  unsigned char sequence
 @property  ^{?=^{_sp_key_index_map}Q} mapHandle

  // instance methods
  -[SPKeyIndexMap init]
  -[SPKeyIndexMap dealloc]
  -[SPKeyIndexMap .cxx_destruct]
  -[SPKeyIndexMap sequence]
  -[SPKeyIndexMap mapHandle]
  -[SPKeyIndexMap beaconIdentifier]
  -[SPKeyIndexMap headerString]
  -[SPKeyIndexMap initWithBeaconIdentifier:keySequence:mapHandle:]


SPKeyReconciler : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SPKeyReconciler .cxx_destruct]
  -[SPKeyReconciler initWithDictionary:]
  -[SPKeyReconciler reconcileKey:matchedIndex:sequence:error:]


SPOwnerInterface : NSObject /usr/lib/libSystem.B.dylib
  // instance methods
  -[SPOwnerInterface settingsConfiguration]
  -[SPOwnerInterface fmipRegisterInfo]
  -[SPOwnerInterface ownerSession]
  -[SPOwnerInterface privateOwnerSession]
  -[SPOwnerInterface trackingAvoidanceService]


SPObservationLocation : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSDate *timestamp
 @property  double latitude
 @property  double longitude
 @property  double horizontalAccuracy
 @property  double altitude
 @property  double verticalAccuracy
 @property  double speed
 @property  double speedAccuracy
 @property  double course
 @property  double courseAccuracy
 @property  NSNumber *floorLevel

  // class methods
  +[SPObservationLocation supportsSecureCoding]

  // instance methods
  -[SPObservationLocation setCourse:]
  -[SPObservationLocation copyWithZone:]
  -[SPObservationLocation longitude]
  -[SPObservationLocation course]
  -[SPObservationLocation setSpeed:]
  -[SPObservationLocation altitude]
  -[SPObservationLocation speed]
  -[SPObservationLocation setAltitude:]
  -[SPObservationLocation setLongitude:]
  -[SPObservationLocation setLatitude:]
  -[SPObservationLocation latitude]
  -[SPObservationLocation .cxx_destruct]
  -[SPObservationLocation speedAccuracy]
  -[SPObservationLocation setHorizontalAccuracy:]
  -[SPObservationLocation timestamp]
  -[SPObservationLocation setTimestamp:]
  -[SPObservationLocation encodeWithCoder:]
  -[SPObservationLocation horizontalAccuracy]
  -[SPObservationLocation courseAccuracy]
  -[SPObservationLocation setVerticalAccuracy:]
  -[SPObservationLocation verticalAccuracy]
  -[SPObservationLocation setCourseAccuracy:]
  -[SPObservationLocation setSpeedAccuracy:]
  -[SPObservationLocation initWithCoder:]
  -[SPObservationLocation floorLevel]
  -[SPObservationLocation setFloorLevel:]
  -[SPObservationLocation initWithTimestamp:latitude:longitude:horizontalAccuracy:altitude:verticalAccuracy:speed:speedAccuracy:course:courseAccuracy:floorLevel:]
  -[SPObservationLocation initWithTimestamp:latitude:longitude:horizontalAcuracy:altitude:verticalAccuracy:speed:speedAccuracy:course:courseAccuracy:floorLevel:]


SPBeaconUpdates : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  long long roleId
 @property  NSString *emoji

  // class methods
  +[SPBeaconUpdates supportsSecureCoding]

  // instance methods
  -[SPBeaconUpdates copyWithZone:]
  -[SPBeaconUpdates emoji]
  -[SPBeaconUpdates roleId]
  -[SPBeaconUpdates .cxx_destruct]
  -[SPBeaconUpdates name]
  -[SPBeaconUpdates setEmoji:]
  -[SPBeaconUpdates encodeWithCoder:]
  -[SPBeaconUpdates setName:]
  -[SPBeaconUpdates initWithCoder:]
  -[SPBeaconUpdates setRoleId:]
  -[SPBeaconUpdates initWithName:roleId:]


SPCommandKeysCriteria : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSNumber *sequence
 @property  NSDateInterval *dateInterval
 @property  NSArray *indices
 @property  NSNumber *index
 @property  NSNumber *hint

  // class methods
  +[SPCommandKeysCriteria supportsSecureCoding]
  +[SPCommandKeysCriteria matchDateInterval:]
  +[SPCommandKeysCriteria matchPrimaryIndices:]
  +[SPCommandKeysCriteria driftModeledCriteria]
  +[SPCommandKeysCriteria matchSecondaryIndex:hint:]
  +[SPCommandKeysCriteria matchSequence:index:hint:]

  // instance methods
  -[SPCommandKeysCriteria copyWithZone:]
  -[SPCommandKeysCriteria index]
  -[SPCommandKeysCriteria hint]
  -[SPCommandKeysCriteria setIndex:]
  -[SPCommandKeysCriteria dateInterval]
  -[SPCommandKeysCriteria .cxx_destruct]
  -[SPCommandKeysCriteria encodeWithCoder:]
  -[SPCommandKeysCriteria setSequence:]
  -[SPCommandKeysCriteria setDateInterval:]
  -[SPCommandKeysCriteria indices]
  -[SPCommandKeysCriteria setIndices:]
  -[SPCommandKeysCriteria setHint:]
  -[SPCommandKeysCriteria sequence]
  -[SPCommandKeysCriteria initWithCoder:]
  -[SPCommandKeysCriteria initWithDateInterval:sequence:indices:index:hint:]


SPMacBeaconConfig : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  double initialNoBeaconDuration
 @property  double fastRollAdvertisementDuration
 @property  double fastRollAdvertisementInterval
 @property  double slowRollAdvertisementDuration
 @property  double slowRollNoAdvertisementDuration
 @property  double noAdvertisementDurationDecayFactor
 @property  NSArray *postInitialDayAdvertisementTimes

  // class methods
  +[SPMacBeaconConfig supportsSecureCoding]

  // instance methods
  -[SPMacBeaconConfig copyWithZone:]
  -[SPMacBeaconConfig .cxx_destruct]
  -[SPMacBeaconConfig encodeWithCoder:]
  -[SPMacBeaconConfig initWithCoder:]
  -[SPMacBeaconConfig fastRollAdvertisementDuration]
  -[SPMacBeaconConfig fastRollAdvertisementInterval]
  -[SPMacBeaconConfig slowRollAdvertisementDuration]
  -[SPMacBeaconConfig slowRollNoAdvertisementDuration]
  -[SPMacBeaconConfig noAdvertisementDurationDecayFactor]
  -[SPMacBeaconConfig initFromPrefs]
  -[SPMacBeaconConfig persistToPrefs]
  -[SPMacBeaconConfig initWithInitialNoBeaconDuration:fastRollAdvertisementDuration:fastRollAdvertisementInterval:slowRollAdvertisementDuration:slowRollNoAdvertisementDuration:noAdvertisementDurationDecayFactor:postInitialDayAdvertisementTimes:]
  -[SPMacBeaconConfig initialNoBeaconDuration]
  -[SPMacBeaconConfig setInitialNoBeaconDuration:]
  -[SPMacBeaconConfig setFastRollAdvertisementDuration:]
  -[SPMacBeaconConfig setFastRollAdvertisementInterval:]
  -[SPMacBeaconConfig setSlowRollAdvertisementDuration:]
  -[SPMacBeaconConfig setSlowRollNoAdvertisementDuration:]
  -[SPMacBeaconConfig setNoAdvertisementDurationDecayFactor:]
  -[SPMacBeaconConfig postInitialDayAdvertisementTimes]
  -[SPMacBeaconConfig setPostInitialDayAdvertisementTimes:]


SPBLEStateMonitor : NSObject /usr/lib/libSystem.B.dylib <CBCentralManagerDelegate>
 @property  unsigned long bleState
 @property  CBCentralManager *centralManager
 @property  <SPBLEStateMonitorDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SPBLEStateMonitor startMonitoring]
  -[SPBLEStateMonitor init]
  -[SPBLEStateMonitor notifyDelegate:]
  -[SPBLEStateMonitor centralManager]
  -[SPBLEStateMonitor .cxx_destruct]
  -[SPBLEStateMonitor centralManagerDidUpdateState:]
  -[SPBLEStateMonitor setBleState:]
  -[SPBLEStateMonitor setCentralManager:]
  -[SPBLEStateMonitor bleState]
  -[SPBLEStateMonitor setDelegate:]
  -[SPBLEStateMonitor delegate]


SPBeaconManager : NSObject /usr/lib/libSystem.B.dylib <SPMonitorsWrapperDelegate, SPBLEStateMonitorDelegate>
 @property  FMXPCServiceDescription *serviceDescription
 @property  FMXPCSession *session
 @property  <SPBeaconManagerXPCProtocol> *proxy
 @property  <SPBeaconManagerXPCProtocol> *userAgentProxy
 @property  NSObject<OS_dispatch_queue> *queue
 @property  FMXPCTimer *periodicActionXpcTimer
 @property  NSObject<OS_dispatch_source> *periodicActionDispatchTimer
 @property  SPMonitorsWrapper *monitorWrapper
 @property  SPBLEStateMonitor *bleMonitor
 @property  BOOL currentBeaconingState
 @property  BOOL forceBeaconingOff
 @property  unsigned char currentStatus
 @property  long long cachedLocalBeaconManagerState
 @property  BOOL initialStateChangeSent
 @property  @? stateChangedBlock
 @property  @? stateChangedBlockWithCompletion
 @property  @? statusChangedBlock
 @property  @? statusChangedBlockWithCompletion
 @property  @? beaconingKeyChangedBlock
 @property  @? beaconingKeyChangedBlockWithCompletion
 @property  @? nearbyTokensChangedBlock
 @property  @? nearbyTokensChangedBlockWithCompletion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SPBeaconManager afterFirstUnlock:]
  +[SPBeaconManager scheduleDateInterval:]

  // instance methods
  -[SPBeaconManager serviceDescription]
  -[SPBeaconManager setStateChangedBlock:]
  -[SPBeaconManager setServiceDescription:]
  -[SPBeaconManager beaconingStateChangedNotification:]
  -[SPBeaconManager periodicActionDispatchTimer]
  -[SPBeaconManager bleMonitor:didChangeState:]
  -[SPBeaconManager stateChangedBlock]
  -[SPBeaconManager userAgentProxy]
  -[SPBeaconManager setProxy:]
  -[SPBeaconManager remoteInterface]
  -[SPBeaconManager stateDidChange:powerState:]
  -[SPBeaconManager setPeriodicActionDispatchTimerWithInterval:]
  -[SPBeaconManager setSession:]
  -[SPBeaconManager init]
  -[SPBeaconManager setNearbyTokensChangedBlock:]
  -[SPBeaconManager proxy]
  -[SPBeaconManager statusChangedBlock]
  -[SPBeaconManager nearbyTokensChangedBlockWithCompletion]
  -[SPBeaconManager setNearbyTokensChangedBlockWithCompletion:]
  -[SPBeaconManager session]
  -[SPBeaconManager setMonitorWrapper:]
  -[SPBeaconManager notifyNearbyTokensChangedBlockWithCompletion:]
  -[SPBeaconManager dealloc]
  -[SPBeaconManager setBeaconingKeyChangedBlockWithCompletion:]
  -[SPBeaconManager notificationBeaconForSubscriptionId:completion:]
  -[SPBeaconManager periodicActionWithCompletion:]
  -[SPBeaconManager stateChangedBlockWithCompletion]
  -[SPBeaconManager .cxx_destruct]
  -[SPBeaconManager initialStateChangeSent]
  -[SPBeaconManager setStatusChangedBlock:]
  -[SPBeaconManager cachedLocalBeaconManagerState]
  -[SPBeaconManager currentBeaconingState]
  -[SPBeaconManager beaconingStateChanged:]
  -[SPBeaconManager setPeriodicActionDispatchTimer:]
  -[SPBeaconManager unacceptedBeaconsWithCompletion:]
  -[SPBeaconManager _invalidate]
  -[SPBeaconManager setQueue:]
  -[SPBeaconManager setBleMonitor:]
  -[SPBeaconManager beaconingKeysForUUID:dateInterval:completion:]
  -[SPBeaconManager setStateChangedBlockWithCompletion:]
  -[SPBeaconManager setCachedLocalBeaconManagerState:]
  -[SPBeaconManager notifyStatusChange:]
  -[SPBeaconManager checkInPeriodicActionXpcTimer]
  -[SPBeaconManager statusChangedBlockWithCompletion]
  -[SPBeaconManager forceBeaconingOff]
  -[SPBeaconManager currentStatus]
  -[SPBeaconManager allBeaconsOfType:completion:]
  -[SPBeaconManager bleMonitor]
  -[SPBeaconManager queue]
  -[SPBeaconManager notifyStateChange:]
  -[SPBeaconManager setStatusChangedBlockWithCompletion:]
  -[SPBeaconManager beaconingKeyChangedBlock]
  -[SPBeaconManager setInitialStateChangeSent:]
  -[SPBeaconManager nearbyTokensChangedBlock]
  -[SPBeaconManager beaconsChanged:]
  -[SPBeaconManager setBeaconingKeyChangedBlock:]
  -[SPBeaconManager beaconForUUID:completion:]
  -[SPBeaconManager setCurrentStatus:]
  -[SPBeaconManager setUserAgentProxy:]
  -[SPBeaconManager timerFired]
  -[SPBeaconManager monitorWrapper]
  -[SPBeaconManager setPeriodicActionXpcTimer:]
  -[SPBeaconManager periodicActionXpcTimer]
  -[SPBeaconManager beaconingKeyChangedBlockWithCompletion]
  -[SPBeaconManager invalidate]
  -[SPBeaconManager setCurrentBeaconingState:]
  -[SPBeaconManager notifyBeaconingKeysChangedBlockWithCompletion:]
  -[SPBeaconManager allBeaconsWithCompletion:]
  -[SPBeaconManager setPeriodicActionXpcTimerWithDateInterval:]
  -[SPBeaconManager isBeaconing]
  -[SPBeaconManager start]
  -[SPBeaconManager setForceBeaconingOff:]


SPBeaconRole : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  long long roleId

  // class methods
  +[SPBeaconRole supportsSecureCoding]

  // instance methods
  -[SPBeaconRole copyWithZone:]
  -[SPBeaconRole roleId]
  -[SPBeaconRole encodeWithCoder:]
  -[SPBeaconRole initWithCoder:]
  -[SPBeaconRole setRoleId:]
  -[SPBeaconRole initWithRoleId:]


SPUnauthorizedTrackingAdvertisement : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSData *_address
 @property  long long rssi
 @property  NSData *advertisementData
 @property  unsigned char status
 @property  NSData *reserved
 @property  NSDate *scanDate
 @property  NSData *address
 @property  NSData *data

  // class methods
  +[SPUnauthorizedTrackingAdvertisement supportsSecureCoding]

  // instance methods
  -[SPUnauthorizedTrackingAdvertisement _address]
  -[SPUnauthorizedTrackingAdvertisement advertisementData]
  -[SPUnauthorizedTrackingAdvertisement setData:]
  -[SPUnauthorizedTrackingAdvertisement address]
  -[SPUnauthorizedTrackingAdvertisement .cxx_destruct]
  -[SPUnauthorizedTrackingAdvertisement setAdvertisementData:]
  -[SPUnauthorizedTrackingAdvertisement encodeWithCoder:]
  -[SPUnauthorizedTrackingAdvertisement data]
  -[SPUnauthorizedTrackingAdvertisement reserved]
  -[SPUnauthorizedTrackingAdvertisement rssi]
  -[SPUnauthorizedTrackingAdvertisement setRssi:]
  -[SPUnauthorizedTrackingAdvertisement setReserved:]
  -[SPUnauthorizedTrackingAdvertisement isEqual:]
  -[SPUnauthorizedTrackingAdvertisement scanDate]
  -[SPUnauthorizedTrackingAdvertisement setStatus:]
  -[SPUnauthorizedTrackingAdvertisement status]
  -[SPUnauthorizedTrackingAdvertisement initWithCoder:]
  -[SPUnauthorizedTrackingAdvertisement set_address:]
  -[SPUnauthorizedTrackingAdvertisement setScanDate:]
  -[SPUnauthorizedTrackingAdvertisement initWithAddress:advertisementData:status:reserved:rssi:scanDate:]
  -[SPUnauthorizedTrackingAdvertisement initWithAddress:advertisementData:rssi:scanDate:]


SPRawSearchResult : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSData *hashedPublicKey
 @property  NSData *publicKey
 @property  long long status
 @property  NSDate *timestamp
 @property  double latitude
 @property  double longitude
 @property  double horizontalAccuracy

  // class methods
  +[SPRawSearchResult supportsSecureCoding]

  // instance methods
  -[SPRawSearchResult copyWithZone:]
  -[SPRawSearchResult longitude]
  -[SPRawSearchResult publicKey]
  -[SPRawSearchResult latitude]
  -[SPRawSearchResult .cxx_destruct]
  -[SPRawSearchResult timestamp]
  -[SPRawSearchResult encodeWithCoder:]
  -[SPRawSearchResult horizontalAccuracy]
  -[SPRawSearchResult status]
  -[SPRawSearchResult initWithCoder:]
  -[SPRawSearchResult hashedPublicKey]
  -[SPRawSearchResult initWithHashedPublicKey:publicKey:status:timestamp:latitude:longitude:horizontalAccuracy:]


SPSettingsConfiguration : NSObject /usr/lib/libSystem.B.dylib <SPFMIPRegisterInfo, SPSettingsConfigurating>
 @property  NSUUID *baUUID
 @property  NSString *serviceState
 @property  NSSet *serviceDisabledReasons
 @property  NSDate *beaconZoneCreationDate
 @property  NSNumber *beaconZoneCreationErrorCode
 @property  NSDate *lastKeyRollDate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  FMXPCServiceDescription *serviceDescription
 @property  FMXPCSession *session
 @property  <SPBeaconManagerXPCProtocol> *proxy
 @property  <SPBeaconManagerXPCProtocol> *userAgentProxy
 @property  id serviceSettingsChangedNotificationToken
 @property  NSOperationQueue *notificationQueue
 @property  NSUserDefaults *sharedDefaults
 @property  NSString *serviceState
 @property  NSSet *serviceDisabledReasons
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SPSettingsConfiguration serviceDescription]
  -[SPSettingsConfiguration notificationQueue]
  -[SPSettingsConfiguration setServiceDescription:]
  -[SPSettingsConfiguration userAgentProxy]
  -[SPSettingsConfiguration serviceSettingsChangedNotificationToken]
  -[SPSettingsConfiguration setServiceSettingsChangedNotificationToken:]
  -[SPSettingsConfiguration beginRefreshingServiceStateWithBlock:]
  -[SPSettingsConfiguration setSharedDefaults:]
  -[SPSettingsConfiguration setServiceDisabledReasons:]
  -[SPSettingsConfiguration setProxy:]
  -[SPSettingsConfiguration setSession:]
  -[SPSettingsConfiguration serviceState]
  -[SPSettingsConfiguration init]
  -[SPSettingsConfiguration proxy]
  -[SPSettingsConfiguration session]
  -[SPSettingsConfiguration dealloc]
  -[SPSettingsConfiguration baUUID]
  -[SPSettingsConfiguration .cxx_destruct]
  -[SPSettingsConfiguration _invalidate]
  -[SPSettingsConfiguration setQueue:]
  -[SPSettingsConfiguration setServiceState:]
  -[SPSettingsConfiguration setNotificationQueue:]
  -[SPSettingsConfiguration queue]
  -[SPSettingsConfiguration setUserAgentProxy:]
  -[SPSettingsConfiguration beaconZoneCreationDate]
  -[SPSettingsConfiguration lastKeyRollDate]
  -[SPSettingsConfiguration beaconZoneCreationErrorCode]
  -[SPSettingsConfiguration serviceSettingsConfiguration]
  -[SPSettingsConfiguration serviceDisabledReasons]
  -[SPSettingsConfiguration sharedDefaults]
  -[SPSettingsConfiguration setServiceState:completion:]


SPBeaconDescription : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *name
 @property  NSString *model
 @property  NSString *systemVersion
 @property  long long vendorId
 @property  long long productId
 @property  long long role
 @property  NSString *stableIdentifier

  // class methods
  +[SPBeaconDescription supportsSecureCoding]

  // instance methods
  -[SPBeaconDescription copyWithZone:]
  -[SPBeaconDescription initWithStableIdentifier:name:model:systemVersion:vendorId:productId:role:]
  -[SPBeaconDescription vendorId]
  -[SPBeaconDescription .cxx_destruct]
  -[SPBeaconDescription systemVersion]
  -[SPBeaconDescription name]
  -[SPBeaconDescription setModel:]
  -[SPBeaconDescription setRole:]
  -[SPBeaconDescription encodeWithCoder:]
  -[SPBeaconDescription productId]
  -[SPBeaconDescription role]
  -[SPBeaconDescription model]
  -[SPBeaconDescription setName:]
  -[SPBeaconDescription setVendorId:]
  -[SPBeaconDescription stableIdentifier]
  -[SPBeaconDescription setProductId:]
  -[SPBeaconDescription initWithCoder:]
  -[SPBeaconDescription setSystemVersion:]


01 00 0200 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBCentralManager 
01 00 0500 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMFuture 
01 00 0500 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMPreferencesUtil 
01 00 0500 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMXPCServiceDescription 
01 00 0500 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMXPCSession 
01 00 0500 /System/Library/PrivateFrameworks/FMCoreLite.framework/FMCoreLite: FMXPCTimer 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateInterval 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0800 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0700 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0400 /System/Library/Frameworks/Network.framework/Network: NWPathEvaluator 
