|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountCalDAVDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountCardDAVDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountExchangeDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountExchangeDeclaration_OAuth
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountGoogleDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountLDAPDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountLDAPDeclaration_SearchSettingsItem
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountMailDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountMailDeclaration_IncomingServer
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountMailDeclaration_OutgoingServer
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAccountSubscribedCalendarDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelActivationBase
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelActivationSimpleDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAnyPayload
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAppDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAppDeclaration_Installation
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAssetBase
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAssetBaseReference
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelAssetReference
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelCertificateIdentityCredentialsDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelCommandBase
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelConfigurationBase
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelCredentialUserNameAndPasswordDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelDeclarationBase
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelImageDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelLegacyInteractiveProfileDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelLegacyProfileDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelManagementStatusSubscriptionsDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelManagementStatusSubscriptionsDeclaration_StatusItem
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelManagementTestCommandCommand
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelManagementTestCommandCommand_Status
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelManagementTestDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelPasscodeClearCommandCommand
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelPasscodeClearCommandCommand_Status
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelPasscodeSettingsDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelPayloadBase
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelRegisteredTypeResolver
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelSecretCredentialsDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusAccountCalDAV
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusAccountCardDAV
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusAccountExchange
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusAccountGoogle
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusAccountIncomingMail
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusAccountLDAP
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusAccountOutgoingMail
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusAccountSubscribedCalendar
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusApp
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusBase
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusManagementClientCapabilities
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusManagementClientCapabilities_SupportedPayloads
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusManagementDeclarations
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusManagementDeclarations_Declaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusReason
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusTestArrayValue
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelStatusTestDictionaryValue
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelUserIdentityDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelUserNameAndPasswordCredentialsDeclaration
|| __DATA.__objc_data _OBJC_CLASS_$_RMModelVPPOnDemandLicenseAssignmentDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountCalDAVDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountCardDAVDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountExchangeDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountExchangeDeclaration_OAuth
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountGoogleDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountLDAPDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountLDAPDeclaration_SearchSettingsItem
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountMailDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountMailDeclaration_IncomingServer
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountMailDeclaration_OutgoingServer
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAccountSubscribedCalendarDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelActivationBase
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelActivationSimpleDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAnyPayload
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAppDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAppDeclaration_Installation
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAssetBase
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAssetBaseReference
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelAssetReference
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelCertificateIdentityCredentialsDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelCommandBase
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelConfigurationBase
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelCredentialUserNameAndPasswordDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelDeclarationBase
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelImageDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelLegacyInteractiveProfileDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelLegacyProfileDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelManagementStatusSubscriptionsDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelManagementStatusSubscriptionsDeclaration_StatusItem
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelManagementTestCommandCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelManagementTestCommandCommand_Status
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelManagementTestDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelPasscodeClearCommandCommand
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelPasscodeClearCommandCommand_Status
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelPasscodeSettingsDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelPayloadBase
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelRegisteredTypeResolver
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelSecretCredentialsDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusAccountCalDAV
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusAccountCardDAV
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusAccountExchange
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusAccountGoogle
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusAccountIncomingMail
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusAccountLDAP
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusAccountOutgoingMail
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusAccountSubscribedCalendar
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusApp
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusBase
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusManagementClientCapabilities
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusManagementClientCapabilities_SupportedPayloads
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusManagementDeclarations
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusManagementDeclarations_Declaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusReason
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusTestArrayValue
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelStatusTestDictionaryValue
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelUserIdentityDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelUserNameAndPasswordCredentialsDeclaration
|| __DATA.__objc_data _OBJC_METACLASS_$_RMModelVPPOnDemandLicenseAssignmentDeclaration
|| __DATA_CONST.__const _RMModelAccountLDAPDeclaration_SearchSettingsItem_Scope_base
|| __DATA_CONST.__const _RMModelAccountLDAPDeclaration_SearchSettingsItem_Scope_oneLevel
|| __DATA_CONST.__const _RMModelAccountLDAPDeclaration_SearchSettingsItem_Scope_subtree
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_IncomingServer_AuthenticationMethod_CRAMMD5
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_IncomingServer_AuthenticationMethod_HTTPMD5
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_IncomingServer_AuthenticationMethod_NTLM
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_IncomingServer_AuthenticationMethod_none
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_IncomingServer_AuthenticationMethod_password
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_IncomingServer_ServerType_IMAP
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_IncomingServer_ServerType_POP
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_OutgoingServer_AuthenticationMethod_CRAMMD5
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_OutgoingServer_AuthenticationMethod_HTTPMD5
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_OutgoingServer_AuthenticationMethod_NTLM
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_OutgoingServer_AuthenticationMethod_none
|| __DATA_CONST.__const _RMModelAccountMailDeclaration_OutgoingServer_AuthenticationMethod_password
|| __DATA_CONST.__const _RMModelAppDeclaration_Installation_Method_appStore
|| __DATA_CONST.__const _RMModelDeclarationClassTypeActivation
|| __DATA_CONST.__const _RMModelDeclarationClassTypeAsset
|| __DATA_CONST.__const _RMModelDeclarationClassTypeConfiguration
|| __DATA_CONST.__const _RMModelManagementTestCommandCommand_ReturnStatus_executed
|| __DATA_CONST.__const _RMModelManagementTestCommandCommand_ReturnStatus_failed
|| __DATA_CONST.__const _RMModelManagementTestCommandCommand_ReturnStatus_pendingClient
|| __DATA_CONST.__const _RMModelManagementTestDeclaration_ReturnStatus_failed
|| __DATA_CONST.__const _RMModelManagementTestDeclaration_ReturnStatus_installed
|| __DATA_CONST.__const _RMModelManagementTestDeclaration_ReturnStatus_pendingClient
|| __DATA_CONST.__const _RMModelStatusItemAccountCalDAV
|| __DATA_CONST.__const _RMModelStatusItemAccountCardDAV
|| __DATA_CONST.__const _RMModelStatusItemAccountExchange
|| __DATA_CONST.__const _RMModelStatusItemAccountGoogle
|| __DATA_CONST.__const _RMModelStatusItemAccountIncomingMail
|| __DATA_CONST.__const _RMModelStatusItemAccountLDAP
|| __DATA_CONST.__const _RMModelStatusItemAccountOutgoingMail
|| __DATA_CONST.__const _RMModelStatusItemAccountSubscribedCalendar
|| __DATA_CONST.__const _RMModelStatusItemApp
|| __DATA_CONST.__const _RMModelStatusItemDeviceColorPrivate
|| __DATA_CONST.__const _RMModelStatusItemDeviceModelConfigurationCode
|| __DATA_CONST.__const _RMModelStatusItemDeviceModelFamily
|| __DATA_CONST.__const _RMModelStatusItemDeviceModelIdentifier
|| __DATA_CONST.__const _RMModelStatusItemDeviceModelMarketingName
|| __DATA_CONST.__const _RMModelStatusItemDeviceOperatingSystemBuildVersion
|| __DATA_CONST.__const _RMModelStatusItemDeviceOperatingSystemFamily
|| __DATA_CONST.__const _RMModelStatusItemDeviceOperatingSystemMarketingName
|| __DATA_CONST.__const _RMModelStatusItemDeviceOperatingSystemVersion
|| __DATA_CONST.__const _RMModelStatusItemDeviceSerialNumber
|| __DATA_CONST.__const _RMModelStatusItemDeviceStorageTotalInGBPrivate
|| __DATA_CONST.__const _RMModelStatusItemDeviceUDID
|| __DATA_CONST.__const _RMModelStatusItemManagementClientCapabilities
|| __DATA_CONST.__const _RMModelStatusItemManagementDeclarations
|| __DATA_CONST.__const _RMModelStatusItemManagementPushToken
|| __DATA_CONST.__const _RMModelStatusItemPasscodeCompliance
|| __DATA_CONST.__const _RMModelStatusItemPasscodeEscrowToken
|| __DATA_CONST.__const _RMModelStatusItemPasscodeIsPresent
|| __DATA_CONST.__const _RMModelStatusItemTestArrayValue
|| __DATA_CONST.__const _RMModelStatusItemTestBooleanValue
|| __DATA_CONST.__const _RMModelStatusItemTestDictionaryValue
|| __DATA_CONST.__const _RMModelStatusItemTestErrorValue
|| __DATA_CONST.__const _RMModelStatusItemTestIntegerValue
|| __DATA_CONST.__const _RMModelStatusItemTestRealValue
|| __DATA_CONST.__const _RMModelStatusItemTestStringValue
|| __DATA_CONST.__const _RMModelStatusManagementDeclarations_Declaration_Valid_invalid
|| __DATA_CONST.__const _RMModelStatusManagementDeclarations_Declaration_Valid_unknown
|| __DATA_CONST.__const _RMModelStatusManagementDeclarations_Declaration_Valid_valid
|| __TEXT.__text _RMModelStatusItemAll
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ libSystem.B.dylib: _CC_SHA1_Final
__ libSystem.B.dylib: _CC_SHA1_Init
__ libSystem.B.dylib: _CC_SHA1_Update
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
RMModelAccountCalDAVDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadVisibleName
 @property  NSString *payloadHostName
 @property  NSNumber *payloadPort
 @property  NSString *payloadPath
 @property  NSString *payloadAuthenticationCredentialsAssetReference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelAccountCalDAVDeclaration allowedPayloadKeys]
  +[RMModelAccountCalDAVDeclaration registeredClassName]
  +[RMModelAccountCalDAVDeclaration registeredIdentifier]
  +[RMModelAccountCalDAVDeclaration buildWithIdentifier:visibleName:hostName:port:path:authenticationCredentialsAssetReference:]
  +[RMModelAccountCalDAVDeclaration buildRequiredOnlyWithIdentifier:hostName:]

  // instance methods
  -[RMModelAccountCalDAVDeclaration copyWithZone:]
  -[RMModelAccountCalDAVDeclaration .cxx_destruct]
  -[RMModelAccountCalDAVDeclaration assetReferences]
  -[RMModelAccountCalDAVDeclaration setPayloadHostName:]
  -[RMModelAccountCalDAVDeclaration payloadHostName]
  -[RMModelAccountCalDAVDeclaration setPayloadPort:]
  -[RMModelAccountCalDAVDeclaration payloadPort]
  -[RMModelAccountCalDAVDeclaration setPayloadPath:]
  -[RMModelAccountCalDAVDeclaration payloadPath]
  -[RMModelAccountCalDAVDeclaration payloadAuthenticationCredentialsAssetReference]
  -[RMModelAccountCalDAVDeclaration setPayloadVisibleName:]
  -[RMModelAccountCalDAVDeclaration setPayloadAuthenticationCredentialsAssetReference:]
  -[RMModelAccountCalDAVDeclaration payloadVisibleName]
  -[RMModelAccountCalDAVDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelAccountCalDAVDeclaration serializePayloadWithType:]


RMModelAccountCardDAVDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadVisibleName
 @property  NSString *payloadHostName
 @property  NSNumber *payloadPort
 @property  NSString *payloadPath
 @property  NSString *payloadAuthenticationCredentialsAssetReference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelAccountCardDAVDeclaration allowedPayloadKeys]
  +[RMModelAccountCardDAVDeclaration registeredClassName]
  +[RMModelAccountCardDAVDeclaration registeredIdentifier]
  +[RMModelAccountCardDAVDeclaration buildWithIdentifier:visibleName:hostName:port:path:authenticationCredentialsAssetReference:]
  +[RMModelAccountCardDAVDeclaration buildRequiredOnlyWithIdentifier:hostName:]

  // instance methods
  -[RMModelAccountCardDAVDeclaration copyWithZone:]
  -[RMModelAccountCardDAVDeclaration .cxx_destruct]
  -[RMModelAccountCardDAVDeclaration assetReferences]
  -[RMModelAccountCardDAVDeclaration setPayloadHostName:]
  -[RMModelAccountCardDAVDeclaration payloadHostName]
  -[RMModelAccountCardDAVDeclaration setPayloadPort:]
  -[RMModelAccountCardDAVDeclaration payloadPort]
  -[RMModelAccountCardDAVDeclaration setPayloadPath:]
  -[RMModelAccountCardDAVDeclaration payloadPath]
  -[RMModelAccountCardDAVDeclaration payloadAuthenticationCredentialsAssetReference]
  -[RMModelAccountCardDAVDeclaration setPayloadVisibleName:]
  -[RMModelAccountCardDAVDeclaration setPayloadAuthenticationCredentialsAssetReference:]
  -[RMModelAccountCardDAVDeclaration payloadVisibleName]
  -[RMModelAccountCardDAVDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelAccountCardDAVDeclaration serializePayloadWithType:]


RMModelAccountExchangeDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadVisibleName
 @property  NSArray *payloadEnabledProtocolTypes
 @property  NSString *payloadUserIdentityAssetReference
 @property  NSString *payloadHostName
 @property  NSNumber *payloadPort
 @property  NSString *payloadPath
 @property  NSString *payloadExternalHostName
 @property  NSNumber *payloadExternalPort
 @property  NSString *payloadExternalPath
 @property  RMModelAccountExchangeDeclaration_OAuth *payloadOAuth
 @property  NSString *payloadAuthenticationCredentialsAssetReference
 @property  NSNumber *payloadMailServiceActive
 @property  NSNumber *payloadLockMailService
 @property  NSNumber *payloadContactsServiceActive
 @property  NSNumber *payloadLockContactsService
 @property  NSNumber *payloadCalendarServiceActive
 @property  NSNumber *payloadLockCalendarService
 @property  NSNumber *payloadRemindersServiceActive
 @property  NSNumber *payloadLockRemindersService
 @property  NSNumber *payloadNotesServiceActive
 @property  NSNumber *payloadLockNotesService
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelAccountExchangeDeclaration allowedPayloadKeys]
  +[RMModelAccountExchangeDeclaration registeredClassName]
  +[RMModelAccountExchangeDeclaration registeredIdentifier]
  +[RMModelAccountExchangeDeclaration buildWithIdentifier:visibleName:enabledProtocolTypes:userIdentityAssetReference:hostName:port:path:externalHostName:externalPort:externalPath:oAuth:authenticationCredentialsAssetReference:mailServiceActive:lockMailService:contactsServiceActive:lockContactsService:calendarServiceActive:lockCalendarService:remindersServiceActive:lockRemindersService:notesServiceActive:lockNotesService:]
  +[RMModelAccountExchangeDeclaration buildRequiredOnlyWithIdentifier:enabledProtocolTypes:]

  // instance methods
  -[RMModelAccountExchangeDeclaration copyWithZone:]
  -[RMModelAccountExchangeDeclaration .cxx_destruct]
  -[RMModelAccountExchangeDeclaration assetReferences]
  -[RMModelAccountExchangeDeclaration setPayloadHostName:]
  -[RMModelAccountExchangeDeclaration payloadHostName]
  -[RMModelAccountExchangeDeclaration setPayloadPort:]
  -[RMModelAccountExchangeDeclaration payloadPort]
  -[RMModelAccountExchangeDeclaration setPayloadPath:]
  -[RMModelAccountExchangeDeclaration payloadPath]
  -[RMModelAccountExchangeDeclaration payloadAuthenticationCredentialsAssetReference]
  -[RMModelAccountExchangeDeclaration setPayloadVisibleName:]
  -[RMModelAccountExchangeDeclaration setPayloadAuthenticationCredentialsAssetReference:]
  -[RMModelAccountExchangeDeclaration payloadVisibleName]
  -[RMModelAccountExchangeDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelAccountExchangeDeclaration serializePayloadWithType:]
  -[RMModelAccountExchangeDeclaration payloadUserIdentityAssetReference]
  -[RMModelAccountExchangeDeclaration setPayloadEnabledProtocolTypes:]
  -[RMModelAccountExchangeDeclaration setPayloadUserIdentityAssetReference:]
  -[RMModelAccountExchangeDeclaration setPayloadExternalHostName:]
  -[RMModelAccountExchangeDeclaration setPayloadExternalPort:]
  -[RMModelAccountExchangeDeclaration setPayloadExternalPath:]
  -[RMModelAccountExchangeDeclaration setPayloadOAuth:]
  -[RMModelAccountExchangeDeclaration setPayloadMailServiceActive:]
  -[RMModelAccountExchangeDeclaration setPayloadLockMailService:]
  -[RMModelAccountExchangeDeclaration setPayloadContactsServiceActive:]
  -[RMModelAccountExchangeDeclaration setPayloadLockContactsService:]
  -[RMModelAccountExchangeDeclaration setPayloadCalendarServiceActive:]
  -[RMModelAccountExchangeDeclaration setPayloadLockCalendarService:]
  -[RMModelAccountExchangeDeclaration setPayloadRemindersServiceActive:]
  -[RMModelAccountExchangeDeclaration setPayloadLockRemindersService:]
  -[RMModelAccountExchangeDeclaration setPayloadNotesServiceActive:]
  -[RMModelAccountExchangeDeclaration setPayloadLockNotesService:]
  -[RMModelAccountExchangeDeclaration payloadEnabledProtocolTypes]
  -[RMModelAccountExchangeDeclaration payloadExternalHostName]
  -[RMModelAccountExchangeDeclaration payloadExternalPort]
  -[RMModelAccountExchangeDeclaration payloadExternalPath]
  -[RMModelAccountExchangeDeclaration payloadOAuth]
  -[RMModelAccountExchangeDeclaration payloadMailServiceActive]
  -[RMModelAccountExchangeDeclaration payloadLockMailService]
  -[RMModelAccountExchangeDeclaration payloadContactsServiceActive]
  -[RMModelAccountExchangeDeclaration payloadLockContactsService]
  -[RMModelAccountExchangeDeclaration payloadCalendarServiceActive]
  -[RMModelAccountExchangeDeclaration payloadLockCalendarService]
  -[RMModelAccountExchangeDeclaration payloadRemindersServiceActive]
  -[RMModelAccountExchangeDeclaration payloadLockRemindersService]
  -[RMModelAccountExchangeDeclaration payloadNotesServiceActive]
  -[RMModelAccountExchangeDeclaration payloadLockNotesService]


RMModelAccountExchangeDeclaration_OAuth : RMModelPayloadBase
 @property  NSNumber *payloadEnabled
 @property  NSString *payloadSignInURL
 @property  NSString *payloadTokenRequestURL

  // class methods
  +[RMModelAccountExchangeDeclaration_OAuth allowedPayloadKeys]
  +[RMModelAccountExchangeDeclaration_OAuth buildWithEnabled:signInURL:tokenRequestURL:]
  +[RMModelAccountExchangeDeclaration_OAuth buildRequiredOnlyWithEnabled:]

  // instance methods
  -[RMModelAccountExchangeDeclaration_OAuth copyWithZone:]
  -[RMModelAccountExchangeDeclaration_OAuth .cxx_destruct]
  -[RMModelAccountExchangeDeclaration_OAuth setPayloadEnabled:]
  -[RMModelAccountExchangeDeclaration_OAuth payloadEnabled]
  -[RMModelAccountExchangeDeclaration_OAuth serializeWithType:]
  -[RMModelAccountExchangeDeclaration_OAuth setPayloadSignInURL:]
  -[RMModelAccountExchangeDeclaration_OAuth setPayloadTokenRequestURL:]
  -[RMModelAccountExchangeDeclaration_OAuth payloadSignInURL]
  -[RMModelAccountExchangeDeclaration_OAuth payloadTokenRequestURL]
  -[RMModelAccountExchangeDeclaration_OAuth loadFromDictionary:serializationType:error:]


RMModelAccountGoogleDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadVisibleName
 @property  NSString *payloadUserIdentityAssetReference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelAccountGoogleDeclaration allowedPayloadKeys]
  +[RMModelAccountGoogleDeclaration registeredClassName]
  +[RMModelAccountGoogleDeclaration registeredIdentifier]
  +[RMModelAccountGoogleDeclaration buildWithIdentifier:visibleName:userIdentityAssetReference:]
  +[RMModelAccountGoogleDeclaration buildRequiredOnlyWithIdentifier:userIdentityAssetReference:]

  // instance methods
  -[RMModelAccountGoogleDeclaration copyWithZone:]
  -[RMModelAccountGoogleDeclaration .cxx_destruct]
  -[RMModelAccountGoogleDeclaration assetReferences]
  -[RMModelAccountGoogleDeclaration setPayloadVisibleName:]
  -[RMModelAccountGoogleDeclaration payloadVisibleName]
  -[RMModelAccountGoogleDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelAccountGoogleDeclaration serializePayloadWithType:]
  -[RMModelAccountGoogleDeclaration payloadUserIdentityAssetReference]
  -[RMModelAccountGoogleDeclaration setPayloadUserIdentityAssetReference:]


RMModelAccountLDAPDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadVisibleName
 @property  NSString *payloadHostName
 @property  NSNumber *payloadPort
 @property  NSString *payloadAuthenticationCredentialsAssetReference
 @property  NSArray *payloadSearchSettings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelAccountLDAPDeclaration allowedPayloadKeys]
  +[RMModelAccountLDAPDeclaration registeredClassName]
  +[RMModelAccountLDAPDeclaration registeredIdentifier]
  +[RMModelAccountLDAPDeclaration buildRequiredOnlyWithIdentifier:hostName:]
  +[RMModelAccountLDAPDeclaration buildWithIdentifier:visibleName:hostName:port:authenticationCredentialsAssetReference:searchSettings:]

  // instance methods
  -[RMModelAccountLDAPDeclaration copyWithZone:]
  -[RMModelAccountLDAPDeclaration .cxx_destruct]
  -[RMModelAccountLDAPDeclaration assetReferences]
  -[RMModelAccountLDAPDeclaration setPayloadHostName:]
  -[RMModelAccountLDAPDeclaration payloadHostName]
  -[RMModelAccountLDAPDeclaration setPayloadPort:]
  -[RMModelAccountLDAPDeclaration payloadPort]
  -[RMModelAccountLDAPDeclaration payloadAuthenticationCredentialsAssetReference]
  -[RMModelAccountLDAPDeclaration setPayloadVisibleName:]
  -[RMModelAccountLDAPDeclaration setPayloadAuthenticationCredentialsAssetReference:]
  -[RMModelAccountLDAPDeclaration payloadVisibleName]
  -[RMModelAccountLDAPDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelAccountLDAPDeclaration serializePayloadWithType:]
  -[RMModelAccountLDAPDeclaration setPayloadSearchSettings:]
  -[RMModelAccountLDAPDeclaration payloadSearchSettings]


RMModelAccountLDAPDeclaration_SearchSettingsItem : RMModelPayloadBase
 @property  NSString *payloadVisibleDescription
 @property  NSString *payloadSearchBase
 @property  NSString *payloadScope

  // class methods
  +[RMModelAccountLDAPDeclaration_SearchSettingsItem allowedPayloadKeys]
  +[RMModelAccountLDAPDeclaration_SearchSettingsItem buildWithVisibleDescription:searchBase:scope:]
  +[RMModelAccountLDAPDeclaration_SearchSettingsItem buildRequiredOnlyWithSearchBase:]

  // instance methods
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem copyWithZone:]
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem .cxx_destruct]
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem serializeWithType:]
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem loadFromDictionary:serializationType:error:]
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem setPayloadVisibleDescription:]
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem setPayloadSearchBase:]
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem setPayloadScope:]
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem payloadVisibleDescription]
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem payloadSearchBase]
  -[RMModelAccountLDAPDeclaration_SearchSettingsItem payloadScope]


RMModelAccountMailDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadVisibleName
 @property  NSString *payloadUserIdentityAssetReference
 @property  RMModelAccountMailDeclaration_IncomingServer *payloadIncomingServer
 @property  RMModelAccountMailDeclaration_OutgoingServer *payloadOutgoingServer
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelAccountMailDeclaration allowedPayloadKeys]
  +[RMModelAccountMailDeclaration registeredClassName]
  +[RMModelAccountMailDeclaration registeredIdentifier]
  +[RMModelAccountMailDeclaration buildWithIdentifier:visibleName:userIdentityAssetReference:incomingServer:outgoingServer:]
  +[RMModelAccountMailDeclaration buildRequiredOnlyWithIdentifier:incomingServer:outgoingServer:]

  // instance methods
  -[RMModelAccountMailDeclaration copyWithZone:]
  -[RMModelAccountMailDeclaration .cxx_destruct]
  -[RMModelAccountMailDeclaration assetReferences]
  -[RMModelAccountMailDeclaration setPayloadVisibleName:]
  -[RMModelAccountMailDeclaration payloadVisibleName]
  -[RMModelAccountMailDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelAccountMailDeclaration serializePayloadWithType:]
  -[RMModelAccountMailDeclaration payloadUserIdentityAssetReference]
  -[RMModelAccountMailDeclaration setPayloadUserIdentityAssetReference:]
  -[RMModelAccountMailDeclaration payloadIncomingServer]
  -[RMModelAccountMailDeclaration payloadOutgoingServer]
  -[RMModelAccountMailDeclaration setPayloadIncomingServer:]
  -[RMModelAccountMailDeclaration setPayloadOutgoingServer:]


RMModelAccountMailDeclaration_IncomingServer : RMModelPayloadBase
 @property  NSString *payloadServerType
 @property  NSString *payloadHostName
 @property  NSNumber *payloadPort
 @property  NSString *payloadAuthenticationMethod
 @property  NSString *payloadAuthenticationCredentialsAssetReference
 @property  NSString *payloadIMAPPathPrefix

  // class methods
  +[RMModelAccountMailDeclaration_IncomingServer allowedPayloadKeys]
  +[RMModelAccountMailDeclaration_IncomingServer buildWithServerType:hostName:port:authenticationMethod:authenticationCredentialsAssetReference:imapPathPrefix:]
  +[RMModelAccountMailDeclaration_IncomingServer buildRequiredOnlyWithServerType:hostName:authenticationMethod:]

  // instance methods
  -[RMModelAccountMailDeclaration_IncomingServer copyWithZone:]
  -[RMModelAccountMailDeclaration_IncomingServer .cxx_destruct]
  -[RMModelAccountMailDeclaration_IncomingServer setPayloadHostName:]
  -[RMModelAccountMailDeclaration_IncomingServer payloadHostName]
  -[RMModelAccountMailDeclaration_IncomingServer setPayloadPort:]
  -[RMModelAccountMailDeclaration_IncomingServer payloadPort]
  -[RMModelAccountMailDeclaration_IncomingServer setPayloadAuthenticationMethod:]
  -[RMModelAccountMailDeclaration_IncomingServer payloadAuthenticationMethod]
  -[RMModelAccountMailDeclaration_IncomingServer payloadAuthenticationCredentialsAssetReference]
  -[RMModelAccountMailDeclaration_IncomingServer setPayloadAuthenticationCredentialsAssetReference:]
  -[RMModelAccountMailDeclaration_IncomingServer serializeWithType:]
  -[RMModelAccountMailDeclaration_IncomingServer loadFromDictionary:serializationType:error:]
  -[RMModelAccountMailDeclaration_IncomingServer setPayloadServerType:]
  -[RMModelAccountMailDeclaration_IncomingServer setPayloadIMAPPathPrefix:]
  -[RMModelAccountMailDeclaration_IncomingServer payloadServerType]
  -[RMModelAccountMailDeclaration_IncomingServer payloadIMAPPathPrefix]


RMModelAccountMailDeclaration_OutgoingServer : RMModelPayloadBase
 @property  NSString *payloadHostName
 @property  NSNumber *payloadPort
 @property  NSString *payloadAuthenticationMethod
 @property  NSString *payloadAuthenticationCredentialsAssetReference

  // class methods
  +[RMModelAccountMailDeclaration_OutgoingServer allowedPayloadKeys]
  +[RMModelAccountMailDeclaration_OutgoingServer buildWithHostName:port:authenticationMethod:authenticationCredentialsAssetReference:]
  +[RMModelAccountMailDeclaration_OutgoingServer buildRequiredOnlyWithHostName:authenticationMethod:]

  // instance methods
  -[RMModelAccountMailDeclaration_OutgoingServer copyWithZone:]
  -[RMModelAccountMailDeclaration_OutgoingServer .cxx_destruct]
  -[RMModelAccountMailDeclaration_OutgoingServer setPayloadHostName:]
  -[RMModelAccountMailDeclaration_OutgoingServer payloadHostName]
  -[RMModelAccountMailDeclaration_OutgoingServer setPayloadPort:]
  -[RMModelAccountMailDeclaration_OutgoingServer payloadPort]
  -[RMModelAccountMailDeclaration_OutgoingServer setPayloadAuthenticationMethod:]
  -[RMModelAccountMailDeclaration_OutgoingServer payloadAuthenticationMethod]
  -[RMModelAccountMailDeclaration_OutgoingServer payloadAuthenticationCredentialsAssetReference]
  -[RMModelAccountMailDeclaration_OutgoingServer setPayloadAuthenticationCredentialsAssetReference:]
  -[RMModelAccountMailDeclaration_OutgoingServer serializeWithType:]
  -[RMModelAccountMailDeclaration_OutgoingServer loadFromDictionary:serializationType:error:]


RMModelAccountSubscribedCalendarDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadVisibleName
 @property  NSString *payloadCalendarURL
 @property  NSString *payloadAuthenticationCredentialsAssetReference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelAccountSubscribedCalendarDeclaration allowedPayloadKeys]
  +[RMModelAccountSubscribedCalendarDeclaration registeredClassName]
  +[RMModelAccountSubscribedCalendarDeclaration registeredIdentifier]
  +[RMModelAccountSubscribedCalendarDeclaration buildWithIdentifier:visibleName:calendarURL:authenticationCredentialsAssetReference:]
  +[RMModelAccountSubscribedCalendarDeclaration buildRequiredOnlyWithIdentifier:calendarURL:]

  // instance methods
  -[RMModelAccountSubscribedCalendarDeclaration copyWithZone:]
  -[RMModelAccountSubscribedCalendarDeclaration .cxx_destruct]
  -[RMModelAccountSubscribedCalendarDeclaration assetReferences]
  -[RMModelAccountSubscribedCalendarDeclaration payloadAuthenticationCredentialsAssetReference]
  -[RMModelAccountSubscribedCalendarDeclaration setPayloadVisibleName:]
  -[RMModelAccountSubscribedCalendarDeclaration setPayloadAuthenticationCredentialsAssetReference:]
  -[RMModelAccountSubscribedCalendarDeclaration payloadVisibleName]
  -[RMModelAccountSubscribedCalendarDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelAccountSubscribedCalendarDeclaration serializePayloadWithType:]
  -[RMModelAccountSubscribedCalendarDeclaration setPayloadCalendarURL:]
  -[RMModelAccountSubscribedCalendarDeclaration payloadCalendarURL]


RMModelActivationBase : RMModelDeclarationBase
  // class methods
  +[RMModelActivationBase declarationClassType]


RMModelActivationSimpleDeclaration : RMModelActivationBase <RMModelRegisteredTypeProtocol>
 @property  NSArray *payloadStandardConfigurations
 @property  NSString *payloadPredicate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelActivationSimpleDeclaration allowedPayloadKeys]
  +[RMModelActivationSimpleDeclaration registeredClassName]
  +[RMModelActivationSimpleDeclaration registeredIdentifier]
  +[RMModelActivationSimpleDeclaration buildWithIdentifier:standardConfigurations:predicate:]
  +[RMModelActivationSimpleDeclaration buildRequiredOnlyWithIdentifier:standardConfigurations:]

  // instance methods
  -[RMModelActivationSimpleDeclaration copyWithZone:]
  -[RMModelActivationSimpleDeclaration .cxx_destruct]
  -[RMModelActivationSimpleDeclaration setPayloadStandardConfigurations:]
  -[RMModelActivationSimpleDeclaration payloadStandardConfigurations]
  -[RMModelActivationSimpleDeclaration setPayloadPredicate:]
  -[RMModelActivationSimpleDeclaration payloadPredicate]
  -[RMModelActivationSimpleDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelActivationSimpleDeclaration serializePayloadWithType:]


RMModelAppDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadBundleIdentifier
 @property  RMModelAppDeclaration_Installation *payloadInstallation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelAppDeclaration allowedPayloadKeys]
  +[RMModelAppDeclaration registeredClassName]
  +[RMModelAppDeclaration registeredIdentifier]
  +[RMModelAppDeclaration buildWithIdentifier:bundleIdentifier:installation:]
  +[RMModelAppDeclaration buildRequiredOnlyWithIdentifier:bundleIdentifier:]

  // instance methods
  -[RMModelAppDeclaration copyWithZone:]
  -[RMModelAppDeclaration .cxx_destruct]
  -[RMModelAppDeclaration assetReferences]
  -[RMModelAppDeclaration setPayloadBundleIdentifier:]
  -[RMModelAppDeclaration payloadBundleIdentifier]
  -[RMModelAppDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelAppDeclaration serializePayloadWithType:]
  -[RMModelAppDeclaration payloadInstallation]
  -[RMModelAppDeclaration setPayloadInstallation:]


RMModelAppDeclaration_Installation : RMModelPayloadBase
 @property  NSString *payloadMethod
 @property  NSString *payloadVPPOnDemandLicenseAssetReference

  // class methods
  +[RMModelAppDeclaration_Installation allowedPayloadKeys]
  +[RMModelAppDeclaration_Installation buildWithMethod:vppOnDemandLicenseAssetReference:]
  +[RMModelAppDeclaration_Installation buildRequiredOnlyWithMethod:]

  // instance methods
  -[RMModelAppDeclaration_Installation copyWithZone:]
  -[RMModelAppDeclaration_Installation .cxx_destruct]
  -[RMModelAppDeclaration_Installation serializeWithType:]
  -[RMModelAppDeclaration_Installation loadFromDictionary:serializationType:error:]
  -[RMModelAppDeclaration_Installation payloadVPPOnDemandLicenseAssetReference]
  -[RMModelAppDeclaration_Installation setPayloadMethod:]
  -[RMModelAppDeclaration_Installation setPayloadVPPOnDemandLicenseAssetReference:]
  -[RMModelAppDeclaration_Installation payloadMethod]


RMModelAssetBase : RMModelDeclarationBase
  // class methods
  +[RMModelAssetBase declarationClassType]


RMModelAssetBaseReference : RMModelPayloadBase
 @property  NSString *payloadDataURL
 @property  NSString *payloadContentType
 @property  NSNumber *payloadSize
 @property  NSString *payloadHashSHA256
 @property  NSArray *payloadCertificatePinningIdentifiers

  // class methods
  +[RMModelAssetBaseReference allowedPayloadKeys]
  +[RMModelAssetBaseReference buildWithDataURL:contentType:size:hashSHA256:certificatePinningIdentifiers:]
  +[RMModelAssetBaseReference buildRequiredOnlyWithDataURL:contentType:size:hashSHA256:]

  // instance methods
  -[RMModelAssetBaseReference copyWithZone:]
  -[RMModelAssetBaseReference .cxx_destruct]
  -[RMModelAssetBaseReference payloadSize]
  -[RMModelAssetBaseReference setPayloadDataURL:]
  -[RMModelAssetBaseReference setPayloadContentType:]
  -[RMModelAssetBaseReference setPayloadSize:]
  -[RMModelAssetBaseReference setPayloadHashSHA256:]
  -[RMModelAssetBaseReference setPayloadCertificatePinningIdentifiers:]
  -[RMModelAssetBaseReference payloadDataURL]
  -[RMModelAssetBaseReference payloadContentType]
  -[RMModelAssetBaseReference payloadHashSHA256]
  -[RMModelAssetBaseReference payloadCertificatePinningIdentifiers]
  -[RMModelAssetBaseReference serializeWithType:]
  -[RMModelAssetBaseReference loadFromDictionary:serializationType:error:]


RMModelAssetReference : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *identifier
 @property  NSArray *assetTypes

  // instance methods
  -[RMModelAssetReference .cxx_destruct]
  -[RMModelAssetReference identifier]
  -[RMModelAssetReference assetTypes]
  -[RMModelAssetReference initWithIdentifier:assetTypes:]


RMModelCertificateIdentityCredentialsDeclaration : RMModelPayloadBase
 @property  NSData *payloadCertificate

  // class methods
  +[RMModelCertificateIdentityCredentialsDeclaration allowedPayloadKeys]
  +[RMModelCertificateIdentityCredentialsDeclaration buildWithCertificate:]
  +[RMModelCertificateIdentityCredentialsDeclaration buildRequiredOnlyWithCertificate:]

  // instance methods
  -[RMModelCertificateIdentityCredentialsDeclaration copyWithZone:]
  -[RMModelCertificateIdentityCredentialsDeclaration .cxx_destruct]
  -[RMModelCertificateIdentityCredentialsDeclaration setPayloadCertificate:]
  -[RMModelCertificateIdentityCredentialsDeclaration payloadCertificate]
  -[RMModelCertificateIdentityCredentialsDeclaration serializeWithType:]
  -[RMModelCertificateIdentityCredentialsDeclaration loadFromDictionary:serializationType:error:]


RMModelCommandBase : RMModelPayloadBase
 @property  NSString *commandType
 @property  NSString *commandIdentifier
 @property  RMModelAnyPayload *commandPayload

  // class methods
  +[RMModelCommandBase load:serializationType:error:]

  // instance methods
  -[RMModelCommandBase copyWithZone:]
  -[RMModelCommandBase .cxx_destruct]
  -[RMModelCommandBase commandType]
  -[RMModelCommandBase setCommandType:]
  -[RMModelCommandBase setCommandIdentifier:]
  -[RMModelCommandBase commandIdentifier]
  -[RMModelCommandBase mustBeSupervised]
  -[RMModelCommandBase executionLevel]
  -[RMModelCommandBase commandPayload]
  -[RMModelCommandBase setCommandPayload:]
  -[RMModelCommandBase loadPayloadFromDictionary:serializationType:error:]
  -[RMModelCommandBase serializePayloadWithType:]
  -[RMModelCommandBase serializeWithType:]
  -[RMModelCommandBase loadFromDictionary:serializationType:error:]


RMModelConfigurationBase : RMModelDeclarationBase
  // class methods
  +[RMModelConfigurationBase declarationClassType]

  // instance methods
  -[RMModelConfigurationBase assetReferences]


RMModelCredentialUserNameAndPasswordDeclaration : RMModelAssetBase <RMModelRegisteredTypeProtocol>
 @property  RMModelAssetBaseReference *payloadReference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelCredentialUserNameAndPasswordDeclaration allowedPayloadKeys]
  +[RMModelCredentialUserNameAndPasswordDeclaration registeredClassName]
  +[RMModelCredentialUserNameAndPasswordDeclaration registeredIdentifier]
  +[RMModelCredentialUserNameAndPasswordDeclaration buildWithIdentifier:reference:]
  +[RMModelCredentialUserNameAndPasswordDeclaration buildRequiredOnlyWithIdentifier:reference:]

  // instance methods
  -[RMModelCredentialUserNameAndPasswordDeclaration copyWithZone:]
  -[RMModelCredentialUserNameAndPasswordDeclaration .cxx_destruct]
  -[RMModelCredentialUserNameAndPasswordDeclaration setPayloadReference:]
  -[RMModelCredentialUserNameAndPasswordDeclaration payloadReference]
  -[RMModelCredentialUserNameAndPasswordDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelCredentialUserNameAndPasswordDeclaration serializePayloadWithType:]


RMModelDeclarationBase : RMModelPayloadBase
 @property  NSString *declarationType
 @property  NSString *declarationIdentifier
 @property  NSString *declarationServerToken
 @property  RMModelAnyPayload *declarationPayload

  // class methods
  +[RMModelDeclarationBase declarationClassType]
  +[RMModelDeclarationBase load:serializationType:error:]

  // instance methods
  -[RMModelDeclarationBase copyWithZone:]
  -[RMModelDeclarationBase .cxx_destruct]
  -[RMModelDeclarationBase declarationIdentifier]
  -[RMModelDeclarationBase declarationType]
  -[RMModelDeclarationBase setDeclarationType:]
  -[RMModelDeclarationBase setDeclarationIdentifier:]
  -[RMModelDeclarationBase declarationPayload]
  -[RMModelDeclarationBase setDeclarationPayload:]
  -[RMModelDeclarationBase updateServerToken]
  -[RMModelDeclarationBase loadPayloadFromDictionary:serializationType:error:]
  -[RMModelDeclarationBase serializePayloadWithType:]
  -[RMModelDeclarationBase serializeWithType:]
  -[RMModelDeclarationBase loadFromDictionary:serializationType:error:]
  -[RMModelDeclarationBase declarationServerToken]
  -[RMModelDeclarationBase setDeclarationServerToken:]


RMModelImageDeclaration : RMModelAssetBase <RMModelRegisteredTypeProtocol>
 @property  RMModelAssetBaseReference *payloadReference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelImageDeclaration allowedPayloadKeys]
  +[RMModelImageDeclaration registeredClassName]
  +[RMModelImageDeclaration registeredIdentifier]
  +[RMModelImageDeclaration buildWithIdentifier:reference:]
  +[RMModelImageDeclaration buildRequiredOnlyWithIdentifier:reference:]

  // instance methods
  -[RMModelImageDeclaration copyWithZone:]
  -[RMModelImageDeclaration .cxx_destruct]
  -[RMModelImageDeclaration setPayloadReference:]
  -[RMModelImageDeclaration payloadReference]
  -[RMModelImageDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelImageDeclaration serializePayloadWithType:]


RMModelLegacyInteractiveProfileDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadProfileURL
 @property  NSString *payloadVisibleName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelLegacyInteractiveProfileDeclaration allowedPayloadKeys]
  +[RMModelLegacyInteractiveProfileDeclaration registeredClassName]
  +[RMModelLegacyInteractiveProfileDeclaration registeredIdentifier]
  +[RMModelLegacyInteractiveProfileDeclaration buildWithIdentifier:profileURL:visibleName:]
  +[RMModelLegacyInteractiveProfileDeclaration buildRequiredOnlyWithIdentifier:profileURL:visibleName:]

  // instance methods
  -[RMModelLegacyInteractiveProfileDeclaration copyWithZone:]
  -[RMModelLegacyInteractiveProfileDeclaration .cxx_destruct]
  -[RMModelLegacyInteractiveProfileDeclaration assetReferences]
  -[RMModelLegacyInteractiveProfileDeclaration setPayloadVisibleName:]
  -[RMModelLegacyInteractiveProfileDeclaration payloadVisibleName]
  -[RMModelLegacyInteractiveProfileDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelLegacyInteractiveProfileDeclaration serializePayloadWithType:]
  -[RMModelLegacyInteractiveProfileDeclaration setPayloadProfileURL:]
  -[RMModelLegacyInteractiveProfileDeclaration payloadProfileURL]


RMModelLegacyProfileDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadProfileURL
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelLegacyProfileDeclaration allowedPayloadKeys]
  +[RMModelLegacyProfileDeclaration registeredClassName]
  +[RMModelLegacyProfileDeclaration registeredIdentifier]
  +[RMModelLegacyProfileDeclaration buildWithIdentifier:profileURL:]
  +[RMModelLegacyProfileDeclaration buildRequiredOnlyWithIdentifier:profileURL:]

  // instance methods
  -[RMModelLegacyProfileDeclaration copyWithZone:]
  -[RMModelLegacyProfileDeclaration .cxx_destruct]
  -[RMModelLegacyProfileDeclaration assetReferences]
  -[RMModelLegacyProfileDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelLegacyProfileDeclaration serializePayloadWithType:]
  -[RMModelLegacyProfileDeclaration setPayloadProfileURL:]
  -[RMModelLegacyProfileDeclaration payloadProfileURL]


RMModelManagementStatusSubscriptionsDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSArray *payloadStatusItems
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelManagementStatusSubscriptionsDeclaration allowedPayloadKeys]
  +[RMModelManagementStatusSubscriptionsDeclaration registeredClassName]
  +[RMModelManagementStatusSubscriptionsDeclaration registeredIdentifier]
  +[RMModelManagementStatusSubscriptionsDeclaration buildWithIdentifier:statusItems:]
  +[RMModelManagementStatusSubscriptionsDeclaration buildRequiredOnlyWithIdentifier:statusItems:]

  // instance methods
  -[RMModelManagementStatusSubscriptionsDeclaration copyWithZone:]
  -[RMModelManagementStatusSubscriptionsDeclaration .cxx_destruct]
  -[RMModelManagementStatusSubscriptionsDeclaration assetReferences]
  -[RMModelManagementStatusSubscriptionsDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelManagementStatusSubscriptionsDeclaration serializePayloadWithType:]
  -[RMModelManagementStatusSubscriptionsDeclaration setPayloadStatusItems:]
  -[RMModelManagementStatusSubscriptionsDeclaration payloadStatusItems]


RMModelManagementStatusSubscriptionsDeclaration_StatusItem : RMModelPayloadBase
 @property  NSString *payloadName
 @property  NSArray *payloadProperties
 @property  NSString *payloadPredicate

  // class methods
  +[RMModelManagementStatusSubscriptionsDeclaration_StatusItem allowedPayloadKeys]
  +[RMModelManagementStatusSubscriptionsDeclaration_StatusItem buildRequiredOnlyWithName:]
  +[RMModelManagementStatusSubscriptionsDeclaration_StatusItem buildWithName:properties:predicate:]

  // instance methods
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem copyWithZone:]
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem .cxx_destruct]
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem setPayloadPredicate:]
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem payloadPredicate]
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem setPayloadName:]
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem payloadName]
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem serializeWithType:]
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem loadFromDictionary:serializationType:error:]
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem setPayloadProperties:]
  -[RMModelManagementStatusSubscriptionsDeclaration_StatusItem payloadProperties]


RMModelManagementTestDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadEcho
 @property  NSString *payloadReturnStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelManagementTestDeclaration allowedPayloadKeys]
  +[RMModelManagementTestDeclaration registeredClassName]
  +[RMModelManagementTestDeclaration registeredIdentifier]
  +[RMModelManagementTestDeclaration buildWithIdentifier:echo:returnStatus:]
  +[RMModelManagementTestDeclaration buildRequiredOnlyWithIdentifier:echo:]

  // instance methods
  -[RMModelManagementTestDeclaration copyWithZone:]
  -[RMModelManagementTestDeclaration .cxx_destruct]
  -[RMModelManagementTestDeclaration assetReferences]
  -[RMModelManagementTestDeclaration setPayloadEcho:]
  -[RMModelManagementTestDeclaration setPayloadReturnStatus:]
  -[RMModelManagementTestDeclaration payloadEcho]
  -[RMModelManagementTestDeclaration payloadReturnStatus]
  -[RMModelManagementTestDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelManagementTestDeclaration serializePayloadWithType:]


RMModelManagementTestCommandCommand : RMModelCommandBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadEcho
 @property  NSString *payloadReturnStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelManagementTestCommandCommand allowedPayloadKeys]
  +[RMModelManagementTestCommandCommand registeredClassName]
  +[RMModelManagementTestCommandCommand registeredIdentifier]
  +[RMModelManagementTestCommandCommand buildWithIdentifier:echo:returnStatus:]
  +[RMModelManagementTestCommandCommand buildRequiredOnlyWithIdentifier:echo:]

  // instance methods
  -[RMModelManagementTestCommandCommand copyWithZone:]
  -[RMModelManagementTestCommandCommand .cxx_destruct]
  -[RMModelManagementTestCommandCommand setPayloadEcho:]
  -[RMModelManagementTestCommandCommand setPayloadReturnStatus:]
  -[RMModelManagementTestCommandCommand payloadEcho]
  -[RMModelManagementTestCommandCommand payloadReturnStatus]
  -[RMModelManagementTestCommandCommand loadPayloadFromDictionary:serializationType:error:]
  -[RMModelManagementTestCommandCommand serializePayloadWithType:]


RMModelManagementTestCommandCommand_Status : RMModelPayloadBase
 @property  NSString *statusEcho

  // class methods
  +[RMModelManagementTestCommandCommand_Status allowedStatusKeys]
  +[RMModelManagementTestCommandCommand_Status allowedReasons]
  +[RMModelManagementTestCommandCommand_Status buildWithEcho:]
  +[RMModelManagementTestCommandCommand_Status buildRequiredOnlyWithEcho:]

  // instance methods
  -[RMModelManagementTestCommandCommand_Status .cxx_destruct]
  -[RMModelManagementTestCommandCommand_Status setStatusEcho:]
  -[RMModelManagementTestCommandCommand_Status statusEcho]
  -[RMModelManagementTestCommandCommand_Status serializeWithType:]
  -[RMModelManagementTestCommandCommand_Status loadFromDictionary:serializationType:error:]


RMModelPasscodeClearCommandCommand : RMModelCommandBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadEscrowToken
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelPasscodeClearCommandCommand allowedPayloadKeys]
  +[RMModelPasscodeClearCommandCommand registeredClassName]
  +[RMModelPasscodeClearCommandCommand registeredIdentifier]
  +[RMModelPasscodeClearCommandCommand buildWithIdentifier:escrowToken:]
  +[RMModelPasscodeClearCommandCommand buildRequiredOnlyWithIdentifier:escrowToken:]

  // instance methods
  -[RMModelPasscodeClearCommandCommand copyWithZone:]
  -[RMModelPasscodeClearCommandCommand .cxx_destruct]
  -[RMModelPasscodeClearCommandCommand loadPayloadFromDictionary:serializationType:error:]
  -[RMModelPasscodeClearCommandCommand serializePayloadWithType:]
  -[RMModelPasscodeClearCommandCommand setPayloadEscrowToken:]
  -[RMModelPasscodeClearCommandCommand payloadEscrowToken]


RMModelPasscodeClearCommandCommand_Status : RMModelPayloadBase
  // class methods
  +[RMModelPasscodeClearCommandCommand_Status build]
  +[RMModelPasscodeClearCommandCommand_Status allowedStatusKeys]
  +[RMModelPasscodeClearCommandCommand_Status allowedReasons]
  +[RMModelPasscodeClearCommandCommand_Status buildRequiredOnly]

  // instance methods
  -[RMModelPasscodeClearCommandCommand_Status serializeWithType:]
  -[RMModelPasscodeClearCommandCommand_Status loadFromDictionary:serializationType:error:]


RMModelPasscodeSettingsDeclaration : RMModelConfigurationBase <RMModelRegisteredTypeProtocol>
 @property  NSNumber *payloadRequirePasscode
 @property  NSNumber *payloadRequireComplexPasscode
 @property  NSNumber *payloadMinimumLength
 @property  NSNumber *payloadMaximumFailedAttempts
 @property  NSNumber *payloadMaximumGracePeriodInMinutes
 @property  NSNumber *payloadMaximumInactivityInMinutes
 @property  NSNumber *payloadPasscodeReuseLimit
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelPasscodeSettingsDeclaration buildRequiredOnlyWithIdentifier:]
  +[RMModelPasscodeSettingsDeclaration allowedPayloadKeys]
  +[RMModelPasscodeSettingsDeclaration registeredClassName]
  +[RMModelPasscodeSettingsDeclaration registeredIdentifier]
  +[RMModelPasscodeSettingsDeclaration buildWithIdentifier:requirePasscode:requireComplexPasscode:minimumLength:maximumFailedAttempts:maximumGracePeriodInMinutes:maximumInactivityInMinutes:passcodeReuseLimit:]

  // instance methods
  -[RMModelPasscodeSettingsDeclaration copyWithZone:]
  -[RMModelPasscodeSettingsDeclaration .cxx_destruct]
  -[RMModelPasscodeSettingsDeclaration assetReferences]
  -[RMModelPasscodeSettingsDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelPasscodeSettingsDeclaration serializePayloadWithType:]
  -[RMModelPasscodeSettingsDeclaration setPayloadRequirePasscode:]
  -[RMModelPasscodeSettingsDeclaration setPayloadRequireComplexPasscode:]
  -[RMModelPasscodeSettingsDeclaration setPayloadMinimumLength:]
  -[RMModelPasscodeSettingsDeclaration setPayloadMaximumFailedAttempts:]
  -[RMModelPasscodeSettingsDeclaration setPayloadMaximumGracePeriodInMinutes:]
  -[RMModelPasscodeSettingsDeclaration setPayloadMaximumInactivityInMinutes:]
  -[RMModelPasscodeSettingsDeclaration setPayloadPasscodeReuseLimit:]
  -[RMModelPasscodeSettingsDeclaration payloadRequirePasscode]
  -[RMModelPasscodeSettingsDeclaration payloadRequireComplexPasscode]
  -[RMModelPasscodeSettingsDeclaration payloadMinimumLength]
  -[RMModelPasscodeSettingsDeclaration payloadMaximumFailedAttempts]
  -[RMModelPasscodeSettingsDeclaration payloadMaximumGracePeriodInMinutes]
  -[RMModelPasscodeSettingsDeclaration payloadMaximumInactivityInMinutes]
  -[RMModelPasscodeSettingsDeclaration payloadPasscodeReuseLimit]


RMModelPayloadBase : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSSet *unknownPayloadKeys

  // class methods
  +[RMModelPayloadBase supportsSecureCoding]
  +[RMModelPayloadBase load:serializationType:error:]
  +[RMModelPayloadBase loadData:serializationType:error:]

  // instance methods
  -[RMModelPayloadBase copyWithZone:]
  -[RMModelPayloadBase .cxx_destruct]
  -[RMModelPayloadBase encodeWithCoder:]
  -[RMModelPayloadBase initWithCoder:]
  -[RMModelPayloadBase unknownPayloadKeys]
  -[RMModelPayloadBase setUnknownPayloadKeys:]
  -[RMModelPayloadBase loadStringFromDictionary:usingKey:forKeyPath:isRequired:defaultValue:error:]
  -[RMModelPayloadBase loadIntegerFromDictionary:usingKey:forKeyPath:isRequired:defaultValue:error:]
  -[RMModelPayloadBase serializeStringIntoDictionary:usingKey:value:isRequired:defaultValue:]
  -[RMModelPayloadBase serializeIntegerIntoDictionary:usingKey:value:isRequired:defaultValue:]
  -[RMModelPayloadBase loadArrayFromDictionary:usingKey:forKeyPath:validator:isRequired:defaultValue:error:]
  -[RMModelPayloadBase loadDictionaryFromDictionary:usingKey:forKeyPath:classType:isRequired:defaultValue:serializationType:error:]
  -[RMModelPayloadBase loadBooleanFromDictionary:usingKey:forKeyPath:isRequired:defaultValue:error:]
  -[RMModelPayloadBase serializeArrayIntoDictionary:usingKey:value:itemSerializer:isRequired:defaultValue:]
  -[RMModelPayloadBase serializeWithType:]
  -[RMModelPayloadBase serializeDictionaryIntoDictionary:usingKey:value:dictSerializer:isRequired:defaultValue:]
  -[RMModelPayloadBase serializeBooleanIntoDictionary:usingKey:value:isRequired:defaultValue:]
  -[RMModelPayloadBase loadFromDictionary:serializationType:error:]
  -[RMModelPayloadBase loadArrayFromDictionary:usingKey:forKeyPath:classType:nested:isRequired:defaultValue:serializationType:error:]
  -[RMModelPayloadBase loadDataFromDictionary:usingKey:forKeyPath:isRequired:defaultValue:serializationType:error:]
  -[RMModelPayloadBase serializeDataIntoDictionary:usingKey:value:isRequired:defaultValue:serializationType:]
  -[RMModelPayloadBase mergeUnknownKeysFrom:parentKey:]
  -[RMModelPayloadBase _loadObjectOfClass:fromDictionary:usingKey:isRequired:defaultValue:payloadValue:error:]
  -[RMModelPayloadBase createNestedObjectWithClass:serializationType:parentKey:payload:error:]
  -[RMModelPayloadBase getModelObjectFromDictionary:usingKey:classType:isRequired:defaultValue:serializationType:payloadValue:error:]
  -[RMModelPayloadBase _serializeItemIntoDictionary:usingKey:value:isRequired:isDefaultValue:]
  -[RMModelPayloadBase serializeAsDataWithType:error:]
  -[RMModelPayloadBase loadFloatFromDictionary:usingKey:forKeyPath:isRequired:defaultValue:error:]
  -[RMModelPayloadBase loadDateFromDictionary:usingKey:forKeyPath:isRequired:defaultValue:serializationType:error:]
  -[RMModelPayloadBase serializeFloatIntoDictionary:usingKey:value:isRequired:defaultValue:]
  -[RMModelPayloadBase serializeDateIntoDictionary:usingKey:value:isRequired:defaultValue:serializationType:]


RMModelAnyPayload : RMModelPayloadBase
 @property  NSDictionary *dictKeys

  // class methods
  +[RMModelAnyPayload buildFromDictionary:]

  // instance methods
  -[RMModelAnyPayload copyWithZone:]
  -[RMModelAnyPayload .cxx_destruct]
  -[RMModelAnyPayload serializeWithType:]
  -[RMModelAnyPayload loadFromDictionary:serializationType:error:]
  -[RMModelAnyPayload dictKeys]
  -[RMModelAnyPayload setDictKeys:]


RMModelRegisteredTypeResolver : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[RMModelRegisteredTypeResolver registeredClassWithName:identifier:]


RMModelSecretCredentialsDeclaration : RMModelPayloadBase
 @property  NSString *payloadSecret

  // class methods
  +[RMModelSecretCredentialsDeclaration allowedPayloadKeys]
  +[RMModelSecretCredentialsDeclaration buildWithSecret:]
  +[RMModelSecretCredentialsDeclaration buildRequiredOnlyWithSecret:]

  // instance methods
  -[RMModelSecretCredentialsDeclaration copyWithZone:]
  -[RMModelSecretCredentialsDeclaration .cxx_destruct]
  -[RMModelSecretCredentialsDeclaration setPayloadSecret:]
  -[RMModelSecretCredentialsDeclaration payloadSecret]
  -[RMModelSecretCredentialsDeclaration serializeWithType:]
  -[RMModelSecretCredentialsDeclaration loadFromDictionary:serializationType:error:]


RMModelStatusAccountCalDAV : RMModelStatusBase
 @property  NSString *statusIdentifier
 @property  NSString *statusVisibleName
 @property  NSString *statusHostname
 @property  NSNumber *statusPort
 @property  NSString *statusUsername
 @property  NSNumber *statusAuthenticated
 @property  NSNumber *statusAreCalendarsEnabled
 @property  NSNumber *statusAreRemindersEnabled

  // class methods
  +[RMModelStatusAccountCalDAV buildRequiredOnlyWithIdentifier:]
  +[RMModelStatusAccountCalDAV allowedStatusKeys]
  +[RMModelStatusAccountCalDAV buildWithIdentifier:visibleName:hostname:port:username:authenticated:areCalendarsEnabled:areRemindersEnabled:]

  // instance methods
  -[RMModelStatusAccountCalDAV copyWithZone:]
  -[RMModelStatusAccountCalDAV .cxx_destruct]
  -[RMModelStatusAccountCalDAV setStatusIdentifier:]
  -[RMModelStatusAccountCalDAV statusIdentifier]
  -[RMModelStatusAccountCalDAV loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusAccountCalDAV serializePayloadWithType:]
  -[RMModelStatusAccountCalDAV setStatusVisibleName:]
  -[RMModelStatusAccountCalDAV setStatusHostname:]
  -[RMModelStatusAccountCalDAV setStatusPort:]
  -[RMModelStatusAccountCalDAV setStatusUsername:]
  -[RMModelStatusAccountCalDAV setStatusAuthenticated:]
  -[RMModelStatusAccountCalDAV setStatusAreCalendarsEnabled:]
  -[RMModelStatusAccountCalDAV setStatusAreRemindersEnabled:]
  -[RMModelStatusAccountCalDAV statusVisibleName]
  -[RMModelStatusAccountCalDAV statusHostname]
  -[RMModelStatusAccountCalDAV statusPort]
  -[RMModelStatusAccountCalDAV statusUsername]
  -[RMModelStatusAccountCalDAV statusAuthenticated]
  -[RMModelStatusAccountCalDAV statusAreCalendarsEnabled]
  -[RMModelStatusAccountCalDAV statusAreRemindersEnabled]


RMModelStatusAccountCardDAV : RMModelStatusBase
 @property  NSString *statusIdentifier
 @property  NSString *statusVisibleName
 @property  NSString *statusHostname
 @property  NSNumber *statusPort
 @property  NSString *statusUsername
 @property  NSNumber *statusAuthenticated

  // class methods
  +[RMModelStatusAccountCardDAV buildRequiredOnlyWithIdentifier:]
  +[RMModelStatusAccountCardDAV allowedStatusKeys]
  +[RMModelStatusAccountCardDAV buildWithIdentifier:visibleName:hostname:port:username:authenticated:]

  // instance methods
  -[RMModelStatusAccountCardDAV copyWithZone:]
  -[RMModelStatusAccountCardDAV .cxx_destruct]
  -[RMModelStatusAccountCardDAV setStatusIdentifier:]
  -[RMModelStatusAccountCardDAV statusIdentifier]
  -[RMModelStatusAccountCardDAV loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusAccountCardDAV serializePayloadWithType:]
  -[RMModelStatusAccountCardDAV setStatusVisibleName:]
  -[RMModelStatusAccountCardDAV setStatusHostname:]
  -[RMModelStatusAccountCardDAV setStatusPort:]
  -[RMModelStatusAccountCardDAV setStatusUsername:]
  -[RMModelStatusAccountCardDAV setStatusAuthenticated:]
  -[RMModelStatusAccountCardDAV statusVisibleName]
  -[RMModelStatusAccountCardDAV statusHostname]
  -[RMModelStatusAccountCardDAV statusPort]
  -[RMModelStatusAccountCardDAV statusUsername]
  -[RMModelStatusAccountCardDAV statusAuthenticated]


RMModelStatusAccountExchange : RMModelStatusBase
 @property  NSString *statusIdentifier
 @property  NSString *statusVisibleName
 @property  NSString *statusHostname
 @property  NSNumber *statusPort
 @property  NSString *statusUsername
 @property  NSNumber *statusAuthenticated
 @property  NSNumber *statusIsMailEnabled
 @property  NSNumber *statusAreCalendarsEnabled
 @property  NSNumber *statusAreContactsEnabled
 @property  NSNumber *statusAreNotesEnabled
 @property  NSNumber *statusAreRemindersEnabled

  // class methods
  +[RMModelStatusAccountExchange buildRequiredOnlyWithIdentifier:]
  +[RMModelStatusAccountExchange allowedStatusKeys]
  +[RMModelStatusAccountExchange buildWithIdentifier:visibleName:hostname:port:username:authenticated:isMailEnabled:areCalendarsEnabled:areContactsEnabled:areNotesEnabled:areRemindersEnabled:]

  // instance methods
  -[RMModelStatusAccountExchange copyWithZone:]
  -[RMModelStatusAccountExchange .cxx_destruct]
  -[RMModelStatusAccountExchange setStatusIdentifier:]
  -[RMModelStatusAccountExchange statusIdentifier]
  -[RMModelStatusAccountExchange loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusAccountExchange serializePayloadWithType:]
  -[RMModelStatusAccountExchange setStatusVisibleName:]
  -[RMModelStatusAccountExchange setStatusHostname:]
  -[RMModelStatusAccountExchange setStatusPort:]
  -[RMModelStatusAccountExchange setStatusUsername:]
  -[RMModelStatusAccountExchange setStatusAuthenticated:]
  -[RMModelStatusAccountExchange setStatusAreCalendarsEnabled:]
  -[RMModelStatusAccountExchange setStatusAreRemindersEnabled:]
  -[RMModelStatusAccountExchange statusVisibleName]
  -[RMModelStatusAccountExchange statusHostname]
  -[RMModelStatusAccountExchange statusPort]
  -[RMModelStatusAccountExchange statusUsername]
  -[RMModelStatusAccountExchange statusAuthenticated]
  -[RMModelStatusAccountExchange statusAreCalendarsEnabled]
  -[RMModelStatusAccountExchange statusAreRemindersEnabled]
  -[RMModelStatusAccountExchange setStatusIsMailEnabled:]
  -[RMModelStatusAccountExchange setStatusAreContactsEnabled:]
  -[RMModelStatusAccountExchange setStatusAreNotesEnabled:]
  -[RMModelStatusAccountExchange statusIsMailEnabled]
  -[RMModelStatusAccountExchange statusAreContactsEnabled]
  -[RMModelStatusAccountExchange statusAreNotesEnabled]


RMModelStatusAccountGoogle : RMModelStatusBase
 @property  NSString *statusIdentifier
 @property  NSString *statusVisibleName
 @property  NSString *statusUsername
 @property  NSNumber *statusAuthenticated
 @property  NSNumber *statusIsMailEnabled
 @property  NSNumber *statusAreCalendarsEnabled
 @property  NSNumber *statusAreContactsEnabled
 @property  NSNumber *statusAreNotesEnabled

  // class methods
  +[RMModelStatusAccountGoogle buildRequiredOnlyWithIdentifier:]
  +[RMModelStatusAccountGoogle allowedStatusKeys]
  +[RMModelStatusAccountGoogle buildWithIdentifier:visibleName:username:authenticated:isMailEnabled:areCalendarsEnabled:areContactsEnabled:areNotesEnabled:]

  // instance methods
  -[RMModelStatusAccountGoogle copyWithZone:]
  -[RMModelStatusAccountGoogle .cxx_destruct]
  -[RMModelStatusAccountGoogle setStatusIdentifier:]
  -[RMModelStatusAccountGoogle statusIdentifier]
  -[RMModelStatusAccountGoogle loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusAccountGoogle serializePayloadWithType:]
  -[RMModelStatusAccountGoogle setStatusVisibleName:]
  -[RMModelStatusAccountGoogle setStatusUsername:]
  -[RMModelStatusAccountGoogle setStatusAuthenticated:]
  -[RMModelStatusAccountGoogle setStatusAreCalendarsEnabled:]
  -[RMModelStatusAccountGoogle statusVisibleName]
  -[RMModelStatusAccountGoogle statusUsername]
  -[RMModelStatusAccountGoogle statusAuthenticated]
  -[RMModelStatusAccountGoogle statusAreCalendarsEnabled]
  -[RMModelStatusAccountGoogle setStatusIsMailEnabled:]
  -[RMModelStatusAccountGoogle setStatusAreContactsEnabled:]
  -[RMModelStatusAccountGoogle setStatusAreNotesEnabled:]
  -[RMModelStatusAccountGoogle statusIsMailEnabled]
  -[RMModelStatusAccountGoogle statusAreContactsEnabled]
  -[RMModelStatusAccountGoogle statusAreNotesEnabled]


RMModelStatusAccountIncomingMail : RMModelStatusBase
 @property  NSString *statusIdentifier
 @property  NSString *statusVisibleName
 @property  NSString *statusHostname
 @property  NSNumber *statusPort
 @property  NSString *statusUsername
 @property  NSNumber *statusAuthenticated
 @property  NSNumber *statusIsMailEnabled
 @property  NSNumber *statusAreNotesEnabled

  // class methods
  +[RMModelStatusAccountIncomingMail buildRequiredOnlyWithIdentifier:]
  +[RMModelStatusAccountIncomingMail allowedStatusKeys]
  +[RMModelStatusAccountIncomingMail buildWithIdentifier:visibleName:hostname:port:username:authenticated:isMailEnabled:areNotesEnabled:]

  // instance methods
  -[RMModelStatusAccountIncomingMail copyWithZone:]
  -[RMModelStatusAccountIncomingMail .cxx_destruct]
  -[RMModelStatusAccountIncomingMail setStatusIdentifier:]
  -[RMModelStatusAccountIncomingMail statusIdentifier]
  -[RMModelStatusAccountIncomingMail loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusAccountIncomingMail serializePayloadWithType:]
  -[RMModelStatusAccountIncomingMail setStatusVisibleName:]
  -[RMModelStatusAccountIncomingMail setStatusHostname:]
  -[RMModelStatusAccountIncomingMail setStatusPort:]
  -[RMModelStatusAccountIncomingMail setStatusUsername:]
  -[RMModelStatusAccountIncomingMail setStatusAuthenticated:]
  -[RMModelStatusAccountIncomingMail statusVisibleName]
  -[RMModelStatusAccountIncomingMail statusHostname]
  -[RMModelStatusAccountIncomingMail statusPort]
  -[RMModelStatusAccountIncomingMail statusUsername]
  -[RMModelStatusAccountIncomingMail statusAuthenticated]
  -[RMModelStatusAccountIncomingMail setStatusIsMailEnabled:]
  -[RMModelStatusAccountIncomingMail setStatusAreNotesEnabled:]
  -[RMModelStatusAccountIncomingMail statusIsMailEnabled]
  -[RMModelStatusAccountIncomingMail statusAreNotesEnabled]


RMModelStatusAccountLDAP : RMModelStatusBase
 @property  NSString *statusIdentifier
 @property  NSString *statusVisibleName
 @property  NSString *statusHostname
 @property  NSNumber *statusPort
 @property  NSString *statusUsername
 @property  NSNumber *statusAuthenticated
 @property  NSNumber *statusIsEnabled

  // class methods
  +[RMModelStatusAccountLDAP buildRequiredOnlyWithIdentifier:]
  +[RMModelStatusAccountLDAP allowedStatusKeys]
  +[RMModelStatusAccountLDAP buildWithIdentifier:visibleName:hostname:port:username:authenticated:isEnabled:]

  // instance methods
  -[RMModelStatusAccountLDAP copyWithZone:]
  -[RMModelStatusAccountLDAP .cxx_destruct]
  -[RMModelStatusAccountLDAP setStatusIdentifier:]
  -[RMModelStatusAccountLDAP statusIdentifier]
  -[RMModelStatusAccountLDAP loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusAccountLDAP serializePayloadWithType:]
  -[RMModelStatusAccountLDAP setStatusVisibleName:]
  -[RMModelStatusAccountLDAP setStatusHostname:]
  -[RMModelStatusAccountLDAP setStatusPort:]
  -[RMModelStatusAccountLDAP setStatusUsername:]
  -[RMModelStatusAccountLDAP setStatusAuthenticated:]
  -[RMModelStatusAccountLDAP statusVisibleName]
  -[RMModelStatusAccountLDAP statusHostname]
  -[RMModelStatusAccountLDAP statusPort]
  -[RMModelStatusAccountLDAP statusUsername]
  -[RMModelStatusAccountLDAP statusAuthenticated]
  -[RMModelStatusAccountLDAP setStatusIsEnabled:]
  -[RMModelStatusAccountLDAP statusIsEnabled]


RMModelStatusAccountOutgoingMail : RMModelStatusBase
 @property  NSString *statusIdentifier
 @property  NSString *statusVisibleName
 @property  NSString *statusHostname
 @property  NSNumber *statusPort
 @property  NSString *statusUsername
 @property  NSNumber *statusAuthenticated

  // class methods
  +[RMModelStatusAccountOutgoingMail buildRequiredOnlyWithIdentifier:]
  +[RMModelStatusAccountOutgoingMail allowedStatusKeys]
  +[RMModelStatusAccountOutgoingMail buildWithIdentifier:visibleName:hostname:port:username:authenticated:]

  // instance methods
  -[RMModelStatusAccountOutgoingMail copyWithZone:]
  -[RMModelStatusAccountOutgoingMail .cxx_destruct]
  -[RMModelStatusAccountOutgoingMail setStatusIdentifier:]
  -[RMModelStatusAccountOutgoingMail statusIdentifier]
  -[RMModelStatusAccountOutgoingMail loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusAccountOutgoingMail serializePayloadWithType:]
  -[RMModelStatusAccountOutgoingMail setStatusVisibleName:]
  -[RMModelStatusAccountOutgoingMail setStatusHostname:]
  -[RMModelStatusAccountOutgoingMail setStatusPort:]
  -[RMModelStatusAccountOutgoingMail setStatusUsername:]
  -[RMModelStatusAccountOutgoingMail setStatusAuthenticated:]
  -[RMModelStatusAccountOutgoingMail statusVisibleName]
  -[RMModelStatusAccountOutgoingMail statusHostname]
  -[RMModelStatusAccountOutgoingMail statusPort]
  -[RMModelStatusAccountOutgoingMail statusUsername]
  -[RMModelStatusAccountOutgoingMail statusAuthenticated]


RMModelStatusAccountSubscribedCalendar : RMModelStatusBase
 @property  NSString *statusIdentifier
 @property  NSString *statusVisibleName
 @property  NSString *statusCalendarUrl
 @property  NSString *statusUsername
 @property  NSNumber *statusAuthenticated
 @property  NSNumber *statusIsEnabled

  // class methods
  +[RMModelStatusAccountSubscribedCalendar buildRequiredOnlyWithIdentifier:]
  +[RMModelStatusAccountSubscribedCalendar allowedStatusKeys]
  +[RMModelStatusAccountSubscribedCalendar buildWithIdentifier:visibleName:calendarUrl:username:authenticated:isEnabled:]

  // instance methods
  -[RMModelStatusAccountSubscribedCalendar copyWithZone:]
  -[RMModelStatusAccountSubscribedCalendar .cxx_destruct]
  -[RMModelStatusAccountSubscribedCalendar setStatusIdentifier:]
  -[RMModelStatusAccountSubscribedCalendar statusIdentifier]
  -[RMModelStatusAccountSubscribedCalendar loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusAccountSubscribedCalendar serializePayloadWithType:]
  -[RMModelStatusAccountSubscribedCalendar setStatusVisibleName:]
  -[RMModelStatusAccountSubscribedCalendar setStatusUsername:]
  -[RMModelStatusAccountSubscribedCalendar setStatusAuthenticated:]
  -[RMModelStatusAccountSubscribedCalendar statusVisibleName]
  -[RMModelStatusAccountSubscribedCalendar statusUsername]
  -[RMModelStatusAccountSubscribedCalendar statusAuthenticated]
  -[RMModelStatusAccountSubscribedCalendar setStatusIsEnabled:]
  -[RMModelStatusAccountSubscribedCalendar statusIsEnabled]
  -[RMModelStatusAccountSubscribedCalendar setStatusCalendarUrl:]
  -[RMModelStatusAccountSubscribedCalendar statusCalendarUrl]


RMModelStatusApp : RMModelStatusBase
 @property  NSString *statusBundleId
 @property  NSString *statusName
 @property  NSString *statusVersion
 @property  NSNumber *statusIsSystem
 @property  NSNumber *statusIsManaged

  // class methods
  +[RMModelStatusApp allowedStatusKeys]
  +[RMModelStatusApp buildWithBundleId:name:version:isSystem:isManaged:]
  +[RMModelStatusApp buildRequiredOnlyWithBundleId:isSystem:isManaged:]

  // instance methods
  -[RMModelStatusApp copyWithZone:]
  -[RMModelStatusApp .cxx_destruct]
  -[RMModelStatusApp setStatusVersion:]
  -[RMModelStatusApp statusVersion]
  -[RMModelStatusApp setStatusName:]
  -[RMModelStatusApp statusName]
  -[RMModelStatusApp loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusApp serializePayloadWithType:]
  -[RMModelStatusApp setStatusBundleId:]
  -[RMModelStatusApp setStatusIsSystem:]
  -[RMModelStatusApp setStatusIsManaged:]
  -[RMModelStatusApp statusBundleId]
  -[RMModelStatusApp statusIsSystem]
  -[RMModelStatusApp statusIsManaged]


RMModelStatusBase : RMModelPayloadBase
  // instance methods
  -[RMModelStatusBase loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusBase serializePayloadWithType:]
  -[RMModelStatusBase serializeWithType:]
  -[RMModelStatusBase loadFromDictionary:serializationType:error:]


RMModelStatusManagementClientCapabilities : RMModelStatusBase
 @property  NSArray *statusSupportedVersions
 @property  RMModelAnyPayload *statusSupportedFeatures
 @property  RMModelStatusManagementClientCapabilities_SupportedPayloads *statusSupportedPayloads

  // class methods
  +[RMModelStatusManagementClientCapabilities allowedStatusKeys]
  +[RMModelStatusManagementClientCapabilities buildWithSupportedVersions:supportedFeatures:supportedPayloads:]
  +[RMModelStatusManagementClientCapabilities buildRequiredOnlyWithSupportedVersions:supportedFeatures:supportedPayloads:]

  // instance methods
  -[RMModelStatusManagementClientCapabilities copyWithZone:]
  -[RMModelStatusManagementClientCapabilities .cxx_destruct]
  -[RMModelStatusManagementClientCapabilities loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusManagementClientCapabilities serializePayloadWithType:]
  -[RMModelStatusManagementClientCapabilities setStatusSupportedVersions:]
  -[RMModelStatusManagementClientCapabilities setStatusSupportedFeatures:]
  -[RMModelStatusManagementClientCapabilities setStatusSupportedPayloads:]
  -[RMModelStatusManagementClientCapabilities statusSupportedVersions]
  -[RMModelStatusManagementClientCapabilities statusSupportedFeatures]
  -[RMModelStatusManagementClientCapabilities statusSupportedPayloads]


RMModelStatusManagementClientCapabilities_SupportedPayloads : RMModelPayloadBase
 @property  NSArray *statusCommands
 @property  RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations *statusDeclarations
 @property  NSArray *statusStatusItems

  // class methods
  +[RMModelStatusManagementClientCapabilities_SupportedPayloads allowedStatusKeys]
  +[RMModelStatusManagementClientCapabilities_SupportedPayloads buildWithCommands:declarations:statusItems:]
  +[RMModelStatusManagementClientCapabilities_SupportedPayloads buildRequiredOnlyWithCommands:declarations:statusItems:]

  // instance methods
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads copyWithZone:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads .cxx_destruct]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads setStatusCommands:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads setStatusDeclarations:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads statusCommands]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads statusDeclarations]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads serializeWithType:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads loadFromDictionary:serializationType:error:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads setStatusStatusItems:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloads statusStatusItems]


RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations : RMModelPayloadBase
 @property  NSArray *statusActivations
 @property  NSArray *statusAssets
 @property  NSArray *statusConfigurations

  // class methods
  +[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations allowedStatusKeys]
  +[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations buildRequiredOnly]
  +[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations buildWithActivations:assets:configurations:]

  // instance methods
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations copyWithZone:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations .cxx_destruct]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations serializeWithType:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations loadFromDictionary:serializationType:error:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations setStatusActivations:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations setStatusAssets:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations setStatusConfigurations:]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations statusActivations]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations statusAssets]
  -[RMModelStatusManagementClientCapabilities_SupportedPayloadsDeclarations statusConfigurations]


RMModelStatusManagementDeclarations : RMModelStatusBase
 @property  NSArray *statusActivations
 @property  NSArray *statusConfigurations
 @property  NSArray *statusAssets

  // class methods
  +[RMModelStatusManagementDeclarations allowedStatusKeys]
  +[RMModelStatusManagementDeclarations buildWithActivations:configurations:assets:]
  +[RMModelStatusManagementDeclarations buildRequiredOnlyWithActivations:configurations:assets:]

  // instance methods
  -[RMModelStatusManagementDeclarations copyWithZone:]
  -[RMModelStatusManagementDeclarations .cxx_destruct]
  -[RMModelStatusManagementDeclarations loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusManagementDeclarations serializePayloadWithType:]
  -[RMModelStatusManagementDeclarations setStatusActivations:]
  -[RMModelStatusManagementDeclarations setStatusAssets:]
  -[RMModelStatusManagementDeclarations setStatusConfigurations:]
  -[RMModelStatusManagementDeclarations statusActivations]
  -[RMModelStatusManagementDeclarations statusAssets]
  -[RMModelStatusManagementDeclarations statusConfigurations]


RMModelStatusManagementDeclarations_Declaration : RMModelPayloadBase
 @property  NSString *statusIdentifier
 @property  NSString *statusServerToken
 @property  NSNumber *statusActive
 @property  NSString *statusValid
 @property  NSArray *statusReasons

  // class methods
  +[RMModelStatusManagementDeclarations_Declaration allowedStatusKeys]
  +[RMModelStatusManagementDeclarations_Declaration buildWithIdentifier:serverToken:active:valid:reasons:]
  +[RMModelStatusManagementDeclarations_Declaration buildRequiredOnlyWithIdentifier:serverToken:active:valid:]

  // instance methods
  -[RMModelStatusManagementDeclarations_Declaration copyWithZone:]
  -[RMModelStatusManagementDeclarations_Declaration .cxx_destruct]
  -[RMModelStatusManagementDeclarations_Declaration setStatusIdentifier:]
  -[RMModelStatusManagementDeclarations_Declaration statusIdentifier]
  -[RMModelStatusManagementDeclarations_Declaration serializeWithType:]
  -[RMModelStatusManagementDeclarations_Declaration loadFromDictionary:serializationType:error:]
  -[RMModelStatusManagementDeclarations_Declaration setStatusServerToken:]
  -[RMModelStatusManagementDeclarations_Declaration setStatusActive:]
  -[RMModelStatusManagementDeclarations_Declaration setStatusValid:]
  -[RMModelStatusManagementDeclarations_Declaration setStatusReasons:]
  -[RMModelStatusManagementDeclarations_Declaration statusServerToken]
  -[RMModelStatusManagementDeclarations_Declaration statusActive]
  -[RMModelStatusManagementDeclarations_Declaration statusValid]
  -[RMModelStatusManagementDeclarations_Declaration statusReasons]


RMModelStatusReason : RMModelPayloadBase
 @property  NSString *statusCode
 @property  NSString *statusDescription
 @property  RMModelAnyPayload *statusDetails

  // class methods
  +[RMModelStatusReason allowedStatusKeys]
  +[RMModelStatusReason buildRequiredOnlyWithCode:]
  +[RMModelStatusReason buildWithCode:description:details:]

  // instance methods
  -[RMModelStatusReason copyWithZone:]
  -[RMModelStatusReason statusDescription]
  -[RMModelStatusReason .cxx_destruct]
  -[RMModelStatusReason setStatusCode:]
  -[RMModelStatusReason statusCode]
  -[RMModelStatusReason setStatusDescription:]
  -[RMModelStatusReason serializeWithType:]
  -[RMModelStatusReason loadFromDictionary:serializationType:error:]
  -[RMModelStatusReason setStatusDetails:]
  -[RMModelStatusReason statusDetails]


RMModelStatusTestArrayValue : RMModelStatusBase
 @property  NSString *statusKey1
 @property  NSString *statusKey2

  // class methods
  +[RMModelStatusTestArrayValue allowedStatusKeys]
  +[RMModelStatusTestArrayValue buildWithKey1:key2:]
  +[RMModelStatusTestArrayValue buildRequiredOnlyWithKey1:]

  // instance methods
  -[RMModelStatusTestArrayValue copyWithZone:]
  -[RMModelStatusTestArrayValue .cxx_destruct]
  -[RMModelStatusTestArrayValue loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusTestArrayValue serializePayloadWithType:]
  -[RMModelStatusTestArrayValue setStatusKey1:]
  -[RMModelStatusTestArrayValue setStatusKey2:]
  -[RMModelStatusTestArrayValue statusKey1]
  -[RMModelStatusTestArrayValue statusKey2]


RMModelStatusTestDictionaryValue : RMModelStatusBase
 @property  NSString *statusKey1
 @property  NSString *statusKey2

  // class methods
  +[RMModelStatusTestDictionaryValue allowedStatusKeys]
  +[RMModelStatusTestDictionaryValue buildWithKey1:key2:]
  +[RMModelStatusTestDictionaryValue buildRequiredOnlyWithKey1:]

  // instance methods
  -[RMModelStatusTestDictionaryValue copyWithZone:]
  -[RMModelStatusTestDictionaryValue .cxx_destruct]
  -[RMModelStatusTestDictionaryValue loadPayloadFromDictionary:serializationType:error:]
  -[RMModelStatusTestDictionaryValue serializePayloadWithType:]
  -[RMModelStatusTestDictionaryValue setStatusKey1:]
  -[RMModelStatusTestDictionaryValue setStatusKey2:]
  -[RMModelStatusTestDictionaryValue statusKey1]
  -[RMModelStatusTestDictionaryValue statusKey2]


RMModelUserIdentityDeclaration : RMModelAssetBase <RMModelRegisteredTypeProtocol>
 @property  NSString *payloadFullName
 @property  NSString *payloadEmailAddress
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelUserIdentityDeclaration buildRequiredOnlyWithIdentifier:]
  +[RMModelUserIdentityDeclaration allowedPayloadKeys]
  +[RMModelUserIdentityDeclaration registeredClassName]
  +[RMModelUserIdentityDeclaration registeredIdentifier]
  +[RMModelUserIdentityDeclaration buildWithIdentifier:fullName:emailAddress:]

  // instance methods
  -[RMModelUserIdentityDeclaration copyWithZone:]
  -[RMModelUserIdentityDeclaration .cxx_destruct]
  -[RMModelUserIdentityDeclaration setPayloadEmailAddress:]
  -[RMModelUserIdentityDeclaration payloadEmailAddress]
  -[RMModelUserIdentityDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelUserIdentityDeclaration serializePayloadWithType:]
  -[RMModelUserIdentityDeclaration setPayloadFullName:]
  -[RMModelUserIdentityDeclaration payloadFullName]


RMModelUserNameAndPasswordCredentialsDeclaration : RMModelPayloadBase
 @property  NSString *payloadUserName
 @property  NSString *payloadPassword

  // class methods
  +[RMModelUserNameAndPasswordCredentialsDeclaration allowedPayloadKeys]
  +[RMModelUserNameAndPasswordCredentialsDeclaration buildWithUserName:password:]
  +[RMModelUserNameAndPasswordCredentialsDeclaration buildRequiredOnlyWithUserName:]

  // instance methods
  -[RMModelUserNameAndPasswordCredentialsDeclaration copyWithZone:]
  -[RMModelUserNameAndPasswordCredentialsDeclaration .cxx_destruct]
  -[RMModelUserNameAndPasswordCredentialsDeclaration setPayloadUserName:]
  -[RMModelUserNameAndPasswordCredentialsDeclaration payloadUserName]
  -[RMModelUserNameAndPasswordCredentialsDeclaration setPayloadPassword:]
  -[RMModelUserNameAndPasswordCredentialsDeclaration payloadPassword]
  -[RMModelUserNameAndPasswordCredentialsDeclaration serializeWithType:]
  -[RMModelUserNameAndPasswordCredentialsDeclaration loadFromDictionary:serializationType:error:]


RMModelVPPOnDemandLicenseAssignmentDeclaration : RMModelAssetBase <RMModelRegisteredTypeProtocol>
 @property  RMModelAssetBaseReference *payloadReference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[RMModelVPPOnDemandLicenseAssignmentDeclaration allowedPayloadKeys]
  +[RMModelVPPOnDemandLicenseAssignmentDeclaration registeredClassName]
  +[RMModelVPPOnDemandLicenseAssignmentDeclaration registeredIdentifier]
  +[RMModelVPPOnDemandLicenseAssignmentDeclaration buildWithIdentifier:reference:]
  +[RMModelVPPOnDemandLicenseAssignmentDeclaration buildRequiredOnlyWithIdentifier:reference:]

  // instance methods
  -[RMModelVPPOnDemandLicenseAssignmentDeclaration copyWithZone:]
  -[RMModelVPPOnDemandLicenseAssignmentDeclaration .cxx_destruct]
  -[RMModelVPPOnDemandLicenseAssignmentDeclaration setPayloadReference:]
  -[RMModelVPPOnDemandLicenseAssignmentDeclaration payloadReference]
  -[RMModelVPPOnDemandLicenseAssignmentDeclaration loadPayloadFromDictionary:serializationType:error:]
  -[RMModelVPPOnDemandLicenseAssignmentDeclaration serializePayloadWithType:]


(RemoteManagementModel)
	// instance methods
	-[(RemoteManagementModel) RMModelSHA1Hash]
	-[(RemoteManagementModel) RMModelHexString]
	-[(RemoteManagementModel) RMModelSHA1HexString]

(RemoteManagementModel)
	// class methods
	+[(RemoteManagementModel) rmmodel_sharedRFC3339DateFormatter]

01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0200 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0400 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0100 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
