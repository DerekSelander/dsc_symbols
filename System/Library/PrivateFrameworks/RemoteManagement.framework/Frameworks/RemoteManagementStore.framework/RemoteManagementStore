|| __DATA.__objc_data _OBJC_CLASS_$_RMConfigurationSubscriberDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_RMConfigurationSubscriberDescription
|| __DATA.__objc_data _OBJC_CLASS_$_RMConfigurationSubscriberEventStream
|| __DATA.__objc_data _OBJC_CLASS_$_RMConfigurationSubscriberService
|| __DATA.__objc_data _OBJC_CLASS_$_RMConfigurationSubscriberXPCListenerDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_RMStatusPublisherDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_RMStatusPublisherDescription
|| __DATA.__objc_data _OBJC_CLASS_$_RMStoreLog
|| __DATA.__objc_data _OBJC_CLASS_$_RMStoreUtility
|| __DATA.__objc_data _OBJC_CLASS_$_RMStoreXPCConnection
|| __DATA.__objc_data _OBJC_CLASS_$_RMSubscribedConfigurationReference
|| __DATA.__objc_data _OBJC_METACLASS_$_RMConfigurationSubscriberDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_RMConfigurationSubscriberDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_RMConfigurationSubscriberEventStream
|| __DATA.__objc_data _OBJC_METACLASS_$_RMConfigurationSubscriberService
|| __DATA.__objc_data _OBJC_METACLASS_$_RMConfigurationSubscriberXPCListenerDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_RMStatusPublisherDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_RMStatusPublisherDescription
|| __DATA.__objc_data _OBJC_METACLASS_$_RMStoreLog
|| __DATA.__objc_data _OBJC_METACLASS_$_RMStoreUtility
|| __DATA.__objc_data _OBJC_METACLASS_$_RMStoreXPCConnection
|| __DATA.__objc_data _OBJC_METACLASS_$_RMSubscribedConfigurationReference
|| __DATA_CONST.__const _RMObserverStoreStoreDidChangeNotification
|| __DATA_CONST.__const _RMStoreOptionAccountIdentifier
|| __DATA_CONST.__const _RMStoreOptionDescription
|| __DATA_CONST.__const _RMStoreOptionName
|| __DATA_CONST.__const _RMStoreOptionPersonaIdentifier
|| __DATA_CONST.__const _RMStoreXPCAgentMachServiceName
|| __DATA_CONST.__const _RMStoreXPCDaemonMachServiceName
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMBaseStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMConfigurationSubscriberClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMDeclarationManifest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMDeclarationManifestItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMObserverStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMProviderStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMStoreResolvedAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMStoreUnresolvedAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMStoreXPCProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_RMSubscriberStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMBaseStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMConfigurationSubscriberClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMDeclarationManifest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMDeclarationManifestItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMObserverStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMProviderStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMStoreResolvedAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMStoreUnresolvedAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMStoreXPCProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_RMSubscriberStore
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: __CFXPCCreateCFObjectFromXPCObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ Foundation: _NSClassFromString
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConditionLock
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ RemoteManagementModel: _OBJC_CLASS_$_RMModelActivationBase
__ RemoteManagementModel: _OBJC_CLASS_$_RMModelAnyPayload
__ RemoteManagementModel: _OBJC_CLASS_$_RMModelAssetBase
__ RemoteManagementModel: _OBJC_CLASS_$_RMModelConfigurationBase
__ RemoteManagementModel: _OBJC_CLASS_$_RMModelDeclarationBase
__ RemoteManagementModel: _OBJC_CLASS_$_RMModelManagementBase
__ RemoteManagementModel: _OBJC_CLASS_$_RMModelPasscodeSettingsDeclaration
__ RemoteManagementModel: _OBJC_CLASS_$_RMModelStatusReason
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _xpc_copy_event
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_set_event_stream_handler
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
RMBaseStore : NSObject <RMStoreProtocol>
 @property  NSString *identifier
 @property  long long type
 @property  long long scope
 @property  NSString *name
 @property  NSString *storeDescription
 @property  NSURL *enrollmentURL
 @property  NSString *accountIdentifier
 @property  BOOL defaultToInteractive
 @property  BOOL dataSeparated
 @property  NSString *personaIdentifier
 @property  RMStoreXPCConnection *xpcConnection

  // class methods
  +[RMBaseStore supportsSecureCoding]

  // instance methods
  -[RMBaseStore setPersonaIdentifier:]
  -[RMBaseStore identifier]
  -[RMBaseStore setScope:]
  -[RMBaseStore personaIdentifier]
  -[RMBaseStore setAccountIdentifier:]
  -[RMBaseStore storeDescription]
  -[RMBaseStore xpcConnection]
  -[RMBaseStore scope]
  -[RMBaseStore encodeWithCoder:]
  -[RMBaseStore type]
  -[RMBaseStore setEnrollmentURL:]
  -[RMBaseStore .cxx_destruct]
  -[RMBaseStore setXpcConnection:]
  -[RMBaseStore setType:]
  -[RMBaseStore accountIdentifier]
  -[RMBaseStore setIdentifier:]
  -[RMBaseStore setName:]
  -[RMBaseStore name]
  -[RMBaseStore enrollmentURL]
  -[RMBaseStore initWithCoder:]
  -[RMBaseStore dataSeparated]
  -[RMBaseStore fetchDataAtURL:completionHandler:]
  -[RMBaseStore declarationsWithTypes:completionHandler:]
  -[RMBaseStore declarationWithIdentifier:completionHandler:]
  -[RMBaseStore declarationsWithCompletionHandler:]
  -[RMBaseStore declarationManifestWithCompletionHandler:]
  -[RMBaseStore setShouldInstallConfiguration:shouldInstall:completionHandler:]
  -[RMBaseStore defaultToInteractive]
  -[RMBaseStore initWithIdentifier:type:scope:name:description:enrollmentURL:accountIdentifier:defaultToInteractive:dataSeparated:personaIdentifier:]
  -[RMBaseStore isEqualToStore:]
  -[RMBaseStore setStoreDescription:]
  -[RMBaseStore setDefaultToInteractive:]
  -[RMBaseStore setDataSeparated:]


RMConfigurationSubscriberClient : NSObject
 @property  RMConfigurationSubscriberDelegate *subscriberDelegate
 @property  RMStatusPublisherDelegate *publisherDelegate

  // instance methods
  -[RMConfigurationSubscriberClient .cxx_destruct]
  -[RMConfigurationSubscriberClient fetchConfigurationsWithTypes:scope:completionHandler:]
  -[RMConfigurationSubscriberClient sendStatusKeys:storeIdentifier:scope:completionHandler:]
  -[RMConfigurationSubscriberClient _buildSubscribedReferences:declarations:store:]
  -[RMConfigurationSubscriberClient subscriberDelegate]
  -[RMConfigurationSubscriberClient setSubscriberDelegate:]
  -[RMConfigurationSubscriberClient publisherDelegate]
  -[RMConfigurationSubscriberClient setPublisherDelegate:]


RMConfigurationSubscriberDelegate : NSObject
 @property  NSDictionary *applicatorClassNameByConfigurationType
 @property  NSObject<OS_dispatch_queue> *applicatorQueue

  // instance methods
  -[RMConfigurationSubscriberDelegate .cxx_destruct]
  -[RMConfigurationSubscriberDelegate initWithApplicators:]
  -[RMConfigurationSubscriberDelegate didFetchConfigurationsByType:storesByIdentifier:scope:]
  -[RMConfigurationSubscriberDelegate didFailToFetchConfigurationsWithTypes:scope:error:]
  -[RMConfigurationSubscriberDelegate applicatorClassNameByConfigurationType]
  -[RMConfigurationSubscriberDelegate applicatorQueue]
  -[RMConfigurationSubscriberDelegate setApplicatorQueue:]


RMConfigurationSubscriberDescription : NSObject
 @property  NSArray *types

  // class methods
  +[RMConfigurationSubscriberDescription descriptionWithEventsDictionary:]
  +[RMConfigurationSubscriberDescription descriptionWithServiceDictionary:]

  // instance methods
  -[RMConfigurationSubscriberDescription types]
  -[RMConfigurationSubscriberDescription initWithDictionary:]
  -[RMConfigurationSubscriberDescription .cxx_destruct]
  -[RMConfigurationSubscriberDescription initWithTypes:]


RMConfigurationSubscriberEventStream : RMConfigurationSubscriberClient
 @property  id eventStreamObserver
 @property  NSArray *configurationTypes
 @property  long long scope

  // class methods
  +[RMConfigurationSubscriberEventStream newConfigurationSubscriberEventStreamWithScope:applicators:publisherClass:]
  +[RMConfigurationSubscriberEventStream _configuredConfigurationTypesWithScope:]
  +[RMConfigurationSubscriberEventStream _eventDescriptorByNameForEventStreamNamed:]
  +[RMConfigurationSubscriberEventStream _setupEventHandlerWithScope:]

  // instance methods
  -[RMConfigurationSubscriberEventStream _handleEvent:]
  -[RMConfigurationSubscriberEventStream scope]
  -[RMConfigurationSubscriberEventStream initWithScope:]
  -[RMConfigurationSubscriberEventStream dealloc]
  -[RMConfigurationSubscriberEventStream .cxx_destruct]
  -[RMConfigurationSubscriberEventStream start]
  -[RMConfigurationSubscriberEventStream _setupEventHandler]
  -[RMConfigurationSubscriberEventStream configurationTypes]
  -[RMConfigurationSubscriberEventStream _fetchConfigurations:]
  -[RMConfigurationSubscriberEventStream eventStreamObserver]
  -[RMConfigurationSubscriberEventStream setEventStreamObserver:]


RMConfigurationSubscriberService : RMConfigurationSubscriberClient <RMConfigurationSubscriberXPCService>
 @property  NSArray *configurationTypes
 @property  NSArray *statusKeys
 @property  BOOL hasServiceEntitlement

  // class methods
  +[RMConfigurationSubscriberService newConfigurationSubscriberServiceWithXPCConnection:]

  // instance methods
  -[RMConfigurationSubscriberService initWithXPCConnection:]
  -[RMConfigurationSubscriberService .cxx_destruct]
  -[RMConfigurationSubscriberService configurationTypes]
  -[RMConfigurationSubscriberService fetchThenApplyConfigurationsWithScope:completionHandler:]
  -[RMConfigurationSubscriberService publishStatusKeys:storeIdentifier:scope:completionHandler:]
  -[RMConfigurationSubscriberService statusKeys]
  -[RMConfigurationSubscriberService hasServiceEntitlement]


RMConfigurationSubscriberXPCListenerDelegate : NSObject <NSXPCListenerDelegate>
 @property  NSArray *applicatorClasses
 @property  Class publisherClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[RMConfigurationSubscriberXPCListenerDelegate .cxx_destruct]
  -[RMConfigurationSubscriberXPCListenerDelegate listener:shouldAcceptNewConnection:]
  -[RMConfigurationSubscriberXPCListenerDelegate initWithApplicators:publisherClass:]
  -[RMConfigurationSubscriberXPCListenerDelegate applicatorClasses]
  -[RMConfigurationSubscriberXPCListenerDelegate publisherClass]


RMDeclarationManifestItem : NSObject <NSSecureCoding>
 @property  NSString *identifier
 @property  NSString *version

  // class methods
  +[RMDeclarationManifestItem supportsSecureCoding]

  // instance methods
  -[RMDeclarationManifestItem identifier]
  -[RMDeclarationManifestItem encodeWithCoder:]
  -[RMDeclarationManifestItem .cxx_destruct]
  -[RMDeclarationManifestItem version]
  -[RMDeclarationManifestItem isEqual:]
  -[RMDeclarationManifestItem initWithCoder:]
  -[RMDeclarationManifestItem initWithIdentifier:version:]
  -[RMDeclarationManifestItem isEqualToManifestItem:]


RMDeclarationManifest : NSObject <NSSecureCoding>
 @property  NSArray *activations
 @property  NSArray *configurations
 @property  NSArray *assets
 @property  NSArray *management

  // class methods
  +[RMDeclarationManifest supportsSecureCoding]
  +[RMDeclarationManifest declarationManifestWithDeclarations:]

  // instance methods
  -[RMDeclarationManifest configurations]
  -[RMDeclarationManifest assets]
  -[RMDeclarationManifest encodeWithCoder:]
  -[RMDeclarationManifest .cxx_destruct]
  -[RMDeclarationManifest management]
  -[RMDeclarationManifest isEqual:]
  -[RMDeclarationManifest initWithCoder:]
  -[RMDeclarationManifest activations]
  -[RMDeclarationManifest initWithActivations:configurations:assets:management:]
  -[RMDeclarationManifest isEqualToManifest:]


RMObserverStore : RMBaseStore <NSSecureCoding>
  // class methods
  +[RMObserverStore supportsSecureCoding]
  +[RMObserverStore storesWithScope:completionHandler:]
  +[RMObserverStore storeWithIdentifier:scope:completionHandler:]
  +[RMObserverStore storesWithCompletionHandler:]

  // instance methods
  -[RMObserverStore isEqual:]
  -[RMObserverStore isEqualToStore:]


RMProviderStore : RMBaseStore <NSSecureCoding, RMMutableStoreProtocol>
 @property  NSString *identifier
 @property  long long type
 @property  long long scope
 @property  NSString *name
 @property  NSString *storeDescription
 @property  NSURL *enrollmentURL
 @property  NSString *accountIdentifier
 @property  BOOL defaultToInteractive
 @property  BOOL dataSeparated
 @property  NSString *personaIdentifier

  // class methods
  +[RMProviderStore supportsSecureCoding]
  +[RMProviderStore storesWithScope:completionHandler:]
  +[RMProviderStore storeWithIdentifier:scope:completionHandler:]
  +[RMProviderStore createStoreWithType:scope:defaultToInteractive:dataSeparated:options:completionHandler:]
  +[RMProviderStore removeStoreWithIdentifier:scope:completionHandler:]

  // instance methods
  -[RMProviderStore isEqual:]
  -[RMProviderStore isEqualToStore:]
  -[RMProviderStore saveDeclaration:completionHandler:]
  -[RMProviderStore deleteDeclarationWithIdentifier:completionHandler:]
  -[RMProviderStore applyChangesWithCompletionHandler:]


RMStatusPublisherDelegate : NSObject
 @property  Class publisherClass
 @property  NSObject<OS_dispatch_queue> *publisherQueue

  // instance methods
  -[RMStatusPublisherDelegate .cxx_destruct]
  -[RMStatusPublisherDelegate publisherClass]
  -[RMStatusPublisherDelegate initWithPublisherClass:]
  -[RMStatusPublisherDelegate fetchStatusForStatusKeys:store:completionHandler:]
  -[RMStatusPublisherDelegate publisherQueue]
  -[RMStatusPublisherDelegate setPublisherQueue:]


RMStatusPublisherDescription : NSObject
 @property  NSDictionary *statusKeysByNotification
 @property  NSArray *statusKeys

  // class methods
  +[RMStatusPublisherDescription descriptionWithEventsDictionary:]
  +[RMStatusPublisherDescription descriptionWithServiceDictionary:]

  // instance methods
  -[RMStatusPublisherDescription initWithDictionary:]
  -[RMStatusPublisherDescription .cxx_destruct]
  -[RMStatusPublisherDescription statusKeys]
  -[RMStatusPublisherDescription initWithStatusKeysByNotification:]
  -[RMStatusPublisherDescription statusKeysByNotification]


RMStoreLog : NSObject
  // class methods
  +[RMStoreLog configurationSubscriberClient]
  +[RMStoreLog configurationSubscriberDelegate]
  +[RMStoreLog configurationSubscriberEventStream]
  +[RMStoreLog configurationSubscriberService]
  +[RMStoreLog statusPublisherDelegate]
  +[RMStoreLog statusPublisherDescription]


RMStoreResolvedAsset : NSObject <NSSecureCoding>
 @property  NSData *assetData
 @property  NSURL *assetFile

  // class methods
  +[RMStoreResolvedAsset supportsSecureCoding]

  // instance methods
  -[RMStoreResolvedAsset initWithFile:]
  -[RMStoreResolvedAsset encodeWithCoder:]
  -[RMStoreResolvedAsset .cxx_destruct]
  -[RMStoreResolvedAsset initWithData:]
  -[RMStoreResolvedAsset isEqual:]
  -[RMStoreResolvedAsset initWithCoder:]
  -[RMStoreResolvedAsset assetData]
  -[RMStoreResolvedAsset isEqualToResolvedAsset:]
  -[RMStoreResolvedAsset assetFile]


RMStoreUnresolvedAsset : NSObject <NSSecureCoding>
 @property  NSString *assetIdentifier
 @property  long long resolveAs
 @property  NSDictionary *queryParameters
 @property  NSURL *downloadURL

  // class methods
  +[RMStoreUnresolvedAsset supportsSecureCoding]

  // instance methods
  -[RMStoreUnresolvedAsset encodeWithCoder:]
  -[RMStoreUnresolvedAsset .cxx_destruct]
  -[RMStoreUnresolvedAsset downloadURL]
  -[RMStoreUnresolvedAsset isEqual:]
  -[RMStoreUnresolvedAsset queryParameters]
  -[RMStoreUnresolvedAsset initWithCoder:]
  -[RMStoreUnresolvedAsset assetIdentifier]
  -[RMStoreUnresolvedAsset initWithAsset:queryParameters:]
  -[RMStoreUnresolvedAsset initWithAsset:queryParameters:downloadURL:]
  -[RMStoreUnresolvedAsset initWithAssetIdentifier:queryParameters:]
  -[RMStoreUnresolvedAsset initWithAssetIdentifier:queryParameters:downloadURL:]
  -[RMStoreUnresolvedAsset initWithAssetIdentifier:resolveAs:queryParameters:downloadURL:]
  -[RMStoreUnresolvedAsset isEqualToUnresolvedAsset:]
  -[RMStoreUnresolvedAsset resolveAs]


RMStoreUtility : NSObject
  // class methods
  +[RMStoreUtility filterForUserEnrollmentWithDeclaration:]
  +[RMStoreUtility _passcodeSettingsForUserEnrollment]


RMStoreXPCConnection : NSObject
 @property  NSXPCConnection *connection

  // class methods
  +[RMStoreXPCConnection storeXPCConnection:]

  // instance methods
  -[RMStoreXPCConnection initWithXPCConnection:]
  -[RMStoreXPCConnection dealloc]
  -[RMStoreXPCConnection .cxx_destruct]
  -[RMStoreXPCConnection connection]


RMStoreXPCProxy : NSObject
  // class methods
  +[RMStoreXPCProxy newInterface]
  +[RMStoreXPCProxy newConnectionWithScope:]
  +[RMStoreXPCProxy newAgentConnection]
  +[RMStoreXPCProxy newDaemonConnection]
  +[RMStoreXPCProxy newConnectionWithListenerEndpoint:]


RMSubscribedConfigurationReference : NSObject <NSSecureCoding>
 @property  RMModelDeclarationBase *declaration
 @property  RMSubscriberStore *store
 @property  NSArray *assets

  // class methods
  +[RMSubscribedConfigurationReference supportsSecureCoding]

  // instance methods
  -[RMSubscribedConfigurationReference store]
  -[RMSubscribedConfigurationReference assets]
  -[RMSubscribedConfigurationReference encodeWithCoder:]
  -[RMSubscribedConfigurationReference .cxx_destruct]
  -[RMSubscribedConfigurationReference declaration]
  -[RMSubscribedConfigurationReference isEqual:]
  -[RMSubscribedConfigurationReference initWithCoder:]
  -[RMSubscribedConfigurationReference isEqualToReference:]
  -[RMSubscribedConfigurationReference initWithDeclaration:subscriberStore:assets:]
  -[RMSubscribedConfigurationReference assetWithIdentifier:]


RMSubscriberStore : RMBaseStore <NSSecureCoding, RMAssetResolverProtocol>
  // class methods
  +[RMSubscriberStore supportsSecureCoding]
  +[RMSubscriberStore storesWithScope:completionHandler:]
  +[RMSubscriberStore storeWithIdentifier:scope:completionHandler:]
  +[RMSubscriberStore subscribedStoreDeclarationsWithScope:configurationTypes:completionHandler:]

  // instance methods
  -[RMSubscriberStore isEqual:]
  -[RMSubscriberStore isEqualToStore:]
  -[RMSubscriberStore resolveAsset:completionHandler:]
  -[RMSubscriberStore assetCannotBeDeserialized:error:completionHandler:]
  -[RMSubscriberStore assetCannotBeDownloaded:error:completionHandler:]
  -[RMSubscriberStore assetCannotBeVerified:error:completionHandler:]
  -[RMSubscriberStore assetEncounteredInternalError:error:completionHandler:]
  -[RMSubscriberStore assetSuccessfullyResolved:completionHandler:]
  -[RMSubscriberStore configurationCannotBeDeserialized:error:completionHandler:]
  -[RMSubscriberStore configurationFailedToApply:error:completionHandler:]
  -[RMSubscriberStore configurationIsInvalid:error:completionHandler:]
  -[RMSubscriberStore configurationErrorReasons:reasons:completionHandler:]
  -[RMSubscriberStore configurationSuccessfullyApplied:completionHandler:]
  -[RMSubscriberStore configurationSuccessfullyApplied:reasons:completionHandler:]
  -[RMSubscriberStore configurationRemovedWithDeclarationIdentifier:declarationServerToken:completionHandler:]
  -[RMSubscriberStore _writeStatusForDeclaration:validity:reasons:completionHandler:]
  -[RMSubscriberStore _removeStatusForDeclarationIdentifier:declarationServerToken:completionHandler:]
  -[RMSubscriberStore publishStatus:completionHandler:]


(RemoteManagementStore)
	// class methods
	+[(RemoteManagementStore) rms_stringWithScope:]

01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConditionLock 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0100 /System/Library/PrivateFrameworks/RemoteManagement.framework/Frameworks/RemoteManagementModel.framework/RemoteManagementModel: RMModelActivationBase 
01 00 0100 /System/Library/PrivateFrameworks/RemoteManagement.framework/Frameworks/RemoteManagementModel.framework/RemoteManagementModel: RMModelAnyPayload 
01 00 0100 /System/Library/PrivateFrameworks/RemoteManagement.framework/Frameworks/RemoteManagementModel.framework/RemoteManagementModel: RMModelAssetBase 
01 00 0100 /System/Library/PrivateFrameworks/RemoteManagement.framework/Frameworks/RemoteManagementModel.framework/RemoteManagementModel: RMModelConfigurationBase 
01 00 0100 /System/Library/PrivateFrameworks/RemoteManagement.framework/Frameworks/RemoteManagementModel.framework/RemoteManagementModel: RMModelDeclarationBase 
01 00 0100 /System/Library/PrivateFrameworks/RemoteManagement.framework/Frameworks/RemoteManagementModel.framework/RemoteManagementModel: RMModelManagementBase 
01 00 0100 /System/Library/PrivateFrameworks/RemoteManagement.framework/Frameworks/RemoteManagementModel.framework/RemoteManagementModel: RMModelPasscodeSettingsDeclaration 
01 00 0100 /System/Library/PrivateFrameworks/RemoteManagement.framework/Frameworks/RemoteManagementModel.framework/RemoteManagementModel: RMModelStatusReason 
