|| __DATA.__objc_data _OBJC_CLASS_$_CKDDiscoverAllUserIdentitiesOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CKDDiscoverUserIdentitiesOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CKDFetchShareParticipantsOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CKDFileWatcher
|| __DATA.__objc_data _OBJC_CLASS_$_CKDOperationInfoMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPNotificationSyncResponse
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPNotificationSyncResponsePushMessage
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPResponseOperationResultErrorAuxiliaryError
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPResponseOperationResultErrorExtension
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPShareMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPlaintextResponseBodyParser
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPrivacyManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKLEventFilter
|| __DATA.__objc_data _OBJC_CLASS_$_CKLLog
|| __DATA.__objc_data _OBJC_CLASS_$_CKLStatusFilter
|| __DATA.__objc_data _OBJC_CLASS_$_CKLStreamLogMessageObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CKLStreamLogStatsObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CKLStreamObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CKLStreamRawMessageObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CKLStreamTrafficConsoleLogObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CKLStreamTrafficObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CKLTrafficLogMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDDiscoverAllUserIdentitiesOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDDiscoverUserIdentitiesOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDFetchShareParticipantsOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDFileWatcher
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDOperationInfoMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPNotificationSyncResponse
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPNotificationSyncResponsePushMessage
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPResponseOperationResultErrorAuxiliaryError
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPResponseOperationResultErrorExtension
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPShareMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPlaintextResponseBodyParser
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPrivacyManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLEventFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLLog
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLStatusFilter
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLStreamLogMessageObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLStreamLogStatsObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLStreamObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLStreamRawMessageObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLStreamTrafficConsoleLogObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLStreamTrafficObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLTrafficLogMessage
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPDateStatistics._creation
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPDateStatistics._modification
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponse._changeID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponse._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponse._moreAvailable
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponse._pushMessages
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._badgeCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._category
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._dialog
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._isRead
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._payload
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._sound
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._source
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._subtitle
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._subtitleLocalizedArguments
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._subtitleLocalizedKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._title
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._titleLocalizedArguments
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._titleLocalizedKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPNotificationSyncResponsePushMessage._uuid
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPOperation._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPOperation._last
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPOperation._operationUUID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPOperation._synchronousMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPOperation._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._acceptTimestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._acceptedInProcess
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._acceptedTimestampDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._contactInformation
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._createdInProcess
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._inviteTimestampDate
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._inviterId
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._isInNetwork
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._isOrgUser
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._keyHealth
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._outOfNetworkKeyType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._outOfNetworkPrivateKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._participantId
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._participantType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._permission
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._protectionInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._protectionInfoPublicKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._publicKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._publicKeyVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._state
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPParticipant._userId
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._chainParent
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._chainPrivateKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._chainProtectionInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._conflictLoserEtags
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._createdBy
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._etag
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._fields
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._modifiedBy
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._modifiedByDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._permission
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._pluginFields
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._protectionInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._recordIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._shareId
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._shareInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._stableUrl
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._timeStatistics
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._tombstonedPublicKeyIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecord._zoneishMasterKeyId
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordChainParent._publicKeyID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordChainParent._reference
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordField._actions
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordField._identifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordField._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldIdentifier._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._assetValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._bytesValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._dateValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._doubleValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._isEncrypted
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._listValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._locationValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._packageValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._referenceValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._signedValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._streamingAssetValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._stringValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValue._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordStableUrl._displayedHostname
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordStableUrl._encryptedPublicSharingKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordStableUrl._protectedFullToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordStableUrl._routingKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordStableUrl._shortTokenHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordType._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._archiveRecordsRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._assetUploadTokenRetrieveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._bundlesForContainerRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._deleteContainerRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._fetchArchivedRecordsRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._functionInvokeRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._header
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._markAssetBrokenRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._notificationMarkReadRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._notificationSyncRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._queryRetrieveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._recordDeleteRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._recordResolveTokenRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._recordRetrieveChangesRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._recordRetrieveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._recordRetrieveVersionsRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._recordSaveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._request
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._setBadgeCountRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._shareAcceptRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._shareVettingInitiateRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._subscriptionCreateRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._subscriptionDeleteRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._subscriptionRetrieveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._tokenRegistrationRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._tokenUnregistrationRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._updateMissingAssetStatusRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._userAvailableQuotaRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._userPrivacySettingsBatchLookupRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._userPrivacySettingsResetRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._userPrivacySettingsRetrieveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._userPrivacySettingsUpdateRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._userQueryRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._userRetrieveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._webAuthTokenRetrieveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._zoneDeleteRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._zoneRetrieveChangesRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._zoneRetrieveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperation._zoneSaveRequest
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._applicationBundle
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._applicationConfigVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._applicationContainer
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._applicationContainerEnvironment
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._applicationVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._assetAuthorizeGetRequestOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._clientChangeToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceAssignedName
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceFlowControlBudget
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceFlowControlBudgetCap
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceFlowControlKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceFlowControlRegeneration
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceHardwareID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceHardwareVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceLibraryName
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceLibraryVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceProtocolVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceSoftwareIsAppleInternal
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._deviceSoftwareVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._globalConfigVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._isolationLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._locale
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._mmcsProtocolVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._operationGroupName
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._operationGroupQuantity
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._serviceIdentityKeyIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._targetDatabase
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._userIDContainerID
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeader._userToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions._contentRequestAuthorizeGetOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions._contentRequestHeaders
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo._headerKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo._headerValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestedFields._fields
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRequestedFields._listFields
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResult._code
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResult._error
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResult._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultError._auxiliaryError
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultError._clientError
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultError._errorDescription
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultError._errorInternal
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultError._errorKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultError._extensionError
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultError._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultError._retryAfterSeconds
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultError._serverError
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryError._code
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryError._domain
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryError._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryError._userInfos
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry._key
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue._boolValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue._bytesValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue._doubleValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue._int64Value
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue._stringValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorClient._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorClient._oplockFailure
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorClient._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorClient._uniqueFieldFailure
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorExtension._extensionName
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorExtension._extensionPayload
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorExtension._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorExtension._typeCode
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorServer._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPResponseOperationResultErrorServer._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._anonymousPublicAccess
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._displayedHostname
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._etag
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._invitedKeyToRemoves
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._invitedPcs
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._origin
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._participants
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._potentialMatchs
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._publicAccess
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._publisherModel
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._publisherModelType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._selfAddedPcs
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._shareId
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._shortTokenHash
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShare._shortTokenRoutingKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareIdentifier._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareIdentifier._zoneIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareMetadata._callerParticipant
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareMetadata._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareMetadata._ownerParticipant
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareMetadata._participantPermission
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareMetadata._participantState
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareMetadata._participantType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareMetadata._protectedFullToken
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareMetadata._rootRecordType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPShareMetadata._routingKey
|| __DATA_CONST.__const _CKDAssetCacheDbSchema
|| __DATA_CONST.__const _CKDPushConnectionDidReceivePublicTokenNotification
|| __DATA_CONST.__const _CKDRecordCacheSchema
|| __DATA_CONST.__const _CKLLogErrorDomain
|| __DATA_CONST.__const _CKServerOwnerDefaultName
|| __DATA_CONST.__const _kCKTCCDatabaseChangedNotificationName
|| __DATA_CONST.__const _kCKTemporaryDirectoryName
|| __DATA_DIRTY.__common _gSystemUnlockedGlobalCallback
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDAccountManateeObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDAccountNotifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDAssetCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDAssetHandle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDAssetRequestPlanner
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDBackingAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDClientContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDClientProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDCloudDatabaseServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDDirectoryPurger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDJSONResponseBodyParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDLongLivedClientProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDMetadataCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDOperationInfoCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDOperationMetricsCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPDateStatistics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPParticipant
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRecordChainParent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRecordField
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRecordFieldIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRecordFieldValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRecordStableUrl
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRecordType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRequestOperationHeader
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRequestedFields
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPResponseOperationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPResponseOperationResultError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPResponseOperationResultErrorClient
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPResponseOperationResultErrorServer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPShare
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPShareIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPackageDirectoryPurger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPipeliningInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPlistResponseBodyParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPowerLogger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDProtobufResponseBodyParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDProtocolTranslator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPushConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDRecordCachePool
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDResponseBodyParser
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDSystemAvailabilityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDTokenRegistrationScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDTrafficLogger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDTrafficMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDVolumeManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDAccountManateeObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDAccountNotifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDAssetCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDAssetHandle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDAssetRequestPlanner
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDBackingAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDClientContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDClientProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDCloudDatabaseServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDDirectoryPurger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDJSONResponseBodyParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDLongLivedClientProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDMetadataCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDOperationInfoCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDOperationMetricsCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPDateStatistics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPParticipant
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRecordChainParent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRecordField
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRecordFieldIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRecordFieldValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRecordStableUrl
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRecordType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRequestOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRequestOperationHeader
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRequestedFields
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPResponseOperationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPResponseOperationResultError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPResponseOperationResultErrorClient
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPResponseOperationResultErrorServer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPShare
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPShareIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPackageDirectoryPurger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPipeliningInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPlistResponseBodyParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPowerLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDProtobufResponseBodyParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDProtocolTranslator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPushConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDRecordCachePool
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDResponseBodyParser
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDSystemAvailabilityMonitor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDTokenRegistrationScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDTrafficLogger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDTrafficMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDVolumeManager
|| __TEXT.__text _CKAdoptPersonaID
|| __TEXT.__text _CKCurrentPersonaID
|| __TEXT.__text _CKDMMCSRegisterOptionDescription
|| __TEXT.__text _CKDPDateStatisticsReadFrom
|| __TEXT.__text _CKDPNotificationSyncResponsePushMessageReadFrom
|| __TEXT.__text _CKDPNotificationSyncResponseReadFrom
|| __TEXT.__text _CKDPOperationReadFrom
|| __TEXT.__text _CKDPParticipantReadFrom
|| __TEXT.__text _CKDPRecordChainParentReadFrom
|| __TEXT.__text _CKDPRecordFieldIdentifierReadFrom
|| __TEXT.__text _CKDPRecordFieldReadFrom
|| __TEXT.__text _CKDPRecordFieldValueReadFrom
|| __TEXT.__text _CKDPRecordReadFrom
|| __TEXT.__text _CKDPRecordStableUrlReadFrom
|| __TEXT.__text _CKDPRecordTypeReadFrom
|| __TEXT.__text _CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfoReadFrom
|| __TEXT.__text _CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsReadFrom
|| __TEXT.__text _CKDPRequestOperationHeaderReadFrom
|| __TEXT.__text _CKDPRequestOperationReadFrom
|| __TEXT.__text _CKDPRequestedFieldsReadFrom
|| __TEXT.__text _CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntryReadFrom
|| __TEXT.__text _CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValueReadFrom
|| __TEXT.__text _CKDPResponseOperationResultErrorAuxiliaryErrorReadFrom
|| __TEXT.__text _CKDPResponseOperationResultErrorClientReadFrom
|| __TEXT.__text _CKDPResponseOperationResultErrorExtensionReadFrom
|| __TEXT.__text _CKDPResponseOperationResultErrorReadFrom
|| __TEXT.__text _CKDPResponseOperationResultErrorServerReadFrom
|| __TEXT.__text _CKDPResponseOperationResultReadFrom
|| __TEXT.__text _CKDPShareIdentifierReadFrom
|| __TEXT.__text _CKDPShareMetadataReadFrom
|| __TEXT.__text _CKDPShareReadFrom
|| __TEXT.__text _CKDaemonOperationTypeForClass
|| __TEXT.__text _CKGetCacheDir
|| __TEXT.__text _CKGetEnterpriseVolumeCacheDirectory
|| __TEXT.__text _CKGetHomeCacheDir
|| __TEXT.__text _CKGetPersonaAwareCacheDirectory
|| __TEXT.__text _CKGetPersonaAwareHomeCacheDirectory
|| __TEXT.__text _CKIsPowerLoggingEnabled
|| __TEXT.__text _CKIsRunningInSyncBubble
|| __TEXT.__text _CKLinkCheck48d9728e8c354416a38f82379cbb35e3
|| __TEXT.__text _CKMuckingWithPersonas
|| __TEXT.__text _CKRegisterRepeatingXPCActivity
|| __TEXT.__text _CKThreadIsInEnterprisePersonaContext
|| __TEXT.__text _CKVerifyFilters
|| __TEXT.__text __isOperationAllowedIndependentlyInSyncBubble
|| __TEXT.__text _compareVersionStrings
|| __TEXT.__text _stringFromCKDTrafficLogType
__ Accounts: _ACAccountPropertyPersonaIdentifier
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierCloudKit
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kACRenewCredentialsReasonStringKey
__ Accounts: _kACRenewCredentialsShouldForceKey
__ Accounts: _kAccountDataclassBackup
__ Accounts: _kAccountDataclassBookmarks
__ Accounts: _kAccountDataclassCKDatabaseService
__ Accounts: _kAccountDataclassCloudPhotos
__ Accounts: _kAccountDataclassHealth
__ Accounts: _kAccountDataclassHome
__ Accounts: _kAccountDataclassKeychainSync
__ Accounts: _kAccountDataclassMessages
__ Accounts: _kAccountDataclassNews
__ Accounts: _kAccountDataclassNotes
__ Accounts: _kAccountDataclassShoebox
__ Accounts: _kAccountDataclassSiri
__ Accounts: _kAccountDataclassUbiquity
__ AppleAccount: _OBJC_CLASS_$_AAAuthenticateRequest
__ AppleAccount: _OBJC_CLASS_$_AADeviceListRequest
__ AppleAccount: _OBJC_CLASS_$_AADeviceListResponse
__ AppleAccount: _OBJC_CLASS_$_AARequester
__ AppleAccount: _OBJC_CLASS_$_AAUpdateProvisioningRequest
__ AppleAccount: _kAAProtocolAppleAccountInfoKey
__ AppleAccount: _kAAProtocolMobileMeDataKey
__ AppleAccount: _kAAProtocolPrimaryEmailVerifiedKey
__ ApplePushService: _APSConnectionOverrideNamedDelegatePort
__ ApplePushService: _APSEnvironmentDevelopment
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ AuthKit: _AKAuthenticationAlternateDSIDKey
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationContext
__ AuthKit: _OBJC_CLASS_$_AKAppleIDAuthenticationController
__ AuthKit: _OBJC_CLASS_$_AKUsernameFormatter
__ C2: _OBJC_CLASS_$_C2MetricOperationGroupOptions
__ C2: _OBJC_CLASS_$_C2MetricOperationOptions
__ C2: _OBJC_CLASS_$_C2MetricOptions
__ C2: _OBJC_CLASS_$_C2MetricRequestOptions
__ C2: _OBJC_CLASS_$_C2ReportMetrics
__ C2: _OBJC_CLASS_$_C2RequestManager
__ C2: _OBJC_CLASS_$_C2RequestOptions
__ CFNetwork: _NSURLAuthenticationMethodClientCertificate
__ CFNetwork: _NSURLAuthenticationMethodServerTrust
__ CFNetwork: _OBJC_CLASS_$_NSMutableURLRequest
__ CloudKit: _CKAPSEnvironmentEntitlementString
__ CloudKit: _CKActivitySharingContainerIdentifier
__ CloudKit: _CKAllClientEntitlementKeys
__ CloudKit: _CKAllTokensKey
__ CloudKit: _CKAppIdentifierFromTeamAppTuple
__ CloudKit: _CKAssetRepairPushProxyFormat
__ CloudKit: _CKBackupContainerIdentifierPrefix
__ CloudKit: _CKBluetoothContainerIdentifier
__ CloudKit: _CKBoolFromCKTernary
__ CloudKit: _CKCFArrayForEach
__ CloudKit: _CKCanRetryForError
__ CloudKit: _CKChainPrivateKeyFieldName
__ CloudKit: _CKClientLogCollectionBotEmail
__ CloudKit: _CKCloudDocsContainerIdentifier
__ CloudKit: _CKCloudPhotosContainerIdentifier
__ CloudKit: _CKContainerEnvironmentString
__ CloudKit: _CKContainerIDKey
__ CloudKit: _CKContainerIdentifierIsAppleInternal
__ CloudKit: _CKCreateDirectoryAtPath
__ CloudKit: _CKCreateGUID
__ CloudKit: _CKCurrentUserDefaultName
__ CloudKit: _CKDHTTPHeaders
__ CloudKit: _CKDPDateReadFrom
__ CloudKit: _CKDPIdentifierReadFrom
__ CloudKit: _CKDPLocationCoordinateReadFrom
__ CloudKit: _CKDPRecordIdentifierReadFrom
__ CloudKit: _CKDPRecordReferenceReadFrom
__ CloudKit: _CKDPRecordZoneIdentifierReadFrom
__ CloudKit: _CKDatabaseScopeString
__ CloudKit: _CKDatasAreBothNilOrEqual
__ CloudKit: _CKDeviceID
__ CloudKit: _CKEncryptedPublicSharingKeyFieldName
__ CloudKit: _CKErrorAccountPrimaryEmailKey
__ CloudKit: _CKErrorChainStringFromError
__ CloudKit: _CKErrorDomain
__ CloudKit: _CKErrorNotFoundItemIDKey
__ CloudKit: _CKErrorRetryAfterKey
__ CloudKit: _CKErrorServerDescriptionKey
__ CloudKit: _CKErrorShouldThrottleClient
__ CloudKit: _CKExtensionErrorPayloadKey
__ CloudKit: _CKGetGlobalQueue
__ CloudKit: _CKGetHomeDir
__ CloudKit: _CKGetRealPath
__ CloudKit: _CKHealthContainerIdentifier
__ CloudKit: _CKHexCharFromBytes
__ CloudKit: _CKHomeKitContainerIdentifier
__ CloudKit: _CKInternalErrorDomain
__ CloudKit: _CKInternalUnderlyingHTTPStatusKey
__ CloudKit: _CKIsPCSError
__ CloudKit: _CKIsRunningInTestHost
__ CloudKit: _CKKeyboardServicesContainerIdentifier
__ CloudKit: _CKKeychainSyncContainerIdentifer
__ CloudKit: _CKMailDropContainerIdentifier
__ CloudKit: _CKMessagesContainerIdentifer
__ CloudKit: _CKModifyRecordAccessOperationAccessGrantedKey
__ CloudKit: _CKModifyRecordAccessOperationAccessRevokedKey
__ CloudKit: _CKModifyRecordAccessOperationAccessTokenKey
__ CloudKit: _CKModifyRecordAccessOperationActionKey
__ CloudKit: _CKModifyRecordAccessOperationReferenceIdentifierKey
__ CloudKit: _CKNSIndexSet_enumerateInverseRangesInRange_options_usingBlock
__ CloudKit: _CKNewsContainerIdentifierPrefix
__ CloudKit: _CKNotesContainerIdentifierPrefix
__ CloudKit: _CKOperationLoggableProgressArguments
__ CloudKit: _CKOperationProgressCallbackClasses
__ CloudKit: _CKPIDIsStillAlive
__ CloudKit: _CKPartialErrorsByItemIDKey
__ CloudKit: _CKProcessIndexedArrayKey
__ CloudKit: _CKProductType
__ CloudKit: _CKProductVersion
__ CloudKit: _CKPushEnvironmentServerPreferred
__ CloudKit: _CKQoSClassFromNSQualityOfService
__ CloudKit: _CKQualityOfServiceOrdering
__ CloudKit: _CKRawhideKeyRollingContainerIdentifier
__ CloudKit: _CKRecordAccessGrantedKey
__ CloudKit: _CKRecordAccessKey
__ CloudKit: _CKRecordChangedErrorAncestorRecordKey
__ CloudKit: _CKRecordChangedErrorClientRecordKey
__ CloudKit: _CKRecordChangedErrorServerRecordKey
__ CloudKit: _CKRecordCreationDateKey
__ CloudKit: _CKRecordCreatorUserRecordIDKey
__ CloudKit: _CKRecordETagKey
__ CloudKit: _CKRecordLastModifiedUserRecordIDKey
__ CloudKit: _CKRecordModificationDateKey
__ CloudKit: _CKRecordNameZoneWideShare
__ CloudKit: _CKRecordParentKey
__ CloudKit: _CKRecordRecordIDKey
__ CloudKit: _CKRecordShareInfoKey
__ CloudKit: _CKRecordShareKey
__ CloudKit: _CKRecordTypeShare
__ CloudKit: _CKRecordZoneDefaultName
__ CloudKit: _CKReferenceActionValidate
__ CloudKit: _CKRequestUUID
__ CloudKit: _CKSafariBookmarksContainerIdentifier
__ CloudKit: _CKServerEnvironmentFromString
__ CloudKit: _CKShareTitleKey
__ CloudKit: _CKShareTypeKey
__ CloudKit: _CKSharingdContainerIdentifier
__ CloudKit: _CKShortRandomID
__ CloudKit: _CKShouldWrapErrorFetchingRecords
__ CloudKit: _CKSiriContainerIdentifierPrefix
__ CloudKit: _CKSocialGamingContainerIdentifier
__ CloudKit: _CKStringForDiscretionaryNetworkBehavior
__ CloudKit: _CKStringForNetworkServiceType
__ CloudKit: _CKStringForQOS
__ CloudKit: _CKStringFromAccountChangeType
__ CloudKit: _CKStringFromAccountStatus
__ CloudKit: _CKStringFromCKMMCSEncryptionSupport
__ CloudKit: _CKStringFromParticipantPermission
__ CloudKit: _CKStringFromParticipantRole
__ CloudKit: _CKStringFromServerEnvironment
__ CloudKit: _CKStringWithData
__ CloudKit: _CKStringsAreBothNilOrEqual
__ CloudKit: _CKTTYCallHistoryContainerIdentifier
__ CloudKit: _CKTabIndentAtDepth
__ CloudKit: _CKTernaryFromBOOL
__ CloudKit: _CKTriggerAutoBugCaptureWithFormatSignature
__ CloudKit: _CKValidateKeyName
__ CloudKit: _CKValueIsAcceptablePredicateClass
__ CloudKit: _CKWalletContainerIdentifierPrefix
__ CloudKit: _CKWarnForIncorrectServiceIdentity
__ CloudKit: _CKWarnForInvalidApplicationIdentifier
__ CloudKit: _CKWeakLinkClass
__ CloudKit: _CKWeakLinkSymbol
__ CloudKit: _CKWebSharingBaseTokenKey
__ CloudKit: _CKWebSharingIsReadOnly
__ CloudKit: _CKWebSharingIsShared
__ CloudKit: _CKWebSharingOperationShareActionKey
__ CloudKit: _CKWebSharingOperationShareBaseTokenKey
__ CloudKit: _CKWebSharingOperationSharingKeyKey
__ CloudKit: _CKWebSharingOperationWasSharedKey
__ CloudKit: _CKWebSharingOperationWasUnsharedKey
__ CloudKit: _CKWebSharingProtectionDataKey
__ CloudKit: _CKiADContainerIdentifier
__ CloudKit: _NSTimeIntervalToClosestXPCActivityInterval
__ CloudKit: _OBJC_CLASS_$_CKAccountInfo
__ CloudKit: _OBJC_CLASS_$_CKAccountOverrideInfo
__ CloudKit: _OBJC_CLASS_$_CKApplicationPermissionGroup
__ CloudKit: _OBJC_CLASS_$_CKAsset
__ CloudKit: _OBJC_CLASS_$_CKAssetDownloadPreauthorization
__ CloudKit: _OBJC_CLASS_$_CKAssetRepairOperationUtilities
__ CloudKit: _OBJC_CLASS_$_CKAssetReuploadExpectedProperties
__ CloudKit: _OBJC_CLASS_$_CKAssetTransferOptions
__ CloudKit: _OBJC_CLASS_$_CKAssetUploadRequestMetadata
__ CloudKit: _OBJC_CLASS_$_CKAutoBugCaptureMetadata
__ CloudKit: _OBJC_CLASS_$_CKBehaviorOptions
__ CloudKit: _OBJC_CLASS_$_CKCodeFunctionInvokeOperationInfo
__ CloudKit: _OBJC_CLASS_$_CKContainerID
__ CloudKit: _OBJC_CLASS_$_CKContainerSetupInfo
__ CloudKit: _OBJC_CLASS_$_CKDPDate
__ CloudKit: _OBJC_CLASS_$_CKDPIdentifier
__ CloudKit: _OBJC_CLASS_$_CKDPLocationCoordinate
__ CloudKit: _OBJC_CLASS_$_CKDPRecordIdentifier
__ CloudKit: _OBJC_CLASS_$_CKDPRecordReference
__ CloudKit: _OBJC_CLASS_$_CKDPRecordZoneIdentifier
__ CloudKit: _OBJC_CLASS_$_CKDatabase
__ CloudKit: _OBJC_CLASS_$_CKDatabaseOperationInfo
__ CloudKit: _OBJC_CLASS_$_CKDatabaseSubscription
__ CloudKit: _OBJC_CLASS_$_CKDeviceToDeviceShareInvitationToken
__ CloudKit: _OBJC_CLASS_$_CKEncryptedData
__ CloudKit: _OBJC_CLASS_$_CKEncryptedDate
__ CloudKit: _OBJC_CLASS_$_CKEncryptedDateArray
__ CloudKit: _OBJC_CLASS_$_CKEncryptedDouble
__ CloudKit: _OBJC_CLASS_$_CKEncryptedDoubleArray
__ CloudKit: _OBJC_CLASS_$_CKEncryptedEmptyArray
__ CloudKit: _OBJC_CLASS_$_CKEncryptedLocation
__ CloudKit: _OBJC_CLASS_$_CKEncryptedLocationArray
__ CloudKit: _OBJC_CLASS_$_CKEncryptedLongLong
__ CloudKit: _OBJC_CLASS_$_CKEncryptedLongLongArray
__ CloudKit: _OBJC_CLASS_$_CKEncryptedReference
__ CloudKit: _OBJC_CLASS_$_CKEncryptedString
__ CloudKit: _OBJC_CLASS_$_CKEncryptedStringArray
__ CloudKit: _OBJC_CLASS_$_CKException
__ CloudKit: _OBJC_CLASS_$_CKFetchArchivedRecordsOptions
__ CloudKit: _OBJC_CLASS_$_CKFetchDatabaseChangesOperationResult
__ CloudKit: _OBJC_CLASS_$_CKFetchNotificationChangesOperationResult
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordChangesOperationResult
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZoneChangesOperationInfo
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordZonesOperationInfo
__ CloudKit: _OBJC_CLASS_$_CKFetchRecordsOperationInfo
__ CloudKit: _OBJC_CLASS_$_CKFetchShareMetadataOperationInfo
__ CloudKit: _OBJC_CLASS_$_CKFetchUserQuotaOperationResult
__ CloudKit: _OBJC_CLASS_$_CKFetchWebAuthTokenOperationResult
__ CloudKit: _OBJC_CLASS_$_CKFetchWhitelistedBundleIDsOperationResult
__ CloudKit: _OBJC_CLASS_$_CKFileMetadata
__ CloudKit: _OBJC_CLASS_$_CKFileOpenInfo
__ CloudKit: _OBJC_CLASS_$_CKFlowControl
__ CloudKit: _OBJC_CLASS_$_CKInternalError
__ CloudKit: _OBJC_CLASS_$_CKLocationSortDescriptor
__ CloudKit: _OBJC_CLASS_$_CKMetric
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordZonesOperationInfo
__ CloudKit: _OBJC_CLASS_$_CKModifyRecordsOperationInfo
__ CloudKit: _OBJC_CLASS_$_CKNotification
__ CloudKit: _OBJC_CLASS_$_CKNotificationID
__ CloudKit: _OBJC_CLASS_$_CKNotificationInfo
__ CloudKit: _OBJC_CLASS_$_CKObject
__ CloudKit: _OBJC_CLASS_$_CKOperationConfiguration
__ CloudKit: _OBJC_CLASS_$_CKOperationGroup
__ CloudKit: _OBJC_CLASS_$_CKOperationGroupSystemImposedInfo
__ CloudKit: _OBJC_CLASS_$_CKOperationGroupSystemImposedInfoConfiguration
__ CloudKit: _OBJC_CLASS_$_CKOperationInfo
__ CloudKit: _OBJC_CLASS_$_CKOperationMetrics
__ CloudKit: _OBJC_CLASS_$_CKOperationResult
__ CloudKit: _OBJC_CLASS_$_CKPCSDiagnosticInformation
__ CloudKit: _OBJC_CLASS_$_CKPackage
__ CloudKit: _OBJC_CLASS_$_CKPackageItem
__ CloudKit: _OBJC_CLASS_$_CKPackageSection
__ CloudKit: _OBJC_CLASS_$_CKPackageUploadRequestMetadata
__ CloudKit: _OBJC_CLASS_$_CKPrettyError
__ CloudKit: _OBJC_CLASS_$_CKPublicKey
__ CloudKit: _OBJC_CLASS_$_CKQueryCursor
__ CloudKit: _OBJC_CLASS_$_CKQueryOperationResult
__ CloudKit: _OBJC_CLASS_$_CKQuerySubscription
__ CloudKit: _OBJC_CLASS_$_CKRecord
__ CloudKit: _OBJC_CLASS_$_CKRecordGraph
__ CloudKit: _OBJC_CLASS_$_CKRecordID
__ CloudKit: _OBJC_CLASS_$_CKRecordZone
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneID
__ CloudKit: _OBJC_CLASS_$_CKRecordZoneSubscription
__ CloudKit: _OBJC_CLASS_$_CKReference
__ CloudKit: _OBJC_CLASS_$_CKRequestInfo
__ CloudKit: _OBJC_CLASS_$_CKSQLite
__ CloudKit: _OBJC_CLASS_$_CKSQLitePool
__ CloudKit: _OBJC_CLASS_$_CKServerChangeToken
__ CloudKit: _OBJC_CLASS_$_CKShare
__ CloudKit: _OBJC_CLASS_$_CKShareMetadata
__ CloudKit: _OBJC_CLASS_$_CKShareParticipant
__ CloudKit: _OBJC_CLASS_$_CKSignatureGenerator
__ CloudKit: _OBJC_CLASS_$_CKStreamingAsset
__ CloudKit: _OBJC_CLASS_$_CKSyncingClientInfo
__ CloudKit: _OBJC_CLASS_$_CKUserIdentity
__ CloudKit: _OBJC_CLASS_$_CKUserIdentityLookupInfo
__ CloudKit: _OBJC_CLASS_$_CKUserNotificationUtilities
__ CloudKit: _OBJC_CLASS_$_CKZonePCSDiagnosticInformation
__ CloudKit: _OBJC_EHTYPE_$_CKException
__ CloudKit: _OBJC_METACLASS_$_CKDatabaseOperationInfo
__ CloudKit: _OBJC_METACLASS_$_CKObject
__ CloudKit: _OBJC_METACLASS_$_CKOperationInfo
__ CloudKit: _OBJC_METACLASS_$_CKSQLite
__ CloudKit: __CKCheckArgument
__ CloudKit: __CKSimulateCrash
__ CloudKit: _ck_call_or_dispatch_sync_if_not_key
__ CloudKit: _ck_log_facilities_initailize_static
__ CloudKit: _ck_log_facility_ck
__ CloudKit: _ck_log_facility_data_repair
__ CloudKit: _ck_log_facility_mmcs
__ CloudKit: _ck_log_facility_op
__ CloudKit: _ck_log_facility_pcs
__ CloudKit: _ck_log_facility_request
__ CloudKit: _ck_log_facility_sql
__ CloudKit: _ck_log_facility_status
__ CloudKit: _ck_log_facility_traffic_binary
__ CloudKit: _kCKAccountChangedNotificationKey
__ CloudKit: _kCKAllowAccessDuringBuddyEntitlementKey
__ CloudKit: _kCKAllowAccountDetailAccess
__ CloudKit: _kCKAllowCustomAccountsKey
__ CloudKit: _kCKAllowDeviceIdentifierKey
__ CloudKit: _kCKAllowFakeEntitlementsKey
__ CloudKit: _kCKAllowLightweightPCSEntitlementKey
__ CloudKit: _kCKAllowMasqueradingEntitlementKey
__ CloudKit: _kCKAllowPackagesKey
__ CloudKit: _kCKAllowProtectionDataEntitlementKey
__ CloudKit: _kCKAllowSetEnvironmentEntitlementKey
__ CloudKit: _kCKAllowUnverifiedAccountEntitlementKey
__ CloudKit: _kCKAllowZoneProtectionDataEntitlementKey
__ CloudKit: _kCKAnonymousAccountKey
__ CloudKit: _kCKAssetChunkLength
__ CloudKit: _kCKAssociatedApplicationIdentifierKey
__ CloudKit: _kCKBehaviorOptionConfigBaseURLKey
__ CloudKit: _kCKBehaviorOptionSetupBaseURLKey
__ CloudKit: _kCKBehaviorOptionsChangedKeysKey
__ CloudKit: _kCKBehaviorOptionsChangedKeysNotification
__ CloudKit: _kCKCloudKitSystemServiceKey
__ CloudKit: _kCKCloudServicesCloudKitServiceEntitlementKey
__ CloudKit: _kCKCloudServicesEntitlementKey
__ CloudKit: _kCKCodeFunctionInvokeOperationCallbackInitialResponseReceived
__ CloudKit: _kCKCodeFunctionInvokeOperationCallbackRecordFetchCommand
__ CloudKit: _kCKCodeFunctionInvokeOperationCallbackRecordFetchCompletion
__ CloudKit: _kCKCodeFunctionInvokeOperationCallbackRecordFetchProgress
__ CloudKit: _kCKCodeFunctionInvokeOperationCallbackReplaceLocalSerializations
__ CloudKit: _kCKCodeFunctionInvokeOperationCallbackReplaceWireSerializations
__ CloudKit: _kCKCodeFunctionInvokeOperationCallbackTypeKey
__ CloudKit: _kCKContainerEnvironmentEntitlementKey
__ CloudKit: _kCKContainerEnvironmentOverridesEntitlementKey
__ CloudKit: _kCKContainerEnvironmentProduction
__ CloudKit: _kCKContainerEnvironmentSandbox
__ CloudKit: _kCKDProtobufContentType
__ CloudKit: _kCKDarkWakeEnabledEntitlementKey
__ CloudKit: _kCKDefaultShareURLDisplayedHostname
__ CloudKit: _kCKDefaultShareURLFullHostname
__ CloudKit: _kCKDisplaysSystemAcceptPromptEntitlementKey
__ CloudKit: _kCKExplicitCodeOperationURLEntitlementKey
__ CloudKit: _kCKFetchRecordsOperationCallbackCommand
__ CloudKit: _kCKFetchRecordsOperationCallbackCompletion
__ CloudKit: _kCKFetchRecordsOperationCallbackKey
__ CloudKit: _kCKFetchRecordsOperationCallbackProgress
__ CloudKit: _kCKIdentityUpdateNotificationKey
__ CloudKit: _kCKKeychainDomain
__ CloudKit: _kCKMachServiceName
__ CloudKit: _kCKModifyRecordsOperationCallbackCompletion
__ CloudKit: _kCKModifyRecordsOperationCallbackKey
__ CloudKit: _kCKModifyRecordsOperationCallbackProgress
__ CloudKit: _kCKModifyRecordsOperationCallbackUploadCompletion
__ CloudKit: _kCKNonLegacySharingURLEntitlementKey
__ CloudKit: _kCKNotificationAPSAlertActionLocalizationKey
__ CloudKit: _kCKNotificationAPSAlertBodyKey
__ CloudKit: _kCKNotificationAPSAlertLaunchImageKey
__ CloudKit: _kCKNotificationAPSAlertLocalizationArgsKey
__ CloudKit: _kCKNotificationAPSAlertLocalizationKey
__ CloudKit: _kCKNotificationAPSSubtitleLocalizationArgsKey
__ CloudKit: _kCKNotificationAPSSubtitleLocalizationKey
__ CloudKit: _kCKNotificationAPSTitleLocalizationArgsKey
__ CloudKit: _kCKNotificationAPSTitleLocalizationKey
__ CloudKit: _kCKNotificationCKKey
__ CloudKit: _kCKOperationCheckpointLongLivedOpPersistedKey
__ CloudKit: _kCKOperationCheckpointSystemDidImposeInfoKey
__ CloudKit: _kCKOperationCheckpointSystemImposedInfoKey
__ CloudKit: _kCKOperationProgressArchivedRecordStatusKey
__ CloudKit: _kCKOperationProgressArrayIndexKey
__ CloudKit: _kCKOperationProgressAssetArrayIndexKey
__ CloudKit: _kCKOperationProgressAssetKey
__ CloudKit: _kCKOperationProgressAssetPaddedSizeKey
__ CloudKit: _kCKOperationProgressAssetSignatureKey
__ CloudKit: _kCKOperationProgressAssetSizeKey
__ CloudKit: _kCKOperationProgressAssetUploadReceiptExpirationKey
__ CloudKit: _kCKOperationProgressAssetUploadReceiptKey
__ CloudKit: _kCKOperationProgressAssetUploadedKey
__ CloudKit: _kCKOperationProgressClearAssetKeyKey
__ CloudKit: _kCKOperationProgressClientArrayKey
__ CloudKit: _kCKOperationProgressClientChangeTokenDataKey
__ CloudKit: _kCKOperationProgressCommandKey
__ CloudKit: _kCKOperationProgressCreationDateKey
__ CloudKit: _kCKOperationProgressDataKey
__ CloudKit: _kCKOperationProgressDeletedKey
__ CloudKit: _kCKOperationProgressDeserializedRecordsKey
__ CloudKit: _kCKOperationProgressETagKey
__ CloudKit: _kCKOperationProgressErrorKey
__ CloudKit: _kCKOperationProgressFetchInfoKey
__ CloudKit: _kCKOperationProgressModificationDateKey
__ CloudKit: _kCKOperationProgressNotificationKey
__ CloudKit: _kCKOperationProgressOffsetKey
__ CloudKit: _kCKOperationProgressOperationKey
__ CloudKit: _kCKOperationProgressPCSKeyIDKey
__ CloudKit: _kCKOperationProgressParticipantKey
__ CloudKit: _kCKOperationProgressParticipantKeyKey
__ CloudKit: _kCKOperationProgressPercentageKey
__ CloudKit: _kCKOperationProgressProtectionDataKey
__ CloudKit: _kCKOperationProgressProtectionDiagnosticsKey
__ CloudKit: _kCKOperationProgressQueryCursorKey
__ CloudKit: _kCKOperationProgressRecordChangesPendingArchivedRecordsKey
__ CloudKit: _kCKOperationProgressRecordChangesStatusKey
__ CloudKit: _kCKOperationProgressRecordIDKey
__ CloudKit: _kCKOperationProgressRecordIDsInFlightKey
__ CloudKit: _kCKOperationProgressRecordKey
__ CloudKit: _kCKOperationProgressRecordKeyKey
__ CloudKit: _kCKOperationProgressRecordTypeKey
__ CloudKit: _kCKOperationProgressRecordVersionsKey
__ CloudKit: _kCKOperationProgressRecordZoneKey
__ CloudKit: _kCKOperationProgressReferenceSignatureKey
__ CloudKit: _kCKOperationProgressResponseSerializedRequestKey
__ CloudKit: _kCKOperationProgressResponseWireSerializationsKey
__ CloudKit: _kCKOperationProgressSerializedResponseKey
__ CloudKit: _kCKOperationProgressServerChangeTokenKey
__ CloudKit: _kCKOperationProgressServerRecordKey
__ CloudKit: _kCKOperationProgressShareKey
__ CloudKit: _kCKOperationProgressShareMetadataKey
__ CloudKit: _kCKOperationProgressShareURLKey
__ CloudKit: _kCKOperationProgressSubscriptionKey
__ CloudKit: _kCKOperationProgressSyncClientInfoKey
__ CloudKit: _kCKOperationProgressSyncClientProgressKey
__ CloudKit: _kCKOperationProgressUserIdentityKey
__ CloudKit: _kCKOperationProgressWireEnvelopesKey
__ CloudKit: _kCKOperationProgressWireSerializationsKey
__ CloudKit: _kCKOperationProgressWrappedAssetKeyKey
__ CloudKit: _kCKOperationProgressWriteKey
__ CloudKit: _kCKOperationProgressZoneIDKey
__ CloudKit: _kCKOperationProgressZoneWasDeletedKey
__ CloudKit: _kCKOperationProgressZoneWasPurgedKey
__ CloudKit: _kCKOperationProgressZoneishPCSKeyIDKey
__ CloudKit: _kCKOperationStatisticsRequestInfoKey
__ CloudKit: _kCKOutOfProcessUIEntitlementKey
__ CloudKit: _kCKPCSServiceNameForContainerMapEntitlementKey
__ CloudKit: _kCKPackageDaemonDirectoryName
__ CloudKit: _kCKParticipantPIIEntitlementKey
__ CloudKit: _kCKPrefixEntitlementKey
__ CloudKit: _kCKPublishAssetsOperationCallbackCompletion
__ CloudKit: _kCKPublishAssetsOperationCallbackKey
__ CloudKit: _kCKSPIWhitelistEntitlementKey
__ CloudKit: _kCKStatusReportNotificationKey
__ CloudKit: _kCKSupportServiceEntitlementKey
__ CloudKit: _kCKSyncRequestOperationCallbackKey
__ CloudKit: _kCKSyncRequestOperationClientArrayCallback
__ CloudKit: _kCKSyncRequestOperationClientSyncCompletedCallback
__ CloudKit: _kCKSyncRequestOperationClientSyncProgressedCallback
__ CloudKit: _kCKSyncRequestOperationClientSyncStartedCallback
__ CloudKit: _kCKVFSOpenByIDKey
__ CloudKit: _stringForCKErrorCode
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _CNContactPhoneNumbersKey
__ Contacts: _OBJC_CLASS_$_CNContactFetchRequest
__ Contacts: _OBJC_CLASS_$_CNContactStore
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreCDP: _CDPStateErrorDomain
__ CoreCDP: _OBJC_CLASS_$_CDPStateController
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFBundleCopyResourceURL
__ CoreFoundation: _CFBundleGetValueForInfoDictionaryKey
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFErrorCopyUserInfo
__ CoreFoundation: _CFErrorGetCode
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveObserver
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopPerformBlock
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopWakeUp
__ CoreFoundation: _CFStreamCreateBoundPair
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _CFWriteStreamSetDispatchQueue
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleCountryCode
__ CoreFoundation: _NSLocaleLanguageCode
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSURLContentAccessDateKey
__ CoreFoundation: _NSURLContentModificationDateKey
__ CoreFoundation: _NSURLCreationDateKey
__ CoreFoundation: _NSURLFileResourceTypeKey
__ CoreFoundation: _NSURLFileResourceTypeRegular
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOutputStream
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSStream
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFBundleCreateUnique
__ CoreFoundation: __CFCopyServerVersionDictionary
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: __CFStringCompareForHFS
__ CoreFoundation: __CFXPCCreateXPCObjectFromCFObject
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFBundleDisplayNameKey
__ CoreFoundation: __kCFBundleIconFileKey
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanFalse
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFBundleIdentifierKey
__ CoreFoundation: _kCFBundleNameKey
__ CoreFoundation: _kCFBundleVersionKey
__ CoreFoundation: _kCFErrorDomainPOSIX
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationIconURLKey
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreServices: _LSInternalApplicationType
__ CoreServices: _LSSystemApplicationType
__ CoreServices: _LSUserApplicationType
__ CoreServices: _OBJC_CLASS_$_LSApplicationProxy
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSPlugInKitProxy
__ DuetActivityScheduler: _OBJC_CLASS_$__DASActivityGroup
__ DuetActivityScheduler: _OBJC_CLASS_$__DASScheduler
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSPageSize
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantValueExpression
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSDistributedNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_CLASS_$_NSXPCListener
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSOperationQueue
__ IDS: _IDSCopyIDForPhoneNumber
__ IMCore: _OBJC_CLASS_$_IMCloudKitHooks
__ LoggingSupport: _OBJC_CLASS_$_OSActivityStream
__ LoggingSupport: _OBJC_CLASS_$_OSLogPersistence
__ LoggingSupport: _OBJC_METACLASS_$_OSActivityStream
__ MMCS: _MMCSEngineCancelRequests
__ MMCS: _MMCSEngineCopyStatusReport
__ MMCS: _MMCSEngineCreate
__ MMCS: _MMCSEngineDestroy
__ MMCS: _MMCSEngineSetMetricsEnabled
__ MMCS: _MMCSGetItems
__ MMCS: _MMCSGetItemsWithSection
__ MMCS: _MMCSGetMaxChunkCountForSection
__ MMCS: _MMCSGetRegisteredItems
__ MMCS: _MMCSICloudAuthGetRequestOptions
__ MMCS: _MMCSICloudRequestHeadersCopy
__ MMCS: _MMCSItemReaderWriterCreate
__ MMCS: _MMCSOperationMetricCombineMetrics
__ MMCS: _MMCSPackageSectionSignatureGeneratorCreate
__ MMCS: _MMCSPackageSectionSignatureGeneratorFinish
__ MMCS: _MMCSPackageSectionSignatureGeneratorUpdate
__ MMCS: _MMCSPutItems
__ MMCS: _MMCSPutSection
__ MMCS: _MMCSReferenceObjectCreateWithType
__ MMCS: _MMCSReferenceSignatureCreateWithReferenceObject
__ MMCS: _MMCSRegisterItems
__ MMCS: _MMCSRegisteredItemCount
__ MMCS: _MMCSSignatureAndSchemeSize
__ MMCS: _MMCSSignatureGeneratorCreate
__ MMCS: _MMCSSignatureGeneratorFinish
__ MMCS: _MMCSSignatureGeneratorUpdate
__ MMCS: _MMCSUnregisterFiles
__ MMCS: _MMCSUpdateItems
__ MMCS: _kMMCSAuthorizationToken
__ MMCS: _kMMCSBoundaryKey
__ MMCS: _kMMCSChunkCount
__ MMCS: _kMMCSDefaultReaderWriterSparseAware
__ MMCS: _kMMCSDerivativeAssetDownloadURL
__ MMCS: _kMMCSDerivativeAssetEstimatedSize
__ MMCS: _kMMCSEnginePropertyEnableGetChunks
__ MMCS: _kMMCSEnginePropertyEnableGetResume
__ MMCS: _kMMCSEnginePropertyEnableLocallySatisfiedGets
__ MMCS: _kMMCSErrorDomain
__ MMCS: _kMMCSErrorRetryAfterKey
__ MMCS: _kMMCSErrorSupplementalDictionaryKey
__ MMCS: _kMMCSFileSize
__ MMCS: _kMMCSItemChunkLength
__ MMCS: _kMMCSItemID
__ MMCS: _kMMCSItemReaderWriterFileGenerationNumber
__ MMCS: _kMMCSItemReaderWriterFileModificationTime
__ MMCS: _kMMCSItemReaderWriterFileSize
__ MMCS: _kMMCSItemReaderWriterFileSystemFileNumber
__ MMCS: _kMMCSPaddedFileSize
__ MMCS: _kMMCSPutReceipt
__ MMCS: _kMMCSPutReceiptExpiry
__ MMCS: _kMMCSReferenceObject
__ MMCS: _kMMCSReferenceSignature
__ MMCS: _kMMCSRegisterFileOptionChunk
__ MMCS: _kMMCSRequestOptionAllowsCellularAccess
__ MMCS: _kMMCSRequestOptionAllowsPowerNapScheduling
__ MMCS: _kMMCSRequestOptionAllowsRetryForBackgroundDataTasks
__ MMCS: _kMMCSRequestOptionAuthTokenTimeout
__ MMCS: _kMMCSRequestOptionBackgroundConnectionPoolName
__ MMCS: _kMMCSRequestOptionBackgroundConnectionPoolSize
__ MMCS: _kMMCSRequestOptionChunkingLibraryCorruptionMode
__ MMCS: _kMMCSRequestOptionContainerIdentifier
__ MMCS: _kMMCSRequestOptionDiscretionaryNetworkBehavior
__ MMCS: _kMMCSRequestOptionDuetPreClearedMode
__ MMCS: _kMMCSRequestOptionInsertHeaders
__ MMCS: _kMMCSRequestOptionItemOptions
__ MMCS: _kMMCSRequestOptionMetricOptions
__ MMCS: _kMMCSRequestOptionNetworkServiceType
__ MMCS: _kMMCSRequestOptionPreauthorization
__ MMCS: _kMMCSRequestOptionPriority
__ MMCS: _kMMCSRequestOptionQoS
__ MMCS: _kMMCSRequestOptionReaderWriterCallbackForDownloads
__ MMCS: _kMMCSRequestOptionResumableContainerLimpMode
__ MMCS: _kMMCSRequestOptionRetrievePastRegistration
__ MMCS: _kMMCSRequestOptionReturnPreauthorizationRequestObject
__ MMCS: _kMMCSRequestOptionServerProtocolVersion
__ MMCS: _kMMCSRequestOptionSourceApplicationBundleIdentifier
__ MMCS: _kMMCSRequestOptionSourceApplicationSecondaryBundleIdentifier
__ MMCS: _kMMCSRequestOptionStreamOptions
__ MMCS: _kMMCSRequestOptionUseRegistryForDownloads
__ MMCS: _kMMCSResultError
__ MMCS: _kMMCSSignature
__ MMCS: _kMMCSUnwrappingState
__ MMCS: _kMMCSWrappingState
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileKeyBag: _MKBBackupClose
__ MobileKeyBag: _MKBBackupCreateFromFileDescriptors
__ MobileKeyBag: _MKBBackupPread
__ MobileKeyBag: _MKBBackupSize
__ MobileKeyBag: _MKBDeviceUnlockedSinceBoot
__ MobileKeyBag: _kMobileKeyBagLockStatusNotification
__ PowerLog: _PLLogRegisteredEvent
__ ProtectedCloudStorage: _OBJC_CLASS_$_PCSAccountManager
__ ProtectedCloudStorage: _OBJC_CLASS_$_PCSShareProtectionObject
__ ProtectedCloudStorage: _PCSDeriveIdentity
__ ProtectedCloudStorage: _PCSFPAddEncryptedSharePCS
__ ProtectedCloudStorage: _PCSFPAddPrivateKey
__ ProtectedCloudStorage: _PCSFPAddPublicIdentity
__ ProtectedCloudStorage: _PCSFPAddPublicIdentityWithShareFlags
__ ProtectedCloudStorage: _PCSFPAddSharePCS
__ ProtectedCloudStorage: _PCSFPCopyCurrentPrivateKey
__ ProtectedCloudStorage: _PCSFPCopyDecryptedData
__ ProtectedCloudStorage: _PCSFPCopyDiagnostic
__ ProtectedCloudStorage: _PCSFPCopyEncryptedData
__ ProtectedCloudStorage: _PCSFPCopyExported
__ ProtectedCloudStorage: _PCSFPCopyKeyIDs
__ ProtectedCloudStorage: _PCSFPCopyObject
__ ProtectedCloudStorage: _PCSFPCopyPrivateKey
__ ProtectedCloudStorage: _PCSFPCopyPublicIdentities
__ ProtectedCloudStorage: _PCSFPCopyRecoverPCS
__ ProtectedCloudStorage: _PCSFPCopyTruncatedKeyIDFromEncryptedData
__ ProtectedCloudStorage: _PCSFPCopyUnwrappedKey
__ ProtectedCloudStorage: _PCSFPCopyWrappedKey
__ ProtectedCloudStorage: _PCSFPCreate
__ ProtectedCloudStorage: _PCSFPCreatePEMData
__ ProtectedCloudStorage: _PCSFPCreatePrivateKey
__ ProtectedCloudStorage: _PCSFPCreateUniqueID
__ ProtectedCloudStorage: _PCSFPCreateWithExported
__ ProtectedCloudStorage: _PCSFPGetAuthorshipIdentity
__ ProtectedCloudStorage: _PCSFPGetAvailableMasterKeyID
__ ProtectedCloudStorage: _PCSFPGetCurrentMasterKeyID
__ ProtectedCloudStorage: _PCSFPGetUnwrapPublicIdentity
__ ProtectedCloudStorage: _PCSFPRemovePrivateKey
__ ProtectedCloudStorage: _PCSFPRemovePublicIdentity
__ ProtectedCloudStorage: _PCSFPRemoveSharePCS
__ ProtectedCloudStorage: _PCSFPRollMasterKey
__ ProtectedCloudStorage: _PCSFPSetAuthorshipIdentity
__ ProtectedCloudStorage: _PCSFPSetCurrentPrivateKey
__ ProtectedCloudStorage: _PCSFPSetOwnerIdentity
__ ProtectedCloudStorage: _PCSFPShouldRoll
__ ProtectedCloudStorage: _PCSFPStatus
__ ProtectedCloudStorage: _PCSFPSupportFeature
__ ProtectedCloudStorage: _PCSFPUpdateIdentityAndRollZoneKey
__ ProtectedCloudStorage: _PCSFPUpdateZoneKey
__ ProtectedCloudStorage: _PCSGetBoundaryKey
__ ProtectedCloudStorage: _PCSGetPublicIdentitites
__ ProtectedCloudStorage: _PCSIdentityCopyCurrentKeyFingerprint
__ ProtectedCloudStorage: _PCSIdentityCopyExportedPrivateKey
__ ProtectedCloudStorage: _PCSIdentityCopyExportedPublicKey
__ ProtectedCloudStorage: _PCSIdentityCopyExternalForm
__ ProtectedCloudStorage: _PCSIdentityCopyPublicIdentity
__ ProtectedCloudStorage: _PCSIdentityCreateDiversifiedIdentityOptions
__ ProtectedCloudStorage: _PCSIdentityCreateExportedRawCompact
__ ProtectedCloudStorage: _PCSIdentityCreateFromRaw
__ ProtectedCloudStorage: _PCSIdentityCreateRandomCompactRaw
__ ProtectedCloudStorage: _PCSIdentityGetKeyID
__ ProtectedCloudStorage: _PCSIdentityGetPublicKey
__ ProtectedCloudStorage: _PCSIdentityGetServiceName
__ ProtectedCloudStorage: _PCSIdentityIsFullManatee
__ ProtectedCloudStorage: _PCSIdentityRecoverFDE
__ ProtectedCloudStorage: _PCSIdentitySetAddIdentity
__ ProtectedCloudStorage: _PCSIdentitySetCopyCurrentIdentityWithError
__ ProtectedCloudStorage: _PCSIdentitySetCopyCurrentPublicIdentityWithError
__ ProtectedCloudStorage: _PCSIdentitySetCopyIdentities
__ ProtectedCloudStorage: _PCSIdentitySetCopyIdentity
__ ProtectedCloudStorage: _PCSIdentitySetCopyService
__ ProtectedCloudStorage: _PCSIdentitySetCopySet
__ ProtectedCloudStorage: _PCSIdentitySetCreate
__ ProtectedCloudStorage: _PCSIdentitySetCreateMutable
__ ProtectedCloudStorage: _PCSIdentitySetCreateNamed
__ ProtectedCloudStorage: _PCSIdentitySetEnumeratePublicKeys
__ ProtectedCloudStorage: _PCSIdentitySetSetCurrentIdentity
__ ProtectedCloudStorage: _PCSObjectCreateFromExportedWithIdentitiesAndOptions
__ ProtectedCloudStorage: _PCSObjectCreateFromExportedWithKeyedPCSAndOptions
__ ProtectedCloudStorage: _PCSPublicIdentityCopyCurrentKeyFingerprint
__ ProtectedCloudStorage: _PCSPublicIdentityCopyPublicKey
__ ProtectedCloudStorage: _PCSPublicIdentityCreateFromKeyData
__ ProtectedCloudStorage: _PCSPublicIdentityGetPublicID
__ ProtectedCloudStorage: _PCSPublicIdentityGetServiceName
__ ProtectedCloudStorage: _PCSServiceItemGetNumberByName
__ ProtectedCloudStorage: _PCSServiceItemTypeIsManatee
__ ProtectedCloudStorage: _PCSShareProtectionCopyPublicKeys
__ ProtectedCloudStorage: _PCSSyncKeyRegistryWithServiceName
__ ProtectedCloudStorage: _kPCSErrorObjectIdentities
__ ProtectedCloudStorage: _kPCSErrorSetIdentities
__ ProtectedCloudStorage: _kPCSFPIdentity
__ ProtectedCloudStorage: _kPCSFPObjectKind
__ ProtectedCloudStorage: _kPCSFPObjectKindInvite
__ ProtectedCloudStorage: _kPCSFPObjectKindPPPCS
__ ProtectedCloudStorage: _kPCSFPObjectKindRecord
__ ProtectedCloudStorage: _kPCSFPObjectKindUnspecified
__ ProtectedCloudStorage: _kPCSFPObjectKindZone
__ ProtectedCloudStorage: _kPCSFPService
__ ProtectedCloudStorage: _kPCSFPTypeClassic
__ ProtectedCloudStorage: _kPCSFPTypeLight
__ ProtectedCloudStorage: _kPCSFPTypeShare
__ ProtectedCloudStorage: _kPCSFPZoneObject
__ ProtectedCloudStorage: _kPCSKeyDiversifiedCompact
__ ProtectedCloudStorage: _kPCSServiceActivities
__ ProtectedCloudStorage: _kPCSServiceBTAnnouncement
__ ProtectedCloudStorage: _kPCSServiceBTPairing
__ ProtectedCloudStorage: _kPCSServiceBackup
__ ProtectedCloudStorage: _kPCSServiceBladerunner
__ ProtectedCloudStorage: _kPCSServiceGaming
__ ProtectedCloudStorage: _kPCSServiceHyperion
__ ProtectedCloudStorage: _kPCSServiceKeyboardServices
__ ProtectedCloudStorage: _kPCSServiceLiverpool
__ ProtectedCloudStorage: _kPCSServiceMaster
__ ProtectedCloudStorage: _kPCSServiceNews
__ ProtectedCloudStorage: _kPCSServiceNotes
__ ProtectedCloudStorage: _kPCSServicePianoMover
__ ProtectedCloudStorage: _kPCSServiceSafari
__ ProtectedCloudStorage: _kPCSServiceSharing
__ ProtectedCloudStorage: _kPCSServiceTTYCallHistory
__ ProtectedCloudStorage: _kPCSServiceiAD
__ ProtectedCloudStorage: _kPCSSetupAuthToken
__ ProtectedCloudStorage: _kPCSSetupDSID
__ ProtectedCloudStorage: _kPCSSetupEscrowURL
__ ProtectedCloudStorage: _kPCSSetupKeychain
__ ProtectedCloudStorage: _kPCSSetupPassword
__ ProtectedCloudStorage: _kPCSSetupService
__ ProtectedCloudStorage: _kPCSSetupStingray
__ ProtectedCloudStorage: _kPCSSetupUsername
__ ProtectedCloudStorage: _kPCSSetupiCloudEnvironment
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataReader
__ ProtocolBuffer: _OBJC_CLASS_$_PBDataWriter
__ ProtocolBuffer: _OBJC_CLASS_$_PBMessageStreamReader
__ ProtocolBuffer: _OBJC_CLASS_$_PBMessageStreamWriter
__ ProtocolBuffer: _OBJC_CLASS_$_PBRequest
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_METACLASS_$_PBRequest
__ ProtocolBuffer: _PBDataWriterWriteBOOLField
__ ProtocolBuffer: _PBDataWriterWriteBareVarint
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteFloatField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBDataWriterWriteUint64Field
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderReadVarIntBuf
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedInt32Add
__ ProtocolBuffer: _PBRepeatedInt32Clear
__ ProtocolBuffer: _PBRepeatedInt32Copy
__ ProtocolBuffer: _PBRepeatedInt32Hash
__ ProtocolBuffer: _PBRepeatedInt32IsEqual
__ ProtocolBuffer: _PBRepeatedInt32Set
__ ProtocolBuffer: _PBRepeatedInt64Add
__ ProtocolBuffer: _PBRepeatedInt64Clear
__ ProtocolBuffer: _PBRepeatedInt64Copy
__ ProtocolBuffer: _PBRepeatedInt64Hash
__ ProtocolBuffer: _PBRepeatedInt64IsEqual
__ ProtocolBuffer: _PBRepeatedInt64NSArray
__ ProtocolBuffer: _PBRepeatedInt64Set
__ Security: _SecCertificateCopyData
__ Security: _SecCertificateCreateWithData
__ Security: _SecCertificateNotValidAfter
__ Security: _SecItemAdd
__ Security: _SecItemCopyMatching
__ Security: _SecItemUpdate
__ Security: _SecKeyCreateEncryptedDataWithParameters
__ Security: _SecKeyCreateWithData
__ Security: _SecKeyVerifySignature
__ Security: _SecPolicyCreateApplePinned
__ Security: _SecTaskCopyValuesForEntitlements
__ Security: _SecTaskCreateWithAuditToken
__ Security: _SecTrustCopyPublicKey
__ Security: _SecTrustCreateWithCertificates
__ Security: _SecTrustEvaluateWithError
__ Security: _SecTrustGetCertificateAtIndex
__ Security: _kSecAttrAccessGroup
__ Security: _kSecAttrAccessible
__ Security: _kSecAttrAccessibleAlwaysThisDeviceOnlyPrivate
__ Security: _kSecAttrAccount
__ Security: _kSecAttrKeyClass
__ Security: _kSecAttrKeyClassPublic
__ Security: _kSecAttrKeyType
__ Security: _kSecAttrKeyTypeECSECPrimeRandom
__ Security: _kSecAttrService
__ Security: _kSecClass
__ Security: _kSecClassGenericPassword
__ Security: _kSecKeyAlgorithmECDSASignatureMessageX962SHA256
__ Security: _kSecKeyAlgorithmECIESEncryptionStandardVariableIVX963SHA256AESGCM
__ Security: _kSecKeyEncryptionParameterSymmetricAAD
__ Security: _kSecKeyEncryptionParameterSymmetricKeySizeInBits
__ Security: _kSecKeyKeyExchangeParameterSharedInfo
__ Security: _kSecReturnData
__ Security: _kSecValueData
__ SetupAssistant: _BYSetupAssistantFinishedDarwinNotification
__ SetupAssistant: _BYSetupAssistantNeedsToRun
__ TCC: _TCCAccessCheckAuditToken
__ TCC: _TCCAccessReset
__ TCC: _kTCCServiceLiverpool
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ UserManagement: _OBJC_CLASS_$_UMUserPersonaAttributes
__ UserManagement: _OBJC_CLASS_$_UMUserSyncTask
__ libMobileGestalt.dylib: _MGCancelNotifications
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGRegisterForUpdates
__ libSystem.B.dylib: _APP_SANDBOX_READ_WRITE
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_4_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_TRANSFER_ENDPOINT
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___toupper
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: __dispatch_source_type_signal
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dispatch_source_type_vnode
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_activity_none
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_default
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _atoi
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cc_clear
__ libSystem.B.dylib: _cc_cmp_safe
__ libSystem.B.dylib: _ccaes_gcm_decrypt_mode
__ libSystem.B.dylib: _ccaes_gcm_encrypt_mode
__ libSystem.B.dylib: _ccdigest_init
__ libSystem.B.dylib: _ccdigest_update
__ libSystem.B.dylib: _ccec_compact_export
__ libSystem.B.dylib: _ccec_compact_generate_key
__ libSystem.B.dylib: _ccec_compact_import_pub
__ libSystem.B.dylib: _ccec_cp_256
__ libSystem.B.dylib: _ccec_validate_pub
__ libSystem.B.dylib: _ccec_verify
__ libSystem.B.dylib: _ccecies_decrypt_gcm
__ libSystem.B.dylib: _ccecies_decrypt_gcm_setup
__ libSystem.B.dylib: _ccecies_encrypt_gcm
__ libSystem.B.dylib: _ccecies_encrypt_gcm_ciphertext_size
__ libSystem.B.dylib: _ccecies_encrypt_gcm_setup
__ libSystem.B.dylib: _ccrng
__ libSystem.B.dylib: _ccsha256_di
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _container_create_or_lookup_path_for_current_user
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_barrier
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_async_and_wait
__ libSystem.B.dylib: _dispatch_barrier_async
__ libSystem.B.dylib: _dispatch_barrier_sync
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_async
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_get_data
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_source_testcancel
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dispatch_workloop_create
__ libSystem.B.dylib: _dup
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _fmodf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstatfs
__ libSystem.B.dylib: _getattrlist
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _net_qos_guideline
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _openbyid_np
__ libSystem.B.dylib: _os_activity_apply
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_state_add_handler
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _pread
__ libSystem.B.dylib: _printf
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_rwlock_wrlock
__ libSystem.B.dylib: _pthread_setname_np
__ libSystem.B.dylib: _puts
__ libSystem.B.dylib: _pwrite
__ libSystem.B.dylib: _renameat
__ libSystem.B.dylib: _sandbox_check_by_audit_token
__ libSystem.B.dylib: _sandbox_extension_issue_file_to_process
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _unlink
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _voucher_adopt
__ libSystem.B.dylib: _voucher_copy
__ libSystem.B.dylib: _voucher_copy_without_importance
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_connection_is_extension
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: dyld_stub_binder
__ libnetwork.dylib: _nw_endpoint_copy_dictionary
__ libnetwork.dylib: _nw_endpoint_create_host
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_EHTYPE_id
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_copyIvarList
__ libobjc.A.dylib: _class_getMethodImplementation
__ libobjc.A.dylib: _ivar_getName
__ libobjc.A.dylib: _ivar_getOffset
__ libobjc.A.dylib: _ivar_getTypeEncoding
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getIvar
__ libprequelite.dylib: _OBJC_CLASS_$_PQLConnection
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_file_control
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
CKDPRecordResolveTokenResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasContainer
 @property  NSString *container
 @property  BOOL hasContainerEnvironment
 @property  int containerEnvironment
 @property  NSMutableArray *records
 @property  BOOL hasShareRecord
 @property  CKDPRecord *shareRecord
 @property  BOOL hasShareMetadata
 @property  CKDPShareMetadata *shareMetadata
 @property  BOOL hasProtectionInfo
 @property  CKDPProtectionInfo *protectionInfo
 @property  BOOL hasRecordProtectionInfo
 @property  CKDPProtectionInfo *recordProtectionInfo
 @property  BOOL hasRecordZone
 @property  CKDPZone *recordZone

  // class methods
  +[CKDPRecordResolveTokenResponse recordType]

  // instance methods
  -[CKDPRecordResolveTokenResponse isEqual:]
  -[CKDPRecordResolveTokenResponse copyWithZone:]
  -[CKDPRecordResolveTokenResponse container]
  -[CKDPRecordResolveTokenResponse setContainer:]
  -[CKDPRecordResolveTokenResponse .cxx_destruct]
  -[CKDPRecordResolveTokenResponse dictionaryRepresentation]
  -[CKDPRecordResolveTokenResponse writeTo:]
  -[CKDPRecordResolveTokenResponse mergeFrom:]
  -[CKDPRecordResolveTokenResponse readFrom:]
  -[CKDPRecordResolveTokenResponse copyTo:]
  -[CKDPRecordResolveTokenResponse shareMetadata]
  -[CKDPRecordResolveTokenResponse records]
  -[CKDPRecordResolveTokenResponse addRecord:]
  -[CKDPRecordResolveTokenResponse setRecordProtectionInfo:]
  -[CKDPRecordResolveTokenResponse hasRecordProtectionInfo]
  -[CKDPRecordResolveTokenResponse recordProtectionInfo]
  -[CKDPRecordResolveTokenResponse recordZone]
  -[CKDPRecordResolveTokenResponse setRecordZone:]
  -[CKDPRecordResolveTokenResponse hasRecordZone]
  -[CKDPRecordResolveTokenResponse hasContainer]
  -[CKDPRecordResolveTokenResponse protectionInfo]
  -[CKDPRecordResolveTokenResponse setProtectionInfo:]
  -[CKDPRecordResolveTokenResponse setShareMetadata:]
  -[CKDPRecordResolveTokenResponse setRecords:]
  -[CKDPRecordResolveTokenResponse recordsCount]
  -[CKDPRecordResolveTokenResponse clearRecords]
  -[CKDPRecordResolveTokenResponse recordAtIndex:]
  -[CKDPRecordResolveTokenResponse setShareRecord:]
  -[CKDPRecordResolveTokenResponse containerEnvironment]
  -[CKDPRecordResolveTokenResponse setContainerEnvironment:]
  -[CKDPRecordResolveTokenResponse setHasContainerEnvironment:]
  -[CKDPRecordResolveTokenResponse hasContainerEnvironment]
  -[CKDPRecordResolveTokenResponse containerEnvironmentAsString:]
  -[CKDPRecordResolveTokenResponse StringAsContainerEnvironment:]
  -[CKDPRecordResolveTokenResponse hasShareRecord]
  -[CKDPRecordResolveTokenResponse hasShareMetadata]
  -[CKDPRecordResolveTokenResponse hasProtectionInfo]
  -[CKDPRecordResolveTokenResponse shareRecord]


CKDCachePurger : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL purged
 @property  NSArray *oldCacheDirs

  // class methods
  +[CKDCachePurger enumerateOldCachesForApplicationBundleID:sourceApplicationBundleID:containerPath:cachesPath:]

  // instance methods
  -[CKDCachePurger .cxx_destruct]
  -[CKDCachePurger purged]
  -[CKDCachePurger setPurged:]
  -[CKDCachePurger oldCacheDirs]
  -[CKDCachePurger initWithApplicationBundleID:sourceApplicationBundleID:containerPath:cachePath:]
  -[CKDCachePurger purgeOldCacheDirectories]


CKDRecordCache : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_dispatch_queue> *queue
 @property  CKSQLite *db
 @property  CKSQLitePool *dbPool
 @property  CKDClientContext *context
 @property  long long scope
 @property  NSDate *lastExpiryAttempt

  // class methods
  +[CKDRecordCache _expiryDateFormatter]

  // instance methods
  -[CKDRecordCache setQueue:]
  -[CKDRecordCache queue]
  -[CKDRecordCache open]
  -[CKDRecordCache close]
  -[CKDRecordCache .cxx_destruct]
  -[CKDRecordCache context]
  -[CKDRecordCache db]
  -[CKDRecordCache setDb:]
  -[CKDRecordCache _dsid]
  -[CKDRecordCache setContext:]
  -[CKDRecordCache scope]
  -[CKDRecordCache setScope:]
  -[CKDRecordCache recordCacheSizeLimit]
  -[CKDRecordCache dbPool]
  -[CKDRecordCache _cachedRecordKnownUserKeyData:satisfiesRequiredKeys:]
  -[CKDRecordCache _recordWithID:requiredKeys:]
  -[CKDRecordCache _cachedRecordHasValidAssets:forRequiredKeys:]
  -[CKDRecordCache _trimRecord:toRequiredKeys:]
  -[CKDRecordCache _lockedSizeOfAllRecordsInDb]
  -[CKDRecordCache _attemptRecordExpiryIfNeeded]
  -[CKDRecordCache recordsWithIDs:requiredKeys:]
  -[CKDRecordCache clearAssetAuthTokensForRecord:]
  -[CKDRecordCache addRecord:knownUserKeys:]
  -[CKDRecordCache lastExpiryAttempt]
  -[CKDRecordCache setLastExpiryAttempt:]
  -[CKDRecordCache scheduleRecordExpirationWithExpiryDate:completionBlock:]
  -[CKDRecordCache initWithDatabase:dbPool:context:scope:]
  -[CKDRecordCache releaseDatabase]
  -[CKDRecordCache recordWithID:requiredKeys:]
  -[CKDRecordCache numberOfRecordsWithID:]
  -[CKDRecordCache etagForRecordID:requiredKeys:]
  -[CKDRecordCache deleteRecordWithID:]
  -[CKDRecordCache clearAllRecordsInScope]
  -[CKDRecordCache clearAllRecords]
  -[CKDRecordCache clearAllRecordsForZoneWithID:]
  -[CKDRecordCache clearAssetAuthTokensForRecordWithID:]
  -[CKDRecordCache setDbPool:]


CKDAssetRecord : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *itemsByRecordKey
 @property  NSMutableDictionary *rereferencedItemsByRecordKey
 @property  NSMutableDictionary *sectionItemsByRecordKey
 @property  NSNumber *sizeUpperBoundNumber
 @property  NSNumber *rerefSizeUpperBoundNumber
 @property  NSString *recordType
 @property  CKRecordID *recordID
 @property  unsigned int sizeUpperBound
 @property  unsigned int rerefSizeUpperBound
 @property  NSArray *allMMCSItems
 @property  NSArray *allMMCSSectionItems

  // instance methods
  -[CKDAssetRecord isEmpty]
  -[CKDAssetRecord .cxx_destruct]
  -[CKDAssetRecord recordType]
  -[CKDAssetRecord recordID]
  -[CKDAssetRecord initWithRecordType:recordID:]
  -[CKDAssetRecord CKPropertiesDescription]
  -[CKDAssetRecord sizeUpperBound]
  -[CKDAssetRecord isPackageSectionRecord]
  -[CKDAssetRecord allRecordKeys]
  -[CKDAssetRecord addMMCSItem:]
  -[CKDAssetRecord addRereferencedMMCSItem:]
  -[CKDAssetRecord addMMCSSectionItem:]
  -[CKDAssetRecord rerefSizeUpperBound]
  -[CKDAssetRecord allMMCSItems]
  -[CKDAssetRecord allRereferenceMMCSItems]
  -[CKDAssetRecord allMMCSSectionItems]
  -[CKDAssetRecord allMMCSAndSectionItems]
  -[CKDAssetRecord allRegularAndSectionAndRereferenceItemsWithRecordKey:]
  -[CKDAssetRecord allRegularAndSectionAndRereferenceItems]
  -[CKDAssetRecord firstMMCSItemError]
  -[CKDAssetRecord firstMMCSSectionItemError]
  -[CKDAssetRecord isAssetRecord]
  -[CKDAssetRecord isEmptyOfRereferencesAssets]
  -[CKDAssetRecord itemsByRecordKey]
  -[CKDAssetRecord setItemsByRecordKey:]
  -[CKDAssetRecord rereferencedItemsByRecordKey]
  -[CKDAssetRecord setRereferencedItemsByRecordKey:]
  -[CKDAssetRecord sectionItemsByRecordKey]
  -[CKDAssetRecord setSectionItemsByRecordKey:]
  -[CKDAssetRecord sizeUpperBoundNumber]
  -[CKDAssetRecord setSizeUpperBoundNumber:]
  -[CKDAssetRecord rerefSizeUpperBoundNumber]
  -[CKDAssetRecord setRerefSizeUpperBoundNumber:]


CKDRecordCachePool : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *pools
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSObject<OS_dispatch_queue> *recordExpiryQueue

  // class methods
  +[CKDRecordCachePool sharedPool]
  +[CKDRecordCachePool performWithClientContext:scope:block:]

  // instance methods
  -[CKDRecordCachePool init]
  -[CKDRecordCachePool setQueue:]
  -[CKDRecordCachePool queue]
  -[CKDRecordCachePool .cxx_destruct]
  -[CKDRecordCachePool acquireCacheWithContext:scope:]
  -[CKDRecordCachePool releaseCache:]
  -[CKDRecordCachePool pools]
  -[CKDRecordCachePool recordExpiryQueue]
  -[CKDRecordCachePool _purgeRecordCachesForApplicationContainerPaths:expiryDate:]
  -[CKDRecordCachePool _poolForContext:]
  -[CKDRecordCachePool setPools:]
  -[CKDRecordCachePool setRecordExpiryQueue:]


CKDPUserAvailableQuotaResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasStorageAvailableBytes
 @property  unsigned long storageAvailableBytes

  // instance methods
  -[CKDPUserAvailableQuotaResponse isEqual:]
  -[CKDPUserAvailableQuotaResponse copyWithZone:]
  -[CKDPUserAvailableQuotaResponse dictionaryRepresentation]
  -[CKDPUserAvailableQuotaResponse writeTo:]
  -[CKDPUserAvailableQuotaResponse mergeFrom:]
  -[CKDPUserAvailableQuotaResponse readFrom:]
  -[CKDPUserAvailableQuotaResponse copyTo:]
  -[CKDPUserAvailableQuotaResponse setStorageAvailableBytes:]
  -[CKDPUserAvailableQuotaResponse setHasStorageAvailableBytes:]
  -[CKDPUserAvailableQuotaResponse hasStorageAvailableBytes]
  -[CKDPUserAvailableQuotaResponse storageAvailableBytes]


CKDMMCSItemGroupSetContext : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDCancelling>
 @property  CKDMMCSItemGroupSet *itemGroupSet
 @property  CKDOperation *operation
 @property  NSMutableArray *itemGroupContexts
 @property  @? itemGroupCompletionBlock
 @property  @? itemGroupSetCompletionBlock
 @property  NSObject<OS_dispatch_group> *itemGroupSetCompletionGroup
 @property  long long mmcsOperationType

  // instance methods
  -[CKDMMCSItemGroupSetContext .cxx_destruct]
  -[CKDMMCSItemGroupSetContext cancel]
  -[CKDMMCSItemGroupSetContext operation]
  -[CKDMMCSItemGroupSetContext setOperation:]
  -[CKDMMCSItemGroupSetContext start]
  -[CKDMMCSItemGroupSetContext itemGroupSetCompletionGroup]
  -[CKDMMCSItemGroupSetContext itemGroupContexts]
  -[CKDMMCSItemGroupSetContext mmcsOperationType]
  -[CKDMMCSItemGroupSetContext setMmcsOperationType:]
  -[CKDMMCSItemGroupSetContext itemGroupSetCompletionBlock]
  -[CKDMMCSItemGroupSetContext itemGroupSet]
  -[CKDMMCSItemGroupSetContext setItemGroupSetCompletionBlock:]
  -[CKDMMCSItemGroupSetContext initWithItemGroupSet:completionHandler:]
  -[CKDMMCSItemGroupSetContext addItemGroupContext:]
  -[CKDMMCSItemGroupSetContext setItemGroupSet:]
  -[CKDMMCSItemGroupSetContext setItemGroupContexts:]
  -[CKDMMCSItemGroupSetContext itemGroupCompletionBlock]
  -[CKDMMCSItemGroupSetContext setItemGroupCompletionBlock:]
  -[CKDMMCSItemGroupSetContext setItemGroupSetCompletionGroup:]


CKDPDateStatistics : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasCreation
 @property  CKDPDate *creation
 @property  BOOL hasModification
 @property  CKDPDate *modification

  // instance methods
  -[CKDPDateStatistics isEqual:]
  -[CKDPDateStatistics copyWithZone:]
  -[CKDPDateStatistics .cxx_destruct]
  -[CKDPDateStatistics dictionaryRepresentation]
  -[CKDPDateStatistics writeTo:]
  -[CKDPDateStatistics mergeFrom:]
  -[CKDPDateStatistics readFrom:]
  -[CKDPDateStatistics copyTo:]
  -[CKDPDateStatistics setCreation:]
  -[CKDPDateStatistics setModification:]
  -[CKDPDateStatistics hasCreation]
  -[CKDPDateStatistics hasModification]
  -[CKDPDateStatistics creation]
  -[CKDPDateStatistics modification]


CKDPNotificationSyncResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasChangeID
 @property  NSData *changeID
 @property  NSMutableArray *pushMessages
 @property  BOOL hasMoreAvailable
 @property  BOOL moreAvailable

  // class methods
  +[CKDPNotificationSyncResponse pushMessageType]

  // instance methods
  -[CKDPNotificationSyncResponse isEqual:]
  -[CKDPNotificationSyncResponse copyWithZone:]
  -[CKDPNotificationSyncResponse .cxx_destruct]
  -[CKDPNotificationSyncResponse dictionaryRepresentation]
  -[CKDPNotificationSyncResponse writeTo:]
  -[CKDPNotificationSyncResponse mergeFrom:]
  -[CKDPNotificationSyncResponse readFrom:]
  -[CKDPNotificationSyncResponse copyTo:]
  -[CKDPNotificationSyncResponse changeID]
  -[CKDPNotificationSyncResponse setChangeID:]
  -[CKDPNotificationSyncResponse moreAvailable]
  -[CKDPNotificationSyncResponse addPushMessage:]
  -[CKDPNotificationSyncResponse pushMessagesCount]
  -[CKDPNotificationSyncResponse clearPushMessages]
  -[CKDPNotificationSyncResponse pushMessageAtIndex:]
  -[CKDPNotificationSyncResponse hasChangeID]
  -[CKDPNotificationSyncResponse setMoreAvailable:]
  -[CKDPNotificationSyncResponse setHasMoreAvailable:]
  -[CKDPNotificationSyncResponse hasMoreAvailable]
  -[CKDPNotificationSyncResponse pushMessages]
  -[CKDPNotificationSyncResponse setPushMessages:]


CKDPCSCache : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKDClientContext *context
 @property  CKDPCSSQLCache *sqlCache
 @property  CKDPCSMemoryCache *recordMemoryCache
 @property  CKDPCSMemoryCache *zoneMemoryCache
 @property  CKDPCSMemoryCache *shareMemoryCache
 @property  NSMutableDictionary *outstandingFetches
 @property  NSObject<OS_dispatch_queue> *fetchQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue

  // instance methods
  -[CKDPCSCache dealloc]
  -[CKDPCSCache .cxx_destruct]
  -[CKDPCSCache context]
  -[CKDPCSCache callbackQueue]
  -[CKDPCSCache setContext:]
  -[CKDPCSCache setCallbackQueue:]
  -[CKDPCSCache CKStatusReportArray]
  -[CKDPCSCache initWithClientContext:]
  -[CKDPCSCache fetchQueue]
  -[CKDPCSCache setFetchQueue:]
  -[CKDPCSCache _setPCSData:forFetchedShareID:withScope:withCompletionHandler:]
  -[CKDPCSCache _setPCSData:forFetchedZoneID:withScope:withCompletionHandler:]
  -[CKDPCSCache _lockedGetSQLCacheWithCompletionHandler:]
  -[CKDPCSCache _lockedCreatePCSCacheFetchOfItem:forOperation:options:fetchCreator:withCompletionHandler:]
  -[CKDPCSCache outstandingFetches]
  -[CKDPCSCache _lockedGetOutstandingFetchForOperation:options:itemIDString:]
  -[CKDPCSCache _lockedRemoveOutstandingFetch:forItemIDString:databaseScope:]
  -[CKDPCSCache _lockedAddOutstandingFetch:forItemIDString:databaseScope:]
  -[CKDPCSCache _lockedHandleMemoryFetchOfItem:pcsData:forOperation:options:fetchCreator:withCompletionHandler:]
  -[CKDPCSCache recordMemoryCache]
  -[CKDPCSCache _lockedFetchPCSForItem:memoryCache:forOperation:options:fetchCreator:withCompletionHandler:]
  -[CKDPCSCache zoneMemoryCache]
  -[CKDPCSCache shareMemoryCache]
  -[CKDPCSCache _lockedInvalidateAllOutstandingPCSFetchesForItemIDString:databaseScope:]
  -[CKDPCSCache getSQLCache:]
  -[CKDPCSCache _updateMemoryCacheWithPCSData:forItemWithID:inMemoryCache:databaseScope:withCompletionHandler:]
  -[CKDPCSCache hasStatusToReport]
  -[CKDPCSCache fetchPCSForRecordWithID:forOperation:options:withCompletionHandler:]
  -[CKDPCSCache fetchPCSForZoneWithID:forOperation:options:withCompletionHandler:]
  -[CKDPCSCache fetchPCSForShareWithID:forOperation:options:withCompletionHandler:]
  -[CKDPCSCache _setPCSData:forFetchedRecordID:withScope:withCompletionHandler:]
  -[CKDPCSCache updateMemoryCacheWithZonePCSData:forZoneWithID:databaseScope:withCompletionHandler:]
  -[CKDPCSCache updateMemoryCacheWithRecordPCSData:forRecordWithID:databaseScope:withCompletionHandler:]
  -[CKDPCSCache updateMemoryCacheWithSharePCSData:forShareWithID:databaseScope:withCompletionHandler:]
  -[CKDPCSCache removePCSDataForItemsInZoneWithID:]
  -[CKDPCSCache removePCSDataForItemsInShareWithID:]
  -[CKDPCSCache sqlCache]
  -[CKDPCSCache setOutstandingFetches:]
  -[CKDPCSCache clearPCSCaches]
  -[CKDPCSCache clearPCSMemoryCaches]
  -[CKDPCSCache clearInvalidatedPCSSQLCacheEntriesWithCompletionHandler:]


CKDCloudDatabaseServer : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <UMUserSyncStakeholder>
 @property  NSXPCListener *xpcListener
 @property  NSMutableArray *connectedClients
 @property  NSMutableDictionary *recentClientsByProcessName
 @property  NSObject<OS_dispatch_source> *sighandlerSource
 @property  NSOperationQueue *clientTeardownQueue
 @property  unsigned long stateHandle
 @property  NSObject<OS_dispatch_source> *statusReportRequestSource
 @property  NSObject<OS_dispatch_queue> *statusReportQueue
 @property  NSObject<OS_dispatch_queue> *statusReportCallbackQueue
 @property  NSMutableArray *statusReportCallbacks
 @property  int tccToken
 @property  BOOL isInSyncBubble
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDCloudDatabaseServer sharedServer]

  // instance methods
  -[CKDCloudDatabaseServer init]
  -[CKDCloudDatabaseServer dealloc]
  -[CKDCloudDatabaseServer .cxx_destruct]
  -[CKDCloudDatabaseServer resume]
  -[CKDCloudDatabaseServer listener:shouldAcceptNewConnection:]
  -[CKDCloudDatabaseServer isInSyncBubble]
  -[CKDCloudDatabaseServer willSwitchUser]
  -[CKDCloudDatabaseServer uploadContent]
  -[CKDCloudDatabaseServer setXpcListener:]
  -[CKDCloudDatabaseServer xpcListener]
  -[CKDCloudDatabaseServer CKStatusReportArray]
  -[CKDCloudDatabaseServer stateHandle]
  -[CKDCloudDatabaseServer setStateHandle:]
  -[CKDCloudDatabaseServer connectedClients]
  -[CKDCloudDatabaseServer _dumpStatusReportToFileHandle:]
  -[CKDCloudDatabaseServer statusReportWithCompletionHandler:]
  -[CKDCloudDatabaseServer sighandlerSource]
  -[CKDCloudDatabaseServer statusReportRequestSource]
  -[CKDCloudDatabaseServer recentClientsByProcessName]
  -[CKDCloudDatabaseServer setRecentClientsByProcessName:]
  -[CKDCloudDatabaseServer _cleanRecentClients]
  -[CKDCloudDatabaseServer clientTeardownQueue]
  -[CKDCloudDatabaseServer statusReportQueue]
  -[CKDCloudDatabaseServer _dumpStatusReportArrayToOsTrace:]
  -[CKDCloudDatabaseServer statusReportCallbacks]
  -[CKDCloudDatabaseServer statusReportCallbackQueue]
  -[CKDCloudDatabaseServer kickOffPendingLongLivedOperations]
  -[CKDCloudDatabaseServer dumpStatusReportToFileHandle:]
  -[CKDCloudDatabaseServer setConnectedClients:]
  -[CKDCloudDatabaseServer setSighandlerSource:]
  -[CKDCloudDatabaseServer setClientTeardownQueue:]
  -[CKDCloudDatabaseServer setStatusReportRequestSource:]
  -[CKDCloudDatabaseServer setStatusReportQueue:]
  -[CKDCloudDatabaseServer setStatusReportCallbackQueue:]
  -[CKDCloudDatabaseServer setStatusReportCallbacks:]
  -[CKDCloudDatabaseServer tccToken]
  -[CKDCloudDatabaseServer setTccToken:]


CKDPProtectionInfo : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasProtectionInfo
 @property  NSData *protectionInfo
 @property  BOOL hasProtectionInfoTag
 @property  NSString *protectionInfoTag

  // instance methods
  -[CKDPProtectionInfo isEqual:]
  -[CKDPProtectionInfo copyWithZone:]
  -[CKDPProtectionInfo .cxx_destruct]
  -[CKDPProtectionInfo dictionaryRepresentation]
  -[CKDPProtectionInfo writeTo:]
  -[CKDPProtectionInfo mergeFrom:]
  -[CKDPProtectionInfo readFrom:]
  -[CKDPProtectionInfo copyTo:]
  -[CKDPProtectionInfo protectionInfo]
  -[CKDPProtectionInfo setProtectionInfo:]
  -[CKDPProtectionInfo hasProtectionInfo]
  -[CKDPProtectionInfo setProtectionInfoTag:]
  -[CKDPProtectionInfo hasProtectionInfoTag]
  -[CKDPProtectionInfo protectionInfoTag]


CKDPRecordRetrieveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRecordIdentifier
 @property  CKDPRecordIdentifier *recordIdentifier
 @property  BOOL hasRequestedFields
 @property  CKDPRequestedFields *requestedFields
 @property  BOOL hasVersionETag
 @property  NSString *versionETag
 @property  BOOL hasClientVersionETag
 @property  NSString *clientVersionETag
 @property  BOOL hasGetAssetURL
 @property  CKDPRecordRetrieveRequestRetrieveAssetURL *getAssetURL
 @property  BOOL hasAssetsToDownload
 @property  CKDPAssetsToDownload *assetsToDownload
 @property  BOOL hasShouldFailBatch
 @property  BOOL shouldFailBatch

  // class methods
  +[CKDPRecordRetrieveRequest options]

  // instance methods
  -[CKDPRecordRetrieveRequest isEqual:]
  -[CKDPRecordRetrieveRequest copyWithZone:]
  -[CKDPRecordRetrieveRequest .cxx_destruct]
  -[CKDPRecordRetrieveRequest dictionaryRepresentation]
  -[CKDPRecordRetrieveRequest writeTo:]
  -[CKDPRecordRetrieveRequest mergeFrom:]
  -[CKDPRecordRetrieveRequest readFrom:]
  -[CKDPRecordRetrieveRequest copyTo:]
  -[CKDPRecordRetrieveRequest requestTypeCode]
  -[CKDPRecordRetrieveRequest responseClass]
  -[CKDPRecordRetrieveRequest setRecordIdentifier:]
  -[CKDPRecordRetrieveRequest hasRecordIdentifier]
  -[CKDPRecordRetrieveRequest recordIdentifier]
  -[CKDPRecordRetrieveRequest getAssetURL]
  -[CKDPRecordRetrieveRequest setGetAssetURL:]
  -[CKDPRecordRetrieveRequest requestedFields]
  -[CKDPRecordRetrieveRequest setRequestedFields:]
  -[CKDPRecordRetrieveRequest hasRequestedFields]
  -[CKDPRecordRetrieveRequest setVersionETag:]
  -[CKDPRecordRetrieveRequest setClientVersionETag:]
  -[CKDPRecordRetrieveRequest hasVersionETag]
  -[CKDPRecordRetrieveRequest hasClientVersionETag]
  -[CKDPRecordRetrieveRequest versionETag]
  -[CKDPRecordRetrieveRequest clientVersionETag]
  -[CKDPRecordRetrieveRequest setAssetsToDownload:]
  -[CKDPRecordRetrieveRequest hasGetAssetURL]
  -[CKDPRecordRetrieveRequest hasAssetsToDownload]
  -[CKDPRecordRetrieveRequest setShouldFailBatch:]
  -[CKDPRecordRetrieveRequest setHasShouldFailBatch:]
  -[CKDPRecordRetrieveRequest hasShouldFailBatch]
  -[CKDPRecordRetrieveRequest assetsToDownload]
  -[CKDPRecordRetrieveRequest shouldFailBatch]


CKDProxyOperationQueue : NSOperationQueue /System/Library/Frameworks/Security.framework/Security
 @property  CKDClientProxy *proxy

  // instance methods
  -[CKDProxyOperationQueue addOperation:]
  -[CKDProxyOperationQueue .cxx_destruct]
  -[CKDProxyOperationQueue setProxy:]
  -[CKDProxyOperationQueue proxy]
  -[CKDProxyOperationQueue initWithProxy:]


CKDProxySetupOperation : NSOperation /System/Library/Frameworks/Security.framework/Security
 @property  CKDClientProxy *proxy
 @property  CKDClientContext *context
 @property  BOOL isExecuting
 @property  BOOL isFinished

  // class methods
  +[CKDProxySetupOperation operationWithProxy:context:]

  // instance methods
  -[CKDProxySetupOperation .cxx_destruct]
  -[CKDProxySetupOperation start]
  -[CKDProxySetupOperation isFinished]
  -[CKDProxySetupOperation isExecuting]
  -[CKDProxySetupOperation isAsynchronous]
  -[CKDProxySetupOperation context]
  -[CKDProxySetupOperation setContext:]
  -[CKDProxySetupOperation setProxy:]
  -[CKDProxySetupOperation proxy]
  -[CKDProxySetupOperation setIsFinished:]
  -[CKDProxySetupOperation setIsExecuting:]
  -[CKDProxySetupOperation _setIsExecuting:]
  -[CKDProxySetupOperation _setIsFinished:]
  -[CKDProxySetupOperation initWithProxy:context:]
  -[CKDProxySetupOperation _markFinished]


CKDClientProxy : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDSystemAvailabilityWatcher>
 @property  NSObject<OS_dispatch_queue> *setupQueue
 @property  NSObject<OS_dispatch_queue> *cancellationQueue
 @property  NSObject<OS_dispatch_queue> *statusQueue
 @property  NSOperationQueue *cloudKitSupportOperationThrottleQueue
 @property  NSOperationQueue *backgroundOperationThrottleQueue
 @property  NSArray *cachedSandboxExtensions
 @property  NSMutableArray *pendingContexts
 @property  BOOL sandboxed
 @property  BOOL canUsePackages
 @property  BOOL canOpenByID
 @property  BOOL holdAllOperations
 @property  NSMutableSet *pendingOperationIDs
 @property  NSDate *connectionDate
 @property  long long hasTCCAuthorizationTernary
 @property  NSDictionary *connectionEntitlements
 @property  BOOL hasFakeEntitlements
 @property  NSOperationQueue *tccAuthOpQueue
 @property  NSObject<OS_dispatch_queue> *tccAuthQueue
 @property  <NSObject> *TCCDatabaseChangedNotificationObserver
 @property  NSMutableDictionary *operationStatisticsByClassName
 @property  NSString *cachedApplicationBundleID
 @property  NSString *sourceApplicationBundleID
 @property  NSXPCConnection *connection
 @property  unsigned long _outstandingOperationCount
 @property  NSString *associatedApplicationBundleID
 @property  NSString *applicationBundleIDForPush
 @property  CKDPCSFetchAggregator *fetchAggregator
 @property  CKDClientContext *context
 @property  NSOperationQueue *operationQueue
 @property  NSOperationQueue *cleanupOperationQueue
 @property  int pid
 @property  NSString *procName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDClientProxy sharedClientThrottlingOperationQueue]
  +[CKDClientProxy operationStatusReport:]
  +[CKDClientProxy accountStatusWorkloop]

  // instance methods
  -[CKDClientProxy dealloc]
  -[CKDClientProxy .cxx_destruct]
  -[CKDClientProxy operationQueue]
  -[CKDClientProxy setOperationQueue:]
  -[CKDClientProxy cancelAllOperations]
  -[CKDClientProxy context]
  -[CKDClientProxy valueForEntitlement:]
  -[CKDClientProxy connection]
  -[CKDClientProxy applicationIdentifier]
  -[CKDClientProxy setConnection:]
  -[CKDClientProxy initWithConnection:]
  -[CKDClientProxy setContext:]
  -[CKDClientProxy applicationBundleID]
  -[CKDClientProxy pid]
  -[CKDClientProxy tearDown]
  -[CKDClientProxy CKPropertiesDescription]
  -[CKDClientProxy performRepairAssetsOperation:withBlock:]
  -[CKDClientProxy performMarkAssetBrokenOperation:withBlock:]
  -[CKDClientProxy performModifyRecordZonesOperation:withBlock:]
  -[CKDClientProxy isLongLived]
  -[CKDClientProxy performDiscoverAllIdentitiesOperation:withBlock:]
  -[CKDClientProxy holdAllOperations]
  -[CKDClientProxy setHoldAllOperations:]
  -[CKDClientProxy CKStatusReportArray]
  -[CKDClientProxy cancelOperationWithIdentifier:completionHandler:]
  -[CKDClientProxy accountStatusWithSetupInfo:completionHandler:]
  -[CKDClientProxy accountInfoWithSetupInfo:completionHandler:]
  -[CKDClientProxy importantUserIDsWithSetupInfo:completionHandler:]
  -[CKDClientProxy statusForApplicationPermission:setupInfo:completionHandler:]
  -[CKDClientProxy requestApplicationPermission:setupInfo:completionHandler:]
  -[CKDClientProxy getSandboxExtensionsWithSetupInfo:completionHandler:]
  -[CKDClientProxy frameworkCachesDirectoryWithSetupInfo:completionHandler:]
  -[CKDClientProxy performDiscoverUserIdentitiesOperation:withBlock:]
  -[CKDClientProxy performFetchShareParticipantsOperation:withBlock:]
  -[CKDClientProxy performFetchRecordsOperation:withBlock:]
  -[CKDClientProxy performModifyRecordsOperation:withBlock:]
  -[CKDClientProxy performFetchRecordChangesOperation:withBlock:]
  -[CKDClientProxy performFetchRecordZoneChangesOperation:withBlock:]
  -[CKDClientProxy performFetchRecordVersionsOperation:withBlock:]
  -[CKDClientProxy performFetchArchivedRecordsOperation:withBlock:]
  -[CKDClientProxy performArchiveRecordsOperation:withBlock:]
  -[CKDClientProxy performPublishAssetsOperation:withBlock:]
  -[CKDClientProxy performModifyWebSharingOperation:withBlock:]
  -[CKDClientProxy getNewWebSharingIdentityWithSetupInfo:completionHandler:]
  -[CKDClientProxy getNewWebSharingIdentityDataWithSetupInfo:completionHandler:]
  -[CKDClientProxy fetchXPCCriteriaWithSetupInfo:completionHandler:]
  -[CKDClientProxy performModifyRecordAccessOperation:withBlock:]
  -[CKDClientProxy performQueryOperation:withBlock:]
  -[CKDClientProxy performModifySubscriptionsOperation:withBlock:]
  -[CKDClientProxy performFetchSubscriptionsOperation:withBlock:]
  -[CKDClientProxy performFetchRecordZonesOperation:withBlock:]
  -[CKDClientProxy performFetchDatabaseChangesOperation:withBlock:]
  -[CKDClientProxy performModifyBadgeOperation:withBlock:]
  -[CKDClientProxy performFetchNotificationChangesOperation:withBlock:]
  -[CKDClientProxy performMarkNotificationsReadOperation:withBlock:]
  -[CKDClientProxy performAcceptSharesOperation:withBlock:]
  -[CKDClientProxy performCompleteParticipantVettingOperation:withBlock:]
  -[CKDClientProxy performFetchShareMetadataOperation:withBlock:]
  -[CKDClientProxy performFetchShareParticipantKeyOperation:withBlock:]
  -[CKDClientProxy decryptPersonalInfoOnShare:setupInfo:completionHandler:]
  -[CKDClientProxy performInitiateParticipantVettingOperation:withBlock:]
  -[CKDClientProxy performFetchUserQuotaOperation:withBlock:]
  -[CKDClientProxy performFetchWebAuthTokenOperation:withBlock:]
  -[CKDClientProxy performFetchWhitelistedBundleIDsOperation:withBlock:]
  -[CKDClientProxy performCodeFunctionInvokeOperation:withBlock:]
  -[CKDClientProxy fetchLongLivedOperationsWithIDs:setupInfo:completionHandler:]
  -[CKDClientProxy fetchAllLongLivedOperationIDsWithSetupInfo:completionHandler:]
  -[CKDClientProxy serverPreferredPushEnvironmentWithSetupInfo:completionHandler:]
  -[CKDClientProxy serverEnvironmentWithSetupInfo:completionHandler:]
  -[CKDClientProxy currentDeviceIDWithSetupInfo:completionHandler:]
  -[CKDClientProxy displayInfoOnAccountWithSetupInfo:completionHandler:]
  -[CKDClientProxy currentUserBoundaryKeyWithSetupInfo:completionHandler:]
  -[CKDClientProxy performAggregateZonePCSOperation:withBlock:]
  -[CKDClientProxy dumpAllClientsStatusReportToFileHandle:completionHandler:]
  -[CKDClientProxy dumpDaemonStatusReportToFileHandle:completionHandler:]
  -[CKDClientProxy setFakeError:forNextRequestOfClassName:setupInfo:]
  -[CKDClientProxy setFakeResponseOperationResult:forNextRequestOfClassName:forItemID:withLifetime:setupInfo:]
  -[CKDClientProxy countAssetCacheItemsWithSetupInfo:databaseScope:completionHandler:]
  -[CKDClientProxy clearAssetCacheWithSetupInfo:databaseScope:completionHandler:]
  -[CKDClientProxy showAssetCacheWithSetupInfo:databaseScope:]
  -[CKDClientProxy clearRecordCacheWithSetupInfo:databaseScope:]
  -[CKDClientProxy clearAuthTokensWithSetupInfo:recordID:databaseScope:]
  -[CKDClientProxy clearCachesWithSetupInfo:options:databaseScope:completionHandler:]
  -[CKDClientProxy clearCachesForRecordWithSetupInfo:recordID:databaseScope:completionHandler:]
  -[CKDClientProxy clearCachesForZoneWithSetupInfo:zoneID:databaseScope:completionHandler:]
  -[CKDClientProxy wipeAllCachedLongLivedProxiesWithSetupInfo:completionHandler:]
  -[CKDClientProxy getOutstandingOperationCountWithSetupInfo:completionHandler:]
  -[CKDClientProxy clearPCSCachesForKnownContextsWithSetupInfo:completionHandler:]
  -[CKDClientProxy getBehaviorOptionForKey:isContainerOption:completionHandler:]
  -[CKDClientProxy accountsDidGrantAccessToBundleID:containerIdentifiers:]
  -[CKDClientProxy accountsDidRevokeAccessToBundleID:sourceApplicationBundleID:containerIdentifiers:]
  -[CKDClientProxy accountsWillDeleteAccount:completionHandler:]
  -[CKDClientProxy accountWithID:changedWithChangeType:]
  -[CKDClientProxy setApplicationPermission:enabled:setupInfo:completionHandler:]
  -[CKDClientProxy resetAllApplicationPermissionsWithSetupInfo:completionHandler:]
  -[CKDClientProxy statusGroupsForApplicationPermission:setupInfo:completionHandler:]
  -[CKDClientProxy wipeAllCachesAndDie]
  -[CKDClientProxy clearContextFromMetadataCache]
  -[CKDClientProxy clearPILSCacheForLookupInfos:]
  -[CKDClientProxy updatePushTokens]
  -[CKDClientProxy dataclassEnabled:withSetupInfo:completionHandler:]
  -[CKDClientProxy flushOperationMetricsToPowerLog]
  -[CKDClientProxy triggerAutoBugCaptureSnapshot]
  -[CKDClientProxy submitClientEventMetric:withSetupInfo:completeWhenQueued:completionHandler:]
  -[CKDClientProxy getPCSDiagnosticsForZonesWithSetupInfo:completionHandler:]
  -[CKDClientProxy getRecordPCSDiagnosticsForZonesWithSetupInfo:completionHandler:]
  -[CKDClientProxy repairZonePCSWithOperationInfo:withBlock:]
  -[CKDClientProxy tossConfigWithSetupInfo:completionHandler:]
  -[CKDClientProxy requestClientSyncWithOperationInfo:withBlock:]
  -[CKDClientProxy deviceCountWithSetupInfo:completionHandler:]
  -[CKDClientProxy getFileMetadataWithFileHandle:openInfo:error:]
  -[CKDClientProxy procName]
  -[CKDClientProxy sourceApplicationBundleID]
  -[CKDClientProxy setSourceApplicationBundleID:]
  -[CKDClientProxy isSandboxed]
  -[CKDClientProxy setSandboxed:]
  -[CKDClientProxy hasOutOfProcessUIEntitlement]
  -[CKDClientProxy hasParticipantPIIEntitlement]
  -[CKDClientProxy fetchAggregator]
  -[CKDClientProxy _dumpStatusReportArrayToOsTrace:]
  -[CKDClientProxy forceFinishClientSetupWithClientContext:completionHandler:]
  -[CKDClientProxy _setupOperationQueues]
  -[CKDClientProxy hasAllowAccessDuringBuddyEntitlement]
  -[CKDClientProxy canRunGivenAvailabilityState:]
  -[CKDClientProxy setClientProxyAvailable:]
  -[CKDClientProxy _lockedSetHasTCCAuthorizationTernary:]
  -[CKDClientProxy setTCCDatabaseChangedNotificationObserver:]
  -[CKDClientProxy cleanupOperationQueue]
  -[CKDClientProxy backgroundOperationThrottleQueue]
  -[CKDClientProxy cloudKitSupportOperationThrottleQueue]
  -[CKDClientProxy setupQueue]
  -[CKDClientProxy pendingContexts]
  -[CKDClientProxy _lockedHasTCCAuthorization]
  -[CKDClientProxy tccAuthQueue]
  -[CKDClientProxy _hasEntitlementForKey:]
  -[CKDClientProxy connectionEntitlements]
  -[CKDClientProxy setConnectionEntitlements:]
  -[CKDClientProxy setHasFakeEntitlements:]
  -[CKDClientProxy cachedApplicationBundleID]
  -[CKDClientProxy setCachedApplicationBundleID:]
  -[CKDClientProxy associatedApplicationBundleID]
  -[CKDClientProxy hasMasqueradingEntitlement]
  -[CKDClientProxy _clientPrefixEntitlement]
  -[CKDClientProxy pendingOperationIDs]
  -[CKDClientProxy _startClientSetupWithSetupInfo:completionHandler:]
  -[CKDClientProxy cancellationQueue]
  -[CKDClientProxy _handleStatisticsForOperation:withArguments:]
  -[CKDClientProxy _isConnectionAuthorizedForOperation:error:]
  -[CKDClientProxy handleCheckpointForOperationWithID:withArguments:]
  -[CKDClientProxy hasCloudKitSupportServiceEntitlement]
  -[CKDClientProxy _accountStatusWithClientContext:]
  -[CKDClientProxy _setupClientWithSetupInfo:completionHandler:]
  -[CKDClientProxy _applicationPermissionStatusFromUserPrivacySetting:]
  -[CKDClientProxy _addOperationWithOperationInfo:factoryBlock:]
  -[CKDClientProxy _globalStatusForApplicationPermission:setupInfo:completionHandler:]
  -[CKDClientProxy _setApplicationPermission:enabled:setupInfo:completionHandler:]
  -[CKDClientProxy _handleProgressForOperationWithID:withArguments:completion:]
  -[CKDClientProxy operationStatisticsByClassName]
  -[CKDClientProxy _handleProgressForOperation:withArguments:]
  -[CKDClientProxy _handleCompletionForOperation:withBlock:]
  -[CKDClientProxy _handleProgressForOperation:withArguments:completion:]
  -[CKDClientProxy _performFetchCurrentUserRecordOperation:withBlock:]
  -[CKDClientProxy _reallyPerformFetchRecordsOperation:withBlock:]
  -[CKDClientProxy statusQueue]
  -[CKDClientProxy CKStatusReportArrayIncludingSharedOperations:]
  -[CKDClientProxy _locked_eligiblePendingContextForSetupInfo:]
  -[CKDClientProxy _updateConnectionEntitlementsWithFakeEntitlements:]
  -[CKDClientProxy _hasCustomAccountsEntitlement]
  -[CKDClientProxy systemAvailabilityChanged:]
  -[CKDClientProxy _hasEnvironmentEntitlement]
  -[CKDClientProxy hasFakeEntitlements]
  -[CKDClientProxy setCachedSandboxExtensions:]
  -[CKDClientProxy _finishClientSetupWithClientContext:completionHandler:]
  -[CKDClientProxy cachedSandboxExtensions]
  -[CKDClientProxy connectionDate]
  -[CKDClientProxy canUsePackages]
  -[CKDClientProxy hasTCCAuthorization]
  -[CKDClientProxy getTCCAuthorizationWithCompletion:]
  -[CKDClientProxy hasProtectionDataEntitlement]
  -[CKDClientProxy hasZoneProtectionDataEntitlement]
  -[CKDClientProxy hasDeviceIdentifierEntitlement]
  -[CKDClientProxy hasCloudKitSystemServiceEntitlement]
  -[CKDClientProxy hasDarkWakeNetworkReachabilityEnabledEntitlement]
  -[CKDClientProxy hasLightweightPCSEntitlement]
  -[CKDClientProxy hasDisplaysSystemAcceptPromptEntitlement]
  -[CKDClientProxy hasNonLegacyShareURLEntitlement]
  -[CKDClientProxy hasAllowUnverifiedAccountEntitlement]
  -[CKDClientProxy hasExplicitCodeOperationURLEntitlement]
  -[CKDClientProxy serviceNameForContainerMapEntitlement]
  -[CKDClientProxy _outstandingOperationCount]
  -[CKDClientProxy applicationBundleIDForPush]
  -[CKDClientProxy apsEnvironmentEntitlement]
  -[CKDClientProxy openFileWithOpenInfo:error:]
  -[CKDClientProxy readBytesOfInMemoryAssetContentWithUUID:offset:length:error:]
  -[CKDClientProxy canOpenFileAtURL:]
  -[CKDClientProxy canUsePackagesWithError:]
  -[CKDClientProxy setCleanupOperationQueue:]
  -[CKDClientProxy setSetupQueue:]
  -[CKDClientProxy setCancellationQueue:]
  -[CKDClientProxy setStatusQueue:]
  -[CKDClientProxy setCloudKitSupportOperationThrottleQueue:]
  -[CKDClientProxy setBackgroundOperationThrottleQueue:]
  -[CKDClientProxy setPendingContexts:]
  -[CKDClientProxy setCanUsePackages:]
  -[CKDClientProxy canOpenByID]
  -[CKDClientProxy setCanOpenByID:]
  -[CKDClientProxy setPendingOperationIDs:]
  -[CKDClientProxy setConnectionDate:]
  -[CKDClientProxy hasTCCAuthorizationTernary]
  -[CKDClientProxy setHasTCCAuthorizationTernary:]
  -[CKDClientProxy tccAuthOpQueue]
  -[CKDClientProxy setTccAuthOpQueue:]
  -[CKDClientProxy setTccAuthQueue:]
  -[CKDClientProxy TCCDatabaseChangedNotificationObserver]
  -[CKDClientProxy setOperationStatisticsByClassName:]
  -[CKDClientProxy setFetchAggregator:]


CKDClientContext : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDContextInfoProvider, CKDAccountAccessInfoProvider, CKDContainerScopedUserIDProvider>
 @property  CKDAccount *account
 @property  CKDMMCS *MMCS
 @property  NSObject<OS_dispatch_queue> *setupQueue
 @property  BOOL sandboxed
 @property  BOOL finishedAppProxySetup
 @property  BOOL finishedProxySetup
 @property  NSString *contextID
 @property  CKDZoneGatekeeper *foregroundZoneGatekeeper
 @property  CKDZoneGatekeeper *backgroundZoneGatekeeper
 @property  CKDCachePurger *cachePurger
 @property  NSString *applicationContainerPath
 @property  NSString *applicationContainerCloudKitDirectory
 @property  NSString *applicationCachesDirectory
 @property  NSString *applicationMMCSDirectory
 @property  NSString *applicationAssetDbDirectory
 @property  NSString *applicationFileStagingDirectory
 @property  NSString *applicationFileDownloadDirectory
 @property  NSString *applicationRecordCacheDirectory
 @property  NSString *applicationFrameworkCachesDirectory
 @property  NSString *applicationPackageStagingDirectory
 @property  BOOL wasInitializedWithProxy
 @property  NSString *containerEncryptionServiceName
 @property  NSString *entitlementSpecifiedPCSServiceName
 @property  CKDKeyValueDiskCache *publicIdentitiesDiskCache
 @property  CKDPublicIdentityLookupService *foregroundPublicIdentityLookupService
 @property  CKDPublicIdentityLookupService *backgroundPublicIdentityLookupService
 @property  CKDAppContainerIntersectionMetadata *appContainerIntersectionMetadata
 @property  CKDApplicationMetadata *applicationMetadata
 @property  CKDFlowControlManager *flowControlManager
 @property  NSString *applicationVersion
 @property  CKDPCSManager *pcsManager
 @property  NSHashTable *proxies
 @property  unsigned long mmcsEncryptionSupport
 @property  NSString *applicationBundleID
 @property  NSString *associatedApplicationBundleID
 @property  BOOL hasMasqueradingEntitlement
 @property  BOOL hasAllowSetEnvironmentEntitlement
 @property  BOOL hasAllowCustomAccountsEntitlement
 @property  NSString *clientPrefixEntitlement
 @property  BOOL hasTCCAuthorization
 @property  long long contextType
 @property  NSObject<OS_dispatch_group> *proxyPreparationGroup
 @property  CKDServerConfiguration *config
 @property  NSURL *publicCloudDBURL
 @property  NSURL *publicShareServiceURL
 @property  NSURL *publicDeviceServiceURL
 @property  NSURL *publicCodeServiceURL
 @property  NSURL *publicMetricsServiceURL
 @property  NSURL *publicDatabaseRPCServiceURL
 @property  NSString *containerScopedUserID
 @property  NSString *orgAdminUserID
 @property  BOOL isForClouddInternalUse
 @property  long long cachedEnvironment
 @property  CKContainerID *containerID
 @property  NSString *sourceApplicationBundleID
 @property  NSString *personaID
 @property  NSURL *applicationIcon
 @property  NSString *applicationDisplayName
 @property  NSString *applicationTemporaryDirectory
 @property  CKDAppContainerTuple *appContainerTuple
 @property  NSString *applicationBundleIDForPush
 @property  NSString *applicationBundleIDForServer
 @property  NSString *hardwareID
 @property  NSString *apsEnvironmentString
 @property  CKAccountOverrideInfo *accountInfoOverride
 @property  BOOL canAccessAccount
 @property  BOOL canAuthWithCloudKit
 @property  BOOL allowsCellularAccess
 @property  BOOL hasDataContainer
 @property  BOOL canAccessProtectionData
 @property  BOOL canAccessZoneProtectionData
 @property  BOOL canSetDeviceIdentifier
 @property  BOOL hasSystemServiceEntitlement
 @property  BOOL allowsPowerNapScheduling
 @property  BOOL hasAllowAccessDuringBuddyEntitlement
 @property  BOOL hasLightweightPCSEntitlement
 @property  BOOL captureResponseHTTPHeaders
 @property  BOOL hasOutOfProcessUIEntitlement
 @property  BOOL hasParticipantPIIEntitlement
 @property  BOOL hasDisplaysSystemAcceptPromptEntitlement
 @property  BOOL useZoneWidePCS
 @property  BOOL returnPCSMetadata
 @property  NSString *encryptionServiceName
 @property  BOOL bypassPCSEncryption
 @property  BOOL forceEnableReadOnlyManatee
 @property  unsigned int clientSDKVersion
 @property  BOOL isSiloedContext
 @property  BOOL hasNonLegacyShareURLEntitlement
 @property  BOOL hasAllowUnverifiedAccountEntitlement
 @property  BOOL hasExplicitCodeOperationURLEntitlement
 @property  CKDPCSCache *pcsCache
 @property  NSMutableDictionary *fakeErrorsByClassName
 @property  NSMutableDictionary *fakeResponseOperationLifetimeByClassName
 @property  NSMutableDictionary *fakeResponseOperationResultByClassNameByItemID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *deviceName
 @property  NSString *languageCode
 @property  NSString *regionCode
 @property  NSString *processName

  // class methods
  +[CKDClientContext contextWithAppContainerTuple:accountInfoOverride:proxy:]
  +[CKDClientContext sharedContextWithAppContainerTuple:accountInfoOverride:proxy:]
  +[CKDClientContext applicationContainerPathForBundleID:bundleURL:contextType:]
  +[CKDClientContext applicationCachesPathForBundleID:]
  +[CKDClientContext sharedContexts]
  +[CKDClientContext _sharedContextWithAppContainerTuple:accountInfoOverride:proxy:forInternalUse:]
  +[CKDClientContext _sharedContextWithAppContainerTuple:accountInfoOverride:proxy:forInternalUse:addToSharedContexts:]
  +[CKDClientContext applicationCachesPathForBundleID:usingHomeCachesDirectory:]
  +[CKDClientContext sharedContextForInternalUseWithAppContainerAccountTuple:]
  +[CKDClientContext sharedContextForInternalUseWithAppContainerTuple:unitTestingAccountInfoProvider:]

  // instance methods
  -[CKDClientContext dealloc]
  -[CKDClientContext .cxx_destruct]
  -[CKDClientContext languageCode]
  -[CKDClientContext processName]
  -[CKDClientContext config]
  -[CKDClientContext proxies]
  -[CKDClientContext contextID]
  -[CKDClientContext setConfig:]
  -[CKDClientContext account]
  -[CKDClientContext setAccount:]
  -[CKDClientContext deviceName]
  -[CKDClientContext personaID]
  -[CKDClientContext applicationBundleID]
  -[CKDClientContext allowsCellularAccess]
  -[CKDClientContext setApplicationVersion:]
  -[CKDClientContext regionCode]
  -[CKDClientContext containerID]
  -[CKDClientContext contextType]
  -[CKDClientContext setContextType:]
  -[CKDClientContext CKPropertiesDescription]
  -[CKDClientContext showUserNotification:withCompletionBlock:]
  -[CKDClientContext returnPCSMetadata]
  -[CKDClientContext accountInfoOverride]
  -[CKDClientContext captureResponseHTTPHeaders]
  -[CKDClientContext useZoneWidePCS]
  -[CKDClientContext mmcsEncryptionSupport]
  -[CKDClientContext containerEncryptionServiceName]
  -[CKDClientContext bypassPCSEncryption]
  -[CKDClientContext forceEnableReadOnlyManatee]
  -[CKDClientContext clientSDKVersion]
  -[CKDClientContext setCaptureResponseHTTPHeaders:]
  -[CKDClientContext setReturnPCSMetadata:]
  -[CKDClientContext setContainerEncryptionServiceName:]
  -[CKDClientContext setClientSDKVersion:]
  -[CKDClientContext encryptionServiceName]
  -[CKDClientContext setContainerScopedUserID:]
  -[CKDClientContext setOrgAdminUserID:]
  -[CKDClientContext clearContextFromMetadataCache]
  -[CKDClientContext clearPILSCacheForLookupInfos:]
  -[CKDClientContext flowControlManager]
  -[CKDClientContext setFakeError:forNextRequestOfClassName:]
  -[CKDClientContext setFakeResponseOperationResult:forNextRequestOfClassName:forItemID:withLifetime:]
  -[CKDClientContext containerScopedUserID]
  -[CKDClientContext orgAdminUserID]
  -[CKDClientContext setFlowControlManager:]
  -[CKDClientContext publicIdentitiesExpirationTimeout]
  -[CKDClientContext clearAssetCache]
  -[CKDClientContext countAssetCacheItems]
  -[CKDClientContext showAssetCache]
  -[CKDClientContext clearRecordCache]
  -[CKDClientContext sourceApplicationBundleID]
  -[CKDClientContext applicationVersion]
  -[CKDClientContext _clearCaches]
  -[CKDClientContext isSandboxed]
  -[CKDClientContext applicationIcon]
  -[CKDClientContext setSandboxed:]
  -[CKDClientContext performRequest:]
  -[CKDClientContext applicationDisplayName]
  -[CKDClientContext setApplicationBundleID:]
  -[CKDClientContext applicationPackageStagingDirectory]
  -[CKDClientContext canAccessProtectionData]
  -[CKDClientContext hasOutOfProcessUIEntitlement]
  -[CKDClientContext hasParticipantPIIEntitlement]
  -[CKDClientContext applicationContainerCloudKitDirectory]
  -[CKDClientContext applicationRecordCacheDirectory]
  -[CKDClientContext pcsManager]
  -[CKDClientContext pcsCache]
  -[CKDClientContext cachedEnvironment]
  -[CKDClientContext addClientProxy:]
  -[CKDClientContext hasAllowAccessDuringBuddyEntitlement]
  -[CKDClientContext tearDownAssetTransfers]
  -[CKDClientContext setupQueue]
  -[CKDClientContext removeClientProxy:]
  -[CKDClientContext proxyPreparationGroup]
  -[CKDClientContext associatedApplicationBundleID]
  -[CKDClientContext hasMasqueradingEntitlement]
  -[CKDClientContext createAppContainerTuple]
  -[CKDClientContext hasAccountAccessAndTCCAuth]
  -[CKDClientContext fetchImportantUserIDsForOperation:withCompletionHandler:]
  -[CKDClientContext baseURLForServerType:partitionType:]
  -[CKDClientContext canAuthWithCloudKit]
  -[CKDClientContext fetchServerEnvironmentForOperation:withCompletionHandler:]
  -[CKDClientContext hardwareID]
  -[CKDClientContext startSetupWithClientProxy:completionHandler:]
  -[CKDClientContext finishSetupWithClientProxy:completionHandler:]
  -[CKDClientContext applicationFrameworkCachesDirectory]
  -[CKDClientContext countAssetCacheItemsWithDatabaseScope:]
  -[CKDClientContext showAssetCacheWithDatabaseScope:]
  -[CKDClientContext clearAssetCacheWithDatabaseScope:]
  -[CKDClientContext clearRecordCacheWithDatabaseScope:]
  -[CKDClientContext clearAuthTokensForRecordWithID:databaseScope:]
  -[CKDClientContext aggregatedOutstandingOperationCount]
  -[CKDClientContext foregroundZoneGatekeeper]
  -[CKDClientContext backgroundZoneGatekeeper]
  -[CKDClientContext MMCS]
  -[CKDClientContext hasTCCAuthorization]
  -[CKDClientContext hasLightweightPCSEntitlement]
  -[CKDClientContext hasDisplaysSystemAcceptPromptEntitlement]
  -[CKDClientContext hasNonLegacyShareURLEntitlement]
  -[CKDClientContext hasAllowUnverifiedAccountEntitlement]
  -[CKDClientContext hasExplicitCodeOperationURLEntitlement]
  -[CKDClientContext applicationBundleIDForPush]
  -[CKDClientContext setSetupQueue:]
  -[CKDClientContext _reloadAccount:]
  -[CKDClientContext _loadApplicationContainerPathAndType]
  -[CKDClientContext _determineHardwareInfo]
  -[CKDClientContext applicationContainerPath]
  -[CKDClientContext applicationCachesDirectory]
  -[CKDClientContext applicationTemporaryDirectory]
  -[CKDClientContext applicationMMCSDirectory]
  -[CKDClientContext applicationAssetDbDirectory]
  -[CKDClientContext applicationFileStagingDirectory]
  -[CKDClientContext applicationFileDownloadDirectory]
  -[CKDClientContext dropMMCS]
  -[CKDClientContext isForClouddInternalUse]
  -[CKDClientContext _cancelAllLongLivedOperations]
  -[CKDClientContext setIsForClouddInternalUse:]
  -[CKDClientContext appContainerTuple]
  -[CKDClientContext setCachedEnvironment:]
  -[CKDClientContext shouldUsePCSEncryption]
  -[CKDClientContext hasSystemServiceEntitlement]
  -[CKDClientContext _dataclassNameForContainerIdentifier:]
  -[CKDClientContext _cloudKitEnabledForCurrentClient]
  -[CKDClientContext _anyAssociatedProxyHasTCCAuthorization]
  -[CKDClientContext hasDataContainer]
  -[CKDClientContext _issueSandboxExtensionForPath:withAuditToken:error:]
  -[CKDClientContext initWithAppContainerTuple:accountInfoOverride:proxy:]
  -[CKDClientContext assetDirectoryContext]
  -[CKDClientContext setMMCS:]
  -[CKDClientContext _setupDirectoriesWithClientProxy:sandboxExtensions:error:]
  -[CKDClientContext setupMMCSWrapperWithError:]
  -[CKDClientContext fakeErrorsByClassName]
  -[CKDClientContext fakeResponseOperationResultByClassNameByItemID]
  -[CKDClientContext fakeResponseOperationLifetimeByClassName]
  -[CKDClientContext setFinishedAppProxySetup:]
  -[CKDClientContext setFinishedProxySetup:]
  -[CKDClientContext finishedAppProxySetup]
  -[CKDClientContext setAPSEnvironmentString:]
  -[CKDClientContext finishedProxySetup]
  -[CKDClientContext applicationMetadata]
  -[CKDClientContext appContainerIntersectionMetadata]
  -[CKDClientContext setAssociatedApplicationBundleID:]
  -[CKDClientContext setHasTCCAuthorization:]
  -[CKDClientContext setCanAccessProtectionData:]
  -[CKDClientContext setCanAccessZoneProtectionData:]
  -[CKDClientContext setCanSetDeviceIdentifier:]
  -[CKDClientContext setAllowsPowerNapScheduling:]
  -[CKDClientContext setApplicationContainerPath:]
  -[CKDClientContext setEntitlementSpecifiedPCSServiceName:]
  -[CKDClientContext entitlementSpecifiedPCSServiceName]
  -[CKDClientContext _urlBySettingCustomBaseURL:onURL:]
  -[CKDClientContext publicCloudDBURL]
  -[CKDClientContext publicShareServiceURL]
  -[CKDClientContext publicDeviceServiceURL]
  -[CKDClientContext publicCodeServiceURL]
  -[CKDClientContext publicMetricsServiceURL]
  -[CKDClientContext publicDatabaseRPCServiceURL]
  -[CKDClientContext setPublicCloudDBURL:]
  -[CKDClientContext setPublicShareServiceURL:]
  -[CKDClientContext setPublicDeviceServiceURL:]
  -[CKDClientContext setPublicCodeServiceURL:]
  -[CKDClientContext setPublicMetricsServiceURL:]
  -[CKDClientContext setPublicDatabaseRPCServiceURL:]
  -[CKDClientContext _fetchContainerInfoForOperation:requireUserIDs:completionHandler:]
  -[CKDClientContext allowsPowerNapScheduling]
  -[CKDClientContext apsEnvironmentString]
  -[CKDClientContext canAccessZoneProtectionData]
  -[CKDClientContext canSetDeviceIdentifier]
  -[CKDClientContext wasInitializedWithProxy]
  -[CKDClientContext setFakeErrorsByClassName:]
  -[CKDClientContext setFakeResponseOperationResultByClassNameByItemID:]
  -[CKDClientContext setFakeResponseOperationLifetimeByClassName:]
  -[CKDClientContext setupAssetTransfersWithClientProxy:error:]
  -[CKDClientContext backgroundPublicIdentityLookupService]
  -[CKDClientContext foregroundPublicIdentityLookupService]
  -[CKDClientContext deviceIDForOperation:]
  -[CKDClientContext fetchConfigurationForOperation:withCompletionHandler:]
  -[CKDClientContext fetchPublicURLForServerType:operation:completionHandler:]
  -[CKDClientContext fetchPrivateURLForServerType:operation:completionHandler:]
  -[CKDClientContext applicationBundleIDForServer]
  -[CKDClientContext canAccessAccount]
  -[CKDClientContext setHasSystemServiceEntitlement:]
  -[CKDClientContext setHasMasqueradingEntitlement:]
  -[CKDClientContext hasAllowSetEnvironmentEntitlement]
  -[CKDClientContext setHasAllowSetEnvironmentEntitlement:]
  -[CKDClientContext hasAllowCustomAccountsEntitlement]
  -[CKDClientContext setHasAllowCustomAccountsEntitlement:]
  -[CKDClientContext setHasAllowAccessDuringBuddyEntitlement:]
  -[CKDClientContext setHasLightweightPCSEntitlement:]
  -[CKDClientContext setHasOutOfProcessUIEntitlement:]
  -[CKDClientContext setHasParticipantPIIEntitlement:]
  -[CKDClientContext setHasDisplaysSystemAcceptPromptEntitlement:]
  -[CKDClientContext clientPrefixEntitlement]
  -[CKDClientContext setClientPrefixEntitlement:]
  -[CKDClientContext publicIdentitiesDiskCache]
  -[CKDClientContext setHasNonLegacyShareURLEntitlement:]
  -[CKDClientContext setHasAllowUnverifiedAccountEntitlement:]
  -[CKDClientContext setHasExplicitCodeOperationURLEntitlement:]
  -[CKDClientContext setProxies:]
  -[CKDClientContext setApplicationContainerCloudKitDirectory:]
  -[CKDClientContext setApplicationCachesDirectory:]
  -[CKDClientContext setApplicationMMCSDirectory:]
  -[CKDClientContext setApplicationAssetDbDirectory:]
  -[CKDClientContext setApplicationFileStagingDirectory:]
  -[CKDClientContext setApplicationFileDownloadDirectory:]
  -[CKDClientContext setApplicationRecordCacheDirectory:]
  -[CKDClientContext setApplicationFrameworkCachesDirectory:]
  -[CKDClientContext setApplicationPackageStagingDirectory:]
  -[CKDClientContext setHasDataContainer:]
  -[CKDClientContext isSiloedContext]
  -[CKDClientContext setForegroundZoneGatekeeper:]
  -[CKDClientContext setBackgroundZoneGatekeeper:]
  -[CKDClientContext cachePurger]
  -[CKDClientContext setCachePurger:]
  -[CKDClientContext setWasInitializedWithProxy:]
  -[CKDClientContext setPublicIdentitiesDiskCache:]
  -[CKDClientContext setForegroundPublicIdentityLookupService:]
  -[CKDClientContext setBackgroundPublicIdentityLookupService:]
  -[CKDClientContext setAppContainerIntersectionMetadata:]
  -[CKDClientContext setApplicationMetadata:]
  -[CKDClientContext setPcsManager:]
  -[CKDClientContext setProxyPreparationGroup:]


CKDPAssetUploadTokenRetrieveResponseHeaderInfo : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSString *headerKey
 @property  NSString *headerValue

  // instance methods
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo isEqual:]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo copyWithZone:]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo .cxx_destruct]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo dictionaryRepresentation]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo writeTo:]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo mergeFrom:]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo readFrom:]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo copyTo:]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo setHeaderKey:]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo setHeaderValue:]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo headerKey]
  -[CKDPAssetUploadTokenRetrieveResponseHeaderInfo headerValue]


CKDPCSMemoryCacheEntry : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKDPCSData *pcsData
 @property  double lastAccess

  // instance methods
  -[CKDPCSMemoryCacheEntry init]
  -[CKDPCSMemoryCacheEntry .cxx_destruct]
  -[CKDPCSMemoryCacheEntry CKPropertiesDescription]
  -[CKDPCSMemoryCacheEntry setLastAccess:]
  -[CKDPCSMemoryCacheEntry lastAccess]
  -[CKDPCSMemoryCacheEntry pcsData]
  -[CKDPCSMemoryCacheEntry setPcsData:]


CKDPCSMemoryCache : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *cacheEntries
 @property  NSObject<OS_dispatch_queue> *accessQueue
 @property  NSObject<OS_dispatch_source> *memoryNotificationSource
 @property  unsigned long memoryStatus
 @property  BOOL memoryStatusChanged
 @property  <NSObject> *memoryCacheEvictNotificationObserver
 @property  double oldestCacheEntry
 @property  unsigned long memoryCacheRequestCount
 @property  unsigned long memoryCacheHitCount
 @property  unsigned long memoryCacheHighwaterCount
 @property  unsigned long memoryCacheDeleteCount
 @property  unsigned long memoryCacheUpdateCount
 @property  unsigned long memoryCacheEvictCount
 @property  unsigned long maxEntries
 @property  double minAge

  // class methods
  +[CKDPCSMemoryCache registerEvictionTimer]
  +[CKDPCSMemoryCache globalEvictQueue]

  // instance methods
  -[CKDPCSMemoryCache init]
  -[CKDPCSMemoryCache dealloc]
  -[CKDPCSMemoryCache clearCache]
  -[CKDPCSMemoryCache .cxx_destruct]
  -[CKDPCSMemoryCache accessQueue]
  -[CKDPCSMemoryCache cacheEntries]
  -[CKDPCSMemoryCache setCacheEntries:]
  -[CKDPCSMemoryCache CKStatusReportArray]
  -[CKDPCSMemoryCache setAccessQueue:]
  -[CKDPCSMemoryCache setMinAge:]
  -[CKDPCSMemoryCache getPCSDataFromCacheForID:databaseScope:withCompletionHandler:]
  -[CKDPCSMemoryCache setPCSData:forItemID:databaseScope:withCompletionHandler:]
  -[CKDPCSMemoryCache hasStatusToReport]
  -[CKDPCSMemoryCache memoryNotificationSource]
  -[CKDPCSMemoryCache setMemoryStatus:]
  -[CKDPCSMemoryCache setMemoryStatusChanged:]
  -[CKDPCSMemoryCache runCacheEviction]
  -[CKDPCSMemoryCache setMemoryCacheEvictNotificationObserver:]
  -[CKDPCSMemoryCache minAge]
  -[CKDPCSMemoryCache maxEntries]
  -[CKDPCSMemoryCache memoryStatus]
  -[CKDPCSMemoryCache oldestCacheEntry]
  -[CKDPCSMemoryCache setOldestCacheEntry:]
  -[CKDPCSMemoryCache memoryCacheEvictCount]
  -[CKDPCSMemoryCache setMemoryCacheEvictCount:]
  -[CKDPCSMemoryCache memoryCacheRequestCount]
  -[CKDPCSMemoryCache setMemoryCacheRequestCount:]
  -[CKDPCSMemoryCache memoryCacheHitCount]
  -[CKDPCSMemoryCache setMemoryCacheHitCount:]
  -[CKDPCSMemoryCache memoryStatusChanged]
  -[CKDPCSMemoryCache _lockedEvictEntriesFromCache]
  -[CKDPCSMemoryCache memoryCacheUpdateCount]
  -[CKDPCSMemoryCache setMemoryCacheUpdateCount:]
  -[CKDPCSMemoryCache memoryCacheHighwaterCount]
  -[CKDPCSMemoryCache setMemoryCacheHighwaterCount:]
  -[CKDPCSMemoryCache memoryCacheDeleteCount]
  -[CKDPCSMemoryCache setMemoryCacheDeleteCount:]
  -[CKDPCSMemoryCache _cacheCount]
  -[CKDPCSMemoryCache setMaxEntries:]
  -[CKDPCSMemoryCache setMemoryNotificationSource:]
  -[CKDPCSMemoryCache memoryCacheEvictNotificationObserver]


CKDPArchiveRecordsRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *idsToArchives

  // class methods
  +[CKDPArchiveRecordsRequest options]
  +[CKDPArchiveRecordsRequest idsToArchiveType]

  // instance methods
  -[CKDPArchiveRecordsRequest isEqual:]
  -[CKDPArchiveRecordsRequest copyWithZone:]
  -[CKDPArchiveRecordsRequest .cxx_destruct]
  -[CKDPArchiveRecordsRequest dictionaryRepresentation]
  -[CKDPArchiveRecordsRequest writeTo:]
  -[CKDPArchiveRecordsRequest mergeFrom:]
  -[CKDPArchiveRecordsRequest readFrom:]
  -[CKDPArchiveRecordsRequest copyTo:]
  -[CKDPArchiveRecordsRequest addIdsToArchive:]
  -[CKDPArchiveRecordsRequest idsToArchivesCount]
  -[CKDPArchiveRecordsRequest clearIdsToArchives]
  -[CKDPArchiveRecordsRequest idsToArchiveAtIndex:]
  -[CKDPArchiveRecordsRequest idsToArchives]
  -[CKDPArchiveRecordsRequest setIdsToArchives:]


CKDPResponseOperationHeader : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *assetAuthorizationResponses

  // class methods
  +[CKDPResponseOperationHeader assetAuthorizationResponsesType]

  // instance methods
  -[CKDPResponseOperationHeader isEqual:]
  -[CKDPResponseOperationHeader copyWithZone:]
  -[CKDPResponseOperationHeader .cxx_destruct]
  -[CKDPResponseOperationHeader dictionaryRepresentation]
  -[CKDPResponseOperationHeader writeTo:]
  -[CKDPResponseOperationHeader mergeFrom:]
  -[CKDPResponseOperationHeader readFrom:]
  -[CKDPResponseOperationHeader copyTo:]
  -[CKDPResponseOperationHeader addAssetAuthorizationResponses:]
  -[CKDPResponseOperationHeader assetAuthorizationResponsesCount]
  -[CKDPResponseOperationHeader clearAssetAuthorizationResponses]
  -[CKDPResponseOperationHeader assetAuthorizationResponsesAtIndex:]
  -[CKDPResponseOperationHeader assetAuthorizationResponses]
  -[CKDPResponseOperationHeader setAssetAuthorizationResponses:]


CKDPSetBadgeCountResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPSetBadgeCountResponse isEqual:]
  -[CKDPSetBadgeCountResponse copyWithZone:]
  -[CKDPSetBadgeCountResponse dictionaryRepresentation]
  -[CKDPSetBadgeCountResponse writeTo:]
  -[CKDPSetBadgeCountResponse mergeFrom:]
  -[CKDPSetBadgeCountResponse readFrom:]
  -[CKDPSetBadgeCountResponse copyTo:]


CKDPQuerySort : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasFieldName
 @property  CKDPRecordFieldIdentifier *fieldName
 @property  BOOL hasOrder
 @property  int order
 @property  BOOL hasCoordinate
 @property  CKDPLocationCoordinate *coordinate

  // instance methods
  -[CKDPQuerySort isEqual:]
  -[CKDPQuerySort copyWithZone:]
  -[CKDPQuerySort .cxx_destruct]
  -[CKDPQuerySort coordinate]
  -[CKDPQuerySort dictionaryRepresentation]
  -[CKDPQuerySort order]
  -[CKDPQuerySort writeTo:]
  -[CKDPQuerySort mergeFrom:]
  -[CKDPQuerySort readFrom:]
  -[CKDPQuerySort copyTo:]
  -[CKDPQuerySort setCoordinate:]
  -[CKDPQuerySort setOrder:]
  -[CKDPQuerySort fieldName]
  -[CKDPQuerySort hasCoordinate]
  -[CKDPQuerySort setFieldName:]
  -[CKDPQuerySort hasFieldName]
  -[CKDPQuerySort setHasOrder:]
  -[CKDPQuerySort hasOrder]
  -[CKDPQuerySort orderAsString:]
  -[CKDPQuerySort StringAsOrder:]


CKDMMCSItemCommandWriter : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDMMCSItemReaderWriterProtocol>
 @property  CKDMMCSItemGroupContext *MMCSRequest
 @property  CKDMMCSItem *MMCSItem
 @property  NSMutableIndexSet *byteRanges
 @property  unsigned long maximumLength
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDMMCSItemCommandWriter dealloc]
  -[CKDMMCSItemCommandWriter .cxx_destruct]
  -[CKDMMCSItemCommandWriter openWithError:]
  -[CKDMMCSItemCommandWriter isContiguous]
  -[CKDMMCSItemCommandWriter byteRanges]
  -[CKDMMCSItemCommandWriter setByteRanges:]
  -[CKDMMCSItemCommandWriter maximumLength]
  -[CKDMMCSItemCommandWriter setMaximumLength:]
  -[CKDMMCSItemCommandWriter closeWithError:]
  -[CKDMMCSItemCommandWriter MMCSRequest]
  -[CKDMMCSItemCommandWriter MMCSItem]
  -[CKDMMCSItemCommandWriter getFileMetadataWithError:]
  -[CKDMMCSItemCommandWriter readBytesAtOffset:bytes:length:bytesRead:error:]
  -[CKDMMCSItemCommandWriter writeBytesAtOffset:bytes:length:bytesWritten:error:]
  -[CKDMMCSItemCommandWriter initWithMMCSItem:MMCSRequest:]
  -[CKDMMCSItemCommandWriter setMMCSRequest:]
  -[CKDMMCSItemCommandWriter setMMCSItem:]


CKDAssetTokenRequest : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableArray *assetBatches
 @property  NSMutableSet *failedAssetBatches
 @property  unsigned int sizeUpperBound
 @property  unsigned int size

  // instance methods
  -[CKDAssetTokenRequest init]
  -[CKDAssetTokenRequest isEmpty]
  -[CKDAssetTokenRequest .cxx_destruct]
  -[CKDAssetTokenRequest size]
  -[CKDAssetTokenRequest setSize:]
  -[CKDAssetTokenRequest CKPropertiesDescription]
  -[CKDAssetTokenRequest sizeUpperBound]
  -[CKDAssetTokenRequest assetBatches]
  -[CKDAssetTokenRequest failedAssetBatches]
  -[CKDAssetTokenRequest addAssetBatch:]
  -[CKDAssetTokenRequest addFailedBatch:]
  -[CKDAssetTokenRequest hasSuccessfulBatches]
  -[CKDAssetTokenRequest successfulBatches]
  -[CKDAssetTokenRequest setAssetBatches:]
  -[CKDAssetTokenRequest setFailedAssetBatches:]
  -[CKDAssetTokenRequest setSizeUpperBound:]


CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasApplicationContainer
 @property  NSString *applicationContainer
 @property  BOOL hasApplicationContainerEnvironment
 @property  int applicationContainerEnvironment
 @property  NSMutableArray *applicationBundles
 @property  BOOL hasUserPrivacySettings
 @property  CKDPUserPrivacySettings *userPrivacySettings

  // class methods
  +[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings applicationBundleType]

  // instance methods
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings isEqual:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings copyWithZone:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings .cxx_destruct]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings dictionaryRepresentation]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings writeTo:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings mergeFrom:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings readFrom:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings copyTo:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings setApplicationContainer:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings setApplicationContainerEnvironment:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings hasApplicationContainer]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings applicationContainerEnvironment]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings setHasApplicationContainerEnvironment:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings hasApplicationContainerEnvironment]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings applicationContainer]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings addApplicationBundle:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings applicationBundlesCount]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings clearApplicationBundles]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings applicationBundleAtIndex:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings setUserPrivacySettings:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings applicationContainerEnvironmentAsString:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings StringAsApplicationContainerEnvironment:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings hasUserPrivacySettings]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings applicationBundles]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings setApplicationBundles:]
  -[CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings userPrivacySettings]


CKDKeyValueDiskCache : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  PQLConnection *db
 @property  NSString *identifier
 @property  CKDClientContext *context
 @property  double expirationTimeout

  // instance methods
  -[CKDKeyValueDiskCache dealloc]
  -[CKDKeyValueDiskCache .cxx_destruct]
  -[CKDKeyValueDiskCache identifier]
  -[CKDKeyValueDiskCache setIdentifier:]
  -[CKDKeyValueDiskCache context]
  -[CKDKeyValueDiskCache setCachedValue:forKey:]
  -[CKDKeyValueDiskCache cachedValueForKey:]
  -[CKDKeyValueDiskCache db]
  -[CKDKeyValueDiskCache setDb:]
  -[CKDKeyValueDiskCache setContext:]
  -[CKDKeyValueDiskCache initWithIdentifier:context:]
  -[CKDKeyValueDiskCache dbPath]
  -[CKDKeyValueDiskCache setExpirationTimeout:]
  -[CKDKeyValueDiskCache expirationTimeout]
  -[CKDKeyValueDiskCache setupCacheWithError:]
  -[CKDKeyValueDiskCache _garbageCollectExpiredEntries]
  -[CKDKeyValueDiskCache removeCachedValueForKey:]
  -[CKDKeyValueDiskCache deleteCachedValuesBecauseOfLowDisk]


CKDPipeliningInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableArray *perRequestCallbackBlocks
 @property  BOOL isCancelled
 @property  <CKDURLRequestPipelining> *request
 @property  <CKDOperationPipelining> *operation
 @property  NSObject<OS_dispatch_group> *perRequestCallbackGroup
 @property  NSObject<OS_dispatch_group> *perRequestGroup
 @property  NSObject<OS_dispatch_queue> *perRequestCallbackQueue

  // instance methods
  -[CKDPipeliningInfo .cxx_destruct]
  -[CKDPipeliningInfo operation]
  -[CKDPipeliningInfo setOperation:]
  -[CKDPipeliningInfo isCancelled]
  -[CKDPipeliningInfo setRequest:]
  -[CKDPipeliningInfo request]
  -[CKDPipeliningInfo setIsCancelled:]
  -[CKDPipeliningInfo initWithRequest:operation:]
  -[CKDPipeliningInfo addPerRequestCallbackBlock:]
  -[CKDPipeliningInfo disablePerRequestCallbackBlocks]
  -[CKDPipeliningInfo cancelAndDisablePerRequestCallbackBlocks]
  -[CKDPipeliningInfo perRequestCallbackGroup]
  -[CKDPipeliningInfo setPerRequestCallbackGroup:]
  -[CKDPipeliningInfo perRequestGroup]
  -[CKDPipeliningInfo setPerRequestGroup:]
  -[CKDPipeliningInfo perRequestCallbackQueue]
  -[CKDPipeliningInfo setPerRequestCallbackQueue:]
  -[CKDPipeliningInfo perRequestCallbackBlocks]
  -[CKDPipeliningInfo setPerRequestCallbackBlocks:]


CKDOperation : NSOperation /System/Library/Frameworks/Security.framework/Security <CKDURLRequestMetricsDelegate, CKDURLRequestAuthRetryDelegate, CKDFlowControllable>
 @property  NSMutableArray *requestUUIDs
 @property  CKDOperation *parentOperation
 @property  NSMutableArray *childOperations
 @property  NSMutableArray *finishedChildOperationIDs
 @property  NSDate *startDate
 @property  <NSObject> *powerAssertion
 @property  NSObject<OS_dispatch_group> *childOperationsGroup
 @property  UMUserSyncTask *userSyncTask
 @property  NSString *clientSuppliedDeviceIdentifier
 @property  CKOperationInfo *operationInfo
 @property  Ai pcsWaitCount
 @property  BOOL didAttemptDugongKeyRoll
 @property  BOOL resolvedAutomaticallyRetryNetworkFailures
 @property  unsigned long resolvedDiscretionaryNetworkBehavior
 @property  unsigned long duetPreClearedMode
 @property  unsigned long discretionaryWhenBackgroundedState
 @property  unsigned long systemScheduler
 @property  CKDOperation *topmostParentOperation
 @property  CKDClientContext *context
 @property  CKDClientProxy *proxy
 @property  BOOL useEncryption
 @property  BOOL useClearAssetEncryption
 @property  BOOL isProxyOperation
 @property  BOOL shouldCheckAppVersion
 @property  BOOL usesBackgroundSession
 @property  BOOL allowsPowerNapScheduling
 @property  BOOL shouldPipelineFetchAllChangesRequests
 @property  unsigned int QOSClass
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  BOOL isExecuting
 @property  BOOL isFinished
 @property  NSError *error
 @property  CKDURLRequest *request
 @property  CKOperationResult *operationResult
 @property  CKDOperationMetrics *cloudKitMetrics
 @property  CKDOperationMetrics *MMCSMetrics
 @property  NSDate *metricExecuteStartDate
 @property  @? requestCompletedBlock
 @property  NSString *operationID
 @property  BOOL isLongLived
 @property  NSString *deviceIdentifier
 @property  CKOperationMMCSRequestOptions *MMCSRequestOptions
 @property  BOOL allowsCellularAccess
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *sourceApplicationSecondaryIdentifier
 @property  NSString *authPromptReason
 @property  BOOL automaticallyRetryNetworkFailures
 @property  BOOL preferAnonymousRequests
 @property  BOOL allowsBackgroundNetworking
 @property  double timeoutIntervalForRequest
 @property  double timeoutIntervalForResource
 @property  NSString *operationGroupID
 @property  NSString *operationGroupName
 @property  NSNumber *operationGroupQuantityNumber
 @property  BOOL shouldSkipZonePCSUpdate
 @property  BOOL isCloudKitSupportOperation
 @property  unsigned long networkServiceType
 @property  NSObject<OS_os_activity> *osActivity
 @property  unsigned long state
 @property  NSObject<OS_dispatch_group> *stateTransitionGroup
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *flowControlKey

  // class methods
  +[CKDOperation _globalOperationCallbackQueueForQOS:]
  +[CKDOperation isPredominatelyDownload]

  // instance methods
  -[CKDOperation dealloc]
  -[CKDOperation isEqual:]
  -[CKDOperation .cxx_destruct]
  -[CKDOperation error]
  -[CKDOperation cancel]
  -[CKDOperation start]
  -[CKDOperation main]
  -[CKDOperation setError:]
  -[CKDOperation setQualityOfService:]
  -[CKDOperation startDate]
  -[CKDOperation isFinished]
  -[CKDOperation isExecuting]
  -[CKDOperation isConcurrent]
  -[CKDOperation setCompletionBlock:]
  -[CKDOperation state]
  -[CKDOperation context]
  -[CKDOperation callbackQueue]
  -[CKDOperation _stateFlags]
  -[CKDOperation setState:]
  -[CKDOperation setContext:]
  -[CKDOperation deviceIdentifier]
  -[CKDOperation finishWithError:]
  -[CKDOperation setStartDate:]
  -[CKDOperation cloudKitMetrics]
  -[CKDOperation setRequest:]
  -[CKDOperation request]
  -[CKDOperation timeoutIntervalForResource]
  -[CKDOperation setCallbackQueue:]
  -[CKDOperation setProxy:]
  -[CKDOperation proxy]
  -[CKDOperation setIsFinished:]
  -[CKDOperation allowsCellularAccess]
  -[CKDOperation networkServiceType]
  -[CKDOperation timeoutIntervalForRequest]
  -[CKDOperation operationID]
  -[CKDOperation ckShortDescription]
  -[CKDOperation CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKDOperation operationInfo]
  -[CKDOperation _finishOnCallbackQueueWithError:]
  -[CKDOperation activityCreate]
  -[CKDOperation isLongLived]
  -[CKDOperation sourceApplicationBundleIdentifier]
  -[CKDOperation sourceApplicationSecondaryIdentifier]
  -[CKDOperation flowControlKey]
  -[CKDOperation discretionaryNetworkBehavior]
  -[CKDOperation setUseEncryption:]
  -[CKDOperation useEncryption]
  -[CKDOperation setIsExecuting:]
  -[CKDOperation _setIsExecuting:]
  -[CKDOperation _setIsFinished:]
  -[CKDOperation osActivity]
  -[CKDOperation requestCompletedBlock]
  -[CKDOperation setRequestCompletedBlock:]
  -[CKDOperation duetPreClearedMode]
  -[CKDOperation automaticallyRetryNetworkFailures]
  -[CKDOperation usesBackgroundSession]
  -[CKDOperation discretionaryWhenBackgroundedState]
  -[CKDOperation systemScheduler]
  -[CKDOperation MMCSRequestOptions]
  -[CKDOperation _finishInternalOnCallbackQueueWithError:]
  -[CKDOperation preferAnonymousRequests]
  -[CKDOperation allowsBackgroundNetworking]
  -[CKDOperation additionalRequestHTTPHeaders]
  -[CKDOperation requestUUIDs]
  -[CKDOperation shouldSkipZonePCSUpdate]
  -[CKDOperation isCloudKitSupportOperation]
  -[CKDOperation parentOperation]
  -[CKDOperation setParentOperation:]
  -[CKDOperation authPromptReason]
  -[CKDOperation MMCSMetrics]
  -[CKDOperation setCloudKitMetrics:]
  -[CKDOperation setMMCSMetrics:]
  -[CKDOperation operationGroupID]
  -[CKDOperation operationGroupName]
  -[CKDOperation configureRequest:]
  -[CKDOperation powerAssertion]
  -[CKDOperation setPowerAssertion:]
  -[CKDOperation childOperations]
  -[CKDOperation setChildOperations:]
  -[CKDOperation _reallyStart]
  -[CKDOperation setRequestUUIDs:]
  -[CKDOperation spawnAndRunOperationOfClass:operationInfo:operationConfigurationBlock:]
  -[CKDOperation beginUserSyncTask]
  -[CKDOperation initWithOperationInfo:clientContext:]
  -[CKDOperation operationResult]
  -[CKDOperation statusReportWithIndent:]
  -[CKDOperation allowsPowerNapScheduling]
  -[CKDOperation _ensureOperationGroup]
  -[CKDOperation configureQualityOfServiceFromOperationInfo:]
  -[CKDOperation topmostParentOperation]
  -[CKDOperation stateTransitionGroup]
  -[CKDOperation QOSClass]
  -[CKDOperation clientSuppliedDeviceIdentifier]
  -[CKDOperation isWaitingOnPCS]
  -[CKDOperation nameForState:]
  -[CKDOperation finishedChildOperationIDs]
  -[CKDOperation operationGroupQuantityNumber]
  -[CKDOperation combineMetricsWithOperation:]
  -[CKDOperation childOperationsGroup]
  -[CKDOperation spawnAndRunOperationOfClass:operationInfo:spawnQueue:clientContext:operationConfigurationBlock:]
  -[CKDOperation spawnAndRunOperationOfClass:operationInfo:spawnQueue:operationConfigurationBlock:]
  -[CKDOperation _acquirePowerAssertion]
  -[CKDOperation _registerAttemptForOperation]
  -[CKDOperation isProxyOperation]
  -[CKDOperation _determineNetworkServiceType]
  -[CKDOperation _continueOperationStart]
  -[CKDOperation setMetricExecuteStartDate:]
  -[CKDOperation metricExecuteStartDate]
  -[CKDOperation operationShouldBeFlowControlled]
  -[CKDOperation shouldCheckAppVersion]
  -[CKDOperation _checkAppVersion]
  -[CKDOperation _dropPowerAssertion]
  -[CKDOperation _errorShouldImpactFlowControl:]
  -[CKDOperation isTopLevelDaemonOperationForMetrics]
  -[CKDOperation sendCoreAnalyticsEventOperationFinished]
  -[CKDOperation userSyncTask]
  -[CKDOperation makeStateTransition]
  -[CKDOperation makeStateTransition:]
  -[CKDOperation _dropPowerAssertionsForSelfAndParent]
  -[CKDOperation _acquirePowerAssertionsForSelfAndParent]
  -[CKDOperation setUserSyncTask:]
  -[CKDOperation resolvedAutomaticallyRetryNetworkFailures]
  -[CKDOperation resolvedDiscretionaryNetworkBehavior]
  -[CKDOperation operationResultClass]
  -[CKDOperation fillOutOperationResult:]
  -[CKDOperation _runDurationString]
  -[CKDOperation _startDateString]
  -[CKDOperation CKStatusReportProperties]
  -[CKDOperation CKStatusReportLogGroups]
  -[CKDOperation didAttemptDugongKeyRoll]
  -[CKDOperation dugongKeyRollAnalyticsPayloadWithError:]
  -[CKDOperation analyticsPayload]
  -[CKDOperation baseOperationAndErrorInfoCoreAnalyticsPayloadWithError:]
  -[CKDOperation request:didFinishWithMetrics:w3cNavigationTiming:]
  -[CKDOperation requestDidBeginWaitingForUserAuth:]
  -[CKDOperation requestDidEndWaitingForUserAuth:]
  -[CKDOperation createSerialQueue]
  -[CKDOperation createInactiveSerialQueue]
  -[CKDOperation createConcurrentQueue]
  -[CKDOperation createInactiveConcurrentQueue]
  -[CKDOperation noteOperationWillWaitOnPCS]
  -[CKDOperation noteOperationDidFinishWaitingOnPCS]
  -[CKDOperation isNetworkingBehaviorEquivalentForOperation:]
  -[CKDOperation useClearAssetEncryption]
  -[CKDOperation setUseClearAssetEncryption:]
  -[CKDOperation shouldPipelineFetchAllChangesRequests]
  -[CKDOperation setShouldPipelineFetchAllChangesRequests:]
  -[CKDOperation setOperationInfo:]
  -[CKDOperation setStateTransitionGroup:]
  -[CKDOperation setFinishedChildOperationIDs:]
  -[CKDOperation setChildOperationsGroup:]
  -[CKDOperation setClientSuppliedDeviceIdentifier:]
  -[CKDOperation pcsWaitCount]
  -[CKDOperation setPcsWaitCount:]
  -[CKDOperation setDidAttemptDugongKeyRoll:]


CKDPResponseOperationResult : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasCode
 @property  int code
 @property  BOOL hasError
 @property  CKDPResponseOperationResultError *error

  // instance methods
  -[CKDPResponseOperationResult isEqual:]
  -[CKDPResponseOperationResult copyWithZone:]
  -[CKDPResponseOperationResult code]
  -[CKDPResponseOperationResult .cxx_destruct]
  -[CKDPResponseOperationResult error]
  -[CKDPResponseOperationResult setError:]
  -[CKDPResponseOperationResult dictionaryRepresentation]
  -[CKDPResponseOperationResult writeTo:]
  -[CKDPResponseOperationResult mergeFrom:]
  -[CKDPResponseOperationResult readFrom:]
  -[CKDPResponseOperationResult copyTo:]
  -[CKDPResponseOperationResult hasError]
  -[CKDPResponseOperationResult setCode:]
  -[CKDPResponseOperationResult hasCode]
  -[CKDPResponseOperationResult setHasCode:]
  -[CKDPResponseOperationResult codeAsString:]
  -[CKDPResponseOperationResult StringAsCode:]
  -[CKDPResponseOperationResult _CKLogToFileHandle:atDepth:]


CKDPCodeFunctionInvokeRequestAttestationRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasEntropy
 @property  NSData *entropy

  // instance methods
  -[CKDPCodeFunctionInvokeRequestAttestationRequest isEqual:]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest copyWithZone:]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest .cxx_destruct]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest dictionaryRepresentation]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest writeTo:]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest mergeFrom:]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest readFrom:]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest copyTo:]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest setEntropy:]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest hasEntropy]
  -[CKDPCodeFunctionInvokeRequestAttestationRequest entropy]


CKWaiterWrapper : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  <CKDZoneGatekeeperWaiter> *waiter
 @property  NSArray *zoneIDs
 @property  NSObject<OS_os_activity> *activity
 @property  @? completionHandler
 @property  NSString *personaID

  // instance methods
  -[CKWaiterWrapper .cxx_destruct]
  -[CKWaiterWrapper activity]
  -[CKWaiterWrapper waiter]
  -[CKWaiterWrapper personaID]
  -[CKWaiterWrapper completionHandler]
  -[CKWaiterWrapper CKPropertiesDescription]
  -[CKWaiterWrapper zoneIDs]
  -[CKWaiterWrapper initWithWaiter:zoneIDs:completionHandler:activity:]
  -[CKWaiterWrapper invokeCompletionHandler:]


CKDZoneGatekeeper : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *zoneIDsToGateHolders
 @property  NSMutableArray *waiterWrappers

  // instance methods
  -[CKDZoneGatekeeper init]
  -[CKDZoneGatekeeper .cxx_destruct]
  -[CKDZoneGatekeeper CKStatusReportArray]
  -[CKDZoneGatekeeper hasStatusToReport]
  -[CKDZoneGatekeeper zoneIDsToGateHolders]
  -[CKDZoneGatekeeper waiterWrappers]
  -[CKDZoneGatekeeper registerWaiter:forZoneIDs:completionHandler:]
  -[CKDZoneGatekeeper relinquishLocksForWaiter:]
  -[CKDZoneGatekeeper setZoneIDsToGateHolders:]
  -[CKDZoneGatekeeper setWaiterWrappers:]


CKDAssetRequestPlanner : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSArray *assetRegisterAndPutBatches
 @property  NSArray *assetGetChunkKeysBatches
 @property  NSArray *assetTokenRequests
 @property  unsigned long mmcsEncryptionSupport
 @property  NSMutableOrderedSet *items
 @property  NSMutableDictionary *assetZoneByKey
 @property  NSMutableDictionary *assetBatchesByZoneID
 @property  NSMutableDictionary *rerefAssetBatchesByZoneID
 @property  unsigned int assetTokenRequestSizeLimit

  // instance methods
  -[CKDAssetRequestPlanner .cxx_destruct]
  -[CKDAssetRequestPlanner items]
  -[CKDAssetRequestPlanner setItems:]
  -[CKDAssetRequestPlanner CKPropertiesDescription]
  -[CKDAssetRequestPlanner mmcsEncryptionSupport]
  -[CKDAssetRequestPlanner setMmcsEncryptionSupport:]
  -[CKDAssetRequestPlanner addMMCSItem:]
  -[CKDAssetRequestPlanner addRereferencedMMCSItem:]
  -[CKDAssetRequestPlanner addMMCSSectionItem:]
  -[CKDAssetRequestPlanner hasSuccessfulBatches]
  -[CKDAssetRequestPlanner assetRegisterAndPutBatches]
  -[CKDAssetRequestPlanner assetGetChunkKeysBatches]
  -[CKDAssetRequestPlanner assetTokenRequests]
  -[CKDAssetRequestPlanner initWithMMCSEncryptionSupport:]
  -[CKDAssetRequestPlanner resetAssetTokenRequests]
  -[CKDAssetRequestPlanner planRegisterBatches]
  -[CKDAssetRequestPlanner planGetChunkKeysBatches]
  -[CKDAssetRequestPlanner planAssetRequests]
  -[CKDAssetRequestPlanner failBatch:]
  -[CKDAssetRequestPlanner hasSuccessfulAssetTokenRequests]
  -[CKDAssetRequestPlanner setAssetRegisterAndPutBatches:]
  -[CKDAssetRequestPlanner setAssetGetChunkKeysBatches:]
  -[CKDAssetRequestPlanner assetTokenRequestSizeLimit]
  -[CKDAssetRequestPlanner setAssetTokenRequests:]
  -[CKDAssetRequestPlanner rerefAssetBatchesByZoneID]
  -[CKDAssetRequestPlanner setRerefAssetBatchesByZoneID:]
  -[CKDAssetRequestPlanner assetBatchesByZoneID]
  -[CKDAssetRequestPlanner setAssetBatchesByZoneID:]
  -[CKDAssetRequestPlanner assetZoneByKey]
  -[CKDAssetRequestPlanner setAssetZoneByKey:]


CKDFetchRecordPCSDiagnosticsOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics <NSSecureCoding>
 @property  NSArray *recordZoneIDs

  // instance methods
  -[CKDFetchRecordPCSDiagnosticsOperationInfo .cxx_destruct]
  -[CKDFetchRecordPCSDiagnosticsOperationInfo recordZoneIDs]
  -[CKDFetchRecordPCSDiagnosticsOperationInfo setRecordZoneIDs:]


CKDFetchRecordPCSDiagnosticsOperation : CKDDatabaseOperation
 @property  NSArray *zoneIDs
 @property  NSMutableArray *fetchedZones
 @property  NSMutableArray *mutableCorruptRecords
 @property  NSArray *corruptRecords

  // instance methods
  -[CKDFetchRecordPCSDiagnosticsOperation .cxx_destruct]
  -[CKDFetchRecordPCSDiagnosticsOperation main]
  -[CKDFetchRecordPCSDiagnosticsOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchRecordPCSDiagnosticsOperation activityCreate]
  -[CKDFetchRecordPCSDiagnosticsOperation zoneIDs]
  -[CKDFetchRecordPCSDiagnosticsOperation setZoneIDs:]
  -[CKDFetchRecordPCSDiagnosticsOperation initWithOperationInfo:clientContext:]
  -[CKDFetchRecordPCSDiagnosticsOperation corruptRecords]
  -[CKDFetchRecordPCSDiagnosticsOperation nameForState:]
  -[CKDFetchRecordPCSDiagnosticsOperation makeStateTransition]
  -[CKDFetchRecordPCSDiagnosticsOperation _fetchZones]
  -[CKDFetchRecordPCSDiagnosticsOperation _checkRecordPCSForAllZones]
  -[CKDFetchRecordPCSDiagnosticsOperation fetchedZones]
  -[CKDFetchRecordPCSDiagnosticsOperation mutableCorruptRecords]
  -[CKDFetchRecordPCSDiagnosticsOperation setFetchedZones:]
  -[CKDFetchRecordPCSDiagnosticsOperation setMutableCorruptRecords:]


CKDQueryOperation : CKDDatabaseOperation <CKDOperationPipelining>
 @property  NSSet *desiredKeySet
 @property  BOOL shouldFetchAssetContent
 @property  CKRecordZoneID *zoneID
 @property  CKDRecordFetchAggregator *recordFetcher
 @property  CKQueryCursor *resultsCursor
 @property  BOOL fetchAllResults
 @property  NSObject<OS_dispatch_group> *fetchRecordsGroup
 @property  unsigned long numRequestsSent
 @property  NSMutableArray *requestInfos
 @property  NSDictionary *assetTransferOptionsByKey
 @property  BOOL hasCalledQueryCursorUpdatedBlock
 @property  CKQuery *query
 @property  CKQueryCursor *cursor
 @property  unsigned long resultsLimit
 @property  @? recordFetchedBlock
 @property  @? queryCursorUpdatedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *pipeliningDescription
 @property  NSObject<OS_dispatch_queue> *callbackQueue

  // instance methods
  -[CKDQueryOperation query]
  -[CKDQueryOperation .cxx_destruct]
  -[CKDQueryOperation cursor]
  -[CKDQueryOperation main]
  -[CKDQueryOperation zoneID]
  -[CKDQueryOperation setZoneID:]
  -[CKDQueryOperation setRecordFetchedBlock:]
  -[CKDQueryOperation _finishOnCallbackQueueWithError:]
  -[CKDQueryOperation activityCreate]
  -[CKDQueryOperation resultsLimit]
  -[CKDQueryOperation recordFetchedBlock]
  -[CKDQueryOperation shouldFetchAssetContent]
  -[CKDQueryOperation setShouldFetchAssetContent:]
  -[CKDQueryOperation setResultsCursor:]
  -[CKDQueryOperation resultsCursor]
  -[CKDQueryOperation assetTransferOptionsByKey]
  -[CKDQueryOperation setAssetTransferOptionsByKey:]
  -[CKDQueryOperation fetchAllResults]
  -[CKDQueryOperation setFetchAllResults:]
  -[CKDQueryOperation requestInfos]
  -[CKDQueryOperation initWithOperationInfo:clientContext:]
  -[CKDQueryOperation setQueryCursorUpdatedBlock:]
  -[CKDQueryOperation pipeliningDescription]
  -[CKDQueryOperation operationResultClass]
  -[CKDQueryOperation fillOutOperationResult:]
  -[CKDQueryOperation fetchRecordsGroup]
  -[CKDQueryOperation queryCursorUpdatedBlock]
  -[CKDQueryOperation setHasCalledQueryCursorUpdatedBlock:]
  -[CKDQueryOperation recordFetcher]
  -[CKDQueryOperation hasCalledQueryCursorUpdatedBlock]
  -[CKDQueryOperation _wrapError:format:]
  -[CKDQueryOperation desiredKeySet]
  -[CKDQueryOperation numRequestsSent]
  -[CKDQueryOperation setNumRequestsSent:]
  -[CKDQueryOperation _sendQueryRequestWithCursor:previousRequestSchedulerInfo:]
  -[CKDQueryOperation _handleQueryRequestFinishedWithSchedulerInfo:]
  -[CKDQueryOperation _handleRecordResponses:perRequestSchedulerInfo:]
  -[CKDQueryOperation setRecordFetcher:]
  -[CKDQueryOperation setDesiredKeySet:]
  -[CKDQueryOperation setFetchRecordsGroup:]
  -[CKDQueryOperation setRequestInfos:]


CKCDPCheckContainerHealthRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasContainerName
 @property  NSString *containerName
 @property  BOOL hasEnvironment
 @property  NSString *environment

  // instance methods
  -[CKCDPCheckContainerHealthRequest isEqual:]
  -[CKCDPCheckContainerHealthRequest copyWithZone:]
  -[CKCDPCheckContainerHealthRequest .cxx_destruct]
  -[CKCDPCheckContainerHealthRequest dictionaryRepresentation]
  -[CKCDPCheckContainerHealthRequest environment]
  -[CKCDPCheckContainerHealthRequest setEnvironment:]
  -[CKCDPCheckContainerHealthRequest containerName]
  -[CKCDPCheckContainerHealthRequest setContainerName:]
  -[CKCDPCheckContainerHealthRequest writeTo:]
  -[CKCDPCheckContainerHealthRequest mergeFrom:]
  -[CKCDPCheckContainerHealthRequest readFrom:]
  -[CKCDPCheckContainerHealthRequest copyTo:]
  -[CKCDPCheckContainerHealthRequest hasEnvironment]
  -[CKCDPCheckContainerHealthRequest hasContainerName]


CKDQueuedRecordFetch : CKDQueuedFetch
  // instance methods
  -[CKDQueuedRecordFetch addRequestForRecordID:forOperation:withCompletionHandler:]
  -[CKDQueuedRecordFetch createFetchOperationForItemIDs:operationQueue:operationConfigurationBlock:]


CKStreamLogStatsTuple : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *fileAndLine
 @property  unsigned long count
 @property  unsigned long size

  // instance methods
  -[CKStreamLogStatsTuple count]
  -[CKStreamLogStatsTuple .cxx_destruct]
  -[CKStreamLogStatsTuple size]
  -[CKStreamLogStatsTuple setCount:]
  -[CKStreamLogStatsTuple setSize:]
  -[CKStreamLogStatsTuple fileAndLine]
  -[CKStreamLogStatsTuple setFileAndLine:]


CKLStreamLogStatsObserver : CKLStreamObserver
 @property  NSMutableDictionary *totalSizeByLine
 @property  NSMutableDictionary *totalCountByLine

  // instance methods
  -[CKLStreamLogStatsObserver .cxx_destruct]
  -[CKLStreamLogStatsObserver finish]
  -[CKLStreamLogStatsObserver initWithLogTypes:]
  -[CKLStreamLogStatsObserver totalSizeByLine]
  -[CKLStreamLogStatsObserver totalCountByLine]
  -[CKLStreamLogStatsObserver eventMatched:]
  -[CKLStreamLogStatsObserver setTotalSizeByLine:]
  -[CKLStreamLogStatsObserver setTotalCountByLine:]


CKDPZoneRetrieveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier
 @property  BOOL hasOnlyFetchPCSInfo
 @property  BOOL onlyFetchPCSInfo
 @property  BOOL hasContinuationMarker
 @property  NSData *continuationMarker

  // class methods
  +[CKDPZoneRetrieveRequest options]

  // instance methods
  -[CKDPZoneRetrieveRequest isEqual:]
  -[CKDPZoneRetrieveRequest copyWithZone:]
  -[CKDPZoneRetrieveRequest .cxx_destruct]
  -[CKDPZoneRetrieveRequest dictionaryRepresentation]
  -[CKDPZoneRetrieveRequest writeTo:]
  -[CKDPZoneRetrieveRequest mergeFrom:]
  -[CKDPZoneRetrieveRequest readFrom:]
  -[CKDPZoneRetrieveRequest copyTo:]
  -[CKDPZoneRetrieveRequest requestTypeCode]
  -[CKDPZoneRetrieveRequest responseClass]
  -[CKDPZoneRetrieveRequest setZoneIdentifier:]
  -[CKDPZoneRetrieveRequest hasZoneIdentifier]
  -[CKDPZoneRetrieveRequest zoneIdentifier]
  -[CKDPZoneRetrieveRequest setContinuationMarker:]
  -[CKDPZoneRetrieveRequest hasContinuationMarker]
  -[CKDPZoneRetrieveRequest continuationMarker]
  -[CKDPZoneRetrieveRequest setOnlyFetchPCSInfo:]
  -[CKDPZoneRetrieveRequest setHasOnlyFetchPCSInfo:]
  -[CKDPZoneRetrieveRequest hasOnlyFetchPCSInfo]
  -[CKDPZoneRetrieveRequest onlyFetchPCSInfo]


CKDPCSCacheZoneFetchOperation : CKDPCSCacheFetchOperation
 @property  BOOL needsZoneishPCS
 @property  CKRecordZoneID *zoneID
 @property  CKDZonePCSData *zonePCSData
 @property  BOOL shouldCreateZoneishPCS

  // instance methods
  -[CKDPCSCacheZoneFetchOperation zoneID]
  -[CKDPCSCacheZoneFetchOperation zonePCSData]
  -[CKDPCSCacheZoneFetchOperation needsZoneishPCS]
  -[CKDPCSCacheZoneFetchOperation setZonePCSData:]
  -[CKDPCSCacheZoneFetchOperation _handlePCSDataFetched:withError:]
  -[CKDPCSCacheZoneFetchOperation _fetchDepedentPCSInSharedDatabase]
  -[CKDPCSCacheZoneFetchOperation _saveZoneToServer:completion:]
  -[CKDPCSCacheZoneFetchOperation _saveZoneToServer:withPCS:zoneishPCS:previousEtag:completion:]
  -[CKDPCSCacheZoneFetchOperation _saveNewPCSOnDefaultZone:completion:]
  -[CKDPCSCacheZoneFetchOperation setShouldCreateZoneishPCS:]
  -[CKDPCSCacheZoneFetchOperation _decryptZonePCSInSharedDatabase]
  -[CKDPCSCacheZoneFetchOperation _decryptZonePCSUsingServiceIdentities]
  -[CKDPCSCacheZoneFetchOperation _handleDecryptedZonePCSData:withError:]
  -[CKDPCSCacheZoneFetchOperation shouldCreateZoneishPCS]
  -[CKDPCSCacheZoneFetchOperation itemTypeName]
  -[CKDPCSCacheZoneFetchOperation hasAllPCSData]
  -[CKDPCSCacheZoneFetchOperation _willRetryFetch]
  -[CKDPCSCacheZoneFetchOperation _fetchPCSDataFromDatabase]
  -[CKDPCSCacheZoneFetchOperation _fetchDependentPCS]
  -[CKDPCSCacheZoneFetchOperation _fetchPCSDataFromServer]
  -[CKDPCSCacheZoneFetchOperation _createAdditionalPCS]
  -[CKDPCSCacheZoneFetchOperation _decryptPCS]
  -[CKDPCSCacheZoneFetchOperation _saveUpdatedPCSToServer]
  -[CKDPCSCacheZoneFetchOperation _savePCSDataToCache]


CKLTailLog : OSActivityStream /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService <OSLogPersistenceDelegate, OSActivityStreamDelegate>
 @property  OSLogPersistence *logPersistence
 @property  OSActivityStream *activityStream
 @property  NSMutableArray *results
 @property  BOOL stillReadingFromArchive
 @property  BOOL continueToReturnResults
 @property  NSObject<OS_dispatch_queue> *queue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKLTailLog init]
  -[CKLTailLog setQueue:]
  -[CKLTailLog queue]
  -[CKLTailLog .cxx_destruct]
  -[CKLTailLog results]
  -[CKLTailLog stop]
  -[CKLTailLog start]
  -[CKLTailLog setResults:]
  -[CKLTailLog streamDidStop:]
  -[CKLTailLog activityStream]
  -[CKLTailLog activityStream:results:]
  -[CKLTailLog streamDidFail:error:]
  -[CKLTailLog fetchFromStartDate:toEndDate:]
  -[CKLTailLog persistenceDidFinishReadingForStartDate:endDate:]
  -[CKLTailLog persistence:results:error:]
  -[CKLTailLog startFromStartDate:]
  -[CKLTailLog logPersistence]
  -[CKLTailLog setLogPersistence:]
  -[CKLTailLog setActivityStream:]
  -[CKLTailLog stillReadingFromArchive]
  -[CKLTailLog setStillReadingFromArchive:]
  -[CKLTailLog continueToReturnResults]
  -[CKLTailLog setContinueToReturnResults:]


CKDAppContainerTuple : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  unsigned long mmcsEncryptionSupport
 @property  NSString *applicationBundleID
 @property  NSString *sourceApplicationBundleID
 @property  CKContainerID *containerID
 @property  NSString *applicationContainerPath
 @property  NSString *personaID
 @property  BOOL useZoneWidePCS
 @property  BOOL bypassPCSEncryption
 @property  BOOL forceEnableReadOnlyManatee
 @property  NSString *containerEncryptionServiceName
 @property  BOOL wantsSiloedContext

  // instance methods
  -[CKDAppContainerTuple isEqual:]
  -[CKDAppContainerTuple copyWithZone:]
  -[CKDAppContainerTuple .cxx_destruct]
  -[CKDAppContainerTuple setUseZoneWidePCS:]
  -[CKDAppContainerTuple personaID]
  -[CKDAppContainerTuple applicationBundleID]
  -[CKDAppContainerTuple containerID]
  -[CKDAppContainerTuple CKPropertiesDescription]
  -[CKDAppContainerTuple wantsSiloedContext]
  -[CKDAppContainerTuple useZoneWidePCS]
  -[CKDAppContainerTuple mmcsEncryptionSupport]
  -[CKDAppContainerTuple containerEncryptionServiceName]
  -[CKDAppContainerTuple bypassPCSEncryption]
  -[CKDAppContainerTuple forceEnableReadOnlyManatee]
  -[CKDAppContainerTuple setWantsSiloedContext:]
  -[CKDAppContainerTuple setMmcsEncryptionSupport:]
  -[CKDAppContainerTuple setContainerEncryptionServiceName:]
  -[CKDAppContainerTuple setBypassPCSEncryption:]
  -[CKDAppContainerTuple setForceEnableReadOnlyManatee:]
  -[CKDAppContainerTuple sourceApplicationBundleID]
  -[CKDAppContainerTuple initWithApplicationBundleID:sourceApplicationBundleID:containerID:personaID:]
  -[CKDAppContainerTuple applicationContainerPath]
  -[CKDAppContainerTuple initWithApplicationBundleID:sourceApplicationBundleID:applicationContainerPath:containerID:personaID:]
  -[CKDAppContainerTuple initWithApplicationBundleID:containerID:personaID:]


CKDAppContainerAccountTuple : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  CKDAppContainerTuple *appContainerTuple
 @property  NSString *accountID

  // instance methods
  -[CKDAppContainerAccountTuple isEqual:]
  -[CKDAppContainerAccountTuple copyWithZone:]
  -[CKDAppContainerAccountTuple .cxx_destruct]
  -[CKDAppContainerAccountTuple accountID]
  -[CKDAppContainerAccountTuple CKPropertiesDescription]
  -[CKDAppContainerAccountTuple setAccountID:]
  -[CKDAppContainerAccountTuple initWithAppContainerTuple:accountID:]
  -[CKDAppContainerAccountTuple appContainerTuple]
  -[CKDAppContainerAccountTuple setAppContainerTuple:]


CKDPrivacyManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_dispatch_queue> *privacyManagerQueue
 @property  NSMutableSet *operations

  // class methods
  +[CKDPrivacyManager sharedManager]

  // instance methods
  -[CKDPrivacyManager init]
  -[CKDPrivacyManager .cxx_destruct]
  -[CKDPrivacyManager _init]
  -[CKDPrivacyManager operations]
  -[CKDPrivacyManager setOperations:]
  -[CKDPrivacyManager privacyManagerQueue]
  -[CKDPrivacyManager _resetPrivacySettingsForAppContainerAccountTuple:completionHandler:]
  -[CKDPrivacyManager resetPrivacySettingsWithCompletionHandler:]
  -[CKDPrivacyManager setPrivacyManagerQueue:]


CKDQueuedFetch : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_os_activity> *osActivity
 @property  NSMutableDictionary *completionHandlersByItemID
 @property  unsigned long lastCompletionHandlerCount
 @property  NSDate *startDate
 @property  NSDate *lastRequestDate
 @property  CKDClientContext *context
 @property  NSOperationQueue *operationQueue
 @property  long long scope
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  long long highestQOS
 @property  NSString *runningOperationID
 @property  NSMutableSet *dependentOperationIDs
 @property  NSMutableDictionary *dependentOperationIDsByItemID
 @property  CKDOperation *initialOperation
 @property  BOOL isFinished
 @property  BOOL isCancelled
 @property  NSDate *queuedDate
 @property  @? completionHandler
 @property  CKDQueuedFetch *equivalentRunningFetch

  // instance methods
  -[CKDQueuedFetch init]
  -[CKDQueuedFetch .cxx_destruct]
  -[CKDQueuedFetch operationQueue]
  -[CKDQueuedFetch setOperationQueue:]
  -[CKDQueuedFetch start]
  -[CKDQueuedFetch isCancelled]
  -[CKDQueuedFetch startDate]
  -[CKDQueuedFetch isFinished]
  -[CKDQueuedFetch context]
  -[CKDQueuedFetch callbackQueue]
  -[CKDQueuedFetch setContext:]
  -[CKDQueuedFetch setStartDate:]
  -[CKDQueuedFetch setCallbackQueue:]
  -[CKDQueuedFetch setIsFinished:]
  -[CKDQueuedFetch scope]
  -[CKDQueuedFetch completionHandler]
  -[CKDQueuedFetch setCompletionHandler:]
  -[CKDQueuedFetch setScope:]
  -[CKDQueuedFetch CKPropertiesDescription]
  -[CKDQueuedFetch osActivity]
  -[CKDQueuedFetch setOsActivity:]
  -[CKDQueuedFetch setIsCancelled:]
  -[CKDQueuedFetch allItemIDs]
  -[CKDQueuedFetch lastRequestDate]
  -[CKDQueuedFetch setLastRequestDate:]
  -[CKDQueuedFetch addCallbackForItemWithID:operation:callback:]
  -[CKDQueuedFetch highestQOS]
  -[CKDQueuedFetch setHighestQOS:]
  -[CKDQueuedFetch initialOperation]
  -[CKDQueuedFetch performCallbacksForItemWithID:withItem:error:]
  -[CKDQueuedFetch createFetchOperationForItemIDs:operationQueue:operationConfigurationBlock:]
  -[CKDQueuedFetch completionHandlersByItemID]
  -[CKDQueuedFetch dependentOperationIDsByItemID]
  -[CKDQueuedFetch dependentOperationIDs]
  -[CKDQueuedFetch callbacksForItemWithID:]
  -[CKDQueuedFetch removeCallbacksForItemWithID:]
  -[CKDQueuedFetch finishFetchOperationWithError:]
  -[CKDQueuedFetch numberOfCallbacks]
  -[CKDQueuedFetch runningOperationID]
  -[CKDQueuedFetch setRunningOperationID:]
  -[CKDQueuedFetch initWithOperation:context:operationQueue:]
  -[CKDQueuedFetch cancelFetchOperation]
  -[CKDQueuedFetch canBeUsedForOperation:]
  -[CKDQueuedFetch canBeUsedForPendingFetch:]
  -[CKDQueuedFetch dependentOperationListContainsRunningFetch:]
  -[CKDQueuedFetch dependentOperationListContainsOperationID:]
  -[CKDQueuedFetch queuedDate]
  -[CKDQueuedFetch setQueuedDate:]
  -[CKDQueuedFetch equivalentRunningFetch]
  -[CKDQueuedFetch setEquivalentRunningFetch:]
  -[CKDQueuedFetch setCompletionHandlersByItemID:]
  -[CKDQueuedFetch lastCompletionHandlerCount]
  -[CKDQueuedFetch setLastCompletionHandlerCount:]
  -[CKDQueuedFetch setDependentOperationIDs:]
  -[CKDQueuedFetch setDependentOperationIDsByItemID:]
  -[CKDQueuedFetch setInitialOperation:]


CKDURLRequest : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <C2RequestDelegate, CKDZoneGatekeeperWaiter, CKDFlowControllable>
 @property  CKDOperation *operation
 @property  NSObject<OS_dispatch_queue> *lifecycleQueue
 @property  NSURLSessionDataTask *urlSessionTask
 @property  C2RequestOptions *c2RequestOptions
 @property  NSURLRequest *request
 @property  NSHTTPURLResponse *response
 @property  NSError *error
 @property  NSURLSession *urlSession
 @property  NSMutableSet *responseObjectUUIDs
 @property  CKDTrafficLogger *trafficLogger
 @property  NSString *deviceID
 @property  unsigned long numDownloadedElements
 @property  BOOL didRetryAuth
 @property  BOOL cancelled
 @property  BOOL haveCachedServerType
 @property  BOOL haveCachedPartitionType
 @property  long long cachedServerType
 @property  long long cachedPartitionType
 @property  CKDProtocolTranslator *translator
 @property  NSDate *dateRequestWentOut
 @property  CKDOperationMetrics *metrics
 @property  NSDictionary *timingData
 @property  NSObject<OS_voucher> *voucher
 @property  NSString *cloudKitAuthToken
 @property  NSString *iCloudAuthToken
 @property  BOOL didReceiveResponseBodyData
 @property  NSString *serverProvidedAutoBugCaptureReason
 @property  CKDTapToRadarRequest *serverProvidedTapToRadarRequest
 @property  NSString *serverProvidedAutoSysdiagnoseCollectionReason
 @property  NSMutableDictionary *countsByRequestOperationType
 @property  NSMutableDictionary *overriddenHeaders
 @property  NSMutableArray *redirectHistory
 @property  BOOL allowsCellularAccess
 @property  NSString *authPromptReason
 @property  BOOL resolvedAutomaticallyRetryNetworkFailures
 @property  unsigned long resolvedDiscretionaryNetworkBehavior
 @property  unsigned long duetPreClearedMode
 @property  BOOL preferAnonymousRequests
 @property  BOOL allowsBackgroundNetworking
 @property  NSString *operationIDForProtobuf
 @property  NSString *operationGroupID
 @property  NSString *operationGroupName
 @property  NSNumber *operationGroupQuantity
 @property  unsigned long networkServiceType
 @property  BOOL allowsPowerNapScheduling
 @property  NSString *operationID
 @property  <CKDAccountInfoProvider> *accountInfoProvider
 @property  <CKDContextInfoProvider> *contextInfoProvider
 @property  <CKDAccountAccessInfoProvider> *accountAccessInfoProvider
 @property  <CKDURLRequestMetricsDelegate> *metricsDelegate
 @property  <CKDURLRequestAuthRetryDelegate> *authRetryDelegate
 @property  BOOL allowAutomaticRedirects
 @property  NSDictionary *requestProperties
 @property  BOOL usesBackgroundSession
 @property  BOOL sendRequestAnonymously
 @property  NSString *automatedDeviceGroup
 @property  long long databaseScope
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *sourceApplicationSecondaryIdentifier
 @property  CKDProtobufStreamWriter *streamWriter
 @property  @? requestProgressBlock
 @property  @? responseProgressBlock
 @property  @? completionBlock
 @property  CKDResponseBodyParser *responseBodyParser
 @property  NSString *httpMethod
 @property  NSDictionary *additionalHeaderValues
 @property  NSDictionary *clientProvidedAdditionalHeaderValues
 @property  BOOL hasRequestBody
 @property  BOOL expectsResponseBody
 @property  NSInputStream *requestBodyStream
 @property  NSArray *requestOperations
 @property  NSArray *requestOperationClasses
 @property  int isolationLevel
 @property  int operationType
 @property  NSString *path
 @property  long long serverType
 @property  long long partitionType
 @property  NSURL *url
 @property  BOOL shouldCompressBody
 @property  NSString *acceptContentType
 @property  NSString *requestContentType
 @property  NSString *protobufOperationName
 @property  BOOL requestGETPreAuth
 @property  NSString *sectionID
 @property  NSDictionary *fakeResponseOperationResultByItemID
 @property  BOOL isFinished
 @property  NSDictionary *responseHeaders
 @property  long long responseStatusCode
 @property  NSURL *lastRedirectURL
 @property  NSString *requestUUID
 @property  BOOL needsAuthRetry
 @property  BOOL isWaitingOnAuthRenew
 @property  BOOL isHandlingAuthRetry
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long qualityOfService
 @property  NSString *flowControlKey

  // instance methods
  -[CKDURLRequest init]
  -[CKDURLRequest dealloc]
  -[CKDURLRequest .cxx_destruct]
  -[CKDURLRequest error]
  -[CKDURLRequest cancel]
  -[CKDURLRequest path]
  -[CKDURLRequest operation]
  -[CKDURLRequest setOperation:]
  -[CKDURLRequest isCancelled]
  -[CKDURLRequest setError:]
  -[CKDURLRequest qualityOfService]
  -[CKDURLRequest isFinished]
  -[CKDURLRequest completionBlock]
  -[CKDURLRequest setCompletionBlock:]
  -[CKDURLRequest url]
  -[CKDURLRequest operationType]
  -[CKDURLRequest deviceIdentifier]
  -[CKDURLRequest finishWithError:]
  -[CKDURLRequest deviceID]
  -[CKDURLRequest setDeviceID:]
  -[CKDURLRequest metrics]
  -[CKDURLRequest setRequest:]
  -[CKDURLRequest request]
  -[CKDURLRequest timeoutIntervalForResource]
  -[CKDURLRequest response]
  -[CKDURLRequest URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[CKDURLRequest URLSession:task:didReceiveChallenge:completionHandler:]
  -[CKDURLRequest URLSession:task:needNewBodyStream:]
  -[CKDURLRequest URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[CKDURLRequest URLSession:task:didCompleteWithError:]
  -[CKDURLRequest URLSession:dataTask:didReceiveData:]
  -[CKDURLRequest URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[CKDURLRequest partitionType]
  -[CKDURLRequest validate:]
  -[CKDURLRequest setResponse:]
  -[CKDURLRequest setMetrics:]
  -[CKDURLRequest URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:]
  -[CKDURLRequest responseStatusCode]
  -[CKDURLRequest responseHeaders]
  -[CKDURLRequest timingData]
  -[CKDURLRequest URLSession:_taskIsWaitingForConnection:]
  -[CKDURLRequest URLSession:task:_conditionalRequirementsChanged:]
  -[CKDURLRequest URLSession:_willRetryBackgroundDataTask:withError:]
  -[CKDURLRequest allowsCellularAccess]
  -[CKDURLRequest networkServiceType]
  -[CKDURLRequest timeoutIntervalForRequest]
  -[CKDURLRequest sectionID]
  -[CKDURLRequest setCancelled:]
  -[CKDURLRequest databaseScope]
  -[CKDURLRequest operationID]
  -[CKDURLRequest ckShortDescription]
  -[CKDURLRequest CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKDURLRequest sourceApplicationBundleIdentifier]
  -[CKDURLRequest sourceApplicationSecondaryIdentifier]
  -[CKDURLRequest flowControlKey]
  -[CKDURLRequest automatedDeviceGroup]
  -[CKDURLRequest setAutomatedDeviceGroup:]
  -[CKDURLRequest requestUUID]
  -[CKDURLRequest duetPreClearedMode]
  -[CKDURLRequest usesBackgroundSession]
  -[CKDURLRequest preferAnonymousRequests]
  -[CKDURLRequest allowsBackgroundNetworking]
  -[CKDURLRequest authPromptReason]
  -[CKDURLRequest requestOptions]
  -[CKDURLRequest operationGroupID]
  -[CKDURLRequest operationGroupName]
  -[CKDURLRequest urlSession]
  -[CKDURLRequest voucher]
  -[CKDURLRequest setVoucher:]
  -[CKDURLRequest iCloudAuthToken]
  -[CKDURLRequest markAsFinished]
  -[CKDURLRequest httpMethod]
  -[CKDURLRequest setRequestProperties:]
  -[CKDURLRequest requestProperties]
  -[CKDURLRequest setUrlSession:]
  -[CKDURLRequest setTimingData:]
  -[CKDURLRequest accountInfoProvider]
  -[CKDURLRequest setAccountInfoProvider:]
  -[CKDURLRequest additionalHeaderValues]
  -[CKDURLRequest _errorFromHTTPResponse:]
  -[CKDURLRequest isolationLevel]
  -[CKDURLRequest statusReportWithIndent:]
  -[CKDURLRequest setContextInfoProvider:]
  -[CKDURLRequest setAccountAccessInfoProvider:]
  -[CKDURLRequest setFakeResponseOperationResultByItemID:]
  -[CKDURLRequest performRequest]
  -[CKDURLRequest allowsPowerNapScheduling]
  -[CKDURLRequest resolvedAutomaticallyRetryNetworkFailures]
  -[CKDURLRequest resolvedDiscretionaryNetworkBehavior]
  -[CKDURLRequest setClientProvidedAdditionalHeaderValues:]
  -[CKDURLRequest setMetricsDelegate:]
  -[CKDURLRequest setAuthRetryDelegate:]
  -[CKDURLRequest requestOperationCountsByOperationType]
  -[CKDURLRequest _tearDownStreamWriter]
  -[CKDURLRequest urlSessionTask]
  -[CKDURLRequest lifecycleQueue]
  -[CKDURLRequest generateRequestOperations]
  -[CKDURLRequest requestOperations]
  -[CKDURLRequest contextInfoProvider]
  -[CKDURLRequest includeContainerInfo]
  -[CKDURLRequest sendRequestAnonymously]
  -[CKDURLRequest operationGroupQuantity]
  -[CKDURLRequest requestGETPreAuth]
  -[CKDURLRequest createAssetAuthorizeGetRequestOptionsHeaderInfoWithKey:value:]
  -[CKDURLRequest _registerRequestOperationTypesForOperations:]
  -[CKDURLRequest streamWriter]
  -[CKDURLRequest countsByRequestOperationType]
  -[CKDURLRequest setCountsByRequestOperationType:]
  -[CKDURLRequest authRetryDelegate]
  -[CKDURLRequest usesiCloudAuthToken]
  -[CKDURLRequest usesCloudKitAuthToken]
  -[CKDURLRequest accountAccessInfoProvider]
  -[CKDURLRequest setIsWaitingOnAuthRenew:]
  -[CKDURLRequest cloudKitAuthToken]
  -[CKDURLRequest didRetryAuth]
  -[CKDURLRequest setDidRetryAuth:]
  -[CKDURLRequest setIsHandlingAuthRetry:]
  -[CKDURLRequest tearDownResourcesAndReleaseTheZoneLocks]
  -[CKDURLRequest performOnLifecycleQueueIfNotFinished:]
  -[CKDURLRequest _renewAuthTokenWithCompletionHandler:]
  -[CKDURLRequest _handleAuthFailure]
  -[CKDURLRequest _handleServerProtobufResult:rawData:]
  -[CKDURLRequest responseObjectUUIDs]
  -[CKDURLRequest translator]
  -[CKDURLRequest requestDidParseProtobufObject:]
  -[CKDURLRequest requestDidParseNodeFailure:]
  -[CKDURLRequest _handleServerJSONResult:]
  -[CKDURLRequest requestDidParseJSONObject:]
  -[CKDURLRequest _handlePlistResult:]
  -[CKDURLRequest requestDidParsePlistObject:]
  -[CKDURLRequest expectedResponseClass]
  -[CKDURLRequest parsingStandaloneMessage]
  -[CKDURLRequest _protobufObjectParsedBlock]
  -[CKDURLRequest trafficLogger]
  -[CKDURLRequest _jsonObjectParsedBlock]
  -[CKDURLRequest _xmlObjectParsedBlock]
  -[CKDURLRequest requestDidParsePlaintextObject:]
  -[CKDURLRequest requestDidParse509CertObject:]
  -[CKDURLRequest _finishOnLifecycleQueueWithError:]
  -[CKDURLRequest requestOperationClasses]
  -[CKDURLRequest serverType]
  -[CKDURLRequest protobufOperationName]
  -[CKDURLRequest shouldCompressBody]
  -[CKDURLRequest allowsAnonymousAccount]
  -[CKDURLRequest setDidReceiveResponseBodyData:]
  -[CKDURLRequest _setupPublicDatabaseURL]
  -[CKDURLRequest performASyncOnLifecycleQueueIfNotFinished:]
  -[CKDURLRequest requiresAppPartitionURL]
  -[CKDURLRequest _setupPrivateDatabaseURL]
  -[CKDURLRequest requiresUserPartitionURL]
  -[CKDURLRequest _setupConfiguration]
  -[CKDURLRequest requiresConfiguration]
  -[CKDURLRequest _fetchContainerScopedUserID]
  -[CKDURLRequest allowsAuthedAccount]
  -[CKDURLRequest setTranslator:]
  -[CKDURLRequest _fetchDeviceID]
  -[CKDURLRequest requiresDeviceID]
  -[CKDURLRequest _acquireZoneGates]
  -[CKDURLRequest requiresTokenRegistration]
  -[CKDURLRequest _performRequest]
  -[CKDURLRequest zoneIDsToLock]
  -[CKDURLRequest _prepareAuthTokens]
  -[CKDURLRequest _prepareCloudKitAuthToken]
  -[CKDURLRequest prepareRequestWithCompletion:]
  -[CKDURLRequest setCloudKitAuthToken:]
  -[CKDURLRequest _authTokenWithCompletionHandler:]
  -[CKDURLRequest setICloudAuthToken:]
  -[CKDURLRequest _registerPushTokens]
  -[CKDURLRequest hasRequestBody]
  -[CKDURLRequest requestContentType]
  -[CKDURLRequest acceptContentType]
  -[CKDURLRequest operationIDForProtobuf]
  -[CKDURLRequest clientProvidedAdditionalHeaderValues]
  -[CKDURLRequest overriddenHeaders]
  -[CKDURLRequest requestMessageClass]
  -[CKDURLRequest _loadRequest:]
  -[CKDURLRequest tearDownResources]
  -[CKDURLRequest setResponseBodyParser:]
  -[CKDURLRequest setUrlSessionTask:]
  -[CKDURLRequest _CFNetworkTaskIdentifierString]
  -[CKDURLRequest setDateRequestWentOut:]
  -[CKDURLRequest _onLifecycleQueue]
  -[CKDURLRequest _wrapErrorIfNecessary:]
  -[CKDURLRequest serverProvidedAutoBugCaptureReason]
  -[CKDURLRequest _triggerAutoBugCaptureWithErrorPayload:]
  -[CKDURLRequest serverProvidedTapToRadarRequest]
  -[CKDURLRequest serverProvidedAutoSysdiagnoseCollectionReason]
  -[CKDURLRequest dateRequestWentOut]
  -[CKDURLRequest metricsDelegate]
  -[CKDURLRequest setRequestProgressBlock:]
  -[CKDURLRequest setResponseProgressBlock:]
  -[CKDURLRequest setC2RequestOptions:]
  -[CKDURLRequest allowAutomaticRedirects]
  -[CKDURLRequest requestBodyStream]
  -[CKDURLRequest redirectHistory]
  -[CKDURLRequest setRedirectHistory:]
  -[CKDURLRequest responseProgressBlock]
  -[CKDURLRequest responseBodyParser]
  -[CKDURLRequest defaultParserForContentType:]
  -[CKDURLRequest requestProgressBlock]
  -[CKDURLRequest requestDidComplete]
  -[CKDURLRequest setServerProvidedAutoBugCaptureReason:]
  -[CKDURLRequest setServerProvidedTapToRadarRequest:]
  -[CKDURLRequest setServerProvidedAutoSysdiagnoseCollectionReason:]
  -[CKDURLRequest isHandlingAuthRetry]
  -[CKDURLRequest needsAuthRetry]
  -[CKDURLRequest setNeedsAuthRetry:]
  -[CKDURLRequest didReceiveResponseBodyData]
  -[CKDURLRequest expectsResponseBody]
  -[CKDURLRequest isWaitingOnAuthRenew]
  -[CKDURLRequest shouldLogResponseBody]
  -[CKDURLRequest expectsSingleObject]
  -[CKDURLRequest overrideRequestHeader:withValue:]
  -[CKDURLRequest operationRequestWithType:]
  -[CKDURLRequest lastRedirectURL]
  -[CKDURLRequest setAllowAutomaticRedirects:]
  -[CKDURLRequest fakeResponseOperationResultByItemID]
  -[CKDURLRequest setLifecycleQueue:]
  -[CKDURLRequest c2RequestOptions]
  -[CKDURLRequest setResponseObjectUUIDs:]
  -[CKDURLRequest setTrafficLogger:]
  -[CKDURLRequest numDownloadedElements]
  -[CKDURLRequest setNumDownloadedElements:]
  -[CKDURLRequest haveCachedServerType]
  -[CKDURLRequest setHaveCachedServerType:]
  -[CKDURLRequest haveCachedPartitionType]
  -[CKDURLRequest setHaveCachedPartitionType:]
  -[CKDURLRequest cachedServerType]
  -[CKDURLRequest setCachedServerType:]
  -[CKDURLRequest cachedPartitionType]
  -[CKDURLRequest setCachedPartitionType:]
  -[CKDURLRequest setOverriddenHeaders:]


CKDPSetBadgeCountRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasBadgeCount
 @property  unsigned int badgeCount
 @property  BOOL hasForDevice
 @property  BOOL forDevice

  // class methods
  +[CKDPSetBadgeCountRequest options]

  // instance methods
  -[CKDPSetBadgeCountRequest isEqual:]
  -[CKDPSetBadgeCountRequest copyWithZone:]
  -[CKDPSetBadgeCountRequest dictionaryRepresentation]
  -[CKDPSetBadgeCountRequest writeTo:]
  -[CKDPSetBadgeCountRequest mergeFrom:]
  -[CKDPSetBadgeCountRequest readFrom:]
  -[CKDPSetBadgeCountRequest copyTo:]
  -[CKDPSetBadgeCountRequest requestTypeCode]
  -[CKDPSetBadgeCountRequest responseClass]
  -[CKDPSetBadgeCountRequest badgeCount]
  -[CKDPSetBadgeCountRequest setBadgeCount:]
  -[CKDPSetBadgeCountRequest setHasBadgeCount:]
  -[CKDPSetBadgeCountRequest hasBadgeCount]
  -[CKDPSetBadgeCountRequest setForDevice:]
  -[CKDPSetBadgeCountRequest setHasForDevice:]
  -[CKDPSetBadgeCountRequest hasForDevice]
  -[CKDPSetBadgeCountRequest forDevice]


CKDDirectoryPurger : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSArray *paths
 @property  @? shouldSkipFileBlock
 @property  @? shouldRemoveFileBlock

  // class methods
  +[CKDDirectoryPurger purgeDirectoryAtPath:]

  // instance methods
  -[CKDDirectoryPurger .cxx_destruct]
  -[CKDDirectoryPurger purge]
  -[CKDDirectoryPurger setPaths:]
  -[CKDDirectoryPurger paths]
  -[CKDDirectoryPurger initWithPaths:]
  -[CKDDirectoryPurger setShouldRemoveFileBlock:]
  -[CKDDirectoryPurger shouldSkipFileBlock]
  -[CKDDirectoryPurger shouldRemoveFileBlock]
  -[CKDDirectoryPurger setShouldSkipFileBlock:]


CKDPPackageManifestSection : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSignature
 @property  NSData *signature
 @property  BOOL hasSize
 @property  long long size
 @property  BOOL hasLastSection
 @property  BOOL lastSection

  // instance methods
  -[CKDPPackageManifestSection isEqual:]
  -[CKDPPackageManifestSection copyWithZone:]
  -[CKDPPackageManifestSection .cxx_destruct]
  -[CKDPPackageManifestSection size]
  -[CKDPPackageManifestSection dictionaryRepresentation]
  -[CKDPPackageManifestSection writeTo:]
  -[CKDPPackageManifestSection setSize:]
  -[CKDPPackageManifestSection mergeFrom:]
  -[CKDPPackageManifestSection readFrom:]
  -[CKDPPackageManifestSection copyTo:]
  -[CKDPPackageManifestSection signature]
  -[CKDPPackageManifestSection hasSize]
  -[CKDPPackageManifestSection setSignature:]
  -[CKDPPackageManifestSection setHasSize:]
  -[CKDPPackageManifestSection lastSection]
  -[CKDPPackageManifestSection hasSignature]
  -[CKDPPackageManifestSection setLastSection:]
  -[CKDPPackageManifestSection setHasLastSection:]
  -[CKDPPackageManifestSection hasLastSection]


CKDPStreamingAssetIdentifier : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasOwner
 @property  NSString *owner
 @property  BOOL hasFileSignature
 @property  NSData *fileSignature
 @property  BOOL hasReferenceSignature
 @property  NSData *referenceSignature

  // instance methods
  -[CKDPStreamingAssetIdentifier isEqual:]
  -[CKDPStreamingAssetIdentifier copyWithZone:]
  -[CKDPStreamingAssetIdentifier .cxx_destruct]
  -[CKDPStreamingAssetIdentifier setOwner:]
  -[CKDPStreamingAssetIdentifier dictionaryRepresentation]
  -[CKDPStreamingAssetIdentifier owner]
  -[CKDPStreamingAssetIdentifier writeTo:]
  -[CKDPStreamingAssetIdentifier mergeFrom:]
  -[CKDPStreamingAssetIdentifier readFrom:]
  -[CKDPStreamingAssetIdentifier copyTo:]
  -[CKDPStreamingAssetIdentifier fileSignature]
  -[CKDPStreamingAssetIdentifier referenceSignature]
  -[CKDPStreamingAssetIdentifier setFileSignature:]
  -[CKDPStreamingAssetIdentifier setReferenceSignature:]
  -[CKDPStreamingAssetIdentifier hasOwner]
  -[CKDPStreamingAssetIdentifier hasFileSignature]
  -[CKDPStreamingAssetIdentifier hasReferenceSignature]


CKDWrappingContext : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKRecordID *recordID
 @property  NSString *fieldName
 @property  NSData *fileSignature
 @property  NSData *referenceSignature

  // instance methods
  -[CKDWrappingContext .cxx_destruct]
  -[CKDWrappingContext recordID]
  -[CKDWrappingContext setRecordID:]
  -[CKDWrappingContext fieldName]
  -[CKDWrappingContext fileSignature]
  -[CKDWrappingContext referenceSignature]
  -[CKDWrappingContext setFileSignature:]
  -[CKDWrappingContext setReferenceSignature:]
  -[CKDWrappingContext setFieldName:]
  -[CKDWrappingContext initWithRecordID:fieldName:fileSignature:referenceSignature:]
  -[CKDWrappingContext assetContextString]
  -[CKDWrappingContext encryptedDataContextString]


CKDPCSManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDPCSTestOverrideProvider, CKDProtocolTranslatorIdentityDelegate>
 @property  CKDAccount *account
 @property  <CKDContainerScopedUserIDProvider> *containerScopedUserIDProvider
 @property  CKContainerID *containerID
 @property  BOOL isSiloed
 @property  NSString *responsibleBundleID
 @property  BOOL forceEnableReadOnlyManatee
 @property  unsigned long mmcsEncryptionSupport
 @property  BOOL useZoneWidePCS
 @property  CKDPCSIdentityManager *identityManager
 @property  NSDate *lastMissingManateeIdentityErrorDateForCurrentService
 @property  NSMutableSet *missingIdentityPublicKeys
 @property  NSMutableSet *servicesWithMissingIdentities
 @property  NSMutableSet *undecryptablePCSDataHashes
 @property  NSData *boundaryKeyData
 @property  NSObject<OS_dispatch_source> *pcsUpdateSource
 @property  NSObject<OS_dispatch_queue> *synchronizeQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSString *pcsServiceName
 @property  BOOL currentServiceIsManatee
 @property  unsigned long serviceTypeForSharing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDPCSManager _legacyServiceNameForContainerIDMapping:]
  +[CKDPCSManager noMatchingIdentityErrorForPCSError:withErrorCode:description:]
  +[CKDPCSManager publicKeyIDFromIdentity:]
  +[CKDPCSManager protectionIdentifierFromShareProtection:]
  +[CKDPCSManager allProtectionIdentifiersFromShareProtection:]

  // instance methods
  -[CKDPCSManager dealloc]
  -[CKDPCSManager .cxx_destruct]
  -[CKDPCSManager callbackQueue]
  -[CKDPCSManager account]
  -[CKDPCSManager setAccount:]
  -[CKDPCSManager setCallbackQueue:]
  -[CKDPCSManager containerID]
  -[CKDPCSManager useZoneWidePCS]
  -[CKDPCSManager mmcsEncryptionSupport]
  -[CKDPCSManager forceEnableReadOnlyManatee]
  -[CKDPCSManager createIngestedPPPCSDataFromInvitationData:completionHandler:]
  -[CKDPCSManager serviceTypeForSharing]
  -[CKDPCSManager currentServiceIsManatee]
  -[CKDPCSManager removePublicKeys:fromPCS:]
  -[CKDPCSManager decryptSharedZonePCSData:withInvitedPCS:error:]
  -[CKDPCSManager pcsDataFromFetchedShare:withPublicSharingKey:withServiceType:completionHandler:]
  -[CKDPCSManager wrapEncryptedData:withPCS:inContext:]
  -[CKDPCSManager unwrapEncryptedData:withPCS:inContext:]
  -[CKDPCSManager createRandomSharingIdentityWithError:]
  -[CKDPCSManager dataFromSharingIdentity:error:]
  -[CKDPCSManager boundaryKeyDataWithCompletionHandler:]
  -[CKDPCSManager updateAccount:clearPCSCacheHandler:]
  -[CKDPCSManager initWithAccount:containerScopedUserIDProvider:serviceName:appContainerTuple:]
  -[CKDPCSManager dataFromZonePCS:error:]
  -[CKDPCSManager dataFromRecordPCS:error:]
  -[CKDPCSManager etagFromPCSData:]
  -[CKDPCSManager createZonePCSWithError:]
  -[CKDPCSManager createRecordPCSWithZonePCS:sharePCS:createLite:error:]
  -[CKDPCSManager createZonePCSFromData:usingServiceIdentityWithType:error:]
  -[CKDPCSManager createPCSObjectFromData:ofType:sharedToPCS:error:]
  -[CKDPCSManager createZonePCSFromData:usingServiceIdentityWithType:completionHandler:]
  -[CKDPCSManager synchronizeQueue]
  -[CKDPCSManager identityManager]
  -[CKDPCSManager setBoundaryKeyData:]
  -[CKDPCSManager missingIdentityPublicKeys]
  -[CKDPCSManager undecryptablePCSDataHashes]
  -[CKDPCSManager servicesWithMissingIdentities]
  -[CKDPCSManager pcsUpdateSource]
  -[CKDPCSManager debugSharingIdentity]
  -[CKDPCSManager _onSynchronizeQueue:]
  -[CKDPCSManager copyPublicKeyForService:withError:]
  -[CKDPCSManager copyAllPublicKeysForService:withError:]
  -[CKDPCSManager containerScopedUserIDProvider]
  -[CKDPCSManager copyDiversifiedPublicKeyForService:withError:]
  -[CKDPCSManager createCombinedIdentityWithOutOfNetworkPrivateKey:publicSharingIdentity:]
  -[CKDPCSManager createSharePCSFromData:sharingIdentity:error:]
  -[CKDPCSManager createPublicSharingIdentityFromPublicKey:error:]
  -[CKDPCSManager addPublicIdentity:toSharePCS:permission:]
  -[CKDPCSManager removeSharingIdentity:fromSharePCS:]
  -[CKDPCSManager dataFromSharePCS:error:]
  -[CKDPCSManager createSharePCSFromData:ofType:withService:error:]
  -[CKDPCSManager createSharingIdentityFromData:error:]
  -[CKDPCSManager _addIdentity:withService:toPCS:]
  -[CKDPCSManager _locked_createZonePCSWithSyncKeyRegistryRetry:completionHandler:]
  -[CKDPCSManager synchronizeUserKeyRegistryForServiceType:shouldThrottle:completionHandler:]
  -[CKDPCSManager createZonePCSWithSyncKeyRegistryRetry:completionHandler:]
  -[CKDPCSManager _pcsObjectKindForCKDPCSBlobType:]
  -[CKDPCSManager isPreviouslyUndecryptablePCS:]
  -[CKDPCSManager responsibleBundleID]
  -[CKDPCSManager _locked_markMissingIdentitiesFromFailedDecryptError:serviceName:]
  -[CKDPCSManager _locked_createPCSFromData:ofType:usingPCSServiceType:withSyncKeyRegistryRetry:completionHandler:]
  -[CKDPCSManager markUndecryptablePCS:]
  -[CKDPCSManager _triggerAutobugCaptureForLostManateeIdentityError]
  -[CKDPCSManager _createPCSFromData:ofType:usingPCSServiceType:withSyncKeyRegistryRetry:completionHandler:]
  -[CKDPCSManager _locked_preflightIdentitiesForService:withSyncKeyRegistryRetry:completionHandler:]
  -[CKDPCSManager _copyShareProtectionFromExportedData:ofType:identities:error:]
  -[CKDPCSManager zonePCSNeedsKeyRolled:bypassWhitelistedContainers:]
  -[CKDPCSManager _isWhitelistedKeyRollingContainerIdentifier:]
  -[CKDPCSManager addIdentityForService:toPCS:]
  -[CKDPCSManager rollMasterKeyForRecordPCS:bypassWhitelistedContainers:]
  -[CKDPCSManager canRollShareKeys]
  -[CKDPCSManager removeSharePCS:fromRecordPCS:error:]
  -[CKDPCSManager rollIdentityForSharePCS:removeAllExistingPrivateKeys:error:]
  -[CKDPCSManager addSharePCS:toRecordPCS:error:]
  -[CKDPCSManager updateZoneIdentityForPCS:usingZonePCS:bypassWhitelistedContainers:]
  -[CKDPCSManager removePrivateKeysForKeyIDs:fromPCS:]
  -[CKDPCSManager createPCSObjectFromData:ofType:sharedToPCS:logFailure:error:]
  -[CKDPCSManager addSharePCS:toRecordPCS:permission:error:]
  -[CKDPCSManager createEmptySharePCSOfType:error:]
  -[CKDPCSManager _addPublicIdentityForService:toSharePCS:withError:]
  -[CKDPCSManager createSharePCSFromData:sharingIdentity:logFailure:error:]
  -[CKDPCSManager createSharePCSFromData:ofType:withService:logFailure:error:]
  -[CKDPCSManager _locked_decryptPCSDataOnSharePCS:withPublicSharingKey:completionHandler:]
  -[CKDPCSManager createSharePCSFromData:sharePrivateKey:error:]
  -[CKDPCSManager _locked_decryptCurrentPerParticipantPCSDataOnSharePCS:completionHandler:]
  -[CKDPCSManager pcsDataFromFetchedShare:withServiceType:completionHandler:]
  -[CKDPCSManager _locked_pcsDataFromFetchedShare:withPublicSharingKey:withServiceType:completionHandler:]
  -[CKDPCSManager createSharePCSOfType:forPCSServiceType:error:]
  -[CKDPCSManager createEmptySignedSharePCSOfType:forPCSServiceType:withError:]
  -[CKDPCSManager addSharingIdentity:toSharePCS:permission:]
  -[CKDPCSManager createSharePublicPCSWithIdentity:error:]
  -[CKDPCSManager removePublicIdentity:fromSharePCS:]
  -[CKDPCSManager createSharePCSFromEncryptedData:error:]
  -[CKDPCSManager containerSupportsEnhancedContext]
  -[CKDPCSManager referenceIdentifierStringFromAssetKey:]
  -[CKDPCSManager referenceSignatureFromAssetKey:]
  -[CKDPCSManager unwrapEncryptedData:withPCS:withContextString:]
  -[CKDPCSManager triggerAutoSysdiagnoseIfNecessaryForError:encryptedData:pcs:]
  -[CKDPCSManager wrapEncryptedData:withPCS:withContextString:]
  -[CKDPCSManager boundaryKeyData]
  -[CKDPCSManager _lockedBoundaryKeyDataWithCompletionHandler:]
  -[CKDPCSManager sharingFingerprintsContainPublicKeyWithData:error:]
  -[CKDPCSManager lastMissingManateeIdentityErrorDateForCurrentService]
  -[CKDPCSManager publicKeyVersionForServiceType:]
  -[CKDPCSManager pcsServiceName]
  -[CKDPCSManager copyDiversifiedIdentityForService:withError:]
  -[CKDPCSManager participantPublicKeyForServiceType:error:]
  -[CKDPCSManager createProtectionInfoFromOONPrivateKey:privateToken:OONProtectionInfo:error:]
  -[CKDPCSManager canDecryptInvitedProtectionData:participantProtectionInfo:serviceType:error:]
  -[CKDPCSManager createZonePCSWithCompletionHandler:]
  -[CKDPCSManager availableIdentityForService:error:]
  -[CKDPCSManager preflightIdentitiesForService:withSyncKeyRegistryRetry:completionHandler:]
  -[CKDPCSManager etagFromZonePCS:error:]
  -[CKDPCSManager repairZonePCSData:error:]
  -[CKDPCSManager zonePCSNeedsKeyRolled:]
  -[CKDPCSManager zonePCSNeedsUpdate:]
  -[CKDPCSManager updateServiceIdentityOnZonePCS:]
  -[CKDPCSManager rollMasterKeyForRecordPCS:]
  -[CKDPCSManager updateIdentityAndRollKeyForZonePCS:usingServiceIdentityWithType:]
  -[CKDPCSManager keyRollForZoneWideShareWithZonePCS:sharePCS:]
  -[CKDPCSManager createRecordPCSWithEncryptedZonePCS:sharePCS:createLite:error:]
  -[CKDPCSManager updateSigningIdentityOnPCS:usingSignedPCS:]
  -[CKDPCSManager etagFromRecordPCS:error:]
  -[CKDPCSManager setOwnerIdentity:onPCS:]
  -[CKDPCSManager createChainPCSWithError:]
  -[CKDPCSManager publicKeyDataFromPCS:error:]
  -[CKDPCSManager decryptPCSDataOnSharePCS:completionHandler:]
  -[CKDPCSManager pcsDataFromFetchedShare:completionHandler:]
  -[CKDPCSManager copyPublicAuthorshipIdentityFromPCS:]
  -[CKDPCSManager createNewSharePCSDataForShareWithID:withPublicSharingKey:addDebugIdentity:error:]
  -[CKDPCSManager etagFromSharePCS:error:]
  -[CKDPCSManager addIdentityBackToPCS:]
  -[CKDPCSManager removeEncryptedPCS:fromSharePCS:]
  -[CKDPCSManager removePublicKeyID:fromPCS:]
  -[CKDPCSManager sharingIdentityDataFromPCS:error:]
  -[CKDPCSManager decryptChainPCSForRecordPCS:]
  -[CKDPCSManager unwrapAssetKey:withRecordPCS:inContext:withError:]
  -[CKDPCSManager wrapAssetKey:withRecordPCS:inContext:withError:]
  -[CKDPCSManager newAssetKeyWithType:withError:]
  -[CKDPCSManager isSiloed]
  -[CKDPCSManager setLastMissingManateeIdentityErrorDateForCurrentService:]
  -[CKDPCSManager setMissingIdentityPublicKeys:]
  -[CKDPCSManager setServicesWithMissingIdentities:]
  -[CKDPCSManager setUndecryptablePCSDataHashes:]
  -[CKDPCSManager setPcsUpdateSource:]
  -[CKDPCSManager setSynchronizeQueue:]


CKDFetchShareMetadataOperation : CKDOperation
 @property  NSMutableArray *shareURLsToFetch
 @property  NSMutableDictionary *shareTokenMetadatasToFetchByURL
 @property  BOOL shouldFetchRootRecord
 @property  NSSet *rootRecordDesiredKeysSet
 @property  BOOL clientWillDisplaySystemAcceptPrompt
 @property  NSDictionary *shareInvitationTokensByShareURL
 @property  BOOL forceDSRefetch
 @property  BOOL errorOnOON
 @property  @? shareMetadataFetchedBlock

  // instance methods
  -[CKDFetchShareMetadataOperation .cxx_destruct]
  -[CKDFetchShareMetadataOperation main]
  -[CKDFetchShareMetadataOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchShareMetadataOperation activityCreate]
  -[CKDFetchShareMetadataOperation setShareURLsToFetch:]
  -[CKDFetchShareMetadataOperation shouldFetchRootRecord]
  -[CKDFetchShareMetadataOperation setShouldFetchRootRecord:]
  -[CKDFetchShareMetadataOperation shareInvitationTokensByShareURL]
  -[CKDFetchShareMetadataOperation setShareInvitationTokensByShareURL:]
  -[CKDFetchShareMetadataOperation shareURLsToFetch]
  -[CKDFetchShareMetadataOperation initWithOperationInfo:clientContext:]
  -[CKDFetchShareMetadataOperation setErrorOnOON:]
  -[CKDFetchShareMetadataOperation setShareMetadataFetchedBlock:]
  -[CKDFetchShareMetadataOperation nameForState:]
  -[CKDFetchShareMetadataOperation makeStateTransition]
  -[CKDFetchShareMetadataOperation _prepareShortTokens]
  -[CKDFetchShareMetadataOperation _fetchShortTokenMetadata]
  -[CKDFetchShareMetadataOperation errorOnOON]
  -[CKDFetchShareMetadataOperation shareTokenMetadatasToFetchByURL]
  -[CKDFetchShareMetadataOperation shareMetadataFetchedBlock]
  -[CKDFetchShareMetadataOperation forceDSRefetch]
  -[CKDFetchShareMetadataOperation setForceDSRefetch:]
  -[CKDFetchShareMetadataOperation rootRecordDesiredKeysSet]
  -[CKDFetchShareMetadataOperation _handleTokenResolveWithLookupInfo:shareMetadata:responseCode:urlByShortTokenLookupInfos:tokensToFetchByURL:]
  -[CKDFetchShareMetadataOperation _performCallbackForURL:withMetadata:error:]
  -[CKDFetchShareMetadataOperation _decodeProtectedFullToken:tokenMetadata:]
  -[CKDFetchShareMetadataOperation _continueSharePCSPrepForShareMetadata:shareURL:]
  -[CKDFetchShareMetadataOperation _prepPPPCSDataForDugongShareMetadata:withInvitationToken:completionHandler:]
  -[CKDFetchShareMetadataOperation _continueHandlingFetchedShareMetadata:shareURL:]
  -[CKDFetchShareMetadataOperation _decryptRootRecordsForShareURL:withMetadata:completionHandler:]
  -[CKDFetchShareMetadataOperation _currentUserIsOONForShareMetadata:]
  -[CKDFetchShareMetadataOperation setShareTokenMetadatasToFetchByURL:]
  -[CKDFetchShareMetadataOperation setRootRecordDesiredKeysSet:]
  -[CKDFetchShareMetadataOperation clientWillDisplaySystemAcceptPrompt]
  -[CKDFetchShareMetadataOperation setClientWillDisplaySystemAcceptPrompt:]


CKDShareTokenMetadata : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  NSString *routingKey
 @property  NSData *shortSharingTokenData
 @property  NSString *shortSharingToken
 @property  NSData *shortSharingTokenHashData
 @property  BOOL forceDSRefetch
 @property  NSData *publicTokenData
 @property  NSData *privateTokenData

  // instance methods
  -[CKDShareTokenMetadata copyWithZone:]
  -[CKDShareTokenMetadata .cxx_destruct]
  -[CKDShareTokenMetadata routingKey]
  -[CKDShareTokenMetadata setRoutingKey:]
  -[CKDShareTokenMetadata shortSharingTokenData]
  -[CKDShareTokenMetadata shortSharingToken]
  -[CKDShareTokenMetadata shortSharingTokenHashData]
  -[CKDShareTokenMetadata setPrivateTokenData:]
  -[CKDShareTokenMetadata setPublicTokenData:]
  -[CKDShareTokenMetadata forceDSRefetch]
  -[CKDShareTokenMetadata setForceDSRefetch:]
  -[CKDShareTokenMetadata privateTokenData]
  -[CKDShareTokenMetadata publicTokenData]
  -[CKDShareTokenMetadata setShortSharingTokenData:]


CKDModifyWebSharingOperation : CKDDatabaseOperation
 @property  NSArray *recordIDsToShare
 @property  NSArray *recordIDsToUnshare
 @property  NSArray *recordIDsToShareReadWrite
 @property  NSMutableSet *fetchedRecordIDs
 @property  NSMutableDictionary *recordsToSaveByID
 @property  int numSaveAttempts
 @property  @? recordWebSharedBlock
 @property  @? recordWebUnsharedBlock

  // class methods
  +[CKDModifyWebSharingOperation isPredominatelyDownload]

  // instance methods
  -[CKDModifyWebSharingOperation .cxx_destruct]
  -[CKDModifyWebSharingOperation main]
  -[CKDModifyWebSharingOperation _finishOnCallbackQueueWithError:]
  -[CKDModifyWebSharingOperation activityCreate]
  -[CKDModifyWebSharingOperation recordIDsToShare]
  -[CKDModifyWebSharingOperation setRecordIDsToShare:]
  -[CKDModifyWebSharingOperation recordIDsToUnshare]
  -[CKDModifyWebSharingOperation setRecordIDsToUnshare:]
  -[CKDModifyWebSharingOperation recordIDsToShareReadWrite]
  -[CKDModifyWebSharingOperation setRecordIDsToShareReadWrite:]
  -[CKDModifyWebSharingOperation recordsToSaveByID]
  -[CKDModifyWebSharingOperation setRecordsToSaveByID:]
  -[CKDModifyWebSharingOperation initWithOperationInfo:clientContext:]
  -[CKDModifyWebSharingOperation setRecordWebSharedBlock:]
  -[CKDModifyWebSharingOperation setRecordWebUnsharedBlock:]
  -[CKDModifyWebSharingOperation nameForState:]
  -[CKDModifyWebSharingOperation makeStateTransition]
  -[CKDModifyWebSharingOperation _fetchRecords]
  -[CKDModifyWebSharingOperation _saveRecords]
  -[CKDModifyWebSharingOperation numSaveAttempts]
  -[CKDModifyWebSharingOperation recordWebSharedBlock]
  -[CKDModifyWebSharingOperation recordWebUnsharedBlock]
  -[CKDModifyWebSharingOperation setNumSaveAttempts:]
  -[CKDModifyWebSharingOperation _handleRecordSaved:error:]
  -[CKDModifyWebSharingOperation _copyShareProtectionFromRecord:error:]
  -[CKDModifyWebSharingOperation _handleRecordFetched:recordID:error:]
  -[CKDModifyWebSharingOperation fetchedRecordIDs]
  -[CKDModifyWebSharingOperation setFetchedRecordIDs:]


CKDMMCSTestEncryptedItemReader : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDMMCSItemReaderWriterProtocol>
 @property  CKDMMCSItemGroupContext *MMCSRequest
 @property  CKDMMCSItem *MMCSItem
 @property  <CKDMMCSItemReaderWriterProtocol> *underlyingItemReader
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDMMCSTestEncryptedItemReader .cxx_destruct]
  -[CKDMMCSTestEncryptedItemReader openWithError:]
  -[CKDMMCSTestEncryptedItemReader closeWithError:]
  -[CKDMMCSTestEncryptedItemReader MMCSRequest]
  -[CKDMMCSTestEncryptedItemReader MMCSItem]
  -[CKDMMCSTestEncryptedItemReader getFileMetadataWithError:]
  -[CKDMMCSTestEncryptedItemReader readBytesAtOffset:bytes:length:bytesRead:error:]
  -[CKDMMCSTestEncryptedItemReader writeBytesAtOffset:bytes:length:bytesWritten:error:]
  -[CKDMMCSTestEncryptedItemReader initWithMMCSItem:MMCSRequest:]
  -[CKDMMCSTestEncryptedItemReader setMMCSRequest:]
  -[CKDMMCSTestEncryptedItemReader setMMCSItem:]
  -[CKDMMCSTestEncryptedItemReader underlyingItemReader]
  -[CKDMMCSTestEncryptedItemReader setUnderlyingItemReader:]


CKDModifyRecordAccessOperation : CKDDatabaseOperation
 @property  NSArray *recordIDsToGrant
 @property  NSArray *recordIDsToRevoke
 @property  NSMutableSet *fetchedRecordIDs
 @property  NSMutableDictionary *recordsToSaveByID
 @property  int numSaveAttempts
 @property  @? accessWasGrantedBlock
 @property  @? accessWasRevokedBlock

  // class methods
  +[CKDModifyRecordAccessOperation isPredominatelyDownload]

  // instance methods
  -[CKDModifyRecordAccessOperation .cxx_destruct]
  -[CKDModifyRecordAccessOperation main]
  -[CKDModifyRecordAccessOperation _finishOnCallbackQueueWithError:]
  -[CKDModifyRecordAccessOperation activityCreate]
  -[CKDModifyRecordAccessOperation recordIDsToGrant]
  -[CKDModifyRecordAccessOperation setRecordIDsToGrant:]
  -[CKDModifyRecordAccessOperation recordIDsToRevoke]
  -[CKDModifyRecordAccessOperation setRecordIDsToRevoke:]
  -[CKDModifyRecordAccessOperation recordsToSaveByID]
  -[CKDModifyRecordAccessOperation setRecordsToSaveByID:]
  -[CKDModifyRecordAccessOperation initWithOperationInfo:clientContext:]
  -[CKDModifyRecordAccessOperation setAccessWasGrantedBlock:]
  -[CKDModifyRecordAccessOperation setAccessWasRevokedBlock:]
  -[CKDModifyRecordAccessOperation nameForState:]
  -[CKDModifyRecordAccessOperation makeStateTransition]
  -[CKDModifyRecordAccessOperation _fetchRecords]
  -[CKDModifyRecordAccessOperation _saveRecords]
  -[CKDModifyRecordAccessOperation numSaveAttempts]
  -[CKDModifyRecordAccessOperation setNumSaveAttempts:]
  -[CKDModifyRecordAccessOperation _handleRecordSaved:error:]
  -[CKDModifyRecordAccessOperation _copyShareProtectionFromRecord:error:]
  -[CKDModifyRecordAccessOperation _handleRecordFetched:recordID:error:]
  -[CKDModifyRecordAccessOperation fetchedRecordIDs]
  -[CKDModifyRecordAccessOperation setFetchedRecordIDs:]
  -[CKDModifyRecordAccessOperation accessWasGrantedBlock]
  -[CKDModifyRecordAccessOperation accessWasRevokedBlock]


CKDPStreamingAssetSaveAssetRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRequestedSize
 @property  long long requestedSize
 @property  BOOL hasUploadedSize
 @property  long long uploadedSize
 @property  BOOL hasUploadReceipt
 @property  NSString *uploadReceipt

  // instance methods
  -[CKDPStreamingAssetSaveAssetRequest isEqual:]
  -[CKDPStreamingAssetSaveAssetRequest copyWithZone:]
  -[CKDPStreamingAssetSaveAssetRequest .cxx_destruct]
  -[CKDPStreamingAssetSaveAssetRequest dictionaryRepresentation]
  -[CKDPStreamingAssetSaveAssetRequest writeTo:]
  -[CKDPStreamingAssetSaveAssetRequest mergeFrom:]
  -[CKDPStreamingAssetSaveAssetRequest readFrom:]
  -[CKDPStreamingAssetSaveAssetRequest copyTo:]
  -[CKDPStreamingAssetSaveAssetRequest uploadReceipt]
  -[CKDPStreamingAssetSaveAssetRequest setUploadReceipt:]
  -[CKDPStreamingAssetSaveAssetRequest requestedSize]
  -[CKDPStreamingAssetSaveAssetRequest setRequestedSize:]
  -[CKDPStreamingAssetSaveAssetRequest setHasRequestedSize:]
  -[CKDPStreamingAssetSaveAssetRequest hasRequestedSize]
  -[CKDPStreamingAssetSaveAssetRequest setUploadedSize:]
  -[CKDPStreamingAssetSaveAssetRequest setHasUploadedSize:]
  -[CKDPStreamingAssetSaveAssetRequest hasUploadedSize]
  -[CKDPStreamingAssetSaveAssetRequest hasUploadReceipt]
  -[CKDPStreamingAssetSaveAssetRequest uploadedSize]


CKDPZoneSaveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRecordZone
 @property  CKDPZone *recordZone
 @property  BOOL hasZoneProtectionInfoTag
 @property  NSString *zoneProtectionInfoTag

  // class methods
  +[CKDPZoneSaveRequest options]

  // instance methods
  -[CKDPZoneSaveRequest isEqual:]
  -[CKDPZoneSaveRequest copyWithZone:]
  -[CKDPZoneSaveRequest .cxx_destruct]
  -[CKDPZoneSaveRequest dictionaryRepresentation]
  -[CKDPZoneSaveRequest writeTo:]
  -[CKDPZoneSaveRequest mergeFrom:]
  -[CKDPZoneSaveRequest readFrom:]
  -[CKDPZoneSaveRequest copyTo:]
  -[CKDPZoneSaveRequest requestTypeCode]
  -[CKDPZoneSaveRequest responseClass]
  -[CKDPZoneSaveRequest recordZone]
  -[CKDPZoneSaveRequest setRecordZone:]
  -[CKDPZoneSaveRequest hasRecordZone]
  -[CKDPZoneSaveRequest setZoneProtectionInfoTag:]
  -[CKDPZoneSaveRequest hasZoneProtectionInfoTag]
  -[CKDPZoneSaveRequest zoneProtectionInfoTag]


CKDPConfigurationField : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasValue
 @property  CKDPConfigurationFieldValue *value

  // instance methods
  -[CKDPConfigurationField isEqual:]
  -[CKDPConfigurationField name]
  -[CKDPConfigurationField copyWithZone:]
  -[CKDPConfigurationField .cxx_destruct]
  -[CKDPConfigurationField setName:]
  -[CKDPConfigurationField value]
  -[CKDPConfigurationField setValue:]
  -[CKDPConfigurationField dictionaryRepresentation]
  -[CKDPConfigurationField writeTo:]
  -[CKDPConfigurationField mergeFrom:]
  -[CKDPConfigurationField readFrom:]
  -[CKDPConfigurationField copyTo:]
  -[CKDPConfigurationField hasName]
  -[CKDPConfigurationField hasValue]


CKDQueuedZoneFetch : CKDQueuedFetch
  // instance methods
  -[CKDQueuedZoneFetch createFetchOperationForItemIDs:operationQueue:operationConfigurationBlock:]
  -[CKDQueuedZoneFetch addRequestForZoneID:forOperation:withCompletionHandler:]


CKDDiscoverUserIdentitiesOperation : CKDOperation
 @property  NSArray *userIdentityLookupInfos
 @property  @? discoverUserIdentitiesProgressBlock

  // instance methods
  -[CKDDiscoverUserIdentitiesOperation .cxx_destruct]
  -[CKDDiscoverUserIdentitiesOperation main]
  -[CKDDiscoverUserIdentitiesOperation _finishOnCallbackQueueWithError:]
  -[CKDDiscoverUserIdentitiesOperation activityCreate]
  -[CKDDiscoverUserIdentitiesOperation setUserIdentityLookupInfos:]
  -[CKDDiscoverUserIdentitiesOperation userIdentityLookupInfos]
  -[CKDDiscoverUserIdentitiesOperation initWithOperationInfo:clientContext:]
  -[CKDDiscoverUserIdentitiesOperation setDiscoverUserIdentitiesProgressBlock:]
  -[CKDDiscoverUserIdentitiesOperation discoverUserIdentitiesProgressBlock]
  -[CKDDiscoverUserIdentitiesOperation _handleDiscoveredIdentity:lookupInfo:responseCode:]
  -[CKDDiscoverUserIdentitiesOperation _discoverIdentitiesWithLookupInfos:completionBlock:]


CKDDiscoverAllUserIdentitiesOperation : CKDDiscoverUserIdentitiesOperation
 @property  NSMutableDictionary *contactIdentifiersByLookupInfo

  // instance methods
  -[CKDDiscoverAllUserIdentitiesOperation .cxx_destruct]
  -[CKDDiscoverAllUserIdentitiesOperation main]
  -[CKDDiscoverAllUserIdentitiesOperation initWithOperationInfo:clientContext:]
  -[CKDDiscoverAllUserIdentitiesOperation _handleDiscoveredIdentity:lookupInfo:responseCode:]
  -[CKDDiscoverAllUserIdentitiesOperation setContactIdentifiersByLookupInfo:]
  -[CKDDiscoverAllUserIdentitiesOperation contactIdentifiersByLookupInfo]
  -[CKDDiscoverAllUserIdentitiesOperation _discoverIdentitiesBatched:]


CKDPArchiveRecordsResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPArchiveRecordsResponse isEqual:]
  -[CKDPArchiveRecordsResponse copyWithZone:]
  -[CKDPArchiveRecordsResponse dictionaryRepresentation]
  -[CKDPArchiveRecordsResponse writeTo:]
  -[CKDPArchiveRecordsResponse mergeFrom:]
  -[CKDPArchiveRecordsResponse readFrom:]
  -[CKDPArchiveRecordsResponse copyTo:]


CKDPTokenUnregistrationResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPTokenUnregistrationResponse isEqual:]
  -[CKDPTokenUnregistrationResponse copyWithZone:]
  -[CKDPTokenUnregistrationResponse dictionaryRepresentation]
  -[CKDPTokenUnregistrationResponse writeTo:]
  -[CKDPTokenUnregistrationResponse mergeFrom:]
  -[CKDPTokenUnregistrationResponse readFrom:]
  -[CKDPTokenUnregistrationResponse copyTo:]


CKDAssetZoneKey : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  CKRecordZoneID *destinationZoneID
 @property  CKRecordZoneID *sourceZoneID

  // instance methods
  -[CKDAssetZoneKey isEqual:]
  -[CKDAssetZoneKey copyWithZone:]
  -[CKDAssetZoneKey .cxx_destruct]
  -[CKDAssetZoneKey CKPropertiesDescription]
  -[CKDAssetZoneKey sourceZoneID]
  -[CKDAssetZoneKey setSourceZoneID:]
  -[CKDAssetZoneKey destinationZoneID]
  -[CKDAssetZoneKey initWithDestinationZoneID:sourceZoneID:]
  -[CKDAssetZoneKey initWithDestinationZoneID:]
  -[CKDAssetZoneKey setDestinationZoneID:]


CKDTransactionState : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKDAssetBatch *assetBatch
 @property  NSMutableDictionary *itemByAssetId

  // instance methods
  -[CKDTransactionState init]
  -[CKDTransactionState .cxx_destruct]
  -[CKDTransactionState assetBatch]
  -[CKDTransactionState setAssetBatch:]
  -[CKDTransactionState itemByAssetId]
  -[CKDTransactionState setItemByAssetId:]


CKDGetContentAuthTokensForPutURLRequest : CKDURLRequest
 @property  CKDAssetTokenRequest *assetTokenRequest
 @property  NSMapTable *transactionStateByRequestIDs
 @property  NSDictionary *headers
 @property  BOOL useEncryption

  // instance methods
  -[CKDGetContentAuthTokensForPutURLRequest .cxx_destruct]
  -[CKDGetContentAuthTokensForPutURLRequest operationType]
  -[CKDGetContentAuthTokensForPutURLRequest setUseEncryption:]
  -[CKDGetContentAuthTokensForPutURLRequest useEncryption]
  -[CKDGetContentAuthTokensForPutURLRequest setHeaders:]
  -[CKDGetContentAuthTokensForPutURLRequest headers]
  -[CKDGetContentAuthTokensForPutURLRequest assetTokenRequest]
  -[CKDGetContentAuthTokensForPutURLRequest setAssetTokenRequest:]
  -[CKDGetContentAuthTokensForPutURLRequest generateRequestOperations]
  -[CKDGetContentAuthTokensForPutURLRequest requestDidParseProtobufObject:]
  -[CKDGetContentAuthTokensForPutURLRequest requestDidParseNodeFailure:]
  -[CKDGetContentAuthTokensForPutURLRequest requestOperationClasses]
  -[CKDGetContentAuthTokensForPutURLRequest allowsAnonymousAccount]
  -[CKDGetContentAuthTokensForPutURLRequest setTransactionStateByRequestIDs:]
  -[CKDGetContentAuthTokensForPutURLRequest transactionStateByRequestIDs]
  -[CKDGetContentAuthTokensForPutURLRequest initWithAssetTokenRequest:headers:]


CKDCompleteParticipantVettingOperation : CKDOperation
 @property  NSString *vettingToken
 @property  NSString *vettingEmail
 @property  NSString *vettingPhone
 @property  NSString *routingKey
 @property  NSData *encryptedKey
 @property  NSString *baseToken
 @property  NSString *displayedHostname
 @property  ^{_OpaquePCSShareProtection=} protectionInfo
 @property  NSString *shortToken
 @property  CKShareMetadata *shareMetadata
 @property  @? verifyProgressURLReconstructedBlock
 @property  @? verifyProgressShareMetadataFetchedBlock
 @property  @? verifyCompletionBlock

  // instance methods
  -[CKDCompleteParticipantVettingOperation .cxx_destruct]
  -[CKDCompleteParticipantVettingOperation main]
  -[CKDCompleteParticipantVettingOperation shareMetadata]
  -[CKDCompleteParticipantVettingOperation baseToken]
  -[CKDCompleteParticipantVettingOperation _finishOnCallbackQueueWithError:]
  -[CKDCompleteParticipantVettingOperation activityCreate]
  -[CKDCompleteParticipantVettingOperation routingKey]
  -[CKDCompleteParticipantVettingOperation displayedHostname]
  -[CKDCompleteParticipantVettingOperation shortToken]
  -[CKDCompleteParticipantVettingOperation protectionInfo]
  -[CKDCompleteParticipantVettingOperation setProtectionInfo:]
  -[CKDCompleteParticipantVettingOperation setShareMetadata:]
  -[CKDCompleteParticipantVettingOperation vettingToken]
  -[CKDCompleteParticipantVettingOperation vettingEmail]
  -[CKDCompleteParticipantVettingOperation vettingPhone]
  -[CKDCompleteParticipantVettingOperation encryptedKey]
  -[CKDCompleteParticipantVettingOperation initWithOperationInfo:clientContext:]
  -[CKDCompleteParticipantVettingOperation setVerifyProgressURLReconstructedBlock:]
  -[CKDCompleteParticipantVettingOperation setVerifyProgressShareMetadataFetchedBlock:]
  -[CKDCompleteParticipantVettingOperation setVerifyCompletionBlock:]
  -[CKDCompleteParticipantVettingOperation nameForState:]
  -[CKDCompleteParticipantVettingOperation makeStateTransition]
  -[CKDCompleteParticipantVettingOperation _reconstructShortToken]
  -[CKDCompleteParticipantVettingOperation _performAuthKitVerification]
  -[CKDCompleteParticipantVettingOperation _forceFetchShareMetadata]
  -[CKDCompleteParticipantVettingOperation _reconstructShareURL]
  -[CKDCompleteParticipantVettingOperation _verifyOONParticipant]
  -[CKDCompleteParticipantVettingOperation shortSharingTokenFromFullToken:]
  -[CKDCompleteParticipantVettingOperation setShortToken:]
  -[CKDCompleteParticipantVettingOperation verifyProgressShareMetadataFetchedBlock]
  -[CKDCompleteParticipantVettingOperation verifyProgressURLReconstructedBlock]
  -[CKDCompleteParticipantVettingOperation shortSharingTokenFromData:]
  -[CKDCompleteParticipantVettingOperation verifyCompletionBlock]


CKDContainerInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying, NSSecureCoding>
 @property  NSURL *publicCloudDBURL
 @property  NSURL *publicShareServiceURL
 @property  NSURL *publicDeviceServiceURL
 @property  NSURL *publicCodeServiceURL
 @property  NSURL *publicMetricsServiceURL
 @property  NSURL *publicDatabaseRPCServiceURL
 @property  NSString *containerScopedUserID
 @property  NSString *orgAdminUserID
 @property  long long environment

  // class methods
  +[CKDContainerInfo supportsSecureCoding]

  // instance methods
  -[CKDContainerInfo init]
  -[CKDContainerInfo isEqual:]
  -[CKDContainerInfo copyWithZone:]
  -[CKDContainerInfo encodeWithCoder:]
  -[CKDContainerInfo initWithCoder:]
  -[CKDContainerInfo .cxx_destruct]
  -[CKDContainerInfo environment]
  -[CKDContainerInfo setEnvironment:]
  -[CKDContainerInfo CKPropertiesDescription]
  -[CKDContainerInfo setContainerScopedUserID:]
  -[CKDContainerInfo setOrgAdminUserID:]
  -[CKDContainerInfo containerScopedUserID]
  -[CKDContainerInfo orgAdminUserID]
  -[CKDContainerInfo publicCloudDBURL]
  -[CKDContainerInfo publicShareServiceURL]
  -[CKDContainerInfo publicDeviceServiceURL]
  -[CKDContainerInfo publicCodeServiceURL]
  -[CKDContainerInfo publicMetricsServiceURL]
  -[CKDContainerInfo publicDatabaseRPCServiceURL]
  -[CKDContainerInfo setPublicCloudDBURL:]
  -[CKDContainerInfo setPublicShareServiceURL:]
  -[CKDContainerInfo setPublicDeviceServiceURL:]
  -[CKDContainerInfo setPublicCodeServiceURL:]
  -[CKDContainerInfo setPublicMetricsServiceURL:]
  -[CKDContainerInfo setPublicDatabaseRPCServiceURL:]


CKDCodeLocalFunctionInvokeURLRequest : CKDURLRequest
 @property  NSString *serviceName
 @property  NSString *functionName
 @property  NSData *serializedParameters
 @property  NSURL *explicitBaseURL
 @property  @? serializedResultsCallback

  // instance methods
  -[CKDCodeLocalFunctionInvokeURLRequest .cxx_destruct]
  -[CKDCodeLocalFunctionInvokeURLRequest url]
  -[CKDCodeLocalFunctionInvokeURLRequest serviceName]
  -[CKDCodeLocalFunctionInvokeURLRequest partitionType]
  -[CKDCodeLocalFunctionInvokeURLRequest setServiceName:]
  -[CKDCodeLocalFunctionInvokeURLRequest functionName]
  -[CKDCodeLocalFunctionInvokeURLRequest setFunctionName:]
  -[CKDCodeLocalFunctionInvokeURLRequest explicitBaseURL]
  -[CKDCodeLocalFunctionInvokeURLRequest setExplicitBaseURL:]
  -[CKDCodeLocalFunctionInvokeURLRequest additionalHeaderValues]
  -[CKDCodeLocalFunctionInvokeURLRequest serializedParameters]
  -[CKDCodeLocalFunctionInvokeURLRequest requestGETPreAuth]
  -[CKDCodeLocalFunctionInvokeURLRequest requestDidParseProtobufObject:]
  -[CKDCodeLocalFunctionInvokeURLRequest requestDidParseNodeFailure:]
  -[CKDCodeLocalFunctionInvokeURLRequest expectedResponseClass]
  -[CKDCodeLocalFunctionInvokeURLRequest parsingStandaloneMessage]
  -[CKDCodeLocalFunctionInvokeURLRequest serverType]
  -[CKDCodeLocalFunctionInvokeURLRequest shouldCompressBody]
  -[CKDCodeLocalFunctionInvokeURLRequest allowsAnonymousAccount]
  -[CKDCodeLocalFunctionInvokeURLRequest requestMessageClass]
  -[CKDCodeLocalFunctionInvokeURLRequest requestBodyStream]
  -[CKDCodeLocalFunctionInvokeURLRequest setSerializedParameters:]
  -[CKDCodeLocalFunctionInvokeURLRequest serializedResultsCallback]
  -[CKDCodeLocalFunctionInvokeURLRequest initWithServiceName:functionName:serializedParameters:explicitBaseURL:]
  -[CKDCodeLocalFunctionInvokeURLRequest setSerializedResultsCallback:]


CKDPCodeFunctionInvokeRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasServiceName
 @property  NSString *serviceName
 @property  BOOL hasFunctionName
 @property  NSString *functionName
 @property  BOOL hasSerializedParameters
 @property  NSData *serializedParameters
 @property  BOOL hasProtectedCloudComputeMetadata
 @property  CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata *protectedCloudComputeMetadata
 @property  BOOL hasAttestationRequest
 @property  CKDPCodeFunctionInvokeRequestAttestationRequest *attestationRequest

  // class methods
  +[CKDPCodeFunctionInvokeRequest options]

  // instance methods
  -[CKDPCodeFunctionInvokeRequest isEqual:]
  -[CKDPCodeFunctionInvokeRequest copyWithZone:]
  -[CKDPCodeFunctionInvokeRequest .cxx_destruct]
  -[CKDPCodeFunctionInvokeRequest dictionaryRepresentation]
  -[CKDPCodeFunctionInvokeRequest serviceName]
  -[CKDPCodeFunctionInvokeRequest writeTo:]
  -[CKDPCodeFunctionInvokeRequest mergeFrom:]
  -[CKDPCodeFunctionInvokeRequest readFrom:]
  -[CKDPCodeFunctionInvokeRequest copyTo:]
  -[CKDPCodeFunctionInvokeRequest setServiceName:]
  -[CKDPCodeFunctionInvokeRequest requestTypeCode]
  -[CKDPCodeFunctionInvokeRequest responseClass]
  -[CKDPCodeFunctionInvokeRequest functionName]
  -[CKDPCodeFunctionInvokeRequest setFunctionName:]
  -[CKDPCodeFunctionInvokeRequest hasServiceName]
  -[CKDPCodeFunctionInvokeRequest serializedParameters]
  -[CKDPCodeFunctionInvokeRequest setSerializedParameters:]
  -[CKDPCodeFunctionInvokeRequest setProtectedCloudComputeMetadata:]
  -[CKDPCodeFunctionInvokeRequest setAttestationRequest:]
  -[CKDPCodeFunctionInvokeRequest hasFunctionName]
  -[CKDPCodeFunctionInvokeRequest hasSerializedParameters]
  -[CKDPCodeFunctionInvokeRequest hasProtectedCloudComputeMetadata]
  -[CKDPCodeFunctionInvokeRequest hasAttestationRequest]
  -[CKDPCodeFunctionInvokeRequest protectedCloudComputeMetadata]
  -[CKDPCodeFunctionInvokeRequest attestationRequest]


CKDPZoneDeleteRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier
 @property  BOOL hasUserPurge
 @property  BOOL userPurge
 @property  BOOL hasLastMissingManateeIdentityErrorDate
 @property  CKDPDate *lastMissingManateeIdentityErrorDate

  // class methods
  +[CKDPZoneDeleteRequest options]

  // instance methods
  -[CKDPZoneDeleteRequest isEqual:]
  -[CKDPZoneDeleteRequest copyWithZone:]
  -[CKDPZoneDeleteRequest .cxx_destruct]
  -[CKDPZoneDeleteRequest dictionaryRepresentation]
  -[CKDPZoneDeleteRequest writeTo:]
  -[CKDPZoneDeleteRequest mergeFrom:]
  -[CKDPZoneDeleteRequest readFrom:]
  -[CKDPZoneDeleteRequest copyTo:]
  -[CKDPZoneDeleteRequest requestTypeCode]
  -[CKDPZoneDeleteRequest responseClass]
  -[CKDPZoneDeleteRequest setZoneIdentifier:]
  -[CKDPZoneDeleteRequest hasZoneIdentifier]
  -[CKDPZoneDeleteRequest zoneIdentifier]
  -[CKDPZoneDeleteRequest setLastMissingManateeIdentityErrorDate:]
  -[CKDPZoneDeleteRequest setUserPurge:]
  -[CKDPZoneDeleteRequest setHasUserPurge:]
  -[CKDPZoneDeleteRequest hasUserPurge]
  -[CKDPZoneDeleteRequest hasLastMissingManateeIdentityErrorDate]
  -[CKDPZoneDeleteRequest userPurge]
  -[CKDPZoneDeleteRequest lastMissingManateeIdentityErrorDate]


CKDPRecordFieldIdentifier : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasName
 @property  NSString *name

  // instance methods
  -[CKDPRecordFieldIdentifier isEqual:]
  -[CKDPRecordFieldIdentifier name]
  -[CKDPRecordFieldIdentifier copyWithZone:]
  -[CKDPRecordFieldIdentifier .cxx_destruct]
  -[CKDPRecordFieldIdentifier setName:]
  -[CKDPRecordFieldIdentifier dictionaryRepresentation]
  -[CKDPRecordFieldIdentifier writeTo:]
  -[CKDPRecordFieldIdentifier mergeFrom:]
  -[CKDPRecordFieldIdentifier readFrom:]
  -[CKDPRecordFieldIdentifier copyTo:]
  -[CKDPRecordFieldIdentifier hasName]
  -[CKDPRecordFieldIdentifier _CKLogToFileHandle:atDepth:]


CKDQueryURLRequest : CKDURLRequest <CKDURLRequestPipelining>
 @property  NSMutableArray *queryResponses
 @property  NSData *resultsCursor
 @property  NSMutableArray *recordResponses
 @property  CKQuery *query
 @property  NSData *cursor
 @property  unsigned long limit
 @property  CKRecordZoneID *zoneID
 @property  NSArray *requestedFields
 @property  BOOL shouldFetchAssetContent
 @property  NSSet *desiredAssetKeys
 @property  @? recordsParsedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDQueryURLRequest query]
  -[CKDQueryURLRequest .cxx_destruct]
  -[CKDQueryURLRequest cursor]
  -[CKDQueryURLRequest setQuery:]
  -[CKDQueryURLRequest operationType]
  -[CKDQueryURLRequest limit]
  -[CKDQueryURLRequest setLimit:]
  -[CKDQueryURLRequest zoneID]
  -[CKDQueryURLRequest setZoneID:]
  -[CKDQueryURLRequest setCursor:]
  -[CKDQueryURLRequest shouldFetchAssetContent]
  -[CKDQueryURLRequest setShouldFetchAssetContent:]
  -[CKDQueryURLRequest setResultsCursor:]
  -[CKDQueryURLRequest resultsCursor]
  -[CKDQueryURLRequest requestedFields]
  -[CKDQueryURLRequest setRequestedFields:]
  -[CKDQueryURLRequest initWithQuery:cursor:limit:requestedFields:zoneID:]
  -[CKDQueryURLRequest setDesiredAssetKeys:]
  -[CKDQueryURLRequest setRecordsParsedBlock:]
  -[CKDQueryURLRequest generateRequestOperations]
  -[CKDQueryURLRequest requestGETPreAuth]
  -[CKDQueryURLRequest requestDidParseProtobufObject:]
  -[CKDQueryURLRequest requestDidParseNodeFailure:]
  -[CKDQueryURLRequest requestOperationClasses]
  -[CKDQueryURLRequest allowsAnonymousAccount]
  -[CKDQueryURLRequest zoneIDsToLock]
  -[CKDQueryURLRequest requestDidComplete]
  -[CKDQueryURLRequest desiredAssetKeys]
  -[CKDQueryURLRequest recordsParsedBlock]
  -[CKDQueryURLRequest queryResponses]
  -[CKDQueryURLRequest setQueryResponses:]
  -[CKDQueryURLRequest recordResponses]
  -[CKDQueryURLRequest setRecordResponses:]


CKDOperationMetricsCache : CKSQLite /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  NSObject<OS_dispatch_queue> *cacheQueue

  // class methods
  +[CKDOperationMetricsCache sharedCache]
  +[CKDOperationMetricsCache dbFileName]

  // instance methods
  -[CKDOperationMetricsCache .cxx_destruct]
  -[CKDOperationMetricsCache cacheQueue]
  -[CKDOperationMetricsCache setCacheQueue:]
  -[CKDOperationMetricsCache flushMetricsToPowerLog]
  -[CKDOperationMetricsCache _initWithCacheDir:]
  -[CKDOperationMetricsCache addOperationCombinedMetrics:forOperationID:operationType:operationGroupID:operationGroupName:operationGroupQuantity:operationQualityOfService:appContainerTuple:]


CKPackageDownloadTask : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDCancelling>
 @property  NSError *error
 @property  CKPackage *package
 @property  CKAsset *manifestAsset
 @property  NSArray *sectionAssets
 @property  id itemIndices
 @property  NSIndexSet *sectionIndices
 @property  CKDProgressTracker *progressTracker
 @property  CKDMMCSRequestOptions *MMCSRequestOptions
 @property  NSObject<OS_dispatch_group> *group
 @property  CKDCancelTokenGroup *cancelTokens

  // instance methods
  -[CKPackageDownloadTask .cxx_destruct]
  -[CKPackageDownloadTask setGroup:]
  -[CKPackageDownloadTask error]
  -[CKPackageDownloadTask cancel]
  -[CKPackageDownloadTask setError:]
  -[CKPackageDownloadTask group]
  -[CKPackageDownloadTask package]
  -[CKPackageDownloadTask MMCSRequestOptions]
  -[CKPackageDownloadTask setMMCSRequestOptions:]
  -[CKPackageDownloadTask cancelTokens]
  -[CKPackageDownloadTask initWithPackage:trackProgress:]
  -[CKPackageDownloadTask setManifestAsset:]
  -[CKPackageDownloadTask setSectionAssets:]
  -[CKPackageDownloadTask manifestAsset]
  -[CKPackageDownloadTask sectionAssets]
  -[CKPackageDownloadTask itemIndices]
  -[CKPackageDownloadTask setItemIndices:]
  -[CKPackageDownloadTask sectionIndices]
  -[CKPackageDownloadTask setSectionIndices:]
  -[CKPackageDownloadTask progressTracker]
  -[CKPackageDownloadTask setProgressTracker:]
  -[CKPackageDownloadTask setCancelTokens:]


CKDDownloadAssetsOperation : CKDDatabaseOperation
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSArray *assetsToDownload
 @property  NSArray *packageIndexSets
 @property  NSArray *assetsToDownloadInMemory
 @property  NSArray *assetURLInfosToFillOut
 @property  NSMutableArray *MMCSItemsToDownload
 @property  NSMutableArray *MMCSItemsToDownloadInMemory
 @property  NSMapTable *downloadTasksByPackages
 @property  CKDCancelTokenGroup *cancelTokens
 @property  unsigned long maxPackageDownloadsPerBatch
 @property  @? downloadPreparationBlock
 @property  @? downloadProgressBlock
 @property  @? downloadCommandBlock
 @property  @? downloadCompletionBlock
 @property  @? urlFilledOutBlock
 @property  NSMutableDictionary *keyOrErrorForHostname

  // instance methods
  -[CKDDownloadAssetsOperation setQueue:]
  -[CKDDownloadAssetsOperation queue]
  -[CKDDownloadAssetsOperation .cxx_destruct]
  -[CKDDownloadAssetsOperation cancel]
  -[CKDDownloadAssetsOperation main]
  -[CKDDownloadAssetsOperation _finishOnCallbackQueueWithError:]
  -[CKDDownloadAssetsOperation activityCreate]
  -[CKDDownloadAssetsOperation downloadCompletionBlock]
  -[CKDDownloadAssetsOperation setDownloadCompletionBlock:]
  -[CKDDownloadAssetsOperation _download]
  -[CKDDownloadAssetsOperation setAssetsToDownload:]
  -[CKDDownloadAssetsOperation assetsToDownload]
  -[CKDDownloadAssetsOperation initWithOperationInfo:clientContext:]
  -[CKDDownloadAssetsOperation nameForState:]
  -[CKDDownloadAssetsOperation makeStateTransition]
  -[CKDDownloadAssetsOperation CKStatusReportLogGroups]
  -[CKDDownloadAssetsOperation cancelTokens]
  -[CKDDownloadAssetsOperation setCancelTokens:]
  -[CKDDownloadAssetsOperation packageIndexSets]
  -[CKDDownloadAssetsOperation assetsToDownloadInMemory]
  -[CKDDownloadAssetsOperation assetURLInfosToFillOut]
  -[CKDDownloadAssetsOperation MMCSItemsToDownload]
  -[CKDDownloadAssetsOperation _prepareForDownload]
  -[CKDDownloadAssetsOperation _postProcess]
  -[CKDDownloadAssetsOperation downloadPreparationBlock]
  -[CKDDownloadAssetsOperation downloadProgressBlock]
  -[CKDDownloadAssetsOperation downloadCommandBlock]
  -[CKDDownloadAssetsOperation keyOrErrorForHostname]
  -[CKDDownloadAssetsOperation _tryToFillInTheDerivativeTemplateWithAsset:]
  -[CKDDownloadAssetsOperation _didDownloadAsset:error:]
  -[CKDDownloadAssetsOperation _didPrepareAsset:]
  -[CKDDownloadAssetsOperation _didMakeProgressForAsset:progress:]
  -[CKDDownloadAssetsOperation _didCommandForAsset:command:]
  -[CKDDownloadAssetsOperation setMMCSItemsToDownloadInMemory:]
  -[CKDDownloadAssetsOperation setMMCSItemsToDownload:]
  -[CKDDownloadAssetsOperation setDownloadTasksByPackages:]
  -[CKDDownloadAssetsOperation _removeUntrackedMMCSItems:]
  -[CKDDownloadAssetsOperation downloadTasksByPackages]
  -[CKDDownloadAssetsOperation _collectMetricsFromMMCSOperationMetrics:]
  -[CKDDownloadAssetsOperation _didDownloadMMCSItem:inMemory:error:]
  -[CKDDownloadAssetsOperation _didDownloadMMCSSectionItem:task:error:]
  -[CKDDownloadAssetsOperation _didMakeProgressForMMCSSectionItem:task:]
  -[CKDDownloadAssetsOperation _collectMetricsFromCompletedItemGroup:]
  -[CKDDownloadAssetsOperation _didDownloadMMCSSectionItems:task:error:]
  -[CKDDownloadAssetsOperation _downloadPackageSectionsWithSectionEnumerator:task:completionBlock:]
  -[CKDDownloadAssetsOperation _downloadPackageSectionAtIndex:task:completionBlock:]
  -[CKDDownloadAssetsOperation maxPackageDownloadsPerBatch]
  -[CKDDownloadAssetsOperation _downloadPackageSectionsWithPendingTasks:downloadingTasks:completedTasks:]
  -[CKDDownloadAssetsOperation _downloadPackageSectionsWithTask:completionBlock:]
  -[CKDDownloadAssetsOperation MMCSItemsToDownloadInMemory]
  -[CKDDownloadAssetsOperation _downloadMMCSItems:downloadTasksByPackages:shouldFetchAssetContentInMemory:]
  -[CKDDownloadAssetsOperation setMaxPackageDownloadsPerBatch:]
  -[CKDDownloadAssetsOperation _didMakeProgressForMMCSItem:inMemory:]
  -[CKDDownloadAssetsOperation _collectMetricsFromCompletedItemGroupSet:]
  -[CKDDownloadAssetsOperation _didDownloadMMCSItems:inMemory:error:]
  -[CKDDownloadAssetsOperation urlFilledOutBlock]
  -[CKDDownloadAssetsOperation setDownloadPreparationBlock:]
  -[CKDDownloadAssetsOperation setDownloadProgressBlock:]
  -[CKDDownloadAssetsOperation setDownloadCommandBlock:]
  -[CKDDownloadAssetsOperation setUrlFilledOutBlock:]
  -[CKDDownloadAssetsOperation _didCommandForMMCSItem:command:]
  -[CKDDownloadAssetsOperation setKeyOrErrorForHostname:]
  -[CKDDownloadAssetsOperation setPackageIndexSets:]
  -[CKDDownloadAssetsOperation setAssetsToDownloadInMemory:]
  -[CKDDownloadAssetsOperation setAssetURLInfosToFillOut:]


CKDOperationStatistics : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  NSString *operationClassName
 @property  NSMutableDictionary *recentErrorsByDate
 @property  unsigned long operationCount
 @property  CKDOperationMetrics *aggregateCKMetrics
 @property  CKDOperationMetrics *aggregateMMCSMetrics

  // instance methods
  -[CKDOperationStatistics copyWithZone:]
  -[CKDOperationStatistics addOperation:]
  -[CKDOperationStatistics .cxx_destruct]
  -[CKDOperationStatistics operationCount]
  -[CKDOperationStatistics merge:]
  -[CKDOperationStatistics CKStatusReportArray]
  -[CKDOperationStatistics initWithOperationClassName:]
  -[CKDOperationStatistics operationClassName]
  -[CKDOperationStatistics recentErrorsByDate]
  -[CKDOperationStatistics aggregateCKMetrics]
  -[CKDOperationStatistics aggregateMMCSMetrics]
  -[CKDOperationStatistics _trimmedError:]
  -[CKDOperationStatistics _addMetrics:toAggregate:]


CKDPFieldActionReplaceListRange : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRange
 @property  CKDPListRange *range
 @property  NSMutableArray *values

  // class methods
  +[CKDPFieldActionReplaceListRange valueType]

  // instance methods
  -[CKDPFieldActionReplaceListRange isEqual:]
  -[CKDPFieldActionReplaceListRange copyWithZone:]
  -[CKDPFieldActionReplaceListRange setValues:]
  -[CKDPFieldActionReplaceListRange values]
  -[CKDPFieldActionReplaceListRange .cxx_destruct]
  -[CKDPFieldActionReplaceListRange dictionaryRepresentation]
  -[CKDPFieldActionReplaceListRange range]
  -[CKDPFieldActionReplaceListRange writeTo:]
  -[CKDPFieldActionReplaceListRange valueAtIndex:]
  -[CKDPFieldActionReplaceListRange mergeFrom:]
  -[CKDPFieldActionReplaceListRange readFrom:]
  -[CKDPFieldActionReplaceListRange copyTo:]
  -[CKDPFieldActionReplaceListRange addValue:]
  -[CKDPFieldActionReplaceListRange valuesCount]
  -[CKDPFieldActionReplaceListRange clearValues]
  -[CKDPFieldActionReplaceListRange setRange:]
  -[CKDPFieldActionReplaceListRange hasRange]


CKDFetchUserQuotaOperation : CKDDatabaseOperation
 @property  unsigned long quotaAvailable

  // instance methods
  -[CKDFetchUserQuotaOperation main]
  -[CKDFetchUserQuotaOperation activityCreate]
  -[CKDFetchUserQuotaOperation quotaAvailable]
  -[CKDFetchUserQuotaOperation setQuotaAvailable:]
  -[CKDFetchUserQuotaOperation initWithOperationInfo:clientContext:]
  -[CKDFetchUserQuotaOperation operationResultClass]
  -[CKDFetchUserQuotaOperation fillOutOperationResult:]


CKDPRecordResolveTokenRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRoutingKey
 @property  NSString *routingKey
 @property  BOOL hasShortTokenHash
 @property  NSData *shortTokenHash
 @property  BOOL hasForceFetch
 @property  BOOL forceFetch
 @property  BOOL hasShouldFetchRootRecord
 @property  BOOL shouldFetchRootRecord
 @property  NSMutableArray *rootRecordDesiredKeys

  // class methods
  +[CKDPRecordResolveTokenRequest options]
  +[CKDPRecordResolveTokenRequest rootRecordDesiredKeysType]

  // instance methods
  -[CKDPRecordResolveTokenRequest isEqual:]
  -[CKDPRecordResolveTokenRequest copyWithZone:]
  -[CKDPRecordResolveTokenRequest .cxx_destruct]
  -[CKDPRecordResolveTokenRequest dictionaryRepresentation]
  -[CKDPRecordResolveTokenRequest writeTo:]
  -[CKDPRecordResolveTokenRequest mergeFrom:]
  -[CKDPRecordResolveTokenRequest readFrom:]
  -[CKDPRecordResolveTokenRequest copyTo:]
  -[CKDPRecordResolveTokenRequest requestTypeCode]
  -[CKDPRecordResolveTokenRequest responseClass]
  -[CKDPRecordResolveTokenRequest shouldFetchRootRecord]
  -[CKDPRecordResolveTokenRequest setShouldFetchRootRecord:]
  -[CKDPRecordResolveTokenRequest rootRecordDesiredKeys]
  -[CKDPRecordResolveTokenRequest setRootRecordDesiredKeys:]
  -[CKDPRecordResolveTokenRequest routingKey]
  -[CKDPRecordResolveTokenRequest setRoutingKey:]
  -[CKDPRecordResolveTokenRequest addRootRecordDesiredKeys:]
  -[CKDPRecordResolveTokenRequest setShortTokenHash:]
  -[CKDPRecordResolveTokenRequest rootRecordDesiredKeysCount]
  -[CKDPRecordResolveTokenRequest clearRootRecordDesiredKeys]
  -[CKDPRecordResolveTokenRequest rootRecordDesiredKeysAtIndex:]
  -[CKDPRecordResolveTokenRequest hasRoutingKey]
  -[CKDPRecordResolveTokenRequest hasShortTokenHash]
  -[CKDPRecordResolveTokenRequest setForceFetch:]
  -[CKDPRecordResolveTokenRequest setHasForceFetch:]
  -[CKDPRecordResolveTokenRequest hasForceFetch]
  -[CKDPRecordResolveTokenRequest setHasShouldFetchRootRecord:]
  -[CKDPRecordResolveTokenRequest hasShouldFetchRootRecord]
  -[CKDPRecordResolveTokenRequest shortTokenHash]
  -[CKDPRecordResolveTokenRequest forceFetch]


CKDAssetZone : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableOrderedSet *assetRecords
 @property  NSMutableDictionary *assetRecordsByRecordID
 @property  CKDAssetZoneKey *assetZoneKey

  // instance methods
  -[CKDAssetZone .cxx_destruct]
  -[CKDAssetZone CKPropertiesDescription]
  -[CKDAssetZone assetRecords]
  -[CKDAssetZone addMMCSItem:]
  -[CKDAssetZone addRereferencedMMCSItem:]
  -[CKDAssetZone addMMCSSectionItem:]
  -[CKDAssetZone assetZoneKey]
  -[CKDAssetZone initWithAssetZoneKey:]
  -[CKDAssetZone setAssetZoneKey:]
  -[CKDAssetZone setAssetRecords:]
  -[CKDAssetZone assetRecordsByRecordID]
  -[CKDAssetZone setAssetRecordsByRecordID:]


CKDPAssetUploadTokenRetrieveRequestHeaderInfo : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSString *headerKey
 @property  NSString *headerValue

  // instance methods
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo isEqual:]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo copyWithZone:]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo .cxx_destruct]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo dictionaryRepresentation]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo writeTo:]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo mergeFrom:]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo readFrom:]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo copyTo:]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo setHeaderKey:]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo setHeaderValue:]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo headerKey]
  -[CKDPAssetUploadTokenRetrieveRequestHeaderInfo headerValue]


CKDTapToRadarRequest : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *message
 @property  NSString *uuid
 @property  NSString *componentName
 @property  NSString *componentVersion
 @property  NSString *componentID
 @property  NSString *relatedRadar

  // instance methods
  -[CKDTapToRadarRequest .cxx_destruct]
  -[CKDTapToRadarRequest uuid]
  -[CKDTapToRadarRequest setUuid:]
  -[CKDTapToRadarRequest message]
  -[CKDTapToRadarRequest setMessage:]
  -[CKDTapToRadarRequest componentName]
  -[CKDTapToRadarRequest componentVersion]
  -[CKDTapToRadarRequest componentID]
  -[CKDTapToRadarRequest setComponentID:]
  -[CKDTapToRadarRequest setComponentName:]
  -[CKDTapToRadarRequest setComponentVersion:]
  -[CKDTapToRadarRequest setRelatedRadar:]
  -[CKDTapToRadarRequest relatedRadar]


CKDTapToRadarManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_dispatch_queue> *alertQueue
 @property  NSUserDefaults *userDefaults
 @property  NSMutableDictionary *lastPromptDateByMessageHash

  // class methods
  +[CKDTapToRadarManager sharedManager]

  // instance methods
  -[CKDTapToRadarManager init]
  -[CKDTapToRadarManager .cxx_destruct]
  -[CKDTapToRadarManager _init]
  -[CKDTapToRadarManager userDefaults]
  -[CKDTapToRadarManager setUserDefaults:]
  -[CKDTapToRadarManager triggerTapToRadarWithRequest:]
  -[CKDTapToRadarManager alertQueue]
  -[CKDTapToRadarManager lastPromptDateByMessageHash]
  -[CKDTapToRadarManager _hashForMessage:]
  -[CKDTapToRadarManager _lastPromptDateForMessage:]
  -[CKDTapToRadarManager _notePromptAttemptForMessage:]
  -[CKDTapToRadarManager _launchTTRWithRequest:]
  -[CKDTapToRadarManager _lockedTriggerTapToRadarWithRequest:]
  -[CKDTapToRadarManager setAlertQueue:]
  -[CKDTapToRadarManager setLastPromptDateByMessageHash:]


CKDPUpdateMissingAssetStatusResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPUpdateMissingAssetStatusResponse isEqual:]
  -[CKDPUpdateMissingAssetStatusResponse copyWithZone:]
  -[CKDPUpdateMissingAssetStatusResponse dictionaryRepresentation]
  -[CKDPUpdateMissingAssetStatusResponse writeTo:]
  -[CKDPUpdateMissingAssetStatusResponse mergeFrom:]
  -[CKDPUpdateMissingAssetStatusResponse readFrom:]
  -[CKDPUpdateMissingAssetStatusResponse copyTo:]


CKDSystemAvailabilityWatcherWrapper : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  <CKDSystemAvailabilityWatcher> *delegate
 @property  NSString *personaID

  // instance methods
  -[CKDSystemAvailabilityWatcherWrapper isEqual:]
  -[CKDSystemAvailabilityWatcherWrapper delegate]
  -[CKDSystemAvailabilityWatcherWrapper setDelegate:]
  -[CKDSystemAvailabilityWatcherWrapper .cxx_destruct]
  -[CKDSystemAvailabilityWatcherWrapper initWithDelegate:]
  -[CKDSystemAvailabilityWatcherWrapper personaID]
  -[CKDSystemAvailabilityWatcherWrapper setPersonaID:]
  -[CKDSystemAvailabilityWatcherWrapper performWithDelegate:]


CKDSystemAvailabilityMonitor : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableSet *watcherWrappers
 @property  NSObject<OS_dispatch_queue> *availabilityQueue
 @property  unsigned long availabilityState
 @property  BOOL systemIsAvailable

  // class methods
  +[CKDSystemAvailabilityMonitor sharedMonitor]

  // instance methods
  -[CKDSystemAvailabilityMonitor init]
  -[CKDSystemAvailabilityMonitor dealloc]
  -[CKDSystemAvailabilityMonitor .cxx_destruct]
  -[CKDSystemAvailabilityMonitor _init]
  -[CKDSystemAvailabilityMonitor availabilityState]
  -[CKDSystemAvailabilityMonitor registerWatcher:]
  -[CKDSystemAvailabilityMonitor unregisterWatcher:]
  -[CKDSystemAvailabilityMonitor _systemMayNowBeReady]
  -[CKDSystemAvailabilityMonitor availabilityQueue]
  -[CKDSystemAvailabilityMonitor watcherWrappers]
  -[CKDSystemAvailabilityMonitor setAvailabilityState:]
  -[CKDSystemAvailabilityMonitor _notifyWatchersOfStateChange]
  -[CKDSystemAvailabilityMonitor systemIsAvailable]
  -[CKDSystemAvailabilityMonitor setWatcherWrappers:]
  -[CKDSystemAvailabilityMonitor setAvailabilityQueue:]


CKDInitiateParticipantVettingURLRequest : CKDURLRequest
 @property  CKRecordID *shareRecordID
 @property  NSData *encryptedKey
 @property  NSString *participantID
 @property  NSString *baseToken
 @property  @? vettingInitiationRequestCompletionBlock

  // instance methods
  -[CKDInitiateParticipantVettingURLRequest .cxx_destruct]
  -[CKDInitiateParticipantVettingURLRequest operationType]
  -[CKDInitiateParticipantVettingURLRequest participantID]
  -[CKDInitiateParticipantVettingURLRequest setParticipantID:]
  -[CKDInitiateParticipantVettingURLRequest baseToken]
  -[CKDInitiateParticipantVettingURLRequest setBaseToken:]
  -[CKDInitiateParticipantVettingURLRequest shareRecordID]
  -[CKDInitiateParticipantVettingURLRequest setShareRecordID:]
  -[CKDInitiateParticipantVettingURLRequest encryptedKey]
  -[CKDInitiateParticipantVettingURLRequest setEncryptedKey:]
  -[CKDInitiateParticipantVettingURLRequest generateRequestOperations]
  -[CKDInitiateParticipantVettingURLRequest requestDidParseProtobufObject:]
  -[CKDInitiateParticipantVettingURLRequest requestDidParseNodeFailure:]
  -[CKDInitiateParticipantVettingURLRequest requestOperationClasses]
  -[CKDInitiateParticipantVettingURLRequest vettingInitiationRequestCompletionBlock]
  -[CKDInitiateParticipantVettingURLRequest initWithShareRecordID:encryptedKey:participantID:baseToken:]
  -[CKDInitiateParticipantVettingURLRequest setVettingInitiationRequestCompletionBlock:]


CKDPushConnection : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  APSConnection *apsConnection
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableArray *completionBlocks
 @property  NSString *apsEnvironmentString

  // class methods
  +[CKDPushConnection sharedConnectionForAPSEnvironmentString:]

  // instance methods
  -[CKDPushConnection dealloc]
  -[CKDPushConnection setQueue:]
  -[CKDPushConnection queue]
  -[CKDPushConnection .cxx_destruct]
  -[CKDPushConnection connection:didReceivePublicToken:]
  -[CKDPushConnection connection:didChangeConnectedStatus:]
  -[CKDPushConnection connectionDidReconnect:]
  -[CKDPushConnection initWithEnvironment:]
  -[CKDPushConnection completionBlocks]
  -[CKDPushConnection setCompletionBlocks:]
  -[CKDPushConnection apsConnection]
  -[CKDPushConnection setApsConnection:]
  -[CKDPushConnection setAPSEnvironmentString:]
  -[CKDPushConnection apsEnvironmentString]
  -[CKDPushConnection getToken:]


CKCDPCodeServiceRequestProtectedCloudComputeMetadata : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *cryptoSessions

  // class methods
  +[CKCDPCodeServiceRequestProtectedCloudComputeMetadata cryptoSessionsType]

  // instance methods
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata isEqual:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata copyWithZone:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata .cxx_destruct]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata dictionaryRepresentation]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata writeTo:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata mergeFrom:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata readFrom:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata copyTo:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata addCryptoSessions:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata cryptoSessionsCount]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata clearCryptoSessions]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata cryptoSessionsAtIndex:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata cryptoSessions]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadata setCryptoSessions:]


CKDContainerSpecificInfoURLRequest : CKDURLRequest
 @property  CKDContainerInfo *containerInfo
 @property  BOOL requireUserIDs
 @property  NSString *containerIdentifier

  // instance methods
  -[CKDContainerSpecificInfoURLRequest .cxx_destruct]
  -[CKDContainerSpecificInfoURLRequest url]
  -[CKDContainerSpecificInfoURLRequest containerIdentifier]
  -[CKDContainerSpecificInfoURLRequest partitionType]
  -[CKDContainerSpecificInfoURLRequest setContainerIdentifier:]
  -[CKDContainerSpecificInfoURLRequest initWithContainerIdentifier:]
  -[CKDContainerSpecificInfoURLRequest usesiCloudAuthToken]
  -[CKDContainerSpecificInfoURLRequest usesCloudKitAuthToken]
  -[CKDContainerSpecificInfoURLRequest requestDidParseJSONObject:]
  -[CKDContainerSpecificInfoURLRequest serverType]
  -[CKDContainerSpecificInfoURLRequest allowsAnonymousAccount]
  -[CKDContainerSpecificInfoURLRequest requiresConfiguration]
  -[CKDContainerSpecificInfoURLRequest allowsAuthedAccount]
  -[CKDContainerSpecificInfoURLRequest requiresDeviceID]
  -[CKDContainerSpecificInfoURLRequest hasRequestBody]
  -[CKDContainerSpecificInfoURLRequest requireUserIDs]
  -[CKDContainerSpecificInfoURLRequest setContainerInfo:]
  -[CKDContainerSpecificInfoURLRequest containerInfo]
  -[CKDContainerSpecificInfoURLRequest setRequireUserIDs:]


CKDPStreamingAssetSaveAssetResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasReservedSize
 @property  long long reservedSize
 @property  BOOL hasUploadURL
 @property  NSString *uploadURL
 @property  BOOL hasUploadURLExpirationTimeSeconds
 @property  long long uploadURLExpirationTimeSeconds

  // instance methods
  -[CKDPStreamingAssetSaveAssetResponse isEqual:]
  -[CKDPStreamingAssetSaveAssetResponse copyWithZone:]
  -[CKDPStreamingAssetSaveAssetResponse .cxx_destruct]
  -[CKDPStreamingAssetSaveAssetResponse dictionaryRepresentation]
  -[CKDPStreamingAssetSaveAssetResponse writeTo:]
  -[CKDPStreamingAssetSaveAssetResponse mergeFrom:]
  -[CKDPStreamingAssetSaveAssetResponse readFrom:]
  -[CKDPStreamingAssetSaveAssetResponse copyTo:]
  -[CKDPStreamingAssetSaveAssetResponse setUploadURL:]
  -[CKDPStreamingAssetSaveAssetResponse uploadURL]
  -[CKDPStreamingAssetSaveAssetResponse reservedSize]
  -[CKDPStreamingAssetSaveAssetResponse setReservedSize:]
  -[CKDPStreamingAssetSaveAssetResponse setHasReservedSize:]
  -[CKDPStreamingAssetSaveAssetResponse hasReservedSize]
  -[CKDPStreamingAssetSaveAssetResponse hasUploadURL]
  -[CKDPStreamingAssetSaveAssetResponse setUploadURLExpirationTimeSeconds:]
  -[CKDPStreamingAssetSaveAssetResponse setHasUploadURLExpirationTimeSeconds:]
  -[CKDPStreamingAssetSaveAssetResponse hasUploadURLExpirationTimeSeconds]
  -[CKDPStreamingAssetSaveAssetResponse uploadURLExpirationTimeSeconds]


CKDModifyRecordZonesOperation : CKDDatabaseOperation
 @property  NSMutableArray *recordZonesToSave
 @property  NSArray *recordZoneIDsToDelete
 @property  NSMutableDictionary *recordZonesByZoneID
 @property  NSMutableDictionary *retryableErrorsByZoneID
 @property  BOOL allowDefaultZoneSave
 @property  BOOL markZonesAsUserPurged
 @property  int numZoneSaveAttempts
 @property  long long maxZoneSaveAttempts
 @property  BOOL dontFetchFromServer
 @property  BOOL didSynchronizeUserKeyRegistry
 @property  NSMutableArray *zonesWaitingOnKeyRegistrySync
 @property  @? saveCompletionBlock
 @property  @? deleteCompletionBlock

  // class methods
  +[CKDModifyRecordZonesOperation isPredominatelyDownload]

  // instance methods
  -[CKDModifyRecordZonesOperation .cxx_destruct]
  -[CKDModifyRecordZonesOperation main]
  -[CKDModifyRecordZonesOperation setMarkZonesAsUserPurged:]
  -[CKDModifyRecordZonesOperation _finishOnCallbackQueueWithError:]
  -[CKDModifyRecordZonesOperation activityCreate]
  -[CKDModifyRecordZonesOperation recordZonesToSave]
  -[CKDModifyRecordZonesOperation setRecordZonesToSave:]
  -[CKDModifyRecordZonesOperation recordZoneIDsToDelete]
  -[CKDModifyRecordZonesOperation setRecordZoneIDsToDelete:]
  -[CKDModifyRecordZonesOperation markZonesAsUserPurged]
  -[CKDModifyRecordZonesOperation maxZoneSaveAttempts]
  -[CKDModifyRecordZonesOperation dontFetchFromServer]
  -[CKDModifyRecordZonesOperation allowDefaultZoneSave]
  -[CKDModifyRecordZonesOperation setAllowDefaultZoneSave:]
  -[CKDModifyRecordZonesOperation setMaxZoneSaveAttempts:]
  -[CKDModifyRecordZonesOperation setDontFetchFromServer:]
  -[CKDModifyRecordZonesOperation recordZonesByZoneID]
  -[CKDModifyRecordZonesOperation setRecordZonesByZoneID:]
  -[CKDModifyRecordZonesOperation saveCompletionBlock]
  -[CKDModifyRecordZonesOperation initWithOperationInfo:clientContext:]
  -[CKDModifyRecordZonesOperation setSaveCompletionBlock:]
  -[CKDModifyRecordZonesOperation setDeleteCompletionBlock:]
  -[CKDModifyRecordZonesOperation nameForState:]
  -[CKDModifyRecordZonesOperation makeStateTransition]
  -[CKDModifyRecordZonesOperation _fetchPCSDataForZonesFromServer:]
  -[CKDModifyRecordZonesOperation numZoneSaveAttempts]
  -[CKDModifyRecordZonesOperation setNumZoneSaveAttempts:]
  -[CKDModifyRecordZonesOperation _saveZonesToServer]
  -[CKDModifyRecordZonesOperation _sychronizeUserKeyRegistryIfNeeded]
  -[CKDModifyRecordZonesOperation zonesWaitingOnKeyRegistrySync]
  -[CKDModifyRecordZonesOperation _sendErrorForFailedZones]
  -[CKDModifyRecordZonesOperation setDidSynchronizeUserKeyRegistry:]
  -[CKDModifyRecordZonesOperation retryableErrorsByZoneID]
  -[CKDModifyRecordZonesOperation didSynchronizeUserKeyRegistry]
  -[CKDModifyRecordZonesOperation deleteCompletionBlock]
  -[CKDModifyRecordZonesOperation _handleRecordZoneSaved:responseCode:serverCapabilities:]
  -[CKDModifyRecordZonesOperation _handleRecordZoneDeleted:responseCode:]
  -[CKDModifyRecordZonesOperation _createNewPCSForZone:completionHandler:]
  -[CKDModifyRecordZonesOperation _fetchPCSDataForZone:fromServer:]
  -[CKDModifyRecordZonesOperation _checkAndPrepareZones]
  -[CKDModifyRecordZonesOperation setRetryableErrorsByZoneID:]
  -[CKDModifyRecordZonesOperation setZonesWaitingOnKeyRegistrySync:]


CKDPZone : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier
 @property  BOOL hasProtectionInfo
 @property  CKDPProtectionInfo *protectionInfo
 @property  BOOL hasRecordProtectionInfo
 @property  CKDPProtectionInfo *recordProtectionInfo
 @property  BOOL hasEncryptedZoneishLastRollDate
 @property  NSData *encryptedZoneishLastRollDate
 @property  BOOL hasStableUrl
 @property  CKDPRecordStableUrl *stableUrl
 @property  BOOL hasShareId
 @property  CKDPShareIdentifier *shareId
 @property  NSMutableArray *protectionInfoKeysToRemoves

  // class methods
  +[CKDPZone protectionInfoKeysToRemoveType]

  // instance methods
  -[CKDPZone isEqual:]
  -[CKDPZone copyWithZone:]
  -[CKDPZone .cxx_destruct]
  -[CKDPZone dictionaryRepresentation]
  -[CKDPZone writeTo:]
  -[CKDPZone mergeFrom:]
  -[CKDPZone readFrom:]
  -[CKDPZone copyTo:]
  -[CKDPZone setRecordProtectionInfo:]
  -[CKDPZone hasRecordProtectionInfo]
  -[CKDPZone recordProtectionInfo]
  -[CKDPZone setZoneIdentifier:]
  -[CKDPZone hasZoneIdentifier]
  -[CKDPZone zoneIdentifier]
  -[CKDPZone protectionInfo]
  -[CKDPZone setProtectionInfo:]
  -[CKDPZone hasProtectionInfo]
  -[CKDPZone setShareId:]
  -[CKDPZone addProtectionInfoKeysToRemove:]
  -[CKDPZone setEncryptedZoneishLastRollDate:]
  -[CKDPZone setStableUrl:]
  -[CKDPZone protectionInfoKeysToRemovesCount]
  -[CKDPZone clearProtectionInfoKeysToRemoves]
  -[CKDPZone protectionInfoKeysToRemoveAtIndex:]
  -[CKDPZone hasEncryptedZoneishLastRollDate]
  -[CKDPZone hasStableUrl]
  -[CKDPZone hasShareId]
  -[CKDPZone encryptedZoneishLastRollDate]
  -[CKDPZone stableUrl]
  -[CKDPZone shareId]
  -[CKDPZone protectionInfoKeysToRemoves]
  -[CKDPZone setProtectionInfoKeysToRemoves:]


CKDVolumeManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CKDVolumeManager _volumeForDisk:mountToPath:error:]
  +[CKDVolumeManager createVolumeForDevice:error:]
  +[CKDVolumeManager existingVolumeForDevice:]
  +[CKDVolumeManager invalidateVolume:]
  +[CKDVolumeManager startVolumes]
  +[CKDVolumeManager shutdownVolumes]
  +[CKDVolumeManager deviceIDForVolumeUUID:]
  +[CKDVolumeManager volumeUUIDForDeviceID:]


CKDPRequestedListField : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasFieldId
 @property  CKDPRecordFieldIdentifier *fieldId
 @property  NSMutableArray *ranges

  // class methods
  +[CKDPRequestedListField rangeType]

  // instance methods
  -[CKDPRequestedListField isEqual:]
  -[CKDPRequestedListField copyWithZone:]
  -[CKDPRequestedListField rangeAtIndex:]
  -[CKDPRequestedListField .cxx_destruct]
  -[CKDPRequestedListField dictionaryRepresentation]
  -[CKDPRequestedListField writeTo:]
  -[CKDPRequestedListField mergeFrom:]
  -[CKDPRequestedListField readFrom:]
  -[CKDPRequestedListField copyTo:]
  -[CKDPRequestedListField addRange:]
  -[CKDPRequestedListField setRanges:]
  -[CKDPRequestedListField ranges]
  -[CKDPRequestedListField fieldId]
  -[CKDPRequestedListField setFieldId:]
  -[CKDPRequestedListField rangesCount]
  -[CKDPRequestedListField clearRanges]
  -[CKDPRequestedListField hasFieldId]


CKCDPCodeServiceRequestAccountConfig : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasCorporateSharingEnabled
 @property  BOOL corporateSharingEnabled
 @property  BOOL hasLastWebActivityUTCMills
 @property  long long lastWebActivityUTCMills

  // instance methods
  -[CKCDPCodeServiceRequestAccountConfig isEqual:]
  -[CKCDPCodeServiceRequestAccountConfig copyWithZone:]
  -[CKCDPCodeServiceRequestAccountConfig dictionaryRepresentation]
  -[CKCDPCodeServiceRequestAccountConfig writeTo:]
  -[CKCDPCodeServiceRequestAccountConfig mergeFrom:]
  -[CKCDPCodeServiceRequestAccountConfig readFrom:]
  -[CKCDPCodeServiceRequestAccountConfig copyTo:]
  -[CKCDPCodeServiceRequestAccountConfig setCorporateSharingEnabled:]
  -[CKCDPCodeServiceRequestAccountConfig setHasCorporateSharingEnabled:]
  -[CKCDPCodeServiceRequestAccountConfig hasCorporateSharingEnabled]
  -[CKCDPCodeServiceRequestAccountConfig setLastWebActivityUTCMills:]
  -[CKCDPCodeServiceRequestAccountConfig setHasLastWebActivityUTCMills:]
  -[CKCDPCodeServiceRequestAccountConfig hasLastWebActivityUTCMills]
  -[CKCDPCodeServiceRequestAccountConfig corporateSharingEnabled]
  -[CKCDPCodeServiceRequestAccountConfig lastWebActivityUTCMills]


CKDPResponseOperationResultErrorAuxiliaryError : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasDomain
 @property  NSString *domain
 @property  BOOL hasCode
 @property  int code
 @property  NSMutableArray *userInfos

  // class methods
  +[CKDPResponseOperationResultErrorAuxiliaryError userInfoType]

  // instance methods
  -[CKDPResponseOperationResultErrorAuxiliaryError isEqual:]
  -[CKDPResponseOperationResultErrorAuxiliaryError copyWithZone:]
  -[CKDPResponseOperationResultErrorAuxiliaryError domain]
  -[CKDPResponseOperationResultErrorAuxiliaryError code]
  -[CKDPResponseOperationResultErrorAuxiliaryError .cxx_destruct]
  -[CKDPResponseOperationResultErrorAuxiliaryError dictionaryRepresentation]
  -[CKDPResponseOperationResultErrorAuxiliaryError writeTo:]
  -[CKDPResponseOperationResultErrorAuxiliaryError mergeFrom:]
  -[CKDPResponseOperationResultErrorAuxiliaryError readFrom:]
  -[CKDPResponseOperationResultErrorAuxiliaryError copyTo:]
  -[CKDPResponseOperationResultErrorAuxiliaryError setDomain:]
  -[CKDPResponseOperationResultErrorAuxiliaryError hasDomain]
  -[CKDPResponseOperationResultErrorAuxiliaryError setCode:]
  -[CKDPResponseOperationResultErrorAuxiliaryError addUserInfo:]
  -[CKDPResponseOperationResultErrorAuxiliaryError userInfos]
  -[CKDPResponseOperationResultErrorAuxiliaryError userInfoAtIndex:]
  -[CKDPResponseOperationResultErrorAuxiliaryError setUserInfos:]
  -[CKDPResponseOperationResultErrorAuxiliaryError userInfosCount]
  -[CKDPResponseOperationResultErrorAuxiliaryError clearUserInfos]
  -[CKDPResponseOperationResultErrorAuxiliaryError hasCode]
  -[CKDPResponseOperationResultErrorAuxiliaryError setHasCode:]


CKDPAssetUploadTokenRetrieveResponseUploadToken : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasToken
 @property  NSString *token
 @property  BOOL hasAsset
 @property  CKDPAsset *asset
 @property  BOOL hasTokenExpiration
 @property  long long tokenExpiration

  // instance methods
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken isEqual:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken copyWithZone:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken token]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken .cxx_destruct]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken dictionaryRepresentation]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken writeTo:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken mergeFrom:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken readFrom:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken copyTo:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken asset]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken setAsset:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken setToken:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken hasToken]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken hasAsset]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken tokenExpiration]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken setTokenExpiration:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken setHasTokenExpiration:]
  -[CKDPAssetUploadTokenRetrieveResponseUploadToken hasTokenExpiration]


CKDPFieldActionInsertIntoList : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasPosition
 @property  CKDPListPosition *position
 @property  BOOL hasInsertAfter
 @property  BOOL insertAfter
 @property  NSMutableArray *values

  // class methods
  +[CKDPFieldActionInsertIntoList valueType]

  // instance methods
  -[CKDPFieldActionInsertIntoList isEqual:]
  -[CKDPFieldActionInsertIntoList copyWithZone:]
  -[CKDPFieldActionInsertIntoList setValues:]
  -[CKDPFieldActionInsertIntoList values]
  -[CKDPFieldActionInsertIntoList .cxx_destruct]
  -[CKDPFieldActionInsertIntoList dictionaryRepresentation]
  -[CKDPFieldActionInsertIntoList position]
  -[CKDPFieldActionInsertIntoList writeTo:]
  -[CKDPFieldActionInsertIntoList valueAtIndex:]
  -[CKDPFieldActionInsertIntoList mergeFrom:]
  -[CKDPFieldActionInsertIntoList readFrom:]
  -[CKDPFieldActionInsertIntoList copyTo:]
  -[CKDPFieldActionInsertIntoList addValue:]
  -[CKDPFieldActionInsertIntoList setPosition:]
  -[CKDPFieldActionInsertIntoList valuesCount]
  -[CKDPFieldActionInsertIntoList clearValues]
  -[CKDPFieldActionInsertIntoList hasPosition]
  -[CKDPFieldActionInsertIntoList setInsertAfter:]
  -[CKDPFieldActionInsertIntoList setHasInsertAfter:]
  -[CKDPFieldActionInsertIntoList hasInsertAfter]
  -[CKDPFieldActionInsertIntoList insertAfter]


CKDRecordResolveTokenURLRequest : CKDURLRequest
 @property  NSArray *lookupInfos
 @property  NSMutableDictionary *lookupInfosByRequestID
 @property  NSSet *rootRecordDesiredKeySet
 @property  BOOL shouldFetchRootRecord
 @property  @? tokenResolveBlock

  // instance methods
  -[CKDRecordResolveTokenURLRequest .cxx_destruct]
  -[CKDRecordResolveTokenURLRequest operationType]
  -[CKDRecordResolveTokenURLRequest sourceApplicationBundleIdentifier]
  -[CKDRecordResolveTokenURLRequest shouldFetchRootRecord]
  -[CKDRecordResolveTokenURLRequest setShouldFetchRootRecord:]
  -[CKDRecordResolveTokenURLRequest generateRequestOperations]
  -[CKDRecordResolveTokenURLRequest requestDidParseProtobufObject:]
  -[CKDRecordResolveTokenURLRequest requestDidParseNodeFailure:]
  -[CKDRecordResolveTokenURLRequest requestOperationClasses]
  -[CKDRecordResolveTokenURLRequest initWithShortTokenLookupInfos:]
  -[CKDRecordResolveTokenURLRequest setRootRecordDesiredKeySet:]
  -[CKDRecordResolveTokenURLRequest setTokenResolveBlock:]
  -[CKDRecordResolveTokenURLRequest lookupInfos]
  -[CKDRecordResolveTokenURLRequest rootRecordDesiredKeySet]
  -[CKDRecordResolveTokenURLRequest lookupInfosByRequestID]
  -[CKDRecordResolveTokenURLRequest tokenResolveBlock]
  -[CKDRecordResolveTokenURLRequest setLookupInfos:]
  -[CKDRecordResolveTokenURLRequest setLookupInfosByRequestID:]


CKDShortTokenLookupInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  NSString *routingKey
 @property  NSData *shortSharingTokenHashData
 @property  BOOL shouldFetchRootRecord
 @property  BOOL forceDSRefetch

  // instance methods
  -[CKDShortTokenLookupInfo isEqual:]
  -[CKDShortTokenLookupInfo copyWithZone:]
  -[CKDShortTokenLookupInfo .cxx_destruct]
  -[CKDShortTokenLookupInfo shouldFetchRootRecord]
  -[CKDShortTokenLookupInfo setShouldFetchRootRecord:]
  -[CKDShortTokenLookupInfo routingKey]
  -[CKDShortTokenLookupInfo setRoutingKey:]
  -[CKDShortTokenLookupInfo shortSharingTokenHashData]
  -[CKDShortTokenLookupInfo setShortSharingTokenHashData:]
  -[CKDShortTokenLookupInfo forceDSRefetch]
  -[CKDShortTokenLookupInfo setForceDSRefetch:]


CKLStreamObserver : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKLEventFilter *filter
 @property  NSDateFormatter *formatter
 @property  NSMutableDictionary *processNamesByPath
 @property  BOOL simulatorOnly
 @property  BOOL colorOutput
 @property  NSString *processName

  // instance methods
  -[CKLStreamObserver .cxx_destruct]
  -[CKLStreamObserver formatter]
  -[CKLStreamObserver processName]
  -[CKLStreamObserver setProcessName:]
  -[CKLStreamObserver finish]
  -[CKLStreamObserver setFilter:]
  -[CKLStreamObserver filter]
  -[CKLStreamObserver _handleEvent:]
  -[CKLStreamObserver initWithLogTypes:]
  -[CKLStreamObserver eventMatched:]
  -[CKLStreamObserver processNamesByPath]
  -[CKLStreamObserver setSimulatorOnly:]
  -[CKLStreamObserver simulatorOnly]
  -[CKLStreamObserver _processNameForPath:]
  -[CKLStreamObserver colorOutput]
  -[CKLStreamObserver setColorOutput:]
  -[CKLStreamObserver setProcessNamesByPath:]


CKLStreamLogMessageObserver : CKLStreamObserver
  // instance methods
  -[CKLStreamLogMessageObserver eventMatched:]
  -[CKLStreamLogMessageObserver _colorString:withForeground:]


CKLStreamRawMessageObserver : CKLStreamObserver
  // instance methods
  -[CKLStreamRawMessageObserver eventMatched:]


CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasHeaderKey
 @property  NSString *headerKey
 @property  BOOL hasHeaderValue
 @property  NSString *headerValue

  // instance methods
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo isEqual:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo copyWithZone:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo .cxx_destruct]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo dictionaryRepresentation]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo writeTo:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo mergeFrom:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo readFrom:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo copyTo:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo setHeaderKey:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo setHeaderValue:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo headerKey]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo headerValue]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo hasHeaderKey]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo hasHeaderValue]


CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasKey
 @property  NSString *key
 @property  BOOL hasValue
 @property  CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue *value

  // instance methods
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry isEqual:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry copyWithZone:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry key]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry .cxx_destruct]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry value]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry setValue:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry dictionaryRepresentation]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry setKey:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry writeTo:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry mergeFrom:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry readFrom:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry copyTo:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry hasKey]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry hasValue]


CKDAccount : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDAccountInfoProvider>
 @property  ACAccountStore *accountStore
 @property  NSString *accountID
 @property  CKDBackingAccount *backingAccount
 @property  BOOL isAnonymousAccount
 @property  BOOL haveWarnedAboutServerPreferredPushEnvironment
 @property  NSObject<OS_dispatch_queue> *authTokenQueue
 @property  NSObject<OS_dispatch_queue> *authTokenCallbackQueue
 @property  NSString *lastFailedCloudKitAuthToken
 @property  NSString *lastFailediCloudAuthToken
 @property  NSString *accountIdentifier
 @property  NSPersonNameComponents *fullName
 @property  NSString *primaryEmail
 @property  NSString *username
 @property  NSString *formattedUsername
 @property  NSString *personaIdentifier
 @property  CKAccountOverrideInfo *fakeAccountInfo
 @property  BOOL isFakeAccount
 @property  BOOL isUnitTestingAccount
 @property  BOOL accountWantsPushRegistration
 @property  BOOL accountWantsFlowControl
 @property  BOOL iCloudDriveAllowsCellularAccess
 @property  BOOL isPrimaryEmailVerified
 @property  NSURL *privateCloudDBURL
 @property  NSURL *privateShareServiceURL
 @property  NSURL *privateDeviceServiceURL
 @property  NSURL *privateCodeServiceURL
 @property  NSURL *privateMetricsServiceURL
 @property  NSURL *privateDatabaseRPCServiceURL
 @property  NSString *serverPreferredPushEnvironment
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL isCarryAccount
 @property  BOOL isiCloudDevEnvironmentAccount
 @property  NSString *displayedHostname

  // class methods
  +[CKDAccount globalAuthTokenQueue]

  // instance methods
  -[CKDAccount .cxx_destruct]
  -[CKDAccount _init]
  -[CKDAccount dsid]
  -[CKDAccount accountIdentifier]
  -[CKDAccount fullName]
  -[CKDAccount username]
  -[CKDAccount setAccountStore:]
  -[CKDAccount accountStore]
  -[CKDAccount personaIdentifier]
  -[CKDAccount accountID]
  -[CKDAccount initWithAccountID:]
  -[CKDAccount deviceCountWithCompletionHandler:]
  -[CKDAccount isUnitTestingAccount]
  -[CKDAccount accountWantsPushRegistration]
  -[CKDAccount accountWantsFlowControl]
  -[CKDAccount setIsUnitTestingAccount:]
  -[CKDAccount setAccountWantsPushRegistration:]
  -[CKDAccount setAccountWantsFlowControl:]
  -[CKDAccount initAnonymousAccount]
  -[CKDAccount displayedHostname]
  -[CKDAccount primaryEmail]
  -[CKDAccount backingAccount]
  -[CKDAccount isAnonymousAccount]
  -[CKDAccount isCarryAccount]
  -[CKDAccount iCloudAuthTokenWithAccessProvider:error:]
  -[CKDAccount cloudKitAuthTokenWithAccessProvider:error:]
  -[CKDAccount serverPreferredPushEnvironment]
  -[CKDAccount formattedUsername]
  -[CKDAccount isDataclassEnabled:]
  -[CKDAccount fakeAccountInfo]
  -[CKDAccount initFakeAccountWithAccountOverrideInfo:]
  -[CKDAccount initPrimaryAccount]
  -[CKDAccount isPrimaryEmailVerified]
  -[CKDAccount iCloudDriveAllowsCellularAccess]
  -[CKDAccount isFakeAccount]
  -[CKDAccount privateCloudDBURL]
  -[CKDAccount privateShareServiceURL]
  -[CKDAccount privateDeviceServiceURL]
  -[CKDAccount privateCodeServiceURL]
  -[CKDAccount privateMetricsServiceURL]
  -[CKDAccount privateDatabaseRPCServiceURL]
  -[CKDAccount updateAccountPropertiesAndSaveAccountWithCompletionHandler:]
  -[CKDAccount cloudKitAuthTokenWithAccessProvider:completionHandler:]
  -[CKDAccount iCloudAuthTokenWithAccessProvider:completionHandler:]
  -[CKDAccount renewCloudKitAuthTokenWithReason:shouldForce:accessProvider:failedToken:completionHandler:]
  -[CKDAccount renewiCloudAuthTokenWithReason:shouldForce:accessProvider:failedToken:completionHandler:]
  -[CKDAccount validateVettingToken:vettingEmail:vettingPhone:accountAccessProvider:completionHandler:]
  -[CKDAccount _userCloudDBURLisInCarryPartition]
  -[CKDAccount haveWarnedAboutServerPreferredPushEnvironment]
  -[CKDAccount setHaveWarnedAboutServerPreferredPushEnvironment:]
  -[CKDAccount authTokenQueue]
  -[CKDAccount authTokenCallbackQueue]
  -[CKDAccount setLastFailedCloudKitAuthToken:]
  -[CKDAccount _lockedCloudKitAuthTokenWithAccessProvider:error:]
  -[CKDAccount _lockedRenewTokenWithReason:shouldForce:accountAccessProvider:tokenFetchBlock:completionHandler:]
  -[CKDAccount lastFailedCloudKitAuthToken]
  -[CKDAccount setLastFailediCloudAuthToken:]
  -[CKDAccount _lockediCloudAuthTokenWithAccessProvider:error:]
  -[CKDAccount lastFailediCloudAuthToken]
  -[CKDAccount sharingURLHostname]
  -[CKDAccount isiCloudDevEnvironmentAccount]
  -[CKDAccount setIsAnonymousAccount:]
  -[CKDAccount setAuthTokenCallbackQueue:]


CKDTrafficLogger : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  long long sequenceNumber
 @property  NSString *requestID

  // instance methods
  -[CKDTrafficLogger .cxx_destruct]
  -[CKDTrafficLogger setSequenceNumber:]
  -[CKDTrafficLogger sequenceNumber]
  -[CKDTrafficLogger shouldLog]
  -[CKDTrafficLogger initWithRequestID:]
  -[CKDTrafficLogger requestID]
  -[CKDTrafficLogger setRequestID:]
  -[CKDTrafficLogger logResponseConfiguration:withMessageClassString:]
  -[CKDTrafficLogger logPartialRequestObjectData:]
  -[CKDTrafficLogger logRequest:toURL:withMethod:withMessageClassString:parsingStandaloneMessage:]
  -[CKDTrafficLogger finishRequestLog]
  -[CKDTrafficLogger logResponse:]
  -[CKDTrafficLogger logPartialResponseObjectData:]
  -[CKDTrafficLogger logRequestBodyStreamReset]
  -[CKDTrafficLogger _logObject:ofType:]


CKDPResponseOperationResultErrorClient : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasOplockFailure
 @property  CKDPOplockFailure *oplockFailure
 @property  BOOL hasUniqueFieldFailure
 @property  CKDPUniqueFieldFailure *uniqueFieldFailure
 @property  BOOL hasType
 @property  int type

  // instance methods
  -[CKDPResponseOperationResultErrorClient isEqual:]
  -[CKDPResponseOperationResultErrorClient copyWithZone:]
  -[CKDPResponseOperationResultErrorClient type]
  -[CKDPResponseOperationResultErrorClient setType:]
  -[CKDPResponseOperationResultErrorClient .cxx_destruct]
  -[CKDPResponseOperationResultErrorClient dictionaryRepresentation]
  -[CKDPResponseOperationResultErrorClient writeTo:]
  -[CKDPResponseOperationResultErrorClient mergeFrom:]
  -[CKDPResponseOperationResultErrorClient readFrom:]
  -[CKDPResponseOperationResultErrorClient copyTo:]
  -[CKDPResponseOperationResultErrorClient typeAsString:]
  -[CKDPResponseOperationResultErrorClient StringAsType:]
  -[CKDPResponseOperationResultErrorClient setHasType:]
  -[CKDPResponseOperationResultErrorClient hasType]
  -[CKDPResponseOperationResultErrorClient setOplockFailure:]
  -[CKDPResponseOperationResultErrorClient setUniqueFieldFailure:]
  -[CKDPResponseOperationResultErrorClient hasOplockFailure]
  -[CKDPResponseOperationResultErrorClient oplockFailure]
  -[CKDPResponseOperationResultErrorClient hasUniqueFieldFailure]
  -[CKDPResponseOperationResultErrorClient uniqueFieldFailure]
  -[CKDPResponseOperationResultErrorClient _typeCKLogValue]


CKDProtobufStreamWriter : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSStreamDelegate>
 @property  BOOL shouldCompress
 @property  BOOL hasInitedCompression
 @property  BOOL haveFinishedCompression
 @property  BOOL haveFinishedStreaming
 @property  unsigned long bufferSize
 @property  @? logRequestObjectBlock
 @property  NSFileHandle *binaryLogFileHandle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDProtobufStreamWriter dealloc]
  -[CKDProtobufStreamWriter open]
  -[CKDProtobufStreamWriter stream:handleEvent:]
  -[CKDProtobufStreamWriter .cxx_destruct]
  -[CKDProtobufStreamWriter tearDown]
  -[CKDProtobufStreamWriter bufferSize]
  -[CKDProtobufStreamWriter setBufferSize:]
  -[CKDProtobufStreamWriter shouldCompress]
  -[CKDProtobufStreamWriter _dataForMessage:]
  -[CKDProtobufStreamWriter setStreamedObjects:]
  -[CKDProtobufStreamWriter initWithCompression:]
  -[CKDProtobufStreamWriter setLogRequestObjectBlock:]
  -[CKDProtobufStreamWriter _tearDownOutputStream]
  -[CKDProtobufStreamWriter setHaveFinishedStreaming:]
  -[CKDProtobufStreamWriter haveFinishedCompression]
  -[CKDProtobufStreamWriter setHaveFinishedCompression:]
  -[CKDProtobufStreamWriter _compressBodyData:shouldFlush:]
  -[CKDProtobufStreamWriter _streamNextObject:]
  -[CKDProtobufStreamWriter logRequestObjectBlock]
  -[CKDProtobufStreamWriter _prepareObjectForStreaming:]
  -[CKDProtobufStreamWriter _writeDataToStream:]
  -[CKDProtobufStreamWriter haveFinishedStreaming]
  -[CKDProtobufStreamWriter _finishStreaming:]
  -[CKDProtobufStreamWriter setShouldCompress:]
  -[CKDProtobufStreamWriter binaryLogFileHandle]
  -[CKDProtobufStreamWriter setBinaryLogFileHandle:]
  -[CKDProtobufStreamWriter hasInitedCompression]
  -[CKDProtobufStreamWriter setHasInitedCompression:]


CKDPlistResponseBodyParser : CKDResponseBodyParser
  // instance methods
  -[CKDPlistResponseBodyParser processData:]
  -[CKDPlistResponseBodyParser finishWithCompletion:]


CKDMMCSClientProxyItemReader : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDMMCSItemReaderWriterProtocol>
 @property  CKDMMCSItemGroupContext *MMCSRequest
 @property  CKDMMCSItem *MMCSItem
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDMMCSClientProxyItemReader .cxx_destruct]
  -[CKDMMCSClientProxyItemReader openWithError:]
  -[CKDMMCSClientProxyItemReader closeWithError:]
  -[CKDMMCSClientProxyItemReader MMCSRequest]
  -[CKDMMCSClientProxyItemReader MMCSItem]
  -[CKDMMCSClientProxyItemReader getFileMetadataWithError:]
  -[CKDMMCSClientProxyItemReader readBytesAtOffset:bytes:length:bytesRead:error:]
  -[CKDMMCSClientProxyItemReader writeBytesAtOffset:bytes:length:bytesWritten:error:]
  -[CKDMMCSClientProxyItemReader initWithMMCSItem:MMCSRequest:]
  -[CKDMMCSClientProxyItemReader setMMCSRequest:]
  -[CKDMMCSClientProxyItemReader setMMCSItem:]


CKDPStreamingAsset : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasAssetId
 @property  CKDPStreamingAssetIdentifier *assetId
 @property  BOOL hasSaveAssetRequest
 @property  CKDPStreamingAssetSaveAssetRequest *saveAssetRequest
 @property  BOOL hasSaveAssetResponse
 @property  CKDPStreamingAssetSaveAssetResponse *saveAssetResponse
 @property  BOOL hasRetrieveAssetResponse
 @property  CKDPStreamingAssetRetrieveAssetResponse *retrieveAssetResponse

  // instance methods
  -[CKDPStreamingAsset isEqual:]
  -[CKDPStreamingAsset copyWithZone:]
  -[CKDPStreamingAsset .cxx_destruct]
  -[CKDPStreamingAsset dictionaryRepresentation]
  -[CKDPStreamingAsset writeTo:]
  -[CKDPStreamingAsset mergeFrom:]
  -[CKDPStreamingAsset readFrom:]
  -[CKDPStreamingAsset copyTo:]
  -[CKDPStreamingAsset assetId]
  -[CKDPStreamingAsset setAssetId:]
  -[CKDPStreamingAsset setSaveAssetRequest:]
  -[CKDPStreamingAsset setSaveAssetResponse:]
  -[CKDPStreamingAsset setRetrieveAssetResponse:]
  -[CKDPStreamingAsset hasAssetId]
  -[CKDPStreamingAsset hasSaveAssetRequest]
  -[CKDPStreamingAsset hasSaveAssetResponse]
  -[CKDPStreamingAsset hasRetrieveAssetResponse]
  -[CKDPStreamingAsset saveAssetRequest]
  -[CKDPStreamingAsset saveAssetResponse]
  -[CKDPStreamingAsset retrieveAssetResponse]


CKDPZoneRetrieveResponseZoneSummary : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasTargetZone
 @property  CKDPZone *targetZone
 @property  BOOL hasCurrentServerContinuationToken
 @property  NSData *currentServerContinuationToken
 @property  BOOL hasClientChangeToken
 @property  NSData *clientChangeToken
 @property  BOOL hasDeviceCount
 @property  int deviceCount
 @property  BOOL hasAssetQuotaUsage
 @property  long long assetQuotaUsage
 @property  BOOL hasMetadataQuotaUsage
 @property  long long metadataQuotaUsage
 @property  BOOL hasCapabilities
 @property  CKDPZoneCapabilities *capabilities
 @property  BOOL hasZoneishPcsNeedsRolled
 @property  BOOL zoneishPcsNeedsRolled
 @property  BOOL hasZoneKeyRollAllowed
 @property  BOOL zoneKeyRollAllowed
 @property  BOOL hasZonePcsModificationTime
 @property  CKDPDate *zonePcsModificationTime
 @property  BOOL hasZonePcsModificationDevice
 @property  NSString *zonePcsModificationDevice

  // instance methods
  -[CKDPZoneRetrieveResponseZoneSummary isEqual:]
  -[CKDPZoneRetrieveResponseZoneSummary copyWithZone:]
  -[CKDPZoneRetrieveResponseZoneSummary .cxx_destruct]
  -[CKDPZoneRetrieveResponseZoneSummary dictionaryRepresentation]
  -[CKDPZoneRetrieveResponseZoneSummary writeTo:]
  -[CKDPZoneRetrieveResponseZoneSummary mergeFrom:]
  -[CKDPZoneRetrieveResponseZoneSummary readFrom:]
  -[CKDPZoneRetrieveResponseZoneSummary copyTo:]
  -[CKDPZoneRetrieveResponseZoneSummary capabilities]
  -[CKDPZoneRetrieveResponseZoneSummary setCapabilities:]
  -[CKDPZoneRetrieveResponseZoneSummary targetZone]
  -[CKDPZoneRetrieveResponseZoneSummary setTargetZone:]
  -[CKDPZoneRetrieveResponseZoneSummary deviceCount]
  -[CKDPZoneRetrieveResponseZoneSummary setDeviceCount:]
  -[CKDPZoneRetrieveResponseZoneSummary clientChangeToken]
  -[CKDPZoneRetrieveResponseZoneSummary setClientChangeToken:]
  -[CKDPZoneRetrieveResponseZoneSummary assetQuotaUsage]
  -[CKDPZoneRetrieveResponseZoneSummary setAssetQuotaUsage:]
  -[CKDPZoneRetrieveResponseZoneSummary metadataQuotaUsage]
  -[CKDPZoneRetrieveResponseZoneSummary setMetadataQuotaUsage:]
  -[CKDPZoneRetrieveResponseZoneSummary zoneKeyRollAllowed]
  -[CKDPZoneRetrieveResponseZoneSummary setZoneKeyRollAllowed:]
  -[CKDPZoneRetrieveResponseZoneSummary currentServerContinuationToken]
  -[CKDPZoneRetrieveResponseZoneSummary hasCapabilities]
  -[CKDPZoneRetrieveResponseZoneSummary hasClientChangeToken]
  -[CKDPZoneRetrieveResponseZoneSummary setCurrentServerContinuationToken:]
  -[CKDPZoneRetrieveResponseZoneSummary setZonePcsModificationTime:]
  -[CKDPZoneRetrieveResponseZoneSummary setZonePcsModificationDevice:]
  -[CKDPZoneRetrieveResponseZoneSummary hasTargetZone]
  -[CKDPZoneRetrieveResponseZoneSummary hasCurrentServerContinuationToken]
  -[CKDPZoneRetrieveResponseZoneSummary setHasDeviceCount:]
  -[CKDPZoneRetrieveResponseZoneSummary hasDeviceCount]
  -[CKDPZoneRetrieveResponseZoneSummary setHasAssetQuotaUsage:]
  -[CKDPZoneRetrieveResponseZoneSummary hasAssetQuotaUsage]
  -[CKDPZoneRetrieveResponseZoneSummary setHasMetadataQuotaUsage:]
  -[CKDPZoneRetrieveResponseZoneSummary hasMetadataQuotaUsage]
  -[CKDPZoneRetrieveResponseZoneSummary setZoneishPcsNeedsRolled:]
  -[CKDPZoneRetrieveResponseZoneSummary setHasZoneishPcsNeedsRolled:]
  -[CKDPZoneRetrieveResponseZoneSummary hasZoneishPcsNeedsRolled]
  -[CKDPZoneRetrieveResponseZoneSummary setHasZoneKeyRollAllowed:]
  -[CKDPZoneRetrieveResponseZoneSummary hasZoneKeyRollAllowed]
  -[CKDPZoneRetrieveResponseZoneSummary hasZonePcsModificationTime]
  -[CKDPZoneRetrieveResponseZoneSummary hasZonePcsModificationDevice]
  -[CKDPZoneRetrieveResponseZoneSummary zoneishPcsNeedsRolled]
  -[CKDPZoneRetrieveResponseZoneSummary zonePcsModificationTime]
  -[CKDPZoneRetrieveResponseZoneSummary zonePcsModificationDevice]


CKDPNotificationMarkReadResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPNotificationMarkReadResponse isEqual:]
  -[CKDPNotificationMarkReadResponse copyWithZone:]
  -[CKDPNotificationMarkReadResponse dictionaryRepresentation]
  -[CKDPNotificationMarkReadResponse writeTo:]
  -[CKDPNotificationMarkReadResponse mergeFrom:]
  -[CKDPNotificationMarkReadResponse readFrom:]
  -[CKDPNotificationMarkReadResponse copyTo:]


CKDPUserQueryRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasAlias
 @property  CKDPUserAlias *alias
 @property  NSMutableArray *sortedBys
 @property  BOOL hasOBSOLETEPcsServiceType
 @property  NSString *oBSOLETEPcsServiceType
 @property  BOOL hasPublicKeyRequested
 @property  BOOL publicKeyRequested

  // class methods
  +[CKDPUserQueryRequest options]
  +[CKDPUserQueryRequest sortedByType]

  // instance methods
  -[CKDPUserQueryRequest isEqual:]
  -[CKDPUserQueryRequest copyWithZone:]
  -[CKDPUserQueryRequest .cxx_destruct]
  -[CKDPUserQueryRequest dictionaryRepresentation]
  -[CKDPUserQueryRequest writeTo:]
  -[CKDPUserQueryRequest mergeFrom:]
  -[CKDPUserQueryRequest readFrom:]
  -[CKDPUserQueryRequest copyTo:]
  -[CKDPUserQueryRequest requestTypeCode]
  -[CKDPUserQueryRequest responseClass]
  -[CKDPUserQueryRequest setAlias:]
  -[CKDPUserQueryRequest alias]
  -[CKDPUserQueryRequest addSortedBy:]
  -[CKDPUserQueryRequest sortedBysCount]
  -[CKDPUserQueryRequest clearSortedBys]
  -[CKDPUserQueryRequest sortedByAtIndex:]
  -[CKDPUserQueryRequest setOBSOLETEPcsServiceType:]
  -[CKDPUserQueryRequest hasAlias]
  -[CKDPUserQueryRequest hasOBSOLETEPcsServiceType]
  -[CKDPUserQueryRequest publicKeyRequested]
  -[CKDPUserQueryRequest setPublicKeyRequested:]
  -[CKDPUserQueryRequest setHasPublicKeyRequested:]
  -[CKDPUserQueryRequest hasPublicKeyRequested]
  -[CKDPUserQueryRequest sortedBys]
  -[CKDPUserQueryRequest setSortedBys:]
  -[CKDPUserQueryRequest oBSOLETEPcsServiceType]


CKDUploadAssetsOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  NSArray *assetsToUpload
 @property  NSDictionary *assetUUIDToExpectedProperties
 @property  NSDictionary *packageUUIDToExpectedProperties
 @property  BOOL temporary

  // instance methods
  -[CKDUploadAssetsOperationInfo .cxx_destruct]
  -[CKDUploadAssetsOperationInfo assetUUIDToExpectedProperties]
  -[CKDUploadAssetsOperationInfo setAssetUUIDToExpectedProperties:]
  -[CKDUploadAssetsOperationInfo packageUUIDToExpectedProperties]
  -[CKDUploadAssetsOperationInfo setPackageUUIDToExpectedProperties:]
  -[CKDUploadAssetsOperationInfo setTemporary:]
  -[CKDUploadAssetsOperationInfo temporary]
  -[CKDUploadAssetsOperationInfo assetsToUpload]
  -[CKDUploadAssetsOperationInfo setAssetsToUpload:]


CKDUploadAssetsOperation : CKDDatabaseOperation
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSArray *assetsToUpload
 @property  NSMapTable *uploadTasksByPackages
 @property  NSMutableArray *packageManifests
 @property  NSMutableArray *openedPackages
 @property  CKDCancelTokenGroup *cancelTokens
 @property  unsigned long maxPackageUploadsPerBatch
 @property  CKDAssetRequestPlanner *assetRequestPlanner
 @property  NSDictionary *assetUUIDToExpectedProperties
 @property  NSDictionary *packageUUIDToExpectedProperties
 @property  BOOL temporary
 @property  @? uploadPreparationBlock
 @property  @? uploadProgressBlock
 @property  @? uploadCompletionBlock
 @property  BOOL atomic

  // class methods
  +[CKDUploadAssetsOperation isPredominatelyDownload]

  // instance methods
  -[CKDUploadAssetsOperation setQueue:]
  -[CKDUploadAssetsOperation queue]
  -[CKDUploadAssetsOperation .cxx_destruct]
  -[CKDUploadAssetsOperation cancel]
  -[CKDUploadAssetsOperation main]
  -[CKDUploadAssetsOperation finishWithError:]
  -[CKDUploadAssetsOperation setAtomic:]
  -[CKDUploadAssetsOperation _finishOnCallbackQueueWithError:]
  -[CKDUploadAssetsOperation atomic]
  -[CKDUploadAssetsOperation assetUUIDToExpectedProperties]
  -[CKDUploadAssetsOperation setAssetUUIDToExpectedProperties:]
  -[CKDUploadAssetsOperation packageUUIDToExpectedProperties]
  -[CKDUploadAssetsOperation setPackageUUIDToExpectedProperties:]
  -[CKDUploadAssetsOperation setTemporary:]
  -[CKDUploadAssetsOperation temporary]
  -[CKDUploadAssetsOperation initWithOperationInfo:clientContext:]
  -[CKDUploadAssetsOperation setUploadCompletionBlock:]
  -[CKDUploadAssetsOperation nameForState:]
  -[CKDUploadAssetsOperation makeStateTransition]
  -[CKDUploadAssetsOperation CKStatusReportLogGroups]
  -[CKDUploadAssetsOperation cancelTokens]
  -[CKDUploadAssetsOperation setCancelTokens:]
  -[CKDUploadAssetsOperation _didPrepareAsset:]
  -[CKDUploadAssetsOperation _didMakeProgressForAsset:progress:]
  -[CKDUploadAssetsOperation _collectMetricsFromMMCSOperationMetrics:]
  -[CKDUploadAssetsOperation _didMakeProgressForMMCSSectionItem:task:]
  -[CKDUploadAssetsOperation _collectMetricsFromCompletedItemGroup:]
  -[CKDUploadAssetsOperation _collectMetricsFromCompletedItemGroupSet:]
  -[CKDUploadAssetsOperation assetsToUpload]
  -[CKDUploadAssetsOperation setAssetsToUpload:]
  -[CKDUploadAssetsOperation _prepareForUpload]
  -[CKDUploadAssetsOperation _fetchUploadTokens]
  -[CKDUploadAssetsOperation _upload]
  -[CKDUploadAssetsOperation openedPackages]
  -[CKDUploadAssetsOperation setOpenedPackages:]
  -[CKDUploadAssetsOperation uploadPreparationBlock]
  -[CKDUploadAssetsOperation uploadProgressBlock]
  -[CKDUploadAssetsOperation uploadCompletionBlock]
  -[CKDUploadAssetsOperation _didUploadAsset:error:]
  -[CKDUploadAssetsOperation _didUploadMMCSItems:error:]
  -[CKDUploadAssetsOperation uploadTasksByPackages]
  -[CKDUploadAssetsOperation _openPackage:]
  -[CKDUploadAssetsOperation _planSectionsForPackage:error:]
  -[CKDUploadAssetsOperation setPackageManifests:]
  -[CKDUploadAssetsOperation _didGetChunkKeysForAssetBatch:error:]
  -[CKDUploadAssetsOperation _didPrepareAssetBatch:error:]
  -[CKDUploadAssetsOperation _failAllItemsInAssetBatch:error:]
  -[CKDUploadAssetsOperation _didFetchUploadTokensForAssetTokenRequest:error:newError:]
  -[CKDUploadAssetsOperation _didUploadMMCSSectionItem:task:error:]
  -[CKDUploadAssetsOperation _didUploadMMCSSectionItems:task:error:]
  -[CKDUploadAssetsOperation _uploadPackageSectionsWithEnumerator:task:completionBlock:]
  -[CKDUploadAssetsOperation _uploadPackageSection:task:completionBlock:]
  -[CKDUploadAssetsOperation _closePackage:]
  -[CKDUploadAssetsOperation maxPackageUploadsPerBatch]
  -[CKDUploadAssetsOperation _uploadPackageSectionsWithPendingTasks:uploadingTasks:completedTasks:]
  -[CKDUploadAssetsOperation _uploadPackageSectionsWithTask:completionBlock:]
  -[CKDUploadAssetsOperation _didUploadMMCSItem:error:]
  -[CKDUploadAssetsOperation setMaxPackageUploadsPerBatch:]
  -[CKDUploadAssetsOperation _didUploadPackageWithTask:]
  -[CKDUploadAssetsOperation _didMakeProgressForMMCSItem:]
  -[CKDUploadAssetsOperation _didPutChunkKeysForAssetBatch:error:]
  -[CKDUploadAssetsOperation packageManifests]
  -[CKDUploadAssetsOperation _closeAllPackages]
  -[CKDUploadAssetsOperation _removePackageManifests]
  -[CKDUploadAssetsOperation setUploadPreparationBlock:]
  -[CKDUploadAssetsOperation setUploadProgressBlock:]
  -[CKDUploadAssetsOperation _fetchAssetRereferenceRecords]
  -[CKDUploadAssetsOperation setUploadTasksByPackages:]
  -[CKDUploadAssetsOperation assetRequestPlanner]
  -[CKDUploadAssetsOperation setAssetRequestPlanner:]


CKDPRecordSaveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasEtag
 @property  NSString *etag
 @property  BOOL hasTimeStatistics
 @property  CKDPDateStatistics *timeStatistics
 @property  BOOL hasServerFields
 @property  CKDPRecord *serverFields

  // instance methods
  -[CKDPRecordSaveResponse isEqual:]
  -[CKDPRecordSaveResponse copyWithZone:]
  -[CKDPRecordSaveResponse .cxx_destruct]
  -[CKDPRecordSaveResponse dictionaryRepresentation]
  -[CKDPRecordSaveResponse etag]
  -[CKDPRecordSaveResponse writeTo:]
  -[CKDPRecordSaveResponse mergeFrom:]
  -[CKDPRecordSaveResponse readFrom:]
  -[CKDPRecordSaveResponse copyTo:]
  -[CKDPRecordSaveResponse setEtag:]
  -[CKDPRecordSaveResponse hasEtag]
  -[CKDPRecordSaveResponse hasTimeStatistics]
  -[CKDPRecordSaveResponse timeStatistics]
  -[CKDPRecordSaveResponse setTimeStatistics:]
  -[CKDPRecordSaveResponse setServerFields:]
  -[CKDPRecordSaveResponse hasServerFields]
  -[CKDPRecordSaveResponse serverFields]


CKDPLocation : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasCoordinate
 @property  CKDPLocationCoordinate *coordinate
 @property  BOOL hasBounds
 @property  CKDPLocationBound *bounds

  // instance methods
  -[CKDPLocation isEqual:]
  -[CKDPLocation copyWithZone:]
  -[CKDPLocation .cxx_destruct]
  -[CKDPLocation coordinate]
  -[CKDPLocation dictionaryRepresentation]
  -[CKDPLocation writeTo:]
  -[CKDPLocation bounds]
  -[CKDPLocation setBounds:]
  -[CKDPLocation mergeFrom:]
  -[CKDPLocation readFrom:]
  -[CKDPLocation copyTo:]
  -[CKDPLocation setCoordinate:]
  -[CKDPLocation hasCoordinate]
  -[CKDPLocation hasBounds]


CKCDPStopAllContainerResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[CKCDPStopAllContainerResponse isEqual:]
  -[CKCDPStopAllContainerResponse copyWithZone:]
  -[CKCDPStopAllContainerResponse dictionaryRepresentation]
  -[CKCDPStopAllContainerResponse writeTo:]
  -[CKCDPStopAllContainerResponse mergeFrom:]
  -[CKCDPStopAllContainerResponse readFrom:]
  -[CKCDPStopAllContainerResponse copyTo:]
  -[CKCDPStopAllContainerResponse success]
  -[CKCDPStopAllContainerResponse setSuccess:]
  -[CKCDPStopAllContainerResponse hasSuccess]
  -[CKCDPStopAllContainerResponse setHasSuccess:]


CKDPublishAssetsOperation : CKDDatabaseOperation
 @property  NSArray *recordIDs
 @property  NSDictionary *fileNamesByAssetFieldNames
 @property  unsigned long requestedTTL
 @property  unsigned long URLOptions
 @property  NSOperation *fetchRecordsOperation
 @property  NSMutableDictionary *fetchedRecordsByID
 @property  @? assetPublishedBlock

  // instance methods
  -[CKDPublishAssetsOperation .cxx_destruct]
  -[CKDPublishAssetsOperation cancel]
  -[CKDPublishAssetsOperation main]
  -[CKDPublishAssetsOperation setRecordIDs:]
  -[CKDPublishAssetsOperation _finishOnCallbackQueueWithError:]
  -[CKDPublishAssetsOperation activityCreate]
  -[CKDPublishAssetsOperation recordIDs]
  -[CKDPublishAssetsOperation fileNamesByAssetFieldNames]
  -[CKDPublishAssetsOperation setFileNamesByAssetFieldNames:]
  -[CKDPublishAssetsOperation requestedTTL]
  -[CKDPublishAssetsOperation setRequestedTTL:]
  -[CKDPublishAssetsOperation URLOptions]
  -[CKDPublishAssetsOperation setURLOptions:]
  -[CKDPublishAssetsOperation assetPublishedBlock]
  -[CKDPublishAssetsOperation setAssetPublishedBlock:]
  -[CKDPublishAssetsOperation initWithOperationInfo:clientContext:]
  -[CKDPublishAssetsOperation nameForState:]
  -[CKDPublishAssetsOperation makeStateTransition]
  -[CKDPublishAssetsOperation _fetchRecords]
  -[CKDPublishAssetsOperation _fetchPCSForRecords]
  -[CKDPublishAssetsOperation fetchedRecordsByID]
  -[CKDPublishAssetsOperation _dispatchAssetURLsForRecord:recordID:pcs:error:]
  -[CKDPublishAssetsOperation setFetchRecordsOperation:]
  -[CKDPublishAssetsOperation fetchRecordsOperation]
  -[CKDPublishAssetsOperation setFetchedRecordsByID:]


CKDPRecordSaveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRecord
 @property  CKDPRecord *record
 @property  BOOL hasMerge
 @property  BOOL merge
 @property  NSMutableArray *fieldsToDeleteIfExistOnMerges
 @property  BOOL hasEtag
 @property  NSString *etag
 @property  BOOL hasConflictLoserUpdate
 @property  CKDPRecordSaveRequestConflictLoserUpdate *conflictLoserUpdate
 @property  BOOL hasSaveSemantics
 @property  int saveSemantics
 @property  BOOL hasZoneProtectionInfoTag
 @property  NSString *zoneProtectionInfoTag
 @property  BOOL hasRecordProtectionInfoTag
 @property  NSString *recordProtectionInfoTag
 @property  NSMutableArray *conflictLosersToResolves
 @property  BOOL hasShareEtag
 @property  NSString *shareEtag
 @property  BOOL hasShareIDUpdate
 @property  CKDPRecordSaveRequestShareIdUpdate *shareIDUpdate
 @property  BOOL hasParentChainProtectionInfoTag
 @property  NSString *parentChainProtectionInfoTag
 @property  BOOL hasRequestedFields
 @property  CKDPRequestedFields *requestedFields

  // class methods
  +[CKDPRecordSaveRequest options]
  +[CKDPRecordSaveRequest fieldsToDeleteIfExistOnMergeType]
  +[CKDPRecordSaveRequest conflictLosersToResolveType]

  // instance methods
  -[CKDPRecordSaveRequest isEqual:]
  -[CKDPRecordSaveRequest copyWithZone:]
  -[CKDPRecordSaveRequest .cxx_destruct]
  -[CKDPRecordSaveRequest dictionaryRepresentation]
  -[CKDPRecordSaveRequest etag]
  -[CKDPRecordSaveRequest writeTo:]
  -[CKDPRecordSaveRequest mergeFrom:]
  -[CKDPRecordSaveRequest readFrom:]
  -[CKDPRecordSaveRequest copyTo:]
  -[CKDPRecordSaveRequest requestTypeCode]
  -[CKDPRecordSaveRequest responseClass]
  -[CKDPRecordSaveRequest setEtag:]
  -[CKDPRecordSaveRequest hasEtag]
  -[CKDPRecordSaveRequest record]
  -[CKDPRecordSaveRequest setRecord:]
  -[CKDPRecordSaveRequest shareEtag]
  -[CKDPRecordSaveRequest setShareEtag:]
  -[CKDPRecordSaveRequest requestedFields]
  -[CKDPRecordSaveRequest setRequestedFields:]
  -[CKDPRecordSaveRequest merge]
  -[CKDPRecordSaveRequest setMerge:]
  -[CKDPRecordSaveRequest hasRequestedFields]
  -[CKDPRecordSaveRequest hasRecord]
  -[CKDPRecordSaveRequest setZoneProtectionInfoTag:]
  -[CKDPRecordSaveRequest hasZoneProtectionInfoTag]
  -[CKDPRecordSaveRequest zoneProtectionInfoTag]
  -[CKDPRecordSaveRequest addFieldsToDeleteIfExistOnMerge:]
  -[CKDPRecordSaveRequest addConflictLosersToResolve:]
  -[CKDPRecordSaveRequest fieldsToDeleteIfExistOnMergesCount]
  -[CKDPRecordSaveRequest clearFieldsToDeleteIfExistOnMerges]
  -[CKDPRecordSaveRequest fieldsToDeleteIfExistOnMergeAtIndex:]
  -[CKDPRecordSaveRequest setConflictLoserUpdate:]
  -[CKDPRecordSaveRequest setRecordProtectionInfoTag:]
  -[CKDPRecordSaveRequest conflictLosersToResolvesCount]
  -[CKDPRecordSaveRequest clearConflictLosersToResolves]
  -[CKDPRecordSaveRequest conflictLosersToResolveAtIndex:]
  -[CKDPRecordSaveRequest setShareIDUpdate:]
  -[CKDPRecordSaveRequest setParentChainProtectionInfoTag:]
  -[CKDPRecordSaveRequest setHasMerge:]
  -[CKDPRecordSaveRequest hasMerge]
  -[CKDPRecordSaveRequest hasConflictLoserUpdate]
  -[CKDPRecordSaveRequest saveSemantics]
  -[CKDPRecordSaveRequest setSaveSemantics:]
  -[CKDPRecordSaveRequest setHasSaveSemantics:]
  -[CKDPRecordSaveRequest hasSaveSemantics]
  -[CKDPRecordSaveRequest saveSemanticsAsString:]
  -[CKDPRecordSaveRequest StringAsSaveSemantics:]
  -[CKDPRecordSaveRequest hasRecordProtectionInfoTag]
  -[CKDPRecordSaveRequest hasShareEtag]
  -[CKDPRecordSaveRequest hasShareIDUpdate]
  -[CKDPRecordSaveRequest hasParentChainProtectionInfoTag]
  -[CKDPRecordSaveRequest fieldsToDeleteIfExistOnMerges]
  -[CKDPRecordSaveRequest setFieldsToDeleteIfExistOnMerges:]
  -[CKDPRecordSaveRequest conflictLoserUpdate]
  -[CKDPRecordSaveRequest recordProtectionInfoTag]
  -[CKDPRecordSaveRequest conflictLosersToResolves]
  -[CKDPRecordSaveRequest setConflictLosersToResolves:]
  -[CKDPRecordSaveRequest shareIDUpdate]
  -[CKDPRecordSaveRequest parentChainProtectionInfoTag]


CKDClientInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *hostname

  // class methods
  +[CKDClientInfo sharedClientInfo]

  // instance methods
  -[CKDClientInfo init]
  -[CKDClientInfo dealloc]
  -[CKDClientInfo .cxx_destruct]
  -[CKDClientInfo _init]
  -[CKDClientInfo hostname]
  -[CKDClientInfo _refreshHostname]


CKDPRequestOperationHeader : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasUserToken
 @property  NSString *userToken
 @property  BOOL hasApplicationContainer
 @property  NSString *applicationContainer
 @property  BOOL hasApplicationBundle
 @property  NSString *applicationBundle
 @property  BOOL hasApplicationVersion
 @property  NSString *applicationVersion
 @property  BOOL hasApplicationConfigVersion
 @property  unsigned long applicationConfigVersion
 @property  BOOL hasGlobalConfigVersion
 @property  unsigned long globalConfigVersion
 @property  BOOL hasDeviceIdentifier
 @property  CKDPIdentifier *deviceIdentifier
 @property  BOOL hasDeviceSoftwareVersion
 @property  NSString *deviceSoftwareVersion
 @property  BOOL hasDeviceHardwareVersion
 @property  NSString *deviceHardwareVersion
 @property  BOOL hasDeviceLibraryName
 @property  NSString *deviceLibraryName
 @property  BOOL hasDeviceLibraryVersion
 @property  NSString *deviceLibraryVersion
 @property  BOOL hasDeviceFlowControlKey
 @property  NSString *deviceFlowControlKey
 @property  BOOL hasDeviceFlowControlBudget
 @property  unsigned long deviceFlowControlBudget
 @property  BOOL hasDeviceFlowControlBudgetCap
 @property  unsigned long deviceFlowControlBudgetCap
 @property  BOOL hasDeviceFlowControlRegeneration
 @property  float deviceFlowControlRegeneration
 @property  BOOL hasDeviceProtocolVersion
 @property  unsigned long deviceProtocolVersion
 @property  BOOL hasLocale
 @property  CKDPLocale *locale
 @property  BOOL hasMmcsProtocolVersion
 @property  NSString *mmcsProtocolVersion
 @property  BOOL hasApplicationContainerEnvironment
 @property  int applicationContainerEnvironment
 @property  BOOL hasClientChangeToken
 @property  NSData *clientChangeToken
 @property  BOOL hasDeviceAssignedName
 @property  NSString *deviceAssignedName
 @property  BOOL hasDeviceHardwareID
 @property  NSString *deviceHardwareID
 @property  BOOL hasTargetDatabase
 @property  int targetDatabase
 @property  BOOL hasUserIDContainerID
 @property  NSString *userIDContainerID
 @property  BOOL hasIsolationLevel
 @property  int isolationLevel
 @property  BOOL hasOperationGroupName
 @property  NSString *operationGroupName
 @property  BOOL hasOperationGroupQuantity
 @property  unsigned long operationGroupQuantity
 @property  NSMutableArray *serviceIdentityKeyIDs
 @property  BOOL hasDeviceSoftwareIsAppleInternal
 @property  BOOL deviceSoftwareIsAppleInternal
 @property  BOOL hasAssetAuthorizeGetRequestOptions
 @property  CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions *assetAuthorizeGetRequestOptions

  // class methods
  +[CKDPRequestOperationHeader serviceIdentityKeyIDsType]

  // instance methods
  -[CKDPRequestOperationHeader isEqual:]
  -[CKDPRequestOperationHeader copyWithZone:]
  -[CKDPRequestOperationHeader setLocale:]
  -[CKDPRequestOperationHeader .cxx_destruct]
  -[CKDPRequestOperationHeader locale]
  -[CKDPRequestOperationHeader dictionaryRepresentation]
  -[CKDPRequestOperationHeader writeTo:]
  -[CKDPRequestOperationHeader deviceIdentifier]
  -[CKDPRequestOperationHeader setDeviceIdentifier:]
  -[CKDPRequestOperationHeader mergeFrom:]
  -[CKDPRequestOperationHeader readFrom:]
  -[CKDPRequestOperationHeader copyTo:]
  -[CKDPRequestOperationHeader setApplicationVersion:]
  -[CKDPRequestOperationHeader clientChangeToken]
  -[CKDPRequestOperationHeader setClientChangeToken:]
  -[CKDPRequestOperationHeader operationGroupName]
  -[CKDPRequestOperationHeader hasLocale]
  -[CKDPRequestOperationHeader applicationVersion]
  -[CKDPRequestOperationHeader hasDeviceIdentifier]
  -[CKDPRequestOperationHeader userToken]
  -[CKDPRequestOperationHeader setUserToken:]
  -[CKDPRequestOperationHeader deviceSoftwareVersion]
  -[CKDPRequestOperationHeader setApplicationBundle:]
  -[CKDPRequestOperationHeader setApplicationContainer:]
  -[CKDPRequestOperationHeader setApplicationContainerEnvironment:]
  -[CKDPRequestOperationHeader setTargetDatabase:]
  -[CKDPRequestOperationHeader setDeviceHardwareVersion:]
  -[CKDPRequestOperationHeader setDeviceSoftwareVersion:]
  -[CKDPRequestOperationHeader setDeviceLibraryName:]
  -[CKDPRequestOperationHeader setDeviceLibraryVersion:]
  -[CKDPRequestOperationHeader setDeviceFlowControlKey:]
  -[CKDPRequestOperationHeader setMmcsProtocolVersion:]
  -[CKDPRequestOperationHeader setDeviceAssignedName:]
  -[CKDPRequestOperationHeader setDeviceHardwareID:]
  -[CKDPRequestOperationHeader setUserIDContainerID:]
  -[CKDPRequestOperationHeader hasApplicationContainer]
  -[CKDPRequestOperationHeader hasApplicationBundle]
  -[CKDPRequestOperationHeader hasApplicationVersion]
  -[CKDPRequestOperationHeader setApplicationConfigVersion:]
  -[CKDPRequestOperationHeader setHasApplicationConfigVersion:]
  -[CKDPRequestOperationHeader hasApplicationConfigVersion]
  -[CKDPRequestOperationHeader setGlobalConfigVersion:]
  -[CKDPRequestOperationHeader setHasGlobalConfigVersion:]
  -[CKDPRequestOperationHeader hasGlobalConfigVersion]
  -[CKDPRequestOperationHeader hasDeviceSoftwareVersion]
  -[CKDPRequestOperationHeader hasDeviceHardwareVersion]
  -[CKDPRequestOperationHeader hasDeviceLibraryName]
  -[CKDPRequestOperationHeader hasDeviceLibraryVersion]
  -[CKDPRequestOperationHeader hasDeviceFlowControlKey]
  -[CKDPRequestOperationHeader setDeviceFlowControlBudget:]
  -[CKDPRequestOperationHeader setHasDeviceFlowControlBudget:]
  -[CKDPRequestOperationHeader hasDeviceFlowControlBudget]
  -[CKDPRequestOperationHeader setDeviceFlowControlBudgetCap:]
  -[CKDPRequestOperationHeader setHasDeviceFlowControlBudgetCap:]
  -[CKDPRequestOperationHeader hasDeviceFlowControlBudgetCap]
  -[CKDPRequestOperationHeader setDeviceFlowControlRegeneration:]
  -[CKDPRequestOperationHeader setHasDeviceFlowControlRegeneration:]
  -[CKDPRequestOperationHeader hasDeviceFlowControlRegeneration]
  -[CKDPRequestOperationHeader setDeviceProtocolVersion:]
  -[CKDPRequestOperationHeader setHasDeviceProtocolVersion:]
  -[CKDPRequestOperationHeader hasDeviceProtocolVersion]
  -[CKDPRequestOperationHeader hasMmcsProtocolVersion]
  -[CKDPRequestOperationHeader applicationContainerEnvironment]
  -[CKDPRequestOperationHeader setHasApplicationContainerEnvironment:]
  -[CKDPRequestOperationHeader hasApplicationContainerEnvironment]
  -[CKDPRequestOperationHeader hasClientChangeToken]
  -[CKDPRequestOperationHeader hasDeviceAssignedName]
  -[CKDPRequestOperationHeader hasDeviceHardwareID]
  -[CKDPRequestOperationHeader targetDatabase]
  -[CKDPRequestOperationHeader setHasTargetDatabase:]
  -[CKDPRequestOperationHeader hasTargetDatabase]
  -[CKDPRequestOperationHeader hasUserIDContainerID]
  -[CKDPRequestOperationHeader isolationLevel]
  -[CKDPRequestOperationHeader setIsolationLevel:]
  -[CKDPRequestOperationHeader setHasIsolationLevel:]
  -[CKDPRequestOperationHeader hasIsolationLevel]
  -[CKDPRequestOperationHeader applicationContainer]
  -[CKDPRequestOperationHeader applicationBundle]
  -[CKDPRequestOperationHeader applicationConfigVersion]
  -[CKDPRequestOperationHeader globalConfigVersion]
  -[CKDPRequestOperationHeader deviceHardwareVersion]
  -[CKDPRequestOperationHeader deviceLibraryName]
  -[CKDPRequestOperationHeader deviceLibraryVersion]
  -[CKDPRequestOperationHeader deviceFlowControlKey]
  -[CKDPRequestOperationHeader deviceFlowControlBudget]
  -[CKDPRequestOperationHeader deviceFlowControlBudgetCap]
  -[CKDPRequestOperationHeader deviceFlowControlRegeneration]
  -[CKDPRequestOperationHeader deviceProtocolVersion]
  -[CKDPRequestOperationHeader mmcsProtocolVersion]
  -[CKDPRequestOperationHeader deviceAssignedName]
  -[CKDPRequestOperationHeader deviceHardwareID]
  -[CKDPRequestOperationHeader userIDContainerID]
  -[CKDPRequestOperationHeader applicationContainerEnvironmentAsString:]
  -[CKDPRequestOperationHeader StringAsApplicationContainerEnvironment:]
  -[CKDPRequestOperationHeader setOperationGroupName:]
  -[CKDPRequestOperationHeader operationGroupQuantity]
  -[CKDPRequestOperationHeader setOperationGroupQuantity:]
  -[CKDPRequestOperationHeader setDeviceSoftwareIsAppleInternal:]
  -[CKDPRequestOperationHeader setAssetAuthorizeGetRequestOptions:]
  -[CKDPRequestOperationHeader assetAuthorizeGetRequestOptions]
  -[CKDPRequestOperationHeader addServiceIdentityKeyIDs:]
  -[CKDPRequestOperationHeader serviceIdentityKeyIDsCount]
  -[CKDPRequestOperationHeader clearServiceIdentityKeyIDs]
  -[CKDPRequestOperationHeader serviceIdentityKeyIDsAtIndex:]
  -[CKDPRequestOperationHeader hasUserToken]
  -[CKDPRequestOperationHeader targetDatabaseAsString:]
  -[CKDPRequestOperationHeader StringAsTargetDatabase:]
  -[CKDPRequestOperationHeader isolationLevelAsString:]
  -[CKDPRequestOperationHeader StringAsIsolationLevel:]
  -[CKDPRequestOperationHeader hasOperationGroupName]
  -[CKDPRequestOperationHeader setHasOperationGroupQuantity:]
  -[CKDPRequestOperationHeader hasOperationGroupQuantity]
  -[CKDPRequestOperationHeader setHasDeviceSoftwareIsAppleInternal:]
  -[CKDPRequestOperationHeader hasDeviceSoftwareIsAppleInternal]
  -[CKDPRequestOperationHeader hasAssetAuthorizeGetRequestOptions]
  -[CKDPRequestOperationHeader serviceIdentityKeyIDs]
  -[CKDPRequestOperationHeader setServiceIdentityKeyIDs:]
  -[CKDPRequestOperationHeader deviceSoftwareIsAppleInternal]
  -[CKDPRequestOperationHeader _applicationContainerEnvironmentCKLogValue]
  -[CKDPRequestOperationHeader _isolationLevelCKLogValue]
  -[CKDPRequestOperationHeader _targetDatabaseCKLogValue]


CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRecordId
 @property  CKDPRecordIdentifier *recordId
 @property  BOOL hasType
 @property  CKDPRecordType *type
 @property  NSMutableArray *assetFields

  // class methods
  +[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload assetFieldsType]

  // instance methods
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload isEqual:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload copyWithZone:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload type]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload setType:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload .cxx_destruct]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload dictionaryRepresentation]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload writeTo:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload mergeFrom:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload readFrom:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload copyTo:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload hasType]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload recordId]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload setRecordId:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload setAssetFields:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload assetFields]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload addAssetFields:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload assetFieldsCount]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload clearAssetFields]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload assetFieldsAtIndex:]
  -[CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload hasRecordId]


CKDPResponseOperation : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasShareVettingInitiateResponse
 @property  CKDPShareVettingInitiateResponse *shareVettingInitiateResponse
 @property  BOOL hasZoneSaveResponse
 @property  CKDPZoneSaveResponse *zoneSaveResponse
 @property  BOOL hasZoneRetrieveResponse
 @property  CKDPZoneRetrieveResponse *zoneRetrieveResponse
 @property  BOOL hasZoneDeleteResponse
 @property  CKDPZoneDeleteResponse *zoneDeleteResponse
 @property  BOOL hasZoneRetrieveChangesResponse
 @property  CKDPZoneRetrieveChangesResponse *zoneRetrieveChangesResponse
 @property  BOOL hasRecordSaveResponse
 @property  CKDPRecordSaveResponse *recordSaveResponse
 @property  BOOL hasRecordRetrieveResponse
 @property  CKDPRecordRetrieveResponse *recordRetrieveResponse
 @property  BOOL hasRecordRetrieveVersionsResponse
 @property  CKDPRecordRetrieveVersionsResponse *recordRetrieveVersionsResponse
 @property  BOOL hasRecordRetrieveChangesResponse
 @property  CKDPRecordRetrieveChangesResponse *recordRetrieveChangesResponse
 @property  BOOL hasRecordDeleteResponse
 @property  CKDPRecordDeleteResponse *recordDeleteResponse
 @property  BOOL hasRecordResolveTokenResponse
 @property  CKDPRecordResolveTokenResponse *recordResolveTokenResponse
 @property  BOOL hasFetchArchivedRecordsResponse
 @property  CKDPFetchArchivedRecordsResponse *fetchArchivedRecordsResponse
 @property  BOOL hasUserAvailableQuotaResponse
 @property  CKDPUserAvailableQuotaResponse *userAvailableQuotaResponse
 @property  BOOL hasUserRetrieveResponse
 @property  CKDPUserRetrieveResponse *userRetrieveResponse
 @property  BOOL hasQueryRetrieveResponse
 @property  CKDPQueryRetrieveResponse *queryRetrieveResponse
 @property  BOOL hasAssetUploadTokenRetrieveResponse
 @property  CKDPAssetUploadTokenRetrieveResponse *assetUploadTokenRetrieveResponse
 @property  BOOL hasDeleteContainerResponse
 @property  CKDPDeleteContainerResponse *deleteContainerResponse
 @property  BOOL hasBundlesForContainerResponse
 @property  CKDPBundlesForContainerResponse *bundlesForContainerResponse
 @property  BOOL hasWebAuthTokenRetrieveResponse
 @property  CKDPWebAuthTokenRetrieveResponse *webAuthTokenRetrieveResponse
 @property  BOOL hasUpdateMissingAssetStatusResponse
 @property  CKDPUpdateMissingAssetStatusResponse *updateMissingAssetStatusResponse
 @property  BOOL hasShareAcceptResponse
 @property  CKDPShareAcceptResponse *shareAcceptResponse
 @property  BOOL hasFunctionInvokeResponse
 @property  CKDPCodeFunctionInvokeResponse *functionInvokeResponse
 @property  BOOL hasSubscriptionCreateResponse
 @property  CKDPSubscriptionCreateResponse *subscriptionCreateResponse
 @property  BOOL hasSubscriptionRetrieveResponse
 @property  CKDPSubscriptionRetrieveResponse *subscriptionRetrieveResponse
 @property  BOOL hasSubscriptionDeleteResponse
 @property  CKDPSubscriptionDeleteResponse *subscriptionDeleteResponse
 @property  BOOL hasArchiveRecordsResponse
 @property  CKDPArchiveRecordsResponse *archiveRecordsResponse
 @property  BOOL hasMarkAssetBrokenResponse
 @property  CKDPMarkAssetBrokenResponse *markAssetBrokenResponse
 @property  BOOL hasUserQueryResponse
 @property  CKDPUserQueryResponse *userQueryResponse
 @property  BOOL hasUserPrivacySettingsUpdateResponse
 @property  CKDPUserPrivacySettingsUpdateResponse *userPrivacySettingsUpdateResponse
 @property  BOOL hasUserPrivacySettingsResetResponse
 @property  CKDPUserPrivacySettingsResetResponse *userPrivacySettingsResetResponse
 @property  BOOL hasUserPrivacySettingsBatchLookupResponse
 @property  CKDPUserPrivacySettingsBatchLookupResponse *userPrivacySettingsBatchLookupResponse
 @property  BOOL hasUserPrivacySettingsRetrieveResponse
 @property  CKDPUserPrivacySettingsRetrieveResponse *userPrivacySettingsRetrieveResponse
 @property  BOOL hasTokenRegistrationResponse
 @property  CKDPTokenRegistrationResponse *tokenRegistrationResponse
 @property  BOOL hasTokenUnregistrationResponse
 @property  CKDPTokenUnregistrationResponse *tokenUnregistrationResponse
 @property  BOOL hasSetBadgeCountResponse
 @property  CKDPSetBadgeCountResponse *setBadgeCountResponse
 @property  BOOL hasNotificationSyncResponse
 @property  CKDPNotificationSyncResponse *notificationSyncResponse
 @property  BOOL hasNotificationMarkReadResponse
 @property  CKDPNotificationMarkReadResponse *notificationMarkReadResponse
 @property  BOOL hasOperationCost
 @property  unsigned int operationCost
 @property  BOOL hasResponse
 @property  CKDPOperation *response
 @property  BOOL hasResult
 @property  CKDPResponseOperationResult *result
 @property  BOOL hasHeader
 @property  CKDPResponseOperationHeader *header

  // instance methods
  -[CKDPResponseOperation isEqual:]
  -[CKDPResponseOperation copyWithZone:]
  -[CKDPResponseOperation .cxx_destruct]
  -[CKDPResponseOperation dictionaryRepresentation]
  -[CKDPResponseOperation result]
  -[CKDPResponseOperation setResult:]
  -[CKDPResponseOperation writeTo:]
  -[CKDPResponseOperation mergeFrom:]
  -[CKDPResponseOperation readFrom:]
  -[CKDPResponseOperation copyTo:]
  -[CKDPResponseOperation response]
  -[CKDPResponseOperation setResponse:]
  -[CKDPResponseOperation header]
  -[CKDPResponseOperation setHeader:]
  -[CKDPResponseOperation hasResponse]
  -[CKDPResponseOperation hasHeader]
  -[CKDPResponseOperation hasResult]
  -[CKDPResponseOperation setRecordRetrieveResponse:]
  -[CKDPResponseOperation setQueryRetrieveResponse:]
  -[CKDPResponseOperation setOperationCost:]
  -[CKDPResponseOperation setHasOperationCost:]
  -[CKDPResponseOperation hasOperationCost]
  -[CKDPResponseOperation operationCost]
  -[CKDPResponseOperation hasRecordRetrieveResponse]
  -[CKDPResponseOperation recordRetrieveResponse]
  -[CKDPResponseOperation hasQueryRetrieveResponse]
  -[CKDPResponseOperation queryRetrieveResponse]
  -[CKDPResponseOperation hasAssetUploadTokenRetrieveResponse]
  -[CKDPResponseOperation assetUploadTokenRetrieveResponse]
  -[CKDPResponseOperation hasShareVettingInitiateResponse]
  -[CKDPResponseOperation shareVettingInitiateResponse]
  -[CKDPResponseOperation hasRecordResolveTokenResponse]
  -[CKDPResponseOperation recordResolveTokenResponse]
  -[CKDPResponseOperation setZoneSaveResponse:]
  -[CKDPResponseOperation setZoneRetrieveResponse:]
  -[CKDPResponseOperation setZoneDeleteResponse:]
  -[CKDPResponseOperation setZoneRetrieveChangesResponse:]
  -[CKDPResponseOperation setRecordSaveResponse:]
  -[CKDPResponseOperation setRecordRetrieveVersionsResponse:]
  -[CKDPResponseOperation setRecordRetrieveChangesResponse:]
  -[CKDPResponseOperation setRecordDeleteResponse:]
  -[CKDPResponseOperation setRecordResolveTokenResponse:]
  -[CKDPResponseOperation setFetchArchivedRecordsResponse:]
  -[CKDPResponseOperation setAssetUploadTokenRetrieveResponse:]
  -[CKDPResponseOperation setDeleteContainerResponse:]
  -[CKDPResponseOperation setUserAvailableQuotaResponse:]
  -[CKDPResponseOperation setBundlesForContainerResponse:]
  -[CKDPResponseOperation setWebAuthTokenRetrieveResponse:]
  -[CKDPResponseOperation setUpdateMissingAssetStatusResponse:]
  -[CKDPResponseOperation setSubscriptionCreateResponse:]
  -[CKDPResponseOperation setSubscriptionRetrieveResponse:]
  -[CKDPResponseOperation setSubscriptionDeleteResponse:]
  -[CKDPResponseOperation setUserRetrieveResponse:]
  -[CKDPResponseOperation setUserQueryResponse:]
  -[CKDPResponseOperation setUserPrivacySettingsRetrieveResponse:]
  -[CKDPResponseOperation setUserPrivacySettingsUpdateResponse:]
  -[CKDPResponseOperation setUserPrivacySettingsResetResponse:]
  -[CKDPResponseOperation setUserPrivacySettingsBatchLookupResponse:]
  -[CKDPResponseOperation setShareAcceptResponse:]
  -[CKDPResponseOperation setShareVettingInitiateResponse:]
  -[CKDPResponseOperation setTokenRegistrationResponse:]
  -[CKDPResponseOperation setTokenUnregistrationResponse:]
  -[CKDPResponseOperation setSetBadgeCountResponse:]
  -[CKDPResponseOperation setNotificationSyncResponse:]
  -[CKDPResponseOperation setNotificationMarkReadResponse:]
  -[CKDPResponseOperation setArchiveRecordsResponse:]
  -[CKDPResponseOperation setMarkAssetBrokenResponse:]
  -[CKDPResponseOperation setFunctionInvokeResponse:]
  -[CKDPResponseOperation hasZoneSaveResponse]
  -[CKDPResponseOperation zoneSaveResponse]
  -[CKDPResponseOperation hasZoneRetrieveResponse]
  -[CKDPResponseOperation zoneRetrieveResponse]
  -[CKDPResponseOperation hasZoneDeleteResponse]
  -[CKDPResponseOperation zoneDeleteResponse]
  -[CKDPResponseOperation hasZoneRetrieveChangesResponse]
  -[CKDPResponseOperation zoneRetrieveChangesResponse]
  -[CKDPResponseOperation hasRecordSaveResponse]
  -[CKDPResponseOperation recordSaveResponse]
  -[CKDPResponseOperation hasRecordRetrieveVersionsResponse]
  -[CKDPResponseOperation recordRetrieveVersionsResponse]
  -[CKDPResponseOperation hasRecordRetrieveChangesResponse]
  -[CKDPResponseOperation recordRetrieveChangesResponse]
  -[CKDPResponseOperation hasRecordDeleteResponse]
  -[CKDPResponseOperation recordDeleteResponse]
  -[CKDPResponseOperation hasFetchArchivedRecordsResponse]
  -[CKDPResponseOperation fetchArchivedRecordsResponse]
  -[CKDPResponseOperation hasUserAvailableQuotaResponse]
  -[CKDPResponseOperation userAvailableQuotaResponse]
  -[CKDPResponseOperation hasUserRetrieveResponse]
  -[CKDPResponseOperation userRetrieveResponse]
  -[CKDPResponseOperation hasDeleteContainerResponse]
  -[CKDPResponseOperation deleteContainerResponse]
  -[CKDPResponseOperation hasBundlesForContainerResponse]
  -[CKDPResponseOperation bundlesForContainerResponse]
  -[CKDPResponseOperation hasWebAuthTokenRetrieveResponse]
  -[CKDPResponseOperation webAuthTokenRetrieveResponse]
  -[CKDPResponseOperation hasUpdateMissingAssetStatusResponse]
  -[CKDPResponseOperation updateMissingAssetStatusResponse]
  -[CKDPResponseOperation hasShareAcceptResponse]
  -[CKDPResponseOperation shareAcceptResponse]
  -[CKDPResponseOperation hasFunctionInvokeResponse]
  -[CKDPResponseOperation functionInvokeResponse]
  -[CKDPResponseOperation hasSubscriptionCreateResponse]
  -[CKDPResponseOperation subscriptionCreateResponse]
  -[CKDPResponseOperation hasSubscriptionRetrieveResponse]
  -[CKDPResponseOperation subscriptionRetrieveResponse]
  -[CKDPResponseOperation hasSubscriptionDeleteResponse]
  -[CKDPResponseOperation subscriptionDeleteResponse]
  -[CKDPResponseOperation hasArchiveRecordsResponse]
  -[CKDPResponseOperation archiveRecordsResponse]
  -[CKDPResponseOperation hasMarkAssetBrokenResponse]
  -[CKDPResponseOperation markAssetBrokenResponse]
  -[CKDPResponseOperation hasUserQueryResponse]
  -[CKDPResponseOperation userQueryResponse]
  -[CKDPResponseOperation hasUserPrivacySettingsUpdateResponse]
  -[CKDPResponseOperation userPrivacySettingsUpdateResponse]
  -[CKDPResponseOperation hasUserPrivacySettingsResetResponse]
  -[CKDPResponseOperation userPrivacySettingsResetResponse]
  -[CKDPResponseOperation hasUserPrivacySettingsBatchLookupResponse]
  -[CKDPResponseOperation userPrivacySettingsBatchLookupResponse]
  -[CKDPResponseOperation hasUserPrivacySettingsRetrieveResponse]
  -[CKDPResponseOperation userPrivacySettingsRetrieveResponse]
  -[CKDPResponseOperation hasTokenRegistrationResponse]
  -[CKDPResponseOperation tokenRegistrationResponse]
  -[CKDPResponseOperation hasTokenUnregistrationResponse]
  -[CKDPResponseOperation tokenUnregistrationResponse]
  -[CKDPResponseOperation hasSetBadgeCountResponse]
  -[CKDPResponseOperation setBadgeCountResponse]
  -[CKDPResponseOperation hasNotificationSyncResponse]
  -[CKDPResponseOperation notificationSyncResponse]
  -[CKDPResponseOperation hasNotificationMarkReadResponse]
  -[CKDPResponseOperation notificationMarkReadResponse]


CKDPRecordRetrieveVersionsResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIsDeleted
 @property  BOOL isDeleted
 @property  NSMutableArray *recordVersions

  // class methods
  +[CKDPRecordRetrieveVersionsResponse recordVersionsType]

  // instance methods
  -[CKDPRecordRetrieveVersionsResponse isEqual:]
  -[CKDPRecordRetrieveVersionsResponse copyWithZone:]
  -[CKDPRecordRetrieveVersionsResponse .cxx_destruct]
  -[CKDPRecordRetrieveVersionsResponse dictionaryRepresentation]
  -[CKDPRecordRetrieveVersionsResponse writeTo:]
  -[CKDPRecordRetrieveVersionsResponse mergeFrom:]
  -[CKDPRecordRetrieveVersionsResponse readFrom:]
  -[CKDPRecordRetrieveVersionsResponse copyTo:]
  -[CKDPRecordRetrieveVersionsResponse isDeleted]
  -[CKDPRecordRetrieveVersionsResponse setIsDeleted:]
  -[CKDPRecordRetrieveVersionsResponse addRecordVersions:]
  -[CKDPRecordRetrieveVersionsResponse recordVersionsCount]
  -[CKDPRecordRetrieveVersionsResponse clearRecordVersions]
  -[CKDPRecordRetrieveVersionsResponse recordVersionsAtIndex:]
  -[CKDPRecordRetrieveVersionsResponse setHasIsDeleted:]
  -[CKDPRecordRetrieveVersionsResponse hasIsDeleted]
  -[CKDPRecordRetrieveVersionsResponse recordVersions]
  -[CKDPRecordRetrieveVersionsResponse setRecordVersions:]


CKDPCSNotifier : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CKDPCSNotifier sharedNotifier]

  // instance methods
  -[CKDPCSNotifier init]
  -[CKDPCSNotifier dealloc]


CKDMMCSEncryptedItemReader : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDMMCSItemReaderWriterProtocol>
 @property  CKDMMCSItemGroupContext *MMCSRequest
 @property  CKDMMCSItem *MMCSItem
 @property  ^{_mkbbackupref=} handle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDMMCSEncryptedItemReader dealloc]
  -[CKDMMCSEncryptedItemReader .cxx_destruct]
  -[CKDMMCSEncryptedItemReader handle]
  -[CKDMMCSEncryptedItemReader openWithError:]
  -[CKDMMCSEncryptedItemReader setHandle:]
  -[CKDMMCSEncryptedItemReader closeWithError:]
  -[CKDMMCSEncryptedItemReader MMCSRequest]
  -[CKDMMCSEncryptedItemReader MMCSItem]
  -[CKDMMCSEncryptedItemReader getFileMetadataWithError:]
  -[CKDMMCSEncryptedItemReader readBytesAtOffset:bytes:length:bytesRead:error:]
  -[CKDMMCSEncryptedItemReader writeBytesAtOffset:bytes:length:bytesWritten:error:]
  -[CKDMMCSEncryptedItemReader initWithMMCSItem:MMCSRequest:]
  -[CKDMMCSEncryptedItemReader setMMCSRequest:]
  -[CKDMMCSEncryptedItemReader setMMCSItem:]


CKDPOperation : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasOperationUUID
 @property  NSString *operationUUID
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasSynchronousMode
 @property  BOOL synchronousMode
 @property  BOOL hasLast
 @property  BOOL last

  // instance methods
  -[CKDPOperation isEqual:]
  -[CKDPOperation copyWithZone:]
  -[CKDPOperation type]
  -[CKDPOperation setType:]
  -[CKDPOperation .cxx_destruct]
  -[CKDPOperation dictionaryRepresentation]
  -[CKDPOperation synchronousMode]
  -[CKDPOperation setSynchronousMode:]
  -[CKDPOperation writeTo:]
  -[CKDPOperation mergeFrom:]
  -[CKDPOperation readFrom:]
  -[CKDPOperation copyTo:]
  -[CKDPOperation typeAsString:]
  -[CKDPOperation StringAsType:]
  -[CKDPOperation setLast:]
  -[CKDPOperation setOperationUUID:]
  -[CKDPOperation setHasType:]
  -[CKDPOperation hasType]
  -[CKDPOperation last]
  -[CKDPOperation operationUUID]
  -[CKDPOperation hasOperationUUID]
  -[CKDPOperation setHasSynchronousMode:]
  -[CKDPOperation hasSynchronousMode]
  -[CKDPOperation setHasLast:]
  -[CKDPOperation hasLast]
  -[CKDPOperation _CKLogToFileHandle:atDepth:]


CKDProtobufResponseBodyParser : CKDResponseBodyParser
 @property  NSMutableData *tailParserData
 @property  unsigned long curObjectLength
 @property  BOOL isParsing
 @property  Class messageClass
 @property  BOOL parsingStandaloneMessage

  // instance methods
  -[CKDProtobufResponseBodyParser .cxx_destruct]
  -[CKDProtobufResponseBodyParser initWithQoS:]
  -[CKDProtobufResponseBodyParser processData:]
  -[CKDProtobufResponseBodyParser messageClass]
  -[CKDProtobufResponseBodyParser setMessageClass:]
  -[CKDProtobufResponseBodyParser finishWithCompletion:]
  -[CKDProtobufResponseBodyParser parsingStandaloneMessage]
  -[CKDProtobufResponseBodyParser setParsingStandaloneMessage:]
  -[CKDProtobufResponseBodyParser curObjectLength]
  -[CKDProtobufResponseBodyParser setCurObjectLength:]
  -[CKDProtobufResponseBodyParser _parseObjectFromData:rawData:]
  -[CKDProtobufResponseBodyParser setTailParserData:]
  -[CKDProtobufResponseBodyParser isParsing]
  -[CKDProtobufResponseBodyParser setIsParsing:]
  -[CKDProtobufResponseBodyParser tailParserData]
  -[CKDProtobufResponseBodyParser _parseObjects:]


CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasHeaderKey
 @property  NSString *headerKey
 @property  BOOL hasHeaderValue
 @property  NSString *headerValue

  // instance methods
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo isEqual:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo copyWithZone:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo .cxx_destruct]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo dictionaryRepresentation]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo writeTo:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo mergeFrom:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo readFrom:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo copyTo:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo setHeaderKey:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo setHeaderValue:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo headerKey]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo headerValue]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo hasHeaderKey]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo hasHeaderValue]


CKDModifySubscriptionsOperation : CKDDatabaseOperation
 @property  NSArray *subscriptionsToSave
 @property  NSArray *subscriptionIDsToDelete
 @property  NSMutableDictionary *subscriptionsByServerID
 @property  @? saveCompletionBlock
 @property  @? deleteCompletionBlock

  // class methods
  +[CKDModifySubscriptionsOperation isPredominatelyDownload]

  // instance methods
  -[CKDModifySubscriptionsOperation .cxx_destruct]
  -[CKDModifySubscriptionsOperation main]
  -[CKDModifySubscriptionsOperation setSubscriptionsToSave:]
  -[CKDModifySubscriptionsOperation _finishOnCallbackQueueWithError:]
  -[CKDModifySubscriptionsOperation activityCreate]
  -[CKDModifySubscriptionsOperation subscriptionsToSave]
  -[CKDModifySubscriptionsOperation subscriptionIDsToDelete]
  -[CKDModifySubscriptionsOperation setSubscriptionIDsToDelete:]
  -[CKDModifySubscriptionsOperation saveCompletionBlock]
  -[CKDModifySubscriptionsOperation initWithOperationInfo:clientContext:]
  -[CKDModifySubscriptionsOperation setSaveCompletionBlock:]
  -[CKDModifySubscriptionsOperation setDeleteCompletionBlock:]
  -[CKDModifySubscriptionsOperation deleteCompletionBlock]
  -[CKDModifySubscriptionsOperation _handleSubscriptionSaved:error:]
  -[CKDModifySubscriptionsOperation subscriptionsByServerID]
  -[CKDModifySubscriptionsOperation _handleSubscriptionSaved:responseCode:]
  -[CKDModifySubscriptionsOperation _handleSubscriptionDeleted:responseCode:]
  -[CKDModifySubscriptionsOperation setSubscriptionsByServerID:]


CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *contentRequestHeaders
 @property  BOOL hasContentRequestAuthorizeGetOptions
 @property  unsigned long contentRequestAuthorizeGetOptions

  // class methods
  +[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions contentRequestHeadersType]

  // instance methods
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions isEqual:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions copyWithZone:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions .cxx_destruct]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions dictionaryRepresentation]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions writeTo:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions mergeFrom:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions readFrom:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions copyTo:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions setContentRequestAuthorizeGetOptions:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions setContentRequestHeaders:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions contentRequestHeaders]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions addContentRequestHeaders:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions contentRequestHeadersCount]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions clearContentRequestHeaders]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions contentRequestHeadersAtIndex:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions setHasContentRequestAuthorizeGetOptions:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions hasContentRequestAuthorizeGetOptions]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions contentRequestAuthorizeGetOptions]


CKDPRecordRetrieveVersionsRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRecordIdentifier
 @property  CKDPRecordIdentifier *recordIdentifier
 @property  BOOL hasRequestedFields
 @property  CKDPRequestedFields *requestedFields
 @property  BOOL hasMinimumVersionEtag
 @property  NSString *minimumVersionEtag
 @property  BOOL hasAssetsToDownload
 @property  CKDPAssetsToDownload *assetsToDownload

  // class methods
  +[CKDPRecordRetrieveVersionsRequest options]

  // instance methods
  -[CKDPRecordRetrieveVersionsRequest isEqual:]
  -[CKDPRecordRetrieveVersionsRequest copyWithZone:]
  -[CKDPRecordRetrieveVersionsRequest .cxx_destruct]
  -[CKDPRecordRetrieveVersionsRequest dictionaryRepresentation]
  -[CKDPRecordRetrieveVersionsRequest writeTo:]
  -[CKDPRecordRetrieveVersionsRequest mergeFrom:]
  -[CKDPRecordRetrieveVersionsRequest readFrom:]
  -[CKDPRecordRetrieveVersionsRequest copyTo:]
  -[CKDPRecordRetrieveVersionsRequest requestTypeCode]
  -[CKDPRecordRetrieveVersionsRequest responseClass]
  -[CKDPRecordRetrieveVersionsRequest setRecordIdentifier:]
  -[CKDPRecordRetrieveVersionsRequest hasRecordIdentifier]
  -[CKDPRecordRetrieveVersionsRequest recordIdentifier]
  -[CKDPRecordRetrieveVersionsRequest requestedFields]
  -[CKDPRecordRetrieveVersionsRequest setRequestedFields:]
  -[CKDPRecordRetrieveVersionsRequest hasRequestedFields]
  -[CKDPRecordRetrieveVersionsRequest setAssetsToDownload:]
  -[CKDPRecordRetrieveVersionsRequest hasAssetsToDownload]
  -[CKDPRecordRetrieveVersionsRequest assetsToDownload]
  -[CKDPRecordRetrieveVersionsRequest setMinimumVersionEtag:]
  -[CKDPRecordRetrieveVersionsRequest hasMinimumVersionEtag]
  -[CKDPRecordRetrieveVersionsRequest minimumVersionEtag]


CKDPRecordRetrieveRequestRetrieveAssetURL : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasAssetFields
 @property  CKDPRequestedFields *assetFields
 @property  BOOL hasRequestedTTL
 @property  long long requestedTTL
 @property  BOOL hasType
 @property  int type

  // instance methods
  -[CKDPRecordRetrieveRequestRetrieveAssetURL isEqual:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL copyWithZone:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL type]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL setType:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL .cxx_destruct]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL dictionaryRepresentation]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL writeTo:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL mergeFrom:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL readFrom:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL copyTo:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL typeAsString:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL StringAsType:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL setHasType:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL hasType]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL requestedTTL]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL setRequestedTTL:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL setAssetFields:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL assetFields]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL hasAssetFields]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL setHasRequestedTTL:]
  -[CKDPRecordRetrieveRequestRetrieveAssetURL hasRequestedTTL]


CKDPCodeFunctionInvokeResponseAttestationResponseAttestation : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasAppQuote
 @property  NSData *appQuote
 @property  BOOL hasAqeQuote
 @property  NSData *aqeQuote
 @property  BOOL hasPckCertificate
 @property  NSString *pckCertificate
 @property  BOOL hasRoutingToken
 @property  NSData *routingToken

  // instance methods
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation isEqual:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation copyWithZone:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation .cxx_destruct]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation dictionaryRepresentation]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation writeTo:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation mergeFrom:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation readFrom:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation copyTo:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation setAppQuote:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation setAqeQuote:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation setPckCertificate:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation setRoutingToken:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation hasAppQuote]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation hasAqeQuote]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation hasPckCertificate]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation hasRoutingToken]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation appQuote]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation aqeQuote]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation pckCertificate]
  -[CKDPCodeFunctionInvokeResponseAttestationResponseAttestation routingToken]


CKDPBundlesForContainerResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *bundleIDs

  // class methods
  +[CKDPBundlesForContainerResponse bundleIDType]

  // instance methods
  -[CKDPBundlesForContainerResponse isEqual:]
  -[CKDPBundlesForContainerResponse copyWithZone:]
  -[CKDPBundlesForContainerResponse .cxx_destruct]
  -[CKDPBundlesForContainerResponse dictionaryRepresentation]
  -[CKDPBundlesForContainerResponse bundleIDs]
  -[CKDPBundlesForContainerResponse writeTo:]
  -[CKDPBundlesForContainerResponse mergeFrom:]
  -[CKDPBundlesForContainerResponse readFrom:]
  -[CKDPBundlesForContainerResponse copyTo:]
  -[CKDPBundlesForContainerResponse setBundleIDs:]
  -[CKDPBundlesForContainerResponse addBundleID:]
  -[CKDPBundlesForContainerResponse bundleIDsCount]
  -[CKDPBundlesForContainerResponse clearBundleIDs]
  -[CKDPBundlesForContainerResponse bundleIDAtIndex:]


CKDPRequestOperation : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasShareVettingInitiateRequest
 @property  CKDPShareVettingInitiateRequest *shareVettingInitiateRequest
 @property  BOOL hasZoneSaveRequest
 @property  CKDPZoneSaveRequest *zoneSaveRequest
 @property  BOOL hasZoneRetrieveRequest
 @property  CKDPZoneRetrieveRequest *zoneRetrieveRequest
 @property  BOOL hasZoneDeleteRequest
 @property  CKDPZoneDeleteRequest *zoneDeleteRequest
 @property  BOOL hasZoneRetrieveChangesRequest
 @property  CKDPZoneRetrieveChangesRequest *zoneRetrieveChangesRequest
 @property  BOOL hasRecordSaveRequest
 @property  CKDPRecordSaveRequest *recordSaveRequest
 @property  BOOL hasRecordRetrieveRequest
 @property  CKDPRecordRetrieveRequest *recordRetrieveRequest
 @property  BOOL hasRecordRetrieveVersionsRequest
 @property  CKDPRecordRetrieveVersionsRequest *recordRetrieveVersionsRequest
 @property  BOOL hasRecordRetrieveChangesRequest
 @property  CKDPRecordRetrieveChangesRequest *recordRetrieveChangesRequest
 @property  BOOL hasRecordDeleteRequest
 @property  CKDPRecordDeleteRequest *recordDeleteRequest
 @property  BOOL hasRecordResolveTokenRequest
 @property  CKDPRecordResolveTokenRequest *recordResolveTokenRequest
 @property  BOOL hasFetchArchivedRecordsRequest
 @property  CKDPFetchArchivedRecordsRequest *fetchArchivedRecordsRequest
 @property  BOOL hasUserAvailableQuotaRequest
 @property  CKDPUserAvailableQuotaRequest *userAvailableQuotaRequest
 @property  BOOL hasUserRetrieveRequest
 @property  CKDPUserRetrieveRequest *userRetrieveRequest
 @property  BOOL hasQueryRetrieveRequest
 @property  CKDPQueryRetrieveRequest *queryRetrieveRequest
 @property  BOOL hasAssetUploadTokenRetrieveRequest
 @property  CKDPAssetUploadTokenRetrieveRequest *assetUploadTokenRetrieveRequest
 @property  BOOL hasDeleteContainerRequest
 @property  CKDPDeleteContainerRequest *deleteContainerRequest
 @property  BOOL hasBundlesForContainerRequest
 @property  CKDPBundlesForContainerRequest *bundlesForContainerRequest
 @property  BOOL hasWebAuthTokenRetrieveRequest
 @property  CKDPWebAuthTokenRetrieveRequest *webAuthTokenRetrieveRequest
 @property  BOOL hasUpdateMissingAssetStatusRequest
 @property  CKDPUpdateMissingAssetStatusRequest *updateMissingAssetStatusRequest
 @property  BOOL hasShareAcceptRequest
 @property  CKDPShareAcceptRequest *shareAcceptRequest
 @property  BOOL hasFunctionInvokeRequest
 @property  CKDPCodeFunctionInvokeRequest *functionInvokeRequest
 @property  BOOL hasSubscriptionCreateRequest
 @property  CKDPSubscriptionCreateRequest *subscriptionCreateRequest
 @property  BOOL hasSubscriptionRetrieveRequest
 @property  CKDPSubscriptionRetrieveRequest *subscriptionRetrieveRequest
 @property  BOOL hasSubscriptionDeleteRequest
 @property  CKDPSubscriptionDeleteRequest *subscriptionDeleteRequest
 @property  BOOL hasArchiveRecordsRequest
 @property  CKDPArchiveRecordsRequest *archiveRecordsRequest
 @property  BOOL hasMarkAssetBrokenRequest
 @property  CKDPMarkAssetBrokenRequest *markAssetBrokenRequest
 @property  BOOL hasUserQueryRequest
 @property  CKDPUserQueryRequest *userQueryRequest
 @property  BOOL hasUserPrivacySettingsUpdateRequest
 @property  CKDPUserPrivacySettingsUpdateRequest *userPrivacySettingsUpdateRequest
 @property  BOOL hasUserPrivacySettingsResetRequest
 @property  CKDPUserPrivacySettingsResetRequest *userPrivacySettingsResetRequest
 @property  BOOL hasUserPrivacySettingsBatchLookupRequest
 @property  CKDPUserPrivacySettingsBatchLookupRequest *userPrivacySettingsBatchLookupRequest
 @property  BOOL hasUserPrivacySettingsRetrieveRequest
 @property  CKDPUserPrivacySettingsRetrieveRequest *userPrivacySettingsRetrieveRequest
 @property  BOOL hasTokenRegistrationRequest
 @property  CKDPTokenRegistrationRequest *tokenRegistrationRequest
 @property  BOOL hasTokenUnregistrationRequest
 @property  CKDPTokenUnregistrationRequest *tokenUnregistrationRequest
 @property  BOOL hasSetBadgeCountRequest
 @property  CKDPSetBadgeCountRequest *setBadgeCountRequest
 @property  BOOL hasNotificationSyncRequest
 @property  CKDPNotificationSyncRequest *notificationSyncRequest
 @property  BOOL hasNotificationMarkReadRequest
 @property  CKDPNotificationMarkReadRequest *notificationMarkReadRequest
 @property  BOOL hasHeader
 @property  CKDPRequestOperationHeader *header
 @property  BOOL hasRequest
 @property  CKDPOperation *request

  // instance methods
  -[CKDPRequestOperation isEqual:]
  -[CKDPRequestOperation copyWithZone:]
  -[CKDPRequestOperation .cxx_destruct]
  -[CKDPRequestOperation dictionaryRepresentation]
  -[CKDPRequestOperation writeTo:]
  -[CKDPRequestOperation mergeFrom:]
  -[CKDPRequestOperation readFrom:]
  -[CKDPRequestOperation copyTo:]
  -[CKDPRequestOperation setRequest:]
  -[CKDPRequestOperation request]
  -[CKDPRequestOperation header]
  -[CKDPRequestOperation setHeader:]
  -[CKDPRequestOperation hasRequest]
  -[CKDPRequestOperation hasHeader]
  -[CKDPRequestOperation queryRetrieveRequest]
  -[CKDPRequestOperation setQueryRetrieveRequest:]
  -[CKDPRequestOperation setRecordRetrieveRequest:]
  -[CKDPRequestOperation hasRecordRetrieveRequest]
  -[CKDPRequestOperation recordRetrieveRequest]
  -[CKDPRequestOperation hasQueryRetrieveRequest]
  -[CKDPRequestOperation setAssetUploadTokenRetrieveRequest:]
  -[CKDPRequestOperation assetUploadTokenRetrieveRequest]
  -[CKDPRequestOperation setShareVettingInitiateRequest:]
  -[CKDPRequestOperation shareVettingInitiateRequest]
  -[CKDPRequestOperation setRecordResolveTokenRequest:]
  -[CKDPRequestOperation recordResolveTokenRequest]
  -[CKDPRequestOperation setZoneSaveRequest:]
  -[CKDPRequestOperation setZoneRetrieveRequest:]
  -[CKDPRequestOperation setZoneDeleteRequest:]
  -[CKDPRequestOperation setZoneRetrieveChangesRequest:]
  -[CKDPRequestOperation setRecordSaveRequest:]
  -[CKDPRequestOperation setRecordRetrieveVersionsRequest:]
  -[CKDPRequestOperation setRecordRetrieveChangesRequest:]
  -[CKDPRequestOperation setRecordDeleteRequest:]
  -[CKDPRequestOperation setFetchArchivedRecordsRequest:]
  -[CKDPRequestOperation setDeleteContainerRequest:]
  -[CKDPRequestOperation setUserAvailableQuotaRequest:]
  -[CKDPRequestOperation setBundlesForContainerRequest:]
  -[CKDPRequestOperation setWebAuthTokenRetrieveRequest:]
  -[CKDPRequestOperation setUpdateMissingAssetStatusRequest:]
  -[CKDPRequestOperation setSubscriptionCreateRequest:]
  -[CKDPRequestOperation setSubscriptionRetrieveRequest:]
  -[CKDPRequestOperation setSubscriptionDeleteRequest:]
  -[CKDPRequestOperation setUserRetrieveRequest:]
  -[CKDPRequestOperation setUserQueryRequest:]
  -[CKDPRequestOperation setUserPrivacySettingsRetrieveRequest:]
  -[CKDPRequestOperation setUserPrivacySettingsUpdateRequest:]
  -[CKDPRequestOperation setUserPrivacySettingsResetRequest:]
  -[CKDPRequestOperation setUserPrivacySettingsBatchLookupRequest:]
  -[CKDPRequestOperation setShareAcceptRequest:]
  -[CKDPRequestOperation setTokenRegistrationRequest:]
  -[CKDPRequestOperation setTokenUnregistrationRequest:]
  -[CKDPRequestOperation setSetBadgeCountRequest:]
  -[CKDPRequestOperation setNotificationSyncRequest:]
  -[CKDPRequestOperation setNotificationMarkReadRequest:]
  -[CKDPRequestOperation setArchiveRecordsRequest:]
  -[CKDPRequestOperation setMarkAssetBrokenRequest:]
  -[CKDPRequestOperation setFunctionInvokeRequest:]
  -[CKDPRequestOperation hasShareVettingInitiateRequest]
  -[CKDPRequestOperation hasZoneSaveRequest]
  -[CKDPRequestOperation zoneSaveRequest]
  -[CKDPRequestOperation hasZoneRetrieveRequest]
  -[CKDPRequestOperation zoneRetrieveRequest]
  -[CKDPRequestOperation hasZoneDeleteRequest]
  -[CKDPRequestOperation zoneDeleteRequest]
  -[CKDPRequestOperation hasZoneRetrieveChangesRequest]
  -[CKDPRequestOperation zoneRetrieveChangesRequest]
  -[CKDPRequestOperation hasRecordSaveRequest]
  -[CKDPRequestOperation recordSaveRequest]
  -[CKDPRequestOperation hasRecordRetrieveVersionsRequest]
  -[CKDPRequestOperation recordRetrieveVersionsRequest]
  -[CKDPRequestOperation hasRecordRetrieveChangesRequest]
  -[CKDPRequestOperation recordRetrieveChangesRequest]
  -[CKDPRequestOperation hasRecordDeleteRequest]
  -[CKDPRequestOperation recordDeleteRequest]
  -[CKDPRequestOperation hasRecordResolveTokenRequest]
  -[CKDPRequestOperation hasFetchArchivedRecordsRequest]
  -[CKDPRequestOperation fetchArchivedRecordsRequest]
  -[CKDPRequestOperation hasUserAvailableQuotaRequest]
  -[CKDPRequestOperation userAvailableQuotaRequest]
  -[CKDPRequestOperation hasUserRetrieveRequest]
  -[CKDPRequestOperation userRetrieveRequest]
  -[CKDPRequestOperation hasAssetUploadTokenRetrieveRequest]
  -[CKDPRequestOperation hasDeleteContainerRequest]
  -[CKDPRequestOperation deleteContainerRequest]
  -[CKDPRequestOperation hasBundlesForContainerRequest]
  -[CKDPRequestOperation bundlesForContainerRequest]
  -[CKDPRequestOperation hasWebAuthTokenRetrieveRequest]
  -[CKDPRequestOperation webAuthTokenRetrieveRequest]
  -[CKDPRequestOperation hasUpdateMissingAssetStatusRequest]
  -[CKDPRequestOperation updateMissingAssetStatusRequest]
  -[CKDPRequestOperation hasShareAcceptRequest]
  -[CKDPRequestOperation shareAcceptRequest]
  -[CKDPRequestOperation hasFunctionInvokeRequest]
  -[CKDPRequestOperation functionInvokeRequest]
  -[CKDPRequestOperation hasSubscriptionCreateRequest]
  -[CKDPRequestOperation subscriptionCreateRequest]
  -[CKDPRequestOperation hasSubscriptionRetrieveRequest]
  -[CKDPRequestOperation subscriptionRetrieveRequest]
  -[CKDPRequestOperation hasSubscriptionDeleteRequest]
  -[CKDPRequestOperation subscriptionDeleteRequest]
  -[CKDPRequestOperation hasArchiveRecordsRequest]
  -[CKDPRequestOperation archiveRecordsRequest]
  -[CKDPRequestOperation hasMarkAssetBrokenRequest]
  -[CKDPRequestOperation markAssetBrokenRequest]
  -[CKDPRequestOperation hasUserQueryRequest]
  -[CKDPRequestOperation userQueryRequest]
  -[CKDPRequestOperation hasUserPrivacySettingsUpdateRequest]
  -[CKDPRequestOperation userPrivacySettingsUpdateRequest]
  -[CKDPRequestOperation hasUserPrivacySettingsResetRequest]
  -[CKDPRequestOperation userPrivacySettingsResetRequest]
  -[CKDPRequestOperation hasUserPrivacySettingsBatchLookupRequest]
  -[CKDPRequestOperation userPrivacySettingsBatchLookupRequest]
  -[CKDPRequestOperation hasUserPrivacySettingsRetrieveRequest]
  -[CKDPRequestOperation userPrivacySettingsRetrieveRequest]
  -[CKDPRequestOperation hasTokenRegistrationRequest]
  -[CKDPRequestOperation tokenRegistrationRequest]
  -[CKDPRequestOperation hasTokenUnregistrationRequest]
  -[CKDPRequestOperation tokenUnregistrationRequest]
  -[CKDPRequestOperation hasSetBadgeCountRequest]
  -[CKDPRequestOperation setBadgeCountRequest]
  -[CKDPRequestOperation hasNotificationSyncRequest]
  -[CKDPRequestOperation notificationSyncRequest]
  -[CKDPRequestOperation hasNotificationMarkReadRequest]
  -[CKDPRequestOperation notificationMarkReadRequest]


CKDMMCSGetOperationInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL shouldFetchAssetContentInMemory

  // instance methods
  -[CKDMMCSGetOperationInfo shouldFetchAssetContentInMemory]
  -[CKDMMCSGetOperationInfo setShouldFetchAssetContentInMemory:]


CKDPTokenRegistrationRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasTokenRegistrationBody
 @property  CKDPTokenRegistrationBody *tokenRegistrationBody

  // class methods
  +[CKDPTokenRegistrationRequest options]

  // instance methods
  -[CKDPTokenRegistrationRequest isEqual:]
  -[CKDPTokenRegistrationRequest copyWithZone:]
  -[CKDPTokenRegistrationRequest .cxx_destruct]
  -[CKDPTokenRegistrationRequest dictionaryRepresentation]
  -[CKDPTokenRegistrationRequest writeTo:]
  -[CKDPTokenRegistrationRequest mergeFrom:]
  -[CKDPTokenRegistrationRequest readFrom:]
  -[CKDPTokenRegistrationRequest copyTo:]
  -[CKDPTokenRegistrationRequest requestTypeCode]
  -[CKDPTokenRegistrationRequest responseClass]
  -[CKDPTokenRegistrationRequest setTokenRegistrationBody:]
  -[CKDPTokenRegistrationRequest hasTokenRegistrationBody]
  -[CKDPTokenRegistrationRequest tokenRegistrationBody]


CKDPPackageManifestHeader : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasVersion
 @property  int version
 @property  BOOL hasSignature
 @property  NSData *signature

  // instance methods
  -[CKDPPackageManifestHeader isEqual:]
  -[CKDPPackageManifestHeader copyWithZone:]
  -[CKDPPackageManifestHeader .cxx_destruct]
  -[CKDPPackageManifestHeader version]
  -[CKDPPackageManifestHeader dictionaryRepresentation]
  -[CKDPPackageManifestHeader setVersion:]
  -[CKDPPackageManifestHeader writeTo:]
  -[CKDPPackageManifestHeader mergeFrom:]
  -[CKDPPackageManifestHeader readFrom:]
  -[CKDPPackageManifestHeader copyTo:]
  -[CKDPPackageManifestHeader signature]
  -[CKDPPackageManifestHeader setSignature:]
  -[CKDPPackageManifestHeader hasVersion]
  -[CKDPPackageManifestHeader setHasVersion:]
  -[CKDPPackageManifestHeader hasSignature]


CKDPUserPrivacySettingsRetrieveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // class methods
  +[CKDPUserPrivacySettingsRetrieveRequest options]

  // instance methods
  -[CKDPUserPrivacySettingsRetrieveRequest isEqual:]
  -[CKDPUserPrivacySettingsRetrieveRequest copyWithZone:]
  -[CKDPUserPrivacySettingsRetrieveRequest dictionaryRepresentation]
  -[CKDPUserPrivacySettingsRetrieveRequest writeTo:]
  -[CKDPUserPrivacySettingsRetrieveRequest mergeFrom:]
  -[CKDPUserPrivacySettingsRetrieveRequest readFrom:]
  -[CKDPUserPrivacySettingsRetrieveRequest copyTo:]
  -[CKDPUserPrivacySettingsRetrieveRequest requestTypeCode]
  -[CKDPUserPrivacySettingsRetrieveRequest responseClass]


CKDInitiateParticipantVettingOperation : CKDOperation
 @property  CKShareMetadata *shareMetadata
 @property  NSData *encryptedKey
 @property  NSString *participantID
 @property  NSString *address
 @property  @? participantVettingProgressBlock

  // instance methods
  -[CKDInitiateParticipantVettingOperation .cxx_destruct]
  -[CKDInitiateParticipantVettingOperation main]
  -[CKDInitiateParticipantVettingOperation address]
  -[CKDInitiateParticipantVettingOperation shareMetadata]
  -[CKDInitiateParticipantVettingOperation participantID]
  -[CKDInitiateParticipantVettingOperation setParticipantID:]
  -[CKDInitiateParticipantVettingOperation setAddress:]
  -[CKDInitiateParticipantVettingOperation _finishOnCallbackQueueWithError:]
  -[CKDInitiateParticipantVettingOperation activityCreate]
  -[CKDInitiateParticipantVettingOperation setShareMetadata:]
  -[CKDInitiateParticipantVettingOperation encryptedKey]
  -[CKDInitiateParticipantVettingOperation setEncryptedKey:]
  -[CKDInitiateParticipantVettingOperation _sendRequest:]
  -[CKDInitiateParticipantVettingOperation initWithOperationInfo:clientContext:]
  -[CKDInitiateParticipantVettingOperation setParticipantVettingProgressBlock:]
  -[CKDInitiateParticipantVettingOperation participantVettingProgressBlock]
  -[CKDInitiateParticipantVettingOperation _addSelfIdentityToShareMetadataPublicPCS:forShareWithURL:error:]
  -[CKDInitiateParticipantVettingOperation _encryptedKeyDataWithShareMetadata:error:]
  -[CKDInitiateParticipantVettingOperation _handleVettingInitiationProgress:]


CKDPUserAlias : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasType
 @property  int type

  // instance methods
  -[CKDPUserAlias isEqual:]
  -[CKDPUserAlias copyWithZone:]
  -[CKDPUserAlias type]
  -[CKDPUserAlias setType:]
  -[CKDPUserAlias .cxx_destruct]
  -[CKDPUserAlias identifier]
  -[CKDPUserAlias setIdentifier:]
  -[CKDPUserAlias dictionaryRepresentation]
  -[CKDPUserAlias writeTo:]
  -[CKDPUserAlias mergeFrom:]
  -[CKDPUserAlias readFrom:]
  -[CKDPUserAlias copyTo:]
  -[CKDPUserAlias typeAsString:]
  -[CKDPUserAlias StringAsType:]
  -[CKDPUserAlias setHasType:]
  -[CKDPUserAlias hasType]
  -[CKDPUserAlias hasIdentifier]


CKDModifySubscriptionsURLRequest : CKDURLRequest
 @property  NSArray *subscriptionsToSave
 @property  NSArray *subscriptionIDsToDelete
 @property  NSMutableDictionary *subscriptionIDByRequestID
 @property  CKRecordZoneID *zoneID
 @property  @? subscriptionModifiedBlock

  // instance methods
  -[CKDModifySubscriptionsURLRequest .cxx_destruct]
  -[CKDModifySubscriptionsURLRequest operationType]
  -[CKDModifySubscriptionsURLRequest zoneID]
  -[CKDModifySubscriptionsURLRequest setSubscriptionsToSave:]
  -[CKDModifySubscriptionsURLRequest setZoneID:]
  -[CKDModifySubscriptionsURLRequest initWithSubscriptionsToSave:subscriptionIDsToDelete:]
  -[CKDModifySubscriptionsURLRequest subscriptionsToSave]
  -[CKDModifySubscriptionsURLRequest subscriptionIDsToDelete]
  -[CKDModifySubscriptionsURLRequest setSubscriptionIDsToDelete:]
  -[CKDModifySubscriptionsURLRequest generateRequestOperations]
  -[CKDModifySubscriptionsURLRequest requestDidParseProtobufObject:]
  -[CKDModifySubscriptionsURLRequest requestDidParseNodeFailure:]
  -[CKDModifySubscriptionsURLRequest requestOperationClasses]
  -[CKDModifySubscriptionsURLRequest setSubscriptionModifiedBlock:]
  -[CKDModifySubscriptionsURLRequest subscriptionModifiedBlock]
  -[CKDModifySubscriptionsURLRequest subscriptionIDByRequestID]
  -[CKDModifySubscriptionsURLRequest setSubscriptionIDByRequestID:]


CKDPTokenRegistrationBody : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasToken
 @property  NSData *token
 @property  BOOL hasBundleIdentifier
 @property  NSString *bundleIdentifier
 @property  BOOL hasApnsEnv
 @property  int apnsEnv

  // instance methods
  -[CKDPTokenRegistrationBody isEqual:]
  -[CKDPTokenRegistrationBody copyWithZone:]
  -[CKDPTokenRegistrationBody token]
  -[CKDPTokenRegistrationBody .cxx_destruct]
  -[CKDPTokenRegistrationBody bundleIdentifier]
  -[CKDPTokenRegistrationBody dictionaryRepresentation]
  -[CKDPTokenRegistrationBody setBundleIdentifier:]
  -[CKDPTokenRegistrationBody writeTo:]
  -[CKDPTokenRegistrationBody mergeFrom:]
  -[CKDPTokenRegistrationBody readFrom:]
  -[CKDPTokenRegistrationBody copyTo:]
  -[CKDPTokenRegistrationBody setToken:]
  -[CKDPTokenRegistrationBody hasBundleIdentifier]
  -[CKDPTokenRegistrationBody hasToken]
  -[CKDPTokenRegistrationBody apnsEnv]
  -[CKDPTokenRegistrationBody setApnsEnv:]
  -[CKDPTokenRegistrationBody setHasApnsEnv:]
  -[CKDPTokenRegistrationBody hasApnsEnv]
  -[CKDPTokenRegistrationBody apnsEnvAsString:]
  -[CKDPTokenRegistrationBody StringAsApnsEnv:]


CKDPShareAcceptResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasShare
 @property  CKDPShare *share

  // instance methods
  -[CKDPShareAcceptResponse isEqual:]
  -[CKDPShareAcceptResponse copyWithZone:]
  -[CKDPShareAcceptResponse .cxx_destruct]
  -[CKDPShareAcceptResponse dictionaryRepresentation]
  -[CKDPShareAcceptResponse writeTo:]
  -[CKDPShareAcceptResponse mergeFrom:]
  -[CKDPShareAcceptResponse readFrom:]
  -[CKDPShareAcceptResponse copyTo:]
  -[CKDPShareAcceptResponse share]
  -[CKDPShareAcceptResponse setShare:]
  -[CKDPShareAcceptResponse hasShare]


CKDPRecordFieldValue : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasBytesValue
 @property  NSData *bytesValue
 @property  BOOL hasSignedValue
 @property  long long signedValue
 @property  BOOL hasDoubleValue
 @property  double doubleValue
 @property  BOOL hasDateValue
 @property  CKDPDate *dateValue
 @property  BOOL hasStringValue
 @property  NSString *stringValue
 @property  BOOL hasLocationValue
 @property  CKDPLocationCoordinate *locationValue
 @property  BOOL hasReferenceValue
 @property  CKDPRecordReference *referenceValue
 @property  BOOL hasAssetValue
 @property  CKDPAsset *assetValue
 @property  NSMutableArray *listValues
 @property  BOOL hasPackageValue
 @property  CKDPPackage *packageValue
 @property  BOOL hasStreamingAssetValue
 @property  CKDPStreamingAsset *streamingAssetValue
 @property  BOOL hasIsEncrypted
 @property  BOOL isEncrypted

  // class methods
  +[CKDPRecordFieldValue listValueType]

  // instance methods
  -[CKDPRecordFieldValue doubleValue]
  -[CKDPRecordFieldValue isEqual:]
  -[CKDPRecordFieldValue copyWithZone:]
  -[CKDPRecordFieldValue type]
  -[CKDPRecordFieldValue setType:]
  -[CKDPRecordFieldValue stringValue]
  -[CKDPRecordFieldValue .cxx_destruct]
  -[CKDPRecordFieldValue dictionaryRepresentation]
  -[CKDPRecordFieldValue writeTo:]
  -[CKDPRecordFieldValue setStringValue:]
  -[CKDPRecordFieldValue mergeFrom:]
  -[CKDPRecordFieldValue readFrom:]
  -[CKDPRecordFieldValue copyTo:]
  -[CKDPRecordFieldValue hasStringValue]
  -[CKDPRecordFieldValue setDoubleValue:]
  -[CKDPRecordFieldValue setHasDoubleValue:]
  -[CKDPRecordFieldValue hasDoubleValue]
  -[CKDPRecordFieldValue setDateValue:]
  -[CKDPRecordFieldValue hasDateValue]
  -[CKDPRecordFieldValue dateValue]
  -[CKDPRecordFieldValue typeAsString:]
  -[CKDPRecordFieldValue StringAsType:]
  -[CKDPRecordFieldValue isEncrypted]
  -[CKDPRecordFieldValue setLocationValue:]
  -[CKDPRecordFieldValue setReferenceValue:]
  -[CKDPRecordFieldValue setSignedValue:]
  -[CKDPRecordFieldValue setHasSignedValue:]
  -[CKDPRecordFieldValue hasSignedValue]
  -[CKDPRecordFieldValue hasLocationValue]
  -[CKDPRecordFieldValue hasReferenceValue]
  -[CKDPRecordFieldValue signedValue]
  -[CKDPRecordFieldValue locationValue]
  -[CKDPRecordFieldValue referenceValue]
  -[CKDPRecordFieldValue setHasType:]
  -[CKDPRecordFieldValue hasType]
  -[CKDPRecordFieldValue setBytesValue:]
  -[CKDPRecordFieldValue addListValue:]
  -[CKDPRecordFieldValue setListValues:]
  -[CKDPRecordFieldValue listValuesCount]
  -[CKDPRecordFieldValue clearListValues]
  -[CKDPRecordFieldValue hasBytesValue]
  -[CKDPRecordFieldValue bytesValue]
  -[CKDPRecordFieldValue listValues]
  -[CKDPRecordFieldValue listValueAtIndex:]
  -[CKDPRecordFieldValue setIsEncrypted:]
  -[CKDPRecordFieldValue setAssetValue:]
  -[CKDPRecordFieldValue setPackageValue:]
  -[CKDPRecordFieldValue setStreamingAssetValue:]
  -[CKDPRecordFieldValue assetValue]
  -[CKDPRecordFieldValue packageValue]
  -[CKDPRecordFieldValue streamingAssetValue]
  -[CKDPRecordFieldValue hasAssetValue]
  -[CKDPRecordFieldValue hasPackageValue]
  -[CKDPRecordFieldValue hasStreamingAssetValue]
  -[CKDPRecordFieldValue setHasIsEncrypted:]
  -[CKDPRecordFieldValue hasIsEncrypted]
  -[CKDPRecordFieldValue _CKLogToFileHandle:atDepth:]


CKDPStreamingAssetRetrieveAssetResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSize
 @property  long long size
 @property  BOOL hasDownloadURL
 @property  NSString *downloadURL
 @property  BOOL hasDownloadURLExpirationTimeSeconds
 @property  long long downloadURLExpirationTimeSeconds

  // instance methods
  -[CKDPStreamingAssetRetrieveAssetResponse isEqual:]
  -[CKDPStreamingAssetRetrieveAssetResponse copyWithZone:]
  -[CKDPStreamingAssetRetrieveAssetResponse .cxx_destruct]
  -[CKDPStreamingAssetRetrieveAssetResponse size]
  -[CKDPStreamingAssetRetrieveAssetResponse dictionaryRepresentation]
  -[CKDPStreamingAssetRetrieveAssetResponse writeTo:]
  -[CKDPStreamingAssetRetrieveAssetResponse setSize:]
  -[CKDPStreamingAssetRetrieveAssetResponse mergeFrom:]
  -[CKDPStreamingAssetRetrieveAssetResponse readFrom:]
  -[CKDPStreamingAssetRetrieveAssetResponse copyTo:]
  -[CKDPStreamingAssetRetrieveAssetResponse hasSize]
  -[CKDPStreamingAssetRetrieveAssetResponse downloadURL]
  -[CKDPStreamingAssetRetrieveAssetResponse setHasSize:]
  -[CKDPStreamingAssetRetrieveAssetResponse setDownloadURL:]
  -[CKDPStreamingAssetRetrieveAssetResponse hasDownloadURL]
  -[CKDPStreamingAssetRetrieveAssetResponse setDownloadURLExpirationTimeSeconds:]
  -[CKDPStreamingAssetRetrieveAssetResponse setHasDownloadURLExpirationTimeSeconds:]
  -[CKDPStreamingAssetRetrieveAssetResponse hasDownloadURLExpirationTimeSeconds]
  -[CKDPStreamingAssetRetrieveAssetResponse downloadURLExpirationTimeSeconds]


CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *cryptoSessions

  // class methods
  +[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata cryptoSessionsType]

  // instance methods
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata isEqual:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata copyWithZone:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata .cxx_destruct]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata dictionaryRepresentation]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata writeTo:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata mergeFrom:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata readFrom:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata copyTo:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata addCryptoSessions:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata cryptoSessionsCount]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata clearCryptoSessions]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata cryptoSessionsAtIndex:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata cryptoSessions]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata setCryptoSessions:]


CKDPRecordChainParent : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasPublicKeyID
 @property  NSData *publicKeyID
 @property  BOOL hasReference
 @property  CKDPRecordReference *reference

  // instance methods
  -[CKDPRecordChainParent isEqual:]
  -[CKDPRecordChainParent copyWithZone:]
  -[CKDPRecordChainParent .cxx_destruct]
  -[CKDPRecordChainParent dictionaryRepresentation]
  -[CKDPRecordChainParent writeTo:]
  -[CKDPRecordChainParent mergeFrom:]
  -[CKDPRecordChainParent readFrom:]
  -[CKDPRecordChainParent copyTo:]
  -[CKDPRecordChainParent reference]
  -[CKDPRecordChainParent setReference:]
  -[CKDPRecordChainParent hasReference]
  -[CKDPRecordChainParent setPublicKeyID:]
  -[CKDPRecordChainParent hasPublicKeyID]
  -[CKDPRecordChainParent publicKeyID]


CKDPNotificationSyncRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasServerChangeToken
 @property  NSData *serverChangeToken
 @property  BOOL hasMaxChanges
 @property  unsigned int maxChanges
 @property  BOOL hasWantsChanges
 @property  BOOL wantsChanges

  // class methods
  +[CKDPNotificationSyncRequest options]

  // instance methods
  -[CKDPNotificationSyncRequest isEqual:]
  -[CKDPNotificationSyncRequest copyWithZone:]
  -[CKDPNotificationSyncRequest .cxx_destruct]
  -[CKDPNotificationSyncRequest dictionaryRepresentation]
  -[CKDPNotificationSyncRequest writeTo:]
  -[CKDPNotificationSyncRequest mergeFrom:]
  -[CKDPNotificationSyncRequest readFrom:]
  -[CKDPNotificationSyncRequest copyTo:]
  -[CKDPNotificationSyncRequest requestTypeCode]
  -[CKDPNotificationSyncRequest responseClass]
  -[CKDPNotificationSyncRequest serverChangeToken]
  -[CKDPNotificationSyncRequest setServerChangeToken:]
  -[CKDPNotificationSyncRequest setWantsChanges:]
  -[CKDPNotificationSyncRequest wantsChanges]
  -[CKDPNotificationSyncRequest hasServerChangeToken]
  -[CKDPNotificationSyncRequest setMaxChanges:]
  -[CKDPNotificationSyncRequest setHasMaxChanges:]
  -[CKDPNotificationSyncRequest hasMaxChanges]
  -[CKDPNotificationSyncRequest setHasWantsChanges:]
  -[CKDPNotificationSyncRequest hasWantsChanges]
  -[CKDPNotificationSyncRequest maxChanges]


CKDRepairZonePCSOperation : CKDDatabaseOperation
 @property  NSArray *zoneIDs
 @property  NSMutableArray *fetchedZones
 @property  NSMutableArray *fixedZones
 @property  NSMutableDictionary *pcsInfoByZoneID
 @property  @? zonePCSRepairProgressBlock

  // instance methods
  -[CKDRepairZonePCSOperation .cxx_destruct]
  -[CKDRepairZonePCSOperation main]
  -[CKDRepairZonePCSOperation _finishOnCallbackQueueWithError:]
  -[CKDRepairZonePCSOperation activityCreate]
  -[CKDRepairZonePCSOperation zoneIDs]
  -[CKDRepairZonePCSOperation setZoneIDs:]
  -[CKDRepairZonePCSOperation pcsInfoByZoneID]
  -[CKDRepairZonePCSOperation setPcsInfoByZoneID:]
  -[CKDRepairZonePCSOperation initWithOperationInfo:clientContext:]
  -[CKDRepairZonePCSOperation setZonePCSRepairProgressBlock:]
  -[CKDRepairZonePCSOperation nameForState:]
  -[CKDRepairZonePCSOperation makeStateTransition]
  -[CKDRepairZonePCSOperation _fetchZones]
  -[CKDRepairZonePCSOperation fetchedZones]
  -[CKDRepairZonePCSOperation setFetchedZones:]
  -[CKDRepairZonePCSOperation _checkZonePCS]
  -[CKDRepairZonePCSOperation _uploadRepairedZones]
  -[CKDRepairZonePCSOperation fixedZones]
  -[CKDRepairZonePCSOperation zonePCSRepairProgressBlock]
  -[CKDRepairZonePCSOperation _checkPCSDataForZone:]
  -[CKDRepairZonePCSOperation setFixedZones:]


CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasDoubleValue
 @property  double doubleValue
 @property  BOOL hasInt64Value
 @property  long long int64Value
 @property  BOOL hasBoolValue
 @property  BOOL boolValue
 @property  BOOL hasStringValue
 @property  NSString *stringValue
 @property  BOOL hasBytesValue
 @property  NSData *bytesValue

  // instance methods
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue doubleValue]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue isEqual:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue copyWithZone:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue boolValue]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue stringValue]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue .cxx_destruct]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue dictionaryRepresentation]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue writeTo:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue setStringValue:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue mergeFrom:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue readFrom:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue copyTo:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue hasStringValue]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue setDoubleValue:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue setHasDoubleValue:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue hasDoubleValue]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue int64Value]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue setBoolValue:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue setHasBoolValue:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue hasBoolValue]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue setBytesValue:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue hasBytesValue]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue bytesValue]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue setInt64Value:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue setHasInt64Value:]
  -[CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue hasInt64Value]


CKDGetRecordsURLRequest : CKDURLRequest
 @property  NSArray *recordIDs
 @property  NSDictionary *recordIDsToETags
 @property  NSDictionary *recordIDsToVersionETags
 @property  unsigned long recordCount
 @property  NSMutableDictionary *recordIDByRequestID
 @property  NSSet *desiredKeys
 @property  NSSet *assetFieldNamesToPublishURLs
 @property  unsigned long requestedTTL
 @property  unsigned long URLOptions
 @property  NSSet *desiredAssetKeys
 @property  NSArray *desiredIndexedListKeys
 @property  BOOL shouldFetchAssetContent
 @property  @? recordFetchedBlock

  // instance methods
  -[CKDGetRecordsURLRequest .cxx_destruct]
  -[CKDGetRecordsURLRequest operationType]
  -[CKDGetRecordsURLRequest setRecordFetchedBlock:]
  -[CKDGetRecordsURLRequest setDesiredKeys:]
  -[CKDGetRecordsURLRequest setRecordIDs:]
  -[CKDGetRecordsURLRequest recordIDs]
  -[CKDGetRecordsURLRequest recordFetchedBlock]
  -[CKDGetRecordsURLRequest shouldFetchAssetContent]
  -[CKDGetRecordsURLRequest setShouldFetchAssetContent:]
  -[CKDGetRecordsURLRequest desiredKeys]
  -[CKDGetRecordsURLRequest requestedTTL]
  -[CKDGetRecordsURLRequest setRequestedTTL:]
  -[CKDGetRecordsURLRequest URLOptions]
  -[CKDGetRecordsURLRequest setURLOptions:]
  -[CKDGetRecordsURLRequest recordIDsToETags]
  -[CKDGetRecordsURLRequest setRecordIDsToETags:]
  -[CKDGetRecordsURLRequest recordIDsToVersionETags]
  -[CKDGetRecordsURLRequest setRecordIDsToVersionETags:]
  -[CKDGetRecordsURLRequest assetFieldNamesToPublishURLs]
  -[CKDGetRecordsURLRequest setAssetFieldNamesToPublishURLs:]
  -[CKDGetRecordsURLRequest setRecordCount:]
  -[CKDGetRecordsURLRequest recordCount]
  -[CKDGetRecordsURLRequest setDesiredAssetKeys:]
  -[CKDGetRecordsURLRequest generateRequestOperations]
  -[CKDGetRecordsURLRequest requestGETPreAuth]
  -[CKDGetRecordsURLRequest requestDidParseProtobufObject:]
  -[CKDGetRecordsURLRequest requestDidParseNodeFailure:]
  -[CKDGetRecordsURLRequest requestOperationClasses]
  -[CKDGetRecordsURLRequest allowsAnonymousAccount]
  -[CKDGetRecordsURLRequest zoneIDsToLock]
  -[CKDGetRecordsURLRequest desiredAssetKeys]
  -[CKDGetRecordsURLRequest desiredIndexedListKeys]
  -[CKDGetRecordsURLRequest requestedListFieldsForDesiredIndexedListKeys]
  -[CKDGetRecordsURLRequest recordIDByRequestID]
  -[CKDGetRecordsURLRequest initWithRecordIDs:recordIDsToEtags:recordIDsToVersionETags:desiredKeys:]
  -[CKDGetRecordsURLRequest setDesiredIndexedListKeys:]
  -[CKDGetRecordsURLRequest setRecordIDByRequestID:]


CKDPWebAuthTokenRetrieveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasApiToken
 @property  NSString *apiToken
 @property  BOOL hasForceFetchToken
 @property  BOOL forceFetchToken

  // class methods
  +[CKDPWebAuthTokenRetrieveRequest options]

  // instance methods
  -[CKDPWebAuthTokenRetrieveRequest isEqual:]
  -[CKDPWebAuthTokenRetrieveRequest copyWithZone:]
  -[CKDPWebAuthTokenRetrieveRequest .cxx_destruct]
  -[CKDPWebAuthTokenRetrieveRequest dictionaryRepresentation]
  -[CKDPWebAuthTokenRetrieveRequest writeTo:]
  -[CKDPWebAuthTokenRetrieveRequest mergeFrom:]
  -[CKDPWebAuthTokenRetrieveRequest readFrom:]
  -[CKDPWebAuthTokenRetrieveRequest copyTo:]
  -[CKDPWebAuthTokenRetrieveRequest requestTypeCode]
  -[CKDPWebAuthTokenRetrieveRequest responseClass]
  -[CKDPWebAuthTokenRetrieveRequest apiToken]
  -[CKDPWebAuthTokenRetrieveRequest setApiToken:]
  -[CKDPWebAuthTokenRetrieveRequest hasApiToken]
  -[CKDPWebAuthTokenRetrieveRequest setForceFetchToken:]
  -[CKDPWebAuthTokenRetrieveRequest setHasForceFetchToken:]
  -[CKDPWebAuthTokenRetrieveRequest hasForceFetchToken]
  -[CKDPWebAuthTokenRetrieveRequest forceFetchToken]


CKDPWebAuthTokenRetrieveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasToken
 @property  NSString *token
 @property  BOOL hasContainerScopedUserId
 @property  NSString *containerScopedUserId

  // instance methods
  -[CKDPWebAuthTokenRetrieveResponse isEqual:]
  -[CKDPWebAuthTokenRetrieveResponse copyWithZone:]
  -[CKDPWebAuthTokenRetrieveResponse token]
  -[CKDPWebAuthTokenRetrieveResponse .cxx_destruct]
  -[CKDPWebAuthTokenRetrieveResponse dictionaryRepresentation]
  -[CKDPWebAuthTokenRetrieveResponse writeTo:]
  -[CKDPWebAuthTokenRetrieveResponse mergeFrom:]
  -[CKDPWebAuthTokenRetrieveResponse readFrom:]
  -[CKDPWebAuthTokenRetrieveResponse copyTo:]
  -[CKDPWebAuthTokenRetrieveResponse setToken:]
  -[CKDPWebAuthTokenRetrieveResponse hasToken]
  -[CKDPWebAuthTokenRetrieveResponse setContainerScopedUserId:]
  -[CKDPWebAuthTokenRetrieveResponse hasContainerScopedUserId]
  -[CKDPWebAuthTokenRetrieveResponse containerScopedUserId]


CKLTrafficLogMessageFragment : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  unsigned long type
 @property  NSString *uuid
 @property  long long seqNum
 @property  NSString *dataString

  // instance methods
  -[CKLTrafficLogMessageFragment type]
  -[CKLTrafficLogMessageFragment .cxx_destruct]
  -[CKLTrafficLogMessageFragment uuid]
  -[CKLTrafficLogMessageFragment seqNum]
  -[CKLTrafficLogMessageFragment initWithMessage:]
  -[CKLTrafficLogMessageFragment dataString]


CKLStreamTrafficObserver : CKLStreamObserver
 @property  NSMutableDictionary *requestDictionary
 @property  NSObject<OS_dispatch_queue> *printQueue
 @property  @? requestParsedBlock

  // instance methods
  -[CKLStreamTrafficObserver .cxx_destruct]
  -[CKLStreamTrafficObserver finish]
  -[CKLStreamTrafficObserver requestDictionary]
  -[CKLStreamTrafficObserver setRequestDictionary:]
  -[CKLStreamTrafficObserver initWithLogTypes:]
  -[CKLStreamTrafficObserver eventMatched:]
  -[CKLStreamTrafficObserver printQueue]
  -[CKLStreamTrafficObserver parseRequestArrayAndPrint:]
  -[CKLStreamTrafficObserver parserFromConfigurationMessage:]
  -[CKLStreamTrafficObserver requestParsedBlock]
  -[CKLStreamTrafficObserver setRequestParsedBlock:]
  -[CKLStreamTrafficObserver setPrintQueue:]


CKLStreamTrafficConsoleLogObserver : CKLStreamTrafficObserver
  // instance methods
  -[CKLStreamTrafficConsoleLogObserver initWithLogTypes:]


CKDFetchShareParticipantsOperation : CKDOperation
 @property  CKDPublicIdentityLookupRequest *pendingRequest
 @property  NSArray *userIdentityLookupInfos
 @property  @? shareParticipantFetchedBlock

  // instance methods
  -[CKDFetchShareParticipantsOperation .cxx_destruct]
  -[CKDFetchShareParticipantsOperation main]
  -[CKDFetchShareParticipantsOperation finishWithError:]
  -[CKDFetchShareParticipantsOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchShareParticipantsOperation activityCreate]
  -[CKDFetchShareParticipantsOperation setShareParticipantFetchedBlock:]
  -[CKDFetchShareParticipantsOperation setUserIdentityLookupInfos:]
  -[CKDFetchShareParticipantsOperation userIdentityLookupInfos]
  -[CKDFetchShareParticipantsOperation shareParticipantFetchedBlock]
  -[CKDFetchShareParticipantsOperation initWithOperationInfo:clientContext:]
  -[CKDFetchShareParticipantsOperation setPendingRequest:]
  -[CKDFetchShareParticipantsOperation _handleFetchedInfo:withIdentity:error:]
  -[CKDFetchShareParticipantsOperation pendingRequest]
  -[CKDFetchShareParticipantsOperation _fetchIdentities]


CKDPShareAcceptRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasShareId
 @property  CKDPShareIdentifier *shareId
 @property  BOOL hasEtag
 @property  NSString *etag
 @property  BOOL hasSelfAddedPcs
 @property  CKDPProtectionInfo *selfAddedPcs
 @property  BOOL hasPublicKey
 @property  CKDPProtectionInfo *publicKey
 @property  BOOL hasProtectionInfo
 @property  CKDPProtectionInfo *protectionInfo
 @property  BOOL hasParticipantId
 @property  NSString *participantId
 @property  BOOL hasPublicKeyVersion
 @property  int publicKeyVersion
 @property  BOOL hasAcceptedInProcess
 @property  BOOL acceptedInProcess

  // class methods
  +[CKDPShareAcceptRequest options]

  // instance methods
  -[CKDPShareAcceptRequest isEqual:]
  -[CKDPShareAcceptRequest copyWithZone:]
  -[CKDPShareAcceptRequest .cxx_destruct]
  -[CKDPShareAcceptRequest dictionaryRepresentation]
  -[CKDPShareAcceptRequest etag]
  -[CKDPShareAcceptRequest publicKey]
  -[CKDPShareAcceptRequest writeTo:]
  -[CKDPShareAcceptRequest mergeFrom:]
  -[CKDPShareAcceptRequest readFrom:]
  -[CKDPShareAcceptRequest copyTo:]
  -[CKDPShareAcceptRequest requestTypeCode]
  -[CKDPShareAcceptRequest responseClass]
  -[CKDPShareAcceptRequest setEtag:]
  -[CKDPShareAcceptRequest hasEtag]
  -[CKDPShareAcceptRequest publicKeyVersion]
  -[CKDPShareAcceptRequest setPublicKeyVersion:]
  -[CKDPShareAcceptRequest protectionInfo]
  -[CKDPShareAcceptRequest setProtectionInfo:]
  -[CKDPShareAcceptRequest acceptedInProcess]
  -[CKDPShareAcceptRequest setAcceptedInProcess:]
  -[CKDPShareAcceptRequest setPublicKey:]
  -[CKDPShareAcceptRequest hasProtectionInfo]
  -[CKDPShareAcceptRequest setShareId:]
  -[CKDPShareAcceptRequest setParticipantId:]
  -[CKDPShareAcceptRequest hasShareId]
  -[CKDPShareAcceptRequest shareId]
  -[CKDPShareAcceptRequest setSelfAddedPcs:]
  -[CKDPShareAcceptRequest hasSelfAddedPcs]
  -[CKDPShareAcceptRequest hasPublicKey]
  -[CKDPShareAcceptRequest hasParticipantId]
  -[CKDPShareAcceptRequest setHasPublicKeyVersion:]
  -[CKDPShareAcceptRequest hasPublicKeyVersion]
  -[CKDPShareAcceptRequest setHasAcceptedInProcess:]
  -[CKDPShareAcceptRequest hasAcceptedInProcess]
  -[CKDPShareAcceptRequest selfAddedPcs]
  -[CKDPShareAcceptRequest participantId]


CKDArchiveRecordsURLRequest : CKDURLRequest
 @property  NSMutableDictionary *zoneIDToRecordIDs
 @property  NSMutableDictionary *recordZoneIDByRequestID
 @property  @? recordArchivedBlock

  // instance methods
  -[CKDArchiveRecordsURLRequest .cxx_destruct]
  -[CKDArchiveRecordsURLRequest operationType]
  -[CKDArchiveRecordsURLRequest recordArchivedBlock]
  -[CKDArchiveRecordsURLRequest setRecordArchivedBlock:]
  -[CKDArchiveRecordsURLRequest generateRequestOperations]
  -[CKDArchiveRecordsURLRequest requestDidParseProtobufObject:]
  -[CKDArchiveRecordsURLRequest requestDidParseNodeFailure:]
  -[CKDArchiveRecordsURLRequest requestOperationClasses]
  -[CKDArchiveRecordsURLRequest zoneIDsToLock]
  -[CKDArchiveRecordsURLRequest zoneIDToRecordIDs]
  -[CKDArchiveRecordsURLRequest recordZoneIDByRequestID]
  -[CKDArchiveRecordsURLRequest initWithRecordIDsToArchive:]
  -[CKDArchiveRecordsURLRequest setZoneIDToRecordIDs:]
  -[CKDArchiveRecordsURLRequest setRecordZoneIDByRequestID:]


CKDPQueryFilter : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasFieldName
 @property  CKDPRecordFieldIdentifier *fieldName
 @property  BOOL hasFieldValue
 @property  CKDPRecordFieldValue *fieldValue
 @property  BOOL hasBounds
 @property  CKDPLocationBound *bounds
 @property  BOOL hasType
 @property  int type

  // instance methods
  -[CKDPQueryFilter isEqual:]
  -[CKDPQueryFilter copyWithZone:]
  -[CKDPQueryFilter type]
  -[CKDPQueryFilter setType:]
  -[CKDPQueryFilter .cxx_destruct]
  -[CKDPQueryFilter dictionaryRepresentation]
  -[CKDPQueryFilter writeTo:]
  -[CKDPQueryFilter bounds]
  -[CKDPQueryFilter setBounds:]
  -[CKDPQueryFilter mergeFrom:]
  -[CKDPQueryFilter readFrom:]
  -[CKDPQueryFilter copyTo:]
  -[CKDPQueryFilter typeAsString:]
  -[CKDPQueryFilter StringAsType:]
  -[CKDPQueryFilter fieldName]
  -[CKDPQueryFilter setHasType:]
  -[CKDPQueryFilter hasType]
  -[CKDPQueryFilter setFieldName:]
  -[CKDPQueryFilter hasFieldName]
  -[CKDPQueryFilter hasBounds]
  -[CKDPQueryFilter fieldValue]
  -[CKDPQueryFilter setFieldValue:]
  -[CKDPQueryFilter hasFieldValue]


CKDPowerLogger : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CKDPowerLogger sharedLogger]

  // instance methods
  -[CKDPowerLogger cacheOperationCombinedMetrics:forOperationID:operationType:operationGroupID:operationGroupName:operationGroupQuantity:operationQualityOfService:appContainerTuple:]
  -[CKDPowerLogger logOperationCombinedMetrics:forOperationID:operationType:operationGroupID:operationGroupName:operationGroupQuantity:operationQualityOfService:appContainerTuple:]
  -[CKDPowerLogger registerPowerLoggingXPCActivity]


CKDPQuery : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *types
 @property  NSMutableArray *filters
 @property  NSMutableArray *sorts
 @property  BOOL hasDistinct
 @property  BOOL distinct
 @property  BOOL hasQueryOperator
 @property  int queryOperator

  // class methods
  +[CKDPQuery filtersType]
  +[CKDPQuery typesType]
  +[CKDPQuery sortsType]

  // instance methods
  -[CKDPQuery isEqual:]
  -[CKDPQuery copyWithZone:]
  -[CKDPQuery .cxx_destruct]
  -[CKDPQuery dictionaryRepresentation]
  -[CKDPQuery writeTo:]
  -[CKDPQuery filters]
  -[CKDPQuery mergeFrom:]
  -[CKDPQuery readFrom:]
  -[CKDPQuery copyTo:]
  -[CKDPQuery setFilters:]
  -[CKDPQuery types]
  -[CKDPQuery filtersCount]
  -[CKDPQuery clearFilters]
  -[CKDPQuery typesCount]
  -[CKDPQuery clearTypes]
  -[CKDPQuery distinct]
  -[CKDPQuery addFilters:]
  -[CKDPQuery filtersAtIndex:]
  -[CKDPQuery addTypes:]
  -[CKDPQuery setTypes:]
  -[CKDPQuery setDistinct:]
  -[CKDPQuery setSorts:]
  -[CKDPQuery addSorts:]
  -[CKDPQuery typesAtIndex:]
  -[CKDPQuery sortsCount]
  -[CKDPQuery clearSorts]
  -[CKDPQuery sortsAtIndex:]
  -[CKDPQuery setHasDistinct:]
  -[CKDPQuery hasDistinct]
  -[CKDPQuery queryOperator]
  -[CKDPQuery setQueryOperator:]
  -[CKDPQuery setHasQueryOperator:]
  -[CKDPQuery hasQueryOperator]
  -[CKDPQuery sorts]
  -[CKDPQuery queryOperatorAsString:]
  -[CKDPQuery StringAsQueryOperator:]


CKDPResponseOperationHeaderAssetAuthorizationResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasResponseUUID
 @property  NSString *responseUUID
 @property  BOOL hasAuthGetResponseBody
 @property  NSData *authGetResponseBody
 @property  NSMutableArray *responseHeaders

  // class methods
  +[CKDPResponseOperationHeaderAssetAuthorizationResponse responseHeadersType]

  // instance methods
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse isEqual:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse copyWithZone:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse .cxx_destruct]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse dictionaryRepresentation]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse writeTo:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse mergeFrom:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse readFrom:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse copyTo:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse responseHeaders]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse responseUUID]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse setResponseUUID:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse setResponseHeaders:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse addResponseHeaders:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse setAuthGetResponseBody:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse responseHeadersCount]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse clearResponseHeaders]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse responseHeadersAtIndex:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse hasResponseUUID]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse hasAuthGetResponseBody]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponse authGetResponseBody]


CKDPResponseOperationResultErrorExtension : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasExtensionName
 @property  NSString *extensionName
 @property  BOOL hasTypeCode
 @property  unsigned int typeCode
 @property  BOOL hasExtensionPayload
 @property  NSData *extensionPayload

  // instance methods
  -[CKDPResponseOperationResultErrorExtension isEqual:]
  -[CKDPResponseOperationResultErrorExtension copyWithZone:]
  -[CKDPResponseOperationResultErrorExtension .cxx_destruct]
  -[CKDPResponseOperationResultErrorExtension dictionaryRepresentation]
  -[CKDPResponseOperationResultErrorExtension writeTo:]
  -[CKDPResponseOperationResultErrorExtension mergeFrom:]
  -[CKDPResponseOperationResultErrorExtension readFrom:]
  -[CKDPResponseOperationResultErrorExtension copyTo:]
  -[CKDPResponseOperationResultErrorExtension typeCode]
  -[CKDPResponseOperationResultErrorExtension setTypeCode:]
  -[CKDPResponseOperationResultErrorExtension extensionName]
  -[CKDPResponseOperationResultErrorExtension setExtensionName:]
  -[CKDPResponseOperationResultErrorExtension setExtensionPayload:]
  -[CKDPResponseOperationResultErrorExtension hasExtensionName]
  -[CKDPResponseOperationResultErrorExtension setHasTypeCode:]
  -[CKDPResponseOperationResultErrorExtension hasTypeCode]
  -[CKDPResponseOperationResultErrorExtension hasExtensionPayload]
  -[CKDPResponseOperationResultErrorExtension extensionPayload]


CKDMMCSItemReader : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDMMCSItemReaderWriterProtocol>
 @property  CKDMMCSItemGroupContext *MMCSRequest
 @property  CKDMMCSItem *MMCSItem
 @property  NSFileHandle *fileHandle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDMMCSItemReader dealloc]
  -[CKDMMCSItemReader .cxx_destruct]
  -[CKDMMCSItemReader fileHandle]
  -[CKDMMCSItemReader openWithError:]
  -[CKDMMCSItemReader setFileHandle:]
  -[CKDMMCSItemReader closeWithError:]
  -[CKDMMCSItemReader MMCSRequest]
  -[CKDMMCSItemReader MMCSItem]
  -[CKDMMCSItemReader getFileMetadataWithError:]
  -[CKDMMCSItemReader readBytesAtOffset:bytes:length:bytesRead:error:]
  -[CKDMMCSItemReader writeBytesAtOffset:bytes:length:bytesWritten:error:]
  -[CKDMMCSItemReader initWithMMCSItem:MMCSRequest:]
  -[CKDMMCSItemReader setMMCSRequest:]
  -[CKDMMCSItemReader setMMCSItem:]


CKDPRecord : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasEtag
 @property  NSString *etag
 @property  BOOL hasRecordIdentifier
 @property  CKDPRecordIdentifier *recordIdentifier
 @property  BOOL hasType
 @property  CKDPRecordType *type
 @property  BOOL hasCreatedBy
 @property  CKDPIdentifier *createdBy
 @property  BOOL hasTimeStatistics
 @property  CKDPDateStatistics *timeStatistics
 @property  NSMutableArray *fields
 @property  BOOL hasShareId
 @property  CKDPShareIdentifier *shareId
 @property  BOOL hasModifiedBy
 @property  CKDPIdentifier *modifiedBy
 @property  NSMutableArray *conflictLoserEtags
 @property  BOOL hasModifiedByDevice
 @property  NSString *modifiedByDevice
 @property  NSMutableArray *pluginFields
 @property  BOOL hasProtectionInfo
 @property  CKDPProtectionInfo *protectionInfo
 @property  BOOL hasPermission
 @property  int permission
 @property  BOOL hasShareInfo
 @property  CKDPShare *shareInfo
 @property  BOOL hasChainPrivateKey
 @property  NSData *chainPrivateKey
 @property  BOOL hasChainProtectionInfo
 @property  CKDPProtectionInfo *chainProtectionInfo
 @property  BOOL hasChainParent
 @property  CKDPRecordChainParent *chainParent
 @property  BOOL hasStableUrl
 @property  CKDPRecordStableUrl *stableUrl
 @property  NSMutableArray *tombstonedPublicKeyIDs
 @property  BOOL hasZoneishMasterKeyId
 @property  NSData *zoneishMasterKeyId

  // class methods
  +[CKDPRecord recordFromData:]
  +[CKDPRecord fieldsType]
  +[CKDPRecord conflictLoserEtagsType]
  +[CKDPRecord pluginFieldsType]
  +[CKDPRecord tombstonedPublicKeyIDsType]

  // instance methods
  -[CKDPRecord isEqual:]
  -[CKDPRecord copyWithZone:]
  -[CKDPRecord type]
  -[CKDPRecord setType:]
  -[CKDPRecord .cxx_destruct]
  -[CKDPRecord dictionaryRepresentation]
  -[CKDPRecord dataRepresentation]
  -[CKDPRecord fields]
  -[CKDPRecord etag]
  -[CKDPRecord writeTo:]
  -[CKDPRecord mergeFrom:]
  -[CKDPRecord readFrom:]
  -[CKDPRecord copyTo:]
  -[CKDPRecord setEtag:]
  -[CKDPRecord hasEtag]
  -[CKDPRecord setRecordIdentifier:]
  -[CKDPRecord hasType]
  -[CKDPRecord hasRecordIdentifier]
  -[CKDPRecord recordIdentifier]
  -[CKDPRecord modifiedByDevice]
  -[CKDPRecord setModifiedByDevice:]
  -[CKDPRecord conflictLoserEtags]
  -[CKDPRecord setConflictLoserEtags:]
  -[CKDPRecord chainPrivateKey]
  -[CKDPRecord setChainPrivateKey:]
  -[CKDPRecord chainProtectionInfo]
  -[CKDPRecord setChainProtectionInfo:]
  -[CKDPRecord tombstonedPublicKeyIDs]
  -[CKDPRecord setTombstonedPublicKeyIDs:]
  -[CKDPRecord pluginFields]
  -[CKDPRecord setPluginFields:]
  -[CKDPRecord permission]
  -[CKDPRecord setPermission:]
  -[CKDPRecord protectionInfo]
  -[CKDPRecord setProtectionInfo:]
  -[CKDPRecord setFields:]
  -[CKDPRecord fieldForKey:]
  -[CKDPRecord addFields:]
  -[CKDPRecord fieldsCount]
  -[CKDPRecord clearFields]
  -[CKDPRecord fieldsAtIndex:]
  -[CKDPRecord hasTimeStatistics]
  -[CKDPRecord timeStatistics]
  -[CKDPRecord setCreatedBy:]
  -[CKDPRecord setTimeStatistics:]
  -[CKDPRecord setModifiedBy:]
  -[CKDPRecord addConflictLoserEtags:]
  -[CKDPRecord conflictLoserEtagsCount]
  -[CKDPRecord clearConflictLoserEtags]
  -[CKDPRecord conflictLoserEtagsAtIndex:]
  -[CKDPRecord hasCreatedBy]
  -[CKDPRecord hasModifiedBy]
  -[CKDPRecord hasModifiedByDevice]
  -[CKDPRecord createdBy]
  -[CKDPRecord modifiedBy]
  -[CKDPRecord hasProtectionInfo]
  -[CKDPRecord _inflateFieldsFromData:]
  -[CKDPRecord fieldData]
  -[CKDPRecord setShareId:]
  -[CKDPRecord setStableUrl:]
  -[CKDPRecord hasStableUrl]
  -[CKDPRecord hasShareId]
  -[CKDPRecord stableUrl]
  -[CKDPRecord shareId]
  -[CKDPRecord shareInfo]
  -[CKDPRecord addPluginFields:]
  -[CKDPRecord addTombstonedPublicKeyIDs:]
  -[CKDPRecord pluginFieldsCount]
  -[CKDPRecord clearPluginFields]
  -[CKDPRecord pluginFieldsAtIndex:]
  -[CKDPRecord setShareInfo:]
  -[CKDPRecord setChainParent:]
  -[CKDPRecord tombstonedPublicKeyIDsCount]
  -[CKDPRecord clearTombstonedPublicKeyIDs]
  -[CKDPRecord tombstonedPublicKeyIDsAtIndex:]
  -[CKDPRecord setZoneishMasterKeyId:]
  -[CKDPRecord setHasPermission:]
  -[CKDPRecord hasPermission]
  -[CKDPRecord permissionAsString:]
  -[CKDPRecord StringAsPermission:]
  -[CKDPRecord hasShareInfo]
  -[CKDPRecord hasChainPrivateKey]
  -[CKDPRecord hasChainProtectionInfo]
  -[CKDPRecord hasChainParent]
  -[CKDPRecord hasZoneishMasterKeyId]
  -[CKDPRecord chainParent]
  -[CKDPRecord zoneishMasterKeyId]
  -[CKDPRecord _permissionAsString]


CKDPRecordDeleteRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRecordIdentifier
 @property  CKDPRecordIdentifier *recordIdentifier
 @property  BOOL hasEtag
 @property  NSString *etag
 @property  NSMutableArray *pluginFields
 @property  BOOL hasParticipantKeyLost
 @property  BOOL participantKeyLost
 @property  NSMutableArray *publicKeys

  // class methods
  +[CKDPRecordDeleteRequest options]
  +[CKDPRecordDeleteRequest pluginFieldsType]
  +[CKDPRecordDeleteRequest publicKeysType]

  // instance methods
  -[CKDPRecordDeleteRequest isEqual:]
  -[CKDPRecordDeleteRequest copyWithZone:]
  -[CKDPRecordDeleteRequest .cxx_destruct]
  -[CKDPRecordDeleteRequest dictionaryRepresentation]
  -[CKDPRecordDeleteRequest etag]
  -[CKDPRecordDeleteRequest writeTo:]
  -[CKDPRecordDeleteRequest mergeFrom:]
  -[CKDPRecordDeleteRequest readFrom:]
  -[CKDPRecordDeleteRequest copyTo:]
  -[CKDPRecordDeleteRequest requestTypeCode]
  -[CKDPRecordDeleteRequest responseClass]
  -[CKDPRecordDeleteRequest setEtag:]
  -[CKDPRecordDeleteRequest hasEtag]
  -[CKDPRecordDeleteRequest setRecordIdentifier:]
  -[CKDPRecordDeleteRequest hasRecordIdentifier]
  -[CKDPRecordDeleteRequest recordIdentifier]
  -[CKDPRecordDeleteRequest pluginFields]
  -[CKDPRecordDeleteRequest setPluginFields:]
  -[CKDPRecordDeleteRequest addPluginFields:]
  -[CKDPRecordDeleteRequest pluginFieldsCount]
  -[CKDPRecordDeleteRequest clearPluginFields]
  -[CKDPRecordDeleteRequest pluginFieldsAtIndex:]
  -[CKDPRecordDeleteRequest addPublicKeys:]
  -[CKDPRecordDeleteRequest publicKeysCount]
  -[CKDPRecordDeleteRequest clearPublicKeys]
  -[CKDPRecordDeleteRequest publicKeysAtIndex:]
  -[CKDPRecordDeleteRequest setParticipantKeyLost:]
  -[CKDPRecordDeleteRequest setHasParticipantKeyLost:]
  -[CKDPRecordDeleteRequest hasParticipantKeyLost]
  -[CKDPRecordDeleteRequest participantKeyLost]
  -[CKDPRecordDeleteRequest publicKeys]
  -[CKDPRecordDeleteRequest setPublicKeys:]


CKDPackageDirectoryPurger : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableArray *rootDirectories

  // class methods
  +[CKDPackageDirectoryPurger sharedPurger]
  +[CKDPackageDirectoryPurger schedulePeriodicPurgesInDirectory:]

  // instance methods
  -[CKDPackageDirectoryPurger init]
  -[CKDPackageDirectoryPurger queue]
  -[CKDPackageDirectoryPurger .cxx_destruct]
  -[CKDPackageDirectoryPurger purgeAll]
  -[CKDPackageDirectoryPurger rootDirectories]
  -[CKDPackageDirectoryPurger purgeRootDirectory:]
  -[CKDPackageDirectoryPurger purgeDirectory:]
  -[CKDPackageDirectoryPurger registerXPCActivity]
  -[CKDPackageDirectoryPurger addRootDirectory:]


CKDTokenDeletionURLRequest : CKDURLRequest
 @property  NSData *apsToken
 @property  NSString *apsEnvironmentString
 @property  NSString *bundleID

  // instance methods
  -[CKDTokenDeletionURLRequest .cxx_destruct]
  -[CKDTokenDeletionURLRequest operationType]
  -[CKDTokenDeletionURLRequest bundleID]
  -[CKDTokenDeletionURLRequest setBundleID:]
  -[CKDTokenDeletionURLRequest sourceApplicationBundleIdentifier]
  -[CKDTokenDeletionURLRequest sourceApplicationSecondaryIdentifier]
  -[CKDTokenDeletionURLRequest apsToken]
  -[CKDTokenDeletionURLRequest setApsEnvironmentString:]
  -[CKDTokenDeletionURLRequest apsEnvironmentString]
  -[CKDTokenDeletionURLRequest generateRequestOperations]
  -[CKDTokenDeletionURLRequest requestDidParseProtobufObject:]
  -[CKDTokenDeletionURLRequest requestOperationClasses]
  -[CKDTokenDeletionURLRequest requiresTokenRegistration]
  -[CKDTokenDeletionURLRequest initWithApsToken:apsEnvironmentString:bundleID:]
  -[CKDTokenDeletionURLRequest setApsToken:]


CKDCodeFunctionInvokeURLRequest : CKDURLRequest
 @property  NSString *serviceName
 @property  NSString *functionName
 @property  NSData *serializedParameters
 @property  NSData *attestationEntropy
 @property  NSArray *pccWrappedInvocationKeys
 @property  @? serializedResultsCallback

  // instance methods
  -[CKDCodeFunctionInvokeURLRequest .cxx_destruct]
  -[CKDCodeFunctionInvokeURLRequest serviceName]
  -[CKDCodeFunctionInvokeURLRequest operationType]
  -[CKDCodeFunctionInvokeURLRequest setServiceName:]
  -[CKDCodeFunctionInvokeURLRequest functionName]
  -[CKDCodeFunctionInvokeURLRequest setFunctionName:]
  -[CKDCodeFunctionInvokeURLRequest serializedParameters]
  -[CKDCodeFunctionInvokeURLRequest generateRequestOperations]
  -[CKDCodeFunctionInvokeURLRequest requestGETPreAuth]
  -[CKDCodeFunctionInvokeURLRequest requestDidParseProtobufObject:]
  -[CKDCodeFunctionInvokeURLRequest requestDidParseNodeFailure:]
  -[CKDCodeFunctionInvokeURLRequest requestOperationClasses]
  -[CKDCodeFunctionInvokeURLRequest allowsAnonymousAccount]
  -[CKDCodeFunctionInvokeURLRequest setSerializedParameters:]
  -[CKDCodeFunctionInvokeURLRequest serializedResultsCallback]
  -[CKDCodeFunctionInvokeURLRequest setSerializedResultsCallback:]
  -[CKDCodeFunctionInvokeURLRequest pccWrappedInvocationKeys]
  -[CKDCodeFunctionInvokeURLRequest attestationEntropy]
  -[CKDCodeFunctionInvokeURLRequest initWithServiceName:functionName:serializedParameters:attestationEntropy:pccWrappedInvocationKeys:]
  -[CKDCodeFunctionInvokeURLRequest setAttestationEntropy:]
  -[CKDCodeFunctionInvokeURLRequest setPccWrappedInvocationKeys:]


CKDGetSubscriptionsURLRequest : CKDURLRequest
 @property  NSArray *subscriptionIDs
 @property  NSMutableArray *subscriptions
 @property  NSMutableDictionary *subscriptionIDByRequestID
 @property  @? subscriptionFetchedBlock

  // instance methods
  -[CKDGetSubscriptionsURLRequest .cxx_destruct]
  -[CKDGetSubscriptionsURLRequest operationType]
  -[CKDGetSubscriptionsURLRequest subscriptions]
  -[CKDGetSubscriptionsURLRequest setSubscriptions:]
  -[CKDGetSubscriptionsURLRequest initWithSubscriptionIDs:]
  -[CKDGetSubscriptionsURLRequest subscriptionIDs]
  -[CKDGetSubscriptionsURLRequest setSubscriptionIDs:]
  -[CKDGetSubscriptionsURLRequest generateRequestOperations]
  -[CKDGetSubscriptionsURLRequest requestDidParseProtobufObject:]
  -[CKDGetSubscriptionsURLRequest requestDidParseNodeFailure:]
  -[CKDGetSubscriptionsURLRequest requestOperationClasses]
  -[CKDGetSubscriptionsURLRequest subscriptionIDByRequestID]
  -[CKDGetSubscriptionsURLRequest setSubscriptionIDByRequestID:]
  -[CKDGetSubscriptionsURLRequest subscriptionFetchedBlock]
  -[CKDGetSubscriptionsURLRequest setSubscriptionFetchedBlock:]


CKDResponseBodyParser : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSError *parserError
 @property  NSObject<OS_dispatch_queue> *parseQueue
 @property  NSMutableData *parserData
 @property  long long qualityOfService
 @property  @? objectParsedBlock

  // instance methods
  -[CKDResponseBodyParser .cxx_destruct]
  -[CKDResponseBodyParser qualityOfService]
  -[CKDResponseBodyParser setQualityOfService:]
  -[CKDResponseBodyParser parserError]
  -[CKDResponseBodyParser initWithQoS:]
  -[CKDResponseBodyParser parseQueue]
  -[CKDResponseBodyParser setParserError:]
  -[CKDResponseBodyParser processData:]
  -[CKDResponseBodyParser finishWithCompletion:]
  -[CKDResponseBodyParser setObjectParsedBlock:]
  -[CKDResponseBodyParser parserData]
  -[CKDResponseBodyParser setParserData:]
  -[CKDResponseBodyParser objectParsedBlock]


CKDPCSKeySyncTracker : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  unsigned long state
 @property  NSString *serviceName
 @property  BOOL manatee
 @property  NSObject<OS_dispatch_group> *syncGroup
 @property  NSDate *completionDate
 @property  NSNumber *syncStatus
 @property  NSError *syncError

  // instance methods
  -[CKDPCSKeySyncTracker .cxx_destruct]
  -[CKDPCSKeySyncTracker state]
  -[CKDPCSKeySyncTracker serviceName]
  -[CKDPCSKeySyncTracker setServiceName:]
  -[CKDPCSKeySyncTracker syncStatus]
  -[CKDPCSKeySyncTracker syncGroup]
  -[CKDPCSKeySyncTracker setCompletionDate:]
  -[CKDPCSKeySyncTracker completionDate]
  -[CKDPCSKeySyncTracker syncError]
  -[CKDPCSKeySyncTracker waitOnSyncWithQueue:handler:]
  -[CKDPCSKeySyncTracker isManatee]
  -[CKDPCSKeySyncTracker setManatee:]
  -[CKDPCSKeySyncTracker setSyncGroup:]
  -[CKDPCSKeySyncTracker setSyncStatus:]
  -[CKDPCSKeySyncTracker setSyncError:]


CKDPCSKeySyncManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *keySyncTrackerByServiceName
 @property  NSObject<OS_dispatch_queue> *keySyncQueue

  // class methods
  +[CKDPCSKeySyncManager sharedManager]

  // instance methods
  -[CKDPCSKeySyncManager init]
  -[CKDPCSKeySyncManager .cxx_destruct]
  -[CKDPCSKeySyncManager syncUserKeysForService:serviceIsManatee:account:shouldThrottle:testOverrideProvider:completionHandler:]
  -[CKDPCSKeySyncManager keySyncQueue]
  -[CKDPCSKeySyncManager keySyncTrackerByServiceName]
  -[CKDPCSKeySyncManager createSyncTrackerForService:manatee:]
  -[CKDPCSKeySyncManager syncTrackerForService:manatee:shortThrottlePeriod:]
  -[CKDPCSKeySyncManager performKeySyncWithSyncTracker:testableSyncConfig:shouldThrottle:completionHandler:]
  -[CKDPCSKeySyncManager setKeySyncTrackerByServiceName:]
  -[CKDPCSKeySyncManager setKeySyncQueue:]


CKDFetchSubscriptionsOperation : CKDDatabaseOperation
 @property  NSMutableArray *subscriptions
 @property  NSArray *subscriptionIDs
 @property  BOOL isFetchAllSubscriptionsOperation
 @property  @? subscriptionFetchedProgressBlock

  // instance methods
  -[CKDFetchSubscriptionsOperation .cxx_destruct]
  -[CKDFetchSubscriptionsOperation main]
  -[CKDFetchSubscriptionsOperation subscriptions]
  -[CKDFetchSubscriptionsOperation setSubscriptions:]
  -[CKDFetchSubscriptionsOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchSubscriptionsOperation activityCreate]
  -[CKDFetchSubscriptionsOperation setIsFetchAllSubscriptionsOperation:]
  -[CKDFetchSubscriptionsOperation subscriptionIDs]
  -[CKDFetchSubscriptionsOperation setSubscriptionIDs:]
  -[CKDFetchSubscriptionsOperation isFetchAllSubscriptionsOperation]
  -[CKDFetchSubscriptionsOperation initWithOperationInfo:clientContext:]
  -[CKDFetchSubscriptionsOperation setSubscriptionFetchedProgressBlock:]
  -[CKDFetchSubscriptionsOperation subscriptionFetchedProgressBlock]
  -[CKDFetchSubscriptionsOperation _handleSubscriptionFetched:withID:responseCode:]


CKDModifyShareHandler : CKDModifyRecordHandler
 @property  BOOL haveAddedOwnerToShare
 @property  BOOL isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
 @property  CKShare *share
 @property  CKRecordID *shareID

  // class methods
  +[CKDModifyShareHandler modifyHandlerWithShare:operation:]
  +[CKDModifyShareHandler modifyHandlerForDeleteWithShareID:operation:]

  // instance methods
  -[CKDModifyShareHandler serviceType]
  -[CKDModifyShareHandler share]
  -[CKDModifyShareHandler shareID]
  -[CKDModifyShareHandler _fetchSharePCSData]
  -[CKDModifyShareHandler _prepareDependentPCSUpdateIfNeededForShareWithSharePCS:error:]
  -[CKDModifyShareHandler _createNewSharePCSDataWithError:]
  -[CKDModifyShareHandler _fetchRootRecordPublicSharingIdentityWithCompletionHandler:]
  -[CKDModifyShareHandler _rollShareAndZonePCSIfNeededForSharePCS:zonePCSData:]
  -[CKDModifyShareHandler _handleSharePCSData:zonePCSData:]
  -[CKDModifyShareHandler _addPublicKeyToSelfParticipant]
  -[CKDModifyShareHandler _setupParticipantsProtectionInfos]
  -[CKDModifyShareHandler _updateSharePublicPCSWithError:]
  -[CKDModifyShareHandler _serializePCSDataForShareWithError:]
  -[CKDModifyShareHandler _alignParticipantPermissions]
  -[CKDModifyShareHandler prepareForSave]
  -[CKDModifyShareHandler _cleanPublicPCSforShareWithError:]
  -[CKDModifyShareHandler haveAddedOwnerToShare]
  -[CKDModifyShareHandler isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade]
  -[CKDModifyShareHandler _ensurePrivateParticipant:isInInvitedSharePCS:]
  -[CKDModifyShareHandler setHaveAddedOwnerToShare:]
  -[CKDModifyShareHandler isCloudDocsContainer]
  -[CKDModifyShareHandler setIsALegacyPublicShareThatNeedsOwnerPPPCSUpgrade:]
  -[CKDModifyShareHandler _removePrivateParticipantsFromInvitedPCS:error:]
  -[CKDModifyShareHandler _removePublicKey:fromInvitedPCS:]
  -[CKDModifyShareHandler _removePrivateParticipant:fromInvitedSharePCS:]
  -[CKDModifyShareHandler _publicKeyForParticipant:error:]
  -[CKDModifyShareHandler createPublicIdentityFromPublicKeyForParticipant:error:]
  -[CKDModifyShareHandler _addedPrivateParticipantNeedsAManateeInvitation:]
  -[CKDModifyShareHandler clearProtectionDataForRecord]
  -[CKDModifyShareHandler setServerRecord:]
  -[CKDModifyShareHandler savePCSDataToCache]
  -[CKDModifyShareHandler isShare]
  -[CKDModifyShareHandler sideEffectRecordIDs]
  -[CKDModifyShareHandler noteSideEffectRecordPendingModify:]
  -[CKDModifyShareHandler noteSideEffectRecordAbsent:]
  -[CKDModifyShareHandler noteSideEffectRecordPendingDelete:]
  -[CKDModifyShareHandler fetchSharePCSData]
  -[CKDModifyShareHandler updateParticipantsForFetchedShare:error:]


CKDPSubscriptionCreateRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSubscription
 @property  CKDPSubscription *subscription

  // class methods
  +[CKDPSubscriptionCreateRequest options]

  // instance methods
  -[CKDPSubscriptionCreateRequest isEqual:]
  -[CKDPSubscriptionCreateRequest copyWithZone:]
  -[CKDPSubscriptionCreateRequest .cxx_destruct]
  -[CKDPSubscriptionCreateRequest dictionaryRepresentation]
  -[CKDPSubscriptionCreateRequest writeTo:]
  -[CKDPSubscriptionCreateRequest mergeFrom:]
  -[CKDPSubscriptionCreateRequest readFrom:]
  -[CKDPSubscriptionCreateRequest copyTo:]
  -[CKDPSubscriptionCreateRequest subscription]
  -[CKDPSubscriptionCreateRequest setSubscription:]
  -[CKDPSubscriptionCreateRequest requestTypeCode]
  -[CKDPSubscriptionCreateRequest responseClass]
  -[CKDPSubscriptionCreateRequest hasSubscription]


CKLLog : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <OSLogPersistenceDelegate, OSActivityStreamDelegate>
 @property  unsigned long source
 @property  OSLogPersistence *archiveSource
 @property  OSActivityStream *streamSource
 @property  NSMutableArray *streamObservers
 @property  @? completionHandler
 @property  BOOL wantsSimulatorLogs
 @property  double startTimeOffset
 @property  NSDate *absoluteStartDate
 @property  NSString *processName
 @property  BOOL colorOutput
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKLLog setSource:]
  -[CKLLog .cxx_destruct]
  -[CKLLog _init]
  -[CKLLog source]
  -[CKLLog processName]
  -[CKLLog setProcessName:]
  -[CKLLog completionHandler]
  -[CKLLog setCompletionHandler:]
  -[CKLLog streamDidStop:]
  -[CKLLog activityStream:results:]
  -[CKLLog streamDidFail:error:]
  -[CKLLog persistenceDidFinishReadingForStartDate:endDate:]
  -[CKLLog persistence:results:error:]
  -[CKLLog colorOutput]
  -[CKLLog setColorOutput:]
  -[CKLLog _configureStreamSource:]
  -[CKLLog streamObservers]
  -[CKLLog wantsSimulatorLogs]
  -[CKLLog absoluteStartDate]
  -[CKLLog startTimeOffset]
  -[CKLLog archiveSource]
  -[CKLLog streamSource]
  -[CKLLog initForHostStream]
  -[CKLLog initWithRemoteDevice:]
  -[CKLLog initWithArchiveAtURL:]
  -[CKLLog addStreamObserver:]
  -[CKLLog streamLogsWithCompletion:]
  -[CKLLog setWantsSimulatorLogs:]
  -[CKLLog setStartTimeOffset:]
  -[CKLLog setAbsoluteStartDate:]
  -[CKLLog setArchiveSource:]
  -[CKLLog setStreamSource:]
  -[CKLLog setStreamObservers:]


CKDPSubscriptionNotificationAlert : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasText
 @property  NSString *text
 @property  BOOL hasLocalizedKey
 @property  NSString *localizedKey
 @property  NSMutableArray *localizedArguments
 @property  BOOL hasActionLocKey
 @property  NSString *actionLocKey
 @property  BOOL hasLaunchImage
 @property  NSString *launchImage
 @property  BOOL hasSoundName
 @property  NSString *soundName
 @property  BOOL hasCategory
 @property  NSString *category
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasTitleLocalizedKey
 @property  NSString *titleLocalizedKey
 @property  NSMutableArray *titleLocalizedArguments
 @property  BOOL hasSubtitle
 @property  NSString *subtitle
 @property  BOOL hasSubtitleLocalizedKey
 @property  NSString *subtitleLocalizedKey
 @property  NSMutableArray *subtitleLocalizedArguments

  // class methods
  +[CKDPSubscriptionNotificationAlert localizedArgumentsType]
  +[CKDPSubscriptionNotificationAlert titleLocalizedArgumentsType]
  +[CKDPSubscriptionNotificationAlert subtitleLocalizedArgumentsType]

  // instance methods
  -[CKDPSubscriptionNotificationAlert isEqual:]
  -[CKDPSubscriptionNotificationAlert copyWithZone:]
  -[CKDPSubscriptionNotificationAlert .cxx_destruct]
  -[CKDPSubscriptionNotificationAlert category]
  -[CKDPSubscriptionNotificationAlert setCategory:]
  -[CKDPSubscriptionNotificationAlert dictionaryRepresentation]
  -[CKDPSubscriptionNotificationAlert title]
  -[CKDPSubscriptionNotificationAlert setTitle:]
  -[CKDPSubscriptionNotificationAlert writeTo:]
  -[CKDPSubscriptionNotificationAlert text]
  -[CKDPSubscriptionNotificationAlert setText:]
  -[CKDPSubscriptionNotificationAlert subtitle]
  -[CKDPSubscriptionNotificationAlert mergeFrom:]
  -[CKDPSubscriptionNotificationAlert readFrom:]
  -[CKDPSubscriptionNotificationAlert copyTo:]
  -[CKDPSubscriptionNotificationAlert hasCategory]
  -[CKDPSubscriptionNotificationAlert setSubtitle:]
  -[CKDPSubscriptionNotificationAlert hasTitle]
  -[CKDPSubscriptionNotificationAlert hasText]
  -[CKDPSubscriptionNotificationAlert setSoundName:]
  -[CKDPSubscriptionNotificationAlert soundName]
  -[CKDPSubscriptionNotificationAlert hasSubtitle]
  -[CKDPSubscriptionNotificationAlert addLocalizedArguments:]
  -[CKDPSubscriptionNotificationAlert addTitleLocalizedArguments:]
  -[CKDPSubscriptionNotificationAlert addSubtitleLocalizedArguments:]
  -[CKDPSubscriptionNotificationAlert setLocalizedKey:]
  -[CKDPSubscriptionNotificationAlert localizedArgumentsCount]
  -[CKDPSubscriptionNotificationAlert clearLocalizedArguments]
  -[CKDPSubscriptionNotificationAlert localizedArgumentsAtIndex:]
  -[CKDPSubscriptionNotificationAlert setActionLocKey:]
  -[CKDPSubscriptionNotificationAlert setLaunchImage:]
  -[CKDPSubscriptionNotificationAlert setTitleLocalizedKey:]
  -[CKDPSubscriptionNotificationAlert titleLocalizedArgumentsCount]
  -[CKDPSubscriptionNotificationAlert clearTitleLocalizedArguments]
  -[CKDPSubscriptionNotificationAlert titleLocalizedArgumentsAtIndex:]
  -[CKDPSubscriptionNotificationAlert setSubtitleLocalizedKey:]
  -[CKDPSubscriptionNotificationAlert subtitleLocalizedArgumentsCount]
  -[CKDPSubscriptionNotificationAlert clearSubtitleLocalizedArguments]
  -[CKDPSubscriptionNotificationAlert subtitleLocalizedArgumentsAtIndex:]
  -[CKDPSubscriptionNotificationAlert hasLocalizedKey]
  -[CKDPSubscriptionNotificationAlert hasActionLocKey]
  -[CKDPSubscriptionNotificationAlert hasLaunchImage]
  -[CKDPSubscriptionNotificationAlert hasSoundName]
  -[CKDPSubscriptionNotificationAlert hasTitleLocalizedKey]
  -[CKDPSubscriptionNotificationAlert hasSubtitleLocalizedKey]
  -[CKDPSubscriptionNotificationAlert localizedKey]
  -[CKDPSubscriptionNotificationAlert localizedArguments]
  -[CKDPSubscriptionNotificationAlert setLocalizedArguments:]
  -[CKDPSubscriptionNotificationAlert actionLocKey]
  -[CKDPSubscriptionNotificationAlert launchImage]
  -[CKDPSubscriptionNotificationAlert titleLocalizedKey]
  -[CKDPSubscriptionNotificationAlert titleLocalizedArguments]
  -[CKDPSubscriptionNotificationAlert setTitleLocalizedArguments:]
  -[CKDPSubscriptionNotificationAlert subtitleLocalizedKey]
  -[CKDPSubscriptionNotificationAlert subtitleLocalizedArguments]
  -[CKDPSubscriptionNotificationAlert setSubtitleLocalizedArguments:]


CKDGetUserRecordURLRequest : CKDURLRequest
 @property  CKRecord *userRecord
 @property  @? recordFetchedBlock

  // instance methods
  -[CKDGetUserRecordURLRequest .cxx_destruct]
  -[CKDGetUserRecordURLRequest operationType]
  -[CKDGetUserRecordURLRequest setRecordFetchedBlock:]
  -[CKDGetUserRecordURLRequest recordFetchedBlock]
  -[CKDGetUserRecordURLRequest userRecord]
  -[CKDGetUserRecordURLRequest generateRequestOperations]
  -[CKDGetUserRecordURLRequest requestDidParseProtobufObject:]
  -[CKDGetUserRecordURLRequest requestOperationClasses]
  -[CKDGetUserRecordURLRequest setUserRecord:]


CKDPRecordRetrieveChangesResponseRecordChange : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRecordIdentifier
 @property  CKDPRecordIdentifier *recordIdentifier
 @property  BOOL hasEtag
 @property  NSString *etag
 @property  BOOL hasRecordType
 @property  CKDPRecordType *recordType
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasRecord
 @property  CKDPRecord *record

  // instance methods
  -[CKDPRecordRetrieveChangesResponseRecordChange isEqual:]
  -[CKDPRecordRetrieveChangesResponseRecordChange copyWithZone:]
  -[CKDPRecordRetrieveChangesResponseRecordChange type]
  -[CKDPRecordRetrieveChangesResponseRecordChange setType:]
  -[CKDPRecordRetrieveChangesResponseRecordChange .cxx_destruct]
  -[CKDPRecordRetrieveChangesResponseRecordChange dictionaryRepresentation]
  -[CKDPRecordRetrieveChangesResponseRecordChange etag]
  -[CKDPRecordRetrieveChangesResponseRecordChange writeTo:]
  -[CKDPRecordRetrieveChangesResponseRecordChange recordType]
  -[CKDPRecordRetrieveChangesResponseRecordChange mergeFrom:]
  -[CKDPRecordRetrieveChangesResponseRecordChange readFrom:]
  -[CKDPRecordRetrieveChangesResponseRecordChange copyTo:]
  -[CKDPRecordRetrieveChangesResponseRecordChange typeAsString:]
  -[CKDPRecordRetrieveChangesResponseRecordChange StringAsType:]
  -[CKDPRecordRetrieveChangesResponseRecordChange setEtag:]
  -[CKDPRecordRetrieveChangesResponseRecordChange hasEtag]
  -[CKDPRecordRetrieveChangesResponseRecordChange setRecordType:]
  -[CKDPRecordRetrieveChangesResponseRecordChange setRecordIdentifier:]
  -[CKDPRecordRetrieveChangesResponseRecordChange setHasType:]
  -[CKDPRecordRetrieveChangesResponseRecordChange hasType]
  -[CKDPRecordRetrieveChangesResponseRecordChange hasRecordIdentifier]
  -[CKDPRecordRetrieveChangesResponseRecordChange recordIdentifier]
  -[CKDPRecordRetrieveChangesResponseRecordChange record]
  -[CKDPRecordRetrieveChangesResponseRecordChange setRecord:]
  -[CKDPRecordRetrieveChangesResponseRecordChange hasRecord]
  -[CKDPRecordRetrieveChangesResponseRecordChange hasRecordType]


CKDPFetchArchivedRecordsRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier
 @property  BOOL hasArchiveContinuationToken
 @property  NSData *archiveContinuationToken
 @property  BOOL hasNewestFirst
 @property  BOOL newestFirst
 @property  BOOL hasLimit
 @property  unsigned int limit
 @property  BOOL hasAssetsToDownload
 @property  CKDPAssetsToDownload *assetsToDownload

  // class methods
  +[CKDPFetchArchivedRecordsRequest options]

  // instance methods
  -[CKDPFetchArchivedRecordsRequest isEqual:]
  -[CKDPFetchArchivedRecordsRequest copyWithZone:]
  -[CKDPFetchArchivedRecordsRequest .cxx_destruct]
  -[CKDPFetchArchivedRecordsRequest dictionaryRepresentation]
  -[CKDPFetchArchivedRecordsRequest limit]
  -[CKDPFetchArchivedRecordsRequest setLimit:]
  -[CKDPFetchArchivedRecordsRequest writeTo:]
  -[CKDPFetchArchivedRecordsRequest mergeFrom:]
  -[CKDPFetchArchivedRecordsRequest readFrom:]
  -[CKDPFetchArchivedRecordsRequest copyTo:]
  -[CKDPFetchArchivedRecordsRequest setZoneIdentifier:]
  -[CKDPFetchArchivedRecordsRequest hasZoneIdentifier]
  -[CKDPFetchArchivedRecordsRequest zoneIdentifier]
  -[CKDPFetchArchivedRecordsRequest setHasLimit:]
  -[CKDPFetchArchivedRecordsRequest hasLimit]
  -[CKDPFetchArchivedRecordsRequest setAssetsToDownload:]
  -[CKDPFetchArchivedRecordsRequest hasAssetsToDownload]
  -[CKDPFetchArchivedRecordsRequest assetsToDownload]
  -[CKDPFetchArchivedRecordsRequest setArchiveContinuationToken:]
  -[CKDPFetchArchivedRecordsRequest hasArchiveContinuationToken]
  -[CKDPFetchArchivedRecordsRequest setNewestFirst:]
  -[CKDPFetchArchivedRecordsRequest setHasNewestFirst:]
  -[CKDPFetchArchivedRecordsRequest hasNewestFirst]
  -[CKDPFetchArchivedRecordsRequest archiveContinuationToken]
  -[CKDPFetchArchivedRecordsRequest newestFirst]


CKDPUser : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIdentifier
 @property  CKDPIdentifier *identifier
 @property  BOOL hasAlias
 @property  CKDPUserAlias *alias
 @property  BOOL hasFirstName
 @property  NSString *firstName
 @property  BOOL hasLastName
 @property  NSString *lastName
 @property  BOOL hasProtectionInfo
 @property  CKDPProtectionInfo *protectionInfo
 @property  BOOL hasIsInNetwork
 @property  BOOL isInNetwork

  // instance methods
  -[CKDPUser isEqual:]
  -[CKDPUser copyWithZone:]
  -[CKDPUser .cxx_destruct]
  -[CKDPUser identifier]
  -[CKDPUser setIdentifier:]
  -[CKDPUser dictionaryRepresentation]
  -[CKDPUser writeTo:]
  -[CKDPUser mergeFrom:]
  -[CKDPUser readFrom:]
  -[CKDPUser copyTo:]
  -[CKDPUser firstName]
  -[CKDPUser lastName]
  -[CKDPUser protectionInfo]
  -[CKDPUser setProtectionInfo:]
  -[CKDPUser hasIdentifier]
  -[CKDPUser setAlias:]
  -[CKDPUser alias]
  -[CKDPUser setFirstName:]
  -[CKDPUser setLastName:]
  -[CKDPUser hasFirstName]
  -[CKDPUser hasLastName]
  -[CKDPUser hasProtectionInfo]
  -[CKDPUser hasAlias]
  -[CKDPUser isInNetwork]
  -[CKDPUser setIsInNetwork:]
  -[CKDPUser setHasIsInNetwork:]
  -[CKDPUser hasIsInNetwork]


CKDPAssetUploadTokenRetrieveRequestAssetField : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasField
 @property  CKDPRecordFieldIdentifier *field
 @property  NSMutableArray *assets

  // class methods
  +[CKDPAssetUploadTokenRetrieveRequestAssetField assetsType]

  // instance methods
  -[CKDPAssetUploadTokenRetrieveRequestAssetField isEqual:]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField copyWithZone:]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField .cxx_destruct]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField dictionaryRepresentation]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField writeTo:]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField mergeFrom:]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField readFrom:]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField copyTo:]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField field]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField assets]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField setAssets:]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField setField:]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField hasField]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField assetsCount]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField addAssets:]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField clearAssets]
  -[CKDPAssetUploadTokenRetrieveRequestAssetField assetsAtIndex:]


CKDMMCSItemGroup : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSArray *tuple
 @property  NSURL *contentBaseURL
 @property  NSString *owner
 @property  NSString *requestor
 @property  NSError *error
 @property  CKAssetDownloadPreauthorization *downloadPreauthorization
 @property  BOOL complete
 @property  <MMCSOperationMetric> *metrics
 @property  NSData *authPutRequest
 @property  NSArray *items

  // class methods
  +[CKDMMCSItemGroup tupleForItem:]

  // instance methods
  -[CKDMMCSItemGroup .cxx_destruct]
  -[CKDMMCSItemGroup error]
  -[CKDMMCSItemGroup setError:]
  -[CKDMMCSItemGroup owner]
  -[CKDMMCSItemGroup metrics]
  -[CKDMMCSItemGroup items]
  -[CKDMMCSItemGroup complete]
  -[CKDMMCSItemGroup setMetrics:]
  -[CKDMMCSItemGroup addItem:]
  -[CKDMMCSItemGroup setComplete:]
  -[CKDMMCSItemGroup CKPropertiesDescription]
  -[CKDMMCSItemGroup contentBaseURL]
  -[CKDMMCSItemGroup requestor]
  -[CKDMMCSItemGroup downloadPreauthorization]
  -[CKDMMCSItemGroup authPutRequest]
  -[CKDMMCSItemGroup setAuthPutRequest:]
  -[CKDMMCSItemGroup tuple]
  -[CKDMMCSItemGroup initWithTuple:]
  -[CKDMMCSItemGroup setTuple:]


CKDPUserPrivacySettingsBatchLookupResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *containerPrivacySettings

  // class methods
  +[CKDPUserPrivacySettingsBatchLookupResponse containerPrivacySettingsType]

  // instance methods
  -[CKDPUserPrivacySettingsBatchLookupResponse isEqual:]
  -[CKDPUserPrivacySettingsBatchLookupResponse copyWithZone:]
  -[CKDPUserPrivacySettingsBatchLookupResponse .cxx_destruct]
  -[CKDPUserPrivacySettingsBatchLookupResponse dictionaryRepresentation]
  -[CKDPUserPrivacySettingsBatchLookupResponse writeTo:]
  -[CKDPUserPrivacySettingsBatchLookupResponse mergeFrom:]
  -[CKDPUserPrivacySettingsBatchLookupResponse readFrom:]
  -[CKDPUserPrivacySettingsBatchLookupResponse copyTo:]
  -[CKDPUserPrivacySettingsBatchLookupResponse containerPrivacySettings]
  -[CKDPUserPrivacySettingsBatchLookupResponse addContainerPrivacySettings:]
  -[CKDPUserPrivacySettingsBatchLookupResponse containerPrivacySettingsCount]
  -[CKDPUserPrivacySettingsBatchLookupResponse clearContainerPrivacySettings]
  -[CKDPUserPrivacySettingsBatchLookupResponse containerPrivacySettingsAtIndex:]
  -[CKDPUserPrivacySettingsBatchLookupResponse setContainerPrivacySettings:]


CKDPSubscriptionRetrieveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *subscriptions

  // class methods
  +[CKDPSubscriptionRetrieveResponse subscriptionsType]

  // instance methods
  -[CKDPSubscriptionRetrieveResponse isEqual:]
  -[CKDPSubscriptionRetrieveResponse copyWithZone:]
  -[CKDPSubscriptionRetrieveResponse .cxx_destruct]
  -[CKDPSubscriptionRetrieveResponse dictionaryRepresentation]
  -[CKDPSubscriptionRetrieveResponse writeTo:]
  -[CKDPSubscriptionRetrieveResponse mergeFrom:]
  -[CKDPSubscriptionRetrieveResponse readFrom:]
  -[CKDPSubscriptionRetrieveResponse copyTo:]
  -[CKDPSubscriptionRetrieveResponse subscriptions]
  -[CKDPSubscriptionRetrieveResponse setSubscriptions:]
  -[CKDPSubscriptionRetrieveResponse addSubscriptions:]
  -[CKDPSubscriptionRetrieveResponse subscriptionsCount]
  -[CKDPSubscriptionRetrieveResponse clearSubscriptions]
  -[CKDPSubscriptionRetrieveResponse subscriptionsAtIndex:]


CKDPSubscriptionCreateResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPSubscriptionCreateResponse isEqual:]
  -[CKDPSubscriptionCreateResponse copyWithZone:]
  -[CKDPSubscriptionCreateResponse dictionaryRepresentation]
  -[CKDPSubscriptionCreateResponse writeTo:]
  -[CKDPSubscriptionCreateResponse mergeFrom:]
  -[CKDPSubscriptionCreateResponse readFrom:]
  -[CKDPSubscriptionCreateResponse copyTo:]


CKDPOplockFailure : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRecordForOplockFailure
 @property  CKDPRecord *recordForOplockFailure

  // instance methods
  -[CKDPOplockFailure isEqual:]
  -[CKDPOplockFailure copyWithZone:]
  -[CKDPOplockFailure .cxx_destruct]
  -[CKDPOplockFailure dictionaryRepresentation]
  -[CKDPOplockFailure writeTo:]
  -[CKDPOplockFailure mergeFrom:]
  -[CKDPOplockFailure readFrom:]
  -[CKDPOplockFailure copyTo:]
  -[CKDPOplockFailure setRecordForOplockFailure:]
  -[CKDPOplockFailure hasRecordForOplockFailure]
  -[CKDPOplockFailure recordForOplockFailure]


CKCDPStopContainerResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[CKCDPStopContainerResponse isEqual:]
  -[CKCDPStopContainerResponse copyWithZone:]
  -[CKCDPStopContainerResponse dictionaryRepresentation]
  -[CKCDPStopContainerResponse writeTo:]
  -[CKCDPStopContainerResponse mergeFrom:]
  -[CKCDPStopContainerResponse readFrom:]
  -[CKCDPStopContainerResponse copyTo:]
  -[CKCDPStopContainerResponse success]
  -[CKCDPStopContainerResponse setSuccess:]
  -[CKCDPStopContainerResponse hasSuccess]
  -[CKCDPStopContainerResponse setHasSuccess:]


CKDMMCS : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL didDrop
 @property  long long checkoutCount
 @property  CKDMMCSEngineContext *MMCSEngineContext
 @property  NSString *path
 @property  CKDAssetCache *assetCache
 @property  CKDClientContext *clientContext
 @property  unsigned int maxChunkCountForSection

  // class methods
  +[CKDMMCS protocolVersion]
  +[CKDMMCS MMCSWrapperForApplicationBundleID:assetDirectoryContext:isUTAccount:error:]
  +[CKDMMCS protocolHeaders]
  +[CKDMMCS zeroSizeFileSignature]
  +[CKDMMCS sharedWrappersByPath]
  +[CKDMMCS _commonErrorCodeWithMMCSError:]
  +[CKDMMCS _errorCodeWithMMCSPutError:]
  +[CKDMMCS _errorCodeWithMMCSGetError:]
  +[CKDMMCS _errorCodeWithMMCSRegisterError:]
  +[CKDMMCS _userInfoFromMMCSRetryableError:]
  +[CKDMMCS _errorWithMMCSError:path:description:operationType:]
  +[CKDMMCS purgeMMCSDirectoryWithPath:]
  +[CKDMMCS _errorWithMMCSError:description:operationType:]
  +[CKDMMCS sharedMMCSItemReaders]
  +[CKDMMCS sharedItemIDs]
  +[CKDMMCS startTrackingMMCSItemReader:]
  +[CKDMMCS stopTrackingMMCSItemReader:]
  +[CKDMMCS startTrackingItemIDsForMMCSItems:]
  +[CKDMMCS stopTrackingItemIDsForMMCSItems:]
  +[CKDMMCS isTrackingItemID:]

  // instance methods
  -[CKDMMCS dealloc]
  -[CKDMMCS .cxx_destruct]
  -[CKDMMCS path]
  -[CKDMMCS setPath:]
  -[CKDMMCS didDrop]
  -[CKDMMCS setDidDrop:]
  -[CKDMMCS CKStatusReportArray]
  -[CKDMMCS assetCache]
  -[CKDMMCS setAssetCache:]
  -[CKDMMCS clientContext]
  -[CKDMMCS setClientContext:]
  -[CKDMMCS drop]
  -[CKDMMCS getSectionItem:operation:options:progress:completionHandler:]
  -[CKDMMCS getItemGroupSet:operation:shouldFetchAssetContentInMemory:options:progress:command:completionHandler:]
  -[CKDMMCS getMaxChunkCountForSection]
  -[CKDMMCS registerItemGroupSet:operation:options:completionHandler:]
  -[CKDMMCS getChunkKeysItemGroupSet:operation:options:completionHandler:]
  -[CKDMMCS putSectionItem:operation:options:progress:completionHandler:]
  -[CKDMMCS putItemGroupSet:operation:options:progress:completionHandler:]
  -[CKDMMCS putChunkKeysItemGroupSet:operation:options:completionHandler:]
  -[CKDMMCS checkoutCount]
  -[CKDMMCS MMCSEngineContext]
  -[CKDMMCS setCheckoutCount:]
  -[CKDMMCS initWithMMCSEngineContext:path:]
  -[CKDMMCS _referenceIdentifierFromAssetKey:]
  -[CKDMMCS getMMCSEngine]
  -[CKDMMCS _contextToRegisterItemGroup:operation:options:completionHandler:]
  -[CKDMMCS _logMMCSOptions:]
  -[CKDMMCS _contextToGetOrPutChunkKeysItemGroup:operation:options:completionHandler:]
  -[CKDMMCS _contextToGetItemGroup:operation:options:progress:command:completionHandler:]
  -[CKDMMCS _contextToPutItemGroup:operation:options:progress:completionHandler:]
  -[CKDMMCS performOnRunLoop:]
  -[CKDMMCS registeredItemCount:error:]
  -[CKDMMCS _getRegisteredItemsGreaterThan:itemIds:itemCount:error:]
  -[CKDMMCS _unregisterItemIDs:]
  -[CKDMMCS _contextToPutSectionItem:operation:options:progress:completionHandler:]
  -[CKDMMCS _contextToGetSectionItem:operation:options:progress:completionHandler:]
  -[CKDMMCS showRegisteredItems]
  -[CKDMMCS unregisterItemIDs:]
  -[CKDMMCS unregisterItemIDs:completionBlock:]
  -[CKDMMCS setMMCSEngineContext:]


CKDMMCSItem : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSURL *fileURL
 @property  NSNumber *deviceID
 @property  NSNumber *fileID
 @property  NSNumber *generationID
 @property  NSFileHandle *clientOpenedFileHandle
 @property  NSNumber *modTimeInSeconds
 @property  unsigned long itemID
 @property  double progress
 @property  unsigned long fileSize
 @property  unsigned long paddedFileSize
 @property  unsigned long offset
 @property  unsigned int chunkCount
 @property  unsigned long packageIndex
 @property  NSString *putPackageSectionIdentifier
 @property  CKAsset *asset
 @property  CKPackage *package
 @property  CKRecordID *recordID
 @property  NSString *recordType
 @property  NSString *recordKey
 @property  NSData *signature
 @property  NSString *itemTypeHint
 @property  NSURL *contentBaseURL
 @property  NSString *owner
 @property  NSString *requestor
 @property  NSString *authToken
 @property  CKAssetDownloadPreauthorization *downloadPreauthorization
 @property  NSString *uploadReceipt
 @property  double uploadReceiptExpiration
 @property  NSMutableArray *sectionItems
 @property  NSError *error
 @property  NSData *assetKey
 @property  NSData *wrappedAssetKey
 @property  NSData *clearAssetKey
 @property  NSData *boundaryKey
 @property  NSData *referenceSignature
 @property  CKDMMCSItemCommandWriter *writer
 @property  BOOL inMemoryDownloadLooksOkay
 @property  unsigned long uploadTokenExpiration
 @property  unsigned long downloadTokenExpiration
 @property  NSDictionary *assetChunkerOptions
 @property  CKDAssetZoneKey *assetZoneKey
 @property  NSURL *constructedAssetDownloadURL
 @property  unsigned long constructedAssetEstimatedSize
 @property  NSString *trackingUUID
 @property  BOOL hasSize
 @property  BOOL hasOffset
 @property  BOOL finished
 @property  BOOL temporary
 @property  BOOL shouldReadRawEncryptedData
 @property  BOOL shouldReadAssetContentUsingClientProxy
 @property  BOOL isAlreadyRegistered
 @property  BOOL isReaderReadFrom
 @property  BOOL isRereferencedAssetUpload

  // instance methods
  -[CKDMMCSItem init]
  -[CKDMMCSItem .cxx_destruct]
  -[CKDMMCSItem setOwner:]
  -[CKDMMCSItem error]
  -[CKDMMCSItem fileSize]
  -[CKDMMCSItem setError:]
  -[CKDMMCSItem setFinished:]
  -[CKDMMCSItem finished]
  -[CKDMMCSItem progress]
  -[CKDMMCSItem setPackage:]
  -[CKDMMCSItem fileURL]
  -[CKDMMCSItem setFileURL:]
  -[CKDMMCSItem owner]
  -[CKDMMCSItem itemID]
  -[CKDMMCSItem openWithError:]
  -[CKDMMCSItem setOffset:]
  -[CKDMMCSItem deviceID]
  -[CKDMMCSItem setDeviceID:]
  -[CKDMMCSItem recordType]
  -[CKDMMCSItem recordID]
  -[CKDMMCSItem offset]
  -[CKDMMCSItem setItemID:]
  -[CKDMMCSItem signature]
  -[CKDMMCSItem asset]
  -[CKDMMCSItem setAsset:]
  -[CKDMMCSItem setProgress:]
  -[CKDMMCSItem package]
  -[CKDMMCSItem initWithAsset:]
  -[CKDMMCSItem setFileSize:]
  -[CKDMMCSItem setRecordID:]
  -[CKDMMCSItem CKPropertiesDescription]
  -[CKDMMCSItem shouldReadRawEncryptedData]
  -[CKDMMCSItem shouldReadAssetContentUsingClientProxy]
  -[CKDMMCSItem setRecordType:]
  -[CKDMMCSItem fileID]
  -[CKDMMCSItem generationID]
  -[CKDMMCSItem setFileID:]
  -[CKDMMCSItem setGenerationID:]
  -[CKDMMCSItem setShouldReadRawEncryptedData:]
  -[CKDMMCSItem clientOpenedFileHandle]
  -[CKDMMCSItem setClientOpenedFileHandle:]
  -[CKDMMCSItem modTimeInSeconds]
  -[CKDMMCSItem setModTimeInSeconds:]
  -[CKDMMCSItem referenceSignature]
  -[CKDMMCSItem assetKey]
  -[CKDMMCSItem setReferenceSignature:]
  -[CKDMMCSItem setAssetKey:]
  -[CKDMMCSItem contentBaseURL]
  -[CKDMMCSItem requestor]
  -[CKDMMCSItem downloadTokenExpiration]
  -[CKDMMCSItem setDownloadTokenExpiration:]
  -[CKDMMCSItem authToken]
  -[CKDMMCSItem clearAssetKey]
  -[CKDMMCSItem setContentBaseURL:]
  -[CKDMMCSItem setRequestor:]
  -[CKDMMCSItem hasSize]
  -[CKDMMCSItem constructedAssetEstimatedSize]
  -[CKDMMCSItem recordKey]
  -[CKDMMCSItem uploadReceipt]
  -[CKDMMCSItem uploadReceiptExpiration]
  -[CKDMMCSItem wrappedAssetKey]
  -[CKDMMCSItem downloadPreauthorization]
  -[CKDMMCSItem isRereferencedAssetUpload]
  -[CKDMMCSItem setRecordKey:]
  -[CKDMMCSItem setAuthToken:]
  -[CKDMMCSItem setDownloadPreauthorization:]
  -[CKDMMCSItem boundaryKey]
  -[CKDMMCSItem setBoundaryKey:]
  -[CKDMMCSItem constructedAssetDownloadURL]
  -[CKDMMCSItem setConstructedAssetDownloadURL:]
  -[CKDMMCSItem setConstructedAssetEstimatedSize:]
  -[CKDMMCSItem setSignature:]
  -[CKDMMCSItem paddedFileSize]
  -[CKDMMCSItem setPaddedFileSize:]
  -[CKDMMCSItem itemTypeHint]
  -[CKDMMCSItem setItemTypeHint:]
  -[CKDMMCSItem setWrappedAssetKey:]
  -[CKDMMCSItem setClearAssetKey:]
  -[CKDMMCSItem setUploadReceipt:]
  -[CKDMMCSItem setUploadReceiptExpiration:]
  -[CKDMMCSItem setHasSize:]
  -[CKDMMCSItem assetChunkerOptions]
  -[CKDMMCSItem setAssetChunkerOptions:]
  -[CKDMMCSItem packageIndex]
  -[CKDMMCSItem setPackageIndex:]
  -[CKDMMCSItem setHasOffset:]
  -[CKDMMCSItem hasOffset]
  -[CKDMMCSItem isTemporary]
  -[CKDMMCSItem setTemporary:]
  -[CKDMMCSItem trackingUUID]
  -[CKDMMCSItem setWriter:]
  -[CKDMMCSItem writer]
  -[CKDMMCSItem chunkCount]
  -[CKDMMCSItem sectionItems]
  -[CKDMMCSItem assetZoneKey]
  -[CKDMMCSItem setUploadTokenExpiration:]
  -[CKDMMCSItem inMemoryDownloadLooksOkay]
  -[CKDMMCSItem initWithPackage:]
  -[CKDMMCSItem setSectionItems:]
  -[CKDMMCSItem setAssetZoneKey:]
  -[CKDMMCSItem setIsReaderReadFrom:]
  -[CKDMMCSItem readBytesOfInMemoryAssetContentWithProxy:offset:length:error:]
  -[CKDMMCSItem setTrackingUUID:]
  -[CKDMMCSItem setupForGetChunkKeysWithAsset:]
  -[CKDMMCSItem getFileSizeWithProxy:error:]
  -[CKDMMCSItem setPutPackageSectionIdentifier:]
  -[CKDMMCSItem openWithProxy:error:]
  -[CKDMMCSItem getFileMetadataWithProxy:fileHandle:error:]
  -[CKDMMCSItem isAlreadyRegistered]
  -[CKDMMCSItem uploadTokenExpiration]
  -[CKDMMCSItem putPackageSectionIdentifier]
  -[CKDMMCSItem isReaderReadFrom]
  -[CKDMMCSItem canBeRegistered]
  -[CKDMMCSItem setChunkCount:]
  -[CKDMMCSItem _openInfo]
  -[CKDMMCSItem clearFileSize]
  -[CKDMMCSItem getFileSizeWithError:]
  -[CKDMMCSItem getFileMetadataWithFileHandle:error:]
  -[CKDMMCSItem setInMemoryDownloadLooksOkay:]
  -[CKDMMCSItem setShouldReadAssetContentUsingClientProxy:]
  -[CKDMMCSItem setIsAlreadyRegistered:]
  -[CKDMMCSItem setIsRereferencedAssetUpload:]


CKDModifyRecordHandler : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKRecord *record
 @property  CKRecordID *recordID
 @property  BOOL isDelete
 @property  NSObject<OS_dispatch_group> *pcsGroup
 @property  CKDPCSManager *pcsManager
 @property  CKDPCSCache *pcsCache
 @property  BOOL didRollRecordPCSMasterKey
 @property  CKDModifyRecordsOperation *operation
 @property  CKDRecordPCSData *recordPCSData
 @property  CKDSharePCSData *sharePCSData
 @property  CKRecord *serverRecord
 @property  NSString *etag
 @property  unsigned long state
 @property  NSError *error
 @property  NSMutableDictionary *rereferencedAssetArrayByFieldname
 @property  CKDProgressTracker *progressTracker
 @property  long long batchRank
 @property  int saveAttempts
 @property  BOOL saveCompletionBlockCalled
 @property  BOOL isShare
 @property  BOOL needsRefetch
 @property  CKDZonePCSData *sharedZonePCSData
 @property  BOOL didAttemptDugongKeyRoll
 @property  NSDictionary *assetUUIDToExpectedProperties

  // class methods
  +[CKDModifyRecordHandler _stringForState:]
  +[CKDModifyRecordHandler modifyHandlerWithRecord:operation:]
  +[CKDModifyRecordHandler modifyHandlerForDeleteWithRecordID:operation:]

  // instance methods
  -[CKDModifyRecordHandler .cxx_destruct]
  -[CKDModifyRecordHandler error]
  -[CKDModifyRecordHandler operation]
  -[CKDModifyRecordHandler setOperation:]
  -[CKDModifyRecordHandler setError:]
  -[CKDModifyRecordHandler state]
  -[CKDModifyRecordHandler etag]
  -[CKDModifyRecordHandler setState:]
  -[CKDModifyRecordHandler recordID]
  -[CKDModifyRecordHandler isDelete]
  -[CKDModifyRecordHandler setIsDelete:]
  -[CKDModifyRecordHandler setRecordID:]
  -[CKDModifyRecordHandler setEtag:]
  -[CKDModifyRecordHandler record]
  -[CKDModifyRecordHandler setRecord:]
  -[CKDModifyRecordHandler assetUUIDToExpectedProperties]
  -[CKDModifyRecordHandler setAssetUUIDToExpectedProperties:]
  -[CKDModifyRecordHandler serverRecord]
  -[CKDModifyRecordHandler pcsManager]
  -[CKDModifyRecordHandler setSharePCSData:]
  -[CKDModifyRecordHandler pcsCache]
  -[CKDModifyRecordHandler didAttemptDugongKeyRoll]
  -[CKDModifyRecordHandler setDidAttemptDugongKeyRoll:]
  -[CKDModifyRecordHandler sharePCSData]
  -[CKDModifyRecordHandler progressTracker]
  -[CKDModifyRecordHandler setProgressTracker:]
  -[CKDModifyRecordHandler _initWithRecord:operation:]
  -[CKDModifyRecordHandler _initForDeleteWithRecordID:operation:]
  -[CKDModifyRecordHandler setSharedZonePCSData:]
  -[CKDModifyRecordHandler pcsGroup]
  -[CKDModifyRecordHandler prepareForSave]
  -[CKDModifyRecordHandler sharedZonePCSData]
  -[CKDModifyRecordHandler clearProtectionDataForRecord]
  -[CKDModifyRecordHandler setServerRecord:]
  -[CKDModifyRecordHandler savePCSDataToCache]
  -[CKDModifyRecordHandler isShare]
  -[CKDModifyRecordHandler sideEffectRecordIDs]
  -[CKDModifyRecordHandler noteSideEffectRecordPendingModify:]
  -[CKDModifyRecordHandler noteSideEffectRecordAbsent:]
  -[CKDModifyRecordHandler noteSideEffectRecordPendingDelete:]
  -[CKDModifyRecordHandler fetchSharePCSData]
  -[CKDModifyRecordHandler _initCommonWithOperation:]
  -[CKDModifyRecordHandler _loadPCSData]
  -[CKDModifyRecordHandler _fetchPCSData]
  -[CKDModifyRecordHandler _unwrapRecordPCSForZone]
  -[CKDModifyRecordHandler _unwrapRecordPCSWithShareID:]
  -[CKDModifyRecordHandler _unwrapRecordPCSForParent]
  -[CKDModifyRecordHandler _addShareToPCSData:withError:]
  -[CKDModifyRecordHandler _useZoneishPCS]
  -[CKDModifyRecordHandler _reallyFetchPCSDataWithOptions:]
  -[CKDModifyRecordHandler _createAndSavePCS]
  -[CKDModifyRecordHandler saveAttempts]
  -[CKDModifyRecordHandler recordPCSData]
  -[CKDModifyRecordHandler _fetchSharePCSForID:withCompletionHandler:]
  -[CKDModifyRecordHandler didRollRecordPCSMasterKey]
  -[CKDModifyRecordHandler setDidRollRecordPCSMasterKey:]
  -[CKDModifyRecordHandler _fetchParentPCSForData:withError:]
  -[CKDModifyRecordHandler _addParentPCS:toRecordPCS:]
  -[CKDModifyRecordHandler _handlePCSData:withError:]
  -[CKDModifyRecordHandler _continueCreateAndSavePCSWithZonePCS:sharePCS:]
  -[CKDModifyRecordHandler _canSetPreviousProtectionEtag]
  -[CKDModifyRecordHandler _fetchExistingPCSForProvidedPCSData:]
  -[CKDModifyRecordHandler _fetchParentPCSForID:withCompletionHandler:]
  -[CKDModifyRecordHandler _clearRecordProtectionDataForRecord]
  -[CKDModifyRecordHandler _createPublicSharingKeyWithError:]
  -[CKDModifyRecordHandler setRecordPCSData:]
  -[CKDModifyRecordHandler _prepareAsset:recordKey:record:error:]
  -[CKDModifyRecordHandler batchRank]
  -[CKDModifyRecordHandler prepareStreamingAsset:forUploadWithRecord:]
  -[CKDModifyRecordHandler _wrapEncryptedDataOnRecord:]
  -[CKDModifyRecordHandler _wrapEncryptedData:withPCS:forField:recordID:]
  -[CKDModifyRecordHandler _pretendToWrapEncryptedDataForRecordValueStore:]
  -[CKDModifyRecordHandler _wrapEncryptedDataForRecordValueStore:withPCS:]
  -[CKDModifyRecordHandler fetchRecordPCSData]
  -[CKDModifyRecordHandler assetsWhichNeedRecordFetch]
  -[CKDModifyRecordHandler prepareAssetsForUploadWithError:]
  -[CKDModifyRecordHandler setPcsGroup:]
  -[CKDModifyRecordHandler rereferencedAssetArrayByFieldname]
  -[CKDModifyRecordHandler setRereferencedAssetArrayByFieldname:]
  -[CKDModifyRecordHandler setBatchRank:]
  -[CKDModifyRecordHandler setSaveAttempts:]
  -[CKDModifyRecordHandler saveCompletionBlockCalled]
  -[CKDModifyRecordHandler setSaveCompletionBlockCalled:]
  -[CKDModifyRecordHandler needsRefetch]
  -[CKDModifyRecordHandler setNeedsRefetch:]


CKDJSONResponseBodyParser : CKDResponseBodyParser
  // instance methods
  -[CKDJSONResponseBodyParser processData:]
  -[CKDJSONResponseBodyParser finishWithCompletion:]


CKDPLocationBound : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRadius
 @property  double radius

  // instance methods
  -[CKDPLocationBound isEqual:]
  -[CKDPLocationBound copyWithZone:]
  -[CKDPLocationBound dictionaryRepresentation]
  -[CKDPLocationBound writeTo:]
  -[CKDPLocationBound radius]
  -[CKDPLocationBound setRadius:]
  -[CKDPLocationBound mergeFrom:]
  -[CKDPLocationBound readFrom:]
  -[CKDPLocationBound copyTo:]
  -[CKDPLocationBound setHasRadius:]
  -[CKDPLocationBound hasRadius]


CKDPSubscriptionRetrieveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIdentifier
 @property  CKDPIdentifier *identifier

  // class methods
  +[CKDPSubscriptionRetrieveRequest options]

  // instance methods
  -[CKDPSubscriptionRetrieveRequest isEqual:]
  -[CKDPSubscriptionRetrieveRequest copyWithZone:]
  -[CKDPSubscriptionRetrieveRequest .cxx_destruct]
  -[CKDPSubscriptionRetrieveRequest identifier]
  -[CKDPSubscriptionRetrieveRequest setIdentifier:]
  -[CKDPSubscriptionRetrieveRequest dictionaryRepresentation]
  -[CKDPSubscriptionRetrieveRequest writeTo:]
  -[CKDPSubscriptionRetrieveRequest mergeFrom:]
  -[CKDPSubscriptionRetrieveRequest readFrom:]
  -[CKDPSubscriptionRetrieveRequest copyTo:]
  -[CKDPSubscriptionRetrieveRequest requestTypeCode]
  -[CKDPSubscriptionRetrieveRequest responseClass]
  -[CKDPSubscriptionRetrieveRequest hasIdentifier]


CKDPUpdateMissingAssetStatusRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasMissingAssetStatusRecordID
 @property  CKDPRecordIdentifier *missingAssetStatusRecordID
 @property  BOOL hasRecovered
 @property  BOOL recovered
 @property  BOOL hasAssetSize
 @property  long long assetSize
 @property  BOOL hasAssetPutReceipt
 @property  NSString *assetPutReceipt
 @property  unsigned long packageAssetSizesCount
 @property  ^q packageAssetSizes
 @property  NSMutableArray *packagePutReceipts

  // class methods
  +[CKDPUpdateMissingAssetStatusRequest options]
  +[CKDPUpdateMissingAssetStatusRequest packagePutReceiptsType]

  // instance methods
  -[CKDPUpdateMissingAssetStatusRequest dealloc]
  -[CKDPUpdateMissingAssetStatusRequest isEqual:]
  -[CKDPUpdateMissingAssetStatusRequest copyWithZone:]
  -[CKDPUpdateMissingAssetStatusRequest .cxx_destruct]
  -[CKDPUpdateMissingAssetStatusRequest dictionaryRepresentation]
  -[CKDPUpdateMissingAssetStatusRequest writeTo:]
  -[CKDPUpdateMissingAssetStatusRequest mergeFrom:]
  -[CKDPUpdateMissingAssetStatusRequest readFrom:]
  -[CKDPUpdateMissingAssetStatusRequest copyTo:]
  -[CKDPUpdateMissingAssetStatusRequest addPackagePutReceipts:]
  -[CKDPUpdateMissingAssetStatusRequest setMissingAssetStatusRecordID:]
  -[CKDPUpdateMissingAssetStatusRequest setAssetPutReceipt:]
  -[CKDPUpdateMissingAssetStatusRequest packageAssetSizesCount]
  -[CKDPUpdateMissingAssetStatusRequest clearPackageAssetSizes]
  -[CKDPUpdateMissingAssetStatusRequest packageAssetSizeAtIndex:]
  -[CKDPUpdateMissingAssetStatusRequest addPackageAssetSize:]
  -[CKDPUpdateMissingAssetStatusRequest packagePutReceiptsCount]
  -[CKDPUpdateMissingAssetStatusRequest clearPackagePutReceipts]
  -[CKDPUpdateMissingAssetStatusRequest packagePutReceiptsAtIndex:]
  -[CKDPUpdateMissingAssetStatusRequest hasMissingAssetStatusRecordID]
  -[CKDPUpdateMissingAssetStatusRequest setRecovered:]
  -[CKDPUpdateMissingAssetStatusRequest setHasRecovered:]
  -[CKDPUpdateMissingAssetStatusRequest hasRecovered]
  -[CKDPUpdateMissingAssetStatusRequest setAssetSize:]
  -[CKDPUpdateMissingAssetStatusRequest setHasAssetSize:]
  -[CKDPUpdateMissingAssetStatusRequest hasAssetSize]
  -[CKDPUpdateMissingAssetStatusRequest hasAssetPutReceipt]
  -[CKDPUpdateMissingAssetStatusRequest packageAssetSizes]
  -[CKDPUpdateMissingAssetStatusRequest setPackageAssetSizes:count:]
  -[CKDPUpdateMissingAssetStatusRequest missingAssetStatusRecordID]
  -[CKDPUpdateMissingAssetStatusRequest recovered]
  -[CKDPUpdateMissingAssetStatusRequest assetSize]
  -[CKDPUpdateMissingAssetStatusRequest assetPutReceipt]
  -[CKDPUpdateMissingAssetStatusRequest packagePutReceipts]
  -[CKDPUpdateMissingAssetStatusRequest setPackagePutReceipts:]


CKDPUserPrivacySettingsRetrieveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasUserPrivacySettings
 @property  CKDPUserPrivacySettings *userPrivacySettings
 @property  NSMutableArray *applicationBundles

  // class methods
  +[CKDPUserPrivacySettingsRetrieveResponse applicationBundleType]

  // instance methods
  -[CKDPUserPrivacySettingsRetrieveResponse isEqual:]
  -[CKDPUserPrivacySettingsRetrieveResponse copyWithZone:]
  -[CKDPUserPrivacySettingsRetrieveResponse .cxx_destruct]
  -[CKDPUserPrivacySettingsRetrieveResponse dictionaryRepresentation]
  -[CKDPUserPrivacySettingsRetrieveResponse writeTo:]
  -[CKDPUserPrivacySettingsRetrieveResponse mergeFrom:]
  -[CKDPUserPrivacySettingsRetrieveResponse readFrom:]
  -[CKDPUserPrivacySettingsRetrieveResponse copyTo:]
  -[CKDPUserPrivacySettingsRetrieveResponse addApplicationBundle:]
  -[CKDPUserPrivacySettingsRetrieveResponse applicationBundlesCount]
  -[CKDPUserPrivacySettingsRetrieveResponse clearApplicationBundles]
  -[CKDPUserPrivacySettingsRetrieveResponse applicationBundleAtIndex:]
  -[CKDPUserPrivacySettingsRetrieveResponse setUserPrivacySettings:]
  -[CKDPUserPrivacySettingsRetrieveResponse hasUserPrivacySettings]
  -[CKDPUserPrivacySettingsRetrieveResponse applicationBundles]
  -[CKDPUserPrivacySettingsRetrieveResponse setApplicationBundles:]
  -[CKDPUserPrivacySettingsRetrieveResponse userPrivacySettings]


CKDTrafficMetadata : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSSecureCoding>
 @property  NSDate *timestamp
 @property  NSURL *url
 @property  NSString *method
 @property  long long status
 @property  NSDictionary *headers
 @property  NSString *requestClassName
 @property  BOOL parsingStandaloneMessage

  // class methods
  +[CKDTrafficMetadata supportsSecureCoding]

  // instance methods
  -[CKDTrafficMetadata encodeWithCoder:]
  -[CKDTrafficMetadata initWithCoder:]
  -[CKDTrafficMetadata .cxx_destruct]
  -[CKDTrafficMetadata method]
  -[CKDTrafficMetadata url]
  -[CKDTrafficMetadata status]
  -[CKDTrafficMetadata timestamp]
  -[CKDTrafficMetadata setTimestamp:]
  -[CKDTrafficMetadata setMethod:]
  -[CKDTrafficMetadata setUrl:]
  -[CKDTrafficMetadata setStatus:]
  -[CKDTrafficMetadata setHeaders:]
  -[CKDTrafficMetadata headers]
  -[CKDTrafficMetadata parsingStandaloneMessage]
  -[CKDTrafficMetadata setParsingStandaloneMessage:]
  -[CKDTrafficMetadata setRequestClassName:]
  -[CKDTrafficMetadata requestClassName]


CKDGetUserPrivacySettingsURLRequest : CKDURLRequest
 @property  CKDPUserPrivacySettings *userPrivacySettings

  // instance methods
  -[CKDGetUserPrivacySettingsURLRequest .cxx_destruct]
  -[CKDGetUserPrivacySettingsURLRequest operationType]
  -[CKDGetUserPrivacySettingsURLRequest databaseScope]
  -[CKDGetUserPrivacySettingsURLRequest setUserPrivacySettings:]
  -[CKDGetUserPrivacySettingsURLRequest userPrivacySettings]
  -[CKDGetUserPrivacySettingsURLRequest generateRequestOperations]
  -[CKDGetUserPrivacySettingsURLRequest requestDidParseProtobufObject:]
  -[CKDGetUserPrivacySettingsURLRequest requestOperationClasses]


CKDAccountNotifier : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  int accountChangedToken
 @property  NSMapTable *notificationHandlers
 @property  NSOperationQueue *accountChangeHandlerQueue

  // class methods
  +[CKDAccountNotifier sharedNotifier]

  // instance methods
  -[CKDAccountNotifier init]
  -[CKDAccountNotifier dealloc]
  -[CKDAccountNotifier .cxx_destruct]
  -[CKDAccountNotifier notificationHandlers]
  -[CKDAccountNotifier setNotificationHandlers:]
  -[CKDAccountNotifier postAccountChangedNotificationWithAccountID:changeType:]
  -[CKDAccountNotifier registerObserver:forAccountChangeNotification:]
  -[CKDAccountNotifier unregisterObserverForAccountChangeNotification:]
  -[CKDAccountNotifier accountChangeHandlerQueue]
  -[CKDAccountNotifier postAccountChangedNotificationToClients]
  -[CKDAccountNotifier accountChangedToken]
  -[CKDAccountNotifier setAccountChangedToken:]
  -[CKDAccountNotifier setAccountChangeHandlerQueue:]


CKDFetchNotificationChangesOperation : CKDOperation
 @property  CKServerChangeToken *previousServerChangeToken
 @property  unsigned long resultsLimit
 @property  BOOL wantsChanges
 @property  CKServerChangeToken *resultServerChangeToken
 @property  BOOL moreComing
 @property  @? notificationChangedBlock

  // instance methods
  -[CKDFetchNotificationChangesOperation .cxx_destruct]
  -[CKDFetchNotificationChangesOperation main]
  -[CKDFetchNotificationChangesOperation setPreviousServerChangeToken:]
  -[CKDFetchNotificationChangesOperation setResultsLimit:]
  -[CKDFetchNotificationChangesOperation moreComing]
  -[CKDFetchNotificationChangesOperation setMoreComing:]
  -[CKDFetchNotificationChangesOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchNotificationChangesOperation activityCreate]
  -[CKDFetchNotificationChangesOperation previousServerChangeToken]
  -[CKDFetchNotificationChangesOperation resultsLimit]
  -[CKDFetchNotificationChangesOperation notificationChangedBlock]
  -[CKDFetchNotificationChangesOperation setWantsChanges:]
  -[CKDFetchNotificationChangesOperation setResultServerChangeToken:]
  -[CKDFetchNotificationChangesOperation resultServerChangeToken]
  -[CKDFetchNotificationChangesOperation setNotificationChangedBlock:]
  -[CKDFetchNotificationChangesOperation wantsChanges]
  -[CKDFetchNotificationChangesOperation initWithOperationInfo:clientContext:]
  -[CKDFetchNotificationChangesOperation operationResultClass]
  -[CKDFetchNotificationChangesOperation fillOutOperationResult:]
  -[CKDFetchNotificationChangesOperation _handleFetchChangesRequestFinished:]


CKDSignedServerPublicKeyURLRequest : CKDURLRequest
 @property  NSURL *plistURL
 @property  ^{__SecPolicy=} certificateTrustPolicy
 @property  CKPublicKey *verifiedPublicKey

  // class methods
  +[CKDSignedServerPublicKeyURLRequest serverResponseIsComplete:]
  +[CKDSignedServerPublicKeyURLRequest certificateListServerPlist:]
  +[CKDSignedServerPublicKeyURLRequest createTrustEvalFromCertificateList:verifiedWithPolicy:]
  +[CKDSignedServerPublicKeyURLRequest nearestExpirationInCertificateList:]
  +[CKDSignedServerPublicKeyURLRequest verifyData:withSignature:usingKey:]
  +[CKDSignedServerPublicKeyURLRequest verifyInteger:withSignature:usingKey:]

  // instance methods
  -[CKDSignedServerPublicKeyURLRequest dealloc]
  -[CKDSignedServerPublicKeyURLRequest .cxx_destruct]
  -[CKDSignedServerPublicKeyURLRequest url]
  -[CKDSignedServerPublicKeyURLRequest partitionType]
  -[CKDSignedServerPublicKeyURLRequest httpMethod]
  -[CKDSignedServerPublicKeyURLRequest requestDidParsePlistObject:]
  -[CKDSignedServerPublicKeyURLRequest serverType]
  -[CKDSignedServerPublicKeyURLRequest allowsAnonymousAccount]
  -[CKDSignedServerPublicKeyURLRequest requiresConfiguration]
  -[CKDSignedServerPublicKeyURLRequest requiresDeviceID]
  -[CKDSignedServerPublicKeyURLRequest requiresTokenRegistration]
  -[CKDSignedServerPublicKeyURLRequest hasRequestBody]
  -[CKDSignedServerPublicKeyURLRequest plistURL]
  -[CKDSignedServerPublicKeyURLRequest certificateTrustPolicy]
  -[CKDSignedServerPublicKeyURLRequest canVerifySignedPlistValues:withKey:]
  -[CKDSignedServerPublicKeyURLRequest setVerifiedPublicKey:]
  -[CKDSignedServerPublicKeyURLRequest initWithPlistURL:verifyWithPolicy:]
  -[CKDSignedServerPublicKeyURLRequest verifiedPublicKey]


CKDTokenRegistrationScheduler : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDSystemAvailabilityWatcher>
 @property  BOOL schedulerIsAvailable
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *callbackBlocks
 @property  NSMutableDictionary *callbackTimers
 @property  NSMutableSet *operations
 @property  <CKDAccountInfoProvider> *unitTestingAccountInfoProvider
 @property  NSMutableDictionary *unitTestingPushTokens
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDTokenRegistrationScheduler sharedScheduler]
  +[CKDTokenRegistrationScheduler sharedSchedulerWithUnitTestingContextInfoProvider:accountInfoProvider:]

  // instance methods
  -[CKDTokenRegistrationScheduler init]
  -[CKDTokenRegistrationScheduler dealloc]
  -[CKDTokenRegistrationScheduler setQueue:]
  -[CKDTokenRegistrationScheduler queue]
  -[CKDTokenRegistrationScheduler .cxx_destruct]
  -[CKDTokenRegistrationScheduler operations]
  -[CKDTokenRegistrationScheduler setOperations:]
  -[CKDTokenRegistrationScheduler canRunGivenAvailabilityState:]
  -[CKDTokenRegistrationScheduler unregisterTokenForAppContainerAccountTuple:]
  -[CKDTokenRegistrationScheduler unregisterAllTokensForAccountID:completionHandler:]
  -[CKDTokenRegistrationScheduler systemAvailabilityChanged:]
  -[CKDTokenRegistrationScheduler forceTokenRefreshForAllClients]
  -[CKDTokenRegistrationScheduler ensureTokenRefreshForAppContainerAccountTuple:contextInfoProvider:completionBlock:]
  -[CKDTokenRegistrationScheduler initWithAccountInfoProvider:]
  -[CKDTokenRegistrationScheduler handlePublicPushTokenDidUpdate:]
  -[CKDTokenRegistrationScheduler setSchedulerAvailable:]
  -[CKDTokenRegistrationScheduler schedulerIsAvailable]
  -[CKDTokenRegistrationScheduler setSchedulerIsAvailable:]
  -[CKDTokenRegistrationScheduler unitTestingAccountInfoProvider]
  -[CKDTokenRegistrationScheduler refreshAllClientsNow:]
  -[CKDTokenRegistrationScheduler registerTokenRefreshActivity]
  -[CKDTokenRegistrationScheduler _handlePushToken:forAppContainerAccountTuple:applicationMetadata:appContainerIntersectionMetadata:]
  -[CKDTokenRegistrationScheduler callbackTimers]
  -[CKDTokenRegistrationScheduler unitTestingPushTokens]
  -[CKDTokenRegistrationScheduler callbackBlocks]
  -[CKDTokenRegistrationScheduler _refreshApsToken:appContainerAccountTuple:apsEnvironmentString:pushBundleIdentifier:isCKSystemService:completionBlock:]
  -[CKDTokenRegistrationScheduler _removeApsToken:appContainerAccountTuple:apsEnvironmentString:pushBundleIdentifier:isCKSystemService:completionBlock:]
  -[CKDTokenRegistrationScheduler tokenRefreshChanged]
  -[CKDTokenRegistrationScheduler setCallbackBlocks:]
  -[CKDTokenRegistrationScheduler setCallbackTimers:]
  -[CKDTokenRegistrationScheduler setUnitTestingAccountInfoProvider:]
  -[CKDTokenRegistrationScheduler setUnitTestingPushTokens:]


CKDPDeleteContainerResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPDeleteContainerResponse isEqual:]
  -[CKDPDeleteContainerResponse copyWithZone:]
  -[CKDPDeleteContainerResponse dictionaryRepresentation]
  -[CKDPDeleteContainerResponse writeTo:]
  -[CKDPDeleteContainerResponse mergeFrom:]
  -[CKDPDeleteContainerResponse readFrom:]
  -[CKDPDeleteContainerResponse copyTo:]


CKDFetchWhitelistedBundleIDsOperation : CKDOperation
 @property  NSArray *bundleIDs

  // instance methods
  -[CKDFetchWhitelistedBundleIDsOperation .cxx_destruct]
  -[CKDFetchWhitelistedBundleIDsOperation main]
  -[CKDFetchWhitelistedBundleIDsOperation bundleIDs]
  -[CKDFetchWhitelistedBundleIDsOperation activityCreate]
  -[CKDFetchWhitelistedBundleIDsOperation setBundleIDs:]
  -[CKDFetchWhitelistedBundleIDsOperation initWithOperationInfo:clientContext:]
  -[CKDFetchWhitelistedBundleIDsOperation operationResultClass]
  -[CKDFetchWhitelistedBundleIDsOperation fillOutOperationResult:]


CKDTokenRegistrationURLRequest : CKDURLRequest
 @property  NSData *apsToken
 @property  NSString *apsEnvironmentString
 @property  NSString *bundleID

  // instance methods
  -[CKDTokenRegistrationURLRequest .cxx_destruct]
  -[CKDTokenRegistrationURLRequest operationType]
  -[CKDTokenRegistrationURLRequest bundleID]
  -[CKDTokenRegistrationURLRequest setBundleID:]
  -[CKDTokenRegistrationURLRequest sourceApplicationBundleIdentifier]
  -[CKDTokenRegistrationURLRequest sourceApplicationSecondaryIdentifier]
  -[CKDTokenRegistrationURLRequest flowControlKey]
  -[CKDTokenRegistrationURLRequest apsToken]
  -[CKDTokenRegistrationURLRequest setApsEnvironmentString:]
  -[CKDTokenRegistrationURLRequest apsEnvironmentString]
  -[CKDTokenRegistrationURLRequest generateRequestOperations]
  -[CKDTokenRegistrationURLRequest requestDidParseProtobufObject:]
  -[CKDTokenRegistrationURLRequest requestOperationClasses]
  -[CKDTokenRegistrationURLRequest requiresTokenRegistration]
  -[CKDTokenRegistrationURLRequest initWithApsToken:apsEnvironmentString:bundleID:]
  -[CKDTokenRegistrationURLRequest setApsToken:]


CKCDPStopAllContainerRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKCDPStopAllContainerRequest isEqual:]
  -[CKCDPStopAllContainerRequest copyWithZone:]
  -[CKCDPStopAllContainerRequest dictionaryRepresentation]
  -[CKCDPStopAllContainerRequest writeTo:]
  -[CKCDPStopAllContainerRequest mergeFrom:]
  -[CKCDPStopAllContainerRequest readFrom:]
  -[CKCDPStopAllContainerRequest copyTo:]


CKDPConfiguration : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *fields
 @property  BOOL hasCreated
 @property  unsigned long created
 @property  BOOL hasExpires
 @property  unsigned long expires

  // class methods
  +[CKDPConfiguration fieldsType]

  // instance methods
  -[CKDPConfiguration isEqual:]
  -[CKDPConfiguration copyWithZone:]
  -[CKDPConfiguration .cxx_destruct]
  -[CKDPConfiguration dictionaryRepresentation]
  -[CKDPConfiguration fields]
  -[CKDPConfiguration writeTo:]
  -[CKDPConfiguration mergeFrom:]
  -[CKDPConfiguration readFrom:]
  -[CKDPConfiguration copyTo:]
  -[CKDPConfiguration created]
  -[CKDPConfiguration setCreated:]
  -[CKDPConfiguration setFields:]
  -[CKDPConfiguration addFields:]
  -[CKDPConfiguration fieldsCount]
  -[CKDPConfiguration clearFields]
  -[CKDPConfiguration fieldsAtIndex:]
  -[CKDPConfiguration setHasCreated:]
  -[CKDPConfiguration hasCreated]
  -[CKDPConfiguration setExpires:]
  -[CKDPConfiguration setHasExpires:]
  -[CKDPConfiguration hasExpires]
  -[CKDPConfiguration expires]


CKDResetUserPrivacySettingsOperation : CKDOperation
  // class methods
  +[CKDResetUserPrivacySettingsOperation isPredominatelyDownload]

  // instance methods
  -[CKDResetUserPrivacySettingsOperation main]
  -[CKDResetUserPrivacySettingsOperation activityCreate]
  -[CKDResetUserPrivacySettingsOperation shouldCheckAppVersion]


CKDRecentProxyInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *processName
 @property  NSMutableSet *containerIdentifiers
 @property  NSDate *lastSeen
 @property  unsigned long connectionCount
 @property  NSMutableDictionary *operationStatisticsByClassName

  // instance methods
  -[CKDRecentProxyInfo .cxx_destruct]
  -[CKDRecentProxyInfo processName]
  -[CKDRecentProxyInfo connectionCount]
  -[CKDRecentProxyInfo CKStatusReportArray]
  -[CKDRecentProxyInfo containerIdentifiers]
  -[CKDRecentProxyInfo lastSeen]
  -[CKDRecentProxyInfo initWithProxy:]
  -[CKDRecentProxyInfo mergeProxy:]
  -[CKDRecentProxyInfo operationStatisticsByClassName]


CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSString *headerKey
 @property  NSString *headerValue

  // instance methods
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo isEqual:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo copyWithZone:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo .cxx_destruct]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo dictionaryRepresentation]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo writeTo:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo mergeFrom:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo readFrom:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo copyTo:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo setHeaderKey:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo setHeaderValue:]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo headerKey]
  -[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo headerValue]


CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasWrappedInvocationKey
 @property  NSData *wrappedInvocationKey
 @property  BOOL hasRoutingToken
 @property  NSData *routingToken

  // instance methods
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession isEqual:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession copyWithZone:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession .cxx_destruct]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession dictionaryRepresentation]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession writeTo:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession mergeFrom:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession readFrom:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession copyTo:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession setRoutingToken:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession hasRoutingToken]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession routingToken]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession setWrappedInvocationKey:]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession hasWrappedInvocationKey]
  -[CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession wrappedInvocationKey]


CKDBatchGetUserPrivacySettingsURLRequest : CKDURLRequest
 @property  NSArray *containerPrivacySettings

  // instance methods
  -[CKDBatchGetUserPrivacySettingsURLRequest .cxx_destruct]
  -[CKDBatchGetUserPrivacySettingsURLRequest operationType]
  -[CKDBatchGetUserPrivacySettingsURLRequest databaseScope]
  -[CKDBatchGetUserPrivacySettingsURLRequest containerPrivacySettings]
  -[CKDBatchGetUserPrivacySettingsURLRequest generateRequestOperations]
  -[CKDBatchGetUserPrivacySettingsURLRequest requestDidParseProtobufObject:]
  -[CKDBatchGetUserPrivacySettingsURLRequest requestOperationClasses]
  -[CKDBatchGetUserPrivacySettingsURLRequest requiresTokenRegistration]
  -[CKDBatchGetUserPrivacySettingsURLRequest setContainerPrivacySettings:]


CKDPPackageManifestItem : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSignature
 @property  NSData *signature
 @property  BOOL hasSize
 @property  long long size
 @property  BOOL hasLastItem
 @property  BOOL lastItem

  // instance methods
  -[CKDPPackageManifestItem isEqual:]
  -[CKDPPackageManifestItem copyWithZone:]
  -[CKDPPackageManifestItem .cxx_destruct]
  -[CKDPPackageManifestItem size]
  -[CKDPPackageManifestItem dictionaryRepresentation]
  -[CKDPPackageManifestItem writeTo:]
  -[CKDPPackageManifestItem setSize:]
  -[CKDPPackageManifestItem mergeFrom:]
  -[CKDPPackageManifestItem readFrom:]
  -[CKDPPackageManifestItem copyTo:]
  -[CKDPPackageManifestItem signature]
  -[CKDPPackageManifestItem hasSize]
  -[CKDPPackageManifestItem setSignature:]
  -[CKDPPackageManifestItem setHasSize:]
  -[CKDPPackageManifestItem lastItem]
  -[CKDPPackageManifestItem hasSignature]
  -[CKDPPackageManifestItem setLastItem:]
  -[CKDPPackageManifestItem setHasLastItem:]
  -[CKDPPackageManifestItem hasLastItem]


CKDPUserPrivacySettingsUpdateRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasBundleIdentifier
 @property  NSString *bundleIdentifier
 @property  BOOL hasUserPrivacySettings
 @property  CKDPUserPrivacySettings *userPrivacySettings

  // class methods
  +[CKDPUserPrivacySettingsUpdateRequest options]

  // instance methods
  -[CKDPUserPrivacySettingsUpdateRequest isEqual:]
  -[CKDPUserPrivacySettingsUpdateRequest copyWithZone:]
  -[CKDPUserPrivacySettingsUpdateRequest .cxx_destruct]
  -[CKDPUserPrivacySettingsUpdateRequest bundleIdentifier]
  -[CKDPUserPrivacySettingsUpdateRequest dictionaryRepresentation]
  -[CKDPUserPrivacySettingsUpdateRequest setBundleIdentifier:]
  -[CKDPUserPrivacySettingsUpdateRequest writeTo:]
  -[CKDPUserPrivacySettingsUpdateRequest mergeFrom:]
  -[CKDPUserPrivacySettingsUpdateRequest readFrom:]
  -[CKDPUserPrivacySettingsUpdateRequest copyTo:]
  -[CKDPUserPrivacySettingsUpdateRequest requestTypeCode]
  -[CKDPUserPrivacySettingsUpdateRequest responseClass]
  -[CKDPUserPrivacySettingsUpdateRequest hasBundleIdentifier]
  -[CKDPUserPrivacySettingsUpdateRequest setUserPrivacySettings:]
  -[CKDPUserPrivacySettingsUpdateRequest hasUserPrivacySettings]
  -[CKDPUserPrivacySettingsUpdateRequest userPrivacySettings]


CKDPFieldActionDeleteListRange : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRange
 @property  CKDPListRange *range

  // instance methods
  -[CKDPFieldActionDeleteListRange isEqual:]
  -[CKDPFieldActionDeleteListRange copyWithZone:]
  -[CKDPFieldActionDeleteListRange .cxx_destruct]
  -[CKDPFieldActionDeleteListRange dictionaryRepresentation]
  -[CKDPFieldActionDeleteListRange range]
  -[CKDPFieldActionDeleteListRange writeTo:]
  -[CKDPFieldActionDeleteListRange mergeFrom:]
  -[CKDPFieldActionDeleteListRange readFrom:]
  -[CKDPFieldActionDeleteListRange copyTo:]
  -[CKDPFieldActionDeleteListRange setRange:]
  -[CKDPFieldActionDeleteListRange hasRange]


CKDUpdateMissingAssetStatusOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  CKRecordID *repairRecordID
 @property  BOOL recovered
 @property  BOOL isPackage
 @property  NSArray *assetSizes
 @property  NSArray *assetPutReceipts

  // instance methods
  -[CKDUpdateMissingAssetStatusOperationInfo .cxx_destruct]
  -[CKDUpdateMissingAssetStatusOperationInfo isPackage]
  -[CKDUpdateMissingAssetStatusOperationInfo setRepairRecordID:]
  -[CKDUpdateMissingAssetStatusOperationInfo repairRecordID]
  -[CKDUpdateMissingAssetStatusOperationInfo setRecovered:]
  -[CKDUpdateMissingAssetStatusOperationInfo recovered]
  -[CKDUpdateMissingAssetStatusOperationInfo setIsPackage:]
  -[CKDUpdateMissingAssetStatusOperationInfo assetSizes]
  -[CKDUpdateMissingAssetStatusOperationInfo setAssetSizes:]
  -[CKDUpdateMissingAssetStatusOperationInfo assetPutReceipts]
  -[CKDUpdateMissingAssetStatusOperationInfo setAssetPutReceipts:]


CKDUpdateMissingAssetStatusOperation : CKDDatabaseOperation
 @property  CKRecordID *repairRecordID
 @property  BOOL recovered
 @property  BOOL isPackage
 @property  NSArray *assetSizes
 @property  NSArray *assetPutReceipts
 @property  CKDFetchRecordsOperation *fetchOperation
 @property  CKDModifyRecordsOperation *modifyOperation
 @property  CKRecord *record

  // instance methods
  -[CKDUpdateMissingAssetStatusOperation .cxx_destruct]
  -[CKDUpdateMissingAssetStatusOperation main]
  -[CKDUpdateMissingAssetStatusOperation isPackage]
  -[CKDUpdateMissingAssetStatusOperation activityCreate]
  -[CKDUpdateMissingAssetStatusOperation setRepairRecordID:]
  -[CKDUpdateMissingAssetStatusOperation repairRecordID]
  -[CKDUpdateMissingAssetStatusOperation record]
  -[CKDUpdateMissingAssetStatusOperation setRecord:]
  -[CKDUpdateMissingAssetStatusOperation fetchOperation]
  -[CKDUpdateMissingAssetStatusOperation setFetchOperation:]
  -[CKDUpdateMissingAssetStatusOperation initWithOperationInfo:clientContext:]
  -[CKDUpdateMissingAssetStatusOperation nameForState:]
  -[CKDUpdateMissingAssetStatusOperation makeStateTransition]
  -[CKDUpdateMissingAssetStatusOperation setRecovered:]
  -[CKDUpdateMissingAssetStatusOperation recovered]
  -[CKDUpdateMissingAssetStatusOperation setIsPackage:]
  -[CKDUpdateMissingAssetStatusOperation assetSizes]
  -[CKDUpdateMissingAssetStatusOperation setAssetSizes:]
  -[CKDUpdateMissingAssetStatusOperation assetPutReceipts]
  -[CKDUpdateMissingAssetStatusOperation setAssetPutReceipts:]
  -[CKDUpdateMissingAssetStatusOperation _updateMissingAssetStatus]
  -[CKDUpdateMissingAssetStatusOperation modifyOperation]
  -[CKDUpdateMissingAssetStatusOperation setModifyOperation:]


CKDPlaintextResponseBodyParser : CKDResponseBodyParser
  // instance methods
  -[CKDPlaintextResponseBodyParser processData:]
  -[CKDPlaintextResponseBodyParser finishWithCompletion:]


CKDPShareMetadata : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRoutingKey
 @property  NSString *routingKey
 @property  BOOL hasProtectedFullToken
 @property  NSData *protectedFullToken
 @property  BOOL hasOwnerParticipant
 @property  CKDPParticipant *ownerParticipant
 @property  BOOL hasCallerParticipant
 @property  CKDPParticipant *callerParticipant
 @property  BOOL hasParticipantPermission
 @property  int participantPermission
 @property  BOOL hasParticipantState
 @property  int participantState
 @property  BOOL hasParticipantType
 @property  int participantType
 @property  BOOL hasRootRecordType
 @property  CKDPRecordType *rootRecordType

  // instance methods
  -[CKDPShareMetadata isEqual:]
  -[CKDPShareMetadata copyWithZone:]
  -[CKDPShareMetadata .cxx_destruct]
  -[CKDPShareMetadata dictionaryRepresentation]
  -[CKDPShareMetadata writeTo:]
  -[CKDPShareMetadata mergeFrom:]
  -[CKDPShareMetadata readFrom:]
  -[CKDPShareMetadata copyTo:]
  -[CKDPShareMetadata routingKey]
  -[CKDPShareMetadata setRoutingKey:]
  -[CKDPShareMetadata participantPermission]
  -[CKDPShareMetadata rootRecordType]
  -[CKDPShareMetadata setRootRecordType:]
  -[CKDPShareMetadata setParticipantPermission:]
  -[CKDPShareMetadata protectedFullToken]
  -[CKDPShareMetadata setProtectedFullToken:]
  -[CKDPShareMetadata participantType]
  -[CKDPShareMetadata setParticipantType:]
  -[CKDPShareMetadata hasRoutingKey]
  -[CKDPShareMetadata hasParticipantType]
  -[CKDPShareMetadata hasParticipantState]
  -[CKDPShareMetadata participantState]
  -[CKDPShareMetadata hasParticipantPermission]
  -[CKDPShareMetadata hasOwnerParticipant]
  -[CKDPShareMetadata ownerParticipant]
  -[CKDPShareMetadata hasCallerParticipant]
  -[CKDPShareMetadata callerParticipant]
  -[CKDPShareMetadata _participantPermissionCKLogValue]
  -[CKDPShareMetadata _participantStateCKLogValue]
  -[CKDPShareMetadata _participantTypeCKLogValue]
  -[CKDPShareMetadata setOwnerParticipant:]
  -[CKDPShareMetadata setCallerParticipant:]
  -[CKDPShareMetadata hasProtectedFullToken]
  -[CKDPShareMetadata setHasParticipantPermission:]
  -[CKDPShareMetadata participantPermissionAsString:]
  -[CKDPShareMetadata StringAsParticipantPermission:]
  -[CKDPShareMetadata setParticipantState:]
  -[CKDPShareMetadata setHasParticipantState:]
  -[CKDPShareMetadata participantStateAsString:]
  -[CKDPShareMetadata StringAsParticipantState:]
  -[CKDPShareMetadata setHasParticipantType:]
  -[CKDPShareMetadata participantTypeAsString:]
  -[CKDPShareMetadata StringAsParticipantType:]
  -[CKDPShareMetadata hasRootRecordType]


CKDPCodeFunctionInvokeResponseAttestationResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *attestations

  // class methods
  +[CKDPCodeFunctionInvokeResponseAttestationResponse attestationsType]

  // instance methods
  -[CKDPCodeFunctionInvokeResponseAttestationResponse isEqual:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse copyWithZone:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse .cxx_destruct]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse dictionaryRepresentation]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse writeTo:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse mergeFrom:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse readFrom:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse copyTo:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse addAttestations:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse attestationsCount]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse clearAttestations]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse attestationsAtIndex:]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse attestations]
  -[CKDPCodeFunctionInvokeResponseAttestationResponse setAttestations:]


CKCDPCodeServiceRequestOperationGroup : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasOperationId
 @property  NSString *operationId
 @property  BOOL hasOperationGroupId
 @property  NSString *operationGroupId
 @property  BOOL hasOperationGroupName
 @property  NSString *operationGroupName
 @property  BOOL hasOperationGroupQuantity
 @property  long long operationGroupQuantity

  // instance methods
  -[CKCDPCodeServiceRequestOperationGroup isEqual:]
  -[CKCDPCodeServiceRequestOperationGroup copyWithZone:]
  -[CKCDPCodeServiceRequestOperationGroup .cxx_destruct]
  -[CKCDPCodeServiceRequestOperationGroup dictionaryRepresentation]
  -[CKCDPCodeServiceRequestOperationGroup writeTo:]
  -[CKCDPCodeServiceRequestOperationGroup mergeFrom:]
  -[CKCDPCodeServiceRequestOperationGroup readFrom:]
  -[CKCDPCodeServiceRequestOperationGroup copyTo:]
  -[CKCDPCodeServiceRequestOperationGroup operationGroupName]
  -[CKCDPCodeServiceRequestOperationGroup operationId]
  -[CKCDPCodeServiceRequestOperationGroup setOperationId:]
  -[CKCDPCodeServiceRequestOperationGroup setOperationGroupName:]
  -[CKCDPCodeServiceRequestOperationGroup operationGroupQuantity]
  -[CKCDPCodeServiceRequestOperationGroup setOperationGroupQuantity:]
  -[CKCDPCodeServiceRequestOperationGroup setOperationGroupId:]
  -[CKCDPCodeServiceRequestOperationGroup hasOperationGroupName]
  -[CKCDPCodeServiceRequestOperationGroup setHasOperationGroupQuantity:]
  -[CKCDPCodeServiceRequestOperationGroup hasOperationGroupQuantity]
  -[CKCDPCodeServiceRequestOperationGroup hasOperationId]
  -[CKCDPCodeServiceRequestOperationGroup hasOperationGroupId]
  -[CKCDPCodeServiceRequestOperationGroup operationGroupId]


CKDClientConnection : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKXPCDaemon>
 @property  CKDClientProxy *proxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDClientConnection .cxx_destruct]
  -[CKDClientConnection initWithConnection:]
  -[CKDClientConnection setProxy:]
  -[CKDClientConnection proxy]
  -[CKDClientConnection performRepairAssetsOperation:withBlock:]
  -[CKDClientConnection performMarkAssetBrokenOperation:withBlock:]
  -[CKDClientConnection performModifyRecordZonesOperation:withBlock:]
  -[CKDClientConnection performDiscoverAllIdentitiesOperation:withBlock:]
  -[CKDClientConnection cancelOperationWithIdentifier:completionHandler:]
  -[CKDClientConnection accountStatusWithSetupInfo:completionHandler:]
  -[CKDClientConnection accountInfoWithSetupInfo:completionHandler:]
  -[CKDClientConnection importantUserIDsWithSetupInfo:completionHandler:]
  -[CKDClientConnection statusForApplicationPermission:setupInfo:completionHandler:]
  -[CKDClientConnection requestApplicationPermission:setupInfo:completionHandler:]
  -[CKDClientConnection getSandboxExtensionsWithSetupInfo:completionHandler:]
  -[CKDClientConnection frameworkCachesDirectoryWithSetupInfo:completionHandler:]
  -[CKDClientConnection performDiscoverUserIdentitiesOperation:withBlock:]
  -[CKDClientConnection performFetchShareParticipantsOperation:withBlock:]
  -[CKDClientConnection performFetchRecordsOperation:withBlock:]
  -[CKDClientConnection performModifyRecordsOperation:withBlock:]
  -[CKDClientConnection performFetchRecordChangesOperation:withBlock:]
  -[CKDClientConnection performFetchRecordZoneChangesOperation:withBlock:]
  -[CKDClientConnection performFetchRecordVersionsOperation:withBlock:]
  -[CKDClientConnection performFetchArchivedRecordsOperation:withBlock:]
  -[CKDClientConnection performArchiveRecordsOperation:withBlock:]
  -[CKDClientConnection performPublishAssetsOperation:withBlock:]
  -[CKDClientConnection performModifyWebSharingOperation:withBlock:]
  -[CKDClientConnection getNewWebSharingIdentityWithSetupInfo:completionHandler:]
  -[CKDClientConnection getNewWebSharingIdentityDataWithSetupInfo:completionHandler:]
  -[CKDClientConnection fetchXPCCriteriaWithSetupInfo:completionHandler:]
  -[CKDClientConnection performModifyRecordAccessOperation:withBlock:]
  -[CKDClientConnection performQueryOperation:withBlock:]
  -[CKDClientConnection performModifySubscriptionsOperation:withBlock:]
  -[CKDClientConnection performFetchSubscriptionsOperation:withBlock:]
  -[CKDClientConnection performFetchRecordZonesOperation:withBlock:]
  -[CKDClientConnection performFetchDatabaseChangesOperation:withBlock:]
  -[CKDClientConnection performModifyBadgeOperation:withBlock:]
  -[CKDClientConnection performFetchNotificationChangesOperation:withBlock:]
  -[CKDClientConnection performMarkNotificationsReadOperation:withBlock:]
  -[CKDClientConnection performAcceptSharesOperation:withBlock:]
  -[CKDClientConnection performCompleteParticipantVettingOperation:withBlock:]
  -[CKDClientConnection performFetchShareMetadataOperation:withBlock:]
  -[CKDClientConnection performFetchShareParticipantKeyOperation:withBlock:]
  -[CKDClientConnection decryptPersonalInfoOnShare:setupInfo:completionHandler:]
  -[CKDClientConnection performInitiateParticipantVettingOperation:withBlock:]
  -[CKDClientConnection performFetchUserQuotaOperation:withBlock:]
  -[CKDClientConnection performFetchWebAuthTokenOperation:withBlock:]
  -[CKDClientConnection performFetchWhitelistedBundleIDsOperation:withBlock:]
  -[CKDClientConnection performCodeFunctionInvokeOperation:withBlock:]
  -[CKDClientConnection fetchLongLivedOperationsWithIDs:setupInfo:completionHandler:]
  -[CKDClientConnection fetchAllLongLivedOperationIDsWithSetupInfo:completionHandler:]
  -[CKDClientConnection serverPreferredPushEnvironmentWithSetupInfo:completionHandler:]
  -[CKDClientConnection serverEnvironmentWithSetupInfo:completionHandler:]
  -[CKDClientConnection currentDeviceIDWithSetupInfo:completionHandler:]
  -[CKDClientConnection displayInfoOnAccountWithSetupInfo:completionHandler:]
  -[CKDClientConnection currentUserBoundaryKeyWithSetupInfo:completionHandler:]
  -[CKDClientConnection performAggregateZonePCSOperation:withBlock:]
  -[CKDClientConnection dumpAllClientsStatusReportToFileHandle:completionHandler:]
  -[CKDClientConnection dumpDaemonStatusReportToFileHandle:completionHandler:]
  -[CKDClientConnection setFakeError:forNextRequestOfClassName:setupInfo:]
  -[CKDClientConnection setFakeResponseOperationResult:forNextRequestOfClassName:forItemID:withLifetime:setupInfo:]
  -[CKDClientConnection countAssetCacheItemsWithSetupInfo:databaseScope:completionHandler:]
  -[CKDClientConnection clearAssetCacheWithSetupInfo:databaseScope:completionHandler:]
  -[CKDClientConnection showAssetCacheWithSetupInfo:databaseScope:]
  -[CKDClientConnection clearRecordCacheWithSetupInfo:databaseScope:]
  -[CKDClientConnection clearAuthTokensWithSetupInfo:recordID:databaseScope:]
  -[CKDClientConnection clearCachesWithSetupInfo:options:databaseScope:completionHandler:]
  -[CKDClientConnection clearCachesForRecordWithSetupInfo:recordID:databaseScope:completionHandler:]
  -[CKDClientConnection clearCachesForZoneWithSetupInfo:zoneID:databaseScope:completionHandler:]
  -[CKDClientConnection wipeAllCachedLongLivedProxiesWithSetupInfo:completionHandler:]
  -[CKDClientConnection getOutstandingOperationCountWithSetupInfo:completionHandler:]
  -[CKDClientConnection clearPCSCachesForKnownContextsWithSetupInfo:completionHandler:]
  -[CKDClientConnection getBehaviorOptionForKey:isContainerOption:completionHandler:]
  -[CKDClientConnection accountsDidGrantAccessToBundleID:containerIdentifiers:]
  -[CKDClientConnection accountsDidRevokeAccessToBundleID:sourceApplicationBundleID:containerIdentifiers:]
  -[CKDClientConnection accountsWillDeleteAccount:completionHandler:]
  -[CKDClientConnection accountWithID:changedWithChangeType:]
  -[CKDClientConnection setApplicationPermission:enabled:setupInfo:completionHandler:]
  -[CKDClientConnection resetAllApplicationPermissionsWithSetupInfo:completionHandler:]
  -[CKDClientConnection statusGroupsForApplicationPermission:setupInfo:completionHandler:]
  -[CKDClientConnection wipeAllCachesAndDie]
  -[CKDClientConnection clearContextFromMetadataCache]
  -[CKDClientConnection clearPILSCacheForLookupInfos:]
  -[CKDClientConnection updatePushTokens]
  -[CKDClientConnection dataclassEnabled:withSetupInfo:completionHandler:]
  -[CKDClientConnection flushOperationMetricsToPowerLog]
  -[CKDClientConnection triggerAutoBugCaptureSnapshot]
  -[CKDClientConnection submitClientEventMetric:withSetupInfo:completeWhenQueued:completionHandler:]
  -[CKDClientConnection getPCSDiagnosticsForZonesWithSetupInfo:completionHandler:]
  -[CKDClientConnection getRecordPCSDiagnosticsForZonesWithSetupInfo:completionHandler:]
  -[CKDClientConnection repairZonePCSWithOperationInfo:withBlock:]
  -[CKDClientConnection tossConfigWithSetupInfo:completionHandler:]
  -[CKDClientConnection requestClientSyncWithOperationInfo:withBlock:]
  -[CKDClientConnection deviceCountWithSetupInfo:completionHandler:]
  -[CKDClientConnection _addProxyOperationWithInfo:withBlock:longlivedProxyPreparationBlock:]
  -[CKDClientConnection _handlePerformDaemonCallWithOperationInfo:completionBlock:forwardingBlock:]


CKFetchTranscodeServerPublicKeyOperationInfo : CKOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  NSString *transcodeServerHostname

  // instance methods
  -[CKFetchTranscodeServerPublicKeyOperationInfo .cxx_destruct]
  -[CKFetchTranscodeServerPublicKeyOperationInfo transcodeServerHostname]
  -[CKFetchTranscodeServerPublicKeyOperationInfo setTranscodeServerHostname:]


CKDFetchTranscodeServerPublicKeyOperation : CKDOperation
 @property  NSString *transcodeServerHostname
 @property  NSURL *transcodeServerPublicKeyURL
 @property  CKPublicKey *transcodeServerPublicKey

  // class methods
  +[CKDFetchTranscodeServerPublicKeyOperation createTranscodeServerTrustPolicy]

  // instance methods
  -[CKDFetchTranscodeServerPublicKeyOperation .cxx_destruct]
  -[CKDFetchTranscodeServerPublicKeyOperation main]
  -[CKDFetchTranscodeServerPublicKeyOperation initWithOperationInfo:clientContext:]
  -[CKDFetchTranscodeServerPublicKeyOperation nameForState:]
  -[CKDFetchTranscodeServerPublicKeyOperation makeStateTransition]
  -[CKDFetchTranscodeServerPublicKeyOperation transcodeServerHostname]
  -[CKDFetchTranscodeServerPublicKeyOperation setTranscodeServerPublicKeyURL:]
  -[CKDFetchTranscodeServerPublicKeyOperation transcodeServerPublicKeyURL]
  -[CKDFetchTranscodeServerPublicKeyOperation setTranscodeServerPublicKey:]
  -[CKDFetchTranscodeServerPublicKeyOperation determineTranscodeServerPublicKeyURL]
  -[CKDFetchTranscodeServerPublicKeyOperation fetchCachedTranscodePublicKey]
  -[CKDFetchTranscodeServerPublicKeyOperation transcodeServerPublicKey]
  -[CKDFetchTranscodeServerPublicKeyOperation fetchRemoteTranscodePublicKey]


CKDAssetCacheEvictionInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL forced
 @property  BOOL evictNow
 @property  BOOL clearRegisteredItems
 @property  CKDClientContext *clientContext
 @property  NSMutableOrderedSet *itemIDsToUnregister
 @property  NSMutableOrderedSet *assetHandleItemIDsToDelete

  // instance methods
  -[CKDAssetCacheEvictionInfo .cxx_destruct]
  -[CKDAssetCacheEvictionInfo clientContext]
  -[CKDAssetCacheEvictionInfo setClientContext:]
  -[CKDAssetCacheEvictionInfo setForced:]
  -[CKDAssetCacheEvictionInfo setEvictNow:]
  -[CKDAssetCacheEvictionInfo setItemIDsToUnregister:]
  -[CKDAssetCacheEvictionInfo setAssetHandleItemIDsToDelete:]
  -[CKDAssetCacheEvictionInfo initWithClientContext:forced:evictNow:]
  -[CKDAssetCacheEvictionInfo forced]
  -[CKDAssetCacheEvictionInfo evictNow]
  -[CKDAssetCacheEvictionInfo clearRegisteredItems]
  -[CKDAssetCacheEvictionInfo setClearRegisteredItems:]
  -[CKDAssetCacheEvictionInfo itemIDsToUnregister]
  -[CKDAssetCacheEvictionInfo assetHandleItemIDsToDelete]


CKDAssetCache : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *applicationBundleID
 @property  NSString *dbPath
 @property  NSString *fileStagingPath
 @property  NSString *fileDownloadPath
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSOperationQueue *opQueue
 @property  int fileDownloadPathFd
 @property  BOOL isEvictionScheduled
 @property  BOOL hasMigrated
 @property  BOOL didDrop
 @property  long long checkoutCount
 @property  <NSObject> *assetHandleExpirationNotificationObserver
 @property  NSMutableDictionary *volumeUUIDByVolumeIndex
 @property  NSMutableDictionary *volumeIndexByVolumeUUID
 @property  NSMutableSet *deferredDeletedAssetHandles
 @property  NSMutableDictionary *deferredLastUsedTimeByTrackingUUID
 @property  CKDMMCS *MMCS
 @property  CKSQLitePool *dbPool
 @property  BOOL isUnitTestingAccount

  // class methods
  +[CKDAssetCache assetCacheWithApplicationBundleID:assetDirectoryContext:didInit:error:]
  +[CKDAssetCache _sharedCachesQueue]
  +[CKDAssetCache _sharedCachesByPath]
  +[CKDAssetCache openFdForDownloadPath:error:]
  +[CKDAssetCache registerExpirationForAssetHandles]

  // instance methods
  -[CKDAssetCache dealloc]
  -[CKDAssetCache setQueue:]
  -[CKDAssetCache queue]
  -[CKDAssetCache .cxx_destruct]
  -[CKDAssetCache hasMigrated]
  -[CKDAssetCache cleanup]
  -[CKDAssetCache applicationBundleID]
  -[CKDAssetCache didDrop]
  -[CKDAssetCache setDidDrop:]
  -[CKDAssetCache isUnitTestingAccount]
  -[CKDAssetCache setIsUnitTestingAccount:]
  -[CKDAssetCache clearAssetCache]
  -[CKDAssetCache countAssetCacheItems]
  -[CKDAssetCache showAssetCache]
  -[CKDAssetCache opQueue]
  -[CKDAssetCache drop]
  -[CKDAssetCache fileDownloadPath]
  -[CKDAssetCache setHasMigrated:]
  -[CKDAssetCache dbPath]
  -[CKDAssetCache setApplicationBundleID:]
  -[CKDAssetCache dbPool]
  -[CKDAssetCache MMCS]
  -[CKDAssetCache setFileStagingPath:]
  -[CKDAssetCache setFileDownloadPath:]
  -[CKDAssetCache setMMCS:]
  -[CKDAssetCache cancelExpiryTimer]
  -[CKDAssetCache evictAllFilesForced:]
  -[CKDAssetCache trackDownloadedData:signature:error:]
  -[CKDAssetCache trackCachedButNotRegisteredMMCSItems:error:]
  -[CKDAssetCache stopTrackingAssetHandlesByItemIDs:]
  -[CKDAssetCache checkoutCount]
  -[CKDAssetCache setCheckoutCount:]
  -[CKDAssetCache setupPersistentStateAtStartup]
  -[CKDAssetCache checkAssetHandlesForRegisteredMMCSItems:]
  -[CKDAssetCache unregisterItemIDs:completionBlock:]
  -[CKDAssetCache updateAssetHandlesForRegisteredMMCSItems:error:]
  -[CKDAssetCache _initWithApplicationBundleID:assetDirectoryContext:error:]
  -[CKDAssetCache initDatabaseWithError:]
  -[CKDAssetCache setAssetHandleExpirationNotificationObserver:]
  -[CKDAssetCache _setVolumeIndex:forVolumeUUID:]
  -[CKDAssetCache existingOrNewVolumeIndexForVolumeUUID:usingDB:]
  -[CKDAssetCache volumeUUIDWithVolumeIndex:]
  -[CKDAssetCache existingOrNewVolumeIndexForVolumeUUID:]
  -[CKDAssetCache expireAssetHandlesIfNecessaryWithGroup:]
  -[CKDAssetCache _clearForced:group:]
  -[CKDAssetCache _evictWithEvictionInfo:]
  -[CKDAssetCache scheduleUnregisterItemIDsAndDeleteAssetHandlesWithEvictionInfo:completionBlock:]
  -[CKDAssetCache deviceIDForVolumeIndex:]
  -[CKDAssetCache assetHandleWithCachedPath:]
  -[CKDAssetCache scheduleUnregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:deleteUnregisteredAssetHandlesWithIDs:completionBlock:]
  -[CKDAssetCache _saveData:error:]
  -[CKDAssetCache existingOrNewVolumeIndexForDeviceID:]
  -[CKDAssetCache existingOrNewVolumeIndexForDeviceID:usingDB:]
  -[CKDAssetCache unregisterDeferredItemIDs:andDeleteAssetHandles:usingDB:]
  -[CKDAssetCache updateDeferredLastAccessTimeForUUIDsUsingDB:]
  -[CKDAssetCache _scheduleEvictionForDownloadedFiles]
  -[CKDAssetCache _scheduleExpirationForAssetHandles]
  -[CKDAssetCache fileDownloadPathFd]
  -[CKDAssetCache _getAssetHandlesForDownloadedMMCSItems:error:]
  -[CKDAssetCache _getAssetHandlesForCachedButNotRegisteredMMCSItems:error:]
  -[CKDAssetCache deferredDeletedAssetHandles]
  -[CKDAssetCache parseCachedPath:assetHandleUUIDString:assetSignatureString:]
  -[CKDAssetCache parseCachedPath:assetHandleUUID:assetSignature:]
  -[CKDAssetCache isEvictionScheduled]
  -[CKDAssetCache setIsEvictionScheduled:]
  -[CKDAssetCache _evictDownloadedFilesEvictionInfo:]
  -[CKDAssetCache _evictDownloadedFilesWithDatabase:evictionInfo:]
  -[CKDAssetCache _expireAssetHandlesWithExpiryDate:group:]
  -[CKDAssetCache _expireAssetHandlesWithGroup:]
  -[CKDAssetCache _deleteAssetHandlesAndUnregisterItemsForUnmountedAssetVolumesWithDB:]
  -[CKDAssetCache _resetAssetInflightUsingDB:]
  -[CKDAssetCache forgetVolumeUUID:]
  -[CKDAssetCache clearForced:]
  -[CKDAssetCache scheduleUnregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:]
  -[CKDAssetCache updateAssetHandlesForChunkedMMCSItems:error:]
  -[CKDAssetCache updateAssetHandlesForGetMMCSItems:error:]
  -[CKDAssetCache updateAssetHandlesForPutMMCSItems:error:]
  -[CKDAssetCache trackDownloadedMMCSItems:error:]
  -[CKDAssetCache startTrackingRegisterOrPutAssetHandles:operationType:error:]
  -[CKDAssetCache startTrackingGetAssetHandles:operationType:error:]
  -[CKDAssetCache deferredStopTrackingAssetHandlesByItemIDs:]
  -[CKDAssetCache findAssetHandleForItemID:error:]
  -[CKDAssetCache deferredUpdateLastTimeUsedForUUID:]
  -[CKDAssetCache predictedEvictedSizeForAllFilesForced:]
  -[CKDAssetCache setDbPath:]
  -[CKDAssetCache fileStagingPath]
  -[CKDAssetCache setOpQueue:]
  -[CKDAssetCache setFileDownloadPathFd:]
  -[CKDAssetCache assetHandleExpirationNotificationObserver]
  -[CKDAssetCache volumeUUIDByVolumeIndex]
  -[CKDAssetCache setVolumeUUIDByVolumeIndex:]
  -[CKDAssetCache volumeIndexByVolumeUUID]
  -[CKDAssetCache setVolumeIndexByVolumeUUID:]
  -[CKDAssetCache setDeferredDeletedAssetHandles:]
  -[CKDAssetCache deferredLastUsedTimeByTrackingUUID]
  -[CKDAssetCache setDeferredLastUsedTimeByTrackingUUID:]


CKDRecordFetchInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  unsigned long fetchOrder
 @property  CKRecordID *recordID
 @property  NSString *etag
 @property  double startDate
 @property  unsigned long state
 @property  CKRecord *record
 @property  NSError *error
 @property  @? completionBlock
 @property  NSObject<OS_dispatch_source> *recordReadySource
 @property  BOOL ignoreErrors

  // instance methods
  -[CKDRecordFetchInfo .cxx_destruct]
  -[CKDRecordFetchInfo error]
  -[CKDRecordFetchInfo setError:]
  -[CKDRecordFetchInfo startDate]
  -[CKDRecordFetchInfo completionBlock]
  -[CKDRecordFetchInfo setCompletionBlock:]
  -[CKDRecordFetchInfo state]
  -[CKDRecordFetchInfo etag]
  -[CKDRecordFetchInfo setState:]
  -[CKDRecordFetchInfo recordID]
  -[CKDRecordFetchInfo setRecordID:]
  -[CKDRecordFetchInfo setEtag:]
  -[CKDRecordFetchInfo CKPropertiesDescription]
  -[CKDRecordFetchInfo record]
  -[CKDRecordFetchInfo setRecord:]
  -[CKDRecordFetchInfo recordReadySource]
  -[CKDRecordFetchInfo ignoreErrors]
  -[CKDRecordFetchInfo fetchOrder]
  -[CKDRecordFetchInfo initWithAggregator:]
  -[CKDRecordFetchInfo performCallback]
  -[CKDRecordFetchInfo setFetchOrder:]
  -[CKDRecordFetchInfo setRecordReadySource:]
  -[CKDRecordFetchInfo setIgnoreErrors:]


CKRecordFetchAggregatorOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  BOOL fetchAssetContents
 @property  BOOL preserveOrdering
 @property  NSSet *desiredKeys
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  BOOL forceDecryptionAttempt

  // instance methods
  -[CKRecordFetchAggregatorOperationInfo init]
  -[CKRecordFetchAggregatorOperationInfo .cxx_destruct]
  -[CKRecordFetchAggregatorOperationInfo setDesiredKeys:]
  -[CKRecordFetchAggregatorOperationInfo assetTransferOptionsByRecordTypeAndKey]
  -[CKRecordFetchAggregatorOperationInfo setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKRecordFetchAggregatorOperationInfo desiredKeys]
  -[CKRecordFetchAggregatorOperationInfo setFetchAssetContents:]
  -[CKRecordFetchAggregatorOperationInfo setPreserveOrdering:]
  -[CKRecordFetchAggregatorOperationInfo fetchAssetContents]
  -[CKRecordFetchAggregatorOperationInfo preserveOrdering]
  -[CKRecordFetchAggregatorOperationInfo forceDecryptionAttempt]
  -[CKRecordFetchAggregatorOperationInfo setForceDecryptionAttempt:]


CKDRecordFetchAggregator : CKDDatabaseOperation
 @property  BOOL fetchAssetContents
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  BOOL preserveOrdering
 @property  NSSet *desiredKeys
 @property  NSObject<OS_dispatch_source> *recordReadySource
 @property  NSObject<OS_dispatch_queue> *fetchQueue
 @property  NSObject<OS_dispatch_source> *fetchSource
 @property  NSObject<OS_dispatch_group> *fetchGroup
 @property  NSMutableDictionary *fetchInfosByOrder
 @property  unsigned long curFetchOrder
 @property  unsigned long highestReturnedOrder
 @property  CKDFetchRecordsOperation *currentFetchOp
 @property  CKDRecordCache *recordCache
 @property  BOOL started
 @property  BOOL markedToFinishByParent
 @property  BOOL forceDecryptionAttempt
 @property  BOOL useRecordCache
 @property  @? fetchAggregatorCompletionBlock

  // instance methods
  -[CKDRecordFetchAggregator dealloc]
  -[CKDRecordFetchAggregator .cxx_destruct]
  -[CKDRecordFetchAggregator main]
  -[CKDRecordFetchAggregator setDesiredKeys:]
  -[CKDRecordFetchAggregator started]
  -[CKDRecordFetchAggregator setStarted:]
  -[CKDRecordFetchAggregator CKPropertiesDescription]
  -[CKDRecordFetchAggregator _finishOnCallbackQueueWithError:]
  -[CKDRecordFetchAggregator activityCreate]
  -[CKDRecordFetchAggregator assetTransferOptionsByRecordTypeAndKey]
  -[CKDRecordFetchAggregator setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKDRecordFetchAggregator desiredKeys]
  -[CKDRecordFetchAggregator fetchGroup]
  -[CKDRecordFetchAggregator setFetchGroup:]
  -[CKDRecordFetchAggregator fetchQueue]
  -[CKDRecordFetchAggregator setFetchQueue:]
  -[CKDRecordFetchAggregator initWithOperationInfo:clientContext:]
  -[CKDRecordFetchAggregator fetchRecords:withPerRecordCompletion:]
  -[CKDRecordFetchAggregator setFetchAssetContents:]
  -[CKDRecordFetchAggregator setPreserveOrdering:]
  -[CKDRecordFetchAggregator setFetchAggregatorCompletionBlock:]
  -[CKDRecordFetchAggregator finishIfAppropriate]
  -[CKDRecordFetchAggregator recordReadySource]
  -[CKDRecordFetchAggregator setRecordReadySource:]
  -[CKDRecordFetchAggregator fetchAssetContents]
  -[CKDRecordFetchAggregator preserveOrdering]
  -[CKDRecordFetchAggregator forceDecryptionAttempt]
  -[CKDRecordFetchAggregator setForceDecryptionAttempt:]
  -[CKDRecordFetchAggregator _recordFetchesAvailable]
  -[CKDRecordFetchAggregator _flushFetchedRecordsToConsumerLocked]
  -[CKDRecordFetchAggregator useRecordCache]
  -[CKDRecordFetchAggregator fetchInfosByOrder]
  -[CKDRecordFetchAggregator highestReturnedOrder]
  -[CKDRecordFetchAggregator setHighestReturnedOrder:]
  -[CKDRecordFetchAggregator _performCallbackForFetchInfoLocked:]
  -[CKDRecordFetchAggregator _flushFetchedRecordsToConsumerOrderedLocked]
  -[CKDRecordFetchAggregator _flushFetchedRecordsToConsumerNoOrderingLocked]
  -[CKDRecordFetchAggregator currentFetchOp]
  -[CKDRecordFetchAggregator setUseRecordCache:]
  -[CKDRecordFetchAggregator setCurrentFetchOp:]
  -[CKDRecordFetchAggregator fetchSource]
  -[CKDRecordFetchAggregator _lockedSendFetchRequest]
  -[CKDRecordFetchAggregator isMarkedToFinishByParent]
  -[CKDRecordFetchAggregator _finishRecordFetchAggregator]
  -[CKDRecordFetchAggregator curFetchOrder]
  -[CKDRecordFetchAggregator setCurFetchOrder:]
  -[CKDRecordFetchAggregator recordCache]
  -[CKDRecordFetchAggregator _fetchRecord:recordReadyHandle:withRecordCompletion:]
  -[CKDRecordFetchAggregator _addRecordFetchInfos:]
  -[CKDRecordFetchAggregator setMarkedToFinishByParent:]
  -[CKDRecordFetchAggregator fetchAggregatorCompletionBlock]
  -[CKDRecordFetchAggregator setFetchSource:]
  -[CKDRecordFetchAggregator setFetchInfosByOrder:]


CKDFetchUserQuotaURLRequest : CKDURLRequest
 @property  @? quotaFetchedBlock

  // instance methods
  -[CKDFetchUserQuotaURLRequest .cxx_destruct]
  -[CKDFetchUserQuotaURLRequest operationType]
  -[CKDFetchUserQuotaURLRequest generateRequestOperations]
  -[CKDFetchUserQuotaURLRequest requestDidParseProtobufObject:]
  -[CKDFetchUserQuotaURLRequest requestDidParseNodeFailure:]
  -[CKDFetchUserQuotaURLRequest requestOperationClasses]
  -[CKDFetchUserQuotaURLRequest setQuotaFetchedBlock:]
  -[CKDFetchUserQuotaURLRequest quotaFetchedBlock]


CKDFetchWebAuthTokenOperation : CKDDatabaseOperation
 @property  NSString *webAuthToken
 @property  NSString *APIToken

  // instance methods
  -[CKDFetchWebAuthTokenOperation .cxx_destruct]
  -[CKDFetchWebAuthTokenOperation main]
  -[CKDFetchWebAuthTokenOperation activityCreate]
  -[CKDFetchWebAuthTokenOperation APIToken]
  -[CKDFetchWebAuthTokenOperation setAPIToken:]
  -[CKDFetchWebAuthTokenOperation webAuthToken]
  -[CKDFetchWebAuthTokenOperation setWebAuthToken:]
  -[CKDFetchWebAuthTokenOperation initWithOperationInfo:clientContext:]
  -[CKDFetchWebAuthTokenOperation operationResultClass]
  -[CKDFetchWebAuthTokenOperation fillOutOperationResult:]


CKDPResponseOperationResultError : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasClientError
 @property  CKDPResponseOperationResultErrorClient *clientError
 @property  BOOL hasServerError
 @property  CKDPResponseOperationResultErrorServer *serverError
 @property  BOOL hasExtensionError
 @property  CKDPResponseOperationResultErrorExtension *extensionError
 @property  BOOL hasAuxiliaryError
 @property  CKDPResponseOperationResultErrorAuxiliaryError *auxiliaryError
 @property  BOOL hasRetryAfterSeconds
 @property  int retryAfterSeconds
 @property  BOOL hasErrorDescription
 @property  NSString *errorDescription
 @property  BOOL hasErrorKey
 @property  NSString *errorKey
 @property  BOOL hasErrorInternal
 @property  NSString *errorInternal

  // instance methods
  -[CKDPResponseOperationResultError isEqual:]
  -[CKDPResponseOperationResultError copyWithZone:]
  -[CKDPResponseOperationResultError .cxx_destruct]
  -[CKDPResponseOperationResultError dictionaryRepresentation]
  -[CKDPResponseOperationResultError writeTo:]
  -[CKDPResponseOperationResultError mergeFrom:]
  -[CKDPResponseOperationResultError readFrom:]
  -[CKDPResponseOperationResultError copyTo:]
  -[CKDPResponseOperationResultError errorDescription]
  -[CKDPResponseOperationResultError setErrorDescription:]
  -[CKDPResponseOperationResultError retryAfterSeconds]
  -[CKDPResponseOperationResultError serverError]
  -[CKDPResponseOperationResultError setClientError:]
  -[CKDPResponseOperationResultError clientError]
  -[CKDPResponseOperationResultError hasErrorDescription]
  -[CKDPResponseOperationResultError setServerError:]
  -[CKDPResponseOperationResultError hasErrorKey]
  -[CKDPResponseOperationResultError errorKey]
  -[CKDPResponseOperationResultError hasRetryAfterSeconds]
  -[CKDPResponseOperationResultError hasClientError]
  -[CKDPResponseOperationResultError hasServerError]
  -[CKDPResponseOperationResultError hasExtensionError]
  -[CKDPResponseOperationResultError setExtensionError:]
  -[CKDPResponseOperationResultError setErrorKey:]
  -[CKDPResponseOperationResultError setRetryAfterSeconds:]
  -[CKDPResponseOperationResultError setHasRetryAfterSeconds:]
  -[CKDPResponseOperationResultError extensionError]
  -[CKDPResponseOperationResultError hasAuxiliaryError]
  -[CKDPResponseOperationResultError auxiliaryError]
  -[CKDPResponseOperationResultError setErrorInternal:]
  -[CKDPResponseOperationResultError setAuxiliaryError:]
  -[CKDPResponseOperationResultError hasErrorInternal]
  -[CKDPResponseOperationResultError errorInternal]


CKDMMCSEngineContext : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  long long refCount
 @property  long long state
 @property  BOOL stopMMCSThread
 @property  CKDMMCS *MMCS
 @property  ^{_mmcs_engine=} MMCSEngine
 @property  NSString *applicationBundleID
 @property  NSString *path
 @property  NSObject<OS_dispatch_semaphore> *semaphore
 @property  NSRunLoop *runLoop
 @property  NSString *runLoopMode
 @property  unsigned int maxChunkCountForSection
 @property  NSMutableIndexSet *inMemoryItemsIDs

  // class methods
  +[CKDMMCSEngineContext _appID]
  +[CKDMMCSEngineContext sharedContextsQueue]
  +[CKDMMCSEngineContext tearDownMMCSEngineWithContext:]
  +[CKDMMCSEngineContext hasCachedCKDMMCSEngineContextForPath:]
  +[CKDMMCSEngineContext setupMMCSEngineWithApplicationBundleID:path:wasCached:error:]
  +[CKDMMCSEngineContext sharedContextsByPath]

  // instance methods
  -[CKDMMCSEngineContext dealloc]
  -[CKDMMCSEngineContext .cxx_destruct]
  -[CKDMMCSEngineContext path]
  -[CKDMMCSEngineContext refCount]
  -[CKDMMCSEngineContext state]
  -[CKDMMCSEngineContext runLoop]
  -[CKDMMCSEngineContext setPath:]
  -[CKDMMCSEngineContext setState:]
  -[CKDMMCSEngineContext applicationBundleID]
  -[CKDMMCSEngineContext CKPropertiesDescription]
  -[CKDMMCSEngineContext semaphore]
  -[CKDMMCSEngineContext setSemaphore:]
  -[CKDMMCSEngineContext setRefCount:]
  -[CKDMMCSEngineContext setRunLoop:]
  -[CKDMMCSEngineContext setApplicationBundleID:]
  -[CKDMMCSEngineContext MMCS]
  -[CKDMMCSEngineContext setMMCS:]
  -[CKDMMCSEngineContext MMCSEngine]
  -[CKDMMCSEngineContext maxChunkCountForSection]
  -[CKDMMCSEngineContext performOnRunLoop:]
  -[CKDMMCSEngineContext setStopMMCSThread:]
  -[CKDMMCSEngineContext _MMCSTreadAbort]
  -[CKDMMCSEngineContext runLoopMode]
  -[CKDMMCSEngineContext stopMMCSThread]
  -[CKDMMCSEngineContext _MMCSThread]
  -[CKDMMCSEngineContext setMMCSEngine:]
  -[CKDMMCSEngineContext setMaxChunkCountForSection:]
  -[CKDMMCSEngineContext _setupMMCSEngineWithError:]
  -[CKDMMCSEngineContext incRefCount]
  -[CKDMMCSEngineContext initWithApplicationBundleID:path:]
  -[CKDMMCSEngineContext _setupMMCSEngineWithRetryCount:error:]
  -[CKDMMCSEngineContext decRefCount]
  -[CKDMMCSEngineContext _tearDownMMCSEngine]
  -[CKDMMCSEngineContext cancelRequestWithContext:]
  -[CKDMMCSEngineContext nextAvailableItemID]
  -[CKDMMCSEngineContext stopTrackingItemID:]
  -[CKDMMCSEngineContext setRunLoopMode:]
  -[CKDMMCSEngineContext inMemoryItemsIDs]
  -[CKDMMCSEngineContext setInMemoryItemsIDs:]


CKDMMCSItemGroupContext : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDCancelling, CKDMMCSItemReaderWriterDelegateProtocol>
 @property  NSNumber *hasConformingOperation
 @property  CKDMMCS *MMCS
 @property  CKDMMCSItemGroup *itemGroup
 @property  CKDOperation *operation
 @property  @? progressBlock
 @property  @? commandBlock
 @property  @? startBlock
 @property  @? completionBlock
 @property  CKDMMCSItem *MMCSPackageSectionItem
 @property  NSMapTable *MMCSItemsByItemID
 @property  long long mmcsOperationType
 @property  id operationInfo

  // instance methods
  -[CKDMMCSItemGroupContext .cxx_destruct]
  -[CKDMMCSItemGroupContext cancel]
  -[CKDMMCSItemGroupContext operation]
  -[CKDMMCSItemGroupContext setOperation:]
  -[CKDMMCSItemGroupContext start]
  -[CKDMMCSItemGroupContext completionBlock]
  -[CKDMMCSItemGroupContext setCompletionBlock:]
  -[CKDMMCSItemGroupContext progressBlock]
  -[CKDMMCSItemGroupContext setProgressBlock:]
  -[CKDMMCSItemGroupContext operationInfo]
  -[CKDMMCSItemGroupContext shouldFetchAssetContentInMemory]
  -[CKDMMCSItemGroupContext itemGroup]
  -[CKDMMCSItemGroupContext startBlock]
  -[CKDMMCSItemGroupContext mmcsOperationType]
  -[CKDMMCSItemGroupContext setMmcsOperationType:]
  -[CKDMMCSItemGroupContext MMCS]
  -[CKDMMCSItemGroupContext setMMCS:]
  -[CKDMMCSItemGroupContext handleCommand:forItem:]
  -[CKDMMCSItemGroupContext setOperationInfo:]
  -[CKDMMCSItemGroupContext willOpenItemReaderWriter:error:]
  -[CKDMMCSItemGroupContext didOpenItemReaderWriter:result:error:]
  -[CKDMMCSItemGroupContext didCompleteRequestWithError:]
  -[CKDMMCSItemGroupContext initWithMMCS:itemGroup:operation:progress:command:start:completionHandler:]
  -[CKDMMCSItemGroupContext setMMCSPackageSectionItem:]
  -[CKDMMCSItemGroupContext findTrackedMMCSItemByItemID:]
  -[CKDMMCSItemGroupContext getCKDMMCSItemReaderByPathForMMCSItem:error:]
  -[CKDMMCSItemGroupContext updateProgressForItemID:state:progress:error:]
  -[CKDMMCSItemGroupContext didGetItemID:signature:path:error:results:]
  -[CKDMMCSItemGroupContext updateProgressForItemID:state:progress:results:]
  -[CKDMMCSItemGroupContext didPutItemID:signature:results:]
  -[CKDMMCSItemGroupContext didGetMetricsForRequest:]
  -[CKDMMCSItemGroupContext getMMCSItemReaderForItemID:error:]
  -[CKDMMCSItemGroupContext updateProgressForPackageSectionState:progress:results:]
  -[CKDMMCSItemGroupContext didPutSectionWithSignature:results:]
  -[CKDMMCSItemGroupContext _setupMMCSItemsWithError:]
  -[CKDMMCSItemGroupContext MMCSItemsByItemID]
  -[CKDMMCSItemGroupContext _startTrackingMMCSItems:]
  -[CKDMMCSItemGroupContext _setupRegisterMMCSItemsWithError:]
  -[CKDMMCSItemGroupContext _setupPutMMCSItemsWithError:]
  -[CKDMMCSItemGroupContext _setupGetMMCSItemsWithError:]
  -[CKDMMCSItemGroupContext _setupPutContentMetadataMMCSItemsWithError:]
  -[CKDMMCSItemGroupContext _cleanupMMCSRegisterItems]
  -[CKDMMCSItemGroupContext _stopTrackingMMCSItems:]
  -[CKDMMCSItemGroupContext _cleanupMMCSItems]
  -[CKDMMCSItemGroupContext MMCSPackageSectionItem]
  -[CKDMMCSItemGroupContext commandBlock]
  -[CKDMMCSItemGroupContext conformingOperation]
  -[CKDMMCSItemGroupContext willCloseItemReaderWriter:error:]
  -[CKDMMCSItemGroupContext didCloseItemReaderWriter:result:error:]
  -[CKDMMCSItemGroupContext willGetFileMetadataItemReaderWriter:error:]
  -[CKDMMCSItemGroupContext didGetFileMetadataItemReaderWriter:fileMetadata:error:]
  -[CKDMMCSItemGroupContext willReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:]
  -[CKDMMCSItemGroupContext didReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:]
  -[CKDMMCSItemGroupContext hasConformingOperation]
  -[CKDMMCSItemGroupContext setHasConformingOperation:]
  -[CKDMMCSItemGroupContext setItemGroup:]
  -[CKDMMCSItemGroupContext setCommandBlock:]
  -[CKDMMCSItemGroupContext setStartBlock:]
  -[CKDMMCSItemGroupContext setMMCSItemsByItemID:]


CKDPListPosition : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIndex
 @property  int index
 @property  BOOL hasIsReversed
 @property  BOOL isReversed

  // instance methods
  -[CKDPListPosition isEqual:]
  -[CKDPListPosition copyWithZone:]
  -[CKDPListPosition index]
  -[CKDPListPosition dictionaryRepresentation]
  -[CKDPListPosition writeTo:]
  -[CKDPListPosition mergeFrom:]
  -[CKDPListPosition readFrom:]
  -[CKDPListPosition copyTo:]
  -[CKDPListPosition setIndex:]
  -[CKDPListPosition isReversed]
  -[CKDPListPosition setIsReversed:]
  -[CKDPListPosition setHasIndex:]
  -[CKDPListPosition hasIndex]
  -[CKDPListPosition setHasIsReversed:]
  -[CKDPListPosition hasIsReversed]


CKDPDeleteContainerRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // class methods
  +[CKDPDeleteContainerRequest options]

  // instance methods
  -[CKDPDeleteContainerRequest isEqual:]
  -[CKDPDeleteContainerRequest copyWithZone:]
  -[CKDPDeleteContainerRequest dictionaryRepresentation]
  -[CKDPDeleteContainerRequest writeTo:]
  -[CKDPDeleteContainerRequest mergeFrom:]
  -[CKDPDeleteContainerRequest readFrom:]
  -[CKDPDeleteContainerRequest copyTo:]
  -[CKDPDeleteContainerRequest requestTypeCode]
  -[CKDPDeleteContainerRequest responseClass]


CKDPRecordRetrieveChangesResponseShareChange : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasShareIdentifier
 @property  CKDPShareIdentifier *shareIdentifier
 @property  BOOL hasChangeType
 @property  int changeType
 @property  BOOL hasShare
 @property  CKDPShare *share

  // instance methods
  -[CKDPRecordRetrieveChangesResponseShareChange isEqual:]
  -[CKDPRecordRetrieveChangesResponseShareChange copyWithZone:]
  -[CKDPRecordRetrieveChangesResponseShareChange .cxx_destruct]
  -[CKDPRecordRetrieveChangesResponseShareChange changeType]
  -[CKDPRecordRetrieveChangesResponseShareChange dictionaryRepresentation]
  -[CKDPRecordRetrieveChangesResponseShareChange writeTo:]
  -[CKDPRecordRetrieveChangesResponseShareChange mergeFrom:]
  -[CKDPRecordRetrieveChangesResponseShareChange readFrom:]
  -[CKDPRecordRetrieveChangesResponseShareChange copyTo:]
  -[CKDPRecordRetrieveChangesResponseShareChange share]
  -[CKDPRecordRetrieveChangesResponseShareChange setShare:]
  -[CKDPRecordRetrieveChangesResponseShareChange setChangeType:]
  -[CKDPRecordRetrieveChangesResponseShareChange setHasChangeType:]
  -[CKDPRecordRetrieveChangesResponseShareChange hasChangeType]
  -[CKDPRecordRetrieveChangesResponseShareChange changeTypeAsString:]
  -[CKDPRecordRetrieveChangesResponseShareChange StringAsChangeType:]
  -[CKDPRecordRetrieveChangesResponseShareChange hasShare]
  -[CKDPRecordRetrieveChangesResponseShareChange setShareIdentifier:]
  -[CKDPRecordRetrieveChangesResponseShareChange hasShareIdentifier]
  -[CKDPRecordRetrieveChangesResponseShareChange shareIdentifier]


CKDPShare : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasShareId
 @property  CKDPShareIdentifier *shareId
 @property  BOOL hasEtag
 @property  NSString *etag
 @property  BOOL hasPublicAccess
 @property  int publicAccess
 @property  BOOL hasInvitedPcs
 @property  CKDPProtectionInfo *invitedPcs
 @property  BOOL hasSelfAddedPcs
 @property  CKDPProtectionInfo *selfAddedPcs
 @property  NSMutableArray *participants
 @property  BOOL hasShortTokenRoutingKey
 @property  NSString *shortTokenRoutingKey
 @property  NSMutableArray *potentialMatchs
 @property  NSMutableArray *invitedKeyToRemoves
 @property  BOOL hasPublisherModel
 @property  BOOL publisherModel
 @property  BOOL hasAnonymousPublicAccess
 @property  BOOL anonymousPublicAccess
 @property  BOOL hasDisplayedHostname
 @property  NSString *displayedHostname
 @property  BOOL hasPublisherModelType
 @property  int publisherModelType
 @property  BOOL hasShortTokenHash
 @property  NSData *shortTokenHash
 @property  BOOL hasOrigin
 @property  NSString *origin

  // class methods
  +[CKDPShare participantType]
  +[CKDPShare potentialMatchType]
  +[CKDPShare invitedKeyToRemoveType]

  // instance methods
  -[CKDPShare isEqual:]
  -[CKDPShare copyWithZone:]
  -[CKDPShare .cxx_destruct]
  -[CKDPShare dictionaryRepresentation]
  -[CKDPShare etag]
  -[CKDPShare writeTo:]
  -[CKDPShare origin]
  -[CKDPShare mergeFrom:]
  -[CKDPShare readFrom:]
  -[CKDPShare copyTo:]
  -[CKDPShare setOrigin:]
  -[CKDPShare participants]
  -[CKDPShare setEtag:]
  -[CKDPShare hasEtag]
  -[CKDPShare displayedHostname]
  -[CKDPShare setDisplayedHostname:]
  -[CKDPShare addParticipant:]
  -[CKDPShare hasOrigin]
  -[CKDPShare setParticipants:]
  -[CKDPShare setShortTokenHash:]
  -[CKDPShare hasShortTokenHash]
  -[CKDPShare shortTokenHash]
  -[CKDPShare setShareId:]
  -[CKDPShare hasShareId]
  -[CKDPShare shareId]
  -[CKDPShare potentialMatchsCount]
  -[CKDPShare potentialMatchs]
  -[CKDPShare setSelfAddedPcs:]
  -[CKDPShare hasSelfAddedPcs]
  -[CKDPShare selfAddedPcs]
  -[CKDPShare publicAccess]
  -[CKDPShare _publicAccessCKLogValue]
  -[CKDPShare addPotentialMatch:]
  -[CKDPShare addInvitedKeyToRemove:]
  -[CKDPShare setInvitedPcs:]
  -[CKDPShare participantsCount]
  -[CKDPShare clearParticipants]
  -[CKDPShare participantAtIndex:]
  -[CKDPShare setShortTokenRoutingKey:]
  -[CKDPShare clearPotentialMatchs]
  -[CKDPShare potentialMatchAtIndex:]
  -[CKDPShare invitedKeyToRemovesCount]
  -[CKDPShare clearInvitedKeyToRemoves]
  -[CKDPShare invitedKeyToRemoveAtIndex:]
  -[CKDPShare setPublicAccess:]
  -[CKDPShare setHasPublicAccess:]
  -[CKDPShare hasPublicAccess]
  -[CKDPShare publicAccessAsString:]
  -[CKDPShare StringAsPublicAccess:]
  -[CKDPShare hasInvitedPcs]
  -[CKDPShare hasShortTokenRoutingKey]
  -[CKDPShare publisherModel]
  -[CKDPShare setPublisherModel:]
  -[CKDPShare setHasPublisherModel:]
  -[CKDPShare hasPublisherModel]
  -[CKDPShare anonymousPublicAccess]
  -[CKDPShare setAnonymousPublicAccess:]
  -[CKDPShare setHasAnonymousPublicAccess:]
  -[CKDPShare hasAnonymousPublicAccess]
  -[CKDPShare hasDisplayedHostname]
  -[CKDPShare publisherModelType]
  -[CKDPShare setPublisherModelType:]
  -[CKDPShare setHasPublisherModelType:]
  -[CKDPShare hasPublisherModelType]
  -[CKDPShare publisherModelTypeAsString:]
  -[CKDPShare StringAsPublisherModelType:]
  -[CKDPShare invitedPcs]
  -[CKDPShare shortTokenRoutingKey]
  -[CKDPShare setPotentialMatchs:]
  -[CKDPShare invitedKeyToRemoves]
  -[CKDPShare setInvitedKeyToRemoves:]


CKDContainerPrivacySettings : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKContainerID *containerID
 @property  NSSet *applicationBundleIDs
 @property  long long discoverable

  // instance methods
  -[CKDContainerPrivacySettings isEqual:]
  -[CKDContainerPrivacySettings .cxx_destruct]
  -[CKDContainerPrivacySettings containerID]
  -[CKDContainerPrivacySettings CKPropertiesDescription]
  -[CKDContainerPrivacySettings setContainerID:]
  -[CKDContainerPrivacySettings setApplicationBundleIDs:]
  -[CKDContainerPrivacySettings applicationBundleIDs]
  -[CKDContainerPrivacySettings setDiscoverable:]
  -[CKDContainerPrivacySettings discoverable]


CKDBatchGetUserPrivacySettingsOperation : CKDOperation
 @property  NSArray *containerPrivacySettings

  // class methods
  +[CKDBatchGetUserPrivacySettingsOperation appPermissionGroupsFromContainerPrivacySettings:]

  // instance methods
  -[CKDBatchGetUserPrivacySettingsOperation .cxx_destruct]
  -[CKDBatchGetUserPrivacySettingsOperation main]
  -[CKDBatchGetUserPrivacySettingsOperation activityCreate]
  -[CKDBatchGetUserPrivacySettingsOperation containerPrivacySettings]
  -[CKDBatchGetUserPrivacySettingsOperation shouldCheckAppVersion]
  -[CKDBatchGetUserPrivacySettingsOperation setContainerPrivacySettings:]


CKDBackingFakeAccount : CKDBackingAccount
 @property  NSString *identifier
 @property  NSString *primaryEmail
 @property  NSString *password
 @property  NSString *dsid
 @property  NSString *altDsid
 @property  NSDictionary *accountBag
 @property  NSDictionary *propertyOverrides
 @property  NSObject<OS_dispatch_queue> *fakeAccountInfoQueue
 @property  NSDictionary *overridesByDataclass

  // class methods
  +[CKDBackingFakeAccount fakeAccountWithEmail:password:propertyOverrides:overridesByDataclass:]
  +[CKDBackingFakeAccount _platformBackingAccountClass]

  // instance methods
  -[CKDBackingFakeAccount dealloc]
  -[CKDBackingFakeAccount objectForKeyedSubscript:]
  -[CKDBackingFakeAccount password]
  -[CKDBackingFakeAccount .cxx_destruct]
  -[CKDBackingFakeAccount identifier]
  -[CKDBackingFakeAccount setIdentifier:]
  -[CKDBackingFakeAccount setPassword:]
  -[CKDBackingFakeAccount dsid]
  -[CKDBackingFakeAccount setDsid:]
  -[CKDBackingFakeAccount fullName]
  -[CKDBackingFakeAccount username]
  -[CKDBackingFakeAccount personaIdentifier]
  -[CKDBackingFakeAccount deviceCountWithCompletionHandler:]
  -[CKDBackingFakeAccount overridesByDataclass]
  -[CKDBackingFakeAccount setOverridesByDataclass:]
  -[CKDBackingFakeAccount displayedHostname]
  -[CKDBackingFakeAccount primaryEmail]
  -[CKDBackingFakeAccount isDataclassEnabled:]
  -[CKDBackingFakeAccount isPrimaryEmailVerified]
  -[CKDBackingFakeAccount iCloudDriveAllowsCellularAccess]
  -[CKDBackingFakeAccount isFakeAccount]
  -[CKDBackingFakeAccount accountPropertiesForDataclass:]
  -[CKDBackingFakeAccount updateAccountPropertiesAndSaveAccountInStore:completionHandler:]
  -[CKDBackingFakeAccount renewAuthTokenInStore:withOptions:completionHandler:]
  -[CKDBackingFakeAccount cloudKitAuthTokenWithError:]
  -[CKDBackingFakeAccount iCloudAuthTokenWithError:]
  -[CKDBackingFakeAccount validateVettingToken:vettingEmail:vettingPhone:completionHandler:]
  -[CKDBackingFakeAccount accountBag]
  -[CKDBackingFakeAccount setAltDsid:]
  -[CKDBackingFakeAccount setAccountBag:]
  -[CKDBackingFakeAccount _checkAndLogIfAccountError]
  -[CKDBackingFakeAccount fakeAccountInfoQueue]
  -[CKDBackingFakeAccount _initFakeAccountWithEmail:password:]
  -[CKDBackingFakeAccount setPropertyOverrides:]
  -[CKDBackingFakeAccount propertyOverrides]
  -[CKDBackingFakeAccount ckAccount]
  -[CKDBackingFakeAccount altDsid]
  -[CKDBackingFakeAccount setPrimaryEmail:]
  -[CKDBackingFakeAccount setFakeAccountInfoQueue:]


CKDPZoneRetrieveChangesResponseChangedZone : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier
 @property  BOOL hasChangeType
 @property  int changeType
 @property  BOOL hasDeleteType
 @property  int deleteType
 @property  BOOL hasCapabilities
 @property  CKDPZoneCapabilities *capabilities

  // instance methods
  -[CKDPZoneRetrieveChangesResponseChangedZone isEqual:]
  -[CKDPZoneRetrieveChangesResponseChangedZone copyWithZone:]
  -[CKDPZoneRetrieveChangesResponseChangedZone .cxx_destruct]
  -[CKDPZoneRetrieveChangesResponseChangedZone changeType]
  -[CKDPZoneRetrieveChangesResponseChangedZone dictionaryRepresentation]
  -[CKDPZoneRetrieveChangesResponseChangedZone writeTo:]
  -[CKDPZoneRetrieveChangesResponseChangedZone mergeFrom:]
  -[CKDPZoneRetrieveChangesResponseChangedZone readFrom:]
  -[CKDPZoneRetrieveChangesResponseChangedZone copyTo:]
  -[CKDPZoneRetrieveChangesResponseChangedZone capabilities]
  -[CKDPZoneRetrieveChangesResponseChangedZone setChangeType:]
  -[CKDPZoneRetrieveChangesResponseChangedZone setCapabilities:]
  -[CKDPZoneRetrieveChangesResponseChangedZone setZoneIdentifier:]
  -[CKDPZoneRetrieveChangesResponseChangedZone hasZoneIdentifier]
  -[CKDPZoneRetrieveChangesResponseChangedZone zoneIdentifier]
  -[CKDPZoneRetrieveChangesResponseChangedZone hasCapabilities]
  -[CKDPZoneRetrieveChangesResponseChangedZone setHasChangeType:]
  -[CKDPZoneRetrieveChangesResponseChangedZone hasChangeType]
  -[CKDPZoneRetrieveChangesResponseChangedZone changeTypeAsString:]
  -[CKDPZoneRetrieveChangesResponseChangedZone StringAsChangeType:]
  -[CKDPZoneRetrieveChangesResponseChangedZone deleteType]
  -[CKDPZoneRetrieveChangesResponseChangedZone setDeleteType:]
  -[CKDPZoneRetrieveChangesResponseChangedZone setHasDeleteType:]
  -[CKDPZoneRetrieveChangesResponseChangedZone hasDeleteType]
  -[CKDPZoneRetrieveChangesResponseChangedZone deleteTypeAsString:]
  -[CKDPZoneRetrieveChangesResponseChangedZone StringAsDeleteType:]


CKDPLocale : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasLanguageCode
 @property  NSString *languageCode
 @property  BOOL hasRegionCode
 @property  NSString *regionCode

  // instance methods
  -[CKDPLocale isEqual:]
  -[CKDPLocale copyWithZone:]
  -[CKDPLocale .cxx_destruct]
  -[CKDPLocale languageCode]
  -[CKDPLocale dictionaryRepresentation]
  -[CKDPLocale writeTo:]
  -[CKDPLocale mergeFrom:]
  -[CKDPLocale readFrom:]
  -[CKDPLocale copyTo:]
  -[CKDPLocale setLanguageCode:]
  -[CKDPLocale setRegionCode:]
  -[CKDPLocale regionCode]
  -[CKDPLocale hasLanguageCode]
  -[CKDPLocale hasRegionCode]


CKDCodeFunctionInvokeOperation : CKDDatabaseOperation
 @property  NSString *serviceName
 @property  NSString *functionName
 @property  PCCKey *pccKey
 @property  NSArray *pccWrappedKeys
 @property  NSData *attestationEntropy
 @property  NSArray *requestLocalSerializations
 @property  NSArray *requestLocalEnvelopes
 @property  NSData *permittedRemoteMeasurement
 @property  NSURL *explicitBaseURL
 @property  BOOL local
 @property  BOOL shouldFetchAssetContentInMemory
 @property  NSArray *requestRecords
 @property  NSArray *requestEnvelopes
 @property  NSData *serializedArguments
 @property  NSData *serializedResponse
 @property  NSArray *responseRecords
 @property  CKDProtocolTranslator *translator
 @property  @? replaceLocalSerializationsBlobs
 @property  @? initialResponseReceivedCallback
 @property  @? replaceWireSerializations
 @property  @? recordFetchCompletionBlock
 @property  @? recordFetchProgressBlock
 @property  @? recordFetchCommandBlock

  // class methods
  +[CKDCodeFunctionInvokeOperation isPredominatelyDownload]

  // instance methods
  -[CKDCodeFunctionInvokeOperation .cxx_destruct]
  -[CKDCodeFunctionInvokeOperation main]
  -[CKDCodeFunctionInvokeOperation serviceName]
  -[CKDCodeFunctionInvokeOperation functionName]
  -[CKDCodeFunctionInvokeOperation activityCreate]
  -[CKDCodeFunctionInvokeOperation shouldFetchAssetContentInMemory]
  -[CKDCodeFunctionInvokeOperation setShouldFetchAssetContentInMemory:]
  -[CKDCodeFunctionInvokeOperation local]
  -[CKDCodeFunctionInvokeOperation setLocal:]
  -[CKDCodeFunctionInvokeOperation setSerializedResponse:]
  -[CKDCodeFunctionInvokeOperation serializedResponse]
  -[CKDCodeFunctionInvokeOperation explicitBaseURL]
  -[CKDCodeFunctionInvokeOperation setExplicitBaseURL:]
  -[CKDCodeFunctionInvokeOperation requestLocalSerializations]
  -[CKDCodeFunctionInvokeOperation requestLocalEnvelopes]
  -[CKDCodeFunctionInvokeOperation permittedRemoteMeasurement]
  -[CKDCodeFunctionInvokeOperation setRequestLocalSerializations:]
  -[CKDCodeFunctionInvokeOperation setRequestLocalEnvelopes:]
  -[CKDCodeFunctionInvokeOperation setPermittedRemoteMeasurement:]
  -[CKDCodeFunctionInvokeOperation requestRecords]
  -[CKDCodeFunctionInvokeOperation initWithOperationInfo:clientContext:]
  -[CKDCodeFunctionInvokeOperation setRecordFetchProgressBlock:]
  -[CKDCodeFunctionInvokeOperation setRecordFetchCommandBlock:]
  -[CKDCodeFunctionInvokeOperation setRecordFetchCompletionBlock:]
  -[CKDCodeFunctionInvokeOperation setReplaceLocalSerializationsBlobs:]
  -[CKDCodeFunctionInvokeOperation setInitialResponseReceivedCallback:]
  -[CKDCodeFunctionInvokeOperation setReplaceWireSerializations:]
  -[CKDCodeFunctionInvokeOperation nameForState:]
  -[CKDCodeFunctionInvokeOperation makeStateTransition]
  -[CKDCodeFunctionInvokeOperation translator]
  -[CKDCodeFunctionInvokeOperation setTranslator:]
  -[CKDCodeFunctionInvokeOperation attestationEntropy]
  -[CKDCodeFunctionInvokeOperation setAttestationEntropy:]
  -[CKDCodeFunctionInvokeOperation _preflightRecords]
  -[CKDCodeFunctionInvokeOperation _getSerializedRequest]
  -[CKDCodeFunctionInvokeOperation _invokeLocalFunction]
  -[CKDCodeFunctionInvokeOperation _invokeFunction]
  -[CKDCodeFunctionInvokeOperation _getDeserializedRecords]
  -[CKDCodeFunctionInvokeOperation _postflightRecords]
  -[CKDCodeFunctionInvokeOperation setRequestRecords:]
  -[CKDCodeFunctionInvokeOperation setPccKey:]
  -[CKDCodeFunctionInvokeOperation pccKey]
  -[CKDCodeFunctionInvokeOperation setRequestEnvelopes:]
  -[CKDCodeFunctionInvokeOperation setPccWrappedKeys:]
  -[CKDCodeFunctionInvokeOperation replaceLocalSerializationsBlobs]
  -[CKDCodeFunctionInvokeOperation requestEnvelopes]
  -[CKDCodeFunctionInvokeOperation setSerializedArguments:]
  -[CKDCodeFunctionInvokeOperation serializedArguments]
  -[CKDCodeFunctionInvokeOperation pccWrappedKeys]
  -[CKDCodeFunctionInvokeOperation initialResponseReceivedCallback]
  -[CKDCodeFunctionInvokeOperation setResponseRecords:]
  -[CKDCodeFunctionInvokeOperation responseRecords]
  -[CKDCodeFunctionInvokeOperation recordFetchCompletionBlock]
  -[CKDCodeFunctionInvokeOperation recordFetchProgressBlock]
  -[CKDCodeFunctionInvokeOperation recordFetchCommandBlock]
  -[CKDCodeFunctionInvokeOperation replaceWireSerializations]


CKDPSubscription : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIdentifier
 @property  CKDPIdentifier *identifier
 @property  BOOL hasEvaluationType
 @property  int evaluationType
 @property  BOOL hasOwner
 @property  int owner
 @property  unsigned long mutationTriggersCount
 @property  ^i mutationTriggers
 @property  BOOL hasNotification
 @property  CKDPSubscriptionNotification *notification
 @property  NSMutableArray *filters
 @property  NSMutableArray *recordTypes
 @property  BOOL hasFireOnce
 @property  BOOL fireOnce
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier

  // class methods
  +[CKDPSubscription filtersType]
  +[CKDPSubscription recordTypesType]

  // instance methods
  -[CKDPSubscription dealloc]
  -[CKDPSubscription isEqual:]
  -[CKDPSubscription copyWithZone:]
  -[CKDPSubscription .cxx_destruct]
  -[CKDPSubscription identifier]
  -[CKDPSubscription setOwner:]
  -[CKDPSubscription setIdentifier:]
  -[CKDPSubscription dictionaryRepresentation]
  -[CKDPSubscription owner]
  -[CKDPSubscription notification]
  -[CKDPSubscription writeTo:]
  -[CKDPSubscription filters]
  -[CKDPSubscription mergeFrom:]
  -[CKDPSubscription readFrom:]
  -[CKDPSubscription copyTo:]
  -[CKDPSubscription setNotification:]
  -[CKDPSubscription setFilters:]
  -[CKDPSubscription setZoneIdentifier:]
  -[CKDPSubscription hasZoneIdentifier]
  -[CKDPSubscription zoneIdentifier]
  -[CKDPSubscription filtersCount]
  -[CKDPSubscription clearFilters]
  -[CKDPSubscription hasIdentifier]
  -[CKDPSubscription hasNotification]
  -[CKDPSubscription addFilters:]
  -[CKDPSubscription filtersAtIndex:]
  -[CKDPSubscription setHasOwner:]
  -[CKDPSubscription hasOwner]
  -[CKDPSubscription fireOnce]
  -[CKDPSubscription evaluationType]
  -[CKDPSubscription addRecordTypes:]
  -[CKDPSubscription mutationTriggersCount]
  -[CKDPSubscription clearMutationTriggers]
  -[CKDPSubscription mutationTriggersAtIndex:]
  -[CKDPSubscription addMutationTriggers:]
  -[CKDPSubscription recordTypesCount]
  -[CKDPSubscription clearRecordTypes]
  -[CKDPSubscription recordTypesAtIndex:]
  -[CKDPSubscription setEvaluationType:]
  -[CKDPSubscription setHasEvaluationType:]
  -[CKDPSubscription hasEvaluationType]
  -[CKDPSubscription evaluationTypeAsString:]
  -[CKDPSubscription StringAsEvaluationType:]
  -[CKDPSubscription ownerAsString:]
  -[CKDPSubscription StringAsOwner:]
  -[CKDPSubscription mutationTriggers]
  -[CKDPSubscription setMutationTriggers:count:]
  -[CKDPSubscription mutationTriggersAsString:]
  -[CKDPSubscription StringAsMutationTriggers:]
  -[CKDPSubscription setFireOnce:]
  -[CKDPSubscription setHasFireOnce:]
  -[CKDPSubscription hasFireOnce]
  -[CKDPSubscription recordTypes]
  -[CKDPSubscription setRecordTypes:]


CKDMMCSItemGroupSet : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *itemsByGroupTuple
 @property  NSError *error

  // instance methods
  -[CKDMMCSItemGroupSet init]
  -[CKDMMCSItemGroupSet .cxx_destruct]
  -[CKDMMCSItemGroupSet error]
  -[CKDMMCSItemGroupSet addItem:]
  -[CKDMMCSItemGroupSet initWithItems:]
  -[CKDMMCSItemGroupSet CKPropertiesDescription]
  -[CKDMMCSItemGroupSet allItemGroups]
  -[CKDMMCSItemGroupSet itemsByGroupTuple]
  -[CKDMMCSItemGroupSet setItemsByGroupTuple:]


CKDFileWatcher : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *path
 @property  NSObject<OS_dispatch_source> *source
 @property  int fd

  // class methods
  +[CKDFileWatcher queue]

  // instance methods
  -[CKDFileWatcher dealloc]
  -[CKDFileWatcher setSource:]
  -[CKDFileWatcher .cxx_destruct]
  -[CKDFileWatcher source]
  -[CKDFileWatcher path]
  -[CKDFileWatcher initWithPath:]
  -[CKDFileWatcher setPath:]
  -[CKDFileWatcher fd]
  -[CKDFileWatcher setFd:]


CKDPFieldAction : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasInsertIntoList
 @property  CKDPFieldActionInsertIntoList *insertIntoList
 @property  BOOL hasDeleteListRange
 @property  CKDPFieldActionDeleteListRange *deleteListRange
 @property  BOOL hasReplaceListRange
 @property  CKDPFieldActionReplaceListRange *replaceListRange

  // instance methods
  -[CKDPFieldAction isEqual:]
  -[CKDPFieldAction copyWithZone:]
  -[CKDPFieldAction .cxx_destruct]
  -[CKDPFieldAction dictionaryRepresentation]
  -[CKDPFieldAction writeTo:]
  -[CKDPFieldAction mergeFrom:]
  -[CKDPFieldAction readFrom:]
  -[CKDPFieldAction copyTo:]
  -[CKDPFieldAction setInsertIntoList:]
  -[CKDPFieldAction setReplaceListRange:]
  -[CKDPFieldAction setDeleteListRange:]
  -[CKDPFieldAction hasInsertIntoList]
  -[CKDPFieldAction hasDeleteListRange]
  -[CKDPFieldAction hasReplaceListRange]
  -[CKDPFieldAction insertIntoList]
  -[CKDPFieldAction deleteListRange]
  -[CKDPFieldAction replaceListRange]


CKCDPCheckContainerHealthResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKCDPCheckContainerHealthResponse isEqual:]
  -[CKCDPCheckContainerHealthResponse copyWithZone:]
  -[CKCDPCheckContainerHealthResponse dictionaryRepresentation]
  -[CKCDPCheckContainerHealthResponse writeTo:]
  -[CKCDPCheckContainerHealthResponse mergeFrom:]
  -[CKCDPCheckContainerHealthResponse readFrom:]
  -[CKCDPCheckContainerHealthResponse copyTo:]


CKDPTokenRegistrationResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPTokenRegistrationResponse isEqual:]
  -[CKDPTokenRegistrationResponse copyWithZone:]
  -[CKDPTokenRegistrationResponse dictionaryRepresentation]
  -[CKDPTokenRegistrationResponse writeTo:]
  -[CKDPTokenRegistrationResponse mergeFrom:]
  -[CKDPTokenRegistrationResponse readFrom:]
  -[CKDPTokenRegistrationResponse copyTo:]


CKDPZoneRetrieveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *zoneSummarys
 @property  BOOL hasContinuationMarker
 @property  NSData *continuationMarker

  // class methods
  +[CKDPZoneRetrieveResponse zoneSummaryType]

  // instance methods
  -[CKDPZoneRetrieveResponse isEqual:]
  -[CKDPZoneRetrieveResponse copyWithZone:]
  -[CKDPZoneRetrieveResponse .cxx_destruct]
  -[CKDPZoneRetrieveResponse dictionaryRepresentation]
  -[CKDPZoneRetrieveResponse writeTo:]
  -[CKDPZoneRetrieveResponse mergeFrom:]
  -[CKDPZoneRetrieveResponse readFrom:]
  -[CKDPZoneRetrieveResponse copyTo:]
  -[CKDPZoneRetrieveResponse setContinuationMarker:]
  -[CKDPZoneRetrieveResponse hasContinuationMarker]
  -[CKDPZoneRetrieveResponse continuationMarker]
  -[CKDPZoneRetrieveResponse addZoneSummary:]
  -[CKDPZoneRetrieveResponse zoneSummarysCount]
  -[CKDPZoneRetrieveResponse clearZoneSummarys]
  -[CKDPZoneRetrieveResponse zoneSummaryAtIndex:]
  -[CKDPZoneRetrieveResponse zoneSummarys]
  -[CKDPZoneRetrieveResponse setZoneSummarys:]


CKDFlowControlManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *operationFlowControls
 @property  unsigned long defaultBudget
 @property  double defaultRegeneration
 @property  double maximumThrottleTime

  // instance methods
  -[CKDFlowControlManager .cxx_destruct]
  -[CKDFlowControlManager setMaximumThrottleTime:]
  -[CKDFlowControlManager maximumThrottleTime]
  -[CKDFlowControlManager CKPropertiesDescription]
  -[CKDFlowControlManager CKStatusReportArray]
  -[CKDFlowControlManager defaultBudget]
  -[CKDFlowControlManager hasStatusToReport]
  -[CKDFlowControlManager initWithDefaultBudget:maximumThrottleTime:andDefaultRegeneration:]
  -[CKDFlowControlManager setDefaultBudget:]
  -[CKDFlowControlManager setDefaultRegeneration:]
  -[CKDFlowControlManager defaultRegeneration]
  -[CKDFlowControlManager checkFlowControlIsLimited:outReportableError:]
  -[CKDFlowControlManager secondsUntilFlowControlNotLimited:]
  -[CKDFlowControlManager updateFlowControlForOperation:reportableError:]
  -[CKDFlowControlManager updateFlowControl:withRetryAfter:reportableError:]
  -[CKDFlowControlManager currentBudget:]
  -[CKDFlowControlManager currentBudgetCap:]
  -[CKDFlowControlManager currentRegeneration:]
  -[CKDFlowControlManager updateFlowControl:withCost:reportableError:]
  -[CKDFlowControlManager setOperationFlowControls:]
  -[CKDFlowControlManager operationFlowControls]
  -[CKDFlowControlManager _flowControlForOperation:createIfNecessary:]
  -[CKDFlowControlManager _flowControlForOperation:]


CKDPRecordRetrieveChangesResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *changedRecords
 @property  BOOL hasSyncContinuationToken
 @property  NSData *syncContinuationToken
 @property  BOOL hasClientChangeToken
 @property  NSData *clientChangeToken
 @property  BOOL hasStatus
 @property  int status
 @property  NSMutableArray *changedShares
 @property  BOOL hasPendingArchivedRecords
 @property  BOOL pendingArchivedRecords

  // class methods
  +[CKDPRecordRetrieveChangesResponse changedRecordType]
  +[CKDPRecordRetrieveChangesResponse changedShareType]

  // instance methods
  -[CKDPRecordRetrieveChangesResponse isEqual:]
  -[CKDPRecordRetrieveChangesResponse copyWithZone:]
  -[CKDPRecordRetrieveChangesResponse .cxx_destruct]
  -[CKDPRecordRetrieveChangesResponse dictionaryRepresentation]
  -[CKDPRecordRetrieveChangesResponse status]
  -[CKDPRecordRetrieveChangesResponse writeTo:]
  -[CKDPRecordRetrieveChangesResponse mergeFrom:]
  -[CKDPRecordRetrieveChangesResponse readFrom:]
  -[CKDPRecordRetrieveChangesResponse copyTo:]
  -[CKDPRecordRetrieveChangesResponse setStatus:]
  -[CKDPRecordRetrieveChangesResponse statusAsString:]
  -[CKDPRecordRetrieveChangesResponse StringAsStatus:]
  -[CKDPRecordRetrieveChangesResponse clientChangeToken]
  -[CKDPRecordRetrieveChangesResponse setClientChangeToken:]
  -[CKDPRecordRetrieveChangesResponse setHasStatus:]
  -[CKDPRecordRetrieveChangesResponse hasStatus]
  -[CKDPRecordRetrieveChangesResponse changedRecords]
  -[CKDPRecordRetrieveChangesResponse addChangedRecord:]
  -[CKDPRecordRetrieveChangesResponse hasClientChangeToken]
  -[CKDPRecordRetrieveChangesResponse addChangedShare:]
  -[CKDPRecordRetrieveChangesResponse changedRecordsCount]
  -[CKDPRecordRetrieveChangesResponse clearChangedRecords]
  -[CKDPRecordRetrieveChangesResponse changedRecordAtIndex:]
  -[CKDPRecordRetrieveChangesResponse setSyncContinuationToken:]
  -[CKDPRecordRetrieveChangesResponse changedSharesCount]
  -[CKDPRecordRetrieveChangesResponse clearChangedShares]
  -[CKDPRecordRetrieveChangesResponse changedShareAtIndex:]
  -[CKDPRecordRetrieveChangesResponse hasSyncContinuationToken]
  -[CKDPRecordRetrieveChangesResponse setPendingArchivedRecords:]
  -[CKDPRecordRetrieveChangesResponse setHasPendingArchivedRecords:]
  -[CKDPRecordRetrieveChangesResponse hasPendingArchivedRecords]
  -[CKDPRecordRetrieveChangesResponse setChangedRecords:]
  -[CKDPRecordRetrieveChangesResponse syncContinuationToken]
  -[CKDPRecordRetrieveChangesResponse changedShares]
  -[CKDPRecordRetrieveChangesResponse setChangedShares:]
  -[CKDPRecordRetrieveChangesResponse pendingArchivedRecords]


CKPackageManifest : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CKPackageManifest readContentsOfFile:intoPackage:error:]
  +[CKPackageManifest writePackage:toFile:error:]
  +[CKPackageManifest packageInClientWithBasePath:contentsOfFile:error:]


CKCDPErrorUserInfoEntry : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasKey
 @property  NSString *key
 @property  BOOL hasValue
 @property  CKCDPErrorUserInfoValue *value

  // instance methods
  -[CKCDPErrorUserInfoEntry isEqual:]
  -[CKCDPErrorUserInfoEntry copyWithZone:]
  -[CKCDPErrorUserInfoEntry key]
  -[CKCDPErrorUserInfoEntry .cxx_destruct]
  -[CKCDPErrorUserInfoEntry value]
  -[CKCDPErrorUserInfoEntry setValue:]
  -[CKCDPErrorUserInfoEntry dictionaryRepresentation]
  -[CKCDPErrorUserInfoEntry setKey:]
  -[CKCDPErrorUserInfoEntry writeTo:]
  -[CKCDPErrorUserInfoEntry mergeFrom:]
  -[CKCDPErrorUserInfoEntry readFrom:]
  -[CKCDPErrorUserInfoEntry copyTo:]
  -[CKCDPErrorUserInfoEntry hasKey]
  -[CKCDPErrorUserInfoEntry hasValue]


CKDPlaceholderOperation : NSOperation /System/Library/Frameworks/Security.framework/Security
 @property  NSDate *startDate
 @property  CKDOperation *realOperation
 @property  NSOperationQueue *targetOperationQueue
 @property  BOOL isExecuting
 @property  BOOL isFinished
 @property  NSString *operationID
 @property  CKDClientProxy *proxy
 @property  CKDClientContext *context

  // instance methods
  -[CKDPlaceholderOperation .cxx_destruct]
  -[CKDPlaceholderOperation cancel]
  -[CKDPlaceholderOperation start]
  -[CKDPlaceholderOperation main]
  -[CKDPlaceholderOperation startDate]
  -[CKDPlaceholderOperation isFinished]
  -[CKDPlaceholderOperation isExecuting]
  -[CKDPlaceholderOperation isConcurrent]
  -[CKDPlaceholderOperation context]
  -[CKDPlaceholderOperation setStartDate:]
  -[CKDPlaceholderOperation proxy]
  -[CKDPlaceholderOperation setIsFinished:]
  -[CKDPlaceholderOperation operationID]
  -[CKDPlaceholderOperation ckShortDescription]
  -[CKDPlaceholderOperation CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKDPlaceholderOperation setIsExecuting:]
  -[CKDPlaceholderOperation _setIsExecuting:]
  -[CKDPlaceholderOperation _setIsFinished:]
  -[CKDPlaceholderOperation initWithOperation:targetOperationQueue:]
  -[CKDPlaceholderOperation statusReportWithIndent:]
  -[CKDPlaceholderOperation _runDurationString]
  -[CKDPlaceholderOperation _startDateString]
  -[CKDPlaceholderOperation realOperation]
  -[CKDPlaceholderOperation targetOperationQueue]


CKDFetchRecordZonePCSDiagnosticsOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics <NSSecureCoding>
 @property  NSArray *recordZoneIDs

  // instance methods
  -[CKDFetchRecordZonePCSDiagnosticsOperationInfo .cxx_destruct]
  -[CKDFetchRecordZonePCSDiagnosticsOperationInfo recordZoneIDs]
  -[CKDFetchRecordZonePCSDiagnosticsOperationInfo setRecordZoneIDs:]


CKDFetchRecordZonePCSDiagnosticsOperation : CKDDatabaseOperation
 @property  NSString *identityStatus
 @property  NSDictionary *invalidPCSByZoneID
 @property  NSDictionary *validPCSByZoneID
 @property  NSArray *recordZoneIDs
 @property  CKPCSDiagnosticInformation *pcsDiagnosticInfo

  // instance methods
  -[CKDFetchRecordZonePCSDiagnosticsOperation .cxx_destruct]
  -[CKDFetchRecordZonePCSDiagnosticsOperation main]
  -[CKDFetchRecordZonePCSDiagnosticsOperation activityCreate]
  -[CKDFetchRecordZonePCSDiagnosticsOperation recordZoneIDs]
  -[CKDFetchRecordZonePCSDiagnosticsOperation setRecordZoneIDs:]
  -[CKDFetchRecordZonePCSDiagnosticsOperation initWithOperationInfo:clientContext:]
  -[CKDFetchRecordZonePCSDiagnosticsOperation pcsDiagnosticInfo]
  -[CKDFetchRecordZonePCSDiagnosticsOperation _handleRecordZoneFetch:zoneID:responseCode:]
  -[CKDFetchRecordZonePCSDiagnosticsOperation identityStatus]
  -[CKDFetchRecordZonePCSDiagnosticsOperation setIdentityStatus:]
  -[CKDFetchRecordZonePCSDiagnosticsOperation invalidPCSByZoneID]
  -[CKDFetchRecordZonePCSDiagnosticsOperation setInvalidPCSByZoneID:]
  -[CKDFetchRecordZonePCSDiagnosticsOperation validPCSByZoneID]
  -[CKDFetchRecordZonePCSDiagnosticsOperation setValidPCSByZoneID:]
  -[CKDFetchRecordZonePCSDiagnosticsOperation setPcsDiagnosticInfo:]


CKLEventFilter : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  unsigned long logTypes
 @property  NSDictionary *categoriesBySubsystem
 @property  NSString *processName
 @property  BOOL simulatorMessagesOnly

  // instance methods
  -[CKLEventFilter .cxx_destruct]
  -[CKLEventFilter processName]
  -[CKLEventFilter setProcessName:]
  -[CKLEventFilter initWithLogTypes:]
  -[CKLEventFilter setSimulatorMessagesOnly:]
  -[CKLEventFilter simulatorMessagesOnly]
  -[CKLEventFilter matchesEvent:]
  -[CKLEventFilter logTypes]
  -[CKLEventFilter hasLogType:]
  -[CKLEventFilter hasOnlyLogType:]
  -[CKLEventFilter _initFilterDict]
  -[CKLEventFilter setLogTypes:]
  -[CKLEventFilter categoriesBySubsystem]
  -[CKLEventFilter setCategoriesBySubsystem:]


CKLStatusFilter : CKLEventFilter
  // instance methods
  -[CKLStatusFilter matchesEvent:]


CKDPAssetUploadTokenRetrieveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasType
 @property  CKDPRecordType *type
 @property  BOOL hasField
 @property  CKDPRecordFieldIdentifier *field
 @property  NSMutableArray *assets
 @property  NSMutableArray *uploads
 @property  NSMutableArray *contentRequestHeaders
 @property  BOOL hasAuthPutRequest
 @property  NSData *authPutRequest
 @property  BOOL hasAuthPutType
 @property  int authPutType

  // class methods
  +[CKDPAssetUploadTokenRetrieveRequest options]
  +[CKDPAssetUploadTokenRetrieveRequest assetsType]
  +[CKDPAssetUploadTokenRetrieveRequest contentRequestHeadersType]
  +[CKDPAssetUploadTokenRetrieveRequest uploadsType]

  // instance methods
  -[CKDPAssetUploadTokenRetrieveRequest isEqual:]
  -[CKDPAssetUploadTokenRetrieveRequest copyWithZone:]
  -[CKDPAssetUploadTokenRetrieveRequest type]
  -[CKDPAssetUploadTokenRetrieveRequest setType:]
  -[CKDPAssetUploadTokenRetrieveRequest .cxx_destruct]
  -[CKDPAssetUploadTokenRetrieveRequest dictionaryRepresentation]
  -[CKDPAssetUploadTokenRetrieveRequest writeTo:]
  -[CKDPAssetUploadTokenRetrieveRequest mergeFrom:]
  -[CKDPAssetUploadTokenRetrieveRequest readFrom:]
  -[CKDPAssetUploadTokenRetrieveRequest copyTo:]
  -[CKDPAssetUploadTokenRetrieveRequest requestTypeCode]
  -[CKDPAssetUploadTokenRetrieveRequest responseClass]
  -[CKDPAssetUploadTokenRetrieveRequest field]
  -[CKDPAssetUploadTokenRetrieveRequest assets]
  -[CKDPAssetUploadTokenRetrieveRequest setAssets:]
  -[CKDPAssetUploadTokenRetrieveRequest setField:]
  -[CKDPAssetUploadTokenRetrieveRequest hasType]
  -[CKDPAssetUploadTokenRetrieveRequest hasField]
  -[CKDPAssetUploadTokenRetrieveRequest assetsCount]
  -[CKDPAssetUploadTokenRetrieveRequest addAssets:]
  -[CKDPAssetUploadTokenRetrieveRequest clearAssets]
  -[CKDPAssetUploadTokenRetrieveRequest assetsAtIndex:]
  -[CKDPAssetUploadTokenRetrieveRequest setContentRequestHeaders:]
  -[CKDPAssetUploadTokenRetrieveRequest contentRequestHeaders]
  -[CKDPAssetUploadTokenRetrieveRequest setUploads:]
  -[CKDPAssetUploadTokenRetrieveRequest authPutRequest]
  -[CKDPAssetUploadTokenRetrieveRequest setAuthPutRequest:]
  -[CKDPAssetUploadTokenRetrieveRequest setAuthPutType:]
  -[CKDPAssetUploadTokenRetrieveRequest addContentRequestHeaders:]
  -[CKDPAssetUploadTokenRetrieveRequest contentRequestHeadersCount]
  -[CKDPAssetUploadTokenRetrieveRequest clearContentRequestHeaders]
  -[CKDPAssetUploadTokenRetrieveRequest contentRequestHeadersAtIndex:]
  -[CKDPAssetUploadTokenRetrieveRequest addUploads:]
  -[CKDPAssetUploadTokenRetrieveRequest uploadsCount]
  -[CKDPAssetUploadTokenRetrieveRequest clearUploads]
  -[CKDPAssetUploadTokenRetrieveRequest uploadsAtIndex:]
  -[CKDPAssetUploadTokenRetrieveRequest hasAuthPutRequest]
  -[CKDPAssetUploadTokenRetrieveRequest authPutType]
  -[CKDPAssetUploadTokenRetrieveRequest setHasAuthPutType:]
  -[CKDPAssetUploadTokenRetrieveRequest hasAuthPutType]
  -[CKDPAssetUploadTokenRetrieveRequest authPutTypeAsString:]
  -[CKDPAssetUploadTokenRetrieveRequest StringAsAuthPutType:]
  -[CKDPAssetUploadTokenRetrieveRequest uploads]


CKDServerConfigurationManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDSystemAvailabilityWatcher>
 @property  NSOperationQueue *configurationQueue
 @property  CKDServerConfiguration *globalConfiguration
 @property  NSMutableSet *globalConfigurationOps
 @property  NSOperationQueue *containerSpecificInfoQueue
 @property  NSMutableDictionary *containerSpecificInfos
 @property  NSMutableDictionary *containerSpecificInfoOperations
 @property  NSObject<OS_dispatch_queue> *propertyQueue
 @property  int iCloudEnvNotifToken
 @property  BOOL shouldDropAllConfigurations
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDServerConfigurationManager sharedManager]

  // instance methods
  -[CKDServerConfigurationManager init]
  -[CKDServerConfigurationManager dealloc]
  -[CKDServerConfigurationManager .cxx_destruct]
  -[CKDServerConfigurationManager propertyQueue]
  -[CKDServerConfigurationManager CKStatusReportArray]
  -[CKDServerConfigurationManager setGlobalConfiguration:]
  -[CKDServerConfigurationManager globalConfiguration]
  -[CKDServerConfigurationManager configurationQueue]
  -[CKDServerConfigurationManager setPropertyQueue:]
  -[CKDServerConfigurationManager expireGlobalConfiguration]
  -[CKDServerConfigurationManager expireConfigurationForContextInfoProvider:accountInfoProvider:]
  -[CKDServerConfigurationManager systemAvailabilityChanged:]
  -[CKDServerConfigurationManager configurationForOperation:completionHandler:]
  -[CKDServerConfigurationManager containerInfoForOperation:requireUserIDs:completionHandler:]
  -[CKDServerConfigurationManager shouldDropAllConfigurations]
  -[CKDServerConfigurationManager _reallyDropAllConfigurations]
  -[CKDServerConfigurationManager _behaviorOptionsChanged:]
  -[CKDServerConfigurationManager _dropAllConfigurations]
  -[CKDServerConfigurationManager globalConfigurationOps]
  -[CKDServerConfigurationManager _uniqueStringForContext:account:]
  -[CKDServerConfigurationManager containerSpecificInfoOperations]
  -[CKDServerConfigurationManager containerSpecificInfoQueue]
  -[CKDServerConfigurationManager containerSpecificInfos]
  -[CKDServerConfigurationManager _fetchGlobalConfigForOperation:completionHandler:]
  -[CKDServerConfigurationManager _fetchContainerSpecificInfoForOperation:requireUserIDs:completionHandler:]
  -[CKDServerConfigurationManager setShouldDropAllConfigurations:]
  -[CKDServerConfigurationManager _writeOutiCloudHostnames:]
  -[CKDServerConfigurationManager setConfigurationQueue:]
  -[CKDServerConfigurationManager setGlobalConfigurationOps:]
  -[CKDServerConfigurationManager setContainerSpecificInfoQueue:]
  -[CKDServerConfigurationManager setContainerSpecificInfos:]
  -[CKDServerConfigurationManager setContainerSpecificInfoOperations:]
  -[CKDServerConfigurationManager iCloudEnvNotifToken]
  -[CKDServerConfigurationManager setICloudEnvNotifToken:]


CKDPQueryRetrieveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *queryResults
 @property  BOOL hasContinuationMarker
 @property  NSData *continuationMarker

  // class methods
  +[CKDPQueryRetrieveResponse queryResultsType]

  // instance methods
  -[CKDPQueryRetrieveResponse isEqual:]
  -[CKDPQueryRetrieveResponse copyWithZone:]
  -[CKDPQueryRetrieveResponse .cxx_destruct]
  -[CKDPQueryRetrieveResponse dictionaryRepresentation]
  -[CKDPQueryRetrieveResponse writeTo:]
  -[CKDPQueryRetrieveResponse mergeFrom:]
  -[CKDPQueryRetrieveResponse readFrom:]
  -[CKDPQueryRetrieveResponse copyTo:]
  -[CKDPQueryRetrieveResponse setQueryResults:]
  -[CKDPQueryRetrieveResponse setContinuationMarker:]
  -[CKDPQueryRetrieveResponse addQueryResults:]
  -[CKDPQueryRetrieveResponse queryResultsCount]
  -[CKDPQueryRetrieveResponse clearQueryResults]
  -[CKDPQueryRetrieveResponse queryResultsAtIndex:]
  -[CKDPQueryRetrieveResponse hasContinuationMarker]
  -[CKDPQueryRetrieveResponse queryResults]
  -[CKDPQueryRetrieveResponse continuationMarker]


CKDPowerAssertionObserver : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMapTable *operationsHoldingPowerAssertionsByID

  // class methods
  +[CKDPowerAssertionObserver sharedObserver]

  // instance methods
  -[CKDPowerAssertionObserver init]
  -[CKDPowerAssertionObserver .cxx_destruct]
  -[CKDPowerAssertionObserver _init]
  -[CKDPowerAssertionObserver CKStatusReportArray]
  -[CKDPowerAssertionObserver operationDidReleasePowerAssertion:]
  -[CKDPowerAssertionObserver operationDidAcquirePowerAssertion:]
  -[CKDPowerAssertionObserver operationsHoldingPowerAssertionsByID]
  -[CKDPowerAssertionObserver setOperationsHoldingPowerAssertionsByID:]


CKDPContactInformation : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasEmailAddress
 @property  NSString *emailAddress
 @property  BOOL hasContainerScopedUserId
 @property  NSString *containerScopedUserId
 @property  BOOL hasFirstName
 @property  NSString *firstName
 @property  BOOL hasLastName
 @property  NSString *lastName
 @property  BOOL hasPhoneNumber
 @property  NSString *phoneNumber

  // instance methods
  -[CKDPContactInformation isEqual:]
  -[CKDPContactInformation copyWithZone:]
  -[CKDPContactInformation .cxx_destruct]
  -[CKDPContactInformation dictionaryRepresentation]
  -[CKDPContactInformation phoneNumber]
  -[CKDPContactInformation writeTo:]
  -[CKDPContactInformation mergeFrom:]
  -[CKDPContactInformation readFrom:]
  -[CKDPContactInformation copyTo:]
  -[CKDPContactInformation setPhoneNumber:]
  -[CKDPContactInformation emailAddress]
  -[CKDPContactInformation setEmailAddress:]
  -[CKDPContactInformation firstName]
  -[CKDPContactInformation lastName]
  -[CKDPContactInformation hasPhoneNumber]
  -[CKDPContactInformation setFirstName:]
  -[CKDPContactInformation setLastName:]
  -[CKDPContactInformation hasFirstName]
  -[CKDPContactInformation hasLastName]
  -[CKDPContactInformation hasEmailAddress]
  -[CKDPContactInformation setContainerScopedUserId:]
  -[CKDPContactInformation hasContainerScopedUserId]
  -[CKDPContactInformation containerScopedUserId]


CKDPUserAvailableQuotaRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // class methods
  +[CKDPUserAvailableQuotaRequest options]

  // instance methods
  -[CKDPUserAvailableQuotaRequest isEqual:]
  -[CKDPUserAvailableQuotaRequest copyWithZone:]
  -[CKDPUserAvailableQuotaRequest dictionaryRepresentation]
  -[CKDPUserAvailableQuotaRequest writeTo:]
  -[CKDPUserAvailableQuotaRequest mergeFrom:]
  -[CKDPUserAvailableQuotaRequest readFrom:]
  -[CKDPUserAvailableQuotaRequest copyTo:]
  -[CKDPUserAvailableQuotaRequest requestTypeCode]
  -[CKDPUserAvailableQuotaRequest responseClass]


CKDPMarkAssetBrokenRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasBrokenAssetRecordID
 @property  CKDPRecordIdentifier *brokenAssetRecordID
 @property  BOOL hasFieldName
 @property  NSString *fieldName
 @property  BOOL hasListIndex
 @property  int listIndex
 @property  NSMutableArray *fileSignatures
 @property  NSMutableArray *referenceSignatures
 @property  BOOL hasIsPackage
 @property  BOOL isPackage
 @property  BOOL hasAffectedRecordType
 @property  NSString *affectedRecordType
 @property  BOOL hasSkipWriteMissingAssetStatusRecord
 @property  BOOL skipWriteMissingAssetStatusRecord

  // class methods
  +[CKDPMarkAssetBrokenRequest options]
  +[CKDPMarkAssetBrokenRequest fileSignatureType]
  +[CKDPMarkAssetBrokenRequest referenceSignatureType]

  // instance methods
  -[CKDPMarkAssetBrokenRequest isEqual:]
  -[CKDPMarkAssetBrokenRequest copyWithZone:]
  -[CKDPMarkAssetBrokenRequest .cxx_destruct]
  -[CKDPMarkAssetBrokenRequest dictionaryRepresentation]
  -[CKDPMarkAssetBrokenRequest isPackage]
  -[CKDPMarkAssetBrokenRequest writeTo:]
  -[CKDPMarkAssetBrokenRequest mergeFrom:]
  -[CKDPMarkAssetBrokenRequest readFrom:]
  -[CKDPMarkAssetBrokenRequest copyTo:]
  -[CKDPMarkAssetBrokenRequest fieldName]
  -[CKDPMarkAssetBrokenRequest listIndex]
  -[CKDPMarkAssetBrokenRequest setListIndex:]
  -[CKDPMarkAssetBrokenRequest fileSignatures]
  -[CKDPMarkAssetBrokenRequest referenceSignatures]
  -[CKDPMarkAssetBrokenRequest setFieldName:]
  -[CKDPMarkAssetBrokenRequest hasFieldName]
  -[CKDPMarkAssetBrokenRequest setIsPackage:]
  -[CKDPMarkAssetBrokenRequest addFileSignature:]
  -[CKDPMarkAssetBrokenRequest addReferenceSignature:]
  -[CKDPMarkAssetBrokenRequest setBrokenAssetRecordID:]
  -[CKDPMarkAssetBrokenRequest fileSignaturesCount]
  -[CKDPMarkAssetBrokenRequest clearFileSignatures]
  -[CKDPMarkAssetBrokenRequest fileSignatureAtIndex:]
  -[CKDPMarkAssetBrokenRequest referenceSignaturesCount]
  -[CKDPMarkAssetBrokenRequest clearReferenceSignatures]
  -[CKDPMarkAssetBrokenRequest referenceSignatureAtIndex:]
  -[CKDPMarkAssetBrokenRequest setAffectedRecordType:]
  -[CKDPMarkAssetBrokenRequest hasBrokenAssetRecordID]
  -[CKDPMarkAssetBrokenRequest setHasListIndex:]
  -[CKDPMarkAssetBrokenRequest hasListIndex]
  -[CKDPMarkAssetBrokenRequest setHasIsPackage:]
  -[CKDPMarkAssetBrokenRequest hasIsPackage]
  -[CKDPMarkAssetBrokenRequest hasAffectedRecordType]
  -[CKDPMarkAssetBrokenRequest setSkipWriteMissingAssetStatusRecord:]
  -[CKDPMarkAssetBrokenRequest setHasSkipWriteMissingAssetStatusRecord:]
  -[CKDPMarkAssetBrokenRequest hasSkipWriteMissingAssetStatusRecord]
  -[CKDPMarkAssetBrokenRequest brokenAssetRecordID]
  -[CKDPMarkAssetBrokenRequest setFileSignatures:]
  -[CKDPMarkAssetBrokenRequest setReferenceSignatures:]
  -[CKDPMarkAssetBrokenRequest affectedRecordType]
  -[CKDPMarkAssetBrokenRequest skipWriteMissingAssetStatusRecord]


CKDAggregateZonePCSOperation : CKDDatabaseOperation
 @property  NSArray *sourceZoneIDs
 @property  CKRecordZone *targetZone
 @property  NSMutableDictionary *zonePCSDataByZoneID
 @property  BOOL isHandlingPCSOplockFailure
 @property  long long numZoneSaveAttempts
 @property  long long maxZoneSaveAttempts

  // instance methods
  -[CKDAggregateZonePCSOperation .cxx_destruct]
  -[CKDAggregateZonePCSOperation main]
  -[CKDAggregateZonePCSOperation activityCreate]
  -[CKDAggregateZonePCSOperation maxZoneSaveAttempts]
  -[CKDAggregateZonePCSOperation setMaxZoneSaveAttempts:]
  -[CKDAggregateZonePCSOperation sourceZoneIDs]
  -[CKDAggregateZonePCSOperation setSourceZoneIDs:]
  -[CKDAggregateZonePCSOperation targetZone]
  -[CKDAggregateZonePCSOperation setTargetZone:]
  -[CKDAggregateZonePCSOperation initWithOperationInfo:clientContext:]
  -[CKDAggregateZonePCSOperation nameForState:]
  -[CKDAggregateZonePCSOperation makeStateTransition]
  -[CKDAggregateZonePCSOperation numZoneSaveAttempts]
  -[CKDAggregateZonePCSOperation setNumZoneSaveAttempts:]
  -[CKDAggregateZonePCSOperation _fetchZonePCS]
  -[CKDAggregateZonePCSOperation _prepareTargetZonePCS]
  -[CKDAggregateZonePCSOperation _saveTargetZone]
  -[CKDAggregateZonePCSOperation isHandlingPCSOplockFailure]
  -[CKDAggregateZonePCSOperation _setPermanentOplockFailure]
  -[CKDAggregateZonePCSOperation _fetchPCSDataForZoneID:]
  -[CKDAggregateZonePCSOperation zonePCSDataByZoneID]
  -[CKDAggregateZonePCSOperation _handleZoneSavedWithID:responseCode:]
  -[CKDAggregateZonePCSOperation setIsHandlingPCSOplockFailure:]
  -[CKDAggregateZonePCSOperation setZonePCSDataByZoneID:]


CKDRecordResponse : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKRecordID *recordID
 @property  NSString *etag
 @property  CKRecord *record

  // instance methods
  -[CKDRecordResponse .cxx_destruct]
  -[CKDRecordResponse etag]
  -[CKDRecordResponse recordID]
  -[CKDRecordResponse setRecordID:]
  -[CKDRecordResponse setEtag:]
  -[CKDRecordResponse CKPropertiesDescription]
  -[CKDRecordResponse record]
  -[CKDRecordResponse setRecord:]


CKDDiscoverUserIdentitiesURLRequest : CKDURLRequest
 @property  NSArray *infosToDiscover
 @property  NSMutableDictionary *submittedInfos
 @property  BOOL wantsProtectionInfo
 @property  @? progressBlock

  // instance methods
  -[CKDDiscoverUserIdentitiesURLRequest .cxx_destruct]
  -[CKDDiscoverUserIdentitiesURLRequest progressBlock]
  -[CKDDiscoverUserIdentitiesURLRequest operationType]
  -[CKDDiscoverUserIdentitiesURLRequest setProgressBlock:]
  -[CKDDiscoverUserIdentitiesURLRequest databaseScope]
  -[CKDDiscoverUserIdentitiesURLRequest generateRequestOperations]
  -[CKDDiscoverUserIdentitiesURLRequest requestDidParseProtobufObject:]
  -[CKDDiscoverUserIdentitiesURLRequest requestDidParseNodeFailure:]
  -[CKDDiscoverUserIdentitiesURLRequest requestOperationClasses]
  -[CKDDiscoverUserIdentitiesURLRequest initWithLookupInfos:]
  -[CKDDiscoverUserIdentitiesURLRequest infosToDiscover]
  -[CKDDiscoverUserIdentitiesURLRequest wantsProtectionInfo]
  -[CKDDiscoverUserIdentitiesURLRequest setWantsProtectionInfo:]
  -[CKDDiscoverUserIdentitiesURLRequest setInfosToDiscover:]
  -[CKDDiscoverUserIdentitiesURLRequest submittedInfos]
  -[CKDDiscoverUserIdentitiesURLRequest setSubmittedInfos:]


CKDGlobalConfigurationURLRequest : CKDURLRequest
 @property  CKDServerConfiguration *configuration

  // instance methods
  -[CKDGlobalConfigurationURLRequest .cxx_destruct]
  -[CKDGlobalConfigurationURLRequest url]
  -[CKDGlobalConfigurationURLRequest setConfiguration:]
  -[CKDGlobalConfigurationURLRequest configuration]
  -[CKDGlobalConfigurationURLRequest partitionType]
  -[CKDGlobalConfigurationURLRequest httpMethod]
  -[CKDGlobalConfigurationURLRequest additionalHeaderValues]
  -[CKDGlobalConfigurationURLRequest requestDidParsePlistObject:]
  -[CKDGlobalConfigurationURLRequest serverType]
  -[CKDGlobalConfigurationURLRequest allowsAnonymousAccount]
  -[CKDGlobalConfigurationURLRequest requiresConfiguration]
  -[CKDGlobalConfigurationURLRequest requiresDeviceID]
  -[CKDGlobalConfigurationURLRequest hasRequestBody]


CKCDPStopContainerRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasContainerName
 @property  NSString *containerName
 @property  BOOL hasEnvironment
 @property  NSString *environment

  // instance methods
  -[CKCDPStopContainerRequest isEqual:]
  -[CKCDPStopContainerRequest copyWithZone:]
  -[CKCDPStopContainerRequest .cxx_destruct]
  -[CKCDPStopContainerRequest dictionaryRepresentation]
  -[CKCDPStopContainerRequest environment]
  -[CKCDPStopContainerRequest setEnvironment:]
  -[CKCDPStopContainerRequest containerName]
  -[CKCDPStopContainerRequest setContainerName:]
  -[CKCDPStopContainerRequest writeTo:]
  -[CKCDPStopContainerRequest mergeFrom:]
  -[CKCDPStopContainerRequest readFrom:]
  -[CKCDPStopContainerRequest copyTo:]
  -[CKCDPStopContainerRequest hasEnvironment]
  -[CKCDPStopContainerRequest hasContainerName]


CKDFetchWebAuthTokenURLRequest : CKDURLRequest
 @property  NSString *APIToken
 @property  @? tokenFetchedBlock

  // instance methods
  -[CKDFetchWebAuthTokenURLRequest .cxx_destruct]
  -[CKDFetchWebAuthTokenURLRequest operationType]
  -[CKDFetchWebAuthTokenURLRequest APIToken]
  -[CKDFetchWebAuthTokenURLRequest setAPIToken:]
  -[CKDFetchWebAuthTokenURLRequest generateRequestOperations]
  -[CKDFetchWebAuthTokenURLRequest requestDidParseProtobufObject:]
  -[CKDFetchWebAuthTokenURLRequest requestDidParseNodeFailure:]
  -[CKDFetchWebAuthTokenURLRequest requestOperationClasses]
  -[CKDFetchWebAuthTokenURLRequest setTokenFetchedBlock:]
  -[CKDFetchWebAuthTokenURLRequest tokenFetchedBlock]


CKDPAsset : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasOwner
 @property  NSString *owner
 @property  BOOL hasSignature
 @property  NSData *signature
 @property  BOOL hasSize
 @property  long long size
 @property  BOOL hasDownloadToken
 @property  NSString *downloadToken
 @property  BOOL hasDownloadRequest
 @property  NSData *downloadRequest
 @property  BOOL hasContentBaseURL
 @property  NSString *contentBaseURL
 @property  BOOL hasRequestor
 @property  NSString *requestor
 @property  BOOL hasRecordId
 @property  CKDPRecordIdentifier *recordId
 @property  BOOL hasUploadReceipt
 @property  NSString *uploadReceipt
 @property  BOOL hasDownloadBaseURL
 @property  NSString *downloadBaseURL
 @property  BOOL hasDownloadURLExpiration
 @property  long long downloadURLExpiration
 @property  BOOL hasProtectionInfo
 @property  CKDPProtectionInfo *protectionInfo
 @property  BOOL hasReferenceSignature
 @property  NSData *referenceSignature
 @property  BOOL hasDownloadTokenExpiration
 @property  long long downloadTokenExpiration
 @property  BOOL hasClearAssetKey
 @property  NSData *clearAssetKey
 @property  BOOL hasAssetAuthorizationResponseUUID
 @property  NSString *assetAuthorizationResponseUUID
 @property  BOOL hasConstructedAssetDownloadURL
 @property  NSString *constructedAssetDownloadURL
 @property  BOOL hasConstructedAssetDownloadURLExpiration
 @property  long long constructedAssetDownloadURLExpiration
 @property  BOOL hasConstructedAssetDownloadEstimatedSize
 @property  long long constructedAssetDownloadEstimatedSize

  // instance methods
  -[CKDPAsset isEqual:]
  -[CKDPAsset copyWithZone:]
  -[CKDPAsset .cxx_destruct]
  -[CKDPAsset size]
  -[CKDPAsset setOwner:]
  -[CKDPAsset dictionaryRepresentation]
  -[CKDPAsset owner]
  -[CKDPAsset writeTo:]
  -[CKDPAsset setSize:]
  -[CKDPAsset mergeFrom:]
  -[CKDPAsset readFrom:]
  -[CKDPAsset copyTo:]
  -[CKDPAsset signature]
  -[CKDPAsset downloadToken]
  -[CKDPAsset referenceSignature]
  -[CKDPAsset setReferenceSignature:]
  -[CKDPAsset contentBaseURL]
  -[CKDPAsset requestor]
  -[CKDPAsset downloadTokenExpiration]
  -[CKDPAsset setDownloadToken:]
  -[CKDPAsset setDownloadTokenExpiration:]
  -[CKDPAsset clearAssetKey]
  -[CKDPAsset setContentBaseURL:]
  -[CKDPAsset setRequestor:]
  -[CKDPAsset hasSize]
  -[CKDPAsset uploadReceipt]
  -[CKDPAsset downloadURLExpiration]
  -[CKDPAsset downloadBaseURL]
  -[CKDPAsset setDownloadBaseURL:]
  -[CKDPAsset constructedAssetDownloadURL]
  -[CKDPAsset setConstructedAssetDownloadURL:]
  -[CKDPAsset setSignature:]
  -[CKDPAsset setDownloadURLExpiration:]
  -[CKDPAsset setClearAssetKey:]
  -[CKDPAsset setUploadReceipt:]
  -[CKDPAsset setHasSize:]
  -[CKDPAsset protectionInfo]
  -[CKDPAsset setProtectionInfo:]
  -[CKDPAsset recordId]
  -[CKDPAsset hasSignature]
  -[CKDPAsset hasOwner]
  -[CKDPAsset setRecordId:]
  -[CKDPAsset hasProtectionInfo]
  -[CKDPAsset hasReferenceSignature]
  -[CKDPAsset hasUploadReceipt]
  -[CKDPAsset hasRecordId]
  -[CKDPAsset setDownloadRequest:]
  -[CKDPAsset setAssetAuthorizationResponseUUID:]
  -[CKDPAsset hasDownloadToken]
  -[CKDPAsset hasDownloadRequest]
  -[CKDPAsset hasContentBaseURL]
  -[CKDPAsset hasRequestor]
  -[CKDPAsset hasDownloadBaseURL]
  -[CKDPAsset setHasDownloadURLExpiration:]
  -[CKDPAsset hasDownloadURLExpiration]
  -[CKDPAsset setHasDownloadTokenExpiration:]
  -[CKDPAsset hasDownloadTokenExpiration]
  -[CKDPAsset hasClearAssetKey]
  -[CKDPAsset hasAssetAuthorizationResponseUUID]
  -[CKDPAsset hasConstructedAssetDownloadURL]
  -[CKDPAsset setConstructedAssetDownloadURLExpiration:]
  -[CKDPAsset setHasConstructedAssetDownloadURLExpiration:]
  -[CKDPAsset hasConstructedAssetDownloadURLExpiration]
  -[CKDPAsset setConstructedAssetDownloadEstimatedSize:]
  -[CKDPAsset setHasConstructedAssetDownloadEstimatedSize:]
  -[CKDPAsset hasConstructedAssetDownloadEstimatedSize]
  -[CKDPAsset downloadRequest]
  -[CKDPAsset assetAuthorizationResponseUUID]
  -[CKDPAsset constructedAssetDownloadURLExpiration]
  -[CKDPAsset constructedAssetDownloadEstimatedSize]


CKDPParticipant : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasParticipantId
 @property  CKDPIdentifier *participantId
 @property  BOOL hasUserId
 @property  CKDPIdentifier *userId
 @property  BOOL hasContactInformation
 @property  CKDPContactInformation *contactInformation
 @property  BOOL hasState
 @property  int state
 @property  BOOL hasParticipantType
 @property  int participantType
 @property  BOOL hasPermission
 @property  int permission
 @property  BOOL hasInviterId
 @property  CKDPIdentifier *inviterId
 @property  BOOL hasCreatedInProcess
 @property  BOOL createdInProcess
 @property  BOOL hasPublicKey
 @property  CKDPProtectionInfo *publicKey
 @property  BOOL hasAcceptTimestamp
 @property  long long acceptTimestamp
 @property  BOOL hasProtectionInfo
 @property  CKDPProtectionInfo *protectionInfo
 @property  BOOL hasOutOfNetworkPrivateKey
 @property  NSData *outOfNetworkPrivateKey
 @property  BOOL hasOutOfNetworkKeyType
 @property  int outOfNetworkKeyType
 @property  BOOL hasPublicKeyVersion
 @property  int publicKeyVersion
 @property  BOOL hasAcceptedInProcess
 @property  BOOL acceptedInProcess
 @property  BOOL hasIsInNetwork
 @property  BOOL isInNetwork
 @property  BOOL hasAcceptedTimestampDate
 @property  CKDPDate *acceptedTimestampDate
 @property  BOOL hasIsOrgUser
 @property  BOOL isOrgUser
 @property  BOOL hasProtectionInfoPublicKey
 @property  NSData *protectionInfoPublicKey
 @property  BOOL hasKeyHealth
 @property  int keyHealth
 @property  BOOL hasInviteTimestampDate
 @property  CKDPDate *inviteTimestampDate

  // instance methods
  -[CKDPParticipant isEqual:]
  -[CKDPParticipant copyWithZone:]
  -[CKDPParticipant .cxx_destruct]
  -[CKDPParticipant dictionaryRepresentation]
  -[CKDPParticipant state]
  -[CKDPParticipant setState:]
  -[CKDPParticipant publicKey]
  -[CKDPParticipant writeTo:]
  -[CKDPParticipant mergeFrom:]
  -[CKDPParticipant readFrom:]
  -[CKDPParticipant copyTo:]
  -[CKDPParticipant outOfNetworkPrivateKey]
  -[CKDPParticipant setOutOfNetworkPrivateKey:]
  -[CKDPParticipant publicKeyVersion]
  -[CKDPParticipant setPublicKeyVersion:]
  -[CKDPParticipant permission]
  -[CKDPParticipant setPermission:]
  -[CKDPParticipant protectionInfo]
  -[CKDPParticipant setProtectionInfo:]
  -[CKDPParticipant protectionInfoPublicKey]
  -[CKDPParticipant setProtectionInfoPublicKey:]
  -[CKDPParticipant createdInProcess]
  -[CKDPParticipant acceptedInProcess]
  -[CKDPParticipant setCreatedInProcess:]
  -[CKDPParticipant setAcceptedInProcess:]
  -[CKDPParticipant participantType]
  -[CKDPParticipant setPublicKey:]
  -[CKDPParticipant hasState]
  -[CKDPParticipant stateAsString:]
  -[CKDPParticipant StringAsState:]
  -[CKDPParticipant setHasState:]
  -[CKDPParticipant setParticipantType:]
  -[CKDPParticipant userId]
  -[CKDPParticipant setUserId:]
  -[CKDPParticipant hasUserId]
  -[CKDPParticipant hasProtectionInfo]
  -[CKDPParticipant setParticipantId:]
  -[CKDPParticipant hasParticipantType]
  -[CKDPParticipant hasPublicKey]
  -[CKDPParticipant hasParticipantId]
  -[CKDPParticipant setHasPublicKeyVersion:]
  -[CKDPParticipant hasPublicKeyVersion]
  -[CKDPParticipant setHasAcceptedInProcess:]
  -[CKDPParticipant hasAcceptedInProcess]
  -[CKDPParticipant participantId]
  -[CKDPParticipant setHasPermission:]
  -[CKDPParticipant hasPermission]
  -[CKDPParticipant permissionAsString:]
  -[CKDPParticipant StringAsPermission:]
  -[CKDPParticipant _participantTypeCKLogValue]
  -[CKDPParticipant _stateCKLogValue]
  -[CKDPParticipant _permissionCKLogValue]
  -[CKDPParticipant isInNetwork]
  -[CKDPParticipant setIsInNetwork:]
  -[CKDPParticipant setHasIsInNetwork:]
  -[CKDPParticipant hasIsInNetwork]
  -[CKDPParticipant setHasParticipantType:]
  -[CKDPParticipant participantTypeAsString:]
  -[CKDPParticipant StringAsParticipantType:]
  -[CKDPParticipant setContactInformation:]
  -[CKDPParticipant setInviterId:]
  -[CKDPParticipant setAcceptedTimestampDate:]
  -[CKDPParticipant setInviteTimestampDate:]
  -[CKDPParticipant hasContactInformation]
  -[CKDPParticipant hasInviterId]
  -[CKDPParticipant setHasCreatedInProcess:]
  -[CKDPParticipant hasCreatedInProcess]
  -[CKDPParticipant setAcceptTimestamp:]
  -[CKDPParticipant setHasAcceptTimestamp:]
  -[CKDPParticipant hasAcceptTimestamp]
  -[CKDPParticipant hasOutOfNetworkPrivateKey]
  -[CKDPParticipant setOutOfNetworkKeyType:]
  -[CKDPParticipant setHasOutOfNetworkKeyType:]
  -[CKDPParticipant hasOutOfNetworkKeyType]
  -[CKDPParticipant hasAcceptedTimestampDate]
  -[CKDPParticipant setIsOrgUser:]
  -[CKDPParticipant setHasIsOrgUser:]
  -[CKDPParticipant hasIsOrgUser]
  -[CKDPParticipant hasProtectionInfoPublicKey]
  -[CKDPParticipant keyHealth]
  -[CKDPParticipant setKeyHealth:]
  -[CKDPParticipant setHasKeyHealth:]
  -[CKDPParticipant hasKeyHealth]
  -[CKDPParticipant keyHealthAsString:]
  -[CKDPParticipant StringAsKeyHealth:]
  -[CKDPParticipant hasInviteTimestampDate]
  -[CKDPParticipant contactInformation]
  -[CKDPParticipant inviterId]
  -[CKDPParticipant acceptTimestamp]
  -[CKDPParticipant outOfNetworkKeyType]
  -[CKDPParticipant acceptedTimestampDate]
  -[CKDPParticipant isOrgUser]
  -[CKDPParticipant inviteTimestampDate]


CKDOperationInfoMetadata : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKOperationInfo *operationInfo
 @property  NSDate *lastAttemptDate
 @property  NSNumber *retryNumber

  // instance methods
  -[CKDOperationInfoMetadata .cxx_destruct]
  -[CKDOperationInfoMetadata operationInfo]
  -[CKDOperationInfoMetadata retryNumber]
  -[CKDOperationInfoMetadata lastAttemptDate]
  -[CKDOperationInfoMetadata setOperationInfo:]
  -[CKDOperationInfoMetadata setLastAttemptDate:]
  -[CKDOperationInfoMetadata setRetryNumber:]


CKDOperationInfoDelegateWrapper : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  <CKDOperationInfoDelegate> *delegate
 @property  NSString *personaID

  // instance methods
  -[CKDOperationInfoDelegateWrapper delegate]
  -[CKDOperationInfoDelegateWrapper setDelegate:]
  -[CKDOperationInfoDelegateWrapper .cxx_destruct]
  -[CKDOperationInfoDelegateWrapper initWithDelegate:]
  -[CKDOperationInfoDelegateWrapper personaID]
  -[CKDOperationInfoDelegateWrapper setPersonaID:]
  -[CKDOperationInfoDelegateWrapper performWithDelegate:]


CKDOperationInfoCache : CKSQLite /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  NSObject<OS_dispatch_queue> *cacheQueue
 @property  NSObject<OS_dispatch_queue> *cacheDelegateQueue
 @property  NSMutableDictionary *delegateWrappersByOperationID

  // class methods
  +[CKDOperationInfoCache sharedCache]
  +[CKDOperationInfoCache dbFileName]

  // instance methods
  -[CKDOperationInfoCache .cxx_destruct]
  -[CKDOperationInfoCache cacheQueue]
  -[CKDOperationInfoCache setCacheQueue:]
  -[CKDOperationInfoCache resumableOperationInfosByAppContainerTuplesWithProgressPurged:]
  -[CKDOperationInfoCache deleteAllInfoForOperationWithID:]
  -[CKDOperationInfoCache setOperationInfo:forOperationID:appContainerTuple:accountID:]
  -[CKDOperationInfoCache outstandingOperationInfosForIDs:]
  -[CKDOperationInfoCache allOutstandingOperationIDsForAppContainerTuple:accountID:]
  -[CKDOperationInfoCache registerAttemptForOperationWithID:]
  -[CKDOperationInfoCache _initWithCacheDir:]
  -[CKDOperationInfoCache operationInfoMetadataForOperationWithID:]
  -[CKDOperationInfoCache registerOperationAndSetResult:forOperationInfo:appContainerTuple:accountID:]
  -[CKDOperationInfoCache cacheDelegateQueue]
  -[CKDOperationInfoCache delegateWrappersByOperationID]
  -[CKDOperationInfoCache _locked_enumerateCallbackArgumentsForOperationWithID:usingBlock:]
  -[CKDOperationInfoCache _lockedResultForOperationWithID:]
  -[CKDOperationInfoCache _lockedSetOperationInfo:forOperationID:appContainerTuple:accountID:]
  -[CKDOperationInfoCache _lockedSetOperationResult:forOperationID:]
  -[CKDOperationInfoCache _locked_operationInfoForID:]
  -[CKDOperationInfoCache expungeOperationInfoForDeletedAccountID:]
  -[CKDOperationInfoCache registerDelegate:forOperationWithID:]
  -[CKDOperationInfoCache unregisterDelegate:forOperationWithID:]
  -[CKDOperationInfoCache resultForOperationWithID:]
  -[CKDOperationInfoCache enumerateCallbackArgumentsForOperationWithID:usingBlock:]
  -[CKDOperationInfoCache setProgressCallbackArguments:forOperationID:]
  -[CKDOperationInfoCache setOperationResult:forOperationID:]
  -[CKDOperationInfoCache registerCacheEvictionActivity]
  -[CKDOperationInfoCache setCacheDelegateQueue:]
  -[CKDOperationInfoCache setDelegateWrappersByOperationID:]


CKDGlobalConfigurationOperation : CKDOperation
 @property  CKDServerConfiguration *configuration
 @property  NSObject<OS_dispatch_group> *configurationFetchedGroup

  // instance methods
  -[CKDGlobalConfigurationOperation .cxx_destruct]
  -[CKDGlobalConfigurationOperation main]
  -[CKDGlobalConfigurationOperation setConfiguration:]
  -[CKDGlobalConfigurationOperation configuration]
  -[CKDGlobalConfigurationOperation activityCreate]
  -[CKDGlobalConfigurationOperation shouldCheckAppVersion]
  -[CKDGlobalConfigurationOperation setConfigurationFetchedGroup:]
  -[CKDGlobalConfigurationOperation configurationFetchedGroup]


CKDSyncRequestOperation : CKDOperation
 @property  @? willBeginSyncRequestWithClientsBlock
 @property  @? clientSyncStartedBlock
 @property  @? clientSyncProgressedBlock
 @property  @? clientSyncCompletedBlock

  // instance methods
  -[CKDSyncRequestOperation .cxx_destruct]
  -[CKDSyncRequestOperation main]
  -[CKDSyncRequestOperation willBeginSyncRequestWithClientsBlock]
  -[CKDSyncRequestOperation clientSyncStartedBlock]
  -[CKDSyncRequestOperation clientSyncProgressedBlock]
  -[CKDSyncRequestOperation clientSyncCompletedBlock]
  -[CKDSyncRequestOperation setClientSyncStartedBlock:]
  -[CKDSyncRequestOperation setClientSyncProgressedBlock:]
  -[CKDSyncRequestOperation setClientSyncCompletedBlock:]
  -[CKDSyncRequestOperation setWillBeginSyncRequestWithClientsBlock:]


CKDPTokenUnregistrationRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasTokenRegistrationBody
 @property  CKDPTokenRegistrationBody *tokenRegistrationBody

  // class methods
  +[CKDPTokenUnregistrationRequest options]

  // instance methods
  -[CKDPTokenUnregistrationRequest isEqual:]
  -[CKDPTokenUnregistrationRequest copyWithZone:]
  -[CKDPTokenUnregistrationRequest .cxx_destruct]
  -[CKDPTokenUnregistrationRequest dictionaryRepresentation]
  -[CKDPTokenUnregistrationRequest writeTo:]
  -[CKDPTokenUnregistrationRequest mergeFrom:]
  -[CKDPTokenUnregistrationRequest readFrom:]
  -[CKDPTokenUnregistrationRequest copyTo:]
  -[CKDPTokenUnregistrationRequest requestTypeCode]
  -[CKDPTokenUnregistrationRequest responseClass]
  -[CKDPTokenUnregistrationRequest setTokenRegistrationBody:]
  -[CKDPTokenUnregistrationRequest hasTokenRegistrationBody]
  -[CKDPTokenUnregistrationRequest tokenRegistrationBody]


CKDPListRange : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasLeft
 @property  CKDPListPosition *left
 @property  BOOL hasRight
 @property  CKDPListPosition *right

  // instance methods
  -[CKDPListRange isEqual:]
  -[CKDPListRange copyWithZone:]
  -[CKDPListRange .cxx_destruct]
  -[CKDPListRange dictionaryRepresentation]
  -[CKDPListRange left]
  -[CKDPListRange writeTo:]
  -[CKDPListRange setLeft:]
  -[CKDPListRange mergeFrom:]
  -[CKDPListRange readFrom:]
  -[CKDPListRange copyTo:]
  -[CKDPListRange right]
  -[CKDPListRange setRight:]
  -[CKDPListRange hasLeft]
  -[CKDPListRange hasRight]


CKDFetchArchivedRecordsRequestOperationResult : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSData *resultServerChangeTokenData
 @property  long long status

  // instance methods
  -[CKDFetchArchivedRecordsRequestOperationResult init]
  -[CKDFetchArchivedRecordsRequestOperationResult .cxx_destruct]
  -[CKDFetchArchivedRecordsRequestOperationResult status]
  -[CKDFetchArchivedRecordsRequestOperationResult setStatus:]
  -[CKDFetchArchivedRecordsRequestOperationResult resultServerChangeTokenData]
  -[CKDFetchArchivedRecordsRequestOperationResult setResultServerChangeTokenData:]


CKDFetchArchivedRecordsURLRequest : CKDURLRequest <CKDURLRequestPipelining>
 @property  NSArray *recordZoneIDs
 @property  NSDictionary *configurationsByRecordZoneID
 @property  NSMutableDictionary *zoneIDsByRequestOperationUUID
 @property  NSMutableDictionary *requestResultsByRecordZoneID
 @property  NSMutableDictionary *nodeErrorsByZoneID
 @property  BOOL shouldFetchAssetContent
 @property  NSSet *desiredAssetKeys
 @property  @? recordFetchedBlock
 @property  NSDictionary *resultsByRecordZoneID
 @property  NSDictionary *zoneErrorsByZoneID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDFetchArchivedRecordsURLRequest .cxx_destruct]
  -[CKDFetchArchivedRecordsURLRequest operationType]
  -[CKDFetchArchivedRecordsURLRequest setRecordFetchedBlock:]
  -[CKDFetchArchivedRecordsURLRequest initWithRecordZoneIDs:configurationsByRecordZoneID:]
  -[CKDFetchArchivedRecordsURLRequest recordZoneIDs]
  -[CKDFetchArchivedRecordsURLRequest setRecordZoneIDs:]
  -[CKDFetchArchivedRecordsURLRequest configurationsByRecordZoneID]
  -[CKDFetchArchivedRecordsURLRequest setConfigurationsByRecordZoneID:]
  -[CKDFetchArchivedRecordsURLRequest recordFetchedBlock]
  -[CKDFetchArchivedRecordsURLRequest shouldFetchAssetContent]
  -[CKDFetchArchivedRecordsURLRequest setShouldFetchAssetContent:]
  -[CKDFetchArchivedRecordsURLRequest setDesiredAssetKeys:]
  -[CKDFetchArchivedRecordsURLRequest generateRequestOperations]
  -[CKDFetchArchivedRecordsURLRequest requestDidParseProtobufObject:]
  -[CKDFetchArchivedRecordsURLRequest requestDidParseNodeFailure:]
  -[CKDFetchArchivedRecordsURLRequest requestOperationClasses]
  -[CKDFetchArchivedRecordsURLRequest zoneIDsToLock]
  -[CKDFetchArchivedRecordsURLRequest desiredAssetKeys]
  -[CKDFetchArchivedRecordsURLRequest nodeErrorsByZoneID]
  -[CKDFetchArchivedRecordsURLRequest requestResultsByRecordZoneID]
  -[CKDFetchArchivedRecordsURLRequest zoneIDsByRequestOperationUUID]
  -[CKDFetchArchivedRecordsURLRequest _handleRecords:]
  -[CKDFetchArchivedRecordsURLRequest zoneErrorsByZoneID]
  -[CKDFetchArchivedRecordsURLRequest resultsByRecordZoneID]
  -[CKDFetchArchivedRecordsURLRequest setZoneIDsByRequestOperationUUID:]
  -[CKDFetchArchivedRecordsURLRequest setRequestResultsByRecordZoneID:]
  -[CKDFetchArchivedRecordsURLRequest setNodeErrorsByZoneID:]


CKDPCSCacheRecordFetchOperation : CKDPCSCacheFetchOperation
 @property  CKRecordID *recordID
 @property  CKDRecordPCSData *recordPCSData
 @property  BOOL serverRecordHasNoProtectionData
 @property  NSString *serverRecordType

  // instance methods
  -[CKDPCSCacheRecordFetchOperation .cxx_destruct]
  -[CKDPCSCacheRecordFetchOperation recordID]
  -[CKDPCSCacheRecordFetchOperation serverRecordType]
  -[CKDPCSCacheRecordFetchOperation _handlePCSDataFetched:withError:]
  -[CKDPCSCacheRecordFetchOperation itemTypeName]
  -[CKDPCSCacheRecordFetchOperation hasAllPCSData]
  -[CKDPCSCacheRecordFetchOperation _fetchPCSDataFromDatabase]
  -[CKDPCSCacheRecordFetchOperation _fetchDependentPCS]
  -[CKDPCSCacheRecordFetchOperation _fetchPCSDataFromServer]
  -[CKDPCSCacheRecordFetchOperation _createAdditionalPCS]
  -[CKDPCSCacheRecordFetchOperation _decryptPCS]
  -[CKDPCSCacheRecordFetchOperation _savePCSDataToCache]
  -[CKDPCSCacheRecordFetchOperation recordPCSData]
  -[CKDPCSCacheRecordFetchOperation setRecordPCSData:]
  -[CKDPCSCacheRecordFetchOperation serverRecordHasNoProtectionData]
  -[CKDPCSCacheRecordFetchOperation setServerRecordType:]
  -[CKDPCSCacheRecordFetchOperation setServerRecordHasNoProtectionData:]
  -[CKDPCSCacheRecordFetchOperation needsChainPCSCreation]
  -[CKDPCSCacheRecordFetchOperation _fetchPCSForPrivateZone]
  -[CKDPCSCacheRecordFetchOperation _fetchDependentPCSInSharedDatabase]
  -[CKDPCSCacheRecordFetchOperation _decryptRecordPCSInPrivateDatabase]
  -[CKDPCSCacheRecordFetchOperation _decryptRecordPCSInSharedDatabase]


CKDPShareVettingInitiateResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasVettingError
 @property  int vettingError

  // instance methods
  -[CKDPShareVettingInitiateResponse isEqual:]
  -[CKDPShareVettingInitiateResponse copyWithZone:]
  -[CKDPShareVettingInitiateResponse dictionaryRepresentation]
  -[CKDPShareVettingInitiateResponse writeTo:]
  -[CKDPShareVettingInitiateResponse mergeFrom:]
  -[CKDPShareVettingInitiateResponse readFrom:]
  -[CKDPShareVettingInitiateResponse copyTo:]
  -[CKDPShareVettingInitiateResponse hasVettingError]
  -[CKDPShareVettingInitiateResponse vettingError]
  -[CKDPShareVettingInitiateResponse setVettingError:]
  -[CKDPShareVettingInitiateResponse setHasVettingError:]
  -[CKDPShareVettingInitiateResponse vettingErrorAsString:]
  -[CKDPShareVettingInitiateResponse StringAsVettingError:]


CKDAssetDirectoryContext : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *mmcsWorkingDirectory
 @property  NSString *assetDbPath
 @property  NSString *fileStagingPath
 @property  NSString *fileDownloadPath

  // instance methods
  -[CKDAssetDirectoryContext .cxx_destruct]
  -[CKDAssetDirectoryContext fileDownloadPath]
  -[CKDAssetDirectoryContext setMmcsWorkingDirectory:]
  -[CKDAssetDirectoryContext setAssetDbPath:]
  -[CKDAssetDirectoryContext setFileStagingPath:]
  -[CKDAssetDirectoryContext setFileDownloadPath:]
  -[CKDAssetDirectoryContext mmcsWorkingDirectory]
  -[CKDAssetDirectoryContext assetDbPath]
  -[CKDAssetDirectoryContext fileStagingPath]


CKDFetchDatabaseChangesURLRequest : CKDURLRequest <CKDURLRequestPipelining>
 @property  CKRecordZoneID *recordZoneID
 @property  NSData *previousServerChangeTokenData
 @property  NSData *serverChangeTokenData
 @property  long long status
 @property  unsigned long resultsLimit
 @property  NSArray *changedZoneIDs
 @property  NSArray *deletedZoneIDs
 @property  NSArray *purgedZoneIDs
 @property  @? zoneChangedBlock
 @property  @? zoneDeletedBlock
 @property  @? zonePurgedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDFetchDatabaseChangesURLRequest .cxx_destruct]
  -[CKDFetchDatabaseChangesURLRequest status]
  -[CKDFetchDatabaseChangesURLRequest operationType]
  -[CKDFetchDatabaseChangesURLRequest setResultsLimit:]
  -[CKDFetchDatabaseChangesURLRequest setStatus:]
  -[CKDFetchDatabaseChangesURLRequest resultsLimit]
  -[CKDFetchDatabaseChangesURLRequest setRecordZoneID:]
  -[CKDFetchDatabaseChangesURLRequest recordZoneID]
  -[CKDFetchDatabaseChangesURLRequest changedZoneIDs]
  -[CKDFetchDatabaseChangesURLRequest deletedZoneIDs]
  -[CKDFetchDatabaseChangesURLRequest serverChangeTokenData]
  -[CKDFetchDatabaseChangesURLRequest setServerChangeTokenData:]
  -[CKDFetchDatabaseChangesURLRequest generateRequestOperations]
  -[CKDFetchDatabaseChangesURLRequest requestDidParseProtobufObject:]
  -[CKDFetchDatabaseChangesURLRequest requestOperationClasses]
  -[CKDFetchDatabaseChangesURLRequest allowsAnonymousAccount]
  -[CKDFetchDatabaseChangesURLRequest previousServerChangeTokenData]
  -[CKDFetchDatabaseChangesURLRequest zoneChangedBlock]
  -[CKDFetchDatabaseChangesURLRequest zonePurgedBlock]
  -[CKDFetchDatabaseChangesURLRequest zoneDeletedBlock]
  -[CKDFetchDatabaseChangesURLRequest initWithPreviousServerChangeTokenData:]
  -[CKDFetchDatabaseChangesURLRequest purgedZoneIDs]
  -[CKDFetchDatabaseChangesURLRequest setZoneChangedBlock:]
  -[CKDFetchDatabaseChangesURLRequest setZoneDeletedBlock:]
  -[CKDFetchDatabaseChangesURLRequest setZonePurgedBlock:]
  -[CKDFetchDatabaseChangesURLRequest setPreviousServerChangeTokenData:]


CKDPublicIdentityLookupService : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKDKeyValueDiskCache *cache
 @property  CKDClientContext *context

  // instance methods
  -[CKDPublicIdentityLookupService .cxx_destruct]
  -[CKDPublicIdentityLookupService context]
  -[CKDPublicIdentityLookupService setContext:]
  -[CKDPublicIdentityLookupService setCache:]
  -[CKDPublicIdentityLookupService cache]
  -[CKDPublicIdentityLookupService initWithClientContext:]
  -[CKDPublicIdentityLookupService removeCacheForLookupInfos:]
  -[CKDPublicIdentityLookupService scheduleRequest:forOperation:]
  -[CKDPublicIdentityLookupService configureRequest:parentOperation:]


CKDPRecordDeleteResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPRecordDeleteResponse isEqual:]
  -[CKDPRecordDeleteResponse copyWithZone:]
  -[CKDPRecordDeleteResponse dictionaryRepresentation]
  -[CKDPRecordDeleteResponse writeTo:]
  -[CKDPRecordDeleteResponse mergeFrom:]
  -[CKDPRecordDeleteResponse readFrom:]
  -[CKDPRecordDeleteResponse copyTo:]


CKCDPCodeServiceRequestServiceClientConfig : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasHost
 @property  NSString *host
 @property  BOOL hasPort
 @property  unsigned int port
 @property  BOOL hasUseTls
 @property  BOOL useTls

  // instance methods
  -[CKCDPCodeServiceRequestServiceClientConfig isEqual:]
  -[CKCDPCodeServiceRequestServiceClientConfig copyWithZone:]
  -[CKCDPCodeServiceRequestServiceClientConfig host]
  -[CKCDPCodeServiceRequestServiceClientConfig port]
  -[CKCDPCodeServiceRequestServiceClientConfig .cxx_destruct]
  -[CKCDPCodeServiceRequestServiceClientConfig setPort:]
  -[CKCDPCodeServiceRequestServiceClientConfig dictionaryRepresentation]
  -[CKCDPCodeServiceRequestServiceClientConfig setHost:]
  -[CKCDPCodeServiceRequestServiceClientConfig writeTo:]
  -[CKCDPCodeServiceRequestServiceClientConfig mergeFrom:]
  -[CKCDPCodeServiceRequestServiceClientConfig readFrom:]
  -[CKCDPCodeServiceRequestServiceClientConfig copyTo:]
  -[CKCDPCodeServiceRequestServiceClientConfig hasHost]
  -[CKCDPCodeServiceRequestServiceClientConfig hasPort]
  -[CKCDPCodeServiceRequestServiceClientConfig setUseTls:]
  -[CKCDPCodeServiceRequestServiceClientConfig setHasPort:]
  -[CKCDPCodeServiceRequestServiceClientConfig setHasUseTls:]
  -[CKCDPCodeServiceRequestServiceClientConfig hasUseTls]
  -[CKCDPCodeServiceRequestServiceClientConfig useTls]


CKDOperationInfoHolderOperation : CKDOperation
  // instance methods
  -[CKDOperationInfoHolderOperation main]


CKDPConfigurationFieldValue : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasBytesValue
 @property  NSData *bytesValue
 @property  BOOL hasBoolValue
 @property  BOOL boolValue
 @property  BOOL hasLongValue
 @property  long long longValue
 @property  BOOL hasDoubleValue
 @property  double doubleValue
 @property  BOOL hasStringValue
 @property  NSString *stringValue
 @property  NSMutableArray *fieldValues
 @property  NSMutableArray *listValues

  // class methods
  +[CKDPConfigurationFieldValue fieldValuesType]
  +[CKDPConfigurationFieldValue listValuesType]

  // instance methods
  -[CKDPConfigurationFieldValue doubleValue]
  -[CKDPConfigurationFieldValue longValue]
  -[CKDPConfigurationFieldValue isEqual:]
  -[CKDPConfigurationFieldValue copyWithZone:]
  -[CKDPConfigurationFieldValue type]
  -[CKDPConfigurationFieldValue setType:]
  -[CKDPConfigurationFieldValue boolValue]
  -[CKDPConfigurationFieldValue stringValue]
  -[CKDPConfigurationFieldValue .cxx_destruct]
  -[CKDPConfigurationFieldValue dictionaryRepresentation]
  -[CKDPConfigurationFieldValue writeTo:]
  -[CKDPConfigurationFieldValue setStringValue:]
  -[CKDPConfigurationFieldValue mergeFrom:]
  -[CKDPConfigurationFieldValue readFrom:]
  -[CKDPConfigurationFieldValue copyTo:]
  -[CKDPConfigurationFieldValue hasStringValue]
  -[CKDPConfigurationFieldValue setDoubleValue:]
  -[CKDPConfigurationFieldValue setHasDoubleValue:]
  -[CKDPConfigurationFieldValue hasDoubleValue]
  -[CKDPConfigurationFieldValue typeAsString:]
  -[CKDPConfigurationFieldValue StringAsType:]
  -[CKDPConfigurationFieldValue setBoolValue:]
  -[CKDPConfigurationFieldValue setHasType:]
  -[CKDPConfigurationFieldValue hasType]
  -[CKDPConfigurationFieldValue setHasBoolValue:]
  -[CKDPConfigurationFieldValue hasBoolValue]
  -[CKDPConfigurationFieldValue setBytesValue:]
  -[CKDPConfigurationFieldValue setFieldValues:]
  -[CKDPConfigurationFieldValue setListValues:]
  -[CKDPConfigurationFieldValue addFieldValues:]
  -[CKDPConfigurationFieldValue addListValues:]
  -[CKDPConfigurationFieldValue fieldValuesCount]
  -[CKDPConfigurationFieldValue clearFieldValues]
  -[CKDPConfigurationFieldValue fieldValuesAtIndex:]
  -[CKDPConfigurationFieldValue listValuesCount]
  -[CKDPConfigurationFieldValue clearListValues]
  -[CKDPConfigurationFieldValue listValuesAtIndex:]
  -[CKDPConfigurationFieldValue hasBytesValue]
  -[CKDPConfigurationFieldValue setLongValue:]
  -[CKDPConfigurationFieldValue setHasLongValue:]
  -[CKDPConfigurationFieldValue hasLongValue]
  -[CKDPConfigurationFieldValue bytesValue]
  -[CKDPConfigurationFieldValue fieldValues]
  -[CKDPConfigurationFieldValue listValues]


CKDAccountStore : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
  // class methods
  +[CKDAccountStore sharedAccountStore]
  +[CKDAccountStore personaAwarePrimaryAppleAccountFromAccounts:defaultPrimaryAccount:]

  // instance methods
  -[CKDAccountStore init]


CKDPUserRetrieveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // class methods
  +[CKDPUserRetrieveRequest options]

  // instance methods
  -[CKDPUserRetrieveRequest isEqual:]
  -[CKDPUserRetrieveRequest copyWithZone:]
  -[CKDPUserRetrieveRequest dictionaryRepresentation]
  -[CKDPUserRetrieveRequest writeTo:]
  -[CKDPUserRetrieveRequest mergeFrom:]
  -[CKDPUserRetrieveRequest readFrom:]
  -[CKDPUserRetrieveRequest copyTo:]
  -[CKDPUserRetrieveRequest requestTypeCode]
  -[CKDPUserRetrieveRequest responseClass]


CKDPQueryRetrieveRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasQuery
 @property  CKDPQuery *query
 @property  BOOL hasContinuationMarker
 @property  NSData *continuationMarker
 @property  BOOL hasLimit
 @property  unsigned int limit
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier
 @property  BOOL hasRequestedFields
 @property  CKDPRequestedFields *requestedFields
 @property  BOOL hasAssetsToDownload
 @property  CKDPAssetsToDownload *assetsToDownload

  // class methods
  +[CKDPQueryRetrieveRequest options]

  // instance methods
  -[CKDPQueryRetrieveRequest isEqual:]
  -[CKDPQueryRetrieveRequest copyWithZone:]
  -[CKDPQueryRetrieveRequest query]
  -[CKDPQueryRetrieveRequest .cxx_destruct]
  -[CKDPQueryRetrieveRequest dictionaryRepresentation]
  -[CKDPQueryRetrieveRequest setQuery:]
  -[CKDPQueryRetrieveRequest limit]
  -[CKDPQueryRetrieveRequest setLimit:]
  -[CKDPQueryRetrieveRequest writeTo:]
  -[CKDPQueryRetrieveRequest mergeFrom:]
  -[CKDPQueryRetrieveRequest readFrom:]
  -[CKDPQueryRetrieveRequest copyTo:]
  -[CKDPQueryRetrieveRequest requestTypeCode]
  -[CKDPQueryRetrieveRequest responseClass]
  -[CKDPQueryRetrieveRequest setZoneIdentifier:]
  -[CKDPQueryRetrieveRequest hasZoneIdentifier]
  -[CKDPQueryRetrieveRequest zoneIdentifier]
  -[CKDPQueryRetrieveRequest hasQuery]
  -[CKDPQueryRetrieveRequest requestedFields]
  -[CKDPQueryRetrieveRequest setRequestedFields:]
  -[CKDPQueryRetrieveRequest setContinuationMarker:]
  -[CKDPQueryRetrieveRequest hasContinuationMarker]
  -[CKDPQueryRetrieveRequest continuationMarker]
  -[CKDPQueryRetrieveRequest setHasLimit:]
  -[CKDPQueryRetrieveRequest hasLimit]
  -[CKDPQueryRetrieveRequest hasRequestedFields]
  -[CKDPQueryRetrieveRequest setAssetsToDownload:]
  -[CKDPQueryRetrieveRequest hasAssetsToDownload]
  -[CKDPQueryRetrieveRequest assetsToDownload]


CKDFetchNotificationChangesURLRequest : CKDURLRequest
 @property  NSData *serverChangeTokenData
 @property  NSData *resultServerChangeTokenData
 @property  BOOL moreComing
 @property  unsigned long resultsLimit
 @property  BOOL wantsChanges
 @property  NSArray *resultChangedNotifications

  // instance methods
  -[CKDFetchNotificationChangesURLRequest .cxx_destruct]
  -[CKDFetchNotificationChangesURLRequest operationType]
  -[CKDFetchNotificationChangesURLRequest setResultsLimit:]
  -[CKDFetchNotificationChangesURLRequest moreComing]
  -[CKDFetchNotificationChangesURLRequest setMoreComing:]
  -[CKDFetchNotificationChangesURLRequest resultsLimit]
  -[CKDFetchNotificationChangesURLRequest setWantsChanges:]
  -[CKDFetchNotificationChangesURLRequest wantsChanges]
  -[CKDFetchNotificationChangesURLRequest serverChangeTokenData]
  -[CKDFetchNotificationChangesURLRequest setServerChangeTokenData:]
  -[CKDFetchNotificationChangesURLRequest generateRequestOperations]
  -[CKDFetchNotificationChangesURLRequest requestDidParseProtobufObject:]
  -[CKDFetchNotificationChangesURLRequest requestOperationClasses]
  -[CKDFetchNotificationChangesURLRequest resultChangedNotifications]
  -[CKDFetchNotificationChangesURLRequest initWithServerChangeTokenData:]
  -[CKDFetchNotificationChangesURLRequest resultServerChangeTokenData]
  -[CKDFetchNotificationChangesURLRequest setResultServerChangeTokenData:]


CKDServerConfiguration : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKPropertyCoding>
 @property  NSMutableDictionary *values
 @property  NSMutableDictionary *allowedAppVersionsCache
 @property  NSDate *expiry
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDServerConfiguration setValues:]
  -[CKDServerConfiguration values]
  -[CKDServerConfiguration .cxx_destruct]
  -[CKDServerConfiguration initWithValues:]
  -[CKDServerConfiguration expiry]
  -[CKDServerConfiguration isExpired]
  -[CKDServerConfiguration dictionaryPropertyEncoding]
  -[CKDServerConfiguration initWithPropertyDictionary:]
  -[CKDServerConfiguration flowControlBudgetForContainer:]
  -[CKDServerConfiguration flowControlRegenerationForContainer:]
  -[CKDServerConfiguration flowControlMaximumThrottleTime:]
  -[CKDServerConfiguration publicIdentitiesExpirationTimeoutForContainer:]
  -[CKDServerConfiguration applicationWithBundleID:canSyncUsingVersion:forContainer:]
  -[CKDServerConfiguration maxBatchSizeForContainer:]
  -[CKDServerConfiguration allowExpiredDNSBehavior:]
  -[CKDServerConfiguration c2AllOperationMetricsReportFrequency:]
  -[CKDServerConfiguration c2AllOperationMetricsReportFrequencyBase:]
  -[CKDServerConfiguration c2AllOperationGroupMetricsReportFrequency:]
  -[CKDServerConfiguration c2AllOperationGroupMetricsReportFrequencyBase:]
  -[CKDServerConfiguration c2NetworkMetricsReportFrequency:]
  -[CKDServerConfiguration c2NetworkMetricsReportFrequencyBase:]
  -[CKDServerConfiguration c2ClientOperationMetricsReportFrequency:]
  -[CKDServerConfiguration c2ClientOperationMetricsReportFrequencyBase:]
  -[CKDServerConfiguration c2ClientApplicationMetricsReportFrequency:]
  -[CKDServerConfiguration c2ClientApplicationMetricsReportFrequencyBase:]
  -[CKDServerConfiguration tokenRegisterDaysForContainer:]
  -[CKDServerConfiguration transcodeServerPublicKeyURLsForContainer:]
  -[CKDServerConfiguration iCloudHostnames]
  -[CKDServerConfiguration setExpiry:]
  -[CKDServerConfiguration allowedAppVersionsCache]
  -[CKDServerConfiguration setAllowedAppVersionsCache:]
  -[CKDServerConfiguration valueForKeyPath:forContainer:]


CKDPublicIdentityLookupRequest : CKDCacheBasedRequest
 @property  NSArray *originalLookupInfosToFetch
 @property  NSMutableArray *lookupInfosToFetch
 @property  CKDDiscoverUserIdentitiesURLRequest *request
 @property  @? perLookupInfoProgressBlock
 @property  @? lookupCompletionBlock

  // class methods
  +[CKDPublicIdentityLookupRequest removeCacheForLookupInfos:inCache:]

  // instance methods
  -[CKDPublicIdentityLookupRequest .cxx_destruct]
  -[CKDPublicIdentityLookupRequest finishWithError:]
  -[CKDPublicIdentityLookupRequest setRequest:]
  -[CKDPublicIdentityLookupRequest request]
  -[CKDPublicIdentityLookupRequest CKPropertiesDescription]
  -[CKDPublicIdentityLookupRequest ckShortDescription]
  -[CKDPublicIdentityLookupRequest performRequest]
  -[CKDPublicIdentityLookupRequest initWithLookupInfos:]
  -[CKDPublicIdentityLookupRequest setPerLookupInfoProgressBlock:]
  -[CKDPublicIdentityLookupRequest setLookupCompletionBlock:]
  -[CKDPublicIdentityLookupRequest _receivedUserIdentity:forLookupInfo:error:]
  -[CKDPublicIdentityLookupRequest lookupInfosToFetch]
  -[CKDPublicIdentityLookupRequest _tryComplete]
  -[CKDPublicIdentityLookupRequest spawnURLRequests]
  -[CKDPublicIdentityLookupRequest _generateOONPrivateKeyWithError:]
  -[CKDPublicIdentityLookupRequest _saveUserIdentity:forLookupInfo:]
  -[CKDPublicIdentityLookupRequest originalLookupInfosToFetch]
  -[CKDPublicIdentityLookupRequest perLookupInfoProgressBlock]
  -[CKDPublicIdentityLookupRequest lookupCompletionBlock]
  -[CKDPublicIdentityLookupRequest setOriginalLookupInfosToFetch:]
  -[CKDPublicIdentityLookupRequest setLookupInfosToFetch:]


CKDMarkAssetBrokenOperation : CKDDatabaseOperation
 @property  CKUploadRequestConfiguration *uploadRequestConfiguration
 @property  BOOL touchRepairZone
 @property  BOOL bypassPCSEncryptionForTouchRepairZone
 @property  BOOL simulateCorruptAsset
 @property  BOOL writeRepairRecord
 @property  CKRecordID *recordID
 @property  NSString *field
 @property  long long listIndex
 @property  CKDFetchRecordsOperation *fetchOperation
 @property  CKDFetchRecordZonesOperation *zoneFetchOperation
 @property  CKDModifyRecordZonesOperation *zoneCreateOperation
 @property  CKDModifyRecordsOperation *corruptOperation
 @property  CKDMarkAssetBrokenURLRequestWrapperOperation *wrapperOperation
 @property  CKRecordZone *repairZone
 @property  CKRecord *record
 @property  unsigned long numMarkAssetBrokenFailures
 @property  NSError *markAssetBrokenError
 @property  @? assetOrPackageMarkedBrokenBlock

  // instance methods
  -[CKDMarkAssetBrokenOperation .cxx_destruct]
  -[CKDMarkAssetBrokenOperation main]
  -[CKDMarkAssetBrokenOperation recordID]
  -[CKDMarkAssetBrokenOperation field]
  -[CKDMarkAssetBrokenOperation setRecordID:]
  -[CKDMarkAssetBrokenOperation uploadRequestConfiguration]
  -[CKDMarkAssetBrokenOperation setUploadRequestConfiguration:]
  -[CKDMarkAssetBrokenOperation listIndex]
  -[CKDMarkAssetBrokenOperation _finishOnCallbackQueueWithError:]
  -[CKDMarkAssetBrokenOperation activityCreate]
  -[CKDMarkAssetBrokenOperation setListIndex:]
  -[CKDMarkAssetBrokenOperation setTouchRepairZone:]
  -[CKDMarkAssetBrokenOperation setField:]
  -[CKDMarkAssetBrokenOperation touchRepairZone]
  -[CKDMarkAssetBrokenOperation simulateCorruptAsset]
  -[CKDMarkAssetBrokenOperation setSimulateCorruptAsset:]
  -[CKDMarkAssetBrokenOperation bypassPCSEncryptionForTouchRepairZone]
  -[CKDMarkAssetBrokenOperation setBypassPCSEncryptionForTouchRepairZone:]
  -[CKDMarkAssetBrokenOperation writeRepairRecord]
  -[CKDMarkAssetBrokenOperation setWriteRepairRecord:]
  -[CKDMarkAssetBrokenOperation record]
  -[CKDMarkAssetBrokenOperation setRecord:]
  -[CKDMarkAssetBrokenOperation fetchOperation]
  -[CKDMarkAssetBrokenOperation setFetchOperation:]
  -[CKDMarkAssetBrokenOperation initWithOperationInfo:clientContext:]
  -[CKDMarkAssetBrokenOperation setAssetOrPackageMarkedBrokenBlock:]
  -[CKDMarkAssetBrokenOperation nameForState:]
  -[CKDMarkAssetBrokenOperation makeStateTransition]
  -[CKDMarkAssetBrokenOperation _fetchRecord]
  -[CKDMarkAssetBrokenOperation _touchFetchRepairZone]
  -[CKDMarkAssetBrokenOperation _breakAsset]
  -[CKDMarkAssetBrokenOperation _markAssetBroken]
  -[CKDMarkAssetBrokenOperation repairZone]
  -[CKDMarkAssetBrokenOperation _touchCreateRepairZone]
  -[CKDMarkAssetBrokenOperation markAssetBrokenError]
  -[CKDMarkAssetBrokenOperation numMarkAssetBrokenFailures]
  -[CKDMarkAssetBrokenOperation setNumMarkAssetBrokenFailures:]
  -[CKDMarkAssetBrokenOperation setMarkAssetBrokenError:]
  -[CKDMarkAssetBrokenOperation repairContext]
  -[CKDMarkAssetBrokenOperation setRepairZone:]
  -[CKDMarkAssetBrokenOperation setZoneFetchOperation:]
  -[CKDMarkAssetBrokenOperation setZoneCreateOperation:]
  -[CKDMarkAssetBrokenOperation checkPreconditions]
  -[CKDMarkAssetBrokenOperation assetOrPackageForFetchedRecord]
  -[CKDMarkAssetBrokenOperation setCorruptOperation:]
  -[CKDMarkAssetBrokenOperation assetOrPackageMarkedBrokenBlock]
  -[CKDMarkAssetBrokenOperation setWrapperOperation:]
  -[CKDMarkAssetBrokenOperation zoneFetchOperation]
  -[CKDMarkAssetBrokenOperation zoneCreateOperation]
  -[CKDMarkAssetBrokenOperation corruptOperation]
  -[CKDMarkAssetBrokenOperation wrapperOperation]


CKDMarkAssetBrokenURLRequestWrapperOperation : CKDOperation
 @property  CKDMarkAssetBrokenURLRequest *urlRequest

  // instance methods
  -[CKDMarkAssetBrokenURLRequestWrapperOperation .cxx_destruct]
  -[CKDMarkAssetBrokenURLRequestWrapperOperation main]
  -[CKDMarkAssetBrokenURLRequestWrapperOperation activityCreate]
  -[CKDMarkAssetBrokenURLRequestWrapperOperation urlRequest]
  -[CKDMarkAssetBrokenURLRequestWrapperOperation setUrlRequest:]
  -[CKDMarkAssetBrokenURLRequestWrapperOperation shouldCheckAppVersion]


CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *contentRequestHeaders
 @property  BOOL hasContentRequestAuthorizeGetOptions
 @property  unsigned long contentRequestAuthorizeGetOptions

  // class methods
  +[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions contentRequestHeadersType]

  // instance methods
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions isEqual:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions copyWithZone:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions .cxx_destruct]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions dictionaryRepresentation]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions writeTo:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions mergeFrom:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions readFrom:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions copyTo:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions setContentRequestAuthorizeGetOptions:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions setContentRequestHeaders:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions contentRequestHeaders]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions addContentRequestHeaders:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions contentRequestHeadersCount]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions clearContentRequestHeaders]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions contentRequestHeadersAtIndex:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions setHasContentRequestAuthorizeGetOptions:]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions hasContentRequestAuthorizeGetOptions]
  -[CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions contentRequestAuthorizeGetOptions]


CKDPUniqueFieldFailure : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIdentifierForConstraintFailure
 @property  CKDPIdentifier *identifierForConstraintFailure

  // instance methods
  -[CKDPUniqueFieldFailure isEqual:]
  -[CKDPUniqueFieldFailure copyWithZone:]
  -[CKDPUniqueFieldFailure .cxx_destruct]
  -[CKDPUniqueFieldFailure dictionaryRepresentation]
  -[CKDPUniqueFieldFailure writeTo:]
  -[CKDPUniqueFieldFailure mergeFrom:]
  -[CKDPUniqueFieldFailure readFrom:]
  -[CKDPUniqueFieldFailure copyTo:]
  -[CKDPUniqueFieldFailure setIdentifierForConstraintFailure:]
  -[CKDPUniqueFieldFailure hasIdentifierForConstraintFailure]
  -[CKDPUniqueFieldFailure identifierForConstraintFailure]


CKCDPErrorUserInfoValue : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasDoubleValue
 @property  double doubleValue
 @property  BOOL hasInt64Value
 @property  long long int64Value
 @property  BOOL hasBoolValue
 @property  BOOL boolValue
 @property  BOOL hasStringValue
 @property  NSString *stringValue
 @property  BOOL hasBytesValue
 @property  NSData *bytesValue

  // instance methods
  -[CKCDPErrorUserInfoValue doubleValue]
  -[CKCDPErrorUserInfoValue isEqual:]
  -[CKCDPErrorUserInfoValue copyWithZone:]
  -[CKCDPErrorUserInfoValue boolValue]
  -[CKCDPErrorUserInfoValue stringValue]
  -[CKCDPErrorUserInfoValue .cxx_destruct]
  -[CKCDPErrorUserInfoValue dictionaryRepresentation]
  -[CKCDPErrorUserInfoValue writeTo:]
  -[CKCDPErrorUserInfoValue setStringValue:]
  -[CKCDPErrorUserInfoValue mergeFrom:]
  -[CKCDPErrorUserInfoValue readFrom:]
  -[CKCDPErrorUserInfoValue copyTo:]
  -[CKCDPErrorUserInfoValue hasStringValue]
  -[CKCDPErrorUserInfoValue setDoubleValue:]
  -[CKCDPErrorUserInfoValue setHasDoubleValue:]
  -[CKCDPErrorUserInfoValue hasDoubleValue]
  -[CKCDPErrorUserInfoValue int64Value]
  -[CKCDPErrorUserInfoValue setBoolValue:]
  -[CKCDPErrorUserInfoValue setHasBoolValue:]
  -[CKCDPErrorUserInfoValue hasBoolValue]
  -[CKCDPErrorUserInfoValue setBytesValue:]
  -[CKCDPErrorUserInfoValue hasBytesValue]
  -[CKCDPErrorUserInfoValue bytesValue]
  -[CKCDPErrorUserInfoValue setInt64Value:]
  -[CKCDPErrorUserInfoValue setHasInt64Value:]
  -[CKCDPErrorUserInfoValue hasInt64Value]


CKDAcceptSharesURLRequest : CKDURLRequest
 @property  NSArray *shareMetadatasToAccept
 @property  NSMutableDictionary *shareMetadataByRequestID
 @property  @? shareAcceptedBlock

  // instance methods
  -[CKDAcceptSharesURLRequest .cxx_destruct]
  -[CKDAcceptSharesURLRequest operationType]
  -[CKDAcceptSharesURLRequest setShareMetadatasToAccept:]
  -[CKDAcceptSharesURLRequest shareMetadatasToAccept]
  -[CKDAcceptSharesURLRequest generateRequestOperations]
  -[CKDAcceptSharesURLRequest requestDidParseProtobufObject:]
  -[CKDAcceptSharesURLRequest requestDidParseNodeFailure:]
  -[CKDAcceptSharesURLRequest requestOperationClasses]
  -[CKDAcceptSharesURLRequest shareMetadataByRequestID]
  -[CKDAcceptSharesURLRequest shareAcceptedBlock]
  -[CKDAcceptSharesURLRequest initWithShareMetadatasToAccept:]
  -[CKDAcceptSharesURLRequest setShareAcceptedBlock:]
  -[CKDAcceptSharesURLRequest setShareMetadataByRequestID:]


CKDAcceptShareMetadata : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSURL *shareURL
 @property  CKRecordID *shareRecordID
 @property  NSString *etag
 @property  NSData *publicPCSData
 @property  NSString *publicPCSEtag
 @property  NSData *publicKey
 @property  unsigned long publicKeyVersion
 @property  NSData *oonProtectionInfo
 @property  NSString *oonParticipantID
 @property  NSData *dugongInvitationProtectionInfo
 @property  BOOL acceptedInProcess

  // instance methods
  -[CKDAcceptShareMetadata .cxx_destruct]
  -[CKDAcceptShareMetadata etag]
  -[CKDAcceptShareMetadata publicKey]
  -[CKDAcceptShareMetadata setEtag:]
  -[CKDAcceptShareMetadata publicKeyVersion]
  -[CKDAcceptShareMetadata setPublicKeyVersion:]
  -[CKDAcceptShareMetadata shareURL]
  -[CKDAcceptShareMetadata setShareURL:]
  -[CKDAcceptShareMetadata shareRecordID]
  -[CKDAcceptShareMetadata setShareRecordID:]
  -[CKDAcceptShareMetadata acceptedInProcess]
  -[CKDAcceptShareMetadata setAcceptedInProcess:]
  -[CKDAcceptShareMetadata setPublicKey:]
  -[CKDAcceptShareMetadata publicPCSData]
  -[CKDAcceptShareMetadata setPublicPCSData:]
  -[CKDAcceptShareMetadata setPublicPCSEtag:]
  -[CKDAcceptShareMetadata publicPCSEtag]
  -[CKDAcceptShareMetadata dugongInvitationProtectionInfo]
  -[CKDAcceptShareMetadata oonProtectionInfo]
  -[CKDAcceptShareMetadata oonParticipantID]
  -[CKDAcceptShareMetadata setOonProtectionInfo:]
  -[CKDAcceptShareMetadata setOonParticipantID:]
  -[CKDAcceptShareMetadata setDugongInvitationProtectionInfo:]


CKDPZoneCapabilities : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasAtomicSaves
 @property  BOOL atomicSaves
 @property  BOOL hasFetchChanges
 @property  BOOL fetchChanges
 @property  BOOL hasSharing
 @property  BOOL sharing
 @property  BOOL hasCkql
 @property  BOOL ckql
 @property  BOOL hasSharingType
 @property  int sharingType
 @property  BOOL hasZoneSharing
 @property  BOOL zoneSharing
 @property  BOOL hasHierarchicalSharing
 @property  BOOL hierarchicalSharing

  // instance methods
  -[CKDPZoneCapabilities isEqual:]
  -[CKDPZoneCapabilities copyWithZone:]
  -[CKDPZoneCapabilities dictionaryRepresentation]
  -[CKDPZoneCapabilities writeTo:]
  -[CKDPZoneCapabilities mergeFrom:]
  -[CKDPZoneCapabilities readFrom:]
  -[CKDPZoneCapabilities copyTo:]
  -[CKDPZoneCapabilities setAtomicSaves:]
  -[CKDPZoneCapabilities setHasAtomicSaves:]
  -[CKDPZoneCapabilities hasAtomicSaves]
  -[CKDPZoneCapabilities setFetchChanges:]
  -[CKDPZoneCapabilities setHasFetchChanges:]
  -[CKDPZoneCapabilities hasFetchChanges]
  -[CKDPZoneCapabilities setSharing:]
  -[CKDPZoneCapabilities setHasSharing:]
  -[CKDPZoneCapabilities hasSharing]
  -[CKDPZoneCapabilities setCkql:]
  -[CKDPZoneCapabilities setHasCkql:]
  -[CKDPZoneCapabilities hasCkql]
  -[CKDPZoneCapabilities sharingType]
  -[CKDPZoneCapabilities setSharingType:]
  -[CKDPZoneCapabilities setHasSharingType:]
  -[CKDPZoneCapabilities hasSharingType]
  -[CKDPZoneCapabilities sharingTypeAsString:]
  -[CKDPZoneCapabilities StringAsSharingType:]
  -[CKDPZoneCapabilities setZoneSharing:]
  -[CKDPZoneCapabilities setHasZoneSharing:]
  -[CKDPZoneCapabilities hasZoneSharing]
  -[CKDPZoneCapabilities setHierarchicalSharing:]
  -[CKDPZoneCapabilities setHasHierarchicalSharing:]
  -[CKDPZoneCapabilities hasHierarchicalSharing]
  -[CKDPZoneCapabilities atomicSaves]
  -[CKDPZoneCapabilities fetchChanges]
  -[CKDPZoneCapabilities sharing]
  -[CKDPZoneCapabilities ckql]
  -[CKDPZoneCapabilities zoneSharing]
  -[CKDPZoneCapabilities hierarchicalSharing]


CKDFetchBatchedRecordsOperation : CKDDatabaseOperation <CKDOperationPipelining>
 @property  NSArray *recordZoneIDs
 @property  NSDictionary *configurationsByRecordZoneID
 @property  unsigned long numRequestsSent
 @property  CKDRecordFetchAggregator *recordFetcher
 @property  NSMutableArray *requestInfos
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  BOOL forcePCSDecryptionAttempt
 @property  BOOL shouldReportAllPerItemFailures
 @property  CKDRecordCache *recordCache
 @property  NSObject<OS_dispatch_group> *fetchRecordsGroup
 @property  BOOL shouldFetchAssetContents
 @property  BOOL fetchAllChanges
 @property  NSSet *desiredAssetKeys
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *pipeliningDescription
 @property  NSObject<OS_dispatch_queue> *callbackQueue

  // instance methods
  -[CKDFetchBatchedRecordsOperation .cxx_destruct]
  -[CKDFetchBatchedRecordsOperation main]
  -[CKDFetchBatchedRecordsOperation setFetchAllChanges:]
  -[CKDFetchBatchedRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchBatchedRecordsOperation activityCreate]
  -[CKDFetchBatchedRecordsOperation recordZoneIDs]
  -[CKDFetchBatchedRecordsOperation setRecordZoneIDs:]
  -[CKDFetchBatchedRecordsOperation fetchAllChanges]
  -[CKDFetchBatchedRecordsOperation configurationsByRecordZoneID]
  -[CKDFetchBatchedRecordsOperation setConfigurationsByRecordZoneID:]
  -[CKDFetchBatchedRecordsOperation shouldFetchAssetContents]
  -[CKDFetchBatchedRecordsOperation setShouldFetchAssetContents:]
  -[CKDFetchBatchedRecordsOperation assetTransferOptionsByRecordTypeAndKey]
  -[CKDFetchBatchedRecordsOperation setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKDFetchBatchedRecordsOperation setShouldReportAllPerItemFailures:]
  -[CKDFetchBatchedRecordsOperation shouldReportAllPerItemFailures]
  -[CKDFetchBatchedRecordsOperation forcePCSDecryptionAttempt]
  -[CKDFetchBatchedRecordsOperation setForcePCSDecryptionAttempt:]
  -[CKDFetchBatchedRecordsOperation requestInfos]
  -[CKDFetchBatchedRecordsOperation initWithOperationInfo:clientContext:]
  -[CKDFetchBatchedRecordsOperation pipeliningDescription]
  -[CKDFetchBatchedRecordsOperation fetchRecordsGroup]
  -[CKDFetchBatchedRecordsOperation recordFetcher]
  -[CKDFetchBatchedRecordsOperation setDesiredAssetKeys:]
  -[CKDFetchBatchedRecordsOperation numRequestsSent]
  -[CKDFetchBatchedRecordsOperation setNumRequestsSent:]
  -[CKDFetchBatchedRecordsOperation setRecordFetcher:]
  -[CKDFetchBatchedRecordsOperation setFetchRecordsGroup:]
  -[CKDFetchBatchedRecordsOperation setRequestInfos:]
  -[CKDFetchBatchedRecordsOperation desiredAssetKeys]
  -[CKDFetchBatchedRecordsOperation recordCache]
  -[CKDFetchBatchedRecordsOperation _noteCompletedURLRequest:withSchedulerInfo:]
  -[CKDFetchBatchedRecordsOperation _noteChangedRecordWithID:recordType:record:error:]
  -[CKDFetchBatchedRecordsOperation _possiblyWrapError:forRecordWithID:withCode:format:]
  -[CKDFetchBatchedRecordsOperation _noteDeletedRecordWithID:recordType:]
  -[CKDFetchBatchedRecordsOperation _createAndConfigureURLRequestForZoneIDs:optionsByZoneID:]
  -[CKDFetchBatchedRecordsOperation _optionsForZonesWithPendingChangesAfterRequest:]
  -[CKDFetchBatchedRecordsOperation _sendFetchChangesRequestForZoneIDs:withOptions:previousRequestSchedulerInfo:]
  -[CKDFetchBatchedRecordsOperation _handleFetchChangesRequestFinishedWithSchedulerInfo:]
  -[CKDFetchBatchedRecordsOperation _noteOperationBeginning]
  -[CKDFetchBatchedRecordsOperation _noteOperationFinishedBlockEnd]
  -[CKDFetchBatchedRecordsOperation _handleChangedRecords:perRequestSchedulerInfo:]
  -[CKDFetchBatchedRecordsOperation _handleRecordDelete:recordType:perRequestSchedulerInfo:]
  -[CKDFetchBatchedRecordsOperation _noteOperationEnding]


CKDFetchBatchedRecordsOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics <NSSecureCoding>
 @property  NSArray *recordZoneIDs
 @property  NSDictionary *configurationsByRecordZoneID
 @property  BOOL shouldFetchAssetContents
 @property  BOOL fetchAllChanges
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  BOOL shouldReportAllPerItemFailures
 @property  BOOL forcePCSDecryptionAttempt

  // class methods
  +[CKDFetchBatchedRecordsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKDFetchBatchedRecordsOperationInfo encodeWithCoder:]
  -[CKDFetchBatchedRecordsOperationInfo initWithCoder:]
  -[CKDFetchBatchedRecordsOperationInfo .cxx_destruct]
  -[CKDFetchBatchedRecordsOperationInfo setFetchAllChanges:]
  -[CKDFetchBatchedRecordsOperationInfo recordZoneIDs]
  -[CKDFetchBatchedRecordsOperationInfo setRecordZoneIDs:]
  -[CKDFetchBatchedRecordsOperationInfo fetchAllChanges]
  -[CKDFetchBatchedRecordsOperationInfo configurationsByRecordZoneID]
  -[CKDFetchBatchedRecordsOperationInfo setConfigurationsByRecordZoneID:]
  -[CKDFetchBatchedRecordsOperationInfo shouldFetchAssetContents]
  -[CKDFetchBatchedRecordsOperationInfo setShouldFetchAssetContents:]
  -[CKDFetchBatchedRecordsOperationInfo assetTransferOptionsByRecordTypeAndKey]
  -[CKDFetchBatchedRecordsOperationInfo setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKDFetchBatchedRecordsOperationInfo setShouldReportAllPerItemFailures:]
  -[CKDFetchBatchedRecordsOperationInfo shouldReportAllPerItemFailures]
  -[CKDFetchBatchedRecordsOperationInfo forcePCSDecryptionAttempt]
  -[CKDFetchBatchedRecordsOperationInfo setForcePCSDecryptionAttempt:]


CKDFetchRecordZoneChangesOperation : CKDFetchBatchedRecordsOperation
 @property  long long changeTypes
 @property  CKDFetchZoneChangesRequestOperationResult *savedResult
 @property  BOOL clientIsUsingLegacyCKFetchRecordChangesOperationAPI
 @property  @? recordChangedBlock
 @property  @? serverChangeTokenUpdatedBlock

  // instance methods
  -[CKDFetchRecordZoneChangesOperation .cxx_destruct]
  -[CKDFetchRecordZoneChangesOperation setRecordChangedBlock:]
  -[CKDFetchRecordZoneChangesOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchRecordZoneChangesOperation activityCreate]
  -[CKDFetchRecordZoneChangesOperation setChangeTypes:]
  -[CKDFetchRecordZoneChangesOperation recordChangedBlock]
  -[CKDFetchRecordZoneChangesOperation changeTypes]
  -[CKDFetchRecordZoneChangesOperation initWithOperationInfo:clientContext:]
  -[CKDFetchRecordZoneChangesOperation setServerChangeTokenUpdatedBlock:]
  -[CKDFetchRecordZoneChangesOperation pipeliningDescription]
  -[CKDFetchRecordZoneChangesOperation operationResultClass]
  -[CKDFetchRecordZoneChangesOperation fillOutOperationResult:]
  -[CKDFetchRecordZoneChangesOperation analyticsPayload]
  -[CKDFetchRecordZoneChangesOperation _noteCompletedURLRequest:withSchedulerInfo:]
  -[CKDFetchRecordZoneChangesOperation _noteChangedRecordWithID:recordType:record:error:]
  -[CKDFetchRecordZoneChangesOperation _noteDeletedRecordWithID:recordType:]
  -[CKDFetchRecordZoneChangesOperation _createAndConfigureURLRequestForZoneIDs:optionsByZoneID:]
  -[CKDFetchRecordZoneChangesOperation _optionsForZonesWithPendingChangesAfterRequest:]
  -[CKDFetchRecordZoneChangesOperation _noteOperationBeginning]
  -[CKDFetchRecordZoneChangesOperation _noteOperationFinishedBlockEnd]
  -[CKDFetchRecordZoneChangesOperation _noteOperationEnding]
  -[CKDFetchRecordZoneChangesOperation clientIsUsingLegacyCKFetchRecordChangesOperationAPI]
  -[CKDFetchRecordZoneChangesOperation setSavedResult:]
  -[CKDFetchRecordZoneChangesOperation serverChangeTokenUpdatedBlock]
  -[CKDFetchRecordZoneChangesOperation savedResult]
  -[CKDFetchRecordZoneChangesOperation setClientIsUsingLegacyCKFetchRecordChangesOperationAPI:]


CKDFetchDatabaseChangesOperation : CKDDatabaseOperation <CKDOperationPipelining>
 @property  CKServerChangeToken *previousServerChangeToken
 @property  unsigned long resultsLimit
 @property  BOOL fetchAllChanges
 @property  CKServerChangeToken *serverChangeToken
 @property  long long status
 @property  unsigned long numRequestsSent
 @property  NSObject<OS_dispatch_group> *fetchZonesGroup
 @property  NSMutableArray *requestInfos
 @property  @? recordZoneWithIDChangedBlock
 @property  @? recordZoneWithIDWasDeletedBlock
 @property  @? recordZoneWithIDWasPurgedBlock
 @property  @? serverChangeTokenUpdatedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *pipeliningDescription
 @property  NSObject<OS_dispatch_queue> *callbackQueue

  // instance methods
  -[CKDFetchDatabaseChangesOperation .cxx_destruct]
  -[CKDFetchDatabaseChangesOperation main]
  -[CKDFetchDatabaseChangesOperation status]
  -[CKDFetchDatabaseChangesOperation setPreviousServerChangeToken:]
  -[CKDFetchDatabaseChangesOperation setFetchAllChanges:]
  -[CKDFetchDatabaseChangesOperation setRecordZoneWithIDChangedBlock:]
  -[CKDFetchDatabaseChangesOperation setRecordZoneWithIDWasDeletedBlock:]
  -[CKDFetchDatabaseChangesOperation setResultsLimit:]
  -[CKDFetchDatabaseChangesOperation setStatus:]
  -[CKDFetchDatabaseChangesOperation setRecordZoneWithIDWasPurgedBlock:]
  -[CKDFetchDatabaseChangesOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchDatabaseChangesOperation activityCreate]
  -[CKDFetchDatabaseChangesOperation previousServerChangeToken]
  -[CKDFetchDatabaseChangesOperation resultsLimit]
  -[CKDFetchDatabaseChangesOperation fetchAllChanges]
  -[CKDFetchDatabaseChangesOperation recordZoneWithIDChangedBlock]
  -[CKDFetchDatabaseChangesOperation recordZoneWithIDWasDeletedBlock]
  -[CKDFetchDatabaseChangesOperation recordZoneWithIDWasPurgedBlock]
  -[CKDFetchDatabaseChangesOperation serverChangeToken]
  -[CKDFetchDatabaseChangesOperation setServerChangeToken:]
  -[CKDFetchDatabaseChangesOperation requestInfos]
  -[CKDFetchDatabaseChangesOperation initWithOperationInfo:clientContext:]
  -[CKDFetchDatabaseChangesOperation setServerChangeTokenUpdatedBlock:]
  -[CKDFetchDatabaseChangesOperation pipeliningDescription]
  -[CKDFetchDatabaseChangesOperation operationResultClass]
  -[CKDFetchDatabaseChangesOperation fillOutOperationResult:]
  -[CKDFetchDatabaseChangesOperation analyticsPayload]
  -[CKDFetchDatabaseChangesOperation numRequestsSent]
  -[CKDFetchDatabaseChangesOperation setNumRequestsSent:]
  -[CKDFetchDatabaseChangesOperation setRequestInfos:]
  -[CKDFetchDatabaseChangesOperation serverChangeTokenUpdatedBlock]
  -[CKDFetchDatabaseChangesOperation fetchZonesGroup]
  -[CKDFetchDatabaseChangesOperation _sendFetchDatabaseChangesRequestWithChangeToken:previousRequestSchedulerInfo:]
  -[CKDFetchDatabaseChangesOperation _handleFetchDatabaseChangesRequestFinishedWithSchedulerInfo:]
  -[CKDFetchDatabaseChangesOperation setFetchZonesGroup:]


CKDFetchWhitelistedBundleIDsURLRequest : CKDURLRequest
 @property  @? bundleIDsFetchedBlock

  // instance methods
  -[CKDFetchWhitelistedBundleIDsURLRequest .cxx_destruct]
  -[CKDFetchWhitelistedBundleIDsURLRequest operationType]
  -[CKDFetchWhitelistedBundleIDsURLRequest sourceApplicationBundleIdentifier]
  -[CKDFetchWhitelistedBundleIDsURLRequest generateRequestOperations]
  -[CKDFetchWhitelistedBundleIDsURLRequest requestDidParseProtobufObject:]
  -[CKDFetchWhitelistedBundleIDsURLRequest requestDidParseNodeFailure:]
  -[CKDFetchWhitelistedBundleIDsURLRequest requestOperationClasses]
  -[CKDFetchWhitelistedBundleIDsURLRequest requiresTokenRegistration]
  -[CKDFetchWhitelistedBundleIDsURLRequest setBundleIDsFetchedBlock:]
  -[CKDFetchWhitelistedBundleIDsURLRequest bundleIDsFetchedBlock]


CKDRecordDownloadTask : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKRecord *record
 @property  NSError *error
 @property  NSMutableArray *assetsToDownload
 @property  NSMutableArray *assetsToDownloadInMemory
 @property  NSMutableArray *packageIndexSets
 @property  NSMutableArray *assetURLInfosToFillOut
 @property  NSObject<OS_dispatch_group> *group
 @property  CKDProgressTracker *progressTracker

  // instance methods
  -[CKDRecordDownloadTask .cxx_destruct]
  -[CKDRecordDownloadTask setGroup:]
  -[CKDRecordDownloadTask error]
  -[CKDRecordDownloadTask setError:]
  -[CKDRecordDownloadTask group]
  -[CKDRecordDownloadTask record]
  -[CKDRecordDownloadTask setRecord:]
  -[CKDRecordDownloadTask setAssetsToDownload:]
  -[CKDRecordDownloadTask assetsToDownload]
  -[CKDRecordDownloadTask progressTracker]
  -[CKDRecordDownloadTask setProgressTracker:]
  -[CKDRecordDownloadTask packageIndexSets]
  -[CKDRecordDownloadTask assetsToDownloadInMemory]
  -[CKDRecordDownloadTask assetURLInfosToFillOut]
  -[CKDRecordDownloadTask setPackageIndexSets:]
  -[CKDRecordDownloadTask setAssetsToDownloadInMemory:]
  -[CKDRecordDownloadTask setAssetURLInfosToFillOut:]
  -[CKDRecordDownloadTask initWithRecord:trackProgress:assetsToDownload:assetsToDownloadInMemory:packageIndexSets:assetURLInfosToFillOut:]
  -[CKDRecordDownloadTask didDownloadAsset:error:]
  -[CKDRecordDownloadTask didFillOutURLInfo:error:]
  -[CKDRecordDownloadTask didCompleteTaskWithError:]


CKDFetchRecordsOperation : CKDDatabaseOperation
 @property  NSArray *recordIDsToFetch
 @property  NSMutableDictionary *cachedRecords
 @property  NSSet *desiredKeySet
 @property  NSDictionary *recordIDsToETags
 @property  NSDictionary *recordIDsToVersionETags
 @property  NSDictionary *desiredPackageFileIndices
 @property  NSObject<OS_dispatch_group> *fetchRecordsGroup
 @property  NSMutableDictionary *errorsByRecordID
 @property  NSMapTable *downloadTasksByRecordID
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  BOOL shouldFetchAssetContent
 @property  BOOL shouldFetchAssetContentInMemory
 @property  NSSet *assetFieldNamesToPublishURLs
 @property  unsigned long requestedTTL
 @property  unsigned long URLOptions
 @property  CKDRecordCache *cache
 @property  CKDDecryptRecordsOperation *recordDecryptOperation
 @property  BOOL hasRecordDecryptOperation
 @property  NSMutableArray *recordIDsToRefetch
 @property  NSMutableDictionary *keyOrErrorForHostname
 @property  NSMutableArray *shareRecordsToUpdate
 @property  NSDictionary *webSharingIdentityDataByRecordID
 @property  BOOL useCachedEtags
 @property  BOOL useRecordCache
 @property  BOOL forcePCSDecrypt
 @property  BOOL skipDecryption
 @property  NSArray *fullRecordsToFetch
 @property  @? recordFetchProgressBlock
 @property  @? recordFetchCommandBlock
 @property  @? recordFetchCompletionBlock

  // instance methods
  -[CKDFetchRecordsOperation .cxx_destruct]
  -[CKDFetchRecordsOperation main]
  -[CKDFetchRecordsOperation finishWithError:]
  -[CKDFetchRecordsOperation setCache:]
  -[CKDFetchRecordsOperation cache]
  -[CKDFetchRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchRecordsOperation activityCreate]
  -[CKDFetchRecordsOperation assetTransferOptionsByRecordTypeAndKey]
  -[CKDFetchRecordsOperation setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKDFetchRecordsOperation shouldFetchAssetContent]
  -[CKDFetchRecordsOperation shouldFetchAssetContentInMemory]
  -[CKDFetchRecordsOperation setShouldFetchAssetContent:]
  -[CKDFetchRecordsOperation setShouldFetchAssetContentInMemory:]
  -[CKDFetchRecordsOperation requestedTTL]
  -[CKDFetchRecordsOperation setRequestedTTL:]
  -[CKDFetchRecordsOperation URLOptions]
  -[CKDFetchRecordsOperation setURLOptions:]
  -[CKDFetchRecordsOperation recordIDsToETags]
  -[CKDFetchRecordsOperation setRecordIDsToETags:]
  -[CKDFetchRecordsOperation recordIDsToVersionETags]
  -[CKDFetchRecordsOperation setRecordIDsToVersionETags:]
  -[CKDFetchRecordsOperation desiredPackageFileIndices]
  -[CKDFetchRecordsOperation setDesiredPackageFileIndices:]
  -[CKDFetchRecordsOperation webSharingIdentityDataByRecordID]
  -[CKDFetchRecordsOperation setWebSharingIdentityDataByRecordID:]
  -[CKDFetchRecordsOperation assetFieldNamesToPublishURLs]
  -[CKDFetchRecordsOperation setAssetFieldNamesToPublishURLs:]
  -[CKDFetchRecordsOperation cachedRecords]
  -[CKDFetchRecordsOperation setCachedRecords:]
  -[CKDFetchRecordsOperation _downloadAssets]
  -[CKDFetchRecordsOperation errorsByRecordID]
  -[CKDFetchRecordsOperation setErrorsByRecordID:]
  -[CKDFetchRecordsOperation initWithOperationInfo:clientContext:]
  -[CKDFetchRecordsOperation setRecordFetchProgressBlock:]
  -[CKDFetchRecordsOperation setRecordFetchCommandBlock:]
  -[CKDFetchRecordsOperation setRecordFetchCompletionBlock:]
  -[CKDFetchRecordsOperation nameForState:]
  -[CKDFetchRecordsOperation makeStateTransition]
  -[CKDFetchRecordsOperation fetchRecordsGroup]
  -[CKDFetchRecordsOperation desiredKeySet]
  -[CKDFetchRecordsOperation setDesiredKeySet:]
  -[CKDFetchRecordsOperation setFetchRecordsGroup:]
  -[CKDFetchRecordsOperation setUseCachedEtags:]
  -[CKDFetchRecordsOperation setSkipDecryption:]
  -[CKDFetchRecordsOperation setFullRecordsToFetch:]
  -[CKDFetchRecordsOperation setForcePCSDecrypt:]
  -[CKDFetchRecordsOperation keyOrErrorForHostname]
  -[CKDFetchRecordsOperation setKeyOrErrorForHostname:]
  -[CKDFetchRecordsOperation desiredIndexedListKeys]
  -[CKDFetchRecordsOperation useRecordCache]
  -[CKDFetchRecordsOperation setUseRecordCache:]
  -[CKDFetchRecordsOperation recordFetchCompletionBlock]
  -[CKDFetchRecordsOperation recordFetchProgressBlock]
  -[CKDFetchRecordsOperation recordFetchCommandBlock]
  -[CKDFetchRecordsOperation recordIDsToFetch]
  -[CKDFetchRecordsOperation fullRecordsToFetch]
  -[CKDFetchRecordsOperation fetchRecordsWithIDs:andFullRecords:]
  -[CKDFetchRecordsOperation recordIDsToRefetch]
  -[CKDFetchRecordsOperation _fetchCloudCerts]
  -[CKDFetchRecordsOperation _saveUpdatedShareRecords]
  -[CKDFetchRecordsOperation shareRecordsToUpdate]
  -[CKDFetchRecordsOperation setError:forRecordID:]
  -[CKDFetchRecordsOperation _continueHandleFetchedRecord:recordID:]
  -[CKDFetchRecordsOperation useCachedEtags]
  -[CKDFetchRecordsOperation _findSpecialParticipantsOnShare:identityDelegate:]
  -[CKDFetchRecordsOperation _handleRecordFetch:recordID:etagMatched:responseCode:]
  -[CKDFetchRecordsOperation hasRecordDecryptOperation]
  -[CKDFetchRecordsOperation recordDecryptOperation]
  -[CKDFetchRecordsOperation errorForRecordID:]
  -[CKDFetchRecordsOperation _addDownloadTaskForRecord:completionBlock:]
  -[CKDFetchRecordsOperation forcePCSDecrypt]
  -[CKDFetchRecordsOperation _handleSharePCSPrepForShare:recordID:]
  -[CKDFetchRecordsOperation _decryptPropertiesIfNeededForRecord:record:]
  -[CKDFetchRecordsOperation skipDecryption]
  -[CKDFetchRecordsOperation _decryptPropertiesOnRecord:recordID:]
  -[CKDFetchRecordsOperation _prepareAsset:record:recordKey:assetTransferOptions:]
  -[CKDFetchRecordsOperation downloadTasksByRecordID]
  -[CKDFetchRecordsOperation _finishAllDownloadTasksWithError:]
  -[CKDFetchRecordsOperation _didDownloadAssetsWithError:]
  -[CKDFetchRecordsOperation setRecordIDsToFetch:]
  -[CKDFetchRecordsOperation setDownloadTasksByRecordID:]
  -[CKDFetchRecordsOperation setRecordIDsToRefetch:]
  -[CKDFetchRecordsOperation setShareRecordsToUpdate:]


CKDGetUserRecordOperation : CKDFetchRecordsOperation
 @property  CKRecord *userRecord

  // instance methods
  -[CKDGetUserRecordOperation .cxx_destruct]
  -[CKDGetUserRecordOperation main]
  -[CKDGetUserRecordOperation userRecord]
  -[CKDGetUserRecordOperation analyticsPayload]
  -[CKDGetUserRecordOperation setUserRecord:]
  -[CKDGetUserRecordOperation fetchRecordsWithIDs:andFullRecords:]


CKDPCSCacheFetchOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  <CKSQLiteItem> *itemID
 @property  CKDPCSCache *cache
 @property  unsigned long options

  // instance methods
  -[CKDPCSCacheFetchOperationInfo options]
  -[CKDPCSCacheFetchOperationInfo .cxx_destruct]
  -[CKDPCSCacheFetchOperationInfo setOptions:]
  -[CKDPCSCacheFetchOperationInfo itemID]
  -[CKDPCSCacheFetchOperationInfo setCache:]
  -[CKDPCSCacheFetchOperationInfo cache]
  -[CKDPCSCacheFetchOperationInfo setItemID:]


CKDPCSCacheFetchOperation : CKDDatabaseOperation
 @property  CKDPCSCache *cache
 @property  BOOL willRetryFetchSuperCalled
 @property  <CKSQLiteItem> *itemID
 @property  unsigned long fetchOptions
 @property  BOOL didFetchData
 @property  CKDPCSData *pcsData
 @property  NSError *fetchError
 @property  NSError *dependentPCSFetchError
 @property  BOOL wasFetchedFromCache
 @property  int numRetries
 @property  BOOL shouldRetry
 @property  CKDRecordPCSData *parentPCSData
 @property  BOOL hasAllPCSData
 @property  NSString *itemTypeName
 @property  BOOL pcsDataInvalidated
 @property  NSObject<OS_dispatch_group> *fetchGroup

  // instance methods
  -[CKDPCSCacheFetchOperation .cxx_destruct]
  -[CKDPCSCacheFetchOperation main]
  -[CKDPCSCacheFetchOperation itemID]
  -[CKDPCSCacheFetchOperation setCache:]
  -[CKDPCSCacheFetchOperation cache]
  -[CKDPCSCacheFetchOperation setItemID:]
  -[CKDPCSCacheFetchOperation _finishOnCallbackQueueWithError:]
  -[CKDPCSCacheFetchOperation numRetries]
  -[CKDPCSCacheFetchOperation setFetchOptions:]
  -[CKDPCSCacheFetchOperation fetchOptions]
  -[CKDPCSCacheFetchOperation shouldRetry]
  -[CKDPCSCacheFetchOperation setShouldRetry:]
  -[CKDPCSCacheFetchOperation setFetchError:]
  -[CKDPCSCacheFetchOperation fetchError]
  -[CKDPCSCacheFetchOperation fetchGroup]
  -[CKDPCSCacheFetchOperation canBeUsedForOperation:withOptions:]
  -[CKDPCSCacheFetchOperation setPcsDataInvalidated:]
  -[CKDPCSCacheFetchOperation isPCSDataInvalidated]
  -[CKDPCSCacheFetchOperation pcsData]
  -[CKDPCSCacheFetchOperation initWithOperationInfo:clientContext:]
  -[CKDPCSCacheFetchOperation setPcsData:]
  -[CKDPCSCacheFetchOperation nameForState:]
  -[CKDPCSCacheFetchOperation _errorShouldImpactFlowControl:]
  -[CKDPCSCacheFetchOperation makeStateTransition]
  -[CKDPCSCacheFetchOperation didFetchData]
  -[CKDPCSCacheFetchOperation setDidFetchData:]
  -[CKDPCSCacheFetchOperation setWasFetchedFromCache:]
  -[CKDPCSCacheFetchOperation setDependentPCSFetchError:]
  -[CKDPCSCacheFetchOperation dependentPCSFetchError]
  -[CKDPCSCacheFetchOperation wasFetchedFromCache]
  -[CKDPCSCacheFetchOperation itemTypeName]
  -[CKDPCSCacheFetchOperation hasAllPCSData]
  -[CKDPCSCacheFetchOperation _willRetryFetch]
  -[CKDPCSCacheFetchOperation _fetchPCSDataFromDatabase]
  -[CKDPCSCacheFetchOperation _fetchDependentPCS]
  -[CKDPCSCacheFetchOperation _fetchPCSDataFromServer]
  -[CKDPCSCacheFetchOperation _createAdditionalPCS]
  -[CKDPCSCacheFetchOperation _decryptPCS]
  -[CKDPCSCacheFetchOperation _saveUpdatedPCSToServer]
  -[CKDPCSCacheFetchOperation _savePCSDataToCache]
  -[CKDPCSCacheFetchOperation setParentPCSData:]
  -[CKDPCSCacheFetchOperation parentPCSData]
  -[CKDPCSCacheFetchOperation setWillRetryFetchSuperCalled:]
  -[CKDPCSCacheFetchOperation willRetryFetchSuperCalled]
  -[CKDPCSCacheFetchOperation setNumRetries:]
  -[CKDPCSCacheFetchOperation needsAdditionalPCSCreation]


CKDArchiveRecordsOperation : CKDDatabaseOperation
 @property  NSArray *recordIDs
 @property  @? recordArchivedBlock

  // instance methods
  -[CKDArchiveRecordsOperation .cxx_destruct]
  -[CKDArchiveRecordsOperation main]
  -[CKDArchiveRecordsOperation setRecordIDs:]
  -[CKDArchiveRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKDArchiveRecordsOperation activityCreate]
  -[CKDArchiveRecordsOperation recordIDs]
  -[CKDArchiveRecordsOperation recordArchivedBlock]
  -[CKDArchiveRecordsOperation setRecordArchivedBlock:]
  -[CKDArchiveRecordsOperation initWithOperationInfo:clientContext:]
  -[CKDArchiveRecordsOperation _handleRecordArchived:responseCode:]


CKDMarkNotificationsReadOperation : CKDOperation
 @property  NSArray *notificationIDs
 @property  NSMutableDictionary *errorByNotificationID
 @property  NSMutableSet *successfulNotificationIDs
 @property  @? notificationMarkedRead

  // class methods
  +[CKDMarkNotificationsReadOperation isPredominatelyDownload]

  // instance methods
  -[CKDMarkNotificationsReadOperation .cxx_destruct]
  -[CKDMarkNotificationsReadOperation main]
  -[CKDMarkNotificationsReadOperation _finishOnCallbackQueueWithError:]
  -[CKDMarkNotificationsReadOperation activityCreate]
  -[CKDMarkNotificationsReadOperation notificationIDs]
  -[CKDMarkNotificationsReadOperation setNotificationIDs:]
  -[CKDMarkNotificationsReadOperation initWithOperationInfo:clientContext:]
  -[CKDMarkNotificationsReadOperation setNotificationMarkedRead:]
  -[CKDMarkNotificationsReadOperation successfulNotificationIDs]
  -[CKDMarkNotificationsReadOperation errorByNotificationID]
  -[CKDMarkNotificationsReadOperation _handleNotificationID:withResponse:]
  -[CKDMarkNotificationsReadOperation notificationMarkedRead]
  -[CKDMarkNotificationsReadOperation setErrorByNotificationID:]
  -[CKDMarkNotificationsReadOperation setSuccessfulNotificationIDs:]


CKDFetchShareParticipantKeyOperation : CKDDatabaseOperation
 @property  NSMutableArray *shareIDs
 @property  NSDictionary *baseTokensByShareID
 @property  NSDictionary *childRecordIDsByShareID
 @property  NSMutableDictionary *sharesNeedingUpdateByID
 @property  BOOL hasAttemptedShareUpdate
 @property  @? shareParticipantKeyFetchedBlock

  // instance methods
  -[CKDFetchShareParticipantKeyOperation .cxx_destruct]
  -[CKDFetchShareParticipantKeyOperation main]
  -[CKDFetchShareParticipantKeyOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchShareParticipantKeyOperation activityCreate]
  -[CKDFetchShareParticipantKeyOperation shareIDs]
  -[CKDFetchShareParticipantKeyOperation setShareIDs:]
  -[CKDFetchShareParticipantKeyOperation baseTokensByShareID]
  -[CKDFetchShareParticipantKeyOperation setBaseTokensByShareID:]
  -[CKDFetchShareParticipantKeyOperation childRecordIDsByShareID]
  -[CKDFetchShareParticipantKeyOperation setChildRecordIDsByShareID:]
  -[CKDFetchShareParticipantKeyOperation shareParticipantKeyFetchedBlock]
  -[CKDFetchShareParticipantKeyOperation setShareParticipantKeyFetchedBlock:]
  -[CKDFetchShareParticipantKeyOperation initWithOperationInfo:clientContext:]
  -[CKDFetchShareParticipantKeyOperation nameForState:]
  -[CKDFetchShareParticipantKeyOperation makeStateTransition]
  -[CKDFetchShareParticipantKeyOperation fetchSharesFromServer]
  -[CKDFetchShareParticipantKeyOperation sharesNeedingUpdateByID]
  -[CKDFetchShareParticipantKeyOperation hasAttemptedShareUpdate]
  -[CKDFetchShareParticipantKeyOperation setHasAttemptedShareUpdate:]
  -[CKDFetchShareParticipantKeyOperation updateShares]
  -[CKDFetchShareParticipantKeyOperation _sendErrorForFailedShares]
  -[CKDFetchShareParticipantKeyOperation _performCallbackForShareID:withParticipantKey:error:]
  -[CKDFetchShareParticipantKeyOperation _participantKeyFromShare:withError:]
  -[CKDFetchShareParticipantKeyOperation _handleFetchedShare:withID:error:]
  -[CKDFetchShareParticipantKeyOperation setSharesNeedingUpdateByID:]


CKDDeviceManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSMutableDictionary *deviceIDs

  // class methods
  +[CKDDeviceManager sharedManager]

  // instance methods
  -[CKDDeviceManager init]
  -[CKDDeviceManager setQueue:]
  -[CKDDeviceManager queue]
  -[CKDDeviceManager .cxx_destruct]
  -[CKDDeviceManager setDeviceIDs:]
  -[CKDDeviceManager deviceIDs]
  -[CKDDeviceManager deviceIdentifierForContext:]
  -[CKDDeviceManager _serviceForContext:]
  -[CKDDeviceManager _lookupKeyForContext:]
  -[CKDDeviceManager _savedDeviceIdentifierForContext:]
  -[CKDDeviceManager _saveDeviceIdentifier:forContext:]


CKDPUserPrivacySettingsResetResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPUserPrivacySettingsResetResponse isEqual:]
  -[CKDPUserPrivacySettingsResetResponse copyWithZone:]
  -[CKDPUserPrivacySettingsResetResponse dictionaryRepresentation]
  -[CKDPUserPrivacySettingsResetResponse writeTo:]
  -[CKDPUserPrivacySettingsResetResponse mergeFrom:]
  -[CKDPUserPrivacySettingsResetResponse readFrom:]
  -[CKDPUserPrivacySettingsResetResponse copyTo:]


CKDModifyRecordsOperation : CKDDatabaseOperation
 @property  NSArray *recordsToSave
 @property  NSArray *recordIDsToDelete
 @property  NSDictionary *recordIDsToDeleteToEtags
 @property  NSDictionary *conflictLosersToResolveByRecordID
 @property  NSDictionary *pluginFieldsForRecordDeletesByID
 @property  NSDictionary *handlersByRecordID
 @property  NSDictionary *parentsByRecordID
 @property  NSMapTable *handlersByAssetNeedingRecordFetch
 @property  NSMapTable *handlersByAsset
 @property  NSMutableDictionary *modifyHandlersByZoneID
 @property  int saveAttempts
 @property  long long savePolicy
 @property  NSData *clientChangeTokenData
 @property  CKDRecordCache *cache
 @property  BOOL retriedRecords
 @property  BOOL shouldOnlySaveAssetContent
 @property  BOOL haveOutstandingHandlers
 @property  BOOL atomic
 @property  CKDProtocolTranslator *translator
 @property  BOOL shouldReportRecordsInFlight
 @property  NSObject<OS_dispatch_queue> *modifyRecordsQueue
 @property  CKDDecryptRecordsOperation *recordDecryptOperation
 @property  BOOL hasDecryptOperation
 @property  NSData *cachedUserBoundaryKeyData
 @property  NSDictionary *assetUUIDToExpectedProperties
 @property  NSDictionary *packageUUIDToExpectedProperties
 @property  BOOL originatingFromDaemon
 @property  BOOL markAsParticipantNeedsNewInvitationToken
 @property  BOOL requestNeedsUserPublicKeys
 @property  NSArray *userPublicKeys
 @property  C2RequestOptions *streamingAssetRequestOptions
 @property  BOOL retryPCSFailures
 @property  BOOL canSetPreviousProtectionEtag
 @property  BOOL trustProtectionData
 @property  BOOL shouldModifyRecordsInDatabase
 @property  @? saveProgressBlock
 @property  @? saveCompletionBlock
 @property  @? deleteCompletionBlock
 @property  @? uploadCompletionBlock
 @property  @? recordsInFlightBlock

  // class methods
  +[CKDModifyRecordsOperation isPredominatelyDownload]
  +[CKDModifyRecordsOperation _claimPackagesInRecord:error:]

  // instance methods
  -[CKDModifyRecordsOperation .cxx_destruct]
  -[CKDModifyRecordsOperation main]
  -[CKDModifyRecordsOperation finishWithError:]
  -[CKDModifyRecordsOperation setSavePolicy:]
  -[CKDModifyRecordsOperation setAtomic:]
  -[CKDModifyRecordsOperation setCache:]
  -[CKDModifyRecordsOperation cache]
  -[CKDModifyRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKDModifyRecordsOperation activityCreate]
  -[CKDModifyRecordsOperation recordsToSave]
  -[CKDModifyRecordsOperation recordIDsToDelete]
  -[CKDModifyRecordsOperation setStreamingAssetRequestOptions:]
  -[CKDModifyRecordsOperation clientChangeTokenData]
  -[CKDModifyRecordsOperation setClientChangeTokenData:]
  -[CKDModifyRecordsOperation setRecordsToSave:]
  -[CKDModifyRecordsOperation setRecordIDsToDelete:]
  -[CKDModifyRecordsOperation savePolicy]
  -[CKDModifyRecordsOperation shouldOnlySaveAssetContent]
  -[CKDModifyRecordsOperation setShouldOnlySaveAssetContent:]
  -[CKDModifyRecordsOperation recordIDsToDeleteToEtags]
  -[CKDModifyRecordsOperation setRecordIDsToDeleteToEtags:]
  -[CKDModifyRecordsOperation atomic]
  -[CKDModifyRecordsOperation conflictLosersToResolveByRecordID]
  -[CKDModifyRecordsOperation setConflictLosersToResolveByRecordID:]
  -[CKDModifyRecordsOperation pluginFieldsForRecordDeletesByID]
  -[CKDModifyRecordsOperation setPluginFieldsForRecordDeletesByID:]
  -[CKDModifyRecordsOperation recordsInFlightBlock]
  -[CKDModifyRecordsOperation setShouldReportRecordsInFlight:]
  -[CKDModifyRecordsOperation assetUUIDToExpectedProperties]
  -[CKDModifyRecordsOperation setAssetUUIDToExpectedProperties:]
  -[CKDModifyRecordsOperation packageUUIDToExpectedProperties]
  -[CKDModifyRecordsOperation setPackageUUIDToExpectedProperties:]
  -[CKDModifyRecordsOperation markAsParticipantNeedsNewInvitationToken]
  -[CKDModifyRecordsOperation setMarkAsParticipantNeedsNewInvitationToken:]
  -[CKDModifyRecordsOperation setRecordsInFlightBlock:]
  -[CKDModifyRecordsOperation shouldReportRecordsInFlight]
  -[CKDModifyRecordsOperation originatingFromDaemon]
  -[CKDModifyRecordsOperation setOriginatingFromDaemon:]
  -[CKDModifyRecordsOperation saveCompletionBlock]
  -[CKDModifyRecordsOperation initWithOperationInfo:clientContext:]
  -[CKDModifyRecordsOperation setSaveCompletionBlock:]
  -[CKDModifyRecordsOperation setDeleteCompletionBlock:]
  -[CKDModifyRecordsOperation setSaveProgressBlock:]
  -[CKDModifyRecordsOperation setUploadCompletionBlock:]
  -[CKDModifyRecordsOperation nameForState:]
  -[CKDModifyRecordsOperation makeStateTransition]
  -[CKDModifyRecordsOperation analyticsPayload]
  -[CKDModifyRecordsOperation translator]
  -[CKDModifyRecordsOperation _fetchContainerScopedUserID]
  -[CKDModifyRecordsOperation setTranslator:]
  -[CKDModifyRecordsOperation setRetryPCSFailures:]
  -[CKDModifyRecordsOperation setCanSetPreviousProtectionEtag:]
  -[CKDModifyRecordsOperation setTrustProtectionData:]
  -[CKDModifyRecordsOperation deleteCompletionBlock]
  -[CKDModifyRecordsOperation _prepareForUpload]
  -[CKDModifyRecordsOperation uploadCompletionBlock]
  -[CKDModifyRecordsOperation modifyRecordsQueue]
  -[CKDModifyRecordsOperation _fetchSharePCSData]
  -[CKDModifyRecordsOperation parentsByRecordID]
  -[CKDModifyRecordsOperation canSetPreviousProtectionEtag]
  -[CKDModifyRecordsOperation saveAttempts]
  -[CKDModifyRecordsOperation handlersByRecordID]
  -[CKDModifyRecordsOperation retryPCSFailures]
  -[CKDModifyRecordsOperation saveProgressBlock]
  -[CKDModifyRecordsOperation setSaveAttempts:]
  -[CKDModifyRecordsOperation setShouldModifyRecordsInDatabase:]
  -[CKDModifyRecordsOperation recordDecryptOperation]
  -[CKDModifyRecordsOperation modifyHandlersByZoneID]
  -[CKDModifyRecordsOperation _performHandlerCallbacks]
  -[CKDModifyRecordsOperation _determineEnvironment]
  -[CKDModifyRecordsOperation _fetchUserPublicKeys]
  -[CKDModifyRecordsOperation _applySideEffects]
  -[CKDModifyRecordsOperation _topoSortRecords]
  -[CKDModifyRecordsOperation _prepareParentPCS]
  -[CKDModifyRecordsOperation _fetchRecordPCSData]
  -[CKDModifyRecordsOperation _fetchAssetRecordsForRereferencing]
  -[CKDModifyRecordsOperation _uploadAssets]
  -[CKDModifyRecordsOperation _markRecordHandlersAsUploaded]
  -[CKDModifyRecordsOperation _prepareRecordsForSave]
  -[CKDModifyRecordsOperation _verifyRecordEncryption]
  -[CKDModifyRecordsOperation _reportRecordsInFlight]
  -[CKDModifyRecordsOperation shouldModifyRecordsInDatabase]
  -[CKDModifyRecordsOperation _continueRecordsModify]
  -[CKDModifyRecordsOperation _hasHandlerInState:]
  -[CKDModifyRecordsOperation _fetchShareParticipants]
  -[CKDModifyRecordsOperation haveOutstandingHandlers]
  -[CKDModifyRecordsOperation deleteCallbackWithMetadata:error:]
  -[CKDModifyRecordsOperation saveCallbackWithMetadata:error:]
  -[CKDModifyRecordsOperation streamingAssetRequestOptions]
  -[CKDModifyRecordsOperation setHaveOutstandingHandlers:]
  -[CKDModifyRecordsOperation callbackWithMetadata:error:]
  -[CKDModifyRecordsOperation _performCallbacksForNonAtomicZoneHandlers:]
  -[CKDModifyRecordsOperation _performCallbacksForAtomicZoneHandlers:]
  -[CKDModifyRecordsOperation requestNeedsUserPublicKeys]
  -[CKDModifyRecordsOperation userPublicKeys]
  -[CKDModifyRecordsOperation setUserPublicKeys:]
  -[CKDModifyRecordsOperation _enumerateHandlersInState:withBlock:]
  -[CKDModifyRecordsOperation _shouldToposortInContainerID:]
  -[CKDModifyRecordsOperation _topoSortRecordsForHandlers:]
  -[CKDModifyRecordsOperation setParentsByRecordID:]
  -[CKDModifyRecordsOperation handlersByAssetNeedingRecordFetch]
  -[CKDModifyRecordsOperation setHandlersByAssetNeedingRecordFetch:]
  -[CKDModifyRecordsOperation assetArrayByRecordID:didFetchRecord:recordID:error:]
  -[CKDModifyRecordsOperation _didCompleteRecordFetchOperation:assetArrayByRecordID:]
  -[CKDModifyRecordsOperation _prepareAssetsForUpload]
  -[CKDModifyRecordsOperation setHandlersByAsset:]
  -[CKDModifyRecordsOperation handlersByAsset]
  -[CKDModifyRecordsOperation cachedUserBoundaryKeyData]
  -[CKDModifyRecordsOperation _fetchUserBoundaryKey]
  -[CKDModifyRecordsOperation setCachedUserBoundaryKeyData:]
  -[CKDModifyRecordsOperation _setBoundaryKeyOnAssetsToUpload:]
  -[CKDModifyRecordsOperation _handleDecryptionFailure:forRecordID:]
  -[CKDModifyRecordsOperation _reallyHandleRecordSaved:handler:etag:dateStatistics:responseCode:keysAssociatedWithETag:recordForOplockFailure:decryptedServerRecord:]
  -[CKDModifyRecordsOperation requestedFieldsByRecordIDForRecords:]
  -[CKDModifyRecordsOperation _handleRecordSaved:handler:etag:dateStatistics:responseCode:keysAssociatedWithETag:recordForOplockFailure:serverRecord:]
  -[CKDModifyRecordsOperation _handleRecordDeleted:handler:responseCode:]
  -[CKDModifyRecordsOperation _createModifyRequestWithRecordsToSave:recordsToDelete:recordsToDeleteToEtags:handlersByRecordID:]
  -[CKDModifyRecordsOperation _clearProtectionDataIfNotEntitled]
  -[CKDModifyRecordsOperation trustProtectionData]
  -[CKDModifyRecordsOperation hasDecryptOperation]
  -[CKDModifyRecordsOperation _containerIDsNotToTopoSort]
  -[CKDModifyRecordsOperation setHandlersByRecordID:]
  -[CKDModifyRecordsOperation setModifyHandlersByZoneID:]
  -[CKDModifyRecordsOperation retriedRecords]
  -[CKDModifyRecordsOperation setRetriedRecords:]
  -[CKDModifyRecordsOperation setModifyRecordsQueue:]
  -[CKDModifyRecordsOperation setRequestNeedsUserPublicKeys:]


CKDPCSCacheShareFetchOperation : CKDPCSCacheFetchOperation
 @property  CKRecordID *shareID
 @property  CKDSharePCSData *sharePCSData

  // instance methods
  -[CKDPCSCacheShareFetchOperation shareID]
  -[CKDPCSCacheShareFetchOperation setSharePCSData:]
  -[CKDPCSCacheShareFetchOperation _handlePCSDataFetched:withError:]
  -[CKDPCSCacheShareFetchOperation sharePCSData]
  -[CKDPCSCacheShareFetchOperation itemTypeName]
  -[CKDPCSCacheShareFetchOperation hasAllPCSData]
  -[CKDPCSCacheShareFetchOperation _fetchPCSDataFromDatabase]
  -[CKDPCSCacheShareFetchOperation _fetchPCSDataFromServer]
  -[CKDPCSCacheShareFetchOperation _decryptPCS]
  -[CKDPCSCacheShareFetchOperation _savePCSDataToCache]


CKDPSubscriptionDeleteRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIdentifier
 @property  CKDPIdentifier *identifier

  // class methods
  +[CKDPSubscriptionDeleteRequest options]

  // instance methods
  -[CKDPSubscriptionDeleteRequest isEqual:]
  -[CKDPSubscriptionDeleteRequest copyWithZone:]
  -[CKDPSubscriptionDeleteRequest .cxx_destruct]
  -[CKDPSubscriptionDeleteRequest identifier]
  -[CKDPSubscriptionDeleteRequest setIdentifier:]
  -[CKDPSubscriptionDeleteRequest dictionaryRepresentation]
  -[CKDPSubscriptionDeleteRequest writeTo:]
  -[CKDPSubscriptionDeleteRequest mergeFrom:]
  -[CKDPSubscriptionDeleteRequest readFrom:]
  -[CKDPSubscriptionDeleteRequest copyTo:]
  -[CKDPSubscriptionDeleteRequest requestTypeCode]
  -[CKDPSubscriptionDeleteRequest responseClass]
  -[CKDPSubscriptionDeleteRequest hasIdentifier]


CKDPUserPrivacySettingsResetRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // class methods
  +[CKDPUserPrivacySettingsResetRequest options]

  // instance methods
  -[CKDPUserPrivacySettingsResetRequest isEqual:]
  -[CKDPUserPrivacySettingsResetRequest copyWithZone:]
  -[CKDPUserPrivacySettingsResetRequest dictionaryRepresentation]
  -[CKDPUserPrivacySettingsResetRequest writeTo:]
  -[CKDPUserPrivacySettingsResetRequest mergeFrom:]
  -[CKDPUserPrivacySettingsResetRequest readFrom:]
  -[CKDPUserPrivacySettingsResetRequest copyTo:]
  -[CKDPUserPrivacySettingsResetRequest requestTypeCode]
  -[CKDPUserPrivacySettingsResetRequest responseClass]


CKDPQueryRetrieveResponseQueryResult : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIdentifier
 @property  CKDPRecordIdentifier *identifier
 @property  BOOL hasEtag
 @property  NSString *etag
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasRecord
 @property  CKDPRecord *record

  // instance methods
  -[CKDPQueryRetrieveResponseQueryResult isEqual:]
  -[CKDPQueryRetrieveResponseQueryResult copyWithZone:]
  -[CKDPQueryRetrieveResponseQueryResult type]
  -[CKDPQueryRetrieveResponseQueryResult setType:]
  -[CKDPQueryRetrieveResponseQueryResult .cxx_destruct]
  -[CKDPQueryRetrieveResponseQueryResult identifier]
  -[CKDPQueryRetrieveResponseQueryResult setIdentifier:]
  -[CKDPQueryRetrieveResponseQueryResult dictionaryRepresentation]
  -[CKDPQueryRetrieveResponseQueryResult etag]
  -[CKDPQueryRetrieveResponseQueryResult writeTo:]
  -[CKDPQueryRetrieveResponseQueryResult mergeFrom:]
  -[CKDPQueryRetrieveResponseQueryResult readFrom:]
  -[CKDPQueryRetrieveResponseQueryResult copyTo:]
  -[CKDPQueryRetrieveResponseQueryResult typeAsString:]
  -[CKDPQueryRetrieveResponseQueryResult StringAsType:]
  -[CKDPQueryRetrieveResponseQueryResult setEtag:]
  -[CKDPQueryRetrieveResponseQueryResult hasEtag]
  -[CKDPQueryRetrieveResponseQueryResult setHasType:]
  -[CKDPQueryRetrieveResponseQueryResult hasType]
  -[CKDPQueryRetrieveResponseQueryResult record]
  -[CKDPQueryRetrieveResponseQueryResult setRecord:]
  -[CKDPQueryRetrieveResponseQueryResult hasIdentifier]
  -[CKDPQueryRetrieveResponseQueryResult hasRecord]


CKDMMCSRequestOptions : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  long long databaseScope
 @property  long long containerEnvironment
 @property  NSString *topmostParentOperationID
 @property  NSString *topmostParentOperationGroupID
 @property  NSString *applicationBundleID
 @property  NSString *applicationSecondaryID
 @property  NSString *containerID
 @property  NSArray *zoneNames
 @property  NSString *deviceHardwareID
 @property  NSData *authPutResponse
 @property  NSDictionary *authPutResponseHeaders
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsPowerNapScheduling
 @property  long long qualityOfService
 @property  long long queuePriority
 @property  BOOL resolvedAutomaticallyRetryNetworkFailures
 @property  unsigned long resolvedDiscretionaryNetworkBehavior
 @property  unsigned long duetPreClearedMode
 @property  C2MetricOptions *metricOptions
 @property  unsigned long networkServiceType
 @property  CKOperationMMCSRequestOptions *MMCSRequestOptions

  // instance methods
  -[CKDMMCSRequestOptions .cxx_destruct]
  -[CKDMMCSRequestOptions qualityOfService]
  -[CKDMMCSRequestOptions setQualityOfService:]
  -[CKDMMCSRequestOptions queuePriority]
  -[CKDMMCSRequestOptions setQueuePriority:]
  -[CKDMMCSRequestOptions setAllowsCellularAccess:]
  -[CKDMMCSRequestOptions applicationBundleID]
  -[CKDMMCSRequestOptions allowsCellularAccess]
  -[CKDMMCSRequestOptions setNetworkServiceType:]
  -[CKDMMCSRequestOptions networkServiceType]
  -[CKDMMCSRequestOptions containerID]
  -[CKDMMCSRequestOptions databaseScope]
  -[CKDMMCSRequestOptions setDatabaseScope:]
  -[CKDMMCSRequestOptions CKPropertiesDescription]
  -[CKDMMCSRequestOptions setContainerID:]
  -[CKDMMCSRequestOptions setDuetPreClearedMode:]
  -[CKDMMCSRequestOptions duetPreClearedMode]
  -[CKDMMCSRequestOptions usesBackgroundSession]
  -[CKDMMCSRequestOptions MMCSRequestOptions]
  -[CKDMMCSRequestOptions setMMCSRequestOptions:]
  -[CKDMMCSRequestOptions initWithOperation:]
  -[CKDMMCSRequestOptions setZoneNames:]
  -[CKDMMCSRequestOptions zoneNames]
  -[CKDMMCSRequestOptions setDeviceHardwareID:]
  -[CKDMMCSRequestOptions deviceHardwareID]
  -[CKDMMCSRequestOptions setApplicationBundleID:]
  -[CKDMMCSRequestOptions containerEnvironment]
  -[CKDMMCSRequestOptions setContainerEnvironment:]
  -[CKDMMCSRequestOptions setAllowsPowerNapScheduling:]
  -[CKDMMCSRequestOptions allowsPowerNapScheduling]
  -[CKDMMCSRequestOptions resolvedAutomaticallyRetryNetworkFailures]
  -[CKDMMCSRequestOptions resolvedDiscretionaryNetworkBehavior]
  -[CKDMMCSRequestOptions setMetricOptions:]
  -[CKDMMCSRequestOptions authPutResponse]
  -[CKDMMCSRequestOptions setAuthPutResponse:]
  -[CKDMMCSRequestOptions setAuthPutResponseHeaders:]
  -[CKDMMCSRequestOptions authPutResponseHeaders]
  -[CKDMMCSRequestOptions MMCSOptions]
  -[CKDMMCSRequestOptions applicationSecondaryID]
  -[CKDMMCSRequestOptions topmostParentOperationID]
  -[CKDMMCSRequestOptions topmostParentOperationGroupID]
  -[CKDMMCSRequestOptions setTopmostParentOperationID:]
  -[CKDMMCSRequestOptions setTopmostParentOperationGroupID:]
  -[CKDMMCSRequestOptions setApplicationSecondaryID:]
  -[CKDMMCSRequestOptions setResolvedAutomaticallyRetryNetworkFailures:]
  -[CKDMMCSRequestOptions setResolvedDiscretionaryNetworkBehavior:]
  -[CKDMMCSRequestOptions metricOptions]


CKDPRequestedFields : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *fields
 @property  NSMutableArray *listFields

  // class methods
  +[CKDPRequestedFields fieldsType]
  +[CKDPRequestedFields listFieldType]

  // instance methods
  -[CKDPRequestedFields isEqual:]
  -[CKDPRequestedFields copyWithZone:]
  -[CKDPRequestedFields .cxx_destruct]
  -[CKDPRequestedFields dictionaryRepresentation]
  -[CKDPRequestedFields fields]
  -[CKDPRequestedFields writeTo:]
  -[CKDPRequestedFields mergeFrom:]
  -[CKDPRequestedFields readFrom:]
  -[CKDPRequestedFields copyTo:]
  -[CKDPRequestedFields setFields:]
  -[CKDPRequestedFields addFields:]
  -[CKDPRequestedFields fieldsCount]
  -[CKDPRequestedFields clearFields]
  -[CKDPRequestedFields fieldsAtIndex:]
  -[CKDPRequestedFields addListField:]
  -[CKDPRequestedFields _CKLogToFileHandle:atDepth:]
  -[CKDPRequestedFields listFieldsCount]
  -[CKDPRequestedFields clearListFields]
  -[CKDPRequestedFields listFieldAtIndex:]
  -[CKDPRequestedFields listFields]
  -[CKDPRequestedFields setListFields:]


CKDFetchRecordVersionsOperation : CKDDatabaseOperation
 @property  NSArray *recordIDs
 @property  NSArray *desiredKeys
 @property  NSString *minimumVersionETag
 @property  BOOL isDeleted
 @property  BOOL shouldFetchAssetContent
 @property  NSObject<OS_dispatch_group> *fetchVersionsGroup
 @property  CKDDecryptRecordsOperation *recordDecryptOperation
 @property  @? recordVersionFetchedBlock

  // instance methods
  -[CKDFetchRecordVersionsOperation .cxx_destruct]
  -[CKDFetchRecordVersionsOperation main]
  -[CKDFetchRecordVersionsOperation setDesiredKeys:]
  -[CKDFetchRecordVersionsOperation isDeleted]
  -[CKDFetchRecordVersionsOperation setRecordIDs:]
  -[CKDFetchRecordVersionsOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchRecordVersionsOperation activityCreate]
  -[CKDFetchRecordVersionsOperation recordIDs]
  -[CKDFetchRecordVersionsOperation shouldFetchAssetContent]
  -[CKDFetchRecordVersionsOperation setShouldFetchAssetContent:]
  -[CKDFetchRecordVersionsOperation desiredKeys]
  -[CKDFetchRecordVersionsOperation minimumVersionETag]
  -[CKDFetchRecordVersionsOperation setMinimumVersionETag:]
  -[CKDFetchRecordVersionsOperation setIsDeleted:]
  -[CKDFetchRecordVersionsOperation initWithOperationInfo:clientContext:]
  -[CKDFetchRecordVersionsOperation setRecordVersionFetchedBlock:]
  -[CKDFetchRecordVersionsOperation recordDecryptOperation]
  -[CKDFetchRecordVersionsOperation hasDecryptOperation]
  -[CKDFetchRecordVersionsOperation setFetchVersionsGroup:]
  -[CKDFetchRecordVersionsOperation fetchVersionsGroup]
  -[CKDFetchRecordVersionsOperation recordVersionFetchedBlock]
  -[CKDFetchRecordVersionsOperation _handleRecordVersionsFetchedForID:isDeleted:versions:responseCode:]


CKCDPCodeServiceResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSerializedResult
 @property  NSData *serializedResult
 @property  BOOL hasError
 @property  CKCDPError *error
 @property  NSMutableArray *assetAuthorizationResponses

  // class methods
  +[CKCDPCodeServiceResponse assetAuthorizationResponsesType]

  // instance methods
  -[CKCDPCodeServiceResponse isEqual:]
  -[CKCDPCodeServiceResponse copyWithZone:]
  -[CKCDPCodeServiceResponse .cxx_destruct]
  -[CKCDPCodeServiceResponse error]
  -[CKCDPCodeServiceResponse setError:]
  -[CKCDPCodeServiceResponse dictionaryRepresentation]
  -[CKCDPCodeServiceResponse writeTo:]
  -[CKCDPCodeServiceResponse mergeFrom:]
  -[CKCDPCodeServiceResponse readFrom:]
  -[CKCDPCodeServiceResponse copyTo:]
  -[CKCDPCodeServiceResponse hasError]
  -[CKCDPCodeServiceResponse addAssetAuthorizationResponses:]
  -[CKCDPCodeServiceResponse assetAuthorizationResponsesCount]
  -[CKCDPCodeServiceResponse clearAssetAuthorizationResponses]
  -[CKCDPCodeServiceResponse assetAuthorizationResponsesAtIndex:]
  -[CKCDPCodeServiceResponse assetAuthorizationResponses]
  -[CKCDPCodeServiceResponse setAssetAuthorizationResponses:]
  -[CKCDPCodeServiceResponse serializedResult]
  -[CKCDPCodeServiceResponse setSerializedResult:]
  -[CKCDPCodeServiceResponse hasSerializedResult]


CKDPRecordType : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasName
 @property  NSString *name

  // instance methods
  -[CKDPRecordType isEqual:]
  -[CKDPRecordType name]
  -[CKDPRecordType copyWithZone:]
  -[CKDPRecordType .cxx_destruct]
  -[CKDPRecordType setName:]
  -[CKDPRecordType dictionaryRepresentation]
  -[CKDPRecordType writeTo:]
  -[CKDPRecordType mergeFrom:]
  -[CKDPRecordType readFrom:]
  -[CKDPRecordType copyTo:]
  -[CKDPRecordType hasName]
  -[CKDPRecordType _CKLogToFileHandle:atDepth:]


CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasWrappedInvocationKey
 @property  NSData *wrappedInvocationKey

  // instance methods
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession isEqual:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession copyWithZone:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession .cxx_destruct]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession dictionaryRepresentation]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession writeTo:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession mergeFrom:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession readFrom:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession copyTo:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession setWrappedInvocationKey:]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession hasWrappedInvocationKey]
  -[CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession wrappedInvocationKey]


CKCDPError : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasCode
 @property  int code
 @property  BOOL hasMessage
 @property  NSString *message
 @property  BOOL hasAuxiliaryDomain
 @property  NSString *auxiliaryDomain
 @property  BOOL hasAuxiliaryCode
 @property  int auxiliaryCode
 @property  NSMutableArray *auxiliaryUserInfos

  // class methods
  +[CKCDPError auxiliaryUserInfoType]

  // instance methods
  -[CKCDPError isEqual:]
  -[CKCDPError copyWithZone:]
  -[CKCDPError code]
  -[CKCDPError .cxx_destruct]
  -[CKCDPError dictionaryRepresentation]
  -[CKCDPError writeTo:]
  -[CKCDPError message]
  -[CKCDPError setMessage:]
  -[CKCDPError mergeFrom:]
  -[CKCDPError readFrom:]
  -[CKCDPError copyTo:]
  -[CKCDPError hasMessage]
  -[CKCDPError setCode:]
  -[CKCDPError hasCode]
  -[CKCDPError setHasCode:]
  -[CKCDPError codeAsString:]
  -[CKCDPError StringAsCode:]
  -[CKCDPError hasAuxiliaryDomain]
  -[CKCDPError auxiliaryDomain]
  -[CKCDPError hasAuxiliaryCode]
  -[CKCDPError auxiliaryCode]
  -[CKCDPError auxiliaryUserInfosCount]
  -[CKCDPError auxiliaryUserInfos]
  -[CKCDPError addAuxiliaryUserInfo:]
  -[CKCDPError setAuxiliaryDomain:]
  -[CKCDPError clearAuxiliaryUserInfos]
  -[CKCDPError auxiliaryUserInfoAtIndex:]
  -[CKCDPError setAuxiliaryCode:]
  -[CKCDPError setHasAuxiliaryCode:]
  -[CKCDPError setAuxiliaryUserInfos:]


CKDPRecordSaveRequestConflictLoserUpdate : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *conflictLoserEtags

  // class methods
  +[CKDPRecordSaveRequestConflictLoserUpdate conflictLoserEtagsType]

  // instance methods
  -[CKDPRecordSaveRequestConflictLoserUpdate isEqual:]
  -[CKDPRecordSaveRequestConflictLoserUpdate copyWithZone:]
  -[CKDPRecordSaveRequestConflictLoserUpdate .cxx_destruct]
  -[CKDPRecordSaveRequestConflictLoserUpdate dictionaryRepresentation]
  -[CKDPRecordSaveRequestConflictLoserUpdate writeTo:]
  -[CKDPRecordSaveRequestConflictLoserUpdate mergeFrom:]
  -[CKDPRecordSaveRequestConflictLoserUpdate readFrom:]
  -[CKDPRecordSaveRequestConflictLoserUpdate copyTo:]
  -[CKDPRecordSaveRequestConflictLoserUpdate conflictLoserEtags]
  -[CKDPRecordSaveRequestConflictLoserUpdate setConflictLoserEtags:]
  -[CKDPRecordSaveRequestConflictLoserUpdate addConflictLoserEtags:]
  -[CKDPRecordSaveRequestConflictLoserUpdate conflictLoserEtagsCount]
  -[CKDPRecordSaveRequestConflictLoserUpdate clearConflictLoserEtags]
  -[CKDPRecordSaveRequestConflictLoserUpdate conflictLoserEtagsAtIndex:]


CKDPRecordField : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIdentifier
 @property  CKDPRecordFieldIdentifier *identifier
 @property  BOOL hasValue
 @property  CKDPRecordFieldValue *value
 @property  NSMutableArray *actions

  // class methods
  +[CKDPRecordField actionType]
  +[CKDPRecordField emptyFieldWithKey:]

  // instance methods
  -[CKDPRecordField isEqual:]
  -[CKDPRecordField copyWithZone:]
  -[CKDPRecordField .cxx_destruct]
  -[CKDPRecordField identifier]
  -[CKDPRecordField value]
  -[CKDPRecordField setValue:]
  -[CKDPRecordField setIdentifier:]
  -[CKDPRecordField dictionaryRepresentation]
  -[CKDPRecordField writeTo:]
  -[CKDPRecordField mergeFrom:]
  -[CKDPRecordField readFrom:]
  -[CKDPRecordField copyTo:]
  -[CKDPRecordField addAction:]
  -[CKDPRecordField actions]
  -[CKDPRecordField setActions:]
  -[CKDPRecordField hasValue]
  -[CKDPRecordField hasIdentifier]
  -[CKDPRecordField actionsCount]
  -[CKDPRecordField clearActions]
  -[CKDPRecordField _CKLogToFileHandle:atDepth:]
  -[CKDPRecordField actionAtIndex:]


CKDPFetchArchivedRecordsResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *records
 @property  BOOL hasArchiveContinuationToken
 @property  NSData *archiveContinuationToken
 @property  BOOL hasStatus
 @property  int status

  // class methods
  +[CKDPFetchArchivedRecordsResponse recordType]

  // instance methods
  -[CKDPFetchArchivedRecordsResponse isEqual:]
  -[CKDPFetchArchivedRecordsResponse copyWithZone:]
  -[CKDPFetchArchivedRecordsResponse .cxx_destruct]
  -[CKDPFetchArchivedRecordsResponse dictionaryRepresentation]
  -[CKDPFetchArchivedRecordsResponse status]
  -[CKDPFetchArchivedRecordsResponse writeTo:]
  -[CKDPFetchArchivedRecordsResponse mergeFrom:]
  -[CKDPFetchArchivedRecordsResponse readFrom:]
  -[CKDPFetchArchivedRecordsResponse copyTo:]
  -[CKDPFetchArchivedRecordsResponse setStatus:]
  -[CKDPFetchArchivedRecordsResponse statusAsString:]
  -[CKDPFetchArchivedRecordsResponse records]
  -[CKDPFetchArchivedRecordsResponse addRecord:]
  -[CKDPFetchArchivedRecordsResponse StringAsStatus:]
  -[CKDPFetchArchivedRecordsResponse setHasStatus:]
  -[CKDPFetchArchivedRecordsResponse hasStatus]
  -[CKDPFetchArchivedRecordsResponse setRecords:]
  -[CKDPFetchArchivedRecordsResponse recordsCount]
  -[CKDPFetchArchivedRecordsResponse clearRecords]
  -[CKDPFetchArchivedRecordsResponse recordAtIndex:]
  -[CKDPFetchArchivedRecordsResponse setArchiveContinuationToken:]
  -[CKDPFetchArchivedRecordsResponse hasArchiveContinuationToken]
  -[CKDPFetchArchivedRecordsResponse archiveContinuationToken]


CKDFetchZoneChangesRequestOperationResult : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSData *resultServerChangeTokenData
 @property  NSData *resultClientChangeTokenData
 @property  long long status
 @property  BOOL hasPendingArchivedRecords

  // instance methods
  -[CKDFetchZoneChangesRequestOperationResult init]
  -[CKDFetchZoneChangesRequestOperationResult .cxx_destruct]
  -[CKDFetchZoneChangesRequestOperationResult status]
  -[CKDFetchZoneChangesRequestOperationResult setStatus:]
  -[CKDFetchZoneChangesRequestOperationResult setResultClientChangeTokenData:]
  -[CKDFetchZoneChangesRequestOperationResult resultClientChangeTokenData]
  -[CKDFetchZoneChangesRequestOperationResult resultServerChangeTokenData]
  -[CKDFetchZoneChangesRequestOperationResult setHasPendingArchivedRecords:]
  -[CKDFetchZoneChangesRequestOperationResult hasPendingArchivedRecords]
  -[CKDFetchZoneChangesRequestOperationResult setResultServerChangeTokenData:]


CKDFetchRecordZoneChangesURLRequest : CKDURLRequest <CKDURLRequestPipelining>
 @property  NSArray *recordZoneIDs
 @property  NSDictionary *configurationsByRecordZoneID
 @property  NSMutableDictionary *zoneIDsByRequestOperationUUID
 @property  NSMutableDictionary *requestResultsByRecordZoneID
 @property  NSMutableDictionary *nodeErrorsByZoneID
 @property  NSMutableArray *recordResponses
 @property  long long changeTypes
 @property  BOOL shouldFetchAssetContent
 @property  NSSet *desiredAssetKeys
 @property  @? recordsChangedBlock
 @property  @? recordDeletedBlock
 @property  NSDictionary *resultsByRecordZoneID
 @property  NSDictionary *zoneErrorsByZoneID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDFetchRecordZoneChangesURLRequest .cxx_destruct]
  -[CKDFetchRecordZoneChangesURLRequest operationType]
  -[CKDFetchRecordZoneChangesURLRequest initWithRecordZoneIDs:configurationsByRecordZoneID:]
  -[CKDFetchRecordZoneChangesURLRequest recordZoneIDs]
  -[CKDFetchRecordZoneChangesURLRequest setRecordZoneIDs:]
  -[CKDFetchRecordZoneChangesURLRequest configurationsByRecordZoneID]
  -[CKDFetchRecordZoneChangesURLRequest setConfigurationsByRecordZoneID:]
  -[CKDFetchRecordZoneChangesURLRequest shouldFetchAssetContent]
  -[CKDFetchRecordZoneChangesURLRequest setShouldFetchAssetContent:]
  -[CKDFetchRecordZoneChangesURLRequest setChangeTypes:]
  -[CKDFetchRecordZoneChangesURLRequest changeTypes]
  -[CKDFetchRecordZoneChangesURLRequest setDesiredAssetKeys:]
  -[CKDFetchRecordZoneChangesURLRequest generateRequestOperations]
  -[CKDFetchRecordZoneChangesURLRequest requestGETPreAuth]
  -[CKDFetchRecordZoneChangesURLRequest requestDidParseProtobufObject:]
  -[CKDFetchRecordZoneChangesURLRequest requestDidParseNodeFailure:]
  -[CKDFetchRecordZoneChangesURLRequest requestOperationClasses]
  -[CKDFetchRecordZoneChangesURLRequest allowsAnonymousAccount]
  -[CKDFetchRecordZoneChangesURLRequest zoneIDsToLock]
  -[CKDFetchRecordZoneChangesURLRequest requestDidComplete]
  -[CKDFetchRecordZoneChangesURLRequest desiredAssetKeys]
  -[CKDFetchRecordZoneChangesURLRequest recordResponses]
  -[CKDFetchRecordZoneChangesURLRequest setRecordResponses:]
  -[CKDFetchRecordZoneChangesURLRequest nodeErrorsByZoneID]
  -[CKDFetchRecordZoneChangesURLRequest requestResultsByRecordZoneID]
  -[CKDFetchRecordZoneChangesURLRequest zoneIDsByRequestOperationUUID]
  -[CKDFetchRecordZoneChangesURLRequest zoneErrorsByZoneID]
  -[CKDFetchRecordZoneChangesURLRequest resultsByRecordZoneID]
  -[CKDFetchRecordZoneChangesURLRequest setZoneIDsByRequestOperationUUID:]
  -[CKDFetchRecordZoneChangesURLRequest setRequestResultsByRecordZoneID:]
  -[CKDFetchRecordZoneChangesURLRequest setNodeErrorsByZoneID:]
  -[CKDFetchRecordZoneChangesURLRequest setRecordsChangedBlock:]
  -[CKDFetchRecordZoneChangesURLRequest setRecordDeletedBlock:]
  -[CKDFetchRecordZoneChangesURLRequest recordDeletedBlock]
  -[CKDFetchRecordZoneChangesURLRequest recordsChangedBlock]
  -[CKDFetchRecordZoneChangesURLRequest _handleRecordChanges:]


CKDBackingAccount : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *dsid
 @property  NSString *identifier
 @property  NSString *primaryEmail
 @property  NSString *username
 @property  NSString *serverPreferredPushEnvironment
 @property  NSPersonNameComponents *fullName
 @property  NSString *displayedHostname
 @property  NSString *sharingURLHostname
 @property  NSString *personaIdentifier
 @property  BOOL isFakeAccount
 @property  BOOL iCloudDriveAllowsCellularAccess
 @property  BOOL isPrimaryEmailVerified
 @property  NSURL *privateCloudDBURL
 @property  NSURL *privateShareServiceURL
 @property  NSURL *privateDeviceServiceURL
 @property  NSURL *privateCodeServiceURL
 @property  NSURL *privateMetricsServiceURL
 @property  NSURL *privateDatabaseRPCServiceURL

  // class methods
  +[CKDBackingAccount primaryAccountInStore:]
  +[CKDBackingAccount accountWithIdentifier:inStore:]
  +[CKDBackingAccount fakeAccountWithEmail:password:propertyOverrides:overridesByDataclass:]
  +[CKDBackingAccount _platformBackingAccountClass]
  +[CKDBackingAccount deviceCountForAccount:ignoreCache:completionHandler:]
  +[CKDBackingAccount accountQueue]
  +[CKDBackingAccount _lockedEnsureCloudKitChildAccountOnParentAccount:inStore:]
  +[CKDBackingAccount ensureCloudKitChildAccountOnParentAccount:inStore:]

  // instance methods
  -[CKDBackingAccount init]
  -[CKDBackingAccount _init]
  -[CKDBackingAccount identifier]
  -[CKDBackingAccount dsid]
  -[CKDBackingAccount fullName]
  -[CKDBackingAccount username]
  -[CKDBackingAccount personaIdentifier]
  -[CKDBackingAccount deviceCountWithCompletionHandler:]
  -[CKDBackingAccount displayedHostname]
  -[CKDBackingAccount primaryEmail]
  -[CKDBackingAccount serverPreferredPushEnvironment]
  -[CKDBackingAccount isDataclassEnabled:]
  -[CKDBackingAccount isPrimaryEmailVerified]
  -[CKDBackingAccount iCloudDriveAllowsCellularAccess]
  -[CKDBackingAccount isFakeAccount]
  -[CKDBackingAccount privateCloudDBURL]
  -[CKDBackingAccount privateShareServiceURL]
  -[CKDBackingAccount privateDeviceServiceURL]
  -[CKDBackingAccount privateCodeServiceURL]
  -[CKDBackingAccount privateMetricsServiceURL]
  -[CKDBackingAccount privateDatabaseRPCServiceURL]
  -[CKDBackingAccount accountPropertiesForDataclass:]
  -[CKDBackingAccount updateAccountPropertiesAndSaveAccountInStore:completionHandler:]
  -[CKDBackingAccount canRenew]
  -[CKDBackingAccount renewAuthTokenInStore:withOptions:completionHandler:]
  -[CKDBackingAccount cloudKitAuthTokenWithError:]
  -[CKDBackingAccount iCloudAuthTokenWithError:]
  -[CKDBackingAccount privateCodeServiceURLPreferringGateway:]
  -[CKDBackingAccount validateVettingToken:vettingEmail:vettingPhone:completionHandler:]
  -[CKDBackingAccount sharingURLHostname]
  -[CKDBackingAccount ckAccount]
  -[CKDBackingAccount parentAppleAccount]
  -[CKDBackingAccount urlForDataclass:preferringGateway:]
  -[CKDBackingAccount urlForDataclass:]


CKDPMarkAssetBrokenResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasMissingAssetStatusRecord
 @property  CKDPRecordIdentifier *missingAssetStatusRecord

  // instance methods
  -[CKDPMarkAssetBrokenResponse isEqual:]
  -[CKDPMarkAssetBrokenResponse copyWithZone:]
  -[CKDPMarkAssetBrokenResponse .cxx_destruct]
  -[CKDPMarkAssetBrokenResponse dictionaryRepresentation]
  -[CKDPMarkAssetBrokenResponse writeTo:]
  -[CKDPMarkAssetBrokenResponse mergeFrom:]
  -[CKDPMarkAssetBrokenResponse readFrom:]
  -[CKDPMarkAssetBrokenResponse copyTo:]
  -[CKDPMarkAssetBrokenResponse setMissingAssetStatusRecord:]
  -[CKDPMarkAssetBrokenResponse hasMissingAssetStatusRecord]
  -[CKDPMarkAssetBrokenResponse missingAssetStatusRecord]


CKDURLSessionPool : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  int backgroundSessionConnectionPoolLimit

  // class methods
  +[CKDURLSessionPool sharedURLSessionPool]
  +[CKDURLSessionPool backgroundSessionConnectionPoolName]

  // instance methods
  -[CKDURLSessionPool init]
  -[CKDURLSessionPool backgroundSessionConnectionPoolLimit]
  -[CKDURLSessionPool _updateBackgroundSessionConnectionPoolLimit]


CKDPPackage : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasManifest
 @property  CKDPAsset *manifest
 @property  NSMutableArray *sections

  // class methods
  +[CKDPPackage sectionsType]

  // instance methods
  -[CKDPPackage isEqual:]
  -[CKDPPackage copyWithZone:]
  -[CKDPPackage .cxx_destruct]
  -[CKDPPackage dictionaryRepresentation]
  -[CKDPPackage writeTo:]
  -[CKDPPackage mergeFrom:]
  -[CKDPPackage readFrom:]
  -[CKDPPackage copyTo:]
  -[CKDPPackage sections]
  -[CKDPPackage setSections:]
  -[CKDPPackage sectionsCount]
  -[CKDPPackage clearSections]
  -[CKDPPackage sectionsAtIndex:]
  -[CKDPPackage addSections:]
  -[CKDPPackage manifest]
  -[CKDPPackage setManifest:]
  -[CKDPPackage hasManifest]


CKDPAssetsToDownload : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasAllAssets
 @property  BOOL allAssets
 @property  BOOL hasAssetFields
 @property  CKDPRequestedFields *assetFields

  // instance methods
  -[CKDPAssetsToDownload isEqual:]
  -[CKDPAssetsToDownload copyWithZone:]
  -[CKDPAssetsToDownload .cxx_destruct]
  -[CKDPAssetsToDownload dictionaryRepresentation]
  -[CKDPAssetsToDownload writeTo:]
  -[CKDPAssetsToDownload mergeFrom:]
  -[CKDPAssetsToDownload readFrom:]
  -[CKDPAssetsToDownload copyTo:]
  -[CKDPAssetsToDownload setAssetFields:]
  -[CKDPAssetsToDownload assetFields]
  -[CKDPAssetsToDownload setAllAssets:]
  -[CKDPAssetsToDownload hasAssetFields]
  -[CKDPAssetsToDownload setHasAllAssets:]
  -[CKDPAssetsToDownload hasAllAssets]
  -[CKDPAssetsToDownload allAssets]


CKDPRecordRetrieveChangesRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSyncContinuationToken
 @property  NSData *syncContinuationToken
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier
 @property  BOOL hasRequestedFields
 @property  CKDPRequestedFields *requestedFields
 @property  BOOL hasMaxChanges
 @property  unsigned int maxChanges
 @property  BOOL hasRequestedChangeTypes
 @property  int requestedChangeTypes
 @property  BOOL hasAssetsToDownload
 @property  CKDPAssetsToDownload *assetsToDownload
 @property  BOOL hasNewestFirst
 @property  BOOL newestFirst
 @property  BOOL hasIgnoreCallingDeviceChanges
 @property  BOOL ignoreCallingDeviceChanges

  // class methods
  +[CKDPRecordRetrieveChangesRequest options]

  // instance methods
  -[CKDPRecordRetrieveChangesRequest isEqual:]
  -[CKDPRecordRetrieveChangesRequest copyWithZone:]
  -[CKDPRecordRetrieveChangesRequest .cxx_destruct]
  -[CKDPRecordRetrieveChangesRequest dictionaryRepresentation]
  -[CKDPRecordRetrieveChangesRequest writeTo:]
  -[CKDPRecordRetrieveChangesRequest mergeFrom:]
  -[CKDPRecordRetrieveChangesRequest readFrom:]
  -[CKDPRecordRetrieveChangesRequest copyTo:]
  -[CKDPRecordRetrieveChangesRequest requestTypeCode]
  -[CKDPRecordRetrieveChangesRequest responseClass]
  -[CKDPRecordRetrieveChangesRequest setZoneIdentifier:]
  -[CKDPRecordRetrieveChangesRequest hasZoneIdentifier]
  -[CKDPRecordRetrieveChangesRequest zoneIdentifier]
  -[CKDPRecordRetrieveChangesRequest requestedFields]
  -[CKDPRecordRetrieveChangesRequest setRequestedFields:]
  -[CKDPRecordRetrieveChangesRequest hasRequestedFields]
  -[CKDPRecordRetrieveChangesRequest setAssetsToDownload:]
  -[CKDPRecordRetrieveChangesRequest hasAssetsToDownload]
  -[CKDPRecordRetrieveChangesRequest assetsToDownload]
  -[CKDPRecordRetrieveChangesRequest setMaxChanges:]
  -[CKDPRecordRetrieveChangesRequest setHasMaxChanges:]
  -[CKDPRecordRetrieveChangesRequest hasMaxChanges]
  -[CKDPRecordRetrieveChangesRequest maxChanges]
  -[CKDPRecordRetrieveChangesRequest setNewestFirst:]
  -[CKDPRecordRetrieveChangesRequest setHasNewestFirst:]
  -[CKDPRecordRetrieveChangesRequest hasNewestFirst]
  -[CKDPRecordRetrieveChangesRequest newestFirst]
  -[CKDPRecordRetrieveChangesRequest setSyncContinuationToken:]
  -[CKDPRecordRetrieveChangesRequest hasSyncContinuationToken]
  -[CKDPRecordRetrieveChangesRequest syncContinuationToken]
  -[CKDPRecordRetrieveChangesRequest setRequestedChangeTypes:]
  -[CKDPRecordRetrieveChangesRequest setIgnoreCallingDeviceChanges:]
  -[CKDPRecordRetrieveChangesRequest requestedChangeTypes]
  -[CKDPRecordRetrieveChangesRequest setHasRequestedChangeTypes:]
  -[CKDPRecordRetrieveChangesRequest hasRequestedChangeTypes]
  -[CKDPRecordRetrieveChangesRequest requestedChangeTypesAsString:]
  -[CKDPRecordRetrieveChangesRequest StringAsRequestedChangeTypes:]
  -[CKDPRecordRetrieveChangesRequest setHasIgnoreCallingDeviceChanges:]
  -[CKDPRecordRetrieveChangesRequest hasIgnoreCallingDeviceChanges]
  -[CKDPRecordRetrieveChangesRequest ignoreCallingDeviceChanges]


CKDUpdateMissingAssetStatusURLRequest : CKDURLRequest
 @property  CKRecordID *repairRecordID
 @property  BOOL recovered
 @property  BOOL isPackage
 @property  NSArray *assetSizes
 @property  NSArray *assetPutReceipts

  // instance methods
  -[CKDUpdateMissingAssetStatusURLRequest .cxx_destruct]
  -[CKDUpdateMissingAssetStatusURLRequest isPackage]
  -[CKDUpdateMissingAssetStatusURLRequest operationType]
  -[CKDUpdateMissingAssetStatusURLRequest setRepairRecordID:]
  -[CKDUpdateMissingAssetStatusURLRequest repairRecordID]
  -[CKDUpdateMissingAssetStatusURLRequest generateRequestOperations]
  -[CKDUpdateMissingAssetStatusURLRequest requestDidParseProtobufObject:]
  -[CKDUpdateMissingAssetStatusURLRequest requestOperationClasses]
  -[CKDUpdateMissingAssetStatusURLRequest setRecovered:]
  -[CKDUpdateMissingAssetStatusURLRequest recovered]
  -[CKDUpdateMissingAssetStatusURLRequest setIsPackage:]
  -[CKDUpdateMissingAssetStatusURLRequest assetSizes]
  -[CKDUpdateMissingAssetStatusURLRequest setAssetSizes:]
  -[CKDUpdateMissingAssetStatusURLRequest assetPutReceipts]
  -[CKDUpdateMissingAssetStatusURLRequest setAssetPutReceipts:]
  -[CKDUpdateMissingAssetStatusURLRequest initWithUnrecoveredRepairRecordID:]
  -[CKDUpdateMissingAssetStatusURLRequest initWithRecoveredAssetRepairRecordID:size:putReceipt:]
  -[CKDUpdateMissingAssetStatusURLRequest initWithRecoveredPackageRepairRecordID:sizes:putReceipts:]
  -[CKDUpdateMissingAssetStatusURLRequest initWithRepairRecordID:recovered:package:sizes:putReceipts:]


CKDFetchRecordZonesOperation : CKDDatabaseOperation
 @property  NSArray *recordZoneIDs
 @property  BOOL isFetchAllRecordZonesOperation
 @property  NSMutableDictionary *zonesToSaveForPCSUpdateByZoneID
 @property  BOOL shouldRetry
 @property  NSMutableArray *zoneIDsNeedingPCSUpdateRetry
 @property  NSMutableDictionary *pcsUpdateErrorsByZoneID
 @property  long long numZoneSaveAttempts
 @property  BOOL onlyFetchPCSInfo
 @property  NSMutableSet *zoneIDsNeedingDugongKeyRoll
 @property  BOOL ignorePCSFailures
 @property  @? recordZoneFetchedProgressBlock

  // instance methods
  -[CKDFetchRecordZonesOperation .cxx_destruct]
  -[CKDFetchRecordZonesOperation main]
  -[CKDFetchRecordZonesOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchRecordZonesOperation activityCreate]
  -[CKDFetchRecordZonesOperation setIsFetchAllRecordZonesOperation:]
  -[CKDFetchRecordZonesOperation recordZoneIDs]
  -[CKDFetchRecordZonesOperation setRecordZoneIDs:]
  -[CKDFetchRecordZonesOperation isFetchAllRecordZonesOperation]
  -[CKDFetchRecordZonesOperation ignorePCSFailures]
  -[CKDFetchRecordZonesOperation setIgnorePCSFailures:]
  -[CKDFetchRecordZonesOperation shouldRetry]
  -[CKDFetchRecordZonesOperation setShouldRetry:]
  -[CKDFetchRecordZonesOperation initWithOperationInfo:clientContext:]
  -[CKDFetchRecordZonesOperation setRecordZoneFetchedProgressBlock:]
  -[CKDFetchRecordZonesOperation nameForState:]
  -[CKDFetchRecordZonesOperation makeStateTransition]
  -[CKDFetchRecordZonesOperation setOnlyFetchPCSInfo:]
  -[CKDFetchRecordZonesOperation onlyFetchPCSInfo]
  -[CKDFetchRecordZonesOperation numZoneSaveAttempts]
  -[CKDFetchRecordZonesOperation setNumZoneSaveAttempts:]
  -[CKDFetchRecordZonesOperation _sendErrorForFailedZones]
  -[CKDFetchRecordZonesOperation _handleRecordZoneFetch:zoneID:responseCode:]
  -[CKDFetchRecordZonesOperation checkPCSIdentity]
  -[CKDFetchRecordZonesOperation fetchZonesFromServer]
  -[CKDFetchRecordZonesOperation saveZonesWithUpdatedZonePCS]
  -[CKDFetchRecordZonesOperation zoneIDsNeedingPCSUpdateRetry]
  -[CKDFetchRecordZonesOperation zonesToSaveForPCSUpdateByZoneID]
  -[CKDFetchRecordZonesOperation pcsUpdateErrorsByZoneID]
  -[CKDFetchRecordZonesOperation _locked_callbackForRecordZone:zoneID:error:]
  -[CKDFetchRecordZonesOperation zoneIDsNeedingDugongKeyRoll]
  -[CKDFetchRecordZonesOperation recordZoneFetchedProgressBlock]
  -[CKDFetchRecordZonesOperation _cachePCSOnRecordZone:]
  -[CKDFetchRecordZonesOperation _handleRecordZoneSaved:error:]
  -[CKDFetchRecordZonesOperation _continueHandlingFetchedRecordZone:zoneID:]
  -[CKDFetchRecordZonesOperation _locked_checkAndUpdateZonePCSIfNeededForZone:error:]
  -[CKDFetchRecordZonesOperation setZonesToSaveForPCSUpdateByZoneID:]
  -[CKDFetchRecordZonesOperation setZoneIDsNeedingPCSUpdateRetry:]
  -[CKDFetchRecordZonesOperation setPcsUpdateErrorsByZoneID:]
  -[CKDFetchRecordZonesOperation setZoneIDsNeedingDugongKeyRoll:]


CKDPResponseOperationResultErrorServer : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasType
 @property  int type

  // instance methods
  -[CKDPResponseOperationResultErrorServer isEqual:]
  -[CKDPResponseOperationResultErrorServer copyWithZone:]
  -[CKDPResponseOperationResultErrorServer type]
  -[CKDPResponseOperationResultErrorServer setType:]
  -[CKDPResponseOperationResultErrorServer dictionaryRepresentation]
  -[CKDPResponseOperationResultErrorServer writeTo:]
  -[CKDPResponseOperationResultErrorServer mergeFrom:]
  -[CKDPResponseOperationResultErrorServer readFrom:]
  -[CKDPResponseOperationResultErrorServer copyTo:]
  -[CKDPResponseOperationResultErrorServer typeAsString:]
  -[CKDPResponseOperationResultErrorServer StringAsType:]
  -[CKDPResponseOperationResultErrorServer setHasType:]
  -[CKDPResponseOperationResultErrorServer hasType]
  -[CKDPResponseOperationResultErrorServer _typeCKLogValue]


CKDDatabaseOperation : CKDOperation
 @property  long long databaseScope

  // instance methods
  -[CKDDatabaseOperation databaseScope]
  -[CKDDatabaseOperation setDatabaseScope:]
  -[CKDDatabaseOperation activityCreate]
  -[CKDDatabaseOperation flowControlKey]
  -[CKDDatabaseOperation initWithOperationInfo:clientContext:]
  -[CKDDatabaseOperation spawnAndRunOperationOfClass:operationInfo:spawnQueue:operationConfigurationBlock:]
  -[CKDDatabaseOperation CKStatusReportProperties]
  -[CKDDatabaseOperation analyticsPayload]
  -[CKDDatabaseOperation setPCSData:forFetchedZoneID:]
  -[CKDDatabaseOperation setPCSData:forFetchedShareID:]
  -[CKDDatabaseOperation setPCSData:forFetchedRecordID:]


CKDPCSSQLCache : CKDPQLCache
 @property  NSObject<OS_dispatch_queue> *recordQueue
 @property  double earliestValidDate
 @property  unsigned long cacheRequestCount
 @property  unsigned long cacheHitCount

  // class methods
  +[CKDPCSSQLCache evictPCSSQLCachesForKnownClientContexts]
  +[CKDPCSSQLCache registerPCSSQLCacheEvictionActivity]
  +[CKDPCSSQLCache pathForContext:]
  +[CKDPCSSQLCache _evictPCSSQLCachesForAppContainerAccountTuples:]
  +[CKDPCSSQLCache globalPCSSQLCacheEvictionQueue]

  // instance methods
  -[CKDPCSSQLCache dealloc]
  -[CKDPCSSQLCache clearCache]
  -[CKDPCSSQLCache .cxx_destruct]
  -[CKDPCSSQLCache path]
  -[CKDPCSSQLCache CKStatusReportArray]
  -[CKDPCSSQLCache cacheHitCount]
  -[CKDPCSSQLCache setRecordPCSData:forRecordWithID:databaseScope:withCompletionHandler:]
  -[CKDPCSSQLCache setZonePCSData:forZoneWithID:databaseScope:withCompletionHandler:]
  -[CKDPCSSQLCache setSharePCSData:forShareWithID:databaseScope:withCompletionHandler:]
  -[CKDPCSSQLCache removePCSDataForItemsInZoneWithID:withCompletionHandler:]
  -[CKDPCSSQLCache removePCSDataForItemsInShareWithID:withCompletionHandler:]
  -[CKDPCSSQLCache clearInvalidatedCacheEntriesWithCompletionHandler:]
  -[CKDPCSSQLCache fetchPCSDataForZoneWithID:databaseScope:withCompletionHandler:]
  -[CKDPCSSQLCache fetchPCSDataForRecordWithID:databaseScope:withCompletionHandler:]
  -[CKDPCSSQLCache fetchPCSDataForShareWithID:databaseScope:withCompletionHandler:]
  -[CKDPCSSQLCache cacheRequestCount]
  -[CKDPCSSQLCache setCacheRequestCount:]
  -[CKDPCSSQLCache earliestValidDate]
  -[CKDPCSSQLCache setCacheHitCount:]
  -[CKDPCSSQLCache recordQueue]
  -[CKDPCSSQLCache _lockedFetchPCSDataForID:databaseScope:itemType:ofClass:]
  -[CKDPCSSQLCache _lockedSetPCSData:databaseScope:itemType:forID:]
  -[CKDPCSSQLCache _setPCSData:forItemWithID:databaseScope:itemType:withCompletionHandler:]
  -[CKDPCSSQLCache _initWithClientContext:]
  -[CKDPCSSQLCache createInitialTablesSQL]
  -[CKDPCSSQLCache infoToUpgradeFromVersion:]
  -[CKDPCSSQLCache setRecordQueue:]


CKDPCSSQLCachePool : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableDictionary *cachesByPath
 @property  NSMutableDictionary *checkoutsByPath

  // class methods
  +[CKDPCSSQLCachePool sharedPool]

  // instance methods
  -[CKDPCSSQLCachePool .cxx_destruct]
  -[CKDPCSSQLCachePool _init]
  -[CKDPCSSQLCachePool cacheForContext:]
  -[CKDPCSSQLCachePool releaseCache:forContext:]
  -[CKDPCSSQLCachePool cachesByPath]
  -[CKDPCSSQLCachePool checkoutsByPath]
  -[CKDPCSSQLCachePool setCachesByPath:]
  -[CKDPCSSQLCachePool setCheckoutsByPath:]


CKCDPCodeServiceResponseAssetAuthorizationResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasResponseUUID
 @property  NSString *responseUUID
 @property  BOOL hasAuthGetResponseBody
 @property  NSData *authGetResponseBody
 @property  NSMutableArray *responseHeaders

  // class methods
  +[CKCDPCodeServiceResponseAssetAuthorizationResponse responseHeadersType]

  // instance methods
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse isEqual:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse copyWithZone:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse .cxx_destruct]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse dictionaryRepresentation]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse writeTo:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse mergeFrom:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse readFrom:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse copyTo:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse responseHeaders]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse responseUUID]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse setResponseUUID:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse setResponseHeaders:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse addResponseHeaders:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse setAuthGetResponseBody:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse responseHeadersCount]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse clearResponseHeaders]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse responseHeadersAtIndex:]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse hasResponseUUID]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse hasAuthGetResponseBody]
  -[CKCDPCodeServiceResponseAssetAuthorizationResponse authGetResponseBody]


CKDDecryptRecordsOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  NSDictionary *webSharingIdentityDataByRecordID

  // instance methods
  -[CKDDecryptRecordsOperationInfo .cxx_destruct]
  -[CKDDecryptRecordsOperationInfo webSharingIdentityDataByRecordID]
  -[CKDDecryptRecordsOperationInfo setWebSharingIdentityDataByRecordID:]


CKRecordDecryptInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKRecord *record
 @property  NSError *error
 @property  NSObject<OS_dispatch_group> *decryptGroup
 @property  @? callback
 @property  unsigned long numUnwrapAttempts

  // instance methods
  -[CKRecordDecryptInfo init]
  -[CKRecordDecryptInfo .cxx_destruct]
  -[CKRecordDecryptInfo error]
  -[CKRecordDecryptInfo setError:]
  -[CKRecordDecryptInfo callback]
  -[CKRecordDecryptInfo setCallback:]
  -[CKRecordDecryptInfo record]
  -[CKRecordDecryptInfo _setupDecryptCallbackForQueue:]
  -[CKRecordDecryptInfo decryptGroup]
  -[CKRecordDecryptInfo initWithRecord:callbackQueue:]
  -[CKRecordDecryptInfo setDecryptGroup:]
  -[CKRecordDecryptInfo numUnwrapAttempts]
  -[CKRecordDecryptInfo setNumUnwrapAttempts:]


CKDDecryptRecordsOperation : CKDDatabaseOperation
 @property  NSMutableArray *outstandingDecryptions
 @property  NSObject<OS_dispatch_group> *recordDecryptGroup
 @property  BOOL started
 @property  BOOL markedToFinish
 @property  NSObject<OS_dispatch_queue> *recordDecryptQueue
 @property  unsigned long maxUnwrapAttempts
 @property  NSDictionary *webSharingIdentityDataByRecordID
 @property  BOOL forcePCSDecrypt

  // instance methods
  -[CKDDecryptRecordsOperation .cxx_destruct]
  -[CKDDecryptRecordsOperation isStarted]
  -[CKDDecryptRecordsOperation main]
  -[CKDDecryptRecordsOperation setStarted:]
  -[CKDDecryptRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKDDecryptRecordsOperation activityCreate]
  -[CKDDecryptRecordsOperation webSharingIdentityDataByRecordID]
  -[CKDDecryptRecordsOperation setWebSharingIdentityDataByRecordID:]
  -[CKDDecryptRecordsOperation initWithOperationInfo:clientContext:]
  -[CKDDecryptRecordsOperation operationShouldBeFlowControlled]
  -[CKDDecryptRecordsOperation shouldCheckAppVersion]
  -[CKDDecryptRecordsOperation setForcePCSDecrypt:]
  -[CKDDecryptRecordsOperation _possiblyWrapError:forRecordWithID:withCode:format:]
  -[CKDDecryptRecordsOperation finishDecryption]
  -[CKDDecryptRecordsOperation forcePCSDecrypt]
  -[CKDDecryptRecordsOperation decryptRecord:withCompletion:]
  -[CKDDecryptRecordsOperation isMarkedToFinish]
  -[CKDDecryptRecordsOperation recordDecryptGroup]
  -[CKDDecryptRecordsOperation _recordInfoWasDecrypted:withCompletion:]
  -[CKDDecryptRecordsOperation outstandingDecryptions]
  -[CKDDecryptRecordsOperation recordDecryptQueue]
  -[CKDDecryptRecordsOperation _decryptRecordInfo:]
  -[CKDDecryptRecordsOperation maxUnwrapAttempts]
  -[CKDDecryptRecordsOperation _clearProtectionDataForRecordInfo:]
  -[CKDDecryptRecordsOperation _handleProtectionDataForRecordInfo:]
  -[CKDDecryptRecordsOperation _unwrapEncryptedPropertiesOnRecord:withPCS:]
  -[CKDDecryptRecordsOperation _decryptRecordPCSForRecord:usingZonePCS:]
  -[CKDDecryptRecordsOperation _decryptRecordPCSForRecord:usingSharePCS:]
  -[CKDDecryptRecordsOperation _decryptRecordPCSForRecord:usingChainPCS:]
  -[CKDDecryptRecordsOperation _decryptRecordInfo:usingWebSharingIdentityData:]
  -[CKDDecryptRecordsOperation _handleZoneProtectionDataForRecordInfo:]
  -[CKDDecryptRecordsOperation _handleShareProtectionDataForRecordInfo:]
  -[CKDDecryptRecordsOperation _unwrapAssetKeyForAsset:inRecordWithID:forField:withPCS:]
  -[CKDDecryptRecordsOperation _unwrapPackageAssets:inRecordWithID:forField:withPCS:]
  -[CKDDecryptRecordsOperation _unwrapEncryptedPropertiesForRecordValueStore:withPCS:]
  -[CKDDecryptRecordsOperation setMarkedToFinish:]
  -[CKDDecryptRecordsOperation _finishDecryptOperation]
  -[CKDDecryptRecordsOperation setOutstandingDecryptions:]
  -[CKDDecryptRecordsOperation setRecordDecryptGroup:]
  -[CKDDecryptRecordsOperation setRecordDecryptQueue:]
  -[CKDDecryptRecordsOperation setMaxUnwrapAttempts:]


CKDContainerSpecificInfoOperation : CKDOperation
 @property  CKDContainerInfo *containerInfo
 @property  BOOL requireUserIDs
 @property  NSObject<OS_dispatch_group> *infoFetchedGroup

  // instance methods
  -[CKDContainerSpecificInfoOperation .cxx_destruct]
  -[CKDContainerSpecificInfoOperation main]
  -[CKDContainerSpecificInfoOperation setCompletionBlock:]
  -[CKDContainerSpecificInfoOperation activityCreate]
  -[CKDContainerSpecificInfoOperation initWithOperationInfo:clientContext:]
  -[CKDContainerSpecificInfoOperation shouldCheckAppVersion]
  -[CKDContainerSpecificInfoOperation requireUserIDs]
  -[CKDContainerSpecificInfoOperation setContainerInfo:]
  -[CKDContainerSpecificInfoOperation containerInfo]
  -[CKDContainerSpecificInfoOperation setRequireUserIDs:]
  -[CKDContainerSpecificInfoOperation infoFetchedGroup]


CKPackageUploadTask : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDCancelling>
 @property  NSError *error
 @property  CKPackage *package
 @property  CKDMMCSItem *MMCSManifestItem
 @property  NSArray *MMCSSectionItems
 @property  CKDProgressTracker *progressTracker
 @property  CKDMMCSRequestOptions *MMCSRequestOptions
 @property  NSObject<OS_dispatch_group> *group
 @property  CKDCancelTokenGroup *cancelTokens
 @property  long long storageGroupingPolicy
 @property  long long uploadRank
 @property  NSString *recordKey

  // instance methods
  -[CKPackageUploadTask .cxx_destruct]
  -[CKPackageUploadTask setGroup:]
  -[CKPackageUploadTask error]
  -[CKPackageUploadTask cancel]
  -[CKPackageUploadTask setError:]
  -[CKPackageUploadTask group]
  -[CKPackageUploadTask package]
  -[CKPackageUploadTask activityCreate]
  -[CKPackageUploadTask recordKey]
  -[CKPackageUploadTask uploadRank]
  -[CKPackageUploadTask storageGroupingPolicy]
  -[CKPackageUploadTask MMCSRequestOptions]
  -[CKPackageUploadTask setMMCSRequestOptions:]
  -[CKPackageUploadTask cancelTokens]
  -[CKPackageUploadTask initWithPackage:trackProgress:]
  -[CKPackageUploadTask progressTracker]
  -[CKPackageUploadTask setProgressTracker:]
  -[CKPackageUploadTask setCancelTokens:]
  -[CKPackageUploadTask setMMCSManifestItem:]
  -[CKPackageUploadTask setMMCSSectionItems:]
  -[CKPackageUploadTask MMCSSectionItems]
  -[CKPackageUploadTask MMCSManifestItem]


CKDPCSIdentityWrapper : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  ^{_PCSIdentitySetData=} identitySet
 @property  NSString *primaryServiceName
 @property  NSString *identityString

  // instance methods
  -[CKDPCSIdentityWrapper dealloc]
  -[CKDPCSIdentityWrapper .cxx_destruct]
  -[CKDPCSIdentityWrapper primaryServiceName]
  -[CKDPCSIdentityWrapper identitySet]
  -[CKDPCSIdentityWrapper initWithIdentitySet:withPrimaryServiceName:]
  -[CKDPCSIdentityWrapper identityString]


CKDPCSIdentityManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKDAccount *account
 @property  BOOL isSiloed
 @property  BOOL forceEnableReadOnlyManatee
 @property  NSString *cachedAccountDSID
 @property  NSMutableDictionary *PCSIdentityWrappersByServiceName
 @property  ^{_PCSIdentityData=} debugIdentity
 @property  NSString *serviceName
 @property  BOOL currentServiceIsManatee

  // class methods
  +[CKDPCSIdentityManager sharedFakeIdentitySetsByServiceByUsername]
  +[CKDPCSIdentityManager _copyStingrayIdentitiesForService:forBackingFakeAccount:withError:]
  +[CKDPCSIdentityManager _getTestAccountIdentitySetForService:forBackingFakeAccount:withError:]

  // instance methods
  -[CKDPCSIdentityManager dealloc]
  -[CKDPCSIdentityManager .cxx_destruct]
  -[CKDPCSIdentityManager serviceName]
  -[CKDPCSIdentityManager account]
  -[CKDPCSIdentityManager setAccount:]
  -[CKDPCSIdentityManager forceEnableReadOnlyManatee]
  -[CKDPCSIdentityManager debugIdentity]
  -[CKDPCSIdentityManager updateAccount:]
  -[CKDPCSIdentityManager currentServiceIsManatee]
  -[CKDPCSIdentityManager createRandomSharingIdentityWithError:]
  -[CKDPCSIdentityManager dataFromSharingIdentity:error:]
  -[CKDPCSIdentityManager initWithAccount:serviceName:isSiloed:forceEnableReadOnlyManatee:]
  -[CKDPCSIdentityManager identitiesChanged]
  -[CKDPCSIdentityManager createFullKeychainIdentitySetWithError:]
  -[CKDPCSIdentityManager debugSharingIdentity]
  -[CKDPCSIdentityManager PCSServiceStringFromCKServiceType:]
  -[CKDPCSIdentityManager copyPublicKeyForService:withError:]
  -[CKDPCSIdentityManager copyAllPublicKeysForService:withError:]
  -[CKDPCSIdentityManager copyDiversifiedIdentityForService:userIDEntropy:withError:]
  -[CKDPCSIdentityManager copyDiversifiedPublicKeyForService:userIDEntropy:withError:]
  -[CKDPCSIdentityManager createCombinedIdentityWithOutOfNetworkPrivateKey:publicSharingIdentity:]
  -[CKDPCSIdentityManager createPublicSharingIdentityFromPublicKey:error:]
  -[CKDPCSIdentityManager createSharingIdentityFromData:error:]
  -[CKDPCSIdentityManager copyIdentitySetWithType:options:error:]
  -[CKDPCSIdentityManager identitySet:containsPublicKey:error:]
  -[CKDPCSIdentityManager internalServicesToCombineWithLiverpoolKey]
  -[CKDPCSIdentityManager liverpoolPublicKey]
  -[CKDPCSIdentityManager isSiloed]
  -[CKDPCSIdentityManager setCachedAccountDSID:]
  -[CKDPCSIdentityManager setPCSIdentityWrappersByServiceName:]
  -[CKDPCSIdentityManager PCSIdentityWrappersByServiceName]
  -[CKDPCSIdentityManager serviceIsManatee:]
  -[CKDPCSIdentityManager manateeIsAvailableWithError:]
  -[CKDPCSIdentityManager cachedAccountDSID]
  -[CKDPCSIdentityManager _copyTestAccountIdentitySetForService:forBackingFakeAccount:withError:]
  -[CKDPCSIdentityManager _createIdentitySetForService:dsid:error:]
  -[CKDPCSIdentityManager _cacheIdentitySet:forService:]
  -[CKDPCSIdentityManager _hasCurrentKeyForService:inIdentitySet:withError:]
  -[CKDPCSIdentityManager _createSpecialInMemorySetCombiningLiverpoolWithServiceNamed:dsid:error:]
  -[CKDPCSIdentityManager _copyIdentityForService:useCache:validateCurrentKey:error:]
  -[CKDPCSIdentityManager _copyPublicKeyDataForIdentitySet:withService:withError:]
  -[CKDPCSIdentityManager _copyPublicKeyDataForAllIdentitiesInSet:withService:]
  -[CKDPCSIdentityManager _addIdentitiesFromServiceNamed:dsid:toMutableSet:]
  -[CKDPCSIdentityManager setDebugIdentity:]


CKDPCodeFunctionInvokeResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSerializedResult
 @property  NSData *serializedResult
 @property  BOOL hasAttestationResponse
 @property  CKDPCodeFunctionInvokeResponseAttestationResponse *attestationResponse

  // instance methods
  -[CKDPCodeFunctionInvokeResponse isEqual:]
  -[CKDPCodeFunctionInvokeResponse copyWithZone:]
  -[CKDPCodeFunctionInvokeResponse .cxx_destruct]
  -[CKDPCodeFunctionInvokeResponse dictionaryRepresentation]
  -[CKDPCodeFunctionInvokeResponse writeTo:]
  -[CKDPCodeFunctionInvokeResponse mergeFrom:]
  -[CKDPCodeFunctionInvokeResponse readFrom:]
  -[CKDPCodeFunctionInvokeResponse copyTo:]
  -[CKDPCodeFunctionInvokeResponse serializedResult]
  -[CKDPCodeFunctionInvokeResponse hasAttestationResponse]
  -[CKDPCodeFunctionInvokeResponse attestationResponse]
  -[CKDPCodeFunctionInvokeResponse setSerializedResult:]
  -[CKDPCodeFunctionInvokeResponse hasSerializedResult]
  -[CKDPCodeFunctionInvokeResponse setAttestationResponse:]


CKDBackingiOSAccount : CKDBackingAccount
 @property  ACAccountStore *accountStore
 @property  ACAccount *ckAccount
 @property  ACAccount *parentAppleAccount

  // class methods
  +[CKDBackingiOSAccount primaryAccountInStore:]
  +[CKDBackingiOSAccount accountWithIdentifier:inStore:]
  +[CKDBackingiOSAccount determineCloudKitInfoFromEmail:password:completion:]

  // instance methods
  -[CKDBackingiOSAccount .cxx_destruct]
  -[CKDBackingiOSAccount identifier]
  -[CKDBackingiOSAccount dsid]
  -[CKDBackingiOSAccount fullName]
  -[CKDBackingiOSAccount username]
  -[CKDBackingiOSAccount accountStore]
  -[CKDBackingiOSAccount displayedHostname]
  -[CKDBackingiOSAccount primaryEmail]
  -[CKDBackingiOSAccount isDataclassEnabled:]
  -[CKDBackingiOSAccount isPrimaryEmailVerified]
  -[CKDBackingiOSAccount iCloudDriveAllowsCellularAccess]
  -[CKDBackingiOSAccount accountPropertiesForDataclass:]
  -[CKDBackingiOSAccount updateAccountPropertiesAndSaveAccountInStore:completionHandler:]
  -[CKDBackingiOSAccount canRenew]
  -[CKDBackingiOSAccount cloudKitAuthTokenWithError:]
  -[CKDBackingiOSAccount iCloudAuthTokenWithError:]
  -[CKDBackingiOSAccount ckAccount]
  -[CKDBackingiOSAccount parentAppleAccount]
  -[CKDBackingiOSAccount _initWithParentAccount:inStore:]
  -[CKDBackingiOSAccount _accountCredentialForAccount:withError:]
  -[CKDBackingiOSAccount setParentAppleAccount:]


CKDProxyOperation : CKDOperation <CKDOperationInfoDelegate>
 @property  CKOperationResult *cachedResult
 @property  BOOL didHandleCancel
 @property  @? operationProgressedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL invalidated

  // instance methods
  -[CKDProxyOperation .cxx_destruct]
  -[CKDProxyOperation main]
  -[CKDProxyOperation isInvalidated]
  -[CKDProxyOperation _finishOnCallbackQueueWithError:]
  -[CKDProxyOperation operationResult]
  -[CKDProxyOperation isProxyOperation]
  -[CKDProxyOperation shouldCheckAppVersion]
  -[CKDProxyOperation setOperationProgressedBlock:]
  -[CKDProxyOperation wasUnexpectedlyUnregisteredForOperationID:]
  -[CKDProxyOperation operationWithID:didProgress:]
  -[CKDProxyOperation operationWithID:didComplete:]
  -[CKDProxyOperation _cancelOnCallbackQueueIfNecessary]
  -[CKDProxyOperation operationProgressedBlock]
  -[CKDProxyOperation setCachedResult:]
  -[CKDProxyOperation didHandleCancel]
  -[CKDProxyOperation setDidHandleCancel:]
  -[CKDProxyOperation cachedResult]


CKDAssetID : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying>
 @property  CKDPRecordIdentifier *recordID
 @property  NSData *fileSignature
 @property  NSData *referenceSignature
 @property  NSNumber *size

  // instance methods
  -[CKDAssetID isEqual:]
  -[CKDAssetID copyWithZone:]
  -[CKDAssetID .cxx_destruct]
  -[CKDAssetID size]
  -[CKDAssetID recordID]
  -[CKDAssetID CKPropertiesDescription]
  -[CKDAssetID fileSignature]
  -[CKDAssetID referenceSignature]
  -[CKDAssetID initWithRecordID:fileSignature:referenceSignature:size:]


CKDGetUserPrivacySettingsOperation : CKDOperation
 @property  long long discoverable

  // instance methods
  -[CKDGetUserPrivacySettingsOperation main]
  -[CKDGetUserPrivacySettingsOperation activityCreate]
  -[CKDGetUserPrivacySettingsOperation setDiscoverable:]
  -[CKDGetUserPrivacySettingsOperation discoverable]
  -[CKDGetUserPrivacySettingsOperation initWithOperationInfo:clientContext:]
  -[CKDGetUserPrivacySettingsOperation _handleRetrievedPrivacySettings:]


CKDPAssetUploadTokenRetrieveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *uploadTokens
 @property  BOOL hasAuthPutResponse
 @property  NSData *authPutResponse
 @property  NSMutableArray *contentResponseHeaders

  // class methods
  +[CKDPAssetUploadTokenRetrieveResponse uploadTokensType]
  +[CKDPAssetUploadTokenRetrieveResponse contentResponseHeadersType]

  // instance methods
  -[CKDPAssetUploadTokenRetrieveResponse isEqual:]
  -[CKDPAssetUploadTokenRetrieveResponse copyWithZone:]
  -[CKDPAssetUploadTokenRetrieveResponse .cxx_destruct]
  -[CKDPAssetUploadTokenRetrieveResponse dictionaryRepresentation]
  -[CKDPAssetUploadTokenRetrieveResponse writeTo:]
  -[CKDPAssetUploadTokenRetrieveResponse mergeFrom:]
  -[CKDPAssetUploadTokenRetrieveResponse readFrom:]
  -[CKDPAssetUploadTokenRetrieveResponse copyTo:]
  -[CKDPAssetUploadTokenRetrieveResponse contentResponseHeaders]
  -[CKDPAssetUploadTokenRetrieveResponse setContentResponseHeaders:]
  -[CKDPAssetUploadTokenRetrieveResponse authPutResponse]
  -[CKDPAssetUploadTokenRetrieveResponse setAuthPutResponse:]
  -[CKDPAssetUploadTokenRetrieveResponse contentResponseHeadersCount]
  -[CKDPAssetUploadTokenRetrieveResponse uploadTokens]
  -[CKDPAssetUploadTokenRetrieveResponse addUploadTokens:]
  -[CKDPAssetUploadTokenRetrieveResponse addContentResponseHeaders:]
  -[CKDPAssetUploadTokenRetrieveResponse uploadTokensCount]
  -[CKDPAssetUploadTokenRetrieveResponse clearUploadTokens]
  -[CKDPAssetUploadTokenRetrieveResponse uploadTokensAtIndex:]
  -[CKDPAssetUploadTokenRetrieveResponse clearContentResponseHeaders]
  -[CKDPAssetUploadTokenRetrieveResponse contentResponseHeadersAtIndex:]
  -[CKDPAssetUploadTokenRetrieveResponse hasAuthPutResponse]
  -[CKDPAssetUploadTokenRetrieveResponse setUploadTokens:]


CKDAcceptSharesOperation : CKDDatabaseOperation
 @property  NSMutableDictionary *clientProvidedMetadatasByURL
 @property  NSMutableArray *shareURLsToAccept
 @property  NSMutableArray *acceptedShareURLsToFetch
 @property  NSMutableDictionary *shareMetadatasToAcceptByURL
 @property  unsigned long numShareAcceptAttempts
 @property  @? acceptCompletionBlock

  // instance methods
  -[CKDAcceptSharesOperation .cxx_destruct]
  -[CKDAcceptSharesOperation main]
  -[CKDAcceptSharesOperation _finishOnCallbackQueueWithError:]
  -[CKDAcceptSharesOperation activityCreate]
  -[CKDAcceptSharesOperation initWithOperationInfo:clientContext:]
  -[CKDAcceptSharesOperation setAcceptCompletionBlock:]
  -[CKDAcceptSharesOperation nameForState:]
  -[CKDAcceptSharesOperation makeStateTransition]
  -[CKDAcceptSharesOperation _addSelfIdentityToShareMetadataPublicPCS:forShareWithURL:error:]
  -[CKDAcceptSharesOperation _fetchMetadataForShares]
  -[CKDAcceptSharesOperation _prepareShareMetadata]
  -[CKDAcceptSharesOperation _fetchAcceptedShares]
  -[CKDAcceptSharesOperation _decryptShareMetadata]
  -[CKDAcceptSharesOperation _acceptShares]
  -[CKDAcceptSharesOperation shareURLsToAccept]
  -[CKDAcceptSharesOperation acceptedShareURLsToFetch]
  -[CKDAcceptSharesOperation acceptCompletionBlock]
  -[CKDAcceptSharesOperation _performCallbackForURL:withShare:error:]
  -[CKDAcceptSharesOperation shareMetadatasToAcceptByURL]
  -[CKDAcceptSharesOperation _callingParticipantOONForShareMetadata:]
  -[CKDAcceptSharesOperation numShareAcceptAttempts]
  -[CKDAcceptSharesOperation setNumShareAcceptAttempts:]
  -[CKDAcceptSharesOperation _handleShareURLAccepted:forShare:responseCode:]
  -[CKDAcceptSharesOperation clientProvidedMetadatasByURL]
  -[CKDAcceptSharesOperation sharingServiceTypeForShareMetadata:]
  -[CKDAcceptSharesOperation _keySwapForOONParticipant:]
  -[CKDAcceptSharesOperation _validateInvitedPCSCanBeDecryptedForShare:]
  -[CKDAcceptSharesOperation setShareURLsToAccept:]
  -[CKDAcceptSharesOperation setClientProvidedMetadatasByURL:]
  -[CKDAcceptSharesOperation setAcceptedShareURLsToFetch:]
  -[CKDAcceptSharesOperation setShareMetadatasToAcceptByURL:]


CKDPNotificationMarkReadRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasUuid
 @property  NSString *uuid

  // class methods
  +[CKDPNotificationMarkReadRequest options]

  // instance methods
  -[CKDPNotificationMarkReadRequest isEqual:]
  -[CKDPNotificationMarkReadRequest copyWithZone:]
  -[CKDPNotificationMarkReadRequest .cxx_destruct]
  -[CKDPNotificationMarkReadRequest dictionaryRepresentation]
  -[CKDPNotificationMarkReadRequest uuid]
  -[CKDPNotificationMarkReadRequest setUuid:]
  -[CKDPNotificationMarkReadRequest writeTo:]
  -[CKDPNotificationMarkReadRequest mergeFrom:]
  -[CKDPNotificationMarkReadRequest readFrom:]
  -[CKDPNotificationMarkReadRequest copyTo:]
  -[CKDPNotificationMarkReadRequest requestTypeCode]
  -[CKDPNotificationMarkReadRequest responseClass]
  -[CKDPNotificationMarkReadRequest hasUuid]


CKDFetchRecordVersionsRequest : CKDURLRequest
 @property  NSArray *recordIDs
 @property  NSArray *desiredKeys
 @property  NSString *minimumVersionETag
 @property  NSMutableDictionary *recordIDByRequestID
 @property  BOOL isDeleted
 @property  @? recordVersionsFetchedBlock
 @property  BOOL shouldFetchAssetContent

  // instance methods
  -[CKDFetchRecordVersionsRequest .cxx_destruct]
  -[CKDFetchRecordVersionsRequest operationType]
  -[CKDFetchRecordVersionsRequest setDesiredKeys:]
  -[CKDFetchRecordVersionsRequest isDeleted]
  -[CKDFetchRecordVersionsRequest setRecordIDs:]
  -[CKDFetchRecordVersionsRequest recordIDs]
  -[CKDFetchRecordVersionsRequest shouldFetchAssetContent]
  -[CKDFetchRecordVersionsRequest setShouldFetchAssetContent:]
  -[CKDFetchRecordVersionsRequest desiredKeys]
  -[CKDFetchRecordVersionsRequest minimumVersionETag]
  -[CKDFetchRecordVersionsRequest setMinimumVersionETag:]
  -[CKDFetchRecordVersionsRequest setIsDeleted:]
  -[CKDFetchRecordVersionsRequest generateRequestOperations]
  -[CKDFetchRecordVersionsRequest requestDidParseProtobufObject:]
  -[CKDFetchRecordVersionsRequest requestDidParseNodeFailure:]
  -[CKDFetchRecordVersionsRequest requestOperationClasses]
  -[CKDFetchRecordVersionsRequest zoneIDsToLock]
  -[CKDFetchRecordVersionsRequest recordIDByRequestID]
  -[CKDFetchRecordVersionsRequest setRecordIDByRequestID:]
  -[CKDFetchRecordVersionsRequest initWithRecordIDs:desiredKeys:minimumVersionETag:]
  -[CKDFetchRecordVersionsRequest setRecordVersionsFetchedBlock:]
  -[CKDFetchRecordVersionsRequest recordVersionsFetchedBlock]


CKDMMCSItemFileWriter : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDMMCSItemReaderWriterProtocol>
 @property  CKDMMCSItemGroupContext *MMCSRequest
 @property  CKDMMCSItem *MMCSItem
 @property  NSMutableData *data
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKDMMCSItemFileWriter dealloc]
  -[CKDMMCSItemFileWriter .cxx_destruct]
  -[CKDMMCSItemFileWriter data]
  -[CKDMMCSItemFileWriter setData:]
  -[CKDMMCSItemFileWriter openWithError:]
  -[CKDMMCSItemFileWriter closeWithError:]
  -[CKDMMCSItemFileWriter MMCSRequest]
  -[CKDMMCSItemFileWriter MMCSItem]
  -[CKDMMCSItemFileWriter getFileMetadataWithError:]
  -[CKDMMCSItemFileWriter readBytesAtOffset:bytes:length:bytesRead:error:]
  -[CKDMMCSItemFileWriter writeBytesAtOffset:bytes:length:bytesWritten:error:]
  -[CKDMMCSItemFileWriter initWithMMCSItem:MMCSRequest:]
  -[CKDMMCSItemFileWriter setMMCSRequest:]
  -[CKDMMCSItemFileWriter setMMCSItem:]


CKDRegisterOperationInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  unsigned long options

  // instance methods
  -[CKDRegisterOperationInfo options]
  -[CKDRegisterOperationInfo setOptions:]


CKDDownloadAssetURLInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKAsset *asset
 @property  ^{_OpaquePCSShareProtection=} recordPCS

  // instance methods
  -[CKDDownloadAssetURLInfo isEqual:]
  -[CKDDownloadAssetURLInfo .cxx_destruct]
  -[CKDDownloadAssetURLInfo asset]
  -[CKDDownloadAssetURLInfo setAsset:]
  -[CKDDownloadAssetURLInfo setRecordPCS:]
  -[CKDDownloadAssetURLInfo recordPCS]


CKDDownloadAssetsOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  BOOL shouldFetchAssetContentInMemory
 @property  NSArray *assetsToDownload
 @property  NSArray *packageIndexSets
 @property  NSArray *assetsToDownloadInMemory
 @property  NSArray *assetURLInfosToFillOut

  // instance methods
  -[CKDDownloadAssetsOperationInfo .cxx_destruct]
  -[CKDDownloadAssetsOperationInfo shouldFetchAssetContentInMemory]
  -[CKDDownloadAssetsOperationInfo setShouldFetchAssetContentInMemory:]
  -[CKDDownloadAssetsOperationInfo setAssetsToDownload:]
  -[CKDDownloadAssetsOperationInfo assetsToDownload]
  -[CKDDownloadAssetsOperationInfo packageIndexSets]
  -[CKDDownloadAssetsOperationInfo assetsToDownloadInMemory]
  -[CKDDownloadAssetsOperationInfo assetURLInfosToFillOut]
  -[CKDDownloadAssetsOperationInfo setPackageIndexSets:]
  -[CKDDownloadAssetsOperationInfo setAssetsToDownloadInMemory:]
  -[CKDDownloadAssetsOperationInfo setAssetURLInfosToFillOut:]


CKDSaveUserPrivacySettingsOperationInfo : CKOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  long long discoverable

  // instance methods
  -[CKDSaveUserPrivacySettingsOperationInfo init]
  -[CKDSaveUserPrivacySettingsOperationInfo setDiscoverable:]
  -[CKDSaveUserPrivacySettingsOperationInfo discoverable]


CKDSaveUserPrivacySettingsOperation : CKDOperation
 @property  long long discoverable

  // class methods
  +[CKDSaveUserPrivacySettingsOperation isPredominatelyDownload]

  // instance methods
  -[CKDSaveUserPrivacySettingsOperation main]
  -[CKDSaveUserPrivacySettingsOperation activityCreate]
  -[CKDSaveUserPrivacySettingsOperation setDiscoverable:]
  -[CKDSaveUserPrivacySettingsOperation discoverable]
  -[CKDSaveUserPrivacySettingsOperation initWithOperationInfo:clientContext:]
  -[CKDSaveUserPrivacySettingsOperation shouldCheckAppVersion]


CKDMMCSPackageSignatureGenerator : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  ^v generator
 @property  BOOL valid

  // instance methods
  -[CKDMMCSPackageSignatureGenerator init]
  -[CKDMMCSPackageSignatureGenerator dealloc]
  -[CKDMMCSPackageSignatureGenerator isValid]
  -[CKDMMCSPackageSignatureGenerator updateWithData:]
  -[CKDMMCSPackageSignatureGenerator setValid:]
  -[CKDMMCSPackageSignatureGenerator generator]
  -[CKDMMCSPackageSignatureGenerator dataByFinishingSignature]
  -[CKDMMCSPackageSignatureGenerator setGenerator:]
  -[CKDMMCSPackageSignatureGenerator _finishGenerator]


CKDProtocolTranslator : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *containerScopedUserID
 @property  NSString *overriddenContainerScopedUserID
 @property  NSString *orgAdminUserID
 @property  NSString *packageStagingDirectory
 @property  NSMutableDictionary *downloadPreauthorizationMap
 @property  BOOL dontCreateValidatingParentReferences
 @property  CKDPIdentifier *pUserID
 @property  long long databaseScope
 @property  <CKDProtocolTranslatorIdentityDelegate> *identityDelegate

  // class methods
  +[CKDProtocolTranslator translatorIgnoringUserIDsWithPackageStagingDirectory:databaseScope:]

  // instance methods
  -[CKDProtocolTranslator .cxx_destruct]
  -[CKDProtocolTranslator databaseScope]
  -[CKDProtocolTranslator setContainerScopedUserID:]
  -[CKDProtocolTranslator setOrgAdminUserID:]
  -[CKDProtocolTranslator containerScopedUserID]
  -[CKDProtocolTranslator orgAdminUserID]
  -[CKDProtocolTranslator fieldValueTypeFromObject:]
  -[CKDProtocolTranslator fieldValueOfType:withObject:]
  -[CKDProtocolTranslator pRecordIdentifierFromRecordID:]
  -[CKDProtocolTranslator pReferenceFromReference:error:]
  -[CKDProtocolTranslator fieldValueFromObject:]
  -[CKDProtocolTranslator objectRepresentationFromFieldValue:]
  -[CKDProtocolTranslator pQueryFromQuery:error:]
  -[CKDProtocolTranslator pUserIdentifierFromUserRecordName:]
  -[CKDProtocolTranslator pRecordIdentifierFromUserRecordName:]
  -[CKDProtocolTranslator pRecordZoneIdentifierFromRecordZoneID:]
  -[CKDProtocolTranslator recordIDFromPRecordIdentifier:error:]
  -[CKDProtocolTranslator referenceFromPReference:error:]
  -[CKDProtocolTranslator recordFromPRecord:error:]
  -[CKDProtocolTranslator pRecordFromRecord:forCache:]
  -[CKDProtocolTranslator consumeResponseHeader:]
  -[CKDProtocolTranslator initWithContainerScopedUserID:orgAdminUserID:packageStagingDirectory:databaseScope:]
  -[CKDProtocolTranslator setIdentityDelegate:]
  -[CKDProtocolTranslator setDontCreateValidatingParentReferences:]
  -[CKDProtocolTranslator pContainerScopedRecordIdentifierWithPRecordIdentifier:]
  -[CKDProtocolTranslator fieldValueTypeFromEncryptedDataObject:isInList:]
  -[CKDProtocolTranslator objectIsAnEncryptedType:]
  -[CKDProtocolTranslator encryptedFieldValueOfType:withObject:]
  -[CKDProtocolTranslator fieldValueOfType:withObject:forCache:]
  -[CKDProtocolTranslator fieldValueFromObject:forCache:]
  -[CKDProtocolTranslator pAssetFromAsset:]
  -[CKDProtocolTranslator pPackageFromPackage:]
  -[CKDProtocolTranslator pStreamingAssetFromStreamingAsset:forCache:]
  -[CKDProtocolTranslator encryptedObjectRepresentationFromFieldValue:]
  -[CKDProtocolTranslator assetFromPAsset:error:]
  -[CKDProtocolTranslator packageFromPPackage:error:]
  -[CKDProtocolTranslator streamingAssetFromPStreamingAsset:error:]
  -[CKDProtocolTranslator pFieldActionWithLocation:length:values:]
  -[CKDProtocolTranslator pFieldWithKey:value:forCache:]
  -[CKDProtocolTranslator locationFieldValueWithLatitude:longitude:]
  -[CKDProtocolTranslator pFieldWithKey:value:]
  -[CKDProtocolTranslator pShareIdentifierFromRecordID:]
  -[CKDProtocolTranslator setOverriddenContainerScopedUserID:]
  -[CKDProtocolTranslator shareParticipantFromPParticipant:error:]
  -[CKDProtocolTranslator recordZoneFromPRecordZone:error:]
  -[CKDProtocolTranslator pSubscriptionFromSubscription:error:]
  -[CKDProtocolTranslator subscriptionFromPSubscription:error:]
  -[CKDProtocolTranslator pRecordZoneFromRecordZone:]
  -[CKDProtocolTranslator containerPrivacySettingsFromPContainerPrivacySettings:]
  -[CKDProtocolTranslator pRecordFromRecord:]
  -[CKDProtocolTranslator pAliasWithIdentityLookupInfo:]
  -[CKDProtocolTranslator recordZoneIDFromPRecordZoneIdentifier:error:]
  -[CKDProtocolTranslator notificationFromPPushMessage:]
  -[CKDProtocolTranslator shareFromPShare:error:]
  -[CKDProtocolTranslator initWithPackageStagingDirectory:databaseScope:]
  -[CKDProtocolTranslator deltaPRecordFromRecord:withAllFields:outDeletedMergeFields:outKeysToSend:]
  -[CKDProtocolTranslator _initWithContainerScopedUserID:orgAdminUserID:packageStagingDirectory:databaseScope:]
  -[CKDProtocolTranslator overriddenContainerScopedUserID]
  -[CKDProtocolTranslator _isDefaultUserNameFromServer:]
  -[CKDProtocolTranslator _isDefaultUserNameFromClient:]
  -[CKDProtocolTranslator pContainerScopedRecordZoneIdentifierFromFromPRecordZoneIdentifier:]
  -[CKDProtocolTranslator userNameFromPIdentifier:error:]
  -[CKDProtocolTranslator pContainerScopedUserIdentifierFromPUserIdentifier:]
  -[CKDProtocolTranslator recordIDFromPUserName:error:]
  -[CKDProtocolTranslator recordIDFromPShareIdentifier:error:]
  -[CKDProtocolTranslator _valueTypeIsAnEncryptedBytesTypeForField:]
  -[CKDProtocolTranslator pIdentifierFromUserRecordID:]
  -[CKDProtocolTranslator pShareFromShare:forCache:]
  -[CKDProtocolTranslator dontCreateValidatingParentReferences]
  -[CKDProtocolTranslator _pRecordFromRecordSansValues:forCache:]
  -[CKDProtocolTranslator packageStagingDirectory]
  -[CKDProtocolTranslator pParticipantFromShareParticipant:forCache:]
  -[CKDProtocolTranslator identityDelegate]
  -[CKDProtocolTranslator pAliasWithEmailAddress:]
  -[CKDProtocolTranslator pAliasWithUserRecordID:]
  -[CKDProtocolTranslator pAliasWithPhoneNumber:]
  -[CKDProtocolTranslator pAliasWithHashedStringID:type:]
  -[CKDProtocolTranslator pUserID]
  -[CKDProtocolTranslator capabilitiesFromPZoneCapabilities:]
  -[CKDProtocolTranslator identityFromPUser:]
  -[CKDProtocolTranslator setPackageStagingDirectory:]
  -[CKDProtocolTranslator downloadPreauthorizationMap]
  -[CKDProtocolTranslator setDownloadPreauthorizationMap:]


CKDSaveUserPrivacySettingsURLRequest : CKDURLRequest
 @property  long long discoverableTrinary
 @property  NSString *bundleID

  // instance methods
  -[CKDSaveUserPrivacySettingsURLRequest init]
  -[CKDSaveUserPrivacySettingsURLRequest .cxx_destruct]
  -[CKDSaveUserPrivacySettingsURLRequest operationType]
  -[CKDSaveUserPrivacySettingsURLRequest bundleID]
  -[CKDSaveUserPrivacySettingsURLRequest setBundleID:]
  -[CKDSaveUserPrivacySettingsURLRequest databaseScope]
  -[CKDSaveUserPrivacySettingsURLRequest setDiscoverable:]
  -[CKDSaveUserPrivacySettingsURLRequest generateRequestOperations]
  -[CKDSaveUserPrivacySettingsURLRequest requestDidParseProtobufObject:]
  -[CKDSaveUserPrivacySettingsURLRequest requestOperationClasses]
  -[CKDSaveUserPrivacySettingsURLRequest requiresTokenRegistration]
  -[CKDSaveUserPrivacySettingsURLRequest setDiscoverableTrinary:]
  -[CKDSaveUserPrivacySettingsURLRequest discoverableTrinary]


CKDPBundlesForContainerRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // class methods
  +[CKDPBundlesForContainerRequest options]

  // instance methods
  -[CKDPBundlesForContainerRequest isEqual:]
  -[CKDPBundlesForContainerRequest copyWithZone:]
  -[CKDPBundlesForContainerRequest dictionaryRepresentation]
  -[CKDPBundlesForContainerRequest writeTo:]
  -[CKDPBundlesForContainerRequest mergeFrom:]
  -[CKDPBundlesForContainerRequest readFrom:]
  -[CKDPBundlesForContainerRequest copyTo:]
  -[CKDPBundlesForContainerRequest requestTypeCode]
  -[CKDPBundlesForContainerRequest responseClass]


CKDPCSData : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <PQLValuable, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *pcsKeyID
 @property  <NSSecureCoding> *itemID
 @property  ^{_OpaquePCSShareProtection=} pcs
 @property  NSString *etag
 @property  NSData *pcsData

  // class methods
  +[CKDPCSData supportsSecureCoding]
  +[CKDPCSData newFromSqliteStatement:atIndex:]

  // instance methods
  -[CKDPCSData dealloc]
  -[CKDPCSData copyWithZone:]
  -[CKDPCSData encodeWithCoder:]
  -[CKDPCSData initWithCoder:]
  -[CKDPCSData .cxx_destruct]
  -[CKDPCSData etag]
  -[CKDPCSData itemID]
  -[CKDPCSData setEtag:]
  -[CKDPCSData sqliteBind:index:]
  -[CKDPCSData CKPropertiesDescription]
  -[CKDPCSData pcsKeyID]
  -[CKDPCSData setPcsKeyID:]
  -[CKDPCSData pcs]
  -[CKDPCSData pcsData]
  -[CKDPCSData setPcsData:]
  -[CKDPCSData setPcs:]
  -[CKDPCSData shouldEncodePCSData]
  -[CKDPCSData initWithPCSData:]


CKDChainPCSData : CKDPCSData <NSSecureCoding>
 @property  CKEncryptedData *encryptedChainPCSPrivateKey

  // class methods
  +[CKDChainPCSData supportsSecureCoding]

  // instance methods
  -[CKDChainPCSData encodeWithCoder:]
  -[CKDChainPCSData initWithCoder:]
  -[CKDChainPCSData .cxx_destruct]
  -[CKDChainPCSData CKPropertiesDescription]
  -[CKDChainPCSData encryptedChainPCSPrivateKey]
  -[CKDChainPCSData initWithPCSData:encryptedPrivateKey:]


CKDRecordPCSData : CKDPCSData <NSSecureCoding>
 @property  CKRecordID *recordID
 @property  NSString *recordType
 @property  CKRecordID *parentID
 @property  CKDRecordPCSData *parentPCSData
 @property  NSData *chainParentPublicKeyID
 @property  CKDZonePCSData *zonePCSData
 @property  CKRecordZoneID *zoneID
 @property  NSData *zoneishPublicKeyID
 @property  CKDSharePCSData *sharePCSData
 @property  CKRecordID *shareID
 @property  CKDChainPCSData *chainPCSData
 @property  CKEncryptedData *encryptedPublicSharingKey

  // class methods
  +[CKDRecordPCSData supportsSecureCoding]
  +[CKDRecordPCSData dataWithRecord:]

  // instance methods
  -[CKDRecordPCSData encodeWithCoder:]
  -[CKDRecordPCSData initWithCoder:]
  -[CKDRecordPCSData .cxx_destruct]
  -[CKDRecordPCSData itemID]
  -[CKDRecordPCSData zoneID]
  -[CKDRecordPCSData recordType]
  -[CKDRecordPCSData recordID]
  -[CKDRecordPCSData setZoneID:]
  -[CKDRecordPCSData setRecordID:]
  -[CKDRecordPCSData CKPropertiesDescription]
  -[CKDRecordPCSData initWithRecord:]
  -[CKDRecordPCSData chainParentPublicKeyID]
  -[CKDRecordPCSData setChainParentPublicKeyID:]
  -[CKDRecordPCSData encryptedPublicSharingKey]
  -[CKDRecordPCSData shareID]
  -[CKDRecordPCSData setShareID:]
  -[CKDRecordPCSData parentID]
  -[CKDRecordPCSData setParentID:]
  -[CKDRecordPCSData setSharePCSData:]
  -[CKDRecordPCSData chainPCSData]
  -[CKDRecordPCSData zonePCSData]
  -[CKDRecordPCSData zoneishPublicKeyID]
  -[CKDRecordPCSData setZonePCSData:]
  -[CKDRecordPCSData setPcs:]
  -[CKDRecordPCSData sharePCSData]
  -[CKDRecordPCSData setParentPCSData:]
  -[CKDRecordPCSData setChainPCSData:]
  -[CKDRecordPCSData setEncryptedPublicSharingKey:]
  -[CKDRecordPCSData parentPCSData]
  -[CKDRecordPCSData shouldEncodePCSData]
  -[CKDRecordPCSData setZoneishPublicKeyID:]
  -[CKDRecordPCSData initWithPCSData:recordID:]


CKDZonePCSData : CKDPCSData <NSSecureCoding, NSCopying>
 @property  CKRecordID *shareID
 @property  CKRecordZoneID *zoneID
 @property  NSData *zoneishPublicKeyID
 @property  ^{_OpaquePCSShareProtection=} zoneishPCS
 @property  NSData *zoneishPCSData
 @property  CKDSharePCSData *sharePCSData

  // class methods
  +[CKDZonePCSData supportsSecureCoding]
  +[CKDZonePCSData dataWithZone:]

  // instance methods
  -[CKDZonePCSData dealloc]
  -[CKDZonePCSData copyWithZone:]
  -[CKDZonePCSData encodeWithCoder:]
  -[CKDZonePCSData initWithCoder:]
  -[CKDZonePCSData .cxx_destruct]
  -[CKDZonePCSData itemID]
  -[CKDZonePCSData zoneID]
  -[CKDZonePCSData setZoneID:]
  -[CKDZonePCSData shareID]
  -[CKDZonePCSData setShareID:]
  -[CKDZonePCSData initWithZone:]
  -[CKDZonePCSData setSharePCSData:]
  -[CKDZonePCSData zoneishPCS]
  -[CKDZonePCSData zoneishPCSData]
  -[CKDZonePCSData zoneishPublicKeyID]
  -[CKDZonePCSData setZoneishPCS:]
  -[CKDZonePCSData sharePCSData]
  -[CKDZonePCSData setZoneishPublicKeyID:]
  -[CKDZonePCSData setZoneishPCSData:]


CKDSharePCSData : CKDPCSData <NSSecureCoding, NSCopying>
 @property  CKRecordID *shareID
 @property  unsigned long serviceType
 @property  NSString *shareEtag
 @property  long long publicPermission
 @property  long long myParticipantRole
 @property  long long myParticipantPermission
 @property  ^{_OpaquePCSShareProtection=} myParticipantPCS
 @property  NSData *myParticipantPCSData
 @property  ^{_OpaquePCSShareProtection=} invitedPCS
 @property  ^{_OpaquePCSShareProtection=} publicPCS
 @property  NSString *publicPCSEtag
 @property  NSData *publicPCSData

  // class methods
  +[CKDSharePCSData supportsSecureCoding]
  +[CKDSharePCSData dataWithShare:serviceType:]
  +[CKDSharePCSData dataWithShareID:pcsData:]

  // instance methods
  -[CKDSharePCSData dealloc]
  -[CKDSharePCSData copyWithZone:]
  -[CKDSharePCSData encodeWithCoder:]
  -[CKDSharePCSData initWithCoder:]
  -[CKDSharePCSData .cxx_destruct]
  -[CKDSharePCSData serviceType]
  -[CKDSharePCSData setPublicPermission:]
  -[CKDSharePCSData CKPropertiesDescription]
  -[CKDSharePCSData shareEtag]
  -[CKDSharePCSData setShareEtag:]
  -[CKDSharePCSData publicPermission]
  -[CKDSharePCSData shareID]
  -[CKDSharePCSData setShareID:]
  -[CKDSharePCSData setServiceType:]
  -[CKDSharePCSData invitedPCS]
  -[CKDSharePCSData publicPCS]
  -[CKDSharePCSData setInvitedPCS:]
  -[CKDSharePCSData setPublicPCS:]
  -[CKDSharePCSData myParticipantPCSData]
  -[CKDSharePCSData setMyParticipantPCS:]
  -[CKDSharePCSData myParticipantPCS]
  -[CKDSharePCSData publicPCSData]
  -[CKDSharePCSData setPublicPCSData:]
  -[CKDSharePCSData setPublicPCSEtag:]
  -[CKDSharePCSData setMyParticipantPCSData:]
  -[CKDSharePCSData publicPCSEtag]
  -[CKDSharePCSData initWithShareID:pcsData:]
  -[CKDSharePCSData setMyParticipantPermission:]
  -[CKDSharePCSData setMyParticipantRole:]
  -[CKDSharePCSData myParticipantPermission]
  -[CKDSharePCSData myParticipantRole]


CKDPUserPrivacySettings : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasDiscoverable
 @property  BOOL discoverable

  // instance methods
  -[CKDPUserPrivacySettings isEqual:]
  -[CKDPUserPrivacySettings copyWithZone:]
  -[CKDPUserPrivacySettings dictionaryRepresentation]
  -[CKDPUserPrivacySettings writeTo:]
  -[CKDPUserPrivacySettings mergeFrom:]
  -[CKDPUserPrivacySettings readFrom:]
  -[CKDPUserPrivacySettings copyTo:]
  -[CKDPUserPrivacySettings setDiscoverable:]
  -[CKDPUserPrivacySettings discoverable]
  -[CKDPUserPrivacySettings hasDiscoverable]
  -[CKDPUserPrivacySettings setHasDiscoverable:]


CKCDPInitializeContainerRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasContainerName
 @property  NSString *containerName
 @property  BOOL hasPath
 @property  NSString *path
 @property  BOOL hasEnvironment
 @property  NSString *environment

  // instance methods
  -[CKCDPInitializeContainerRequest isEqual:]
  -[CKCDPInitializeContainerRequest copyWithZone:]
  -[CKCDPInitializeContainerRequest .cxx_destruct]
  -[CKCDPInitializeContainerRequest path]
  -[CKCDPInitializeContainerRequest dictionaryRepresentation]
  -[CKCDPInitializeContainerRequest environment]
  -[CKCDPInitializeContainerRequest setEnvironment:]
  -[CKCDPInitializeContainerRequest setPath:]
  -[CKCDPInitializeContainerRequest containerName]
  -[CKCDPInitializeContainerRequest setContainerName:]
  -[CKCDPInitializeContainerRequest writeTo:]
  -[CKCDPInitializeContainerRequest mergeFrom:]
  -[CKCDPInitializeContainerRequest readFrom:]
  -[CKCDPInitializeContainerRequest copyTo:]
  -[CKCDPInitializeContainerRequest hasEnvironment]
  -[CKCDPInitializeContainerRequest hasPath]
  -[CKCDPInitializeContainerRequest hasContainerName]


CKDPUserRetrieveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasUser
 @property  CKDPRecord *user

  // instance methods
  -[CKDPUserRetrieveResponse isEqual:]
  -[CKDPUserRetrieveResponse copyWithZone:]
  -[CKDPUserRetrieveResponse user]
  -[CKDPUserRetrieveResponse .cxx_destruct]
  -[CKDPUserRetrieveResponse dictionaryRepresentation]
  -[CKDPUserRetrieveResponse setUser:]
  -[CKDPUserRetrieveResponse writeTo:]
  -[CKDPUserRetrieveResponse mergeFrom:]
  -[CKDPUserRetrieveResponse readFrom:]
  -[CKDPUserRetrieveResponse copyTo:]
  -[CKDPUserRetrieveResponse hasUser]


CKDAssetVolume : CKObject /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  NSNumber *volumeIndex
 @property  NSUUID *volumeUUID

  // class methods
  +[CKDAssetVolume CKSQLiteClassName]

  // instance methods
  -[CKDAssetVolume .cxx_destruct]
  -[CKDAssetVolume CKPropertiesDescription]
  -[CKDAssetVolume volumeUUID]
  -[CKDAssetVolume setVolumeUUID:]
  -[CKDAssetVolume setVolumeIndex:]
  -[CKDAssetVolume volumeIndex]


CKDLongLivedClientProxy : CKDClientProxy
  // class methods
  +[CKDLongLivedClientProxy longLivedProxyWithContext:]
  +[CKDLongLivedClientProxy clearCachedLongLivedProxies]
  +[CKDLongLivedClientProxy sharedLongLivedProxies]
  +[CKDLongLivedClientProxy _sharedLongLivedProxyForContext:]

  // instance methods
  -[CKDLongLivedClientProxy bundleIdentifier]
  -[CKDLongLivedClientProxy applicationBundleID]
  -[CKDLongLivedClientProxy CKPropertiesDescription]
  -[CKDLongLivedClientProxy isLongLived]
  -[CKDLongLivedClientProxy sourceApplicationBundleIdentifier]
  -[CKDLongLivedClientProxy initWithClientContext:]
  -[CKDLongLivedClientProxy hasOutOfProcessUIEntitlement]
  -[CKDLongLivedClientProxy hasParticipantPIIEntitlement]
  -[CKDLongLivedClientProxy addOperationWithOperationInfo:]
  -[CKDLongLivedClientProxy hasAllowAccessDuringBuddyEntitlement]
  -[CKDLongLivedClientProxy associatedApplicationBundleID]
  -[CKDLongLivedClientProxy hasMasqueradingEntitlement]
  -[CKDLongLivedClientProxy _clientPrefixEntitlement]
  -[CKDLongLivedClientProxy _handleProgressForOperation:withArguments:]
  -[CKDLongLivedClientProxy _handleCompletionForOperation:withBlock:]
  -[CKDLongLivedClientProxy _hasCustomAccountsEntitlement]
  -[CKDLongLivedClientProxy _hasEnvironmentEntitlement]
  -[CKDLongLivedClientProxy hasTCCAuthorization]
  -[CKDLongLivedClientProxy hasProtectionDataEntitlement]
  -[CKDLongLivedClientProxy hasZoneProtectionDataEntitlement]
  -[CKDLongLivedClientProxy hasDeviceIdentifierEntitlement]
  -[CKDLongLivedClientProxy hasCloudKitSystemServiceEntitlement]
  -[CKDLongLivedClientProxy hasDarkWakeNetworkReachabilityEnabledEntitlement]
  -[CKDLongLivedClientProxy hasLightweightPCSEntitlement]
  -[CKDLongLivedClientProxy hasDisplaysSystemAcceptPromptEntitlement]
  -[CKDLongLivedClientProxy hasNonLegacyShareURLEntitlement]
  -[CKDLongLivedClientProxy hasAllowUnverifiedAccountEntitlement]
  -[CKDLongLivedClientProxy hasExplicitCodeOperationURLEntitlement]
  -[CKDLongLivedClientProxy serviceNameForContainerMapEntitlement]
  -[CKDLongLivedClientProxy applicationBundleIDForPush]
  -[CKDLongLivedClientProxy apsEnvironmentEntitlement]


CKDModifyBadgeOperation : CKDOperation
 @property  unsigned long badgeValue

  // class methods
  +[CKDModifyBadgeOperation isPredominatelyDownload]

  // instance methods
  -[CKDModifyBadgeOperation main]
  -[CKDModifyBadgeOperation badgeValue]
  -[CKDModifyBadgeOperation activityCreate]
  -[CKDModifyBadgeOperation initWithOperationInfo:clientContext:]


CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSString *headerKey
 @property  NSString *headerValue

  // instance methods
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo isEqual:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo copyWithZone:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo .cxx_destruct]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo dictionaryRepresentation]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo writeTo:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo mergeFrom:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo readFrom:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo copyTo:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo setHeaderKey:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo setHeaderValue:]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo headerKey]
  -[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo headerValue]


CKDModifyBadgeURLRequest : CKDURLRequest
 @property  unsigned long badgeValue

  // instance methods
  -[CKDModifyBadgeURLRequest operationType]
  -[CKDModifyBadgeURLRequest badgeValue]
  -[CKDModifyBadgeURLRequest initWithBadgeValue:]
  -[CKDModifyBadgeURLRequest generateRequestOperations]
  -[CKDModifyBadgeURLRequest requestDidParseProtobufObject:]
  -[CKDModifyBadgeURLRequest requestOperationClasses]


CKCDPCodeServiceRequestClientConfig : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasServiceType
 @property  int serviceType
 @property  BOOL hasConfig
 @property  CKCDPCodeServiceRequestServiceClientConfig *config

  // instance methods
  -[CKCDPCodeServiceRequestClientConfig isEqual:]
  -[CKCDPCodeServiceRequestClientConfig copyWithZone:]
  -[CKCDPCodeServiceRequestClientConfig .cxx_destruct]
  -[CKCDPCodeServiceRequestClientConfig dictionaryRepresentation]
  -[CKCDPCodeServiceRequestClientConfig config]
  -[CKCDPCodeServiceRequestClientConfig writeTo:]
  -[CKCDPCodeServiceRequestClientConfig setConfig:]
  -[CKCDPCodeServiceRequestClientConfig serviceType]
  -[CKCDPCodeServiceRequestClientConfig mergeFrom:]
  -[CKCDPCodeServiceRequestClientConfig readFrom:]
  -[CKCDPCodeServiceRequestClientConfig copyTo:]
  -[CKCDPCodeServiceRequestClientConfig setServiceType:]
  -[CKCDPCodeServiceRequestClientConfig setHasServiceType:]
  -[CKCDPCodeServiceRequestClientConfig hasServiceType]
  -[CKCDPCodeServiceRequestClientConfig serviceTypeAsString:]
  -[CKCDPCodeServiceRequestClientConfig StringAsServiceType:]
  -[CKCDPCodeServiceRequestClientConfig hasConfig]


CKDAssetTokenRequestOperationInfo : CKDatabaseOperationInfo /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  CKDAssetTokenRequest *assetTokenRequest

  // instance methods
  -[CKDAssetTokenRequestOperationInfo .cxx_destruct]
  -[CKDAssetTokenRequestOperationInfo assetTokenRequest]
  -[CKDAssetTokenRequestOperationInfo setAssetTokenRequest:]


CKDAssetTokenRequestOperation : CKDDatabaseOperation
 @property  CKDAssetTokenRequest *assetTokenRequest

  // instance methods
  -[CKDAssetTokenRequestOperation .cxx_destruct]
  -[CKDAssetTokenRequestOperation main]
  -[CKDAssetTokenRequestOperation initWithOperationInfo:clientContext:]
  -[CKDAssetTokenRequestOperation assetTokenRequest]
  -[CKDAssetTokenRequestOperation setAssetTokenRequest:]


CKDPUserPrivacySettingsBatchLookupRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // class methods
  +[CKDPUserPrivacySettingsBatchLookupRequest options]

  // instance methods
  -[CKDPUserPrivacySettingsBatchLookupRequest isEqual:]
  -[CKDPUserPrivacySettingsBatchLookupRequest copyWithZone:]
  -[CKDPUserPrivacySettingsBatchLookupRequest dictionaryRepresentation]
  -[CKDPUserPrivacySettingsBatchLookupRequest writeTo:]
  -[CKDPUserPrivacySettingsBatchLookupRequest mergeFrom:]
  -[CKDPUserPrivacySettingsBatchLookupRequest readFrom:]
  -[CKDPUserPrivacySettingsBatchLookupRequest copyTo:]
  -[CKDPUserPrivacySettingsBatchLookupRequest requestTypeCode]
  -[CKDPUserPrivacySettingsBatchLookupRequest responseClass]


CKDPUserPrivacySettingsUpdateResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPUserPrivacySettingsUpdateResponse isEqual:]
  -[CKDPUserPrivacySettingsUpdateResponse copyWithZone:]
  -[CKDPUserPrivacySettingsUpdateResponse dictionaryRepresentation]
  -[CKDPUserPrivacySettingsUpdateResponse writeTo:]
  -[CKDPUserPrivacySettingsUpdateResponse mergeFrom:]
  -[CKDPUserPrivacySettingsUpdateResponse readFrom:]
  -[CKDPUserPrivacySettingsUpdateResponse copyTo:]


CKDOperationMetrics : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <MMCSOperationMetric, NSCopying, NSSecureCoding>
 @property  NSMutableArray *ranges
 @property  NSDate *startDate
 @property  double duration
 @property  double queueing
 @property  double executing
 @property  unsigned long bytesUploaded
 @property  unsigned long bytesDownloaded
 @property  unsigned long connections
 @property  unsigned long connectionsCreated
 @property  unsigned long recordsUploaded
 @property  unsigned long recordsDownloaded
 @property  unsigned long recordsDeleted
 @property  unsigned long assetsUploaded
 @property  unsigned long assetsUploadedFileSize
 @property  unsigned long assetsDownloaded
 @property  unsigned long assetsDownloadedFileSize
 @property  unsigned long requestCount
 @property  unsigned long retries
 @property  NSMutableSet *requestUUIDs
 @property  NSMutableDictionary *requestOperationCountsByType
 @property  NSMutableDictionary *totalBytesByChunkProfile
 @property  NSMutableDictionary *chunkCountByChunkProfile
 @property  NSMutableDictionary *fileCountByChunkProfile
 @property  NSArray *rangesCopy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKDOperationMetrics supportsSecureCoding]

  // instance methods
  -[CKDOperationMetrics init]
  -[CKDOperationMetrics copyWithZone:]
  -[CKDOperationMetrics encodeWithCoder:]
  -[CKDOperationMetrics initWithCoder:]
  -[CKDOperationMetrics .cxx_destruct]
  -[CKDOperationMetrics startDate]
  -[CKDOperationMetrics duration]
  -[CKDOperationMetrics retries]
  -[CKDOperationMetrics setRetries:]
  -[CKDOperationMetrics setStartDate:]
  -[CKDOperationMetrics setDuration:]
  -[CKDOperationMetrics bytesDownloaded]
  -[CKDOperationMetrics requestCount]
  -[CKDOperationMetrics setExecuting:]
  -[CKDOperationMetrics CKPropertiesDescription]
  -[CKDOperationMetrics requestUUIDs]
  -[CKDOperationMetrics bytesUploaded]
  -[CKDOperationMetrics queueing]
  -[CKDOperationMetrics executing]
  -[CKDOperationMetrics connections]
  -[CKDOperationMetrics connectionsCreated]
  -[CKDOperationMetrics setQueueing:]
  -[CKDOperationMetrics setBytesUploaded:]
  -[CKDOperationMetrics setBytesDownloaded:]
  -[CKDOperationMetrics setConnections:]
  -[CKDOperationMetrics setConnectionsCreated:]
  -[CKDOperationMetrics addRange:]
  -[CKDOperationMetrics setRequestCount:]
  -[CKDOperationMetrics setRanges:]
  -[CKDOperationMetrics ranges]
  -[CKDOperationMetrics addCKSpecificMetricsFromMetrics:]
  -[CKDOperationMetrics newRangeWithOperationState:startDate:duration:]
  -[CKDOperationMetrics addRequestOperationCountsByOperationType:]
  -[CKDOperationMetrics recordsDownloaded]
  -[CKDOperationMetrics setRecordsDownloaded:]
  -[CKDOperationMetrics assetsDownloaded]
  -[CKDOperationMetrics setAssetsDownloaded:]
  -[CKDOperationMetrics assetsDownloadedFileSize]
  -[CKDOperationMetrics setAssetsDownloadedFileSize:]
  -[CKDOperationMetrics recordsUploaded]
  -[CKDOperationMetrics recordsDeleted]
  -[CKDOperationMetrics assetsUploaded]
  -[CKDOperationMetrics assetsUploadedFileSize]
  -[CKDOperationMetrics requestOperationCountsByType]
  -[CKDOperationMetrics totalBytesByChunkProfile]
  -[CKDOperationMetrics chunkCountByChunkProfile]
  -[CKDOperationMetrics fileCountByChunkProfile]
  -[CKDOperationMetrics setRecordsUploaded:]
  -[CKDOperationMetrics setAssetsUploaded:]
  -[CKDOperationMetrics setAssetsUploadedFileSize:]
  -[CKDOperationMetrics setRecordsDeleted:]
  -[CKDOperationMetrics _initWithStartDate:]
  -[CKDOperationMetrics setRequestOperationCountsByType:]
  -[CKDOperationMetrics setTotalBytesByChunkProfile:]
  -[CKDOperationMetrics setChunkCountByChunkProfile:]
  -[CKDOperationMetrics setFileCountByChunkProfile:]
  -[CKDOperationMetrics rangesCopy]


CKOperationStateTimeRange : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <MMCSOperationStateTimeRange>
 @property  NSDate *startDate
 @property  unsigned long operationState
 @property  double duration
 @property  double queueing
 @property  double executing
 @property  double absoluteStart
 @property  double relativeStart
 @property  double absoluteStop
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKOperationStateTimeRange .cxx_destruct]
  -[CKOperationStateTimeRange startDate]
  -[CKOperationStateTimeRange duration]
  -[CKOperationStateTimeRange setStartDate:]
  -[CKOperationStateTimeRange CKPropertiesDescription]
  -[CKOperationStateTimeRange queueing]
  -[CKOperationStateTimeRange executing]
  -[CKOperationStateTimeRange operationState]
  -[CKOperationStateTimeRange initWithOperationState:startDate:duration:]
  -[CKOperationStateTimeRange absoluteStart]
  -[CKOperationStateTimeRange absoluteStop]
  -[CKOperationStateTimeRange compareStartTime:]
  -[CKOperationStateTimeRange compareStopTime:]
  -[CKOperationStateTimeRange relativeStart]


CKDOperationCombinedMetrics : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <NSCopying, NSSecureCoding>
 @property  CKDOperationMetrics *cloudKitMetrics
 @property  CKDOperationMetrics *MMCSMetrics

  // class methods
  +[CKDOperationCombinedMetrics supportsSecureCoding]

  // instance methods
  -[CKDOperationCombinedMetrics copyWithZone:]
  -[CKDOperationCombinedMetrics encodeWithCoder:]
  -[CKDOperationCombinedMetrics initWithCoder:]
  -[CKDOperationCombinedMetrics .cxx_destruct]
  -[CKDOperationCombinedMetrics cloudKitMetrics]
  -[CKDOperationCombinedMetrics CKPropertiesDescription]
  -[CKDOperationCombinedMetrics MMCSMetrics]
  -[CKDOperationCombinedMetrics setCloudKitMetrics:]
  -[CKDOperationCombinedMetrics setMMCSMetrics:]
  -[CKDOperationCombinedMetrics initWithCloudKitMetrics:andMMCSMetrics:]


CKDProxyPCSManager : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  Class PCSManagerSuperclass

  // instance methods
  -[CKDProxyPCSManager init]
  -[CKDProxyPCSManager respondsToSelector:]
  -[CKDProxyPCSManager methodSignatureForSelector:]
  -[CKDProxyPCSManager forwardInvocation:]
  -[CKDProxyPCSManager .cxx_destruct]
  -[CKDProxyPCSManager weAreNeverEverEverUsingEncryption:]
  -[CKDProxyPCSManager PCSManagerSuperclass]
  -[CKDProxyPCSManager setPCSManagerSuperclass:]


CKDCacheBasedRequest : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL isCancelled
 @property  CKDOperation *operation
 @property  CKDKeyValueDiskCache *cache
 @property  CKDPublicIdentityLookupService *lookupService
 @property  unsigned long fetchBatchSize

  // instance methods
  -[CKDCacheBasedRequest init]
  -[CKDCacheBasedRequest .cxx_destruct]
  -[CKDCacheBasedRequest cancel]
  -[CKDCacheBasedRequest operation]
  -[CKDCacheBasedRequest setOperation:]
  -[CKDCacheBasedRequest isCancelled]
  -[CKDCacheBasedRequest finishWithError:]
  -[CKDCacheBasedRequest setCache:]
  -[CKDCacheBasedRequest cache]
  -[CKDCacheBasedRequest setFetchBatchSize:]
  -[CKDCacheBasedRequest fetchBatchSize]
  -[CKDCacheBasedRequest setIsCancelled:]
  -[CKDCacheBasedRequest performRequest]
  -[CKDCacheBasedRequest setLookupService:]
  -[CKDCacheBasedRequest spawnURLRequests]
  -[CKDCacheBasedRequest lookupService]


CKDPUserQueryResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasUser
 @property  CKDPUser *user

  // instance methods
  -[CKDPUserQueryResponse isEqual:]
  -[CKDPUserQueryResponse copyWithZone:]
  -[CKDPUserQueryResponse user]
  -[CKDPUserQueryResponse .cxx_destruct]
  -[CKDPUserQueryResponse dictionaryRepresentation]
  -[CKDPUserQueryResponse setUser:]
  -[CKDPUserQueryResponse writeTo:]
  -[CKDPUserQueryResponse mergeFrom:]
  -[CKDPUserQueryResponse readFrom:]
  -[CKDPUserQueryResponse copyTo:]
  -[CKDPUserQueryResponse hasUser]


CKDPShareIdentifier : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasValue
 @property  CKDPIdentifier *value
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier

  // instance methods
  -[CKDPShareIdentifier isEqual:]
  -[CKDPShareIdentifier copyWithZone:]
  -[CKDPShareIdentifier .cxx_destruct]
  -[CKDPShareIdentifier value]
  -[CKDPShareIdentifier setValue:]
  -[CKDPShareIdentifier dictionaryRepresentation]
  -[CKDPShareIdentifier writeTo:]
  -[CKDPShareIdentifier mergeFrom:]
  -[CKDPShareIdentifier readFrom:]
  -[CKDPShareIdentifier copyTo:]
  -[CKDPShareIdentifier hasValue]
  -[CKDPShareIdentifier setZoneIdentifier:]
  -[CKDPShareIdentifier hasZoneIdentifier]
  -[CKDPShareIdentifier zoneIdentifier]
  -[CKDPShareIdentifier _CKLogToFileHandle:atDepth:]


CKDModifyRecordsURLRequest : CKDURLRequest
 @property  NSArray *records
 @property  NSArray *recordIDsToDelete
 @property  BOOL oplock
 @property  BOOL sendAllFields
 @property  NSData *clientChangeTokenData
 @property  NSDictionary *requestedFieldsByRecordID
 @property  NSMutableDictionary *recordIDByRequestID
 @property  NSMutableDictionary *recordByRequestID
 @property  NSDictionary *recordIDsToDeleteToEtags
 @property  NSDictionary *conflictLosersToResolveByRecordID
 @property  NSDictionary *pluginFieldsForRecordDeletesByID
 @property  BOOL atomic
 @property  BOOL markAsParticipantNeedsNewInvitationToken
 @property  NSArray *userPublicKeys
 @property  @? recordPostedBlock

  // instance methods
  -[CKDModifyRecordsURLRequest .cxx_destruct]
  -[CKDModifyRecordsURLRequest operationType]
  -[CKDModifyRecordsURLRequest setAtomic:]
  -[CKDModifyRecordsURLRequest records]
  -[CKDModifyRecordsURLRequest recordIDsToDelete]
  -[CKDModifyRecordsURLRequest clientChangeTokenData]
  -[CKDModifyRecordsURLRequest setClientChangeTokenData:]
  -[CKDModifyRecordsURLRequest setRecordIDsToDelete:]
  -[CKDModifyRecordsURLRequest recordIDsToDeleteToEtags]
  -[CKDModifyRecordsURLRequest setRecordIDsToDeleteToEtags:]
  -[CKDModifyRecordsURLRequest atomic]
  -[CKDModifyRecordsURLRequest conflictLosersToResolveByRecordID]
  -[CKDModifyRecordsURLRequest setConflictLosersToResolveByRecordID:]
  -[CKDModifyRecordsURLRequest pluginFieldsForRecordDeletesByID]
  -[CKDModifyRecordsURLRequest setPluginFieldsForRecordDeletesByID:]
  -[CKDModifyRecordsURLRequest markAsParticipantNeedsNewInvitationToken]
  -[CKDModifyRecordsURLRequest setMarkAsParticipantNeedsNewInvitationToken:]
  -[CKDModifyRecordsURLRequest setRecords:]
  -[CKDModifyRecordsURLRequest isolationLevel]
  -[CKDModifyRecordsURLRequest generateRequestOperations]
  -[CKDModifyRecordsURLRequest requestDidParseProtobufObject:]
  -[CKDModifyRecordsURLRequest requestDidParseNodeFailure:]
  -[CKDModifyRecordsURLRequest requestOperationClasses]
  -[CKDModifyRecordsURLRequest allowsAnonymousAccount]
  -[CKDModifyRecordsURLRequest zoneIDsToLock]
  -[CKDModifyRecordsURLRequest recordIDByRequestID]
  -[CKDModifyRecordsURLRequest setRecordIDByRequestID:]
  -[CKDModifyRecordsURLRequest userPublicKeys]
  -[CKDModifyRecordsURLRequest setUserPublicKeys:]
  -[CKDModifyRecordsURLRequest initWithRecordsToSave:recordIDsToDelete:oplock:sendAllFields:clientChangeTokenData:requestedFieldsByRecordId:]
  -[CKDModifyRecordsURLRequest setRecordPostedBlock:]
  -[CKDModifyRecordsURLRequest sendAllFields]
  -[CKDModifyRecordsURLRequest oplock]
  -[CKDModifyRecordsURLRequest requestedFieldsByRecordID]
  -[CKDModifyRecordsURLRequest recordByRequestID]
  -[CKDModifyRecordsURLRequest recordPostedBlock]
  -[CKDModifyRecordsURLRequest setOplock:]
  -[CKDModifyRecordsURLRequest setSendAllFields:]
  -[CKDModifyRecordsURLRequest setRequestedFieldsByRecordID:]
  -[CKDModifyRecordsURLRequest setRecordByRequestID:]


CKLTrafficLogMessage : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *uuid
 @property  NSDate *requestTime
 @property  NSString *requestMethod
 @property  NSURL *requestURL
 @property  NSDictionary *requestHeaders
 @property  long long bodyStreamResetCount
 @property  NSArray *requestObjects
 @property  long long responseStatus
 @property  NSDictionary *responseHeaders
 @property  NSArray *responseObjects
 @property  NSDate *responseTime

  // instance methods
  -[CKLTrafficLogMessage .cxx_destruct]
  -[CKLTrafficLogMessage uuid]
  -[CKLTrafficLogMessage setUuid:]
  -[CKLTrafficLogMessage responseHeaders]
  -[CKLTrafficLogMessage responseTime]
  -[CKLTrafficLogMessage requestTime]
  -[CKLTrafficLogMessage setRequestTime:]
  -[CKLTrafficLogMessage setRequestURL:]
  -[CKLTrafficLogMessage requestURL]
  -[CKLTrafficLogMessage requestMethod]
  -[CKLTrafficLogMessage setRequestMethod:]
  -[CKLTrafficLogMessage setRequestHeaders:]
  -[CKLTrafficLogMessage setResponseHeaders:]
  -[CKLTrafficLogMessage responseStatus]
  -[CKLTrafficLogMessage setResponseStatus:]
  -[CKLTrafficLogMessage requestHeaders]
  -[CKLTrafficLogMessage _initWithUUID:requestMetadata:requestObjects:bodyStreamResetCount:responseMetadata:responseObjects:]
  -[CKLTrafficLogMessage bodyStreamResetCount]
  -[CKLTrafficLogMessage requestObjects]
  -[CKLTrafficLogMessage responseObjects]
  -[CKLTrafficLogMessage setBodyStreamResetCount:]
  -[CKLTrafficLogMessage setRequestObjects:]
  -[CKLTrafficLogMessage setResponseObjects:]


CKCDPInitializeContainerResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSuccess
 @property  BOOL success

  // instance methods
  -[CKCDPInitializeContainerResponse isEqual:]
  -[CKCDPInitializeContainerResponse copyWithZone:]
  -[CKCDPInitializeContainerResponse dictionaryRepresentation]
  -[CKCDPInitializeContainerResponse writeTo:]
  -[CKCDPInitializeContainerResponse mergeFrom:]
  -[CKCDPInitializeContainerResponse readFrom:]
  -[CKCDPInitializeContainerResponse copyTo:]
  -[CKCDPInitializeContainerResponse success]
  -[CKCDPInitializeContainerResponse setSuccess:]
  -[CKCDPInitializeContainerResponse hasSuccess]
  -[CKCDPInitializeContainerResponse setHasSuccess:]


CKCDPCodeServiceRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasServiceName
 @property  NSString *serviceName
 @property  BOOL hasFunctionName
 @property  NSString *functionName
 @property  BOOL hasSerializedParameters
 @property  NSData *serializedParameters
 @property  BOOL hasSerializationFormat
 @property  int serializationFormat
 @property  NSMutableArray *clientConfigs
 @property  BOOL hasAccountConfig
 @property  CKCDPCodeServiceRequestAccountConfig *accountConfig
 @property  BOOL hasRequestContext
 @property  CKCDPCodeServiceRequestRequestContext *requestContext
 @property  BOOL hasAssetAuthorizeGetRequestOptions
 @property  CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions *assetAuthorizeGetRequestOptions
 @property  BOOL hasProtectedCloudComputeMetadata
 @property  CKCDPCodeServiceRequestProtectedCloudComputeMetadata *protectedCloudComputeMetadata

  // class methods
  +[CKCDPCodeServiceRequest clientConfigType]

  // instance methods
  -[CKCDPCodeServiceRequest isEqual:]
  -[CKCDPCodeServiceRequest copyWithZone:]
  -[CKCDPCodeServiceRequest .cxx_destruct]
  -[CKCDPCodeServiceRequest dictionaryRepresentation]
  -[CKCDPCodeServiceRequest serviceName]
  -[CKCDPCodeServiceRequest writeTo:]
  -[CKCDPCodeServiceRequest mergeFrom:]
  -[CKCDPCodeServiceRequest readFrom:]
  -[CKCDPCodeServiceRequest copyTo:]
  -[CKCDPCodeServiceRequest setServiceName:]
  -[CKCDPCodeServiceRequest functionName]
  -[CKCDPCodeServiceRequest setFunctionName:]
  -[CKCDPCodeServiceRequest clientConfigsCount]
  -[CKCDPCodeServiceRequest clearClientConfigs]
  -[CKCDPCodeServiceRequest clientConfigAtIndex:]
  -[CKCDPCodeServiceRequest addClientConfig:]
  -[CKCDPCodeServiceRequest clientConfigs]
  -[CKCDPCodeServiceRequest setClientConfigs:]
  -[CKCDPCodeServiceRequest requestContext]
  -[CKCDPCodeServiceRequest setRequestContext:]
  -[CKCDPCodeServiceRequest hasRequestContext]
  -[CKCDPCodeServiceRequest hasServiceName]
  -[CKCDPCodeServiceRequest serializedParameters]
  -[CKCDPCodeServiceRequest setAssetAuthorizeGetRequestOptions:]
  -[CKCDPCodeServiceRequest assetAuthorizeGetRequestOptions]
  -[CKCDPCodeServiceRequest setSerializedParameters:]
  -[CKCDPCodeServiceRequest setSerializationFormat:]
  -[CKCDPCodeServiceRequest setProtectedCloudComputeMetadata:]
  -[CKCDPCodeServiceRequest hasFunctionName]
  -[CKCDPCodeServiceRequest hasSerializedParameters]
  -[CKCDPCodeServiceRequest hasProtectedCloudComputeMetadata]
  -[CKCDPCodeServiceRequest protectedCloudComputeMetadata]
  -[CKCDPCodeServiceRequest hasAssetAuthorizeGetRequestOptions]
  -[CKCDPCodeServiceRequest setAccountConfig:]
  -[CKCDPCodeServiceRequest serializationFormat]
  -[CKCDPCodeServiceRequest setHasSerializationFormat:]
  -[CKCDPCodeServiceRequest hasSerializationFormat]
  -[CKCDPCodeServiceRequest serializationFormatAsString:]
  -[CKCDPCodeServiceRequest StringAsSerializationFormat:]
  -[CKCDPCodeServiceRequest hasAccountConfig]
  -[CKCDPCodeServiceRequest accountConfig]


CKDPZoneRetrieveChangesResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  NSMutableArray *changedZones
 @property  BOOL hasSyncContinuationToken
 @property  NSData *syncContinuationToken
 @property  BOOL hasStatus
 @property  int status

  // class methods
  +[CKDPZoneRetrieveChangesResponse changedZonesType]

  // instance methods
  -[CKDPZoneRetrieveChangesResponse isEqual:]
  -[CKDPZoneRetrieveChangesResponse copyWithZone:]
  -[CKDPZoneRetrieveChangesResponse .cxx_destruct]
  -[CKDPZoneRetrieveChangesResponse dictionaryRepresentation]
  -[CKDPZoneRetrieveChangesResponse status]
  -[CKDPZoneRetrieveChangesResponse writeTo:]
  -[CKDPZoneRetrieveChangesResponse mergeFrom:]
  -[CKDPZoneRetrieveChangesResponse readFrom:]
  -[CKDPZoneRetrieveChangesResponse copyTo:]
  -[CKDPZoneRetrieveChangesResponse setStatus:]
  -[CKDPZoneRetrieveChangesResponse statusAsString:]
  -[CKDPZoneRetrieveChangesResponse StringAsStatus:]
  -[CKDPZoneRetrieveChangesResponse setHasStatus:]
  -[CKDPZoneRetrieveChangesResponse hasStatus]
  -[CKDPZoneRetrieveChangesResponse setSyncContinuationToken:]
  -[CKDPZoneRetrieveChangesResponse hasSyncContinuationToken]
  -[CKDPZoneRetrieveChangesResponse syncContinuationToken]
  -[CKDPZoneRetrieveChangesResponse changedZones]
  -[CKDPZoneRetrieveChangesResponse addChangedZones:]
  -[CKDPZoneRetrieveChangesResponse changedZonesCount]
  -[CKDPZoneRetrieveChangesResponse clearChangedZones]
  -[CKDPZoneRetrieveChangesResponse changedZonesAtIndex:]
  -[CKDPZoneRetrieveChangesResponse setChangedZones:]


CKDPSubscriptionDeleteResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPSubscriptionDeleteResponse isEqual:]
  -[CKDPSubscriptionDeleteResponse copyWithZone:]
  -[CKDPSubscriptionDeleteResponse dictionaryRepresentation]
  -[CKDPSubscriptionDeleteResponse writeTo:]
  -[CKDPSubscriptionDeleteResponse mergeFrom:]
  -[CKDPSubscriptionDeleteResponse readFrom:]
  -[CKDPSubscriptionDeleteResponse copyTo:]


CKDPRecordRetrieveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRecord
 @property  CKDPRecord *record
 @property  BOOL hasClientVersionETagMatch
 @property  BOOL clientVersionETagMatch

  // instance methods
  -[CKDPRecordRetrieveResponse isEqual:]
  -[CKDPRecordRetrieveResponse copyWithZone:]
  -[CKDPRecordRetrieveResponse .cxx_destruct]
  -[CKDPRecordRetrieveResponse dictionaryRepresentation]
  -[CKDPRecordRetrieveResponse writeTo:]
  -[CKDPRecordRetrieveResponse mergeFrom:]
  -[CKDPRecordRetrieveResponse readFrom:]
  -[CKDPRecordRetrieveResponse copyTo:]
  -[CKDPRecordRetrieveResponse record]
  -[CKDPRecordRetrieveResponse setRecord:]
  -[CKDPRecordRetrieveResponse hasRecord]
  -[CKDPRecordRetrieveResponse setClientVersionETagMatch:]
  -[CKDPRecordRetrieveResponse setHasClientVersionETagMatch:]
  -[CKDPRecordRetrieveResponse hasClientVersionETagMatch]
  -[CKDPRecordRetrieveResponse clientVersionETagMatch]


CKDVolume : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSUUID *volumeUUID
 @property  NSNumber *deviceID
 @property  NSString *mountToPath

  // instance methods
  -[CKDVolume .cxx_destruct]
  -[CKDVolume deviceID]
  -[CKDVolume setDeviceID:]
  -[CKDVolume CKPropertiesDescription]
  -[CKDVolume initWithVolumeUUID:deviceID:mountToPath:]
  -[CKDVolume volumeUUID]
  -[CKDVolume setVolumeUUID:]
  -[CKDVolume mountToPath]
  -[CKDVolume setMountToPath:]


CKDAssetBatch : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSMutableArray *assetRecords
 @property  CKDAssetZone *assetZone
 @property  NSData *authPutRequest
 @property  NSData *authPutResponse
 @property  NSDictionary *authPutResponseHeaders
 @property  BOOL isFailed
 @property  CKDAssetTokenRequest *assetTokenRequest
 @property  unsigned int sizeUpperBound
 @property  unsigned int size
 @property  NSArray *allMMCSItems
 @property  NSArray *allMMCSSectionItems
 @property  NSArray *allRereferenceMMCSItems
 @property  BOOL useMMCSEncryptionV2
 @property  NSArray *allRegularAndSectionAndRereferenceItems

  // instance methods
  -[CKDAssetBatch .cxx_destruct]
  -[CKDAssetBatch size]
  -[CKDAssetBatch isFailed]
  -[CKDAssetBatch CKPropertiesDescription]
  -[CKDAssetBatch setUseMMCSEncryptionV2:]
  -[CKDAssetBatch useMMCSEncryptionV2]
  -[CKDAssetBatch assetRecords]
  -[CKDAssetBatch sizeUpperBound]
  -[CKDAssetBatch allMMCSItems]
  -[CKDAssetBatch allRereferenceMMCSItems]
  -[CKDAssetBatch allMMCSSectionItems]
  -[CKDAssetBatch allMMCSAndSectionItems]
  -[CKDAssetBatch allRegularAndSectionAndRereferenceItems]
  -[CKDAssetBatch firstMMCSItemError]
  -[CKDAssetBatch isEmptyOfRereferencesAssets]
  -[CKDAssetBatch assetTokenRequest]
  -[CKDAssetBatch setAssetTokenRequest:]
  -[CKDAssetBatch initWithAssetZone:]
  -[CKDAssetBatch addAssetRecord:]
  -[CKDAssetBatch assetZone]
  -[CKDAssetBatch isEmptyOfAssets]
  -[CKDAssetBatch setIsFailed:]
  -[CKDAssetBatch authPutRequest]
  -[CKDAssetBatch setAuthPutRequest:]
  -[CKDAssetBatch isRereferenceAssetBatch]
  -[CKDAssetBatch authPutResponse]
  -[CKDAssetBatch setAuthPutResponse:]
  -[CKDAssetBatch setAuthPutResponseHeaders:]
  -[CKDAssetBatch authPutResponseHeaders]
  -[CKDAssetBatch setAssetRecords:]
  -[CKDAssetBatch isPackageSectionBatch]
  -[CKDAssetBatch failIfNotDoneAllRegularAndSectionAndRereferenceItemsWithError:]
  -[CKDAssetBatch setAssetZone:]


CKDRepairAssetsOperation : CKDDatabaseOperation
 @property  CKUploadRequestConfiguration *uploadRequestConfiguration
 @property  NSDictionary *UUIDToAssetOrPackage
 @property  NSDictionary *assetOrPackageUUIDToMetadata
 @property  NSArray *unavailableAssetsAndPackages
 @property  CKDOperation *fetchOperation
 @property  CKDOperation *uploadOperation
 @property  CKDOperation *updateOperation
 @property  NSMutableDictionary *assetOrPackageUUIDToOriginalRecord
 @property  NSDictionary *assetOrPackageUUIDToUploadError
 @property  NSSet *uploadedAssetOrPackageUUIDs
 @property  @? assetOrPackageRepairedBlock

  // instance methods
  -[CKDRepairAssetsOperation .cxx_destruct]
  -[CKDRepairAssetsOperation main]
  -[CKDRepairAssetsOperation uploadRequestConfiguration]
  -[CKDRepairAssetsOperation setUploadRequestConfiguration:]
  -[CKDRepairAssetsOperation _finishOnCallbackQueueWithError:]
  -[CKDRepairAssetsOperation activityCreate]
  -[CKDRepairAssetsOperation updateOperation]
  -[CKDRepairAssetsOperation setUpdateOperation:]
  -[CKDRepairAssetsOperation fetchOperation]
  -[CKDRepairAssetsOperation setFetchOperation:]
  -[CKDRepairAssetsOperation initWithOperationInfo:clientContext:]
  -[CKDRepairAssetsOperation setAssetOrPackageRepairedBlock:]
  -[CKDRepairAssetsOperation nameForState:]
  -[CKDRepairAssetsOperation makeStateTransition]
  -[CKDRepairAssetsOperation repairContext]
  -[CKDRepairAssetsOperation _fetchAssetMetadata]
  -[CKDRepairAssetsOperation _uploadAssetsModify]
  -[CKDRepairAssetsOperation _updateMissingAssetServerStatus]
  -[CKDRepairAssetsOperation assetOrPackageUUIDToMetadata]
  -[CKDRepairAssetsOperation assetOrPackageUUIDToOriginalRecord]
  -[CKDRepairAssetsOperation UUIDToAssetOrPackage]
  -[CKDRepairAssetsOperation assetOrPackageForMetadata:inRecord:]
  -[CKDRepairAssetsOperation assetOrPackageRepairedBlock]
  -[CKDRepairAssetsOperation setAssetOrPackageUUIDToUploadError:]
  -[CKDRepairAssetsOperation setUploadedAssetOrPackageUUIDs:]
  -[CKDRepairAssetsOperation setUploadOperation:]
  -[CKDRepairAssetsOperation uploadedAssetOrPackageUUIDs]
  -[CKDRepairAssetsOperation assetOrPackageUUIDToUploadError]
  -[CKDRepairAssetsOperation unavailableAssetsAndPackages]
  -[CKDRepairAssetsOperation setUUIDToAssetOrPackage:]
  -[CKDRepairAssetsOperation setAssetOrPackageUUIDToMetadata:]
  -[CKDRepairAssetsOperation setUnavailableAssetsAndPackages:]
  -[CKDRepairAssetsOperation uploadOperation]
  -[CKDRepairAssetsOperation setAssetOrPackageUUIDToOriginalRecord:]


CKDProgressTracker : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  BOOL hasCachedTotalBytes
 @property  BOOL hasCachedCompletedBytes
 @property  unsigned long cachedTotalBytes
 @property  unsigned long cachedCompletedBytes
 @property  NSMapTable *completedBytesByItems
 @property  NSString *trackingID
 @property  double lastItemPercentage

  // class methods
  +[CKDProgressTracker _sizeForItem:]

  // instance methods
  -[CKDProgressTracker init]
  -[CKDProgressTracker .cxx_destruct]
  -[CKDProgressTracker trackingID]
  -[CKDProgressTracker setTrackingID:]
  -[CKDProgressTracker initWithTrackingID:]
  -[CKDProgressTracker stopTrackingItems:]
  -[CKDProgressTracker startTrackingItems:]
  -[CKDProgressTracker updateProgressWithItem:progress:]
  -[CKDProgressTracker setLastItemPercentage:]
  -[CKDProgressTracker _updateTotalBytes]
  -[CKDProgressTracker _updateTotalCompletedBytes]
  -[CKDProgressTracker lastItemPercentage]
  -[CKDProgressTracker hasCachedTotalBytes]
  -[CKDProgressTracker setHasCachedTotalBytes:]
  -[CKDProgressTracker hasCachedCompletedBytes]
  -[CKDProgressTracker setHasCachedCompletedBytes:]
  -[CKDProgressTracker cachedTotalBytes]
  -[CKDProgressTracker setCachedTotalBytes:]
  -[CKDProgressTracker cachedCompletedBytes]
  -[CKDProgressTracker setCachedCompletedBytes:]
  -[CKDProgressTracker completedBytesByItems]
  -[CKDProgressTracker setCompletedBytesByItems:]


CKDPCSFetchAggregator : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  CKDClientContext *context
 @property  NSObject<OS_dispatch_queue> *opQueue
 @property  NSOperationQueue *queue
 @property  NSMutableArray *queuedFetches
 @property  NSMutableArray *runningFetches
 @property  NSObject<OS_dispatch_source> *fetchSource
 @property  NSObject<OS_dispatch_source> *timerSource

  // instance methods
  -[CKDPCSFetchAggregator init]
  -[CKDPCSFetchAggregator dealloc]
  -[CKDPCSFetchAggregator setQueue:]
  -[CKDPCSFetchAggregator queue]
  -[CKDPCSFetchAggregator .cxx_destruct]
  -[CKDPCSFetchAggregator cancelAllOperations]
  -[CKDPCSFetchAggregator context]
  -[CKDPCSFetchAggregator setContext:]
  -[CKDPCSFetchAggregator initWithContext:]
  -[CKDPCSFetchAggregator opQueue]
  -[CKDPCSFetchAggregator setTimerSource:]
  -[CKDPCSFetchAggregator timerSource]
  -[CKDPCSFetchAggregator fetchRequestForExistingOperation:isDependentOnOperation:]
  -[CKDPCSFetchAggregator requestFetchOfZoneWithID:forOperation:withCompletionHandler:]
  -[CKDPCSFetchAggregator setOpQueue:]
  -[CKDPCSFetchAggregator fetchSource]
  -[CKDPCSFetchAggregator setFetchSource:]
  -[CKDPCSFetchAggregator requestFetchOfRecordWithID:forOperation:withCompletionHandler:]
  -[CKDPCSFetchAggregator requestFetchOfShareWithID:forOperation:withCompletionHandler:]
  -[CKDPCSFetchAggregator _lockedFetchesAreReady]
  -[CKDPCSFetchAggregator runningFetches]
  -[CKDPCSFetchAggregator queuedFetches]
  -[CKDPCSFetchAggregator _lockedRescheduleFetchTimer]
  -[CKDPCSFetchAggregator _lockedTearDownFetchTimer]
  -[CKDPCSFetchAggregator _lockedGetQueuedFetchForOperation:ofClass:]
  -[CKDPCSFetchAggregator setQueuedFetches:]
  -[CKDPCSFetchAggregator setRunningFetches:]


CKDPZoneRetrieveChangesRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasSyncContinuationToken
 @property  NSData *syncContinuationToken
 @property  BOOL hasMaxChangedZones
 @property  unsigned int maxChangedZones

  // class methods
  +[CKDPZoneRetrieveChangesRequest options]

  // instance methods
  -[CKDPZoneRetrieveChangesRequest isEqual:]
  -[CKDPZoneRetrieveChangesRequest copyWithZone:]
  -[CKDPZoneRetrieveChangesRequest .cxx_destruct]
  -[CKDPZoneRetrieveChangesRequest dictionaryRepresentation]
  -[CKDPZoneRetrieveChangesRequest writeTo:]
  -[CKDPZoneRetrieveChangesRequest mergeFrom:]
  -[CKDPZoneRetrieveChangesRequest readFrom:]
  -[CKDPZoneRetrieveChangesRequest copyTo:]
  -[CKDPZoneRetrieveChangesRequest requestTypeCode]
  -[CKDPZoneRetrieveChangesRequest responseClass]
  -[CKDPZoneRetrieveChangesRequest setSyncContinuationToken:]
  -[CKDPZoneRetrieveChangesRequest hasSyncContinuationToken]
  -[CKDPZoneRetrieveChangesRequest syncContinuationToken]
  -[CKDPZoneRetrieveChangesRequest setMaxChangedZones:]
  -[CKDPZoneRetrieveChangesRequest setHasMaxChangedZones:]
  -[CKDPZoneRetrieveChangesRequest hasMaxChangedZones]
  -[CKDPZoneRetrieveChangesRequest maxChangedZones]


CKDFetchArchivedRecordsOperation : CKDFetchBatchedRecordsOperation <CKDOperationPipelining>
 @property  @? recordFetchedBlock
 @property  @? serverChangeTokenUpdatedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *pipeliningDescription
 @property  NSObject<OS_dispatch_queue> *callbackQueue

  // instance methods
  -[CKDFetchArchivedRecordsOperation .cxx_destruct]
  -[CKDFetchArchivedRecordsOperation setRecordFetchedBlock:]
  -[CKDFetchArchivedRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKDFetchArchivedRecordsOperation activityCreate]
  -[CKDFetchArchivedRecordsOperation recordFetchedBlock]
  -[CKDFetchArchivedRecordsOperation initWithOperationInfo:clientContext:]
  -[CKDFetchArchivedRecordsOperation setServerChangeTokenUpdatedBlock:]
  -[CKDFetchArchivedRecordsOperation pipeliningDescription]
  -[CKDFetchArchivedRecordsOperation _noteCompletedURLRequest:withSchedulerInfo:]
  -[CKDFetchArchivedRecordsOperation _noteChangedRecordWithID:recordType:record:error:]
  -[CKDFetchArchivedRecordsOperation _noteDeletedRecordWithID:recordType:]
  -[CKDFetchArchivedRecordsOperation _createAndConfigureURLRequestForZoneIDs:optionsByZoneID:]
  -[CKDFetchArchivedRecordsOperation _optionsForZonesWithPendingChangesAfterRequest:]
  -[CKDFetchArchivedRecordsOperation _noteOperationBeginning]
  -[CKDFetchArchivedRecordsOperation _noteOperationFinishedBlockEnd]
  -[CKDFetchArchivedRecordsOperation _noteOperationEnding]
  -[CKDFetchArchivedRecordsOperation serverChangeTokenUpdatedBlock]


CKDPZoneDeleteResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
  // instance methods
  -[CKDPZoneDeleteResponse isEqual:]
  -[CKDPZoneDeleteResponse copyWithZone:]
  -[CKDPZoneDeleteResponse dictionaryRepresentation]
  -[CKDPZoneDeleteResponse writeTo:]
  -[CKDPZoneDeleteResponse mergeFrom:]
  -[CKDPZoneDeleteResponse readFrom:]
  -[CKDPZoneDeleteResponse copyTo:]


CKDAssetHandle : CKObject /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  NSNumber *itemID
 @property  NSUUID *UUID
 @property  NSString *path
 @property  NSNumber *volumeIndex
 @property  NSNumber *fileID
 @property  NSNumber *generationID
 @property  NSNumber *lastUsedTime
 @property  NSData *fileSignature
 @property  NSNumber *status
 @property  NSNumber *modTime
 @property  NSNumber *fileSize
 @property  NSNumber *chunkCount

  // class methods
  +[CKDAssetHandle CKSQLiteClassName]
  +[CKDAssetHandle descriptionWithStatus:]

  // instance methods
  -[CKDAssetHandle .cxx_destruct]
  -[CKDAssetHandle path]
  -[CKDAssetHandle fileSize]
  -[CKDAssetHandle UUID]
  -[CKDAssetHandle status]
  -[CKDAssetHandle setUUID:]
  -[CKDAssetHandle setPath:]
  -[CKDAssetHandle itemID]
  -[CKDAssetHandle setItemID:]
  -[CKDAssetHandle setStatus:]
  -[CKDAssetHandle setFileSize:]
  -[CKDAssetHandle lastUsedTime]
  -[CKDAssetHandle CKPropertiesDescription]
  -[CKDAssetHandle dictionaryPropertyEncoding]
  -[CKDAssetHandle initWithPropertyDictionary:]
  -[CKDAssetHandle fileID]
  -[CKDAssetHandle generationID]
  -[CKDAssetHandle setFileID:]
  -[CKDAssetHandle setGenerationID:]
  -[CKDAssetHandle fileSignature]
  -[CKDAssetHandle setFileSignature:]
  -[CKDAssetHandle statusDescription]
  -[CKDAssetHandle chunkCount]
  -[CKDAssetHandle setChunkCount:]
  -[CKDAssetHandle setVolumeIndex:]
  -[CKDAssetHandle volumeIndex]
  -[CKDAssetHandle shouldBeUnregisteredBeforeDeleted]
  -[CKDAssetHandle mayHaveAssetCacheManagedFile]
  -[CKDAssetHandle initWithItemID:UUID:path:]
  -[CKDAssetHandle setModTime:]
  -[CKDAssetHandle isEqualRevisionOfAssetHandle:differencesDescription:]
  -[CKDAssetHandle setLastUsedTime:]
  -[CKDAssetHandle mayBeEvicted]
  -[CKDAssetHandle modTime]
  -[CKDAssetHandle isEqualToAssetHandle:keys:differencesDescription:]


CKCDPCodeServiceRequestRequestContext : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasUserId
 @property  NSString *userId
 @property  BOOL hasContainerName
 @property  NSString *containerName
 @property  BOOL hasDatabaseEnvironment
 @property  int databaseEnvironment
 @property  BOOL hasDatabaseType
 @property  int databaseType
 @property  BOOL hasDeviceId
 @property  NSString *deviceId
 @property  BOOL hasApplicationBundleId
 @property  NSString *applicationBundleId
 @property  BOOL hasDatabasePartition
 @property  int databasePartition
 @property  BOOL hasClientInfo
 @property  NSString *clientInfo
 @property  BOOL hasDsid
 @property  unsigned long dsid
 @property  BOOL hasUserAgent
 @property  NSString *userAgent
 @property  BOOL hasOperationGroup
 @property  CKCDPCodeServiceRequestOperationGroup *operationGroup

  // instance methods
  -[CKCDPCodeServiceRequestRequestContext isEqual:]
  -[CKCDPCodeServiceRequestRequestContext copyWithZone:]
  -[CKCDPCodeServiceRequestRequestContext .cxx_destruct]
  -[CKCDPCodeServiceRequestRequestContext dictionaryRepresentation]
  -[CKCDPCodeServiceRequestRequestContext containerName]
  -[CKCDPCodeServiceRequestRequestContext setContainerName:]
  -[CKCDPCodeServiceRequestRequestContext dsid]
  -[CKCDPCodeServiceRequestRequestContext setDsid:]
  -[CKCDPCodeServiceRequestRequestContext writeTo:]
  -[CKCDPCodeServiceRequestRequestContext mergeFrom:]
  -[CKCDPCodeServiceRequestRequestContext readFrom:]
  -[CKCDPCodeServiceRequestRequestContext copyTo:]
  -[CKCDPCodeServiceRequestRequestContext userAgent]
  -[CKCDPCodeServiceRequestRequestContext setUserAgent:]
  -[CKCDPCodeServiceRequestRequestContext clientInfo]
  -[CKCDPCodeServiceRequestRequestContext deviceId]
  -[CKCDPCodeServiceRequestRequestContext setClientInfo:]
  -[CKCDPCodeServiceRequestRequestContext operationGroup]
  -[CKCDPCodeServiceRequestRequestContext setDeviceId:]
  -[CKCDPCodeServiceRequestRequestContext userId]
  -[CKCDPCodeServiceRequestRequestContext setUserId:]
  -[CKCDPCodeServiceRequestRequestContext hasUserId]
  -[CKCDPCodeServiceRequestRequestContext hasDsid]
  -[CKCDPCodeServiceRequestRequestContext hasContainerName]
  -[CKCDPCodeServiceRequestRequestContext setOperationGroup:]
  -[CKCDPCodeServiceRequestRequestContext setDatabaseEnvironment:]
  -[CKCDPCodeServiceRequestRequestContext setDatabaseType:]
  -[CKCDPCodeServiceRequestRequestContext setApplicationBundleId:]
  -[CKCDPCodeServiceRequestRequestContext databaseEnvironment]
  -[CKCDPCodeServiceRequestRequestContext setHasDatabaseEnvironment:]
  -[CKCDPCodeServiceRequestRequestContext hasDatabaseEnvironment]
  -[CKCDPCodeServiceRequestRequestContext databaseEnvironmentAsString:]
  -[CKCDPCodeServiceRequestRequestContext StringAsDatabaseEnvironment:]
  -[CKCDPCodeServiceRequestRequestContext databaseType]
  -[CKCDPCodeServiceRequestRequestContext setHasDatabaseType:]
  -[CKCDPCodeServiceRequestRequestContext hasDatabaseType]
  -[CKCDPCodeServiceRequestRequestContext databaseTypeAsString:]
  -[CKCDPCodeServiceRequestRequestContext StringAsDatabaseType:]
  -[CKCDPCodeServiceRequestRequestContext hasDeviceId]
  -[CKCDPCodeServiceRequestRequestContext hasApplicationBundleId]
  -[CKCDPCodeServiceRequestRequestContext setDatabasePartition:]
  -[CKCDPCodeServiceRequestRequestContext setHasDatabasePartition:]
  -[CKCDPCodeServiceRequestRequestContext hasDatabasePartition]
  -[CKCDPCodeServiceRequestRequestContext hasClientInfo]
  -[CKCDPCodeServiceRequestRequestContext setHasDsid:]
  -[CKCDPCodeServiceRequestRequestContext hasUserAgent]
  -[CKCDPCodeServiceRequestRequestContext hasOperationGroup]
  -[CKCDPCodeServiceRequestRequestContext applicationBundleId]
  -[CKCDPCodeServiceRequestRequestContext databasePartition]


CKDMarkNotificationsReadURLRequest : CKDURLRequest
 @property  NSArray *notificationIDs
 @property  NSMutableDictionary *notificationIDsByRequestID
 @property  @? notificationMarkedReadProgressBlock

  // instance methods
  -[CKDMarkNotificationsReadURLRequest .cxx_destruct]
  -[CKDMarkNotificationsReadURLRequest operationType]
  -[CKDMarkNotificationsReadURLRequest notificationIDs]
  -[CKDMarkNotificationsReadURLRequest setNotificationIDs:]
  -[CKDMarkNotificationsReadURLRequest initWithNotificationIDsToMarkRead:]
  -[CKDMarkNotificationsReadURLRequest generateRequestOperations]
  -[CKDMarkNotificationsReadURLRequest requestDidParseProtobufObject:]
  -[CKDMarkNotificationsReadURLRequest requestDidParseNodeFailure:]
  -[CKDMarkNotificationsReadURLRequest requestOperationClasses]
  -[CKDMarkNotificationsReadURLRequest zoneIDsToLock]
  -[CKDMarkNotificationsReadURLRequest setNotificationMarkedReadProgressBlock:]
  -[CKDMarkNotificationsReadURLRequest notificationIDsByRequestID]
  -[CKDMarkNotificationsReadURLRequest setNotificationIDsByRequestID:]
  -[CKDMarkNotificationsReadURLRequest notificationMarkedReadProgressBlock]


CKDPQLUpgradeInfo : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  unsigned long version
 @property  ^? upgradeFunction
 @property  BOOL shouldVacuum
 @property  BOOL shouldTruncateDatabase

  // class methods
  +[CKDPQLUpgradeInfo upgradeInfoWithVersion:function:shouldVacuum:shouldTruncate:]

  // instance methods
  -[CKDPQLUpgradeInfo version]
  -[CKDPQLUpgradeInfo setVersion:]
  -[CKDPQLUpgradeInfo shouldVacuum]
  -[CKDPQLUpgradeInfo setShouldVacuum:]
  -[CKDPQLUpgradeInfo initWithVersion:function:shouldVacuum:shouldTruncate:]
  -[CKDPQLUpgradeInfo upgradeFunction]
  -[CKDPQLUpgradeInfo setUpgradeFunction:]
  -[CKDPQLUpgradeInfo shouldTruncateDatabase]
  -[CKDPQLUpgradeInfo setShouldTruncateDatabase:]


CKDPQLCache : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_dispatch_queue> *dbQueue
 @property  unsigned long openHandles
 @property  NSHashTable *contexts
 @property  PQLConnection *database
 @property  BOOL isOpen
 @property  NSString *path
 @property  NSArray *createInitialTablesSQL

  // instance methods
  -[CKDPQLCache .cxx_destruct]
  -[CKDPQLCache path]
  -[CKDPQLCache database]
  -[CKDPQLCache isOpen]
  -[CKDPQLCache openWithError:]
  -[CKDPQLCache contexts]
  -[CKDPQLCache closeWithError:]
  -[CKDPQLCache initWithClientContext:]
  -[CKDPQLCache resetWithError:]
  -[CKDPQLCache dbQueue]
  -[CKDPQLCache createInitialTablesSQL]
  -[CKDPQLCache infoToUpgradeFromVersion:]
  -[CKDPQLCache _setupConnectionWithError:]
  -[CKDPQLCache _truncateAndReconnectToDatabaseWithError:]
  -[CKDPQLCache removeCorruptDatabaseWithError:]
  -[CKDPQLCache _newConnection:]
  -[CKDPQLCache _setupCacheWithError:]
  -[CKDPQLCache openHandles]
  -[CKDPQLCache setOpenHandles:]
  -[CKDPQLCache _lockedOpenDatabase:]
  -[CKDPQLCache removeDatabaseFilesWithError:]
  -[CKDPQLCache performOnDBQueue:]
  -[CKDPQLCache _closeWithError:force:]
  -[CKDPQLCache forceCloseWithError:]
  -[CKDPQLCache setDbQueue:]


CKDResetUserPrivacySettingsURLRequest : CKDURLRequest
  // instance methods
  -[CKDResetUserPrivacySettingsURLRequest operationType]
  -[CKDResetUserPrivacySettingsURLRequest databaseScope]
  -[CKDResetUserPrivacySettingsURLRequest generateRequestOperations]
  -[CKDResetUserPrivacySettingsURLRequest requestDidParseProtobufObject:]
  -[CKDResetUserPrivacySettingsURLRequest requestOperationClasses]
  -[CKDResetUserPrivacySettingsURLRequest requiresTokenRegistration]


CKDModifyRecordZonesURLRequest : CKDURLRequest
 @property  NSArray *recordZonesToSave
 @property  NSArray *recordZoneIDsToDelete
 @property  NSMutableDictionary *recordZoneIDByRequestID
 @property  BOOL markZonesAsUserPurged
 @property  NSDate *lastMissingManateeIdentityErrorDate
 @property  @? recordZoneModifiedBlock

  // instance methods
  -[CKDModifyRecordZonesURLRequest .cxx_destruct]
  -[CKDModifyRecordZonesURLRequest operationType]
  -[CKDModifyRecordZonesURLRequest initWithRecordZonesToSave:recordZoneIDsToDelete:]
  -[CKDModifyRecordZonesURLRequest setMarkZonesAsUserPurged:]
  -[CKDModifyRecordZonesURLRequest recordZonesToSave]
  -[CKDModifyRecordZonesURLRequest setRecordZonesToSave:]
  -[CKDModifyRecordZonesURLRequest recordZoneIDsToDelete]
  -[CKDModifyRecordZonesURLRequest setRecordZoneIDsToDelete:]
  -[CKDModifyRecordZonesURLRequest markZonesAsUserPurged]
  -[CKDModifyRecordZonesURLRequest generateRequestOperations]
  -[CKDModifyRecordZonesURLRequest requestDidParseProtobufObject:]
  -[CKDModifyRecordZonesURLRequest requestDidParseNodeFailure:]
  -[CKDModifyRecordZonesURLRequest requestOperationClasses]
  -[CKDModifyRecordZonesURLRequest zoneIDsToLock]
  -[CKDModifyRecordZonesURLRequest setLastMissingManateeIdentityErrorDate:]
  -[CKDModifyRecordZonesURLRequest lastMissingManateeIdentityErrorDate]
  -[CKDModifyRecordZonesURLRequest setRecordZoneModifiedBlock:]
  -[CKDModifyRecordZonesURLRequest recordZoneIDByRequestID]
  -[CKDModifyRecordZonesURLRequest setRecordZoneIDByRequestID:]
  -[CKDModifyRecordZonesURLRequest recordZoneModifiedBlock]


CKDGetRecordZonesURLRequest : CKDURLRequest
 @property  NSArray *zoneIDs
 @property  NSMutableDictionary *zoneIDByRequestID
 @property  NSArray *recordZones
 @property  BOOL onlyFetchPCSInfo
 @property  @? recordZoneFetchedBlock

  // instance methods
  -[CKDGetRecordZonesURLRequest .cxx_destruct]
  -[CKDGetRecordZonesURLRequest operationType]
  -[CKDGetRecordZonesURLRequest recordZones]
  -[CKDGetRecordZonesURLRequest zoneIDs]
  -[CKDGetRecordZonesURLRequest setZoneIDs:]
  -[CKDGetRecordZonesURLRequest initWithRecordZoneIDs:]
  -[CKDGetRecordZonesURLRequest setOnlyFetchPCSInfo:]
  -[CKDGetRecordZonesURLRequest onlyFetchPCSInfo]
  -[CKDGetRecordZonesURLRequest generateRequestOperations]
  -[CKDGetRecordZonesURLRequest requestDidParseProtobufObject:]
  -[CKDGetRecordZonesURLRequest requestDidParseNodeFailure:]
  -[CKDGetRecordZonesURLRequest requestOperationClasses]
  -[CKDGetRecordZonesURLRequest allowsAnonymousAccount]
  -[CKDGetRecordZonesURLRequest zoneIDsToLock]
  -[CKDGetRecordZonesURLRequest setRecordZoneFetchedBlock:]
  -[CKDGetRecordZonesURLRequest zoneIDByRequestID]
  -[CKDGetRecordZonesURLRequest recordZoneFetchedBlock]
  -[CKDGetRecordZonesURLRequest setZoneIDByRequestID:]


CKDMarkAssetBrokenURLRequest : CKDURLRequest
 @property  CKUploadRequestMetadata *metadata
 @property  BOOL writeRepairRecord
 @property  @? assetBrokenBlock

  // instance methods
  -[CKDMarkAssetBrokenURLRequest .cxx_destruct]
  -[CKDMarkAssetBrokenURLRequest operationType]
  -[CKDMarkAssetBrokenURLRequest setMetadata:]
  -[CKDMarkAssetBrokenURLRequest metadata]
  -[CKDMarkAssetBrokenURLRequest writeRepairRecord]
  -[CKDMarkAssetBrokenURLRequest setWriteRepairRecord:]
  -[CKDMarkAssetBrokenURLRequest generateRequestOperations]
  -[CKDMarkAssetBrokenURLRequest requestDidParseProtobufObject:]
  -[CKDMarkAssetBrokenURLRequest requestDidParseNodeFailure:]
  -[CKDMarkAssetBrokenURLRequest requestOperationClasses]
  -[CKDMarkAssetBrokenURLRequest initWithAssetOrPackageMetadata:writeRepairRecord:]
  -[CKDMarkAssetBrokenURLRequest setAssetBrokenBlock:]
  -[CKDMarkAssetBrokenURLRequest assetBrokenBlock]


CKDPRecordSaveRequestShareIdUpdate : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasShareId
 @property  CKDPShareIdentifier *shareId

  // instance methods
  -[CKDPRecordSaveRequestShareIdUpdate isEqual:]
  -[CKDPRecordSaveRequestShareIdUpdate copyWithZone:]
  -[CKDPRecordSaveRequestShareIdUpdate .cxx_destruct]
  -[CKDPRecordSaveRequestShareIdUpdate dictionaryRepresentation]
  -[CKDPRecordSaveRequestShareIdUpdate writeTo:]
  -[CKDPRecordSaveRequestShareIdUpdate mergeFrom:]
  -[CKDPRecordSaveRequestShareIdUpdate readFrom:]
  -[CKDPRecordSaveRequestShareIdUpdate copyTo:]
  -[CKDPRecordSaveRequestShareIdUpdate setShareId:]
  -[CKDPRecordSaveRequestShareIdUpdate hasShareId]
  -[CKDPRecordSaveRequestShareIdUpdate shareId]


CKDPShareVettingInitiateRequest : PBRequest /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasShareId
 @property  CKDPShareIdentifier *shareId
 @property  BOOL hasEncryptedKey
 @property  NSData *encryptedKey
 @property  BOOL hasParticipantId
 @property  NSString *participantId
 @property  BOOL hasBaseToken
 @property  NSString *baseToken

  // class methods
  +[CKDPShareVettingInitiateRequest options]

  // instance methods
  -[CKDPShareVettingInitiateRequest isEqual:]
  -[CKDPShareVettingInitiateRequest copyWithZone:]
  -[CKDPShareVettingInitiateRequest .cxx_destruct]
  -[CKDPShareVettingInitiateRequest dictionaryRepresentation]
  -[CKDPShareVettingInitiateRequest writeTo:]
  -[CKDPShareVettingInitiateRequest mergeFrom:]
  -[CKDPShareVettingInitiateRequest readFrom:]
  -[CKDPShareVettingInitiateRequest copyTo:]
  -[CKDPShareVettingInitiateRequest requestTypeCode]
  -[CKDPShareVettingInitiateRequest responseClass]
  -[CKDPShareVettingInitiateRequest baseToken]
  -[CKDPShareVettingInitiateRequest setBaseToken:]
  -[CKDPShareVettingInitiateRequest encryptedKey]
  -[CKDPShareVettingInitiateRequest setEncryptedKey:]
  -[CKDPShareVettingInitiateRequest hasEncryptedKey]
  -[CKDPShareVettingInitiateRequest setShareId:]
  -[CKDPShareVettingInitiateRequest setParticipantId:]
  -[CKDPShareVettingInitiateRequest hasShareId]
  -[CKDPShareVettingInitiateRequest shareId]
  -[CKDPShareVettingInitiateRequest hasParticipantId]
  -[CKDPShareVettingInitiateRequest participantId]
  -[CKDPShareVettingInitiateRequest hasBaseToken]


CKDPNotificationSyncResponsePushMessage : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasIsRead
 @property  BOOL isRead
 @property  BOOL hasUuid
 @property  NSString *uuid
 @property  BOOL hasSource
 @property  int source
 @property  BOOL hasDialog
 @property  NSString *dialog
 @property  BOOL hasSound
 @property  NSString *sound
 @property  BOOL hasBadgeCount
 @property  int badgeCount
 @property  BOOL hasPayload
 @property  NSData *payload
 @property  BOOL hasCategory
 @property  NSString *category
 @property  BOOL hasTitle
 @property  NSString *title
 @property  BOOL hasTitleLocalizedKey
 @property  NSString *titleLocalizedKey
 @property  NSMutableArray *titleLocalizedArguments
 @property  BOOL hasSubtitle
 @property  NSString *subtitle
 @property  BOOL hasSubtitleLocalizedKey
 @property  NSString *subtitleLocalizedKey
 @property  NSMutableArray *subtitleLocalizedArguments

  // class methods
  +[CKDPNotificationSyncResponsePushMessage titleLocalizedArgumentsType]
  +[CKDPNotificationSyncResponsePushMessage subtitleLocalizedArgumentsType]

  // instance methods
  -[CKDPNotificationSyncResponsePushMessage isEqual:]
  -[CKDPNotificationSyncResponsePushMessage copyWithZone:]
  -[CKDPNotificationSyncResponsePushMessage setSource:]
  -[CKDPNotificationSyncResponsePushMessage .cxx_destruct]
  -[CKDPNotificationSyncResponsePushMessage source]
  -[CKDPNotificationSyncResponsePushMessage category]
  -[CKDPNotificationSyncResponsePushMessage setCategory:]
  -[CKDPNotificationSyncResponsePushMessage dictionaryRepresentation]
  -[CKDPNotificationSyncResponsePushMessage uuid]
  -[CKDPNotificationSyncResponsePushMessage title]
  -[CKDPNotificationSyncResponsePushMessage setTitle:]
  -[CKDPNotificationSyncResponsePushMessage isRead]
  -[CKDPNotificationSyncResponsePushMessage setUuid:]
  -[CKDPNotificationSyncResponsePushMessage writeTo:]
  -[CKDPNotificationSyncResponsePushMessage subtitle]
  -[CKDPNotificationSyncResponsePushMessage mergeFrom:]
  -[CKDPNotificationSyncResponsePushMessage readFrom:]
  -[CKDPNotificationSyncResponsePushMessage copyTo:]
  -[CKDPNotificationSyncResponsePushMessage setPayload:]
  -[CKDPNotificationSyncResponsePushMessage payload]
  -[CKDPNotificationSyncResponsePushMessage hasSource]
  -[CKDPNotificationSyncResponsePushMessage hasCategory]
  -[CKDPNotificationSyncResponsePushMessage setSubtitle:]
  -[CKDPNotificationSyncResponsePushMessage hasTitle]
  -[CKDPNotificationSyncResponsePushMessage setSound:]
  -[CKDPNotificationSyncResponsePushMessage sound]
  -[CKDPNotificationSyncResponsePushMessage setIsRead:]
  -[CKDPNotificationSyncResponsePushMessage hasUuid]
  -[CKDPNotificationSyncResponsePushMessage setHasSource:]
  -[CKDPNotificationSyncResponsePushMessage sourceAsString:]
  -[CKDPNotificationSyncResponsePushMessage StringAsSource:]
  -[CKDPNotificationSyncResponsePushMessage hasSubtitle]
  -[CKDPNotificationSyncResponsePushMessage hasPayload]
  -[CKDPNotificationSyncResponsePushMessage dialog]
  -[CKDPNotificationSyncResponsePushMessage setDialog:]
  -[CKDPNotificationSyncResponsePushMessage badgeCount]
  -[CKDPNotificationSyncResponsePushMessage setBadgeCount:]
  -[CKDPNotificationSyncResponsePushMessage setHasBadgeCount:]
  -[CKDPNotificationSyncResponsePushMessage hasBadgeCount]
  -[CKDPNotificationSyncResponsePushMessage addTitleLocalizedArguments:]
  -[CKDPNotificationSyncResponsePushMessage addSubtitleLocalizedArguments:]
  -[CKDPNotificationSyncResponsePushMessage setTitleLocalizedKey:]
  -[CKDPNotificationSyncResponsePushMessage titleLocalizedArgumentsCount]
  -[CKDPNotificationSyncResponsePushMessage clearTitleLocalizedArguments]
  -[CKDPNotificationSyncResponsePushMessage titleLocalizedArgumentsAtIndex:]
  -[CKDPNotificationSyncResponsePushMessage setSubtitleLocalizedKey:]
  -[CKDPNotificationSyncResponsePushMessage subtitleLocalizedArgumentsCount]
  -[CKDPNotificationSyncResponsePushMessage clearSubtitleLocalizedArguments]
  -[CKDPNotificationSyncResponsePushMessage subtitleLocalizedArgumentsAtIndex:]
  -[CKDPNotificationSyncResponsePushMessage hasTitleLocalizedKey]
  -[CKDPNotificationSyncResponsePushMessage hasSubtitleLocalizedKey]
  -[CKDPNotificationSyncResponsePushMessage titleLocalizedKey]
  -[CKDPNotificationSyncResponsePushMessage titleLocalizedArguments]
  -[CKDPNotificationSyncResponsePushMessage setTitleLocalizedArguments:]
  -[CKDPNotificationSyncResponsePushMessage subtitleLocalizedKey]
  -[CKDPNotificationSyncResponsePushMessage subtitleLocalizedArguments]
  -[CKDPNotificationSyncResponsePushMessage setSubtitleLocalizedArguments:]
  -[CKDPNotificationSyncResponsePushMessage hasDialog]
  -[CKDPNotificationSyncResponsePushMessage hasIsRead]
  -[CKDPNotificationSyncResponsePushMessage setHasIsRead:]
  -[CKDPNotificationSyncResponsePushMessage hasSound]


CKDCancelTokenGroup : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation <CKDCancelling>
 @property  NSMutableArray *cancelTokens

  // instance methods
  -[CKDCancelTokenGroup init]
  -[CKDCancelTokenGroup .cxx_destruct]
  -[CKDCancelTokenGroup cancel]
  -[CKDCancelTokenGroup cancelTokens]
  -[CKDCancelTokenGroup setCancelTokens:]
  -[CKDCancelTokenGroup removeAllCancelTokens]
  -[CKDCancelTokenGroup addCancelToken:withOperation:]
  -[CKDCancelTokenGroup removeCancelToken:]


CKDAppContainerIntersectionMetadata : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  long long tokenRegistered

  // instance methods
  -[CKDAppContainerIntersectionMetadata init]
  -[CKDAppContainerIntersectionMetadata tokenRegistered]
  -[CKDAppContainerIntersectionMetadata setTokenRegistered:]


CKDApplicationMetadata : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *apsEnvironmentString
 @property  long long isApplication
 @property  BOOL isCKSystemService
 @property  BOOL canMasquerade
 @property  BOOL canSetEnvironment
 @property  BOOL allowCustomAccounts
 @property  BOOL canAccessProtectionData
 @property  BOOL canAccessZoneProtectionData
 @property  BOOL canSetDeviceIdentifier
 @property  BOOL hasAccessDuringBuddy
 @property  BOOL hasLightweightPCS
 @property  BOOL hasTCCAuthorization
 @property  BOOL allowsPowerNapScheduling
 @property  BOOL isOOPUI
 @property  BOOL allowsParticipantPII
 @property  BOOL displaysSystemAcceptPrompt
 @property  NSString *entitlementSpecifiedPCSServiceName
 @property  NSString *applicationIdentifier
 @property  NSString *clientPrefix
 @property  NSString *pushBundleID
 @property  NSString *associatedApplicationBundleID
 @property  NSString *applicationContainerPath
 @property  BOOL canUseNonLegacyShareURL
 @property  BOOL allowUnverifiedAccount
 @property  BOOL canSetExplicitCodeOperationURL

  // instance methods
  -[CKDApplicationMetadata init]
  -[CKDApplicationMetadata .cxx_destruct]
  -[CKDApplicationMetadata applicationIdentifier]
  -[CKDApplicationMetadata setApplicationIdentifier:]
  -[CKDApplicationMetadata isApplication]
  -[CKDApplicationMetadata setIsApplication:]
  -[CKDApplicationMetadata setClientPrefix:]
  -[CKDApplicationMetadata clientPrefix]
  -[CKDApplicationMetadata canAccessProtectionData]
  -[CKDApplicationMetadata associatedApplicationBundleID]
  -[CKDApplicationMetadata hasTCCAuthorization]
  -[CKDApplicationMetadata applicationContainerPath]
  -[CKDApplicationMetadata setApsEnvironmentString:]
  -[CKDApplicationMetadata setIsCKSystemService:]
  -[CKDApplicationMetadata setCanMasquerade:]
  -[CKDApplicationMetadata setCanSetEnvironment:]
  -[CKDApplicationMetadata setAllowCustomAccounts:]
  -[CKDApplicationMetadata setAssociatedApplicationBundleID:]
  -[CKDApplicationMetadata setPushBundleID:]
  -[CKDApplicationMetadata setHasTCCAuthorization:]
  -[CKDApplicationMetadata setCanAccessProtectionData:]
  -[CKDApplicationMetadata setCanAccessZoneProtectionData:]
  -[CKDApplicationMetadata setCanSetDeviceIdentifier:]
  -[CKDApplicationMetadata setAllowsPowerNapScheduling:]
  -[CKDApplicationMetadata setHasAccessDuringBuddy:]
  -[CKDApplicationMetadata setHasLightweightPCS:]
  -[CKDApplicationMetadata setIsOOPUI:]
  -[CKDApplicationMetadata setAllowsParticipantPII:]
  -[CKDApplicationMetadata setDisplaysSystemAcceptPrompt:]
  -[CKDApplicationMetadata setCanUseNonLegacyShareURL:]
  -[CKDApplicationMetadata setAllowUnverifiedAccount:]
  -[CKDApplicationMetadata setCanSetExplicitCodeOperationURL:]
  -[CKDApplicationMetadata setApplicationContainerPath:]
  -[CKDApplicationMetadata setEntitlementSpecifiedPCSServiceName:]
  -[CKDApplicationMetadata entitlementSpecifiedPCSServiceName]
  -[CKDApplicationMetadata allowsPowerNapScheduling]
  -[CKDApplicationMetadata apsEnvironmentString]
  -[CKDApplicationMetadata isCKSystemService]
  -[CKDApplicationMetadata canMasquerade]
  -[CKDApplicationMetadata canSetEnvironment]
  -[CKDApplicationMetadata allowCustomAccounts]
  -[CKDApplicationMetadata canAccessZoneProtectionData]
  -[CKDApplicationMetadata canSetDeviceIdentifier]
  -[CKDApplicationMetadata hasAccessDuringBuddy]
  -[CKDApplicationMetadata hasLightweightPCS]
  -[CKDApplicationMetadata isOOPUI]
  -[CKDApplicationMetadata allowsParticipantPII]
  -[CKDApplicationMetadata displaysSystemAcceptPrompt]
  -[CKDApplicationMetadata pushBundleID]
  -[CKDApplicationMetadata canUseNonLegacyShareURL]
  -[CKDApplicationMetadata allowUnverifiedAccount]
  -[CKDApplicationMetadata canSetExplicitCodeOperationURL]


CKDPushToken : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *apsEnvironmentString
 @property  NSData *apsToken

  // instance methods
  -[CKDPushToken isEqual:]
  -[CKDPushToken .cxx_destruct]
  -[CKDPushToken apsToken]
  -[CKDPushToken setApsEnvironmentString:]
  -[CKDPushToken apsEnvironmentString]
  -[CKDPushToken setApsToken:]


CKDMetadataCache : CKSQLite /System/Library/PrivateFrameworks/CoreAnalytics.framework/CoreAnalytics
 @property  NSObject<OS_dispatch_queue> *cacheQueue

  // class methods
  +[CKDMetadataCache sharedCache]
  +[CKDMetadataCache dbFileName]

  // instance methods
  -[CKDMetadataCache .cxx_destruct]
  -[CKDMetadataCache setGlobalConfiguration:]
  -[CKDMetadataCache globalConfiguration]
  -[CKDMetadataCache cacheQueue]
  -[CKDMetadataCache setCacheQueue:]
  -[CKDMetadataCache knownAppContainerTuplesForAccountID:]
  -[CKDMetadataCache setAppContainerIntersectionMetadata:forAppContainerAccountTuple:]
  -[CKDMetadataCache setApplicationMetadata:forApplicationBundleID:sourceApplicationBundleID:]
  -[CKDMetadataCache appContainerIntersectionMetadataForAppContainerAccountTuple:]
  -[CKDMetadataCache applicationMetadataForApplicationBundleID:sourceApplicationBundleID:]
  -[CKDMetadataCache removeContainerID:]
  -[CKDMetadataCache knownAppContainerAccountTuples]
  -[CKDMetadataCache _initWithCacheDir:]
  -[CKDMetadataCache setPushToken:forAppContainerAccountTuple:]
  -[CKDMetadataCache setDateOfLastTokenUpdate:]
  -[CKDMetadataCache pushTokenForAppContainerAccountTuple:filterOldTokens:]
  -[CKDMetadataCache publicKeyOfType:withIdentifier:]
  -[CKDMetadataCache setPublicKey:ofType:withIdentifier:]
  -[CKDMetadataCache setContainerInfo:forContainerID:accountID:]
  -[CKDMetadataCache containerInfoForContainerID:accountID:]
  -[CKDMetadataCache expungeWithDeletedAccountID:forceRemove:]
  -[CKDMetadataCache inlock_setDateOfLastTokenUpdate:]
  -[CKDMetadataCache inlock_applicationMetadataForApplicationBundleID:sourceApplicationBundleID:]
  -[CKDMetadataCache inlock_containerInfoForContainerID:accountID:]
  -[CKDMetadataCache expungeStaleAccountIDs]
  -[CKDMetadataCache dateOfLastTokenUpdate]
  -[CKDMetadataCache knownApplicationBundleIDs]
  -[CKDMetadataCache knownContainerizedApplicationBundleIDs]
  -[CKDMetadataCache removeKnownApplicationBundleID:sourceApplicationBundleID:]


CKDPSubscriptionNotification : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasAlert
 @property  CKDPSubscriptionNotificationAlert *alert
 @property  BOOL hasShouldBadge
 @property  BOOL shouldBadge
 @property  NSMutableArray *additionalFields
 @property  BOOL hasShouldSendContentAvailable
 @property  BOOL shouldSendContentAvailable
 @property  BOOL hasShouldSendMutableContent
 @property  BOOL shouldSendMutableContent
 @property  BOOL hasCollapseIdKey
 @property  NSString *collapseIdKey

  // class methods
  +[CKDPSubscriptionNotification additionalFieldsType]

  // instance methods
  -[CKDPSubscriptionNotification isEqual:]
  -[CKDPSubscriptionNotification copyWithZone:]
  -[CKDPSubscriptionNotification .cxx_destruct]
  -[CKDPSubscriptionNotification dictionaryRepresentation]
  -[CKDPSubscriptionNotification writeTo:]
  -[CKDPSubscriptionNotification setShouldSendContentAvailable:]
  -[CKDPSubscriptionNotification mergeFrom:]
  -[CKDPSubscriptionNotification readFrom:]
  -[CKDPSubscriptionNotification copyTo:]
  -[CKDPSubscriptionNotification shouldBadge]
  -[CKDPSubscriptionNotification shouldSendContentAvailable]
  -[CKDPSubscriptionNotification shouldSendMutableContent]
  -[CKDPSubscriptionNotification setShouldBadge:]
  -[CKDPSubscriptionNotification setShouldSendMutableContent:]
  -[CKDPSubscriptionNotification alert]
  -[CKDPSubscriptionNotification setAlert:]
  -[CKDPSubscriptionNotification collapseIdKey]
  -[CKDPSubscriptionNotification additionalFields]
  -[CKDPSubscriptionNotification hasAlert]
  -[CKDPSubscriptionNotification setAdditionalFields:]
  -[CKDPSubscriptionNotification setCollapseIdKey:]
  -[CKDPSubscriptionNotification addAdditionalFields:]
  -[CKDPSubscriptionNotification additionalFieldsCount]
  -[CKDPSubscriptionNotification clearAdditionalFields]
  -[CKDPSubscriptionNotification additionalFieldsAtIndex:]
  -[CKDPSubscriptionNotification setHasShouldBadge:]
  -[CKDPSubscriptionNotification hasShouldBadge]
  -[CKDPSubscriptionNotification setHasShouldSendContentAvailable:]
  -[CKDPSubscriptionNotification hasShouldSendContentAvailable]
  -[CKDPSubscriptionNotification setHasShouldSendMutableContent:]
  -[CKDPSubscriptionNotification hasShouldSendMutableContent]
  -[CKDPSubscriptionNotification hasCollapseIdKey]


CKDPRecordStableUrl : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasRoutingKey
 @property  NSString *routingKey
 @property  BOOL hasShortTokenHash
 @property  NSData *shortTokenHash
 @property  BOOL hasProtectedFullToken
 @property  NSData *protectedFullToken
 @property  BOOL hasEncryptedPublicSharingKey
 @property  NSData *encryptedPublicSharingKey
 @property  BOOL hasDisplayedHostname
 @property  NSString *displayedHostname

  // instance methods
  -[CKDPRecordStableUrl isEqual:]
  -[CKDPRecordStableUrl copyWithZone:]
  -[CKDPRecordStableUrl .cxx_destruct]
  -[CKDPRecordStableUrl dictionaryRepresentation]
  -[CKDPRecordStableUrl writeTo:]
  -[CKDPRecordStableUrl mergeFrom:]
  -[CKDPRecordStableUrl readFrom:]
  -[CKDPRecordStableUrl copyTo:]
  -[CKDPRecordStableUrl routingKey]
  -[CKDPRecordStableUrl setRoutingKey:]
  -[CKDPRecordStableUrl displayedHostname]
  -[CKDPRecordStableUrl setDisplayedHostname:]
  -[CKDPRecordStableUrl encryptedPublicSharingKey]
  -[CKDPRecordStableUrl protectedFullToken]
  -[CKDPRecordStableUrl setProtectedFullToken:]
  -[CKDPRecordStableUrl setShortTokenHash:]
  -[CKDPRecordStableUrl hasRoutingKey]
  -[CKDPRecordStableUrl hasShortTokenHash]
  -[CKDPRecordStableUrl shortTokenHash]
  -[CKDPRecordStableUrl setEncryptedPublicSharingKey:]
  -[CKDPRecordStableUrl hasProtectedFullToken]
  -[CKDPRecordStableUrl hasDisplayedHostname]
  -[CKDPRecordStableUrl hasEncryptedPublicSharingKey]


CKDAccountManateeObserver : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSObject<OS_dispatch_queue> *statusQueue
 @property  long long manateeAvailableForLoggedInAccount
 @property  NSError *lastCDPError

  // class methods
  +[CKDAccountManateeObserver sharedObserver]

  // instance methods
  -[CKDAccountManateeObserver init]
  -[CKDAccountManateeObserver dealloc]
  -[CKDAccountManateeObserver .cxx_destruct]
  -[CKDAccountManateeObserver isManateeAvailable:]
  -[CKDAccountManateeObserver accountSupportsManatee:]
  -[CKDAccountManateeObserver statusQueue]
  -[CKDAccountManateeObserver setStatusQueue:]
  -[CKDAccountManateeObserver statusForCurrentlyLoggedInAccountWithCompletionHandler:]
  -[CKDAccountManateeObserver _lockedSetManateeAvailableForLoggedInAccount:]
  -[CKDAccountManateeObserver setLastCDPError:]
  -[CKDAccountManateeObserver _fetchManateeAvailability:]
  -[CKDAccountManateeObserver manateeAvailableForLoggedInAccount]
  -[CKDAccountManateeObserver lastCDPError]
  -[CKDAccountManateeObserver _lockedFetchAndUpdateManateeAvailability]
  -[CKDAccountManateeObserver handleUpdateNotificationWithAvailability:]


CKDPZoneSaveResponse : PBCodable /System/Library/Frameworks/CoreLocation.framework/CoreLocation <NSCopying>
 @property  BOOL hasCapabilities
 @property  CKDPZoneCapabilities *capabilities

  // instance methods
  -[CKDPZoneSaveResponse isEqual:]
  -[CKDPZoneSaveResponse copyWithZone:]
  -[CKDPZoneSaveResponse .cxx_destruct]
  -[CKDPZoneSaveResponse dictionaryRepresentation]
  -[CKDPZoneSaveResponse writeTo:]
  -[CKDPZoneSaveResponse mergeFrom:]
  -[CKDPZoneSaveResponse readFrom:]
  -[CKDPZoneSaveResponse copyTo:]
  -[CKDPZoneSaveResponse capabilities]
  -[CKDPZoneSaveResponse setCapabilities:]
  -[CKDPZoneSaveResponse hasCapabilities]


PCCWrappedKey : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  ^{pcc_wrapped_invocation_key=*Q} wrappedInvocationKey
 @property  NSData *routingToken

  // instance methods
  -[PCCWrappedKey dealloc]
  -[PCCWrappedKey clear]
  -[PCCWrappedKey .cxx_destruct]
  -[PCCWrappedKey data]
  -[PCCWrappedKey setRoutingToken:]
  -[PCCWrappedKey routingToken]
  -[PCCWrappedKey setWrappedInvocationKey:]
  -[PCCWrappedKey wrappedInvocationKey]
  -[PCCWrappedKey initWithKey:permittedRemoteMeasurement:attestation:]


PCCAttestation : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  NSString *certificate
 @property  NSData *applicationEnclaveQuote
 @property  NSData *quotingEnclaveQuote
 @property  NSData *routingToken

  // instance methods
  -[PCCAttestation .cxx_destruct]
  -[PCCAttestation certificate]
  -[PCCAttestation setCertificate:]
  -[PCCAttestation setRoutingToken:]
  -[PCCAttestation routingToken]
  -[PCCAttestation initWithCertificate:applicationEnclaveQuote:quotingEnclaveQuote:routingToken:]
  -[PCCAttestation applicationEnclaveQuote]
  -[PCCAttestation setApplicationEnclaveQuote:]
  -[PCCAttestation quotingEnclaveQuote]
  -[PCCAttestation setQuotingEnclaveQuote:]


PCCKey : NSObject /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
 @property  ^{pcc_invocation_key=[32C]} secret

  // instance methods
  -[PCCKey init]
  -[PCCKey dealloc]
  -[PCCKey clear]
  -[PCCKey secret]
  -[PCCKey setSecret:]
  -[PCCKey encrypt:]
  -[PCCKey decrypt:]


CKShare(CKDaemonExtensions)
	// instance methods
	-[CKShare(CKDaemonExtensions) hasEncryptedPersonalInfo]
	-[CKShare(CKDaemonExtensions) _prepPCSDataWithContext:databaseScope:publicSharingKey:removeServerSpecifiedKeys:containerIdentifier:sharedRecordZone:completionHandler:]
	-[CKShare(CKDaemonExtensions) setSharePCSData:]
	-[CKShare(CKDaemonExtensions) _encryptPersonalInfoWithPCSBlob:pcsManager:]
	-[CKShare(CKDaemonExtensions) _decryptPersonalInfoWithPCSBlob:pcsManager:]
	-[CKShare(CKDaemonExtensions) _ingestAndExportPPPCSFromShareInvitationToken:context:completionHandler:]
	-[CKShare(CKDaemonExtensions) _prepPCSDataWithContext:databaseScope:publicSharingKey:removeServerSpecifiedKeys:containerIdentifier:completionHandler:]
	-[CKShare(CKDaemonExtensions) _prepPCSDataUsingPreDecryptedPCSOnlyWithContext:databaseScope:]
	-[CKShare(CKDaemonExtensions) publicPCS]
	-[CKShare(CKDaemonExtensions) setPublicPCS:]
	-[CKShare(CKDaemonExtensions) privatePCS]
	-[CKShare(CKDaemonExtensions) setSharePCSData:isUnitTestAccount:]
	-[CKShare(CKDaemonExtensions) setPrivatePCS:]

CKShareParticipant(CKDaemonExtensions)
	// instance methods
	-[CKShareParticipant(CKDaemonExtensions) hasEncryptedPersonalInfo]
	-[CKShareParticipant(CKDaemonExtensions) _encryptPersonalInfoWithPCSBlob:inShareWithID:pcsManager:]
	-[CKShareParticipant(CKDaemonExtensions) _decryptPersonalInfoWithPCSBlob:inShareWithID:pcsManager:]

CKUserIdentity(CKDaemonExtensions)
	// instance methods
	-[CKUserIdentity(CKDaemonExtensions) hasEncryptedPersonalInfo]
	-[CKUserIdentity(CKDaemonExtensions) _encryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:]
	-[CKUserIdentity(CKDaemonExtensions) _decryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:]

CKUserIdentityLookupInfo(CKDaemonExtensions)
	// instance methods
	-[CKUserIdentityLookupInfo(CKDaemonExtensions) hasEncryptedPersonalInfo]
	-[CKUserIdentityLookupInfo(CKDaemonExtensions) _encryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:]
	-[CKUserIdentityLookupInfo(CKDaemonExtensions) _decryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:]

CKShareMetadata(CKDaemonExtensions)
	// instance methods
	-[CKShareMetadata(CKDaemonExtensions) hasEncryptedData]
	-[CKShareMetadata(CKDaemonExtensions) _encryptDataWithPCSBlob:pcsManager:]
	-[CKShareMetadata(CKDaemonExtensions) _decryptDataWithPCSBlob:pcsManager:]
	-[CKShareMetadata(CKDaemonExtensions) publicPCS]
	-[CKShareMetadata(CKDaemonExtensions) setPublicPCS:]

NSXPCConnection(CKXPCExtensions)
	// instance methods
	-[NSXPCConnection(CKXPCExtensions) CKValueForEntitlements:error:]

CKOperationInfo(DaemonExtensions)
	// instance methods
	-[CKOperationInfo(DaemonExtensions) validateAgainstLiveProxy:error:]

C2MetricOptions(CKMetricOptionAdditions)
	// class methods
	+[C2MetricOptions(CKMetricOptionAdditions) metricOptionsForNetworkRequest:]
	+[C2MetricOptions(CKMetricOptionAdditions) metricOptionsForNetworkOperation:]
	+[C2MetricOptions(CKMetricOptionAdditions) metricOptionsForEventMetric:metricType:proxy:config:completionHandler:]

	// instance methods
	-[C2MetricOptions(CKMetricOptionAdditions) _setupC2MetricsEndpointWithContext:]
	-[C2MetricOptions(CKMetricOptionAdditions) _attributeCurrentProxy:config:]

NSDictionary(CloudKitExtensions)
	// instance methods
	-[NSDictionary(CloudKitExtensions) CKObjectForKeyCaseInsensitive:]
	-[NSDictionary(CloudKitExtensions) CKPercentEscapedQueryString]
	-[NSDictionary(CloudKitExtensions) _CKLogToFileHandle:atDepth:]

NSError(CKLogError)
	// class methods
	+[NSError(CKLogError) CKLogErrorWithCode:format:]

NSDate(CKHack)
	// class methods
	+[NSDate(CKHack) ck_dateFormatterWithString:]
	+[NSDate(CKHack) ck_dateWithNaturalLanguageString:]
	+[NSDate(CKHack) CKSharedCalendar]

	// instance methods
	-[NSDate(CKHack) _CKLogToFileHandle:atDepth:]

ACAccount(CloudKitAdditions)
	// instance methods
	-[ACAccount(CloudKitAdditions) ck_identifier]
	-[ACAccount(CloudKitAdditions) ck_accountProperties]
	-[ACAccount(CloudKitAdditions) ck_cloudKitAccount]
	-[ACAccount(CloudKitAdditions) ck_dataclassProperties]
	-[ACAccount(CloudKitAdditions) ck_personaIdentifier]

NSStream(BoundPairAdditions)
	// class methods
	+[NSStream(BoundPairAdditions) createBoundInputStream:outputStream:bufferSize:]

NSArray(CKDUploadAssetsOperationAdditions)
	// instance methods
	-[NSArray(CKDUploadAssetsOperationAdditions) CKSortedForUpload]
	-[NSArray(CKDUploadAssetsOperationAdditions) _CKLogToFileHandle:atDepth:]

NSExpression(Conversion)
	// class methods
	+[NSExpression(Conversion) expressionWithCKDPRecordFieldValue:translator:]

NSPredicate(Conversion)
	// class methods
	+[NSPredicate(Conversion) predicateWithCKDPQueryFilters:translator:]
	+[NSPredicate(Conversion) predicateWithSortedCKDPQueryFilters:translator:]

	// instance methods
	-[NSPredicate(Conversion) CKDPQueryFiltersWithTranslator:error:]

NSComparisonPredicate(Conversion)
	// instance methods
	-[NSComparisonPredicate(Conversion) _comparisonOptionForString:]
	-[NSComparisonPredicate(Conversion) _parseFullTextSearchUsingContainsTranslator:withError:]
	-[NSComparisonPredicate(Conversion) _parseFullTextSearchFiltersWithTranslator:withError:]
	-[NSComparisonPredicate(Conversion) _parseListContainsFiltersWithTranslator:withError:]
	-[NSComparisonPredicate(Conversion) _parseInFiltersWithTranslator:withError:]
	-[NSComparisonPredicate(Conversion) _parseListContainsAnyFiltersWithTranslator:withError:]
	-[NSComparisonPredicate(Conversion) _parseListContainsAllFiltersWithTranslator:withError:]
	-[NSComparisonPredicate(Conversion) _parseBeginsWithFiltersWithTranslator:withError:]
	-[NSComparisonPredicate(Conversion) _parseBetweenFiltersWithTranslator:withError:]
	-[NSComparisonPredicate(Conversion) _parseBasicOperatorFiltersWithTranslator:withError:]
	-[NSComparisonPredicate(Conversion) CKDPQueryFiltersWithTranslator:error:]
	-[NSComparisonPredicate(Conversion) _nearFilterWithKey:location:radius:translator:]
	-[NSComparisonPredicate(Conversion) _parseNearFiltersWithTranslator:withError:]

NSCompoundPredicate(Conversion)
	// instance methods
	-[NSCompoundPredicate(Conversion) CKDPQueryFiltersWithTranslator:error:]

NSSortDescriptor(Conversion)
	// instance methods
	-[NSSortDescriptor(Conversion) CKDPQuerySort]

CKLocationSortDescriptor(Conversion)
	// instance methods
	-[CKLocationSortDescriptor(Conversion) CKDPQuerySort]

CKRecordID(CKPrequeliteBindings)
	// class methods
	+[CKRecordID(CKPrequeliteBindings) newFromSqliteStatement:atIndex:]

	// instance methods
	-[CKRecordID(CKPrequeliteBindings) sqliteBind:index:]

CKRecordZoneID(CKPrequeliteBindings)
	// class methods
	+[CKRecordZoneID(CKPrequeliteBindings) newFromSqliteStatement:atIndex:]

	// instance methods
	-[CKRecordZoneID(CKPrequeliteBindings) sqliteBind:index:]

NSFileHandle(CKLResponseLogging)
	// instance methods
	-[NSFileHandle(CKLResponseLogging) writeString:]

NSObject(CKLResponseLogging)
	// instance methods
	-[NSObject(CKLResponseLogging) CKLogToFileHandle:]
	-[NSObject(CKLResponseLogging) _CKLogToFileHandle:atDepth:]

NSString(CKLResponseLogging)
	// instance methods
	-[NSString(CKLResponseLogging) _CKLogToFileHandle:atDepth:]

NSData(CKLResponseLogging)
	// instance methods
	-[NSData(CKLResponseLogging) _CKLogToFileHandle:atDepth:]

NSNumber(CKLResponseLogging)
	// instance methods
	-[NSNumber(CKLResponseLogging) _CKLogToFileHandle:atDepth:]

PBCodable(CKLResponseLogging)
	// instance methods
	-[PBCodable(CKLResponseLogging) _CKLogToFileHandle:atDepth:]
	-[PBCodable(CKLResponseLogging) _hasIvar:]

CKDPIdentifier(CKDPResponseLogging)
	// instance methods
	-[CKDPIdentifier(CKDPResponseLogging) _CKLogToFileHandle:atDepth:]

CKDPRecordIdentifier(CKDPResponseLogging)
	// instance methods
	-[CKDPRecordIdentifier(CKDPResponseLogging) _CKLogToFileHandle:atDepth:]

CKDPRecordZoneIdentifier(CKDPResponseLogging)
	// instance methods
	-[CKDPRecordZoneIdentifier(CKDPResponseLogging) _CKLogToFileHandle:atDepth:]

CKDPDate(CKLResponseLogging)
	// instance methods
	-[CKDPDate(CKLResponseLogging) _CKLogToFileHandle:atDepth:]

CKModifyRecordsOperationInfo(DaemonExtensions)
	// instance methods
	-[CKModifyRecordsOperationInfo(DaemonExtensions) validateAgainstLiveProxy:error:]

CKRecordZone(PCSPrivate)
	// instance methods
	-[CKRecordZone(PCSPrivate) zoneishPCS]
	-[CKRecordZone(PCSPrivate) fillOutPCSMetadataInfo]
	-[CKRecordZone(PCSPrivate) setZoneishPCS:]
	-[CKRecordZone(PCSPrivate) setZonePCS:]
	-[CKRecordZone(PCSPrivate) zonePCS]

CKRecord(PCSPrivate)
	// instance methods
	-[CKRecord(PCSPrivate) setRecordPCS:]
	-[CKRecord(PCSPrivate) recordPCS]
	-[CKRecord(PCSPrivate) fillOutPCSMetadataInfo]

C2ReportMetrics(CKReportMetricAdditions)
	// class methods
	+[C2ReportMetrics(CKReportMetricAdditions) reportCKEventMetric:proxy:completionHandler:]

CKMetric(MMCSCompat)
	// instance methods
	-[CKMetric(MMCSCompat) initWithMMCSOperationMetric:]

CKAsset(CKDaemonExtensions)
	// instance methods
	-[CKAsset(CKDaemonExtensions) fillInDownloadURLsForAssetWithFieldName:fileName:recordPCS:pcsManager:useEncryption:useClearAssetEncryption:outError:]

01 00 0c00 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AAAuthenticateRequest 
01 00 0c00 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AADeviceListRequest 
01 00 0c00 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AADeviceListResponse 
01 00 0c00 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AARequester 
01 00 0c00 /System/Library/PrivateFrameworks/AppleAccount.framework/AppleAccount: AAUpdateProvisioningRequest 
01 00 1b00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 1b00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 1100 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationContext 
01 00 1100 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKAppleIDAuthenticationController 
01 00 1100 /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit: AKUsernameFormatter 
01 00 1900 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0e00 /System/Library/PrivateFrameworks/C2.framework/C2: C2MetricOperationGroupOptions 
01 00 0e00 /System/Library/PrivateFrameworks/C2.framework/C2: C2MetricOperationOptions 
01 00 0e00 /System/Library/PrivateFrameworks/C2.framework/C2: C2MetricOptions 
01 00 0e00 /System/Library/PrivateFrameworks/C2.framework/C2: C2MetricRequestOptions 
01 00 0e00 /System/Library/PrivateFrameworks/C2.framework/C2: C2ReportMetrics 
01 00 0e00 /System/Library/PrivateFrameworks/C2.framework/C2: C2RequestManager 
01 00 0e00 /System/Library/PrivateFrameworks/C2.framework/C2: C2RequestOptions 
01 00 0f00 /System/Library/PrivateFrameworks/CoreCDP.framework/CoreCDP: CDPStateController 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAccountInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAccountOverrideInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKApplicationPermissionGroup 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAsset 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAssetDownloadPreauthorization 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAssetRepairOperationUtilities 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAssetReuploadExpectedProperties 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAssetTransferOptions 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAssetUploadRequestMetadata 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAutoBugCaptureMetadata 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKBehaviorOptions 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKCodeFunctionInvokeOperationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerID 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerSetupInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDPDate 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDPIdentifier 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDPLocationCoordinate 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDPRecordIdentifier 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDPRecordReference 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDPRecordZoneIdentifier 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDatabase 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDatabaseOperationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDatabaseSubscription 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKDeviceToDeviceShareInvitationToken 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedData 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedDate 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedDateArray 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedDouble 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedDoubleArray 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedEmptyArray 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedLocation 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedLocationArray 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedLongLong 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedLongLongArray 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedReference 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedString 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKEncryptedStringArray 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKException 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchArchivedRecordsOptions 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchDatabaseChangesOperationResult 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchNotificationChangesOperationResult 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordChangesOperationResult 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesConfiguration 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperation 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZoneChangesOperationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordZonesOperationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchRecordsOperationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchShareMetadataOperationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchUserQuotaOperationResult 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchWebAuthTokenOperationResult 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFetchWhitelistedBundleIDsOperationResult 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFileMetadata 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFileOpenInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKFlowControl 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKInternalError 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKLocationSortDescriptor 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKMetric 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordZonesOperationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKModifyRecordsOperationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotification 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotificationID 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKNotificationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKObject 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationConfiguration 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationGroup 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationGroupSystemImposedInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationGroupSystemImposedInfoConfiguration 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationMetrics 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKOperationResult 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKPCSDiagnosticInformation 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKPackage 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKPackageItem 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKPackageSection 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKPackageUploadRequestMetadata 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKPrettyError 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKPublicKey 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQueryCursor 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQueryOperationResult 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKQuerySubscription 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecord 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordGraph 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordID 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZone 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneID 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRecordZoneSubscription 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKReference 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKRequestInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKSQLite 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKSQLitePool 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKServerChangeToken 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKShare 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKShareMetadata 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKShareParticipant 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKSignatureGenerator 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKStreamingAsset 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKSyncingClientInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKUserIdentity 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKUserIdentityLookupInfo 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKUserNotificationUtilities 
01 00 1200 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKZonePCSDiagnosticInformation 
01 00 2000 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0100 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFetchRequest 
01 00 0100 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactStore 
01 00 0700 /System/Library/PrivateFrameworks/IMCore.framework/IMCore: IMCloudKitHooks 
01 00 2700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationProxy 
01 00 2700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 2700 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSPlugInKitProxy 
01 00 0b00 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantValueExpression 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSDistributedNotificationCenter 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1a00 /System/Library/Frameworks/CFNetwork.framework/CFNetwork: NSMutableURLRequest 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 2500 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOutputStream 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSStream 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 2600 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCListener 
01 00 1800 /System/Library/PrivateFrameworks/LoggingSupport.framework/LoggingSupport: OSActivityStream 
01 00 1800 /System/Library/PrivateFrameworks/LoggingSupport.framework/LoggingSupport: OSLogPersistence 
01 00 1f00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1f00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataReader 
01 00 1f00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBDataWriter 
01 00 1f00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBMessageStreamReader 
01 00 1f00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBMessageStreamWriter 
01 00 1f00 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBRequest 
01 00 1600 /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/ProtectedCloudStorage: PCSAccountManager 
01 00 1600 /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/ProtectedCloudStorage: PCSShareProtectionObject 
01 00 1400 /usr/lib/libprequelite.dylib: PQLConnection 
01 00 0400 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 0400 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserPersonaAttributes 
01 00 0400 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserSyncTask 
01 00 0500 /System/Library/PrivateFrameworks/DuetActivityScheduler.framework/DuetActivityScheduler: _DASActivityGroup 
01 00 0500 /System/Library/PrivateFrameworks/DuetActivityScheduler.framework/DuetActivityScheduler: _DASScheduler 
