|| __DATA.__objc_data _OBJC_CLASS_$_SKAuthenticationPresentEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SKAuthenticationRequestEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SKAuthenticationResponseEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SKDevice
|| __DATA.__objc_data _OBJC_CLASS_$_SKEvent
|| __DATA.__objc_data _OBJC_CLASS_$_SKEventCaptiveNetworkPresent
|| __DATA.__objc_data _OBJC_CLASS_$_SKSetupBase
|| __DATA.__objc_data _OBJC_CLASS_$_SKSetupCaptiveNetworkJoinClient
|| __DATA.__objc_data _OBJC_CLASS_$_SKSetupCaptiveNetworkJoinServer
|| __DATA.__objc_data _OBJC_CLASS_$_SKSetupClient
|| __DATA.__objc_data _OBJC_CLASS_$_SKSetupSIMTransferClient
|| __DATA.__objc_data _OBJC_CLASS_$_SKSetupSIMTransferServer
|| __DATA.__objc_data _OBJC_CLASS_$_SKSetupServer
|| __DATA.__objc_data _OBJC_CLASS_$_SKStepWiFiPreflight
|| __DATA.__objc_data _OBJC_CLASS_$_SKStepWiFiSetupClient
|| __DATA.__objc_data _OBJC_CLASS_$_SKStepWiFiSetupServer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKAuthenticationPresentEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKAuthenticationRequestEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKAuthenticationResponseEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKDevice
|| __DATA.__objc_data _OBJC_METACLASS_$_SKEvent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKEventCaptiveNetworkPresent
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSetupBase
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSetupCaptiveNetworkJoinClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSetupCaptiveNetworkJoinServer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSetupClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSetupSIMTransferClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSetupSIMTransferServer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKSetupServer
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStepWiFiPreflight
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStepWiFiSetupClient
|| __DATA.__objc_data _OBJC_METACLASS_$_SKStepWiFiSetupServer
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._activateCalled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._controlFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._dispatchQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._invalidateCalled
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._invalidateDone
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._password
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._passwordType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._peerDevice
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._pskData
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._registeredEvents
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._registeredRequests
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._runState
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._sendDataHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._setupType
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._skCnx
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._stepArray
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._stepCurrent
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._ucat
|| __DATA.__objc_ivar _OBJC_IVAR_$_SKSetupBase._ucatBase
|| __DATA_CONST.__const _SKOptionTimeoutSeconds
|| __TEXT.__text _SKFrameworkBundle
|| __TEXT.__text _SKLocalizedString
__ CaptiveNetwork: _CNIAmTheWebsheetApp2
__ CaptiveNetwork: _CNProberCreate
__ CaptiveNetwork: _CNWebsheetNotifyComplete
__ CaptiveNetwork: _kCNSWebsheetInfoPropertyInterfaceName
__ CaptiveNetwork: _kCNSWebsheetInfoPropertySSID
__ CaptiveNetwork: _kCNSWebsheetInfoPropertyURL
__ CoreBluetooth: _OBJC_CLASS_$_CBAdvertiser
__ CoreBluetooth: _OBJC_CLASS_$_CBConnection
__ CoreBluetooth: _OBJC_CLASS_$_CBDevice
__ CoreBluetooth: _OBJC_CLASS_$_CBServer
__ CoreFollowUp: _FLGroupIdentifierDevice
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpAction
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpController
__ CoreFollowUp: _OBJC_CLASS_$_FLFollowUpItem
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryGetTypeID
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFPreferencesAnyApplication
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreUtils: _CFDictionaryGetDouble
__ CoreUtils: _CFDictionaryGetInt64
__ CoreUtils: _CFDictionaryGetInt64Ranged
__ CoreUtils: _CFDictionaryGetTypedValue
__ CoreUtils: _CFGetTypedObject
__ CoreUtils: _CUAppendF
__ CoreUtils: _CUDecodeNSErrorDictionary
__ CoreUtils: _CUDescriptionWithLevel
__ CoreUtils: _CUDispatchTimerSet
__ CoreUtils: _CUEncodeNSErrorDictionary
__ CoreUtils: _CUFatalErrorF
__ CoreUtils: _CUGetInterfaceAddresses
__ CoreUtils: _CUIsGreenTeaDevice
__ CoreUtils: _CUPrintErrorCode
__ CoreUtils: _CUPrintFlags32
__ CoreUtils: _CUPrintNSDataHex
__ CoreUtils: _CUPrintNSError
__ CoreUtils: _CUPrintNSObject
__ CoreUtils: _CUPrintNSObjectOneLine
__ CoreUtils: _CUPrintNSObjectOneLineEx
__ CoreUtils: _CryptoHKDF
__ CoreUtils: _GestaltGetDeviceClass
__ CoreUtils: _LogCategoryReplaceF
__ CoreUtils: _LogCategory_Remove
__ CoreUtils: _LogPrintF
__ CoreUtils: _LogPrintF_safe
__ CoreUtils: _NSDictionaryGetNSNumber
__ CoreUtils: _NSErrorF_safe
__ CoreUtils: _NSErrorNestedF
__ CoreUtils: _NSErrorWithOSStatusF
__ CoreUtils: _NSPrintF
__ CoreUtils: _OBJC_CLASS_$_CUBonjourAdvertiser
__ CoreUtils: _OBJC_CLASS_$_CUBonjourBrowser
__ CoreUtils: _OBJC_CLASS_$_CUNANPublisher
__ CoreUtils: _OBJC_CLASS_$_CUNANSubscriber
__ CoreUtils: _OBJC_CLASS_$_CUPairingSession
__ CoreUtils: _OBJC_CLASS_$_CUPairingStream
__ CoreUtils: _OBJC_CLASS_$_CUReachabilityMonitor
__ CoreUtils: _OBJC_CLASS_$_CUReadRequest
__ CoreUtils: _OBJC_CLASS_$_CUWriteRequest
__ CoreUtils: _OPACKDecodeData
__ CoreUtils: _OPACKEncoderCreateData
__ CoreUtils: _RandomBytes
__ CoreUtils: _RandomString
__ CoreUtils: _SecondsToUpTicks
__ CoreUtils: _SockAddrToString
__ CoreUtils: _StringToSockAddr
__ CoreUtils: _UpTicksToMilliseconds
__ CoreUtils: _UpTicksToSecondsF
__ CoreUtils: _WiFiCopyCurrentNetworkInfoEx
__ CoreUtils: _WiFiJoinNetwork_b
__ CoreUtils: _WiFiScan_b
__ CoreUtils: __LogCategory_Initialize
__ CoreUtils: _kCryptoHashDescriptor_SHA512
__ CoreWiFi: _CWFSecItemQueryPassword
__ CoreWiFi: _OBJC_CLASS_$_CWFInterface
__ Foundation: _NSOSStatusErrorDomain
__ Foundation: _NSStringFromClass
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ MobileWiFi: _WiFiManagerClientCreate
__ NetworkRelay: _OBJC_CLASS_$_NRDeviceIdentifier
__ NetworkRelay: _OBJC_CLASS_$_NRDeviceManager
__ NetworkRelay: _OBJC_CLASS_$_NRDeviceMonitor
__ NetworkRelay: _OBJC_CLASS_$_NRDeviceOperationalProperties
__ NetworkRelay: _OBJC_CLASS_$_NRDevicePairingProperties
__ NetworkRelay: _createStringFromNRLinkSubtype
__ NetworkRelay: _createStringFromNRLinkType
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _mach_absolute_time
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
SKEventRegistration : NSObject
 @property  NSString *eventID
 @property  NSDictionary *options
 @property  @? handler

  // instance methods
  -[SKEventRegistration options]
  -[SKEventRegistration setOptions:]
  -[SKEventRegistration .cxx_destruct]
  -[SKEventRegistration setEventID:]
  -[SKEventRegistration eventID]
  -[SKEventRegistration setHandler:]
  -[SKEventRegistration handler]


SKRequestRegistration : NSObject
 @property  NSString *requestID
 @property  NSDictionary *options
 @property  @? handler

  // instance methods
  -[SKRequestRegistration requestID]
  -[SKRequestRegistration options]
  -[SKRequestRegistration setOptions:]
  -[SKRequestRegistration .cxx_destruct]
  -[SKRequestRegistration setRequestID:]
  -[SKRequestRegistration setHandler:]
  -[SKRequestRegistration handler]


SKRequestEntry : NSObject
 @property  NSDictionary *options
 @property  NSString *requestID
 @property  @? responseHandler
 @property  unsigned long sendTicks
 @property  NSObject<OS_dispatch_source> *timer

  // instance methods
  -[SKRequestEntry requestID]
  -[SKRequestEntry options]
  -[SKRequestEntry setOptions:]
  -[SKRequestEntry .cxx_destruct]
  -[SKRequestEntry responseHandler]
  -[SKRequestEntry setResponseHandler:]
  -[SKRequestEntry timer]
  -[SKRequestEntry setTimer:]
  -[SKRequestEntry setRequestID:]
  -[SKRequestEntry sendTicks]
  -[SKRequestEntry setSendTicks:]


SKSendEntry : NSObject
 @property  @? completion
 @property  NSData *eventData
 @property  NSString *eventID
 @property  NSDictionary *options
 @property  unsigned long queueTicks
 @property  NSString *requestID
 @property  NSDictionary *request
 @property  @? responseHandler
 @property  NSObject<OS_dispatch_source> *timer
 @property  unsigned int xid
 @property  NSNumber *xidObj

  // instance methods
  -[SKSendEntry requestID]
  -[SKSendEntry xid]
  -[SKSendEntry setRequest:]
  -[SKSendEntry completion]
  -[SKSendEntry setCompletion:]
  -[SKSendEntry options]
  -[SKSendEntry setOptions:]
  -[SKSendEntry .cxx_destruct]
  -[SKSendEntry responseHandler]
  -[SKSendEntry setEventData:]
  -[SKSendEntry xidObj]
  -[SKSendEntry setResponseHandler:]
  -[SKSendEntry timer]
  -[SKSendEntry eventData]
  -[SKSendEntry request]
  -[SKSendEntry setEventID:]
  -[SKSendEntry setTimer:]
  -[SKSendEntry setXid:]
  -[SKSendEntry eventID]
  -[SKSendEntry setRequestID:]
  -[SKSendEntry queueTicks]
  -[SKSendEntry setQueueTicks:]
  -[SKSendEntry setXidObj:]


SKConnection : NSObject <CUActivatable, CUAuthenticatableClient, CUAuthenticatableServer, CULabelable>
 @property  CBConnection *bleConnection
 @property  SKDevice *blePeerDevice
 @property  BOOL clientMode
 @property  @? errorHandler
 @property  NSData *pskData
 @property  @? invalidationHandler
 @property  @? receivedEventHandler
 @property  @? receivedRequestHandler
 @property  @? sendDataHandler
 @property  int state
 @property  @? stateChangedHandler
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? authCompletionHandler
 @property  @? authPromptHandler
 @property  NSString *password
 @property  int passwordType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  @? authHidePasswordHandler
 @property  @? authShowPasswordHandler
 @property  NSString *label

  // instance methods
  -[SKConnection passwordType]
  -[SKConnection label]
  -[SKConnection setPasswordType:]
  -[SKConnection password]
  -[SKConnection _activateWithCompletion:]
  -[SKConnection _run]
  -[SKConnection _sendFrameType:unencryptedObject:]
  -[SKConnection .cxx_destruct]
  -[SKConnection setStateChangedHandler:]
  -[SKConnection sendEventID:event:options:completion:]
  -[SKConnection sendRequestID:request:options:responseHandler:]
  -[SKConnection _invalidated]
  -[SKConnection setState:]
  -[SKConnection init]
  -[SKConnection setErrorHandler:]
  -[SKConnection stateChangedHandler]
  -[SKConnection receivedRequestHandler]
  -[SKConnection setClientMode:]
  -[SKConnection setInvalidationHandler:]
  -[SKConnection _invalidateWithError:]
  -[SKConnection activateWithCompletion:]
  -[SKConnection errorHandler]
  -[SKConnection state]
  -[SKConnection pskData]
  -[SKConnection dispatchQueue]
  -[SKConnection receivedData:]
  -[SKConnection dealloc]
  -[SKConnection invalidate]
  -[SKConnection tryPassword:]
  -[SKConnection setLabel:]
  -[SKConnection setPassword:]
  -[SKConnection setPskData:]
  -[SKConnection authCompletionHandler]
  -[SKConnection setAuthCompletionHandler:]
  -[SKConnection _abortRequestsWithError:]
  -[SKConnection setReceivedRequestHandler:]
  -[SKConnection invalidationHandler]
  -[SKConnection sendDataHandler]
  -[SKConnection setSendDataHandler:]
  -[SKConnection setDispatchQueue:]
  -[SKConnection _clientRun]
  -[SKConnection _clientError:]
  -[SKConnection _invalidateCore:]
  -[SKConnection _pairSetupInvalidate]
  -[SKConnection _pairVerifyInvalidate]
  -[SKConnection _serverRun]
  -[SKConnection _clientConnectStart]
  -[SKConnection _clientPairSetupStart]
  -[SKConnection _clientPairVerifyStart]
  -[SKConnection _processSends]
  -[SKConnection _updateExternalState]
  -[SKConnection _clientConnectStartBLE]
  -[SKConnection _clientConnectCompleted:]
  -[SKConnection _clientPairSetupCompleted:]
  -[SKConnection _clientPairVerifyCompleted:]
  -[SKConnection _serverAccept]
  -[SKConnection _serverError:]
  -[SKConnection _serverAcceptBLE]
  -[SKConnection _serverPairSetupCompleted:]
  -[SKConnection _serverPairVerifyCompleted:]
  -[SKConnection _timeoutForSendEntry:]
  -[SKConnection _timeoutForXID:]
  -[SKConnection _sendFrameType:body:]
  -[SKConnection _clientPairVerifyWithData:]
  -[SKConnection bleConnection]
  -[SKConnection setBleConnection:]
  -[SKConnection clientMode]
  -[SKConnection receivedEventHandler]
  -[SKConnection setReceivedEventHandler:]
  -[SKConnection _pskPrepareClientMode:]
  -[SKConnection _receiveStart:]
  -[SKConnection _clientPairSetupPromptWithFlags:throttleSeconds:]
  -[SKConnection sendEventID:data:xid:options:completion:]
  -[SKConnection _sendEventID:data:xid:options:completion:]
  -[SKConnection _sendHeaderData:bodyData:completion:]
  -[SKConnection _sendRequestID:request:options:sendEntry:responseHandler:]
  -[SKConnection _receivedHeader:body:]
  -[SKConnection _receiveCompletion:]
  -[SKConnection _receivedHeader:encryptedObjectData:]
  -[SKConnection _serverPairSetupContinueWithData:start:]
  -[SKConnection _clientPairSetupContinueWithData:]
  -[SKConnection _serverPairVerifyContinueWithData:start:]
  -[SKConnection _receivedObject:]
  -[SKConnection _receivedEvent:]
  -[SKConnection _receivedRequest:]
  -[SKConnection _receivedResponse:]
  -[SKConnection _sendResponse:error:xid:requestID:completion:]
  -[SKConnection authPromptHandler]
  -[SKConnection setAuthPromptHandler:]
  -[SKConnection authHidePasswordHandler]
  -[SKConnection setAuthHidePasswordHandler:]
  -[SKConnection authShowPasswordHandler]
  -[SKConnection setAuthShowPasswordHandler:]
  -[SKConnection deriveKeyWithSaltPtr:saltLen:infoPtr:infoLen:keyLen:error:]
  -[SKConnection blePeerDevice]
  -[SKConnection setBlePeerDevice:]


SKDevice : NSObject
 @property  unsigned short blePSM
 @property  NSString *identifier

  // instance methods
  -[SKDevice .cxx_destruct]
  -[SKDevice blePSM]
  -[SKDevice identifier]
  -[SKDevice setIdentifier:]
  -[SKDevice setBlePSM:]


SKEvent : NSObject
 @property  NSError *error
 @property  int eventType

  // instance methods
  -[SKEvent descriptionWithLevel:]
  -[SKEvent initWithEventType:]
  -[SKEvent .cxx_destruct]
  -[SKEvent eventType]
  -[SKEvent error]
  -[SKEvent initWithEventType:error:]


SKAuthenticationPresentEvent : SKEvent
 @property  NSString *password
 @property  int passwordType

  // instance methods
  -[SKAuthenticationPresentEvent passwordType]
  -[SKAuthenticationPresentEvent descriptionWithLevel:]
  -[SKAuthenticationPresentEvent password]
  -[SKAuthenticationPresentEvent .cxx_destruct]
  -[SKAuthenticationPresentEvent initWithPasswordType:password:]


SKAuthenticationRequestEvent : SKEvent
 @property  unsigned int pairingFlags
 @property  int passwordType
 @property  int throttleSeconds

  // instance methods
  -[SKAuthenticationRequestEvent passwordType]
  -[SKAuthenticationRequestEvent descriptionWithLevel:]
  -[SKAuthenticationRequestEvent pairingFlags]
  -[SKAuthenticationRequestEvent throttleSeconds]
  -[SKAuthenticationRequestEvent initWithPasswordType:pairingFlags:throttleSeconds:]


SKAuthenticationResponseEvent : SKEvent
 @property  NSString *password

  // instance methods
  -[SKAuthenticationResponseEvent descriptionWithLevel:]
  -[SKAuthenticationResponseEvent password]
  -[SKAuthenticationResponseEvent .cxx_destruct]
  -[SKAuthenticationResponseEvent initWithPassword:]


SKEventCaptiveNetworkPresent : SKEvent
 @property  NSString *captiveInterfaceIdentifier
 @property  NSString *captiveSSID
 @property  NSURL *captiveURL

  // instance methods
  -[SKEventCaptiveNetworkPresent descriptionWithLevel:]
  -[SKEventCaptiveNetworkPresent .cxx_destruct]
  -[SKEventCaptiveNetworkPresent captiveURL]
  -[SKEventCaptiveNetworkPresent captiveSSID]
  -[SKEventCaptiveNetworkPresent captiveInterfaceIdentifier]
  -[SKEventCaptiveNetworkPresent initWithCaptiveURL:interfaceIdentifier:ssid:]


SKSetupBase : NSObject <CULabelable, CUMessaging>
 @property  unsigned int controlFlags
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? eventHandler
 @property  NSString *password
 @property  int passwordType
 @property  SKDevice *peerDevice
 @property  NSData *pskData
 @property  @? sendDataHandler
 @property  int setupType
 @property  NSString *label
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKSetupBase passwordType]
  -[SKSetupBase postEvent:]
  -[SKSetupBase descriptionWithLevel:]
  -[SKSetupBase label]
  -[SKSetupBase controlFlags]
  -[SKSetupBase setPasswordType:]
  -[SKSetupBase _activate]
  -[SKSetupBase password]
  -[SKSetupBase setPeerDevice:]
  -[SKSetupBase _run]
  -[SKSetupBase .cxx_destruct]
  -[SKSetupBase _invalidated]
  -[SKSetupBase setControlFlags:]
  -[SKSetupBase addStep:]
  -[SKSetupBase eventHandler]
  -[SKSetupBase reportEvent:]
  -[SKSetupBase activate]
  -[SKSetupBase pskData]
  -[SKSetupBase _invalidate]
  -[SKSetupBase dispatchQueue]
  -[SKSetupBase setEventHandler:]
  -[SKSetupBase setupType]
  -[SKSetupBase _completeWithError:]
  -[SKSetupBase receivedData:]
  -[SKSetupBase peerDevice]
  -[SKSetupBase dealloc]
  -[SKSetupBase invalidate]
  -[SKSetupBase setLabel:]
  -[SKSetupBase setPassword:]
  -[SKSetupBase setPskData:]
  -[SKSetupBase postEventType:]
  -[SKSetupBase setSetupType:]
  -[SKSetupBase sendDataHandler]
  -[SKSetupBase setSendDataHandler:]
  -[SKSetupBase setDispatchQueue:]
  -[SKSetupBase _postEvent:]
  -[SKSetupBase _receivedEventID:event:options:]
  -[SKSetupBase _receivedRequestID:request:options:responseHandler:]
  -[SKSetupBase _invalidateSteps]
  -[SKSetupBase _reportEventType:]
  -[SKSetupBase _reportEvent:]
  -[SKSetupBase _connectionEnded:]
  -[SKSetupBase _addStep:]
  -[SKSetupBase registerEventID:options:eventHandler:completionHandler:]
  -[SKSetupBase deregisterEventID:completionHandler:]
  -[SKSetupBase sendEventID:eventMessage:options:completionHandler:]
  -[SKSetupBase registerRequestID:options:requestHandler:completionHandler:]
  -[SKSetupBase deregisterRequestID:completionHandler:]
  -[SKSetupBase sendRequestID:requestMessage:options:responseHandler:]
  -[SKSetupBase initWithLogCategory:]
  -[SKSetupBase reportEventType:]
  -[SKSetupBase _connectionStartWithSKConnection:clientMode:completeOnFailure:completion:]
  -[SKSetupBase _completedStep:error:]
  -[SKSetupBase _runSteps]


SKSetupCaptiveNetworkJoinClient : SKSetupBase <NRDeviceMonitorDelegate>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKSetupCaptiveNetworkJoinClient _run]
  -[SKSetupCaptiveNetworkJoinClient .cxx_destruct]
  -[SKSetupCaptiveNetworkJoinClient init]
  -[SKSetupCaptiveNetworkJoinClient _invalidate]
  -[SKSetupCaptiveNetworkJoinClient _postEvent:]
  -[SKSetupCaptiveNetworkJoinClient deviceIsConnectedDidChange:isConnected:]
  -[SKSetupCaptiveNetworkJoinClient deviceLinkTypeDidChange:linkType:linkSubtype:]
  -[SKSetupCaptiveNetworkJoinClient deviceProxyServiceInterfaceNameDidChange:interfaceName:]
  -[SKSetupCaptiveNetworkJoinClient _networkRelayEnsureStopped]
  -[SKSetupCaptiveNetworkJoinClient _captiveProbeResponse:]
  -[SKSetupCaptiveNetworkJoinClient _captiveProbeRequest]
  -[SKSetupCaptiveNetworkJoinClient _runAWDLStart]
  -[SKSetupCaptiveNetworkJoinClient _runAWDLFoundTimerStart]
  -[SKSetupCaptiveNetworkJoinClient _runNetworkRelayPeerStart]
  -[SKSetupCaptiveNetworkJoinClient _runNetworkRelaySelfStart]
  -[SKSetupCaptiveNetworkJoinClient _runCaptiveNetworkLoginStart]
  -[SKSetupCaptiveNetworkJoinClient _runAWDLFoundDevice:]
  -[SKSetupCaptiveNetworkJoinClient _runCaptiveNetworkLoginResponse:]


SKCaptiveContext : NSObject
 @property  @? responseHandler
 @property  SKSetupCaptiveNetworkJoinServer *server

  // instance methods
  -[SKCaptiveContext setServer:]
  -[SKCaptiveContext .cxx_destruct]
  -[SKCaptiveContext responseHandler]
  -[SKCaptiveContext setResponseHandler:]
  -[SKCaptiveContext server]


SKSetupCaptiveNetworkJoinServer : SKSetupBase <NRDeviceMonitorDelegate>
 @property  int mode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[SKSetupCaptiveNetworkJoinServer resetWithCompletionHandler:]

  // instance methods
  -[SKSetupCaptiveNetworkJoinServer descriptionWithLevel:]
  -[SKSetupCaptiveNetworkJoinServer _activate]
  -[SKSetupCaptiveNetworkJoinServer _run]
  -[SKSetupCaptiveNetworkJoinServer .cxx_destruct]
  -[SKSetupCaptiveNetworkJoinServer _invalidated]
  -[SKSetupCaptiveNetworkJoinServer init]
  -[SKSetupCaptiveNetworkJoinServer _invalidate]
  -[SKSetupCaptiveNetworkJoinServer setMode:]
  -[SKSetupCaptiveNetworkJoinServer mode]
  -[SKSetupCaptiveNetworkJoinServer deviceIsConnectedDidChange:isConnected:]
  -[SKSetupCaptiveNetworkJoinServer deviceLinkTypeDidChange:linkType:linkSubtype:]
  -[SKSetupCaptiveNetworkJoinServer deviceProxyServiceInterfaceNameDidChange:interfaceName:]
  -[SKSetupCaptiveNetworkJoinServer _connectionEnded:]
  -[SKSetupCaptiveNetworkJoinServer _networkRelayAWDLStartRequest:responseHandler:]
  -[SKSetupCaptiveNetworkJoinServer _captiveNetworkProbeRequest:responseHandler:]
  -[SKSetupCaptiveNetworkJoinServer _networkRelaySetupRequest:responseHandler:]
  -[SKSetupCaptiveNetworkJoinServer _captiveNetworkLoginRequest:responseHandler:]
  -[SKSetupCaptiveNetworkJoinServer _bleAdvertiserEnsureStopped]
  -[SKSetupCaptiveNetworkJoinServer _bleServerEnsureStopped]
  -[SKSetupCaptiveNetworkJoinServer _captiveNetworkProbeEnsureStopped]
  -[SKSetupCaptiveNetworkJoinServer _cfuEnsuredStopped]
  -[SKSetupCaptiveNetworkJoinServer _networkRelayDeviceEnsureStopped]
  -[SKSetupCaptiveNetworkJoinServer _runDefault]
  -[SKSetupCaptiveNetworkJoinServer _runDetected]
  -[SKSetupCaptiveNetworkJoinServer _runUserRequest]
  -[SKSetupCaptiveNetworkJoinServer _oobEnsureStarted]
  -[SKSetupCaptiveNetworkJoinServer _bleServerEnsureStarted]
  -[SKSetupCaptiveNetworkJoinServer _bleAdvertiserShouldRun]
  -[SKSetupCaptiveNetworkJoinServer _bleAdvertiserEnsureStarted]
  -[SKSetupCaptiveNetworkJoinServer _cfuEnsuredStarted]
  -[SKSetupCaptiveNetworkJoinServer _bleServerAcceptConnecton:]
  -[SKSetupCaptiveNetworkJoinServer _captiveNetworkLoginInfo:cookie:responseHandler:]
  -[SKSetupCaptiveNetworkJoinServer _captiveNetworkProbeResult:responseHandler:]


SKSetupClient : SKSetupBase <CUActivatable, CUAuthenticatableClient>
 @property  @? overallCompletionHandler
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? invalidationHandler
 @property  @? authCompletionHandler
 @property  @? authPromptHandler
 @property  NSString *password
 @property  int passwordType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKSetupClient _activateWithCompletion:]
  -[SKSetupClient _run]
  -[SKSetupClient .cxx_destruct]
  -[SKSetupClient _invalidated]
  -[SKSetupClient init]
  -[SKSetupClient setInvalidationHandler:]
  -[SKSetupClient activateWithCompletion:]
  -[SKSetupClient _invalidate]
  -[SKSetupClient _completeWithError:]
  -[SKSetupClient tryPassword:]
  -[SKSetupClient authCompletionHandler]
  -[SKSetupClient setAuthCompletionHandler:]
  -[SKSetupClient invalidationHandler]
  -[SKSetupClient authPromptHandler]
  -[SKSetupClient setAuthPromptHandler:]
  -[SKSetupClient _invalidateSteps]
  -[SKSetupClient _prepareSteps]
  -[SKSetupClient _activateOOBWithCompletion:]
  -[SKSetupClient _activateNANWithCompletion:]
  -[SKSetupClient _activateBLEWithCompletion:]
  -[SKSetupClient _setupConnectionCommon:]
  -[SKSetupClient _activateNANContinueWithError:]
  -[SKSetupClient _prepareStepsOSRecovery]
  -[SKSetupClient overallCompletionHandler]
  -[SKSetupClient setOverallCompletionHandler:]


SKSetupServer : SKSetupBase <CUActivatable, CUAuthenticatableServer>
 @property  @? overallCompletionHandler
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? invalidationHandler
 @property  @? authCompletionHandler
 @property  @? authHidePasswordHandler
 @property  @? authShowPasswordHandler
 @property  NSString *password
 @property  int passwordType
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKSetupServer _activateWithCompletion:]
  -[SKSetupServer .cxx_destruct]
  -[SKSetupServer _invalidated]
  -[SKSetupServer init]
  -[SKSetupServer _update]
  -[SKSetupServer setInvalidationHandler:]
  -[SKSetupServer activateWithCompletion:]
  -[SKSetupServer reset]
  -[SKSetupServer _invalidate]
  -[SKSetupServer authCompletionHandler]
  -[SKSetupServer setAuthCompletionHandler:]
  -[SKSetupServer invalidationHandler]
  -[SKSetupServer authHidePasswordHandler]
  -[SKSetupServer setAuthHidePasswordHandler:]
  -[SKSetupServer authShowPasswordHandler]
  -[SKSetupServer setAuthShowPasswordHandler:]
  -[SKSetupServer _bleAdvertiserEnsureStopped]
  -[SKSetupServer _bleServerEnsureStopped]
  -[SKSetupServer _bleServerEnsureStarted]
  -[SKSetupServer _bleAdvertiserShouldRun]
  -[SKSetupServer _bleAdvertiserEnsureStarted]
  -[SKSetupServer _prepareSteps]
  -[SKSetupServer _prepareStepsOSRecovery]
  -[SKSetupServer overallCompletionHandler]
  -[SKSetupServer setOverallCompletionHandler:]
  -[SKSetupServer _nanPublisherEnsureStopped]
  -[SKSetupServer _wifiKeepAliveEnsureStopped]
  -[SKSetupServer _nanPublisherEnsureStarted]
  -[SKSetupServer _wifiKeepAliveEnsureStarted]
  -[SKSetupServer _handleAcceptBLEConnection:]
  -[SKSetupServer _handleAcceptNANData:endpoint:]
  -[SKSetupServer _handleAcceptCommon:]


SKSetupSIMTransferClient : SKSetupBase
  // instance methods
  -[SKSetupSIMTransferClient _run]
  -[SKSetupSIMTransferClient init]


SKSetupSIMTransferServer : SKSetupBase
  // instance methods
  -[SKSetupSIMTransferServer descriptionWithLevel:]
  -[SKSetupSIMTransferServer _activate]
  -[SKSetupSIMTransferServer _run]
  -[SKSetupSIMTransferServer .cxx_destruct]
  -[SKSetupSIMTransferServer init]
  -[SKSetupSIMTransferServer _invalidate]
  -[SKSetupSIMTransferServer _bleAdvertiserEnsureStopped]
  -[SKSetupSIMTransferServer _bleServerEnsureStopped]
  -[SKSetupSIMTransferServer _oobEnsureStarted]
  -[SKSetupSIMTransferServer _bleServerEnsureStarted]
  -[SKSetupSIMTransferServer _bleAdvertiserShouldRun]
  -[SKSetupSIMTransferServer _bleAdvertiserEnsureStarted]
  -[SKSetupSIMTransferServer _bleServerAcceptConnecton:]


SKStepWiFiPreflight : NSObject <CUEnvironmentable, CULabelable, SKStepable>
 @property  BOOL preventAppleWiFi
 @property  CUEnvironment *environment
 @property  NSString *label
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? skCompletionHandler
 @property  <CUMessaging> *skMessaging
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKStepWiFiPreflight label]
  -[SKStepWiFiPreflight .cxx_destruct]
  -[SKStepWiFiPreflight setEnvironment:]
  -[SKStepWiFiPreflight init]
  -[SKStepWiFiPreflight activate]
  -[SKStepWiFiPreflight dispatchQueue]
  -[SKStepWiFiPreflight dealloc]
  -[SKStepWiFiPreflight invalidate]
  -[SKStepWiFiPreflight setLabel:]
  -[SKStepWiFiPreflight environment]
  -[SKStepWiFiPreflight setDispatchQueue:]
  -[SKStepWiFiPreflight setSkCompletionHandler:]
  -[SKStepWiFiPreflight setPreventAppleWiFi:]
  -[SKStepWiFiPreflight checkWiFiAndReturnError:]
  -[SKStepWiFiPreflight setSkMessaging:]
  -[SKStepWiFiPreflight skCompletionHandler]
  -[SKStepWiFiPreflight skMessaging]
  -[SKStepWiFiPreflight preventAppleWiFi]


SKStepWiFiSetupClient : NSObject <CULabelable, SKStepable>
 @property  double metricTotalSeconds
 @property  double metricWiFiSetupSeconds
 @property  NSString *label
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? skCompletionHandler
 @property  <CUMessaging> *skMessaging
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKStepWiFiSetupClient label]
  -[SKStepWiFiSetupClient metricWiFiSetupSeconds]
  -[SKStepWiFiSetupClient _run]
  -[SKStepWiFiSetupClient .cxx_destruct]
  -[SKStepWiFiSetupClient metricTotalSeconds]
  -[SKStepWiFiSetupClient _invalidated]
  -[SKStepWiFiSetupClient init]
  -[SKStepWiFiSetupClient activate]
  -[SKStepWiFiSetupClient _runInit]
  -[SKStepWiFiSetupClient dispatchQueue]
  -[SKStepWiFiSetupClient _completeWithError:]
  -[SKStepWiFiSetupClient dealloc]
  -[SKStepWiFiSetupClient invalidate]
  -[SKStepWiFiSetupClient setLabel:]
  -[SKStepWiFiSetupClient setDispatchQueue:]
  -[SKStepWiFiSetupClient setSkCompletionHandler:]
  -[SKStepWiFiSetupClient setSkMessaging:]
  -[SKStepWiFiSetupClient skCompletionHandler]
  -[SKStepWiFiSetupClient skMessaging]
  -[SKStepWiFiSetupClient _invalidateCore]
  -[SKStepWiFiSetupClient _runInternetReachabilityStart]
  -[SKStepWiFiSetupClient _runWiFiSetupStart]


SKStepWiFiSetupServer : NSObject <CULabelable, SKStepable>
 @property  NSString *label
 @property  NSObject<OS_dispatch_queue> *dispatchQueue
 @property  @? skCompletionHandler
 @property  <CUMessaging> *skMessaging
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[SKStepWiFiSetupServer label]
  -[SKStepWiFiSetupServer _activate]
  -[SKStepWiFiSetupServer _handleRequestBonjourTestStart:responseHandler:]
  -[SKStepWiFiSetupServer _handleRequestBonjourTestDone:responseHandler:]
  -[SKStepWiFiSetupServer _runScanStart:]
  -[SKStepWiFiSetupServer _runJoinStart:]
  -[SKStepWiFiSetupServer _runScanResults:error:channel:]
  -[SKStepWiFiSetupServer _run]
  -[SKStepWiFiSetupServer .cxx_destruct]
  -[SKStepWiFiSetupServer _invalidated]
  -[SKStepWiFiSetupServer init]
  -[SKStepWiFiSetupServer activate]
  -[SKStepWiFiSetupServer dispatchQueue]
  -[SKStepWiFiSetupServer _completeWithError:]
  -[SKStepWiFiSetupServer dealloc]
  -[SKStepWiFiSetupServer invalidate]
  -[SKStepWiFiSetupServer setLabel:]
  -[SKStepWiFiSetupServer setDispatchQueue:]
  -[SKStepWiFiSetupServer setSkCompletionHandler:]
  -[SKStepWiFiSetupServer setSkMessaging:]
  -[SKStepWiFiSetupServer skCompletionHandler]
  -[SKStepWiFiSetupServer skMessaging]
  -[SKStepWiFiSetupServer _runInternetReachabilityStart]
  -[SKStepWiFiSetupServer _handleRequestWiFiSetup:responseHandler:]


01 00 0200 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBAdvertiser 
01 00 0200 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBConnection 
01 00 0200 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBDevice 
01 00 0200 /System/Library/Frameworks/CoreBluetooth.framework/CoreBluetooth: CBServer 
01 00 0400 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUBonjourAdvertiser 
01 00 0400 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUBonjourBrowser 
01 00 0400 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUNANPublisher 
01 00 0400 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUNANSubscriber 
01 00 0400 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUPairingSession 
01 00 0400 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUPairingStream 
01 00 0400 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUReachabilityMonitor 
01 00 0400 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUReadRequest 
01 00 0400 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUWriteRequest 
01 00 0600 /System/Library/PrivateFrameworks/CoreWiFi.framework/CoreWiFi: CWFInterface 
01 00 0340 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpAction 
01 00 0340 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpController 
01 00 0340 /System/Library/PrivateFrameworks/CoreFollowUp.framework/CoreFollowUp: FLFollowUpItem 
01 00 0840 /System/Library/PrivateFrameworks/NetworkRelay.framework/NetworkRelay: NRDeviceIdentifier 
01 00 0840 /System/Library/PrivateFrameworks/NetworkRelay.framework/NetworkRelay: NRDeviceManager 
01 00 0840 /System/Library/PrivateFrameworks/NetworkRelay.framework/NetworkRelay: NRDeviceMonitor 
01 00 0840 /System/Library/PrivateFrameworks/NetworkRelay.framework/NetworkRelay: NRDeviceOperationalProperties 
01 00 0840 /System/Library/PrivateFrameworks/NetworkRelay.framework/NetworkRelay: NRDevicePairingProperties 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0500 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
