|| __DATA.__data _TTAttributeNameFont
|| __DATA.__data _TTAttributeNameFontHints
|| __DATA.__data _TTAttributeNameForegroundColor
|| __DATA.__data _TTAttributeNameParagraphStyle
|| __DATA.__data _TTAttributeNameStrikethrough
|| __DATA.__data _TTAttributeNameSuperscript
|| __DATA.__data _TTAttributeNameTimestamp
|| __DATA.__data _TTAttributeNameUnderline
|| __DATA.__data _TTPresentationAttributeNameApproxMaxItemNumber
|| __DATA.__data _TTPresentationAttributeNameInsertDate
|| __DATA.__data _TTPresentationAttributeNameItemNumber
|| __DATA.__data __REMStoreChangedNotificationName
|| __DATA.__data __REMStoreDidCompleteInitializeAllAccounts
|| __DATA.__data __REMStoreMustRefreshNotificationName
|| __DATA.__data __REMStoreShouldNotifyOfInteractionWithPeopleNotificationName
|| __DATA.__objc_data _OBJC_CLASS_$_CRConstant
|| __DATA.__objc_data _OBJC_CLASS_$_CRObject
|| __DATA.__objc_data _OBJC_CLASS_$_CRRegisterLatest
|| __DATA.__objc_data _OBJC_CLASS_$_CRTimestamp
|| __DATA.__objc_data _OBJC_CLASS_$_REMAccountGroupContext
|| __DATA.__objc_data _OBJC_CLASS_$_REMAccountGroupContextChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMAccountPinnedListsContextChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMAccountSortDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_REMAccountTemplatesContext
|| __DATA.__objc_data _OBJC_CLASS_$_REMAccountTemplatesContextChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMAccountsDataViewInvocationREMObjectIDOnlyResult
|| __DATA.__objc_data _OBJC_CLASS_$_REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs
|| __DATA.__objc_data _OBJC_CLASS_$_REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount
|| __DATA.__objc_data _OBJC_CLASS_$_REMAlarmContactTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_REMAlarmDateTrigger
|| __DATA.__objc_data _OBJC_CLASS_$_REMAssignmentsDataViewInvocationResult
|| __DATA.__objc_data _OBJC_CLASS_$_REMAuxiliaryChangeInfoFetchResult
|| __DATA.__objc_data _OBJC_CLASS_$_REMAuxiliaryChangeInfoType
|| __DATA.__objc_data _OBJC_CLASS_$_REMAuxiliaryReminderChangeDeleteInfo
|| __DATA.__objc_data _OBJC_CLASS_$_REMAuxiliaryReminderChangeMoveInfo
|| __DATA.__objc_data _OBJC_CLASS_$_REMCRReminderIDList
|| __DATA.__objc_data _OBJC_CLASS_$_REMChangeObject
|| __DATA.__objc_data _OBJC_CLASS_$_REMChangeTombstone
|| __DATA.__objc_data _OBJC_CLASS_$_REMChangeTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_REMCloudContainer
|| __DATA.__objc_data _OBJC_CLASS_$_REMDAAssignmentTombstone
|| __DATA.__objc_data _OBJC_CLASS_$_REMDAChangeTrackingHelper
|| __DATA.__objc_data _OBJC_CLASS_$_REMDAHashtagTombstone
|| __DATA.__objc_data _OBJC_CLASS_$_REMDAShareeTombstone
|| __DATA.__objc_data _OBJC_CLASS_$_REMDatabaseMigrationAccountInfo
|| __DATA.__objc_data _OBJC_CLASS_$_REMEnableObjectiveCpp
|| __DATA.__objc_data _OBJC_CLASS_$_REMExporting
|| __DATA.__objc_data _OBJC_CLASS_$_REMExternalSyncMetadataUtils
|| __DATA.__objc_data _OBJC_CLASS_$_REMFetchMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_REMHashtagsDataViewInvocationResult
|| __DATA.__objc_data _OBJC_CLASS_$_REMListAppearanceContextChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMListBadge
|| __DATA.__objc_data _OBJC_CLASS_$_REMListCalDAVNotificationContext
|| __DATA.__objc_data _OBJC_CLASS_$_REMListCalDAVNotificationContextChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMListFetchExecutor
|| __DATA.__objc_data _OBJC_CLASS_$_REMListFetchMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_REMListPredicateDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_REMListSortDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_REMListSublistContext
|| __DATA.__objc_data _OBJC_CLASS_$_REMListSublistContextChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed
|| __DATA.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_fetchByTemplateObjectID
|| __DATA.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit
|| __DATA.__objc_data _OBJC_CLASS_$_REMMutableCRMergeableOrderedSet
|| __DATA.__objc_data _OBJC_CLASS_$_REMMutableCalDAVNotification
|| __DATA.__objc_data _OBJC_CLASS_$_REMNSPersistentHistoryChange
|| __DATA.__objc_data _OBJC_CLASS_$_REMNSPersistentHistoryChangeTombstone
|| __DATA.__objc_data _OBJC_CLASS_$_REMNSPersistentHistoryToken
|| __DATA.__objc_data _OBJC_CLASS_$_REMNSPersistentHistoryTransaction
|| __DATA.__objc_data _OBJC_CLASS_$_REMOrderedIdentifierMap
|| __DATA.__objc_data _OBJC_CLASS_$_REMRadarUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_REMRecurrenceDayOfWeek
|| __DATA.__objc_data _OBJC_CLASS_$_REMRecurrenceEnd
|| __DATA.__objc_data _OBJC_CLASS_$_REMRecurrenceRuleFormatter
|| __DATA.__objc_data _OBJC_CLASS_$_REMReminderFetchExecutor
|| __DATA.__objc_data _OBJC_CLASS_$_REMReminderFetchMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_REMReminderFetchMetadataDueDateCount
|| __DATA.__objc_data _OBJC_CLASS_$_REMReminderFetchOptions
|| __DATA.__objc_data _OBJC_CLASS_$_REMReminderHashtagContext
|| __DATA.__objc_data _OBJC_CLASS_$_REMReminderHashtagContextChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMReminderPredicateDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_REMReminderSortDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_REMReminderSubtaskContext
|| __DATA.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID
|| __DATA.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID
|| __DATA.__objc_data _OBJC_CLASS_$_REMSharedToMeReminderPlaceholder
|| __DATA.__objc_data _OBJC_CLASS_$_REMSiriSearchLimitedDataView
|| __DATA.__objc_data _OBJC_CLASS_$_REMSmartListChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMSmartListCustomContext
|| __DATA.__objc_data _OBJC_CLASS_$_REMSmartListCustomContextChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMSmartListsDataViewInvocation_fetchAllCustomSmartLists
|| __DATA.__objc_data _OBJC_CLASS_$_REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount
|| __DATA.__objc_data _OBJC_CLASS_$_REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup
|| __DATA.__objc_data _OBJC_CLASS_$_REMSnoozeTimeUtils
|| __DATA.__objc_data _OBJC_CLASS_$_REMSystemUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_REMTTParagraphStyle
|| __DATA.__objc_data _OBJC_CLASS_$_REMTTStyle
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplate
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplateChangeItem
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplateConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplateContentAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplatePublicLink
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplatePublicLinkConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplatesDataView
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplatesDataViewInvocationResult
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplatesDataViewInvocation_fetchByObjectIDs
|| __DATA.__objc_data _OBJC_CLASS_$_REMTemplatesDataViewInvocation_fetchTemplatesInAccount
|| __DATA.__objc_data _OBJC_CLASS_$_REMTipKitDataView
|| __DATA.__objc_data _OBJC_CLASS_$_REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList
|| __DATA.__objc_data _OBJC_CLASS_$_REMTipKitDataViewInvocation_fetchCustomSmartListsCount
|| __DATA.__objc_data _OBJC_CLASS_$_REMTipKitDataViewInvocation_fetchHashtagsCount
|| __DATA.__objc_data _OBJC_CLASS_$_REMTipKitDataViewInvocation_fetchListsCount
|| __DATA.__objc_data _OBJC_CLASS_$_REMTipKitDataViewInvocation_fetchUncompletedRemindersCount
|| __DATA.__objc_data _OBJC_CLASS_$_REMXPCDaemonControllerPerformerResolver_changeTracking
|| __DATA.__objc_data _OBJC_CLASS_$_REMXPCDaemonControllerPerformerResolver_debug
|| __DATA.__objc_data _OBJC_CLASS_$_REMXPCDaemonControllerPerformerResolver_indexing
|| __DATA.__objc_data _OBJC_CLASS_$_TTParagraphStyle
|| __DATA.__objc_data _OBJC_CLASS_$_TTREMHashtag
|| __DATA.__objc_data _OBJC_CLASS_$__REMChangeUniversalToken
|| __DATA.__objc_data _OBJC_CLASS_$__REMChangedObjectIDStorage
|| __DATA.__objc_data _OBJC_CLASS_$__REMDACalDAVSyncReplicaManagerProvider
|| __DATA.__objc_data _OBJC_CLASS_$__REMFetchExecutor
|| __DATA.__objc_data _OBJC_CLASS_$__REMNSPersistentHistoryChangeStorage
|| __DATA.__objc_data _OBJC_CLASS_$__REMNSPersistentHistoryTransactionStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_CRConstant
|| __DATA.__objc_data _OBJC_METACLASS_$_CRObject
|| __DATA.__objc_data _OBJC_METACLASS_$_CRRegisterLatest
|| __DATA.__objc_data _OBJC_METACLASS_$_CRTimestamp
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAccountGroupContext
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAccountGroupContextChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAccountPinnedListsContextChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAccountSortDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAccountTemplatesContext
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAccountTemplatesContextChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAccountsDataViewInvocationREMObjectIDOnlyResult
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAlarmContactTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAlarmDateTrigger
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAssignmentsDataViewInvocationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAuxiliaryChangeInfoFetchResult
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAuxiliaryChangeInfoType
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAuxiliaryReminderChangeDeleteInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_REMAuxiliaryReminderChangeMoveInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_REMCRReminderIDList
|| __DATA.__objc_data _OBJC_METACLASS_$_REMChangeObject
|| __DATA.__objc_data _OBJC_METACLASS_$_REMChangeTombstone
|| __DATA.__objc_data _OBJC_METACLASS_$_REMChangeTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_REMCloudContainer
|| __DATA.__objc_data _OBJC_METACLASS_$_REMDAAssignmentTombstone
|| __DATA.__objc_data _OBJC_METACLASS_$_REMDAChangeTrackingHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_REMDAHashtagTombstone
|| __DATA.__objc_data _OBJC_METACLASS_$_REMDAShareeTombstone
|| __DATA.__objc_data _OBJC_METACLASS_$_REMDatabaseMigrationAccountInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_REMEnableObjectiveCpp
|| __DATA.__objc_data _OBJC_METACLASS_$_REMExporting
|| __DATA.__objc_data _OBJC_METACLASS_$_REMExternalSyncMetadataUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_REMFetchMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_REMHashtagsDataViewInvocationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListAppearanceContextChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListBadge
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListCalDAVNotificationContext
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListCalDAVNotificationContextChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListFetchExecutor
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListFetchMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListPredicateDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListSortDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListSublistContext
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListSublistContextChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_fetchByTemplateObjectID
|| __DATA.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit
|| __DATA.__objc_data _OBJC_METACLASS_$_REMMutableCRMergeableOrderedSet
|| __DATA.__objc_data _OBJC_METACLASS_$_REMMutableCalDAVNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_REMNSPersistentHistoryChange
|| __DATA.__objc_data _OBJC_METACLASS_$_REMNSPersistentHistoryChangeTombstone
|| __DATA.__objc_data _OBJC_METACLASS_$_REMNSPersistentHistoryToken
|| __DATA.__objc_data _OBJC_METACLASS_$_REMNSPersistentHistoryTransaction
|| __DATA.__objc_data _OBJC_METACLASS_$_REMOrderedIdentifierMap
|| __DATA.__objc_data _OBJC_METACLASS_$_REMRadarUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_REMRecurrenceDayOfWeek
|| __DATA.__objc_data _OBJC_METACLASS_$_REMRecurrenceEnd
|| __DATA.__objc_data _OBJC_METACLASS_$_REMRecurrenceRuleFormatter
|| __DATA.__objc_data _OBJC_METACLASS_$_REMReminderFetchExecutor
|| __DATA.__objc_data _OBJC_METACLASS_$_REMReminderFetchMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_REMReminderFetchMetadataDueDateCount
|| __DATA.__objc_data _OBJC_METACLASS_$_REMReminderFetchOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_REMReminderHashtagContext
|| __DATA.__objc_data _OBJC_METACLASS_$_REMReminderHashtagContextChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMReminderPredicateDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_REMReminderSortDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_REMReminderSubtaskContext
|| __DATA.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID
|| __DATA.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSharedToMeReminderPlaceholder
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSiriSearchLimitedDataView
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSmartListChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSmartListCustomContext
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSmartListCustomContextChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSmartListsDataViewInvocation_fetchAllCustomSmartLists
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSnoozeTimeUtils
|| __DATA.__objc_data _OBJC_METACLASS_$_REMSystemUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTTParagraphStyle
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTTStyle
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplate
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplateChangeItem
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplateConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplateContentAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplatePublicLink
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplatePublicLinkConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplatesDataView
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplatesDataViewInvocationResult
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplatesDataViewInvocation_fetchByObjectIDs
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTemplatesDataViewInvocation_fetchTemplatesInAccount
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTipKitDataView
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTipKitDataViewInvocation_fetchCustomSmartListsCount
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTipKitDataViewInvocation_fetchHashtagsCount
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTipKitDataViewInvocation_fetchListsCount
|| __DATA.__objc_data _OBJC_METACLASS_$_REMTipKitDataViewInvocation_fetchUncompletedRemindersCount
|| __DATA.__objc_data _OBJC_METACLASS_$_REMXPCDaemonControllerPerformerResolver_changeTracking
|| __DATA.__objc_data _OBJC_METACLASS_$_REMXPCDaemonControllerPerformerResolver_debug
|| __DATA.__objc_data _OBJC_METACLASS_$_REMXPCDaemonControllerPerformerResolver_indexing
|| __DATA.__objc_data _OBJC_METACLASS_$_TTParagraphStyle
|| __DATA.__objc_data _OBJC_METACLASS_$_TTREMHashtag
|| __DATA.__objc_data _OBJC_METACLASS_$__REMChangeUniversalToken
|| __DATA.__objc_data _OBJC_METACLASS_$__REMChangedObjectIDStorage
|| __DATA.__objc_data _OBJC_METACLASS_$__REMDACalDAVSyncReplicaManagerProvider
|| __DATA.__objc_data _OBJC_METACLASS_$__REMFetchExecutor
|| __DATA.__objc_data _OBJC_METACLASS_$__REMNSPersistentHistoryChangeStorage
|| __DATA.__objc_data _OBJC_METACLASS_$__REMNSPersistentHistoryTransactionStorage
|| __DATA_CONST.__const _CompletedRemindersCount
|| __DATA_CONST.__const _CompletedRemindersCountInList
|| __DATA_CONST.__const _CustomSmartListsCount
|| __DATA_CONST.__const _DADREMAccountSetPersonIDAuthorKey
|| __DATA_CONST.__const _DADREMDAChangeTrackingHelperClientName
|| __DATA_CONST.__const _DADREMSaveRequestAuthorKey
|| __DATA_CONST.__const _HashtagsCount
|| __DATA_CONST.__const _ListsCount
|| __DATA_CONST.__const _ListsWithCustomBadgeCount
|| __DATA_CONST.__const _RDHashtagLabelUpdaterAuthor
|| __DATA_CONST.__const _RDNotificationConsumerLastBannerPresentationDateAuthor
|| __DATA_CONST.__const _RDSharedInlineTagAutoConvertAuthor
|| __DATA_CONST.__const _RDStagedLightweightMigrationAuthor
|| __DATA_CONST.__const _RDStalePinnedListsEventHandlerAuthor
|| __DATA_CONST.__const _RDStoreControllerAccountIdentifierHashtagLabelsMigrationAuthor
|| __DATA_CONST.__const _RDStoreControllerAutoConvertSharedInlineTagsMigrationAuthor
|| __DATA_CONST.__const _RDStoreControllerCKParentReminderIdentifierMigrationAuthor
|| __DATA_CONST.__const _RDStoreControllerCreateAccountStoreAuthor
|| __DATA_CONST.__const _RDStoreControllerDefaultValuesMigrationAuthor
|| __DATA_CONST.__const _RDStoreControllerDeleteAccountStoreAuthor
|| __DATA_CONST.__const _RDStoreControllerDiacriticsInsensitiveHashtagLabelsMigrationAuthor
|| __DATA_CONST.__const _RDStoreControllerDisplayDateUpdaterAuthor
|| __DATA_CONST.__const _RDStoreControllerICCloudContextAuthor
|| __DATA_CONST.__const _RDStoreControllerICCloudContextInternalAuthor
|| __DATA_CONST.__const _RDStoreControllerICCloudContextServerChangeTokenAuthor
|| __DATA_CONST.__const _RDStoreControllerIsPinnedByCurrentUserMigrationAuthor
|| __DATA_CONST.__const _RDStoreControllerJSONPropertiesMigrationAuthor
|| __DATA_CONST.__const _RDStoreControllerOrphanedListMigrationAuthor
|| __DATA_CONST.__const _RDStoreControllerUnsetCKDirtyFlagsInNonCKAccountsMigrationAuthor
|| __DATA_CONST.__const _RDSyncActivityNotificationEngineAuthor
|| __DATA_CONST.__const _RDTemplateOperationAuthor
|| __DATA_CONST.__const _RDTodayNotificationLastBannerPresentationDateAuthor
|| __DATA_CONST.__const _REMACAccountPropertyDidChooseToMigrate
|| __DATA_CONST.__const _REMACAccountPropertyDidFinishMigration
|| __DATA_CONST.__const _REMAppBundleIdentifier
|| __DATA_CONST.__const _REMAppGroupBundleIdentifier
|| __DATA_CONST.__const _REMChangeErrorDomain
|| __DATA_CONST.__const _REMDA_kCalDAVMobileAccountDelegatePrincipalPath
|| __DATA_CONST.__const _REMDaemonAPSNamedDelegatePort
|| __DATA_CONST.__const _REMDaemonBundleIdentifier
|| __DATA_CONST.__const _REMDaemonCoreSpotlightIndexName
|| __DATA_CONST.__const _REMDaemonExecutableName
|| __DATA_CONST.__const _REMDaemonMachServiceName
|| __DATA_CONST.__const _REMDaemonMachServiceName_userInteractive
|| __DATA_CONST.__const _REMDistributedEvaluationCollectionOptionsReminderTitleCategoryEmbeddingFilenameKey
|| __DATA_CONST.__const _REMErrorDomain
|| __DATA_CONST.__const _REMErrorObjectIDEntityNameKey
|| __DATA_CONST.__const _REMErrorObjectIDUUIDKey
|| __DATA_CONST.__const _REMErrorRetryAfterKey
|| __DATA_CONST.__const _REMListBadgeEmblemBookmarks1
|| __DATA_CONST.__const _REMListBadgeEmblemBookmarks2
|| __DATA_CONST.__const _REMListBadgeEmblemCelebration1
|| __DATA_CONST.__const _REMListBadgeEmblemCelebration2
|| __DATA_CONST.__const _REMListBadgeEmblemConcept1
|| __DATA_CONST.__const _REMListBadgeEmblemConcept2
|| __DATA_CONST.__const _REMListBadgeEmblemConcept3
|| __DATA_CONST.__const _REMListBadgeEmblemDefault
|| __DATA_CONST.__const _REMListBadgeEmblemEducation1
|| __DATA_CONST.__const _REMListBadgeEmblemEducation2
|| __DATA_CONST.__const _REMListBadgeEmblemEducation3
|| __DATA_CONST.__const _REMListBadgeEmblemEducation4
|| __DATA_CONST.__const _REMListBadgeEmblemEducation5
|| __DATA_CONST.__const _REMListBadgeEmblemFinance1
|| __DATA_CONST.__const _REMListBadgeEmblemFinance2
|| __DATA_CONST.__const _REMListBadgeEmblemFinance3
|| __DATA_CONST.__const _REMListBadgeEmblemFitness
|| __DATA_CONST.__const _REMListBadgeEmblemFood
|| __DATA_CONST.__const _REMListBadgeEmblemHealth1
|| __DATA_CONST.__const _REMListBadgeEmblemHealth2
|| __DATA_CONST.__const _REMListBadgeEmblemLifestyle1
|| __DATA_CONST.__const _REMListBadgeEmblemLifestyle2
|| __DATA_CONST.__const _REMListBadgeEmblemLocation1
|| __DATA_CONST.__const _REMListBadgeEmblemLocation2
|| __DATA_CONST.__const _REMListBadgeEmblemLocation3
|| __DATA_CONST.__const _REMListBadgeEmblemMedia1
|| __DATA_CONST.__const _REMListBadgeEmblemMedia2
|| __DATA_CONST.__const _REMListBadgeEmblemMedia3
|| __DATA_CONST.__const _REMListBadgeEmblemMedia4
|| __DATA_CONST.__const _REMListBadgeEmblemMedia5
|| __DATA_CONST.__const _REMListBadgeEmblemNature1
|| __DATA_CONST.__const _REMListBadgeEmblemNature2
|| __DATA_CONST.__const _REMListBadgeEmblemPeople1
|| __DATA_CONST.__const _REMListBadgeEmblemPeople2
|| __DATA_CONST.__const _REMListBadgeEmblemPeople3
|| __DATA_CONST.__const _REMListBadgeEmblemPet1
|| __DATA_CONST.__const _REMListBadgeEmblemPet2
|| __DATA_CONST.__const _REMListBadgeEmblemPet3
|| __DATA_CONST.__const _REMListBadgeEmblemShopping1
|| __DATA_CONST.__const _REMListBadgeEmblemShopping2
|| __DATA_CONST.__const _REMListBadgeEmblemShopping3
|| __DATA_CONST.__const _REMListBadgeEmblemShopping4
|| __DATA_CONST.__const _REMListBadgeEmblemSport1
|| __DATA_CONST.__const _REMListBadgeEmblemSport2
|| __DATA_CONST.__const _REMListBadgeEmblemSport3
|| __DATA_CONST.__const _REMListBadgeEmblemSport4
|| __DATA_CONST.__const _REMListBadgeEmblemSport5
|| __DATA_CONST.__const _REMListBadgeEmblemSport6
|| __DATA_CONST.__const _REMListBadgeEmblemSymbol1
|| __DATA_CONST.__const _REMListBadgeEmblemSymbol2
|| __DATA_CONST.__const _REMListBadgeEmblemSymbol3
|| __DATA_CONST.__const _REMListBadgeEmblemSymbol4
|| __DATA_CONST.__const _REMListBadgeEmblemSymbol5
|| __DATA_CONST.__const _REMListBadgeEmblemSymbol6
|| __DATA_CONST.__const _REMListBadgeEmblemSymbol7
|| __DATA_CONST.__const _REMListBadgeEmblemTransport1
|| __DATA_CONST.__const _REMListBadgeEmblemTransport2
|| __DATA_CONST.__const _REMListBadgeEmblemTransport3
|| __DATA_CONST.__const _REMListBadgeEmblemTransport4
|| __DATA_CONST.__const _REMListBadgeEmblemVacation
|| __DATA_CONST.__const _REMListBadgeEmblemWeather1
|| __DATA_CONST.__const _REMListBadgeEmblemWeather2
|| __DATA_CONST.__const _REMListBadgeEmblemWeather3
|| __DATA_CONST.__const _REMListBadgeEmblemWeather4
|| __DATA_CONST.__const _REMListBadgeEmblemWeather5
|| __DATA_CONST.__const _REMListBadgeEmblemWine
|| __DATA_CONST.__const _REMListBadgeEmblemWork1
|| __DATA_CONST.__const _REMListBadgeEmblemWork2
|| __DATA_CONST.__const _REMListBadgeEmblemWork3
|| __DATA_CONST.__const _REMListBadgeEmblemWork4
|| __DATA_CONST.__const _REMListBadgeEmblemWork5
|| __DATA_CONST.__const _REMListDefaultColorHexString
|| __DATA_CONST.__const _REMNSPersistentHistoryTrackingAuthor
|| __DATA_CONST.__const _REMObjectIDCRCoderTypeName
|| __DATA_CONST.__const _REMReminderCreationViewServiceBundleID
|| __DATA_CONST.__const _REMReminderICSObjectTypeIdentifier
|| __DATA_CONST.__const _REMRemindersDataViewFetchRemindersCountResultKey
|| __DATA_CONST.__const _REMSettingsDefaultListIdentifier
|| __DATA_CONST.__const _REMSmartListTypeAll
|| __DATA_CONST.__const _REMSmartListTypeAssigned
|| __DATA_CONST.__const _REMSmartListTypeCompleted
|| __DATA_CONST.__const _REMSmartListTypeCustom
|| __DATA_CONST.__const _REMSmartListTypeFlagged
|| __DATA_CONST.__const _REMSmartListTypeScheduled
|| __DATA_CONST.__const _REMSmartListTypeSiriFoundInApps
|| __DATA_CONST.__const _REMSmartListTypeTagged
|| __DATA_CONST.__const _REMSmartListTypeToday
|| __DATA_CONST.__const _REMSortingStyleCreationDateNewestFirst
|| __DATA_CONST.__const _REMSortingStyleCreationDateOldestFirst
|| __DATA_CONST.__const _REMSortingStyleDefault
|| __DATA_CONST.__const _REMSortingStyleDisplayDateNewestFirst
|| __DATA_CONST.__const _REMSortingStyleDisplayDateOldestFirst
|| __DATA_CONST.__const _REMSortingStyleManual
|| __DATA_CONST.__const _REMSortingStylePriorityHighestFirst
|| __DATA_CONST.__const _REMSortingStylePriorityLowestFirst
|| __DATA_CONST.__const _REMSortingStyleTitleAscending
|| __DATA_CONST.__const _REMSortingStyleTitleDescending
|| __DATA_CONST.__const _REMStoreDidChangeNotification
|| __DATA_CONST.__const _REMStoreSyncReasonAppDelegate
|| __DATA_CONST.__const _REMStoreSyncReasonDebugMenu
|| __DATA_CONST.__const _REMStoreSyncReasonSignificantTimeChanged
|| __DATA_CONST.__const _REMSymbolicColorNameBlue
|| __DATA_CONST.__const _REMSymbolicColorNameBrown
|| __DATA_CONST.__const _REMSymbolicColorNameCustom
|| __DATA_CONST.__const _REMSymbolicColorNameGray
|| __DATA_CONST.__const _REMSymbolicColorNameGreen
|| __DATA_CONST.__const _REMSymbolicColorNameIndigo
|| __DATA_CONST.__const _REMSymbolicColorNameLightBlue
|| __DATA_CONST.__const _REMSymbolicColorNameOrange
|| __DATA_CONST.__const _REMSymbolicColorNamePink
|| __DATA_CONST.__const _REMSymbolicColorNamePurple
|| __DATA_CONST.__const _REMSymbolicColorNameRed
|| __DATA_CONST.__const _REMSymbolicColorNameRose
|| __DATA_CONST.__const _REMSymbolicColorNameYellow
|| __DATA_CONST.__const _REMTTPresentationAttributeNameItemNumber
|| __DATA_CONST.__const _REMToolBundleIdentifier
|| __DATA_CONST.__const _REMUniversalAppBundleIdentifier
|| __DATA_CONST.__const _REMUnlocalizedDefaultListName
|| __DATA_CONST.__const _REMXPCSyncInterfaceSyncReasonAppDelegate
|| __DATA_CONST.__const _REMXPCSyncInterfaceSyncReasonDebugMenu
|| __DATA_CONST.__const _REMXPCSyncInterfaceSyncReasonRemindtoolCloudKitDeleteAll
|| __DATA_CONST.__const _REMXPCSyncInterfaceSyncReasonRemindtoolCloudKitRestart
|| __DATA_CONST.__const _REMXPCSyncInterfaceSyncReasonRemindtoolCloudKitSync
|| __DATA_CONST.__const _REMXPCSyncInterfaceSyncReasonSignificantTimeChanged
|| __DATA_CONST.__const _REMXPCSyncInterfaceSyncReasonUpdateAccounts
|| __DATA_CONST.__const _TTNSAttachmentAttributeName
|| __DATA_CONST.__const _TTREMHashtagAttributeName
|| __DATA_CONST.__const _UncompletedRemindersCount
|| __DATA_CONST.__const _kREMObjectIDURLScheme
|| __DATA_CONST.__const _kStructuredLocationABIDKey
|| __DATA_CONST.__const _kStructuredLocationABIDKey_oldAndBusted
|| __DATA_CONST.__const _kStructuredLocationRadiusKey
|| __DATA_CONST.__const _kStructuredLocationRadiusKey_oldAndBusted
|| __DATA_CONST.__const _kStructuredLocationReferenceFrameKey
|| __DATA_CONST.__const _k_REM_ImportOptionConsiderDTENDForDueDate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRCoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRCoderArchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRCoderUnarchiver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRDocument
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRRegisterMultiValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRRegisterMultiValueLeast
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRTTCompatibleDocument
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRTombstoneOrderedSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRVectorTimestamp
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CRVectorTimestampElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccountCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccountChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccountStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccountTypeHost
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccountsDataView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccountsDataViewInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccountsDataViewInvocation_fetchAll
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccountsDataViewInvocation_fetchByExternalIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAccountsDataViewInvocation_fetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAlarm
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAlarmLocationTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAlarmTimeIntervalTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAlarmTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAlarmVehicleTrigger
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAppleAccountUtilities
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAssignment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAssignmentsDataViewInvocation_fetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMAttachment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMBundleLookupObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMCRMergeableOrderedSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMCRMergeableStringDocument
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMCRMutableAttributedString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMCRUndo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMCalDAVNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMChangeToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMChangeTracking
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMChangeTrackingState
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMChangedKeysObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMClockElementList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMColor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMContactRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMDaemonUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMDataAccessBehaviorManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMDatabaseMigrationContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMDispatchQueue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMDisplayDate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMDisplayDateUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMDisplayNameUtils
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMDistributedEvaluationCollectionOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMEventKitBridgingDataView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMEventKitBridgingDataViewInvocation_fetchLists
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMEventKitBridgingDataViewInvocation_fetchReminders
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMFetchResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMFetchResultToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMFileAttachment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMHashtag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMHashtagLabel
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMHashtagsDataViewInvocation_fetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMImageAttachment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListAppearanceContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListShareeContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListShareeContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_dataAccessFetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_dataAccessFetchListsInAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_debugFetchPhantomLists
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_fetchByObjectIDs
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_fetchDefaultList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_fetchListsInAccount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_fetchListsInGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_fetchUserSelectableDefaultLists
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMListsDataViewInvocation_userActivityFetchByExternalIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMLog
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMLogStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMManualOrdering
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMMigrationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMMutableCRMergeableStringDocument
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMMutableCRUndo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMObjectID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMPaths
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRecurrenceRule
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminderAssignmentContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminderAssignmentContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminderAttachmentContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminderAttachmentContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminderChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminderFlaggedContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminderFlaggedContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminderStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReminderSubtaskContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchByExternalIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchByListID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchByParentReminderID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchByParentReminderIDs
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchByPredicateDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMRemindersDataViewInvocation_fetchRemindersCountByListID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReplicaEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReplicaIDHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReplicaIDSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReplicaManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMReplicaManagerSerializedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMResolutionToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMResolutionTokenMap
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSaveRequest
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSaveRequestTrackedValueContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSharedEntitySyncActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSharee
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSignpost
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSiriSearchLimitedDataViewInvocation_fetchReminders
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSmartList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSmartListStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSmartListsDataView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSmartListsDataViewInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSmartListsDataViewInvocation_fetchSmartList
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMStoreContainerToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMStoreInvocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMStoreInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMStoreInvocationValueStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMStoreSwiftInvocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMStoreSwiftInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMStructuredLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMSuggestedAttributesPerformer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMTTHashtag
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMTemplateStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMTipKitDataViewInvocation_fetchCompletedRemindersCount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMURLAttachment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMUserActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMUserDefaultsObserver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCChangeTrackingPerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCDaemonController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCDaemonControllerExportedObject
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCDaemonControllerPerformerResolver
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCDaemonControllerPerformerResolver_store
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCDaemonControllerPerformerResolver_sync
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCDebugPerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCIndexingPerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCStorageClasses
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCStorePerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCSuggestedAttributesPerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_REMXPCSyncInterfacePerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTMergeableAttributedString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTMergeableStringVersionedDocument
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTVectorTimestamp
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_TTVectorTimestampElement
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__REMChangeTrackingClientID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__REMDefaultReplicaManagerProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__REMInProgressSaveRequestsContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRCoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRCoderArchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRCoderUnarchiver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRDocument
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRRegisterMultiValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRRegisterMultiValueLeast
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRTTCompatibleDocument
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRTombstoneOrderedSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRVectorTimestamp
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CRVectorTimestampElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccountCapabilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccountChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccountStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccountTypeHost
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccountsDataView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccountsDataViewInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccountsDataViewInvocation_fetchAll
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccountsDataViewInvocation_fetchByExternalIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAccountsDataViewInvocation_fetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAlarm
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAlarmLocationTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAlarmTimeIntervalTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAlarmTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAlarmVehicleTrigger
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAppleAccountUtilities
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAssignment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAssignmentsDataViewInvocation_fetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMAttachment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMBundleLookupObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMCRMergeableOrderedSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMCRMergeableStringDocument
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMCRMutableAttributedString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMCRUndo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMCalDAVNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMChangeSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMChangeToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMChangeTracking
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMChangeTrackingState
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMChangedKeysObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMClockElementList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMColor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMContactRepresentation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMDaemonUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMDataAccessBehaviorManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMDatabaseMigrationContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMDispatchQueue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMDisplayDate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMDisplayDateUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMDisplayNameUtils
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMDistributedEvaluationCollectionOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMEventKitBridgingDataView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMEventKitBridgingDataViewInvocation_fetchLists
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMEventKitBridgingDataViewInvocation_fetchReminders
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMFetchRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMFetchResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMFetchResultToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMFileAttachment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMHashtag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMHashtagLabel
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMHashtagsDataViewInvocation_fetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMImageAttachment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListAppearanceContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListShareeContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListShareeContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_dataAccessFetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_dataAccessFetchListsInAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_debugFetchPhantomLists
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_fetchByObjectIDs
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_fetchDefaultList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_fetchListsInAccount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_fetchListsInGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_fetchUserSelectableDefaultLists
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMListsDataViewInvocation_userActivityFetchByExternalIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMLog
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMLogStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMManualOrdering
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMMigrationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMMutableCRMergeableStringDocument
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMMutableCRUndo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMObjectID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMPaths
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRecurrenceRule
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminderAssignmentContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminderAssignmentContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminderAttachmentContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminderAttachmentContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminderChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminderFlaggedContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminderFlaggedContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminderStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReminderSubtaskContextChangeItem
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchByExternalIdentifier
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchByListID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchByObjectID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchByParentReminderID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchByParentReminderIDs
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchByPredicateDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMRemindersDataViewInvocation_fetchRemindersCountByListID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReplicaEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReplicaIDHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReplicaIDSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReplicaManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMReplicaManagerSerializedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMResolutionToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMResolutionTokenMap
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSaveRequest
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSaveRequestTrackedValueContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSharedEntitySyncActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSharee
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSignpost
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSiriSearchLimitedDataViewInvocation_fetchReminders
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSmartList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSmartListStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSmartListsDataView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSmartListsDataViewInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSmartListsDataViewInvocation_fetchSmartList
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMStoreContainerToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMStoreInvocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMStoreInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMStoreInvocationValueStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMStoreSwiftInvocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMStoreSwiftInvocationResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMStructuredLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMSuggestedAttributesPerformer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMTTHashtag
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMTemplateStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMTipKitDataViewInvocation_fetchCompletedRemindersCount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMURLAttachment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMUserActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMUserDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMUserDefaultsObserver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCChangeTrackingPerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCClientInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCDaemonController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCDaemonControllerExportedObject
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCDaemonControllerPerformerResolver
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCDaemonControllerPerformerResolver_store
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCDaemonControllerPerformerResolver_sync
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCDaemonInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCDebugPerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCIndexingPerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCStorageClasses
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCStorePerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCSuggestedAttributesPerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_REMXPCSyncInterfacePerformerInterface
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTMergeableAttributedString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTMergeableStringVersionedDocument
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTVectorTimestamp
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_TTVectorTimestampElement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__REMChangeTrackingClientID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__REMDefaultReplicaManagerProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__REMInProgressSaveRequestsContainer
|| __TEXT.__const _REMICSExportingEventKitSync
|| __TEXT.__const _REMReplicaManagerMaxSerializedSize
|| __TEXT.__const _ReminderKitVersionNumber
|| __TEXT.__const _ReminderKitVersionString
|| __TEXT.__const _kREMCurrentRuntimeVersion
|| __TEXT.__const _kREMSupportedVersionForSydneyRomeKincaid
|| __TEXT.__const _kREMSupportedVersionUnset
|| __TEXT.__text _NSStringFromPriorityLevel
|| __TEXT.__text _NSStringFromREMAccountType
|| __TEXT.__text _NSStringFromREMFetchRequestType
|| __TEXT.__text _NewBase64Decode
|| __TEXT.__text _NewBase64Encode
|| __TEXT.__text _PropertyNameFromREMReminderChangeTrackingProperty
|| __TEXT.__text _REMAccountTypeMaskContainsType
|| __TEXT.__text _REMBundleGet
|| __TEXT.__text _REMCFTypeCast
|| __TEXT.__text _REMCheckedDynamicCast
|| __TEXT.__text _REMCheckedProtocolCast
|| __TEXT.__text _REMClassAndProtocolCast
|| __TEXT.__text _REMDynamicCast
|| __TEXT.__text _REMGetRealUIDFromRecurrenceUID
|| __TEXT.__text _REMGetRecurrenceUIDFromRealUID
|| __TEXT.__text _REMInternalDescriptionFromREMAccountType
|| __TEXT.__text _REMInvalidICSAlarmDateComponents
|| __TEXT.__text _REMIsInvalidICSAlarmDateComponents
|| __TEXT.__text _REMLocalizedTimeOfDayCreationHour
|| __TEXT.__text _REMProtocolCast
|| __TEXT.__text _REMReminderDefaultPriorityForPriorityLevel
|| __TEXT.__text _REMReminderPriorityLevelForPriority
|| __TEXT.__text _REMSpecificCast
|| __TEXT.__text _REMSymbolicColorIsSupportedByCK
|| __TEXT.__text _REMSymbolicColorIsSupportedByDA
|| __TEXT.__text _REMiCalendarDataFromICSCalendar
|| __TEXT.__text __REMGetLocalizedString
|| __TEXT.__text __auto_REMAccountTypeForPrimaryCloudKit
|| __TEXT.__text _cloudBasedAccountTypes
|| __TEXT.__text _cloudKitAccountTypes
|| __TEXT.__text _rem_currentRuntimeVersion
|| __TEXT.__text _rem_feature_enabled
|| __TEXT.__text _rem_isUnsupportedVersionByRuntime
|| __TEXT.__text _rem_logObject
|| __TEXT.__text _rem_loggableSupportedVersionFrom
__ Accounts: _ACAccountDataclassUbiquity
__ Accounts: _ACAccountStoreDidChangeNotification
__ Accounts: _ACAccountTypeIdentifierAppleAccount
__ Accounts: _ACAccountTypeIdentifierCloudKit
__ Accounts: _OBJC_CLASS_$_ACAccount
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ Accounts: _kAccountDataclassCalendars
__ Accounts: _kAccountDataclassReminders
__ AppleAccount: _AAAccountClassBasic
__ AppleAccount: _AAAccountClassFull
__ AppleAccount: _AAAccountClassPrimary
__ CalendarFoundation: _EKSymbolicColorToRGBMapping
__ CalendarFoundation: _OBJC_CLASS_$_CalRecurrenceGenerator
__ CalendarFoundation: _kCalReminderMigrationAuthor
__ CloudKit: _OBJC_CLASS_$_CKAccountOverrideInfo
__ CloudKit: _OBJC_CLASS_$_CKContainer
__ CloudKit: _OBJC_CLASS_$_CKContainerID
__ CloudKit: _OBJC_CLASS_$_CKContainerOptions
__ Contacts: _OBJC_CLASS_$_CNPhoneNumber
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreAnalytics: _AnalyticsSendEventLazy
__ CoreData: _NSSQLiteErrorDomain
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryChangeRequest
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryToken
__ CoreData: _OBJC_CLASS_$_NSPersistentHistoryTransaction
__ CoreEmoji: _CEMStringIsSingleEmoji
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNumberGetType
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesSetAppValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSGregorianCalendar
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLTypeIdentifierKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: __CFCopyServerVersionDictionary
__ CoreFoundation: __CFCopySystemVersionDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: __kCFSystemVersionBuildVersionKey
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreFoundation: _kCFUserNotificationOtherButtonTitleKey
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleProxy
__ CoreServices: _OBJC_CLASS_$_NSUserActivity
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTypeURL
__ DataDetectorsCore: _DDResultAttributeName
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSFilePosixPermissions
__ Foundation: _NSIntersectionRange
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLocalizedFailureReasonErrorKey
__ Foundation: _NSLog
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSISO8601DateFormatter
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSSecurityScopedURLWrapper
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSURLQueryItem
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSMutableAttributedString
__ Intents: _OBJC_CLASS_$_INIntent
__ Intents: _OBJC_CLASS_$_INPerson
__ NanoPreferencesSync: _OBJC_CLASS_$_NPSManager
__ Security: _SecRandomCopyBytes
__ Security: _kSecRandomDefault
__ SymptomDiagnosticReporter: _OBJC_CLASS_$_SDRDiagnosticReporter
__ iCalendar: _OBJC_CLASS_$_ICSAlarm
__ iCalendar: _OBJC_CLASS_$_ICSByDayValue
__ iCalendar: _OBJC_CLASS_$_ICSCalendar
__ iCalendar: _OBJC_CLASS_$_ICSComponent
__ iCalendar: _OBJC_CLASS_$_ICSDate
__ iCalendar: _OBJC_CLASS_$_ICSDateTimeUTCValue
__ iCalendar: _OBJC_CLASS_$_ICSDateTimeValue
__ iCalendar: _OBJC_CLASS_$_ICSDocument
__ iCalendar: _OBJC_CLASS_$_ICSDuration
__ iCalendar: _OBJC_CLASS_$_ICSProperty
__ iCalendar: _OBJC_CLASS_$_ICSRecurrenceRule
__ iCalendar: _OBJC_CLASS_$_ICSStructuredLocation
__ iCalendar: _OBJC_CLASS_$_ICSTodo
__ iCalendar: _OBJC_CLASS_$_ICSTrigger
__ iCalendar: _kICSSymbolicColorCustom
__ iCalendar: _kXAppleAlarmProxArrive
__ iCalendar: _kXAppleAlarmProxConnect
__ iCalendar: _kXAppleAlarmProxDepart
__ iCalendar: _kXAppleAlarmProxDisconnect
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_activity_initiate
__ libSystem.B.dylib: __os_feature_enabled_impl
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_assert_queue_not$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_qos_class_fallback
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fflush
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _notify_check
__ libSystem.B.dylib: _notify_get_state
__ libSystem.B.dylib: _notify_is_valid_token
__ libSystem.B.dylib: _notify_post
__ libSystem.B.dylib: _notify_register_check
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _sched_yield
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _uuid_compare
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZNSt3__112__next_primeEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev
__ libc++.1.dylib: __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEaSERKS5_
__ libc++.1.dylib: __ZNSt9exceptionD2Ev
__ libc++.1.dylib: __ZSt7nothrow
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTISt9exception
__ libc++.1.dylib: __ZTVN10__cxxabiv117__class_type_infoE
__ libc++.1.dylib: __ZTVN10__cxxabiv120__si_class_type_infoE
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdaPv
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znam
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: __ZnwmRKSt9nothrow_t
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_end_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_rethrow
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___dynamic_cast
__ libc++.1.dylib: ___gxx_personality_v0
__ libicucore.A.dylib: _u_strcmp
__ libicucore.A.dylib: _ucal_getCanonicalTimeZoneID
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_moveWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _protocol_getName
__ libz.1.dylib: _deflate
__ libz.1.dylib: _deflateEnd
__ libz.1.dylib: _deflateInit2_
__ libz.1.dylib: _inflate
__ libz.1.dylib: _inflateEnd
__ libz.1.dylib: _inflateInit2_
REMDisplayNameUtils : NSObject
  // class methods
  +[REMDisplayNameUtils displayNameFromAccountName:]
  +[REMDisplayNameUtils displayNameFromListName:isPlaceholder:]


REMRecurrenceDayOfWeek : NSObject <NSCopying, NSSecureCoding>
 @property  long long dayOfTheWeek
 @property  long long weekNumber

  // class methods
  +[REMRecurrenceDayOfWeek supportsSecureCoding]
  +[REMRecurrenceDayOfWeek dayOfWeek:weekNumber:]
  +[REMRecurrenceDayOfWeek dayOfWeek:]

  // instance methods
  -[REMRecurrenceDayOfWeek initWithDayOfTheWeek:weekNumber:]
  -[REMRecurrenceDayOfWeek encodeWithCoder:]
  -[REMRecurrenceDayOfWeek copyWithZone:]
  -[REMRecurrenceDayOfWeek iCalendarValueFromDayOfTheWeek:]
  -[REMRecurrenceDayOfWeek weekNumber]
  -[REMRecurrenceDayOfWeek isEqual:]
  -[REMRecurrenceDayOfWeek dayOfTheWeek]
  -[REMRecurrenceDayOfWeek iCalendarDescription]
  -[REMRecurrenceDayOfWeek initWithCoder:]


REMListSortDescriptor : NSObject <NSSecureCoding>
 @property  long long type
 @property  BOOL ascending

  // class methods
  +[REMListSortDescriptor supportsSecureCoding]
  +[REMListSortDescriptor sortDescriptorSortingByNameAscending:]
  +[REMListSortDescriptor sortDescriptorSortingByOrderingInAccountAscending:]

  // instance methods
  -[REMListSortDescriptor ascending]
  -[REMListSortDescriptor encodeWithCoder:]
  -[REMListSortDescriptor type]
  -[REMListSortDescriptor isEqual:]
  -[REMListSortDescriptor initWithCoder:]
  -[REMListSortDescriptor initWithType:ascending:]


REMAuxiliaryReminderChangeDeleteInfo : REMAuxiliaryChangeInfoType <REMAuxiliaryReminderChangeInfo>
 @property  NSString *reminderIdentifier
 @property  NSString *oldListIdentifier
 @property  NSString *oldExternalIdentifier

  // class methods
  +[REMAuxiliaryReminderChangeDeleteInfo cdEntityName]


REMAuxiliaryReminderChangeMoveInfo : REMAuxiliaryChangeInfoType <REMAuxiliaryReminderChangeInfo>
 @property  NSString *reminderIdentifier
 @property  NSString *oldListIdentifier
 @property  NSString *oldExternalIdentifier

  // class methods
  +[REMAuxiliaryReminderChangeMoveInfo cdEntityName]


REMClockElementList : NSObject
 @property  NSArray *elements

  // class methods
  +[REMClockElementList list:isCompatibleToList:]
  +[REMClockElementList compareList:toList:]

  // instance methods
  -[REMClockElementList setElements:]
  -[REMClockElementList elements]
  -[REMClockElementList .cxx_destruct]
  -[REMClockElementList isEqual:]
  -[REMClockElementList initWithCRVectorTimestampElements:]
  -[REMClockElementList initWithTTVectorTimestampElements:]
  -[REMClockElementList encodeIntoEntryArchive:]
  -[REMClockElementList initWithEntryArchive:]


REMReplicaEntry : NSObject
 @property  unsigned int replicaUUIDIndex
 @property  REMClockElementList *clockElementList
 @property  BOOL inUse
 @property  <REMReplicaManagerClient> *client

  // instance methods
  -[REMReplicaEntry setInUse:]
  -[REMReplicaEntry .cxx_destruct]
  -[REMReplicaEntry setClient:]
  -[REMReplicaEntry inUse]
  -[REMReplicaEntry client]
  -[REMReplicaEntry encodeIntoEntryArchive:]
  -[REMReplicaEntry initWithEntryArchive:]
  -[REMReplicaEntry initWithReplicaUUIDIndex:clockElementList:inUse:forClient:]
  -[REMReplicaEntry persistenceDescription]
  -[REMReplicaEntry hasEqualPersistedPropertiesAs:]
  -[REMReplicaEntry replicaUUIDIndex]
  -[REMReplicaEntry setReplicaUUIDIndex:]
  -[REMReplicaEntry clockElementList]
  -[REMReplicaEntry setClockElementList:]


REMReplicaManager : NSObject
 @property  {os_unfair_lock_s=I} ivarLock
 @property  BOOL isPersistable
 @property  NSMutableOrderedSet *replicaUUIDs
 @property  NSMutableDictionary *replicaEntries
 @property  unsigned long currentVersion
 @property  unsigned long maxLastSavedVersion
 @property  BOOL exceededMaxSerializedSize

  // class methods
  +[REMReplicaManager supportsSecureCoding]
  +[REMReplicaManager unsavedReplicaManagersForAccountIDs:]
  +[REMReplicaManager replicaManagerForAccountID:store:]
  +[REMReplicaManager shouldUseNewInMemoryOnlyReplicaManager]
  +[REMReplicaManager replicaManagerWithSerializedData:error:]
  +[REMReplicaManager disablesInMemoryOnlyCheck]
  +[REMReplicaManager setDisablesInMemoryOnlyCheck:]
  +[REMReplicaManager replicaManagerIfLoadedForAccountID:]
  +[REMReplicaManager setReplicaManager:forAccountID:]

  // instance methods
  -[REMReplicaManager ivarLock]
  -[REMReplicaManager setIvarLock:]
  -[REMReplicaManager currentVersion]
  -[REMReplicaManager .cxx_destruct]
  -[REMReplicaManager isPersistable]
  -[REMReplicaManager commonInit]
  -[REMReplicaManager hasUnsavedChanges]
  -[REMReplicaManager init]
  -[REMReplicaManager setCurrentVersion:]
  -[REMReplicaManager persistenceDescription]
  -[REMReplicaManager initWithArchive:error:]
  -[REMReplicaManager encodeIntoArchive:]
  -[REMReplicaManager performLocked:]
  -[REMReplicaManager checkoutReplicaUUIDForClient:]
  -[REMReplicaManager l_checkoutReplicaUUIDForClient:]
  -[REMReplicaManager modifyReplicaEntryForClient:block:]
  -[REMReplicaManager updateVersionForClient:]
  -[REMReplicaManager l_updateVersionOfEntry:forClient:]
  -[REMReplicaManager returnReplicaForClient:]
  -[REMReplicaManager l_replicaUUIDsDescription]
  -[REMReplicaManager l_replicaEntriesDescriptionForPersistence:]
  -[REMReplicaManager l_serializedDataWithError:]
  -[REMReplicaManager serializedDataCappedAtMaxSize:error:]
  -[REMReplicaManager didSaveVersion:]
  -[REMReplicaManager replicaEntryCount]
  -[REMReplicaManager availabilityOfFirstReplicaForCRDTID:]
  -[REMReplicaManager clockOfFirstReplicaForCRDTID:]
  -[REMReplicaManager hasEqualPersistedEntriesAs:]
  -[REMReplicaManager addRandomReplicaEntriesWithCount:]
  -[REMReplicaManager setIsPersistable:]
  -[REMReplicaManager replicaUUIDs]
  -[REMReplicaManager setReplicaUUIDs:]
  -[REMReplicaManager replicaEntries]
  -[REMReplicaManager setReplicaEntries:]
  -[REMReplicaManager maxLastSavedVersion]
  -[REMReplicaManager setMaxLastSavedVersion:]
  -[REMReplicaManager exceededMaxSerializedSize]
  -[REMReplicaManager setExceededMaxSerializedSize:]


REMReplicaManagerSerializedData : NSObject <NSSecureCoding>
 @property  BOOL isRepresentingDiscardedReplicaManager
 @property  NSData *managerData
 @property  unsigned long version

  // class methods
  +[REMReplicaManagerSerializedData supportsSecureCoding]
  +[REMReplicaManagerSerializedData serializedDataRepresentingDiscardedReplicaManager]

  // instance methods
  -[REMReplicaManagerSerializedData encodeWithCoder:]
  -[REMReplicaManagerSerializedData .cxx_destruct]
  -[REMReplicaManagerSerializedData version]
  -[REMReplicaManagerSerializedData isEqual:]
  -[REMReplicaManagerSerializedData initWithCoder:]
  -[REMReplicaManagerSerializedData initWithManagerData:version:]
  -[REMReplicaManagerSerializedData isRepresentingDiscardedReplicaManager]
  -[REMReplicaManagerSerializedData managerData]


_REMDefaultReplicaManagerProvider : NSObject <REMReplicaManagerProviding>
 @property  REMStore *store
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[_REMDefaultReplicaManagerProvider store]
  -[_REMDefaultReplicaManagerProvider initWithStore:]
  -[_REMDefaultReplicaManagerProvider unsavedReplicaManagersForAccountIDs:]
  -[_REMDefaultReplicaManagerProvider .cxx_destruct]
  -[_REMDefaultReplicaManagerProvider replicaManagerForAccountID:]
  -[_REMDefaultReplicaManagerProvider isEqual:]


REMBundleLookupObject : NSObject

REMXPCIndexingPerformerInterface : NSObject
  // class methods
  +[REMXPCIndexingPerformerInterface interface]


REMLog : NSObject
  // class methods
  +[REMLog xpc]
  +[REMLog ui]
  +[REMLog analytics]
  +[REMLog account]
  +[REMLog userAction]
  +[REMLog utility]
  +[REMLog applicationShortcut]
  +[REMLog ppt]
  +[REMLog suggestedAttributes]
  +[REMLog inlineTagAutoConvertEngine]
  +[REMLog changeTracking]
  +[REMLog crdt]
  +[REMLog siriKit]
  +[REMLog notification]
  +[REMLog templates]
  +[REMLog dataAccess]
  +[REMLog cloudkitCollaboration]
  +[REMLog timelineEngine]
  +[REMLog migration]
  +[REMLog scripting]
  +[REMLog extraneousAlarmCleaner]
  +[REMLog cloudkit]
  +[REMLog accountPlugin]
  +[REMLog housekeepingingActivityScheduler]
  +[REMLog alarmEngine]
  +[REMLog editor]
  +[REMLog search]


REMSignpost : NSObject
  // class methods
  +[REMSignpost sync]
  +[REMSignpost database]


REMLogStore : NSObject
  // class methods
  +[REMLogStore xpc]
  +[REMLogStore write]
  +[REMLogStore utility]
  +[REMLogStore container]
  +[REMLogStore stagedLightweightCoreDataMigration]
  +[REMLogStore OVERSIZED]
  +[REMLogStore search]
  +[REMLogStore read]


REMReminderChangeItem : NSObject <REMConflictResolving, REMSaveRequestTrackedValue, REMExternalSyncMetadataWritableProviding, REMSupportedVersionProviding, REMSupportedVersionUpdating>
 @property  REMChangedKeysObserver *changedKeysObserver
 @property  REMObjectID *objectID
 @property  REMObjectID *listID
 @property  NSArray *attachments
 @property  NSArray *recurrenceRules
 @property  NSSet *assignments
 @property  NSSet *hashtags
 @property  NSSet *subtaskIDsToUndelete
 @property  NSSet *hashtagIDsToUndelete
 @property  NSData *titleDocumentData
 @property  NSData *notesDocumentData
 @property  NSString *primaryLocaleInferredFromLastUsedKeyboard
 @property  NSString *timeZone
 @property  BOOL allDay
 @property  unsigned long icsDisplayOrder
 @property  NSData *importedICSData
 @property  REMObjectID *remObjectID
 @property  NSDate *lastModifiedDate
 @property  REMObjectID *accountID
 @property  REMReminderStorage *storage
 @property  REMAccountCapabilities *accountCapabilities
 @property  REMObjectID *parentReminderID
 @property  REMCRMergeableStringDocument *titleDocument
 @property  NSString *titleAsString
 @property  REMCRMergeableStringDocument *notesDocument
 @property  NSString *notesAsString
 @property  REMContactRepresentation *contactHandles
 @property  long long flagged
 @property  NSString *daCalendarItemUniqueIdentifier
 @property  REMUserActivity *userActivity
 @property  NSData *siriFoundInAppsData
 @property  long long siriFoundInAppsUserConfirmation
 @property  NSDate *lastBannerPresentationDate
 @property  NSDate *creationDate
 @property  REMDisplayDate *displayDate
 @property  BOOL isOverdue
 @property  BOOL isRecurrent
 @property  NSString *legacyNotificationIdentifier
 @property  NSURL *icsUrl
 @property  REMReminderAssignmentContextChangeItem *assignmentContext
 @property  REMReminderHashtagContextChangeItem *hashtagContext
 @property  REMSaveRequest *saveRequest
 @property  REMListChangeItem *listChangeItem
 @property  NSAttributedString *title
 @property  NSAttributedString *notes
 @property  BOOL completed
 @property  NSDate *completionDate
 @property  unsigned long priority
 @property  NSDateComponents *startDateComponents
 @property  NSDateComponents *dueDateComponents
 @property  NSArray *alarms
 @property  REMReminderAttachmentContextChangeItem *attachmentContext
 @property  REMReminderSubtaskContextChangeItem *subtaskContext
 @property  REMReminderFlaggedContextChangeItem *flaggedContext
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMReminderChangeItem initialize]
  +[REMReminderChangeItem resolutionTokenKeyForChangedKeyInREMReminderChangeItemOfREMCDReminder:]
  +[REMReminderChangeItem resolutionTokenKeyForChangedKeyInREMReminderChangeItemOfREMCDSavedReminder:]

  // instance methods
  -[REMReminderChangeItem setValue:forUndefinedKey:]
  -[REMReminderChangeItem changedKeys]
  -[REMReminderChangeItem setStorage:]
  -[REMReminderChangeItem valueForUndefinedKey:]
  -[REMReminderChangeItem isUnsupported]
  -[REMReminderChangeItem removeAlarm:]
  -[REMReminderChangeItem setNotes:]
  -[REMReminderChangeItem storage]
  -[REMReminderChangeItem addAlarm:]
  -[REMReminderChangeItem setCompleted:]
  -[REMReminderChangeItem respondsToSelector:]
  -[REMReminderChangeItem .cxx_destruct]
  -[REMReminderChangeItem notes]
  -[REMReminderChangeItem accountCapabilities]
  -[REMReminderChangeItem title]
  -[REMReminderChangeItem setAlarms:]
  -[REMReminderChangeItem forwardingTargetForSelector:]
  -[REMReminderChangeItem setTitle:]
  -[REMReminderChangeItem saveRequest]
  -[REMReminderChangeItem removeFromList]
  -[REMReminderChangeItem titleAsString]
  -[REMReminderChangeItem addAlarmWithTrigger:]
  -[REMReminderChangeItem initWithReminderChangeItem:insertIntoListChangeItem:]
  -[REMReminderChangeItem setNotesAsString:]
  -[REMReminderChangeItem removeAllRecurrenceRules]
  -[REMReminderChangeItem setTitleAsString:]
  -[REMReminderChangeItem notesAsString]
  -[REMReminderChangeItem addRecurrenceRule:]
  -[REMReminderChangeItem removeRecurrenceRule:]
  -[REMReminderChangeItem setDueDateComponents:]
  -[REMReminderChangeItem flaggedContext]
  -[REMReminderChangeItem subtaskContext]
  -[REMReminderChangeItem attachmentContext]
  -[REMReminderChangeItem hashtagContext]
  -[REMReminderChangeItem addRecurrenceRuleWithFrequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:]
  -[REMReminderChangeItem assignmentContext]
  -[REMReminderChangeItem listChangeItem]
  -[REMReminderChangeItem setDueDateComponentsWithAlarmsIfNeeded:]
  -[REMReminderChangeItem removeFromListAllowingUndo]
  -[REMReminderChangeItem isSubtask]
  -[REMReminderChangeItem confirmForSiriFoundInAppsAppendingToList:]
  -[REMReminderChangeItem rejectForSiriFoundInApps]
  -[REMReminderChangeItem updateAccountCapabilities:]
  -[REMReminderChangeItem removeFromParentReminderAllowingUndo]
  -[REMReminderChangeItem removeAllSnoozeAlarms]
  -[REMReminderChangeItem primaryLocaleInferredFromLastUsedKeyboard]
  -[REMReminderChangeItem setPrimaryLocaleInferredFromLastUsedKeyboard:]
  -[REMReminderChangeItem resolutionTokenKeyForChangedKey:]
  -[REMReminderChangeItem shallowCopyWithSaveRequest:]
  -[REMReminderChangeItem initWithSaveRequest:storage:accountCapabilities:changedKeysObserver:]
  -[REMReminderChangeItem initWithSaveRequest:storage:accountCapabilities:observeInitialValues:]
  -[REMReminderChangeItem initWithObjectID:title:insertIntoListChangeItem:]
  -[REMReminderChangeItem initWithObjectID:title:insertIntoParentReminderSubtaskContextChangeItem:]
  -[REMReminderChangeItem initWithReminderChangeItem:insertIntoParentReminderSubtaskContextChangeItem:]
  -[REMReminderChangeItem datesDebugDescriptionInTimeZone:]
  -[REMReminderChangeItem duplicateForRecurrenceUsingReminderID:]
  -[REMReminderChangeItem copyInto:]
  -[REMReminderChangeItem _copyAlarmsInto:]
  -[REMReminderChangeItem dedupedAndFilteredNonSnoozeAlarms:]
  -[REMReminderChangeItem _editDocument:replicaIDSource:newString:]
  -[REMReminderChangeItem setIcsDisplayOrder:]
  -[REMReminderChangeItem addRecurrenceRuleWithFrequency:interval:end:]
  -[REMReminderChangeItem addRecurrenceRuleWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:]
  -[REMReminderChangeItem insertRecurrenceRule:beforeRecurrenceRule:]
  -[REMReminderChangeItem insertRecurrenceRule:afterRecurrenceRule:]
  -[REMReminderChangeItem nextRecurrentAdvanceAmountForDateComponents:afterDate:]
  -[REMReminderChangeItem nextRecurrentDueDateComponentsAfter:]
  -[REMReminderChangeItem addAlarm:updateDisplayDate:]
  -[REMReminderChangeItem setAlarms:updateDisplayDate:]
  -[REMReminderChangeItem removeAlarm:updateDisplayDate:]
  -[REMReminderChangeItem removeAllAlarms]
  -[REMReminderChangeItem updateDisplayDate]
  -[REMReminderChangeItem removeFromParentReminder]
  -[REMReminderChangeItem changedKeysObserver]
  -[REMReminderChangeItem setChangedKeysObserver:]
  -[REMReminderChangeItem snoozeFromNowForTimeInterval:]
  -[REMReminderChangeItem snoozeToDate:]
  -[REMReminderChangeItem snoozeToNextThirds]
  -[REMReminderChangeItem snoozeForever]
  -[REMReminderChangeItem snoozeFromDueDateForFutureIntegralMultipleOfTimeInterval:]
  -[REMReminderChangeItem _timeIntervalToAddSinceStartDate:withNow:step:]
  -[REMReminderChangeItem _createSnoozeAlarmWithDateComponents:]
  -[REMReminderChangeItem _cleanupOriginalAlarmsForSnoozing]


REMReminderSubtaskContextChangeItem : NSObject
 @property  REMReminderChangeItem *reminderChangeItem

  // instance methods
  -[REMReminderSubtaskContextChangeItem .cxx_destruct]
  -[REMReminderSubtaskContextChangeItem addReminderChangeItem:]
  -[REMReminderSubtaskContextChangeItem insertReminderChangeItem:afterReminderChangeItem:]
  -[REMReminderSubtaskContextChangeItem insertReminderChangeItem:beforeReminderChangeItem:]
  -[REMReminderSubtaskContextChangeItem undeleteSubtaskWithID:usingUndo:]
  -[REMReminderSubtaskContextChangeItem initWithReminderChangeItem:]
  -[REMReminderSubtaskContextChangeItem _listChangeItem]
  -[REMReminderSubtaskContextChangeItem reminderChangeItem]
  -[REMReminderSubtaskContextChangeItem setReminderChangeItem:]


REMReminderAttachmentContextChangeItem : NSObject
 @property  REMReminderChangeItem *reminderChangeItem
 @property  NSMutableArray *mutableAttachments
 @property  NSArray *attachments
 @property  NSArray *fileAttachments
 @property  NSArray *imageAttachments
 @property  NSArray *urlAttachments

  // instance methods
  -[REMReminderAttachmentContextChangeItem .cxx_destruct]
  -[REMReminderAttachmentContextChangeItem imageAttachments]
  -[REMReminderAttachmentContextChangeItem attachments]
  -[REMReminderAttachmentContextChangeItem addAttachment:]
  -[REMReminderAttachmentContextChangeItem removeAttachment:]
  -[REMReminderAttachmentContextChangeItem addImageAttachmentWithURL:width:height:error:]
  -[REMReminderAttachmentContextChangeItem removeAllAttachments]
  -[REMReminderAttachmentContextChangeItem urlAttachments]
  -[REMReminderAttachmentContextChangeItem insertAttachment:afterAttachment:]
  -[REMReminderAttachmentContextChangeItem removeURLAttachments]
  -[REMReminderAttachmentContextChangeItem setURLAttachmentWithURL:]
  -[REMReminderAttachmentContextChangeItem addURLAttachmentWithURL:]
  -[REMReminderAttachmentContextChangeItem addImageAttachmentWithData:uti:width:height:]
  -[REMReminderAttachmentContextChangeItem addFileAttachmentWithData:uti:]
  -[REMReminderAttachmentContextChangeItem insertAttachment:beforeAttachment:]
  -[REMReminderAttachmentContextChangeItem fileAttachments]
  -[REMReminderAttachmentContextChangeItem initWithReminderChangeItem:]
  -[REMReminderAttachmentContextChangeItem reminderChangeItem]
  -[REMReminderAttachmentContextChangeItem setReminderChangeItem:]
  -[REMReminderAttachmentContextChangeItem attachmentsOfClass:]
  -[REMReminderAttachmentContextChangeItem addFileAttachmentWithURL:error:]
  -[REMReminderAttachmentContextChangeItem removeAllAttachmentsWithClass:]
  -[REMReminderAttachmentContextChangeItem newObjectIDForURLAttachment]
  -[REMReminderAttachmentContextChangeItem newObjectIDForFileAttachment]
  -[REMReminderAttachmentContextChangeItem newObjectIDForImageAttachment]
  -[REMReminderAttachmentContextChangeItem mutableAttachments]
  -[REMReminderAttachmentContextChangeItem setMutableAttachments:]


REMReminderFlaggedContextChangeItem : NSObject
 @property  REMReminderChangeItem *reminderChangeItem
 @property  long long flagged

  // instance methods
  -[REMReminderFlaggedContextChangeItem .cxx_destruct]
  -[REMReminderFlaggedContextChangeItem flagged]
  -[REMReminderFlaggedContextChangeItem setFlagged:]
  -[REMReminderFlaggedContextChangeItem initWithReminderChangeItem:]
  -[REMReminderFlaggedContextChangeItem reminderChangeItem]
  -[REMReminderFlaggedContextChangeItem setReminderChangeItem:]


REMReminderAssignmentContextChangeItem : NSObject
 @property  REMReminderChangeItem *reminderChangeItem
 @property  NSMutableSet *mutableAssignments
 @property  REMAssignment *currentAssignment
 @property  NSSet *assignments

  // instance methods
  -[REMReminderAssignmentContextChangeItem addAssignment:]
  -[REMReminderAssignmentContextChangeItem .cxx_destruct]
  -[REMReminderAssignmentContextChangeItem assignments]
  -[REMReminderAssignmentContextChangeItem addAssignmentWithAssignee:originator:status:]
  -[REMReminderAssignmentContextChangeItem removeAllAssignments]
  -[REMReminderAssignmentContextChangeItem removeAssignment:]
  -[REMReminderAssignmentContextChangeItem currentAssignment]
  -[REMReminderAssignmentContextChangeItem addAssignmentWithAssigneeID:originatorID:status:]
  -[REMReminderAssignmentContextChangeItem initWithReminderChangeItem:]
  -[REMReminderAssignmentContextChangeItem reminderChangeItem]
  -[REMReminderAssignmentContextChangeItem setReminderChangeItem:]
  -[REMReminderAssignmentContextChangeItem mutableAssignments]
  -[REMReminderAssignmentContextChangeItem setMutableAssignments:]


REMReminderHashtagContextChangeItem : NSObject
 @property  REMReminderChangeItem *reminderChangeItem
 @property  NSMutableSet *mutableHashtags
 @property  NSSet *hashtags

  // instance methods
  -[REMReminderHashtagContextChangeItem .cxx_destruct]
  -[REMReminderHashtagContextChangeItem hashtags]
  -[REMReminderHashtagContextChangeItem addHashtagWithType:name:creationDate:]
  -[REMReminderHashtagContextChangeItem removeHashtag:]
  -[REMReminderHashtagContextChangeItem addHashtagWithType:name:]
  -[REMReminderHashtagContextChangeItem cancelUndeleteHashtagWithID:]
  -[REMReminderHashtagContextChangeItem addHashtag:]
  -[REMReminderHashtagContextChangeItem undeleteHashtagWithID:]
  -[REMReminderHashtagContextChangeItem initWithReminderChangeItem:]
  -[REMReminderHashtagContextChangeItem reminderChangeItem]
  -[REMReminderHashtagContextChangeItem setReminderChangeItem:]
  -[REMReminderHashtagContextChangeItem removeAllHashtags]
  -[REMReminderHashtagContextChangeItem mutableHashtags]
  -[REMReminderHashtagContextChangeItem setMutableHashtags:]


REMTemplateContentAttributes : NSObject <NSCopying, NSSecureCoding>
 @property  long long reminderCount
 @property  BOOL hasDisplayDate
 @property  BOOL hasHashtags
 @property  BOOL hasLocationTriggersOrVehicleEventTriggers
 @property  BOOL hasImageAttachments

  // class methods
  +[REMTemplateContentAttributes supportsSecureCoding]

  // instance methods
  -[REMTemplateContentAttributes encodeWithCoder:]
  -[REMTemplateContentAttributes copyWithZone:]
  -[REMTemplateContentAttributes isEqual:]
  -[REMTemplateContentAttributes initWithCoder:]
  -[REMTemplateContentAttributes hasDisplayDate]
  -[REMTemplateContentAttributes hasHashtags]
  -[REMTemplateContentAttributes hasLocationTriggersOrVehicleEventTriggers]
  -[REMTemplateContentAttributes hasImageAttachments]
  -[REMTemplateContentAttributes reminderCount]
  -[REMTemplateContentAttributes initWithReminderCount:hasDisplayDate:hasHashtags:hasLocationTriggersOrVehicleEventTriggers:hasImageAttachments:]


REMTTHashtag : NSObject
 @property  NSString *objectIdentifier

  // class methods
  +[REMTTHashtag attributeName]
  +[REMTTHashtag attributeFromHashtag:]
  +[REMTTHashtag attributeValue:hasEqualHashtagObjectIdentifierIn:]

  // instance methods
  -[REMTTHashtag objectIdentifier]
  -[REMTTHashtag .cxx_destruct]
  -[REMTTHashtag initWithObjectIdentifier:]


REMStore : NSObject <REMChangeTrackingProvider, REMClientConnectionsInteractable>
 @property  REMStoreContainerToken *storeContainerToken
 @property  _REMInProgressSaveRequestsContainer *l_inProgressSaveRequestsContainer
 @property  {os_unfair_lock_s=I} lock
 @property  <REMDaemonController> *daemonController
 @property  unsigned long mode
 @property  BOOL assertOnMainThreadFetches
 @property  REMStore *nonUserInteractiveStore

  // class methods
  +[REMStore notificationsEnabled]
  +[REMStore dataaccessDaemonStopSyncingReminders]
  +[REMStore _shouldNotifyReminddOfInteractionWithPeople]
  +[REMStore initialize]
  +[REMStore storeDidChangeNotificationName]
  +[REMStore createIsolatedStoreContainerWithError:]
  +[REMStore destroyIsolatedStoreContainerWithToken:error:]
  +[REMStore siriShouldRouteIntentsToNewRemindersApp]
  +[REMStore notifyOfInteractionWithPeople:]
  +[REMStore isEventKitSyncEnabledForReminderKit]

  // instance methods
  -[REMStore fetchCustomSmartListsWithError:]
  -[REMStore refreshAccount:]
  -[REMStore _triggerSyncWithReason:forcingCloudKitReload:discretionary:bypassThrottler:completion:]
  -[REMStore storeGeneration]
  -[REMStore setAssertOnMainThreadFetches:]
  -[REMStore fetchRemindersForEventKitBridgingWithListIDs:error:]
  -[REMStore fetchReminderIncludingConcealedWithObjectID:error:]
  -[REMStore fetchSiriFoundInAppsListWithError:]
  -[REMStore resultFromPerformingInvocation:error:]
  -[REMStore debugFetchPhantomListsWithError:]
  -[REMStore fetchListIncludingMarkedForDeleteWithObjectID:error:]
  -[REMStore setNonUserInteractiveStore:]
  -[REMStore fetchReminderIncludingMarkedForDeleteWithObjectID:error:]
  -[REMStore fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:]
  -[REMStore test_refreshHashtagLabelsImmediately]
  -[REMStore fetchAccountsWithObjectIDs:error:]
  -[REMStore initWithDaemonController:storeContainerToken:]
  -[REMStore _xpcSyncStorePerformerWithReason:errorHandler:]
  -[REMStore fetchRemindersWithObjectIDs:error:]
  -[REMStore fetchActiveCloudKitAccountObjectIDsWithFetchOption:error:]
  -[REMStore fetchListsIncludingSpecialContainersInAccount:error:]
  -[REMStore fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:]
  -[REMStore fetchListsWithObjectIDs:error:]
  -[REMStore _addChangeItemChangedKeys:objectID:toChangedKeysMap:]
  -[REMStore optimisticallyMaterializeReminderChangeItem:]
  -[REMStore containsCustomSmartListForTipKitWithError:]
  -[REMStore setDaemonController:]
  -[REMStore replicaManagerProviderForCalDAVSync]
  -[REMStore _saveAccountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:author:replicaManagerProvider:synchronously:syncToCloudKit:performer:completion:]
  -[REMStore fetchCustomSmartListWithObjectID:error:]
  -[REMStore nonUserInteractiveStore]
  -[REMStore _withInProgressSaveRequestContainer:]
  -[REMStore fetchResultByExecutingFetchRequest:error:]
  -[REMStore fetchReminderWithObjectID:error:]
  -[REMStore _enumerateAllListsIncludingGroups:withBlock:]
  -[REMStore fetchDefaultAccountWithError:]
  -[REMStore containsHashtagsForTipKitWithError:]
  -[REMStore fetchRemindersIncludingUnsupportedWithObjectIDs:error:]
  -[REMStore updateAccountWithAccountID:restartDA:completion:]
  -[REMStore updateAccountsAndSync:completion:]
  -[REMStore mode]
  -[REMStore anchoredBubbleCloudOverridesWithCompletion:]
  -[REMStore fetchAssignmentsWithObjectIDs:includeConcealedObjects:error:]
  -[REMStore executeFetchRequest:error:]
  -[REMStore test_immediatelyRevokePublicLinkOfTemplateWithTemplateObjectID:error:]
  -[REMStore .cxx_destruct]
  -[REMStore fetchReminderWithExternalIdentifier:inList:error:]
  -[REMStore requestToMergeLocalDataIntoSyncDataWithAccountIdentifier:completion:]
  -[REMStore refreshList:]
  -[REMStore updateAccountWithAccountID:completion:]
  -[REMStore fetchListIncludingSpecialContainerWithObjectID:error:]
  -[REMStore acceptShareWithMetadata:queue:completion:]
  -[REMStore test_handleIncompleteTemplateOperationQueueItemsImmediately]
  -[REMStore fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:]
  -[REMStore fetchRemindersWithParentReminderIDs:error:]
  -[REMStore fetchAccountsForDumpingWithError:]
  -[REMStore requestToDeleteSyncDataWithAccountIdentifier:completion:]
  -[REMStore fetchReplicaManagerForAccountID:error:]
  -[REMStore setMode:]
  -[REMStore initWithStoreContainerToken:]
  -[REMStore provideChangeTrackingForAccountID:clientName:transactionAuthorKeysToExclude:]
  -[REMStore completedRemindersCountForTipKitWithError:]
  -[REMStore provideChangeTrackingForAccountID:clientName:]
  -[REMStore _isUserInteractiveStore]
  -[REMStore initWithDaemonController:]
  -[REMStore l_inProgressSaveRequestsContainer]
  -[REMStore fetchAccountWithExternalIdentifier:error:]
  -[REMStore hasActiveCloudKitAccountForTipKitWithError:]
  -[REMStore fetchIncompleteRemindersForEventKitBridgingWithDueDateFrom:to:withListIDs:error:]
  -[REMStore triggerThrottledSyncWithReason:discretionary:completion:]
  -[REMStore fetchTemplateWithObjectID:error:]
  -[REMStore rejectCalDAVSharedList:queue:completion:]
  -[REMStore fetchListRepresentationOfTemplateWithObjectID:error:]
  -[REMStore storeContainerToken]
  -[REMStore daemonController]
  -[REMStore _incrementStoreGeneration]
  -[REMStore requestToDeleteLocalDataWithCompletion:]
  -[REMStore fetchAllRemindersWithExternalIdentifier:error:]
  -[REMStore fetchAllListsWithExternalIdentifier:error:]
  -[REMStore containsListWithCustomBadgeForTipKitWithError:]
  -[REMStore compressedDistributedEvaluationDataWithOptions:error:]
  -[REMStore enumerateAllListsWithBlock:]
  -[REMStore fetchEligibleDefaultListsWithError:]
  -[REMStore fetchAccountsWithExternalIdentifiers:error:]
  -[REMStore fetchShareForListWithID:error:]
  -[REMStore fetchDefaultListWithError:]
  -[REMStore fetchListWithObjectID:error:]
  -[REMStore resultFromPerformingSwiftInvocation:parametersData:storages:error:]
  -[REMStore test_immediatelyCreateOrUpdatePublicLinkOfTemplateWithTemplateObjectID:configuration:error:]
  -[REMStore invalidate]
  -[REMStore fetchListsForEventKitBridgingWithError:]
  -[REMStore triggerSyncForDataAccessAccountsWithAccountIDs:]
  -[REMStore fetchReplicaManagersForAccountID:bundleID:error:]
  -[REMStore stopShare:accountID:queue:completion:]
  -[REMStore refreshReminder:]
  -[REMStore provideAnonymousChangeTrackingWithTransactionAuthorKeysToExclude:]
  -[REMStore fetchDefaultListRequiringCloudKitWithError:]
  -[REMStore fetchRemindersWithExternalIdentifiers:inList:error:]
  -[REMStore _respondToCalDAVSharedList:withResponse:queue:completion:]
  -[REMStore fetchCompletedRemindersForEventKitBridgingWithCompletionDateFrom:to:withListIDs:error:]
  -[REMStore countForFetchRequest:error:]
  -[REMStore addCKShareObserverIfNeededForAccountID:queue:completion:]
  -[REMStore test_setupForManualHashtagLabelRefreshing]
  -[REMStore updateShare:accountID:queue:completion:]
  -[REMStore assertOnMainThreadFetches]
  -[REMStore enumerateAllGroupsAndListsWithBlock:]
  -[REMStore MCIsManagedAccountWithObjectID:error:]
  -[REMStore saveSaveRequest:accountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:author:replicaManagerProvider:queue:completion:]
  -[REMStore fetchRemindersMatchingTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:error:]
  -[REMStore fetchAccountWithObjectID:error:]
  -[REMStore resultsIndexedByObjectIDFromExecutingFetchRequest:error:]
  -[REMStore acceptCalDAVSharedList:queue:completion:]
  -[REMStore lock]
  -[REMStore nukeDatabase]
  -[REMStore fetchAccountsIncludingInactive:error:]
  -[REMStore fetchPrimaryActiveCloudKitAccountREMObjectIDWithError:]
  -[REMStore fetchPrimaryActiveCloudKitAccountWithError:]
  -[REMStore removeOrphanedAccountsWithCompletion:]
  -[REMStore enumerateAllRemindersWithBlock:]
  -[REMStore notifyOfInteractionWithPeople:force:completion:]
  -[REMStore fetchListIncludingConcealedWithObjectID:error:]
  -[REMStore fetchAccountsWithError:]
  -[REMStore createShareForListWithID:appIconData:error:]
  -[REMStore everConnectedToCar]
  -[REMStore initUserInteractive:]
  -[REMStore init]
  -[REMStore fetchDefaultListRequiringCloudKitAccountWithAccountID:error:]
  -[REMStore requestToUpdateClientConnectionsAsynchronously:shouldKeepAlive:completion:]
  -[REMStore fetchHashtagsWithObjectIDs:includeConcealedObjects:error:]
  -[REMStore repairPhantomObjectsWithObjectIDs:error:]
  -[REMStore saveSaveRequest:accountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:author:replicaManagerProvider:error:]


_REMDACalDAVSyncReplicaManagerProvider : NSObject <REMReplicaManagerProviding>
 @property  REMStore *store
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_REMDACalDAVSyncReplicaManagerProvider unsavedReplicaManagersForAccountIDs:]
  +[_REMDACalDAVSyncReplicaManagerProvider replicaManagerForAccountID:withStore:]

  // instance methods
  -[_REMDACalDAVSyncReplicaManagerProvider store]
  -[_REMDACalDAVSyncReplicaManagerProvider initWithStore:]
  -[_REMDACalDAVSyncReplicaManagerProvider setStore:]
  -[_REMDACalDAVSyncReplicaManagerProvider unsavedReplicaManagersForAccountIDs:]
  -[_REMDACalDAVSyncReplicaManagerProvider .cxx_destruct]
  -[_REMDACalDAVSyncReplicaManagerProvider replicaManagerForAccountID:]


REMStoreContainerToken : NSObject <NSSecureCoding>
 @property  NSUUID *identifier

  // class methods
  +[REMStoreContainerToken supportsSecureCoding]

  // instance methods
  -[REMStoreContainerToken identifier]
  -[REMStoreContainerToken encodeWithCoder:]
  -[REMStoreContainerToken .cxx_destruct]
  -[REMStoreContainerToken initWithIdentifier:]
  -[REMStoreContainerToken initWithCoder:]


REMStoreSwiftInvocation : NSObject <NSSecureCoding>
 @property  NSString *name
 @property  REMFetchResultToken *fetchResultTokenToDiffAgainst

  // class methods
  +[REMStoreSwiftInvocation supportsSecureCoding]

  // instance methods
  -[REMStoreSwiftInvocation encodeWithCoder:]
  -[REMStoreSwiftInvocation .cxx_destruct]
  -[REMStoreSwiftInvocation initWithFetchResultTokenToDiffAgainst:]
  -[REMStoreSwiftInvocation name]
  -[REMStoreSwiftInvocation init]
  -[REMStoreSwiftInvocation initWithCoder:]
  -[REMStoreSwiftInvocation fetchResultTokenToDiffAgainst]


REMStoreSwiftInvocationResult : NSObject <NSSecureCoding>
 @property  NSData *resultData
 @property  NSDictionary *resultStorages
 @property  REMFetchResultToken *latestFetchResultToken

  // class methods
  +[REMStoreSwiftInvocationResult supportsSecureCoding]

  // instance methods
  -[REMStoreSwiftInvocationResult encodeWithCoder:]
  -[REMStoreSwiftInvocationResult resultData]
  -[REMStoreSwiftInvocationResult .cxx_destruct]
  -[REMStoreSwiftInvocationResult latestFetchResultToken]
  -[REMStoreSwiftInvocationResult initWithResultData:storages:latestFetchResultToken:]
  -[REMStoreSwiftInvocationResult resultStorages]
  -[REMStoreSwiftInvocationResult initWithCoder:]


REMAlarmTrigger : NSObject <REMObjectIDProviding, NSSecureCoding>
 @property  REMObjectID *objectID
 @property  BOOL isTemporal
 @property  REMObjectID *remObjectID

  // class methods
  +[REMAlarmTrigger supportsSecureCoding]
  +[REMAlarmTrigger newObjectID]
  +[REMAlarmTrigger cdEntityName]
  +[REMAlarmTrigger objectIDWithUUID:]

  // instance methods
  -[REMAlarmTrigger objectID]
  -[REMAlarmTrigger _deepCopy]
  -[REMAlarmTrigger remObjectID]
  -[REMAlarmTrigger setObjectID:]
  -[REMAlarmTrigger encodeWithCoder:]
  -[REMAlarmTrigger .cxx_destruct]
  -[REMAlarmTrigger copyWithZone:]
  -[REMAlarmTrigger init]
  -[REMAlarmTrigger initWithCoder:]
  -[REMAlarmTrigger initWithObjectID:]
  -[REMAlarmTrigger isContentEqual:]
  -[REMAlarmTrigger initWithAlarmTrigger:objectID:]
  -[REMAlarmTrigger isTemporal]


REMAlarmTimeIntervalTrigger : REMAlarmTrigger <NSSecureCoding>
 @property  double timeInterval

  // class methods
  +[REMAlarmTimeIntervalTrigger supportsSecureCoding]
  +[REMAlarmTimeIntervalTrigger cdEntityName]

  // instance methods
  -[REMAlarmTimeIntervalTrigger _deepCopy]
  -[REMAlarmTimeIntervalTrigger timeInterval]
  -[REMAlarmTimeIntervalTrigger encodeWithCoder:]
  -[REMAlarmTimeIntervalTrigger setTimeInterval:]
  -[REMAlarmTimeIntervalTrigger initWithTimeInterval:]
  -[REMAlarmTimeIntervalTrigger isEqual:]
  -[REMAlarmTimeIntervalTrigger initWithCoder:]
  -[REMAlarmTimeIntervalTrigger isTemporal]
  -[REMAlarmTimeIntervalTrigger initWithObjectID:timeInterval:]


REMAlarmDateTrigger : REMAlarmTrigger <NSSecureCoding>
 @property  NSDateComponents *dateComponents

  // class methods
  +[REMAlarmDateTrigger supportsSecureCoding]
  +[REMAlarmDateTrigger cdEntityName]

  // instance methods
  -[REMAlarmDateTrigger _deepCopy]
  -[REMAlarmDateTrigger dateComponents]
  -[REMAlarmDateTrigger encodeWithCoder:]
  -[REMAlarmDateTrigger .cxx_destruct]
  -[REMAlarmDateTrigger initWithDateComponents:]
  -[REMAlarmDateTrigger isEqual:]
  -[REMAlarmDateTrigger initWithCoder:]
  -[REMAlarmDateTrigger setDateComponents:]
  -[REMAlarmDateTrigger isTemporal]
  -[REMAlarmDateTrigger initWithObjectID:dateComponents:]


REMAlarmLocationTrigger : REMAlarmTrigger <NSSecureCoding>
 @property  REMStructuredLocation *structuredLocation
 @property  long long proximity

  // class methods
  +[REMAlarmLocationTrigger supportsSecureCoding]
  +[REMAlarmLocationTrigger cdEntityName]

  // instance methods
  -[REMAlarmLocationTrigger _deepCopy]
  -[REMAlarmLocationTrigger encodeWithCoder:]
  -[REMAlarmLocationTrigger setStructuredLocation:]
  -[REMAlarmLocationTrigger .cxx_destruct]
  -[REMAlarmLocationTrigger proximity]
  -[REMAlarmLocationTrigger structuredLocation]
  -[REMAlarmLocationTrigger setProximity:]
  -[REMAlarmLocationTrigger isEqual:]
  -[REMAlarmLocationTrigger initWithCoder:]
  -[REMAlarmLocationTrigger initWithStructuredLocation:proximity:]
  -[REMAlarmLocationTrigger isContentEqual:]
  -[REMAlarmLocationTrigger isTemporal]
  -[REMAlarmLocationTrigger initWithObjectID:structuredLocation:proximity:]


REMAlarmVehicleTrigger : REMAlarmTrigger
 @property  long long event

  // class methods
  +[REMAlarmVehicleTrigger supportsSecureCoding]
  +[REMAlarmVehicleTrigger cdEntityName]

  // instance methods
  -[REMAlarmVehicleTrigger _deepCopy]
  -[REMAlarmVehicleTrigger initWithEvent:]
  -[REMAlarmVehicleTrigger setEvent:]
  -[REMAlarmVehicleTrigger encodeWithCoder:]
  -[REMAlarmVehicleTrigger event]
  -[REMAlarmVehicleTrigger isEqual:]
  -[REMAlarmVehicleTrigger initWithCoder:]
  -[REMAlarmVehicleTrigger isTemporal]
  -[REMAlarmVehicleTrigger initWithObjectID:event:]


REMAlarmContactTrigger : REMAlarmTrigger <NSSecureCoding>
 @property  REMContactRepresentation *contactRepresentation

  // class methods
  +[REMAlarmContactTrigger supportsSecureCoding]
  +[REMAlarmContactTrigger cdEntityName]

  // instance methods
  -[REMAlarmContactTrigger _deepCopy]
  -[REMAlarmContactTrigger encodeWithCoder:]
  -[REMAlarmContactTrigger .cxx_destruct]
  -[REMAlarmContactTrigger isEqual:]
  -[REMAlarmContactTrigger initWithCoder:]
  -[REMAlarmContactTrigger isTemporal]
  -[REMAlarmContactTrigger initWithObjectID:contactRepresentation:]
  -[REMAlarmContactTrigger initWithContactRepresentation:]
  -[REMAlarmContactTrigger contactRepresentation]


REMCRMergeableOrderedSet : NSObject <NSCopying, NSSecureCoding>
 @property  REMReplicaIDSource *replicaIDSource
 @property  CRDocument *document
 @property  NSMutableArray *undos
 @property  NSOrderedSet *orderedSet
 @property  unsigned long count

  // class methods
  +[REMCRMergeableOrderedSet supportsSecureCoding]

  // instance methods
  -[REMCRMergeableOrderedSet serializedData]
  -[REMCRMergeableOrderedSet document]
  -[REMCRMergeableOrderedSet encodeWithCoder:]
  -[REMCRMergeableOrderedSet .cxx_destruct]
  -[REMCRMergeableOrderedSet count]
  -[REMCRMergeableOrderedSet copyWithZone:]
  -[REMCRMergeableOrderedSet objectAtIndex:]
  -[REMCRMergeableOrderedSet setDocument:]
  -[REMCRMergeableOrderedSet isEqual:]
  -[REMCRMergeableOrderedSet initWithCoder:]
  -[REMCRMergeableOrderedSet enumerateObjectsUsingBlock:]
  -[REMCRMergeableOrderedSet orderedSet]
  -[REMCRMergeableOrderedSet initWithReplicaIDSource:document:]
  -[REMCRMergeableOrderedSet initWithReplicaIDSource:document:undos:]
  -[REMCRMergeableOrderedSet initWithReplicaIDSource:orderedSet:]
  -[REMCRMergeableOrderedSet initWithReplicaIDSource:serializedData:error:]
  -[REMCRMergeableOrderedSet indexOfEqualObject:]
  -[REMCRMergeableOrderedSet mutableOrderedSet]
  -[REMCRMergeableOrderedSet mergedOrderedSetWithOrderedSet:error:]
  -[REMCRMergeableOrderedSet replicaIDSource]
  -[REMCRMergeableOrderedSet setReplicaIDSource:]
  -[REMCRMergeableOrderedSet undos]


REMMutableCRMergeableOrderedSet : NSObject <REMReplicaIDHelperOwner, CRUndoDelegate>
 @property  REMReplicaIDSource *replicaIDSource
 @property  CRDocument *document
 @property  REMReplicaIDHelper *replicaIDHelper
 @property  NSMutableArray *undos
 @property  REMMutableCRUndo *currentUndo
 @property  <REMReplicaManagerProviding> *replicaManagerProvider
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[REMMutableCRMergeableOrderedSet document]
  -[REMMutableCRMergeableOrderedSet undo:]
  -[REMMutableCRMergeableOrderedSet .cxx_destruct]
  -[REMMutableCRMergeableOrderedSet addObject:]
  -[REMMutableCRMergeableOrderedSet undo]
  -[REMMutableCRMergeableOrderedSet removeObjectAtIndex:]
  -[REMMutableCRMergeableOrderedSet insertObject:atIndex:]
  -[REMMutableCRMergeableOrderedSet setReplicaManagerProvider:]
  -[REMMutableCRMergeableOrderedSet setDocument:]
  -[REMMutableCRMergeableOrderedSet replicaManagerProvider]
  -[REMMutableCRMergeableOrderedSet wantsUndoCommands]
  -[REMMutableCRMergeableOrderedSet replicaIDSource]
  -[REMMutableCRMergeableOrderedSet setReplicaIDSource:]
  -[REMMutableCRMergeableOrderedSet undos]
  -[REMMutableCRMergeableOrderedSet replicaIDHelperDidAcquireReplicaUUID:]
  -[REMMutableCRMergeableOrderedSet addUndoCommandsForObject:block:]
  -[REMMutableCRMergeableOrderedSet initWithReplicaIDSource:immutableDocumentToEdit:undos:]
  -[REMMutableCRMergeableOrderedSet immutableOrderedSet]
  -[REMMutableCRMergeableOrderedSet documentToEdit]
  -[REMMutableCRMergeableOrderedSet moveObjectFromIndex:toIndex:]
  -[REMMutableCRMergeableOrderedSet replicaIDHelper]
  -[REMMutableCRMergeableOrderedSet setReplicaIDHelper:]
  -[REMMutableCRMergeableOrderedSet currentUndo]
  -[REMMutableCRMergeableOrderedSet setCurrentUndo:]


REMAccountStorage : NSObject <NSCopying, NSSecureCoding, REMObjectIDProviding, REMExternalSyncMetadataWritableProviding, REMObjectStorageSupportedVersionProviding>
 @property  REMObjectID *objectID
 @property  long long type
 @property  NSString *name
 @property  NSString *displayName
 @property  REMCRMergeableOrderedSet *listIDsMergeableOrdering
 @property  NSData *listIDsMergeableOrderingData
 @property  REMManualOrdering *pinnedListsManualOrdering
 @property  REMManualOrdering *templatesManualOrdering
 @property  BOOL markedForRemoval
 @property  NSSet *listIDsToUndelete
 @property  NSSet *smartListIDsToUndelete
 @property  BOOL listsDADisplayOrderChanged
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  NSString *personID
 @property  NSData *personIDSalt
 @property  BOOL inactive
 @property  BOOL didChooseToMigrate
 @property  BOOL didChooseToMigrateLocally
 @property  BOOL didFinishMigration
 @property  long long persistenceCloudSchemaVersion
 @property  BOOL debugSyncDisabled
 @property  NSString *daConstraintsDescriptionPath
 @property  BOOL daAllowsCalendarAddDeleteModify
 @property  BOOL daSupportsSharedCalendars
 @property  BOOL daWasMigrated
 @property  REMObjectID *remObjectID
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMAccountStorage supportsSecureCoding]
  +[REMAccountStorage newObjectID]
  +[REMAccountStorage cdEntityName]
  +[REMAccountStorage objectIDWithUUID:]
  +[REMAccountStorage listIDsMergeableOrderingReplicaIDSourceWithAccountID:]

  // instance methods
  -[REMAccountStorage setPersonID:]
  -[REMAccountStorage setMarkedForRemoval:]
  -[REMAccountStorage cdKeyToStorageKeyMap]
  -[REMAccountStorage personID]
  -[REMAccountStorage objectID]
  -[REMAccountStorage optionalObjectID]
  -[REMAccountStorage effectiveMinimumSupportedVersion]
  -[REMAccountStorage accountTypeHost]
  -[REMAccountStorage remObjectID]
  -[REMAccountStorage setResolutionTokenMapData:]
  -[REMAccountStorage minimumSupportedVersion]
  -[REMAccountStorage markedForRemoval]
  -[REMAccountStorage templatesManualOrdering]
  -[REMAccountStorage setStoreGenerationIfNeeded:]
  -[REMAccountStorage isUnsupported]
  -[REMAccountStorage storeGeneration]
  -[REMAccountStorage setResolutionTokenMap:]
  -[REMAccountStorage didChooseToMigrateLocally]
  -[REMAccountStorage resolutionTokenMap]
  -[REMAccountStorage setObjectID:]
  -[REMAccountStorage setMinimumSupportedVersion:]
  -[REMAccountStorage setEffectiveMinimumSupportedVersion:]
  -[REMAccountStorage resolutionTokenMapData]
  -[REMAccountStorage setInactive:]
  -[REMAccountStorage daSupportsSharedCalendars]
  -[REMAccountStorage setDebugSyncDisabled:]
  -[REMAccountStorage setDidFinishMigration:]
  -[REMAccountStorage setExternalModificationTag:]
  -[REMAccountStorage setListsDADisplayOrderChanged:]
  -[REMAccountStorage persistenceCloudSchemaVersion]
  -[REMAccountStorage setDidChooseToMigrateLocally:]
  -[REMAccountStorage daSyncToken]
  -[REMAccountStorage setSmartListIDsToUndelete:]
  -[REMAccountStorage didFinishMigration]
  -[REMAccountStorage encodeWithCoder:]
  -[REMAccountStorage type]
  -[REMAccountStorage initWithObjectID:type:name:listIDsMergeableOrdering:]
  -[REMAccountStorage setDaWasMigrated:]
  -[REMAccountStorage daPushKey]
  -[REMAccountStorage externalIdentifier]
  -[REMAccountStorage daWasMigrated]
  -[REMAccountStorage serializedListIDsMergeableOrdering]
  -[REMAccountStorage .cxx_destruct]
  -[REMAccountStorage setListIDsToUndelete:]
  -[REMAccountStorage setDaSyncToken:]
  -[REMAccountStorage setDidChooseToMigrate:]
  -[REMAccountStorage setDaPushKey:]
  -[REMAccountStorage initWithObjectID:type:name:]
  -[REMAccountStorage setType:]
  -[REMAccountStorage _isAddingExtraPrimaryCKAccountForTesting]
  -[REMAccountStorage setTemplatesManualOrdering:]
  -[REMAccountStorage setListIDsMergeableOrdering:]
  -[REMAccountStorage setPinnedListsManualOrdering:]
  -[REMAccountStorage debugSyncDisabled]
  -[REMAccountStorage smartListIDsToUndelete]
  -[REMAccountStorage personIDSalt]
  -[REMAccountStorage daConstraintsDescriptionPath]
  -[REMAccountStorage externalModificationTag]
  -[REMAccountStorage hasDeserializedListIDsMergeableOrdering]
  -[REMAccountStorage setName:]
  -[REMAccountStorage copyWithZone:]
  -[REMAccountStorage setDaSupportsSharedCalendars:]
  -[REMAccountStorage _setIsAddingExtraPrimaryCKAccountForTesting:]
  -[REMAccountStorage listIDsToUndelete]
  -[REMAccountStorage daAllowsCalendarAddDeleteModify]
  -[REMAccountStorage listIDsMergeableOrdering]
  -[REMAccountStorage setListIDsMergeableOrderingData:]
  -[REMAccountStorage setPersonIDSalt:]
  -[REMAccountStorage name]
  -[REMAccountStorage setDaAllowsCalendarAddDeleteModify:]
  -[REMAccountStorage didChooseToMigrate]
  -[REMAccountStorage setDaConstraintsDescriptionPath:]
  -[REMAccountStorage listIDsMergeableOrderingReplicaIDSource]
  -[REMAccountStorage displayName]
  -[REMAccountStorage listIDsMergeableOrderingData]
  -[REMAccountStorage initWithObjectID:type:name:nullableListIDsMergeableOrdering:]
  -[REMAccountStorage inactive]
  -[REMAccountStorage setPersistenceCloudSchemaVersion:]
  -[REMAccountStorage listsDADisplayOrderChanged]
  -[REMAccountStorage pinnedListsManualOrdering]
  -[REMAccountStorage isEqual:]
  -[REMAccountStorage initWithCoder:]
  -[REMAccountStorage setExternalIdentifier:]


REMRecurrenceRuleFormatter : NSObject
  // class methods
  +[REMRecurrenceRuleFormatter _andDaysOfWeekString:]
  +[REMRecurrenceRuleFormatter _numberedWeekDayString:]
  +[REMRecurrenceRuleFormatter _daysOfWeek]
  +[REMRecurrenceRuleFormatter _dayOfMonthAsString:]
  +[REMRecurrenceRuleFormatter _weekDayPositionAsString:]
  +[REMRecurrenceRuleFormatter _orDaysOfWeekString:]
  +[REMRecurrenceRuleFormatter _customDayCombinationDescription:]
  +[REMRecurrenceRuleFormatter daysTypeForDayArray:]
  +[REMRecurrenceRuleFormatter naturalLanguageDescriptionForRecurrenceRule:withStartDate:]
  +[REMRecurrenceRuleFormatter repeatTypeForRecurrenceRules:recurrenceDate:recurrenceTimeZone:getRepeatEnd:]
  +[REMRecurrenceRuleFormatter localizedDescriptionForRepeatType:]
  +[REMRecurrenceRuleFormatter shortNaturalLanguageDescriptionForRecurrenceRule:date:timeZone:lowercase:]
  +[REMRecurrenceRuleFormatter naturalLanguageDescriptionForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:withStartDate:]
  +[REMRecurrenceRuleFormatter shortNaturalLanguageDescriptionForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:setPositions:date:timeZone:lowercase:]
  +[REMRecurrenceRuleFormatter repeatTypeForFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:recurrenceDate:recurrenceTimeZone:getRepeatEnd:]
  +[REMRecurrenceRuleFormatter _readableWeekDays]
  +[REMRecurrenceRuleFormatter _readableMonths]
  +[REMRecurrenceRuleFormatter _stringForDayOfWeek:]
  +[REMRecurrenceRuleFormatter _stringForMonthNumber:]
  +[REMRecurrenceRuleFormatter _byDayOfWeekOrdinalStrings]
  +[REMRecurrenceRuleFormatter _customByDayItemFormatLocalizedString]
  +[REMRecurrenceRuleFormatter _stringForByDayOfWeek:setPositions:]
  +[REMRecurrenceRuleFormatter _localizedOfMonthStringForMonth:]


REMAuxiliaryChangeInfoType : NSObject <REMAuxiliaryChangeInfoObject>
 @property  REMObjectID *remObjectID
 @property  NSDictionary *storage
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[REMAuxiliaryChangeInfoType resolveInstanceMethod:]
  +[REMAuxiliaryChangeInfoType newObjectID]
  +[REMAuxiliaryChangeInfoType cdEntityName]
  +[REMAuxiliaryChangeInfoType objectIDWithUUID:]

  // instance methods
  -[REMAuxiliaryChangeInfoType setValue:forUndefinedKey:]
  -[REMAuxiliaryChangeInfoType setStorage:]
  -[REMAuxiliaryChangeInfoType valueForUndefinedKey:]
  -[REMAuxiliaryChangeInfoType remObjectID]
  -[REMAuxiliaryChangeInfoType storage]
  -[REMAuxiliaryChangeInfoType .cxx_destruct]
  -[REMAuxiliaryChangeInfoType initWithREMObjectID:]
  -[REMAuxiliaryChangeInfoType setRemObjectID:]


REMAuxiliaryChangeInfoFetchResult : NSObject
 @property  Class typedKlass
 @property  NSMutableDictionary *changeObjectForAuxiliaryChangeInfoMap
 @property  NSArray *auxiliaryChangeInfos

  // class methods
  +[REMAuxiliaryChangeInfoFetchResult auxiliaryChangeInfoFetchResultOfType:]

  // instance methods
  -[REMAuxiliaryChangeInfoFetchResult .cxx_destruct]
  -[REMAuxiliaryChangeInfoFetchResult initWithAuxiliaryChangeInfoType:]
  -[REMAuxiliaryChangeInfoFetchResult changeObjectForAuxiliaryChangeInfo:]
  -[REMAuxiliaryChangeInfoFetchResult auxiliaryChangeInfos]
  -[REMAuxiliaryChangeInfoFetchResult typedKlass]
  -[REMAuxiliaryChangeInfoFetchResult setTypedKlass:]
  -[REMAuxiliaryChangeInfoFetchResult changeObjectForAuxiliaryChangeInfoMap]
  -[REMAuxiliaryChangeInfoFetchResult setChangeObjectForAuxiliaryChangeInfoMap:]
  -[REMAuxiliaryChangeInfoFetchResult auxiliaryChangeInfoFromData:withObjectID:fromChangeObject:error:]
  -[REMAuxiliaryChangeInfoFetchResult setAuxiliaryChangeInfos:]


REMListFetchExecutor : _REMFetchExecutor
 @property  REMListPredicateDescriptor *predicateDescriptor
 @property  NSArray *sortDescriptors
 @property  unsigned long options

  // class methods
  +[REMListFetchExecutor supportsSecureCoding]

  // instance methods
  -[REMListFetchExecutor setSortDescriptors:]
  -[REMListFetchExecutor sortDescriptors]
  -[REMListFetchExecutor encodeWithCoder:]
  -[REMListFetchExecutor .cxx_destruct]
  -[REMListFetchExecutor options]
  -[REMListFetchExecutor initWithCoder:]
  -[REMListFetchExecutor initWithPredicateDescriptor:sortDescriptors:options:]
  -[REMListFetchExecutor resultsFromFetchResult:inStore:error:]
  -[REMListFetchExecutor resultsFromFetchResult:inAccount:error:]
  -[REMListFetchExecutor resultsFromFetchResult:inParentList:error:]
  -[REMListFetchExecutor predicateDescriptor]
  -[REMListFetchExecutor setPredicateDescriptor:]


REMEnableObjectiveCpp : NSObject

REMSaveRequestTrackedValueContainer : NSObject
 @property  <REMSaveRequestTrackedValue> *weakValue
 @property  <REMSaveRequestTrackedValue> *template

  // instance methods
  -[REMSaveRequestTrackedValueContainer initWithValue:]
  -[REMSaveRequestTrackedValueContainer .cxx_destruct]
  -[REMSaveRequestTrackedValueContainer template]
  -[REMSaveRequestTrackedValueContainer setTemplate:]
  -[REMSaveRequestTrackedValueContainer valueForSaveRequest:]
  -[REMSaveRequestTrackedValueContainer valueWithoutPerformingCopy]
  -[REMSaveRequestTrackedValueContainer weakValue]
  -[REMSaveRequestTrackedValueContainer setWeakValue:]


REMChangeTrackingState : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *lastConsumedDate
 @property  REMChangeToken *lastConsumedChangeToken

  // class methods
  +[REMChangeTrackingState supportsSecureCoding]

  // instance methods
  -[REMChangeTrackingState encodeWithCoder:]
  -[REMChangeTrackingState lastConsumedDate]
  -[REMChangeTrackingState lastConsumedChangeToken]
  -[REMChangeTrackingState .cxx_destruct]
  -[REMChangeTrackingState setLastConsumedDate:]
  -[REMChangeTrackingState copyWithZone:]
  -[REMChangeTrackingState setLastConsumedChangeToken:]
  -[REMChangeTrackingState isEqual:]
  -[REMChangeTrackingState initWithCoder:]


REMChangedKeysObserver : NSObject
 @property  NSArray *keysToObserve
 @property  NSMutableSet *mutableChangedKeys
 @property  NSObject *target
 @property  NSSet *changedKeys

  // instance methods
  -[REMChangedKeysObserver changedKeys]
  -[REMChangedKeysObserver target]
  -[REMChangedKeysObserver dealloc]
  -[REMChangedKeysObserver .cxx_destruct]
  -[REMChangedKeysObserver observeValueForKeyPath:ofObject:change:context:]
  -[REMChangedKeysObserver initWithTarget:keysToObserve:includeInitial:]
  -[REMChangedKeysObserver keyDidChange:]
  -[REMChangedKeysObserver keysToObserve]
  -[REMChangedKeysObserver setKeysToObserve:]
  -[REMChangedKeysObserver mutableChangedKeys]
  -[REMChangedKeysObserver setMutableChangedKeys:]


REMReplicaIDSource : NSObject <NSSecureCoding, NSCopying>
 @property  REMObjectID *accountID
 @property  NSString *crdtID

  // class methods
  +[REMReplicaIDSource supportsSecureCoding]
  +[REMReplicaIDSource crdtIDWithObjectID:property:]

  // instance methods
  -[REMReplicaIDSource accountID]
  -[REMReplicaIDSource encodeWithCoder:]
  -[REMReplicaIDSource .cxx_destruct]
  -[REMReplicaIDSource copyWithZone:]
  -[REMReplicaIDSource isEqual:]
  -[REMReplicaIDSource initWithCoder:]
  -[REMReplicaIDSource initWithAccountID:objectID:property:]
  -[REMReplicaIDSource initWithAccountID:crdtID:]
  -[REMReplicaIDSource crdtID]


REMXPCSyncInterfacePerformerInterface : NSObject
  // class methods
  +[REMXPCSyncInterfacePerformerInterface interface]


REMAlarm : NSObject <REMObjectIDProviding, NSSecureCoding>
 @property  REMObjectID *objectID
 @property  REMAlarmTrigger *trigger
 @property  NSDate *acknowledgedDate
 @property  NSString *alarmUID
 @property  NSString *originalAlarmUID
 @property  REMObjectID *remObjectID

  // class methods
  +[REMAlarm supportsSecureCoding]
  +[REMAlarm newObjectID]
  +[REMAlarm cdEntityName]
  +[REMAlarm objectIDWithUUID:]

  // instance methods
  -[REMAlarm objectID]
  -[REMAlarm remObjectID]
  -[REMAlarm setObjectID:]
  -[REMAlarm encodeWithCoder:]
  -[REMAlarm trigger]
  -[REMAlarm .cxx_destruct]
  -[REMAlarm setTrigger:]
  -[REMAlarm acknowledgedDate]
  -[REMAlarm copyWithZone:]
  -[REMAlarm setAcknowledgedDate:]
  -[REMAlarm isEqual:]
  -[REMAlarm initWithCoder:]
  -[REMAlarm originalAlarmUID]
  -[REMAlarm alarmUID]
  -[REMAlarm setOriginalAlarmUID:]
  -[REMAlarm setAlarmUID:]
  -[REMAlarm initWithTrigger:]
  -[REMAlarm isOriginal]
  -[REMAlarm isContentEqual:]
  -[REMAlarm initWithTrigger:objectID:]
  -[REMAlarm initWithAlarm:objectID:]
  -[REMAlarm isAcknowledged]
  -[REMAlarm isSnooze]


REMReminderStorage : NSObject <NSCopying, NSSecureCoding, REMObjectIDProviding, REMExternalSyncMetadataWritableProviding, REMObjectStorageSupportedVersionProviding>
 @property  NSString *titleAsString
 @property  NSString *notesAsString
 @property  REMObjectID *accountID
 @property  REMObjectID *objectID
 @property  REMObjectID *listID
 @property  REMObjectID *parentReminderID
 @property  NSData *titleDocumentData
 @property  NSData *notesDocumentData
 @property  NSString *primaryLocaleInferredFromLastUsedKeyboard
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  BOOL completed
 @property  NSDate *completionDate
 @property  NSSet *subtaskIDsToUndelete
 @property  NSSet *hashtagIDsToUndelete
 @property  unsigned long priority
 @property  NSDateComponents *startDateComponents
 @property  NSDateComponents *dueDateComponents
 @property  NSString *timeZone
 @property  BOOL allDay
 @property  NSDate *creationDate
 @property  NSDate *lastModifiedDate
 @property  NSArray *recurrenceRules
 @property  NSArray *attachments
 @property  NSArray *alarms
 @property  REMContactRepresentation *contactHandles
 @property  unsigned long icsDisplayOrder
 @property  NSURL *icsUrl
 @property  NSData *importedICSData
 @property  NSString *daCalendarItemUniqueIdentifier
 @property  REMUserActivity *userActivity
 @property  NSData *siriFoundInAppsData
 @property  long long siriFoundInAppsUserConfirmation
 @property  NSDate *lastBannerPresentationDate
 @property  long long flagged
 @property  BOOL isOverdue
 @property  BOOL isRecurrent
 @property  NSSet *assignments
 @property  NSSet *hashtags
 @property  REMDisplayDate *displayDate
 @property  NSString *legacyNotificationIdentifier
 @property  REMObjectID *remObjectID
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMReminderStorage supportsSecureCoding]
  +[REMReminderStorage newObjectID]
  +[REMReminderStorage isDate:overdueAtReferenceDate:allDay:showAllDayRemindersAsOverdue:]
  +[REMReminderStorage cdEntityName]
  +[REMReminderStorage objectIDWithUUID:]
  +[REMReminderStorage notesReplicaIDSourceWithAccountID:reminderID:]
  +[REMReminderStorage titleReplicaIDSourceWithAccountID:reminderID:]

  // instance methods
  -[REMReminderStorage cdKeyToStorageKeyMap]
  -[REMReminderStorage objectID]
  -[REMReminderStorage optionalObjectID]
  -[REMReminderStorage effectiveMinimumSupportedVersion]
  -[REMReminderStorage timeZone]
  -[REMReminderStorage remObjectID]
  -[REMReminderStorage setResolutionTokenMapData:]
  -[REMReminderStorage minimumSupportedVersion]
  -[REMReminderStorage setStoreGenerationIfNeeded:]
  -[REMReminderStorage isUnsupported]
  -[REMReminderStorage accountID]
  -[REMReminderStorage storeGeneration]
  -[REMReminderStorage setResolutionTokenMap:]
  -[REMReminderStorage setAssignments:]
  -[REMReminderStorage setPriority:]
  -[REMReminderStorage resolutionTokenMap]
  -[REMReminderStorage setObjectID:]
  -[REMReminderStorage setMinimumSupportedVersion:]
  -[REMReminderStorage setEffectiveMinimumSupportedVersion:]
  -[REMReminderStorage resolutionTokenMapData]
  -[REMReminderStorage setTimeZone:]
  -[REMReminderStorage userActivity]
  -[REMReminderStorage setExternalModificationTag:]
  -[REMReminderStorage alarms]
  -[REMReminderStorage daSyncToken]
  -[REMReminderStorage encodeWithCoder:]
  -[REMReminderStorage setAccountID:]
  -[REMReminderStorage setDisplayDate:]
  -[REMReminderStorage lastModifiedDate]
  -[REMReminderStorage setCompleted:]
  -[REMReminderStorage daPushKey]
  -[REMReminderStorage externalIdentifier]
  -[REMReminderStorage isCompleted]
  -[REMReminderStorage .cxx_destruct]
  -[REMReminderStorage setAllDay:]
  -[REMReminderStorage setDaSyncToken:]
  -[REMReminderStorage creationDate]
  -[REMReminderStorage allDay]
  -[REMReminderStorage setDaPushKey:]
  -[REMReminderStorage displayDate]
  -[REMReminderStorage setAlarms:]
  -[REMReminderStorage contactHandles]
  -[REMReminderStorage externalModificationTag]
  -[REMReminderStorage copyWithZone:]
  -[REMReminderStorage setCreationDate:]
  -[REMReminderStorage priority]
  -[REMReminderStorage setLastModifiedDate:]
  -[REMReminderStorage setAttachments:]
  -[REMReminderStorage attachments]
  -[REMReminderStorage assignments]
  -[REMReminderStorage startDateComponents]
  -[REMReminderStorage isEqual:]
  -[REMReminderStorage hashtags]
  -[REMReminderStorage initWithCoder:]
  -[REMReminderStorage setExternalIdentifier:]
  -[REMReminderStorage setUserActivity:]
  -[REMReminderStorage setContactHandles:]
  -[REMReminderStorage setStartDateComponents:]
  -[REMReminderStorage setCompletionDate:]
  -[REMReminderStorage completionDate]
  -[REMReminderStorage setHashtags:]
  -[REMReminderStorage titleAsString]
  -[REMReminderStorage dueDateComponents]
  -[REMReminderStorage setDaCalendarItemUniqueIdentifier:]
  -[REMReminderStorage setNotesAsString:]
  -[REMReminderStorage icsUrl]
  -[REMReminderStorage setTitleAsString:]
  -[REMReminderStorage notesAsString]
  -[REMReminderStorage daCalendarItemUniqueIdentifier]
  -[REMReminderStorage setIcsUrl:]
  -[REMReminderStorage setRecurrenceRules:]
  -[REMReminderStorage recurrenceRules]
  -[REMReminderStorage setDueDateComponents:]
  -[REMReminderStorage listID]
  -[REMReminderStorage flagged]
  -[REMReminderStorage setFlagged:]
  -[REMReminderStorage setParentReminderID:]
  -[REMReminderStorage setListID:]
  -[REMReminderStorage parentReminderID]
  -[REMReminderStorage setSiriFoundInAppsData:]
  -[REMReminderStorage siriFoundInAppsData]
  -[REMReminderStorage isOverdue]
  -[REMReminderStorage titleDocument]
  -[REMReminderStorage notesDocument]
  -[REMReminderStorage setLastBannerPresentationDate:]
  -[REMReminderStorage isRecurrent]
  -[REMReminderStorage primaryLocaleInferredFromLastUsedKeyboard]
  -[REMReminderStorage setPrimaryLocaleInferredFromLastUsedKeyboard:]
  -[REMReminderStorage datesDebugDescriptionInTimeZone:]
  -[REMReminderStorage setIcsDisplayOrder:]
  -[REMReminderStorage updateDisplayDate]
  -[REMReminderStorage subtaskIDsToUndelete]
  -[REMReminderStorage hashtagIDsToUndelete]
  -[REMReminderStorage titleDocumentData]
  -[REMReminderStorage notesDocumentData]
  -[REMReminderStorage icsDisplayOrder]
  -[REMReminderStorage importedICSData]
  -[REMReminderStorage siriFoundInAppsUserConfirmation]
  -[REMReminderStorage lastBannerPresentationDate]
  -[REMReminderStorage legacyNotificationIdentifier]
  -[REMReminderStorage initWithObjectID:listID:accountID:]
  -[REMReminderStorage setTitleDocument:]
  -[REMReminderStorage setTitleAsStringByCDIngestor:]
  -[REMReminderStorage setNotesDocument:]
  -[REMReminderStorage setNotesAsStringByCDIngestor:]
  -[REMReminderStorage titleReplicaIDSource]
  -[REMReminderStorage notesReplicaIDSource]
  -[REMReminderStorage setTitleDocumentData:]
  -[REMReminderStorage setNotesDocumentData:]
  -[REMReminderStorage setSubtaskIDsToUndelete:]
  -[REMReminderStorage setHashtagIDsToUndelete:]
  -[REMReminderStorage setImportedICSData:]
  -[REMReminderStorage setSiriFoundInAppsUserConfirmation:]


REMChangeToken : NSObject <NSCopying, NSSecureCoding>
  // class methods
  +[REMChangeToken supportsSecureCoding]

  // instance methods
  -[REMChangeToken encodeWithCoder:]
  -[REMChangeToken copyWithZone:]
  -[REMChangeToken isEqual:]
  -[REMChangeToken compareToken:error:]
  -[REMChangeToken initWithCoder:]


_REMChangeUniversalToken : REMChangeToken
  // class methods
  +[_REMChangeUniversalToken supportsSecureCoding]
  +[_REMChangeUniversalToken universalToken]

  // instance methods
  -[_REMChangeUniversalToken encodeWithCoder:]
  -[_REMChangeUniversalToken isEqual:]
  -[_REMChangeUniversalToken compareToken:error:]
  -[_REMChangeUniversalToken initWithCoder:]
  -[_REMChangeUniversalToken isUniversal]


REMAccountChangeItem : NSObject <REMConflictResolving, REMPersonIDProviding, REMSaveRequestTrackedValue, REMExternalSyncMetadataWritableProviding, REMSupportedVersionProviding, REMSupportedVersionUpdating>
 @property  REMChangedKeysObserver *changedKeysObserver
 @property  REMObjectID *remObjectID
 @property  REMObjectID *objectID
 @property  REMAccountCapabilities *capabilities
 @property  REMCRMergeableOrderedSet *listIDsMergeableOrdering
 @property  NSData *listIDsMergeableOrderingData
 @property  REMManualOrdering *pinnedListsManualOrdering
 @property  REMManualOrdering *templatesManualOrdering
 @property  BOOL markedForRemoval
 @property  NSSet *listIDsToUndelete
 @property  NSSet *smartListIDsToUndelete
 @property  NSString *displayName
 @property  BOOL debugSyncDisabled
 @property  BOOL listsDADisplayOrderChanged
 @property  long long type
 @property  REMAccountStorage *storage
 @property  NSString *name
 @property  REMAccountPinnedListsContextChangeItem *pinnedListsContext
 @property  BOOL inactive
 @property  BOOL didChooseToMigrate
 @property  BOOL didChooseToMigrateLocally
 @property  BOOL didFinishMigration
 @property  long long persistenceCloudSchemaVersion
 @property  NSString *daConstraintsDescriptionPath
 @property  BOOL daAllowsCalendarAddDeleteModify
 @property  BOOL daSupportsSharedCalendars
 @property  BOOL daWasMigrated
 @property  REMSaveRequest *saveRequest
 @property  REMAccountGroupContextChangeItem *groupContext
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  NSString *personID
 @property  NSData *personIDSalt
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMAccountChangeItem initialize]
  +[REMAccountChangeItem _emptyListIDsOrderingWithAccountID:]

  // instance methods
  -[REMAccountChangeItem setValue:forUndefinedKey:]
  -[REMAccountChangeItem changedKeys]
  -[REMAccountChangeItem valueForUndefinedKey:]
  -[REMAccountChangeItem accountTypeHost]
  -[REMAccountChangeItem isUnsupported]
  -[REMAccountChangeItem storage]
  -[REMAccountChangeItem respondsToSelector:]
  -[REMAccountChangeItem .cxx_destruct]
  -[REMAccountChangeItem capabilities]
  -[REMAccountChangeItem forwardingTargetForSelector:]
  -[REMAccountChangeItem groupContext]
  -[REMAccountChangeItem saveRequest]
  -[REMAccountChangeItem addListChangeItem:]
  -[REMAccountChangeItem templatesContextChangeItem]
  -[REMAccountChangeItem insertSmartListChangeItem:afterSmartListChangeItem:]
  -[REMAccountChangeItem insertListChangeItem:afterListChangeItem:]
  -[REMAccountChangeItem canCopyReminderLosslesslyToAccountChangeItem:]
  -[REMAccountChangeItem insertMergeableOrderingNode:afterMergeableOrderingNode:]
  -[REMAccountChangeItem pinnedListsContext]
  -[REMAccountChangeItem undeleteListWithID:usingUndo:]
  -[REMAccountChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:]
  -[REMAccountChangeItem undeleteSmartListWithID:usingUndo:]
  -[REMAccountChangeItem addSmartListChangeItem:]
  -[REMAccountChangeItem resolutionTokenKeyForChangedKey:]
  -[REMAccountChangeItem shallowCopyWithSaveRequest:]
  -[REMAccountChangeItem changedKeysObserver]
  -[REMAccountChangeItem setChangedKeysObserver:]
  -[REMAccountChangeItem initWithSaveRequest:storage:capabilities:changedKeysObserver:]
  -[REMAccountChangeItem initWithSaveRequest:storage:capabilities:observeInitialValues:]
  -[REMAccountChangeItem initWithObjectID:type:name:insertIntoSaveRequest:]
  -[REMAccountChangeItem insertListChangeItem:beforeListChangeItem:]
  -[REMAccountChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:]
  -[REMAccountChangeItem addMergeableOrderingNode:]
  -[REMAccountChangeItem removeFromStore]
  -[REMAccountChangeItem mergeableOrderingNodesByOrderingMergeableOrderingNodes:]
  -[REMAccountChangeItem lowLevelAddMergeableOrderingNodeIDToOrdering:withParentMergeableOrderingNode:]
  -[REMAccountChangeItem lowLevelRemoveMergeableOrderingNodeIDFromOrdering:]
  -[REMAccountChangeItem test_lowLevelEditOrderingByMovingListObjectID:toTarget:]
  -[REMAccountChangeItem insertMergeableOrderingNode:adjacentToMergeableOrderingNode:isAfter:withParentMergeableOrderingNode:]
  -[REMAccountChangeItem _reassignMergeableOrderingNode:withParentListChangeItem:]
  -[REMAccountChangeItem _lowLevelAddMergeableOrderingNodeToOrdering:atIndexOfSibling:isAfter:withParentMergeableOrderingNode:]
  -[REMAccountChangeItem _lowLevelApplyUndoToOrdering:]
  -[REMAccountChangeItem _editListIDsOrderingUsingBlock:]


REMAccountGroupContextChangeItem : NSObject
 @property  REMAccountChangeItem *accountChangeItem

  // instance methods
  -[REMAccountGroupContextChangeItem .cxx_destruct]
  -[REMAccountGroupContextChangeItem initWithAccountChangeItem:]
  -[REMAccountGroupContextChangeItem accountChangeItem]
  -[REMAccountGroupContextChangeItem setAccountChangeItem:]


REMAccountPinnedListsContextChangeItem : NSObject
 @property  REMAccountChangeItem *accountChangeItem
 @property  REMManualOrdering *unsavedManualOrdering

  // instance methods
  -[REMAccountPinnedListsContextChangeItem .cxx_destruct]
  -[REMAccountPinnedListsContextChangeItem updateManualOrdering:]
  -[REMAccountPinnedListsContextChangeItem initWithAccountChangeItem:]
  -[REMAccountPinnedListsContextChangeItem accountChangeItem]
  -[REMAccountPinnedListsContextChangeItem setAccountChangeItem:]
  -[REMAccountPinnedListsContextChangeItem unsavedManualOrdering]


REMAccountTemplatesContextChangeItem : NSObject
 @property  REMAccountChangeItem *accountChangeItem
 @property  REMManualOrdering *unsavedManualOrdering

  // instance methods
  -[REMAccountTemplatesContextChangeItem .cxx_destruct]
  -[REMAccountTemplatesContextChangeItem addTemplateWithName:configuration:]
  -[REMAccountTemplatesContextChangeItem updateManualOrdering:]
  -[REMAccountTemplatesContextChangeItem initWithAccountChangeItem:]
  -[REMAccountTemplatesContextChangeItem accountChangeItem]
  -[REMAccountTemplatesContextChangeItem setAccountChangeItem:]
  -[REMAccountTemplatesContextChangeItem unsavedManualOrdering]


REMListFetchMetadata : REMFetchMetadata
 @property  NSDictionary *incompleteReminderCounts
 @property  long long scheduledCount

  // class methods
  +[REMListFetchMetadata supportsSecureCoding]

  // instance methods
  -[REMListFetchMetadata encodeWithCoder:]
  -[REMListFetchMetadata .cxx_destruct]
  -[REMListFetchMetadata isEqual:]
  -[REMListFetchMetadata initWithCoder:]
  -[REMListFetchMetadata initWithIncompleteReminderCounts:scheduledCount:]
  -[REMListFetchMetadata incompleteReminderCounts]
  -[REMListFetchMetadata scheduledCount]


REMListPredicateDescriptor : NSObject <NSSecureCoding>
 @property  long long type
 @property  REMObjectID *accountID
 @property  REMObjectID *parentListID
 @property  NSArray *objectIDs

  // class methods
  +[REMListPredicateDescriptor supportsSecureCoding]
  +[REMListPredicateDescriptor predicateDescriptorForAllLists]

  // instance methods
  -[REMListPredicateDescriptor setParentListID:]
  -[REMListPredicateDescriptor accountID]
  -[REMListPredicateDescriptor parentListID]
  -[REMListPredicateDescriptor encodeWithCoder:]
  -[REMListPredicateDescriptor setAccountID:]
  -[REMListPredicateDescriptor type]
  -[REMListPredicateDescriptor .cxx_destruct]
  -[REMListPredicateDescriptor initWithType:]
  -[REMListPredicateDescriptor objectIDs]
  -[REMListPredicateDescriptor copyWithZone:]
  -[REMListPredicateDescriptor isEqual:]
  -[REMListPredicateDescriptor initWithCoder:]
  -[REMListPredicateDescriptor setObjectIDs:]


REMReminderFetchExecutor : _REMFetchExecutor
 @property  REMReminderPredicateDescriptor *predicateDescriptor
 @property  NSArray *sortDescriptors
 @property  unsigned long options

  // class methods
  +[REMReminderFetchExecutor supportsSecureCoding]

  // instance methods
  -[REMReminderFetchExecutor setSortDescriptors:]
  -[REMReminderFetchExecutor sortDescriptors]
  -[REMReminderFetchExecutor encodeWithCoder:]
  -[REMReminderFetchExecutor .cxx_destruct]
  -[REMReminderFetchExecutor options]
  -[REMReminderFetchExecutor initWithCoder:]
  -[REMReminderFetchExecutor initWithPredicateDescriptor:sortDescriptors:options:]
  -[REMReminderFetchExecutor resultsFromFetchResult:inStore:error:]
  -[REMReminderFetchExecutor predicateDescriptor]
  -[REMReminderFetchExecutor setPredicateDescriptor:]
  -[REMReminderFetchExecutor resultsFromFetchResult:inList:error:]
  -[REMReminderFetchExecutor resultsFromFetchResult:inParentReminder:error:]


REMReminderFetchMetadata : REMFetchMetadata
 @property  NSDictionary *subtaskCounts
 @property  NSArray *dueDateCounts

  // class methods
  +[REMReminderFetchMetadata supportsSecureCoding]

  // instance methods
  -[REMReminderFetchMetadata encodeWithCoder:]
  -[REMReminderFetchMetadata .cxx_destruct]
  -[REMReminderFetchMetadata isEqual:]
  -[REMReminderFetchMetadata initWithCoder:]
  -[REMReminderFetchMetadata initWithSubtaskCounts:]
  -[REMReminderFetchMetadata initWithDueDateCounts:]
  -[REMReminderFetchMetadata initWithSubtaskCounts:dueDateCounts:]
  -[REMReminderFetchMetadata subtaskCounts]
  -[REMReminderFetchMetadata dueDateCounts]


REMReminderFetchMetadataDueDateCount : NSObject <NSSecureCoding, NSCopying>
 @property  NSDate *dueDate
 @property  long long count

  // class methods
  +[REMReminderFetchMetadataDueDateCount supportsSecureCoding]

  // instance methods
  -[REMReminderFetchMetadataDueDateCount encodeWithCoder:]
  -[REMReminderFetchMetadataDueDateCount .cxx_destruct]
  -[REMReminderFetchMetadataDueDateCount count]
  -[REMReminderFetchMetadataDueDateCount copyWithZone:]
  -[REMReminderFetchMetadataDueDateCount isEqual:]
  -[REMReminderFetchMetadataDueDateCount initWithCoder:]
  -[REMReminderFetchMetadataDueDateCount dueDate]
  -[REMReminderFetchMetadataDueDateCount initWithDueDate:count:]


REMSharedEntitySyncActivity : NSObject <NSSecureCoding>
 @property  NSString *accountIdentifier
 @property  NSDate *activityDate
 @property  long long activityType
 @property  NSString *authorUserRecordIDString
 @property  NSString *ckParentCloudObjectEntityName
 @property  NSString *ckParentCloudObjectIdentifier
 @property  NSString *ckIdentifier
 @property  NSString *sharedEntityName
 @property  NSUUID *uuidForChangeTracking

  // class methods
  +[REMSharedEntitySyncActivity supportsSecureCoding]

  // instance methods
  -[REMSharedEntitySyncActivity encodeWithCoder:]
  -[REMSharedEntitySyncActivity activityType]
  -[REMSharedEntitySyncActivity .cxx_destruct]
  -[REMSharedEntitySyncActivity accountIdentifier]
  -[REMSharedEntitySyncActivity initWithCoder:]
  -[REMSharedEntitySyncActivity activityDate]
  -[REMSharedEntitySyncActivity uuidForChangeTracking]
  -[REMSharedEntitySyncActivity authorUserRecordIDString]
  -[REMSharedEntitySyncActivity ckParentCloudObjectEntityName]
  -[REMSharedEntitySyncActivity ckParentCloudObjectIdentifier]
  -[REMSharedEntitySyncActivity ckIdentifier]
  -[REMSharedEntitySyncActivity sharedEntityName]
  -[REMSharedEntitySyncActivity initWithAccountIdentifier:activityDate:activityType:authorUserRecordIDString:ckParentCloudObjectEntityName:ckParentCloudObjectIdentifier:ckIdentifier:sharedEntityName:uuidForChangeTracking:]
  -[REMSharedEntitySyncActivity activityTypeDescription]


REMDisplayDate : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *date
 @property  BOOL allDay
 @property  NSTimeZone *timeZone

  // class methods
  +[REMDisplayDate supportsSecureCoding]

  // instance methods
  -[REMDisplayDate isAllDay]
  -[REMDisplayDate timeZone]
  -[REMDisplayDate encodeWithCoder:]
  -[REMDisplayDate date]
  -[REMDisplayDate .cxx_destruct]
  -[REMDisplayDate copyWithZone:]
  -[REMDisplayDate isEqual:]
  -[REMDisplayDate initWithCoder:]
  -[REMDisplayDate initWithDueDateComponents:alarms:]
  -[REMDisplayDate initWithDate:allDay:timeZone:]
  -[REMDisplayDate initWithFloatingDateComponents:nonFloatingDateComponents:]


REMSmartList : NSObject <REMObjectIDProviding, REMSupportedVersionProviding>
 @property  REMAccount *account
 @property  REMList *parentList
 @property  REMSmartListStorage *storage
 @property  REMObjectID *accountID
 @property  REMObjectID *parentAccountID
 @property  REMObjectID *parentListID
 @property  NSDate *pinnedDate
 @property  NSUUID *mostRecentTargetTemplateIdentifier
 @property  BOOL isOriginOfExistingTemplate
 @property  REMAccountCapabilities *accountCapabilities
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  NSString *name
 @property  REMColor *color
 @property  NSString *badgeEmblem
 @property  BOOL isPinned
 @property  NSData *filterData
 @property  BOOL showingLargeAttachments
 @property  BOOL isPersisted
 @property  REMStore *store
 @property  REMObjectID *objectID
 @property  NSString *smartListType
 @property  REMSmartListCustomContext *customContext
 @property  NSString *sortingStyle
 @property  REMObjectID *remObjectID
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMSmartList newObjectID]
  +[REMSmartList cdEntityName]
  +[REMSmartList objectIDWithUUID:]

  // instance methods
  -[REMSmartList setValue:forUndefinedKey:]
  -[REMSmartList setStorage:]
  -[REMSmartList optionalObjectID]
  -[REMSmartList initWithStore:storage:]
  -[REMSmartList valueForUndefinedKey:]
  -[REMSmartList account]
  -[REMSmartList remObjectID]
  -[REMSmartList isUnsupported]
  -[REMSmartList isPinned]
  -[REMSmartList setAccount:]
  -[REMSmartList initWithStore:account:parentList:storage:]
  -[REMSmartList store]
  -[REMSmartList storage]
  -[REMSmartList respondsToSelector:]
  -[REMSmartList .cxx_destruct]
  -[REMSmartList accountCapabilities]
  -[REMSmartList forwardingTargetForSelector:]
  -[REMSmartList parentList]
  -[REMSmartList isOriginOfExistingTemplate]
  -[REMSmartList setParentList:]
  -[REMSmartList isEqual:]
  -[REMSmartList customContext]


REMSmartListCustomContext : NSObject
 @property  REMSmartList *smartlist
 @property  NSString *name
 @property  REMColor *color
 @property  REMListBadge *badge
 @property  REMAccount *account
 @property  REMList *parentList

  // instance methods
  -[REMSmartListCustomContext account]
  -[REMSmartListCustomContext .cxx_destruct]
  -[REMSmartListCustomContext badge]
  -[REMSmartListCustomContext parentList]
  -[REMSmartListCustomContext color]
  -[REMSmartListCustomContext name]
  -[REMSmartListCustomContext smartlist]
  -[REMSmartListCustomContext initWithSmartList:account:parentList:]
  -[REMSmartListCustomContext setSmartlist:]


REMChangeTracking : NSObject
 @property  NSSet *transactionAuthorKeysToExclude
 @property  <REMChangeTrackingClientIdentifying> *changeTrackingClientID
 @property  <REMDaemonController> *daemonController
 @property  NSArray *entityNames
 @property  unsigned long transactionFetchLimit

  // class methods
  +[REMChangeTracking defaultTransactionAuthorKeysToExclude]
  +[REMChangeTracking internalTransactionAuthorKeysToExclude]
  +[REMChangeTracking entityNamesToIncludeFromTrackingWithOptionProvider:]
  +[REMChangeTracking lastTransactionTimestampWithManagedObjectContext:affectedStores:]

  // instance methods
  -[REMChangeTracking entityNames]
  -[REMChangeTracking currentChangeTokenForAllAccountsWithError:]
  -[REMChangeTracking currentChangeTokenWithError:]
  -[REMChangeTracking getTrackingStateWithError:]
  -[REMChangeTracking changeTrackingClientID]
  -[REMChangeTracking transactionFetchLimit]
  -[REMChangeTracking fetchAuxiliaryChangeInfosOfType:withChangeObject:error:]
  -[REMChangeTracking setEntityNames:]
  -[REMChangeTracking initWithClientID:daemonController:transactionAuthorKeysToExclude:]
  -[REMChangeTracking fetchHistoryAfterToken:error:]
  -[REMChangeTracking .cxx_destruct]
  -[REMChangeTracking earliestChangeTokenWithError:]
  -[REMChangeTracking fetchHistoryAfterDate:error:]
  -[REMChangeTracking setTransactionFetchLimit:]
  -[REMChangeTracking deleteHistoryBeforeDate:error:]
  -[REMChangeTracking persistenceStoreIDForAccountID:error:]
  -[REMChangeTracking daemonController]
  -[REMChangeTracking _performChangeTrackingWithReason:block:xpcErrorHandler:]
  -[REMChangeTracking currentChangeTokenForAccountTypes:error:]
  -[REMChangeTracking saveTrackingState:error:]
  -[REMChangeTracking transactionAuthorKeysToExclude]
  -[REMChangeTracking deleteHistoryBeforeToken:error:]
  -[REMChangeTracking initWithClientID:daemonController:]


_REMChangeTrackingClientID : NSObject <REMChangeTrackingClientIdentifying>
 @property  NSString *clientName
 @property  NSString *accountIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_REMChangeTrackingClientID supportsSecureCoding]

  // instance methods
  -[_REMChangeTrackingClientID encodeWithCoder:]
  -[_REMChangeTrackingClientID .cxx_destruct]
  -[_REMChangeTrackingClientID accountIdentifier]
  -[_REMChangeTrackingClientID initWithClientName:accountIdentifier:]
  -[_REMChangeTrackingClientID copyWithZone:]
  -[_REMChangeTrackingClientID clientName]
  -[_REMChangeTrackingClientID isEqual:]
  -[_REMChangeTrackingClientID initWithCoder:]


REMCloudContainer : NSObject
  // class methods
  +[REMCloudContainer newCloudContainerForAccountID:]
  +[REMCloudContainer newCloudContainerWithPublicCloudDatabase]
  +[REMCloudContainer newCloudContainerForAccount:]
  +[REMCloudContainer isSandboxEnvironment]


REMTemplateChangeItem : NSObject <REMConflictResolving, REMSaveRequestTrackedValue, REMObjectIDProviding, REMSupportedVersionProviding, REMSupportedVersionUpdating>
 @property  REMManualOrdering *unsavedManualOrdering
 @property  REMChangedKeysObserver *changedKeysObserver
 @property  REMTemplateConfiguration *configuration
 @property  REMObjectID *accountID
 @property  REMObjectID *parentAccountID
 @property  NSString *badgeEmblem
 @property  REMTemplatePublicLink *publicLink
 @property  BOOL isPersisted
 @property  REMSaveRequest *saveRequest
 @property  REMObjectID *objectID
 @property  NSString *name
 @property  REMColor *color
 @property  REMListBadge *badge
 @property  BOOL showingLargeAttachments
 @property  NSString *sortingStyle
 @property  NSDate *mostRecentPublicLinkUpdateRequestDate
 @property  REMAccountCapabilities *accountCapabilities
 @property  REMTemplateStorage *storage
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *remObjectID
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMTemplateChangeItem newObjectID]
  +[REMTemplateChangeItem cdEntityName]
  +[REMTemplateChangeItem initialize]
  +[REMTemplateChangeItem objectIDWithUUID:]

  // instance methods
  -[REMTemplateChangeItem setValue:forUndefinedKey:]
  -[REMTemplateChangeItem changedKeys]
  -[REMTemplateChangeItem valueForUndefinedKey:]
  -[REMTemplateChangeItem isUnsupported]
  -[REMTemplateChangeItem setBadge:]
  -[REMTemplateChangeItem storage]
  -[REMTemplateChangeItem respondsToSelector:]
  -[REMTemplateChangeItem .cxx_destruct]
  -[REMTemplateChangeItem accountCapabilities]
  -[REMTemplateChangeItem badge]
  -[REMTemplateChangeItem forwardingTargetForSelector:]
  -[REMTemplateChangeItem saveRequest]
  -[REMTemplateChangeItem updateManualOrdering:]
  -[REMTemplateChangeItem removeFromParentAccount]
  -[REMTemplateChangeItem resolutionTokenKeyForChangedKey:]
  -[REMTemplateChangeItem shallowCopyWithSaveRequest:]
  -[REMTemplateChangeItem changedKeysObserver]
  -[REMTemplateChangeItem setChangedKeysObserver:]
  -[REMTemplateChangeItem initWithSaveRequest:storage:changedKeysObserver:]
  -[REMTemplateChangeItem initWithSaveRequest:storage:observeInitialValues:]
  -[REMTemplateChangeItem initWithObjectID:name:configuration:insertIntoAccountChangeItem:]


REMHashtagLabel : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *name
 @property  NSString *canonicalName
 @property  NSDate *firstOccurrenceCreationDate
 @property  NSDate *recencyDate
 @property  NSUUID *uuidForChangeTracking

  // class methods
  +[REMHashtagLabel supportsSecureCoding]

  // instance methods
  -[REMHashtagLabel encodeWithCoder:]
  -[REMHashtagLabel .cxx_destruct]
  -[REMHashtagLabel canonicalName]
  -[REMHashtagLabel copyWithZone:]
  -[REMHashtagLabel initWithName:]
  -[REMHashtagLabel name]
  -[REMHashtagLabel recencyDate]
  -[REMHashtagLabel isEqual:]
  -[REMHashtagLabel initWithCoder:]
  -[REMHashtagLabel initWithName:canonicalName:firstOccurrenceCreationDate:recencyDate:uuidForChangeTracking:]
  -[REMHashtagLabel firstOccurrenceCreationDate]
  -[REMHashtagLabel uuidForChangeTracking]
  -[REMHashtagLabel isEqualToHashtagLabel:]


REMCalDAVNotification : NSObject <REMDAChangeTrackableModel, _REMDAChangeTrackableModel, REMExternalSyncMetadataWritableProviding, NSSecureCoding, NSCopying, REMObjectIDProviding, REMExternalSyncMetadataProviding>
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  NSString *externalIdentifierForMarkedForDeletionObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *uuidString
 @property  NSURL *hostURL
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  REMObjectID *listID
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  REMObjectID *remObjectID

  // class methods
  +[REMCalDAVNotification supportsSecureCoding]
  +[REMCalDAVNotification rem_DA_supportsConcealedObjects]
  +[REMCalDAVNotification newObjectID]
  +[REMCalDAVNotification cdEntityName]
  +[REMCalDAVNotification isChangeTrackableModel]
  +[REMCalDAVNotification rem_DA_deletedKeyFromConcealedModelObjectBlock]
  +[REMCalDAVNotification objectIDWithUUID:]
  +[REMCalDAVNotification rem_DA_fetchByObjectIDBlock]
  +[REMCalDAVNotification rem_DA_supportsFetching]
  +[REMCalDAVNotification rem_DA_deletedKeyFromTombstoneBlock]
  +[REMCalDAVNotification rem_DA_fetchByObjectIDsBlock]
  +[REMCalDAVNotification rem_DA_propertiesAffectingIsConcealed]

  // instance methods
  -[REMCalDAVNotification objectID]
  -[REMCalDAVNotification remObjectID]
  -[REMCalDAVNotification accountID]
  -[REMCalDAVNotification shouldUseExternalIdentifierAsDeletionKey]
  -[REMCalDAVNotification setExternalModificationTag:]
  -[REMCalDAVNotification daSyncToken]
  -[REMCalDAVNotification externalIdentifierForMarkedForDeletionObject]
  -[REMCalDAVNotification uuidString]
  -[REMCalDAVNotification encodeWithCoder:]
  -[REMCalDAVNotification daPushKey]
  -[REMCalDAVNotification setUuidString:]
  -[REMCalDAVNotification externalIdentifier]
  -[REMCalDAVNotification .cxx_destruct]
  -[REMCalDAVNotification setDaSyncToken:]
  -[REMCalDAVNotification setDaPushKey:]
  -[REMCalDAVNotification externalModificationTag]
  -[REMCalDAVNotification copyWithZone:]
  -[REMCalDAVNotification isEqual:]
  -[REMCalDAVNotification initWithCoder:]
  -[REMCalDAVNotification setExternalIdentifier:]
  -[REMCalDAVNotification hostURL]
  -[REMCalDAVNotification setHostURL:]
  -[REMCalDAVNotification listID]
  -[REMCalDAVNotification initCalDAVNotificationWithObjectID:accountID:listID:uuidString:hostURL:externalIdentifier:externalModificationTag:]


REMMutableCalDAVNotification : REMCalDAVNotification <REMExternalSyncMetadataWritableProviding>
 @property  NSString *uuidString
 @property  NSURL *hostURL
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey


REMTTStyle : NSObject
  // class methods
  +[REMTTStyle attributeNameForStyle:]


REMXPCChangeTrackingPerformerInterface : NSObject
  // class methods
  +[REMXPCChangeTrackingPerformerInterface interface]


REMAttachment : NSObject <NSSecureCoding, NSCopying, REMObjectIDProviding>
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  REMObjectID *reminderID
 @property  NSString *uti
 @property  REMObjectID *remObjectID

  // class methods
  +[REMAttachment supportsSecureCoding]
  +[REMAttachment newObjectID]
  +[REMAttachment cdEntityName]
  +[REMAttachment objectIDWithUUID:]

  // instance methods
  -[REMAttachment objectID]
  -[REMAttachment _deepCopy]
  -[REMAttachment remObjectID]
  -[REMAttachment accountID]
  -[REMAttachment encodeWithCoder:]
  -[REMAttachment .cxx_destruct]
  -[REMAttachment copyWithZone:]
  -[REMAttachment uti]
  -[REMAttachment isEqual:]
  -[REMAttachment initWithCoder:]
  -[REMAttachment reminderID]
  -[REMAttachment initWithObjectID:accountID:reminderID:UTI:]
  -[REMAttachment initWithAttachment:objectID:accountID:reminderID:]


REMFileAttachment : REMAttachment
 @property  unsigned long fileSize
 @property  NSURL *fileURL
 @property  BOOL isTemporaryFileURL

  // class methods
  +[REMFileAttachment supportsSecureCoding]
  +[REMFileAttachment cdEntityName]
  +[REMFileAttachment createTemporaryFileURLWithUTI:]
  +[REMFileAttachment createTemporaryFileWithData:UTI:]

  // instance methods
  -[REMFileAttachment _deepCopy]
  -[REMFileAttachment fileSize]
  -[REMFileAttachment setFileSize:]
  -[REMFileAttachment setFileURL:]
  -[REMFileAttachment fileURL]
  -[REMFileAttachment encodeWithCoder:]
  -[REMFileAttachment dealloc]
  -[REMFileAttachment .cxx_destruct]
  -[REMFileAttachment isEqual:]
  -[REMFileAttachment initWithCoder:]
  -[REMFileAttachment initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:]
  -[REMFileAttachment isTemporaryFileURL]
  -[REMFileAttachment setIsTemporaryFileURL:]


REMImageAttachment : REMFileAttachment
 @property  unsigned long width
 @property  unsigned long height

  // class methods
  +[REMImageAttachment supportsSecureCoding]
  +[REMImageAttachment cdEntityName]

  // instance methods
  -[REMImageAttachment _deepCopy]
  -[REMImageAttachment width]
  -[REMImageAttachment encodeWithCoder:]
  -[REMImageAttachment height]
  -[REMImageAttachment setWidth:]
  -[REMImageAttachment setHeight:]
  -[REMImageAttachment isEqual:]
  -[REMImageAttachment initWithCoder:]
  -[REMImageAttachment initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:width:height:]


REMURLAttachment : REMAttachment
 @property  NSURL *url
 @property  NSData *metadata

  // class methods
  +[REMURLAttachment supportsSecureCoding]
  +[REMURLAttachment cdEntityName]

  // instance methods
  -[REMURLAttachment _deepCopy]
  -[REMURLAttachment setUrl:]
  -[REMURLAttachment encodeWithCoder:]
  -[REMURLAttachment .cxx_destruct]
  -[REMURLAttachment setMetadata:]
  -[REMURLAttachment url]
  -[REMURLAttachment metadata]
  -[REMURLAttachment isEqual:]
  -[REMURLAttachment initWithCoder:]
  -[REMURLAttachment initWithObjectID:accountID:reminderID:url:metadata:]


REMMigrationResult : NSObject <NSSecureCoding>
 @property  NSString *state
 @property  BOOL isObserver
 @property  double timeElapsed
 @property  unsigned long listsMigrated
 @property  unsigned long remindersMigrated
 @property  NSString *log

  // class methods
  +[REMMigrationResult supportsSecureCoding]

  // instance methods
  -[REMMigrationResult encodeWithCoder:]
  -[REMMigrationResult state]
  -[REMMigrationResult .cxx_destruct]
  -[REMMigrationResult log]
  -[REMMigrationResult timeElapsed]
  -[REMMigrationResult initWithCoder:]
  -[REMMigrationResult remindersMigrated]
  -[REMMigrationResult isObserver]
  -[REMMigrationResult listsMigrated]
  -[REMMigrationResult initWithState:IsObserver:timeElapsed:listsMigrated:remindersMigrated:log:]


_REMChangedObjectIDStorage : NSObject <NSCopying, NSSecureCoding, REMChangedObjectIdentifying>
 @property  NSUUID *uuid
 @property  NSString *entityName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_REMChangedObjectIDStorage supportsSecureCoding]

  // instance methods
  -[_REMChangedObjectIDStorage entityName]
  -[_REMChangedObjectIDStorage setEntityName:]
  -[_REMChangedObjectIDStorage encodeWithCoder:]
  -[_REMChangedObjectIDStorage uuid]
  -[_REMChangedObjectIDStorage .cxx_destruct]
  -[_REMChangedObjectIDStorage setUuid:]
  -[_REMChangedObjectIDStorage copyWithZone:]
  -[_REMChangedObjectIDStorage initWithUUID:entityName:]
  -[_REMChangedObjectIDStorage isEqual:]
  -[_REMChangedObjectIDStorage initWithCoder:]


_REMNSPersistentHistoryChangeStorage : NSObject <NSSecureCoding>
 @property  long long changeID
 @property  _REMChangedObjectIDStorage *changedObjectIDStorage
 @property  long long changeType
 @property  REMNSPersistentHistoryChangeTombstone *tombstone
 @property  NSSet *updatedProperties

  // class methods
  +[_REMNSPersistentHistoryChangeStorage supportsSecureCoding]

  // instance methods
  -[_REMNSPersistentHistoryChangeStorage tombstone]
  -[_REMNSPersistentHistoryChangeStorage encodeWithCoder:]
  -[_REMNSPersistentHistoryChangeStorage changeType]
  -[_REMNSPersistentHistoryChangeStorage .cxx_destruct]
  -[_REMNSPersistentHistoryChangeStorage changeID]
  -[_REMNSPersistentHistoryChangeStorage updatedProperties]
  -[_REMNSPersistentHistoryChangeStorage setChangeType:]
  -[_REMNSPersistentHistoryChangeStorage isEqual:]
  -[_REMNSPersistentHistoryChangeStorage initWithCoder:]
  -[_REMNSPersistentHistoryChangeStorage setChangeID:]
  -[_REMNSPersistentHistoryChangeStorage changedObjectIDStorage]
  -[_REMNSPersistentHistoryChangeStorage setChangedObjectIDStorage:]
  -[_REMNSPersistentHistoryChangeStorage setTombstone:]
  -[_REMNSPersistentHistoryChangeStorage setUpdatedProperties:]


REMNSPersistentHistoryChangeTombstone : REMChangeTombstone
 @property  NSDictionary *persistentHistoryChangeTombstone
 @property  NSUUID *uuidForChangeTracking

  // class methods
  +[REMNSPersistentHistoryChangeTombstone supportsSecureCoding]

  // instance methods
  -[REMNSPersistentHistoryChangeTombstone encodeWithCoder:]
  -[REMNSPersistentHistoryChangeTombstone objectIdentifier]
  -[REMNSPersistentHistoryChangeTombstone initWithDictionary:]
  -[REMNSPersistentHistoryChangeTombstone externalIdentifier]
  -[REMNSPersistentHistoryChangeTombstone .cxx_destruct]
  -[REMNSPersistentHistoryChangeTombstone daIsEventOnlyContainer]
  -[REMNSPersistentHistoryChangeTombstone isEqual:]
  -[REMNSPersistentHistoryChangeTombstone initWithCoder:]
  -[REMNSPersistentHistoryChangeTombstone shareeDisplayName]
  -[REMNSPersistentHistoryChangeTombstone uuidForChangeTracking]
  -[REMNSPersistentHistoryChangeTombstone remObjectIdentifier]
  -[REMNSPersistentHistoryChangeTombstone shareeOwningListIdentifier]
  -[REMNSPersistentHistoryChangeTombstone shareeAddress]
  -[REMNSPersistentHistoryChangeTombstone assignmentOwningReminderIdentifier]
  -[REMNSPersistentHistoryChangeTombstone hashtagName]
  -[REMNSPersistentHistoryChangeTombstone hashtagReminderIdentifier]
  -[REMNSPersistentHistoryChangeTombstone hashtagLabelUUIDForChangeTracking]
  -[REMNSPersistentHistoryChangeTombstone syncActivityUUIDForChangeTracking]
  -[REMNSPersistentHistoryChangeTombstone persistentHistoryChangeTombstone]
  -[REMNSPersistentHistoryChangeTombstone setPersistentHistoryChangeTombstone:]


REMNSPersistentHistoryChange : REMChangeObject
 @property  _REMNSPersistentHistoryChangeStorage *storage
 @property  NSPersistentHistoryChange *persistentHistoryChange
 @property  REMObjectID *cachedChangedREMObjectID
 @property  REMChangeTransaction *internal_ChangeTransaction
 @property  BOOL isCoalesced
 @property  NSArray *coalescedChanges

  // class methods
  +[REMNSPersistentHistoryChange supportsSecureCoding]
  +[REMNSPersistentHistoryChange shortStringForChangeType:]
  +[REMNSPersistentHistoryChange stringForChangeType:]

  // instance methods
  -[REMNSPersistentHistoryChange tombstone]
  -[REMNSPersistentHistoryChange setStorage:]
  -[REMNSPersistentHistoryChange initWithStorage:]
  -[REMNSPersistentHistoryChange storage]
  -[REMNSPersistentHistoryChange encodeWithCoder:]
  -[REMNSPersistentHistoryChange transaction]
  -[REMNSPersistentHistoryChange changeType]
  -[REMNSPersistentHistoryChange .cxx_destruct]
  -[REMNSPersistentHistoryChange changeID]
  -[REMNSPersistentHistoryChange updatedProperties]
  -[REMNSPersistentHistoryChange isEqual:]
  -[REMNSPersistentHistoryChange changedObjectID]
  -[REMNSPersistentHistoryChange initWithCoder:]
  -[REMNSPersistentHistoryChange coalescedChanges]
  -[REMNSPersistentHistoryChange setCoalescedChanges:]
  -[REMNSPersistentHistoryChange initWithPersistentHistoryChange:]
  -[REMNSPersistentHistoryChange changedManagedObjectID]
  -[REMNSPersistentHistoryChange resolveObjectIDWithUUID:entityName:]
  -[REMNSPersistentHistoryChange copyForCoalescing]
  -[REMNSPersistentHistoryChange internal_ChangeTransaction]
  -[REMNSPersistentHistoryChange setInternal_ChangeTransaction:]
  -[REMNSPersistentHistoryChange isCoalesced]
  -[REMNSPersistentHistoryChange setIsCoalesced:]
  -[REMNSPersistentHistoryChange persistentHistoryChange]
  -[REMNSPersistentHistoryChange cachedChangedREMObjectID]
  -[REMNSPersistentHistoryChange setCachedChangedREMObjectID:]


REMChangeTransaction : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *timestamp
 @property  NSArray *changes
 @property  REMObjectID *accountID
 @property  NSString *storeID
 @property  NSString *author
 @property  REMChangeToken *token

  // class methods
  +[REMChangeTransaction supportsSecureCoding]

  // instance methods
  -[REMChangeTransaction changes]
  -[REMChangeTransaction accountID]
  -[REMChangeTransaction token]
  -[REMChangeTransaction encodeWithCoder:]
  -[REMChangeTransaction storeID]
  -[REMChangeTransaction .cxx_destruct]
  -[REMChangeTransaction author]
  -[REMChangeTransaction copyWithZone:]
  -[REMChangeTransaction timestamp]
  -[REMChangeTransaction isEqual:]
  -[REMChangeTransaction initWithCoder:]


REMFetchResultToken : NSObject <NSSecureCoding>
 @property  NSDictionary *persistentHistoryTokens

  // class methods
  +[REMFetchResultToken supportsSecureCoding]
  +[REMFetchResultToken fetchResultTokenFromDataRepresentation:error:]

  // instance methods
  -[REMFetchResultToken encodeWithCoder:]
  -[REMFetchResultToken .cxx_destruct]
  -[REMFetchResultToken dataRepresentationWithError:]
  -[REMFetchResultToken persistentHistoryTokens]
  -[REMFetchResultToken initWithPersistentHistoryTokens:]
  -[REMFetchResultToken isEqual:]
  -[REMFetchResultToken initWithCoder:]


REMChangeSet : NSObject <NSCopying, NSSecureCoding>
 @property  NSError *error
 @property  BOOL isTruncated
 @property  NSArray *inserts
 @property  NSArray *updates
 @property  NSArray *deletes
 @property  NSArray *filterByTransactionAuthorStrings
 @property  BOOL filterByTransactionAuthorsIsExclusion
 @property  NSArray *filteredTransactions
 @property  NSArray *transactions

  // class methods
  +[REMChangeSet supportsSecureCoding]
  +[REMChangeSet errorChangeSetWithError:]

  // instance methods
  -[REMChangeSet transactions]
  -[REMChangeSet isTruncated]
  -[REMChangeSet consolidateAndFilterChangesWithTransactionAuthors:isExclusion:]
  -[REMChangeSet _filterAndFlattenAndConsolidateChanges]
  -[REMChangeSet encodeWithCoder:]
  -[REMChangeSet error]
  -[REMChangeSet setFilterByTransactionAuthorsIsExclusion:]
  -[REMChangeSet .cxx_destruct]
  -[REMChangeSet lastChangeTokenForAccountID:]
  -[REMChangeSet setError:]
  -[REMChangeSet initWithError:]
  -[REMChangeSet enumerateChanges:forModelsOfClass:withBlock:]
  -[REMChangeSet applyFilterByTransactionAuthors:isExclusion:]
  -[REMChangeSet filterByTransactionAuthorStrings]
  -[REMChangeSet filteredTransactions]
  -[REMChangeSet setDeletes:]
  -[REMChangeSet setInserts:]
  -[REMChangeSet setIsTruncated:]
  -[REMChangeSet copyWithZone:]
  -[REMChangeSet initWithChangeTransactions:]
  -[REMChangeSet setUpdates:]
  -[REMChangeSet setFilterByTransactionAuthorStrings:]
  -[REMChangeSet updates]
  -[REMChangeSet setFilteredTransactions:]
  -[REMChangeSet deletes]
  -[REMChangeSet inserts]
  -[REMChangeSet isEqual:]
  -[REMChangeSet initWithCoder:]
  -[REMChangeSet filterByTransactionAuthorsIsExclusion]


REMReminderSortDescriptor : NSObject <NSSecureCoding>
 @property  long long type
 @property  BOOL ascending

  // class methods
  +[REMReminderSortDescriptor supportsSecureCoding]
  +[REMReminderSortDescriptor sortDescriptorSortingByTitleAscending:]
  +[REMReminderSortDescriptor sortDescriptorSortingByCreationDateAscending:]
  +[REMReminderSortDescriptor sortDescriptorSortingByDueDateAscending:]
  +[REMReminderSortDescriptor sortDescriptorSortingByPriorityAscending:]
  +[REMReminderSortDescriptor sortDescriptorSortingByOrderingInListAscending:]

  // instance methods
  -[REMReminderSortDescriptor ascending]
  -[REMReminderSortDescriptor encodeWithCoder:]
  -[REMReminderSortDescriptor type]
  -[REMReminderSortDescriptor isEqual:]
  -[REMReminderSortDescriptor initWithCoder:]
  -[REMReminderSortDescriptor initWithType:ascending:]


REMChangeTombstone : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *objectIdentifier
 @property  NSUUID *remObjectIdentifier
 @property  NSString *externalIdentifier
 @property  NSNumber *daIsEventOnlyContainer
 @property  NSUUID *shareeOwningListIdentifier
 @property  NSString *shareeDisplayName
 @property  NSString *shareeAddress
 @property  NSUUID *assignmentOwningReminderIdentifier
 @property  NSString *hashtagName
 @property  NSUUID *hashtagReminderIdentifier
 @property  NSUUID *hashtagLabelUUIDForChangeTracking
 @property  NSUUID *syncActivityUUIDForChangeTracking

  // class methods
  +[REMChangeTombstone supportsSecureCoding]

  // instance methods
  -[REMChangeTombstone encodeWithCoder:]
  -[REMChangeTombstone objectIdentifier]
  -[REMChangeTombstone externalIdentifier]
  -[REMChangeTombstone .cxx_destruct]
  -[REMChangeTombstone daIsEventOnlyContainer]
  -[REMChangeTombstone copyWithZone:]
  -[REMChangeTombstone isEqual:]
  -[REMChangeTombstone initWithCoder:]
  -[REMChangeTombstone shareeDisplayName]
  -[REMChangeTombstone remObjectIdentifier]
  -[REMChangeTombstone shareeOwningListIdentifier]
  -[REMChangeTombstone shareeAddress]
  -[REMChangeTombstone assignmentOwningReminderIdentifier]
  -[REMChangeTombstone hashtagName]
  -[REMChangeTombstone hashtagReminderIdentifier]
  -[REMChangeTombstone hashtagLabelUUIDForChangeTracking]
  -[REMChangeTombstone syncActivityUUIDForChangeTracking]


REMChangeObject : NSObject <NSCopying, NSSecureCoding, REMChangeCoalesceable>
 @property  REMChangeTransaction *transaction
 @property  long long changeID
 @property  REMObjectID *changedObjectID
 @property  long long changeType
 @property  REMChangeTombstone *tombstone
 @property  NSSet *updatedProperties

  // class methods
  +[REMChangeObject supportsSecureCoding]

  // instance methods
  -[REMChangeObject tombstone]
  -[REMChangeObject encodeWithCoder:]
  -[REMChangeObject transaction]
  -[REMChangeObject changeType]
  -[REMChangeObject .cxx_destruct]
  -[REMChangeObject changeID]
  -[REMChangeObject copyWithZone:]
  -[REMChangeObject updatedProperties]
  -[REMChangeObject isEqual:]
  -[REMChangeObject changedObjectID]
  -[REMChangeObject initWithCoder:]
  -[REMChangeObject coalescedChanges]
  -[REMChangeObject copyForCoalescing]
  -[REMChangeObject isCoalesced]


REMRecurrenceEnd : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *endDate
 @property  unsigned long occurrenceCount

  // class methods
  +[REMRecurrenceEnd supportsSecureCoding]
  +[REMRecurrenceEnd recurrenceEndWithEndDate:]
  +[REMRecurrenceEnd recurrenceEndWithOccurrenceCount:]

  // instance methods
  -[REMRecurrenceEnd endDate]
  -[REMRecurrenceEnd encodeWithCoder:]
  -[REMRecurrenceEnd .cxx_destruct]
  -[REMRecurrenceEnd copyWithZone:]
  -[REMRecurrenceEnd isEqual:]
  -[REMRecurrenceEnd initWithCoder:]
  -[REMRecurrenceEnd usesEndDate]
  -[REMRecurrenceEnd initWithEndDate:]
  -[REMRecurrenceEnd initWithOccurrenceCount:]
  -[REMRecurrenceEnd occurrenceCount]


REMAccountCapabilities : NSObject
 @property  BOOL supportsEventKitSync
 @property  BOOL supportsCloudKitSync
 @property  BOOL supportsCalDAVNotifications
 @property  BOOL supportsListSharees
 @property  BOOL supportsListShareesMutation
 @property  BOOL supportsMoveAcrossLists
 @property  BOOL supportsMoveAcrossSharedLists
 @property  BOOL supportsMultipleDateAlarmsOnRecurrence
 @property  long long defaultReminderPriorityLevel
 @property  BOOL supportsHandoff
 @property  BOOL supportsReminderActions
 @property  BOOL supportsCRDTs
 @property  BOOL supportsAssignments
 @property  BOOL supportsHashtags
 @property  BOOL insertsCompletedRecurrentCloneAtTail
 @property  BOOL supportsCustomSmartLists
 @property  BOOL supportsPinnedLists
 @property  BOOL supportsTextStyling
 @property  BOOL supportsDeletionByTTL
 @property  BOOL supportsSubtasks
 @property  BOOL supportsAttachments
 @property  BOOL supportsListAppearance
 @property  BOOL supportsGroups
 @property  BOOL supportsFlagged
 @property  BOOL supportsPersonTrigger
 @property  BOOL supportsLocation
 @property  BOOL supportsHourlyRecurrence
 @property  BOOL supportsTemplates

  // instance methods
  -[REMAccountCapabilities supportsListShareesMutation]
  -[REMAccountCapabilities supportsMultipleDateAlarmsOnRecurrence]
  -[REMAccountCapabilities supportsAttachments]
  -[REMAccountCapabilities supportsEventKitSync]
  -[REMAccountCapabilities defaultReminderPriorityLevel]
  -[REMAccountCapabilities supportsDeletionByTTL]
  -[REMAccountCapabilities supportsSubtasks]
  -[REMAccountCapabilities supportsPinnedLists]
  -[REMAccountCapabilities supportsCloudKitSync]
  -[REMAccountCapabilities supportsListAppearance]
  -[REMAccountCapabilities supportsHandoff]
  -[REMAccountCapabilities supportsPersonTrigger]
  -[REMAccountCapabilities supportsTemplates]
  -[REMAccountCapabilities supportsMoveAcrossLists]
  -[REMAccountCapabilities supportsLocation]
  -[REMAccountCapabilities supportsHashtags]
  -[REMAccountCapabilities supportsGroups]
  -[REMAccountCapabilities supportsReminderActions]
  -[REMAccountCapabilities supportsTextStyling]
  -[REMAccountCapabilities supportsAssignments]
  -[REMAccountCapabilities supportsMoveAcrossSharedLists]
  -[REMAccountCapabilities initWithAccountType:]
  -[REMAccountCapabilities supportsCustomSmartLists]
  -[REMAccountCapabilities supportsFlagged]
  -[REMAccountCapabilities insertsCompletedRecurrentCloneAtTail]
  -[REMAccountCapabilities supportsCRDTs]
  -[REMAccountCapabilities isEqual:]
  -[REMAccountCapabilities supportsHourlyRecurrence]
  -[REMAccountCapabilities supportsCalDAVNotifications]
  -[REMAccountCapabilities supportsListSharees]


REMSuggestedAttributesPerformer : NSObject
 @property  NSObject<OS_dispatch_queue> *queue
 @property  REMStore *store
 @property  <REMXPCSuggestedAttributesPerformer> *q_cachedXPCPerformer

  // instance methods
  -[REMSuggestedAttributesPerformer store]
  -[REMSuggestedAttributesPerformer setStore:]
  -[REMSuggestedAttributesPerformer .cxx_destruct]
  -[REMSuggestedAttributesPerformer setQueue:]
  -[REMSuggestedAttributesPerformer resultFromPerformingSwiftInvocation:parametersData:storages:error:]
  -[REMSuggestedAttributesPerformer queue]
  -[REMSuggestedAttributesPerformer initWithQueue:store:]
  -[REMSuggestedAttributesPerformer preWarmModels]
  -[REMSuggestedAttributesPerformer q_syncSuggestedAttributesPerformerWithReason:errorHandler:]
  -[REMSuggestedAttributesPerformer q_resolveSuggestedAttributesPerformerWithReason:errorHandler:]
  -[REMSuggestedAttributesPerformer q_cachedXPCPerformer]
  -[REMSuggestedAttributesPerformer setQ_cachedXPCPerformer:]


REMRemindersDataView : NSObject
 @property  REMStore *store

  // class methods
  +[REMRemindersDataView remindersFromAccountStorages:listStorages:reminderStorages:store:requestedReminderIDs:]
  +[REMRemindersDataView remindersFromAccountStorages:listStorages:reminderStorages:store:requestedStringIdentifiers:identifierSelector:]
  +[REMRemindersDataView remindersFromAccountStorages:listStorages:reminderStorages:store:]
  +[REMRemindersDataView remindersFromAccountStorages:listStorages:reminderStorages:store:showMarkedForDeleteObjects:]

  // instance methods
  -[REMRemindersDataView fetchReminderIncludingConcealedWithObjectID:error:]
  -[REMRemindersDataView fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:]
  -[REMRemindersDataView store]
  -[REMRemindersDataView fetchRemindersWithObjectIDs:error:]
  -[REMRemindersDataView fetchRemindersMatchingPredicateDescriptor:sortDescriptors:options:error:]
  -[REMRemindersDataView initWithStore:]
  -[REMRemindersDataView fetchReminderWithObjectID:error:]
  -[REMRemindersDataView fetchObjectIDsOfRemindersWithParentReminderID:includeIncomplete:includeCompleted:isUnsupported:error:]
  -[REMRemindersDataView fetchRemindersIncludingUnsupportedWithObjectIDs:error:]
  -[REMRemindersDataView fetchRemindersWithListID:includingSubtasks:error:]
  -[REMRemindersDataView .cxx_destruct]
  -[REMRemindersDataView fetchReminderWithExternalIdentifier:inList:error:]
  -[REMRemindersDataView fetchRemindersWithObjectIDs:includeConcealed:error:]
  -[REMRemindersDataView fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:]
  -[REMRemindersDataView fetchRemindersWithParentReminderIDs:error:]
  -[REMRemindersDataView fetchRemindersCountWithListID:error:]
  -[REMRemindersDataView fetchAllRemindersWithExternalIdentifier:error:]
  -[REMRemindersDataView fetchRemindersWithExternalIdentifiers:inList:error:]
  -[REMRemindersDataView fetchRemindersCountWithParentReminderID:error:]
  -[REMRemindersDataView fetchRemindersWithParentReminderID:includeUnsupported:error:]


REMRemindersDataViewInvocation_fetchByParentReminderID : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *parentReminderID
 @property  BOOL includeUnsupported

  // class methods
  +[REMRemindersDataViewInvocation_fetchByParentReminderID supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchByParentReminderID encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderID .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchByParentReminderID copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderID isEqual:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderID initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderID parentReminderID]
  -[REMRemindersDataViewInvocation_fetchByParentReminderID initWithParentReminderID:includeUnsupported:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderID includeUnsupported]


REMRemindersDataViewInvocation_fetchByListID : REMStoreInvocation <NSSecureCoding>
 @property  BOOL includingSubtasks
 @property  REMObjectID *listID

  // class methods
  +[REMRemindersDataViewInvocation_fetchByListID supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchByListID encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByListID .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchByListID copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchByListID isEqual:]
  -[REMRemindersDataViewInvocation_fetchByListID initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByListID listID]
  -[REMRemindersDataViewInvocation_fetchByListID initWithListID:includingSubtasks:]
  -[REMRemindersDataViewInvocation_fetchByListID includingSubtasks]


REMRemindersDataViewInvocation_fetchByObjectID : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *objectIDs
 @property  BOOL includeConcealedObjects

  // class methods
  +[REMRemindersDataViewInvocation_fetchByObjectID supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchByObjectID initWithObjectIDs:]
  -[REMRemindersDataViewInvocation_fetchByObjectID encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByObjectID .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchByObjectID objectIDs]
  -[REMRemindersDataViewInvocation_fetchByObjectID copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchByObjectID isEqual:]
  -[REMRemindersDataViewInvocation_fetchByObjectID initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByObjectID includeConcealedObjects]
  -[REMRemindersDataViewInvocation_fetchByObjectID setIncludeConcealedObjects:]


REMRemindersDataViewInvocation_fetchByPredicateDescriptor : REMStoreInvocation <NSSecureCoding>
 @property  REMReminderPredicateDescriptor *predicateDescriptor
 @property  NSArray *sortDescriptors
 @property  REMReminderFetchOptions *options

  // class methods
  +[REMRemindersDataViewInvocation_fetchByPredicateDescriptor supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchByPredicateDescriptor sortDescriptors]
  -[REMRemindersDataViewInvocation_fetchByPredicateDescriptor encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByPredicateDescriptor .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchByPredicateDescriptor options]
  -[REMRemindersDataViewInvocation_fetchByPredicateDescriptor copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchByPredicateDescriptor isEqual:]
  -[REMRemindersDataViewInvocation_fetchByPredicateDescriptor initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByPredicateDescriptor initWithPredicateDescriptor:sortDescriptors:options:]
  -[REMRemindersDataViewInvocation_fetchByPredicateDescriptor predicateDescriptor]


REMRemindersDataViewInvocation_fetchByParentReminderIDs : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *parentReminderIDs

  // class methods
  +[REMRemindersDataViewInvocation_fetchByParentReminderIDs supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchByParentReminderIDs encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderIDs .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchByParentReminderIDs copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderIDs isEqual:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderIDs initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderIDs initWithParentReminderIDs:]
  -[REMRemindersDataViewInvocation_fetchByParentReminderIDs parentReminderIDs]


REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *parentReminderID
 @property  BOOL includeIncomplete
 @property  BOOL includeCompleted
 @property  BOOL isUnsupported

  // class methods
  +[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID isUnsupported]
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID isEqual:]
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID parentReminderID]
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID initWithParentReminderID:includeIncomplete:includeCompleted:isUnsupported:]
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID includeIncomplete]
  -[REMRemindersDataViewInvocation_fetchReminderIDsByParentReminderID includeCompleted]


REMRemindersDataViewInvocation_fetchByExternalIdentifier : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *externalIdentifiers
 @property  REMObjectID *listObjectID

  // class methods
  +[REMRemindersDataViewInvocation_fetchByExternalIdentifier supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchByExternalIdentifier externalIdentifiers]
  -[REMRemindersDataViewInvocation_fetchByExternalIdentifier encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByExternalIdentifier .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchByExternalIdentifier copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchByExternalIdentifier isEqual:]
  -[REMRemindersDataViewInvocation_fetchByExternalIdentifier initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByExternalIdentifier initWithExternalIdentifiers:listObjectID:]
  -[REMRemindersDataViewInvocation_fetchByExternalIdentifier listObjectID]


REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *daCalendarItemUniqueIdentifiers
 @property  REMObjectID *listObjectID

  // class methods
  +[REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier isEqual:]
  -[REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier listObjectID]
  -[REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier initWithDACalendarItemUniqueIdentifiers:listObjectID:]
  -[REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier daCalendarItemUniqueIdentifiers]


REMRemindersDataViewInvocation_fetchRemindersCountByListID : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *listID

  // class methods
  +[REMRemindersDataViewInvocation_fetchRemindersCountByListID supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchRemindersCountByListID encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByListID .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByListID copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByListID isEqual:]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByListID initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByListID listID]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByListID initWithListID:]


REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *parentReminderID

  // class methods
  +[REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID encodeWithCoder:]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID .cxx_destruct]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID copyWithZone:]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID isEqual:]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID initWithCoder:]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID parentReminderID]
  -[REMRemindersDataViewInvocation_fetchRemindersCountByParentReminderID initWithParentReminderID:]


REMRemindersDataViewInvocationResult : REMStoreInvocationResult <NSSecureCoding>
 @property  NSArray *accountStorages
 @property  NSArray *listStorages
 @property  NSArray *reminderStorages
 @property  NSArray *objectIDs

  // class methods
  +[REMRemindersDataViewInvocationResult supportsSecureCoding]

  // instance methods
  -[REMRemindersDataViewInvocationResult accountStorages]
  -[REMRemindersDataViewInvocationResult encodeWithCoder:]
  -[REMRemindersDataViewInvocationResult .cxx_destruct]
  -[REMRemindersDataViewInvocationResult listStorages]
  -[REMRemindersDataViewInvocationResult objectIDs]
  -[REMRemindersDataViewInvocationResult copyWithZone:]
  -[REMRemindersDataViewInvocationResult reminderStorages]
  -[REMRemindersDataViewInvocationResult isEqual:]
  -[REMRemindersDataViewInvocationResult initWithAccountStorages:listStorages:reminderStorages:objectIDs:]
  -[REMRemindersDataViewInvocationResult initWithCoder:]


REMAssignmentsDataViewInvocation_fetchByObjectID : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *objectIDs
 @property  BOOL allowConcealedObjects

  // class methods
  +[REMAssignmentsDataViewInvocation_fetchByObjectID supportsSecureCoding]

  // instance methods
  -[REMAssignmentsDataViewInvocation_fetchByObjectID initWithObjectIDs:]
  -[REMAssignmentsDataViewInvocation_fetchByObjectID encodeWithCoder:]
  -[REMAssignmentsDataViewInvocation_fetchByObjectID .cxx_destruct]
  -[REMAssignmentsDataViewInvocation_fetchByObjectID objectIDs]
  -[REMAssignmentsDataViewInvocation_fetchByObjectID copyWithZone:]
  -[REMAssignmentsDataViewInvocation_fetchByObjectID isEqual:]
  -[REMAssignmentsDataViewInvocation_fetchByObjectID initWithCoder:]
  -[REMAssignmentsDataViewInvocation_fetchByObjectID allowConcealedObjects]
  -[REMAssignmentsDataViewInvocation_fetchByObjectID setAllowConcealedObjects:]


REMAssignmentsDataViewInvocationResult : REMStoreInvocationResult <NSSecureCoding>
 @property  NSSet *assignments

  // class methods
  +[REMAssignmentsDataViewInvocationResult supportsSecureCoding]

  // instance methods
  -[REMAssignmentsDataViewInvocationResult encodeWithCoder:]
  -[REMAssignmentsDataViewInvocationResult .cxx_destruct]
  -[REMAssignmentsDataViewInvocationResult copyWithZone:]
  -[REMAssignmentsDataViewInvocationResult initWithAssignments:]
  -[REMAssignmentsDataViewInvocationResult assignments]
  -[REMAssignmentsDataViewInvocationResult isEqual:]
  -[REMAssignmentsDataViewInvocationResult initWithCoder:]


REMHashtagsDataViewInvocation_fetchByObjectID : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *objectIDs
 @property  BOOL allowConcealedObjects

  // class methods
  +[REMHashtagsDataViewInvocation_fetchByObjectID supportsSecureCoding]

  // instance methods
  -[REMHashtagsDataViewInvocation_fetchByObjectID initWithObjectIDs:]
  -[REMHashtagsDataViewInvocation_fetchByObjectID encodeWithCoder:]
  -[REMHashtagsDataViewInvocation_fetchByObjectID .cxx_destruct]
  -[REMHashtagsDataViewInvocation_fetchByObjectID objectIDs]
  -[REMHashtagsDataViewInvocation_fetchByObjectID copyWithZone:]
  -[REMHashtagsDataViewInvocation_fetchByObjectID isEqual:]
  -[REMHashtagsDataViewInvocation_fetchByObjectID initWithCoder:]
  -[REMHashtagsDataViewInvocation_fetchByObjectID allowConcealedObjects]
  -[REMHashtagsDataViewInvocation_fetchByObjectID setAllowConcealedObjects:]


REMHashtagsDataViewInvocationResult : REMStoreInvocationResult <NSSecureCoding>
 @property  NSSet *hashtags

  // class methods
  +[REMHashtagsDataViewInvocationResult supportsSecureCoding]

  // instance methods
  -[REMHashtagsDataViewInvocationResult encodeWithCoder:]
  -[REMHashtagsDataViewInvocationResult .cxx_destruct]
  -[REMHashtagsDataViewInvocationResult initWithHashtags:]
  -[REMHashtagsDataViewInvocationResult copyWithZone:]
  -[REMHashtagsDataViewInvocationResult isEqual:]
  -[REMHashtagsDataViewInvocationResult hashtags]
  -[REMHashtagsDataViewInvocationResult initWithCoder:]


REMTemplatePublicLinkConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL shouldIncludeHashtags
 @property  BOOL shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval
 @property  BOOL shouldIncludeAlarmTriggersBasedOnLocationOrVehicle
 @property  BOOL shouldIncludeContactsHandleData

  // class methods
  +[REMTemplatePublicLinkConfiguration supportsSecureCoding]

  // instance methods
  -[REMTemplatePublicLinkConfiguration encodeWithCoder:]
  -[REMTemplatePublicLinkConfiguration copyWithZone:]
  -[REMTemplatePublicLinkConfiguration isEqual:]
  -[REMTemplatePublicLinkConfiguration initWithCoder:]
  -[REMTemplatePublicLinkConfiguration shouldIncludeHashtags]
  -[REMTemplatePublicLinkConfiguration shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval]
  -[REMTemplatePublicLinkConfiguration shouldIncludeAlarmTriggersBasedOnLocationOrVehicle]
  -[REMTemplatePublicLinkConfiguration initWithShouldIncludeHashtags:shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval:shouldIncludeAlarmTriggersBasedOnLocationOrVehicle:]
  -[REMTemplatePublicLinkConfiguration shouldIncludeContactsHandleData]


REMSmartListsDataView : NSObject
 @property  REMStore *store

  // class methods
  +[REMSmartListsDataView smartListsFromSmartListStorages:accountStorages:parentListStorages:store:]

  // instance methods
  -[REMSmartListsDataView fetchCustomSmartListsWithError:]
  -[REMSmartListsDataView store]
  -[REMSmartListsDataView initWithStore:]
  -[REMSmartListsDataView fetchCustomSmartListWithObjectID:error:]
  -[REMSmartListsDataView .cxx_destruct]
  -[REMSmartListsDataView fetchNonCustomSmartListWithSmartListType:createIfNeeded:error:]
  -[REMSmartListsDataView fetchCustomSmartListsInAccount:error:]
  -[REMSmartListsDataView fetchCustomSmartListsInGroup:error:]


REMSmartListsDataViewInvocation_fetchSmartList : REMStoreInvocation <NSSecureCoding>
 @property  NSString *smartListType
 @property  REMObjectID *objectID
 @property  BOOL createIfNeeded

  // class methods
  +[REMSmartListsDataViewInvocation_fetchSmartList supportsSecureCoding]

  // instance methods
  -[REMSmartListsDataViewInvocation_fetchSmartList objectID]
  -[REMSmartListsDataViewInvocation_fetchSmartList createIfNeeded]
  -[REMSmartListsDataViewInvocation_fetchSmartList encodeWithCoder:]
  -[REMSmartListsDataViewInvocation_fetchSmartList .cxx_destruct]
  -[REMSmartListsDataViewInvocation_fetchSmartList copyWithZone:]
  -[REMSmartListsDataViewInvocation_fetchSmartList smartListType]
  -[REMSmartListsDataViewInvocation_fetchSmartList isEqual:]
  -[REMSmartListsDataViewInvocation_fetchSmartList initWithCoder:]
  -[REMSmartListsDataViewInvocation_fetchSmartList initWithSmartListType:objectID:createIfNeeded:]
  -[REMSmartListsDataViewInvocation_fetchSmartList setCreateIfNeeded:]


REMSmartListsDataViewInvocation_fetchAllCustomSmartLists : REMStoreInvocation <NSSecureCoding>
  // class methods
  +[REMSmartListsDataViewInvocation_fetchAllCustomSmartLists supportsSecureCoding]

  // instance methods
  -[REMSmartListsDataViewInvocation_fetchAllCustomSmartLists copyWithZone:]
  -[REMSmartListsDataViewInvocation_fetchAllCustomSmartLists isEqual:]


REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *accountObjectID

  // class methods
  +[REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount supportsSecureCoding]

  // instance methods
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount encodeWithCoder:]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount .cxx_destruct]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount accountObjectID]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount copyWithZone:]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount initWithParentAccountObjectID:]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount isEqual:]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInAccount initWithCoder:]


REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *groupObjectID

  // class methods
  +[REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup supportsSecureCoding]

  // instance methods
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup encodeWithCoder:]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup .cxx_destruct]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup copyWithZone:]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup isEqual:]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup initWithCoder:]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup initWithParentGroupObjectID:]
  -[REMSmartListsDataViewInvocation_fetchCustomSmartListsInGroup groupObjectID]


REMSmartListsDataViewInvocationResult : REMStoreInvocationResult <NSSecureCoding>
 @property  NSArray *smartListStorages
 @property  NSDictionary *accountStorages
 @property  NSDictionary *parentListStorages

  // class methods
  +[REMSmartListsDataViewInvocationResult supportsSecureCoding]

  // instance methods
  -[REMSmartListsDataViewInvocationResult accountStorages]
  -[REMSmartListsDataViewInvocationResult encodeWithCoder:]
  -[REMSmartListsDataViewInvocationResult smartListStorages]
  -[REMSmartListsDataViewInvocationResult .cxx_destruct]
  -[REMSmartListsDataViewInvocationResult parentListStorages]
  -[REMSmartListsDataViewInvocationResult copyWithZone:]
  -[REMSmartListsDataViewInvocationResult initWithSmartListStorages:accountStorages:parentListStorages:]
  -[REMSmartListsDataViewInvocationResult initWithSmartListStorages:]
  -[REMSmartListsDataViewInvocationResult isEqual:]
  -[REMSmartListsDataViewInvocationResult initWithCoder:]


REMDAChangeTrackingHelper : NSObject
 @property  REMChangeSet *changeSet
 @property  REMChangeToken *sinceToken
 @property  REMChangeToken *upToToken
 @property  REMStore *remStore
 @property  REMChangeTracking *changeTracking
 @property  REMObjectID *cached_remAccountObjectID
 @property  NSMutableDictionary *cached_insertedModelObjectResultsByModelClassName
 @property  NSMutableDictionary *cached_updatedModelObjectResultsByModelClassName
 @property  REMChangeToken *cached_currentChangeToken
 @property  REMChangeTrackingState *cached_currentTrackingState
 @property  REMChangeSet *_debug_mockChangeSet
 @property  NSArray *entityNames
 @property  NSString *clientName
 @property  <REMDAAccountProviding> *account

  // class methods
  +[REMDAChangeTrackingHelper shouldIgnoreChangeOfModelClassProperties:withChangeObject:]

  // instance methods
  -[REMDAChangeTrackingHelper account]
  -[REMDAChangeTrackingHelper cached_updatedModelObjectResultsByModelClassName]
  -[REMDAChangeTrackingHelper setCached_currentTrackingState:]
  -[REMDAChangeTrackingHelper _rem_accountObjectID]
  -[REMDAChangeTrackingHelper entityNames]
  -[REMDAChangeTrackingHelper _changeTypeMaskFromChangeType:]
  -[REMDAChangeTrackingHelper setChangeSet:]
  -[REMDAChangeTrackingHelper _changedModelObjectsOfClass:ofChangeTypes:shouldOutputFetchedModels:]
  -[REMDAChangeTrackingHelper _debug_currentChangeTokenWithError:]
  -[REMDAChangeTrackingHelper changeTracking]
  -[REMDAChangeTrackingHelper setCached_updatedModelObjectResultsByModelClassName:]
  -[REMDAChangeTrackingHelper setSinceToken:]
  -[REMDAChangeTrackingHelper currentChangeTokenWithError:]
  -[REMDAChangeTrackingHelper compareCurrentChangeTokenToLastConsumedWithResult:error:]
  -[REMDAChangeTrackingHelper setClientName:]
  -[REMDAChangeTrackingHelper fetchChangesSinceLastConsumed]
  -[REMDAChangeTrackingHelper setEntityNames:]
  -[REMDAChangeTrackingHelper clearCachedModelObjectResultsForModelClass:]
  -[REMDAChangeTrackingHelper _handleIsConcealedUpdatesInChange:ofModelClass:forClientID:concealedHandler:unconcealedHandler:]
  -[REMDAChangeTrackingHelper .cxx_destruct]
  -[REMDAChangeTrackingHelper cached_currentTrackingState]
  -[REMDAChangeTrackingHelper setRemStore:]
  -[REMDAChangeTrackingHelper _debug_resetCaches]
  -[REMDAChangeTrackingHelper changeSet]
  -[REMDAChangeTrackingHelper upToToken]
  -[REMDAChangeTrackingHelper _cachedModeObjectResultsForModelClass:changeType:]
  -[REMDAChangeTrackingHelper setCached_insertedModelObjectResultsByModelClassName:]
  -[REMDAChangeTrackingHelper changedModelObjectsOfModelClass:ofChangeType:]
  -[REMDAChangeTrackingHelper setCached_currentChangeToken:]
  -[REMDAChangeTrackingHelper markChangesConsumed]
  -[REMDAChangeTrackingHelper setUpToToken:]
  -[REMDAChangeTrackingHelper _debug_setMockChangeSet:]
  -[REMDAChangeTrackingHelper cached_remAccountObjectID]
  -[REMDAChangeTrackingHelper _fetchModelObjectsOfClass:withObjectIDs:]
  -[REMDAChangeTrackingHelper _setCachedModeObjectResults:forModelClass:changeType:]
  -[REMDAChangeTrackingHelper clientName]
  -[REMDAChangeTrackingHelper setChangeTracking:]
  -[REMDAChangeTrackingHelper remStore]
  -[REMDAChangeTrackingHelper initWithREMDAAccount:clientName:withREMStore:entityNames:]
  -[REMDAChangeTrackingHelper _rem_changeTracking:]
  -[REMDAChangeTrackingHelper cached_insertedModelObjectResultsByModelClassName]
  -[REMDAChangeTrackingHelper cached_currentChangeToken]
  -[REMDAChangeTrackingHelper initWithREMDAAccount:clientName:withREMStore:]
  -[REMDAChangeTrackingHelper sinceToken]
  -[REMDAChangeTrackingHelper markChangesConsumed:]
  -[REMDAChangeTrackingHelper changedIdentifiersOfModelClass:ofChangeType:]
  -[REMDAChangeTrackingHelper set_debug_mockChangeSet:]
  -[REMDAChangeTrackingHelper fetchAndInitializeChangeTrackingStateIfNeeded]
  -[REMDAChangeTrackingHelper setCached_remAccountObjectID:]
  -[REMDAChangeTrackingHelper _fetchModelObjectOfClass:withObjectID:includeConcealedObjects:]
  -[REMDAChangeTrackingHelper _debug_mockChangeSet]


REMDAShareeTombstone : NSObject <REMDAChangedIdentifierResult>
 @property  NSUUID *objectIdentifier
 @property  NSUUID *owningListIdentifier
 @property  NSString *displayName
 @property  NSString *address
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[REMDAShareeTombstone objectIdentifier]
  -[REMDAShareeTombstone setAddress:]
  -[REMDAShareeTombstone .cxx_destruct]
  -[REMDAShareeTombstone setDisplayName:]
  -[REMDAShareeTombstone address]
  -[REMDAShareeTombstone displayName]
  -[REMDAShareeTombstone setObjectIdentifier:]
  -[REMDAShareeTombstone owningListIdentifier]
  -[REMDAShareeTombstone setOwningListIdentifier:]


REMDAAssignmentTombstone : NSObject <REMDAChangedIdentifierResult>
 @property  NSUUID *objectIdentifier
 @property  NSUUID *owningReminderIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[REMDAAssignmentTombstone objectIdentifier]
  -[REMDAAssignmentTombstone .cxx_destruct]
  -[REMDAAssignmentTombstone setObjectIdentifier:]
  -[REMDAAssignmentTombstone owningReminderIdentifier]
  -[REMDAAssignmentTombstone setOwningReminderIdentifier:]


REMDAHashtagTombstone : NSObject <REMDAChangedIdentifierResult>
 @property  NSUUID *objectIdentifier
 @property  NSString *name
 @property  NSUUID *reminderIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[REMDAHashtagTombstone objectIdentifier]
  -[REMDAHashtagTombstone .cxx_destruct]
  -[REMDAHashtagTombstone setName:]
  -[REMDAHashtagTombstone name]
  -[REMDAHashtagTombstone setObjectIdentifier:]
  -[REMDAHashtagTombstone reminderIdentifier]
  -[REMDAHashtagTombstone setReminderIdentifier:]


REMEventKitBridgingDataView : NSObject
 @property  REMStore *store

  // instance methods
  -[REMEventKitBridgingDataView store]
  -[REMEventKitBridgingDataView initWithStore:]
  -[REMEventKitBridgingDataView fetchListsWithError:]
  -[REMEventKitBridgingDataView .cxx_destruct]
  -[REMEventKitBridgingDataView fetchRemindersWithListIDs:error:]
  -[REMEventKitBridgingDataView fetchIncompleteRemindersWithDueDateFrom:to:withListIDs:error:]
  -[REMEventKitBridgingDataView fetchCompletedRemindersWithCompletionDateFrom:to:withListIDs:error:]


REMEventKitBridgingDataViewInvocation_fetchLists : REMStoreInvocation <NSSecureCoding>
  // class methods
  +[REMEventKitBridgingDataViewInvocation_fetchLists supportsSecureCoding]

  // instance methods
  -[REMEventKitBridgingDataViewInvocation_fetchLists encodeWithCoder:]
  -[REMEventKitBridgingDataViewInvocation_fetchLists copyWithZone:]
  -[REMEventKitBridgingDataViewInvocation_fetchLists isEqual:]
  -[REMEventKitBridgingDataViewInvocation_fetchLists init]
  -[REMEventKitBridgingDataViewInvocation_fetchLists initWithCoder:]


REMEventKitBridgingDataViewInvocation_fetchReminders : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *listIDs

  // class methods
  +[REMEventKitBridgingDataViewInvocation_fetchReminders supportsSecureCoding]

  // instance methods
  -[REMEventKitBridgingDataViewInvocation_fetchReminders encodeWithCoder:]
  -[REMEventKitBridgingDataViewInvocation_fetchReminders .cxx_destruct]
  -[REMEventKitBridgingDataViewInvocation_fetchReminders copyWithZone:]
  -[REMEventKitBridgingDataViewInvocation_fetchReminders isEqual:]
  -[REMEventKitBridgingDataViewInvocation_fetchReminders initWithCoder:]
  -[REMEventKitBridgingDataViewInvocation_fetchReminders initWithListIDs:]
  -[REMEventKitBridgingDataViewInvocation_fetchReminders listIDs]


REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *listIDs
 @property  NSDate *startDate
 @property  NSDate *endDate

  // class methods
  +[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate supportsSecureCoding]

  // instance methods
  -[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate endDate]
  -[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate encodeWithCoder:]
  -[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate .cxx_destruct]
  -[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate copyWithZone:]
  -[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate startDate]
  -[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate isEqual:]
  -[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate initWithCoder:]
  -[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate listIDs]
  -[REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate initWithListIDs:startDate:endDate:]


REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *listIDs
 @property  NSDate *startDate
 @property  NSDate *endDate

  // class methods
  +[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate supportsSecureCoding]

  // instance methods
  -[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate endDate]
  -[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate encodeWithCoder:]
  -[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate .cxx_destruct]
  -[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate copyWithZone:]
  -[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate startDate]
  -[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate isEqual:]
  -[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate initWithCoder:]
  -[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate listIDs]
  -[REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate initWithListIDs:startDate:endDate:]


REMError : NSObject
  // class methods
  +[REMError errorFromErrors:]
  +[REMError notSupportedError]
  +[REMError validationErrorMoveReminderFromList:toList:inAccount:]
  +[REMError validationErrorMoveFromAccount:toAccount:objectID:]
  +[REMError noSuchObjectErrorWithObjectID:]
  +[REMError validationErrorUndeleteHashtagFromAnotherReminder:expectedReminderID:]
  +[REMError validationErrorSubtaskAndParentNotOnSameList:parentReminderID:]
  +[REMError mismatchedObjectIDWithObjectID:expected:]
  +[REMError internalErrorWithDebugDescription:]
  +[REMError validationErrorRemoveAccountBeingActivated:]
  +[REMError catchObjCException:error:]
  +[REMError unexpectedNilPropertyWithClass:property:]
  +[REMError validationErrorDifferentZoneObjectID:zoneOwnerName:parentObjectID:parentZoneOwnerName:]
  +[REMError _errorWithCode:underlyingError:]
  +[REMError accountStoreMissingError:]
  +[REMError validationErrorListHasNoAccount:]
  +[REMError invalidParameterErrorWithDescription:]
  +[REMError unexpectedError]
  +[REMError cancelledError]
  +[REMError unauthorizedErrorWithMissingEntitlement:requestedAccessLevel:currentAccesslevel:]
  +[REMError nullifiedRelationshipErrorWithRelationshipName:]
  +[REMError babySatErrorWithOperationName:]
  +[REMError validationErrorNotCloudKitAccount:]
  +[REMError noSuchObjectErrorWithExternalIdentifier:]
  +[REMError retryLaterErrorWithInterval:]
  +[REMError validationErrorNestedSubtask:parentReminderID:]
  +[REMError errorSanitizedForXPCFromError:]
  +[REMError isNoSuchObjectError:forObjectID:]
  +[REMError unauthorizedErrorWithMissingEntitlement:]
  +[REMError throttledErrorWithRemainingTimeInterval:]
  +[REMError constraintConflictWithIdentifier:constraint:]
  +[REMError unexpectedNilPropertyWithObjectID:property:]
  +[REMError _errorSanitizedForXPCFromError:]
  +[REMError noSuchObjectErrorWithDACalendarItemUniqueIdentifier:]
  +[REMError _isCoreDataError:]
  +[REMError tooManyLoadedStoresError]
  +[REMError noSuchSmartListErrorWithSmartListType:]
  +[REMError validationErrorMoveAcrossAccount:]
  +[REMError noPrimaryActiveCloudKitAccountError]
  +[REMError validationErrorRemoveAccountBeingInserted:]
  +[REMError xpcPerformerUnavailableErrorWithDescription:]
  +[REMError saveErrorWithCoreDataError:]
  +[REMError internetNotReachableError]


REMAssignment : NSObject <REMDAChangeTrackableFetchableModel, REMDAChangedModelObjectResult, _REMDAChangeTrackableModel, NSSecureCoding, NSCopying, REMObjectIDProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  NSString *externalIdentifierForMarkedForDeletionObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSDate *assignedDate
 @property  BOOL _debug_cdAssigneeLinked
 @property  BOOL _debug_cdOriginatorLinked
 @property  long long status
 @property  REMObjectID *assigneeID
 @property  REMObjectID *originatorID
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  REMObjectID *reminderID
 @property  REMObjectID *remObjectID

  // class methods
  +[REMAssignment supportsSecureCoding]
  +[REMAssignment rem_DA_supportsConcealedObjects]
  +[REMAssignment newObjectID]
  +[REMAssignment cdEntityName]
  +[REMAssignment isChangeTrackableModel]
  +[REMAssignment orderValueWithAssignedDate:objectIdentifier:]
  +[REMAssignment rem_DA_deletedKeyFromConcealedModelObjectBlock]
  +[REMAssignment objectIDWithUUID:]
  +[REMAssignment nullifiedOriginatorAssignmentWithObjectID:accountID:reminderID:assigneeID:status:assignedDate:]
  +[REMAssignment rem_DA_fetchByObjectIDBlock]
  +[REMAssignment rem_DA_supportsFetching]
  +[REMAssignment rem_DA_deletedKeyFromTombstoneBlock]
  +[REMAssignment rem_DA_fetchByObjectIDsBlock]
  +[REMAssignment isChangeTrackableFetchableModel]
  +[REMAssignment rem_DA_propertiesAffectingIsConcealed]

  // instance methods
  -[REMAssignment objectID]
  -[REMAssignment remObjectID]
  -[REMAssignment accountID]
  -[REMAssignment encodeWithCoder:]
  -[REMAssignment status]
  -[REMAssignment .cxx_destruct]
  -[REMAssignment copyWithZone:]
  -[REMAssignment isEqual:]
  -[REMAssignment initWithCoder:]
  -[REMAssignment orderValue]
  -[REMAssignment assigneeID]
  -[REMAssignment reminderID]
  -[REMAssignment originatorID]
  -[REMAssignment initWithObjectID:accountID:reminderID:assigneeID:originatorID:status:]
  -[REMAssignment initWithObjectID:accountID:reminderID:assigneeID:originatorID:status:assignedDate:]
  -[REMAssignment isEqualToAssignment:]
  -[REMAssignment isOriginatorNullified]
  -[REMAssignment assignedDate]
  -[REMAssignment setAssignedDate:]
  -[REMAssignment _debug_cdAssigneeLinked]
  -[REMAssignment set_debug_cdAssigneeLinked:]
  -[REMAssignment _debug_cdOriginatorLinked]
  -[REMAssignment set_debug_cdOriginatorLinked:]


REMResolutionToken : NSObject <NSSecureCoding, NSCopying>
 @property  long long counter
 @property  double modificationTime
 @property  NSUUID *replicaID

  // class methods
  +[REMResolutionToken supportsSecureCoding]
  +[REMResolutionToken resolutionTokenWithJSONObject:]

  // instance methods
  -[REMResolutionToken encodeWithCoder:]
  -[REMResolutionToken compare:]
  -[REMResolutionToken .cxx_destruct]
  -[REMResolutionToken setCounter:]
  -[REMResolutionToken setModificationTime:]
  -[REMResolutionToken update]
  -[REMResolutionToken copyWithZone:]
  -[REMResolutionToken modificationTime]
  -[REMResolutionToken isEqual:]
  -[REMResolutionToken init]
  -[REMResolutionToken counter]
  -[REMResolutionToken initWithCoder:]
  -[REMResolutionToken replicaID]
  -[REMResolutionToken initWithCounter:modificationTime:replicaID:]
  -[REMResolutionToken initWithDefaultValue]
  -[REMResolutionToken setReplicaID:]


REMRadarUtilities : NSObject
  // class methods
  +[REMRadarUtilities promptUserToFileBugWithAlertMessage:bugTitle:bugDescription:]
  +[REMRadarUtilities createRadarWithTitle:description:]


_REMInProgressSaveRequestsContainer : NSObject
 @property  NSMutableArray *inProgressSaveRequests

  // instance methods
  -[_REMInProgressSaveRequestsContainer inProgressSaveRequests]
  -[_REMInProgressSaveRequestsContainer latestSaveInProgressAccount:]
  -[_REMInProgressSaveRequestsContainer _latestSaveInProgressListForObjectID:fallbackAccount:fallbackParentList:saveRequest:]
  -[_REMInProgressSaveRequestsContainer _latestSaveInProgressAccountForObjectID:saveRequest:]
  -[_REMInProgressSaveRequestsContainer .cxx_destruct]
  -[_REMInProgressSaveRequestsContainer latestSaveInProgressList:]
  -[_REMInProgressSaveRequestsContainer saveRequestSaveDidFinish:]
  -[_REMInProgressSaveRequestsContainer _firstMatchInSaveRequests:]
  -[_REMInProgressSaveRequestsContainer latestSaveInProgressReminderForReminderChangeItem:]
  -[_REMInProgressSaveRequestsContainer _latestSaveInProgressReminderForObjectID:fallbackAccount:fallbackList:fallbackParentList:fallbackParentReminder:saveRequest:]
  -[_REMInProgressSaveRequestsContainer saveRequestSaveDidStart:]
  -[_REMInProgressSaveRequestsContainer latestSaveInProgressReminder:]
  -[_REMInProgressSaveRequestsContainer init]
  -[_REMInProgressSaveRequestsContainer setInProgressSaveRequests:]


REMDatabaseMigrationAccountInfo : NSObject
 @property  NSString *identifier
 @property  NSString *name
 @property  long long type

  // instance methods
  -[REMDatabaseMigrationAccountInfo identifier]
  -[REMDatabaseMigrationAccountInfo type]
  -[REMDatabaseMigrationAccountInfo .cxx_destruct]
  -[REMDatabaseMigrationAccountInfo isCloudKit]
  -[REMDatabaseMigrationAccountInfo name]
  -[REMDatabaseMigrationAccountInfo initWithAccountType:identifier:name:]


REMDatabaseMigrationContext : NSObject
 @property  BOOL isDatabaseMigrated
 @property  REMStoreContainerToken *containerToken
 @property  REMStore *cachedStore
 @property  NSDate *migrationStartDate
 @property  BOOL hasPerformedEnsureAccountsExist
 @property  NSString *lastReportedErrorIdentifier
 @property  unsigned long lastReportedErrorStage
 @property  NSError *lastReportedError
 @property  BOOL shouldDeleteMigratedData

  // instance methods
  -[REMDatabaseMigrationContext ensureAccountsExist:error:]
  -[REMDatabaseMigrationContext setHasPerformedEnsureAccountsExist:]
  -[REMDatabaseMigrationContext lastReportedErrorStage]
  -[REMDatabaseMigrationContext setContainerToken:]
  -[REMDatabaseMigrationContext _cleanLocalDatabases:]
  -[REMDatabaseMigrationContext lastReportedErrorIdentifier]
  -[REMDatabaseMigrationContext setMigrationStartDate:]
  -[REMDatabaseMigrationContext ensureAccountsExist:]
  -[REMDatabaseMigrationContext reportMigrationDidFinishWithSuccess:]
  -[REMDatabaseMigrationContext dealloc]
  -[REMDatabaseMigrationContext setLastReportedErrorStage:]
  -[REMDatabaseMigrationContext hasPerformedEnsureAccountsExist]
  -[REMDatabaseMigrationContext .cxx_destruct]
  -[REMDatabaseMigrationContext setCachedStore:]
  -[REMDatabaseMigrationContext lastReportedError]
  -[REMDatabaseMigrationContext initWithSandboxDatabaseEnabled:]
  -[REMDatabaseMigrationContext containerToken]
  -[REMDatabaseMigrationContext setLastReportedErrorIdentifier:]
  -[REMDatabaseMigrationContext ensureAccountsExistWithMigrationAccountInfos:error:]
  -[REMDatabaseMigrationContext isDatabaseMigrated]
  -[REMDatabaseMigrationContext reportMigrationErrorWithIdentifier:atStage:error:objectLocator:]
  -[REMDatabaseMigrationContext _postMigrationLocalAccountCleanup]
  -[REMDatabaseMigrationContext shouldDeleteMigratedData]
  -[REMDatabaseMigrationContext setIsDatabaseMigrated:]
  -[REMDatabaseMigrationContext reportMigrationWillBegin]
  -[REMDatabaseMigrationContext migrationStartDate]
  -[REMDatabaseMigrationContext setShouldDataAccessStopSyncingReminders:]
  -[REMDatabaseMigrationContext remStore]
  -[REMDatabaseMigrationContext _migrationAccountInfosFromDEPRECATEDInfoDictionaryList:]
  -[REMDatabaseMigrationContext cachedStore]
  -[REMDatabaseMigrationContext destroySandboxContainerIfNecessary]
  -[REMDatabaseMigrationContext _diagnosticReportWithStage:failureIdentifier:error:]
  -[REMDatabaseMigrationContext setLastReportedError:]
  -[REMDatabaseMigrationContext init]


REMFetchResult : NSObject <NSSecureCoding>
 @property  long long type
 @property  long long count
 @property  NSArray *requestedObjectIDs
 @property  NSArray *fetchedAccountStorages
 @property  NSArray *fetchedListStorages
 @property  NSArray *fetchedReminderStorages
 @property  REMFetchMetadata *metadata
 @property  REMFetchResultToken *fetchResultToken

  // class methods
  +[REMFetchResult supportsSecureCoding]

  // instance methods
  -[REMFetchResult initWithCount:]
  -[REMFetchResult encodeWithCoder:]
  -[REMFetchResult type]
  -[REMFetchResult .cxx_destruct]
  -[REMFetchResult initWithType:]
  -[REMFetchResult count]
  -[REMFetchResult setType:]
  -[REMFetchResult metadata]
  -[REMFetchResult initWithCoder:]
  -[REMFetchResult initWithMetadata:]
  -[REMFetchResult initWithAccountStorages:listStorages:reminderStorages:requestedObjectIDs:metadata:]
  -[REMFetchResult initWithAccountStorages:]
  -[REMFetchResult initWithListStorages:]
  -[REMFetchResult initWithReminderStorages:]
  -[REMFetchResult initWithRequestedObjectIDs:]
  -[REMFetchResult requestedObjectIDs]
  -[REMFetchResult fetchedAccountStorages]
  -[REMFetchResult fetchedListStorages]
  -[REMFetchResult fetchedReminderStorages]
  -[REMFetchResult fetchResultToken]
  -[REMFetchResult setFetchResultToken:]


REMAccount : NSObject <REMPersonIDProviding, REMObjectIDProviding, REMExternalSyncMetadataProviding, REMSupportedVersionProviding>
 @property  BOOL markedForRemoval
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  NSSet *listIDsToUndelete
 @property  NSSet *smartListIDsToUndelete
 @property  BOOL listsDADisplayOrderChanged
 @property  BOOL debugSyncDisabled
 @property  REMAccountTemplatesContext *templatesContext
 @property  REMStore *store
 @property  REMAccountStorage *storage
 @property  REMAccountCapabilities *capabilities
 @property  NSString *displayName
 @property  REMCRMergeableOrderedSet *listIDsMergeableOrdering
 @property  NSData *listIDsMergeableOrderingData
 @property  NSOrderedSet *listIDsOrdering
 @property  long long type
 @property  BOOL inactive
 @property  BOOL didChooseToMigrate
 @property  BOOL didChooseToMigrateLocally
 @property  BOOL didFinishMigration
 @property  long long persistenceCloudSchemaVersion
 @property  NSString *daConstraintsDescriptionPath
 @property  BOOL daAllowsCalendarAddDeleteModify
 @property  BOOL daSupportsPhoneNumbers
 @property  BOOL daSupportsSharedCalendars
 @property  BOOL daWasMigrated
 @property  BOOL supportsSharingLists
 @property  REMAccountGroupContext *groupContext
 @property  REMObjectID *objectID
 @property  NSString *name
 @property  NSString *personID
 @property  NSData *personIDSalt
 @property  REMObjectID *remObjectID
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMAccount newObjectID]
  +[REMAccount localAccountID]
  +[REMAccount cdEntityName]
  +[REMAccount canCopyReminderLosslesslyFromAccountWithType:toAccountWithType:accountTypeHost:]
  +[REMAccount localInternalAccountID]
  +[REMAccount _accountTypeMaskWithBitMask:]
  +[REMAccount isCloudBasedAccountType:]
  +[REMAccount objectIDWithUUID:]

  // instance methods
  -[REMAccount setValue:forUndefinedKey:]
  -[REMAccount setMarkedForRemoval:]
  -[REMAccount fetchCustomSmartListsWithError:]
  -[REMAccount optionalObjectID]
  -[REMAccount initWithStore:storage:]
  -[REMAccount valueForUndefinedKey:]
  -[REMAccount accountTypeHost]
  -[REMAccount remObjectID]
  -[REMAccount markedForRemoval]
  -[REMAccount isUnsupported]
  -[REMAccount daSupportsPhoneNumbers]
  -[REMAccount shouldUseExternalIdentifierAsDeletionKey]
  -[REMAccount supportsSharingLists]
  -[REMAccount store]
  -[REMAccount externalIdentifierForMarkedForDeletionObject]
  -[REMAccount storage]
  -[REMAccount setStore:]
  -[REMAccount fetchListsWithError:]
  -[REMAccount fetchListsIncludingSpecialContainersWithError:]
  -[REMAccount respondsToSelector:]
  -[REMAccount .cxx_destruct]
  -[REMAccount MCIsManagedWithResultPtr:error:]
  -[REMAccount templatesContext]
  -[REMAccount capabilities]
  -[REMAccount canCopyReminderLosslesslyToAccount:]
  -[REMAccount listIDsOrdering]
  -[REMAccount forwardingTargetForSelector:]
  -[REMAccount fetchListIncludingSpecialContainerWithExternalIdentifier:error:]
  -[REMAccount setCapabilities:]
  -[REMAccount groupContext]
  -[REMAccount isConsideredEmptyWithResultPtr:withError:]
  -[REMAccount isEqual:]


REMAccountGroupContext : NSObject
 @property  REMAccount *account

  // instance methods
  -[REMAccountGroupContext account]
  -[REMAccountGroupContext initWithAccount:]
  -[REMAccountGroupContext setAccount:]
  -[REMAccountGroupContext .cxx_destruct]
  -[REMAccountGroupContext fetchGroupsWithError:]


REMAccountTemplatesContext : NSObject
 @property  REMAccount *account

  // instance methods
  -[REMAccountTemplatesContext account]
  -[REMAccountTemplatesContext initWithAccount:]
  -[REMAccountTemplatesContext setAccount:]
  -[REMAccountTemplatesContext .cxx_destruct]
  -[REMAccountTemplatesContext fetchTemplatesWithError:]


REMAccountTypeHost : NSObject
 @property  long long type
 @property  REMObjectID *accountObjectID

  // instance methods
  -[REMAccountTypeHost internalDescription]
  -[REMAccountTypeHost isExchange]
  -[REMAccountTypeHost type]
  -[REMAccountTypeHost isLocalInternal]
  -[REMAccountTypeHost isValid]
  -[REMAccountTypeHost isPrimaryCloudKit]
  -[REMAccountTypeHost .cxx_destruct]
  -[REMAccountTypeHost initWithType:]
  -[REMAccountTypeHost accountObjectID]
  -[REMAccountTypeHost isCloudKit]
  -[REMAccountTypeHost isCalDav]
  -[REMAccountTypeHost _accountType]
  -[REMAccountTypeHost isLocal]
  -[REMAccountTypeHost isNonPrimaryCloudKit]
  -[REMAccountTypeHost isEqual:]
  -[REMAccountTypeHost isCloudBased]


REMReplicaIDHelper : NSObject <REMReplicaManagerClient>
 @property  REMReplicaIDSource *replicaIDSource
 @property  <REMReplicaIDHelperOwner> *owner
 @property  NSUUID *acquiredReplicaUUID
 @property  <REMReplicaManagerProviding> *lazilyCachedReplicaManagerProvider
 @property  REMReplicaManager *replicaManager
 @property  <REMReplicaClockProviding> *replicaClockProvider
 @property  NSString *crdtID
 @property  NSUUID *replicaUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[REMReplicaIDHelper replicaUUIDForCreation]
  +[REMReplicaIDHelper nonEditingReplicaUUID]

  // instance methods
  -[REMReplicaIDHelper owner]
  -[REMReplicaIDHelper setOwner:]
  -[REMReplicaIDHelper dealloc]
  -[REMReplicaIDHelper .cxx_destruct]
  -[REMReplicaIDHelper replicaIDSource]
  -[REMReplicaIDHelper setReplicaIDSource:]
  -[REMReplicaIDHelper clockElementListForReplicaUUID:]
  -[REMReplicaIDHelper crdtID]
  -[REMReplicaIDHelper replicaUUID]
  -[REMReplicaIDHelper initWithReplicaIDSource:owner:replicaClockProvider:]
  -[REMReplicaIDHelper willEdit]
  -[REMReplicaIDHelper didCopy]
  -[REMReplicaIDHelper didSerialize]
  -[REMReplicaIDHelper replicaManager]
  -[REMReplicaIDHelper replicaClockProvider]
  -[REMReplicaIDHelper setReplicaClockProvider:]
  -[REMReplicaIDHelper acquiredReplicaUUID]
  -[REMReplicaIDHelper setAcquiredReplicaUUID:]
  -[REMReplicaIDHelper lazilyCachedReplicaManagerProvider]
  -[REMReplicaIDHelper setLazilyCachedReplicaManagerProvider:]


REMDistributedEvaluationCollectionOptions : NSObject <NSSecureCoding>
 @property  BOOL includeListNames
 @property  BOOL includeReminderTitles
 @property  BOOL includeListNameFuzzedEmbeddings
 @property  BOOL includeReminderTitleFuzzedEmbeddings
 @property  BOOL includeSystemLanguage
 @property  BOOL includeSystemTimezone
 @property  BOOL includeAccountType
 @property  BOOL includeListGroupInfo
 @property  BOOL includeReminderTitleSaltedHash
 @property  BOOL includeDates
 @property  BOOL includeDayOfWeek
 @property  BOOL includeRecurrenceInfo
 @property  BOOL includeLocationInfo
 @property  BOOL includeAttachmentUTIs
 @property  BOOL includeRemindMeWhenMessagingInfo
 @property  BOOL includeAlarmDates
 @property  BOOL includeSubtaskInfo
 @property  BOOL includeUserActivityInfo
 @property  BOOL includeIsFlagged
 @property  BOOL includePriority
 @property  BOOL relevantWordTagsIncludeOtherWord
 @property  BOOL includeReminderTitleCategoryFilteredStopWords
 @property  BOOL includeReminderTitleCategoryUniversalGrammar
 @property  BOOL includeReminderTitleCategorySentence2Vec
 @property  double reminderTitleCategoryDistanceTolerance
 @property  NSURL *reminderTitleCategoryEmbeddingURL
 @property  unsigned long dateResolutionInSeconds
 @property  unsigned long creationDateWithinDays

  // class methods
  +[REMDistributedEvaluationCollectionOptions supportsSecureCoding]
  +[REMDistributedEvaluationCollectionOptions optionsWithDefaultValues]
  +[REMDistributedEvaluationCollectionOptions optionsWithEverythingOff]
  +[REMDistributedEvaluationCollectionOptions optionsFromJSONRepresentation:attachmentURLs:error:]
  +[REMDistributedEvaluationCollectionOptions _attachmentURLFromFilenameWithKey:inJSONRepresentation:attachmentURLs:error:]

  // instance methods
  -[REMDistributedEvaluationCollectionOptions encodeWithCoder:]
  -[REMDistributedEvaluationCollectionOptions .cxx_destruct]
  -[REMDistributedEvaluationCollectionOptions _init]
  -[REMDistributedEvaluationCollectionOptions initWithCoder:]
  -[REMDistributedEvaluationCollectionOptions includeListNames]
  -[REMDistributedEvaluationCollectionOptions includeListNameFuzzedEmbeddings]
  -[REMDistributedEvaluationCollectionOptions includeReminderTitles]
  -[REMDistributedEvaluationCollectionOptions includeReminderTitleFuzzedEmbeddings]
  -[REMDistributedEvaluationCollectionOptions setIncludeListNames:]
  -[REMDistributedEvaluationCollectionOptions setIncludeReminderTitles:]
  -[REMDistributedEvaluationCollectionOptions setIncludeListNameFuzzedEmbeddings:]
  -[REMDistributedEvaluationCollectionOptions setIncludeReminderTitleFuzzedEmbeddings:]
  -[REMDistributedEvaluationCollectionOptions includeSystemLanguage]
  -[REMDistributedEvaluationCollectionOptions setIncludeSystemLanguage:]
  -[REMDistributedEvaluationCollectionOptions includeSystemTimezone]
  -[REMDistributedEvaluationCollectionOptions setIncludeSystemTimezone:]
  -[REMDistributedEvaluationCollectionOptions includeAccountType]
  -[REMDistributedEvaluationCollectionOptions setIncludeAccountType:]
  -[REMDistributedEvaluationCollectionOptions includeListGroupInfo]
  -[REMDistributedEvaluationCollectionOptions setIncludeListGroupInfo:]
  -[REMDistributedEvaluationCollectionOptions includeReminderTitleSaltedHash]
  -[REMDistributedEvaluationCollectionOptions setIncludeReminderTitleSaltedHash:]
  -[REMDistributedEvaluationCollectionOptions includeDates]
  -[REMDistributedEvaluationCollectionOptions setIncludeDates:]
  -[REMDistributedEvaluationCollectionOptions includeDayOfWeek]
  -[REMDistributedEvaluationCollectionOptions setIncludeDayOfWeek:]
  -[REMDistributedEvaluationCollectionOptions includeRecurrenceInfo]
  -[REMDistributedEvaluationCollectionOptions setIncludeRecurrenceInfo:]
  -[REMDistributedEvaluationCollectionOptions includeLocationInfo]
  -[REMDistributedEvaluationCollectionOptions setIncludeLocationInfo:]
  -[REMDistributedEvaluationCollectionOptions includeAttachmentUTIs]
  -[REMDistributedEvaluationCollectionOptions setIncludeAttachmentUTIs:]
  -[REMDistributedEvaluationCollectionOptions includeRemindMeWhenMessagingInfo]
  -[REMDistributedEvaluationCollectionOptions setIncludeRemindMeWhenMessagingInfo:]
  -[REMDistributedEvaluationCollectionOptions includeAlarmDates]
  -[REMDistributedEvaluationCollectionOptions setIncludeAlarmDates:]
  -[REMDistributedEvaluationCollectionOptions includeSubtaskInfo]
  -[REMDistributedEvaluationCollectionOptions setIncludeSubtaskInfo:]
  -[REMDistributedEvaluationCollectionOptions includeUserActivityInfo]
  -[REMDistributedEvaluationCollectionOptions setIncludeUserActivityInfo:]
  -[REMDistributedEvaluationCollectionOptions includeIsFlagged]
  -[REMDistributedEvaluationCollectionOptions setIncludeIsFlagged:]
  -[REMDistributedEvaluationCollectionOptions includePriority]
  -[REMDistributedEvaluationCollectionOptions setIncludePriority:]
  -[REMDistributedEvaluationCollectionOptions relevantWordTagsIncludeOtherWord]
  -[REMDistributedEvaluationCollectionOptions setRelevantWordTagsIncludeOtherWord:]
  -[REMDistributedEvaluationCollectionOptions includeReminderTitleCategoryFilteredStopWords]
  -[REMDistributedEvaluationCollectionOptions setIncludeReminderTitleCategoryFilteredStopWords:]
  -[REMDistributedEvaluationCollectionOptions includeReminderTitleCategoryUniversalGrammar]
  -[REMDistributedEvaluationCollectionOptions setIncludeReminderTitleCategoryUniversalGrammar:]
  -[REMDistributedEvaluationCollectionOptions includeReminderTitleCategorySentence2Vec]
  -[REMDistributedEvaluationCollectionOptions setIncludeReminderTitleCategorySentence2Vec:]
  -[REMDistributedEvaluationCollectionOptions reminderTitleCategoryDistanceTolerance]
  -[REMDistributedEvaluationCollectionOptions setReminderTitleCategoryDistanceTolerance:]
  -[REMDistributedEvaluationCollectionOptions reminderTitleCategoryEmbeddingURL]
  -[REMDistributedEvaluationCollectionOptions setReminderTitleCategoryEmbeddingURL:]
  -[REMDistributedEvaluationCollectionOptions dateResolutionInSeconds]
  -[REMDistributedEvaluationCollectionOptions setDateResolutionInSeconds:]
  -[REMDistributedEvaluationCollectionOptions creationDateWithinDays]
  -[REMDistributedEvaluationCollectionOptions setCreationDateWithinDays:]


REMReminderFetchOptions : NSObject <NSSecureCoding>
  // class methods
  +[REMReminderFetchOptions supportsSecureCoding]

  // instance methods
  -[REMReminderFetchOptions encodeWithCoder:]
  -[REMReminderFetchOptions isEqual:]
  -[REMReminderFetchOptions initWithCoder:]


REMTemplateConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  REMObjectID *sourceListID
 @property  BOOL shouldSaveCompleted

  // class methods
  +[REMTemplateConfiguration supportsSecureCoding]

  // instance methods
  -[REMTemplateConfiguration encodeWithCoder:]
  -[REMTemplateConfiguration .cxx_destruct]
  -[REMTemplateConfiguration copyWithZone:]
  -[REMTemplateConfiguration isEqual:]
  -[REMTemplateConfiguration initWithCoder:]
  -[REMTemplateConfiguration initWithSourceListID:shouldSaveCompleted:]
  -[REMTemplateConfiguration sourceListID]
  -[REMTemplateConfiguration shouldSaveCompleted]


REMTTParagraphStyle : NSObject
 @property  TTParagraphStyle *innerStyle
 @property  NSObject *attributedValue
 @property  long long remParagraphStyle

  // instance methods
  -[REMTTParagraphStyle .cxx_destruct]
  -[REMTTParagraphStyle initWithStyle:]
  -[REMTTParagraphStyle initWithContents:]
  -[REMTTParagraphStyle attributedValue]
  -[REMTTParagraphStyle listBulletInAttributedString:atIndex:]
  -[REMTTParagraphStyle remParagraphStyle]
  -[REMTTParagraphStyle innerStyle]
  -[REMTTParagraphStyle setInnerStyle:]


REMXPCDaemonController : NSObject <REMDaemonController>
 @property  {os_unfair_lock_s=I} ivarLock
 @property  NSMutableDictionary *l_performersByName
 @property  NSString *serviceName
 @property  NSXPCConnection *xpcConnection
 @property  REMStoreContainerToken *storeContainerToken
 @property  <REMXPCDaemonControllerCloudKitNetworkActivityDelegate> *cloudKitNetworkActivityDelegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[REMXPCDaemonController userInteractiveDaemonController]
  +[REMXPCDaemonController weakSharedInstance]

  // instance methods
  -[REMXPCDaemonController ivarLock]
  -[REMXPCDaemonController setServiceName:]
  -[REMXPCDaemonController setIvarLock:]
  -[REMXPCDaemonController asyncIndexingPerformerWithReason:loadHandler:errorHandler:]
  -[REMXPCDaemonController _asyncPerformerWithResolver:reason:loadHandler:errorHandler:]
  -[REMXPCDaemonController syncChangeTrackingPerformerWithReason:errorHandler:]
  -[REMXPCDaemonController xpcConnection]
  -[REMXPCDaemonController _xpcConnectionDidInvalidate]
  -[REMXPCDaemonController dealloc]
  -[REMXPCDaemonController setStoreContainerToken:]
  -[REMXPCDaemonController asyncStorePerformerWithReason:loadHandler:errorHandler:]
  -[REMXPCDaemonController serviceName]
  -[REMXPCDaemonController .cxx_destruct]
  -[REMXPCDaemonController setCloudKitNetworkActivityDelegate:]
  -[REMXPCDaemonController initWithStoreContainerToken:userInteractive:]
  -[REMXPCDaemonController syncSyncInterfacePerformerWithReason:errorHandler:]
  -[REMXPCDaemonController _resolveAndCachePerformerWithResolver:reason:errorHandler:]
  -[REMXPCDaemonController _asyncResolvePerformerWithResolver:reason:completion:]
  -[REMXPCDaemonController _asyncResolveAndCachePerformerWithResolver:reason:completion:]
  -[REMXPCDaemonController setXpcConnection:]
  -[REMXPCDaemonController initWithStoreContainerToken:]
  -[REMXPCDaemonController syncDebugPerformerWithReason:errorHandler:]
  -[REMXPCDaemonController _xpcConnectionDidInterrupt]
  -[REMXPCDaemonController l_performersByName]
  -[REMXPCDaemonController cloudKitNetworkActivityDelegate]
  -[REMXPCDaemonController storeContainerToken]
  -[REMXPCDaemonController invalidate]
  -[REMXPCDaemonController asyncSyncInterfacePerformerWithReason:loadHandler:errorHandler:]
  -[REMXPCDaemonController setL_performersByName:]
  -[REMXPCDaemonController syncStorePerformerWithReason:errorHandler:]
  -[REMXPCDaemonController _syncPerformerWithResolver:reason:errorHandler:]
  -[REMXPCDaemonController _xpcConnectionReconnectingIfNecessary]
  -[REMXPCDaemonController _resolvePerformerWithResolver:reason:errorHandler:]
  -[REMXPCDaemonController init]
  -[REMXPCDaemonController syncDebugPerformerWithErrorHandler:]
  -[REMXPCDaemonController syncIndexingPerformerWithReason:errorHandler:]


REMXPCDaemonControllerPerformerResolver : NSObject
 @property  NSString *name

  // instance methods
  -[REMXPCDaemonControllerPerformerResolver name]
  -[REMXPCDaemonControllerPerformerResolver resolveWithDaemon:reason:completion:]


REMXPCDaemonControllerPerformerResolver_store : REMXPCDaemonControllerPerformerResolver
 @property  REMStoreContainerToken *storeContainerToken

  // instance methods
  -[REMXPCDaemonControllerPerformerResolver_store .cxx_destruct]
  -[REMXPCDaemonControllerPerformerResolver_store initWithStoreContainerToken:]
  -[REMXPCDaemonControllerPerformerResolver_store storeContainerToken]
  -[REMXPCDaemonControllerPerformerResolver_store name]
  -[REMXPCDaemonControllerPerformerResolver_store resolveWithDaemon:reason:completion:]


REMXPCDaemonControllerPerformerResolver_debug : REMXPCDaemonControllerPerformerResolver
 @property  REMStoreContainerToken *storeContainerToken

  // instance methods
  -[REMXPCDaemonControllerPerformerResolver_debug .cxx_destruct]
  -[REMXPCDaemonControllerPerformerResolver_debug initWithStoreContainerToken:]
  -[REMXPCDaemonControllerPerformerResolver_debug storeContainerToken]
  -[REMXPCDaemonControllerPerformerResolver_debug name]
  -[REMXPCDaemonControllerPerformerResolver_debug resolveWithDaemon:reason:completion:]


REMXPCDaemonControllerPerformerResolver_changeTracking : REMXPCDaemonControllerPerformerResolver
 @property  REMStoreContainerToken *storeContainerToken

  // instance methods
  -[REMXPCDaemonControllerPerformerResolver_changeTracking .cxx_destruct]
  -[REMXPCDaemonControllerPerformerResolver_changeTracking initWithStoreContainerToken:]
  -[REMXPCDaemonControllerPerformerResolver_changeTracking storeContainerToken]
  -[REMXPCDaemonControllerPerformerResolver_changeTracking name]
  -[REMXPCDaemonControllerPerformerResolver_changeTracking resolveWithDaemon:reason:completion:]


REMXPCDaemonControllerPerformerResolver_sync : REMXPCDaemonControllerPerformerResolver
  // instance methods
  -[REMXPCDaemonControllerPerformerResolver_sync name]
  -[REMXPCDaemonControllerPerformerResolver_sync resolveWithDaemon:reason:completion:]


REMXPCDaemonControllerPerformerResolver_indexing : REMXPCDaemonControllerPerformerResolver
  // instance methods
  -[REMXPCDaemonControllerPerformerResolver_indexing name]
  -[REMXPCDaemonControllerPerformerResolver_indexing resolveWithDaemon:reason:completion:]


REMXPCDaemonControllerExportedObject : NSObject <REMXPCClient>
 @property  <REMXPCDaemonControllerCloudKitNetworkActivityDelegate> *cloudKitNetworkActivityDelegate

  // instance methods
  -[REMXPCDaemonControllerExportedObject .cxx_destruct]
  -[REMXPCDaemonControllerExportedObject setCloudKitNetworkActivityDelegate:]
  -[REMXPCDaemonControllerExportedObject cloudKitNetworkActivityDelegate]
  -[REMXPCDaemonControllerExportedObject cloudKitNetworkActivityDidUpdate:]


REMStructuredLocation : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *locationUID
 @property  NSString *title
 @property  double latitude
 @property  double longitude
 @property  double radius
 @property  NSString *address
 @property  NSString *routing
 @property  NSString *referenceFrameString
 @property  NSString *contactLabel
 @property  NSData *mapKitHandle

  // class methods
  +[REMStructuredLocation supportsSecureCoding]
  +[REMStructuredLocation minimumRegionMonitoringDistance]

  // instance methods
  -[REMStructuredLocation latitude]
  -[REMStructuredLocation radius]
  -[REMStructuredLocation setRouting:]
  -[REMStructuredLocation setLatitude:]
  -[REMStructuredLocation encodeWithCoder:]
  -[REMStructuredLocation setLongitude:]
  -[REMStructuredLocation setAddress:]
  -[REMStructuredLocation initWithTitle:]
  -[REMStructuredLocation longitude]
  -[REMStructuredLocation .cxx_destruct]
  -[REMStructuredLocation address]
  -[REMStructuredLocation title]
  -[REMStructuredLocation copyWithZone:]
  -[REMStructuredLocation displayName]
  -[REMStructuredLocation setRadius:]
  -[REMStructuredLocation setTitle:]
  -[REMStructuredLocation isEqual:]
  -[REMStructuredLocation initWithCoder:]
  -[REMStructuredLocation mapKitHandle]
  -[REMStructuredLocation setMapKitHandle:]
  -[REMStructuredLocation contactLabel]
  -[REMStructuredLocation setContactLabel:]
  -[REMStructuredLocation locationUID]
  -[REMStructuredLocation initWithTitle:locationUID:]
  -[REMStructuredLocation routing]
  -[REMStructuredLocation setReferenceFrameString:]
  -[REMStructuredLocation referenceFrameString]
  -[REMStructuredLocation initWithTitle:locationUID:latitude:longitude:radius:address:routing:referenceFrameString:contactLabel:mapKitHandle:]
  -[REMStructuredLocation isContentEqual:]


REMFetchMetadata : NSObject <NSSecureCoding, NSCopying>
  // class methods
  +[REMFetchMetadata supportsSecureCoding]

  // instance methods
  -[REMFetchMetadata encodeWithCoder:]
  -[REMFetchMetadata copyWithZone:]
  -[REMFetchMetadata initWithCoder:]


REMCRMutableAttributedString : NSMutableAttributedString
 @property  NSMutableAttributedString *backingStore
 @property  <REMCRMutableAttributedStringEditObserver> *editObserver

  // class methods
  +[REMCRMutableAttributedString supportsSecureCoding]
  +[REMCRMutableAttributedString allowedAttributesForModel]
  +[REMCRMutableAttributedString nonEditableAttributes]

  // instance methods
  -[REMCRMutableAttributedString setAttributes:range:]
  -[REMCRMutableAttributedString attributesAtIndex:effectiveRange:]
  -[REMCRMutableAttributedString replaceCharactersInRange:withString:]
  -[REMCRMutableAttributedString encodeWithCoder:]
  -[REMCRMutableAttributedString string]
  -[REMCRMutableAttributedString initWithBackingStore:]
  -[REMCRMutableAttributedString .cxx_destruct]
  -[REMCRMutableAttributedString classForCoder]
  -[REMCRMutableAttributedString copyWithZone:]
  -[REMCRMutableAttributedString setBackingStore:]
  -[REMCRMutableAttributedString backingStore]
  -[REMCRMutableAttributedString mutableCopyWithZone:]
  -[REMCRMutableAttributedString isEqual:]
  -[REMCRMutableAttributedString initWithCoder:]
  -[REMCRMutableAttributedString setEditObserver:]
  -[REMCRMutableAttributedString reportDidEdit:range:changeInLength:]
  -[REMCRMutableAttributedString editObserver]


REMColor : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *daSymbolicColorName
 @property  NSString *daHexString
 @property  NSString *ckSymbolicColorName
 @property  unsigned long colorRGBSpace
 @property  double blue
 @property  double red
 @property  double green
 @property  double alpha

  // class methods
  +[REMColor supportsSecureCoding]
  +[REMColor yellowColor]
  +[REMColor greenColor]
  +[REMColor colorWithRed:green:blue:alpha:]
  +[REMColor redColor]
  +[REMColor clearColor]
  +[REMColor blackColor]
  +[REMColor whiteColor]
  +[REMColor colorWithHexString:]
  +[REMColor colorWithRed:green:blue:alpha:targetRGBSpace:]
  +[REMColor colorWithDictionaryData:error:]
  +[REMColor lightGrayColor]
  +[REMColor cyanColor]
  +[REMColor purpleColor]
  +[REMColor grayColor]
  +[REMColor brownColor]
  +[REMColor blueColor]
  +[REMColor orangeColor]
  +[REMColor magentaColor]

  // instance methods
  -[REMColor initWithRed:green:blue:alpha:colorSpace:daSymbolicColorName:daHexString:ckSymbolicColorName:]
  -[REMColor initWithWhite:alpha:]
  -[REMColor ckSymbolicColorName]
  -[REMColor colorRGBSpace]
  -[REMColor initWithRed:green:blue:alpha:]
  -[REMColor encodeWithCoder:]
  -[REMColor daHexString]
  -[REMColor archivedDictionaryDataWithError:]
  -[REMColor daSymbolicColorName]
  -[REMColor blue]
  -[REMColor .cxx_destruct]
  -[REMColor alpha]
  -[REMColor initWithDASymbolicColorName:daHexString:]
  -[REMColor green]
  -[REMColor initWithCKSymbolicColorName:hexString:]
  -[REMColor initWithHexString:]
  -[REMColor copyWithZone:]
  -[REMColor initWithRed:green:blue:alpha:colorSpace:]
  -[REMColor hexStringWithAlpha]
  -[REMColor red]
  -[REMColor hexString]
  -[REMColor isEqual:]
  -[REMColor initWithDASymbolicColorName:daHexString:ckSymbolicColorName:]
  -[REMColor initWithCoder:]


REMUserDefaults : NSObject
 @property  NSString *suiteName
 @property  NSMutableDictionary *observers
 @property  BOOL showRemindersAsOverdue_cached
 @property  NSUserDefaults *userDefaults

  // class methods
  +[REMUserDefaults appGroupUserDefaults]
  +[REMUserDefaults daemonUserDefaults]

  // instance methods
  -[REMUserDefaults _addObserverForKey:block:]
  -[REMUserDefaults initWithSuiteName:containerURL:]
  -[REMUserDefaults suiteName]
  -[REMUserDefaults setShowRemindersAsOverdue_cached:]
  -[REMUserDefaults _removeObserver:]
  -[REMUserDefaults showRemindersAsOverdue_cached]
  -[REMUserDefaults _startObservingValuesForKey:block:]
  -[REMUserDefaults userDefaults]
  -[REMUserDefaults .cxx_destruct]
  -[REMUserDefaults observeValueForKeyPath:ofObject:change:context:]
  -[REMUserDefaults _startStreamingValuesForKey:block:]
  -[REMUserDefaults observers]


REMDaemonUserDefaults : REMUserDefaults
 @property  BOOL newAppShouldTakeoverEKReminderNotifications
 @property  BOOL dataaccessDaemonStopSyncingReminders
 @property  BOOL siriShouldRouteIntentsToNewRemindersApp
 @property  BOOL databaseMigrationTestModeEnabled
 @property  BOOL isDatabaseMigrated
 @property  BOOL databaseMigrationTimedOut
 @property  NSString *lastDatabaseMigrationSystemBuildVersion
 @property  NSNumber *cloudKitMigrationMaxNumInvocations
 @property  NSNumber *cloudKitMigrationMaxNumFailures
 @property  NSNumber *cloudKitMigrationDelayAfterError
 @property  NSNumber *cloudKitMigrationObserverPollingInterval
 @property  NSNumber *cloudKitMigrationSimulatedError
 @property  NSNumber *cloudKitResultsLimitPerSyncOperation
 @property  BOOL cloudKitMigrationDisableCleanUp
 @property  NSString *acAccountIdentifierToMergeLocalDataIntoSyncData
 @property  NSArray *acAccountIdentifiersToMigrateInactivatedCalDavData
 @property  NSDate *cloudKitMergeLocalLastDateMaxRetryReached
 @property  NSString *cloudKitMergeLocalLastBuildVersionMaxRetryReached
 @property  NSDate *cloudKitSchemaCatchUpSyncLastSuccessDate
 @property  NSString *cloudKitSchemaCatchUpSyncLastSuccessBuildVersion
 @property  NSNumber *cloudKitSchemaCatchUpSyncSchedulingState
 @property  NSDate *cloudKitSchemaCatchUpSyncLastScheduledDate
 @property  BOOL debugForceSupportCloudKitSchemaCatchUpSyncBackgroundScheduling
 @property  NSNumber *cloudKitMaxNumAlarmIDsInReminderCKRecordDebugOverride
 @property  NSNumber *spotlightIndexVersion
 @property  NSDate *nextScheduledAlarmDate
 @property  NSDate *lastPresentAlarmDate
 @property  NSData *lastSuggestedAttributesAutoTrainingToken
 @property  NSDate *lastSyncPoll
 @property  NSDate *lastCloudConfigurationDownload
 @property  NSDate *lastExtraneousAlarmsProcessedDate
 @property  BOOL useExtraneousAlarmBackOffThrottleInterval
 @property  NSDate *staledFileAttachmentCleanupLastExecutionDate
 @property  BOOL staledFileAttachmentCleanupContainerDeemedClean
 @property  NSData *userInteractionsData
 @property  BOOL simulateMAIDAccount
 @property  BOOL showRemindersAsOverdue
 @property  BOOL enableWelcomeScreen
 @property  BOOL forceShowWelcomeScreen
 @property  BOOL forceShowWhatsNewScreen
 @property  BOOL enableInAppDebugMenu
 @property  BOOL enableAutoGenerateCKPersonIDSalt
 @property  BOOL enableHashingUserIdentifiablesWithPersonIDSalt
 @property  REMObjectID *preferredDefaultListID
 @property  NSURL *preferredDefaultListObjectIDUrl
 @property  NSDateComponents *todayNotificationFireTime
 @property  BOOL disableAlarmEngineDataSourcePrefetching
 @property  BOOL enableAssignmentNotifications
 @property  NSDictionary *suggestedAttributesTrainingOverrides
 @property  NSDictionary *suggestedAttributesHarvestingOverrides
 @property  NSDictionary *muteNotificationForSharedList
 @property  NSDictionary *suggestedAttributesAccepted
 @property  NSData *accountsListCategorizedCountsCache
 @property  NSData *hashtagLabelsInCustomSmartListFilterCache
 @property  BOOL debugSimulateSqliteFull
 @property  NSNumber *tipKitCachedCountOfUncompletedReminders
 @property  NSNumber *tipKitCachedCountOfLists
 @property  NSNumber *tipKitCachedCountOfListsWithCustomBadge
 @property  NSNumber *tipKitCachedCountOfCustomSmartLists
 @property  NSNumber *tipKitCachedCountOfHashtags
 @property  NSDate *lastViewedNotificationsPermissionWarmingSheetDate
 @property  NSDate *lastDismissedNotificationsPermissionInlineRequestDate
 @property  BOOL hasViewedContactsAccessAlertForLocation
 @property  BOOL hasViewedContactsAccessAlertForMessaging
 @property  BOOL hasViewedContactsAccessAlertForCalDAVSharing
 @property  BOOL didShowReminderDeletePrivacyWarning
 @property  NSNumber *remCurrentRuntimeVersionDebuggingOverride
 @property  BOOL forceEligibleForAutoCloudKitMigration
 @property  BOOL forceBasicAAAccountEligibleForCloudKitReminders
 @property  NSDictionary *syncActivityNotificationEngine_accountSignInTime
 @property  BOOL sharedListActivityNotifications_demoMode
 @property  BOOL shouldIncludeRemindersDueTodayInBadgeCount

  // class methods
  +[REMDaemonUserDefaults defaultValues]
  +[REMDaemonUserDefaults todayNotificationFireTimeFromStorageNumber:]
  +[REMDaemonUserDefaults storageNumberForTodayNotificationTime:]

  // instance methods
  -[REMDaemonUserDefaults initWithSuiteName:containerURL:]
  -[REMDaemonUserDefaults _pptPreferredDefaultListIDKey]
  -[REMDaemonUserDefaults enableAssignmentNotifications]
  -[REMDaemonUserDefaults setSuggestedAttributesAccepted:]
  -[REMDaemonUserDefaults setMuteNotificationForSharedList:]
  -[REMDaemonUserDefaults cloudKitMigrationDelayAfterError]
  -[REMDaemonUserDefaults hasViewedContactsAccessAlertForMessaging]
  -[REMDaemonUserDefaults _deletePreferredDefaultListObjectIDUrl]
  -[REMDaemonUserDefaults setEnableInAppDebugMenu:]
  -[REMDaemonUserDefaults deletePreferredDefaultListID]
  -[REMDaemonUserDefaults setCloudKitMaxNumAlarmIDsInReminderCKRecordDebugOverride:]
  -[REMDaemonUserDefaults cloudKitSchemaCatchUpSyncLastSuccessDate]
  -[REMDaemonUserDefaults setEnableAssignmentNotifications:]
  -[REMDaemonUserDefaults acAccountIdentifiersToMigrateInactivatedCalDavData]
  -[REMDaemonUserDefaults setCloudKitSchemaCatchUpSyncLastSuccessBuildVersion:]
  -[REMDaemonUserDefaults setSimulateMAIDAccount:]
  -[REMDaemonUserDefaults muteNotificationOptionsForSharedList:]
  -[REMDaemonUserDefaults setAcAccountIdentifiersToMigrateInactivatedCalDavData:]
  -[REMDaemonUserDefaults setShowRemindersAsOverdue:]
  -[REMDaemonUserDefaults cloudKitMaxNumAlarmIDsInReminderCKRecordDebugOverride]
  -[REMDaemonUserDefaults forceEligibleForAutoCloudKitMigration]
  -[REMDaemonUserDefaults ppt_handleInstall]
  -[REMDaemonUserDefaults setUserInteractionsData:]
  -[REMDaemonUserDefaults setCloudKitMigrationSimulatedError:]
  -[REMDaemonUserDefaults setCloudKitMergeLocalLastDateMaxRetryReached:]
  -[REMDaemonUserDefaults forceShowWelcomeScreen]
  -[REMDaemonUserDefaults disableAlarmEngineDataSourcePrefetching]
  -[REMDaemonUserDefaults setRemCurrentRuntimeVersionDebuggingOverride:]
  -[REMDaemonUserDefaults setTipKitCachedCountOfLists:]
  -[REMDaemonUserDefaults enableHashingUserIdentifiablesWithPersonIDSalt]
  -[REMDaemonUserDefaults userInteractionsData]
  -[REMDaemonUserDefaults dataaccessDaemonStopSyncingReminders]
  -[REMDaemonUserDefaults simulateMAIDAccount]
  -[REMDaemonUserDefaults setTodayNotificationFireTime:]
  -[REMDaemonUserDefaults setSpotlightIndexVersion:]
  -[REMDaemonUserDefaults setLastPresentAlarmDate:]
  -[REMDaemonUserDefaults todayNotificationFireTime]
  -[REMDaemonUserDefaults nextScheduledAlarmDate]
  -[REMDaemonUserDefaults setCoreBehaviorTrainingParameters:]
  -[REMDaemonUserDefaults enableWelcomeScreen]
  -[REMDaemonUserDefaults suggestedAttributesAccepted]
  -[REMDaemonUserDefaults setLastSyncPoll:]
  -[REMDaemonUserDefaults tipKitCachedCountOfListsWithCustomBadge]
  -[REMDaemonUserDefaults suggestedAttributesHarvestingOverrides]
  -[REMDaemonUserDefaults setCloudKitMigrationDisableCleanUp:]
  -[REMDaemonUserDefaults setTipKitCachedCountOfCustomSmartLists:]
  -[REMDaemonUserDefaults cloudKitSchemaCatchUpSyncSchedulingState]
  -[REMDaemonUserDefaults debugForceSupportCloudKitSchemaCatchUpSyncBackgroundScheduling]
  -[REMDaemonUserDefaults setTipKitCachedCountOfHashtags:]
  -[REMDaemonUserDefaults setDebugSimulateSqliteFull:]
  -[REMDaemonUserDefaults setHasViewedContactsAccessAlertForCalDAVSharing:]
  -[REMDaemonUserDefaults staledFileAttachmentCleanupContainerDeemedClean]
  -[REMDaemonUserDefaults removeMuteNotificationOptionsForSharedList:]
  -[REMDaemonUserDefaults setDisableAlarmEngineDataSourcePrefetching:]
  -[REMDaemonUserDefaults setPreferredDefaultListObjectIDUrl:]
  -[REMDaemonUserDefaults cloudKitSchemaCatchUpSyncLastScheduledDate]
  -[REMDaemonUserDefaults cloudKitMigrationMaxNumInvocations]
  -[REMDaemonUserDefaults syncActivityNotificationEngine_accountSignInTime]
  -[REMDaemonUserDefaults lastViewedNotificationsPermissionWarmingSheetDate]
  -[REMDaemonUserDefaults didShowReminderDeletePrivacyWarning]
  -[REMDaemonUserDefaults setLastExtraneousAlarmsProcessedDate:]
  -[REMDaemonUserDefaults muteNotificationForSharedList]
  -[REMDaemonUserDefaults setMuteNotificationOptions:forSharedList:]
  -[REMDaemonUserDefaults debugSimulateSqliteFull]
  -[REMDaemonUserDefaults lastPresentAlarmDate]
  -[REMDaemonUserDefaults setLastViewedNotificationsPermissionWarmingSheetDate:]
  -[REMDaemonUserDefaults lastSyncPoll]
  -[REMDaemonUserDefaults setForceShowWelcomeScreen:]
  -[REMDaemonUserDefaults tipKitCachedCountOfLists]
  -[REMDaemonUserDefaults setSyncActivityNotificationEngine_accountSignInTime:]
  -[REMDaemonUserDefaults forceBasicAAAccountEligibleForCloudKitReminders]
  -[REMDaemonUserDefaults cloudKitMigrationObserverPollingInterval]
  -[REMDaemonUserDefaults setForceBasicAAAccountEligibleForCloudKitReminders:]
  -[REMDaemonUserDefaults setHasViewedContactsAccessAlertForLocation:]
  -[REMDaemonUserDefaults cloudKitResultsLimitPerSyncOperation]
  -[REMDaemonUserDefaults setTipKitCachedCountOfUncompletedReminders:]
  -[REMDaemonUserDefaults setUseExtraneousAlarmBackOffThrottleInterval:]
  -[REMDaemonUserDefaults setCloudKitMergeLocalLastBuildVersionMaxRetryReached:]
  -[REMDaemonUserDefaults setForceEligibleForAutoCloudKitMigration:]
  -[REMDaemonUserDefaults cloudKitMergeLocalLastBuildVersionMaxRetryReached]
  -[REMDaemonUserDefaults isDatabaseMigrated]
  -[REMDaemonUserDefaults lastExtraneousAlarmsProcessedDate]
  -[REMDaemonUserDefaults setSuggestedAttributesTrainingOverrides:]
  -[REMDaemonUserDefaults setLastDismissedNotificationsPermissionInlineRequestDate:]
  -[REMDaemonUserDefaults setStaledFileAttachmentCleanupLastExecutionDate:]
  -[REMDaemonUserDefaults setSuggestedAttributesHarvestingOverrides:]
  -[REMDaemonUserDefaults siriShouldRouteIntentsToNewRemindersApp]
  -[REMDaemonUserDefaults setHasViewedContactsAccessAlertForMessaging:]
  -[REMDaemonUserDefaults lastSuggestedAttributesAutoTrainingToken]
  -[REMDaemonUserDefaults spotlightIndexVersion]
  -[REMDaemonUserDefaults databaseMigrationTimedOut]
  -[REMDaemonUserDefaults setCloudKitMigrationMaxNumFailures:]
  -[REMDaemonUserDefaults shouldIncludeRemindersDueTodayInBadgeCount]
  -[REMDaemonUserDefaults setPreferredDefaultListID:]
  -[REMDaemonUserDefaults setLastCloudConfigurationDownload:]
  -[REMDaemonUserDefaults setCloudKitResultsLimitPerSyncOperation:]
  -[REMDaemonUserDefaults setDidShowReminderDeletePrivacyWarning:]
  -[REMDaemonUserDefaults cloudKitSchemaCatchUpSyncLastSuccessBuildVersion]
  -[REMDaemonUserDefaults cloudKitMigrationSimulatedError]
  -[REMDaemonUserDefaults setEnableWelcomeScreen:]
  -[REMDaemonUserDefaults setIsDatabaseMigrated:]
  -[REMDaemonUserDefaults observePreferredDefaultListIDWithBlock:]
  -[REMDaemonUserDefaults enableInAppDebugMenu]
  -[REMDaemonUserDefaults hasViewedContactsAccessAlertForCalDAVSharing]
  -[REMDaemonUserDefaults showRemindersAsOverdue]
  -[REMDaemonUserDefaults acAccountIdentifierToMergeLocalDataIntoSyncData]
  -[REMDaemonUserDefaults cloudKitMergeLocalLastDateMaxRetryReached]
  -[REMDaemonUserDefaults setEnableHashingUserIdentifiablesWithPersonIDSalt:]
  -[REMDaemonUserDefaults setBestKForKNN:]
  -[REMDaemonUserDefaults setHashtagLabelsInCustomSmartListFilterCache:]
  -[REMDaemonUserDefaults tipKitCachedCountOfCustomSmartLists]
  -[REMDaemonUserDefaults setCloudKitSchemaCatchUpSyncLastSuccessDate:]
  -[REMDaemonUserDefaults setDatabaseMigrationTimedOut:]
  -[REMDaemonUserDefaults streamTodayNotificationFireTime:]
  -[REMDaemonUserDefaults setDebugForceSupportCloudKitSchemaCatchUpSyncBackgroundScheduling:]
  -[REMDaemonUserDefaults setAcAccountIdentifierToMergeLocalDataIntoSyncData:]
  -[REMDaemonUserDefaults enableAutoGenerateCKPersonIDSalt]
  -[REMDaemonUserDefaults ppt_handleRestore]
  -[REMDaemonUserDefaults preferredDefaultListID]
  -[REMDaemonUserDefaults remCurrentRuntimeVersionDebuggingOverride]
  -[REMDaemonUserDefaults tipKitCachedCountOfUncompletedReminders]
  -[REMDaemonUserDefaults useExtraneousAlarmBackOffThrottleInterval]
  -[REMDaemonUserDefaults setLastSuggestedAttributesAutoTrainingToken:]
  -[REMDaemonUserDefaults cloudKitMigrationDisableCleanUp]
  -[REMDaemonUserDefaults tipKitCachedCountOfHashtags]
  -[REMDaemonUserDefaults setLastDatabaseMigrationSystemBuildVersion:]
  -[REMDaemonUserDefaults streamShouldIncludeRemindersDueTodayInBadgeCount:]
  -[REMDaemonUserDefaults setCloudKitMigrationObserverPollingInterval:]
  -[REMDaemonUserDefaults setForceShowWhatsNewScreen:]
  -[REMDaemonUserDefaults sharedListActivityNotifications_demoMode]
  -[REMDaemonUserDefaults newAppShouldTakeoverEKReminderNotifications]
  -[REMDaemonUserDefaults staledFileAttachmentCleanupLastExecutionDate]
  -[REMDaemonUserDefaults setDatabaseMigrationTestModeEnabled:]
  -[REMDaemonUserDefaults hashtagLabelsInCustomSmartListFilterCache]
  -[REMDaemonUserDefaults lastDatabaseMigrationSystemBuildVersion]
  -[REMDaemonUserDefaults setAccountsListCategorizedCountsCache:]
  -[REMDaemonUserDefaults suggestedAttributesTrainingOverrides]
  -[REMDaemonUserDefaults observeShowRemindersAsOverdueWithBlock:]
  -[REMDaemonUserDefaults lastDismissedNotificationsPermissionInlineRequestDate]
  -[REMDaemonUserDefaults setSharedListActivityNotifications_demoMode:]
  -[REMDaemonUserDefaults cloudKitMigrationMaxNumFailures]
  -[REMDaemonUserDefaults setTipKitCachedCountOfListsWithCustomBadge:]
  -[REMDaemonUserDefaults setNextScheduledAlarmDate:]
  -[REMDaemonUserDefaults setShouldIncludeRemindersDueTodayInBadgeCount:]
  -[REMDaemonUserDefaults forceShowWhatsNewScreen]
  -[REMDaemonUserDefaults setCloudKitSchemaCatchUpSyncSchedulingState:]
  -[REMDaemonUserDefaults preferredDefaultListObjectIDUrl]
  -[REMDaemonUserDefaults databaseMigrationTestModeEnabled]
  -[REMDaemonUserDefaults setCloudKitMigrationDelayAfterError:]
  -[REMDaemonUserDefaults setCloudKitMigrationMaxNumInvocations:]
  -[REMDaemonUserDefaults accountsListCategorizedCountsCache]
  -[REMDaemonUserDefaults setStaledFileAttachmentCleanupContainerDeemedClean:]
  -[REMDaemonUserDefaults hasViewedContactsAccessAlertForLocation]
  -[REMDaemonUserDefaults setCloudKitSchemaCatchUpSyncLastScheduledDate:]
  -[REMDaemonUserDefaults lastCloudConfigurationDownload]


REMUserDefaultsObserver : NSObject <REMUserDefaultsObserveToken>
 @property  REMUserDefaults *userDefaults
 @property  NSString *userDefaultsKey
 @property  @? block
 @property  BOOL removed
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[REMUserDefaultsObserver stopObserving]
  -[REMUserDefaultsObserver setUserDefaults:]
  -[REMUserDefaultsObserver userDefaults]
  -[REMUserDefaultsObserver userDefaultsKey]
  -[REMUserDefaultsObserver removed]
  -[REMUserDefaultsObserver dealloc]
  -[REMUserDefaultsObserver .cxx_destruct]
  -[REMUserDefaultsObserver initWithUserDefaults:key:block:]
  -[REMUserDefaultsObserver setBlock:]
  -[REMUserDefaultsObserver block]
  -[REMUserDefaultsObserver setRemoved:]
  -[REMUserDefaultsObserver setUserDefaultsKey:]


REMTemplate : NSObject <REMObjectIDProviding, REMSupportedVersionProviding>
 @property  REMTemplateStorage *storage
 @property  REMObjectID *accountID
 @property  REMObjectID *parentAccountID
 @property  NSString *badgeEmblem
 @property  REMStore *store
 @property  REMObjectID *objectID
 @property  REMAccountCapabilities *accountCapabilities
 @property  NSString *name
 @property  REMColor *color
 @property  REMListBadge *badge
 @property  BOOL showingLargeAttachments
 @property  NSString *sortingStyle
 @property  NSDate *mostRecentPublicLinkUpdateRequestDate
 @property  REMTemplatePublicLink *publicLink
 @property  BOOL isPersisted
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  REMObjectID *remObjectID
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMTemplate newObjectID]
  +[REMTemplate cdEntityName]
  +[REMTemplate objectIDWithUUID:]
  +[REMTemplate cdEntityNameForSavedReminder]
  +[REMTemplate cdEntityNameForSavedAttachment]
  +[REMTemplate newObjectIDForSavedAttachment]
  +[REMTemplate newObjectIDForSavedReminder]

  // instance methods
  -[REMTemplate setValue:forUndefinedKey:]
  -[REMTemplate setStorage:]
  -[REMTemplate optionalObjectID]
  -[REMTemplate initWithStore:storage:]
  -[REMTemplate valueForUndefinedKey:]
  -[REMTemplate remObjectID]
  -[REMTemplate isUnsupported]
  -[REMTemplate store]
  -[REMTemplate storage]
  -[REMTemplate respondsToSelector:]
  -[REMTemplate .cxx_destruct]
  -[REMTemplate accountCapabilities]
  -[REMTemplate badge]
  -[REMTemplate forwardingTargetForSelector:]
  -[REMTemplate isEqual:]


REMXPCStorePerformerInterface : NSObject
  // class methods
  +[REMXPCStorePerformerInterface interface]


REMAppleAccountUtilities : NSObject
 @property  ACAccountStore *accountStore
 @property  BOOL cachedICloudACAccountsAreValid
 @property  ACAccount *_debug_primaryICloudACAccount
 @property  ACAccount *_debug_fullICloudACAccount
 @property  ACAccount *unsafeUntilSystemReady_primaryICloudACAccount
 @property  NSArray *unsafeUntilSystemReady_allICloudACAccounts

  // class methods
  +[REMAppleAccountUtilities sharedInstance]
  +[REMAppleAccountUtilities accountDescriptionWithACAccount:]

  // instance methods
  -[REMAppleAccountUtilities _unsetMigrationFlagsWithACAccount:inStore:completionHandler:]
  -[REMAppleAccountUtilities setAccountStore:]
  -[REMAppleAccountUtilities accountStore]
  -[REMAppleAccountUtilities accountStoreDidChange:]
  -[REMAppleAccountUtilities unsafeUntilSystemReady_allCloudKitRemindersEnabledICloudACAccounts]
  -[REMAppleAccountUtilities setCachedICloudACAccountsAreValid:]
  -[REMAppleAccountUtilities set_debug_primaryICloudACAccount:]
  -[REMAppleAccountUtilities accessQueue]
  -[REMAppleAccountUtilities unsafeUntilSystemReady_icloudACAccountMatchingAccountIdentifier:]
  -[REMAppleAccountUtilities unsafeUntilSystemReady_displayedHostnameOfICloudACAccountWithAccountIdentifier:]
  -[REMAppleAccountUtilities status]
  -[REMAppleAccountUtilities invalidateICloudACAccounts]
  -[REMAppleAccountUtilities dealloc]
  -[REMAppleAccountUtilities .cxx_destruct]
  -[REMAppleAccountUtilities unsafeUntilSystemReady_allICloudACAccounts]
  -[REMAppleAccountUtilities initForObservingAccountStoreChanges:]
  -[REMAppleAccountUtilities _debug_primaryICloudACAccount]
  -[REMAppleAccountUtilities _updateCachedICloudACAccounts]
  -[REMAppleAccountUtilities _setNonPrimaryICloudACAccount:]
  -[REMAppleAccountUtilities unsafeUntilSystemReady_primaryICloudACAccount]
  -[REMAppleAccountUtilities _invalidateCachedICloudACAccounts]
  -[REMAppleAccountUtilities unsafeUntilSystemReady_iCloudAccountCalDavServiceWithAccountID:]
  -[REMAppleAccountUtilities _debug_fullICloudACAccount]
  -[REMAppleAccountUtilities unsafeUntilSystemReady_allICloudAccountsWithCloudKitEnabled]
  -[REMAppleAccountUtilities cachedICloudACAccountsAreValid]
  -[REMAppleAccountUtilities _setPrimaryICloudACAccount:]
  -[REMAppleAccountUtilities set_debug_fullICloudACAccount:]
  -[REMAppleAccountUtilities init]
  -[REMAppleAccountUtilities saveDidChooseToMigrate:didFinishMigration:toACAccount:inStore:completionHandler:]


_REMNSPersistentHistoryTransactionStorage : NSObject <NSSecureCoding>
 @property  NSDate *timestamp
 @property  NSArray *changes
 @property  long long transactionNumber
 @property  NSString *storeID
 @property  NSString *bundleID
 @property  NSString *processID
 @property  NSString *contextName
 @property  NSString *author
 @property  REMNSPersistentHistoryToken *token
 @property  REMObjectID *accountID

  // class methods
  +[_REMNSPersistentHistoryTransactionStorage supportsSecureCoding]

  // instance methods
  -[_REMNSPersistentHistoryTransactionStorage changes]
  -[_REMNSPersistentHistoryTransactionStorage contextName]
  -[_REMNSPersistentHistoryTransactionStorage accountID]
  -[_REMNSPersistentHistoryTransactionStorage token]
  -[_REMNSPersistentHistoryTransactionStorage setTimestamp:]
  -[_REMNSPersistentHistoryTransactionStorage encodeWithCoder:]
  -[_REMNSPersistentHistoryTransactionStorage setAccountID:]
  -[_REMNSPersistentHistoryTransactionStorage setBundleID:]
  -[_REMNSPersistentHistoryTransactionStorage storeID]
  -[_REMNSPersistentHistoryTransactionStorage .cxx_destruct]
  -[_REMNSPersistentHistoryTransactionStorage setStoreID:]
  -[_REMNSPersistentHistoryTransactionStorage author]
  -[_REMNSPersistentHistoryTransactionStorage transactionNumber]
  -[_REMNSPersistentHistoryTransactionStorage timestamp]
  -[_REMNSPersistentHistoryTransactionStorage bundleID]
  -[_REMNSPersistentHistoryTransactionStorage setToken:]
  -[_REMNSPersistentHistoryTransactionStorage processID]
  -[_REMNSPersistentHistoryTransactionStorage setProcessID:]
  -[_REMNSPersistentHistoryTransactionStorage isEqual:]
  -[_REMNSPersistentHistoryTransactionStorage initWithCoder:]
  -[_REMNSPersistentHistoryTransactionStorage setAuthor:]
  -[_REMNSPersistentHistoryTransactionStorage setChanges:]
  -[_REMNSPersistentHistoryTransactionStorage setTransactionNumber:]
  -[_REMNSPersistentHistoryTransactionStorage setContextName:]


REMNSPersistentHistoryTransaction : REMChangeTransaction
 @property  _REMNSPersistentHistoryTransactionStorage *storage

  // class methods
  +[REMNSPersistentHistoryTransaction supportsSecureCoding]

  // instance methods
  -[REMNSPersistentHistoryTransaction changes]
  -[REMNSPersistentHistoryTransaction setStorage:]
  -[REMNSPersistentHistoryTransaction accountID]
  -[REMNSPersistentHistoryTransaction token]
  -[REMNSPersistentHistoryTransaction initWithStorage:]
  -[REMNSPersistentHistoryTransaction storage]
  -[REMNSPersistentHistoryTransaction encodeWithCoder:]
  -[REMNSPersistentHistoryTransaction storeID]
  -[REMNSPersistentHistoryTransaction .cxx_destruct]
  -[REMNSPersistentHistoryTransaction author]
  -[REMNSPersistentHistoryTransaction timestamp]
  -[REMNSPersistentHistoryTransaction isEqual:]
  -[REMNSPersistentHistoryTransaction initWithCoder:]
  -[REMNSPersistentHistoryTransaction _resolveAccountID:]


REMOrderedIdentifierMap : NSObject <NSSecureCoding, NSCopying>
 @property  NSArray *orderedIdentifiers

  // class methods
  +[REMOrderedIdentifierMap supportsSecureCoding]

  // instance methods
  -[REMOrderedIdentifierMap encodeWithCoder:]
  -[REMOrderedIdentifierMap .cxx_destruct]
  -[REMOrderedIdentifierMap copyWithZone:]
  -[REMOrderedIdentifierMap isEqual:]
  -[REMOrderedIdentifierMap init]
  -[REMOrderedIdentifierMap initWithCoder:]
  -[REMOrderedIdentifierMap orderedIdentifiers]
  -[REMOrderedIdentifierMap initWithOrderedIdentifiers:]
  -[REMOrderedIdentifierMap setOrderedIdentifiers:]


REMTemplatePublicLink : NSObject <NSCopying, NSSecureCoding>
 @property  NSURL *url
 @property  REMTemplatePublicLinkConfiguration *configuration
 @property  NSDate *creationDate
 @property  NSDate *lastModifiedDate
 @property  NSDate *expirationDate
 @property  BOOL canBeUpdated

  // class methods
  +[REMTemplatePublicLink supportsSecureCoding]

  // instance methods
  -[REMTemplatePublicLink expirationDate]
  -[REMTemplatePublicLink encodeWithCoder:]
  -[REMTemplatePublicLink lastModifiedDate]
  -[REMTemplatePublicLink configuration]
  -[REMTemplatePublicLink .cxx_destruct]
  -[REMTemplatePublicLink creationDate]
  -[REMTemplatePublicLink copyWithZone:]
  -[REMTemplatePublicLink url]
  -[REMTemplatePublicLink isEqual:]
  -[REMTemplatePublicLink initWithCoder:]
  -[REMTemplatePublicLink canBeUpdated]
  -[REMTemplatePublicLink initWithURL:configuration:creationDate:lastModifiedDate:expirationDate:canBeUpdated:]


REMHashtag : NSObject <REMDAChangeTrackableFetchableModel, REMDAChangedModelObjectResult, _REMDAChangeTrackableModel, NSSecureCoding, NSCopying, REMObjectIDProviding, REMHashtagProtocol>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  NSString *externalIdentifierForMarkedForDeletionObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long type
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  REMObjectID *reminderID
 @property  NSString *name
 @property  NSDate *creationDate
 @property  REMObjectID *remObjectID

  // class methods
  +[REMHashtag supportsSecureCoding]
  +[REMHashtag rem_DA_supportsConcealedObjects]
  +[REMHashtag newObjectID]
  +[REMHashtag cdEntityName]
  +[REMHashtag isChangeTrackableModel]
  +[REMHashtag rem_DA_deletedKeyFromConcealedModelObjectBlock]
  +[REMHashtag objectIDWithUUID:]
  +[REMHashtag rem_DA_fetchByObjectIDBlock]
  +[REMHashtag rem_DA_supportsFetching]
  +[REMHashtag rem_DA_deletedKeyFromTombstoneBlock]
  +[REMHashtag rem_DA_fetchByObjectIDsBlock]
  +[REMHashtag isChangeTrackableFetchableModel]
  +[REMHashtag rem_DA_propertiesAffectingIsConcealed]

  // instance methods
  -[REMHashtag objectID]
  -[REMHashtag remObjectID]
  -[REMHashtag accountID]
  -[REMHashtag encodeWithCoder:]
  -[REMHashtag type]
  -[REMHashtag objectIdentifier]
  -[REMHashtag .cxx_destruct]
  -[REMHashtag creationDate]
  -[REMHashtag copyWithZone:]
  -[REMHashtag name]
  -[REMHashtag isEqual:]
  -[REMHashtag initWithCoder:]
  -[REMHashtag initWithObjectID:accountID:reminderID:type:name:]
  -[REMHashtag reminderID]
  -[REMHashtag initWithObjectID:accountID:reminderID:type:name:creationDate:]
  -[REMHashtag isEqualToHashtag:]


REMSharedToMeReminderPlaceholder : NSObject <REMDAChangeTrackableModel, _REMDAChangeTrackableModel, NSSecureCoding, NSCopying, REMObjectIDProviding>
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  NSString *externalIdentifierForMarkedForDeletionObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  REMObjectID *remObjectID

  // class methods
  +[REMSharedToMeReminderPlaceholder supportsSecureCoding]
  +[REMSharedToMeReminderPlaceholder rem_DA_supportsConcealedObjects]
  +[REMSharedToMeReminderPlaceholder newObjectID]
  +[REMSharedToMeReminderPlaceholder cdEntityName]
  +[REMSharedToMeReminderPlaceholder isChangeTrackableModel]
  +[REMSharedToMeReminderPlaceholder rem_DA_deletedKeyFromConcealedModelObjectBlock]
  +[REMSharedToMeReminderPlaceholder objectIDWithUUID:]
  +[REMSharedToMeReminderPlaceholder rem_DA_fetchByObjectIDBlock]
  +[REMSharedToMeReminderPlaceholder rem_DA_supportsFetching]
  +[REMSharedToMeReminderPlaceholder rem_DA_deletedKeyFromTombstoneBlock]
  +[REMSharedToMeReminderPlaceholder rem_DA_fetchByObjectIDsBlock]
  +[REMSharedToMeReminderPlaceholder rem_DA_propertiesAffectingIsConcealed]

  // instance methods
  -[REMSharedToMeReminderPlaceholder objectID]
  -[REMSharedToMeReminderPlaceholder remObjectID]
  -[REMSharedToMeReminderPlaceholder accountID]
  -[REMSharedToMeReminderPlaceholder encodeWithCoder:]
  -[REMSharedToMeReminderPlaceholder objectIdentifier]
  -[REMSharedToMeReminderPlaceholder .cxx_destruct]
  -[REMSharedToMeReminderPlaceholder copyWithZone:]
  -[REMSharedToMeReminderPlaceholder isEqual:]
  -[REMSharedToMeReminderPlaceholder initWithCoder:]
  -[REMSharedToMeReminderPlaceholder initWithObjectID:accountID:]
  -[REMSharedToMeReminderPlaceholder isEqualToSharedToMeReminderPlaceholder:]


REMRecurrenceRule : NSObject <NSSecureCoding, NSCopying, REMObjectIDProviding>
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  REMObjectID *reminderID
 @property  REMRecurrenceEnd *recurrenceEnd
 @property  long long frequency
 @property  long long interval
 @property  long long firstDayOfTheWeek
 @property  NSArray *daysOfTheWeek
 @property  NSArray *daysOfTheMonth
 @property  NSArray *daysOfTheYear
 @property  NSArray *weeksOfTheYear
 @property  NSArray *monthsOfTheYear
 @property  NSArray *setPositions
 @property  REMObjectID *remObjectID

  // class methods
  +[REMRecurrenceRule supportsSecureCoding]
  +[REMRecurrenceRule newObjectID]
  +[REMRecurrenceRule cdEntityName]
  +[REMRecurrenceRule objectIDWithUUID:]
  +[REMRecurrenceRule iCalendarValueFromRecurrenceType:]
  +[REMRecurrenceRule iCalendarValueFromDate:isDateOnly:isFloating:]
  +[REMRecurrenceRule nextRecurrentDueDateAfter:dueDate:timeZone:allDay:recurrenceRules:]
  +[REMRecurrenceRule iCalendarValueFromWeekday:]
  +[REMRecurrenceRule _convertREMRecurrenceFrequencyToCalRecurrenceFrequency:]

  // instance methods
  -[REMRecurrenceRule frequency]
  -[REMRecurrenceRule objectID]
  -[REMRecurrenceRule remObjectID]
  -[REMRecurrenceRule accountID]
  -[REMRecurrenceRule encodeWithCoder:]
  -[REMRecurrenceRule .cxx_destruct]
  -[REMRecurrenceRule copyWithZone:]
  -[REMRecurrenceRule isEqual:]
  -[REMRecurrenceRule iCalendarDescription]
  -[REMRecurrenceRule initWithCoder:]
  -[REMRecurrenceRule interval]
  -[REMRecurrenceRule daysOfTheWeek]
  -[REMRecurrenceRule daysOfTheMonth]
  -[REMRecurrenceRule daysOfTheYear]
  -[REMRecurrenceRule weeksOfTheYear]
  -[REMRecurrenceRule monthsOfTheYear]
  -[REMRecurrenceRule setPositions]
  -[REMRecurrenceRule initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:]
  -[REMRecurrenceRule recurrenceEnd]
  -[REMRecurrenceRule firstDayOfTheWeek]
  -[REMRecurrenceRule stringValueAsDateOnly:isFloating:]
  -[REMRecurrenceRule isEqualToRecurrenceRule:]
  -[REMRecurrenceRule reminderID]
  -[REMRecurrenceRule initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:end:]
  -[REMRecurrenceRule initWithRecurrenceRule:objectID:accountID:reminderID:]
  -[REMRecurrenceRule initWithRecurrenceRule:objectID:end:]


REMXPCDaemonInterface : NSObject
  // class methods
  +[REMXPCDaemonInterface interface]


REMXPCClientInterface : NSObject
  // class methods
  +[REMXPCClientInterface interface]


REMManualOrdering : NSObject <NSCopying, NSSecureCoding>
 @property  REMObjectID *objectID
 @property  short listType
 @property  NSString *listID
 @property  NSArray *topLevelElementIDs
 @property  NSDictionary *secondaryLevelElementIDsByTopLevelElementID
 @property  REMObjectID *uncommitedElementsAccountID
 @property  NSDate *modifiedDate

  // class methods
  +[REMManualOrdering supportsSecureCoding]
  +[REMManualOrdering newObjectID]
  +[REMManualOrdering cdEntityName]
  +[REMManualOrdering objectIDWithUUID:]

  // instance methods
  -[REMManualOrdering changedKeys]
  -[REMManualOrdering objectID]
  -[REMManualOrdering remObjectID]
  -[REMManualOrdering encodeWithCoder:]
  -[REMManualOrdering .cxx_destruct]
  -[REMManualOrdering copyWithZone:]
  -[REMManualOrdering modifiedDate]
  -[REMManualOrdering isEqual:]
  -[REMManualOrdering initWithCoder:]
  -[REMManualOrdering listType]
  -[REMManualOrdering listID]
  -[REMManualOrdering initWithObjectID:listType:listID:topLevelElementIDs:secondaryLevelElementIDsByTopLevelElementID:uncommitedElementsAccountID:modifiedDate:]
  -[REMManualOrdering topLevelElementIDs]
  -[REMManualOrdering secondaryLevelElementIDsByTopLevelElementID]
  -[REMManualOrdering uncommitedElementsAccountID]
  -[REMManualOrdering initWithObjectID:listType:listID:modifiedDate:]


REMNSPersistentHistoryToken : REMChangeToken
 @property  NSPersistentHistoryToken *token

  // class methods
  +[REMNSPersistentHistoryToken supportsSecureCoding]

  // instance methods
  -[REMNSPersistentHistoryToken initWithPersistentHistoryToken:]
  -[REMNSPersistentHistoryToken token]
  -[REMNSPersistentHistoryToken encodeWithCoder:]
  -[REMNSPersistentHistoryToken .cxx_destruct]
  -[REMNSPersistentHistoryToken isEqual:]
  -[REMNSPersistentHistoryToken compareToken:error:]
  -[REMNSPersistentHistoryToken initWithCoder:]


REMSystemUtilities : NSObject
  // class methods
  +[REMSystemUtilities isInternalInstall]
  +[REMSystemUtilities systemBuildVersion]
  +[REMSystemUtilities systemVersionDictionary]


REMXPCDebugPerformerInterface : NSObject
  // class methods
  +[REMXPCDebugPerformerInterface interface]


REMXPCSuggestedAttributesPerformerInterface : NSObject
  // class methods
  +[REMXPCSuggestedAttributesPerformerInterface interface]


REMContactRepresentation : NSObject <NSSecureCoding>
 @property  NSArray *phones
 @property  NSArray *emails

  // class methods
  +[REMContactRepresentation supportsSecureCoding]
  +[REMContactRepresentation representationFromData:]

  // instance methods
  -[REMContactRepresentation encodeWithCoder:]
  -[REMContactRepresentation emails]
  -[REMContactRepresentation .cxx_destruct]
  -[REMContactRepresentation archivedData]
  -[REMContactRepresentation isEqual:]
  -[REMContactRepresentation initWithCoder:]
  -[REMContactRepresentation phones]
  -[REMContactRepresentation setEmails:]
  -[REMContactRepresentation setPhones:]
  -[REMContactRepresentation initWithPhones:emails:]
  -[REMContactRepresentation matchesContactRepresentation:]


REMDataAccessBehaviorManager : NSObject
 @property  REMXPCDaemonController *daemonController

  // instance methods
  -[REMDataAccessBehaviorManager _debugPerformerWithReason:errorHandler:]
  -[REMDataAccessBehaviorManager enableDataAccess]
  -[REMDataAccessBehaviorManager unapplyChangeTrackingBehavior:]
  -[REMDataAccessBehaviorManager _crashDaemonWithMessage:]
  -[REMDataAccessBehaviorManager applyChangeTrackingBehavior:]
  -[REMDataAccessBehaviorManager _getBoolForKey:withDefaultValue:]
  -[REMDataAccessBehaviorManager setDaemonController:]
  -[REMDataAccessBehaviorManager fetchStatusReportsWithError:]
  -[REMDataAccessBehaviorManager disableDataAccess]
  -[REMDataAccessBehaviorManager .cxx_destruct]
  -[REMDataAccessBehaviorManager _setIntegerValue:forBehaviorKey:]
  -[REMDataAccessBehaviorManager initWithDaemonController:]
  -[REMDataAccessBehaviorManager daemonController]
  -[REMDataAccessBehaviorManager isDataAccessEnabled]
  -[REMDataAccessBehaviorManager disableBabySitter]
  -[REMDataAccessBehaviorManager isBabySitterEnabled]
  -[REMDataAccessBehaviorManager _getIntegerForKey:withDefaultValue:]
  -[REMDataAccessBehaviorManager changeTrackingBehaviors]
  -[REMDataAccessBehaviorManager _setBoolValue:forBehaviorKey:]
  -[REMDataAccessBehaviorManager init]
  -[REMDataAccessBehaviorManager enableBabySitter]


REMSmartListStorage : NSObject <NSCopying, NSSecureCoding, REMObjectIDProviding, REMObjectStorageSupportedVersionProviding>
 @property  REMAccountCapabilities *accountCapabilities
 @property  REMObjectID *objectID
 @property  NSString *smartListType
 @property  REMManualOrdering *manualOrdering
 @property  NSString *sortingStyle
 @property  NSDate *pinnedDate
 @property  NSUUID *mostRecentTargetTemplateIdentifier
 @property  BOOL showingLargeAttachments
 @property  REMObjectID *accountID
 @property  REMObjectID *parentAccountID
 @property  REMObjectID *parentListID
 @property  NSString *name
 @property  REMColor *color
 @property  NSString *badgeEmblem
 @property  NSData *filterData
 @property  BOOL isPersisted
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  REMObjectID *remObjectID
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMSmartListStorage supportsSecureCoding]
  +[REMSmartListStorage newObjectID]
  +[REMSmartListStorage cdEntityName]
  +[REMSmartListStorage objectIDWithUUID:]

  // instance methods
  -[REMSmartListStorage cdKeyToStorageKeyMap]
  -[REMSmartListStorage setMostRecentTargetTemplateIdentifier:]
  -[REMSmartListStorage objectID]
  -[REMSmartListStorage optionalObjectID]
  -[REMSmartListStorage setParentAccountID:]
  -[REMSmartListStorage effectiveMinimumSupportedVersion]
  -[REMSmartListStorage setParentListID:]
  -[REMSmartListStorage badgeEmblem]
  -[REMSmartListStorage pinnedDate]
  -[REMSmartListStorage remObjectID]
  -[REMSmartListStorage setResolutionTokenMapData:]
  -[REMSmartListStorage minimumSupportedVersion]
  -[REMSmartListStorage setShowingLargeAttachments:]
  -[REMSmartListStorage setStoreGenerationIfNeeded:]
  -[REMSmartListStorage isUnsupported]
  -[REMSmartListStorage accountID]
  -[REMSmartListStorage parentListID]
  -[REMSmartListStorage storeGeneration]
  -[REMSmartListStorage setResolutionTokenMap:]
  -[REMSmartListStorage setSortingStyle:]
  -[REMSmartListStorage showingLargeAttachments]
  -[REMSmartListStorage setPinnedDate:]
  -[REMSmartListStorage resolutionTokenMap]
  -[REMSmartListStorage setObjectID:]
  -[REMSmartListStorage setMinimumSupportedVersion:]
  -[REMSmartListStorage mostRecentTargetTemplateIdentifier]
  -[REMSmartListStorage setEffectiveMinimumSupportedVersion:]
  -[REMSmartListStorage resolutionTokenMapData]
  -[REMSmartListStorage parentAccountID]
  -[REMSmartListStorage setBadgeEmblem:]
  -[REMSmartListStorage sortingStyle]
  -[REMSmartListStorage encodeWithCoder:]
  -[REMSmartListStorage setAccountID:]
  -[REMSmartListStorage setIsPersisted:]
  -[REMSmartListStorage manualOrdering]
  -[REMSmartListStorage .cxx_destruct]
  -[REMSmartListStorage isPersisted]
  -[REMSmartListStorage accountCapabilities]
  -[REMSmartListStorage initWithObjectID:accountID:smartListType:]
  -[REMSmartListStorage setName:]
  -[REMSmartListStorage setManualOrdering:]
  -[REMSmartListStorage copyWithZone:]
  -[REMSmartListStorage color]
  -[REMSmartListStorage name]
  -[REMSmartListStorage setAccountCapabilities:]
  -[REMSmartListStorage setSmartListType:]
  -[REMSmartListStorage setColor:]
  -[REMSmartListStorage smartListType]
  -[REMSmartListStorage isEqual:]
  -[REMSmartListStorage filterData]
  -[REMSmartListStorage setFilterData:]
  -[REMSmartListStorage initWithCoder:]


REMAccountSortDescriptor : NSObject <NSSecureCoding>
 @property  long long type
 @property  BOOL ascending

  // class methods
  +[REMAccountSortDescriptor supportsSecureCoding]

  // instance methods
  -[REMAccountSortDescriptor ascending]
  -[REMAccountSortDescriptor encodeWithCoder:]
  -[REMAccountSortDescriptor type]
  -[REMAccountSortDescriptor initWithCoder:]
  -[REMAccountSortDescriptor initWithType:ascending:]


REMSaveRequest : NSObject
 @property  NSMutableDictionary *trackedTemplateChangeItems
 @property  NSMutableSet *saveRequestChangeEvents
 @property  NSString *author
 @property  BOOL saved
 @property  NSMutableDictionary *trackedAccountChangeItems
 @property  NSMutableDictionary *trackedListChangeItems
 @property  NSMutableDictionary *trackedSmartListChangeItems
 @property  NSMutableDictionary *trackedReminderChangeItems
 @property  NSMutableDictionary *trackedAccountCapabilities
 @property  BOOL updateLastModifiedDates
 @property  BOOL saveIsNoopIfNoChangedKeys
 @property  BOOL cloneCompletedRecurrentRemindersAtSave
 @property  BOOL applyCRDTsWithoutMerging
 @property  BOOL syncToCloudKit
 @property  <REMReplicaManagerProviding> *replicaManagerProvider
 @property  <REMSaveRequestNotifyChangeDelegate> *notifyChangeDelegate
 @property  REMStore *store

  // instance methods
  -[REMSaveRequest saveRequestChangeEvents]
  -[REMSaveRequest _addAccountWithType:name:]
  -[REMSaveRequest _addCalDavAccountWithName:]
  -[REMSaveRequest setSaved:]
  -[REMSaveRequest icsDueOrEndDateWithICSCalendarItem:options:]
  -[REMSaveRequest _trackedReminderChangeItemForObjectID:]
  -[REMSaveRequest _copyReminder:toListChangeItem:]
  -[REMSaveRequest applyCRDTsWithoutMerging]
  -[REMSaveRequest trackedTemplateChangeItems]
  -[REMSaveRequest notifyChangeDelegateForSaveSuccess:]
  -[REMSaveRequest _prepareSave:]
  -[REMSaveRequest _copyReminderChangeItem:toListChangeItem:]
  -[REMSaveRequest addReminderWithTitle:toReminderSubtaskContextChangeItem:]
  -[REMSaveRequest __addAccountWithType:name:accountObjectID:]
  -[REMSaveRequest setUpdateLastModifiedDates:]
  -[REMSaveRequest _trackAccountChangeItem:]
  -[REMSaveRequest _addLocalAccountWithName:]
  -[REMSaveRequest store]
  -[REMSaveRequest trackedAccountCapabilities]
  -[REMSaveRequest _trackedListChangeItemForObjectID:]
  -[REMSaveRequest addReminderWithTitle:toReminderSubtaskContextChangeItem:reminderObjectID:]
  -[REMSaveRequest _updateTrackedListChangeItem:withObjectID:]
  -[REMSaveRequest _addTestOnlyPrimaryCKAccountWithName:accountObjectID:]
  -[REMSaveRequest updateList:]
  -[REMSaveRequest trackedReminderChangeItems]
  -[REMSaveRequest initWithStore:]
  -[REMSaveRequest updateReminderChangeItem:fromICSData:isNew:withOptions:error:]
  -[REMSaveRequest _updateAccountWithListChangeItem:]
  -[REMSaveRequest _populateReminderChangeItem:withICSTodoItem:icsCalendar:isNew:withOptions:]
  -[REMSaveRequest _addTestOnlyLocalInternalAccountWithName:accountObjectID:]
  -[REMSaveRequest _addTestOnlyPrimaryCKAccountWithName:]
  -[REMSaveRequest addListUsingPublicTemplateWithREMListRepresentation:toAccountChangeItem:]
  -[REMSaveRequest _trackReminderChangeItem:]
  -[REMSaveRequest _addAccountWithType:name:accountObjectID:]
  -[REMSaveRequest addGroupWithName:toAccountGroupContextChangeItem:groupObjectID:]
  -[REMSaveRequest _addAlarmsToReminderChangeItem:withICSAlarm:icsCalendar:]
  -[REMSaveRequest _iCalendarDataFromICSTodoItem:icsCalendar:]
  -[REMSaveRequest setSyncToCloudKit:]
  -[REMSaveRequest saveIsNoopIfNoChangedKeys]
  -[REMSaveRequest addListWithName:toListSublistContextChangeItem:]
  -[REMSaveRequest .cxx_destruct]
  -[REMSaveRequest updateReminderChangeItem:fromICSTodo:icsCalendar:isNew:withOptions:]
  -[REMSaveRequest _willSaveAccountChangeItems:listChangeItems:smartListChangeItems:templateChangeItems:reminderChangeItems:]
  -[REMSaveRequest trackedListChangeItems]
  -[REMSaveRequest addListUsingTemplate:toAccountChangeItem:]
  -[REMSaveRequest syncToCloudKit]
  -[REMSaveRequest updateUIDInReminderChangeItem:fromICSComponent:icsCalendar:]
  -[REMSaveRequest updateAccount:]
  -[REMSaveRequest _addTestOnlyNonPrimaryCKAccountWithName:accountObjectID:]
  -[REMSaveRequest setNotifyChangeDelegate:]
  -[REMSaveRequest _trackListChangeItem:]
  -[REMSaveRequest _populateRecurrencesInReminderChangeItem:withICSComponent:icsCalendar:]
  -[REMSaveRequest _updateListWithReminderChangeItem:]
  -[REMSaveRequest addCustomSmartListWithName:toAccountChangeItem:smartListObjectID:]
  -[REMSaveRequest addTemplateWithName:configuration:toAccountChangeItem:templateObjectID:]
  -[REMSaveRequest performRecurrenceClone]
  -[REMSaveRequest _trackedAccountCapabilitiesForObjectID:]
  -[REMSaveRequest addTemplateWithName:configuration:toAccountChangeItem:]
  -[REMSaveRequest _updateResolutionTokenMapForChangeItem:]
  -[REMSaveRequest addReminderWithTitle:toListChangeItem:]
  -[REMSaveRequest _addTestOnlyNonPrimaryCKAccountWithName:]
  -[REMSaveRequest addListWithName:toAccountChangeItem:]
  -[REMSaveRequest setCloneCompletedRecurrentRemindersAtSave:]
  -[REMSaveRequest _addCalDavAccountWithName:accountObjectID:]
  -[REMSaveRequest cloneCompletedRecurrentRemindersAtSave]
  -[REMSaveRequest _updateTrackedReminderChangeItem:withObjectID:]
  -[REMSaveRequest _addExchangeAccountWithName:]
  -[REMSaveRequest _populateAlarmsInReminderChangeItem:withICSAlarms:icsCalendar:]
  -[REMSaveRequest author]
  -[REMSaveRequest _changeItemsAreAllEmpty]
  -[REMSaveRequest saveWithQueue:completion:]
  -[REMSaveRequest isSaved]
  -[REMSaveRequest addCustomSmartListWithName:toListSublistContextChangeItem:smartListObjectID:]
  -[REMSaveRequest saveSynchronouslyWithError:]
  -[REMSaveRequest _trackSmartListChangeItem:]
  -[REMSaveRequest _updateListStorage:accountCapabilities:]
  -[REMSaveRequest setSaveRequestChangeEvents:]
  -[REMSaveRequest addReminderWithTitle:toListChangeItem:reminderObjectID:]
  -[REMSaveRequest _copyReminder:toReminderSubtaskContextChangeItem:]
  -[REMSaveRequest addListWithName:toListSublistContextChangeItem:listObjectID:]
  -[REMSaveRequest setReplicaManagerProvider:]
  -[REMSaveRequest setApplyCRDTsWithoutMerging:]
  -[REMSaveRequest updateSmartList:]
  -[REMSaveRequest performPreSaveActions]
  -[REMSaveRequest trackedSmartListChangeItems]
  -[REMSaveRequest _trackedTemplateChangeItemForObjectID:]
  -[REMSaveRequest setSaveIsNoopIfNoChangedKeys:]
  -[REMSaveRequest addListWithName:toAccountChangeItem:listObjectID:]
  -[REMSaveRequest updateTemplate:]
  -[REMSaveRequest _trackTemplateChangeItem:]
  -[REMSaveRequest _copyReminderChangeItem:toReminderSubtaskContextChangeItem:]
  -[REMSaveRequest _trackedAccountChangeItemForObjectID:]
  -[REMSaveRequest addGroupWithName:toAccountGroupContextChangeItem:]
  -[REMSaveRequest updateReminder:]
  -[REMSaveRequest _addExchangeAccountWithName:accountObjectID:]
  -[REMSaveRequest trackedAccountChangeItems]
  -[REMSaveRequest replicaManagerProvider]
  -[REMSaveRequest _addTestOnlyLocalInternalAccountWithName:]
  -[REMSaveRequest _updateTrackedAccountChangeItem:withObjectID:]
  -[REMSaveRequest notifyChangeDelegate]
  -[REMSaveRequest _trackedSmartListChangeItemForObjectID:]
  -[REMSaveRequest _trackAccountCapabilities:forObjectID:]
  -[REMSaveRequest updateLastModifiedDates]
  -[REMSaveRequest importRemindersFromICSData:insertIntoListChangeItem:error:]
  -[REMSaveRequest _addLocalAccountWithName:accountObjectID:]
  -[REMSaveRequest _updateTrackedSmartListChangeItem:withObjectID:]
  -[REMSaveRequest _addTestOnlyExtraPrimaryCKAccountWithName:]
  -[REMSaveRequest __addAccountWithType:name:]
  -[REMSaveRequest _addTestOnlyExtraPrimaryCKAccountWithName:accountObjectID:]
  -[REMSaveRequest setAuthor:]


REMObjectID : NSObject <REMDAChangedIdentifierResult, REMCRMergeableDataType, NSCopying, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSUUID *uuid
 @property  NSString *entityName
 @property  NSString *stringRepresentation
 @property  NSURL *urlRepresentation

  // class methods
  +[REMObjectID supportsSecureCoding]
  +[REMObjectID rem_registerClassAtCRCoderIfNeeded]
  +[REMObjectID objectIDWithUUID:entityName:]
  +[REMObjectID initialize]
  +[REMObjectID objectIDWithURL:]

  // instance methods
  -[REMObjectID tombstone]
  -[REMObjectID entityName]
  -[REMObjectID urlRepresentation]
  -[REMObjectID deltaSince:in:]
  -[REMObjectID encodeWithCoder:]
  -[REMObjectID encodeWithCRCoder:]
  -[REMObjectID mergeWith:]
  -[REMObjectID uuid]
  -[REMObjectID .cxx_destruct]
  -[REMObjectID walkGraph:]
  -[REMObjectID stringRepresentation]
  -[REMObjectID copyWithZone:]
  -[REMObjectID realizeLocalChangesIn:]
  -[REMObjectID initWithUUID:entityName:]
  -[REMObjectID initWithCRCoder:]
  -[REMObjectID redactedDescription]
  -[REMObjectID setDocument:]
  -[REMObjectID isEqual:]
  -[REMObjectID initWithCoder:]


REMFetchRequest : NSObject <NSSecureCoding>
 @property  _REMFetchExecutor *fetchExecutor
 @property  REMFetchResultToken *fetchResultToken
 @property  long long type
 @property  unsigned long fetchLimit

  // class methods
  +[REMFetchRequest supportsSecureCoding]

  // instance methods
  -[REMFetchRequest fetchLimit]
  -[REMFetchRequest setFetchLimit:]
  -[REMFetchRequest encodeWithCoder:]
  -[REMFetchRequest type]
  -[REMFetchRequest .cxx_destruct]
  -[REMFetchRequest setType:]
  -[REMFetchRequest copyWithZone:]
  -[REMFetchRequest initWithCoder:]
  -[REMFetchRequest fetchResultToken]
  -[REMFetchRequest setFetchResultToken:]
  -[REMFetchRequest initWithFetchExecutor:]
  -[REMFetchRequest storagesAndParentFetchRequest]
  -[REMFetchRequest storagesOnlyFetchRequest]
  -[REMFetchRequest countOnlyFetchRequest]
  -[REMFetchRequest objectIDsOnlyFetchRequest]
  -[REMFetchRequest metadataFetchRequest]
  -[REMFetchRequest fetchRequestWithFetchResultToken:]
  -[REMFetchRequest copyWithType:]
  -[REMFetchRequest fetchExecutor]
  -[REMFetchRequest setFetchExecutor:]


_REMFetchExecutor : NSObject <NSSecureCoding>
  // class methods
  +[_REMFetchExecutor supportsSecureCoding]

  // instance methods
  -[_REMFetchExecutor encodeWithCoder:]
  -[_REMFetchExecutor initWithCoder:]
  -[_REMFetchExecutor resultsFromFetchResult:inStore:error:]
  -[_REMFetchExecutor metadataFromFetchResult:inStore:error:]


REMListStorage : NSObject <NSCopying, NSSecureCoding, REMObjectIDProviding, REMExternalSyncMetadataWritableProviding, REMObjectStorageSupportedVersionProviding>
 @property  REMObjectID *accountID
 @property  REMObjectID *objectID
 @property  BOOL isGroup
 @property  NSString *name
 @property  REMColor *color
 @property  NSString *badgeEmblem
 @property  NSString *sortingStyle
 @property  NSDate *pinnedDate
 @property  NSUUID *mostRecentTargetTemplateIdentifier
 @property  BOOL showingLargeAttachments
 @property  REMObjectID *parentAccountID
 @property  REMObjectID *parentListID
 @property  NSString *displayName
 @property  NSOrderedSet *reminderIDsMergeableOrdering
 @property  NSData *reminderIDsMergeableOrderingData
 @property  NSDictionary *reminderIDsOrderingHints
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  NSSet *reminderIDsToUndelete
 @property  NSSet *childListIDsToUndelete
 @property  NSSet *childSmartListIDsToUndelete
 @property  BOOL remindersICSDisplayOrderChanged
 @property  REMObjectID *templateID
 @property  NSString *sharedOwnerName
 @property  NSString *sharedOwnerAddress
 @property  long long sharingStatus
 @property  NSArray *sharees
 @property  REMObjectID *sharedOwnerID
 @property  NSDate *lastUserAccessDate
 @property  NSArray *calDAVNotifications
 @property  NSString *daExternalIdentificationTag
 @property  NSDictionary *daBulkRequests
 @property  long long daDisplayOrder
 @property  BOOL daIsEventOnlyContainer
 @property  BOOL daIsReadOnly
 @property  BOOL daIsImmutable
 @property  BOOL daIsNotificationsCollection
 @property  BOOL isPlaceholder
 @property  NSString *currentUserShareParticipantID
 @property  REMObjectID *remObjectID
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMListStorage supportsSecureCoding]
  +[REMListStorage newObjectID]
  +[REMListStorage cdEntityName]
  +[REMListStorage objectIDWithUUID:]
  +[REMListStorage reminderIDsMergeableOrderingFromReminderIDUUIDStringsJSONData:error:]
  +[REMListStorage reminderIDUUIDStringsJSONDataFromReminderIDsMergeableOrdering:error:]
  +[REMListStorage set_forceDisableFullRemindersSorting:]
  +[REMListStorage _forceDisableFullRemindersSorting]

  // instance methods
  -[REMListStorage cdKeyToStorageKeyMap]
  -[REMListStorage setMostRecentTargetTemplateIdentifier:]
  -[REMListStorage objectID]
  -[REMListStorage optionalObjectID]
  -[REMListStorage setParentAccountID:]
  -[REMListStorage effectiveMinimumSupportedVersion]
  -[REMListStorage setParentListID:]
  -[REMListStorage badgeEmblem]
  -[REMListStorage pinnedDate]
  -[REMListStorage remObjectID]
  -[REMListStorage setResolutionTokenMapData:]
  -[REMListStorage minimumSupportedVersion]
  -[REMListStorage setShowingLargeAttachments:]
  -[REMListStorage setStoreGenerationIfNeeded:]
  -[REMListStorage isUnsupported]
  -[REMListStorage accountID]
  -[REMListStorage parentListID]
  -[REMListStorage storeGeneration]
  -[REMListStorage setResolutionTokenMap:]
  -[REMListStorage setSortingStyle:]
  -[REMListStorage showingLargeAttachments]
  -[REMListStorage setPinnedDate:]
  -[REMListStorage reminderIDsToUndelete]
  -[REMListStorage resolutionTokenMap]
  -[REMListStorage setObjectID:]
  -[REMListStorage setMinimumSupportedVersion:]
  -[REMListStorage mostRecentTargetTemplateIdentifier]
  -[REMListStorage setSharees:]
  -[REMListStorage setEffectiveMinimumSupportedVersion:]
  -[REMListStorage resolutionTokenMapData]
  -[REMListStorage parentAccountID]
  -[REMListStorage setBadgeEmblem:]
  -[REMListStorage sortingStyle]
  -[REMListStorage ekColor]
  -[REMListStorage sharedOwnerID]
  -[REMListStorage childSmartListIDsToUndelete]
  -[REMListStorage initWithObjectID:accountID:name:isGroup:reminderIDsMergeableOrderingData:]
  -[REMListStorage setExternalModificationTag:]
  -[REMListStorage setDaDisplayOrder:]
  -[REMListStorage setReminderIDsMergeableOrdering:]
  -[REMListStorage daSyncToken]
  -[REMListStorage daIsImmutable]
  -[REMListStorage isGroup]
  -[REMListStorage encodeWithCoder:]
  -[REMListStorage setAccountID:]
  -[REMListStorage setIsGroup:]
  -[REMListStorage setReminderIDsToUndelete:]
  -[REMListStorage initWithObjectID:accountID:name:]
  -[REMListStorage setReminderIDsOrderingHints:]
  -[REMListStorage daDisplayOrder]
  -[REMListStorage setDaIsNotificationsCollection:]
  -[REMListStorage childListIDsToUndelete]
  -[REMListStorage isPlaceholder]
  -[REMListStorage daPushKey]
  -[REMListStorage externalIdentifier]
  -[REMListStorage setDaExternalIdentificationTag:]
  -[REMListStorage .cxx_destruct]
  -[REMListStorage setDaSyncToken:]
  -[REMListStorage daIsEventOnlyContainer]
  -[REMListStorage setSharedOwnerAddress:]
  -[REMListStorage hasDeserializedReminderIDsMergeableOrdering]
  -[REMListStorage setDaPushKey:]
  -[REMListStorage sharedOwnerName]
  -[REMListStorage sharingStatus]
  -[REMListStorage calDAVNotifications]
  -[REMListStorage daIsReadOnly]
  -[REMListStorage daIsNotificationsCollection]
  -[REMListStorage setDaIsEventOnlyContainer:]
  -[REMListStorage reminderIDsOrderingHints]
  -[REMListStorage externalModificationTag]
  -[REMListStorage setName:]
  -[REMListStorage initWithObjectID:accountID:name:isGroup:reminderIDsMergeableOrdering:]
  -[REMListStorage setSharingStatus:]
  -[REMListStorage setSharedOwnerName:]
  -[REMListStorage daBulkRequests]
  -[REMListStorage copyWithZone:]
  -[REMListStorage color]
  -[REMListStorage setDaIsReadOnly:]
  -[REMListStorage currentUserShareParticipantID]
  -[REMListStorage sharees]
  -[REMListStorage setCalDAVNotifications:]
  -[REMListStorage name]
  -[REMListStorage reminderIDsMergeableOrdering]
  -[REMListStorage displayName]
  -[REMListStorage templateID]
  -[REMListStorage setTemplateID:]
  -[REMListStorage setColor:]
  -[REMListStorage lastUserAccessDate]
  -[REMListStorage setDaIsImmutable:]
  -[REMListStorage remindersICSDisplayOrderChanged]
  -[REMListStorage sharedOwnerAddress]
  -[REMListStorage setSharedOwnerID:]
  -[REMListStorage setDaBulkRequests:]
  -[REMListStorage setChildSmartListIDsToUndelete:]
  -[REMListStorage setChildListIDsToUndelete:]
  -[REMListStorage reminderIDsMergeableOrderingData]
  -[REMListStorage setCurrentUserShareParticipantID:]
  -[REMListStorage isEqual:]
  -[REMListStorage daExternalIdentificationTag]
  -[REMListStorage setReminderIDsMergeableOrderingData:]
  -[REMListStorage setIsPlaceholder:]
  -[REMListStorage setRemindersICSDisplayOrderChanged:]
  -[REMListStorage initWithCoder:]
  -[REMListStorage setLastUserAccessDate:]
  -[REMListStorage setExternalIdentifier:]


REMReminderPredicateDescriptor : NSObject <NSSecureCoding>
 @property  long long type
 @property  REMObjectID *listID
 @property  REMObjectID *parentReminderID
 @property  NSArray *objectIDs
 @property  NSDate *startingDueDate
 @property  NSDate *endingDueDate
 @property  BOOL completed
 @property  NSArray *descriptors
 @property  NSString *text
 @property  long long textMatching

  // class methods
  +[REMReminderPredicateDescriptor supportsSecureCoding]
  +[REMReminderPredicateDescriptor andPredicateDescriptorWithDescriptors:]
  +[REMReminderPredicateDescriptor orPredicateDescriptorWithDescriptors:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithListID:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithParentReminderID:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithObjectIDs:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithDueDateOnOrBefore:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithDueDateOnOrAfter:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithDueDateBetween:and:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithCompleted:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithTitleEquals:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithTitleContains:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithTitleBeginsWith:]
  +[REMReminderPredicateDescriptor predicateDescriptorForRemindersWithTitleEndsWith:]

  // instance methods
  -[REMReminderPredicateDescriptor descriptors]
  -[REMReminderPredicateDescriptor text]
  -[REMReminderPredicateDescriptor encodeWithCoder:]
  -[REMReminderPredicateDescriptor type]
  -[REMReminderPredicateDescriptor setCompleted:]
  -[REMReminderPredicateDescriptor .cxx_destruct]
  -[REMReminderPredicateDescriptor initWithType:]
  -[REMReminderPredicateDescriptor completed]
  -[REMReminderPredicateDescriptor setDescriptors:]
  -[REMReminderPredicateDescriptor objectIDs]
  -[REMReminderPredicateDescriptor copyWithZone:]
  -[REMReminderPredicateDescriptor isEqual:]
  -[REMReminderPredicateDescriptor setText:]
  -[REMReminderPredicateDescriptor initWithCoder:]
  -[REMReminderPredicateDescriptor listID]
  -[REMReminderPredicateDescriptor initWithReminderPredicateDescriptor:]
  -[REMReminderPredicateDescriptor setTextMatching:]
  -[REMReminderPredicateDescriptor setStartingDueDate:]
  -[REMReminderPredicateDescriptor setEndingDueDate:]
  -[REMReminderPredicateDescriptor setObjectIDs:]
  -[REMReminderPredicateDescriptor setParentReminderID:]
  -[REMReminderPredicateDescriptor setListID:]
  -[REMReminderPredicateDescriptor textMatching]
  -[REMReminderPredicateDescriptor startingDueDate]
  -[REMReminderPredicateDescriptor endingDueDate]
  -[REMReminderPredicateDescriptor parentReminderID]


REMXPCStorageClasses : NSObject
  // class methods
  +[REMXPCStorageClasses remStorageClasses]


REMSiriSearchLimitedDataView : NSObject
 @property  REMStore *store

  // instance methods
  -[REMSiriSearchLimitedDataView store]
  -[REMSiriSearchLimitedDataView initWithStore:]
  -[REMSiriSearchLimitedDataView .cxx_destruct]
  -[REMSiriSearchLimitedDataView fetchRemindersMatchingTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:error:]


REMSiriSearchLimitedDataViewInvocation_fetchReminders : REMStoreInvocation <NSSecureCoding>
 @property  NSString *title
 @property  NSDate *dueAfter
 @property  NSDate *dueBefore
 @property  NSNumber *completed
 @property  NSNumber *hasLocation
 @property  NSString *location

  // class methods
  +[REMSiriSearchLimitedDataViewInvocation_fetchReminders supportsSecureCoding]

  // instance methods
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders encodeWithCoder:]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders .cxx_destruct]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders completed]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders title]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders copyWithZone:]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders location]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders isEqual:]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders hasLocation]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders initWithCoder:]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders dueAfter]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders dueBefore]
  -[REMSiriSearchLimitedDataViewInvocation_fetchReminders initWithTitle:dueAfter:dueBefore:isCompleted:hasLocation:location:]


REMList : NSObject <REMDAChangeTrackableFetchableModel, REMDAChangedModelObjectResult, _REMDAChangeTrackableModel, REMObjectIDProviding, REMExternalSyncMetadataProviding, REMSupportedVersionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  NSString *externalIdentifierForMarkedForDeletionObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *accountID
 @property  REMObjectID *parentAccountID
 @property  NSDictionary *reminderIDsOrderingHints
 @property  NSSet *reminderIDsToUndelete
 @property  NSSet *childListIDsToUndelete
 @property  NSSet *childSmartListIDsToUndelete
 @property  BOOL remindersICSDisplayOrderChanged
 @property  NSArray *calDAVNotifications
 @property  NSArray *sharees
 @property  REMObjectID *sharedOwnerID
 @property  NSDate *pinnedDate
 @property  NSUUID *mostRecentTargetTemplateIdentifier
 @property  BOOL isOriginOfExistingTemplate
 @property  NSString *currentUserShareParticipantID
 @property  REMListStorage *storage
 @property  NSOrderedSet *reminderIDsOrdering
 @property  NSOrderedSet *reminderIDsMergeableOrdering
 @property  NSData *reminderIDsMergeableOrderingData
 @property  BOOL isGroup
 @property  REMList *parentList
 @property  NSString *badgeEmblem
 @property  BOOL isPinned
 @property  BOOL showingLargeAttachments
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  REMObjectID *parentListID
 @property  NSString *displayName
 @property  NSString *sharedOwnerName
 @property  NSString *sharedOwnerAddress
 @property  long long sharingStatus
 @property  BOOL canBeShared
 @property  BOOL canBeIncludedInGroup
 @property  BOOL isShared
 @property  BOOL isOwnedByMe
 @property  BOOL isSharedToMe
 @property  NSDate *lastUserAccessDate
 @property  NSString *daExternalIdentificationTag
 @property  NSDictionary *daBulkRequests
 @property  long long daDisplayOrder
 @property  BOOL daIsEventOnlyContainer
 @property  BOOL daIsReadOnly
 @property  BOOL daIsImmutable
 @property  BOOL daIsNotificationsCollection
 @property  REMListCalDAVNotificationContext *calDAVNotificationContext
 @property  REMListShareeContext *shareeContext
 @property  BOOL isPlaceholder
 @property  REMStore *store
 @property  REMObjectID *objectID
 @property  REMAccount *account
 @property  NSString *name
 @property  REMColor *color
 @property  NSString *sortingStyle
 @property  REMListAppearanceContext *appearanceContext
 @property  REMListSublistContext *sublistContext
 @property  REMObjectID *remObjectID
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMList rem_DA_supportsConcealedObjects]
  +[REMList newObjectID]
  +[REMList isSharedWithShareeCount:sharingStatus:]
  +[REMList isOwnedByMeWithSharingStatus:]
  +[REMList cdEntityName]
  +[REMList isChangeTrackableModel]
  +[REMList localAccountDefaultListID]
  +[REMList rem_DA_deletedKeyFromConcealedModelObjectBlock]
  +[REMList siriFoundInAppsListID]
  +[REMList objectIDWithUUID:]
  +[REMList rem_DA_fetchByObjectIDBlock]
  +[REMList rem_DA_supportsFetching]
  +[REMList rem_DA_deletedKeyFromTombstoneBlock]
  +[REMList rem_DA_fetchByObjectIDsBlock]
  +[REMList fetchRequestWithPredicateDescriptor:sortDescriptors:]
  +[REMList isChangeTrackableFetchableModel]
  +[REMList rem_DA_propertiesAffectingIsConcealed]

  // instance methods
  -[REMList setValue:forUndefinedKey:]
  -[REMList canBeShared]
  -[REMList setStorage:]
  -[REMList optionalObjectID]
  -[REMList valueForUndefinedKey:]
  -[REMList account]
  -[REMList remObjectID]
  -[REMList isUnsupported]
  -[REMList isPinned]
  -[REMList fetchRemindersWithExternalIdentifiers:error:]
  -[REMList ekColor]
  -[REMList shouldUseExternalIdentifierAsDeletionKey]
  -[REMList canBeIncludedInGroup]
  -[REMList store]
  -[REMList externalIdentifierForMarkedForDeletionObject]
  -[REMList storage]
  -[REMList sharingStatusText]
  -[REMList fetchRemindersCountWithError:]
  -[REMList shareeContext]
  -[REMList respondsToSelector:]
  -[REMList .cxx_destruct]
  -[REMList isShared]
  -[REMList initWithStore:account:storage:]
  -[REMList forwardingTargetForSelector:]
  -[REMList isOwnedByMe]
  -[REMList parentList]
  -[REMList isOriginOfExistingTemplate]
  -[REMList fetchRemindersAndSubtasksWithError:]
  -[REMList setParentList:]
  -[REMList fetchReminderWithExternalIdentifier:error:]
  -[REMList calDAVNotificationContext]
  -[REMList appearanceContext]
  -[REMList sublistContext]
  -[REMList hack_overrideReminderIDsOrderingWithOrderedObjectIDs:]
  -[REMList reminderIDsOrdering]
  -[REMList formattedSharedOwnerName]
  -[REMList isEqual:]
  -[REMList isSharedToMe]
  -[REMList fetchRemindersWithError:]


REMListAppearanceContext : NSObject
 @property  REMList *list
 @property  REMListBadge *badge
 @property  NSString *badgeEmblem

  // instance methods
  -[REMListAppearanceContext badgeEmblem]
  -[REMListAppearanceContext showingLargeAttachments]
  -[REMListAppearanceContext setList:]
  -[REMListAppearanceContext list]
  -[REMListAppearanceContext .cxx_destruct]
  -[REMListAppearanceContext badge]
  -[REMListAppearanceContext initWithList:]


REMListSublistContext : NSObject
 @property  REMList *list

  // instance methods
  -[REMListSublistContext fetchCustomSmartListsWithError:]
  -[REMListSublistContext fetchListsWithError:]
  -[REMListSublistContext setList:]
  -[REMListSublistContext list]
  -[REMListSublistContext .cxx_destruct]
  -[REMListSublistContext initWithList:]


REMListCalDAVNotificationContext : NSObject
 @property  REMList *list
 @property  NSArray *calDAVNotifications

  // instance methods
  -[REMListCalDAVNotificationContext setList:]
  -[REMListCalDAVNotificationContext list]
  -[REMListCalDAVNotificationContext .cxx_destruct]
  -[REMListCalDAVNotificationContext calDAVNotifications]
  -[REMListCalDAVNotificationContext initWithList:]


REMListShareeContext : NSObject
 @property  REMList *list
 @property  NSArray *sharees
 @property  REMSharee *sharedOwner

  // instance methods
  -[REMListShareeContext sharedOwner]
  -[REMListShareeContext setList:]
  -[REMListShareeContext list]
  -[REMListShareeContext .cxx_destruct]
  -[REMListShareeContext sharees]
  -[REMListShareeContext shareesExcludingOwner]
  -[REMListShareeContext initWithList:]


REMSnoozeTimeUtils : NSObject
  // class methods
  +[REMSnoozeTimeUtils nextThirdsHourFromHour:]
  +[REMSnoozeTimeUtils nextThirdsHour:]


REMCRReminderIDList : NSObject <CRUndoDelegate, REMObjectIDProviding>
 @property  NSUUID *replica
 @property  CRDocument *document
 @property  REMObjectID *remObjectID
 @property  NSObject<REMCRReminderIDListDelegate> *delegate
 @property  NSMutableOrderedSet *reminderIDsProxy
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[REMCRReminderIDList newObjectID]
  +[REMCRReminderIDList cdEntityName]
  +[REMCRReminderIDList objectIDWithUUID:]
  +[REMCRReminderIDList listFromSerializedData:replica:]

  // instance methods
  -[REMCRReminderIDList document]
  -[REMCRReminderIDList remObjectID]
  -[REMCRReminderIDList setDelegate:]
  -[REMCRReminderIDList delegate]
  -[REMCRReminderIDList mergeWith:]
  -[REMCRReminderIDList .cxx_destruct]
  -[REMCRReminderIDList setDocument:]
  -[REMCRReminderIDList init]
  -[REMCRReminderIDList _orderedSet]
  -[REMCRReminderIDList replica]
  -[REMCRReminderIDList wantsUndoCommands]
  -[REMCRReminderIDList addUndoCommandsForObject:block:]
  -[REMCRReminderIDList setRemObjectID:]
  -[REMCRReminderIDList initWithDocument:objectID:]
  -[REMCRReminderIDList copyForReplica:]
  -[REMCRReminderIDList addReminder:]
  -[REMCRReminderIDList reminderIDsProxy]
  -[REMCRReminderIDList countOfReminderIDs]
  -[REMCRReminderIDList objectInReminderIDsAtIndex:]
  -[REMCRReminderIDList indexInReminderIDsOfObject:]
  -[REMCRReminderIDList insertObject:inReminderIDsAtIndex:]
  -[REMCRReminderIDList removeObjectFromReminderIDsAtIndex:]


REMCRMergeableStringDocument : NSObject <REMTTHashtagHosting, NSCopying, NSSecureCoding>
 @property  REMReplicaIDSource *replicaIDSource
 @property  TTMergeableStringVersionedDocument *document
 @property  NSString *string
 @property  NSAttributedString *attributedString
 @property  TTMergeableAttributedString *mergeableString

  // class methods
  +[REMCRMergeableStringDocument supportsSecureCoding]
  +[REMCRMergeableStringDocument documentFromSerializedData:replicaIDSource:forKey:ofObjectID:]

  // instance methods
  -[REMCRMergeableStringDocument serializedData]
  -[REMCRMergeableStringDocument document]
  -[REMCRMergeableStringDocument encodeWithCoder:]
  -[REMCRMergeableStringDocument string]
  -[REMCRMergeableStringDocument .cxx_destruct]
  -[REMCRMergeableStringDocument attributedString]
  -[REMCRMergeableStringDocument copyWithZone:]
  -[REMCRMergeableStringDocument setDocument:]
  -[REMCRMergeableStringDocument isEqual:]
  -[REMCRMergeableStringDocument initWithCoder:]
  -[REMCRMergeableStringDocument mutableDocument]
  -[REMCRMergeableStringDocument mergeableString]
  -[REMCRMergeableStringDocument initWithReplicaIDSource:document:]
  -[REMCRMergeableStringDocument initWithReplicaIDSource:serializedData:error:]
  -[REMCRMergeableStringDocument replicaIDSource]
  -[REMCRMergeableStringDocument setReplicaIDSource:]
  -[REMCRMergeableStringDocument hashtagAtIndex:effectiveRange:]
  -[REMCRMergeableStringDocument enumerateHashtagInRange:options:usingBlock:]
  -[REMCRMergeableStringDocument initWithReplicaIDSource:string:]
  -[REMCRMergeableStringDocument mergedWithDocument:error:]


REMMutableCRMergeableStringDocument : NSObject <REMTTHashtagHosting, REMReplicaIDHelperOwner>
 @property  REMReplicaIDSource *replicaIDSource
 @property  TTMergeableStringVersionedDocument *document
 @property  REMReplicaIDHelper *replicaIDHelper
 @property  <REMReplicaManagerProviding> *replicaManagerProvider
 @property  TTMergeableAttributedString *mergeableString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[REMMutableCRMergeableStringDocument document]
  -[REMMutableCRMergeableStringDocument .cxx_destruct]
  -[REMMutableCRMergeableStringDocument setReplicaManagerProvider:]
  -[REMMutableCRMergeableStringDocument setDocument:]
  -[REMMutableCRMergeableStringDocument replicaManagerProvider]
  -[REMMutableCRMergeableStringDocument immutableDocument]
  -[REMMutableCRMergeableStringDocument removeHashtagInRange:]
  -[REMMutableCRMergeableStringDocument addHashtag:range:]
  -[REMMutableCRMergeableStringDocument mergeableString]
  -[REMMutableCRMergeableStringDocument replicaIDSource]
  -[REMMutableCRMergeableStringDocument setReplicaIDSource:]
  -[REMMutableCRMergeableStringDocument replicaIDHelperDidAcquireReplicaUUID:]
  -[REMMutableCRMergeableStringDocument replicaIDHelper]
  -[REMMutableCRMergeableStringDocument setReplicaIDHelper:]
  -[REMMutableCRMergeableStringDocument hashtagAtIndex:effectiveRange:]
  -[REMMutableCRMergeableStringDocument enumerateHashtagInRange:options:usingBlock:]
  -[REMMutableCRMergeableStringDocument initWithReplicaIDSource:]
  -[REMMutableCRMergeableStringDocument initWithReplicaIDSource:immutableDocumentToEdit:]
  -[REMMutableCRMergeableStringDocument wipeAndReplaceWithString:]
  -[REMMutableCRMergeableStringDocument _test_insertString:atIndex:]


REMDispatchQueue : NSObject
  // class methods
  +[REMDispatchQueue storeQueue]


REMPaths : NSObject
  // class methods
  +[REMPaths MLModelURL]
  +[REMPaths pptSentinelURLInContainerURL:]
  +[REMPaths attributesForGroupContainerDirectory]
  +[REMPaths _shouldUseCentralizedDataPath]
  +[REMPaths mainContainerURL]
  +[REMPaths applicationDocumentsURL]
  +[REMPaths setApplicationDocumentsURL:]
  +[REMPaths containerURLForMLModel]
  +[REMPaths reminderDataURL]
  +[REMPaths mainContainerBackupURL]
  +[REMPaths temporaryMLModelURL]
  +[REMPaths URLForGroupContainerWithIdentifier:]
  +[REMPaths urlForIsolatedContainerWithIdentifier:]
  +[REMPaths locationBundleURL]


REMDisplayDateUtils : NSObject
 @property  BOOL isCacheSet
 @property  BOOL hasAlarmDateComponents
 @property  NSDateComponents *dueDateComponents
 @property  NSDateComponents *floatingDateComponents
 @property  NSDateComponents *nonFloatingDateComponents
 @property  <REMDisplayDateUtilsDelegate> *delegete

  // class methods
  +[REMDisplayDateUtils _displayDateWithDueDateComponents:alarms:hasAlarmDateComponents:floatingDateComponents:nonFloatingDateComponents:displayDateUtils:]
  +[REMDisplayDateUtils displayDateWithDueDateComponents:alarms:]

  // instance methods
  -[REMDisplayDateUtils .cxx_destruct]
  -[REMDisplayDateUtils dueDateComponents]
  -[REMDisplayDateUtils setDueDateComponents:]
  -[REMDisplayDateUtils displayDateWithDueDateComponents:alarms:]
  -[REMDisplayDateUtils updateDisplayDateWithDueDateComponents:alarm:alarmsProviding:]
  -[REMDisplayDateUtils delegete]
  -[REMDisplayDateUtils setDelegete:]
  -[REMDisplayDateUtils isCacheSet]
  -[REMDisplayDateUtils setIsCacheSet:]
  -[REMDisplayDateUtils hasAlarmDateComponents]
  -[REMDisplayDateUtils setHasAlarmDateComponents:]
  -[REMDisplayDateUtils floatingDateComponents]
  -[REMDisplayDateUtils setFloatingDateComponents:]
  -[REMDisplayDateUtils nonFloatingDateComponents]
  -[REMDisplayDateUtils setNonFloatingDateComponents:]


REMSmartListChangeItem : NSObject <REMConflictResolving, REMSaveRequestTrackedValue, REMMergeableOrderingNode, REMSupportedVersionProviding, REMSupportedVersionUpdating>
 @property  REMChangedKeysObserver *changedKeysObserver
 @property  REMObjectID *objectID
 @property  REMObjectID *parentAccountID
 @property  REMObjectID *parentListID
 @property  REMManualOrdering *manualOrdering
 @property  NSString *name
 @property  REMColor *color
 @property  NSString *badgeEmblem
 @property  NSDate *pinnedDate
 @property  NSUUID *mostRecentTargetTemplateIdentifier
 @property  NSData *filterData
 @property  BOOL showingLargeAttachments
 @property  BOOL isPersisted
 @property  REMAccountCapabilities *accountCapabilities
 @property  REMAccount *parentAccount
 @property  REMSmartListStorage *storage
 @property  BOOL isPinned
 @property  REMSaveRequest *saveRequest
 @property  NSString *smartListType
 @property  REMSmartListCustomContextChangeItem *customContext
 @property  NSString *sortingStyle
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *accountID
 @property  REMObjectID *parentOwnerID
 @property  REMObjectID *parentSubContainerID
 @property  REMObjectID *remObjectID
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMSmartListChangeItem newObjectID]
  +[REMSmartListChangeItem cdEntityName]
  +[REMSmartListChangeItem initialize]
  +[REMSmartListChangeItem objectIDWithUUID:]

  // instance methods
  -[REMSmartListChangeItem setValue:forUndefinedKey:]
  -[REMSmartListChangeItem changedKeys]
  -[REMSmartListChangeItem valueForUndefinedKey:]
  -[REMSmartListChangeItem isUnsupported]
  -[REMSmartListChangeItem isPinned]
  -[REMSmartListChangeItem storage]
  -[REMSmartListChangeItem respondsToSelector:]
  -[REMSmartListChangeItem .cxx_destruct]
  -[REMSmartListChangeItem accountCapabilities]
  -[REMSmartListChangeItem forwardingTargetForSelector:]
  -[REMSmartListChangeItem parentAccount]
  -[REMSmartListChangeItem saveRequest]
  -[REMSmartListChangeItem setIsPinned:]
  -[REMSmartListChangeItem customContext]
  -[REMSmartListChangeItem updateManualOrdering:]
  -[REMSmartListChangeItem removeFromParentAllowingUndoWithAccountChangeItem:]
  -[REMSmartListChangeItem resolutionTokenKeyForChangedKey:]
  -[REMSmartListChangeItem shallowCopyWithSaveRequest:]
  -[REMSmartListChangeItem changedKeysObserver]
  -[REMSmartListChangeItem setChangedKeysObserver:]
  -[REMSmartListChangeItem initWithSaveRequest:storage:changedKeysObserver:]
  -[REMSmartListChangeItem initWithSaveRequest:storage:observeInitialValues:]
  -[REMSmartListChangeItem isSubContainer]
  -[REMSmartListChangeItem removeFromParentWithAccountChangeItem:]
  -[REMSmartListChangeItem parentOwnerID]
  -[REMSmartListChangeItem setParentOwnerID:]
  -[REMSmartListChangeItem parentSubContainerID]
  -[REMSmartListChangeItem setParentSubContainerID:]
  -[REMSmartListChangeItem initWithCustomSmartListObjectID:insertIntoAccountChangeItem:]
  -[REMSmartListChangeItem initWithCustomSmartListObjectID:insertIntoAccountChangeItem:withParentListChangeItem:]
  -[REMSmartListChangeItem initWithCustomSmartListObjectID:insertIntoListSublistContextChangeItem:]
  -[REMSmartListChangeItem assertIsCustomSmartListWithAction:]


REMSmartListCustomContextChangeItem : NSObject
 @property  REMSmartListChangeItem *smartListChangeItem
 @property  NSString *name
 @property  REMColor *color
 @property  REMListBadge *badge

  // instance methods
  -[REMSmartListCustomContextChangeItem setBadge:]
  -[REMSmartListCustomContextChangeItem .cxx_destruct]
  -[REMSmartListCustomContextChangeItem badge]
  -[REMSmartListCustomContextChangeItem setName:]
  -[REMSmartListCustomContextChangeItem color]
  -[REMSmartListCustomContextChangeItem name]
  -[REMSmartListCustomContextChangeItem setColor:]
  -[REMSmartListCustomContextChangeItem smartListChangeItem]
  -[REMSmartListCustomContextChangeItem initWithSmartListChangeItem:]
  -[REMSmartListCustomContextChangeItem setSmartListChangeItem:]


REMAccountsDataView : NSObject
 @property  REMStore *store

  // instance methods
  -[REMAccountsDataView fetchAccountsWithObjectIDs:error:]
  -[REMAccountsDataView store]
  -[REMAccountsDataView fetchActiveCloudKitAccountObjectIDsWithFetchOption:error:]
  -[REMAccountsDataView initWithStore:]
  -[REMAccountsDataView accountsFromStorages:]
  -[REMAccountsDataView fetchAllAccountsWithError:]
  -[REMAccountsDataView .cxx_destruct]
  -[REMAccountsDataView fetchAccountWithExternalIdentifier:error:]
  -[REMAccountsDataView fetchAccountsWithExternalIdentifiers:error:]
  -[REMAccountsDataView fetchAllAccountsForDumpingWithError:]
  -[REMAccountsDataView fetchAccountWithObjectID:error:]
  -[REMAccountsDataView fetchAllAccountsForAccountManagementWithError:]
  -[REMAccountsDataView fetchPrimaryActiveCloudKitAccountREMObjectIDWithError:]
  -[REMAccountsDataView fetchPrimaryActiveCloudKitAccountWithError:]


REMAccountsDataViewInvocationREMObjectIDOnlyResult : REMStoreInvocationResult <NSSecureCoding>
 @property  NSArray *accountIDs

  // class methods
  +[REMAccountsDataViewInvocationREMObjectIDOnlyResult supportsSecureCoding]

  // instance methods
  -[REMAccountsDataViewInvocationREMObjectIDOnlyResult encodeWithCoder:]
  -[REMAccountsDataViewInvocationREMObjectIDOnlyResult initWithAccountIDs:]
  -[REMAccountsDataViewInvocationREMObjectIDOnlyResult .cxx_destruct]
  -[REMAccountsDataViewInvocationREMObjectIDOnlyResult copyWithZone:]
  -[REMAccountsDataViewInvocationREMObjectIDOnlyResult isEqual:]
  -[REMAccountsDataViewInvocationREMObjectIDOnlyResult initWithCoder:]
  -[REMAccountsDataViewInvocationREMObjectIDOnlyResult accountIDs]


REMAccountsDataViewInvocationResult : REMStoreInvocationResult <NSSecureCoding>
 @property  NSArray *accountStorages

  // class methods
  +[REMAccountsDataViewInvocationResult supportsSecureCoding]

  // instance methods
  -[REMAccountsDataViewInvocationResult accountStorages]
  -[REMAccountsDataViewInvocationResult encodeWithCoder:]
  -[REMAccountsDataViewInvocationResult .cxx_destruct]
  -[REMAccountsDataViewInvocationResult initWithStorages:]
  -[REMAccountsDataViewInvocationResult copyWithZone:]
  -[REMAccountsDataViewInvocationResult isEqual:]
  -[REMAccountsDataViewInvocationResult initWithCoder:]


REMAccountsDataViewInvocation_fetchAll : REMStoreInvocation <NSSecureCoding>
 @property  long long purpose

  // class methods
  +[REMAccountsDataViewInvocation_fetchAll supportsSecureCoding]

  // instance methods
  -[REMAccountsDataViewInvocation_fetchAll encodeWithCoder:]
  -[REMAccountsDataViewInvocation_fetchAll purpose]
  -[REMAccountsDataViewInvocation_fetchAll initWithPurpose:]
  -[REMAccountsDataViewInvocation_fetchAll copyWithZone:]
  -[REMAccountsDataViewInvocation_fetchAll isEqual:]
  -[REMAccountsDataViewInvocation_fetchAll initWithCoder:]


REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount : REMStoreInvocation <NSSecureCoding>
 @property  BOOL fetchREMObjectIDOnly

  // class methods
  +[REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount supportsSecureCoding]

  // instance methods
  -[REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount encodeWithCoder:]
  -[REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount copyWithZone:]
  -[REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount name]
  -[REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount isEqual:]
  -[REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount initWithCoder:]
  -[REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount initWithFetchREMObjectIDOnly:]
  -[REMAccountsDataViewInvocation_fetchPrimaryActiveCloudKitAccount fetchREMObjectIDOnly]


REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs : REMStoreInvocation <NSSecureCoding>
 @property  long long fetchOption

  // class methods
  +[REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs supportsSecureCoding]

  // instance methods
  -[REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs encodeWithCoder:]
  -[REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs initWithFetchOption:]
  -[REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs copyWithZone:]
  -[REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs name]
  -[REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs fetchOption]
  -[REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs isEqual:]
  -[REMAccountsDataViewInvocation_fetchActiveCloudKitAccountObjectIDs initWithCoder:]


REMAccountsDataViewInvocation_fetchByObjectID : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *objectIDs

  // class methods
  +[REMAccountsDataViewInvocation_fetchByObjectID supportsSecureCoding]

  // instance methods
  -[REMAccountsDataViewInvocation_fetchByObjectID initWithObjectIDs:]
  -[REMAccountsDataViewInvocation_fetchByObjectID encodeWithCoder:]
  -[REMAccountsDataViewInvocation_fetchByObjectID .cxx_destruct]
  -[REMAccountsDataViewInvocation_fetchByObjectID objectIDs]
  -[REMAccountsDataViewInvocation_fetchByObjectID copyWithZone:]
  -[REMAccountsDataViewInvocation_fetchByObjectID isEqual:]
  -[REMAccountsDataViewInvocation_fetchByObjectID initWithCoder:]


REMAccountsDataViewInvocation_fetchByExternalIdentifier : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *externalIdentifiers

  // class methods
  +[REMAccountsDataViewInvocation_fetchByExternalIdentifier supportsSecureCoding]

  // instance methods
  -[REMAccountsDataViewInvocation_fetchByExternalIdentifier externalIdentifiers]
  -[REMAccountsDataViewInvocation_fetchByExternalIdentifier encodeWithCoder:]
  -[REMAccountsDataViewInvocation_fetchByExternalIdentifier .cxx_destruct]
  -[REMAccountsDataViewInvocation_fetchByExternalIdentifier initWithExternalIdentifiers:]
  -[REMAccountsDataViewInvocation_fetchByExternalIdentifier copyWithZone:]
  -[REMAccountsDataViewInvocation_fetchByExternalIdentifier isEqual:]
  -[REMAccountsDataViewInvocation_fetchByExternalIdentifier initWithCoder:]


REMStoreInvocationValueStorage : NSObject <NSSecureCoding, NSCopying>
 @property  NSMutableDictionary *valueStorage

  // class methods
  +[REMStoreInvocationValueStorage supportsSecureCoding]

  // instance methods
  -[REMStoreInvocationValueStorage encodeWithCoder:]
  -[REMStoreInvocationValueStorage .cxx_destruct]
  -[REMStoreInvocationValueStorage copyWithZone:]
  -[REMStoreInvocationValueStorage isEqual:]
  -[REMStoreInvocationValueStorage init]
  -[REMStoreInvocationValueStorage initWithCoder:]
  -[REMStoreInvocationValueStorage storeProperty:forKey:]
  -[REMStoreInvocationValueStorage storedPropertyForKey:]
  -[REMStoreInvocationValueStorage valueStorage]
  -[REMStoreInvocationValueStorage setValueStorage:]


REMStoreInvocation : REMStoreInvocationValueStorage
  // instance methods
  -[REMStoreInvocation name]


REMStoreInvocationResult : REMStoreInvocationValueStorage

REMListBadge : NSObject
 @property  NSString *emblem
 @property  NSString *emoji
 @property  NSString *rawValue

  // instance methods
  -[REMListBadge .cxx_destruct]
  -[REMListBadge rawValue]
  -[REMListBadge isEqual:]
  -[REMListBadge emoji]
  -[REMListBadge setEmoji:]
  -[REMListBadge initWithEmblem:]
  -[REMListBadge initWithEmoji:]
  -[REMListBadge emblem]
  -[REMListBadge initWithRawValue:]
  -[REMListBadge _isSingleCharacterEmoji:]
  -[REMListBadge _emojiFromRawString:]
  -[REMListBadge _isJSONString:]
  -[REMListBadge setEmblem:]


REMListChangeItem : NSObject <REMConflictResolving, REMSaveRequestTrackedValue, REMMergeableOrderingNode, REMExternalSyncMetadataWritableProviding, REMSupportedVersionProviding, REMSupportedVersionUpdating>
 @property  REMChangedKeysObserver *changedKeysObserver
 @property  REMObjectID *objectID
 @property  REMObjectID *parentAccountID
 @property  REMObjectID *parentListID
 @property  REMObjectID *templateID
 @property  NSData *reminderIDsMergeableOrderingData
 @property  NSOrderedSet *reminderIDsMergeableOrdering
 @property  NSString *badgeEmblem
 @property  BOOL showingLargeAttachments
 @property  NSDate *pinnedDate
 @property  NSUUID *mostRecentTargetTemplateIdentifier
 @property  NSDictionary *reminderIDsOrderingHints
 @property  NSSet *reminderIDsToUndelete
 @property  NSSet *childListIDsToUndelete
 @property  NSSet *childSmartListIDsToUndelete
 @property  NSArray *calDAVNotifications
 @property  NSArray *sharees
 @property  REMObjectID *sharedOwnerID
 @property  BOOL isPlaceholder
 @property  BOOL remindersICSDisplayOrderChanged
 @property  REMAccount *parentAccount
 @property  REMListStorage *storage
 @property  REMAccountCapabilities *accountCapabilities
 @property  BOOL isGroup
 @property  BOOL isPinned
 @property  NSString *sharedOwnerName
 @property  NSString *sharedOwnerAddress
 @property  long long sharingStatus
 @property  BOOL isShared
 @property  BOOL isSharedToMe
 @property  BOOL isOwnedByMe
 @property  BOOL canBeIncludedInGroup
 @property  NSString *currentUserShareParticipantID
 @property  NSDate *lastUserAccessDate
 @property  NSString *daExternalIdentificationTag
 @property  NSDictionary *daBulkRequests
 @property  long long daDisplayOrder
 @property  BOOL daIsEventOnlyContainer
 @property  BOOL daIsReadOnly
 @property  BOOL daIsImmutable
 @property  BOOL daIsNotificationsCollection
 @property  NSString *displayName
 @property  REMListCalDAVNotificationContextChangeItem *calDAVNotificationContext
 @property  REMListShareeContextChangeItem *shareeContext
 @property  REMSaveRequest *saveRequest
 @property  NSString *name
 @property  REMColor *color
 @property  NSString *sortingStyle
 @property  REMListAppearanceContextChangeItem *appearanceContext
 @property  REMListSublistContextChangeItem *sublistContext
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *accountID
 @property  REMObjectID *parentOwnerID
 @property  REMObjectID *parentSubContainerID
 @property  REMObjectID *remObjectID
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMListChangeItem newObjectID]
  +[REMListChangeItem cdEntityName]
  +[REMListChangeItem initialize]
  +[REMListChangeItem objectIDWithUUID:]

  // instance methods
  -[REMListChangeItem setValue:forUndefinedKey:]
  -[REMListChangeItem changedKeys]
  -[REMListChangeItem valueForUndefinedKey:]
  -[REMListChangeItem isUnsupported]
  -[REMListChangeItem isPinned]
  -[REMListChangeItem ekColor]
  -[REMListChangeItem canBeIncludedInGroup]
  -[REMListChangeItem setDaDisplayOrder:]
  -[REMListChangeItem storage]
  -[REMListChangeItem shareeContext]
  -[REMListChangeItem setDaIsNotificationsCollection:]
  -[REMListChangeItem respondsToSelector:]
  -[REMListChangeItem .cxx_destruct]
  -[REMListChangeItem isShared]
  -[REMListChangeItem accountCapabilities]
  -[REMListChangeItem forwardingTargetForSelector:]
  -[REMListChangeItem isOwnedByMe]
  -[REMListChangeItem calDAVNotificationContext]
  -[REMListChangeItem appearanceContext]
  -[REMListChangeItem sublistContext]
  -[REMListChangeItem isSharedToMe]
  -[REMListChangeItem parentAccount]
  -[REMListChangeItem saveRequest]
  -[REMListChangeItem setIsPinned:]
  -[REMListChangeItem addReminderChangeItem:]
  -[REMListChangeItem removeFromParent]
  -[REMListChangeItem undeleteReminderWithID:usingUndo:]
  -[REMListChangeItem insertReminderChangeItem:afterReminderChangeItem:]
  -[REMListChangeItem insertReminderChangeItem:beforeReminderChangeItem:]
  -[REMListChangeItem optimisticallyInsertReminderIDToOrderingForReminderChangeItemBeingSaved:]
  -[REMListChangeItem removeFromAccountAllowingUndo]
  -[REMListChangeItem resolutionTokenKeyForChangedKey:]
  -[REMListChangeItem shallowCopyWithSaveRequest:]
  -[REMListChangeItem initWithSaveRequest:storage:accountCapabilities:changedKeysObserver:]
  -[REMListChangeItem initWithSaveRequest:storage:accountCapabilities:observeInitialValues:]
  -[REMListChangeItem changedKeysObserver]
  -[REMListChangeItem setChangedKeysObserver:]
  -[REMListChangeItem _lowLevelApplyUndoToOrdering:]
  -[REMListChangeItem isSubContainer]
  -[REMListChangeItem removeFromParentWithAccountChangeItem:]
  -[REMListChangeItem parentOwnerID]
  -[REMListChangeItem setParentOwnerID:]
  -[REMListChangeItem parentSubContainerID]
  -[REMListChangeItem setParentSubContainerID:]
  -[REMListChangeItem initWithObjectID:name:insertIntoAccountChangeItem:]
  -[REMListChangeItem initWithObjectID:name:insertIntoAccountChangeItem:isGroup:withParentList:]
  -[REMListChangeItem initWithObjectID:name:insertIntoAccountChangeItem:isGroup:]
  -[REMListChangeItem initWithObjectID:name:insertIntoListSublistContextChangeItem:]
  -[REMListChangeItem removeFromParentAllowingUndo]
  -[REMListChangeItem undeleteRemindersWithoutUndoWithIDs:isCalDAV:]
  -[REMListChangeItem insertReminderChangeItem:adjacentToReminderChangeItem:isAfter:withParentReminderChangeItem:]
  -[REMListChangeItem lowLevelAddReminderIDToOrdering:withParentReminderChangeItem:]
  -[REMListChangeItem lowLevelRemoveReminderIDFromOrdering:]
  -[REMListChangeItem _lowLevelAddReminderIDToOrdering:relativeToSiblingID:isAfter:]
  -[REMListChangeItem _reassignReminderChangeItem:withParentReminderChangeItem:]
  -[REMListChangeItem _lowLevelAddReminderChangeItemToOrdering:atIndexOfSibling:isAfter:withParent:]
  -[REMListChangeItem _editReminderIDsOrderingUsingBlock:]
  -[REMListChangeItem copyListDataFrom:]
  -[REMListChangeItem _testingOnly_setReminderIDsMergeableOrder:]
  -[REMListChangeItem _testingOnly_listShareeContextChangeItem]


REMListAppearanceContextChangeItem : NSObject
 @property  REMListChangeItem *listChangeItem
 @property  REMListBadge *badge
 @property  NSString *badgeEmblem

  // instance methods
  -[REMListAppearanceContextChangeItem badgeEmblem]
  -[REMListAppearanceContextChangeItem setShowingLargeAttachments:]
  -[REMListAppearanceContextChangeItem showingLargeAttachments]
  -[REMListAppearanceContextChangeItem setBadgeEmblem:]
  -[REMListAppearanceContextChangeItem setBadge:]
  -[REMListAppearanceContextChangeItem .cxx_destruct]
  -[REMListAppearanceContextChangeItem badge]
  -[REMListAppearanceContextChangeItem initWithListChangeItem:]
  -[REMListAppearanceContextChangeItem listChangeItem]
  -[REMListAppearanceContextChangeItem setListChangeItem:]


REMListSublistContextChangeItem : NSObject
 @property  REMListChangeItem *listChangeItem

  // instance methods
  -[REMListSublistContextChangeItem .cxx_destruct]
  -[REMListSublistContextChangeItem addListChangeItem:]
  -[REMListSublistContextChangeItem insertSmartListChangeItem:afterSmartListChangeItem:]
  -[REMListSublistContextChangeItem initWithListChangeItem:]
  -[REMListSublistContextChangeItem listChangeItem]
  -[REMListSublistContextChangeItem insertListChangeItem:afterListChangeItem:]
  -[REMListSublistContextChangeItem insertMergeableOrderingNode:afterMergeableOrderingNode:]
  -[REMListSublistContextChangeItem insertMergeableOrderingNode:beforeMergeableOrderingNode:]
  -[REMListSublistContextChangeItem addSmartListChangeItem:]
  -[REMListSublistContextChangeItem insertListChangeItem:beforeListChangeItem:]
  -[REMListSublistContextChangeItem insertSmartListChangeItem:beforeSmartListChangeItem:]
  -[REMListSublistContextChangeItem addMergeableOrderingNode:]
  -[REMListSublistContextChangeItem _accountChangeItem]
  -[REMListSublistContextChangeItem setListChangeItem:]
  -[REMListSublistContextChangeItem _insertMergeableOrderingNode:adjacentToMergeableOrderingNode:isAfter:]
  -[REMListSublistContextChangeItem undeleteChildListWithID:usingUndo:]
  -[REMListSublistContextChangeItem undeleteChildSmartListWithID:usingUndo:]


REMListCalDAVNotificationContextChangeItem : NSObject
 @property  REMListChangeItem *listChangeItem
 @property  NSArray *calDAVNotifications

  // instance methods
  -[REMListCalDAVNotificationContextChangeItem .cxx_destruct]
  -[REMListCalDAVNotificationContextChangeItem calDAVNotifications]
  -[REMListCalDAVNotificationContextChangeItem initWithListChangeItem:]
  -[REMListCalDAVNotificationContextChangeItem listChangeItem]
  -[REMListCalDAVNotificationContextChangeItem setListChangeItem:]
  -[REMListCalDAVNotificationContextChangeItem addCalDAVNotificationWithUUIDString:hostURL:externalIdentifier:externalModificationTag:]
  -[REMListCalDAVNotificationContextChangeItem _addCalDAVNotification:]
  -[REMListCalDAVNotificationContextChangeItem removeCalDAVNotication:]
  -[REMListCalDAVNotificationContextChangeItem clearCalDAVNotifications]
  -[REMListCalDAVNotificationContextChangeItem updateCalDAVNotification:withBlock:]


REMListShareeContextChangeItem : NSObject
 @property  REMListChangeItem *listChangeItem
 @property  NSArray *sharees

  // instance methods
  -[REMListShareeContextChangeItem .cxx_destruct]
  -[REMListShareeContextChangeItem sharees]
  -[REMListShareeContextChangeItem addSharee:]
  -[REMListShareeContextChangeItem removeSharee:]
  -[REMListShareeContextChangeItem initWithListChangeItem:]
  -[REMListShareeContextChangeItem addShareeWithDisplayName:firstName:lastName:address:status:accessLevel:]
  -[REMListShareeContextChangeItem listChangeItem]
  -[REMListShareeContextChangeItem setListChangeItem:]
  -[REMListShareeContextChangeItem addShareeWithDisplayName:firstName:middleName:lastName:namePrefix:nameSuffix:nickname:address:status:accessLevel:]
  -[REMListShareeContextChangeItem addShareeWithPersonNameComponents:address:status:accessLevel:]
  -[REMListShareeContextChangeItem removeAllSharees]


REMTemplatesDataView : NSObject
 @property  REMStore *store

  // instance methods
  -[REMTemplatesDataView store]
  -[REMTemplatesDataView initWithStore:]
  -[REMTemplatesDataView .cxx_destruct]
  -[REMTemplatesDataView fetchTemplateWithObjectID:error:]
  -[REMTemplatesDataView fetchTemplatesInAccount:error:]
  -[REMTemplatesDataView fetchTemplatesWithObjectIDs:error:]
  -[REMTemplatesDataView templatesFromTemplateStorages:store:]


REMTemplatesDataViewInvocation_fetchTemplatesInAccount : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *accountObjectID

  // class methods
  +[REMTemplatesDataViewInvocation_fetchTemplatesInAccount supportsSecureCoding]

  // instance methods
  -[REMTemplatesDataViewInvocation_fetchTemplatesInAccount encodeWithCoder:]
  -[REMTemplatesDataViewInvocation_fetchTemplatesInAccount .cxx_destruct]
  -[REMTemplatesDataViewInvocation_fetchTemplatesInAccount accountObjectID]
  -[REMTemplatesDataViewInvocation_fetchTemplatesInAccount copyWithZone:]
  -[REMTemplatesDataViewInvocation_fetchTemplatesInAccount initWithParentAccountObjectID:]
  -[REMTemplatesDataViewInvocation_fetchTemplatesInAccount isEqual:]
  -[REMTemplatesDataViewInvocation_fetchTemplatesInAccount initWithCoder:]


REMTemplatesDataViewInvocation_fetchByObjectIDs : REMStoreInvocation <NSSecureCoding>
 @property  NSSet *objectIDs

  // class methods
  +[REMTemplatesDataViewInvocation_fetchByObjectIDs supportsSecureCoding]

  // instance methods
  -[REMTemplatesDataViewInvocation_fetchByObjectIDs initWithObjectIDs:]
  -[REMTemplatesDataViewInvocation_fetchByObjectIDs encodeWithCoder:]
  -[REMTemplatesDataViewInvocation_fetchByObjectIDs .cxx_destruct]
  -[REMTemplatesDataViewInvocation_fetchByObjectIDs objectIDs]
  -[REMTemplatesDataViewInvocation_fetchByObjectIDs copyWithZone:]
  -[REMTemplatesDataViewInvocation_fetchByObjectIDs isEqual:]
  -[REMTemplatesDataViewInvocation_fetchByObjectIDs initWithCoder:]


REMTemplatesDataViewInvocationResult : REMStoreInvocationResult <NSSecureCoding>
 @property  NSArray *templateStorages

  // class methods
  +[REMTemplatesDataViewInvocationResult supportsSecureCoding]

  // instance methods
  -[REMTemplatesDataViewInvocationResult templateStorages]
  -[REMTemplatesDataViewInvocationResult encodeWithCoder:]
  -[REMTemplatesDataViewInvocationResult .cxx_destruct]
  -[REMTemplatesDataViewInvocationResult initWithTemplateStorages:]
  -[REMTemplatesDataViewInvocationResult copyWithZone:]
  -[REMTemplatesDataViewInvocationResult isEqual:]
  -[REMTemplatesDataViewInvocationResult initWithCoder:]


REMTemplateStorage : NSObject <NSCopying, NSSecureCoding, REMObjectIDProviding, REMObjectStorageSupportedVersionProviding>
 @property  REMAccountCapabilities *accountCapabilities
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  REMObjectID *parentAccountID
 @property  REMTemplateConfiguration *configuration
 @property  NSString *name
 @property  REMColor *color
 @property  NSString *badgeEmblem
 @property  BOOL showingLargeAttachments
 @property  NSString *sortingStyle
 @property  REMManualOrdering *unsavedManualOrdering
 @property  NSDate *mostRecentPublicLinkUpdateRequestDate
 @property  REMTemplatePublicLink *publicLink
 @property  BOOL isPersisted
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  REMObjectID *remObjectID
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMTemplateStorage supportsSecureCoding]
  +[REMTemplateStorage newObjectID]
  +[REMTemplateStorage cdEntityName]
  +[REMTemplateStorage objectIDWithUUID:]

  // instance methods
  -[REMTemplateStorage cdKeyToStorageKeyMap]
  -[REMTemplateStorage objectID]
  -[REMTemplateStorage optionalObjectID]
  -[REMTemplateStorage setParentAccountID:]
  -[REMTemplateStorage effectiveMinimumSupportedVersion]
  -[REMTemplateStorage setConfiguration:]
  -[REMTemplateStorage badgeEmblem]
  -[REMTemplateStorage remObjectID]
  -[REMTemplateStorage setResolutionTokenMapData:]
  -[REMTemplateStorage minimumSupportedVersion]
  -[REMTemplateStorage setShowingLargeAttachments:]
  -[REMTemplateStorage setStoreGenerationIfNeeded:]
  -[REMTemplateStorage isUnsupported]
  -[REMTemplateStorage accountID]
  -[REMTemplateStorage storeGeneration]
  -[REMTemplateStorage setResolutionTokenMap:]
  -[REMTemplateStorage setSortingStyle:]
  -[REMTemplateStorage showingLargeAttachments]
  -[REMTemplateStorage resolutionTokenMap]
  -[REMTemplateStorage setMinimumSupportedVersion:]
  -[REMTemplateStorage setEffectiveMinimumSupportedVersion:]
  -[REMTemplateStorage resolutionTokenMapData]
  -[REMTemplateStorage parentAccountID]
  -[REMTemplateStorage setBadgeEmblem:]
  -[REMTemplateStorage sortingStyle]
  -[REMTemplateStorage encodeWithCoder:]
  -[REMTemplateStorage initWithObjectID:accountID:name:]
  -[REMTemplateStorage configuration]
  -[REMTemplateStorage setIsPersisted:]
  -[REMTemplateStorage .cxx_destruct]
  -[REMTemplateStorage isPersisted]
  -[REMTemplateStorage accountCapabilities]
  -[REMTemplateStorage setName:]
  -[REMTemplateStorage copyWithZone:]
  -[REMTemplateStorage color]
  -[REMTemplateStorage name]
  -[REMTemplateStorage setAccountCapabilities:]
  -[REMTemplateStorage setColor:]
  -[REMTemplateStorage isEqual:]
  -[REMTemplateStorage initWithCoder:]
  -[REMTemplateStorage mostRecentPublicLinkUpdateRequestDate]
  -[REMTemplateStorage publicLink]
  -[REMTemplateStorage unsavedManualOrdering]
  -[REMTemplateStorage setUnsavedManualOrdering:]
  -[REMTemplateStorage setMostRecentPublicLinkUpdateRequestDate:]
  -[REMTemplateStorage setPublicLink:]


REMExporting : NSObject
  // class methods
  +[REMExporting exportICSCalendarFromReminders:]
  +[REMExporting exportICSCalendarFromReminders:exportingOption:]
  +[REMExporting _icsCalendarItemsFromReminders:exportingOption:]
  +[REMExporting icsTodoFromReminder:]
  +[REMExporting icsTodoFromReminder:exportingOption:]
  +[REMExporting _updateICSComponentWithReminder:icsCalendarItem:]


REMReminder : NSObject <REMDAChangeTrackableFetchableModel, REMDAChangedModelObjectResult, _REMDAChangeTrackableModel, REMObjectIDProviding, REMExternalSyncMetadataProviding, REMSupportedVersionProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  NSString *externalIdentifierForMarkedForDeletionObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  REMObjectID *listID
 @property  REMObjectID *accountID
 @property  REMObjectID *parentReminderID
 @property  REMReminder *parentReminder
 @property  REMReminderStorage *storage
 @property  NSData *titleDocumentData
 @property  REMCRMergeableStringDocument *titleDocument
 @property  NSString *titleAsString
 @property  NSData *notesDocumentData
 @property  REMCRMergeableStringDocument *notesDocument
 @property  NSString *notesAsString
 @property  NSArray *attachments
 @property  REMResolutionTokenMap *resolutionTokenMap
 @property  NSData *resolutionTokenMapData
 @property  REMContactRepresentation *contactHandles
 @property  NSSet *subtaskIDsToUndelete
 @property  NSSet *hashtagIDsToUndelete
 @property  NSString *timeZone
 @property  BOOL allDay
 @property  long long flagged
 @property  unsigned long icsDisplayOrder
 @property  NSURL *icsUrl
 @property  NSData *importedICSData
 @property  NSString *daCalendarItemUniqueIdentifier
 @property  REMUserActivity *userActivity
 @property  NSData *siriFoundInAppsData
 @property  long long siriFoundInAppsUserConfirmation
 @property  NSDate *lastBannerPresentationDate
 @property  REMDisplayDate *displayDate
 @property  BOOL isOverdue
 @property  BOOL isRecurrent
 @property  NSString *legacyNotificationIdentifier
 @property  NSString *primaryLocaleInferredFromLastUsedKeyboard
 @property  NSSet *assignments
 @property  REMReminderAssignmentContext *assignmentContext
 @property  NSSet *hashtags
 @property  REMReminderHashtagContext *hashtagContext
 @property  REMStore *store
 @property  REMObjectID *objectID
 @property  REMAccount *account
 @property  REMList *list
 @property  NSAttributedString *title
 @property  NSAttributedString *notes
 @property  BOOL completed
 @property  NSDate *completionDate
 @property  unsigned long priority
 @property  NSDateComponents *startDateComponents
 @property  NSDateComponents *dueDateComponents
 @property  NSDate *creationDate
 @property  NSDate *lastModifiedDate
 @property  NSArray *recurrenceRules
 @property  NSArray *alarms
 @property  REMReminderAttachmentContext *attachmentContext
 @property  REMReminderSubtaskContext *subtaskContext
 @property  REMReminderFlaggedContext *flaggedContext
 @property  REMObjectID *remObjectID
 @property  NSString *externalIdentifier
 @property  NSString *externalModificationTag
 @property  NSString *daSyncToken
 @property  NSString *daPushKey
 @property  long long minimumSupportedVersion
 @property  long long effectiveMinimumSupportedVersion

  // class methods
  +[REMReminder rem_DA_supportsConcealedObjects]
  +[REMReminder newObjectID]
  +[REMReminder cdEntityName]
  +[REMReminder isChangeTrackableModel]
  +[REMReminder rem_DA_deletedKeyFromConcealedModelObjectBlock]
  +[REMReminder objectIDWithUUID:]
  +[REMReminder rem_DA_fetchByObjectIDBlock]
  +[REMReminder rem_DA_supportsFetching]
  +[REMReminder rem_DA_deletedKeyFromTombstoneBlock]
  +[REMReminder rem_DA_fetchByObjectIDsBlock]
  +[REMReminder fetchRequestWithPredicateDescriptor:sortDescriptors:]
  +[REMReminder isChangeTrackableFetchableModel]
  +[REMReminder rem_DA_propertiesAffectingIsConcealed]
  +[REMReminder fetchRequestForRemindersListID:]
  +[REMReminder fetchRequestForRemindersListID:withSortDescriptors:]
  +[REMReminder fetchRequestForScheduledRemindersWithDueDateOnOrAfter:]

  // instance methods
  -[REMReminder setValue:forUndefinedKey:]
  -[REMReminder optionalObjectID]
  -[REMReminder initWithStore:storage:]
  -[REMReminder valueForUndefinedKey:]
  -[REMReminder timeZone]
  -[REMReminder account]
  -[REMReminder remObjectID]
  -[REMReminder isUnsupported]
  -[REMReminder shouldUseExternalIdentifierAsDeletionKey]
  -[REMReminder store]
  -[REMReminder externalIdentifierForMarkedForDeletionObject]
  -[REMReminder storage]
  -[REMReminder respondsToSelector:]
  -[REMReminder list]
  -[REMReminder .cxx_destruct]
  -[REMReminder notes]
  -[REMReminder allDay]
  -[REMReminder title]
  -[REMReminder initWithStore:account:storage:]
  -[REMReminder forwardingTargetForSelector:]
  -[REMReminder isEqual:]
  -[REMReminder titleAsString]
  -[REMReminder notesAsString]
  -[REMReminder initWithStore:list:storage:]
  -[REMReminder flaggedContext]
  -[REMReminder subtaskContext]
  -[REMReminder attachmentContext]
  -[REMReminder hashtagContext]
  -[REMReminder assignmentContext]
  -[REMReminder parentReminder]
  -[REMReminder setParentReminder:]
  -[REMReminder isSubtask]
  -[REMReminder datesDebugDescriptionInTimeZone:]


REMReminderSubtaskContext : NSObject
 @property  REMReminder *reminder
 @property  REMReminder *parentReminder

  // instance methods
  -[REMReminderSubtaskContext .cxx_destruct]
  -[REMReminderSubtaskContext fetchRemindersWithError:]
  -[REMReminderSubtaskContext reminder]
  -[REMReminderSubtaskContext parentReminder]
  -[REMReminderSubtaskContext fetchRemindersForMovingWithError:]
  -[REMReminderSubtaskContext hasSubtasksWithError:]
  -[REMReminderSubtaskContext initWithReminder:]
  -[REMReminderSubtaskContext fetchObjectIDsOfCompletedSubtasksWithError:]
  -[REMReminderSubtaskContext fetchObjectIDsOfUnsupportedSubtasksWithError:]
  -[REMReminderSubtaskContext setReminder:]


REMReminderAttachmentContext : NSObject
 @property  REMReminder *reminder
 @property  NSArray *attachments
 @property  NSArray *fileAttachments
 @property  NSArray *imageAttachments
 @property  NSArray *urlAttachments

  // instance methods
  -[REMReminderAttachmentContext .cxx_destruct]
  -[REMReminderAttachmentContext imageAttachments]
  -[REMReminderAttachmentContext attachments]
  -[REMReminderAttachmentContext reminder]
  -[REMReminderAttachmentContext urlAttachments]
  -[REMReminderAttachmentContext fileAttachments]
  -[REMReminderAttachmentContext attachmentsOfClass:]
  -[REMReminderAttachmentContext initWithReminder:]
  -[REMReminderAttachmentContext setReminder:]


REMReminderFlaggedContext : NSObject
 @property  REMReminder *reminder
 @property  long long flagged

  // instance methods
  -[REMReminderFlaggedContext .cxx_destruct]
  -[REMReminderFlaggedContext reminder]
  -[REMReminderFlaggedContext flagged]
  -[REMReminderFlaggedContext initWithReminder:]
  -[REMReminderFlaggedContext setReminder:]


REMReminderAssignmentContext : NSObject
 @property  REMReminder *reminder
 @property  REMAssignment *currentAssignment
 @property  NSSet *assignments

  // instance methods
  -[REMReminderAssignmentContext .cxx_destruct]
  -[REMReminderAssignmentContext assignments]
  -[REMReminderAssignmentContext reminder]
  -[REMReminderAssignmentContext currentAssignment]
  -[REMReminderAssignmentContext initWithReminder:]
  -[REMReminderAssignmentContext setReminder:]


REMReminderHashtagContext : NSObject
 @property  REMReminder *reminder
 @property  NSSet *hashtags

  // instance methods
  -[REMReminderHashtagContext .cxx_destruct]
  -[REMReminderHashtagContext hashtags]
  -[REMReminderHashtagContext reminder]
  -[REMReminderHashtagContext initWithReminder:]
  -[REMReminderHashtagContext setReminder:]


REMCRUndo : NSObject
 @property  NSArray *undoBlocks

  // instance methods
  -[REMCRUndo .cxx_destruct]
  -[REMCRUndo copyWithZone:]
  -[REMCRUndo init]
  -[REMCRUndo initWithUndoBlocks:]
  -[REMCRUndo undoBlocks]


REMMutableCRUndo : NSObject
 @property  NSMutableArray *undoBlocks

  // instance methods
  -[REMMutableCRUndo immutableCopy]
  -[REMMutableCRUndo .cxx_destruct]
  -[REMMutableCRUndo init]
  -[REMMutableCRUndo undoBlocks]
  -[REMMutableCRUndo addUndoBlock:]


REMTipKitDataView : NSObject
 @property  REMStore *store

  // instance methods
  -[REMTipKitDataView store]
  -[REMTipKitDataView initWithStore:]
  -[REMTipKitDataView .cxx_destruct]
  -[REMTipKitDataView fetchCompletedRemindersCountWithError:]
  -[REMTipKitDataView fetchCompletedRemindersCountInList:error:]
  -[REMTipKitDataView fetchUncompletedRemindersCountWithError:]
  -[REMTipKitDataView fetchListsCountWithError:]
  -[REMTipKitDataView fetchListsWithCustomBadgeCountWithError:]
  -[REMTipKitDataView fetchCustomSmartListsCountWithError:]
  -[REMTipKitDataView fetchHashtagsCountWithError:]


REMTipKitDataViewInvocation_fetchListsCount : REMStoreInvocation <NSSecureCoding>
  // class methods
  +[REMTipKitDataViewInvocation_fetchListsCount supportsSecureCoding]

  // instance methods
  -[REMTipKitDataViewInvocation_fetchListsCount encodeWithCoder:]
  -[REMTipKitDataViewInvocation_fetchListsCount copyWithZone:]
  -[REMTipKitDataViewInvocation_fetchListsCount isEqual:]
  -[REMTipKitDataViewInvocation_fetchListsCount init]
  -[REMTipKitDataViewInvocation_fetchListsCount initWithCoder:]


REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount : REMStoreInvocation <NSSecureCoding>
  // class methods
  +[REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount supportsSecureCoding]

  // instance methods
  -[REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount encodeWithCoder:]
  -[REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount copyWithZone:]
  -[REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount isEqual:]
  -[REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount init]
  -[REMTipKitDataViewInvocation_fetchListsWithCustomBadgeCount initWithCoder:]


REMTipKitDataViewInvocation_fetchUncompletedRemindersCount : REMStoreInvocation <NSSecureCoding>
  // class methods
  +[REMTipKitDataViewInvocation_fetchUncompletedRemindersCount supportsSecureCoding]

  // instance methods
  -[REMTipKitDataViewInvocation_fetchUncompletedRemindersCount encodeWithCoder:]
  -[REMTipKitDataViewInvocation_fetchUncompletedRemindersCount copyWithZone:]
  -[REMTipKitDataViewInvocation_fetchUncompletedRemindersCount isEqual:]
  -[REMTipKitDataViewInvocation_fetchUncompletedRemindersCount init]
  -[REMTipKitDataViewInvocation_fetchUncompletedRemindersCount initWithCoder:]


REMTipKitDataViewInvocation_fetchCompletedRemindersCount : REMStoreInvocation <NSSecureCoding>
  // class methods
  +[REMTipKitDataViewInvocation_fetchCompletedRemindersCount supportsSecureCoding]

  // instance methods
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCount encodeWithCoder:]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCount copyWithZone:]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCount isEqual:]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCount init]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCount initWithCoder:]


REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *listID

  // class methods
  +[REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList supportsSecureCoding]

  // instance methods
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList encodeWithCoder:]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList .cxx_destruct]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList copyWithZone:]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList isEqual:]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList initWithCoder:]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList listID]
  -[REMTipKitDataViewInvocation_fetchCompletedRemindersCountInList initWithListID:]


REMTipKitDataViewInvocation_fetchCustomSmartListsCount : REMStoreInvocation <NSSecureCoding>
  // class methods
  +[REMTipKitDataViewInvocation_fetchCustomSmartListsCount supportsSecureCoding]

  // instance methods
  -[REMTipKitDataViewInvocation_fetchCustomSmartListsCount encodeWithCoder:]
  -[REMTipKitDataViewInvocation_fetchCustomSmartListsCount copyWithZone:]
  -[REMTipKitDataViewInvocation_fetchCustomSmartListsCount isEqual:]
  -[REMTipKitDataViewInvocation_fetchCustomSmartListsCount init]
  -[REMTipKitDataViewInvocation_fetchCustomSmartListsCount initWithCoder:]


REMTipKitDataViewInvocation_fetchHashtagsCount : REMStoreInvocation <NSSecureCoding>
  // class methods
  +[REMTipKitDataViewInvocation_fetchHashtagsCount supportsSecureCoding]

  // instance methods
  -[REMTipKitDataViewInvocation_fetchHashtagsCount encodeWithCoder:]
  -[REMTipKitDataViewInvocation_fetchHashtagsCount copyWithZone:]
  -[REMTipKitDataViewInvocation_fetchHashtagsCount isEqual:]
  -[REMTipKitDataViewInvocation_fetchHashtagsCount init]
  -[REMTipKitDataViewInvocation_fetchHashtagsCount initWithCoder:]


REMUserActivity : NSObject <NSCopying, NSSecureCoding>
 @property  long long type
 @property  NSData *storage

  // class methods
  +[REMUserActivity supportsSecureCoding]
  +[REMUserActivity userActivityWithUserActivity:completion:]
  +[REMUserActivity userActivityWithDictionaryData:error:]
  +[REMUserActivity dataFromUserActivity:]
  +[REMUserActivity stringForActivityType:]

  // instance methods
  -[REMUserActivity initWithUserActivity:]
  -[REMUserActivity userActivityData]
  -[REMUserActivity userActivity]
  -[REMUserActivity storage]
  -[REMUserActivity encodeWithCoder:]
  -[REMUserActivity type]
  -[REMUserActivity .cxx_destruct]
  -[REMUserActivity copyWithZone:]
  -[REMUserActivity isEqual:]
  -[REMUserActivity initWithCoder:]
  -[REMUserActivity universalLink]
  -[REMUserActivity initWithUniversalLink:]
  -[REMUserActivity initWithUserActivityData:]
  -[REMUserActivity initWithType:storage:]
  -[REMUserActivity initWithSiriIntent:]
  -[REMUserActivity archivedDictionaryData]
  -[REMUserActivity siriIntent]
  -[REMUserActivity debugDescriptionDetails]


REMSharee : NSObject <REMDAChangeTrackableModel, _REMDAChangeTrackableModel, NSSecureCoding, NSCopying, REMObjectIDProviding>
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  NSString *externalIdentifierForMarkedForDeletionObject
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *displayName
 @property  NSString *firstName
 @property  NSString *middleName
 @property  NSString *lastName
 @property  NSString *namePrefix
 @property  NSString *nameSuffix
 @property  NSString *nickname
 @property  NSPersonNameComponents *personNameComponents
 @property  NSString *address
 @property  long long status
 @property  long long accessLevel
 @property  REMObjectID *objectID
 @property  REMObjectID *accountID
 @property  REMObjectID *listID
 @property  REMObjectID *remObjectID

  // class methods
  +[REMSharee supportsSecureCoding]
  +[REMSharee rem_DA_supportsConcealedObjects]
  +[REMSharee newObjectID]
  +[REMSharee cdEntityName]
  +[REMSharee isChangeTrackableModel]
  +[REMSharee rem_DA_deletedKeyFromConcealedModelObjectBlock]
  +[REMSharee objectIDWithUUID:]
  +[REMSharee rem_DA_fetchByObjectIDBlock]
  +[REMSharee rem_DA_supportsFetching]
  +[REMSharee rem_DA_deletedKeyFromTombstoneBlock]
  +[REMSharee rem_DA_fetchByObjectIDsBlock]
  +[REMSharee nullifiedAssignmentOriginatorID]
  +[REMSharee rem_DA_propertiesAffectingIsConcealed]

  // instance methods
  -[REMSharee middleName]
  -[REMSharee namePrefix]
  -[REMSharee nameSuffix]
  -[REMSharee objectID]
  -[REMSharee remObjectID]
  -[REMSharee accountID]
  -[REMSharee firstName]
  -[REMSharee shortName]
  -[REMSharee lastName]
  -[REMSharee encodeWithCoder:]
  -[REMSharee status]
  -[REMSharee nickname]
  -[REMSharee .cxx_destruct]
  -[REMSharee accessLevel]
  -[REMSharee address]
  -[REMSharee copyWithZone:]
  -[REMSharee displayName]
  -[REMSharee isEqual:]
  -[REMSharee initWithCoder:]
  -[REMSharee formattedName]
  -[REMSharee personNameComponents]
  -[REMSharee listID]
  -[REMSharee initShareeWithObjectID:accountID:listID:displayName:firstName:middleName:lastName:namePrefix:nameSuffix:nickname:address:status:accessLevel:]
  -[REMSharee initShareeWithObjectID:accountID:listID:displayName:firstName:lastName:address:status:accessLevel:]
  -[REMSharee initShareeWithObjectID:accountID:listID:personNameComponents:address:status:accessLevel:]
  -[REMSharee isEqualToSharee:]
  -[REMSharee formattedNameWithStyle:]


REMResolutionTokenMap : NSObject <NSSecureCoding, NSCopying>
 @property  NSMutableDictionary *map

  // class methods
  +[REMResolutionTokenMap supportsSecureCoding]
  +[REMResolutionTokenMap mapWithData:]
  +[REMResolutionTokenMap resolutionTokenMapWithJSONData:keyMap:]

  // instance methods
  -[REMResolutionTokenMap encodeWithCoder:]
  -[REMResolutionTokenMap .cxx_destruct]
  -[REMResolutionTokenMap map]
  -[REMResolutionTokenMap setMap:]
  -[REMResolutionTokenMap archivedData]
  -[REMResolutionTokenMap copyWithZone:]
  -[REMResolutionTokenMap isEqual:]
  -[REMResolutionTokenMap init]
  -[REMResolutionTokenMap initWithCoder:]
  -[REMResolutionTokenMap initWithMap:]
  -[REMResolutionTokenMap updateForKey:]
  -[REMResolutionTokenMap initTokenWithDefaultValueIfNecessaryForKey:]
  -[REMResolutionTokenMap compare:forKey:]
  -[REMResolutionTokenMap compareAndMergeWithMap:forKey:]
  -[REMResolutionTokenMap mergeWithMap:forKey:]
  -[REMResolutionTokenMap forceMergeFromMap:forKey:]
  -[REMResolutionTokenMap getTokenForKey:]
  -[REMResolutionTokenMap setToken:forKey:]
  -[REMResolutionTokenMap getTokenKeys]


REMExternalSyncMetadataUtils : NSObject
  // class methods
  +[REMExternalSyncMetadataUtils encodeExternalIdentifierForMarkedForDeletionObject:]
  +[REMExternalSyncMetadataUtils decodeExternalIdentifierForMarkedForDeletionObject:]
  +[REMExternalSyncMetadataUtils shouldUseExternalIdentifierAsDeletionKeyWithAccountType:]


REMListsDataView : NSObject
 @property  REMStore *store

  // class methods
  +[REMListsDataView listsFromAccountStorages:listStorages:store:requestedListIDs:]
  +[REMListsDataView listsFromAccountStorages:listStorages:store:requestedExternalIdentifiers:]
  +[REMListsDataView listsFromAccountStorages:listStorages:store:]

  // instance methods
  -[REMListsDataView debugFetchPhantomListsWithError:]
  -[REMListsDataView fetchAllListsWithExternalIdentifier:inAccount:error:]
  -[REMListsDataView store]
  -[REMListsDataView fetchListsIncludingSpecialContainersInAccount:error:]
  -[REMListsDataView fetchListsWithExternalIdentifiers:inAccount:error:]
  -[REMListsDataView fetchListsWithObjectIDs:error:]
  -[REMListsDataView fetchDefaultListRequiringCloudKitWithAccountID:error:]
  -[REMListsDataView fetchListsIncludingSpecialContainersWithObjectIDs:error:]
  -[REMListsDataView initWithStore:]
  -[REMListsDataView .cxx_destruct]
  -[REMListsDataView fetchListIncludingSpecialContainerWithObjectID:error:]
  -[REMListsDataView fetchListIncludingConcealedWithObjectID:includeMarkedForDeletionOnly:error:]
  -[REMListsDataView fetchListsInGroup:error:]
  -[REMListsDataView fetchListIncludingSpecialContainerWithExternalIdentifier:inAccount:error:]
  -[REMListsDataView fetchListRepresentationOfTemplateWithObjectID:error:]
  -[REMListsDataView fetchListsInAccount:error:]
  -[REMListsDataView fetchEligibleDefaultListsWithError:]
  -[REMListsDataView fetchDefaultListWithError:]
  -[REMListsDataView fetchListWithObjectID:error:]


REMListsDataViewInvocation_fetchListsInAccount : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *accountObjectID

  // class methods
  +[REMListsDataViewInvocation_fetchListsInAccount supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_fetchListsInAccount encodeWithCoder:]
  -[REMListsDataViewInvocation_fetchListsInAccount .cxx_destruct]
  -[REMListsDataViewInvocation_fetchListsInAccount accountObjectID]
  -[REMListsDataViewInvocation_fetchListsInAccount copyWithZone:]
  -[REMListsDataViewInvocation_fetchListsInAccount initWithParentAccountObjectID:]
  -[REMListsDataViewInvocation_fetchListsInAccount isEqual:]
  -[REMListsDataViewInvocation_fetchListsInAccount initWithCoder:]


REMListsDataViewInvocation_fetchListsInGroup : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *groupObjectID

  // class methods
  +[REMListsDataViewInvocation_fetchListsInGroup supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_fetchListsInGroup encodeWithCoder:]
  -[REMListsDataViewInvocation_fetchListsInGroup .cxx_destruct]
  -[REMListsDataViewInvocation_fetchListsInGroup copyWithZone:]
  -[REMListsDataViewInvocation_fetchListsInGroup isEqual:]
  -[REMListsDataViewInvocation_fetchListsInGroup initWithCoder:]
  -[REMListsDataViewInvocation_fetchListsInGroup initWithParentGroupObjectID:]
  -[REMListsDataViewInvocation_fetchListsInGroup groupObjectID]


REMListsDataViewInvocation_fetchByObjectIDs : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *objectIDs

  // class methods
  +[REMListsDataViewInvocation_fetchByObjectIDs supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_fetchByObjectIDs initWithObjectIDs:]
  -[REMListsDataViewInvocation_fetchByObjectIDs encodeWithCoder:]
  -[REMListsDataViewInvocation_fetchByObjectIDs .cxx_destruct]
  -[REMListsDataViewInvocation_fetchByObjectIDs objectIDs]
  -[REMListsDataViewInvocation_fetchByObjectIDs copyWithZone:]
  -[REMListsDataViewInvocation_fetchByObjectIDs isEqual:]
  -[REMListsDataViewInvocation_fetchByObjectIDs initWithCoder:]


REMListsDataViewInvocation_fetchDefaultList : REMStoreInvocation <NSSecureCoding>
 @property  BOOL debug_useInMemoryPreferredDefaultListStorage

  // class methods
  +[REMListsDataViewInvocation_fetchDefaultList supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_fetchDefaultList encodeWithCoder:]
  -[REMListsDataViewInvocation_fetchDefaultList setDebug_useInMemoryPreferredDefaultListStorage:]
  -[REMListsDataViewInvocation_fetchDefaultList copyWithZone:]
  -[REMListsDataViewInvocation_fetchDefaultList debug_useInMemoryPreferredDefaultListStorage]
  -[REMListsDataViewInvocation_fetchDefaultList isEqual:]
  -[REMListsDataViewInvocation_fetchDefaultList initWithCoder:]
  -[REMListsDataViewInvocation_fetchDefaultList initWithDebugUseInMemoryPreferredDefaultListStorage:]


REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *accountObjectID
 @property  BOOL debug_useInMemoryPreferredDefaultListStorage

  // class methods
  +[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit encodeWithCoder:]
  -[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit .cxx_destruct]
  -[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit accountObjectID]
  -[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit setDebug_useInMemoryPreferredDefaultListStorage:]
  -[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit copyWithZone:]
  -[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit debug_useInMemoryPreferredDefaultListStorage]
  -[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit isEqual:]
  -[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit initWithCoder:]
  -[REMListsDataViewInvocation_fetchDefaultListRequiringCloudKit initWithAccountObjectID:debugUseInMemoryPreferredDefaultListStorage:]


REMListsDataViewInvocation_fetchUserSelectableDefaultLists : REMStoreInvocation <NSSecureCoding>
 @property  BOOL debug_useInMemoryPreferredDefaultListStorage

  // class methods
  +[REMListsDataViewInvocation_fetchUserSelectableDefaultLists supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_fetchUserSelectableDefaultLists encodeWithCoder:]
  -[REMListsDataViewInvocation_fetchUserSelectableDefaultLists setDebug_useInMemoryPreferredDefaultListStorage:]
  -[REMListsDataViewInvocation_fetchUserSelectableDefaultLists copyWithZone:]
  -[REMListsDataViewInvocation_fetchUserSelectableDefaultLists debug_useInMemoryPreferredDefaultListStorage]
  -[REMListsDataViewInvocation_fetchUserSelectableDefaultLists isEqual:]
  -[REMListsDataViewInvocation_fetchUserSelectableDefaultLists initWithCoder:]
  -[REMListsDataViewInvocation_fetchUserSelectableDefaultLists initWithDebugUseInMemoryPreferredDefaultListStorage:]


REMListsDataViewInvocation_dataAccessFetchListsInAccount : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *accountObjectID

  // class methods
  +[REMListsDataViewInvocation_dataAccessFetchListsInAccount supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_dataAccessFetchListsInAccount encodeWithCoder:]
  -[REMListsDataViewInvocation_dataAccessFetchListsInAccount .cxx_destruct]
  -[REMListsDataViewInvocation_dataAccessFetchListsInAccount accountObjectID]
  -[REMListsDataViewInvocation_dataAccessFetchListsInAccount copyWithZone:]
  -[REMListsDataViewInvocation_dataAccessFetchListsInAccount initWithParentAccountObjectID:]
  -[REMListsDataViewInvocation_dataAccessFetchListsInAccount isEqual:]
  -[REMListsDataViewInvocation_dataAccessFetchListsInAccount initWithCoder:]


REMListsDataViewInvocation_dataAccessFetchByObjectID : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *objectIDs

  // class methods
  +[REMListsDataViewInvocation_dataAccessFetchByObjectID supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_dataAccessFetchByObjectID initWithObjectIDs:]
  -[REMListsDataViewInvocation_dataAccessFetchByObjectID encodeWithCoder:]
  -[REMListsDataViewInvocation_dataAccessFetchByObjectID .cxx_destruct]
  -[REMListsDataViewInvocation_dataAccessFetchByObjectID objectIDs]
  -[REMListsDataViewInvocation_dataAccessFetchByObjectID copyWithZone:]
  -[REMListsDataViewInvocation_dataAccessFetchByObjectID isEqual:]
  -[REMListsDataViewInvocation_dataAccessFetchByObjectID initWithCoder:]


REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *objectIDs
 @property  BOOL includeMarkedForDeletionOnly

  // class methods
  +[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed initWithObjectIDs:]
  -[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed encodeWithCoder:]
  -[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed .cxx_destruct]
  -[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed objectIDs]
  -[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed copyWithZone:]
  -[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed isEqual:]
  -[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed initWithCoder:]
  -[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed includeMarkedForDeletionOnly]
  -[REMListsDataViewInvocation_changeTrackingFetchByObjectIDIncludingConcealed setIncludeMarkedForDeletionOnly:]


REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier : REMStoreInvocation <NSSecureCoding>
 @property  NSArray *externalIdentifiers
 @property  REMObjectID *accountObjectID

  // class methods
  +[REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier externalIdentifiers]
  -[REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier encodeWithCoder:]
  -[REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier .cxx_destruct]
  -[REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier accountObjectID]
  -[REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier copyWithZone:]
  -[REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier isEqual:]
  -[REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier initWithCoder:]
  -[REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier initWithExternalIdentifiers:accountObjectID:]


REMListsDataViewInvocation_userActivityFetchByExternalIdentifier : REMStoreInvocation <NSSecureCoding>
 @property  NSString *externalIdentifier
 @property  REMObjectID *accountObjectID

  // class methods
  +[REMListsDataViewInvocation_userActivityFetchByExternalIdentifier supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_userActivityFetchByExternalIdentifier encodeWithCoder:]
  -[REMListsDataViewInvocation_userActivityFetchByExternalIdentifier externalIdentifier]
  -[REMListsDataViewInvocation_userActivityFetchByExternalIdentifier .cxx_destruct]
  -[REMListsDataViewInvocation_userActivityFetchByExternalIdentifier accountObjectID]
  -[REMListsDataViewInvocation_userActivityFetchByExternalIdentifier copyWithZone:]
  -[REMListsDataViewInvocation_userActivityFetchByExternalIdentifier isEqual:]
  -[REMListsDataViewInvocation_userActivityFetchByExternalIdentifier initWithCoder:]
  -[REMListsDataViewInvocation_userActivityFetchByExternalIdentifier initWithExternalIdentifier:accountObjectID:]


REMListsDataViewInvocation_debugFetchPhantomLists : REMStoreInvocation <NSSecureCoding>
  // class methods
  +[REMListsDataViewInvocation_debugFetchPhantomLists supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_debugFetchPhantomLists encodeWithCoder:]
  -[REMListsDataViewInvocation_debugFetchPhantomLists copyWithZone:]
  -[REMListsDataViewInvocation_debugFetchPhantomLists isEqual:]
  -[REMListsDataViewInvocation_debugFetchPhantomLists initWithCoder:]


REMListsDataViewInvocationResult : REMStoreInvocationResult <NSSecureCoding>
 @property  NSArray *accountStorages
 @property  NSArray *listStorages
 @property  NSArray *objectIDs

  // class methods
  +[REMListsDataViewInvocationResult supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocationResult accountStorages]
  -[REMListsDataViewInvocationResult encodeWithCoder:]
  -[REMListsDataViewInvocationResult initWithAccountStorages:listStorages:objectIDs:]
  -[REMListsDataViewInvocationResult .cxx_destruct]
  -[REMListsDataViewInvocationResult listStorages]
  -[REMListsDataViewInvocationResult objectIDs]
  -[REMListsDataViewInvocationResult copyWithZone:]
  -[REMListsDataViewInvocationResult isEqual:]
  -[REMListsDataViewInvocationResult initWithCoder:]


REMListsDataViewInvocation_fetchByTemplateObjectID : REMStoreInvocation <NSSecureCoding>
 @property  REMObjectID *templateObjectID

  // class methods
  +[REMListsDataViewInvocation_fetchByTemplateObjectID supportsSecureCoding]

  // instance methods
  -[REMListsDataViewInvocation_fetchByTemplateObjectID encodeWithCoder:]
  -[REMListsDataViewInvocation_fetchByTemplateObjectID .cxx_destruct]
  -[REMListsDataViewInvocation_fetchByTemplateObjectID copyWithZone:]
  -[REMListsDataViewInvocation_fetchByTemplateObjectID isEqual:]
  -[REMListsDataViewInvocation_fetchByTemplateObjectID initWithCoder:]
  -[REMListsDataViewInvocation_fetchByTemplateObjectID initWithTemplateObjectID:]
  -[REMListsDataViewInvocation_fetchByTemplateObjectID templateObjectID]


TTREMHashtag : NSObject <TTModelAttributeComparable>
 @property  NSString *objectIdentifier
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TTREMHashtag isHashtag:equalToModelComparable:]

  // instance methods
  -[TTREMHashtag objectIdentifier]
  -[TTREMHashtag .cxx_destruct]
  -[TTREMHashtag isEqual:]
  -[TTREMHashtag setObjectIdentifier:]
  -[TTREMHashtag isEqualToModelComparable:]


CRCoderArchiver : CRCoder
 @property  NSMutableOrderedSet *uuidSet
 @property  NSMutableOrderedSet *keySet
 @property  NSMutableOrderedSet *encodedObjects
 @property  ^v currentDocument

  // class methods
  +[CRCoderArchiver initialize]
  +[CRCoderArchiver encodedDataWithDocument:]

  // instance methods
  -[CRCoderArchiver indexForKey:]
  -[CRCoderArchiver encodeInt64:forKey:]
  -[CRCoderArchiver encodeDouble:forKey:]
  -[CRCoderArchiver encodeObject:forKey:]
  -[CRCoderArchiver encodeUInt64:forKey:]
  -[CRCoderArchiver .cxx_construct]
  -[CRCoderArchiver encodeInt32:forKey:]
  -[CRCoderArchiver .cxx_destruct]
  -[CRCoderArchiver keySet]
  -[CRCoderArchiver encodedObjects]
  -[CRCoderArchiver setKeySet:]
  -[CRCoderArchiver encodeDocument:]
  -[CRCoderArchiver setTypeIndexForCurrentCustomObjectIfNecessary:]
  -[CRCoderArchiver encodeObject:forObjectID:]
  -[CRCoderArchiver encodeString:forKey:]
  -[CRCoderArchiver encodeUUID:forKey:]
  -[CRCoderArchiver encodeUInt32:forKey:]
  -[CRCoderArchiver encodeUUIDIndexFromUUID:]
  -[CRCoderArchiver mutableObjectIDForKey:]
  -[CRCoderArchiver currentCustomObjectForEncoding]
  -[CRCoderArchiver currentDocumentObjectForEncoding]
  -[CRCoderArchiver uuidSet]
  -[CRCoderArchiver setUuidSet:]
  -[CRCoderArchiver setEncodedObjects:]
  -[CRCoderArchiver currentDocument]
  -[CRCoderArchiver setCurrentDocument:]


CRDictionaryElement : NSObject
 @property  <CRDataType> *value
 @property  CRVectorTimestamp *timestamp

  // class methods
  +[CRDictionaryElement temporaryElementWithValue:]

  // instance methods
  -[CRDictionaryElement initWithValue:]
  -[CRDictionaryElement setTimestamp:]
  -[CRDictionaryElement mergeWith:]
  -[CRDictionaryElement initWithValue:timestamp:]
  -[CRDictionaryElement .cxx_destruct]
  -[CRDictionaryElement setValue:]
  -[CRDictionaryElement value]
  -[CRDictionaryElement timestamp]
  -[CRDictionaryElement isEqual:]


CRDictionary : NSObject <CRDataType, NSFastEnumeration, CRCoding>
 @property  NSMapTable *contents
 @property  long long removeClock
 @property  CRDocument *document
 @property  unsigned long count
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRDictionary tombstone]
  -[CRDictionary document]
  -[CRDictionary countByEnumeratingWithState:objects:count:]
  -[CRDictionary removeAllObjects]
  -[CRDictionary deltaSince:in:]
  -[CRDictionary setObject:forKeyedSubscript:]
  -[CRDictionary encodeWithCRCoder:]
  -[CRDictionary mergeWith:]
  -[CRDictionary setObject:forKey:]
  -[CRDictionary contents]
  -[CRDictionary keyEnumerator]
  -[CRDictionary .cxx_destruct]
  -[CRDictionary setContents:]
  -[CRDictionary walkGraph:]
  -[CRDictionary count]
  -[CRDictionary initWithDocument:]
  -[CRDictionary objectForKeyedSubscript:]
  -[CRDictionary realizeLocalChangesIn:]
  -[CRDictionary removeObjectForKey:]
  -[CRDictionary initWithCRCoder:]
  -[CRDictionary objectForKey:]
  -[CRDictionary setDocument:]
  -[CRDictionary isEqual:]
  -[CRDictionary init]
  -[CRDictionary mergeWithDictionary:]
  -[CRDictionary encodeWithCRCoder:dictionary:]
  -[CRDictionary encodeWithCRCoder:dictionary:elementValueCoder:]
  -[CRDictionary initWithCRCoder:dictionary:]
  -[CRDictionary initWithCRCoder:dictionary:elementValueDecoder:]
  -[CRDictionary enumerateKeysObjectsAndTimestampsUsingBlock:]
  -[CRDictionary removeClock]
  -[CRDictionary setRemoveClock:]


TTVectorTimestampElement : NSObject
 @property  unsigned long clock
 @property  unsigned long subclock

  // instance methods
  -[TTVectorTimestampElement setClock:]
  -[TTVectorTimestampElement clock]
  -[TTVectorTimestampElement subclock]
  -[TTVectorTimestampElement setSubclock:]


TTVectorTimestamp : NSObject <NSCopying>
  // instance methods
  -[TTVectorTimestamp compareTo:]
  -[TTVectorTimestamp .cxx_destruct]
  -[TTVectorTimestamp initWithArchive:]
  -[TTVectorTimestamp copyWithZone:]
  -[TTVectorTimestamp serialize]
  -[TTVectorTimestamp initWithData:]
  -[TTVectorTimestamp isEqual:]
  -[TTVectorTimestamp init]
  -[TTVectorTimestamp clockElementForUUID:]
  -[TTVectorTimestamp clockForUUID:]
  -[TTVectorTimestamp subclockForUUID:]
  -[TTVectorTimestamp setClock:forUUID:]
  -[TTVectorTimestamp setClock:subclock:forUUID:]
  -[TTVectorTimestamp incrementClockForUUID:]
  -[TTVectorTimestamp allUUIDs]
  -[TTVectorTimestamp sortedUUIDs]
  -[TTVectorTimestamp mergeWithTimestamp:]
  -[TTVectorTimestamp saveToArchive:]


TTVectorMultiTimestamp : NSObject <NSCopying>
 @property  NSArray *timestamps
 @property  BOOL isDocumentShared

  // instance methods
  -[TTVectorMultiTimestamp initWithCapacity:]
  -[TTVectorMultiTimestamp compareTo:]
  -[TTVectorMultiTimestamp .cxx_destruct]
  -[TTVectorMultiTimestamp copyWithZone:]
  -[TTVectorMultiTimestamp serialize]
  -[TTVectorMultiTimestamp isEqual:]
  -[TTVectorMultiTimestamp initWithTimestamps:]
  -[TTVectorMultiTimestamp timestamps]
  -[TTVectorMultiTimestamp setTimestamps:]
  -[TTVectorMultiTimestamp sortedUUIDs]
  -[TTVectorMultiTimestamp mergeWithTimestamp:]
  -[TTVectorMultiTimestamp isDocumentShared]
  -[TTVectorMultiTimestamp clockElementForUUID:atIndex:]
  -[TTVectorMultiTimestamp clockForUUID:atIndex:]
  -[TTVectorMultiTimestamp setClock:forUUID:atIndex:]
  -[TTVectorMultiTimestamp setClock:subclock:forUUID:atIndex:]
  -[TTVectorMultiTimestamp saveToArchive:]
  -[TTVectorMultiTimestamp initWithData:andCapacity:]
  -[TTVectorMultiTimestamp initWithArchive:andCapacity:]


TTMergeableString : NSObject <CRDataType>
 @property  CRTTCompatibleDocument *document
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  TTVectorMultiTimestamp *timestamp
 @property  BOOL hasLocalChanges
 @property  NSUUID *replicaUUID
 @property  NSMutableAttributedString *attributedString
 @property  unsigned long replicaTextClock
 @property  unsigned long replicaStyleClock
 @property  NSObject<TTMergeableStringDelegate> *delegate
 @property  NSHashTable *objectsNeedingUpdatedRanges

  // class methods
  +[TTMergeableString unserialisedReplicaID]

  // instance methods
  -[TTMergeableString tombstone]
  -[TTMergeableString document]
  -[TTMergeableString replaceCharactersInRange:withAttributedString:]
  -[TTMergeableString setTimestamp:]
  -[TTMergeableString deltaSince:in:]
  -[TTMergeableString setAttributedString:]
  -[TTMergeableString replaceCharactersInRange:withString:]
  -[TTMergeableString setDelegate:]
  -[TTMergeableString string]
  -[TTMergeableString deleteCharactersInRange:]
  -[TTMergeableString delegate]
  -[TTMergeableString mergeWith:]
  -[TTMergeableString .cxx_construct]
  -[TTMergeableString invalidateCache]
  -[TTMergeableString dealloc]
  -[TTMergeableString beginEditing]
  -[TTMergeableString length]
  -[TTMergeableString hasLocalChanges]
  -[TTMergeableString .cxx_destruct]
  -[TTMergeableString walkGraph:]
  -[TTMergeableString attributedString]
  -[TTMergeableString updateCache]
  -[TTMergeableString endEditing]
  -[TTMergeableString copyWithZone:]
  -[TTMergeableString realizeLocalChangesIn:]
  -[TTMergeableString insertString:atIndex:]
  -[TTMergeableString timestamp]
  -[TTMergeableString serialize]
  -[TTMergeableString setDocument:]
  -[TTMergeableString isEqual:]
  -[TTMergeableString init]
  -[TTMergeableString insertAttributedString:atIndex:]
  -[TTMergeableString objectsNeedingUpdatedRanges]
  -[TTMergeableString characterRangesForSelection:]
  -[TTMergeableString selection:wasModifiedAfter:]
  -[TTMergeableString check:]
  -[TTMergeableString selectionForCharacterRanges:selectionAffinity:]
  -[TTMergeableString mergeWithString:]
  -[TTMergeableString replicaUUID]
  -[TTMergeableString initWithReplicaID:]
  -[TTMergeableString initWithReplicaID:asFragment:]
  -[TTMergeableString replicaUUIDForCharacterAtIndex:]
  -[TTMergeableString selectionForCharacterRanges:]
  -[TTMergeableString characterRangesForSelection:selectedSubstringsBlock:]
  -[TTMergeableString shouldInvalidateCachedSubstringsWithTimestamp:]
  -[TTMergeableString resetLocalReplicaClocksToTimestampValues]
  -[TTMergeableString _testSetTextTimestamp:]
  -[TTMergeableString isFragment]
  -[TTMergeableString startNodes]
  -[TTMergeableString endNodes]
  -[TTMergeableString updateTimestampsInRange:]
  -[TTMergeableString deleteSubstrings:withCharacterRanges:]
  -[TTMergeableString insertAttributedString:after:before:]
  -[TTMergeableString moveRange:toIndex:]
  -[TTMergeableString getSubstrings:forCharacterRange:]
  -[TTMergeableString getSubstrings:inOrderedSubstrings:forCharacterRange:]
  -[TTMergeableString getSubstringBeforeTopoID:]
  -[TTMergeableString getSubstrings:forTopoIDRange:]
  -[TTMergeableString getCharacterRanges:forSubstrings:]
  -[TTMergeableString getCharacterIndexForCharID:]
  -[TTMergeableString enumerateSubstrings:]
  -[TTMergeableString substring:modifiedAfter:]
  -[TTMergeableString enumerateRangesModifiedAfter:usingBlock:]
  -[TTMergeableString textEitherSideOfSelectionAnchor:wasModifiedAfter:]
  -[TTMergeableString splitTopoSubstring:atIndex:]
  -[TTMergeableString orderedSubstrings]
  -[TTMergeableString updateAttributedStringAfterMerge]
  -[TTMergeableString updateSubstringIndexes]
  -[TTMergeableString coalesce]
  -[TTMergeableString updateTopoIDRange:toNewRangeID:]
  -[TTMergeableString cleanupObjectsNeedingUpdatedRanges]
  -[TTMergeableString generateIdsForLocalChanges]
  -[TTMergeableString generateIdsForLocalChangesSafeForSharedTimestamp:]
  -[TTMergeableString canMergeString:]
  -[TTMergeableString updateClock]
  -[TTMergeableString checkTimestampLogStyleErrors:]
  -[TTMergeableString dumpMergeData:]
  -[TTMergeableString mergeWithString:mergeTimestamps:]
  -[TTMergeableString sortSplitNodes]
  -[TTMergeableString traverseUnordered:]
  -[TTMergeableString graphIsEqual:]
  -[TTMergeableString dotDescription:]
  -[TTMergeableString setReplicaUUID:]
  -[TTMergeableString setHasLocalChanges:]
  -[TTMergeableString replicaTextClock]
  -[TTMergeableString replicaStyleClock]
  -[TTMergeableString saveToArchive:]
  -[TTMergeableString initWithArchive:andReplicaID:withOrderedSubstrings:timestamp:]
  -[TTMergeableString i_saveDeltasSinceTimestamp:toArchive:]
  -[TTMergeableString saveDeltaSinceTimestamp:toArchive:]
  -[TTMergeableString initWithArchive:andReplicaID:]
  -[TTMergeableString initWithData:andReplicaID:]
  -[TTMergeableString initWithArchive:andReplicaID:andSharedTimestamp:]
  -[TTMergeableString initWithArchive:andReplicaID:withOrderedSubstrings:]
  -[TTMergeableString saveSubstrings:archiveSet:linkSet:archivedString:toArchive:]
  -[TTMergeableString serializeDeltaSinceTimestamp:]


TTArray : NSObject <CRCoding, TTMergeableStringDelegate, CRDataType>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  TTMergeableAttributedString *contents
 @property  NSArray *nsArray
 @property  unsigned long count
 @property  NSUUID *replicaUUID
 @property  CRDocument *document
 @property  NSObject<CRUndoDelegate> *delegate
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TTArray tombstone]
  -[TTArray document]
  -[TTArray indexOfObject:]
  -[TTArray edited:range:changeInLength:]
  -[TTArray deltaSince:in:]
  -[TTArray setDelegate:]
  -[TTArray delegate]
  -[TTArray encodeWithCRCoder:]
  -[TTArray mergeWith:]
  -[TTArray contents]
  -[TTArray beginEditing]
  -[TTArray replaceObjectAtIndex:withObject:]
  -[TTArray .cxx_destruct]
  -[TTArray addObject:]
  -[TTArray walkGraph:]
  -[TTArray count]
  -[TTArray initWithDocument:]
  -[TTArray removeObjectAtIndex:]
  -[TTArray endEditing]
  -[TTArray realizeLocalChangesIn:]
  -[TTArray insertObject:atIndex:]
  -[TTArray initWithCRCoder:]
  -[TTArray initWithContents:]
  -[TTArray objectAtIndex:]
  -[TTArray setDocument:]
  -[TTArray isEqual:]
  -[TTArray removeLastObject]
  -[TTArray init]
  -[TTArray objectAtIndexedSubscript:]
  -[TTArray enumerateObjectsUsingBlock:]
  -[TTArray wantsUndoCommands]
  -[TTArray addUndoCommand:]
  -[TTArray replicaUUID]
  -[TTArray textAttachmentAtIndex:]
  -[TTArray nsArray]
  -[TTArray saveToArchive:]
  -[TTArray serializeDataFromArchive:]
  -[TTArray initWithArchive:andReplicaID:]
  -[TTArray initWithCRCoder:stringArray:]


TTMergeableStringSelection : NSObject <TTMergeableStringIDTracker>
 @property  unsigned long selectionAffinity
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TTMergeableStringSelection selectionAffinity]
  -[TTMergeableStringSelection .cxx_construct]
  -[TTMergeableStringSelection .cxx_destruct]
  -[TTMergeableStringSelection initWithArchive:]
  -[TTMergeableStringSelection setSelectionAffinity:]
  -[TTMergeableStringSelection serialize]
  -[TTMergeableStringSelection initWithData:]
  -[TTMergeableStringSelection isEqual:]
  -[TTMergeableStringSelection updateTopoIDRange:toNewRangeID:]
  -[TTMergeableStringSelection hasTopoIDsThatCanChange]
  -[TTMergeableStringSelection selectionRanges]
  -[TTMergeableStringSelection saveToArchive:]


TTVersionedDocument : NSObject
 @property  ^v documentArchive
 @property  unsigned long futureVersionCount

  // class methods
  +[TTVersionedDocument minimumSupportedVersion]
  +[TTVersionedDocument serializationVersion]
  +[TTVersionedDocument versionedDocumentSerializationVersion]

  // instance methods
  -[TTVersionedDocument dealloc]
  -[TTVersionedDocument initWithArchive:]
  -[TTVersionedDocument serialize]
  -[TTVersionedDocument initWithData:]
  -[TTVersionedDocument loadArchive:]
  -[TTVersionedDocument maxDocumentVersion]
  -[TTVersionedDocument saveToArchive:]
  -[TTVersionedDocument loadData:]
  -[TTVersionedDocument loadDocumentArchive:]
  -[TTVersionedDocument futureVersionCount]
  -[TTVersionedDocument mergeVersion:fromData:]
  -[TTVersionedDocument serializeCurrentVersion:]
  -[TTVersionedDocument saveCurrentVersion:]
  -[TTVersionedDocument mergeWithVersionedDocument:]
  -[TTVersionedDocument documentArchive]
  -[TTVersionedDocument setDocumentArchive:]


TTMergeableStringUndoGroup : NSObject <TTMergeableStringUndoCommand>
 @property  NSMutableDictionary *seen
 @property  NSMutableArray *commands
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TTMergeableStringUndoGroup .cxx_destruct]
  -[TTMergeableStringUndoGroup setCommands:]
  -[TTMergeableStringUndoGroup addCommand:]
  -[TTMergeableStringUndoGroup commands]
  -[TTMergeableStringUndoGroup init]
  -[TTMergeableStringUndoGroup applyToString:]
  -[TTMergeableStringUndoGroup setSeen:]
  -[TTMergeableStringUndoGroup seen]
  -[TTMergeableStringUndoGroup closeGroup]
  -[TTMergeableStringUndoGroup updateTopoIDRange:toNewRangeID:]
  -[TTMergeableStringUndoGroup hasTopoIDsThatCanChange]
  -[TTMergeableStringUndoGroup addToGroup:]
  -[TTMergeableStringUndoGroup addSeenRange:]


CRTTCompatibleDocument : CRDocument
 @property  TTCRVectorMultiTimestamp *sharedTopotextTimestamp
 @property  NSMutableArray *stringsWithClocksNeedingUpdating
 @property  NSMutableArray *stringsWithClocksToResetAfterRealizingLocalChanges

  // instance methods
  -[CRTTCompatibleDocument .cxx_destruct]
  -[CRTTCompatibleDocument sharedTopotextTimestamp]
  -[CRTTCompatibleDocument initWithVersion:startVersion:rootObject:replica:]
  -[CRTTCompatibleDocument mergeResultForMergingWithDocument:]
  -[CRTTCompatibleDocument mergeTimestampWithDocument:]
  -[CRTTCompatibleDocument realizeLocalChanges]
  -[CRTTCompatibleDocument initWithVersion:startVersion:rootObject:replica:topoTimestamp:]
  -[CRTTCompatibleDocument setSharedTopotextTimestamp:]
  -[CRTTCompatibleDocument stringsWithClocksNeedingUpdating]
  -[CRTTCompatibleDocument setStringsWithClocksNeedingUpdating:]
  -[CRTTCompatibleDocument stringsWithClocksToResetAfterRealizingLocalChanges]
  -[CRTTCompatibleDocument setStringsWithClocksToResetAfterRealizingLocalChanges:]


CRArray : NSObject <CRCoding, CRUndoDelegate, CRDataType>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  TTArray *array
 @property  CRDictionary *contents
 @property  BOOL moveClock
 @property  CRDocument *document
 @property  NSObject<CRUndoDelegate> *delegate
 @property  unsigned long count
 @property  NSUUID *replicaUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRArray tombstone]
  -[CRArray array]
  -[CRArray document]
  -[CRArray deltaSince:in:]
  -[CRArray setDelegate:]
  -[CRArray delegate]
  -[CRArray encodeWithCRCoder:]
  -[CRArray mergeWith:]
  -[CRArray contents]
  -[CRArray replaceObjectAtIndex:withObject:]
  -[CRArray .cxx_destruct]
  -[CRArray addObject:]
  -[CRArray setContents:]
  -[CRArray walkGraph:]
  -[CRArray count]
  -[CRArray initWithDocument:]
  -[CRArray _addObject:]
  -[CRArray removeObjectAtIndex:]
  -[CRArray realizeLocalChangesIn:]
  -[CRArray insertObject:atIndex:]
  -[CRArray initWithCRCoder:]
  -[CRArray objectAtIndex:]
  -[CRArray setDocument:]
  -[CRArray isEqual:]
  -[CRArray removeLastObject]
  -[CRArray init]
  -[CRArray objectAtIndexedSubscript:]
  -[CRArray setArray:]
  -[CRArray enumerateObjectsUsingBlock:]
  -[CRArray wantsUndoCommands]
  -[CRArray addUndoCommandsForObject:block:]
  -[CRArray moveObjectFromIndex:toIndex:]
  -[CRArray replicaUUID]
  -[CRArray initWithTTArray:contents:document:]
  -[CRArray _insertObject:atIndex:]
  -[CRArray _insertObject:withIdentifier:atIndex:forUndo:]
  -[CRArray removeObjectAtIndex:forUndo:]
  -[CRArray firstIndexOf:fromIndex:]
  -[CRArray moveClock]
  -[CRArray setMoveClock:]
  -[CRArray encodeWithCRCoder:array:]
  -[CRArray initWithCRCoder:array:]


CRCoderUnarchiverCompletionHandler : NSObject
 @property  @? block
 @property  id dependency
 @property  id value

  // instance methods
  -[CRCoderUnarchiverCompletionHandler .cxx_destruct]
  -[CRCoderUnarchiverCompletionHandler setBlock:]
  -[CRCoderUnarchiverCompletionHandler setValue:]
  -[CRCoderUnarchiverCompletionHandler block]
  -[CRCoderUnarchiverCompletionHandler value]
  -[CRCoderUnarchiverCompletionHandler dependency]
  -[CRCoderUnarchiverCompletionHandler setDependency:]


CRCoderUnarchiver : CRCoder
 @property  NSUUID *replica
 @property  CRDocument *document
 @property  ^v currentDocument
 @property  NSMutableArray *allocedDocObjects
 @property  r^v currentDocObjectForDecodingPtr
 @property  NSMutableOrderedSet *typeSetForDecoding
 @property  NSMutableOrderedSet *keySet
 @property  NSMutableArray *uuidArray
 @property  NSMutableArray *completionHandlers

  // class methods
  +[CRCoderUnarchiver initialize]
  +[CRCoderUnarchiver decodedDocumentFromData:replica:]

  // instance methods
  -[CRCoderUnarchiver decodeInt64ForKey:]
  -[CRCoderUnarchiver completionHandlers]
  -[CRCoderUnarchiver document]
  -[CRCoderUnarchiver indexForKey:]
  -[CRCoderUnarchiver setCompletionHandlers:]
  -[CRCoderUnarchiver decodeDoubleForKey:]
  -[CRCoderUnarchiver decodeObjectForKey:]
  -[CRCoderUnarchiver decodeInt32ForKey:]
  -[CRCoderUnarchiver decodeStringForKey:]
  -[CRCoderUnarchiver .cxx_destruct]
  -[CRCoderUnarchiver keySet]
  -[CRCoderUnarchiver decodeUInt64ForKey:]
  -[CRCoderUnarchiver setDocument:]
  -[CRCoderUnarchiver setKeySet:]
  -[CRCoderUnarchiver replica]
  -[CRCoderUnarchiver currentDocument]
  -[CRCoderUnarchiver setCurrentDocument:]
  -[CRCoderUnarchiver willModifySelfInInitForClass:]
  -[CRCoderUnarchiver allocedObjectAtIndex:outNeedsInit:]
  -[CRCoderUnarchiver decodeDocumentFromData:replica:]
  -[CRCoderUnarchiver currentObjectIDForKey:]
  -[CRCoderUnarchiver decodeObjectForProtobufObjectID:]
  -[CRCoderUnarchiver decodeUUIDForKey:]
  -[CRCoderUnarchiver decodeUInt32ForKey:]
  -[CRCoderUnarchiver decodeUUIDFromUUIDIndex:]
  -[CRCoderUnarchiver hasDecodableValueForKey:]
  -[CRCoderUnarchiver addDecoderCompletionHandler:dependency:for:]
  -[CRCoderUnarchiver sortCompletionHandlers]
  -[CRCoderUnarchiver currentDocumentObjectForDecoding]
  -[CRCoderUnarchiver setReplica:]
  -[CRCoderUnarchiver allocedDocObjects]
  -[CRCoderUnarchiver setAllocedDocObjects:]
  -[CRCoderUnarchiver currentDocObjectForDecodingPtr]
  -[CRCoderUnarchiver setCurrentDocObjectForDecodingPtr:]
  -[CRCoderUnarchiver typeSetForDecoding]
  -[CRCoderUnarchiver setTypeSetForDecoding:]
  -[CRCoderUnarchiver uuidArray]
  -[CRCoderUnarchiver setUuidArray:]


CRSet : NSObject <CRDataType, NSFastEnumeration, CRCoding>
 @property  CRDictionary *dictionary
 @property  NSHashTable *observers
 @property  CRDocument *document
 @property  unsigned long count
 @property  NSArray *allObjects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRSet tombstone]
  -[CRSet document]
  -[CRSet countByEnumeratingWithState:objects:count:]
  -[CRSet removeAllObjects]
  -[CRSet setUpdated:]
  -[CRSet deltaSince:in:]
  -[CRSet containsObject:]
  -[CRSet addObserver:]
  -[CRSet encodeWithCRCoder:]
  -[CRSet mergeWith:]
  -[CRSet .cxx_destruct]
  -[CRSet addObject:]
  -[CRSet walkGraph:]
  -[CRSet count]
  -[CRSet initWithDocument:]
  -[CRSet setDictionary:]
  -[CRSet member:]
  -[CRSet setObservers:]
  -[CRSet realizeLocalChangesIn:]
  -[CRSet allObjects]
  -[CRSet anyObject]
  -[CRSet initWithCRCoder:]
  -[CRSet setDocument:]
  -[CRSet removeObserver:]
  -[CRSet setObject:]
  -[CRSet removeObject:]
  -[CRSet isEqual:]
  -[CRSet init]
  -[CRSet observers]
  -[CRSet dictionary]
  -[CRSet encodeWithCRCoder:set:]
  -[CRSet encodeWithCRCoder:set:elementValueCoder:]
  -[CRSet initWithCRCoder:set:]
  -[CRSet initWithCRCoder:set:elementValueDecoder:]


CRRegisterLatest : CRRegister
 @property  CRTimestamp *timestamp

  // instance methods
  -[CRRegisterLatest setTimestamp:]
  -[CRRegisterLatest deltaSince:in:]
  -[CRRegisterLatest encodeWithCRCoder:]
  -[CRRegisterLatest mergeWith:]
  -[CRRegisterLatest contents]
  -[CRRegisterLatest .cxx_destruct]
  -[CRRegisterLatest setContents:]
  -[CRRegisterLatest walkGraph:]
  -[CRRegisterLatest realizeLocalChangesIn:]
  -[CRRegisterLatest initWithContents:document:]
  -[CRRegisterLatest timestamp]
  -[CRRegisterLatest initWithCRCoder:]
  -[CRRegisterLatest _setContents:]
  -[CRRegisterLatest setDocument:]
  -[CRRegisterLatest initWithContents:timestamp:document:]
  -[CRRegisterLatest initWithProtobufRegisterLatest:decoder:]
  -[CRRegisterLatest encodeIntoProtobufRegisterLatest:coder:]
  -[CRRegisterLatest isEqualContents:]
  -[CRRegisterLatest mergeWithRegisterLatest:]


CRRegisterMultiValue : CRRegister
 @property  CRSet *values
 @property  NSSet *cachedValues

  // instance methods
  -[CRRegisterMultiValue values]
  -[CRRegisterMultiValue deltaSince:in:]
  -[CRRegisterMultiValue setValues:]
  -[CRRegisterMultiValue encodeWithCRCoder:]
  -[CRRegisterMultiValue mergeWith:]
  -[CRRegisterMultiValue contents]
  -[CRRegisterMultiValue .cxx_destruct]
  -[CRRegisterMultiValue setContents:]
  -[CRRegisterMultiValue walkGraph:]
  -[CRRegisterMultiValue initWithValues:]
  -[CRRegisterMultiValue cachedValues]
  -[CRRegisterMultiValue initWithContents:document:]
  -[CRRegisterMultiValue initWithCRCoder:]
  -[CRRegisterMultiValue setDocument:]
  -[CRRegisterMultiValue setCachedValues:]
  -[CRRegisterMultiValue isEqual:]
  -[CRRegisterMultiValue allContents]
  -[CRRegisterMultiValue mergeWithRegisterMultiValue:]


CRRegisterMultiValueLeast : CRRegisterMultiValue
  // instance methods
  -[CRRegisterMultiValueLeast contents]


TTParagraphStyle : NSObject <NSSecureCoding, NSCopying, NSMutableCopying, TTModelAttributeComparable>
 @property  unsigned int style
 @property  long long alignment
 @property  long long writingDirection
 @property  unsigned long indent
 @property  unsigned long startingItemNumber
 @property  unsigned int hints
 @property  BOOL needsParagraphCleanup
 @property  BOOL needsListCleanup
 @property  BOOL canIndent
 @property  BOOL isList
 @property  BOOL isHeader
 @property  BOOL uniqueToLine
 @property  BOOL preferSingleLine
 @property  BOOL wantsFollowingNewLine
 @property  NSUUID *trackingUUID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TTParagraphStyle supportsSecureCoding]
  +[TTParagraphStyle defaultParagraphStyle]
  +[TTParagraphStyle paragraphStyleNamed:]
  +[TTParagraphStyle textAlignmentForParagraphStyleAlignment:]
  +[TTParagraphStyle paragraphStyleAlignmentForTextAlignment:]

  // instance methods
  -[TTParagraphStyle alignment]
  -[TTParagraphStyle isHeader]
  -[TTParagraphStyle encodeWithCoder:]
  -[TTParagraphStyle style]
  -[TTParagraphStyle setAlignment:]
  -[TTParagraphStyle initWithArchive:]
  -[TTParagraphStyle copyWithZone:]
  -[TTParagraphStyle serialize]
  -[TTParagraphStyle initWithData:]
  -[TTParagraphStyle mutableCopyWithZone:]
  -[TTParagraphStyle trackingUUID]
  -[TTParagraphStyle setStyle:]
  -[TTParagraphStyle isEqual:]
  -[TTParagraphStyle init]
  -[TTParagraphStyle initWithCoder:]
  -[TTParagraphStyle hints]
  -[TTParagraphStyle setHints:]
  -[TTParagraphStyle writingDirection]
  -[TTParagraphStyle setWritingDirection:]
  -[TTParagraphStyle setStartingItemNumber:]
  -[TTParagraphStyle startingItemNumber]
  -[TTParagraphStyle indent]
  -[TTParagraphStyle listBulletInAttributedString:atIndex:]
  -[TTParagraphStyle isList]
  -[TTParagraphStyle needsListCleanup]
  -[TTParagraphStyle preferSingleLine]
  -[TTParagraphStyle needsParagraphCleanup]
  -[TTParagraphStyle uniqueToLine]
  -[TTParagraphStyle canIndent]
  -[TTParagraphStyle setNeedsListCleanup:]
  -[TTParagraphStyle setNeedsParagraphCleanup:]
  -[TTParagraphStyle wantsFollowingNewLine]
  -[TTParagraphStyle setIndent:]
  -[TTParagraphStyle isEqualToModelComparable:]
  -[TTParagraphStyle saveToArchive:]
  -[TTParagraphStyle isEqualToParagraphStyle:]
  -[TTParagraphStyle isEqualToModelParagraphStyle:]
  -[TTParagraphStyle isUnknownStyle]


TTMutableParagraphStyle : TTParagraphStyle
 @property  unsigned int style
 @property  long long alignment
 @property  long long writingDirection
 @property  unsigned long indent
 @property  unsigned long startingItemNumber
 @property  unsigned int hints
 @property  BOOL needsParagraphCleanup
 @property  BOOL needsListCleanup

  // class methods
  +[TTMutableParagraphStyle paragraphStyleNamed:]

  // instance methods
  -[TTMutableParagraphStyle copyWithZone:]


CRRegisterGreatest : CRRegisterLatest
  // instance methods
  -[CRRegisterGreatest encodeWithCRCoder:]
  -[CRRegisterGreatest mergeWith:]
  -[CRRegisterGreatest setContents:]
  -[CRRegisterGreatest compare:with:]
  -[CRRegisterGreatest initWithCRCoder:]
  -[CRRegisterGreatest mergeWithRegisterGreatest:]


CRRegisterLeast : CRRegisterGreatest
  // instance methods
  -[CRRegisterLeast compare:with:]


TTMergeableStringUndoAttributeCommand : NSObject <TTMergeableStringUndoCommand>
 @property  ^v attributeRanges
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TTMergeableStringUndoAttributeCommand dealloc]
  -[TTMergeableStringUndoAttributeCommand init]
  -[TTMergeableStringUndoAttributeCommand applyToString:]
  -[TTMergeableStringUndoAttributeCommand updateTopoIDRange:toNewRangeID:]
  -[TTMergeableStringUndoAttributeCommand hasTopoIDsThatCanChange]
  -[TTMergeableStringUndoAttributeCommand addToGroup:]
  -[TTMergeableStringUndoAttributeCommand attributeRanges]


TTMergeableAttributedString : TTMergeableUndoString <CRCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[TTMergeableAttributedString writingDirectionForAttribute:]
  +[TTMergeableAttributedString attributeForWritingDirection:]
  +[TTMergeableAttributedString attributesForRun:]
  +[TTMergeableAttributedString saveAttributes:toArchive:]
  +[TTMergeableAttributedString saveAttributesOfString:toArchive:]
  +[TTMergeableAttributedString allowlistedAttributesForModel]
  +[TTMergeableAttributedString allowlistedAttributesForStyle]
  +[TTMergeableAttributedString allowlistedTypingAttributes]

  // instance methods
  -[TTMergeableAttributedString setAttributes:range:]
  -[TTMergeableAttributedString attributesAtIndex:effectiveRange:]
  -[TTMergeableAttributedString replaceCharactersInRange:withString:]
  -[TTMergeableAttributedString encodeWithCRCoder:]
  -[TTMergeableAttributedString insertString:atIndex:]
  -[TTMergeableAttributedString initWithCRCoder:]
  -[TTMergeableAttributedString serialize]
  -[TTMergeableAttributedString initWithCRCoder:string:]
  -[TTMergeableAttributedString encodeWithCRCoder:string:]
  -[TTMergeableAttributedString saveToArchive:]
  -[TTMergeableAttributedString initWithArchive:andReplicaID:withOrderedSubstrings:timestamp:]
  -[TTMergeableAttributedString saveDeltaSinceTimestamp:toArchive:]
  -[TTMergeableAttributedString attributesEqual:toRange:modelEqual:]
  -[TTMergeableAttributedString attributesEqual:to:modelEqual:]
  -[TTMergeableAttributedString setAttributes:substring:]


CRObject : NSObject <CRDataType, CREquatable, CRIdentifiable, CRCoding>
 @property  NSUUID *identity
 @property  NSDictionary *fields
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CRObject resolveInstanceMethod:]
  +[CRObject CRProperties]
  +[CRObject keyFromSelector:]

  // instance methods
  -[CRObject tombstone]
  -[CRObject deltaSince:in:]
  -[CRObject fields]
  -[CRObject encodeWithCRCoder:]
  -[CRObject mergeWith:]
  -[CRObject .cxx_destruct]
  -[CRObject walkGraph:]
  -[CRObject identity]
  -[CRObject realizeLocalChangesIn:]
  -[CRObject initWithCRCoder:]
  -[CRObject setDocument:]
  -[CRObject isEqual:]
  -[CRObject init]
  -[CRObject mergeWithObject:]
  -[CRObject initWithIdentity:fields:]
  -[CRObject setupConstraintsFor:in:]
  -[CRObject setFieldKey:value:]


TTFont : NSObject <NSSecureCoding>
 @property  id nativeFont
 @property  NSString *fontName
 @property  double pointSize
 @property  unsigned int fontHints

  // class methods
  +[TTFont supportsSecureCoding]

  // instance methods
  -[TTFont fontName]
  -[TTFont pointSize]
  -[TTFont encodeWithCoder:]
  -[TTFont .cxx_destruct]
  -[TTFont initWithArchive:]
  -[TTFont serialize]
  -[TTFont initWithData:]
  -[TTFont isEqual:]
  -[TTFont initWithCoder:]
  -[TTFont setNativeFont:]
  -[TTFont fontHints]
  -[TTFont initWithName:size:hints:]
  -[TTFont nativeFont]
  -[TTFont saveToArchive:]


CRDocument : NSObject <REMReplicaClockProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  CRVectorTimestamp *version
 @property  CRVectorTimestamp *startVersion
 @property  NSUUID *replica
 @property  id rootObject
 @property  long long replicaClock
 @property  long long unserializedReplicaClock
 @property  NSMutableDictionary *objects

  // class methods
  +[CRDocument documentWithReplica:]
  +[CRDocument documentWithRootObject:replica:]
  +[CRDocument unarchiveFromData:replica:]

  // instance methods
  -[CRDocument .cxx_destruct]
  -[CRDocument archivedData]
  -[CRDocument rootObject]
  -[CRDocument version]
  -[CRDocument objects]
  -[CRDocument updateObjects:]
  -[CRDocument setDocument:]
  -[CRDocument init]
  -[CRDocument setRootObject:]
  -[CRDocument replica]
  -[CRDocument mergeWithDocument:]
  -[CRDocument clockElementListForReplicaUUID:]
  -[CRDocument copyForReplica:]
  -[CRDocument initWithVersion:startVersion:rootObject:replica:]
  -[CRDocument mergeResultForMergingWithDocument:]
  -[CRDocument mergeTimestampWithDocument:]
  -[CRDocument realizeLocalChanges]
  -[CRDocument initWithReplica:]
  -[CRDocument initWithVersion:rootObject:replica:]
  -[CRDocument localObject:]
  -[CRDocument mergeWithData:]
  -[CRDocument walkGraph:root:]
  -[CRDocument updateGraphDocumentPointers]
  -[CRDocument updateObjectsSet]
  -[CRDocument setDocumentFor:]
  -[CRDocument deltaSince:]
  -[CRDocument startVersion]
  -[CRDocument replicaClock]
  -[CRDocument unserializedReplicaClock]
  -[CRDocument setUnserializedReplicaClock:]


TTMergeableStringVersionedDocument : TTVersionedDocument <REMReplicaClockProviding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  TTMergeableAttributedString *mergeableString

  // class methods
  +[TTMergeableStringVersionedDocument minimumSupportedVersion]
  +[TTMergeableStringVersionedDocument serializationVersion]

  // instance methods
  -[TTMergeableStringVersionedDocument .cxx_destruct]
  -[TTMergeableStringVersionedDocument initWithMergeableString:]
  -[TTMergeableStringVersionedDocument mergeWithStringVersionedDocument:]
  -[TTMergeableStringVersionedDocument mergeableString]
  -[TTMergeableStringVersionedDocument clockElementListForReplicaUUID:]
  -[TTMergeableStringVersionedDocument mergeVersion:fromData:]
  -[TTMergeableStringVersionedDocument serializeCurrentVersion:]
  -[TTMergeableStringVersionedDocument rem_copyWithReplicaIDForNewEdits:]
  -[TTMergeableStringVersionedDocument rem_isEqual:]
  -[TTMergeableStringVersionedDocument initWithArchive:andReplicaID:]
  -[TTMergeableStringVersionedDocument initWithData:andReplicaID:]
  -[TTMergeableStringVersionedDocument setMergeableString:]


CRRegister : NSObject <CRDataType, CRCoding>
 @property  id contents
 @property  CRDocument *document
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CRRegister registerWithType:contents:]
  +[CRRegister registerWithType:contents:document:]

  // instance methods
  -[CRRegister tombstone]
  -[CRRegister document]
  -[CRRegister deltaSince:in:]
  -[CRRegister encodeWithCRCoder:]
  -[CRRegister mergeWith:]
  -[CRRegister .cxx_destruct]
  -[CRRegister walkGraph:]
  -[CRRegister initWithDocument:]
  -[CRRegister realizeLocalChangesIn:]
  -[CRRegister initWithCRCoder:]
  -[CRRegister setDocument:]
  -[CRRegister isEqualContents:]


CRReplica : NSObject
  // class methods
  +[CRReplica unserialisedIdentifier]


CRTimestamp : NSObject <CRDataType, CREquatable, NSCopying, CRCoding>
 @property  NSUUID *replica
 @property  long long counter
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRTimestamp tombstone]
  -[CRTimestamp deltaSince:in:]
  -[CRTimestamp compare:]
  -[CRTimestamp encodeWithCRCoder:]
  -[CRTimestamp mergeWith:]
  -[CRTimestamp isEqualToTimestamp:]
  -[CRTimestamp .cxx_destruct]
  -[CRTimestamp setCounter:]
  -[CRTimestamp walkGraph:]
  -[CRTimestamp shortDescription]
  -[CRTimestamp copyWithZone:]
  -[CRTimestamp realizeLocalChangesIn:]
  -[CRTimestamp initWithCRCoder:]
  -[CRTimestamp setDocument:]
  -[CRTimestamp isEqual:]
  -[CRTimestamp counter]
  -[CRTimestamp replica]
  -[CRTimestamp setReplica:]
  -[CRTimestamp initWithProtobufTimestamp:decoder:]
  -[CRTimestamp encodeIntoProtobufTimestamp:coder:]
  -[CRTimestamp initWithReplica:andCounter:]
  -[CRTimestamp nextTimestampForReplica:]
  -[CRTimestamp nextTimestamp]
  -[CRTimestamp earlierTimestamp:]
  -[CRTimestamp laterTimestamp:]


CRVectorTimestampElement : NSObject <NSSecureCoding>
 @property  unsigned long clock
 @property  unsigned long subclock

  // class methods
  +[CRVectorTimestampElement supportsSecureCoding]

  // instance methods
  -[CRVectorTimestampElement setClock:]
  -[CRVectorTimestampElement clock]
  -[CRVectorTimestampElement encodeWithCoder:]
  -[CRVectorTimestampElement initWithCoder:]
  -[CRVectorTimestampElement subclock]
  -[CRVectorTimestampElement setSubclock:]
  -[CRVectorTimestampElement rem_compareToVectorTimestampElement:]


CRVectorTimestamp : NSObject <CRDataType, NSCopying, CRCoding>
 @property  unsigned long count
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRVectorTimestamp tombstone]
  -[CRVectorTimestamp deltaSince:in:]
  -[CRVectorTimestamp compare:]
  -[CRVectorTimestamp encodeWithCRCoder:]
  -[CRVectorTimestamp mergeWith:]
  -[CRVectorTimestamp .cxx_destruct]
  -[CRVectorTimestamp walkGraph:]
  -[CRVectorTimestamp count]
  -[CRVectorTimestamp shortDescription]
  -[CRVectorTimestamp copyWithZone:]
  -[CRVectorTimestamp realizeLocalChangesIn:]
  -[CRVectorTimestamp initWithCRCoder:]
  -[CRVectorTimestamp setDocument:]
  -[CRVectorTimestamp isEqual:]
  -[CRVectorTimestamp init]
  -[CRVectorTimestamp clockElementForUUID:]
  -[CRVectorTimestamp clockForUUID:]
  -[CRVectorTimestamp subclockForUUID:]
  -[CRVectorTimestamp setClock:forUUID:]
  -[CRVectorTimestamp setClock:subclock:forUUID:]
  -[CRVectorTimestamp incrementClockForUUID:]
  -[CRVectorTimestamp allUUIDs]
  -[CRVectorTimestamp sortedUUIDs]
  -[CRVectorTimestamp initWithProtobufTimestamp:decoder:]
  -[CRVectorTimestamp encodeIntoProtobufTimestamp:coder:]
  -[CRVectorTimestamp timestampForReplica:]
  -[CRVectorTimestamp maxClock:forUUID:]
  -[CRVectorTimestamp removeUUID:]
  -[CRVectorTimestamp minusVectorTimestamp:]


CRCoder : NSObject
 @property  NSMutableOrderedSet *encodedObjects
 @property  ^v currentDocument
 @property  NSOrderedSet *clusterTypeSet
 @property  NSDictionary *typeToClassDict
 @property  NSOrderedSet *typeSet

  // class methods
  +[CRCoder registerCRClasses]
  +[CRCoder registerClass:forType:]
  +[CRCoder _registerClass:forType:cluster:]

  // instance methods
  -[CRCoder .cxx_destruct]
  -[CRCoder encodedObjects]
  -[CRCoder setEncodedObjects:]
  -[CRCoder currentDocument]
  -[CRCoder setCurrentDocument:]
  -[CRCoder typeSet]
  -[CRCoder typeToClassDict]
  -[CRCoder typeIndexForClass:]
  -[CRCoder clusterTypeSet]


TTMergeableUndoString : TTMergeableString
  // instance methods
  -[TTMergeableUndoString applyUndoCommand:]
  -[TTMergeableUndoString addUndoCommand:]
  -[TTMergeableUndoString deleteSubstrings:withCharacterRanges:]
  -[TTMergeableUndoString insertAttributedString:after:before:]
  -[TTMergeableUndoString undeleteSubstrings:]


CRTombstoneOrderedSet : NSObject <CRCoding, CRUndoDelegate, CRDataType>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSMutableOrderedSet *cachedIdentifierSet
 @property  NSMapTable *cachedIndexMapping
 @property  CRArray *ordering
 @property  CRSet *elements
 @property  CRDocument *document
 @property  NSObject<CRUndoDelegate> *delegate
 @property  unsigned long count
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CRTombstoneOrderedSet tombstone]
  -[CRTombstoneOrderedSet setElements:]
  -[CRTombstoneOrderedSet document]
  -[CRTombstoneOrderedSet elements]
  -[CRTombstoneOrderedSet deltaSince:in:]
  -[CRTombstoneOrderedSet setDelegate:]
  -[CRTombstoneOrderedSet delegate]
  -[CRTombstoneOrderedSet encodeWithCRCoder:]
  -[CRTombstoneOrderedSet mergeWith:]
  -[CRTombstoneOrderedSet .cxx_destruct]
  -[CRTombstoneOrderedSet addObject:]
  -[CRTombstoneOrderedSet walkGraph:]
  -[CRTombstoneOrderedSet count]
  -[CRTombstoneOrderedSet initWithDocument:]
  -[CRTombstoneOrderedSet removeObjectAtIndex:]
  -[CRTombstoneOrderedSet objectForIdentifier:]
  -[CRTombstoneOrderedSet realizeLocalChangesIn:]
  -[CRTombstoneOrderedSet insertObject:atIndex:]
  -[CRTombstoneOrderedSet initWithCRCoder:]
  -[CRTombstoneOrderedSet objectAtIndex:]
  -[CRTombstoneOrderedSet setDocument:]
  -[CRTombstoneOrderedSet isEqual:]
  -[CRTombstoneOrderedSet init]
  -[CRTombstoneOrderedSet objectAtIndexedSubscript:]
  -[CRTombstoneOrderedSet enumerateObjectsUsingBlock:]
  -[CRTombstoneOrderedSet ordering]
  -[CRTombstoneOrderedSet setOrdering:]
  -[CRTombstoneOrderedSet wantsUndoCommands]
  -[CRTombstoneOrderedSet indexOfEqualObject:]
  -[CRTombstoneOrderedSet addUndoCommandsForObject:block:]
  -[CRTombstoneOrderedSet moveObjectFromIndex:toIndex:]
  -[CRTombstoneOrderedSet moveClock]
  -[CRTombstoneOrderedSet encodeWithCRCoder:orderedSet:]
  -[CRTombstoneOrderedSet initWithCRCoder:orderedSet:]
  -[CRTombstoneOrderedSet initWithOrdering:elements:document:]
  -[CRTombstoneOrderedSet cachedIdentifierSet]
  -[CRTombstoneOrderedSet cachedIndexMapping]
  -[CRTombstoneOrderedSet regenerateNSOrderedIdentifierSetAndIndexMapping]
  -[CRTombstoneOrderedSet generateNSOrderedIdentifierSetWithIndexMapping:]
  -[CRTombstoneOrderedSet wipeoutCaches]
  -[CRTombstoneOrderedSet identifierForObjectInCachedSet:]
  -[CRTombstoneOrderedSet containsObjectEqualTo:]
  -[CRTombstoneOrderedSet undoablyRemoveObjectIdentifiersFromElements:]
  -[CRTombstoneOrderedSet undoablyInsertObjectIdentifiersIntoElements:]
  -[CRTombstoneOrderedSet shiftCachedIndicesStartingAtIndex:by:]
  -[CRTombstoneOrderedSet safeMoveObjectFromIndex:toIndex:]
  -[CRTombstoneOrderedSet moveObjectFromIndex:toIndex:mutableSafe:]
  -[CRTombstoneOrderedSet _removeObjectsFromOrderingAtIndices:]
  -[CRTombstoneOrderedSet reinsertIdentifier:withMaskedIdentifiers:atIndex:forObjectToMove:]
  -[CRTombstoneOrderedSet realizeElementMutations]


TTMergeableStringUndoEditCommand : NSObject <TTMergeableStringUndoCommand>
 @property  ^v deleteRanges
 @property  ^v insertStrings
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[TTMergeableStringUndoEditCommand dealloc]
  -[TTMergeableStringUndoEditCommand init]
  -[TTMergeableStringUndoEditCommand applyToString:]
  -[TTMergeableStringUndoEditCommand updateTopoIDRange:toNewRangeID:]
  -[TTMergeableStringUndoEditCommand hasTopoIDsThatCanChange]
  -[TTMergeableStringUndoEditCommand addToGroup:]
  -[TTMergeableStringUndoEditCommand updateInsertTopoIDRange:toNewRangeID:]
  -[TTMergeableStringUndoEditCommand deleteRanges]
  -[TTMergeableStringUndoEditCommand insertStrings]


TTCRVectorTimestamp : TTVectorTimestamp
 @property  CRVectorTimestamp *crTimestamp

  // instance methods
  -[TTCRVectorTimestamp .cxx_destruct]
  -[TTCRVectorTimestamp copyWithZone:]
  -[TTCRVectorTimestamp init]
  -[TTCRVectorTimestamp clockElementForUUID:]
  -[TTCRVectorTimestamp clockForUUID:]
  -[TTCRVectorTimestamp subclockForUUID:]
  -[TTCRVectorTimestamp setClock:forUUID:]
  -[TTCRVectorTimestamp setClock:subclock:forUUID:]
  -[TTCRVectorTimestamp allUUIDs]
  -[TTCRVectorTimestamp sortedUUIDs]
  -[TTCRVectorTimestamp crTimestamp]
  -[TTCRVectorTimestamp setCrTimestamp:]


TTCRVectorMultiTimestamp : TTVectorMultiTimestamp
  // instance methods
  -[TTCRVectorMultiTimestamp initWithCapacity:]
  -[TTCRVectorMultiTimestamp copyWithZone:]
  -[TTCRVectorMultiTimestamp isDocumentShared]


ICProtobufUtilities : NSObject

CRConstant : NSObject
  // class methods
  +[CRConstant constant]

  // instance methods
  -[CRConstant isEqual:]


ICSTodo(REMSaveRequestImporting)
	// instance methods
	-[ICSTodo(REMSaveRequestImporting) rem_nonNilSummary]

NSError(REMChangeError)
	// class methods
	+[NSError(REMChangeError) _defaultDescriptionForREMChangeErrorCode:]
	+[NSError(REMChangeError) errorWithREMChangeErrorCode:]
	+[NSError(REMChangeError) errorWithREMChangeErrorCode:debugDescription:]
	+[NSError(REMChangeError) errorWithREMChangeErrorCode:underlyingError:]
	+[NSError(REMChangeError) errorWithREMChangeErrorCode:description:underlyingError:]

NSUserDefaults(ReminderKitAdditions)
	// instance methods
	-[NSUserDefaults(ReminderKitAdditions) objectIDForKey:]
	-[NSUserDefaults(ReminderKitAdditions) setObjectID:forKey:]

NSDateComponents(ReminderKitAdditions)
	// class methods
	+[NSDateComponents(ReminderKitAdditions) rem_dateComponentsWithDate:timeZone:isAllDay:]
	+[NSDateComponents(ReminderKitAdditions) rem_dateWithDateComponents:timeZone:]
	+[NSDateComponents(ReminderKitAdditions) rem_dateComponentsWithDateUsingArchivingTimeZone:isAllDay:]
	+[NSDateComponents(ReminderKitAdditions) rem_dateWithDateComponentsUsingArchivingTimeZone:]
	+[NSDateComponents(ReminderKitAdditions) rem_dateComponentsWithYear:month:day:hour:minute:second:allDay:timeZone:]

	// instance methods
	-[NSDateComponents(ReminderKitAdditions) rem_strippingTimeZone]
	-[NSDateComponents(ReminderKitAdditions) rem_allDayDateComponents]
	-[NSDateComponents(ReminderKitAdditions) rem_isValidDateComponents]
	-[NSDateComponents(ReminderKitAdditions) rem_isAllDayDateComponents]
	-[NSDateComponents(ReminderKitAdditions) rem_gregorianEquivalent]
	-[NSDateComponents(ReminderKitAdditions) rem_dateComponentsByAddingTimeInterval:]
	-[NSDateComponents(ReminderKitAdditions) rem_isWeekendDateComponents]
	-[NSDateComponents(ReminderKitAdditions) rem_compare:]
	-[NSDateComponents(ReminderKitAdditions) rem_stringRepresentation]

NSMutableAttributedString(ReminderKitAdditions)
	// instance methods
	-[NSMutableAttributedString(ReminderKitAdditions) rem_addHashtag:range:]
	-[NSMutableAttributedString(ReminderKitAdditions) rem_setUnderline:inRange:]
	-[NSMutableAttributedString(ReminderKitAdditions) rem_setFontHint:isOn:inRange:]
	-[NSMutableAttributedString(ReminderKitAdditions) rem_removeHashtagInRange:]
	-[NSMutableAttributedString(ReminderKitAdditions) rem_addParagraphNamedStyle:inRange:]
	-[NSMutableAttributedString(ReminderKitAdditions) rem_removeParagraphNamedStyleFromRange:]
	-[NSMutableAttributedString(ReminderKitAdditions) rem_replaceTTREMHashtag:withTTREMHashtag:]
	-[NSMutableAttributedString(ReminderKitAdditions) ic_replaceCharactersInRange:withAttributedSubstring:fromRange:]
	-[NSMutableAttributedString(ReminderKitAdditions) ic_appendAttributedSubstring:fromRange:]

NSAttributedString(REMCRMergeableStringDocument_Hashtags)
	// instance methods
	-[NSAttributedString(REMCRMergeableStringDocument_Hashtags) rem_enumerateHashtagInRange:options:usingBlock:]
	-[NSAttributedString(REMCRMergeableStringDocument_Hashtags) rem_fontHintAtIndex:effectiveRange:]
	-[NSAttributedString(REMCRMergeableStringDocument_Hashtags) rem_isUnderlinedAtIndex:effectiveRange:]
	-[NSAttributedString(REMCRMergeableStringDocument_Hashtags) rem_hashtagAtIndex:longestEffectiveRange:inRange:]
	-[NSAttributedString(REMCRMergeableStringDocument_Hashtags) rem_paragraphStyleAtIndex:effectiveRange:]
	-[NSAttributedString(REMCRMergeableStringDocument_Hashtags) rem_hashtagAtIndex:effectiveRange:]
	-[NSAttributedString(REMCRMergeableStringDocument_Hashtags) rem_hashtagAtIndex:effectiveRange:wantsLongestEffectiveRange:inRange:]

ICSDate(ReminderKitAdditions)
	// instance methods
	-[ICSDate(ReminderKitAdditions) rem_dateAsUTC]
	-[ICSDate(ReminderKitAdditions) rem_dateWithICSCalendar:]

(HexStringAdditions)
	// class methods
	+[(HexStringAdditions) rem_dataWithHexString:]
	+[(HexStringAdditions) dataFromBase64String:]
	+[(HexStringAdditions) rem_dataWithRandomBytesWithLength:]

	// instance methods
	-[(HexStringAdditions) base64EncodedString]
	-[(HexStringAdditions) TT_gzipInflate]
	-[(HexStringAdditions) TT_gzipDeflate]

(ReminderKitAdditions)
	// class methods
	+[(ReminderKitAdditions) rem_registerClassAtCRCoderIfNeeded]
	+[(ReminderKitAdditions) rem_isFirstString:equalToSecondString:]

	// instance methods
	-[(ReminderKitAdditions) tombstone]
	-[(ReminderKitAdditions) deltaSince:in:]
	-[(ReminderKitAdditions) encodeWithCRCoder:]
	-[(ReminderKitAdditions) mergeWith:]
	-[(ReminderKitAdditions) walkGraph:]
	-[(ReminderKitAdditions) realizeLocalChangesIn:]
	-[(ReminderKitAdditions) initWithCRCoder:]
	-[(ReminderKitAdditions) setDocument:]
	-[(ReminderKitAdditions) rem_hasMailto]
	-[(ReminderKitAdditions) rem_hasTel]
	-[(ReminderKitAdditions) rem_removingTel]
	-[(ReminderKitAdditions) rem_removingMailto]
	-[(ReminderKitAdditions) rem_addingTel]
	-[(ReminderKitAdditions) rem_hasPrefixCaseInsensitive:]
	-[(ReminderKitAdditions) rem_addingMailto]
	-[(ReminderKitAdditions) rem_tidyFormattedNameString]

(ReminderKitAdditions)
	// class methods
	+[(ReminderKitAdditions) setDebug_rem_nowOverride:]
	+[(ReminderKitAdditions) debug_rem_nowOverride]
	+[(ReminderKitAdditions) rem_now]

(REMHumanReadableIdentifier)
	// instance methods
	-[(REMHumanReadableIdentifier) rem_humanReadableIdentifier]

(REMDistributedEvaluationCollectionOptions)
	// instance methods
	-[(REMDistributedEvaluationCollectionOptions) remdes_boolForKey:defaultValue:]
	-[(REMDistributedEvaluationCollectionOptions) remdes_nsuintegerForKey:defaultValue:]
	-[(REMDistributedEvaluationCollectionOptions) remdes_doubleForKey:defaultValue:]

NSISO8601DateFormatter(ReminderKitAdditions)
	// class methods
	+[NSISO8601DateFormatter(ReminderKitAdditions) rem_formatterWithTimeZone:]

	// instance methods
	-[NSISO8601DateFormatter(ReminderKitAdditions) rem_dateComponentsFromString:]
	-[NSISO8601DateFormatter(ReminderKitAdditions) rem_stringFromDateComponents:]

(ReminderKitAdditions)
	// class methods
	+[(ReminderKitAdditions) remDebugTimeZone_LosAngeles]
	+[(ReminderKitAdditions) remDebugTimeZone_NewYork]
	+[(ReminderKitAdditions) remDebugTimeZone_GMT]

	// instance methods
	-[(ReminderKitAdditions) rem_isEquivalentTo:]

ACAccount(REM)
	// instance methods
	-[ACAccount(REM) rem_isEligibleForCloudKitReminders]
	-[ACAccount(REM) rem_eligibleForAutoCloudKitMigration]
	-[ACAccount(REM) rem_didChooseToMigrate]
	-[ACAccount(REM) rem_didFinishMigration]
	-[ACAccount(REM) rem_isManagedAppleID]
	-[ACAccount(REM) rem_isPrimaryAppleAccount]

NSNumber(CRDT_Additions)
	// instance methods
	-[NSNumber(CRDT_Additions) tombstone]
	-[NSNumber(CRDT_Additions) deltaSince:in:]
	-[NSNumber(CRDT_Additions) encodeWithCRCoder:]
	-[NSNumber(CRDT_Additions) mergeWith:]
	-[NSNumber(CRDT_Additions) walkGraph:]
	-[NSNumber(CRDT_Additions) realizeLocalChangesIn:]
	-[NSNumber(CRDT_Additions) initWithCRCoder:]
	-[NSNumber(CRDT_Additions) setDocument:]

NSUUID(CRDT_Additions)
	// class methods
	+[NSUUID(CRDT_Additions) CR_repeatedCharUUID:]
	+[NSUUID(CRDT_Additions) CR_zero]
	+[NSUUID(CRDT_Additions) CR_UUIDFromStdString:]
	+[NSUUID(CRDT_Additions) TTZero]

	// instance methods
	-[NSUUID(CRDT_Additions) tombstone]
	-[NSUUID(CRDT_Additions) deltaSince:in:]
	-[NSUUID(CRDT_Additions) encodeWithCRCoder:]
	-[NSUUID(CRDT_Additions) mergeWith:]
	-[NSUUID(CRDT_Additions) walkGraph:]
	-[NSUUID(CRDT_Additions) realizeLocalChangesIn:]
	-[NSUUID(CRDT_Additions) initWithCRCoder:]
	-[NSUUID(CRDT_Additions) setDocument:]
	-[NSUUID(CRDT_Additions) TTCompare:]
	-[NSUUID(CRDT_Additions) CR_compare:]
	-[NSUUID(CRDT_Additions) CR_shortDescription]
	-[NSUUID(CRDT_Additions) CR_toStdString]
	-[NSUUID(CRDT_Additions) TTShortDescription]

01 00 0e00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccount 
01 00 0e00 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKAccountOverrideInfo 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainer 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerID 
01 00 0f00 /System/Library/Frameworks/CloudKit.framework/CloudKit: CKContainerOptions 
01 00 0600 /System/Library/Frameworks/Contacts.framework/Contacts: CNPhoneNumber 
01 00 0900 /System/Library/PrivateFrameworks/CalendarFoundation.framework/CalendarFoundation: CalRecurrenceGenerator 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSAlarm 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSByDayValue 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSCalendar 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSComponent 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSDate 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSDateTimeUTCValue 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSDateTimeValue 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSDocument 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSDuration 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSProperty 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSRecurrenceRule 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSStructuredLocation 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSTodo 
01 00 1300 /System/Library/PrivateFrameworks/iCalendar.framework/iCalendar: ICSTrigger 
01 00 0d00 /System/Library/Frameworks/Intents.framework/Intents: INIntent 
01 00 0d00 /System/Library/Frameworks/Intents.framework/Intents: INPerson 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleProxy 
01 00 0400 /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync: NPSManager 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSISO8601DateFormatter 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1700 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryChangeRequest 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryToken 
01 00 1000 /System/Library/Frameworks/CoreData.framework/CoreData: NSPersistentHistoryTransaction 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSSecurityScopedURLWrapper 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLQueryItem 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0b00 /System/Library/Frameworks/CoreServices.framework/CoreServices: NSUserActivity 
01 00 1a00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1600 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0200 /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/SymptomDiagnosticReporter: SDRDiagnosticReporter 
