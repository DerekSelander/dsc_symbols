|| __DATA.__data _DKInkViewTouchesBeganNotification
|| __DATA.__data _DKInkViewTouchesEndedLocationInViewUserInfoKey
|| __DATA.__data _DKInkViewTouchesEndedNotification
|| __DATA.__data _MaxForceValue
|| __DATA.__data _MaxVelocityValue
|| __DATA.__objc_data _OBJC_CLASS_$_DKDrawing
|| __DATA.__objc_data _OBJC_CLASS_$_DKDrawingStroke
|| __DATA.__objc_data _OBJC_CLASS_$_DKDrawingStrokePoint
|| __DATA.__objc_data _OBJC_CLASS_$_DKInkThumbnailRenderer
|| __DATA.__objc_data _OBJC_CLASS_$_DKInkView
|| __DATA.__objc_data _OBJC_CLASS_$_HWEncoding
|| __DATA.__objc_data _OBJC_CLASS_$_HWHandwritingItem
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDrawing
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDrawingStroke
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDrawingStrokePoint
|| __DATA.__objc_data _OBJC_METACLASS_$_DKInkThumbnailRenderer
|| __DATA.__objc_data _OBJC_METACLASS_$_DKInkView
|| __DATA.__objc_data _OBJC_METACLASS_$_HWEncoding
|| __DATA.__objc_data _OBJC_METACLASS_$_HWHandwritingItem
|| __TEXT.__text _CGPointIsUnrepresentable
|| __TEXT.__text _CGRectIsUnrepresentable
|| __TEXT.__text _DKDistanceBetweenPoints
|| __TEXT.__text _DKDrawingIsValid
|| __TEXT.__text _DKIsDarkMode
|| __TEXT.__text _DKRenderPointWidthForPoint
|| __TEXT.__text _HW_CGRectFromIntegralData
|| __TEXT.__text _HW_CGSizeFromIntegralData
|| __TEXT.__text _HW_DataFromIntegralCGRect
|| __TEXT.__text _HW_DataFromIntegralCGSize
|| __TEXT.__text _HW_FloatFromUInt16
|| __TEXT.__text _HW_MillisFromNSTimeInterval
|| __TEXT.__text _HW_NSTimeIntervalFromMillis
|| __TEXT.__text _HW_UInt16FromFloat
|| __TEXT.__text _NSStringFromVectorFloat4
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFRelease
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSRunLoop
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGContextFillEllipseInRect
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithCFData
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageCreate
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGPathAddEllipseInRect
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPointCreateDictionaryRepresentation
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectCreateDictionaryRepresentation
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectIsInfinite
__ CoreGraphics: _CGRectIsNull
__ CoreGraphics: _CGRectMakeWithDictionaryRepresentation
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ Foundation: _NSExtensionHostDidBecomeActiveNotification
__ Foundation: _NSExtensionHostWillResignActiveNotification
__ Foundation: _NSIntegralRectWithOptions
__ Foundation: _NSLog
__ Foundation: _NSStringFromClass
__ Foundation: _NSTemporaryDirectory
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSNotification
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSUndoManager
__ Foundation: _OBJC_CLASS_$_NSValue
__ GLKit: _OBJC_CLASS_$_GLKTextureLoader
__ GLKit: _OBJC_CLASS_$_GLKView
__ GLKit: _OBJC_METACLASS_$_GLKView
__ OpenGLES: _OBJC_CLASS_$_EAGLContext
__ OpenGLES: _glActiveTexture
__ OpenGLES: _glAttachShader
__ OpenGLES: _glBindAttribLocation
__ OpenGLES: _glBindBuffer
__ OpenGLES: _glBindFramebuffer
__ OpenGLES: _glBindRenderbuffer
__ OpenGLES: _glBindTexture
__ OpenGLES: _glBindVertexArrayOES
__ OpenGLES: _glBlendFunc
__ OpenGLES: _glBufferData
__ OpenGLES: _glBufferSubData
__ OpenGLES: _glClear
__ OpenGLES: _glClearColor
__ OpenGLES: _glCompileShader
__ OpenGLES: _glCreateProgram
__ OpenGLES: _glCreateShader
__ OpenGLES: _glDeleteBuffers
__ OpenGLES: _glDeleteFramebuffers
__ OpenGLES: _glDeleteRenderbuffers
__ OpenGLES: _glDeleteTextures
__ OpenGLES: _glDeleteVertexArraysOES
__ OpenGLES: _glDepthMask
__ OpenGLES: _glDisable
__ OpenGLES: _glDrawArrays
__ OpenGLES: _glEnable
__ OpenGLES: _glEnableVertexAttribArray
__ OpenGLES: _glFinish
__ OpenGLES: _glFlush
__ OpenGLES: _glFramebufferRenderbuffer
__ OpenGLES: _glFramebufferTexture2D
__ OpenGLES: _glGenBuffers
__ OpenGLES: _glGenFramebuffers
__ OpenGLES: _glGenRenderbuffers
__ OpenGLES: _glGenTextures
__ OpenGLES: _glGenVertexArraysOES
__ OpenGLES: _glGetError
__ OpenGLES: _glGetIntegerv
__ OpenGLES: _glGetProgramiv
__ OpenGLES: _glGetShaderInfoLog
__ OpenGLES: _glGetShaderiv
__ OpenGLES: _glGetUniformLocation
__ OpenGLES: _glLinkProgram
__ OpenGLES: _glPixelStorei
__ OpenGLES: _glPopGroupMarkerEXT
__ OpenGLES: _glPushGroupMarkerEXT
__ OpenGLES: _glReadPixels
__ OpenGLES: _glRenderbufferStorage
__ OpenGLES: _glScissor
__ OpenGLES: _glShaderSource
__ OpenGLES: _glTexImage2D
__ OpenGLES: _glTexParameteri
__ OpenGLES: _glUniform1f
__ OpenGLES: _glUniform1i
__ OpenGLES: _glUniform2fv
__ OpenGLES: _glUniform4fv
__ OpenGLES: _glUniformMatrix4fv
__ OpenGLES: _glUseProgram
__ OpenGLES: _glVertexAttribPointer
__ OpenGLES: _glViewport
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_CLASS_$_PBUnknownFields
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteSfixed64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteUint32Field
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBUnknownFieldAdd
__ QuartzCore: _OBJC_CLASS_$_CADisplayLink
__ UIFoundation: _OBJC_CLASS_$_UIBoxcarFilterPointFIFO
__ UIFoundation: _OBJC_CLASS_$_UIPointFIFO
__ UIFoundation: _OBJC_CLASS_$_UIQuadCurvePointFIFO
__ UIKit: _NSStringFromCGPoint
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UITraitCollection
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _printf
__ libc++.1.dylib: __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv
__ libc++.1.dylib: __ZNSt11logic_errorC2EPKc
__ libc++.1.dylib: __ZNSt12length_errorD1Ev
__ libc++.1.dylib: __ZSt9terminatev
__ libc++.1.dylib: __ZTISt12length_error
__ libc++.1.dylib: __ZTVSt12length_error
__ libc++.1.dylib: __ZdlPv
__ libc++.1.dylib: __Znwm
__ libc++.1.dylib: ___cxa_allocate_exception
__ libc++.1.dylib: ___cxa_begin_catch
__ libc++.1.dylib: ___cxa_free_exception
__ libc++.1.dylib: ___cxa_throw
__ libc++.1.dylib: ___gxx_personality_v0
__ libcompression.dylib: _compression_decode_buffer
__ libcompression.dylib: _compression_encode_buffer
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
DKInkRendererCG : UIView <DKInkRenderer>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} invalidRect
 @property  NSMutableArray *cachedInterpolatedBrushStrokes
 @property  NSMutableArray *currentInterpolatedBrushStroke
 @property  UIColor *inkColor
 @property  <DKInkRendererDelegate> *delegate
 @property  BOOL scaleDrawingToFitCanvas
 @property  double drawingScale
 @property  unsigned long mode
 @property  BOOL drawingEnabled
 @property  BOOL supportsBleedAnimation
 @property  BOOL initialized
 @property  unsigned long maximumPointsForBleedAnimation
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKInkRendererCG initialized]
  -[DKInkRendererCG teardown]
  -[DKInkRendererCG setDelegate:]
  -[DKInkRendererCG force]
  -[DKInkRendererCG delegate]
  -[DKInkRendererCG clear]
  -[DKInkRendererCG snapshotImage]
  -[DKInkRendererCG dealloc]
  -[DKInkRendererCG mode]
  -[DKInkRendererCG .cxx_destruct]
  -[DKInkRendererCG drawingScale]
  -[DKInkRendererCG setMode:]
  -[DKInkRendererCG _commonInit]
  -[DKInkRendererCG drawRect:]
  -[DKInkRendererCG display]
  -[DKInkRendererCG setDrawingScale:]
  -[DKInkRendererCG addPoint:]
  -[DKInkRendererCG initWithFrame:]
  -[DKInkRendererCG flush]
  -[DKInkRendererCG initWithCoder:]
  -[DKInkRendererCG setDrawingEnabled:]
  -[DKInkRendererCG drawingEnabled]
  -[DKInkRendererCG inkColor]
  -[DKInkRendererCG setInkColor:]
  -[DKInkRendererCG beginStroke]
  -[DKInkRendererCG endStroke]
  -[DKInkRendererCG removeLastStroke]
  -[DKInkRendererCG resetRendererState]
  -[DKInkRendererCG completeAnimationsImmediately]
  -[DKInkRendererCG scaleDrawingToFitCanvas]
  -[DKInkRendererCG setScaleDrawingToFitCanvas:]
  -[DKInkRendererCG supportsBleedAnimation]
  -[DKInkRendererCG maximumPointsForBleedAnimation]
  -[DKInkRendererCG invalidRect]
  -[DKInkRendererCG setInvalidRect:]
  -[DKInkRendererCG cachedInterpolatedBrushStrokes]
  -[DKInkRendererCG setCachedInterpolatedBrushStrokes:]
  -[DKInkRendererCG currentInterpolatedBrushStroke]
  -[DKInkRendererCG setCurrentInterpolatedBrushStroke:]


HWEncoding : NSObject
  // class methods
  +[HWEncoding encodeHandwriting:compress:]
  +[HWEncoding decodeHandwritingFromData:]
  +[HWEncoding protoMessageFromHandwriting:]
  +[HWEncoding encodeBrushStrokesAsData:inCanvasBounds:inStrokesFrame:]
  +[HWEncoding decodedBrushStrokesWithData:inCanvasBounds:inStrokesFrame:strokeDataFieldCount:count:]
  +[HWEncoding writeDataToDisk:withName:]
  +[HWEncoding protoDrawingFromDrawing:compress:]


DKPointSmoothing : NSObject
 @property  UIPointFIFO *strokeFIFO
 @property  UIBoxcarFilterPointFIFO *boxcarFIFO
 @property  UIQuadCurvePointFIFO *interpolatingFIFO
 @property  unsigned long width
 @property  float spacing
 @property  float unitScale
 @property  BOOL emitInterpolatedPoints
 @property  @? emissionHandler

  // class methods
  +[DKPointSmoothing interpolateFromPoint:toPoint:controlPoint:time:]
  +[DKPointSmoothing _interpolateFromPoint:toPoint:withControlPoint:atUnitScale:emissionHandler:]

  // instance methods
  -[DKPointSmoothing spacing]
  -[DKPointSmoothing setSpacing:]
  -[DKPointSmoothing width]
  -[DKPointSmoothing clear]
  -[DKPointSmoothing setWidth:]
  -[DKPointSmoothing .cxx_destruct]
  -[DKPointSmoothing addPoint:]
  -[DKPointSmoothing flush]
  -[DKPointSmoothing init]
  -[DKPointSmoothing emitPoint:]
  -[DKPointSmoothing emissionHandler]
  -[DKPointSmoothing setEmissionHandler:]
  -[DKPointSmoothing strokeFIFO]
  -[DKPointSmoothing setStrokeFIFO:]
  -[DKPointSmoothing interpolatingFIFO]
  -[DKPointSmoothing setInterpolatingFIFO:]
  -[DKPointSmoothing unitScale]
  -[DKPointSmoothing setUnitScale:]
  -[DKPointSmoothing emitInterpolatedPoints]
  -[DKPointSmoothing setEmitInterpolatedPoints:]
  -[DKPointSmoothing initWithWidth:spacing:]
  -[DKPointSmoothing boxcarFIFO]
  -[DKPointSmoothing setBoxcarFIFO:]


DKInkView : UIView <DKInkRendererDelegate>
 @property  UIView<DKInkRenderer> *renderer
 @property  DKDrawingStroke *currentBrushStroke
 @property  NSMutableArray *currentInterpolatedBrushStroke
 @property  NSMutableArray *cachedInterpolatedBrushStrokes
 @property  double currentWeight
 @property  unsigned long totalPointsAdded
 @property  {CGPoint=dd} strokeStartLocation
 @property  {CGPoint=dd} strokeLastLocation
 @property  double strokeStartTime
 @property  BOOL isAddingPointWithoutSmoothing
 @property  void lastVectorPoint
 @property  DKPointSmoothing *inputFIFO
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} aggregateInvalid
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} unionDrawingRect
 @property  unsigned long animationType
 @property  NSMutableArray *cachedInterpolatedAnimationPoints
 @property  NSMutableArray *cachedInterpolatedAnimationStrokes
 @property  NSMutableArray *computedAnimationFrames
 @property  double drawingScale
 @property  CADisplayLink *displayLink
 @property  NSUndoManager *strokeUndoManager
 @property  unsigned long mode
 @property  BOOL scaleDrawingToFitCanvas
 @property  BOOL allowInput
 @property  long long countOfCurrentStroke
 @property  BOOL canvasHasInk
 @property  BOOL trackingTouches
 @property  BOOL isRenderingPaused
 @property  <DKInkViewRenderDelegate> *renderPreviewDelegate
 @property  unsigned long renderPreviewMode
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} inkBounds
 @property  UIColor *strokeColor
 @property  double minPressure
 @property  double maxPressure
 @property  double minThickness
 @property  double maxThickness
 @property  DKDrawing *currentDrawing
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DKInkView gpuAvailable]
  +[DKInkView windowBackingScaleFactor:]
  +[DKInkView normalizeVectorPoint:]
  +[DKInkView normalizeVector:]
  +[DKInkView lengthOfVector:]

  // instance methods
  -[DKInkView displayLink]
  -[DKInkView willMoveToSuperview:]
  -[DKInkView teardown]
  -[DKInkView setDisplayLink:]
  -[DKInkView setFrame:]
  -[DKInkView clear]
  -[DKInkView dealloc]
  -[DKInkView mode]
  -[DKInkView setStrokeColor:]
  -[DKInkView .cxx_destruct]
  -[DKInkView renderer]
  -[DKInkView setRenderer:]
  -[DKInkView didMoveToSuperview]
  -[DKInkView drawingScale]
  -[DKInkView setMode:]
  -[DKInkView layoutSubviews]
  -[DKInkView _commonInit]
  -[DKInkView touchesMoved:withEvent:]
  -[DKInkView touchesBegan:withEvent:]
  -[DKInkView setDrawingScale:]
  -[DKInkView setHidden:]
  -[DKInkView strokeColor]
  -[DKInkView touchesEnded:withEvent:]
  -[DKInkView animationType]
  -[DKInkView setAnimationType:]
  -[DKInkView initWithFrame:]
  -[DKInkView _display]
  -[DKInkView willMoveToWindow:]
  -[DKInkView didMoveToWindow]
  -[DKInkView touchesCancelled:withEvent:]
  -[DKInkView initWithCoder:]
  -[DKInkView _stopDisplayLink]
  -[DKInkView _startDisplayLink]
  -[DKInkView setupRenderer]
  -[DKInkView trackingTouches]
  -[DKInkView currentDrawing]
  -[DKInkView setCurrentDrawing:]
  -[DKInkView minThickness]
  -[DKInkView setMinThickness:]
  -[DKInkView maxThickness]
  -[DKInkView setMaxThickness:]
  -[DKInkView inkDidRender:]
  -[DKInkView scaleDrawingToFitCanvas]
  -[DKInkView setScaleDrawingToFitCanvas:]
  -[DKInkView cachedInterpolatedBrushStrokes]
  -[DKInkView setCachedInterpolatedBrushStrokes:]
  -[DKInkView currentInterpolatedBrushStroke]
  -[DKInkView setCurrentInterpolatedBrushStroke:]
  -[DKInkView _undoLastStroke:]
  -[DKInkView inkDidCompleteRender:]
  -[DKInkView _deviceSupportsGL]
  -[DKInkView _addUninterpolatedPoints:controlPoint:count:flushing:]
  -[DKInkView _renderEmittedPoints:count:]
  -[DKInkView pauseRendering]
  -[DKInkView resumeRendering]
  -[DKInkView setCurrentDrawing:scaleDrawingToFitBounds:withAnimationType:animationCompletionHandler:]
  -[DKInkView snapshotRendererState]
  -[DKInkView inkBounds]
  -[DKInkView _notifyRenderDelegate]
  -[DKInkView _postTouchesBeganNotification:]
  -[DKInkView _postTouchesEndedNotification:]
  -[DKInkView interfaceScale]
  -[DKInkView countOfCurrentStroke]
  -[DKInkView canvasHasInk]
  -[DKInkView _setDrawingOnRenderer:]
  -[DKInkView _setDrawingOnRendererWithBleedAnimation:]
  -[DKInkView _setDrawingOnRendererWithReplayAnimation:]
  -[DKInkView _computeAnimationFramesFittingInMaxDuration:]
  -[DKInkView _replayAnimationTick:]
  -[DKInkView undoLastStroke]
  -[DKInkView startStroke:]
  -[DKInkView continueStroke:]
  -[DKInkView continueStrokeWithoutSmoothing:]
  -[DKInkView terminateStroke]
  -[DKInkView weightForValue:]
  -[DKInkView ak_forceAvailableForTouch:]
  -[DKInkView weightForTouch:]
  -[DKInkView _velocityForTouch:]
  -[DKInkView handleCoalescedTouches:forTouch:average:]
  -[DKInkView _vector4ForTouchSettingWeightAndVelocity:average:]
  -[DKInkView _updateVelocityWithTouch:average:]
  -[DKInkView minPressure]
  -[DKInkView setMinPressure:]
  -[DKInkView maxPressure]
  -[DKInkView setMaxPressure:]
  -[DKInkView currentBrushStroke]
  -[DKInkView setCurrentBrushStroke:]
  -[DKInkView currentWeight]
  -[DKInkView setCurrentWeight:]
  -[DKInkView totalPointsAdded]
  -[DKInkView setTotalPointsAdded:]
  -[DKInkView strokeStartLocation]
  -[DKInkView setStrokeStartLocation:]
  -[DKInkView strokeLastLocation]
  -[DKInkView setStrokeLastLocation:]
  -[DKInkView strokeStartTime]
  -[DKInkView setStrokeStartTime:]
  -[DKInkView isAddingPointWithoutSmoothing]
  -[DKInkView setIsAddingPointWithoutSmoothing:]
  -[DKInkView lastVectorPoint]
  -[DKInkView setLastVectorPoint:]
  -[DKInkView inputFIFO]
  -[DKInkView setInputFIFO:]
  -[DKInkView aggregateInvalid]
  -[DKInkView setAggregateInvalid:]
  -[DKInkView unionDrawingRect]
  -[DKInkView setUnionDrawingRect:]
  -[DKInkView cachedInterpolatedAnimationPoints]
  -[DKInkView setCachedInterpolatedAnimationPoints:]
  -[DKInkView cachedInterpolatedAnimationStrokes]
  -[DKInkView setCachedInterpolatedAnimationStrokes:]
  -[DKInkView computedAnimationFrames]
  -[DKInkView setComputedAnimationFrames:]
  -[DKInkView strokeUndoManager]
  -[DKInkView setStrokeUndoManager:]
  -[DKInkView allowInput]
  -[DKInkView setAllowInput:]
  -[DKInkView isRenderingPaused]
  -[DKInkView renderPreviewDelegate]
  -[DKInkView setRenderPreviewDelegate:]
  -[DKInkView renderPreviewMode]
  -[DKInkView setRenderPreviewMode:]


DKInkRendererGL : GLKView <DKOpenGLRendererDelegate, DKInkRenderer>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIColor *inkColor
 @property  <DKInkRendererDelegate> *delegate
 @property  BOOL scaleDrawingToFitCanvas
 @property  double drawingScale
 @property  unsigned long mode
 @property  BOOL drawingEnabled
 @property  BOOL supportsBleedAnimation
 @property  BOOL initialized
 @property  unsigned long maximumPointsForBleedAnimation

  // instance methods
  -[DKInkRendererGL initialized]
  -[DKInkRendererGL teardown]
  -[DKInkRendererGL setDelegate:]
  -[DKInkRendererGL force]
  -[DKInkRendererGL delegate]
  -[DKInkRendererGL clear]
  -[DKInkRendererGL snapshotImage]
  -[DKInkRendererGL dealloc]
  -[DKInkRendererGL mode]
  -[DKInkRendererGL .cxx_destruct]
  -[DKInkRendererGL drawingScale]
  -[DKInkRendererGL setMode:]
  -[DKInkRendererGL layoutSubviews]
  -[DKInkRendererGL _commonInit]
  -[DKInkRendererGL drawRect:]
  -[DKInkRendererGL display]
  -[DKInkRendererGL setDrawingScale:]
  -[DKInkRendererGL canBecomeFirstResponder]
  -[DKInkRendererGL addPoint:]
  -[DKInkRendererGL initWithFrame:]
  -[DKInkRendererGL traitCollectionDidChange:]
  -[DKInkRendererGL flush]
  -[DKInkRendererGL setDrawingEnabled:]
  -[DKInkRendererGL drawingEnabled]
  -[DKInkRendererGL inkColor]
  -[DKInkRendererGL setInkColor:]
  -[DKInkRendererGL beginStroke]
  -[DKInkRendererGL endStroke]
  -[DKInkRendererGL removeLastStroke]
  -[DKInkRendererGL resetRendererState]
  -[DKInkRendererGL completeAnimationsImmediately]
  -[DKInkRendererGL scaleDrawingToFitCanvas]
  -[DKInkRendererGL setScaleDrawingToFitCanvas:]
  -[DKInkRendererGL supportsBleedAnimation]
  -[DKInkRendererGL maximumPointsForBleedAnimation]
  -[DKInkRendererGL rendererDidFinishAnimatingDrawing:]
  -[DKInkRendererGL displayForcefully]
  -[DKInkRendererGL addPointsFromBrushPointQueueWithSegmentLength:]


DKDrawing : NSObject <NSCopying, NSSecureCoding>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} canvasBounds
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} strokesFrame
 @property  NSArray *strokes
 @property  long long totalPoints

  // class methods
  +[DKDrawing supportsSecureCoding]
  +[DKDrawing copyOfDrawing:toFitInBounds:]
  +[DKDrawing resizeDrawing:toFitInBounds:]

  // instance methods
  -[DKDrawing encodeWithCoder:]
  -[DKDrawing reset]
  -[DKDrawing .cxx_destruct]
  -[DKDrawing copyWithZone:]
  -[DKDrawing init]
  -[DKDrawing initWithCoder:]
  -[DKDrawing strokes]
  -[DKDrawing setStrokes:]
  -[DKDrawing setStrokesFrame:]
  -[DKDrawing addBrushStroke:]
  -[DKDrawing setCanvasBounds:]
  -[DKDrawing totalPoints]
  -[DKDrawing encodeBrushStrokesForArchiving]
  -[DKDrawing decodedBrushStrokesWithArchiverEncodedBrushStrokes:]
  -[DKDrawing mutableStrokes]
  -[DKDrawing removeLastBrushStroke]
  -[DKDrawing canvasBounds]
  -[DKDrawing strokesFrame]


DKDrawingStroke : NSObject <NSCopying>
 @property  NSMutableArray *strokePoints

  // class methods
  +[DKDrawingStroke drawingStrokeWithData:count:]

  // instance methods
  -[DKDrawingStroke .cxx_destruct]
  -[DKDrawingStroke copyWithZone:]
  -[DKDrawingStroke init]
  -[DKDrawingStroke strokePoints]
  -[DKDrawingStroke encodedBrushStroke]
  -[DKDrawingStroke _encodePointsDrawingPointData:]
  -[DKDrawingStroke _decodeDKEncodedDrawingPointDataAsArray:count:]


DKDrawingStrokePoint : NSObject <NSCopying>
 @property  {CGPoint=dd} location
 @property  double force
 @property  double velocity

  // instance methods
  -[DKDrawingStrokePoint setVelocity:]
  -[DKDrawingStrokePoint force]
  -[DKDrawingStrokePoint setForce:]
  -[DKDrawingStrokePoint setLocation:]
  -[DKDrawingStrokePoint velocity]
  -[DKDrawingStrokePoint copyWithZone:]
  -[DKDrawingStrokePoint location]
  -[DKDrawingStrokePoint init]


DKOpenGLRenderer : NSObject
 @property  <DKOpenGLRendererDelegate> *delegate
 @property  UIColor *inkColor
 @property  double lineWidthScale
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  {CGSize=dd} contentSize
 @property  BOOL undoEnabled
 @property  BOOL ignoreFirstUndoItem
 @property  double backingScale
 @property  BOOL drawingEnabled
 @property  BOOL allowWetComposite
 @property  long long numPages

  // instance methods
  -[DKOpenGLRenderer teardown]
  -[DKOpenGLRenderer setDelegate:]
  -[DKOpenGLRenderer delegate]
  -[DKOpenGLRenderer clear]
  -[DKOpenGLRenderer snapshotImage]
  -[DKOpenGLRenderer .cxx_construct]
  -[DKOpenGLRenderer dealloc]
  -[DKOpenGLRenderer .cxx_destruct]
  -[DKOpenGLRenderer update]
  -[DKOpenGLRenderer contentSize]
  -[DKOpenGLRenderer draw]
  -[DKOpenGLRenderer undo]
  -[DKOpenGLRenderer setBounds:]
  -[DKOpenGLRenderer bounds]
  -[DKOpenGLRenderer init]
  -[DKOpenGLRenderer setDrawingEnabled:]
  -[DKOpenGLRenderer drawingEnabled]
  -[DKOpenGLRenderer inkColor]
  -[DKOpenGLRenderer setInkColor:]
  -[DKOpenGLRenderer setUndoEnabled:]
  -[DKOpenGLRenderer isUndoEnabled]
  -[DKOpenGLRenderer setLineWidthScale:]
  -[DKOpenGLRenderer backingScale]
  -[DKOpenGLRenderer lineWidthScale]
  -[DKOpenGLRenderer setBackingScale:]
  -[DKOpenGLRenderer numPages]
  -[DKOpenGLRenderer setNumPages:]
  -[DKOpenGLRenderer resetRendererState]
  -[DKOpenGLRenderer initWithBounds:scale:bufferSize:sharedContext:]
  -[DKOpenGLRenderer initWithBounds:scale:]
  -[DKOpenGLRenderer initGL]
  -[DKOpenGLRenderer didResize]
  -[DKOpenGLRenderer destroyFrameBuffers]
  -[DKOpenGLRenderer initializeFrameBuffers]
  -[DKOpenGLRenderer setAllowWetComposite:]
  -[DKOpenGLRenderer appendVertexHistoryElement]
  -[DKOpenGLRenderer removeVertexHistoryElement]
  -[DKOpenGLRenderer addPoints:withSegmentLength:]
  -[DKOpenGLRenderer detectCollision::]
  -[DKOpenGLRenderer regionWithVertices:withInflationAmount:]
  -[DKOpenGLRenderer getVertexBounds]
  -[DKOpenGLRenderer updateWet]
  -[DKOpenGLRenderer updateDryCycleIncludingComposite:]
  -[DKOpenGLRenderer renderToWetPaintBufferWithRange:]
  -[DKOpenGLRenderer renderToDryPaintBuffer]
  -[DKOpenGLRenderer renderToComposite:]
  -[DKOpenGLRenderer updateDryForcefully]
  -[DKOpenGLRenderer drawComposite]
  -[DKOpenGLRenderer redrawEntireDrawingImmediatelyWithLayeredBlending:]
  -[DKOpenGLRenderer drawContiguousVertexStorageImmediatelyWithLayeredBlending:]
  -[DKOpenGLRenderer canvasIsEmpty]
  -[DKOpenGLRenderer clearWetPaintBuffer]
  -[DKOpenGLRenderer clearDryPaintBuffer]
  -[DKOpenGLRenderer clearComposite]
  -[DKOpenGLRenderer didCompleteStroke]
  -[DKOpenGLRenderer didBeginNewStroke]
  -[DKOpenGLRenderer updateVertexControllerWithDataRange:allowWet:]
  -[DKOpenGLRenderer updateVertexControllerWithData:range:allowWet:]
  -[DKOpenGLRenderer ignoreFirstUndoItem]
  -[DKOpenGLRenderer setIgnoreFirstUndoItem:]
  -[DKOpenGLRenderer allowWetComposite]


DKGLUtilities : NSObject
  // class methods
  +[DKGLUtilities initialize]
  +[DKGLUtilities pathForResource:ofType:]
  +[DKGLUtilities gpuAvailable]
  +[DKGLUtilities _postGLActiveNotification]
  +[DKGLUtilities _postGLInactiveNotification]
  +[DKGLUtilities compileShader:ofType:]
  +[DKGLUtilities createFBO:depthRB:texture:width:height:format:]
  +[DKGLUtilities deleteFBO:depthRB:texture:]
  +[DKGLUtilities createVBO:size:data:usage:]
  +[DKGLUtilities deleteVBO:]
  +[DKGLUtilities createTexture:withImageName:ofType:]
  +[DKGLUtilities createRepeatableTexture:withImageName:ofType:]
  +[DKGLUtilities deleteTexture:]
  +[DKGLUtilities drawQuadAtX:Y:width:height:]
  +[DKGLUtilities setProjectionMatrixForWidth:height:flipped:matrix:]
  +[DKGLUtilities translateMatrix:byX:Y:result:]
  +[DKGLUtilities snapshotImageOfFrameBufferWithID:bufferSize:displayScale:]
  +[DKGLUtilities createPlatformGLContext]
  +[DKGLUtilities createSharedGLContext]
  +[DKGLUtilities teardownSharedGLContext]
  +[DKGLUtilities createSharedRepeatableTexture:withImageName:ofType:]
  +[DKGLUtilities setCurrentGLContext:]
  +[DKGLUtilities setCurrentClearColor]


DKInkThumbnailRenderer : NSObject
  // class methods
  +[DKInkThumbnailRenderer sizeForDrawing:inSize:]
  +[DKInkThumbnailRenderer imageForDrawing:fittingInSize:color:highFidelity:]
  +[DKInkThumbnailRenderer imageForDrawing:fittingInSize:backingScale:color:highFidelity:]
  +[DKInkThumbnailRenderer scaleToFitDrawing:inSize:]
  +[DKInkThumbnailRenderer _imageForDrawingUsingCG:fittingInSize:displayScale:color:]
  +[DKInkThumbnailRenderer _interpolateDrawing:inSize:displayScale:ellipseHandler:]
  +[DKInkThumbnailRenderer _newStrokedInterpolatedPathWithDrawing:inSize:displayScale:]
  +[DKInkThumbnailRenderer _drawPath:atScale:inRect:inkColor:backgroundColor:inContext:]
  +[DKInkThumbnailRenderer _imageForDrawingUsingGL:fittingInSize:displayScale:color:]
  +[DKInkThumbnailRenderer _drawDebugPatternInGLContext:inSize:]


HWPDrawing : PBCodable <NSCopying>
 @property  BOOL hasVersion
 @property  unsigned int version
 @property  BOOL hasEncodedCanvasSize
 @property  NSData *encodedCanvasSize
 @property  BOOL hasEncodedStrokesFrame
 @property  NSData *encodedStrokesFrame
 @property  BOOL hasStrokesCount
 @property  unsigned int strokesCount
 @property  BOOL hasCompressionAlgorithm
 @property  int compressionAlgorithm
 @property  BOOL hasDecompressedLength
 @property  unsigned int decompressedLength
 @property  BOOL hasStrokeDataFieldCount
 @property  unsigned int strokeDataFieldCount
 @property  BOOL hasStrokes
 @property  NSData *strokes
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[HWPDrawing copyTo:]
  -[HWPDrawing .cxx_destruct]
  -[HWPDrawing mergeFrom:]
  -[HWPDrawing hasVersion]
  -[HWPDrawing version]
  -[HWPDrawing dictionaryRepresentation]
  -[HWPDrawing copyWithZone:]
  -[HWPDrawing setHasVersion:]
  -[HWPDrawing readFrom:]
  -[HWPDrawing setVersion:]
  -[HWPDrawing unknownFields]
  -[HWPDrawing writeTo:]
  -[HWPDrawing isEqual:]
  -[HWPDrawing strokes]
  -[HWPDrawing setStrokes:]
  -[HWPDrawing hasEncodedCanvasSize]
  -[HWPDrawing hasEncodedStrokesFrame]
  -[HWPDrawing setStrokesCount:]
  -[HWPDrawing setHasStrokesCount:]
  -[HWPDrawing hasStrokesCount]
  -[HWPDrawing compressionAlgorithm]
  -[HWPDrawing setCompressionAlgorithm:]
  -[HWPDrawing setHasCompressionAlgorithm:]
  -[HWPDrawing hasCompressionAlgorithm]
  -[HWPDrawing compressionAlgorithmAsString:]
  -[HWPDrawing StringAsCompressionAlgorithm:]
  -[HWPDrawing setDecompressedLength:]
  -[HWPDrawing setHasDecompressedLength:]
  -[HWPDrawing hasDecompressedLength]
  -[HWPDrawing strokeDataFieldCount]
  -[HWPDrawing setStrokeDataFieldCount:]
  -[HWPDrawing setHasStrokeDataFieldCount:]
  -[HWPDrawing hasStrokeDataFieldCount]
  -[HWPDrawing hasStrokes]
  -[HWPDrawing encodedCanvasSize]
  -[HWPDrawing setEncodedCanvasSize:]
  -[HWPDrawing encodedStrokesFrame]
  -[HWPDrawing setEncodedStrokesFrame:]
  -[HWPDrawing strokesCount]
  -[HWPDrawing decompressedLength]


HWHandwritingItem : NSObject <NSCopying, NSSecureCoding>
 @property  NSUUID *uuid
 @property  NSDate *creationDate
 @property  DKDrawing *drawing

  // class methods
  +[HWHandwritingItem supportsSecureCoding]

  // instance methods
  -[HWHandwritingItem encodeWithCoder:]
  -[HWHandwritingItem uuid]
  -[HWHandwritingItem .cxx_destruct]
  -[HWHandwritingItem setUuid:]
  -[HWHandwritingItem creationDate]
  -[HWHandwritingItem copyWithZone:]
  -[HWHandwritingItem setCreationDate:]
  -[HWHandwritingItem init]
  -[HWHandwritingItem initWithCoder:]
  -[HWHandwritingItem drawing]
  -[HWHandwritingItem initWithDrawing:]
  -[HWHandwritingItem setDrawing:]


HWPMessage : PBCodable <NSCopying>
 @property  BOOL hasVersion
 @property  unsigned int version
 @property  BOOL hasCreationDate
 @property  long long creationDate
 @property  BOOL hasIdentifier
 @property  NSString *identifier
 @property  BOOL hasDrawing
 @property  NSData *drawing
 @property  PBUnknownFields *unknownFields

  // instance methods
  -[HWPMessage identifier]
  -[HWPMessage copyTo:]
  -[HWPMessage hasIdentifier]
  -[HWPMessage .cxx_destruct]
  -[HWPMessage creationDate]
  -[HWPMessage mergeFrom:]
  -[HWPMessage hasVersion]
  -[HWPMessage version]
  -[HWPMessage setIdentifier:]
  -[HWPMessage dictionaryRepresentation]
  -[HWPMessage copyWithZone:]
  -[HWPMessage setHasVersion:]
  -[HWPMessage setCreationDate:]
  -[HWPMessage readFrom:]
  -[HWPMessage setVersion:]
  -[HWPMessage unknownFields]
  -[HWPMessage writeTo:]
  -[HWPMessage isEqual:]
  -[HWPMessage setHasCreationDate:]
  -[HWPMessage hasCreationDate]
  -[HWPMessage drawing]
  -[HWPMessage setDrawing:]
  -[HWPMessage hasDrawing]


NSValue(DKRenderPointAdditions)
	// class methods
	+[NSValue(DKRenderPointAdditions) dk_valueWithRenderPoint:]

	// instance methods
	-[NSValue(DKRenderPointAdditions) dk_renderPointValue]

UIDevice(DKExtensions)
	// instance methods
	-[UIDevice(DKExtensions) dk_deviceSupportsGL]

01 00 0800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CADisplayLink 
01 00 0400 /System/Library/Frameworks/OpenGLES.framework/OpenGLES: EAGLContext 
01 00 0300 /System/Library/Frameworks/GLKit.framework/GLKit: GLKTextureLoader 
01 00 0300 /System/Library/Frameworks/GLKit.framework/GLKit: GLKView 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotification 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0a00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSRunLoop 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0d00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSUndoManager 
01 00 0600 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 0200 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBUnknownFields 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0500 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: UIBoxcarFilterPointFIFO 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0500 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: UIPointFIFO 
01 00 0500 /System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation: UIQuadCurvePointFIFO 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UITraitCollection 
01 00 0900 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
