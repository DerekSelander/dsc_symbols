|| __DATA.__common ___startTime
|| __DATA.__data _PLTiledLayerConversionQueueSpecific
|| __DATA.__data _PLTiledLayerDecodeQueueSpecific
|| __DATA.__data _PLWallpaperSaveMode
|| __DATA.__data ___shouldDrawShadows
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCGPathCache._pathCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCacheEntry._entry
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCacheEntry._object
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._bottomShineView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._controlsAreVisible
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._cropRect
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._cropRectIsVisible
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._cropView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._customToolbar
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._hud
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._mode
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._offsetStatusBar
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._okButton
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._overlayContainerView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._previewMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._shadowView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._showsCropRegion
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._statusBarHeight
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._titleLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._tookPhoto
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._topShineView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._wildcatPickerBottomView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlay._wildcatPickerTopView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLCropOverlayCropView._cropRect
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._bodyData
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._clientCallback
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._clientContext
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._currentIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._currentLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._currentOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._dataArray
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._dataCount
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._dataLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._dataOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._openEventSent
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._progressDelegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._rls
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLDataArrayInputStream._streamStatus
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._anchorPoint
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._centerOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._currentAngle
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._exImageFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._imageID
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._imageRotationAngle
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._imageView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._initialExpandingFrame
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._originalAngle
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._originalBounds
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._originalSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._originalWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._photo
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._pinchAngle
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._pinchScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableImageView._pinchWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._collapsingCompletionHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._contractedFrame
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._expandFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._expandedFrame
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._expansionCompletionHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._expansionFraction
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._leftTouchIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._leftTouchLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._pinchVelocity
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._previousLeftLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._previousRightLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._rightTouchIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._rightTouchLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLExpandableView._trackingTimeInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageScrollView._adjustZoomScaleAfterRotation
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._aspectRatio
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._borderView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._borderViewIsVisible
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._bottomRightAccessoryView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._drawsBorder
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._edgeAntialiasingEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._lastBorderAlphaTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._lastShadowAlphaTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._leftAccessoryView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._leftAccessoryViewOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._placeholderView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._shadowEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._suppressShadowDrawing
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._textBadge
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._transitionProgress
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLImageView._videoView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._allowZoomToFill
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._autoZooming
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._avalancheBadgeShouldBeHidden
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._badgeShouldBeVisible
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._centerContentVertically
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._clientIsTemporarilyWallpaper
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._cropOverlayRect
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._cropRect
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._cropRectBeforeDragging
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._cropRectZoomScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._currentTileDownloadFinished
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._didEndZoomingBlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._didRequestFullSizeImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._dispatchStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._dispatchTimeElapsed
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._dispatchTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._doubleTapGestureRecognizer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._doubleTapZoomScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._force1XCroppedImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._forceNativeScreenScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._gradientView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._hasNotedZoom
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._ignoreZoomChange
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._image
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._imageIsThumbnail
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._imageOrientation
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._imageSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._imageView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._isTVOut
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._lockedUnderCropOverlay
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._minZoomScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._mode
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._modelPhoto
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._orientationDelegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._pendingImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._placeholderView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._reviewCheckmarkImageView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._scrollView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._singleTapGestureRecognizer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._tileDelegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._tileFrame
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._tileParentIsPageController
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._unscaledImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._useLessThanMinZoomForZoomedOutTest
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._useZoomScaleForCropRect
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._userDidAdjustWallpaper
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._userDidZoom
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._videoView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._viewDidAppear
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._viewWillAppear
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._wallpaperLandscapeZoomScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._wallpaperPortraitZoomScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._zoomGesturesEnabled
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._zoomScaleBeforeZooming
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._zoomToFillInsteadOfToFit
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._zoomToFillScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotoTileViewController._zooming
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotosDefaults._musicCollection
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotosDefaults._shouldPlayMusic
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotosDefaults._summarizeMomentSections
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPhotosDefaults._transition
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishAlbum._title
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._allowsHDOver3GUpload
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._approximateHDUploadSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._approximateSDUploadSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._changeRate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._completionSelector
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._currentValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._deleteAfterPublishing
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._enableHDUpload
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._endTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._estimatedTimeRemaining
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._maxValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._mediaData
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._mediaIsHDVideo
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._mediaPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._mimeType
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._needsRemaking
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._needsTrimming
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._normalizedCurrentValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._normalizedMaxValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._ownerIsCamera
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._percentComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._progressMultiplier
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._publishing
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._remaker
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._remakerMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._remaking
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._remakingPercentComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._remakingWasCancelled
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._selectedOption
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._shouldCancelPublish
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._snapshotTimes
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._snapshotValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._startTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLPublishingAgent._userInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLTVOutWindow._backgroundView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLTVOutWindow._videoView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLTile._decodedSurface
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLTile._imageRect
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLTile._tileId
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLTile._visible
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditImageViewController._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditImageViewController._mode
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditImageViewController._saveOptions
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditVideoViewController._canCreateMetadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditVideoViewController._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditVideoViewController._imagePicker
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditVideoViewController._navItem
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditVideoViewController._options
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditVideoViewController._parentInPopoverException
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIEditVideoViewController._viewClass
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._allowEditing
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._cropOverlay
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._cropRect
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._image
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._imageRef
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._imageTile
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._isDisappearing
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._isVideo
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._newStatusBarStyle
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._photo
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._previousStatusBarStyle
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._progressView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._remaker
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._remaking
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._statusBarWasHidden
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._videoURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLUIImageViewController._videoView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoEditingOverlayView._bodyLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoEditingOverlayView._titleLabel
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoRemaker._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoRemaker._exportSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoRemaker._mode
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoRemaker._percentComplete
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoRemaker._progressTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoRemaker._progressView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoRemaker._trimEndTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoRemaker._trimStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoRemaker._trimmedPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._airplayExportSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._bakedLandscapeThumbnails
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._bakedPortraitThumbnails
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._cachedCurrentPlaybackTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._cachedThumbnails
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._canCreateMetadata
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._canEdit
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._createPreviewPosterFrame
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._deleteOriginalFile
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._detailThumbnailRequestTimestamps
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._didLayout
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._disableEditAfterTrim
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._duration
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._editing
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._exportSession
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._imageGenerators
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._imageTile
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._isAirPlay
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._isMoviePlayerActive
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._isTrimming
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._landscapeSummaryThumbnailTimestamps
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._lastActualValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._lastScrubbedValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._loadMediaImmediately
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._loadScrubberThumbnails
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._maximumTrimLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._moviePlayer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._moviePlayerDidBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._moviePlayerIsReady
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._moviePlayerIsReadyForDisplay
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._needsReloadScrubberThumbnails
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._passthroughTrimming
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._pathToOriginalVideo
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._playFromBeginning
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._playbackDidBegin
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._playing
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._portraitSummaryThumbnailTimestamps
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._posterFrameImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._posterFrameView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._preparedMoviePlayer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._preparingMoviePlayer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._progress
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._remakerEndTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._remakerStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._remakingFailed
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._scaleMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._scrubber
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._scrubberBackgroundView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._scrubberIsSubview
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._scrubberTitleView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._scrubberUpdateTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._scrubberWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._scrubbing
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._scrubbingToRight
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._shadowSpinner
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._showScrubberWhenMovieIsReady
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._showingOverlay
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._showingScrubber
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._showsPlayButton
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._showsScrubber
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._slalomRegionEditor
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._snapshotImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._spinner
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._summaryThumbnailRequestTimestamps
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._thumbnailOptionsDict
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._thumbnailReqQueue
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._thumbnailReqlock
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._thumbnailSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._trimMessageView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._trimProgressStack
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._trimProgressTimer
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._trimmedPath
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._trimmedVideoClip
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._useLandscapeCache
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._videoCameraImage
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._videoIsLandscape
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._videoOverlayBackgroundView
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._videoOverlayPlayButton
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._videoPathAfterTrim
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._videoStreamingStartTime
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._videoURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._viewWillAppear
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._wasPlayingBeforeScrub
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLVideoView._wasTrimmedInPlace
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLWallpaperImageViewController._didSetImageMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLWallpaperImageViewController._navItem
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLWallpaperImageViewController._navigationToolbarItems
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLWallpaperImageViewController._saveWallpaperData
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLWallpaperImageViewController._wallpaperMode
|| __DATA.__objc_ivar _OBJC_IVAR_$_PLWallpaperImageViewController._wallpaperTitle
|| __DATA_CONST.__const _PLCommentsFontCacheDidChangeNotification
|| __DATA_CONST.__const _PLPhotosDefaultsDidChangeNotification
|| __DATA_CONST.__const _PLPublishingAgentDidCancelNotification
|| __DATA_CONST.__const _PLPublishingAgentFinishedPublishingNotification
|| __DATA_CONST.__const _PLPublishingAgentFinishedRemakingNotification
|| __DATA_CONST.__const _PLPublishingAgentRemakingDidSucceedKey
|| __DATA_CONST.__const _PLPublishingAgentStartedPublishingNotification
|| __DATA_CONST.__const _PLPublishingAgentStartedRemakingNotification
|| __DATA_CONST.__const _PLPublishingAgentsForcedCancelNotification
|| __DATA_CONST.__const _PLVideoOverlayBackgroundMaskImageName
|| __DATA_CONST.__const _PLVideoOverlayGlyphMaskImageName
|| __DATA_CONST.__const _PhotosAppSelectedContentMode
|| __DATA_CONST.__const _PhotosMusicFromIPhoto
|| __DATA_CONST.__const _PhotosMusicNowPlaying
|| __DATA_CONST.__const _PhotosMusicOff
|| __DATA_CONST.__const _kFigJPEGIOSurfacePoolOptionKey_HighWaterBufferCount
|| __DATA_CONST.__const _kFigJPEGIOSurfacePoolOptionKey_HighWaterBytes
|| __DATA_CONST.__const _kFigJPEGIOSurfacePoolOptionKey_IdleTimeoutMilliseconds
|| __DATA_CONST.__const _kFigJPEGIOSurfacePoolOptionKey_LowWaterBufferCount
|| __DATA_CONST.__const _kFigJPEGIOSurfacePoolOptionKey_LowWaterBytes
|| __DATA_CONST.__const _kFigJPEGIOSurfacePoolOptionKey_MinBytes
|| __DATA_CONST.__const _kFigJPEGIOSurfacePoolOptionKey_MinCount
|| __DATA_CONST.__const _kFigJPEGIOSurfacePoolOptionKey_Sizes
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PHImageManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PHResourceDownloadSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PHRootSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PHSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAVPlayerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAssetContainerDataSource
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLAssetImageGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCAAnimationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCGPathCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCacheEntry
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCommentsFontCache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLContactPhotoOverlay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCropOverlay
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCropOverlayBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCropOverlayCropView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCropOverlayPreviewBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLCropOverlayWallpaperBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLDataArrayInputStream
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLExpandableImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLExpandableView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLFlatVideoOverlayButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLHighFidelityVideoOverlayButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLImageScrollView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLImageView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLMagicWallpaperImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLMessageUIProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLMoviePlayerController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLMoviePlayerControllerManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLMoviePlayerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPhotoTileCloudPlaceholderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPhotoTilePlaceholderView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPhotoTileViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPhotosApplication
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPhotosDefaults
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLProgressArcLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLProgressHUD
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLProgressView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPublishAlbum
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPublishingAgent
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLPublishingMedia
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLRoundProgressView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLSlalomRegionEditor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLStaticWallpaperImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTVOutWindow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTile
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTileContainerView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLTiledLayer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLUIEditImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLUIEditVideoViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLUIImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLUIPrivacyViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLUIView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLVideoEditingOverlayView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLVideoPosterFrameView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLVideoRemaker
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLVideoView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLWallpaperButton
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLWallpaperImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PLiPhotoMigrationSupport
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PHImageManagerSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PHResourceDownloadSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PHRootSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PHSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAVPlayerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAssetContainerDataSource
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLAssetImageGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCAAnimationDelegate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCGPathCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCacheEntry
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCommentsFontCache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLContactPhotoOverlay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCropOverlay
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCropOverlayBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCropOverlayCropView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCropOverlayPreviewBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLCropOverlayWallpaperBottomBar
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLDataArrayInputStream
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLExpandableImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLExpandableView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLFlatVideoOverlayButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLHighFidelityVideoOverlayButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLImageScrollView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLImageView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLMagicWallpaperImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLMessageUIProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLMoviePlayerController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLMoviePlayerControllerManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLMoviePlayerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPhotoTileCloudPlaceholderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPhotoTilePlaceholderView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPhotoTileViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPhotosApplication
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPhotosDefaults
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLProgressArcLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLProgressHUD
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLProgressView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPublishAlbum
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPublishingAgent
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLPublishingMedia
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLRoundProgressView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLSlalomRegionEditor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLStaticWallpaperImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTVOutWindow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTile
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTileContainerView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLTiledLayer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLUIEditImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLUIEditVideoViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLUIImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLUIPrivacyViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLUIView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLVideoEditingOverlayView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLVideoPosterFrameView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLVideoRemaker
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLVideoView
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLWallpaperButton
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLWallpaperImageViewController
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PLiPhotoMigrationSupport
|| __TEXT.__const _PLVideoOverlayDefaultGlyphAlpha
|| __TEXT.__const _PLVideoOverlayFlatBackgroundAlpha
|| __TEXT.__const _PLVideoOverlayFlatBackgroundWhite
|| __TEXT.__const _PLVideoOverlayHighlightedGlyphAlpha
|| __TEXT.__const _PLVideo_spinnerDelay
|| __TEXT.__const _kMessageOverlayBottomGap
|| __TEXT.__text _AVAssetExportPresetForRemakerMode
|| __TEXT.__text _FigJPEGIOSurfaceImagePoolCreate
|| __TEXT.__text _FigJPEGIOSurfaceImagePoolCreateIOSurface
|| __TEXT.__text _FigJPEGIOSurfaceMemoryPoolCreate
|| __TEXT.__text _FigJPEGIOSurfaceMemoryPoolCreateIOSurface
|| __TEXT.__text _FigJPEGIOSurfacePoolFlush
|| __TEXT.__text _FigJPEGIOSurfacePoolGetTypeID
|| __TEXT.__text _MetaStateFromState
|| __TEXT.__text _PLCanSaveVideoToCameraRoll
|| __TEXT.__text _PLCleanupForStoreDemoMode
|| __TEXT.__text _PLHasCompletedMomentAnalysis
|| __TEXT.__text _PLHasCompletedRestorePostProcessing
|| __TEXT.__text _PLIntegralRect
|| __TEXT.__text _PLNotifyImagePickerOfImageAvailability
|| __TEXT.__text _PLNotifyImagePickerOfMediaAvailability
|| __TEXT.__text _PLNotifyImagePickerOfMultipleMediaAvailability
|| __TEXT.__text _PLNotifyImagePickerOfVideoAvailability
|| __TEXT.__text _PLPageSize
|| __TEXT.__text _PLPhotoPickerDictionariesFromMultipleMediaItems
|| __TEXT.__text _PLPhotoPickerDictionaryFromImage
|| __TEXT.__text _PLPhotoPickerDictionaryFromMedia
|| __TEXT.__text _PLPhotoPickerDictionaryFromVideo
|| __TEXT.__text _PLSaveImageDataToCameraRoll
|| __TEXT.__text _PLSaveImageToCameraRoll
|| __TEXT.__text _PLSaveImageToCameraRollWithJPEGData
|| __TEXT.__text _PLSaveImageToCameraRollWithTypeAndExtension
|| __TEXT.__text _PLSaveVideoToCameraRoll
|| __TEXT.__text _PLTransformForImageOrientationAndSize
|| __TEXT.__text _PLVideoRemakerModeForAVAssetExportPreset
|| __TEXT.__text _StringFromExpandableViewState
|| __TEXT.__text __PLIncrementSharedCountForAsset
|| __TEXT.__text __PLIncrementSharedCountForAssets
__ AVFoundation: _AVAssetExportPreset640x480
__ AVFoundation: _AVAssetExportPresetLowQuality
__ AVFoundation: _AVAssetExportPresetMMS
__ AVFoundation: _AVAssetExportPresetMail
__ AVFoundation: _AVAssetExportPresetMediumQuality
__ AVFoundation: _AVAssetExportPresetPassthrough
__ AVFoundation: _AVAssetExportPresetYouTube
__ AVFoundation: _AVAssetExportPresetYouTubeHD
__ AVFoundation: _AVAssetImageGeneratorApertureModeCleanAperture
__ AVFoundation: _AVAudioSessionCategoryPlayback
__ AVFoundation: _AVFileType3GPP
__ AVFoundation: _AVFileType3GPP2
__ AVFoundation: _AVFileTypeAIFF
__ AVFoundation: _AVFileTypeAMR
__ AVFoundation: _AVFileTypeAppleM4A
__ AVFoundation: _AVFileTypeAppleM4V
__ AVFoundation: _AVFileTypeMPEG4
__ AVFoundation: _AVFileTypeQuickTimeMovie
__ AVFoundation: _AVFileTypeWAVE
__ AVFoundation: _AVLayerVideoGravityResize
__ AVFoundation: _AVLayerVideoGravityResizeAspect
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _AVPlayerItemDidPlayToEndTimeNotification
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeErrorKey
__ AVFoundation: _AVPlayerItemFailedToPlayToEndTimeNotification
__ AVFoundation: _AVURLAssetCacheKey
__ AVFoundation: _AVURLAssetNetworkProbeRequestDisabledKey
__ AVFoundation: _AVURLAssetReadAheadOnByteStreamCreationEnabledKey
__ AVFoundation: _AVURLAssetShouldMatchDataInCacheByURLWithoutQueryComponentKey
__ AVFoundation: _OBJC_CLASS_$_AVAsset
__ AVFoundation: _OBJC_CLASS_$_AVAssetExportSession
__ AVFoundation: _OBJC_CLASS_$_AVAssetImageGenerator
__ AVFoundation: _OBJC_CLASS_$_AVAudioSession
__ AVFoundation: _OBJC_CLASS_$_AVPlayer
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVPlayerLayer
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AppSupport: _CPNetworkObserverReachable
__ AppSupport: _CPNetworkObserverReachableFlags
__ AppSupport: _OBJC_CLASS_$_CPNetworkObserver
__ AppleJPEG: _applejpeg_decode_build_index_table
__ AppleJPEG: _applejpeg_decode_clone_session
__ AppleJPEG: _applejpeg_decode_create
__ AppleJPEG: _applejpeg_decode_destroy
__ AppleJPEG: _applejpeg_decode_get_image_info
__ AppleJPEG: _applejpeg_decode_image_all
__ AppleJPEG: _applejpeg_decode_open_mem
__ AppleJPEG: _applejpeg_decode_options_init
__ AppleJPEG: _applejpeg_decode_set_options
__ AssetsLibraryServices: _OBJC_CLASS_$_PLFormatChooser
__ AssetsLibraryServices: _OBJC_CLASS_$_PLImportFileManager
__ AssetsLibraryServices: _OBJC_CLASS_$_PLNonBindingAssetsdClient
__ AssetsLibraryServices: _OBJC_CLASS_$_PLPhotoLibraryPathManager
__ AssetsLibraryServices: _OBJC_CLASS_$_PLPrivacy
__ AssetsLibraryServices: _PLDebugEnableCoreDataMultithreadedAsserts
__ AssetsLibraryServices: _PLDoesIndicatorFileExistAtPath
__ AssetsLibraryServices: _PLIsAssetsd
__ AssetsLibraryServices: _PLIsCamera
__ AssetsLibraryServices: _PLIsInternalDevice
__ AssetsLibraryServices: _PLIsSpringboard
__ AssetsLibraryServices: _PLIsTallScreen
__ AssetsLibraryServices: _PLLocalizedFrameworkString
__ AssetsLibraryServices: _PLLogPhotoPicker
__ AssetsLibraryServices: _PLMakeIndicatorFileExistAtPath
__ AssetsLibraryServices: _PLPhotoLibraryFrameworkBundle
__ AssetsLibraryServices: _PLPhotosErrorDomain
__ AssetsLibraryServices: _PLPhysicalScreenScale
__ AssetsLibraryServices: ___PLGenericLogDomain
__ AssetsLibraryServices: ___PLGenericOSLog
__ AssetsLibraryServices: ___PLGenericOnceToken
__ AssetsLibraryServices: ___PLGenericPrefix
__ AssetsLibraryServices: ___PLPhotoKitLogDomain
__ AssetsLibraryServices: ___PLPhotoKitOSLog
__ AssetsLibraryServices: ___PLPhotoKitOnceToken
__ AssetsLibraryServices: ___PLPhotoKitPrefix
__ AssetsLibraryServices: ___PLPhotoSharingLogDomain
__ AssetsLibraryServices: ___PLPhotoSharingOSLog
__ AssetsLibraryServices: ___PLPhotoSharingOnceToken
__ AssetsLibraryServices: ___PLPhotoSharingPrefix
__ AssetsLibraryServices: _pl_dispatch_after
__ AssetsLibraryServices: _pl_dispatch_async
__ AssetsLibraryServices: _pl_dispatch_once
__ AssetsLibraryServices: _pl_dispatch_source_set_event_handler
__ AssetsLibraryServices: _pl_dispatch_sync
__ AssetsLibraryServices: _pl_notify_register_dispatch
__ Contacts: _CNContactEmailAddressesKey
__ Contacts: _OBJC_CLASS_$_CNContact
__ Contacts: _OBJC_CLASS_$_CNContactFormatter
__ ContactsUI: _OBJC_CLASS_$_CNContactViewController
__ CoreFoundation: _CFAbsoluteTimeGetCurrent
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDataGetTypeID
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFGetAllocator
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFNotificationCenterAddObserver
__ CoreFoundation: _CFNotificationCenterGetDarwinNotifyCenter
__ CoreFoundation: _CFNotificationCenterRemoveEveryObserver
__ CoreFoundation: _CFNumberCreate
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopRemoveSource
__ CoreFoundation: _CFRunLoopSourceCreate
__ CoreFoundation: _CFRunLoopSourceInvalidate
__ CoreFoundation: _CFRunLoopSourceSignal
__ CoreFoundation: _CFStringAppendFormat
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringGetDoubleValue
__ CoreFoundation: _CFStringGetIntValue
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRunLoopCommonModes
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSInputStream
__ CoreFoundation: __CFRuntimeCreateInstance
__ CoreFoundation: __CFRuntimeRegisterClass
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformIsIdentity
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformMakeTranslation
__ CoreGraphics: _CGAffineTransformRotate
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGAffineTransformTranslate
__ CoreGraphics: _CGBitmapContextCreate
__ CoreGraphics: _CGBitmapContextCreateImage
__ CoreGraphics: _CGColorConversionInfoCreateFromList
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorRelease
__ CoreGraphics: _CGColorSpaceCopyICCData
__ CoreGraphics: _CGColorSpaceCopyPropertyList
__ CoreGraphics: _CGColorSpaceCreateDeviceRGB
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceEqualToColorSpace
__ CoreGraphics: _CGColorSpaceRelease
__ CoreGraphics: _CGColorSpaceRetain
__ CoreGraphics: _CGContextAddArc
__ CoreGraphics: _CGContextAddCurveToPoint
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextAddRect
__ CoreGraphics: _CGContextEOClip
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextGetBaseCTM
__ CoreGraphics: _CGContextGetCTM
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextScaleCTM
__ CoreGraphics: _CGContextSetBaseCTM
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetGrayFillColor
__ CoreGraphics: _CGContextSetLineCap
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetStrokeColorWithColor
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGContextTranslateCTM
__ CoreGraphics: _CGDataProviderCreateWithURL
__ CoreGraphics: _CGDataProviderRelease
__ CoreGraphics: _CGImageCreateWithImageInRect
__ CoreGraphics: _CGImageCreateWithPNGDataProvider
__ CoreGraphics: _CGImageGetColorSpace
__ CoreGraphics: _CGImageGetHeight
__ CoreGraphics: _CGImageGetWidth
__ CoreGraphics: _CGImageRelease
__ CoreGraphics: _CGImageRetain
__ CoreGraphics: _CGPathAddArc
__ CoreGraphics: _CGPathAddRect
__ CoreGraphics: _CGPathCloseSubpath
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPathRetain
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectContainsRect
__ CoreGraphics: _CGRectDivide
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectInset
__ CoreGraphics: _CGRectIntegral
__ CoreGraphics: _CGRectIntersection
__ CoreGraphics: _CGRectIntersectsRect
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectNull
__ CoreGraphics: _CGRectOffset
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreGraphics: _kCGColorTransformBlackPointCompensation
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreLocation: _kCLLocationCoordinate2DInvalid
__ CoreMedia: _CMTimeConvertScale
__ CoreMedia: _CMTimeGetSeconds
__ CoreMedia: _CMTimeMakeWithSeconds
__ CoreMedia: _CMTimeRangeEqual
__ CoreMedia: _CMTimeRangeFromTimeToTime
__ CoreMedia: _FigAtomicIncrement32
__ CoreMedia: _FigGetUpTime
__ CoreMedia: _FigNanosecondsToHostTime
__ CoreMedia: _FigSignalErrorAt2
__ CoreMedia: _FigSimpleMutexCreate
__ CoreMedia: _FigSimpleMutexDestroy
__ CoreMedia: _FigSimpleMutexLock
__ CoreMedia: _FigSimpleMutexUnlock
__ CoreMedia: _FigThreadGetMaxLogicalCoreCount
__ CoreMedia: _FigThreadRunOnce
__ CoreMedia: _fig_log_emit
__ CoreMedia: _fig_note_initialize_work
__ CoreMedia: _kCMTimePositiveInfinity
__ CoreMedia: _kCMTimeZero
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypeJPEG
__ CoreServices: _kUTTypeLivePhoto
__ CoreServices: _kUTTypeMovie
__ DCIMServices: _PLCreateCGImageFromIOSurface
__ DCIMServices: _PLCreateCGImageFromIOSurfaceBackedUIImage
__ DCIMServices: _PLCreateCroppedImageFromImage
__ DCIMServices: _PLDeviceOrientationFromImageOrientation
__ DCIMServices: _PLExifOrientationFromImageOrientation
__ DCIMServices: _PLImageOrientationFromDeviceOrientation
__ DCIMServices: _PLImageOrientationFromExifOrientation
__ DCIMServices: _kPLAssetsSaverExtension
__ DCIMServices: _kPLAssetsSaverType
__ DCIMServices: _kPLImageWriterAssetSubtype
__ DCIMServices: _kPLImageWriterAssetWriterID
__ DCIMServices: _kPLImageWriterCreationDateKey
__ DCIMServices: _kPLImageWriterDidSetLocationKey
__ DCIMServices: _kPLImageWriterOrientationKey
__ DCIMServices: _kPLImageWriterPhotoStreamImageForPublishing
__ DCIMServices: _kPLPhotoSavingCropRect
__ DCIMServices: _kPLPhotoSavingCroppedImage
__ DCIMServices: _kPLPhotoSavingCroppedImageData
__ DCIMServices: _kPLPhotoSavingFullScreenImageData
__ DCIMServices: _kPLPhotoSavingMetadata
__ DCIMServices: _kPLPhotoSavingOriginalImageData
__ DCIMServices: _kPLRequiresSaveOnlyAuthorization
__ Foundation: _NSClassFromString
__ Foundation: _NSFileCreationDate
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSGetUncaughtExceptionHandler
__ Foundation: _NSKeyValueChangeNewKey
__ Foundation: _NSKeyValueChangeOldKey
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSSetUncaughtExceptionHandler
__ Foundation: _NSStringFromClass
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSIndexPath
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSNumberFormatter
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: __NSDictionaryOfVariableBindings
__ IOSurface: _IOSurfaceCreate
__ IOSurface: _IOSurfaceDecrementUseCount
__ IOSurface: _IOSurfaceGetAllocSize
__ IOSurface: _IOSurfaceGetBaseAddress
__ IOSurface: _IOSurfaceGetBaseAddressOfPlane
__ IOSurface: _IOSurfaceGetBytesPerRow
__ IOSurface: _IOSurfaceGetBytesPerRowOfPlane
__ IOSurface: _IOSurfaceGetHeight
__ IOSurface: _IOSurfaceGetPixelFormat
__ IOSurface: _IOSurfaceGetPlaneCount
__ IOSurface: _IOSurfaceGetWidth
__ IOSurface: _IOSurfaceIncrementUseCount
__ IOSurface: _IOSurfaceIsInUse
__ IOSurface: _IOSurfaceLock
__ IOSurface: _IOSurfaceSetValue
__ IOSurface: _IOSurfaceUnlock
__ IOSurface: _kIOSurfaceAllocSize
__ IOSurface: _kIOSurfaceBytesPerElement
__ IOSurface: _kIOSurfaceBytesPerRow
__ IOSurface: _kIOSurfaceCacheMode
__ IOSurface: _kIOSurfaceColorSpace
__ IOSurface: _kIOSurfaceElementHeight
__ IOSurface: _kIOSurfaceElementWidth
__ IOSurface: _kIOSurfaceHeight
__ IOSurface: _kIOSurfaceMemoryRegion
__ IOSurface: _kIOSurfaceOffset
__ IOSurface: _kIOSurfacePixelFormat
__ IOSurface: _kIOSurfacePlaneBytesPerElement
__ IOSurface: _kIOSurfacePlaneBytesPerRow
__ IOSurface: _kIOSurfacePlaneHeight
__ IOSurface: _kIOSurfacePlaneInfo
__ IOSurface: _kIOSurfacePlaneOffset
__ IOSurface: _kIOSurfacePlaneSize
__ IOSurface: _kIOSurfacePlaneWidth
__ IOSurface: _kIOSurfaceWidth
__ ImageIO: _CGImageCreateEXIFJPEGData
__ ImageIO: _CGImageDestinationAddImage
__ ImageIO: _CGImageDestinationCreateWithURL
__ ImageIO: _CGImageDestinationFinalize
__ ImageIO: _CGImageSourceCreateImageAtIndex
__ ImageIO: _CGImageSourceCreateWithData
__ ImageIO: _kCGImagePropertyOrientation
__ MediaPlayer: _MPTVOutCapabledAndPreferred
__ MediaPlayer: _MPTVOutScreen
__ MediaPlayer: _OBJC_CLASS_$_MPAVItem
__ MediaStream: _OBJC_CLASS_$_MSASConnection
__ MediaStream: _OBJC_CLASS_$_MSConnection
__ MediaStream: _kMSIdleStateDidChangeNotification
__ MediaToolbox: _OBJC_CLASS_$_FigPhotoTiledLayer
__ PhotoLibraryServices: _OBJC_CLASS_$_PLAssetsSaver
__ PhotoLibraryServices: _OBJC_CLASS_$_PLManagedAsset
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoBakedThumbnails
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoLibrary
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoLibraryBundleController
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoSharingHelper
__ PhotoLibraryServices: _OBJC_CLASS_$_PLPhotoStreamsHelper
__ PhotoLibraryServices: _OBJC_CLASS_$_PLProgressStack
__ PhotoLibraryServices: _OBJC_CLASS_$_PLSlalomUtilities
__ PhotoLibraryServices: _OBJC_CLASS_$_PLUserActivityDaemonJob
__ PhotoLibraryServices: _PLCancelVideoRemaking
__ PhotoLibraryServices: _PLCreateImageFromDataWithFormat
__ PhotoLibraryServices: _PLDispatch_async
__ PhotoLibraryServices: _PLFindPhoneInvitationFailureNotification
__ PhotoLibraryServices: _PLGetOrientationAndUntransformedSizeFromImageData
__ PhotoLibraryServices: _PLGetPhotoLibraryClient
__ PhotoLibraryServices: _PLImageSizeFromImageData
__ PhotoLibraryServices: _PLNetworkReachabilityChangedNotification
__ PhotoLibraryServices: _PLNetworkReachabilityIsOnWiFiKey
__ PhotoLibraryServices: _PLNetworkReachabilityIsReachableKey
__ PhotoLibraryServices: _PLOrientationTransformImageSize
__ PhotoLibraryServices: _PLPhotoLibraryDidImportPhotoNotification
__ PhotoLibraryServices: _PLPhotoLibraryFailedImportPhotoNotification
__ PhotoLibraryServices: _PLPreviewImageAndDurationForVideoAtPath
__ PhotoLibraryServices: _PLRunningFromPhotosApplication
__ PhotoLibraryServices: _PLSAggregateDictionaryAddValueForScalarKey
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForCloudPhotoLibraryVideoStreamingLoadTime
__ PhotoLibraryServices: _PLSAggregateDictionaryKeyForPhotoStreamTimeToFullResolution
__ PhotoLibraryServices: _PLSAggregateDictionaryVideoEditSlalom
__ PhotoLibraryServices: _PLScaledCropRect
__ PhotoLibraryServices: _PLSetShouldCacheIOSurfaces
__ PhotoLibraryServices: _PLSetShouldLogImageDecodeTime
__ PhotoLibraryServices: _imageDataFromImageWithFormat
__ PhotoLibraryServices: _kPLImageWriterImportedBy
__ Photos: _OBJC_CLASS_$_PHAdjustmentData
__ Photos: _OBJC_CLASS_$_PHAsset
__ Photos: _OBJC_CLASS_$_PHAssetChangeRequest
__ Photos: _OBJC_CLASS_$_PHAssetCollection
__ Photos: _OBJC_CLASS_$_PHAssetCollectionChangeRequest
__ Photos: _OBJC_CLASS_$_PHCachingImageManager
__ Photos: _OBJC_CLASS_$_PHContentEditingInputRequestOptions
__ Photos: _OBJC_CLASS_$_PHContentEditingOutput
__ Photos: _OBJC_CLASS_$_PHFetchOptions
__ Photos: _OBJC_CLASS_$_PHImageManager
__ Photos: _OBJC_CLASS_$_PHImageRequestOptions
__ Photos: _OBJC_CLASS_$_PHPhotoLibrary
__ Photos: _OBJC_CLASS_$_PHVideoRequestOptions
__ Photos: _PHContentEditingInputErrorKey
__ Photos: _PHFullScreenSizeForScreen
__ Photos: _PHImageFileURLKey
__ Photos: _PHImageManagerMaximumSize
__ PhotosFormats: _OBJC_CLASS_$_PFSharingUtilities
__ PhotosFormats: _OBJC_CLASS_$_PFSlowMotionUtilities
__ PhotosFormats: _OBJC_CLASS_$_PFVideoAVObjectBuilder
__ PhotosFormats: _OBJC_CLASS_$_PFVideoAdjustments
__ PrototypeTools: _OBJC_CLASS_$_PTButtonRow
__ PrototypeTools: _OBJC_CLASS_$_PTDrillDownRow
__ PrototypeTools: _OBJC_CLASS_$_PTModule
__ PrototypeTools: _OBJC_CLASS_$_PTRestoreDefaultSettingsRowAction
__ PrototypeTools: _OBJC_CLASS_$_PTSwitchRow
__ QuartzCore: _CATransform3DMakeAffineTransform
__ QuartzCore: _OBJC_CLASS_$_CALayer
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _OBJC_METACLASS_$_CALayer
__ QuartzCore: _kCAFillRuleEvenOdd
__ QuartzCore: _kCATransactionDisableActions
__ UIKit: _NSFontAttributeName
__ UIKit: _OBJC_CLASS_$_UIActivityIndicatorView
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIApplication
__ UIKit: _OBJC_CLASS_$_UIBarButtonItem
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIControl
__ UIKit: _OBJC_CLASS_$_UIDevice
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImagePickerController
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIMovieScrubber
__ UIKit: _OBJC_CLASS_$_UINavigationBar
__ UIKit: _OBJC_CLASS_$_UINavigationItem
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIProgressView
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UIStatusBarStyleAnimationParameters
__ UIKit: _OBJC_CLASS_$_UISwipeGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UITableView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIToolbar
__ UIKit: _OBJC_CLASS_$_UITransitionView
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$_UIWindow
__ UIKit: _OBJC_CLASS_$__UIAccessDeniedView
__ UIKit: _OBJC_CLASS_$__UIBackdropView
__ UIKit: _OBJC_CLASS_$__UILegibilityLabel
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_CLASS_$__UISettings
__ UIKit: _OBJC_METACLASS_$_UIApplication
__ UIKit: _OBJC_METACLASS_$_UIButton
__ UIKit: _OBJC_METACLASS_$_UIControl
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIScrollView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _OBJC_METACLASS_$_UIWindow
__ UIKit: _OBJC_METACLASS_$__UISettings
__ UIKit: _UIApp
__ UIKit: _UIApplicationAutomaticSnapshotDefaultPNG
__ UIKit: _UIApplicationDidBecomeActiveNotification
__ UIKit: _UIApplicationDidEnterBackgroundNotification
__ UIKit: _UIApplicationSimpleRemoteActionNotification
__ UIKit: _UIApplicationSimpleRemoteActionType
__ UIKit: _UIApplicationStatusBarHeightChangedNotification
__ UIKit: _UIApplicationSuspendedNotification
__ UIKit: _UIApplicationWillEnterForegroundNotification
__ UIKit: _UIApplicationWillResignActiveNotification
__ UIKit: _UIBackgroundTaskInvalid
__ UIKit: _UIContentSizeCategoryDidChangeNotification
__ UIKit: _UIDistanceBetweenPoints
__ UIKit: _UIEdgeInsetsZero
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIFontTextStyleCaption1
__ UIKit: _UIFontTextStyleSubheadline
__ UIKit: _UIGraphicsBeginImageContext
__ UIKit: _UIGraphicsBeginImageContextWithOptions
__ UIKit: _UIGraphicsEndImageContext
__ UIKit: _UIGraphicsGetCurrentContext
__ UIKit: _UIGraphicsGetImageFromCurrentImageContext
__ UIKit: _UIImageJPEGRepresentation
__ UIKit: _UIImagePickerControllerAllowsEditing
__ UIKit: _UIImagePickerControllerCropRect
__ UIKit: _UIImagePickerControllerEditedImage
__ UIKit: _UIImagePickerControllerImageURL
__ UIKit: _UIImagePickerControllerLivePhoto
__ UIKit: _UIImagePickerControllerMediaMetadata
__ UIKit: _UIImagePickerControllerMediaType
__ UIKit: _UIImagePickerControllerMediaURL
__ UIKit: _UIImagePickerControllerOriginalImage
__ UIKit: _UIImagePickerControllerReferenceURL
__ UIKit: _UIImagePickerControllerVideoMaximumDuration
__ UIKit: _UIImagePickerControllerVideoQuality
__ UIKit: _UIImagePickerEnsureViewIsInsidePopover
__ UIKit: _UINavigationControllerHideShowBarDuration
__ UIKit: _UIRectCenteredIntegralRect
__ UIKit: _UIRectCenteredIntegralRectScale
__ UIKit: _UIRectCenteredXInRect
__ UIKit: _UIRectCenteredYInRect
__ UIKit: _UIRectFill
__ UIKit: _UIRectFillUsingBlendMode
__ UIKit: _UIRectGetCenter
__ UIKit: _UIScreenDidConnectNotification
__ UIKit: _UIScreenDidDisconnectNotification
__ UIKit: _UIScrollViewDecelerationRateFast
__ UIKit: _UISystemFontBoldForSize
__ UIKit: __UIAccessibilityForceTouchEnabled
__ UIKit: __UIAccessibilityZoomTouchEnabled
__ UIKit: __UIApplicationLinkedOnVersion
__ UIKit: __UIApplicationWillAddDeactivationReasonNotification
__ UIKit: __UIImagePickerController1XCroppedImage
__ UIKit: __UIImagePickerControllerChooseButtonTitle
__ UIKit: __UIImagePickerControllerDisableTrimVideoMessage
__ UIKit: __UIImagePickerControllerEditabilityChangedNotification
__ UIKit: __UIImagePickerControllerForceNativeScreenScale
__ UIKit: __UIImagePickerControllerFullScreenImage
__ UIKit: __UIImagePickerControllerIrisVideoFileURL
__ UIKit: __UIImagePickerControllerOriginalImageData
__ UIKit: __UIImagePickerControllerPHAssetLocalIdentifier
__ UIKit: __UIImagePickerControllerReviewCapturedItem
__ UIKit: __UIImagePickerControllerShowCameraControls
__ UIKit: __UIImagePickerControllerUseTelephonyUI
__ UIKit: __UIImagePickerControllerVideoDontTranscode
__ UIKit: __UIImagePickerControllerVideoEditingEnd
__ UIKit: __UIImagePickerControllerVideoEditingStart
__ UIKit: __UIImagePickerControllerVideoRemakerQuality
__ UIKit: __UIImagePickerControllerViewImageBeforeSelecting
__ UIKit: __UIKitSafeTextView
__ UIKit: __UILegibilityStrengthAutomatic
__ UIKit: __UIVideoEditorControllerVideoURL
__ UIKit: ___UIApplicationLinkedOnOrAfter
__ UIKit: _kUISuspendedDefaultPNGKey
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: ___stdoutp
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_log_pack_fill
__ libSystem.B.dylib: __os_log_pack_size
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __signal_nobind
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _atan
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_context
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_cancel_handler_f
__ libSystem.B.dylib: _dispatch_source_set_event_handler_f
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getpagesize
__ libSystem.B.dylib: _log
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_mutex_destroy
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _random
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _srandomdev
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
PHSettings : _UISettings /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
  // class methods
  +[PHSettings _userDefaults]
  +[PHSettings sharedSettings]
  +[PHSettings suiteName]
  +[PHSettings _defaultsKey]
  +[PHSettings setSuiteName:]
  +[PHSettings createSharedSettings]
  +[PHSettings _signatureDictionary]

  // instance methods
  -[PHSettings save]
  -[PHSettings parentSettings]


PLAVPlayerView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  AVPlayerLayer *layer
 @property  AVPlayer *player
 @property  long long scaleMode
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} videoRect

  // class methods
  +[PLAVPlayerView layerClass]

  // instance methods
  -[PLAVPlayerView initWithFrame:]
  -[PLAVPlayerView player]
  -[PLAVPlayerView setPlayer:]
  -[PLAVPlayerView videoRect]
  -[PLAVPlayerView scaleMode]
  -[PLAVPlayerView setScaleMode:]
  -[PLAVPlayerView setScaleMode:duration:]


PLAssetContainerDataSource : NSObject <PHAssetCollectionDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  PHFetchResult *assetCollectionsFetchResult

  // instance methods
  -[PLAssetContainerDataSource dealloc]
  -[PLAssetContainerDataSource globalIndexForIndexPath:]
  -[PLAssetContainerDataSource indexPathForGlobalIndex:]
  -[PLAssetContainerDataSource assetsInAssetCollection:]
  -[PLAssetContainerDataSource assetCollectionsFetchResult]
  -[PLAssetContainerDataSource initWithAssetCollectionsFetchResult:collectionsAssetsFetchResults:]
  -[PLAssetContainerDataSource _updateCachedValues]
  -[PLAssetContainerDataSource _updateCachedCount:forContainerAtContainerIndex:]
  -[PLAssetContainerDataSource allAssetsCount]
  -[PLAssetContainerDataSource assetContainerForAsset:]
  -[PLAssetContainerDataSource assetContainerForAssetGlobalIndex:]
  -[PLAssetContainerDataSource incrementGlobalIndex:insideCurrentAssetContainer:andWrap:]
  -[PLAssetContainerDataSource decrementGlobalIndex:insideCurrentAssetContainer:andWrap:]
  -[PLAssetContainerDataSource assetAtGlobalIndex:]
  -[PLAssetContainerDataSource globalIndexOfAsset:]
  -[PLAssetContainerDataSource indexOffsetForAssetContainerAtAssetIndex:]
  -[PLAssetContainerDataSource assetWithObjectID:]
  -[PLAssetContainerDataSource assetsInAssetCollectionAtIndex:]
  -[PLAssetContainerDataSource newAssetsFetchResults]
  -[PLAssetContainerDataSource assetAtIndexPath:]
  -[PLAssetContainerDataSource indexPathOfAsset:]
  -[PLAssetContainerDataSource assetContainerAtIndex:]
  -[PLAssetContainerDataSource indexOfContainer:]
  -[PLAssetContainerDataSource firstAssetIndexPath]
  -[PLAssetContainerDataSource lastAssetIndexPath]
  -[PLAssetContainerDataSource hasAssetAtIndexPath:]
  -[PLAssetContainerDataSource findNearestIndexPath:preferNext:]
  -[PLAssetContainerDataSource _indexOfNextNonEmptyAssetContainerAfterContainerIndex:wrap:]
  -[PLAssetContainerDataSource _indexOfPreviousNonEmptyAssetContainerBeforeContainerIndex:wrap:]
  -[PLAssetContainerDataSource incrementAssetIndexPath:insideCurrentAssetContainer:andWrap:]
  -[PLAssetContainerDataSource decrementAssetIndexPath:insideCurrentAssetContainer:andWrap:]
  -[PLAssetContainerDataSource assetCountForContainer:]
  -[PLAssetContainerDataSource assetCountForContainerAtIndex:]
  -[PLAssetContainerDataSource assetInAssetContainer:atIndex:]
  -[PLAssetContainerDataSource pl_fetchAllAssets]
  -[PLAssetContainerDataSource viewControllerPhotoLibraryDidChange:]


PLCAAnimationDelegate : NSObject <CAAnimationDelegate>
 @property  @? completion
 @property  @? start
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PLCAAnimationDelegate dealloc]
  -[PLCAAnimationDelegate start]
  -[PLCAAnimationDelegate setCompletion:]
  -[PLCAAnimationDelegate completion]
  -[PLCAAnimationDelegate animationDidStop:finished:]
  -[PLCAAnimationDelegate animationDidStart:]
  -[PLCAAnimationDelegate setStart:]


PLCGPathCache : NSObject
  // class methods
  +[PLCGPathCache sharedPathCache]

  // instance methods
  -[PLCGPathCache init]
  -[PLCGPathCache dealloc]
  -[PLCGPathCache setPath:forKey:]
  -[PLCGPathCache pathForKey:]


PLCacheEntry : NSObject
  // instance methods
  -[PLCacheEntry dealloc]
  -[PLCacheEntry object]
  -[PLCacheEntry setObject:]
  -[PLCacheEntry lruListEntry]


PLCache : NSObject
  // instance methods
  -[PLCache dealloc]
  -[PLCache removeAllObjects]
  -[PLCache objectForKey:]
  -[PLCache removeObjectForKey:]
  -[PLCache setObject:forKey:]
  -[PLCache setObject:forKey:cost:]
  -[PLCache initWithCountLimit:totalCostLimit:]


PLCommentsFontCache : NSObject
 @property  UIFont *youLikeFont
 @property  UIFont *likeFont
 @property  UIFont *commentTextFont
 @property  UIFont *commentAttributionDateFont
 @property  UIFont *commentAttributionNameFont
 @property  UIFont *commentEntryFont
 @property  UIFont *commentSendButtonFont

  // class methods
  +[PLCommentsFontCache sharedCache]

  // instance methods
  -[PLCommentsFontCache init]
  -[PLCommentsFontCache dealloc]
  -[PLCommentsFontCache _invalidateCache]
  -[PLCommentsFontCache _contentSizesDidChange:]
  -[PLCommentsFontCache _shortCaptionFontDescriptor]
  -[PLCommentsFontCache _emphasizedShortCaptionFontDescriptor]
  -[PLCommentsFontCache _shortSubheadlineFontDescriptor]
  -[PLCommentsFontCache _bodyFontDescriptor]
  -[PLCommentsFontCache _emphasizedBodyFontDescriptor]
  -[PLCommentsFontCache _shortBodyFontDescriptor]
  -[PLCommentsFontCache youLikeFont]
  -[PLCommentsFontCache likeFont]
  -[PLCommentsFontCache commentTextFont]
  -[PLCommentsFontCache commentAttributionDateFont]
  -[PLCommentsFontCache commentAttributionNameFont]
  -[PLCommentsFontCache commentEntryFont]
  -[PLCommentsFontCache commentSendButtonFont]


PLContactPhotoOverlay : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  UIImageView *_avatarPreview
 @property  CAShapeLayer *circularLayer
 @property  UILabel *titleLabel
 @property  {UIEdgeInsets=dddd} overlayEdgeInsets

  // instance methods
  -[PLContactPhotoOverlay dealloc]
  -[PLContactPhotoOverlay initWithCoder:]
  -[PLContactPhotoOverlay initWithFrame:]
  -[PLContactPhotoOverlay titleLabel]
  -[PLContactPhotoOverlay layoutSubviews]
  -[PLContactPhotoOverlay circularLayer]
  -[PLContactPhotoOverlay setCircularLayer:]
  -[PLContactPhotoOverlay overlayEdgeInsets]
  -[PLContactPhotoOverlay _commonPLContactPhotoOverlayInitialization]
  -[PLContactPhotoOverlay inscribingBounds]
  -[PLContactPhotoOverlay beginAvatarTrackingFromImageView:]
  -[PLContactPhotoOverlay endAvatarTracking]
  -[PLContactPhotoOverlay _avatarPreview]


PLCropOverlay : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  PLCropOverlayBottomBar *_bottomBar
 @property  UIButton *_cameraCancelButton
 @property  PLContactPhotoOverlay *contactPhotoOverlay
 @property  UIView *cameraBottomBar
 @property  PLCropOverlayWallpaperBottomBar *wallpaperBottomBar
 @property  BOOL motionToggleIsOn
 @property  BOOL isEditingHomeScreen
 @property  BOOL isEditingLockScreen
 @property  BOOL motionToggleHidden
 @property  BOOL displayedInPopover
 @property  NSString *defaultOKButtonTitle
 @property  NSString *defaultCancelButtonTitle
 @property  <PLCropOverlayDelegate> *delegate
 @property  BOOL previewMode

  // instance methods
  -[PLCropOverlay dealloc]
  -[PLCropOverlay setEnabled:]
  -[PLCropOverlay delegate]
  -[PLCropOverlay setDelegate:]
  -[PLCropOverlay .cxx_destruct]
  -[PLCropOverlay setTitle:]
  -[PLCropOverlay mode]
  -[PLCropOverlay initWithFrame:]
  -[PLCropOverlay layoutSubviews]
  -[PLCropOverlay dismiss]
  -[PLCropOverlay hitTest:withEvent:]
  -[PLCropOverlay titleRect]
  -[PLCropOverlay _setMode:]
  -[PLCropOverlay previewMode]
  -[PLCropOverlay setPreviewMode:]
  -[PLCropOverlay _updateTitle]
  -[PLCropOverlay cropRect]
  -[PLCropOverlay setCancelButtonTitle:]
  -[PLCropOverlay initWithFrame:mode:]
  -[PLCropOverlay bottomBar]
  -[PLCropOverlay _bottomBar]
  -[PLCropOverlay initWithFrame:mode:offsettingStatusBar:]
  -[PLCropOverlay setDisplayedInPopover:]
  -[PLCropOverlay cameraBottomBar]
  -[PLCropOverlay setCameraBottomBar:]
  -[PLCropOverlay wallpaperBottomBar]
  -[PLCropOverlay controlsAreVisible]
  -[PLCropOverlay setControlsAreVisible:]
  -[PLCropOverlay overlayContainerView]
  -[PLCropOverlay setOverlayContainerView:]
  -[PLCropOverlay _createCropView]
  -[PLCropOverlay insertIrisView:]
  -[PLCropOverlay bottomBarFrame]
  -[PLCropOverlay setCropRectVisible:duration:]
  -[PLCropOverlay didCapturePhoto]
  -[PLCropOverlay didCaptureVideo]
  -[PLCropOverlay didPlayVideo]
  -[PLCropOverlay didPauseVideo]
  -[PLCropOverlay statusBarHeightDidChange:]
  -[PLCropOverlay _fadeOutCompleted:]
  -[PLCropOverlay cancelButtonClicked:]
  -[PLCropOverlay _tappedBottomBarCancelButton:]
  -[PLCropOverlay _tappedBottomBarDoneButton:]
  -[PLCropOverlay _tappedBottomBarSetHomeButton]
  -[PLCropOverlay _tappedBottomBarSetLockButton]
  -[PLCropOverlay _tappedBottomBarSetBothButton]
  -[PLCropOverlay _tappedBottomBarMotionToggle]
  -[PLCropOverlay setMotionToggleIsOn:]
  -[PLCropOverlay _updateMotionToggle]
  -[PLCropOverlay setIsEditingHomeScreen:]
  -[PLCropOverlay setIsEditingLockScreen:]
  -[PLCropOverlay _updateWallpaperBottomBarSettingButtons]
  -[PLCropOverlay setMotionToggleHidden:]
  -[PLCropOverlay motionToggleHidden]
  -[PLCropOverlay _tappedBottomBarPlaybackButton:]
  -[PLCropOverlay cropOverlayBottomBarPlayButtonClicked:]
  -[PLCropOverlay _playButtonPressed:]
  -[PLCropOverlay cropOverlayBottomBarPauseButtonClicked:]
  -[PLCropOverlay _pauseButtonPressed:]
  -[PLCropOverlay setTitle:okButtonTitle:]
  -[PLCropOverlay setOKButtonTitle:]
  -[PLCropOverlay setDefaultOKButtonTitle:]
  -[PLCropOverlay setDefaultCancelButtonTitle:]
  -[PLCropOverlay setOKButtonShowsCamera:]
  -[PLCropOverlay setShowProgress:title:]
  -[PLCropOverlay removeProgress]
  -[PLCropOverlay setProgressDone]
  -[PLCropOverlay setShowsCropRegion:]
  -[PLCropOverlay setTitleHidden:animationDuration:]
  -[PLCropOverlay _updateEditImageDoneButtonTitle]
  -[PLCropOverlay _updateEditImageCancelButtonTitle]
  -[PLCropOverlay _updateToolbarItems:]
  -[PLCropOverlay _updateCropRectInRect:]
  -[PLCropOverlay _newOverlayViewWithFrame:lighterEdgeOnTop:]
  -[PLCropOverlay isTelephonyUIMode:]
  -[PLCropOverlay isWallpaperUIMode:]
  -[PLCropOverlay contactPhotoOverlay]
  -[PLCropOverlay motionToggleIsOn]
  -[PLCropOverlay isEditingHomeScreen]
  -[PLCropOverlay isEditingLockScreen]
  -[PLCropOverlay isDisplayedInPopover]
  -[PLCropOverlay defaultOKButtonTitle]
  -[PLCropOverlay defaultCancelButtonTitle]
  -[PLCropOverlay _cameraCancelButton]
  -[PLCropOverlay _backgroundSavePhoto:cropRect:minimalCropDimension:]
  -[PLCropOverlay _savePhotoFinished:]
  -[PLCropOverlay beginBackgroundSaveWithTile:progressTitle:completionCallbackTarget:options:]


PLCropOverlayCropView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
  // instance methods
  -[PLCropOverlayCropView dealloc]
  -[PLCropOverlayCropView setFrame:]
  -[PLCropOverlayCropView initWithFrame:]
  -[PLCropOverlayCropView setAlpha:]
  -[PLCropOverlayCropView cropRect]
  -[PLCropOverlayCropView setCropRect:]
  -[PLCropOverlayCropView _updateCropRectIfNeeded]
  -[PLCropOverlayCropView _removeCropViews]


PLCropOverlayBottomBar : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  long long style
 @property  UIView *cameraBottomBar
 @property  PLCropOverlayPreviewBottomBar *previewBottomBar
 @property  PLCropOverlayWallpaperBottomBar *wallpaperBottomBar
 @property  BOOL playingVideo
 @property  BOOL inPopover

  // instance methods
  -[PLCropOverlayBottomBar dealloc]
  -[PLCropOverlayBottomBar initWithCoder:]
  -[PLCropOverlayBottomBar style]
  -[PLCropOverlayBottomBar setStyle:]
  -[PLCropOverlayBottomBar initWithFrame:]
  -[PLCropOverlayBottomBar layoutSubviews]
  -[PLCropOverlayBottomBar _updateStyle]
  -[PLCropOverlayBottomBar setInPopover:]
  -[PLCropOverlayBottomBar setStyle:animated:]
  -[PLCropOverlayBottomBar cameraBottomBar]
  -[PLCropOverlayBottomBar setCameraBottomBar:]
  -[PLCropOverlayBottomBar wallpaperBottomBar]
  -[PLCropOverlayBottomBar _commonPLCropOverlayBottomBarInitialization]
  -[PLCropOverlayBottomBar setPreviewBottomBar:]
  -[PLCropOverlayBottomBar setWallpaperBottomBar:]
  -[PLCropOverlayBottomBar setPlayingVideo:]
  -[PLCropOverlayBottomBar togglePlaybackState]
  -[PLCropOverlayBottomBar _updateBottomBars]
  -[PLCropOverlayBottomBar _updatePreviewBottomBarForPlaybackState]
  -[PLCropOverlayBottomBar _isEditingStyle:]
  -[PLCropOverlayBottomBar previewBottomBar]
  -[PLCropOverlayBottomBar isPlayingVideo]
  -[PLCropOverlayBottomBar isInPopover]


PLCropOverlayPreviewBottomBar : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  long long backgroundStyle
 @property  UIButton *cancelButton
 @property  UIButton *doneButton
 @property  UIButton *playbackButton

  // instance methods
  -[PLCropOverlayPreviewBottomBar dealloc]
  -[PLCropOverlayPreviewBottomBar initWithCoder:]
  -[PLCropOverlayPreviewBottomBar initWithFrame:]
  -[PLCropOverlayPreviewBottomBar layoutSubviews]
  -[PLCropOverlayPreviewBottomBar safeAreaInsetsDidChange]
  -[PLCropOverlayPreviewBottomBar cancelButton]
  -[PLCropOverlayPreviewBottomBar setBackgroundStyle:]
  -[PLCropOverlayPreviewBottomBar backgroundStyle]
  -[PLCropOverlayPreviewBottomBar doneButton]
  -[PLCropOverlayPreviewBottomBar _updateBackgroundStyle]
  -[PLCropOverlayPreviewBottomBar setBackgroundStyle:animated:]
  -[PLCropOverlayPreviewBottomBar playbackButton]
  -[PLCropOverlayPreviewBottomBar _commonPLCropOverlayEditPhotoBottomBarInitialization]


PLCropOverlayWallpaperBottomBar : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  _UILegibilityLabel *titleLabel
 @property  UIView *separatorLine
 @property  _UIBackdropView *backdropView
 @property  double maxToggleWidth
 @property  PLWallpaperButton *doCancelButton
 @property  PLWallpaperButton *doSetButton
 @property  PLWallpaperButton *doSetHomeScreenButton
 @property  PLWallpaperButton *doSetLockScreenButton
 @property  PLWallpaperButton *doSetBothScreenButton
 @property  PLWallpaperButton *motionToggle
 @property  BOOL motionToggleHidden
 @property  BOOL shouldOnlyShowLockScreenButton
 @property  BOOL shouldOnlyShowHomeScreenButton

  // instance methods
  -[PLCropOverlayWallpaperBottomBar dealloc]
  -[PLCropOverlayWallpaperBottomBar initWithCoder:]
  -[PLCropOverlayWallpaperBottomBar setText:]
  -[PLCropOverlayWallpaperBottomBar initWithFrame:]
  -[PLCropOverlayWallpaperBottomBar titleLabel]
  -[PLCropOverlayWallpaperBottomBar sizeThatFits:]
  -[PLCropOverlayWallpaperBottomBar layoutSubviews]
  -[PLCropOverlayWallpaperBottomBar setTitleLabel:]
  -[PLCropOverlayWallpaperBottomBar backdropView]
  -[PLCropOverlayWallpaperBottomBar setBackdropView:]
  -[PLCropOverlayWallpaperBottomBar updateForChangedSettings:]
  -[PLCropOverlayWallpaperBottomBar separatorLine]
  -[PLCropOverlayWallpaperBottomBar setSeparatorLine:]
  -[PLCropOverlayWallpaperBottomBar setMotionToggleHidden:]
  -[PLCropOverlayWallpaperBottomBar motionToggleHidden]
  -[PLCropOverlayWallpaperBottomBar _commonPLCropOverlayWallpaperBottomBarInitialization]
  -[PLCropOverlayWallpaperBottomBar _commonPLCropOverlayWallpaperBottomBarInitializationPhone]
  -[PLCropOverlayWallpaperBottomBar _commonPLCropOverlayWallpaperBottomBarInitializationPad]
  -[PLCropOverlayWallpaperBottomBar _layoutSubviewsPhone]
  -[PLCropOverlayWallpaperBottomBar _layoutSubviewsPad]
  -[PLCropOverlayWallpaperBottomBar widthForToggleText]
  -[PLCropOverlayWallpaperBottomBar _sizeForString:]
  -[PLCropOverlayWallpaperBottomBar doCancelButton]
  -[PLCropOverlayWallpaperBottomBar doSetButton]
  -[PLCropOverlayWallpaperBottomBar doSetHomeScreenButton]
  -[PLCropOverlayWallpaperBottomBar doSetLockScreenButton]
  -[PLCropOverlayWallpaperBottomBar doSetBothScreenButton]
  -[PLCropOverlayWallpaperBottomBar motionToggle]
  -[PLCropOverlayWallpaperBottomBar shouldOnlyShowLockScreenButton]
  -[PLCropOverlayWallpaperBottomBar setShouldOnlyShowLockScreenButton:]
  -[PLCropOverlayWallpaperBottomBar shouldOnlyShowHomeScreenButton]
  -[PLCropOverlayWallpaperBottomBar setShouldOnlyShowHomeScreenButton:]
  -[PLCropOverlayWallpaperBottomBar maxToggleWidth]
  -[PLCropOverlayWallpaperBottomBar setMaxToggleWidth:]


PLDataArrayInputStream : NSInputStream /usr/lib/libobjc.A.dylib
 @property  <PLDataArrayInputStreamProgressDelegate> *progressDelegate

  // instance methods
  -[PLDataArrayInputStream dealloc]
  -[PLDataArrayInputStream open]
  -[PLDataArrayInputStream close]
  -[PLDataArrayInputStream delegate]
  -[PLDataArrayInputStream setDelegate:]
  -[PLDataArrayInputStream scheduleInRunLoop:forMode:]
  -[PLDataArrayInputStream removeFromRunLoop:forMode:]
  -[PLDataArrayInputStream streamStatus]
  -[PLDataArrayInputStream streamError]
  -[PLDataArrayInputStream read:maxLength:]
  -[PLDataArrayInputStream getBuffer:length:]
  -[PLDataArrayInputStream hasBytesAvailable]
  -[PLDataArrayInputStream _setCFClientFlags:callback:context:]
  -[PLDataArrayInputStream _scheduleInCFRunLoop:forMode:]
  -[PLDataArrayInputStream _unscheduleFromCFRunLoop:forMode:]
  -[PLDataArrayInputStream totalBytes]
  -[PLDataArrayInputStream _updateProgress]
  -[PLDataArrayInputStream _scheduleCallback]
  -[PLDataArrayInputStream _streamEventTrigger]
  -[PLDataArrayInputStream bytesRead]
  -[PLDataArrayInputStream initWithDataArray:]
  -[PLDataArrayInputStream _scheduleProgressUpdate]
  -[PLDataArrayInputStream progressDelegate]
  -[PLDataArrayInputStream setProgressDelegate:]


PLExpandableImageView : PLExpandableView
 @property  NSString *name
 @property  {CGSize=dd} imageSize
 @property  PLVideoView *videoView
 @property  BOOL showsPlaceholder
 @property  BOOL borderAndAccessoriesVisible
 @property  PLManagedAsset *photo

  // class methods
  +[PLExpandableImageView imageBorderWidth]

  // instance methods
  -[PLExpandableImageView dealloc]
  -[PLExpandableImageView name]
  -[PLExpandableImageView setName:]
  -[PLExpandableImageView image]
  -[PLExpandableImageView setImage:]
  -[PLExpandableImageView setCenter:]
  -[PLExpandableImageView setFrame:]
  -[PLExpandableImageView initWithFrame:]
  -[PLExpandableImageView _contentView]
  -[PLExpandableImageView layoutSubviews]
  -[PLExpandableImageView imageView]
  -[PLExpandableImageView pointInside:withEvent:]
  -[PLExpandableImageView setShadowEnabled:]
  -[PLExpandableImageView isShadowEnabled]
  -[PLExpandableImageView imageSize]
  -[PLExpandableImageView setTransitionProgress:]
  -[PLExpandableImageView transitionProgress]
  -[PLExpandableImageView finishTransition]
  -[PLExpandableImageView photo]
  -[PLExpandableImageView setPhoto:]
  -[PLExpandableImageView setVideoView:]
  -[PLExpandableImageView videoView]
  -[PLExpandableImageView _currentScale]
  -[PLExpandableImageView initWithFrame:frameStyle:withBorder:]
  -[PLExpandableImageView initWithFrame:frameStyle:]
  -[PLExpandableImageView _expandedScale]
  -[PLExpandableImageView _expansionFraction]
  -[PLExpandableImageView _snappedExpandedFrame]
  -[PLExpandableImageView stateDidChangeFrom:]
  -[PLExpandableImageView _setOriginalSize:]
  -[PLExpandableImageView beginTrackingPinch:]
  -[PLExpandableImageView setSize:angle:]
  -[PLExpandableImageView _borderAlphaForExpansionFraction:]
  -[PLExpandableImageView _updateBorderAndAccessoriesAlpha]
  -[PLExpandableImageView _updatePinchWidthAndScaleWithLeftPoint:rightPoint:]
  -[PLExpandableImageView continueTrackingPinch:]
  -[PLExpandableImageView _newSizeFromSize:]
  -[PLExpandableImageView setTransformAndCenterForFrame:]
  -[PLExpandableImageView completeTrackingPinch:toState:duration:]
  -[PLExpandableImageView _bounceBack:finished:context:]
  -[PLExpandableImageView _bounceToPlace:finished:context:]
  -[PLExpandableImageView setBorderAndAccessoriesVisible:]
  -[PLExpandableImageView isBorderAndAccessoriesVisible]
  -[PLExpandableImageView setImage:isFullscreen:]
  -[PLExpandableImageView setFullSizeImageJPEGData:size:orientation:]
  -[PLExpandableImageView showsPlaceholder]
  -[PLExpandableImageView setShowsPlaceholder:]
  -[PLExpandableImageView frameOfImage]
  -[PLExpandableImageView imageRotationAngle]
  -[PLExpandableImageView isBeingManipulated]
  -[PLExpandableImageView setTextBadgeString:]
  -[PLExpandableImageView renderSnapshotInContext:]


PLExpandableView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} contractedFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} expandedFrame
 @property  BOOL allowsExpansion

  // instance methods
  -[PLExpandableView dealloc]
  -[PLExpandableView delegate]
  -[PLExpandableView setDelegate:]
  -[PLExpandableView state]
  -[PLExpandableView previousState]
  -[PLExpandableView initWithFrame:]
  -[PLExpandableView didMoveToWindow]
  -[PLExpandableView willMoveToWindow:]
  -[PLExpandableView isTracking]
  -[PLExpandableView finishTransition]
  -[PLExpandableView stateDidChangeFrom:]
  -[PLExpandableView beginTrackingPinch:]
  -[PLExpandableView continueTrackingPinch:]
  -[PLExpandableView completeTrackingPinch:toState:duration:]
  -[PLExpandableView _setAutorotationDisabled:]
  -[PLExpandableView _notifyDidCompleteCollapsing]
  -[PLExpandableView _notifyWillBeginExpanding]
  -[PLExpandableView _notifyWillCancelCollapsingWithDuration:]
  -[PLExpandableView _notifyWillCompleteCollapsingWithDuration:]
  -[PLExpandableView _notifyWillCompleteExpandingWithDuration:]
  -[PLExpandableView _notifyWillCancelExpandingWithDuration:]
  -[PLExpandableView _notifyDidCompleteExpanding]
  -[PLExpandableView _notifyWillBeginCollapsing]
  -[PLExpandableView _notifyDidCancelExpanding]
  -[PLExpandableView _notifyDidCancelCollapsing]
  -[PLExpandableView _transitionFromContracted:withDuration:]
  -[PLExpandableView _transitionFromExpanding:withDuration:]
  -[PLExpandableView _transitionFromCompleteExpand:withDuration:]
  -[PLExpandableView _transitionFromCancelExpand:withDuration:]
  -[PLExpandableView _transitionFromExpanded:withDuration:]
  -[PLExpandableView _transitionFromContracting:withDuration:]
  -[PLExpandableView _transitionFromCancelContract:withDuration:]
  -[PLExpandableView _transitionFromCompleteContract:withDuration:]
  -[PLExpandableView setState:withDuration:]
  -[PLExpandableView stateWillChangeTo:]
  -[PLExpandableView notifyExpansionFraction:force:]
  -[PLExpandableView startedPinch:]
  -[PLExpandableView continuedPinch:]
  -[PLExpandableView finishedPinch:]
  -[PLExpandableView canceledPinch:]
  -[PLExpandableView finishTransitionToState:]
  -[PLExpandableView snapState:]
  -[PLExpandableView updatePinchState:]
  -[PLExpandableView pinchRect:inView:insetTouches:]
  -[PLExpandableView collapseWithAnimation:completion:]
  -[PLExpandableView expandWithAnimation:completion:]
  -[PLExpandableView setContractedFrame:]
  -[PLExpandableView contractedFrame]
  -[PLExpandableView setExpandedFrame:]
  -[PLExpandableView expandedFrame]
  -[PLExpandableView setAllowsExpansion:]
  -[PLExpandableView allowsExpansion]
  -[PLExpandableView setExpansionFraction:]
  -[PLExpandableView expansionFraction]
  -[PLExpandableView _canPinch]
  -[PLExpandableView canCollapse]


PLImageScrollView : UIScrollView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  BOOL adjustZoomScaleAfterRotation

  // instance methods
  -[PLImageScrollView setFrame:]
  -[PLImageScrollView initWithFrame:]
  -[PLImageScrollView _centerContentIfNecessary]
  -[PLImageScrollView willAnimateRotationToInterfaceOrientation:]
  -[PLImageScrollView adjustZoomScaleAfterRotation]
  -[PLImageScrollView setAdjustZoomScaleAfterRotation:]


PLImageView : UIImageView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  NSString *name
 @property  BOOL dimmed
 @property  BOOL borderAndAccessoriesVisible
 @property  float borderAndAccessoriesAlpha
 @property  BOOL drawsBorder
 @property  BOOL shadowEnabled
 @property  double transitionProgress
 @property  PLVideoView *videoView
 @property  UIView *leftAccessoryView
 @property  {CGSize=dd} leftAccessoryViewOffset
 @property  UIView *bottomRightAccessoryView
 @property  double accessoryViewsAlpha
 @property  BOOL showsPlaceholder
 @property  double placeholderScale
 @property  {CGSize=dd} placeholderSize

  // class methods
  +[PLImageView initialize]
  +[PLImageView badgeOffset]
  +[PLImageView textBadgeForString:photoSize:]
  +[PLImageView shouldDrawShadows]

  // instance methods
  -[PLImageView dealloc]
  -[PLImageView name]
  -[PLImageView setName:]
  -[PLImageView setImage:]
  -[PLImageView initWithFrame:]
  -[PLImageView sizeThatFits:]
  -[PLImageView layoutSubviews]
  -[PLImageView setShadowEnabled:]
  -[PLImageView isShadowEnabled]
  -[PLImageView setTransitionProgress:]
  -[PLImageView transitionProgress]
  -[PLImageView setDrawsBorder:]
  -[PLImageView drawsBorder]
  -[PLImageView setEdgeAntialiasingEnabled:]
  -[PLImageView setVideoView:]
  -[PLImageView videoView]
  -[PLImageView textBadgeString]
  -[PLImageView setDimmed:]
  -[PLImageView isDimmed]
  -[PLImageView placeholderSize]
  -[PLImageView setBorderAndAccessoriesVisible:]
  -[PLImageView isBorderAndAccessoriesVisible]
  -[PLImageView setFullSizeImageJPEGData:size:orientation:]
  -[PLImageView showsPlaceholder]
  -[PLImageView setShowsPlaceholder:]
  -[PLImageView setTextBadgeString:]
  -[PLImageView renderSnapshotInContext:]
  -[PLImageView sizeThatFits:allowRounding:]
  -[PLImageView _leftAccessoryViewFrame]
  -[PLImageView _bottomRightAccessoryViewFrame]
  -[PLImageView _updateShadowPath]
  -[PLImageView updateFullSizeImageVisibleArea]
  -[PLImageView _transformForFullSizeImageTiledLayer]
  -[PLImageView _setShadowEnabled:force:]
  -[PLImageView parentDidLayout]
  -[PLImageView setBorderAndAccessoriesAlpha:forced:]
  -[PLImageView setBorderAndAccessoriesAlpha:]
  -[PLImageView borderAndAccessoriesAlpha]
  -[PLImageView setPlaceholderScale:]
  -[PLImageView _updatePlaceholderLayout]
  -[PLImageView _updatePlaceholderAlpha]
  -[PLImageView setLeftAccessoryView:]
  -[PLImageView setLeftAccessoryView:animated:]
  -[PLImageView setLeftAccessoryViewOffset:]
  -[PLImageView setBottomRightAccessoryView:]
  -[PLImageView setBottomRightAccessoryView:animated:]
  -[PLImageView setAccessoryViewsAlpha:]
  -[PLImageView leftAccessoryView]
  -[PLImageView leftAccessoryViewOffset]
  -[PLImageView bottomRightAccessoryView]
  -[PLImageView accessoryViewsAlpha]
  -[PLImageView placeholderScale]


PLMessageUIProxy : NSObject
  // class methods
  +[PLMessageUIProxy MFMailComposeViewControllerClass]
  +[PLMessageUIProxy MFContactsSearchManagerClass]
  +[PLMessageUIProxy MFContactsSearchResultsModelClass]
  +[PLMessageUIProxy MFComposeRecipientViewClass]
  +[PLMessageUIProxy MFComposeRecipientTextViewClass]
  +[PLMessageUIProxy MFComposeRecipientClass]
  +[PLMessageUIProxy MFRecipientTableViewCellClass]
  +[PLMessageUIProxy MFSearchShadowViewClass]
  +[PLMessageUIProxy newCNUnknownPersonViewControllerWithEmailAddress:]


PLMoviePlayerController : NSObject
 @property  BOOL TVOutEnabled
 @property  BOOL forceDisableTVOut
 @property  BOOL isActiveController
 @property  <PLMoviePlayerControllerDelegate> *delegate
 @property  AVPlayer *player
 @property  PLMoviePlayerView *view
 @property  float playbackRate
 @property  unsigned long playbackState
 @property  double duration
 @property  double currentTime
 @property  unsigned long bufferingState
 @property  BOOL isPreparedForPlayback

  // class methods
  +[PLMoviePlayerController _isStreamableAsset:]
  +[PLMoviePlayerController AVAssetURLWithPath:]
  +[PLMoviePlayerController _isNetworkSupportedPath:]

  // instance methods
  -[PLMoviePlayerController init]
  -[PLMoviePlayerController dealloc]
  -[PLMoviePlayerController delegate]
  -[PLMoviePlayerController setDelegate:]
  -[PLMoviePlayerController pause]
  -[PLMoviePlayerController stop]
  -[PLMoviePlayerController observeValueForKeyPath:ofObject:change:context:]
  -[PLMoviePlayerController duration]
  -[PLMoviePlayerController _asset]
  -[PLMoviePlayerController view]
  -[PLMoviePlayerController play]
  -[PLMoviePlayerController currentTime]
  -[PLMoviePlayerController _screenDidConnect:]
  -[PLMoviePlayerController _screenDidDisconnect:]
  -[PLMoviePlayerController _registerForNotifications]
  -[PLMoviePlayerController _unregisterForNotifications]
  -[PLMoviePlayerController player]
  -[PLMoviePlayerController externalPlaybackType]
  -[PLMoviePlayerController _allowsExternalPlayback]
  -[PLMoviePlayerController playbackRate]
  -[PLMoviePlayerController setCurrentTime:]
  -[PLMoviePlayerController playbackState]
  -[PLMoviePlayerController _simpleRemoteNotification:]
  -[PLMoviePlayerController _serverConnectionDidDie:]
  -[PLMoviePlayerController _setBufferingState:]
  -[PLMoviePlayerController bufferingState]
  -[PLMoviePlayerController _playerKeysToObserve]
  -[PLMoviePlayerController TVOutEnabled]
  -[PLMoviePlayerController setTVOutEnabled:]
  -[PLMoviePlayerController tearDownTVOutWindow]
  -[PLMoviePlayerController _setupTVOutWindow]
  -[PLMoviePlayerController _tearDownTVOutWindow]
  -[PLMoviePlayerController _updateBackgroundViewInformation]
  -[PLMoviePlayerController _updateDisableAirPlayMirroringDuringPlayback]
  -[PLMoviePlayerController _updateTVOutEnabled]
  -[PLMoviePlayerController _setupPlayer]
  -[PLMoviePlayerController _tearDownPlayer]
  -[PLMoviePlayerController setPlayerItem:startTime:]
  -[PLMoviePlayerController _setPlayerItem:]
  -[PLMoviePlayerController _loadAsset:]
  -[PLMoviePlayerController _didLoadValueOfKey:forAsset:]
  -[PLMoviePlayerController _dispatchOnMainThreadWithBlock:]
  -[PLMoviePlayerController _playerRateDidChange:]
  -[PLMoviePlayerController playFromBeginning]
  -[PLMoviePlayerController playDueToEnoughData]
  -[PLMoviePlayerController pauseDueToInsufficientData]
  -[PLMoviePlayerController resetPlayer]
  -[PLMoviePlayerController setCurrentTime:timeSnapOption:]
  -[PLMoviePlayerController setCurrentTime:timeSnapOption:forceUpdate:]
  -[PLMoviePlayerController _updateFromPendingTime]
  -[PLMoviePlayerController _delayedUpdateFromPendingTime]
  -[PLMoviePlayerController _streamBufferFull]
  -[PLMoviePlayerController _streamLikelyToKeepUp]
  -[PLMoviePlayerController _streamRanDry]
  -[PLMoviePlayerController _streamUnlikelyToKeepUp]
  -[PLMoviePlayerController _setPlaybackState:]
  -[PLMoviePlayerController _pausePlaybackForNotification]
  -[PLMoviePlayerController _willSuspendNotification:]
  -[PLMoviePlayerController _willBeginSuspendAnimationNotification:]
  -[PLMoviePlayerController _willResignNotification:]
  -[PLMoviePlayerController _didEnterBackgroundNotification:]
  -[PLMoviePlayerController _willEnterForegroundNotification:]
  -[PLMoviePlayerController videoOutActive]
  -[PLMoviePlayerController _setForceDisableTVOut:]
  -[PLMoviePlayerController _restoreTVOutVideoIfNecessary]
  -[PLMoviePlayerController _displayVideoView]
  -[PLMoviePlayerController isExternalPlayback]
  -[PLMoviePlayerController requestToBecomeActiveController]
  -[PLMoviePlayerController requestToResignAsActiveController]
  -[PLMoviePlayerController didBecomeActiveController]
  -[PLMoviePlayerController willResignAsActiveController]
  -[PLMoviePlayerController _playerItemDidReachEndNotification:]
  -[PLMoviePlayerController _playerItemFailedToPlayToEndNotification:]
  -[PLMoviePlayerController _playerItemFailedToPlayToEnd:]
  -[PLMoviePlayerController _playbackFailedWithError:]
  -[PLMoviePlayerController _exitPlayer:]
  -[PLMoviePlayerController forceDisableTVOut]
  -[PLMoviePlayerController isPreparedForPlayback]
  -[PLMoviePlayerController isActiveController]
  -[PLMoviePlayerController setIsActiveController:]


PHRootSettings : PHSettings
 @property  PHImageManagerSettings *imageManagerSettings
 @property  PHResourceDownloadSettings *resourceDownloadSettings

  // class methods
  +[PHRootSettings sharedSettings]
  +[PHRootSettings settingsControllerModule]

  // instance methods
  -[PHRootSettings .cxx_destruct]
  -[PHRootSettings parentSettings]
  -[PHRootSettings imageManagerSettings]
  -[PHRootSettings resourceDownloadSettings]


PLMoviePlayerControllerManager : NSObject
  // class methods
  +[PLMoviePlayerControllerManager sharedInstance]

  // instance methods
  -[PLMoviePlayerControllerManager init]
  -[PLMoviePlayerControllerManager dealloc]
  -[PLMoviePlayerControllerManager moveControllerToTopOfStack:]
  -[PLMoviePlayerControllerManager removeControllerFromStack:]


PLMoviePlayerView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  UIView *videoView
 @property  AVPlayer *player
 @property  long long destinationPlaceholderStyle
 @property  BOOL destinationPlaceholderHidden

  // instance methods
  -[PLMoviePlayerView dealloc]
  -[PLMoviePlayerView initWithFrame:]
  -[PLMoviePlayerView player]
  -[PLMoviePlayerView setPlayer:]
  -[PLMoviePlayerView videoView]
  -[PLMoviePlayerView setScaleMode:]
  -[PLMoviePlayerView destinationPlaceholderStyle]
  -[PLMoviePlayerView setScaleMode:duration:]
  -[PLMoviePlayerView reattachVideoView]
  -[PLMoviePlayerView isDestinationPlaceholderHidden]
  -[PLMoviePlayerView setDestinationPlaceholderHidden:]
  -[PLMoviePlayerView _installBackgroundView:]


PLPhotoTileCloudPlaceholderView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools <PLTilePlaceholderView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PLPhotoTileCloudPlaceholderView dealloc]
  -[PLPhotoTileCloudPlaceholderView initWithFrame:]
  -[PLPhotoTileCloudPlaceholderView layoutSubviews]
  -[PLPhotoTileCloudPlaceholderView pointInside:withEvent:]
  -[PLPhotoTileCloudPlaceholderView setImageRect:]
  -[PLPhotoTileCloudPlaceholderView showLoadingIndicator]
  -[PLPhotoTileCloudPlaceholderView fadeOutSoonIfNeededAndRemoveFromSuperview:]
  -[PLPhotoTileCloudPlaceholderView showLoadingIndicatorWhenReady]
  -[PLPhotoTileCloudPlaceholderView showErrorIndicator]
  -[PLPhotoTileCloudPlaceholderView updateCloudDownloadProgress:]
  -[PLPhotoTileCloudPlaceholderView setToolbarVisible:]
  -[PLPhotoTileCloudPlaceholderView setRetryDelegate:]
  -[PLPhotoTileCloudPlaceholderView _retryDownload]


PLPhotoTilePlaceholderView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools <PLTilePlaceholderView>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PLPhotoTilePlaceholderView dealloc]
  -[PLPhotoTilePlaceholderView initWithFrame:]
  -[PLPhotoTilePlaceholderView layoutSubviews]
  -[PLPhotoTilePlaceholderView setImageRect:]
  -[PLPhotoTilePlaceholderView showLoadingIndicator]
  -[PLPhotoTilePlaceholderView fadeOutSoonIfNeededAndRemoveFromSuperview:]
  -[PLPhotoTilePlaceholderView showLoadingIndicatorWhenReady]
  -[PLPhotoTilePlaceholderView showErrorIndicator]
  -[PLPhotoTilePlaceholderView updateCloudDownloadProgress:]
  -[PLPhotoTilePlaceholderView setToolbarVisible:]


PLTileContainerView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
  // instance methods
  -[PLTileContainerView initWithFrame:]
  -[PLTileContainerView canBecomeFirstResponder]
  -[PLTileContainerView willMoveToSuperview:]
  -[PLTileContainerView initWithFrame:photoTileController:]
  -[PLTileContainerView clearBackReference]


PLPhotoTileViewController : UIViewController /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools <UIScrollViewDelegate, UIGestureRecognizerDelegate, PLPhotoTileCloudPlaceholderViewDelegate>
 @property  UIView *_customCenterOverlay
 @property  PHAsset *photo
 @property  int inflightFullSizeImageRequestID
 @property  UIImage *thumbnailImage
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} tileFrame
 @property  UIImage *unscaledImage
 @property  BOOL centerContentVertically
 @property  {UIEdgeInsets=dddd} overlayInsets
 @property  BOOL forceNativeScreenScale
 @property  BOOL force1XCroppedImage
 @property  NSNumber *maxZoomScaleOverride
 @property  BOOL wantsCompactLayout
 @property  BOOL reviewing
 @property  BOOL picked
 @property  BOOL shouldHideProgressIndicator
 @property  BOOL shouldSupressViewWillTransitionToSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLPhotoTileViewController _shouldForwardViewWillTransitionToSize]
  +[PLPhotoTileViewController tileSize]
  +[PLPhotoTileViewController shouldShowPlaceholderForAsset:]
  +[PLPhotoTileViewController tvOutTileSize]
  +[PLPhotoTileViewController newPhotoTileViewControllerWithFrame:imageRef:imageOrientation:allowZoomToFill:mode:]
  +[PLPhotoTileViewController newPhotoTileViewControllerWithFrame:image:allowZoomToFill:mode:]
  +[PLPhotoTileViewController newPhotoTileViewControllerWithFrame:modelPhoto:mode:]

  // instance methods
  -[PLPhotoTileViewController init]
  -[PLPhotoTileViewController dealloc]
  -[PLPhotoTileViewController image]
  -[PLPhotoTileViewController imageOrientation]
  -[PLPhotoTileViewController _imageOrientation]
  -[PLPhotoTileViewController loadView]
  -[PLPhotoTileViewController gestureRecognizer:shouldReceiveTouch:]
  -[PLPhotoTileViewController imageView]
  -[PLPhotoTileViewController scrollViewDidZoom:]
  -[PLPhotoTileViewController scrollViewWillBeginDragging:]
  -[PLPhotoTileViewController scrollViewDidEndDragging:willDecelerate:]
  -[PLPhotoTileViewController scrollViewDidEndDecelerating:]
  -[PLPhotoTileViewController viewForZoomingInScrollView:]
  -[PLPhotoTileViewController scrollViewWillBeginZooming:withView:]
  -[PLPhotoTileViewController scrollViewDidEndZooming:withView:atScale:]
  -[PLPhotoTileViewController viewWillAppear:]
  -[PLPhotoTileViewController viewWillTransitionToSize:withTransitionCoordinator:]
  -[PLPhotoTileViewController didMoveToParentViewController:]
  -[PLPhotoTileViewController viewDidLayoutSubviews]
  -[PLPhotoTileViewController viewDidAppear:]
  -[PLPhotoTileViewController viewDidDisappear:]
  -[PLPhotoTileViewController shouldAutorotateToInterfaceOrientation:]
  -[PLPhotoTileViewController allowsEditing]
  -[PLPhotoTileViewController scrollView]
  -[PLPhotoTileViewController viewSafeAreaInsetsDidChange]
  -[PLPhotoTileViewController updateViewConstraints]
  -[PLPhotoTileViewController applicationWillResignActive:]
  -[PLPhotoTileViewController applicationDidBecomeActive:]
  -[PLPhotoTileViewController _updatePlaceholderVisibility]
  -[PLPhotoTileViewController setZoomScale:]
  -[PLPhotoTileViewController scrollView:contentSizeForZoomScale:withProposedSize:]
  -[PLPhotoTileViewController photo]
  -[PLPhotoTileViewController setVideoView:]
  -[PLPhotoTileViewController videoView]
  -[PLPhotoTileViewController setFullSizeImage:]
  -[PLPhotoTileViewController thumbnailImage]
  -[PLPhotoTileViewController setThumbnailImage:]
  -[PLPhotoTileViewController tileFrame]
  -[PLPhotoTileViewController setPicked:]
  -[PLPhotoTileViewController minZoomScale]
  -[PLPhotoTileViewController updateZoomScales]
  -[PLPhotoTileViewController resetZoom]
  -[PLPhotoTileViewController _handleDoubleTap:]
  -[PLPhotoTileViewController _newOriginalImageForPickerFromCachedData]
  -[PLPhotoTileViewController updateCloudDownloadProgress:]
  -[PLPhotoTileViewController _viewWillMoveToSuperView:]
  -[PLPhotoTileViewController retryDownload]
  -[PLPhotoTileViewController setOverlayInsets:]
  -[PLPhotoTileViewController initWithModelPhoto:image:frame:isThumbnail:imageOrientation:allowZoomToFill:mode:]
  -[PLPhotoTileViewController initForPageController]
  -[PLPhotoTileViewController initWithModelPhoto:thumbnailImage:size:]
  -[PLPhotoTileViewController cachingImageManager]
  -[PLPhotoTileViewController _teardownDispatchTimer]
  -[PLPhotoTileViewController tileIsOnScreen]
  -[PLPhotoTileViewController _setPhoto:]
  -[PLPhotoTileViewController _updateVideoViewForModelPhoto]
  -[PLPhotoTileViewController setTileFrame:]
  -[PLPhotoTileViewController setCropOverlayRect:forCropRect:]
  -[PLPhotoTileViewController setZoomingGesturesEnabled:]
  -[PLPhotoTileViewController forceZoomingGesturesEnabled]
  -[PLPhotoTileViewController expandableImageView]
  -[PLPhotoTileViewController _newCGImageBackedUIImageFromImage:]
  -[PLPhotoTileViewController updateCenterOverlay]
  -[PLPhotoTileViewController _setCustomCenterOverlay:]
  -[PLPhotoTileViewController hideContentView]
  -[PLPhotoTileViewController showContentView]
  -[PLPhotoTileViewController tileDelegate]
  -[PLPhotoTileViewController setTileDelegate:]
  -[PLPhotoTileViewController isTVOut]
  -[PLPhotoTileViewController setTVOut:]
  -[PLPhotoTileViewController userDidAdjustWallpaper]
  -[PLPhotoTileViewController _clientIsWallpaper]
  -[PLPhotoTileViewController setClientIsWallpaper:]
  -[PLPhotoTileViewController gesturesEnabled]
  -[PLPhotoTileViewController setGesturesEnabled:]
  -[PLPhotoTileViewController _repositionBadgeView]
  -[PLPhotoTileViewController photoShouldHaveHDRBadge]
  -[PLPhotoTileViewController photoShouldHaveAvalancheBadge]
  -[PLPhotoTileViewController setAvalancheBadgesHidden:]
  -[PLPhotoTileViewController _setupBadgeView]
  -[PLPhotoTileViewController _showBadgeViewIfAppropriate]
  -[PLPhotoTileViewController setBadgeVisible:]
  -[PLPhotoTileViewController setBadgeVisible:animated:]
  -[PLPhotoTileViewController _configureViews]
  -[PLPhotoTileViewController installVideoOverlay:]
  -[PLPhotoTileViewController _installSubview:]
  -[PLPhotoTileViewController _updateSubviewOrdering]
  -[PLPhotoTileViewController _updatePlaceholderViewAnimated:]
  -[PLPhotoTileViewController _centerImageInScrollView]
  -[PLPhotoTileViewController _adjustScrollViewContentOffsetForInsets]
  -[PLPhotoTileViewController _updateContentInset]
  -[PLPhotoTileViewController _updatePlaceholderImageRect]
  -[PLPhotoTileViewController setShouldHideProgressIndicator:]
  -[PLPhotoTileViewController _updateModelPhotoWithImage:]
  -[PLPhotoTileViewController _updateAggdKeys]
  -[PLPhotoTileViewController _setImage:isThumbnail:preserveFrame:]
  -[PLPhotoTileViewController refreshTileWithFullScreenImage:modelPhoto:]
  -[PLPhotoTileViewController didLoadImage]
  -[PLPhotoTileViewController _removePlaceholderView]
  -[PLPhotoTileViewController showErrorPlaceholderView]
  -[PLPhotoTileViewController hasFullSizeImage]
  -[PLPhotoTileViewController cancelFullSizeImageRequest]
  -[PLPhotoTileViewController updateForVisibleOverlays:]
  -[PLPhotoTileViewController noteParentViewControllerDidDisappear]
  -[PLPhotoTileViewController _performRotationUpdatesWithDuration:size:]
  -[PLPhotoTileViewController _resetZoomCommon]
  -[PLPhotoTileViewController ensureFullSizeImageLoaded]
  -[PLPhotoTileViewController _handleSingleTap:]
  -[PLPhotoTileViewController _requestFullSizeImage]
  -[PLPhotoTileViewController _handleFullSizeImageRequestResult:dataUTI:orientation:]
  -[PLPhotoTileViewController newImageWithCropRect:minimalCropDimension:croppedImageData:fullScreenImageData:imageCropRect:intersectCropWithFullRect:]
  -[PLPhotoTileViewController _getFullScreenImageData:forImage:fullSize:imageView:screenScaleTransform:]
  -[PLPhotoTileViewController _newImageForAsset:targetSize:cropRect:fullSize:]
  -[PLPhotoTileViewController dictionaryWithCroppedImageForRect:minimalCropDimension:withOptions:]
  -[PLPhotoTileViewController zoomToScale:animated:completionBlock:]
  -[PLPhotoTileViewController _setDidEndZoomingBlock:]
  -[PLPhotoTileViewController _performDidEndZoomBlock]
  -[PLPhotoTileViewController minRotatedScale]
  -[PLPhotoTileViewController _calculateZoomScale:inView:]
  -[PLPhotoTileViewController zoomToFillScale]
  -[PLPhotoTileViewController zoomToFitScale]
  -[PLPhotoTileViewController defaultZoomScale]
  -[PLPhotoTileViewController currentToMinZoomRatio]
  -[PLPhotoTileViewController currentToDefaultZoomRatio]
  -[PLPhotoTileViewController isZoomedOut]
  -[PLPhotoTileViewController setOrientationDelegate:]
  -[PLPhotoTileViewController _setDefaultZoomScale]
  -[PLPhotoTileViewController reloadZoomScale]
  -[PLPhotoTileViewController setAllowsZoomToFill:]
  -[PLPhotoTileViewController updateAfterCollapse]
  -[PLPhotoTileViewController _adjustZoomForEnteringMode:]
  -[PLPhotoTileViewController setLockedUnderCropOverlay:]
  -[PLPhotoTileViewController _setupReviewCheckmark]
  -[PLPhotoTileViewController setReviewing:]
  -[PLPhotoTileViewController setReviewing:animated:]
  -[PLPhotoTileViewController _updateReviewCheckmark]
  -[PLPhotoTileViewController centerContentVertically]
  -[PLPhotoTileViewController setCenterContentVertically:]
  -[PLPhotoTileViewController unscaledImage]
  -[PLPhotoTileViewController setUnscaledImage:]
  -[PLPhotoTileViewController forceNativeScreenScale]
  -[PLPhotoTileViewController setForceNativeScreenScale:]
  -[PLPhotoTileViewController force1XCroppedImage]
  -[PLPhotoTileViewController setForce1XCroppedImage:]
  -[PLPhotoTileViewController inflightFullSizeImageRequestID]
  -[PLPhotoTileViewController setInflightFullSizeImageRequestID:]
  -[PLPhotoTileViewController overlayInsets]
  -[PLPhotoTileViewController maxZoomScaleOverride]
  -[PLPhotoTileViewController setMaxZoomScaleOverride:]
  -[PLPhotoTileViewController wantsCompactLayout]
  -[PLPhotoTileViewController setWantsCompactLayout:]
  -[PLPhotoTileViewController reviewing]
  -[PLPhotoTileViewController picked]
  -[PLPhotoTileViewController shouldHideProgressIndicator]
  -[PLPhotoTileViewController shouldSupressViewWillTransitionToSize]
  -[PLPhotoTileViewController setShouldSupressViewWillTransitionToSize:]
  -[PLPhotoTileViewController _customCenterOverlay]


PLPhotosApplication : UIApplication /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools <UIApplicationDelegate>
 @property  BOOL isReachable
 @property  BOOL isOnWifi
 @property  NSString *currentTestName
 @property  NSDictionary *currentTestOptions
 @property  long long waitForGraphCount
 @property  NSSet *notificationSuppressionContexts
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  UIWindow *window

  // class methods
  +[PLPhotosApplication initialize]

  // instance methods
  -[PLPhotosApplication dealloc]
  -[PLPhotosApplication _applicationDidBecomeActive:]
  -[PLPhotosApplication _applicationDidEnterBackground:]
  -[PLPhotosApplication _applicationWillEnterForeground:]
  -[PLPhotosApplication applicationDidFinishLaunching:]
  -[PLPhotosApplication isReachable]
  -[PLPhotosApplication _networkReachabilityDidChange:]
  -[PLPhotosApplication photosPreferencesChanged]
  -[PLPhotosApplication useCompatibleSuspensionAnimation]
  -[PLPhotosApplication prepareForApplicationWillEnterForeground]
  -[PLPhotosApplication prepareForApplicationDidEnterBackground]
  -[PLPhotosApplication prepareForApplicationDidBecomeActive]
  -[PLPhotosApplication _updateSuspensionSettings]
  -[PLPhotosApplication _cleanUpOutboundSharingAssets]
  -[PLPhotosApplication setReceivingRemoteControlEvents:]
  -[PLPhotosApplication _startObservingReachabilityChanges]
  -[PLPhotosApplication _stopObservingReachabilityChanges]
  -[PLPhotosApplication enableNetworkObservation]
  -[PLPhotosApplication disableNetworkObservation]
  -[PLPhotosApplication _registerForPhotoStreamActivityNotifications]
  -[PLPhotosApplication _unregisterForPhotoStreamActivityNotifications]
  -[PLPhotosApplication _updateNetworkActivityIndicatorAsync]
  -[PLPhotosApplication _updatePhotoStreamProgressDisplay]
  -[PLPhotosApplication _updateSharedPhotoStreamProgressDisplay]
  -[PLPhotosApplication handleImportCompleteAlertResponse:flags:]
  -[PLPhotosApplication isOnWifi]
  -[PLPhotosApplication currentTestName]
  -[PLPhotosApplication setCurrentTestName:]
  -[PLPhotosApplication currentTestOptions]
  -[PLPhotosApplication setCurrentTestOptions:]
  -[PLPhotosApplication waitForGraphCount]
  -[PLPhotosApplication setWaitForGraphCount:]
  -[PLPhotosApplication notificationSuppressionContexts]
  -[PLPhotosApplication setNotificationSuppressionContexts:]


PLPhotosDefaults : NSObject
  // class methods
  +[PLPhotosDefaults sharedInstance]
  +[PLPhotosDefaults randomTransition]

  // instance methods
  -[PLPhotosDefaults init]
  -[PLPhotosDefaults dealloc]
  -[PLPhotosDefaults transition]
  -[PLPhotosDefaults setTransition:]
  -[PLPhotosDefaults reloadPhotoDefaultValues]
  -[PLPhotosDefaults _reloadPhotoDefaultValuesAndNotify:]
  -[PLPhotosDefaults summarizeMomentSections]
  -[PLPhotosDefaults transitionForAnimationMovingForward:]
  -[PLPhotosDefaults shouldPlayMusic]
  -[PLPhotosDefaults setShouldPlayMusic:]
  -[PLPhotosDefaults setMusicCollection:]
  -[PLPhotosDefaults musicCollection]


PLProgressHUD : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
  // instance methods
  -[PLProgressHUD dealloc]
  -[PLProgressHUD setText:]
  -[PLProgressHUD done]
  -[PLProgressHUD initWithFrame:]
  -[PLProgressHUD sizeThatFits:]
  -[PLProgressHUD layoutSubviews]
  -[PLProgressHUD showInView:]
  -[PLProgressHUD hide]


PLProgressView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  long long backgroundType
 @property  UIView *backgroundView
 @property  UIView *backgroundTintedView
 @property  _UIBackdropView *backgroundBlurredView
 @property  float percentComplete
 @property  BOOL showsCancelButton
 @property  @? cancelationHandler

  // instance methods
  -[PLProgressView dealloc]
  -[PLProgressView initWithFrame:]
  -[PLProgressView backgroundType]
  -[PLProgressView backgroundView]
  -[PLProgressView layoutSubviews]
  -[PLProgressView percentComplete]
  -[PLProgressView setBackgroundView:]
  -[PLProgressView showsCancelButton]
  -[PLProgressView setShowsCancelButton:]
  -[PLProgressView setPercentComplete:]
  -[PLProgressView setLabelText:]
  -[PLProgressView setBackgroundType:]
  -[PLProgressView _cancel:]
  -[PLProgressView _installBackgroundView]
  -[PLProgressView _syncToBackgroundType]
  -[PLProgressView _installBackgroundBlurredView]
  -[PLProgressView _removeBackgroundBlurredView]
  -[PLProgressView _installBackgroundTintedView]
  -[PLProgressView _removeBackgroundTintedView]
  -[PLProgressView updateUIForPublishingAgent:]
  -[PLProgressView backgroundTintedView]
  -[PLProgressView setBackgroundTintedView:]
  -[PLProgressView backgroundBlurredView]
  -[PLProgressView setBackgroundBlurredView:]
  -[PLProgressView cancelationHandler]
  -[PLProgressView setCancelationHandler:]


PLPublishingAgent : NSObject <PLDataArrayInputStreamProgressDelegate>
 @property  <PLPublishingAgentDelegate> *delegate
 @property  BOOL ownerIsCamera
 @property  long long approximateHDUploadSize
 @property  long long approximateSDUploadSize
 @property  BOOL mediaIsHDVideo
 @property  BOOL enableHDUpload
 @property  BOOL needsTrimming
 @property  int remakerMode
 @property  int selectedOption
 @property  float progressMultiplier
 @property  BOOL allowsHDOver3GUpload
 @property  BOOL shouldCancelPublish
 @property  BOOL allowsCellularAccessForRequests

  // class methods
  +[PLPublishingAgent canUploadHDVideoOverCellular]
  +[PLPublishingAgent publishingAgentForBundleNamed:toPublishMedia:]

  // instance methods
  -[PLPublishingAgent dealloc]
  -[PLPublishingAgent userInfo]
  -[PLPublishingAgent delegate]
  -[PLPublishingAgent setDelegate:]
  -[PLPublishingAgent setUserInfo:]
  -[PLPublishingAgent serviceName]
  -[PLPublishingAgent publish]
  -[PLPublishingAgent estimatedTimeRemaining]
  -[PLPublishingAgent snapshot]
  -[PLPublishingAgent dismiss]
  -[PLPublishingAgent percentComplete]
  -[PLPublishingAgent navigationController]
  -[PLPublishingAgent mediaData]
  -[PLPublishingAgent setMediaData:]
  -[PLPublishingAgent isPublishing]
  -[PLPublishingAgent setPublishing:]
  -[PLPublishingAgent _networkReachabilityDidChange:]
  -[PLPublishingAgent mediaURL]
  -[PLPublishingAgent cancelRemaking]
  -[PLPublishingAgent _updateStatisticsFromSnapshots]
  -[PLPublishingAgent tellAFriendBody]
  -[PLPublishingAgent tellAFriendSubject]
  -[PLPublishingAgent dataArrayInputStreamBytesWereRead:]
  -[PLPublishingAgent allowsCellularAccessForRequests]
  -[PLPublishingAgent _startNetworkObservation]
  -[PLPublishingAgent _stopNetworkObservation]
  -[PLPublishingAgent initWithMedia:]
  -[PLPublishingAgent _setUpPublishingParams]
  -[PLPublishingAgent mediaPath]
  -[PLPublishingAgent setMediaPath:]
  -[PLPublishingAgent setDeleteMediaFileAfterPublishing:]
  -[PLPublishingAgent deleteMediaFileAfterPublishing]
  -[PLPublishingAgent setRemakerMode:]
  -[PLPublishingAgent setTrimStartTime:andEndTime:]
  -[PLPublishingAgent _setApproximateVideoUploadSizes]
  -[PLPublishingAgent resignPublishingSheetResponders]
  -[PLPublishingAgent cancelButtonClicked]
  -[PLPublishingAgent doneButtonClicked]
  -[PLPublishingAgent _agentIsReadyToPublish:]
  -[PLPublishingAgent presentModalSheetInViewController:]
  -[PLPublishingAgent willDismiss]
  -[PLPublishingAgent mediaTitle]
  -[PLPublishingAgent isVideoMedia]
  -[PLPublishingAgent tellAFriendURL]
  -[PLPublishingAgent allowsTellingFriend]
  -[PLPublishingAgent allowsViewingOnHost]
  -[PLPublishingAgent maximumVideoDuration]
  -[PLPublishingAgent setTotalBytesWritten:totalBytes:]
  -[PLPublishingAgent remakingPercentComplete]
  -[PLPublishingAgent isRemaking]
  -[PLPublishingAgent _cancelRemaking:]
  -[PLPublishingAgent _transcodeVideo:]
  -[PLPublishingAgent videoRemakerDidBeginRemaking:]
  -[PLPublishingAgent _remakerDidFinish:]
  -[PLPublishingAgent videoRemakerDidEndRemaking:temporaryPath:]
  -[PLPublishingAgent videoRemaker:progressDidChange:]
  -[PLPublishingAgent progressViewMessageDuringRemake]
  -[PLPublishingAgent _remakerModeForSelectedOption]
  -[PLPublishingAgent showAlertWithError:]
  -[PLPublishingAgent ownerIsCamera]
  -[PLPublishingAgent setOwnerIsCamera:]
  -[PLPublishingAgent approximateHDUploadSize]
  -[PLPublishingAgent setApproximateHDUploadSize:]
  -[PLPublishingAgent approximateSDUploadSize]
  -[PLPublishingAgent setApproximateSDUploadSize:]
  -[PLPublishingAgent mediaIsHDVideo]
  -[PLPublishingAgent setMediaIsHDVideo:]
  -[PLPublishingAgent enableHDUpload]
  -[PLPublishingAgent setEnableHDUpload:]
  -[PLPublishingAgent needsTrimming]
  -[PLPublishingAgent setNeedsTrimming:]
  -[PLPublishingAgent remakerMode]
  -[PLPublishingAgent selectedOption]
  -[PLPublishingAgent setSelectedOption:]
  -[PLPublishingAgent progressMultiplier]
  -[PLPublishingAgent setProgressMultiplier:]
  -[PLPublishingAgent allowsHDOver3GUpload]
  -[PLPublishingAgent setAllowsHDOver3GUpload:]
  -[PLPublishingAgent shouldCancelPublish]
  -[PLPublishingAgent setShouldCancelPublish:]


PLPublishAlbum : NSObject
 @property  NSString *title

  // instance methods
  -[PLPublishAlbum dealloc]
  -[PLPublishAlbum compare:]
  -[PLPublishAlbum title]
  -[PLPublishAlbum setTitle:]


PLiPhotoMigrationSupport : NSObject
 @property  BOOL migrationWasInterrupted

  // class methods
  +[PLiPhotoMigrationSupport sharedInstance]

  // instance methods
  -[PLiPhotoMigrationSupport checkForUnmigratediPhotoContentWithCompletion:]
  -[PLiPhotoMigrationSupport migrateEachPreMigratediPhotoLibrary:completionHandler:]
  -[PLiPhotoMigrationSupport migrationWasInterrupted]
  -[PLiPhotoMigrationSupport _incrementInFlightMigrationCount]
  -[PLiPhotoMigrationSupport _decrementInFlightMigrationCount]
  -[PLiPhotoMigrationSupport _isMigrating]
  -[PLiPhotoMigrationSupport _inFlightMigrationMarkerFilePath]
  -[PLiPhotoMigrationSupport _validateUuid:]
  -[PLiPhotoMigrationSupport _displayableUuidWithUuid:]
  -[PLiPhotoMigrationSupport _firstFilePathWithAnyExtensionAtPath:extension:]
  -[PLiPhotoMigrationSupport _createParentDirectoryIfNecessaryWithPath:]
  -[PLiPhotoMigrationSupport _deleteiPhotoSubDirectoryWithDirectoryPath:subDirectoryName:description:]
  -[PLiPhotoMigrationSupport _preMigratediPhotoDir]
  -[PLiPhotoMigrationSupport _migratediPhotoDir]
  -[PLiPhotoMigrationSupport _iPhotoMediaDirUuidListSortedByDateCreatedWithDir:]
  -[PLiPhotoMigrationSupport _iPhotoToPhotosUuidMapTable]
  -[PLiPhotoMigrationSupport _migrateiPhotoLibraryWorkerWithProgressHandler:iPhotoLibraryDir:]
  -[PLiPhotoMigrationSupport fireMigrationOfiPhotoLibraryWithProgressHandler:]
  -[PLiPhotoMigrationSupport _migrateiPhotoLibraryWithProgressHandler:]


PLPublishingMedia : NSObject
 @property  id asset
 @property  BOOL isVideo
 @property  NSString *pathForVideoFile
 @property  NSURL *assetURL
 @property  BOOL isHDVideo
 @property  double duration

  // class methods
  +[PLPublishingMedia isValidPublishingMedia:]

  // instance methods
  -[PLPublishingMedia init]
  -[PLPublishingMedia dealloc]
  -[PLPublishingMedia isEqual:]
  -[PLPublishingMedia duration]
  -[PLPublishingMedia asset]
  -[PLPublishingMedia setAsset:]
  -[PLPublishingMedia setDuration:]
  -[PLPublishingMedia initWithAsset:]
  -[PLPublishingMedia isVideo]
  -[PLPublishingMedia assetURL]
  -[PLPublishingMedia setAssetURL:]
  -[PLPublishingMedia isHDVideo]
  -[PLPublishingMedia pathForVideoFile]
  -[PLPublishingMedia setIsVideo:]
  -[PLPublishingMedia initWithManagedAsset:]
  -[PLPublishingMedia initWithAVURLAsset:]
  -[PLPublishingMedia setPathForVideoFile:]
  -[PLPublishingMedia setIsHDVideo:]


PLRoundProgressView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  UIView *_contentView
 @property  CAShapeLayer *_sliceLayer
 @property  CAShapeLayer *_circleLayer
 @property  PLProgressArcLayer *_progressArcLayer
 @property  CALayer *_irisGlyphLayer
 @property  double _contentsScale
 @property  long long style
 @property  double progress

  // instance methods
  -[PLRoundProgressView dealloc]
  -[PLRoundProgressView progress]
  -[PLRoundProgressView style]
  -[PLRoundProgressView setProgress:]
  -[PLRoundProgressView initWithFrame:]
  -[PLRoundProgressView _contentView]
  -[PLRoundProgressView layoutSubviews]
  -[PLRoundProgressView didMoveToWindow]
  -[PLRoundProgressView initWithFrame:style:]
  -[PLRoundProgressView _updateSubviews]
  -[PLRoundProgressView _dynamicUserInterfaceTraitDidChange]
  -[PLRoundProgressView _setContentView:]
  -[PLRoundProgressView _contentsScale]
  -[PLRoundProgressView resetProgress]
  -[PLRoundProgressView setPieRadius:]
  -[PLRoundProgressView _updateUIProgress]
  -[PLRoundProgressView increaseUIProgress:]
  -[PLRoundProgressView stopProgressTimer]
  -[PLRoundProgressView toRadian:]
  -[PLRoundProgressView startProgressTimer]
  -[PLRoundProgressView recalculateIncreaseProgress:withTimeDiff:]
  -[PLRoundProgressView _sliceLayer]
  -[PLRoundProgressView _circleLayer]
  -[PLRoundProgressView _setContentsScale:]
  -[PLRoundProgressView _setProgressArcLayer:]
  -[PLRoundProgressView _updateSublayersContentsScale]
  -[PLRoundProgressView setInitialIncreaseRatePerFrame:]
  -[PLRoundProgressView _setSliceLayer:]
  -[PLRoundProgressView _setCircleLayer:]
  -[PLRoundProgressView _progressArcLayer]
  -[PLRoundProgressView _irisGlyphLayer]
  -[PLRoundProgressView _setIrisGlyphLayer:]


PLProgressArcLayer : CALayer /usr/lib/libMobileGestalt.dylib
 @property  double radius
 @property  double startAngle
 @property  double endAngle
 @property  double lineWidth

  // instance methods
  -[PLProgressArcLayer init]
  -[PLProgressArcLayer radius]
  -[PLProgressArcLayer setRadius:]
  -[PLProgressArcLayer setLineWidth:]
  -[PLProgressArcLayer lineWidth]
  -[PLProgressArcLayer drawInContext:]
  -[PLProgressArcLayer setStartAngle:]
  -[PLProgressArcLayer startAngle]
  -[PLProgressArcLayer endAngle]
  -[PLProgressArcLayer setEndAngle:]


PLSlalomRegionEditor : UIControl /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  <PLSlalomRegionEditorDelegate> *delegate
 @property  {UIEdgeInsets=dddd} trackInsets
 @property  double trimHandleWidth
 @property  unsigned long regionEditorStyle
 @property  double minValue
 @property  double maxValue
 @property  double startValue
 @property  double endValue
 @property  double zoomDelay
 @property  BOOL zoomAnimating
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} startHandleFrame
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} endHandleFrame

  // instance methods
  -[PLSlalomRegionEditor setEnabled:]
  -[PLSlalomRegionEditor delegate]
  -[PLSlalomRegionEditor setDelegate:]
  -[PLSlalomRegionEditor .cxx_destruct]
  -[PLSlalomRegionEditor intrinsicContentSize]
  -[PLSlalomRegionEditor initWithFrame:]
  -[PLSlalomRegionEditor gestureRecognizerShouldBegin:]
  -[PLSlalomRegionEditor sizeThatFits:]
  -[PLSlalomRegionEditor layoutSubviews]
  -[PLSlalomRegionEditor beginTrackingWithTouch:withEvent:]
  -[PLSlalomRegionEditor cancelTrackingWithEvent:]
  -[PLSlalomRegionEditor continueTrackingWithTouch:withEvent:]
  -[PLSlalomRegionEditor endTrackingWithTouch:withEvent:]
  -[PLSlalomRegionEditor setStartValue:]
  -[PLSlalomRegionEditor setEndValue:]
  -[PLSlalomRegionEditor isZoomAnimating]
  -[PLSlalomRegionEditor zoomDelay]
  -[PLSlalomRegionEditor setZoomDelay:]
  -[PLSlalomRegionEditor _trackFrame]
  -[PLSlalomRegionEditor maxValue]
  -[PLSlalomRegionEditor setMaxValue:]
  -[PLSlalomRegionEditor minValue]
  -[PLSlalomRegionEditor setMinValue:]
  -[PLSlalomRegionEditor _isZoomed]
  -[PLSlalomRegionEditor startValue]
  -[PLSlalomRegionEditor _zoomMinValue]
  -[PLSlalomRegionEditor _zoomMaxValue]
  -[PLSlalomRegionEditor _trimHandleWidth]
  -[PLSlalomRegionEditor setTrackInsets:]
  -[PLSlalomRegionEditor setStartValue:notify:]
  -[PLSlalomRegionEditor setEndValue:notify:]
  -[PLSlalomRegionEditor setZoomMinValue:maxValue:]
  -[PLSlalomRegionEditor setZoomAnimating:]
  -[PLSlalomRegionEditor setRegionEditorStyle:]
  -[PLSlalomRegionEditor startHandleFrame]
  -[PLSlalomRegionEditor endHandleFrame]
  -[PLSlalomRegionEditor _valueFromStartHandleFrame:]
  -[PLSlalomRegionEditor _valueFromEndHandleFrame:]
  -[PLSlalomRegionEditor _trackFrameNoZoom]
  -[PLSlalomRegionEditor _trackScale]
  -[PLSlalomRegionEditor _handleFrameForValue:isStart:]
  -[PLSlalomRegionEditor _valueFromHandleFrame:isStart:]
  -[PLSlalomRegionEditor _isTouch:inHandleIsStart:outTouchOffset:]
  -[PLSlalomRegionEditor _stopTrackingAndSendControlEvents:]
  -[PLSlalomRegionEditor _updateSlidersWithTouch:]
  -[PLSlalomRegionEditor _beginTrackingZoomWithTouch:]
  -[PLSlalomRegionEditor _cancelZoomTrackingIfNeccessaryWithTouch:]
  -[PLSlalomRegionEditor _cancelTrackingZoom]
  -[PLSlalomRegionEditor _zoomPressWasHeld]
  -[PLSlalomRegionEditor _cancelZoom]
  -[PLSlalomRegionEditor _updateTrack]
  -[PLSlalomRegionEditor _trackImageForZoom:]
  -[PLSlalomRegionEditor _tickColor]
  -[PLSlalomRegionEditor _trackColor]
  -[PLSlalomRegionEditor _handleTintColor]
  -[PLSlalomRegionEditor _drawCurveWithFlatEndsFromX:fromY:toX:toY:]
  -[PLSlalomRegionEditor _handleImage]
  -[PLSlalomRegionEditor trackInsets]
  -[PLSlalomRegionEditor trimHandleWidth]
  -[PLSlalomRegionEditor setTrimHandleWidth:]
  -[PLSlalomRegionEditor regionEditorStyle]
  -[PLSlalomRegionEditor endValue]


PLTVOutWindow : UIWindow /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
  // instance methods
  -[PLTVOutWindow init]
  -[PLTVOutWindow dealloc]
  -[PLTVOutWindow setVideoView:]
  -[PLTVOutWindow videoView]
  -[PLTVOutWindow _setupTargetScreen:]


PLTile : NSObject
  // instance methods
  -[PLTile dealloc]
  -[PLTile visible]
  -[PLTile setVisible:]
  -[PLTile setDecodedSurface:]
  -[PLTile decodedSurface]
  -[PLTile imageRect]
  -[PLTile setImageRect:]
  -[PLTile tileId]
  -[PLTile setTileId:]


PLTiledLayer : CALayer /usr/lib/libMobileGestalt.dylib <PLTileableLayer>
 @property  {CGSize=dd} jpegImageSize
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PLTiledLayer dealloc]
  -[PLTiledLayer removeAllTiles]
  -[PLTiledLayer flushCache]
  -[PLTiledLayer setVisibleRectangle:zoomScale:completionHandler:]
  -[PLTiledLayer setVisibleRectangle:zoomScale:]
  -[PLTiledLayer prepareForDecoding]
  -[PLTiledLayer zoomStartScaleForImage:placeholderImageSize:]
  -[PLTiledLayer setupConverterForSourceColorSpace:destinationColorSpace:]
  -[PLTiledLayer initWithJPEGData:placeholderImage:screenSize:]
  -[PLTiledLayer jpegImageSize]
  -[PLTiledLayer updateSubLayers:]
  -[PLTiledLayer runMetalConversionOnSurface:completionHandler:]
  -[PLTiledLayer runVImageConversionOnSurface:completionHandler:]
  -[PLTiledLayer decodeImageRectangle:forLevel:requestId:completionHandler:]
  -[PLTiledLayer visibleTileRegionHasChanged:level:]


PLUIEditImageViewController : PLUIImageViewController
 @property  id delegate
 @property  int mode

  // instance methods
  -[PLUIEditImageViewController dealloc]
  -[PLUIEditImageViewController delegate]
  -[PLUIEditImageViewController setDelegate:]
  -[PLUIEditImageViewController setMode:]
  -[PLUIEditImageViewController mode]
  -[PLUIEditImageViewController photo]
  -[PLUIEditImageViewController initWithPhoto:]
  -[PLUIEditImageViewController imageFormat]
  -[PLUIEditImageViewController setImageSavingOptions:]
  -[PLUIEditImageViewController saveOptions]
  -[PLUIEditImageViewController _contentAutoresizingMask]
  -[PLUIEditImageViewController _tileAutoresizingMask]
  -[PLUIEditImageViewController cropOverlayWasOKed:]
  -[PLUIEditImageViewController cropOverlay:didFinishSaving:]
  -[PLUIEditImageViewController cropOverlayWasCancelled:]
  -[PLUIEditImageViewController imageTile]
  -[PLUIEditImageViewController cropOverlayMode]


PHImageManagerSettings : PHSettings
 @property  BOOL allowImageRequests
 @property  BOOL allowCaching

  // class methods
  +[PHImageManagerSettings sharedSettings]
  +[PHImageManagerSettings settingsControllerModule]

  // instance methods
  -[PHImageManagerSettings setDefaultValues]
  -[PHImageManagerSettings parentSettings]
  -[PHImageManagerSettings allowImageRequests]
  -[PHImageManagerSettings setAllowImageRequests:]
  -[PHImageManagerSettings allowCaching]
  -[PHImageManagerSettings setAllowCaching:]


PLUIView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  BOOL disableViewInPopoverRule

  // instance methods
  -[PLUIView didMoveToWindow]
  -[PLUIView disableViewInPopoverRule]
  -[PLUIView setDisableViewInPopoverRule:]


PLUIEditVideoViewController : PLUIImageViewController <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
 @property  BOOL parentInPopoverException
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PLUIEditVideoViewController dealloc]
  -[PLUIEditVideoViewController delegate]
  -[PLUIEditVideoViewController setDelegate:]
  -[PLUIEditVideoViewController initWithProperties:]
  -[PLUIEditVideoViewController loadView]
  -[PLUIEditVideoViewController navigationItem]
  -[PLUIEditVideoViewController shouldAutorotateToInterfaceOrientation:]
  -[PLUIEditVideoViewController _displaysFullScreen]
  -[PLUIEditVideoViewController uiipc_imagePickerController]
  -[PLUIEditVideoViewController uiipc_imagePickerOptions]
  -[PLUIEditVideoViewController videoRemakerDidEndRemaking:temporaryPath:]
  -[PLUIEditVideoViewController cropOverlayMode]
  -[PLUIEditVideoViewController _viewClass]
  -[PLUIEditVideoViewController _editingForThirdParty]
  -[PLUIEditVideoViewController _setupNavigationItemAndTrimTitle:]
  -[PLUIEditVideoViewController initWithPhoto:trimTitle:]
  -[PLUIEditVideoViewController initWithVideoURL:trimTitle:]
  -[PLUIEditVideoViewController setImagePickerOptions:]
  -[PLUIEditVideoViewController _trimMessage]
  -[PLUIEditVideoViewController setViewClass:]
  -[PLUIEditVideoViewController didChooseVideoAtURL:options:]
  -[PLUIEditVideoViewController _cancelTrim:]
  -[PLUIEditVideoViewController previewFrame]
  -[PLUIEditVideoViewController _trimVideo:]
  -[PLUIEditVideoViewController videoViewScrubberYOrigin:forOrientation:]
  -[PLUIEditVideoViewController videoViewCanCreateMetadata:]
  -[PLUIEditVideoViewController videoViewPlaybackDidFail:]
  -[PLUIEditVideoViewController parentInPopoverException]
  -[PLUIEditVideoViewController setParentInPopoverException:]


PLUIImageViewController : UIViewController /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools <PLVideoViewDelegate, PLPhotoTileViewControllerDelegate, PLCropOverlayDelegate>
 @property  NSString *localizedUseButtonTitle
 @property  NSString *localizedTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PLUIImageViewController dealloc]
  -[PLUIImageViewController localizedTitle]
  -[PLUIImageViewController loadView]
  -[PLUIImageViewController traitCollectionDidChange:]
  -[PLUIImageViewController viewWillAppear:]
  -[PLUIImageViewController viewWillDisappear:]
  -[PLUIImageViewController viewWillLayoutSubviews]
  -[PLUIImageViewController viewDidAppear:]
  -[PLUIImageViewController preferredStatusBarUpdateAnimation]
  -[PLUIImageViewController _displaysFullScreen]
  -[PLUIImageViewController _imagePickerStatusBarStyle]
  -[PLUIImageViewController _removedAsTopViewController]
  -[PLUIImageViewController initWithImageData:cropRect:]
  -[PLUIImageViewController initWithUIImage:cropRect:]
  -[PLUIImageViewController setAllowsEditing:]
  -[PLUIImageViewController videoMaximumDuration]
  -[PLUIImageViewController videoQuality]
  -[PLUIImageViewController _preferredWhitePointAdaptivityStyle]
  -[PLUIImageViewController prefersStatusBarHidden]
  -[PLUIImageViewController initWithPhoto:]
  -[PLUIImageViewController imageFormat]
  -[PLUIImageViewController initWithVideoURL:]
  -[PLUIImageViewController customBackgroundColor]
  -[PLUIImageViewController cancelButtonTitle]
  -[PLUIImageViewController exportPreset]
  -[PLUIImageViewController forceNativeScreenScale]
  -[PLUIImageViewController force1XCroppedImage]
  -[PLUIImageViewController maxZoomScaleOverride]
  -[PLUIImageViewController videoRemakerDidBeginRemaking:]
  -[PLUIImageViewController videoRemakerDidEndRemaking:temporaryPath:]
  -[PLUIImageViewController _contentAutoresizingMask]
  -[PLUIImageViewController _tileAutoresizingMask]
  -[PLUIImageViewController cropOverlayWasOKed:]
  -[PLUIImageViewController cropOverlay:didFinishSaving:]
  -[PLUIImageViewController cropOverlayWasCancelled:]
  -[PLUIImageViewController cropOverlayMode]
  -[PLUIImageViewController _viewClass]
  -[PLUIImageViewController _trimMessage]
  -[PLUIImageViewController didChooseVideoAtURL:options:]
  -[PLUIImageViewController previewFrame]
  -[PLUIImageViewController videoViewScrubberYOrigin:forOrientation:]
  -[PLUIImageViewController videoViewCanCreateMetadata:]
  -[PLUIImageViewController cropOverlayPlay:]
  -[PLUIImageViewController cropOverlayPause:]
  -[PLUIImageViewController photoTileViewControllerAllowsEditing:]
  -[PLUIImageViewController photoTileViewController:willAppear:]
  -[PLUIImageViewController photoTileViewController:didAppear:]
  -[PLUIImageViewController photoTileViewController:didDisappear:]
  -[PLUIImageViewController photoTileViewControllerRequestsFullScreenImage:]
  -[PLUIImageViewController photoTileViewControllerRequestsFullSizeImage:]
  -[PLUIImageViewController photoTileViewControllerCancelImageRequests:]
  -[PLUIImageViewController photoTileViewControllerSingleTap:]
  -[PLUIImageViewController photoTileViewControllerDoubleTap:]
  -[PLUIImageViewController photoTileViewControllerWillBeginGesture:]
  -[PLUIImageViewController photoTileViewControllerDidEndGesture:]
  -[PLUIImageViewController videoViewCanBeginPlayback:]
  -[PLUIImageViewController videoViewIsReadyToBeginPlayback:]
  -[PLUIImageViewController videoViewDidBeginPlayback:]
  -[PLUIImageViewController videoViewDidEndPlayback:didFinish:]
  -[PLUIImageViewController initWithImage:cropRect:]
  -[PLUIImageViewController cropOverlay]
  -[PLUIImageViewController setCropOverlayDone]
  -[PLUIImageViewController _viewFrame]
  -[PLUIImageViewController localizedUseButtonTitle]
  -[PLUIImageViewController clientIsWallpaper]
  -[PLUIImageViewController wantsAutoloopUI]
  -[PLUIImageViewController wantsLegacyImageUI]
  -[PLUIImageViewController setupNavigationItem]
  -[PLUIImageViewController wantsStatusBarVisible]
  -[PLUIImageViewController desiredStatusBarAnimation]
  -[PLUIImageViewController isDisplayedInPhotoPicker]
  -[PLUIImageViewController didUpdateNavigationBarAppearance]
  -[PLUIImageViewController attachScrubberPalette]
  -[PLUIImageViewController _editabilityChanged:]
  -[PLUIImageViewController _updateGestureSettings]
  -[PLUIImageViewController _enableCropOverlayIfNecessary]
  -[PLUIImageViewController _enableCropOverlay]
  -[PLUIImageViewController _handleVideoSelected]
  -[PLUIImageViewController beginDisplayingProgress]
  -[PLUIImageViewController handleAutoloopSelected]
  -[PLUIImageViewController videoView:scrubberWasCreated:slalomRegionEditor:]
  -[PLUIImageViewController videoViewDidPausePlayback:didFinish:]
  -[PLUIImageViewController photoTileViewControllerIsDisplayingLandscape:]
  -[PLUIImageViewController handleMediaSelectionUsingTile:managedAsset:args:includeEditing:]
  -[PLUIImageViewController handleVideoSelectionWithURL:args:]
  -[PLUIImageViewController doNotTranscode]
  -[PLUIImageViewController viewImageBeforeSelecting]
  -[PLUIImageViewController disableVideoTrimMessage]
  -[PLUIImageViewController chooseButtonTitle]
  -[PLUIImageViewController imagePickerAllowsEditing]
  -[PLUIImageViewController imagePickerSavingOptions]


PLUIPrivacyViewController : UIViewController /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
  // instance methods
  -[PLUIPrivacyViewController dealloc]
  -[PLUIPrivacyViewController loadView]
  -[PLUIPrivacyViewController shouldAutorotateToInterfaceOrientation:]
  -[PLUIPrivacyViewController _setImagePickerMediaTypes:]
  -[PLUIPrivacyViewController _showCancelButton]
  -[PLUIPrivacyViewController _updateAccessDeniedView]
  -[PLUIPrivacyViewController _cancelButtonClicked:]


PLHighFidelityVideoOverlayButton : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools <PLVideoOverlayButton>
  // instance methods
  -[PLHighFidelityVideoOverlayButton dealloc]
  -[PLHighFidelityVideoOverlayButton style]
  -[PLHighFidelityVideoOverlayButton layoutSubviews]
  -[PLHighFidelityVideoOverlayButton initWithStyle:]
  -[PLHighFidelityVideoOverlayButton setTarget:action:]
  -[PLHighFidelityVideoOverlayButton _playButtonTapped:]
  -[PLHighFidelityVideoOverlayButton _playButtonActivate:]
  -[PLHighFidelityVideoOverlayButton _playButtonDeactivate:]


PLFlatVideoOverlayButton : UIButton /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools <PLVideoOverlayButton>
  // instance methods
  -[PLFlatVideoOverlayButton style]
  -[PLFlatVideoOverlayButton initWithStyle:]
  -[PLFlatVideoOverlayButton setTarget:action:]
  -[PLFlatVideoOverlayButton _handleTap:]
  -[PLFlatVideoOverlayButton _normalButtonImage]
  -[PLFlatVideoOverlayButton _highlightedButtonImage]
  -[PLFlatVideoOverlayButton _createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:]


PLVideoRemaker : NSObject
 @property  PFVideoAVObjectBuilder *_videoAVObjectBuilder
 @property  NSObject<PLVideoRemakerDelegate> *delegate
 @property  @? progressHandler
 @property  BOOL shouldExportToPhotoDataDirectory
 @property  NSString *exportPresetOverride
 @property  NSString *exportPreset
 @property  NSString *customAccessibilityLabel

  // class methods
  +[PLVideoRemaker fileLengthLimitForRemakerMode:]
  +[PLVideoRemaker maximumDurationForTrimMode:]
  +[PLVideoRemaker approximateByteSizeForMode:duration:]
  +[PLVideoRemaker getHDRemakerModeForMode:]
  +[PLVideoRemaker getSDRemakerModeForMode:]

  // instance methods
  -[PLVideoRemaker dealloc]
  -[PLVideoRemaker delegate]
  -[PLVideoRemaker setDelegate:]
  -[PLVideoRemaker .cxx_destruct]
  -[PLVideoRemaker setMode:]
  -[PLVideoRemaker cancel]
  -[PLVideoRemaker _metadata]
  -[PLVideoRemaker duration]
  -[PLVideoRemaker mode]
  -[PLVideoRemaker progressHandler]
  -[PLVideoRemaker setProgressHandler:]
  -[PLVideoRemaker setDuration:]
  -[PLVideoRemaker _updateProgress]
  -[PLVideoRemaker setCustomAccessibilityLabel:]
  -[PLVideoRemaker trimStartTime]
  -[PLVideoRemaker trimEndTime]
  -[PLVideoRemaker exportPreset]
  -[PLVideoRemaker progressView]
  -[PLVideoRemaker setTrimStartTime:]
  -[PLVideoRemaker setTrimEndTime:]
  -[PLVideoRemaker initWithPublishingMedia:]
  -[PLVideoRemaker initWithAVAsset:]
  -[PLVideoRemaker initWithManagedAsset:applyVideoAdjustments:]
  -[PLVideoRemaker messageForRemakingProgress]
  -[PLVideoRemaker _resetProgressTimer]
  -[PLVideoRemaker _removeProgressTimer]
  -[PLVideoRemaker remake]
  -[PLVideoRemaker _fileFormatForURL:]
  -[PLVideoRemaker _didEndRemakingWithTemporaryPath:]
  -[PLVideoRemaker _exportCompletedWithSuccess:]
  -[PLVideoRemaker shouldExportToPhotoDataDirectory]
  -[PLVideoRemaker setShouldExportToPhotoDataDirectory:]
  -[PLVideoRemaker exportPresetOverride]
  -[PLVideoRemaker setExportPresetOverride:]
  -[PLVideoRemaker customAccessibilityLabel]
  -[PLVideoRemaker _videoAVObjectBuilder]


PLAssetImageGenerator : NSObject
 @property  AVAssetImageGenerator *imageGenerator
 @property  BOOL inUse

  // instance methods
  -[PLAssetImageGenerator dealloc]
  -[PLAssetImageGenerator initWithAsset:]
  -[PLAssetImageGenerator setInUse:]
  -[PLAssetImageGenerator inUse]
  -[PLAssetImageGenerator imageGenerator]
  -[PLAssetImageGenerator setImageGenerator:]


PLVideoPosterFrameView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} imageFrame

  // instance methods
  -[PLVideoPosterFrameView dealloc]
  -[PLVideoPosterFrameView image]
  -[PLVideoPosterFrameView setImage:]
  -[PLVideoPosterFrameView setFrame:]
  -[PLVideoPosterFrameView initWithFrame:]
  -[PLVideoPosterFrameView layoutSubviews]
  -[PLVideoPosterFrameView imageView]
  -[PLVideoPosterFrameView setScaleMode:]
  -[PLVideoPosterFrameView imageFrame]


PLVideoView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools <UIMovieScrubberDelegate, UIMovieScrubberDataSource, PLMoviePlayerControllerDelegate, PLSlalomRegionEditorDelegate>
 @property  NSString *_pathForVideoPreviewFile
 @property  NSString *_pathForPrebakedLandscapeScrubberThumbnails
 @property  NSString *_pathForPrebakedPortraitScrubberThumbnails
 @property  BOOL _mediaIsPlayable
 @property  BOOL _didSetPhotoData
 @property  BOOL _didInsertMoviePlayerView
 @property  BOOL _didEditSlalom
 @property  PFVideoAVObjectBuilder *_videoAVObjectBuilder
 @property  BOOL _isFetchingVideo
 @property  BOOL _localVideoUnavailable
 @property  long long _expectedNotificationsCount
 @property  PFVideoAdjustments *_adjustmentsToCommit
 @property  BOOL _canAttemptFetchingVideoDerivative
 @property  BOOL _attemptFetchingVideoDerivative
 @property  PLProgressStack *trimProgressStack
 @property  BOOL _slalomRegionEditorCreatedForScrubber
 @property  NSString *pathForVideoFile
 @property  <PLVideoViewDelegate> *delegate
 @property  PLPhotoTileViewController *imageTile
 @property  PLManagedAsset *videoCameraImage
 @property  PLManagedAsset *trimmedVideoClip
 @property  BOOL allowSlalomEditor
 @property  UIView *scrubberBackgroundView
 @property  UIImage *posterFrameImage
 @property  PLVideoPosterFrameView *posterFrameView
 @property  double duration
 @property  BOOL editing
 @property  double startTime
 @property  double endTime
 @property  NSString *videoPathAfterTrim
 @property  UIImageView *previewImageView
 @property  BOOL showsPlayOverlay
 @property  BOOL showsScrubber
 @property  BOOL prepareMoviePlayerForScrubberAutomatically
 @property  BOOL loadMediaImmediately
 @property  BOOL shouldPlayVideoWhenViewAppears
 @property  BOOL canEdit
 @property  BOOL scrubberIsSubview
 @property  double scrubberWidth
 @property  double currentTime
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[PLVideoView _enqueueOverlayPlayButton:]
  +[PLVideoView _dequeueOverlayPlayButton]
  +[PLVideoView videoViewForVideoFileAtURL:]

  // instance methods
  -[PLVideoView dealloc]
  -[PLVideoView delegate]
  -[PLVideoView setDelegate:]
  -[PLVideoView pause]
  -[PLVideoView stop]
  -[PLVideoView _reset]
  -[PLVideoView duration]
  -[PLVideoView _setDuration:]
  -[PLVideoView startTime]
  -[PLVideoView endTime]
  -[PLVideoView setProgress:]
  -[PLVideoView setFrame:]
  -[PLVideoView play]
  -[PLVideoView layoutSubviews]
  -[PLVideoView touchesEnded:withEvent:]
  -[PLVideoView viewWillAppear:]
  -[PLVideoView didMoveToSuperview]
  -[PLVideoView willMoveToSuperview:]
  -[PLVideoView hitTest:withEvent:]
  -[PLVideoView isEditing]
  -[PLVideoView setEditing:]
  -[PLVideoView setEditing:animated:]
  -[PLVideoView movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:]
  -[PLVideoView movieScrubber:valueDidChange:]
  -[PLVideoView movieScrubber:editingStartValueDidChange:]
  -[PLVideoView movieScrubber:editingEndValueDidChange:]
  -[PLVideoView movieScrubberWillBeginRequestingThumbnails:]
  -[PLVideoView movieScrubberDidFinishRequestingThumbnails:]
  -[PLVideoView movieScrubberWillBeginEditing:]
  -[PLVideoView movieScrubberDidCancelEditing:]
  -[PLVideoView movieScrubberDidBeginEditing:]
  -[PLVideoView movieScrubberEditingAnimationFinished:]
  -[PLVideoView movieScrubber:widthDelta:originXDelta:]
  -[PLVideoView movieScrubberDidBeginAnimatingZoom:]
  -[PLVideoView movieScrubberDidEndAnimatingZoom:]
  -[PLVideoView movieScrubber:willZoomToMinimumValue:maximumValue:]
  -[PLVideoView movieScrubberDuration:]
  -[PLVideoView movieScrubberDidBeginScrubbing:withHandle:]
  -[PLVideoView movieScrubberDidEndScrubbing:withHandle:]
  -[PLVideoView movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:]
  -[PLVideoView movieScrubber:requestThumbnailImageForTimestamp:]
  -[PLVideoView movieScrubberThumbnailAspectRatio:]
  -[PLVideoView setMaximumTrimLength:]
  -[PLVideoView currentTime]
  -[PLVideoView isPlaying]
  -[PLVideoView applicationWillResignActive]
  -[PLVideoView _screenDidConnect:]
  -[PLVideoView _screenDidDisconnect:]
  -[PLVideoView pathForVideoFile]
  -[PLVideoView _networkReachabilityDidChange:]
  -[PLVideoView viewDidAppear]
  -[PLVideoView previewImageView]
  -[PLVideoView canEdit]
  -[PLVideoView setCanEdit:]
  -[PLVideoView setCurrentTime:]
  -[PLVideoView _moviePlayer]
  -[PLVideoView toggleScaleMode:]
  -[PLVideoView isTrimming]
  -[PLVideoView applicationDidEnterBackground]
  -[PLVideoView _tearDownMoviePlayer]
  -[PLVideoView _cancelRemaking:]
  -[PLVideoView imageTile]
  -[PLVideoView _canCreateMetadata]
  -[PLVideoView _exportCompletedWithSuccess:]
  -[PLVideoView _videoAVObjectBuilder]
  -[PLVideoView slalomRegionEditorDidBeginEditing:withStartHandle:]
  -[PLVideoView slalomRegionEditorDidEndEditing:]
  -[PLVideoView slalomRegionEditorStartValueChanged:]
  -[PLVideoView slalomRegionEditorEndValueChanged:]
  -[PLVideoView slalomRegionEditorRequestForceZoom:]
  -[PLVideoView slalomRegionEditorRequestForceUnzoom:]
  -[PLVideoView moviePlayerControllerDidBecomeActiveController:]
  -[PLVideoView moviePlayerControllerWillResignAsActiveController:]
  -[PLVideoView moviePlayerExitRequest:exitReason:]
  -[PLVideoView moviePlayerReadyToPlay:]
  -[PLVideoView moviePlayerReadyToDisplay:]
  -[PLVideoView moviePlayerBufferingStateDidChange:]
  -[PLVideoView moviePlayerPlaybackStateDidChange:fromPlaybackState:]
  -[PLVideoView moviePlayerPlaybackRateDidChange:]
  -[PLVideoView moviePlayerPlaybackDidEnd:]
  -[PLVideoView moviePlayerDurationAvailable:]
  -[PLVideoView moviePlayerUpdatedDestinationPlaceholder:]
  -[PLVideoView moviePlayerWasSuspendedDuringPlayback:]
  -[PLVideoView moviePlayerEncounteredAuthenticationError:]
  -[PLVideoView moviePlayerShouldNotifyOnPreparationError:]
  -[PLVideoView moviePlayerControllerShouldAllowExternalPlayback:]
  -[PLVideoView moviePlayerDidChangeExternalPlaybackType:]
  -[PLVideoView moviePlayerRequestsPickedAirplayRoute:]
  -[PLVideoView moviePlayerHeadsetPlayPausePressed:]
  -[PLVideoView moviePlayerHeadsetNextTrackPressed:]
  -[PLVideoView moviePlayerHeadsetPreviousTrackPressed:]
  -[PLVideoView initWithFrame:videoCameraImage:orientation:]
  -[PLVideoView _initWithFrame:videoCameraImage:orientation:]
  -[PLVideoView _setupMoviePlayerIfNecessary]
  -[PLVideoView _insertMoviePlayerViewIfNecessary]
  -[PLVideoView _updateScrubberFrame]
  -[PLVideoView scrubberWidth]
  -[PLVideoView _scrubberBackgroundHeight]
  -[PLVideoView _createScrubberIfNeeded]
  -[PLVideoView _removeScrubber]
  -[PLVideoView _shouldShowSlalomEditor]
  -[PLVideoView _canAccessVideo]
  -[PLVideoView videoScrubber]
  -[PLVideoView slalomRegionEditor]
  -[PLVideoView videoOverlayPlayButton]
  -[PLVideoView _showVideoOverlay]
  -[PLVideoView _videoOverlayFadeOutDidFinish]
  -[PLVideoView _hideVideoOverlay:]
  -[PLVideoView removeVideoOverlay]
  -[PLVideoView _hideTrimMessageView:]
  -[PLVideoView updateScaleMode]
  -[PLVideoView _updateScaleModeForSize:]
  -[PLVideoView _setNeedsReloadScrubberThumbnails:]
  -[PLVideoView _reloadScrubberThumbnailsIfNeeded]
  -[PLVideoView _requestPreviewPosterFrameForVideoSize:]
  -[PLVideoView _savePreviewPosterFrameImage:]
  -[PLVideoView _prepareAndResumePlayback]
  -[PLVideoView _fetchNonlocalVideo]
  -[PLVideoView _fetchLocalContentEditingInput]
  -[PLVideoView _prepareMoviePlayerIfNeeded]
  -[PLVideoView _canHandleAdjustmentData:]
  -[PLVideoView _updateVideoAVObjectBuilderFromContentEditingInput:]
  -[PLVideoView _optionsForAVURLAsset]
  -[PLVideoView _assetForVideoPath:]
  -[PLVideoView _assetForVideoURL:]
  -[PLVideoView _configurePlayerForStreamedVideoIfNecessary]
  -[PLVideoView _updateScrubberForSlowMotion]
  -[PLVideoView _setMoviePlayerActive:]
  -[PLVideoView _playerIsAirplay]
  -[PLVideoView movieScrubber:timestampsStartingAt:endingAt:maxCount:]
  -[PLVideoView _saveCachedThumbnailsIfNecessary]
  -[PLVideoView _pathForOriginalFile]
  -[PLVideoView _pathForVideoPreviewFile]
  -[PLVideoView _pathForPrebakedLandscapeScrubberThumbnails]
  -[PLVideoView _pathForPrebakedPortraitScrubberThumbnails]
  -[PLVideoView _mediaIsPlayable]
  -[PLVideoView _mediaIsVideo]
  -[PLVideoView _mediaIsCloudSharedStreamedVideo]
  -[PLVideoView _shouldStreamCloudPhotoLibraryVideo]
  -[PLVideoView _shouldStreamVideo]
  -[PLVideoView _canPlayCloudSharedStreamedVideoWithLocalVideo]
  -[PLVideoView _didSetPhotoData]
  -[PLVideoView _loadThumbnailsIntoDictionary:isLandscape:aspectRatio:]
  -[PLVideoView _removeScrubberUpdateTimer]
  -[PLVideoView _resetScrubberUpdateTimer]
  -[PLVideoView _didScrubToValue:withHandle:]
  -[PLVideoView _addThumbnailRequestForTimestamp:isSummaryThumbnail:]
  -[PLVideoView _serviceImageGenerationRequests]
  -[PLVideoView _configureImageGenerator:thumbnailSize:forSummaryThumbnails:]
  -[PLVideoView _clearImageGenerators]
  -[PLVideoView showTrimMessage:withBottomY:]
  -[PLVideoView hideTrimMessage]
  -[PLVideoView _updateForEditing]
  -[PLVideoView _updateSlalomRegionEditorState]
  -[PLVideoView _setPlaying:]
  -[PLVideoView _setPlaybackDidBegin:]
  -[PLVideoView _scrubberAnimationFinished]
  -[PLVideoView _thumbnailsWereRegenerated:error:contextInfo:]
  -[PLVideoView importerFinishedProcessingTrimmedVideo:]
  -[PLVideoView _removeTrimProgressTimer]
  -[PLVideoView _resetTrimProgressTimer]
  -[PLVideoView _informDelegateAboutProgressChange:]
  -[PLVideoView _updateTrimProgress]
  -[PLVideoView deleteOriginalFileAfterTrim]
  -[PLVideoView wasTrimmedInPlace]
  -[PLVideoView trimUsingMode:saveACopy:]
  -[PLVideoView cancelTrim]
  -[PLVideoView _scrubberStartTime]
  -[PLVideoView videoPathAfterTrim]
  -[PLVideoView trimmedVideoClip]
  -[PLVideoView setTrimmedVideoClip:]
  -[PLVideoView newPreviewImageData:]
  -[PLVideoView _videoSnapshot]
  -[PLVideoView videoCameraImage]
  -[PLVideoView setImageTile:]
  -[PLVideoView handleDoubleTap]
  -[PLVideoView _didBeginPlayback]
  -[PLVideoView _verifyOrRestartPlayback]
  -[PLVideoView playButtonClicked:]
  -[PLVideoView playingToAirTunes]
  -[PLVideoView playingToVideoOut]
  -[PLVideoView _displayPlaySpinner]
  -[PLVideoView _removePlaySpinner]
  -[PLVideoView forceStop]
  -[PLVideoView _updateScrubberVisibilityWithDuration:]
  -[PLVideoView viewDidDisappear]
  -[PLVideoView commitPendingUpdatesWithCompletionHandler:]
  -[PLVideoView setPosterFrameImage:]
  -[PLVideoView posterFrameImage]
  -[PLVideoView _updateSnapshotImage]
  -[PLVideoView _invalidateSnapshotImage]
  -[PLVideoView _updatePosterImageView]
  -[PLVideoView _updatePosterFrameVisibility]
  -[PLVideoView setShowsPlayOverlay:]
  -[PLVideoView showsPlayOverlay]
  -[PLVideoView setShowsScrubber:]
  -[PLVideoView setShowsScrubber:duration:]
  -[PLVideoView showsScrubber]
  -[PLVideoView prepareMoviePlayer]
  -[PLVideoView notifyRequiredResourcesDownloaded]
  -[PLVideoView _setLocalVideoUnavailable:]
  -[PLVideoView _canEditDuration:]
  -[PLVideoView setScrubberIsSubview:]
  -[PLVideoView scrubberIsSubview]
  -[PLVideoView setLoadMediaImmediately:]
  -[PLVideoView loadMediaImmediately]
  -[PLVideoView _scrubToMovieTime:]
  -[PLVideoView notifyOfChange:shouldReloadBlock:]
  -[PLVideoView _scrubberTimeNeedsMapping]
  -[PLVideoView _movieScrubberDuration]
  -[PLVideoView _thumbnailSourceAsset]
  -[PLVideoView _thumbnailTimeFromScrubberTime:]
  -[PLVideoView _movieTimeFromScrubberTime:]
  -[PLVideoView _scrubberTimeFromMovieTime:]
  -[PLVideoView shouldShowCopyCalloutAtPoint:]
  -[PLVideoView _handleScreenConnectionChange:]
  -[PLVideoView _playbackFinished]
  -[PLVideoView _updateSlalomRegionEditorRange]
  -[PLVideoView _updateScrubberValue]
  -[PLVideoView updateForRotationWithDuration:isLandscape:]
  -[PLVideoView _enqueueAdjustmentsForCommit]
  -[PLVideoView _commitPendingAdjustmentsUpdate]
  -[PLVideoView _cancelDelayedCommitPendingAdjustmentsUpdate]
  -[PLVideoView _commitPendingAdjustmentsUpdateAndWait:completionHandler:]
  -[PLVideoView _scrubToSlalomRegionEditorStartHandle:]
  -[PLVideoView _canAirPlayCurrentVideo]
  -[PLVideoView _shouldPlayFlattenedVideo]
  -[PLVideoView _isFlattenedVideoUpToDate]
  -[PLVideoView _metadataForFlattenedVideo]
  -[PLVideoView _readMetadataFromPath:]
  -[PLVideoView _writeMetadata:toPath:]
  -[PLVideoView _filePathForFlattenedVideo]
  -[PLVideoView _filePathForFlattenedVideoMetadata]
  -[PLVideoView _deleteFileAtPath:]
  -[PLVideoView _flattenVideoWithCompletionHandler:]
  -[PLVideoView _cancelAirplayExportSession]
  -[PLVideoView setScrubberWidth:]
  -[PLVideoView posterFrameView]
  -[PLVideoView trimProgressStack]
  -[PLVideoView setTrimProgressStack:]
  -[PLVideoView allowSlalomEditor]
  -[PLVideoView setAllowSlalomEditor:]
  -[PLVideoView scrubberBackgroundView]
  -[PLVideoView prepareMoviePlayerForScrubberAutomatically]
  -[PLVideoView setPrepareMoviePlayerForScrubberAutomatically:]
  -[PLVideoView shouldPlayVideoWhenViewAppears]
  -[PLVideoView setShouldPlayVideoWhenViewAppears:]
  -[PLVideoView _didInsertMoviePlayerView]
  -[PLVideoView set_didInsertMoviePlayerView:]
  -[PLVideoView _didEditSlalom]
  -[PLVideoView _setDidEditSlalom:]
  -[PLVideoView _isFetchingVideo]
  -[PLVideoView _localVideoUnavailable]
  -[PLVideoView _expectedNotificationsCount]
  -[PLVideoView _adjustmentsToCommit]
  -[PLVideoView _canAttemptFetchingVideoDerivative]
  -[PLVideoView _setCanAttemptFetchingVideoDerivative:]
  -[PLVideoView _attemptFetchingVideoDerivative]
  -[PLVideoView _setAttemptFetchingVideoDerivative:]
  -[PLVideoView _slalomRegionEditorCreatedForScrubber]


PLVideoEditingOverlayView : UIView /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools
  // instance methods
  -[PLVideoEditingOverlayView setTitle:]
  -[PLVideoEditingOverlayView initWithFrame:]
  -[PLVideoEditingOverlayView setBody:]


PHResourceDownloadSettings : PHSettings
 @property  BOOL simulateDownload
 @property  BOOL simulateDownloadFailure

  // class methods
  +[PHResourceDownloadSettings sharedSettings]
  +[PHResourceDownloadSettings settingsControllerModule]

  // instance methods
  -[PHResourceDownloadSettings setDefaultValues]
  -[PHResourceDownloadSettings parentSettings]
  -[PHResourceDownloadSettings simulateDownload]
  -[PHResourceDownloadSettings setSimulateDownload:]
  -[PHResourceDownloadSettings simulateDownloadFailure]
  -[PHResourceDownloadSettings setSimulateDownloadFailure:]


PLWallpaperButton : UIButton /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools <_UIBackdropViewObserver>
 @property  UIImageView *titleMaskImageView
 @property  _UIBackdropView *backdropView

  // class methods
  +[PLWallpaperButton autoLayoutCommonWallpaperButton]
  +[PLWallpaperButton autoLayoutCommonWallpaperButtonWithStyle:]

  // instance methods
  -[PLWallpaperButton dealloc]
  -[PLWallpaperButton setEnabled:]
  -[PLWallpaperButton initWithFrame:]
  -[PLWallpaperButton setHighlighted:]
  -[PLWallpaperButton safeAreaInsetsDidChange]
  -[PLWallpaperButton backdropView]
  -[PLWallpaperButton setBackdropView:]
  -[PLWallpaperButton backdropViewDidChange:]
  -[PLWallpaperButton initWithFrame:style:]
  -[PLWallpaperButton setSelected:]
  -[PLWallpaperButton _updateContentEdgeInsets]
  -[PLWallpaperButton _setupBackdropView]
  -[PLWallpaperButton titleMaskImageView]
  -[PLWallpaperButton setTitleMaskImageView:]


PLWallpaperImageViewController : PLUIEditImageViewController <SBFLegibilitySettingsProviderDelegate>
 @property  long long previewVariant
 @property  long long previewType
 @property  BOOL isWallpaperEdit
 @property  long long _statusBarStyle
 @property  BOOL _statusBarHidden
 @property  SBSUIWallpaperPreviewViewController *wallpaperPreviewViewController
 @property  BOOL saveWallpaperData
 @property  NSString *wallpaperTitle
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[PLWallpaperImageViewController init]
  -[PLWallpaperImageViewController dealloc]
  -[PLWallpaperImageViewController observeValueForKeyPath:ofObject:change:context:]
  -[PLWallpaperImageViewController loadView]
  -[PLWallpaperImageViewController viewWillAppear:]
  -[PLWallpaperImageViewController viewWillDisappear:]
  -[PLWallpaperImageViewController viewDidDisappear:]
  -[PLWallpaperImageViewController _statusBarStyle]
  -[PLWallpaperImageViewController navigationItem]
  -[PLWallpaperImageViewController preferredStatusBarUpdateAnimation]
  -[PLWallpaperImageViewController _statusBarHidden]
  -[PLWallpaperImageViewController preferredStatusBarStyle]
  -[PLWallpaperImageViewController shouldAutorotateToInterfaceOrientation:]
  -[PLWallpaperImageViewController _setStatusBarHidden:]
  -[PLWallpaperImageViewController imageFormat]
  -[PLWallpaperImageViewController setPreviewType:]
  -[PLWallpaperImageViewController previewType]
  -[PLWallpaperImageViewController providerLegibilitySettingsChanged:]
  -[PLWallpaperImageViewController initWithWallpaperVariant:]
  -[PLWallpaperImageViewController uiipc_useTelephonyUI]
  -[PLWallpaperImageViewController _contentAutoresizingMask]
  -[PLWallpaperImageViewController _tileAutoresizingMask]
  -[PLWallpaperImageViewController cropOverlayWasOKed:]
  -[PLWallpaperImageViewController cropOverlayWasCancelled:]
  -[PLWallpaperImageViewController cropOverlayMode]
  -[PLWallpaperImageViewController setImageAsHomeScreenClicked:]
  -[PLWallpaperImageViewController setImageAsLockScreenClicked:]
  -[PLWallpaperImageViewController setImageAsHomeScreenAndLockScreenClicked:]
  -[PLWallpaperImageViewController motionToggledManually:]
  -[PLWallpaperImageViewController photoTileViewControllerRequestsFullScreenImage:]
  -[PLWallpaperImageViewController _viewFrame]
  -[PLWallpaperImageViewController clientIsWallpaper]
  -[PLWallpaperImageViewController setupNavigationItem]
  -[PLWallpaperImageViewController wantsStatusBarVisible]
  -[PLWallpaperImageViewController desiredStatusBarAnimation]
  -[PLWallpaperImageViewController setWallpaperPreviewViewController:]
  -[PLWallpaperImageViewController setWallpaperFromArgs:]
  -[PLWallpaperImageViewController setWallpaperSynchronouslyFromArgs:]
  -[PLWallpaperImageViewController prepareForBackground:]
  -[PLWallpaperImageViewController prepareForForeground:]
  -[PLWallpaperImageViewController initWithUIImage:]
  -[PLWallpaperImageViewController _adjustScrollViewGeometry]
  -[PLWallpaperImageViewController _updateTitles]
  -[PLWallpaperImageViewController _savePhoto]
  -[PLWallpaperImageViewController _backgroundCropWallpaper]
  -[PLWallpaperImageViewController _cropWallpaperFinished:]
  -[PLWallpaperImageViewController _displayWallpaperOptionsSheet]
  -[PLWallpaperImageViewController _updatePreviewFrame:]
  -[PLWallpaperImageViewController setupWallpaperPreview]
  -[PLWallpaperImageViewController saveWallpaperData]
  -[PLWallpaperImageViewController setSaveWallpaperData:]
  -[PLWallpaperImageViewController wallpaperTitle]
  -[PLWallpaperImageViewController setWallpaperTitle:]
  -[PLWallpaperImageViewController wallpaperPreviewViewController]
  -[PLWallpaperImageViewController previewVariant]
  -[PLWallpaperImageViewController setPreviewVariant:]
  -[PLWallpaperImageViewController isWallpaperEdit]
  -[PLWallpaperImageViewController setIsWallpaperEdit:]
  -[PLWallpaperImageViewController _setStatusBarStyle:]


PLMagicWallpaperImageViewController : PLWallpaperImageViewController
  // instance methods
  -[PLMagicWallpaperImageViewController loadView]
  -[PLMagicWallpaperImageViewController initWithMagicWallpaper:options:]


PLStaticWallpaperImageViewController : PLWallpaperImageViewController
 @property  BOOL colorSamplingEnabled
 @property  BOOL moveAndScaleDisabled

  // instance methods
  -[PLStaticWallpaperImageViewController viewWillAppear:]
  -[PLStaticWallpaperImageViewController viewDidLoad]
  -[PLStaticWallpaperImageViewController _preferredWhitePointAdaptivityStyle]
  -[PLStaticWallpaperImageViewController initWithPhoto:]
  -[PLStaticWallpaperImageViewController wallpaperImage]
  -[PLStaticWallpaperImageViewController providerLegibilitySettingsChanged:]
  -[PLStaticWallpaperImageViewController initWithImage:name:video:time:]
  -[PLStaticWallpaperImageViewController setWallpaperForLocations:]
  -[PLStaticWallpaperImageViewController setColorSamplingEnabled:]
  -[PLStaticWallpaperImageViewController colorSamplingEnabled]
  -[PLStaticWallpaperImageViewController photoTileViewControllerDidEndGesture:]
  -[PLStaticWallpaperImageViewController initWithUIImage:]
  -[PLStaticWallpaperImageViewController initWithUIImage:name:]
  -[PLStaticWallpaperImageViewController _findSubviewOfView:withClass:]
  -[PLStaticWallpaperImageViewController _wallPaperPreviewControllerForPhotoIrisAsset:]
  -[PLStaticWallpaperImageViewController _wallPaperPreviewControllerForAsset:]
  -[PLStaticWallpaperImageViewController _fetchImageForWallPaperAsset:resultHandler:]
  -[PLStaticWallpaperImageViewController moveAndScaleDisabled]
  -[PLStaticWallpaperImageViewController setMoveAndScaleDisabled:]


UIViewController(PLNavigationControllerInterface)
	// instance methods
	-[UIViewController(PLNavigationControllerInterface) uiipc_imagePickerController]
	-[UIViewController(PLNavigationControllerInterface) uiipc_imagePickerOptions]
	-[UIViewController(PLNavigationControllerInterface) uiipc_useTelephonyUI]
	-[UIViewController(PLNavigationControllerInterface) uiipc_filterForMediaTypes:]
	-[UIViewController(PLNavigationControllerInterface) setStatusBarStyleForFullScreenViewAnimated:useTelephonyUI:canHideStatusBar:newStatusBarStyle:navigationBarDidUpdate:]
	-[UIViewController(PLNavigationControllerInterface) revertStatusBarStyle:currentStatusBarStyle:animated:]
	-[UIViewController(PLNavigationControllerInterface) pl_visitControllerHierarchyWithBlock:]
	-[UIViewController(PLNavigationControllerInterface) pl_isInPopover]

FigPhotoTiledLayer(PLTileableLayerAdoption)
UIView(PLVideoOverlayButton)
	// class methods
	+[UIView(PLVideoOverlayButton) pl_videoOverlayButtonWithStyle:]
	+[UIView(PLVideoOverlayButton) pl_videoOverlayButtonSize]
	+[UIView(PLVideoOverlayButton) pl_setHiddenAnimationDuration]

	// instance methods
	-[UIView(PLVideoOverlayButton) pl_setHidden:delay:animated:]
	-[UIView(PLVideoOverlayButton) pl_isOnScreen:]
	-[UIView(PLVideoOverlayButton) pl_drawBorderWithColor:width:]
	-[UIView(PLVideoOverlayButton) pl_setHidden:animated:]

UIApplication(PhotosInternal)
	// instance methods
	-[UIApplication(PhotosInternal) setDelaySuspend:]
	-[UIApplication(PhotosInternal) _setDelaySuspend:]

UITableView(PhotoLibraryAdditions)
	// instance methods
	-[UITableView(PhotoLibraryAdditions) pl_indexPathForLastRow]
	-[UITableView(PhotoLibraryAdditions) pl_scrollToBottom:]
	-[UITableView(PhotoLibraryAdditions) pl_resetContentOffsetFromContentInsets]
	-[UITableView(PhotoLibraryAdditions) pl_scrollToVisibleRowAtIndexPath:animated:]
	-[UITableView(PhotoLibraryAdditions) pl_scrollToTop:]
	-[UITableView(PhotoLibraryAdditions) pl_lastRowIsVisible]

UIWindow(PhotoLibrary)
	// instance methods
	-[UIWindow(PhotoLibrary) pl_presentViewController:animated:]

01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAsset 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetExportSession 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetImageGenerator 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAudioSession 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayer 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerLayer 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CALayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 1800 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0300 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 0400 /System/Library/Frameworks/Contacts.framework/Contacts: CNContact 
01 00 0400 /System/Library/Frameworks/Contacts.framework/Contacts: CNContactFormatter 
01 00 0600 /System/Library/Frameworks/ContactsUI.framework/ContactsUI: CNContactViewController 
01 00 0900 /System/Library/PrivateFrameworks/AppSupport.framework/AppSupport: CPNetworkObserver 
01 00 1400 /System/Library/Frameworks/MediaToolbox.framework/MediaToolbox: FigPhotoTiledLayer 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 1200 /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer: MPAVItem 
01 00 1300 /System/Library/PrivateFrameworks/MediaStream.framework/MediaStream: MSASConnection 
01 00 1300 /System/Library/PrivateFrameworks/MediaStream.framework/MediaStream: MSConnection 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexPath 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumberFormatter 
01 00 1c00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1000 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFSharingUtilities 
01 00 1700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFSlowMotionUtilities 
01 00 1700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoAVObjectBuilder 
01 00 1700 /System/Library/PrivateFrameworks/PhotosFormats.framework/PhotosFormats: PFVideoAdjustments 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHAdjustmentData 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHAsset 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHAssetChangeRequest 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCollection 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHAssetCollectionChangeRequest 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHCachingImageManager 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHContentEditingInputRequestOptions 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHContentEditingOutput 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHFetchOptions 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHImageManager 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHImageRequestOptions 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHPhotoLibrary 
01 00 1600 /System/Library/Frameworks/Photos.framework/Photos: PHVideoRequestOptions 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLAssetsSaver 
01 00 0b00 /System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices: PLFormatChooser 
01 00 0b00 /System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices: PLImportFileManager 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLManagedAsset 
01 00 0b00 /System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices: PLNonBindingAssetsdClient 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoBakedThumbnails 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoLibrary 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoLibraryBundleController 
01 00 0b00 /System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices: PLPhotoLibraryPathManager 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoSharingHelper 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLPhotoStreamsHelper 
01 00 0b00 /System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices: PLPrivacy 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLProgressStack 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLSlalomUtilities 
01 00 1500 /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices: PLUserActivityDaemonJob 
01 00 0200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTButtonRow 
01 00 0200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTDrillDownRow 
01 00 0200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTModule 
01 00 0200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTRestoreDefaultSettingsRowAction 
01 00 0200 /System/Library/PrivateFrameworks/PrototypeTools.framework/PrototypeTools: PTSwitchRow 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIActivityIndicatorView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIApplication 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBarButtonItem 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIControl 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIDevice 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImagePickerController 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIMovieScrubber 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationBar 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UINavigationItem 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIProgressView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIStatusBarStyleAnimationParameters 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UISwipeGestureRecognizer 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UITableView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIToolbar 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UITransitionView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: UIWindow 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIAccessDeniedView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: _UIBackdropView 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityLabel 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
01 00 0100 /System/Library/Frameworks/UIKit.framework/UIKit: _UISettings 
