|| __DATA.__data _NSAccessibilitySpellingStateAttributeName
|| __DATA.__data _NSAllRomanInputSourcesLocaleIdentifier
|| __DATA.__data _NSAttachmentEditableDataAttributeName
|| __DATA.__data _NSAttachmentEditableDataTypeIdentifierAttributeName
|| __DATA.__data _NSBackgroundLayoutTrace
|| __DATA.__data _NSBaseURLDocumentOption
|| __DATA.__data _NSCharacterShapeAttributeName
|| __DATA.__data _NSCocoaRTFVersionDocumentAttribute
|| __DATA.__data _NSContainerTrace
|| __DATA.__data _NSConvertedDocumentAttribute
|| __DATA.__data _NSCursorAttributeName
|| __DATA.__data _NSDataDetectionAttributeName
|| __DATA.__data _NSDisplayNameDocumentAttribute
|| __DATA.__data _NSFileTypeDocumentOption
|| __DATA.__data _NSFirstLineHeadIndentRulerMarkerTag
|| __DATA.__data _NSFontTraitAttributeName
|| __DATA.__data _NSGeneratorDocumentAttribute
|| __DATA.__data _NSGlyphDisplayInvalidationTrace
|| __DATA.__data _NSGlyphGenerationTrace
|| __DATA.__data _NSGlyphGeometryTrace
|| __DATA.__data _NSGlyphInfoAttributeName
|| __DATA.__data _NSGrammarLeftOffsetAttributeName
|| __DATA.__data _NSGrammarRightOffsetAttributeName
|| __DATA.__data _NSHeadIndentRulerMarkerTag
|| __DATA.__data _NSIgnoringSubstitutionAttributeName
|| __DATA.__data _NSLanguageAttributeName
|| __DATA.__data _NSMarkedClauseSegmentAttributeName
|| __DATA.__data _NSNoIndexDocumentAttribute
|| __DATA.__data _NSOrthographyAttributeName
|| __DATA.__data _NSPOSIXLocaleIdentifier
|| __DATA.__data _NSRTFException
|| __DATA.__data _NSReaderDelegateDocumentOption
|| __DATA.__data _NSReplacedStringAttributeName
|| __DATA.__data _NSSmallCapsAttributeName
|| __DATA.__data _NSStrikeThroughAttributeName
|| __DATA.__data _NSTailIndentRulerMarkerTag
|| __DATA.__data _NSTemporaryTextCorrectionAttributeName
|| __DATA.__data _NSTextCheckedAttributeName
|| __DATA.__data _NSTextCorrectionAttributeName
|| __DATA.__data _NSTextDrawingTrace
|| __DATA.__data _NSTextEditedAttributeName
|| __DATA.__data _NSTextEncodingNameDocumentOption
|| __DATA.__data _NSTextKeyTrace
|| __DATA.__data _NSTextLocationTypeCountable
|| __DATA.__data _NSTextMouseTrace
|| __DATA.__data _NSTextRevertedAttributeName
|| __DATA.__data _NSTextSizeMultiplierDocumentOption
|| __DATA.__data _NSTextViewDidChangeSelectionNotification
|| __DATA.__data _NSTextViewDidChangeTypingAttributesNotification
|| __DATA.__data _NSTimeoutDocumentOption
|| __DATA.__data _NSToolTipAttributeName
|| __DATA.__data _NSTypesettingTrace
|| __DATA.__data _NSTypographyFeatureAttributeName
|| __DATA.__data _NSUTIDocumentAttribute
|| __DATA.__data _NSUnderlineByWordMask
|| __DATA.__data _NSUnderlineSpellingMask
|| __DATA.__data _NSUnderlineStrikethroughMask
|| __DATA.__data _NSWebPreferencesDocumentOption
|| __DATA.__data _NSWebResourceLoadDelegateDocumentOption
|| __DATA.__data __NSOriginalFontAttributeName
|| __DATA.__objc_data _OBJC_CLASS_$_NSCIDGlyphInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NSCTGlyphInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NSCountableTextLocation
|| __DATA.__objc_data _OBJC_CLASS_$_NSCountableTextRange
|| __DATA.__objc_data _OBJC_CLASS_$_NSDataAsset
|| __DATA.__objc_data _OBJC_CLASS_$_NSGlyphInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NSGlyphNameGlyphInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NSHTMLReader
|| __DATA.__objc_data _OBJC_CLASS_$_NSHTMLWebDelegate
|| __DATA.__objc_data _OBJC_CLASS_$_NSHTMLWriter
|| __DATA.__objc_data _OBJC_CLASS_$_NSIdentityGlyphInfo
|| __DATA.__objc_data _OBJC_CLASS_$_NSLayoutManagerTextBlockHelper
|| __DATA.__objc_data _OBJC_CLASS_$_NSLayoutManagerTextBlockRowArrayCache
|| __DATA.__objc_data _OBJC_CLASS_$_NSRTFReader
|| __DATA.__objc_data _OBJC_CLASS_$_NSRTFReaderTableState
|| __DATA.__objc_data _OBJC_CLASS_$_NSRTFWriter
|| __DATA.__objc_data _OBJC_CLASS_$_NSSubstituteWebResource
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextAlternatives
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextAttachmentViewProvider
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextBlock
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextBlockLayoutHelper
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextContentManager
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextContentStorage
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextElement
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextLayoutFragment
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextLayoutManager
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextLineFragment
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextList
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextParagraph
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextRange
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextSelection
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextTab
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextTable
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextTableBlock
|| __DATA.__objc_data _OBJC_CLASS_$_NSTextViewportLayoutController
|| __DATA.__objc_data _OBJC_CLASS_$_UIBoxcarFilterPointFIFO
|| __DATA.__objc_data _OBJC_CLASS_$_UINibCoderValue
|| __DATA.__objc_data _OBJC_CLASS_$_UINibEncoder
|| __DATA.__objc_data _OBJC_CLASS_$_UIPointFIFO
|| __DATA.__objc_data _OBJC_CLASS_$_UIQuadCurvePointFIFO
|| __DATA.__objc_data _OBJC_CLASS_$__NSAttributeRun
|| __DATA.__objc_data _OBJC_CLASS_$__NSAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCIDGlyphInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCTGlyphInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCountableTextLocation
|| __DATA.__objc_data _OBJC_METACLASS_$_NSCountableTextRange
|| __DATA.__objc_data _OBJC_METACLASS_$_NSDataAsset
|| __DATA.__objc_data _OBJC_METACLASS_$_NSGlyphInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NSGlyphNameGlyphInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NSHTMLReader
|| __DATA.__objc_data _OBJC_METACLASS_$_NSHTMLWebDelegate
|| __DATA.__objc_data _OBJC_METACLASS_$_NSHTMLWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_NSIdentityGlyphInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_NSLayoutManagerTextBlockHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_NSLayoutManagerTextBlockRowArrayCache
|| __DATA.__objc_data _OBJC_METACLASS_$_NSRTFReader
|| __DATA.__objc_data _OBJC_METACLASS_$_NSRTFReaderTableState
|| __DATA.__objc_data _OBJC_METACLASS_$_NSRTFWriter
|| __DATA.__objc_data _OBJC_METACLASS_$_NSSubstituteWebResource
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextAlternatives
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextAttachmentViewProvider
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextBlock
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextBlockLayoutHelper
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextContentManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextContentStorage
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextElement
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextLayoutManager
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextLineFragment
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextList
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextParagraph
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextRange
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextSelection
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextTab
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextTable
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextTableBlock
|| __DATA.__objc_data _OBJC_METACLASS_$_NSTextViewportLayoutController
|| __DATA.__objc_data _OBJC_METACLASS_$_UIBoxcarFilterPointFIFO
|| __DATA.__objc_data _OBJC_METACLASS_$_UINibCoderValue
|| __DATA.__objc_data _OBJC_METACLASS_$_UINibEncoder
|| __DATA.__objc_data _OBJC_METACLASS_$_UIPointFIFO
|| __DATA.__objc_data _OBJC_METACLASS_$_UIQuadCurvePointFIFO
|| __DATA.__objc_data _OBJC_METACLASS_$__NSAttributeRun
|| __DATA.__objc_data _OBJC_METACLASS_$__NSAttributes
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSAttributeDictionaryEnumerator.dictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSAttributeDictionaryEnumerator.nextElement
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSHTMLWebDelegate._baseURL
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSHTMLWebDelegate._loadDidFinish
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSHTMLWebDelegate._loadDidSucceed
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSIdentityGlyphInfo._font
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSIdentityGlyphInfo._glyph
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._attributeInfo
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._attributeInfoStack
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._attributesStack
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._bMargin
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._cachedRTFFontTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._cocoaPlatform
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._cocoaSubVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._cocoaTextScaling
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._cocoaVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._colorTblColorSpace
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._curAttributedString
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._curAttributes
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentBorderEdge
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentBorderIsTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentColumn
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentDefinitionColumn
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentListLevel
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentListNumber
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentRow
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentRowArray
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentRowIsLast
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._currentTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._defaultTabInterval
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._defaultToUniCharEncoding
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._document
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._documentBackgroundColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._documentInfoDictionary
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._explicitCharSetEncountered
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._finalTextScaling
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._fontAttributesTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._fontTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._gregorianCalendar
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._hyphenationFactor
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._isRTLDocument
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._lMargin
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._layoutOrientationSections
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._level
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._limitReached
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._listDefinitions
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._nestedTables
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._paperSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._previousRowArray
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._previousTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._private
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._rMargin
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._readLimit
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._readOnly
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._rtfData
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._rtfVersion
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._setTableCells
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._sourceTextScaling
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._tMargin
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._targetTextScaling
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._textBlocks
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._textBuffer
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._textBufferContentsIsFat
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._textBufferIndex
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._textFlow
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._thumbnailLimit
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._topAttributedString
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._usesScreenFonts
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._verticalOrientationLocation
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._viewKind
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._viewScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReader._viewSize
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReaderTableState._currentColumn
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReaderTableState._currentDefinitionColumn
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReaderTableState._currentRow
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReaderTableState._currentRowArray
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReaderTableState._currentRowIsLast
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReaderTableState._currentTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReaderTableState._previousRowArray
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFReaderTableState._previousTable
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._attachmentData
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._attrString
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._attrStringLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._colors
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curBackgroundColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curBaselineOffset
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curEncoding
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curFont
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curForegroundColor
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curKern
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curParagraphStyle
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curSuperscript
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curTraits
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._curUnderlineStyle
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._docAttrs
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._document
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._fontNames
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._fontObjects
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._layoutSections
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._listRanges
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._output
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._rightMargin
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._rwFlags
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._textScalingConversionSource
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSRTFWriter._textScalingConversionTarget
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSStringDrawingTextStorageSettings._settings
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSSubstituteWebResource._data
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSSubstituteWebResource._frameName
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSSubstituteWebResource._mimeType
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSSubstituteWebResource._textEncodingName
|| __DATA.__objc_ivar _OBJC_IVAR_$_NSSubstituteWebResource._url
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIBoxcarFilterPointFIFO._spacing
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIBoxcarFilterPointFIFO._width
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.data
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.delegate
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.encodedObjects
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.nextObjectID
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.objectIDsToObjects
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.objectsReplacedWithNil
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.objectsToObjectIDs
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.objectsUniquedByValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.recursiveState
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.replacements
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibEncoder.values
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibStringIDTable.buckets
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibStringIDTable.count
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibStringIDTable.hashMask
|| __DATA.__objc_ivar _OBJC_IVAR_$_UINibStringIDTable.table
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIPointFIFO._nextFIFO
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._controlPoints
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._emissionHandler
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._emitInterpolatedPoints
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._lastPoint
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._lineWidth
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._path
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._points
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._prevPoints
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._unitScale
|| __DATA.__objc_ivar _OBJC_IVAR_$_UIQuadCurvePointFIFO._view
|| __DATA.__objc_ivar _OBJC_IVAR_$__NSCachedAttributedString._allocedRunsSize
|| __DATA.__objc_ivar _OBJC_IVAR_$__NSCachedAttributedString._baseAttributes
|| __DATA.__objc_ivar _OBJC_IVAR_$__NSCachedAttributedString._contents
|| __DATA.__objc_ivar _OBJC_IVAR_$__NSCachedAttributedString._hashValue
|| __DATA.__objc_ivar _OBJC_IVAR_$__NSCachedAttributedString._length
|| __DATA.__objc_ivar _OBJC_IVAR_$__NSCachedAttributedString._numHits
|| __DATA.__objc_ivar _OBJC_IVAR_$__NSCachedAttributedString._numRuns
|| __DATA.__objc_ivar _OBJC_IVAR_$__NSCachedAttributedString._runs
|| __DATA_CONST.__const _NSAppearanceDocumentAttribute
|| __DATA_CONST.__const _NSAttachmentAttributeName
|| __DATA_CONST.__const _NSAuthorDocumentAttribute
|| __DATA_CONST.__const _NSBackgroundColorAttributeName
|| __DATA_CONST.__const _NSBackgroundColorDocumentAttribute
|| __DATA_CONST.__const _NSBaselineOffsetAttributeName
|| __DATA_CONST.__const _NSBottomMarginDocumentAttribute
|| __DATA_CONST.__const _NSCategoryDocumentAttribute
|| __DATA_CONST.__const _NSCharacterEncodingDocumentAttribute
|| __DATA_CONST.__const _NSCharacterEncodingDocumentOption
|| __DATA_CONST.__const _NSCocoaVersionDocumentAttribute
|| __DATA_CONST.__const _NSCommentDocumentAttribute
|| __DATA_CONST.__const _NSCompanyDocumentAttribute
|| __DATA_CONST.__const _NSCopyrightDocumentAttribute
|| __DATA_CONST.__const _NSCreationTimeDocumentAttribute
|| __DATA_CONST.__const _NSDefaultAttributesDocumentAttribute
|| __DATA_CONST.__const _NSDefaultAttributesDocumentOption
|| __DATA_CONST.__const _NSDefaultTabIntervalDocumentAttribute
|| __DATA_CONST.__const _NSDocFormatTextDocumentType
|| __DATA_CONST.__const _NSDocumentTypeDocumentAttribute
|| __DATA_CONST.__const _NSDocumentTypeDocumentOption
|| __DATA_CONST.__const _NSDominantLanguageAttributeName
|| __DATA_CONST.__const _NSDominantScriptAttributeName
|| __DATA_CONST.__const _NSEditorDocumentAttribute
|| __DATA_CONST.__const _NSExcludedElementsDocumentAttribute
|| __DATA_CONST.__const _NSExpansionAttributeName
|| __DATA_CONST.__const _NSFileTypeDocumentAttribute
|| __DATA_CONST.__const _NSFontAttributeName
|| __DATA_CONST.__const _NSForegroundColorAttributeName
|| __DATA_CONST.__const _NSHTMLTextDocumentType
|| __DATA_CONST.__const _NSHyphenationFactorDocumentAttribute
|| __DATA_CONST.__const _NSKernAttributeName
|| __DATA_CONST.__const _NSKeywordsDocumentAttribute
|| __DATA_CONST.__const _NSLeftMarginDocumentAttribute
|| __DATA_CONST.__const _NSLigatureAttributeName
|| __DATA_CONST.__const _NSLinkAttributeName
|| __DATA_CONST.__const _NSMacSimpleTextDocumentType
|| __DATA_CONST.__const _NSManagerDocumentAttribute
|| __DATA_CONST.__const _NSMarkedTextStyleAttributeName
|| __DATA_CONST.__const _NSModificationTimeDocumentAttribute
|| __DATA_CONST.__const _NSObliquenessAttributeName
|| __DATA_CONST.__const _NSOfficeOpenXMLTextDocumentType
|| __DATA_CONST.__const _NSOpenDocumentTextDocumentType
|| __DATA_CONST.__const _NSOriginalFontAttributeName
|| __DATA_CONST.__const _NSPaperMarginDocumentAttribute
|| __DATA_CONST.__const _NSPaperSizeDocumentAttribute
|| __DATA_CONST.__const _NSParagraphStyleAttributeName
|| __DATA_CONST.__const _NSPlainTextDocumentType
|| __DATA_CONST.__const _NSPrefixSpacesDocumentAttribute
|| __DATA_CONST.__const _NSRTFDTextDocumentType
|| __DATA_CONST.__const _NSRTFTextDocumentType
|| __DATA_CONST.__const _NSReadOnlyDocumentAttribute
|| __DATA_CONST.__const _NSRightMarginDocumentAttribute
|| __DATA_CONST.__const _NSShadowAttributeName
|| __DATA_CONST.__const _NSSourceTextScalingDocumentAttribute
|| __DATA_CONST.__const _NSSourceTextScalingDocumentReadingOption
|| __DATA_CONST.__const _NSSpellingStateAttributeName
|| __DATA_CONST.__const _NSStrikethroughColorAttributeName
|| __DATA_CONST.__const _NSStrikethroughStyleAttributeName
|| __DATA_CONST.__const _NSStrokeColorAttributeName
|| __DATA_CONST.__const _NSStrokeWidthAttributeName
|| __DATA_CONST.__const _NSSubjectDocumentAttribute
|| __DATA_CONST.__const _NSSuperscriptAttributeName
|| __DATA_CONST.__const _NSTabColumnTerminatorsAttributeName
|| __DATA_CONST.__const _NSTargetTextScalingDocumentReadingOption
|| __DATA_CONST.__const _NSTextAlternativesAttributeName
|| __DATA_CONST.__const _NSTextAlternativesDisplayStyleAttributeName
|| __DATA_CONST.__const _NSTextAlternativesSelectedAlternativeKey
|| __DATA_CONST.__const _NSTextAlternativesSelectedAlternativeStringNotification
|| __DATA_CONST.__const _NSTextEffectAttributeName
|| __DATA_CONST.__const _NSTextEffectLetterpressStyle
|| __DATA_CONST.__const _NSTextEncodingNameDocumentAttribute
|| __DATA_CONST.__const _NSTextLayoutSectionOrientation
|| __DATA_CONST.__const _NSTextLayoutSectionRange
|| __DATA_CONST.__const _NSTextLayoutSectionsAttribute
|| __DATA_CONST.__const _NSTextListMarkerBox
|| __DATA_CONST.__const _NSTextListMarkerCheck
|| __DATA_CONST.__const _NSTextListMarkerCircle
|| __DATA_CONST.__const _NSTextListMarkerDecimal
|| __DATA_CONST.__const _NSTextListMarkerDiamond
|| __DATA_CONST.__const _NSTextListMarkerDisc
|| __DATA_CONST.__const _NSTextListMarkerHyphen
|| __DATA_CONST.__const _NSTextListMarkerLowercaseAlpha
|| __DATA_CONST.__const _NSTextListMarkerLowercaseHexadecimal
|| __DATA_CONST.__const _NSTextListMarkerLowercaseLatin
|| __DATA_CONST.__const _NSTextListMarkerLowercaseRoman
|| __DATA_CONST.__const _NSTextListMarkerOctal
|| __DATA_CONST.__const _NSTextListMarkerSquare
|| __DATA_CONST.__const _NSTextListMarkerUppercaseAlpha
|| __DATA_CONST.__const _NSTextListMarkerUppercaseHexadecimal
|| __DATA_CONST.__const _NSTextListMarkerUppercaseLatin
|| __DATA_CONST.__const _NSTextListMarkerUppercaseRoman
|| __DATA_CONST.__const _NSTextScalingDocumentAttribute
|| __DATA_CONST.__const _NSTextScalingOverrideDocumentReadingOption
|| __DATA_CONST.__const _NSTextStorageDidProcessEditingNotification
|| __DATA_CONST.__const _NSTextStorageWillProcessEditingNotification
|| __DATA_CONST.__const _NSTextViewWillChangeNotifyingTextViewNotification
|| __DATA_CONST.__const _NSTitleDocumentAttribute
|| __DATA_CONST.__const _NSTopMarginDocumentAttribute
|| __DATA_CONST.__const _NSUnderlineColorAttributeName
|| __DATA_CONST.__const _NSUnderlineStyleAttributeName
|| __DATA_CONST.__const _NSVerticalGlyphFormAttributeName
|| __DATA_CONST.__const _NSViewModeDocumentAttribute
|| __DATA_CONST.__const _NSViewSizeDocumentAttribute
|| __DATA_CONST.__const _NSViewZoomDocumentAttribute
|| __DATA_CONST.__const _NSWebArchiveTextDocumentType
|| __DATA_CONST.__const _NSWordMLTextDocumentType
|| __DATA_CONST.__const _NSWritingDirectionAttributeName
|| __DATA_CONST.__const _NSZipTextDocumentType
|| __DATA_CONST.__const _UIFontDescriptorCascadeListAttribute
|| __DATA_CONST.__const _UIFontDescriptorCharacterSetAttribute
|| __DATA_CONST.__const _UIFontDescriptorFaceAttribute
|| __DATA_CONST.__const _UIFontDescriptorFamilyAttribute
|| __DATA_CONST.__const _UIFontDescriptorFeatureSettingsAttribute
|| __DATA_CONST.__const _UIFontDescriptorFixedAdvanceAttribute
|| __DATA_CONST.__const _UIFontDescriptorMatrixAttribute
|| __DATA_CONST.__const _UIFontDescriptorNameAttribute
|| __DATA_CONST.__const _UIFontDescriptorOpticalSizeAttribute
|| __DATA_CONST.__const _UIFontDescriptorPostScriptNameAttribute
|| __DATA_CONST.__const _UIFontDescriptorSizeAttribute
|| __DATA_CONST.__const _UIFontDescriptorSystemDesignDefault
|| __DATA_CONST.__const _UIFontDescriptorSystemDesignMonospaced
|| __DATA_CONST.__const _UIFontDescriptorSystemDesignRounded
|| __DATA_CONST.__const _UIFontDescriptorSystemDesignSerif
|| __DATA_CONST.__const _UIFontDescriptorTextStyleAttribute
|| __DATA_CONST.__const _UIFontDescriptorTraitsAttribute
|| __DATA_CONST.__const _UIFontDescriptorVariationAttribute
|| __DATA_CONST.__const _UIFontDescriptorVisibleNameAttribute
|| __DATA_CONST.__const _UIFontDesignDefault
|| __DATA_CONST.__const _UIFontDesignTrait
|| __DATA_CONST.__const _UIFontFeatureSelectorIdentifierKey
|| __DATA_CONST.__const _UIFontFeatureTypeIdentifierKey
|| __DATA_CONST.__const _UIFontSlantTrait
|| __DATA_CONST.__const _UIFontSymbolicTrait
|| __DATA_CONST.__const _UIFontSystemFontDesignAlternate
|| __DATA_CONST.__const _UIFontSystemFontDesignCompact
|| __DATA_CONST.__const _UIFontSystemFontDesignCondensed
|| __DATA_CONST.__const _UIFontSystemFontDesignDefault
|| __DATA_CONST.__const _UIFontSystemFontDesignMonospaced
|| __DATA_CONST.__const _UIFontSystemFontDesignRounded
|| __DATA_CONST.__const _UIFontSystemFontDesignSerif
|| __DATA_CONST.__const _UIFontSystemFontDesignTrait
|| __DATA_CONST.__const _UIFontWeightTrait
|| __DATA_CONST.__const _UIFontWidthTrait
|| __DATA_CONST.__const _UIInlinedValueMarker
|| __DATA_CONST.__const __NSLayoutManagerObservedTextViewChangeNotification
|| __DATA_CONST.__const __NSNewTextView
|| __DATA_CONST.__const __NSOldTextView
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSATSGlyphStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSATSLineFragment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSATSTypesetter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSAttributeDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSAttributeDictionaryEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSConcreteNotifyingMutableAttributedString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSConcreteTextStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSCoreTypesetter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSExtraLMData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSFont
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSGlyphGenerator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSIdRunStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSInsertionPointHelper
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSLayoutManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSLineFragmentRenderingContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSMutableParagraphStyle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSParagraphArbitrator
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSParagraphStyle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSParagraphStyleExtraData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSRunStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSShadow
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSSingleLineTypesetter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSStringDrawingContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSStringDrawingTextStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSStringDrawingTextStorageSettings
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSTempAttributeDictionary
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSTextAttachment
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSTextContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSTextGraphicsContextProvider
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSTextStorage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_NSTypesetter
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UICTFont
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UICTFontDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UIFont
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UIFontDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UINibDecoder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_UINibStringIDTable
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NSATSTypesetterGuts
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NSCachedAttributedString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__NSTextStorageSideData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__UICache
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__UIFontCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__UIFontDescriptorCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__UIFontNameCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__UIFontSystemCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$__UIFontTextStyleCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$___NSATSStringSegment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSATSGlyphStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSATSLineFragment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSATSTypesetter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSAttributeDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSAttributeDictionaryEnumerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSConcreteNotifyingMutableAttributedString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSConcreteTextStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSCoreTypesetter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSExtraLMData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSFont
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSGlyphGenerator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSIdRunStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSInsertionPointHelper
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSLayoutManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSLineFragmentRenderingContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSMutableParagraphStyle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSParagraphArbitrator
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSParagraphStyle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSParagraphStyleExtraData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSRunStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSShadow
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSSingleLineTypesetter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSStringDrawingContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSStringDrawingTextStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSStringDrawingTextStorageSettings
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSTempAttributeDictionary
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSTextAttachment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSTextContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSTextGraphicsContextProvider
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSTextLayoutFragment
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSTextStorage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_NSTypesetter
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UICTFont
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UICTFontDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UIFont
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UIFontDescriptor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UINibDecoder
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_UINibStringIDTable
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NSATSTypesetterGuts
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NSCachedAttributedString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__NSTextStorageSideData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__UICache
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__UIFontCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__UIFontDescriptorCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__UIFontNameCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__UIFontSystemCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$__UIFontTextStyleCacheKey
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$___NSATSStringSegment
|| __TEXT.__const _UIArchiveHeaderIdentifier
|| __TEXT.__const _UICurrentCoderVersion
|| __TEXT.__const _UIFontWeightBlack
|| __TEXT.__const _UIFontWeightBold
|| __TEXT.__const _UIFontWeightHeavy
|| __TEXT.__const _UIFontWeightLight
|| __TEXT.__const _UIFontWeightMedium
|| __TEXT.__const _UIFontWeightRegular
|| __TEXT.__const _UIFontWeightSemibold
|| __TEXT.__const _UIFontWeightThin
|| __TEXT.__const _UIFontWeightUltraLight
|| __TEXT.__const _UIFontWidthCondensed
|| __TEXT.__const _UIFontWidthExpanded
|| __TEXT.__const _UIFontWidthStandard
|| __TEXT.__const _UIMaximumCompatibleFormatVersion
|| __TEXT.__const _kUIFoundationUIFoundationVersionNumber
|| __TEXT.__const _kUIFoundationUIFoundationVersionString
|| __TEXT.__text _NSDefaultFont
|| __TEXT.__text _NSTextAlignmentFromCTTextAlignment
|| __TEXT.__text _NSTextAlignmentToCTTextAlignment
|| __TEXT.__text _UIAppendBytesForValueToData
|| __TEXT.__text _UIAppendVInt32ToData
|| __TEXT.__text _UICreateOrderedAndStrippedCoderValues
|| __TEXT.__text _UIDataLooksLikeNibArchive
|| __TEXT.__text _UIFixedByteLengthForType
|| __TEXT.__text _UINewFont
|| __TEXT.__text _UINibArchiveIndexFromNumber
|| __TEXT.__text _UINibCoderValueTypeToString
|| __TEXT.__text _UINumberWithNibArchiveIndex
|| __TEXT.__text _UIRetainedIdentityKeyDictionaryCallbacks
|| __TEXT.__text _UIRetainedIdentitySetCallbacks
|| __TEXT.__text _UIRetainedIdentityValueDictionaryCallbacks
|| __TEXT.__text _UISystemFontBoldForSize
|| __TEXT.__text _UISystemFontCreate
|| __TEXT.__text _UISystemFontForSize
|| __TEXT.__text _UIWriteArchiveToData
|| __TEXT.__text __NSAttachmentCharacterSet
|| __TEXT.__text __NSBidiControlCharacterSet
|| __TEXT.__text __NSBidiEmbeddingAndOverrideCharSet
|| __TEXT.__text __NSBlockNumberForIndex
|| __TEXT.__text __NSCalculateContainerOrigin
|| __TEXT.__text __NSFontAttributeNames
|| __TEXT.__text __NSHTMLEncoding
|| __TEXT.__text __NSNonAttachmentCharacterSet
|| __TEXT.__text __NSReadAttributedStringFromData
|| __TEXT.__text __NSReadAttributedStringFromURL
|| __TEXT.__text __NSReadAttributedStringFromURLOrData
|| __TEXT.__text __NSStringDrawingCore
|| __TEXT.__text __NSStringHasRightToLeftBaseWritingDirectionAtIndex
|| __TEXT.__text __NSStringHasRightToLeftCharactersInRange
|| __TEXT.__text __NSStringImputedBaseWritingDirectionAtIndex
|| __TEXT.__text __NSXMLEncoding
|| __TEXT.__text __UIFoundationRoundedInverseTextScalingFactor
|| __TEXT.__text __UIFoundationRoundedTextScalingFactor
|| __TEXT.__text __UISystemFontName
|| __TEXT.__text ___NSTokenizerLanguageSet
__ CoreFoundation: _CFArrayAppendArray
__ CoreFoundation: _CFArrayAppendValue
__ CoreFoundation: _CFArrayCreateMutable
__ CoreFoundation: _CFArrayCreateMutableCopy
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFArrayGetTypeID
__ CoreFoundation: _CFArrayGetValueAtIndex
__ CoreFoundation: _CFArrayRemoveAllValues
__ CoreFoundation: _CFArrayRemoveValueAtIndex
__ CoreFoundation: _CFArrayReplaceValues
__ CoreFoundation: _CFArraySortValues
__ CoreFoundation: _CFAttributedStringGetBidiLevelsAndResolvedDirections
__ CoreFoundation: _CFAutorelease
__ CoreFoundation: _CFBooleanGetTypeID
__ CoreFoundation: _CFBooleanGetValue
__ CoreFoundation: _CFBundleCopyBundleLocalizations
__ CoreFoundation: _CFBundleCopyPreferredLocalizationsFromArray
__ CoreFoundation: _CFBundleGetLocalizationInfoForLocalization
__ CoreFoundation: _CFBundleGetMainBundle
__ CoreFoundation: _CFBundleGetValueForInfoDictionaryKey
__ CoreFoundation: _CFCharacterSetCreateMutableCopy
__ CoreFoundation: _CFCharacterSetGetPredefined
__ CoreFoundation: _CFCharacterSetInitInlineBuffer
__ CoreFoundation: _CFCharacterSetInvert
__ CoreFoundation: _CFCharacterSetIsCharacterMember
__ CoreFoundation: _CFCharacterSetIsLongCharacterMember
__ CoreFoundation: _CFCopyDescription
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryAddValue
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFDictionaryContainsKey
__ CoreFoundation: _CFDictionaryCreate
__ CoreFoundation: _CFDictionaryCreateMutable
__ CoreFoundation: _CFDictionaryCreateMutableCopy
__ CoreFoundation: _CFDictionaryGetCount
__ CoreFoundation: _CFDictionaryGetKeysAndValues
__ CoreFoundation: _CFDictionaryGetValue
__ CoreFoundation: _CFDictionaryGetValueIfPresent
__ CoreFoundation: _CFDictionaryRemoveAllValues
__ CoreFoundation: _CFDictionaryRemoveValue
__ CoreFoundation: _CFDictionarySetValue
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFGetRetainCount
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFHashBytes
__ CoreFoundation: _CFLocaleCreate
__ CoreFoundation: _CFLocaleCreateCanonicalLocaleIdentifierFromString
__ CoreFoundation: _CFLocaleCreateComponentsFromLocaleIdentifier
__ CoreFoundation: _CFMakeCollectable
__ CoreFoundation: _CFNumberGetTypeID
__ CoreFoundation: _CFQSortArray
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddObserver
__ CoreFoundation: _CFRunLoopAddTimer
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFRunLoopObserverCreate
__ CoreFoundation: _CFRunLoopObserverInvalidate
__ CoreFoundation: _CFRunLoopRunInMode
__ CoreFoundation: _CFRunLoopStop
__ CoreFoundation: _CFRunLoopTimerCreate
__ CoreFoundation: _CFRunLoopTimerInvalidate
__ CoreFoundation: _CFSetAddValue
__ CoreFoundation: _CFSetContainsValue
__ CoreFoundation: _CFSetCreate
__ CoreFoundation: _CFSetCreateMutable
__ CoreFoundation: _CFSetGetCount
__ CoreFoundation: _CFSetGetValue
__ CoreFoundation: _CFSetGetValues
__ CoreFoundation: _CFSetRemoveAllValues
__ CoreFoundation: _CFSetRemoveValue
__ CoreFoundation: _CFSetSetValue
__ CoreFoundation: _CFStorageCreate
__ CoreFoundation: _CFStorageDeleteValues
__ CoreFoundation: _CFStorageGetCount
__ CoreFoundation: _CFStorageGetValueAtIndex
__ CoreFoundation: _CFStorageInsertValues
__ CoreFoundation: _CFStorageReplaceValues
__ CoreFoundation: _CFStringAppendCharacters
__ CoreFoundation: _CFStringCompare
__ CoreFoundation: _CFStringConvertEncodingToIANACharSetName
__ CoreFoundation: _CFStringConvertEncodingToNSStringEncoding
__ CoreFoundation: _CFStringConvertEncodingToWindowsCodepage
__ CoreFoundation: _CFStringConvertIANACharSetNameToEncoding
__ CoreFoundation: _CFStringConvertNSStringEncodingToEncoding
__ CoreFoundation: _CFStringConvertWindowsCodepageToEncoding
__ CoreFoundation: _CFStringCreateMutable
__ CoreFoundation: _CFStringCreateMutableWithExternalCharactersNoCopy
__ CoreFoundation: _CFStringCreateWithBytes
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringCreateWithCharactersNoCopy
__ CoreFoundation: _CFStringEncodingBytesToUnicode
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetCStringPtr
__ CoreFoundation: _CFStringGetCharacterAtIndex
__ CoreFoundation: _CFStringGetCharacters
__ CoreFoundation: _CFStringGetCharactersPtr
__ CoreFoundation: _CFStringGetHyphenationLocationBeforeIndex
__ CoreFoundation: _CFStringGetLength
__ CoreFoundation: _CFStringGetRangeOfCharacterClusterAtIndex
__ CoreFoundation: _CFStringGetSystemEncoding
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _CFStringIsEncodingAvailable
__ CoreFoundation: _CFStringSetExternalCharactersNoCopy
__ CoreFoundation: _CFStringTokenizerAdvanceToNextToken
__ CoreFoundation: _CFStringTokenizerCreate
__ CoreFoundation: _CFStringTokenizerGetCurrentTokenRange
__ CoreFoundation: _CFStringTokenizerGoToTokenAtIndex
__ CoreFoundation: _CFStringTransform
__ CoreFoundation: _CFURLCreateData
__ CoreFoundation: _CFUniCharGetBitmapPtrForPlane
__ CoreFoundation: _CFUniCharGetUnicodePropertyDataForPlane
__ CoreFoundation: _CFUniCharIsMemberOf
__ CoreFoundation: _NSCalendarIdentifierGregorian
__ CoreFoundation: _NSDefaultRunLoopMode
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSLocaleDecimalSeparator
__ CoreFoundation: _NSMallocException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLTypeIdentifierKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCalendar
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDateComponents
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSLocale
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimeZone
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSDictionary
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: __CFExecutableLinkedOnOrAfter
__ CoreFoundation: __CFIsDeallocating
__ CoreFoundation: __CFMZEnabled
__ CoreFoundation: __CFNonObjCEqual
__ CoreFoundation: __CFNonObjCHash
__ CoreFoundation: __CFNonObjCRelease
__ CoreFoundation: __CFNonObjCRetain
__ CoreFoundation: __CFTryRetain
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___CFStorageGetCapacity
__ CoreFoundation: ___CFStorageGetValueSize
__ CoreFoundation: ___CFStringEncodeByteStream
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFAllocatorNull
__ CoreFoundation: _kCFAllocatorSystemDefault
__ CoreFoundation: _kCFBooleanTrue
__ CoreFoundation: _kCFCopyStringSetCallBacks
__ CoreFoundation: _kCFErrorDomainCocoa
__ CoreFoundation: _kCFLocaleLanguageCode
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFStringTransformToXMLHex
__ CoreFoundation: _kCFTypeArrayCallBacks
__ CoreFoundation: _kCFTypeDictionaryKeyCallBacks
__ CoreFoundation: _kCFTypeDictionaryValueCallBacks
__ CoreFoundation: _kCFTypeSetCallBacks
__ CoreGraphics: _CGAffineTransformConcat
__ CoreGraphics: _CGAffineTransformEqualToTransform
__ CoreGraphics: _CGAffineTransformIdentity
__ CoreGraphics: _CGAffineTransformInvert
__ CoreGraphics: _CGAffineTransformMakeRotation
__ CoreGraphics: _CGAffineTransformMakeScale
__ CoreGraphics: _CGAffineTransformScale
__ CoreGraphics: _CGColorCreate
__ CoreGraphics: _CGColorCreateCopyByMatchingToColorSpace
__ CoreGraphics: _CGColorGetColorSpace
__ CoreGraphics: _CGColorGetComponents
__ CoreGraphics: _CGColorGetNumberOfComponents
__ CoreGraphics: _CGColorGetTypeID
__ CoreGraphics: _CGColorSpaceCopyName
__ CoreGraphics: _CGColorSpaceCreateWithName
__ CoreGraphics: _CGColorSpaceGetModel
__ CoreGraphics: _CGColorSpaceGetName
__ CoreGraphics: _CGColorSpaceGetNumberOfComponents
__ CoreGraphics: _CGColorTransformConvertColor
__ CoreGraphics: _CGColorTransformCreate
__ CoreGraphics: _CGColorTransformRelease
__ CoreGraphics: _CGContextAddEllipseInRect
__ CoreGraphics: _CGContextAddLineToPoint
__ CoreGraphics: _CGContextAddPath
__ CoreGraphics: _CGContextBeginTransparencyLayer
__ CoreGraphics: _CGContextClipToRect
__ CoreGraphics: _CGContextClipToRects
__ CoreGraphics: _CGContextConcatCTM
__ CoreGraphics: _CGContextConvertPointToDeviceSpace
__ CoreGraphics: _CGContextConvertPointToUserSpace
__ CoreGraphics: _CGContextConvertRectToDeviceSpace
__ CoreGraphics: _CGContextConvertRectToUserSpace
__ CoreGraphics: _CGContextEndTransparencyLayer
__ CoreGraphics: _CGContextFillPath
__ CoreGraphics: _CGContextFillRect
__ CoreGraphics: _CGContextFillRects
__ CoreGraphics: _CGContextGetBaseCTM
__ CoreGraphics: _CGContextGetCTM
__ CoreGraphics: _CGContextGetCompositeOperation
__ CoreGraphics: _CGContextGetFontRenderingStyle
__ CoreGraphics: _CGContextGetStrokeColorAsColor
__ CoreGraphics: _CGContextGetTextDrawingMode
__ CoreGraphics: _CGContextGetTextMatrix
__ CoreGraphics: _CGContextGetUserSpaceToDeviceSpaceTransform
__ CoreGraphics: _CGContextMoveToPoint
__ CoreGraphics: _CGContextRelease
__ CoreGraphics: _CGContextRestoreGState
__ CoreGraphics: _CGContextRetain
__ CoreGraphics: _CGContextSaveGState
__ CoreGraphics: _CGContextSetCTM
__ CoreGraphics: _CGContextSetCharacterSpacing
__ CoreGraphics: _CGContextSetCompositeOperation
__ CoreGraphics: _CGContextSetFillColorWithColor
__ CoreGraphics: _CGContextSetFont
__ CoreGraphics: _CGContextSetFontRenderingStyle
__ CoreGraphics: _CGContextSetFontSize
__ CoreGraphics: _CGContextSetLineDash
__ CoreGraphics: _CGContextSetLineWidth
__ CoreGraphics: _CGContextSetPatternPhase
__ CoreGraphics: _CGContextSetShadow
__ CoreGraphics: _CGContextSetShadowWithColor
__ CoreGraphics: _CGContextSetShouldAntialias
__ CoreGraphics: _CGContextSetTextDrawingMode
__ CoreGraphics: _CGContextSetTextMatrix
__ CoreGraphics: _CGContextSetTextPosition
__ CoreGraphics: _CGContextStrokePath
__ CoreGraphics: _CGFontCreateGlyphPath
__ CoreGraphics: _CGFontGetGlyphVerticalOffsets
__ CoreGraphics: _CGFontGetGlyphsForCIDs
__ CoreGraphics: _CGFontGetRegistryOrderingSupplement
__ CoreGraphics: _CGFontGetUnitsPerEm
__ CoreGraphics: _CGPathAddLineToPoint
__ CoreGraphics: _CGPathAddQuadCurveToPoint
__ CoreGraphics: _CGPathApply
__ CoreGraphics: _CGPathCreateMutable
__ CoreGraphics: _CGPathCreateWithRect
__ CoreGraphics: _CGPathCreateWithRoundedRect
__ CoreGraphics: _CGPathMoveToPoint
__ CoreGraphics: _CGPathRelease
__ CoreGraphics: _CGPointZero
__ CoreGraphics: _CGRectApplyAffineTransform
__ CoreGraphics: _CGRectEqualToRect
__ CoreGraphics: _CGRectGetHeight
__ CoreGraphics: _CGRectGetMaxX
__ CoreGraphics: _CGRectGetMaxY
__ CoreGraphics: _CGRectGetMinX
__ CoreGraphics: _CGRectGetMinY
__ CoreGraphics: _CGRectGetWidth
__ CoreGraphics: _CGRectIsEmpty
__ CoreGraphics: _CGRectMakeWithDictionaryRepresentation
__ CoreGraphics: _CGRectUnion
__ CoreGraphics: _CGRectZero
__ CoreGraphics: _CGSizeZero
__ CoreGraphics: _kCGColorSpaceDisplayP3
__ CoreGraphics: _kCGColorSpaceExtendedGray
__ CoreGraphics: _kCGColorSpaceExtendedLinearSRGB
__ CoreGraphics: _kCGColorSpaceExtendedSRGB
__ CoreGraphics: _kCGColorSpaceGenericCMYK
__ CoreGraphics: _kCGColorSpaceGenericGrayGamma2_2
__ CoreGraphics: _kCGColorSpaceGenericRGB
__ CoreGraphics: _kCGColorSpaceLinearSRGB
__ CoreGraphics: _kCGColorSpaceSRGB
__ CoreServices: _OBJC_CLASS_$_LSDocumentProxy
__ CoreServices: _UTTypeConformsTo
__ CoreServices: _UTTypeCopyPreferredTagWithClass
__ CoreServices: _UTTypeCreatePreferredIdentifierForTag
__ CoreServices: _UTTypeEqual
__ CoreServices: _kUTTagClassFilenameExtension
__ CoreServices: _kUTTypeData
__ CoreServices: _kUTTypeDirectory
__ CoreServices: _kUTTypeFlatRTFD
__ CoreServices: _kUTTypeHTML
__ CoreServices: _kUTTypeImage
__ CoreServices: _kUTTypePDF
__ CoreServices: _kUTTypePlainText
__ CoreServices: _kUTTypeRTF
__ CoreServices: _kUTTypeRTFD
__ CoreServices: _kUTTypeSymLink
__ CoreServices: _kUTTypeWebArchive
__ CoreText: _CTFontCopyAttribute
__ CoreText: _CTFontCopyCharacterSet
__ CoreText: _CTFontCopyFamilyName
__ CoreText: _CTFontCopyFeatureSettings
__ CoreText: _CTFontCopyFontDescriptor
__ CoreText: _CTFontCopyFullName
__ CoreText: _CTFontCopyGraphicsFont
__ CoreText: _CTFontCopyPostScriptName
__ CoreText: _CTFontCopyTraits
__ CoreText: _CTFontCreateEmojiFontForFont
__ CoreText: _CTFontCreateForCharactersWithLanguage
__ CoreText: _CTFontCreateUIFontForLanguage
__ CoreText: _CTFontCreateWithFontDescriptor
__ CoreText: _CTFontCreateWithNameAndOptions
__ CoreText: _CTFontDescriptorCanCreateWithTextStyle
__ CoreText: _CTFontDescriptorCopyAttribute
__ CoreText: _CTFontDescriptorCopyAttributes
__ CoreText: _CTFontDescriptorCreateCopyWithAttributes
__ CoreText: _CTFontDescriptorCreateCopyWithSymbolicTraits
__ CoreText: _CTFontDescriptorCreateMatchingFontDescriptor
__ CoreText: _CTFontDescriptorCreateMatchingFontDescriptors
__ CoreText: _CTFontDescriptorCreateWithAttributes
__ CoreText: _CTFontDescriptorCreateWithAttributesAndOptions
__ CoreText: _CTFontDescriptorCreateWithNameAndSize
__ CoreText: _CTFontDescriptorCreateWithTextStyle
__ CoreText: _CTFontDescriptorGetTypeID
__ CoreText: _CTFontDescriptorIsSystemUIFont
__ CoreText: _CTFontDrawGlyphsAtPositions
__ CoreText: _CTFontDrawGlyphsWithAdvances
__ CoreText: _CTFontGetBoundingBox
__ CoreText: _CTFontGetBoundingRectsForGlyphs
__ CoreText: _CTFontGetCapHeight
__ CoreText: _CTFontGetGlyphCount
__ CoreText: _CTFontGetGlyphWithName
__ CoreText: _CTFontGetGlyphsForCharacters
__ CoreText: _CTFontGetLanguageAwareOutsets
__ CoreText: _CTFontGetLatin1GlyphsAndAdvanceWidths
__ CoreText: _CTFontGetLigatureCaretPositions
__ CoreText: _CTFontGetMatrix
__ CoreText: _CTFontGetSize
__ CoreText: _CTFontGetStringEncoding
__ CoreText: _CTFontGetSymbolicTraits
__ CoreText: _CTFontGetTransformedAdvancesForGlyphsAndStyle
__ CoreText: _CTFontGetTypeID
__ CoreText: _CTFontGetUnderlinePosition
__ CoreText: _CTFontGetUnderlineThickness
__ CoreText: _CTFontGetUnitsPerEm
__ CoreText: _CTFontGetUnsummedAdvancesForGlyphsAndStyle
__ CoreText: _CTFontGetXHeight
__ CoreText: _CTFontIsLastResort
__ CoreText: _CTFontSwapDefaultLineHeightAdjustment
__ CoreText: _CTFontSwapDefaultSize
__ CoreText: _CTFontTransformGlyphs
__ CoreText: _CTFramesetterCreateCGRectArray
__ CoreText: _CTFramesetterFindRectPosition
__ CoreText: _CTGlyphInfoGetCharacterCollection
__ CoreText: _CTGlyphInfoGetCharacterIdentifier
__ CoreText: _CTGlyphInfoGetGlyphName
__ CoreText: _CTGlyphInfoGetTypeID
__ CoreText: _CTGlyphStorageCreateMutableWithInterface
__ CoreText: _CTGlyphStorageGetRefCon
__ CoreText: _CTGlyphStorageSyncWithInterface
__ CoreText: _CTLineCreateFromLineWithOffset
__ CoreText: _CTLineCreateJustifiedLine
__ CoreText: _CTLineCreateJustifiedLineWithOptions
__ CoreText: _CTLineCreateTruncatedLineWithTokenCallback
__ CoreText: _CTLineCreateTruncatedLineWithTokenHandler
__ CoreText: _CTLineCreateWithAttributedString
__ CoreText: _CTLineCreateWithRunArray
__ CoreText: _CTLineDraw
__ CoreText: _CTLineEnumerateCaretOffsets
__ CoreText: _CTLineGetBoundsWithOptions
__ CoreText: _CTLineGetGlyphCount
__ CoreText: _CTLineGetGlyphRuns
__ CoreText: _CTLineGetImageBounds
__ CoreText: _CTLineGetOffsetForStringIndex
__ CoreText: _CTLineGetPenOffsetForFlush
__ CoreText: _CTLineGetStringIndexForPosition
__ CoreText: _CTLineGetStringRange
__ CoreText: _CTLineGetTrailingWhitespaceWidth
__ CoreText: _CTLineGetTypographicBounds
__ CoreText: _CTLineIsRightToLeft
__ CoreText: _CTLineSuggestClusterBreakWithOffset
__ CoreText: _CTLineSuggestLineBreakWithOffset
__ CoreText: _CTLineSyncWithRuns
__ CoreText: _CTRunCreateMutableRunsWithStorageAndOptions
__ CoreText: _CTRunGetAttributes
__ CoreText: _CTRunGetGlyphCount
__ CoreText: _CTRunGetGlyphStorage
__ CoreText: _CTRunGetInitialAdvance
__ CoreText: _CTRunGetStatus
__ CoreText: _CTRunGetStringRange
__ CoreText: _CTRunGetTypographicBounds
__ CoreText: _CTRunSyncWithStorage
__ CoreText: _CTSwapLineBreakEpsilon
__ CoreText: _CTTypesetterCreateLine
__ CoreText: _CTTypesetterCreateWithRunArray
__ CoreText: _CTTypesetterCreateWithRunArrayAndOptions
__ CoreText: _CTTypesetterSuggestClusterBreak
__ CoreText: _OBJC_CLASS_$_CTGlyphStorageInterface
__ CoreText: _OBJC_IVAR_$_CTGlyphStorageInterface._absorbedCounts
__ CoreText: _OBJC_IVAR_$_CTGlyphStorageInterface._advances
__ CoreText: _OBJC_IVAR_$_CTGlyphStorageInterface._glyphCount
__ CoreText: _OBJC_IVAR_$_CTGlyphStorageInterface._glyphs
__ CoreText: _OBJC_IVAR_$_CTGlyphStorageInterface._props
__ CoreText: _OBJC_IVAR_$_CTGlyphStorageInterface._stringIndexes
__ CoreText: _OBJC_METACLASS_$_CTGlyphStorageInterface
__ CoreText: __CTFontCreateWithNameAndSymbolicTraits
__ CoreText: __CTGlyphInfoGetBaseString
__ CoreText: __CTGlyphInfoGetFont
__ CoreText: __CTGlyphInfoGetGlyph
__ CoreText: _kCTFontDescriptorTextStyleAttribute
__ CoreText: _kCTFontDescriptorTextStyleBlack
__ CoreText: _kCTFontDescriptorTextStyleBold
__ CoreText: _kCTFontDescriptorTextStyleBoldItalic
__ CoreText: _kCTFontDescriptorTextStyleEmphasized
__ CoreText: _kCTFontDescriptorTextStyleEmphasizedOblique
__ CoreText: _kCTFontDescriptorTextStyleHeavy
__ CoreText: _kCTFontDescriptorTextStyleLight
__ CoreText: _kCTFontDescriptorTextStyleMedium
__ CoreText: _kCTFontDescriptorTextStyleOblique
__ CoreText: _kCTFontDescriptorTextStyleRegular
__ CoreText: _kCTFontDescriptorTextStyleSemibold
__ CoreText: _kCTFontDescriptorTextStyleThin
__ CoreText: _kCTFontDescriptorTextStyleUltraLight
__ CoreText: _kCTFontFeatureSelectorIdentifierKey
__ CoreText: _kCTFontFeatureSettingsAttribute
__ CoreText: _kCTFontFeatureTypeIdentifierKey
__ CoreText: _kCTFontFeaturesAttribute
__ CoreText: _kCTFontLegibilityWeightAttribute
__ CoreText: _kCTFontMatrixAttribute
__ CoreText: _kCTFontTraitsAttribute
__ CoreText: _kCTFontUIFontDesignMonospaced
__ CoreText: _kCTFontWeightRegular
__ CoreText: _kCTFontWeightTrait
__ CoreText: _kCTForegroundColorAttributeName
__ CoreText: _kCTFramePathClippingPathAttributeName
__ CoreText: _kCTFramePathFillRuleAttributeName
__ CoreText: _kCTTypesetterOptionAllowUnboundedLayout
__ CoreText: _kCTUIFontTextStyleBody
__ CoreUI: _OBJC_CLASS_$_CUIBackgroundStyleEffectConfiguration
__ CoreUI: _OBJC_CLASS_$_CUICatalog
__ CoreUI: _OBJC_CLASS_$_CUIStyleEffectConfiguration
__ Foundation: _NSAllocateCollectable
__ Foundation: _NSAllocateObject
__ Foundation: _NSAllocateScannedUncollectable
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSContainsRect
__ Foundation: _NSCreateMapTableWithZone
__ Foundation: _NSDeallocateObject
__ Foundation: _NSDebugDescriptionErrorKey
__ Foundation: _NSEdgeInsetsZero
__ Foundation: _NSEqualPoints
__ Foundation: _NSEqualRects
__ Foundation: _NSEqualSizes
__ Foundation: _NSFileExtendedAttributes
__ Foundation: _NSFileHandleOperationException
__ Foundation: _NSFilePathErrorKey
__ Foundation: _NSFreeMapTable
__ Foundation: _NSInsetRect
__ Foundation: _NSIntegerMapValueCallBacks
__ Foundation: _NSIntersectionRange
__ Foundation: _NSIntersectionRect
__ Foundation: _NSIntersectsRange
__ Foundation: _NSIntersectsRect
__ Foundation: _NSInvalidUnarchiveOperationException
__ Foundation: _NSIsEmptyRect
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSLog
__ Foundation: _NSLogv
__ Foundation: _NSMapGet
__ Foundation: _NSMapInsert
__ Foundation: _NSMapInsertKnownAbsent
__ Foundation: _NSObjectMapKeyCallBacks
__ Foundation: _NSObjectMapValueCallBacks
__ Foundation: _NSPointInRect
__ Foundation: _NSPopAutoreleasePool
__ Foundation: _NSPushAutoreleasePool
__ Foundation: _NSReallocateCollectable
__ Foundation: _NSReallocateScannedUncollectable
__ Foundation: _NSRequestConcreteImplementation
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringEncodingErrorKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromPoint
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromRect
__ Foundation: _NSStringFromSelector
__ Foundation: _NSStringFromSize
__ Foundation: _NSURLErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _NSUnionRange
__ Foundation: _NSUnionRect
__ Foundation: _NSZeroPoint
__ Foundation: _NSZeroRect
__ Foundation: _NSZeroSize
__ Foundation: _NSZoneCalloc
__ Foundation: _NSZoneFree
__ Foundation: _NSZoneFromPointer
__ Foundation: _NSZoneMalloc
__ Foundation: _NSZoneRealloc
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSAttributedString
__ Foundation: _OBJC_CLASS_$_NSAutoreleasePool
__ Foundation: _OBJC_CLASS_$_NSBigMutableString
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSConcreteMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSFileWrapper
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_CLASS_$_NSMutableCharacterSet
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableRLEArray
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPointerFunctions
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRecursiveLock
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSCoder
__ Foundation: _OBJC_METACLASS_$_NSConcreteMutableAttributedString
__ Foundation: _OBJC_METACLASS_$_NSMutableAttributedString
__ Foundation: _OBJC_METACLASS_$_NSString
__ Foundation: __NSEncodingFromDataForExtendedAttribute
__ Foundation: __NSFaultInObject
__ Foundation: __NSFullMethodName
__ Foundation: __NSMethodExceptionProem
__ Foundation: __NSReadExtendedAttributesFromFileDescriptor
__ GraphicsServices: _GSFontCopyFamilyNames
__ GraphicsServices: _GSFontCopyFontNamesForFamilyName
__ GraphicsServices: _GSFontGetExtraData
__ GraphicsServices: _GSFontInitialize
__ GraphicsServices: _OBJC_IVAR_$__UIFontExtraData._ascender
__ GraphicsServices: _OBJC_IVAR_$__UIFontExtraData._descender
__ GraphicsServices: _OBJC_IVAR_$__UIFontExtraData._fFlags
__ GraphicsServices: _OBJC_IVAR_$__UIFontExtraData._lineGap
__ GraphicsServices: _OBJC_IVAR_$__UIFontExtraData._lineHeight
__ GraphicsServices: _OBJC_IVAR_$__UIFontExtraData._maximumPointSizeAfterScaling
__ GraphicsServices: _OBJC_IVAR_$__UIFontExtraData._pointSizeForScaling
__ GraphicsServices: _OBJC_IVAR_$__UIFontExtraData._textStyleForScaling
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ libAccessibility.dylib: __AXSEnhanceTextLegibilityEnabled
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___memmove_chk
__ libSystem.B.dylib: ___memset_chk
__ libSystem.B.dylib: ___snprintf_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___strlcat_chk
__ libSystem.B.dylib: ___strlcpy_chk
__ libSystem.B.dylib: ___tolower
__ libSystem.B.dylib: ___vsnprintf_chk
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_source_type_memorypressure
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _bsearch_b
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_retain
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _exp
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _lround
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcmp
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _memset_pattern8
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_lock_with_options
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _pthread_getspecific
__ libSystem.B.dylib: _pthread_key_create
__ libSystem.B.dylib: _pthread_rwlock_destroy
__ libSystem.B.dylib: _pthread_rwlock_init
__ libSystem.B.dylib: _pthread_rwlock_rdlock
__ libSystem.B.dylib: _pthread_rwlock_trywrlock
__ libSystem.B.dylib: _pthread_rwlock_unlock
__ libSystem.B.dylib: _pthread_setspecific
__ libSystem.B.dylib: _qsort
__ libSystem.B.dylib: _qsort_b
__ libSystem.B.dylib: _realloc
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strdup
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncasecmp
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strnstr
__ libSystem.B.dylib: _strtol
__ libSystem.B.dylib: _vm_page_size
__ libSystem.B.dylib: dyld_stub_binder
__ libicucore.A.dylib: _ubrk_close
__ libicucore.A.dylib: _ubrk_following
__ libicucore.A.dylib: _ubrk_open
__ libicucore.A.dylib: _ubrk_preceding
__ libicucore.A.dylib: _ubrk_safeClone
__ libicucore.A.dylib: _ubrk_setText
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _class_getInstanceSize
__ libobjc.A.dylib: _method_getDescription
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_copyStruct
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_rethrow
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getAssociatedObject
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_loadWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_lookUpClass
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_setAssociatedObject
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_storeWeakOrNil
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _object_setClass
__ libobjc.A.dylib: _sel_getUid
NSTextLayoutFragment : NSObject <NSSecureCoding, NSTextViewportElement>
 @property  NSTextLayoutManager *textLayoutManager
 @property  {CGPoint=dd} layoutFragmentFrameOrigin
 @property  NSLayoutManager *destinationLayoutManager
 @property  NSTextStorage *destinationTextStorage
 @property  double destinationVerticalDelta
 @property  {_NSRange=QQ} destinationGlyphRange
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} destinationBoundingRect
 @property  NSLayoutManager *layoutManager
 @property  {_NSRange=QQ} characterRange
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} sourceBoundingRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} destinationBoundingRect
 @property  unsigned long animationType
 @property  NSArray *textLineFragments
 @property  unsigned long state
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} layoutFragmentFrame
 @property  NSTextElement *textElement
 @property  NSTextLayoutManager *textLayoutManager
 @property  NSTextRange *rangeInElement
 @property  NSOperationQueue *layoutQueue
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} renderingSurfaceBounds
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSTextRange *representedRange
 @property  {CGSize=dd} layoutSize
 @property  {CGPoint=dd} layoutPoint

  // class methods
  +[NSTextLayoutFragment supportsSecureCoding]
  +[NSTextLayoutFragment layoutFragmentQueue]

  // instance methods
  -[NSTextLayoutFragment init]
  -[NSTextLayoutFragment dealloc]
  -[NSTextLayoutFragment encodeWithCoder:]
  -[NSTextLayoutFragment initWithCoder:]
  -[NSTextLayoutFragment state]
  -[NSTextLayoutFragment setState:]
  -[NSTextLayoutFragment layout]
  -[NSTextLayoutFragment _layout]
  -[NSTextLayoutFragment _setup]
  -[NSTextLayoutFragment setTextElement:]
  -[NSTextLayoutFragment setTextLayoutManager:]
  -[NSTextLayoutFragment setLayoutQueue:]
  -[NSTextLayoutFragment textElement]
  -[NSTextLayoutFragment textLayoutManager]
  -[NSTextLayoutFragment layoutQueue]
  -[NSTextLayoutFragment rangeInElement]
  -[NSTextLayoutFragment layoutFragmentFrame]
  -[NSTextLayoutFragment setLayoutFragmentFrame:]
  -[NSTextLayoutFragment textLineFragments]
  -[NSTextLayoutFragment drawAtPoint:context:]
  -[NSTextLayoutFragment setTextLineFragments:]
  -[NSTextLayoutFragment layoutManager]
  -[NSTextLayoutFragment sourceBoundingRect]
  -[NSTextLayoutFragment destinationBoundingRect]
  -[NSTextLayoutFragment animationType]
  -[NSTextLayoutFragment characterRange]
  -[NSTextLayoutFragment representedRangeAtPoint:]
  -[NSTextLayoutFragment representedRange]
  -[NSTextLayoutFragment layoutSize]
  -[NSTextLayoutFragment layoutPoint]
  -[NSTextLayoutFragment setLayoutPoint:]
  -[NSTextLayoutFragment initWithTextElement:range:]
  -[NSTextLayoutFragment layoutFragmentFrameOrigin]
  -[NSTextLayoutFragment setLayoutFragmentFrameOrigin:]
  -[NSTextLayoutFragment estimateSize]
  -[NSTextLayoutFragment invalidateLayout]
  -[NSTextLayoutFragment renderingSurfaceBounds]
  -[NSTextLayoutFragment initWithLayoutManager:characterRange:animationType:boundingRect:]
  -[NSTextLayoutFragment destinationLayoutManager]
  -[NSTextLayoutFragment setDestinationLayoutManager:]
  -[NSTextLayoutFragment destinationTextStorage]
  -[NSTextLayoutFragment setDestinationTextStorage:]
  -[NSTextLayoutFragment destinationVerticalDelta]
  -[NSTextLayoutFragment setDestinationVerticalDelta:]
  -[NSTextLayoutFragment destinationGlyphRange]
  -[NSTextLayoutFragment setDestinationGlyphRange:]
  -[NSTextLayoutFragment setDestinationBoundingRect:]
  -[NSTextLayoutFragment drawAtPoint:contentType:]


NSInsertionPointHelper : NSObject
  // instance methods
  -[NSInsertionPointHelper dealloc]


_NSATSTypesetterGuts : NSObject
  // instance methods
  -[_NSATSTypesetterGuts dealloc]
  -[_NSATSTypesetterGuts finalize]
  -[_NSATSTypesetterGuts initWithTypesetter:]


NSATSTypesetter : NSTypesetter
  // class methods
  +[NSATSTypesetter initialize]
  +[NSATSTypesetter sharedInstance]
  +[NSATSTypesetter sharedTypesetter]
  +[NSATSTypesetter _allowsScreenFontKerning]

  // instance methods
  -[NSATSTypesetter init]
  -[NSATSTypesetter dealloc]
  -[NSATSTypesetter _isBusy]
  -[NSATSTypesetter baselineOffsetInLayoutManager:glyphIndex:]
  -[NSATSTypesetter actionForControlCharacterAtIndex:]
  -[NSATSTypesetter layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:]
  -[NSATSTypesetter layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
  -[NSATSTypesetter _mirrorsTextAlignment]
  -[NSATSTypesetter paragraphArbitrator]
  -[NSATSTypesetter lineFragmentRectForProposedRect:remainingRect:]
  -[NSATSTypesetter _bidiLevels]
  -[NSATSTypesetter _ctTypesetter]
  -[NSATSTypesetter synchronizesAlignmentToDirection]
  -[NSATSTypesetter _doBidiProcessing]
  -[NSATSTypesetter _baseWritingDirection]
  -[NSATSTypesetter _baselineRenderingMode]
  -[NSATSTypesetter beginLineWithGlyphAtIndex:]
  -[NSATSTypesetter endLineWithGlyphRange:]
  -[NSATSTypesetter _flushCachedObjects]
  -[NSATSTypesetter lineBreakStrategy]
  -[NSATSTypesetter beginParagraph]
  -[NSATSTypesetter endParagraph]
  -[NSATSTypesetter _layoutLineFragmentStartingWithGlyphAtIndex:characterIndex:atPoint:renderingContext:]
  -[NSATSTypesetter _setBusy:]
  -[NSATSTypesetter _forceWordWrapping]
  -[NSATSTypesetter _setForceWordWrapping:]
  -[NSATSTypesetter defaultTighteningFactor]
  -[NSATSTypesetter setDefaultTighteningFactor:]
  -[NSATSTypesetter setLineBreakStrategy:]
  -[NSATSTypesetter limitsLayoutForSuspiciousContents]
  -[NSATSTypesetter setLimitsLayoutForSuspiciousContents:]
  -[NSATSTypesetter _setBaselineRenderingMode:]
  -[NSATSTypesetter _getATSTypesetterGuts]
  -[NSATSTypesetter _textContainerForAttachmentProtocol]
  -[NSATSTypesetter _textStorageForAttachmentProtocol]
  -[NSATSTypesetter _usesScreenFonts]
  -[NSATSTypesetter _sweepDirectionForGlyphAtIndex:]
  -[NSATSTypesetter layoutParagraphAtPoint:]
  -[NSATSTypesetter shouldBreakLineByWordBeforeCharacterAtIndex:]
  -[NSATSTypesetter shouldBreakLineByHyphenatingBeforeCharacterAtIndex:]
  -[NSATSTypesetter hyphenationFactorForGlyphAtIndex:]
  -[NSATSTypesetter boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:]
  -[NSATSTypesetter hyphenCharacterForGlyphAtIndex:]
  -[NSATSTypesetter _allocateAuxData]
  -[NSATSTypesetter _lineFragmentRectForProposedRectArgs]


__NSATSStringSegment : NSString /usr/lib/libSystem.B.dylib
  // class methods
  +[__NSATSStringSegment allocWithZone:]

  // instance methods
  -[__NSATSStringSegment dealloc]
  -[__NSATSStringSegment length]
  -[__NSATSStringSegment release]
  -[__NSATSStringSegment _tryRetain]
  -[__NSATSStringSegment _isDeallocating]
  -[__NSATSStringSegment characterAtIndex:]
  -[__NSATSStringSegment getCharacters:range:]
  -[__NSATSStringSegment _fastCharacterContents]
  -[__NSATSStringSegment _setOriginalString:range:]
  -[__NSATSStringSegment initWithOriginalString:range:]


NSATSGlyphStorage : CTGlyphStorageInterface /System/Library/Frameworks/Foundation.framework/Foundation
  // class methods
  +[NSATSGlyphStorage allocWithZone:]

  // instance methods
  -[NSATSGlyphStorage dealloc]
  -[NSATSGlyphStorage release]
  -[NSATSGlyphStorage _tryRetain]
  -[NSATSGlyphStorage _isDeallocating]
  -[NSATSGlyphStorage finalize]
  -[NSATSGlyphStorage _invalidate]
  -[NSATSGlyphStorage disposeGlyphStack]
  -[NSATSGlyphStorage createCopy:]
  -[NSATSGlyphStorage getCustomAdvance:forIndex:]
  -[NSATSGlyphStorage setAbsorbedCount:forIndex:]
  -[NSATSGlyphStorage setProps:forIndex:]
  -[NSATSGlyphStorage setGlyphID:forIndex:]
  -[NSATSGlyphStorage setAdvance:forIndex:]
  -[NSATSGlyphStorage setStringIndex:forIndex:]
  -[NSATSGlyphStorage insertGlyphs:]
  -[NSATSGlyphStorage swapGlyph:withIndex:]
  -[NSATSGlyphStorage moveGlyphsTo:from:]
  -[NSATSGlyphStorage initGlyphStack:]
  -[NSATSGlyphStorage pushGlyph:]
  -[NSATSGlyphStorage popGlyph:]
  -[NSATSGlyphStorage typesetter]
  -[NSATSGlyphStorage initWithTypesetter:]
  -[NSATSGlyphStorage setGlyphRange:characterRange:]
  -[NSATSGlyphStorage createCTTypesetter]
  -[NSATSGlyphStorage _flushCachedObjects]
  -[NSATSGlyphStorage childGlyphStorageWithCharacterRange:]
  -[NSATSGlyphStorage _createEllipsisRunWithStringRange:attributes:]
  -[NSATSGlyphStorage _resolvePositionalStakeGlyphsForLineFragment:lineFragmentRect:minPosition:maxPosition:maxLineFragmentWidth:breakHint:]
  -[NSATSGlyphStorage _collectElasticRangeSurroundingCharacterAtIndex:minimumCharacterIndex:]
  -[NSATSGlyphStorage _widthForStringRange:]
  -[NSATSGlyphStorage _attributeRunForCharacterAtIndex:]


NSATSLineFragment : NSObject
 @property  BOOL elasticOnly
 @property  BOOL standaloneTextAttachment

  // instance methods
  -[NSATSLineFragment dealloc]
  -[NSATSLineFragment finalize]
  -[NSATSLineFragment _invalidate]
  -[NSATSLineFragment characterRange]
  -[NSATSLineFragment initWithTypesetter:]
  -[NSATSLineFragment layoutForStartingGlyphAtIndex:characterIndex:minPosition:maxPosition:lineFragmentRect:]
  -[NSATSLineFragment glyphRange]
  -[NSATSLineFragment getTypographicLineHeight:baselineOffset:leading:]
  -[NSATSLineFragment justifyWithFactor:]
  -[NSATSLineFragment lineWidthForType:]
  -[NSATSLineFragment resolveOpticalAlignmentUpdatingMinPosition:maxPosition:]
  -[NSATSLineFragment isStandaloneTextAttachment]
  -[NSATSLineFragment hasElasticRange]
  -[NSATSLineFragment isElasticOnly]
  -[NSATSLineFragment saveMorphedGlyphs:]
  -[NSATSLineFragment saveWithGlyphOrigin:]
  -[NSATSLineFragment _copyRenderingContextWithGlyphOrigin:]
  -[NSATSLineFragment _flushCachedObjects]
  -[NSATSLineFragment resolvedLineBreakMode:]
  -[NSATSLineFragment _charIndexToBreakLineByWordWrappingAtIndex:lineFragmentWidth:hyphenate:]


NSLineFragmentRenderingContext : NSObject <NSTextApplicationFrameworkContextClient>
 @property  long long resolvedTextAlignment
 @property  long long resolvedBaseWritingDirection
 @property  CUICatalog *cuiCatalog
 @property  CUIStyleEffectConfiguration *cuiStyleEffects
 @property  BOOL usesSimpleTextEffects
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  long long applicationFrameworkContext

  // class methods
  +[NSLineFragmentRenderingContext allocWithZone:]
  +[NSLineFragmentRenderingContext initialize]

  // instance methods
  -[NSLineFragmentRenderingContext dealloc]
  -[NSLineFragmentRenderingContext release]
  -[NSLineFragmentRenderingContext _tryRetain]
  -[NSLineFragmentRenderingContext _isDeallocating]
  -[NSLineFragmentRenderingContext finalize]
  -[NSLineFragmentRenderingContext applicationFrameworkContext]
  -[NSLineFragmentRenderingContext cuiCatalog]
  -[NSLineFragmentRenderingContext _usesSimpleTextEffects]
  -[NSLineFragmentRenderingContext setApplicationFrameworkContext:]
  -[NSLineFragmentRenderingContext initWithTextStorage:runs:glyphOrigin:lineFragmentWidth:elasticWidth:usesScreenFonts:isRTL:]
  -[NSLineFragmentRenderingContext _setUsesSimpleTextEffects:]
  -[NSLineFragmentRenderingContext drawAtPoint:inContext:]
  -[NSLineFragmentRenderingContext sizeWithBehavior:usesFontLeading:baselineDelta:]
  -[NSLineFragmentRenderingContext getMaximumAscender:minimumDescender:]
  -[NSLineFragmentRenderingContext lineFragmentWidth]
  -[NSLineFragmentRenderingContext elasticWidth]
  -[NSLineFragmentRenderingContext isRTL]
  -[NSLineFragmentRenderingContext imageBounds]
  -[NSLineFragmentRenderingContext resolvedBaseWritingDirection]
  -[NSLineFragmentRenderingContext setResolvedBaseWritingDirection:]
  -[NSLineFragmentRenderingContext resolvedTextAlignment]
  -[NSLineFragmentRenderingContext setResolvedTextAlignment:]
  -[NSLineFragmentRenderingContext setCuiCatalog:]
  -[NSLineFragmentRenderingContext cuiStyleEffects]
  -[NSLineFragmentRenderingContext setCuiStyleEffects:]


__NSImmutableTextStorage : NSTextStorage
 @property  NSLayoutManager *layoutManager
 @property  NSTextContainer *textContainer

  // class methods
  +[__NSImmutableTextStorage allocWithZone:]

  // instance methods
  -[__NSImmutableTextStorage string]
  -[__NSImmutableTextStorage dealloc]
  -[__NSImmutableTextStorage release]
  -[__NSImmutableTextStorage _tryRetain]
  -[__NSImmutableTextStorage _isDeallocating]
  -[__NSImmutableTextStorage attributesAtIndex:effectiveRange:]
  -[__NSImmutableTextStorage attribute:atIndex:effectiveRange:]
  -[__NSImmutableTextStorage attributesAtIndex:longestEffectiveRange:inRange:]
  -[__NSImmutableTextStorage attribute:atIndex:longestEffectiveRange:inRange:]
  -[__NSImmutableTextStorage replaceCharactersInRange:withString:]
  -[__NSImmutableTextStorage setAttributes:range:]
  -[__NSImmutableTextStorage initWithAttributedString:]
  -[__NSImmutableTextStorage layoutManager]
  -[__NSImmutableTextStorage textContainer]
  -[__NSImmutableTextStorage fixAttributesInRange:]
  -[__NSImmutableTextStorage processEditing]


NSSingleLineTypesetter : NSATSTypesetter
  // class methods
  +[NSSingleLineTypesetter initialize]
  +[NSSingleLineTypesetter singleLineTypesetter]
  +[NSSingleLineTypesetter _validateAttributes:measuringOnly:]

  // instance methods
  -[NSSingleLineTypesetter init]
  -[NSSingleLineTypesetter dealloc]
  -[NSSingleLineTypesetter done]
  -[NSSingleLineTypesetter attributedString]
  -[NSSingleLineTypesetter glyphRangeForCharacterRange:actualCharacterRange:]
  -[NSSingleLineTypesetter characterRangeForGlyphRange:actualGlyphRange:]
  -[NSSingleLineTypesetter substituteFontForFont:]
  -[NSSingleLineTypesetter _allowsEllipsisGlyphSubstitution]
  -[NSSingleLineTypesetter setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:]
  -[NSSingleLineTypesetter _mirrorsTextAlignment]
  -[NSSingleLineTypesetter synchronizesAlignmentToDirection]
  -[NSSingleLineTypesetter getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:]
  -[NSSingleLineTypesetter setLocation:withAdvancements:forStartOfGlyphRange:]
  -[NSSingleLineTypesetter setNotShownAttribute:forGlyphRange:]
  -[NSSingleLineTypesetter _textContainerForAttachmentProtocol]
  -[NSSingleLineTypesetter _textStorageForAttachmentProtocol]
  -[NSSingleLineTypesetter _usesScreenFonts]
  -[NSSingleLineTypesetter getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:]
  -[NSSingleLineTypesetter substituteGlyphsInRange:withGlyphs:]
  -[NSSingleLineTypesetter insertGlyph:atGlyphIndex:characterIndex:]
  -[NSSingleLineTypesetter setAttachmentSize:forGlyphRange:]
  -[NSSingleLineTypesetter setBidiLevels:forGlyphRange:]
  -[NSSingleLineTypesetter setDrawsOutsideLineFragment:forGlyphRange:]
  -[NSSingleLineTypesetter createRenderingContextForCharacterRange:typesetterBehavior:usesScreenFonts:hasStrongRight:syncDirection:mirrorsTextAlignment:maximumWidth:]
  -[NSSingleLineTypesetter createRenderingContextForCharacterRange:typesetterBehavior:usesScreenFonts:hasStrongRight:maximumWidth:]
  -[NSSingleLineTypesetter setGlyphs:properties:characterIndexes:font:forGlyphRange:]
  -[NSSingleLineTypesetter insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:]
  -[NSSingleLineTypesetter setIntAttribute:value:forGlyphAtIndex:]
  -[NSSingleLineTypesetter layoutOptions]
  -[NSSingleLineTypesetter deleteGlyphsInRange:]


NSTextLayoutManager : NSObject <NSTextViewportElementProvider, NSSecureCoding>
 @property  <NSTextLayoutManagerDelegate> *delegate
 @property  BOOL usesFontLeading
 @property  BOOL limitsLayoutForSuspiciousContents
 @property  NSTextContentManager *textContentManager
 @property  NSArray *textContainers
 @property  NSTextContainer *templateTextContainer
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} usageBoundsForLastTextContainer
 @property  NSOperationQueue *layoutQueue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSTextLayoutManager supportsSecureCoding]
  +[NSTextLayoutManager viewportLayoutControllerClass]
  +[NSTextLayoutManager companionLayoutManagerClass]

  // instance methods
  -[NSTextLayoutManager init]
  -[NSTextLayoutManager dealloc]
  -[NSTextLayoutManager synchronize]
  -[NSTextLayoutManager replaceCharactersInRange:withAttributedString:]
  -[NSTextLayoutManager encodeWithCoder:]
  -[NSTextLayoutManager initWithCoder:]
  -[NSTextLayoutManager delegate]
  -[NSTextLayoutManager setDelegate:]
  -[NSTextLayoutManager setLayoutQueue:]
  -[NSTextLayoutManager layoutQueue]
  -[NSTextLayoutManager textContainerForLocation:]
  -[NSTextLayoutManager textContentManager]
  -[NSTextLayoutManager setUsesFontLeading:]
  -[NSTextLayoutManager updateLayoutWithTextLayoutFragment:]
  -[NSTextLayoutManager usesFontLeading]
  -[NSTextLayoutManager applicationFrameworkContext]
  -[NSTextLayoutManager setApplicationFrameworkContext:]
  -[NSTextLayoutManager limitsLayoutForSuspiciousContents]
  -[NSTextLayoutManager setLimitsLayoutForSuspiciousContents:]
  -[NSTextLayoutManager textContainers]
  -[NSTextLayoutManager _commonInit]
  -[NSTextLayoutManager setTextContentManager:]
  -[NSTextLayoutManager setTemplateTextContainer:]
  -[NSTextLayoutManager templateTextContainer]
  -[NSTextLayoutManager _addTextContainerFromTemplate:]
  -[NSTextLayoutManager usageBoundsInTextContainerAtIndex:]
  -[NSTextLayoutManager enumerateTextLayoutFragmentsFromLocation:options:usingBlock:]
  -[NSTextLayoutManager _removeTextContainersUntilCondition:]
  -[NSTextLayoutManager ensureLayoutForBounds:]
  -[NSTextLayoutManager replaceCharactersInRange:withElements:]
  -[NSTextLayoutManager enumerateViewportElementsFromLocation:options:usingBlock:]
  -[NSTextLayoutManager _hasLayoutForLocation:]
  -[NSTextLayoutManager viewportLayoutController]
  -[NSTextLayoutManager companionLayoutManager]
  -[NSTextLayoutManager replaceTextContentManager:]
  -[NSTextLayoutManager _removeTextContainer]
  -[NSTextLayoutManager rangeForTextContainerAtIndex:]
  -[NSTextLayoutManager usageBoundsForLastTextContainer]
  -[NSTextLayoutManager textContainerChangedGeometry:]
  -[NSTextLayoutManager ensureLayoutForRange:]
  -[NSTextLayoutManager invalidateLayoutForRange:]
  -[NSTextLayoutManager textLayoutFragmentForPosition:inTextContainerAtIndex:]
  -[NSTextLayoutManager textLayoutFragmentForLocation:]
  -[NSTextLayoutManager finalizeAndPushLastTextContainer]


NSTempAttributeDictionary : NSAttributeDictionary

NSAttributeDictionary : NSDictionary /usr/lib/libobjc.A.dylib
  // class methods
  +[NSAttributeDictionary initialize]
  +[NSAttributeDictionary newWithDictionary:]
  +[NSAttributeDictionary emptyAttributeDictionary]

  // instance methods
  -[NSAttributeDictionary dealloc]
  -[NSAttributeDictionary copyWithZone:]
  -[NSAttributeDictionary mutableCopyWithZone:]
  -[NSAttributeDictionary count]
  -[NSAttributeDictionary objectForKey:]
  -[NSAttributeDictionary getObjects:andKeys:]
  -[NSAttributeDictionary __apply:context:]
  -[NSAttributeDictionary isEqualToDictionary:]
  -[NSAttributeDictionary keyEnumerator]
  -[NSAttributeDictionary newWithKey:object:]


NSAttributeDictionaryEnumerator : NSEnumerator /usr/lib/libobjc.A.dylib
  // instance methods
  -[NSAttributeDictionaryEnumerator dealloc]
  -[NSAttributeDictionaryEnumerator nextObject]
  -[NSAttributeDictionaryEnumerator initWithAttributeDictionary:]


UINibCoderValue : NSObject
  // class methods
  +[UINibCoderValue nibValueForInt8:key:scope:]
  +[UINibCoderValue nibValueForInt16:key:scope:]
  +[UINibCoderValue nibValueForInt32:key:scope:]
  +[UINibCoderValue nibValueForInt64:key:scope:]
  +[UINibCoderValue nibValueForObjectReference:key:scope:]
  +[UINibCoderValue nibValueForInteger:key:scope:]
  +[UINibCoderValue nibValueForBoolean:key:scope:]
  +[UINibCoderValue nibValueForDouble:key:scope:]
  +[UINibCoderValue nibValueForFloat:key:scope:]
  +[UINibCoderValue nibValueForBytes:length:key:scope:]
  +[UINibCoderValue nibValueRepresentingNilReferenceForKey:scope:]

  // instance methods
  -[UINibCoderValue dealloc]
  -[UINibCoderValue byteLength]


_NSStandardTextGraphicsContextProvider : NSObject <NSTextGraphicsContextProvider>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[_NSStandardTextGraphicsContextProvider graphicsContextForApplicationFrameworkContext:]
  +[_NSStandardTextGraphicsContextProvider colorClassForApplicationFrameworkContext:]


NSTextGraphicsContextProvider : NSObject
  // class methods
  +[NSTextGraphicsContextProvider textGraphicsContextProviderClass]
  +[NSTextGraphicsContextProvider textGraphicsContextProviderClassRespondsToColorQuery]
  +[NSTextGraphicsContextProvider __defaultColorClass]
  +[NSTextGraphicsContextProvider setTextGraphicsContextProviderClass:]
  +[NSTextGraphicsContextProvider textGraphicsContextClass]
  +[NSTextGraphicsContextProvider setTextGraphicsContextClass:]


_NSCGTextGraphicsContext : NSObject <NSTextGraphicsContextInternal>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  ^{CGContext=} CGContext
 @property  BOOL flipped
 @property  BOOL drawingToScreen

  // class methods
  +[_NSCGTextGraphicsContext graphicsContextForApplicationFrameworkContext:]

  // instance methods
  -[_NSCGTextGraphicsContext dealloc]
  -[_NSCGTextGraphicsContext isFlipped]
  -[_NSCGTextGraphicsContext CGContext]
  -[_NSCGTextGraphicsContext isDrawingToScreen]
  -[_NSCGTextGraphicsContext saveGraphicsState]
  -[_NSCGTextGraphicsContext restoreGraphicsState]
  -[_NSCGTextGraphicsContext initWithCGContext:]


_NSUIKitTextGraphicsContext : NSObject <NSTextGraphicsContextInternal>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  ^{CGContext=} CGContext
 @property  BOOL flipped
 @property  BOOL drawingToScreen

  // class methods
  +[_NSUIKitTextGraphicsContext graphicsContextForApplicationFrameworkContext:]
  +[_NSUIKitTextGraphicsContext sharedContext]

  // instance methods
  -[_NSUIKitTextGraphicsContext isFlipped]
  -[_NSUIKitTextGraphicsContext CGContext]
  -[_NSUIKitTextGraphicsContext isDrawingToScreen]
  -[_NSUIKitTextGraphicsContext saveGraphicsState]
  -[_NSUIKitTextGraphicsContext restoreGraphicsState]


NSShadow : NSObject <NSCopying, NSSecureCoding>
 @property  {CGSize=dd} shadowOffset
 @property  double shadowBlurRadius
 @property  id shadowColor

  // class methods
  +[NSShadow initialize]
  +[NSShadow supportsSecureCoding]
  +[NSShadow shadow]
  +[NSShadow defaultShadowColor]

  // instance methods
  -[NSShadow init]
  -[NSShadow dealloc]
  -[NSShadow isEqual:]
  -[NSShadow copyWithZone:]
  -[NSShadow encodeWithCoder:]
  -[NSShadow initWithCoder:]
  -[NSShadow shadowOffset]
  -[NSShadow setShadowOffset:]
  -[NSShadow applyToGraphicsContext:]
  -[NSShadow shadowBlurRadius]
  -[NSShadow setShadowBlurRadius:]
  -[NSShadow shadowColor]
  -[NSShadow setShadowColor:]
  -[NSShadow initWithShadow:]


UINibDecoder : NSCoder /usr/lib/libSystem.B.dylib
 @property  id delegate
 @property  long long uniqueIDForCurrentlyDecodingObject
 @property  BOOL reusable

  // class methods
  +[UINibDecoder unarchiveObjectWithData:]
  +[UINibDecoder unarchiveObjectWithFile:]

  // instance methods
  -[UINibDecoder dealloc]
  -[UINibDecoder allowsKeyedCoding]
  -[UINibDecoder delegate]
  -[UINibDecoder setDelegate:]
  -[UINibDecoder decodeBytesForKey:returnedLength:]
  -[UINibDecoder decodeInt64ForKey:]
  -[UINibDecoder replaceObject:withObject:]
  -[UINibDecoder containsValueForKey:]
  -[UINibDecoder decodeInt32ForKey:]
  -[UINibDecoder decodeIntegerForKey:]
  -[UINibDecoder decodeObject]
  -[UINibDecoder decodeArrayOfObjCType:count:at:]
  -[UINibDecoder versionForClassName:]
  -[UINibDecoder decodeValueOfObjCType:at:]
  -[UINibDecoder initForReadingWithData:]
  -[UINibDecoder systemVersion]
  -[UINibDecoder decodeValuesOfObjCTypes:]
  -[UINibDecoder decodeBytesWithReturnedLength:]
  -[UINibDecoder decodeDataObject]
  -[UINibDecoder decodeObjectForKey:]
  -[UINibDecoder decodeIntForKey:]
  -[UINibDecoder decodeDoubleForKey:]
  -[UINibDecoder decodeBoolForKey:]
  -[UINibDecoder decodeFloatForKey:]
  -[UINibDecoder finishDecoding]
  -[UINibDecoder decodeCGPointForKey:]
  -[UINibDecoder decodeCGSizeForKey:]
  -[UINibDecoder decodeCGRectForKey:]
  -[UINibDecoder validateAndIndexData:error:]
  -[UINibDecoder initForReadingWithData:error:]
  -[UINibDecoder validateAndIndexClasses:length:]
  -[UINibDecoder validateAndIndexKeys:length:]
  -[UINibDecoder validateAndIndexValues:length:]
  -[UINibDecoder validateAndIndexObjects:length:]
  -[UINibDecoder decodeArrayOfCGFloats:count:forKey:]
  -[UINibDecoder nextGenericKey]
  -[UINibDecoder isReusable]
  -[UINibDecoder uniqueIDForCurrentlyDecodingObject]
  -[UINibDecoder decodeArrayOfFloats:count:forKey:]
  -[UINibDecoder decodeArrayOfDoubles:count:forKey:]
  -[UINibDecoder decodeCGAffineTransformForKey:]
  -[UINibDecoder decodeUIEdgeInsetsForKey:]
  -[UINibDecoder decodeNXObject]
  -[UINibDecoder decodePropertyList]


UINibStringIDTable : NSObject
  // instance methods
  -[UINibStringIDTable dealloc]
  -[UINibStringIDTable count]
  -[UINibStringIDTable lookupKey:identifier:]
  -[UINibStringIDTable initWithKeysTransferingOwnership:count:]


NSDataAsset : NSObject <NSCopying>
 @property  NSString *name
 @property  NSData *data
 @property  NSString *typeIdentifier

  // class methods
  +[NSDataAsset _namedDataPrivateAccessorWithName:bundle:]

  // instance methods
  -[NSDataAsset init]
  -[NSDataAsset dealloc]
  -[NSDataAsset isEqual:]
  -[NSDataAsset name]
  -[NSDataAsset copyWithZone:]
  -[NSDataAsset data]
  -[NSDataAsset initWithName:]
  -[NSDataAsset typeIdentifier]
  -[NSDataAsset initWithName:bundle:]


_NSAttributes : NSObject
  // instance methods
  -[_NSAttributes dealloc]
  -[_NSAttributes initWithAttributes:range:]
  -[_NSAttributes setAttributesInTextStorage:]


_NSAttributeRun : NSObject <NSCopying>
  // instance methods
  -[_NSAttributeRun dealloc]
  -[_NSAttributeRun copyWithZone:]
  -[_NSAttributeRun range]
  -[_NSAttributeRun initWithTextStorage:range:]
  -[_NSAttributeRun restoreAttributesOfTextStorage:]


NSGlyphGenerator : NSObject
  // class methods
  +[NSGlyphGenerator initialize]
  +[NSGlyphGenerator defaultGlyphGenerator]
  +[NSGlyphGenerator sharedGlyphGenerator]

  // instance methods
  -[NSGlyphGenerator generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:]


NSGlyphInfo : NSObject <NSCopying, NSSecureCoding>
  // class methods
  +[NSGlyphInfo initialize]
  +[NSGlyphInfo supportsSecureCoding]
  +[NSGlyphInfo glyphInfoWithGlyph:forFont:baseString:]
  +[NSGlyphInfo glyphInfoWithCharacterIdentifier:collection:baseString:]
  +[NSGlyphInfo glyphInfoWithGlyphName:forFont:baseString:]
  +[NSGlyphInfo glyphInfoWithCGGlyph:forFont:baseString:]

  // instance methods
  -[NSGlyphInfo dealloc]
  -[NSGlyphInfo copyWithZone:]
  -[NSGlyphInfo encodeWithCoder:]
  -[NSGlyphInfo initWithCoder:]
  -[NSGlyphInfo classForKeyedArchiver]
  -[NSGlyphInfo baseString]
  -[NSGlyphInfo _baseString]
  -[NSGlyphInfo characterIdentifier]
  -[NSGlyphInfo characterCollection]
  -[NSGlyphInfo glyphName]
  -[NSGlyphInfo _glyphForFont:baseString:]
  -[NSGlyphInfo initWithBaseString:]
  -[NSGlyphInfo glyphID]


NSIdentityGlyphInfo : NSGlyphInfo <NSSecureCoding>
  // class methods
  +[NSIdentityGlyphInfo initialize]
  +[NSIdentityGlyphInfo supportsSecureCoding]
  +[NSIdentityGlyphInfo glyphInfoWithGlyph:forFont:baseString:]

  // instance methods
  -[NSIdentityGlyphInfo dealloc]
  -[NSIdentityGlyphInfo encodeWithCoder:]
  -[NSIdentityGlyphInfo initWithCoder:]
  -[NSIdentityGlyphInfo _font]
  -[NSIdentityGlyphInfo _glyph]
  -[NSIdentityGlyphInfo _glyphForFont:baseString:]
  -[NSIdentityGlyphInfo initWithGlyph:forFont:baseString:]
  -[NSIdentityGlyphInfo glyph]


NSGlyphNameGlyphInfo : NSIdentityGlyphInfo <NSSecureCoding>
  // class methods
  +[NSGlyphNameGlyphInfo initialize]
  +[NSGlyphNameGlyphInfo supportsSecureCoding]

  // instance methods
  -[NSGlyphNameGlyphInfo dealloc]
  -[NSGlyphNameGlyphInfo encodeWithCoder:]
  -[NSGlyphNameGlyphInfo initWithCoder:]
  -[NSGlyphNameGlyphInfo glyphName]
  -[NSGlyphNameGlyphInfo initWithGlyphName:glyph:forFont:baseString:]


NSCIDGlyphInfo : NSGlyphInfo <NSSecureCoding>
  // class methods
  +[NSCIDGlyphInfo initialize]
  +[NSCIDGlyphInfo supportsSecureCoding]
  +[NSCIDGlyphInfo glyphInfoWithCharacterIdentifier:collection:baseString:]

  // instance methods
  -[NSCIDGlyphInfo encodeWithCoder:]
  -[NSCIDGlyphInfo initWithCoder:]
  -[NSCIDGlyphInfo characterIdentifier]
  -[NSCIDGlyphInfo characterCollection]
  -[NSCIDGlyphInfo _glyphForFont:baseString:]
  -[NSCIDGlyphInfo initWithCharacterIdentifier:collection:baseString:]


NSCTGlyphInfo : NSGlyphInfo <NSSecureCoding>
  // class methods
  +[NSCTGlyphInfo supportsSecureCoding]

  // instance methods
  -[NSCTGlyphInfo retainCount]
  -[NSCTGlyphInfo isEqual:]
  -[NSCTGlyphInfo retain]
  -[NSCTGlyphInfo release]
  -[NSCTGlyphInfo retainWeakReference]
  -[NSCTGlyphInfo allowsWeakReference]
  -[NSCTGlyphInfo encodeWithCoder:]
  -[NSCTGlyphInfo _cfTypeID]
  -[NSCTGlyphInfo _baseString]
  -[NSCTGlyphInfo characterIdentifier]
  -[NSCTGlyphInfo characterCollection]
  -[NSCTGlyphInfo glyphName]
  -[NSCTGlyphInfo _glyphForFont:baseString:]


NSTextElement : NSObject
 @property  NSTextContentManager *textContentManager
 @property  NSTextRange *elementRange

  // instance methods
  -[NSTextElement init]
  -[NSTextElement dealloc]
  -[NSTextElement elementRange]
  -[NSTextElement textContentManager]
  -[NSTextElement setTextContentManager:]
  -[NSTextElement initWithTextContentManager:]
  -[NSTextElement setElementRange:]


NSTextParagraph : NSTextElement
 @property  NSAttributedString *attributedString
 @property  NSTextRange *paragraphContentRange
 @property  NSTextRange *paragraphSeparatorRange

  // class methods
  +[NSTextParagraph textParagraphsForAttributedString:range:]

  // instance methods
  -[NSTextParagraph init]
  -[NSTextParagraph dealloc]
  -[NSTextParagraph setAttributedString:]
  -[NSTextParagraph initWithAttributedString:]
  -[NSTextParagraph attributedString]
  -[NSTextParagraph paragraphContentRange]
  -[NSTextParagraph initWithAttributedString:range:]
  -[NSTextParagraph initWithTextContentManager:]
  -[NSTextParagraph setTextDataProvider:]
  -[NSTextParagraph setParagraphContentRange:]
  -[NSTextParagraph paragraphSeparatorRange]
  -[NSTextParagraph setParagraphSeparatorRange:]
  -[NSTextParagraph synchronizeDocumentRange]
  -[NSTextParagraph paragraphRange]
  -[NSTextParagraph textDataProvider]


NSParagraphArbitrator : NSObject
 @property  NSAttributedString *attributedString
 @property  {_NSRange=QQ} paragraphRange
 @property  @? lineWidth
 @property  @? validateLineBreakContext
 @property  unsigned long lineBreakStrategy
 @property  double hyphenationFactor
 @property  long long typesetterBehavior
 @property  {_NSRange=QQ} previousLineRange

  // class methods
  +[NSParagraphArbitrator paragraphArbitratorWithAttributedString:range:]

  // instance methods
  -[NSParagraphArbitrator init]
  -[NSParagraphArbitrator dealloc]
  -[NSParagraphArbitrator setAttributedString:]
  -[NSParagraphArbitrator reset]
  -[NSParagraphArbitrator attributedString]
  -[NSParagraphArbitrator initWithAttributedString:range:]
  -[NSParagraphArbitrator typesetterBehavior]
  -[NSParagraphArbitrator lineBreakStrategy]
  -[NSParagraphArbitrator hyphenationFactor]
  -[NSParagraphArbitrator setLineBreakStrategy:]
  -[NSParagraphArbitrator setHyphenationFactor:]
  -[NSParagraphArbitrator setValidateLineBreakContext:]
  -[NSParagraphArbitrator setLineWidth:]
  -[NSParagraphArbitrator setParagraphRange:]
  -[NSParagraphArbitrator setTypesetterBehavior:]
  -[NSParagraphArbitrator lineBreakContextBeforeIndex:lineFragmentWidth:range:]
  -[NSParagraphArbitrator paragraphRange]
  -[NSParagraphArbitrator setPreviousLineRange:]
  -[NSParagraphArbitrator lineWidth]
  -[NSParagraphArbitrator previousLineRange]
  -[NSParagraphArbitrator validateLineBreakContext]
  -[NSParagraphArbitrator adjustedLineBreakIndexForProposedIndex:]


NSTextAlternatives : NSObject <NSSecureCoding>
 @property  BOOL isLowConfidence
 @property  NSString *primaryString
 @property  NSArray *alternativeStrings

  // class methods
  +[NSTextAlternatives supportsSecureCoding]

  // instance methods
  -[NSTextAlternatives dealloc]
  -[NSTextAlternatives copyWithZone:]
  -[NSTextAlternatives encodeWithCoder:]
  -[NSTextAlternatives initWithCoder:]
  -[NSTextAlternatives identifier]
  -[NSTextAlternatives alternativeStrings]
  -[NSTextAlternatives primaryString]
  -[NSTextAlternatives initWithPrimaryString:alternativeStrings:]
  -[NSTextAlternatives initWithPrimaryString:alternativeStrings:identifier:isLowConfidence:]
  -[NSTextAlternatives initWithPrimaryString:alternativeStrings:isLowConfidence:]
  -[NSTextAlternatives initWithPrimaryString:alternativeStrings:identifier:]
  -[NSTextAlternatives initWithOriginalText:alternatives:]
  -[NSTextAlternatives initWithOriginalText:alternatives:identifier:]
  -[NSTextAlternatives noteSelectedAlternativeString:]
  -[NSTextAlternatives originalText]
  -[NSTextAlternatives numberOfAlternatives]
  -[NSTextAlternatives alternatives]
  -[NSTextAlternatives alternativeAtIndex:]
  -[NSTextAlternatives isLowConfidence]
  -[NSTextAlternatives setIsLowConfidence:]


NSExtraLMData : NSObject

NSLayoutManagerTextBlockHelper : NSObject
  // instance methods
  -[NSLayoutManagerTextBlockHelper dealloc]
  -[NSLayoutManagerTextBlockHelper initWithTextBlock:layoutRect:boundsRect:]


NSLayoutManagerTextBlockRowArrayCache : NSObject
  // instance methods
  -[NSLayoutManagerTextBlockRowArrayCache dealloc]
  -[NSLayoutManagerTextBlockRowArrayCache initWithRowCharRange:containerWidth:rowArray:collapseBorders:]


NSLayoutManager : NSObject <NSSecureCoding>
 @property  BOOL allowsOriginalFontMetricsOverride
 @property  NSParagraphArbitrator *paragraphArbitrator
 @property  CUIStyleEffectConfiguration *styleEffectConfiguration
 @property  BOOL scrolling
 @property  NSTextStorage *textStorage
 @property  NSArray *textContainers
 @property  <NSLayoutManagerDelegate> *delegate
 @property  BOOL showsInvisibleCharacters
 @property  BOOL showsControlCharacters
 @property  BOOL usesFontLeading
 @property  BOOL allowsNonContiguousLayout
 @property  BOOL hasNonContiguousLayout
 @property  BOOL limitsLayoutForSuspiciousContents
 @property  BOOL usesDefaultHyphenation
 @property  unsigned long numberOfGlyphs
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} extraLineFragmentRect
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} extraLineFragmentUsedRect
 @property  NSTextContainer *extraLineFragmentTextContainer

  // class methods
  +[NSLayoutManager initialize]
  +[NSLayoutManager supportsSecureCoding]
  +[NSLayoutManager _defaultLinkAttributes]
  +[NSLayoutManager _inBackgroundLayout]
  +[NSLayoutManager _doSomeBackgroundLayout]
  +[NSLayoutManager _usesScreenFonts]
  +[NSLayoutManager _ignoresViewTransformations]
  +[NSLayoutManager _showsInvisibleCharacters]
  +[NSLayoutManager _showsControlCharacters]

  // instance methods
  -[NSLayoutManager init]
  -[NSLayoutManager dealloc]
  -[NSLayoutManager finalize]
  -[NSLayoutManager encodeWithCoder:]
  -[NSLayoutManager initWithCoder:]
  -[NSLayoutManager delegate]
  -[NSLayoutManager setDelegate:]
  -[NSLayoutManager attributedString]
  -[NSLayoutManager setUsesFontLeading:]
  -[NSLayoutManager usesFontLeading]
  -[NSLayoutManager applicationFrameworkContext]
  -[NSLayoutManager glyphRangeForCharacterRange:actualCharacterRange:]
  -[NSLayoutManager drawGlyphsForGlyphRange:atPoint:]
  -[NSLayoutManager textStorage]
  -[NSLayoutManager styleEffectConfiguration]
  -[NSLayoutManager glyphIndexForCharacterAtIndex:]
  -[NSLayoutManager textContainerForGlyphAtIndex:effectiveRange:]
  -[NSLayoutManager typesetter]
  -[NSLayoutManager lineFragmentUsedRectForGlyphAtIndex:effectiveRange:]
  -[NSLayoutManager locationForGlyphAtIndex:]
  -[NSLayoutManager intAttribute:forGlyphAtIndex:]
  -[NSLayoutManager rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:]
  -[NSLayoutManager characterIndexForGlyphAtIndex:]
  -[NSLayoutManager glyphAtIndex:]
  -[NSLayoutManager _drawsUnderlinesLikeWebKit]
  -[NSLayoutManager notShownAttributeForGlyphAtIndex:]
  -[NSLayoutManager _drawLineForGlyphRange:inContext:from:to:at:thickness:lineOrigin:breakForDescenders:flipped:]
  -[NSLayoutManager characterRangeForGlyphRange:actualGlyphRange:]
  -[NSLayoutManager temporaryAttribute:atCharacterIndex:effectiveRange:]
  -[NSLayoutManager defaultLineHeightForFont:]
  -[NSLayoutManager defaultBaselineOffsetForFont:]
  -[NSLayoutManager temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:]
  -[NSLayoutManager drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:]
  -[NSLayoutManager drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:]
  -[NSLayoutManager _showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:]
  -[NSLayoutManager _showAttachmentCell:inRect:characterIndex:]
  -[NSLayoutManager drawSpellingUnderlineForGlyphRange:spellingState:inGlyphRange:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:]
  -[NSLayoutManager _drawLineForGlyphRange:inContext:from:to:at:thickness:lineOrigin:breakForDescenders:]
  -[NSLayoutManager _drawLineForGlyphRange:type:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:isStrikethrough:]
  -[NSLayoutManager _lineGlyphRange:type:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:isStrikethrough:]
  -[NSLayoutManager renderingColorForDocumentColor:]
  -[NSLayoutManager linkAttributesForLink:forCharacterAtIndex:]
  -[NSLayoutManager _primitiveCharacterRangeForGlyphRange:]
  -[NSLayoutManager _blockRangeForCharRange:]
  -[NSLayoutManager _primitiveGlyphRangeForCharacterRange:]
  -[NSLayoutManager _blockRowRangeForCharRange:completeRows:]
  -[NSLayoutManager _blockRowRangeForCharRange:]
  -[NSLayoutManager _glyphIndexForCharacterIndex:startOfRange:okToFillHoles:considerNulls:]
  -[NSLayoutManager _fillGlyphHoleForCharacterRange:startGlyphIndex:desiredNumberOfCharacters:]
  -[NSLayoutManager glyphGenerator]
  -[NSLayoutManager _setExtraLineFragmentRect:usedRect:textContainer:]
  -[NSLayoutManager _setTextContainer:forGlyphRange:]
  -[NSLayoutManager setLineFragmentRect:forGlyphRange:usedRect:]
  -[NSLayoutManager setLocation:forStartOfGlyphRange:]
  -[NSLayoutManager glyphRangeForBoundingRect:inTextContainer:]
  -[NSLayoutManager _noteFirstTextViewVisibleCharacterRangeIfAfterIndex:]
  -[NSLayoutManager _doOptimizedLayoutStartingAtGlyphIndex:forCharacterRange:inTextContainer:lineLimit:nextGlyphIndex:]
  -[NSLayoutManager _invalidateGlyphsForExtendedCharacterRange:changeInLength:includeBlocks:]
  -[NSLayoutManager layoutRectForTextBlock:atIndex:effectiveRange:]
  -[NSLayoutManager setTextContainer:forGlyphRange:]
  -[NSLayoutManager setNotShownAttribute:forGlyphAtIndex:]
  -[NSLayoutManager hasNonContiguousLayout]
  -[NSLayoutManager isScrolling]
  -[NSLayoutManager _doLayoutWithFullContainerStartingAtGlyphIndex:nextGlyphIndex:]
  -[NSLayoutManager _invalidateLayoutForExtendedCharacterRange:isSoft:invalidateUsage:]
  -[NSLayoutManager _invalidateUsageForTextContainersInRange:]
  -[NSLayoutManager _resizeTextViewForTextContainer:]
  -[NSLayoutManager _invalidateInsertionPoint]
  -[NSLayoutManager invalidateDisplayForGlyphRange:]
  -[NSLayoutManager _invalidateDisplayIfNeeded]
  -[NSLayoutManager _invalidateLayoutForExtendedCharacterRange:isSoft:]
  -[NSLayoutManager _fillLayoutHoleForCharacterRange:desiredNumberOfLines:isSoft:]
  -[NSLayoutManager _smallEncodingGlyphIndexForCharacterIndex:startOfRange:okToFillHoles:considerNulls:]
  -[NSLayoutManager _mergeLayoutHoles]
  -[NSLayoutManager _fillLayoutHoleAtIndex:desiredNumberOfLines:]
  -[NSLayoutManager _lineFragmentDescriptionForGlyphRange:includeGlyphLocations:]
  -[NSLayoutManager _lineFragmentDescription:]
  -[NSLayoutManager _glyphDescriptionForGlyphRange:]
  -[NSLayoutManager _indexOfFirstGlyphInTextContainer:okToFillHoles:]
  -[NSLayoutManager _recalculateUsageForTextContainerAtIndex:]
  -[NSLayoutManager invalidateDisplayForCharacterRange:]
  -[NSLayoutManager propertyForGlyphAtIndex:]
  -[NSLayoutManager _growCachedRectArrayToSize:]
  -[NSLayoutManager _rectArrayForRange:withinSelectionRange:rangeIsCharRange:singleRectOnly:fullLineRectsOnly:inTextContainer:rectCount:rangeWithinContainer:glyphsDrawOutsideLines:rectArray:rectArrayCapacity:]
  -[NSLayoutManager _rectArrayForRange:withinSelectionRange:rangeIsCharRange:singleRectOnly:fullLineRectsOnly:inTextContainer:rectCount:rangeWithinContainer:glyphsDrawOutsideLines:]
  -[NSLayoutManager _setCachedTextContainer:isVertical:]
  -[NSLayoutManager substituteFontForFont:]
  -[NSLayoutManager attachmentSizeForGlyphAtIndex:]
  -[NSLayoutManager _resetCachedTextContainer]
  -[NSLayoutManager _glyphRangeForCharacterRange:actualCharacterRange:okToFillHoles:]
  -[NSLayoutManager _firstPassGlyphRangeForBoundingRect:inTextContainer:hintGlyphRange:okToFillHoles:]
  -[NSLayoutManager _firstPassGlyphRangeForBoundingRect:inTextContainer:okToFillHoles:]
  -[NSLayoutManager _setRowArrayCache:]
  -[NSLayoutManager _markSelfAsDirtyForBackgroundLayout:]
  -[NSLayoutManager boundsRectForTextBlock:atIndex:effectiveRange:]
  -[NSLayoutManager temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:]
  -[NSLayoutManager rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:]
  -[NSLayoutManager fillBackgroundRectArray:count:forCharacterRange:color:]
  -[NSLayoutManager fillMarkedBackgroundRectArray:count:forCharacterRange:color:]
  -[NSLayoutManager _drawsDebugBaselines]
  -[NSLayoutManager _hasSeenRightToLeft]
  -[NSLayoutManager showAttachmentCell:inRect:characterIndex:]
  -[NSLayoutManager showAttachment:inRect:textContainer:characterIndex:]
  -[NSLayoutManager underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:]
  -[NSLayoutManager showCGGlyphs:positions:count:font:matrix:attributes:inContext:]
  -[NSLayoutManager strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:]
  -[NSLayoutManager setBaselineOffset:forGlyphAtIndex:]
  -[NSLayoutManager _invalidateGlyphsForExtendedCharacterRange:changeInLength:]
  -[NSLayoutManager invalidateLayoutForCharacterRange:actualCharacterRange:]
  -[NSLayoutManager _updateUsageForTextContainer:addingUsedRect:]
  -[NSLayoutManager addTemporaryAttribute:value:forCharacterRange:]
  -[NSLayoutManager glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:]
  -[NSLayoutManager _primitiveInvalidateDisplayForGlyphRange:]
  -[NSLayoutManager ensureLayoutForGlyphRange:]
  -[NSLayoutManager numberOfGlyphs]
  -[NSLayoutManager underlineColorForTextAlternatives]
  -[NSLayoutManager underlineColorForSpelling]
  -[NSLayoutManager _mergeGlyphHoles]
  -[NSLayoutManager _blockRangeForGlyphRange:]
  -[NSLayoutManager _blockRowRangeForGlyphRange:completeRows:]
  -[NSLayoutManager _blockRowRangeForGlyphRange:]
  -[NSLayoutManager _rowArrayCache]
  -[NSLayoutManager _extendedCharRangeForInvalidation:editedCharRange:]
  -[NSLayoutManager _adjustCharacterIndicesForRawGlyphRange:byDelta:]
  -[NSLayoutManager _canDoLayout]
  -[NSLayoutManager _fillGlyphHoleAtIndex:desiredNumberOfCharacters:]
  -[NSLayoutManager _smallEncodingGlyphIndexForCharacterIndex:startOfRange:okToFillHoles:]
  -[NSLayoutManager _glyphIndexForCharacterIndex:startOfRange:okToFillHoles:]
  -[NSLayoutManager _containerDescription]
  -[NSLayoutManager _lineFragmentDescription]
  -[NSLayoutManager _glyphLocationDescription]
  -[NSLayoutManager _glyphDescription]
  -[NSLayoutManager _glyphHoleDescription]
  -[NSLayoutManager _layoutHoleDescription]
  -[NSLayoutManager _glyphTreeDescription]
  -[NSLayoutManager _layoutTreeDescription]
  -[NSLayoutManager _blockDescription]
  -[NSLayoutManager _validatedStoredUsageForTextContainerAtIndex:]
  -[NSLayoutManager _selectedRanges]
  -[NSLayoutManager _fixSelectionAfterChangeInCharacterRange:changeInLength:]
  -[NSLayoutManager _boundingRectForGlyphRange:inTextContainer:fast:fullLineRectsOnly:]
  -[NSLayoutManager _glyphRangeForBoundingRect:inTextContainer:fast:okToFillHoles:]
  -[NSLayoutManager _firstTextViewChanged]
  -[NSLayoutManager _drawBackgroundForGlyphRange:atPoint:]
  -[NSLayoutManager selectedTextAttributesForCharacterAtIndex:effectiveRange:]
  -[NSLayoutManager _packedGlyphs:range:length:]
  -[NSLayoutManager _drawGlyphsForGlyphRange:atPoint:]
  -[NSLayoutManager _glyphAtIndex:characterIndex:glyphInscription:isValidIndex:]
  -[NSLayoutManager _needToFlushGlyph]
  -[NSLayoutManager _setNeedToFlushGlyph:]
  -[NSLayoutManager _simpleInsertGlyph:atGlyphIndex:characterIndex:elastic:]
  -[NSLayoutManager _simpleDeleteGlyphsInRange:]
  -[NSLayoutManager _insertGlyphs:elasticAttributes:count:atGlyphIndex:characterIndex:]
  -[NSLayoutManager _promoteGlyphStoreToFormat:]
  -[NSLayoutManager _attachmentSizesRun]
  -[NSLayoutManager _currentAttachmentRect]
  -[NSLayoutManager _currentAttachmentIndex]
  -[NSLayoutManager _setCurrentAttachmentRect:index:]
  -[NSLayoutManager _clearCurrentAttachmentSettings]
  -[NSLayoutManager _clearTemporaryAttributes]
  -[NSLayoutManager _clearTemporaryAttributesForCharacterRange:changeInLength:]
  -[NSLayoutManager setAllowsOriginalFontMetricsOverride:]
  -[NSLayoutManager allowsOriginalFontMetricsOverride]
  -[NSLayoutManager _setHasSeenRightToLeft:]
  -[NSLayoutManager flipsIfNeeded]
  -[NSLayoutManager setFlipsIfNeeded:]
  -[NSLayoutManager setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:]
  -[NSLayoutManager baselineOffsetForGlyphAtIndex:]
  -[NSLayoutManager ignoresViewTransformations]
  -[NSLayoutManager setIgnoresViewTransformations:]
  -[NSLayoutManager ignoresAntialiasThreshold]
  -[NSLayoutManager setIgnoresAntialiasThreshold:]
  -[NSLayoutManager _alwaysDrawsActive]
  -[NSLayoutManager _setAlwaysDrawsActive:]
  -[NSLayoutManager _insertionPointHelperForGlyphAtIndex:]
  -[NSLayoutManager getLineFragmentInsertionPointArraysForCharacterAtIndex:inDisplayOrder:positions:characterIndexes:count:alternatePositions:characterIndexes:count:]
  -[NSLayoutManager _selectionRangesForInsertionPointRange:]
  -[NSLayoutManager _setDrawsUnderlinesLikeWebKit:]
  -[NSLayoutManager _setDrawsDebugBaselines:]
  -[NSLayoutManager _mirrorsTextAlignment]
  -[NSLayoutManager _setMirrorsTextAlignment:]
  -[NSLayoutManager _forcesTrackingFloor]
  -[NSLayoutManager _setForcesTrackingFloor:]
  -[NSLayoutManager rangeOfCharacterClusterAtIndex:type:]
  -[NSLayoutManager paragraphArbitrator]
  -[NSLayoutManager setParagraphArbitrator:]
  -[NSLayoutManager setStyleEffectConfiguration:]
  -[NSLayoutManager viewProviderForTextAttachment:characterIndex:]
  -[NSLayoutManager setViewProvider:forTextAttachment:characterIndex:]
  -[NSLayoutManager beginScrollingForView:textContainer:]
  -[NSLayoutManager endScrollingForView:textContainer:]
  -[NSLayoutManager prepareLayoutForBoundingRect:textContainer:]
  -[NSLayoutManager setUnderlineColorForTextAlternatives:]
  -[NSLayoutManager setUnderlineColorForSpelling:]
  -[NSLayoutManager setApplicationFrameworkContext:]
  -[NSLayoutManager getFirstUnlaidCharacterIndex:glyphIndex:]
  -[NSLayoutManager ensureLayoutForCharacterRange:]
  -[NSLayoutManager synchronizesAlignmentToDirection]
  -[NSLayoutManager typesetterBehavior]
  -[NSLayoutManager hyphenationFactor]
  -[NSLayoutManager limitsLayoutForSuspiciousContents]
  -[NSLayoutManager setLimitsLayoutForSuspiciousContents:]
  -[NSLayoutManager textContainers]
  -[NSLayoutManager getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:]
  -[NSLayoutManager setHyphenationFactor:]
  -[NSLayoutManager setTypesetterBehavior:]
  -[NSLayoutManager insertGlyph:atGlyphIndex:characterIndex:]
  -[NSLayoutManager setEllipsisGlyphAttribute:forGlyphAtIndex:]
  -[NSLayoutManager setAttachmentSize:forGlyphRange:]
  -[NSLayoutManager setAllowsNonContiguousLayout:]
  -[NSLayoutManager setBackgroundLayoutEnabled:]
  -[NSLayoutManager addTextContainer:]
  -[NSLayoutManager setGlyphs:properties:characterIndexes:font:forGlyphRange:]
  -[NSLayoutManager insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:]
  -[NSLayoutManager setIntAttribute:value:forGlyphAtIndex:]
  -[NSLayoutManager layoutOptions]
  -[NSLayoutManager deleteGlyphsInRange:]
  -[NSLayoutManager _commonInit]
  -[NSLayoutManager textContainerChangedGeometry:]
  -[NSLayoutManager setGlyphGenerator:]
  -[NSLayoutManager insertTextContainer:atIndex:]
  -[NSLayoutManager _characterRangeCurrentlyInAndAfterContainer:]
  -[NSLayoutManager textContainerChangedTextView:]
  -[NSLayoutManager _setGlyphsPerLineEstimate:offsetPerLineEstimate:]
  -[NSLayoutManager invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:]
  -[NSLayoutManager invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:]
  -[NSLayoutManager _invalidateGlyphsForCharacterRange:editedCharacterRange:changeInLength:actualCharacterRange:]
  -[NSLayoutManager _forceDisplayToBeCorrectForViewsWithUnlaidGlyphs]
  -[NSLayoutManager textStorage:edited:range:changeInLength:invalidatedRange:]
  -[NSLayoutManager ensureGlyphsForCharacterRange:]
  -[NSLayoutManager _primitiveDeleteGlyphsInRange:]
  -[NSLayoutManager glyphAtIndex:isValidIndex:]
  -[NSLayoutManager CGGlyphAtIndex:isValidIndex:]
  -[NSLayoutManager CGGlyphAtIndex:]
  -[NSLayoutManager getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:]
  -[NSLayoutManager firstUnlaidCharacterIndex]
  -[NSLayoutManager firstUnlaidGlyphIndex]
  -[NSLayoutManager lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:]
  -[NSLayoutManager lineFragmentRectForGlyphAtIndex:effectiveRange:]
  -[NSLayoutManager fractionOfDistanceThroughGlyphForPoint:inTextContainer:]
  -[NSLayoutManager glyphIndexForPoint:inTextContainer:]
  -[NSLayoutManager glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:]
  -[NSLayoutManager temporaryAttributesAtCharacterIndex:effectiveRange:]
  -[NSLayoutManager usesScreenFonts]
  -[NSLayoutManager showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:]
  -[NSLayoutManager setTextStorage:]
  -[NSLayoutManager replaceTextStorage:]
  -[NSLayoutManager _glyphGenerator]
  -[NSLayoutManager _setGlyphGenerator:]
  -[NSLayoutManager setTypesetter:]
  -[NSLayoutManager removeTextContainerAtIndex:]
  -[NSLayoutManager textContainerChangedTextView:fromTextView:]
  -[NSLayoutManager allowsNonContiguousLayout]
  -[NSLayoutManager _setGlyphsPerLineEstimate:integerOffsetPerLineEstimate:]
  -[NSLayoutManager backgroundLayoutEnabled]
  -[NSLayoutManager setUsesScreenFonts:]
  -[NSLayoutManager setShowsInvisibleCharacters:]
  -[NSLayoutManager showsInvisibleCharacters]
  -[NSLayoutManager setShowsControlCharacters:]
  -[NSLayoutManager showsControlCharacters]
  -[NSLayoutManager usesDefaultHyphenation]
  -[NSLayoutManager setUsesDefaultHyphenation:]
  -[NSLayoutManager backgroundColorProvidesOpaqueSurface]
  -[NSLayoutManager processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:]
  -[NSLayoutManager ensureGlyphsForGlyphRange:]
  -[NSLayoutManager ensureLayoutForTextContainer:]
  -[NSLayoutManager ensureLayoutForBoundingRect:inTextContainer:]
  -[NSLayoutManager replaceGlyphAtIndex:withGlyph:]
  -[NSLayoutManager setCharacterIndex:forGlyphAtIndex:]
  -[NSLayoutManager invalidateGlyphsOnLayoutInvalidationForGlyphRange:]
  -[NSLayoutManager isValidGlyphIndex:]
  -[NSLayoutManager getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:]
  -[NSLayoutManager getGlyphs:range:]
  -[NSLayoutManager setExtraLineFragmentRect:usedRect:textContainer:]
  -[NSLayoutManager setLocation:forStartOfGlyphRange:coalesceRuns:]
  -[NSLayoutManager setLocations:startingGlyphIndexes:count:forGlyphRange:]
  -[NSLayoutManager setDrawsOutsideLineFragment:forGlyphAtIndex:]
  -[NSLayoutManager textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:]
  -[NSLayoutManager usedRectForTextContainer:]
  -[NSLayoutManager lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:]
  -[NSLayoutManager lineFragmentUsedRectForGlyphAtIndex:effectiveRange:allowLayout:]
  -[NSLayoutManager extraLineFragmentRect]
  -[NSLayoutManager extraLineFragmentUsedRect]
  -[NSLayoutManager extraLineFragmentTextContainer]
  -[NSLayoutManager drawsOutsideLineFragmentForGlyphAtIndex:]
  -[NSLayoutManager truncatedGlyphRangeInLineFragmentForGlyphAtIndex:]
  -[NSLayoutManager setLayoutRect:forTextBlock:glyphRange:]
  -[NSLayoutManager setBoundsRect:forTextBlock:glyphRange:]
  -[NSLayoutManager layoutRectForTextBlock:glyphRange:]
  -[NSLayoutManager boundsRectForTextBlock:glyphRange:]
  -[NSLayoutManager glyphRangeForTextContainer:]
  -[NSLayoutManager rangeOfNominallySpacedGlyphsContainingIndex:]
  -[NSLayoutManager boundingRectForGlyphRange:inTextContainer:]
  -[NSLayoutManager characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:]
  -[NSLayoutManager getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:]
  -[NSLayoutManager setTemporaryAttributes:forCharacterRange:]
  -[NSLayoutManager addTemporaryAttributes:forCharacterRange:]
  -[NSLayoutManager removeTemporaryAttribute:forCharacterRange:]
  -[NSLayoutManager _temporaryAttribute:atCharacterIndex:effectiveRange:]
  -[NSLayoutManager _temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:]
  -[NSLayoutManager _temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:]
  -[NSLayoutManager setSynchronizesAlignmentToDirection:]
  -[NSLayoutManager enumerateLineFragmentsForGlyphRange:usingBlock:]
  -[NSLayoutManager enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:]
  -[NSLayoutManager enumerateEnclosingRectsForCharacterRange:withinSelectedCharacterRange:inTextContainer:usingBlock:]
  -[NSLayoutManager drawBackgroundForGlyphRange:atPoint:]
  -[NSLayoutManager coordinateAccess:]
  -[NSLayoutManager destinationTextContainerForRange:inTextContainer:]
  -[NSLayoutManager layoutFragmentsForReplacingCharactersInRange:withAttributedString:rect:textContainer:]


NSTextRange : NSObject
 @property  BOOL empty
 @property  <NSTextLocation> *location
 @property  <NSTextLocation> *terminator

  // instance methods
  -[NSTextRange dealloc]
  -[NSTextRange isEmpty]
  -[NSTextRange location]
  -[NSTextRange terminator]
  -[NSTextRange textRangeByFormingUnionWithTextRange:]
  -[NSTextRange intersectsWithTextRange:]
  -[NSTextRange containsLocation:]
  -[NSTextRange initWithLocation:terminator:]
  -[NSTextRange initWithLocation:]
  -[NSTextRange isEqualToTextRange:]
  -[NSTextRange textRangeByIntersectingWithTextRange:]
  -[NSTextRange initWithStartLocation:endLocation:]
  -[NSTextRange startLocation]
  -[NSTextRange endLocation]


NSCountableTextLocation : NSObject <NSTextLocationPrivate>
 @property  unsigned long characterIndex
 @property  BOOL endOfDocument
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSString *type

  // class methods
  +[NSCountableTextLocation endOfDocumentLocation]

  // instance methods
  -[NSCountableTextLocation type]
  -[NSCountableTextLocation compare:]
  -[NSCountableTextLocation initWithIndex:]
  -[NSCountableTextLocation isEndOfDocument]
  -[NSCountableTextLocation characterIndex]


NSCountableTextRange : NSTextRange
 @property  {_NSRange=QQ} range
 @property  NSCountableTextLocation *location
 @property  NSCountableTextLocation *terminator
 @property  NSString *type

  // class methods
  +[NSCountableTextRange documentRange]
  +[NSCountableTextRange isBaseClassTestingMode]
  +[NSCountableTextRange setBaseClassTestingMode:]

  // instance methods
  -[NSCountableTextRange isEmpty]
  -[NSCountableTextRange type]
  -[NSCountableTextRange range]
  -[NSCountableTextRange initWithRange:]
  -[NSCountableTextRange textRangeByFormingUnionWithTextRange:]
  -[NSCountableTextRange intersectsWithTextRange:]
  -[NSCountableTextRange containsLocation:]
  -[NSCountableTextRange initWithLocation:terminator:]
  -[NSCountableTextRange isEqualToTextRange:]
  -[NSCountableTextRange textRangeByIntersectingWithTextRange:]


NSTextTab : NSObject <NSCopying, NSCoding, NSSecureCoding>
 @property  long long alignment
 @property  double location
 @property  NSDictionary *options

  // class methods
  +[NSTextTab allocWithZone:]
  +[NSTextTab initialize]
  +[NSTextTab supportsSecureCoding]
  +[NSTextTab columnTerminatorsForLocale:]

  // instance methods
  -[NSTextTab init]
  -[NSTextTab dealloc]
  -[NSTextTab isEqual:]
  -[NSTextTab release]
  -[NSTextTab copyWithZone:]
  -[NSTextTab options]
  -[NSTextTab encodeWithCoder:]
  -[NSTextTab initWithCoder:]
  -[NSTextTab alignment]
  -[NSTextTab location]
  -[NSTextTab initWithTextAlignment:location:options:]
  -[NSTextTab initWithType:location:]
  -[NSTextTab tabStopType]


NSParagraphStyleExtraData : NSObject

NSParagraphStyle : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  double lineSpacing
 @property  double paragraphSpacing
 @property  long long alignment
 @property  double headIndent
 @property  double tailIndent
 @property  double firstLineHeadIndent
 @property  double minimumLineHeight
 @property  double maximumLineHeight
 @property  long long lineBreakMode
 @property  long long baseWritingDirection
 @property  double lineHeightMultiple
 @property  double paragraphSpacingBefore
 @property  float hyphenationFactor
 @property  NSArray *tabStops
 @property  double defaultTabInterval
 @property  BOOL allowsDefaultTighteningForTruncation

  // class methods
  +[NSParagraphStyle initialize]
  +[NSParagraphStyle supportsSecureCoding]
  +[NSParagraphStyle defaultWritingDirectionForLanguage:]
  +[NSParagraphStyle defaultParagraphStyle]
  +[NSParagraphStyle _defaultWritingDirection]
  +[NSParagraphStyle _defaultHyphenationFactor]

  // instance methods
  -[NSParagraphStyle init]
  -[NSParagraphStyle dealloc]
  -[NSParagraphStyle isEqual:]
  -[NSParagraphStyle copyWithZone:]
  -[NSParagraphStyle mutableCopyWithZone:]
  -[NSParagraphStyle encodeWithCoder:]
  -[NSParagraphStyle initWithCoder:]
  -[NSParagraphStyle alignment]
  -[NSParagraphStyle firstLineHeadIndent]
  -[NSParagraphStyle headIndent]
  -[NSParagraphStyle tailIndent]
  -[NSParagraphStyle tabStops]
  -[NSParagraphStyle defaultTabInterval]
  -[NSParagraphStyle lineBreakMode]
  -[NSParagraphStyle lineHeightMultiple]
  -[NSParagraphStyle maximumLineHeight]
  -[NSParagraphStyle minimumLineHeight]
  -[NSParagraphStyle lineSpacing]
  -[NSParagraphStyle paragraphSpacing]
  -[NSParagraphStyle paragraphSpacingBefore]
  -[NSParagraphStyle baseWritingDirection]
  -[NSParagraphStyle _lineBoundsOptions]
  -[NSParagraphStyle compositionLanguage]
  -[NSParagraphStyle textBlocks]
  -[NSParagraphStyle lineBreakStrategy]
  -[NSParagraphStyle hyphenationFactor]
  -[NSParagraphStyle allowsDefaultTighteningForTruncation]
  -[NSParagraphStyle tighteningFactorForTruncation]
  -[NSParagraphStyle textLists]
  -[NSParagraphStyle usesDefaultHyphenation]
  -[NSParagraphStyle _allocExtraData]
  -[NSParagraphStyle headerLevel]
  -[NSParagraphStyle _initWithParagraphStyle:]
  -[NSParagraphStyle _deallocExtraData]
  -[NSParagraphStyle allowsHangingPunctuation]
  -[NSParagraphStyle usesOpticalAlignment]
  -[NSParagraphStyle _isSuitableForFastStringDrawingWithAlignment:mirrorsTextAlignment:lineBreakMode:tighteningFactorForTruncation:]


NSMutableParagraphStyle : NSParagraphStyle
 @property  double lineSpacing
 @property  double paragraphSpacing
 @property  long long alignment
 @property  double firstLineHeadIndent
 @property  double headIndent
 @property  double tailIndent
 @property  long long lineBreakMode
 @property  double minimumLineHeight
 @property  double maximumLineHeight
 @property  long long baseWritingDirection
 @property  double lineHeightMultiple
 @property  double paragraphSpacingBefore
 @property  float hyphenationFactor
 @property  NSArray *tabStops
 @property  double defaultTabInterval
 @property  BOOL allowsDefaultTighteningForTruncation

  // instance methods
  -[NSMutableParagraphStyle copyWithZone:]
  -[NSMutableParagraphStyle setAlignment:]
  -[NSMutableParagraphStyle setFirstLineHeadIndent:]
  -[NSMutableParagraphStyle setHeadIndent:]
  -[NSMutableParagraphStyle setTailIndent:]
  -[NSMutableParagraphStyle setTabStops:]
  -[NSMutableParagraphStyle setDefaultTabInterval:]
  -[NSMutableParagraphStyle setLineBreakMode:]
  -[NSMutableParagraphStyle setLineHeightMultiple:]
  -[NSMutableParagraphStyle setMaximumLineHeight:]
  -[NSMutableParagraphStyle setMinimumLineHeight:]
  -[NSMutableParagraphStyle setLineSpacing:]
  -[NSMutableParagraphStyle setParagraphSpacing:]
  -[NSMutableParagraphStyle setParagraphSpacingBefore:]
  -[NSMutableParagraphStyle setBaseWritingDirection:]
  -[NSMutableParagraphStyle _setLineBoundsOptions:]
  -[NSMutableParagraphStyle setCompositionLanguage:]
  -[NSMutableParagraphStyle setLineBreakStrategy:]
  -[NSMutableParagraphStyle setHyphenationFactor:]
  -[NSMutableParagraphStyle setUsesDefaultHyphenation:]
  -[NSMutableParagraphStyle setTighteningFactorForTruncation:]
  -[NSMutableParagraphStyle setHeaderLevel:]
  -[NSMutableParagraphStyle setTextBlocks:]
  -[NSMutableParagraphStyle setTextLists:]
  -[NSMutableParagraphStyle setAllowsDefaultTighteningForTruncation:]
  -[NSMutableParagraphStyle _mutateTabStops]
  -[NSMutableParagraphStyle setAllowsHangingPunctuation:]
  -[NSMutableParagraphStyle setUsesOpticalAlignment:]
  -[NSMutableParagraphStyle setParagraphStyle:]
  -[NSMutableParagraphStyle addTabStop:]
  -[NSMutableParagraphStyle removeTabStop:]


UIFontDescriptor : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *postscriptName
 @property  double pointSize
 @property  {CGAffineTransform=dddddd} matrix
 @property  unsigned int symbolicTraits
 @property  NSDictionary *fontAttributes

  // class methods
  +[UIFontDescriptor supportsSecureCoding]
  +[UIFontDescriptor _createMungledDictionary:]
  +[UIFontDescriptor fontDescriptorWithFontAttributes:]
  +[UIFontDescriptor preferredFontDescriptorWithTextStyle:]
  +[UIFontDescriptor preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:]
  +[UIFontDescriptor preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:]
  +[UIFontDescriptor defaultFontDescriptorWithTextStyle:]
  +[UIFontDescriptor defaultFontDescriptorWithTextStyle:addingSymbolicTraits:options:]
  +[UIFontDescriptor fontDescriptorWithName:size:]
  +[UIFontDescriptor fontDescriptorWithName:matrix:]

  // instance methods
  -[UIFontDescriptor init]
  -[UIFontDescriptor dealloc]
  -[UIFontDescriptor copyWithZone:]
  -[UIFontDescriptor objectForKey:]
  -[UIFontDescriptor encodeWithCoder:]
  -[UIFontDescriptor initWithCoder:]
  -[UIFontDescriptor classForCoder]
  -[UIFontDescriptor _attributes]
  -[UIFontDescriptor fontDescriptorByAddingAttributes:]
  -[UIFontDescriptor fontAttributes]
  -[UIFontDescriptor matchingFontDescriptorsWithMandatoryKeys:]
  -[UIFontDescriptor matchingFontDescriptorWithMandatoryKeys:]
  -[UIFontDescriptor symbolicTraits]
  -[UIFontDescriptor fontDescriptorWithSymbolicTraits:]
  -[UIFontDescriptor fontDescriptorWithFamily:]
  -[UIFontDescriptor matrix]
  -[UIFontDescriptor pointSize]
  -[UIFontDescriptor _swapWithFontAttributes:options:]
  -[UIFontDescriptor initWithFontAttributes:]
  -[UIFontDescriptor fontDescriptorWithSymbolicTraits:mask:]
  -[UIFontDescriptor postscriptName]
  -[UIFontDescriptor fontDescriptorWithSize:]
  -[UIFontDescriptor fontDescriptorWithMatrix:]
  -[UIFontDescriptor fontDescriptorWithFace:]
  -[UIFontDescriptor fontDescriptorWithDesign:]
  -[UIFontDescriptor _visibleName]


UICTFontDescriptor : UIFontDescriptor
  // class methods
  +[UICTFontDescriptor fontDescriptorWithFontAttributes:]
  +[UICTFontDescriptor fontDescriptorWithName:size:]
  +[UICTFontDescriptor fontDescriptorWithName:matrix:]

  // instance methods
  -[UICTFontDescriptor retainCount]
  -[UICTFontDescriptor isEqual:]
  -[UICTFontDescriptor retain]
  -[UICTFontDescriptor release]
  -[UICTFontDescriptor retainWeakReference]
  -[UICTFontDescriptor allowsWeakReference]
  -[UICTFontDescriptor copyWithZone:]
  -[UICTFontDescriptor objectForKey:]
  -[UICTFontDescriptor _cfTypeID]
  -[UICTFontDescriptor fontDescriptorByAddingAttributes:]
  -[UICTFontDescriptor fontAttributes]
  -[UICTFontDescriptor matchingFontDescriptorsWithMandatoryKeys:]
  -[UICTFontDescriptor matchingFontDescriptorWithMandatoryKeys:]


NSTextLineFragment : NSObject <NSSecureCoding>
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} typographicBounds
 @property  {CGPoint=dd} glyphOrigin
 @property  NSAttributedString *attributedString
 @property  {_NSRange=QQ} characterRange

  // class methods
  +[NSTextLineFragment supportsSecureCoding]

  // instance methods
  -[NSTextLineFragment dealloc]
  -[NSTextLineFragment encodeWithCoder:]
  -[NSTextLineFragment initWithCoder:]
  -[NSTextLineFragment typographicBounds]
  -[NSTextLineFragment drawAtPoint:context:]
  -[NSTextLineFragment attributedString]
  -[NSTextLineFragment boundsWithType:options:]
  -[NSTextLineFragment characterRange]
  -[NSTextLineFragment initWithAttributedString:range:]
  -[NSTextLineFragment numberOfGlyphs]
  -[NSTextLineFragment glyphOrigin]
  -[NSTextLineFragment drawAtPoint:graphicsContext:]
  -[NSTextLineFragment initWithString:attributes:range:]
  -[NSTextLineFragment setLineRef:]
  -[NSTextLineFragment setGlyphs:advances:count:font:]
  -[NSTextLineFragment typographicUsedBounds]
  -[NSTextLineFragment locationForCharacterAtIndex:]
  -[NSTextLineFragment characterIndexForPoint:fractionOfDistanceThroughGlyph:]
  -[NSTextLineFragment setTypographicBounds:]
  -[NSTextLineFragment setGlyphOrigin:]


NSRunStorage : NSObject <NSCopying>
  // class methods
  +[NSRunStorage initialize]
  +[NSRunStorage _setConsistencyCheckingEnabled:superCheckEnabled:]

  // instance methods
  -[NSRunStorage init]
  -[NSRunStorage dealloc]
  -[NSRunStorage copyWithZone:]
  -[NSRunStorage count]
  -[NSRunStorage insertElement:range:coalesceRuns:]
  -[NSRunStorage replaceElementsInRange:withElement:coalesceRuns:]
  -[NSRunStorage removeElementsInRange:coalesceRuns:]
  -[NSRunStorage initWithElementSize:capacity:]
  -[NSRunStorage _allocData:]
  -[NSRunStorage _deallocData]
  -[NSRunStorage initWithRunStorage:]
  -[NSRunStorage _reallocData:]
  -[NSRunStorage elementSize]
  -[NSRunStorage elementAtIndex:effectiveRange:]
  -[NSRunStorage _moveGapToBlockIndex:]
  -[NSRunStorage _consistencyError:startAtZeroError:cacheError:inconsistentBlockError:]
  -[NSRunStorage _ensureCapacity:]
  -[NSRunStorage _moveGapAndMergeWithBlockRange:]
  -[NSRunStorage _consistencyCheck:]


NSIdRunStorage : NSRunStorage
  // class methods
  +[NSIdRunStorage initialize]

  // instance methods
  -[NSIdRunStorage dealloc]
  -[NSIdRunStorage _allocData:]
  -[NSIdRunStorage _reallocData:]


NSStorage : NSObject
  // class methods
  +[NSStorage initialize]

  // instance methods
  -[NSStorage init]
  -[NSStorage dealloc]
  -[NSStorage count]
  -[NSStorage capacity]
  -[NSStorage elementAtIndex:]
  -[NSStorage initWithElementSize:capacity:]
  -[NSStorage insertElements:count:atIndex:]
  -[NSStorage removeElementAtIndex:]
  -[NSStorage elementSize]
  -[NSStorage setHintCapacity:]
  -[NSStorage hintCapacity]
  -[NSStorage replaceElementAtIndex:withElement:]
  -[NSStorage removeElementsInRange:]
  -[NSStorage pointerToElement:directlyAccessibleElements:]
  -[NSStorage insertElement:atIndex:]
  -[NSStorage addElement:]
  -[NSStorage enumerateElementsUsingBlock:]


NSStringDrawingContext : NSObject
 @property  double minimumTrackingAdjustment
 @property  double actualTrackingAdjustment
 @property  double actualScaleFactor
 @property  double actualTrackingAdjustment
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} totalBounds
 @property  BOOL wantsNumberOfLineFragments
 @property  unsigned long numberOfLineFragments
 @property  BOOL wrapsForTruncationMode
 @property  unsigned long maximumNumberOfLines
 @property  BOOL wantsBaselineOffset
 @property  double baselineOffset
 @property  BOOL wantsScaledBaselineOffset
 @property  double scaledBaselineOffset
 @property  BOOL wantsScaledLineHeight
 @property  double scaledLineHeight
 @property  double firstBaselineOffset
 @property  CUICatalog *cuiCatalog
 @property  CUIStyleEffectConfiguration *cuiStyleEffects
 @property  BOOL drawsDebugBaselines
 @property  BOOL cachesLayout
 @property  id layout
 @property  BOOL usesSimpleTextEffects
 @property  unsigned long activeRenderers
 @property  double minimumScaleFactor

  // instance methods
  -[NSStringDrawingContext init]
  -[NSStringDrawingContext dealloc]
  -[NSStringDrawingContext copyWithZone:]
  -[NSStringDrawingContext layout]
  -[NSStringDrawingContext setLayout:]
  -[NSStringDrawingContext applicationFrameworkContext]
  -[NSStringDrawingContext cuiCatalog]
  -[NSStringDrawingContext setApplicationFrameworkContext:]
  -[NSStringDrawingContext setCuiCatalog:]
  -[NSStringDrawingContext cuiStyleEffects]
  -[NSStringDrawingContext setCuiStyleEffects:]
  -[NSStringDrawingContext minimumScaleFactor]
  -[NSStringDrawingContext setMinimumScaleFactor:]
  -[NSStringDrawingContext minimumTrackingAdjustment]
  -[NSStringDrawingContext setMinimumTrackingAdjustment:]
  -[NSStringDrawingContext wantsNumberOfLineFragments]
  -[NSStringDrawingContext setWantsNumberOfLineFragments:]
  -[NSStringDrawingContext wrapsForTruncationMode]
  -[NSStringDrawingContext setWrapsForTruncationMode:]
  -[NSStringDrawingContext maximumNumberOfLines]
  -[NSStringDrawingContext setMaximumNumberOfLines:]
  -[NSStringDrawingContext wantsBaselineOffset]
  -[NSStringDrawingContext setWantsBaselineOffset:]
  -[NSStringDrawingContext wantsScaledBaselineOffset]
  -[NSStringDrawingContext setWantsScaledBaselineOffset:]
  -[NSStringDrawingContext wantsScaledLineHeight]
  -[NSStringDrawingContext setWantsScaledLineHeight:]
  -[NSStringDrawingContext drawsDebugBaselines]
  -[NSStringDrawingContext setDrawsDebugBaselines:]
  -[NSStringDrawingContext cachesLayout]
  -[NSStringDrawingContext setCachesLayout:]
  -[NSStringDrawingContext usesSimpleTextEffects]
  -[NSStringDrawingContext setUsesSimpleTextEffects:]
  -[NSStringDrawingContext activeRenderers]
  -[NSStringDrawingContext setActiveRenderers:]
  -[NSStringDrawingContext actualScaleFactor]
  -[NSStringDrawingContext setActualScaleFactor:]
  -[NSStringDrawingContext totalBounds]
  -[NSStringDrawingContext setTotalBounds:]
  -[NSStringDrawingContext numberOfLineFragments]
  -[NSStringDrawingContext setNumberOfLineFragments:]
  -[NSStringDrawingContext baselineOffset]
  -[NSStringDrawingContext setBaselineOffset:]
  -[NSStringDrawingContext scaledBaselineOffset]
  -[NSStringDrawingContext setScaledBaselineOffset:]
  -[NSStringDrawingContext scaledLineHeight]
  -[NSStringDrawingContext setScaledLineHeight:]
  -[NSStringDrawingContext firstBaselineOffset]
  -[NSStringDrawingContext setFirstBaselineOffset:]
  -[NSStringDrawingContext actualTrackingAdjustment]
  -[NSStringDrawingContext setActualTrackingAdjustment:]


_NSCachedAttributedString : NSMutableAttributedString /usr/lib/libSystem.B.dylib
  // class methods
  +[_NSCachedAttributedString allocWithZone:]
  +[_NSCachedAttributedString initialize]

  // instance methods
  -[_NSCachedAttributedString init]
  -[_NSCachedAttributedString string]
  -[_NSCachedAttributedString dealloc]
  -[_NSCachedAttributedString length]
  -[_NSCachedAttributedString isEqual:]
  -[_NSCachedAttributedString release]
  -[_NSCachedAttributedString _tryRetain]
  -[_NSCachedAttributedString _isDeallocating]
  -[_NSCachedAttributedString finalize]
  -[_NSCachedAttributedString attributesAtIndex:effectiveRange:]
  -[_NSCachedAttributedString attributesAtIndex:longestEffectiveRange:inRange:]
  -[_NSCachedAttributedString setAttributes:range:]
  -[_NSCachedAttributedString initWithString:]
  -[_NSCachedAttributedString initWithString:attributes:]
  -[_NSCachedAttributedString initWithAttributedString:]
  -[_NSCachedAttributedString cache]
  -[_NSCachedAttributedString _isStringDrawingTextStorage]
  -[_NSCachedAttributedString _baselineMode]
  -[_NSCachedAttributedString hasColorGlyphsInRange:]
  -[_NSCachedAttributedString copyCachedInstance]


_NSCoreTypesetterLayoutCache : NSObject
 @property  ^{__CTLine=} CTLine

  // instance methods
  -[_NSCoreTypesetterLayoutCache dealloc]
  -[_NSCoreTypesetterLayoutCache CTLine]
  -[_NSCoreTypesetterLayoutCache setCount:glyphs:advances:elasticAdvances:resolvedFont:textAlignment:]
  -[_NSCoreTypesetterLayoutCache getCount:glyphs:advances:elasticAdvances:resolvedFont:textAlignment:]
  -[_NSCoreTypesetterLayoutCache setCTLine:]


NSCoreTypesetter : NSTypesetter
 @property  {_NSRange=QQ} characterRange
 @property  {CGSize=dd} textContainerSize
 @property  BOOL wantsExtraLineFragment
 @property  @? laidOutLineFragment
 @property  <NSCoreTypesetterDelegate> *delegate

  // class methods
  +[NSCoreTypesetter _lineMetricsForAttributes:typesetterBehavior:usesFontLeading:applySpacings:usesSystemFontLeading:usesNegativeFontLeading:lineHeight:baselineOffset:spacing:applicationFrameworkContext:wantsTextLineFragments:]
  +[NSCoreTypesetter _supportsStringDrawingPath:]
  +[NSCoreTypesetter _lineMetricsFromAttributedString:range:typesetterBehavior:usesFontLeading:applySpacings:usesSystemFontLeading:usesNegativeFontLeading:lineHeight:baselineOffset:spacing:applicationFrameworkContext:wantsTextLineFragments:]
  +[NSCoreTypesetter _maximumAscentAndDescentForRuns:ascender:descender:]

  // instance methods
  -[NSCoreTypesetter init]
  -[NSCoreTypesetter dealloc]
  -[NSCoreTypesetter delegate]
  -[NSCoreTypesetter setDelegate:]
  -[NSCoreTypesetter .cxx_destruct]
  -[NSCoreTypesetter layout]
  -[NSCoreTypesetter setCharacterRange:]
  -[NSCoreTypesetter setTextContainerSize:]
  -[NSCoreTypesetter setLaidOutLineFragment:]
  -[NSCoreTypesetter setWantsExtraLineFragment:]
  -[NSCoreTypesetter textContainerSize]
  -[NSCoreTypesetter characterRange]
  -[NSCoreTypesetter _stringDrawingCoreTextEngineWithOriginalString:rect:padding:graphicsContext:forceClipping:attributes:stringDrawingOptions:drawingContext:wantsTextLineFragments:validatedAttributedString:firstNonRenderedCharacterIndex:foundSoftHyphenAtEOL:enginePathUsed:]
  -[NSCoreTypesetter laidOutLineFragment]
  -[NSCoreTypesetter _NSFastDrawString:length:attributes:paragraphStyle:typesetterBehavior:lineBreakMode:rect:padding:graphicsContext:baselineRendering:usesFontLeading:usesScreenFont:scrollable:syncAlignment:mirrored:boundingRectPointer:baselineOffsetPointer:wantsTextLineFragments:drawingContext:]
  -[NSCoreTypesetter wantsExtraLineFragment]


NSTextContentManager : NSObject <NSTextElementProvider, NSSecureCoding>
 @property  <NSTextContentManagerDelegate> *delegate
 @property  NSArray *textLayoutManagers
 @property  NSTextLayoutManager *primaryTextLayoutManager
 @property  unsigned long maximumNumberOfUncachedElements
 @property  BOOL hasEditingTransaction
 @property  BOOL synchronizesTextLayoutManagersAutomatically
 @property  BOOL synchronizesToBackingStoreAutomatically
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSTextRange *documentRange

  // class methods
  +[NSTextContentManager supportsSecureCoding]

  // instance methods
  -[NSTextContentManager init]
  -[NSTextContentManager dealloc]
  -[NSTextContentManager encodeWithCoder:]
  -[NSTextContentManager initWithCoder:]
  -[NSTextContentManager delegate]
  -[NSTextContentManager setDelegate:]
  -[NSTextContentManager .cxx_destruct]
  -[NSTextContentManager documentRange]
  -[NSTextContentManager removeTextLayoutManager:]
  -[NSTextContentManager addTextLayoutManager:]
  -[NSTextContentManager enumerateTextElementsFromLocation:options:usingBlock:]
  -[NSTextContentManager synchronizeTextLayoutManagers:]
  -[NSTextContentManager replaceCharactersInRange:withTextElements:]
  -[NSTextContentManager setPrimaryTextLayoutManager:]
  -[NSTextContentManager textLayoutManagers]
  -[NSTextContentManager primaryTextLayoutManager]
  -[NSTextContentManager _incrementTransactionStack]
  -[NSTextContentManager _decrementTransactionStack]
  -[NSTextContentManager hasEditingTransaction]
  -[NSTextContentManager synchronizesTextLayoutManagersAutomatically]
  -[NSTextContentManager synchronizesToBackingStoreAutomatically]
  -[NSTextContentManager synchronizeToBackingStore:]
  -[NSTextContentManager textElementsForRange:]
  -[NSTextContentManager performEditingTransactionWithBlock:]
  -[NSTextContentManager addEditActionInRange:newTextRange:]
  -[NSTextContentManager maximumNumberOfUncachedElements]
  -[NSTextContentManager setMaximumNumberOfUncachedElements:]
  -[NSTextContentManager setSynchronizesTextLayoutManagersAutomatically:]
  -[NSTextContentManager setSynchronizesToBackingStoreAutomatically:]


NSTextContentStorage : NSTextContentManager <NSTextStorageController>
 @property  NSCountableTextRange *documentRange
 @property  NSAttributedString *attributedString
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSTextStorage *textStorage

  // class methods
  +[NSTextContentStorage supportsSecureCoding]

  // instance methods
  -[NSTextContentStorage init]
  -[NSTextContentStorage dealloc]
  -[NSTextContentStorage encodeWithCoder:]
  -[NSTextContentStorage initWithCoder:]
  -[NSTextContentStorage setAttributedString:]
  -[NSTextContentStorage documentRange]
  -[NSTextContentStorage attributedString]
  -[NSTextContentStorage textStorage]
  -[NSTextContentStorage enumerateTextElementsFromLocation:options:usingBlock:]
  -[NSTextContentStorage replaceCharactersInRange:withTextElements:]
  -[NSTextContentStorage setTextStorage:]
  -[NSTextContentStorage processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:]
  -[NSTextContentStorage synchronizeToBackingStore:]
  -[NSTextContentStorage _commonInitialization]
  -[NSTextContentStorage updateRangesForTextElement:locationDelta:]
  -[NSTextContentStorage beginEditingTransaction]
  -[NSTextContentStorage endEditingTransaction]
  -[NSTextContentStorage attributedStringForTextElement:]
  -[NSTextContentStorage textElementForAttributedString:]
  -[NSTextContentStorage attributedStringForTextElements:]
  -[NSTextContentStorage textElementsForAttributedString:]


NSStringDrawingTextStorage : NSTextStorage <NSLayoutManagerDelegate>
 @property  CUICatalog *cuiCatalog
 @property  CUIStyleEffectConfiguration *cuiStyleEffects
 @property  BOOL usesSimpleTextEffects
 @property  double defaultTighteningFactor
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSStringDrawingTextStorage allocWithZone:]
  +[NSStringDrawingTextStorage initialize]
  +[NSStringDrawingTextStorage _setHasCustomSettings:]
  +[NSStringDrawingTextStorage _hasCustomSettings]
  +[NSStringDrawingTextStorage stringDrawingTextStorage]

  // instance methods
  -[NSStringDrawingTextStorage init]
  -[NSStringDrawingTextStorage string]
  -[NSStringDrawingTextStorage dealloc]
  -[NSStringDrawingTextStorage length]
  -[NSStringDrawingTextStorage release]
  -[NSStringDrawingTextStorage _tryRetain]
  -[NSStringDrawingTextStorage _isDeallocating]
  -[NSStringDrawingTextStorage attributesAtIndex:effectiveRange:]
  -[NSStringDrawingTextStorage attribute:atIndex:effectiveRange:]
  -[NSStringDrawingTextStorage attribute:atIndex:longestEffectiveRange:inRange:]
  -[NSStringDrawingTextStorage replaceCharactersInRange:withString:]
  -[NSStringDrawingTextStorage setAttributes:range:]
  -[NSStringDrawingTextStorage addAttribute:value:range:]
  -[NSStringDrawingTextStorage replaceCharactersInRange:withAttributedString:]
  -[NSStringDrawingTextStorage layoutManager]
  -[NSStringDrawingTextStorage cuiCatalog]
  -[NSStringDrawingTextStorage _usesSimpleTextEffects]
  -[NSStringDrawingTextStorage textContainer]
  -[NSStringDrawingTextStorage _isStringDrawingTextStorage]
  -[NSStringDrawingTextStorage typesetterBehavior]
  -[NSStringDrawingTextStorage _setBaselineDelta:]
  -[NSStringDrawingTextStorage _baselineMode]
  -[NSStringDrawingTextStorage _forceWordWrapping]
  -[NSStringDrawingTextStorage _setForceWordWrapping:]
  -[NSStringDrawingTextStorage defaultTighteningFactor]
  -[NSStringDrawingTextStorage setDefaultTighteningFactor:]
  -[NSStringDrawingTextStorage _setUsesSimpleTextEffects:]
  -[NSStringDrawingTextStorage setCuiCatalog:]
  -[NSStringDrawingTextStorage cuiStyleEffects]
  -[NSStringDrawingTextStorage setCuiStyleEffects:]
  -[NSStringDrawingTextStorage processEditing]
  -[NSStringDrawingTextStorage _applicationFrameworkContext]
  -[NSStringDrawingTextStorage usedRectForTextContainer:]
  -[NSStringDrawingTextStorage _shouldSetOriginalFontAttribute]
  -[NSStringDrawingTextStorage textContainerForAttributedString:containerSize:lineFragmentPadding:]
  -[NSStringDrawingTextStorage _setBaselineMode:]
  -[NSStringDrawingTextStorage _setApplicationFrameworkContext:]
  -[NSStringDrawingTextStorage drawTextContainer:range:withRect:graphicsContext:baselineMode:scrollable:padding:]
  -[NSStringDrawingTextStorage _baselineDelta]
  -[NSStringDrawingTextStorage defaultTextContainerOriginForRect:]
  -[NSStringDrawingTextStorage setGraphicsContext:]
  -[NSStringDrawingTextStorage drawTextContainer:withRect:graphicsContext:baselineMode:scrollable:padding:]
  -[NSStringDrawingTextStorage textContainerForAttributedString:]
  -[NSStringDrawingTextStorage fontSetChanged]


NSStringDrawingTextStorageSettings : NSObject
  // class methods
  +[NSStringDrawingTextStorageSettings threadSpecificStringDrawingTextStorageSettings:]

  // instance methods
  -[NSStringDrawingTextStorageSettings init]


NSTextContainer : NSObject <NSSecureCoding, NSTextLayoutOrientationProvider>
 @property  NSLayoutManager *layoutManager
 @property  {CGSize=dd} size
 @property  NSArray *exclusionPaths
 @property  long long lineBreakMode
 @property  double lineFragmentPadding
 @property  unsigned long maximumNumberOfLines
 @property  BOOL simpleRectangularTextContainer
 @property  BOOL widthTracksTextView
 @property  BOOL heightTracksTextView
 @property  long long layoutOrientation

  // class methods
  +[NSTextContainer initialize]
  +[NSTextContainer supportsSecureCoding]

  // instance methods
  -[NSTextContainer init]
  -[NSTextContainer dealloc]
  -[NSTextContainer copyWithZone:]
  -[NSTextContainer encodeWithCoder:]
  -[NSTextContainer initWithCoder:]
  -[NSTextContainer size]
  -[NSTextContainer lineBreakMode]
  -[NSTextContainer setLineBreakMode:]
  -[NSTextContainer setSize:]
  -[NSTextContainer setTextLayoutManager:]
  -[NSTextContainer textLayoutManager]
  -[NSTextContainer lineFragmentPadding]
  -[NSTextContainer setLineFragmentPadding:]
  -[NSTextContainer layoutManager]
  -[NSTextContainer textView]
  -[NSTextContainer layoutOrientation]
  -[NSTextContainer textContainerOrigin]
  -[NSTextContainer textContainerInsetsForView:]
  -[NSTextContainer lineFragmentRectForProposedRect:remainingRect:]
  -[NSTextContainer initWithSize:]
  -[NSTextContainer _commonInit]
  -[NSTextContainer isSimpleRectangularTextContainer]
  -[NSTextContainer setLayoutManager:]
  -[NSTextContainer coordinateAccess:]
  -[NSTextContainer textContainerInsetsForView_iOS:]
  -[NSTextContainer maximumNumberOfLines]
  -[NSTextContainer setMaximumNumberOfLines:]
  -[NSTextContainer exclusionPaths]
  -[NSTextContainer setExclusionPaths:]
  -[NSTextContainer lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:]
  -[NSTextContainer setWidthTracksTextView:]
  -[NSTextContainer setHeightTracksTextView:]
  -[NSTextContainer _resizeAccordingToTextView:]
  -[NSTextContainer minimumLineFragmentWidth]
  -[NSTextContainer widthTracksTextView]
  -[NSTextContainer heightTracksTextView]
  -[NSTextContainer setLayoutOrientation:]
  -[NSTextContainer initWithContainerSize:]
  -[NSTextContainer replaceLayoutManager:]
  -[NSTextContainer setTextView:]
  -[NSTextContainer setContainerSize:]
  -[NSTextContainer containerSize]
  -[NSTextContainer attributesForExtraLineFragment]
  -[NSTextContainer setAttributesForExtraLineFragment:]
  -[NSTextContainer containsPoint:]
  -[NSTextContainer setMinimumLineFragmentWidth:]
  -[NSTextContainer _containerObservesTextViewFrameChanges]
  -[NSTextContainer _containerTextViewFrameChanged:]


NSFont : UIFont <NSSecureCoding, NSCopying>
  // class methods
  +[NSFont supportsSecureCoding]
  +[NSFont fontWithName:size:]

  // instance methods
  -[NSFont copyWithZone:]
  -[NSFont encodeWithCoder:]
  -[NSFont initWithCoder:]
  -[NSFont classForCoder]


NSTextList : NSObject <NSSecureCoding, NSCoding, NSCopying>
 @property  NSString *markerFormat
 @property  unsigned long listOptions
 @property  long long startingItemNumber

  // class methods
  +[NSTextList initialize]
  +[NSTextList supportsSecureCoding]
  +[NSTextList _standardMarkerAttributesForAttributes:]

  // instance methods
  -[NSTextList dealloc]
  -[NSTextList copyWithZone:]
  -[NSTextList options]
  -[NSTextList encodeWithCoder:]
  -[NSTextList initWithCoder:]
  -[NSTextList listOptions]
  -[NSTextList initWithMarkerFormat:options:]
  -[NSTextList setStartingItemNumber:]
  -[NSTextList markerFormat]
  -[NSTextList startingItemNumber]
  -[NSTextList _markerForMarkerFormat:itemNumber:isNumbered:substitutionStart:end:specifierStart:end:]
  -[NSTextList markerForItemNumber:]
  -[NSTextList _unaffixedMarkerForItemNumber:]
  -[NSTextList _markerAtIndex:inText:]
  -[NSTextList _isOrdered]
  -[NSTextList _markerTitle]
  -[NSTextList _markerPrefix]
  -[NSTextList _markerSpecifier]
  -[NSTextList _unaffixedMarkerFormat]
  -[NSTextList _unaffixedMarkerTitle]
  -[NSTextList _markerSuffix]


NSConcreteNotifyingMutableAttributedString : NSConcreteMutableAttributedString /usr/lib/libSystem.B.dylib
  // class methods
  +[NSConcreteNotifyingMutableAttributedString _mutableStringClass]

  // instance methods
  -[NSConcreteNotifyingMutableAttributedString beginEditing]
  -[NSConcreteNotifyingMutableAttributedString endEditing]
  -[NSConcreteNotifyingMutableAttributedString delegate]
  -[NSConcreteNotifyingMutableAttributedString setDelegate:]
  -[NSConcreteNotifyingMutableAttributedString edited:range:changeInLength:]


_NSTextStorageSideData : NSObject
 @property  id delegate

  // instance methods
  -[_NSTextStorageSideData dealloc]
  -[_NSTextStorageSideData delegate]
  -[_NSTextStorageSideData setDelegate:]


NSTextStorage : NSMutableAttributedString /usr/lib/libSystem.B.dylib <NSSecureCoding>
 @property  NSArray *layoutManagers
 @property  unsigned long editedMask
 @property  {_NSRange=QQ} editedRange
 @property  long long changeInLength
 @property  <NSTextStorageDelegate> *delegate
 @property  BOOL fixesAttributesLazily

  // class methods
  +[NSTextStorage allocWithZone:]
  +[NSTextStorage initialize]
  +[NSTextStorage supportsSecureCoding]

  // instance methods
  -[NSTextStorage init]
  -[NSTextStorage dealloc]
  -[NSTextStorage finalize]
  -[NSTextStorage beginEditing]
  -[NSTextStorage endEditing]
  -[NSTextStorage encodeWithCoder:]
  -[NSTextStorage initWithCoder:]
  -[NSTextStorage classForCoder]
  -[NSTextStorage delegate]
  -[NSTextStorage setDelegate:]
  -[NSTextStorage edited:range:changeInLength:]
  -[NSTextStorage cuiCatalog]
  -[NSTextStorage _usesSimpleTextEffects]
  -[NSTextStorage _isEditing]
  -[NSTextStorage _lockForReading]
  -[NSTextStorage _unlock]
  -[NSTextStorage _setForceFixAttributes:]
  -[NSTextStorage _setUsesSimpleTextEffects:]
  -[NSTextStorage cuiStyleEffects]
  -[NSTextStorage addLayoutManager:]
  -[NSTextStorage processEditing]
  -[NSTextStorage layoutManagers]
  -[NSTextStorage removeLayoutManager:]
  -[NSTextStorage _lockForWriting]
  -[NSTextStorage coordinateAccess:]
  -[NSTextStorage _attributeFixingInProgress]
  -[NSTextStorage _setAttributeFixingInProgress:]
  -[NSTextStorage _shouldSetOriginalFontAttribute]
  -[NSTextStorage setTextStorageController:]
  -[NSTextStorage editedRange]
  -[NSTextStorage invalidateAttributesInRange:]
  -[NSTextStorage editedMask]
  -[NSTextStorage changeInLength]
  -[NSTextStorage _notifyEdited:range:changeInLength:invalidatedRange:]
  -[NSTextStorage fontSetChanged]
  -[NSTextStorage _setEditedRange:]
  -[NSTextStorage _lockForWritingWithExceptionHandler:]
  -[NSTextStorage textStorageController]
  -[NSTextStorage fixesAttributesLazily]
  -[NSTextStorage _rangeByEstimatingAttributeFixingForRange:]
  -[NSTextStorage _forceFixAttributes]
  -[NSTextStorage coordinateReading:]
  -[NSTextStorage coordinateEditing:]
  -[NSTextStorage setEditedMask:]
  -[NSTextStorage ensureAttributesAreFixedInRange:]


NSConcreteTextStorage : NSTextStorage
  // class methods
  +[NSConcreteTextStorage _writerCountTSDKey]

  // instance methods
  -[NSConcreteTextStorage init]
  -[NSConcreteTextStorage string]
  -[NSConcreteTextStorage dealloc]
  -[NSConcreteTextStorage length]
  -[NSConcreteTextStorage attributesAtIndex:effectiveRange:]
  -[NSConcreteTextStorage attribute:atIndex:effectiveRange:]
  -[NSConcreteTextStorage attributesAtIndex:longestEffectiveRange:inRange:]
  -[NSConcreteTextStorage attribute:atIndex:longestEffectiveRange:inRange:]
  -[NSConcreteTextStorage replaceCharactersInRange:withString:]
  -[NSConcreteTextStorage setAttributes:range:]
  -[NSConcreteTextStorage addAttributes:range:]
  -[NSConcreteTextStorage addAttribute:value:range:]
  -[NSConcreteTextStorage removeAttribute:range:]
  -[NSConcreteTextStorage replaceCharactersInRange:withAttributedString:]
  -[NSConcreteTextStorage classForCoder]
  -[NSConcreteTextStorage initWithString:]
  -[NSConcreteTextStorage initWithString:attributes:]
  -[NSConcreteTextStorage initWithAttributedString:]
  -[NSConcreteTextStorage _lockForReading]
  -[NSConcreteTextStorage _unlock]
  -[NSConcreteTextStorage _setForceFixAttributes:]
  -[NSConcreteTextStorage _attributeFixingInProgress]
  -[NSConcreteTextStorage _setAttributeFixingInProgress:]
  -[NSConcreteTextStorage _lockForWritingWithExceptionHandler:]
  -[NSConcreteTextStorage fixesAttributesLazily]
  -[NSConcreteTextStorage _forceFixAttributes]
  -[NSConcreteTextStorage _initLocks]


NSTextBlockLayoutHelper : NSObject
 @property  NSTextTableBlock *block

  // instance methods
  -[NSTextBlockLayoutHelper dealloc]
  -[NSTextBlockLayoutHelper block]
  -[NSTextBlockLayoutHelper initWithTextBlock:charRange:glyphRange:layoutRect:boundsRect:containerWidth:allowMargins:collapseBorders:allowPadding:]
  -[NSTextBlockLayoutHelper initWithTextBlock:charRange:text:layoutManager:containerWidth:collapseBorders:]
  -[NSTextBlockLayoutHelper initWithTextBlock:charIndex:text:layoutManager:containerWidth:collapseBorders:]
  -[NSTextBlockLayoutHelper initWithTextTable:charIndex:text:layoutManager:containerWidth:collapseBorders:]


NSTextBlock : NSObject <NSSecureCoding, NSCoding, NSCopying>
  // class methods
  +[NSTextBlock initialize]
  +[NSTextBlock supportsSecureCoding]

  // instance methods
  -[NSTextBlock init]
  -[NSTextBlock dealloc]
  -[NSTextBlock copyWithZone:]
  -[NSTextBlock encodeWithCoder:]
  -[NSTextBlock initWithCoder:]
  -[NSTextBlock drawBackgroundWithFrame:inView:characterRange:layoutManager:]
  -[NSTextBlock widthForLayer:edge:]
  -[NSTextBlock valueForDimension:]
  -[NSTextBlock widthValueTypeForLayer:edge:]
  -[NSTextBlock valueTypeForDimension:]
  -[NSTextBlock _destroyFloatStorage]
  -[NSTextBlock _createFloatStorage]
  -[NSTextBlock _takeValuesFromTextBlock:]
  -[NSTextBlock _setValue:type:forParameter:]
  -[NSTextBlock _valueForParameter:]
  -[NSTextBlock _valueTypeForParameter:]
  -[NSTextBlock setValue:type:forDimension:]
  -[NSTextBlock setWidth:type:forLayer:edge:]
  -[NSTextBlock setBorderColor:forEdge:]
  -[NSTextBlock verticalAlignment]
  -[NSTextBlock backgroundColor]
  -[NSTextBlock borderColorForEdge:]
  -[NSTextBlock setContentWidth:type:]
  -[NSTextBlock contentWidth]
  -[NSTextBlock contentWidthValueType]
  -[NSTextBlock setWidth:type:forLayer:]
  -[NSTextBlock setVerticalAlignment:]
  -[NSTextBlock setBackgroundColor:]
  -[NSTextBlock setBorderColor:]
  -[NSTextBlock rectForLayoutAtPoint:inRect:textContainer:characterRange:]
  -[NSTextBlock boundsRectForContentRect:inRect:textContainer:characterRange:]
  -[NSTextBlock _attributeDescription]


NSTextTableBlock : NSTextBlock <NSSecureCoding>
  // class methods
  +[NSTextTableBlock initialize]
  +[NSTextTableBlock supportsSecureCoding]

  // instance methods
  -[NSTextTableBlock init]
  -[NSTextTableBlock dealloc]
  -[NSTextTableBlock copyWithZone:]
  -[NSTextTableBlock encodeWithCoder:]
  -[NSTextTableBlock initWithCoder:]
  -[NSTextTableBlock table]
  -[NSTextTableBlock drawBackgroundWithFrame:inView:characterRange:layoutManager:]
  -[NSTextTableBlock startingRow]
  -[NSTextTableBlock columnSpan]
  -[NSTextTableBlock rowSpan]
  -[NSTextTableBlock rectForLayoutAtPoint:inRect:textContainer:characterRange:]
  -[NSTextTableBlock boundsRectForContentRect:inRect:textContainer:characterRange:]
  -[NSTextTableBlock initWithTable:startingRow:rowSpan:startingColumn:columnSpan:]
  -[NSTextTableBlock startingColumn]
  -[NSTextTableBlock _setRowSpan:]
  -[NSTextTableBlock _setColumnSpan:]


NSTextTable : NSTextBlock <NSSecureCoding>
  // class methods
  +[NSTextTable initialize]
  +[NSTextTable supportsSecureCoding]

  // instance methods
  -[NSTextTable init]
  -[NSTextTable dealloc]
  -[NSTextTable encodeWithCoder:]
  -[NSTextTable initWithCoder:]
  -[NSTextTable numberOfColumns]
  -[NSTextTable _takeValuesFromTextBlock:]
  -[NSTextTable rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:]
  -[NSTextTable boundsRectForBlock:contentRect:inRect:textContainer:characterRange:]
  -[NSTextTable drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:]
  -[NSTextTable collapsesBorders]
  -[NSTextTable _rowArrayForBlock:atIndex:text:layoutManager:containerWidth:withRepetitions:collapseBorders:rowCharRange:indexInRow:startingRow:startingColumn:previousRowBlockHelper:]
  -[NSTextTable _contentRectForCharRange:textContainer:]
  -[NSTextTable hidesEmptyCells]
  -[NSTextTable _missingColumnsForRowRange:blockIndex:text:]
  -[NSTextTable setNumberOfColumns:]
  -[NSTextTable setCollapsesBorders:]
  -[NSTextTable setHidesEmptyCells:]
  -[NSTextTable layoutAlgorithm]
  -[NSTextTable setLayoutAlgorithm:]
  -[NSTextTable _tableFlags]
  -[NSTextTable _setTableFlags:]
  -[NSTextTable _descriptionAtIndex:text:]


_UIPointVector : NSObject
 @property  unsigned long capacity
 @property  unsigned long count
 @property  * vectors

  // instance methods
  -[_UIPointVector init]
  -[_UIPointVector dealloc]
  -[_UIPointVector count]
  -[_UIPointVector clear]
  -[_UIPointVector setCount:]
  -[_UIPointVector capacity]
  -[_UIPointVector reset]
  -[_UIPointVector setCapacity:]
  -[_UIPointVector vectors]
  -[_UIPointVector setVectors:]
  -[_UIPointVector addVector:]
  -[_UIPointVector removeVectorAtIndex:]
  -[_UIPointVector vectorAtIndex:]
  -[_UIPointVector lastVector]


UIPointFIFO : NSObject
 @property  UIPointFIFO *nextFIFO

  // instance methods
  -[UIPointFIFO dealloc]
  -[UIPointFIFO clear]
  -[UIPointFIFO flush]
  -[UIPointFIFO nextFIFO]
  -[UIPointFIFO addPoint:]
  -[UIPointFIFO emitPoint:]
  -[UIPointFIFO initWithFIFO:]
  -[UIPointFIFO setNextFIFO:]


UIBoxcarFilterPointFIFO : UIPointFIFO
 @property  unsigned long width
 @property  float spacing
 @property  _UIPointVector *prevPoints

  // instance methods
  -[UIBoxcarFilterPointFIFO dealloc]
  -[UIBoxcarFilterPointFIFO clear]
  -[UIBoxcarFilterPointFIFO spacing]
  -[UIBoxcarFilterPointFIFO width]
  -[UIBoxcarFilterPointFIFO setWidth:]
  -[UIBoxcarFilterPointFIFO flush]
  -[UIBoxcarFilterPointFIFO addPoint:]
  -[UIBoxcarFilterPointFIFO initWithFIFO:width:spacing:]
  -[UIBoxcarFilterPointFIFO prevPoints]
  -[UIBoxcarFilterPointFIFO emitAveragedPoint]
  -[UIBoxcarFilterPointFIFO initWithFIFO:width:]
  -[UIBoxcarFilterPointFIFO setSpacing:]
  -[UIBoxcarFilterPointFIFO setPrevPoints:]


UIQuadCurvePointFIFO : UIPointFIFO
 @property  float unitScale
 @property  BOOL emitInterpolatedPoints
 @property  @? emissionHandler
 @property  ^{CGPath=} path
 @property  double lineWidth
 @property  _UIPointVector *prevPoints
 @property  _UIPointVector *points
 @property  _UIPointVector *controlPoints
 @property  void lastPoint
 @property  UIView *view

  // class methods
  +[UIQuadCurvePointFIFO interpolateFromPoint:toPoint:controlPoint:time:]

  // instance methods
  -[UIQuadCurvePointFIFO dealloc]
  -[UIQuadCurvePointFIFO clear]
  -[UIQuadCurvePointFIFO path]
  -[UIQuadCurvePointFIFO setPath:]
  -[UIQuadCurvePointFIFO flush]
  -[UIQuadCurvePointFIFO view]
  -[UIQuadCurvePointFIFO setLineWidth:]
  -[UIQuadCurvePointFIFO lineWidth]
  -[UIQuadCurvePointFIFO addPoint:]
  -[UIQuadCurvePointFIFO initWithFIFO:]
  -[UIQuadCurvePointFIFO prevPoints]
  -[UIQuadCurvePointFIFO setPrevPoints:]
  -[UIQuadCurvePointFIFO unitScale]
  -[UIQuadCurvePointFIFO setUnitScale:]
  -[UIQuadCurvePointFIFO points]
  -[UIQuadCurvePointFIFO setLastPoint:]
  -[UIQuadCurvePointFIFO lastPoint]
  -[UIQuadCurvePointFIFO enumerateInterpolationFromPoint:toPoint:controlPoint:usingBlock:]
  -[UIQuadCurvePointFIFO controlPoints]
  -[UIQuadCurvePointFIFO initWithFIFO:strokeView:]
  -[UIQuadCurvePointFIFO setUnitScaleForViewSize:normalizedSize:contentScaleFactor:]
  -[UIQuadCurvePointFIFO emissionHandler]
  -[UIQuadCurvePointFIFO setEmissionHandler:]
  -[UIQuadCurvePointFIFO setPoints:]
  -[UIQuadCurvePointFIFO setControlPoints:]
  -[UIQuadCurvePointFIFO setView:]
  -[UIQuadCurvePointFIFO emitInterpolatedPoints]
  -[UIQuadCurvePointFIFO setEmitInterpolatedPoints:]


NSTextViewportLayoutController : NSObject
 @property  <NSTextViewportLayoutDelegate> *delegate
 @property  <NSTextViewportElementProvider> *elementProvider
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} viewportBounds
 @property  NSTextRange *viewportRange

  // instance methods
  -[NSTextViewportLayoutController dealloc]
  -[NSTextViewportLayoutController delegate]
  -[NSTextViewportLayoutController setDelegate:]
  -[NSTextViewportLayoutController .cxx_destruct]
  -[NSTextViewportLayoutController initWithElementProvider:]
  -[NSTextViewportLayoutController elementProvider]
  -[NSTextViewportLayoutController viewport]
  -[NSTextViewportLayoutController textViewportElementForLocation:]
  -[NSTextViewportLayoutController textViewportElementsInRect:]
  -[NSTextViewportLayoutController textViewportElementAtPoint:]
  -[NSTextViewportLayoutController layoutViewport]
  -[NSTextViewportLayoutController relocateViewport:]
  -[NSTextViewportLayoutController adjustViewport:]
  -[NSTextViewportLayoutController viewportRange]
  -[NSTextViewportLayoutController enumerateTextViewportElementsInRect:options:usingBlock:]
  -[NSTextViewportLayoutController locationAtPoint:]
  -[NSTextViewportLayoutController addViewportLayoutObserver:]
  -[NSTextViewportLayoutController removeViewportLayoutObserver:]
  -[NSTextViewportLayoutController viewportBounds]


_NSTextViewportLayoutObserver : NSObject
  // instance methods
  -[_NSTextViewportLayoutObserver dealloc]
  -[_NSTextViewportLayoutObserver isEqual:]
  -[_NSTextViewportLayoutObserver object]
  -[_NSTextViewportLayoutObserver initWithWeakObject:]


NSTypesetter : NSObject
  // class methods
  +[NSTypesetter initialize]
  +[NSTypesetter defaultTypesetterBehavior]
  +[NSTypesetter allowsDefaultLineBreakStrategy]
  +[NSTypesetter defaultLineBreakStrategy]
  +[NSTypesetter sharedSystemTypesetterForBehavior:]
  +[NSTypesetter defaultStringDrawingTypesetterBehavior]
  +[NSTypesetter _usesATSTypesetter]
  +[NSTypesetter sharedSystemTypesetter]

  // instance methods
  -[NSTypesetter dealloc]
  -[NSTypesetter finalize]
  -[NSTypesetter setAttributedString:]
  -[NSTypesetter lineFragmentPadding]
  -[NSTypesetter attributedString]
  -[NSTypesetter setUsesFontLeading:]
  -[NSTypesetter setLineFragmentPadding:]
  -[NSTypesetter layoutManager]
  -[NSTypesetter usesFontLeading]
  -[NSTypesetter applicationFrameworkContext]
  -[NSTypesetter glyphRangeForCharacterRange:actualCharacterRange:]
  -[NSTypesetter baselineOffsetInLayoutManager:glyphIndex:]
  -[NSTypesetter characterRangeForGlyphRange:actualGlyphRange:]
  -[NSTypesetter actionForControlCharacterAtIndex:]
  -[NSTypesetter layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:]
  -[NSTypesetter layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:]
  -[NSTypesetter substituteFontForFont:]
  -[NSTypesetter _allowsEllipsisGlyphSubstitution]
  -[NSTypesetter _ellipsisFontForFont:]
  -[NSTypesetter setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:]
  -[NSTypesetter setApplicationFrameworkContext:]
  -[NSTypesetter _getAuxData]
  -[NSTypesetter bidiProcessingEnabled]
  -[NSTypesetter paragraphCharacterRange]
  -[NSTypesetter paragraphSeparatorCharacterRange]
  -[NSTypesetter _baseWritingDirection]
  -[NSTypesetter typesetterBehavior]
  -[NSTypesetter currentTextContainer]
  -[NSTypesetter beginLineWithGlyphAtIndex:]
  -[NSTypesetter getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:]
  -[NSTypesetter lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:]
  -[NSTypesetter paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:]
  -[NSTypesetter paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:]
  -[NSTypesetter finalizeLineFragmentRect:lineFragmentUsedRect:baselineOffset:forGlyphRange:]
  -[NSTypesetter setLocation:withAdvancements:forStartOfGlyphRange:]
  -[NSTypesetter setNotShownAttribute:forGlyphRange:]
  -[NSTypesetter endLineWithGlyphRange:]
  -[NSTypesetter currentParagraphStyle]
  -[NSTypesetter beginParagraph]
  -[NSTypesetter endParagraph]
  -[NSTypesetter getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:]
  -[NSTypesetter hyphenationFactor]
  -[NSTypesetter layoutParagraphAtPoint:]
  -[NSTypesetter _allocateAuxData]
  -[NSTypesetter _lineFragmentRectForProposedRectArgs]
  -[NSTypesetter paragraphGlyphRange]
  -[NSTypesetter paragraphSeparatorGlyphRange]
  -[NSTypesetter textContainers]
  -[NSTypesetter _forceOriginalFontBaseline]
  -[NSTypesetter getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:]
  -[NSTypesetter textTabForGlyphLocation:writingDirection:maxLocation:]
  -[NSTypesetter setHyphenationFactor:]
  -[NSTypesetter setTypesetterBehavior:]
  -[NSTypesetter _isLineBreakModeOverridden]
  -[NSTypesetter tightenThresholdForTruncation]
  -[NSTypesetter substituteGlyphsInRange:withGlyphs:]
  -[NSTypesetter insertGlyph:atGlyphIndex:characterIndex:]
  -[NSTypesetter setAttachmentSize:forGlyphRange:]
  -[NSTypesetter setBidiLevels:forGlyphRange:]
  -[NSTypesetter setDrawsOutsideLineFragment:forGlyphRange:]
  -[NSTypesetter setHardInvalidation:forGlyphRange:]
  -[NSTypesetter _setForceOriginalFontBaseline:]
  -[NSTypesetter setParagraphGlyphRange:separatorGlyphRange:]
  -[NSTypesetter deleteGlyphsInRange:]
  -[NSTypesetter getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:]
  -[NSTypesetter attributesForExtraLineFragment]
  -[NSTypesetter _updateParagraphStyleCache:]
  -[NSTypesetter _getRemainingNominalParagraphRange:andParagraphSeparatorRange:charactarIndex:layoutManager:string:]
  -[NSTypesetter _setLineBreakModeOverridden:]
  -[NSTypesetter _layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:maxCharacterIndex:nextGlyphIndex:nextCharacterIndex:]
  -[NSTypesetter setBidiProcessingEnabled:]
  -[NSTypesetter setTightenThresholdForTruncation:]


_UIFontCacheKey : NSObject <NSCopying>
  // class methods
  +[_UIFontCacheKey fontCacheKeyWithTextStyle:contentSizeCategory:textLegibility:]
  +[_UIFontCacheKey fontCacheKeyWithFontDescriptor:pointSize:textStyleForScaling:pointSizeForScaling:maximumPointSizeAfterScaling:textLegibility:]
  +[_UIFontCacheKey fontCacheKeyWithFontName:traits:pointSize:]
  +[_UIFontCacheKey systemFontCacheKeyWithTraits:pointSize:]
  +[_UIFontCacheKey fontCacheKeyWithTextStyle:contentSizeCategory:]
  +[_UIFontCacheKey fontCacheKeyWithFontDescriptor:pointSize:textStyleForScaling:pointSizeForScaling:maximumPointSizeAfterScaling:]

  // instance methods
  -[_UIFontCacheKey isEqual:]
  -[_UIFontCacheKey copyWithZone:]
  -[_UIFontCacheKey _hash]
  -[_UIFontCacheKey _precalculateHash]
  -[_UIFontCacheKey _isEqualToKey:]


_UIFontNameCacheKey : _UIFontCacheKey
 @property  NSString *fontName
 @property  int traits
 @property  double pointSize

  // instance methods
  -[_UIFontNameCacheKey dealloc]
  -[_UIFontNameCacheKey _hash]
  -[_UIFontNameCacheKey fontName]
  -[_UIFontNameCacheKey setFontName:]
  -[_UIFontNameCacheKey pointSize]
  -[_UIFontNameCacheKey traits]
  -[_UIFontNameCacheKey setTraits:]
  -[_UIFontNameCacheKey setPointSize:]
  -[_UIFontNameCacheKey _isEqualToKey:]


_UIFontSystemCacheKey : _UIFontCacheKey
 @property  int traits
 @property  double pointSize
 @property  BOOL textLegibility

  // instance methods
  -[_UIFontSystemCacheKey _hash]
  -[_UIFontSystemCacheKey pointSize]
  -[_UIFontSystemCacheKey traits]
  -[_UIFontSystemCacheKey setTraits:]
  -[_UIFontSystemCacheKey setPointSize:]
  -[_UIFontSystemCacheKey setTextLegibility:]
  -[_UIFontSystemCacheKey _isEqualToKey:]
  -[_UIFontSystemCacheKey textLegibility]


_UIFontTextStyleCacheKey : _UIFontCacheKey
 @property  NSString *textStyle
 @property  NSString *contentSizeCategory
 @property  BOOL textLegibility

  // instance methods
  -[_UIFontTextStyleCacheKey dealloc]
  -[_UIFontTextStyleCacheKey _hash]
  -[_UIFontTextStyleCacheKey setTextLegibility:]
  -[_UIFontTextStyleCacheKey setTextStyle:]
  -[_UIFontTextStyleCacheKey setContentSizeCategory:]
  -[_UIFontTextStyleCacheKey _isEqualToKey:]
  -[_UIFontTextStyleCacheKey textLegibility]
  -[_UIFontTextStyleCacheKey textStyle]
  -[_UIFontTextStyleCacheKey contentSizeCategory]


_UIFontDescriptorCacheKey : _UIFontCacheKey
 @property  UIFontDescriptor *fontDescriptor
 @property  double pointSize
 @property  NSString *textStyleForScaling
 @property  double pointSizeForScaling
 @property  double maximumPointSizeAfterScaling
 @property  BOOL textLegibility

  // instance methods
  -[_UIFontDescriptorCacheKey dealloc]
  -[_UIFontDescriptorCacheKey _hash]
  -[_UIFontDescriptorCacheKey pointSize]
  -[_UIFontDescriptorCacheKey fontDescriptor]
  -[_UIFontDescriptorCacheKey setPointSize:]
  -[_UIFontDescriptorCacheKey setTextLegibility:]
  -[_UIFontDescriptorCacheKey setFontDescriptor:]
  -[_UIFontDescriptorCacheKey setTextStyleForScaling:]
  -[_UIFontDescriptorCacheKey setPointSizeForScaling:]
  -[_UIFontDescriptorCacheKey setMaximumPointSizeAfterScaling:]
  -[_UIFontDescriptorCacheKey _isEqualToKey:]
  -[_UIFontDescriptorCacheKey textLegibility]
  -[_UIFontDescriptorCacheKey textStyleForScaling]
  -[_UIFontDescriptorCacheKey pointSizeForScaling]
  -[_UIFontDescriptorCacheKey maximumPointSizeAfterScaling]


NSTextAttachment : NSObject <NSTextAttachmentContainer, NSSecureCoding>
 @property  UIView *contentView
 @property  NSData *contents
 @property  NSString *fileType
 @property  UIImage *image
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} bounds
 @property  NSFileWrapper *fileWrapper
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[NSTextAttachment initialize]
  +[NSTextAttachment supportsSecureCoding]
  +[NSTextAttachment imageCache]
  +[NSTextAttachment textAttachmentViewProviderClassForFileType:]
  +[NSTextAttachment registerTextAttachmentViewProviderClass:forFileType:]
  +[NSTextAttachment textAttachmentClassForFileType:]
  +[NSTextAttachment registerTextAttachmentClass:forFileType:]

  // instance methods
  -[NSTextAttachment init]
  -[NSTextAttachment dealloc]
  -[NSTextAttachment encodeWithCoder:]
  -[NSTextAttachment initWithCoder:]
  -[NSTextAttachment contents]
  -[NSTextAttachment fileType]
  -[NSTextAttachment _cacheKey]
  -[NSTextAttachment bounds]
  -[NSTextAttachment image]
  -[NSTextAttachment setImage:]
  -[NSTextAttachment setBounds:]
  -[NSTextAttachment _image]
  -[NSTextAttachment attachmentCell]
  -[NSTextAttachment lineLayoutPadding]
  -[NSTextAttachment usesTextAttachmentView]
  -[NSTextAttachment viewProviderForParentView:characterIndex:layoutManager:]
  -[NSTextAttachment placeView:withFrame:inParentView:characterIndex:layoutManager:]
  -[NSTextAttachment imageForBounds:textContainer:characterIndex:]
  -[NSTextAttachment standaloneAlignment]
  -[NSTextAttachment _allocatesTextContainer]
  -[NSTextAttachment attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:]
  -[NSTextAttachment embeddingType]
  -[NSTextAttachment _imageForUTI_iOS:]
  -[NSTextAttachment setEmbeddingType:]
  -[NSTextAttachment setStandaloneAlignment:]
  -[NSTextAttachment setAllowsTextAttachmentView:]
  -[NSTextAttachment _setAllocatesTextContainer:]
  -[NSTextAttachment initWithData:ofType:]
  -[NSTextAttachment _invalidateWrapperView]
  -[NSTextAttachment allowsTextAttachmentView]
  -[NSTextAttachment fileWrapper]
  -[NSTextAttachment initWithFileWrapper:]
  -[NSTextAttachment setLineLayoutPadding:]
  -[NSTextAttachment contentView]
  -[NSTextAttachment textAttachmentViewProviderClass]
  -[NSTextAttachment detachView:fromParentView:]
  -[NSTextAttachment setContents:]
  -[NSTextAttachment setFileType:]
  -[NSTextAttachment setFileWrapper:]
  -[NSTextAttachment setContentView:]
  -[NSTextAttachment setDrawingBounds:]
  -[NSTextAttachment drawingBounds]


NSTextAttachmentViewProvider : NSObject
 @property  NSTextAttachment *textAttachment
 @property  NSLayoutManager *layoutManager
 @property  unsigned long characterIndex
 @property  UIView *view
 @property  BOOL tracksTextAttachmentViewBounds

  // instance methods
  -[NSTextAttachmentViewProvider dealloc]
  -[NSTextAttachmentViewProvider .cxx_destruct]
  -[NSTextAttachmentViewProvider layoutManager]
  -[NSTextAttachmentViewProvider removeView]
  -[NSTextAttachmentViewProvider view]
  -[NSTextAttachmentViewProvider attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:]
  -[NSTextAttachmentViewProvider setLayoutManager:]
  -[NSTextAttachmentViewProvider characterIndex]
  -[NSTextAttachmentViewProvider setView:]
  -[NSTextAttachmentViewProvider tracksTextAttachmentViewBounds]
  -[NSTextAttachmentViewProvider initWithTextAttachment:parentView:characterIndex:layoutManager:]
  -[NSTextAttachmentViewProvider setTextAttachment:]
  -[NSTextAttachmentViewProvider setTracksTextAttachmentViewBounds:]
  -[NSTextAttachmentViewProvider loadView]
  -[NSTextAttachmentViewProvider textAttachment]


NSRTFReaderTableState : NSObject
  // instance methods
  -[NSRTFReaderTableState dealloc]


NSRTFReader : NSObject
  // instance methods
  -[NSRTFReader dealloc]
  -[NSRTFReader finalize]
  -[NSRTFReader initWithPath:]
  -[NSRTFReader mutableAttributes]
  -[NSRTFReader mutableAttributedString]
  -[NSRTFReader defaultTabInterval]
  -[NSRTFReader baseWritingDirection]
  -[NSRTFReader setDefaultTabInterval:]
  -[NSRTFReader setBaseWritingDirection:]
  -[NSRTFReader attributedString]
  -[NSRTFReader defaultParagraphStyle]
  -[NSRTFReader setHyphenationFactor:]
  -[NSRTFReader setMutableAttributedString:]
  -[NSRTFReader documentAttributes]
  -[NSRTFReader initWithRTFDFileWrapper:]
  -[NSRTFReader initWithRTF:]
  -[NSRTFReader initWithRTFD:]
  -[NSRTFReader _setTargetTextScaling:]
  -[NSRTFReader _setSourceTextScaling:]
  -[NSRTFReader setReadLimit:]
  -[NSRTFReader setThumbnailLimit:]
  -[NSRTFReader setUsesScreenFonts:]
  -[NSRTFReader setBackgroundColor:]
  -[NSRTFReader _currentTable]
  -[NSRTFReader _setRTFDFileWrapper:]
  -[NSRTFReader cocoaVersion]
  -[NSRTFReader cocoaSubVersion]
  -[NSRTFReader _ensureTableCells]
  -[NSRTFReader _mutableParagraphStyle]
  -[NSRTFReader _pushTableState]
  -[NSRTFReader _popTableState]
  -[NSRTFReader _beginTableRow]
  -[NSRTFReader _setTableCells]
  -[NSRTFReader _clearTableCells]
  -[NSRTFReader floatCocoaVersion]
  -[NSRTFReader _updateAttributes]
  -[NSRTFReader setCocoaTextScaling:]
  -[NSRTFReader _determineSourceTextScalingType]
  -[NSRTFReader _determineFinalTextScalingType]
  -[NSRTFReader _updateFontSizeForTextScalingIfNeeded:]
  -[NSRTFReader _addListDefinition:forKey:]
  -[NSRTFReader _RTFDFileWrapper]
  -[NSRTFReader setPaperSize:]
  -[NSRTFReader paperSize]
  -[NSRTFReader setViewSize:]
  -[NSRTFReader viewSize]
  -[NSRTFReader setViewKind:]
  -[NSRTFReader setViewScale:]
  -[NSRTFReader setCocoaVersion:]
  -[NSRTFReader setCocoaSubVersion:]
  -[NSRTFReader setReadOnly:]
  -[NSRTFReader setLeftMargin:]
  -[NSRTFReader setRightMargin:]
  -[NSRTFReader setTopMargin:]
  -[NSRTFReader setBottomMargin:]
  -[NSRTFReader setTextFlow:]
  -[NSRTFReader textFlow]
  -[NSRTFReader cocoaPlatform]
  -[NSRTFReader setCocoaPlatform:]
  -[NSRTFReader cocoaTextScaling]
  -[NSRTFReader _currentTableCell]
  -[NSRTFReader _currentBorderEdge]
  -[NSRTFReader _currentBorderIsTable]
  -[NSRTFReader _currentTableCellIsPlaceholder]
  -[NSRTFReader _setCurrentBorderEdge:isTable:]
  -[NSRTFReader _setTableNestingLevel:]
  -[NSRTFReader _startTableRowDefinition]
  -[NSRTFReader _endTableCellDefinition]
  -[NSRTFReader _paragraphInTable]
  -[NSRTFReader _endTableCell]
  -[NSRTFReader _lastTableRow]
  -[NSRTFReader _endTableRow]
  -[NSRTFReader _mergeTableCellsHorizontally]
  -[NSRTFReader _mergeTableCellsVertically]
  -[NSRTFReader attributedStringToEndOfGroup]
  -[NSRTFReader attributesAtEndOfGroup]
  -[NSRTFReader _documentInfoDictionary]
  -[NSRTFReader _currentListNumber]
  -[NSRTFReader _setCurrentListNumber:]
  -[NSRTFReader _currentListLevel]
  -[NSRTFReader _setCurrentListLevel:]
  -[NSRTFReader _listDefinitions]
  -[NSRTFReader _addOverride:forKey:]
  -[NSRTFReader processString:]
  -[NSRTFReader _pushState]
  -[NSRTFReader _popState]


UINibEncoder : NSCoder /usr/lib/libSystem.B.dylib
 @property  id delegate

  // class methods
  +[UINibEncoder archivedDataWithRootObject:]
  +[UINibEncoder archiveRootObject:toFile:]

  // instance methods
  -[UINibEncoder dealloc]
  -[UINibEncoder allowsKeyedCoding]
  -[UINibEncoder encodeInteger:forKey:]
  -[UINibEncoder encodeInt64:forKey:]
  -[UINibEncoder encodeObject:forKey:]
  -[UINibEncoder encodeBool:forKey:]
  -[UINibEncoder delegate]
  -[UINibEncoder setDelegate:]
  -[UINibEncoder encodeBytes:length:forKey:]
  -[UINibEncoder encodeInt32:forKey:]
  -[UINibEncoder encodeValueOfObjCType:at:]
  -[UINibEncoder encodeConditionalObject:]
  -[UINibEncoder encodeObject:]
  -[UINibEncoder encodeArrayOfObjCType:count:at:]
  -[UINibEncoder initForWritingWithMutableData:]
  -[UINibEncoder encodeRootObject:]
  -[UINibEncoder versionForClassName:]
  -[UINibEncoder encodeValuesOfObjCTypes:]
  -[UINibEncoder encodeBytes:length:]
  -[UINibEncoder systemVersion]
  -[UINibEncoder encodeBycopyObject:]
  -[UINibEncoder encodeInt:forKey:]
  -[UINibEncoder encodeDouble:forKey:]
  -[UINibEncoder encodeByrefObject:]
  -[UINibEncoder encodeConditionalObject:forKey:]
  -[UINibEncoder encodeFloat:forKey:]
  -[UINibEncoder finishEncoding]
  -[UINibEncoder serializeObject:]
  -[UINibEncoder encodeCGPoint:forKey:]
  -[UINibEncoder encodeCGSize:forKey:]
  -[UINibEncoder encodeCGRect:forKey:]
  -[UINibEncoder nextGenericKey]
  -[UINibEncoder assignObjectIDForObject:]
  -[UINibEncoder objectIDForObject:]
  -[UINibEncoder encodedClassForObject:]
  -[UINibEncoder encodedClassNameForClass:]
  -[UINibEncoder object:encodesWithCoderFromClass:]
  -[UINibEncoder object:encodesAsMemberAndWithCoderOfClass:]
  -[UINibEncoder shouldUniqueObjectByValue:]
  -[UINibEncoder serializeArray:]
  -[UINibEncoder serializeDictionary:]
  -[UINibEncoder serializeSet:]
  -[UINibEncoder replacementObjectForObject:forKey:]
  -[UINibEncoder appendValue:]
  -[UINibEncoder encodeArrayOfDoubles:count:forKey:]
  -[UINibEncoder encodeArrayOfCGFloats:count:forKey:]
  -[UINibEncoder previouslyCodedObject:]
  -[UINibEncoder encodedClassNameForObject:]
  -[UINibEncoder encodeArrayOfFloats:count:forKey:]
  -[UINibEncoder encodeCGAffineTransform:forKey:]
  -[UINibEncoder encodeUIEdgeInsets:forKey:]


UIFont : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *textStyleForScaling
 @property  double pointSizeForScaling
 @property  double maximumPointSizeAfterScaling
 @property  NSString *familyName
 @property  NSString *fontName
 @property  double pointSize
 @property  double ascender
 @property  double descender
 @property  double capHeight
 @property  double xHeight
 @property  double lineHeight
 @property  double leading
 @property  UIFontDescriptor *fontDescriptor

  // class methods
  +[UIFont initialize]
  +[UIFont supportsSecureCoding]
  +[UIFont classFallbacksForKeyedArchiver]
  +[UIFont familyNames]
  +[UIFont userFontOfSize:]
  +[UIFont fontWithDescriptor:size:]
  +[UIFont fontWithName:size:]
  +[UIFont systemFontOfSize:]
  +[UIFont systemFontOfSize:weight:]
  +[UIFont _fontWithName:size:]
  +[UIFont _sharedFontCache]
  +[UIFont fontWithName:size:traits:]
  +[UIFont _isSupportedDynamicFontTextStyle:]
  +[UIFont _systemFontsOfSize:traits:]
  +[UIFont _preferredFontForTextStyle:maximumContentSizeCategory:compatibleWithTraitCollection:]
  +[UIFont preferredFontForTextStyle:compatibleWithTraitCollection:]
  +[UIFont _preferredFontForTextStyle:maximumPointSize:compatibleWithTraitCollection:]
  +[UIFont _preferredFontForTextStyle:design:variant:maximumContentSizeCategory:compatibleWithTraitCollection:]
  +[UIFont _preferredFontForTextStyle:design:variant:maximumContentSizeCategory:compatibleWithTraitCollection:pointSize:pointSizeForScaling:]
  +[UIFont _preferredFontForTextStyle:design:weight:symbolicTraits:maximumContentSizeCategory:compatibleWithTraitCollection:pointSize:pointSizeForScaling:]
  +[UIFont _fontWithDescriptor:size:textStyleForScaling:pointSizeForScaling:maximumPointSizeAfterScaling:forIB:legibilityWeight:]
  +[UIFont _supportedDynamicFontStyles]
  +[UIFont _pointSize:scaledLikeTextStyle:maximumPointSize:compatibleWithTraitCollection:roundSize:]
  +[UIFont _pointSize:scaledLikeTextStyle:maximumPointSize:compatibleWithTraitCollection:]
  +[UIFont preferredFontForTextStyle:]
  +[UIFont systemFontOfSize:traits:]
  +[UIFont systemFontOfSize:weight:design:]
  +[UIFont ib_preferredFontForTextStyle:]
  +[UIFont _sharedZeroPointFont]
  +[UIFont _evictAllItemsFromFontAndFontDescriptorCaches]
  +[UIFont fontWithFamilyName:traits:size:]
  +[UIFont fontWithMarkupDescription:]
  +[UIFont fontNamesForFamilyName:]
  +[UIFont preferredFontForUsage:]
  +[UIFont preferredFontForUsage:contentSizeCategoryName:]
  +[UIFont _preferredFontForTextStyle:maximumContentSizeCategory:]
  +[UIFont _preferredFontForTextStyle:variant:]
  +[UIFont _preferredFontForTextStyle:variant:maximumContentSizeCategory:]
  +[UIFont _preferredFontForTextStyle:design:variant:]
  +[UIFont _preferredFontForTextStyle:design:variant:compatibleWithTraitCollection:]
  +[UIFont _readableWidth]
  +[UIFont defaultFontForTextStyle:]
  +[UIFont _opticalSystemFontOfSize:]
  +[UIFont _opticalBoldSystemFontOfSize:]
  +[UIFont boldSystemFontOfSize:]
  +[UIFont italicSystemFontOfSize:]
  +[UIFont _thinSystemFontOfSize:]
  +[UIFont _lightSystemFontOfSize:]
  +[UIFont _ultraLightSystemFontOfSize:]
  +[UIFont monospacedSystemFontOfSize:weight:]
  +[UIFont monospacedDigitSystemFontOfSize:weight:]
  +[UIFont labelFontSize]
  +[UIFont buttonFontSize]
  +[UIFont smallSystemFontSize]
  +[UIFont systemFontSize]

  // instance methods
  -[UIFont copyWithZone:]
  -[UIFont encodeWithCoder:]
  -[UIFont initWithCoder:]
  -[UIFont classForCoder]
  -[UIFont familyName]
  -[UIFont _familyName]
  -[UIFont fontName]
  -[UIFont initWithName:size:]
  -[UIFont boundingRectForFont]
  -[UIFont verticalFont]
  -[UIFont advancementForGlyph:]
  -[UIFont _backingCGSFont]
  -[UIFont pointSize]
  -[UIFont isVertical]
  -[UIFont xHeight]
  -[UIFont descender]
  -[UIFont _leading]
  -[UIFont underlineThickness]
  -[UIFont ascender]
  -[UIFont _textMatrixTransformForContext:]
  -[UIFont getAdvancements:forCGGlyphs:count:]
  -[UIFont getVerticalOriginTranslations:forCGGlyphs:count:]
  -[UIFont applyToGraphicsContext:]
  -[UIFont getCaretPositions:forGlyph:maximumLength:]
  -[UIFont _totalAdvancementForNativeGlyphs:count:]
  -[UIFont numberOfGlyphs]
  -[UIFont _isDefaultFace]
  -[UIFont renderingMode]
  -[UIFont _kernOverride]
  -[UIFont hyphenGlyphForLocale:]
  -[UIFont getBoundingRects:forCGGlyphs:count:]
  -[UIFont screenFontWithRenderingMode:]
  -[UIFont _defaultLineHeightForUILayout]
  -[UIFont glyphWithName:]
  -[UIFont fontWithSize:]
  -[UIFont fontDescriptor]
  -[UIFont coveredCharacterSet]
  -[UIFont bestMatchingFontForCharacters:length:attributes:actualCoveredLength:]
  -[UIFont _hasColorGlyphs]
  -[UIFont lastResortFont]
  -[UIFont traits]
  -[UIFont _getLatin1Glyphs:advanceWidths:]
  -[UIFont textStyleForScaling]
  -[UIFont pointSizeForScaling]
  -[UIFont maximumPointSizeAfterScaling]
  -[UIFont initWithMarkupDescription:]
  -[UIFont __isSystemFont]
  -[UIFont _fontAdjustedForContentSizeCategoryCompatibleWithTraitCollection:]
  -[UIFont _scaledValueForValue:]
  -[UIFont readableWidth]
  -[UIFont _bodyLeading]
  -[UIFont initWithFamilyName:traits:size:]
  -[UIFont familyNameForCSSFontFamilyValueForWebKit:]
  -[UIFont markupDescriptionForWebKit:pointSize:sizeUnit:]
  -[UIFont markupDescription]
  -[UIFont isIBTextStyleFont]
  -[UIFont isIBFontMetricsScaledFont]
  -[UIFont lineHeight]
  -[UIFont _alternateSystemFonts]
  -[UIFont _fontAdjustedForCurrentContentSizeCategory]
  -[UIFont _fontScaledLikeTextStyle:maximumPointSize:compatibleWithTraitCollection:forIB:]
  -[UIFont htmlMarkupDescription]
  -[UIFont _fontScaledByScaleFactor:]
  -[UIFont _isUIFont]
  -[UIFont mostCompatibleStringEncoding]
  -[UIFont _isHiraginoFont]
  -[UIFont _baseLineHeightForFont:]
  -[UIFont leading]
  -[UIFont _ascenderDeltaForBehavior:]
  -[UIFont capHeight]
  -[UIFont isSystemFont]
  -[UIFont isFixedPitch]
  -[UIFont CTFont]
  -[UIFont setInContext:]
  -[UIFont underlinePosition]
  -[UIFont _defaultGlyphForChar:]


UICTFont : UIFont
  // instance methods
  -[UICTFont retainCount]
  -[UICTFont isEqual:]
  -[UICTFont retain]
  -[UICTFont release]
  -[UICTFont retainWeakReference]
  -[UICTFont allowsWeakReference]
  -[UICTFont _cfTypeID]


NSSubstituteWebResource : NSObject
  // instance methods
  -[NSSubstituteWebResource dealloc]
  -[NSSubstituteWebResource data]
  -[NSSubstituteWebResource URL]
  -[NSSubstituteWebResource MIMEType]
  -[NSSubstituteWebResource textEncodingName]
  -[NSSubstituteWebResource _webResourceClass]
  -[NSSubstituteWebResource initWithData:URL:MIMEType:textEncodingName:frameName:]
  -[NSSubstituteWebResource frameName]
  -[NSSubstituteWebResource webResource]


NSHTMLWebDelegate : NSObject
  // instance methods
  -[NSHTMLWebDelegate init]
  -[NSHTMLWebDelegate dealloc]
  -[NSHTMLWebDelegate decidePolicyForRequest:decisionListener:]
  -[NSHTMLWebDelegate initWithBaseURL:]
  -[NSHTMLWebDelegate loadDidFinish]
  -[NSHTMLWebDelegate loadDidSucceed]
  -[NSHTMLWebDelegate webView:didStartProvisionalLoadForFrame:]
  -[NSHTMLWebDelegate webView:didCommitLoadForFrame:]
  -[NSHTMLWebDelegate webView:didFailProvisionalLoadWithError:forFrame:]
  -[NSHTMLWebDelegate webView:didFinishLoadForFrame:]
  -[NSHTMLWebDelegate webView:didFailLoadWithError:forFrame:]
  -[NSHTMLWebDelegate webView:identifierForInitialRequest:fromDataSource:]
  -[NSHTMLWebDelegate webView:resource:willSendRequest:redirectResponse:fromDataSource:]
  -[NSHTMLWebDelegate webView:resource:didReceiveAuthenticationChallenge:fromDataSource:]
  -[NSHTMLWebDelegate webView:resource:didFinishLoadingFromDataSource:]
  -[NSHTMLWebDelegate webView:resource:didFailLoadingWithError:fromDataSource:]
  -[NSHTMLWebDelegate webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:]
  -[NSHTMLWebDelegate webView:decidePolicyForNavigationAction:request:frame:decisionListener:]
  -[NSHTMLWebDelegate webView:decidePolicyForMIMEType:request:frame:decisionListener:]


NSHTMLReader : NSObject
  // class methods
  +[NSHTMLReader initialize]
  +[NSHTMLReader defaultParagraphStyle]
  +[NSHTMLReader allowsAttributedStringAgentForOptions:]
  +[NSHTMLReader _usesLibXML2ForOptions:]

  // instance methods
  -[NSHTMLReader dealloc]
  -[NSHTMLReader initWithData:options:]
  -[NSHTMLReader attributedString]
  -[NSHTMLReader setMutableAttributedString:]
  -[NSHTMLReader documentAttributes]
  -[NSHTMLReader _computedStyleForElement:]
  -[NSHTMLReader _specifiedStyleForElement:]
  -[NSHTMLReader _stringForNode:property:]
  -[NSHTMLReader _computedStringForNode:property:]
  -[NSHTMLReader _getFloat:forNode:property:]
  -[NSHTMLReader _getComputedFloat:forNode:property:]
  -[NSHTMLReader _elementIsBlockLevel:]
  -[NSHTMLReader _blockLevelElementForNode:]
  -[NSHTMLReader _elementHasOwnBackgroundColor:]
  -[NSHTMLReader _colorForNode:property:]
  -[NSHTMLReader _computedColorForNode:property:]
  -[NSHTMLReader _computedAttributesForElement:]
  -[NSHTMLReader _attributesForElement:]
  -[NSHTMLReader _DOMHTMLTableCellElementClass]
  -[NSHTMLReader _childrenForNode:]
  -[NSHTMLReader _processMetaElementWithName:content:]
  -[NSHTMLReader _processHeadElement:]
  -[NSHTMLReader _newParagraphForElement:tag:allowEmpty:suppressTrailingSpace:isEntering:]
  -[NSHTMLReader _fillInBlock:forElement:backgroundColor:extraMargin:extraPadding:isTable:]
  -[NSHTMLReader _addTableCellForElement:]
  -[NSHTMLReader _addTableForElement:]
  -[NSHTMLReader _addAttachmentForElement:URL:needsParagraph:usePlaceholder:]
  -[NSHTMLReader _traverseNode:depth:embedded:]
  -[NSHTMLReader _newLineForElement:]
  -[NSHTMLReader _addQuoteForElement:opening:level:]
  -[NSHTMLReader _addValue:forElement:]
  -[NSHTMLReader _newTabForElement:]
  -[NSHTMLReader _traverseFooterNode:depth:]
  -[NSHTMLReader _addMarkersToList:range:]
  -[NSHTMLReader _enterElement:tag:display:depth:embedded:]
  -[NSHTMLReader _processElement:tag:display:depth:]
  -[NSHTMLReader _exitElement:tag:display:depth:startIndex:]
  -[NSHTMLReader _processText:]
  -[NSHTMLReader _sanitizeWebArchiveDictionary:]
  -[NSHTMLReader _sanitizeWebArchiveArray:]
  -[NSHTMLReader _webArchiveClass]
  -[NSHTMLReader _webViewClass]
  -[NSHTMLReader _createWebArchiveForData:]
  -[NSHTMLReader _webPreferences]
  -[NSHTMLReader _parseNode:]
  -[NSHTMLReader _adjustTrailingNewline]
  -[NSHTMLReader _loadUsingWebKit]
  -[NSHTMLReader _loadFromDOMRange]
  -[NSHTMLReader _loadUsingWebKitOnMainThread]
  -[NSHTMLReader _load]
  -[NSHTMLReader initWithPath:options:]
  -[NSHTMLReader initWithDOMRange:]


NSHTMLWriter : NSObject
  // class methods
  +[NSHTMLWriter fontNameForFont:]

  // instance methods
  -[NSHTMLWriter dealloc]
  -[NSHTMLWriter initWithAttributedString:]
  -[NSHTMLWriter _prefix]
  -[NSHTMLWriter setDocumentAttributes:]
  -[NSHTMLWriter HTMLData]
  -[NSHTMLWriter webArchiveData]
  -[NSHTMLWriter HTMLFileWrapper]
  -[NSHTMLWriter documentFragmentString]
  -[NSHTMLWriter subresources]
  -[NSHTMLWriter documentFragmentForDocument:]
  -[NSHTMLWriter _webArchiveClass]
  -[NSHTMLWriter _defaultValueForAttribute:range:]
  -[NSHTMLWriter _writeDocumentProperty:value:toString:]
  -[NSHTMLWriter _blockClassForBlock:]
  -[NSHTMLWriter _prefixUp]
  -[NSHTMLWriter _prefixDown]
  -[NSHTMLWriter _listClassForList:]
  -[NSHTMLWriter _isStrictByParsingExcludedElements]
  -[NSHTMLWriter _spanClassForAttributes:inParagraphClass:spanClass:flags:]
  -[NSHTMLWriter _closeFlags:openFlags:inString:]
  -[NSHTMLWriter _paragraphClassforParagraphStyle:range:isEmpty:isCompletelyEmpty:headerString:alignmentString:directionString:]
  -[NSHTMLWriter _openBlocksForParagraphStyle:atIndex:inString:]
  -[NSHTMLWriter _openListsForParagraphStyle:atIndex:inString:isStrict:]
  -[NSHTMLWriter _appendAttachment:atIndex:toString:]
  -[NSHTMLWriter _closeListsForParagraphStyle:atIndex:inString:]
  -[NSHTMLWriter _closeBlocksForParagraphStyle:atIndex:inString:]
  -[NSHTMLWriter _writeDocumentPropertiesToString:]
  -[NSHTMLWriter _prepareString:forConversionToEncoding:]
  -[NSHTMLWriter _generateHTML]
  -[NSHTMLWriter webArchive]
  -[NSHTMLWriter _createWebArchiveData]
  -[NSHTMLWriter readDocumentFragment:]


NSRTFWriter : NSObject
  // class methods
  +[NSRTFWriter initialize]
  +[NSRTFWriter RTFDataForString:range:encoding:]
  +[NSRTFWriter RTFDataForDate:]

  // instance methods
  -[NSRTFWriter dealloc]
  -[NSRTFWriter initWithAttributedString:]
  -[NSRTFWriter setDocumentAttributes:]
  -[NSRTFWriter _setTextScalingConversionSource:]
  -[NSRTFWriter _setTextScalingConversionTarget:]
  -[NSRTFWriter RTF]
  -[NSRTFWriter RTFD]
  -[NSRTFWriter RTFDFileWrapper]
  -[NSRTFWriter documentAttributes]
  -[NSRTFWriter _setRTFDFileWrapper:]
  -[NSRTFWriter _RTFDFileWrapper]
  -[NSRTFWriter documentAttribute:]
  -[NSRTFWriter collectResources]
  -[NSRTFWriter writeHeader]
  -[NSRTFWriter writeBody]
  -[NSRTFWriter writeRTF]
  -[NSRTFWriter _plainFontNameForFont:]
  -[NSRTFWriter writeEscapedUTF8String:]
  -[NSRTFWriter _mostCompatibleCharset:]
  -[NSRTFWriter _writeCharacters:range:]
  -[NSRTFWriter writeDate:]
  -[NSRTFWriter writeStringDocumentAttribute:withRTFKeyword:]
  -[NSRTFWriter writeDateDocumentAttribute:withRTFKeyword:]
  -[NSRTFWriter writeKeywordsDocumentAttribute]
  -[NSRTFWriter _writeVersionsAndEncodings]
  -[NSRTFWriter _writeTextScalingAndRenderingHint]
  -[NSRTFWriter writeFontTable]
  -[NSRTFWriter writeColorTable]
  -[NSRTFWriter writeStyleSheetTable]
  -[NSRTFWriter writeListTable]
  -[NSRTFWriter writeInfo]
  -[NSRTFWriter writePaperSize]
  -[NSRTFWriter writeHyphenation]
  -[NSRTFWriter writeDefaultTabInterval]
  -[NSRTFWriter writeBackgroundColor]
  -[NSRTFWriter writeColor:type:]
  -[NSRTFWriter writeFont:forceFontNumber:]
  -[NSRTFWriter writeKern:]
  -[NSRTFWriter writeBaselineOffset:]
  -[NSRTFWriter writeSuperscript:]
  -[NSRTFWriter writeUnderlineStyle:allowStrikethrough:]
  -[NSRTFWriter writeStrikethroughStyle:]
  -[NSRTFWriter writeLigature:]
  -[NSRTFWriter writeCharacterShape:]
  -[NSRTFWriter writeStrokeWidth:]
  -[NSRTFWriter writeObliqueness:]
  -[NSRTFWriter writeExpansion:]
  -[NSRTFWriter writeShadow:]
  -[NSRTFWriter _attachmentData]
  -[NSRTFWriter writeTableHeader:atIndex:nestingLevel:]
  -[NSRTFWriter writeParagraphStyle:]
  -[NSRTFWriter writeLinkInfo:]
  -[NSRTFWriter writeCharacterAttributes:previousAttributes:]
  -[NSRTFWriter textFlowWithAttributes:range:]
  -[NSRTFWriter writeTextFlow:]
  -[NSRTFWriter writeGlyphInfo:]
  -[NSRTFWriter writeCellTerminator:atIndex:nestingLevel:]
  -[NSRTFWriter restoreAttributes:]
  -[NSRTFWriter writeAttachment:editableData:editableTypeIdentifier:]
  -[NSRTFWriter _setPreserveNaturalAlignment:]


__NSTextAppearanceEffectContext : NSObject
  // instance methods
  -[__NSTextAppearanceEffectContext dealloc]
  -[__NSTextAppearanceEffectContext initWithTextEffectName:catalog:styleEffectConfiguration:font:color:applicationFrameworkContext:useSimplifiedEffect:]
  -[__NSTextAppearanceEffectContext drawGlyphs:positions:count:context:]


NSTextSelection : NSObject <NSSecureCoding>
 @property  NSArray *textRanges
 @property  long long granularity
 @property  long long affinity
 @property  BOOL transient
 @property  double anchorPoint
 @property  BOOL logical
 @property  <NSTextLocation> *secondarySelectionLocation
 @property  NSDictionary *typingAttributes

  // class methods
  +[NSTextSelection supportsSecureCoding]

  // instance methods
  -[NSTextSelection dealloc]
  -[NSTextSelection encodeWithCoder:]
  -[NSTextSelection initWithCoder:]
  -[NSTextSelection typingAttributes]
  -[NSTextSelection initWithRanges:affinity:granularity:]
  -[NSTextSelection initWithRange:affinity:granularity:]
  -[NSTextSelection initWithLocation:affinity:]
  -[NSTextSelection textRanges]
  -[NSTextSelection granularity]
  -[NSTextSelection affinity]
  -[NSTextSelection isTransient]
  -[NSTextSelection anchorPoint]
  -[NSTextSelection setAnchorPoint:]
  -[NSTextSelection isLogical]
  -[NSTextSelection setLogical:]
  -[NSTextSelection secondarySelectionLocation]
  -[NSTextSelection setSecondarySelectionLocation:]
  -[NSTextSelection setTypingAttributes:]


_UICache : NSObject
 @property  BOOL clearsCacheOnLowMemoryWarnings
 @property  BOOL clearsCacheOnApplicationBackground

  // instance methods
  -[_UICache init]
  -[_UICache dealloc]
  -[_UICache removeAllObjects]
  -[_UICache objectForKey:]
  -[_UICache removeObjectForKey:]
  -[_UICache setObject:forKey:]
  -[_UICache setClearsCacheOnLowMemoryWarnings:]
  -[_UICache setClearsCacheOnApplicationBackground:]
  -[_UICache clearsCacheOnLowMemoryWarnings]
  -[_UICache clearsCacheOnApplicationBackground]
  -[_UICache cacheKeys]


NSAttributedString(NSAttributedStringUIFoundationAdditions)
	// class methods
	+[NSAttributedString(NSAttributedStringUIFoundationAdditions) _documentTypeForFileType:]
	+[NSAttributedString(NSAttributedStringUIFoundationAdditions) _isAttributedStringAgent]
	+[NSAttributedString(NSAttributedStringUIFoundationAdditions) allowedSecureCodingClasses]
	+[NSAttributedString(NSAttributedStringUIFoundationAdditions) attributedStringWithAttachment:]

	// instance methods
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) size]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) dataFromRange:documentAttributes:error:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithData:options:documentAttributes:error:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) fontAttributesInRange:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) rangeOfTextTable:atIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) rangeOfTextBlock:atIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _rangeOfTextTableRow:atIndex:completeRow:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _rangeOfTextTableRow:atIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) nextWordFromIndex:forward:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) drawInRect:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _isStringDrawingTextStorage]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _lineBreakBeforeIndex:withinRange:usesAlternativeBreaker:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) lineBreakByHyphenatingBeforeIndex:withinRange:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) doubleClickAtIndex:inRange:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) containsAttachmentsInRange:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) stringByStrippingAttachmentCharactersAndConvertingWritingDirectionToBidiControlCharactersFromRange:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) fileWrapperFromRange:documentAttributes:error:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _initWithRTFSelector:argument:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithURL:options:documentAttributes:error:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithHTML:options:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) defaultLanguage]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) doubleClickAtIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) lineBreakBeforeIndex:withinRange:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) containsAttachments]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) RTFFromRange:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) RTFDFromRange:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) RTFDFileWrapperFromRange:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) docFormatFromRange:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _htmlDocumentFragmentString:documentAttributes:subresources:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _documentFromRange:document:documentAttributes:subresources:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithRTF:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithRTFD:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithRTFDFileWrapper:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithDocFormat:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithFileURL:options:documentAttributes:error:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _initWithURLFunnel:options:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithURL:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithPath:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithHTML:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) initWithHTML:baseURL:documentAttributes:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) rulerAttributesInRange:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _atStartOfTextTable:atIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _atEndOfTextTable:atIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _atStartOfTextTableRow:atIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _atEndOfTextTableRow:atIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) rangeOfTextList:atIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) itemNumberInTextList:atIndex:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) boundingRectWithSize:options:context:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) drawAtPoint:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) hasColorGlyphsInRange:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _ui_attributedSubstringFromRange:withTrackingAdjustment:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) _ui_attributedSubstringFromRange:scaledByScaleFactor:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) drawWithRect:options:context:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) drawWithRect:options:]
	-[NSAttributedString(NSAttributedStringUIFoundationAdditions) boundingRectWithSize:options:]

NSMutableAttributedString(NSMutableAttributedStringKitAdditions)
	// instance methods
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) fixAttributesInRange:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) convertBidiControlCharactersToWritingDirection]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) _attributeFixingInProgress]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) _setAttributeFixingInProgress:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) fixGlyphInfoAttributeInRange:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) fixFontAttributeInRange:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) fixParagraphStyleAttributeInRange:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) fixAttachmentAttributeInRange:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) _shouldSetOriginalFontAttribute]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) _fixGlyphInfo:inRange:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) _changeIntAttribute:by:range:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) readFromURL:options:documentAttributes:error:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) readFromData:options:documentAttributes:error:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) setBaseWritingDirection:range:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) convertBidiControlCharactersToWritingDirectionForParagraphAtIndex:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) convertWritingDirectionToBidiControlCharactersForParagraphAtIndex:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) setAlignment:range:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) superscriptRange:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) subscriptRange:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) unscriptRange:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) readFromFileURL:options:documentAttributes:error:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) readFromURL:options:documentAttributes:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) readFromData:options:documentAttributes:]
	-[NSMutableAttributedString(NSMutableAttributedStringKitAdditions) convertWritingDirectionToBidiControlCharacters]

NSString(NSStringDrawing)
	// class methods
	+[NSString(NSStringDrawing) setUsesFontLeading:]
	+[NSString(NSStringDrawing) usesFontLeading]
	+[NSString(NSStringDrawing) defaultLineHeightForFont:]
	+[NSString(NSStringDrawing) defaultBaselineOffsetForFont:]
	+[NSString(NSStringDrawing) typesetterBehavior]
	+[NSString(NSStringDrawing) hyphenationFactor]
	+[NSString(NSStringDrawing) setHyphenationFactor:]
	+[NSString(NSStringDrawing) setTypesetterBehavior:]
	+[NSString(NSStringDrawing) usesScreenFonts]
	+[NSString(NSStringDrawing) setUsesScreenFonts:]
	+[NSString(NSStringDrawing) setShowsInvisibleCharacters:]
	+[NSString(NSStringDrawing) showsInvisibleCharacters]
	+[NSString(NSStringDrawing) setShowsControlCharacters:]
	+[NSString(NSStringDrawing) showsControlCharacters]

	// instance methods
	-[NSString(NSStringDrawing) boundingRectWithSize:options:attributes:context:]
	-[NSString(NSStringDrawing) drawAtPoint:withAttributes:]
	-[NSString(NSStringDrawing) drawInRect:withAttributes:]
	-[NSString(NSStringDrawing) sizeWithAttributes:]
	-[NSString(NSStringDrawing) _sizeWithSize:attributes:]
	-[NSString(NSStringDrawing) drawWithRect:options:attributes:context:]
	-[NSString(NSStringDrawing) drawWithRect:options:attributes:]
	-[NSString(NSStringDrawing) boundingRectWithSize:options:attributes:]
	-[NSString(NSStringDrawing) hasColorGlyphsInRange:attributes:]
	-[NSString(NSStringDrawing) stringByStrippingLeadingAndTrailingWhitespaceAndQuotes]

01 00 0300 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0900 /System/Library/Frameworks/CoreText.framework/CoreText: CTGlyphStorageInterface 
01 00 0200 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUIBackgroundStyleEffectConfiguration 
01 00 0200 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUICatalog 
01 00 0200 /System/Library/PrivateFrameworks/CoreUI.framework/CoreUI: CUIStyleEffectConfiguration 
01 00 0400 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSDocumentProxy 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAttributedString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSAutoreleasePool 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBigMutableString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCalendar 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSConcreteMutableAttributedString 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDateComponents 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileWrapper 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSLocale 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableAttributedString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableCharacterSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableRLEArray 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0d00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerFunctions 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSRecursiveLock 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimeZone 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0c00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 0a00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
