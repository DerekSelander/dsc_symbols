|| __DATA.__objc_data _OBJC_CLASS_$_DACameraSensorAnomalyTargetView
|| __DATA.__objc_data _OBJC_CLASS_$_DACameraSensorAnomalyTest
|| __DATA.__objc_data _OBJC_CLASS_$_DACameraSensorAnomalyTestImageView
|| __DATA.__objc_data _OBJC_CLASS_$_DACameraSensorAnomalyTestViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DAShapeView
|| __DATA.__objc_data _OBJC_CLASS_$_DATestAutomation
|| __DATA.__objc_data _OBJC_CLASS_$_DATestViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DATestViewOperation
|| __DATA.__objc_data _OBJC_CLASS_$_DKAnalytics
|| __DATA.__objc_data _OBJC_CLASS_$_DKCanonicalVersion
|| __DATA.__objc_data _OBJC_CLASS_$_DKComponent
|| __DATA.__objc_data _OBJC_CLASS_$_DKComponentIdentity
|| __DATA.__objc_data _OBJC_CLASS_$_DKComponentPredicate
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticContext
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticContextMock
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticController
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticControllerMock
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticManager
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticParameters
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticRegistry
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticResult
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticViewController
|| __DATA.__objc_data _OBJC_CLASS_$_DKDiagnosticViewControllerMock
|| __DATA.__objc_data _OBJC_CLASS_$_DKDrawableView
|| __DATA.__objc_data _OBJC_CLASS_$_DKExtensionAdapter
|| __DATA.__objc_data _OBJC_CLASS_$_DKExtensionDiscovery
|| __DATA.__objc_data _OBJC_CLASS_$_DKExtensionRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DKMutableDiagnosticResult
|| __DATA.__objc_data _OBJC_CLASS_$_DKReport
|| __DATA.__objc_data _OBJC_CLASS_$_DKReportHostContext
|| __DATA.__objc_data _OBJC_CLASS_$_DKReportManager
|| __DATA.__objc_data _OBJC_CLASS_$_DKReportPlanner
|| __DATA.__objc_data _OBJC_CLASS_$_DKReporterAttributes
|| __DATA.__objc_data _OBJC_CLASS_$_DKReporterContext
|| __DATA.__objc_data _OBJC_CLASS_$_DKReporterController
|| __DATA.__objc_data _OBJC_CLASS_$_DKReporterRegistry
|| __DATA.__objc_data _OBJC_CLASS_$_DKReportingConcurrentRequest
|| __DATA.__objc_data _OBJC_CLASS_$_DKReportingConcurrentRequestGroup
|| __DATA.__objc_data _OBJC_CLASS_$_DKRequestContext
|| __DATA.__objc_data _OBJC_CLASS_$_DKUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_DACameraSensorAnomalyTargetView
|| __DATA.__objc_data _OBJC_METACLASS_$_DACameraSensorAnomalyTest
|| __DATA.__objc_data _OBJC_METACLASS_$_DACameraSensorAnomalyTestImageView
|| __DATA.__objc_data _OBJC_METACLASS_$_DACameraSensorAnomalyTestViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DAShapeView
|| __DATA.__objc_data _OBJC_METACLASS_$_DATestAutomation
|| __DATA.__objc_data _OBJC_METACLASS_$_DATestViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DATestViewOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_DKAnalytics
|| __DATA.__objc_data _OBJC_METACLASS_$_DKCanonicalVersion
|| __DATA.__objc_data _OBJC_METACLASS_$_DKComponent
|| __DATA.__objc_data _OBJC_METACLASS_$_DKComponentIdentity
|| __DATA.__objc_data _OBJC_METACLASS_$_DKComponentPredicate
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticContext
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticContextMock
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticControllerMock
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticParameters
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticRegistry
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticResult
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticViewController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDiagnosticViewControllerMock
|| __DATA.__objc_data _OBJC_METACLASS_$_DKDrawableView
|| __DATA.__objc_data _OBJC_METACLASS_$_DKExtensionAdapter
|| __DATA.__objc_data _OBJC_METACLASS_$_DKExtensionDiscovery
|| __DATA.__objc_data _OBJC_METACLASS_$_DKExtensionRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DKMutableDiagnosticResult
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReport
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReportHostContext
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReportManager
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReportPlanner
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReporterAttributes
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReporterContext
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReporterController
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReporterRegistry
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReportingConcurrentRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_DKReportingConcurrentRequestGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_DKRequestContext
|| __DATA.__objc_data _OBJC_METACLASS_$_DKUtilities
|| __DATA_CONST.__const _DAIdentifierFront
|| __DATA_CONST.__const _DAIdentifierRear
|| __DATA_CONST.__const _DAIdentifierRearSynced
|| __DATA_CONST.__const _DAIdentifierRearTelephoto
|| __DATA_CONST.__const _DATypeCamera
|| __DATA_CONST.__const _DKErrorDomain
|| __DATA_CONST.__const _DSHexErrorDomain
|| __DATA_CONST.__const _kDKBundleIdentifierKey
|| __DATA_CONST.__const _kDKComponentAttributesKey
|| __DATA_CONST.__const _kDKComponentIdentityKey
|| __DATA_CONST.__const _kDKDefaultBundleIdentifier
|| __DATA_CONST.__const _kDKDiagnosticAttributeFreeSpaceRequiredKey
|| __DATA_CONST.__const _kDKDiagnosticAttributeIdentifierKey
|| __DATA_CONST.__const _kDKDiagnosticAttributeNameKey
|| __DATA_CONST.__const _kDKDiagnosticAttributeRequiresUnlockKey
|| __DATA_CONST.__const _kDKDiagnosticParametersKey
|| __DATA_CONST.__const _kDKDiagnosticParametersParametersKey
|| __DATA_CONST.__const _kDKDiagnosticParametersPredicatesKey
|| __DATA_CONST.__const _kDKDiagnosticParametersSpecificationsKey
|| __DATA_CONST.__const _kDKDiagnosticPredicatesKey
|| __DATA_CONST.__const _kDKDiagnosticSpecificationsKey
|| __DATA_CONST.__const _kDKDiagnosticsRestrictedService
|| __DATA_CONST.__const _kDKDiagnosticsRestrictedUIService
|| __DATA_CONST.__const _kDKDiagnosticsService
|| __DATA_CONST.__const _kDKDiagnosticsUIService
|| __DATA_CONST.__const _kDKReportComponentsKey
|| __DATA_CONST.__const _kDKReporterAttributeManifestKey
|| __DATA_CONST.__const _kDKReporterAttributeManifestResourcesKey
|| __DATA_CONST.__const _kDKReporterAttributeManifestVersionKey
|| __DATA_CONST.__const _kDKReporterAttributeNameKey
|| __DATA_CONST.__const _kDKReportersService
|| __TEXT.__const _DiagnosticsKitVersionNumber
|| __TEXT.__const _DiagnosticsKitVersionString
|| __TEXT.__text _DKErrorLocalizedDescriptionForCode
|| __TEXT.__text _DKTemporaryDirectoryURL
|| __TEXT.__text _DiagnosticsKitLogHandleForCategory
__ AVFoundation: _AVCaptureDeviceTypeBuiltInDualCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInTelephotoCamera
__ AVFoundation: _AVCaptureDeviceTypeBuiltInWideAngleCamera
__ AVFoundation: _AVCaptureSessionDidStartRunningNotification
__ AVFoundation: _AVCaptureSessionPresetPhoto
__ AVFoundation: _AVLayerVideoGravityResizeAspectFill
__ AVFoundation: _AVMediaTypeVideo
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceDiscoverySession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureDeviceInput
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoOutput
__ AVFoundation: _OBJC_CLASS_$_AVCapturePhotoSettings
__ AVFoundation: _OBJC_CLASS_$_AVCaptureSession
__ AVFoundation: _OBJC_CLASS_$_AVCaptureVideoPreviewLayer
__ CallKit: _OBJC_CLASS_$_CXCallObserver
__ CameraUI: _OBJC_CLASS_$_CUShutterButton
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreBrightness: _OBJC_CLASS_$_CBClient
__ CoreFoundation: _CFPreferencesAppSynchronize
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSTimer
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__
__ CoreFoundation: ___NSDictionary0__
__ CoreFoundation: __kCFBundleShortVersionStringKey
__ CoreGraphics: _CGRectContainsPoint
__ CoreGraphics: _CGRectGetMidX
__ CoreGraphics: _CGRectGetMidY
__ CoreGraphics: _CGRectZero
__ Foundation: _NSClassFromString
__ Foundation: _NSExtensionPointName
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSStringFromClass
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCondition
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExtension
__ Foundation: _OBJC_CLASS_$_NSExtensionContext
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSLayoutConstraint
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSScanner
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSExtensionContext
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ QuartzCore: _CATransform3DMakeScale
__ QuartzCore: _OBJC_CLASS_$_CAAnimationGroup
__ QuartzCore: _OBJC_CLASS_$_CABasicAnimation
__ QuartzCore: _OBJC_CLASS_$_CAGradientLayer
__ QuartzCore: _OBJC_CLASS_$_CAMediaTimingFunction
__ QuartzCore: _OBJC_CLASS_$_CAShapeLayer
__ QuartzCore: _OBJC_CLASS_$_CATransaction
__ QuartzCore: _kCAFillModeBackwards
__ QuartzCore: _kCAGradientLayerRadial
__ QuartzCore: _kCALineCapRound
__ QuartzCore: _kCALineJoinRound
__ UIKit: _OBJC_CLASS_$_UIAlertAction
__ UIKit: _OBJC_CLASS_$_UIAlertController
__ UIKit: _OBJC_CLASS_$_UIBezierPath
__ UIKit: _OBJC_CLASS_$_UIButton
__ UIKit: _OBJC_CLASS_$_UIColor
__ UIKit: _OBJC_CLASS_$_UIFont
__ UIKit: _OBJC_CLASS_$_UIFontDescriptor
__ UIKit: _OBJC_CLASS_$_UIImage
__ UIKit: _OBJC_CLASS_$_UIImageView
__ UIKit: _OBJC_CLASS_$_UILabel
__ UIKit: _OBJC_CLASS_$_UIPanGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIScreen
__ UIKit: _OBJC_CLASS_$_UIScrollView
__ UIKit: _OBJC_CLASS_$_UITapGestureRecognizer
__ UIKit: _OBJC_CLASS_$_UIView
__ UIKit: _OBJC_CLASS_$_UIViewController
__ UIKit: _OBJC_CLASS_$__UILegibilityLabel
__ UIKit: _OBJC_CLASS_$__UILegibilitySettings
__ UIKit: _OBJC_METACLASS_$_UIImageView
__ UIKit: _OBJC_METACLASS_$_UIView
__ UIKit: _OBJC_METACLASS_$_UIViewController
__ UIKit: _UIAccessibilityPostNotification
__ UIKit: _UIFontTextStyleBody
__ UIKit: _UIScrollViewDecelerationRateFast
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libMobileGestalt.dylib: _MGGetBoolAnswer
__ libMobileGestalt.dylib: _kMGQDiskUsageAmountDataAvailable
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_disabled
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort_report_np
__ libSystem.B.dylib: _container_system_group_path_for_identifier
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlopen
__ libSystem.B.dylib: _hypot
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _xpc_transaction_exit_clean
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
DKComponentPredicate : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *type
 @property  NSString *identifier
 @property  NSString *domain
 @property  BOOL exactMatch

  // class methods
  +[DKComponentPredicate componentPredicateWithDomain:exactMatch:]
  +[DKComponentPredicate componentPredicateWithType:identifier:]
  +[DKComponentPredicate componentPredicateMatchingComponentIdentity:]

  // instance methods
  -[DKComponentPredicate isEqual:]
  -[DKComponentPredicate domain]
  -[DKComponentPredicate type]
  -[DKComponentPredicate .cxx_destruct]
  -[DKComponentPredicate identifier]
  -[DKComponentPredicate initWithType:identifier:]
  -[DKComponentPredicate exactMatch]
  -[DKComponentPredicate initWithDomain:exactMatch:]
  -[DKComponentPredicate isEqualToComponentPredicate:]
  -[DKComponentPredicate matchesComponentIdentity:]


DKDiagnosticViewControllerMock : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <DKDiagnostic_Internal, CAAnimationDelegate, DKDiagnosticMock>
 @property  DKDiagnosticContextMock *context
 @property  NSLock *finishedLock
 @property  @? completion
 @property  Class inputsClass
 @property  BOOL shouldShowPressHomeLabel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  DKMutableDiagnosticResult *result
 @property  BOOL finished
 @property  BOOL cancelled
 @property  BOOL setup

  // instance methods
  -[DKDiagnosticViewControllerMock init]
  -[DKDiagnosticViewControllerMock .cxx_destruct]
  -[DKDiagnosticViewControllerMock cancel]
  -[DKDiagnosticViewControllerMock start]
  -[DKDiagnosticViewControllerMock isCancelled]
  -[DKDiagnosticViewControllerMock setFinished:]
  -[DKDiagnosticViewControllerMock isFinished]
  -[DKDiagnosticViewControllerMock result]
  -[DKDiagnosticViewControllerMock context]
  -[DKDiagnosticViewControllerMock setResult:]
  -[DKDiagnosticViewControllerMock setContext:]
  -[DKDiagnosticViewControllerMock setCompletion:]
  -[DKDiagnosticViewControllerMock completion]
  -[DKDiagnosticViewControllerMock setCancelled:]
  -[DKDiagnosticViewControllerMock isSetup]
  -[DKDiagnosticViewControllerMock setSetup:]
  -[DKDiagnosticViewControllerMock setInputsClass:]
  -[DKDiagnosticViewControllerMock finishedLock]
  -[DKDiagnosticViewControllerMock beginRequestWithInputsClass:predicates:specifications:parameters:completion:]
  -[DKDiagnosticViewControllerMock shouldShowPressHomeLabel]
  -[DKDiagnosticViewControllerMock setShouldShowPressHomeLabel:]
  -[DKDiagnosticViewControllerMock setFinishedLock:]
  -[DKDiagnosticViewControllerMock inputsClass]


DKComponentIdentity : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSString *type
 @property  NSString *identifier
 @property  NSString *domain
 @property  DKCanonicalVersion *version
 @property  NSSet *resources

  // class methods
  +[DKComponentIdentity supportsSecureCoding]
  +[DKComponentIdentity componentIdentityWithDomain:version:resources:]
  +[DKComponentIdentity componentIdentityWithType:identifier:version:resources:]

  // instance methods
  -[DKComponentIdentity isEqual:]
  -[DKComponentIdentity copyWithZone:]
  -[DKComponentIdentity domain]
  -[DKComponentIdentity type]
  -[DKComponentIdentity encodeWithCoder:]
  -[DKComponentIdentity initWithCoder:]
  -[DKComponentIdentity .cxx_destruct]
  -[DKComponentIdentity identifier]
  -[DKComponentIdentity version]
  -[DKComponentIdentity resources]
  -[DKComponentIdentity isNewerThan:]
  -[DKComponentIdentity initWithDomain:version:resources:]
  -[DKComponentIdentity initWithType:identifier:version:resources:]
  -[DKComponentIdentity isEqualToComponentIdentity:]


DKDiagnosticResult : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSMutableCopying, NSSecureCoding>
 @property  NSNumber *statusCode
 @property  NSDictionary *data
 @property  NSArray *files

  // class methods
  +[DKDiagnosticResult supportsSecureCoding]

  // instance methods
  -[DKDiagnosticResult init]
  -[DKDiagnosticResult copyWithZone:]
  -[DKDiagnosticResult mutableCopyWithZone:]
  -[DKDiagnosticResult encodeWithCoder:]
  -[DKDiagnosticResult initWithCoder:]
  -[DKDiagnosticResult .cxx_destruct]
  -[DKDiagnosticResult data]
  -[DKDiagnosticResult statusCode]
  -[DKDiagnosticResult files]
  -[DKDiagnosticResult initWithMutableResult:]


DATestViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <CXCallObserverDelegate>
 @property  NSMutableArray *allResults
 @property  NSDictionary *dataObject
 @property  BOOL fullScreen
 @property  UITapGestureRecognizer *homeButtonRecognizer
 @property  CXCallObserver *callObserver
 @property  DATestViewOperation *currentTest
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DATestViewController init]
  -[DATestViewController .cxx_destruct]
  -[DATestViewController viewDidLoad]
  -[DATestViewController prefersStatusBarHidden]
  -[DATestViewController currentTest]
  -[DATestViewController callObserver:callChanged:]
  -[DATestViewController setFullScreen:]
  -[DATestViewController initWithTest:]
  -[DATestViewController setCurrentTest:]
  -[DATestViewController isFullScreen]
  -[DATestViewController callObserver]
  -[DATestViewController setCallObserver:]
  -[DATestViewController dataObject]
  -[DATestViewController setDataObject:]
  -[DATestViewController initWithTest:fullScreen:]
  -[DATestViewController monitorIncomingCall]
  -[DATestViewController cancelTest]
  -[DATestViewController allResults]
  -[DATestViewController setAllResults:]
  -[DATestViewController homeButtonRecognizer]
  -[DATestViewController setHomeButtonRecognizer:]


DKReport : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *components

  // class methods
  +[DKReport supportsSecureCoding]
  +[DKReport reportWithComponents:]

  // instance methods
  -[DKReport copyWithZone:]
  -[DKReport isEmpty]
  -[DKReport encodeWithCoder:]
  -[DKReport initWithCoder:]
  -[DKReport .cxx_destruct]
  -[DKReport components]
  -[DKReport initWithComponents:]
  -[DKReport arrayForJSON]
  -[DKReport reportByMergingReport:]


DKReporterRegistry : NSObject /usr/lib/libSystem.B.dylib <DKExtensionRegistry>
 @property  NSMutableDictionary *generatorLookup
 @property  NSMutableDictionary *componentDedup
 @property  NSSet *components
 @property  NSSet *generators
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class extensionClass
 @property  Class responseObjectClass

  // instance methods
  -[DKReporterRegistry init]
  -[DKReporterRegistry .cxx_destruct]
  -[DKReporterRegistry components]
  -[DKReporterRegistry generators]
  -[DKReporterRegistry generatorLookup]
  -[DKReporterRegistry componentDedup]
  -[DKReporterRegistry addExtensionAdapter:]
  -[DKReporterRegistry enumerateExtensionAdaptersWithBlock:]
  -[DKReporterRegistry extensionClass]
  -[DKReporterRegistry responseObjectClass]
  -[DKReporterRegistry generatorForComponentIdentity:]
  -[DKReporterRegistry setGeneratorLookup:]
  -[DKReporterRegistry setComponentDedup:]


DKReportHostContext : NSExtensionContext /usr/lib/libobjc.A.dylib <DKReportHostRemoteContext, DKExtensionHostAdapter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DKExtensionHostAdapterDelegate> *delegate

  // class methods
  +[DKReportHostContext _extensionAuxiliaryHostProtocol]
  +[DKReportHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[DKReportHostContext delegate]
  -[DKReportHostContext setDelegate:]
  -[DKReportHostContext .cxx_destruct]
  -[DKReportHostContext cancelWithCompletion:]
  -[DKReportHostContext completeRemoteWithReport:completion:]
  -[DKReportHostContext startWithPayload:completion:]


DACameraSensorAnomalyTestImageView : UIImageView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  DKDrawableView *drawableView

  // instance methods
  -[DACameraSensorAnomalyTestImageView .cxx_destruct]
  -[DACameraSensorAnomalyTestImageView drawableView]
  -[DACameraSensorAnomalyTestImageView setDrawableView:]


DACameraSensorAnomalyTestViewController : DATestViewController <UINavigationControllerDelegate, AVCapturePhotoCaptureDelegate, UIScrollViewDelegate, UIGestureRecognizerDelegate, DACameraSensorAnomalyTargetViewDelegate>
 @property  NSString *identifier
 @property  UIColor *drawColor
 @property  float minimumSquareLength
 @property  BOOL enableMaxBrightness
 @property  BOOL flashModeOn
 @property  NSString *viewfinderInstruction
 @property  BOOL disableAmbientLightAdaptation
 @property  float originalScreenBrightness
 @property  BOOL drawingMode
 @property  long long currentTag
 @property  {CGRect={CGPoint=dd}{CGSize=dd}} rectangle
 @property  {CGPoint=dd} originPoint
 @property  UIView *previewView
 @property  AVCaptureSession *session
 @property  AVCapturePhotoOutput *output
 @property  DACameraSensorAnomalyTargetView *overlayView
 @property  UIScrollView *imageScrollView
 @property  UIView *bottomBar
 @property  UIButton *retakeButton
 @property  UIButton *usePhotoButton
 @property  UIButton *continueButton
 @property  DACameraSensorAnomalyTestImageView *currentImageView
 @property  NSMutableArray *allResults
 @property  UIPanGestureRecognizer *panGesture
 @property  UITapGestureRecognizer *tapGesture
 @property  CBClient *client
 @property  CBBlueLightClient *blueLightClient
 @property  CBAdaptationClient *adaptationClient
 @property  BOOL blueLightStatusActive
 @property  BOOL colorAdaptationStatus
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DACameraSensorAnomalyTestViewController .cxx_destruct]
  -[DACameraSensorAnomalyTestViewController identifier]
  -[DACameraSensorAnomalyTestViewController setIdentifier:]
  -[DACameraSensorAnomalyTestViewController client]
  -[DACameraSensorAnomalyTestViewController setClient:]
  -[DACameraSensorAnomalyTestViewController session]
  -[DACameraSensorAnomalyTestViewController setSession:]
  -[DACameraSensorAnomalyTestViewController scrollViewDidZoom:]
  -[DACameraSensorAnomalyTestViewController viewForZoomingInScrollView:]
  -[DACameraSensorAnomalyTestViewController viewDidLoad]
  -[DACameraSensorAnomalyTestViewController supportedInterfaceOrientations]
  -[DACameraSensorAnomalyTestViewController shouldAutorotate]
  -[DACameraSensorAnomalyTestViewController setContinueButton:]
  -[DACameraSensorAnomalyTestViewController continueButton]
  -[DACameraSensorAnomalyTestViewController setOverlayView:]
  -[DACameraSensorAnomalyTestViewController preferredInterfaceOrientationForPresentation]
  -[DACameraSensorAnomalyTestViewController takePicture]
  -[DACameraSensorAnomalyTestViewController prefersStatusBarHidden]
  -[DACameraSensorAnomalyTestViewController updateViewConstraints]
  -[DACameraSensorAnomalyTestViewController setPanGesture:]
  -[DACameraSensorAnomalyTestViewController panGesture]
  -[DACameraSensorAnomalyTestViewController cleanUp]
  -[DACameraSensorAnomalyTestViewController overlayView]
  -[DACameraSensorAnomalyTestViewController originPoint]
  -[DACameraSensorAnomalyTestViewController setOriginPoint:]
  -[DACameraSensorAnomalyTestViewController captureOutput:didFinishProcessingPhoto:error:]
  -[DACameraSensorAnomalyTestViewController output]
  -[DACameraSensorAnomalyTestViewController adaptationClient]
  -[DACameraSensorAnomalyTestViewController blueLightClient]
  -[DACameraSensorAnomalyTestViewController previewView]
  -[DACameraSensorAnomalyTestViewController setPreviewView:]
  -[DACameraSensorAnomalyTestViewController setRectangle:]
  -[DACameraSensorAnomalyTestViewController rectangle]
  -[DACameraSensorAnomalyTestViewController setOutput:]
  -[DACameraSensorAnomalyTestViewController imageScrollView]
  -[DACameraSensorAnomalyTestViewController setCurrentTag:]
  -[DACameraSensorAnomalyTestViewController currentTag]
  -[DACameraSensorAnomalyTestViewController setBottomBar:]
  -[DACameraSensorAnomalyTestViewController bottomBar]
  -[DACameraSensorAnomalyTestViewController resetBrightness]
  -[DACameraSensorAnomalyTestViewController tapGesture]
  -[DACameraSensorAnomalyTestViewController setTapGesture:]
  -[DACameraSensorAnomalyTestViewController currentImageView]
  -[DACameraSensorAnomalyTestViewController retakeButton]
  -[DACameraSensorAnomalyTestViewController drawingMode]
  -[DACameraSensorAnomalyTestViewController cancelTapped]
  -[DACameraSensorAnomalyTestViewController initWithTest:fullScreen:]
  -[DACameraSensorAnomalyTestViewController cancelTest]
  -[DACameraSensorAnomalyTestViewController allResults]
  -[DACameraSensorAnomalyTestViewController setAllResults:]
  -[DACameraSensorAnomalyTestViewController validateAndApplyPredicates:]
  -[DACameraSensorAnomalyTestViewController endTestWithStatusCode:]
  -[DACameraSensorAnomalyTestViewController validateAndApplyParameters:]
  -[DACameraSensorAnomalyTestViewController minimumSquareLength]
  -[DACameraSensorAnomalyTestViewController enableMaxBrightness]
  -[DACameraSensorAnomalyTestViewController flashModeOn]
  -[DACameraSensorAnomalyTestViewController viewfinderInstruction]
  -[DACameraSensorAnomalyTestViewController drawColor]
  -[DACameraSensorAnomalyTestViewController disableAmbientLightAdaptation]
  -[DACameraSensorAnomalyTestViewController setDrawColor:]
  -[DACameraSensorAnomalyTestViewController setMinimumSquareLength:]
  -[DACameraSensorAnomalyTestViewController setEnableMaxBrightness:]
  -[DACameraSensorAnomalyTestViewController setFlashModeOn:]
  -[DACameraSensorAnomalyTestViewController setViewfinderInstruction:]
  -[DACameraSensorAnomalyTestViewController setDisableAmbientLightAdaptation:]
  -[DACameraSensorAnomalyTestViewController saveAndMaximizeBrightness]
  -[DACameraSensorAnomalyTestViewController saveColorAdjustmentStates]
  -[DACameraSensorAnomalyTestViewController disableAdaptationAndBlueLightReduction]
  -[DACameraSensorAnomalyTestViewController setupCamera]
  -[DACameraSensorAnomalyTestViewController resetColorAdjustmentStates]
  -[DACameraSensorAnomalyTestViewController findDevice:]
  -[DACameraSensorAnomalyTestViewController setupSessionForDevice:]
  -[DACameraSensorAnomalyTestViewController setupCameraPreview]
  -[DACameraSensorAnomalyTestViewController showCameraView]
  -[DACameraSensorAnomalyTestViewController panOccurred:]
  -[DACameraSensorAnomalyTestViewController tapOccurred:]
  -[DACameraSensorAnomalyTestViewController addedRectangleView]
  -[DACameraSensorAnomalyTestViewController removeResultWithTag:]
  -[DACameraSensorAnomalyTestViewController removeShape:]
  -[DACameraSensorAnomalyTestViewController removeDrawingModeViews]
  -[DACameraSensorAnomalyTestViewController setDrawingMode:]
  -[DACameraSensorAnomalyTestViewController usePhotoButton]
  -[DACameraSensorAnomalyTestViewController addPanGesture]
  -[DACameraSensorAnomalyTestViewController addTapGesture]
  -[DACameraSensorAnomalyTestViewController parseResults]
  -[DACameraSensorAnomalyTestViewController setBlueLightStatusActive:]
  -[DACameraSensorAnomalyTestViewController setColorAdaptationStatus:]
  -[DACameraSensorAnomalyTestViewController blueLightStatusActive]
  -[DACameraSensorAnomalyTestViewController colorAdaptationStatus]
  -[DACameraSensorAnomalyTestViewController setOriginalScreenBrightness:]
  -[DACameraSensorAnomalyTestViewController originalScreenBrightness]
  -[DACameraSensorAnomalyTestViewController hideCameraView]
  -[DACameraSensorAnomalyTestViewController setCurrentImageView:]
  -[DACameraSensorAnomalyTestViewController setImageScrollView:]
  -[DACameraSensorAnomalyTestViewController setRetakeButton:]
  -[DACameraSensorAnomalyTestViewController retakeButtonPressed:]
  -[DACameraSensorAnomalyTestViewController setUsePhotoButton:]
  -[DACameraSensorAnomalyTestViewController usePhotoButtonPressed:]
  -[DACameraSensorAnomalyTestViewController continueButtonPressed:]
  -[DACameraSensorAnomalyTestViewController setBlueLightClient:]
  -[DACameraSensorAnomalyTestViewController setAdaptationClient:]


DKAnalytics : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DKAnalytics sendAnalyticsWithEvent:error:]
  +[DKAnalytics sendAnalyticsWithEvent:payloadDict:]


DKDiagnosticViewController : UIViewController /System/Library/Frameworks/Foundation.framework/Foundation <CXCallObserverDelegate, DKDiagnostic_Internal, CAAnimationDelegate, NSExtensionRequestHandling, DKDiagnostic>
 @property  CXCallObserver *callObserver
 @property  DKDiagnosticContext *context
 @property  NSLock *finishedLock
 @property  _UILegibilityLabel *pressHomeLabel
 @property  CAGradientLayer *gradientLayer
 @property  BOOL shouldShowPressHomeLabel
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  DKMutableDiagnosticResult *result
 @property  BOOL finished
 @property  BOOL cancelled
 @property  BOOL setup

  // instance methods
  -[DKDiagnosticViewController init]
  -[DKDiagnosticViewController .cxx_destruct]
  -[DKDiagnosticViewController cancel]
  -[DKDiagnosticViewController beginRequestWithExtensionContext:]
  -[DKDiagnosticViewController start]
  -[DKDiagnosticViewController isCancelled]
  -[DKDiagnosticViewController setFinished:]
  -[DKDiagnosticViewController isFinished]
  -[DKDiagnosticViewController result]
  -[DKDiagnosticViewController context]
  -[DKDiagnosticViewController setResult:]
  -[DKDiagnosticViewController setContext:]
  -[DKDiagnosticViewController viewDidLoad]
  -[DKDiagnosticViewController animationDidStop:finished:]
  -[DKDiagnosticViewController setCancelled:]
  -[DKDiagnosticViewController gradientLayer]
  -[DKDiagnosticViewController isSetup]
  -[DKDiagnosticViewController setSetup:]
  -[DKDiagnosticViewController callObserver:callChanged:]
  -[DKDiagnosticViewController setGradientLayer:]
  -[DKDiagnosticViewController callObserver]
  -[DKDiagnosticViewController setCallObserver:]
  -[DKDiagnosticViewController finishedLock]
  -[DKDiagnosticViewController shouldShowPressHomeLabel]
  -[DKDiagnosticViewController setShouldShowPressHomeLabel:]
  -[DKDiagnosticViewController setFinishedLock:]
  -[DKDiagnosticViewController monitorIncomingCall]
  -[DKDiagnosticViewController displayPressHomeLabel]
  -[DKDiagnosticViewController setPressHomeLabel:]
  -[DKDiagnosticViewController pressHomeLabel]
  -[DKDiagnosticViewController createGradientLayer]
  -[DKDiagnosticViewController resetGradientAndLabelBefore:]


DKDiagnosticParameters : NSObject /usr/lib/libSystem.B.dylib <NSSecureCoding, NSCopying>
 @property  NSDictionary *predicates
 @property  NSDictionary *specifications
 @property  NSDictionary *parameters

  // class methods
  +[DKDiagnosticParameters supportsSecureCoding]
  +[DKDiagnosticParameters diagnosticParametersWithDictionary:]

  // instance methods
  -[DKDiagnosticParameters copyWithZone:]
  -[DKDiagnosticParameters encodeWithCoder:]
  -[DKDiagnosticParameters initWithCoder:]
  -[DKDiagnosticParameters .cxx_destruct]
  -[DKDiagnosticParameters initWithDictionary:]
  -[DKDiagnosticParameters parameters]
  -[DKDiagnosticParameters predicates]
  -[DKDiagnosticParameters _decoderClasses]
  -[DKDiagnosticParameters specifications]


DACameraSensorAnomalyTest : DATestViewOperation
  // instance methods
  -[DACameraSensorAnomalyTest start]


DKDiagnosticControllerMock : NSObject /usr/lib/libSystem.B.dylib <DKDiagnostic_Internal, DKDiagnosticMock>
 @property  DKDiagnosticContextMock *context
 @property  NSLock *finishedLock
 @property  @? completion
 @property  Class inputsClass
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  DKMutableDiagnosticResult *result
 @property  BOOL finished
 @property  BOOL cancelled
 @property  BOOL setup

  // instance methods
  -[DKDiagnosticControllerMock init]
  -[DKDiagnosticControllerMock .cxx_destruct]
  -[DKDiagnosticControllerMock cancel]
  -[DKDiagnosticControllerMock start]
  -[DKDiagnosticControllerMock isCancelled]
  -[DKDiagnosticControllerMock setFinished:]
  -[DKDiagnosticControllerMock isFinished]
  -[DKDiagnosticControllerMock result]
  -[DKDiagnosticControllerMock context]
  -[DKDiagnosticControllerMock setResult:]
  -[DKDiagnosticControllerMock setContext:]
  -[DKDiagnosticControllerMock setCompletion:]
  -[DKDiagnosticControllerMock completion]
  -[DKDiagnosticControllerMock setCancelled:]
  -[DKDiagnosticControllerMock isSetup]
  -[DKDiagnosticControllerMock setSetup:]
  -[DKDiagnosticControllerMock setInputsClass:]
  -[DKDiagnosticControllerMock finishedLock]
  -[DKDiagnosticControllerMock beginRequestWithInputsClass:predicates:specifications:parameters:completion:]
  -[DKDiagnosticControllerMock setFinishedLock:]
  -[DKDiagnosticControllerMock inputsClass]


DATestAutomation : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL testAutomationEnabled

  // class methods
  +[DATestAutomation sharedInstance]
  +[DATestAutomation postConfiguration:]
  +[DATestAutomation postInteractiveTestEvent:info:]

  // instance methods
  -[DATestAutomation init]
  -[DATestAutomation testAutomationEnabled]
  -[DATestAutomation setTestAutomationEnabled:]


DKDiagnosticController : NSObject /usr/lib/libSystem.B.dylib <DKDiagnostic_Internal, NSExtensionRequestHandling, DKDiagnostic>
 @property  DKDiagnosticContext *context
 @property  NSLock *finishedLock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  DKMutableDiagnosticResult *result
 @property  BOOL finished
 @property  BOOL cancelled
 @property  BOOL setup

  // instance methods
  -[DKDiagnosticController init]
  -[DKDiagnosticController .cxx_destruct]
  -[DKDiagnosticController cancel]
  -[DKDiagnosticController beginRequestWithExtensionContext:]
  -[DKDiagnosticController start]
  -[DKDiagnosticController isCancelled]
  -[DKDiagnosticController setFinished:]
  -[DKDiagnosticController isFinished]
  -[DKDiagnosticController result]
  -[DKDiagnosticController context]
  -[DKDiagnosticController setResult:]
  -[DKDiagnosticController setContext:]
  -[DKDiagnosticController setCancelled:]
  -[DKDiagnosticController isSetup]
  -[DKDiagnosticController setSetup:]
  -[DKDiagnosticController finishedLock]
  -[DKDiagnosticController setFinishedLock:]


DKReporterContext : NSExtensionContext /usr/lib/libobjc.A.dylib <DKReporterRemoteContext>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DKReporterContext _extensionAuxiliaryHostProtocol]
  +[DKReporterContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[DKReporterContext startRemoteReportWithComponentIdentity:completion:]
  -[DKReporterContext completeWithReport:completion:]


DKExtensionDiscovery : NSObject /usr/lib/libSystem.B.dylib
 @property  <DKExtensionRegistry> *registry
 @property  NSString *bundleIdentifier
 @property  NSObject<OS_dispatch_queue> *discoveryQueue
 @property  NSCondition *discoveryLock
 @property  BOOL discoveryComplete
 @property  NSSet *services

  // class methods
  +[DKExtensionDiscovery discoveryUsingExtensionRegistry:services:bundleIdentifier:]

  // instance methods
  -[DKExtensionDiscovery .cxx_destruct]
  -[DKExtensionDiscovery bundleIdentifier]
  -[DKExtensionDiscovery setBundleIdentifier:]
  -[DKExtensionDiscovery services]
  -[DKExtensionDiscovery waitUntilComplete]
  -[DKExtensionDiscovery setServices:]
  -[DKExtensionDiscovery registry]
  -[DKExtensionDiscovery setRegistry:]
  -[DKExtensionDiscovery discoveryQueue]
  -[DKExtensionDiscovery setDiscoveryQueue:]
  -[DKExtensionDiscovery discoveryLock]
  -[DKExtensionDiscovery setDiscoveryLock:]
  -[DKExtensionDiscovery _beginExtensionDiscovery]
  -[DKExtensionDiscovery initWithExtensionRegistry:services:bundleIdentifier:]
  -[DKExtensionDiscovery setDiscoveryComplete:]
  -[DKExtensionDiscovery _registerExtensions:error:]
  -[DKExtensionDiscovery discoveryComplete]


DKDiagnosticContext : NSExtensionContext /usr/lib/libobjc.A.dylib <DKDiagnosticRemoteContext, DKResponder>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DKDiagnosticContext _extensionAuxiliaryHostProtocol]
  +[DKDiagnosticContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[DKDiagnosticContext completeWithDiagnosticResult:completion:]
  -[DKDiagnosticContext cancelRemoteDiagnosticWithCompletion:]
  -[DKDiagnosticContext startRemoteDiagnosticWithDiagnosticParameters:completion:]
  -[DKDiagnosticContext getAsset:completion:]
  -[DKDiagnosticContext setScreenToBrightness:animate:]
  -[DKDiagnosticContext enableVolumeHUD:]


DATestViewOperation : NSOperation /usr/lib/libobjc.A.dylib
 @property  DATestViewController *weakViewController
 @property  NSDictionary *parameters
 @property  NSDictionary *specifications
 @property  NSDictionary *predicates
 @property  <DATestViewOperationDelegate> *delegate
 @property  UIViewController *viewController
 @property  DKMutableDiagnosticResult *testResult

  // instance methods
  -[DATestViewOperation delegate]
  -[DATestViewOperation setDelegate:]
  -[DATestViewOperation .cxx_destruct]
  -[DATestViewOperation cancel]
  -[DATestViewOperation start]
  -[DATestViewOperation isCancelled]
  -[DATestViewOperation isFinished]
  -[DATestViewOperation isExecuting]
  -[DATestViewOperation isAsynchronous]
  -[DATestViewOperation finish]
  -[DATestViewOperation parameters]
  -[DATestViewOperation setParameters:]
  -[DATestViewOperation setViewController:]
  -[DATestViewOperation setPredicates:]
  -[DATestViewOperation predicates]
  -[DATestViewOperation viewController]
  -[DATestViewOperation _cancel]
  -[DATestViewOperation _finish]
  -[DATestViewOperation testResult]
  -[DATestViewOperation specifications]
  -[DATestViewOperation weakViewController]
  -[DATestViewOperation setSpecifications:]
  -[DATestViewOperation setTestResult:]
  -[DATestViewOperation setWeakViewController:]


DKCanonicalVersion : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  NSArray *parts
 @property  NSString *string

  // class methods
  +[DKCanonicalVersion supportsSecureCoding]
  +[DKCanonicalVersion canonicalVersionWithString:]

  // instance methods
  -[DKCanonicalVersion string]
  -[DKCanonicalVersion isEqual:]
  -[DKCanonicalVersion copyWithZone:]
  -[DKCanonicalVersion encodeWithCoder:]
  -[DKCanonicalVersion initWithCoder:]
  -[DKCanonicalVersion .cxx_destruct]
  -[DKCanonicalVersion initWithString:]
  -[DKCanonicalVersion isNewerThan:]
  -[DKCanonicalVersion parts]
  -[DKCanonicalVersion setParts:]
  -[DKCanonicalVersion _parseParts:]
  -[DKCanonicalVersion isEqualToCanonicalVersion:]


DAShapeView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
  // class methods
  +[DAShapeView rectangleWithFrame:borderColor:fillColor:]
  +[DAShapeView circleWithFrame:radius:color:]


DKReportManager : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *bundleIdentifier
 @property  DKReporterRegistry *registry
 @property  DKReportPlanner *planner
 @property  DKExtensionDiscovery *discovery
 @property  NSObject<OS_dispatch_queue> *reportManagerQueue
 @property  BOOL cancelled
 @property  NSArray *availableReportGenerators

  // instance methods
  -[DKReportManager init]
  -[DKReportManager .cxx_destruct]
  -[DKReportManager bundleIdentifier]
  -[DKReportManager isCancelled]
  -[DKReportManager initWithBundleIdentifier:]
  -[DKReportManager setBundleIdentifier:]
  -[DKReportManager setCancelled:]
  -[DKReportManager discovery]
  -[DKReportManager setDiscovery:]
  -[DKReportManager registry]
  -[DKReportManager setRegistry:]
  -[DKReportManager reportManagerQueue]
  -[DKReportManager planner]
  -[DKReportManager sendRequestsForGroup:concurrent:failOnError:error:]
  -[DKReportManager availableReportGenerators]
  -[DKReportManager reportWithComponentPredicateManifest:completion:]
  -[DKReportManager reportersWithCompletion:]
  -[DKReportManager cancelAllReports]
  -[DKReportManager setAvailableReportGenerators:]
  -[DKReportManager setPlanner:]
  -[DKReportManager setReportManagerQueue:]


DKDrawableView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UIColor *rectangleEdgeColor
 @property  UIColor *rectangleFillColor
 @property  UIView *shapeView
 @property  BOOL isDrawing

  // instance methods
  -[DKDrawableView .cxx_destruct]
  -[DKDrawableView isDrawing]
  -[DKDrawableView setIsDrawing:]
  -[DKDrawableView endDrawing]
  -[DKDrawableView updateDrawing:]
  -[DKDrawableView initWithFrame:rectangleFillColor:rectangleEdgeColor:]
  -[DKDrawableView shapeView]
  -[DKDrawableView setShapeView:]
  -[DKDrawableView rectangleEdgeColor]
  -[DKDrawableView rectangleFillColor]
  -[DKDrawableView setRectangleEdgeColor:]
  -[DKDrawableView setRectangleFillColor:]


DKUtilities : NSObject /usr/lib/libSystem.B.dylib
  // class methods
  +[DKUtilities extensionAttributes]
  +[DKUtilities acceptableDecoderClasses]
  +[DKUtilities inputsForDiagnostic:predicates:specifications:parameters:]
  +[DKUtilities moveFilesToSharedContainerInMutableResult:]
  +[DKUtilities diagnosticInputsClassAttribute]
  +[DKUtilities inputsUsingClass:diagnostic:predicates:specifications:parameters:]
  +[DKUtilities _sharedParsingFailedError]
  +[DKUtilities _fetchItemProviderFromItems:withError:]


DKReporterAttributes : NSObject /usr/lib/libSystem.B.dylib <DKExtensionAttributes, NSCopying>
 @property  NSUUID *uuid
 @property  NSString *name
 @property  NSString *version
 @property  NSSet *manifest
 @property  NSExtension *extension
 @property  BOOL headless
 @property  NSString *bundleIdentifier

  // instance methods
  -[DKReporterAttributes isEqual:]
  -[DKReporterAttributes name]
  -[DKReporterAttributes copyWithZone:]
  -[DKReporterAttributes .cxx_destruct]
  -[DKReporterAttributes bundleIdentifier]
  -[DKReporterAttributes version]
  -[DKReporterAttributes uuid]
  -[DKReporterAttributes setUuid:]
  -[DKReporterAttributes extension]
  -[DKReporterAttributes manifest]
  -[DKReporterAttributes initWithExtension:]
  -[DKReporterAttributes isHeadless]
  -[DKReporterAttributes _validateAndAddDomain:withInfo:toManifest:]
  -[DKReporterAttributes _validateAndAddExtensionManifest:toManifest:]
  -[DKReporterAttributes isEqualToReportGeneratorAttributes:]


DKDiagnosticAttributes : NSObject /usr/lib/libSystem.B.dylib <DKExtensionAttributes>
 @property  NSNumber *identifier
 @property  NSString *name
 @property  NSString *version
 @property  NSNumber *freeSpaceRequired
 @property  BOOL headless
 @property  BOOL restricted
 @property  BOOL requiresUnlock
 @property  NSExtension *extension
 @property  NSString *bundleIdentifier

  // instance methods
  -[DKDiagnosticAttributes name]
  -[DKDiagnosticAttributes .cxx_destruct]
  -[DKDiagnosticAttributes identifier]
  -[DKDiagnosticAttributes bundleIdentifier]
  -[DKDiagnosticAttributes version]
  -[DKDiagnosticAttributes isRestricted]
  -[DKDiagnosticAttributes extension]
  -[DKDiagnosticAttributes initWithExtension:]
  -[DKDiagnosticAttributes isHeadless]
  -[DKDiagnosticAttributes initWithIdentifier:version:freeSpaceRequired:name:headless:]
  -[DKDiagnosticAttributes freeSpaceRequired]
  -[DKDiagnosticAttributes requiresUnlock]


DKDiagnosticRegistry : NSObject /usr/lib/libSystem.B.dylib <DKExtensionRegistry>
 @property  NSMutableDictionary *diagnosticLookup
 @property  NSArray *diagnostics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  Class extensionClass
 @property  Class responseObjectClass

  // instance methods
  -[DKDiagnosticRegistry init]
  -[DKDiagnosticRegistry .cxx_destruct]
  -[DKDiagnosticRegistry diagnostics]
  -[DKDiagnosticRegistry adapterForIdentifier:]
  -[DKDiagnosticRegistry addExtensionAdapter:]
  -[DKDiagnosticRegistry enumerateExtensionAdaptersWithBlock:]
  -[DKDiagnosticRegistry extensionClass]
  -[DKDiagnosticRegistry responseObjectClass]
  -[DKDiagnosticRegistry diagnosticLookup]
  -[DKDiagnosticRegistry diagnosticForIdentifier:]
  -[DKDiagnosticRegistry setDiagnosticLookup:]


DKReporterController : NSObject /usr/lib/libSystem.B.dylib <DKReporter_Internal, DKReporter, NSExtensionRequestHandling>
 @property  DKReporterContext *context
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  DKComponentIdentity *componentIdentity

  // instance methods
  -[DKReporterController .cxx_destruct]
  -[DKReporterController beginRequestWithExtensionContext:]
  -[DKReporterController start]
  -[DKReporterController context]
  -[DKReporterController setContext:]
  -[DKReporterController isPresent]
  -[DKReporterController setComponentIdentity:]
  -[DKReporterController setupWithContext:]
  -[DKReporterController populateAttributes:]
  -[DKReporterController componentIdentity]


DKRequestContext : NSObject /usr/lib/libSystem.B.dylib
 @property  @? completion

  // instance methods
  -[DKRequestContext .cxx_destruct]
  -[DKRequestContext setCompletion:]
  -[DKRequestContext completion]


DKExtensionAdapter : NSObject /usr/lib/libSystem.B.dylib <DKRequestDelegate>
 @property  NSMutableDictionary *requestLookup
 @property  NSMutableDictionary *extensionToRequestIdentifierLookup
 @property  NSObject<OS_dispatch_queue> *adapterQueue
 @property  NSObject<OS_dispatch_queue> *adapterConnectQueue
 @property  <DKExtensionAttributes> *extensionAttributes
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[DKExtensionAdapter extensionAdapterWithExtensionAttributes:]

  // instance methods
  -[DKExtensionAdapter .cxx_destruct]
  -[DKExtensionAdapter cancelAll]
  -[DKExtensionAdapter extensionAttributes]
  -[DKExtensionAdapter beginRequest:payload:completion:]
  -[DKExtensionAdapter _attachHandlersToExtension:]
  -[DKExtensionAdapter initWithExtensionAttributes:]
  -[DKExtensionAdapter requestLookup]
  -[DKExtensionAdapter adapterConnectQueue]
  -[DKExtensionAdapter extensionToRequestIdentifierLookup]
  -[DKExtensionAdapter adapterQueue]
  -[DKExtensionAdapter _didCompleteExtensionRequest:]
  -[DKExtensionAdapter _didCancelExtensionRequest:error:]
  -[DKExtensionAdapter _didInterruptExtensionRequest:]
  -[DKExtensionAdapter _requestForExtensionRequestIdentifier:]
  -[DKExtensionAdapter request:didCompleteWithPayload:error:]
  -[DKExtensionAdapter setRequestLookup:]
  -[DKExtensionAdapter setExtensionToRequestIdentifierLookup:]
  -[DKExtensionAdapter setAdapterQueue:]
  -[DKExtensionAdapter setAdapterConnectQueue:]


DKMutableDiagnosticResult : DKDiagnosticResult
 @property  NSNumber *statusCode
 @property  NSDictionary *data
 @property  NSArray *files

  // instance methods
  -[DKMutableDiagnosticResult copyWithZone:]
  -[DKMutableDiagnosticResult mutableCopyWithZone:]
  -[DKMutableDiagnosticResult .cxx_destruct]
  -[DKMutableDiagnosticResult data]
  -[DKMutableDiagnosticResult statusCode]
  -[DKMutableDiagnosticResult setData:]
  -[DKMutableDiagnosticResult files]
  -[DKMutableDiagnosticResult setFiles:]
  -[DKMutableDiagnosticResult setStatusCode:]


DKDiagnosticContextMock : NSObject /usr/lib/libSystem.B.dylib <DKResponder>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKDiagnosticContextMock getAsset:completion:]
  -[DKDiagnosticContextMock setScreenToBrightness:animate:]
  -[DKDiagnosticContextMock enableVolumeHUD:]


DKDiagnosticHostContext : NSExtensionContext /usr/lib/libobjc.A.dylib <DKDiagnosticHostRemoteContext, DKExtensionHostAdapter>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  <DKExtensionHostAdapterDelegate> *delegate

  // class methods
  +[DKDiagnosticHostContext _extensionAuxiliaryHostProtocol]
  +[DKDiagnosticHostContext _extensionAuxiliaryVendorProtocol]

  // instance methods
  -[DKDiagnosticHostContext delegate]
  -[DKDiagnosticHostContext setDelegate:]
  -[DKDiagnosticHostContext .cxx_destruct]
  -[DKDiagnosticHostContext cancelWithCompletion:]
  -[DKDiagnosticHostContext startWithPayload:completion:]
  -[DKDiagnosticHostContext remoteHostEnableVolumeHUD:]
  -[DKDiagnosticHostContext remoteHostSetScreenToBrightness:animate:]
  -[DKDiagnosticHostContext remoteHostGetAsset:completion:]
  -[DKDiagnosticHostContext remoteHostCompleteWithResult:completion:]


DKDiagnosticManager : NSObject /usr/lib/libSystem.B.dylib <DKAssetResponder, DKBrightnessResponder, DKVolumeHUDResponder, DKRequestViewControllerDelegate, DATestViewOperationDelegate>
 @property  <DKBrightnessResponder> *brightnessResponder
 @property  <DKVolumeHUDResponder> *volumeHUDResponder
 @property  <DKViewControllerDelegate> *viewControllerDelegate
 @property  NSObject<OS_dispatch_queue> *diagnosticsManagerQueue
 @property  NSObject<OS_dispatch_queue> *diagnosticListQueue
 @property  DKDiagnosticRegistry *registry
 @property  DKExtensionDiscovery *discovery
 @property  NSString *bundleIdentifier
 @property  DATestViewOperation *currentLegacyDiagnostic
 @property  <DKBrightnessResponder> *brightnessResponder
 @property  <DKVolumeHUDResponder> *volumeHUDResponder
 @property  <DKViewControllerDelegate> *viewControllerDelegate
 @property  <DKAssetResponder> *assetResponder
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[DKDiagnosticManager init]
  -[DKDiagnosticManager .cxx_destruct]
  -[DKDiagnosticManager bundleIdentifier]
  -[DKDiagnosticManager initWithBundleIdentifier:]
  -[DKDiagnosticManager setBundleIdentifier:]
  -[DKDiagnosticManager discovery]
  -[DKDiagnosticManager setDiscovery:]
  -[DKDiagnosticManager viewControllerDelegate]
  -[DKDiagnosticManager setViewControllerDelegate:]
  -[DKDiagnosticManager registry]
  -[DKDiagnosticManager setRegistry:]
  -[DKDiagnosticManager _isDeviceLocked]
  -[DKDiagnosticManager adapterForIdentifier:]
  -[DKDiagnosticManager operation:presentViewController:completion:]
  -[DKDiagnosticManager getAsset:completion:]
  -[DKDiagnosticManager setScreenToBrightness:animate:]
  -[DKDiagnosticManager enableVolumeHUD:]
  -[DKDiagnosticManager operation:dismissViewController:completion:]
  -[DKDiagnosticManager diagnosticsManagerQueue]
  -[DKDiagnosticManager _checkPrerequisitesForDiagnostic:parameters:error:]
  -[DKDiagnosticManager setCurrentLegacyDiagnostic:]
  -[DKDiagnosticManager currentLegacyDiagnostic]
  -[DKDiagnosticManager diagnosticListQueue]
  -[DKDiagnosticManager assetResponder]
  -[DKDiagnosticManager brightnessResponder]
  -[DKDiagnosticManager volumeHUDResponder]
  -[DKDiagnosticManager _freeSpaceAvailable:]
  -[DKDiagnosticManager request:presentViewController:completion:]
  -[DKDiagnosticManager request:dismissViewController:completion:]
  -[DKDiagnosticManager beginDiagnosticWithIdentifier:parameters:completion:]
  -[DKDiagnosticManager diagnosticsWithCompletion:]
  -[DKDiagnosticManager attributesForIdentifier:]
  -[DKDiagnosticManager cancelAllDiagnostics]
  -[DKDiagnosticManager setAssetResponder:]
  -[DKDiagnosticManager setDiagnosticsManagerQueue:]
  -[DKDiagnosticManager setDiagnosticListQueue:]
  -[DKDiagnosticManager setBrightnessResponder:]
  -[DKDiagnosticManager setVolumeHUDResponder:]


DKReportingConcurrentRequest : NSObject /usr/lib/libSystem.B.dylib
 @property  DKExtensionAdapter *generator
 @property  NSMutableSet *manifest

  // class methods
  +[DKReportingConcurrentRequest concurrentRequestWithGenerator:]

  // instance methods
  -[DKReportingConcurrentRequest .cxx_destruct]
  -[DKReportingConcurrentRequest generator]
  -[DKReportingConcurrentRequest setGenerator:]
  -[DKReportingConcurrentRequest initWithGenerator:]
  -[DKReportingConcurrentRequest manifest]
  -[DKReportingConcurrentRequest setManifest:]


DKReportingConcurrentRequestGroup : NSObject /usr/lib/libSystem.B.dylib
 @property  NSMutableSet *resources
 @property  NSMutableSet *requests
 @property  NSMutableDictionary *requestLookupByGenerator

  // instance methods
  -[DKReportingConcurrentRequestGroup init]
  -[DKReportingConcurrentRequestGroup .cxx_destruct]
  -[DKReportingConcurrentRequestGroup requests]
  -[DKReportingConcurrentRequestGroup setRequests:]
  -[DKReportingConcurrentRequestGroup resources]
  -[DKReportingConcurrentRequestGroup setResources:]
  -[DKReportingConcurrentRequestGroup requestLookupByGenerator]
  -[DKReportingConcurrentRequestGroup addComponentIdentity:usingGenerator:]
  -[DKReportingConcurrentRequestGroup setRequestLookupByGenerator:]


DKReportPlanner : NSObject /usr/lib/libSystem.B.dylib
 @property  DKReporterRegistry *registry

  // class methods
  +[DKReportPlanner plannerWithReportGeneratorRegistry:]

  // instance methods
  -[DKReportPlanner .cxx_destruct]
  -[DKReportPlanner registry]
  -[DKReportPlanner setRegistry:]
  -[DKReportPlanner requestGroupsForPredicateManifest:]
  -[DKReportPlanner initWithReportGeneratorRegistry:]
  -[DKReportPlanner _resolveComponentIdentityManifest:]


DKExtensionRequest : NSObject /usr/lib/libSystem.B.dylib <DKExtensionHostAdapterDelegate, DKRequest>
 @property  <DKExtensionAttributes> *extensionAttributes
 @property  <NSCopying> *extensionRequestIdentifier
 @property  BOOL canceled
 @property  UIViewController *remoteViewController
 @property  <DKExtensionHostAdapter> *hostAdapter
 @property  BOOL completed
 @property  id payload
 @property  NSObject<OS_dispatch_semaphore> *connectSemaphore
 @property  BOOL interrupted
 @property  BKSProcessAssertion *processAssertion
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  id hostServicesDelegate
 @property  <NSCopying> *requestIdentifier
 @property  <DKRequestDelegate> *delegate
 @property  id context

  // class methods
  +[DKExtensionRequest requestWithExtensionAttributes:]

  // instance methods
  -[DKExtensionRequest delegate]
  -[DKExtensionRequest setDelegate:]
  -[DKExtensionRequest .cxx_destruct]
  -[DKExtensionRequest cancel]
  -[DKExtensionRequest context]
  -[DKExtensionRequest interrupt]
  -[DKExtensionRequest setCanceled:]
  -[DKExtensionRequest setContext:]
  -[DKExtensionRequest setPayload:]
  -[DKExtensionRequest payload]
  -[DKExtensionRequest complete]
  -[DKExtensionRequest cancelWithError:]
  -[DKExtensionRequest isInterrupted]
  -[DKExtensionRequest setCompleted:]
  -[DKExtensionRequest remoteViewController]
  -[DKExtensionRequest setExtensionRequestIdentifier:]
  -[DKExtensionRequest extensionRequestIdentifier]
  -[DKExtensionRequest setRemoteViewController:]
  -[DKExtensionRequest requestIdentifier]
  -[DKExtensionRequest isCanceled]
  -[DKExtensionRequest setInterrupted:]
  -[DKExtensionRequest connectWithError:]
  -[DKExtensionRequest isCompleted]
  -[DKExtensionRequest processAssertion]
  -[DKExtensionRequest setProcessAssertion:]
  -[DKExtensionRequest _finishWithResult:error:]
  -[DKExtensionRequest extensionAttributes]
  -[DKExtensionRequest _dismissViewControllerWithCompletion:]
  -[DKExtensionRequest cancelExtensionRequest]
  -[DKExtensionRequest completeWithPayload:completion:]
  -[DKExtensionRequest setHostServicesDelegate:]
  -[DKExtensionRequest initWithExtensionAttributes:]
  -[DKExtensionRequest beginWithPayload:]
  -[DKExtensionRequest hostServicesDelegate]
  -[DKExtensionRequest connectSemaphore]
  -[DKExtensionRequest hostAdapter]
  -[DKExtensionRequest _cancelTimedOutWithInfo:]
  -[DKExtensionRequest _extensionContext:hasEntitlement:]
  -[DKExtensionRequest setHostAdapter:]
  -[DKExtensionRequest setExtensionAttributes:]
  -[DKExtensionRequest setConnectSemaphore:]


DACameraSensorAnomalyTargetView : UIView /System/Library/Frameworks/Foundation.framework/Foundation
 @property  UILabel *viewfinderInstruction
 @property  UIView *viewfinderOutsideRegionTop
 @property  UIView *viewfinderOutsideRegionBottom
 @property  UIButton *cancelButton
 @property  CUShutterButton *shutterButton
 @property  {CGSize=dd} shutterButtonIntrinsicContentSize
 @property  <DACameraSensorAnomalyTargetViewDelegate> *delegate

  // class methods
  +[DACameraSensorAnomalyTargetView layerClass]

  // instance methods
  -[DACameraSensorAnomalyTargetView delegate]
  -[DACameraSensorAnomalyTargetView setDelegate:]
  -[DACameraSensorAnomalyTargetView .cxx_destruct]
  -[DACameraSensorAnomalyTargetView updateConstraints]
  -[DACameraSensorAnomalyTargetView cancelButton]
  -[DACameraSensorAnomalyTargetView setCancelButton:]
  -[DACameraSensorAnomalyTargetView shutterButton]
  -[DACameraSensorAnomalyTargetView cancelTapped:]
  -[DACameraSensorAnomalyTargetView setShutterButton:]
  -[DACameraSensorAnomalyTargetView viewfinderInstruction]
  -[DACameraSensorAnomalyTargetView setViewfinderInstruction:]
  -[DACameraSensorAnomalyTargetView initWithFrame:color:thickness:instructionText:]
  -[DACameraSensorAnomalyTargetView takePicture:]
  -[DACameraSensorAnomalyTargetView viewfinderOutsideRegionTop]
  -[DACameraSensorAnomalyTargetView viewfinderOutsideRegionBottom]
  -[DACameraSensorAnomalyTargetView shutterButtonIntrinsicContentSize]
  -[DACameraSensorAnomalyTargetView setViewfinderOutsideRegionTop:]
  -[DACameraSensorAnomalyTargetView setViewfinderOutsideRegionBottom:]
  -[DACameraSensorAnomalyTargetView setShutterButtonIntrinsicContentSize:]


DKComponent : NSObject /usr/lib/libSystem.B.dylib <NSCopying, NSSecureCoding>
 @property  DKComponentIdentity *identity
 @property  NSDictionary *attributes

  // class methods
  +[DKComponent supportsSecureCoding]
  +[DKComponent componentWithIdentity:attributes:]

  // instance methods
  -[DKComponent copyWithZone:]
  -[DKComponent encodeWithCoder:]
  -[DKComponent initWithCoder:]
  -[DKComponent .cxx_destruct]
  -[DKComponent attributes]
  -[DKComponent identity]
  -[DKComponent dictionaryForJSON]
  -[DKComponent initWithIdentity:attributes:]


NSDictionary(Validations)
	// instance methods
	-[NSDictionary(Validations) dk_stringFromKey:maxLength:defaultValue:failed:]
	-[NSDictionary(Validations) dk_dictionaryFromKey:defaultValue:failed:]
	-[NSDictionary(Validations) dk_arrayFromKey:types:maxLength:defaultValue:failed:validator:]
	-[NSDictionary(Validations) dk_stringFromKey:inSet:defaultValue:failed:]
	-[NSDictionary(Validations) dk_numberFromKey:lowerBound:upperBound:defaultValue:failed:]
	-[NSDictionary(Validations) dk_boolFromKey:defaultValue:failed:]
	-[NSDictionary(Validations) dk_dictionaryFromRequiredKey:failed:]
	-[NSDictionary(Validations) dk_arrayFromKey:types:maxLength:defaultValue:failed:]
	-[NSDictionary(Validations) dk_arrayFromKey:inSet:maxLength:defaultValue:failed:]
	-[NSDictionary(Validations) dk_dictionaryFromKey:limitedToKeys:defaultValue:failed:]
	-[NSDictionary(Validations) dk_stringFromRequiredKey:maxLength:failed:]
	-[NSDictionary(Validations) dk_stringFromRequiredKey:inSet:failed:]
	-[NSDictionary(Validations) dk_numberFromRequiredKey:lowerBound:upperBound:failed:]
	-[NSDictionary(Validations) dk_boolFromRequiredKey:failed:]
	-[NSDictionary(Validations) dk_dictionaryFromRequiredKey:limitedToKeys:failed:]
	-[NSDictionary(Validations) dk_arrayFromRequiredKey:types:maxLength:failed:]
	-[NSDictionary(Validations) dk_arrayFromRequiredKey:types:maxLength:failed:validator:]
	-[NSDictionary(Validations) dk_arrayFromRequiredKey:inSet:maxLength:failed:]
	-[NSDictionary(Validations) getKey:ofType:]
	-[NSDictionary(Validations) alwaysGetKey:ofType:default:]
	-[NSDictionary(Validations) getStringForKey:]
	-[NSDictionary(Validations) getNumberForKey:]
	-[NSDictionary(Validations) getBoolForKey:]
	-[NSDictionary(Validations) getDictionaryForKey:]
	-[NSDictionary(Validations) getArrayForKey:]
	-[NSDictionary(Validations) alwaysGetStringForKey:default:]
	-[NSDictionary(Validations) alwaysGetNumberForKey:default:]
	-[NSDictionary(Validations) alwaysGetDictionaryForKey:default:]
	-[NSDictionary(Validations) alwaysGetArrayForKey:default:]
	-[NSDictionary(Validations) alwaysGetKey:ofType:]

NSString(Localization)
	// instance methods
	-[NSString(Localization) localizedString]

UIColor(HexColor)
	// class methods
	+[UIColor(HexColor) colorWithHexValue:error:]

01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceDiscoverySession 
01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureDeviceInput 
01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoOutput 
01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCapturePhotoSettings 
01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureSession 
01 00 0600 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVCaptureVideoPreviewLayer 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAAnimationGroup 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CABasicAnimation 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAGradientLayer 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAMediaTimingFunction 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CAShapeLayer 
01 00 0900 /System/Library/Frameworks/QuartzCore.framework/QuartzCore: CATransaction 
01 00 0400 /System/Library/PrivateFrameworks/CoreBrightness.framework/CoreBrightness: CBClient 
01 00 0200 /System/Library/PrivateFrameworks/CameraUI.framework/CameraUI: CUShutterButton 
01 00 0b00 /System/Library/Frameworks/CallKit.framework/CallKit: CXCallObserver 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSCondition 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtension 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSExtensionContext 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLayoutConstraint 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0e00 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSScanner 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSTimer 
01 00 1000 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 0d00 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertAction 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIAlertController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIBezierPath 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIButton 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIColor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFont 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIFontDescriptor 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImage 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIImageView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UILabel 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIPanGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScreen 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIScrollView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UITapGestureRecognizer 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIView 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: UIViewController 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilityLabel 
01 00 0c00 /System/Library/Frameworks/UIKit.framework/UIKit: _UILegibilitySettings 
