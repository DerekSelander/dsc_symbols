|| __DATA.__objc_data _OBJC_METACLASS_$_PQLQueryBuilder
|| __DATA.__objc_ivar _OBJC_IVAR_$_PQLQueryBuilder._parameters
|| __DATA.__objc_ivar _OBJC_IVAR_$_PQLQueryBuilder._spec
|| __DATA.__objc_ivar _OBJC_IVAR_$_PQLQueryBuilder._specLength
|| __DATA.__objc_ivar _OBJC_IVAR_$_PQLStatement._stmt
|| __DATA_CONST.__const _PQLSqliteErrorDomain
|| __DATA_DIRTY.__common _pql_log
|| __DATA_DIRTY.__common _pql_pred
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PQLConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PQLFormatInjection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PQLNameInjection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PQLNameInjectionBase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PQLQueryBuilder
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PQLRawInjection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PQLResultSet
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_PQLStatement
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PQLConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PQLFormatInjection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PQLNameInjection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PQLNameInjectionBase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PQLRawInjection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PQLResultSet
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_PQLStatement
|| __TEXT.__const _libprequeliteVersionNumber
|| __TEXT.__const _libprequeliteVersionString
|| __TEXT.__text __pql_log_init
|| __TEXT.__text _pql_sqlite3_bind_pointer
|| __TEXT.__text _pql_sqlite3_value_object
|| __TEXT.__text _pql_sqlite3_value_pointer
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFHash
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSBlock
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_METACLASS_$_NSData
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFErrorDescriptionKey
__ Foundation: _NSKeyedArchiveRootObjectKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSUUID
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: __dispatch_source_type_data_or
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: _abort
__ libSystem.B.dylib: _cache_create
__ libSystem.B.dylib: _cache_destroy
__ libSystem.B.dylib: _cache_get_and_retain
__ libSystem.B.dylib: _cache_get_count_hint
__ libSystem.B.dylib: _cache_get_name
__ libSystem.B.dylib: _cache_release_value
__ libSystem.B.dylib: _cache_remove_all
__ libSystem.B.dylib: _cache_set_and_retain
__ libSystem.B.dylib: _cache_set_count_hint
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_create_with_qos_class
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_once_f
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_create_with_target$V2
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_merge_data
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memchr
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _strcspn
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _uuid_parse
__ libSystem.B.dylib: dyld_stub_binder
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _class_getMethodImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _sel_getName
__ libsqlite3.dylib: __sqlite3_db_clone
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_busy_handler
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_column_value
__ libsqlite3.dylib: _sqlite3_create_function_v2
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_errcode
__ libsqlite3.dylib: _sqlite3_file_control
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_get_autocommit
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_next_stmt
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_sleep
__ libsqlite3.dylib: _sqlite3_sql
__ libsqlite3.dylib: _sqlite3_status
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_stmt_busy
__ libsqlite3.dylib: _sqlite3_stmt_status
__ libsqlite3.dylib: _sqlite3_total_changes
__ libsqlite3.dylib: _sqlite3_trace_v2
__ libsqlite3.dylib: _sqlite3_user_data
__ libsqlite3.dylib: _sqlite3_value_blob
__ libsqlite3.dylib: _sqlite3_value_bytes
__ libsqlite3.dylib: _sqlite3_value_double
__ libsqlite3.dylib: _sqlite3_value_dup
__ libsqlite3.dylib: _sqlite3_value_free
__ libsqlite3.dylib: _sqlite3_value_int64
__ libsqlite3.dylib: _sqlite3_value_text
__ libsqlite3.dylib: _sqlite3_value_type
__ libsqlite3.dylib: _sqlite3_wal_checkpoint_v2
PQLNameInjectionBase : NSData
 @property  NSData *sql

  // instance methods
  -[PQLNameInjectionBase initWithBytes:length:]
  -[PQLNameInjectionBase dealloc]
  -[PQLNameInjectionBase length]
  -[PQLNameInjectionBase bytes]
  -[PQLNameInjectionBase initWithData:]
  -[PQLNameInjectionBase sql]


PQLNameInjection : PQLNameInjectionBase <PQLInjecting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *sql

  // class methods
  +[PQLNameInjection nameWithString:]
  +[PQLNameInjection _appendString:toInjection:]
  +[PQLNameInjection nameWithPrefix:suffix:]

  // instance methods
  -[PQLNameInjection initWithString:]
  -[PQLNameInjection bindWithStatement:startingAtIndex:]
  -[PQLNameInjection nameByAddingSuffix:]


PQLRawInjection : PQLNameInjectionBase <PQLInjecting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *sql

  // class methods
  +[PQLRawInjection initialize]
  +[PQLRawInjection rawInjection:length:]

  // instance methods
  -[PQLRawInjection bindWithStatement:startingAtIndex:]
  -[PQLRawInjection initWithUTF8String:length:]


PQLFormatInjection : PQLNameInjectionBase <PQLInjecting>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *sql

  // class methods
  +[PQLFormatInjection formatInjection:]

  // instance methods
  -[PQLFormatInjection initWithFormat:arguments:]
  -[PQLFormatInjection .cxx_destruct]
  -[PQLFormatInjection bindWithStatement:startingAtIndex:]
  -[PQLFormatInjection bindValuesToKeepAlive]


PQLConnection : NSObject /usr/lib/libSystem.B.dylib
 @property  NSString *label
 @property  BOOL traced
 @property  BOOL crashIfUsedAfterClose
 @property  NSURL *url
 @property  ^{sqlite3=} dbHandle
 @property  BOOL isInBatch
 @property  BOOL isInTransaction
 @property  NSError *lastError
 @property  long long lastInsertedRowID
 @property  long long changes
 @property  unsigned long statementCacheMaxCount
 @property  NSObject<OS_dispatch_queue> *serialQueue
 @property  double currentOperationDuration
 @property  NSString *debugDescription
 @property  unsigned long synchronousMode
 @property  int batchTransactionType
 @property  BOOL shouldUseWALJournalMode
 @property  @? lockedHandler
 @property  @? busyHandler
 @property  @? autoRollbackHandler
 @property  @? sqliteErrorHandler
 @property  @? preFlushHook
 @property  @? postFlushHook
 @property  @? profilingHook
 @property  @? willBeginBatchingHook
 @property  @? didFinishBatchingHook
 @property  BOOL isBatchSuspended

  // class methods
  +[PQLConnection initialize]

  // instance methods
  -[PQLConnection init]
  -[PQLConnection dealloc]
  -[PQLConnection .cxx_destruct]
  -[PQLConnection url]
  -[PQLConnection changes]
  -[PQLConnection serialQueue]
  -[PQLConnection userVersion]
  -[PQLConnection setUserVersion:]
  -[PQLConnection synchronousMode]
  -[PQLConnection setSynchronousMode:]
  -[PQLConnection setTraced:]
  -[PQLConnection setLabel:]
  -[PQLConnection label]
  -[PQLConnection flush]
  -[PQLConnection execute:]
  -[PQLConnection assertOnQueue]
  -[PQLConnection setLastError:]
  -[PQLConnection lastError]
  -[PQLConnection close:]
  -[PQLConnection _resetState]
  -[PQLConnection lastInsertedRowID]
  -[PQLConnection isInTransaction]
  -[PQLConnection setBusyHandler:]
  -[PQLConnection setAutoRollbackHandler:]
  -[PQLConnection _description:]
  -[PQLConnection _clearStatementCache]
  -[PQLConnection _createCacheIfNeeded]
  -[PQLConnection _clearCleanupCacheQueueIfNeeded]
  -[PQLConnection useSerialQueueWithTarget:]
  -[PQLConnection useBatchingOnTargetQueue:delay:changeCount:]
  -[PQLConnection useBatchingOnTargetQueue:withPolicyHandler:]
  -[PQLConnection _execute:mustSucceed:bindings:]
  -[PQLConnection fetchObjectOfClass:sql:]
  -[PQLConnection _vacuumMode]
  -[PQLConnection _incrementalVacuum:]
  -[PQLConnection _fullSync]
  -[PQLConnection _vacuumIfNeeded]
  -[PQLConnection forceBatchStart]
  -[PQLConnection _performWithFlags:action:whenFlushed:]
  -[PQLConnection openAtURL:withFlags:error:]
  -[PQLConnection _newStatementForFormat:arguments:]
  -[PQLConnection _executeStmt:mustSucceed:]
  -[PQLConnection fetchObjectOfClass:initializer:sql:args:]
  -[PQLConnection executeRaw:]
  -[PQLConnection currentOperationDuration]
  -[PQLConnection statementCacheMaxCount]
  -[PQLConnection setStatementCacheMaxCount:]
  -[PQLConnection useSerialQueue]
  -[PQLConnection useBatchingWithDelay:changeCount:]
  -[PQLConnection useBatchingWithPolicyHandler:]
  -[PQLConnection _batchStartIfNeeded:]
  -[PQLConnection _batchStopIfNeeded]
  -[PQLConnection _fireFlushNotifications]
  -[PQLConnection makeNextFlushFullSync]
  -[PQLConnection isBatchSuspended]
  -[PQLConnection groupInBatch:]
  -[PQLConnection groupInTransaction:]
  -[PQLConnection performWithFlags:action:whenFlushed:]
  -[PQLConnection performWithFlags:action:]
  -[PQLConnection openAtURL:sharedCache:error:]
  -[PQLConnection destroyDatabaseWithError:]
  -[PQLConnection setupPragmas]
  -[PQLConnection registerFunction:nArgs:handler:]
  -[PQLConnection backupToURL:progress:]
  -[PQLConnection isInBatch]
  -[PQLConnection setBatchTransactionType:]
  -[PQLConnection execute:args:]
  -[PQLConnection fetch:]
  -[PQLConnection fetch:args:]
  -[PQLConnection fetchObjectOfClass:initializer:sql:]
  -[PQLConnection fetchObjectOfClass:sql:args:]
  -[PQLConnection fetchObject:sql:args:]
  -[PQLConnection fetchObject:sql:]
  -[PQLConnection autovacuumableSpaceInBytes]
  -[PQLConnection incrementalVacuum:]
  -[PQLConnection lockedHandler]
  -[PQLConnection setLockedHandler:]
  -[PQLConnection busyHandler]
  -[PQLConnection autoRollbackHandler]
  -[PQLConnection sqliteErrorHandler]
  -[PQLConnection setSqliteErrorHandler:]
  -[PQLConnection preFlushHook]
  -[PQLConnection setPreFlushHook:]
  -[PQLConnection postFlushHook]
  -[PQLConnection setPostFlushHook:]
  -[PQLConnection profilingHook]
  -[PQLConnection setProfilingHook:]
  -[PQLConnection willBeginBatchingHook]
  -[PQLConnection setWillBeginBatchingHook:]
  -[PQLConnection didFinishBatchingHook]
  -[PQLConnection setDidFinishBatchingHook:]
  -[PQLConnection dbHandle]
  -[PQLConnection isTraced]
  -[PQLConnection crashIfUsedAfterClose]
  -[PQLConnection setCrashIfUsedAfterClose:]
  -[PQLConnection batchTransactionType]
  -[PQLConnection shouldUseWALJournalMode]
  -[PQLConnection setShouldUseWALJournalMode:]
  -[PQLConnection _newStatementForBuilder:]
  -[PQLConnection executeSwift:error:]
  -[PQLConnection fetchSwift:error:]
  -[PQLConnection fetchObjectOfClassSwift:query:error:]
  -[PQLConnection fetchObjectSwift:query:error:]


PQLResultSet : NSObject /usr/lib/libSystem.B.dylib <PQLEnumeration>
 @property  NSError *error
 @property  unsigned long rowNumber
 @property  unsigned long columns
 @property  PQLConnection *db
 @property  ^{sqlite3_stmt=} stmt
 @property  NSSet *defaultUnarchivingAllowedClasses

  // instance methods
  -[PQLResultSet dealloc]
  -[PQLResultSet countByEnumeratingWithState:objects:count:]
  -[PQLResultSet objectAtIndex:]
  -[PQLResultSet objectAtIndexedSubscript:]
  -[PQLResultSet nextObject]
  -[PQLResultSet close]
  -[PQLResultSet .cxx_destruct]
  -[PQLResultSet error]
  -[PQLResultSet next]
  -[PQLResultSet db]
  -[PQLResultSet columnNameAtIndex:]
  -[PQLResultSet intAtIndex:]
  -[PQLResultSet doubleAtIndex:]
  -[PQLResultSet object:]
  -[PQLResultSet columns]
  -[PQLResultSet integerAtIndex:]
  -[PQLResultSet stringAtIndex:]
  -[PQLResultSet dataAtIndex:]
  -[PQLResultSet stmt]
  -[PQLResultSet charAtIndex:]
  -[PQLResultSet objectOfClass:]
  -[PQLResultSet boolAtIndex:]
  -[PQLResultSet enumerateObjects:]
  -[PQLResultSet unarchivedObjectOfClass:atIndex:]
  -[PQLResultSet initWithStatement:usingDatabase:]
  -[PQLResultSet onlyObjectOfClass:initializer:]
  -[PQLResultSet onlyObject:]
  -[PQLResultSet _next:]
  -[PQLResultSet isNullAtIndex:]
  -[PQLResultSet unarchivedObjectOfClasses:atIndex:]
  -[PQLResultSet defaultUnarchivingAllowedClasses]
  -[PQLResultSet enumerateObjectsOfClass:]
  -[PQLResultSet onlyObjectOfClass:]
  -[PQLResultSet objectOfClass:initializer:]
  -[PQLResultSet objectOfClass:atIndex:]
  -[PQLResultSet unsignedCharAtIndex:]
  -[PQLResultSet shortAtIndex:]
  -[PQLResultSet unsignedShortAtIndex:]
  -[PQLResultSet unsignedIntAtIndex:]
  -[PQLResultSet longAtIndex:]
  -[PQLResultSet unsignedLongAtIndex:]
  -[PQLResultSet longLongAtIndex:]
  -[PQLResultSet unsignedLongLongAtIndex:]
  -[PQLResultSet unsignedIntegerAtIndex:]
  -[PQLResultSet floatAtIndex:]
  -[PQLResultSet UTF8StringAtIndex:]
  -[PQLResultSet numberAtIndex:]
  -[PQLResultSet dateAtIndex:]
  -[PQLResultSet dataAtIndex:noCopy:]
  -[PQLResultSet uuidAtIndex:]
  -[PQLResultSet plistAtIndex:]
  -[PQLResultSet archivedObjectOfClass:atIndex:]
  -[PQLResultSet archivedObjectOfClasses:atIndex:]
  -[PQLResultSet enumerateObjectsOfClass:initializer:]
  -[PQLResultSet setDefaultUnarchivingAllowedClasses:]
  -[PQLResultSet rowNumber]


PQLStatement : NSObject /usr/lib/libSystem.B.dylib
 @property  BOOL isTraced

  // instance methods
  -[PQLStatement dealloc]
  -[PQLStatement invalidate]
  -[PQLStatement .cxx_destruct]
  -[PQLStatement initWithFormat:arguments:db:cache:]
  -[PQLStatement unbindForDB:returnedRows:]
  -[PQLStatement isTraced]
  -[PQLStatement initWithQueryBuilder:db:cache:]
  -[PQLStatement _prepare:withDB:]
  -[PQLStatement translate:hasInjections:arguments:]
  -[PQLStatement initWithStatement:forDB:]
  -[PQLStatement bindArguments:db:]
  -[PQLStatement keepBindAlive:]
  -[PQLStatement translate:withBuilder:]
  -[PQLStatement bindFromArray:db:]


PQLQueryBuilder : NSObject /usr/lib/libSystem.B.dylib
 @property  NSError *lastError

  // instance methods
  -[PQLQueryBuilder init]
  -[PQLQueryBuilder .cxx_destruct]
  -[PQLQueryBuilder setLastError:]
  -[PQLQueryBuilder lastError]
  -[PQLQueryBuilder bindParameter:spec:]
  -[PQLQueryBuilder bindStringParameter:]
  -[PQLQueryBuilder bindDoubleParameter:]
  -[PQLQueryBuilder bindBooleanParameter:]
  -[PQLQueryBuilder bindCharParameter:]
  -[PQLQueryBuilder bindUnsignedCharParameter:]
  -[PQLQueryBuilder bindShortParameter:]
  -[PQLQueryBuilder bindUnsignedShortParameter:]
  -[PQLQueryBuilder bindIntegerParameter:]
  -[PQLQueryBuilder bindUnsignedIntegerParameter:]
  -[PQLQueryBuilder bindLongParameter:]
  -[PQLQueryBuilder bindUnsignedLongParameter:]
  -[PQLQueryBuilder bindObjectParameter:]


NSError(PQLAdditions)
	// class methods
	+[NSError(PQLAdditions) newFromSqliteValue:]
	+[NSError(PQLAdditions) newFromSqliteStatement:atIndex:]
	+[NSError(PQLAdditions) errorForDB:SQL:]
	+[NSError(PQLAdditions) errorForDB:]
	+[NSError(PQLAdditions) errorForDB:stmt:]
	+[NSError(PQLAdditions) errorWithSqliteCode:andMessage:]

	// instance methods
	-[NSError(PQLAdditions) sqliteBind:index:]
	-[NSError(PQLAdditions) sqliteStatement]
	-[NSError(PQLAdditions) extendedSqliteCode]
	-[NSError(PQLAdditions) isSqliteErrorCode:]

NSDictionary(PQLBindable)
	// instance methods
	-[NSDictionary(PQLBindable) sqliteBind:index:]

NSArray(PQLBindable)
	// instance methods
	-[NSArray(PQLBindable) sqliteBind:index:]

NSSet(PQLBindable)
	// instance methods
	-[NSSet(PQLBindable) sqliteBind:index:]

NSNull(PQLBindable)
	// instance methods
	-[NSNull(PQLBindable) sqliteBind:index:]

NSNumber(PQLValuable)
	// class methods
	+[NSNumber(PQLValuable) newFromSqliteValue:]
	+[NSNumber(PQLValuable) newFromSqliteStatement:atIndex:]

	// instance methods
	-[NSNumber(PQLValuable) sqliteBind:index:]

NSDate(PQLValuable)
	// class methods
	+[NSDate(PQLValuable) newFromSqliteValue:]
	+[NSDate(PQLValuable) newFromSqliteStatement:atIndex:]

	// instance methods
	-[NSDate(PQLValuable) sqliteBind:index:]

NSString(PQLValuable)
	// class methods
	+[NSString(PQLValuable) newFromSqliteValue:]
	+[NSString(PQLValuable) newFromSqliteStatement:atIndex:]

	// instance methods
	-[NSString(PQLValuable) sqliteBind:index:]

NSData(PQLValuable)
	// class methods
	+[NSData(PQLValuable) newFromSqliteValue:]
	+[NSData(PQLValuable) newFromSqliteStatement:atIndex:]

	// instance methods
	-[NSData(PQLValuable) sqliteBind:index:]

NSURL(PQLValuable)
	// class methods
	+[NSURL(PQLValuable) newFromSqliteValue:]
	+[NSURL(PQLValuable) newFromSqliteStatement:atIndex:]

	// instance methods
	-[NSURL(PQLValuable) sqliteBind:index:]

NSUUID(PQLValuable)
	// class methods
	+[NSUUID(PQLValuable) newFromSqliteValue:]
	+[NSUUID(PQLValuable) newFromSqliteStatement:atIndex:]

	// instance methods
	-[NSUUID(PQLValuable) sqliteBind:index:]

NSObject(PQLResultSetInitializer)
	// instance methods
	-[NSObject(PQLResultSetInitializer) initFromPQLResultSet:error:]

01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSBlock 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 0300 /usr/lib/libobjc.A.dylib: NSObject 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 0500 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 0200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
