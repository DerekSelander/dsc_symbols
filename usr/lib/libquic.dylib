|| __TEXT.__text _quic_enable_nw_verbose_logging
|| __TEXT.__text _quic_enable_verbose_logging
|| __TEXT.__text _quic_fillout_definition_callbacks
|| __TEXT.__text _quic_shorthand_describe_entry
__ CoreFoundation: _CFGetTypeID
__ CoreFoundation: _CFPreferencesCopyAppValue
__ CoreFoundation: _CFPreferencesGetAppBooleanValue
__ CoreFoundation: _CFPreferencesGetAppIntegerValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFStringCreateWithCString
__ CoreFoundation: _CFStringGetCString
__ CoreFoundation: _CFStringGetTypeID
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: _kCFAllocatorDefault
__ Foundation: _NSLog
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSString
__ Security: _sec_protocol_metadata_copy_quic_transport_parameters
__ Security: _sec_protocol_metadata_copy_serialized_session
__ Security: _sec_protocol_metadata_get_early_data_accepted
__ Security: _sec_protocol_metadata_get_negotiated_tls_ciphersuite
__ Security: _sec_protocol_options_copy_transport_specific_application_protocol
__ Security: _sec_protocol_options_set_allow_unknown_alpn_protos
__ Security: _sec_protocol_options_set_min_tls_protocol_version
__ Security: _sec_protocol_options_set_output_handler_access_block
__ Security: _sec_protocol_options_set_quic_transport_parameters
__ Security: _sec_protocol_options_set_quic_use_legacy_codepoint
__ Security: _sec_protocol_options_set_session_state
__ Security: _sec_protocol_options_set_session_update_block
__ Security: _sec_protocol_options_set_tls_certificate_compression_enabled
__ Security: _sec_protocol_options_set_tls_encryption_level_update_block
__ Security: _sec_protocol_options_set_tls_encryption_secret_update_block
__ Security: _sec_release
__ libSystem.B.dylib: _CCCryptorChaCha20
__ libSystem.B.dylib: _CCCryptorChaCha20Poly1305OneshotDecrypt
__ libSystem.B.dylib: _CCCryptorChaCha20Poly1305OneshotEncrypt
__ libSystem.B.dylib: _CCCryptorCreate
__ libSystem.B.dylib: _CCCryptorCreateWithMode
__ libSystem.B.dylib: _CCCryptorGCMAddAAD
__ libSystem.B.dylib: _CCCryptorGCMDecrypt
__ libSystem.B.dylib: _CCCryptorGCMEncrypt
__ libSystem.B.dylib: _CCCryptorGCMFinalize
__ libSystem.B.dylib: _CCCryptorGCMOneshotDecrypt
__ libSystem.B.dylib: _CCCryptorGCMOneshotEncrypt
__ libSystem.B.dylib: _CCCryptorGCMReset
__ libSystem.B.dylib: _CCCryptorGCMSetIV
__ libSystem.B.dylib: _CCCryptorRelease
__ libSystem.B.dylib: _CCCryptorUpdate
__ libSystem.B.dylib: _CCHKDFExpand
__ libSystem.B.dylib: _CCHKDFExtract
__ libSystem.B.dylib: _CCKDFParametersCreateHkdf
__ libSystem.B.dylib: _CCKDFParametersDestroy
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_assign
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __DefaultRuneLocale
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___maskrune
__ libSystem.B.dylib: ___memcpy_chk
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___stderrp
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __os_log_pack_fill
__ libSystem.B.dylib: __os_log_pack_size
__ libSystem.B.dylib: __xpc_type_string
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _backtrace
__ libSystem.B.dylib: _backtrace_symbols
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _cbrt
__ libSystem.B.dylib: _cc_clear
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_data_apply
__ libSystem.B.dylib: _dispatch_data_create
__ libSystem.B.dylib: _dispatch_data_create_map
__ libSystem.B.dylib: _dispatch_data_get_size
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_release
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _fprintf
__ libSystem.B.dylib: _fputc
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fwrite
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getprogname
__ libSystem.B.dylib: _index
__ libSystem.B.dylib: _inet_ntop
__ libSystem.B.dylib: _isatty
__ libSystem.B.dylib: _kdebug_is_enabled
__ libSystem.B.dylib: _kdebug_trace
__ libSystem.B.dylib: _mach_absolute_time
__ libSystem.B.dylib: _mach_get_times
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memset
__ libSystem.B.dylib: _memset_pattern16
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_pack_compose
__ libSystem.B.dylib: _os_log_pack_send
__ libSystem.B.dylib: _os_log_pack_send_and_compose
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_release
__ libSystem.B.dylib: _os_retain
__ libSystem.B.dylib: _os_variant_has_internal_diagnostics
__ libSystem.B.dylib: _reallocf
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _sysctlbyname
__ libSystem.B.dylib: _vsnprintf
__ libSystem.B.dylib: _xpc_array_apply
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_release
__ libSystem.B.dylib: _xpc_string_get_length
__ libSystem.B.dylib: _xpc_string_get_string_ptr
__ libnetwork.dylib: ___nw_create_backtrace_string
__ libnetwork.dylib: ___nwlog_dump_to_fd
__ libnetwork.dylib: ___nwlog_err_simulate_crash
__ libnetwork.dylib: ___nwlog_is_datapath_logging_enabled
__ libnetwork.dylib: ___nwlog_level_enabled
__ libnetwork.dylib: ___nwlog_obj
__ libnetwork.dylib: ___nwlog_override_fd
__ libnetwork.dylib: ___nwlog_pack
__ libnetwork.dylib: __nw_protocol_default_flow
__ libnetwork.dylib: __nw_protocol_default_path
__ libnetwork.dylib: __nw_protocol_invalid_flow
__ libnetwork.dylib: __nw_protocol_shared_flow
__ libnetwork.dylib: _nw_connection_cancel
__ libnetwork.dylib: _nw_connection_copy_protocol_metadata_on_queue
__ libnetwork.dylib: _nw_connection_force_cancel
__ libnetwork.dylib: _nw_connection_get_id
__ libnetwork.dylib: _nw_connection_set_queue
__ libnetwork.dylib: _nw_connection_set_state_changed_handler
__ libnetwork.dylib: _nw_connection_start
__ libnetwork.dylib: _nw_connection_state_to_string
__ libnetwork.dylib: _nw_endpoint_create_address
__ libnetwork.dylib: _nw_endpoint_get_address
__ libnetwork.dylib: _nw_endpoint_get_description
__ libnetwork.dylib: _nw_endpoint_get_type
__ libnetwork.dylib: _nw_error_create_posix_error
__ libnetwork.dylib: _nw_error_get_error_code
__ libnetwork.dylib: _nw_error_get_error_domain
__ libnetwork.dylib: _nw_frame_array_append
__ libnetwork.dylib: _nw_frame_array_append_array
__ libnetwork.dylib: _nw_frame_array_first
__ libnetwork.dylib: _nw_frame_array_foreach
__ libnetwork.dylib: _nw_frame_array_init
__ libnetwork.dylib: _nw_frame_array_is_empty
__ libnetwork.dylib: _nw_frame_array_prepend
__ libnetwork.dylib: _nw_frame_array_remove
__ libnetwork.dylib: _nw_frame_check_validity
__ libnetwork.dylib: _nw_frame_claim
__ libnetwork.dylib: _nw_frame_create
__ libnetwork.dylib: _nw_frame_finalize
__ libnetwork.dylib: _nw_frame_get_buffer
__ libnetwork.dylib: _nw_frame_get_external_data
__ libnetwork.dylib: _nw_frame_reset
__ libnetwork.dylib: _nw_frame_set_external_data
__ libnetwork.dylib: _nw_frame_unclaimed_bytes
__ libnetwork.dylib: _nw_frame_uses_external_data
__ libnetwork.dylib: _nw_interface_get_index
__ libnetwork.dylib: _nw_interface_get_name
__ libnetwork.dylib: _nw_interface_get_type
__ libnetwork.dylib: _nw_log_delta_to_ms
__ libnetwork.dylib: _nw_log_ms_to_delta
__ libnetwork.dylib: _nw_log_ring_append
__ libnetwork.dylib: _nw_log_ring_copyout
__ libnetwork.dylib: _nw_parameters_copy_context
__ libnetwork.dylib: _nw_parameters_copy_default_protocol_stack
__ libnetwork.dylib: _nw_parameters_set_server_mode
__ libnetwork.dylib: _nw_path_copy_endpoint
__ libnetwork.dylib: _nw_path_get_mtu
__ libnetwork.dylib: _nw_path_get_rtt_values
__ libnetwork.dylib: _nw_path_is_direct
__ libnetwork.dylib: _nw_path_uses_interface_type
__ libnetwork.dylib: _nw_protocol_copy_quic_connection_definition
__ libnetwork.dylib: _nw_protocol_copy_quic_stream_definition
__ libnetwork.dylib: _nw_protocol_copy_swift_tls_definition
__ libnetwork.dylib: _nw_protocol_copy_tls_definition
__ libnetwork.dylib: _nw_protocol_create_inbound_data
__ libnetwork.dylib: _nw_protocol_data_access_buffer
__ libnetwork.dylib: _nw_protocol_data_copy_outbound_subdata
__ libnetwork.dylib: _nw_protocol_data_get_ecn_flag
__ libnetwork.dylib: _nw_protocol_data_get_size
__ libnetwork.dylib: _nw_protocol_data_set_ecn_flag
__ libnetwork.dylib: _nw_protocol_data_trim
__ libnetwork.dylib: _nw_protocol_definition_set_copy_data_transfer_snapshot
__ libnetwork.dylib: _nw_protocol_definition_set_copy_establishment_report
__ libnetwork.dylib: _nw_protocol_definition_set_copy_metadata
__ libnetwork.dylib: _nw_protocol_definition_set_custom_flow_map_key_size
__ libnetwork.dylib: _nw_protocol_definition_set_destroy
__ libnetwork.dylib: _nw_protocol_definition_set_fallback_changed_handler
__ libnetwork.dylib: _nw_protocol_definition_set_flow_state_allocator
__ libnetwork.dylib: _nw_protocol_definition_set_globals_allocator
__ libnetwork.dylib: _nw_protocol_definition_set_handle_error
__ libnetwork.dylib: _nw_protocol_definition_set_handle_inbound
__ libnetwork.dylib: _nw_protocol_definition_set_handle_outbound
__ libnetwork.dylib: _nw_protocol_definition_set_inbound_events
__ libnetwork.dylib: _nw_protocol_definition_set_initialize
__ libnetwork.dylib: _nw_protocol_definition_set_instance_state_allocator
__ libnetwork.dylib: _nw_protocol_definition_set_link_state_update
__ libnetwork.dylib: _nw_protocol_definition_set_maximum_message_size_update
__ libnetwork.dylib: _nw_protocol_definition_set_message_size_handler
__ libnetwork.dylib: _nw_protocol_definition_set_multipath
__ libnetwork.dylib: _nw_protocol_definition_set_path_changed_handler
__ libnetwork.dylib: _nw_protocol_definition_set_start
__ libnetwork.dylib: _nw_protocol_definition_set_stop
__ libnetwork.dylib: _nw_protocol_definition_set_supports_discontiguous_data
__ libnetwork.dylib: _nw_protocol_definition_set_traffic_mgmt_update
__ libnetwork.dylib: _nw_protocol_establishment_report_create
__ libnetwork.dylib: _nw_protocol_implementation_finalize_pending_frames
__ libnetwork.dylib: _nw_protocol_instance_access_flow_state
__ libnetwork.dylib: _nw_protocol_instance_access_globals
__ libnetwork.dylib: _nw_protocol_instance_access_state
__ libnetwork.dylib: _nw_protocol_instance_add_inbound
__ libnetwork.dylib: _nw_protocol_instance_add_new_flow
__ libnetwork.dylib: _nw_protocol_instance_add_outbound
__ libnetwork.dylib: _nw_protocol_instance_assert_fallback_agent
__ libnetwork.dylib: _nw_protocol_instance_async
__ libnetwork.dylib: _nw_protocol_instance_async_if_needed
__ libnetwork.dylib: _nw_protocol_instance_clear_flow_for_key
__ libnetwork.dylib: _nw_protocol_instance_copy_association
__ libnetwork.dylib: _nw_protocol_instance_copy_endpoint
__ libnetwork.dylib: _nw_protocol_instance_copy_interface_for_path
__ libnetwork.dylib: _nw_protocol_instance_copy_options
__ libnetwork.dylib: _nw_protocol_instance_copy_path
__ libnetwork.dylib: _nw_protocol_instance_enumerate_flows
__ libnetwork.dylib: _nw_protocol_instance_establish_path
__ libnetwork.dylib: _nw_protocol_instance_flush_batched_input
__ libnetwork.dylib: _nw_protocol_instance_get_flow_for_key
__ libnetwork.dylib: _nw_protocol_instance_get_level
__ libnetwork.dylib: _nw_protocol_instance_get_logging_disabled
__ libnetwork.dylib: _nw_protocol_instance_get_maximum_message_size
__ libnetwork.dylib: _nw_protocol_instance_get_multipath_service
__ libnetwork.dylib: _nw_protocol_instance_get_sensitive_redacted
__ libnetwork.dylib: _nw_protocol_instance_get_stats
__ libnetwork.dylib: _nw_protocol_instance_get_stats_region
__ libnetwork.dylib: _nw_protocol_instance_ignore_future_path_changes
__ libnetwork.dylib: _nw_protocol_instance_notify_connection_id_changed
__ libnetwork.dylib: _nw_protocol_instance_notify_updated_message_properties
__ libnetwork.dylib: _nw_protocol_instance_process_external_input
__ libnetwork.dylib: _nw_protocol_instance_report_done
__ libnetwork.dylib: _nw_protocol_instance_report_ready
__ libnetwork.dylib: _nw_protocol_instance_reset_after_early_data
__ libnetwork.dylib: _nw_protocol_instance_schedule_wakeup
__ libnetwork.dylib: _nw_protocol_instance_set_flow_for_key
__ libnetwork.dylib: _nw_protocol_instance_set_flow_is_datagram
__ libnetwork.dylib: _nw_protocol_instance_set_is_datagram
__ libnetwork.dylib: _nw_protocol_instance_set_limit_outbound_data
__ libnetwork.dylib: _nw_protocol_instance_set_link_flow_controlled
__ libnetwork.dylib: _nw_protocol_instance_set_wakeup_handler
__ libnetwork.dylib: _nw_protocol_instance_tear_down_path
__ libnetwork.dylib: _nw_protocol_instance_unassert_fallback_agent
__ libnetwork.dylib: _nw_protocol_instance_update_outbound_data_limit
__ libnetwork.dylib: _nw_protocol_instance_wait_for_early_data
__ libnetwork.dylib: _nw_protocol_metadata_copy_original
__ libnetwork.dylib: _nw_protocol_metadata_create_reply
__ libnetwork.dylib: _nw_protocol_metadata_create_singleton
__ libnetwork.dylib: _nw_protocol_metadata_is_quic_connection
__ libnetwork.dylib: _nw_protocol_metadata_is_quic_stream
__ libnetwork.dylib: _nw_protocol_metadata_supports_replies
__ libnetwork.dylib: _nw_protocol_options_copy
__ libnetwork.dylib: _nw_protocol_options_get_log_id_num
__ libnetwork.dylib: _nw_protocol_options_get_log_id_str
__ libnetwork.dylib: _nw_protocol_options_is_quic_stream
__ libnetwork.dylib: _nw_protocol_request_outbound_data
__ libnetwork.dylib: _nw_protocol_stack_clear_application_protocols
__ libnetwork.dylib: _nw_protocol_stack_prepend_application_protocol
__ libnetwork.dylib: _nw_protocol_stack_set_original_proxied_transport_protocol
__ libnetwork.dylib: _nw_protocol_stack_set_transport_protocol
__ libnetwork.dylib: _nw_queue_context_target_dispatch_queue
__ libnetwork.dylib: _nw_quic_access_application_result_on_queue
__ libnetwork.dylib: _nw_quic_access_token_on_queue
__ libnetwork.dylib: _nw_quic_connection_copy_sec_protocol_options
__ libnetwork.dylib: _nw_quic_connection_copy_stream_metadata
__ libnetwork.dylib: _nw_quic_connection_execute_locked
__ libnetwork.dylib: _nw_quic_connection_execute_max_streams_update_block
__ libnetwork.dylib: _nw_quic_connection_execute_session_state_update_block
__ libnetwork.dylib: _nw_quic_connection_get_ack_delay_size
__ libnetwork.dylib: _nw_quic_connection_get_application_result_handler
__ libnetwork.dylib: _nw_quic_connection_get_datagram_variant_flow_id_enabled
__ libnetwork.dylib: _nw_quic_connection_get_disable_ecn
__ libnetwork.dylib: _nw_quic_connection_get_disable_ecn_echo
__ libnetwork.dylib: _nw_quic_connection_get_force_version_negotiation
__ libnetwork.dylib: _nw_quic_connection_get_idle_timeout
__ libnetwork.dylib: _nw_quic_connection_get_initial_max_data
__ libnetwork.dylib: _nw_quic_connection_get_initial_max_stream_data_bidirectional_local
__ libnetwork.dylib: _nw_quic_connection_get_initial_max_stream_data_bidirectional_remote
__ libnetwork.dylib: _nw_quic_connection_get_initial_max_stream_data_unidirectional
__ libnetwork.dylib: _nw_quic_connection_get_initial_max_streams_bidirectional
__ libnetwork.dylib: _nw_quic_connection_get_initial_max_streams_unidirectional
__ libnetwork.dylib: _nw_quic_connection_get_initial_packet_size
__ libnetwork.dylib: _nw_quic_connection_get_keepalive_count
__ libnetwork.dylib: _nw_quic_connection_get_keepalive_handler
__ libnetwork.dylib: _nw_quic_connection_get_local_max_streams_bidirectional_handler
__ libnetwork.dylib: _nw_quic_connection_get_local_max_streams_unidirectional_handler
__ libnetwork.dylib: _nw_quic_connection_get_max_datagram_frame_size
__ libnetwork.dylib: _nw_quic_connection_get_max_udp_payload_size
__ libnetwork.dylib: _nw_quic_connection_get_migration_for_non_transport
__ libnetwork.dylib: _nw_quic_connection_get_peer_idle_timeout_handler
__ libnetwork.dylib: _nw_quic_connection_get_pmtud
__ libnetwork.dylib: _nw_quic_connection_get_pmtud_for_non_transport
__ libnetwork.dylib: _nw_quic_connection_get_pmtud_ignore_cost
__ libnetwork.dylib: _nw_quic_connection_get_remote_max_streams_bidirectional_handler
__ libnetwork.dylib: _nw_quic_connection_get_remote_max_streams_unidirectional_handler
__ libnetwork.dylib: _nw_quic_connection_get_retry
__ libnetwork.dylib: _nw_quic_connection_get_session_state
__ libnetwork.dylib: _nw_quic_connection_get_source_connection_id_length
__ libnetwork.dylib: _nw_quic_connection_get_use_swift_tls
__ libnetwork.dylib: _nw_quic_connection_inject_packet_handler
__ libnetwork.dylib: _nw_quic_connection_set_application_error_internal
__ libnetwork.dylib: _nw_quic_connection_set_application_error_reason
__ libnetwork.dylib: _nw_quic_connection_set_application_result_handler
__ libnetwork.dylib: _nw_quic_connection_set_close_with_error_handler
__ libnetwork.dylib: _nw_quic_connection_set_is_early_data_accepted
__ libnetwork.dylib: _nw_quic_connection_set_keepalive_handler
__ libnetwork.dylib: _nw_quic_connection_set_link_flow_controlled_handler
__ libnetwork.dylib: _nw_quic_connection_set_local_max_streams_bidirectional_handler
__ libnetwork.dylib: _nw_quic_connection_set_local_max_streams_unidirectional_handler
__ libnetwork.dylib: _nw_quic_connection_set_max_data_handler
__ libnetwork.dylib: _nw_quic_connection_set_max_stream_data_bidirectional_local_handler
__ libnetwork.dylib: _nw_quic_connection_set_max_stream_data_bidirectional_remote_handler
__ libnetwork.dylib: _nw_quic_connection_set_max_stream_data_unidirectional_handler
__ libnetwork.dylib: _nw_quic_connection_set_sec_protocol_metadata
__ libnetwork.dylib: _nw_quic_connection_set_stream_metadata
__ libnetwork.dylib: _nw_quic_create_connection_metadata
__ libnetwork.dylib: _nw_quic_create_stream_metadata
__ libnetwork.dylib: _nw_quic_report_application_result_on_queue
__ libnetwork.dylib: _nw_quic_save_token_on_queue
__ libnetwork.dylib: _nw_quic_stream_copy_shared_connection_options
__ libnetwork.dylib: _nw_quic_stream_get_is_datagram
__ libnetwork.dylib: _nw_quic_stream_get_is_unidirectional
__ libnetwork.dylib: _nw_quic_stream_set_application_error_handler
__ libnetwork.dylib: _nw_quic_stream_set_application_error_internal
__ libnetwork.dylib: _nw_quic_stream_set_connection_metadata
__ libnetwork.dylib: _nw_quic_stream_set_datagram_variant_flow_id
__ libnetwork.dylib: _nw_quic_stream_set_has_datagram_variant_flow_id
__ libnetwork.dylib: _nw_quic_stream_set_id
__ libnetwork.dylib: _nw_quic_stream_set_type
__ libnetwork.dylib: _nw_quic_stream_set_usable_datagram_frame_size
__ libnetwork.dylib: _nw_release
__ libnetwork.dylib: _nw_retain
__ libnetwork.dylib: _nw_settings_register_quic_log_debug_updates
__ libnetwork.dylib: _nw_swift_tls_create_options
__ libnetwork.dylib: _nw_tls_copy_sec_protocol_metadata
__ libnetwork.dylib: _nw_tls_copy_sec_protocol_options
__ libnetwork.dylib: _nw_tls_create_options
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_storeStrong
