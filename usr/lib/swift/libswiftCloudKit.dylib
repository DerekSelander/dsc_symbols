|| __DATA.__common ___sTestOverridesAvailable
|| __DATA.__common __swift_FORCE_LOAD_$_swiftCloudKit
|| __DATA.__data _$s8CloudKit12StreamHandleP05inputC03forScsy10Foundation4DataVs5Error_pGSnySiG_tYaKFTjTu
|| __DATA.__data _$s8CloudKit12StreamHandleP7readAll2in10Foundation4DataVSnySiG_tYaKFTjTu
|| __DATA.__data _$s8CloudKit12StreamHandlePAAE7readAll2in10Foundation4DataVSnySiG_tYaKFTu
|| __DATA.__data _$s8CloudKit17AssetStreamHandleC04makecdE04from4with3forAC10Foundation3URLV_AH4DataVSStYaKFZTu
|| __DATA.__data _$s8CloudKit17AssetStreamHandleC05inputD03forScsy10Foundation4DataVs5Error_pGSnySiG_tYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE11recordZones3forSDySo14CKRecordZoneIDCs6ResultOySo0gH0Cs5Error_pGGSayAGG_tYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE12subscription3forSo14CKSubscriptionCSS_tYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE13modifyRecords6saving8deleting10savePolicy10atomicallySDySo10CKRecordIDCs6ResultOySo0K0Cs5Error_pGG0H7Results_SDyAjLyytsAO_pGG06deleteO0tSayANG_SayAJGSo0k4SaveI0VSbtYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE13subscriptions3forSDySSs6ResultOySo14CKSubscriptionCs5Error_pGGSaySSG_tYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE14configuredWith13configuration5group4bodyxSo24CKOperationConfigurationCSg_So0I5GroupCSgxABYaKXEtYaKlFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE15databaseChanges5since12resultsLimitSayAbCE14DatabaseChangeO12ModificationVG13modifications_SayAH8DeletionVG9deletionsSo08CKServerJ5TokenC06changeP0Sb10moreComingtARSg_SiSgtYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE17modifyRecordZones6saving8deletingSDySo14CKRecordZoneIDCs6ResultOySo0iJ0Cs5Error_pGG11saveResults_SDyAhJyytsAM_pGG06deleteO0tSayALG_SayAHGtYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE17recordZoneChanges02inE4With5since11desiredKeys12resultsLimitSDySo10CKRecordIDCs6ResultOyAbCE06RecordE6ChangeO12ModificationVs5Error_pGG021modificationResultsByO0_SayAN8DeletionVG9deletionsSo08CKServerR5TokenC11changeTokenSb10moreComingtSo0neO0C_AZSgSaySSGSgSiSgtYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE18deleteSubscription6withIDS2S_tYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE19modifySubscriptions6saving8deletingSDySSs6ResultOySo14CKSubscriptionCs5Error_pGG11saveResults_SDySSAHyytsAK_pGG06deleteL0tSayAJG_SaySSGtYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE7records19continuingMatchFrom11desiredKeys12resultsLimitSaySo10CKRecordIDC_s6ResultOySo0L0Cs5Error_pGtG12matchResults_So13CKQueryCursorCSg05queryS0tAS_SaySSGSgSitYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE7records3for11desiredKeysSDySo10CKRecordIDCs6ResultOySo0H0Cs5Error_pGGSayAHG_SaySSGSgtYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE7records8matching10inZoneWith11desiredKeys12resultsLimitSaySo10CKRecordIDC_s6ResultOySo0M0Cs5Error_pGtG12matchResults_So13CKQueryCursorCSg05queryT0tSo0S0C_So0mgN0CSgSaySSGSgSitYaKFTu
|| __DATA.__data _$sSo10CKDatabaseC8CloudKitE7records8matching10inZoneWithSaySo8CKRecordCGSo7CKQueryC_So0iG2IDCSgtYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE14configuredWith13configuration5group4bodyxSo24CKOperationConfigurationCSg_So0I5GroupCSgxABYaKXEtYaKlFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE14shareMetadatas3forSDy10Foundation3URLVs6ResultOySo15CKShareMetadataCs5Error_pGGSayAHG_tYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE14userIdentities15forPhoneNumbersSDySSSo14CKUserIdentityCGSaySSG_tYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE14userIdentities16forUserRecordIDsSDySo10CKRecordIDCSo14CKUserIdentityCGSayAGG_tYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE14userIdentities17forEmailAddressesSDySSSo14CKUserIdentityCGSaySSG_tYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE17shareParticipants15forPhoneNumbersSDySSs6ResultOySo18CKShareParticipantCs5Error_pGGSaySSG_tYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE17shareParticipants16forUserRecordIDsSDySo10CKRecordIDCs6ResultOySo18CKShareParticipantCs5Error_pGGSayAGG_tYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE17shareParticipants17forEmailAddressesSDySSs6ResultOySo18CKShareParticipantCs5Error_pGGSaySSG_tYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE18longLivedOperation3forSo11CKOperationCSgSS_tYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE24allLongLivedOperationIDsSaySSGyYaKFTu
|| __DATA.__data _$sSo11CKContainerC8CloudKitE6acceptySDySo15CKShareMetadataCs6ResultOySo0E0Cs5Error_pGGSayAFGYaKFTu
|| __DATA.__data _CKCNContactEmailAddressesKey
|| __DATA.__data _CKCNContactPhoneNumbersKey
|| __DATA.__data _CKSQLiteTOCTableEntryCreatingClassName
|| __DATA.__data _CKSQLiteTOCTableEntryDbTablePropertyName
|| __DATA.__data _CKSQLiteTOCTableEntryDbVersionPropertyName
|| __DATA.__data _CKSQLiteTOCTableEntryGroupIDPropertyName
|| __DATA.__data _CKSQLiteTOCTableEntryPropertyDataName
|| __DATA.__data _CKSQLiteTOCTableEntrySchemaPropertyName
|| __DATA.__data _CKSQLiteTOCTableGroupTableCreatingClassPropertyName
|| __DATA.__data _CKSQLiteTOCTableGroupTableGroupDataPropertyName
|| __DATA.__data _CKSQLiteTOCTableGroupTableGroupIDPropertyName
|| __DATA.__data _CKSQLiteTOCTableGroupTableGroupNamePropertyName
|| __DATA.__data _CKSQLiteTOCTableGroupTableLastUsedPropertyName
|| __DATA.__data _CKSQLiteTableGroupExpiryFileRemovalKey
|| __DATA.__data _OBJC_METACLASS_$__TtC8CloudKit17AssetStreamHandle
|| __DATA.__data _ck_log_initialization_block
|| __DATA.__data _kCKOperationCallbackQueueName
|| __DATA.__objc_data _$s8CloudKit17AssetStreamHandleCN
|| __DATA.__objc_data _OBJC_CLASS_$_CKAccountOverrideInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CKAllowedSharingOptions
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetCopyInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetDownloadPreauthorization
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetDownloadStagingInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetDownloadStagingManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetRepairOperationUtilities
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetRepairScheduler
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetRereferenceInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetReuploadExpectedProperties
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetTransferOptions
|| __DATA.__objc_data _OBJC_CLASS_$_CKAssetUploadRequestMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_CKCoalescer
|| __DATA.__objc_data _OBJC_CLASS_$_CKCodeProto2Any
|| __DATA.__objc_data _OBJC_CLASS_$_CKCodeProto2ProtectedEnvelope
|| __DATA.__objc_data _OBJC_CLASS_$_CKCodeRecordTransport
|| __DATA.__objc_data _OBJC_CLASS_$_CKCodeService
|| __DATA.__objc_data _OBJC_CLASS_$_CKCodeServiceImplementation
|| __DATA.__objc_data _OBJC_CLASS_$_CKContactsSupport
|| __DATA.__objc_data _OBJC_CLASS_$_CKConvenienceConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CKDCancelToken
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPDate
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPLocationCoordinate
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPRecordIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPRecordReference
|| __DATA.__objc_data _OBJC_CLASS_$_CKDPRecordZoneIdentifier
|| __DATA.__objc_data _OBJC_CLASS_$_CKDatabaseNotification
|| __DATA.__objc_data _OBJC_CLASS_$_CKDeclarativePredicateValidator
|| __DATA.__objc_data _OBJC_CLASS_$_CKDeviceToDeviceShareInvitationToken
|| __DATA.__objc_data _OBJC_CLASS_$_CKDirectoryPurger
|| __DATA.__objc_data _OBJC_CLASS_$_CKDiscoverAllContactsOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CKDiscoverUserInfosOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CKDiscoveredUserInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CKException
|| __DATA.__objc_data _OBJC_CLASS_$_CKFetchArchivedRecordsOptions
|| __DATA.__objc_data _OBJC_CLASS_$_CKFetchRecordZoneChangesOptions
|| __DATA.__objc_data _OBJC_CLASS_$_CKLocationSortDescriptor
|| __DATA.__objc_data _OBJC_CLASS_$_CKMediaItemMaker
|| __DATA.__objc_data _OBJC_CLASS_$_CKMergeableDeltaID
|| __DATA.__objc_data _OBJC_CLASS_$_CKMovePhotosChange
|| __DATA.__objc_data _OBJC_CLASS_$_CKMultiValueMergeableDeltaRegister
|| __DATA.__objc_data _OBJC_CLASS_$_CKMultiValueMergeableDeltaRegisterState
|| __DATA.__objc_data _OBJC_CLASS_$_CKMultiValueRegister
|| __DATA.__objc_data _OBJC_CLASS_$_CKObject
|| __DATA.__objc_data _OBJC_CLASS_$_CKOperationGroupSystemImposedInfoConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CKOperationInMemoryAssetInfo
|| __DATA.__objc_data _OBJC_CLASS_$_CKOperationMMCSRequestOptions
|| __DATA.__objc_data _OBJC_CLASS_$_CKPackageDB
|| __DATA.__objc_data _OBJC_CLASS_$_CKPackageItem
|| __DATA.__objc_data _OBJC_CLASS_$_CKPackageSection
|| __DATA.__objc_data _OBJC_CLASS_$_CKPackageUploadRequestMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_CKPostSharingContext
|| __DATA.__objc_data _OBJC_CLASS_$_CKPreSharingContext
|| __DATA.__objc_data _OBJC_CLASS_$_CKPredicateValidator
|| __DATA.__objc_data _OBJC_CLASS_$_CKPublicKey
|| __DATA.__objc_data _OBJC_CLASS_$_CKQuery
|| __DATA.__objc_data _OBJC_CLASS_$_CKQueryNotification
|| __DATA.__objc_data _OBJC_CLASS_$_CKRecordGraph
|| __DATA.__objc_data _OBJC_CLASS_$_CKRecordObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CKRecordZoneNotification
|| __DATA.__objc_data _OBJC_CLASS_$_CKReplaceDeltasRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CKResult
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLite
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteCacheTable
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteCacheTableEntry
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteDatabase
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteEnumerator
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteError
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteGenericTable
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteGenericTableGroup
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteTOCTable
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteTOCTableBase
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteTOCTableEntry
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteTOCTableGroup
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteTOCTableGroupTable
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteTable
|| __DATA.__objc_data _OBJC_CLASS_$_CKSQLiteTableGroup
|| __DATA.__objc_data _OBJC_CLASS_$_CKSharingContext
|| __DATA.__objc_data _OBJC_CLASS_$_CKSignatureGenerator
|| __DATA.__objc_data _OBJC_CLASS_$_CKStreamingAssetAppendContext
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyncEngine
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyncEngineBatch
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyncEngineConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyncEngineFetchChangesOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyncEngineFetchRecordZoneChangesConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyncEngineMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyncEngineModifyPendingChangesOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CKSyncEngineRecordModification
|| __DATA.__objc_data _OBJC_CLASS_$_CKSystemSharingUIObserver
|| __DATA.__objc_data _OBJC_CLASS_$_CKTapToRadarManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKTapToRadarRequest
|| __DATA.__objc_data _OBJC_CLASS_$_CKThrottleTable
|| __DATA.__objc_data _OBJC_CLASS_$_CKTuple3
|| __DATA.__objc_data _OBJC_CLASS_$_CKTuple4
|| __DATA.__objc_data _OBJC_CLASS_$_CKTuple5
|| __DATA.__objc_data _OBJC_CLASS_$_CKUndeprecatedCodeFunctionInvokeOperation
|| __DATA.__objc_data _OBJC_CLASS_$_CKUploadRequestConfiguration
|| __DATA.__objc_data _OBJC_CLASS_$_CKUploadRequestManager
|| __DATA.__objc_data _OBJC_CLASS_$_CKUploadRequestManagerInternals
|| __DATA.__objc_data _OBJC_CLASS_$_CKUploadRequestManagerResponseActionThrottler
|| __DATA.__objc_data _OBJC_CLASS_$_CKUploadRequestManagerStateMachine
|| __DATA.__objc_data _OBJC_CLASS_$_CKUploadRequestMetadata
|| __DATA.__objc_data _OBJC_CLASS_$_CKUploadRequestPersistentStore
|| __DATA.__objc_data _OBJC_CLASS_$_CKUserNotificationUtilities
|| __DATA.__objc_data _OBJC_CLASS_$__TtC8CloudKit17AssetStreamHandle
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAccountOverrideInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAllowedSharingOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetCopyInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetDownloadPreauthorization
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetDownloadStagingInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetDownloadStagingManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetRepairOperationUtilities
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetRepairScheduler
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetRereferenceInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetReuploadExpectedProperties
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetTransferOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_CKAssetUploadRequestMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCoalescer
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCodeProto2Any
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCodeProto2ProtectedEnvelope
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCodeRecordTransport
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCodeService
|| __DATA.__objc_data _OBJC_METACLASS_$_CKCodeServiceImplementation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKContactsSupport
|| __DATA.__objc_data _OBJC_METACLASS_$_CKConvenienceConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDCancelToken
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPDate
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPLocationCoordinate
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPRecordIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPRecordReference
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDPRecordZoneIdentifier
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDatabaseNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDeclarativePredicateValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDeviceToDeviceShareInvitationToken
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDirectoryPurger
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDiscoverAllContactsOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDiscoverUserInfosOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKDiscoveredUserInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CKException
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFetchArchivedRecordsOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_CKFetchRecordZoneChangesOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_CKLocationSortDescriptor
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMediaItemMaker
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMergeableDeltaID
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMovePhotosChange
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMultiValueMergeableDeltaRegister
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMultiValueMergeableDeltaRegisterState
|| __DATA.__objc_data _OBJC_METACLASS_$_CKMultiValueRegister
|| __DATA.__objc_data _OBJC_METACLASS_$_CKObject
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOperationGroupSystemImposedInfoConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOperationInMemoryAssetInfo
|| __DATA.__objc_data _OBJC_METACLASS_$_CKOperationMMCSRequestOptions
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPackageDB
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPackageItem
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPackageSection
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPackageUploadRequestMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPostSharingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPreSharingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPredicateValidator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKPublicKey
|| __DATA.__objc_data _OBJC_METACLASS_$_CKQuery
|| __DATA.__objc_data _OBJC_METACLASS_$_CKQueryNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_CKRecordGraph
|| __DATA.__objc_data _OBJC_METACLASS_$_CKRecordObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CKRecordZoneNotification
|| __DATA.__objc_data _OBJC_METACLASS_$_CKReplaceDeltasRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CKResult
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLite
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteCacheTable
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteCacheTableEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteDatabase
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteEnumerator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteError
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteGenericTable
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteGenericTableGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteTOCTable
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteTOCTableBase
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteTOCTableEntry
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteTOCTableGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteTOCTableGroupTable
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteTable
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSQLiteTableGroup
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSharingContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSignatureGenerator
|| __DATA.__objc_data _OBJC_METACLASS_$_CKStreamingAssetAppendContext
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyncEngine
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyncEngineBatch
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyncEngineConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyncEngineFetchChangesOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyncEngineFetchRecordZoneChangesConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyncEngineMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyncEngineModifyPendingChangesOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSyncEngineRecordModification
|| __DATA.__objc_data _OBJC_METACLASS_$_CKSystemSharingUIObserver
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTapToRadarManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTapToRadarRequest
|| __DATA.__objc_data _OBJC_METACLASS_$_CKThrottleTable
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTuple3
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTuple4
|| __DATA.__objc_data _OBJC_METACLASS_$_CKTuple5
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUndeprecatedCodeFunctionInvokeOperation
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUploadRequestConfiguration
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUploadRequestManager
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUploadRequestManagerInternals
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUploadRequestManagerResponseActionThrottler
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUploadRequestManagerStateMachine
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUploadRequestMetadata
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUploadRequestPersistentStore
|| __DATA.__objc_data _OBJC_METACLASS_$_CKUserNotificationUtilities
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeProto2Any._typeUrl
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeProto2Any._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeProto2ProtectedEnvelope._contents
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeProto2ProtectedEnvelope._encrypted
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeProto2ProtectedEnvelope._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeProto2ProtectedEnvelope._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeRecordTransport._contents
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeRecordTransport._encryptedMasterKey
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeRecordTransport._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeRecordTransport._localSerialization
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKCodeRecordTransport._wireSerialization
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPDate._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPDate._time
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPIdentifier._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPIdentifier._name
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPIdentifier._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPLocationCoordinate._altitude
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPLocationCoordinate._course
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPLocationCoordinate._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPLocationCoordinate._horizontalAccuracy
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPLocationCoordinate._latitude
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPLocationCoordinate._longitude
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPLocationCoordinate._speed
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPLocationCoordinate._timestamp
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPLocationCoordinate._verticalAccuracy
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._dateListValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._dateValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._doubleListValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._doubleValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._locationListValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._locationValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._referenceValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._signedListValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._signedValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._stringListValues
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordFieldValueEncryptedValue._stringValue
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordIdentifier._value
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordIdentifier._zoneIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordReference._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordReference._recordIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordReference._type
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordZoneIdentifier._databaseType
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordZoneIdentifier._has
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordZoneIdentifier._ownerIdentifier
|| __DATA.__objc_ivar _OBJC_IVAR_$_CKDPRecordZoneIdentifier._value
|| __DATA_CONST.__const _$s10Foundation4DataV8CloudKit21CKRecordValueProtocolADWP
|| __DATA_CONST.__const _$s10Foundation4DateV8CloudKit21CKRecordValueProtocolADWP
|| __DATA_CONST.__const _$s8CloudKit17AssetStreamHandleCAA0dE0AAWP
|| __DATA_CONST.__const _$s8CloudKit24CKRecordKeyValueIteratorVN
|| __DATA_CONST.__const _$s8CloudKit26CKRecordValueStoreIteratorVN
|| __DATA_CONST.__const _$sSS8CloudKit21CKRecordValueProtocolAAWP
|| __DATA_CONST.__const _$sSb8CloudKit21CKRecordValueProtocolAAWP
|| __DATA_CONST.__const _$sSd8CloudKit21CKRecordValueProtocolAAWP
|| __DATA_CONST.__const _$sSf8CloudKit21CKRecordValueProtocolAAWP
|| __DATA_CONST.__const _$sSi8CloudKit21CKRecordValueProtocolAAWP
|| __DATA_CONST.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO12ModificationVN
|| __DATA_CONST.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO8DeletionVN
|| __DATA_CONST.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeON
|| __DATA_CONST.__const _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO12ModificationVN
|| __DATA_CONST.__const _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO8DeletionVN
|| __DATA_CONST.__const _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeON
|| __DATA_CONST.__const _$sSo10CLLocationC8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$sSo11CKContainerC8CloudKitE11ApplicationON
|| __DATA_CONST.__const _$sSo11CKReferenceC8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$sSo16CKQueryOperationC8CloudKitE11desiredKeysSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo16CKQueryOperationC8CloudKitE16queryResultBlockys0F0OySo0A6CursorCSgs5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo16CKQueryOperationC8CloudKitE18recordMatchedBlockySo10CKRecordIDC_s6ResultOySo0H0Cs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo18CKNotificationInfoC8CloudKitE11desiredKeysSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo18CKNotificationInfoC8CloudKitE21alertLocalizationArgsSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo18CKNotificationInfoC8CloudKitE21titleLocalizationArgsSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo18CKNotificationInfoC8CloudKitE24subtitleLocalizationArgsSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo22CKDatabaseSubscriptionC8CloudKitE10recordTypeSSSgvpMV
|| __DATA_CONST.__const _$sSo23CKAcceptSharesOperationC8CloudKitE06acceptB11ResultBlockys0G0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo23CKAcceptSharesOperationC8CloudKitE19perShareResultBlockySo15CKShareMetadataC_s0H0OySo0J0Cs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo23CKFetchRecordsOperationC8CloudKitE05fetchB11ResultBlockys0G0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo23CKFetchRecordsOperationC8CloudKitE11desiredKeysSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo23CKFetchRecordsOperationC8CloudKitE20perRecordResultBlockySo10CKRecordIDC_s0H0OySo0J0Cs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo23CKRecordKeyValueSettingP8CloudKitEyAC0aC8Protocol_pSgSScipMV
|| __DATA_CONST.__const _$sSo23CKRecordKeyValueSettingP8CloudKitEyqd__SgSScAC0aC8ProtocolRd__luipMV
|| __DATA_CONST.__const _$sSo24CKModifyRecordsOperationC8CloudKitE019undeprecated_modifyB15CompletionBlockySaySo8CKRecordCGSg_SaySo0J2IDCGSgs5Error_pSgtcSgvpMV
|| __DATA_CONST.__const _$sSo24CKModifyRecordsOperationC8CloudKitE06modifyB11ResultBlockys0G0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo24CKModifyRecordsOperationC8CloudKitE18perRecordSaveBlockySo10CKRecordIDC_s6ResultOySo0J0Cs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo24CKModifyRecordsOperationC8CloudKitE20perRecordDeleteBlockySo10CKRecordIDC_s6ResultOyyts5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo24CKRecordZoneSubscriptionC8CloudKitE10recordTypeSSSgvpMV
|| __DATA_CONST.__const _$sSo25CKSystemSharingUIObserverC8CloudKitE06systemB19UIDidSaveShareBlockySo10CKRecordIDC_s6ResultOySo7CKShareCs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo25CKSystemSharingUIObserverC8CloudKitE06systemb9UIDidStopB5BlockySo10CKRecordIDC_s6ResultOyyts5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo27CKFetchRecordZonesOperationC8CloudKitE018undeprecated_fetchbC15CompletionBlockySDySo14CKRecordZoneIDCSo0kL0CGSg_s5Error_pSgtcSgvpMV
|| __DATA_CONST.__const _$sSo27CKFetchRecordZonesOperationC8CloudKitE03perB15ZoneResultBlockySo08CKRecordH2IDC_s0I0OySo0kH0Cs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo27CKFetchRecordZonesOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo28CKFetchWebAuthTokenOperationC8CloudKitE05fetchbcD11ResultBlockys0I0OySSs5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo28CKModifyRecordZonesOperationC8CloudKitE019undeprecated_modifybC15CompletionBlockySaySo12CKRecordZoneCGSg_SaySo0kL2IDCGSgs5Error_pSgtcSgvpMV
|| __DATA_CONST.__const _$sSo28CKModifyRecordZonesOperationC8CloudKitE03perB13ZoneSaveBlockySo08CKRecordH2IDC_s6ResultOySo0kH0Cs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo28CKModifyRecordZonesOperationC8CloudKitE03perB15ZoneDeleteBlockySo08CKRecordH2IDC_s6ResultOyyts5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo28CKModifyRecordZonesOperationC8CloudKitE06modifybC11ResultBlockys0H0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo29CKFetchShareMetadataOperationC8CloudKitE03perbC11ResultBlocky10Foundation3URLV_s0H0OySo07CKShareC0Cs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo29CKFetchShareMetadataOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo29CKFetchShareMetadataOperationC8CloudKitE21rootRecordDesiredKeysSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo29CKFetchSubscriptionsOperationC8CloudKitE05fetchB11ResultBlockys0G0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo29CKFetchSubscriptionsOperationC8CloudKitE15subscriptionIDsSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo29CKFetchSubscriptionsOperationC8CloudKitE26perSubscriptionResultBlockySS_s0H0OySo14CKSubscriptionCs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo29CKFetchSubscriptionsOperationC8CloudKitE32fetchSubscriptionCompletionBlockySDySSSo14CKSubscriptionCGSg_s5Error_pSgtcSgvpMV
|| __DATA_CONST.__const _$sSo30CKModifySubscriptionsOperationC8CloudKitE019undeprecated_modifyB15CompletionBlockySaySo14CKSubscriptionCGSg_SaySSGSgs5Error_pSgtcSgvpMV
|| __DATA_CONST.__const _$sSo30CKModifySubscriptionsOperationC8CloudKitE06modifyB11ResultBlockys0G0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo30CKModifySubscriptionsOperationC8CloudKitE06modifyB15CompletionBlockySaySo14CKSubscriptionCGSg_SaySSGSgs5Error_pSgtcSgvpMV
|| __DATA_CONST.__const _$sSo30CKModifySubscriptionsOperationC8CloudKitE23subscriptionIDsToDeleteSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo30CKModifySubscriptionsOperationC8CloudKitE24perSubscriptionSaveBlockySS_s6ResultOySo14CKSubscriptionCs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo30CKModifySubscriptionsOperationC8CloudKitE26perSubscriptionDeleteBlockySS_s6ResultOyyts5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo31CKFetchDatabaseChangesOperationC8CloudKitE018undeprecated_fetchbC15CompletionBlockySo19CKServerChangeTokenCSg_Sbs5Error_pSgtcSgvpMV
|| __DATA_CONST.__const _$sSo31CKFetchDatabaseChangesOperationC8CloudKitE05fetchbC11ResultBlockys0H0OySo19CKServerChangeTokenC06serverkL0_Sb10moreComingts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo33CKDiscoverUserIdentitiesOperationC8CloudKitE08discoverbC11ResultBlockys0H0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE018undeprecated_fetchbcD15CompletionBlockys5Error_pSgcSgvpMV
|| __DATA_CONST.__const _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE019undeprecated_recordC20FetchCompletionBlockySo08CKRecordC2IDC_So19CKServerChangeTokenCSg10Foundation4DataVSgSbs5Error_pSgtcSgvpMV
|| __DATA_CONST.__const _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE05fetchbcD11ResultBlockys0I0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE06recordC16FetchResultBlockySo08CKRecordC2IDC_s0J0OySo19CKServerChangeTokenC06serveroP0_10Foundation4DataVSg06clientopS0Sb10moreComingts5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE21recordWasChangedBlockySo10CKRecordIDC_s6ResultOySo0L0Cs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE27recordWithIDWasDeletedBlockySo10CKRecordIDC_SStcSgvpMV
|| __DATA_CONST.__const _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE31undeprecated_recordChangedBlockySo8CKRecordCcSgvpMV
|| __DATA_CONST.__const _$sSo33CKFetchShareParticipantsOperationC8CloudKitE03perB22ParticipantResultBlockySo24CKUserIdentityLookupInfoC_s0I0OySo07CKShareH0Cs5Error_pGtcSgvpMV
|| __DATA_CONST.__const _$sSo33CKFetchShareParticipantsOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo36CKDiscoverAllUserIdentitiesOperationC8CloudKitE08discoverbcD11ResultBlockys0I0Oyyts5Error_pGcSgvpMV
|| __DATA_CONST.__const _$sSo37CKFetchRecordZoneChangesConfigurationC8CloudKitE11desiredKeysSaySSGSgvpMV
|| __DATA_CONST.__const _$sSo6NSDataC8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$sSo6NSDateC8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$sSo7CKAssetC8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$sSo7CKShareC8CloudKitE14SystemFieldKeyON
|| __DATA_CONST.__const _$sSo7NSArrayC8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$sSo8CKRecordC8CloudKitE10SystemTypeON
|| __DATA_CONST.__const _$sSo8CKRecordC8CloudKitE14SystemFieldKeyON
|| __DATA_CONST.__const _$sSo8CKRecordC8CloudKitEySo0A5Value_pSgSScipMV
|| __DATA_CONST.__const _$sSo8NSNumberC8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$sSo8NSStringC8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$sSu8CloudKit21CKRecordValueProtocolAAWP
|| __DATA_CONST.__const _$ss4Int8V8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$ss5Int16V8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$ss5Int32V8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$ss5Int64V8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$ss5UInt8V8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$ss6UInt16V8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$ss6UInt32V8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _$ss6UInt64V8CloudKit21CKRecordValueProtocolACWP
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidChangeConnectedStatusNotification
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidChangeConnectedStatusNotificationConnectedUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidFailToSendOutgoingMessageNotification
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidFailToSendOutgoingMessageNotificationErrorUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidFailToSendOutgoingMessageNotificationMessageUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceiveIncomingMessageNotification
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceiveIncomingMessageNotificationMessageUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceiveMessageForTopicNotification
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceiveMessageForTopicNotificationTopicUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceiveMessageForTopicNotificationUserInfoUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceivePublicTokenNotification
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceivePublicTokenNotificationPublicTokenUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceiveTokenNotification
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceiveTokenNotificationIdentifierUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceiveTokenNotificationTokenUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReceiveTokenNotificationTopicUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidReconnectNotification
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidSendOutgoingMessageNotification
|| __DATA_CONST.__const _CKAPSMachServiceConnectionDidSendOutgoingMessageNotificationMessageUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionNotificationEnvironmentNameUserInfoKey
|| __DATA_CONST.__const _CKAPSMachServiceConnectionNotificationNamedDelegatePortUserInfoKey
|| __DATA_CONST.__const _CKAccountChangedNotification
|| __DATA_CONST.__const _CKAllTokensKey
|| __DATA_CONST.__const _CKAssetRepairContainerFormat
|| __DATA_CONST.__const _CKAssetRepairMissingAssetOrPackageRecordFieldHasRecovered
|| __DATA_CONST.__const _CKAssetRepairMissingAssetOrPackageRecordFieldRecoveredByDevice
|| __DATA_CONST.__const _CKAssetRepairMissingAssetOrPackageRecordFieldUnrecoverableDevices
|| __DATA_CONST.__const _CKAssetRepairMissingAssetRecordFieldAffectedRecordName
|| __DATA_CONST.__const _CKAssetRepairMissingAssetRecordFieldAffectedRecordType
|| __DATA_CONST.__const _CKAssetRepairMissingAssetRecordFieldFieldName
|| __DATA_CONST.__const _CKAssetRepairMissingAssetRecordFieldFileSignature
|| __DATA_CONST.__const _CKAssetRepairMissingAssetRecordFieldListIndex
|| __DATA_CONST.__const _CKAssetRepairMissingAssetRecordFieldReferenceSignature
|| __DATA_CONST.__const _CKAssetRepairMissingAssetRecordFieldZone
|| __DATA_CONST.__const _CKAssetRepairMissingAssetRecordType
|| __DATA_CONST.__const _CKAssetRepairMissingPackageRecordFieldAffectedRecordName
|| __DATA_CONST.__const _CKAssetRepairMissingPackageRecordFieldAffectedRecordType
|| __DATA_CONST.__const _CKAssetRepairMissingPackageRecordFieldFieldName
|| __DATA_CONST.__const _CKAssetRepairMissingPackageRecordFieldFileSignatures
|| __DATA_CONST.__const _CKAssetRepairMissingPackageRecordFieldReferenceSignatures
|| __DATA_CONST.__const _CKAssetRepairMissingPackageRecordFieldZone
|| __DATA_CONST.__const _CKAssetRepairMissingPackageRecordType
|| __DATA_CONST.__const _CKAssetRepairPushProxyFormat
|| __DATA_CONST.__const _CKAssetRepairZoneName
|| __DATA_CONST.__const _CKCarmelShareType
|| __DATA_CONST.__const _CKContainerIDKey
|| __DATA_CONST.__const _CKCurrentUserDefaultName
|| __DATA_CONST.__const _CKDHTTPHeaders
|| __DATA_CONST.__const _CKDiscretionaryMachServiceName
|| __DATA_CONST.__const _CKErrorAccountPrimaryEmailKey
|| __DATA_CONST.__const _CKErrorDescriptionKey
|| __DATA_CONST.__const _CKErrorDisabledAppLocalizedName
|| __DATA_CONST.__const _CKErrorDomain
|| __DATA_CONST.__const _CKErrorNotFoundItemIDKey
|| __DATA_CONST.__const _CKErrorOperationIDKey
|| __DATA_CONST.__const _CKErrorRetryAfterKey
|| __DATA_CONST.__const _CKErrorServerDescriptionKey
|| __DATA_CONST.__const _CKErrorUserDidResetEncryptedDataKey
|| __DATA_CONST.__const _CKEventMetricKeyMergeableAssetCount
|| __DATA_CONST.__const _CKEventMetricKeyMergeableFetchedDeltaCount
|| __DATA_CONST.__const _CKEventMetricKeyMergeableReplacedDeltaCount
|| __DATA_CONST.__const _CKEventMetricKeyMergeableSavedDeltaCount
|| __DATA_CONST.__const _CKEventMetricKeyMergeableSavedReplacementDeltaCount
|| __DATA_CONST.__const _CKEventMetricKeyMergeableValueCount
|| __DATA_CONST.__const _CKExtensionErrorPayloadKey
|| __DATA_CONST.__const _CKFreeformShareType
|| __DATA_CONST.__const _CKHTTPHeaderRequestUUID
|| __DATA_CONST.__const _CKHTTPHeaderRetryAfter
|| __DATA_CONST.__const _CKIdentityUpdateNotification
|| __DATA_CONST.__const _CKInternalErrorDomain
|| __DATA_CONST.__const _CKInternalUnderlyingHTTPStatusKey
|| __DATA_CONST.__const _CKOwnerDefaultName
|| __DATA_CONST.__const _CKPartialErrorsByItemIDKey
|| __DATA_CONST.__const _CKPhotosSharedLibraryShareType
|| __DATA_CONST.__const _CKPushEnvironmentServerPreferred
|| __DATA_CONST.__const _CKRecordAccessGrantedKey
|| __DATA_CONST.__const _CKRecordAccessKey
|| __DATA_CONST.__const _CKRecordChangedErrorAncestorRecordKey
|| __DATA_CONST.__const _CKRecordChangedErrorClientRecordKey
|| __DATA_CONST.__const _CKRecordChangedErrorServerRecordKey
|| __DATA_CONST.__const _CKRecordCreationDateKey
|| __DATA_CONST.__const _CKRecordCreatorUserRecordIDKey
|| __DATA_CONST.__const _CKRecordETagKey
|| __DATA_CONST.__const _CKRecordLastModifiedUserRecordIDKey
|| __DATA_CONST.__const _CKRecordModificationDateKey
|| __DATA_CONST.__const _CKRecordMovedDestinationIDKey
|| __DATA_CONST.__const _CKRecordNameZoneWideShare
|| __DATA_CONST.__const _CKRecordParentKey
|| __DATA_CONST.__const _CKRecordRecordIDKey
|| __DATA_CONST.__const _CKRecordShareIDKey
|| __DATA_CONST.__const _CKRecordShareInfoKey
|| __DATA_CONST.__const _CKRecordShareKey
|| __DATA_CONST.__const _CKRecordTypeShare
|| __DATA_CONST.__const _CKRecordTypeUserRecord
|| __DATA_CONST.__const _CKRecordZoneDefaultName
|| __DATA_CONST.__const _CKRecordZoneSystemZoneName
|| __DATA_CONST.__const _CKRequestUUID
|| __DATA_CONST.__const _CKSafariTabGroupsShareType
|| __DATA_CONST.__const _CKSchedulerDidRegisterXPCActivityNotification
|| __DATA_CONST.__const _CKSchedulerWillRegisterXPCActivityNotification
|| __DATA_CONST.__const _CKServerOwnerDefaultName
|| __DATA_CONST.__const _CKShareDarkPreviewImageAssetKey
|| __DATA_CONST.__const _CKSharePreviewImageAssetKey
|| __DATA_CONST.__const _CKShareSubtitleKey
|| __DATA_CONST.__const _CKShareThumbnailImageDataKey
|| __DATA_CONST.__const _CKShareTitleKey
|| __DATA_CONST.__const _CKShareTypeKey
|| __DATA_CONST.__const _CKSharingAccessAnyoneWithLinkOptionID
|| __DATA_CONST.__const _CKSharingAccessSpecifiedRecipientsOnlyOptionID
|| __DATA_CONST.__const _CKSharingAllowOthersToInviteGroupID
|| __DATA_CONST.__const _CKSharingAllowOthersToInviteMixedOptionID
|| __DATA_CONST.__const _CKSharingAllowOthersToInviteOptionID
|| __DATA_CONST.__const _CKSharingOnlyYouCanInviteOthersOptionID
|| __DATA_CONST.__const _CKSharingPermissionCanMakeChangesOptionID
|| __DATA_CONST.__const _CKSharingPermissionGroupID
|| __DATA_CONST.__const _CKSharingPermissionMixedOptionID
|| __DATA_CONST.__const _CKSharingPermissionViewOnlyOptionID
|| __DATA_CONST.__const _CKSharingWhoCanAccessGroupID
|| __DATA_CONST.__const _CKStreamingAssetChangedErrorServerStreamingAssetKey
|| __DATA_CONST.__const _CKUnderlyingFunctionErrorKey
|| __DATA_CONST.__const _CKUploadRequestManagerResponseActionErrorUserInfoKey
|| __DATA_CONST.__const _CKUploadRequestManagerResponseActionRetryUserInfoKey
|| __DATA_CONST.__const _CKWebSharingBaseTokenKey
|| __DATA_CONST.__const _CKWebSharingIsReadOnly
|| __DATA_CONST.__const _CKWebSharingIsShared
|| __DATA_CONST.__const _CKWebSharingProtectionDataKey
|| __DATA_CONST.__const __CKCloudKitContainerSetupInfoType
|| __DATA_CONST.__const __CKCloudKitContainerType
|| __DATA_CONST.__const __CKCloudKitPostShareType
|| __DATA_CONST.__const __CKCloudKitPreShareType
|| __DATA_CONST.__const __CKCloudKitSharingOptionsType
|| __DATA_CONST.__const _kCKAPSConnectionInitiateEntitlementKey
|| __DATA_CONST.__const _kCKAPSEnvironmentEntitlementString
|| __DATA_CONST.__const _kCKAccountChangedNotificationKey
|| __DATA_CONST.__const _kCKAccountWarmingUpNotificationKey
|| __DATA_CONST.__const _kCKAllowAccessDuringBuddyEntitlementKey
|| __DATA_CONST.__const _kCKAllowMasqueradingEntitlementKey
|| __DATA_CONST.__const _kCKAllowOnDeviceAssetStreamingKey
|| __DATA_CONST.__const _kCKAllowProtectionDataEntitlementKey
|| __DATA_CONST.__const _kCKAllowSetEnvironmentEntitlementKey
|| __DATA_CONST.__const _kCKAllowZoneProtectionDataEntitlementKey
|| __DATA_CONST.__const _kCKAnonymousAccountKey
|| __DATA_CONST.__const _kCKAssetChunkLength
|| __DATA_CONST.__const _kCKAssociatedApplicationIdentifierKey
|| __DATA_CONST.__const _kCKCDBShareResourceProvider
|| __DATA_CONST.__const _kCKCarmelShareURLSlug
|| __DATA_CONST.__const _kCKCarmelUnitTestContainerIdentifier
|| __DATA_CONST.__const _kCKChainPrivateKeyFieldName
|| __DATA_CONST.__const _kCKClientLogCollectionBotEmail
|| __DATA_CONST.__const _kCKCloudDocsContainerIdentifier
|| __DATA_CONST.__const _kCKCloudDocsShareURLSlug
|| __DATA_CONST.__const _kCKCloudDocsUnitTestContainerIdentifier
|| __DATA_CONST.__const _kCKCloudPhotosUnitTestContainerIdentifier
|| __DATA_CONST.__const _kCKCloudServicesCloudKitAnonymousServiceEntitlementKey
|| __DATA_CONST.__const _kCKCloudServicesCloudKitServiceEntitlementKey
|| __DATA_CONST.__const _kCKCloudServicesEntitlementKey
|| __DATA_CONST.__const _kCKCodeServiceURLByContainerAndServiceEntitlement
|| __DATA_CONST.__const _kCKCodeServiceURLByServiceEntitlement
|| __DATA_CONST.__const _kCKCodeServiceURLEntitlement
|| __DATA_CONST.__const _kCKCompleteParticipantVettingVettingRecordBaseTokenKey
|| __DATA_CONST.__const _kCKCompleteParticipantVettingVettingRecordContainerKey
|| __DATA_CONST.__const _kCKCompleteParticipantVettingVettingRecordContainerName
|| __DATA_CONST.__const _kCKCompleteParticipantVettingVettingRecordEmailKey
|| __DATA_CONST.__const _kCKCompleteParticipantVettingVettingRecordEncryptedKeyKey
|| __DATA_CONST.__const _kCKCompleteParticipantVettingVettingRecordEnvironmentKey
|| __DATA_CONST.__const _kCKCompleteParticipantVettingVettingRecordPhoneKey
|| __DATA_CONST.__const _kCKCompleteParticipantVettingVettingRecordRoutingKeyKey
|| __DATA_CONST.__const _kCKCompleteParticipantVettingVettingRecordShareTitleKey
|| __DATA_CONST.__const _kCKConfigBaseURLString
|| __DATA_CONST.__const _kCKContainerEnvironmentEntitlementKey
|| __DATA_CONST.__const _kCKContainerEnvironmentOverridesEntitlementKey
|| __DATA_CONST.__const _kCKContainerEnvironmentProduction
|| __DATA_CONST.__const _kCKContainerEnvironmentSandbox
|| __DATA_CONST.__const _kCKDProtobufContentType
|| __DATA_CONST.__const _kCKDefaultShareURLDisplayedHostname
|| __DATA_CONST.__const _kCKDefaultShareURLFullHostname
|| __DATA_CONST.__const _kCKDisplaysSystemAcceptPromptEntitlementKey
|| __DATA_CONST.__const _kCKEncryptedPublicSharingKeyFieldName
|| __DATA_CONST.__const _kCKExplicitCodeOperationURLEntitlementKey
|| __DATA_CONST.__const _kCKFreeformShareURLSlug
|| __DATA_CONST.__const _kCKFreeformUnitTestContainerIdentifier
|| __DATA_CONST.__const _kCKGenericShareURLSlug
|| __DATA_CONST.__const _kCKIdentityUpdateNotificationKey
|| __DATA_CONST.__const _kCKKeychainDomain
|| __DATA_CONST.__const _kCKKeynoteShareURLSlug
|| __DATA_CONST.__const _kCKLiveAccountKey
|| __DATA_CONST.__const _kCKMachServiceName
|| __DATA_CONST.__const _kCKNonLegacySharingURLEntitlementKey
|| __DATA_CONST.__const _kCKNotesShareURLSlug
|| __DATA_CONST.__const _kCKNotificationAPSAlertActionLocalizationKey
|| __DATA_CONST.__const _kCKNotificationAPSAlertBodyKey
|| __DATA_CONST.__const _kCKNotificationAPSAlertLaunchImageKey
|| __DATA_CONST.__const _kCKNotificationAPSAlertLocalizationArgsKey
|| __DATA_CONST.__const _kCKNotificationAPSAlertLocalizationKey
|| __DATA_CONST.__const _kCKNotificationAPSSubtitleLocalizationArgsKey
|| __DATA_CONST.__const _kCKNotificationAPSSubtitleLocalizationKey
|| __DATA_CONST.__const _kCKNotificationAPSTitleLocalizationArgsKey
|| __DATA_CONST.__const _kCKNotificationAPSTitleLocalizationKey
|| __DATA_CONST.__const _kCKNotificationCKKey
|| __DATA_CONST.__const _kCKNumbersShareURLSlug
|| __DATA_CONST.__const _kCKOutOfProcessUIEntitlementKey
|| __DATA_CONST.__const _kCKPCSServiceNameForContainerIdentifierMapEntitlementKey
|| __DATA_CONST.__const _kCKPackageClientDirectoryName
|| __DATA_CONST.__const _kCKPackageDaemonDirectoryName
|| __DATA_CONST.__const _kCKPackageGCInfoArchiverInfo
|| __DATA_CONST.__const _kCKPackageGCInfoPackageID
|| __DATA_CONST.__const _kCKPagesShareURLSlug
|| __DATA_CONST.__const _kCKParticipantPIIEntitlementKey
|| __DATA_CONST.__const _kCKPhotosShareURLSlug
|| __DATA_CONST.__const _kCKPhotosSharedLibraryShareURLSlug
|| __DATA_CONST.__const _kCKPrefixEntitlementKey
|| __DATA_CONST.__const _kCKPropertiesDescriptionKey
|| __DATA_CONST.__const _kCKPropertiesDescriptionValue
|| __DATA_CONST.__const _kCKRemindersShareURLSlug
|| __DATA_CONST.__const _kCKRemindersUnitTestContainerSuffix
|| __DATA_CONST.__const _kCKSafariTabGroupsShareURLSlug
|| __DATA_CONST.__const _kCKSafariTabGroupsUnitTestContainerIdentifier
|| __DATA_CONST.__const _kCKSetupBaseURLString
|| __DATA_CONST.__const _kCKShareDaemonPrefix
|| __DATA_CONST.__const _kCKStatusReportNotificationKey
|| __DATA_CONST.__const _kCKSupportServiceEntitlementKey
|| __DATA_CONST.__const _kCKSystemMachServiceName
|| __DATA_CONST.__const _kCKTestClouddMachServiceName
|| __DATA_CONST.__const _kCKUserManagerMachServiceName
|| __DATA_CONST.__const _kCKVettingURLSlug
|| __DATA_CONST.__const _kCKWillReloadAccountNotificationKey
|| __DATA_CONST.__const _kCKXPCConnectionInterrupted
|| __DATA_CONST.__const _kCloudKitKillSwitch
|| __DATA_CONST.__objc_const _OBJC_EHTYPE_$_CKException
|| __DATA_DIRTY.__common __sCKUseSystemInstalledBinaries
|| __DATA_DIRTY.__common __sCKUseSystemInstalledBinariesPredicate
|| __DATA_DIRTY.__common _ck_log_facility_asset
|| __DATA_DIRTY.__common _ck_log_facility_ck
|| __DATA_DIRTY.__common _ck_log_facility_ckdd
|| __DATA_DIRTY.__common _ck_log_facility_data_repair
|| __DATA_DIRTY.__common _ck_log_facility_distributed_sync
|| __DATA_DIRTY.__common _ck_log_facility_engine
|| __DATA_DIRTY.__common _ck_log_facility_logstats
|| __DATA_DIRTY.__common _ck_log_facility_mmcs
|| __DATA_DIRTY.__common _ck_log_facility_mock
|| __DATA_DIRTY.__common _ck_log_facility_notification_listener
|| __DATA_DIRTY.__common _ck_log_facility_op
|| __DATA_DIRTY.__common _ck_log_facility_pcs
|| __DATA_DIRTY.__common _ck_log_facility_request
|| __DATA_DIRTY.__common _ck_log_facility_scheduler
|| __DATA_DIRTY.__common _ck_log_facility_sql
|| __DATA_DIRTY.__common _ck_log_facility_status
|| __DATA_DIRTY.__common _ck_log_facility_traffic_binary
|| __DATA_DIRTY.__common _ck_log_initialization_predicate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAcceptSharesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAcceptSharesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAccountInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAggregateZonePCSOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAggregateZonePCSOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKApplicationPermissionGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKArchiveRecordsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKArchiveRecordsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKAssetReference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKBehaviorOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKCodeFunctionInvokeOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKCodeFunctionInvokeOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKCodeOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKCompleteParticipantVettingOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKCompleteParticipantVettingOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKContainer
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKContainerID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKContainerImplementation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKContainerOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKContainerSetupInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDPRecordFieldValueEncryptedValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDatabase
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDatabaseImplementation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDatabaseOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDatabaseOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDatabaseSubscription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDeserializeRecordModificationsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDeserializeRecordModificationsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDiscoverAllUserIdentitiesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDiscoverUserIdentitiesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDiscoverUserIdentitiesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKDiscretionaryOptions
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedData
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedDate
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedDateArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedDouble
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedDoubleArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedEmptyArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedLocation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedLocationArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedLongLong
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedLongLongArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedRecordValueStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedReference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedString
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEncryptedStringArray
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEntitlements
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEventMetric
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEventMetricInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEventOperationGroupInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKEventOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchArchivedRecordsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchArchivedRecordsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchDatabaseChangesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchDatabaseChangesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchMergeableDeltaMetadataOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchMergeableDeltaMetadataOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchMergeableDeltasOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchMergeableDeltasOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchNotificationChangesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchNotificationChangesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordChangesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordVersionsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordVersionsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordZoneChangesConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordZoneChangesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordZoneChangesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordZonesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordZonesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRecordsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchRegisteredBundleIDsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchShareMetadataOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchShareMetadataOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchShareParticipantKeyOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchShareParticipantKeyOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchShareParticipantsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchShareParticipantsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchSubscriptionsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchSubscriptionsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchUserQuotaOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchWebAuthTokenOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchWebAuthTokenOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFetchWhitelistedBundleIDsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFileMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFileOpenInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFileOpenResult
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKFrameworkFingerprint
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKInitiateParticipantVettingOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKInitiateParticipantVettingOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKInternalError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLogicalDeviceContext
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLogicalDeviceScopedDaemonProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKLogicalDeviceScopedStateManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMapShareURLsToInstalledBundleIDsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMapShareURLsToInstalledBundleIDsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMarkAssetBrokenOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMarkAssetBrokenOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMarkNotificationsReadOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMarkNotificationsReadOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMergeableDelta
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMergeableRecordValue
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMetric
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyBadgeOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyBadgeOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyRecordAccessOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyRecordAccessOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyRecordZonesOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyRecordZonesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyRecordsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyRecordsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifySubscriptionsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifySubscriptionsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyWebSharingOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKModifyWebSharingOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMovePhotosOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKMovePhotosOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNotification
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNotificationID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNotificationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKNotificationListener
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKObjCClass
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKObjCProperty
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKObjCType
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKOperationCallbackProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKOperationConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKOperationGroup
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKOperationGroupSystemImposedInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKOperationLifecycleAction
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKOperationMetrics
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPCSDiagnosticInformation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPackage
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPlaceholderOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPrettyError
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKProcessScopedDaemonProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKProcessScopedMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKProcessScopedStateManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPublishAssetsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKPublishAssetsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKQueryCursor
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKQueryOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKQueryOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKQuerySubscription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecord
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecordChange
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecordID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecordObserverManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecordValueStore
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecordXPCMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecordZone
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecordZoneID
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRecordZoneSubscription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKReference
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRepairAssetsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRepairAssetsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRepairZonePCSOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRepairZonePCSOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKReplaceMergeableDeltasOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKReplaceMergeableDeltasOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKScheduler
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKSchedulerActivity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKSerializeRecordModificationsOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKSerializeRecordModificationsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKServerChangeToken
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKShare
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKShareMetadata
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKShareParticipant
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKSignpost
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKStreamingAsset
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKSubscription
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKThrottle
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKThrottleManager
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKTuple2
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKUploadMergeableDeltasOperation
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKUploadMergeableDeltasOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKUserIdentity
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKUserIdentityLookupInfo
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKWeakObjectCallbackProxy
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_CLASS_$_CKZonePCSDiagnosticInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAcceptSharesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAcceptSharesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAccountInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAggregateZonePCSOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAggregateZonePCSOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKApplicationPermissionGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKArchiveRecordsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKArchiveRecordsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKAssetReference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKBehaviorOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKCodeFunctionInvokeOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKCodeFunctionInvokeOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKCodeOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKCompleteParticipantVettingOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKCompleteParticipantVettingOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKContainer
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKContainerID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKContainerImplementation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKContainerOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKContainerSetupInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDPRecordFieldValueEncryptedValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDatabase
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDatabaseImplementation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDatabaseOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDatabaseOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDatabaseSubscription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDeserializeRecordModificationsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDeserializeRecordModificationsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDiscoverAllUserIdentitiesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDiscoverUserIdentitiesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDiscoverUserIdentitiesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKDiscretionaryOptions
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedData
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedDate
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedDateArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedDouble
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedDoubleArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedEmptyArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedLocation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedLocationArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedLongLong
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedLongLongArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedRecordValueStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedReference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedString
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEncryptedStringArray
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEntitlements
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEventMetric
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEventMetricInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEventOperationGroupInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKEventOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchArchivedRecordsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchArchivedRecordsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchDatabaseChangesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchDatabaseChangesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchMergeableDeltaMetadataOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchMergeableDeltaMetadataOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchMergeableDeltasOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchMergeableDeltasOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchNotificationChangesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchNotificationChangesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordChangesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordVersionsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordVersionsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordZoneChangesConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordZoneChangesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordZoneChangesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordZonesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordZonesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRecordsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchRegisteredBundleIDsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchShareMetadataOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchShareMetadataOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchShareParticipantKeyOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchShareParticipantKeyOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchShareParticipantsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchShareParticipantsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchSubscriptionsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchSubscriptionsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchUserQuotaOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchWebAuthTokenOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchWebAuthTokenOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFetchWhitelistedBundleIDsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFileMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFileOpenInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFileOpenResult
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKFrameworkFingerprint
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKInitiateParticipantVettingOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKInitiateParticipantVettingOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKInternalError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLogicalDeviceContext
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLogicalDeviceScopedDaemonProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKLogicalDeviceScopedStateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMapShareURLsToInstalledBundleIDsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMapShareURLsToInstalledBundleIDsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMarkAssetBrokenOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMarkAssetBrokenOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMarkNotificationsReadOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMarkNotificationsReadOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMergeableDelta
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMergeableRecordValue
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMetric
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyBadgeOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyBadgeOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyRecordAccessOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyRecordAccessOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyRecordZonesOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyRecordZonesOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyRecordsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyRecordsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifySubscriptionsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifySubscriptionsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyWebSharingOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKModifyWebSharingOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMovePhotosOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKMovePhotosOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNotification
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNotificationID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNotificationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKNotificationListener
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKObjCClass
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKObjCProperty
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKObjCType
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKOperationCallbackProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKOperationConfiguration
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKOperationGroup
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKOperationGroupSystemImposedInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKOperationLifecycleAction
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKOperationMetrics
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPCSDiagnosticInformation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPackage
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPlaceholderOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPrettyError
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKProcessScopedDaemonProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKProcessScopedMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKProcessScopedStateManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPublishAssetsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKPublishAssetsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKQueryCursor
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKQueryOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKQueryOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKQuerySubscription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecord
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecordChange
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecordID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecordObserverManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecordValueStore
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecordXPCMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecordZone
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecordZoneID
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRecordZoneSubscription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKReference
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRepairAssetsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRepairAssetsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRepairZonePCSOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRepairZonePCSOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKReplaceMergeableDeltasOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKReplaceMergeableDeltasOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKRequestInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKScheduler
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKSchedulerActivity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKSerializeRecordModificationsOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKSerializeRecordModificationsOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKServerChangeToken
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKShare
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKShareMetadata
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKShareParticipant
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKSignpost
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKStreamingAsset
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKSubscription
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKThrottle
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKThrottleManager
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKTuple2
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKUploadMergeableDeltasOperation
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKUploadMergeableDeltasOperationInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKUserIdentity
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKUserIdentityLookupInfo
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKWeakObjectCallbackProxy
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKXPCConnection
|| __DATA_DIRTY.__objc_data _OBJC_METACLASS_$_CKZonePCSDiagnosticInformation
|| __TEXT.__const _$s10Foundation4DataV8CloudKit21CKRecordValueProtocolADMc
|| __TEXT.__const _$s10Foundation4DateV8CloudKit21CKRecordValueProtocolADMc
|| __TEXT.__const _$s8CloudKit12StreamHandleMp
|| __TEXT.__const _$s8CloudKit12StreamHandleP05inputC03forScsy10Foundation4DataVs5Error_pGSnySiG_tYaKFTq
|| __TEXT.__const _$s8CloudKit12StreamHandleP4sizeSivgTq
|| __TEXT.__const _$s8CloudKit12StreamHandleP5rangeSnySiGvgTq
|| __TEXT.__const _$s8CloudKit12StreamHandleP7readAll2in10Foundation4DataVSnySiG_tYaKFTq
|| __TEXT.__const _$s8CloudKit12StreamHandleTL
|| __TEXT.__const _$s8CloudKit17AssetStreamHandleC4fromAC10Foundation4DataV_tKcfCTq
|| __TEXT.__const _$s8CloudKit17AssetStreamHandleC4fromACs7Decoder_p_tKcfCTq
|| __TEXT.__const _$s8CloudKit17AssetStreamHandleC4sizeSivpMV
|| __TEXT.__const _$s8CloudKit17AssetStreamHandleC5rangeSnySiGvpMV
|| __TEXT.__const _$s8CloudKit17AssetStreamHandleCAA0dE0AAMc
|| __TEXT.__const _$s8CloudKit17AssetStreamHandleCMn
|| __TEXT.__const _$s8CloudKit17AssetStreamHandleCMo
|| __TEXT.__const _$s8CloudKit17AssetStreamHandleCSEAAMc
|| __TEXT.__const _$s8CloudKit17AssetStreamHandleCSeAAMc
|| __TEXT.__const _$s8CloudKit21CKRecordValueProtocolMp
|| __TEXT.__const _$s8CloudKit24CKRecordKeyValueIteratorVMn
|| __TEXT.__const _$s8CloudKit24CKRecordKeyValueIteratorVStAAMc
|| __TEXT.__const _$s8CloudKit26CKRecordValueStoreIteratorVMn
|| __TEXT.__const _$s8CloudKit26CKRecordValueStoreIteratorVStAAMc
|| __TEXT.__const _$s8CloudKit29CKShareTransferRepresentationV13ExportedShareV08transferE0QrvpZQOMQ
|| __TEXT.__const _$s8CloudKit29CKShareTransferRepresentationV13ExportedShareVMn
|| __TEXT.__const _$s8CloudKit29CKShareTransferRepresentationV13ExportedShareVyx_G16CoreTransferable0I0AAMc
|| __TEXT.__const _$s8CloudKit29CKShareTransferRepresentationV4bodyQrvpMV
|| __TEXT.__const _$s8CloudKit29CKShareTransferRepresentationV4bodyQrvpQOMQ
|| __TEXT.__const _$s8CloudKit29CKShareTransferRepresentationVMn
|| __TEXT.__const _$s8CloudKit29CKShareTransferRepresentationVyxG16CoreTransferable0dE0AAMc
|| __TEXT.__const _$sSC11CKErrorCodeLeV8CloudKitE12clientRecordSo8CKRecordCSgvpMV
|| __TEXT.__const _$sSC11CKErrorCodeLeV8CloudKitE12serverRecordSo8CKRecordCSgvpMV
|| __TEXT.__const _$sSC11CKErrorCodeLeV8CloudKitE14ancestorRecordSo8CKRecordCSgvpMV
|| __TEXT.__const _$sSC11CKErrorCodeLeV8CloudKitE17retryAfterSecondsSdSgvpMV
|| __TEXT.__const _$sSC11CKErrorCodeLeV8CloudKitE18movedDestinationIDSo08CKRecordG0CSgvpMV
|| __TEXT.__const _$sSC11CKErrorCodeLeV8CloudKitE21partialErrorsByItemIDSDys11AnyHashableVs5Error_pGSgvpMV
|| __TEXT.__const _$sSC11CKErrorCodeLeV8CloudKitE23underlyingFunctionErrors0G0_pSgvpMV
|| __TEXT.__const _$sSS8CloudKit21CKRecordValueProtocolAAMc
|| __TEXT.__const _$sSayxG8CloudKit21CKRecordValueProtocolA2bCRzlMc
|| __TEXT.__const _$sSb8CloudKit21CKRecordValueProtocolAAMc
|| __TEXT.__const _$sSd8CloudKit21CKRecordValueProtocolAAMc
|| __TEXT.__const _$sSf8CloudKit21CKRecordValueProtocolAAMc
|| __TEXT.__const _$sSi8CloudKit21CKRecordValueProtocolAAMc
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO12ModificationV6zoneIDSo012CKRecordZoneH0CvpMV
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO12ModificationVMn
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO8DeletionV34deletedDueToUserEncryptedDataResetSbvpMV
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO8DeletionV6purgedSbvpMV
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO8DeletionV6zoneIDSo012CKRecordZoneH0CvpMV
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO8DeletionVMn
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeOMn
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO12ModificationV6recordSo8CKRecordCvpMV
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO12ModificationVMn
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO8DeletionV10recordTypeSSvpMV
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO8DeletionV8recordIDSo08CKRecordI0CvpMV
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO8DeletionVMn
|| __TEXT.__const _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeOMn
|| __TEXT.__const _$sSo10CLLocationC8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$sSo11CKContainerC8CloudKitE11ApplicationOMn
|| __TEXT.__const _$sSo11CKOperationC8CloudKitE11operationIDSSvpMV
|| __TEXT.__const _$sSo11CKReferenceC8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$sSo14CKNotificationC8CloudKitE14subscriptionIDSSSgvpMV
|| __TEXT.__const _$sSo14CKSubscriptionC8CloudKitE14subscriptionIDSSvpMV
|| __TEXT.__const _$sSo19CKQuerySubscriptionC8CloudKitE10recordTypeSSSgvpMV
|| __TEXT.__const _$sSo6NSDataC8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$sSo6NSDateC8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$sSo7CKAssetC8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$sSo7CKQueryC8CloudKitE10recordTypeSSvpMV
|| __TEXT.__const _$sSo7CKShareC8CloudKitE14SystemFieldKeyOMn
|| __TEXT.__const _$sSo7NSArrayC8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$sSo8CKRecordC8CloudKitE10SystemTypeOMn
|| __TEXT.__const _$sSo8CKRecordC8CloudKitE10recordTypeSSvpMV
|| __TEXT.__const _$sSo8CKRecordC8CloudKitE14SystemFieldKeyOMn
|| __TEXT.__const _$sSo8CKRecordCST8CloudKitMc
|| __TEXT.__const _$sSo8NSNumberC8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$sSo8NSStringC8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$sSu8CloudKit21CKRecordValueProtocolAAMc
|| __TEXT.__const _$ss4Int8V8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$ss5Int16V8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$ss5Int32V8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$ss5Int64V8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$ss5UInt8V8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$ss6UInt16V8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$ss6UInt32V8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _$ss6UInt64V8CloudKit21CKRecordValueProtocolACMc
|| __TEXT.__const _CKDefaultMaxZonesPerSyncEngineFetchChangesOperation
|| __TEXT.__const _CKMaxProtoOperationsPerHTTPRequest
|| __TEXT.__const _CKQueryOperationMaximumResults
|| __TEXT.__const _CKReferenceActionValidate
|| __TEXT.__const _CKSyncEngineDefaultPriority
|| __TEXT.__text _$s10Foundation4DataV8CloudKitE21ckBase64URLSafeStringSSyF
|| __TEXT.__text _$s10Foundation4DataV8CloudKitE33ckLowercaseHexStringWithoutSpacesSSyF
|| __TEXT.__text _$s8CloudKit10CKLogAsset2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit11CKLogEngine2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit11CKLogStatus2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit12CKLogRequest2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit12StreamHandleP05inputC03forScsy10Foundation4DataVs5Error_pGSnySiG_tYaKFTj
|| __TEXT.__text _$s8CloudKit12StreamHandleP4sizeSivgTj
|| __TEXT.__text _$s8CloudKit12StreamHandleP5rangeSnySiGvgTj
|| __TEXT.__text _$s8CloudKit12StreamHandleP7readAll2in10Foundation4DataVSnySiG_tYaKFTj
|| __TEXT.__text _$s8CloudKit12StreamHandlePAAE7readAll2in10Foundation4DataVSnySiG_tYaKF
|| __TEXT.__text _$s8CloudKit13CKLogLogStats2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit14CKLogScheduler2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit14CKShareTypeKeySSvg
|| __TEXT.__text _$s8CloudKit15CKLogDataRepair2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit15CKLogMockServer2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit15CKShareTitleKeySSvg
|| __TEXT.__text _$s8CloudKit16CKActivityCreate_3dsoSo14OS_os_activity_ps12StaticStringV_SVSgtF
|| __TEXT.__text _$s8CloudKit16CKRecordShareKeySSvg
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC04makecdE04from4with3forAC10Foundation3URLV_AH4DataVSStYaKFZ
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC05inputD03forScsy10Foundation4DataVs5Error_pGSnySiG_tYaKF
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC14serializedData10Foundation0G0VyKF
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC16makeAVPlayerItem4withSo0gH0C10Foundation3URLVSg_tF
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC21useNetworkingDelegateSbvMZ
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC21useNetworkingDelegateSbvgZ
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC21useNetworkingDelegateSbvsZ
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC4fromAC10Foundation4DataV_tKcfC
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC4fromAC10Foundation4DataV_tKcfCTj
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC4fromAC10Foundation4DataV_tKcfc
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC4fromACs7Decoder_p_tKcfC
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC4fromACs7Decoder_p_tKcfCTj
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC4fromACs7Decoder_p_tKcfc
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC4sizeSivg
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC5rangeSnySiGvg
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleC6encode2toys7Encoder_p_tKF
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleCACycfC
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleCACycfc
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleCMa
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleCMu
|| __TEXT.__text _$s8CloudKit17AssetStreamHandleCfD
|| __TEXT.__text _$s8CloudKit17CKRecordParentKeySSvg
|| __TEXT.__text _$s8CloudKit17CKRecordTypeShareSSvg
|| __TEXT.__text _$s8CloudKit18CKLogTrafficBinary2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit19CKSupportsTestHooksSbyF
|| __TEXT.__text _$s8CloudKit20CKLogDistributedSync2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit21CKRecordValueProtocolPAAE014CKToObjCRecordD0So0cD0_pyF
|| __TEXT.__text _$s8CloudKit22CKRecordTypeUserRecordSSvg
|| __TEXT.__text _$s8CloudKit23CKRecordZoneDefaultNameSSvg
|| __TEXT.__text _$s8CloudKit24CKLogDiscretionaryDaemon2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit24CKRecordKeyValueIteratorV4nextSS_AA0cE8Protocol_ptSgyF
|| __TEXT.__text _$s8CloudKit24CKRecordKeyValueIteratorVMa
|| __TEXT.__text _$s8CloudKit25CKLogNotificationListener2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit26CKRecordValueStoreIteratorV4nextSS_AA0cD8Protocol_ptSgyF
|| __TEXT.__text _$s8CloudKit26CKRecordValueStoreIteratorVMa
|| __TEXT.__text _$s8CloudKit26CKRecordValueStoreIteratorVyACSo0c3KeyD7Setting_pcfC
|| __TEXT.__text _$s8CloudKit28CKShareThumbnailImageDataKeySSvg
|| __TEXT.__text _$s8CloudKit28CKUseSystemInstalledBinariesSbyF
|| __TEXT.__text _$s8CloudKit29CKShareTransferRepresentationV13ExportedShareV07prepareG09container21allowedSharingOptions18preparationHandlerAEyx_GSo11CKContainerC_So09CKAllowedkL0CSo0C0CyYaYbKctFZ
|| __TEXT.__text _$s8CloudKit29CKShareTransferRepresentationV13ExportedShareV08transferE0QrvgZ
|| __TEXT.__text _$s8CloudKit29CKShareTransferRepresentationV13ExportedShareV8existing_9container21allowedSharingOptionsAEyx_GSo0C0C_So11CKContainerCSo09CKAllowedkL0CtFZ
|| __TEXT.__text _$s8CloudKit29CKShareTransferRepresentationV13ExportedShareVMa
|| __TEXT.__text _$s8CloudKit29CKShareTransferRepresentationV4bodyQrvg
|| __TEXT.__text _$s8CloudKit29CKShareTransferRepresentationV8exporterACyxGAC13ExportedShareVyx_GxYbKc_tcfC
|| __TEXT.__text _$s8CloudKit29CKShareTransferRepresentationVMa
|| __TEXT.__text _$s8CloudKit5CKLog2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit7CKLogOp2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit8CKLogPCS2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit8CKLogSQL2os6LoggerVvg
|| __TEXT.__text _$s8CloudKit9CKLogMMCS2os6LoggerVvg
|| __TEXT.__text _$sSC11CKErrorCodeLeV8CloudKitE12clientRecordSo8CKRecordCSgvg
|| __TEXT.__text _$sSC11CKErrorCodeLeV8CloudKitE12serverRecordSo8CKRecordCSgvg
|| __TEXT.__text _$sSC11CKErrorCodeLeV8CloudKitE14ancestorRecordSo8CKRecordCSgvg
|| __TEXT.__text _$sSC11CKErrorCodeLeV8CloudKitE17retryAfterSecondsSdSgvg
|| __TEXT.__text _$sSC11CKErrorCodeLeV8CloudKitE18movedDestinationIDSo08CKRecordG0CSgvg
|| __TEXT.__text _$sSC11CKErrorCodeLeV8CloudKitE21partialErrorsByItemIDSDys11AnyHashableVs5Error_pGSgvg
|| __TEXT.__text _$sSC11CKErrorCodeLeV8CloudKitE23underlyingFunctionErrors0G0_pSgvg
|| __TEXT.__text _$sSC11CKErrorCodeLeV8CloudKitE_11descriptionABSoAAV_SStcfC
|| __TEXT.__text _$sSS8CloudKitE33ckLowercaseHexStringWithoutSpacesSSyF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE11recordZones3forSDySo14CKRecordZoneIDCs6ResultOySo0gH0Cs5Error_pGGSayAGG_tYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE12subscription3forSo14CKSubscriptionCSS_tYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE13modifyRecords6saving8deleting10savePolicy10atomically17completionHandlerySaySo8CKRecordCG_SaySo0M2IDCGSo0m4SaveI0VSbys6ResultOySDyAnSyAKs5Error_pGG0H7Results_SDyAnSyytsAT_pGG06deleteR0tsAT_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE13modifyRecords6saving8deleting10savePolicy10atomicallySDySo10CKRecordIDCs6ResultOySo0K0Cs5Error_pGG0H7Results_SDyAjLyytsAO_pGG06deleteO0tSayANG_SayAJGSo0k4SaveI0VSbtYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE13subscriptions3forSDySSs6ResultOySo14CKSubscriptionCs5Error_pGGSaySSG_tYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO12ModificationV6zoneIDSo012CKRecordZoneH0Cvg
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO12ModificationVMa
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO8DeletionV34deletedDueToUserEncryptedDataResetSbvg
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO8DeletionV6purgedSbvg
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO8DeletionV6zoneIDSo012CKRecordZoneH0Cvg
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeO8DeletionVMa
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE14DatabaseChangeOMa
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE14configuredWith13configuration5group4bodyxSo24CKOperationConfigurationCSg_So0I5GroupCSgxABKXEtKlF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE14configuredWith13configuration5group4bodyxSo24CKOperationConfigurationCSg_So0I5GroupCSgxABYaKXEtYaKlF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE15databaseChanges5since12resultsLimitSayAbCE14DatabaseChangeO12ModificationVG13modifications_SayAH8DeletionVG9deletionsSo08CKServerJ5TokenC06changeP0Sb10moreComingtARSg_SiSgtYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO12ModificationV6recordSo8CKRecordCvg
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO12ModificationVMa
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO8DeletionV10recordTypeSSvg
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO8DeletionV8recordIDSo08CKRecordI0Cvg
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeO8DeletionVMa
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE16RecordZoneChangeOMa
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE17modifyRecordZones6saving8deleting17completionHandlerySaySo12CKRecordZoneCG_SaySo0kL2IDCGys6ResultOySDyAlOyAIs5Error_pGG11saveResults_SDyAlOyytsAP_pGG06deleteQ0tsAP_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE17modifyRecordZones6saving8deletingSDySo14CKRecordZoneIDCs6ResultOySo0iJ0Cs5Error_pGG11saveResults_SDyAhJyytsAM_pGG06deleteO0tSayALG_SayAHGtYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE17recordZoneChanges02inE4With5since11desiredKeys12resultsLimitSDySo10CKRecordIDCs6ResultOyAbCE06RecordE6ChangeO12ModificationVs5Error_pGG021modificationResultsByO0_SayAN8DeletionVG9deletionsSo08CKServerR5TokenC11changeTokenSb10moreComingtSo0neO0C_AZSgSaySSGSgSiSgtYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE18deleteSubscription6withIDS2S_tYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE19modifySubscriptions6saving8deleting17completionHandlerySaySo14CKSubscriptionCG_SaySSGys6ResultOySDySSAMyAIs5Error_pGG11saveResults_SDySSAMyytsAN_pGG06deleteN0tsAN_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE19modifySubscriptions6saving8deletingSDySSs6ResultOySo14CKSubscriptionCs5Error_pGG11saveResults_SDySSAHyytsAK_pGG06deleteL0tSayAJG_SaySSGtYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE20fetchDatabaseChanges5since12resultsLimit17completionHandlerySo19CKServerChangeTokenCSg_SiSgys6ResultOySayAbCE0eM0O12ModificationVG13modifications_SayAO8DeletionVG9deletionsAI06changeN0Sb10moreComingts5Error_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE20undeprecated_perform_10inZoneWith17completionHandlerySo7CKQueryC_So08CKRecordG2IDCSgySaySo0L0CGSg_s5Error_pSgtctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE22fetchRecordZoneChanges02inF4With5since11desiredKeys12resultsLimit17completionHandlerySo08CKRecordF2IDC_So19CKServerChangeTokenCSgSaySSGSgSiSgys6ResultOySDySo0qR0CASyAbCE0efT0O12ModificationVs5Error_pGG021modificationResultsByR0_SayAW8DeletionVG9deletionsAM06changeU0Sb10moreComingtsAZ_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE5fetch10withCursor11desiredKeys12resultsLimit17completionHandlerySo07CKQueryF0C_SaySSGSgSiys6ResultOySaySo10CKRecordIDC_ANySo0O0Cs5Error_pGtG12matchResults_AJSg05queryF0tsAS_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE5fetch13withRecordIDs11desiredKeys17completionHandlerySaySo10CKRecordIDCG_SaySSGSgys6ResultOySDyAiNySo0L0Cs5Error_pGGsAQ_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE5fetch17withRecordZoneIDs17completionHandlerySaySo08CKRecordG2IDCG_ys6ResultOySDyAhKySo0kG0Cs5Error_pGGsAN_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE5fetch18withSubscriptionID17completionHandlerySS_ySo14CKSubscriptionCSg_s5Error_pSgtctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE5fetch19withSubscriptionIDs17completionHandlerySaySSG_ys6ResultOySDySSAIySo14CKSubscriptionCs5Error_pGGsAL_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE5fetch9withQuery10inZoneWith11desiredKeys12resultsLimit17completionHandlerySo7CKQueryC_So08CKRecordH2IDCSgSaySSGSgSiys6ResultOySaySo0qR0C_ARySo0Q0Cs5Error_pGtG12matchResults_So0P6CursorCSg05queryW0tsAW_pGctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE6delete18withSubscriptionID17completionHandlerySS_ySSSg_s5Error_pSgtctF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE7records19continuingMatchFrom11desiredKeys12resultsLimitSaySo10CKRecordIDC_s6ResultOySo0L0Cs5Error_pGtG12matchResults_So13CKQueryCursorCSg05queryS0tAS_SaySSGSgSitYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE7records3for11desiredKeysSDySo10CKRecordIDCs6ResultOySo0H0Cs5Error_pGGSayAHG_SaySSGSgtYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE7records8matching10inZoneWith11desiredKeys12resultsLimitSaySo10CKRecordIDC_s6ResultOySo0M0Cs5Error_pGtG12matchResults_So13CKQueryCursorCSg05queryT0tSo0S0C_So0mgN0CSgSaySSGSgSitYaKF
|| __TEXT.__text _$sSo10CKDatabaseC8CloudKitE7records8matching10inZoneWithSaySo8CKRecordCGSo7CKQueryC_So0iG2IDCSgtYaKF
|| __TEXT.__text _$sSo10CKRecordIDC8CloudKitE10recordName04zoneB0ABSS_So0a4ZoneB0CtcfC
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE11ApplicationOMa
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE14configuredWith13configuration5group4bodyxSo24CKOperationConfigurationCSg_So0I5GroupCSgxABKXEtKlF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE14configuredWith13configuration5group4bodyxSo24CKOperationConfigurationCSg_So0I5GroupCSgxABYaKXEtYaKlF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE14shareMetadatas3forSDy10Foundation3URLVs6ResultOySo15CKShareMetadataCs5Error_pGGSayAHG_tYaKF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE14userIdentities15forPhoneNumbersSDySSSo14CKUserIdentityCGSaySSG_tYaKF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE14userIdentities16forUserRecordIDsSDySo10CKRecordIDCSo14CKUserIdentityCGSayAGG_tYaKF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE14userIdentities17forEmailAddressesSDySSSo14CKUserIdentityCGSaySSG_tYaKF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE17shareParticipants15forPhoneNumbersSDySSs6ResultOySo18CKShareParticipantCs5Error_pGGSaySSG_tYaKF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE17shareParticipants16forUserRecordIDsSDySo10CKRecordIDCs6ResultOySo18CKShareParticipantCs5Error_pGGSayAGG_tYaKF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE17shareParticipants17forEmailAddressesSDySSs6ResultOySo18CKShareParticipantCs5Error_pGGSaySSG_tYaKF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE18longLivedOperation3forSo11CKOperationCSgSS_tYaKF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE19fetchShareMetadatas3for17completionHandlerySay10Foundation3URLVG_ys6ResultOySDyAiLySo15CKShareMetadataCs5Error_pGGsAO_pGctF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE22discoverUserIdentities03forE9RecordIDs17completionHandlerySaySo10CKRecordIDCG_ys6ResultOySDyAHSo14CKUserIdentityCGs5Error_pGctF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE22discoverUserIdentities15forPhoneNumbers17completionHandlerySaySSG_ys6ResultOySDySSSo14CKUserIdentityCGs5Error_pGctF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE22discoverUserIdentities17forEmailAddresses17completionHandlerySaySSG_ys6ResultOySDySSSo14CKUserIdentityCGs5Error_pGctF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE22fetchShareParticipants15forPhoneNumbers17completionHandlerySaySSG_ys6ResultOySDySSAIySo18CKShareParticipantCs5Error_pGGsAL_pGctF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE22fetchShareParticipants16forUserRecordIDs17completionHandlerySaySo10CKRecordIDCG_ys6ResultOySDyAhKySo18CKShareParticipantCs5Error_pGGsAN_pGctF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE22fetchShareParticipants17forEmailAddresses17completionHandlerySaySSG_ys6ResultOySDySSAIySo18CKShareParticipantCs5Error_pGGsAL_pGctF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE23fetchLongLivedOperation6withID17completionHandlerySS_ySo11CKOperationCSg_s5Error_pSgtctF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE24allLongLivedOperationIDsSaySSGyYaKF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE29fetchAllLongLivedOperationIDs17completionHandleryySaySSGSg_s5Error_pSgtc_tF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE6accept_17completionHandlerySaySo15CKShareMetadataCG_ys6ResultOySDyAgJySo0G0Cs5Error_pGGsAM_pGctF
|| __TEXT.__text _$sSo11CKContainerC8CloudKitE6acceptySDySo15CKShareMetadataCs6ResultOySo0E0Cs5Error_pGGSayAFGYaKF
|| __TEXT.__text _$sSo11CKOperationC8CloudKitE11operationIDSSvg
|| __TEXT.__text _$sSo13CKRecordValueP8CloudKitE015CKToSwiftNativeB0AC0aB8Protocol_pyF
|| __TEXT.__text _$sSo14CKNotificationC8CloudKitE14subscriptionIDSSSgvg
|| __TEXT.__text _$sSo14CKRecordZoneIDC8CloudKitE07defaultB4NameSSvgZ
|| __TEXT.__text _$sSo14CKRecordZoneIDC8CloudKitE7defaultABvgZ
|| __TEXT.__text _$sSo14CKRecordZoneIDC8CloudKitE8zoneName05ownerG0ABSS_SStcfC
|| __TEXT.__text _$sSo14CKSubscriptionC8CloudKitE14subscriptionIDSSvg
|| __TEXT.__text _$sSo14NSItemProviderC8CloudKitE15registerCKShare9container21allowedSharingOptions18preparationHandlerySo11CKContainerC_So09CKAllowediJ0CSo0F0CyYaYbKctF
|| __TEXT.__text _$sSo14NSItemProviderC8CloudKitE15registerCKShare_9container21allowedSharingOptionsySo0F0C_So11CKContainerCSo09CKAllowediJ0CtF
|| __TEXT.__text _$sSo15CKDatabaseScopeV8CloudKitE12organizationABvgZ
|| __TEXT.__text _$sSo15CKDatabaseScopeV8CloudKitE7unknownABvgZ
|| __TEXT.__text _$sSo16CKQueryOperationC8CloudKitE11desiredKeysSaySSGSgvM
|| __TEXT.__text _$sSo16CKQueryOperationC8CloudKitE11desiredKeysSaySSGSgvg
|| __TEXT.__text _$sSo16CKQueryOperationC8CloudKitE11desiredKeysSaySSGSgvs
|| __TEXT.__text _$sSo16CKQueryOperationC8CloudKitE16queryResultBlockys0F0OySo0A6CursorCSgs5Error_pGcSgvM
|| __TEXT.__text _$sSo16CKQueryOperationC8CloudKitE16queryResultBlockys0F0OySo0A6CursorCSgs5Error_pGcSgvg
|| __TEXT.__text _$sSo16CKQueryOperationC8CloudKitE16queryResultBlockys0F0OySo0A6CursorCSgs5Error_pGcSgvs
|| __TEXT.__text _$sSo16CKQueryOperationC8CloudKitE18recordMatchedBlockySo10CKRecordIDC_s6ResultOySo0H0Cs5Error_pGtcSgvM
|| __TEXT.__text _$sSo16CKQueryOperationC8CloudKitE18recordMatchedBlockySo10CKRecordIDC_s6ResultOySo0H0Cs5Error_pGtcSgvg
|| __TEXT.__text _$sSo16CKQueryOperationC8CloudKitE18recordMatchedBlockySo10CKRecordIDC_s6ResultOySo0H0Cs5Error_pGtcSgvs
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE11desiredKeysSaySSGSgvM
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE11desiredKeysSaySSGSgvg
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE11desiredKeysSaySSGSgvs
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE21alertLocalizationArgsSaySSGSgvM
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE21alertLocalizationArgsSaySSGSgvg
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE21alertLocalizationArgsSaySSGSgvs
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE21titleLocalizationArgsSaySSGSgvM
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE21titleLocalizationArgsSaySSGSgvg
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE21titleLocalizationArgsSaySSGSgvs
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE24subtitleLocalizationArgsSaySSGSgvM
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE24subtitleLocalizationArgsSaySSGSgvg
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE24subtitleLocalizationArgsSaySSGSgvs
|| __TEXT.__text _$sSo18CKNotificationInfoC8CloudKitE9alertBody0E15LocalizationKey0eG4Args5title0jgH00jgI08subtitle0kgH00kgI00e6ActiongH00E11LaunchImage9soundName11desiredKeys11shouldBadge0S20SendContentAvailable0su7MutableV08category13collapseIDKeyABSSSg_AVSaySSGA2vw2vw3vWS3bA2VtcfC
|| __TEXT.__text _$sSo19CKQuerySubscriptionC8CloudKitE10recordType9predicate14subscriptionID7optionsABSS_So11NSPredicateCSSSo0aB7OptionsVtcfC
|| __TEXT.__text _$sSo19CKQuerySubscriptionC8CloudKitE10recordTypeSSSgvg
|| __TEXT.__text _$sSo22CKDatabaseSubscriptionC8CloudKitE10recordTypeSSSgvM
|| __TEXT.__text _$sSo22CKDatabaseSubscriptionC8CloudKitE10recordTypeSSSgvg
|| __TEXT.__text _$sSo22CKDatabaseSubscriptionC8CloudKitE10recordTypeSSSgvs
|| __TEXT.__text _$sSo22CKDatabaseSubscriptionC8CloudKitE14subscriptionIDABSS_tcfC
|| __TEXT.__text _$sSo22CKShareParticipantRoleV8CloudKitE13administratorABvgZ
|| __TEXT.__text _$sSo23CKAcceptSharesOperationC8CloudKitE06acceptB11ResultBlockys0G0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo23CKAcceptSharesOperationC8CloudKitE06acceptB11ResultBlockys0G0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo23CKAcceptSharesOperationC8CloudKitE06acceptB11ResultBlockys0G0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo23CKAcceptSharesOperationC8CloudKitE19perShareResultBlockySo15CKShareMetadataC_s0H0OySo0J0Cs5Error_pGtcSgvM
|| __TEXT.__text _$sSo23CKAcceptSharesOperationC8CloudKitE19perShareResultBlockySo15CKShareMetadataC_s0H0OySo0J0Cs5Error_pGtcSgvg
|| __TEXT.__text _$sSo23CKAcceptSharesOperationC8CloudKitE19perShareResultBlockySo15CKShareMetadataC_s0H0OySo0J0Cs5Error_pGtcSgvs
|| __TEXT.__text _$sSo23CKFetchRecordsOperationC8CloudKitE05fetchB11ResultBlockys0G0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo23CKFetchRecordsOperationC8CloudKitE05fetchB11ResultBlockys0G0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo23CKFetchRecordsOperationC8CloudKitE05fetchB11ResultBlockys0G0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo23CKFetchRecordsOperationC8CloudKitE11desiredKeysSaySSGSgvM
|| __TEXT.__text _$sSo23CKFetchRecordsOperationC8CloudKitE11desiredKeysSaySSGSgvg
|| __TEXT.__text _$sSo23CKFetchRecordsOperationC8CloudKitE11desiredKeysSaySSGSgvs
|| __TEXT.__text _$sSo23CKFetchRecordsOperationC8CloudKitE20perRecordResultBlockySo10CKRecordIDC_s0H0OySo0J0Cs5Error_pGtcSgvM
|| __TEXT.__text _$sSo23CKFetchRecordsOperationC8CloudKitE20perRecordResultBlockySo10CKRecordIDC_s0H0OySo0J0Cs5Error_pGtcSgvg
|| __TEXT.__text _$sSo23CKFetchRecordsOperationC8CloudKitE20perRecordResultBlockySo10CKRecordIDC_s0H0OySo0J0Cs5Error_pGtcSgvs
|| __TEXT.__text _$sSo23CKRecordKeyValueSettingP8CloudKitEyAC0aC8Protocol_pSgSSciM
|| __TEXT.__text _$sSo23CKRecordKeyValueSettingP8CloudKitEyAC0aC8Protocol_pSgSScig
|| __TEXT.__text _$sSo23CKRecordKeyValueSettingP8CloudKitEyAC0aC8Protocol_pSgSScis
|| __TEXT.__text _$sSo23CKRecordKeyValueSettingP8CloudKitEyqd__SgSScAC0aC8ProtocolRd__luiM
|| __TEXT.__text _$sSo23CKRecordKeyValueSettingP8CloudKitEyqd__SgSScAC0aC8ProtocolRd__luig
|| __TEXT.__text _$sSo23CKRecordKeyValueSettingP8CloudKitEyqd__SgSScAC0aC8ProtocolRd__luis
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE019undeprecated_modifyB15CompletionBlockySaySo8CKRecordCGSg_SaySo0J2IDCGSgs5Error_pSgtcSgvM
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE019undeprecated_modifyB15CompletionBlockySaySo8CKRecordCGSg_SaySo0J2IDCGSgs5Error_pSgtcSgvg
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE019undeprecated_modifyB15CompletionBlockySaySo8CKRecordCGSg_SaySo0J2IDCGSgs5Error_pSgtcSgvs
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE06modifyB11ResultBlockys0G0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE06modifyB11ResultBlockys0G0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE06modifyB11ResultBlockys0G0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE13recordsToSave09recordIDsG6DeleteABSaySo8CKRecordCGSg_SaySo0L2IDCGSgtcfC
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE18perRecordSaveBlockySo10CKRecordIDC_s6ResultOySo0J0Cs5Error_pGtcSgvM
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE18perRecordSaveBlockySo10CKRecordIDC_s6ResultOySo0J0Cs5Error_pGtcSgvg
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE18perRecordSaveBlockySo10CKRecordIDC_s6ResultOySo0J0Cs5Error_pGtcSgvs
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE20perRecordDeleteBlockySo10CKRecordIDC_s6ResultOyyts5Error_pGtcSgvM
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE20perRecordDeleteBlockySo10CKRecordIDC_s6ResultOyyts5Error_pGtcSgvg
|| __TEXT.__text _$sSo24CKModifyRecordsOperationC8CloudKitE20perRecordDeleteBlockySo10CKRecordIDC_s6ResultOyyts5Error_pGtcSgvs
|| __TEXT.__text _$sSo24CKRecordZoneSubscriptionC8CloudKitE10recordTypeSSSgvM
|| __TEXT.__text _$sSo24CKRecordZoneSubscriptionC8CloudKitE10recordTypeSSSgvg
|| __TEXT.__text _$sSo24CKRecordZoneSubscriptionC8CloudKitE10recordTypeSSSgvs
|| __TEXT.__text _$sSo24CKRecordZoneSubscriptionC8CloudKitE6zoneID012subscriptionG0ABSo0abG0C_SStcfC
|| __TEXT.__text _$sSo25CKSystemSharingUIObserverC8CloudKitE06systemB19UIDidSaveShareBlockySo10CKRecordIDC_s6ResultOySo7CKShareCs5Error_pGtcSgvM
|| __TEXT.__text _$sSo25CKSystemSharingUIObserverC8CloudKitE06systemB19UIDidSaveShareBlockySo10CKRecordIDC_s6ResultOySo7CKShareCs5Error_pGtcSgvg
|| __TEXT.__text _$sSo25CKSystemSharingUIObserverC8CloudKitE06systemB19UIDidSaveShareBlockySo10CKRecordIDC_s6ResultOySo7CKShareCs5Error_pGtcSgvs
|| __TEXT.__text _$sSo25CKSystemSharingUIObserverC8CloudKitE06systemb9UIDidStopB5BlockySo10CKRecordIDC_s6ResultOyyts5Error_pGtcSgvM
|| __TEXT.__text _$sSo25CKSystemSharingUIObserverC8CloudKitE06systemb9UIDidStopB5BlockySo10CKRecordIDC_s6ResultOyyts5Error_pGtcSgvg
|| __TEXT.__text _$sSo25CKSystemSharingUIObserverC8CloudKitE06systemb9UIDidStopB5BlockySo10CKRecordIDC_s6ResultOyyts5Error_pGtcSgvs
|| __TEXT.__text _$sSo27CKFetchRecordZonesOperationC8CloudKitE018undeprecated_fetchbC15CompletionBlockySDySo14CKRecordZoneIDCSo0kL0CGSg_s5Error_pSgtcSgvM
|| __TEXT.__text _$sSo27CKFetchRecordZonesOperationC8CloudKitE018undeprecated_fetchbC15CompletionBlockySDySo14CKRecordZoneIDCSo0kL0CGSg_s5Error_pSgtcSgvg
|| __TEXT.__text _$sSo27CKFetchRecordZonesOperationC8CloudKitE018undeprecated_fetchbC15CompletionBlockySDySo14CKRecordZoneIDCSo0kL0CGSg_s5Error_pSgtcSgvs
|| __TEXT.__text _$sSo27CKFetchRecordZonesOperationC8CloudKitE03perB15ZoneResultBlockySo08CKRecordH2IDC_s0I0OySo0kH0Cs5Error_pGtcSgvM
|| __TEXT.__text _$sSo27CKFetchRecordZonesOperationC8CloudKitE03perB15ZoneResultBlockySo08CKRecordH2IDC_s0I0OySo0kH0Cs5Error_pGtcSgvg
|| __TEXT.__text _$sSo27CKFetchRecordZonesOperationC8CloudKitE03perB15ZoneResultBlockySo08CKRecordH2IDC_s0I0OySo0kH0Cs5Error_pGtcSgvs
|| __TEXT.__text _$sSo27CKFetchRecordZonesOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo27CKFetchRecordZonesOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo27CKFetchRecordZonesOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo28CKFetchWebAuthTokenOperationC8CloudKitE05fetchbcD11ResultBlockys0I0OySSs5Error_pGcSgvM
|| __TEXT.__text _$sSo28CKFetchWebAuthTokenOperationC8CloudKitE05fetchbcD11ResultBlockys0I0OySSs5Error_pGcSgvg
|| __TEXT.__text _$sSo28CKFetchWebAuthTokenOperationC8CloudKitE05fetchbcD11ResultBlockys0I0OySSs5Error_pGcSgvs
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE019undeprecated_modifybC15CompletionBlockySaySo12CKRecordZoneCGSg_SaySo0kL2IDCGSgs5Error_pSgtcSgvM
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE019undeprecated_modifybC15CompletionBlockySaySo12CKRecordZoneCGSg_SaySo0kL2IDCGSgs5Error_pSgtcSgvg
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE019undeprecated_modifybC15CompletionBlockySaySo12CKRecordZoneCGSg_SaySo0kL2IDCGSgs5Error_pSgtcSgvs
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE03perB13ZoneSaveBlockySo08CKRecordH2IDC_s6ResultOySo0kH0Cs5Error_pGtcSgvM
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE03perB13ZoneSaveBlockySo08CKRecordH2IDC_s6ResultOySo0kH0Cs5Error_pGtcSgvg
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE03perB13ZoneSaveBlockySo08CKRecordH2IDC_s6ResultOySo0kH0Cs5Error_pGtcSgvs
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE03perB15ZoneDeleteBlockySo08CKRecordH2IDC_s6ResultOyyts5Error_pGtcSgvM
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE03perB15ZoneDeleteBlockySo08CKRecordH2IDC_s6ResultOyyts5Error_pGtcSgvg
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE03perB15ZoneDeleteBlockySo08CKRecordH2IDC_s6ResultOyyts5Error_pGtcSgvs
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE06modifybC11ResultBlockys0H0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE06modifybC11ResultBlockys0H0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE06modifybC11ResultBlockys0H0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo28CKModifyRecordZonesOperationC8CloudKitE06recordC6ToSave0g7ZoneIDsH6DeleteABSaySo08CKRecordJ0CGSg_SaySo0mJ2IDCGSgtcfC
|| __TEXT.__text _$sSo29CKFetchShareMetadataOperationC8CloudKitE03perbC11ResultBlocky10Foundation3URLV_s0H0OySo07CKShareC0Cs5Error_pGtcSgvM
|| __TEXT.__text _$sSo29CKFetchShareMetadataOperationC8CloudKitE03perbC11ResultBlocky10Foundation3URLV_s0H0OySo07CKShareC0Cs5Error_pGtcSgvg
|| __TEXT.__text _$sSo29CKFetchShareMetadataOperationC8CloudKitE03perbC11ResultBlocky10Foundation3URLV_s0H0OySo07CKShareC0Cs5Error_pGtcSgvs
|| __TEXT.__text _$sSo29CKFetchShareMetadataOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo29CKFetchShareMetadataOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo29CKFetchShareMetadataOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo29CKFetchShareMetadataOperationC8CloudKitE21rootRecordDesiredKeysSaySSGSgvM
|| __TEXT.__text _$sSo29CKFetchShareMetadataOperationC8CloudKitE21rootRecordDesiredKeysSaySSGSgvg
|| __TEXT.__text _$sSo29CKFetchShareMetadataOperationC8CloudKitE21rootRecordDesiredKeysSaySSGSgvs
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE05fetchB11ResultBlockys0G0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE05fetchB11ResultBlockys0G0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE05fetchB11ResultBlockys0G0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE15subscriptionIDsABSaySSG_tcfC
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE15subscriptionIDsSaySSGSgvM
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE15subscriptionIDsSaySSGSgvg
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE15subscriptionIDsSaySSGSgvs
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE26perSubscriptionResultBlockySS_s0H0OySo14CKSubscriptionCs5Error_pGtcSgvM
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE26perSubscriptionResultBlockySS_s0H0OySo14CKSubscriptionCs5Error_pGtcSgvg
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE26perSubscriptionResultBlockySS_s0H0OySo14CKSubscriptionCs5Error_pGtcSgvs
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE32fetchSubscriptionCompletionBlockySDySSSo14CKSubscriptionCGSg_s5Error_pSgtcSgvM
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE32fetchSubscriptionCompletionBlockySDySSSo14CKSubscriptionCGSg_s5Error_pSgtcSgvg
|| __TEXT.__text _$sSo29CKFetchSubscriptionsOperationC8CloudKitE32fetchSubscriptionCompletionBlockySDySSSo14CKSubscriptionCGSg_s5Error_pSgtcSgvs
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE019undeprecated_modifyB15CompletionBlockySaySo14CKSubscriptionCGSg_SaySSGSgs5Error_pSgtcSgvM
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE019undeprecated_modifyB15CompletionBlockySaySo14CKSubscriptionCGSg_SaySSGSgs5Error_pSgtcSgvg
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE019undeprecated_modifyB15CompletionBlockySaySo14CKSubscriptionCGSg_SaySSGSgs5Error_pSgtcSgvs
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE06modifyB11ResultBlockys0G0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE06modifyB11ResultBlockys0G0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE06modifyB11ResultBlockys0G0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE06modifyB15CompletionBlockySaySo14CKSubscriptionCGSg_SaySSGSgs5Error_pSgtcSgvM
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE06modifyB15CompletionBlockySaySo14CKSubscriptionCGSg_SaySSGSgs5Error_pSgtcSgvg
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE06modifyB15CompletionBlockySaySo14CKSubscriptionCGSg_SaySSGSgs5Error_pSgtcSgvs
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE19subscriptionsToSave015subscriptionIDsG6DeleteABSaySo14CKSubscriptionCGSg_SaySSGSgtcfC
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE23subscriptionIDsToDeleteSaySSGSgvM
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE23subscriptionIDsToDeleteSaySSGSgvg
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE23subscriptionIDsToDeleteSaySSGSgvs
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE24perSubscriptionSaveBlockySS_s6ResultOySo14CKSubscriptionCs5Error_pGtcSgvM
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE24perSubscriptionSaveBlockySS_s6ResultOySo14CKSubscriptionCs5Error_pGtcSgvg
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE24perSubscriptionSaveBlockySS_s6ResultOySo14CKSubscriptionCs5Error_pGtcSgvs
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE26perSubscriptionDeleteBlockySS_s6ResultOyyts5Error_pGtcSgvM
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE26perSubscriptionDeleteBlockySS_s6ResultOyyts5Error_pGtcSgvg
|| __TEXT.__text _$sSo30CKModifySubscriptionsOperationC8CloudKitE26perSubscriptionDeleteBlockySS_s6ResultOyyts5Error_pGtcSgvs
|| __TEXT.__text _$sSo31CKFetchDatabaseChangesOperationC8CloudKitE018undeprecated_fetchbC15CompletionBlockySo19CKServerChangeTokenCSg_Sbs5Error_pSgtcSgvM
|| __TEXT.__text _$sSo31CKFetchDatabaseChangesOperationC8CloudKitE018undeprecated_fetchbC15CompletionBlockySo19CKServerChangeTokenCSg_Sbs5Error_pSgtcSgvg
|| __TEXT.__text _$sSo31CKFetchDatabaseChangesOperationC8CloudKitE018undeprecated_fetchbC15CompletionBlockySo19CKServerChangeTokenCSg_Sbs5Error_pSgtcSgvs
|| __TEXT.__text _$sSo31CKFetchDatabaseChangesOperationC8CloudKitE05fetchbC11ResultBlockys0H0OySo19CKServerChangeTokenC06serverkL0_Sb10moreComingts5Error_pGcSgvM
|| __TEXT.__text _$sSo31CKFetchDatabaseChangesOperationC8CloudKitE05fetchbC11ResultBlockys0H0OySo19CKServerChangeTokenC06serverkL0_Sb10moreComingts5Error_pGcSgvg
|| __TEXT.__text _$sSo31CKFetchDatabaseChangesOperationC8CloudKitE05fetchbC11ResultBlockys0H0OySo19CKServerChangeTokenC06serverkL0_Sb10moreComingts5Error_pGcSgvs
|| __TEXT.__text _$sSo33CKDiscoverUserIdentitiesOperationC8CloudKitE08discoverbC11ResultBlockys0H0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo33CKDiscoverUserIdentitiesOperationC8CloudKitE08discoverbC11ResultBlockys0H0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo33CKDiscoverUserIdentitiesOperationC8CloudKitE08discoverbC11ResultBlockys0H0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE018undeprecated_fetchbcD15CompletionBlockys5Error_pSgcSgvM
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE018undeprecated_fetchbcD15CompletionBlockys5Error_pSgcSgvg
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE018undeprecated_fetchbcD15CompletionBlockys5Error_pSgcSgvs
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE019undeprecated_recordC20FetchCompletionBlockySo08CKRecordC2IDC_So19CKServerChangeTokenCSg10Foundation4DataVSgSbs5Error_pSgtcSgvM
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE019undeprecated_recordC20FetchCompletionBlockySo08CKRecordC2IDC_So19CKServerChangeTokenCSg10Foundation4DataVSgSbs5Error_pSgtcSgvg
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE019undeprecated_recordC20FetchCompletionBlockySo08CKRecordC2IDC_So19CKServerChangeTokenCSg10Foundation4DataVSgSbs5Error_pSgtcSgvs
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE05fetchbcD11ResultBlockys0I0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE05fetchbcD11ResultBlockys0I0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE05fetchbcD11ResultBlockys0I0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE06recordC16FetchResultBlockySo08CKRecordC2IDC_s0J0OySo19CKServerChangeTokenC06serveroP0_10Foundation4DataVSg06clientopS0Sb10moreComingts5Error_pGtcSgvM
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE06recordC16FetchResultBlockySo08CKRecordC2IDC_s0J0OySo19CKServerChangeTokenC06serveroP0_10Foundation4DataVSg06clientopS0Sb10moreComingts5Error_pGtcSgvg
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE06recordC16FetchResultBlockySo08CKRecordC2IDC_s0J0OySo19CKServerChangeTokenC06serveroP0_10Foundation4DataVSg06clientopS0Sb10moreComingts5Error_pGtcSgvs
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE06recordC3IDs016configurationsBybC2IDABSaySo08CKRecordcL0CGSg_SDyAGSo0abcD13ConfigurationCGSgtcfC
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE21recordWasChangedBlockySo10CKRecordIDC_s6ResultOySo0L0Cs5Error_pGtcSgvM
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE21recordWasChangedBlockySo10CKRecordIDC_s6ResultOySo0L0Cs5Error_pGtcSgvg
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE21recordWasChangedBlockySo10CKRecordIDC_s6ResultOySo0L0Cs5Error_pGtcSgvs
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE27recordWithIDWasDeletedBlockySo10CKRecordIDC_SStcSgvM
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE27recordWithIDWasDeletedBlockySo10CKRecordIDC_SStcSgvg
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE27recordWithIDWasDeletedBlockySo10CKRecordIDC_SStcSgvs
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE31undeprecated_recordChangedBlockySo8CKRecordCcSgvM
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE31undeprecated_recordChangedBlockySo8CKRecordCcSgvg
|| __TEXT.__text _$sSo33CKFetchRecordZoneChangesOperationC8CloudKitE31undeprecated_recordChangedBlockySo8CKRecordCcSgvs
|| __TEXT.__text _$sSo33CKFetchShareParticipantsOperationC8CloudKitE03perB22ParticipantResultBlockySo24CKUserIdentityLookupInfoC_s0I0OySo07CKShareH0Cs5Error_pGtcSgvM
|| __TEXT.__text _$sSo33CKFetchShareParticipantsOperationC8CloudKitE03perB22ParticipantResultBlockySo24CKUserIdentityLookupInfoC_s0I0OySo07CKShareH0Cs5Error_pGtcSgvg
|| __TEXT.__text _$sSo33CKFetchShareParticipantsOperationC8CloudKitE03perB22ParticipantResultBlockySo24CKUserIdentityLookupInfoC_s0I0OySo07CKShareH0Cs5Error_pGtcSgvs
|| __TEXT.__text _$sSo33CKFetchShareParticipantsOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo33CKFetchShareParticipantsOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo33CKFetchShareParticipantsOperationC8CloudKitE05fetchbC11ResultBlockys0H0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo34CKShareParticipantAcceptanceStatusV8CloudKitE12unsubscribedABvgZ
|| __TEXT.__text _$sSo36CKDiscoverAllUserIdentitiesOperationC8CloudKitE08discoverbcD11ResultBlockys0I0Oyyts5Error_pGcSgvM
|| __TEXT.__text _$sSo36CKDiscoverAllUserIdentitiesOperationC8CloudKitE08discoverbcD11ResultBlockys0I0Oyyts5Error_pGcSgvg
|| __TEXT.__text _$sSo36CKDiscoverAllUserIdentitiesOperationC8CloudKitE08discoverbcD11ResultBlockys0I0Oyyts5Error_pGcSgvs
|| __TEXT.__text _$sSo37CKFetchRecordZoneChangesConfigurationC8CloudKitE11desiredKeysSaySSGSgvM
|| __TEXT.__text _$sSo37CKFetchRecordZoneChangesConfigurationC8CloudKitE11desiredKeysSaySSGSgvg
|| __TEXT.__text _$sSo37CKFetchRecordZoneChangesConfigurationC8CloudKitE11desiredKeysSaySSGSgvs
|| __TEXT.__text _$sSo37CKFetchRecordZoneChangesConfigurationC8CloudKitE25previousServerChangeToken12resultsLimit11desiredKeysABSo08CKServerjK0CSg_SiSgSaySSGSgtcfC
|| __TEXT.__text _$sSo7CKQueryC8CloudKitE10recordType9predicateABSS_So11NSPredicateCtcfC
|| __TEXT.__text _$sSo7CKQueryC8CloudKitE10recordTypeSSvg
|| __TEXT.__text _$sSo7CKShareC8CloudKitE14SystemFieldKeyO18thumbnailImageDataSSvgZ
|| __TEXT.__text _$sSo7CKShareC8CloudKitE14SystemFieldKeyO5titleSSvgZ
|| __TEXT.__text _$sSo7CKShareC8CloudKitE14SystemFieldKeyO9shareTypeSSvgZ
|| __TEXT.__text _$sSo7CKShareC8CloudKitE14SystemFieldKeyOMa
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE10SystemTypeO10userRecordSSvgZ
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE10SystemTypeO5shareSSvgZ
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE10SystemTypeOMa
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE10recordType0D2IDABSS_So0aF0CtcfC
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE10recordType6zoneIDABSS_So0a4ZoneG0CtcfC
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE10recordTypeSSvg
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE11changedKeysSaySSGyF
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE12makeIteratorAC0a8KeyValueE0VyF
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE14SystemFieldKeyO5shareSSvgZ
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE14SystemFieldKeyO6parentSSvgZ
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE14SystemFieldKeyOMa
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE6object6forKeySo0A5Value_pSgSS_tF
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE7allKeysSaySSGyF
|| __TEXT.__text _$sSo8CKRecordC8CloudKitE9setObject_6forKeyySo0A5Value_pSg_SStF
|| __TEXT.__text _$sSo8CKRecordC8CloudKitEySo0A5Value_pSgSSciM
|| __TEXT.__text _$sSo8CKRecordC8CloudKitEySo0A5Value_pSgSScig
|| __TEXT.__text _$sSo8CKRecordC8CloudKitEySo0A5Value_pSgSScis
|| __TEXT.__text _CKAcceptablePredicateValueClasses
|| __TEXT.__text _CKAcceptableValueClasses
|| __TEXT.__text _CKAppIdentifierFromTeamAppTuple
|| __TEXT.__text _CKApplicationBundleIDForPush
|| __TEXT.__text _CKBoolFromCKTernary
|| __TEXT.__text _CKBoolFromCKTernaryWithDefault
|| __TEXT.__text _CKBootDate
|| __TEXT.__text _CKBootTime
|| __TEXT.__text _CKBuildVersion
|| __TEXT.__text _CKCFArrayForEach
|| __TEXT.__text _CKCFDictionaryForEach
|| __TEXT.__text _CKCanRetryForError
|| __TEXT.__text _CKCodeProto2AnyReadFrom
|| __TEXT.__text _CKCodeProto2ProtectedEnvelopeReadFrom
|| __TEXT.__text _CKCodeRecordTransportReadFrom
|| __TEXT.__text _CKContainerEnvironmentFromString
|| __TEXT.__text _CKContainerEnvironmentString
|| __TEXT.__text _CKContainerSetupInfoWithBundleIDOverridesForOOPUIFromContainer
|| __TEXT.__text _CKCreateDirectoryAtPath
|| __TEXT.__text _CKCreateDirectoryAtPathWithAttributes
|| __TEXT.__text _CKCreateDirectoryAtURL
|| __TEXT.__text _CKCreateGUID
|| __TEXT.__text _CKCurrentProcessIsDaemon
|| __TEXT.__text _CKCurrentProcessLinkCheck0fd6bdf95f2efb6e65813fd4cd0f5d9af656d08a
|| __TEXT.__text _CKCurrentProcessLinkCheck32f5805a68adfc1b65f94a0de69aa32177c7cd24
|| __TEXT.__text _CKCurrentProcessLinkCheck5dbf91c3fd1d871f0bcfe60afeb451e3e708d350
|| __TEXT.__text _CKCurrentProcessLinkCheck908c3403f5370f9fc0f790c790ce4de0669132c0
|| __TEXT.__text _CKCurrentProcessLinkCheck92e3e8f8ec1a906754afb22d87eb36301b4f6760
|| __TEXT.__text _CKCurrentQueueIsMainQueue
|| __TEXT.__text _CKCurrentQueueQualityOfService
|| __TEXT.__text _CKCurrentThreadQualityOfService
|| __TEXT.__text _CKDPDateReadFrom
|| __TEXT.__text _CKDPIdentifierReadFrom
|| __TEXT.__text _CKDPLocationCoordinateReadFrom
|| __TEXT.__text _CKDPRecordFieldValueEncryptedValueReadFrom
|| __TEXT.__text _CKDPRecordIdentifierReadFrom
|| __TEXT.__text _CKDPRecordReferenceReadFrom
|| __TEXT.__text _CKDPRecordZoneIdentifierReadFrom
|| __TEXT.__text _CKDatabaseScopeFromString
|| __TEXT.__text _CKDatabaseScopeString
|| __TEXT.__text _CKDatasAreBothNilOrEqual
|| __TEXT.__text _CKDescriptionForNSInterval
|| __TEXT.__text _CKDescriptionForTimeInterval
|| __TEXT.__text _CKDeviceSerialNumber
|| __TEXT.__text _CKDeviceUDID
|| __TEXT.__text _CKEarliestStartDateAfterError
|| __TEXT.__text _CKErrorChainFromError
|| __TEXT.__text _CKErrorChainStringFromError
|| __TEXT.__text _CKErrorCodeForInternalErrorCode
|| __TEXT.__text _CKErrorCodeForNSURLErrorCode
|| __TEXT.__text _CKErrorFromHTTPResponse
|| __TEXT.__text _CKErrorIsCode
|| __TEXT.__text _CKErrorUserInfoClasses
|| __TEXT.__text _CKExtendedMethodSignatureForProtocolSelector
|| __TEXT.__text _CKFetchAPSEnvironmentFromServerOrEntitlements
|| __TEXT.__text _CKGetCurrentActivities
|| __TEXT.__text _CKGetDarwinCacheDirRealPath
|| __TEXT.__text _CKGetDarwinTempDirRealPath
|| __TEXT.__text _CKGetGenerationCounterForFd
|| __TEXT.__text _CKGetGlobalQueue
|| __TEXT.__text _CKGetHomeDir
|| __TEXT.__text _CKGetHomeDirRealPath
|| __TEXT.__text _CKGetRealPath
|| __TEXT.__text _CKHandleSignificantIssueBehavior
|| __TEXT.__text _CKHeaderForLibraryName
|| __TEXT.__text _CKHexCharFromBytes
|| __TEXT.__text _CKIndexedArrayKey
|| __TEXT.__text _CKIsDebuggerAttached
|| __TEXT.__text _CKIsIndexedArrayKey
|| __TEXT.__text _CKIsPCSError
|| __TEXT.__text _CKIsRunningInLogger
|| __TEXT.__text _CKIsRunningInTestHost
|| __TEXT.__text _CKIsValidOperationForScope
|| __TEXT.__text _CKLinkCheck32f5805a68adfc1b65f94a0de69aa32177c7cd24
|| __TEXT.__text _CKLinkCheck48d9728e8c354416a38f82379cbb35e3
|| __TEXT.__text _CKLocalizedString
|| __TEXT.__text _CKMainBundleIsAppleExecutable
|| __TEXT.__text _CKMonotonicFastHostTime
|| __TEXT.__text _CKMonotonicHostTime
|| __TEXT.__text _CKNSIndexSet_enumerateInverseRangesInRange_options_usingBlock
|| __TEXT.__text _CKNSIndexSet_indexSetWithInverseIndexSet
|| __TEXT.__text _CKNSQualityOfServiceFromQoSClass
|| __TEXT.__text _CKNotifyPostTestPrefix
|| __TEXT.__text _CKOncePerBoot
|| __TEXT.__text _CKOperationExecutionStateIsExecuting
|| __TEXT.__text _CKOperationExecutionStateIsFinished
|| __TEXT.__text _CKOperationExecutionStateTransitionToExecuting
|| __TEXT.__text _CKOperationExecutionStateTransitionToFinished
|| __TEXT.__text _CKOperationGroupTransferSizeForBytes
|| __TEXT.__text _CKOperationProgressCallbackClasses
|| __TEXT.__text _CKPIDIsStillAlive
|| __TEXT.__text _CKProcessIndexedArrayKey
|| __TEXT.__text _CKProductName
|| __TEXT.__text _CKProductType
|| __TEXT.__text _CKProductVersion
|| __TEXT.__text _CKPushTopicForPushBehavior
|| __TEXT.__text _CKQoSClassFromNSQualityOfService
|| __TEXT.__text _CKQoSIsBackground
|| __TEXT.__text _CKQualityOfServiceOrdering
|| __TEXT.__text _CKRetryAfterSecondsForError
|| __TEXT.__text _CKRunningInClientProcess
|| __TEXT.__text _CKSDKVersion
|| __TEXT.__text _CKSDKVersion32f5805a68adfc1b65f94a0de69aa32177c7cd24
|| __TEXT.__text _CKSQLiteJournalSuffixes
|| __TEXT.__text _CKSelectLocalAppNamesByBundleIDs
|| __TEXT.__text _CKSelectorAndSignaturesIncludingParentProtocols
|| __TEXT.__text _CKServerEnvironmentFromString
|| __TEXT.__text _CKShareURLSlugForiWorkShareTitle
|| __TEXT.__text _CKSharingAccessTypeFromOptionsGroups
|| __TEXT.__text _CKSharingAllowOthersToInviteFromOptionsGroups
|| __TEXT.__text _CKSharingContainerSlugForContainerID
|| __TEXT.__text _CKSharingContainerSupportsAdminParticipants
|| __TEXT.__text _CKSharingPermissionTypeFromOptionsGroups
|| __TEXT.__text _CKSharingSummaryStringFromOptionsGroups
|| __TEXT.__text _CKShortRandomID
|| __TEXT.__text _CKShouldUseNewPredicateValidation
|| __TEXT.__text _CKShouldWrapErrorFetchingRecords
|| __TEXT.__text _CKSimulateOncePerBootProcessRestart
|| __TEXT.__text _CKSimulateOncePerBootReboot
|| __TEXT.__text _CKStringForDiscretionaryNetworkBehavior
|| __TEXT.__text _CKStringForDuetPreClearedMode
|| __TEXT.__text _CKStringForNetworkServiceType
|| __TEXT.__text _CKStringForQOS
|| __TEXT.__text _CKStringForTransferSize
|| __TEXT.__text _CKStringForXPCActivityState
|| __TEXT.__text _CKStringFromAccountChangeType
|| __TEXT.__text _CKStringFromAccountStatus
|| __TEXT.__text _CKStringFromApplicationPermissionStatus
|| __TEXT.__text _CKStringFromCKMMCSEncryptionSupport
|| __TEXT.__text _CKStringFromCapabilities
|| __TEXT.__text _CKStringFromDeviceToDeviceEncryptionStatus
|| __TEXT.__text _CKStringFromParticipantAcceptanceStatus
|| __TEXT.__text _CKStringFromParticipantInvitationTokenStatus
|| __TEXT.__text _CKStringFromParticipantPermission
|| __TEXT.__text _CKStringFromParticipantRole
|| __TEXT.__text _CKStringFromPartition
|| __TEXT.__text _CKStringFromServerEnvironment
|| __TEXT.__text _CKStringFromShareParticipantSelfRemovalBehavior
|| __TEXT.__text _CKStringFromShareParticipantVisibility
|| __TEXT.__text _CKStringWithArray
|| __TEXT.__text _CKStringWithBytes
|| __TEXT.__text _CKStringWithData
|| __TEXT.__text _CKStringWithDate
|| __TEXT.__text _CKStringWithDictionary
|| __TEXT.__text _CKStringWithLimitedArray
|| __TEXT.__text _CKStringWithNibbles
|| __TEXT.__text _CKStringWithObject
|| __TEXT.__text _CKStringWithSet
|| __TEXT.__text _CKStringsAreBothNilOrEqual
|| __TEXT.__text _CKSyncEngineRecordModificationTypeOpposite
|| __TEXT.__text _CKTabIndentAtDepth
|| __TEXT.__text _CKTernaryFromBOOL
|| __TEXT.__text _CKTopLevelUnderlyingErrorCodes
|| __TEXT.__text _CKTrap
|| __TEXT.__text _CKURLSlugsToBundleIDsMap
|| __TEXT.__text _CKUseSystemInstalledBinariesFuncForSwift
|| __TEXT.__text _CKValidSharingURLHostnames
|| __TEXT.__text _CKValidateIndexedArrayKeys
|| __TEXT.__text _CKValidateKeyName
|| __TEXT.__text _CKValidateRecordArrayValue
|| __TEXT.__text _CKValueCanBeSetOnRecord
|| __TEXT.__text _CKValueIsAcceptablePredicateClass
|| __TEXT.__text _CKWarnForIncorrectServiceIdentity
|| __TEXT.__text _CKWarnForInvalidApplicationIdentifier
|| __TEXT.__text _CKWatchAppBundleIDFromProcessBundleID
|| __TEXT.__text _CKXPCSuitableError
|| __TEXT.__text _CloudKit_Is_Slowing_Failing_Operations_Due_To_High_Error_Rate
|| __TEXT.__text _NSTimeIntervalToClosestXPCActivityInterval
|| __TEXT.__text __CKCheckArgument
|| __TEXT.__text _ck_call_or_dispatch_async_if_not_key
|| __TEXT.__text _ck_call_or_dispatch_sync_if_not_key
|| __TEXT.__text _ck_log_asl_level_to_type
|| __TEXT.__text _ck_log_facilities_setup_logging_facilities
|| __TEXT.__text _ck_log_get_asl_level
|| __TEXT.__text _initializeUseSystemInstalledBinaries
|| __TEXT.__text _mmapFileAtPath
|| __TEXT.__text _mmapFileDescriptor
|| __TEXT.__text _overrideCKIsRunningInTestHost
|| __TEXT.__text _setCKIsRunningInLogger
|| __TEXT.__text _setCKIsRunningInTestHost
|| __TEXT.__text _setCKRunningInClientProcess
|| __TEXT.__text _setCKUseSystemInstalledBinariesBackingBool
|| __TEXT.__text _stringForCKErrorCode
|| __TEXT.__text _stringForCKInternalErrorCode
__ AVFoundation: _OBJC_CLASS_$_AVAssetResourceLoadingRequest
__ AVFoundation: _OBJC_CLASS_$_AVPlayerItem
__ AVFoundation: _OBJC_CLASS_$_AVURLAsset
__ AVFoundation: _OBJC_METACLASS_$_AVPlayerItem
__ Accounts: _ACAccountDataclassBackup
__ Accounts: _ACAccountDataclassBookmarks
__ Accounts: _ACAccountDataclassCloudPhotos
__ Accounts: _ACAccountDataclassHealth
__ Accounts: _ACAccountDataclassHome
__ Accounts: _ACAccountDataclassKeychainSync
__ Accounts: _ACAccountDataclassMessages
__ Accounts: _ACAccountDataclassNews
__ Accounts: _ACAccountDataclassNotes
__ Accounts: _ACAccountDataclassReminders
__ Accounts: _ACAccountDataclassShoebox
__ Accounts: _ACAccountDataclassSiri
__ Accounts: _ACAccountDataclassUbiquity
__ Accounts: _ACAccountPropertyPersonaIdentifier
__ Accounts: _OBJC_CLASS_$_ACAccountStore
__ ApplePushService: _APSConnectionOverrideNamedDelegatePort
__ ApplePushService: _APSEnvironmentDevelopment
__ ApplePushService: _APSEnvironmentProduction
__ ApplePushService: _OBJC_CLASS_$_APSConnection
__ C2: _$sSo16C2RequestManagerC0A0E10dataStream3for7optionsScsy10Foundation4DataVs5Error_pG_So13NSURLResponseCtAG10URLRequestV_So0aB7OptionsCtYaKF
__ C2: _$sSo16C2RequestManagerC0A0E10dataStream3for7optionsScsy10Foundation4DataVs5Error_pG_So13NSURLResponseCtAG10URLRequestV_So0aB7OptionsCtYaKFTu
__ C2: _$sSo16C2RequestManagerC0A0E4data3for7options10Foundation4DataV_So13NSURLResponseCtAG10URLRequestV_So0aB7OptionsCtYaKF
__ C2: _$sSo16C2RequestManagerC0A0E4data3for7options10Foundation4DataV_So13NSURLResponseCtAG10URLRequestV_So0aB7OptionsCtYaKFTu
__ C2: _OBJC_CLASS_$_C2RequestManager
__ C2: _OBJC_CLASS_$_C2RequestOptions
__ CloudKitDistributedSync: _OBJC_CLASS_$_CKAtomBatch
__ CloudKitDistributedSync: _OBJC_CLASS_$_CKDistributedSiteIdentifier
__ CloudKitDistributedSync: _OBJC_CLASS_$_CKDistributedTimestamp
__ CloudKitDistributedSync: _OBJC_CLASS_$_CKDistributedTimestampStateVector
__ CloudKitDistributedSync: _OBJC_CLASS_$_CKMergeableDeltaMetadata
__ CloudKitDistributedSync: _OBJC_CLASS_$_CKMergeableValueID
__ CoreAnalytics: _AnalyticsSendEvent
__ CoreFoundation: _CFAllocatorCreate
__ CoreFoundation: _CFArrayApplyFunction
__ CoreFoundation: _CFArrayGetCount
__ CoreFoundation: _CFDataCreate
__ CoreFoundation: _CFDataCreateWithBytesNoCopy
__ CoreFoundation: _CFDataGetBytePtr
__ CoreFoundation: _CFDataGetLength
__ CoreFoundation: _CFDictionaryApplyFunction
__ CoreFoundation: _CFEqual
__ CoreFoundation: _CFNumberGetValue
__ CoreFoundation: _CFNumberIsFloatType
__ CoreFoundation: _CFPreferencesCopyValue
__ CoreFoundation: _CFRelease
__ CoreFoundation: _CFRetain
__ CoreFoundation: _CFRunLoopAddSource
__ CoreFoundation: _CFRunLoopCopyCurrentMode
__ CoreFoundation: _CFRunLoopGetCurrent
__ CoreFoundation: _CFStringGetFileSystemRepresentation
__ CoreFoundation: _CFUUIDCreate
__ CoreFoundation: _CFUUIDCreateString
__ CoreFoundation: _CFUserNotificationCancel
__ CoreFoundation: _CFUserNotificationCreate
__ CoreFoundation: _CFUserNotificationCreateRunLoopSource
__ CoreFoundation: _CFUserNotificationReceiveResponse
__ CoreFoundation: _NSGenericException
__ CoreFoundation: _NSInternalInconsistencyException
__ CoreFoundation: _NSInvalidArgumentException
__ CoreFoundation: _NSRangeException
__ CoreFoundation: _NSURLContentAccessDateKey
__ CoreFoundation: _NSURLContentModificationDateKey
__ CoreFoundation: _NSURLCreationDateKey
__ CoreFoundation: _NSURLFileProtectionNone
__ CoreFoundation: _NSURLFileSizeKey
__ CoreFoundation: _NSURLIsDirectoryKey
__ CoreFoundation: _NSURLNameKey
__ CoreFoundation: _NSURLVolumeIdentifierKey
__ CoreFoundation: _NSURLVolumeSupportsFileCloningKey
__ CoreFoundation: _OBJC_CLASS_$_NSArray
__ CoreFoundation: _OBJC_CLASS_$_NSCache
__ CoreFoundation: _OBJC_CLASS_$_NSConstantArray
__ CoreFoundation: _OBJC_CLASS_$_NSConstantDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSData
__ CoreFoundation: _OBJC_CLASS_$_NSDate
__ CoreFoundation: _OBJC_CLASS_$_NSDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_CLASS_$_NSException
__ CoreFoundation: _OBJC_CLASS_$_NSInputStream
__ CoreFoundation: _OBJC_CLASS_$_NSInvocation
__ CoreFoundation: _OBJC_CLASS_$_NSMethodSignature
__ CoreFoundation: _OBJC_CLASS_$_NSMutableArray
__ CoreFoundation: _OBJC_CLASS_$_NSMutableData
__ CoreFoundation: _OBJC_CLASS_$_NSMutableDictionary
__ CoreFoundation: _OBJC_CLASS_$_NSMutableOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSMutableSet
__ CoreFoundation: _OBJC_CLASS_$_NSNull
__ CoreFoundation: _OBJC_CLASS_$_NSOrderedSet
__ CoreFoundation: _OBJC_CLASS_$_NSSet
__ CoreFoundation: _OBJC_CLASS_$_NSURL
__ CoreFoundation: _OBJC_CLASS_$_NSUserDefaults
__ CoreFoundation: _OBJC_EHTYPE_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSEnumerator
__ CoreFoundation: _OBJC_METACLASS_$_NSException
__ CoreFoundation: _OBJC_METACLASS_$_NSUserDefaults
__ CoreFoundation: ___CFConstantStringClassReference
__ CoreFoundation: ___NSArray0__struct
__ CoreFoundation: ___NSDictionary0__struct
__ CoreFoundation: ___NSMakeSpecialForwardingCaptureBlock
__ CoreFoundation: ___kCFBooleanFalse
__ CoreFoundation: ___kCFBooleanTrue
__ CoreFoundation: _kCFAllocatorDefault
__ CoreFoundation: _kCFErrorDebugDescriptionKey
__ CoreFoundation: _kCFErrorDescriptionKey
__ CoreFoundation: _kCFPreferencesAnyHost
__ CoreFoundation: _kCFRunLoopCommonModes
__ CoreFoundation: _kCFUserNotificationAlertHeaderKey
__ CoreFoundation: _kCFUserNotificationAlertMessageKey
__ CoreFoundation: _kCFUserNotificationAlternateButtonTitleKey
__ CoreFoundation: _kCFUserNotificationDefaultButtonTitleKey
__ CoreLocation: _CLLocationCoordinate2DMake
__ CoreLocation: _OBJC_CLASS_$_CLLocation
__ CoreServices: _OBJC_CLASS_$_LSApplicationExtensionRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationRecord
__ CoreServices: _OBJC_CLASS_$_LSApplicationWorkspace
__ CoreServices: _OBJC_CLASS_$_LSBundleRecord
__ CoreTransferable: _$s14Representation16CoreTransferable0C0PTl
__ CoreTransferable: _$s16CoreTransferable0B0Mp
__ CoreTransferable: _$s16CoreTransferable0B0P14RepresentationAC_AA08TransferC0Tn
__ CoreTransferable: _$s16CoreTransferable0B0P22transferRepresentation0D0QzvgZTq
__ CoreTransferable: _$s16CoreTransferable18DataRepresentationV19exportedContentType9exportingACyxG07UniformG11Identifiers6UTTypeV_10Foundation0C0VxYaYbKctcfC
__ CoreTransferable: _$s16CoreTransferable18DataRepresentationVMa
__ CoreTransferable: _$s16CoreTransferable18DataRepresentationVMn
__ CoreTransferable: _$s16CoreTransferable18DataRepresentationVyxGAA08TransferD0AAMc
__ CoreTransferable: _$s16CoreTransferable19ProxyRepresentationV9exportingACyxq_Gq_xYbKc_tcfC
__ CoreTransferable: _$s16CoreTransferable19ProxyRepresentationVMa
__ CoreTransferable: _$s16CoreTransferable19ProxyRepresentationVMn
__ CoreTransferable: _$s16CoreTransferable19ProxyRepresentationVyxq_GAA08TransferD0AAMc
__ CoreTransferable: _$s16CoreTransferable22TransferRepresentationMp
__ CoreTransferable: _$s16CoreTransferable22TransferRepresentationP011_decomposedcD0_6inputsAA01_cD7OutputsVAA01_cD5ValueVyxG_AA01_cD6InputsVtFZTq
__ CoreTransferable: _$s16CoreTransferable22TransferRepresentationP4BodyAC_AaBTn
__ CoreTransferable: _$s16CoreTransferable22TransferRepresentationP4ItemAC_AA0B0Tn
__ CoreTransferable: _$s16CoreTransferable22TransferRepresentationP4body4BodyQzvgTq
__ CoreTransferable: _$s16CoreTransferable22TransferRepresentationPAAE011_decomposedcD0_6inputsAA01_cD7OutputsVAA01_cD5ValueVyxG_AA01_cD6InputsVtFZ
__ CoreTransferable: _$s16CoreTransferable22TransferRepresentationPAAE18exportingConditionyAA012_ConditionalcD0VyxGSb4ItemQzYbcF
__ CoreTransferable: _$s16CoreTransferable22TransferRepresentationTL
__ CoreTransferable: _$s16CoreTransferable27TupleTransferRepresentationVMa
__ CoreTransferable: _$s16CoreTransferable27TupleTransferRepresentationVMn
__ CoreTransferable: _$s16CoreTransferable27TupleTransferRepresentationVyACyxq_Gq_cfC
__ CoreTransferable: _$s16CoreTransferable27TupleTransferRepresentationVyxq_GAA0dE0AAMc
__ CoreTransferable: _$s16CoreTransferable34_ConditionalTransferRepresentationVMa
__ CoreTransferable: _$s16CoreTransferable34_ConditionalTransferRepresentationVMn
__ CoreTransferable: _$s16CoreTransferable34_ConditionalTransferRepresentationVyxGAA0dE0AAMc
__ CoreTransferable: _$s4Body16CoreTransferable22TransferRepresentationPTl
__ CoreTransferable: _$s4Item16CoreTransferable22TransferRepresentationPTl
__ CoreUtils: _OBJC_CLASS_$_CUState
__ CoreUtils: _OBJC_CLASS_$_CUStateEvent
__ CoreUtils: _OBJC_CLASS_$_CUStateMachine
__ CryptoKit: _$s9CryptoKit12HashFunctionP6update13bufferPointerySW_tFTj
__ CryptoKit: _$s9CryptoKit12HashFunctionP8finalize6DigestQzyFTj
__ CryptoKit: _$s9CryptoKit12HashFunctionPxycfCTj
__ CryptoKit: _$s9CryptoKit12SHA256DigestV10Foundation15ContiguousBytesAAMc
__ CryptoKit: _$s9CryptoKit12SHA256DigestVMa
__ CryptoKit: _$s9CryptoKit6SHA256VAA12HashFunctionAAMc
__ CryptoKit: _$s9CryptoKit6SHA256VMa
__ FeatureFlags: _$s12FeatureFlags02isA7EnabledySbAA0aB3Key_pF
__ FeatureFlags: _$s12FeatureFlags0aB3KeyMp
__ FeatureFlags: _$s12FeatureFlags0aB3KeyP6domains12StaticStringVvgTq
__ FeatureFlags: _$s12FeatureFlags0aB3KeyP7features12StaticStringVvgTq
__ Foundation: _$s10Foundation10URLRequestV3url11cachePolicy15timeoutIntervalAcA3URLV_So017NSURLRequestCacheE0VSdtcfC
__ Foundation: _$s10Foundation10URLRequestVMa
__ Foundation: _$s10Foundation11JSONDecoderC6decode_4fromxxm_AA4DataVtKSeRzlFTj
__ Foundation: _$s10Foundation11JSONDecoderCACycfc
__ Foundation: _$s10Foundation11JSONDecoderCMa
__ Foundation: _$s10Foundation11JSONEncoderC6encodeyAA4DataVxKSERzlFTj
__ Foundation: _$s10Foundation11JSONEncoderCACycfc
__ Foundation: _$s10Foundation11JSONEncoderCMa
__ Foundation: _$s10Foundation13CustomNSErrorMp
__ Foundation: _$s10Foundation13CustomNSErrorP11errorDomainSSvgZTq
__ Foundation: _$s10Foundation13CustomNSErrorP13errorUserInfoSDySSypGvgTq
__ Foundation: _$s10Foundation13CustomNSErrorP9errorCodeSivgTq
__ Foundation: _$s10Foundation13CustomNSErrorPs5ErrorTb
__ Foundation: _$s10Foundation13__DataStorageC5bytes6lengthACSVSg_Sitcfc
__ Foundation: _$s10Foundation13__DataStorageC6_bytesSvSgvg
__ Foundation: _$s10Foundation13__DataStorageC6lengthACSi_tcfc
__ Foundation: _$s10Foundation13__DataStorageC7_lengthSivg
__ Foundation: _$s10Foundation13__DataStorageC7_offsetSivg
__ Foundation: _$s10Foundation13__DataStorageC8capacityACSi_tcfc
__ Foundation: _$s10Foundation13__DataStorageCMa
__ Foundation: _$s10Foundation15ContiguousBytesP010withUnsafeC0yqd__qd__SWKXEKlFTj
__ Foundation: _$s10Foundation18_ErrorCodeProtocolMp
__ Foundation: _$s10Foundation18_ErrorCodeProtocolP01_B4TypeAC_AA21_BridgedStoredNSErrorTn
__ Foundation: _$s10Foundation18_ErrorCodeProtocolPSQTb
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorMp
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorP4CodeAC_8RawValueSYs17FixedWidthIntegerTn
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorP4CodeAC_AA06_ErrorE8ProtocolTn
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorP4CodeAC_SYTn
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorP8_nsErrorSo0D0CvgTq
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorP8_nsErrorxSo0D0C_tcfCTq
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAA06CustomD0Tb
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAA26_ObjectiveCBridgeableErrorTb
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAAE012_getEmbeddedD0yXlSgyF
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAAE08_bridgedD0xSgSo0D0C_tcfC
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAAE13errorUserInfoSDySSypGvg
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAAE4code4CodeQzvg
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAAE4hash4intoys6HasherVz_tF
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAAE8userInfoSDySSypGvg
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAAE9errorCodeSivg
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPAAE_8userInfox4CodeQz_SDySSypGtcfC
__ Foundation: _$s10Foundation21_BridgedStoredNSErrorPSHTb
__ Foundation: _$s10Foundation22_convertErrorToNSErrorySo0E0Cs0C0_pF
__ Foundation: _$s10Foundation22_convertNSErrorToErrorys0E0_pSo0C0CSgF
__ Foundation: _$s10Foundation25NSFastEnumerationIteratorV4nextypSgyF
__ Foundation: _$s10Foundation25NSFastEnumerationIteratorVMa
__ Foundation: _$s10Foundation26_ObjectiveCBridgeableErrorMp
__ Foundation: _$s10Foundation26_ObjectiveCBridgeableErrorP15_bridgedNSErrorxSgSo0F0Ch_tcfCTq
__ Foundation: _$s10Foundation26_ObjectiveCBridgeableErrorPs0D0Tb
__ Foundation: _$s10Foundation3URLV19_bridgeToObjectiveCSo5NSURLCyF
__ Foundation: _$s10Foundation3URLV36_unconditionallyBridgeFromObjectiveCyACSo5NSURLCSgFZ
__ Foundation: _$s10Foundation3URLV6stringACSgSSh_tcfC
__ Foundation: _$s10Foundation3URLVMa
__ Foundation: _$s10Foundation3URLVMn
__ Foundation: _$s10Foundation3URLVSEAAMc
__ Foundation: _$s10Foundation3URLVSHAAMc
__ Foundation: _$s10Foundation3URLVSQAAMc
__ Foundation: _$s10Foundation3URLVSeAAMc
__ Foundation: _$s10Foundation4DataV10LargeSliceV21ensureUniqueReferenceyyF
__ Foundation: _$s10Foundation4DataV11InlineSliceV21ensureUniqueReferenceyyF
__ Foundation: _$s10Foundation4DataV14RangeReferenceCMa
__ Foundation: _$s10Foundation4DataV15_RepresentationO15replaceSubrange_4with5countySnySiG_SVSgSitF
__ Foundation: _$s10Foundation4DataV15_RepresentationON
__ Foundation: _$s10Foundation4DataV15_RepresentationOyACSnySiGcig
__ Foundation: _$s10Foundation4DataV19_bridgeToObjectiveCSo6NSDataCyF
__ Foundation: _$s10Foundation4DataV36_unconditionallyBridgeFromObjectiveCyACSo6NSDataCSgFZ
__ Foundation: _$s10Foundation4DataV6appendyyACF
__ Foundation: _$s10Foundation4DataVMn
__ Foundation: _$s10Foundation4DataVN
__ Foundation: _$s10Foundation4DataVSEAAMc
__ Foundation: _$s10Foundation4DataVSeAAMc
__ Foundation: _$s10Foundation4DateV19_bridgeToObjectiveCSo6NSDateCyF
__ Foundation: _$s10Foundation4DateV36_unconditionallyBridgeFromObjectiveCyACSo6NSDateCSgFZ
__ Foundation: _$s10Foundation4DateVMa
__ Foundation: _$s10Foundation4DateVMn
__ Foundation: _$s10Foundation4UUIDV10uuidStringSSvg
__ Foundation: _$s10Foundation4UUIDVACycfC
__ Foundation: _$s10Foundation4UUIDVMa
__ Foundation: _$s10Foundation4UUIDVs23CustomStringConvertibleAAMc
__ Foundation: _$s10Foundation8URLErrorV4CodeV6badURLAEvgZ
__ Foundation: _$s10Foundation8URLErrorV4CodeVMa
__ Foundation: _$s10Foundation8URLErrorV8_nsErrorSo7NSErrorCvg
__ Foundation: _$s10Foundation8URLErrorVAA21_BridgedStoredNSErrorAAMc
__ Foundation: _$s10Foundation8URLErrorVMa
__ Foundation: _$s10_ErrorType10Foundation01_A12CodeProtocolPTl
__ Foundation: _$s4Code10Foundation21_BridgedStoredNSErrorPTl
__ Foundation: _$sSD10FoundationE19_bridgeToObjectiveCSo12NSDictionaryCyF
__ Foundation: _$sSD10FoundationE36_unconditionallyBridgeFromObjectiveCySDyxq_GSo12NSDictionaryCSgFZ
__ Foundation: _$sSRyxG10Foundation15ContiguousBytesABs5UInt8VRszlMc
__ Foundation: _$sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF
__ Foundation: _$sSS10FoundationE36_unconditionallyBridgeFromObjectiveCySSSo8NSStringCSgFZ
__ Foundation: _$sSS10FoundationE6format_S2Sh_s7CVarArg_pdtcfC
__ Foundation: _$sSS10FoundationE8EncodingV4utf8ACvgZ
__ Foundation: _$sSS10FoundationE8EncodingVMa
__ Foundation: _$sSa10FoundationE19_bridgeToObjectiveCSo7NSArrayCyF
__ Foundation: _$sSa10FoundationE36_unconditionallyBridgeFromObjectiveCySayxGSo7NSArrayCSgFZ
__ Foundation: _$sSo7NSArrayC10FoundationE12makeIteratorAC017NSFastEnumerationD0VyF
__ Foundation: _$sSy10FoundationE20replacingOccurrences2of4with7options5rangeSSqd___qd_0_So22NSStringCompareOptionsVSnySS5IndexVGSgtSyRd__SyRd_0_r0_lF
__ Foundation: _$sSy10FoundationE4data5using20allowLossyConversionAA4DataVSgSSAAE8EncodingV_SbtF
__ Foundation: _$ss15CollectionOfOneVyxG10Foundation15ContiguousBytesADs5UInt8VRszlMc
__ Foundation: _$ss5ErrorP10FoundationAC13CustomNSErrorRzrlE5_codeSivg
__ Foundation: _$ss5ErrorP10FoundationAC13CustomNSErrorRzrlE7_domainSSvg
__ Foundation: _NSAllMapTableKeys
__ Foundation: _NSClassFromString
__ Foundation: _NSCocoaErrorDomain
__ Foundation: _NSFilePathErrorKey
__ Foundation: _NSFileProtectionCompleteUntilFirstUserAuthentication
__ Foundation: _NSFileProtectionKey
__ Foundation: _NSFileSystemFreeSize
__ Foundation: _NSHomeDirectory
__ Foundation: _NSLocalizedDescriptionKey
__ Foundation: _NSPOSIXErrorDomain
__ Foundation: _NSProtocolFromString
__ Foundation: _NSSearchPathForDirectoriesInDomains
__ Foundation: _NSSelectorFromString
__ Foundation: _NSStringFromClass
__ Foundation: _NSStringFromProtocol
__ Foundation: _NSStringFromRange
__ Foundation: _NSStringFromSelector
__ Foundation: _NSTemporaryDirectory
__ Foundation: _NSURLErrorDomain
__ Foundation: _NSURLErrorKey
__ Foundation: _NSUnderlyingErrorKey
__ Foundation: _OBJC_CLASS_$_NSAssertionHandler
__ Foundation: _OBJC_CLASS_$_NSBlockOperation
__ Foundation: _OBJC_CLASS_$_NSBundle
__ Foundation: _OBJC_CLASS_$_NSCharacterSet
__ Foundation: _OBJC_CLASS_$_NSCoder
__ Foundation: _OBJC_CLASS_$_NSComparisonPredicate
__ Foundation: _OBJC_CLASS_$_NSCompoundPredicate
__ Foundation: _OBJC_CLASS_$_NSConstantIntegerNumber
__ Foundation: _OBJC_CLASS_$_NSDateFormatter
__ Foundation: _OBJC_CLASS_$_NSError
__ Foundation: _OBJC_CLASS_$_NSExpression
__ Foundation: _OBJC_CLASS_$_NSFileHandle
__ Foundation: _OBJC_CLASS_$_NSFileManager
__ Foundation: _OBJC_CLASS_$_NSHTTPURLResponse
__ Foundation: _OBJC_CLASS_$_NSHashTable
__ Foundation: _OBJC_CLASS_$_NSIndexSet
__ Foundation: _OBJC_CLASS_$_NSItemProvider
__ Foundation: _OBJC_CLASS_$_NSJSONSerialization
__ Foundation: _OBJC_CLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_CLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_CLASS_$_NSLock
__ Foundation: _OBJC_CLASS_$_NSMapTable
__ Foundation: _OBJC_CLASS_$_NSMutableIndexSet
__ Foundation: _OBJC_CLASS_$_NSMutableString
__ Foundation: _OBJC_CLASS_$_NSMutableURLRequest
__ Foundation: _OBJC_CLASS_$_NSNotificationCenter
__ Foundation: _OBJC_CLASS_$_NSNumber
__ Foundation: _OBJC_CLASS_$_NSOperation
__ Foundation: _OBJC_CLASS_$_NSOperationQueue
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponents
__ Foundation: _OBJC_CLASS_$_NSPersonNameComponentsFormatter
__ Foundation: _OBJC_CLASS_$_NSPointerArray
__ Foundation: _OBJC_CLASS_$_NSPredicate
__ Foundation: _OBJC_CLASS_$_NSProcessInfo
__ Foundation: _OBJC_CLASS_$_NSPropertyListSerialization
__ Foundation: _OBJC_CLASS_$_NSRegularExpression
__ Foundation: _OBJC_CLASS_$_NSSortDescriptor
__ Foundation: _OBJC_CLASS_$_NSString
__ Foundation: _OBJC_CLASS_$_NSThread
__ Foundation: _OBJC_CLASS_$_NSURLComponents
__ Foundation: _OBJC_CLASS_$_NSUUID
__ Foundation: _OBJC_CLASS_$_NSValue
__ Foundation: _OBJC_CLASS_$_NSXPCCoder
__ Foundation: _OBJC_CLASS_$_NSXPCConnection
__ Foundation: _OBJC_CLASS_$_NSXPCInterface
__ Foundation: _OBJC_METACLASS_$_NSError
__ Foundation: _OBJC_METACLASS_$_NSKeyedArchiver
__ Foundation: _OBJC_METACLASS_$_NSKeyedUnarchiver
__ Foundation: _OBJC_METACLASS_$_NSOperation
__ Foundation: _OBJC_METACLASS_$_NSSortDescriptor
__ ManagedConfiguration: _OBJC_CLASS_$_MCProfileConnection
__ MobileKeyBag: _MKBBackupClose
__ MobileKeyBag: _MKBBackupGetFileDescriptors
__ MobileKeyBag: _MKBBackupOpen
__ MobileKeyBag: _MKBBackupSize
__ Network: _nw_parameters_copy_dictionary
__ Network: _nw_parameters_create
__ Network: _nw_parameters_set_source_application_by_bundle_id
__ ProtectedCloudStorage: _PCSCloudKitShareTokenCopyDecryptedData
__ ProtectedCloudStorage: _PCSCloudKitShareTokenCopyEncryptedData
__ ProtectedCloudStorage: _PCSCopyUnwrappedKey
__ ProtectedCloudStorage: _PCSServiceItemTypeIsManatee
__ ProtocolBuffer: _OBJC_CLASS_$_PBCodable
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._bytes
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._error
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._length
__ ProtocolBuffer: _OBJC_IVAR_$_PBDataReader._pos
__ ProtocolBuffer: _OBJC_METACLASS_$_PBCodable
__ ProtocolBuffer: _PBDataWriterWriteDataField
__ ProtocolBuffer: _PBDataWriterWriteDoubleField
__ ProtocolBuffer: _PBDataWriterWriteInt32Field
__ ProtocolBuffer: _PBDataWriterWriteInt64Field
__ ProtocolBuffer: _PBDataWriterWriteStringField
__ ProtocolBuffer: _PBDataWriterWriteSubmessage
__ ProtocolBuffer: _PBReaderPlaceMark
__ ProtocolBuffer: _PBReaderReadData
__ ProtocolBuffer: _PBReaderReadString
__ ProtocolBuffer: _PBReaderRecallMark
__ ProtocolBuffer: _PBReaderSkipValueWithTag
__ ProtocolBuffer: _PBRepeatedDoubleAdd
__ ProtocolBuffer: _PBRepeatedDoubleClear
__ ProtocolBuffer: _PBRepeatedDoubleCopy
__ ProtocolBuffer: _PBRepeatedDoubleHash
__ ProtocolBuffer: _PBRepeatedDoubleIsEqual
__ ProtocolBuffer: _PBRepeatedDoubleNSArray
__ ProtocolBuffer: _PBRepeatedDoubleSet
__ ProtocolBuffer: _PBRepeatedInt64Add
__ ProtocolBuffer: _PBRepeatedInt64Clear
__ ProtocolBuffer: _PBRepeatedInt64Copy
__ ProtocolBuffer: _PBRepeatedInt64Hash
__ ProtocolBuffer: _PBRepeatedInt64IsEqual
__ ProtocolBuffer: _PBRepeatedInt64NSArray
__ ProtocolBuffer: _PBRepeatedInt64Set
__ PushKit: _OBJC_CLASS_$_PKPushRegistry
__ PushKit: _PKPushTypeUserNotifications
__ Security: _SecTaskCopyValuesForEntitlements
__ Security: _SecTaskCreateWithAuditToken
__ SharedWithYouCore: _OBJC_CLASS_$__SWCollaborationOption
__ SharedWithYouCore: _OBJC_CLASS_$__SWCollaborationOptionsGroup
__ SharedWithYouCore: _OBJC_CLASS_$__SWCollaborationOptionsPickerGroup
__ SharedWithYouCore: _OBJC_CLASS_$__SWCollaborationShareOptions
__ SoftLinking: __sl_dlopen
__ SystemConfiguration: _SCNetworkReachabilityCreateWithName
__ SystemConfiguration: _SCNetworkReachabilityGetFlags
__ SystemConfiguration: _SCNetworkReachabilitySetCallback
__ SystemConfiguration: _SCNetworkReachabilitySetDispatchQueue
__ UniformTypeIdentifiers: _UTTypeData
__ UserManagement: _OBJC_CLASS_$_UMUserManager
__ libBASupport.dylib: _ba_is_process_extension
__ libMobileGestalt.dylib: _MGCopyAnswer
__ libSystem.B.dylib: _CCCryptorCreateWithMode
__ libSystem.B.dylib: _CCCryptorUpdate
__ libSystem.B.dylib: _CC_MD5
__ libSystem.B.dylib: _CC_SHA1
__ libSystem.B.dylib: _CC_SHA256
__ libSystem.B.dylib: _NSVersionOfRunTimeLibrary
__ libSystem.B.dylib: _OBJC_CLASS_$_OS_dispatch_queue
__ libSystem.B.dylib: _XPC_ACTIVITY_ALLOW_BATTERY
__ libSystem.B.dylib: _XPC_ACTIVITY_CHECK_IN
__ libSystem.B.dylib: _XPC_ACTIVITY_DELAY
__ libSystem.B.dylib: _XPC_ACTIVITY_DUET_ACTIVITY_SCHEDULER_DATA
__ libSystem.B.dylib: _XPC_ACTIVITY_DUET_RELATED_APPLICATIONS
__ libSystem.B.dylib: _XPC_ACTIVITY_GRACE_PERIOD
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_15_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_DAY
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_HOUR
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_1_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_30_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_4_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_5_MIN
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_7_DAYS
__ libSystem.B.dylib: _XPC_ACTIVITY_INTERVAL_8_HOURS
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_TRANSFER_ENDPOINT
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_TRANSFER_PARAMETERS
__ libSystem.B.dylib: _XPC_ACTIVITY_NETWORK_TRANSFER_SIZE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_MAINTENANCE
__ libSystem.B.dylib: _XPC_ACTIVITY_PRIORITY_UTILITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REPEATING
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRES_BUDDY_COMPLETE
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_INEXPENSIVE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_NETWORK_CONNECTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_REQUIRE_SIGNIFICANT_USER_INACTIVITY
__ libSystem.B.dylib: _XPC_ACTIVITY_RUN_WHEN_APP_FOREGROUNDED
__ libSystem.B.dylib: _XPC_ACTIVITY_USER_REQUESTED_BACKUP_TASK
__ libSystem.B.dylib: __Block_copy
__ libSystem.B.dylib: __Block_object_dispose
__ libSystem.B.dylib: __Block_release
__ libSystem.B.dylib: __Block_signature
__ libSystem.B.dylib: __NSConcreteGlobalBlock
__ libSystem.B.dylib: __NSConcreteStackBlock
__ libSystem.B.dylib: __Unwind_Resume
__ libSystem.B.dylib: ___assert_rtn
__ libSystem.B.dylib: ___chkstk_darwin
__ libSystem.B.dylib: ___error
__ libSystem.B.dylib: ___exp10
__ libSystem.B.dylib: ___stack_chk_fail
__ libSystem.B.dylib: ___stack_chk_guard
__ libSystem.B.dylib: ___toupper
__ libSystem.B.dylib: __dispatch_main_q
__ libSystem.B.dylib: __dispatch_queue_attr_concurrent
__ libSystem.B.dylib: __dispatch_source_type_timer
__ libSystem.B.dylib: __dyld_get_image_header
__ libSystem.B.dylib: __dyld_get_image_uuid
__ libSystem.B.dylib: __dyld_image_count
__ libSystem.B.dylib: __os_activity_create
__ libSystem.B.dylib: __os_activity_current
__ libSystem.B.dylib: __os_crash
__ libSystem.B.dylib: __os_log_debug_impl
__ libSystem.B.dylib: __os_log_error_impl
__ libSystem.B.dylib: __os_log_fault_impl
__ libSystem.B.dylib: __os_log_impl
__ libSystem.B.dylib: __os_signpost_emit_with_name_impl
__ libSystem.B.dylib: __tlv_bootstrap
__ libSystem.B.dylib: __xpc_bool_false
__ libSystem.B.dylib: __xpc_bool_true
__ libSystem.B.dylib: __xpc_type_dictionary
__ libSystem.B.dylib: _arc4random
__ libSystem.B.dylib: _arc4random_buf
__ libSystem.B.dylib: _arc4random_uniform
__ libSystem.B.dylib: _bzero
__ libSystem.B.dylib: _calloc
__ libSystem.B.dylib: _clock_gettime_nsec_np
__ libSystem.B.dylib: _close
__ libSystem.B.dylib: _confstr
__ libSystem.B.dylib: _dispatch_activate
__ libSystem.B.dylib: _dispatch_after
__ libSystem.B.dylib: _dispatch_assert_queue$V2
__ libSystem.B.dylib: _dispatch_async
__ libSystem.B.dylib: _dispatch_block_cancel
__ libSystem.B.dylib: _dispatch_block_create
__ libSystem.B.dylib: _dispatch_block_create_with_voucher
__ libSystem.B.dylib: _dispatch_block_create_with_voucher_and_qos_class
__ libSystem.B.dylib: _dispatch_get_global_queue
__ libSystem.B.dylib: _dispatch_get_specific
__ libSystem.B.dylib: _dispatch_group_create
__ libSystem.B.dylib: _dispatch_group_enter
__ libSystem.B.dylib: _dispatch_group_leave
__ libSystem.B.dylib: _dispatch_group_notify
__ libSystem.B.dylib: _dispatch_group_wait
__ libSystem.B.dylib: _dispatch_once
__ libSystem.B.dylib: _dispatch_queue_attr_make_initially_inactive
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_autorelease_frequency
__ libSystem.B.dylib: _dispatch_queue_attr_make_with_qos_class
__ libSystem.B.dylib: _dispatch_queue_create
__ libSystem.B.dylib: _dispatch_queue_set_specific
__ libSystem.B.dylib: _dispatch_resume
__ libSystem.B.dylib: _dispatch_semaphore_create
__ libSystem.B.dylib: _dispatch_semaphore_signal
__ libSystem.B.dylib: _dispatch_semaphore_wait
__ libSystem.B.dylib: _dispatch_set_target_queue
__ libSystem.B.dylib: _dispatch_source_cancel
__ libSystem.B.dylib: _dispatch_source_create
__ libSystem.B.dylib: _dispatch_source_set_event_handler
__ libSystem.B.dylib: _dispatch_source_set_timer
__ libSystem.B.dylib: _dispatch_suspend
__ libSystem.B.dylib: _dispatch_sync
__ libSystem.B.dylib: _dispatch_time
__ libSystem.B.dylib: _dlerror
__ libSystem.B.dylib: _dlsym
__ libSystem.B.dylib: _dup
__ libSystem.B.dylib: _dyld_get_program_sdk_version
__ libSystem.B.dylib: _dyld_program_sdk_at_least
__ libSystem.B.dylib: _erf
__ libSystem.B.dylib: _exit
__ libSystem.B.dylib: _exp2
__ libSystem.B.dylib: _fcntl
__ libSystem.B.dylib: _fgetattrlist
__ libSystem.B.dylib: _fmod
__ libSystem.B.dylib: _free
__ libSystem.B.dylib: _fstat
__ libSystem.B.dylib: _getenv
__ libSystem.B.dylib: _geteuid
__ libSystem.B.dylib: _getpid
__ libSystem.B.dylib: _getuid
__ libSystem.B.dylib: _getxattr
__ libSystem.B.dylib: _kill
__ libSystem.B.dylib: _log2
__ libSystem.B.dylib: _mach_continuous_approximate_time
__ libSystem.B.dylib: _mach_continuous_time
__ libSystem.B.dylib: _mach_task_self_
__ libSystem.B.dylib: _mach_timebase_info
__ libSystem.B.dylib: _macho_arch_name_for_cpu_type
__ libSystem.B.dylib: _malloc
__ libSystem.B.dylib: _malloc_size
__ libSystem.B.dylib: _memcpy
__ libSystem.B.dylib: _memmove
__ libSystem.B.dylib: _mmap
__ libSystem.B.dylib: _munmap
__ libSystem.B.dylib: _notify_cancel
__ libSystem.B.dylib: _notify_register_dispatch
__ libSystem.B.dylib: _open
__ libSystem.B.dylib: _openbyid_np
__ libSystem.B.dylib: _os_activity_get_active
__ libSystem.B.dylib: _os_activity_scope_enter
__ libSystem.B.dylib: _os_activity_scope_leave
__ libSystem.B.dylib: _os_log_create
__ libSystem.B.dylib: _os_log_type_enabled
__ libSystem.B.dylib: _os_signpost_enabled
__ libSystem.B.dylib: _os_signpost_id_generate
__ libSystem.B.dylib: _os_state_remove_handler
__ libSystem.B.dylib: _os_transaction_create
__ libSystem.B.dylib: _os_unfair_lock_assert_owner
__ libSystem.B.dylib: _os_unfair_lock_lock
__ libSystem.B.dylib: _os_unfair_lock_unlock
__ libSystem.B.dylib: _os_variant_has_internal_content
__ libSystem.B.dylib: _proc_name
__ libSystem.B.dylib: _proc_pidinfo
__ libSystem.B.dylib: _pthread_cond_broadcast
__ libSystem.B.dylib: _pthread_cond_wait
__ libSystem.B.dylib: _pthread_mutex_init
__ libSystem.B.dylib: _pthread_mutex_lock
__ libSystem.B.dylib: _pthread_mutex_unlock
__ libSystem.B.dylib: _pthread_mutexattr_init
__ libSystem.B.dylib: _pthread_mutexattr_settype
__ libSystem.B.dylib: _pthread_self
__ libSystem.B.dylib: _qos_class_self
__ libSystem.B.dylib: _realpath$DARWIN_EXTSN
__ libSystem.B.dylib: _sandbox_extension_consume
__ libSystem.B.dylib: _sandbox_extension_release
__ libSystem.B.dylib: _setxattr
__ libSystem.B.dylib: _sleep
__ libSystem.B.dylib: _snprintf
__ libSystem.B.dylib: _stat
__ libSystem.B.dylib: _strcmp
__ libSystem.B.dylib: _strerror
__ libSystem.B.dylib: _strlen
__ libSystem.B.dylib: _strncmp
__ libSystem.B.dylib: _strrchr
__ libSystem.B.dylib: _sysctl
__ libSystem.B.dylib: _task_info
__ libSystem.B.dylib: _usleep
__ libSystem.B.dylib: _voucher_adopt
__ libSystem.B.dylib: _voucher_copy
__ libSystem.B.dylib: _xpc_activity_add_eligibility_changed_handler
__ libSystem.B.dylib: _xpc_activity_copy_criteria
__ libSystem.B.dylib: _xpc_activity_copy_identifier
__ libSystem.B.dylib: _xpc_activity_get_state
__ libSystem.B.dylib: _xpc_activity_register
__ libSystem.B.dylib: _xpc_activity_remove_eligibility_changed_handler
__ libSystem.B.dylib: _xpc_activity_set_criteria
__ libSystem.B.dylib: _xpc_activity_set_state
__ libSystem.B.dylib: _xpc_activity_should_be_data_budgeted
__ libSystem.B.dylib: _xpc_activity_should_defer
__ libSystem.B.dylib: _xpc_activity_unregister
__ libSystem.B.dylib: _xpc_array_create_empty
__ libSystem.B.dylib: _xpc_array_get_count
__ libSystem.B.dylib: _xpc_array_get_string
__ libSystem.B.dylib: _xpc_array_set_string
__ libSystem.B.dylib: _xpc_copy
__ libSystem.B.dylib: _xpc_copy_short_description
__ libSystem.B.dylib: _xpc_dictionary_apply
__ libSystem.B.dylib: _xpc_dictionary_create
__ libSystem.B.dylib: _xpc_dictionary_create_empty
__ libSystem.B.dylib: _xpc_dictionary_get_array
__ libSystem.B.dylib: _xpc_dictionary_get_bool
__ libSystem.B.dylib: _xpc_dictionary_get_dictionary
__ libSystem.B.dylib: _xpc_dictionary_get_double
__ libSystem.B.dylib: _xpc_dictionary_get_int64
__ libSystem.B.dylib: _xpc_dictionary_get_string
__ libSystem.B.dylib: _xpc_dictionary_get_value
__ libSystem.B.dylib: _xpc_dictionary_set_bool
__ libSystem.B.dylib: _xpc_dictionary_set_double
__ libSystem.B.dylib: _xpc_dictionary_set_int64
__ libSystem.B.dylib: _xpc_dictionary_set_string
__ libSystem.B.dylib: _xpc_dictionary_set_value
__ libSystem.B.dylib: _xpc_equal
__ libSystem.B.dylib: _xpc_get_type
__ libSystem.B.dylib: _xpc_type_get_name
__ libobjc.A.dylib: _OBJC_CLASS_$_NSObject
__ libobjc.A.dylib: _OBJC_METACLASS_$_NSObject
__ libobjc.A.dylib: ___objc_personality_v0
__ libobjc.A.dylib: __objc_empty_cache
__ libobjc.A.dylib: __protocol_getMethodTypeEncoding
__ libobjc.A.dylib: _class_addMethod
__ libobjc.A.dylib: _class_conformsToProtocol
__ libobjc.A.dylib: _class_copyPropertyList
__ libobjc.A.dylib: _class_getInstanceMethod
__ libobjc.A.dylib: _class_getProperty
__ libobjc.A.dylib: _class_getSuperclass
__ libobjc.A.dylib: _imp_implementationWithBlock
__ libobjc.A.dylib: _method_getImplementation
__ libobjc.A.dylib: _objc_alloc
__ libobjc.A.dylib: _objc_allocWithZone
__ libobjc.A.dylib: _objc_alloc_init
__ libobjc.A.dylib: _objc_allocateClassPair
__ libobjc.A.dylib: _objc_autorelease
__ libobjc.A.dylib: _objc_autoreleasePoolPop
__ libobjc.A.dylib: _objc_autoreleasePoolPush
__ libobjc.A.dylib: _objc_autoreleaseReturnValue
__ libobjc.A.dylib: _objc_begin_catch
__ libobjc.A.dylib: _objc_claimAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_copyWeak
__ libobjc.A.dylib: _objc_destroyWeak
__ libobjc.A.dylib: _objc_ehtype_vtable
__ libobjc.A.dylib: _objc_end_catch
__ libobjc.A.dylib: _objc_enumerationMutation
__ libobjc.A.dylib: _objc_exception_throw
__ libobjc.A.dylib: _objc_getClass
__ libobjc.A.dylib: _objc_getProperty
__ libobjc.A.dylib: _objc_getProtocol
__ libobjc.A.dylib: _objc_initWeak
__ libobjc.A.dylib: _objc_loadWeakRetained
__ libobjc.A.dylib: _objc_msgSend
__ libobjc.A.dylib: _objc_msgSendSuper2
__ libobjc.A.dylib: _objc_opt_class
__ libobjc.A.dylib: _objc_opt_isKindOfClass
__ libobjc.A.dylib: _objc_opt_new
__ libobjc.A.dylib: _objc_opt_respondsToSelector
__ libobjc.A.dylib: _objc_opt_self
__ libobjc.A.dylib: _objc_registerClassPair
__ libobjc.A.dylib: _objc_release
__ libobjc.A.dylib: _objc_release_x1
__ libobjc.A.dylib: _objc_release_x10
__ libobjc.A.dylib: _objc_release_x19
__ libobjc.A.dylib: _objc_release_x2
__ libobjc.A.dylib: _objc_release_x20
__ libobjc.A.dylib: _objc_release_x21
__ libobjc.A.dylib: _objc_release_x22
__ libobjc.A.dylib: _objc_release_x23
__ libobjc.A.dylib: _objc_release_x24
__ libobjc.A.dylib: _objc_release_x25
__ libobjc.A.dylib: _objc_release_x26
__ libobjc.A.dylib: _objc_release_x27
__ libobjc.A.dylib: _objc_release_x28
__ libobjc.A.dylib: _objc_release_x8
__ libobjc.A.dylib: _objc_release_x9
__ libobjc.A.dylib: _objc_retain
__ libobjc.A.dylib: _objc_retainAutorelease
__ libobjc.A.dylib: _objc_retainAutoreleaseReturnValue
__ libobjc.A.dylib: _objc_retainAutoreleasedReturnValue
__ libobjc.A.dylib: _objc_retainBlock
__ libobjc.A.dylib: _objc_retain_x1
__ libobjc.A.dylib: _objc_retain_x10
__ libobjc.A.dylib: _objc_retain_x19
__ libobjc.A.dylib: _objc_retain_x2
__ libobjc.A.dylib: _objc_retain_x20
__ libobjc.A.dylib: _objc_retain_x21
__ libobjc.A.dylib: _objc_retain_x22
__ libobjc.A.dylib: _objc_retain_x23
__ libobjc.A.dylib: _objc_retain_x24
__ libobjc.A.dylib: _objc_retain_x25
__ libobjc.A.dylib: _objc_retain_x26
__ libobjc.A.dylib: _objc_retain_x27
__ libobjc.A.dylib: _objc_retain_x28
__ libobjc.A.dylib: _objc_retain_x3
__ libobjc.A.dylib: _objc_retain_x4
__ libobjc.A.dylib: _objc_retain_x5
__ libobjc.A.dylib: _objc_retain_x6
__ libobjc.A.dylib: _objc_retain_x7
__ libobjc.A.dylib: _objc_retain_x8
__ libobjc.A.dylib: _objc_retain_x9
__ libobjc.A.dylib: _objc_setProperty_atomic
__ libobjc.A.dylib: _objc_setProperty_atomic_copy
__ libobjc.A.dylib: _objc_setProperty_nonatomic_copy
__ libobjc.A.dylib: _objc_storeStrong
__ libobjc.A.dylib: _objc_storeWeak
__ libobjc.A.dylib: _objc_sync_enter
__ libobjc.A.dylib: _objc_sync_exit
__ libobjc.A.dylib: _objc_terminate
__ libobjc.A.dylib: _objc_unsafeClaimAutoreleasedReturnValue
__ libobjc.A.dylib: _object_getClass
__ libobjc.A.dylib: _object_getClassName
__ libobjc.A.dylib: _property_copyAttributeList
__ libobjc.A.dylib: _property_copyAttributeValue
__ libobjc.A.dylib: _property_getName
__ libobjc.A.dylib: _protocol_copyMethodDescriptionList
__ libobjc.A.dylib: _protocol_copyProtocolList
__ libobjc.A.dylib: _protocol_getMethodDescription
__ libobjc.A.dylib: _sel_registerName
__ libsqlite3.dylib: __sqlite3_db_clone
__ libsqlite3.dylib: __sqlite3_maintain_load_factor
__ libsqlite3.dylib: _sqlite3_bind_blob
__ libsqlite3.dylib: _sqlite3_bind_blob64
__ libsqlite3.dylib: _sqlite3_bind_double
__ libsqlite3.dylib: _sqlite3_bind_int
__ libsqlite3.dylib: _sqlite3_bind_int64
__ libsqlite3.dylib: _sqlite3_bind_null
__ libsqlite3.dylib: _sqlite3_bind_parameter_index
__ libsqlite3.dylib: _sqlite3_bind_text
__ libsqlite3.dylib: _sqlite3_bind_text16
__ libsqlite3.dylib: _sqlite3_busy_timeout
__ libsqlite3.dylib: _sqlite3_changes
__ libsqlite3.dylib: _sqlite3_clear_bindings
__ libsqlite3.dylib: _sqlite3_close
__ libsqlite3.dylib: _sqlite3_column_blob
__ libsqlite3.dylib: _sqlite3_column_bytes
__ libsqlite3.dylib: _sqlite3_column_count
__ libsqlite3.dylib: _sqlite3_column_double
__ libsqlite3.dylib: _sqlite3_column_int
__ libsqlite3.dylib: _sqlite3_column_int64
__ libsqlite3.dylib: _sqlite3_column_name
__ libsqlite3.dylib: _sqlite3_column_text
__ libsqlite3.dylib: _sqlite3_column_type
__ libsqlite3.dylib: _sqlite3_errcode
__ libsqlite3.dylib: _sqlite3_errmsg
__ libsqlite3.dylib: _sqlite3_exec
__ libsqlite3.dylib: _sqlite3_extended_errcode
__ libsqlite3.dylib: _sqlite3_extended_result_codes
__ libsqlite3.dylib: _sqlite3_finalize
__ libsqlite3.dylib: _sqlite3_last_insert_rowid
__ libsqlite3.dylib: _sqlite3_open_v2
__ libsqlite3.dylib: _sqlite3_prepare_v2
__ libsqlite3.dylib: _sqlite3_reset
__ libsqlite3.dylib: _sqlite3_step
__ libsqlite3.dylib: _sqlite3_trace_v2
__ libsqlite3.dylib: _sqlite3_wal_checkpoint_v2
__ libswiftCore.dylib: _$s7ElementSTTl
__ libswiftCore.dylib: _$s7ElementStTl
__ libswiftCore.dylib: _$s8IteratorSTTl
__ libswiftCore.dylib: _$s8RawValueSYTl
__ libswiftCore.dylib: _$sBOWV
__ libswiftCore.dylib: _$sBbWV
__ libswiftCore.dylib: _$sBi64_WV
__ libswiftCore.dylib: _$sSE6encode2toys7Encoder_p_tKFTq
__ libswiftCore.dylib: _$sSEMp
__ libswiftCore.dylib: _$sSH13_rawHashValue4seedS2i_tFTj
__ libswiftCore.dylib: _$sSH13_rawHashValue4seedS2i_tFTq
__ libswiftCore.dylib: _$sSH4hash4intoys6HasherVz_tFTq
__ libswiftCore.dylib: _$sSH9hashValueSivgTq
__ libswiftCore.dylib: _$sSHMp
__ libswiftCore.dylib: _$sSHSQTb
__ libswiftCore.dylib: _$sSKsSS7ElementRtzrlE6joined9separatorS2S_tF
__ libswiftCore.dylib: _$sSQ2eeoiySbx_xtFZTj
__ libswiftCore.dylib: _$sSQ2eeoiySbx_xtFZTq
__ libswiftCore.dylib: _$sSQMp
__ libswiftCore.dylib: _$sSS10lowercasedSSyF
__ libswiftCore.dylib: _$sSS18_uncheckedFromUTF8ySSSRys5UInt8VGFZ
__ libswiftCore.dylib: _$sSS4hash4intoys6HasherVz_tF
__ libswiftCore.dylib: _$sSS5countSivg
__ libswiftCore.dylib: _$sSS5index_8offsetBySS5IndexVAD_SitF
__ libswiftCore.dylib: _$sSS6appendyySSF
__ libswiftCore.dylib: _$sSS8UTF8ViewV13_foreignIndex5afterSS0D0VAF_tF
__ libswiftCore.dylib: _$sSS8UTF8ViewV13_foreignIndex_8offsetBySS0D0VAF_SitF
__ libswiftCore.dylib: _$sSS8UTF8ViewV16_foreignDistance4from2toSiSS5IndexV_AGtF
__ libswiftCore.dylib: _$sSS8UTF8ViewV17_foreignSubscript8positions5UInt8VSS5IndexV_tF
__ libswiftCore.dylib: _$sSS9UTF16ViewV5index_8offsetBySS5IndexVAF_SitF
__ libswiftCore.dylib: _$sSSMn
__ libswiftCore.dylib: _$sSSN
__ libswiftCore.dylib: _$sSSSHsWP
__ libswiftCore.dylib: _$sSSSysMc
__ libswiftCore.dylib: _$sSSySSxcs25LosslessStringConvertibleRzSTRzSJ7ElementSTRtzlufC
__ libswiftCore.dylib: _$sSSySsSnySS5IndexVGcig
__ libswiftCore.dylib: _$sST12makeIterator0B0QzyFTq
__ libswiftCore.dylib: _$sST13_copyContents12initializing8IteratorQz_SitSry7ElementQzG_tFTq
__ libswiftCore.dylib: _$sST19underestimatedCountSivgTq
__ libswiftCore.dylib: _$sST22_copyToContiguousArrays0cD0Vy7ElementQzGyFTq
__ libswiftCore.dylib: _$sST31_customContainsEquatableElementySbSg0D0QzFTq
__ libswiftCore.dylib: _$sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlFTq
__ libswiftCore.dylib: _$sST8IteratorST_StTn
__ libswiftCore.dylib: _$sSTMp
__ libswiftCore.dylib: _$sSTsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF
__ libswiftCore.dylib: _$sSTsE7forEachyyy7ElementQzKXEKF
__ libswiftCore.dylib: _$sSY8rawValue03RawB0QzvgTq
__ libswiftCore.dylib: _$sSY8rawValuexSg03RawB0Qz_tcfCTq
__ libswiftCore.dylib: _$sSYMp
__ libswiftCore.dylib: _$sSaMa
__ libswiftCore.dylib: _$sSaMn
__ libswiftCore.dylib: _$sSayxGSEsSERzlMc
__ libswiftCore.dylib: _$sSayxGSKsMc
__ libswiftCore.dylib: _$sSayxGSTsMc
__ libswiftCore.dylib: _$sSayxGSesSeRzlMc
__ libswiftCore.dylib: _$sSbMn
__ libswiftCore.dylib: _$sSdMn
__ libswiftCore.dylib: _$sSdN
__ libswiftCore.dylib: _$sSe4fromxs7Decoder_p_tKcfCTq
__ libswiftCore.dylib: _$sSeMp
__ libswiftCore.dylib: _$sSfMn
__ libswiftCore.dylib: _$sSiMn
__ libswiftCore.dylib: _$sSiN
__ libswiftCore.dylib: _$sSiSEsWP
__ libswiftCore.dylib: _$sSiSesWP
__ libswiftCore.dylib: _$sSis17FixedWidthIntegersMc
__ libswiftCore.dylib: _$sSnyxGSEsSERzrlMc
__ libswiftCore.dylib: _$sSnyxGSesSeRzrlMc
__ libswiftCore.dylib: _$sSqMa
__ libswiftCore.dylib: _$sSsN
__ libswiftCore.dylib: _$sSsSTsMc
__ libswiftCore.dylib: _$sSss25LosslessStringConvertiblesWP
__ libswiftCore.dylib: _$sSt4next7ElementQzSgyFTq
__ libswiftCore.dylib: _$sStMp
__ libswiftCore.dylib: _$sSuMn
__ libswiftCore.dylib: _$ss10SetAlgebraPyxqd__ncSTRd__7ElementQyd__ACRtzlufCTj
__ libswiftCore.dylib: _$ss11AnyHashableV13_rawHashValue4seedS2i_tF
__ libswiftCore.dylib: _$ss11AnyHashableV2eeoiySbAB_ABtFZ
__ libswiftCore.dylib: _$ss11AnyHashableVMn
__ libswiftCore.dylib: _$ss11AnyHashableVN
__ libswiftCore.dylib: _$ss11AnyHashableVyABxcSHRzlufC
__ libswiftCore.dylib: _$ss11_StringGutsV4growyySiF
__ libswiftCore.dylib: _$ss12_ArrayBufferV18_typeCheckSlowPathyySiF
__ libswiftCore.dylib: _$ss13OpaquePointerVMn
__ libswiftCore.dylib: _$ss13_StringObjectV10sharedUTF8SRys5UInt8VGvg
__ libswiftCore.dylib: _$ss15CollectionOfOneVMn
__ libswiftCore.dylib: _$ss17__CocoaDictionaryV12makeIteratorAB0D0CyF
__ libswiftCore.dylib: _$ss17__CocoaDictionaryV5countSivg
__ libswiftCore.dylib: _$ss17__CocoaDictionaryV8IteratorC4nextyXl3key_yXl5valuetSgyF
__ libswiftCore.dylib: _$ss17_assertionFailure__4file4line5flagss5NeverOs12StaticStringV_SSAHSus6UInt32VtF
__ libswiftCore.dylib: _$ss17_assertionFailure__5flagss5NeverOs12StaticStringV_SSs6UInt32VtF
__ libswiftCore.dylib: _$ss18_CocoaArrayWrapperV13_copyContents8subRange12initializingSpyyXlGSnySiG_AFtF
__ libswiftCore.dylib: _$ss18_CocoaArrayWrapperV8endIndexSivg
__ libswiftCore.dylib: _$ss18_CocoaArrayWrapperVyyXlSicig
__ libswiftCore.dylib: _$ss18_DictionaryStorageC4copy8originalAByxq_Gs05__RawaB0C_tFZ
__ libswiftCore.dylib: _$ss18_DictionaryStorageC6resize8original8capacity4moveAByxq_Gs05__RawaB0C_SiSbtFZ
__ libswiftCore.dylib: _$ss18_DictionaryStorageC7convert_8capacityAByxq_Gs07__CocoaA0V_SitFZ
__ libswiftCore.dylib: _$ss18_DictionaryStorageC8allocate8capacityAByxq_GSi_tFZ
__ libswiftCore.dylib: _$ss18_DictionaryStorageCMn
__ libswiftCore.dylib: _$ss22KeyedDecodingContainerV6decode_6forKeyS2Sm_xtKF
__ libswiftCore.dylib: _$ss22KeyedDecodingContainerV6decode_6forKeyS2im_xtKF
__ libswiftCore.dylib: _$ss22KeyedDecodingContainerV6decode_6forKeyqd__qd__m_xtKSeRd__lF
__ libswiftCore.dylib: _$ss22KeyedDecodingContainerVMn
__ libswiftCore.dylib: _$ss22KeyedEncodingContainerV6encode_6forKeyySS_xtKF
__ libswiftCore.dylib: _$ss22KeyedEncodingContainerV6encode_6forKeyySi_xtKF
__ libswiftCore.dylib: _$ss22KeyedEncodingContainerV6encode_6forKeyyqd___xtKSERd__lF
__ libswiftCore.dylib: _$ss22KeyedEncodingContainerVMn
__ libswiftCore.dylib: _$ss23CustomStringConvertibleMp
__ libswiftCore.dylib: _$ss23CustomStringConvertibleP11descriptionSSvgTj
__ libswiftCore.dylib: _$ss23CustomStringConvertibleP11descriptionSSvgTq
__ libswiftCore.dylib: _$ss23_ContiguousArrayStorageCMn
__ libswiftCore.dylib: _$ss27_stringCompareWithSmolCheck__9expectingSbs11_StringGutsV_ADs01_G16ComparisonResultOtF
__ libswiftCore.dylib: _$ss28CustomDebugStringConvertibleMp
__ libswiftCore.dylib: _$ss28CustomDebugStringConvertibleP16debugDescriptionSSvgTq
__ libswiftCore.dylib: _$ss4Int8VMn
__ libswiftCore.dylib: _$ss53KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTSys5NeverOypXpF
__ libswiftCore.dylib: _$ss5ErrorMp
__ libswiftCore.dylib: _$ss5ErrorP19_getEmbeddedNSErroryXlSgyFTq
__ libswiftCore.dylib: _$ss5ErrorP5_codeSivgTq
__ libswiftCore.dylib: _$ss5ErrorP7_domainSSvgTq
__ libswiftCore.dylib: _$ss5ErrorP9_userInfoyXlSgvgTq
__ libswiftCore.dylib: _$ss5ErrorPsE19_getEmbeddedNSErroryXlSgyF
__ libswiftCore.dylib: _$ss5ErrorPsE5_codeSivg
__ libswiftCore.dylib: _$ss5ErrorPsE7_domainSSvg
__ libswiftCore.dylib: _$ss5ErrorPsE9_userInfoyXlSgvg
__ libswiftCore.dylib: _$ss5ErrorWS
__ libswiftCore.dylib: _$ss5Int16VMn
__ libswiftCore.dylib: _$ss5Int32VMn
__ libswiftCore.dylib: _$ss5Int64VMn
__ libswiftCore.dylib: _$ss5Int64VN
__ libswiftCore.dylib: _$ss5NeverOMn
__ libswiftCore.dylib: _$ss5NeverON
__ libswiftCore.dylib: _$ss5NeverOs5ErrorsWP
__ libswiftCore.dylib: _$ss5UInt8VMn
__ libswiftCore.dylib: _$ss5UInt8VN
__ libswiftCore.dylib: _$ss5UInt8Vs7CVarArgsWP
__ libswiftCore.dylib: _$ss6HasherV5_seedABSi_tcfC
__ libswiftCore.dylib: _$ss6HasherV8_combineyySuF
__ libswiftCore.dylib: _$ss6HasherV9_finalizeSiyF
__ libswiftCore.dylib: _$ss6ResultOMn
__ libswiftCore.dylib: _$ss6UInt16VMn
__ libswiftCore.dylib: _$ss6UInt32VMn
__ libswiftCore.dylib: _$ss6UInt64VMn
__ libswiftCore.dylib: _$ss7CVarArgMp
__ libswiftCore.dylib: _$ss7DecoderP9container7keyedBys22KeyedDecodingContainerVyqd__Gqd__m_tKs9CodingKeyRd__lFTj
__ libswiftCore.dylib: _$ss7EncoderP9container7keyedBys22KeyedEncodingContainerVyqd__Gqd__m_ts9CodingKeyRd__lFTj
__ libswiftCore.dylib: _$ss9CodingKeyMp
__ libswiftCore.dylib: _$ss9CodingKeyP11stringValueSSvgTq
__ libswiftCore.dylib: _$ss9CodingKeyP11stringValuexSgSS_tcfCTq
__ libswiftCore.dylib: _$ss9CodingKeyP8intValueSiSgvgTq
__ libswiftCore.dylib: _$ss9CodingKeyP8intValuexSgSi_tcfCTq
__ libswiftCore.dylib: _$ss9CodingKeyPs23CustomStringConvertibleTb
__ libswiftCore.dylib: _$ss9CodingKeyPs28CustomDebugStringConvertibleTb
__ libswiftCore.dylib: _$ss9CodingKeyPsE11descriptionSSvg
__ libswiftCore.dylib: _$ss9CodingKeyPsE16debugDescriptionSSvg
__ libswiftCore.dylib: _$ss9_typeName_9qualifiedSSypXp_SbtF
__ libswiftCore.dylib: _$syXlN
__ libswiftCore.dylib: _$sypN
__ libswiftCore.dylib: _$sytN
__ libswiftCore.dylib: _$sytWV
__ libswiftCore.dylib: __swiftEmptyArrayStorage
__ libswiftCore.dylib: __swiftEmptyDictionarySingleton
__ libswiftCore.dylib: __swift_stdlib_reportUnimplementedInitializer
__ libswiftCore.dylib: _swift_allocBox
__ libswiftCore.dylib: _swift_allocError
__ libswiftCore.dylib: _swift_allocObject
__ libswiftCore.dylib: _swift_allocateGenericValueMetadata
__ libswiftCore.dylib: _swift_arrayDestroy
__ libswiftCore.dylib: _swift_arrayInitWithCopy
__ libswiftCore.dylib: _swift_beginAccess
__ libswiftCore.dylib: _swift_bridgeObjectRelease
__ libswiftCore.dylib: _swift_bridgeObjectRelease_n
__ libswiftCore.dylib: _swift_bridgeObjectRetain
__ libswiftCore.dylib: _swift_bridgeObjectRetain_n
__ libswiftCore.dylib: _swift_checkMetadataState
__ libswiftCore.dylib: _swift_conformsToProtocol
__ libswiftCore.dylib: _swift_deallocObject
__ libswiftCore.dylib: _swift_deallocPartialClassInstance
__ libswiftCore.dylib: _swift_deletedMethodError
__ libswiftCore.dylib: _swift_dynamicCast
__ libswiftCore.dylib: _swift_dynamicCastClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClass
__ libswiftCore.dylib: _swift_dynamicCastObjCClassUnconditional
__ libswiftCore.dylib: _swift_endAccess
__ libswiftCore.dylib: _swift_errorRelease
__ libswiftCore.dylib: _swift_errorRetain
__ libswiftCore.dylib: _swift_getAssociatedConformanceWitness
__ libswiftCore.dylib: _swift_getErrorValue
__ libswiftCore.dylib: _swift_getForeignTypeMetadata
__ libswiftCore.dylib: _swift_getGenericMetadata
__ libswiftCore.dylib: _swift_getObjCClassFromMetadata
__ libswiftCore.dylib: _swift_getObjCClassMetadata
__ libswiftCore.dylib: _swift_getObjectType
__ libswiftCore.dylib: _swift_getOpaqueTypeConformance
__ libswiftCore.dylib: _swift_getSingletonMetadata
__ libswiftCore.dylib: _swift_getTupleTypeMetadata
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContext
__ libswiftCore.dylib: _swift_getTypeByMangledNameInContextInMetadataState
__ libswiftCore.dylib: _swift_getWitnessTable
__ libswiftCore.dylib: _swift_initStackObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_bridgeObject
__ libswiftCore.dylib: _swift_isUniquelyReferenced_nonNull_native
__ libswiftCore.dylib: _swift_isaMask
__ libswiftCore.dylib: _swift_lookUpClassMethod
__ libswiftCore.dylib: _swift_once
__ libswiftCore.dylib: _swift_release
__ libswiftCore.dylib: _swift_release_n
__ libswiftCore.dylib: _swift_retain
__ libswiftCore.dylib: _swift_retain_n
__ libswiftCore.dylib: _swift_slowAlloc
__ libswiftCore.dylib: _swift_slowDealloc
__ libswiftCore.dylib: _swift_unknownObjectRelease
__ libswiftCore.dylib: _swift_unknownObjectRelease_n
__ libswiftCore.dylib: _swift_unknownObjectRetain
__ libswiftCore.dylib: _swift_updateClassMetadata2
__ libswiftCore.dylib: _swift_willThrow
__ libswiftDispatch.dylib: _$s8Dispatch0A3QoSV11unspecifiedACvgZ
__ libswiftDispatch.dylib: _$s8Dispatch0A3QoSVMa
__ libswiftDispatch.dylib: _$sSo17OS_dispatch_queueC8DispatchE10AttributesVMa
__ libswiftDispatch.dylib: _$sSo17OS_dispatch_queueC8DispatchE10AttributesVMn
__ libswiftDispatch.dylib: _$sSo17OS_dispatch_queueC8DispatchE10AttributesVs10SetAlgebraACMc
__ libswiftDispatch.dylib: _$sSo17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO7inherityA2EmFWC
__ libswiftDispatch.dylib: _$sSo17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyOMa
__ libswiftDispatch.dylib: _$sSo17OS_dispatch_queueC8DispatchE5label3qos10attributes20autoreleaseFrequency6targetABSS_AC0D3QoSVAbCE10AttributesVAbCE011AutoreleaseI0OABSgtcfC
__ libswiftObjectiveC.dylib: _$sSo8NSObjectC10ObjectiveCE13_rawHashValue4seedS2i_tF
__ libswiftObjectiveC.dylib: _$sSo8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ
__ libswiftObjectiveC.dylib: _$sSo8NSObjectC10ObjectiveCE9hashValueSivg
__ libswiftObjectiveC.dylib: _$sSo8NSObjectCSH10ObjectiveCMc
__ libswiftUniformTypeIdentifiers.dylib: _$s22UniformTypeIdentifiers6UTTypeV10exportedAs12conformingToACSS_ACSgtcfC
__ libswiftUniformTypeIdentifiers.dylib: _$s22UniformTypeIdentifiers6UTTypeV10identifierSSvg
__ libswiftUniformTypeIdentifiers.dylib: _$s22UniformTypeIdentifiers6UTTypeV17filenameExtension12conformingToACSgSS_ACtcfC
__ libswiftUniformTypeIdentifiers.dylib: _$s22UniformTypeIdentifiers6UTTypeV4dataACvgZ
__ libswiftUniformTypeIdentifiers.dylib: _$s22UniformTypeIdentifiers6UTTypeVMa
__ libswiftUniformTypeIdentifiers.dylib: _$s22UniformTypeIdentifiers6UTTypeVMn
__ libswiftUniformTypeIdentifiers.dylib: _$s22UniformTypeIdentifiers6UTTypeVSEAAMc
__ libswiftUniformTypeIdentifiers.dylib: _$s22UniformTypeIdentifiers6UTTypeVSeAAMc
__ libswift_Concurrency.dylib: _$sScC12continuation8functionScCyxq_GSccyxq_G_SStcfC
__ libswift_Concurrency.dylib: _$sScC6resume8throwingyq_n_tF
__ libswift_Concurrency.dylib: _$sScC6resume9returningyxn_tF
__ libswift_Concurrency.dylib: _$sScI4next7ElementQzSgyYaKFTj
__ libswift_Concurrency.dylib: _$sScI4next7ElementQzSgyYaKFTjTu
__ libswift_Concurrency.dylib: _$sScP8rawValues5UInt8Vvg
__ libswift_Concurrency.dylib: _$sScPMa
__ libswift_Concurrency.dylib: _$sScT6cancelyyF
__ libswift_Concurrency.dylib: _$sSci17makeAsyncIterator0bC0QzyFTj
__ libswift_Concurrency.dylib: _$sScs12ContinuationV11YieldResultOMn
__ libswift_Concurrency.dylib: _$sScs12ContinuationV15BufferingPolicyO9unboundedyADyxq___GAFms5ErrorR_r0_lFWC
__ libswift_Concurrency.dylib: _$sScs12ContinuationV15BufferingPolicyOMn
__ libswift_Concurrency.dylib: _$sScs12ContinuationV5yieldyAB11YieldResultOyxq___GxnF
__ libswift_Concurrency.dylib: _$sScs12ContinuationV6finish8throwingyq_Sgn_tF
__ libswift_Concurrency.dylib: _$sScs12ContinuationVMn
__ libswift_Concurrency.dylib: _$sScs17makeAsyncIteratorScs0C0Vyxq__GyF
__ libswift_Concurrency.dylib: _$sScs8IteratorV4nextxSgyYaKF
__ libswift_Concurrency.dylib: _$sScs8IteratorV4nextxSgyYaKFTu
__ libswift_Concurrency.dylib: _$sScs8IteratorVMn
__ libswift_Concurrency.dylib: _$sScs8IteratorVyxq__GScIsMc
__ libswift_Concurrency.dylib: _$sScs_15bufferingPolicy_Scsyxs5Error_pGxm_Scs12ContinuationV09BufferingB0OyxsAB_p__GyAEyxsAB_p_GXEtcsAB_pRs_rlufC
__ libswift_Concurrency.dylib: _$sScsyxq_GScisMc
__ libswift_Concurrency.dylib: _$ss23AsyncCompactMapSequenceV4basexvg
__ libswift_Concurrency.dylib: _$ss23AsyncCompactMapSequenceV8IteratorV04baseE00aE0QzvM
__ libswift_Concurrency.dylib: _$ss23AsyncCompactMapSequenceV8IteratorV9transformyq_Sg7ElementQzYacvg
__ libswift_Concurrency.dylib: _$ss23AsyncCompactMapSequenceV8IteratorVMn
__ libswift_Concurrency.dylib: _$ss23AsyncCompactMapSequenceV8IteratorV_9transformADyxq__G0aE0Qz_q_Sg7ElementQzYactcfC
__ libswift_Concurrency.dylib: _$ss23AsyncCompactMapSequenceV9transformyq_Sg7ElementQzYacvg
__ libswift_Concurrency.dylib: _$ss23AsyncCompactMapSequenceVMn
__ libswift_Concurrency.dylib: _$ss23AsyncCompactMapSequenceV_9transformAByxq_Gx_q_Sg7ElementQzYactcfC
__ libswift_Concurrency.dylib: _swift_continuation_await
__ libswift_Concurrency.dylib: _swift_continuation_init
__ libswift_Concurrency.dylib: _swift_continuation_throwingResume
__ libswift_Concurrency.dylib: _swift_continuation_throwingResumeWithError
__ libswift_Concurrency.dylib: _swift_task_alloc
__ libswift_Concurrency.dylib: _swift_task_create
__ libswift_Concurrency.dylib: _swift_task_dealloc
__ libswift_Concurrency.dylib: _swift_task_switch
__ libswiftos.dylib: _$s2os6LoggerV9logObjectSo03OS_a1_C0Cvg
__ libswiftos.dylib: _$s2os6LoggerV9subsystem8categoryACSS_SStcfC
__ libswiftos.dylib: _$s2os6LoggerVMa
__ libswiftos.dylib: _$sSo13os_log_type_ta0A0E4infoABvgZ
__ libswiftos.dylib: _$sSo13os_log_type_ta0A0E5errorABvgZ
_TtC8CloudKit17ChunkStreamHandle : NSObject
  // instance methods
  -[_TtC8CloudKit17ChunkStreamHandle .cxx_destruct]
  -[_TtC8CloudKit17ChunkStreamHandle init]


_TtC8CloudKit21LoadingRequestHandler : NSObject <AVAssetResourceLoaderDelegate>
  // instance methods
  -[_TtC8CloudKit21LoadingRequestHandler .cxx_destruct]
  -[_TtC8CloudKit21LoadingRequestHandler resourceLoader:shouldWaitForLoadingOfRequestedResource:]
  -[_TtC8CloudKit21LoadingRequestHandler init]
  -[_TtC8CloudKit21LoadingRequestHandler resourceLoader:shouldWaitForRenewalOfRequestedResource:]
  -[_TtC8CloudKit21LoadingRequestHandler resourceLoader:didCancelLoadingRequest:]
  -[_TtC8CloudKit21LoadingRequestHandler resourceLoader:shouldWaitForResponseToAuthenticationChallenge:]
  -[_TtC8CloudKit21LoadingRequestHandler resourceLoader:didCancelAuthenticationChallenge:]


_TtC8CloudKit10PlayerItem : AVPlayerItem
  // instance methods
  -[_TtC8CloudKit10PlayerItem .cxx_destruct]
  -[_TtC8CloudKit10PlayerItem initWithAsset:automaticallyLoadedAssetKeys:]


_TtC8CloudKit17AssetStreamHandle : NSObject
  // class methods
  +[_TtC8CloudKit17AssetStreamHandle useNetworkingDelegate]
  +[_TtC8CloudKit17AssetStreamHandle setUseNetworkingDelegate:]
  +[_TtC8CloudKit17AssetStreamHandle makeAssetStreamHandleFrom:with:for:completionHandler:]
  +[_TtC8CloudKit17AssetStreamHandle networkRequestOptions]

  // instance methods
  -[_TtC8CloudKit17AssetStreamHandle .cxx_destruct]
  -[_TtC8CloudKit17AssetStreamHandle init]
  -[_TtC8CloudKit17AssetStreamHandle initFrom:error:]
  -[_TtC8CloudKit17AssetStreamHandle serializedDataAndReturnError:]
  -[_TtC8CloudKit17AssetStreamHandle makeAVPlayerItemWith:]


CKAccountInfo : NSObject <NSSecureCoding>
 @property  BOOL isFromCache
 @property  BOOL supportsDeviceToDeviceEncryption
 @property  long long deviceToDeviceEncryptionAvailability
 @property  long long accountStatus
 @property  long long accountPartition
 @property  BOOL hasValidCredentials

  // class methods
  +[CKAccountInfo supportsSecureCoding]
  +[CKAccountInfo invalidateCachedAccountInfo]

  // instance methods
  -[CKAccountInfo hasValidCredentials]
  -[CKAccountInfo accountPartition]
  -[CKAccountInfo setAccountPartition:]
  -[CKAccountInfo encodeWithCoder:]
  -[CKAccountInfo setHasValidCredentials:]
  -[CKAccountInfo setSupportsDeviceToDeviceEncryption:]
  -[CKAccountInfo setDeviceToDeviceEncryptionAvailability:]
  -[CKAccountInfo accountStatus]
  -[CKAccountInfo isFromCache]
  -[CKAccountInfo setAccountStatus:]
  -[CKAccountInfo supportsDeviceToDeviceEncryption]
  -[CKAccountInfo setIsFromCache:]
  -[CKAccountInfo deviceToDeviceEncryptionAvailability]
  -[CKAccountInfo isEqual:]
  -[CKAccountInfo init]
  -[CKAccountInfo initWithCoder:]
  -[CKAccountInfo CKPropertiesDescription]


CKRecordZoneID : NSObject <CKXPCSuitableString, CKPropertiesDescription, CKSQLiteItem, NSSecureCoding, NSCopying>
 @property  NSString *anonymousCKUserID
 @property  long long databaseScope
 @property  NSString *zoneName
 @property  NSString *ownerName
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKRecordZoneID supportsSecureCoding]
  +[CKRecordZoneID cachedRecordZoneIDWithName:ownerName:anonymousCKUserID:databaseScope:]

  // instance methods
  -[CKRecordZoneID initWithSqliteRepresentation:]
  -[CKRecordZoneID ckShortDescription]
  -[CKRecordZoneID CKDescribePropertiesUsing:]
  -[CKRecordZoneID sqliteRepresentation]
  -[CKRecordZoneID encodeWithCoder:]
  -[CKRecordZoneID zoneName]
  -[CKRecordZoneID .cxx_destruct]
  -[CKRecordZoneID anonymousCKUserID]
  -[CKRecordZoneID ck_bindInStatement:atIndex:]
  -[CKRecordZoneID copyWithZone:]
  -[CKRecordZoneID initWithZoneName:ownerName:]
  -[CKRecordZoneID ownerName]
  -[CKRecordZoneID databaseScope]
  -[CKRecordZoneID redactedDescription]
  -[CKRecordZoneID isEqual:]
  -[CKRecordZoneID init]
  -[CKRecordZoneID initWithCoder:]
  -[CKRecordZoneID setAnonymousCKUserID:]
  -[CKRecordZoneID CKShortDescriptionRedact:]
  -[CKRecordZoneID _initWithZoneName:ownerName:anonymousCKUserID:databaseScope:]
  -[CKRecordZoneID initWithZoneName:ownerName:anonymousCKUserID:databaseScope:]
  -[CKRecordZoneID initWithZoneName:ownerName:databaseScope:]
  -[CKRecordZoneID initWithZoneName:ownerName:anonymousCKUserID:]
  -[CKRecordZoneID compareToRecordZoneID:]
  -[CKRecordZoneID isDefaultRecordZoneID]
  -[CKRecordZoneID isSystemRecordZoneID]
  -[CKRecordZoneID CKXPCSuitableString]


CKRepairAssetsOperation : CKDatabaseOperation <CKRepairAssetsOperationCallbacks>
 @property  NSArray *assets
 @property  NSArray *packages
 @property  NSArray *assetMetadata
 @property  NSArray *packageMetadata
 @property  NSArray *unavailableAssets
 @property  NSArray *unavailablePackages
 @property  NSMutableDictionary *perItemErrorsByRecordID
 @property  <CKRepairAssetsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKRepairAssetsOperationInfo *operationInfo
 @property  CKUploadRequestConfiguration *uploadRequestConfiguration
 @property  CKUploadRequestConfiguration *resolvedUploadRequestConfiguration
 @property  @? repairAssetsCompletionBlock

  // class methods
  +[CKRepairAssetsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKRepairAssetsOperation activityCreate]
  -[CKRepairAssetsOperation _finishOnCallbackQueueWithError:]
  -[CKRepairAssetsOperation assets]
  -[CKRepairAssetsOperation .cxx_destruct]
  -[CKRepairAssetsOperation hasCKOperationCallbacksSet]
  -[CKRepairAssetsOperation uploadRequestConfiguration]
  -[CKRepairAssetsOperation performCKOperation]
  -[CKRepairAssetsOperation fillFromOperationInfo:]
  -[CKRepairAssetsOperation CKOperationShouldRun:]
  -[CKRepairAssetsOperation setAssets:]
  -[CKRepairAssetsOperation setUploadRequestConfiguration:]
  -[CKRepairAssetsOperation fillOutOperationInfo:]
  -[CKRepairAssetsOperation handleAssetRepairCompletionForRecordID:error:]
  -[CKRepairAssetsOperation initWithAssets:packages:assetMetadata:packageMetadata:unavailableAssets:unavailablePackages:]
  -[CKRepairAssetsOperation resolvedUploadRequestConfiguration]
  -[CKRepairAssetsOperation setRepairAssetsCompletionBlock:]
  -[CKRepairAssetsOperation repairAssetsCompletionBlock]
  -[CKRepairAssetsOperation includedMetadata]
  -[CKRepairAssetsOperation packages]
  -[CKRepairAssetsOperation setPackages:]
  -[CKRepairAssetsOperation assetMetadata]
  -[CKRepairAssetsOperation setAssetMetadata:]
  -[CKRepairAssetsOperation packageMetadata]
  -[CKRepairAssetsOperation setPackageMetadata:]
  -[CKRepairAssetsOperation unavailableAssets]
  -[CKRepairAssetsOperation setUnavailableAssets:]
  -[CKRepairAssetsOperation unavailablePackages]
  -[CKRepairAssetsOperation setUnavailablePackages:]
  -[CKRepairAssetsOperation perItemErrorsByRecordID]
  -[CKRepairAssetsOperation setPerItemErrorsByRecordID:]


CKRepairAssetsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  CKUploadRequestConfiguration *uploadRequestConfiguration
 @property  NSArray *assets
 @property  NSArray *packages
 @property  NSArray *assetMetadata
 @property  NSArray *packageMetadata
 @property  NSArray *unavailableAssets
 @property  NSArray *unavailablePackages

  // class methods
  +[CKRepairAssetsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKRepairAssetsOperationInfo assets]
  -[CKRepairAssetsOperationInfo encodeWithCoder:]
  -[CKRepairAssetsOperationInfo .cxx_destruct]
  -[CKRepairAssetsOperationInfo uploadRequestConfiguration]
  -[CKRepairAssetsOperationInfo setAssets:]
  -[CKRepairAssetsOperationInfo setUploadRequestConfiguration:]
  -[CKRepairAssetsOperationInfo initWithCoder:]
  -[CKRepairAssetsOperationInfo packages]
  -[CKRepairAssetsOperationInfo setPackages:]
  -[CKRepairAssetsOperationInfo assetMetadata]
  -[CKRepairAssetsOperationInfo setAssetMetadata:]
  -[CKRepairAssetsOperationInfo packageMetadata]
  -[CKRepairAssetsOperationInfo setPackageMetadata:]
  -[CKRepairAssetsOperationInfo unavailableAssets]
  -[CKRepairAssetsOperationInfo setUnavailableAssets:]
  -[CKRepairAssetsOperationInfo unavailablePackages]
  -[CKRepairAssetsOperationInfo setUnavailablePackages:]


CKDPRecordFieldValueEncryptedValue : PBCodable <NSCopying>
 @property  BOOL hasSignedValue
 @property  long long signedValue
 @property  BOOL hasDoubleValue
 @property  double doubleValue
 @property  BOOL hasDateValue
 @property  CKDPDate *dateValue
 @property  BOOL hasStringValue
 @property  NSString *stringValue
 @property  BOOL hasLocationValue
 @property  CKDPLocationCoordinate *locationValue
 @property  BOOL hasReferenceValue
 @property  CKDPRecordReference *referenceValue
 @property  unsigned long signedListValuesCount
 @property  ^q signedListValues
 @property  unsigned long doubleListValuesCount
 @property  ^d doubleListValues
 @property  NSMutableArray *dateListValues
 @property  NSMutableArray *stringListValues
 @property  NSMutableArray *locationListValues

  // class methods
  +[CKDPRecordFieldValueEncryptedValue dateListValueType]
  +[CKDPRecordFieldValueEncryptedValue stringListValueType]
  +[CKDPRecordFieldValueEncryptedValue locationListValueType]

  // instance methods
  -[CKDPRecordFieldValueEncryptedValue hasSignedValue]
  -[CKDPRecordFieldValueEncryptedValue setSignedValue:]
  -[CKDPRecordFieldValueEncryptedValue locationValue]
  -[CKDPRecordFieldValueEncryptedValue hasDoubleValue]
  -[CKDPRecordFieldValueEncryptedValue referenceValue]
  -[CKDPRecordFieldValueEncryptedValue hasReferenceValue]
  -[CKDPRecordFieldValueEncryptedValue signedValue]
  -[CKDPRecordFieldValueEncryptedValue setReferenceValue:]
  -[CKDPRecordFieldValueEncryptedValue setStringListValues:]
  -[CKDPRecordFieldValueEncryptedValue hasDateValue]
  -[CKDPRecordFieldValueEncryptedValue setDateValue:]
  -[CKDPRecordFieldValueEncryptedValue hasStringValue]
  -[CKDPRecordFieldValueEncryptedValue setDoubleListValues:count:]
  -[CKDPRecordFieldValueEncryptedValue setHasSignedValue:]
  -[CKDPRecordFieldValueEncryptedValue setHasDoubleValue:]
  -[CKDPRecordFieldValueEncryptedValue clearStringListValues]
  -[CKDPRecordFieldValueEncryptedValue copyTo:]
  -[CKDPRecordFieldValueEncryptedValue stringListValues]
  -[CKDPRecordFieldValueEncryptedValue addDateListValue:]
  -[CKDPRecordFieldValueEncryptedValue dateValue]
  -[CKDPRecordFieldValueEncryptedValue addSignedListValue:]
  -[CKDPRecordFieldValueEncryptedValue stringValue]
  -[CKDPRecordFieldValueEncryptedValue signedListValuesCount]
  -[CKDPRecordFieldValueEncryptedValue signedListValues]
  -[CKDPRecordFieldValueEncryptedValue dealloc]
  -[CKDPRecordFieldValueEncryptedValue hasLocationValue]
  -[CKDPRecordFieldValueEncryptedValue .cxx_destruct]
  -[CKDPRecordFieldValueEncryptedValue locationListValues]
  -[CKDPRecordFieldValueEncryptedValue dateListValues]
  -[CKDPRecordFieldValueEncryptedValue clearDateListValues]
  -[CKDPRecordFieldValueEncryptedValue mergeFrom:]
  -[CKDPRecordFieldValueEncryptedValue stringListValueAtIndex:]
  -[CKDPRecordFieldValueEncryptedValue doubleListValuesCount]
  -[CKDPRecordFieldValueEncryptedValue doubleValue]
  -[CKDPRecordFieldValueEncryptedValue clearSignedListValues]
  -[CKDPRecordFieldValueEncryptedValue clearDoubleListValues]
  -[CKDPRecordFieldValueEncryptedValue addLocationListValue:]
  -[CKDPRecordFieldValueEncryptedValue locationListValuesCount]
  -[CKDPRecordFieldValueEncryptedValue addStringListValue:]
  -[CKDPRecordFieldValueEncryptedValue dictionaryRepresentation]
  -[CKDPRecordFieldValueEncryptedValue dateListValuesCount]
  -[CKDPRecordFieldValueEncryptedValue stringListValuesCount]
  -[CKDPRecordFieldValueEncryptedValue copyWithZone:]
  -[CKDPRecordFieldValueEncryptedValue setLocationValue:]
  -[CKDPRecordFieldValueEncryptedValue doubleListValues]
  -[CKDPRecordFieldValueEncryptedValue locationListValueAtIndex:]
  -[CKDPRecordFieldValueEncryptedValue addDoubleListValue:]
  -[CKDPRecordFieldValueEncryptedValue readFrom:]
  -[CKDPRecordFieldValueEncryptedValue setSignedListValues:count:]
  -[CKDPRecordFieldValueEncryptedValue setDoubleValue:]
  -[CKDPRecordFieldValueEncryptedValue dateListValueAtIndex:]
  -[CKDPRecordFieldValueEncryptedValue doubleListValueAtIndex:]
  -[CKDPRecordFieldValueEncryptedValue setLocationListValues:]
  -[CKDPRecordFieldValueEncryptedValue writeTo:]
  -[CKDPRecordFieldValueEncryptedValue setStringValue:]
  -[CKDPRecordFieldValueEncryptedValue setDateListValues:]
  -[CKDPRecordFieldValueEncryptedValue isEqual:]
  -[CKDPRecordFieldValueEncryptedValue signedListValueAtIndex:]
  -[CKDPRecordFieldValueEncryptedValue clearLocationListValues]


CKUserNotificationUtilities : NSObject
  // class methods
  +[CKUserNotificationUtilities showUserNotification:withCompletionBlock:]


CKAllowedSharingOptions : NSObject <NSItemProviderReading, NSItemProviderWriting, NSSecureCoding, NSCopying>
 @property  _SWCollaborationShareOptions *mutableShareOptions
 @property  NSArray *mutableOptionsGroups
 @property  _SWCollaborationShareOptions *shareOptions
 @property  NSArray *optionsGroups
 @property  BOOL supportAllowingAddedParticipantsToInviteOthers
 @property  unsigned long allowedParticipantPermissionOptions
 @property  unsigned long allowedParticipantAccessOptions
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *writableTypeIdentifiersForItemProvider

  // class methods
  +[CKAllowedSharingOptions supportsSecureCoding]
  +[CKAllowedSharingOptions writableTypeIdentifiersForItemProvider]
  +[CKAllowedSharingOptions readableTypeIdentifiersForItemProvider]
  +[CKAllowedSharingOptions objectWithItemProviderData:typeIdentifier:error:]
  +[CKAllowedSharingOptions standardOptions]
  +[CKAllowedSharingOptions resolvedOptionsFromOptions:forExistingShare:]

  // instance methods
  -[CKAllowedSharingOptions loadDataWithTypeIdentifier:forItemProviderCompletionHandler:]
  -[CKAllowedSharingOptions encodeWithCoder:]
  -[CKAllowedSharingOptions .cxx_destruct]
  -[CKAllowedSharingOptions copyWithZone:]
  -[CKAllowedSharingOptions itemProviderVisibilityForRepresentationWithTypeIdentifier:]
  -[CKAllowedSharingOptions initWithCoder:]
  -[CKAllowedSharingOptions initWithAllowedParticipantPermissionOptions:allowedParticipantAccessOptions:]
  -[CKAllowedSharingOptions setSupportAllowingAddedParticipantsToInviteOthers:]
  -[CKAllowedSharingOptions shareOptions]
  -[CKAllowedSharingOptions optionsGroups]
  -[CKAllowedSharingOptions _uncachedShareOptionsFromAllowedOptions]
  -[CKAllowedSharingOptions shareOptionsFromAllowedOptions]
  -[CKAllowedSharingOptions _uncachedCollaborationOptionsGroupsFromAllowedOptions]
  -[CKAllowedSharingOptions collaborationOptionsGroupsFromAllowedOptions]
  -[CKAllowedSharingOptions _resolveCollaborationOptionsGroupsForExistingShare:]
  -[CKAllowedSharingOptions _selectOptionWithIdentifier:inGroups:]
  -[CKAllowedSharingOptions _removeOptionGroupWithID:fromOptionsGroups:]
  -[CKAllowedSharingOptions _addOptions:toExistingGroupWithID:inOptionsGroups:]
  -[CKAllowedSharingOptions allowedParticipantPermissionOptions]
  -[CKAllowedSharingOptions setAllowedParticipantPermissionOptions:]
  -[CKAllowedSharingOptions allowedParticipantAccessOptions]
  -[CKAllowedSharingOptions setAllowedParticipantAccessOptions:]
  -[CKAllowedSharingOptions mutableShareOptions]
  -[CKAllowedSharingOptions setMutableShareOptions:]
  -[CKAllowedSharingOptions mutableOptionsGroups]
  -[CKAllowedSharingOptions setMutableOptionsGroups:]
  -[CKAllowedSharingOptions supportAllowingAddedParticipantsToInviteOthers]


CKMultiValueRegister : NSObject <CKPropertiesDescription>
 @property  NSMutableDictionary *timestampToContents
 @property  unsigned long nextClockValue
 @property  NSUUID *identifier
 @property  CKDistributedTimestampStateVector *vector
 @property  NSArray *contents
 @property  BOOL isConsumedState
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKMultiValueRegister placeholderIdentifier]

  // instance methods
  -[CKMultiValueRegister CKDescribePropertiesUsing:]
  -[CKMultiValueRegister identifier]
  -[CKMultiValueRegister contents]
  -[CKMultiValueRegister .cxx_destruct]
  -[CKMultiValueRegister setContents:]
  -[CKMultiValueRegister redactedDescription]
  -[CKMultiValueRegister isEqual:]
  -[CKMultiValueRegister vector]
  -[CKMultiValueRegister initWithIdentifier:vector:]
  -[CKMultiValueRegister initWithIdentifier:vector:contents:error:]
  -[CKMultiValueRegister nextClockValue]
  -[CKMultiValueRegister siteIdentifier]
  -[CKMultiValueRegister isConsumedState]
  -[CKMultiValueRegister replaceVectorStateForPresentOrTombstonedTimestamps:]
  -[CKMultiValueRegister merge:error:]
  -[CKMultiValueRegister timestampToContents]


CKUploadRequestPersistentStore : NSObject
 @property  NSURL *databaseURL
 @property  BOOL firstInvocation
 @property  NSObject<OS_dispatch_queue> *stateQueue

  // class methods
  +[CKUploadRequestPersistentStore repairRecordToMetadata:]

  // instance methods
  -[CKUploadRequestPersistentStore databaseURL]
  -[CKUploadRequestPersistentStore unarchivedObjectOfClass:fromData:error:]
  -[CKUploadRequestPersistentStore persistSyncEngineMetadata:]
  -[CKUploadRequestPersistentStore setLastFetchDate:]
  -[CKUploadRequestPersistentStore clearDelayedSyncRecords]
  -[CKUploadRequestPersistentStore persistDelayedSyncForRecordName:withDate:increasingCount:]
  -[CKUploadRequestPersistentStore delayedSyncCountForRecordName:]
  -[CKUploadRequestPersistentStore .cxx_destruct]
  -[CKUploadRequestPersistentStore setCurrentUser:]
  -[CKUploadRequestPersistentStore readWriteDatabase:async:withCompletionHandler:]
  -[CKUploadRequestPersistentStore readDatabase:async:withCompletionHandler:]
  -[CKUploadRequestPersistentStore setFirstInvocation:]
  -[CKUploadRequestPersistentStore lastFetchDate]
  -[CKUploadRequestPersistentStore syncEngineMetadata]
  -[CKUploadRequestPersistentStore clearRepairRecords]
  -[CKUploadRequestPersistentStore packageRepairMetadata]
  -[CKUploadRequestPersistentStore markRecordNameUnrecoverable:]
  -[CKUploadRequestPersistentStore assetRepairMetadata]
  -[CKUploadRequestPersistentStore persistRepairRecord:]
  -[CKUploadRequestPersistentStore delayedSyncRecordNamesBeforeAndIncludingDate:]
  -[CKUploadRequestPersistentStore firstInvocation]
  -[CKUploadRequestPersistentStore earliestDelayedSyncDateAfterDate:]
  -[CKUploadRequestPersistentStore delayedSyncDateForRecord:]
  -[CKUploadRequestPersistentStore setStateQueue:]
  -[CKUploadRequestPersistentStore deleteDelayedSyncForRecordName:]
  -[CKUploadRequestPersistentStore stateQueue]
  -[CKUploadRequestPersistentStore deleteRepairRecord:]
  -[CKUploadRequestPersistentStore currentUser]
  -[CKUploadRequestPersistentStore allData]
  -[CKUploadRequestPersistentStore initWithDatabaseURL:]
  -[CKUploadRequestPersistentStore delayedSyncRecordNamesAfterDate:]
  -[CKUploadRequestPersistentStore deleteDatabase]
  -[CKUploadRequestPersistentStore metadataForRecordName:]
  -[CKUploadRequestPersistentStore clearDatabase]
  -[CKUploadRequestPersistentStore sortedDelayedSyncRecordsForDatabase:]
  -[CKUploadRequestPersistentStore setDatabaseURL:]


CKMediaItemMaker : NSObject
 @property  _TtC8CloudKit17AssetStreamHandle *assetStreamHandle

  // instance methods
  -[CKMediaItemMaker initWithData:error:]
  -[CKMediaItemMaker .cxx_destruct]
  -[CKMediaItemMaker dataRepresentationWithError:]
  -[CKMediaItemMaker initWith:]
  -[CKMediaItemMaker makeAVPlayerItemWithURL:]
  -[CKMediaItemMaker assetStreamHandle]
  -[CKMediaItemMaker setAssetStreamHandle:]


CKSQLiteCompiledStatement : NSObject
 @property  NSString *label
 @property  CKSQLiteTable *cachingTable
 @property  NSArray *searchProperties
 @property  NSNumber *limit
 @property  NSNumber *offset

  // class methods
  +[CKSQLiteCompiledStatement statementForFetchingMinimumValueForColumn:inTable:error:]
  +[CKSQLiteCompiledStatement statementForSummingColumn:inTable:]
  +[CKSQLiteCompiledStatement statementForSizingColumn:inTable:]
  +[CKSQLiteCompiledStatement _statementForFetchingMinMax:forColumn:inTable:error:]
  +[CKSQLiteCompiledStatement statementForUpdatingColumns:inTable:error:]
  +[CKSQLiteCompiledStatement statementForFetchingColumns:inTable:error:]
  +[CKSQLiteCompiledStatement statementForEmptyCheckInTable:]
  +[CKSQLiteCompiledStatement statementForInserting:inTable:]
  +[CKSQLiteCompiledStatement statementForCountingRowsInTable:]
  +[CKSQLiteCompiledStatement statementForFetchingAllTableNamesInDatabase:]
  +[CKSQLiteCompiledStatement statementForDeletingInTable:]
  +[CKSQLiteCompiledStatement statementForInserting:orUpdating:inTable:]
  +[CKSQLiteCompiledStatement statementForFetchingMaximumValueForColumn:inTable:error:]

  // instance methods
  -[CKSQLiteCompiledStatement compile]
  -[CKSQLiteCompiledStatement limit]
  -[CKSQLiteCompiledStatement initWithDatabase:]
  -[CKSQLiteCompiledStatement bindValueColumn:type:value:]
  -[CKSQLiteCompiledStatement setLimit:]
  -[CKSQLiteCompiledStatement doSearchValueBinding]
  -[CKSQLiteCompiledStatement searchBindingsDescription]
  -[CKSQLiteCompiledStatement dealloc]
  -[CKSQLiteCompiledStatement setLabel:]
  -[CKSQLiteCompiledStatement step:]
  -[CKSQLiteCompiledStatement bindValue:ofType:atIndex:]
  -[CKSQLiteCompiledStatement .cxx_destruct]
  -[CKSQLiteCompiledStatement fetchedColumns]
  -[CKSQLiteCompiledStatement setCachingTable:]
  -[CKSQLiteCompiledStatement orderByProperty:ascending:]
  -[CKSQLiteCompiledStatement bindSearchValues:]
  -[CKSQLiteCompiledStatement cksqlcs_appendSQLConstantValueToString:]
  -[CKSQLiteCompiledStatement boundObjects]
  -[CKSQLiteCompiledStatement resetAndClearBindings]
  -[CKSQLiteCompiledStatement label]
  -[CKSQLiteCompiledStatement searchProperties]
  -[CKSQLiteCompiledStatement invalidate]
  -[CKSQLiteCompiledStatement sqlValueForVariable:]
  -[CKSQLiteCompiledStatement enumerateResultColumnsWithBlock:]
  -[CKSQLiteCompiledStatement initWithTable:]
  -[CKSQLiteCompiledStatement addBindingVariable:withAssociatedProperty:]
  -[CKSQLiteCompiledStatement offset]
  -[CKSQLiteCompiledStatement setSearchProperties:]
  -[CKSQLiteCompiledStatement setSearchPredicate:forProperties:tableClass:]
  -[CKSQLiteCompiledStatement cachingTable]
  -[CKSQLiteCompiledStatement setOffset:]
  -[CKSQLiteCompiledStatement updatedColumns]


CKMarkAssetBrokenOperation : CKDatabaseOperation <CKMarkAssetBrokenOperationCallbacks>
 @property  CKRecordID *recordID
 @property  NSString *field
 @property  long long listIndex
 @property  CKRecordID *repairRecordID
 @property  <CKMarkAssetBrokenOperationCallbacks> *clientOperationCallbackProxy
 @property  CKMarkAssetBrokenOperationInfo *operationInfo
 @property  CKUploadRequestConfiguration *uploadRequestConfiguration
 @property  CKUploadRequestConfiguration *resolvedUploadRequestConfiguration
 @property  @? markAssetBrokenCompletionBlock
 @property  BOOL touchRepairZone
 @property  BOOL bypassPCSEncryptionForTouchRepairZone
 @property  BOOL simulateCorruptAsset
 @property  BOOL writeRepairRecord

  // class methods
  +[CKMarkAssetBrokenOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKMarkAssetBrokenOperation field]
  -[CKMarkAssetBrokenOperation setRecordID:]
  -[CKMarkAssetBrokenOperation activityCreate]
  -[CKMarkAssetBrokenOperation _finishOnCallbackQueueWithError:]
  -[CKMarkAssetBrokenOperation recordID]
  -[CKMarkAssetBrokenOperation setListIndex:]
  -[CKMarkAssetBrokenOperation setField:]
  -[CKMarkAssetBrokenOperation .cxx_destruct]
  -[CKMarkAssetBrokenOperation hasCKOperationCallbacksSet]
  -[CKMarkAssetBrokenOperation uploadRequestConfiguration]
  -[CKMarkAssetBrokenOperation performCKOperation]
  -[CKMarkAssetBrokenOperation fillFromOperationInfo:]
  -[CKMarkAssetBrokenOperation CKOperationShouldRun:]
  -[CKMarkAssetBrokenOperation setUploadRequestConfiguration:]
  -[CKMarkAssetBrokenOperation fillOutOperationInfo:]
  -[CKMarkAssetBrokenOperation listIndex]
  -[CKMarkAssetBrokenOperation resolvedUploadRequestConfiguration]
  -[CKMarkAssetBrokenOperation handleMarkAssetBrokenCompletionWithRepairRecordID:error:]
  -[CKMarkAssetBrokenOperation initWithNoRecord]
  -[CKMarkAssetBrokenOperation initWithRecordID:field:]
  -[CKMarkAssetBrokenOperation initWithRecordID:field:listIndex:]
  -[CKMarkAssetBrokenOperation setMarkAssetBrokenCompletionBlock:]
  -[CKMarkAssetBrokenOperation markAssetBrokenCompletionBlock]
  -[CKMarkAssetBrokenOperation touchRepairZone]
  -[CKMarkAssetBrokenOperation setTouchRepairZone:]
  -[CKMarkAssetBrokenOperation bypassPCSEncryptionForTouchRepairZone]
  -[CKMarkAssetBrokenOperation setBypassPCSEncryptionForTouchRepairZone:]
  -[CKMarkAssetBrokenOperation simulateCorruptAsset]
  -[CKMarkAssetBrokenOperation setSimulateCorruptAsset:]
  -[CKMarkAssetBrokenOperation writeRepairRecord]
  -[CKMarkAssetBrokenOperation setWriteRepairRecord:]
  -[CKMarkAssetBrokenOperation repairRecordID]
  -[CKMarkAssetBrokenOperation setRepairRecordID:]


CKMarkAssetBrokenOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  CKUploadRequestConfiguration *uploadRequestConfiguration
 @property  CKRecordID *recordID
 @property  NSString *field
 @property  long long listIndex
 @property  BOOL touchRepairZone
 @property  BOOL bypassPCSEncryptionForTouchRepairZone
 @property  BOOL simulateCorruptAsset
 @property  BOOL writeRepairRecord

  // class methods
  +[CKMarkAssetBrokenOperationInfo supportsSecureCoding]

  // instance methods
  -[CKMarkAssetBrokenOperationInfo field]
  -[CKMarkAssetBrokenOperationInfo setRecordID:]
  -[CKMarkAssetBrokenOperationInfo recordID]
  -[CKMarkAssetBrokenOperationInfo setListIndex:]
  -[CKMarkAssetBrokenOperationInfo encodeWithCoder:]
  -[CKMarkAssetBrokenOperationInfo setField:]
  -[CKMarkAssetBrokenOperationInfo .cxx_destruct]
  -[CKMarkAssetBrokenOperationInfo uploadRequestConfiguration]
  -[CKMarkAssetBrokenOperationInfo setUploadRequestConfiguration:]
  -[CKMarkAssetBrokenOperationInfo init]
  -[CKMarkAssetBrokenOperationInfo initWithCoder:]
  -[CKMarkAssetBrokenOperationInfo listIndex]
  -[CKMarkAssetBrokenOperationInfo touchRepairZone]
  -[CKMarkAssetBrokenOperationInfo setTouchRepairZone:]
  -[CKMarkAssetBrokenOperationInfo bypassPCSEncryptionForTouchRepairZone]
  -[CKMarkAssetBrokenOperationInfo setBypassPCSEncryptionForTouchRepairZone:]
  -[CKMarkAssetBrokenOperationInfo simulateCorruptAsset]
  -[CKMarkAssetBrokenOperationInfo setSimulateCorruptAsset:]
  -[CKMarkAssetBrokenOperationInfo writeRepairRecord]
  -[CKMarkAssetBrokenOperationInfo setWriteRepairRecord:]


CKSQLiteUnsetPropertySentinel : NSObject
  // class methods
  +[CKSQLiteUnsetPropertySentinel forwardingTargetForSelector:]


CKSQLiteTableSearchEnumeratorSetupHelper : NSObject <CKSQLiteTableObjectMatchingSetup, CKSQLiteTablePredicateSetup>
 @property  NSArray *fetchedProperties
 @property  NSArray *searchProperties
 @property  NSPredicate *searchPredicate
 @property  NSNumber *limit
 @property  NSNumber *offset

  // instance methods
  -[CKSQLiteTableSearchEnumeratorSetupHelper limit]
  -[CKSQLiteTableSearchEnumeratorSetupHelper setLimit:]
  -[CKSQLiteTableSearchEnumeratorSetupHelper orderAscendingByProperty:]
  -[CKSQLiteTableSearchEnumeratorSetupHelper setSearchPredicate:]
  -[CKSQLiteTableSearchEnumeratorSetupHelper setupStatement:]
  -[CKSQLiteTableSearchEnumeratorSetupHelper .cxx_destruct]
  -[CKSQLiteTableSearchEnumeratorSetupHelper fetchedProperties]
  -[CKSQLiteTableSearchEnumeratorSetupHelper searchProperties]
  -[CKSQLiteTableSearchEnumeratorSetupHelper searchPredicate]
  -[CKSQLiteTableSearchEnumeratorSetupHelper offset]
  -[CKSQLiteTableSearchEnumeratorSetupHelper setSearchProperties:]
  -[CKSQLiteTableSearchEnumeratorSetupHelper setFetchedProperties:]
  -[CKSQLiteTableSearchEnumeratorSetupHelper orderDescendingByProperty:]
  -[CKSQLiteTableSearchEnumeratorSetupHelper setOffset:]


CKSQLiteTableSearchResultEnumerator : NSEnumerator
 @property  CKSQLiteCompiledStatement *statement
 @property  CKSQLiteCompiledStatement *statement
 @property  NSError *error

  // instance methods
  -[CKSQLiteTableSearchResultEnumerator setStatement:]
  -[CKSQLiteTableSearchResultEnumerator statement]
  -[CKSQLiteTableSearchResultEnumerator error]
  -[CKSQLiteTableSearchResultEnumerator dealloc]
  -[CKSQLiteTableSearchResultEnumerator .cxx_destruct]
  -[CKSQLiteTableSearchResultEnumerator initWithTable:statement:]
  -[CKSQLiteTableSearchResultEnumerator nextObject]
  -[CKSQLiteTableSearchResultEnumerator cksqlcs_appendSQLConstantValueToString:]
  -[CKSQLiteTableSearchResultEnumerator invalidate]


CKSQLiteTable : NSObject <CKSQLiteDatabaseKeyValueProperties>
 @property  CKSQLiteTableGroup *tableGroup
 @property  NSString *logicalTableName
 @property  NSString *dbTableName
 @property  NSArray *primaryKeyProperties
 @property  BOOL logOperations

  // class methods
  +[CKSQLiteTable dbProperties]
  +[CKSQLiteTable entryClass]
  +[CKSQLiteTable allPropertyNames]
  +[CKSQLiteTable dbVersion]
  +[CKSQLiteTable enumerateClassPropertyDictionariesWithBlock:]
  +[CKSQLiteTable enumeratePropertyDataWithBlock:]
  +[CKSQLiteTable propertyCount]
  +[CKSQLiteTable propertyType:]
  +[CKSQLiteTable encodeEntry:withCoder:]
  +[CKSQLiteTable decodeEntry:withCoder:]
  +[CKSQLiteTable entriesHaveEqualProperties:other:includePrimaryKeys:]
  +[CKSQLiteTable descriptionOfProperties:from:]
  +[CKSQLiteTable descriptionOfEntry:]
  +[CKSQLiteTable valueForProperty:inObject:]
  +[CKSQLiteTable setValue:forProperty:inObject:]

  // instance methods
  -[CKSQLiteTable cacheStatement:]
  -[CKSQLiteTable performMaintenance]
  -[CKSQLiteTable UUIDValueForKey:]
  -[CKSQLiteTable setDb:]
  -[CKSQLiteTable deleteObject:]
  -[CKSQLiteTable setNumberValue:forKey:]
  -[CKSQLiteTable performTransaction:]
  -[CKSQLiteTable db]
  -[CKSQLiteTable dealloc]
  -[CKSQLiteTable .cxx_destruct]
  -[CKSQLiteTable createTableSQL]
  -[CKSQLiteTable setStringValue:forKey:]
  -[CKSQLiteTable addTransactionCompletionHandler:]
  -[CKSQLiteTable insertObject:]
  -[CKSQLiteTable initWithLogicalTableName:]
  -[CKSQLiteTable setUUIDValue:forKey:]
  -[CKSQLiteTable dateValueForKey:]
  -[CKSQLiteTable logicalTableName]
  -[CKSQLiteTable setDbTableName:]
  -[CKSQLiteTable invalidateCachedStatements]
  -[CKSQLiteTable numberValueForKey:]
  -[CKSQLiteTable dbTableName]
  -[CKSQLiteTable objectValueForKey:]
  -[CKSQLiteTable count:]
  -[CKSQLiteTable finishInitializing:]
  -[CKSQLiteTable dataValueForKey:]
  -[CKSQLiteTable setDataValue:forKey:]
  -[CKSQLiteTable stringValueForKey:]
  -[CKSQLiteTable setDateValue:forKey:]
  -[CKSQLiteTable init]
  -[CKSQLiteTable setObjectValue:forKey:]
  -[CKSQLiteTable newEntryObject]
  -[CKSQLiteTable valueForProperty:inObject:]
  -[CKSQLiteTable setValue:forProperty:inObject:]
  -[CKSQLiteTable nonKeyProperties]
  -[CKSQLiteTable assertSerialized]
  -[CKSQLiteTable assertNotSerialized]
  -[CKSQLiteTable serializeTable:]
  -[CKSQLiteTable performInTransaction:]
  -[CKSQLiteTable primaryKeyValuesInEntry:]
  -[CKSQLiteTable predicateForMatchingPrimaryKeys]
  -[CKSQLiteTable compiledStatementWithLabel:creationBlock:]
  -[CKSQLiteTable _predicateForMatchingProperties:]
  -[CKSQLiteTable _valueDictionaryForProperties:inObject:nilPropertyError:selForNilPropertyError:]
  -[CKSQLiteTable _addPredicateForMatching:toStatement:]
  -[CKSQLiteTable statementForFetchingProperties:inEntriesMatchingColumns:error:]
  -[CKSQLiteTable _bindProperties:valueObject:inStatement:includePrimaryKeys:]
  -[CKSQLiteTable entryWithPrimaryKey:fetchProperties:error:]
  -[CKSQLiteTable entryWithValues:label:error:setupBlock:]
  -[CKSQLiteTable _fetchPropertiesUsingStatement:inObject:matchingDBProperties:label:]
  -[CKSQLiteTable fetchProperties:inObject:matchingDBProperties:label:]
  -[CKSQLiteTable fetchAllProperties:]
  -[CKSQLiteTable updateProperties:usingObject:label:]
  -[CKSQLiteTable updateUsingObject:]
  -[CKSQLiteTable _performInsertOrUpdateStatement:usingObject:]
  -[CKSQLiteTable insertObject:orUpdateProperties:label:]
  -[CKSQLiteTable deletePrimaryKeyValue:]
  -[CKSQLiteTable sizeOfProperty:inEntry:label:error:]
  -[CKSQLiteTable minimumValueOfProperty:error:]
  -[CKSQLiteTable maximumValueOfProperty:error:]
  -[CKSQLiteTable _statementForFetchingEntriesMatchingObject:label:error:setupBlock:]
  -[CKSQLiteTable entriesMatchingObject:label:error:setupBlock:]
  -[CKSQLiteTable _performEnumerationWithBlock:usingEnumerator:]
  -[CKSQLiteTable entryEnumerator:]
  -[CKSQLiteTable enumerateEntrieswithBlock:]
  -[CKSQLiteTable fetchProperties:label:error:]
  -[CKSQLiteTable fetchAllEntries:]
  -[CKSQLiteTable hasEntries:]
  -[CKSQLiteTable addPredicateToStatement:predicate:]
  -[CKSQLiteTable setProperties:valuesToStore:inEntriesMatching:label:error:predicate:]
  -[CKSQLiteTable deleteEntriesMatching:label:error:predicate:]
  -[CKSQLiteTable deleteAllEntries:]
  -[CKSQLiteTable entriesWithValues:label:error:setupBlock:]
  -[CKSQLiteTable countOfEntriesMatching:label:error:predicate:]
  -[CKSQLiteTable sumOfProperty:inEntriesMatching:label:error:predicate:]
  -[CKSQLiteTable sumOfProperty:error:]
  -[CKSQLiteTable sizeOfProperty:inEntriesMatching:label:error:predicate:]
  -[CKSQLiteTable sizeOfProperty:error:]
  -[CKSQLiteTable primaryKeyProperties]
  -[CKSQLiteTable tableGroup]
  -[CKSQLiteTable setTableGroup:]
  -[CKSQLiteTable logOperations]
  -[CKSQLiteTable setLogOperations:]


CKSQLiteDatabaseTable : CKSQLiteTable
 @property  CKSQLiteDatabase *db

  // instance methods
  -[CKSQLiteDatabaseTable setDb:]
  -[CKSQLiteDatabaseTable db]


CKModifyRecordZonesOperation : CKDatabaseOperation <CKModifyRecordZonesOperationCallbacks>
 @property  NSMutableDictionary *recordZonesByZoneIDs
 @property  <CKModifyRecordZonesOperationCallbacks> *clientOperationCallbackProxy
 @property  CKModifyRecordZonesOperationInfo *operationInfo
 @property  BOOL markZonesAsUserPurged
 @property  NSArray *recordZonesToSave
 @property  NSArray *recordZoneIDsToDelete
 @property  @? perRecordZoneSaveBlock
 @property  @? perRecordZoneDeleteBlock
 @property  @? modifyRecordZonesCompletionBlock

  // class methods
  +[CKModifyRecordZonesOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKModifyRecordZonesOperation modifyRecordZonesCompletionBlock]
  -[CKModifyRecordZonesOperation relevantZoneIDs]
  -[CKModifyRecordZonesOperation setRecordZonesToSave:]
  -[CKModifyRecordZonesOperation setModifyRecordZonesCompletionBlock:]
  -[CKModifyRecordZonesOperation activityCreate]
  -[CKModifyRecordZonesOperation initWithRecordZonesToSave:recordZoneIDsToDelete:]
  -[CKModifyRecordZonesOperation _finishOnCallbackQueueWithError:]
  -[CKModifyRecordZonesOperation setModifyRecordZonesCompletionBlockIVar:]
  -[CKModifyRecordZonesOperation .cxx_destruct]
  -[CKModifyRecordZonesOperation setRecordZonesByZoneIDs:]
  -[CKModifyRecordZonesOperation hasCKOperationCallbacksSet]
  -[CKModifyRecordZonesOperation perRecordZoneSaveBlock]
  -[CKModifyRecordZonesOperation perRecordZoneDeleteBlock]
  -[CKModifyRecordZonesOperation setRecordZoneIDsToDelete:]
  -[CKModifyRecordZonesOperation setPerRecordZoneSaveBlock:]
  -[CKModifyRecordZonesOperation recordZonesToSave]
  -[CKModifyRecordZonesOperation setMarkZonesAsUserPurged:]
  -[CKModifyRecordZonesOperation performCKOperation]
  -[CKModifyRecordZonesOperation fillFromOperationInfo:]
  -[CKModifyRecordZonesOperation CKOperationShouldRun:]
  -[CKModifyRecordZonesOperation handleSaveForRecordZoneID:recordZone:error:]
  -[CKModifyRecordZonesOperation setPerRecordZoneDeleteBlock:]
  -[CKModifyRecordZonesOperation fillOutOperationInfo:]
  -[CKModifyRecordZonesOperation recordZonesByZoneIDs]
  -[CKModifyRecordZonesOperation recordZoneIDsToDelete]
  -[CKModifyRecordZonesOperation markZonesAsUserPurged]
  -[CKModifyRecordZonesOperation handleDeleteForRecordZoneID:error:]
  -[CKModifyRecordZonesOperation init]


CKModifyRecordZonesOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordZonesToSave
 @property  NSArray *recordZoneIDsToDelete
 @property  BOOL allowDefaultZoneSave
 @property  BOOL markZonesAsUserPurged
 @property  long long maxZoneSaveAttempts
 @property  BOOL dontFetchFromServer

  // class methods
  +[CKModifyRecordZonesOperationInfo supportsSecureCoding]

  // instance methods
  -[CKModifyRecordZonesOperationInfo dontFetchFromServer]
  -[CKModifyRecordZonesOperationInfo setRecordZonesToSave:]
  -[CKModifyRecordZonesOperationInfo maxZoneSaveAttempts]
  -[CKModifyRecordZonesOperationInfo setAllowDefaultZoneSave:]
  -[CKModifyRecordZonesOperationInfo encodeWithCoder:]
  -[CKModifyRecordZonesOperationInfo .cxx_destruct]
  -[CKModifyRecordZonesOperationInfo setDontFetchFromServer:]
  -[CKModifyRecordZonesOperationInfo setRecordZoneIDsToDelete:]
  -[CKModifyRecordZonesOperationInfo recordZonesToSave]
  -[CKModifyRecordZonesOperationInfo setMarkZonesAsUserPurged:]
  -[CKModifyRecordZonesOperationInfo allowDefaultZoneSave]
  -[CKModifyRecordZonesOperationInfo setMaxZoneSaveAttempts:]
  -[CKModifyRecordZonesOperationInfo recordZoneIDsToDelete]
  -[CKModifyRecordZonesOperationInfo markZonesAsUserPurged]
  -[CKModifyRecordZonesOperationInfo initWithCoder:]


CKSQLiteTOCTableEntry : NSObject
 @property  NSString *logicalTableName
 @property  NSString *dbTableName
 @property  NSNumber *groupID
 @property  NSString *schema
 @property  NSNumber *dbVersion
 @property  NSString *creatingClass
 @property  NSDictionary *propertyData

  // instance methods
  -[CKSQLiteTOCTableEntry schema]
  -[CKSQLiteTOCTableEntry setGroupID:]
  -[CKSQLiteTOCTableEntry groupID]
  -[CKSQLiteTOCTableEntry setPropertyData:]
  -[CKSQLiteTOCTableEntry .cxx_destruct]
  -[CKSQLiteTOCTableEntry setSchema:]
  -[CKSQLiteTOCTableEntry creatingClass]
  -[CKSQLiteTOCTableEntry setDbVersion:]
  -[CKSQLiteTOCTableEntry setCreatingClass:]
  -[CKSQLiteTOCTableEntry logicalTableName]
  -[CKSQLiteTOCTableEntry setDbTableName:]
  -[CKSQLiteTOCTableEntry dbTableName]
  -[CKSQLiteTOCTableEntry propertyData]
  -[CKSQLiteTOCTableEntry setLogicalTableName:]
  -[CKSQLiteTOCTableEntry dbVersion]


CKSQLiteTOCTableBase : CKSQLiteDatabaseTable
  // class methods
  +[CKSQLiteTOCTableBase dbTableName]
  +[CKSQLiteTOCTableBase tableInDatabase:]


CKSQLiteTOCTable : CKSQLiteTOCTableBase
  // class methods
  +[CKSQLiteTOCTable dbProperties]
  +[CKSQLiteTOCTable entryClass]
  +[CKSQLiteTOCTable dbTableName]

  // instance methods
  -[CKSQLiteTOCTable tocEntriesWithGroupID:error:]


CKSQLiteTOCTableGroupTable : CKSQLiteTOCTableBase
  // class methods
  +[CKSQLiteTOCTableGroupTable dbProperties]
  +[CKSQLiteTOCTableGroupTable entryClass]
  +[CKSQLiteTOCTableGroupTable invalidGroupNameForGroupName:]
  +[CKSQLiteTOCTableGroupTable dbTableName]
  +[CKSQLiteTOCTableGroupTable isInvalidGroupName:]

  // instance methods
  -[CKSQLiteTOCTableGroupTable genericTableGroupWithName:error:]
  -[CKSQLiteTOCTableGroupTable invalidateGroup:]
  -[CKSQLiteTOCTableGroupTable updateGroupData:]
  -[CKSQLiteTOCTableGroupTable tableGroupsWithClass:]
  -[CKSQLiteTOCTableGroupTable updateLastUsedDate:]
  -[CKSQLiteTOCTableGroupTable tableGroupOfClass:withName:error:]
  -[CKSQLiteTOCTableGroupTable saveGroupName:]
  -[CKSQLiteTOCTableGroupTable newEntryObject]


CKSQLiteTOCTableGroup : CKSQLiteTableGroup
  // class methods
  +[CKSQLiteTOCTableGroup bootstrapNewDatabase:]
  +[CKSQLiteTOCTableGroup expirationTime]

  // instance methods
  -[CKSQLiteTOCTableGroup createTables]


CKContainerImplementation : NSObject <CKXPCContainerScopedClient>
 @property  CKContainer *unconfiguredWrappingContainer
 @property  CKContainerID *containerID
 @property  CKContainerOptions *options
 @property  CKDatabaseImplementation *privateCloudDatabaseImplementation
 @property  CKDatabaseImplementation *publicCloudDatabaseImplementation
 @property  CKDatabaseImplementation *sharedCloudDatabaseImplementation
 @property  CKDatabaseImplementation *organizationCloudDatabaseImplementation
 @property  NSMutableArray *codeServiceImplementations
 @property  CKUploadRequestManager *uploadRequestManager
 @property  NSXPCConnection *discretionaryXPCConnection
 @property  NSOperationQueue *throttlingOperationQueue
 @property  NSOperationQueue *backgroundThrottlingOperationQueue
 @property  NSOperationQueue *discretionaryThrottlingOperationQueue
 @property  int statusReportToken
 @property  CKContainerSetupInfo *cachedSetupInfo
 @property  BOOL hasCachedSetupInfo
 @property  CKEntitlements *resolvedEntitlements
 @property  NSNumber *fakeDeviceToDeviceEncryptionAvailability
 @property  NSObject<OS_dispatch_queue> *underlyingDispatchQueue
 @property  NSString *personaIdentifier
 @property  BOOL captureResponseHTTPHeaders
 @property  CKRecordID *containerScopedUserID
 @property  NSString *containerIdentifier
 @property  CKRecordID *orgAdminUserID
 @property  NSOperationQueue *convenienceOperationQueue

  // class methods
  +[CKContainerImplementation initialize]

  // instance methods
  -[CKContainerImplementation setContainerID:]
  -[CKContainerImplementation codeServiceImplementationWithName:databaseScope:serviceInstanceURL:]
  -[CKContainerImplementation sourceApplicationBundleIdentifier]
  -[CKContainerImplementation setThrottlingOperationQueue:]
  -[CKContainerImplementation CKStatusReportArray]
  -[CKContainerImplementation manuallyTriggerUploadRequests]
  -[CKContainerImplementation containerID]
  -[CKContainerImplementation setFakeError:forNextRequestOfClassName:]
  -[CKContainerImplementation orgAdminUserID]
  -[CKContainerImplementation registerForAssetUploadRequests:machServiceName:]
  -[CKContainerImplementation setPersonaIdentifier:]
  -[CKContainerImplementation decryptPersonalInfoOnShare:completionHandler:]
  -[CKContainerImplementation setUnderlyingDispatchQueue:]
  -[CKContainerImplementation resolvedEntitlements]
  -[CKContainerImplementation fetchCurrentDeviceIDWithCompletionHandler:]
  -[CKContainerImplementation underlyingDispatchQueue]
  -[CKContainerImplementation clearContainerFromMetadataCache]
  -[CKContainerImplementation setCaptureResponseHTTPHeaders:]
  -[CKContainerImplementation personaIdentifier]
  -[CKContainerImplementation codeServiceImplementations]
  -[CKContainerImplementation containerScopedUserID]
  -[CKContainerImplementation setApplicationPermission:enabled:completionHandler:]
  -[CKContainerImplementation sourceApplicationSecondaryIdentifier]
  -[CKContainerImplementation discretionaryXPCConnection]
  -[CKContainerImplementation setPublicCloudDatabaseImplementation:]
  -[CKContainerImplementation deviceContext]
  -[CKContainerImplementation dumpDaemonStatusReportToFileHandle:completionHandler:]
  -[CKContainerImplementation setPrivateCloudDatabaseImplementation:]
  -[CKContainerImplementation setDiscretionaryThrottlingOperationQueue:]
  -[CKContainerImplementation fetchShareMetadataWithURL:wrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation setContainerScopedUserID:]
  -[CKContainerImplementation dropDetachedContainersWithCompletionHandler:]
  -[CKContainerImplementation recordChangeProvider]
  -[CKContainerImplementation organizationCloudDatabaseImplementation]
  -[CKContainerImplementation applicationBundleIdentifierForPush]
  -[CKContainerImplementation containerIdentifier]
  -[CKContainerImplementation codeServiceImplementationWithName:serviceInstanceURL:]
  -[CKContainerImplementation registerForAssetUploadRequests:]
  -[CKContainerImplementation setCodeServiceImplementations:]
  -[CKContainerImplementation dealloc]
  -[CKContainerImplementation codeServiceImplementationWithName:databaseScope:]
  -[CKContainerImplementation convenienceOperationQueue]
  -[CKContainerImplementation setBackgroundThrottlingOperationQueue:]
  -[CKContainerImplementation deviceCountWithCompletionHandler:]
  -[CKContainerImplementation .cxx_destruct]
  -[CKContainerImplementation captureResponseHTTPHeaders]
  -[CKContainerImplementation representativeDataclassEnabledWithCompletionHandler:]
  -[CKContainerImplementation handleRecordChanged:changeType:record:error:]
  -[CKContainerImplementation primaryIdentifier]
  -[CKContainerImplementation throttlingOperationQueue]
  -[CKContainerImplementation resetAllApplicationPermissionsWithCompletionHandler:]
  -[CKContainerImplementation setSourceApplicationBundleIdentifier:]
  -[CKContainerImplementation submitEventMetric:]
  -[CKContainerImplementation fetchLongLivedOperationWithID:wrappingContainer:completionHandler:]
  -[CKContainerImplementation setHasCachedSetupInfo:]
  -[CKContainerImplementation setFakeDeviceToDeviceEncryptionAvailability:]
  -[CKContainerImplementation _scheduleConvenienceOperation:wrappingContainer:convenienceConfiguration:]
  -[CKContainerImplementation reloadAccountWithCompletionHandler:]
  -[CKContainerImplementation setOrgAdminUserID:]
  -[CKContainerImplementation fetchShareParticipantWithUserRecordID:wrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation options]
  -[CKContainerImplementation dumpDaemonStatusReport]
  -[CKContainerImplementation getNewWebSharingIdentityDataWithCompletionHandler:]
  -[CKContainerImplementation privateCloudDatabaseImplementation]
  -[CKContainerImplementation setupInfo]
  -[CKContainerImplementation fetchXPCCriteriaWithCompletionHandler:]
  -[CKContainerImplementation setCachedSetupInfo:]
  -[CKContainerImplementation hasCachedSetupInfo]
  -[CKContainerImplementation registerForPackageUploadRequests:machServiceName:]
  -[CKContainerImplementation codeServiceImplementationWithName:]
  -[CKContainerImplementation requestApplicationPermission:completionHandler:]
  -[CKContainerImplementation cachedSetupInfo]
  -[CKContainerImplementation unregisterFromUploadRequests]
  -[CKContainerImplementation getOutstandingOperationCountWithCompletionHandler:]
  -[CKContainerImplementation acceptShareMetadata:wrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation _discretionaryDaemonMachServiceConnection]
  -[CKContainerImplementation discoverAllIdentitiesWithWrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation setResolvedEntitlements:]
  -[CKContainerImplementation uploadRequestManager]
  -[CKContainerImplementation tossConfigWithCompletionHandler:]
  -[CKContainerImplementation discoverUserIdentityWithEmailAddress:wrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation wipeAllCachesAndDie]
  -[CKContainerImplementation serverPreferredPushEnvironmentWithCompletionHandler:]
  -[CKContainerImplementation fetchShareParticipantWithPhoneNumber:wrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation fetchShareParticipantWithEmailAddress:wrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation fetchServerEnvironment:]
  -[CKContainerImplementation setUnconfiguredWrappingContainer:]
  -[CKContainerImplementation fetchShareParticipantWithLookupInfo:wrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation statusReportToken]
  -[CKContainerImplementation accountStatusWithCompletionHandler:]
  -[CKContainerImplementation fetchOrgAdminUserRecordIDWithCompletionHandler:]
  -[CKContainerImplementation fetchAllLongLivedOperationIDsWithCompletionHandler:]
  -[CKContainerImplementation unconfiguredWrappingContainer]
  -[CKContainerImplementation setFakeResponseOperationResult:forNextRequestOfClassName:forItemID:withLifetime:]
  -[CKContainerImplementation handleSharingUIUpdatedShare:recordID:isDeleted:error:reply:]
  -[CKContainerImplementation discretionaryThrottlingOperationQueue]
  -[CKContainerImplementation setOptions:]
  -[CKContainerImplementation _submitEventMetric:completionHandler:]
  -[CKContainerImplementation fetchCurrentUserBoundaryKeyWithCompletionHandler:]
  -[CKContainerImplementation registerForAssetRequests:packageRequests:machServiceName:]
  -[CKContainerImplementation untrustedEntitlements]
  -[CKContainerImplementation backgroundThrottlingOperationQueue]
  -[CKContainerImplementation fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:]
  -[CKContainerImplementation statusGroupsForApplicationPermission:completionHandler:]
  -[CKContainerImplementation fetchUserRecordIDWithCompletionHandler:]
  -[CKContainerImplementation accountInfoWithCompletionHandler:]
  -[CKContainerImplementation sharedCloudDatabaseImplementation]
  -[CKContainerImplementation statusForApplicationPermission:completionHandler:]
  -[CKContainerImplementation setDiscretionaryXPCConnection:]
  -[CKContainerImplementation setStatusReportToken:]
  -[CKContainerImplementation initWithContainerID:options:unconfiguredWrappingContainer:]
  -[CKContainerImplementation setSourceApplicationSecondaryIdentifier:]
  -[CKContainerImplementation submitEventMetric:completionHandler:]
  -[CKContainerImplementation consumeSandboxExtensions:reply:]
  -[CKContainerImplementation setOrganizationCloudDatabaseImplementation:]
  -[CKContainerImplementation registerForPackageUploadRequests:]
  -[CKContainerImplementation addOperation:wrappingContainer:convenienceConfiguration:]
  -[CKContainerImplementation setSharedCloudDatabaseImplementation:]
  -[CKContainerImplementation fetchFrameworkCachesDirectoryWithCompletionHandler:]
  -[CKContainerImplementation unregisterFromUploadRequestsWithMachServiceName:]
  -[CKContainerImplementation discoverUserIdentityWithUserRecordID:wrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:]
  -[CKContainerImplementation clearPILSCacheForLookupInfos:]
  -[CKContainerImplementation cancelUploadRequests]
  -[CKContainerImplementation discoverUserIdentityWithPhoneNumber:wrappingContainer:convenienceConfiguration:completionHandler:]
  -[CKContainerImplementation fakeDeviceToDeviceEncryptionAvailability]
  -[CKContainerImplementation serverPreferredPushEnvironmentWithError:]
  -[CKContainerImplementation publicCloudDatabaseImplementation]
  -[CKContainerImplementation CKPropertiesDescription]
  -[CKContainerImplementation serverPreferredPushEnvironmentSynchronous:withCompletionHandler:]


CKContainer : NSObject
 @property  CKDatabase *privateCloudDatabase
 @property  CKDatabase *publicCloudDatabase
 @property  CKDatabase *sharedCloudDatabase
 @property  NSMutableArray *codeServices
 @property  int scopedIdentityUpdateToken
 @property  CKContainerImplementation *implementation
 @property  CKConvenienceConfiguration *convenienceConfiguration
 @property  CKContainerID *containerID
 @property  CKContainerOptions *options
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *sourceApplicationSecondaryIdentifier
 @property  CKContainerSetupInfo *setupInfo
 @property  CKDatabase *organizationCloudDatabase
 @property  NSString *containerIdentifier

  // class methods
  +[CKContainer allocWithZone:]
  +[CKContainer containerIDForContainerIdentifier:]
  +[CKContainer instanceMethodSignatureForSelector:]
  +[CKContainer containerWithIdentifier:]
  +[CKContainer currentProcessCanUseCloudKit]
  +[CKContainer defaultContainer]
  +[CKContainer containersByIdentifier]
  +[CKContainer removeIdentifierFromContainersWithIdentifier:]
  +[CKContainer containerIDForContainerIdentifier:environment:]
  +[CKContainer containerEnvironmentForContainerID:entitlements:]
  +[CKContainer matterhornName]
  +[CKContainer uploadRequestFetchAllNotificationName]
  +[CKContainer _CKXPCClientToDiscretionaryDaemonInterface]
  +[CKContainer importantUserRecordAccessQueue]

  // instance methods
  -[CKContainer sourceApplicationBundleIdentifier]
  -[CKContainer manuallyTriggerUploadRequests]
  -[CKContainer containerID]
  -[CKContainer setFakeError:forNextRequestOfClassName:]
  -[CKContainer registerForAssetUploadRequests:machServiceName:]
  -[CKContainer fetchCurrentDeviceIDWithCompletionHandler:]
  -[CKContainer implementation]
  -[CKContainer setApplicationPermission:enabled:completionHandler:]
  -[CKContainer sourceApplicationSecondaryIdentifier]
  -[CKContainer addOperation:]
  -[CKContainer containerIdentifier]
  -[CKContainer registerForAssetUploadRequests:]
  -[CKContainer dealloc]
  -[CKContainer .cxx_destruct]
  -[CKContainer setSourceApplicationBundleIdentifier:]
  -[CKContainer submitEventMetric:]
  -[CKContainer options]
  -[CKContainer initWithContainerID:]
  -[CKContainer getNewWebSharingIdentityDataWithCompletionHandler:]
  -[CKContainer setupInfo]
  -[CKContainer registerForPackageUploadRequests:machServiceName:]
  -[CKContainer requestApplicationPermission:completionHandler:]
  -[CKContainer unregisterFromUploadRequests]
  -[CKContainer forwardingTargetForSelector:]
  -[CKContainer wipeAllCachesAndDie]
  -[CKContainer serverPreferredPushEnvironmentWithCompletionHandler:]
  -[CKContainer accountStatusWithCompletionHandler:]
  -[CKContainer fetchOrgAdminUserRecordIDWithCompletionHandler:]
  -[CKContainer fetchAllLongLivedOperationIDsWithCompletionHandler:]
  -[CKContainer fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:]
  -[CKContainer statusGroupsForApplicationPermission:completionHandler:]
  -[CKContainer fetchUserRecordIDWithCompletionHandler:]
  -[CKContainer initWithContainerID:options:]
  -[CKContainer accountInfoWithCompletionHandler:]
  -[CKContainer statusForApplicationPermission:completionHandler:]
  -[CKContainer setSourceApplicationSecondaryIdentifier:]
  -[CKContainer submitEventMetric:completionHandler:]
  -[CKContainer registerForPackageUploadRequests:]
  -[CKContainer unregisterFromUploadRequestsWithMachServiceName:]
  -[CKContainer fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:]
  -[CKContainer cancelUploadRequests]
  -[CKContainer serverPreferredPushEnvironmentWithError:]
  -[CKContainer privateCloudDatabase]
  -[CKContainer sharedCloudDatabase]
  -[CKContainer publicCloudDatabase]
  -[CKContainer fetchLongLivedOperationWithID:completionHandler:]
  -[CKContainer initWithImplementation:convenienceConfiguration:]
  -[CKContainer convenienceConfiguration]
  -[CKContainer databaseWithDatabaseScope:]
  -[CKContainer codeServiceWithName:]
  -[CKContainer codeServiceWithName:serviceInstanceURL:]
  -[CKContainer _initWithContainerIdentifier:]
  -[CKContainer initWithContainerSetupInfo:]
  -[CKContainer _initUnconfiguredContainerWithImplementation:]
  -[CKContainer getSynchronousContainerScopedDaemonProxyWithErrorHandler:daemonProxyHandler:]
  -[CKContainer organizationCloudDatabase]
  -[CKContainer codeServiceWithName:databaseScope:]
  -[CKContainer codeServiceWithName:databaseScope:serviceInstanceURL:]
  -[CKContainer discoverAllIdentitiesWithCompletionHandler:]
  -[CKContainer discoverUserIdentityWithEmailAddress:completionHandler:]
  -[CKContainer discoverUserIdentityWithPhoneNumber:completionHandler:]
  -[CKContainer discoverUserIdentityWithUserRecordID:completionHandler:]
  -[CKContainer fetchShareParticipantWithEmailAddress:completionHandler:]
  -[CKContainer fetchShareParticipantWithPhoneNumber:completionHandler:]
  -[CKContainer fetchShareParticipantWithUserRecordID:completionHandler:]
  -[CKContainer fetchShareMetadataWithURL:completionHandler:]
  -[CKContainer acceptShareMetadata:completionHandler:]
  -[CKContainer registerSystemSharingUIObserver:]
  -[CKContainer fetchShareParticipantWithLookupInfo:completionHandler:]
  -[CKContainer setPrivateCloudDatabase:]
  -[CKContainer setPublicCloudDatabase:]
  -[CKContainer setSharedCloudDatabase:]
  -[CKContainer codeServices]
  -[CKContainer setCodeServices:]
  -[CKContainer scopedIdentityUpdateToken]
  -[CKContainer setScopedIdentityUpdateToken:]
  -[CKContainer setConvenienceConfiguration:]
  -[CKContainer discoverAllContactUserInfosWithCompletionHandler:]
  -[CKContainer discoverUserInfoWithEmailAddress:completionHandler:]
  -[CKContainer discoverUserInfoWithUserRecordID:completionHandler:]


CKDeserializeRecordModificationsOperation : CKDatabaseOperation <CKDeserializeRecordModificationsOperationCallbacks>
 @property  NSArray *recordsToSave
 @property  NSArray *recordIDsToDelete
 @property  <CKDeserializeRecordModificationsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKDeserializeRecordModificationsOperationInfo *operationInfo
 @property  NSData *serializedModifications
 @property  @? deserializeCompletionBlock

  // class methods
  +[CKDeserializeRecordModificationsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKDeserializeRecordModificationsOperation recordIDsToDelete]
  -[CKDeserializeRecordModificationsOperation setRecordIDsToDelete:]
  -[CKDeserializeRecordModificationsOperation setRecordsToSave:]
  -[CKDeserializeRecordModificationsOperation recordsToSave]
  -[CKDeserializeRecordModificationsOperation activityCreate]
  -[CKDeserializeRecordModificationsOperation _finishOnCallbackQueueWithError:]
  -[CKDeserializeRecordModificationsOperation .cxx_destruct]
  -[CKDeserializeRecordModificationsOperation hasCKOperationCallbacksSet]
  -[CKDeserializeRecordModificationsOperation performCKOperation]
  -[CKDeserializeRecordModificationsOperation fillFromOperationInfo:]
  -[CKDeserializeRecordModificationsOperation CKOperationShouldRun:]
  -[CKDeserializeRecordModificationsOperation fillOutOperationInfo:]
  -[CKDeserializeRecordModificationsOperation init]
  -[CKDeserializeRecordModificationsOperation handleDeserializationOfSaves:deletes:error:]
  -[CKDeserializeRecordModificationsOperation initWithSerializedModifications:]
  -[CKDeserializeRecordModificationsOperation setDeserializeCompletionBlock:]
  -[CKDeserializeRecordModificationsOperation deserializeCompletionBlock]
  -[CKDeserializeRecordModificationsOperation serializedModifications]
  -[CKDeserializeRecordModificationsOperation setSerializedModifications:]


CKDeserializeRecordModificationsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSData *serializedModifications

  // class methods
  +[CKDeserializeRecordModificationsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKDeserializeRecordModificationsOperationInfo encodeWithCoder:]
  -[CKDeserializeRecordModificationsOperationInfo .cxx_destruct]
  -[CKDeserializeRecordModificationsOperationInfo init]
  -[CKDeserializeRecordModificationsOperationInfo initWithCoder:]
  -[CKDeserializeRecordModificationsOperationInfo serializedModifications]
  -[CKDeserializeRecordModificationsOperationInfo setSerializedModifications:]


CKConvenienceConfiguration : NSObject
 @property  CKOperationConfiguration *configuration
 @property  CKOperationGroup *group
 @property  <CKConvenienceCallbackWrapper> *convenienceCallbacks

  // instance methods
  -[CKConvenienceConfiguration configuration]
  -[CKConvenienceConfiguration .cxx_destruct]
  -[CKConvenienceConfiguration group]
  -[CKConvenienceConfiguration initWithConfiguration:group:]
  -[CKConvenienceConfiguration initWithConfiguration:group:convenienceCallbackWrapper:]
  -[CKConvenienceConfiguration convenienceCallbacks]


CKSyncEngineBatch : NSObject
 @property  NSArray *savedRecords
 @property  NSArray *deletedRecordIDs
 @property  NSArray *recordsToSave
 @property  NSArray *recordIDsToDelete
 @property  BOOL atomic

  // instance methods
  -[CKSyncEngineBatch recordIDsToDelete]
  -[CKSyncEngineBatch recordsToSave]
  -[CKSyncEngineBatch setAtomic:]
  -[CKSyncEngineBatch setDeletedRecordIDs:]
  -[CKSyncEngineBatch initWithRecordsToSave:recordIDsToDelete:]
  -[CKSyncEngineBatch .cxx_destruct]
  -[CKSyncEngineBatch isAtomic]
  -[CKSyncEngineBatch savedRecords]
  -[CKSyncEngineBatch setSavedRecords:]
  -[CKSyncEngineBatch CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKSyncEngineBatch deletedRecordIDs]


CKArchiveRecordsOperation : CKDatabaseOperation <CKArchiveRecordsOperationCallbacks>
 @property  NSMutableDictionary *perItemErrors
 @property  <CKArchiveRecordsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKArchiveRecordsOperationInfo *operationInfo
 @property  NSArray *recordIDs
 @property  @? recordArchivedBlock
 @property  @? archiveRecordsCompletionBlock

  // class methods
  +[CKArchiveRecordsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKArchiveRecordsOperation setRecordIDs:]
  -[CKArchiveRecordsOperation activityCreate]
  -[CKArchiveRecordsOperation recordIDs]
  -[CKArchiveRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKArchiveRecordsOperation .cxx_destruct]
  -[CKArchiveRecordsOperation hasCKOperationCallbacksSet]
  -[CKArchiveRecordsOperation perItemErrors]
  -[CKArchiveRecordsOperation setPerItemErrors:]
  -[CKArchiveRecordsOperation performCKOperation]
  -[CKArchiveRecordsOperation fillFromOperationInfo:]
  -[CKArchiveRecordsOperation CKOperationShouldRun:]
  -[CKArchiveRecordsOperation initWithRecordIDs:]
  -[CKArchiveRecordsOperation fillOutOperationInfo:]
  -[CKArchiveRecordsOperation init]
  -[CKArchiveRecordsOperation handleRecordArchivalForRecordID:error:]
  -[CKArchiveRecordsOperation setRecordArchivedBlock:]
  -[CKArchiveRecordsOperation recordArchivedBlock]
  -[CKArchiveRecordsOperation setArchiveRecordsCompletionBlock:]
  -[CKArchiveRecordsOperation archiveRecordsCompletionBlock]


CKArchiveRecordsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordIDs

  // class methods
  +[CKArchiveRecordsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKArchiveRecordsOperationInfo setRecordIDs:]
  -[CKArchiveRecordsOperationInfo recordIDs]
  -[CKArchiveRecordsOperationInfo encodeWithCoder:]
  -[CKArchiveRecordsOperationInfo .cxx_destruct]
  -[CKArchiveRecordsOperationInfo initWithCoder:]


CKOperationCallbackProxy : CKWeakObjectCallbackProxy
  // instance methods
  -[CKOperationCallbackProxy initWithOperation:callbackProtocol:]
  -[CKOperationCallbackProxy forwardInvocation:]


CKSQLiteError : CKInternalError
 @property  int sqliteCode
 @property  int sqliteExtendedCode
 @property  BOOL databaseIsCorrupt

  // class methods
  +[CKSQLiteError errorForSQLite:message:args:]
  +[CKSQLiteError isNoMatchingRowError:]
  +[CKSQLiteError testErrorWithDatabaseCorruption]
  +[CKSQLiteError isUniqueConstraintError:]
  +[CKSQLiteError isNoUniqueRowError:]
  +[CKSQLiteError isConstraintError:]
  +[CKSQLiteError errorForSQLite:message:]

  // instance methods
  -[CKSQLiteError databaseIsCorrupt]
  -[CKSQLiteError CK_isCKSQLiteError]
  -[CKSQLiteError sqliteCode]
  -[CKSQLiteError sqliteExtendedCode]


CKFrameworkFingerprint : NSObject <NSSecureCoding, NSCopying>
 @property  NSUUID *uuid
 @property  NSNumber *version
 @property  NSNumber *cpuType
 @property  NSNumber *cpuSubtype

  // class methods
  +[CKFrameworkFingerprint supportsSecureCoding]

  // instance methods
  -[CKFrameworkFingerprint setCpuType:]
  -[CKFrameworkFingerprint isLikelyEqual:]
  -[CKFrameworkFingerprint encodeWithCoder:]
  -[CKFrameworkFingerprint cpuType]
  -[CKFrameworkFingerprint uuid]
  -[CKFrameworkFingerprint .cxx_destruct]
  -[CKFrameworkFingerprint setUuid:]
  -[CKFrameworkFingerprint version]
  -[CKFrameworkFingerprint cpuSubtype]
  -[CKFrameworkFingerprint copyWithZone:]
  -[CKFrameworkFingerprint setCpuSubtype:]
  -[CKFrameworkFingerprint setVersion:]
  -[CKFrameworkFingerprint init]
  -[CKFrameworkFingerprint initWithCoder:]


CKProcessScopedMetadata : NSObject <NSSecureCoding>
 @property  unsigned int clientSDKVersion
 @property  CKFrameworkFingerprint *frameworkFingerprint
 @property  BOOL isClientMainBundleAppleExecutable

  // class methods
  +[CKProcessScopedMetadata supportsSecureCoding]

  // instance methods
  -[CKProcessScopedMetadata setClientSDKVersion:]
  -[CKProcessScopedMetadata clientSDKVersion]
  -[CKProcessScopedMetadata isClientMainBundleAppleExecutable]
  -[CKProcessScopedMetadata setIsClientMainBundleAppleExecutable:]
  -[CKProcessScopedMetadata encodeWithCoder:]
  -[CKProcessScopedMetadata .cxx_destruct]
  -[CKProcessScopedMetadata setFrameworkFingerprint:]
  -[CKProcessScopedMetadata initWithCoder:]
  -[CKProcessScopedMetadata frameworkFingerprint]


CKProcessScopedStateManager : NSObject <CKXPCProcessScopedClient>
  // class methods
  +[CKProcessScopedStateManager sharedManager]

  // instance methods
  -[CKProcessScopedStateManager handleSignificantIssueBehavior:reason:]
  -[CKProcessScopedStateManager .cxx_destruct]
  -[CKProcessScopedStateManager setFakeEntitlement:forKey:]
  -[CKProcessScopedStateManager connectionBecameInvalid:]
  -[CKProcessScopedStateManager noteSystemIsAvailable]
  -[CKProcessScopedStateManager clearFakeEntitlementForKey:]
  -[CKProcessScopedStateManager untrustedEntitlements]
  -[CKProcessScopedStateManager getFileMetadataWithFileHandle:openInfo:reply:]


CKProcessScopedDaemonProxy : NSObject
 @property  <CKXPCProcessScopedDaemon> *processScopedDaemonProxyCreator
 @property  BOOL hasValidProcessScopedDaemonProxyCreator
 @property  <NSObject> *connectionInterruptedObserver

  // class methods
  +[CKProcessScopedDaemonProxy CKXPCDaemonToClientProcessScopedInterface]
  +[CKProcessScopedDaemonProxy sharedProcessScopedDaemonProxy]
  +[CKProcessScopedDaemonProxy CKXPCClientToDaemonProcessScopedInterface]

  // instance methods
  -[CKProcessScopedDaemonProxy accountsDidRevokeAccessToBundleID:containerIdentifiers:]
  -[CKProcessScopedDaemonProxy setProcessScopedDaemonProxyCreator:]
  -[CKProcessScopedDaemonProxy accountsWillDeleteAccount:completionHandler:]
  -[CKProcessScopedDaemonProxy _getProcessScopedDaemonProxySynchronous:errorHandler:daemonProxyHandler:]
  -[CKProcessScopedDaemonProxy accountWithID:changedWithChangeType:]
  -[CKProcessScopedDaemonProxy clearPCSCachesForKnownContainersWithCompletionHandler:]
  -[CKProcessScopedDaemonProxy dealloc]
  -[CKProcessScopedDaemonProxy setConnectionInterruptedObserver:]
  -[CKProcessScopedDaemonProxy .cxx_destruct]
  -[CKProcessScopedDaemonProxy wipeServerConfigurationsAndDie]
  -[CKProcessScopedDaemonProxy processScopedDaemonProxyCreator]
  -[CKProcessScopedDaemonProxy connectionInterruptedObserver]
  -[CKProcessScopedDaemonProxy wipeAllCachesAndDie]
  -[CKProcessScopedDaemonProxy setHasValidProcessScopedDaemonProxyCreator:]
  -[CKProcessScopedDaemonProxy dumpAllClientsStatusReportToFileHandle:completionHandler:]
  -[CKProcessScopedDaemonProxy kill]
  -[CKProcessScopedDaemonProxy hasValidProcessScopedDaemonProxyCreator]
  -[CKProcessScopedDaemonProxy maxInlineMergeableDeltaSize]
  -[CKProcessScopedDaemonProxy updatePushTokens]
  -[CKProcessScopedDaemonProxy accountsDidGrantAccessToBundleID:containerIdentifiers:]
  -[CKProcessScopedDaemonProxy _init]
  -[CKProcessScopedDaemonProxy _getProcessScopedDaemonProxyCreatorSynchronous:completionHandler:]


CKQuery : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *recordType
 @property  NSPredicate *predicate
 @property  NSArray *sortDescriptors

  // class methods
  +[CKQuery supportsSecureCoding]

  // instance methods
  -[CKQuery setPredicate:]
  -[CKQuery setSortDescriptors:]
  -[CKQuery sortDescriptors]
  -[CKQuery encodeWithCoder:]
  -[CKQuery predicate]
  -[CKQuery .cxx_destruct]
  -[CKQuery setRecordType:]
  -[CKQuery recordType]
  -[CKQuery copyWithZone:]
  -[CKQuery initWithRecordType:predicate:]
  -[CKQuery init]
  -[CKQuery initWithCoder:]
  -[CKQuery CKPropertiesDescription]


CKMergeableDeltaID : NSObject <NSCopying, NSSecureCoding>
 @property  NSString *deltaIdentifier
 @property  CKMergeableValueID *valueID

  // class methods
  +[CKMergeableDeltaID supportsSecureCoding]

  // instance methods
  -[CKMergeableDeltaID encodeWithCoder:]
  -[CKMergeableDeltaID .cxx_destruct]
  -[CKMergeableDeltaID copyWithZone:]
  -[CKMergeableDeltaID isEqual:]
  -[CKMergeableDeltaID init]
  -[CKMergeableDeltaID initWithCoder:]
  -[CKMergeableDeltaID deltaIdentifier]
  -[CKMergeableDeltaID valueID]
  -[CKMergeableDeltaID initWithDeltaIdentifier:valueID:]
  -[CKMergeableDeltaID setDeltaIdentifier:]
  -[CKMergeableDeltaID setValueID:]


CKNotificationListener : NSObject <APSConnectionDelegate, CKPKPushRegistryDelegate, CKPropertiesDescription>
 @property  NSObject<OS_dispatch_queue> *queue
 @property  NSString *machServiceName
 @property  NSArray *notificationObservers
 @property  BOOL useOpportunisticPushTopics
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKNotificationListener connectionDidReconnect:]
  -[CKNotificationListener connection:didChangeConnectedStatus:]
  -[CKNotificationListener connection:didReceiveIncomingMessage:]
  -[CKNotificationListener CKDescribePropertiesUsing:]
  -[CKNotificationListener unregisterForSubscriptionWithID:inDatabase:]
  -[CKNotificationListener connection:didReceivePublicToken:]
  -[CKNotificationListener uniqueKeyForSubscriptionID:inDatabase:]
  -[CKNotificationListener initWithStrategy:]
  -[CKNotificationListener notificationObservers]
  -[CKNotificationListener dealloc]
  -[CKNotificationListener isRegisteredForSubscriptionWithID:inDatabase:]
  -[CKNotificationListener setMachServiceName:]
  -[CKNotificationListener .cxx_destruct]
  -[CKNotificationListener initWithStrategy:machServiceName:]
  -[CKNotificationListener useOpportunisticPushTopics]
  -[CKNotificationListener initWithMachServiceName:]
  -[CKNotificationListener setQueue:]
  -[CKNotificationListener machServiceName]
  -[CKNotificationListener queue]
  -[CKNotificationListener setUseOpportunisticPushTopics:]
  -[CKNotificationListener didReceiveIncomingPushWithPayload:withCompletionHandler:]
  -[CKNotificationListener redactedDescription]
  -[CKNotificationListener handlePushNotificationWithPayload:completionHandler:]
  -[CKNotificationListener hasInitializedAPSConnection]
  -[CKNotificationListener setNotificationObservers:]
  -[CKNotificationListener registerForSubscription:inDatabase:handler:]
  -[CKNotificationListener apsConnectionOnQueue]
  -[CKNotificationListener init]


CKSubscriptionInfo : NSObject
  // instance methods
  -[CKSubscriptionInfo .cxx_destruct]
  -[CKSubscriptionInfo isEqual:]


CKAssetDownloadStagingManager : NSObject <CKPropertiesDescription>
 @property  NSMutableDictionary *fileHandlesForInflightLastPathComponent
 @property  NSURL *inflightDownloadDirectory
 @property  NSURL *finishedDownloadDirectory
 @property  NSURL *directory
 @property  NSString *fileProtectionType
 @property  BOOL keepInflightFilesOpen
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAssetDownloadStagingManager CKDescribePropertiesUsing:]
  -[CKAssetDownloadStagingManager directory]
  -[CKAssetDownloadStagingManager initWithDirectory:]
  -[CKAssetDownloadStagingManager .cxx_destruct]
  -[CKAssetDownloadStagingManager fileProtectionType]
  -[CKAssetDownloadStagingManager setFileProtectionType:]
  -[CKAssetDownloadStagingManager redactedDescription]
  -[CKAssetDownloadStagingManager keepInflightFilesOpen]
  -[CKAssetDownloadStagingManager setKeepInflightFilesOpen:]
  -[CKAssetDownloadStagingManager openWithAssetDownloadStagingInfo:fileDescriptor:closeOnDealloc:error:]
  -[CKAssetDownloadStagingManager finishWithAssetDownloadStagingInfo:fileURL:fileHandle:error:]
  -[CKAssetDownloadStagingManager inflightLastPathComponentWithInfo:]
  -[CKAssetDownloadStagingManager inflightURLWithLastPathComponent:]
  -[CKAssetDownloadStagingManager finishedURLWithInfo:]
  -[CKAssetDownloadStagingManager fileHandlesForInflightLastPathComponent]
  -[CKAssetDownloadStagingManager setFileHandlesForInflightLastPathComponent:]
  -[CKAssetDownloadStagingManager inflightDownloadDirectory]
  -[CKAssetDownloadStagingManager finishedDownloadDirectory]


CKRepairZonePCSOperation : CKDatabaseOperation <CKRepairZonePCSOperationCallbacks>
 @property  <CKRepairZonePCSOperationCallbacks> *clientOperationCallbackProxy
 @property  CKRepairZonePCSOperationInfo *operationInfo
 @property  NSArray *zoneIDs
 @property  @? zoneRepairedBlock

  // class methods
  +[CKRepairZonePCSOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKRepairZonePCSOperation zoneIDs]
  -[CKRepairZonePCSOperation setZoneIDs:]
  -[CKRepairZonePCSOperation activityCreate]
  -[CKRepairZonePCSOperation _finishOnCallbackQueueWithError:]
  -[CKRepairZonePCSOperation .cxx_destruct]
  -[CKRepairZonePCSOperation hasCKOperationCallbacksSet]
  -[CKRepairZonePCSOperation performCKOperation]
  -[CKRepairZonePCSOperation fillFromOperationInfo:]
  -[CKRepairZonePCSOperation CKOperationShouldRun:]
  -[CKRepairZonePCSOperation fillOutOperationInfo:]
  -[CKRepairZonePCSOperation handleZonePCSRepairForID:pcsInfo:error:]
  -[CKRepairZonePCSOperation initWithZoneIDsToRepair:]
  -[CKRepairZonePCSOperation setZoneRepairedBlock:]
  -[CKRepairZonePCSOperation zoneRepairedBlock]


CKRepairZonePCSOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *zoneIDs

  // class methods
  +[CKRepairZonePCSOperationInfo supportsSecureCoding]

  // instance methods
  -[CKRepairZonePCSOperationInfo zoneIDs]
  -[CKRepairZonePCSOperationInfo setZoneIDs:]
  -[CKRepairZonePCSOperationInfo encodeWithCoder:]
  -[CKRepairZonePCSOperationInfo .cxx_destruct]
  -[CKRepairZonePCSOperationInfo initWithCoder:]


CKDPRecordReference : PBCodable <NSCopying>
 @property  BOOL hasType
 @property  int type
 @property  BOOL hasRecordIdentifier
 @property  CKDPRecordIdentifier *recordIdentifier

  // instance methods
  -[CKDPRecordReference typeAsString:]
  -[CKDPRecordReference hasRecordIdentifier]
  -[CKDPRecordReference setHasType:]
  -[CKDPRecordReference setRecordIdentifier:]
  -[CKDPRecordReference copyTo:]
  -[CKDPRecordReference recordIdentifier]
  -[CKDPRecordReference type]
  -[CKDPRecordReference StringAsType:]
  -[CKDPRecordReference .cxx_destruct]
  -[CKDPRecordReference mergeFrom:]
  -[CKDPRecordReference setType:]
  -[CKDPRecordReference dictionaryRepresentation]
  -[CKDPRecordReference copyWithZone:]
  -[CKDPRecordReference hasType]
  -[CKDPRecordReference readFrom:]
  -[CKDPRecordReference writeTo:]
  -[CKDPRecordReference isEqual:]


CKSQLiteTableGroup : NSObject <CKSQLiteDatabaseKeyValueProperties>
 @property  NSNumber *groupID
 @property  NSString *name
 @property  NSDate *lastUsed
 @property  NSString *creatingClass
 @property  NSDictionary *groupData
 @property  NSDate *activityDate
 @property  CKSQLiteDatabase *db
 @property  BOOL didCreateDatabaseTables

  // class methods
  +[CKSQLiteTableGroup expirationTime]
  +[CKSQLiteTableGroup rebootShouldClearData]
  +[CKSQLiteTableGroup groupNameWithDomain:domainIdentifier:groupName:]
  +[CKSQLiteTableGroup purgeGroup:]
  +[CKSQLiteTableGroup purgeGroupWithName:inDatabase:]
  +[CKSQLiteTableGroup existingTableGroupInDatabase:withName:error:]
  +[CKSQLiteTableGroup tableGroupInDatabase:withName:error:]
  +[CKSQLiteTableGroup supportsGroupCreation]
  +[CKSQLiteTableGroup enumerateGroupsInDatabase:block:]
  +[CKSQLiteTableGroup _tableGroupInDatabase:withName:error:create:]
  +[CKSQLiteTableGroup groupWillExpire:]
  +[CKSQLiteTableGroup expireGroup:reason:]

  // instance methods
  -[CKSQLiteTableGroup setGroupID:]
  -[CKSQLiteTableGroup _purge]
  -[CKSQLiteTableGroup UUIDValueForKey:]
  -[CKSQLiteTableGroup setLastUsed:]
  -[CKSQLiteTableGroup setDb:]
  -[CKSQLiteTableGroup validateTables:]
  -[CKSQLiteTableGroup groupID]
  -[CKSQLiteTableGroup setNumberValue:forKey:]
  -[CKSQLiteTableGroup isInvalid]
  -[CKSQLiteTableGroup db]
  -[CKSQLiteTableGroup dealloc]
  -[CKSQLiteTableGroup lastUsed]
  -[CKSQLiteTableGroup updateGroupData:]
  -[CKSQLiteTableGroup .cxx_destruct]
  -[CKSQLiteTableGroup setStringValue:forKey:]
  -[CKSQLiteTableGroup creatingClass]
  -[CKSQLiteTableGroup createTables]
  -[CKSQLiteTableGroup performDataMigration]
  -[CKSQLiteTableGroup setUUIDValue:forKey:]
  -[CKSQLiteTableGroup dateValueForKey:]
  -[CKSQLiteTableGroup setCreatingClass:]
  -[CKSQLiteTableGroup setName:]
  -[CKSQLiteTableGroup invalidateCachedStatements]
  -[CKSQLiteTableGroup numberValueForKey:]
  -[CKSQLiteTableGroup initWithName:]
  -[CKSQLiteTableGroup name]
  -[CKSQLiteTableGroup objectValueForKey:]
  -[CKSQLiteTableGroup finishInitializing:]
  -[CKSQLiteTableGroup dataValueForKey:]
  -[CKSQLiteTableGroup setDataValue:forKey:]
  -[CKSQLiteTableGroup stringValueForKey:]
  -[CKSQLiteTableGroup setDateValue:forKey:]
  -[CKSQLiteTableGroup setObjectValue:forKey:]
  -[CKSQLiteTableGroup groupData]
  -[CKSQLiteTableGroup setGroupData:]
  -[CKSQLiteTableGroup groupWillPurge]
  -[CKSQLiteTableGroup _deleteTables]
  -[CKSQLiteTableGroup updateLastUsedDate]
  -[CKSQLiteTableGroup dbTableNameForLogicalTableName:]
  -[CKSQLiteTableGroup addTable:]
  -[CKSQLiteTableGroup createDBTables]
  -[CKSQLiteTableGroup allTables]
  -[CKSQLiteTableGroup tableWithName:]
  -[CKSQLiteTableGroup migrateDataFromGroup:]
  -[CKSQLiteTableGroup _lockTables:andPerformBlock:]
  -[CKSQLiteTableGroup performGroupTransaction:]
  -[CKSQLiteTableGroup activityDate]
  -[CKSQLiteTableGroup setActivityDate:]
  -[CKSQLiteTableGroup didCreateDatabaseTables]


CKException : NSException
 @property  int errorCode

  // instance methods
  -[CKException errorCode]
  -[CKException error]
  -[CKException initWithCode:format:]
  -[CKException initWithCode:format:args:]
  -[CKException initWithName:format:]
  -[CKException initWithName:format:args:]


CKSQLiteKeyValueTableEntry : NSObject
 @property  NSNumber *scope
 @property  NSString *scopeIdentifier
 @property  NSString *key
 @property  NSNumber *number
 @property  NSString *string
 @property  NSData *data
 @property  NSDate *date
 @property  NSUUID *UUID
 @property  NSObject<NSCoding> *object

  // instance methods
  -[CKSQLiteKeyValueTableEntry scopeIdentifier]
  -[CKSQLiteKeyValueTableEntry number]
  -[CKSQLiteKeyValueTableEntry setScope:]
  -[CKSQLiteKeyValueTableEntry scope]
  -[CKSQLiteKeyValueTableEntry string]
  -[CKSQLiteKeyValueTableEntry setDate:]
  -[CKSQLiteKeyValueTableEntry date]
  -[CKSQLiteKeyValueTableEntry setUUID:]
  -[CKSQLiteKeyValueTableEntry .cxx_destruct]
  -[CKSQLiteKeyValueTableEntry setNumber:]
  -[CKSQLiteKeyValueTableEntry UUID]
  -[CKSQLiteKeyValueTableEntry object]
  -[CKSQLiteKeyValueTableEntry setData:]
  -[CKSQLiteKeyValueTableEntry key]
  -[CKSQLiteKeyValueTableEntry setKey:]
  -[CKSQLiteKeyValueTableEntry setString:]
  -[CKSQLiteKeyValueTableEntry setObject:]
  -[CKSQLiteKeyValueTableEntry data]
  -[CKSQLiteKeyValueTableEntry setScopeIdentifier:]


CKSQLiteKeyValueStore : CKSQLiteDatabaseTable
  // class methods
  +[CKSQLiteKeyValueStore dbProperties]
  +[CKSQLiteKeyValueStore entryClass]

  // instance methods
  -[CKSQLiteKeyValueStore finishInitializing:]
  -[CKSQLiteKeyValueStore purgeOrphanedTableGroupKeys]
  -[CKSQLiteKeyValueStore purgeOrphanedTableKeys]
  -[CKSQLiteKeyValueStore purgeOrphanedKeys]
  -[CKSQLiteKeyValueStore numberValueForKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore setNumberValue:forKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore stringValueForKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore setStringValue:forKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore dataValueForKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore setDataValue:forKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore dateValueForKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore setDateValue:forKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore UUIDValueForKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore setUUIDValue:forKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore objectValueForKey:scope:scopeIdentifier:]
  -[CKSQLiteKeyValueStore setObjectValue:forKey:scope:scopeIdentifier:]


CKSQLiteKeyValueTableGroup : CKSQLiteTableGroup
  // class methods
  +[CKSQLiteKeyValueTableGroup keyValueStoreInDatabase:]

  // instance methods
  -[CKSQLiteKeyValueTableGroup .cxx_destruct]
  -[CKSQLiteKeyValueTableGroup createTables]


CKDCancelToken : NSObject <CKDCancelling>
 @property  @? cancelAction

  // instance methods
  -[CKDCancelToken .cxx_destruct]
  -[CKDCancelToken setCancelAction:]
  -[CKDCancelToken isCancelled]
  -[CKDCancelToken cancelAction]
  -[CKDCancelToken cancel]


CKTuple : NSObject <NSCopying>
  // instance methods
  -[CKTuple copyWithZone:]
  -[CKTuple objectAtIndexedSubscript:]


CKTuple2 : CKTuple
 @property  id v1
 @property  id v2

  // instance methods
  -[CKTuple2 initWithObject1:object2:]
  -[CKTuple2 .cxx_destruct]
  -[CKTuple2 setV2:]
  -[CKTuple2 v2]
  -[CKTuple2 v1]
  -[CKTuple2 setV1:]
  -[CKTuple2 isEqual:]
  -[CKTuple2 objectAtIndexedSubscript:]


CKTuple3 : CKTuple
 @property  id v1
 @property  id v2
 @property  id v3

  // instance methods
  -[CKTuple3 setV3:]
  -[CKTuple3 v3]
  -[CKTuple3 .cxx_destruct]
  -[CKTuple3 setV2:]
  -[CKTuple3 v2]
  -[CKTuple3 v1]
  -[CKTuple3 setV1:]
  -[CKTuple3 initWithObject1:object2:object3:]
  -[CKTuple3 isEqual:]
  -[CKTuple3 objectAtIndexedSubscript:]


CKTuple4 : CKTuple
 @property  id v1
 @property  id v2
 @property  id v3
 @property  id v4

  // instance methods
  -[CKTuple4 setV3:]
  -[CKTuple4 v3]
  -[CKTuple4 .cxx_destruct]
  -[CKTuple4 setV2:]
  -[CKTuple4 v4]
  -[CKTuple4 v2]
  -[CKTuple4 v1]
  -[CKTuple4 setV1:]
  -[CKTuple4 setV4:]
  -[CKTuple4 isEqual:]
  -[CKTuple4 objectAtIndexedSubscript:]
  -[CKTuple4 initWithObject1:object2:object3:object4:]


CKTuple5 : CKTuple
 @property  id v1
 @property  id v2
 @property  id v3
 @property  id v4
 @property  id v5

  // instance methods
  -[CKTuple5 setV3:]
  -[CKTuple5 v3]
  -[CKTuple5 initWithObject1:object2:object3:object4:object5:]
  -[CKTuple5 .cxx_destruct]
  -[CKTuple5 setV2:]
  -[CKTuple5 v5]
  -[CKTuple5 v4]
  -[CKTuple5 setV5:]
  -[CKTuple5 v2]
  -[CKTuple5 v1]
  -[CKTuple5 setV1:]
  -[CKTuple5 setV4:]
  -[CKTuple5 isEqual:]
  -[CKTuple5 objectAtIndexedSubscript:]


CKResult : NSObject
 @property  id successValue
 @property  NSError *error

  // instance methods
  -[CKResult initWithSuccess:]
  -[CKResult error]
  -[CKResult .cxx_destruct]
  -[CKResult isEqual:]
  -[CKResult initWithFailure:]
  -[CKResult successValue]


CKUserDefaults : NSUserDefaults
  // class methods
  +[CKUserDefaults suiteName]
  +[CKUserDefaults performAtomicDefaultsOperation:]
  +[CKUserDefaults CKUserDefaults]


CKFetchRecordZonesOperation : CKDatabaseOperation <CKFetchRecordZonesOperationCallbacks>
 @property  <CKFetchRecordZonesOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchRecordZonesOperationInfo *operationInfo
 @property  NSMutableDictionary *recordZonesByZoneID
 @property  NSMutableDictionary *recordZoneErrors
 @property  BOOL isFetchAllRecordZonesOperation
 @property  BOOL ignorePCSFailures
 @property  NSArray *recordZoneIDs
 @property  @? perRecordZoneCompletionBlock
 @property  @? fetchRecordZonesCompletionBlock

  // class methods
  +[CKFetchRecordZonesOperation applyDaemonCallbackInterfaceTweaks:]
  +[CKFetchRecordZonesOperation fetchAllRecordZonesOperation]

  // instance methods
  -[CKFetchRecordZonesOperation relevantZoneIDs]
  -[CKFetchRecordZonesOperation recordZoneErrors]
  -[CKFetchRecordZonesOperation setRecordZoneIDs:]
  -[CKFetchRecordZonesOperation recordZoneIDs]
  -[CKFetchRecordZonesOperation activityCreate]
  -[CKFetchRecordZonesOperation _finishOnCallbackQueueWithError:]
  -[CKFetchRecordZonesOperation ignorePCSFailures]
  -[CKFetchRecordZonesOperation setFetchRecordZonesCompletionBlock:]
  -[CKFetchRecordZonesOperation setFetchRecordZonesCompletionBlockIVar:]
  -[CKFetchRecordZonesOperation initWithRecordZoneIDs:]
  -[CKFetchRecordZonesOperation .cxx_destruct]
  -[CKFetchRecordZonesOperation hasCKOperationCallbacksSet]
  -[CKFetchRecordZonesOperation handleFetchForRecordZoneID:recordZone:error:]
  -[CKFetchRecordZonesOperation setRecordZonesByZoneID:]
  -[CKFetchRecordZonesOperation fetchRecordZonesCompletionBlock]
  -[CKFetchRecordZonesOperation setIsFetchAllRecordZonesOperation:]
  -[CKFetchRecordZonesOperation perRecordZoneCompletionBlock]
  -[CKFetchRecordZonesOperation isFetchAllRecordZonesOperation]
  -[CKFetchRecordZonesOperation performCKOperation]
  -[CKFetchRecordZonesOperation fillFromOperationInfo:]
  -[CKFetchRecordZonesOperation CKOperationShouldRun:]
  -[CKFetchRecordZonesOperation setRecordZoneErrors:]
  -[CKFetchRecordZonesOperation fillOutOperationInfo:]
  -[CKFetchRecordZonesOperation recordZonesByZoneID]
  -[CKFetchRecordZonesOperation setIgnorePCSFailures:]
  -[CKFetchRecordZonesOperation setPerRecordZoneCompletionBlock:]
  -[CKFetchRecordZonesOperation init]


CKFetchRecordZonesOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordZoneIDs
 @property  BOOL isFetchAllRecordZonesOperation
 @property  BOOL ignorePCSFailures

  // class methods
  +[CKFetchRecordZonesOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchRecordZonesOperationInfo setRecordZoneIDs:]
  -[CKFetchRecordZonesOperationInfo recordZoneIDs]
  -[CKFetchRecordZonesOperationInfo ignorePCSFailures]
  -[CKFetchRecordZonesOperationInfo encodeWithCoder:]
  -[CKFetchRecordZonesOperationInfo .cxx_destruct]
  -[CKFetchRecordZonesOperationInfo setIsFetchAllRecordZonesOperation:]
  -[CKFetchRecordZonesOperationInfo isFetchAllRecordZonesOperation]
  -[CKFetchRecordZonesOperationInfo setIgnorePCSFailures:]
  -[CKFetchRecordZonesOperationInfo initWithCoder:]


CKScheduler : NSObject
 @property  NSNumber *fakeDeviceCount
 @property  NSMutableDictionary *xpcActivitiesByCKActivityIdentifier

  // class methods
  +[CKScheduler activityFromXPCActivity:]
  +[CKScheduler xpcActivityIdentifierForCKActivityIdentifier:]
  +[CKScheduler identifierWithImmediateInvocationForIdentifier:]
  +[CKScheduler sharedScheduler]

  // instance methods
  -[CKScheduler getSuggestedXPCActivityCriteriaForActivity:completionHandler:]
  -[CKScheduler currentPriorityForActivityIdentifier:]
  -[CKScheduler registerActivityIdentifier:handler:]
  -[CKScheduler setFakeDeviceCount:]
  -[CKScheduler registerActivityIdentifier:replaceExistingHandler:handler:]
  -[CKScheduler unregisterHandlerForActivityIdentifier:]
  -[CKScheduler xpcActivitiesByCKActivityIdentifier]
  -[CKScheduler hasPendingActivityWithActivityIdentifier:]
  -[CKScheduler .cxx_destruct]
  -[CKScheduler setXpcActivitiesByCKActivityIdentifier:]
  -[CKScheduler cancelActivityWithIdentifier:]
  -[CKScheduler fakeDeviceCount]
  -[CKScheduler activityForActivityIdentifier:]
  -[CKScheduler xpcActivityForActivityWithIdentifier:]
  -[CKScheduler isXPCActivityPending:]
  -[CKScheduler unregisterActivityIdentifier:]
  -[CKScheduler performAsyncOnQueue:]
  -[CKScheduler submitActivity:]
  -[CKScheduler _init]
  -[CKScheduler init]


CKDiscoverAllUserIdentitiesOperation : CKOperation <CKDiscoverAllUserIdentitiesOperationCallbacks>
 @property  NSMutableDictionary *identityToContactIdentifiers
 @property  <CKDiscoverAllUserIdentitiesOperationCallbacks> *clientOperationCallbackProxy
 @property  CKDiscoverUserIdentitiesOperationInfo *operationInfo
 @property  @? userIdentityDiscoveredBlock
 @property  @? discoverAllUserIdentitiesCompletionBlock

  // class methods
  +[CKDiscoverAllUserIdentitiesOperation operationInfoClass]

  // instance methods
  -[CKDiscoverAllUserIdentitiesOperation activityCreate]
  -[CKDiscoverAllUserIdentitiesOperation _finishOnCallbackQueueWithError:]
  -[CKDiscoverAllUserIdentitiesOperation .cxx_destruct]
  -[CKDiscoverAllUserIdentitiesOperation performCKOperation]
  -[CKDiscoverAllUserIdentitiesOperation CKOperationShouldRun:]
  -[CKDiscoverAllUserIdentitiesOperation init]
  -[CKDiscoverAllUserIdentitiesOperation setUserIdentityDiscoveredBlock:]
  -[CKDiscoverAllUserIdentitiesOperation discoverAllUserIdentitiesCompletionBlock]
  -[CKDiscoverAllUserIdentitiesOperation setDiscoverAllUserIdentitiesCompletionBlock:]
  -[CKDiscoverAllUserIdentitiesOperation handleUserIdentityDiscovery:]
  -[CKDiscoverAllUserIdentitiesOperation userIdentityDiscoveredBlock]
  -[CKDiscoverAllUserIdentitiesOperation identityToContactIdentifiers]
  -[CKDiscoverAllUserIdentitiesOperation setIdentityToContactIdentifiers:]


CKSQLiteGenericTableGroup : CKSQLiteTableGroup
  // class methods
  +[CKSQLiteGenericTableGroup supportsGroupCreation]

  // instance methods
  -[CKSQLiteGenericTableGroup validateTables:]
  -[CKSQLiteGenericTableGroup createTables]


CKZonePCSDiagnosticInformation : NSObject <NSSecureCoding>
 @property  BOOL wasRepaired
 @property  int pcsStatus
 @property  NSString *pcsDiagnosticString
 @property  NSError *pcsError

  // class methods
  +[CKZonePCSDiagnosticInformation supportsSecureCoding]

  // instance methods
  -[CKZonePCSDiagnosticInformation encodeWithCoder:]
  -[CKZonePCSDiagnosticInformation .cxx_destruct]
  -[CKZonePCSDiagnosticInformation initWithCoder:]
  -[CKZonePCSDiagnosticInformation wasRepaired]
  -[CKZonePCSDiagnosticInformation setWasRepaired:]
  -[CKZonePCSDiagnosticInformation pcsStatus]
  -[CKZonePCSDiagnosticInformation setPcsStatus:]
  -[CKZonePCSDiagnosticInformation pcsDiagnosticString]
  -[CKZonePCSDiagnosticInformation setPcsDiagnosticString:]
  -[CKZonePCSDiagnosticInformation pcsError]
  -[CKZonePCSDiagnosticInformation setPcsError:]


CKPCSDiagnosticInformation : NSObject <NSSecureCoding>
 @property  NSString *identityInfo
 @property  NSString *serviceIdentityInfo
 @property  NSMutableDictionary *pcsInfoByZoneID
 @property  NSMutableArray *notFoundZoneIDs

  // class methods
  +[CKPCSDiagnosticInformation supportsSecureCoding]

  // instance methods
  -[CKPCSDiagnosticInformation encodeWithCoder:]
  -[CKPCSDiagnosticInformation .cxx_destruct]
  -[CKPCSDiagnosticInformation init]
  -[CKPCSDiagnosticInformation initWithCoder:]
  -[CKPCSDiagnosticInformation identityInfo]
  -[CKPCSDiagnosticInformation setIdentityInfo:]
  -[CKPCSDiagnosticInformation serviceIdentityInfo]
  -[CKPCSDiagnosticInformation setServiceIdentityInfo:]
  -[CKPCSDiagnosticInformation pcsInfoByZoneID]
  -[CKPCSDiagnosticInformation setPcsInfoByZoneID:]
  -[CKPCSDiagnosticInformation notFoundZoneIDs]
  -[CKPCSDiagnosticInformation setNotFoundZoneIDs:]


CKFetchShareMetadataOperation : CKOperation <CKFetchShareMetadataOperationCallbacks>
 @property  NSMutableDictionary *errorsByURL
 @property  NSMutableSet *packagesToDestroy
 @property  <CKFetchShareMetadataOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchShareMetadataOperationInfo *operationInfo
 @property  NSDictionary *shareInvitationTokensByShareURL
 @property  BOOL overwriteContainerPCSServiceIfManatee
 @property  BOOL skipShareDecryption
 @property  NSArray *shareURLs
 @property  BOOL shouldFetchRootRecord
 @property  NSArray *rootRecordDesiredKeys
 @property  @? perShareMetadataBlock
 @property  @? fetchShareMetadataCompletionBlock

  // class methods
  +[CKFetchShareMetadataOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchShareMetadataOperation activityCreate]
  -[CKFetchShareMetadataOperation _finishOnCallbackQueueWithError:]
  -[CKFetchShareMetadataOperation setPackagesToDestroy:]
  -[CKFetchShareMetadataOperation claimPackagesInRecord:error:]
  -[CKFetchShareMetadataOperation .cxx_destruct]
  -[CKFetchShareMetadataOperation hasCKOperationCallbacksSet]
  -[CKFetchShareMetadataOperation performCKOperation]
  -[CKFetchShareMetadataOperation fillFromOperationInfo:]
  -[CKFetchShareMetadataOperation packagesToDestroy]
  -[CKFetchShareMetadataOperation CKOperationShouldRun:]
  -[CKFetchShareMetadataOperation fillOutOperationInfo:]
  -[CKFetchShareMetadataOperation init]
  -[CKFetchShareMetadataOperation initWithShareURLs:]
  -[CKFetchShareMetadataOperation setFetchShareMetadataCompletionBlock:]
  -[CKFetchShareMetadataOperation setPerShareMetadataBlock:]
  -[CKFetchShareMetadataOperation rootRecordDesiredKeys]
  -[CKFetchShareMetadataOperation setRootRecordDesiredKeys:]
  -[CKFetchShareMetadataOperation perShareMetadataBlock]
  -[CKFetchShareMetadataOperation fetchShareMetadataCompletionBlock]
  -[CKFetchShareMetadataOperation handleShareMetadataFetchForURL:shareMetadata:error:]
  -[CKFetchShareMetadataOperation initWithShareURLs:invitationTokensByShareURL:]
  -[CKFetchShareMetadataOperation setFetchShareMetadataCompletionBlockIVar:]
  -[CKFetchShareMetadataOperation shareURLs]
  -[CKFetchShareMetadataOperation setShareURLs:]
  -[CKFetchShareMetadataOperation shouldFetchRootRecord]
  -[CKFetchShareMetadataOperation setShouldFetchRootRecord:]
  -[CKFetchShareMetadataOperation errorsByURL]
  -[CKFetchShareMetadataOperation setErrorsByURL:]
  -[CKFetchShareMetadataOperation shareInvitationTokensByShareURL]
  -[CKFetchShareMetadataOperation setShareInvitationTokensByShareURL:]
  -[CKFetchShareMetadataOperation overwriteContainerPCSServiceIfManatee]
  -[CKFetchShareMetadataOperation setOverwriteContainerPCSServiceIfManatee:]
  -[CKFetchShareMetadataOperation skipShareDecryption]
  -[CKFetchShareMetadataOperation setSkipShareDecryption:]


CKFetchShareMetadataOperationInfo : CKOperationInfo <NSSecureCoding>
 @property  NSArray *shareURLsToFetch
 @property  BOOL shouldFetchRootRecord
 @property  NSArray *rootRecordDesiredKeys
 @property  NSDictionary *shareInvitationTokensByShareURL
 @property  BOOL overwriteContainerPCSServiceIfManatee
 @property  BOOL skipShareDecryption

  // class methods
  +[CKFetchShareMetadataOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchShareMetadataOperationInfo encodeWithCoder:]
  -[CKFetchShareMetadataOperationInfo .cxx_destruct]
  -[CKFetchShareMetadataOperationInfo initWithCoder:]
  -[CKFetchShareMetadataOperationInfo rootRecordDesiredKeys]
  -[CKFetchShareMetadataOperationInfo setRootRecordDesiredKeys:]
  -[CKFetchShareMetadataOperationInfo shouldFetchRootRecord]
  -[CKFetchShareMetadataOperationInfo setShouldFetchRootRecord:]
  -[CKFetchShareMetadataOperationInfo shareInvitationTokensByShareURL]
  -[CKFetchShareMetadataOperationInfo setShareInvitationTokensByShareURL:]
  -[CKFetchShareMetadataOperationInfo overwriteContainerPCSServiceIfManatee]
  -[CKFetchShareMetadataOperationInfo setOverwriteContainerPCSServiceIfManatee:]
  -[CKFetchShareMetadataOperationInfo skipShareDecryption]
  -[CKFetchShareMetadataOperationInfo setSkipShareDecryption:]
  -[CKFetchShareMetadataOperationInfo shareURLsToFetch]
  -[CKFetchShareMetadataOperationInfo setShareURLsToFetch:]


CKModifyWebSharingOperation : CKDatabaseOperation <CKModifyWebSharingOperationCallbacks>
 @property  <CKModifyWebSharingOperationCallbacks> *clientOperationCallbackProxy
 @property  CKModifyWebSharingOperationInfo *operationInfo
 @property  NSArray *recordIDsToShare
 @property  NSArray *recordIDsToUnshare
 @property  NSMutableDictionary *recordErrors
 @property  NSMutableArray *sharedRecordIDs
 @property  NSMutableArray *unsharedRecordIDs
 @property  NSArray *recordIDsToShareReadWrite
 @property  @? recordSharedBlock
 @property  @? recordUnsharedBlock
 @property  @? webShareRecordsCompletionBlock

  // class methods
  +[CKModifyWebSharingOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKModifyWebSharingOperation activityCreate]
  -[CKModifyWebSharingOperation _finishOnCallbackQueueWithError:]
  -[CKModifyWebSharingOperation setRecordErrors:]
  -[CKModifyWebSharingOperation .cxx_destruct]
  -[CKModifyWebSharingOperation hasCKOperationCallbacksSet]
  -[CKModifyWebSharingOperation recordErrors]
  -[CKModifyWebSharingOperation performCKOperation]
  -[CKModifyWebSharingOperation fillFromOperationInfo:]
  -[CKModifyWebSharingOperation CKOperationShouldRun:]
  -[CKModifyWebSharingOperation fillOutOperationInfo:]
  -[CKModifyWebSharingOperation handleWebSharingInitiationForRecordID:sharingKey:baseSharingToken:error:]
  -[CKModifyWebSharingOperation handleWebSharingRevocationForRecordID:error:]
  -[CKModifyWebSharingOperation initWithRecordIDsToWebShare:recordIDsToUnshare:]
  -[CKModifyWebSharingOperation setRecordSharedBlock:]
  -[CKModifyWebSharingOperation recordSharedBlock]
  -[CKModifyWebSharingOperation setRecordUnsharedBlock:]
  -[CKModifyWebSharingOperation recordUnsharedBlock]
  -[CKModifyWebSharingOperation setWebShareRecordsCompletionBlock:]
  -[CKModifyWebSharingOperation webShareRecordsCompletionBlock]
  -[CKModifyWebSharingOperation recordIDsToShareReadWrite]
  -[CKModifyWebSharingOperation setRecordIDsToShareReadWrite:]
  -[CKModifyWebSharingOperation recordIDsToShare]
  -[CKModifyWebSharingOperation setRecordIDsToShare:]
  -[CKModifyWebSharingOperation recordIDsToUnshare]
  -[CKModifyWebSharingOperation setRecordIDsToUnshare:]
  -[CKModifyWebSharingOperation sharedRecordIDs]
  -[CKModifyWebSharingOperation setSharedRecordIDs:]
  -[CKModifyWebSharingOperation unsharedRecordIDs]
  -[CKModifyWebSharingOperation setUnsharedRecordIDs:]


CKModifyWebSharingOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordIDsToShare
 @property  NSArray *recordIDsToUnshare
 @property  NSArray *recordIDsToShareReadWrite

  // class methods
  +[CKModifyWebSharingOperationInfo supportsSecureCoding]

  // instance methods
  -[CKModifyWebSharingOperationInfo encodeWithCoder:]
  -[CKModifyWebSharingOperationInfo .cxx_destruct]
  -[CKModifyWebSharingOperationInfo initWithCoder:]
  -[CKModifyWebSharingOperationInfo recordIDsToShareReadWrite]
  -[CKModifyWebSharingOperationInfo setRecordIDsToShareReadWrite:]
  -[CKModifyWebSharingOperationInfo recordIDsToShare]
  -[CKModifyWebSharingOperationInfo setRecordIDsToShare:]
  -[CKModifyWebSharingOperationInfo recordIDsToUnshare]
  -[CKModifyWebSharingOperationInfo setRecordIDsToUnshare:]


CKContainerID : NSObject <NSSecureCoding, NSCopying>
 @property  long long specialContainerType
 @property  BOOL isTestContainer
 @property  BOOL isAppleInternal
 @property  NSString *containerIdentifier
 @property  long long environment

  // class methods
  +[CKContainerID supportsSecureCoding]

  // instance methods
  -[CKContainerID initWithSqliteRepresentation:]
  -[CKContainerID ckShortDescription]
  -[CKContainerID sqliteRepresentation]
  -[CKContainerID representativeDataclass]
  -[CKContainerID encodeWithCoder:]
  -[CKContainerID isAppleInternal]
  -[CKContainerID setIsAppleInternal:]
  -[CKContainerID containerIdentifier]
  -[CKContainerID .cxx_destruct]
  -[CKContainerID initWithContainerIdentifier:environment:]
  -[CKContainerID setIsTestContainer:]
  -[CKContainerID isTestContainer]
  -[CKContainerID ck_bindInStatement:atIndex:]
  -[CKContainerID setSpecialContainerType:]
  -[CKContainerID copyWithZone:]
  -[CKContainerID specialContainerType]
  -[CKContainerID environment]
  -[CKContainerID isEqual:]
  -[CKContainerID initWithCoder:]
  -[CKContainerID CKPropertiesDescription]


CKSerializeRecordModificationsOperation : CKDatabaseOperation <CKSerializeRecordModificationsOperationCallbacks>
 @property  NSData *serializedModifications
 @property  <CKSerializeRecordModificationsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKSerializeRecordModificationsOperationInfo *operationInfo
 @property  NSArray *recordsToSave
 @property  NSArray *recordIDsToDelete
 @property  @? serializeCompletionBlock

  // instance methods
  -[CKSerializeRecordModificationsOperation recordIDsToDelete]
  -[CKSerializeRecordModificationsOperation setRecordIDsToDelete:]
  -[CKSerializeRecordModificationsOperation setRecordsToSave:]
  -[CKSerializeRecordModificationsOperation recordsToSave]
  -[CKSerializeRecordModificationsOperation activityCreate]
  -[CKSerializeRecordModificationsOperation _finishOnCallbackQueueWithError:]
  -[CKSerializeRecordModificationsOperation initWithRecordsToSave:recordIDsToDelete:]
  -[CKSerializeRecordModificationsOperation .cxx_destruct]
  -[CKSerializeRecordModificationsOperation hasCKOperationCallbacksSet]
  -[CKSerializeRecordModificationsOperation performCKOperation]
  -[CKSerializeRecordModificationsOperation fillFromOperationInfo:]
  -[CKSerializeRecordModificationsOperation CKOperationShouldRun:]
  -[CKSerializeRecordModificationsOperation fillOutOperationInfo:]
  -[CKSerializeRecordModificationsOperation init]
  -[CKSerializeRecordModificationsOperation serializedModifications]
  -[CKSerializeRecordModificationsOperation setSerializedModifications:]
  -[CKSerializeRecordModificationsOperation handleSerialization:error:]
  -[CKSerializeRecordModificationsOperation setSerializeCompletionBlock:]
  -[CKSerializeRecordModificationsOperation serializeCompletionBlock]


CKSerializeRecordModificationsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordsToSave
 @property  NSArray *recordIDsToDelete

  // class methods
  +[CKSerializeRecordModificationsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKSerializeRecordModificationsOperationInfo recordIDsToDelete]
  -[CKSerializeRecordModificationsOperationInfo setRecordIDsToDelete:]
  -[CKSerializeRecordModificationsOperationInfo setRecordsToSave:]
  -[CKSerializeRecordModificationsOperationInfo recordsToSave]
  -[CKSerializeRecordModificationsOperationInfo encodeWithCoder:]
  -[CKSerializeRecordModificationsOperationInfo .cxx_destruct]
  -[CKSerializeRecordModificationsOperationInfo init]
  -[CKSerializeRecordModificationsOperationInfo initWithCoder:]


CKCodeProto2ProtectedEnvelope : PBCodable <NSCopying>
 @property  BOOL hasEncrypted
 @property  NSData *encrypted
 @property  BOOL hasValue
 @property  CKCodeProto2Any *value
 @property  BOOL hasContents
 @property  int contents

  // instance methods
  -[CKCodeProto2ProtectedEnvelope encrypted]
  -[CKCodeProto2ProtectedEnvelope copyTo:]
  -[CKCodeProto2ProtectedEnvelope setEncrypted:]
  -[CKCodeProto2ProtectedEnvelope contents]
  -[CKCodeProto2ProtectedEnvelope .cxx_destruct]
  -[CKCodeProto2ProtectedEnvelope hasValue]
  -[CKCodeProto2ProtectedEnvelope setContents:]
  -[CKCodeProto2ProtectedEnvelope mergeFrom:]
  -[CKCodeProto2ProtectedEnvelope hasContents]
  -[CKCodeProto2ProtectedEnvelope setValue:]
  -[CKCodeProto2ProtectedEnvelope dictionaryRepresentation]
  -[CKCodeProto2ProtectedEnvelope copyWithZone:]
  -[CKCodeProto2ProtectedEnvelope value]
  -[CKCodeProto2ProtectedEnvelope readFrom:]
  -[CKCodeProto2ProtectedEnvelope writeTo:]
  -[CKCodeProto2ProtectedEnvelope isEqual:]
  -[CKCodeProto2ProtectedEnvelope contentsAsString:]
  -[CKCodeProto2ProtectedEnvelope StringAsContents:]
  -[CKCodeProto2ProtectedEnvelope hasEncrypted]
  -[CKCodeProto2ProtectedEnvelope setHasContents:]
  -[CKCodeProto2ProtectedEnvelope clearOneofValuesForContents]


CKLegacyPredicateValidator : CKPredicateValidator
  // instance methods
  -[CKLegacyPredicateValidator validate:error:]
  -[CKLegacyPredicateValidator validateContainsAnyPredicate:]
  -[CKLegacyPredicateValidator validateContainsAllInPredicate:]
  -[CKLegacyPredicateValidator validateInPredicate:]
  -[CKLegacyPredicateValidator validateCompoundPredicate:]
  -[CKLegacyPredicateValidator validateComparisonPredicate:]
  -[CKLegacyPredicateValidator validateBeginsWithPredicate:]
  -[CKLegacyPredicateValidator validate:]
  -[CKLegacyPredicateValidator validateContainsPredicate:]
  -[CKLegacyPredicateValidator _comparisonOptionForString:]
  -[CKLegacyPredicateValidator validateFullTextSearchPredicate:]
  -[CKLegacyPredicateValidator validateBasicOperatorPredicate:]
  -[CKLegacyPredicateValidator validateBetweenPredicate:]
  -[CKLegacyPredicateValidator validateNearPredicate:]


CKMultiValueMergeableDeltaRegister : CKMultiValueRegister <CKVersionedMergeable>
 @property  NSMutableDictionary *timestampToContents
 @property  NSData *salt
 @property  CKMultiValueMergeableDeltaRegisterState *persistedState
 @property  NSArray *contents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKMultiValueMergeableDeltaRegister CKDescribePropertiesUsing:]
  -[CKMultiValueMergeableDeltaRegister persistedState]
  -[CKMultiValueMergeableDeltaRegister .cxx_destruct]
  -[CKMultiValueMergeableDeltaRegister setContents:]
  -[CKMultiValueMergeableDeltaRegister salt]
  -[CKMultiValueMergeableDeltaRegister initWithIdentifier:vector:contents:error:]
  -[CKMultiValueMergeableDeltaRegister siteIdentifier]
  -[CKMultiValueMergeableDeltaRegister mergeDeltas:error:]
  -[CKMultiValueMergeableDeltaRegister mergeableDeltasForMetadata:error:]
  -[CKMultiValueMergeableDeltaRegister stateVector]
  -[CKMultiValueMergeableDeltaRegister deltaDeliveryRequirements]
  -[CKMultiValueMergeableDeltaRegister initWithPersistedState:contents:error:]
  -[CKMultiValueMergeableDeltaRegister installationIdentifier]
  -[CKMultiValueMergeableDeltaRegister modifierLimitForInstallationIdentifierCheck]
  -[CKMultiValueMergeableDeltaRegister checkElementType:error:]


CKMultiValueMergeableDeltaRegisterState : NSObject <NSSecureCoding, NSCopying>
 @property  NSUUID *identifier
 @property  CKDistributedTimestampStateVector *vector
 @property  NSData *salt

  // class methods
  +[CKMultiValueMergeableDeltaRegisterState supportsSecureCoding]
  +[CKMultiValueMergeableDeltaRegisterState newSalt]

  // instance methods
  -[CKMultiValueMergeableDeltaRegisterState identifier]
  -[CKMultiValueMergeableDeltaRegisterState encodeWithCoder:]
  -[CKMultiValueMergeableDeltaRegisterState .cxx_destruct]
  -[CKMultiValueMergeableDeltaRegisterState salt]
  -[CKMultiValueMergeableDeltaRegisterState copyWithZone:]
  -[CKMultiValueMergeableDeltaRegisterState isEqual:]
  -[CKMultiValueMergeableDeltaRegisterState init]
  -[CKMultiValueMergeableDeltaRegisterState initWithCoder:]
  -[CKMultiValueMergeableDeltaRegisterState vector]
  -[CKMultiValueMergeableDeltaRegisterState initWithIdentifier:vector:salt:]


CKSQLite : NSObject <CKSQLiteDB, CKSQLiteDBConveniences>
 @property  ^{sqlite3=} db
 @property  unsigned long openCount
 @property  BOOL invalid
 @property  NSString *path
 @property  NSString *schema
 @property  NSString *schemaVersion
 @property  NSString *objectClassPrefix
 @property  int userVersion
 @property  long long synchronousMode
 @property  BOOL isOpen
 @property  BOOL isCorrupt
 @property  BOOL hasMigrated
 @property  BOOL shouldVacuum
 @property  BOOL traced
 @property  @? invalidationHandler
 @property  <CKSQLiteDelegate> *delegate

  // class methods
  +[CKSQLite equalityClauseAndBindingsForDict:]

  // instance methods
  -[CKSQLite changes]
  -[CKSQLite schema]
  -[CKSQLite vacuum]
  -[CKSQLite openWithError:]
  -[CKSQLite setInvalidationHandler:]
  -[CKSQLite removePropertyForKey:]
  -[CKSQLite synchronousMode]
  -[CKSQLite propertyForKey:]
  -[CKSQLite datePropertyForKey:]
  -[CKSQLite hasMigrated]
  -[CKSQLite remove]
  -[CKSQLite setDb:]
  -[CKSQLite sqlErrorWithMessage:]
  -[CKSQLite setDelegate:]
  -[CKSQLite setOpenCount:]
  -[CKSQLite path]
  -[CKSQLite willCreateDatabase]
  -[CKSQLite delegate]
  -[CKSQLite schemaVersion]
  -[CKSQLite db]
  -[CKSQLite setInvalid:]
  -[CKSQLite dealloc]
  -[CKSQLite close]
  -[CKSQLite setSynchronousMode:]
  -[CKSQLite setProperty:forKey:]
  -[CKSQLite .cxx_destruct]
  -[CKSQLite creationDate]
  -[CKSQLite openCount]
  -[CKSQLite setUserVersion:]
  -[CKSQLite handleError:]
  -[CKSQLite executeSQL:]
  -[CKSQLite isCorrupt]
  -[CKSQLite invalidationHandler]
  -[CKSQLite userVersion]
  -[CKSQLite lastInsertRowID]
  -[CKSQLite setDateProperty:forKey:]
  -[CKSQLite isOpen]
  -[CKSQLite invalid]
  -[CKSQLite executeSQL:arguments:]
  -[CKSQLite usingStatementForSQL:performBlock:]
  -[CKSQLite select:from:where:bindings:orderBy:limit:block:]
  -[CKSQLite selectFrom:where:bindings:orderBy:limit:block:]
  -[CKSQLite select:from:where:bindings:orderBy:limit:offset:block:]
  -[CKSQLite update:set:where:bindings:limit:]
  -[CKSQLite insertOrReplaceInto:values:]
  -[CKSQLite upsertInto:values:onConflict:doUpdate:where:]
  -[CKSQLite deleteFrom:where:bindings:]
  -[CKSQLite deleteFrom:matchingValues:]
  -[CKSQLite insertOrReplaceObject:]
  -[CKSQLite deleteExactObject:]
  -[CKSQLite selectObjectOfClass:where:bindings:]
  -[CKSQLite updateAllObjectsOfClass:set:where:bindings:]
  -[CKSQLite selectAllObjectsOfClass:where:bindings:orderBy:limit:block:]
  -[CKSQLite allTableNames]
  -[CKSQLite columnNamesForTable:]
  -[CKSQLite select:from:]
  -[CKSQLite select:from:where:bindings:]
  -[CKSQLite select:from:where:bindings:orderBy:]
  -[CKSQLite select:from:where:bindings:orderBy:limit:]
  -[CKSQLite selectAllFrom:where:bindings:]
  -[CKSQLite selectCountFrom:where:bindings:]
  -[CKSQLite deleteAllObjectsOfClass:where:bindings:]
  -[CKSQLite selectAllObjectsOfClass:]
  -[CKSQLite selectAllObjectsOfClass:where:bindings:]
  -[CKSQLite selectAllObjectsOfClass:where:bindings:limit:]
  -[CKSQLite initWithPath:schema:]
  -[CKSQLite assertInOperation:]
  -[CKSQLite markCorrupt]
  -[CKSQLite _performDatabaseOperation_locked:withErrorHandler:]
  -[CKSQLite _recursiveOperationLock:]
  -[CKSQLite performDatabaseOperation:withErrorHandler:]
  -[CKSQLite performDatabaseOperation:]
  -[CKSQLite handleDatabaseError:args:]
  -[CKSQLite handleDatabaseError:]
  -[CKSQLite _prepareDatabase]
  -[CKSQLite _forceClosed_locked]
  -[CKSQLite _forceClosed_unlocked]
  -[CKSQLite setTraced:]
  -[CKSQLite _dropAllTables]
  -[CKSQLite selectFrom:where:bindings:limit:]
  -[CKSQLite _tableNameForClass:]
  -[CKSQLite _boxedPropertyDictionary:forObjCClass:]
  -[CKSQLite _boxedValue:forObjcCProperty:]
  -[CKSQLite dbUserVersion]
  -[CKSQLite objectClassPrefix]
  -[CKSQLite setObjectClassPrefix:]
  -[CKSQLite shouldVacuum]
  -[CKSQLite setShouldVacuum:]
  -[CKSQLite traced]


CKPublishAssetsOperation : CKDatabaseOperation <CKPublishAssetsOperationCallbacks>
 @property  NSArray *recordIDs
 @property  NSMutableDictionary *perItemErrorsByRecordID
 @property  <CKPublishAssetsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKPublishAssetsOperationInfo *operationInfo
 @property  NSDictionary *fileNamesByAssetFieldNames
 @property  unsigned long requestedTTL
 @property  unsigned long URLOptions
 @property  @? assetPublishedBlock
 @property  @? publishAssetCompletionBlock

  // class methods
  +[CKPublishAssetsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKPublishAssetsOperation setRequestedTTL:]
  -[CKPublishAssetsOperation setURLOptions:]
  -[CKPublishAssetsOperation requestedTTL]
  -[CKPublishAssetsOperation setRecordIDs:]
  -[CKPublishAssetsOperation activityCreate]
  -[CKPublishAssetsOperation recordIDs]
  -[CKPublishAssetsOperation _finishOnCallbackQueueWithError:]
  -[CKPublishAssetsOperation URLOptions]
  -[CKPublishAssetsOperation .cxx_destruct]
  -[CKPublishAssetsOperation hasCKOperationCallbacksSet]
  -[CKPublishAssetsOperation performCKOperation]
  -[CKPublishAssetsOperation fillFromOperationInfo:]
  -[CKPublishAssetsOperation CKOperationShouldRun:]
  -[CKPublishAssetsOperation initWithRecordIDs:]
  -[CKPublishAssetsOperation fillOutOperationInfo:]
  -[CKPublishAssetsOperation perItemErrorsByRecordID]
  -[CKPublishAssetsOperation setPerItemErrorsByRecordID:]
  -[CKPublishAssetsOperation handleAssetPublishCompletionForRecordID:publishedAsset:recordKey:error:]
  -[CKPublishAssetsOperation setAssetPublishedBlock:]
  -[CKPublishAssetsOperation assetPublishedBlock]
  -[CKPublishAssetsOperation setPublishAssetCompletionBlock:]
  -[CKPublishAssetsOperation publishAssetCompletionBlock]
  -[CKPublishAssetsOperation fileNamesByAssetFieldNames]
  -[CKPublishAssetsOperation setFileNamesByAssetFieldNames:]


CKPublishAssetsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordIDs
 @property  NSDictionary *fileNamesByAssetFieldNames
 @property  unsigned long requestedTTL
 @property  unsigned long URLOptions

  // class methods
  +[CKPublishAssetsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKPublishAssetsOperationInfo setRequestedTTL:]
  -[CKPublishAssetsOperationInfo setURLOptions:]
  -[CKPublishAssetsOperationInfo requestedTTL]
  -[CKPublishAssetsOperationInfo setRecordIDs:]
  -[CKPublishAssetsOperationInfo recordIDs]
  -[CKPublishAssetsOperationInfo URLOptions]
  -[CKPublishAssetsOperationInfo encodeWithCoder:]
  -[CKPublishAssetsOperationInfo .cxx_destruct]
  -[CKPublishAssetsOperationInfo initWithCoder:]
  -[CKPublishAssetsOperationInfo fileNamesByAssetFieldNames]
  -[CKPublishAssetsOperationInfo setFileNamesByAssetFieldNames:]


CKAccountOverrideInfo : NSObject <CKSQLiteItem, NSCopying, NSSecureCoding>
 @property  NSString *accountID
 @property  NSString *altDSID
 @property  NSString *email
 @property  NSString *password
 @property  NSString *secondEmail
 @property  NSDictionary *accountPropertyOverrides
 @property  NSDictionary *overridesByDataclass
 @property  NSString *uniqueID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAccountOverrideInfo supportsSecureCoding]
  +[CKAccountOverrideInfo liveAccount]
  +[CKAccountOverrideInfo anonymousAccount]

  // instance methods
  -[CKAccountOverrideInfo initWithSqliteRepresentation:]
  -[CKAccountOverrideInfo altDSID]
  -[CKAccountOverrideInfo setAltDSID:]
  -[CKAccountOverrideInfo accountID]
  -[CKAccountOverrideInfo overridesByDataclass]
  -[CKAccountOverrideInfo setOverridesByDataclass:]
  -[CKAccountOverrideInfo sqliteRepresentation]
  -[CKAccountOverrideInfo uniqueID]
  -[CKAccountOverrideInfo encodeWithCoder:]
  -[CKAccountOverrideInfo setAccountID:]
  -[CKAccountOverrideInfo setAccountPropertyOverrides:]
  -[CKAccountOverrideInfo _initWithEmail:password:]
  -[CKAccountOverrideInfo .cxx_destruct]
  -[CKAccountOverrideInfo accountPropertyOverrides]
  -[CKAccountOverrideInfo email]
  -[CKAccountOverrideInfo setSecondEmail:]
  -[CKAccountOverrideInfo password]
  -[CKAccountOverrideInfo copyWithZone:]
  -[CKAccountOverrideInfo initWithEmail:password:]
  -[CKAccountOverrideInfo secondEmail]
  -[CKAccountOverrideInfo initWithAltDSID:]
  -[CKAccountOverrideInfo initWithAccountID:]
  -[CKAccountOverrideInfo isEqual:]
  -[CKAccountOverrideInfo initWithCoder:]
  -[CKAccountOverrideInfo CKPropertiesDescription]


CKUserIdentity : NSObject <CKPropertiesDescription, NSSecureCoding, NSCopying>
 @property  CKRecordID *userRecordID
 @property  BOOL hasiCloudAccount
 @property  BOOL isCached
 @property  NSData *publicSharingKey
 @property  unsigned long publicKeyVersion
 @property  NSData *outOfNetworkPrivateKey
 @property  NSData *encryptedPersonalInfo
 @property  NSArray *contactIdentifiers
 @property  NSString *firstName
 @property  NSString *lastName
 @property  CKUserIdentityLookupInfo *lookupInfo
 @property  NSPersonNameComponents *nameComponents
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKUserIdentity supportsSecureCoding]

  // instance methods
  -[CKUserIdentity CKDescribePropertiesUsing:]
  -[CKUserIdentity firstName]
  -[CKUserIdentity setNameComponents:]
  -[CKUserIdentity nameComponents]
  -[CKUserIdentity lastName]
  -[CKUserIdentity setUserRecordID:]
  -[CKUserIdentity encodeWithCoder:]
  -[CKUserIdentity userRecordID]
  -[CKUserIdentity .cxx_destruct]
  -[CKUserIdentity setContactIdentifiers:]
  -[CKUserIdentity publicKeyVersion]
  -[CKUserIdentity contactIdentifiers]
  -[CKUserIdentity copyWithZone:]
  -[CKUserIdentity redactedDescription]
  -[CKUserIdentity setHasiCloudAccount:]
  -[CKUserIdentity hasiCloudAccount]
  -[CKUserIdentity _init]
  -[CKUserIdentity isEqual:]
  -[CKUserIdentity initWithCoder:]
  -[CKUserIdentity initWithUserRecordID:]
  -[CKUserIdentity setLookupInfo:]
  -[CKUserIdentity isOutOfNetwork]
  -[CKUserIdentity isEquivalentToUserIdentity:]
  -[CKUserIdentity isEquivalentToUserIdentityOrPublicKey:]
  -[CKUserIdentity lookupInfo]
  -[CKUserIdentity isCached]
  -[CKUserIdentity setIsCached:]
  -[CKUserIdentity publicSharingKey]
  -[CKUserIdentity setPublicSharingKey:]
  -[CKUserIdentity setPublicKeyVersion:]
  -[CKUserIdentity outOfNetworkPrivateKey]
  -[CKUserIdentity setOutOfNetworkPrivateKey:]
  -[CKUserIdentity encryptedPersonalInfo]
  -[CKUserIdentity setEncryptedPersonalInfo:]


CKSyncEngine : NSObject <CKPropertiesDescription>
 @property  CKDatabase *database
 @property  CKSyncEngineMetadata *metadata
 @property  CKNotificationListener *notificationListener
 @property  NSOperationQueue *operationQueue
 @property  NSString *apsMachServiceName
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  unsigned long maxRecordCountPerBatch
 @property  unsigned long maxZoneCountPerBatch
 @property  BOOL allowMetadataCallbackDeferral
 @property  NSObject<OS_xpc_object> *xpcActivityCriteriaOverrides
 @property  BOOL waitingForIdentityUpdate
 @property  BOOL waitingForHSA2
 @property  long long lastKnownAccountStatus
 @property  long long priority
 @property  NSString *databaseSubscriptionIDOverride
 @property  BOOL continueModifyingPendingChangesAfterFailure
 @property  BOOL allowFetchAndModifyConcurrently
 @property  NSDate *earliestStartDateForSchedulerActivities
 @property  BOOL useEarliestStartDateForSchedulerActivitiesInPast
 @property  BOOL skipRetryOnOperationError
 @property  BOOL automaticSyncingEnabled
 @property  BOOL useOpportunisticPushTopic
 @property  BOOL needsToReloadAccount
 @property  <CKSyncEngineDataSource> *dataSource
 @property  NSArray *recordIDsToSave
 @property  NSArray *recordIDsToDelete
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSyncEngine shouldDeferAfterError:]
  +[CKSyncEngine syncActivityIdentifierInDatabase:ignoringSystemConditions:]
  +[CKSyncEngine earliestStartDateAfterError:]
  +[CKSyncEngine saveSubscriptionActivityIdentifierInDatabase:ignoringSystemConditions:]
  +[CKSyncEngine unregisterActivitiesWithDatabase:ignoringSystemConditions:]
  +[CKSyncEngine setFastErrorRetry:]
  +[CKSyncEngine fastErrorRetry]

  // instance methods
  -[CKSyncEngine recordIDsToDelete]
  -[CKSyncEngine recordIDsToSave]
  -[CKSyncEngine apsMachServiceName]
  -[CKSyncEngine CKDescribePropertiesUsing:]
  -[CKSyncEngine maxZoneCountPerBatch]
  -[CKSyncEngine allowFetchAndModifyConcurrently]
  -[CKSyncEngine isAutomaticSyncingEnabled]
  -[CKSyncEngine zoneIDsToDeleteInZoneIDs:]
  -[CKSyncEngine databaseSubscriptionIDOverride]
  -[CKSyncEngine setMaxZoneCountPerBatch:]
  -[CKSyncEngine setAllowFetchAndModifyConcurrently:]
  -[CKSyncEngine setApsMachServiceName:]
  -[CKSyncEngine continueModifyingPendingChangesAfterFailure]
  -[CKSyncEngine setPriority:]
  -[CKSyncEngine setContinueModifyingPendingChangesAfterFailure:]
  -[CKSyncEngine setDatabaseSubscriptionIDOverride:]
  -[CKSyncEngine xpcActivityCriteriaOverrides]
  -[CKSyncEngine setAutomaticSyncingEnabled:]
  -[CKSyncEngine setXpcActivityCriteriaOverrides:]
  -[CKSyncEngine maxRecordCountPerBatch]
  -[CKSyncEngine setWaitingForHSA2:]
  -[CKSyncEngine dataSource]
  -[CKSyncEngine _adopterVisibleFetchChangesErrorForZoneID:error:]
  -[CKSyncEngine databaseSubscription]
  -[CKSyncEngine nextBatchOfRecordsToModifyWithCustomBatchingInZoneIDs:]
  -[CKSyncEngine setCallbackQueue:]
  -[CKSyncEngine setNeedsToFetchChanges]
  -[CKSyncEngine removeRecordIDsToSave:recordIDsToDelete:]
  -[CKSyncEngine useOpportunisticPushTopic]
  -[CKSyncEngine operationQueue]
  -[CKSyncEngine setOperationQueue:]
  -[CKSyncEngine unregisterActivities]
  -[CKSyncEngine modifyPendingChangesInZoneIDs:completionHandler:]
  -[CKSyncEngine setDatabase:]
  -[CKSyncEngine callbackQueue]
  -[CKSyncEngine earliestStartDateForSchedulerActivities]
  -[CKSyncEngine setUseOpportunisticPushTopic:]
  -[CKSyncEngine useEarliestStartDateForSchedulerActivitiesInPast]
  -[CKSyncEngine setUseEarliestStartDateForSchedulerActivitiesInPast:]
  -[CKSyncEngine dealloc]
  -[CKSyncEngine allowFetchAndModifyConcurrentlyForContainerIdentifier:]
  -[CKSyncEngine fetchChangesForZoneIDs:group:ifNecessary:completionHandler:]
  -[CKSyncEngine fetchChangesForZoneIDs:completionHandler:]
  -[CKSyncEngine databaseSubscriptionWithID:]
  -[CKSyncEngine .cxx_destruct]
  -[CKSyncEngine cancelPendingOperationsWithCompletionHandler:]
  -[CKSyncEngine identityUpdateNotification:]
  -[CKSyncEngine setLastKnownAccountStatus:]
  -[CKSyncEngine _fetchChangesForZoneIDs:ifNecessary:operationGroup:completionHandler:]
  -[CKSyncEngine didReceiveDatabaseNotification:]
  -[CKSyncEngine hasPendingModifications]
  -[CKSyncEngine hasSchedulerActivityWithIdentifier:]
  -[CKSyncEngine setAllowMetadataCallbackDeferral:]
  -[CKSyncEngine _isFetchChangesErrorAdopterVisible:]
  -[CKSyncEngine addRecordIDsToSave:recordIDsToDelete:]
  -[CKSyncEngine skipRetryOnOperationError]
  -[CKSyncEngine setEarliestStartDateForSchedulerActivities:]
  -[CKSyncEngine removeRecordZonesToSave:recordZoneIDsToDelete:]
  -[CKSyncEngine allowMetadataCallbackDeferral]
  -[CKSyncEngine isWaitingForHSA2]
  -[CKSyncEngine modifyPendingChangesInZoneIDs:group:completionHandler:]
  -[CKSyncEngine setMetadata:]
  -[CKSyncEngine numberOfModifyPendingRecordsOperations]
  -[CKSyncEngine setNotificationListener:]
  -[CKSyncEngine modifyPendingChangesWithCompletionHandler:]
  -[CKSyncEngine fetchChangesForZoneIDs:group:completionHandler:]
  -[CKSyncEngine nextBatchOfRecordsToModifyInZoneIDs:]
  -[CKSyncEngine _updateDataSourceForFailedToFetchChangesForRecordZoneID:error:]
  -[CKSyncEngine defaultDatabaseSubscriptionID]
  -[CKSyncEngine networkAttributionBundleIDForZoneIDs:recordIDs:completionHandler:]
  -[CKSyncEngine database]
  -[CKSyncEngine existingOperationToFetchChangesForZoneIDs:group:includingExecutingOperations:]
  -[CKSyncEngine performSyncActivity:completionHandler:]
  -[CKSyncEngine initWithConfiguration:]
  -[CKSyncEngine submitActivityIfNecessaryWithIdentifier:earliestStartDate:priority:userRequestedBackupTask:relatedApplicationBundleIdentifiers:]
  -[CKSyncEngine priority]
  -[CKSyncEngine setHasPendingModifications]
  -[CKSyncEngine saveSubscriptionIfNecessaryWithCompletionHandler:]
  -[CKSyncEngine userRequestedBackupActivityIdentifier]
  -[CKSyncEngine existingOperationToModifyPendingChangesForZoneIDs:group:includingExecutingOperations:]
  -[CKSyncEngine setNeedsToReloadAccount:]
  -[CKSyncEngine addRecordZonesToSave:recordZoneIDsToDelete:]
  -[CKSyncEngine isWaitingForIdentityUpdate]
  -[CKSyncEngine saveSubscriptionActivityIdentifier]
  -[CKSyncEngine metadata]
  -[CKSyncEngine fetchChangesWithCompletionHandler:]
  -[CKSyncEngine setWaitingForIdentityUpdate:]
  -[CKSyncEngine redactedDescription]
  -[CKSyncEngine zoneIDsToSaveInZoneIDs:]
  -[CKSyncEngine updateMetadataAndNotifyDatasourceIfNecessaryForUserRecordID:]
  -[CKSyncEngine needsToFetchChangesForZoneIDs:]
  -[CKSyncEngine notificationListener]
  -[CKSyncEngine relatedApplicationBundleIdentifiersForZoneIDs:recordIDs:completionHandler:]
  -[CKSyncEngine defaultDatabaseSubscription]
  -[CKSyncEngine lastKnownAccountStatus]
  -[CKSyncEngine setSkipRetryOnOperationError:]
  -[CKSyncEngine setMaxRecordCountPerBatch:]
  -[CKSyncEngine accountChangedNotification:]
  -[CKSyncEngine init]
  -[CKSyncEngine needsToReloadAccount]
  -[CKSyncEngine syncActivityIdentifier]


CKFetchDatabaseChangesOperation : CKDatabaseOperation <CKFetchDatabaseChangesOperationCallbacks>
 @property  CKServerChangeToken *serverChangeToken
 @property  long long status
 @property  <CKFetchDatabaseChangesOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchDatabaseChangesOperationInfo *operationInfo
 @property  CKServerChangeToken *previousServerChangeToken
 @property  unsigned long resultsLimit
 @property  BOOL fetchAllChanges
 @property  @? recordZoneWithIDChangedBlock
 @property  @? recordZoneWithIDWasDeletedBlock
 @property  @? recordZoneWithIDWasPurgedBlock
 @property  @? recordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock
 @property  @? changeTokenUpdatedBlock
 @property  @? fetchDatabaseChangesCompletionBlock

  // class methods
  +[CKFetchDatabaseChangesOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchDatabaseChangesOperation fetchAllChanges]
  -[CKFetchDatabaseChangesOperation recordZoneWithIDWasPurgedBlock]
  -[CKFetchDatabaseChangesOperation setChangeTokenUpdatedBlock:]
  -[CKFetchDatabaseChangesOperation setRecordZoneWithIDWasDeletedBlock:]
  -[CKFetchDatabaseChangesOperation changeTokenUpdatedBlock]
  -[CKFetchDatabaseChangesOperation setRecordZoneWithIDWasPurgedBlock:]
  -[CKFetchDatabaseChangesOperation setFetchAllChanges:]
  -[CKFetchDatabaseChangesOperation activityCreate]
  -[CKFetchDatabaseChangesOperation _finishOnCallbackQueueWithError:]
  -[CKFetchDatabaseChangesOperation setRecordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock:]
  -[CKFetchDatabaseChangesOperation resultsLimit]
  -[CKFetchDatabaseChangesOperation setFetchDatabaseChangesCompletionBlock:]
  -[CKFetchDatabaseChangesOperation recordZoneWithIDChangedBlock]
  -[CKFetchDatabaseChangesOperation handleChangeForRecordZoneID:]
  -[CKFetchDatabaseChangesOperation status]
  -[CKFetchDatabaseChangesOperation setStatus:]
  -[CKFetchDatabaseChangesOperation .cxx_destruct]
  -[CKFetchDatabaseChangesOperation handlePurgeForRecordZoneID:]
  -[CKFetchDatabaseChangesOperation serverChangeToken]
  -[CKFetchDatabaseChangesOperation hasCKOperationCallbacksSet]
  -[CKFetchDatabaseChangesOperation recordZoneWithIDWasDeletedBlock]
  -[CKFetchDatabaseChangesOperation setPreviousServerChangeToken:]
  -[CKFetchDatabaseChangesOperation performCKOperation]
  -[CKFetchDatabaseChangesOperation recordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock]
  -[CKFetchDatabaseChangesOperation fillFromOperationInfo:]
  -[CKFetchDatabaseChangesOperation initWithPreviousServerChangeToken:]
  -[CKFetchDatabaseChangesOperation handleEncryptedDataResetForRecordZoneID:]
  -[CKFetchDatabaseChangesOperation fetchDatabaseChangesCompletionBlock]
  -[CKFetchDatabaseChangesOperation previousServerChangeToken]
  -[CKFetchDatabaseChangesOperation handleChangeSetCompletionWithServerChangeToken:databaseChangesStatus:error:reply:]
  -[CKFetchDatabaseChangesOperation fillOutOperationInfo:]
  -[CKFetchDatabaseChangesOperation setRecordZoneWithIDChangedBlock:]
  -[CKFetchDatabaseChangesOperation setServerChangeToken:]
  -[CKFetchDatabaseChangesOperation handleDeleteForRecordZoneID:]
  -[CKFetchDatabaseChangesOperation init]
  -[CKFetchDatabaseChangesOperation setResultsLimit:]


CKFetchDatabaseChangesOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  CKServerChangeToken *previousServerChangeToken
 @property  unsigned long resultsLimit
 @property  BOOL fetchAllChanges

  // class methods
  +[CKFetchDatabaseChangesOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchDatabaseChangesOperationInfo fetchAllChanges]
  -[CKFetchDatabaseChangesOperationInfo setFetchAllChanges:]
  -[CKFetchDatabaseChangesOperationInfo resultsLimit]
  -[CKFetchDatabaseChangesOperationInfo encodeWithCoder:]
  -[CKFetchDatabaseChangesOperationInfo .cxx_destruct]
  -[CKFetchDatabaseChangesOperationInfo setPreviousServerChangeToken:]
  -[CKFetchDatabaseChangesOperationInfo previousServerChangeToken]
  -[CKFetchDatabaseChangesOperationInfo init]
  -[CKFetchDatabaseChangesOperationInfo setResultsLimit:]
  -[CKFetchDatabaseChangesOperationInfo initWithCoder:]


CKPackageDB : NSObject
  // class methods
  +[CKPackageDB copySQLiteFileAtPath:toPath:timeout:error:]
  +[CKPackageDB moveSQLiteFileAtPath:toPath:timeout:error:]


CKPackageSection : NSObject
 @property  long long index
 @property  NSData *signature
 @property  unsigned long size

  // instance methods
  -[CKPackageSection signature]
  -[CKPackageSection index]
  -[CKPackageSection .cxx_destruct]
  -[CKPackageSection size]
  -[CKPackageSection setSize:]
  -[CKPackageSection CKPropertiesDescription]
  -[CKPackageSection initWithIndex:signature:size:]


CKDPRecordZoneIdentifier : PBCodable <NSCopying>
 @property  BOOL hasValue
 @property  CKDPIdentifier *value
 @property  BOOL hasOwnerIdentifier
 @property  CKDPIdentifier *ownerIdentifier
 @property  BOOL hasDatabaseType
 @property  int databaseType

  // instance methods
  -[CKDPRecordZoneIdentifier copyTo:]
  -[CKDPRecordZoneIdentifier .cxx_destruct]
  -[CKDPRecordZoneIdentifier hasValue]
  -[CKDPRecordZoneIdentifier mergeFrom:]
  -[CKDPRecordZoneIdentifier setValue:]
  -[CKDPRecordZoneIdentifier dictionaryRepresentation]
  -[CKDPRecordZoneIdentifier copyWithZone:]
  -[CKDPRecordZoneIdentifier value]
  -[CKDPRecordZoneIdentifier readFrom:]
  -[CKDPRecordZoneIdentifier writeTo:]
  -[CKDPRecordZoneIdentifier isEqual:]
  -[CKDPRecordZoneIdentifier ownerIdentifier]
  -[CKDPRecordZoneIdentifier hasOwnerIdentifier]
  -[CKDPRecordZoneIdentifier databaseType]
  -[CKDPRecordZoneIdentifier setDatabaseType:]
  -[CKDPRecordZoneIdentifier setHasDatabaseType:]
  -[CKDPRecordZoneIdentifier hasDatabaseType]
  -[CKDPRecordZoneIdentifier databaseTypeAsString:]
  -[CKDPRecordZoneIdentifier StringAsDatabaseType:]
  -[CKDPRecordZoneIdentifier setOwnerIdentifier:]


CKApplicationPermissionGroup : NSObject <NSSecureCoding>
 @property  NSArray *containerIDs
 @property  NSArray *applicationBundleIDs
 @property  unsigned long enabledPermissions

  // class methods
  +[CKApplicationPermissionGroup supportsSecureCoding]

  // instance methods
  -[CKApplicationPermissionGroup encodeWithCoder:]
  -[CKApplicationPermissionGroup .cxx_destruct]
  -[CKApplicationPermissionGroup setContainerIDs:]
  -[CKApplicationPermissionGroup containerIDs]
  -[CKApplicationPermissionGroup init]
  -[CKApplicationPermissionGroup initWithCoder:]
  -[CKApplicationPermissionGroup CKPropertiesDescription]
  -[CKApplicationPermissionGroup applicationBundleIDs]
  -[CKApplicationPermissionGroup setApplicationBundleIDs:]
  -[CKApplicationPermissionGroup enabledPermissions]
  -[CKApplicationPermissionGroup setEnabledPermissions:]


CKUploadRequestManager : NSObject
 @property  CKUploadRequestManagerInternals *internals
 @property  CKSyncEngine *repairZoneSyncEngine
 @property  CKContainer *repairContainer
 @property  CKUploadRequestPersistentStore *database
 @property  CKUploadRequestManagerResponseActionThrottler *responseActionThrottler
 @property  @? assetRequestCallback
 @property  @? packageRequestCallback
 @property  NSString *machServiceName
 @property  NSString *activityIdentifierForSchedulingRepairs
 @property  double recurringFetchPeriod
 @property  double tryAgainLaterRetryTime
 @property  double retryableErrorRetryTime
 @property  double cancelledErrorRetryTime
 @property  double retryableErrorMaxRetryCount
 @property  double notificationDebouncePeriod
 @property  double assetRepairSchedulerDefaultSuspensionTime
 @property  long long assetRepairSchedulerRepairRetryCount

  // class methods
  +[CKUploadRequestManager setIgnoreUploadRequestPushNotifications:]
  +[CKUploadRequestManager ignoreUploadRequestPushNotifications]
  +[CKUploadRequestManager activityIdentifierForSchedulingRepairsInContainer:]

  // instance methods
  -[CKUploadRequestManager cancelAllOperations]
  -[CKUploadRequestManager setAssetRepairSchedulerDefaultSuspensionTime:]
  -[CKUploadRequestManager setCallback:forOverridePoint:]
  -[CKUploadRequestManager setRetryableErrorRetryTime:]
  -[CKUploadRequestManager setRetryableErrorMaxRetryCount:]
  -[CKUploadRequestManager repairZoneSyncEngine]
  -[CKUploadRequestManager setRecurringFetchPeriod:]
  -[CKUploadRequestManager unregister]
  -[CKUploadRequestManager assetRepairSchedulerRepairRetryCount]
  -[CKUploadRequestManager tryAgainLaterRetryTime]
  -[CKUploadRequestManager setAssetRequestCallback:]
  -[CKUploadRequestManager notificationDebouncePeriod]
  -[CKUploadRequestManager initWithContainer:repairContainerOverrides:]
  -[CKUploadRequestManager setPackageRequestCallback:]
  -[CKUploadRequestManager setAssetRepairSchedulerRepairRetryCount:]
  -[CKUploadRequestManager cancelledErrorRetryTime]
  -[CKUploadRequestManager scheduleOrInvokeRepairsNow]
  -[CKUploadRequestManager retryableErrorMaxRetryCount]
  -[CKUploadRequestManager activityIdentifierForSchedulingRepairs]
  -[CKUploadRequestManager initWithContainer:repairContainerOverrides:ignoringSystemConditions:]
  -[CKUploadRequestManager assetRequestCallback]
  -[CKUploadRequestManager repairContainer]
  -[CKUploadRequestManager fetchServerChanges:]
  -[CKUploadRequestManager setNotificationDebouncePeriod:]
  -[CKUploadRequestManager assetRepairSchedulerDefaultSuspensionTime]
  -[CKUploadRequestManager setTryAgainLaterRetryTime:]
  -[CKUploadRequestManager recurringFetchPeriod]
  -[CKUploadRequestManager manuallyTriggerUploadRequests]
  -[CKUploadRequestManager responseActionThrottler]
  -[CKUploadRequestManager retryableErrorRetryTime]
  -[CKUploadRequestManager setCancelledErrorRetryTime:]
  -[CKUploadRequestManager packageRequestCallback]
  -[CKUploadRequestManager internals]
  -[CKUploadRequestManager registerForItemRequests]
  -[CKUploadRequestManager dealloc]
  -[CKUploadRequestManager setMachServiceName:]
  -[CKUploadRequestManager .cxx_destruct]
  -[CKUploadRequestManager database]
  -[CKUploadRequestManager machServiceName]


CKUploadRequestManagerInternals : NSObject <CKAssetRepairSchedulerDelegate, CKSyncEngineDataSource>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  double recurringFetchPeriod
 @property  double tryAgainLaterRetryTime
 @property  double retryableErrorRetryTime
 @property  double cancelledErrorRetryTime
 @property  double retryableErrorMaxRetryCount
 @property  double notificationDebouncePeriod
 @property  double assetRepairSchedulerDefaultSuspensionTime
 @property  long long assetRepairSchedulerRepairRetryCount
 @property  CKContainer *container
 @property  CKContainer *repairContainer
 @property  CKUploadRequestConfiguration *repairContainerOverrides
 @property  CKUploadRequestManagerStateMachine *stateMachine
 @property  CKSyncEngine *repairZoneSyncEngine
 @property  NSString *assignedMachServiceName
 @property  BOOL hasRegisteredActivity
 @property  CKAssetRepairScheduler *repairProcessor
 @property  CKUploadRequestPersistentStore *database
 @property  NSString *deviceID
 @property  NSString *cachesDirectory
 @property  ^{__SCNetworkReachability=} reachability
 @property  <NSObject> *accountChangeObserver
 @property  @? scheduledAccountStatusCheck
 @property  int fetchAllToken
 @property  @? repairActivityHandler
 @property  CKSchedulerActivity *observedRepairActivity
 @property  CKUploadRequestManagerResponseActionThrottler *responseActionThrottler
 @property  NSObject<OS_dispatch_queue> *stateMachineQueue
 @property  NSObject<OS_dispatch_queue> *stateQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  NSMutableDictionary *callbackForOverridePoint
 @property  BOOL ignoringSystemConditions
 @property  @? assetRequestCallback
 @property  @? packageRequestCallback
 @property  NSString *machServiceName
 @property  NSString *activityIdentifierForSchedulingRepairs

  // instance methods
  -[CKUploadRequestManagerInternals dispatchEvent:]
  -[CKUploadRequestManagerInternals setAssetRepairSchedulerDefaultSuspensionTime:]
  -[CKUploadRequestManagerInternals setCallback:forOverridePoint:]
  -[CKUploadRequestManagerInternals setStateMachine:]
  -[CKUploadRequestManagerInternals setRetryableErrorRetryTime:]
  -[CKUploadRequestManagerInternals setRetryableErrorMaxRetryCount:]
  -[CKUploadRequestManagerInternals repairZoneSyncEngine]
  -[CKUploadRequestManagerInternals setRecurringFetchPeriod:]
  -[CKUploadRequestManagerInternals assetRepairSchedulerRepairRetryCount]
  -[CKUploadRequestManagerInternals tryAgainLaterRetryTime]
  -[CKUploadRequestManagerInternals setAssetRequestCallback:]
  -[CKUploadRequestManagerInternals notificationDebouncePeriod]
  -[CKUploadRequestManagerInternals initWithContainer:repairContainerOverrides:]
  -[CKUploadRequestManagerInternals setPackageRequestCallback:]
  -[CKUploadRequestManagerInternals setAssetRepairSchedulerRepairRetryCount:]
  -[CKUploadRequestManagerInternals cancelledErrorRetryTime]
  -[CKUploadRequestManagerInternals scheduleOrInvokeRepairsNow]
  -[CKUploadRequestManagerInternals accountChangeObserver]
  -[CKUploadRequestManagerInternals retryableErrorMaxRetryCount]
  -[CKUploadRequestManagerInternals activityIdentifierForSchedulingRepairs]
  -[CKUploadRequestManagerInternals checkAccountID]
  -[CKUploadRequestManagerInternals initWithContainer:repairContainerOverrides:ignoringSystemConditions:]
  -[CKUploadRequestManagerInternals assetRequestCallback]
  -[CKUploadRequestManagerInternals repairContainer]
  -[CKUploadRequestManagerInternals setContainer:]
  -[CKUploadRequestManagerInternals fetchServerChanges:]
  -[CKUploadRequestManagerInternals setNotificationDebouncePeriod:]
  -[CKUploadRequestManagerInternals deviceID]
  -[CKUploadRequestManagerInternals syncEngine:didSaveRecord:]
  -[CKUploadRequestManagerInternals assetRepairSchedulerDefaultSuspensionTime]
  -[CKUploadRequestManagerInternals setTryAgainLaterRetryTime:]
  -[CKUploadRequestManagerInternals recurringFetchPeriod]
  -[CKUploadRequestManagerInternals manuallyTriggerUploadRequests]
  -[CKUploadRequestManagerInternals responseActionThrottler]
  -[CKUploadRequestManagerInternals retryableErrorRetryTime]
  -[CKUploadRequestManagerInternals reachability]
  -[CKUploadRequestManagerInternals cancelScheduledEvent]
  -[CKUploadRequestManagerInternals setCancelledErrorRetryTime:]
  -[CKUploadRequestManagerInternals stateMachine]
  -[CKUploadRequestManagerInternals assignedMachServiceName]
  -[CKUploadRequestManagerInternals setStateMachineQueue:]
  -[CKUploadRequestManagerInternals syncEngine:zoneWithIDWasDeleted:]
  -[CKUploadRequestManagerInternals unregisterFromNetworkReachability]
  -[CKUploadRequestManagerInternals setFetchAllToken:]
  -[CKUploadRequestManagerInternals setAssignedMachServiceName:]
  -[CKUploadRequestManagerInternals setScheduledAccountStatusCheck:]
  -[CKUploadRequestManagerInternals packageRequestCallback]
  -[CKUploadRequestManagerInternals setReachability:]
  -[CKUploadRequestManagerInternals setAccountChangeObserver:]
  -[CKUploadRequestManagerInternals setCallbackQueue:]
  -[CKUploadRequestManagerInternals unregisterFromFetchAllNotifications]
  -[CKUploadRequestManagerInternals assetRepairScheduler:completedRepairWithMetadata:error:]
  -[CKUploadRequestManagerInternals setDeviceID:]
  -[CKUploadRequestManagerInternals setRepairActivityHandler:]
  -[CKUploadRequestManagerInternals repairContainerOverrides]
  -[CKUploadRequestManagerInternals setDatabase:]
  -[CKUploadRequestManagerInternals callbackQueue]
  -[CKUploadRequestManagerInternals assetRepairSchedulerAllRequestsComplete:]
  -[CKUploadRequestManagerInternals syncEngine:zoneWithIDChanged:]
  -[CKUploadRequestManagerInternals setResponseActionThrottler:]
  -[CKUploadRequestManagerInternals scheduledAccountStatusCheck]
  -[CKUploadRequestManagerInternals syncEngine:failedToDeleteRecordWithID:error:]
  -[CKUploadRequestManagerInternals setRepairZoneSyncEngine:]
  -[CKUploadRequestManagerInternals dealloc]
  -[CKUploadRequestManagerInternals repairZoneID]
  -[CKUploadRequestManagerInternals openSyncEngine]
  -[CKUploadRequestManagerInternals ignoringSystemConditions]
  -[CKUploadRequestManagerInternals setMachServiceName:]
  -[CKUploadRequestManagerInternals syncEngine:zoneWithIDWasPurged:]
  -[CKUploadRequestManagerInternals .cxx_destruct]
  -[CKUploadRequestManagerInternals assetRepairScheduler:preparingRepairWithOperation:]
  -[CKUploadRequestManagerInternals createDatabase]
  -[CKUploadRequestManagerInternals scheduleRepairsWithDelay:]
  -[CKUploadRequestManagerInternals syncEngine:didUpdateMetadata:]
  -[CKUploadRequestManagerInternals registerForAccountNotifications]
  -[CKUploadRequestManagerInternals repairActivityHandler]
  -[CKUploadRequestManagerInternals container]
  -[CKUploadRequestManagerInternals nextRepairDateForDate:]
  -[CKUploadRequestManagerInternals isRepairRecordActionable:]
  -[CKUploadRequestManagerInternals registerForRepairScheduler]
  -[CKUploadRequestManagerInternals setRepairContainer:]
  -[CKUploadRequestManagerInternals setRepairProcessor:]
  -[CKUploadRequestManagerInternals unregisterFromAccountNotifications]
  -[CKUploadRequestManagerInternals fetchAllToken]
  -[CKUploadRequestManagerInternals registerForFetchAllNotifications]
  -[CKUploadRequestManagerInternals registerForNetworkReachability]
  -[CKUploadRequestManagerInternals observeValueForKeyPath:ofObject:change:context:]
  -[CKUploadRequestManagerInternals setRepairContainerOverrides:]
  -[CKUploadRequestManagerInternals syncEngine:didDeleteRecordWithID:]
  -[CKUploadRequestManagerInternals scheduleNextSync]
  -[CKUploadRequestManagerInternals checkNetworkReachability]
  -[CKUploadRequestManagerInternals canPerformFunction:]
  -[CKUploadRequestManagerInternals scheduleRecordRepair:withDelay:increasingCount:]
  -[CKUploadRequestManagerInternals database]
  -[CKUploadRequestManagerInternals machServiceName]
  -[CKUploadRequestManagerInternals performRepairs]
  -[CKUploadRequestManagerInternals assetRepairScheduler:completedRequestWithMetadata:result:]
  -[CKUploadRequestManagerInternals respondToStateMachineChangeState:enter:]
  -[CKUploadRequestManagerInternals repairableAssetsForDate:]
  -[CKUploadRequestManagerInternals syncEngine:failedToSaveRecord:error:]
  -[CKUploadRequestManagerInternals setCallbackForOverridePoint:]
  -[CKUploadRequestManagerInternals dispatchEvent:synchronously:]
  -[CKUploadRequestManagerInternals closeSyncEngine]
  -[CKUploadRequestManagerInternals setObservedRepairActivity:]
  -[CKUploadRequestManagerInternals invokeCallbackForOverridePoint:withError:onCallbackQueue:]
  -[CKUploadRequestManagerInternals scheduleRecurringFetch]
  -[CKUploadRequestManagerInternals repairProcessor]
  -[CKUploadRequestManagerInternals stateMachineQueue]
  -[CKUploadRequestManagerInternals setStateQueue:]
  -[CKUploadRequestManagerInternals commonInitWithContainer:repairContainerOverrides:]
  -[CKUploadRequestManagerInternals stateQueue]
  -[CKUploadRequestManagerInternals syncEngine:recordWithIDWasDeleted:recordType:]
  -[CKUploadRequestManagerInternals finishSchedulerCallbackWithDeferral:]
  -[CKUploadRequestManagerInternals setHasRegisteredActivity:]
  -[CKUploadRequestManagerInternals respondToStateMachineAction:isRetry:]
  -[CKUploadRequestManagerInternals fetchRepairContainerMetadata]
  -[CKUploadRequestManagerInternals callbackForOverridePoint]
  -[CKUploadRequestManagerInternals createStateMachine]
  -[CKUploadRequestManagerInternals setCachesDirectory:]
  -[CKUploadRequestManagerInternals syncEngine:didFetchRecord:]
  -[CKUploadRequestManagerInternals hasRegisteredActivity]
  -[CKUploadRequestManagerInternals syncEngine:recordToSaveForRecordID:]
  -[CKUploadRequestManagerInternals cachesDirectory]
  -[CKUploadRequestManagerInternals observedRepairActivity]
  -[CKUploadRequestManagerInternals checkAccountStatus]


CKUploadRequestManagerResponseActionThrottlerMetadata : NSObject
 @property  double lastRunTime
 @property  long long repeatCount
 @property  unsigned long totalThrottleCount

  // instance methods
  -[CKUploadRequestManagerResponseActionThrottlerMetadata repeatCount]
  -[CKUploadRequestManagerResponseActionThrottlerMetadata setRepeatCount:]
  -[CKUploadRequestManagerResponseActionThrottlerMetadata setLastRunTime:]
  -[CKUploadRequestManagerResponseActionThrottlerMetadata setTotalThrottleCount:]
  -[CKUploadRequestManagerResponseActionThrottlerMetadata totalThrottleCount]
  -[CKUploadRequestManagerResponseActionThrottlerMetadata lastRunTime]


CKUploadRequestManagerResponseActionThrottler : NSObject
 @property  NSMutableDictionary *responseActionToMetadata
 @property  double throttlePeriod
 @property  long long minimumThrottleCount
 @property  double minimumThrottleTime
 @property  double maximumThrottleTime
 @property  double minimumRetryTime
 @property  NSSet *actionsToThrottle

  // class methods
  +[CKUploadRequestManagerResponseActionThrottler sleep:]
  +[CKUploadRequestManagerResponseActionThrottler currentTime]

  // instance methods
  -[CKUploadRequestManagerResponseActionThrottler minimumThrottleCount]
  -[CKUploadRequestManagerResponseActionThrottler actionsToThrottle]
  -[CKUploadRequestManagerResponseActionThrottler setResponseActionToMetadata:]
  -[CKUploadRequestManagerResponseActionThrottler maximumThrottleTime]
  -[CKUploadRequestManagerResponseActionThrottler setMinimumThrottleTime:]
  -[CKUploadRequestManagerResponseActionThrottler gateResponseAction:isRetry:currentTime:]
  -[CKUploadRequestManagerResponseActionThrottler setMinimumRetryTime:]
  -[CKUploadRequestManagerResponseActionThrottler .cxx_destruct]
  -[CKUploadRequestManagerResponseActionThrottler gateResponseAction:isRetry:]
  -[CKUploadRequestManagerResponseActionThrottler minimumRetryTime]
  -[CKUploadRequestManagerResponseActionThrottler setThrottlePeriod:]
  -[CKUploadRequestManagerResponseActionThrottler throttlePeriod]
  -[CKUploadRequestManagerResponseActionThrottler throttleTimeForCount:isRetry:]
  -[CKUploadRequestManagerResponseActionThrottler totalThrottleCountForAction:]
  -[CKUploadRequestManagerResponseActionThrottler setMinimumThrottleCount:]
  -[CKUploadRequestManagerResponseActionThrottler minimumThrottleTime]
  -[CKUploadRequestManagerResponseActionThrottler setMaximumThrottleTime:]
  -[CKUploadRequestManagerResponseActionThrottler init]
  -[CKUploadRequestManagerResponseActionThrottler setActionsToThrottle:]
  -[CKUploadRequestManagerResponseActionThrottler responseActionToMetadata]


CKMarkNotificationsReadOperation : CKOperation <CKMarkNotificationsReadOperationCallbacks>
 @property  NSMutableArray *notificationIDsMarkedRead
 @property  NSMutableDictionary *errorsByNotificationID
 @property  <CKMarkNotificationsReadOperationCallbacks> *clientOperationCallbackProxy
 @property  CKMarkNotificationsReadOperationInfo *operationInfo
 @property  NSArray *notificationIDs
 @property  @? markNotificationsReadCompletionBlock

  // class methods
  +[CKMarkNotificationsReadOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKMarkNotificationsReadOperation activityCreate]
  -[CKMarkNotificationsReadOperation _finishOnCallbackQueueWithError:]
  -[CKMarkNotificationsReadOperation .cxx_destruct]
  -[CKMarkNotificationsReadOperation hasCKOperationCallbacksSet]
  -[CKMarkNotificationsReadOperation performCKOperation]
  -[CKMarkNotificationsReadOperation fillFromOperationInfo:]
  -[CKMarkNotificationsReadOperation CKOperationShouldRun:]
  -[CKMarkNotificationsReadOperation fillOutOperationInfo:]
  -[CKMarkNotificationsReadOperation init]
  -[CKMarkNotificationsReadOperation handleMarkNotificationReadCompletionForNotificationID:error:]
  -[CKMarkNotificationsReadOperation initWithNotificationIDsToMarkRead:]
  -[CKMarkNotificationsReadOperation setMarkNotificationsReadCompletionBlock:]
  -[CKMarkNotificationsReadOperation markNotificationsReadCompletionBlock]
  -[CKMarkNotificationsReadOperation notificationIDs]
  -[CKMarkNotificationsReadOperation setNotificationIDs:]
  -[CKMarkNotificationsReadOperation notificationIDsMarkedRead]
  -[CKMarkNotificationsReadOperation setNotificationIDsMarkedRead:]
  -[CKMarkNotificationsReadOperation errorsByNotificationID]
  -[CKMarkNotificationsReadOperation setErrorsByNotificationID:]


CKMarkNotificationsReadOperationInfo : CKOperationInfo <NSSecureCoding>
 @property  NSArray *notificationIDs

  // class methods
  +[CKMarkNotificationsReadOperationInfo supportsSecureCoding]

  // instance methods
  -[CKMarkNotificationsReadOperationInfo encodeWithCoder:]
  -[CKMarkNotificationsReadOperationInfo .cxx_destruct]
  -[CKMarkNotificationsReadOperationInfo initWithCoder:]
  -[CKMarkNotificationsReadOperationInfo notificationIDs]
  -[CKMarkNotificationsReadOperationInfo setNotificationIDs:]


CKFetchArchivedRecordsOperation : CKDatabaseOperation <CKFetchArchivedRecordsOperationCallbacks>
 @property  NSMutableDictionary *statusByZoneID
 @property  BOOL shouldFetchAssetContents
 @property  NSMutableDictionary *perItemErrors
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  <CKFetchArchivedRecordsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchArchivedRecordsOperationInfo *operationInfo
 @property  NSArray *recordZoneIDs
 @property  NSDictionary *configurationsByRecordZoneID
 @property  BOOL fetchAllChanges
 @property  @? recordFetchedBlock
 @property  @? recordZoneChangeTokensUpdatedBlock
 @property  @? recordZoneFetchCompletionBlock
 @property  @? fetchArchivedRecordsCompletionBlock

  // class methods
  +[CKFetchArchivedRecordsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchArchivedRecordsOperation fetchAllChanges]
  -[CKFetchArchivedRecordsOperation relevantZoneIDs]
  -[CKFetchArchivedRecordsOperation shouldFetchAssetContents]
  -[CKFetchArchivedRecordsOperation recordFetchedBlock]
  -[CKFetchArchivedRecordsOperation configurationsByRecordZoneID]
  -[CKFetchArchivedRecordsOperation setFetchAllChanges:]
  -[CKFetchArchivedRecordsOperation setRecordZoneIDs:]
  -[CKFetchArchivedRecordsOperation recordZoneChangeTokensUpdatedBlock]
  -[CKFetchArchivedRecordsOperation recordZoneIDs]
  -[CKFetchArchivedRecordsOperation setRecordZoneChangeTokensUpdatedBlock:]
  -[CKFetchArchivedRecordsOperation setShouldFetchAssetContents:]
  -[CKFetchArchivedRecordsOperation activityCreate]
  -[CKFetchArchivedRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKFetchArchivedRecordsOperation setConfigurationsByRecordZoneID:]
  -[CKFetchArchivedRecordsOperation setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKFetchArchivedRecordsOperation assetTransferOptionsByRecordTypeAndKey]
  -[CKFetchArchivedRecordsOperation setRecordFetchedBlock:]
  -[CKFetchArchivedRecordsOperation statusByZoneID]
  -[CKFetchArchivedRecordsOperation .cxx_destruct]
  -[CKFetchArchivedRecordsOperation hasCKOperationCallbacksSet]
  -[CKFetchArchivedRecordsOperation perItemErrors]
  -[CKFetchArchivedRecordsOperation handleFetchForRecordID:record:error:]
  -[CKFetchArchivedRecordsOperation setPerItemErrors:]
  -[CKFetchArchivedRecordsOperation performCKOperation]
  -[CKFetchArchivedRecordsOperation recordZoneFetchCompletionBlock]
  -[CKFetchArchivedRecordsOperation fillFromOperationInfo:]
  -[CKFetchArchivedRecordsOperation setStatusByZoneID:]
  -[CKFetchArchivedRecordsOperation CKOperationShouldRun:]
  -[CKFetchArchivedRecordsOperation initWithRecordZoneIDs:configurationsByRecordZoneID:]
  -[CKFetchArchivedRecordsOperation setRecordZoneFetchCompletionBlock:]
  -[CKFetchArchivedRecordsOperation fillOutOperationInfo:]
  -[CKFetchArchivedRecordsOperation init]
  -[CKFetchArchivedRecordsOperation handleChangeSetCompletionForRecordZoneID:serverChangeToken:archivedRecordStatus:error:reply:]
  -[CKFetchArchivedRecordsOperation setFetchArchivedRecordsCompletionBlock:]
  -[CKFetchArchivedRecordsOperation fetchArchivedRecordsCompletionBlock]
  -[CKFetchArchivedRecordsOperation recordZoneArchivesStatusByZoneID]


CKFetchArchivedRecordsOptions : NSObject <NSSecureCoding, NSCopying>
 @property  CKServerChangeToken *previousServerChangeToken

  // class methods
  +[CKFetchArchivedRecordsOptions supportsSecureCoding]

  // instance methods
  -[CKFetchArchivedRecordsOptions encodeWithCoder:]
  -[CKFetchArchivedRecordsOptions .cxx_destruct]
  -[CKFetchArchivedRecordsOptions setPreviousServerChangeToken:]
  -[CKFetchArchivedRecordsOptions copyWithZone:]
  -[CKFetchArchivedRecordsOptions previousServerChangeToken]
  -[CKFetchArchivedRecordsOptions initWithCoder:]


CKFetchArchivedRecordsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordZoneIDs
 @property  NSDictionary *configurationsByRecordZoneID
 @property  BOOL shouldFetchAssetContents
 @property  BOOL fetchAllChanges
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey

  // class methods
  +[CKFetchArchivedRecordsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchArchivedRecordsOperationInfo fetchAllChanges]
  -[CKFetchArchivedRecordsOperationInfo shouldFetchAssetContents]
  -[CKFetchArchivedRecordsOperationInfo configurationsByRecordZoneID]
  -[CKFetchArchivedRecordsOperationInfo setFetchAllChanges:]
  -[CKFetchArchivedRecordsOperationInfo setRecordZoneIDs:]
  -[CKFetchArchivedRecordsOperationInfo recordZoneIDs]
  -[CKFetchArchivedRecordsOperationInfo setShouldFetchAssetContents:]
  -[CKFetchArchivedRecordsOperationInfo setConfigurationsByRecordZoneID:]
  -[CKFetchArchivedRecordsOperationInfo setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKFetchArchivedRecordsOperationInfo assetTransferOptionsByRecordTypeAndKey]
  -[CKFetchArchivedRecordsOperationInfo encodeWithCoder:]
  -[CKFetchArchivedRecordsOperationInfo .cxx_destruct]
  -[CKFetchArchivedRecordsOperationInfo init]
  -[CKFetchArchivedRecordsOperationInfo initWithCoder:]


CKDPStreamingAssetFooter : PBCodable <NSCopying>
 @property  int status
 @property  NSData *md5

  // instance methods
  -[CKDPStreamingAssetFooter copyTo:]
  -[CKDPStreamingAssetFooter status]
  -[CKDPStreamingAssetFooter setStatus:]
  -[CKDPStreamingAssetFooter statusAsString:]
  -[CKDPStreamingAssetFooter .cxx_destruct]
  -[CKDPStreamingAssetFooter mergeFrom:]
  -[CKDPStreamingAssetFooter StringAsStatus:]
  -[CKDPStreamingAssetFooter dictionaryRepresentation]
  -[CKDPStreamingAssetFooter copyWithZone:]
  -[CKDPStreamingAssetFooter readFrom:]
  -[CKDPStreamingAssetFooter writeTo:]
  -[CKDPStreamingAssetFooter isEqual:]
  -[CKDPStreamingAssetFooter md5]
  -[CKDPStreamingAssetFooter setMd5:]


CKSQLiteCacheTableEntry : NSObject
 @property  NSDate *expirationDate

  // instance methods
  -[CKSQLiteCacheTableEntry expirationDate]
  -[CKSQLiteCacheTableEntry setExpirationDate:]
  -[CKSQLiteCacheTableEntry .cxx_destruct]


CKSQLiteCacheTable : CKSQLiteTable
 @property  unsigned long entryCountLimit
 @property  unsigned long dataSizeLimit
 @property  double cacheExpirationTime
 @property  double expireDelay
 @property  NSDate *lastExpireDate

  // class methods
  +[CKSQLiteCacheTable dbProperties]

  // instance methods
  -[CKSQLiteCacheTable expire]
  -[CKSQLiteCacheTable performTransaction:]
  -[CKSQLiteCacheTable .cxx_destruct]
  -[CKSQLiteCacheTable insertObject:]
  -[CKSQLiteCacheTable finishInitializing:]
  -[CKSQLiteCacheTable newEntryObject]
  -[CKSQLiteCacheTable setProperties:valuesToStore:inEntriesMatching:label:error:predicate:]
  -[CKSQLiteCacheTable deleteEntriesMatching:label:error:predicate:]
  -[CKSQLiteCacheTable initWithLogicalTableName:entryCountLimit:dataSizeLimit:expirationTime:expireDelay:]
  -[CKSQLiteCacheTable oldestFirstEnumerator]
  -[CKSQLiteCacheTable fetchExpirationDate:]
  -[CKSQLiteCacheTable oldestExpirationDate]
  -[CKSQLiteCacheTable setEntryCountLimit:]
  -[CKSQLiteCacheTable expireByCount]
  -[CKSQLiteCacheTable setDataSizeLimit:]
  -[CKSQLiteCacheTable expireByDataSize]
  -[CKSQLiteCacheTable setCacheExpirationTime:]
  -[CKSQLiteCacheTable expireByTime:]
  -[CKSQLiteCacheTable dataSizeForEntry:error:]
  -[CKSQLiteCacheTable periodicExpire]
  -[CKSQLiteCacheTable extendExpiration:]
  -[CKSQLiteCacheTable setEntryExpiration:date:]
  -[CKSQLiteCacheTable entryCountLimit]
  -[CKSQLiteCacheTable dataSizeLimit]
  -[CKSQLiteCacheTable cacheExpirationTime]
  -[CKSQLiteCacheTable expireDelay]
  -[CKSQLiteCacheTable lastExpireDate]


CKFetchMergeableDeltaMetadataOperation : CKDatabaseOperation <CKFetchMergeableDeltaMetadataOperationCallbacks>
 @property  NSMutableDictionary *perValueErrors
 @property  NSArray *mergeableValueIDs
 @property  <CKFetchMergeableDeltaMetadataOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchMergeableDeltaMetadataOperationInfo *operationInfo
 @property  @? metadataFetchedBlock
 @property  @? fetchMergeableDeltaMetadataCompletionBlock

  // class methods
  +[CKFetchMergeableDeltaMetadataOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchMergeableDeltaMetadataOperation activityCreate]
  -[CKFetchMergeableDeltaMetadataOperation _finishOnCallbackQueueWithError:]
  -[CKFetchMergeableDeltaMetadataOperation .cxx_destruct]
  -[CKFetchMergeableDeltaMetadataOperation hasCKOperationCallbacksSet]
  -[CKFetchMergeableDeltaMetadataOperation performCKOperation]
  -[CKFetchMergeableDeltaMetadataOperation fillFromOperationInfo:]
  -[CKFetchMergeableDeltaMetadataOperation CKOperationShouldRun:]
  -[CKFetchMergeableDeltaMetadataOperation fillOutOperationInfo:]
  -[CKFetchMergeableDeltaMetadataOperation handleFetchForMergeableValueID:metadatas:error:]
  -[CKFetchMergeableDeltaMetadataOperation setMetadataFetchedBlock:]
  -[CKFetchMergeableDeltaMetadataOperation metadataFetchedBlock]
  -[CKFetchMergeableDeltaMetadataOperation setFetchMergeableDeltaMetadataCompletionBlock:]
  -[CKFetchMergeableDeltaMetadataOperation fetchMergeableDeltaMetadataCompletionBlock]
  -[CKFetchMergeableDeltaMetadataOperation initWithMergeableValueIDs:]
  -[CKFetchMergeableDeltaMetadataOperation mergeableValueIDs]
  -[CKFetchMergeableDeltaMetadataOperation setMergeableValueIDs:]
  -[CKFetchMergeableDeltaMetadataOperation perValueErrors]
  -[CKFetchMergeableDeltaMetadataOperation setPerValueErrors:]


CKFetchMergeableDeltaMetadataOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *mergeableValueIDs

  // class methods
  +[CKFetchMergeableDeltaMetadataOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchMergeableDeltaMetadataOperationInfo encodeWithCoder:]
  -[CKFetchMergeableDeltaMetadataOperationInfo .cxx_destruct]
  -[CKFetchMergeableDeltaMetadataOperationInfo initWithCoder:]
  -[CKFetchMergeableDeltaMetadataOperationInfo mergeableValueIDs]
  -[CKFetchMergeableDeltaMetadataOperationInfo setMergeableValueIDs:]


CKRecordValueStore : NSObject <CKRecordKeyValueSetting, NSCopying, NSSecureCoding>
 @property  BOOL encrypted
 @property  NSMutableDictionary *values
 @property  NSMutableDictionary *originalValues
 @property  NSMutableSet *changedKeysSet
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKRecordValueStore supportsSecureCoding]

  // instance methods
  -[CKRecordValueStore changedKeys]
  -[CKRecordValueStore values]
  -[CKRecordValueStore recordID]
  -[CKRecordValueStore initWithRecord:]
  -[CKRecordValueStore enumerateKeysAndValuesOfClasses:usingBlock:]
  -[CKRecordValueStore _setObject:forKey:]
  -[CKRecordValueStore setObject:forKeyedSubscript:]
  -[CKRecordValueStore encodeWithCoder:]
  -[CKRecordValueStore changedKeysSet]
  -[CKRecordValueStore isEncrypted]
  -[CKRecordValueStore setValues:]
  -[CKRecordValueStore originalValues]
  -[CKRecordValueStore setObject:forKey:]
  -[CKRecordValueStore enumerateKeysAndValuesUsingBlock:]
  -[CKRecordValueStore valueForKey:]
  -[CKRecordValueStore containsValueOfClasses:options:passingTest:]
  -[CKRecordValueStore setNilValueForKey:]
  -[CKRecordValueStore .cxx_destruct]
  -[CKRecordValueStore enumerateKeysAndValuesOfClasses:options:usingBlock:]
  -[CKRecordValueStore objectForKeyedSubscript:]
  -[CKRecordValueStore copyWithZone:]
  -[CKRecordValueStore resetChangedKeys]
  -[CKRecordValueStore allKeys]
  -[CKRecordValueStore containsValueOfClasses:passingTest:]
  -[CKRecordValueStore CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKRecordValueStore objectForKey:]
  -[CKRecordValueStore setChangedKeysSet:]
  -[CKRecordValueStore setObjectNoValidate:forKey:]
  -[CKRecordValueStore setOriginalValues:]
  -[CKRecordValueStore containsValuePassingTest:]
  -[CKRecordValueStore setValue:forKey:]
  -[CKRecordValueStore initWithCoder:]


CKEncryptedRecordValueStore : CKRecordValueStore
  // instance methods
  -[CKEncryptedRecordValueStore _setObject:forKey:]
  -[CKEncryptedRecordValueStore setObject:forKeyedSubscript:]
  -[CKEncryptedRecordValueStore isEncrypted]
  -[CKEncryptedRecordValueStore objectForKeyedSubscript:]
  -[CKEncryptedRecordValueStore setCompatibilityModeObjectNoValidate:forKey:]


CKRecord : NSObject <CKContainerAssignment, CKPropertiesDescription, NSSecureCoding, NSCopying>
 @property  CKContainerID *containerID
 @property  BOOL hasUpdatedExpirationTimeInterval
 @property  NSNumber *updatedExpirationTimeInterval
 @property  unsigned long assetCount
 @property  unsigned long assetDiskSize
 @property  BOOL containsPackageValues
 @property  BOOL hasPropertiesRequiringEncryption
 @property  BOOL hasModifiedPropertiesRequiringEncryption
 @property  BOOL hasPropertiesRequiringDecryption
 @property  BOOL hasEncryptedData
 @property  BOOL hasModifiedEncryptedData
 @property  BOOL containsIndexedKeys
 @property  BOOL serializeProtectionData
 @property  NSData *zoneishKeyID
 @property  NSString *previousProtectionEtag
 @property  NSString *protectionEtag
 @property  NSString *zoneProtectionEtag
 @property  NSString *shareEtag
 @property  NSString *fullToken
 @property  NSData *shortSharingTokenData
 @property  NSData *shortSharingTokenHashData
 @property  NSData *encryptedFullTokenData
 @property  BOOL isMergeableValueDeltaRecord
 @property  NSString *previousProtectionEtagFromUnitTest
 @property  NSData *pcsKeyID
 @property  NSArray *allPCSKeyIDs
 @property  CKReference *share
 @property  CKReference *previousShare
 @property  BOOL hasUpdatedShare
 @property  CKReference *previousParent
 @property  BOOL hasUpdatedParent
 @property  ^{_PCSIdentityData=} signingPCSIdentity
 @property  CKEncryptedData *chainPrivateKey
 @property  CKEncryptedData *mutableEncryptedPSK
 @property  NSData *chainProtectionInfo
 @property  NSData *chainParentPublicKeyID
 @property  NSArray *tombstonedPublicKeyIDs
 @property  NSString *privateToken
 @property  NSURL *mutableURL
 @property  NSDate *expirationDate
 @property  BOOL expired
 @property  CKRecordID *creatorUserRecordID
 @property  CKRecordID *lastModifiedUserRecordID
 @property  NSDate *creationDate
 @property  NSDate *modificationDate
 @property  BOOL knownToServer
 @property  BOOL wasCached
 @property  unsigned long size
 @property  long long permission
 @property  NSDictionary *pluginFields
 @property  CKRecordID *recordID
 @property  NSString *etag
 @property  NSArray *conflictLoserEtags
 @property  NSString *modifiedByDevice
 @property  BOOL containsAssetValues
 @property  NSData *protectionData
 @property  BOOL wantsChainPCS
 @property  BOOL hasChainPCS
 @property  BOOL useLightweightPCS
 @property  NSString *routingKey
 @property  NSString *baseToken
 @property  NSString *shortToken
 @property  BOOL wantsPublicSharingKey
 @property  NSData *encryptedPublicSharingKey
 @property  CKEncryptedData *mutableEncryptedPublicSharingKey
 @property  NSData *mutableEncryptedPublicSharingKeyData
 @property  NSURL *URL
 @property  NSURL *uncachedURL
 @property  NSString *displayedHostname
 @property  CKRecordValueStore *valueStore
 @property  CKEncryptedRecordValueStore *encryptedValueStore
 @property  NSDictionary *values
 @property  NSDictionary *originalValues
 @property  NSSet *changedKeysSet
 @property  BOOL trackChanges
 @property  <CKRecordKeyValueSetting> *encryptedValuesByKey
 @property  <CKRecordKeyValueSetting> *valuesByKey
 @property  NSString *recordType
 @property  NSString *recordChangeTag
 @property  CKReference *parent
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKRecord supportsSecureCoding]
  +[CKRecord accessInstanceVariablesDirectly]
  +[CKRecord recordWithDuplicatedPackagesOfRecord:error:]
  +[CKRecord fullTokenFromBaseToken:privateToken:]
  +[CKRecord encryptFullToken:shortSharingTokenData:]
  +[CKRecord decryptFullToken:shortSharingTokenData:]
  +[CKRecord shareURLWithShortToken:shareTitle:shareType:containerID:displayedHostname:]
  +[CKRecord keyForListField:withIndexRange:]
  +[CKRecord keyForInsertingIntoListField:atIndex:]
  +[CKRecord keyForAppendingToListField:]
  +[CKRecord keyForFetchingItems:atEndOfListField:]

  // instance methods
  -[CKRecord setContainerID:]
  -[CKRecord changedKeys]
  -[CKRecord pcsKeyID]
  -[CKRecord setPcsKeyID:]
  -[CKRecord values]
  -[CKRecord permission]
  -[CKRecord CKDescribePropertiesUsing:]
  -[CKRecord share]
  -[CKRecord modifiedByDevice]
  -[CKRecord setConflictLoserEtags:]
  -[CKRecord containerID]
  -[CKRecord modificationDate]
  -[CKRecord setRecordID:]
  -[CKRecord setModificationDate:]
  -[CKRecord setParent:]
  -[CKRecord expirationDate]
  -[CKRecord recordID]
  -[CKRecord setChainProtectionInfo:]
  -[CKRecord enumerateKeysAndValuesOfClasses:usingBlock:]
  -[CKRecord setModifiedByDevice:]
  -[CKRecord setHasUpdatedExpirationTimeInterval:]
  -[CKRecord setObject:forKeyedSubscript:]
  -[CKRecord setExpirationDate:]
  -[CKRecord encodeWithCoder:]
  -[CKRecord changedKeysSet]
  -[CKRecord routingKey]
  -[CKRecord conflictLoserEtags]
  -[CKRecord zoneishKeyID]
  -[CKRecord originalValues]
  -[CKRecord setUpdatedExpirationTimeInterval:]
  -[CKRecord setPreviousProtectionEtag:]
  -[CKRecord setObject:forKey:]
  -[CKRecord setRoutingKey:]
  -[CKRecord enumerateKeysAndValuesUsingBlock:]
  -[CKRecord protectionData]
  -[CKRecord valueForKey:]
  -[CKRecord chainProtectionInfo]
  -[CKRecord dealloc]
  -[CKRecord allPCSKeyIDs]
  -[CKRecord setStreamingAssetRequestOptions:]
  -[CKRecord containsValueOfClasses:options:passingTest:]
  -[CKRecord setNilValueForKey:]
  -[CKRecord setPluginFields:]
  -[CKRecord setShare:]
  -[CKRecord etag]
  -[CKRecord setShareEtag:]
  -[CKRecord serializeProtectionData]
  -[CKRecord .cxx_destruct]
  -[CKRecord tombstonedPublicKeyIDs]
  -[CKRecord hasUpdatedExpirationTimeInterval]
  -[CKRecord setProtectionEtag:]
  -[CKRecord enumerateKeysAndValuesOfClasses:options:usingBlock:]
  -[CKRecord creationDate]
  -[CKRecord setEtag:]
  -[CKRecord setRecordType:]
  -[CKRecord setChainParentPublicKeyID:]
  -[CKRecord recordType]
  -[CKRecord pluginFields]
  -[CKRecord previousProtectionEtag]
  -[CKRecord size]
  -[CKRecord setExpired:]
  -[CKRecord setSerializeProtectionData:]
  -[CKRecord initWithRecordType:recordID:]
  -[CKRecord updatedExpirationTimeInterval]
  -[CKRecord allValues]
  -[CKRecord setDisplayedHostname:]
  -[CKRecord setTombstonedPublicKeyIDs:]
  -[CKRecord chainParentPublicKeyID]
  -[CKRecord objectForKeyedSubscript:]
  -[CKRecord chainPrivateKey]
  -[CKRecord copyWithZone:]
  -[CKRecord setCreationDate:]
  -[CKRecord resetChangedKeys]
  -[CKRecord setExpirationAfterTimeInterval:]
  -[CKRecord isExpired]
  -[CKRecord setProtectionData:]
  -[CKRecord encryptedPublicSharingKey]
  -[CKRecord URL]
  -[CKRecord allKeys]
  -[CKRecord containsValueOfClasses:passingTest:]
  -[CKRecord setAllPCSKeyIDs:]
  -[CKRecord setChainPrivateKey:]
  -[CKRecord redactedDescription]
  -[CKRecord parent]
  -[CKRecord CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKRecord protectionEtag]
  -[CKRecord objectForKey:]
  -[CKRecord setChangedKeysSet:]
  -[CKRecord displayedHostname]
  -[CKRecord allTokens]
  -[CKRecord setObjectNoValidate:forKey:]
  -[CKRecord setPermission:]
  -[CKRecord containsValuePassingTest:]
  -[CKRecord containsMergeableValues]
  -[CKRecord setValue:forKey:]
  -[CKRecord shareEtag]
  -[CKRecord init]
  -[CKRecord setZoneishKeyID:]
  -[CKRecord CKAssignToContainerWithID:]
  -[CKRecord initWithCoder:]
  -[CKRecord creatorUserRecordID]
  -[CKRecord initWithRecordType:zoneID:]
  -[CKRecord encodeSystemFieldsWithCoder:]
  -[CKRecord encryptedValueStore]
  -[CKRecord encryptedValues]
  -[CKRecord initWithRecordTransport:]
  -[CKRecord _initSkippingValidationWithRecordType:recordID:]
  -[CKRecord initWithRecordType:]
  -[CKRecord copyWithZone:userFields:]
  -[CKRecord copyWithOriginalValues]
  -[CKRecord updateWithSavedRecordXPCMetadata:shouldOnlySaveAssetContent:]
  -[CKRecord updateMergeablesForSuccessfulSave]
  -[CKRecord copyStreamingAssetServerFieldsFromServerRecord:]
  -[CKRecord setBaseToken:]
  -[CKRecord setMutableEncryptedPSK:]
  -[CKRecord setMutableEncryptedPublicSharingKey:]
  -[CKRecord mutableEncryptedPublicSharingKey]
  -[CKRecord setMutableEncryptedPublicSharingKeyData:]
  -[CKRecord mutableEncryptedPublicSharingKeyData]
  -[CKRecord privateToken]
  -[CKRecord fullToken]
  -[CKRecord shortSharingTokenData]
  -[CKRecord shortSharingToken]
  -[CKRecord shortSharingTokenHashData]
  -[CKRecord encryptedFullTokenData]
  -[CKRecord shortToken]
  -[CKRecord uncachedURL]
  -[CKRecord canHostServerURLInfo]
  -[CKRecord hasChainPCS]
  -[CKRecord isMoreRecentThanRecord:]
  -[CKRecord setTrackChanges:]
  -[CKRecord encryptedValuesByKey]
  -[CKRecord valuesByKey]
  -[CKRecord recordChangeTag]
  -[CKRecord _allStrings]
  -[CKRecord containsAssetValues]
  -[CKRecord containsPackageValues]
  -[CKRecord containsIndexedKeys]
  -[CKRecord hasPropertiesRequiringEncryption]
  -[CKRecord hasModifiedPropertiesRequiringEncryption]
  -[CKRecord hasPropertiesRequiringDecryption]
  -[CKRecord hasEncryptedData]
  -[CKRecord hasModifiedEncryptedData]
  -[CKRecord setParentReferenceFromRecord:]
  -[CKRecord setParentReferenceFromRecordID:]
  -[CKRecord setSigningPCSIdentity:]
  -[CKRecord preTiboEncodeWithCoder:]
  -[CKRecord assetCount]
  -[CKRecord assetDiskSize]
  -[CKRecord releasePackages]
  -[CKRecord removePackages]
  -[CKRecord claimPackagesWithSuccessBlock:failureBlock:completionBlock:]
  -[CKRecord containsAssetBackedMergeableDeltas]
  -[CKRecord canSkipRecordSaveForMergeables]
  -[CKRecord containsMergeableValuesWithDeltasToSave]
  -[CKRecord prepareMergeablesForUploadInContainer:useAssetsIfNecessary:error:]
  -[CKRecord countMergeableValueMetrics:]
  -[CKRecord setCreatorUserRecordID:]
  -[CKRecord lastModifiedUserRecordID]
  -[CKRecord setLastModifiedUserRecordID:]
  -[CKRecord zoneProtectionEtag]
  -[CKRecord setZoneProtectionEtag:]
  -[CKRecord isMergeableValueDeltaRecord]
  -[CKRecord setIsMergeableValueDeltaRecord:]
  -[CKRecord previousProtectionEtagFromUnitTest]
  -[CKRecord setPreviousProtectionEtagFromUnitTest:]
  -[CKRecord previousShare]
  -[CKRecord setPreviousShare:]
  -[CKRecord hasUpdatedShare]
  -[CKRecord setHasUpdatedShare:]
  -[CKRecord previousParent]
  -[CKRecord setPreviousParent:]
  -[CKRecord hasUpdatedParent]
  -[CKRecord setHasUpdatedParent:]
  -[CKRecord signingPCSIdentity]
  -[CKRecord mutableEncryptedPSK]
  -[CKRecord mutableURL]
  -[CKRecord setMutableURL:]
  -[CKRecord isKnownToServer]
  -[CKRecord setKnownToServer:]
  -[CKRecord wasCached]
  -[CKRecord setWasCached:]
  -[CKRecord wantsChainPCS]
  -[CKRecord setWantsChainPCS:]
  -[CKRecord useLightweightPCS]
  -[CKRecord setUseLightweightPCS:]
  -[CKRecord baseToken]
  -[CKRecord wantsPublicSharingKey]
  -[CKRecord setWantsPublicSharingKey:]
  -[CKRecord valueStore]
  -[CKRecord setValueStore:]
  -[CKRecord setEncryptedValueStore:]
  -[CKRecord trackChanges]


CKPKPushRegistry : NSObject <PKPushRegistryDelegate>
 @property  NSHashTable *delegates
 @property  PKPushRegistry *pushRegistry
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKPKPushRegistry sharedPushRegistry]

  // instance methods
  -[CKPKPushRegistry delegates]
  -[CKPKPushRegistry addDelegate:]
  -[CKPKPushRegistry setDelegates:]
  -[CKPKPushRegistry pushRegistry:didReceiveIncomingPushWithPayload:forType:withCompletionHandler:]
  -[CKPKPushRegistry .cxx_destruct]
  -[CKPKPushRegistry removeDelegate:]
  -[CKPKPushRegistry pushRegistry]
  -[CKPKPushRegistry pushRegistry:didUpdatePushCredentials:forType:]
  -[CKPKPushRegistry setPushRegistry:]
  -[CKPKPushRegistry _init]


CKContactsSupport : NSObject
 @property  Class CKCNContactStore
 @property  Class CKCNContactFetchRequest
 @property  Class CKCNPhoneNumber
 @property  Class CKCNContact
 @property  Class CKCNMutableContact

  // class methods
  +[CKContactsSupport sharedInstance]

  // instance methods
  -[CKContactsSupport CKCNContactStore]
  -[CKContactsSupport CKCNContactFetchRequest]
  -[CKContactsSupport CKCNPhoneNumber]
  -[CKContactsSupport CKCNContact]
  -[CKContactsSupport CKCNMutableContact]


CKFileOpenInfo : NSObject <NSSecureCoding>
 @property  NSString *UUID
 @property  NSString *path
 @property  NSNumber *deviceID
 @property  NSNumber *fileID
 @property  NSNumber *generationID
 @property  BOOL shouldReadRawEncryptedData
 @property  NSFileHandle *fileHandle
 @property  CKAssetDownloadStagingInfo *assetDownloadStagingInfo
 @property  CKAssetDownloadStagingManager *assetDownloadStagingManager

  // class methods
  +[CKFileOpenInfo supportsSecureCoding]

  // instance methods
  -[CKFileOpenInfo deviceID]
  -[CKFileOpenInfo generationID]
  -[CKFileOpenInfo setGenerationID:]
  -[CKFileOpenInfo setFileID:]
  -[CKFileOpenInfo path]
  -[CKFileOpenInfo setDeviceID:]
  -[CKFileOpenInfo encodeWithCoder:]
  -[CKFileOpenInfo fileID]
  -[CKFileOpenInfo assetDownloadStagingInfo]
  -[CKFileOpenInfo setAssetDownloadStagingManager:]
  -[CKFileOpenInfo fileHandle]
  -[CKFileOpenInfo setUUID:]
  -[CKFileOpenInfo setShouldReadRawEncryptedData:]
  -[CKFileOpenInfo .cxx_destruct]
  -[CKFileOpenInfo assetDownloadStagingManager]
  -[CKFileOpenInfo setPath:]
  -[CKFileOpenInfo UUID]
  -[CKFileOpenInfo setAssetDownloadStagingInfo:]
  -[CKFileOpenInfo shouldReadRawEncryptedData]
  -[CKFileOpenInfo setFileHandle:]
  -[CKFileOpenInfo initWithCoder:]
  -[CKFileOpenInfo CKPropertiesDescription]


CKFileOpenResult : NSObject <NSSecureCoding>
 @property  ^{_mkbbackupref=} handle
 @property  NSFileHandle *fileHandle
 @property  NSFileHandle *encryptedFileHandle
 @property  NSNumber *fileSize

  // class methods
  +[CKFileOpenResult supportsSecureCoding]

  // instance methods
  -[CKFileOpenResult encryptedFileHandle]
  -[CKFileOpenResult setHandle:]
  -[CKFileOpenResult fileSize]
  -[CKFileOpenResult setFileSize:]
  -[CKFileOpenResult encodeWithCoder:]
  -[CKFileOpenResult dealloc]
  -[CKFileOpenResult fileHandle]
  -[CKFileOpenResult handle]
  -[CKFileOpenResult .cxx_destruct]
  -[CKFileOpenResult setFileHandle:]
  -[CKFileOpenResult initWithMobileKeyBagHandle:path:error:]
  -[CKFileOpenResult setEncryptedFileHandle:]
  -[CKFileOpenResult initWithCoder:]


CKFileMetadata : NSObject <NSSecureCoding>
 @property  NSNumber *deviceID
 @property  NSNumber *fileID
 @property  NSNumber *generationID
 @property  NSNumber *modTimeInSeconds
 @property  NSNumber *fileSize

  // class methods
  +[CKFileMetadata supportsSecureCoding]

  // instance methods
  -[CKFileMetadata deviceID]
  -[CKFileMetadata generationID]
  -[CKFileMetadata fileSize]
  -[CKFileMetadata setFileSize:]
  -[CKFileMetadata encodeWithCoder:]
  -[CKFileMetadata fileID]
  -[CKFileMetadata .cxx_destruct]
  -[CKFileMetadata modTimeInSeconds]
  -[CKFileMetadata initWithCoder:]


CKAssetTransferOptions : NSObject <NSCopying, NSSecureCoding>
 @property  NSNumber *sparseAware
 @property  NSNumber *shouldFetchAssetContent
 @property  NSNumber *shouldFetchAssetContentInMemory
 @property  NSNumber *useMMCSEncryptionV2

  // class methods
  +[CKAssetTransferOptions supportsSecureCoding]

  // instance methods
  -[CKAssetTransferOptions shouldFetchAssetContentInMemory]
  -[CKAssetTransferOptions setUseMMCSEncryptionV2:]
  -[CKAssetTransferOptions setShouldFetchAssetContent:]
  -[CKAssetTransferOptions setShouldFetchAssetContentInMemory:]
  -[CKAssetTransferOptions shouldFetchAssetContent]
  -[CKAssetTransferOptions encodeWithCoder:]
  -[CKAssetTransferOptions useMMCSEncryptionV2]
  -[CKAssetTransferOptions .cxx_destruct]
  -[CKAssetTransferOptions copyWithZone:]
  -[CKAssetTransferOptions initWithCoder:]
  -[CKAssetTransferOptions CKPropertiesDescription]
  -[CKAssetTransferOptions sparseAware]
  -[CKAssetTransferOptions setSparseAware:]


CKAssetReuploadExpectedProperties : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *fileSignature
 @property  NSData *referenceSignature
 @property  NSData *assetKey

  // class methods
  +[CKAssetReuploadExpectedProperties supportsSecureCoding]

  // instance methods
  -[CKAssetReuploadExpectedProperties setAssetKey:]
  -[CKAssetReuploadExpectedProperties setFileSignature:]
  -[CKAssetReuploadExpectedProperties encodeWithCoder:]
  -[CKAssetReuploadExpectedProperties fileSignature]
  -[CKAssetReuploadExpectedProperties assetKey]
  -[CKAssetReuploadExpectedProperties .cxx_destruct]
  -[CKAssetReuploadExpectedProperties referenceSignature]
  -[CKAssetReuploadExpectedProperties copyWithZone:]
  -[CKAssetReuploadExpectedProperties setReferenceSignature:]
  -[CKAssetReuploadExpectedProperties initWithCoder:]
  -[CKAssetReuploadExpectedProperties CKPropertiesDescription]


CKAssetCopyInfo : NSObject <NSSecureCoding>
 @property  NSData *fileSignature
 @property  NSData *referenceSignature
 @property  NSData *assetKey
 @property  NSURL *assetURL
 @property  NSString *senderID

  // class methods
  +[CKAssetCopyInfo supportsSecureCoding]

  // instance methods
  -[CKAssetCopyInfo senderID]
  -[CKAssetCopyInfo setAssetKey:]
  -[CKAssetCopyInfo setAssetURL:]
  -[CKAssetCopyInfo setSenderID:]
  -[CKAssetCopyInfo setFileSignature:]
  -[CKAssetCopyInfo encodeWithCoder:]
  -[CKAssetCopyInfo fileSignature]
  -[CKAssetCopyInfo assetKey]
  -[CKAssetCopyInfo .cxx_destruct]
  -[CKAssetCopyInfo referenceSignature]
  -[CKAssetCopyInfo assetURL]
  -[CKAssetCopyInfo CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKAssetCopyInfo setReferenceSignature:]
  -[CKAssetCopyInfo initWithCoder:]


CKAssetRereferenceInfo : NSObject
 @property  CKRecordZoneID *sourceZoneID
 @property  NSURL *contentBaseURL
 @property  NSString *owner
 @property  NSString *requestor
 @property  NSData *assetKey
 @property  NSData *referenceSignature
 @property  NSString *downloadToken
 @property  unsigned long downloadTokenExpiration
 @property  NSError *error
 @property  NSString *destinationFieldName

  // instance methods
  -[CKAssetRereferenceInfo owner]
  -[CKAssetRereferenceInfo requestor]
  -[CKAssetRereferenceInfo setOwner:]
  -[CKAssetRereferenceInfo downloadToken]
  -[CKAssetRereferenceInfo setAssetKey:]
  -[CKAssetRereferenceInfo error]
  -[CKAssetRereferenceInfo assetKey]
  -[CKAssetRereferenceInfo .cxx_destruct]
  -[CKAssetRereferenceInfo setError:]
  -[CKAssetRereferenceInfo sourceZoneID]
  -[CKAssetRereferenceInfo referenceSignature]
  -[CKAssetRereferenceInfo setRequestor:]
  -[CKAssetRereferenceInfo setContentBaseURL:]
  -[CKAssetRereferenceInfo setDownloadToken:]
  -[CKAssetRereferenceInfo contentBaseURL]
  -[CKAssetRereferenceInfo setDownloadTokenExpiration:]
  -[CKAssetRereferenceInfo setSourceZoneID:]
  -[CKAssetRereferenceInfo CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKAssetRereferenceInfo setReferenceSignature:]
  -[CKAssetRereferenceInfo downloadTokenExpiration]
  -[CKAssetRereferenceInfo initWithSourceZoneID:]
  -[CKAssetRereferenceInfo destinationFieldName]
  -[CKAssetRereferenceInfo setDestinationFieldName:]


CKAssetReference : NSObject <NSSecureCoding, NSCopying>
 @property  long long databaseScope
 @property  CKRecordID *recordID
 @property  NSString *fieldName
 @property  NSData *fileSignature

  // class methods
  +[CKAssetReference supportsSecureCoding]

  // instance methods
  -[CKAssetReference fieldName]
  -[CKAssetReference recordID]
  -[CKAssetReference encodeWithCoder:]
  -[CKAssetReference fileSignature]
  -[CKAssetReference .cxx_destruct]
  -[CKAssetReference copyWithZone:]
  -[CKAssetReference databaseScope]
  -[CKAssetReference CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKAssetReference setDatabaseScope:]
  -[CKAssetReference isEqual:]
  -[CKAssetReference initWithCoder:]
  -[CKAssetReference initWithExistingRecordID:databaseScope:fieldName:fileSignature:]


CKAsset : NSObject <CKRecordValue, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *signature
 @property  unsigned long size
 @property  unsigned long paddedFileSize
 @property  NSNumber *deviceID
 @property  NSNumber *fileID
 @property  NSURL *nullableFileURL
 @property  NSURL *fileURL
 @property  NSData *assetContent
 @property  NSString *itemTypeHint
 @property  NSString *UUID
 @property  NSString *downloadURLTemplate
 @property  NSDate *downloadURLExpiration
 @property  NSString *uploadReceipt
 @property  double uploadReceiptExpiration
 @property  long long storageGroupingPolicy
 @property  BOOL shouldReadRawEncryptedData
 @property  BOOL usesAssetDownloadStagingManager
 @property  CKAssetTransferOptions *assetTransferOptions
 @property  CKAssetReference *assetReference
 @property  NSDictionary *assetChunkerOptions
 @property  CKRecord *record
 @property  NSString *recordKey
 @property  NSURL *contentBaseURL
 @property  NSString *owner
 @property  NSString *requestor
 @property  NSString *authToken
 @property  CKAssetDownloadPreauthorization *downloadPreauthorization
 @property  NSString *downloadBaseURL
 @property  CKMediaItemMaker *mediaItemMaker
 @property  unsigned long downloadTokenExpiration
 @property  NSData *boundaryKey
 @property  NSFileHandle *fileHandle
 @property  NSURL *constructedAssetDownloadURL
 @property  NSString *constructedAssetDownloadURLTemplate
 @property  unsigned long constructedAssetEstimatedSize
 @property  NSData *constructedAssetDownloadParameters
 @property  NSURL *realPathURL
 @property  NSNumber *generationCountToSave
 @property  BOOL shouldReadAssetContentUsingClientProxy
 @property  CKAssetCopyInfo *assetCopyInfo
 @property  BOOL exposeAssetKey
 @property  NSData *assetKey
 @property  NSData *wrappedAssetKey
 @property  NSData *clearAssetKey
 @property  NSData *referenceSignature
 @property  BOOL wasCached
 @property  BOOL hasSize
 @property  BOOL uploaded
 @property  BOOL downloaded
 @property  long long arrayIndex
 @property  CKRecordID *recordID
 @property  CKMergeableDeltaID *mergeableDeltaID
 @property  CKAssetRereferenceInfo *assetRereferenceInfo
 @property  long long uploadRank

  // class methods
  +[CKAsset supportsSecureCoding]
  +[CKAsset getFileMetadataWithFileHandle:openInfo:error:]
  +[CKAsset _openUnencryptedWithOpenInfo:genCountCheck:error:]
  +[CKAsset getFileMetadataAtPath:error:]
  +[CKAsset _templateURLRequiresAssetKey:]
  +[CKAsset openWithOpenInfo:error:]
  +[CKAsset assetWithFileURL:]
  +[CKAsset _expandTemplateURL:fieldValues:]
  +[CKAsset getFileSizeWithOpenInfo:error:]
  +[CKAsset _canonicalizeTemplateURL:]
  +[CKAsset errorCodeFromPOSIXCode:]
  +[CKAsset openToReadRawEncryptedDataWithOpenInfo:error:]

  // instance methods
  -[CKAsset hasSize]
  -[CKAsset openWithError:]
  -[CKAsset owner]
  -[CKAsset signature]
  -[CKAsset setRecord:]
  -[CKAsset setHasSize:]
  -[CKAsset requestor]
  -[CKAsset setOwner:]
  -[CKAsset deviceID]
  -[CKAsset setRecordID:]
  -[CKAsset recordID]
  -[CKAsset setAssetKey:]
  -[CKAsset uploadReceiptExpiration]
  -[CKAsset setFileURL:]
  -[CKAsset setRecordKey:]
  -[CKAsset initWithFileURL:]
  -[CKAsset setFileID:]
  -[CKAsset fileURL]
  -[CKAsset setShouldReadAssetContentUsingClientProxy:]
  -[CKAsset initWithFileDescriptor:]
  -[CKAsset clearAssetKey]
  -[CKAsset setAuthToken:]
  -[CKAsset setDeviceID:]
  -[CKAsset shouldReadAssetContentUsingClientProxy]
  -[CKAsset encodeWithCoder:]
  -[CKAsset record]
  -[CKAsset paddedFileSize]
  -[CKAsset assetReference]
  -[CKAsset fileID]
  -[CKAsset downloadURLExpiration]
  -[CKAsset authToken]
  -[CKAsset fileHandle]
  -[CKAsset setBoundaryKey:]
  -[CKAsset setUUID:]
  -[CKAsset setShouldReadRawEncryptedData:]
  -[CKAsset assetKey]
  -[CKAsset .cxx_destruct]
  -[CKAsset wrappedAssetKey]
  -[CKAsset downloadPreauthorization]
  -[CKAsset constructedAssetDownloadParameters]
  -[CKAsset referenceSignature]
  -[CKAsset setRequestor:]
  -[CKAsset UUID]
  -[CKAsset constructedAssetEstimatedSize]
  -[CKAsset setMergeableDeltaID:]
  -[CKAsset setConstructedAssetEstimatedSize:]
  -[CKAsset shouldReadRawEncryptedData]
  -[CKAsset downloadURL]
  -[CKAsset setFileHandle:]
  -[CKAsset setContentBaseURL:]
  -[CKAsset size]
  -[CKAsset recordKey]
  -[CKAsset setClearAssetKey:]
  -[CKAsset setConstructedAssetDownloadParameters:]
  -[CKAsset setAssetReference:]
  -[CKAsset contentBaseURL]
  -[CKAsset setDownloadTokenExpiration:]
  -[CKAsset mergeableDeltaID]
  -[CKAsset uploaded]
  -[CKAsset constructedAssetDownloadURL]
  -[CKAsset setAssetChunkerOptions:]
  -[CKAsset itemTypeHint]
  -[CKAsset uploadReceipt]
  -[CKAsset setDownloadBaseURL:]
  -[CKAsset boundaryKey]
  -[CKAsset CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKAsset _initBare]
  -[CKAsset isRereferencedAssetUpload]
  -[CKAsset setSize:]
  -[CKAsset setDownloadPreauthorization:]
  -[CKAsset usesAssetDownloadStagingManager]
  -[CKAsset setSignature:]
  -[CKAsset downloadBaseURL]
  -[CKAsset setDownloadURLExpiration:]
  -[CKAsset setPaddedFileSize:]
  -[CKAsset assetChunkerOptions]
  -[CKAsset setReferenceSignature:]
  -[CKAsset downloadTokenExpiration]
  -[CKAsset setUsesAssetDownloadStagingManager:]
  -[CKAsset setUploadReceiptExpiration:]
  -[CKAsset setUploadReceipt:]
  -[CKAsset setWrappedAssetKey:]
  -[CKAsset init]
  -[CKAsset setItemTypeHint:]
  -[CKAsset initWithCoder:]
  -[CKAsset setConstructedAssetDownloadURL:]
  -[CKAsset wasCached]
  -[CKAsset setWasCached:]
  -[CKAsset initWithFileURL:signature:]
  -[CKAsset initWithFileURL:signature:assetHandleUUID:]
  -[CKAsset initWithAssetReference:]
  -[CKAsset initWithDeviceID:fileID:generationID:]
  -[CKAsset initWithCopyInfo:fileURL:]
  -[CKAsset initWithAssetContent:itemTypeHint:]
  -[CKAsset assetHandleUUID]
  -[CKAsset isConstructedAsset]
  -[CKAsset downloadURLWithFileName:]
  -[CKAsset nullableFileURL]
  -[CKAsset setNullableFileURL:]
  -[CKAsset assetContent]
  -[CKAsset setAssetContent:]
  -[CKAsset downloadURLTemplate]
  -[CKAsset setDownloadURLTemplate:]
  -[CKAsset storageGroupingPolicy]
  -[CKAsset setStorageGroupingPolicy:]
  -[CKAsset assetTransferOptions]
  -[CKAsset setAssetTransferOptions:]
  -[CKAsset mediaItemMaker]
  -[CKAsset setMediaItemMaker:]
  -[CKAsset constructedAssetDownloadURLTemplate]
  -[CKAsset setConstructedAssetDownloadURLTemplate:]
  -[CKAsset realPathURL]
  -[CKAsset setRealPathURL:]
  -[CKAsset generationCountToSave]
  -[CKAsset setGenerationCountToSave:]
  -[CKAsset assetCopyInfo]
  -[CKAsset setAssetCopyInfo:]
  -[CKAsset exposeAssetKey]
  -[CKAsset setExposeAssetKey:]
  -[CKAsset setUploaded:]
  -[CKAsset downloaded]
  -[CKAsset setDownloaded:]
  -[CKAsset arrayIndex]
  -[CKAsset setArrayIndex:]
  -[CKAsset assetRereferenceInfo]
  -[CKAsset setAssetRereferenceInfo:]
  -[CKAsset uploadRank]
  -[CKAsset setUploadRank:]


CKSchedulerActivity : NSObject <NSCopying>
 @property  NSString *identifier
 @property  CKContainerID *containerID
 @property  long long priority
 @property  BOOL userRequestedBackupTask
 @property  BOOL shouldDefer
 @property  CKContainer *nullableContainer
 @property  CKContainer *container
 @property  NSObject<OS_xpc_object> *xpcActivity
 @property  NSDictionary *undeprecatedAdditionalXPCActivityCriteria
 @property  NSObject<OS_xpc_object> *xpcActivityCriteriaOverrides
 @property  NSArray *relatedApplicationBundleIdentifiers
 @property  NSDictionary *additionalXPCActivityCriteria
 @property  unsigned long expectedTransferSizeBytes
 @property  NSDate *earliestStartDate

  // class methods
  +[CKSchedulerActivity defaultRelatedApplicationBundleIdentifiersForContainer:]

  // instance methods
  -[CKSchedulerActivity setContainerID:]
  -[CKSchedulerActivity setContainer:]
  -[CKSchedulerActivity containerID]
  -[CKSchedulerActivity setPriority:]
  -[CKSchedulerActivity xpcActivityCriteriaOverrides]
  -[CKSchedulerActivity identifier]
  -[CKSchedulerActivity setXpcActivityCriteriaOverrides:]
  -[CKSchedulerActivity setShouldDefer:]
  -[CKSchedulerActivity initWithIdentifier:container:containerID:priority:]
  -[CKSchedulerActivity setEarliestStartDate:]
  -[CKSchedulerActivity shouldDefer]
  -[CKSchedulerActivity initWithIdentifier:containerID:priority:]
  -[CKSchedulerActivity nullableContainer]
  -[CKSchedulerActivity setExpectedTransferSizeBytes:]
  -[CKSchedulerActivity .cxx_destruct]
  -[CKSchedulerActivity container]
  -[CKSchedulerActivity additionalXPCActivityCriteria]
  -[CKSchedulerActivity setUndeprecatedAdditionalXPCActivityCriteria:]
  -[CKSchedulerActivity setRelatedApplicationBundleIdentifiers:]
  -[CKSchedulerActivity setAdditionalXPCActivityCriteria:]
  -[CKSchedulerActivity setIdentifier:]
  -[CKSchedulerActivity userRequestedBackupTask]
  -[CKSchedulerActivity copyWithZone:]
  -[CKSchedulerActivity priority]
  -[CKSchedulerActivity undeprecatedAdditionalXPCActivityCriteria]
  -[CKSchedulerActivity relatedApplicationBundleIdentifiers]
  -[CKSchedulerActivity expectedTransferSizeBytes]
  -[CKSchedulerActivity CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKSchedulerActivity xpcActivity]
  -[CKSchedulerActivity earliestStartDate]
  -[CKSchedulerActivity setXpcActivity:]
  -[CKSchedulerActivity setUserRequestedBackupTask:]
  -[CKSchedulerActivity initWithIdentifier:container:priority:]


CKMovePhotosOperation : CKDatabaseOperation <CKMovePhotosOperationCallbacks>
 @property  NSDictionary *moveChangesBySourceRecordID
 @property  NSDictionary *moveChangesByDestinationRecordID
 @property  NSMutableDictionary *recordErrorsBySourceRecordID
 @property  <CKMovePhotosOperationCallbacks> *clientOperationCallbackProxy
 @property  CKMovePhotosOperationInfo *operationInfo
 @property  NSArray *moveChanges
 @property  CKDatabase *sourceDatabase
 @property  @? perRecordProgressBlock
 @property  @? perRecordMoveBlock
 @property  @? movePhotosCompletionBlock

  // class methods
  +[CKMovePhotosOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKMovePhotosOperation setPerRecordProgressBlock:]
  -[CKMovePhotosOperation activityCreate]
  -[CKMovePhotosOperation perRecordProgressBlock]
  -[CKMovePhotosOperation _finishOnCallbackQueueWithError:]
  -[CKMovePhotosOperation handleSaveForRecordID:recordMetadata:error:]
  -[CKMovePhotosOperation moveChangesByDestinationRecordID]
  -[CKMovePhotosOperation moveChanges]
  -[CKMovePhotosOperation .cxx_destruct]
  -[CKMovePhotosOperation hasCKOperationCallbacksSet]
  -[CKMovePhotosOperation handleDeleteForRecordID:error:]
  -[CKMovePhotosOperation handleRecordUploadForRecordID:recordKey:arrayIndex:signature:size:paddedFileSize:uploaded:uploadReceipt:uploadReceiptExpiration:wrappedAssetKey:clearAssetKey:referenceSignature:]
  -[CKMovePhotosOperation handleRecordIDsInFlight:reply:]
  -[CKMovePhotosOperation performCKOperation]
  -[CKMovePhotosOperation fillFromOperationInfo:]
  -[CKMovePhotosOperation CKOperationShouldRun:]
  -[CKMovePhotosOperation setMoveChanges:]
  -[CKMovePhotosOperation handleRecordModificationForRecordID:didProgress:]
  -[CKMovePhotosOperation fillOutOperationInfo:]
  -[CKMovePhotosOperation init]
  -[CKMovePhotosOperation setMoveChangesByDestinationRecordID:]
  -[CKMovePhotosOperation handleMoveForSourceRecordID:destinationMetadata:moveMarkerMetadata:error:]
  -[CKMovePhotosOperation initWithMoveChanges:sourceDatabase:]
  -[CKMovePhotosOperation setPerRecordMoveBlock:]
  -[CKMovePhotosOperation perRecordMoveBlock]
  -[CKMovePhotosOperation setMovePhotosCompletionBlock:]
  -[CKMovePhotosOperation movePhotosCompletionBlock]
  -[CKMovePhotosOperation _trackAssetsToUpload]
  -[CKMovePhotosOperation sourceDatabase]
  -[CKMovePhotosOperation setSourceDatabase:]
  -[CKMovePhotosOperation moveChangesBySourceRecordID]
  -[CKMovePhotosOperation setMoveChangesBySourceRecordID:]
  -[CKMovePhotosOperation recordErrorsBySourceRecordID]
  -[CKMovePhotosOperation setRecordErrorsBySourceRecordID:]


CKMovePhotosOperationInfo : CKModifyRecordsOperationInfo <NSSecureCoding>
 @property  NSArray *moveChanges
 @property  long long sourceDatabaseScope

  // class methods
  +[CKMovePhotosOperationInfo supportsSecureCoding]

  // instance methods
  -[CKMovePhotosOperationInfo encodeWithCoder:]
  -[CKMovePhotosOperationInfo moveChanges]
  -[CKMovePhotosOperationInfo .cxx_destruct]
  -[CKMovePhotosOperationInfo sourceDatabaseScope]
  -[CKMovePhotosOperationInfo setSourceDatabaseScope:]
  -[CKMovePhotosOperationInfo setMoveChanges:]
  -[CKMovePhotosOperationInfo initWithCoder:]


CKMovePhotosChange : NSObject <NSSecureCoding>
 @property  CKRecordID *sourceRecordID
 @property  NSString *sourceRecordChangeTag
 @property  CKRecord *destinationRecord

  // class methods
  +[CKMovePhotosChange supportsSecureCoding]

  // instance methods
  -[CKMovePhotosChange encodeWithCoder:]
  -[CKMovePhotosChange .cxx_destruct]
  -[CKMovePhotosChange CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKMovePhotosChange initWithCoder:]
  -[CKMovePhotosChange sourceRecordID]
  -[CKMovePhotosChange sourceRecordChangeTag]
  -[CKMovePhotosChange destinationRecord]
  -[CKMovePhotosChange setSourceRecordID:]
  -[CKMovePhotosChange setSourceRecordChangeTag:]
  -[CKMovePhotosChange setDestinationRecord:]


CKDiscretionaryOptions : NSObject <NSSecureCoding, NSCoding>
 @property  NSString *applicationBundleIdentifierOverride
 @property  NSString *secondarySourceApplicationBundleId
 @property  double timeoutIntervalForResource
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsExpensiveNetworkAccess
 @property  unsigned long discretionaryNetworkBehavior
 @property  BOOL requiresNetworkAccess

  // class methods
  +[CKDiscretionaryOptions supportsSecureCoding]

  // instance methods
  -[CKDiscretionaryOptions setAllowsCellularAccess:]
  -[CKDiscretionaryOptions discretionaryNetworkBehavior]
  -[CKDiscretionaryOptions setDiscretionaryNetworkBehavior:]
  -[CKDiscretionaryOptions setTimeoutIntervalForResource:]
  -[CKDiscretionaryOptions allowsExpensiveNetworkAccess]
  -[CKDiscretionaryOptions setAllowsExpensiveNetworkAccess:]
  -[CKDiscretionaryOptions allowsCellularAccess]
  -[CKDiscretionaryOptions secondarySourceApplicationBundleId]
  -[CKDiscretionaryOptions setApplicationBundleIdentifierOverride:]
  -[CKDiscretionaryOptions encodeWithCoder:]
  -[CKDiscretionaryOptions applicationBundleIdentifierOverride]
  -[CKDiscretionaryOptions timeoutIntervalForResource]
  -[CKDiscretionaryOptions setSecondarySourceApplicationBundleId:]
  -[CKDiscretionaryOptions .cxx_destruct]
  -[CKDiscretionaryOptions setRequiresNetworkAccess:]
  -[CKDiscretionaryOptions requiresNetworkAccess]
  -[CKDiscretionaryOptions initWithCoder:]


CKDPRecordIdentifier : PBCodable <NSCopying>
 @property  BOOL hasValue
 @property  CKDPIdentifier *value
 @property  BOOL hasZoneIdentifier
 @property  CKDPRecordZoneIdentifier *zoneIdentifier

  // instance methods
  -[CKDPRecordIdentifier hasZoneIdentifier]
  -[CKDPRecordIdentifier setZoneIdentifier:]
  -[CKDPRecordIdentifier zoneIdentifier]
  -[CKDPRecordIdentifier copyTo:]
  -[CKDPRecordIdentifier .cxx_destruct]
  -[CKDPRecordIdentifier hasValue]
  -[CKDPRecordIdentifier mergeFrom:]
  -[CKDPRecordIdentifier setValue:]
  -[CKDPRecordIdentifier dictionaryRepresentation]
  -[CKDPRecordIdentifier copyWithZone:]
  -[CKDPRecordIdentifier value]
  -[CKDPRecordIdentifier readFrom:]
  -[CKDPRecordIdentifier writeTo:]
  -[CKDPRecordIdentifier isEqual:]


CKUserIdentityLookupInfo : NSObject <CKXPCSuitableString, NSSecureCoding, NSCopying>
 @property  NSString *emailAddress
 @property  CKRecordID *userRecordID
 @property  NSString *phoneNumber
 @property  BOOL shouldReportMissingIdentity
 @property  NSData *encryptedPersonalInfo

  // class methods
  +[CKUserIdentityLookupInfo supportsSecureCoding]
  +[CKUserIdentityLookupInfo lookupInfosWithPhoneNumbers:]
  +[CKUserIdentityLookupInfo lookupInfosWithEmails:]
  +[CKUserIdentityLookupInfo lookupInfosWithRecordIDs:]

  // instance methods
  -[CKUserIdentityLookupInfo ckShortDescription]
  -[CKUserIdentityLookupInfo setEmailAddress:]
  -[CKUserIdentityLookupInfo phoneNumber]
  -[CKUserIdentityLookupInfo emailAddress]
  -[CKUserIdentityLookupInfo setUserRecordID:]
  -[CKUserIdentityLookupInfo encodeWithCoder:]
  -[CKUserIdentityLookupInfo setPhoneNumber:]
  -[CKUserIdentityLookupInfo userRecordID]
  -[CKUserIdentityLookupInfo .cxx_destruct]
  -[CKUserIdentityLookupInfo initWithEmailAddress:]
  -[CKUserIdentityLookupInfo copyWithZone:]
  -[CKUserIdentityLookupInfo CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKUserIdentityLookupInfo isEqual:]
  -[CKUserIdentityLookupInfo initWithCoder:]
  -[CKUserIdentityLookupInfo CKPropertiesDescription]
  -[CKUserIdentityLookupInfo initWithUserRecordID:]
  -[CKUserIdentityLookupInfo encryptedPersonalInfo]
  -[CKUserIdentityLookupInfo setEncryptedPersonalInfo:]
  -[CKUserIdentityLookupInfo initWithPhoneNumber:]
  -[CKUserIdentityLookupInfo lookupField]
  -[CKUserIdentityLookupInfo lookupValue]
  -[CKUserIdentityLookupInfo _stripPersonalInfo]
  -[CKUserIdentityLookupInfo shouldReportMissingIdentity]
  -[CKUserIdentityLookupInfo setShouldReportMissingIdentity:]
  -[CKUserIdentityLookupInfo CKXPCSuitableString]


CKCodeOperation : CKDatabaseOperation <CKOperationInMemoryAssets, CKCodeOperationCallbacks>
 @property  Class responseClass
 @property  NSString *serviceName
 @property  NSString *functionName
 @property  long long destinationServer
 @property  NSURL *destinationServerExplicitURL
 @property  NSArray *requestLocalSerializations
 @property  PBCodable<CKCodeOperationMessageMutation> *response
 @property  NSError *responseError
 @property  <CKCodeOperationCallbacks> *clientOperationCallbackProxy
 @property  CKCodeFunctionInvokeOperationInfo *operationInfo
 @property  @? didSubstituteRequestRecordTransportsBlock
 @property  PBCodable<CKCodeOperationMessageMutation> *request
 @property  @? perRecordCompletionBlock
 @property  @? perRecordProgressBlock
 @property  @? codeOperationCompletionBlock
 @property  @? incompleteResponsePreviewBlock
 @property  BOOL dropInMemoryAssetContentASAP
 @property  BOOL shouldFetchAssetContentInMemory
 @property  CKCodeService *codeService
 @property  NSMutableDictionary *assetInfoByArrayIndexByRecordKeyByRecordID

  // class methods
  +[CKCodeOperation operationDaemonCallbackProtocol]
  +[CKCodeOperation operationInfoClass]
  +[CKCodeOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKCodeOperation setServiceName:]
  -[CKCodeOperation responseError]
  -[CKCodeOperation shouldFetchAssetContentInMemory]
  -[CKCodeOperation responseClass]
  -[CKCodeOperation setPerRecordProgressBlock:]
  -[CKCodeOperation setShouldFetchAssetContentInMemory:]
  -[CKCodeOperation activityCreate]
  -[CKCodeOperation perRecordProgressBlock]
  -[CKCodeOperation _finishOnCallbackQueueWithError:]
  -[CKCodeOperation setAssetInfoByArrayIndexByRecordKeyByRecordID:]
  -[CKCodeOperation perRecordCompletionBlock]
  -[CKCodeOperation setPerRecordCompletionBlock:]
  -[CKCodeOperation setRequest:]
  -[CKCodeOperation setResponseError:]
  -[CKCodeOperation serviceName]
  -[CKCodeOperation handleAssetDataForRecordID:recordKey:arrayIndex:data:offset:]
  -[CKCodeOperation .cxx_destruct]
  -[CKCodeOperation hasCKOperationCallbacksSet]
  -[CKCodeOperation handleFetchForRecordID:didProgress:]
  -[CKCodeOperation handleFetchForRecordID:record:error:]
  -[CKCodeOperation setResponse:]
  -[CKCodeOperation performCKOperation]
  -[CKCodeOperation fillFromOperationInfo:]
  -[CKCodeOperation CKOperationShouldRun:]
  -[CKCodeOperation response]
  -[CKCodeOperation functionName]
  -[CKCodeOperation fillOutOperationInfo:]
  -[CKCodeOperation assetInfoByArrayIndexByRecordKeyByRecordID]
  -[CKCodeOperation setDropInMemoryAssetContentASAP:]
  -[CKCodeOperation dropInMemoryAssetContentASAP]
  -[CKCodeOperation request]
  -[CKCodeOperation setFunctionName:]
  -[CKCodeOperation handleReplaceLocalWithWireSerializations:encryptedMasterKeys:wireEnvelopes:reply:]
  -[CKCodeOperation handleInitialResponseReceived:reply:]
  -[CKCodeOperation handleReplaceWireSerializationsWithRecords:]
  -[CKCodeOperation initWithFunctionName:responseClass:]
  -[CKCodeOperation initWithServiceName:functionName:responseClass:]
  -[CKCodeOperation setCodeService:]
  -[CKCodeOperation setCodeOperationCompletionBlock:]
  -[CKCodeOperation codeOperationCompletionBlock]
  -[CKCodeOperation setIncompleteResponsePreviewBlock:]
  -[CKCodeOperation incompleteResponsePreviewBlock]
  -[CKCodeOperation setDidSubstituteRequestRecordTransportsBlock:]
  -[CKCodeOperation didSubstituteRequestRecordTransportsBlock]
  -[CKCodeOperation setResponseClass:]
  -[CKCodeOperation codeService]
  -[CKCodeOperation destinationServer]
  -[CKCodeOperation setDestinationServer:]
  -[CKCodeOperation destinationServerExplicitURL]
  -[CKCodeOperation setDestinationServerExplicitURL:]
  -[CKCodeOperation requestLocalSerializations]
  -[CKCodeOperation setRequestLocalSerializations:]


CKDeviceToDeviceShareInvitationToken : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *sharingInvitationData
 @property  NSURL *shareURL
 @property  NSString *participantID

  // class methods
  +[CKDeviceToDeviceShareInvitationToken supportsSecureCoding]

  // instance methods
  -[CKDeviceToDeviceShareInvitationToken encodeWithCoder:]
  -[CKDeviceToDeviceShareInvitationToken .cxx_destruct]
  -[CKDeviceToDeviceShareInvitationToken participantID]
  -[CKDeviceToDeviceShareInvitationToken copyWithZone:]
  -[CKDeviceToDeviceShareInvitationToken shareURL]
  -[CKDeviceToDeviceShareInvitationToken isEqual:]
  -[CKDeviceToDeviceShareInvitationToken init]
  -[CKDeviceToDeviceShareInvitationToken initWithCoder:]
  -[CKDeviceToDeviceShareInvitationToken CKPropertiesDescription]
  -[CKDeviceToDeviceShareInvitationToken initWithSharingInvitationData:shareURL:]
  -[CKDeviceToDeviceShareInvitationToken initWithSharingInvitationData:shareURL:participantID:]
  -[CKDeviceToDeviceShareInvitationToken sharingInvitationData]


CKCodeServiceImplementation : NSObject
 @property  CKContainerImplementation *containerImplementation
 @property  NSObject<OS_dispatch_queue> *underlyingDispatchQueue
 @property  NSString *serviceName
 @property  NSURL *serviceInstanceURL
 @property  NSNumber *boxedDatabaseScope
 @property  NSOperationQueue *operationQueue

  // instance methods
  -[CKCodeServiceImplementation CKStatusReportArray]
  -[CKCodeServiceImplementation setContainerImplementation:]
  -[CKCodeServiceImplementation setUnderlyingDispatchQueue:]
  -[CKCodeServiceImplementation underlyingDispatchQueue]
  -[CKCodeServiceImplementation containerImplementation]
  -[CKCodeServiceImplementation operationQueue]
  -[CKCodeServiceImplementation serviceName]
  -[CKCodeServiceImplementation .cxx_destruct]
  -[CKCodeServiceImplementation addOperation:wrappingCodeService:convenienceConfiguration:]
  -[CKCodeServiceImplementation _initWithContainerImplementation:serviceName:boxedDatabaseScope:serviceInstanceURL:]
  -[CKCodeServiceImplementation CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKCodeServiceImplementation serviceInstanceURL]
  -[CKCodeServiceImplementation boxedDatabaseScope]


CKCodeService : NSObject
 @property  CKContainer *container
 @property  CKCodeServiceImplementation *implementation
 @property  NSString *serviceName
 @property  NSURL *serviceInstanceURL

  // instance methods
  -[CKCodeService implementation]
  -[CKCodeService addOperation:]
  -[CKCodeService _initWithImplementation:container:]
  -[CKCodeService serviceName]
  -[CKCodeService .cxx_destruct]
  -[CKCodeService container]
  -[CKCodeService CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKCodeService serviceInstanceURL]
  -[CKCodeService init]
  -[CKCodeService boxedDatabaseScope]


CKShare : CKRecord <CKPropertiesDescription, NSSecureCoding, NSCopying>
 @property  NSMutableSet *addedParticipantIDs
 @property  NSMutableSet *removedParticipantIDs
 @property  NSMutableArray *lastFetchedParticipants
 @property  BOOL encodeAllowsReadOnlyParticipantsToSeeEachOther
 @property  NSMutableArray *allParticipants
 @property  NSData *publicSharingIdentity
 @property  long long participantVisibility
 @property  long long participantSelfRemovalBehavior
 @property  BOOL allowsAnonymousPublicAccess
 @property  CKContainerID *containerID
 @property  CKRecordID *rootRecordID
 @property  NSData *invitedProtectionData
 @property  NSString *invitedProtectionEtag
 @property  NSString *previousInvitedProtectionEtag
 @property  NSData *publicProtectionData
 @property  NSString *publicProtectionEtag
 @property  NSString *previousPublicProtectionEtag
 @property  BOOL isZoneWideShare
 @property  NSArray *invitedKeysToRemove
 @property  BOOL serializePersonalInfo
 @property  CKShareID *shareID
 @property  long long publicPermission
 @property  NSURL *URL
 @property  NSArray *participants
 @property  CKShareParticipant *owner
 @property  CKShareParticipant *currentUserParticipant
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKShare supportsSecureCoding]

  // instance methods
  -[CKShare setContainerID:]
  -[CKShare owner]
  -[CKShare CKDescribePropertiesUsing:]
  -[CKShare participants]
  -[CKShare initWithRecordZoneID:]
  -[CKShare containerID]
  -[CKShare shareID]
  -[CKShare setInvitedKeysToRemove:]
  -[CKShare .cxx_destruct]
  -[CKShare setShareID:]
  -[CKShare addParticipant:]
  -[CKShare initWithRecordType:recordID:]
  -[CKShare copyWithZone:]
  -[CKShare invitedKeysToRemove]
  -[CKShare encryptedPublicSharingKey]
  -[CKShare shareURL]
  -[CKShare redactedDescription]
  -[CKShare setPublicPermission:]
  -[CKShare removeParticipant:]
  -[CKShare publicPermission]
  -[CKShare init]
  -[CKShare CKAssignToContainerWithID:]
  -[CKShare initWithCoder:]
  -[CKShare currentUserParticipant]
  -[CKShare initWithRecordType:zoneID:]
  -[CKShare encodeSystemFieldsWithCoder:]
  -[CKShare initWithRecordType:]
  -[CKShare copyWithOriginalValues]
  -[CKShare updateWithSavedRecordXPCMetadata:shouldOnlySaveAssetContent:]
  -[CKShare canHostServerURLInfo]
  -[CKShare hasEncryptedData]
  -[CKShare setWantsPublicSharingKey:]
  -[CKShare _stripPersonalInfo]
  -[CKShare initWithRootRecord:]
  -[CKShare initWithRootRecord:shareID:]
  -[CKShare _initWithShareRecordID:]
  -[CKShare _addOwnerParticipant]
  -[CKShare _commonCKShareInit]
  -[CKShare _removePendingPrivateAndAdminParticipants]
  -[CKShare _removeAllParticipants]
  -[CKShare _setPublicPermissionNoSideEffects:]
  -[CKShare setAllowsReadOnlyParticipantsToSeeEachOther:]
  -[CKShare allowsReadOnlyParticipantsToSeeEachOther]
  -[CKShare isZoneWideShare]
  -[CKShare clearModifiedParticipants]
  -[CKShare _knownParticipantEqualToParticipant:]
  -[CKShare _addParticipantBypassingChecks:]
  -[CKShare _removeParticipantBypassingChecks:]
  -[CKShare addedParticipants]
  -[CKShare removedParticipants]
  -[CKShare _participantArray:containsEquivalentWithPermissionsParticipant:]
  -[CKShare _participantArray:isEquivalentToArray:]
  -[CKShare resetFetchedParticipants]
  -[CKShare registerFetchedParticipant:]
  -[CKShare updateFromServerShare:]
  -[CKShare _addParticipantEmails:phoneNumbers:asReadWrite:inContainer:completionHandler:]
  -[CKShare _copyWithoutPersonalInfo]
  -[CKShare _getDecryptedShareInContainer:completionHandler:]
  -[CKShare publicSharingIdentity]
  -[CKShare setPublicSharingIdentity:]
  -[CKShare setParticipantVisibility:]
  -[CKShare setParticipantSelfRemovalBehavior:]
  -[CKShare allNonOwnerParticipantsHavePermission:]
  -[CKShare allNonOwnerParticipantsHaveRole:]
  -[CKShare addedParticipantIDs]
  -[CKShare setAddedParticipantIDs:]
  -[CKShare removedParticipantIDs]
  -[CKShare setRemovedParticipantIDs:]
  -[CKShare lastFetchedParticipants]
  -[CKShare setLastFetchedParticipants:]
  -[CKShare encodeAllowsReadOnlyParticipantsToSeeEachOther]
  -[CKShare setEncodeAllowsReadOnlyParticipantsToSeeEachOther:]
  -[CKShare allParticipants]
  -[CKShare setAllParticipants:]
  -[CKShare participantVisibility]
  -[CKShare participantSelfRemovalBehavior]
  -[CKShare allowsAnonymousPublicAccess]
  -[CKShare setAllowsAnonymousPublicAccess:]
  -[CKShare rootRecordID]
  -[CKShare setRootRecordID:]
  -[CKShare invitedProtectionData]
  -[CKShare setInvitedProtectionData:]
  -[CKShare invitedProtectionEtag]
  -[CKShare setInvitedProtectionEtag:]
  -[CKShare previousInvitedProtectionEtag]
  -[CKShare setPreviousInvitedProtectionEtag:]
  -[CKShare publicProtectionData]
  -[CKShare setPublicProtectionData:]
  -[CKShare publicProtectionEtag]
  -[CKShare setPublicProtectionEtag:]
  -[CKShare previousPublicProtectionEtag]
  -[CKShare setPreviousPublicProtectionEtag:]
  -[CKShare serializePersonalInfo]
  -[CKShare setSerializePersonalInfo:]


CKBehaviorOptions : NSObject
 @property  BOOL didReadAutomatedDeviceGroup
 @property  NSString *automatedDeviceGroup

  // class methods
  +[CKBehaviorOptions sharedOptions]

  // instance methods
  -[CKBehaviorOptions allowExpiredDNSBehavior]
  -[CKBehaviorOptions fakeManateeEnabled]
  -[CKBehaviorOptions maxBatchSize]
  -[CKBehaviorOptions buildVersion]
  -[CKBehaviorOptions vettedEmailsTestFormat]
  -[CKBehaviorOptions customShareServiceBaseURL]
  -[CKBehaviorOptions assetEvictionGracePeriodOnHighWatermarkWithDefaultValue:]
  -[CKBehaviorOptions setBuildVersion:]
  -[CKBehaviorOptions setTestRunIDHeader:]
  -[CKBehaviorOptions setShareURLToAccountIDSystemAcceptationOverrides:]
  -[CKBehaviorOptions automatedDeviceGroup]
  -[CKBehaviorOptions setPCSCacheValidTime:]
  -[CKBehaviorOptions backgroundSessionConnectionPoolLimitWithDefaultValue:]
  -[CKBehaviorOptions packageGCPeriod]
  -[CKBehaviorOptions setLogTraffic:]
  -[CKBehaviorOptions setCustomShareServiceBaseURL:]
  -[CKBehaviorOptions setUsePreauth:]
  -[CKBehaviorOptions recordCacheSizeLimit]
  -[CKBehaviorOptions deviceCountOverride]
  -[CKBehaviorOptions setFakeManateeOverride:]
  -[CKBehaviorOptions shouldProfileSQL]
  -[CKBehaviorOptions allowKeyRollingInAllContainers]
  -[CKBehaviorOptions enableMMCSMetricsWithDefaultValue:]
  -[CKBehaviorOptions setUseEnhancedPCSEncryptionContext:]
  -[CKBehaviorOptions shareURLToAccountIDSystemAcceptationOverrides]
  -[CKBehaviorOptions CKCtlPrompt]
  -[CKBehaviorOptions shareAcceptorRetrievingDialogDelay]
  -[CKBehaviorOptions rollRecordPCSMasterKeys]
  -[CKBehaviorOptions cachedRecordExpiryTime]
  -[CKBehaviorOptions setFakeManateeEnabled:]
  -[CKBehaviorOptions CFNetworkLogging]
  -[CKBehaviorOptions setSqlBatchCount:]
  -[CKBehaviorOptions shouldDecryptRecordsBeforeSave]
  -[CKBehaviorOptions setShouldProfileSQL:]
  -[CKBehaviorOptions logTraffic]
  -[CKBehaviorOptions setOptimisticPCS:]
  -[CKBehaviorOptions setTrafficLogMaximumDataSize:]
  -[CKBehaviorOptions rollZonePCSIdentities]
  -[CKBehaviorOptions shareAcceptorRetrievingDialogMinPeriod]
  -[CKBehaviorOptions setTranscoderPermittedRemoteMeasurement:]
  -[CKBehaviorOptions _setArrayPref:forKey:]
  -[CKBehaviorOptions dealloc]
  -[CKBehaviorOptions PCSCacheSize]
  -[CKBehaviorOptions maxPackageDownloadsPerBatchWithDefaultValue:]
  -[CKBehaviorOptions setCompressRequests:]
  -[CKBehaviorOptions setCustomDeviceServiceBaseURL:]
  -[CKBehaviorOptions setSendDebugHeader:]
  -[CKBehaviorOptions setMaximumMergeableDeltaRequestSize:]
  -[CKBehaviorOptions setupBaseURL]
  -[CKBehaviorOptions xpcConnectionTimeoutSecondsWithDefaultValue:]
  -[CKBehaviorOptions productName]
  -[CKBehaviorOptions recordCacheExpireDelay]
  -[CKBehaviorOptions setSharingOptionsSummaryString:]
  -[CKBehaviorOptions customCodeServiceBaseURL]
  -[CKBehaviorOptions testRunIDHeader]
  -[CKBehaviorOptions setRollZonePCSIdentities:]
  -[CKBehaviorOptions .cxx_destruct]
  -[CKBehaviorOptions defaultRetryAfter]
  -[CKBehaviorOptions setProductName:]
  -[CKBehaviorOptions setCachedRecordExpiryTime:]
  -[CKBehaviorOptions setProductVersion:]
  -[CKBehaviorOptions setOperationTimeout:]
  -[CKBehaviorOptions setRollZoneSharingKeys:]
  -[CKBehaviorOptions clientThrottleQueueWidth]
  -[CKBehaviorOptions _getDictionaryOptionForKey:defaultValue:]
  -[CKBehaviorOptions setModTimeInAssetCacheEviction:]
  -[CKBehaviorOptions resetMaximumMergeableDeltaRequestSize]
  -[CKBehaviorOptions minTTRPromptInterval]
  -[CKBehaviorOptions setUseStingray:]
  -[CKBehaviorOptions customDeviceServiceBaseURL]
  -[CKBehaviorOptions sendDebugHeader]
  -[CKBehaviorOptions savedErrorCount]
  -[CKBehaviorOptions compressRequests]
  -[CKBehaviorOptions recordNamesForFakingDecryptionFailure]
  -[CKBehaviorOptions rollZoneSharingKeys]
  -[CKBehaviorOptions transcoderPermittedRemoteMeasurement]
  -[CKBehaviorOptions didReadAutomatedDeviceGroup]
  -[CKBehaviorOptions maximumMergeableDeltaRequestSize]
  -[CKBehaviorOptions PCSRetryCount]
  -[CKBehaviorOptions usePreauth]
  -[CKBehaviorOptions maxRecordPCSMasterKeyRolls]
  -[CKBehaviorOptions isDeveloperInstall]
  -[CKBehaviorOptions sqlBatchCount]
  -[CKBehaviorOptions productVersion]
  -[CKBehaviorOptions containerIdentifierToForceFatalManateeZoneDecryptionFailure]
  -[CKBehaviorOptions observeValueForKeyPath:ofObject:change:context:]
  -[CKBehaviorOptions setDisableCaching:]
  -[CKBehaviorOptions useEnhancedPCSEncryptionContext]
  -[CKBehaviorOptions setCustomCodeServiceBaseURL:]
  -[CKBehaviorOptions setRecordNamesForFakingDecryptionFailure:]
  -[CKBehaviorOptions pipelineFetchAllChangesRequests]
  -[CKBehaviorOptions maximumQueuedFetchWaitTime]
  -[CKBehaviorOptions altDSIDsToManateeAvailabilitiesOverrides]
  -[CKBehaviorOptions sqlBatchTime]
  -[CKBehaviorOptions disableCaching]
  -[CKBehaviorOptions longlivedOperationMaxRetryCount]
  -[CKBehaviorOptions PCSCacheMinTime]
  -[CKBehaviorOptions releaseType]
  -[CKBehaviorOptions sharingOptionsSummaryString]
  -[CKBehaviorOptions setIsCurrentAppleAccountSuspended:]
  -[CKBehaviorOptions setRollRecordPCSMasterKeys:]
  -[CKBehaviorOptions setSqlBatchTime:]
  -[CKBehaviorOptions isCurrentAppleAccountSuspended]
  -[CKBehaviorOptions setRollRecordMasterKeysOnUnshare:]
  -[CKBehaviorOptions customMetricsServiceBaseURL]
  -[CKBehaviorOptions setContainerIdentifierToEmailOverrides:]
  -[CKBehaviorOptions setForceUploadRequestActivitiesToRunImmediately:]
  -[CKBehaviorOptions customCloudDBBaseURL]
  -[CKBehaviorOptions setSetupBaseURL:]
  -[CKBehaviorOptions recordCacheEntryCountLimit]
  -[CKBehaviorOptions setAltDSIDsToManateeAvailabilitiesOverrides:]
  -[CKBehaviorOptions fakeManateeOverride]
  -[CKBehaviorOptions setDidReadAutomatedDeviceGroup:]
  -[CKBehaviorOptions configBaseURL]
  -[CKBehaviorOptions transcoderFunctionName]
  -[CKBehaviorOptions maximumThrottleSeconds]
  -[CKBehaviorOptions setCKCtlPrompt:]
  -[CKBehaviorOptions setCustomMetricsServiceBaseURL:]
  -[CKBehaviorOptions setTranscoderFunctionName:]
  -[CKBehaviorOptions setTranscoderServiceName:]
  -[CKBehaviorOptions setAutomatedDeviceGroup:]
  -[CKBehaviorOptions transcoderServiceName]
  -[CKBehaviorOptions useEncryption]
  -[CKBehaviorOptions setCustomCloudDBBaseURL:]
  -[CKBehaviorOptions publicIdentitiesExpirationTimeout]
  -[CKBehaviorOptions setUseEncryption:]
  -[CKBehaviorOptions evictRecentAssets]
  -[CKBehaviorOptions isAppleInternalInstall]
  -[CKBehaviorOptions setDeviceCountOverride:]
  -[CKBehaviorOptions PCSCacheValidTime]
  -[CKBehaviorOptions setConfigBaseURL:]
  -[CKBehaviorOptions assetEvictionGracePeriodWithDefaultValue:]
  -[CKBehaviorOptions setAllowKeyRollingInAllContainers:]
  -[CKBehaviorOptions _init]
  -[CKBehaviorOptions setContainerIdentifierToForceFatalManateeZoneDecryptionFailure:]
  -[CKBehaviorOptions setCFNetworkLogging:]
  -[CKBehaviorOptions rollRecordMasterKeysOnUnshare]
  -[CKBehaviorOptions maxPackageUploadsPerBatchWithDefaultValue:]
  -[CKBehaviorOptions _setPref:forKey:]
  -[CKBehaviorOptions sandboxCloudD]
  -[CKBehaviorOptions useModTimeInAssetCacheEviction]
  -[CKBehaviorOptions containerIdentifierToEmailOverrides]


CKPlaceholderOperation : NSOperation
  // instance methods
  -[CKPlaceholderOperation isFinished]
  -[CKPlaceholderOperation isConcurrent]
  -[CKPlaceholderOperation .cxx_destruct]
  -[CKPlaceholderOperation isExecuting]
  -[CKPlaceholderOperation start]
  -[CKPlaceholderOperation CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKPlaceholderOperation main]


CKOperation : NSOperation <CKOperationCallbacks, CKThrottlingCriteria>
 @property  CKOperationMetrics *metrics
 @property  BOOL usesBackgroundSession
 @property  NSMutableDictionary *lifecycleCallbacks
 @property  BOOL isOutstandingOperation
 @property  CKOperationConfiguration *convenienceOperationConfiguration
 @property  CKOperationGroup *convenienceOperationGroup
 @property  NSError *error
 @property  NSString *operationID
 @property  BOOL isFinishingOnCallbackQueue
 @property  BOOL canDropItemResultsEarly
 @property  CKOperationInfo *operationInfo
 @property  CKLogicalDeviceContext *deviceContext
 @property  CKOperationCallbackProxy *clientOperationCallbackProxy
 @property  CKEventMetric *operationMetric
 @property  BOOL queueHasStarted
 @property  BOOL _ckRaiseInGeneratedCallbackImplementation
 @property  CKOperationMMCSRequestOptions *MMCSRequestOptions
 @property  unsigned long requestOriginator
 @property  BOOL preferAnonymousRequests
 @property  BOOL isFinished
 @property  CKOperationConfiguration *resolvedConfiguration
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  @? requestCompletedBlock
 @property  NSDictionary *additionalRequestHTTPHeaders
 @property  CKOperationConfiguration *configuration
 @property  CKOperationGroup *group
 @property  @? longLivedOperationWasPersistedBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKOperation operationDaemonCallbackProtocol]
  +[CKOperation daemonCallbackCompletionSelector]
  +[CKOperation operationInfoClass]
  +[CKOperation applyDaemonCallbackInterfaceTweaks:]
  +[CKOperation operationClass]
  +[CKOperation setOperationIDPrefix:]
  +[CKOperation operationIDPrefix]
  +[CKOperation assetInfoForOperation:recordID:recordKey:arrayIndex:]
  +[CKOperation _wireUpAssetContentForOperation:inRecord:checkSignatures:outError:]

  // instance methods
  -[CKOperation setAdditionalRequestHTTPHeaders:]
  -[CKOperation finishWithError:]
  -[CKOperation setAllowsCellularAccess:]
  -[CKOperation setTimeoutIntervalForResource:]
  -[CKOperation operationGroupName]
  -[CKOperation setConfiguration:]
  -[CKOperation ckShortDescription]
  -[CKOperation setContainer:]
  -[CKOperation additionalRequestHTTPHeaders]
  -[CKOperation allowsCellularAccess]
  -[CKOperation containerID]
  -[CKOperation applicationBundleIdentifierForContainerAccess]
  -[CKOperation preferAnonymousRequests]
  -[CKOperation activityCreate]
  -[CKOperation isFinished]
  -[CKOperation setCompletionBlock:]
  -[CKOperation _finishOnCallbackQueueWithError:]
  -[CKOperation setQualityOfService:]
  -[CKOperation setLongLived:]
  -[CKOperation setPreferAnonymousRequests:]
  -[CKOperation isConcurrent]
  -[CKOperation setCallbackQueue:]
  -[CKOperation unitTestOverrides]
  -[CKOperation deviceContext]
  -[CKOperation timeoutIntervalForRequest]
  -[CKOperation callbackQueue]
  -[CKOperation error]
  -[CKOperation timeoutIntervalForResource]
  -[CKOperation configuration]
  -[CKOperation qualityOfService]
  -[CKOperation openFileWithOpenInfo:reply:]
  -[CKOperation dealloc]
  -[CKOperation clientOperationCallbackProxy]
  -[CKOperation .cxx_destruct]
  -[CKOperation setError:]
  -[CKOperation hasCKOperationCallbacksSet]
  -[CKOperation container]
  -[CKOperation isExecuting]
  -[CKOperation setTimeoutIntervalForRequest:]
  -[CKOperation isLongLived]
  -[CKOperation transitionToFinished]
  -[CKOperation setRequestOriginator:]
  -[CKOperation performCKOperation]
  -[CKOperation fillFromOperationInfo:]
  -[CKOperation operationInfo]
  -[CKOperation operationID]
  -[CKOperation usesBackgroundSession]
  -[CKOperation CKOperationShouldRun:]
  -[CKOperation start]
  -[CKOperation metrics]
  -[CKOperation setMetrics:]
  -[CKOperation group]
  -[CKOperation CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKOperation addUnitTestOverrides:]
  -[CKOperation fillOutOperationInfo:]
  -[CKOperation main]
  -[CKOperation cancelWithError:]
  -[CKOperation cancel]
  -[CKOperation init]
  -[CKOperation setGroup:]
  -[CKOperation setMMCSRequestOptions:]
  -[CKOperation transitionToExecuting]
  -[CKOperation MMCSRequestOptions]
  -[CKOperation requestOriginator]
  -[CKOperation setCanDropItemResultsEarly:]
  -[CKOperation CKShortDescriptionRedact:]
  -[CKOperation handleLongLivedOperationDidPersist]
  -[CKOperation handleSystemDidImposeInfo:]
  -[CKOperation handleRequestDidComplete:]
  -[CKOperation handleFinishWithAssetDownloadStagingInfo:reply:]
  -[CKOperation handleOperationDidCompleteWithMetrics:error:]
  -[CKOperation handleDiscretionaryOperationShouldStart:nonDiscretionary:error:]
  -[CKOperation handleDiscretionaryOperationShouldSuspend]
  -[CKOperation handleDaemonOperationWillStartWithClassName:isTopLevelDaemonOperation:replyBlock:]
  -[CKOperation setLongLivedOperationWasPersistedBlock:]
  -[CKOperation longLivedOperationWasPersistedBlock]
  -[CKOperation setRequestCompletedBlock:]
  -[CKOperation requestCompletedBlock]
  -[CKOperation _createPlaceholderOperation]
  -[CKOperation cancelWithUnderlyingError:]
  -[CKOperation cancelWithUnderlyingError:message:]
  -[CKOperation _cancelDaemonOperation]
  -[CKOperation _finishDiscretionaryOperation]
  -[CKOperation setIsFinished:]
  -[CKOperation configureConvenience:]
  -[CKOperation withContainerScopedDaemon:]
  -[CKOperation _handleRemoteProxyFailureWithError:]
  -[CKOperation _performErrorRateMitigation]
  -[CKOperation resolvedConfiguration]
  -[CKOperation _BOOLForUnitTestOverride:defaultValue:]
  -[CKOperation applyConvenienceConfiguration:]
  -[CKOperation setOperationID:]
  -[CKOperation setUsesBackgroundSession:]
  -[CKOperation lifecycleCallbacks]
  -[CKOperation setLifecycleCallbacks:]
  -[CKOperation isOutstandingOperation]
  -[CKOperation setIsOutstandingOperation:]
  -[CKOperation convenienceOperationConfiguration]
  -[CKOperation setConvenienceOperationConfiguration:]
  -[CKOperation convenienceOperationGroup]
  -[CKOperation setConvenienceOperationGroup:]
  -[CKOperation isFinishingOnCallbackQueue]
  -[CKOperation canDropItemResultsEarly]
  -[CKOperation operationMetric]
  -[CKOperation queueHasStarted]
  -[CKOperation setQueueHasStarted:]
  -[CKOperation _ckRaiseInGeneratedCallbackImplementation]
  -[CKOperation set_ckRaiseInGeneratedCallbackImplementation:]


CKOperationMMCSRequestOptions : NSObject <NSSecureCoding>
 @property  BOOL resumableContainerLimpMode
 @property  BOOL chunkingLibraryCorruptionMode
 @property  BOOL insufficientDiskSpaceMode

  // class methods
  +[CKOperationMMCSRequestOptions supportsSecureCoding]

  // instance methods
  -[CKOperationMMCSRequestOptions encodeWithCoder:]
  -[CKOperationMMCSRequestOptions initWithCoder:]
  -[CKOperationMMCSRequestOptions resumableContainerLimpMode]
  -[CKOperationMMCSRequestOptions setResumableContainerLimpMode:]
  -[CKOperationMMCSRequestOptions chunkingLibraryCorruptionMode]
  -[CKOperationMMCSRequestOptions setChunkingLibraryCorruptionMode:]
  -[CKOperationMMCSRequestOptions insufficientDiskSpaceMode]
  -[CKOperationMMCSRequestOptions setInsufficientDiskSpaceMode:]


CKRecordXPCMetadata : NSObject <NSSecureCoding>
 @property  NSString *etag
 @property  NSDate *creationDate
 @property  NSDate *modificationDate
 @property  NSDate *expirationDate
 @property  CKRecord *serverRecord
 @property  NSData *protectionData
 @property  NSData *pcsKeyID
 @property  NSArray *allPCSKeyIDs
 @property  NSData *zoneishKeyID

  // class methods
  +[CKRecordXPCMetadata supportsSecureCoding]

  // instance methods
  -[CKRecordXPCMetadata pcsKeyID]
  -[CKRecordXPCMetadata setPcsKeyID:]
  -[CKRecordXPCMetadata modificationDate]
  -[CKRecordXPCMetadata setModificationDate:]
  -[CKRecordXPCMetadata serverRecord]
  -[CKRecordXPCMetadata expirationDate]
  -[CKRecordXPCMetadata setServerRecord:]
  -[CKRecordXPCMetadata setExpirationDate:]
  -[CKRecordXPCMetadata encodeWithCoder:]
  -[CKRecordXPCMetadata zoneishKeyID]
  -[CKRecordXPCMetadata protectionData]
  -[CKRecordXPCMetadata allPCSKeyIDs]
  -[CKRecordXPCMetadata etag]
  -[CKRecordXPCMetadata .cxx_destruct]
  -[CKRecordXPCMetadata creationDate]
  -[CKRecordXPCMetadata setEtag:]
  -[CKRecordXPCMetadata setCreationDate:]
  -[CKRecordXPCMetadata setProtectionData:]
  -[CKRecordXPCMetadata setAllPCSKeyIDs:]
  -[CKRecordXPCMetadata setZoneishKeyID:]
  -[CKRecordXPCMetadata initWithCoder:]


CKOperationLifecycleAction : NSObject

CKDatabaseOperation : CKOperation
 @property  CKDatabaseOperationInfo *operationInfo
 @property  CKDatabase *database

  // instance methods
  -[CKDatabaseOperation setDatabase:]
  -[CKDatabaseOperation .cxx_destruct]
  -[CKDatabaseOperation database]
  -[CKDatabaseOperation fillFromOperationInfo:]
  -[CKDatabaseOperation CKOperationShouldRun:]
  -[CKDatabaseOperation databaseScope]
  -[CKDatabaseOperation CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKDatabaseOperation fillOutOperationInfo:]
  -[CKDatabaseOperation zoneIDHasCorrectDatabaseScope:error:]


CKDatabaseOperationInfo : CKOperationInfo <NSSecureCoding>
 @property  long long databaseScope

  // class methods
  +[CKDatabaseOperationInfo supportsSecureCoding]

  // instance methods
  -[CKDatabaseOperationInfo activityCreate]
  -[CKDatabaseOperationInfo encodeWithCoder:]
  -[CKDatabaseOperationInfo databaseScope]
  -[CKDatabaseOperationInfo setDatabaseScope:]
  -[CKDatabaseOperationInfo initWithCoder:]
  -[CKDatabaseOperationInfo takeValuesFrom:]


CKObjCClass : NSObject
 @property  Class handle
 @property  NSString *name

  // class methods
  +[CKObjCClass classForHandle:]
  +[CKObjCClass classForObject:]

  // instance methods
  -[CKObjCClass allProperties]
  -[CKObjCClass initWithHandle:]
  -[CKObjCClass handle]
  -[CKObjCClass .cxx_destruct]
  -[CKObjCClass name]
  -[CKObjCClass propertyForName:]


CKAssetRepairScheduler : NSObject
 @property  NSURL *temporaryAssetDirectory
 @property  double requestTimeout
 @property  long long repairBatchCountLimit
 @property  long long cacheCountLimit
 @property  double defaultSuspensionTime
 @property  long long repairRetryCount
 @property  <CKAssetRepairSchedulerDelegate> *delegate

  // class methods
  +[CKAssetRepairScheduler nameForEvent:]
  +[CKAssetRepairScheduler estimatedSizeForAssetOrPackage:]
  +[CKAssetRepairScheduler canCopyFromFileURL:toDirectoryURL:]
  +[CKAssetRepairScheduler remainingCapacityAtURL:error:]

  // instance methods
  -[CKAssetRepairScheduler cancelAllOperations]
  -[CKAssetRepairScheduler initWithContainer:repairContainerOverrides:]
  -[CKAssetRepairScheduler temporaryAssetDirectory]
  -[CKAssetRepairScheduler allRemainingUploadableAssets]
  -[CKAssetRepairScheduler clonedAsset:withError:]
  -[CKAssetRepairScheduler addUploadRequestsWithMetadata:requestBlocks:]
  -[CKAssetRepairScheduler repairRetryCount]
  -[CKAssetRepairScheduler setDelegate:]
  -[CKAssetRepairScheduler repairBatchCountLimit]
  -[CKAssetRepairScheduler delegate]
  -[CKAssetRepairScheduler clearAssetCache]
  -[CKAssetRepairScheduler setRequestTimeout:]
  -[CKAssetRepairScheduler dealloc]
  -[CKAssetRepairScheduler .cxx_destruct]
  -[CKAssetRepairScheduler requestTimeout]
  -[CKAssetRepairScheduler setCacheCountLimit:]
  -[CKAssetRepairScheduler removeUploadRequestWithRecordID:]
  -[CKAssetRepairScheduler hasPendingWork]
  -[CKAssetRepairScheduler cacheCountLimit]
  -[CKAssetRepairScheduler setRepairRetryCount:]
  -[CKAssetRepairScheduler defaultSuspensionTime]
  -[CKAssetRepairScheduler setDefaultSuspensionTime:]
  -[CKAssetRepairScheduler setRepairBatchCountLimit:]
  -[CKAssetRepairScheduler setTemporaryAssetDirectory:]
  -[CKAssetRepairScheduler allRemainingRequestableAssets]
  -[CKAssetRepairScheduler tickle]


CKRequestAssetOperation : NSOperation
 @property  CKUploadRequestMetadata *metadata
 @property  @? requestCallback
 @property  long long state
 @property  @? assetRequestCompletionBlock

  // instance methods
  -[CKRequestAssetOperation isFinished]
  -[CKRequestAssetOperation state]
  -[CKRequestAssetOperation .cxx_destruct]
  -[CKRequestAssetOperation isExecuting]
  -[CKRequestAssetOperation setMetadata:]
  -[CKRequestAssetOperation isAsynchronous]
  -[CKRequestAssetOperation start]
  -[CKRequestAssetOperation metadata]
  -[CKRequestAssetOperation setState:]
  -[CKRequestAssetOperation requestCallback]
  -[CKRequestAssetOperation setRequestCallback:]
  -[CKRequestAssetOperation initWithAssetMetadata:requestCallback:]
  -[CKRequestAssetOperation assetRequestCompletionBlock]
  -[CKRequestAssetOperation setAssetRequestCompletionBlock:]


CKQueryOperation : CKDatabaseOperation <CKQueryOperationCallbacks>
 @property  <CKQueryOperationCallbacks> *clientOperationCallbackProxy
 @property  CKQueryOperationInfo *operationInfo
 @property  CKQueryCursor *resultsCursor
 @property  BOOL shouldFetchAssetContent
 @property  NSMutableDictionary *recordErrors
 @property  BOOL fetchAllResults
 @property  NSDictionary *assetTransferOptionsByKey
 @property  @? queryCursorFetchedBlock
 @property  CKQuery *query
 @property  CKQueryCursor *cursor
 @property  CKRecordZoneID *zoneID
 @property  unsigned long resultsLimit
 @property  NSArray *desiredKeys
 @property  @? recordFetchedBlock
 @property  @? recordMatchedBlock
 @property  @? queryCompletionBlock

  // class methods
  +[CKQueryOperation daemonCallbackCompletionSelector]
  +[CKQueryOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKQueryOperation recordFetchedBlock]
  -[CKQueryOperation desiredKeys]
  -[CKQueryOperation setShouldFetchAssetContent:]
  -[CKQueryOperation query]
  -[CKQueryOperation setDesiredKeys:]
  -[CKQueryOperation fetchAllResults]
  -[CKQueryOperation activityCreate]
  -[CKQueryOperation setQueryCompletionBlock:]
  -[CKQueryOperation assetTransferOptionsByKey]
  -[CKQueryOperation _finishOnCallbackQueueWithError:]
  -[CKQueryOperation setRecordErrors:]
  -[CKQueryOperation shouldFetchAssetContent]
  -[CKQueryOperation resultsLimit]
  -[CKQueryOperation resultsCursor]
  -[CKQueryOperation setQuery:]
  -[CKQueryOperation cursor]
  -[CKQueryOperation setRecordMatchedBlock:]
  -[CKQueryOperation zoneID]
  -[CKQueryOperation setRecordFetchedBlock:]
  -[CKQueryOperation handleOperationDidCompleteWithCursor:metrics:error:]
  -[CKQueryOperation setResultsCursor:]
  -[CKQueryOperation initWithCursor:]
  -[CKQueryOperation .cxx_destruct]
  -[CKQueryOperation queryCompletionBlock]
  -[CKQueryOperation hasCKOperationCallbacksSet]
  -[CKQueryOperation handleQueryDidFetchForRecordID:record:error:]
  -[CKQueryOperation setZoneID:]
  -[CKQueryOperation recordErrors]
  -[CKQueryOperation setAssetTransferOptionsByKey:]
  -[CKQueryOperation setQueryCompletionBlockIVar:]
  -[CKQueryOperation setQueryCursorFetchedBlock:]
  -[CKQueryOperation performCKOperation]
  -[CKQueryOperation initWithQuery:]
  -[CKQueryOperation fillFromOperationInfo:]
  -[CKQueryOperation queryCursorFetchedBlock]
  -[CKQueryOperation handleQueryDidFetchCursor:reply:]
  -[CKQueryOperation CKOperationShouldRun:]
  -[CKQueryOperation setFetchAllResults:]
  -[CKQueryOperation recordMatchedBlock]
  -[CKQueryOperation setCursor:]
  -[CKQueryOperation fillOutOperationInfo:]
  -[CKQueryOperation init]
  -[CKQueryOperation setResultsLimit:]


CKQueryOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  CKQuery *query
 @property  CKRecordZoneID *zoneID
 @property  CKQueryCursor *cursor
 @property  unsigned long resultsLimit
 @property  NSArray *desiredKeys
 @property  BOOL shouldFetchAssetContent
 @property  BOOL fetchAllResults
 @property  NSDictionary *assetTransferOptionsByKey

  // class methods
  +[CKQueryOperationInfo supportsSecureCoding]

  // instance methods
  -[CKQueryOperationInfo desiredKeys]
  -[CKQueryOperationInfo query]
  -[CKQueryOperationInfo fetchAllResults]
  -[CKQueryOperationInfo assetTransferOptionsByKey]
  -[CKQueryOperationInfo shouldFetchAssetContent]
  -[CKQueryOperationInfo resultsLimit]
  -[CKQueryOperationInfo cursor]
  -[CKQueryOperationInfo encodeWithCoder:]
  -[CKQueryOperationInfo zoneID]
  -[CKQueryOperationInfo .cxx_destruct]
  -[CKQueryOperationInfo init]
  -[CKQueryOperationInfo initWithCoder:]


CKQueryCursor : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *data
 @property  CKRecordZoneID *zoneID

  // class methods
  +[CKQueryCursor supportsSecureCoding]

  // instance methods
  -[CKQueryCursor encodeWithCoder:]
  -[CKQueryCursor zoneID]
  -[CKQueryCursor .cxx_destruct]
  -[CKQueryCursor setZoneID:]
  -[CKQueryCursor setData:]
  -[CKQueryCursor copyWithZone:]
  -[CKQueryCursor initWithData:zoneID:]
  -[CKQueryCursor init]
  -[CKQueryCursor data]
  -[CKQueryCursor initWithCoder:]
  -[CKQueryCursor CKPropertiesDescription]


CKUploadRequestManagerStateMachine : NSObject
 @property  CUStateMachine *stateMachine
 @property  CUStateEvent *eventCausingTransition
 @property  @? internalActionHandler
 @property  @? actionHandler
 @property  @? enterStateHandler
 @property  @? exitStateHandler

  // class methods
  +[CKUploadRequestManagerStateMachine nameFromResponseAction:]
  +[CKUploadRequestManagerStateMachine nameFromFunction:]
  +[CKUploadRequestManagerStateMachine nameFromStateEvent:]
  +[CKUploadRequestManagerStateMachine nameFromState:]

  // instance methods
  -[CKUploadRequestManagerStateMachine dispatchEvent:]
  -[CKUploadRequestManagerStateMachine setStateMachine:]
  -[CKUploadRequestManagerStateMachine stateMachine]
  -[CKUploadRequestManagerStateMachine setActionHandler:]
  -[CKUploadRequestManagerStateMachine initWithActionHandler:]
  -[CKUploadRequestManagerStateMachine dealloc]
  -[CKUploadRequestManagerStateMachine .cxx_destruct]
  -[CKUploadRequestManagerStateMachine setExitStateHandler:]
  -[CKUploadRequestManagerStateMachine enterStateHandler]
  -[CKUploadRequestManagerStateMachine setEventCausingTransition:]
  -[CKUploadRequestManagerStateMachine canPerformFunction:]
  -[CKUploadRequestManagerStateMachine setInternalActionHandler:]
  -[CKUploadRequestManagerStateMachine transitionToState:withEvent:]
  -[CKUploadRequestManagerStateMachine setEnterStateHandler:]
  -[CKUploadRequestManagerStateMachine actionHandler]
  -[CKUploadRequestManagerStateMachine start]
  -[CKUploadRequestManagerStateMachine internalActionHandler]
  -[CKUploadRequestManagerStateMachine exitStateHandler]
  -[CKUploadRequestManagerStateMachine eventHandlerForState:withEnterBlock:exitBlock:eventBlock:]
  -[CKUploadRequestManagerStateMachine dispatchEvent:userInfo:]
  -[CKUploadRequestManagerStateMachine createStateMachine]
  -[CKUploadRequestManagerStateMachine eventCausingTransition]


CKSQLiteEnumerator : NSEnumerator
 @property  @? objectTranslator

  // instance methods
  -[CKSQLiteEnumerator .cxx_destruct]
  -[CKSQLiteEnumerator nextObject]
  -[CKSQLiteEnumerator initWithDatabase:columns:from:where:bindings:orderBy:]
  -[CKSQLiteEnumerator objectTranslator]
  -[CKSQLiteEnumerator setObjectTranslator:]


CKShareParticipant : NSObject <CKPropertiesDescription, NSSecureCoding, NSCopying>
 @property  BOOL wantsNewInvitationToken
 @property  BOOL isCurrentUser
 @property  BOOL isOrgAdminUser
 @property  long long mutableInvitationTokenStatus
 @property  CKRecordID *shareRecordID
 @property  NSString *inviterID
 @property  long long originalParticipantRole
 @property  long long originalAcceptanceStatus
 @property  long long originalPermission
 @property  BOOL createdInProcess
 @property  BOOL acceptedInProcess
 @property  NSData *protectionInfo
 @property  NSData *protectionInfoPublicKey
 @property  NSData *encryptedPersonalInfo
 @property  BOOL isAnonymousInvitedParticipant
 @property  BOOL forceSendPublicKeyForAnonymousParticipants
 @property  NSString *participantID
 @property  long long acceptanceStatus
 @property  CKUserIdentity *userIdentity
 @property  CKDeviceToDeviceShareInvitationToken *invitationToken
 @property  long long role
 @property  long long type
 @property  long long permission
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKShareParticipant supportsSecureCoding]

  // instance methods
  -[CKShareParticipant permission]
  -[CKShareParticipant CKDescribePropertiesUsing:]
  -[CKShareParticipant role]
  -[CKShareParticipant _initWithUserIdentity:]
  -[CKShareParticipant encodeWithCoder:]
  -[CKShareParticipant type]
  -[CKShareParticipant .cxx_destruct]
  -[CKShareParticipant protectionInfo]
  -[CKShareParticipant userIdentity]
  -[CKShareParticipant setType:]
  -[CKShareParticipant setRole:]
  -[CKShareParticipant participantID]
  -[CKShareParticipant copyWithZone:]
  -[CKShareParticipant setProtectionInfo:]
  -[CKShareParticipant redactedDescription]
  -[CKShareParticipant setPermission:]
  -[CKShareParticipant _init]
  -[CKShareParticipant setUserIdentity:]
  -[CKShareParticipant isEqual:]
  -[CKShareParticipant initWithCoder:]
  -[CKShareParticipant setParticipantID:]
  -[CKShareParticipant encryptedPersonalInfo]
  -[CKShareParticipant setEncryptedPersonalInfo:]
  -[CKShareParticipant _stripPersonalInfo]
  -[CKShareParticipant invitationTokenStatus]
  -[CKShareParticipant unifiedContactsInStore:keysToFetch:error:]
  -[CKShareParticipant acceptanceStatus]
  -[CKShareParticipant setAcceptanceStatus:]
  -[CKShareParticipant wantsNewInvitationToken]
  -[CKShareParticipant setWantsNewInvitationToken:]
  -[CKShareParticipant isCurrentUser]
  -[CKShareParticipant setIsCurrentUser:]
  -[CKShareParticipant isOrgAdminUser]
  -[CKShareParticipant setIsOrgAdminUser:]
  -[CKShareParticipant mutableInvitationTokenStatus]
  -[CKShareParticipant setMutableInvitationTokenStatus:]
  -[CKShareParticipant shareRecordID]
  -[CKShareParticipant setShareRecordID:]
  -[CKShareParticipant inviterID]
  -[CKShareParticipant setInviterID:]
  -[CKShareParticipant originalParticipantRole]
  -[CKShareParticipant setOriginalParticipantRole:]
  -[CKShareParticipant originalAcceptanceStatus]
  -[CKShareParticipant setOriginalAcceptanceStatus:]
  -[CKShareParticipant originalPermission]
  -[CKShareParticipant setOriginalPermission:]
  -[CKShareParticipant createdInProcess]
  -[CKShareParticipant setCreatedInProcess:]
  -[CKShareParticipant acceptedInProcess]
  -[CKShareParticipant setAcceptedInProcess:]
  -[CKShareParticipant protectionInfoPublicKey]
  -[CKShareParticipant setProtectionInfoPublicKey:]
  -[CKShareParticipant isAnonymousInvitedParticipant]
  -[CKShareParticipant setIsAnonymousInvitedParticipant:]
  -[CKShareParticipant forceSendPublicKeyForAnonymousParticipants]
  -[CKShareParticipant setForceSendPublicKeyForAnonymousParticipants:]
  -[CKShareParticipant invitationToken]
  -[CKShareParticipant setInvitationToken:]


CKDirectoryPurger : NSObject
 @property  NSArray *urls
 @property  @? shouldSkipFileBlock
 @property  @? shouldRemoveFileBlock

  // class methods
  +[CKDirectoryPurger purgeDirectoryAtURL:]

  // instance methods
  -[CKDirectoryPurger purge]
  -[CKDirectoryPurger shouldSkipFileBlock]
  -[CKDirectoryPurger .cxx_destruct]
  -[CKDirectoryPurger urls]
  -[CKDirectoryPurger setShouldRemoveFileBlock:]
  -[CKDirectoryPurger shouldRemoveFileBlock]
  -[CKDirectoryPurger setUrls:]
  -[CKDirectoryPurger initWithDirectoryURLs:]
  -[CKDirectoryPurger setShouldSkipFileBlock:]


CKRecordGraphNode : NSObject
 @property  NSMutableSet *edges
 @property  NSMutableSet *indegrees
 @property  unsigned long indegree
 @property  CKRecord *record

  // instance methods
  -[CKRecordGraphNode setRecord:]
  -[CKRecordGraphNode record]
  -[CKRecordGraphNode edges]
  -[CKRecordGraphNode .cxx_destruct]
  -[CKRecordGraphNode indegrees]
  -[CKRecordGraphNode setEdges:]
  -[CKRecordGraphNode indegree]
  -[CKRecordGraphNode isEqual:]
  -[CKRecordGraphNode init]
  -[CKRecordGraphNode CKPropertiesDescription]


CKRecordGraph : NSObject
  // class methods
  +[CKRecordGraph topologicallySortRecords:withError:]

  // instance methods
  -[CKRecordGraph recordsByTopologicalSortWithError:]
  -[CKRecordGraph .cxx_destruct]
  -[CKRecordGraph addRecords:error:]
  -[CKRecordGraph init]


CKFetchNotificationChangesOperation : CKOperation <CKFetchNotificationChangesOperationCallbacks>
 @property  CKServerChangeToken *resultServerChangeToken
 @property  BOOL moreComing
 @property  <CKFetchNotificationChangesOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchNotificationChangesOperationInfo *operationInfo
 @property  CKServerChangeToken *previousServerChangeToken
 @property  unsigned long resultsLimit
 @property  @? notificationChangedBlock
 @property  @? fetchNotificationChangesCompletionBlock

  // class methods
  +[CKFetchNotificationChangesOperation daemonCallbackCompletionSelector]
  +[CKFetchNotificationChangesOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchNotificationChangesOperation activityCreate]
  -[CKFetchNotificationChangesOperation _finishOnCallbackQueueWithError:]
  -[CKFetchNotificationChangesOperation resultsLimit]
  -[CKFetchNotificationChangesOperation .cxx_destruct]
  -[CKFetchNotificationChangesOperation hasCKOperationCallbacksSet]
  -[CKFetchNotificationChangesOperation setPreviousServerChangeToken:]
  -[CKFetchNotificationChangesOperation resultServerChangeToken]
  -[CKFetchNotificationChangesOperation performCKOperation]
  -[CKFetchNotificationChangesOperation fillFromOperationInfo:]
  -[CKFetchNotificationChangesOperation initWithPreviousServerChangeToken:]
  -[CKFetchNotificationChangesOperation setResultServerChangeToken:]
  -[CKFetchNotificationChangesOperation previousServerChangeToken]
  -[CKFetchNotificationChangesOperation fillOutOperationInfo:]
  -[CKFetchNotificationChangesOperation init]
  -[CKFetchNotificationChangesOperation setResultsLimit:]
  -[CKFetchNotificationChangesOperation moreComing]
  -[CKFetchNotificationChangesOperation setMoreComing:]
  -[CKFetchNotificationChangesOperation handleOperationDidCompleteWithServerChangeToken:moreComing:metrics:error:]
  -[CKFetchNotificationChangesOperation handleChangedNotification:]
  -[CKFetchNotificationChangesOperation setNotificationChangedBlock:]
  -[CKFetchNotificationChangesOperation notificationChangedBlock]
  -[CKFetchNotificationChangesOperation setFetchNotificationChangesCompletionBlock:]
  -[CKFetchNotificationChangesOperation fetchNotificationChangesCompletionBlock]


CKFetchNotificationChangesOperationInfo : CKOperationInfo <NSSecureCoding>
 @property  CKServerChangeToken *previousServerChangeToken
 @property  unsigned long resultsLimit
 @property  BOOL wantsChanges

  // class methods
  +[CKFetchNotificationChangesOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchNotificationChangesOperationInfo resultsLimit]
  -[CKFetchNotificationChangesOperationInfo encodeWithCoder:]
  -[CKFetchNotificationChangesOperationInfo .cxx_destruct]
  -[CKFetchNotificationChangesOperationInfo setPreviousServerChangeToken:]
  -[CKFetchNotificationChangesOperationInfo previousServerChangeToken]
  -[CKFetchNotificationChangesOperationInfo setResultsLimit:]
  -[CKFetchNotificationChangesOperationInfo initWithCoder:]
  -[CKFetchNotificationChangesOperationInfo wantsChanges]
  -[CKFetchNotificationChangesOperationInfo setWantsChanges:]


CKFetchWebAuthTokenOperation : CKDatabaseOperation <CKFetchWebAuthTokenOperationCallbacks>
 @property  NSString *webAuthToken
 @property  <CKFetchWebAuthTokenOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchWebAuthTokenOperationInfo *operationInfo
 @property  NSString *APIToken
 @property  @? fetchWebAuthTokenCompletionBlock

  // class methods
  +[CKFetchWebAuthTokenOperation daemonCallbackCompletionSelector]
  +[CKFetchWebAuthTokenOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchWebAuthTokenOperation activityCreate]
  -[CKFetchWebAuthTokenOperation _finishOnCallbackQueueWithError:]
  -[CKFetchWebAuthTokenOperation .cxx_destruct]
  -[CKFetchWebAuthTokenOperation hasCKOperationCallbacksSet]
  -[CKFetchWebAuthTokenOperation performCKOperation]
  -[CKFetchWebAuthTokenOperation fillFromOperationInfo:]
  -[CKFetchWebAuthTokenOperation CKOperationShouldRun:]
  -[CKFetchWebAuthTokenOperation fillOutOperationInfo:]
  -[CKFetchWebAuthTokenOperation init]
  -[CKFetchWebAuthTokenOperation fetchWebAuthTokenCompletionBlock]
  -[CKFetchWebAuthTokenOperation setFetchWebAuthTokenCompletionBlock:]
  -[CKFetchWebAuthTokenOperation handleOperationDidCompleteWithWebAuthToken:metrics:error:]
  -[CKFetchWebAuthTokenOperation initWithAPIToken:]
  -[CKFetchWebAuthTokenOperation APIToken]
  -[CKFetchWebAuthTokenOperation setAPIToken:]
  -[CKFetchWebAuthTokenOperation webAuthToken]
  -[CKFetchWebAuthTokenOperation setWebAuthToken:]


CKFetchWebAuthTokenOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSString *APIToken

  // class methods
  +[CKFetchWebAuthTokenOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchWebAuthTokenOperationInfo encodeWithCoder:]
  -[CKFetchWebAuthTokenOperationInfo .cxx_destruct]
  -[CKFetchWebAuthTokenOperationInfo initWithCoder:]
  -[CKFetchWebAuthTokenOperationInfo APIToken]
  -[CKFetchWebAuthTokenOperationInfo setAPIToken:]


CKFetchRecordVersionsOperation : CKDatabaseOperation <CKFetchRecordVersionsOperationCallbacks>
 @property  <CKFetchRecordVersionsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchRecordVersionsOperationInfo *operationInfo
 @property  NSMutableDictionary *recordErrors
 @property  BOOL isDeleted
 @property  BOOL shouldFetchAssetContent
 @property  NSArray *recordIDs
 @property  NSArray *desiredKeys
 @property  NSString *minimumVersionETag
 @property  @? fetchRecordVersionsProgressBlock
 @property  @? fetchRecordVersionsCompletionBlock

  // class methods
  +[CKFetchRecordVersionsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchRecordVersionsOperation desiredKeys]
  -[CKFetchRecordVersionsOperation setShouldFetchAssetContent:]
  -[CKFetchRecordVersionsOperation setDesiredKeys:]
  -[CKFetchRecordVersionsOperation setRecordIDs:]
  -[CKFetchRecordVersionsOperation activityCreate]
  -[CKFetchRecordVersionsOperation isDeleted]
  -[CKFetchRecordVersionsOperation recordIDs]
  -[CKFetchRecordVersionsOperation _finishOnCallbackQueueWithError:]
  -[CKFetchRecordVersionsOperation setRecordErrors:]
  -[CKFetchRecordVersionsOperation shouldFetchAssetContent]
  -[CKFetchRecordVersionsOperation .cxx_destruct]
  -[CKFetchRecordVersionsOperation hasCKOperationCallbacksSet]
  -[CKFetchRecordVersionsOperation recordErrors]
  -[CKFetchRecordVersionsOperation performCKOperation]
  -[CKFetchRecordVersionsOperation fillFromOperationInfo:]
  -[CKFetchRecordVersionsOperation setIsDeleted:]
  -[CKFetchRecordVersionsOperation CKOperationShouldRun:]
  -[CKFetchRecordVersionsOperation initWithRecordIDs:]
  -[CKFetchRecordVersionsOperation fillOutOperationInfo:]
  -[CKFetchRecordVersionsOperation init]
  -[CKFetchRecordVersionsOperation handleFetchForRecordID:isDeleted:versions:error:]
  -[CKFetchRecordVersionsOperation setFetchRecordVersionsProgressBlock:]
  -[CKFetchRecordVersionsOperation fetchRecordVersionsProgressBlock]
  -[CKFetchRecordVersionsOperation setFetchRecordVersionsCompletionBlock:]
  -[CKFetchRecordVersionsOperation fetchRecordVersionsCompletionBlock]
  -[CKFetchRecordVersionsOperation minimumVersionETag]
  -[CKFetchRecordVersionsOperation setMinimumVersionETag:]


CKFetchRecordVersionsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordIDs
 @property  NSArray *desiredKeys
 @property  NSString *minimumVersionETag
 @property  BOOL shouldFetchAssetContent

  // class methods
  +[CKFetchRecordVersionsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchRecordVersionsOperationInfo desiredKeys]
  -[CKFetchRecordVersionsOperationInfo setShouldFetchAssetContent:]
  -[CKFetchRecordVersionsOperationInfo setDesiredKeys:]
  -[CKFetchRecordVersionsOperationInfo setRecordIDs:]
  -[CKFetchRecordVersionsOperationInfo recordIDs]
  -[CKFetchRecordVersionsOperationInfo shouldFetchAssetContent]
  -[CKFetchRecordVersionsOperationInfo encodeWithCoder:]
  -[CKFetchRecordVersionsOperationInfo .cxx_destruct]
  -[CKFetchRecordVersionsOperationInfo init]
  -[CKFetchRecordVersionsOperationInfo initWithCoder:]
  -[CKFetchRecordVersionsOperationInfo minimumVersionETag]
  -[CKFetchRecordVersionsOperationInfo setMinimumVersionETag:]


CKInitiateParticipantVettingOperation : CKOperation <CKInitiateParticipantVettingOperationCallbacks>
 @property  CKShareMetadata *shareMetadata
 @property  NSString *participantID
 @property  NSString *address
 @property  <CKInitiateParticipantVettingOperationCallbacks> *clientOperationCallbackProxy
 @property  CKInitiateParticipantVettingOperationInfo *operationInfo
 @property  @? participantVettingInitiatedBlock
 @property  @? participantVettingInitiationCompletionBlock

  // class methods
  +[CKInitiateParticipantVettingOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKInitiateParticipantVettingOperation _finishOnCallbackQueueWithError:]
  -[CKInitiateParticipantVettingOperation setAddress:]
  -[CKInitiateParticipantVettingOperation .cxx_destruct]
  -[CKInitiateParticipantVettingOperation address]
  -[CKInitiateParticipantVettingOperation participantID]
  -[CKInitiateParticipantVettingOperation performCKOperation]
  -[CKInitiateParticipantVettingOperation fillFromOperationInfo:]
  -[CKInitiateParticipantVettingOperation CKOperationShouldRun:]
  -[CKInitiateParticipantVettingOperation fillOutOperationInfo:]
  -[CKInitiateParticipantVettingOperation shareMetadata]
  -[CKInitiateParticipantVettingOperation setParticipantID:]
  -[CKInitiateParticipantVettingOperation handleParticipantVettingProgressWithError:]
  -[CKInitiateParticipantVettingOperation initWithShareMetadata:participantID:address:]
  -[CKInitiateParticipantVettingOperation setParticipantVettingInitiatedBlock:]
  -[CKInitiateParticipantVettingOperation participantVettingInitiatedBlock]
  -[CKInitiateParticipantVettingOperation setParticipantVettingInitiationCompletionBlock:]
  -[CKInitiateParticipantVettingOperation participantVettingInitiationCompletionBlock]
  -[CKInitiateParticipantVettingOperation retryTimes:container:participantVettingInitiatedBlock:participantVettingInitiationCompletionBlock:]
  -[CKInitiateParticipantVettingOperation setShareMetadata:]


CKInitiateParticipantVettingOperationInfo : CKOperationInfo <NSSecureCoding>
 @property  CKShareMetadata *shareMetadata
 @property  NSString *participantID
 @property  NSString *address

  // class methods
  +[CKInitiateParticipantVettingOperationInfo supportsSecureCoding]

  // instance methods
  -[CKInitiateParticipantVettingOperationInfo encodeWithCoder:]
  -[CKInitiateParticipantVettingOperationInfo setAddress:]
  -[CKInitiateParticipantVettingOperationInfo .cxx_destruct]
  -[CKInitiateParticipantVettingOperationInfo address]
  -[CKInitiateParticipantVettingOperationInfo participantID]
  -[CKInitiateParticipantVettingOperationInfo initWithCoder:]
  -[CKInitiateParticipantVettingOperationInfo shareMetadata]
  -[CKInitiateParticipantVettingOperationInfo setParticipantID:]
  -[CKInitiateParticipantVettingOperationInfo setShareMetadata:]


CKThrottleTable : CKSQLiteTable
  // class methods
  +[CKThrottleTable dbProperties]
  +[CKThrottleTable entryClass]

  // instance methods
  -[CKThrottleTable updateRequestCount:]


CKThrottleManager : NSObject
  // class methods
  +[CKThrottleManager sharedManager]

  // instance methods
  -[CKThrottleManager CKStatusReportArray]
  -[CKThrottleManager resetThrottles]
  -[CKThrottleManager throttleWillBeRemoved:]
  -[CKThrottleManager noteDataChangeForThrottle:]
  -[CKThrottleManager setThrottleObserver:]
  -[CKThrottleManager .cxx_destruct]
  -[CKThrottleManager addThrottle:]
  -[CKThrottleManager enforcedThrottleForCriteria:willSendRequest:outThrottleError:]
  -[CKThrottleManager throttleWasAdded:]
  -[CKThrottleManager throttleListBecameEmpty]
  -[CKThrottleManager _init]
  -[CKThrottleManager allThrottles]


CKStreamingAssetAppendContext : NSObject <C2RequestDelegate>
 @property  CKStreamingAsset *streamingAsset
 @property  NSObject<OS_dispatch_queue> *appendQueue
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  BOOL appending
 @property  BOOL currentAppendCancelled
 @property  unsigned long currentSegmentLength
 @property  NSURLSessionDataTask *dataTask
 @property  NSString *requestUUID
 @property  NSObject<OS_os_activity> *osActivity
 @property  @? completionHandler
 @property  BOOL fakeMissingUploadReceipt
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKStreamingAssetAppendContext requestToAppendSegmentData:uploadURL:requestUUID:offset:]

  // instance methods
  -[CKStreamingAssetAppendContext abort]
  -[CKStreamingAssetAppendContext URLSession:dataTask:didReceiveResponse:completionHandler:]
  -[CKStreamingAssetAppendContext setDataTask:]
  -[CKStreamingAssetAppendContext dataTask]
  -[CKStreamingAssetAppendContext URLSession:task:didCompleteWithError:]
  -[CKStreamingAssetAppendContext requestUUID]
  -[CKStreamingAssetAppendContext URLSession:dataTask:didReceiveData:]
  -[CKStreamingAssetAppendContext setRequestUUID:]
  -[CKStreamingAssetAppendContext setCallbackQueue:]
  -[CKStreamingAssetAppendContext URLSession:_willRetryBackgroundDataTask:withError:]
  -[CKStreamingAssetAppendContext callbackQueue]
  -[CKStreamingAssetAppendContext URLSession:task:_conditionalRequirementsChanged:]
  -[CKStreamingAssetAppendContext .cxx_destruct]
  -[CKStreamingAssetAppendContext URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:]
  -[CKStreamingAssetAppendContext URLSession:task:needNewBodyStream:]
  -[CKStreamingAssetAppendContext URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:]
  -[CKStreamingAssetAppendContext URLSession:_taskIsWaitingForConnection:]
  -[CKStreamingAssetAppendContext CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKStreamingAssetAppendContext setCompletionHandler:]
  -[CKStreamingAssetAppendContext completionHandler]
  -[CKStreamingAssetAppendContext init]
  -[CKStreamingAssetAppendContext URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:]
  -[CKStreamingAssetAppendContext initWithStreamingAsset:]
  -[CKStreamingAssetAppendContext appendSegmentWithData:error:]
  -[CKStreamingAssetAppendContext appendSegmentWithData:newStreamingAsset:error:]
  -[CKStreamingAssetAppendContext appendSegmentWithData:completionHandler:]
  -[CKStreamingAssetAppendContext streamingAsset]
  -[CKStreamingAssetAppendContext setStreamingAsset:]
  -[CKStreamingAssetAppendContext appendQueue]
  -[CKStreamingAssetAppendContext setAppendQueue:]
  -[CKStreamingAssetAppendContext isAppending]
  -[CKStreamingAssetAppendContext setAppending:]
  -[CKStreamingAssetAppendContext isCurrentAppendCancelled]
  -[CKStreamingAssetAppendContext setCurrentAppendCancelled:]
  -[CKStreamingAssetAppendContext currentSegmentLength]
  -[CKStreamingAssetAppendContext setCurrentSegmentLength:]
  -[CKStreamingAssetAppendContext osActivity]
  -[CKStreamingAssetAppendContext setOsActivity:]
  -[CKStreamingAssetAppendContext fakeMissingUploadReceipt]
  -[CKStreamingAssetAppendContext setFakeMissingUploadReceipt:]


CKDPDate : PBCodable <NSCopying>
 @property  BOOL hasTime
 @property  double time

  // instance methods
  -[CKDPDate time]
  -[CKDPDate copyTo:]
  -[CKDPDate setTime:]
  -[CKDPDate mergeFrom:]
  -[CKDPDate dictionaryRepresentation]
  -[CKDPDate copyWithZone:]
  -[CKDPDate readFrom:]
  -[CKDPDate writeTo:]
  -[CKDPDate isEqual:]
  -[CKDPDate setHasTime:]
  -[CKDPDate hasTime]


CKCodeRecordTransport : PBCodable <NSCopying>
 @property  BOOL hasLocalSerialization
 @property  NSData *localSerialization
 @property  BOOL hasWireSerialization
 @property  NSData *wireSerialization
 @property  BOOL hasContents
 @property  int contents
 @property  BOOL hasEncryptedMasterKey
 @property  NSData *encryptedMasterKey

  // instance methods
  -[CKCodeRecordTransport initWithRecord:]
  -[CKCodeRecordTransport copyTo:]
  -[CKCodeRecordTransport contents]
  -[CKCodeRecordTransport .cxx_destruct]
  -[CKCodeRecordTransport setContents:]
  -[CKCodeRecordTransport mergeFrom:]
  -[CKCodeRecordTransport hasContents]
  -[CKCodeRecordTransport dictionaryRepresentation]
  -[CKCodeRecordTransport copyWithZone:]
  -[CKCodeRecordTransport readFrom:]
  -[CKCodeRecordTransport writeTo:]
  -[CKCodeRecordTransport isEqual:]
  -[CKCodeRecordTransport contentsAsString:]
  -[CKCodeRecordTransport StringAsContents:]
  -[CKCodeRecordTransport setHasContents:]
  -[CKCodeRecordTransport clearOneofValuesForContents]
  -[CKCodeRecordTransport hasLocalSerialization]
  -[CKCodeRecordTransport setLocalSerialization:]
  -[CKCodeRecordTransport hasWireSerialization]
  -[CKCodeRecordTransport setWireSerialization:]
  -[CKCodeRecordTransport hasEncryptedMasterKey]
  -[CKCodeRecordTransport localSerialization]
  -[CKCodeRecordTransport wireSerialization]
  -[CKCodeRecordTransport encryptedMasterKey]
  -[CKCodeRecordTransport setEncryptedMasterKey:]


CKAggregateZonePCSOperation : CKDatabaseOperation
 @property  CKAggregateZonePCSOperationInfo *operationInfo
 @property  NSArray *sourceZoneIDs
 @property  CKRecordZone *targetZone
 @property  @? aggregateZonePCSCompletionBlock

  // instance methods
  -[CKAggregateZonePCSOperation activityCreate]
  -[CKAggregateZonePCSOperation _finishOnCallbackQueueWithError:]
  -[CKAggregateZonePCSOperation targetZone]
  -[CKAggregateZonePCSOperation .cxx_destruct]
  -[CKAggregateZonePCSOperation hasCKOperationCallbacksSet]
  -[CKAggregateZonePCSOperation performCKOperation]
  -[CKAggregateZonePCSOperation fillFromOperationInfo:]
  -[CKAggregateZonePCSOperation CKOperationShouldRun:]
  -[CKAggregateZonePCSOperation setTargetZone:]
  -[CKAggregateZonePCSOperation fillOutOperationInfo:]
  -[CKAggregateZonePCSOperation init]
  -[CKAggregateZonePCSOperation initWithSourceZoneIDs:targetZone:]
  -[CKAggregateZonePCSOperation setAggregateZonePCSCompletionBlock:]
  -[CKAggregateZonePCSOperation aggregateZonePCSCompletionBlock]
  -[CKAggregateZonePCSOperation sourceZoneIDs]
  -[CKAggregateZonePCSOperation setSourceZoneIDs:]


CKAggregateZonePCSOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *sourceZoneIDs
 @property  CKRecordZone *targetZone

  // class methods
  +[CKAggregateZonePCSOperationInfo supportsSecureCoding]

  // instance methods
  -[CKAggregateZonePCSOperationInfo targetZone]
  -[CKAggregateZonePCSOperationInfo encodeWithCoder:]
  -[CKAggregateZonePCSOperationInfo .cxx_destruct]
  -[CKAggregateZonePCSOperationInfo setTargetZone:]
  -[CKAggregateZonePCSOperationInfo initWithCoder:]
  -[CKAggregateZonePCSOperationInfo sourceZoneIDs]
  -[CKAggregateZonePCSOperationInfo setSourceZoneIDs:]


CKMetric : NSObject <NSCopying, NSSecureCoding>
 @property  NSDate *startDate
 @property  double duration
 @property  double queueing
 @property  double executing
 @property  unsigned long bytesUploaded
 @property  unsigned long bytesDownloaded
 @property  unsigned long connections
 @property  unsigned long connectionsCreated
 @property  NSDictionary *totalBytesByChunkProfile
 @property  NSDictionary *chunkCountByChunkProfile
 @property  NSDictionary *fileCountByChunkProfile

  // class methods
  +[CKMetric supportsSecureCoding]
  +[CKMetric unionDictionary:with:]

  // instance methods
  -[CKMetric queueing]
  -[CKMetric setConnections:]
  -[CKMetric executing]
  -[CKMetric setDuration:]
  -[CKMetric setBytesUploaded:]
  -[CKMetric connections]
  -[CKMetric chunkCountByChunkProfile]
  -[CKMetric encodeWithCoder:]
  -[CKMetric totalBytesByChunkProfile]
  -[CKMetric .cxx_destruct]
  -[CKMetric setStartDate:]
  -[CKMetric connectionsCreated]
  -[CKMetric duration]
  -[CKMetric setConnectionsCreated:]
  -[CKMetric setQueueing:]
  -[CKMetric bytesDownloaded]
  -[CKMetric bytesUploaded]
  -[CKMetric setExecuting:]
  -[CKMetric copyWithZone:]
  -[CKMetric setBytesDownloaded:]
  -[CKMetric startDate]
  -[CKMetric setChunkCountByChunkProfile:]
  -[CKMetric setTotalBytesByChunkProfile:]
  -[CKMetric initWithCoder:]
  -[CKMetric setFileCountByChunkProfile:]
  -[CKMetric CKPropertiesDescription]
  -[CKMetric fileCountByChunkProfile]


CKOperationMetrics : NSObject <NSCopying, NSSecureCoding>
 @property  CKMetric *cloudKitMetrics
 @property  CKMetric *MMCSMetrics

  // class methods
  +[CKOperationMetrics supportsSecureCoding]

  // instance methods
  -[CKOperationMetrics encodeWithCoder:]
  -[CKOperationMetrics .cxx_destruct]
  -[CKOperationMetrics cloudKitMetrics]
  -[CKOperationMetrics setCloudKitMetrics:]
  -[CKOperationMetrics copyWithZone:]
  -[CKOperationMetrics setMMCSMetrics:]
  -[CKOperationMetrics MMCSMetrics]
  -[CKOperationMetrics initWithCoder:]
  -[CKOperationMetrics CKPropertiesDescription]


CKPackageItem : NSObject
 @property  long long packageIndex
 @property  NSURL *fileURL
 @property  unsigned long itemID
 @property  NSData *signature
 @property  long long size
 @property  long long offset
 @property  int sectionIndex
 @property  NSNumber *deviceID
 @property  NSNumber *fileID
 @property  NSNumber *generationID
 @property  NSData *wrappedAssetKey
 @property  NSString *itemTypeHint

  // instance methods
  -[CKPackageItem signature]
  -[CKPackageItem deviceID]
  -[CKPackageItem generationID]
  -[CKPackageItem setGenerationID:]
  -[CKPackageItem setFileURL:]
  -[CKPackageItem initWithFileURL:]
  -[CKPackageItem setFileID:]
  -[CKPackageItem fileURL]
  -[CKPackageItem setPackageIndex:]
  -[CKPackageItem setDeviceID:]
  -[CKPackageItem setItemID:]
  -[CKPackageItem fileID]
  -[CKPackageItem .cxx_destruct]
  -[CKPackageItem wrappedAssetKey]
  -[CKPackageItem size]
  -[CKPackageItem itemID]
  -[CKPackageItem itemTypeHint]
  -[CKPackageItem offset]
  -[CKPackageItem packageIndex]
  -[CKPackageItem setSize:]
  -[CKPackageItem setSignature:]
  -[CKPackageItem setOffset:]
  -[CKPackageItem setWrappedAssetKey:]
  -[CKPackageItem setItemTypeHint:]
  -[CKPackageItem CKPropertiesDescription]
  -[CKPackageItem initWithDeviceID:fileID:generationID:]
  -[CKPackageItem sectionIndex]
  -[CKPackageItem setSectionIndex:]


CKFetchRecordChangesOperation : CKDatabaseOperation <CKFetchRecordChangesOperationCallbacks>
 @property  CKServerChangeToken *resultServerChangeToken
 @property  NSData *resultClientChangeTokenData
 @property  long long status
 @property  BOOL shouldFetchAssetContents
 @property  BOOL fetchAllChanges
 @property  NSMutableDictionary *recordErrors
 @property  @? serverChangeTokenFetchedBlock
 @property  @? changeTokensUpdatedBlock
 @property  <CKFetchRecordChangesOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchRecordZoneChangesOperationInfo *operationInfo
 @property  CKRecordZoneID *recordZoneID
 @property  CKServerChangeToken *previousServerChangeToken
 @property  unsigned long resultsLimit
 @property  NSArray *desiredKeys
 @property  @? recordChangedBlock
 @property  @? recordWithIDWasDeletedBlock
 @property  BOOL moreComing
 @property  @? fetchRecordChangesCompletionBlock

  // class methods
  +[CKFetchRecordChangesOperation daemonCallbackCompletionSelector]
  +[CKFetchRecordChangesOperation operationInfoClass]
  +[CKFetchRecordChangesOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchRecordChangesOperation fetchAllChanges]
  -[CKFetchRecordChangesOperation recordChangedBlock]
  -[CKFetchRecordChangesOperation relevantZoneIDs]
  -[CKFetchRecordChangesOperation shouldFetchAssetContents]
  -[CKFetchRecordChangesOperation setRecordChangedBlock:]
  -[CKFetchRecordChangesOperation desiredKeys]
  -[CKFetchRecordChangesOperation setFetchAllChanges:]
  -[CKFetchRecordChangesOperation setDesiredKeys:]
  -[CKFetchRecordChangesOperation setShouldFetchAssetContents:]
  -[CKFetchRecordChangesOperation activityCreate]
  -[CKFetchRecordChangesOperation _finishOnCallbackQueueWithError:]
  -[CKFetchRecordChangesOperation setRecordErrors:]
  -[CKFetchRecordChangesOperation resultsLimit]
  -[CKFetchRecordChangesOperation changeTypesFromSetCallbacks]
  -[CKFetchRecordChangesOperation status]
  -[CKFetchRecordChangesOperation setStatus:]
  -[CKFetchRecordChangesOperation handleChangeForRecordID:record:error:]
  -[CKFetchRecordChangesOperation .cxx_destruct]
  -[CKFetchRecordChangesOperation setRecordZoneID:]
  -[CKFetchRecordChangesOperation hasCKOperationCallbacksSet]
  -[CKFetchRecordChangesOperation recordErrors]
  -[CKFetchRecordChangesOperation recordWithIDWasDeletedBlock]
  -[CKFetchRecordChangesOperation setPreviousServerChangeToken:]
  -[CKFetchRecordChangesOperation resultServerChangeToken]
  -[CKFetchRecordChangesOperation performCKOperation]
  -[CKFetchRecordChangesOperation resultClientChangeTokenData]
  -[CKFetchRecordChangesOperation fillFromOperationInfo:]
  -[CKFetchRecordChangesOperation setRecordWithIDWasDeletedBlock:]
  -[CKFetchRecordChangesOperation CKOperationShouldRun:]
  -[CKFetchRecordChangesOperation setResultServerChangeToken:]
  -[CKFetchRecordChangesOperation previousServerChangeToken]
  -[CKFetchRecordChangesOperation recordZoneID]
  -[CKFetchRecordChangesOperation fillOutOperationInfo:]
  -[CKFetchRecordChangesOperation setResultClientChangeTokenData:]
  -[CKFetchRecordChangesOperation init]
  -[CKFetchRecordChangesOperation setResultsLimit:]
  -[CKFetchRecordChangesOperation moreComing]
  -[CKFetchRecordChangesOperation handleOperationDidCompleteWithServerChangeToken:clientChangeTokenData:recordChangesStatus:metrics:error:]
  -[CKFetchRecordChangesOperation handleDeleteForRecordID:]
  -[CKFetchRecordChangesOperation handleChangeSetCompletionWithServerChangeToken:clientChangeTokenData:recordChangesStatus:reply:]
  -[CKFetchRecordChangesOperation initWithRecordZoneID:previousServerChangeToken:]
  -[CKFetchRecordChangesOperation setFetchRecordChangesCompletionBlock:]
  -[CKFetchRecordChangesOperation fetchRecordChangesCompletionBlock]
  -[CKFetchRecordChangesOperation setServerChangeTokenFetchedBlock:]
  -[CKFetchRecordChangesOperation serverChangeTokenFetchedBlock]
  -[CKFetchRecordChangesOperation setChangeTokensUpdatedBlock:]
  -[CKFetchRecordChangesOperation changeTokensUpdatedBlock]


CKPreSharingContext : CKSharingContext <NSItemProviderReading, NSItemProviderWriting, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *writableTypeIdentifiersForItemProvider

  // class methods
  +[CKPreSharingContext supportsSecureCoding]
  +[CKPreSharingContext writableTypeIdentifiersForItemProvider]
  +[CKPreSharingContext readableTypeIdentifiersForItemProvider]
  +[CKPreSharingContext objectWithItemProviderData:typeIdentifier:error:]

  // instance methods
  -[CKPreSharingContext loadDataWithTypeIdentifier:forItemProviderCompletionHandler:]
  -[CKPreSharingContext encodeWithCoder:]
  -[CKPreSharingContext copyWithZone:]
  -[CKPreSharingContext itemProviderVisibilityForRepresentationWithTypeIdentifier:]
  -[CKPreSharingContext initWithCoder:]


CKPostSharingContext : CKSharingContext <NSItemProviderReading, NSItemProviderWriting, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *writableTypeIdentifiersForItemProvider

  // class methods
  +[CKPostSharingContext supportsSecureCoding]
  +[CKPostSharingContext writableTypeIdentifiersForItemProvider]
  +[CKPostSharingContext readableTypeIdentifiersForItemProvider]
  +[CKPostSharingContext objectWithItemProviderData:typeIdentifier:error:]

  // instance methods
  -[CKPostSharingContext loadDataWithTypeIdentifier:forItemProviderCompletionHandler:]
  -[CKPostSharingContext encodeWithCoder:]
  -[CKPostSharingContext copyWithZone:]
  -[CKPostSharingContext itemProviderVisibilityForRepresentationWithTypeIdentifier:]
  -[CKPostSharingContext initWithCoder:]


CKSharingContext : NSObject <NSSecureCoding, NSCopying>
 @property  CKShare *share
 @property  CKContainerSetupInfo *containerSetupInfo
 @property  CKAllowedSharingOptions *allowedOptions

  // class methods
  +[CKSharingContext supportsSecureCoding]

  // instance methods
  -[CKSharingContext share]
  -[CKSharingContext encodeWithCoder:]
  -[CKSharingContext setShare:]
  -[CKSharingContext .cxx_destruct]
  -[CKSharingContext copyWithZone:]
  -[CKSharingContext initWithCoder:]
  -[CKSharingContext initWithShare:containerSetupInfo:allowedOptions:]
  -[CKSharingContext containerSetupInfo]
  -[CKSharingContext setContainerSetupInfo:]
  -[CKSharingContext allowedOptions]
  -[CKSharingContext setAllowedOptions:]


CKNotificationID : NSObject <CKXPCSuitableString, NSCopying, NSSecureCoding>
 @property  NSString *notificationUUID

  // class methods
  +[CKNotificationID supportsSecureCoding]

  // instance methods
  -[CKNotificationID encodeWithCoder:]
  -[CKNotificationID notificationUUID]
  -[CKNotificationID .cxx_destruct]
  -[CKNotificationID copyWithZone:]
  -[CKNotificationID isEqual:]
  -[CKNotificationID initWithCoder:]
  -[CKNotificationID CKPropertiesDescription]
  -[CKNotificationID initWithNotificationUUID:]
  -[CKNotificationID CKXPCSuitableString]


CKNotification : NSObject <NSSecureCoding>
 @property  long long notificationType
 @property  CKNotificationID *notificationID
 @property  CKContainerID *containerID
 @property  CKRecordID *subscriptionOwnerUserRecordID
 @property  BOOL isPruned
 @property  NSString *alertBody
 @property  NSString *alertLocalizationKey
 @property  NSArray *alertLocalizationArgs
 @property  NSString *title
 @property  NSString *titleLocalizationKey
 @property  NSArray *titleLocalizationArgs
 @property  NSString *subtitle
 @property  NSString *subtitleLocalizationKey
 @property  NSArray *subtitleLocalizationArgs
 @property  NSString *alertActionLocalizationKey
 @property  NSString *alertLaunchImage
 @property  NSNumber *badge
 @property  NSString *soundName
 @property  NSString *category
 @property  NSString *testServerName
 @property  NSURL *testServerURL
 @property  NSString *testDeviceID
 @property  NSString *containerIdentifier
 @property  NSString *subscriptionID

  // class methods
  +[CKNotification supportsSecureCoding]
  +[CKNotification _realNotificationFromRemoteNotificationDictionary:]
  +[CKNotification notificationFromRemoteNotificationDictionary:]

  // instance methods
  -[CKNotification setContainerID:]
  -[CKNotification setTitleLocalizationKey:]
  -[CKNotification setNotificationID:]
  -[CKNotification titleLocalizationKey]
  -[CKNotification setCategory:]
  -[CKNotification containerID]
  -[CKNotification alertBody]
  -[CKNotification setSoundName:]
  -[CKNotification subtitle]
  -[CKNotification setSubscriptionID:]
  -[CKNotification setBadge:]
  -[CKNotification setSubtitle:]
  -[CKNotification setSubtitleLocalizationArgs:]
  -[CKNotification subscriptionID]
  -[CKNotification setAlertBody:]
  -[CKNotification encodeWithCoder:]
  -[CKNotification notificationID]
  -[CKNotification containerIdentifier]
  -[CKNotification category]
  -[CKNotification alertLaunchImage]
  -[CKNotification .cxx_destruct]
  -[CKNotification alertActionLocalizationKey]
  -[CKNotification setContainerIdentifier:]
  -[CKNotification setTitleLocalizationArgs:]
  -[CKNotification subtitleLocalizationKey]
  -[CKNotification title]
  -[CKNotification badge]
  -[CKNotification setSubtitleLocalizationKey:]
  -[CKNotification alertLocalizationArgs]
  -[CKNotification setAlertActionLocalizationKey:]
  -[CKNotification setAlertLaunchImage:]
  -[CKNotification titleLocalizationArgs]
  -[CKNotification setAlertLocalizationKey:]
  -[CKNotification isRead]
  -[CKNotification alertLocalizationKey]
  -[CKNotification _initBare]
  -[CKNotification subtitleLocalizationArgs]
  -[CKNotification setTitle:]
  -[CKNotification init]
  -[CKNotification initWithCoder:]
  -[CKNotification CKPropertiesDescription]
  -[CKNotification setAlertLocalizationArgs:]
  -[CKNotification soundName]
  -[CKNotification initWithRemoteNotificationDictionary:]
  -[CKNotification testServerName]
  -[CKNotification testServerURL]
  -[CKNotification testDeviceID]
  -[CKNotification notificationType]
  -[CKNotification setNotificationType:]
  -[CKNotification subscriptionOwnerUserRecordID]
  -[CKNotification setSubscriptionOwnerUserRecordID:]
  -[CKNotification isPruned]
  -[CKNotification setIsPruned:]
  -[CKNotification setTestServerName:]
  -[CKNotification setTestServerURL:]
  -[CKNotification setTestDeviceID:]


CKQueryNotification : CKNotification <NSSecureCoding>
 @property  long long queryNotificationReason
 @property  NSDictionary *recordFields
 @property  CKRecordID *recordID
 @property  long long databaseScope

  // class methods
  +[CKQueryNotification supportsSecureCoding]

  // instance methods
  -[CKQueryNotification setRecordID:]
  -[CKQueryNotification recordID]
  -[CKQueryNotification encodeWithCoder:]
  -[CKQueryNotification .cxx_destruct]
  -[CKQueryNotification databaseScope]
  -[CKQueryNotification setDatabaseScope:]
  -[CKQueryNotification initWithCoder:]
  -[CKQueryNotification CKPropertiesDescription]
  -[CKQueryNotification initWithRemoteNotificationDictionary:]
  -[CKQueryNotification queryNotificationReason]
  -[CKQueryNotification setQueryNotificationReason:]
  -[CKQueryNotification recordFields]
  -[CKQueryNotification setRecordFields:]
  -[CKQueryNotification isPublicDatabase]


CKRecordZoneNotification : CKNotification <NSSecureCoding>
 @property  CKRecordZoneID *recordZoneID
 @property  long long databaseScope

  // class methods
  +[CKRecordZoneNotification supportsSecureCoding]

  // instance methods
  -[CKRecordZoneNotification encodeWithCoder:]
  -[CKRecordZoneNotification .cxx_destruct]
  -[CKRecordZoneNotification setRecordZoneID:]
  -[CKRecordZoneNotification databaseScope]
  -[CKRecordZoneNotification recordZoneID]
  -[CKRecordZoneNotification setDatabaseScope:]
  -[CKRecordZoneNotification initWithCoder:]
  -[CKRecordZoneNotification CKPropertiesDescription]
  -[CKRecordZoneNotification initWithRemoteNotificationDictionary:]


CKDatabaseNotification : CKNotification <NSSecureCoding>
 @property  long long databaseScope
 @property  CKRecordZoneID *recordZoneID

  // class methods
  +[CKDatabaseNotification supportsSecureCoding]

  // instance methods
  -[CKDatabaseNotification encodeWithCoder:]
  -[CKDatabaseNotification .cxx_destruct]
  -[CKDatabaseNotification setRecordZoneID:]
  -[CKDatabaseNotification databaseScope]
  -[CKDatabaseNotification recordZoneID]
  -[CKDatabaseNotification setDatabaseScope:]
  -[CKDatabaseNotification initWithCoder:]
  -[CKDatabaseNotification CKPropertiesDescription]
  -[CKDatabaseNotification initWithRemoteNotificationDictionary:]


CKDatabaseImplementation : NSObject
 @property  NSObject<OS_dispatch_queue> *underlyingDispatchQueue
 @property  long long databaseScope
 @property  CKContainerImplementation *containerImplementation
 @property  long long scope
 @property  NSOperationQueue *operationQueue

  // instance methods
  -[CKDatabaseImplementation CKStatusReportArray]
  -[CKDatabaseImplementation setContainerImplementation:]
  -[CKDatabaseImplementation fetchSubscriptionWithID:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation clearCacheEntriesForRecord:completionHandler:]
  -[CKDatabaseImplementation fetchAllSubscriptionsWithWrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation setUnderlyingDispatchQueue:]
  -[CKDatabaseImplementation addOperation:wrappingDatabase:convenienceConfiguration:]
  -[CKDatabaseImplementation _scheduleConvenienceOperation:wrappingDatabase:convenienceConfiguration:]
  -[CKDatabaseImplementation underlyingDispatchQueue]
  -[CKDatabaseImplementation containerImplementation]
  -[CKDatabaseImplementation clearRecordCache]
  -[CKDatabaseImplementation fetchPCSFromCacheForZoneWithID:completionHandler:]
  -[CKDatabaseImplementation scope]
  -[CKDatabaseImplementation operationQueue]
  -[CKDatabaseImplementation _initWithContainerImplementation:scope:]
  -[CKDatabaseImplementation deleteRecordWithID:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation _addOperation:wrappingDatabase:convenienceConfiguration:isConvenience:]
  -[CKDatabaseImplementation clearAssetCache]
  -[CKDatabaseImplementation .cxx_destruct]
  -[CKDatabaseImplementation saveRecordZone:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation showAssetCache]
  -[CKDatabaseImplementation deleteSubscriptionWithID:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation saveSubscription:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation fetchAllRecordZonesWithWrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation fetchRecordZoneWithID:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation deleteRecordZoneWithID:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation clearCacheEntriesForZone:completionHandler:]
  -[CKDatabaseImplementation databaseScope]
  -[CKDatabaseImplementation saveRecord:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation performQuery:inZoneWithID:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation getPCSDiagnosticsForZonesWithCompletionHandler:]
  -[CKDatabaseImplementation fetchRecordWithID:wrappingDatabase:convenienceConfiguration:completionHandler:]
  -[CKDatabaseImplementation countAssetCacheItems]
  -[CKDatabaseImplementation getCorruptRecordsForAllZonesWithCompletionHandler:]
  -[CKDatabaseImplementation clearCachesWithOptions:completionHandler:]
  -[CKDatabaseImplementation clearAuthTokensForRecordWithID:]
  -[CKDatabaseImplementation clearInvalidatedPCSCacheEntriesIfNeeded]
  -[CKDatabaseImplementation CKPropertiesDescription]


CKDatabase : NSObject
 @property  CKDatabaseImplementation *implementation
 @property  CKContainer *container
 @property  long long scope
 @property  NSOperationQueue *operationQueue
 @property  long long databaseScope

  // instance methods
  -[CKDatabase setContainer:]
  -[CKDatabase deleteSubscriptionWithID:completionHandler:]
  -[CKDatabase saveRecord:completionHandler:]
  -[CKDatabase fetchRecordZoneWithID:completionHandler:]
  -[CKDatabase fetchAllRecordZonesWithCompletionHandler:]
  -[CKDatabase implementation]
  -[CKDatabase clearRecordCache]
  -[CKDatabase deleteRecordZoneWithID:completionHandler:]
  -[CKDatabase saveSubscription:completionHandler:]
  -[CKDatabase scope]
  -[CKDatabase operationQueue]
  -[CKDatabase performQuery:inZoneWithID:completionHandler:]
  -[CKDatabase addOperation:]
  -[CKDatabase fetchAllSubscriptionsWithCompletionHandler:]
  -[CKDatabase _initWithContainer:scope:]
  -[CKDatabase _initWithImplementation:container:]
  -[CKDatabase saveRecordZone:completionHandler:]
  -[CKDatabase fetchRecordWithID:completionHandler:]
  -[CKDatabase fetchSubscriptionWithID:completionHandler:]
  -[CKDatabase .cxx_destruct]
  -[CKDatabase container]
  -[CKDatabase forwardingTargetForSelector:]
  -[CKDatabase databaseScope]
  -[CKDatabase deleteRecordWithID:completionHandler:]
  -[CKDatabase init]
  -[CKDatabase CKPropertiesDescription]


CKAcceptSharesOperation : CKOperation <CKAcceptSharesOperationCallbacks>
 @property  NSMutableDictionary *errorsByShareURL
 @property  NSMutableDictionary *shareMetadatasByShareURL
 @property  <CKAcceptSharesOperationCallbacks> *clientOperationCallbackProxy
 @property  CKAcceptSharesOperationInfo *operationInfo
 @property  NSArray *shareMetadatas
 @property  @? perShareCompletionBlock
 @property  @? acceptSharesCompletionBlock

  // class methods
  +[CKAcceptSharesOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKAcceptSharesOperation activityCreate]
  -[CKAcceptSharesOperation _finishOnCallbackQueueWithError:]
  -[CKAcceptSharesOperation .cxx_destruct]
  -[CKAcceptSharesOperation hasCKOperationCallbacksSet]
  -[CKAcceptSharesOperation performCKOperation]
  -[CKAcceptSharesOperation fillFromOperationInfo:]
  -[CKAcceptSharesOperation CKOperationShouldRun:]
  -[CKAcceptSharesOperation fillOutOperationInfo:]
  -[CKAcceptSharesOperation init]
  -[CKAcceptSharesOperation initWithShareMetadatas:]
  -[CKAcceptSharesOperation setAcceptSharesCompletionBlock:]
  -[CKAcceptSharesOperation setPerShareCompletionBlock:]
  -[CKAcceptSharesOperation perShareCompletionBlock]
  -[CKAcceptSharesOperation acceptSharesCompletionBlock]
  -[CKAcceptSharesOperation handleShareAcceptanceForURL:share:error:]
  -[CKAcceptSharesOperation setAcceptSharesCompletionBlockIVar:]
  -[CKAcceptSharesOperation setShareMetadatas:]
  -[CKAcceptSharesOperation shareMetadatas]
  -[CKAcceptSharesOperation errorsByShareURL]
  -[CKAcceptSharesOperation setErrorsByShareURL:]
  -[CKAcceptSharesOperation shareMetadatasByShareURL]
  -[CKAcceptSharesOperation setShareMetadatasByShareURL:]


CKAcceptSharesOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *shareMetadatasToAccept

  // class methods
  +[CKAcceptSharesOperationInfo supportsSecureCoding]

  // instance methods
  -[CKAcceptSharesOperationInfo encodeWithCoder:]
  -[CKAcceptSharesOperationInfo .cxx_destruct]
  -[CKAcceptSharesOperationInfo databaseScope]
  -[CKAcceptSharesOperationInfo initWithCoder:]
  -[CKAcceptSharesOperationInfo shareMetadatasToAccept]
  -[CKAcceptSharesOperationInfo setShareMetadatasToAccept:]


CKReference : NSObject <CKRecordValue, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  unsigned long referenceAction
 @property  CKRecordID *recordID

  // class methods
  +[CKReference supportsSecureCoding]
  +[CKReference ckReferenceActionForCKDPRecordReferenceType:]
  +[CKReference ckdpReferenceTypeForCKReferenceAction:]

  // instance methods
  -[CKReference ckShortDescription]
  -[CKReference recordID]
  -[CKReference encodeWithCoder:]
  -[CKReference .cxx_destruct]
  -[CKReference referenceAction]
  -[CKReference initWithRecordID:action:]
  -[CKReference copyWithZone:]
  -[CKReference CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKReference _initBare]
  -[CKReference isEqual:]
  -[CKReference init]
  -[CKReference initWithCoder:]
  -[CKReference CKPropertiesDescription]
  -[CKReference initWithRecord:action:]


CKFetchShareParticipantKeyOperation : CKDatabaseOperation <CKFetchShareParticipantKeyOperationCallbacks>
 @property  NSArray *shareIDs
 @property  NSMutableDictionary *errorsByShareID
 @property  <CKFetchShareParticipantKeyOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchShareParticipantKeyOperationInfo *operationInfo
 @property  NSDictionary *baseTokensByShareID
 @property  NSDictionary *childRecordIDsByShareID
 @property  @? shareParticipantKeyFetchedBlock
 @property  @? shareParticipantKeyCompletionBlock

  // class methods
  +[CKFetchShareParticipantKeyOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchShareParticipantKeyOperation activityCreate]
  -[CKFetchShareParticipantKeyOperation _finishOnCallbackQueueWithError:]
  -[CKFetchShareParticipantKeyOperation .cxx_destruct]
  -[CKFetchShareParticipantKeyOperation hasCKOperationCallbacksSet]
  -[CKFetchShareParticipantKeyOperation performCKOperation]
  -[CKFetchShareParticipantKeyOperation fillFromOperationInfo:]
  -[CKFetchShareParticipantKeyOperation CKOperationShouldRun:]
  -[CKFetchShareParticipantKeyOperation fillOutOperationInfo:]
  -[CKFetchShareParticipantKeyOperation handleParticipantKeyFetchForRecordID:participantKey:error:]
  -[CKFetchShareParticipantKeyOperation initWithShareIDs:]
  -[CKFetchShareParticipantKeyOperation setShareParticipantKeyFetchedBlock:]
  -[CKFetchShareParticipantKeyOperation shareParticipantKeyFetchedBlock]
  -[CKFetchShareParticipantKeyOperation setShareParticipantKeyCompletionBlock:]
  -[CKFetchShareParticipantKeyOperation shareParticipantKeyCompletionBlock]
  -[CKFetchShareParticipantKeyOperation baseTokensByShareID]
  -[CKFetchShareParticipantKeyOperation setBaseTokensByShareID:]
  -[CKFetchShareParticipantKeyOperation childRecordIDsByShareID]
  -[CKFetchShareParticipantKeyOperation setChildRecordIDsByShareID:]
  -[CKFetchShareParticipantKeyOperation shareIDs]
  -[CKFetchShareParticipantKeyOperation setShareIDs:]
  -[CKFetchShareParticipantKeyOperation errorsByShareID]
  -[CKFetchShareParticipantKeyOperation setErrorsByShareID:]


CKFetchShareParticipantKeyOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSDictionary *baseTokensByShareID
 @property  NSDictionary *childRecordIDsByShareID
 @property  NSArray *shareIDs

  // class methods
  +[CKFetchShareParticipantKeyOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchShareParticipantKeyOperationInfo encodeWithCoder:]
  -[CKFetchShareParticipantKeyOperationInfo .cxx_destruct]
  -[CKFetchShareParticipantKeyOperationInfo initWithCoder:]
  -[CKFetchShareParticipantKeyOperationInfo baseTokensByShareID]
  -[CKFetchShareParticipantKeyOperationInfo setBaseTokensByShareID:]
  -[CKFetchShareParticipantKeyOperationInfo childRecordIDsByShareID]
  -[CKFetchShareParticipantKeyOperationInfo setChildRecordIDsByShareID:]
  -[CKFetchShareParticipantKeyOperationInfo shareIDs]
  -[CKFetchShareParticipantKeyOperationInfo setShareIDs:]


CKAPSMachServiceConnectionKey : NSObject <NSCopying>
 @property  NSString *environmentName
 @property  NSString *namedDelegatePort

  // instance methods
  -[CKAPSMachServiceConnectionKey initWithEnvironmentName:namedDelegatePort:]
  -[CKAPSMachServiceConnectionKey .cxx_destruct]
  -[CKAPSMachServiceConnectionKey environmentName]
  -[CKAPSMachServiceConnectionKey copyWithZone:]
  -[CKAPSMachServiceConnectionKey namedDelegatePort]
  -[CKAPSMachServiceConnectionKey isEqual:]


CKAPSMachServiceConnectionDelegate : NSObject <APSConnectionDelegate>
 @property  APSConnection *connection
 @property  CKAPSMachServiceConnectionKey *key
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKAPSMachServiceConnectionDelegate connection:didSendOutgoingMessage:]
  -[CKAPSMachServiceConnectionDelegate connectionDidReconnect:]
  -[CKAPSMachServiceConnectionDelegate connection:didChangeConnectedStatus:]
  -[CKAPSMachServiceConnectionDelegate connection:didReceiveIncomingMessage:]
  -[CKAPSMachServiceConnectionDelegate connection:didReceiveToken:forTopic:identifier:]
  -[CKAPSMachServiceConnectionDelegate connection:didReceivePublicToken:]
  -[CKAPSMachServiceConnectionDelegate connection:didReceiveMessageForTopic:userInfo:]
  -[CKAPSMachServiceConnectionDelegate .cxx_destruct]
  -[CKAPSMachServiceConnectionDelegate connection]
  -[CKAPSMachServiceConnectionDelegate initWithConnection:key:]
  -[CKAPSMachServiceConnectionDelegate key]
  -[CKAPSMachServiceConnectionDelegate connection:didFailToSendOutgoingMessage:error:]
  -[CKAPSMachServiceConnectionDelegate setKey:]
  -[CKAPSMachServiceConnectionDelegate setConnection:]


CKContainerCallbackProxy : CKWeakObjectCallbackProxy <CKXPCContainerScopedClient>

CKOperationGroup : NSObject <NSSecureCoding>
 @property  CKOperationGroupSystemImposedInfo *systemImposedInfo
 @property  NSNumber *quantityNumber
 @property  NSString *authPromptReason
 @property  long long approximateSendBytes
 @property  long long approximateReceiveBytes
 @property  NSString *operationGroupID
 @property  CKOperationConfiguration *defaultConfiguration
 @property  NSString *name
 @property  unsigned long quantity
 @property  long long expectedSendSize
 @property  long long expectedReceiveSize

  // class methods
  +[CKOperationGroup supportsSecureCoding]

  // instance methods
  -[CKOperationGroup encodeWithCoder:]
  -[CKOperationGroup .cxx_destruct]
  -[CKOperationGroup setExpectedSendSize:]
  -[CKOperationGroup setExpectedReceiveSize:]
  -[CKOperationGroup setDefaultConfiguration:]
  -[CKOperationGroup setName:]
  -[CKOperationGroup operationGroupID]
  -[CKOperationGroup expectedSendSize]
  -[CKOperationGroup name]
  -[CKOperationGroup setQuantity:]
  -[CKOperationGroup expectedReceiveSize]
  -[CKOperationGroup defaultConfiguration]
  -[CKOperationGroup CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKOperationGroup init]
  -[CKOperationGroup initWithCoder:]
  -[CKOperationGroup systemImposedInfo]
  -[CKOperationGroup setSystemImposedInfo:]
  -[CKOperationGroup quantity]
  -[CKOperationGroup approximateSendBytes]
  -[CKOperationGroup approximateReceiveBytes]
  -[CKOperationGroup resolvedNetworkServiceTypeForConfig:]
  -[CKOperationGroup quantityNumber]
  -[CKOperationGroup setQuantityNumber:]
  -[CKOperationGroup authPromptReason]
  -[CKOperationGroup setAuthPromptReason:]


CKOperationGroupSystemImposedInfoConfiguration : NSObject <NSCopying, NSSecureCoding>
 @property  BOOL isUplink
 @property  BOOL allowsCellularAccess

  // class methods
  +[CKOperationGroupSystemImposedInfoConfiguration supportsSecureCoding]

  // instance methods
  -[CKOperationGroupSystemImposedInfoConfiguration setAllowsCellularAccess:]
  -[CKOperationGroupSystemImposedInfoConfiguration allowsCellularAccess]
  -[CKOperationGroupSystemImposedInfoConfiguration setIsUplink:]
  -[CKOperationGroupSystemImposedInfoConfiguration encodeWithCoder:]
  -[CKOperationGroupSystemImposedInfoConfiguration isUplink]
  -[CKOperationGroupSystemImposedInfoConfiguration copyWithZone:]
  -[CKOperationGroupSystemImposedInfoConfiguration isEqual:]
  -[CKOperationGroupSystemImposedInfoConfiguration initWithCoder:]


CKOperationGroupSystemImposedInfo : NSObject <NSSecureCoding, NSCopying>
 @property  NSDictionary *networkServiceTypePerConfig
 @property  long long expectedSendSize
 @property  long long expectedReceiveSize

  // class methods
  +[CKOperationGroupSystemImposedInfo supportsSecureCoding]

  // instance methods
  -[CKOperationGroupSystemImposedInfo encodeWithCoder:]
  -[CKOperationGroupSystemImposedInfo setNetworkServiceTypePerConfig:]
  -[CKOperationGroupSystemImposedInfo .cxx_destruct]
  -[CKOperationGroupSystemImposedInfo setExpectedSendSize:]
  -[CKOperationGroupSystemImposedInfo setExpectedReceiveSize:]
  -[CKOperationGroupSystemImposedInfo copyWithZone:]
  -[CKOperationGroupSystemImposedInfo expectedSendSize]
  -[CKOperationGroupSystemImposedInfo expectedReceiveSize]
  -[CKOperationGroupSystemImposedInfo networkServiceTypePerConfig]
  -[CKOperationGroupSystemImposedInfo initWithCoder:]


CKLogicalDeviceScopedStateManager : NSObject <CKXPCLogicalDeviceScopedClient>
 @property  NSMapTable *assetsByUUID
 @property  CKLogicalDeviceContext *deviceContext
 @property  NSMutableSet *completedLongLivedOperationIDs
 @property  NSMutableSet *outstandingOperationIDs

  // instance methods
  -[CKLogicalDeviceScopedStateManager outstandingOperationIDs]
  -[CKLogicalDeviceScopedStateManager resetThrottles]
  -[CKLogicalDeviceScopedStateManager setAssetsByUUID:]
  -[CKLogicalDeviceScopedStateManager deviceContext]
  -[CKLogicalDeviceScopedStateManager openFileWithOpenInfo:reply:]
  -[CKLogicalDeviceScopedStateManager setDeviceContext:]
  -[CKLogicalDeviceScopedStateManager setCompletedLongLivedOperationIDs:]
  -[CKLogicalDeviceScopedStateManager .cxx_destruct]
  -[CKLogicalDeviceScopedStateManager trackAssets:]
  -[CKLogicalDeviceScopedStateManager completedLongLivedOperationIDs]
  -[CKLogicalDeviceScopedStateManager registerLongLivedOperationWithIDAsCompleted:allowResumingCompletedLongLivedOperations:]
  -[CKLogicalDeviceScopedStateManager addThrottle:]
  -[CKLogicalDeviceScopedStateManager readBytesOfInMemoryAssetContentWithUUID:offset:length:reply:]
  -[CKLogicalDeviceScopedStateManager initWithDeviceContext:]
  -[CKLogicalDeviceScopedStateManager registerLongLivedOperationWithIDAsOutstanding:]
  -[CKLogicalDeviceScopedStateManager setOutstandingOperationIDs:]
  -[CKLogicalDeviceScopedStateManager assetsByUUID]
  -[CKLogicalDeviceScopedStateManager trackedAssetForUUID:]


CKPublicKey : NSObject
 @property  NSData *publicKey
 @property  long long version
 @property  NSDate *expiration
 @property  NSData *certData
 @property  NSString *protectionSource

  // instance methods
  -[CKPublicKey publicKey]
  -[CKPublicKey .cxx_destruct]
  -[CKPublicKey version]
  -[CKPublicKey expiration]
  -[CKPublicKey hasExpired]
  -[CKPublicKey initWithPublicKey:version:expiration:certificateData:protectionSource:]
  -[CKPublicKey certData]
  -[CKPublicKey protectionSource]


CKDPLocationCoordinate : PBCodable <NSCopying>
 @property  BOOL hasLatitude
 @property  double latitude
 @property  BOOL hasLongitude
 @property  double longitude
 @property  BOOL hasHorizontalAccuracy
 @property  double horizontalAccuracy
 @property  BOOL hasAltitude
 @property  double altitude
 @property  BOOL hasVerticalAccuracy
 @property  double verticalAccuracy
 @property  BOOL hasCourse
 @property  double course
 @property  BOOL hasSpeed
 @property  double speed
 @property  BOOL hasTimestamp
 @property  CKDPDate *timestamp

  // instance methods
  -[CKDPLocationCoordinate horizontalAccuracy]
  -[CKDPLocationCoordinate setHorizontalAccuracy:]
  -[CKDPLocationCoordinate altitude]
  -[CKDPLocationCoordinate setAltitude:]
  -[CKDPLocationCoordinate latitude]
  -[CKDPLocationCoordinate hasLongitude]
  -[CKDPLocationCoordinate course]
  -[CKDPLocationCoordinate setTimestamp:]
  -[CKDPLocationCoordinate setHasLatitude:]
  -[CKDPLocationCoordinate copyTo:]
  -[CKDPLocationCoordinate setLatitude:]
  -[CKDPLocationCoordinate hasLatitude]
  -[CKDPLocationCoordinate setLongitude:]
  -[CKDPLocationCoordinate setSpeed:]
  -[CKDPLocationCoordinate setHasLongitude:]
  -[CKDPLocationCoordinate longitude]
  -[CKDPLocationCoordinate .cxx_destruct]
  -[CKDPLocationCoordinate hasHorizontalAccuracy]
  -[CKDPLocationCoordinate verticalAccuracy]
  -[CKDPLocationCoordinate speed]
  -[CKDPLocationCoordinate mergeFrom:]
  -[CKDPLocationCoordinate setHasHorizontalAccuracy:]
  -[CKDPLocationCoordinate dictionaryRepresentation]
  -[CKDPLocationCoordinate hasTimestamp]
  -[CKDPLocationCoordinate copyWithZone:]
  -[CKDPLocationCoordinate timestamp]
  -[CKDPLocationCoordinate readFrom:]
  -[CKDPLocationCoordinate writeTo:]
  -[CKDPLocationCoordinate isEqual:]
  -[CKDPLocationCoordinate setCourse:]
  -[CKDPLocationCoordinate setHasAltitude:]
  -[CKDPLocationCoordinate hasAltitude]
  -[CKDPLocationCoordinate setHasSpeed:]
  -[CKDPLocationCoordinate hasSpeed]
  -[CKDPLocationCoordinate setVerticalAccuracy:]
  -[CKDPLocationCoordinate setHasVerticalAccuracy:]
  -[CKDPLocationCoordinate hasVerticalAccuracy]
  -[CKDPLocationCoordinate setHasCourse:]
  -[CKDPLocationCoordinate hasCourse]


CKDPIdentifier : PBCodable <NSCopying>
 @property  BOOL hasName
 @property  NSString *name
 @property  BOOL hasType
 @property  int type

  // instance methods
  -[CKDPIdentifier hasName]
  -[CKDPIdentifier typeAsString:]
  -[CKDPIdentifier setHasType:]
  -[CKDPIdentifier copyTo:]
  -[CKDPIdentifier type]
  -[CKDPIdentifier StringAsType:]
  -[CKDPIdentifier .cxx_destruct]
  -[CKDPIdentifier mergeFrom:]
  -[CKDPIdentifier setType:]
  -[CKDPIdentifier dictionaryRepresentation]
  -[CKDPIdentifier setName:]
  -[CKDPIdentifier copyWithZone:]
  -[CKDPIdentifier hasType]
  -[CKDPIdentifier name]
  -[CKDPIdentifier readFrom:]
  -[CKDPIdentifier writeTo:]
  -[CKDPIdentifier isEqual:]


CKSyncEngineFetchChangesOperation : NSOperation <CKPropertiesDescription>
 @property  NSError *error
 @property  NSOperationQueue *operationQueue
 @property  CKDatabase *database
 @property  CKServerChangeToken *previousDatabaseServerChangeToken
 @property  CKOperationGroup *group
 @property  BOOL shouldFetchDatabaseChanges
 @property  @? networkAttributionBundleIDOverrideBlock
 @property  NSSet *zoneIDs
 @property  @? recordZoneWithIDChangedBlock
 @property  @? recordZoneWithIDWasDeletedBlock
 @property  @? recordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock
 @property  @? recordZoneWithIDWasPurgedBlock
 @property  @? databaseChangeTokenUpdatedBlock
 @property  @? fetchDatabaseChangesCompletionBlock
 @property  @? willBeginFetchingChangesForZoneIDsBlock
 @property  @? recordZoneChangesConfigurationBlock
 @property  @? recordWasChangedBlock
 @property  @? recordWithIDWasDeletedBlock
 @property  @? recordZoneChangeTokensUpdatedBlock
 @property  @? recordZoneFetchCompletionBlock
 @property  @? willEnqueueOperationBlock
 @property  @? fetchChangesCompletionBlock
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSyncEngineFetchChangesOperation _removesDependenciesAfterFinish]
  +[CKSyncEngineFetchChangesOperation setMaxZonesPerOperation:]
  +[CKSyncEngineFetchChangesOperation maxZonesPerOperation]

  // instance methods
  -[CKSyncEngineFetchChangesOperation finishWithError:]
  -[CKSyncEngineFetchChangesOperation recordZoneWithIDWasPurgedBlock]
  -[CKSyncEngineFetchChangesOperation setRecordZoneWithIDWasDeletedBlock:]
  -[CKSyncEngineFetchChangesOperation zoneIDs]
  -[CKSyncEngineFetchChangesOperation setRecordZoneWithIDWasPurgedBlock:]
  -[CKSyncEngineFetchChangesOperation setZoneIDs:]
  -[CKSyncEngineFetchChangesOperation CKDescribePropertiesUsing:]
  -[CKSyncEngineFetchChangesOperation recordZoneChangeTokensUpdatedBlock]
  -[CKSyncEngineFetchChangesOperation initWithDatabase:]
  -[CKSyncEngineFetchChangesOperation setRecordZoneChangeTokensUpdatedBlock:]
  -[CKSyncEngineFetchChangesOperation isFinished]
  -[CKSyncEngineFetchChangesOperation setRecordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock:]
  -[CKSyncEngineFetchChangesOperation fetchRecordZoneChanges]
  -[CKSyncEngineFetchChangesOperation setFetchDatabaseChangesCompletionBlock:]
  -[CKSyncEngineFetchChangesOperation setNetworkAttributionBundleIDOverrideBlock:]
  -[CKSyncEngineFetchChangesOperation recordZoneWithIDChangedBlock]
  -[CKSyncEngineFetchChangesOperation operationQueue]
  -[CKSyncEngineFetchChangesOperation setWillEnqueueOperationBlock:]
  -[CKSyncEngineFetchChangesOperation setOperationQueue:]
  -[CKSyncEngineFetchChangesOperation error]
  -[CKSyncEngineFetchChangesOperation .cxx_destruct]
  -[CKSyncEngineFetchChangesOperation setError:]
  -[CKSyncEngineFetchChangesOperation networkAttributionBundleIDOverrideBlock]
  -[CKSyncEngineFetchChangesOperation cancelledError]
  -[CKSyncEngineFetchChangesOperation recordZoneWithIDWasDeletedBlock]
  -[CKSyncEngineFetchChangesOperation isExecuting]
  -[CKSyncEngineFetchChangesOperation recordWithIDWasDeletedBlock]
  -[CKSyncEngineFetchChangesOperation willEnqueueOperationBlock]
  -[CKSyncEngineFetchChangesOperation transitionToFinished]
  -[CKSyncEngineFetchChangesOperation recordZoneFetchCompletionBlock]
  -[CKSyncEngineFetchChangesOperation recordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock]
  -[CKSyncEngineFetchChangesOperation database]
  -[CKSyncEngineFetchChangesOperation setRecordWasChangedBlock:]
  -[CKSyncEngineFetchChangesOperation isAsynchronous]
  -[CKSyncEngineFetchChangesOperation setRecordWithIDWasDeletedBlock:]
  -[CKSyncEngineFetchChangesOperation fetchDatabaseChangesCompletionBlock]
  -[CKSyncEngineFetchChangesOperation start]
  -[CKSyncEngineFetchChangesOperation group]
  -[CKSyncEngineFetchChangesOperation setRecordZoneFetchCompletionBlock:]
  -[CKSyncEngineFetchChangesOperation redactedDescription]
  -[CKSyncEngineFetchChangesOperation setRecordZoneWithIDChangedBlock:]
  -[CKSyncEngineFetchChangesOperation recordWasChangedBlock]
  -[CKSyncEngineFetchChangesOperation cancel]
  -[CKSyncEngineFetchChangesOperation init]
  -[CKSyncEngineFetchChangesOperation setGroup:]
  -[CKSyncEngineFetchChangesOperation transitionToExecuting]
  -[CKSyncEngineFetchChangesOperation fetchDatabaseChangesThenRecordZoneChanges]
  -[CKSyncEngineFetchChangesOperation previousDatabaseServerChangeToken]
  -[CKSyncEngineFetchChangesOperation setPreviousDatabaseServerChangeToken:]
  -[CKSyncEngineFetchChangesOperation shouldFetchDatabaseChanges]
  -[CKSyncEngineFetchChangesOperation setShouldFetchDatabaseChanges:]
  -[CKSyncEngineFetchChangesOperation databaseChangeTokenUpdatedBlock]
  -[CKSyncEngineFetchChangesOperation setDatabaseChangeTokenUpdatedBlock:]
  -[CKSyncEngineFetchChangesOperation willBeginFetchingChangesForZoneIDsBlock]
  -[CKSyncEngineFetchChangesOperation setWillBeginFetchingChangesForZoneIDsBlock:]
  -[CKSyncEngineFetchChangesOperation recordZoneChangesConfigurationBlock]
  -[CKSyncEngineFetchChangesOperation setRecordZoneChangesConfigurationBlock:]
  -[CKSyncEngineFetchChangesOperation fetchChangesCompletionBlock]
  -[CKSyncEngineFetchChangesOperation setFetchChangesCompletionBlock:]


CKSyncEngineFetchRecordZoneChangesConfiguration : NSObject
 @property  CKFetchRecordZoneChangesConfiguration *configuration
 @property  BOOL shouldFetchAssetContents

  // instance methods
  -[CKSyncEngineFetchRecordZoneChangesConfiguration shouldFetchAssetContents]
  -[CKSyncEngineFetchRecordZoneChangesConfiguration setConfiguration:]
  -[CKSyncEngineFetchRecordZoneChangesConfiguration setShouldFetchAssetContents:]
  -[CKSyncEngineFetchRecordZoneChangesConfiguration configuration]
  -[CKSyncEngineFetchRecordZoneChangesConfiguration .cxx_destruct]
  -[CKSyncEngineFetchRecordZoneChangesConfiguration init]


CKEncryptedData : NSObject <CKEncryptable, CKRecordValue, NSCopying, NSSecureCoding>
 @property  NSData *data
 @property  NSData *encryptedData
 @property  BOOL needsEncryption
 @property  BOOL needsDecryption
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKEncryptedData supportsSecureCoding]

  // instance methods
  -[CKEncryptedData initWithValue:]
  -[CKEncryptedData encodeWithCoder:]
  -[CKEncryptedData .cxx_destruct]
  -[CKEncryptedData setData:]
  -[CKEncryptedData copyWithZone:]
  -[CKEncryptedData value]
  -[CKEncryptedData initWithData:]
  -[CKEncryptedData CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKEncryptedData isEqual:]
  -[CKEncryptedData init]
  -[CKEncryptedData data]
  -[CKEncryptedData initWithCoder:]
  -[CKEncryptedData CKPropertiesDescription]
  -[CKEncryptedData needsEncryption]
  -[CKEncryptedData needsDecryption]
  -[CKEncryptedData initWithEncryptedData:]
  -[CKEncryptedData encryptedData]
  -[CKEncryptedData setEncryptedData:]


CKEncryptedString : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  NSString *string
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedString string]
  -[CKEncryptedString initWithString:]
  -[CKEncryptedString value]


CKEncryptedLongLong : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  long long longLongValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedLongLong longLongValue]
  -[CKEncryptedLongLong value]
  -[CKEncryptedLongLong initWithLongLong:]


CKEncryptedDouble : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  double doubleValue
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedDouble initWithDouble:]
  -[CKEncryptedDouble doubleValue]
  -[CKEncryptedDouble value]


CKEncryptedDate : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  NSDate *date
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedDate date]
  -[CKEncryptedDate value]
  -[CKEncryptedDate initWithDate:]


CKEncryptedReference : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  CKReference *reference
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedReference reference]
  -[CKEncryptedReference value]
  -[CKEncryptedReference initWithReference:]
  -[CKEncryptedReference _pReferenceFromReference:]
  -[CKEncryptedReference _referenceFromPReference:]
  -[CKEncryptedReference _recordIDFromPRecordIdentifier:]


CKEncryptedLocation : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  CLLocation *location
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedLocation initWithLocation:]
  -[CKEncryptedLocation value]
  -[CKEncryptedLocation location]


CKEncryptedStringArray : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  NSArray *stringArray
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedStringArray value]
  -[CKEncryptedStringArray stringArray]
  -[CKEncryptedStringArray initWithStringArray:]


CKEncryptedDoubleArray : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  NSArray *doubleArray
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedDoubleArray value]
  -[CKEncryptedDoubleArray initWithDoubleArray:]
  -[CKEncryptedDoubleArray doubleArray]


CKEncryptedLongLongArray : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  NSArray *longLongArray
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedLongLongArray value]
  -[CKEncryptedLongLongArray initWithLongLongArray:]
  -[CKEncryptedLongLongArray longLongArray]


CKEncryptedDateArray : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  NSArray *dateArray
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedDateArray value]
  -[CKEncryptedDateArray initWithDateArray:]
  -[CKEncryptedDateArray dateArray]


CKEncryptedLocationArray : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  NSArray *locationArray
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedLocationArray value]
  -[CKEncryptedLocationArray initWithLocationArray:]
  -[CKEncryptedLocationArray locationArray]


CKEncryptedEmptyArray : CKEncryptedData <CKRecordValue, NSCopying, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEncryptedEmptyArray value]


CKContainerSetupInfo : NSObject <NSItemProviderReading, NSItemProviderWriting, NSSecureCoding, NSCopying>
 @property  CKAccountOverrideInfo *accountOverrideInfo
 @property  CKAccountOverrideInfo *accountInfoOverride
 @property  CKContainerOptions *containerOptions
 @property  CKContainerID *containerID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSArray *writableTypeIdentifiersForItemProvider

  // class methods
  +[CKContainerSetupInfo supportsSecureCoding]
  +[CKContainerSetupInfo writableTypeIdentifiersForItemProvider]
  +[CKContainerSetupInfo readableTypeIdentifiersForItemProvider]
  +[CKContainerSetupInfo objectWithItemProviderData:typeIdentifier:error:]

  // instance methods
  -[CKContainerSetupInfo containerID]
  -[CKContainerSetupInfo loadDataWithTypeIdentifier:forItemProviderCompletionHandler:]
  -[CKContainerSetupInfo encodeWithCoder:]
  -[CKContainerSetupInfo copyWithoutAccountInfo]
  -[CKContainerSetupInfo accountInfoOverride]
  -[CKContainerSetupInfo .cxx_destruct]
  -[CKContainerSetupInfo hashString]
  -[CKContainerSetupInfo copyWithZone:]
  -[CKContainerSetupInfo containerOptions]
  -[CKContainerSetupInfo initWithContainerID:options:]
  -[CKContainerSetupInfo accountOverrideInfo]
  -[CKContainerSetupInfo isEqual:]
  -[CKContainerSetupInfo itemProviderVisibilityForRepresentationWithTypeIdentifier:]
  -[CKContainerSetupInfo _stripAccountInfo]
  -[CKContainerSetupInfo initWithCoder:]


CKSyncEngineModifyPendingChangesOperation : NSOperation <CKPropertiesDescription>
 @property  NSError *error
 @property  NSMutableDictionary *errorsByRecordID
 @property  NSOperationQueue *operationQueue
 @property  BOOL startedInitialModifyZonesCheck
 @property  CKDatabase *database
 @property  CKOperationGroup *group
 @property  unsigned long maxZoneCountPerBatch
 @property  BOOL continueModifyingPendingChangesAfterFailure
 @property  @? networkAttributionBundleIDOverrideBlock
 @property  @? populateNextBatchBlock
 @property  @? zoneIDsToSaveAndDeleteBlock
 @property  @? modifyRecordZonesCompletionBlock
 @property  @? perRecordProgressBlock
 @property  @? perRecordSaveBlock
 @property  @? perRecordDeleteBlock
 @property  @? batchCompletionBlock
 @property  @? modifyPendingChangesCompletionBlock
 @property  @? willEnqueueOperationBlock
 @property  NSSet *zoneIDs
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKSyncEngineModifyPendingChangesOperation _removesDependenciesAfterFinish]

  // instance methods
  -[CKSyncEngineModifyPendingChangesOperation finishWithError:]
  -[CKSyncEngineModifyPendingChangesOperation modifyRecordZonesCompletionBlock]
  -[CKSyncEngineModifyPendingChangesOperation zoneIDs]
  -[CKSyncEngineModifyPendingChangesOperation setZoneIDs:]
  -[CKSyncEngineModifyPendingChangesOperation setErrorsByRecordID:]
  -[CKSyncEngineModifyPendingChangesOperation setPerRecordDeleteBlock:]
  -[CKSyncEngineModifyPendingChangesOperation CKDescribePropertiesUsing:]
  -[CKSyncEngineModifyPendingChangesOperation setPerRecordProgressBlock:]
  -[CKSyncEngineModifyPendingChangesOperation maxZoneCountPerBatch]
  -[CKSyncEngineModifyPendingChangesOperation setModifyRecordZonesCompletionBlock:]
  -[CKSyncEngineModifyPendingChangesOperation perRecordSaveBlock]
  -[CKSyncEngineModifyPendingChangesOperation setMaxZoneCountPerBatch:]
  -[CKSyncEngineModifyPendingChangesOperation perRecordDeleteBlock]
  -[CKSyncEngineModifyPendingChangesOperation initWithDatabase:]
  -[CKSyncEngineModifyPendingChangesOperation continueModifyingPendingChangesAfterFailure]
  -[CKSyncEngineModifyPendingChangesOperation setContinueModifyingPendingChangesAfterFailure:]
  -[CKSyncEngineModifyPendingChangesOperation isFinished]
  -[CKSyncEngineModifyPendingChangesOperation errorsByRecordID]
  -[CKSyncEngineModifyPendingChangesOperation perRecordProgressBlock]
  -[CKSyncEngineModifyPendingChangesOperation setPerRecordSaveBlock:]
  -[CKSyncEngineModifyPendingChangesOperation addNextModifyRecordZonesBatch]
  -[CKSyncEngineModifyPendingChangesOperation zoneIDsToSaveAndDeleteBlock]
  -[CKSyncEngineModifyPendingChangesOperation populateNextBatchBlock]
  -[CKSyncEngineModifyPendingChangesOperation setNetworkAttributionBundleIDOverrideBlock:]
  -[CKSyncEngineModifyPendingChangesOperation addNextModifyOperationOrFinishIfNoRemainingWork]
  -[CKSyncEngineModifyPendingChangesOperation operationQueue]
  -[CKSyncEngineModifyPendingChangesOperation setWillEnqueueOperationBlock:]
  -[CKSyncEngineModifyPendingChangesOperation setStartedInitialModifyZonesCheck:]
  -[CKSyncEngineModifyPendingChangesOperation setOperationQueue:]
  -[CKSyncEngineModifyPendingChangesOperation error]
  -[CKSyncEngineModifyPendingChangesOperation setModifyPendingChangesCompletionBlock:]
  -[CKSyncEngineModifyPendingChangesOperation startedInitialModifyZonesCheck]
  -[CKSyncEngineModifyPendingChangesOperation setPopulateNextBatchBlock:]
  -[CKSyncEngineModifyPendingChangesOperation modifyPendingChangesCompletionBlock]
  -[CKSyncEngineModifyPendingChangesOperation .cxx_destruct]
  -[CKSyncEngineModifyPendingChangesOperation setError:]
  -[CKSyncEngineModifyPendingChangesOperation networkAttributionBundleIDOverrideBlock]
  -[CKSyncEngineModifyPendingChangesOperation cancelledError]
  -[CKSyncEngineModifyPendingChangesOperation isExecuting]
  -[CKSyncEngineModifyPendingChangesOperation batchCompletionBlock]
  -[CKSyncEngineModifyPendingChangesOperation willEnqueueOperationBlock]
  -[CKSyncEngineModifyPendingChangesOperation transitionToFinished]
  -[CKSyncEngineModifyPendingChangesOperation database]
  -[CKSyncEngineModifyPendingChangesOperation isAsynchronous]
  -[CKSyncEngineModifyPendingChangesOperation setBatchCompletionBlock:]
  -[CKSyncEngineModifyPendingChangesOperation setZoneIDsToSaveAndDeleteBlock:]
  -[CKSyncEngineModifyPendingChangesOperation start]
  -[CKSyncEngineModifyPendingChangesOperation group]
  -[CKSyncEngineModifyPendingChangesOperation redactedDescription]
  -[CKSyncEngineModifyPendingChangesOperation addNextModifyRecordsBatch]
  -[CKSyncEngineModifyPendingChangesOperation cancel]
  -[CKSyncEngineModifyPendingChangesOperation init]
  -[CKSyncEngineModifyPendingChangesOperation setGroup:]
  -[CKSyncEngineModifyPendingChangesOperation transitionToExecuting]
  -[CKSyncEngineModifyPendingChangesOperation operationToModifyBatch:]


CKObjCProperty : NSObject
 @property  CKObjCType *type
 @property  NSString *name
 @property  SEL getterSelector
 @property  SEL setterSelector

  // instance methods
  -[CKObjCProperty type]
  -[CKObjCProperty compare:]
  -[CKObjCProperty .cxx_destruct]
  -[CKObjCProperty setterSelector]
  -[CKObjCProperty name]
  -[CKObjCProperty getterSelector]


CKCoalescer : NSObject
 @property  @? notifyBlock
 @property  unsigned long activityDelay
 @property  unsigned long maxActivityDelay
 @property  unsigned long coalescingInterval
 @property  unsigned long processingDelay

  // instance methods
  -[CKCoalescer processingComplete]
  -[CKCoalescer notifyBlock]
  -[CKCoalescer setMaxActivityDelay:]
  -[CKCoalescer dealloc]
  -[CKCoalescer initWithNotifyBlock:]
  -[CKCoalescer .cxx_destruct]
  -[CKCoalescer postFinishedNotice]
  -[CKCoalescer initWithActivityDelay:maxActivityDelay:coalescingInterval:processingDelay:notifyBlock:]
  -[CKCoalescer initWithNotifyFrequency:notifyBlock:]
  -[CKCoalescer setActivityDelay:]
  -[CKCoalescer coalesce:]
  -[CKCoalescer maxActivityDelay]
  -[CKCoalescer finish:]
  -[CKCoalescer processingDelay]
  -[CKCoalescer delayPostBy:]
  -[CKCoalescer setProcessingDelay:]
  -[CKCoalescer coalescingInterval]
  -[CKCoalescer mutate:]
  -[CKCoalescer setCoalescingInterval:]
  -[CKCoalescer activityDelay]
  -[CKCoalescer postNotice]


CKQuerySubscription : CKSubscription <NSSecureCoding, NSCopying>
 @property  NSPredicate *predicate
 @property  unsigned long querySubscriptionOptions
 @property  NSString *recordType
 @property  CKRecordZoneID *zoneID

  // class methods
  +[CKQuerySubscription supportsSecureCoding]

  // instance methods
  -[CKQuerySubscription setPredicate:]
  -[CKQuerySubscription encodeWithCoder:]
  -[CKQuerySubscription zoneID]
  -[CKQuerySubscription initWithRecordType:predicate:options:]
  -[CKQuerySubscription initWithRecordType:predicate:subscriptionID:options:]
  -[CKQuerySubscription predicate]
  -[CKQuerySubscription .cxx_destruct]
  -[CKQuerySubscription setQuerySubscriptionOptions:]
  -[CKQuerySubscription setZoneID:]
  -[CKQuerySubscription setRecordType:]
  -[CKQuerySubscription copyWithZone:]
  -[CKQuerySubscription querySubscriptionOptions]
  -[CKQuerySubscription _validateQuerySubscriptionOptions:]
  -[CKQuerySubscription isEqual:]
  -[CKQuerySubscription initWithCoder:]
  -[CKQuerySubscription CKPropertiesDescription]


CKRecordZoneSubscription : CKSubscription <NSSecureCoding, NSCopying>
 @property  CKRecordZoneID *zoneID
 @property  NSString *recordType

  // class methods
  +[CKRecordZoneSubscription supportsSecureCoding]

  // instance methods
  -[CKRecordZoneSubscription initWithZoneID:]
  -[CKRecordZoneSubscription encodeWithCoder:]
  -[CKRecordZoneSubscription zoneID]
  -[CKRecordZoneSubscription .cxx_destruct]
  -[CKRecordZoneSubscription setRecordType:]
  -[CKRecordZoneSubscription initWithZoneID:subscriptionID:]
  -[CKRecordZoneSubscription copyWithZone:]
  -[CKRecordZoneSubscription isEqual:]
  -[CKRecordZoneSubscription initWithCoder:]
  -[CKRecordZoneSubscription CKPropertiesDescription]


CKDatabaseSubscription : CKSubscription <NSSecureCoding, NSCopying>
 @property  NSString *recordType

  // class methods
  +[CKDatabaseSubscription new]
  +[CKDatabaseSubscription supportsSecureCoding]

  // instance methods
  -[CKDatabaseSubscription initWithSubscriptionID:]
  -[CKDatabaseSubscription setRecordType:]
  -[CKDatabaseSubscription init]
  -[CKDatabaseSubscription initWithCoder:]
  -[CKDatabaseSubscription CKPropertiesDescription]


CKSubscription : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *recordType
 @property  NSString *subscriptionID
 @property  long long subscriptionType
 @property  CKNotificationInfo *notificationInfo

  // class methods
  +[CKSubscription supportsSecureCoding]

  // instance methods
  -[CKSubscription _initWithSubscriptionID:subscriptionType:recordType:]
  -[CKSubscription setSubscriptionID:]
  -[CKSubscription initWithZoneID:options:]
  -[CKSubscription setSubscriptionType:]
  -[CKSubscription setNotificationInfo:]
  -[CKSubscription subscriptionID]
  -[CKSubscription encodeWithCoder:]
  -[CKSubscription subscriptionOptions]
  -[CKSubscription zoneID]
  -[CKSubscription notificationInfo]
  -[CKSubscription initWithRecordType:predicate:options:]
  -[CKSubscription initWithRecordType:predicate:subscriptionID:options:]
  -[CKSubscription subscriptionType]
  -[CKSubscription predicate]
  -[CKSubscription .cxx_destruct]
  -[CKSubscription initWithZoneID:subscriptionID:options:]
  -[CKSubscription setRecordType:]
  -[CKSubscription recordType]
  -[CKSubscription copyWithZone:]
  -[CKSubscription isEqual:]
  -[CKSubscription init]
  -[CKSubscription initWithCoder:]


CKNotificationInfo : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *alertBody
 @property  NSString *alertLocalizationKey
 @property  NSArray *alertLocalizationArgs
 @property  NSString *title
 @property  NSString *titleLocalizationKey
 @property  NSArray *titleLocalizationArgs
 @property  NSString *subtitle
 @property  NSString *subtitleLocalizationKey
 @property  NSArray *subtitleLocalizationArgs
 @property  NSString *alertActionLocalizationKey
 @property  NSString *alertLaunchImage
 @property  NSString *soundName
 @property  NSArray *desiredKeys
 @property  BOOL shouldBadge
 @property  BOOL shouldSendContentAvailable
 @property  BOOL shouldSendMutableContent
 @property  NSString *category
 @property  NSString *collapseIDKey

  // class methods
  +[CKNotificationInfo supportsSecureCoding]
  +[CKNotificationInfo notificationInfo]

  // instance methods
  -[CKNotificationInfo setTitleLocalizationKey:]
  -[CKNotificationInfo desiredKeys]
  -[CKNotificationInfo titleLocalizationKey]
  -[CKNotificationInfo setCategory:]
  -[CKNotificationInfo _setCategoryNoValidate:]
  -[CKNotificationInfo setDesiredKeys:]
  -[CKNotificationInfo collapseIDKey]
  -[CKNotificationInfo _setShouldSendMutableContentNoValidate:]
  -[CKNotificationInfo alertBody]
  -[CKNotificationInfo setSoundName:]
  -[CKNotificationInfo subtitle]
  -[CKNotificationInfo _setTitleLocalizationArgsNoValidate:]
  -[CKNotificationInfo setShouldSendMutableContent:]
  -[CKNotificationInfo _setAlertBodyNoValidate:]
  -[CKNotificationInfo _setSubtitleLocalizationArgsNoValidate:]
  -[CKNotificationInfo shouldSendContentAvailable]
  -[CKNotificationInfo setSubtitle:]
  -[CKNotificationInfo setSubtitleLocalizationArgs:]
  -[CKNotificationInfo setCollapseIDKey:]
  -[CKNotificationInfo shouldSendMutableContent]
  -[CKNotificationInfo setAlertBody:]
  -[CKNotificationInfo encodeWithCoder:]
  -[CKNotificationInfo setShouldSendContentAvailable:]
  -[CKNotificationInfo category]
  -[CKNotificationInfo alertLaunchImage]
  -[CKNotificationInfo _setTitleLocalizationKeyNoValidate:]
  -[CKNotificationInfo .cxx_destruct]
  -[CKNotificationInfo alertActionLocalizationKey]
  -[CKNotificationInfo setTitleLocalizationArgs:]
  -[CKNotificationInfo _setAlertActionLocalizationKeyNoValidate:]
  -[CKNotificationInfo _setAlertLocalizationKeyNoValidate:]
  -[CKNotificationInfo _setTitleNoValidate:]
  -[CKNotificationInfo subtitleLocalizationKey]
  -[CKNotificationInfo _setShouldBadgeNoValidate:]
  -[CKNotificationInfo title]
  -[CKNotificationInfo setSubtitleLocalizationKey:]
  -[CKNotificationInfo alertLocalizationArgs]
  -[CKNotificationInfo _setSubtitleNoValidate:]
  -[CKNotificationInfo shouldBadge]
  -[CKNotificationInfo _setSoundNameNoValidate:]
  -[CKNotificationInfo _setAlertLocalizationArgsNoValidate:]
  -[CKNotificationInfo _setShouldSendContentAvailableNoValidate:]
  -[CKNotificationInfo setShouldBadge:]
  -[CKNotificationInfo setAlertActionLocalizationKey:]
  -[CKNotificationInfo copyWithZone:]
  -[CKNotificationInfo setAlertLaunchImage:]
  -[CKNotificationInfo titleLocalizationArgs]
  -[CKNotificationInfo setAlertLocalizationKey:]
  -[CKNotificationInfo alertLocalizationKey]
  -[CKNotificationInfo subtitleLocalizationArgs]
  -[CKNotificationInfo _setSubtitleLocalizationKeyNoValidate:]
  -[CKNotificationInfo setTitle:]
  -[CKNotificationInfo isEqual:]
  -[CKNotificationInfo _setAlertLaunchImageNoValidate:]
  -[CKNotificationInfo initWithCoder:]
  -[CKNotificationInfo setAlertLocalizationArgs:]
  -[CKNotificationInfo soundName]


CKModifySubscriptionsOperation : CKDatabaseOperation <CKModifySubscriptionsOperationCallbacks>
 @property  <CKModifySubscriptionsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKModifySubscriptionsOperationInfo *operationInfo
 @property  NSArray *subscriptionsToSave
 @property  NSArray *subscriptionIDsToDelete
 @property  @? perSubscriptionSaveBlock
 @property  @? perSubscriptionDeleteBlock
 @property  @? modifySubscriptionsCompletionBlock

  // class methods
  +[CKModifySubscriptionsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKModifySubscriptionsOperation activityCreate]
  -[CKModifySubscriptionsOperation _finishOnCallbackQueueWithError:]
  -[CKModifySubscriptionsOperation setSubscriptionIDsToDelete:]
  -[CKModifySubscriptionsOperation perSubscriptionDeleteBlock]
  -[CKModifySubscriptionsOperation handleSubscriptionDeleteForSubscriptionID:error:]
  -[CKModifySubscriptionsOperation perSubscriptionSaveBlock]
  -[CKModifySubscriptionsOperation .cxx_destruct]
  -[CKModifySubscriptionsOperation handleSubscriptionSaveForSubscriptionID:error:]
  -[CKModifySubscriptionsOperation initWithSubscriptionsToSave:subscriptionIDsToDelete:]
  -[CKModifySubscriptionsOperation hasCKOperationCallbacksSet]
  -[CKModifySubscriptionsOperation performCKOperation]
  -[CKModifySubscriptionsOperation fillFromOperationInfo:]
  -[CKModifySubscriptionsOperation CKOperationShouldRun:]
  -[CKModifySubscriptionsOperation subscriptionsToSave]
  -[CKModifySubscriptionsOperation setModifySubscriptionsCompletionBlockIVar:]
  -[CKModifySubscriptionsOperation setPerSubscriptionDeleteBlock:]
  -[CKModifySubscriptionsOperation fillOutOperationInfo:]
  -[CKModifySubscriptionsOperation modifySubscriptionsCompletionBlock]
  -[CKModifySubscriptionsOperation setSubscriptionsToSave:]
  -[CKModifySubscriptionsOperation setModifySubscriptionsCompletionBlock:]
  -[CKModifySubscriptionsOperation subscriptionIDsToDelete]
  -[CKModifySubscriptionsOperation init]
  -[CKModifySubscriptionsOperation setPerSubscriptionSaveBlock:]


CKModifySubscriptionsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *subscriptionsToSave
 @property  NSArray *subscriptionIDsToDelete

  // class methods
  +[CKModifySubscriptionsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKModifySubscriptionsOperationInfo setSubscriptionIDsToDelete:]
  -[CKModifySubscriptionsOperationInfo encodeWithCoder:]
  -[CKModifySubscriptionsOperationInfo .cxx_destruct]
  -[CKModifySubscriptionsOperationInfo subscriptionsToSave]
  -[CKModifySubscriptionsOperationInfo setSubscriptionsToSave:]
  -[CKModifySubscriptionsOperationInfo subscriptionIDsToDelete]
  -[CKModifySubscriptionsOperationInfo initWithCoder:]


CKFetchRecordZoneChangesOperation : CKDatabaseOperation <CKFetchRecordZoneChangesOperationCallbacks>
 @property  NSDictionary *optionsByRecordZoneID
 @property  NSMutableDictionary *statusByZoneID
 @property  NSMutableSet *zoneIDsWithPendingArchivedRecords
 @property  NSMutableSet *zoneIDsWithSyncObligations
 @property  BOOL shouldFetchAssetContents
 @property  NSMutableDictionary *perItemErrors
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  NSDictionary *supplementalChangeTokenByZoneID
 @property  @? perRecordChangeCompletionBlock
 @property  BOOL shouldReportAllPerItemFailures
 @property  <CKFetchRecordZoneChangesOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchRecordZoneChangesOperationInfo *operationInfo
 @property  long long errorReportingStyle
 @property  NSArray *recordZoneIDs
 @property  NSDictionary *configurationsByRecordZoneID
 @property  BOOL fetchAllChanges
 @property  @? recordChangedBlock
 @property  @? recordWasChangedBlock
 @property  @? recordWithIDWasDeletedBlock
 @property  @? recordZoneChangeTokensUpdatedBlock
 @property  @? recordZoneFetchCompletionBlock
 @property  @? fetchRecordZoneChangesCompletionBlock

  // class methods
  +[CKFetchRecordZoneChangesOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchRecordZoneChangesOperation fetchAllChanges]
  -[CKFetchRecordZoneChangesOperation recordChangedBlock]
  -[CKFetchRecordZoneChangesOperation relevantZoneIDs]
  -[CKFetchRecordZoneChangesOperation shouldFetchAssetContents]
  -[CKFetchRecordZoneChangesOperation setRecordChangedBlock:]
  -[CKFetchRecordZoneChangesOperation configurationsByRecordZoneID]
  -[CKFetchRecordZoneChangesOperation setFetchAllChanges:]
  -[CKFetchRecordZoneChangesOperation setRecordZoneIDs:]
  -[CKFetchRecordZoneChangesOperation supplementalChangeTokenByZoneID]
  -[CKFetchRecordZoneChangesOperation recordZoneChangeTokensUpdatedBlock]
  -[CKFetchRecordZoneChangesOperation recordZoneIDs]
  -[CKFetchRecordZoneChangesOperation errorReportingStyle]
  -[CKFetchRecordZoneChangesOperation setRecordZoneChangeTokensUpdatedBlock:]
  -[CKFetchRecordZoneChangesOperation setShouldFetchAssetContents:]
  -[CKFetchRecordZoneChangesOperation setErrorReportingStyle:]
  -[CKFetchRecordZoneChangesOperation activityCreate]
  -[CKFetchRecordZoneChangesOperation setSupplementalChangeTokenByZoneID:]
  -[CKFetchRecordZoneChangesOperation _finishOnCallbackQueueWithError:]
  -[CKFetchRecordZoneChangesOperation setConfigurationsByRecordZoneID:]
  -[CKFetchRecordZoneChangesOperation setRecordZoneFetchCompletionBlockIVar:]
  -[CKFetchRecordZoneChangesOperation handleDeleteForRecordID:recordType:]
  -[CKFetchRecordZoneChangesOperation recordZoneIDsWithSyncObligations]
  -[CKFetchRecordZoneChangesOperation setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKFetchRecordZoneChangesOperation assetTransferOptionsByRecordTypeAndKey]
  -[CKFetchRecordZoneChangesOperation changeTypesFromSetCallbacks]
  -[CKFetchRecordZoneChangesOperation zoneIDsWithPendingArchivedRecords]
  -[CKFetchRecordZoneChangesOperation statusByZoneID]
  -[CKFetchRecordZoneChangesOperation handleChangeForRecordID:record:error:]
  -[CKFetchRecordZoneChangesOperation recordZoneIDsWithPendingArchivedRecords]
  -[CKFetchRecordZoneChangesOperation recordZoneChangesStatusByZoneID]
  -[CKFetchRecordZoneChangesOperation setZoneIDsWithSyncObligations:]
  -[CKFetchRecordZoneChangesOperation .cxx_destruct]
  -[CKFetchRecordZoneChangesOperation setShouldReportAllPerItemFailures:]
  -[CKFetchRecordZoneChangesOperation hasCKOperationCallbacksSet]
  -[CKFetchRecordZoneChangesOperation perItemErrors]
  -[CKFetchRecordZoneChangesOperation shouldReportAllPerItemFailures]
  -[CKFetchRecordZoneChangesOperation recordWithIDWasDeletedBlock]
  -[CKFetchRecordZoneChangesOperation setPerItemErrors:]
  -[CKFetchRecordZoneChangesOperation handleChangeSetCompletionForRecordZoneID:serverChangeToken:clientChangeTokenData:recordChangesStatus:hasPendingArchivedRecords:syncObligationZoneIDs:error:reply:]
  -[CKFetchRecordZoneChangesOperation performCKOperation]
  -[CKFetchRecordZoneChangesOperation recordZoneFetchCompletionBlock]
  -[CKFetchRecordZoneChangesOperation partialFailureForItemsInZone:]
  -[CKFetchRecordZoneChangesOperation zoneIDsWithSyncObligations]
  -[CKFetchRecordZoneChangesOperation fillFromOperationInfo:]
  -[CKFetchRecordZoneChangesOperation setRecordWasChangedBlock:]
  -[CKFetchRecordZoneChangesOperation setStatusByZoneID:]
  -[CKFetchRecordZoneChangesOperation setRecordWithIDWasDeletedBlock:]
  -[CKFetchRecordZoneChangesOperation optionsByRecordZoneID]
  -[CKFetchRecordZoneChangesOperation CKOperationShouldRun:]
  -[CKFetchRecordZoneChangesOperation initWithRecordZoneIDs:configurationsByRecordZoneID:]
  -[CKFetchRecordZoneChangesOperation setZoneIDsWithPendingArchivedRecords:]
  -[CKFetchRecordZoneChangesOperation setPerRecordChangeCompletionBlock:]
  -[CKFetchRecordZoneChangesOperation setOptionsByRecordZoneID:]
  -[CKFetchRecordZoneChangesOperation setFetchRecordZoneChangesCompletionBlock:]
  -[CKFetchRecordZoneChangesOperation setRecordZoneFetchCompletionBlock:]
  -[CKFetchRecordZoneChangesOperation initWithRecordZoneIDs:optionsByRecordZoneID:]
  -[CKFetchRecordZoneChangesOperation fillOutOperationInfo:]
  -[CKFetchRecordZoneChangesOperation perRecordChangeCompletionBlock]
  -[CKFetchRecordZoneChangesOperation recordWasChangedBlock]
  -[CKFetchRecordZoneChangesOperation init]
  -[CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock]


CKFetchRecordZoneChangesOptions : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL fetchNewestChangesFirst
 @property  BOOL fetchChangesMadeByThisDevice
 @property  CKServerChangeToken *previousServerChangeToken
 @property  unsigned long resultsLimit
 @property  NSArray *desiredKeys

  // class methods
  +[CKFetchRecordZoneChangesOptions supportsSecureCoding]

  // instance methods
  -[CKFetchRecordZoneChangesOptions desiredKeys]
  -[CKFetchRecordZoneChangesOptions setDesiredKeys:]
  -[CKFetchRecordZoneChangesOptions resultsLimit]
  -[CKFetchRecordZoneChangesOptions encodeWithCoder:]
  -[CKFetchRecordZoneChangesOptions .cxx_destruct]
  -[CKFetchRecordZoneChangesOptions setPreviousServerChangeToken:]
  -[CKFetchRecordZoneChangesOptions setFetchNewestChangesFirst:]
  -[CKFetchRecordZoneChangesOptions copyWithZone:]
  -[CKFetchRecordZoneChangesOptions setFetchChangesMadeByThisDevice:]
  -[CKFetchRecordZoneChangesOptions fetchNewestChangesFirst]
  -[CKFetchRecordZoneChangesOptions fetchChangesMadeByThisDevice]
  -[CKFetchRecordZoneChangesOptions previousServerChangeToken]
  -[CKFetchRecordZoneChangesOptions init]
  -[CKFetchRecordZoneChangesOptions setResultsLimit:]
  -[CKFetchRecordZoneChangesOptions initWithCoder:]
  -[CKFetchRecordZoneChangesOptions initWithZoneConfiguration:]
  -[CKFetchRecordZoneChangesOptions zoneConfiguration]


CKFetchRecordZoneChangesConfiguration : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL fetchNewestChangesFirst
 @property  BOOL fetchChangesMadeByThisDevice
 @property  CKServerChangeToken *previousServerChangeToken
 @property  unsigned long resultsLimit
 @property  NSArray *desiredKeys

  // class methods
  +[CKFetchRecordZoneChangesConfiguration supportsSecureCoding]

  // instance methods
  -[CKFetchRecordZoneChangesConfiguration desiredKeys]
  -[CKFetchRecordZoneChangesConfiguration setDesiredKeys:]
  -[CKFetchRecordZoneChangesConfiguration resultsLimit]
  -[CKFetchRecordZoneChangesConfiguration encodeWithCoder:]
  -[CKFetchRecordZoneChangesConfiguration .cxx_destruct]
  -[CKFetchRecordZoneChangesConfiguration setPreviousServerChangeToken:]
  -[CKFetchRecordZoneChangesConfiguration setFetchNewestChangesFirst:]
  -[CKFetchRecordZoneChangesConfiguration copyWithZone:]
  -[CKFetchRecordZoneChangesConfiguration setFetchChangesMadeByThisDevice:]
  -[CKFetchRecordZoneChangesConfiguration fetchNewestChangesFirst]
  -[CKFetchRecordZoneChangesConfiguration fetchChangesMadeByThisDevice]
  -[CKFetchRecordZoneChangesConfiguration previousServerChangeToken]
  -[CKFetchRecordZoneChangesConfiguration CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKFetchRecordZoneChangesConfiguration init]
  -[CKFetchRecordZoneChangesConfiguration setResultsLimit:]
  -[CKFetchRecordZoneChangesConfiguration initWithCoder:]


CKFetchRecordZoneChangesOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordZoneIDs
 @property  NSDictionary *configurationsByRecordZoneID
 @property  BOOL shouldFetchAssetContents
 @property  long long changeTypes
 @property  BOOL fetchAllChanges
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  NSDictionary *supplementalChangeTokenByZoneID
 @property  long long errorReportingStyle
 @property  BOOL forcePCSDecryptionAttempt

  // class methods
  +[CKFetchRecordZoneChangesOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchRecordZoneChangesOperationInfo fetchAllChanges]
  -[CKFetchRecordZoneChangesOperationInfo shouldFetchAssetContents]
  -[CKFetchRecordZoneChangesOperationInfo configurationsByRecordZoneID]
  -[CKFetchRecordZoneChangesOperationInfo setFetchAllChanges:]
  -[CKFetchRecordZoneChangesOperationInfo setRecordZoneIDs:]
  -[CKFetchRecordZoneChangesOperationInfo supplementalChangeTokenByZoneID]
  -[CKFetchRecordZoneChangesOperationInfo recordZoneIDs]
  -[CKFetchRecordZoneChangesOperationInfo errorReportingStyle]
  -[CKFetchRecordZoneChangesOperationInfo setErrorReportingStyle:]
  -[CKFetchRecordZoneChangesOperationInfo setForcePCSDecryptionAttempt:]
  -[CKFetchRecordZoneChangesOperationInfo forcePCSDecryptionAttempt]
  -[CKFetchRecordZoneChangesOperationInfo setSupplementalChangeTokenByZoneID:]
  -[CKFetchRecordZoneChangesOperationInfo setConfigurationsByRecordZoneID:]
  -[CKFetchRecordZoneChangesOperationInfo assetTransferOptionsByRecordTypeAndKey]
  -[CKFetchRecordZoneChangesOperationInfo encodeWithCoder:]
  -[CKFetchRecordZoneChangesOperationInfo .cxx_destruct]
  -[CKFetchRecordZoneChangesOperationInfo changeTypes]
  -[CKFetchRecordZoneChangesOperationInfo init]
  -[CKFetchRecordZoneChangesOperationInfo initWithCoder:]


CKModifyRecordsOperation : CKDatabaseOperation <CKModifyRecordsOperationCallbacks>
 @property  NSMutableArray *savedRecords
 @property  NSMutableArray *deletedRecordIDs
 @property  NSMutableDictionary *recordsByRecordIDs
 @property  NSMutableDictionary *recordErrors
 @property  NSMutableDictionary *assetsByRecordIDAndRecordKey
 @property  BOOL shouldReportRecordsInFlight
 @property  NSMutableSet *packagesToDestroy
 @property  <CKModifyRecordsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKModifyRecordsOperationInfo *operationInfo
 @property  BOOL alwaysFetchPCSFromServer
 @property  BOOL shouldOnlySaveAssetContent
 @property  BOOL markAsParticipantNeedsNewInvitationToken
 @property  NSDictionary *recordIDsToDeleteToEtags
 @property  NSDictionary *conflictLosersToResolveByRecordID
 @property  NSDictionary *pluginFieldsForRecordDeletesByID
 @property  @? recordsInFlightBlock
 @property  NSArray *recordsToSave
 @property  NSArray *recordIDsToDelete
 @property  long long savePolicy
 @property  NSData *clientChangeTokenData
 @property  BOOL atomic
 @property  @? perRecordProgressBlock
 @property  @? perRecordCompletionBlock
 @property  @? perRecordSaveBlock
 @property  @? perRecordDeleteBlock
 @property  @? modifyRecordsCompletionBlock

  // class methods
  +[CKModifyRecordsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKModifyRecordsOperation setMarkAsParticipantNeedsNewInvitationToken:]
  -[CKModifyRecordsOperation recordIDsToDelete]
  -[CKModifyRecordsOperation setModifyRecordsCompletionBlock:]
  -[CKModifyRecordsOperation setSavePolicy:]
  -[CKModifyRecordsOperation setRecordIDsToDelete:]
  -[CKModifyRecordsOperation setPerRecordDeleteBlock:]
  -[CKModifyRecordsOperation setPerRecordProgressBlock:]
  -[CKModifyRecordsOperation setRecordsToSave:]
  -[CKModifyRecordsOperation perRecordSaveBlock]
  -[CKModifyRecordsOperation perRecordDeleteBlock]
  -[CKModifyRecordsOperation modifyRecordsCompletionBlock]
  -[CKModifyRecordsOperation atomic]
  -[CKModifyRecordsOperation recordsToSave]
  -[CKModifyRecordsOperation setClientChangeTokenData:]
  -[CKModifyRecordsOperation activityCreate]
  -[CKModifyRecordsOperation clientChangeTokenData]
  -[CKModifyRecordsOperation perRecordProgressBlock]
  -[CKModifyRecordsOperation setPerRecordSaveBlock:]
  -[CKModifyRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKModifyRecordsOperation setAtomic:]
  -[CKModifyRecordsOperation savePolicy]
  -[CKModifyRecordsOperation setRecordErrors:]
  -[CKModifyRecordsOperation setDeletedRecordIDs:]
  -[CKModifyRecordsOperation handleSaveForRecordID:recordMetadata:error:]
  -[CKModifyRecordsOperation perRecordCompletionBlock]
  -[CKModifyRecordsOperation setPerRecordCompletionBlock:]
  -[CKModifyRecordsOperation setPackagesToDestroy:]
  -[CKModifyRecordsOperation assetsByRecordIDAndRecordKey]
  -[CKModifyRecordsOperation setAssetsByRecordIDAndRecordKey:]
  -[CKModifyRecordsOperation shouldOnlySaveAssetContent]
  -[CKModifyRecordsOperation initWithRecordsToSave:recordIDsToDelete:]
  -[CKModifyRecordsOperation shouldReportRecordsInFlight]
  -[CKModifyRecordsOperation claimPackagesInRecord:error:]
  -[CKModifyRecordsOperation .cxx_destruct]
  -[CKModifyRecordsOperation recordsByRecordIDs]
  -[CKModifyRecordsOperation pluginFieldsForRecordDeletesByID]
  -[CKModifyRecordsOperation setAlwaysFetchPCSFromServer:]
  -[CKModifyRecordsOperation destroyPackagesInRecords:]
  -[CKModifyRecordsOperation setConflictLosersToResolveByRecordID:]
  -[CKModifyRecordsOperation hasCKOperationCallbacksSet]
  -[CKModifyRecordsOperation setRecordIDsToDeleteToEtags:]
  -[CKModifyRecordsOperation setShouldReportRecordsInFlight:]
  -[CKModifyRecordsOperation recordErrors]
  -[CKModifyRecordsOperation setModifyRecordsCompletionBlockIVar:]
  -[CKModifyRecordsOperation setShouldOnlySaveAssetContent:]
  -[CKModifyRecordsOperation handleDeleteForRecordID:error:]
  -[CKModifyRecordsOperation savedRecords]
  -[CKModifyRecordsOperation handleRecordUploadForRecordID:recordKey:arrayIndex:signature:size:paddedFileSize:uploaded:uploadReceipt:uploadReceiptExpiration:wrappedAssetKey:clearAssetKey:referenceSignature:]
  -[CKModifyRecordsOperation handleRecordIDsInFlight:reply:]
  -[CKModifyRecordsOperation performCKOperation]
  -[CKModifyRecordsOperation fillFromOperationInfo:]
  -[CKModifyRecordsOperation setSavedRecords:]
  -[CKModifyRecordsOperation packagesToDestroy]
  -[CKModifyRecordsOperation markAsParticipantNeedsNewInvitationToken]
  -[CKModifyRecordsOperation CKOperationShouldRun:]
  -[CKModifyRecordsOperation destroyPackages:]
  -[CKModifyRecordsOperation _prepareFieldValuesForUploadWithError:]
  -[CKModifyRecordsOperation handleRecordModificationForRecordID:didProgress:]
  -[CKModifyRecordsOperation setPluginFieldsForRecordDeletesByID:]
  -[CKModifyRecordsOperation setRecordsInFlightBlock:]
  -[CKModifyRecordsOperation fillOutOperationInfo:]
  -[CKModifyRecordsOperation recordIDsToDeleteToEtags]
  -[CKModifyRecordsOperation deletedRecordIDs]
  -[CKModifyRecordsOperation alwaysFetchPCSFromServer]
  -[CKModifyRecordsOperation init]
  -[CKModifyRecordsOperation recordsInFlightBlock]
  -[CKModifyRecordsOperation setRecordsByRecordIDs:]
  -[CKModifyRecordsOperation conflictLosersToResolveByRecordID]


CKModifyRecordsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordsToSave
 @property  NSArray *recordIDsToDelete
 @property  NSData *clientChangeTokenData
 @property  BOOL atomic
 @property  long long savePolicy
 @property  BOOL shouldOnlySaveAssetContent
 @property  NSDictionary *recordIDsToDeleteToEtags
 @property  NSDictionary *conflictLosersToResolveByRecordID
 @property  NSDictionary *pluginFieldsForRecordDeletesByID
 @property  BOOL shouldReportRecordsInFlight
 @property  NSDictionary *assetUUIDToExpectedProperties
 @property  NSDictionary *packageUUIDToExpectedProperties
 @property  BOOL originatingFromDaemon
 @property  BOOL markAsParticipantNeedsNewInvitationToken
 @property  BOOL shouldSkipPCSRetryBehavior
 @property  BOOL shouldModifyRecordsInDatabase
 @property  BOOL alwaysFetchPCSFromServer

  // class methods
  +[CKModifyRecordsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKModifyRecordsOperationInfo setMarkAsParticipantNeedsNewInvitationToken:]
  -[CKModifyRecordsOperationInfo recordIDsToDelete]
  -[CKModifyRecordsOperationInfo setSavePolicy:]
  -[CKModifyRecordsOperationInfo setRecordIDsToDelete:]
  -[CKModifyRecordsOperationInfo setRecordsToSave:]
  -[CKModifyRecordsOperationInfo setPackageUUIDToExpectedProperties:]
  -[CKModifyRecordsOperationInfo atomic]
  -[CKModifyRecordsOperationInfo recordsToSave]
  -[CKModifyRecordsOperationInfo setAssetUUIDToExpectedProperties:]
  -[CKModifyRecordsOperationInfo setClientChangeTokenData:]
  -[CKModifyRecordsOperationInfo clientChangeTokenData]
  -[CKModifyRecordsOperationInfo setAtomic:]
  -[CKModifyRecordsOperationInfo savePolicy]
  -[CKModifyRecordsOperationInfo assetUUIDToExpectedProperties]
  -[CKModifyRecordsOperationInfo packageUUIDToExpectedProperties]
  -[CKModifyRecordsOperationInfo encodeWithCoder:]
  -[CKModifyRecordsOperationInfo shouldOnlySaveAssetContent]
  -[CKModifyRecordsOperationInfo shouldModifyRecordsInDatabase]
  -[CKModifyRecordsOperationInfo setOriginatingFromDaemon:]
  -[CKModifyRecordsOperationInfo shouldReportRecordsInFlight]
  -[CKModifyRecordsOperationInfo shouldSkipPCSRetryBehavior]
  -[CKModifyRecordsOperationInfo .cxx_destruct]
  -[CKModifyRecordsOperationInfo pluginFieldsForRecordDeletesByID]
  -[CKModifyRecordsOperationInfo setAlwaysFetchPCSFromServer:]
  -[CKModifyRecordsOperationInfo setConflictLosersToResolveByRecordID:]
  -[CKModifyRecordsOperationInfo setRecordIDsToDeleteToEtags:]
  -[CKModifyRecordsOperationInfo setShouldReportRecordsInFlight:]
  -[CKModifyRecordsOperationInfo setShouldOnlySaveAssetContent:]
  -[CKModifyRecordsOperationInfo _commonInit]
  -[CKModifyRecordsOperationInfo setShouldModifyRecordsInDatabase:]
  -[CKModifyRecordsOperationInfo markAsParticipantNeedsNewInvitationToken]
  -[CKModifyRecordsOperationInfo setPluginFieldsForRecordDeletesByID:]
  -[CKModifyRecordsOperationInfo originatingFromDaemon]
  -[CKModifyRecordsOperationInfo setShouldSkipPCSRetryBehavior:]
  -[CKModifyRecordsOperationInfo recordIDsToDeleteToEtags]
  -[CKModifyRecordsOperationInfo alwaysFetchPCSFromServer]
  -[CKModifyRecordsOperationInfo init]
  -[CKModifyRecordsOperationInfo conflictLosersToResolveByRecordID]
  -[CKModifyRecordsOperationInfo initWithCoder:]


CKAssetDownloadStagingInfo : NSObject <CKPropertiesDescription, NSSecureCoding>
 @property  NSNumber *itemID
 @property  NSString *trackingUUID
 @property  NSData *signature
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKAssetDownloadStagingInfo supportsSecureCoding]

  // instance methods
  -[CKAssetDownloadStagingInfo signature]
  -[CKAssetDownloadStagingInfo CKDescribePropertiesUsing:]
  -[CKAssetDownloadStagingInfo encodeWithCoder:]
  -[CKAssetDownloadStagingInfo .cxx_destruct]
  -[CKAssetDownloadStagingInfo itemID]
  -[CKAssetDownloadStagingInfo redactedDescription]
  -[CKAssetDownloadStagingInfo trackingUUID]
  -[CKAssetDownloadStagingInfo initWithCoder:]
  -[CKAssetDownloadStagingInfo initWithItemID:trackingUUID:signature:]


CKRecordChange : NSObject <NSCopying, NSSecureCoding>
 @property  long long changeType
 @property  CKRecordID *recordID
 @property  CKRecord *record
 @property  NSError *error

  // class methods
  +[CKRecordChange supportsSecureCoding]

  // instance methods
  -[CKRecordChange recordID]
  -[CKRecordChange encodeWithCoder:]
  -[CKRecordChange record]
  -[CKRecordChange error]
  -[CKRecordChange changeType]
  -[CKRecordChange .cxx_destruct]
  -[CKRecordChange copyWithZone:]
  -[CKRecordChange initWithChangeType:recordID:record:error:]
  -[CKRecordChange isEqual:]
  -[CKRecordChange initWithCoder:]


CKRecordObserver : NSObject <NSCopying>
 @property  CKContainerSetupInfo *containerInfo
 @property  <CKRecordObservable> *provider
 @property  NSString *recordType

  // instance methods
  -[CKRecordObserver .cxx_destruct]
  -[CKRecordObserver provider]
  -[CKRecordObserver recordType]
  -[CKRecordObserver copyWithZone:]
  -[CKRecordObserver invalidate]
  -[CKRecordObserver init]
  -[CKRecordObserver initWithContainer:recordType:]
  -[CKRecordObserver initWithContainerInfo:recordType:provider:]
  -[CKRecordObserver registerWithBlock:]
  -[CKRecordObserver containerInfo]


CKAssetDownloadPreauthorization : NSObject <NSCopying>
 @property  NSString *responseUUID
 @property  NSDictionary *contentResponseHeaders
 @property  NSData *contentResponseBody

  // instance methods
  -[CKAssetDownloadPreauthorization contentResponseHeaders]
  -[CKAssetDownloadPreauthorization .cxx_destruct]
  -[CKAssetDownloadPreauthorization copyWithZone:]
  -[CKAssetDownloadPreauthorization isEqual:]
  -[CKAssetDownloadPreauthorization initWithResponseUUID:contentResponseHeaders:contentResponseBody:]
  -[CKAssetDownloadPreauthorization responseUUID]
  -[CKAssetDownloadPreauthorization contentResponseBody]


CKSignatureGenerator : NSObject
 @property  ^v generator
 @property  BOOL valid

  // class methods
  +[CKSignatureGenerator signatureWithFileDescriptor:error:]
  +[CKSignatureGenerator isValidSignature:]
  +[CKSignatureGenerator isValidV2Signature:]
  +[CKSignatureGenerator signatureForStreamingAsset]

  // instance methods
  -[CKSignatureGenerator setValid:]
  -[CKSignatureGenerator dealloc]
  -[CKSignatureGenerator isValid]
  -[CKSignatureGenerator generator]
  -[CKSignatureGenerator updateWithData:]
  -[CKSignatureGenerator init]
  -[CKSignatureGenerator _newSignatureByFinishingGenerator]
  -[CKSignatureGenerator updateWithBytes:length:]
  -[CKSignatureGenerator dataByFinishingSignature]
  -[CKSignatureGenerator setGenerator:]


CKSQLiteStatement : NSObject
  // instance methods
  -[CKSQLiteStatement invalidate:]
  -[CKSQLiteStatement .cxx_destruct]
  -[CKSQLiteStatement bindText:atIndex:]


CKAssetRepairOperationUtilities : NSObject
  // class methods
  +[CKAssetRepairOperationUtilities createRepairOperationGroupWithName:]
  +[CKAssetRepairOperationUtilities createRepairContainerFromContainer:]
  +[CKAssetRepairOperationUtilities createRepairContainerFromContainer:withOverrides:]
  +[CKAssetRepairOperationUtilities clearRepairZoneForDatabase:withRepairContainerOverrides:completionHandler:]
  +[CKAssetRepairOperationUtilities repairRecordFromRecord:field:listIndex:repairZoneID:]
  +[CKAssetRepairOperationUtilities uploadRequestMetadataFromRepairRecord:]
  +[CKAssetRepairOperationUtilities repairErrorShouldBeMarkedAsBroken:]
  +[CKAssetRepairOperationUtilities errorIsRetriableInNearFuture:]
  +[CKAssetRepairOperationUtilities errorShouldTriggerNetworkReachabilityEvent:]


CKUploadRequestConfiguration : NSObject <NSSecureCoding, NSCopying, CKSQLiteItem>
 @property  NSString *containerIdentifier
 @property  NSString *applicationBundleIdentifierOverride
 @property  CKRecordZoneID *repairZoneID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKUploadRequestConfiguration supportsSecureCoding]
  +[CKUploadRequestConfiguration configurationFromBaseContainer:]
  +[CKUploadRequestConfiguration resolvedConfigurationWithBaseContainer:overrides:]

  // instance methods
  -[CKUploadRequestConfiguration initWithSqliteRepresentation:]
  -[CKUploadRequestConfiguration setApplicationBundleIdentifierOverride:]
  -[CKUploadRequestConfiguration sqliteRepresentation]
  -[CKUploadRequestConfiguration encodeWithCoder:]
  -[CKUploadRequestConfiguration applicationBundleIdentifierOverride]
  -[CKUploadRequestConfiguration containerIdentifier]
  -[CKUploadRequestConfiguration repairZoneID]
  -[CKUploadRequestConfiguration .cxx_destruct]
  -[CKUploadRequestConfiguration initFromBaseContainer:]
  -[CKUploadRequestConfiguration setContainerIdentifier:]
  -[CKUploadRequestConfiguration copyWithZone:]
  -[CKUploadRequestConfiguration isEqual:]
  -[CKUploadRequestConfiguration setRepairZoneID:]
  -[CKUploadRequestConfiguration initWithCoder:]


CKMapShareURLsToInstalledBundleIDsOperation : CKOperation <CKMapShareURLsToInstalledBundleIDsOperationCallbacks>
 @property  NSMutableArray *specialURLs
 @property  NSMutableArray *genericURLs
 @property  NSMutableDictionary *errorsByURL
 @property  BOOL returnLocalBundlesOnly
 @property  <CKMapShareURLsToInstalledBundleIDsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKMapShareURLsToInstalledBundleIDsOperationInfo *operationInfo
 @property  NSArray *shareURLs
 @property  @? perShareURLBlock
 @property  @? mapBundleIDsCompletionBlock

  // class methods
  +[CKMapShareURLsToInstalledBundleIDsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKMapShareURLsToInstalledBundleIDsOperation activityCreate]
  -[CKMapShareURLsToInstalledBundleIDsOperation _finishOnCallbackQueueWithError:]
  -[CKMapShareURLsToInstalledBundleIDsOperation .cxx_destruct]
  -[CKMapShareURLsToInstalledBundleIDsOperation hasCKOperationCallbacksSet]
  -[CKMapShareURLsToInstalledBundleIDsOperation performCKOperation]
  -[CKMapShareURLsToInstalledBundleIDsOperation fillFromOperationInfo:]
  -[CKMapShareURLsToInstalledBundleIDsOperation CKOperationShouldRun:]
  -[CKMapShareURLsToInstalledBundleIDsOperation fillOutOperationInfo:]
  -[CKMapShareURLsToInstalledBundleIDsOperation init]
  -[CKMapShareURLsToInstalledBundleIDsOperation shareURLs]
  -[CKMapShareURLsToInstalledBundleIDsOperation setShareURLs:]
  -[CKMapShareURLsToInstalledBundleIDsOperation errorsByURL]
  -[CKMapShareURLsToInstalledBundleIDsOperation setErrorsByURL:]
  -[CKMapShareURLsToInstalledBundleIDsOperation handleBundleIDsFetchedForURL:appBundleIDs:daemonBundleIDs:error:]
  -[CKMapShareURLsToInstalledBundleIDsOperation initWithShareURLs:returnLocalBundlesOnly:]
  -[CKMapShareURLsToInstalledBundleIDsOperation setPerShareURLBlock:]
  -[CKMapShareURLsToInstalledBundleIDsOperation perShareURLBlock]
  -[CKMapShareURLsToInstalledBundleIDsOperation setMapBundleIDsCompletionBlock:]
  -[CKMapShareURLsToInstalledBundleIDsOperation mapBundleIDsCompletionBlock]
  -[CKMapShareURLsToInstalledBundleIDsOperation selectLocalBundleIDs:]
  -[CKMapShareURLsToInstalledBundleIDsOperation getStaticBundleIDsForURLSlug:withKey:]
  -[CKMapShareURLsToInstalledBundleIDsOperation specialURLs]
  -[CKMapShareURLsToInstalledBundleIDsOperation setSpecialURLs:]
  -[CKMapShareURLsToInstalledBundleIDsOperation genericURLs]
  -[CKMapShareURLsToInstalledBundleIDsOperation setGenericURLs:]
  -[CKMapShareURLsToInstalledBundleIDsOperation returnLocalBundlesOnly]
  -[CKMapShareURLsToInstalledBundleIDsOperation setReturnLocalBundlesOnly:]


CKMapShareURLsToInstalledBundleIDsOperationInfo : CKOperationInfo <NSSecureCoding, NSCopying>
 @property  NSArray *shareURLs

  // class methods
  +[CKMapShareURLsToInstalledBundleIDsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKMapShareURLsToInstalledBundleIDsOperationInfo encodeWithCoder:]
  -[CKMapShareURLsToInstalledBundleIDsOperationInfo .cxx_destruct]
  -[CKMapShareURLsToInstalledBundleIDsOperationInfo copyWithZone:]
  -[CKMapShareURLsToInstalledBundleIDsOperationInfo initWithCoder:]
  -[CKMapShareURLsToInstalledBundleIDsOperationInfo shareURLs]
  -[CKMapShareURLsToInstalledBundleIDsOperationInfo setShareURLs:]


CKLogicalDeviceScopedDaemonProxy : NSObject
 @property  <CKXPCLogicalDeviceScopedDaemon> *logicalDeviceScopedDaemonProxyCreator
 @property  BOOL hasValidLogicalDeviceScopedDaemonProxyCreator
 @property  <NSObject> *connectionInterruptedObserver
 @property  CKLogicalDeviceContext *deviceContext

  // class methods
  +[CKLogicalDeviceScopedDaemonProxy CKXPCClientToDaemonLogicalDeviceScopedInterface]
  +[CKLogicalDeviceScopedDaemonProxy CKXPCDaemonToClientLogicalDeviceScopedInterface]

  // instance methods
  -[CKLogicalDeviceScopedDaemonProxy deviceContext]
  -[CKLogicalDeviceScopedDaemonProxy addClouddThrottle:]
  -[CKLogicalDeviceScopedDaemonProxy setDeviceContext:]
  -[CKLogicalDeviceScopedDaemonProxy dealloc]
  -[CKLogicalDeviceScopedDaemonProxy setConnectionInterruptedObserver:]
  -[CKLogicalDeviceScopedDaemonProxy clearAllClouddThrottles]
  -[CKLogicalDeviceScopedDaemonProxy .cxx_destruct]
  -[CKLogicalDeviceScopedDaemonProxy connectionInterruptedObserver]
  -[CKLogicalDeviceScopedDaemonProxy allClouddThrottlesWithCompletionHandler:]
  -[CKLogicalDeviceScopedDaemonProxy initWithDeviceContext:]
  -[CKLogicalDeviceScopedDaemonProxy _getLogicalDeviceScopedDaemonProxySynchronous:errorHandler:daemonProxyHandler:]
  -[CKLogicalDeviceScopedDaemonProxy _getLogicalDeviceScopedDaemonProxyCreatorSynchronous:completionHandler:]
  -[CKLogicalDeviceScopedDaemonProxy logicalDeviceScopedDaemonProxyCreator]
  -[CKLogicalDeviceScopedDaemonProxy setLogicalDeviceScopedDaemonProxyCreator:]
  -[CKLogicalDeviceScopedDaemonProxy hasValidLogicalDeviceScopedDaemonProxyCreator]
  -[CKLogicalDeviceScopedDaemonProxy setHasValidLogicalDeviceScopedDaemonProxyCreator:]


CKRecordObserverManager : NSObject
  // class methods
  +[CKRecordObserverManager sharedManager]

  // instance methods
  -[CKRecordObserverManager handleRecordChange:container:completionHandler:]
  -[CKRecordObserverManager .cxx_destruct]
  -[CKRecordObserverManager removeRecordObserver:]
  -[CKRecordObserverManager init]
  -[CKRecordObserverManager addRecordObserver:block:]


CKSQLiteDatabaseKeyedArchiver : NSKeyedArchiver
  // instance methods
  -[CKSQLiteDatabaseKeyedArchiver ck_isCodingForCKSQLiteDatabase]


CKSQLiteDatabaseKeyedUnarchiver : NSKeyedUnarchiver
  // instance methods
  -[CKSQLiteDatabaseKeyedUnarchiver ck_isDecodingForCKSQLiteDatabase]


CKSQLiteDatabase : NSObject <CKSQLiteDatabaseKeyValueProperties>
 @property  NSData *uniquingKey
 @property  NSMapTable *tableGroupCache
 @property  NSString *databaseDirectory
 @property  CKSQLiteTOCTable *tocTable
 @property  CKSQLiteTOCTableGroupTable *tableGroupTable
 @property  BOOL databaseWasCreated
 @property  BOOL removeWhenClosed

  // class methods
  +[CKSQLiteDatabase databaseFilePathInDirectory:]
  +[CKSQLiteDatabase removeLegacyDatabaseAtPath:]
  +[CKSQLiteDatabase databaseArchiveWithObject:]
  +[CKSQLiteDatabase initialize]
  +[CKSQLiteDatabase openDatabaseCount]
  +[CKSQLiteDatabase uniquingKeyForDatabaseDirectory:]
  +[CKSQLiteDatabase databaseInDirectory:options:error:]
  +[CKSQLiteDatabase databaseInDirectory:error:]
  +[CKSQLiteDatabase unarchivedObjectFromDatabaseArchive:]

  // instance methods
  -[CKSQLiteDatabase changeCount]
  -[CKSQLiteDatabase dropTable:]
  -[CKSQLiteDatabase closeDatabase]
  -[CKSQLiteDatabase databaseDirectory]
  -[CKSQLiteDatabase tableGroupWasPreviouslyValidated:]
  -[CKSQLiteDatabase assertDbSerialized]
  -[CKSQLiteDatabase serializer]
  -[CKSQLiteDatabase decrementTableOrGroupCount]
  -[CKSQLiteDatabase UUIDValueForKey:]
  -[CKSQLiteDatabase sqlErrorWithMessage:]
  -[CKSQLiteDatabase uniquingKey]
  -[CKSQLiteDatabase tableGroupCache]
  -[CKSQLiteDatabase performDatabaseTransaction:]
  -[CKSQLiteDatabase tableGroupPassedValidation:]
  -[CKSQLiteDatabase compiledStatementWithSQL:error:]
  -[CKSQLiteDatabase setNumberValue:forKey:]
  -[CKSQLiteDatabase serializeDatabase:]
  -[CKSQLiteDatabase _validateVersionNumbers]
  -[CKSQLiteDatabase forceClosedForUnitTest]
  -[CKSQLiteDatabase tableGroupTable]
  -[CKSQLiteDatabase dealloc]
  -[CKSQLiteDatabase .cxx_destruct]
  -[CKSQLiteDatabase databaseFilePath]
  -[CKSQLiteDatabase assertInTransaction]
  -[CKSQLiteDatabase assertDbNotSerialized]
  -[CKSQLiteDatabase _pruneTables]
  -[CKSQLiteDatabase setStringValue:forKey:]
  -[CKSQLiteDatabase bootstrap]
  -[CKSQLiteDatabase removeDatabaseDirectory]
  -[CKSQLiteDatabase addTransactionCompletionHandler:]
  -[CKSQLiteDatabase setupDatabaseConnection]
  -[CKSQLiteDatabase databaseWasCreated]
  -[CKSQLiteDatabase setUUIDValue:forKey:]
  -[CKSQLiteDatabase dateValueForKey:]
  -[CKSQLiteDatabase executeSQL:]
  -[CKSQLiteDatabase performTOCTransaction:]
  -[CKSQLiteDatabase invalidateCachedStatements]
  -[CKSQLiteDatabase setRemoveWhenClosed:]
  -[CKSQLiteDatabase numberValueForKey:]
  -[CKSQLiteDatabase removeWhenClosed]
  -[CKSQLiteDatabase lastInsertRowID]
  -[CKSQLiteDatabase objectValueForKey:]
  -[CKSQLiteDatabase initWithDatabaseDirectory:]
  -[CKSQLiteDatabase dataValueForKey:]
  -[CKSQLiteDatabase setDataValue:forKey:]
  -[CKSQLiteDatabase tocTable]
  -[CKSQLiteDatabase stringValueForKey:]
  -[CKSQLiteDatabase openExistingDatabase]
  -[CKSQLiteDatabase allTableNames:]
  -[CKSQLiteDatabase setDateValue:forKey:]
  -[CKSQLiteDatabase createNewDatabase]
  -[CKSQLiteDatabase incrementTableOrGroupCount]
  -[CKSQLiteDatabase validateOpenDatabase]
  -[CKSQLiteDatabase setObjectValue:forKey:]


CKUploadMergeableDeltasOperation : CKDatabaseOperation <CKUploadMergeableDeltasOperationCallbacks>
 @property  <CKUploadMergeableDeltasOperationCallbacks> *clientOperationCallbackProxy
 @property  CKUploadMergeableDeltasOperationInfo *operationInfo
 @property  @? perDeltaCompletionBlock
 @property  @? perReplacementCompletionBlock
 @property  @? uploadDeltasCompletionBlock

  // instance methods
  -[CKUploadMergeableDeltasOperation activityCreate]
  -[CKUploadMergeableDeltasOperation _finishOnCallbackQueueWithError:]
  -[CKUploadMergeableDeltasOperation .cxx_destruct]
  -[CKUploadMergeableDeltasOperation hasCKOperationCallbacksSet]
  -[CKUploadMergeableDeltasOperation performCKOperation]
  -[CKUploadMergeableDeltasOperation fillFromOperationInfo:]
  -[CKUploadMergeableDeltasOperation CKOperationShouldRun:]
  -[CKUploadMergeableDeltasOperation fillOutOperationInfo:]
  -[CKUploadMergeableDeltasOperation handleUploadForDeltaIdentifier:error:]
  -[CKUploadMergeableDeltasOperation handleReplacementRequest:error:]
  -[CKUploadMergeableDeltasOperation setPerDeltaCompletionBlock:]
  -[CKUploadMergeableDeltasOperation perDeltaCompletionBlock]
  -[CKUploadMergeableDeltasOperation setPerReplacementCompletionBlock:]
  -[CKUploadMergeableDeltasOperation perReplacementCompletionBlock]
  -[CKUploadMergeableDeltasOperation setUploadDeltasCompletionBlock:]
  -[CKUploadMergeableDeltasOperation uploadDeltasCompletionBlock]
  -[CKUploadMergeableDeltasOperation initWithDeltas:replacementRequests:]


CKUploadMergeableDeltasOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *deltas
 @property  NSArray *replacementRequests

  // class methods
  +[CKUploadMergeableDeltasOperationInfo supportsSecureCoding]

  // instance methods
  -[CKUploadMergeableDeltasOperationInfo encodeWithCoder:]
  -[CKUploadMergeableDeltasOperationInfo .cxx_destruct]
  -[CKUploadMergeableDeltasOperationInfo initWithCoder:]
  -[CKUploadMergeableDeltasOperationInfo deltas]
  -[CKUploadMergeableDeltasOperationInfo replacementRequests]
  -[CKUploadMergeableDeltasOperationInfo setDeltas:]
  -[CKUploadMergeableDeltasOperationInfo setReplacementRequests:]


CKCompleteParticipantVettingOperation : CKOperation <CKCompleteParticipantVettingOperationCallbacks>
 @property  NSString *vettingToken
 @property  NSString *vettingEmail
 @property  NSString *vettingPhone
 @property  NSString *routingKey
 @property  NSData *encryptedKey
 @property  NSString *baseToken
 @property  NSString *displayedHostname
 @property  NSURL *reconstructedShareURL
 @property  CKShareMetadata *shareMetadata
 @property  <CKCompleteParticipantVettingOperationCallbacks> *clientOperationCallbackProxy
 @property  CKCompleteParticipantVettingOperationInfo *operationInfo
 @property  @? completeParticipantVettingCompletionBlock

  // instance methods
  -[CKCompleteParticipantVettingOperation activityCreate]
  -[CKCompleteParticipantVettingOperation _finishOnCallbackQueueWithError:]
  -[CKCompleteParticipantVettingOperation routingKey]
  -[CKCompleteParticipantVettingOperation setRoutingKey:]
  -[CKCompleteParticipantVettingOperation .cxx_destruct]
  -[CKCompleteParticipantVettingOperation setDisplayedHostname:]
  -[CKCompleteParticipantVettingOperation performCKOperation]
  -[CKCompleteParticipantVettingOperation fillFromOperationInfo:]
  -[CKCompleteParticipantVettingOperation CKOperationShouldRun:]
  -[CKCompleteParticipantVettingOperation displayedHostname]
  -[CKCompleteParticipantVettingOperation fillOutOperationInfo:]
  -[CKCompleteParticipantVettingOperation init]
  -[CKCompleteParticipantVettingOperation shareMetadata]
  -[CKCompleteParticipantVettingOperation setBaseToken:]
  -[CKCompleteParticipantVettingOperation baseToken]
  -[CKCompleteParticipantVettingOperation setShareMetadata:]
  -[CKCompleteParticipantVettingOperation handleReconstructedShareURL:]
  -[CKCompleteParticipantVettingOperation handleFetchedShareMetadata:]
  -[CKCompleteParticipantVettingOperation initWithVettingToken:vettingRecord:displayedHostname:]
  -[CKCompleteParticipantVettingOperation setCompleteParticipantVettingCompletionBlock:]
  -[CKCompleteParticipantVettingOperation completeParticipantVettingCompletionBlock]
  -[CKCompleteParticipantVettingOperation vettingToken]
  -[CKCompleteParticipantVettingOperation setVettingToken:]
  -[CKCompleteParticipantVettingOperation vettingEmail]
  -[CKCompleteParticipantVettingOperation setVettingEmail:]
  -[CKCompleteParticipantVettingOperation vettingPhone]
  -[CKCompleteParticipantVettingOperation setVettingPhone:]
  -[CKCompleteParticipantVettingOperation encryptedKey]
  -[CKCompleteParticipantVettingOperation setEncryptedKey:]
  -[CKCompleteParticipantVettingOperation reconstructedShareURL]
  -[CKCompleteParticipantVettingOperation setReconstructedShareURL:]


CKCompleteParticipantVettingOperationInfo : CKOperationInfo <NSSecureCoding>
 @property  NSString *vettingToken
 @property  NSString *vettingEmail
 @property  NSString *vettingPhone
 @property  NSString *routingKey
 @property  NSData *encryptedKey
 @property  NSString *baseToken
 @property  NSString *displayedHostname

  // class methods
  +[CKCompleteParticipantVettingOperationInfo supportsSecureCoding]

  // instance methods
  -[CKCompleteParticipantVettingOperationInfo encodeWithCoder:]
  -[CKCompleteParticipantVettingOperationInfo routingKey]
  -[CKCompleteParticipantVettingOperationInfo setRoutingKey:]
  -[CKCompleteParticipantVettingOperationInfo .cxx_destruct]
  -[CKCompleteParticipantVettingOperationInfo setDisplayedHostname:]
  -[CKCompleteParticipantVettingOperationInfo displayedHostname]
  -[CKCompleteParticipantVettingOperationInfo initWithCoder:]
  -[CKCompleteParticipantVettingOperationInfo setBaseToken:]
  -[CKCompleteParticipantVettingOperationInfo baseToken]
  -[CKCompleteParticipantVettingOperationInfo vettingToken]
  -[CKCompleteParticipantVettingOperationInfo setVettingToken:]
  -[CKCompleteParticipantVettingOperationInfo vettingEmail]
  -[CKCompleteParticipantVettingOperationInfo setVettingEmail:]
  -[CKCompleteParticipantVettingOperationInfo vettingPhone]
  -[CKCompleteParticipantVettingOperationInfo setVettingPhone:]
  -[CKCompleteParticipantVettingOperationInfo encryptedKey]
  -[CKCompleteParticipantVettingOperationInfo setEncryptedKey:]


CKLogicalDeviceContext : NSObject
 @property  CKLogicalDeviceScopedDaemonProxy *deviceScopedDaemonProxy
 @property  CKLogicalDeviceScopedStateManager *deviceScopedStateManager
 @property  CKThrottleManager *throttleManager
 @property  <CKTestDevice> *testDeviceProtocol
 @property  <CKTestDeviceReference> *testDeviceReferenceProtocol
 @property  CKTestDeviceReference *testDeviceReference
 @property  long long pushBehavior

  // class methods
  +[CKLogicalDeviceContext deviceContextForTestDeviceReference:]
  +[CKLogicalDeviceContext defaultContext]
  +[CKLogicalDeviceContext deviceContextForTestDeviceReferenceProtocol:]

  // instance methods
  -[CKLogicalDeviceContext deviceScopedPushTopic:]
  -[CKLogicalDeviceContext _initWithTestDeviceReferenceProtocol:]
  -[CKLogicalDeviceContext testDeviceReferenceProtocol]
  -[CKLogicalDeviceContext deviceScopedStateManager]
  -[CKLogicalDeviceContext setDeviceScopedDaemonProxy:]
  -[CKLogicalDeviceContext .cxx_destruct]
  -[CKLogicalDeviceContext deviceScopedDaemonProxy]
  -[CKLogicalDeviceContext throttleManager]
  -[CKLogicalDeviceContext setThrottleManager:]
  -[CKLogicalDeviceContext setTestDeviceProtocol:]
  -[CKLogicalDeviceContext setDeviceScopedStateManager:]
  -[CKLogicalDeviceContext testDeviceReference]
  -[CKLogicalDeviceContext testDeviceProtocol]
  -[CKLogicalDeviceContext pushBehavior]


CKFetchSubscriptionsOperation : CKDatabaseOperation <CKFetchSubscriptionsOperationCallbacks>
 @property  <CKFetchSubscriptionsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchSubscriptionsOperationInfo *operationInfo
 @property  BOOL isFetchAllSubscriptionsOperation
 @property  NSArray *subscriptionIDs
 @property  @? perSubscriptionCompletionBlock
 @property  @? fetchSubscriptionCompletionBlock

  // class methods
  +[CKFetchSubscriptionsOperation fetchAllSubscriptionsOperation]
  +[CKFetchSubscriptionsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchSubscriptionsOperation activityCreate]
  -[CKFetchSubscriptionsOperation _finishOnCallbackQueueWithError:]
  -[CKFetchSubscriptionsOperation isFetchAllSubscriptionsOperation]
  -[CKFetchSubscriptionsOperation setFetchSubscriptionCompletionBlockIVar:]
  -[CKFetchSubscriptionsOperation initWithSubscriptionIDs:]
  -[CKFetchSubscriptionsOperation .cxx_destruct]
  -[CKFetchSubscriptionsOperation hasCKOperationCallbacksSet]
  -[CKFetchSubscriptionsOperation fetchSubscriptionCompletionBlock]
  -[CKFetchSubscriptionsOperation subscriptionIDs]
  -[CKFetchSubscriptionsOperation handleSubscriptionFetchForSubscriptionID:subscription:error:]
  -[CKFetchSubscriptionsOperation setFetchSubscriptionCompletionBlock:]
  -[CKFetchSubscriptionsOperation performCKOperation]
  -[CKFetchSubscriptionsOperation fillFromOperationInfo:]
  -[CKFetchSubscriptionsOperation CKOperationShouldRun:]
  -[CKFetchSubscriptionsOperation setIsFetchAllSubscriptionsOperation:]
  -[CKFetchSubscriptionsOperation fillOutOperationInfo:]
  -[CKFetchSubscriptionsOperation setPerSubscriptionCompletionBlock:]
  -[CKFetchSubscriptionsOperation setSubscriptionIDs:]
  -[CKFetchSubscriptionsOperation perSubscriptionCompletionBlock]
  -[CKFetchSubscriptionsOperation init]


CKFetchSubscriptionsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *subscriptionIDs
 @property  BOOL isFetchAllSubscriptionsOperation

  // class methods
  +[CKFetchSubscriptionsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchSubscriptionsOperationInfo isFetchAllSubscriptionsOperation]
  -[CKFetchSubscriptionsOperationInfo encodeWithCoder:]
  -[CKFetchSubscriptionsOperationInfo .cxx_destruct]
  -[CKFetchSubscriptionsOperationInfo subscriptionIDs]
  -[CKFetchSubscriptionsOperationInfo setIsFetchAllSubscriptionsOperation:]
  -[CKFetchSubscriptionsOperationInfo setSubscriptionIDs:]
  -[CKFetchSubscriptionsOperationInfo initWithCoder:]


CKLocationSortDescriptor : NSSortDescriptor <NSSecureCoding>
 @property  CLLocation *relativeLocation

  // class methods
  +[CKLocationSortDescriptor supportsSecureCoding]

  // instance methods
  -[CKLocationSortDescriptor encodeWithCoder:]
  -[CKLocationSortDescriptor .cxx_destruct]
  -[CKLocationSortDescriptor copyWithZone:]
  -[CKLocationSortDescriptor initWithCoder:]
  -[CKLocationSortDescriptor CKPropertiesDescription]
  -[CKLocationSortDescriptor compareObject:toObject:]
  -[CKLocationSortDescriptor initWithKey:relativeLocation:]
  -[CKLocationSortDescriptor relativeLocation]


CKFetchRecordsOperation : CKDatabaseOperation <CKFetchRecordsOperationCallbacks, CKOperationInMemoryAssets>
 @property  <CKFetchRecordsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchRecordsOperationInfo *operationInfo
 @property  BOOL isFetchCurrentUserOperation
 @property  NSDictionary *webSharingIdentityDataByRecordID
 @property  BOOL shouldFetchAssetContent
 @property  BOOL shouldFetchAssetContentInMemory
 @property  BOOL dropInMemoryAssetContentASAP
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  NSMutableDictionary *recordIDsToRecords
 @property  NSDictionary *desiredPackageFileIndices
 @property  NSDictionary *recordIDsToETags
 @property  @? perRecordETagMatchedBlock
 @property  NSDictionary *recordIDsToVersionETags
 @property  NSArray *recordIDs
 @property  NSArray *desiredKeys
 @property  @? perRecordProgressBlock
 @property  @? perRecordCompletionBlock
 @property  @? fetchRecordsCompletionBlock
 @property  NSMutableDictionary *assetInfoByArrayIndexByRecordKeyByRecordID

  // class methods
  +[CKFetchRecordsOperation fetchCurrentUserRecordOperation]
  +[CKFetchRecordsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchRecordsOperation shouldFetchAssetContentInMemory]
  -[CKFetchRecordsOperation desiredKeys]
  -[CKFetchRecordsOperation setShouldFetchAssetContent:]
  -[CKFetchRecordsOperation setDesiredPackageFileIndices:]
  -[CKFetchRecordsOperation setPerRecordProgressBlock:]
  -[CKFetchRecordsOperation setDesiredKeys:]
  -[CKFetchRecordsOperation recordIDsToVersionETags]
  -[CKFetchRecordsOperation setShouldFetchAssetContentInMemory:]
  -[CKFetchRecordsOperation setWebSharingIdentityDataByRecordID:]
  -[CKFetchRecordsOperation recordIDsToETags]
  -[CKFetchRecordsOperation setRecordIDs:]
  -[CKFetchRecordsOperation activityCreate]
  -[CKFetchRecordsOperation fetchRecordsCompletionBlock]
  -[CKFetchRecordsOperation setRecordIDsToRecords:]
  -[CKFetchRecordsOperation perRecordProgressBlock]
  -[CKFetchRecordsOperation webSharingIdentityDataByRecordID]
  -[CKFetchRecordsOperation recordIDs]
  -[CKFetchRecordsOperation _finishOnCallbackQueueWithError:]
  -[CKFetchRecordsOperation setRecordIDsToVersionETags:]
  -[CKFetchRecordsOperation setFetchRecordsCompletionBlock:]
  -[CKFetchRecordsOperation desiredPackageFileIndices]
  -[CKFetchRecordsOperation setRecordIDsToETags:]
  -[CKFetchRecordsOperation setAssetInfoByArrayIndexByRecordKeyByRecordID:]
  -[CKFetchRecordsOperation shouldFetchAssetContent]
  -[CKFetchRecordsOperation perRecordCompletionBlock]
  -[CKFetchRecordsOperation setPerRecordCompletionBlock:]
  -[CKFetchRecordsOperation setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKFetchRecordsOperation perRecordETagMatchedBlock]
  -[CKFetchRecordsOperation assetTransferOptionsByRecordTypeAndKey]
  -[CKFetchRecordsOperation setPerRecordETagMatchedBlock:]
  -[CKFetchRecordsOperation recordIDsToRecords]
  -[CKFetchRecordsOperation isFetchCurrentUserOperation]
  -[CKFetchRecordsOperation handleAssetDataForRecordID:recordKey:arrayIndex:data:offset:]
  -[CKFetchRecordsOperation claimPackagesInRecord:error:]
  -[CKFetchRecordsOperation setFetchRecordsCompletionBlockIVar:]
  -[CKFetchRecordsOperation .cxx_destruct]
  -[CKFetchRecordsOperation hasCKOperationCallbacksSet]
  -[CKFetchRecordsOperation handleFetchForRecordID:didProgress:]
  -[CKFetchRecordsOperation handleFetchForRecordID:record:error:]
  -[CKFetchRecordsOperation setIsFetchCurrentUserOperation:]
  -[CKFetchRecordsOperation performCKOperation]
  -[CKFetchRecordsOperation fillFromOperationInfo:]
  -[CKFetchRecordsOperation CKOperationShouldRun:]
  -[CKFetchRecordsOperation initWithRecordIDs:]
  -[CKFetchRecordsOperation fillOutOperationInfo:]
  -[CKFetchRecordsOperation assetInfoByArrayIndexByRecordKeyByRecordID]
  -[CKFetchRecordsOperation setDropInMemoryAssetContentASAP:]
  -[CKFetchRecordsOperation dropInMemoryAssetContentASAP]
  -[CKFetchRecordsOperation init]


CKFetchRecordsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordIDs
 @property  BOOL isFetchCurrentUserOperation
 @property  NSArray *desiredKeys
 @property  NSDictionary *recordIDsToETags
 @property  NSDictionary *recordIDsToVersionETags
 @property  NSDictionary *desiredPackageFileIndices
 @property  BOOL shouldFetchAssetContent
 @property  BOOL shouldFetchAssetContentInMemory
 @property  BOOL dropInMemoryAssetContentASAP
 @property  BOOL shouldFetchMergeableValues
 @property  NSDictionary *assetTransferOptionsByRecordTypeAndKey
 @property  NSSet *assetFieldNamesToPublishURLs
 @property  unsigned long requestedTTL
 @property  unsigned long URLOptions
 @property  NSDictionary *webSharingIdentityDataByRecordID

  // class methods
  +[CKFetchRecordsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchRecordsOperationInfo assetFieldNamesToPublishURLs]
  -[CKFetchRecordsOperationInfo shouldFetchAssetContentInMemory]
  -[CKFetchRecordsOperationInfo desiredKeys]
  -[CKFetchRecordsOperationInfo setRequestedTTL:]
  -[CKFetchRecordsOperationInfo setShouldFetchAssetContent:]
  -[CKFetchRecordsOperationInfo setDesiredPackageFileIndices:]
  -[CKFetchRecordsOperationInfo setURLOptions:]
  -[CKFetchRecordsOperationInfo setDesiredKeys:]
  -[CKFetchRecordsOperationInfo recordIDsToVersionETags]
  -[CKFetchRecordsOperationInfo requestedTTL]
  -[CKFetchRecordsOperationInfo setShouldFetchAssetContentInMemory:]
  -[CKFetchRecordsOperationInfo setShouldFetchMergeableValues:]
  -[CKFetchRecordsOperationInfo setWebSharingIdentityDataByRecordID:]
  -[CKFetchRecordsOperationInfo recordIDsToETags]
  -[CKFetchRecordsOperationInfo setRecordIDs:]
  -[CKFetchRecordsOperationInfo setAssetFieldNamesToPublishURLs:]
  -[CKFetchRecordsOperationInfo shouldFetchMergeableValues]
  -[CKFetchRecordsOperationInfo webSharingIdentityDataByRecordID]
  -[CKFetchRecordsOperationInfo recordIDs]
  -[CKFetchRecordsOperationInfo setRecordIDsToVersionETags:]
  -[CKFetchRecordsOperationInfo desiredPackageFileIndices]
  -[CKFetchRecordsOperationInfo URLOptions]
  -[CKFetchRecordsOperationInfo setRecordIDsToETags:]
  -[CKFetchRecordsOperationInfo shouldFetchAssetContent]
  -[CKFetchRecordsOperationInfo setAssetTransferOptionsByRecordTypeAndKey:]
  -[CKFetchRecordsOperationInfo assetTransferOptionsByRecordTypeAndKey]
  -[CKFetchRecordsOperationInfo encodeWithCoder:]
  -[CKFetchRecordsOperationInfo isFetchCurrentUserOperation]
  -[CKFetchRecordsOperationInfo .cxx_destruct]
  -[CKFetchRecordsOperationInfo setIsFetchCurrentUserOperation:]
  -[CKFetchRecordsOperationInfo setDropInMemoryAssetContentASAP:]
  -[CKFetchRecordsOperationInfo dropInMemoryAssetContentASAP]
  -[CKFetchRecordsOperationInfo init]
  -[CKFetchRecordsOperationInfo initWithCoder:]


CKContainerOptions : NSObject <CKSQLiteItem, NSSecureCoding, NSCopying>
 @property  BOOL returnPCSMetadata
 @property  CKUploadRequestConfiguration *uploadRequestConfiguration
 @property  NSString *personaIdentifier
 @property  BOOL returnRequestOperationProto
 @property  BOOL isServiceManatee
 @property  NSDictionary *fakeEntitlements
 @property  BOOL holdAllOperations
 @property  <CKTestDeviceReference> *testDeviceReferenceProtocol
 @property  CKTestDeviceReference *testDeviceReference
 @property  BOOL captureResponseHTTPHeaders
 @property  BOOL useZoneWidePCS
 @property  CKAccountOverrideInfo *accountOverrideInfo
 @property  CKAccountOverrideInfo *accountInfoOverride
 @property  unsigned long mmcsEncryptionSupport
 @property  NSString *encryptionServiceName
 @property  BOOL bypassPCSEncryption
 @property  BOOL enforceNamedOperationGroups
 @property  BOOL forceEnableReadOnlyManatee
 @property  BOOL useClearAssetEncryption
 @property  BOOL accountInfoCacheIsDisabled
 @property  BOOL useAnonymousToServerShareParticipants
 @property  BOOL encryptMergeableValueMetadata
 @property  NSString *applicationBundleIdentifierOverrideForContainerAccess
 @property  NSString *applicationBundleIdentifierOverrideForNetworkAttribution
 @property  NSString *applicationBundleIdentifierOverrideForPushTopicGeneration
 @property  NSString *applicationBundleIdentifierOverrideForTCC
 @property  BOOL maintainRecordUploadOrder
 @property  BOOL addDatabaseScopeToZoneIDs
 @property  BOOL fetchChangesForMergeableValues
 @property  BOOL prefersHiddenAllowedSharingOptionsUI
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKContainerOptions supportsSecureCoding]

  // instance methods
  -[CKContainerOptions mmcsEncryptionSupport]
  -[CKContainerOptions setMmcsEncryptionSupport:]
  -[CKContainerOptions setUseMMCSEncryptionV2:]
  -[CKContainerOptions initWithSqliteRepresentation:]
  -[CKContainerOptions applicationBundleIdentifierOverrideForContainerAccess]
  -[CKContainerOptions setPersonaIdentifier:]
  -[CKContainerOptions returnRequestOperationProto]
  -[CKContainerOptions setApplicationBundleIdentifierOverride:]
  -[CKContainerOptions setApplicationBundleIdentifierOverrideForContainerAccess:]
  -[CKContainerOptions setUseZoneWidePCS:]
  -[CKContainerOptions setCaptureResponseHTTPHeaders:]
  -[CKContainerOptions personaIdentifier]
  -[CKContainerOptions sqliteRepresentation]
  -[CKContainerOptions setAccountOverrideInfo:]
  -[CKContainerOptions setReturnRequestOperationProto:]
  -[CKContainerOptions useClearAssetEncryption]
  -[CKContainerOptions useZoneWidePCS]
  -[CKContainerOptions encodeWithCoder:]
  -[CKContainerOptions applicationBundleIdentifierOverrideForNetworkAttribution]
  -[CKContainerOptions setTestDeviceReferenceProtocol:]
  -[CKContainerOptions applicationBundleIdentifierOverrideForTCC]
  -[CKContainerOptions holdAllOperations]
  -[CKContainerOptions setForceEnableReadOnlyManatee:]
  -[CKContainerOptions testDeviceReferenceProtocol]
  -[CKContainerOptions accountInfoOverride]
  -[CKContainerOptions .cxx_destruct]
  -[CKContainerOptions setApplicationBundleIdentifierOverrideForTCC:]
  -[CKContainerOptions captureResponseHTTPHeaders]
  -[CKContainerOptions addDatabaseScopeToZoneIDs]
  -[CKContainerOptions applicationBundleIdentifierOverrideForPushTopicGeneration]
  -[CKContainerOptions uploadRequestConfiguration]
  -[CKContainerOptions setApplicationBundleIdentifierOverrideForNetworkAttribution:]
  -[CKContainerOptions fetchChangesForMergeableValues]
  -[CKContainerOptions setAccountInfoCacheIsDisabled:]
  -[CKContainerOptions ck_bindInStatement:atIndex:]
  -[CKContainerOptions setApplicationBundleIdentifierOverrideForPushTopicGeneration:]
  -[CKContainerOptions setTestDeviceReference:]
  -[CKContainerOptions encryptionServiceName]
  -[CKContainerOptions setUseClearAssetEncryption:]
  -[CKContainerOptions encryptMergeableValueMetadata]
  -[CKContainerOptions returnPCSMetadata]
  -[CKContainerOptions setHoldAllOperations:]
  -[CKContainerOptions setIsServiceManatee:]
  -[CKContainerOptions setPrefersHiddenAllowedSharingOptionsUI:]
  -[CKContainerOptions prefersHiddenAllowedSharingOptionsUI]
  -[CKContainerOptions forceEnableReadOnlyManatee]
  -[CKContainerOptions setBypassPCSEncryption:]
  -[CKContainerOptions copyWithZone:]
  -[CKContainerOptions setEncryptMergeableValueMetadata:]
  -[CKContainerOptions setUseAnonymousToServerShareParticipants:]
  -[CKContainerOptions useAnonymousToServerShareParticipants]
  -[CKContainerOptions bypassPCSEncryption]
  -[CKContainerOptions fakeEntitlements]
  -[CKContainerOptions maintainRecordUploadOrder]
  -[CKContainerOptions setReturnPCSMetadata:]
  -[CKContainerOptions isServiceManatee]
  -[CKContainerOptions setUploadRequestConfiguration:]
  -[CKContainerOptions accountOverrideInfo]
  -[CKContainerOptions setFakeEntitlements:]
  -[CKContainerOptions setEncryptionServiceName:]
  -[CKContainerOptions enforceNamedOperationGroups]
  -[CKContainerOptions setAccountInfoOverride:]
  -[CKContainerOptions setFetchChangesForMergeableValues:]
  -[CKContainerOptions testDeviceReference]
  -[CKContainerOptions isEqual:]
  -[CKContainerOptions setEnforceNamedOperationGroups:]
  -[CKContainerOptions setAddDatabaseScopeToZoneIDs:]
  -[CKContainerOptions accountInfoCacheIsDisabled]
  -[CKContainerOptions init]
  -[CKContainerOptions initWithCoder:]
  -[CKContainerOptions setMaintainRecordUploadOrder:]


CKPredicateValidatorInstance : NSObject <CKObjectValidating>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKPredicateValidatorInstance validate:error:]


CKRecursivePredicateValidator : CKPredicateValidatorInstance
 @property  <CKObjectValidating> *validator

  // instance methods
  -[CKRecursivePredicateValidator validate:error:]
  -[CKRecursivePredicateValidator validator]
  -[CKRecursivePredicateValidator .cxx_destruct]
  -[CKRecursivePredicateValidator initWithValidator:]
  -[CKRecursivePredicateValidator setValidator:]
  -[CKRecursivePredicateValidator CKPropertiesDescription]


CKAnyPredicateValidator : CKPredicateValidatorInstance
  // instance methods
  -[CKAnyPredicateValidator validate:error:]
  -[CKAnyPredicateValidator .cxx_destruct]
  -[CKAnyPredicateValidator CKPropertiesDescription]


CKAllPredicateValidator : CKPredicateValidatorInstance
 @property  NSArray *validators

  // instance methods
  -[CKAllPredicateValidator validate:error:]
  -[CKAllPredicateValidator validators]
  -[CKAllPredicateValidator setValidators:]
  -[CKAllPredicateValidator .cxx_destruct]
  -[CKAllPredicateValidator initWithValidators:]
  -[CKAllPredicateValidator CKPropertiesDescription]


CKCompoundTypePredicateValidator : CKPredicateValidatorInstance
 @property  unsigned long type

  // instance methods
  -[CKCompoundTypePredicateValidator validate:error:]
  -[CKCompoundTypePredicateValidator type]
  -[CKCompoundTypePredicateValidator initWithType:]
  -[CKCompoundTypePredicateValidator setType:]
  -[CKCompoundTypePredicateValidator CKPropertiesDescription]


CKTruePredicateValidator : CKPredicateValidatorInstance
  // instance methods
  -[CKTruePredicateValidator validate:error:]


CKCompoundSubpredicateValidator : CKPredicateValidatorInstance
 @property  <CKObjectValidating> *validator

  // instance methods
  -[CKCompoundSubpredicateValidator validate:error:]
  -[CKCompoundSubpredicateValidator validator]
  -[CKCompoundSubpredicateValidator .cxx_destruct]
  -[CKCompoundSubpredicateValidator initWithValidator:]
  -[CKCompoundSubpredicateValidator setValidator:]
  -[CKCompoundSubpredicateValidator CKPropertiesDescription]


CKFlipFlopPredicateValidator : CKPredicateValidatorInstance
 @property  <CKObjectValidating> *validator

  // instance methods
  -[CKFlipFlopPredicateValidator validate:error:]
  -[CKFlipFlopPredicateValidator validator]
  -[CKFlipFlopPredicateValidator .cxx_destruct]
  -[CKFlipFlopPredicateValidator initWithValidator:]
  -[CKFlipFlopPredicateValidator setValidator:]
  -[CKFlipFlopPredicateValidator CKPropertiesDescription]


CKComparisonPredicateValidator : CKPredicateValidatorInstance
 @property  <CKObjectValidating> *modifierValidator
 @property  <CKObjectValidating> *leftExpressionValidator
 @property  <CKObjectValidating> *operatorValidator
 @property  <CKObjectValidating> *optionsValidator
 @property  <CKObjectValidating> *rightExpressionValidator

  // instance methods
  -[CKComparisonPredicateValidator validate:error:]
  -[CKComparisonPredicateValidator setRightExpressionValidator:]
  -[CKComparisonPredicateValidator modifierValidator]
  -[CKComparisonPredicateValidator .cxx_destruct]
  -[CKComparisonPredicateValidator leftExpressionValidator]
  -[CKComparisonPredicateValidator operatorValidator]
  -[CKComparisonPredicateValidator setOptionsValidator:]
  -[CKComparisonPredicateValidator setLeftExpressionValidator:]
  -[CKComparisonPredicateValidator setOperatorValidator:]
  -[CKComparisonPredicateValidator optionsValidator]
  -[CKComparisonPredicateValidator setModifierValidator:]
  -[CKComparisonPredicateValidator rightExpressionValidator]
  -[CKComparisonPredicateValidator CKPropertiesDescription]


CKComparisonOperatorValidator : CKPredicateValidatorInstance
 @property  unsigned long operatorType

  // instance methods
  -[CKComparisonOperatorValidator validate:error:]
  -[CKComparisonOperatorValidator setOperatorType:]
  -[CKComparisonOperatorValidator initWithOperatorType:]
  -[CKComparisonOperatorValidator operatorType]
  -[CKComparisonOperatorValidator CKPropertiesDescription]


CKComparisonModifierValidator : CKPredicateValidatorInstance
 @property  unsigned long modifier

  // instance methods
  -[CKComparisonModifierValidator modifier]
  -[CKComparisonModifierValidator validate:error:]
  -[CKComparisonModifierValidator setModifier:]
  -[CKComparisonModifierValidator initWithModifier:]
  -[CKComparisonModifierValidator CKPropertiesDescription]


CKComparisonOptionsValidator : CKPredicateValidatorInstance
  // instance methods
  -[CKComparisonOptionsValidator validate:error:]
  -[CKComparisonOptionsValidator CKPropertiesDescription]


CKConstantValueExpressionValidator : CKPredicateValidatorInstance
 @property  <CKObjectValidating> *validator

  // instance methods
  -[CKConstantValueExpressionValidator validate:error:]
  -[CKConstantValueExpressionValidator validator]
  -[CKConstantValueExpressionValidator .cxx_destruct]
  -[CKConstantValueExpressionValidator initWithValidator:]
  -[CKConstantValueExpressionValidator setValidator:]
  -[CKConstantValueExpressionValidator CKPropertiesDescription]


CKKeyPathExpressionValidator : CKPredicateValidatorInstance
 @property  <CKObjectValidating> *validator

  // instance methods
  -[CKKeyPathExpressionValidator validate:error:]
  -[CKKeyPathExpressionValidator validator]
  -[CKKeyPathExpressionValidator .cxx_destruct]
  -[CKKeyPathExpressionValidator initWithValidator:]
  -[CKKeyPathExpressionValidator setValidator:]
  -[CKKeyPathExpressionValidator CKPropertiesDescription]


CKAggregateExpressionValidator : CKPredicateValidatorInstance
 @property  NSArray *subExpressionValidators

  // instance methods
  -[CKAggregateExpressionValidator validate:error:]
  -[CKAggregateExpressionValidator .cxx_destruct]
  -[CKAggregateExpressionValidator initWithValidators:]
  -[CKAggregateExpressionValidator subExpressionValidators]
  -[CKAggregateExpressionValidator setSubExpressionValidators:]
  -[CKAggregateExpressionValidator CKPropertiesDescription]


CKFunctionExpressionValidator : CKPredicateValidatorInstance
  // instance methods
  -[CKFunctionExpressionValidator validate:error:]
  -[CKFunctionExpressionValidator .cxx_destruct]
  -[CKFunctionExpressionValidator CKPropertiesDescription]


CKEvaluatedObjectExpressionValidator : CKPredicateValidatorInstance
  // instance methods
  -[CKEvaluatedObjectExpressionValidator validate:error:]


CKKindOfClassValidator : CKPredicateValidatorInstance
  // instance methods
  -[CKKindOfClassValidator validate:error:]
  -[CKKindOfClassValidator .cxx_destruct]
  -[CKKindOfClassValidator CKPropertiesDescription]


CKKindOfCollectionClassValidator : CKPredicateValidatorInstance
  // instance methods
  -[CKKindOfCollectionClassValidator validate:error:]


CKStringValueValidator : CKPredicateValidatorInstance
 @property  NSString *value

  // instance methods
  -[CKStringValueValidator initWithValue:]
  -[CKStringValueValidator validate:error:]
  -[CKStringValueValidator .cxx_destruct]
  -[CKStringValueValidator setValue:]
  -[CKStringValueValidator value]
  -[CKStringValueValidator CKPropertiesDescription]


CKCustomBlockValidator : CKPredicateValidatorInstance
 @property  @? block

  // instance methods
  -[CKCustomBlockValidator validate:error:]
  -[CKCustomBlockValidator .cxx_destruct]
  -[CKCustomBlockValidator setBlock:]
  -[CKCustomBlockValidator block]
  -[CKCustomBlockValidator initWithBlock:]


CKTrueValidator : CKPredicateValidatorInstance
  // instance methods
  -[CKTrueValidator validate:error:]


CKNilValidator : CKPredicateValidatorInstance
  // instance methods
  -[CKNilValidator validate:error:]


CKFetchRegisteredBundleIDsOperation : CKOperation <CKFetchRegisteredBundleIDsOperationCallbacks>
 @property  NSArray *bundleIDs
 @property  <CKFetchRegisteredBundleIDsOperationCallbacks> *clientOperationCallbackProxy
 @property  @? fetchRegisteredBundleIDsCompletionBlock

  // class methods
  +[CKFetchRegisteredBundleIDsOperation daemonCallbackCompletionSelector]
  +[CKFetchRegisteredBundleIDsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchRegisteredBundleIDsOperation activityCreate]
  -[CKFetchRegisteredBundleIDsOperation _finishOnCallbackQueueWithError:]
  -[CKFetchRegisteredBundleIDsOperation .cxx_destruct]
  -[CKFetchRegisteredBundleIDsOperation setBundleIDs:]
  -[CKFetchRegisteredBundleIDsOperation hasCKOperationCallbacksSet]
  -[CKFetchRegisteredBundleIDsOperation performCKOperation]
  -[CKFetchRegisteredBundleIDsOperation bundleIDs]
  -[CKFetchRegisteredBundleIDsOperation handleOperationDidCompleteWithBundleIDs:metrics:error:]
  -[CKFetchRegisteredBundleIDsOperation setFetchRegisteredBundleIDsCompletionBlock:]
  -[CKFetchRegisteredBundleIDsOperation fetchRegisteredBundleIDsCompletionBlock]


CKThrottle : NSObject <NSSecureCoding>
 @property  NSNumber *throttleID
 @property  NSString *label
 @property  NSString *containerIdentifier
 @property  NSNumber *databaseScope
 @property  NSString *zoneName
 @property  NSNumber *operationType
 @property  NSString *serviceName
 @property  NSString *functionName
 @property  NSString *bundleID
 @property  NSString *operationGroupNamePrefix
 @property  NSDate *throttleStartDate
 @property  NSNumber *intervalLengthSeconds
 @property  NSNumber *repeatEverySeconds
 @property  NSNumber *allowedRequestCount
 @property  NSDate *expirationDate
 @property  NSNumber *sentRequestCount
 @property  NSNumber *currentRequestWindowIndex
 @property  NSNumber *errorCode
 @property  NSNumber *isServerThrottle

  // class methods
  +[CKThrottle supportsSecureCoding]

  // instance methods
  -[CKThrottle operationType]
  -[CKThrottle setServiceName:]
  -[CKThrottle setErrorCode:]
  -[CKThrottle errorCode]
  -[CKThrottle setOperationType:]
  -[CKThrottle expirationDate]
  -[CKThrottle setExpirationDate:]
  -[CKThrottle encodeWithCoder:]
  -[CKThrottle zoneName]
  -[CKThrottle containerIdentifier]
  -[CKThrottle setBundleID:]
  -[CKThrottle setLabel:]
  -[CKThrottle serviceName]
  -[CKThrottle .cxx_destruct]
  -[CKThrottle setContainerIdentifier:]
  -[CKThrottle copyWithZone:]
  -[CKThrottle setZoneName:]
  -[CKThrottle label]
  -[CKThrottle databaseScope]
  -[CKThrottle isExpired]
  -[CKThrottle bundleID]
  -[CKThrottle functionName]
  -[CKThrottle setDatabaseScope:]
  -[CKThrottle isEqual:]
  -[CKThrottle init]
  -[CKThrottle initWithCoder:]
  -[CKThrottle setFunctionName:]
  -[CKThrottle throttleBlockingUntilNextRequestWindow]
  -[CKThrottle canTestInClientProcess]
  -[CKThrottle appliesToCriteria:]
  -[CKThrottle delayUntilNextOperationAllowed]
  -[CKThrottle incrementSentRequestCount]
  -[CKThrottle throttleID]
  -[CKThrottle setThrottleID:]
  -[CKThrottle operationGroupNamePrefix]
  -[CKThrottle setOperationGroupNamePrefix:]
  -[CKThrottle throttleStartDate]
  -[CKThrottle setThrottleStartDate:]
  -[CKThrottle intervalLengthSeconds]
  -[CKThrottle setIntervalLengthSeconds:]
  -[CKThrottle repeatEverySeconds]
  -[CKThrottle setRepeatEverySeconds:]
  -[CKThrottle allowedRequestCount]
  -[CKThrottle setAllowedRequestCount:]
  -[CKThrottle isServerThrottle]
  -[CKThrottle setIsServerThrottle:]
  -[CKThrottle sentRequestCount]
  -[CKThrottle setSentRequestCount:]
  -[CKThrottle currentRequestWindowIndex]
  -[CKThrottle setCurrentRequestWindowIndex:]


CKOperationInfo : NSObject <NSSecureCoding, NSCopying>
 @property  NSString *operationID
 @property  BOOL isOutstandingOperation
 @property  NSString *ckOperationClassName
 @property  NSString *operationDaemonCallbackProtocolName
 @property  CKOperationMMCSRequestOptions *MMCSRequestOptions
 @property  CKOperationGroup *group
 @property  CKOperationConfiguration *resolvedConfiguration
 @property  BOOL clientHasValidatedEntitlements
 @property  id parentOperation
 @property  unsigned long requestOriginator
 @property  BOOL isLongLived
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsExpensiveNetworkAccess
 @property  long long qualityOfService
 @property  NSString *applicationBundleIdentifierOverrideForContainerAccess
 @property  NSString *applicationBundleIdentifierOverrideForNetworkAttribution
 @property  NSString *sourceApplicationSecondaryIdentifier
 @property  BOOL automaticallyRetryNetworkFailures
 @property  unsigned long discretionaryNetworkBehavior
 @property  BOOL preferAnonymousRequests
 @property  double timeoutIntervalForRequest
 @property  double timeoutIntervalForResource
 @property  NSDictionary *additionalRequestHTTPHeaders
 @property  NSString *authPromptReason
 @property  BOOL isCloudKitSupportOperation
 @property  NSNumber *cacheDeleteAvailableSpaceClass
 @property  BOOL usesAssetDownloadStagingManager
 @property  BOOL wantsRequestStatistics
 @property  long long clientQueuePriority
 @property  unsigned long duetPreClearedMode
 @property  unsigned long discretionaryWhenBackgroundedState
 @property  unsigned long systemScheduler

  // class methods
  +[CKOperationInfo supportsSecureCoding]

  // instance methods
  -[CKOperationInfo discretionaryNetworkBehavior]
  -[CKOperationInfo cacheDeleteAvailableSpaceClass]
  -[CKOperationInfo allowsExpensiveNetworkAccess]
  -[CKOperationInfo additionalRequestHTTPHeaders]
  -[CKOperationInfo allowsCellularAccess]
  -[CKOperationInfo applicationBundleIdentifierOverrideForContainerAccess]
  -[CKOperationInfo preferAnonymousRequests]
  -[CKOperationInfo isCloudKitSupportOperation]
  -[CKOperationInfo sourceApplicationSecondaryIdentifier]
  -[CKOperationInfo duetPreClearedMode]
  -[CKOperationInfo encodeWithCoder:]
  -[CKOperationInfo applicationBundleIdentifierOverrideForNetworkAttribution]
  -[CKOperationInfo timeoutIntervalForRequest]
  -[CKOperationInfo timeoutIntervalForResource]
  -[CKOperationInfo qualityOfService]
  -[CKOperationInfo .cxx_destruct]
  -[CKOperationInfo systemScheduler]
  -[CKOperationInfo isLongLived]
  -[CKOperationInfo setRequestOriginator:]
  -[CKOperationInfo setClientQueuePriority:]
  -[CKOperationInfo copyWithZone:]
  -[CKOperationInfo operationID]
  -[CKOperationInfo clientQueuePriority]
  -[CKOperationInfo group]
  -[CKOperationInfo automaticallyRetryNetworkFailures]
  -[CKOperationInfo usesAssetDownloadStagingManager]
  -[CKOperationInfo setDuetPreClearedMode:]
  -[CKOperationInfo setUsesAssetDownloadStagingManager:]
  -[CKOperationInfo init]
  -[CKOperationInfo setGroup:]
  -[CKOperationInfo setMMCSRequestOptions:]
  -[CKOperationInfo MMCSRequestOptions]
  -[CKOperationInfo initWithCoder:]
  -[CKOperationInfo requestOriginator]
  -[CKOperationInfo resolvedConfiguration]
  -[CKOperationInfo setOperationID:]
  -[CKOperationInfo isOutstandingOperation]
  -[CKOperationInfo takeValuesFrom:]
  -[CKOperationInfo authPromptReason]
  -[CKOperationInfo ckOperationClassName]
  -[CKOperationInfo operationDaemonCallbackProtocolName]
  -[CKOperationInfo clientHasValidatedEntitlements]
  -[CKOperationInfo setCkOperationClassName:]
  -[CKOperationInfo setOperationDaemonCallbackProtocolName:]
  -[CKOperationInfo setResolvedConfiguration:]
  -[CKOperationInfo setClientHasValidatedEntitlements:]
  -[CKOperationInfo parentOperation]
  -[CKOperationInfo setParentOperation:]
  -[CKOperationInfo wantsRequestStatistics]
  -[CKOperationInfo discretionaryWhenBackgroundedState]
  -[CKOperationInfo setDiscretionaryWhenBackgroundedState:]
  -[CKOperationInfo setSystemScheduler:]


CKDeclarativePredicateValidator : CKPredicateValidator
  // instance methods
  -[CKDeclarativePredicateValidator validate:error:]
  -[CKDeclarativePredicateValidator .cxx_destruct]
  -[CKDeclarativePredicateValidator init]


CKRequestInfo : NSObject <NSSecureCoding>
 @property  NSArray *requestOperations
 @property  NSString *operationClassName
 @property  NSString *requestUUID
 @property  NSDictionary *responseHTTPHeaders
 @property  NSDictionary *w3cNavigationTiming

  // class methods
  +[CKRequestInfo supportsSecureCoding]

  // instance methods
  -[CKRequestInfo requestUUID]
  -[CKRequestInfo initWithRequestUUID:responseHTTPHeaders:w3cTiming:]
  -[CKRequestInfo encodeWithCoder:]
  -[CKRequestInfo .cxx_destruct]
  -[CKRequestInfo operationClassName]
  -[CKRequestInfo setOperationClassName:]
  -[CKRequestInfo setRequestOperations:]
  -[CKRequestInfo responseHTTPHeaders]
  -[CKRequestInfo requestOperations]
  -[CKRequestInfo w3cNavigationTiming]
  -[CKRequestInfo initWithCoder:]


CKFetchMergeableDeltasOperation : CKDatabaseOperation <CKFetchMergeableDeltasOperationCallbacks>
 @property  NSArray *mergeableValueIDs
 @property  <CKFetchMergeableDeltasOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchMergeableDeltasOperationInfo *operationInfo
 @property  @? deltasFetchedBlock
 @property  @? fetchMergeableDeltasCompletionBlock

  // class methods
  +[CKFetchMergeableDeltasOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchMergeableDeltasOperation activityCreate]
  -[CKFetchMergeableDeltasOperation _finishOnCallbackQueueWithError:]
  -[CKFetchMergeableDeltasOperation .cxx_destruct]
  -[CKFetchMergeableDeltasOperation hasCKOperationCallbacksSet]
  -[CKFetchMergeableDeltasOperation performCKOperation]
  -[CKFetchMergeableDeltasOperation fillFromOperationInfo:]
  -[CKFetchMergeableDeltasOperation CKOperationShouldRun:]
  -[CKFetchMergeableDeltasOperation fillOutOperationInfo:]
  -[CKFetchMergeableDeltasOperation initWithMergeableValueIDs:]
  -[CKFetchMergeableDeltasOperation mergeableValueIDs]
  -[CKFetchMergeableDeltasOperation setMergeableValueIDs:]
  -[CKFetchMergeableDeltasOperation handleFetchForMergeableValueID:fetchedDeltas:error:]
  -[CKFetchMergeableDeltasOperation setDeltasFetchedBlock:]
  -[CKFetchMergeableDeltasOperation deltasFetchedBlock]
  -[CKFetchMergeableDeltasOperation setFetchMergeableDeltasCompletionBlock:]
  -[CKFetchMergeableDeltasOperation fetchMergeableDeltasCompletionBlock]


CKFetchMergeableDeltasOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *mergeableValueIDs

  // class methods
  +[CKFetchMergeableDeltasOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchMergeableDeltasOperationInfo encodeWithCoder:]
  -[CKFetchMergeableDeltasOperationInfo .cxx_destruct]
  -[CKFetchMergeableDeltasOperationInfo initWithCoder:]
  -[CKFetchMergeableDeltasOperationInfo mergeableValueIDs]
  -[CKFetchMergeableDeltasOperationInfo setMergeableValueIDs:]


CKOperationConfiguration : NSObject <NSSecureCoding, NSCopying>
 @property  BOOL hasQualityOfService
 @property  BOOL hasAllowsExpensiveNetworkAccess
 @property  BOOL hasAutomaticallyRetryNetworkFailures
 @property  BOOL hasDiscretionaryNetworkBehavior
 @property  NSDictionary *unitTestOverrides
 @property  BOOL xpcActivityAutomaticallyDefer
 @property  BOOL discretionarySchedulingForEntireOperation
 @property  NSString *_sourceApplicationSecondaryIdentifier
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL automaticallyRetryNetworkFailures
 @property  NSObject<OS_xpc_object> *xpcActivity
 @property  CKSchedulerActivity *schedulerActivity
 @property  unsigned long discretionaryNetworkBehavior
 @property  BOOL preferAnonymousRequests
 @property  NSString *applicationBundleIdentifierOverrideForContainerAccess
 @property  NSString *applicationBundleIdentifierOverrideForNetworkAttribution
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *sourceApplicationSecondaryIdentifier
 @property  NSDictionary *additionalRequestHTTPHeaders
 @property  BOOL isCloudKitSupportOperation
 @property  NSNumber *cacheDeleteAvailableSpaceClass
 @property  CKAssetDownloadStagingManager *assetDownloadStagingManager
 @property  CKContainer *container
 @property  long long qualityOfService
 @property  BOOL allowsCellularAccess
 @property  BOOL longLived
 @property  double timeoutIntervalForRequest
 @property  double timeoutIntervalForResource

  // class methods
  +[CKOperationConfiguration supportsSecureCoding]
  +[CKOperationConfiguration defaultConvenienceOperationConfiguration]

  // instance methods
  -[CKOperationConfiguration _sourceApplicationSecondaryIdentifier]
  -[CKOperationConfiguration setAdditionalRequestHTTPHeaders:]
  -[CKOperationConfiguration set_sourceApplicationSecondaryIdentifier:]
  -[CKOperationConfiguration setAllowsCellularAccess:]
  -[CKOperationConfiguration discretionaryNetworkBehavior]
  -[CKOperationConfiguration setDiscretionaryNetworkBehavior:]
  -[CKOperationConfiguration setTimeoutIntervalForResource:]
  -[CKOperationConfiguration setCacheDeleteAvailableSpaceClass:]
  -[CKOperationConfiguration cacheDeleteAvailableSpaceClass]
  -[CKOperationConfiguration setContainer:]
  -[CKOperationConfiguration allowsExpensiveNetworkAccess]
  -[CKOperationConfiguration sourceApplicationBundleIdentifier]
  -[CKOperationConfiguration additionalRequestHTTPHeaders]
  -[CKOperationConfiguration setAllowsExpensiveNetworkAccess:]
  -[CKOperationConfiguration allowsCellularAccess]
  -[CKOperationConfiguration applicationBundleIdentifierOverrideForContainerAccess]
  -[CKOperationConfiguration preferAnonymousRequests]
  -[CKOperationConfiguration isCloudKitSupportOperation]
  -[CKOperationConfiguration setHasAutomaticallyRetryNetworkFailures:]
  -[CKOperationConfiguration setQualityOfService:]
  -[CKOperationConfiguration setApplicationBundleIdentifierOverride:]
  -[CKOperationConfiguration setApplicationBundleIdentifierOverrideForContainerAccess:]
  -[CKOperationConfiguration setLongLived:]
  -[CKOperationConfiguration setXpcActivityAutomaticallyDefer:]
  -[CKOperationConfiguration setPreferAnonymousRequests:]
  -[CKOperationConfiguration sourceApplicationSecondaryIdentifier]
  -[CKOperationConfiguration unitTestOverrides]
  -[CKOperationConfiguration encodeWithCoder:]
  -[CKOperationConfiguration xpcActivityAutomaticallyDefer]
  -[CKOperationConfiguration applicationBundleIdentifierOverrideForNetworkAttribution]
  -[CKOperationConfiguration timeoutIntervalForRequest]
  -[CKOperationConfiguration setDiscretionarySchedulingForEntireOperation:]
  -[CKOperationConfiguration timeoutIntervalForResource]
  -[CKOperationConfiguration qualityOfService]
  -[CKOperationConfiguration setAssetDownloadStagingManager:]
  -[CKOperationConfiguration setSchedulerActivity:]
  -[CKOperationConfiguration setAutomaticallyRetryNetworkFailures:]
  -[CKOperationConfiguration .cxx_destruct]
  -[CKOperationConfiguration assetDownloadStagingManager]
  -[CKOperationConfiguration hasDiscretionaryNetworkBehavior]
  -[CKOperationConfiguration resolveAgainstGenericConfiguration:]
  -[CKOperationConfiguration setSourceApplicationBundleIdentifier:]
  -[CKOperationConfiguration removeUnitTestOverride:]
  -[CKOperationConfiguration container]
  -[CKOperationConfiguration schedulerActivity]
  -[CKOperationConfiguration setApplicationBundleIdentifierOverrideForNetworkAttribution:]
  -[CKOperationConfiguration setTimeoutIntervalForRequest:]
  -[CKOperationConfiguration hasAllowsExpensiveNetworkAccess]
  -[CKOperationConfiguration hasQualityOfService]
  -[CKOperationConfiguration setHasAllowsExpensiveNetworkAccess:]
  -[CKOperationConfiguration isLongLived]
  -[CKOperationConfiguration copyWithZone:]
  -[CKOperationConfiguration discretionarySchedulingForEntireOperation]
  -[CKOperationConfiguration setUnitTestOverrides:]
  -[CKOperationConfiguration automaticallyRetryNetworkFailures]
  -[CKOperationConfiguration CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKOperationConfiguration setIsCloudKitSupportOperation:]
  -[CKOperationConfiguration xpcActivity]
  -[CKOperationConfiguration setSourceApplicationSecondaryIdentifier:]
  -[CKOperationConfiguration addUnitTestOverrides:]
  -[CKOperationConfiguration hasAutomaticallyRetryNetworkFailures]
  -[CKOperationConfiguration setHasQualityOfService:]
  -[CKOperationConfiguration setXpcActivity:]
  -[CKOperationConfiguration setHasDiscretionaryNetworkBehavior:]
  -[CKOperationConfiguration init]
  -[CKOperationConfiguration initWithCoder:]


CKCodeFunctionInvokeOperation : CKDatabaseOperation <CKCodeFunctionInvokeOperationCallbacks>
 @property  NSString *serviceName
 @property  NSString *functionName
 @property  NSData *serializedRequest
 @property  BOOL local
 @property  NSURL *clientRuntimeProvidedServiceURL
 @property  BOOL shouldFetchAssetContentInMemory
 @property  NSData *serializedResponse
 @property  NSError *responseError
 @property  <CKCodeFunctionInvokeOperationCallbacks> *clientOperationCallbackProxy
 @property  CKCodeFunctionInvokeOperationInfo *operationInfo
 @property  @? functionInvokeCompletionBlock

  // class methods
  +[CKCodeFunctionInvokeOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKCodeFunctionInvokeOperation setServiceName:]
  -[CKCodeFunctionInvokeOperation responseError]
  -[CKCodeFunctionInvokeOperation shouldFetchAssetContentInMemory]
  -[CKCodeFunctionInvokeOperation local]
  -[CKCodeFunctionInvokeOperation setShouldFetchAssetContentInMemory:]
  -[CKCodeFunctionInvokeOperation activityCreate]
  -[CKCodeFunctionInvokeOperation _finishOnCallbackQueueWithError:]
  -[CKCodeFunctionInvokeOperation setLocal:]
  -[CKCodeFunctionInvokeOperation setResponseError:]
  -[CKCodeFunctionInvokeOperation serviceName]
  -[CKCodeFunctionInvokeOperation .cxx_destruct]
  -[CKCodeFunctionInvokeOperation hasCKOperationCallbacksSet]
  -[CKCodeFunctionInvokeOperation performCKOperation]
  -[CKCodeFunctionInvokeOperation fillFromOperationInfo:]
  -[CKCodeFunctionInvokeOperation CKOperationShouldRun:]
  -[CKCodeFunctionInvokeOperation functionName]
  -[CKCodeFunctionInvokeOperation fillOutOperationInfo:]
  -[CKCodeFunctionInvokeOperation setFunctionName:]
  -[CKCodeFunctionInvokeOperation handleReplaceLocalWithWireSerializations:encryptedMasterKeys:wireEnvelopes:reply:]
  -[CKCodeFunctionInvokeOperation handleInitialResponseReceived:reply:]
  -[CKCodeFunctionInvokeOperation handleReplaceWireSerializationsWithRecords:]
  -[CKCodeFunctionInvokeOperation initWithServiceName:functionName:serializedRequest:local:]
  -[CKCodeFunctionInvokeOperation initWithServiceName:functionName:serializedRequest:]
  -[CKCodeFunctionInvokeOperation initWithServiceName:functionName:serializedParameters:local:]
  -[CKCodeFunctionInvokeOperation initWithServiceName:functionName:serializedParameters:]
  -[CKCodeFunctionInvokeOperation setFunctionInvokeCompletionBlock:]
  -[CKCodeFunctionInvokeOperation functionInvokeCompletionBlock]
  -[CKCodeFunctionInvokeOperation serializedRequest]
  -[CKCodeFunctionInvokeOperation setSerializedRequest:]
  -[CKCodeFunctionInvokeOperation clientRuntimeProvidedServiceURL]
  -[CKCodeFunctionInvokeOperation setClientRuntimeProvidedServiceURL:]
  -[CKCodeFunctionInvokeOperation serializedResponse]
  -[CKCodeFunctionInvokeOperation setSerializedResponse:]


CKCodeFunctionInvokeOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSString *serviceName
 @property  NSString *functionName
 @property  NSArray *requestLocalSerializations
 @property  NSArray *requestLocalEnvelopes
 @property  unsigned long dataProtectionType
 @property  NSData *permittedRemoteMeasurement
 @property  NSString *trustedTargetDomain
 @property  NSString *trustedTargetOID
 @property  BOOL shouldSendRecordPCSKeys
 @property  BOOL enqueuedOnContainerService
 @property  NSURL *clientRuntimeProvidedServiceURL
 @property  BOOL legacyIsLocalBit
 @property  BOOL shouldFetchAssetContentInMemory

  // class methods
  +[CKCodeFunctionInvokeOperationInfo supportsSecureCoding]
  +[CKCodeFunctionInvokeOperationInfo applyDefaultParametersToServiceURLComponents:]

  // instance methods
  -[CKCodeFunctionInvokeOperationInfo setServiceName:]
  -[CKCodeFunctionInvokeOperationInfo shouldFetchAssetContentInMemory]
  -[CKCodeFunctionInvokeOperationInfo setShouldFetchAssetContentInMemory:]
  -[CKCodeFunctionInvokeOperationInfo encodeWithCoder:]
  -[CKCodeFunctionInvokeOperationInfo serviceName]
  -[CKCodeFunctionInvokeOperationInfo .cxx_destruct]
  -[CKCodeFunctionInvokeOperationInfo functionName]
  -[CKCodeFunctionInvokeOperationInfo initWithCoder:]
  -[CKCodeFunctionInvokeOperationInfo setFunctionName:]
  -[CKCodeFunctionInvokeOperationInfo requestLocalSerializations]
  -[CKCodeFunctionInvokeOperationInfo setRequestLocalSerializations:]
  -[CKCodeFunctionInvokeOperationInfo clientRuntimeProvidedServiceURL]
  -[CKCodeFunctionInvokeOperationInfo setClientRuntimeProvidedServiceURL:]
  -[CKCodeFunctionInvokeOperationInfo enqueuedOnContainerService]
  -[CKCodeFunctionInvokeOperationInfo requestLocalEnvelopes]
  -[CKCodeFunctionInvokeOperationInfo setRequestLocalEnvelopes:]
  -[CKCodeFunctionInvokeOperationInfo dataProtectionType]
  -[CKCodeFunctionInvokeOperationInfo setDataProtectionType:]
  -[CKCodeFunctionInvokeOperationInfo permittedRemoteMeasurement]
  -[CKCodeFunctionInvokeOperationInfo setPermittedRemoteMeasurement:]
  -[CKCodeFunctionInvokeOperationInfo trustedTargetDomain]
  -[CKCodeFunctionInvokeOperationInfo setTrustedTargetDomain:]
  -[CKCodeFunctionInvokeOperationInfo trustedTargetOID]
  -[CKCodeFunctionInvokeOperationInfo setTrustedTargetOID:]
  -[CKCodeFunctionInvokeOperationInfo shouldSendRecordPCSKeys]
  -[CKCodeFunctionInvokeOperationInfo setShouldSendRecordPCSKeys:]
  -[CKCodeFunctionInvokeOperationInfo setEnqueuedOnContainerService:]
  -[CKCodeFunctionInvokeOperationInfo legacyIsLocalBit]
  -[CKCodeFunctionInvokeOperationInfo setLegacyIsLocalBit:]


CKUndeprecatedCodeFunctionInvokeOperation : CKCodeFunctionInvokeOperation

CKMergeableRecordValue : NSObject <CKRecordValue, CKPropertiesDescription, NSSecureCoding>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  BOOL regressedMergeableStateVectorShouldReturnError
 @property  CKMergeableValueID *valueID
 @property  BOOL isValueIDKnownToServer
 @property  CKDistributedTimestampStateVector *lastKnownServerTimestampVector
 @property  NSSet *deltasToSave
 @property  NSSet *savedDeltaMetadatas
 @property  NSSet *unmergedDeltas
 @property  CKMultiValueMergeableDeltaRegister *multiValueRegister
 @property  CKMultiValueMergeableDeltaRegisterState *multiValueRegisterState
 @property  long long encryptMetadataTernary
 @property  NSSet *serverDeltaMetadatas
 @property  NSArray *pendingReplacementRequests
 @property  BOOL inlineReplacementEnabled
 @property  BOOL encryptMetadata
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKMergeableRecordValue supportsSecureCoding]

  // instance methods
  -[CKMergeableRecordValue CKDescribePropertiesUsing:]
  -[CKMergeableRecordValue encodeWithCoder:]
  -[CKMergeableRecordValue .cxx_destruct]
  -[CKMergeableRecordValue redactedDescription]
  -[CKMergeableRecordValue init]
  -[CKMergeableRecordValue initWithCoder:]
  -[CKMergeableRecordValue valueID]
  -[CKMergeableRecordValue setValueID:]
  -[CKMergeableRecordValue isValueIDKnownToServer]
  -[CKMergeableRecordValue deltasToSave]
  -[CKMergeableRecordValue pendingReplacementRequests]
  -[CKMergeableRecordValue unmergedDeltas]
  -[CKMergeableRecordValue lastKnownServerTimestampVector]
  -[CKMergeableRecordValue encryptMetadataTernary]
  -[CKMergeableRecordValue serverDeltaMetadatas]
  -[CKMergeableRecordValue multiValueRegisterState]
  -[CKMergeableRecordValue initWithValueID:]
  -[CKMergeableRecordValue multiValueRegister]
  -[CKMergeableRecordValue encryptMetadata]
  -[CKMergeableRecordValue setEncryptMetadata:]
  -[CKMergeableRecordValue mergeIntoMergeable:error:]
  -[CKMergeableRecordValue mergeRecordValue:error:]
  -[CKMergeableRecordValue deliverableDeltasWithCurrentStateVector:usingDeliveryRequirements:]
  -[CKMergeableRecordValue addUnmergedDeltas:]
  -[CKMergeableRecordValue didMergeDeltas:]
  -[CKMergeableRecordValue didSaveDeltas:]
  -[CKMergeableRecordValue sanityCheckDeltas:]
  -[CKMergeableRecordValue addServerDeltaMetadatas:]
  -[CKMergeableRecordValue mergeLastKnownServerTimestampVector:]
  -[CKMergeableRecordValue mergeLastKnownServerTimestampVectorFromDeltas:]
  -[CKMergeableRecordValue addDeltasToSaveFromMergeable:container:error:]
  -[CKMergeableRecordValue addDeltasToSaveFromMergeable:error:]
  -[CKMergeableRecordValue hasAssetBackedDeltas]
  -[CKMergeableRecordValue regressedMergeableStateVectorShouldReturnError]
  -[CKMergeableRecordValue setRegressedMergeableStateVectorShouldReturnError:]
  -[CKMergeableRecordValue setIsValueIDKnownToServer:]
  -[CKMergeableRecordValue setLastKnownServerTimestampVector:]
  -[CKMergeableRecordValue setDeltasToSave:]
  -[CKMergeableRecordValue savedDeltaMetadatas]
  -[CKMergeableRecordValue setSavedDeltaMetadatas:]
  -[CKMergeableRecordValue setUnmergedDeltas:]
  -[CKMergeableRecordValue setMultiValueRegisterState:]
  -[CKMergeableRecordValue setEncryptMetadataTernary:]
  -[CKMergeableRecordValue setServerDeltaMetadatas:]
  -[CKMergeableRecordValue setPendingReplacementRequests:]
  -[CKMergeableRecordValue inlineReplacementEnabled]
  -[CKMergeableRecordValue setInlineReplacementEnabled:]


CKModifyRecordAccessOperation : CKDatabaseOperation <CKModifyRecordAccessOperationCallbacks>
 @property  <CKModifyRecordAccessOperationCallbacks> *clientOperationCallbackProxy
 @property  CKModifyRecordAccessOperationInfo *operationInfo
 @property  NSArray *recordIDsToGrant
 @property  NSArray *recordIDsToRevoke
 @property  NSMutableDictionary *recordErrors
 @property  NSMutableArray *grantedRecordIDs
 @property  NSMutableArray *revokedRecordIDs
 @property  @? recordAccessGrantedBlock
 @property  @? recordAccessRevokedBlock
 @property  @? recordAccessCompletionBlock

  // class methods
  +[CKModifyRecordAccessOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKModifyRecordAccessOperation activityCreate]
  -[CKModifyRecordAccessOperation _finishOnCallbackQueueWithError:]
  -[CKModifyRecordAccessOperation setRecordErrors:]
  -[CKModifyRecordAccessOperation .cxx_destruct]
  -[CKModifyRecordAccessOperation hasCKOperationCallbacksSet]
  -[CKModifyRecordAccessOperation recordErrors]
  -[CKModifyRecordAccessOperation performCKOperation]
  -[CKModifyRecordAccessOperation fillFromOperationInfo:]
  -[CKModifyRecordAccessOperation CKOperationShouldRun:]
  -[CKModifyRecordAccessOperation fillOutOperationInfo:]
  -[CKModifyRecordAccessOperation handleRecordAccessInitiationForRecordID:accessToken:referenceIdentifier:error:]
  -[CKModifyRecordAccessOperation handleRecordAccessRevocationForRecordID:error:]
  -[CKModifyRecordAccessOperation initWithRecordIDsToGrantAccess:recordIDsToRevokeAccess:]
  -[CKModifyRecordAccessOperation setRecordAccessGrantedBlock:]
  -[CKModifyRecordAccessOperation recordAccessGrantedBlock]
  -[CKModifyRecordAccessOperation setRecordAccessRevokedBlock:]
  -[CKModifyRecordAccessOperation recordAccessRevokedBlock]
  -[CKModifyRecordAccessOperation setRecordAccessCompletionBlock:]
  -[CKModifyRecordAccessOperation recordAccessCompletionBlock]
  -[CKModifyRecordAccessOperation recordIDsToGrant]
  -[CKModifyRecordAccessOperation setRecordIDsToGrant:]
  -[CKModifyRecordAccessOperation recordIDsToRevoke]
  -[CKModifyRecordAccessOperation setRecordIDsToRevoke:]
  -[CKModifyRecordAccessOperation grantedRecordIDs]
  -[CKModifyRecordAccessOperation setGrantedRecordIDs:]
  -[CKModifyRecordAccessOperation revokedRecordIDs]
  -[CKModifyRecordAccessOperation setRevokedRecordIDs:]


CKModifyRecordAccessOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *recordIDsToGrant
 @property  NSArray *recordIDsToRevoke

  // class methods
  +[CKModifyRecordAccessOperationInfo supportsSecureCoding]

  // instance methods
  -[CKModifyRecordAccessOperationInfo encodeWithCoder:]
  -[CKModifyRecordAccessOperationInfo .cxx_destruct]
  -[CKModifyRecordAccessOperationInfo initWithCoder:]
  -[CKModifyRecordAccessOperationInfo recordIDsToGrant]
  -[CKModifyRecordAccessOperationInfo setRecordIDsToGrant:]
  -[CKModifyRecordAccessOperationInfo recordIDsToRevoke]
  -[CKModifyRecordAccessOperationInfo setRecordIDsToRevoke:]


CKShareMetadata : NSObject <CKContainerAssignment, NSCopying, NSSecureCoding>
 @property  CKShareParticipant *callingParticipant
 @property  NSArray *sharedItemHierarchyIDs
 @property  NSString *rootRecordType
 @property  CKDeviceToDeviceShareInvitationToken *invitationToken
 @property  NSData *protectedFullToken
 @property  NSData *publicToken
 @property  NSString *baseToken
 @property  NSData *privateToken
 @property  CKRecordZone *sharedZone
 @property  CKContainerID *containerID
 @property  long long participantRole
 @property  long long participantStatus
 @property  long long participantPermission
 @property  NSArray *outOfNetworkMatches
 @property  CKRecordID *hierarchicalRootRecordID
 @property  CKRecord *rootRecord
 @property  BOOL acceptedInProcess
 @property  NSData *encryptedData
 @property  CKUserIdentity *ownerIdentity
 @property  CKShare *share
 @property  NSString *containerIdentifier
 @property  long long participantType
 @property  CKRecordID *rootRecordID

  // class methods
  +[CKShareMetadata supportsSecureCoding]

  // instance methods
  -[CKShareMetadata setContainerID:]
  -[CKShareMetadata ckShortDescription]
  -[CKShareMetadata share]
  -[CKShareMetadata containerID]
  -[CKShareMetadata protectedFullToken]
  -[CKShareMetadata encodeWithCoder:]
  -[CKShareMetadata containerIdentifier]
  -[CKShareMetadata setShare:]
  -[CKShareMetadata .cxx_destruct]
  -[CKShareMetadata setProtectedFullToken:]
  -[CKShareMetadata publicToken]
  -[CKShareMetadata copyWithZone:]
  -[CKShareMetadata CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKShareMetadata environment]
  -[CKShareMetadata isEqual:]
  -[CKShareMetadata init]
  -[CKShareMetadata CKAssignToContainerWithID:]
  -[CKShareMetadata initWithCoder:]
  -[CKShareMetadata privateToken]
  -[CKShareMetadata baseToken]
  -[CKShareMetadata rootRecordID]
  -[CKShareMetadata acceptedInProcess]
  -[CKShareMetadata setAcceptedInProcess:]
  -[CKShareMetadata invitationToken]
  -[CKShareMetadata setInvitationToken:]
  -[CKShareMetadata encryptedData]
  -[CKShareMetadata setEncryptedData:]
  -[CKShareMetadata participantType]
  -[CKShareMetadata fillAnonymousCKUserID:]
  -[CKShareMetadata hierarchicalRootRecordID]
  -[CKShareMetadata setHierarchicalRootRecordID:]
  -[CKShareMetadata participantRole]
  -[CKShareMetadata setParticipantRole:]
  -[CKShareMetadata participantStatus]
  -[CKShareMetadata setParticipantStatus:]
  -[CKShareMetadata participantPermission]
  -[CKShareMetadata setParticipantPermission:]
  -[CKShareMetadata ownerIdentity]
  -[CKShareMetadata setOwnerIdentity:]
  -[CKShareMetadata rootRecord]
  -[CKShareMetadata setRootRecord:]
  -[CKShareMetadata callingParticipant]
  -[CKShareMetadata setCallingParticipant:]
  -[CKShareMetadata sharedItemHierarchyIDs]
  -[CKShareMetadata setSharedItemHierarchyIDs:]
  -[CKShareMetadata rootRecordType]
  -[CKShareMetadata setRootRecordType:]
  -[CKShareMetadata setPublicToken:]
  -[CKShareMetadata setPrivateToken:]
  -[CKShareMetadata sharedZone]
  -[CKShareMetadata setSharedZone:]
  -[CKShareMetadata outOfNetworkMatches]
  -[CKShareMetadata setOutOfNetworkMatches:]


CKPackageDBDelegate : NSObject <CKSQLiteDelegate>
 @property  int userVersion

  // instance methods
  -[CKPackageDBDelegate userVersion]
  -[CKPackageDBDelegate migrateDatabase:fromVersion:]


CKPackage : NSObject <NSSecureCoding, CKRecordValue>
 @property  long long state
 @property  NSData *archiverInfo
 @property  CKSQLite *sqlite
 @property  unsigned long nextItemIndex
 @property  BOOL open
 @property  ^{_OpaquePCSShareProtection=} recordPCS
 @property  NSString *UUID
 @property  unsigned long size
 @property  BOOL wasCached
 @property  BOOL uploaded
 @property  BOOL downloaded
 @property  BOOL hasSize
 @property  BOOL shouldReadRawEncryptedData
 @property  long long storageGroupingPolicy
 @property  long long uploadRank
 @property  long long packageID
 @property  NSArray *assets
 @property  CKRecord *record
 @property  NSString *recordKey
 @property  NSString *databaseBasePath
 @property  NSString *rootDatabasePath
 @property  NSData *signature
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKPackage supportsSecureCoding]
  +[CKPackage packageInClientWithBasePath:error:]
  +[CKPackage gcPackagesInDirectory:dbInUseBlock:]
  +[CKPackage stagingPathSuffixForCloudKitCachesDirectoryWithBundleIdentifier:]
  +[CKPackage packageWithPackage:error:]
  +[CKPackage packageInDaemonWithBasePath:error:]
  +[CKPackage clientPackageDatabaseDirectory]
  +[CKPackage packageProcessBasePath]
  +[CKPackage destroyClientPackageWithDatabaseBasePath:UUID:]
  +[CKPackage packageWithError:]

  // instance methods
  -[CKPackage hasSize]
  -[CKPackage addItem:]
  -[CKPackage openWithError:]
  -[CKPackage signature]
  -[CKPackage setRecord:]
  -[CKPackage setHasSize:]
  -[CKPackage setRecordKey:]
  -[CKPackage sectionCount]
  -[CKPackage assets]
  -[CKPackage itemAtIndex:]
  -[CKPackage encodeWithCoder:]
  -[CKPackage record]
  -[CKPackage state]
  -[CKPackage itemCount]
  -[CKPackage dealloc]
  -[CKPackage close]
  -[CKPackage setUUID:]
  -[CKPackage setShouldReadRawEncryptedData:]
  -[CKPackage .cxx_destruct]
  -[CKPackage sectionAtIndex:]
  -[CKPackage UUID]
  -[CKPackage shouldReadRawEncryptedData]
  -[CKPackage size]
  -[CKPackage recordKey]
  -[CKPackage uploaded]
  -[CKPackage setAssets:]
  -[CKPackage CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKPackage isOpen]
  -[CKPackage setSize:]
  -[CKPackage setSignature:]
  -[CKPackage init]
  -[CKPackage setState:]
  -[CKPackage setOpen:]
  -[CKPackage initWithCoder:]
  -[CKPackage addSection:]
  -[CKPackage wasCached]
  -[CKPackage setWasCached:]
  -[CKPackage storageGroupingPolicy]
  -[CKPackage setStorageGroupingPolicy:]
  -[CKPackage setUploaded:]
  -[CKPackage downloaded]
  -[CKPackage setDownloaded:]
  -[CKPackage uploadRank]
  -[CKPackage setUploadRank:]
  -[CKPackage clonedPackageInDaemonWithBasePath:filesDuplicatedIntoDirectory:error:]
  -[CKPackage removeDBAndDeleteFilesWithError:]
  -[CKPackage _initWithBasePath:UUID:]
  -[CKPackage initUnreachablePackageWithUUID:]
  -[CKPackage _packageDatabasePathWithState:]
  -[CKPackage _packageDatabasePath]
  -[CKPackage movePackagesDatabaseInDirection:error:]
  -[CKPackage handleChangeStateAction:error:]
  -[CKPackage handleChangeStateAction:]
  -[CKPackage setArchiverInfo:error:]
  -[CKPackage prepareDBWithError:]
  -[CKPackage releaseDBWithRemove:]
  -[CKPackage removeDB]
  -[CKPackage releaseDB]
  -[CKPackage setRecordPCS:]
  -[CKPackage itemCountWithError:]
  -[CKPackage _itemWithColumnsByName:]
  -[CKPackage _itemOrNilAtIndex:]
  -[CKPackage itemEnumerator]
  -[CKPackage itemEnumeratorForSectionAtIndex:]
  -[CKPackage updateItemAtIndex:withSignature:size:itemID:sectionIndex:]
  -[CKPackage updateItemAtIndex:withFileURL:]
  -[CKPackage updateItemsAtIndexes:fileURLs:]
  -[CKPackage testAddSectionConstraintViolation:]
  -[CKPackage performTransactionBlock:]
  -[CKPackage claimOwnershipWithError:]
  -[CKPackage databaseBasePath]
  -[CKPackage setDatabaseBasePath:]
  -[CKPackage earliestUploadReceiptExpiration]
  -[CKPackage recordPCS]
  -[CKPackage rootDatabasePath]
  -[CKPackage setRootDatabasePath:]
  -[CKPackage archiverInfo]
  -[CKPackage setArchiverInfo:]
  -[CKPackage sqlite]
  -[CKPackage setSqlite:]
  -[CKPackage nextItemIndex]
  -[CKPackage setNextItemIndex:]
  -[CKPackage packageID]
  -[CKPackage setPackageID:]


CKFetchWhitelistedBundleIDsOperation : CKOperation <CKFetchWhitelistedBundleIDsOperationCallbacks>
 @property  NSArray *bundleIDs
 @property  <CKFetchWhitelistedBundleIDsOperationCallbacks> *clientOperationCallbackProxy
 @property  @? fetchWhitelistedBundleIDsCompletionBlock

  // class methods
  +[CKFetchWhitelistedBundleIDsOperation daemonCallbackCompletionSelector]
  +[CKFetchWhitelistedBundleIDsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchWhitelistedBundleIDsOperation activityCreate]
  -[CKFetchWhitelistedBundleIDsOperation _finishOnCallbackQueueWithError:]
  -[CKFetchWhitelistedBundleIDsOperation .cxx_destruct]
  -[CKFetchWhitelistedBundleIDsOperation setBundleIDs:]
  -[CKFetchWhitelistedBundleIDsOperation hasCKOperationCallbacksSet]
  -[CKFetchWhitelistedBundleIDsOperation performCKOperation]
  -[CKFetchWhitelistedBundleIDsOperation bundleIDs]
  -[CKFetchWhitelistedBundleIDsOperation handleOperationDidCompleteWithBundleIDs:metrics:error:]
  -[CKFetchWhitelistedBundleIDsOperation setFetchWhitelistedBundleIDsCompletionBlock:]
  -[CKFetchWhitelistedBundleIDsOperation fetchWhitelistedBundleIDsCompletionBlock]


CKObjCType : NSObject
 @property  long long code
 @property  unsigned long size
 @property  NSString *className

  // class methods
  +[CKObjCType typeForEncoding:]
  +[CKObjCType typeForValue:]

  // instance methods
  -[CKObjCType .cxx_destruct]
  -[CKObjCType className]
  -[CKObjCType size]
  -[CKObjCType code]


CKEntitlements : NSObject <CKSQLiteItem>
 @property  NSString *applicationBundleID
 @property  NSString *associatedApplicationBundleID
 @property  NSString *apsEnvironmentEntitlement
 @property  BOOL hasSPIEntitlement
 @property  BOOL hasMasqueradingEntitlement
 @property  BOOL hasProtectionDataEntitlement
 @property  BOOL hasZoneProtectionDataEntitlement
 @property  BOOL hasDeviceIdentifierEntitlement
 @property  BOOL hasCloudKitSystemServiceEntitlement
 @property  BOOL hasSystemLaunchDaemonEntitlement
 @property  BOOL hasDarkWakeNetworkReachabilityEnabledEntitlement
 @property  BOOL hasAllowAccessDuringBuddyEntitlement
 @property  BOOL hasLightweightPCSEntitlement
 @property  BOOL hasOutOfProcessUIEntitlement
 @property  BOOL hasParticipantPIIEntitlement
 @property  BOOL hasDisplaysSystemAcceptPromptEntitlement
 @property  NSDictionary *serviceNameForContainerIdentifierMapEntitlement
 @property  BOOL hasNonLegacyShareURLEntitlement
 @property  BOOL hasAllowUnverifiedAccountEntitlement
 @property  BOOL hasAllowRealTimeOperationsEntitlement
 @property  BOOL hasCloudKitSupportServiceEntitlement
 @property  BOOL hasExplicitCodeOperationURLEntitlement
 @property  NSString *codeServiceURLEntitlement
 @property  NSDictionary *codeServiceURLByServiceEntitlement
 @property  NSDictionary *codeServiceURLByContainerAndServiceEntitlement
 @property  BOOL hasVFSOpenByIDEntitlement
 @property  BOOL hasAllowPackagesEntitlement
 @property  BOOL hasAllowOnDeviceAssetStreamingEntitlement
 @property  BOOL hasEnvironmentEntitlement
 @property  BOOL hasCustomAccountsEntitlement
 @property  NSString *clientPrefixEntitlement
 @property  BOOL hasAllowFakeEntitlementsEntitlement
 @property  long long containerEnvironment
 @property  NSArray *developmentContainerEnvironmentOverrides
 @property  NSArray *cloudServices
 @property  BOOL isBackgroundAssetsExtension
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKEntitlements initWithSqliteRepresentation:]
  -[CKEntitlements hasNonLegacyShareURLEntitlement]
  -[CKEntitlements hasCloudKitSupportServiceEntitlement]
  -[CKEntitlements hasZoneProtectionDataEntitlement]
  -[CKEntitlements apsEnvironmentEntitlement]
  -[CKEntitlements sqliteRepresentation]
  -[CKEntitlements initWithEntitlementsDict:]
  -[CKEntitlements hasAllowOnDeviceAssetStreamingEntitlement]
  -[CKEntitlements hasAllowPackagesEntitlement]
  -[CKEntitlements hasDeviceIdentifierEntitlement]
  -[CKEntitlements hasProtectionDataEntitlement]
  -[CKEntitlements hasEnvironmentEntitlement]
  -[CKEntitlements initWithCurrentProcess]
  -[CKEntitlements codeServiceURLByContainerAndServiceEntitlement]
  -[CKEntitlements codeServiceURLEntitlement]
  -[CKEntitlements cloudServices]
  -[CKEntitlements initWithAuditToken:pid:]
  -[CKEntitlements hasAllowUnverifiedAccountEntitlement]
  -[CKEntitlements .cxx_destruct]
  -[CKEntitlements associatedApplicationBundleID]
  -[CKEntitlements hasDisplaysSystemAcceptPromptEntitlement]
  -[CKEntitlements hasParticipantPIIEntitlement]
  -[CKEntitlements hasSPIEntitlement]
  -[CKEntitlements ck_bindInStatement:atIndex:]
  -[CKEntitlements hasAllowAccessDuringBuddyEntitlement]
  -[CKEntitlements hasCustomAccountsEntitlement]
  -[CKEntitlements hasMasqueradingEntitlement]
  -[CKEntitlements clientPrefixEntitlement]
  -[CKEntitlements hasOutOfProcessUIEntitlement]
  -[CKEntitlements hasExplicitCodeOperationURLEntitlement]
  -[CKEntitlements containerEnvironment]
  -[CKEntitlements hasDarkWakeNetworkReachabilityEnabledEntitlement]
  -[CKEntitlements entitlementsByAddingOverlay:]
  -[CKEntitlements developmentContainerEnvironmentOverrides]
  -[CKEntitlements codeServiceURLByServiceEntitlement]
  -[CKEntitlements serviceNameForContainerIdentifierMapEntitlement]
  -[CKEntitlements isBackgroundAssetsExtension]
  -[CKEntitlements hasCloudKitSystemServiceEntitlement]
  -[CKEntitlements hasLightweightPCSEntitlement]
  -[CKEntitlements applicationBundleID]
  -[CKEntitlements hasVFSOpenByIDEntitlement]
  -[CKEntitlements validateEntitlementsWithSDKVersion:error:]
  -[CKEntitlements hasAllowFakeEntitlementsEntitlement]
  -[CKEntitlements isEqual:]
  -[CKEntitlements hasSystemLaunchDaemonEntitlement]
  -[CKEntitlements hasAllowRealTimeOperationsEntitlement]


CKSignpost : NSObject
 @property  NSObject<OS_os_log> *log
 @property  unsigned long identifier

  // class methods
  +[CKSignpost signpost]

  // instance methods
  -[CKSignpost identifier]
  -[CKSignpost initWithLog:]
  -[CKSignpost .cxx_destruct]
  -[CKSignpost log]
  -[CKSignpost init]


CKModifyBadgeOperation : CKOperation
 @property  CKModifyBadgeOperationInfo *operationInfo
 @property  unsigned long badgeValue
 @property  @? modifyBadgeCompletionBlock

  // instance methods
  -[CKModifyBadgeOperation activityCreate]
  -[CKModifyBadgeOperation _finishOnCallbackQueueWithError:]
  -[CKModifyBadgeOperation .cxx_destruct]
  -[CKModifyBadgeOperation hasCKOperationCallbacksSet]
  -[CKModifyBadgeOperation badgeValue]
  -[CKModifyBadgeOperation performCKOperation]
  -[CKModifyBadgeOperation fillFromOperationInfo:]
  -[CKModifyBadgeOperation fillOutOperationInfo:]
  -[CKModifyBadgeOperation setBadgeValue:]
  -[CKModifyBadgeOperation init]
  -[CKModifyBadgeOperation initWithBadgeValue:]
  -[CKModifyBadgeOperation setModifyBadgeCompletionBlock:]
  -[CKModifyBadgeOperation modifyBadgeCompletionBlock]


CKModifyBadgeOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  unsigned long badgeValue

  // class methods
  +[CKModifyBadgeOperationInfo supportsSecureCoding]

  // instance methods
  -[CKModifyBadgeOperationInfo encodeWithCoder:]
  -[CKModifyBadgeOperationInfo badgeValue]
  -[CKModifyBadgeOperationInfo setBadgeValue:]
  -[CKModifyBadgeOperationInfo initWithCoder:]


CKUploadRequestMetadata : NSObject <NSSecureCoding, NSCopying>
 @property  CKRecordID *repairZoneRecordID
 @property  long long databaseScope
 @property  CKRecordID *recordID
 @property  NSString *recordType
 @property  NSString *fieldName

  // class methods
  +[CKUploadRequestMetadata supportsSecureCoding]

  // instance methods
  -[CKUploadRequestMetadata fieldName]
  -[CKUploadRequestMetadata recordID]
  -[CKUploadRequestMetadata encodeWithCoder:]
  -[CKUploadRequestMetadata .cxx_destruct]
  -[CKUploadRequestMetadata recordType]
  -[CKUploadRequestMetadata copyWithZone:]
  -[CKUploadRequestMetadata databaseScope]
  -[CKUploadRequestMetadata CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKUploadRequestMetadata isEqual:]
  -[CKUploadRequestMetadata initWithCoder:]
  -[CKUploadRequestMetadata repairZoneRecordID]
  -[CKUploadRequestMetadata initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:]


CKAssetUploadRequestMetadata : CKUploadRequestMetadata <NSSecureCoding>
 @property  NSData *referenceSignature
 @property  long long listIndex
 @property  NSData *fileSignature

  // class methods
  +[CKAssetUploadRequestMetadata supportsSecureCoding]

  // instance methods
  -[CKAssetUploadRequestMetadata encodeWithCoder:]
  -[CKAssetUploadRequestMetadata fileSignature]
  -[CKAssetUploadRequestMetadata .cxx_destruct]
  -[CKAssetUploadRequestMetadata referenceSignature]
  -[CKAssetUploadRequestMetadata copyWithZone:]
  -[CKAssetUploadRequestMetadata CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKAssetUploadRequestMetadata isEqual:]
  -[CKAssetUploadRequestMetadata initWithCoder:]
  -[CKAssetUploadRequestMetadata listIndex]
  -[CKAssetUploadRequestMetadata initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:]
  -[CKAssetUploadRequestMetadata initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:fileSignature:referenceSignature:]
  -[CKAssetUploadRequestMetadata initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:fileSignature:referenceSignature:listIndex:]


CKPackageUploadRequestMetadata : CKUploadRequestMetadata <NSSecureCoding>
 @property  NSArray *referenceSignatures
 @property  NSArray *fileSignatures

  // class methods
  +[CKPackageUploadRequestMetadata supportsSecureCoding]

  // instance methods
  -[CKPackageUploadRequestMetadata encodeWithCoder:]
  -[CKPackageUploadRequestMetadata .cxx_destruct]
  -[CKPackageUploadRequestMetadata copyWithZone:]
  -[CKPackageUploadRequestMetadata isEqual:]
  -[CKPackageUploadRequestMetadata initWithCoder:]
  -[CKPackageUploadRequestMetadata initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:]
  -[CKPackageUploadRequestMetadata fileSignatures]
  -[CKPackageUploadRequestMetadata referenceSignatures]
  -[CKPackageUploadRequestMetadata initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:fileSignatures:referenceSignatures:]


CKPredicateValidator : NSObject
  // class methods
  +[CKPredicateValidator allocWithZone:]
  +[CKPredicateValidator sharedValidator]

  // instance methods
  -[CKPredicateValidator validate:error:]


CKPrettyError : NSError
  // class methods
  +[CKPrettyError errorWithCode:error:format:]
  +[CKPrettyError _errorDomain]
  +[CKPrettyError errorWithCode:userInfo:format:]
  +[CKPrettyError errorWithCode:userInfo:error:format:]
  +[CKPrettyError errorWithDomain:code:format:]
  +[CKPrettyError errorWithCode:format:]
  +[CKPrettyError errorWithCode:error:path:format:]
  +[CKPrettyError isError:withCode:]
  +[CKPrettyError errorWithCode:URL:format:]
  +[CKPrettyError sanitizedError:]
  +[CKPrettyError errorWithCode:path:format:]
  +[CKPrettyError itemErrorFromError:forID:]
  +[CKPrettyError descriptionForError:]
  +[CKPrettyError errorWithCode:error:URL:format:]
  +[CKPrettyError errorWithCode:userInfo:error:path:URL:description:]
  +[CKPrettyError descriptionForError:paths:]
  +[CKPrettyError isError:withCodes:]
  +[CKPrettyError errorWithCode:userInfo:error:format:arguments:]
  +[CKPrettyError secureCodableError:]
  +[CKPrettyError errorWithDomain:code:path:format:]

  // instance methods
  -[CKPrettyError encodeWithCoder:]
  -[CKPrettyError dealloc]
  -[CKPrettyError CKPartialErrorDescription]


CKInternalError : CKPrettyError
  // class methods
  +[CKInternalError _errorDomain]


CKDiscoveredUserInfo : NSObject
  // instance methods
  -[CKDiscoveredUserInfo firstName]
  -[CKDiscoveredUserInfo lastName]
  -[CKDiscoveredUserInfo userRecordID]
  -[CKDiscoveredUserInfo displayContact]


CKDiscoverAllContactsOperation : CKOperation
 @property  @? discoverAllContactsCompletionBlock

  // instance methods
  -[CKDiscoverAllContactsOperation .cxx_destruct]
  -[CKDiscoverAllContactsOperation CKOperationShouldRun:]
  -[CKDiscoverAllContactsOperation discoverAllContactsCompletionBlock]
  -[CKDiscoverAllContactsOperation setDiscoverAllContactsCompletionBlock:]


CKDiscoverUserInfosOperation : CKOperation
 @property  NSArray *emailAddresses
 @property  NSArray *userRecordIDs
 @property  @? discoverUserInfosCompletionBlock

  // instance methods
  -[CKDiscoverUserInfosOperation setEmailAddresses:]
  -[CKDiscoverUserInfosOperation emailAddresses]
  -[CKDiscoverUserInfosOperation .cxx_destruct]
  -[CKDiscoverUserInfosOperation CKOperationShouldRun:]
  -[CKDiscoverUserInfosOperation initWithEmailAddresses:userRecordIDs:]
  -[CKDiscoverUserInfosOperation userRecordIDs]
  -[CKDiscoverUserInfosOperation setUserRecordIDs:]
  -[CKDiscoverUserInfosOperation discoverUserInfosCompletionBlock]
  -[CKDiscoverUserInfosOperation setDiscoverUserInfosCompletionBlock:]


CKMergeableDelta : NSObject <CKPropertiesDescription, NSSecureCoding, NSCopying>
 @property  NSURL *fileURL
 @property  CKDSStorage *atomBatchStorage
 @property  CKMergeableValueID *valueID
 @property  CKMergeableDeltaMetadata *metadata
 @property  CKMergeableDeltaID *deltaID
 @property  NSData *_data
 @property  CKAsset *asset
 @property  long long encryptMetadataTernary
 @property  NSData *encryptedData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKMergeableDelta supportsSecureCoding]
  +[CKMergeableDelta maxInlineDeltaSizeForContainer:]
  +[CKMergeableDelta suggestedDeltaSizeForContainer:]
  +[CKMergeableDelta maxInlineDeltaSize]

  // instance methods
  -[CKMergeableDelta CKDescribePropertiesUsing:]
  -[CKMergeableDelta setFileURL:]
  -[CKMergeableDelta fileURL]
  -[CKMergeableDelta encodeWithCoder:]
  -[CKMergeableDelta setAsset:]
  -[CKMergeableDelta .cxx_destruct]
  -[CKMergeableDelta asset]
  -[CKMergeableDelta _data]
  -[CKMergeableDelta setMetadata:]
  -[CKMergeableDelta copyWithZone:]
  -[CKMergeableDelta metadata]
  -[CKMergeableDelta redactedDescription]
  -[CKMergeableDelta isEqual:]
  -[CKMergeableDelta init]
  -[CKMergeableDelta initWithCoder:]
  -[CKMergeableDelta valueID]
  -[CKMergeableDelta setValueID:]
  -[CKMergeableDelta encryptedData]
  -[CKMergeableDelta setEncryptedData:]
  -[CKMergeableDelta encryptMetadataTernary]
  -[CKMergeableDelta setEncryptMetadataTernary:]
  -[CKMergeableDelta initWithValueID:metadata:]
  -[CKMergeableDelta initWithValueID:metadata:data:]
  -[CKMergeableDelta initWithValueID:metadata:encryptedData:]
  -[CKMergeableDelta initWithValueID:metadata:asset:]
  -[CKMergeableDelta initWithValueID:metadata:fileURL:]
  -[CKMergeableDelta initWithData:metadata:]
  -[CKMergeableDelta initWithFileURL:metadata:]
  -[CKMergeableDelta dataBackedDeltaWithError:]
  -[CKMergeableDelta deltaID]
  -[CKMergeableDelta dataWithError:]
  -[CKMergeableDelta contentSize:error:]
  -[CKMergeableDelta protobufSize:error:]
  -[CKMergeableDelta populateAssetIfNecessaryWithMaxInlineSize:]
  -[CKMergeableDelta unpopulateAsset]
  -[CKMergeableDelta atomBatchStorage]
  -[CKMergeableDelta setAtomBatchStorage:]
  -[CKMergeableDelta set_data:]
  -[CKMergeableDelta initWithAtomBatch:error:]


CKSyncEngineMetadata : NSObject <NSSecureCoding>
 @property  NSMutableDictionary *serverChangeTokensByZoneID
 @property  NSMutableOrderedSet *fakeRecordIDsToSaveForSerializationTests
 @property  NSMutableOrderedSet *fakeRecordIDsToDeleteForSerializationTests
 @property  NSMutableDictionary *fakeZonesToSaveForSerializationTests
 @property  CKRecordID *mockNextKnownUserRecordID
 @property  BOOL useMockNextKnownUserRecordID
 @property  unsigned long changeCount
 @property  BOOL needsToFetchDatabaseChanges
 @property  CKServerChangeToken *serverChangeTokenForDatabase
 @property  BOOL needsToSaveDatabaseSubscription
 @property  NSArray *zoneIDsNeedingToFetchChanges
 @property  NSArray *zoneIDsToSave
 @property  NSArray *zoneIDsToDelete
 @property  NSArray *pendingRecordModifications
 @property  NSArray *inFlightRecordModifications
 @property  CKRecordID *lastKnownUserRecordID
 @property  BOOL didPerformInitialUserRecordIDFetch
 @property  BOOL hasPendingAdopterTrackedModifications
 @property  BOOL hasInFlightAdopterTrackedModifications

  // class methods
  +[CKSyncEngineMetadata supportsSecureCoding]

  // instance methods
  -[CKSyncEngineMetadata recordIDsToDelete]
  -[CKSyncEngineMetadata changeCount]
  -[CKSyncEngineMetadata recordIDsToSave]
  -[CKSyncEngineMetadata removePendingRecordModifications:]
  -[CKSyncEngineMetadata setNeedsToSaveDatabaseSubscription:]
  -[CKSyncEngineMetadata useMockNextKnownUserRecordID]
  -[CKSyncEngineMetadata fakeRecordIDsToSaveForSerializationTests]
  -[CKSyncEngineMetadata needsToDeleteZoneID:]
  -[CKSyncEngineMetadata needsToSaveDatabaseSubscription]
  -[CKSyncEngineMetadata hasInFlightAdopterTrackedModifications]
  -[CKSyncEngineMetadata getDataRepresentation:]
  -[CKSyncEngineMetadata lastKnownUserRecordID]
  -[CKSyncEngineMetadata initWithData:error:]
  -[CKSyncEngineMetadata setNeedsToDelete:zoneIDs:]
  -[CKSyncEngineMetadata encodeWithCoder:]
  -[CKSyncEngineMetadata setNeedsToSave:zoneIDs:]
  -[CKSyncEngineMetadata setUseMockNextKnownUserRecordID:]
  -[CKSyncEngineMetadata needsToFetchDatabaseChanges]
  -[CKSyncEngineMetadata .cxx_destruct]
  -[CKSyncEngineMetadata setLastKnownUserRecordID:]
  -[CKSyncEngineMetadata setMockNextKnownUserRecordID:]
  -[CKSyncEngineMetadata removeInFlightRecordModifications:]
  -[CKSyncEngineMetadata inFlightRecordModifications]
  -[CKSyncEngineMetadata serverChangeTokenForDatabase]
  -[CKSyncEngineMetadata setNeedsToFetchDatabaseChanges:]
  -[CKSyncEngineMetadata setFakeRecordIDsToSaveForSerializationTests:]
  -[CKSyncEngineMetadata setHasInFlightAdopterTrackedModifications:]
  -[CKSyncEngineMetadata pendingRecordIDsWithModificationType:]
  -[CKSyncEngineMetadata zoneIDsNeedingToFetchChanges]
  -[CKSyncEngineMetadata addPendingRecordModifications:]
  -[CKSyncEngineMetadata zoneIDsToDelete]
  -[CKSyncEngineMetadata setServerChangeTokensByZoneID:]
  -[CKSyncEngineMetadata pendingRecordModifications]
  -[CKSyncEngineMetadata setHasPendingAdopterTrackedModifications:]
  -[CKSyncEngineMetadata zoneIDsToSave]
  -[CKSyncEngineMetadata setNeedsToFetchChanges:forRecordZoneID:]
  -[CKSyncEngineMetadata needsToSaveZoneID:]
  -[CKSyncEngineMetadata markRecordModifications:inFlight:]
  -[CKSyncEngineMetadata serverChangeTokensByZoneID]
  -[CKSyncEngineMetadata mockNextKnownUserRecordID]
  -[CKSyncEngineMetadata didPerformInitialUserRecordIDFetch]
  -[CKSyncEngineMetadata fakeRecordIDsToDeleteForSerializationTests]
  -[CKSyncEngineMetadata fakeZonesToSaveForSerializationTests]
  -[CKSyncEngineMetadata setServerChangeTokenForDatabase:]
  -[CKSyncEngineMetadata CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKSyncEngineMetadata hasPendingAdopterTrackedModifications]
  -[CKSyncEngineMetadata needsToFetchChangesForZoneID:]
  -[CKSyncEngineMetadata serverChangeTokenForRecordZoneID:]
  -[CKSyncEngineMetadata setServerChangeToken:forRecordZoneID:]
  -[CKSyncEngineMetadata init]
  -[CKSyncEngineMetadata setDidPerformInitialUserRecordIDFetch:]
  -[CKSyncEngineMetadata setFakeZonesToSaveForSerializationTests:]
  -[CKSyncEngineMetadata setFakeRecordIDsToDeleteForSerializationTests:]
  -[CKSyncEngineMetadata initWithCoder:]


CKSyncEngineRecordModification : NSObject <NSSecureCoding, NSCopying>
 @property  CKRecordID *recordID
 @property  long long type

  // class methods
  +[CKSyncEngineRecordModification supportsSecureCoding]
  +[CKSyncEngineRecordModification recordModificationsWithOppositeTypeFromRecordModifications:]

  // instance methods
  -[CKSyncEngineRecordModification recordID]
  -[CKSyncEngineRecordModification encodeWithCoder:]
  -[CKSyncEngineRecordModification type]
  -[CKSyncEngineRecordModification .cxx_destruct]
  -[CKSyncEngineRecordModification oppositeTypeModification]
  -[CKSyncEngineRecordModification initWithRecordID:type:]
  -[CKSyncEngineRecordModification copyWithZone:]
  -[CKSyncEngineRecordModification CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKSyncEngineRecordModification isEqual:]
  -[CKSyncEngineRecordModification initWithCoder:]


CKObjectDescription : NSObject
 @property  BOOL redact
 @property  BOOL avoidShortDescription
 @property  NSString *descriptionPrefix
 @property  CKOrderedDictionary *orderedDictionary
 @property  BOOL printAsDictionary

  // instance methods
  -[CKObjectDescription unorderedDictionary]
  -[CKObjectDescription initWithObject:redact:avoidShortDescription:]
  -[CKObjectDescription addFlagsForKey:flagsAndConditions:]
  -[CKObjectDescription addProperty:value:shouldRedact:]
  -[CKObjectDescription setOrderedDictionary:]
  -[CKObjectDescription orderedDictionary]
  -[CKObjectDescription _propertyDescriptionForProperty:shouldRedact:]
  -[CKObjectDescription initWithObject:redact:]
  -[CKObjectDescription addPropertyIfExists:value:shouldRedact:]
  -[CKObjectDescription printAsDictionary]
  -[CKObjectDescription _dictionaryDescription:shouldRedact:]
  -[CKObjectDescription _arrayDescription:shouldRedact:]
  -[CKObjectDescription _addProperty:value:shouldRedact:]
  -[CKObjectDescription .cxx_destruct]
  -[CKObjectDescription redact]
  -[CKObjectDescription avoidShortDescription]
  -[CKObjectDescription setDescriptionPrefix:]
  -[CKObjectDescription setPrintAsDictionary:]
  -[CKObjectDescription descriptionPrefix]


CKOrderedDictionary : NSObject
 @property  unsigned long count

  // class methods
  +[CKOrderedDictionary orderedDictionary]
  +[CKOrderedDictionary orderedDictionaryWithCapacity:]

  // instance methods
  -[CKOrderedDictionary enumerateKeysAndObjectsUsingBlock:]
  -[CKOrderedDictionary initWithCapacity:]
  -[CKOrderedDictionary dictionaryRepresentationRecursive:]
  -[CKOrderedDictionary .cxx_destruct]
  -[CKOrderedDictionary count]
  -[CKOrderedDictionary addObject:forKey:]
  -[CKOrderedDictionary init]


CKRecordID : NSObject <CKXPCSuitableString, CKPropertiesDescription, CKSQLiteItem, NSSecureCoding, NSCopying>
 @property  NSString *recordName
 @property  CKRecordZoneID *zoneID
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKRecordID supportsSecureCoding]
  +[CKRecordID isValidRecordName:outError:]

  // instance methods
  -[CKRecordID initWithSqliteRepresentation:]
  -[CKRecordID ckShortDescription]
  -[CKRecordID CKDescribePropertiesUsing:]
  -[CKRecordID sqliteRepresentation]
  -[CKRecordID encodeWithCoder:]
  -[CKRecordID zoneID]
  -[CKRecordID .cxx_destruct]
  -[CKRecordID ck_bindInStatement:atIndex:]
  -[CKRecordID size]
  -[CKRecordID copyWithZone:]
  -[CKRecordID redactedDescription]
  -[CKRecordID isEqual:]
  -[CKRecordID recordName]
  -[CKRecordID init]
  -[CKRecordID initWithCoder:]
  -[CKRecordID initWithRecordName:zoneID:]
  -[CKRecordID CKShortDescriptionRedact:]
  -[CKRecordID CKXPCSuitableString]
  -[CKRecordID initWithRecordName:]
  -[CKRecordID isEqualIgnoringAnonymousUserIDsToRecordID:]
  -[CKRecordID _nilOutRecordName]
  -[CKRecordID compareToRecordID:]


CKRecordZone : NSObject <CKPropertiesDescription, CKContainerAssignment, NSSecureCoding, NSCopying>
 @property  BOOL hasUpdatedExpirationTimeInterval
 @property  NSNumber *updatedExpirationTimeInterval
 @property  int deviceCount
 @property  CKServerChangeToken *currentServerChangeToken
 @property  NSData *clientChangeToken
 @property  NSData *protectionData
 @property  NSString *protectionEtag
 @property  NSData *zoneishProtectionData
 @property  NSData *pcsKeyID
 @property  NSData *zoneishKeyID
 @property  CKReference *share
 @property  BOOL needsZoneishPCSRolled
 @property  BOOL zoneKeyRollAllowed
 @property  NSString *zonePCSLastModifierDevice
 @property  NSString *previousProtectionEtag
 @property  long long assetQuotaUsage
 @property  long long metadataQuotaUsage
 @property  NSDate *zonePCSModificationDate
 @property  BOOL serializeProtectionData
 @property  NSArray *invitedKeysToRemove
 @property  NSDate *expirationDate
 @property  BOOL expired
 @property  CKRecordZoneID *zoneID
 @property  unsigned long capabilities
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKRecordZone supportsSecureCoding]
  +[CKRecordZone systemRecordZone]
  +[CKRecordZone defaultRecordZone]

  // instance methods
  -[CKRecordZone clientChangeToken]
  -[CKRecordZone assetQuotaUsage]
  -[CKRecordZone setAssetQuotaUsage:]
  -[CKRecordZone pcsKeyID]
  -[CKRecordZone metadataQuotaUsage]
  -[CKRecordZone setClientChangeToken:]
  -[CKRecordZone setPcsKeyID:]
  -[CKRecordZone zoneKeyRollAllowed]
  -[CKRecordZone initWithZoneName:]
  -[CKRecordZone CKDescribePropertiesUsing:]
  -[CKRecordZone initWithZoneID:]
  -[CKRecordZone share]
  -[CKRecordZone expirationDate]
  -[CKRecordZone setZonePCSModificationDate:]
  -[CKRecordZone setNeedsZoneishPCSRolled:]
  -[CKRecordZone setHasUpdatedExpirationTimeInterval:]
  -[CKRecordZone setExpirationDate:]
  -[CKRecordZone encodeWithCoder:]
  -[CKRecordZone deviceCount]
  -[CKRecordZone zoneID]
  -[CKRecordZone zoneishKeyID]
  -[CKRecordZone setUpdatedExpirationTimeInterval:]
  -[CKRecordZone setPreviousProtectionEtag:]
  -[CKRecordZone protectionData]
  -[CKRecordZone zonePCSLastModifierDevice]
  -[CKRecordZone setInvitedKeysToRemove:]
  -[CKRecordZone currentServerChangeToken]
  -[CKRecordZone setShare:]
  -[CKRecordZone serializeProtectionData]
  -[CKRecordZone .cxx_destruct]
  -[CKRecordZone hasUpdatedExpirationTimeInterval]
  -[CKRecordZone setProtectionEtag:]
  -[CKRecordZone capabilities]
  -[CKRecordZone setZoneID:]
  -[CKRecordZone previousProtectionEtag]
  -[CKRecordZone setDeviceCount:]
  -[CKRecordZone setExpired:]
  -[CKRecordZone setSerializeProtectionData:]
  -[CKRecordZone updatedExpirationTimeInterval]
  -[CKRecordZone zoneishProtectionData]
  -[CKRecordZone setZonePCSLastModifierDevice:]
  -[CKRecordZone copyWithZone:]
  -[CKRecordZone setCapabilities:]
  -[CKRecordZone needsZoneishPCSRolled]
  -[CKRecordZone zonePCSModificationDate]
  -[CKRecordZone setExpirationAfterTimeInterval:]
  -[CKRecordZone invitedKeysToRemove]
  -[CKRecordZone isExpired]
  -[CKRecordZone setProtectionData:]
  -[CKRecordZone redactedDescription]
  -[CKRecordZone setZoneishProtectionData:]
  -[CKRecordZone protectionEtag]
  -[CKRecordZone setZoneKeyRollAllowed:]
  -[CKRecordZone setMetadataQuotaUsage:]
  -[CKRecordZone setZoneishKeyID:]
  -[CKRecordZone CKAssignToContainerWithID:]
  -[CKRecordZone initWithCoder:]
  -[CKRecordZone setCurrentServerChangeToken:]


CKOperationInMemoryAssetInfo : NSObject
 @property  NSMutableData *assetContent
 @property  NSMutableIndexSet *byteRanges

  // instance methods
  -[CKOperationInMemoryAssetInfo isContiguous]
  -[CKOperationInMemoryAssetInfo .cxx_destruct]
  -[CKOperationInMemoryAssetInfo init]
  -[CKOperationInMemoryAssetInfo assetContent]
  -[CKOperationInMemoryAssetInfo setAssetContent:]
  -[CKOperationInMemoryAssetInfo writeData:atOffset:]
  -[CKOperationInMemoryAssetInfo assetContentWithError:expectedSignature:]
  -[CKOperationInMemoryAssetInfo byteRanges]
  -[CKOperationInMemoryAssetInfo setByteRanges:]


CKSystemSharingUIObserver : NSObject
 @property  NSObject<OS_dispatch_queue> *callbackQueue
 @property  CKContainer *container
 @property  @? systemSharingUIDidSaveShareBlock
 @property  @? systemSharingUIDidStopSharingBlock

  // instance methods
  -[CKSystemSharingUIObserver initWithContainer:]
  -[CKSystemSharingUIObserver setContainer:]
  -[CKSystemSharingUIObserver systemSharingUIDidStopSharingBlock]
  -[CKSystemSharingUIObserver handleSharingUIUpdatedShare:recordID:isDeleted:error:]
  -[CKSystemSharingUIObserver setSystemSharingUIDidStopSharingBlock:]
  -[CKSystemSharingUIObserver _locked_handleSharingUIUpdatedShare:recordID:isDeleted:error:]
  -[CKSystemSharingUIObserver setCallbackQueue:]
  -[CKSystemSharingUIObserver callbackQueue]
  -[CKSystemSharingUIObserver .cxx_destruct]
  -[CKSystemSharingUIObserver container]
  -[CKSystemSharingUIObserver systemSharingUIDidSaveShareBlock]
  -[CKSystemSharingUIObserver setSystemSharingUIDidSaveShareBlock:]


CKWeakObjectCallbackProxy : NSObject
 @property  id weakObject
 @property  Protocol *callbackProtocol
 @property  BOOL hadObject

  // instance methods
  -[CKWeakObjectCallbackProxy initWithWeakObject:callbackProtocol:]
  -[CKWeakObjectCallbackProxy methodSignatureForSelector:]
  -[CKWeakObjectCallbackProxy setWeakObject:]
  -[CKWeakObjectCallbackProxy .cxx_destruct]
  -[CKWeakObjectCallbackProxy setHadObject:]
  -[CKWeakObjectCallbackProxy weakObject]
  -[CKWeakObjectCallbackProxy callbackProtocol]
  -[CKWeakObjectCallbackProxy setCallbackProtocol:]
  -[CKWeakObjectCallbackProxy forwardInvocation:]
  -[CKWeakObjectCallbackProxy hadObject]


CKStreamingAsset : NSObject <CKRecordValue, NSSecureCoding, NSCopying>
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription
 @property  NSData *fileSignature
 @property  NSData *referenceSignature
 @property  NSString *owner
 @property  unsigned long expectedSizeBytes
 @property  NSURL *uploadURL
 @property  NSDate *uploadURLExpirationDate
 @property  unsigned long reservedSize
 @property  C2RequestOptions *requestOptions
 @property  NSURL *downloadURL
 @property  NSDate *downloadURLExpirationDate
 @property  unsigned long size
 @property  BOOL hasSize
 @property  NSString *uploadReceipt
 @property  unsigned long bytesUploaded
 @property  unsigned long bytesUpperBound
 @property  NSURL *contentDownloadURL
 @property  NSDate *contentDownloadURLExpirationDate

  // class methods
  +[CKStreamingAsset supportsSecureCoding]

  // instance methods
  -[CKStreamingAsset hasSize]
  -[CKStreamingAsset owner]
  -[CKStreamingAsset setHasSize:]
  -[CKStreamingAsset setOwner:]
  -[CKStreamingAsset setFileSignature:]
  -[CKStreamingAsset encodeWithCoder:]
  -[CKStreamingAsset fileSignature]
  -[CKStreamingAsset .cxx_destruct]
  -[CKStreamingAsset referenceSignature]
  -[CKStreamingAsset requestOptions]
  -[CKStreamingAsset downloadURL]
  -[CKStreamingAsset size]
  -[CKStreamingAsset setDownloadURL:]
  -[CKStreamingAsset bytesUploaded]
  -[CKStreamingAsset copyWithZone:]
  -[CKStreamingAsset uploadReceipt]
  -[CKStreamingAsset CKDescriptionPropertiesWithPublic:private:shouldExpand:]
  -[CKStreamingAsset _initBare]
  -[CKStreamingAsset setSize:]
  -[CKStreamingAsset setReferenceSignature:]
  -[CKStreamingAsset setUploadReceipt:]
  -[CKStreamingAsset init]
  -[CKStreamingAsset setUploadURL:]
  -[CKStreamingAsset initWithCoder:]
  -[CKStreamingAsset uploadURL]
  -[CKStreamingAsset initWithExpectedSizeBytes:]
  -[CKStreamingAsset copyServerFieldsFromStreamingAsset:]
  -[CKStreamingAsset contentDownloadURL]
  -[CKStreamingAsset contentDownloadURLExpirationDate]
  -[CKStreamingAsset bytesUpperBound]
  -[CKStreamingAsset expectedSizeBytes]
  -[CKStreamingAsset setExpectedSizeBytes:]
  -[CKStreamingAsset uploadURLExpirationDate]
  -[CKStreamingAsset setUploadURLExpirationDate:]
  -[CKStreamingAsset reservedSize]
  -[CKStreamingAsset setReservedSize:]
  -[CKStreamingAsset setRequestOptions:]
  -[CKStreamingAsset downloadURLExpirationDate]
  -[CKStreamingAsset setDownloadURLExpirationDate:]


CKFetchShareParticipantsOperation : CKOperation <CKFetchShareParticipantsOperationCallbacks>
 @property  NSMutableSet *discoveredUserIdentities
 @property  NSMutableDictionary *lookupErrors
 @property  <CKFetchShareParticipantsOperationCallbacks> *clientOperationCallbackProxy
 @property  CKFetchShareParticipantsOperationInfo *operationInfo
 @property  NSArray *userIdentityLookupInfos
 @property  @? shareParticipantFetchedBlock
 @property  @? perShareParticipantCompletionBlock
 @property  @? fetchShareParticipantsCompletionBlock

  // class methods
  +[CKFetchShareParticipantsOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchShareParticipantsOperation activityCreate]
  -[CKFetchShareParticipantsOperation _finishOnCallbackQueueWithError:]
  -[CKFetchShareParticipantsOperation .cxx_destruct]
  -[CKFetchShareParticipantsOperation hasCKOperationCallbacksSet]
  -[CKFetchShareParticipantsOperation performCKOperation]
  -[CKFetchShareParticipantsOperation fillFromOperationInfo:]
  -[CKFetchShareParticipantsOperation CKOperationShouldRun:]
  -[CKFetchShareParticipantsOperation fillOutOperationInfo:]
  -[CKFetchShareParticipantsOperation init]
  -[CKFetchShareParticipantsOperation setFetchShareParticipantsCompletionBlock:]
  -[CKFetchShareParticipantsOperation initWithUserIdentityLookupInfos:]
  -[CKFetchShareParticipantsOperation setPerShareParticipantCompletionBlock:]
  -[CKFetchShareParticipantsOperation perShareParticipantCompletionBlock]
  -[CKFetchShareParticipantsOperation fetchShareParticipantsCompletionBlock]
  -[CKFetchShareParticipantsOperation handleShareParticipantFetchForLookupInfo:shareParticipant:error:]
  -[CKFetchShareParticipantsOperation setShareParticipantFetchedBlock:]
  -[CKFetchShareParticipantsOperation shareParticipantFetchedBlock]
  -[CKFetchShareParticipantsOperation setFetchShareParticipantsCompletionBlockIVar:]
  -[CKFetchShareParticipantsOperation userIdentityLookupInfos]
  -[CKFetchShareParticipantsOperation setUserIdentityLookupInfos:]
  -[CKFetchShareParticipantsOperation discoveredUserIdentities]
  -[CKFetchShareParticipantsOperation setDiscoveredUserIdentities:]
  -[CKFetchShareParticipantsOperation lookupErrors]
  -[CKFetchShareParticipantsOperation setLookupErrors:]


CKFetchShareParticipantsOperationInfo : CKOperationInfo <NSSecureCoding>
 @property  NSArray *userIdentityLookupInfos

  // class methods
  +[CKFetchShareParticipantsOperationInfo supportsSecureCoding]

  // instance methods
  -[CKFetchShareParticipantsOperationInfo encodeWithCoder:]
  -[CKFetchShareParticipantsOperationInfo .cxx_destruct]
  -[CKFetchShareParticipantsOperationInfo initWithCoder:]
  -[CKFetchShareParticipantsOperationInfo userIdentityLookupInfos]
  -[CKFetchShareParticipantsOperationInfo setUserIdentityLookupInfos:]


CKFetchUserQuotaOperation : CKDatabaseOperation <CKFetchUserQuotaOperationCallbacks>
 @property  unsigned long quotaAvailable
 @property  <CKFetchUserQuotaOperationCallbacks> *clientOperationCallbackProxy
 @property  @? fetchUserQuotaCompletionBlock

  // class methods
  +[CKFetchUserQuotaOperation daemonCallbackCompletionSelector]
  +[CKFetchUserQuotaOperation applyDaemonCallbackInterfaceTweaks:]

  // instance methods
  -[CKFetchUserQuotaOperation activityCreate]
  -[CKFetchUserQuotaOperation _finishOnCallbackQueueWithError:]
  -[CKFetchUserQuotaOperation setQuotaAvailable:]
  -[CKFetchUserQuotaOperation .cxx_destruct]
  -[CKFetchUserQuotaOperation hasCKOperationCallbacksSet]
  -[CKFetchUserQuotaOperation quotaAvailable]
  -[CKFetchUserQuotaOperation performCKOperation]
  -[CKFetchUserQuotaOperation init]
  -[CKFetchUserQuotaOperation handleOperationDidCompleteWithQuotaAvailable:metrics:error:]
  -[CKFetchUserQuotaOperation setFetchUserQuotaCompletionBlock:]
  -[CKFetchUserQuotaOperation fetchUserQuotaCompletionBlock]


CKSyncEngineConfiguration : NSObject <CKPropertiesDescription>
 @property  BOOL ignoreSystemConditions
 @property  BOOL useUniqueActivityIdentifiers
 @property  NSString *apsMachServiceName
 @property  long long priority
 @property  BOOL automaticSyncingEnabled
 @property  BOOL continueModifyingPendingChangesAfterFailure
 @property  BOOL allowFetchAndModifyConcurrently
 @property  NSObject<OS_xpc_object> *xpcActivityCriteriaOverrides
 @property  CKDatabase *database
 @property  <CKSyncEngineDataSource> *dataSource
 @property  NSData *metadata
 @property  NSString *databaseSubscriptionIDOverride
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKSyncEngineConfiguration apsMachServiceName]
  -[CKSyncEngineConfiguration CKDescribePropertiesUsing:]
  -[CKSyncEngineConfiguration allowFetchAndModifyConcurrently]
  -[CKSyncEngineConfiguration databaseSubscriptionIDOverride]
  -[CKSyncEngineConfiguration setAllowFetchAndModifyConcurrently:]
  -[CKSyncEngineConfiguration setApsMachServiceName:]
  -[CKSyncEngineConfiguration continueModifyingPendingChangesAfterFailure]
  -[CKSyncEngineConfiguration setPriority:]
  -[CKSyncEngineConfiguration setContinueModifyingPendingChangesAfterFailure:]
  -[CKSyncEngineConfiguration setDatabaseSubscriptionIDOverride:]
  -[CKSyncEngineConfiguration xpcActivityCriteriaOverrides]
  -[CKSyncEngineConfiguration setAutomaticSyncingEnabled:]
  -[CKSyncEngineConfiguration setXpcActivityCriteriaOverrides:]
  -[CKSyncEngineConfiguration dataSource]
  -[CKSyncEngineConfiguration initWithDatabase:dataSource:metadata:]
  -[CKSyncEngineConfiguration setIgnoreSystemConditions:]
  -[CKSyncEngineConfiguration setDatabase:]
  -[CKSyncEngineConfiguration .cxx_destruct]
  -[CKSyncEngineConfiguration setUseUniqueActivityIdentifiers:]
  -[CKSyncEngineConfiguration setMetadata:]
  -[CKSyncEngineConfiguration useUniqueActivityIdentifiers]
  -[CKSyncEngineConfiguration database]
  -[CKSyncEngineConfiguration ignoreSystemConditions]
  -[CKSyncEngineConfiguration setDataSource:]
  -[CKSyncEngineConfiguration priority]
  -[CKSyncEngineConfiguration automaticSyncingEnabled]
  -[CKSyncEngineConfiguration metadata]
  -[CKSyncEngineConfiguration redactedDescription]
  -[CKSyncEngineConfiguration init]


CKCodeProto2Any : PBCodable <NSCopying>
 @property  BOOL hasTypeUrl
 @property  NSString *typeUrl
 @property  BOOL hasValue
 @property  NSData *value

  // instance methods
  -[CKCodeProto2Any copyTo:]
  -[CKCodeProto2Any .cxx_destruct]
  -[CKCodeProto2Any hasValue]
  -[CKCodeProto2Any mergeFrom:]
  -[CKCodeProto2Any setValue:]
  -[CKCodeProto2Any dictionaryRepresentation]
  -[CKCodeProto2Any copyWithZone:]
  -[CKCodeProto2Any value]
  -[CKCodeProto2Any readFrom:]
  -[CKCodeProto2Any writeTo:]
  -[CKCodeProto2Any isEqual:]
  -[CKCodeProto2Any hasTypeUrl]
  -[CKCodeProto2Any typeUrl]
  -[CKCodeProto2Any setTypeUrl:]


CKXPCConnection : NSObject <CKXPCConnectionMuxer>
 @property  NSXPCConnection *connection

  // class methods
  +[CKXPCConnection CKXPCDaemonToClientMuxerInterface]
  +[CKXPCConnection CKXPCClientToDaemonMuxerInterface]
  +[CKXPCConnection sharedXPCConnection]

  // instance methods
  -[CKXPCConnection resetConnection]
  -[CKXPCConnection getLogicalDeviceScopedDaemonProxyCreatorForTestDeviceReference:synchronous:completionHandler:]
  -[CKXPCConnection getLogicalDeviceScopedClientProxyCreatorForTestDeviceReference:completionHandler:]
  -[CKXPCConnection .cxx_destruct]
  -[CKXPCConnection connection]
  -[CKXPCConnection getContainerScopedDaemonProxyCreatorForContainerSetupInfo:exportedProxy:synchronous:completionHandler:]
  -[CKXPCConnection getTestAdminDaemonProxyCreatorSynchronous:completionHandler:]
  -[CKXPCConnection getProcessScopedClientProxyCreatorWithCompletionHandler:]
  -[CKXPCConnection getProcessScopedDaemonProxyCreatorSynchronous:completionHandler:]
  -[CKXPCConnection _init]


CKServerChangeToken : NSObject <NSCopying, NSSecureCoding>
 @property  NSData *data

  // class methods
  +[CKServerChangeToken supportsSecureCoding]

  // instance methods
  -[CKServerChangeToken encodeWithCoder:]
  -[CKServerChangeToken .cxx_destruct]
  -[CKServerChangeToken setData:]
  -[CKServerChangeToken copyWithZone:]
  -[CKServerChangeToken initWithData:]
  -[CKServerChangeToken isEqual:]
  -[CKServerChangeToken init]
  -[CKServerChangeToken data]
  -[CKServerChangeToken initWithCoder:]
  -[CKServerChangeToken CKPropertiesDescription]


CKReplaceMergeableDeltasOperation : CKDatabaseOperation <CKReplaceMergeableDeltasOperationCallbacks>
 @property  NSMutableDictionary *perValueErrors
 @property  <CKReplaceMergeableDeltasOperationCallbacks> *clientOperationCallbackProxy
 @property  CKReplaceMergeableDeltasOperationInfo *operationInfo
 @property  NSArray *replaceDeltasRequests
 @property  @? perReplacementBlock
 @property  @? replaceMergeableDeltasCompletionBlock

  // instance methods
  -[CKReplaceMergeableDeltasOperation activityCreate]
  -[CKReplaceMergeableDeltasOperation _finishOnCallbackQueueWithError:]
  -[CKReplaceMergeableDeltasOperation .cxx_destruct]
  -[CKReplaceMergeableDeltasOperation hasCKOperationCallbacksSet]
  -[CKReplaceMergeableDeltasOperation performCKOperation]
  -[CKReplaceMergeableDeltasOperation fillFromOperationInfo:]
  -[CKReplaceMergeableDeltasOperation CKOperationShouldRun:]
  -[CKReplaceMergeableDeltasOperation fillOutOperationInfo:]
  -[CKReplaceMergeableDeltasOperation perValueErrors]
  -[CKReplaceMergeableDeltasOperation setPerValueErrors:]
  -[CKReplaceMergeableDeltasOperation handleCompletedReplaceDeltasRequest:error:]
  -[CKReplaceMergeableDeltasOperation setPerReplacementBlock:]
  -[CKReplaceMergeableDeltasOperation perReplacementBlock]
  -[CKReplaceMergeableDeltasOperation setReplaceMergeableDeltasCompletionBlock:]
  -[CKReplaceMergeableDeltasOperation replaceMergeableDeltasCompletionBlock]
  -[CKReplaceMergeableDeltasOperation initWithReplaceDeltasRequests:]
  -[CKReplaceMergeableDeltasOperation replaceDeltasRequests]
  -[CKReplaceMergeableDeltasOperation setReplaceDeltasRequests:]


CKReplaceMergeableDeltasOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
 @property  NSArray *replaceDeltasRequests

  // class methods
  +[CKReplaceMergeableDeltasOperationInfo supportsSecureCoding]

  // instance methods
  -[CKReplaceMergeableDeltasOperationInfo encodeWithCoder:]
  -[CKReplaceMergeableDeltasOperationInfo .cxx_destruct]
  -[CKReplaceMergeableDeltasOperationInfo initWithCoder:]
  -[CKReplaceMergeableDeltasOperationInfo replaceDeltasRequests]
  -[CKReplaceMergeableDeltasOperationInfo setReplaceDeltasRequests:]


CKReplaceDeltasRequest : NSObject <CKPropertiesDescription, NSSecureCoding, NSCopying>
 @property  CKMergeableValueID *valueID
 @property  NSArray *deltaIdentifiersToReplace
 @property  NSArray *replacementDeltas
 @property  BOOL replacementDeltasContainNewData
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // class methods
  +[CKReplaceDeltasRequest supportsSecureCoding]

  // instance methods
  -[CKReplaceDeltasRequest CKDescribePropertiesUsing:]
  -[CKReplaceDeltasRequest encodeWithCoder:]
  -[CKReplaceDeltasRequest .cxx_destruct]
  -[CKReplaceDeltasRequest copyWithZone:]
  -[CKReplaceDeltasRequest redactedDescription]
  -[CKReplaceDeltasRequest isEqual:]
  -[CKReplaceDeltasRequest init]
  -[CKReplaceDeltasRequest initWithCoder:]
  -[CKReplaceDeltasRequest valueID]
  -[CKReplaceDeltasRequest setValueID:]
  -[CKReplaceDeltasRequest deltaIdentifiersToReplace]
  -[CKReplaceDeltasRequest replacementDeltas]
  -[CKReplaceDeltasRequest replacementDeltasContainNewData]
  -[CKReplaceDeltasRequest initWithValueID:deltaIdentifiersToReplace:replacementDeltas:replacementDeltasContainNewData:]
  -[CKReplaceDeltasRequest setDeltaIdentifiersToReplace:]
  -[CKReplaceDeltasRequest setReplacementDeltas:]
  -[CKReplaceDeltasRequest setReplacementDeltasContainNewData:]


CKEventMetric : NSObject <NSSecureCoding>
 @property  NSMutableDictionary *attributes
 @property  NSString *eventName
 @property  NSDate *startTime
 @property  NSDate *endTime
 @property  BOOL isPushTriggerFired

  // class methods
  +[CKEventMetric supportsSecureCoding]

  // instance methods
  -[CKEventMetric setEndTime:]
  -[CKEventMetric initWithEventName:atTime:]
  -[CKEventMetric startTime]
  -[CKEventMetric attributes]
  -[CKEventMetric eventName]
  -[CKEventMetric endTime]
  -[CKEventMetric setObject:forKeyedSubscript:]
  -[CKEventMetric encodeWithCoder:]
  -[CKEventMetric setIsPushTriggerFired:]
  -[CKEventMetric isPushTriggerFired]
  -[CKEventMetric generateEventMetricInfo]
  -[CKEventMetric setStartTime:]
  -[CKEventMetric .cxx_destruct]
  -[CKEventMetric setMetricValue:forKey:]
  -[CKEventMetric objectForKeyedSubscript:]
  -[CKEventMetric initWithEventName:]
  -[CKEventMetric associateWithCompletedOperation:]
  -[CKEventMetric initWithCoder:]


CKEventOperationInfo : NSObject <NSSecureCoding>
 @property  NSString *operationID
 @property  NSString *operationType
 @property  NSString *operationGroupID

  // class methods
  +[CKEventOperationInfo supportsSecureCoding]

  // instance methods
  -[CKEventOperationInfo operationType]
  -[CKEventOperationInfo initWithOperation:]
  -[CKEventOperationInfo encodeWithCoder:]
  -[CKEventOperationInfo .cxx_destruct]
  -[CKEventOperationInfo operationID]
  -[CKEventOperationInfo operationGroupID]
  -[CKEventOperationInfo initWithCoder:]


CKEventOperationGroupInfo : NSObject <NSSecureCoding>
 @property  NSString *operationGroupID
 @property  NSString *operationGroupName

  // class methods
  +[CKEventOperationGroupInfo supportsSecureCoding]

  // instance methods
  -[CKEventOperationGroupInfo operationGroupName]
  -[CKEventOperationGroupInfo encodeWithCoder:]
  -[CKEventOperationGroupInfo .cxx_destruct]
  -[CKEventOperationGroupInfo operationGroupID]
  -[CKEventOperationGroupInfo initWithCoder:]


CKEventMetricInfo : NSObject <NSSecureCoding>
 @property  NSUUID *metricUUID
 @property  BOOL isCKInternalMetric
 @property  BOOL isPushTriggerFired
 @property  BOOL allowsCellularAccess
 @property  BOOL allowsExpensiveNetworkAccess
 @property  BOOL preferAnonymousRequests
 @property  long long databaseScope
 @property  NSString *deviceIdentifier
 @property  NSString *sourceApplicationBundleIdentifier
 @property  NSString *sourceApplicationSecondaryIdentifier
 @property  NSString *applicationBundleIdentifierOverrideForContainerAccess
 @property  NSString *applicationBundleIdentifierOverrideForNetworkAttribution
 @property  NSString *eventName
 @property  NSDate *startTime
 @property  NSDate *endTime
 @property  NSDictionary *attributes
 @property  NSMutableDictionary *associatedOperations
 @property  NSMutableDictionary *associatedOperationGroups

  // class methods
  +[CKEventMetricInfo supportsSecureCoding]

  // instance methods
  -[CKEventMetricInfo allowsExpensiveNetworkAccess]
  -[CKEventMetricInfo sourceApplicationBundleIdentifier]
  -[CKEventMetricInfo allowsCellularAccess]
  -[CKEventMetricInfo applicationBundleIdentifierOverrideForContainerAccess]
  -[CKEventMetricInfo preferAnonymousRequests]
  -[CKEventMetricInfo isCKInternalMetric]
  -[CKEventMetricInfo deviceIdentifier]
  -[CKEventMetricInfo startTime]
  -[CKEventMetricInfo attributes]
  -[CKEventMetricInfo sourceApplicationSecondaryIdentifier]
  -[CKEventMetricInfo eventName]
  -[CKEventMetricInfo endTime]
  -[CKEventMetricInfo metricUUID]
  -[CKEventMetricInfo associatedOperations]
  -[CKEventMetricInfo encodeWithCoder:]
  -[CKEventMetricInfo applicationBundleIdentifierOverrideForNetworkAttribution]
  -[CKEventMetricInfo isPushTriggerFired]
  -[CKEventMetricInfo .cxx_destruct]
  -[CKEventMetricInfo initWithEventMetric:]
  -[CKEventMetricInfo databaseScope]
  -[CKEventMetricInfo associatedOperationGroups]
  -[CKEventMetricInfo initWithCoder:]


CKObject : NSObject <CKPropertyCoding>
 @property  CKObjCClass *objcClass
 @property  NSSet *propertyNamesNotToEncode
 @property  unsigned long hash
 @property  Class superclass
 @property  NSString *description
 @property  NSString *debugDescription

  // instance methods
  -[CKObject dictionaryPropertyEncoding]
  -[CKObject initWithPropertyDictionary:]
  -[CKObject isEqual:]
  -[CKObject objcClass]
  -[CKObject propertyNamesNotToEncode]


CKSQLiteGenericTable : CKSQLiteTable
  // class methods
  +[CKSQLiteGenericTable entryClass]
  +[CKSQLiteGenericTable valueForProperty:inObject:]
  +[CKSQLiteGenericTable setValue:forProperty:inObject:]
  +[CKSQLiteGenericTable uniqueSubclassClassNameForClassName:]
  +[CKSQLiteGenericTable genericTableClassForTOCTableEntry:]
  +[CKSQLiteGenericTable genericTableForTOCEntry:]

  // instance methods
  -[CKSQLiteGenericTable valueForProperty:inObject:]
  -[CKSQLiteGenericTable setValue:forProperty:inObject:]


CKTapToRadarRequest : NSObject
 @property  NSString *title
 @property  NSString *radarDescription
 @property  NSString *uuid
 @property  NSString *componentName
 @property  NSString *componentVersion
 @property  NSString *componentID
 @property  NSString *relatedRadar

  // instance methods
  -[CKTapToRadarRequest componentName]
  -[CKTapToRadarRequest uuid]
  -[CKTapToRadarRequest .cxx_destruct]
  -[CKTapToRadarRequest setUuid:]
  -[CKTapToRadarRequest title]
  -[CKTapToRadarRequest setTitle:]
  -[CKTapToRadarRequest radarDescription]
  -[CKTapToRadarRequest setRadarDescription:]
  -[CKTapToRadarRequest setComponentName:]
  -[CKTapToRadarRequest componentVersion]
  -[CKTapToRadarRequest setComponentVersion:]
  -[CKTapToRadarRequest componentID]
  -[CKTapToRadarRequest setComponentID:]
  -[CKTapToRadarRequest relatedRadar]
  -[CKTapToRadarRequest setRelatedRadar:]


CKTapToRadarManager : NSObject
 @property  NSObject<OS_dispatch_queue> *alertQueue
 @property  NSUserDefaults *userDefaults
 @property  NSMutableDictionary *lastPromptDateByMessageHash

  // class methods
  +[CKTapToRadarManager sharedManager]

  // instance methods
  -[CKTapToRadarManager setUserDefaults:]
  -[CKTapToRadarManager userDefaults]
  -[CKTapToRadarManager .cxx_destruct]
  -[CKTapToRadarManager setAlertQueue:]
  -[CKTapToRadarManager alertQueue]
  -[CKTapToRadarManager _init]
  -[CKTapToRadarManager init]
  -[CKTapToRadarManager _hashForMessage:]
  -[CKTapToRadarManager _lastPromptDateForMessage:]
  -[CKTapToRadarManager _notePromptAttemptForMessage:]
  -[CKTapToRadarManager _launchTTRWithRequest:]
  -[CKTapToRadarManager _lockedTriggerTapToRadarWithRequest:]
  -[CKTapToRadarManager triggerTapToRadarWithRequest:]
  -[CKTapToRadarManager lastPromptDateByMessageHash]
  -[CKTapToRadarManager setLastPromptDateByMessageHash:]


CKDiscoverUserIdentitiesOperation : CKOperation <CKDiscoverUserIdentitiesOperationCallbacks>
 @property  NSMutableSet *discoveredLookupInfos
 @property  <CKDiscoverUserIdentitiesOperationCallbacks> *clientOperationCallbackProxy
 @property  CKDiscoverUserIdentitiesOperationInfo *operationInfo
 @property  NSArray *userIdentityLookupInfos
 @property  @? userIdentityDiscoveredBlock
 @property  @? discoverUserIdentitiesCompletionBlock

  // instance methods
  -[CKDiscoverUserIdentitiesOperation _finishOnCallbackQueueWithError:]
  -[CKDiscoverUserIdentitiesOperation .cxx_destruct]
  -[CKDiscoverUserIdentitiesOperation performCKOperation]
  -[CKDiscoverUserIdentitiesOperation fillFromOperationInfo:]
  -[CKDiscoverUserIdentitiesOperation CKOperationShouldRun:]
  -[CKDiscoverUserIdentitiesOperation fillOutOperationInfo:]
  -[CKDiscoverUserIdentitiesOperation init]
  -[CKDiscoverUserIdentitiesOperation initWithUserIdentityLookupInfos:]
  -[CKDiscoverUserIdentitiesOperation discoverUserIdentitiesCompletionBlock]
  -[CKDiscoverUserIdentitiesOperation setDiscoverUserIdentitiesCompletionBlock:]
  -[CKDiscoverUserIdentitiesOperation setUserIdentityDiscoveredBlock:]
  -[CKDiscoverUserIdentitiesOperation userIdentityDiscoveredBlock]
  -[CKDiscoverUserIdentitiesOperation userIdentityLookupInfos]
  -[CKDiscoverUserIdentitiesOperation setUserIdentityLookupInfos:]
  -[CKDiscoverUserIdentitiesOperation handleUserIdentityDiscoveryForLookupInfo:userIdentity:]
  -[CKDiscoverUserIdentitiesOperation discoveredLookupInfos]
  -[CKDiscoverUserIdentitiesOperation setDiscoveredLookupInfos:]


CKDiscoverUserIdentitiesOperationInfo : CKOperationInfo <NSSecureCoding>
 @property  NSArray *userIdentityLookupInfos

  // class methods
  +[CKDiscoverUserIdentitiesOperationInfo supportsSecureCoding]

  // instance methods
  -[CKDiscoverUserIdentitiesOperationInfo activityCreate]
  -[CKDiscoverUserIdentitiesOperationInfo encodeWithCoder:]
  -[CKDiscoverUserIdentitiesOperationInfo .cxx_destruct]
  -[CKDiscoverUserIdentitiesOperationInfo initWithCoder:]
  -[CKDiscoverUserIdentitiesOperationInfo userIdentityLookupInfos]
  -[CKDiscoverUserIdentitiesOperationInfo setUserIdentityLookupInfos:]


_TtC8CloudKit17AssetStreamHandle(CloudKit)
	// instance methods
	-[_TtC8CloudKit17AssetStreamHandle(CloudKit) size]

(CKSQLiteCompiledStatement)
	// class methods
	+[(CKSQLiteCompiledStatement) CKSQLiteClassName]

	// instance methods
	-[(CKSQLiteCompiledStatement) ck_bindInStatement:atIndex:]
	-[(CKSQLiteCompiledStatement) cksqlcs_appendSQLConstantValueToString:]
	-[(CKSQLiteCompiledStatement) CKDescriptionPropertiesWithPublic:private:shouldExpand:]
	-[(CKSQLiteCompiledStatement) CKAssignToContainerWithID:]
	-[(CKSQLiteCompiledStatement) CKPropertiesDescription]
	-[(CKSQLiteCompiledStatement) cksqlcs_int64BindingValue:]
	-[(CKSQLiteCompiledStatement) cksqlcs_bindInt64:index:db:]
	-[(CKSQLiteCompiledStatement) cksqlcs_doubleBindingValue:]
	-[(CKSQLiteCompiledStatement) cksqlcs_bindDouble:index:db:]
	-[(CKSQLiteCompiledStatement) cksqlcs_textBindingValue:destructor:error:]
	-[(CKSQLiteCompiledStatement) cksqlcs_bindText:index:db:]
	-[(CKSQLiteCompiledStatement) cksqlcs_blobBindingValue:destructor:error:]
	-[(CKSQLiteCompiledStatement) cksqlcs_bindBlob:index:db:]
	-[(CKSQLiteCompiledStatement) cksqlcs_archivedObjectBindingValue:]
	-[(CKSQLiteCompiledStatement) cksqlcs_bindArchivedObject:index:db:]
	-[(CKSQLiteCompiledStatement) CKPropertiesDescriptionStringFromProperties:]
	-[(CKSQLiteCompiledStatement) CKDescription]
	-[(CKSQLiteCompiledStatement) CKExpandedDescription]
	-[(CKSQLiteCompiledStatement) _CKDescriptionWithExpansion:]
	-[(CKSQLiteCompiledStatement) CKHashedDescription]
	-[(CKSQLiteCompiledStatement) CKSingleLineDescription]
	-[(CKSQLiteCompiledStatement) CKUnredactedDescription]
	-[(CKSQLiteCompiledStatement) CKRedactedDescription]
	-[(CKSQLiteCompiledStatement) CKDescriptionRedact:avoidShortDescription:]
	-[(CKSQLiteCompiledStatement) CKObjectDescriptionRedact:]
	-[(CKSQLiteCompiledStatement) CKObjectDescriptionRedact:avoidShortDescription:]

NSNumber(CKSQLiteCompiledStatement)
	// instance methods
	-[NSNumber(CKSQLiteCompiledStatement) ck_bindInStatement:atIndex:]
	-[NSNumber(CKSQLiteCompiledStatement) cksqlcs_appendSQLConstantValueToString:]
	-[NSNumber(CKSQLiteCompiledStatement) cksqlcs_int64BindingValue:]
	-[NSNumber(CKSQLiteCompiledStatement) cksqlcs_doubleBindingValue:]
	-[NSNumber(CKSQLiteCompiledStatement) CKRoundedToMaximumDecimalPlaces:]

(CKSQLiteCompiledStatement)
	// instance methods
	-[(CKSQLiteCompiledStatement) ckShortDescription]
	-[(CKSQLiteCompiledStatement) ck_bindInStatement:atIndex:]
	-[(CKSQLiteCompiledStatement) cksqlcs_appendSQLConstantValueToString:]
	-[(CKSQLiteCompiledStatement) cksqlcs_textBindingValue:destructor:error:]
	-[(CKSQLiteCompiledStatement) CKSafeStringForPathComponent]
	-[(CKSQLiteCompiledStatement) CKSafeHashStringForPathComponent]
	-[(CKSQLiteCompiledStatement) CKSafeStringForURLPathComponent]
	-[(CKSQLiteCompiledStatement) CKSafeStringForURLWithCharsToBeEscaped:]
	-[(CKSQLiteCompiledStatement) CKMangledDocumentNameForURLFragment]
	-[(CKSQLiteCompiledStatement) CKUnmangledDocumentNameFromURLFragment]
	-[(CKSQLiteCompiledStatement) CKSHA256]
	-[(CKSQLiteCompiledStatement) CKSanitizedPath]
	-[(CKSQLiteCompiledStatement) CKNilIfLengthZero]
	-[(CKSQLiteCompiledStatement) CKBase64EncodedURLSafeString]
	-[(CKSQLiteCompiledStatement) CKBase64DecodedString]
	-[(CKSQLiteCompiledStatement) CKStringByReplacingUUIDsWithString:]
	-[(CKSQLiteCompiledStatement) _CKDPIdentifierWithType:]
	-[(CKSQLiteCompiledStatement) CKDPIdentifier_Raw]
	-[(CKSQLiteCompiledStatement) CKDPIdentifier_Record]
	-[(CKSQLiteCompiledStatement) CKDPIdentifier_User]
	-[(CKSQLiteCompiledStatement) CKDPIdentifier_Device]
	-[(CKSQLiteCompiledStatement) CKDPIdentifier_Subscription]
	-[(CKSQLiteCompiledStatement) CKDPIdentifier_ShareId]
	-[(CKSQLiteCompiledStatement) CKDPIdentifier_Zone]
	-[(CKSQLiteCompiledStatement) CKDPIdentifier_MergeableValue]

(CKSQLiteCompiledStatement)
	// instance methods
	-[(CKSQLiteCompiledStatement) cksqlcs_appendSQLConstantValueToString:]
	-[(CKSQLiteCompiledStatement) CKDescriptionPropertiesWithPublic:private:shouldExpand:]
	-[(CKSQLiteCompiledStatement) CKAssignToContainerWithID:]
	-[(CKSQLiteCompiledStatement) CKComponentsAndSubcomponentsJoinedByString:]
	-[(CKSQLiteCompiledStatement) CKShuffledArray]
	-[(CKSQLiteCompiledStatement) CKMap:]
	-[(CKSQLiteCompiledStatement) CKMapWithIndex:]
	-[(CKSQLiteCompiledStatement) CKMapToDictionary:]
	-[(CKSQLiteCompiledStatement) CKCompactMap:]
	-[(CKSQLiteCompiledStatement) CKCompactMapToDictionary:]
	-[(CKSQLiteCompiledStatement) CKFlatMap:]
	-[(CKSQLiteCompiledStatement) CKReduceIntoDictionary:]
	-[(CKSQLiteCompiledStatement) CKCompactReduceIntoDictionary:]
	-[(CKSQLiteCompiledStatement) _CKReduceIntoDictionary:block:]
	-[(CKSQLiteCompiledStatement) CKFilter:]
	-[(CKSQLiteCompiledStatement) CKContains:]
	-[(CKSQLiteCompiledStatement) CKFirstObjectPassingTest:]

(CKSQLiteCompiledStatement)
	// instance methods
	-[(CKSQLiteCompiledStatement) cksqlcs_appendSQLConstantValueToString:]
	-[(CKSQLiteCompiledStatement) CKDescriptionPropertiesWithPublic:private:shouldExpand:]

(CKSQLiteCompiledStatement)
	// instance methods
	-[(CKSQLiteCompiledStatement) cksqlcs_appendSQLConstantValueToString:]
	-[(CKSQLiteCompiledStatement) CKAssignToContainerWithID:]
	-[(CKSQLiteCompiledStatement) CKMap:]

NSExpression(CKSQLiteCompiledStatement)
	// instance methods
	-[NSExpression(CKSQLiteCompiledStatement) cksqlcs_appendSQLToString:statement:]
	-[NSExpression(CKSQLiteCompiledStatement) cksqlcs_isNil]
	-[NSExpression(CKSQLiteCompiledStatement) CKExpressionValue]

NSComparisonPredicate(CKSQLiteCompiledStatement)
	// instance methods
	-[NSComparisonPredicate(CKSQLiteCompiledStatement) cksqlcs_appendSQLToString:statement:]

NSCompoundPredicate(CKSQLiteCompiledStatement)
	// instance methods
	-[NSCompoundPredicate(CKSQLiteCompiledStatement) cksqlcs_appendSQLToString:statement:]

NSCoder(CKSQLiteDatabaseEncoding)
	// instance methods
	-[NSCoder(CKSQLiteDatabaseEncoding) ck_isCodingForCKSQLiteDatabase]
	-[NSCoder(CKSQLiteDatabaseEncoding) ck_isDecodingForCKSQLiteDatabase]

NSError(CKSQLiteErrorTesting)
	// class methods
	+[NSError(CKSQLiteErrorTesting) CKErrorWithPOSIXCode:]
	+[NSError(CKSQLiteErrorTesting) CKErrorFromErrno]

	// instance methods
	-[NSError(CKSQLiteErrorTesting) CK_isCKSQLiteError]
	-[NSError(CKSQLiteErrorTesting) ck_bindInStatement:atIndex:]
	-[NSError(CKSQLiteErrorTesting) CKDescriptionPropertiesWithPublic:private:shouldExpand:]
	-[NSError(CKSQLiteErrorTesting) CKIsPOSIXErrorCode:]
	-[NSError(CKSQLiteErrorTesting) isComparisonError]
	-[NSError(CKSQLiteErrorTesting) CKClientSuitableError]
	-[NSError(CKSQLiteErrorTesting) CKClientSuitableUnderlyingError]
	-[NSError(CKSQLiteErrorTesting) CKClientSuitableErrorSpecificUserInfo]
	-[NSError(CKSQLiteErrorTesting) CKIsNotFoundError]
	-[NSError(CKSQLiteErrorTesting) CKIsObjectNotFoundError]
	-[NSError(CKSQLiteErrorTesting) CKIsCKError]
	-[NSError(CKSQLiteErrorTesting) CKHasCKErrorInChildChain]
	-[NSError(CKSQLiteErrorTesting) CKHasTopLevelUnderlyingError]
	-[NSError(CKSQLiteErrorTesting) CKErrorScopedToZoneIDs:]

(CKSQLiteCompiledStatementBindingValues)
	// class methods
	+[(CKSQLiteCompiledStatementBindingValues) CKDataWithHexString:stringIsUppercase:]
	+[(CKSQLiteCompiledStatementBindingValues) CKDataWithHexString:]
	+[(CKSQLiteCompiledStatementBindingValues) CKDataFromBase64URLSafeString:]

	// instance methods
	-[(CKSQLiteCompiledStatementBindingValues) CKDescribePropertiesUsing:]
	-[(CKSQLiteCompiledStatementBindingValues) ck_bindInStatement:atIndex:]
	-[(CKSQLiteCompiledStatementBindingValues) CKDescriptionPropertiesWithPublic:private:shouldExpand:]
	-[(CKSQLiteCompiledStatementBindingValues) CKLowercaseHexStringWithoutSpaces]
	-[(CKSQLiteCompiledStatementBindingValues) cksqlcs_blobBindingValue:destructor:error:]
	-[(CKSQLiteCompiledStatementBindingValues) CKSHA256]
	-[(CKSQLiteCompiledStatementBindingValues) CKHexString]
	-[(CKSQLiteCompiledStatementBindingValues) CKUppercaseHexStringWithoutSpaces]
	-[(CKSQLiteCompiledStatementBindingValues) CKBase64URLSafeString]
	-[(CKSQLiteCompiledStatementBindingValues) CKHashedDescription]

(CKSQLiteCompiledStatementBindingValues)
	// instance methods
	-[(CKSQLiteCompiledStatementBindingValues) ck_bindInStatement:atIndex:]
	-[(CKSQLiteCompiledStatementBindingValues) cksqlcs_doubleBindingValue:]

NSUUID(CKSQLiteCompiledStatementBindingValues)
	// instance methods
	-[NSUUID(CKSQLiteCompiledStatementBindingValues) ck_bindInStatement:atIndex:]
	-[NSUUID(CKSQLiteCompiledStatementBindingValues) cksqlcs_blobBindingValue:destructor:error:]

(CKSQLiteCompiledStatementBindingValues)
	// instance methods
	-[(CKSQLiteCompiledStatementBindingValues) ck_bindInStatement:atIndex:]
	-[(CKSQLiteCompiledStatementBindingValues) cksqlcs_bindInt64:index:db:]
	-[(CKSQLiteCompiledStatementBindingValues) cksqlcs_bindText:index:db:]
	-[(CKSQLiteCompiledStatementBindingValues) cksqlcs_bindBlob:index:db:]

(CKUtilsAdditions)
	// instance methods
	-[(CKUtilsAdditions) ck_bindInStatement:atIndex:]
	-[(CKUtilsAdditions) CKSanitizedPath]
	-[(CKUtilsAdditions) CKURLSlug]
	-[(CKUtilsAdditions) CKURLThroughSlug]
	-[(CKUtilsAdditions) CKPathAfterSlug]
	-[(CKUtilsAdditions) CKShareURLSlugBasedApplicationName]
	-[(CKUtilsAdditions) CKBladerunnerShareURLSlugBasedApplicationBundleID]
	-[(CKUtilsAdditions) CKXPCSuitableString]

<DEREK BUG Categories!>(CKUtilsAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(CKUtilsAdditions) CKSynchronizedAddIfAbsent:]
	-[<DEREK BUG Categories!>(CKUtilsAdditions) CKSynchronizedRemoveObject:]

<DEREK BUG Categories!>(CKUtilsAdditions)
	// instance methods
	-[<DEREK BUG Categories!>(CKUtilsAdditions) CKSynchronizedSetIfAbsentObject:forKey:]
	-[<DEREK BUG Categories!>(CKUtilsAdditions) CKSynchronizedRemoveObjectForKey:]
	-[<DEREK BUG Categories!>(CKUtilsAdditions) CKAddPropertySafelyForKey:value:]

(CKUtilsAdditions)
	// instance methods
	-[(CKUtilsAdditions) CKDescriptionPropertiesWithPublic:private:shouldExpand:]
	-[(CKUtilsAdditions) CKAssignToContainerWithID:]
	-[(CKUtilsAdditions) CKFirstUrlForKeys:]
	-[(CKUtilsAdditions) CKObjectForKeyCaseInsensitive:]
	-[(CKUtilsAdditions) CKSingleLineDescription]
	-[(CKUtilsAdditions) CKMap:]
	-[(CKUtilsAdditions) CKCompactMap:]
	-[(CKUtilsAdditions) CKFlatMap:]
	-[(CKUtilsAdditions) CKFilter:]
	-[(CKUtilsAdditions) CKMapValues:]
	-[(CKUtilsAdditions) CKCompactMapValues:]
	-[(CKUtilsAdditions) CKMapKeysAndValues:]

CLLocation(CKPropertiesDescription)
	// class methods
	+[CLLocation(CKPropertiesDescription) CKDPLocationCoordinateFromCLLocation:]
	+[CLLocation(CKPropertiesDescription) CKLocationFromPLocationCoordinate:]

	// instance methods
	-[CLLocation(CKPropertiesDescription) CKDescriptionPropertiesWithPublic:private:shouldExpand:]

NSPersonNameComponents(CKPropertiesDescription)
	// instance methods
	-[NSPersonNameComponents(CKPropertiesDescription) CKDescribePropertiesUsing:]
	-[NSPersonNameComponents(CKPropertiesDescription) CKDescriptionPropertiesWithPublic:private:shouldExpand:]
	-[NSPersonNameComponents(CKPropertiesDescription) CKShortDescriptionRedact:]

NSIndexSet(HOF)
	// instance methods
	-[NSIndexSet(HOF) CKMap:]

NSMapTable(HOF)
	// instance methods
	-[NSMapTable(HOF) CKFlatMap:]

NSItemProvider(CKSharingSupport)
	// instance methods
	-[NSItemProvider(CKSharingSupport) registerCKShare:container:allowedSharingOptions:]
	-[NSItemProvider(CKSharingSupport) registerCKShareWithContainer:allowedSharingOptions:preparationHandler:]

NSMethodSignature(CKExtensions)
	// instance methods
	-[NSMethodSignature(CKExtensions) CKReplyBlockHasErrorParameter]

NSInvocation(CKExtensions)
	// class methods
	+[NSInvocation(CKExtensions) invocationToFinishOperationWithInfo:withError:]

	// instance methods
	-[NSInvocation(CKExtensions) CKInvokeAndNilOutReplyBlockWithError:forProtocol:]
	-[NSInvocation(CKExtensions) CKIterateArgumentsForIndexRange:primitiveTypeBlock:objectBlock:blockBlock:]

APSConnection(CKAPSMachServiceConnection)
	// class methods
	+[APSConnection(CKAPSMachServiceConnection) ck_singletonConnectionForEnvironmentName:namedDelegatePort:]

CKMergeableValueID(CloudKit)
	// instance methods
	-[CKMergeableValueID(CloudKit) recordID]
	-[CKMergeableValueID(CloudKit) zoneID]
	-[CKMergeableValueID(CloudKit) key]
	-[CKMergeableValueID(CloudKit) initWithName:zoneID:]
	-[CKMergeableValueID(CloudKit) initWithName:recordID:key:encrypted:]

CKAtomBatch(MergeableDelta)
	// instance methods
	-[CKAtomBatch(MergeableDelta) initWithMergeableDelta:error:]
	-[CKAtomBatch(MergeableDelta) splitWithMaximumDeltaSize:error:]
	-[CKAtomBatch(MergeableDelta) splitWithMaximumDeltaSize:atomic:error:]

01 00 0900 /System/Library/Frameworks/Accounts.framework/Accounts: ACAccountStore 
01 00 0a00 /System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService: APSConnection 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVAssetResourceLoadingRequest 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVPlayerItem 
01 00 0800 /System/Library/Frameworks/AVFoundation.framework/AVFoundation: AVURLAsset 
01 00 0b00 /System/Library/PrivateFrameworks/C2.framework/C2: C2RequestManager 
01 00 0b00 /System/Library/PrivateFrameworks/C2.framework/C2: C2RequestOptions 
01 00 0f00 /System/Library/PrivateFrameworks/CloudKitDistributedSync.framework/CloudKitDistributedSync: CKAtomBatch 
01 00 0f00 /System/Library/PrivateFrameworks/CloudKitDistributedSync.framework/CloudKitDistributedSync: CKDistributedSiteIdentifier 
01 00 0f00 /System/Library/PrivateFrameworks/CloudKitDistributedSync.framework/CloudKitDistributedSync: CKDistributedTimestamp 
01 00 0f00 /System/Library/PrivateFrameworks/CloudKitDistributedSync.framework/CloudKitDistributedSync: CKDistributedTimestampStateVector 
01 00 0f00 /System/Library/PrivateFrameworks/CloudKitDistributedSync.framework/CloudKitDistributedSync: CKMergeableDeltaMetadata 
01 00 0f00 /System/Library/PrivateFrameworks/CloudKitDistributedSync.framework/CloudKitDistributedSync: CKMergeableValueID 
01 00 0d00 /System/Library/Frameworks/CoreLocation.framework/CoreLocation: CLLocation 
01 00 1000 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUState 
01 00 1000 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUStateEvent 
01 00 1000 /System/Library/PrivateFrameworks/CoreUtils.framework/CoreUtils: CUStateMachine 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationExtensionRecord 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationRecord 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSApplicationWorkspace 
01 00 0e00 /System/Library/Frameworks/CoreServices.framework/CoreServices: LSBundleRecord 
01 00 0500 /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration: MCProfileConnection 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSAssertionHandler 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBlockOperation 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSBundle 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSCache 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCharacterSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCoder 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSComparisonPredicate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSCompoundPredicate 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSConstantDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSConstantIntegerNumber 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSData 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSDateFormatter 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSDictionary 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSEnumerator 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSError 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSException 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSExpression 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileHandle 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSFileManager 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHTTPURLResponse 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSHashTable 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSIndexSet 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInputStream 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSInvocation 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSItemProvider 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSJSONSerialization 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedArchiver 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSKeyedUnarchiver 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSLock 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMapTable 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMethodSignature 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableArray 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableData 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableDictionary 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableIndexSet 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableOrderedSet 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSMutableSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSMutableURLRequest 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNotificationCenter 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSNull 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSNumber 
01 00 1900 /usr/lib/libobjc.A.dylib: NSObject 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperation 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSOperationQueue 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSOrderedSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponents 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPersonNameComponentsFormatter 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPointerArray 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPredicate 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSProcessInfo 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSPropertyListSerialization 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSRegularExpression 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSSet 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSSortDescriptor 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSString 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSThread 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSURL 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSURLComponents 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSUUID 
01 00 1b00 /System/Library/Frameworks/CoreFoundation.framework/CoreFoundation: NSUserDefaults 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSValue 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCCoder 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCConnection 
01 00 1200 /System/Library/Frameworks/Foundation.framework/Foundation: NSXPCInterface 
01 00 1a00 /usr/lib/libSystem.B.dylib: OS_dispatch_queue 
01 00 1500 /System/Library/PrivateFrameworks/ProtocolBuffer.framework/ProtocolBuffer: PBCodable 
01 00 1600 /System/Library/Frameworks/PushKit.framework/PushKit: PKPushRegistry 
01 00 0100 /System/Library/PrivateFrameworks/UserManagement.framework/UserManagement: UMUserManager 
01 00 0200 /System/Library/Frameworks/SharedWithYouCore.framework/SharedWithYouCore: _SWCollaborationOption 
01 00 0200 /System/Library/Frameworks/SharedWithYouCore.framework/SharedWithYouCore: _SWCollaborationOptionsGroup 
01 00 0200 /System/Library/Frameworks/SharedWithYouCore.framework/SharedWithYouCore: _SWCollaborationOptionsPickerGroup 
01 00 0200 /System/Library/Frameworks/SharedWithYouCore.framework/SharedWithYouCore: _SWCollaborationShareOptions 
